         TITLE 'IEDSARI: READ, INVITE AND DIAL CONTACT COMMAND PROCESSO*
               OR       '
IEDSARI  CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
*                                           /*
         DC    A(0)      QCB
         DC    A(0)
         DC    AL1(6),AL3(*-1)          STCB
         USING *,RBASE
         LR    RBASE,RLINK
IEDSARI IEDHJN START,HJN
*   RLCB=RPARM;                     /* LCB ADDRRESSABILITY           */
         LR    RLCB,RPARM                                          0530
*   RPARM=LCBTTCIN;                 /* CALL TNT CODE TO              */
         LH    RPARM,LCBTTCIN(,IEDQLPTR)                           0531
         N     RPARM,@CF02305                                      0531
*   CALL IEDQTNT;                   /* DEVELOPE THE                  */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0532
         BALR  @14,@15                                             0532
*   RTRM=RPARM-LENGTH(IEDNTRM);     /* TRM ADDRESS           @YM04622*/
         LR    RTRM,RPARM                                          0533
         SL    RTRM,@CF02008                                       0533
*   IEDQQPTR=TRMDESTQ;              /* QCB ADDRESS           @OZ29885*/
         SLR   @10,@10                                             0534
         ICM   @10,7,TRMDESTQ(RTRM)                                0534
         ST    @10,IEDQQPTR                                        0534
*   SWITCH1=SWITCH1&&SWITCH1;       /* INITILIZE CONTROL SWITCH      */
         XC    SWITCH1(1),SWITCH1                                  0535
*   HDRLEN=LENGTH(IEDRH)+LENGTH(PIU0PAD)+LENGTH(IEDBDU);/* BUILD A 0536
*                                      CONSTANT, EQUAL TO THE MINIMUM
*                                      TTHDCF WHEN NO DATA IS      0536
*                                      RECEIVED. THIS CONSTANT WILL
*                                      BE USED AS A COMPARAND TO   0536
*                                      CHECK FOR PIU'S RECEIVED    0536
*                                      WITHOUT DATA                  */
         MVI   HDRLEN,X'0A'                                        0536
         EJECT
*                                                                  0537
*   /*****************************************************************/
*   /*                                                               */
*   /* DELINK ELEMENTS FROM WAIT CHAIN, SET SESSION AND REPEAT THIS  */
*   /* PROCESS UNTIL WAIT CHAIN IS EMPTY OR THE EXIT SWITCH HAS BEEN */
*   /* SET                                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0537
*   DO UNTIL(EXITSW=ON×             /* EXECUTE THE MAINLINE UNTIL    */
*         LCBWAITC=0);              /* END OF MESSAGE IS REACHED OR
*                                      UNTIL THE WAIT CHAIN IS EMPTY */
@DL00537 DS    0H                                                  0538
*     RETCODE=INITVAL;              /* INITILIZE THE RETURN CODE     */
         MVI   RETCODE,X'FF'                                       0538
*/*                                                                  */
*                                                                  0539
*     RPRF=LCBWAITC;                /* SET BUFFER ADDRESS TO CURRENT
*                                      INPUT                         */
         L     RPRF,LCBWAITC-1(,IEDQLPTR)                          0539
         LA    RPRF,0(,RPRF)                                       0539
*     LCBWAITC=PRFLINK;             /* ADJUST WAIT CHAIN POINTER TO
*                                      NEXT ELEMENT ON CHAIN         */
         MVC   LCBWAITC(3,IEDQLPTR),PRFLINK(IEDQPPTR)              0540
*     PIUPTR=ADDR(PRFPIUO)+PRFPIUO; /* SET PIU PTR TO ADDR OF CURRENT
*                                      PIU                           */
         LA    @09,PRFPIUO(,IEDQPPTR)                              0541
         SLR   @05,@05                                             0541
         IC    @05,PRFPIUO(,IEDQPPTR)                              0541
         ALR   @09,@05                                             0541
         ST    @09,PIUPTR                                          0541
*     BDUPTR=ADDR(PIU0RU);          /* SET BDU ADDRESSABILITY        */
         LA    BDUPTR,PIU0RU(,@09)                                 0542
*/*                                                                  */
*                                                                  0543
*     IF BDUCMND=CD0INV THEN        /* IF THIS IS AN INVITE          */
         CLI   BDUCMND(BDUPTR),X'05'                               0543
         BNE   @RF00543                                            0543
*       DO;                                                        0544
*         TRMASNXI=OFF;             /* RESET STOPLINE,I INDICATOR    */
*         TRMINOUT=OFF;             /* TURN OFF INVITE OUTSTANDING   */
         NI    TRMASNXI(RTRM),B'11101110'                          0546
*         IF TRMTYPE^=TRMCLUST THEN /* NOT A CLUSTER         @YM06492*/
         CLI   TRMTYPE(RTRM),X'40'                                 0547
         BE    @RF00547                                            0547
*           DO;                     /* YES AND               @YM06492*/
*             IF BDUERROR=OFF×      /* IF NOT ERROR OR NOT   @YM05633*/
*                 (BDURESP^=RSPE09& /* SESSION NOT STARTED           */
*                 BDURESP^=RSPE19&  /* DIAL DATA INCONSISTENCY       */
*                 BDURESP^=RSPE1E) THEN/* COMMAND REJECTED   @YM05633*/
         TM    BDUERROR(BDUPTR),B'10000000'                        0549
         BZ    @RT00549                                            0549
         TM    BDURESP(BDUPTR),B'00001001'                         0549
         BNO   @GL00003                                            0549
         TM    BDURESP(BDUPTR),B'00010110'                         0549
         BZ    @RF00549                                            0549
@GL00003 TM    BDURESP(BDUPTR),B'00011001'                         0549
         BNO   @GL00002                                            0549
         TM    BDURESP(BDUPTR),B'00000110'                         0549
         BZ    @RF00549                                            0549
@GL00002 TM    BDURESP(BDUPTR),B'00011110'                         0549
         BNO   @RT00549                                            0549
         TM    BDURESP(BDUPTR),B'00000001'                         0549
         BZ    @RF00549                                            0549
@RT00549 DS    0H                                                  0550
*               TRMSESSN=ON;        /* THEN START A SESSION          */
         OI    TRMSESSN(RTRM),B'01000000'                          0550
*           END;                                                   0551
*         ELSE                                                     0552
*           ;                       /* CLUSTER DON'T SET     @YM06492
*                                      SESSION               @YM06492*/
@RF00547 DS    0H                                                  0553
*       END;                                                       0553
*     ELSE                                                         0554
*       IF BDUCMND=CD0READ THEN     /* IF IT IS A READ               */
         B     @RC00543                                            0554
@RF00543 CLI   BDUCMND(BDUPTR),X'01'                               0554
         BNE   @RF00554                                            0554
*         DO;                                                      0555
*           TRMASNXI=OFF;           /* RESET STOPLINE,I INDICATOR    */
*           TRMRDOUT=OFF;           /* INDICATE READ IS NOT OUT      */
         NI    TRMASNXI(RTRM),B'11101101'                          0557
*         END;                                                     0558
*                                                                  0558
*/*                                                                  */
*/* RDINPROC SUBROUTINE WILL BE CALLED TO DO SELECTIVE READ,         */
*/* INVITE AND CONTACT PROCESSING                                    */
*/*                                                                  */
*                                                                  0559
*     CALL RDINPROC;                                               0559
@RF00554 DS    0H                                                  0559
@RC00543 BAL   @14,RDINPROC                                        0559
*   END;                                                           0560
@DE00537 TM    EXITSW,B'10000000'                                  0560
         BO    @DC00537                                            0560
         L     @10,LCBWAITC-1(,IEDQLPTR)                           0560
         LA    @10,0(,@10)                                         0560
         LTR   @10,@10                                             0560
         BNZ   @DL00537                                            0560
@DC00537 DS    0H                                                  0561
*   GOTO DSPDISP;                   /* PASS CONTROL TO TCAM          */
*                                                                  0561
         LA    @10,DSPDISP(,RDISP)                                 0561
         BR    @10                                                 0561
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF MAINLINE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
         EJECT
*                                                                  0562
*   /*****************************************************************/
*   /*                                                               */
*   /* BSCID: IF THE BSC ID IS VALID, CALL DEVASSOC TO ASSIGN TCAM'S */
*   /* CONTROL BLOCKS TO THE IDENTIFIED TERMINAL. ELSE, FORCE THE    */
*   /* CALLING TERMINAL TO BE DISCONNECTED                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
*BSCID:                                                            0562
*   PROC OPTIONS(RETREG,SAVE(14));                                 0562
*                                                                  0562
@EL00001 DS    0H                                                  0562
@EF00001 DS    0H                                                  0562
@ER00001 BR    @14                                                 0562
BSCID    ST    @14,@SA00002                                        0562
*/*                                                                  */
*                                                                  0563
*   IF TTHDCF=HDRLEN THEN           /* IF NO DATA IN BUF     @XM05688*/
         L     @09,PIUPTR                                          0563
         SLR   @05,@05                                             0563
         ICM   @05,3,TTHDCF(@09)                                   0563
         SLR   @09,@09                                             0563
         IC    @09,HDRLEN                                          0563
         CR    @05,@09                                             0563
         BNE   @RF00563                                            0563
*     LCBNEGRP=ON;                  /* SET NEG RESPONSE AND GO     0564
*                                                            @XM05688*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0564
*   ELSE                            /*                       @XM05688*/
*     DO;                                                          0565
         B     @RC00563                                            0565
@RF00563 DS    0H                                                  0566
*       IF SAVTNID=0 THEN           /* IF IEDNID IS NOT IN SYSTEM    */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0566
         L     @09,SAVTNID(,@09)                                   0566
         LTR   @09,@09                                             0566
         BNZ   @RF00566                                            0566
*         LCBNEGRP=ON;              /* FORCE A DISCCONECT            */
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0567
*/*                                                                  */
*                                                                  0568
*       ELSE                                                       0568
*         DO;                       /* IEDNID WILL BE CALLED TO CHECK
*                                      THIS ID FOR VALIDITY          */
         B     @RC00566                                            0568
@RF00566 DS    0H                                                  0569
*           RPARM=RPRF;             /* PARM PASSED IS THE PIU        */
         LR    RPARM,RPRF                                          0569
*           RFY                                                    0570
*            (RLINK) RSTD;                                         0570
*           CALL IEDNID;            /* CHECK ID VALIDITY             */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0571
         L     @15,SAVTNID(,@09)                                   0571
         BALR  @14,@15                                             0571
*           IF RLINK=0 THEN         /* IF RLINK=0 THE ID WAS INVALID */
         LTR   RLINK,RLINK                                         0572
         BNZ   @RF00572                                            0572
*             LCBNEGRP=ON;          /* REQUEST A DISCONNECT          */
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0573
*/*                                                                  */
*                                                                  0574
*           ELSE                    /* RLINK WAS NOT ZERO, SO ID IS
*                                      GOOD AND RLINK CONTAINS THE...*/
*             DO;                   /* ...TTCIN OF THE LOGICAL     0574
*                                      TERMINAL                      */
         B     @RC00572                                            0574
@RF00572 DS    0H                                                  0575
*               IF RLINK^=TTHOAF THEN/* IS THE RESPONDING TERMINAL 0575
*                                      SAME AS CTERM?                */
         L     @14,PIUPTR                                          0575
         SLR   @09,@09                                             0575
         ICM   @09,3,TTHOAF(@14)                                   0575
         CR    RLINK,@09                                           0575
         BE    @RF00575                                            0575
*                 DO;               /* NO, THE LOGICALLY CONNECTED 0576
*                                      TERMINAL IS NOT THE CTERM     */
*                   RUDATA(1:2)=RLINK;/* SAVE TTCIN OF RESPONDING  0577
*                                      TERM IN PIU                   */
         LA    @14,PIU0RU(,@14)                                    0577
         STCM  RLINK,3,RUDATA+6(@14)                               0577
*                   RFY                                            0578
*                    (RLINK) UNRSTD;                               0578
*                   CALL DEVASSOC;  /* THIS ROUTINE WILL LINK TO   0579
*                                      IEDDVAS WHICH DOES TCAM     0579
*                                      CONTROL BLOCK ASSOCIATION     */
         BAL   @14,DEVASSOC                                        0579
*                 END;                                             0580
*             END;                                                 0581
@RF00575 DS    0H                                                  0582
*         END;                                                     0582
@RC00572 DS    0H                                                  0583
*       RPARM=RPRF;                                                0583
@RC00566 LR    RPARM,RPRF                                          0583
*       CALL FREEBFR;                                              0584
         BAL   @14,FREEBFR                                         0584
*       CALL POSTPLCB;              /* WITH 'E7' PRIORITY TO IEDQBD  */
         BAL   @14,POSTPLCB                                        0585
*       RETCODE=NOPOST;             /* INDICATE NOT GOING TO MH      */
         MVI   RETCODE,X'00'                                       0586
*     END;                          /*                       @XM05688*/
*/*                                                                  */
*                                                                  0588
*   END BSCID;                                                     0588
@EL00002 DS    0H                                                  0588
@EF00002 DS    0H                                                  0588
@ER00002 L     @14,@SA00002                                        0588
         BR    @14                                                 0588
*                                                                  0589
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTACT: PROCESS NORMAL AND ERROR DIAL CONTACT RESPONSES      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0589
*CONTACT:                                                          0589
*   PROC OPTIONS(RETREG,SAVE(14));                                 0589
*                                                                  0589
CONTACT  ST    @14,@SA00003                                        0589
*/*                                                                  */
*/*IF THE CONTACT DID NOT HAVE AN ERROR                              */
*/*                                                                  */
*                                                                  0590
*   IF BDUERROR=OFF THEN                                           0590
         TM    BDUERROR(BDUPTR),B'10000000'                        0590
         BNZ   @RF00590                                            0590
*     DO;                                                          0591
*                                                                  0591
*/*                                                                  */
*/* MANUAL DIAL TERMIALS RETURN A PHASE 1 NONERROR RESPONSE. THIS    */
*/* RESPONSE MUST BE PROCESSED BY IEDPMD                             */
*/*                                                                  */
*                                                                  0592
*       IF BDUPHASE=RSP20 THEN      /* IS THIS PHASE 1?              */
         TM    BDUPHASE(BDUPTR),B'00100000'                        0592
         BNO   @RF00592                                            0592
         TM    BDUPHASE(BDUPTR),B'01000000'                        0592
         BNZ   @RF00592                                            0592
*         DO;                                                      0593
*           RPARM=RPRF;             /* PASS PIU ADDR TO IEDPMD       */
         LR    RPARM,RPRF                                          0594
*           CALL IEDPMD;            /* DO MANUAL DIAL PROCESSING     */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0595
         L     @15,SAVTMAND(,@09)                                  0595
         BALR  @14,@15                                             0595
*           RPARM=RPRF;                                            0596
         LR    RPARM,RPRF                                          0596
*           CALL FREEBFR;           /* DISCARD THIS INPUT            */
         BAL   @14,FREEBFR                                         0597
*           LCBCONT=ON;             /* SET LCBCONT SO THAT IEDSAI  0598
*                                      WILL IMMEDIATELY ROUTE NEXT 0598
*                                      RESPONSE TO IEDSARI   @YM05696*/
         OI    LCBCONT(IEDQLPTR),B'00001000'                       0598
*           RETCODE=NOPOST;         /* NOTHING TO MH                 */
         MVI   RETCODE,X'00'                                       0599
*         END;                                                     0600
*                                                                  0600
*/*                                                                  */
*/* DIAL CONTACT USES THE '01' MODIFIER WHICH RETURNS THE NETWORK    */
*/* ADDRESS OF THE LINE AS THE FIRST TWO DATA BYTES. USING THIS      */
*/* ADDRESS, THE TERMINALS CONTROL BLOCKS WILL BE INSERTED INTO      */
*/* THE HIERARCHICAL STRUCTURE OF THE LINE.                          */
*/*                                                                  */
*                                                                  0601
*       ELSE                                                       0601
*         IF BDUPHASE=RSP60 THEN                                   0601
         B     @RC00592                                            0601
@RF00592 TM    BDUPHASE(BDUPTR),B'01100000'                        0601
         BNO   @RF00601                                            0601
*           DO;                     /* IF THIS IS A PHASE 3 RESPONSE */
*             TRMSESSN=ON;          /* SET SESSION STARTED   @YM08061*/
         OI    TRMSESSN(RTRM),B'01000000'                          0603
*             RPARM=RUDATA(1:2);                                   0604
         L     @09,PIUPTR                                          0604
         LA    @09,PIU0RU(,@09)                                    0604
         SLR   RPARM,RPARM                                         0604
         ICM   RPARM,3,RUDATA+6(@09)                               0604
*             RFY                                                  0605
*               RLINK RSTD;                                        0605
*             CALL IEDIAP03;        /* CONVERT THE LINE'S NETWORK  0606
*                                      ADDRESS TO A TTCIN            */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0606
         L     @15,SAVTNAX(,@09)                                   0606
         BALR  @14,@15                                             0606
*             RPARM=RLINK;          /* RETURN WITH THE TTCIN IN RLINK*/
         LR    RPARM,RLINK                                         0607
*             RFY                                                  0608
*               RLINK UNRSTD;                                      0608
*             LTTCIN=RPARM;         /* SAVE THE LINE'S TTCIN         */
         ST    RPARM,LTTCIN                                        0609
*             CALL IEDQTNT;         /* CONVERT THE LINE'S TTCIN TO A
*                                      TRM ADDRESS                   */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0610
         BALR  @14,@15                                             0610
*             RPARM=RPARM-LENGTH(IEDNTRM);/*                 @YM04622*/
         SL    RPARM,@CF02008                                      0611
*             RFY                                                  0612
*               IEDTRM BASED(RPARM);/* BASE TRM DSECT ON LINE TRM    */
*             TRMUTERM=TRMSUBST;    /* SAVE CTERMS TTCIN     @YM08443*/
         LH    @09,TRMSUBST(,RPARM)                                0613
         N     @09,@CF02305                                        0613
         STH   @09,TRMUTERM(,RPARM)                                0613
*             TRMSUBST=TTHOAF;      /* THE TERMINAL IS THE SUBSTRUCT
*                                      OF THE LINE                   */
         L     @09,PIUPTR                                          0614
         MVC   TRMSUBST(2,RPARM),TTHOAF(@09)                       0614
*             IF TRMTRACE=ON THEN   /* IF LINE IS BEING TRACED...  0615
*                                                            @YM05664*/
         TM    TRMTRACE(RPARM),B'00001000'                         0615
         BNO   @RF00615                                            0615
*               RTRM->TRMTRACE=ON;  /* ....THEN TRACE TERMINAL     0616
*                                                            @YM05664*/
         OI    TRMTRACE(RTRM),B'00001000'                          0616
*             RFY                                                  0617
*               IEDTRM BASED(RTRM);                                0617
@RF00615 DS    0H                                                  0618
*             TRMCOHRT=LTTCIN;      /* THE LINE IS THE COHART OF THE
*                                      TERMINAL                      */
         L     @09,LTTCIN                                          0618
         STH   @09,TRMCOHRT(,RTRM)                                 0618
*             IF TRMANDL=ON THEN    /* IF THIS IS A MANUAL DIAL TERM */
         TM    TRMANDL(RTRM),B'00010000'                           0619
         BNO   @RF00619                                            0619
*               DO;                                                0620
*                 RPARM=RPRF;       /* PASS PIU TO IEDPMD AND...     */
         LR    RPARM,RPRF                                          0621
*                 CALL IEDPMD;      /* DO MANUAL DIAL PROCESSING     */
         L     @09,AVTSAVTP(,IEDQAPTR)                             0622
         L     @15,SAVTMAND(,@09)                                  0622
         BALR  @14,@15                                             0622
*               END;                                               0623
*             RETCODE=NOPOST;       /* INDICATE NOTHING FOR MH       */
@RF00619 MVI   RETCODE,X'00'                                       0624
*             RPARM=RPRF;                                          0625
         LR    RPARM,RPRF                                          0625
*             CALL FREEBFR;         /* DISCARD THIS INPUT            */
         BAL   @14,FREEBFR                                         0626
*             EXITSW=ON;            /* INDICATE EXIT FROM MODULE     */
         OI    EXITSW,B'10000000'                                  0627
*             LCBQCBA=RLCB;         /* POST PLCB WITH...             */
         STCM  RLCB,7,LCBQCBA(IEDQLPTR)                            0628
*             LCBPRI=PRILNFRE;      /* 'E0' PRIORITY...              */
         MVI   LCBPRI(IEDQLPTR),X'E0'                              0629
*             RPARM=RLCB;           /* TO ITSELF                     */
         LR    RPARM,RLCB                                          0630
*             CALL DSPPOSTR;                                       0631
         LA    @15,DSPPOSTR(,RDISP)                                0631
         BALR  @14,@15                                             0631
*           END;                                                   0632
*                                                                  0632
*/*                                                                  */
*/* WITH MANUAL DIAL A PHASE 2 RESPONSE IS RETURNED WHICH MUST BE    */
*/* DISCARDED                                                        */
*/*                                                                  */
*                                                                  0633
*         ELSE                                                     0633
*           DO;                                                    0633
         B     @RC00601                                            0633
@RF00601 DS    0H                                                  0634
*             RPARM=RPRF;                                          0634
         LR    RPARM,RPRF                                          0634
*             CALL FREEBFR;                                        0635
         BAL   @14,FREEBFR                                         0635
*             RETCODE=NOPOST;                                      0636
         MVI   RETCODE,X'00'                                       0636
*           END;                                                   0637
*     END;                                                         0638
*                                                                  0638
*/*                                                                  */
*/* THE CONTACT HAD AN ERROR                                         */
*/*                                                                  */
*                                                                  0639
*   ELSE                                                           0639
*     DO;                                                          0639
         B     @RC00590                                            0639
@RF00590 DS    0H                                                  0640
*       TRMANDL=OFF;                /* TURN OFF MANUAL DIAL INDICATOR*/
         LA    @02,TRMANDL(,RTRM)                                  0640
         LR    @00,@02                                             0640
         LA    @09,3                                               0640
         NR    @00,@09                                             0640
         LCR   @00,@00                                             0640
         ALR   @02,@00                                             0640
         L     @09,0(,@02)                                         0640
@GL00005 LR    @05,@09                                             0640
         N     @05,@CB02309+3(@00)                                 0640
         CS    @09,@05,0(@02)                                      0640
         BNE   @GL00005                                            0640
*       TRMCONT=OFF;                /* RESET CONTACT OUT     @YM08436*/
         NI    TRMCONT(RTRM),B'01111111'                           0641
*       QCBSCHDL=OFF;               /* RESET SCHDL SO THAT IEDIAM  0642
*                                      WILL NOT TRY TO RECONTACT   0642
*                                                            @YM08432*/
         L     @09,IEDQQPTR                                        0642
         NI    QCBSCHDL(@09),B'11111011'                           0642
*       LCBCONNN=ON;                /* INDICATE CONTACT ERROR SO THAT
*                                      MESSAGES ON QUEUE WILL BE   0643
*                                      PURGED                @YM08436*/
         OI    LCBCONNN(IEDQLPTR),B'00100000'                      0643
*       LCBRCLLN=OFF;                                              0644
         NI    LCBRCLLN(IEDQLPTR),B'01111111'                      0644
*       LCBCTLMD=OFF;                                              0645
         NI    LCBCTLMD(IEDQLPTR),B'11111101'                      0645
*       LCBINITN=OFF;                                              0646
*       LCBCONT=OFF;                                               0647
*       LCBRECVN=ON;                /* MARK PLCB RECEIVING           */
*       LCBFREEN=OFF;                                              0649
*       LCBSENDN=OFF;                                              0650
         OI    LCBRECVN(IEDQLPTR),B'00000010'                      0650
         NI    LCBINITN(IEDQLPTR),B'11100010'                      0650
*       BDUHEADR=ON;                /* SET HEADR TO CAUSE A ZERO   0651
*                                      LENGTH HDR ERROR BFR TO BE  0651
*                                      BUILT                 @YM08436*/
         OI    BDUHEADR(BDUPTR),B'01000000'                        0651
*       IF BDUPHASE^=RSP00&         /* IF ^ PHASE 0                  */
*           (BDURESP^=RSPE09&       /* & ^ NOT SESSION ^ STARTED     */
*           BDURESP^=RSPE19&        /* & ^ DIAL DATA INCONSISTENT    */
*           BDURESP^=RSPE1E) THEN   /* & ^ CMD REJECT                */
         TM    BDUPHASE(BDUPTR),B'01100000'                        0652
         BZ    @RF00652                                            0652
         TM    BDURESP(BDUPTR),B'00001001'                         0652
         BNO   @GL00008                                            0652
         TM    BDURESP(BDUPTR),B'00010110'                         0652
         BZ    @RF00652                                            0652
@GL00008 TM    BDURESP(BDUPTR),B'00011001'                         0652
         BNO   @GL00007                                            0652
         TM    BDURESP(BDUPTR),B'00000110'                         0652
         BZ    @RF00652                                            0652
@GL00007 TM    BDURESP(BDUPTR),B'00011110'                         0652
         BNO   @RT00652                                            0652
         TM    BDURESP(BDUPTR),B'00000001'                         0652
         BZ    @RF00652                                            0652
@RT00652 DS    0H                                                  0653
*         TRMSESSN=ON;                                             0653
         OI    TRMSESSN(RTRM),B'01000000'                          0653
*     END;                          /*                       @YM04681*/
*/*                                                                  */
*                                                                  0655
*   END CONTACT;                                                   0655
@EL00003 DS    0H                                                  0655
@EF00003 DS    0H                                                  0655
@ER00003 L     @14,@SA00003                                        0655
         BR    @14                                                 0655
*                                                                  0656
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE LINKS TO IEDDVAS WHICH WILL ASSIGN THE CALLING */
*   /* TERMINALS CONTROL BLOCKS. BEFORE CALLING IEDDVAS, ENSURE THE  */
*   /* CALLING TERMINALS CONTROL BLOCKS ARE NOT IN USE. AT ENTRY TO  */
*   /* THIS PROCEDURE RUDATA(1:2) CONTAINS THE CALLERS TTCIN AND THE */
*   /* CONTROL BLOCKS ARE BASED ON THE CTERM. (NOTE: LCI = LOGICAL   */
*   /* CONNECTION INDEX = CALLING TERMINAL.)                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0656
*DEVASSOC:                                                         0656
*   PROC OPTIONS(RETREG,SAVE(14));                                 0656
DEVASSOC ST    @14,@SA00004                                        0656
*   RPARM=RUDATA(1:2);                                             0657
         L     @09,PIUPTR                                          0657
         LA    @09,PIU0RU(,@09)                                    0657
         SLR   RPARM,RPARM                                         0657
         ICM   RPARM,3,RUDATA+6(@09)                               0657
*   CALL IEDQTNT;                   /* GET TRM ADDRESS OF THE LCI  0658
*                                      TERMINAL                      */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0658
         BALR  @14,@15                                             0658
*   RPARM=RPARM-LENGTH(IEDNTRM);    /*                       @YM04622*/
         SL    RPARM,@CF02008                                      0659
*   LCIQCB=RPARM->TRMDESTQ;         /* SET ADDRESSABILITY TO LCI'S 0660
*                                      QCB                           */
         SLR   LCIQCB,LCIQCB                                       0660
         ICM   LCIQCB,7,TRMDESTQ(RPARM)                            0660
*   RFY                                                            0661
*     IEDQQCB BASED(LCIQCB);        /* BASE QCB DSECT ON LCI         */
*   RFY                                                            0662
*     IEDTRM BASED(RPARM);          /* BASE TRM DSECT ON LCI         */
*                                                                  0663
*/*                                                                  */
*/* IF A CALLING TERMINALS CONTROL BLOCKS ARE ALREADY IN USE(IE,. AN */
*/* OUTPUT OPERATION IN PROGRESS), THE CALLING TERMINAL WILL BE      */
*/* DISCONNECTED AND THE OUTPUT OPERATION ALLOWED TO CONTINUE        */
*/*                                                                  */
*                                                                  0663
*   IF(QCBPLCBN=ON×                 /* IF THE LCI'S PLCB IS ASSIGNED */
*       QCBRCVRQ=ON×                /* OR A PLCB IS REQUESTED FOR THE
*                                      LCI                           */
*       TRMCONT=ON) THEN            /* OR A CONTACT IS IN PROGRESS TO
*                                      THE LCI                       */
         LR    @09,LCIQCB                                          0663
         AL    @09,@CF02317                                        0663
         TM    QCBPLCBN-4(@09),B'10010000'                         0663
         BNZ   @RT00663                                            0663
         TM    TRMCONT(RPARM),B'10000000'                          0663
         BNO   @RF00663                                            0663
@RT00663 DS    0H                                                  0664
*     LCBNEGRP=ON;                  /* THEN FORCE THE CALLING      0664
*                                      TERMINAL TO DISCONNECT        */
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0664
*   ELSE                            /* ELSE, THE CONTROL BLOCKS ARE
*                                      NOT IN USE                    */
*     DO;                           /* SO SET UP PARMS AND CALL    0665
*                                      IEDDVAS                       */
         B     @RC00663                                            0665
@RF00663 DS    0H                                                  0666
*       RFY                                                        0666
*         RZERO RSTD;                                              0666
*       RZERO=TTHOAF;               /* PUT CTERMS'S TTCIN IN REG 0   */
         L     @09,PIUPTR                                          0667
         SLR   RZERO,RZERO                                         0667
         ICM   RZERO,3,TTHOAF(@09)                                 0667
*       RPARM=RUDATA(1:2);          /* PUT LCI'S TTCIN IN REG 1      */
         LA    @09,PIU0RU(,@09)                                    0668
         SLR   RPARM,RPARM                                         0668
         ICM   RPARM,3,RUDATA+6(@09)                               0668
*       RFY                                                        0669
*         R3 RSTD;                                                 0669
*       R3=RAVT-72;                 /* IEDDVAS REQUIRES R3 POINT TO
*                                      AVT                           */
         LR    R3,RAVT                                             0670
         SL    R3,@CF02249                                         0670
*       CALL IEDDVAS;                                              0671
         L     @09,AVTSAVTP(,IEDQAPTR)                             0671
         L     @15,SAVTDVAS(,@09)                                  0671
         BALR  @14,@15                                             0671
*       RFY                                                        0672
*        (RZERO,                                                   0672
*         R3) UNRSTD;                                              0672
*     END;                                                         0673
*   RFY                                                            0674
*     IEDTRM BASED(RTRM);           /* RESTORE BASE FOR IEDTRM DSECT */
*   RFY                                                            0675
*     IEDQQCB BASED(IEDQQPTR);      /* RESTORE BASE FOR IEDQQCB    0675
*                                                            @OZ29885*/
*   END DEVASSOC;                                                  0676
@EL00004 DS    0H                                                  0676
@EF00004 DS    0H                                                  0676
@ER00004 L     @14,@SA00004                                        0676
         BR    @14                                                 0676
*                                                                  0677
*   /*****************************************************************/
*   /*                                                               */
*   /* DIALDATA: PROCESS MTA ID STRING, TWX HANGUP, NCP DEVICE       */
*   /* ASSOCIATION, CONTACT RESPONSE AND CALL BSC ID PROCESSING      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0677
*DIALDATA:                                                         0677
*   PROC OPTIONS(RETREG,SAVE(14));                                 0677
*                                                                  0677
DIALDATA ST    @14,@SA00005                                        0677
*/*                                                                  */
*/*IS THIS MTA RESPONSE?                                             */
*/*                                                                  */
*                                                                  0678
*   IF BDUPHASE=RSP00&              /* IF MTA TERM CALLS IN          */
*       BDURESP=RSPUNS04 THEN                                      0678
         TM    BDUPHASE(BDUPTR),B'01100000'                        0678
         BNZ   @RF00678                                            0678
         TM    BDURESP(BDUPTR),B'00000100'                         0678
         BNO   @RF00678                                            0678
         TM    BDURESP(BDUPTR),B'00011011'                         0678
         BNZ   @RF00678                                            0678
*     DO;                                                          0679
*       IF RUDATA(1)^=TENFIFTY&     /* AND IT IS NOT A 1050          */
*           RUDATA(1)^=TWNTY741 THEN/* OR 2741                       */
         L     @09,PIUPTR                                          0680
         LA    @09,PIU0RU(,@09)                                    0680
         AL    @09,@CF00058                                        0680
         CLI   RUDATA(@09),X'1C'                                   0680
         BE    @RF00680                                            0680
         CLI   RUDATA(@09),X'00'                                   0680
         BE    @RF00680                                            0680
*         TRMUDEF=ON;               /* THEN SET INVALID FOR TSO BIT  */
         OI    TRMUDEF(RTRM),B'10000000'                           0681
*       RPARM=RPRF;                                                0682
@RF00680 LR    RPARM,RPRF                                          0682
*       CALL FREEBFR;               /* DISCARD THIS INPUT            */
         BAL   @14,FREEBFR                                         0683
*       LCBCONT=ON;                 /* SET LCBCONT SO THAT IEDSAI  0684
*                                      WILL IMMEDIATELY ROUTE NEXT 0684
*                                      RESPONSE TO IEDSARI   @YM05696*/
         OI    LCBCONT(IEDQLPTR),B'00001000'                       0684
*       RETCODE=NOPOST;             /* INDICATE NOTHING GOS TO MH    */
         MVI   RETCODE,X'00'                                       0685
*     END;                                                         0686
*                                                                  0686
*/*                                                                  */
*/*IS THIS X-OFF FROM A TWX?                                         */
*/*                                                                  */
*                                                                  0687
*   ELSE                                                           0687
*     IF(TTHDCF=HDRLEN+1&           /* IF ONE DATA BYTE       @YM4680*/
*         BDUHEADR=ON&              /* AND THIS IS A HEADER...       */
*         RUDATA(1)=XOFF&           /* AND THE DATA WAS TWX HANGUP 0687
*                                                            @OZ31678*/
*         QCBTSSES=OFF) THEN        /* AND NOT IN TSO SESSION      0687
*                                                            @OZ31678*/
         B     @RC00678                                            0687
@RF00678 L     @09,PIUPTR                                          0687
         LA    @05,1                                               0687
         SLR   @02,@02                                             0687
         IC    @02,HDRLEN                                          0687
         ALR   @05,@02                                             0687
         SLR   @02,@02                                             0687
         ICM   @02,3,TTHDCF(@09)                                   0687
         CR    @05,@02                                             0687
         BNE   @RF00687                                            0687
         TM    BDUHEADR(BDUPTR),B'01000000'                        0687
         BNO   @RF00687                                            0687
         LA    @09,PIU0RU(,@09)                                    0687
         CLI   RUDATA+6(@09),X'3C'                                 0687
         BNE   @RF00687                                            0687
         L     @09,IEDQQPTR                                        0687
         TM    QCBTSSES(@09),B'10000000'                           0687
         BNZ   @RF00687                                            0687
*       DO;                                                        0688
*         CALL SETNEGRP;            /* DO HANGUP PROCESSING          */
         BAL   @14,SETNEGRP                                        0689
*         RETCODE=NOPOST;           /* DON'T PASS BUFF TO MH @XM05695*/
         MVI   RETCODE,X'00'                                       0690
*       END;                                                       0691
*                                                                  0691
*/*                                                                  */
*/*IS THIS BSC ID RESPONSE?                                          */
*/*                                                                  */
*                                                                  0692
*     ELSE                                                         0692
*       IF BDUPHASE^=RSP00&BDURESP=RSPE06 THEN/*             @YM08570*/
         B     @RC00687                                            0692
@RF00687 TM    BDUPHASE(BDUPTR),B'01100000'                        0692
         BZ    @RF00692                                            0692
         TM    BDURESP(BDUPTR),B'00000110'                         0692
         BNO   @RF00692                                            0692
         TM    BDURESP(BDUPTR),B'00011001'                         0692
         BNZ   @RF00692                                            0692
*         CALL BSCID;                                              0693
*                                                                  0693
         BAL   @14,BSCID                                           0693
*/*                                                                  */
*/*IS THIS A DEVICE ASSOCIATION RESPONSE?                            */
*/*                                                                  */
*                                                                  0694
*       ELSE                                                       0694
*         IF BDUPHASE=RSP00&BDURESP=RSPUNS03 THEN/* IF NCP DOES    0694
*                                      DEVICE ASSOCIATION, THE     0694
*                                      NETWORK ADDRESS OF...@YM08155 */
         B     @RC00692                                            0694
@RF00692 TM    BDUPHASE(BDUPTR),B'01100000'                        0694
         BNZ   @RF00694                                            0694
         TM    BDURESP(BDUPTR),B'00000011'                         0694
         BNO   @RF00694                                            0694
         TM    BDURESP(BDUPTR),B'00011100'                         0694
         BNZ   @RF00694                                            0694
*           DO;                     /* THE IDENTIFIED TERMINAL IS  0695
*                                      RETURNED AS FIRST 2 DATA BYTES*/
*             RFY                                                  0696
*               RLINK RSTD;                                        0696
*             RPARM=RUDATA(1:2);    /* PUT THIS NET. ADDR. IN PARM 0697
*                                      REG                           */
         L     @14,PIUPTR                                          0697
         LA    @14,PIU0RU(,@14)                                    0697
         SLR   RPARM,RPARM                                         0697
         ICM   RPARM,3,RUDATA+6(@14)                               0697
*             CALL IEDIAP03;        /* AND TRANSFORM TO A TTCIN      */
*                                                                  0698
         L     @09,AVTSAVTP(,IEDQAPTR)                             0698
         L     @15,SAVTNAX(,@09)                                   0698
         BALR  @14,@15                                             0698
*             /*******************************************************/
*             /*                                                     */
*             /* UPON RETURN, RLINK CONTAINS THE TERMINALS TTCIN     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0699
*             IF RLINK^=TTHOAF THEN /* IF CTERM AND RESPONDING TERM
*                                      ARE NOT SAME, THEN TCAM'S CTL
*                                      BLK'S MUST BE MOVED FROM CTERM
*                                      TO RESPONDING TERM            */
         L     @14,PIUPTR                                          0699
         SLR   @09,@09                                             0699
         ICM   @09,3,TTHOAF(@14)                                   0699
         CR    RLINK,@09                                           0699
         BE    @RF00699                                            0699
*               DO;                                                0700
*                 RUDATA(1:2)=RLINK;/* SAVE TTCIN IN THE PIU         */
         LA    @14,PIU0RU(,@14)                                    0701
         STCM  RLINK,3,RUDATA+6(@14)                               0701
*                 CALL DEVASSOC;    /* THIS ROUTINE CALLS AN EXTERNAL
*                                      PROCEDURE WHICH WILL SETUP  0702
*                                      CONTROL BLOCK LINKAGE FOR THE
*                                      LOGICALLY CONNECTED TERM      */
         BAL   @14,DEVASSOC                                        0702
*               END;                                               0703
*             RPARM=RPRF;                                          0704
@RF00699 LR    RPARM,RPRF                                          0704
*             CALL FREEBFR;                                        0705
         BAL   @14,FREEBFR                                         0705
*             CALL POSTPLCB;        /* WITH 'E7' PRIORITY            */
         BAL   @14,POSTPLCB                                        0706
*             RETCODE=NOPOST;       /* INDICATE NOT GOING TO MH      */
         MVI   RETCODE,X'00'                                       0707
*             RFY                                                  0708
*               RLINK UNRSTD;                                      0708
*           END;                                                   0709
*                                                                  0709
*/*                                                                  */
*/* IS THIS A DIAL CONTACT RESPONSE?                                 */
*/*                                                                  */
*                                                                  0710
*         ELSE                                                     0710
*           IF BDUCMND=CD0CONT THEN /* IF THIS IS A CONTACT RESPONSE */
         B     @RC00694                                            0710
@RF00694 CLI   BDUCMND(BDUPTR),X'06'                               0710
         BNE   @RF00710                                            0710
*             CALL CONTACT;         /* CALL CONTACT PROCESSOR        */
         BAL   @14,CONTACT                                         0711
*/*                                                                  */
*                                                                  0712
*   END DIALDATA;                   /* RETURN TO CALLER              */
@EL00005 DS    0H                                                  0712
@EF00005 DS    0H                                                  0712
@ER00005 L     @14,@SA00005                                        0712
         BR    @14                                                 0712
         EJECT
*                                                                  0713
*   /*****************************************************************/
*   /*                                                               */
*   /* ERRORBIT: THIS PROCEDURE IS CALLED FOR DETAILED ANALYSIS OF   */
*   /* BDU SYSTEM AND LINE ERROR RESPONSES. APPROPRIATE LCB AND SCB  */
*   /* ERROR INDICATORS WILL BE SET                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0713
*ERRORBIT:                                                         0713
*   PROC OPTIONS(RETREG,SAVE(14));                                 0713
ERRORBIT ST    @14,12(,@13)                                        0713
*   IF BDUCMND^=CD0CONT THEN        /* IF NOT A CONTACT              */
         CLI   BDUCMND(BDUPTR),X'06'                               0714
         BE    @RF00714                                            0714
*     DO;                                                          0715
*       IF TTHDCF>HDRLEN×           /* IF THIS BUFFER HAS TEXT OR    */
*           BDUHEADR=OFF THEN       /* ITS A TEXT BUFFER WITHOUT DATA*/
         L     @09,PIUPTR                                          0716
         SLR   @05,@05                                             0716
         ICM   @05,3,TTHDCF(@09)                                   0716
         SLR   @09,@09                                             0716
         IC    @09,HDRLEN                                          0716
         CR    @05,@09                                             0716
         BH    @RT00716                                            0716
         TM    BDUHEADR(BDUPTR),B'01000000'                        0716
         BNZ   @RF00716                                            0716
@RT00716 DS    0H                                                  0717
*         DO;                                                      0717
*           SCBTXTTN=ON;            /* THEN SET THE TEXT INDICATOR   */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0718
         OI    SCBTXTTN(@09),B'01000000'                           0718
*           RPARM=LCBMHA;           /* FIND THE MH ADDRESS   @YM06085*/
         L     RPARM,LCBMHA-1(,IEDQLPTR)                           0719
         LA    RPARM,0(,RPARM)                                     0719
*           IF BDUMODIF=CD0RT THEN  /* READ TRANSMISSION     @OY20382*/
         CLI   BDUMODIF(BDUPTR),X'03'                              0720
         BNE   @RF00720                                            0720
*             LCBUSUE=ON;           /* IF NOT, SET UNIT EXCEPTION  0721
*                                      BECAUSE NO NEED TO RETRY      */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0721
*         END;                                                     0722
*       ELSE                        /* THIS IS A HDR BUF W/O TEXT    */
*         IF SCBBFMM=ON THEN        /* IF IN MIDDLE OF A LOGICAL MSG */
         B     @RC00716                                            0723
@RF00716 L     @09,IEDQSPTR-1(,IEDQLPTR)                           0723
         LA    @09,0(,@09)                                         0723
         TM    SCBBFMM(@09),B'00000001'                            0723
         BNO   @RF00723                                            0723
*           SCBTXTTN=ON;            /* THEN TREAT LIKE A TEXT BUFFER */
         OI    SCBTXTTN(@09),B'01000000'                           0724
*         ELSE                                                     0725
*           DO;                                                    0725
         B     @RC00723                                            0725
@RF00723 DS    0H                                                  0726
*             SCBSLCTN=ON;          /* SELECTION ERROR               */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0726
         OI    SCBSLCTN(@09),B'10000000'                           0726
*             LCBUSUE=ON;           /* UNIT EXCEPTION                */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0727
*           END;                                                   0728
*     END;                                                         0729
*                                                                  0729
*/*                                                                  */
*/*IF THIS POINT REACHED, ERROR OCCURRED ON A CONTACT                */
*/*                                                                  */
*                                                                  0730
*   ELSE                                                           0730
*     DO;                                                          0730
         B     @RC00714                                            0730
@RF00714 DS    0H                                                  0731
*       SCBSLCTN=ON;                /* SELECTION ERROR               */
*       SCBCONNN=ON;                /* SET FOR RETRY                 */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0732
         OI    SCBSLCTN(@09),B'10100000'                           0732
*       IF TRMSESSN=OFF THEN        /* IF NO SESSION WAS ESTABLISHED */
         TM    TRMSESSN(RTRM),B'01000000'                          0733
         BNZ   @RF00733                                            0733
*         LCBNEGRP=ON;              /* REQUEST A HANGUP              */
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0734
*     END;                                                         0735
*                                                                  0735
@RF00733 DS    0H                                                  0736
*/*                                                                  */
*/*CHECK FOR PHASE 1, 2 AND 3 SYSTEM RESPONSE ERRORS                 */
*/*                                                                  */
*                                                                  0736
*   IF BDUPHASE^=RSP00 THEN         /* IF NOT PHASE 0 THEN           */
@RC00714 TM    BDUPHASE(BDUPTR),B'01100000'                        0736
         BZ    @RF00736                                            0736
*     DO;                                                          0737
*       IF BDURESP=RSPE00 THEN      /* IF THIS IS A DATA CHECK       */
         TM    BDURESP(BDUPTR),B'00011111'                         0738
         BNZ   @RF00738                                            0738
*         DO;                                                      0739
*           LCBDATCK=ON;            /* SET THE DATA CHECK INDICATOR  */
         OI    LCBDATCK(IEDQLPTR),B'00001000'                      0740
*           SCBTRMLN=ON;            /* SET TERM/LINE ERROR           */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0741
         OI    SCBTRMLN(@09),B'00010000'                           0741
*         END;                                                     0742
*       ELSE                                                       0743
*         IF BDURESP=RSPE02×        /* IF INTERVENTION REQUIRED OR   */
*             BDURESP=RSPE01 THEN   /* POSSIBLE INTERVENTION REQUIRED*/
         B     @RC00738                                            0743
@RF00738 TM    BDURESP(BDUPTR),B'00000010'                         0743
         BNO   @GL00018                                            0743
         TM    BDURESP(BDUPTR),B'00011101'                         0743
         BZ    @RT00743                                            0743
@GL00018 TM    BDURESP(BDUPTR),B'00000001'                         0743
         BNO   @RF00743                                            0743
         TM    BDURESP(BDUPTR),B'00011110'                         0743
         BNZ   @RF00743                                            0743
@RT00743 DS    0H                                                  0744
*           DO;                                                    0744
*             LCBINTRQ=ON;          /* SET INTER REQD INDICATOR      */
         OI    LCBINTRQ(IEDQLPTR),B'01000000'                      0745
*             SCBTRMLN=ON;          /* SET LINE/TERM ERR             */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0746
         OI    SCBTRMLN(@09),B'00010000'                           0746
*             IF BDURESP=RSPE02 THEN/* INTERVENTION REQUIRED @YM08124*/
         TM    BDURESP(BDUPTR),B'00000010'                         0747
         BNO   @RF00747                                            0747
         TM    BDURESP(BDUPTR),B'00011101'                         0747
         BNZ   @RF00747                                            0747
*               DO;                 /*                       @YM08429*/
*                 LCBNEGRP=ON;      /* SET FOR DISCONNECT    @YM08124*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0749
*                 LCBUSUE=ON;       /* PREVENT RETRY         @YM08429*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0750
*               END;                /*                       @YM08429*/
*           END;                                                   0752
@RF00747 DS    0H                                                  0753
*     END;                                                         0753
*                                                                  0753
@RF00743 DS    0H                                                  0753
@RC00738 DS    0H                                                  0754
*/*                                                                  */
*/* CHECK FOR EXTENDED RESPONSE ERRORS                               */
*/*                                                                  */
*                                                                  0754
*   IF BDUSYRSP='A1'X×BDUSYRSP='A9'X THEN/* POSSIBLE INTERVENTION  0754
*                                      REQUIRED OR SESSION NOT     0754
*                                      STARTED DUE TO HARDWARE ERROR
*                                                            @ZM06766*/
@RF00736 CLI   BDUSYRSP(BDUPTR),X'A1'                              0754
         BE    @RT00754                                            0754
         CLI   BDUSYRSP(BDUPTR),X'A9'                              0754
         BNE   @RF00754                                            0754
@RT00754 DS    0H                                                  0755
*     DO;                           /* YES                   @ZM06766*/
*       IF BDUEXRSP='9C'X×BDUEXRSP='88'X×BDUEXRSP='E0'X×BDUEXRSP='F0'X
*         THEN                      /* ERROR TO REQUEST A DISCONNECT
*                                                            @ZM06766*/
         CLI   BDUEXRSP(BDUPTR),X'9C'                              0756
         BE    @RT00756                                            0756
         CLI   BDUEXRSP(BDUPTR),X'88'                              0756
         BE    @RT00756                                            0756
         CLI   BDUEXRSP(BDUPTR),X'E0'                              0756
         BE    @RT00756                                            0756
         CLI   BDUEXRSP(BDUPTR),X'F0'                              0756
         BNE   @RF00756                                            0756
@RT00756 DS    0H                                                  0757
*         LCBNEGRP=ON;              /* INDICATE DISCONNECT IS NEEDED
*                                                            @ZM06766*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0757
*       ELSE                                                       0758
*         ;                         /* FALL THRU TO LET OTHER CATCH
*                                      IT                    @ZM06766*/
@RF00756 DS    0H                                                  0759
*     END;                          /*                       @ZM06766*/
*   ELSE                            /* CHECK FOR DISCONNECTED      0760
*                                      CONDITION             @ZM06766*/
*     DO;                           /* YES                   @ZM06766*/
         B     @RC00754                                            0760
@RF00754 DS    0H                                                  0761
*       IF BDUSYRSP='EC'X THEN      /* DISCONNECTED ?        @ZM06766*/
         CLI   BDUSYRSP(BDUPTR),X'EC'                              0761
         BNE   @RF00761                                            0761
*         LCBNEGRP=ON;              /* REQUEST A DISCONNECT  @ZM06766*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0762
*       ELSE                                                       0763
*         ;                         /* YES                   @ZM06766*/
@RF00761 DS    0H                                                  0764
*     END;                          /*                       @ZM06766*/
*   IF BDUXINIT=EXT80 THEN          /* IS THIS "SPECIAL" STATUS?     */
@RC00754 TM    BDUXINIT(BDUPTR),B'10000000'                        0765
         BNO   @RF00765                                            0765
         TM    BDUXINIT(BDUPTR),B'01100000'                        0765
         BNZ   @RF00765                                            0765
*     DO;                                                          0766
*       IF BDUXFINL=EXTS0A THEN     /* DATA RECEIVED WHEN NOT      0767
*                                      EXPECTED?                     */
         TM    BDUXFINL(BDUPTR),B'00001010'                        0767
         BNO   @RF00767                                            0767
         TM    BDUXFINL(BDUPTR),B'00010100'                        0767
         BNZ   @RF00767                                            0767
*         DO;                                                      0768
*           LCBLOSDT=ON;            /* LOST DATA                     */
         OI    LCBLOSDT(IEDQLPTR),B'00000010'                      0769
*           SCBTRMLN=ON;            /* SET TERM/LINE ERROR           */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0770
         OI    SCBTRMLN(@09),B'00010000'                           0770
*         END;                                                     0771
*       ELSE                                                       0772
*         IF BDUXFINL=EXTS04 THEN   /* IS NCP OUT OF BUFFERS?        */
         B     @RC00767                                            0772
@RF00767 TM    BDUXFINL(BDUPTR),B'00000100'                        0772
         BNO   @RF00772                                            0772
         TM    BDUXFINL(BDUPTR),B'00011010'                        0772
         BNZ   @RF00772                                            0772
*           DO;                                                    0773
*             LCBLOSDT=ON;          /* LOST DATA                     */
         OI    LCBLOSDT(IEDQLPTR),B'00000010'                      0774
*             LCBUSUE=ON;           /* UNIT EXCEPTION                */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0775
*             SCBCTLUN=ON;          /* CONTROL UNIT ERROR            */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0776
         OI    SCBCTLUN(@09),B'00000100'                           0776
*             LCBNEGRP=ON;          /* SET FOR DISCONNECT    @YM08124*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0777
*           END;                                                   0778
*         ELSE                                                     0779
*           IF BDUXFINL=EXTS02 THEN /* CMD REJECT?                   */
         B     @RC00772                                            0779
@RF00772 TM    BDUXFINL(BDUPTR),B'00000010'                        0779
         BNO   @RF00779                                            0779
         TM    BDUXFINL(BDUPTR),B'00011100'                        0779
         BNZ   @RF00779                                            0779
*             DO;                                                  0780
*               LCBCMDRJ=ON;        /* SET CMD REJECT                */
         OI    LCBCMDRJ(IEDQLPTR),B'10000000'                      0781
*               LCBUSUE=ON;         /* UNIT EXECPTION                */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0782
*               SCBCTLUN=ON;        /* CNTRL UNIT ERROR              */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0783
         OI    SCBCTLUN(@09),B'00000100'                           0783
*               LCBNEGRP=ON;        /* SET FOR DISCONNECT    @YM08124*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0784
*             END;                                                 0785
*           ELSE                                                   0786
*             IF BDUXFINL=EXTS08×   /* DID TERMINAL....              */
*                 BDUXFINL=EXTS1C THEN/* DISCONNECT?                 */
         B     @RC00779                                            0786
@RF00779 TM    BDUXFINL(BDUPTR),B'00001000'                        0786
         BNO   @GL00023                                            0786
         TM    BDUXFINL(BDUPTR),B'00010110'                        0786
         BZ    @RT00786                                            0786
@GL00023 TM    BDUXFINL(BDUPTR),B'00011100'                        0786
         BNO   @RF00786                                            0786
         TM    BDUXFINL(BDUPTR),B'00000010'                        0786
         BNZ   @RF00786                                            0786
@RT00786 DS    0H                                                  0787
*               DO;                                                0787
*                 LCBNEGRP=ON;      /* REQUEST DISCONNECT            */
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0788
*                 LCBUSUE=ON;       /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0789
*                 SCBTRMLN=ON;      /* SET TERM/LINE ERROR           */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0790
         OI    SCBTRMLN(@09),B'00010000'                           0790
*               END;                                               0791
*             ELSE                                                 0792
*               IF BDUXFINL=EXTS00 THEN/* TIMEOUT WITH NO DATA?      */
         B     @RC00786                                            0792
@RF00786 TM    BDUXFINL(BDUPTR),B'00011110'                        0792
         BNZ   @RF00792                                            0792
*                 DO;                                              0793
*                   LCBTMOUT=ON;    /* SET TIMEOUT                   */
         OI    LCBTMOUT(IEDQLPTR),B'00000001'                      0794
*                   SCBTRMLN=ON;    /* TERM/LINE ERROR               */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0795
         OI    SCBTRMLN(@09),B'00010000'                           0795
*                   LCBNEGRP=ON;    /* SET FOR DISCONNECT    @YM08124*/
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0796
*                   LCBUSUE=ON;     /* PREVENT RETRY         @YM08429*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0797
*                 END;                                             0798
*               ELSE                                               0799
*                 IF BDUXFINL=EXTS14 THEN/* RECEIVE BREAK IN TEXT?   */
         B     @RC00792                                            0799
@RF00792 TM    BDUXFINL(BDUPTR),B'00010100'                        0799
         BNO   @RF00799                                            0799
         TM    BDUXFINL(BDUPTR),B'00001010'                        0799
         BNZ   @RF00799                                            0799
*                   DO;             /*                       @YM08429*/
*                     SCBTRMLN=ON;  /* SET TERM/LINE ERROR           */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0801
         OI    SCBTRMLN(@09),B'00010000'                           0801
*                     LCBUSUE=ON;   /* PREVENT RETRY         @YM08429*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0802
*                   END;            /*                       @YM08429*/
*     END;                                                         0804
*                                                                  0804
*/*                                                                  */
*/* END OF "SPECIAL" EXTENDED RESPONSE ERROR ANALYSIS                */
*/*                                                                  */
*                                                                  0805
*   ELSE                                                           0805
*     IF BDUXINIT=EXTE0 THEN        /* IS THIS HW/USER ERR STATUS?   */
         B     @RC00765                                            0805
@RF00765 TM    BDUXINIT(BDUPTR),B'11100000'                        0805
         BNO   @RF00805                                            0805
*       DO;                                                        0806
*         LCBNEGRP=ON;              /* REQUEST DISCONNECT            */
         OI    LCBNEGRP(IEDQLPTR),B'00001000'                      0807
*         LCBUSUE=ON;               /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0808
*         LCBEQUCK=ON;              /* SET EQUIPMENT CHECK           */
         OI    LCBEQUCK(IEDQLPTR),B'00010000'                      0809
*         SCBCTLUN=ON;              /* SET CNTRL UNIT ERROR          */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0810
         OI    SCBCTLUN(@09),B'00000100'                           0810
*       END;                                                       0811
*                                                                  0811
*/*                                                                  */
*/* DO "NORMAL" FINAL STATUS ANALYSIS                                */
*/*                                                                  */
*                                                                  0812
*     ELSE                                                         0812
*       DO;                                                        0812
         B     @RC00805                                            0812
@RF00805 DS    0H                                                  0813
*         SCBTRMLN=ON;                                             0813
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0813
         OI    SCBTRMLN(@09),B'00010000'                           0813
*         IF BDUXFINL=EXTX00 THEN   /* IS THIS TIMEOUT WITH DATA?    */
         TM    BDUXFINL(BDUPTR),B'00011110'                        0814
         BNZ   @RF00814                                            0814
*           DO;                     /*                       @YM08429*/
*             LCBTMOUT=ON;          /* SET TIMEOUT INDICATOR         */
         OI    LCBTMOUT(IEDQLPTR),B'00000001'                      0816
*             LCBUSUE=ON;           /* PREVENT RETRY         @YM08429*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0817
*           END;                    /*                       @YM08429*/
*         ELSE                                                     0819
*           IF BDUPHASE=RSP60&      /* IF PHASE 3 AND                */
*               BDUXFINL=EXTX10 THEN/* NCP EXECUTED CUTOFF MACRO     */
         B     @RC00814                                            0819
@RF00814 TM    BDUPHASE(BDUPTR),B'01100000'                        0819
         BNO   @RF00819                                            0819
         TM    BDUXFINL(BDUPTR),B'00010000'                        0819
         BNO   @RF00819                                            0819
         TM    BDUXFINL(BDUPTR),B'00001110'                        0819
         BNZ   @RF00819                                            0819
*             DO;                                                  0820
*               LCBUSUE=ON;         /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0821
*               SCBCUTFN=ON;        /* TREAT AS CUTOFF               */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0822
         OI    SCBCUTFN(@09),B'00000001'                           0822
*             END;                                                 0823
*           ELSE                                                   0824
*             IF BDUXFINL=EXTX08 THEN/* DID EOT HALT ERP?            */
         B     @RC00819                                            0824
@RF00819 TM    BDUXFINL(BDUPTR),B'00001000'                        0824
         BNO   @RF00824                                            0824
         TM    BDUXFINL(BDUPTR),B'00010110'                        0824
         BNZ   @RF00824                                            0824
*               DO;                                                0825
*                 SCBABRTN=ON;      /* SET ABORT ERROR INDICATOR     */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0826
         OI    SCBABRTN(@09),B'00000100'                           0826
*                 LCBUSUE=ON;       /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0827
*               END;                                               0828
*       END;                        /* END OF "NORMAL" FINAL STATUS
*                                      ANALYSIS                      */
@RF00824 DS    0H                                                  0829
@RC00819 DS    0H                                                  0829
@RC00814 DS    0H                                                  0830
*/*                                                                  */
*/* SAVE STATUS FOR TCAM ERROR MESSAGE                               */
*/*                                                                  */
*                                                                  0830
*   IF SCBLCK1N=ON&                 /* IF IN EXTENDED        @YM08125*/
*       SCBMSGLN=OFF THEN           /* LOCK MODE             @YM08125*/
@RC00805 DS    0H                                                  0830
@RC00765 L     @09,IEDQSPTR-1(,IEDQLPTR)                           0830
         TM    SCBLCK1N(@09),B'00100000'                           0830
         BNO   @RF00830                                            0830
         TM    SCBMSGLN(@09),B'00001000'                           0830
         BNZ   @RF00830                                            0830
*     LCBNEGRP=OFF;                 /* RESET NEGRP           @YM08125*/
         NI    LCBNEGRP(IEDQLPTR),B'11110111'                      0831
*   IF BDUXFINL=EXTS00&             /* IF TIMEOUT TO POLL AND        */
*       AVTTOPOL=ON THEN            /* TIMEOUT MESSAGES SUPPRESSED   */
@RF00830 TM    BDUXFINL(BDUPTR),B'00011110'                        0832
         BNZ   @RF00832                                            0832
         TM    AVTTOPOL(IEDQAPTR),B'00010000'                      0832
         BO    @RT00832                                            0832
*     ;                             /* THEN DO NOTHING               */
*   ELSE                                                           0834
*     DO;                           /* OTHERWISE, SAVE....           */
@RF00832 DS    0H                                                  0835
*       LCBCMDSV=BDUCMND;           /* PRESERVE COMMAND      @OY18040*/
         MVC   LCBCMDSV(1,IEDQLPTR),BDUCMND(BDUPTR)                0835
*       LCBCSWRC=BDURSP;            /* BDU SYSTEM RESPONSE AND BDU 0836
*                                      LINE RESPONSE         @YM08042*/
         MVC   LCBCSWRC(2,IEDQLPTR),BDURSP(BDUPTR)                 0836
*       LCBERMSG=ON;                /* REQUEST TCAM ERROR MESSAGE    */
         OI    LCBERMSG(IEDQLPTR),B'00100000'                      0837
*     END;                                                         0838
*   END ERRORBIT;                                                  0839
@EL00006 DS    0H                                                  0839
@EF00006 DS    0H                                                  0839
@ER00006 L     @14,12(,@13)                                        0839
         BR    @14                                                 0839
*                                                                  0840
*   /*****************************************************************/
*   /*                                                               */
*   /* ERRSTAT: SETS BSC STATUS PENDING INDICATOR, PROCESSES TSO     */
*   /* ATTENTION AND HANGUP. CALLS PROCEDURE TO SET SCB/LCB ERROR    */
*   /* INDICATORS                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0840
*ERRSTAT:                                                          0840
*   PROC OPTIONS(RETREG,SAVE(14));                                 0840
ERRSTAT  ST    @14,@SA00007                                        0840
*   IF TRMGPACT=ON THEN             /* IF GEN POLL ACT THEN  @YM08504*/
         TM    TRMGPACT(RTRM),B'00001000'                          0841
         BNO   @RF00841                                            0841
*     LCBUSUE=ON;                   /* DISALLOW STOP OR CONTINUE   0842
*                                      PROCESSING IN IEDQBT  @YM08504*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0842
*   IF BDUSYRSP=RSPSTPND THEN       /* IF BSC STATUS IS PENDING      */
@RF00841 CLI   BDUSYRSP(BDUPTR),X'A5'                              0843
         BNE   @RF00843                                            0843
*     DO;                                                          0844
*       TRMSTPND=ON;                /* SET BSC STATUS PENDING        */
         OI    TRMSTPND(RTRM),B'10000000'                          0845
*       SCBTXTTN=ON;                /* ERROR DURING TEXT TRANSFER    */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0846
         OI    SCBTXTTN(@09),B'01000000'                           0846
*       LCBUSUE=ON;                 /* SET UNIT EXCEPTION    @OY20382*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0847
*     END;                                                         0848
*   ELSE                                                           0849
*     IF(QCBTSSES=ON&BDURESP=RSPE13)×/* IF TSO...                    */
*         TRMTSATN=ON×              /* ...ATTENTION...               */
*         TRMWRBRK=ON THEN          /* ... OR WRITE BREAK            */
         B     @RC00843                                            0849
@RF00843 L     @09,IEDQQPTR                                        0849
         TM    QCBTSSES(@09),B'10000000'                           0849
         BNO   @GL00027                                            0849
         TM    BDURESP(BDUPTR),B'00010011'                         0849
         BNO   @GL00027                                            0849
         TM    BDURESP(BDUPTR),B'00001100'                         0849
         BZ    @RT00849                                            0849
@GL00027 TM    TRMTSATN(RTRM),B'00000100'                          0849
         BO    @RT00849                                            0849
         TM    TRMWRBRK(RTRM),B'00000001'                          0849
         BNO   @RF00849                                            0849
@RT00849 DS    0H                                                  0850
*       DO;                                                        0850
*         IF TRMWRBRK=ON THEN       /* WRITE BREAK?                  */
         TM    TRMWRBRK(RTRM),B'00000001'                          0851
         BO    @RT00851                                            0851
*           ;                       /* NOTHING ELSE TO DO            */
*         ELSE                                                     0853
*           DO;                                                    0853
*             LCBUSUE=ON;           /* SET UNIT EXCEPTION    @YM08455*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0854
*             TRMTSATN=OFF;         /* SET ATTENTION OFF IN TTE(CLEAN
*                                      UP)                   @YM04622*/
         NI    TRMTSATN(RTRM),B'11111011'                          0855
*             SCBATTN=ON;           /* SET ATTENTION                 */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0856
         OI    SCBATTN(@09),B'00000010'                            0856
*             CALL ERRORBIT;        /*                       @YM08454*/
         BAL   @14,ERRORBIT                                        0857
*           END;                                                   0858
*       END;                                                       0859
*     ELSE                                                         0860
*       DO;                                                        0860
         B     @RC00849                                            0860
@RF00849 DS    0H                                                  0861
*         IF(BDURESP=RSPE0C&QCBTSSES=ON)×/* TSO HANGUP?              */
*             TRMLYNCH=ON THEN                                     0861
         TM    BDURESP(BDUPTR),B'00001100'                         0861
         BNO   @GL00029                                            0861
         TM    BDURESP(BDUPTR),B'00010011'                         0861
         BNZ   @GL00029                                            0861
         L     @09,IEDQQPTR                                        0861
         TM    QCBTSSES(@09),B'10000000'                           0861
         BO    @RT00861                                            0861
@GL00029 TM    TRMLYNCH(RTRM),B'00000001'                          0861
         BNO   @RF00861                                            0861
@RT00861 DS    0H                                                  0862
*           DO;                                                    0862
*             TRMLYNCH=ON;          /* SET HANGUP INDICATOR          */
         OI    TRMLYNCH(RTRM),B'00000001'                          0863
*             SCBCTLUN=ON;          /* SET CONTROL UNIT ERROR        */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0864
         OI    SCBCTLUN(@09),B'00000100'                           0864
*           END;                                                   0865
*         CALL ERRORBIT;            /* SETS SCB/LCB ERROR INDICATORS */
@RF00861 BAL   @14,ERRORBIT                                        0866
*       END;                                                       0867
*   END ERRSTAT;                    /* RETURN TO CALLER              */
@EL00007 DS    0H                                                  0868
@EF00007 DS    0H                                                  0868
@ER00007 L     @14,@SA00007                                        0868
         BR    @14                                                 0868
         EJECT
*                                                                  0869
*   /*****************************************************************/
*   /*                                                               */
*   /* POST A BUFFER TO BUFFER RETURN                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0869
*FREEBFR:                                                          0869
*   PROC OPTIONS(RETREG,SAVE(14));  /*                       @YM04674*/
FREEBFR  ST    @14,@SA00008                                        0869
*   RPARM->PRFNBUNT=0;              /* SET NUMB UNITS=0              */
         MVI   PRFNBUNT(RPARM),X'00'                               0870
*   RPARM->PRFPRI='E0'X;            /* INDICATE PRIORITY             */
         MVI   PRFPRI(RPARM),X'E0'                                 0871
*   RPARM->PRFQCBA=ADDR(AVTBFRTB);  /* QCB ADDRESS                   */
         LA    @09,AVTBFRTB(,IEDQAPTR)                             0872
         STCM  @09,7,PRFQCBA(RPARM)                                0872
*   CALL DSPPOSTR;                                                 0873
         LA    @15,DSPPOSTR(,RDISP)                                0873
         BALR  @14,@15                                             0873
*   END FREEBFR;                    /* RETURN TO CALLER              */
@EL00008 DS    0H                                                  0874
@EF00008 DS    0H                                                  0874
@ER00008 L     @14,@SA00008                                        0874
         BR    @14                                                 0874
         EJECT
*                                                                  0875
*   /*****************************************************************/
*   /*                                                               */
*   /* SEVERAL TYPES OF RESPONSE RECEIVED WITHOUT DATA AND CERTAIN   */
*   /* DIAL RESPONSES WITH DATA SHOULD NOT GO TO THE MESSAGE HANDLER.*/
*   /* THE PURPOSE OF THIS SUBROUTINE IS TO IDENTIFY RESPONSES NOT   */
*   /* DESTINED FOR THE MESSAGE HANDLER AND TAKE ACTION AS           */
*   /* APPROPRIATE                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0875
*MHCHKER:                                                          0875
*   PROC OPTIONS(RETREG,SAVE(14));                                 0875
*                                                                  0875
MHCHKER  ST    @14,@SA00009                                        0875
*/*                                                                  */
*                                                                  0876
*                                   /* FOR PIU'S WITHOUT DATA      0876
*                                                            @YM08115*/
*   IF TTHDCF=HDRLEN THEN                                          0876
         L     @09,PIUPTR                                          0876
         SLR   @05,@05                                             0876
         ICM   @05,3,TTHDCF(@09)                                   0876
         SLR   @09,@09                                             0876
         IC    @09,HDRLEN                                          0876
         CR    @05,@09                                             0876
         BNE   @RF00876                                            0876
*     DO;                           /* DO SPECIAL PROCESSING @YM08115*/
*/*                                                                  */
*                                                                  0878
*       IF(QCBTSSES=ON&BDURESP=RSPE13) THEN/* TSO ATTN?      @YM05722*/
         L     @09,IEDQQPTR                                        0878
         TM    QCBTSSES(@09),B'10000000'                           0878
         BNO   @RF00878                                            0878
         TM    BDURESP(BDUPTR),B'00010011'                         0878
         BNO   @RF00878                                            0878
         TM    BDURESP(BDUPTR),B'00001100'                         0878
         BZ    @RT00878                                            0878
*         ;                         /* DO NOTHING            @YM05722*/
*       ELSE                                                       0880
*         IF(BDUXFINL=EXTX18&       /* IF THIS IS EOT                */
*             BDUXINIT^=EXT80&      /* AND NOT SPECIAL AND           */
*             BDUXINIT^=EXTE0) THEN /* NOT HARDWARE AND              */
@RF00878 TM    BDUXFINL(BDUPTR),B'00011000'                        0880
         BNO   @RF00880                                            0880
         TM    BDUXFINL(BDUPTR),B'00000110'                        0880
         BNZ   @RF00880                                            0880
         TM    BDUXINIT(BDUPTR),B'10000000'                        0880
         BNO   @GL00032                                            0880
         TM    BDUXINIT(BDUPTR),B'01100000'                        0880
         BZ    @RF00880                                            0880
@GL00032 TM    BDUXINIT(BDUPTR),B'11100000'                        0880
         BO    @RF00880                                            0880
*           DO;                                                    0881
*             IF LCBCONT=OFF&       /* IF MSG IS EOT ONLY AND        */
*                 SCBBFMM=OFF THEN  /* ^ IN MIDDLE OF LMD MESSAGE    */
         TM    LCBCONT(IEDQLPTR),B'00001000'                       0882
         BNZ   @RF00882                                            0882
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0882
         TM    SCBBFMM(@09),B'00000001'                            0882
         BNZ   @RF00882                                            0882
*               DO;                                                0883
*                 CALL SETNEGRP;                                   0884
         BAL   @14,SETNEGRP                                        0884
*                 RETCODE=NOPOST;   /* INDICATE THIS INPUT IS NOT    */
         MVI   RETCODE,X'00'                                       0885
*               END;                /* GOING TO MH                   */
*           END;                                                   0887
*                                                                  0887
*/*                                                                  */
*                                                                  0888
*         ELSE                      /* IT IS NOT EOT                 */
*           IF(BDUERROR=ON&         /* IF THIS WAS AN ERROR AND      */
*               BDURESP=RSPE1E) THEN/* IF COMMAND WAS RESET          */
         B     @RC00880                                            0888
@RF00880 TM    BDUERROR(BDUPTR),B'10000000'                        0888
         BNO   @RF00888                                            0888
         TM    BDURESP(BDUPTR),B'00011110'                         0888
         BNO   @RF00888                                            0888
         TM    BDURESP(BDUPTR),B'00000001'                         0888
         BNZ   @RF00888                                            0888
*             DO;                                                  0889
*               IF LCBCONT=OFF&     /* AND NOTHING PREVIOUSLY RCVD   */
*                   SCBBFMM=OFF THEN/* AND NOT IN MIDDLE OF LMD MSG  */
         TM    LCBCONT(IEDQLPTR),B'00001000'                       0890
         BNZ   @RF00890                                            0890
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           0890
         TM    SCBBFMM(@09),B'00000001'                            0890
         BNZ   @RF00890                                            0890
*                 DO;                                              0891
*                   RPARM=RPRF;                                    0892
         LR    RPARM,RPRF                                          0892
*                   CALL FREEBFR;   /* THEN FREE THE BUFFER          */
         BAL   @14,FREEBFR                                         0893
*                   CALL POSTPLCB;  /* POST PLCB TO BD               */
         BAL   @14,POSTPLCB                                        0894
*                   RETCODE=NOPOST; /* INDICATE THIS INPUT IS NOT    */
         MVI   RETCODE,X'00'                                       0895
*                 END;              /* GOING TO MH                   */
*             END;                                                 0897
*                                                                  0897
*/*                                                                  */
*                                                                  0898
*           ELSE                    /* CMD WAS NOT RESET             */
*             IF BDUPHASE^=RSP00&   /* IF THIS IS NOT PHASE 0        */
*                 (BDURESP=RSPE03×  /* AND NEG POLL WAIT     @OY18012*/
*                 (BDUERROR=OFF&    /* AND NOT ERROR         @OY18012*/
*                 BDURESP=RSPN06)) THEN/* OR NEG POLLWAIT    @OY18012*/
         B     @RC00888                                            0898
@RF00888 TM    BDUPHASE(BDUPTR),B'01100000'                        0898
         BZ    @RF00898                                            0898
         TM    BDURESP(BDUPTR),B'00000011'                         0898
         BNO   @GL00038                                            0898
         TM    BDURESP(BDUPTR),B'00011100'                         0898
         BZ    @RT00898                                            0898
@GL00038 TM    BDUERROR(BDUPTR),B'10000000'                        0898
         BNZ   @RF00898                                            0898
         TM    BDURESP(BDUPTR),B'00000110'                         0898
         BNO   @RF00898                                            0898
         TM    BDURESP(BDUPTR),B'00011001'                         0898
         BNZ   @RF00898                                            0898
@RT00898 DS    0H                                                  0899
*               DO;                 /*                       @YM08043*/
*                 IF LCBCONT=ON THEN/* READ CONTINUE         @YM08043*/
         TM    LCBCONT(IEDQLPTR),B'00001000'                       0900
         BNO   @RF00900                                            0900
*                   DO;             /* YES                   @YM08043*/
*                     BDUSYRSP=PHASE3OK;/* CHANGE RESPONSE TO...   0902
*                                                            @YM08043*/
         MVI   BDUSYRSP(BDUPTR),X'62'                              0902
*                     BDUEXRSP=EOTRSP;/* EOT                 @YM08043*/
         MVI   BDUEXRSP(BDUPTR),X'18'                              0903
*                     BDUHEADR=OFF; /* SET NOT HEADER        @YM08429*/
         NI    BDUHEADR(BDUPTR),B'10111111'                        0904
*                   END;            /*                       @YM08043*/
*                 ELSE              /* NOT READ CONTINUE     @YM08043*/
*                   DO;             /*                       @YM08043*/
         B     @RC00900                                            0906
@RF00900 DS    0H                                                  0907
*                     CALL SETNEGRP;/* DO NEG RESP PROCESSING      0907
*                                                            @YM08043*/
         BAL   @14,SETNEGRP                                        0907
*                     RETCODE=NOPOST;/* INDICATE NOT GOING TO MH   0908
*                                                            @YM08043*/
         MVI   RETCODE,X'00'                                       0908
*                   END;            /*                       @YM08043*/
*               END;                /*                       @YM08043*/
*                                                                  0910
*       /*************************************************************/
*       /*                                                           */
*       /* IF AN EOB/ETB/ETX "ONLY" IS RECEIVED WITHOUT ERROR AND ITS*/
*       /* NOT PHASE 3, THEN UPDATE THE OFFSET COUNT TO EOB AND      */
*       /* DISCARD THIS INPUT                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0911
*             ELSE                                                 0911
*               IF BDUERROR=OFF&    /* IF THIS IS NOT AN ERROR       */
*                   BDUPHASE^=RSP60&/* AND NOT PHASE 3               */
*                   LCBCONT=ON&     /* AND NOT FIRST BLOCK   @YM08172*/
*                   (BDUXFINL=EXTX12×/* AND IT IS ETX                */
*                   BDUXFINL=EXTX14)&/* OR ETB                       */
*                   (BDUXINIT^=EXT80&/* AND NOT SPECIAL              */
*                   BDUXINIT^=EXTE0) THEN/* OR HARDWARE STATUS       */
         B     @RC00898                                            0911
@RF00898 TM    BDUERROR(BDUPTR),B'10000000'                        0911
         BNZ   @RF00911                                            0911
         TM    BDUPHASE(BDUPTR),B'01100000'                        0911
         BO    @RF00911                                            0911
         TM    LCBCONT(IEDQLPTR),B'00001000'                       0911
         BNO   @RF00911                                            0911
         TM    BDUXFINL(BDUPTR),B'00010010'                        0911
         BNO   @GL00044                                            0911
         TM    BDUXFINL(BDUPTR),B'00001100'                        0911
         BZ    @GL00040                                            0911
@GL00044 TM    BDUXFINL(BDUPTR),B'00010100'                        0911
         BNO   @RF00911                                            0911
         TM    BDUXFINL(BDUPTR),B'00001010'                        0911
         BNZ   @RF00911                                            0911
@GL00040 TM    BDUXINIT(BDUPTR),B'10000000'                        0911
         BNO   @GL00045                                            0911
         TM    BDUXINIT(BDUPTR),B'01100000'                        0911
         BZ    @RF00911                                            0911
@GL00045 TM    BDUXINIT(BDUPTR),B'11100000'                        0911
         BO    @RF00911                                            0911
*                 DO;                                              0912
*                   IF LCBPAKCH^=0 THEN/* IF THERE IS A BUFFER ON THE
*                                      PACK CHAIN                    */
         L     @09,LCBPAKCH-1(,IEDQLPTR)                           0913
         LA    @09,0(,@09)                                         0913
         LTR   @09,@09                                             0913
         BZ    @RF00913                                            0913
*                     LCBRECOF=LCBPAKCH->TTHDCF-HDRLEN;            0914
         SLR   @05,@05                                             0914
         ICM   @05,3,TTHDCF(@09)                                   0914
         SLR   @09,@09                                             0914
         IC    @09,HDRLEN                                          0914
         SLR   @05,@09                                             0914
         STH   @05,LCBRECOF(,IEDQLPTR)                             0914
*                   RPARM=RPRF;                                    0915
@RF00913 LR    RPARM,RPRF                                          0915
*                   CALL FREEBFR;                                  0916
         BAL   @14,FREEBFR                                         0916
*                   RETCODE=NOPOST;                                0917
         MVI   RETCODE,X'00'                                       0917
*                 END;                                             0918
*                                                                  0918
*/*                                                                  */
*/*EVERYTHING ELSE IS GOING TO MH SO LEAVE RET CODE UNTOUCHED        */
*/*                                                                  */
*                                                                  0919
*     END;                          /*                       @YM08115*/
*   END MHCHKER;                    /* RETURN TO CALLER              */
@EL00009 DS    0H                                                  0920
@EF00009 DS    0H                                                  0920
@ER00009 L     @14,@SA00009                                        0920
         BR    @14                                                 0920
         EJECT
*                                                                  0921
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE BLOCKING OPTION IS CHOSEN ON THE GROUP MACRO THIS      */
*   /* SUBROUTINE WILL BE EXECUTED. THE FUNCTION OF THIS SUBROUTINE  */
*   /* IS TO ACCUMULATE ARRIVING MESSAGE SEGMENTS UNTIL THE USER     */
*   /* SPECIFIED BUFSIZE IS REACHED OR FINAL STATUS IS RECEIVED. WHEN*/
*   /* EITHER CONDITION OCCURS, THE CURRENT AND PREVIOUSLY RECEIVED  */
*   /* INPUT WILL BE SENT TO THE MESSAGE HANDLER                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0921
*PACKER:                                                           0921
*   PROC OPTIONS(SAVE(14),RETREG);                                 0921
*                                                                  0921
PACKER   ST    @14,@SA00010                                        0921
*/*                                                                  */
*                                                                  0922
*   IF LCBPAKCH^=0 THEN             /* IF ANYTHING IS ON CHAIN       */
         L     @09,LCBPAKCH-1(,IEDQLPTR)                           0922
         LA    @09,0(,@09)                                         0922
         LTR   @09,@09                                             0922
         BZ    @RF00922                                            0922
*     DO;                                                          0923
*       PACKPIU=ADDR(LCBPAKCH->PRFPIUO)+LCBPAKCH->PRFPIUO;/* SET   0924
*                                      UP...                         */
         LA    PACKPIU,PRFPIUO(,@09)                               0924
         SLR   @00,@00                                             0924
         IC    @00,PRFPIUO(,@09)                                   0924
         ALR   PACKPIU,@00                                         0924
*       PACKBDU=ADDR(PACKPIU->PIU0RU);/* PIU AND BDU ADDRESSABILITY  */
         LA    PACKBDU,PIU0RU(,PACKPIU)                            0925
*       LCBPAKCH->PRFPRI=PRFPRI;    /* THE PACK BUFFER SHOULD HAVE 0926
*                                      SAME PRIORITY AS CURRENT INPUT*/
         MVC   PRFPRI(1,@09),PRFPRI(IEDQPPTR)                      0926
*/*                                                                  */
*/*OVERLAY THE BDU OF THE PACK SEGMENT WITH THE BDU FROM THE CURRENT */
*/*INPUT WHILE PRESERVING STATUS OF THE HEADER BIT.                  */
*/*                                                                  */
*                                                                  0927
*       IF PACKBDU->BDUHEADR=ON THEN                               0927
         TM    BDUHEADR(PACKBDU),B'01000000'                       0927
         BNO   @RF00927                                            0927
*         BDUHEADR=ON;              /* TURN ON HEADER BIT IN INPUT 0928
*                                      BDU                           */
         OI    BDUHEADR(BDUPTR),B'01000000'                        0928
*       PACKBDU->IEDBDU=IEDBDU;     /* OVERLAY PACK BDU WITH INPUT 0929
*                                      BDU                           */
@RF00927 MVC   IEDBDU(6,PACKBDU),IEDBDU(BDUPTR)                    0929
*/*                                                                  */
*/*THE CURRENT INPUT MESSAGE SEGMENT WILL BE LINKED TO THE LAST UNIT */
*/*ON THE PACK CHAIN.                                                */
*/*                                                                  */
*                                                                  0930
*       LASTUNIT=LCBPAKCH;          /* PICKUP PTR TO START OF CHAIN  */
         L     LASTUNIT,LCBPAKCH-1(,IEDQLPTR)                      0930
         LA    LASTUNIT,0(,LASTUNIT)                               0930
*       DO WHILE(LASTUNIT->PRFTIC^=PRFINTIC);                      0931
         B     @DE00931                                            0931
@DL00931 DS    0H                                                  0932
*         LASTUNIT=LASTUNIT->PRFTI0;                               0932
         L     @10,PRFTI0-1(,LASTUNIT)                             0932
         LA    @10,0(,@10)                                         0932
         LR    LASTUNIT,@10                                        0932
*       END;                                                       0933
@DE00931 CLC   PRFTIC(4,LASTUNIT),@CB01423                         0933
         BNE   @DL00931                                            0933
*       LASTUNIT->PRFTI0=RPRF;      /* CURRENT INPUT IS NOW ON END OF
*                                      CHAIN                         */
         STCM  RPRF,7,PRFTI0(LASTUNIT)                             0934
*/*                                                                  */
*/* CALCULATE UNUSED SPACE IN UNIT POINTED TO BY 'LASTUNIT'          */
*/*                                                                  */
*                                                                  0935
*       REM=(PACKPIU->TTHDCF+LENGTH(IEDTH)+LCBPAKCH->PRFPIUO)//AVTKEYLE
*           ;                                                      0935
         LA    REM,10                                              0935
         SLR   @09,@09                                             0935
         ICM   @09,3,TTHDCF(PACKPIU)                               0935
         ALR   REM,@09                                             0935
         L     @09,LCBPAKCH-1(,IEDQLPTR)                           0935
         SLR   @00,@00                                             0935
         IC    @00,PRFPIUO(,@09)                                   0935
         ALR   REM,@00                                             0935
         LR    @14,REM                                             0935
         SRDA  @14,32                                              0935
         LH    REM,AVTKEYLE(,IEDQAPTR)                             0935
         DR    @14,REM                                             0935
         LR    REM,@14                                             0935
*       IF REM=0 THEN               /* ZERO REMAINDER MEANS        0936
*                                      'LASTUNIT' IS FULL            */
         LTR   REM,REM                                             0936
         BNZ   @RF00936                                            0936
*         DO;                                                      0937
*           PLMVTD=ADDR(PRFPIUO);   /* TARGET DATA ADDRESS IS IN   0938
*                                      CURRENT UNIT                  */
         LA    @10,PLMV                                            0938
         LA    @09,PRFPIUO(,IEDQPPTR)                              0938
         ST    @09,PLMVTD(,@10)                                    0938
*           PLMVTU=RPRF;            /* INDICATE THE TARGET UNIT    0939
*                                      ADDRESS                       */
         ST    RPRF,PLMVTU(,@10)                                   0939
*         END;                                                     0940
*       ELSE                        /* NONZERO REMAINDER MEANS     0941
*                                      'LASTUNIT' IS NOT FULL        */
*         DO;                                                      0941
         B     @RC00936                                            0941
@RF00936 DS    0H                                                  0942
*           PLMVTU=LASTUNIT;        /* 'LASTUNIT' IS TARGET UNIT FOR
*                                      DATA MOVE                     */
         LA    @09,PLMV                                            0942
         ST    LASTUNIT,PLMVTU(,@09)                               0942
*           PLMVTD=ADDR(LASTUNIT->PRFPIUO)+REM;/* TARGET DATA ADDRESS*/
         LA    @00,PRFPIUO(,LASTUNIT)                              0943
         ALR   @00,REM                                             0943
         ST    @00,PLMVTD(,@09)                                    0943
*         END;                                                     0944
*                                                                  0944
*/*                                                                  */
*                                                                  0945
*       PLMVLNTH=TTHDCF-HDRLEN;     /* DATA LENGTH TO BE MOVED       */
@RC00936 LA    @10,PLMV                                            0945
         L     @09,PIUPTR                                          0945
         SLR   @02,@02                                             0945
         ICM   @02,3,TTHDCF(@09)                                   0945
         SLR   @00,@00                                             0945
         IC    @00,HDRLEN                                          0945
         SLR   @02,@00                                             0945
         STH   @02,PLMVLNTH(,@10)                                  0945
*       PACKPIU->TTHDCF=PACKPIU->TTHDCF+PLMVLNTH;/* ADD WHAT WAS   0946
*                                      RECEIVED TO WHAT WAS ON HAND  */
         SLR   @00,@00                                             0946
         ICM   @00,3,TTHDCF(PACKPIU)                               0946
         ALR   @02,@00                                             0946
         STCM  @02,3,TTHDCF(PACKPIU)                               0946
*       PLMVSU=RPRF;                /* SET A POINTER TO SOURCE UNIT  */
         ST    RPRF,PLMVSU(,@10)                                   0947
*       PLMVSD=ADDR(PIU0RU)+LENGTH(IEDBDU);/* SET POINTER TO SOURCE
*                                      DATA                          */
         LA    @09,PIU0RU(,@09)                                    0948
         AL    @09,@CF00058                                        0948
         ST    @09,PLMVSD(,@10)                                    0948
*       PLMVFLG1=0;                 /* CLEAR THE FLAG BYTE           */
         MVI   PLMVFLG1(@10),X'00'                                 0949
*       PLMVUNCF=ON;                /* THIS BIT REQUESTS THAT EMPTY
*                                      UNITS BE UNCHAINED            */
         OI    PLMVUNCF(@10),B'10000000'                           0950
*       RPARM=ADDR(PLMV);           /* ADDRESS OF PARM LIST          */
         LR    RPARM,@10                                           0951
*       CALL IEDMVBFR;              /* THIS MODULE PERFORMS DATA   0952
*                                      MOVEMENT FROM INDICATED SOURCE
*                                      TO INDICATED TARGET           */
         L     @10,AVTSAVTP(,IEDQAPTR)                             0952
         L     @15,SAVTMVBF(,@10)                                  0952
         BALR  @14,@15                                             0952
*       IF PLMVUNCA^=0 THEN         /* ON RETURN THIS FIELD POINTS TO
*                                      EMPTY UNITS                   */
         LA    @10,PLMV                                            0953
         L     @10,PLMVUNCA(,@10)                                  0953
         LTR   @10,@10                                             0953
         BZ    @RF00953                                            0953
*         DO;                                                      0954
*           RPARM=PLMVUNCA;         /* FREE THE ...                  */
         LR    RPARM,@10                                           0955
*           CALL FREEBFR;           /* ...EMPTY UNITS                */
         BAL   @14,FREEBFR                                         0956
*         END;                                                     0957
*                                                                  0957
*/*                                                                  */
*                                                                  0958
*       RPRF=LCBPAKCH;              /* SET ADDRESSABILITY TO THE   0958
*                                      BUFFER...                     */
@RF00953 L     RPRF,LCBPAKCH-1(,IEDQLPTR)                          0958
         LA    RPRF,0(,RPRF)                                       0958
*       PIUPTR=ADDR(PRFPIUO)+PRFPIUO;/* ...THE PIU...                */
         LA    @09,PRFPIUO(,IEDQPPTR)                              0959
         SLR   @05,@05                                             0959
         IC    @05,PRFPIUO(,IEDQPPTR)                              0959
         ALR   @09,@05                                             0959
         ST    @09,PIUPTR                                          0959
*       BDUPTR=ADDR(PIU0RU);        /* ...AND THE BDU                */
         LA    BDUPTR,PIU0RU(,@09)                                 0960
*     END;                                                         0961
*                                                                  0962
*   /*****************************************************************/
*   /*                                                               */
*   /* AT THIS POINT ONE OF TWO POSSIBILITIES HAS OCCURRED: INPUT WAS*/
*   /* RECEIVED AND THERE WAS NOTHING ON THE PACK CHAIN OR INPUT WAS */
*   /* RECEIVED AND SOMETHING WAS ON PACK CHAIN WITH WHICH THE       */
*   /* CURRENT INPUT WAS MERGED. IF THERE WAS A MESSAGE SEGMENT ON   */
*   /* THE PACK CHAIN, RPRF POINTS TO ITS FIRST UNIT, ELSE RPRF      */
*   /* POINTS TO THE FIRST UNIT OF THE CURRENT INPUT. IF FINAL STATUS*/
*   /* WAS RECEIVED OR BUFSIZE EXCEEDED, THE CURRENT AND/OR          */
*   /* ACCUMULATED INPUT WILL BE PASSED TO THE MH. OTHERWISE, THE    */
*   /* CURRENT INPUT WILL BE LEFT ON THE PACK CHAIN.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0962
*   IF EXITSW=ON THEN               /* IF THIS SWITCH IS ON, FINAL 0962
*                                      STATUS WAS RECVD              */
@RF00922 TM    EXITSW,B'10000000'                                  0962
         BNO   @RF00962                                            0962
*     DO;                                                          0963
*       RETCODE=MH;                 /* SO INDICATE BUFFER SHOULD BE
*                                      SENT TO MH                    */
         MVI   RETCODE,X'40'                                       0964
*       LCBPAKCH=0;                 /* CLEAR THE PACK CHAIN POINTER  */
         SLR   @09,@09                                             0965
         STCM  @09,7,LCBPAKCH(IEDQLPTR)                            0965
*     END;                                                         0966
*                                                                  0966
*/*                                                                  */
*/*NO, FINAL STATUS WAS NOT RECEIVED SO DETERMINE IF BUFFER SIZE HAS */
*/*BEEN REACHED. IF BUFFER SIZE IS REACHED, ALL INPUT WILL BE SENT   */
*/*TO THE MESSAGE HANDLER                                            */
*/*                                                                  */
*                                                                  0967
*   ELSE                                                           0967
*     IF LGBBUFSI=0 THEN            /* IF THIS VALUE NOT SPECIFIED,
*                                      THEN USE KEYLENGTH AS DEFAULT */
         B     @RC00962                                            0967
@RF00962 SLR   @09,@09                                             0967
         L     @05,IEDQQPTR                                        0967
         L     @05,IEDNLPTR-1(,@05)                                0967
         CH    @09,LGBBUFSI(,@05)                                  0967
         BNE   @RF00967                                            0967
*       DO;                                                        0968
*         IF TTHDCF=>AVTKEYLE-(LENGTH(PIU0TH)+PRFPIUO) THEN        0969
         LA    @05,10                                              0969
         SLR   @02,@02                                             0969
         IC    @02,PRFPIUO(,IEDQPPTR)                              0969
         ALR   @05,@02                                             0969
         LCR   @05,@05                                             0969
         AH    @05,AVTKEYLE(,IEDQAPTR)                             0969
         L     @02,PIUPTR                                          0969
         SLR   @00,@00                                             0969
         ICM   @00,3,TTHDCF(@02)                                   0969
         CR    @05,@00                                             0969
         BH    @RF00969                                            0969
*           DO;                                                    0970
*             RETCODE=MH;                                          0971
         MVI   RETCODE,X'40'                                       0971
*             LCBPAKCH=0;                                          0972
         STCM  @09,7,LCBPAKCH(IEDQLPTR)                            0972
*           END;                                                   0973
*         ELSE                                                     0974
*           LCBPAKCH=RPRF;          /* PUT CURRENT INPUT ON PACK   0974
*                                      CHAIN.                        */
         B     @RC00969                                            0974
@RF00969 STCM  RPRF,7,LCBPAKCH(IEDQLPTR)                           0974
*       END;                                                       0975
*     ELSE                                                         0976
*       DO;                         /* THE DEFAULT FOR BUFSIZE WAS 0976
*                                      NOT TAKEN                     */
         B     @RC00967                                            0976
@RF00967 DS    0H                                                  0977
*         IF TTHDCF=>LGBBUFSI-(LENGTH(PIU0TH)+PRFPIUO) THEN/* IF THE
*                                      ACCUMULATED INPUT EXCEEDS   0977
*                                      BUFSIZE THEN DO...            */
         L     @09,IEDQQPTR                                        0977
         L     @09,IEDNLPTR-1(,@09)                                0977
         LA    @05,10                                              0977
         SLR   @02,@02                                             0977
         IC    @02,PRFPIUO(,IEDQPPTR)                              0977
         ALR   @05,@02                                             0977
         LCR   @05,@05                                             0977
         AH    @05,LGBBUFSI(,@09)                                  0977
         L     @09,PIUPTR                                          0977
         SLR   @02,@02                                             0977
         ICM   @02,3,TTHDCF(@09)                                   0977
         CR    @05,@02                                             0977
         BH    @RF00977                                            0977
*           DO;                                                    0978
*             RETCODE=MH;           /* PASS TO MH                    */
         MVI   RETCODE,X'40'                                       0979
*             LCBPAKCH=0;           /* ZERO THE PACK CHAIN POINTER   */
         SLR   @09,@09                                             0980
         STCM  @09,7,LCBPAKCH(IEDQLPTR)                            0980
*           END;                                                   0981
*         ELSE                                                     0982
*           LCBPAKCH=RPRF;          /* ASSIGN THIS INPUT TO PACK   0982
*                                      CHAIN                         */
         B     @RC00977                                            0982
@RF00977 STCM  RPRF,7,LCBPAKCH(IEDQLPTR)                           0982
*       END;                                                       0983
*   END PACKER;                     /* RETURN TO CALLER              */
@EL00010 DS    0H                                                  0984
@EF00010 DS    0H                                                  0984
@ER00010 L     @14,@SA00010                                        0984
         BR    @14                                                 0984
         EJECT
*                                                                  0985
*   /*****************************************************************/
*   /*                                                               */
*   /* POST PLCB TO IEDQBD TO REDRIVE THE SCHEDULERS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0985
*POSTPLCB:                                                         0985
*   PROC OPTIONS(RETREG,SAVE(14));                                 0985
*                                                                  0985
POSTPLCB ST    @14,@SA00011                                        0985
*/*                                                                  */
*                                                                  0986
*   RPARM=RLCB;                     /* PARM REG POINTS TO ELEMENT    */
         LR    RPARM,RLCB                                          0986
*   LCBPRI=PRILCB;                  /* PRIORITY OF POST              */
         MVI   LCBPRI(IEDQLPTR),X'E7'                              0987
*   LCBRCLLN=ON;                    /* NO BFRS TO FREE       @YM07396*/
         OI    LCBRCLLN(IEDQLPTR),B'10000000'                      0988
*   LCBQCBA=AVTMSGS->BDQCB;         /* BD'S QCB ADDRESS              */
         L     @09,AVTMSGS-1(,IEDQAPTR)                            0989
         MVC   LCBQCBA(3,IEDQLPTR),BDQCB+1(@09)                    0989
*   CALL DSPPOSTR;                                                 0990
         LA    @15,DSPPOSTR(,RDISP)                                0990
         BALR  @14,@15                                             0990
*   EXITSW=ON;                      /* SET SWITCH TO EXIT            */
         OI    EXITSW,B'10000000'                                  0991
*/*                                                                  */
*                                                                  0992
*   END POSTPLCB;                   /* RETURN TO CALLER              */
@EL00011 DS    0H                                                  0992
@EF00011 DS    0H                                                  0992
@ER00011 L     @14,@SA00011                                        0992
         BR    @14                                                 0992
         EJECT
*                                                                  0993
*   /*****************************************************************/
*   /*                                                               */
*   /* RDINPROC PROCESSES ALL READS AND INVITES. APPROPRIATE         */
*   /* SUBROUTINES WILL BE CALLED TO PERFORM THE FUNCTIONS REQUIRED  */
*   /* FOR EACH TYPE OF INPUT. AN EOT OR IDLE IS INSERTED IN ZERO    */
*   /* LENGTH BUFFERS. AFTER BUFFER TRANSFORM, REMAINING FIELDS IN   */
*   /* THE BUFFER PREFIX ARE SETUP AND THE BUFFER IS SENT TO THE MH. */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0993
*RDINPROC:                                                         0993
*   PROC OPTIONS(RETREG,SAVE(14));                                 0993
*                                                                  0993
RDINPROC ST    @14,@SA00012                                        0993
*/*                                                                  */
*                                                                  0994
*   TRMPREP=OFF;                    /*                       @YM05638
*                                      INDICATE MONITOR NO LONGER  0994
*                                      ACTIVE IN THE NCP.            */
         LA    @02,TRMPREP(,RTRM)                                  0994
         LR    @00,@02                                             0994
         LA    @09,3                                               0994
         NR    @00,@09                                             0994
         LCR   @00,@00                                             0994
         ALR   @02,@00                                             0994
         L     @09,0(,@02)                                         0994
@GL00046 LR    @05,@09                                             0994
         N     @05,@CB02324+3(@00)                                 0994
         CS    @09,@05,0(@02)                                      0994
         BNE   @GL00046                                            0994
*   IF(QCBTSSES=OFF&BDURESP=RSPE13) THEN/* NOT TSO AND ATTEN @YM07331*/
         L     @09,IEDQQPTR                                        0995
         TM    QCBTSSES(@09),B'10000000'                           0995
         BNZ   @RF00995                                            0995
         TM    BDURESP(BDUPTR),B'00010011'                         0995
         BNO   @RF00995                                            0995
         TM    BDURESP(BDUPTR),B'00001100'                         0995
         BNZ   @RF00995                                            0995
*     DO;                           /*                       @YM07331*/
*       BDUERROR=OFF;               /*                       @YM07331*/
         NI    BDUERROR(BDUPTR),B'01111111'                        0997
*       BDUPHASE=RSP60;             /*                       @YM07331*/
         OI    BDUPHASE(BDUPTR),B'01100000'                        0998
*       BDURESP=RSPN02;             /* TREAT AS NORMAL EOT   @YM07331*/
         NI    BDURESP(BDUPTR),B'11100010'                         0999
         OI    BDURESP(BDUPTR),B'00000010'                         0999
*     END;                          /*                       @YM07331*/
*   IF LCBDIAL=ON THEN              /* IF THIS IS DIAL INPUT @YM08115*/
@RF00995 TM    LCBDIAL(IEDQLPTR),B'00000010'                       1001
         BNO   @RF01001                                            1001
*     CALL DIALDATA;                /* DIALDATA SUBROUTINE, THE    1002
*                                      DIALDATA ROUTINE IDENTIFIES 1002
*                                      AND PROCESSES INPUTS THAT   1002
*                                      SHOULD NOT GO TO MH. THIS   1002
*                                      ROUTINE SETS THE 'RETCODE'  1002
*                                      SWITCH TO ZERO IF THE INPUT 1002
*                                      WAS PROCESSED BY DIALDATA   1002
*                                                            @YM08115*/
         BAL   @14,DIALDATA                                        1002
*   CALL MHCHKER;                   /* THE MHCHKER SUBROUTINE      1003
*                                      IDENTIFIES AND PROCESSES    1003
*                                      INPUTS THAT SHOULD NOT GO TO
*                                      MH. THIS ROUTINE SETS THE   1003
*                                      RETCODE SWITCH TO ZERO IF THE
*                                      INPUT WAS PROCESSED BY MHCHKER
*                                                            @YM08172*/
@RF01001 BAL   @14,MHCHKER                                         1003
*   IF RETCODE=INITVAL THEN         /* IF RETURN CODE STILL EQUALS 1004
*                                      INITIAL VALUE                 */
         CLI   RETCODE,X'FF'                                       1004
         BNE   @RF01004                                            1004
*     DO;                           /* CONTINUE TO PROCESS THIS INPUT
*                                      CALL STATUS ANALYSIS ROUTINE  */
*       CALL STATUS;                /* TO SET LCB/SCB BITS           */
         BAL   @14,STATUS                                          1006
*/*                                                                  */
*                                                                  1007
*       IF LGBPACK=ON THEN          /* IF PACK OPTION WAS CHOSEN THEN*/
         L     @09,IEDQQPTR                                        1007
         L     @09,IEDNLPTR-1(,@09)                                1007
         TM    LGBPACK(@09),B'10000000'                            1007
         BNO   @RF01007                                            1007
*         CALL PACKER;              /* CALL PACK SUBROUTINE          */
         BAL   @14,PACKER                                          1008
*/*                                                                  */
*                                                                  1009
*       ELSE                        /* IF PACK OPTION WAS NOT CHOSEN */
*         RETCODE=MH;               /* INDICATE INPUT IS GOING TO MH
*                                      IF MESSAGE IS NOW READY TO    */
         B     @RC01007                                            1009
@RF01007 MVI   RETCODE,X'40'                                       1009
*       IF RETCODE=MH THEN          /* GO TO MESSAGE HANDLER         */
@RC01007 CLI   RETCODE,X'40'                                       1010
         BNE   @RF01010                                            1010
*         DO;                       /* THEN                          */
*           IF TTHDCF=HDRLEN THEN   /* IF DATA LENGTH IS ZERO        */
         L     @09,PIUPTR                                          1012
         SLR   @05,@05                                             1012
         ICM   @05,3,TTHDCF(@09)                                   1012
         SLR   @02,@02                                             1012
         IC    @02,HDRLEN                                          1012
         CR    @05,@02                                             1012
         BNE   @RF01012                                            1012
*             DO;                   /* ZERO LENGTH BUFFERS CANNOT BE
*                                      SENT TO MH SO...              */
*               IF BDUERROR=OFF THEN/* IF NOT AN ERROR INSERT EOT OR
*                                      IDLE                  @YM06951*/
         TM    BDUERROR(BDUPTR),B'10000000'                        1014
         BNZ   @RF01014                                            1014
*                 DO;               /*                       @YM06951*/
*                   TTHDCF=TTHDCF+1;/* ADD ONE TO DCF                */
         AL    @05,@CF00060                                        1016
         STCM  @05,3,TTHDCF(@09)                                   1016
*                   IF LCBUSUE=ON THEN/* IF EOM THEN...              */
         TM    LCBUSUE(IEDQLPTR),B'00000001'                       1017
         BNO   @RF01017                                            1017
*                     RUDATA(1)=EOT;/* INSERT AN EOT                 */
         LA    @09,PIU0RU(,@09)                                    1018
         MVI   RUDATA+6(@09),X'37'                                 1018
*                   ELSE                                           1019
*                     RUDATA(1)=IDLE;/* ELSE, INSERT AN IDLE         */
         B     @RC01017                                            1019
@RF01017 L     @09,PIUPTR                                          1019
         LA    @09,PIU0RU(,@09)                                    1019
         MVI   RUDATA+6(@09),X'17'                                 1019
*                 END;              /*                       @YM06951*/
*               ELSE                /* HEADER SENT ZERO LENGTH INSERT
*                                      IDLE IN TEXT          @YM06951*/
*                 IF BDUHEADR=ON THEN                              1021
         B     @RC01014                                            1021
@RF01014 TM    BDUHEADR(BDUPTR),B'01000000'                        1021
         BNO   @RF01021                                            1021
*                   ZEROLEN=ON;     /* ZERO LENGTH BFR       @YM06951*/
         OI    ZEROLEN,B'01000000'                                 1022
*                 ELSE                                             1023
*                   DO;             /*                       @YM06951*/
         B     @RC01021                                            1023
@RF01021 DS    0H                                                  1024
*                     TTHDCF=TTHDCF+1;/* ADD ONE TO DATA COUNT     1024
*                                                            @YM06951*/
         L     @09,PIUPTR                                          1024
         LA    @05,1                                               1024
         SLR   @02,@02                                             1024
         ICM   @02,3,TTHDCF(@09)                                   1024
         ALR   @05,@02                                             1024
         STCM  @05,3,TTHDCF(@09)                                   1024
*                     RUDATA(1)=IDLE;/* INSERT IDLE          @YM06951*/
         LA    @09,PIU0RU(,@09)                                    1025
         MVI   RUDATA+6(@09),X'17'                                 1025
*                   END;            /*                       @YM06951*/
*             END;                                                 1027
*                                                                  1027
@RC01021 DS    0H                                                  1027
@RC01014 DS    0H                                                  1028
*/*                                                                  */
*                                                                  1028
*           IF BDUPHASE^=RSP00&     /* IS THIS A....                 */
*               BDURESP=RSPN04 THEN /* TOTE TEST REQUEST MSG?        */
@RF01012 TM    BDUPHASE(BDUPTR),B'01100000'                        1028
         BZ    @RF01028                                            1028
         TM    BDURESP(BDUPTR),B'00000100'                         1028
         BNO   @RF01028                                            1028
         TM    BDURESP(BDUPTR),B'00011011'                         1028
         BNZ   @RF01028                                            1028
*             LCBOLT=ON;            /* OLT INDICATOR         @YM07683*/
         OI    LCBOLT(IEDQLPTR),B'00000001'                        1029
*/*                                                                  */
*                                                                  1030
*           RPARM=RPRF;             /* PUT PIU ADDR IN PARM REG      */
@RF01028 LR    RPARM,RPRF                                          1030
*           CALL IEDXFMI;           /* CALL IEDXFMI TO TRANSFORM PIU
*                                      TO A BUFFER                   */
         L     @10,AVTSAVTP(,IEDQAPTR)                             1031
         L     @15,SAVTXFMI(,@10)                                  1031
         BALR  @14,@15                                             1031
*           IF ZEROLEN=ON THEN      /* IS THIS A ZERO LENGTH BFR   1032
*                                                            @YM06951*/
         TM    ZEROLEN,B'01000000'                                 1032
         BNO   @RF01032                                            1032
*             PRFSIZE=0;            /* MAKE BFR ZERO LENGTH  @YM06951*/
         SLR   @10,@10                                             1033
         STH   @10,PRFSIZE(,IEDQPPTR)                              1033
*           IF LCBRECOF^=0 THEN     /* RDINSTAT SUBROUTINE CALCULATED
*                                      THE OFFSET TO THE LAST GOOD 1034
*                                      EOB AND SAVED THE VALUE AT  1034
*                                      LCBRECOF. THE SAVED VALUE   1034
*                                      SHOULD BE INSERTED IN BUFFER
*                                      PREFIX.                       */
@RF01032 LH    @10,LCBRECOF(,IEDQLPTR)                             1034
         LTR   @10,@10                                             1034
         BZ    @RF01034                                            1034
*             DO;                                                  1035
*               IF PRFNHDRN=ON THEN /* IS THIS A TEXT BFR?           */
         TM    PRFNHDRN(IEDQPPTR),B'00000001'                      1036
         BNO   @RF01036                                            1036
*                 PRFEOB=LCBRECOF+PRFISIZE+AVTTXTSZ;               1037
         SLR   @09,@09                                             1037
         IC    @09,PRFISIZE(,IEDQPPTR)                             1037
         ALR   @10,@09                                             1037
         AL    @10,@CF00453                                        1037
         STH   @10,PRFEOB(,IEDQPPTR)                               1037
*               ELSE                /* NO, ITS A HDR BFR             */
*                 PRFEOB=LCBRECOF+PRFISIZE+AVTHDRSZ;               1038
         B     @RC01036                                            1038
@RF01036 SLR   @10,@10                                             1038
         IC    @10,PRFISIZE(,IEDQPPTR)                             1038
         AH    @10,LCBRECOF(,IEDQLPTR)                             1038
         AL    @10,@CF00451                                        1038
         STH   @10,PRFEOB(,IEDQPPTR)                               1038
*               LCBRECOF=0;         /* ZERO OUT EOB OFFSET COUNT     */
@RC01036 SLR   @10,@10                                             1039
         STH   @10,LCBRECOF(,IEDQLPTR)                             1039
*             END;                                                 1040
*                                                                  1040
*/*                                                                  */
*                                                                  1041
*           IF QCBTSSES=ON THEN                                    1041
@RF01034 L     @10,IEDQQPTR                                        1041
         TM    QCBTSSES(@10),B'10000000'                           1041
         BNO   @RF01041                                            1041
*             PRFTSMSG=ON;                                         1042
*                                                                  1042
         OI    PRFTSMSG(IEDQPPTR),B'00010000'                      1042
*/*                                                                  */
*                                                                  1043
*                                   /* NOTE: PRFPRI HAS ALREADY BEEN
*                                      SET BY STATUS SUBROUTINE      */
*           PRFQCBA=LCBMHA;         /* MH QCB ADDRESS        @YM06085*/
@RF01041 MVC   PRFQCBA(3,IEDQPPTR),LCBMHA(IEDQLPTR)                1043
*           TRMTSATN=OFF;           /* TURN OFF THE ASYNCHRONOUS   1044
*                                      ATTENTION INDICATOR           */
         NI    TRMTSATN(RTRM),B'11111011'                          1044
*           IF PRFNHDRN=ON THEN     /* IS THIS A TEXT BUFFER         */
         TM    PRFNHDRN(IEDQPPTR),B'00000001'                      1045
         BNO   @RF01045                                            1045
*             SCBDEOB=RPRF;         /* TO MAKE MIDBATCH ERP WORK     */
         L     @10,IEDQSPTR-1(,IEDQLPTR)                           1046
         ST    RPRF,SCBDEOB(,@10)                                  1046
*           LCBRECVN=ON;            /* SEND TO INPUT SIDE OF MH    1047
*                                                            @YM04655*/
@RF01045 DS    0H                                                  1048
*           LCBSENDN=OFF;           /* ENSURE SEND OFF       @YM08420*/
         OI    LCBRECVN(IEDQLPTR),B'00000010'                      1048
         NI    LCBSENDN(IEDQLPTR),B'11111110'                      1048
*           PRFLCB=RLCB;            /* ADDRESS OF LCB                */
         STCM  RLCB,7,PRFLCB(IEDQPPTR)                             1049
*           RPARM=RPRF;             /* ADDRESS OF ELEMENT TO POST    */
         LR    RPARM,RPRF                                          1050
*           CALL DSPPOSTR;          /* PASS BUFFER TO MH             */
         LA    @15,DSPPOSTR(,RDISP)                                1051
         BALR  @14,@15                                             1051
*/*                                                                  */
*/*THIS COMPLETES PROCESSING OF THE CURRENT ELEMENT. LOGICAL CONTROL */
*/*WILL BE RETURNED TO THE 'DO LOOP' IN THE MAINLINE. IF EXIT SWITCH */
*/*HAS NOT BEEN SET, THE WAIT CHAIN WILL BE CHECKED FOR NEXT ELEMENT */
*/*TO PROCESS. IF WAIT CHAIN IS EMPTY, MODULE EXITS TO TCAM DISPATCHER
*                                                                    */
*/*                                                                  */
*                                                                  1052
*         END;                                                     1052
*     END;                                                         1053
*                                                                  1053
*/*                                                                  */
*                                                                  1054
*   END RDINPROC;                   /* RETURN TO CALLER              */
@EL00012 DS    0H                                                  1054
@EF00012 DS    0H                                                  1054
@ER00012 L     @14,@SA00012                                        1054
         BR    @14                                                 1054
         EJECT
*                                                                  1055
*   /*****************************************************************/
*   /*                                                               */
*   /* RDINSTAT SETS SCB/LCB STATUS BITS, SETS BUFFER POST PRIORITY  */
*   /* AND, TO SUPPORT CANCELMG LEVEL=BLK, PRFEOB IS CALCULATED AND  */
*   /* SAVED FOR LATER INSERTION. IF THE INPUT IS RECEIVED IN ERROR, */
*   /* ERRSTAT SUBROUTINE IS CALLED FOR DETAILED ERROR ANALYSIS      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1055
*RDINSTAT:                                                         1055
*   PROC OPTIONS(RETREG,SAVE(14));                                 1055
*                                                                  1055
RDINSTAT ST    @14,@SA00013                                        1055
*/*                                                                  */
*                                                                  1056
*   IF BDUERROR=ON THEN                                            1056
         TM    BDUERROR(BDUPTR),B'10000000'                        1056
         BNO   @RF01056                                            1056
*     DO;                                                          1057
*       PRFPRI=PRIERBFR;            /* SET ERROR 'E3' POST PRIORITY  */
         MVI   PRFPRI(IEDQPPTR),X'E3'                              1058
*       CALL ERRSTAT;               /* THIS SUBROUTINE SETS MESSAGE
*                                      ERROR RECORD BITS             */
         BAL   @14,ERRSTAT                                         1059
*     END;                                                         1060
*                                                                  1060
*/*                                                                  */
*                                                                  1061
*   ELSE                            /* INPUT WAS RECEIVED WITHOUT  1061
*                                      ERROR                         */
*     DO;                                                          1061
         B     @RC01056                                            1061
@RF01056 DS    0H                                                  1062
*       PRFPRI=PRIMHBFR;            /* SET NORMAL 'E4' POST PRIORITY */
         MVI   PRFPRI(IEDQPPTR),X'E4'                              1062
*       IF BDUXFINL=EXTX18 THEN     /* IF INPUT ENDED WITH EOT       */
         TM    BDUXFINL(BDUPTR),B'00011000'                        1063
         BNO   @RF01063                                            1063
         TM    BDUXFINL(BDUPTR),B'00000110'                        1063
         BNZ   @RF01063                                            1063
*         LCBUSUE=ON;               /* SET UNIT EXCEPTION STATUS AND
*                                      SEND TO MH                    */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       1064
*       ELSE                                                       1065
*         IF BDUXFINL=EXTX12 THEN   /* IF END OF TEXT WAS RECEIVED   */
         B     @RC01063                                            1065
@RF01063 TM    BDUXFINL(BDUPTR),B'00010010'                        1065
         BNO   @RF01065                                            1065
         TM    BDUXFINL(BDUPTR),B'00001100'                        1065
         BNZ   @RF01065                                            1065
*           DO;                                                    1066
*             SCBRCVTX=ON;          /* SET ETX INDICATOR             */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           1067
         OI    SCBRCVTX(@09),B'00100000'                           1067
*             LCBRECOF=LCBRECOF+    /* OFFSET TO ETX MUST BE SAVED 1068
*                                      AND ASSIGNED TO PRFEOB AFTER
*                                      PIU TO BUFFER TRANSFORM       */
*                 TTHDCF-HDRLEN;                                   1068
         L     @09,PIUPTR                                          1068
         SLR   @05,@05                                             1068
         ICM   @05,3,TTHDCF(@09)                                   1068
         AH    @05,LCBRECOF(,IEDQLPTR)                             1068
         SLR   @09,@09                                             1068
         IC    @09,HDRLEN                                          1068
         SLR   @05,@09                                             1068
         STH   @05,LCBRECOF(,IEDQLPTR)                             1068
*             LCBRESP=ON;           /* INDICATE RESPONSE OWED        */
         OI    LCBRESP(IEDQLPTR),B'00000001'                       1069
*           END;                                                   1070
*         ELSE                                                     1071
*           IF BDUXFINL=EXTX14 THEN /* IF AND EOB OR ETB WAS RECEIVED*/
         B     @RC01065                                            1071
@RF01065 TM    BDUXFINL(BDUPTR),B'00010100'                        1071
         BNO   @RF01071                                            1071
         TM    BDUXFINL(BDUPTR),B'00001010'                        1071
         BNZ   @RF01071                                            1071
*             DO;                                                  1072
*               LCBRECOF=LCBRECOF+TTHDCF-HDRLEN;                   1073
         L     @09,PIUPTR                                          1073
         SLR   @05,@05                                             1073
         ICM   @05,3,TTHDCF(@09)                                   1073
         AH    @05,LCBRECOF(,IEDQLPTR)                             1073
         SLR   @09,@09                                             1073
         IC    @09,HDRLEN                                          1073
         SLR   @05,@09                                             1073
         STH   @05,LCBRECOF(,IEDQLPTR)                             1073
*               LCBRESP=ON;         /* INDICATE CONVERSATIONAL     1074
*                                      RESPONSE OWED                 */
         OI    LCBRESP(IEDQLPTR),B'00000001'                       1074
*             END;                                                 1075
*                                                                  1075
*/*                                                                  */
*                                                                  1076
*           ELSE                                                   1076
*             DO;                                                  1076
         B     @RC01071                                            1076
@RF01071 DS    0H                                                  1077
*               PRFPRI=PRIERBFR;    /* ANY OTHER FORM OF INPUT MUST  */
         MVI   PRFPRI(IEDQPPTR),X'E3'                              1077
*               CALL ERRSTAT;       /* BE POSTED TO THE MH AS AN ERR */
         BAL   @14,ERRSTAT                                         1078
*             END;                                                 1079
*     END;                                                         1080
*                                                                  1080
*/*                                                                  */
*                                                                  1081
*   END RDINSTAT;                   /* RETURN TO CALLER              */
@EL00013 DS    0H                                                  1081
@EF00013 DS    0H                                                  1081
@ER00013 L     @14,@SA00013                                        1081
         BR    @14                                                 1081
         EJECT
*                                                                  1082
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED WHEN PROCESSING CERTAIN TYPES OF    */
*   /* DIAL INPUT, NEGATIVE POLL LIMIT AND EOT 'ONLY' RESPONSES AND  */
*   /* IT IS DETERMINED THAT TCAM SHOULD DISCONNECT                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1082
*SETNEGRP:                                                         1082
*   PROC OPTIONS(RETREG,SAVE(14));                                 1082
*                                                                  1082
SETNEGRP ST    @14,@SA00014                                        1082
*/*                                                                  */
*                                                                  1083
*   IF SCBLCK1N=ON&                 /* IF IN LOCK MODE AND           */
*       SCBMSGLN=OFF THEN           /* ITS EXTENDED LOCK             */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           1083
         TM    SCBLCK1N(@09),B'00100000'                           1083
         BNO   @RF01083                                            1083
         TM    SCBMSGLN(@09),B'00001000'                           1083
         BNZ   @RF01083                                            1083
*     DO;                           /* FORCE NEXT OPERATION TO BE  1084
*                                      ANOTHER READ                  */
*       LCBRECVN=OFF;               /* TURN OFF RECEIVE              */
         NI    LCBRECVN(IEDQLPTR),B'11111101'                      1085
*     END;                                                         1086
*   ELSE                            /* NO, NOT IN EXTENDED LOCK      */
*     LCBNEGRP=ON;                  /* SO SET NEGATIVE RESPONSE TO 1087
*                                      POLL WHICH CAUSES SCHEDULERS
*                                      TO DO A DISCONNECT. IF      1087
*                                      TERMINAL IS LEASED AN INVITE
*                                      WILL BE SCHEDULED, ELSE     1087
*                                      OPERATIONS WITH THIS TERMINAL
*                                      ARE TERMINATED                */
         B     @RC01083                                            1087
@RF01083 OI    LCBNEGRP(IEDQLPTR),B'00001000'                      1087
*   RPARM=RPRF;                                                    1088
@RC01083 LR    RPARM,RPRF                                          1088
*   CALL FREEBFR;                                                  1089
         BAL   @14,FREEBFR                                         1089
*   CALL POSTPLCB;                  /* E7 POST TO IEDQBD TO DRIVE  1090
*                                      SCHEDULERS. THIS ROUTINE ALSO
*                                      SETS 'EXITSW' WHICH TERMINATES
*                                      THE 'DO' LOOP IN THIS MODULES
*                                      MAINLINE                      */
         BAL   @14,POSTPLCB                                        1090
*/*                                                                  */
*                                                                  1091
*   END SETNEGRP;                   /* RETURN TO CALLER              */
@EL00014 DS    0H                                                  1091
@EF00014 DS    0H                                                  1091
@ER00014 L     @14,@SA00014                                        1091
         BR    @14                                                 1091
         EJECT
*                                                                  1092
*   /*****************************************************************/
*   /*                                                               */
*   /* IF INPUT HAS NO ERROR AND IS NOT PHASE 3, EOB OFFSET IS       */
*   /* CALCULATED, NORMAL MH POST PRIORITY IS SET AND THE RECEIVE IS */
*   /* CONTINUED. IF INPUT IS BSC STATUS, UNIT EXCEPTION IS INDICATED*/
*   /* AND BUFFER POST PRIORITY IS SET. FOR ALL OTHER INPUT, RDINSTAT*/
*   /* SUBROUTINE IS CALLED                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1092
*STATUS:                                                           1092
*   PROC OPTIONS(RETREG,SAVE(14));                                 1092
*                                                                  1092
STATUS   ST    @14,@SA00015                                        1092
*/*                                                                  */
*                                                                  1093
*   IF BDUERROR=OFF&                /* IF NOT AN ERROR               */
*       BDUPHASE^=RSP60 THEN        /* AND NOT PHASE 3               */
         TM    BDUERROR(BDUPTR),B'10000000'                        1093
         BNZ   @RF01093                                            1093
         TM    BDUPHASE(BDUPTR),B'01100000'                        1093
         BO    @RF01093                                            1093
*     DO;                           /* IF INPUT CONTAINS AN EOB, ETB
*                                      OR ETX, CALCULATE ITS OFFSET
*                                      AND SAVE IN LCBRECOF. AFTER 1094
*                                      PIU TO BFR TRANSFORM, THE   1094
*                                      SAVED VALUE WILL BE ASSIGNED
*                                      TO PRFEOB. THIS SUPPORTS    1094
*                                      CANCELMG LEVEL=BLK.           */
*       IF(BDUXINIT^=EXT80&         /* IF NOT SPECIAL OR             */
*           BDUXINIT^=EXTE0)&       /* HARDWARE STATUS AND           */
*           (BDUXFINL=EXTX12×       /* ETX OR                        */
*           BDUXFINL=EXTX14) THEN   /* ETB/EOB RECEIVED              */
         TM    BDUXINIT(BDUPTR),B'10000000'                        1095
         BNO   @GL00051                                            1095
         TM    BDUXINIT(BDUPTR),B'01100000'                        1095
         BZ    @RF01095                                            1095
@GL00051 TM    BDUXINIT(BDUPTR),B'11100000'                        1095
         BO    @RF01095                                            1095
         TM    BDUXFINL(BDUPTR),B'00010010'                        1095
         BNO   @GL00052                                            1095
         TM    BDUXFINL(BDUPTR),B'00001100'                        1095
         BZ    @RT01095                                            1095
@GL00052 TM    BDUXFINL(BDUPTR),B'00010100'                        1095
         BNO   @RF01095                                            1095
         TM    BDUXFINL(BDUPTR),B'00001010'                        1095
         BNZ   @RF01095                                            1095
@RT01095 DS    0H                                                  1096
*         LCBRECOF=LCBRECOF+        /* CALCULATE AND SAVE OFFSET TO
*                                      EOB/ETX/ETB                   */
*             TTHDCF-HDRLEN;                                       1096
*                                                                  1096
         L     @09,PIUPTR                                          1096
         SLR   @05,@05                                             1096
         ICM   @05,3,TTHDCF(@09)                                   1096
         AH    @05,LCBRECOF(,IEDQLPTR)                             1096
         SLR   @09,@09                                             1096
         IC    @09,HDRLEN                                          1096
         SLR   @05,@09                                             1096
         STH   @05,LCBRECOF(,IEDQLPTR)                             1096
*/*                                                                  */
*                                                                  1097
*       PRFPRI=PRIMHBFR;            /* SET NORMAL'E4' PRIORITY FOR 1097
*                                      BFR TO MH                     */
@RF01095 MVI   PRFPRI(IEDQPPTR),X'E4'                              1097
*       LCBCONT=ON;                 /* SET FOR CONTINUE TO RECEIVE   */
         OI    LCBCONT(IEDQLPTR),B'00001000'                       1098
*     END;                                                         1099
*                                                                  1099
*/*                                                                  */
*                                                                  1100
*   ELSE                                                           1100
*     DO;                           /* FINAL STATUS WAS RECEIVED,  1100
*                                      EITHER ERROR OR NORMAL        */
         B     @RC01093                                            1100
@RF01093 DS    0H                                                  1101
*       LCBCONT=OFF;                /* INDICATE THE RECEIVE OPERATION
*                                      SHOULD END                    */
         NI    LCBCONT(IEDQLPTR),B'11110111'                       1101
*       EXITSW=ON;                  /* SET SWITCH TO EXIT AFTER THIS
*                                      INPUT IS PROCESSED            */
         OI    EXITSW,B'10000000'                                  1102
*/*                                                                  */
*                                                                  1103
*       IF(BDUSYRSP=RSPERRST×       /* IF THIS IS BSC ERR STATUS OR  */
*           BDUSYRSP=RSPNRMST) THEN /* BSC NORMAL STATUS             */
         CLI   BDUSYRSP(BDUPTR),X'EA'                              1103
         BE    @RT01103                                            1103
         CLI   BDUSYRSP(BDUPTR),X'65'                              1103
         BNE   @RF01103                                            1103
@RT01103 DS    0H                                                  1104
*         DO;                                                      1104
*           SCBSOHE=ON;             /* SET BSC STATUS RECEIVED       */
         L     @09,IEDQSPTR-1(,IEDQLPTR)                           1105
         OI    SCBSOHE(@09),B'00000001'                            1105
*           LCBUSUE=ON;             /* SET UNIT EXCEPTION            */
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       1106
*           IF BDUERROR=ON THEN     /* IF INPUT HAS ERROR STATUS     */
         TM    BDUERROR(BDUPTR),B'10000000'                        1107
         BNO   @RF01107                                            1107
*             PRFPRI=PRIERBFR;      /* SET 'E3' ERROR PRIORITY       */
         MVI   PRFPRI(IEDQPPTR),X'E3'                              1108
*           ELSE                                                   1109
*             PRFPRI=PRIMHBFR;      /* FOR NONERRORS SET 'E4' NORMAL
*                                      PRIORITY                      */
         B     @RC01107                                            1109
@RF01107 MVI   PRFPRI(IEDQPPTR),X'E4'                              1109
*         END;                                                     1110
*                                                                  1110
*/*                                                                  */
*                                                                  1111
*       ELSE                                                       1111
*         CALL RDINSTAT;                                           1111
         B     @RC01103                                            1111
@RF01103 BAL   @14,RDINSTAT                                        1111
*     END;                                                         1112
*                                                                  1112
*/*                                                                  */
*                                                                  1113
*   END STATUS;                     /* RETURN TO CALLER              */
@EL00015 DS    0H                                                  1113
@EF00015 DS    0H                                                  1113
@ER00015 L     @14,@SA00015                                        1113
         BR    @14                                                 1113
*   END IEDSARI                                                    1114
*                                                                  1114
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TDCTD   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TEXTD   )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TLGBD   )                                       */
*/*%INCLUDE SYSLIB  (TPIU0D  )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TRSPD   )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  1114
*       ;                                                          1114
@DATA    DS    0H
         DS    0F
@SA00012 DS    1F
@SA00002 DS    1F
@SA00004 DS    1F
@SA00008 DS    1F
@SA00011 DS    1F
@SA00003 DS    1F
@SA00005 DS    1F
@SA00014 DS    1F
@SA00007 DS    1F
@SA00009 DS    1F
@SA00010 DS    1F
@SA00015 DS    1F
@SA00013 DS    1F
         DS    0F
@CF00060 DC    F'1'
@CF00058 DC    F'6'
@CF02008 DC    F'14'
@CF02249 DC    F'72'
@CF02317 DC    F'-4'
@CF02305 DC    XL4'0000FFFF'
@CF00451 DC    XL4'1E'
@CF00453 DC    XL4'17'
         DS    0D
IEDQQPTR DS    A
DCTADDR  DS    A
PIUPTR   DS    A
LTTCIN   DS    A
@CB01423 DC    X'08000002'
@CB02309 DC    B'111111111111111111111111111011111111111111111111111111C
               11'
@CB02324 DC    B'111111111111111111111111111110111111111111111111111111C
               11'
PLMV     DS    CL24
RETCODE  DS    BL1
SWITCH1  DS    BL1
         ORG   SWITCH1
EXITSW   DS    BL1
ZEROLEN  EQU   SWITCH1+0
@NM00208 EQU   SWITCH1+0
         ORG   SWITCH1+1
HDRLEN   DS    BL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LCIQCB   EQU   @02
REM      EQU   @10
PACKBDU  EQU   @02
PACKPIU  EQU   @05
LASTUNIT EQU   @02
BDUPTR   EQU   @10
IEDQAPTR EQU   @13
RDISP    EQU   @11
IEDQLPTR EQU   @04
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
RTRM     EQU   @08
RPARM    EQU   @01
R4       EQU   @04
RZERO    EQU   @00
R3       EQU   @03
RLINK    EQU   @15
RSTCB    EQU   @03
RLCB     EQU   @04
RPRF     EQU   @06
RQCB     EQU   @07
RBASE    EQU   @12
RAVT     EQU   @13
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
AVTREADD EQU   IEDQAVTD+308
AVTBUFSW EQU   IEDQAVTD+312
@NM00004 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTMSGS  EQU   IEDQAVTD+657
AVTBFRFG EQU   IEDQAVTD+712
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTKEYLE EQU   IEDQAVTD+960
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTTOPOL EQU   AVTBIT2
AVTBIT3  EQU   IEDQAVTD+980
AVTBIT4  EQU   IEDQAVTD+1064
@NM00086 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTXFMI EQU   IEDNSVTD+132
SAVTMVBF EQU   IEDNSVTD+160
SAVTMAND EQU   IEDNSVTD+228
SAVTTCPU EQU   IEDNSVTD+238
SAVTNAX  EQU   IEDNSVTD+248
SAVTZELM EQU   IEDNSVTD+270
SAVTDVAS EQU   IEDNSVTD+276
SAVTNID  EQU   IEDNSVTD+280
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUHEADR EQU   BDUFNFLG
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUERROR EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDURESP  EQU   BDUSYRSP
BDUEXRSP EQU   BDURSP+1
BDUXINIT EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUEND   EQU   IEDBDU+6
IEDDCT   EQU   0
DCTBYTE1 EQU   IEDDCT+1
DCTBYTE2 EQU   IEDDCT+2
DCTBYTE3 EQU   IEDDCT+3
DCTBYTE4 EQU   IEDDCT+4
DCTBYTE5 EQU   IEDDCT+5
IEDQDISP EQU   0
DSPDISP  EQU   4
DSPPOSTR EQU   28
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBCMDRJ EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBUSUE  EQU   LCBCSWUS
LCBCSWCS EQU   LCBCSWST+1
LCBCSWRC EQU   LCBCSW+5
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBCMDSV EQU   LCBRESTR
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBRECOF EQU   IEDQLCB+68
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRCLLN EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBSENDN EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBNEGRP EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBRESP  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBTTCIN EQU   IEDQLCB+90
LCBMSGFM EQU   IEDQLCB+92
LCBOLT   EQU   LCBMSGFM
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBWAITC EQU   LCBTPCD+5
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDNLGB  EQU   0
LGBBUFOU EQU   IEDNLGB+20
LGBPCI   EQU   IEDNLGB+25
LGBBYTE  EQU   IEDNLGB+29
LGBPACK  EQU   LGBBYTE
LGBOFLGS EQU   IEDNLGB+48
LGBBUFSI EQU   IEDNLGB+54
LGBRESER EQU   IEDNLGB+56
IEDPIU0  EQU   0
PIU0TH   EQU   IEDPIU0
PIU0RH   EQU   IEDPIU0+10
PIU0PAD  EQU   IEDPIU0+13
PIU0RU   EQU   IEDPIU0+14
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLG1 EQU   IEDPLMV+18
PLMVUNCF EQU   PLMVFLG1
PLMVUNCA EQU   IEDPLMV+20
IEDPLMVP EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTI0   EQU   PRFTIC+1
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
PRFLCB   EQU   IEDQPRF+13
@NM00172 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00172
PRFSIZE  EQU   PRFSVFFO+2
PRFSTAT1 EQU   IEDQPRF+20
PRFTSMSG EQU   PRFSTAT1
PRFEOFN  EQU   PRFSTAT1
PRFNHDRN EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFEOB   EQU   PRFXTRA+1
PRFSCAN  EQU   IEDQPRF+24
PRFISIZE EQU   PRFSCAN+1
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBSCHDL EQU   QCBSTAT
QCBINSRC EQU   IEDQQCB+21
@NM00182 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00182+1
QCBINHBN EQU   QCBTSOF2
QCBTSOF1 EQU   @NM00182+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBLGBAD EQU   QCBDCBAD
QCBFLAG  EQU   IEDQQCB+36
QCBTSSES EQU   QCBFLAG
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBN EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBPLCBA EQU   IEDNQCB+5
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBBFMM  EQU   SCBQTYPE
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBSOHE  EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBSLCTN EQU   SCBERR4
SCBTXTTN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBRCVTX EQU   SCBBSCFM
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBDEOB  EQU   IEDQSCB+52
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMWRBRK EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMCOHRT EQU   IEDNTRM+4
TRMBYTE0 EQU   IEDNTRM+6
TRMUDEF  EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
TRMSUBST EQU   IEDNTRM+12
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMUTERM EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDPMD   EQU   0
IEDNID   EQU   0
IEDDVAS  EQU   0
IEDIAP03 EQU   0
IEDQTNT  EQU   0
IEDXFMI  EQU   0
IEDMVBFR EQU   0
RUDATA   EQU   0
BDQCB    EQU   0
DSPBYPAS EQU   20
DSPCHAIN EQU   12
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPOST  EQU   24
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
QCBLDCB  EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBPAKCH EQU   LCBRSPIN+16
LCBCOREQ EQU   LCBTPCD
@NM00134 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
IEDNLPTR EQU   QCBLGBAD
IEDQSPTR EQU   LCBSCBA
TRMPRE1  EQU   TRMBYTE4
TRMCONT  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMLYNCH EQU   TRMPRE1
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMSTPND EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMINOUT EQU   TRMPRE
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
BDUTEXT  EQU   BDUEND
PRFSHDR  EQU   IEDQPRF+42
SCBRGSAV EQU   SCBEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00207 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00206 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
@NM00205 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
@NM00142 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00141 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00140 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00139 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00138 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00137 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00136 EQU   @NM00134+4
LCBNCPPT EQU   @NM00134+1
@NM00135 EQU   @NM00134
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
@NM00133 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00132 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00131 EQU   LCBCSWU1
@NM00130 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00129 EQU   LCBRSPIN
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00204 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00203 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00202 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMNOSND EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TTHTAG2  EQU   TTHTAG+1
@NM00201 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00200 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00199 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00198 EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00197 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00196 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBDESTQ EQU   IEDQSCB+1
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
@NM00195 EQU   TRHBYTE2
@NM00194 EQU   TRHBYTE2
@NM00193 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00192 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00191 EQU   TRHBYTE1
@NM00190 EQU   TRHBYTE1
@NM00189 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00188 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00187 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
QCBTTCIN EQU   QCBPLCBA+1
@NM00186 EQU   QCBPLCBA
@NM00185 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00184 EQU   QCBFHDTZ
@NM00183 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBMTP   EQU   QCBINHBN
QCBSATCT EQU   @NM00182
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00181 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00180 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00179 EQU   QCBELCHN+2
@NM00178 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00177 EQU   IEDPF2+1
@NM00176 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00175 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00174 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
@NM00173 EQU   PRFSCAN
PRFSTSO  EQU   PRFXTRA
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00172+3
PRFSRCE  EQU   PRFSVFFO
@NM00171 EQU   PRFTICC
@NM00170 EQU   PRFTICC
@NM00169 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00168 EQU   PRFTICC
@NM00167 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00166 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
PLMVFLG2 EQU   IEDPLMV+19
@NM00165 EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
PLMVSCTG EQU   PLMVFLG1
LGBIVLST EQU   IEDNLGB+60
LGBRESV4 EQU   LGBRESER+3
LGBRESV3 EQU   LGBRESER+2
LGBRESV2 EQU   LGBRESER+1
LGBRESV1 EQU   LGBRESER
@NM00164 EQU   IEDNLGB+53
LGBILCT  EQU   IEDNLGB+52
LGBSCTAD EQU   IEDNLGB+49
@NM00163 EQU   LGBOFLGS
LGBOPEN  EQU   LGBOFLGS
@NM00162 EQU   LGBOFLGS
LGBNAME  EQU   IEDNLGB+40
@NM00161 EQU   IEDNLGB+36
LGBTRANS EQU   IEDNLGB+33
@NM00160 EQU   IEDNLGB+32
@NM00159 EQU   IEDNLGB+31
LGBOPACE EQU   IEDNLGB+30
@NM00158 EQU   LGBBYTE
LGBBUFMA EQU   IEDNLGB+28
LGBDSORG EQU   IEDNLGB+26
@NM00157 EQU   LGBPCI
@NM00156 EQU   LGBPCI
LGBPCINO EQU   LGBPCI
@NM00155 EQU   LGBPCI
LGBPCIAO EQU   LGBPCI
@NM00154 EQU   LGBPCI
@NM00153 EQU   LGBPCI
@NM00152 EQU   LGBPCI
@NM00151 EQU   IEDNLGB+24
LGBMHA   EQU   IEDNLGB+21
@NM00150 EQU   LGBBUFOU
LGBPREF  EQU   LGBBUFOU
@NM00149 EQU   LGBBUFOU
LGBSUBST EQU   IEDNLGB+18
LGBTYPE  EQU   IEDNLGB+17
@NM00148 EQU   IEDNLGB
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00147 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00146 EQU   LCBXFLAG
@NM00145 EQU   LCBXFLAG
@NM00144 EQU   LCBXFLAG
@NM00143 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00128 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00127 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00126 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
@NM00125 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
LCBLOGDV EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBQB EQU   LCBERB+1
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00124 EQU   LCBTSTSW
@NM00123 EQU   LCBTSTSW
@NM00122 EQU   LCBTSTSW
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
@NM00118 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBSNDPR EQU   LCBSTAT2
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00117 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00116 EQU   LCBRESTR+1
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00115 EQU   LCBSIOCC
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00114 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00113 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00112 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00111 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00110 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00109 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00108 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00107 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBKEY   EQU   LCBRCB
@NM00106 EQU   DCTBYTE5
DCTL3270 EQU   DCTBYTE5
DCTSCS   EQU   DCTBYTE5
DCTTSPRF EQU   DCTBYTE4
DCTFMPRF EQU   DCTBYTE4
DCT2760  EQU   DCTBYTE3
DCTNOIDL EQU   DCTBYTE3
DCTCONTN EQU   DCTBYTE3
DCTBUFF  EQU   DCTBYTE3
DCTCHECK EQU   DCTBYTE3
DCTENCTL EQU   DCTBYTE3
DCTWTTA  EQU   DCTBYTE3
DCT1050  EQU   DCTBYTE3
DCTAUDIO EQU   DCTBYTE2
DCTLOCAL EQU   DCTBYTE2
DCTCONT  EQU   DCTBYTE2
DCTXMIT  EQU   DCTBYTE2
DCTSTCTL EQU   DCTBYTE2
DCTTWX   EQU   DCTBYTE2
DCTBRDST EQU   DCTBYTE2
DCTBISYN EQU   DCTBYTE2
DCTUMASK EQU   DCTBYTE1
DCTSADEV EQU   DCTBYTE1
DCT3270  EQU   DCTBYTE1
DCT2741  EQU   DCTBYTE1
DCT5041  EQU   DCTBYTE1
DCTATTEN EQU   DCTBYTE1
DCTBREAK EQU   DCTBYTE1
DCTINHIB EQU   DCTBYTE1
DCTBYTE0 EQU   IEDDCT
BDUXGRPH EQU   BDUEXRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00091 EQU   IEDQAVTD+1170
@NM00090 EQU   IEDQAVTD+1169
@NM00089 EQU   IEDQAVTD+1168
@NM00088 EQU   IEDQAVTD+1165
@NM00087 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00085 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00084 EQU   IEDQAVTD+1068
@NM00083 EQU   IEDQAVTD+1065
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00074 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00073 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00072 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTSTEAL EQU   IEDQAVTD+988
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00069 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00068 EQU   IEDQAVTD+878
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00053 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00052 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00051 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00050 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00049 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00048 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+724
@NM00040 EQU   IEDQAVTD+716
AVTSELCH EQU   IEDQAVTD+713
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00039 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00038 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTTSOPT EQU   IEDQAVTD+668
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00023 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00021 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00015 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+314
@NM00003 EQU   IEDQAVTD+313
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00547 EQU   @RC00543
@RC00563 EQU   @EL00002
@RC00590 EQU   @EL00003
@RF00652 EQU   @EL00003
@RC00663 EQU   @EL00004
@RF00710 EQU   @EL00005
@RC00694 EQU   @EL00005
@RC00692 EQU   @EL00005
@RC00687 EQU   @EL00005
@RC00678 EQU   @EL00005
@RC00723 EQU   @RC00714
@RC00716 EQU   @RC00714
@RF00799 EQU   @RC00765
@RC00792 EQU   @RC00765
@RC00786 EQU   @RC00765
@RC00779 EQU   @RC00765
@RC00772 EQU   @RC00765
@RC00767 EQU   @RC00765
@RT00832 EQU   @EL00006
@RC00849 EQU   @EL00007
@RC00843 EQU   @EL00007
@RF00876 EQU   @EL00009
@RF00911 EQU   @EL00009
@RC00898 EQU   @EL00009
@RC00888 EQU   @EL00009
@RC00880 EQU   @EL00009
@RT00878 EQU   @EL00009
@RC00967 EQU   @EL00010
@RC00962 EQU   @EL00010
@RC00977 EQU   @EL00010
@RC01017 EQU   @RC01014
@RF01004 EQU   @EL00012
@RF01010 EQU   @EL00012
@RC01056 EQU   @EL00013
@RC01071 EQU   @EL00013
@RC01065 EQU   @EL00013
@RC01063 EQU   @EL00013
@RC01093 EQU   @EL00015
@RC01103 EQU   @EL00015
@RF00549 EQU   @RC00547
@RC00601 EQU   @RC00590
@RC00592 EQU   @RC00590
@RF00720 EQU   @RC00716
@RT00851 EQU   @RC00849
@RF00882 EQU   @RC00880
@RF00890 EQU   @RC00888
@RC00900 EQU   @RC00898
@RC00969 EQU   @RC00967
@RC01107 EQU   @RC01103
@ENDDATA EQU   *
         END   IEDSARI,(C'PLS2023',0701,78145)
