XA       TITLE '''IEDQXA'' - TCAM DISK MESSAGE QUEUE INITIALIZER'
IEDQXA   CSECT
*A-000000-999999                                               @X02X5N0
         SPACE 2
*A324000,716000                                                  A51067
*C144000                                                         A51067
*A224000,249000,675000                                           A49215
*D724000                                                         A49215
*C144000                                                         A49215
*C019000-022000,032000-033000,038000                             S21101
*D045000                                                         S21101
*C047000,052000,056000,061000,068000,084000-087000,100000-101000 S21101
*A103000                                                         S21101
*C104000-107000,118000-120000,124000,127000,144000,153000        S21101
*C160000-174000,181000-182000                                    S21101
*D186000-187000,188000                                           S21101
*C204000-205000,214000-215000,226000-227000                      S21101
*A233000                                                         S21101
*D235000                                                         S21101
*A258000                                                         S21101
*C260000-261000,264000,278000                                    S21101
*A284000,286000                                                  S21101
*C289000                                                         S21101
*A291000                                                         S21101
*C294000                                                         S21101
*A296000,298000                                                  S21101
*C299000,302000                                                  S21101
*A304000,305000,310000                                           S21101
*C311000-313000                                                  S21101
*A314000                                                         S21101
*C315000                                                         S21101
*A316000                                                         S21101
*C317000                                                         S21101
*A318000                                                         S21101
*C319000-320000                                                  S21101
*A323000,328000                                                  S21101
*C341000-342000,347000-348000                                    S21101
*D354000-356000,366000-394000,399000,400000,406000               S21101
*C407000                                                         S21101
*A411000                                                         S21101
*D422000-424000,428000-436000,446000-450000                      S21101
*C452000,457000,462000,468000,474000,479000                      S21101
*D483000-487000,489000,494000,500000,507000,521000,525000        S21101
*A526000,536000                                                  S21101
*C537000                                                         S21101
*A539000                                                         S21101
*C540000-541000,543000                                           S21101
*A544000                                                         S21101
*C545000                                                         S21101
*A546000,547000                                                  S21101
*C551000,556000-560000,564000                                    S21101
*A565000,567000                                                  S21101
*C569000,570000                                                  S21101
*A573000                                                         S21101
*C583000,588000                                                  S21101
*A593000                                                         S21101
*C594000,601000,606000,615000                                    S21101
*A626000                                                         S21101
*C627000                                                         S21101
*A629000                                                         S21101
*C631000,636000                                                  S21101
*A644000                                                         S21101
*C648000                                                         S21101
*A650000                                                         S21101
*C651000-652000                                                  S21101
*A669000                                                         S21101
*C728000,742000,770000                                           S21101
*D545500,614000,672000                                           X01004
*C119000-120000,296000,302000,589000,590000,593000               X01004
*A279060-279840,281500,296060-296420,299530-299920,300500,       X01004
*A411940-411980,516200-516600,521600,531080-531880,532300-532600,X01004
*A580080-580880,589500,590300-590600,593030-593360,594040-594440,X01004
*A600300,600640-601080,605500,608500,614900,624500,625300-625600,X01004
*A626200,626800,627600,630650-631100,637040-637800,653500,658300,X01004
*A670050-670900,672500,694100-694500,700200-700800,701200-701800,X01004
*A702040-702880,709200-709800                                    X01004
*C038000,405000,411400                                         @ZA03118
*A253000,254000,261100,684000                                  @YA11949
         EJECT
***********************************************************************
*                                                                     *
*TITLE -- 'IEDQXA' - TCAM DISK MESSAGE QUEUE INITIALIZER              *
*                                                                     *
*STATUS -- CHANGE LEVEL 8                                             *
*                                                                     *
*FUNCTION -- THIS ROUTINE CREATES ON DISK EACH KEY AND DATA RECORD    *
*   OF THE DATA SET WHICH MAY BE USED BY TCAM AS EITHER A REUSABLE    *
*   OR NON-REUSABLE MESSAGE QUEUE.  IT INSURES THAT THE FORMAT IS     *
*   COMPATIBLE WITH TCAM'S REQUIREMENTS.                              *
*                                                                     *
*ENTRY POINT -- ONLY ONE ENTRY POINT, CALLED BY JOB MANAGEMENT,       *
*        'IEDQXA' - INITIALIZE TCAM DISK MESSAGE QUEUE                *
*   CALLING SEQUENCE -                                                *
*        L     15,=V(IEDQXA)                                          *
*        BALR  14,15                                                  *
*                                                                     *
* INPUT -- PARAMETERS ARE PASSED IN A DD STATEMENT.  THERE IS ONES21101
*   DD CARD REQUIRED, DDNAME IS 'IEDQDATA'.                      S21101
*   'IEDQDATA'- DEFINES A NEW DATA SET TO BE CREATED AS AN TCAM       *
*   DISK MESSAGE QUEUE.  REQUIRED KEYWORDS ARE --                     *
*   'DSNAME=' - NAME OF DATA SET TO BE CREATED.  THIS SAME NAME IS    *
*   USED IN AN TCAM JOB JCL DEFINING THE USE OF THIS DATA SET.        *
*   'DISP=' - 'NEW' MUST BE INDICATED. 'KEEP' OR 'CATLG' MUST         *
*   ALSO BE USED.  'CATLG' IS PREFERRED.                              *
*   'SPACE=' - ALLOCATION MUST BE IN 'CYL'.  BOTH PRIMARY AND         *
*   SECONDARY AMOUNTS MUST BE SPECIFIED, USING AN IDENTICAL AMOUNT.   *
*   THE REQUEST FOR 'CONTIG' SPACE IS REQUIRED.                       *
*   'UNIT=' - THE DEVICE MUST BE 2311,2314,OR 3330.  FOR MULTIPLES21101
*   VOLUME DATA SETS, SPECIFY UNIT=(XXX,N) WHERE N IS NO. VOLUMESS21101
*   'VOLUME=' - THE SERIAL NUMBER OF EACH EXTENT IS LISTED IN THE     *
*   ORDER TO BE FORMATTED.  THE NUMBER OF VOLUMES SPECIFIED IS THE    *
*   SAME AS 'N' IN 'UNIT' (ABOVE).                                    *
*   'DCB=' - SPECIFICATION OF KEYLEN IS REQUIRED.  VALUE IS LIMITED   *
*   TO 36 TO 255 INCLUSIVE. THIS VALUE MUST BE                @ZA03118*
*   THE SAME VALUE AS CODED ON INTRO MACRO IN THE MESSAGE CONTROL     *
*   PROGRAM ASSEMBLY UNDER THE INTRO KEYWORD 'KEYLEN'.                *
*                                                                     *
*   SAMPLE JCL --                                                     *
*   //JOBNAME JOB MSGLEVEL=1                                          *
*   //STEP EXEC PGM=IEDQXA                                            *
*   //IEDQDATA DD DSNAME=DISKQ,DISP=(NEW,CATLG),                      *
*   //            DCB=(,KEYLEN=252),                             S21101
*   //            SPACE=(CYL,(20,20),,CONTIG),UNIT=(2311,2),          *
*   //            VOLUME=SER=(111111,222222)                          *
*                                                                     *
*OUTPUT -- THE IEDQDATA DATA SET IS FORMATTED.  THE CONSOLE TYPE-     *
*   WRITER AND THE PROGRAMMER'S CONSOLE CONTAIN A SERIES OF      S21101
*   MESSAGES INDICATING THE STATUS OF THE INITIALIZATION.             *
*                                                                     *
*EXTERNAL ROUTINES -- 'EXCP' IS USED TO WRITE DUMMY RECORDS TO        *
*   DISK USING 'EXCP', 'WAIT', 'OPEN', 'CLOSE', 'DCB', 'RDJFCB', S21101
*   AND 'WTO' (SVC 35) HANDLES OUTPUT TO CONSOLE.                     *
*                                                                     *
*EXITS-NORMAL -- REGISTER 15 IS ZERO.  SUCCESSFUL COMPLETION.         *
*                                                                     *
*EXITS-ERROR -- REGISTER 15 IS 4.  RESERVED FOR FUTURE DEFINITIONS21101
*   REGISTER 15 IS 8.  KEYLEN OMITTED OR INVALID                      *
*   REGISTER 15 IS 12. I/O ERROR IEDQDATA                             *
*   REGISTER 15 IS 16. ILLEGAL SPACE PARAMETERS                       *
*   REGISTER 15 IS 20. UNABLE TO OPEN                                 *
*   IN ALL CASES, THE IEDQDATA DATA SET SHOULD BE SCRATCHED           *
*   AND RECREATED                                                     *
*                                                                S21101
*TABLES/WORK AREAS -- THE JFCB IS READ INTO A LOCAL CONSTANT AREA.    *
*   THE OUTPUT BUFFER IS A GETMAINED AREA CLEARED TO ZERO.            *
*                                                                     *
*ATTRIBUTES -- REUSABLE, ENABLED, PROBLEM PROGRAM MODE, RESIDENT      *
*                                                                     *
*NOTES -- THE OPERATION OF THIS ROUTINE DEPENDS UPON AN INTERNAL      *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT  *
*   TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED   *
*   SO THAT REDEFINITION OF 'CHARACTER' CONSTANTS, BY REASSEMBLY,     *
*   WILL RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.          *
*                                                                     *
*   THIS MODULE IS PUT ONTO SYS1.LINKLIB AT SYSGEN TIME.  IT IS       *
*   EXECUTED PRIOR TO STARTING TCAM TO CREATE A DISK MESSAGE          *
*   QUEUE DATA SET.                                                   *
*                                                                     *
*   MESSAGES GENERATED ON PROGRAMMER'S CONSOLE (ROUTCDE=11) ARE -S21101
*   'IED067I TCAM INITIALIZATION BEGUN' - START OF EXECUTION     S21101
*        ROUTCDE=(2,11)                                          S21101
*        PROCESSING CONTINUES.                                        *
*   'IED068I UNABLE TO OPEN IEDQDATA' - RETURN CODE 20.  READ         *
*        JFCB OF IEDQDATA UNSUCCESSFUL.  DD CARD MISSING.             *
*   'IED069I INVALID KEYLEN FOR IEDQDATA' - RETURN CODE 8.            *
*        KEYLEN PARAMETER EITHER MISSING OR TOO SMALL.                *
*   'IED070I IEDQDATA DOES NOT SPECIFY CONTIG SPACE IN CYLINDERS'     *
*        RETURN CODE 16.  SPACE MUST SPECIFY 'CYL' AND 'CONTIG'.      *
*   'IED071I UNEQUAL PRIMARY AND SECONDARY EXTENTS ON IEDQDATA'       *
*        RETURN CODE 16. PRIMARY AND SECONDARY EXTENT SIZES MUST      *
*        BE IDENTICAL.                                                *
*   'IED072I I/O ERROR ON IEDQDATA' - RETURN CODE 12.  UNABLE TO      *
*        RECOVER FROM DISK I/O ERROR ON DISK MESSAGE QUEUE DATA SET.  *
*        ROUTCDE=(2,10,11)                                       S21101
*   'IED074I TCAM INITIALIZATION COMPLETE' - RETURN CODE 0.           *
*        SUCCESSFUL COMPLETION.                                       *
*        ROUTCDE=(2,11)                                          S21101
*   'IED075I END OF EXTENT.  RECORD COUNT IS RRRRRRRR, TIME IS NNS21101
*        SEC' - GIVES TOTAL RECORD COUNT UP THRU CURRENT EXTENT.      *
*        THIS MSG APPEARS AT THE END OF INITIALIZING EACH VOLUME.S21101
*        FINAL COUNT IS FOR ENTIRE DATA SET.  INITIALIZATION     S21101
*        CONTINUES WITH NEXT EXTENT, IF ANY.                     S21101
*                                                                     *
*   EACH RECORD FORMATTED CONTAINS COUNT, KEY, AND DATA FIELDS.       *
*   COUNT FIELD HAS CCHHR ABSOLUTE ADDRESS, KEY AND DATA FIELDS ARE   *
*   AREA TO RECEIVE TCAM MESSAGE HEADERS AND TEXT INFORMATION. THE    *
*   DATA AREA HAS ONLY CERTAIN STATUS AND CHAINING INFORMATION.       *
*                                                                     *
***********************************************************************
         EJECT
*        REGISTER EQUATES
*
R15      EQU   15                       SCRATCH REGISTER, ENTRY ADDR
R14      EQU   14                       SCRATCH REGISTER, RETURN ADDR
R13      EQU   13                       PROGRAM BASE, SAVEAREA POINTER
R12      EQU   12                       ADDR OF SYSPRINT OR DATA DCBS
R11      EQU   11                       UNUSED                   S21101
R10      EQU   10                       RECORDS-PER-CPB COUNTER. X01004
R9       EQU   9                        CCW COUNTER.             X01004
R8       EQU   8                        ADDR OF JFCB
R7       EQU   7                        RECORD COUNTER
R6       EQU   6                        VOLUME COUNTER
R5       EQU   5                        WORK REG                 S21101
R4       EQU   4                        RETURN FROM INTERNAL SUBROUTINE
R3       EQU   3                        RETURN CODE
R2       EQU   2                        WORK REG                 S21101
R1       EQU   1                        PARAMETER PASSER
R0       EQU   0                        PARAMETER PASSER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         USING IHADCB,R12               DCB DSECT BASE
         USING JFCBD,R8                 JFCB DSECT BASE
         USING *,R15                    TEMPORARY PROGRAM BASE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         B     SKIP                     BRANCH AROUND CONSTANTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IEDQXA   IEDHJN ,                                                S22025
SAVE     DC    18F'0'                   LINKAGE SAVEAREA
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SKIP     EQU   *
         STM   R14,R12,12(R13)          SAVE CALLER'S REGISTERS
         ST    R13,SAVE+4
         LA    R12,SAVE
         ST    R12,MYSAVE(,R13)         EXCHANGE SAVEAREA ADDRESSS21101
         LR    R13,R12
         DROP  R15                      FORGET TEMPORARY BASE
         USING SAVE,R13                 ESTABLISH PROGRAM BASE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         EJECT
         WTO   MF=(E,MSG2)              'INITIALIZATION BEGUN'   S21101
*
         RDJFCB QUES                    READ JFCB OF IEDQDATA TO CORE
*
         CLC   JFCB(175),JFCB+1         WAS JFCB READ SUCCESSFULLY
         BNE   JFCBOK                     YES, CONTINUE PROCESSING
*                                         NO, ERROR,DD CARD MISSING
         WTO   MF=(E,MSG3)              'UNABLE TO OPEN IEDQDATA'S21101
*
         LA    R3,CODE20                SET RETURN CODE
CLOSE    EQU   *
         LR    R15,R3                   GET RETURN CODE TO R15
         L     R13,SAVE+4
         RETURN (14,12),T,RC=(15)       EXIT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
*
JFCBOK   EQU   *
         LA    R8,JFCB                  SET JFCB DSECT BASE
         SR    R15,R15
         IC    R15,JFCKEYLE             GET KEYLEN SPECIFIED ON DD CARD
         LA    R14,PREFIXSZ             GET MINIMUM KEYLEN PERMITTED
         CR    R14,R15                  IS KEYLEN BIG ENOUGH
         BNH   KEYLENOK                   YES, CONTINUE PROCESSING
*                                         NO, ILLEGAL KEYLEN
         LA    R3,CODE8                 SET RETURN CODE
         WTO   MF=(E,MSG4)              'INVALID KEYLEN' MSG     S21101
*
         B     CLOSE                    QUIT
*
KEYLENOK EQU   *
         TM    JFCBCTRI,CYL             DOES SPACE PARAM SAY
*                                         'CYL' AND 'CONTIG'
         BO    CYLOK                      YES, CONTINUE PROCESSING
*                                         NO, FUSS
         WTO   MF=(E,MSG5)              'CONTIG CYL NOT SPECIFIEDS21101
*
SET16    EQU   *
         LA    R3,CODE16                SET RETURN CODE
         B     CLOSE                    GO QUIT
*
CYLOK    EQU   *
         CLC   JFCBPQTY(3),JFCBSQTY     IS PRIMARY SPACE QUANTITY
*                                         SAME AS SECONDARY QUANTITY
         BE    SPACEOK                    YES, CONTINUE PROCESSING
CYLOK1   EQU   *                                                 A49215
*                                         NO, FUSS
         WTO   MF=(E,MSG6)              'UNEQUAL SIZE EXTENTS'   S21101
*
         B     SET16                    GO SET RETURN CODE AND QUIT
*
SPACEOK  EQU   *
*
         OPEN  (QUES,(OUTPUT)),TYPE=J   OPEN IEDQDATA DATA SET
*                                                                S21101
         LA    R12,QUES                 SET IHADCB DSECT BASE TO DATA
         SR    R6,R6
         IC    R6,JFCBNVOL              INITIALIZE VOLUME COUNTER
         SR    R7,R7                    CLEAR RECORD COUNTER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
*              INITIALIZE DEVICE DEPENDENT INFORMATION
*                                  COMPUTE NUMBER OF RECORDS PER TRACK
         SPACE 2
*   RECSTRK=(TRKLEN+BLKOHD-LBLKOVD)/(BLKOVD+(TOLFAC*(DATALEN+KEYLEN))
         SPACE 1
         DEVTYPE IEDQDDN,DEVWD1,DEVTAB
         SPACE 1
         MVC   KEYLEN,JFCKEYLE
         L     R0,JFCBSQTY    SECONDARY CYL LENGTH 3 HGH BYTES   A49215
         SRL   R0,EIGHT                GET IN LOW 3 BYTES        A49215
         MH    R0,DEVWD3B              TIMES TRACK LENGTH        A49215
         LA    R1,QUES                 DCB ADDRESS               A49215
         L     R1,44(R1)               GET DEB ADDRESS           A49215
         CH    R0,46(R1)               PRIMARY DEB VS SECOND JFCBA49215
         BNE   CYLOK1                  NOT EQUAL, - FUSS         A49215
         SPACE 1
         SR    R1,R1               CLEAR REG FOR IC USE
         LH    R0,DEVWD4A          GET MAX LENGTH
         IC    R1,DEVWD4C          GET LBLKOHD
         TM    DEVWD5B,DCT10H           ONLY ONE OVERHEAD      @YA11949
         BZ    USEONE                   BRANCH NO              @YA11949
         LH    R1,DEVWD4B               USE HALFWORD           @YA11949
USEONE   EQU   *                                               @YA11949
         SR    R0,R1               SUBTRACT FROM EFFECTIVE TRK LEN
         SR    R1,R1                    CLEAR REGS             @YA11949
         IC    R1,KEYLEN           GET KEY LENGTH
         LA    R2,DATALEN(R1)      ADD KEY AND DATA LENGTHS
         TM    DEVWD5B,DEVTOL      IS TOLERANCE FACTOR USED
         BZ    INIT1               BRANCH IF NOT
*                                                                S21101
         MH    R2,DEVWD5C          MULTIPLY BY TOLERANCE
         SRA   R2,DIVBY512         DIVIDE BY 512                 S21101
INIT1    EQU   *                                                 S21101
         IC    R1,DEVWD4B          GET BLK OVERHEAD              S21101
         TM    DEVWD5B,DCT10H           ONLY ONE OVERHEAD      @YA11949
         BZ    INIT2                    BRANCH NO              @YA11949
         LH    R1,DEVWD4B               USE HALFWORD           @YA11949
INIT2    EQU   *                                               @YA11949
         AR    R0,R1               ADD TO EFFECTIVE TRK LEN
         AR    R2,R1               ADD TO EFFECTIVE RECORD LEN
         SRDA  R0,FULLWORD         EXTEND SIGN BIT TO EVEN REG   S21101
         DR    R0,R2               DIVIDE REMAINING TRACK BY EFF LENGTH
         STH   R1,RECSTRK          SAVE NUMBER OF RECORDS PER TRACK
         MH    R1,DEVWD3B          TIMES NUMBER OF TRACKS PER CYL
         STH   R1,RECSCYL          SAVE NUMBER OF RECORDS PER CYL
         DROP  R8
         LA    R8,XCB1             POINT TO ONLY XCB
         USING XCBD,R8
         SPACE 4
*              CPBSIZE=176+16*(TRKS*(RECS+3))
         SPACE 2
         LH    R1,RECSTRK          GET NUMBER OF RECORDS PER TRACK
         AH    R1,C3               ADD THREE
         MH    R1,DEVWD3B          MULTIPLY BY NUMBER OF TRACKS/CYL
         LA    R0,SIX(,R1)         ADD 6 FOR NUMBER OF CCWS      S21101
         STH   R0,NUMCCWS          STORE NUMBER OF CCWS
         MVI   SWITCH,CLEAR             INITIALIZE SWITCHES OFF. X01004
         CLM   R0,HWDMASK,MAXCCWS       MORE THAN 180 CCW'S PER  X01004
*                                         CYLINDER               X01004
         BNH   REGULAR                  BRANCH IF NO - NO SPECIALX01004
*                                         HANDLING REQUIRED.     X01004
         LH    R1,MAXCCWS               SET R1 = 180.            X01004
         MH    R1,C16                   MULTIPLY BY WIDTH OF CCW X01004
*                                         AND DATA.              X01004
         AH    R1,C64                   ADD SIZE OF CPB PREFIX.  X01004
         OI    SWITCH,HIGHBIT           SET SWITCH TO INDICATE   X01004
*                                         SPECIAL HANDLING FOR   X01004
*                                         180 CCW'S PER EXCP.    X01004
         B     SETCPB                   GO SET UP CPB SIZE.      X01004
REGULAR  EQU   *                                                 X01004
         MH    R1,C16              MULTIPLY BY WIDTH OF CCW AND DATA
         AH    R1,C176             ADD FIXED CCWS AND CPB PREFIX
SETCPB   EQU   *                                                 X01004
         ST    R1,CPBSIZE          SAVE CPBSIZE
         LA    R1,XCB1             POINT TO XCB FOR SUBROUTINE
         BAL   R15,INITCPB          GET FIRST CPB
*                                                                S21101
         LA    R1,XCB1             POINT TO XCB FOR SUBROUTINE
         BAL   R15,INITCPB         GET SECOND CPB
*                                                                S21101
LOOP     EQU   *
         L     R1,DCBDEBAD         POINT TO DEB
         LA    R1,EXDEB(,R1)       BUMP TO EXTENT PORTION OF DEB S21101
         LA    R0,XCB1             POINT TO XCB FOR SUBROUTINE
         BAL   R4,INITXCB          INITIALIZE XCB FROM DEB
*                                                                S21101
         MVC   XCBCPB1,WAITLIST    SETUP WAITLIST
         MVC   XCBCPB2,WAITLIST+4
         MVI   WAITLIST+4,HIGHBIT  SET END OF WAITLIST           S21101
         L     R1,XCBCPB1          POINT TO CPB
         XC    TRACK(CODE4),TRACK       SET TRACK AND RECORD NUM-X01004
*                                         BERS TO ZERO.          X01004
         XC    RECSCPB1(CODE4),RECSCPB1  SET THE 2 RECORDS-PER-  X01004
*                                      CPB COUNTERS TO ZERO.     X01004
         OI    SWITCH,STW               SET SWITCH TO INDICATE   X01004
*                                         1ST 3 CCW'S IN CPB WILLX01004
*                                         BE SEARCH-TIC-WRITE.   X01004
         BAL   R4,BUILDCPB              BUILD CPB AND EXCP.      X01004
*                                                                S21101
         L     R1,XCBCPB2          POINT TO CPB
         B     RESTART             BRANCH INTO INIT LOOP
*                                                                S21101
RESTARTU EQU   *                                                 S21101
         L     R0,XCBRECS          INCR NO, RECS. INIT SO FAR    S21101
         TM    SWITCH,HIGHBIT           SPECIAL HANDLING         X01004
         BZ    ADDCYL                   BRANCH IF NO.            X01004
         CLM   R1,MASK7,XCBCPB1+ONE     DID CPB #1 OR CPB #2     X01004
*                                       COMPLETE                 X01004
         BNE   CPB2                     BRANCH IF CPB #2.        X01004
         AH    R0,RECSCPB1              ADD NUMBER OF RECORDS    X01004
*                                         (WRITE CCW'S) DONE FOR X01004
*                                         FIRST CPB.             X01004
         B     UPDATE                   GO UPDATE RECORD COUNT.  X01004
CPB2     EQU   *                                                 X01004
         AH    R0,RECSCPB2              ADD NUMBER OF RECORDS    X01004
*                                       DONE FOR SECOND CPB.     X01004
         B     UPDATE                   GO UPDATE RECORD COUNT.  X01004
ADDCYL   EQU   *                                                 X01004
         AH    R0,RECSCYL          ADD NUMBER OF RECORDS PER CYL
UPDATE   EQU   *                                                 X01004
         ST    R0,XCBRECS          SAVE COUNT FOR END OF EXTENT MSG
RESTART  EQU   *                                                 S21101
         BAL   R4,BUILDCPB              BUILD CPB AND EXCP.      X01004
*                                                                S21101
         CLC   XCBCOUNT,ZEROS      ANY CPBS STILL ACTIVE ?
         BE    DONE                NO,  END OF EXTENT
*                                                                S21101
         WAIT  1,ECBLIST=WAITLIST
*                                                                S21101
         LA    R2,WAITLIST         POINT TO WAITLIST  FIND CPB JUST DON
         LH    R1,XCBCOUNT         GET ACTIVE CPB COUNT FOR DECR
         BCTR  R1,0                MINUS ONE
         STH   R1,XCBCOUNT         SAVE COUNT
         B     W2                  BRANCH INTO LOOP
*                                                                S21101
W1       EQU   *                                                 S21101
         LA    R2,NEXTWORD(,R2)    POINT TO NEXT CPB POINTER     S21101
W2       EQU   *                                                 S21101
         L     R1,0(,R2)           POINT TO CPB                  S21101
         TM    0(R1),WAITBIT       WAIT COMPLETED                S21101
         BZ    W1                  NO
*                                                                S21101
         CLI   0(R1),NORMAL        COMPLETE OK?                  S21101
         BE    RESTARTU            YES
*                                                                S21101
         CLI   0(R1),PURGED        PURGED?                       S21101
         BE    RESTART             RESTART
*                                                                S21101
         WTO   MF=(E,MSG7)              'I/O ERROR IEDQDATA' MSG S21101
*
         LA    R3,CODE12                SET RETURN CODE
         B     CLOSDATA                 GO CLOSE BOTH DATASETS
*                                                                S21101
DONE     EQU   *
         LTR   R7,R7                   FIRST TIME THROUGH        A51067
         BNP   DONE1                   YES, SKIP COMPARE         A51067
         CLC   XCBRECS,XCBRECCK        IS THIS EXTENT SAME AS LSTA51067
         BNE   CYLOK1                  NO, ERROR - SECODARY ALLOCA51067
DONE1    EQU   *                                                 A51067
         MVC   XCBRECCK,XCBRECS        SAVE THIS EXTENT FOR NEXT A51067
         A     R7,XCBRECS
         MVC   DCBFDAD,XCBM        SET LAST DISK ADDR USED IN DCB
         XC    DCBTRBAL,DCBTRBAL   CLEAR TRACK BALANCE
         TIME  BIN
*                                                                S21101
         S     R0,XCBTIME          SUBTRACT TIME OF XCB START
         A     R0,TIME             ADD TOTAL TIME SO FAR
         ST    R0,TIME             SAVE TOTAL
         CVD   R0,DOUBLE           CONVERT FOR MSG
         UNPK  WORK,DOUBLE+4(4)
         MVC   MSGTIME(4),WORK+2   MOVE IN TIME
         DROP  R8
*
EXTENT   EQU   *
         CVD   R7,DOUBLE                CONVERT RECORD COUNTER
         UNPK  MSGCNT(8),DOUBLE
         MVZ   MSGCNT+7(1),MSGCNT
         WTO   MF=(E,MSG10)             'END OF EXTENT' MSG      S21101
*
         BCT   R6,FEOV                  WAS THAT THE LAST EXTENT
*                                         IF NOT, GO DO FEOV
*                                         IF THAT WAS LAST EXTENT,CONT
         WTO   MF=(E,MSG9)              'INITIALIZATION COMPLETE'S21101
*
         SR    R3,R3                    RETURN CODE OF ZERO
         EJECT
CLOSDATA EQU   *
         CLOSE (QUES)
*
         B     CLOSE                    GO QUIT
*
FEOV     EQU   *
         FEOV  QUES
*
         B     LOOP
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       EQUATES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CYL      EQU   X'C8'                    BITS 0-1 OF JFCBCTRI ARE '11'
*                                         FOR 'CYL'.
*                                         BIT 4 ON MEANS 'CONTIG'
DATALEN  EQU   6                        SIZE OF DATA FIELD OF RECORD
PREFIXSZ EQU   36                       MINIMUM KEYLENGTH      @ZA03118
CODE4    EQU   4                        RESERVED FOR FUTURE DEF  S21101
CODE8    EQU   8                        KEYLEN OMITTED OR INVALID
CODE12   EQU   12                       I/O ERROR IEDQDATA
CODE16   EQU   16                       ILLEGAL SPACE PARAMETERS
CODE20   EQU   20                       UNABLE TO OPEN
MYSAVE   EQU   8                        OFFSET INTO CALLER'S SA  S21101
*                                         OF ADDR OF MY SAVEAREA S21101
TEN      EQU   10                       OFFSET TO CCHH IN UCB    S21101
CHANUM   EQU   13                       OFFSET TO CHANNEL NO.    S21101
*                                         IN UCB                 S21101
NEXTWORD EQU   4                        OFFSET TO NEXT WORD      S21101
EXDEB    EQU   32                       OFFSET INTO DEB OF EXTENTS21101
H        EQU   2                        CONDITION 'HIGH'         S21101
NOTMIXED EQU   9                        CONDITION 'NOT MIXED'    S21101
CHAINING EQU   X'40'                    IOBFLAG1 VALUE         @ZA03118
*                                       FOR CHAINING           @ZA03118
PURGED   EQU   X'44'                    ECB PURGED INDICATOR     S21101
NORMAL   EQU   X'7F'                    ECB NORMAL COMPLETION    S21101
WAITBIT  EQU   X'40'                    ECB FLAG FOR WAIT STATE  S21101
HIGHBIT  EQU   X'80'                    SIGN BIT, INDICATES END  S21101
ONE      EQU   1                        INCREMENTOR              S21101
SIZECCW  EQU   8                        BYTES PER CCW            S21101
CLEAR    EQU   0                        IMMED VALUE TO CLEAR BYTES21101
SIX      EQU   6                        NO. OF CCWS              S21101
DIVBY512 EQU   9                        SHIFT COUNT TO DIVIDE BY S21101
*                                         512                    S21101
DIVBY2   EQU   1                        SHIFT COUNT TO DIVIDE    S21101
*                                         BY 2                   S21101
FULLWORD EQU   32                       SHIFT COUNT FOR FULL REG S21101
MASK7    EQU   7                        3-BYTE CLM MASK.         X01004
FIVE     EQU   5                        HH OFFSET IN CPBSEEK.    X01004
TWO      EQU   2                        LENGTH FOR HH FIELD.     X01004
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       CONSTANTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
DOUBLE   DC    D'0'
EXLST    DC    X'87',AL3(JFCB)
JFCB     DC    176C' '                  JFCB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         EJECT
QUES     DCB   DSORG=PS,                                               *
               DDNAME=IEDQDATA,                                        *
               MACRF=(W),                                              *
               BLKSIZE=6,                                              *
               RECFM=F,                                                *
               EXLST=EXLST
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MSG2     WTO   'IED067I TCAM INITIALIZATION BEGUN',                    *
               ROUTCDE=(2,11),DESC=4,MF=L                        S21101
IED067I  EQU   MSG2
         ENTRY IED067I
*
MSG3     WTO   'IED068I UNABLE TO OPEN IEDQDATA',                      *
               ROUTCDE=11,DESC=4,MF=L                            S21101
IED068I  EQU   MSG3
         ENTRY IED068I
*
MSG4     WTO   'IED069I INVALID KEYLEN FOR IEDQDATA',                  *
               ROUTCDE=11,DESC=4,MF=L                            S21101
IED069I  EQU   MSG4
         ENTRY IED069I
*
MSG5     WTO   'IED070I IEDQDATA DOES NOT REQUEST CONTIG SPACE IN CYLIN*
               DERS',                                                  *
               ROUTCDE=11,DESC=4,MF=L                            S21101
IED070I  EQU   MSG5
         ENTRY IED070I
*
MSG6     WTO   'IED071I UNEQUAL PRIMARY AND SECONDARY EXTENTS ON IEDQDA*
               TA',                                                    *
               ROUTCDE=11,DESC=4,MF=L                            S21101
IED071I  EQU   MSG6
         ENTRY IED071I
*
MSG7     WTO   'IED072I I/O ERROR ON IEDQDATA',                        *
               ROUTCDE=(2,10,11),DESC=4,MF=L                     S21101
IED072I  EQU   MSG7
         ENTRY IED072I
*
MSG9     WTO   'IED074I TCAM INITIALIZATION COMPLETE',                 *
               ROUTCDE=(2,11),DESC=4,MF=L                        S21101
IED074I  EQU   MSG9
         ENTRY IED074I
*
MSG10    WTO   'IED075I END OF EXTENT.  RECORD COUNT IS RRRRRRRR, TIME *
               IS NNNN SEC',ROUTCDE=11,DESC=4,MF=L               S21101
IED075I  EQU   MSG10
         ENTRY IED075I
MSGCNT   EQU   MSG10+44
MSGTIME  EQU   MSG10+62
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *S21101
         EJECT
         DS    0H
STARTCPB EQU   *
*              INITIALIZE IOB AND DATA FOR NEXT EXCP
*              TEST IF EXTENT IS DONE, IF NOT START EXCP
         LR    R14,R1              SAVE CPB POINTER
         USING CPBD,R14
         MVI   CPBFLAG1,CHAINING   SET IOBFLAG1 FOR CHAINING     S21101
         ST    R1,CPBECBPT-1       STORE ECB PIONTER
         MVC   CPBSTART,CPBCCW1+1       SET FIRST CCW POINTER
         LA    R0,QUES             POINT TO DCB
         ST    R0,CPBDCBPT         SAVE DCB POINTER
         L     R2,CPBXCB           POINT TO XCB
         USING XCBD,R2
         MVC   CPBBBCC,XCBNBBCC    GET BBCC FOR THIS CPB
         MVC   CPBSEEK(1),XCBM     GET EXTENT NUMBER
         MVC   CPBSEEK+1(4),CPBBBCC     INIT SEEK REQUEST TO IOS
         TM    SWITCH,ENDCYL            END OF CYLINDER REACHED  X01004
         BZ    SAMECYL                  BRANCH IF NO - DON'T IN- X01004
*                                         CREMENT CYLINDER NO.   X01004
         LH    R0,XCBNCC           INCR CC
         AH    R0,C1               ADD ONE TO CC
         STH   R0,XCBNCC           SAVE NEW BBCC IN XCB
         CLC   CPBCC,XCBCC         IS THIS HIGHER THAN LAST ?
         BCR   H,R4                YES, DON'T START OR INIT CPB  S21101
*                                                                S21101
SAMECYL  EQU   *                                                 X01004
         LH    R0,XCBCOUNT         GET COUNT OF ACTIVE CPBS
         AH    R0,C1               ADD ONE
         STH   R0,XCBCOUNT         SAVE COUNT
         CLI   CPBECB,PURGED       IS THIS A PURGED CPB          S21101
         BE    EXCP                IF SO DATA ALREADY INIT
*                                                                S21101
         L     R2,CPBCCW1          POINT TO FIRST CCW
         DROP  R2
         L     R3,CPBDATA          POINT TO ITS DATA
         USING CCWD,R2
         USING DATAD,R3
         TM    SWITCH,ENDCYL            END OF CYLINDER REACHED  X01004
*                                       IN THIS CPB              X01004
         BZ    FULLCPB                  BRANCH IF NO.            X01004
         LR    R1,R9                    R1 = NUMBER OF CCW'S IN  X01004
*                                       THIS CPB.                X01004
         MH    R1,C8                    MULTIPLY BY SIZE OF CCW. X01004
         AR    R1,R2                    ADD ADDRESS OF FIRST CCW.X01004
         NI    SWITCH,FF-ENDCYL         SET END OF CYLINDER FLAG X01004
*                                         OFF.                   X01004
         B     SETLAST                  GO COMPUTE LAST CCW ADDR.X01004
         EJECT
FULLCPB  EQU   *                                                 X01004
         LR    R1,R3               COMPUTE LAST CCW
*                                                                X01004
SETLAST  EQU   *                                                 X01004
         SH    R1,C8               POINT TO LAST CCW
         LH    R0,C8
         L     R15,CPBBBCC         GET CYL ADDR
         B     DATAU2              START UPDATE OF DATA
*                                                                S21101
DATAU1   EQU   *                                                 S21101
         BZ    DATAU3              HANDLE TIC + SEEKHEAD TIC?    S21101
*                                                                S21101
         ST    R15,DATA            NO SET BBCC INTO DATA
         B     DATAU3              BRANCH BACK INTO LOOP
*                                                                S21101
DATAU2   EQU   *                                                 S21101
         TM    CCW,SEEKHEAD-TIC    IS THIS SEEKHEAD OR TIC CCW   S21101
         BC    NOTMIXED,DATAU1                                   S21101
*                                                                S21101
         STH   R15,DATA            NO, STORE CC INTO DATA
DATAU3   EQU   *                                                 S21101
         AR    R3,R0               BUMP DATA POINTER             S21101
         BXLE  R2,R0,DATAU2        R2=ADD  R0=INCR  R1=COMP
*                                                                S21101
EXCP     EQU   *                                                 S21101
         EXCP  CPBIOB
*                                                                S21101
         BR    R4                  RETURN TO CALLER
*                                                                S21101
         DROP  R2
         DROP  R3
         DROP  R14
*                                                                S21101
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *S21101
*                                                                S21101
         EJECT
INITXCB  EQU   *
         LR    R2,R0               XCB POINTER
         USING XCBD,R2
         L     R3,0(R1)            POINT TO EXTENT UCB
         MVC   XCBCHAN,CHANUM(R3)  GET CHANNEL NUMBER            S21101
         MVI   XCBSTAT1,CLEAR      CLEAR STATUS                  S21101
         MVI   XCBM,CLEAR          BSAM COMPATABLE               S21101
         MVC   XCBBB,NEXTWORD(R1)  GET BB                        S21101
         MVC   XCBCCHH,TEN(R1)     GET CCHH                      S21101
         MVC   XCBR,RECSTRK+1      SET LAST REC ON TRACK
         XC    XCBCOUNT,XCBCOUNT   CLEAR COUNTER
         XC    XCBRECS,XCBRECS     CLEAR RECORDS ON EXTENT COUNTER
         MVC   XCBNBBCC,NEXTWORD(R1) GET FIRST BBCC              S21101
         TIME  BIN
*                                                                S21101
         ST    R0,XCBTIME          SAVE TIME OF INIT
         BR    R4                  RETURN TO CALLER
*                                                                S21101
         DROP  R2
*                                                                S21101
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *S21101
*                                                                S21101
         EJECT
INITCPB  EQU   *                                                 S21101
         STM   R15,R6,SUBSAVE      SAVE CALLER'S REGS            S21101
         LR    R2,R1               SAVE XCB POINTER
         L     R0,CPBSIZE          GET CPB SIZE FOR GETMAIN
         GETMAIN R,LV=(0)
*                                                                S21101
         ST    R1,CPBADDR          SAVE CPB ADDRESS
         USING CPBD,R1
         ST    R2,CPBXCB           SET XCB POINTER
         MVC   WAITLIST(8),WAITLIST+4   SLIDE WAITLIST
         XC    CPBECB,CPBECB       CLEAR ECB
         XC    CPBIOB,CPBIOB       CLEAR IOB
         XC    CPBRESV,CPBRESV     CLEAR UNUSED WORD
         LM    R15,R6,SUBSAVE           RESTORE CALLER'S REGS.   X01004
         BR    R15                      RETURN TO CALLER.        X01004
*                                                                X01004
         EJECT
BUILDCPB EQU   *                                                 X01004
         MVI   CPBECB,CLEAR             CLEAR ECB.               X01004
         CLC   XCBNCC-XCB(TWO,R8),XCBCC-XCB(R8)  HAVE ALL CYLIN- X01004
*                                       DERS OF EXTENT BEEN DONE X01004
         BCR   H,R4                     IF YES, RETURN IMMEDIATE-X01004
*                                       LY.  DON'T BUILD A CPB   X01004
*                                       THAT WON'T BE USED.      X01004
         STM   R15,R6,SUBSAVE           SAVE CALLER'S REGISTERS. X01004
         L     R2,CPBSIZE          COMPUTE FIXED PORTION OF CPB
         SH    R2,C64              MINUS 64
         SRA   R2,DIVBY2           DIVIDE BY 2                   S21101
         LA    R3,CPBCCWS(R2)
         ST    R3,CPBDATA          SET DATA POINTER
         LA    R2,CPBCCWS          POINT TO FIRST CCW
         ST    R2,CPBCCW1          SAVE POINTER
         LA    R6,SIZECCW          SET INCR VALUE IN REG         S21101
         LH    R5,TRACK                 GET CURRENT TRACK NUMBER.X01004
         LH    R4,RECORD                GET LAST RECORD NUMBER.  X01004
         MVC   CPBSEEK+FIVE(TWO),TRACK  SET HH IN CPBSEEK.       X01004
         SR    R9,R9                    SET CCW COUNT TO ZERO.   X01004
         SR    R10,R10                  SET RECORD COUNT TO ZERO.X01004
         USING CCWD,R2
         USING DATAD,R3
         TM    SWITCH,STW               FIRST 3 CCW'S SEARCH-TIC-X01004
*                                         WRITE                  X01004
         BO    STICBLD                  BRANCH IF YES.           X01004
         TM    SWITCH,STR               FIRST 3 CCW'S SEARCH-TIC-X01004
*                                         READ KEY AND DATA      X01004
         BNO   TESTSSTR                 BRANCH IF NO.            X01004
         LA    R0,MULTITRK(,R0)         SET MULTITRACK INDICATOR.X01004
         B     BUILDSTR                 GO BUILD SEARCH CCW.     X01004
TESTSSTR EQU   *                                                 X01004
         TM    SWITCH,SSTR              FIRST 4 CCW'S SEEK-SEARCHX01004
*                                         -TIC-READ KEY AND DATA X01004
         BO    SEEKBLD0                 BRANCH IF YES.           X01004
* DEFAULT - FIRST 4 CCW'S ARE SEEK-SEARCH-TIC-WRITE.             X01004
*                                                                S21101
SEEKBLD  EQU   *                                                 S21101
         CLM   R9,HWDMASK,MAX177        177 OR MORE CCW'S IN     X01004
*                                         CHAIN ALREADY          X01004
         BL    SEEKOK                   BRANCH IF NO TO CONTINUE X01004
*                                         CHAIN.                 X01004
         NI    SWITCH,HIGHBIT           SET PREVIOUS SWITCH OFF. X01004
         OI    SWITCH,SSTW              INDICATE NEXT CPB WILL   X01004
*                                         START WITH SEEK-SEARCH-X01004
*                                         TIC-WRITE.             X01004
         B     BREAK                    BRANCH TO COMMON CODE TO X01004
*                                         BREAK CCW CHAIN.       X01004
         EJECT
SEEKOK   EQU   *                                                 X01004
         ST    R3,CCW              POINT TO DATA FOR CCW         S21101
         MVI   CCW,SEEKHEAD        SET CCW OP CODE
         MVC   CCW2,SEEKCCW2       SETUP SECOND HALF OF CCW
         XC    DATA,DATA           CLEAR DATA
         STH   R5,DATA3            SET HEAD NUMBER
         AR    R2,R6               BUMP POINTER
         AR    R3,R6               BUMP POINTER
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
STICBLD  EQU   *                                                 S21101
         CLM   R9,HWDMASK,MAX177        MORE THAN 177 CCW'S IN   X01004
*                                         CHAIN ALREADY          X01004
         BNH   SEARCHOK                 BRANCH IF NO TO CONTINUE X01004
*                                         CHAIN.                 X01004
SETSRCH  EQU   *                                                 X01004
         NI    SWITCH,HIGHBIT           SET PREVIOUS SWITCH OFF. X01004
         OI    SWITCH,STW               INDICATE NEXT CPB WILL   X01004
*                                         START WITH SEARCH-TIC- X01004
*                                         WRITE.                 X01004
         B     BREAK                    BRANCH TO COMMON CODE TO X01004
*                                         BREAK CCW CHAIN.       X01004
SEARCHOK EQU   *                                                 X01004
         ST    R3,CCW              SET DATA POINTER              S21101
         MVI   CCW,SEARCHID        SET CCW OP CODE
         MVC   CCW2,SEARCH2        SET REST OF CCW
         XC    DATA,DATA           CLEAR DATA FOR CCW
         STH   R5,DATA2            SET HEAD NUMBER
         STC   R4,DATA3A                SET RECORD NUMBER.       X01004
         ST    R2,CCW+SIZECCW      SET TIC ADDR FOR NEXT CCW     S21101
         AR    R2,R6               BUMP POINTERS
         AR    R3,R6               BUMP POINTERS
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
         MVI   CCW,TIC             SET TIC IN CCW OP CODE
         XC    CCW2,CCW2           CLEAR REST OF TIC CCW
         XC    DATA,DATA           CLEAR TIC'S DATA FIELD
         AR    R2,R6               BUMP POINTER
         AR    R3,R6               BUMP POINTER
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
         EJECT
WRITEBLD EQU   *                                                 S21101
         LA    R10,ONE(,R10)            INCREMENT RECORD COUNT.  X01004
         LA    R4,ONE(,R4)         INCR RECORD NUMBER            S21101
         ST    R3,CCW              SET CCW'S DATA POINTER
         MVI   CCW,WCKD            SET WRITE COUNT, KEY, AND DATA OP
         MVC   CCW2,WCKD2          SET REST OF CCW
         STH   R5,DATA2            SET HH IN DATA
         STC   R4,DATA3A           SET RECORD NUMBER IN DATA
         MVC   DATA3B,KEYLEN       SET KEYLENGTH IN DATA
         MVC   DATA4,C6            SET DATALEN IN DATA
         AR    R2,R6               BUMP POINTER
         AR    R3,R6               BUMP POINTER
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
         CH    R4,RECSTRK          HAVE ALL CCWS FOR TRACK BEEN MADE
         BNL   NEWTRACK                 BRANCH IF YES.           X01004
         CLM   R9,HWDMASK,MAXCCWS       HAVE 180 CCW'S BEEN BUILTX01004
         BL    WRITEBLD            NO, LOOP BACK
         B     SETSRCH                  GO SET UP TO BREAK CHAIN.X01004
*                                                                S21101
NEWTRACK EQU   *                                                 X01004
         LA    R5,ONE(,R5)         INCR TRACK                    S21101
         SR    R4,R4                    CLEAR RECORD NUMBER.     X01004
         CH    R5,DEVWD3B          ALL TRACKS INIT
         BL    SEEKBLD             NO LOOP BACK
*                                                                S21101
         BCTR  R5,0                DECR TO LAST TRACK
SEEKBLD0 EQU   *                                                 S21101
         CLM   R9,HWDMASK,MAX177        177 OR MORE CCW'S IN     X01004
*                                         CHAIN ALREADY          X01004
         BL    SEEKOK2                  BRANCH IF NO.            X01004
         NI    SWITCH,HIGHBIT           SET PREVIOUS SWITCH OFF. X01004
         OI    SWITCH,SSTR              INDICATE NEXT CPB WILL   X01004
*                                         START WITH SEEK-SEARCH-X01004
*                                         TIC-READ KEY AND DATA. X01004
         B     BREAK                    BRANCH TO COMMON CODE TO X01004
*                                         BREAK CCW CHAIN.       X01004
         EJECT
SEEKOK2  EQU   *                                                 X01004
         ST    R3,CCW              POINT TO DATA                 S21101
         MVI   CCW,SEEKHEAD        SET SEEK HEAD OPCODE
         MVC   CCW2,SEEKCCW2       SET REST OF CCW
         XC    DATA,DATA           CLEAR DATA
         SR    R0,R0               CLEAR MULTITRACK IND
FINDBLD0 EQU   *                                                 S21101
         AR    R2,R6               BUMP POINTER                  S21101
         AR    R3,R6               BUMP POINTER
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
BUILDSTR EQU   *                                                 X01004
         CLM   R9,HWDMASK,MAX177        MORE THAN 177 CCW'S IN   X01004
*                                         CHAIN ALREADY.         X01004
         BNH   SRCHOK2                  BRANCH IF NO.            X01004
         NI    SWITCH,HIGHBIT           SET PREVIOUS SWITCH OFF. X01004
         OI    SWITCH,STR               INDICATE NEXT CPB WILL   X01004
*                                         START WITH SEARCH-TIC- X01004
*                                         READ KEY AND DATA.     X01004
*                                                                X01004
BREAK    EQU   *                                                 X01004
         STH   R4,RECORD                SAVE LAST RECORD NUMBER  X01004
*                                         WRITTEN.               X01004
         STH   R5,TRACK                 SAVE CURRENT TRACK NUMBERX01004
         SR    R2,R6                    POINT TO LAST CCW IN CPB.X01004
         NI    CCW2,NOCHAIN             SET COMMAND AND DATA     X01004
*                                         CHAINING FLAGS OFF.    X01004
         B     SAVERECS                 GO SAVE RECORD COUNT.    X01004
*                                                                X01004
SRCHOK2  EQU   *                                                 X01004
         ST    R3,CCW              POINT TO DATA
         MVC   CCW2,SEARCH2        SETUP 2ND HALF OF CCW
         STC   R0,CCW              SET MULTI-TRACK IND
         OI    CCW,SEARCHID        OR IN SEARCH ID EQUAL OPCODE
         XC    DATA,DATA           CLEAR DATA
         LTR   R0,R0               TEST MULTI-TRACK
         BZ    TICBLD0             BRANCH IF NOT ON
*                                                                S21101
         MVC   DATA3A,RECSTRK+1    MAX REC NUMBER
         STH   R5,DATA2            SET LAST HEAD
         SR    R2,R6               CHANGE TIC ADDR
         ST    R2,CCW+(2*SIZECCW)  SETUP TIC *-16                S21101
         AR    R2,R6               RESTORE POINTER
         B     TICBLD1
*                                                                S21101
         EJECT
TICBLD0  EQU   *                                                 S21101
         ST    R2,CCW+SIZECCW      TIC TO *-8                    S21101
TICBLD1  EQU   *                                                 S21101
         AR    R2,R6               BUMP POINTER                  S21101
         AR    R3,R6
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
         MVI   CCW,TIC             TIC IN OPCODE
         XC    CCW2,CCW2           CLEAR REST OF TIC
         XC    DATA,DATA           CLEAR 'DATA'
         AR    R2,R6
         AR    R3,R6               BUMP POINTER
         LA    R9,ONE(,R9)              INCREMENT CCW COUNT.     X01004
VERFYBLD EQU   *                                                 S21101
         ST    R3,CCW              POINT TO DATA                 S21101
         STC   R0,CCW              SET MULITRACK IND
         OI    CCW,RKD             OR IN READ KEY AND DATA
         SR    R4,R4               COMPUTE LENGTH
         IC    R4,KEYLEN
         LA    R4,DATALEN(R4)
         STH   R4,CCW2+2           SET IN COUNT OF CCW
         MVC   CCW2(2),VERCCW2A    SET REST OF CCW
         LTR   R0,R0               IS MULTI TRACK ON
         LA    R0,MULTITRK         SET IT ON
         BZ    FINDBLD0            WAS IT ON BEFORE
*                                                                S21101
         MVC   CCW2(2),VERCCW2B    SET NO CHAINING IN CCW
         XC    TRACK(CODE4),TRACK       RESET TRACK AND RECORD   X01004
*                                         NUMBERS TO ZERO.       X01004
         NI    SWITCH,HIGHBIT           SET PREVIOUS SWITCH OFF. X01004
         OI    SWITCH,ENDCYL+STW        INDICATE THAT THE END OF X01004
*                                         A CYLINDER HAS BEEN    X01004
*                                         REACHED, AND THAT THE  X01004
*                                         NEXT CPB WILL START    X01004
*                                         WITH SEARCH-TIC-WRITE. X01004
SAVERECS EQU   *                                                 X01004
         CLM   R1,MASK7,XCBCPB1+ONE-XCB(R8)  CPB #1 OR CPB #2    X01004
         BNE   BRKCPB2                  BRANCH IF CPB #2.        X01004
         STH   R10,RECSCPB1             SAVE NUMBER OF RECORDS   X01004
*                                         WRITTEN FOR CPB #1.    X01004
         B     ENDINIT                  END OF CPB INITIALIZATIONX01004
BRKCPB2  EQU   *                                                 X01004
         STH   R10,RECSCPB2             SAVE NUMBER OF RECORDS   X01004
*                                       WRITTEN FOR CPB #2.      X01004
ENDINIT  EQU   *                                                 X01004
         LM    R15,R6,SUBSAVE      RESTORE CALLER'S REGS
         B     STARTCPB                 INITIALIZATION DONE-NOW  X01004
*                                         PREPARE TO EXCP.       X01004
         EJECT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
EIGHT    EQU   8
         SPACE 1
         DS    0F                  WORK AREA FOR DEVTYPE MACRO @ZA03118
DEVWD1   DS    F                   DEVICE TYPE FROM UCB
DEVWD2   DS    F                   MAX BLOCK SIZE
DEVWD3A  DS    H                   NUMBER OF CYL/PACK
DEVWD3B  DS    H                   NUMBER OF TRK/CYL
DEVWD4A  DS    H                   MAXIMUM TRACK LENGTH
DEVWD4B  DS    X                   BLOCK OVERHEAD   + IF KEYED NOT LAST
DEVWD4C  DS    X                   BLOCK OVERHEAD   +  F KEYED AND LAST
DEVWD5A  DS    X                   BLOCK OVERHEAD   - IF NOT KEYED
DEVWD5B  DS    X                   TRACK CALCULATION SWITCHES
DCT10H   EQU   X'08'                    HALFWORD OVERHEAD      @YA11949
DEVWD5C  DS    H                   TOLERANCE FACTOR
         SPACE 2
SUBSAVE  DS    8F
TIME     DC    F'0'
C1       DC    H'1'
C3       DC    H'3'
C6       DC    H'6'
C8       DC    H'8'                R0 LENGTH
C16      DC    H'16'
C64      DC    H'64'               CPB PREFIX SIZE
C176     DC    H'176'
MAXCCWS  DC    H'180'                   MAXIMUM CCW'S PER CHANNELX01004
*                                         PROGRAM FOR AOS.       X01004
MAX177   DC    H'177'                   MAXIMUM CCW'S BEFORE A   X01004
*                                         SEARCH-TIC-READ/WRITE  X01004
*                                         SEQUENCE FOR AOS.      X01004
ZEROS    DC    H'0'
WAITLIST DS    2A
CPBADDR  DS    A
CPBSIZE  DS    F
RECSTRK  DS    H
RECSCYL  DS    H
RECSCPB1 DS    H                        NUMBER OF RECORDS WRITTENX01004
*                                         FOR EXCP ON CPB #1.    X01004
RECSCPB2 DS    H                        NUMBER OF RECORDS WRITTENX01004
*                                         FOR EXCP ON CPB #2.    X01004
NUMCCWS  DS    H
TRACK    DS    H                        NUMBER OF CURRENT TRACK. X01004
RECORD   DS    H                        NUMBER OF LAST RECORD    X01004
*                                         WRITTEN ON CURRENT     X01004
*                                         TRACK.                 X01004
KEYLEN   DS    X
         EJECT
SWITCH   DS    X                        SPECIAL HANDLING SWITCH. X01004
*                   BIT DEFINITIONS.                             X01004
*              X'80'                    INDICATES THAT A CYLINDERX01004
*                                         REQUIRES MORE THAN 180 X01004
*                                         CCWS.                  X01004
STW      EQU   X'40'                    INDICATES THAT CPB WILL  X01004
*                                         START WITH SEARCH-TIC- X01004
*                                         WRITE SEQUENCE.        X01004
STR      EQU   X'20'                    INDICATES THAT CPB WILL  X01004
*                                         START WITH SEARCH-TIC- X01004
*                                         READ SEQUENCE.         X01004
SSTR     EQU   X'10'                    INDICATES THAT CPB WILL  X01004
*                                         START WITH SEEK-SEARCH-X01004
*                                         TIC-READ SEQUENCE.     X01004
SSTW     EQU   X'08'                    INDICATES THAT CPB WILL  X01004
*                                         START WITH SEEK-SEARCH-X01004
*                                         TIC-WRITE SEQUENCE.    X01004
ENDCYL   EQU   X'04'                    INDICATES END OF CYLINDERX01004
*                                         REACHED.               X01004
*              X'02'                    UNUSED.                  X01004
*              X'01'                    UNUSED.                  X01004
*                                                                X01004
         SPACE 2
DEVTOL   EQU   X'01'
TIC      EQU   X'08'
RKD      EQU   X'0E'
SEEKHEAD EQU   X'1B'
WCKD     EQU   X'1D'
SEARCHID EQU   X'31'
MULTITRK EQU   X'80'
NOCHAIN  EQU   X'3F'                    MASK FOR CHAINING FLAGS  X01004
*                                         OFF IN LAST CCW IN CPB.X01004
FF       EQU   X'FF'                                             X01004
HWDMASK  EQU   3                        CLM MASK TO TEST HALFWORDX01004
WORK     DS    D
SEEKCCW2 DC    X'40000006'
SEARCH2  DC    X'40000005'
WCKD2    DC    X'60000008'
VERCCW2A DC    X'7000'
VERCCW2B DC    X'1000'
XCB1     DS    4D
XCBRECCK DC    F'0'                                              A51067
IEDQDDN  DC    CL8'IEDQDATA'
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       DSECTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
JFCBD    DSECT
         IEFJFCBN
         DCBD  DSORG=PS,DEVD=DA
         SPACE 3                                                 S21101
DATAD    DSECT
DATA     DS    0D
DATA1    DS    H
DATA2    DS    H
DATA3    DS    0H
DATA3A   DS    X
DATA3B   DS    X
DATA4    DS    H
         SPACE 4
CCWD     DSECT
CCW      DS    0D
CCW1     DS    F
CCW2     DS    F
         SPACE 3                                                 S21101
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*              EXTENT CONTROL BLOCK    ONE PER EXTENT IN DEB
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
XCBD     DSECT
XCB      DS    0CL32
XCBSTAT1 DS    XL1                 STATUS OF XCB
XCBLAST  EQU   X'80'               LAST XCB IN LIST
XCBERR   EQU   X'40'               XCB HAS ERROR IN CPB  HOLD EXCP
XCBDONE  EQU   X'20'               EXTENT HAS BEEN FORMATED
XCBMSG   EQU   X'10'               EXTENT FORMATED MSG WRITTEN
XCBM     DS    XL1
XCBBBCC  DS    0XL4
XCBBB    DS    H
XCBCCHH  DS    0XL4
XCBCC    DS    H
XCBHH    DS    H
XCBR     DS    XL1
XCBCHAN  DS    CL1                 EBCDIC CHANNEL NUMBER
XCBCOUNT DS    H
XCBNBBCC DS    0F
XCBNBB   DS    H
XCBNCC   DS    H
XCBRECS  DS    F
XCBTIME  DS    F                   TIME OF INIT START
XCBCPB1  DS    A
XCBCPB2  DS    A
         SPACE 3                                                 S21101
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*              CHANNEL PROGRAM BLOCK  ONE OR MORE PER PHYSICAL CHANNEL
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CPBD     DSECT
CPBECB   DS    F
CPBIOB   DS    0CL40
CPBFLAG1 DS    XL1                 IOBFLAG1
CPBFLAG2 DS    XL1                 IOBFLAG2
CPBSENS0 DS    XL1                 IOBSENS0
CPBSENS1 DS    XL1                 IOBSENS1
CPBECBCC DS    XL1                 IOBECBCC
CPBECBPT DS    AL3                 IOBECBPT
CPBFLAG3 DS    XL1                 IOBFLAG3
CPBCSW   DS    CL7                 IOBCSW
CPBSIOCC DS    XL1                 IOBSIOCC
CPBSTART DS    AL3                 IOBSTART
CPBDCBPT DS    A                   IOBDCBPT
CPBRESTR DS    A                   IOBRESTR
CPBINCAM DS    H                   IOBINCAM
CPBERRCT DS    H                   IOBERRCT
CPBSEEK  DS    XL8                 IOBSEEK
CPBBBCC  DS    0F                  BBCC PORTION OF DISK ADDRESS
CPBBB    DS    H
CPBCC    DS    H
CPBCCW1  DS    A                   POINTER TO FIRST CCW
CPBDATA  DS    A                   POINTER TO FIRST DATA
CPBXCB   DS    A                   POINTER TO XCB FOR THIS CPB
CPBRESV  DS    F
CPBCCWS  DS    D
         END
