         TITLE 'IGCC110D, 3705 CLEANUP LOAD 2                          *
                        '
IGCC110D CSECT ,                                                01S0001
@PROLOG  DS    0H                                               01S0002
*                                                               02S0724
*   /*****************************************************************/
*   /*                                                               */
*   /* PROLOGUE: THIS SEGMENT COMPLETES THE PROLOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0724
*   RBASE=REG15;                    /* SET THE CODE BASE REGISTER
*                                      WITH THE ENTRY POINT ADDRESS
*                                      OF THE MODULE                 */
         LR    RBASE,REG15                                      02S0724
*   GEN REFS(RBASE) NOSETS;                                     02S0725
*                                   /*
         USING IGCC110D,RBASE          INFORM THE ASSEMBLER OF THE
*                                      BASE REGISTER TO BE USED FOR
*                                      ADDRESSING CODE
*   GEN NOREFS NOSETS;                                          02S0726
*                                   /*
IGCC110D IEDHJN AFTERHJN               MODULE IDENTIFICATION MACRO
*   RFY                                                         02S0727
*     REG15 UNRSTD;                 /* RELEASE THE REGISTER     02S0727
*                                      RESTRICTED AT ENTRY TO THE
*                                      MODULE THAT WAS USED TO  02S0727
*                                      CONTAIN THE ENTRY POINT  02S0727
*                                      ADDRESS OF THE MODULE         */
*                                                               02S0728
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT DOES THE PROCESSING THAT IS NECESSARY TO*/
*   /* PERFORM THE FUNCTION OF THE MODULE.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0728
*                                                               03S0728
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.INITIAL: THIS SEGMENT DOES THE INITIAL PROCESSING.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0728
*   ROPCAVT=RPARM;                  /* OP CTL AVT BASE               */
         LR    ROPCAVT,RPARM                                    03S0728
*   RAVT=OPCAVTPT;                  /* TCAM AVT BASE                 */
         L     RAVT,OPCAVTPT(,ROPCAVT)                          03S0729
*   RSAVE=ADDR(OPCSAVE);            /* OP CTL SAVE AREA              */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                          03S0730
*   ROPCE=OPCCOPCE;                 /* OPCE/CUR BASE                 */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                         03S0731
*   OPCMODID=DACDEST;               /* ASSUME EXIT TO DEACTIVATE     */
         MVC   OPCMODID(2,ROPCAVT),DACDEST                      02S0732
*   IF OCELMPRI=PRILOFLG THEN       /* IF A REDRIVE ELEMENT OR IN
*                                      FROM IGCC010D                 */
         CLI   OCELMPRI(ROPCE),X'D0'                            02S0733
         BNE   @RF00733                                         02S0733
*     DO;                                                       02S0734
*                                                               03S0735
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS.RSPSRCH: THIS SEGMENT SEARCHES RESPONSE CHAINS AND*/
*       /* GENERATES RESPONSES (NEGATIVE RESPONSES TO FID0 AND PATH  */
*       /* ERROR TO FID1) FOR SELECTED OPCES ON THE WAIT CHAINS.     */
*       /* THESE RESPONSES ARE TPOSTED TO AVTOPCOB FOR PROCESSING    */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0735
*                                                               03S0735
*       /*************************************************************/
*       /*                                                           */
*       /* WHEN ENTERED RCUR=@REDRIVE ELEMENT (CUR), CURELEM=@BUFFER */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0735
*       RFY                                                     03S0735
*        (RPRF,                                                 03S0735
*         RCHAIN) RSTD;                                         03S0735
*       IF CURNCURE=ON THEN         /* IF REPOST TO IEDNCU REQUESTED
*                                      ...                   @YM07310*/
         TM    CURNCURE(RCUR),B'00010000'                       03S0736
         BNO   @RF00736                                         03S0736
*         DO;                       /* ... REPOST THE CUR TO IEDNCU
*                                                            @YM07310*/
*           CURPRI=PRICUREQ;        /* PRIORITY FOR ELEMENT TO IEDNCU*/
         MVI   CURPRI(RCUR),X'C4'                               03S0738
*           CURQCB=SAVTCLUP;        /* QCB                           */
         L     @09,AVTSAVTP(,RAVT)                              03S0739
         MVC   CURQCB(3,RCUR),SAVTCLUP+1(@09)                   03S0739
*           RPARM=RCUR;             /* PARAMETER TO POST ROUTINE
*                                                            @XM05700*/
         LR    RPARM,RCUR                                       03S0740
*           CALL TPOSTELM;          /* TPOST ELEMENT TO IEDNCU       */
         BAL   @14,TPOSTELM                                     03S0741
*           OPCMODID=DISPDEST;      /* EXIT TO OP CTL DISPATCHER
*                                                            @YM07310*/
         MVC   OPCMODID(2,ROPCAVT),DISPDEST                     03S0742
*         END;                      /*                       @YM07310*/
*       ELSE                        /*                       @YM07310*/
*         DO;                       /*                       @YM07310*/
         B     @RC00736                                         03S0744
@RF00736 DS    0H                                               03S0745
*           CURPIUCT=0;             /* INITIALIZE PIU POSTED COUNTER */
         SLR   @09,@09                                          03S0745
         STH   @09,CURPIUCT(,RCUR)                              03S0745
*           IF CURSWCH=CURFDACT THEN/* IF THIS IS A FORCE DEACT ...
*                                                            @YM07711*/
         CLI   CURSWCH(RCUR),X'37'                              03S0746
         BNE   @RF00746                                         03S0746
*             RPRF=ADDR(CURTTCIN)-(ADDR(PRFSRCE)-ADDR(IEDQPRF));/*
*                                      TREAT CUR AS A TEMPORARY 03S0747
*                                      BUFFER FOR THE SEARCH ROUTINE
*                                                            @YM07711*/
         LA    @09,CURTTCIN(,RCUR)                              03S0747
         SL    @09,@CF00175                                     03S0747
         LR    RPRF,@09                                         03S0747
*           ELSE                    /*                       @YM07711*/
*             RPRF=CURELEM;         /* INIT BUFFER STRUCTURE BASE    */
         B     @RC00746                                         03S0748
@RF00746 L     RPRF,CURELEM-1(,RCUR)                            03S0748
         LA    RPRF,0(,RPRF)                                    03S0748
*           DO UNTIL                /* LOOP UNTIL ...                */
*                 CURF1ID=ON        /* ... END OF CHAIN      @YM07132*/
*                 ×CURPIUCT=10      /* ... OR 10 PIUS HAVE BEEN 03S0749
*                                      POSTED TO PATH CONTROL ...    */
*                 ×CURPIUCT=>(AVTAVFCT/2);/* ... OR PIUS EQUAL TO 1/2
*                                      THE AVAILABLE UNITS HAVE BEEN
*                                      POSTED                        */
@RC00746 DS    0H                                               03S0749
@DL00749 DS    0H                                               03S0750
*             IF OPCWAITN=0         /* IF FID0 RESPONSE WAIT CHAIN IS
*                                      EMPTY ...                     */
*                 ×CURF0FIN=ON THEN /* ... OR FINISHED PROCESSING
*                                      FID0                          */
         L     @09,OPCWAITN(,ROPCAVT)                           03S0750
         LTR   @09,@09                                          03S0750
         BZ    @RT00750                                         03S0750
         TM    CURF0FIN(RCUR),B'10000000'                       03S0750
         BNO   @RF00750                                         03S0750
@RT00750 DS    0H                                               03S0751
*               DO;                                             03S0751
*                 IF OPCSCNC=0      /* IF FID1 (SEQUENCED) RESPONSE
*                                      WAIT CHAIN EMPTY ...          */
*                     ×CURF1SEQ=ON THEN/* ... OR FINISH PROCESSING
*                                      FID1 SEQUENCED RESPONSE       */
         L     @09,OPCSCNC(,ROPCAVT)                            03S0752
         LTR   @09,@09                                          03S0752
         BZ    @RT00752                                         03S0752
         TM    CURF1SEQ(RCUR),B'01000000'                       03S0752
         BNO   @RF00752                                         03S0752
@RT00752 DS    0H                                               03S0753
*                   DO;                                         03S0753
*                     IF OPCFMDFC=0 /* IF FID1 (ID) RESPONSE WAIT
*                                      CHAIN EMPTY ...               */
*                         ×CURF1ID=ON THEN/* ... OR FINISH PROCESS
*                                      FID1 ID                       */
         L     @09,OPCFMDFC(,ROPCAVT)                           03S0754
         LTR   @09,@09                                          03S0754
         BZ    @RT00754                                         03S0754
         TM    CURF1ID(RCUR),B'00100000'                        03S0754
         BNO   @RF00754                                         03S0754
@RT00754 DS    0H                                               03S0755
*                       DO;                                     03S0755
*                         CURF1ID=ON;/* SIGNAL ALL CHAINS PROCESSED  */
         OI    CURF1ID(RCUR),B'00100000'                        03S0756
*                         OPCMODID=DACDEST;/* ELIMINATE REPOST FOR
*                                      RESPONSE HANDLING             */
         MVC   OPCMODID(2,ROPCAVT),DACDEST                      03S0757
*                       END;                                    03S0758
*                     ELSE          /* PROCESS FID1 ID RESPONSE WAIT
*                                      CHAIN                         */
*                       DO;                                     03S0759
         B     @RC00754                                         03S0759
@RF00754 DS    0H                                               03S0760
*                         RCHAIN=OPCFMDFC;/* INIT WAIT CHAIN PTR     */
         L     RCHAIN,OPCFMDFC(,ROPCAVT)                        03S0760
*                         CALL SEARCH;                          03S0761
         BAL   @14,SEARCH                                       03S0761
*                         IF CURENDCH=ON THEN/* IF END OF CHAIN      */
         TM    CURENDCH(RCUR),B'00010000'                       03S0762
         BNO   @RF00762                                         03S0762
*                           DO;                                 03S0763
*                             CURF1ID=ON;/* INDICATE FID1 ID RESPONSE
*                                      WAIT CHAIN FINISH             */
         OI    CURF1ID(RCUR),B'00100000'                        03S0764
*                             OPCMODID=DACDEST;/* ELIMINATE REPOST
*                                      FOR RESPONSE HANDLING         */
         MVC   OPCMODID(2,ROPCAVT),DACDEST                      03S0765
*                           END;                                03S0766
*                       END;                                    03S0767
*                   END;                                        03S0768
*                 ELSE              /* PROCESS FID1 SEQUENCED   03S0769
*                                      RESPONSE WAIT CHAIN           */
*                   DO;                                         03S0769
         B     @RC00752                                         03S0769
@RF00752 DS    0H                                               03S0770
*                     RCHAIN=OPCSCNC;/* INITIALIZE WAIT CHAIN PTR    */
         L     RCHAIN,OPCSCNC(,ROPCAVT)                         03S0770
*                     CALL SEARCH;                              03S0771
         BAL   @14,SEARCH                                       03S0771
*                     IF CURENDCH=ON THEN/* IF END OF CHAIN          */
         TM    CURENDCH(RCUR),B'00010000'                       03S0772
         BNO   @RF00772                                         03S0772
*                       CURF1SEQ=ON;/* INDICATE FID1 SEQUENCED  03S0773
*                                      RESPONSE CHAIN FINISH PROC    */
         OI    CURF1SEQ(RCUR),B'01000000'                       03S0773
*                   END;                                        03S0774
*               END;                                            03S0775
*             ELSE                  /* PROCESS FID0 RESPONSE WAIT
*                                      CHAIN                         */
*               DO;                                             03S0776
         B     @RC00750                                         03S0776
@RF00750 DS    0H                                               03S0777
*                 RCHAIN=OPCWAITN;  /* INITIALIZE WAIT CHAIN PTR     */
         L     RCHAIN,OPCWAITN(,ROPCAVT)                        03S0777
*                 CALL SEARCH;                                  03S0778
         BAL   @14,SEARCH                                       03S0778
*                 IF CURENDCH=ON THEN/* IF END OF CHAIN              */
         TM    CURENDCH(RCUR),B'00010000'                       03S0779
         BNO   @RF00779                                         03S0779
*                   CURF0FIN=ON;    /* INDICATE FID0 RESPONSE WAIT
*                                      CHAIN FINISH PROCESS          */
         OI    CURF0FIN(RCUR),B'10000000'                       03S0780
*               END;                                            03S0781
@RF00779 DS    0H                                               03S0782
*           END;                                                03S0782
@RC00750 DS    0H                                               03S0782
@DE00749 TM    CURF1ID(RCUR),B'00100000'                        03S0782
         BO    @DC00749                                         03S0782
         LH    @09,CURPIUCT(,RCUR)                              03S0782
         C     @09,@CF03101                                     03S0782
         BE    @DC00749                                         03S0782
         LH    @10,AVTAVFCT(,RAVT)                              03S0782
         SRDA  @10,32                                           03S0782
         D     @10,@CF00065                                     03S0782
         CR    @09,@11                                          03S0782
         BL    @DL00749                                         03S0782
@DC00749 DS    0H                                               03S0783
*                                                               04S0783
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.RSPSRCH.DISPO: THIS SEGMENT SCHEDULES         */
*           /* DISPOSITION OF THE CUR AND SCHEDULES WHERE- TO-GO     */
*           /*                                                       */
*           /*********************************************************/
*                                                               04S0783
*           IF CURSWCH=CURFDACT THEN/* IF THIS IS A FORCE DEACT 04S0783
*                                      REQUEST ...           @YM07711*/
         CLI   CURSWCH(RCUR),X'37'                              04S0783
         BNE   @RF00783                                         04S0783
*             DO;                   /* ... SET UP TO FORWARD CUR TO
*                                      IEDNCU IN TCAM TASK   @YM07711*/
*               CURPRI=PRICUREQ;    /* SET PROPER PRIORITY   @YM07711*/
         MVI   CURPRI(RCUR),X'C4'                               04S0785
*               RPARM=ADDR(OPCAQCTL);/* ADDRESS OF PARAMETER LIST
*                                                            @YM07711*/
         LA    RPARM,OPCAQCTL(,ROPCAVT)                         04S0786
*               OPCAQWD1=ROPCE;     /* ADDRESS OF ELEMENT TO    04S0787
*                                      PARAMETER LIST        @YM07711*/
         ST    ROPCE,OPCAQWD1(,ROPCAVT)                         04S0787
*               OPCAQWD2=ROPCE;     /* ADDRESS OF LAST ELEMENT TO
*                                      PARAMETER LIST        @YM07711*/
         ST    ROPCE,OPCAQWD2(,ROPCAVT)                         04S0788
*               OPCAQREQ=TPOST;     /* TYPE OF REQUEST = TPOST  04S0789
*                                                            @YM07711*/
         MVI   OPCAQREQ(ROPCAVT),X'0C'                          04S0789
*               OPCAQRQ2=ENDLIS2;   /* MARK END OF PARAMETER LIST
*                                                            @YM07711*/
         MVI   OPCAQRQ2(ROPCAVT),X'80'                          04S0790
*               GEN(AQCTL);         /* ISSUE SVC 102         @YM07711*/
         AQCTL
*               OPCMODID=DISPDEST;  /* PROCESSING COMPLETED, EXIT
*                                                            @YM07711*/
         MVC   OPCMODID(2,ROPCAVT),DISPDEST                     04S0792
*             END;                  /*                       @YM07711*/
*           ELSE                    /*                       @YM07711*/
*             IF OPCMODID=DISPDEST THEN/* IF EXIT REQUIRED TO   04S0794
*                                      IGC0010D                      */
         B     @RC00783                                         04S0794
@RF00783 CLC   OPCMODID(2,ROPCAVT),DISPDEST                     04S0794
         BNE   @RF00794                                         04S0794
*               DO;                                             04S0795
*                 CURQCB=ADDR(AVTOPCOB);/* QCB                       */
         LA    @09,AVTOPCOB(,RAVT)                              04S0796
         STCM  @09,7,CURQCB(RCUR)                               04S0796
*                 RPARM=RCUR;       /* ADDRESS OF ELEMENT TO TPOST   */
         LR    RPARM,RCUR                                       04S0797
*                 CALL TPOSTELM;    /* TPOST ELEMENT TO AVTOPCOB     */
         BAL   @14,TPOSTELM                                     04S0798
*               END;                                            04S0799
*             ELSE                  /* NO EXIT TO IGC0010D - MEANS
*                                      ALL CHAINS FINISHED           */
*               DO;                                             04S0800
         B     @RC00794                                         04S0800
@RF00794 DS    0H                                               04S0801
*                                                               05S0801
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.RSPSRCH.DISPO.ANSCHANI: THIS SEGMENT    */
*                 /* PROCESSES ANS AND/OR CHANNEL INOP CONDITIONS    */
*                 /*                                                 */
*                 /***************************************************/
*                                                               05S0801
*                 RFY                                           05S0801
*                  (RRUDATA,                                    05S0801
*                   RPRF,                                       05S0801
*                   RLCB) RSTD;     /*                       @YM08988*/
*                 RPRF=CURELEM;     /* POINT TO INPUTTED BUFFER      */
         L     RPRF,CURELEM-1(,RCUR)                            05S0802
         LA    RPRF,0(,RPRF)                                    05S0802
*                 RRUDATA=AVTHDRSZ+ADDR(PRFSUNIT)+PRFISIZE;/* ADDRESS
*                                      OF RU DATA                    */
         LA    RRUDATA,PRFSUNIT(,RPRF)                          05S0803
         AL    RRUDATA,@CF00452                                 05S0803
         SLR   @07,@07                                          05S0803
         IC    @07,PRFISIZE(,RPRF)                              05S0803
         ALR   RRUDATA,@07                                      05S0803
*                 RFY                                           05S0804
*                   IEDRH BASED(ADDR(PRF1RH));                  05S0804
*                 IF TRHSDI=ON THEN /* IF SENSE DATA INCLUDED        */
         LR    @07,RPRF                                         05S0805
         AL    @07,@CF03163                                     05S0805
         TM    TRHSDI(@07),B'00000100'                          05S0805
         BNO   @RF00805                                         05S0805
*                   RRUDATA=RRUDATA+4;/* ADJUST START OF RUDATA      */
         AL    RRUDATA,@CF00256                                 05S0806
*                 RFY                                           05S0807
*                   IEDRH BASED;                                05S0807
@RF00805 DS    0H                                               05S0808
*                 RTRM=CURTRM-LENGTH(IEDNTRM);/* TRM ADDRESS         */
         L     RTRM,CURTRM(,RCUR)                               05S0808
         SL    RTRM,@CF02443                                    05S0808
*                 IF TRMTYPE=TRMLNCP THEN/* ANS OR INOP FOR NCP (CHAN
*                                      INOP)                         */
         CLI   TRMTYPE(RTRM),X'0F'                              05S0809
         BNE   @RF00809                                         05S0809
*                   DO;                                         05S0810
*                     IF RUDATA3=INOP THEN/* IF INOP ON THE NCP ...
*                                                            @YM07712*/
         CLC   RUDATA3(3,RRUDATA),INOP                          05S0811
         BNE   @RF00811                                         05S0811
*                       CURSWCH=CURCINOP;/* ... INDICATE INOP TO
*                                      IEDNCU                @YM07712*/
         MVI   CURSWCH(RCUR),X'38'                              05S0812
*                     ELSE          /* ELSE ITS ANS          @YM07712*/
*                       CURSWCH=CURCUREQ;/* INDICATE ANS TO IEDNCU
*                                                            @YM07712*/
         B     @RC00811                                         05S0813
@RF00811 MVI   CURSWCH(RCUR),X'39'                              05S0813
*                     CALL GETLCBNA;                            05S0814
@RC00811 BAL   @14,GETLCBNA                                     05S0814
*                                                               06S0815
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS.RSPSRCH.DISPO.ANSCHANI.SETREQST:    */
*                     /* THIS SEGMENT SETS IPL - DUMP - ACTIVATE -   */
*                     /* DEACTIVATE REQUESTS AS NEEDED               */
*                     /*                                             */
*                     /***********************************************/
*                                                               06S0815
*                     RFY                                       06S0815
*                      (REG15,                                  06S0815
*                       REG00) RSTD;/*                       @YM08988*/
*                     LCBDACRQ=ON;  /* SET DEACTIVATE REQUEST        */
         OI    LCBDACRQ(RLCB),B'01000000'                       06S0816
*                     TRMINOP=ON;   /* FORCE IDENTICAL PROCESSING FOR
*                                      ANSC AND INOP         @YM08120*/
         OI    TRMINOP(RTRM),B'10000000'                        06S0817
*                     IF(LCBUSUC=ON&LCBEQUCK=ON)×/* IF EQUIPMENT
*                                      CHECK OR ..           @ZM47867*/
*                         (LCBSIOC1=ON&LCBSIOC2=ON) THEN/* IF SIO
*                                      COND CODE 3           @ZM47856*/
         TM    LCBUSUC(RLCB),B'00000010'                        06S0818
         BNO   @GL00006                                         06S0818
         TM    LCBEQUCK(RLCB),B'00010000'                       06S0818
         BO    @RT00818                                         06S0818
@GL00006 TM    LCBSIOC1(RLCB),B'00110000'                       06S0818
         BNO   @RF00818                                         06S0818
@RT00818 DS    0H                                               06S0819
*                       DO;         /*                       @ZM47856*/
*                         LCBACTRQ=OFF;/* TURN OFF ACTIVATE REQUEST
*                                      FLAG                  @ZM47856*/
*                         LCBIPLRQ=OFF;/* TURN OFF IPL REQUEST FLAG
*                                                            @ZM47856*/
*                         LCBDMPRQ=OFF;/* TURN OFF DUMP REQUEST FLAG
*                                                             @ZM4756*/
         NI    LCBACTRQ(RLCB),B'01001111'                       06S0822
*                       END;        /* ZM47856                       */
*                     ELSE          /* ZM47856                       */
*                       DO;         /* ZM47856                       */
         B     @RC00818                                         06S0824
@RF00818 DS    0H                                               06S0825
*                         IF TRMSYGEN=ON THEN/* IF ACTIVE=YES   06S0825
*                                                            @YM08445*/
         TM    TRMSYGEN(RTRM),B'00100000'                       06S0825
         BNO   @RF00825                                         06S0825
*                           LCBACTRQ=ON;/* REQUEST ACTIVATE          */
         OI    LCBACTRQ(RLCB),B'00010000'                       06S0826
*                         REG00=TRMNCPIM;/* MASK                     */
@RF00825 LA    REG00,8                                          06S0827
*                         RPARM=RTRM+LENGTH(IEDNTRM);/* TTE ADDRESS
*                                      IS PARAMETER          @YM08004*/
         LA    RPARM,14                                         06S0828
         ALR   RPARM,RTRM                                       06S0828
*                         CALL IEDQTL;                          06S0829
         L     @15,AVTDDFT(,RAVT)                               06S0829
         BALR  @14,@15                                          06S0829
*                         RFY                                   06S0830
*                           IEDNCP BASED(REG15);                06S0830
*                         IF CURSWCH=CURCINOP/* IF INOP ...  @YM08120*/
*                             &(LCBINTRQ=ON/* ... AND IPL REQUIRED
*                                      ...                           */
*                             ×LCBNOTIN=ON) THEN/* ... OR       06S0831
*                                      INTERVENTION REQUIRED         */
         CLI   CURSWCH(RCUR),X'38'                              06S0831
         BNE   @RF00831                                         06S0831
         TM    LCBINTRQ(RLCB),B'01000010'                       06S0831
         BZ    @RF00831                                         06S0831
*                           DO;                                 06S0832
*                             NCPIPLD=OFF;/* RESET IPLED FLAG        */
         NI    NCPIPLD(REG15),B'11110111'                       06S0833
*                             IF NCPDAUTO=ON THEN/* IF AUTO DUMP
*                                      SPECIFIED                     */
         TM    NCPDAUTO(REG15),B'01000000'                      06S0834
         BNO   @RF00834                                         06S0834
*                               LCBDMPRQ=ON;/* REQUEST DUMP          */
         OI    LCBDMPRQ(RLCB),B'10000000'                       06S0835
*                             IF NCPIAUTO=ON THEN/* IF AUTO IPL 06S0836
*                                      SPECIFIED                     */
@RF00834 TM    NCPIAUTO(REG15),B'10000000'                      06S0836
         BNO   @RF00836                                         06S0836
*                               LCBIPLRQ=ON;/* REQUEST IPL           */
         OI    LCBIPLRQ(RLCB),B'00100000'                       06S0837
*                             ELSE                              06S0838
*                               LCBACTRQ=OFF;/* RESET ACTIVATE  06S0838
*                                      REQUEST                       */
         B     @RC00836                                         06S0838
@RF00836 NI    LCBACTRQ(RLCB),B'11101111'                       06S0838
*                           END;                                06S0839
@RC00836 DS    0H                                               06S0840
*                         RFY                                   06S0840
*                           IEDNCP BASED;                       06S0840
@RF00831 DS    0H                                               06S0841
*                       END;        /*                       @ZM47856*/
*                     RFY                                       06S0842
*                      (REG15,                                  06S0842
*                       REG00) UNRSTD;/*                     @YM08988*/
@RC00818 DS    0H                                               06S0843
*                     IF LCBDMPRQ=ON THEN/* IF 3705 DUMP WAS    05S0843
*                                      REQUESTED                     */
         TM    LCBDMPRQ(RLCB),B'10000000'                       05S0843
         BNO   @RF00843                                         05S0843
*                       DO;                                     05S0844
*                                                               06S0845
*                         /*******************************************/
*                         /*                                         */
*                         /* PROCESS.RSPSRCH.DISPO.ANSCHANI.INVOKDMP:*/
*                         /* THIS SEGMENT BUILDS AN OPCE AS INPUT TO */
*                         /* THE IPL/DUMP PROCESSOR TO INVOKE A DUMP */
*                         /* OF THE 3705                             */
*                         /*                                         */
*                         /*******************************************/
*                                                               06S0845
*                         RFY                                   06S0845
*                           REG00 RSTD;                         06S0845
*                         RPARM=RCUR;/* ADDRESS OF UNIT TO BUILD OPCE
*                                                            @YM09048*/
         LR    RPARM,RCUR                                       06S0846
*                         REG00=0;  /* SIGNAL LCB OK                 */
         SLR   REG00,REG00                                      06S0847
*                         CALL OPCEBLD;                         06S0848
         BAL   @14,OPCEBLD                                      06S0848
*                         OCSWITCH=OCDMPC;/* IDENTIFY DUMP REQUEST TO
*                                      IGCMH10D                      */
         MVI   OCSWITCH(ROPCE),X'0A'                            06S0849
*                         OCWTG=''B;/* CLEAR WHERE TO GO FIELD       */
         XC    OCWTG(2,ROPCE),OCWTG(ROPCE)                      06S0850
*                         RPARM=OCTRMTBL;/* TTCIN FOR ROUTINE   06S0851
*                                                            @YM08988*/
         LH    RPARM,OCTRMTBL(,ROPCE)                           06S0851
         N     RPARM,@CF03167                                   06S0851
*                         CALL IEDQTNT;/* FIND TRM           @YM08988*/
         L     @15,AVTRNMPT(,RAVT)                              06S0852
         BALR  @14,@15                                          06S0852
*                         RTRM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO
*                                      BEGINNING             @YM08988*/
         LA    @07,14                                           06S0853
         LR    RTRM,RPARM                                       06S0853
         SLR   RTRM,@07                                         06S0853
*                         RFY                                   06S0854
*                           IEDCUREQ BASED(RPARM);/* RESET BASE FOR
*                                      CUR ELEM              @YM08988*/
*                         RPARM=RPRF;/* UNIT FOR THE CLEANUP REQUEST
*                                      ELEMENT               @YM09048*/
         LR    RPARM,RPRF                                       06S0855
*                         OPCECLR=''B;/* CLEAR ENTIRE UNIT   @YM09048*/
         LR    @15,RPARM                                        06S0856
         AL    @15,@CF03163                                     06S0856
         XC    OPCECLR(64,@15),OPCECLR(@15)                     06S0856
*                         CURSWCH=CURCINOP;/* SWITCH SETTING @YM08988*/
         MVI   CURSWCH(RPARM),X'38'                             06S0857
*                         CURFLG2=0;/* CLEAR FLAG            @YM08988*/
         MVI   CURFLG2(RPARM),X'00'                             06S0858
*                         CURTTCIN=OCTRMTBL;/* TTCIN         @YM08988*/
         LH    @15,OCTRMTBL(,ROPCE)                             06S0859
         N     @15,@CF03167                                     06S0859
         STH   @15,CURTTCIN(,RPARM)                             06S0859
*                         CURTRM=RTRM+LENGTH(IEDNTRM);/* TTE BASE
*                                                            @YM08988*/
         ALR   @07,RTRM                                         06S0860
         ST    @07,CURTRM(,RPARM)                               06S0860
*                         CURPRI=PRICUREQ;/* PRIORITY FOR ELEMENT TO
*                                      IEDNCU                @YM08988*/
         MVI   CURPRI(RPARM),X'C4'                              06S0861
*                         CURQCB=SAVTCLUP;/* QCB             @YM08988*/
         L     @07,AVTSAVTP(,RAVT)                              06S0862
         MVC   CURQCB(3,RPARM),SAVTCLUP+1(@07)                  06S0862
*                         CALL TPOSTELM;/* TPOST ELEMENT TO IEDNCU
*                                                            @YM08988*/
         BAL   @14,TPOSTELM                                     06S0863
*                         RFY                                   06S0864
*                           IEDCUREQ BASED(RCUR);/* RESET BASE  06S0864
*                                                            @YM08988*/
*                         RFY                                   06S0865
*                           REG00 UNRSTD;                       06S0865
*                         OPCMODID=DMPDEST;/* SCHEDULE EXIT TO DUMP
*                                      PROCESSOR                     */
         MVC   OPCMODID(2,ROPCAVT),DMPDEST                      05S0866
*                       END;                                    05S0867
*                   END;                                        05S0868
@RF00843 DS    0H                                               05S0869
*               END;                                            04S0869
@RF00809 DS    0H                                               04S0870
*         END;                      /*                       @YM07310*/
@RC00794 DS    0H                                               03S0870
@RC00783 DS    0H                                               03S0871
*       RFY                                                     03S0871
*        (RPRF,                                                 03S0871
*         RCHAIN) UNRSTD;                                       03S0871
@RC00736 DS    0H                                               03S0872
*     END;                                                      02S0872
*   IF OPCMODID=DISPDEST            /* IF EXIT ...                   */
*       ×OPCMODID=DMPDEST THEN                                  02S0873
@RF00733 CLC   OPCMODID(2,ROPCAVT),DISPDEST                     02S0873
         BE    @RT00873                                         02S0873
         CLC   OPCMODID(2,ROPCAVT),DMPDEST                      02S0873
         BE    @RT00873                                         02S0873
*     ;                             /* ... DETERMINED                */
*   ELSE                            /* EXIT NOT DETERMINED           */
*     DO;                                                       02S0875
*       RFY                                                     02S0876
*        (RRUDATA) RSTD;            /*                       @YM08988*/
*       IF OCELMPRI=PRICULCB×       /* IF RETURN ...         @YM07783*/
*           OCSWITCH=OCTOFC THEN    /* ... FROM DEACTIVATE   @YM08004*/
         CLI   OCELMPRI(ROPCE),X'C0'                            02S0877
         BE    @RT00877                                         02S0877
         CLI   OCSWITCH(ROPCE),X'23'                            02S0877
         BNE   @RF00877                                         02S0877
@RT00877 DS    0H                                               02S0878
*         DO;                                                   02S0878
*                                                               03S0879
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.LOWIN: THIS SEGMENT PROCESSES THE LOW PRIORITY*/
*           /* CLEANUP REQUEST ELEMENT THAT IS ATTACHED TO THE INPUT */
*           /* OPCE ONLY FROM NCP DEACTIVATION THAT SIGNALS TCAM TASK*/
*           /* CLEANUP AND DEACTIVATE COMPLETE. WHEN ENTERED,        */
*           /* OPCCOPCE=ADDRESS OF OPCE, OCUNIT=ADDRESS OF CLEANUP   */
*           /* REQUEST ELEMENT.                              @ZM45403*/
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0879
*           RFY                                                 03S0879
*             IEDQOPCE BASED(OPCCOPCE);                         03S0879
*           RFY                                                 03S0880
*            (RLCB,                                             03S0880
*             REG00) RSTD;          /*                       @YM08988*/
*           OPCMODID=DISPDEST;      /* ASSUME EXIT TO IGC0010D       */
         MVC   OPCMODID(2,ROPCAVT),DISPDEST                     03S0881
*           RPARM=OCTRMTBL;         /* GET TTCIN FROM OPCE   @ZM45403*/
         L     @15,OPCCOPCE(,ROPCAVT)                           03S0882
         LH    RPARM,OCTRMTBL(,@15)                             03S0882
         N     RPARM,@CF03167                                   03S0882
*           CALL IEDQTNT;           /* GO GET TTE ADDR       @ZM45403*/
         L     @15,AVTRNMPT(,RAVT)                              03S0883
         BALR  @14,@15                                          03S0883
*           RTRM=RPARM-LENGTH(IEDNTRM);/* SET UP BASE REG CORRECTLY
*                                                            @ZM46793*/
         LR    RTRM,RPARM                                       03S0884
         SL    RTRM,@CF02443                                    03S0884
*           IF TRMTYPE=TRMLNCP THEN /* IF INOP/ANS ON THE NCP ...
*                                                            @YM07829*/
         CLI   TRMTYPE(RTRM),X'0F'                              03S0885
         BNE   @RF00885                                         03S0885
*             DO;                   /* PROCESS ANY IPL OR ACTIVATE
*                                      REQUEST PENDING       @YM07829*/
*               RCUR=OCUNIT;        /* CUR ADDRESSABILITY    @ZM45403*/
         L     @15,OPCCOPCE(,ROPCAVT)                           03S0887
         L     RCUR,OCUNIT(,@15)                                03S0887
*               CALL GETLCB;                                    03S0888
         BAL   @14,GETLCB                                       03S0888
*               LCBDACRQ=OFF;       /* RESET DEACTIVATE REQUEST      */
         NI    LCBDACRQ(RLCB),B'10111111'                       03S0889
*               IF LCBIPLRQ=ON THEN /* IF AN IPL REQUESTED   @YM07829*/
         TM    LCBIPLRQ(RLCB),B'00100000'                       03S0890
         BNO   @RF00890                                         03S0890
*                 DO;                                           03S0891
*                   OCSWITCH=OCIPLC;/* IDENTIFY OPCE TO IPL          */
         L     @15,OPCCOPCE(,ROPCAVT)                           03S0892
         MVI   OCSWITCH(@15),X'11'                              03S0892
*                   OCWTG=''B;      /* NO RETURN                     */
         XC    OCWTG(2,@15),OCWTG(@15)                          03S0893
*                   OPCMODID=DMPDEST;/* SCHEDULE XCTL TO IPL         */
         MVC   OPCMODID(2,ROPCAVT),DMPDEST                      03S0894
*                 END;                                          03S0895
*               ELSE                                            03S0896
*                 IF LCBACTRQ=ON THEN/* IF AN ACTIVATE REQUESTED
*                                                            @YM07829*/
         B     @RC00890                                         03S0896
@RF00890 TM    LCBACTRQ(RLCB),B'00010000'                       03S0896
         BNO   @RF00896                                         03S0896
*                   DO;                                         03S0897
*                     OCSWITCH=OCTOFA;/* IDENTIFY OPCE TO ACTIVATE   */
         L     @15,OPCCOPCE(,ROPCAVT)                           03S0898
         MVI   OCSWITCH(@15),X'22'                              03S0898
*                     OCWTG=''B;    /* NO ROUTING NEEDED             */
         XC    OCWTG(2,@15),OCWTG(@15)                          03S0899
*                     OPCMODID=ACTDEST;/* SCHEDULE XCTL TO IGCFA10D  */
         MVC   OPCMODID(2,ROPCAVT),ACTDEST                      03S0900
*                   END;                                        03S0901
*               RPARM=RCUR;         /* ADDRESS OF ELEMENT TO FREE
*                                                            @YM08988*/
@RF00896 DS    0H                                               03S0902
@RC00890 LR    RPARM,RCUR                                       03S0902
*               RPARM->PRFTIC=PRFINTIC;/* INDICATE LAST UNIT TO FREE
*                                                            @YM08988*/
         MVC   PRFTIC(4,RPARM),@CB01989                         03S0903
*               IF OPCMODID=DISPDEST THEN/* IF EXIT TO IGC0010D 03S0904
*                                                            @YM08988*/
         CLC   OPCMODID(2,ROPCAVT),DISPDEST                     03S0904
         BNE   @RF00904                                         03S0904
*                 DO;               /*                       @YM08988*/
*                   IF OCATTACH=ON THEN/* IF ATTACHED OPCE(S)   03S0906
*                                                            @YM08988*/
         L     @15,OPCCOPCE(,ROPCAVT)                           03S0906
         TM    OCATTACH(@15),B'00000010'                        03S0906
         BNO   @RF00906                                         03S0906
*                     OPCNEXT=OCELEM;/* SCHEDULE AS NEXT     @YM08988*/
         L     @15,OCELEM(,@15)                                 03S0907
         ST    @15,OPCNEXT(,ROPCAVT)                            03S0907
*                   RPARM=OPCCOPCE; /* ADDRESS OF ELEMENT TO FREE TO
*                                      CHAIN                 @YM08988*/
@RF00906 L     RPARM,OPCCOPCE(,ROPCAVT)                         03S0908
*                   RPARM->PRFTIC=RCUR;/* ADD CUR ELEMENT    @YM08988*/
         ST    RCUR,PRFTIC(,RPARM)                              03S0909
*                 END;              /*                       @YM08988*/
*               ELSE                /* ELSE AN IPL IS TO BE DONE
*                                                            @YM08988*/
*                 OCUNIT=PRFINTIC;  /* INITIALIZE OPCE TIC FIELD
*                                                            @YM08988*/
         B     @RC00904                                         03S0911
@RF00904 L     @15,OPCCOPCE(,ROPCAVT)                           03S0911
         MVC   OCUNIT(4,@15),@CF01989                           03S0911
*               CALL FREEBUFF;      /*                       @YM08988*/
@RC00904 L     @15,OPCFREBF(,ROPCAVT)                           03S0912
         BALR  @14,@15                                          03S0912
*             END;                  /*                       @YM07829*/
*           ELSE                    /* ELSE THIS IS AN NCP RESOURCE
*                                      INOP                  @YM07829*/
*             DO;                   /* SCHEDULE REACTIVATE OF THIS
*                                      RESOURCE              @YM07829*/
         B     @RC00885                                         03S0914
@RF00885 DS    0H                                               03S0915
*               OCSWITCH=OCTOFA;    /* IDENTIFY OPCE TO ACTIVATE     */
         L     @15,OPCCOPCE(,ROPCAVT)                           03S0915
         MVI   OCSWITCH(@15),X'22'                              03S0915
*               OCWTG=''B;          /* NO ROUTING NEEDED             */
         XC    OCWTG(2,@15),OCWTG(@15)                          03S0916
*               OPCMODID=ACTDEST;   /* SCHEDULE XCTL TO IGCFA10D     */
         MVC   OPCMODID(2,ROPCAVT),ACTDEST                      03S0917
*             END;                  /*                       @YM07829*/
*           RFY                                                 03S0919
*             REG00 UNRSTD;                                     03S0919
@RC00885 DS    0H                                               03S0920
*           RFY                                                 03S0920
*             IEDQOPCE BASED(ROPCE);                            03S0920
*         END;                                                  02S0921
*       ELSE                                                    02S0922
*         DO;                                                   02S0922
         B     @RC00877                                         02S0922
@RF00877 DS    0H                                               02S0923
*                                                               03S0923
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.SCHDDACT: THIS SEGMENT SCHEDULES DEACTIVATION */
*           /* OF EFFECTED RESOURCE AND BUILDS A CLEANUP REQUEST     */
*           /* ELEMENT AND TPOSTS IT TO IEDNCU                       */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0923
*           RFY                                                 03S0923
*            (RLCB,                                             03S0923
*             REG00) RSTD;          /*                       @YM08988*/
*           RFY                                                 03S0924
*             IEDCUREQ BASED(RPARM);                            03S0924
*           IF OCSWITCH=OCDMPC THEN /* IF INPUT FROM DUMP            */
         CLI   OCSWITCH(ROPCE),X'0A'                            03S0925
         BNE   @RF00925                                         03S0925
*             DO;                                               03S0926
*               OCSWITCH=OCTOFC;    /* IDENTIFY OPCE TO DEACTIVATE   */
         MVI   OCSWITCH(ROPCE),X'23'                            03S0927
*               OCWTG=CU2DEST;      /* SCHEDULE RETURN ROUTING       */
         MVC   OCWTG(2,ROPCE),CU2DEST                           03S0928
*               RPARM=1;            /* REQUEST ONE UNIT      @OX19283*/
         LA    RPARM,1                                          03S0929
*               CALL ALLOCBUF;      /* ALLOCATE A CLEANUP REQUEST
*                                      ELEMENT               @OX19283*/
         L     @15,OPCGETBF(,ROPCAVT)                           03S0930
         BALR  @14,@15                                          03S0930
*               CURTTCIN=OCTRMTBL;  /* SET UP TTCIN IN CLEANUP ELE
*                                                            @OX19283*/
         LH    @15,OCTRMTBL(,ROPCE)                             03S0931
         N     @15,@CF03167                                     03S0931
         STH   @15,CURTTCIN(,RPARM)                             03S0931
*               ROPCE=RPARM;        /* SAVE ADDR TO CLEANUP ELE 03S0932
*                                                            @OX19283*/
         LR    ROPCE,RPARM                                      03S0932
*               CURSWCH=CURCINOP;   /* SWITCH SETTING        @OX19283*/
         MVI   CURSWCH(RPARM),X'38'                             03S0933
*               CURFLG2=0;          /* ZERO FLAGS            @OX19283*/
         MVI   CURFLG2(RPARM),X'00'                             03S0934
*               CURFLG3=0;          /* ZERO FLAGS            @OX19283*/
         MVI   CURFLG3(RPARM),X'00'                             03S0935
*               RPARM=CURTTCIN;     /* TTCIN FOR IEDQTNT     @OX19283*/
         LR    RPARM,@15                                        03S0936
*               CALL IEDQTNT;       /* GET TRM ADDRESS       @OX19283*/
         L     @15,AVTRNMPT(,RAVT)                              03S0937
         BALR  @14,@15                                          03S0937
*               ROPCE->CURTRM=RPARM;/* SAVE TRMADDR FOR NCU  @OX19283*/
         ST    RPARM,CURTRM(,ROPCE)                             03S0938
*               RPARM=ROPCE;        /* RESTORE CLEANUP ELE ADDR 03S0939
*                                                            @OX19283*/
         LR    RPARM,ROPCE                                      03S0939
*               ROPCE=OPCCOPCE;     /* RESTORE DEACT ELEMENT ADDR
*                                                            @OX19283*/
         L     ROPCE,OPCCOPCE(,ROPCAVT)                         03S0940
*             END;                                              03S0941
*           ELSE                    /* INOP/ANS              @YM07712*/
*             DO;                                               03S0942
         B     @RC00925                                         03S0942
@RF00925 DS    0H                                               03S0943
*               RPARM=RCUR->CURELEM;/* ADDR OF INOP/ANS BUFFER  03S0943
*                                                            @YM07712*/
         L     RPARM,CURELEM-1(,RCUR)                           03S0943
         LA    RPARM,0(,RPARM)                                  03S0943
*               REG00=1;            /* SIGNAL LCB NOT FOR DEVICE     */
         LA    REG00,1                                          03S0944
*               CALL OPCEBLD;       /* BUILD OPCE IN INOP BUFFER     */
         BAL   @14,OPCEBLD                                      03S0945
*               ROPCE=RPARM;        /* ADDRESSABILITY TO BUILT OPCE  */
         LR    ROPCE,RPARM                                      03S0946
*               RPARM=OPCCOPCE;     /* ADDRESSABILITY TO CLEAN UP
*                                      REQUEST ELEMENT               */
         L     RPARM,OPCCOPCE(,ROPCAVT)                         03S0947
*               OPCCOPCE=ROPCE;     /* CURRENT ELEMENT FOR DEACTIVATE*/
         ST    ROPCE,OPCCOPCE(,ROPCAVT)                         03S0948
*               OCSWITCH=OCTOFC;    /* IDENTIFY OPCE TO DEACTIVATE   */
         MVI   OCSWITCH(ROPCE),X'23'                            03S0949
*               OCWTG=CU2DEST;      /* RETURN ROUTING                */
         MVC   OCWTG(2,ROPCE),CU2DEST                           03S0950
*               IF TRMTYPE^=TRMLNCP THEN/* IF NOT NCP THEN ...  03S0951
*                                                            @YM07712*/
         CLI   TRMTYPE(RTRM),X'0F'                              03S0951
         BE    @RF00951                                         03S0951
*                 CURSWCH=CURCUREQ; /* SWITCH SETTING                */
         MVI   CURSWCH(RPARM),X'39'                             03S0952
*               ELSE                                            03S0953
*                 ;                 /* ELSE CURSWCH WAS SET UP  03S0953
*                                      PROPERLY EARLIER      @YM07712*/
@RF00951 DS    0H                                               03S0954
*             END;                  /*                       @OX19283*/
*           CURPRI=PRICUREQ;        /* PRIORITY FOR ELEMENT TO IEDNCU*/
@RC00925 MVI   CURPRI(RPARM),X'C4'                              03S0955
*           CURQCB=SAVTCLUP;        /* QCB                           */
         L     @15,AVTSAVTP(,RAVT)                              03S0956
         MVC   CURQCB(3,RPARM),SAVTCLUP+1(@15)                  03S0956
*           CALL TPOSTELM;          /* TPOST ELEMENT TO IEDNCU       */
         BAL   @14,TPOSTELM                                     03S0957
*           OPCMODID=DACDEST;       /* SET EXIT TO DEACTIVATE        */
         MVC   OPCMODID(2,ROPCAVT),DACDEST                      03S0958
*           RFY                                                 03S0959
*             IEDCUREQ BASED(RCUR);                             03S0959
*           RFY                                                 03S0960
*             REG00 UNRSTD;                                     03S0960
*         END;                                                  02S0961
*     END;                                                      02S0962
@RC00877 DS    0H                                               02S0963
*                                                               02S0963
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT. THE XCTL ASSEMBLER */
*   /* MACRO INSTRUCTION IS USED BY THIS SEGMENT TO TRANSFER CONTROL */
*   /* TO THE NEXT MODULE THAT IS TO BE EXECUTED.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0963
*   RFY                                                         02S0963
*     REG00 RSTD;                                               02S0963
@RT00873 DS    0H                                               02S0964
*   RPARM=ROPCAVT;                  /* SET THE PARAMETER REGISTER IN
*                                      PREPARATION TO TRANSFERRING
*                                      CONTROL TO THE NEXT MODULE    */
         LR    RPARM,ROPCAVT                                    02S0964
*   IF OPCMODID=DISPDEST THEN       /* IF EXIT REQUIRED TO IGC0010D  */
         CLC   OPCMODID(2,ROPCAVT),DISPDEST                     02S0965
         BNE   @RF00965                                         02S0965
*     REG00=0;                      /* PRIME REGISTER ZERO FOR  02S0966
*                                      IGC0010D                      */
         SLR   REG00,REG00                                      02S0966
*   GEN EXIT REFS(OPCXCTL,ROPCAVT) NOSEQFLOW SETS(REG15);       02S0967
@RF00965 DS    0H                                               02S0967
*                                   /*
         XCTL  SF=(E,OPCXCTL(ROPCAVT)) TRANSFER CONTROL MACRO
*   RFY                                                         02S0968
*     REG00 UNRSTD;                                             02S0968
*                                                               02S0969
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH: THIS SEGMENT CONTAINS THE SEARCH INTERNAL PROCEDURE   */
*   /* WHICH SEARCHES THE RESPONSE WAIT CHAIN POINTED TO BY RCHAIN.  */
*   /* IF A TTCIN MATCH USING INPUTTED BUFFER PRFSRCE AND OPCE       */
*   /* RESPONSE ELEMENT OCTRTBL IS FOUND, A RESPONSE IS GENERATED AND*/
*   /* TPOSTED TO AVTOPCOB. THE SEARCH CONTINUES UNTIL THE CHAIN IS  */
*   /* COMPLETED. IF BUFFERS, NEEDED TO BUILD RESPONSES, ARE EXHAUSED*/
*   /* EXIT IS MADE TO ALLOW PROCESSING OF RESPONSES ALREADY TPOSTED.*/
*   /* ON INPUT RCUR=@CUR, RCHAIN=@CHAIN TO SEARCH                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0969
*SEARCH:                                                        02S0969
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0969
SEARCH   DS    0H                                               02S0970
*   RFY                                                         02S0970
*    (RELEM,                                                    02S0970
*     RCHAIN,                                                   02S0970
*     RCUR,                                                     02S0970
*     RPRF,                                                     02S0970
*     REG00,                                                    02S0970
*     REG09,                                                    02S0970
*     RRETURN) RSTD;                                            02S0970
*   REG09=RRETURN;                  /* SAVE RETURN ADDRESS           */
         LR    REG09,RRETURN                                    02S0971
*   RFY                                                         02S0972
*     RRETURN UNRSTD;                                           02S0972
*   RFY                                                         02S0973
*     IEDQOPCE BASED(RELEM);                                    02S0973
*   CURENDCH=OFF;                   /* INITIALIZE EXIT SWITCH        */
         NI    CURENDCH(RCUR),B'11101111'                       02S0974
*   RELEM=RCHAIN;                   /* SET UP TO FIRST ELEMENT ON
*                                      WAIT CHAIN                    */
         LR    RELEM,RCHAIN                                     02S0975
*   DO UNTIL                        /* PROCESS TILL ...              */
*         (CURPIUCT=10              /* 10 PIUS HAVE BEEN POSTED TO
*                                      PATH CONTROL ...              */
*         ×CURPIUCT=>(AVTAVFCT/2)   /* ... OR 1/2 AVAILABLE BUFFERS
*                                      IS LESS THAN THE NUMBER OF
*                                      PIUS WE HAVE POSTED ...       */
*         ×CURENDCH=ON);            /* ... OR END OF CHAIN           */
@DL00976 DS    0H                                               02S0977
*                                                               03S0977
*     /***************************************************************/
*     /*                                                             */
*     /* SEARCH.CHAIN: THIS SEGMENT SEARCHES THE CHAIN               */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0977
*     IF RCHAIN=OPCWAITN            /* IF FID0 WAIT CHAIN SEARCH ... */
*         ×(OCSWITCH>=OCCHGSL       /* ... OR FID1 AND A REQUEST THAT
*                                      WILL ...                      */
*         &OCSWITCH=<OCSESTRM) THEN /* ... NOT BE RESPONDED TO BY
*                                      TCAM ...                      */
         C     RCHAIN,OPCWAITN(,ROPCAVT)                        03S0977
         BE    @RT00977                                         03S0977
         CLI   OCSWITCH(RELEM),X'80'                            03S0977
         BL    @RF00977                                         03S0977
         CLI   OCSWITCH(RELEM),X'E6'                            03S0977
         BH    @RF00977                                         03S0977
@RT00977 DS    0H                                               03S0978
*       DO;                         /* ... RESIDENT CLEANUP          */
*         IF OCRSPSNT=ON            /* HAS RESPONSE BEEN SENT BY C1
*                                      FOR THIS ELEMENT ...          */
*             ×OCBFREQ=ON THEN                                  03S0979
         LR    @15,RELEM                                        03S0979
         AL    @15,@CF03169                                     03S0979
         TM    OCRSPSNT-3(@15),B'11000000'                      03S0979
         BNZ   @RT00979                                         03S0979
*           ;                       /* ... OR THIS ELEMENT HAS BEEN
*                                      MARKED NO MATCH               */
*         ELSE                      /* SKIP TO NEXT ELEMENT          */
*           DO;                                                 03S0981
*                                                               04S0982
*             /*******************************************************/
*             /*                                                     */
*             /* SEARCH.CHAIN.LOOKCOHT: THIS SEGMENT, PART OF SEARCH */
*             /* SUBROUTINE, CHECKS THE TTCIN OF THE ANS OR INOP     */
*             /* DEVICE AGAINST TTCIN OF DEVICES AWAITING RESPONSES  */
*             /* ON THE WAIT CHAIN OR AGAINST TTCIN OF HIGHER        */
*             /* RESOURCE OF DEVICES AWAITING RESPONSES              */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0982
*             IF CURTTCIN=OCTRMTBL THEN                         04S0982
         LH    @15,OCTRMTBL(,RELEM)                             04S0982
         N     @15,@CF03167                                     04S0982
         CH    @15,CURTTCIN(,RCUR)                              04S0982
         BE    @RT00982                                         04S0982
*               ;                   /* IF TTCIN OF INOP/ANS DEVICE IS
*                                      SAME AS ELEMENT AWAITING 04S0983
*                                      RESPONSE - EXIT               */
*             ELSE                  /* NO MATCH - CHECK HIGHER  04S0984
*                                      RESOURCE                      */
*               DO;                                             04S0984
*                 RPARM=OCTRMTBL;   /* TNT INDEX - TO GET TRM ROUTINE*/
         LH    RPARM,OCTRMTBL(,RELEM)                           04S0985
         N     RPARM,@CF03167                                   04S0985
*                 CALL IEDQTNT;                                 04S0986
*                                                               04S0986
         L     @15,AVTRNMPT(,RAVT)                              04S0986
         BALR  @14,@15                                          04S0986
*                 /***************************************************/
*                 /*                                                 */
*                 /* WHEN RETURN, RPARM=ADDR OF TRM OF DEVICE        */
*                 /* AWAITING RESPONSE                               */
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0987
*                 RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEG 04S0987
*                                      PREFIX                        */
         SL    RPARM,@CF02443                                   04S0987
*                 RFY                                           04S0988
*                   IEDTRM BASED(RPARM);/* TEMP CHANGE BASE TO CHECK
*                                      RESPONSE TRM                  */
*                 DO UNTIL(TRMTYPE=TRMLNCP/* DO WHILE NEXT HIGHER
*                                      ROSOURCE IS NOT AN NCP ...    */
*                       ×CURTTCIN=REG00/* ... OR TTCIN DOES NOT MATCH
*                                      ...                           */
*                       ×REG00=0);  /* ... OR ROUTINE DOES NOT FAIL  */
@DL00989 DS    0H                                               04S0990
*                   RPARM=RPARM+LENGTH(IEDNTRM);/* TO TRM PROPER FOR
*                                      ROUTINE                       */
         AL    RPARM,@CF02443                                   04S0990
*                   CALL COHORTLK;                              04S0991
         L     @15,OPCHORT(,ROPCAVT)                            04S0991
         BALR  @14,@15                                          04S0991
*                   RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO START
*                                      OF TRM RETURNED FOR CHECKS    */
         SL    RPARM,@CF02443                                   04S0992
*                 END;                                          04S0993
@DE00989 CLI   TRMTYPE(RPARM),X'0F'                             04S0993
         BE    @DC00989                                         04S0993
         CH    REG00,CURTTCIN(,RCUR)                            04S0993
         BE    @DC00989                                         04S0993
         LTR   REG00,REG00                                      04S0993
         BNZ   @DL00989                                         04S0993
@DC00989 DS    0H                                               04S0994
*               END;                                            04S0994
*             RFY                                               04S0995
*               IEDTRM BASED(RTRM); /* RESTORE                       */
@RT00982 DS    0H                                               04S0996
*             IF PRFSRCE=OCTRMTBL   /* WAS THERE A TTCIN MATCH ...   */
*                 ×PRFSRCE=REG00 THEN/* ... OR TTCIN MATCH IN COHORT */
         LH    @15,PRFSRCE(,RPRF)                               03S0996
         LH    @14,OCTRMTBL(,RELEM)                             03S0996
         N     @14,@CF03167                                     03S0996
         CR    @15,@14                                          03S0996
         BE    @RT00996                                         03S0996
         CR    @15,REG00                                        03S0996
         BNE   @RF00996                                         03S0996
@RT00996 DS    0H                                               03S0997
*               DO;                                             03S0997
*                                                               04S0998
*                 /***************************************************/
*                 /*                                                 */
*                 /* SEARCH.CHAIN.RESPONSE: THIS SEGMENT BUILDS THE  */
*                 /* RESPONSE FOR DEVICES FOUND ON RESPONSE WAIT     */
*                 /* CHAIN AND TPOSTS THE BUILT RESPONSE TO AVTOPCOB */
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0998
*                 RFY                                           04S0998
*                   IEDRH BASED(ADDR(PRF1RH));                  04S0998
*                 RPARM=1;          /* REQUEST ONE UNIT              */
         LA    RPARM,1                                          04S0999
*                 CALL ALLOCBUF;                                04S1000
         L     @15,OPCGETBF(,ROPCAVT)                           04S1000
         BALR  @14,@15                                          04S1000
*                 RPRF=RPARM;       /* BUFFER BASE                   */
*                                                               04S1001
         LR    RPRF,RPARM                                       04S1001
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET UP BUFFER PREFIX                            */
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S1002
*                 PRFSRCE=OCRUDEST; /* SOURCE OF RESPONSE            */
         L     @15,OCRUDEST(,RELEM)                             04S1002
         STH   @15,PRFSRCE(,RPRF)                               04S1002
*                 PRFPRI=PRIRESPB;  /* PRIORITY OF RESPONSE          */
         MVI   PRFPRI(RPRF),X'EA'                               04S1003
*                 PRFQCBA=ADDR(AVTOPCOB);/* DESTINATION              */
         LA    @15,AVTOPCOB(,RAVT)                              04S1004
         STCM  @15,7,PRFQCBA(RPRF)                              04S1004
*                 PRFTIC=PRFINTIC;  /* LAST UNIT                     */
         MVC   PRFTIC(4,RPRF),@CB01989                          04S1005
*                 PRFNBUNT=1;       /* ONE UNIT                      */
         MVI   PRFNBUNT(RPRF),X'01'                             04S1006
*                 IF RCHAIN=OPCWAITN THEN/* IF GENERATING FID0  04S1007
*                                      RESPONSES                     */
         C     RCHAIN,OPCWAITN(,ROPCAVT)                        04S1007
         BNE   @RF01007                                         04S1007
*                   DO;                                         04S1008
*                                                               05S1009
*                     /***********************************************/
*                     /*                                             */
*                     /* SEARCH.CHAIN.RESPONSE.FID0RESP: THIS SEGMENT*/
*                     /* INITIALIZES THE RH AND TH FOR FID0 RESPONSE */
*                     /* AND SETS UP THE NEGATIVE RESPONSE IN THE    */
*                     /* BUFFER                                      */
*                     /*                                             */
*                     /***********************************************/
*                                                               05S1009
*                     IEDRH=TRHFID0;/* FID0 RH                       */
         LR    @15,RPRF                                         05S1009
         SL    @15,@CF00045                                     05S1009
         MVC   IEDRH(3,@15),@CB02439                            05S1009
*                     PRF1FLG1=0;   /* FID0 TH                       */
         MVI   PRF1FLG1(@15),X'00'                              05S1010
*                     PRF1SQID=OCSEQ;/* SEQUENCE NUMBER              */
         LH    @14,OCSEQ(,RELEM)                                05S1011
         N     @14,@CF03167                                     05S1011
         STH   @14,PRF1SQID(,@15)                               05S1011
*                     BDUCMND=CD0CTRL;/* COMMAND                     */
         LA    @15,42                                           05S1012
         ALR   @15,RPRF                                         05S1012
         MVI   BDUCMND(@15),X'08'                               05S1012
*                     BDUFNFLG=0;   /* ALL FUNCTION FLAGS OFF EXCEPT
*                                      ...                           */
         MVI   BDUFNFLG(@15),X'00'                              05S1013
*                     BDUSTHDR=ON;  /* ... START OF HEADER ...       */
*                     BDUFRSTB=ON;  /* ... FIRST BLOCK ...           */
         OI    BDUSTHDR(@15),B'10010000'                        05S1015
*                     BDUBDUFG=0;   /* ALL BDU FLAGS OFF             */
         MVI   BDUBDUFG(@15),X'00'                              05S1016
*                     BDUSYRSP=RSPCRSET;/* SET COMMAND RESET @OZ27810*/
         MVI   BDUSYRSP(@15),X'9E'                              05S1017
*                     BDUEXRSP=0;   /* ... ERROR STATUS      @OZ27810*/
         MVI   BDUEXRSP(@15),X'00'                              05S1018
*                   END;                                        04S1019
*                 ELSE              /* IF GENERATING FID1 RESPONSES  */
*                   DO;                                         04S1020
         B     @RC01007                                         04S1020
@RF01007 DS    0H                                               04S1021
*                                                               05S1021
*                     /***********************************************/
*                     /*                                             */
*                     /* SEARCH.CHAIN.RESPONSE.FID1RESP: THIS SEGMENT*/
*                     /* INITIALIZES THE RH AND TH FOR FID1 RESPONSE */
*                     /* AND SETS THE PATH ERROR RESPONSE INTO THE   */
*                     /* BUFFER                                      */
*                     /*                                             */
*                     /***********************************************/
*                                                               05S1021
*                     IEDRH=0;      /* ZERO COMPLETE RH PRIOR TO
*                                      INITIALIZING                  */
         LR    @15,RPRF                                         05S1021
         SL    @15,@CF00045                                     05S1021
         SLR   @14,@14                                          05S1021
         STCM  @14,7,IEDRH(@15)                                 05S1021
*                     TRHTYPE=ON;   /* SET RESPONSE                  */
*                     TRHFI=ON;     /* SET FORMAT                    */
*                     TRHSDI=ON;    /* SET SENSE INCLUDED            */
*                     TRHBC=ON;     /* SET BEGIN CHAIN               */
*                     TRHEC=ON;     /* SET END CHAIN                 */
         OI    TRHTYPE(@15),B'10001111'                         05S1026
*                     TRHDR1=ON;    /* DEFINITE RESPONSE             */
         OI    TRHDR1(@15),B'10000000'                          05S1027
*                     PRFDEST=SAVTSCPT;/* SSCP TTE INDEX             */
         L     @14,AVTSAVTP(,RAVT)                              05S1028
         LH    @14,SAVTSCPT(,@14)                               05S1028
         N     @14,@CF03167                                     05S1028
         STH   @14,PRFDEST(,RPRF)                               05S1028
*                     PRF1SQID=OCSEQ;/* INSERT SEQUENCE NUMBER       */
         LH    @14,OCSEQ(,RELEM)                                05S1029
         N     @14,@CF03167                                     05S1029
         STH   @14,PRF1SQID(,@15)                               05S1029
*                     PRF1FLG1=0;   /* ZERO FLAG BYTE                */
         MVI   PRF1FLG1(@15),X'00'                              05S1030
*                     PRF1FIDI=ON;  /* SET FID1 FOR ALL RESPONSES    */
         OI    PRF1FIDI(@15),B'10000000'                        05S1031
*                     PRF1FORM=PRF1IDI;/* DESCRIPTION FOR ALL   05S1032
*                                      RESPONSES                     */
         NI    PRF1FORM(@15),B'11101111'                        05S1032
         OI    PRF1FORM(@15),B'00100000'                        05S1032
*                     IF OCSWITCH=OCSWEP/* IF SWITCH TO EP MODE ...  */
*                         ×OCSWITCH=OCSWNCP THEN/* ... OR SWITCH TO
*                                      NCP MODE                      */
         CLI   OCSWITCH(RELEM),X'C0'                            05S1033
         BE    @RT01033                                         05S1033
         CLI   OCSWITCH(RELEM),X'D0'                            05S1033
         BNE   @RF01033                                         05S1033
@RT01033 DS    0H                                               05S1034
*                       DO;                                     05S1034
*                         TRHRUCAT=TRHNC;/* RU CATAGORY=NETWORK 05S1035
*                                      CONTROL                       */
         LR    @15,RPRF                                         05S1035
         SL    @15,@CF00045                                     05S1035
         NI    TRHRUCAT(@15),B'10111111'                        05S1035
         OI    TRHRUCAT(@15),B'00100000'                        05S1035
*                         PRF1EXPI=ON;/* EXPANDED INDICATOR          */
         OI    PRF1EXPI(@15),B'01000000'                        05S1036
*                       END;                                    05S1037
*                     CATAGORY=SNSPATH;/* SIGNAL PATH ERROR          */
@RF01033 LA    @15,PRFSUNIT(,RPRF)                              05S1038
         AL    @15,@CF00452                                     05S1038
         SLR   @14,@14                                          05S1038
         IC    @14,PRFISIZE(,RPRF)                              05S1038
         ALR   @15,@14                                          05S1038
         MVI   CATAGORY(@15),X'80'                              05S1038
*                     MODIFIER=SNSLNKF;/* SIGNAL LINK FAILURE        */
         MVI   MODIFIER(@15),X'02'                              05S1039
*                     USERDATA=0;   /* NO USER DATA                  */
         SLR   @14,@14                                          05S1040
         STH   @14,USERDATA(,@15)                               05S1040
*                   END;                                        04S1041
*                 RPARM=RPRF;       /* ADDRESS OF UNIT TO TPOST      */
@RC01007 LR    RPARM,RPRF                                       04S1042
*                 CALL TPOSTELM;    /* TPOST UNIT TO AVTOPCOB        */
         BAL   @14,TPOSTELM                                     04S1043
*                 OCRSPSNT=ON;      /* MARK RESPONSE SENT            */
         LR    @15,RELEM                                        04S1044
         AL    @15,@CF03169                                     04S1044
         OI    OCRSPSNT-3(@15),B'01000000'                      04S1044
*               END;                                            03S1045
*             ELSE                  /* NO MATCH                      */
*               DO;                                             03S1046
         B     @RC00996                                         03S1046
@RF00996 DS    0H                                               03S1047
*                 OCRSPSNT=OFF;     /* RESET RESPONSE SENT SWITCH    */
*                 OCBFREQ=ON;       /* SET NO MATCH SWITCH           */
         LR    @15,RELEM                                        03S1048
         AL    @15,@CF03169                                     03S1048
         OI    OCBFREQ-3(@15),B'10000000'                       03S1048
         NI    OCRSPSNT-3(@15),B'10111111'                      03S1048
*               END;                                            03S1049
*           END;                                                03S1050
@RC00996 DS    0H                                               03S1051
*       END;                                                    03S1051
@RT00979 DS    0H                                               03S1052
*     RELEM=OCLINK;                 /* SET UP TO NEXT ELEMENT        */
@RF00977 L     RELEM,OCLINK(,RELEM)                             03S1052
*     IF RELEM=0 THEN               /* IF END OF CHAIN               */
         LTR   RELEM,RELEM                                      03S1053
         BNZ   @RF01053                                         03S1053
*       CURENDCH=ON;                /* SIGNAL EXIT LOOP              */
         OI    CURENDCH(RCUR),B'00010000'                       03S1054
*   END;                                                        02S1055
@RF01053 DS    0H                                               02S1055
@DE00976 LH    @15,CURPIUCT(,RCUR)                              02S1055
         C     @15,@CF03101                                     02S1055
         BE    @DC00976                                         02S1055
         LH    @10,AVTAVFCT(,RAVT)                              02S1055
         SRDA  @10,32                                           02S1055
         D     @10,@CF00065                                     02S1055
         CR    @15,@11                                          02S1055
         BNL   @DC00976                                         02S1055
         TM    CURENDCH(RCUR),B'00010000'                       02S1055
         BNO   @DL00976                                         02S1055
@DC00976 DS    0H                                               02S1056
*   OPCMODID=DISPDEST;              /* XCTL TARGET TO IGC0010D       */
         MVC   OPCMODID(2,ROPCAVT),DISPDEST                     02S1056
*   RFY                                                         02S1057
*     RRETURN RSTD;                                             02S1057
*   RRETURN=REG09;                  /* RESTORE RETURN ADDRESS        */
         LR    RRETURN,REG09                                    02S1058
*   RFY                                                         02S1059
*    (RELEM,                                                    02S1059
*     RCHAIN,                                                   02S1059
*     RCUR,                                                     02S1059
*     RPRF,                                                     02S1059
*     REG00,                                                    02S1059
*     REG09,                                                    02S1059
*     RRETURN) UNRSTD;                                          02S1059
*   END SEARCH;                                                 02S1060
@EL00002 DS    0H                                               02S1060
@EF00002 DS    0H                                               02S1060
@ER00002 BR    @14                                              02S1060
*                                                               02S1061
*   /*****************************************************************/
*   /*                                                               */
*   /* OPCEBLD: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE THAT    */
*   /* BUILDS AN OPCE IN A UNIT PASSED IN REG1. ON INPUT RTRM, RLCB, */
*   /* AND RPARM MUST BE INITIALIZED. OCSWITCH AND OCWTG WILL NOT BE */
*   /* SET UP AND RTRM, RLCB AND RPARM WILL BE UNCHANGED. ON INPUT IF*/
*   /* REG 0 IS NOT = TO 0 THE LCB MAY NOT BE FOR THE RESOURCE INOP, */
*   /* IN WHICH CASE THE TTE NAME IS INSERTED IN THE OPCE FOR MESSAGE*/
*   /* USE.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1061
*OPCEBLD:                                                       02S1061
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S1061
OPCEBLD  DS    0H                                               02S1062
*   RFY                                                         02S1062
*     IEDQOPCE BASED(RPARM);                                    02S1062
*   RFY                                                         02S1063
*    (REG10,                                                    02S1063
*     RPARM,                                                    02S1063
*     RLCB,                                                     02S1063
*     RRETURN,                                                  02S1063
*     REG00,                                                    02S1063
*     REG15) RSTD;                  /*                       @YM08988*/
*   OPCECLR=''B;                    /* CLEAR FIRST 8 BYTES           */
         LR    @11,RPARM                                        02S1064
         AL    @11,@CF03163                                     02S1064
         XC    OPCECLR(64,@11),OPCECLR(@11)                     02S1064
*   OCFLAG=0;                       /* CLEAR FLAG BYTE               */
         MVI   OCFLAG(RPARM),X'00'                              02S1065
*   OCOPTCDE=OCMODIFY;              /* IDENTIFY MODIFY COMMAND       */
         MVI   OCOPTCDE(RPARM),X'44'                            02S1066
*   IF AVTOPCON=0 THEN              /* IF SYSTEM CONSOLE IS PRIMARY
*                                      OPERATOR CONSOLE              */
         LH    @11,AVTOPCON(,RAVT)                              02S1067
         LTR   @11,@11                                          02S1067
         BNZ   @RF01067                                         02S1067
*     OCCONSOL=ON;                  /* SO INDICATE                   */
         OI    OCCONSOL(RPARM),B'10000000'                      02S1068
*   ELSE                                                        02S1069
*     OCDEST=AVTOPCIN;              /* IDENTIFY PRIMARY OPERATOR
*                                      CONSOLE                       */
         B     @RC01067                                         02S1069
@RF01067 LH    @11,AVTOPCIN(,RAVT)                              02S1069
         N     @11,@CF03167                                     02S1069
         STH   @11,OCDEST(,RPARM)                               02S1069
*   IF REG00=0 THEN                 /* IF LCB OK TO USE              */
@RC01067 LTR   REG00,REG00                                      02S1070
         BNZ   @RF01070                                         02S1070
*     DO;                                                       02S1071
*       OCTRMTBL=LCBTTCIN;          /* TTCIN OF RESOURCE             */
         LH    @11,LCBTTCIN(,RLCB)                              02S1072
         N     @11,@CF03167                                     02S1072
         STH   @11,OCTRMTBL(,RPARM)                             02S1072
*       REG10=LCBDCBPT;             /* TEMP DCB BASE                 */
         L     REG10,LCBDCBPT(,RLCB)                            02S1073
*       RFY                                                     02S1074
*         IHADCB BASED(REG10);                                  02S1074
*       RFY                                                     02S1075
*         IEDQDEB BASED(REG10);                                 02S1075
*       REG10=DCBDEBAD;             /* DEB ADDRESS                   */
         L     @11,DCBDEBAD+40(,REG10)                          02S1076
         LR    REG10,@11                                        02S1076
*       REG10=REG10-(ADDR(DEBTCBAD)-ADDR(IEDQDEB)-1);/* BACK UP TO
*                                      DEB PROPER            @YM08409*/
         SL    REG10,@CF01140                                   02S1077
*       OCBACKUP=DEBUCBAD(1)->UCBNAME;/* ADDRESS FOR MESSAGES   02S1078
*                                                            @YM08020*/
         MVI   OCBACKUP+3(RPARM),C' '                           02S1078
         MVC   OCBACKUP+4(4,RPARM),OCBACKUP+3(RPARM)            02S1078
         L     @11,DEBUCBAD-1(,REG10)                           02S1078
         MVC   OCBACKUP(3,RPARM),UCBNAME(@11)                   02S1078
*       RFY                                                     02S1079
*         REG10 UNRSTD;                                         02S1079
*     END;                                                      02S1080
*   ELSE                            /* CANT USE LCB USE TTE NAME     */
*     DO;                                                       02S1081
         B     @RC01070                                         02S1081
@RF01070 DS    0H                                               02S1082
*       RFY                                                     02S1082
*        (REG10,                                                02S1082
*         REG11) UNRSTD;                                        02S1082
*       REG00=TNTENLEN+3;           /* DEVELOPE TNT NAME             */
         L     @11,AVTRNMPT(,RAVT)                              02S1083
         SLR   @10,@10                                          02S1083
         IC    @10,TNTENLEN(,@11)                               02S1083
         LA    REG00,3                                          02S1083
         ALR   REG00,@10                                        02S1083
*       REG15=CURTTCIN-1;           /* SAME                          */
         LH    @07,CURTTCIN(,RCUR)                              02S1084
         LR    REG15,@07                                        02S1084
         BCTR  REG15,0                                          02S1084
*       REG15=REG15*REG00;          /* SAME                          */
         LR    @07,REG00                                        02S1085
         MR    @06,REG15                                        02S1085
         LR    REG15,@07                                        02S1085
*       REG15=REG15+ADDR(TNTFIRST); /* ADDRESS OF NAME IN TNT        */
         AL    @11,@CF03148                                     02S1086
         ALR   REG15,@11                                        02S1086
*       RFY                                                     02S1087
*         REG00 UNRSTD;                                         02S1087
*       OCBACKUP=TTENAME(1:TNTENLEN);/* INSERT TTE NAME              */
         MVI   OCBACKUP+1(RPARM),C' '                           02S1088
         MVC   OCBACKUP+2(6,RPARM),OCBACKUP+1(RPARM)            02S1088
         BCTR  @10,0                                            02S1088
         EX    @10,@SM03170                                     02S1088
*       OCTRMTBL=CURTTCIN;          /* DEVICE TNT INDEX              */
         LH    @11,CURTTCIN(,RCUR)                              02S1089
         STH   @11,OCTRMTBL(,RPARM)                             02S1089
*     END;                                                      02S1090
*   OCUNIT=PRFINTIC;                /* ONLY ONE UNIT IN CHAIN        */
@RC01070 MVC   OCUNIT(4,RPARM),@CF01989                         02S1091
*   RFY                                                         02S1092
*     IHADCB BASED;                                             02S1092
*   RFY                                                         02S1093
*     IEDQDEB BASED;                                            02S1093
*   RFY                                                         02S1094
*    (RLCB,                                                     02S1094
*     RPARM,                                                    02S1094
*     RRETURN,                                                  02S1094
*     REG15) UNRSTD;                /*                       @YM08988*/
*   RFY                                                         02S1095
*     IEDQOPCE BASED(ROPCE);                                    02S1095
*   END OPCEBLD;                                                02S1096
@EL00003 DS    0H                                               02S1096
@EF00003 DS    0H                                               02S1096
@ER00003 BR    @14                                              02S1096
*                                                               02S1097
*   /*****************************************************************/
*   /*                                                               */
*   /* TPOSTELM: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE THAT   */
*   /* TPOSTS ONE ELEMENT. UPON ENTRY RPARM = ADDR OF ELEMENT TO     */
*   /* TPOST. THE ELEMENT MUST HAVE BEEN INITIALIZED PRIOR TO COMMING*/
*   /* TO THIS ROUTINE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1097
*TPOSTELM:                                                      02S1097
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S1097
TPOSTELM DS    0H                                               02S1098
*   RFY                                                         02S1098
*    (RPARM,                                                    02S1098
*     RRETURN) RSTD;                                            02S1098
*   OPCAQWD1=RPARM;                 /* BEGINNING OF LIST             */
         ST    RPARM,OPCAQWD1(,ROPCAVT)                         02S1099
*   OPCAQWD2=RPARM;                 /* END OF LIST                   */
         ST    RPARM,OPCAQWD2(,ROPCAVT)                         02S1100
*   OPCAQREQ=TPOST;                 /* REQUEST TPOST                 */
         MVI   OPCAQREQ(ROPCAVT),X'0C'                          02S1101
*   OPCAQRQ2=ENDLIS2;               /* MARK END OF LIST              */
         MVI   OPCAQRQ2(ROPCAVT),X'80'                          02S1102
*   RPARM=ADDR(OPCAQCTL);           /* ADDRESS OF PARAMETER LIST     */
         LA    RPARM,OPCAQCTL(,ROPCAVT)                         02S1103
*   GEN(AQCTL);                     /* ISSUE SVC 102                 */
         AQCTL
*   RFY                                                         02S1105
*    (RPARM,                                                    02S1105
*     RRETURN) UNRSTD;                                          02S1105
*   END TPOSTELM;                                               02S1106
@EL00004 DS    0H                                               02S1106
@EF00004 DS    0H                                               02S1106
@ER00004 BR    @14                                              02S1106
*                                                               02S1107
*   /*****************************************************************/
*   /*                                                               */
*   /* GETLCB: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE THAT     */
*   /* LOCATES THE LCB USING THE TRM. RTRM MUST BE INITIALIZED BEFORE*/
*   /* INPUT. RLCB WILL BE INITIALIZED                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1107
*GETLCB:                                                        02S1107
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S1107
GETLCB   DS    0H                                               02S1108
*   RFY                                                         02S1108
*     IHADCB BASED(REG10);          /* TEMP BASE FOR DCB STRUCTURE   */
*   RFY                                                         02S1109
*    (RLCB,                                                     02S1109
*     REG10,                                                    02S1109
*     RRETURN) RSTD;                /*                       @YM08988*/
*   REG10=TRMDESTQ->QCBDCBAD;       /* TEMP BASE                     */
         SLR   @15,@15                                          02S1110
         ICM   @15,7,TRMDESTQ(RTRM)                             02S1110
         L     REG10,QCBDCBAD-1(,@15)                           02S1110
         LA    REG10,0(,REG10)                                  02S1110
*   RLCB=DCBIOBAD+DCBEIOBX-LCBPRFSZ;/* LCB BASE                      */
         LA    @15,20                                           02S1111
         ALR   @15,REG10                                        02S1111
         SLR   RLCB,RLCB                                        02S1111
         IC    RLCB,DCBEIOBX(,@15)                              02S1111
         AL    RLCB,DCBIOBAD(,@15)                              02S1111
         SL    RLCB,@CF00627                                    02S1111
*   RFY                                                         02S1112
*     IHADCB BASED;                                             02S1112
*   RFY                                                         02S1113
*    (RLCB,                                                     02S1113
*     REG10,                                                    02S1113
*     RRETURN) UNRSTD;              /*                       @YM08988*/
*   END GETLCB;                                                 02S1114
@EL00005 DS    0H                                               02S1114
@EF00005 DS    0H                                               02S1114
@ER00005 BR    @14                                              02S1114
*                                                               02S1115
*   /*****************************************************************/
*   /*                                                               */
*   /* GETLCBNA: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE THAT   */
*   /* LOCATES THE LCB USING THE TTCIN TO NETWORK ADDRESS AND NETWORK*/
*   /* ADDRESS TO LCB ADDRESS ROUTINES                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1115
*GETLCBNA:                                                      02S1115
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S1115
GETLCBNA DS    0H                                               02S1116
*   RFY                                                         02S1116
*    (RLCB,                                                     02S1116
*     REG15,                                                    02S1116
*     REG10,                                                    02S1116
*     RRETURN,                                                  02S1116
*     RPARM) RSTD;                                              02S1116
*   REG10=RRETURN;                  /* SAVE RETURN ADDRESS           */
         LR    REG10,RRETURN                                    02S1117
*   RPARM=CURTTCIN;                 /* TTCIN FOR ROUTINE             */
         LH    RPARM,CURTTCIN(,RCUR)                            02S1118
*   CALL IEDIAP04;                                              02S1119
         L     @11,AVTSAVTP(,RAVT)                              02S1119
         L     @15,SAVTTNTX(,@11)                               02S1119
         BALR  @14,@15                                          02S1119
*   RPARM=REG15;                    /* NETWORK ADDRESS FOR ROUTINE   */
         LR    RPARM,REG15                                      02S1120
*   CALL IEDIAP06;                                              02S1121
         L     @11,AVTSAVTP(,RAVT)                              02S1121
         L     @15,SAVTLCBS(,@11)                               02S1121
         BALR  @14,@15                                          02S1121
*   RLCB=REG15;                     /* LCB BASE                      */
         LR    RLCB,REG15                                       02S1122
*   RRETURN=REG10;                  /* RESTORE RETURN ADDRESS        */
         LR    RRETURN,REG10                                    02S1123
*   RFY                                                         02S1124
*    (RLCB,                                                     02S1124
*     REG15,                                                    02S1124
*     REG10,                                                    02S1124
*     RRETURN,                                                  02S1124
*     RPARM) UNRSTD;                                            02S1124
*   END GETLCBNA;                                               02S1125
@EL00006 DS    0H                                               02S1125
@EF00006 DS    0H                                               02S1125
@ER00006 BR    @14                                              02S1125
*   END IGCC110D                                                01S1126
*                                                               01S1126
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TCURD   )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (TDEBD   )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TNCPID  )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRSPD   )                                       */
*/*%INCLUDE SYSLIB  (TSNSD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (INITIAL )                                       */
*/*%INCLUDE SYSUT5  (RSPSRCH )                                       */
*/*%INCLUDE SYSUT5  (DISPO   )                                       */
*/*%INCLUDE SYSUT5  (ANSCHANI)                                       */
*/*%INCLUDE SYSUT5  (SETREQST)                                       */
*/*%INCLUDE SYSUT5  (INVOKDMP)                                       */
*/*%INCLUDE SYSUT5  (LOWIN   )                                       */
*/*%INCLUDE SYSUT5  (SCHDDACT)                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (SEARCH  )                                       */
*/*%INCLUDE SYSUT5  (CHAIN   )                                       */
*/*%INCLUDE SYSUT5  (LOOKCOHT)                                       */
*/*%INCLUDE SYSUT5  (RESPONSE)                                       */
*/*%INCLUDE SYSUT5  (FID0RESP)                                       */
*/*%INCLUDE SYSUT5  (FID1RESP)                                       */
*/*%INCLUDE SYSUT5  (OPCEBLD )                                       */
*/*%INCLUDE SYSUT5  (TPOSTELM)                                       */
*/*%INCLUDE SYSUT5  (GETLCB  )                                       */
*/*%INCLUDE SYSUT5  (GETLCBNA)                                       */
*                                                               01S1126
*       ;                                                       01S1126
@DATA    DS    0H
@SM03170 MVC   OCBACKUP(0,RPARM),TTENAME(REG15)
         DS    0F
         DS    0F
@CF00065 DC    F'2'
@CF00256 DC    F'4'
@CF00045 DC    F'8'
@CF03101 DC    F'10'
@CF02443 DC    F'14'
@CF00175 DC    F'16'
@CF01140 DC    F'36'
@CF03148 DC    F'82'
@CF03163 DC    F'-8'
@CF03169 DC    F'-5'
@CF01989 DC    XL4'08000002'
@CF03167 DC    XL4'0000FFFF'
@CF00452 DC    XL4'1E'
@CF00627 DC    XL4'20'
         DS    0D
@CB01989 DC    X'08000002'
@CB02439 DC    X'0B8000'
DISPDEST DC    CL2'00'
DMPDEST  DC    CL2'MH'
DACDEST  DC    CL2'FC'
CU2DEST  DC    CL2'C1'
ACTDEST  DC    CL2'FA'
INOP     DS    CL3
         ORG   INOP
@NM00229 DC    X'01'
@NM00230 DC    X'02'
@NM00231 DC    X'81'
         ORG   INOP+3
IGCC110D CSECT
*                                   /*
ENDC1     EQU    *
SPACE     EQU    2048-(ENDC1-IGCC110D) SPACE FOR PATCH AREA
PATCH     DC     (SPACE)X'00'          PATCH AREA
IGCC110D CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RCUR     EQU   @03
LCBXPTR  EQU   @05
ROPCE    EQU   @03
ROPCAVT  EQU   @02
RTRM     EQU   @08
RAVT     EQU   @04
RLCB     EQU   @09
RPRF     EQU   @06
REG00    EQU   @00
RPARM    EQU   @01
RCHAIN   EQU   @05
RRUDATA  EQU   @05
RELEM    EQU   @07
REG09    EQU   @09
REG10    EQU   @10
REG11    EQU   @11
RBASE    EQU   @12
RSAVE    EQU   @13
RRETURN  EQU   @14
REG15    EQU   @15
REG05    EQU   @05
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTOPCON EQU   IEDQAVTD+1038
AVTAVFCT EQU   IEDQAVTD+1040
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTDDFT  EQU   IEDQAVTD+1064
AVTOPCIN EQU   IEDQAVTD+1074
AVTBIT4  EQU   IEDQAVTD+1136
@NM00086 EQU   IEDQAVTD+1232
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTCLUP EQU   IEDNSVTD+72
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTTNTX EQU   IEDNSVTD+252
SAVTLCBS EQU   IEDNSVTD+260
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUFNFLG EQU   IEDBDU+2
BDUSTHDR EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDCUREQ EQU   0
CURQCB   EQU   IEDCUREQ+1
CURPRI   EQU   IEDCUREQ+4
CURELEM  EQU   IEDCUREQ+5
CURTOTIN EQU   IEDCUREQ+12
CURSWCH  EQU   CURTOTIN+1
CURFLG2  EQU   IEDCUREQ+14
CURF0FIN EQU   CURFLG2
CURF1SEQ EQU   CURFLG2
CURF1ID  EQU   CURFLG2
CURENDCH EQU   CURFLG2
CURFLG3  EQU   IEDCUREQ+15
CURNCURE EQU   CURFLG3
CURPIUCT EQU   IEDCUREQ+16
CURTTCIN EQU   IEDCUREQ+20
CURTRM   EQU   IEDCUREQ+40
IHADCB   EQU   0
DCBPTR   EQU   0
IHADCS1A EQU   0
DCBBCKUP EQU   IHADCS1A+8
IHADCS2K EQU   0
DCBDUMPD EQU   IHADCS2K
DCBTRSTA EQU   IHADCS2K+5
DCBDSORG EQU   IHADCS2K+6
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS2K+8
DCBRNCKD EQU   IHADCS2K+12
DCBEXLST EQU   IHADCS2K+16
DCBEIOBX EQU   DCBEXLST
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS43 EQU   0
DCBSCTAB EQU   IHADCS43
IEDQDEB  EQU   0
DEBPRF   EQU   IEDQDEB
DEBAPVT  EQU   DEBPRF
DEBTCBAD EQU   IEDQDEB+37
DEBNMEXT EQU   IEDQDEB+52
DEBUCBS  EQU   IEDQDEB+68
IEDQDPTR EQU   0
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBDMPRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBINTRQ EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBLOSDT EQU   LCBSENS0
LCBNOTIN EQU   LCBLOSDT
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBUSUC  EQU   LCBCSWUS
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBSIOC1 EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBTTCIN EQU   IEDQLCB+90
LCBMSGFM EQU   IEDQLCB+92
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLPTR EQU   0
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDNCP   EQU   0
NCPFLAG1 EQU   IEDNCP+1
NCPIAUTO EQU   NCPFLAG1
NCPDAUTO EQU   NCPFLAG1
NCPIPLD  EQU   NCPFLAG1
IEDQOPCE EQU   0
OCLINK   EQU   IEDQOPCE
OCELEM   EQU   IEDQOPCE+4
OCELMPRI EQU   OCELEM
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCCONSOL EQU   OCFLAG
OCATTACH EQU   OCFLAG
@NM00163 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00163
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCSEQ    EQU   OCTRUNIT+2
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
OCBFREQ  EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCSAVE  EQU   IEDQOPCD+56
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCWAITN EQU   IEDQOPCD+228
OPCHORT  EQU   IEDQOPCD+256
OPCSCNC  EQU   IEDQOPCD+264
OPCFMDFC EQU   IEDQOPCD+268
OPCNEXT  EQU   IEDQOPCD+272
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
@NM00193 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00193
PRFSRCE  EQU   PRFSVFFO
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFISIZE EQU   PRFSCAN+1
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
PRFDEST  EQU   IEDQPRF+40
IEDQPPTR EQU   0
IEDPF1   EQU   0
PRF1RH   EQU   IEDPF1
PRF1FLG1 EQU   IEDPF1+3
PRF1FIDI EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00203 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00203+1
QCBTSOF1 EQU   @NM00203+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQQPTR EQU   0
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDSNSD  EQU   0
SNSSYSTM EQU   IEDSNSD
SNSUSER  EQU   IEDSNSD+2
SNSPTR   EQU   0
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
TNTENLEN EQU   IEDQTNTD+40
IEDQTDCE EQU   IEDQTNTD+46
IEDQNPTR EQU   0
TNTFIRST EQU   0
IEDTNTA  EQU   0
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHTYPE  EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHDR1   EQU   TRHBYTE1
TRHBYTE2 EQU   IEDRH+2
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
UCB      EQU   0
UCBPTR   EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00228 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
OPCECLR  EQU   0
TTENAME  EQU   0
IEDQTNT  EQU   0
ALLOCBUF EQU   0
FREEBUFF EQU   0
COHORTLK EQU   0
IEDQTL   EQU   0
IEDIAP04 EQU   0
IEDIAP06 EQU   0
SENSDAT  EQU   0
CATAGORY EQU   SENSDAT
MODIFIER EQU   SENSDAT+1
USERDATA EQU   SENSDAT+2
RUDATA   EQU   0
RUDATA3  EQU   RUDATA
RUDATA2  EQU   RUDATA3
CURCLEAR EQU   0
DEBSUBR  EQU   0
QCBLDCB  EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   0
UCBBGN   EQU   0
UCBDCPTR EQU   0
DEBUCB   EQU   DEBUCBS
DEBDVMOD EQU   DEBUCB
DEBUCBAD EQU   DEBUCB+1
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00145 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQREQ EQU   OPCAQWD1
OPCAQWD2 EQU   OPCAQWD+4
OPCAQRQ2 EQU   OPCAQWD2
OPCAQWD3 EQU   OPCAQWD+8
PRFSHDR  EQU   IEDQPRF+42
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMINOP  EQU   TRMNCP1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMSYGEN EQU   TRMNCP
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00227 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
BDUTEXT  EQU   BDUEND
OCCIB    EQU   OCREQVAL
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00227
UCBSKPFG EQU   @NM00227
UCBRIPND EQU   @NM00227
UCBRTIAC EQU   @NM00227
UCBRSV79 EQU   @NM00227
UCBRSV78 EQU   @NM00227
UCBRSV77 EQU   @NM00227
UCBOLTEP EQU   @NM00227
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00226 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00222 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00221 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00220 EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQFST EQU   OPCAQWD1+1
OCICINAC EQU   OCICSW
@NM00168 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00167 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00153 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00152 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00151 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00150 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00149 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00148 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00147 EQU   @NM00145+4
LCBNCPPT EQU   @NM00145+1
@NM00146 EQU   @NM00145
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00144 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00143 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00142 EQU   LCBCSWU1
@NM00141 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00140 EQU   LCBRSPIN
@NM00232 EQU   RUDATA+5
RUNA     EQU   RUDATA+3
RUDATA1  EQU   RUDATA2
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00228
UCBHALI  EQU   @NM00228
UCBRSV09 EQU   @NM00228
UCBRSV08 EQU   @NM00228
UCBRSV07 EQU   @NM00228
UCBRSV06 EQU   @NM00228
UCBRSV05 EQU   @NM00228
UCBRSV04 EQU   @NM00228
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00225 EQU   UCB
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00224 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   IEDTH+4
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00223 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00219 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00218 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00217 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
@NM00216 EQU   TRHBYTE2
@NM00215 EQU   TRHBYTE2
@NM00214 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00213 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00212 EQU   TRHBYTE1
@NM00211 EQU   TRHBYTE1
@NM00210 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00209 EQU   TRHBYTE1
@NM00208 EQU   TRHBYTE0
TNTTRMAD EQU   IEDTNTA
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTSRCHX EQU   IEDQTNTD+38
SNSUSR2  EQU   SNSUSER+1
SNSUSR1  EQU   SNSUSER
SNSMIN   EQU   SNSSYSTM+1
SNSMAJ   EQU   SNSSYSTM
QCBTTCIN EQU   QCBPLCBA+1
@NM00207 EQU   QCBPLCBA
@NM00206 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00205 EQU   QCBFHDTZ
@NM00204 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00203
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00202 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00201 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00200 EQU   QCBELCHN+2
@NM00199 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00198 EQU   IEDPF2+1
@NM00197 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00196 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00195 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
@NM00194 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00193+3
PRFSIZE  EQU   PRFSVFFO+2
PRFLCB   EQU   IEDQPRF+13
PRFPIUO  EQU   PRFPLQCB
PRFTI0   EQU   PRFTIC+1
@NM00192 EQU   PRFTICC
@NM00191 EQU   PRFTICC
@NM00190 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00189 EQU   PRFTICC
@NM00188 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00187 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
OPCBOTTM EQU   IEDQOPCD+1188
OPCDSRWT EQU   IEDQOPCD+1184
@NM00186 EQU   IEDQOPCD+1100
@NM00185 EQU   IEDQOPCD+948
@NM00184 EQU   IEDQOPCD+940
@NM00183 EQU   IEDQOPCD+380
@NM00182 EQU   OPCPWCOB+9
@NM00181 EQU   OPCPWCOB+8
@NM00180 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00179 EQU   OPCSPEC
@NM00178 EQU   OPCSPEC
@NM00177 EQU   OPCSPEC
@NM00176 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00175 EQU   OPCLDNME+5
@NM00174 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00173 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
@NM00172 EQU   OCLDNME+4
@NM00171 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00170 EQU   OCREQFLG
@NM00169 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00166 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCRESNUM EQU   OCPARM
@NM00165 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
OCDACTIP EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00164 EQU   @NM00163+2
OCCONID  EQU   OCDEST
OCRLN    EQU   IEDQOPCE+15
OCRESP   EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
@NM00162 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00161 EQU   OCRUDEST+1
@NM00160 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
NCPLTRAC EQU   IEDNCP+26
NCPCKPT  EQU   IEDNCP+22
NCPDPDCB EQU   IEDNCP+18
NCPTXID  EQU   IEDNCP+10
NCPBKUPN EQU   IEDNCP+2
@NM00159 EQU   NCPFLAG1
NCPTRACE EQU   NCPFLAG1
NCPBKUP  EQU   NCPFLAG1
NCPREST  EQU   NCPFLAG1
NCPBGUP  EQU   NCPFLAG1
NCPLEN   EQU   IEDNCP
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00158 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00157 EQU   LCBXFLAG
@NM00156 EQU   LCBXFLAG
@NM00155 EQU   LCBXFLAG
@NM00154 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00139 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00138 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00137 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBSCBA  EQU   IEDQLCB+93
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
@NM00136 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
LCBLOGDV EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBQB EQU   LCBERB+1
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00135 EQU   LCBTSTSW
@NM00134 EQU   LCBTSTSW
@NM00133 EQU   LCBTSTSW
@NM00132 EQU   LCBTSTSW
@NM00131 EQU   LCBTSTSW
@NM00130 EQU   LCBTSTSW
@NM00129 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRCLLN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00128 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00127 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
@NM00126 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00125 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00124 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00123 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00122 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00121 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00120 EQU   LCBSTAT4
@NM00119 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00118 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBPRI   EQU   LCBRCB+4
LCBQCBA  EQU   LCBRCB+1
LCBKEY   EQU   LCBRCB
DEBAPPAD EQU   IEDQDEB+65
DEBEXSCL EQU   IEDQDEB+64
DEBDCBAD EQU   IEDQDEB+61
DEBPROTG EQU   IEDQDEB+60
DEBECBAD EQU   IEDQDEB+57
DEBPRIOR EQU   IEDQDEB+56
DEBUSRPG EQU   IEDQDEB+53
DEBSYSPG EQU   IEDQDEB+49
DEBOPATB EQU   IEDQDEB+48
DEBIRBAD EQU   IEDQDEB+45
DEBOFLGS EQU   IEDQDEB+44
DEBDEBAD EQU   IEDQDEB+41
DEBAMLNG EQU   IEDQDEB+40
DEBNMSUB EQU   IEDQDEB+36
@NM00117 EQU   DEBPRF+33
DEBLNGTH EQU   DEBPRF+32
DEBDCBMK EQU   DEBPRF+28
DEBDSCBA EQU   DEBPRF+21
DEBWKARA EQU   DEBPRF+20
DEBXCEA  EQU   DEBAPVT+16
DEBCEA   EQU   DEBAPVT+12
DEBPCIA  EQU   DEBAPVT+8
DEBSIOA  EQU   DEBAPVT+4
DEBEOEA  EQU   DEBAPVT
DCBBUFSI EQU   IHADCS43+6
DCBUNTCT EQU   IHADCS43+5
DCBILCT  EQU   IHADCS43+4
DCBSCTAD EQU   DCBSCTAB+1
@NM00116 EQU   DCBSCTAB
DCBPUTA  EQU   DCBGETA
@NM00115 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00114 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00113 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRNCKA EQU   DCBRNCKD+1
@NM00112 EQU   DCBRNCKD
DCBDSGTR EQU   DCBDSRG2
@NM00111 EQU   DCBDSRG2
DCBDSRG1 EQU   DCBDSORG
DCBCHNGL EQU   DCBTRSTA
DCBNIDLE EQU   DCBTRSTA
DCBBAKUP EQU   DCBTRSTA
DCBIPLED EQU   DCBTRSTA
DCBRSTRT EQU   DCBTRSTA
DCBINITL EQU   DCBTRSTA
DCBAUTOD EQU   DCBTRSTA
DCBAUTOI EQU   DCBTRSTA
@NM00110 EQU   IHADCS2K+4
DCBDUMPA EQU   DCBDUMPD+1
DCBUNITN EQU   DCBDUMPD
DCBBCKUA EQU   DCBBCKUP+1
@NM00109 EQU   DCBBCKUP
DCBIPLTX EQU   IHADCS1A
@NM00108 EQU   IHADCB
CUROPCE  EQU   IEDCUREQ+36
CURPIUPC EQU   IEDCUREQ+32
CURTOTBF EQU   IEDCUREQ+28
CURNEWBF EQU   IEDCUREQ+24
CURNXTRC EQU   IEDCUREQ+22
CURFAILT EQU   IEDCUREQ+18
@NM00107 EQU   CURFLG3
CURDIAL  EQU   CURFLG3
CURFIRST EQU   CURFLG3
CURTOTEP EQU   CURFLG3
CUREPOST EQU   CURFLG3
CURTERM  EQU   CURFLG2
CURATTCH EQU   CURFLG2
@NM00106 EQU   CURFLG2
CURFLG1  EQU   CURTOTIN
CURLINK  EQU   IEDCUREQ+8
CURKEY   EQU   IEDCUREQ
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUMODIF EQU   IEDBDU+1
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTRNMP EQU   IEDNSVTD+256
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00091 EQU   IEDQAVTD+1242
@NM00090 EQU   IEDQAVTD+1241
@NM00089 EQU   IEDQAVTD+1240
@NM00088 EQU   IEDQAVTD+1237
@NM00087 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00085 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00084 EQU   IEDQAVTD+1140
@NM00083 EQU   IEDQAVTD+1137
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00074 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00073 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00072 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00069 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00068 EQU   IEDQAVTD+950
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00053 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00052 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00051 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00050 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00049 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00048 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00040 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00039 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00038 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00023 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00021 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00015 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00752 EQU   @RC00750
@RF00772 EQU   @RC00750
@RC00754 EQU   @RC00752
@RF00762 EQU   @RC00752
@ENDDATA EQU   *
         END   IGCC110D,(C'PLS2317',0701,78089)
