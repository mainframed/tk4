         TITLE 'IDA019ST                                               *
                        '
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*            /*
         EJECT
R0       EQU   0                   CONVERT INPUT
R1       EQU   1
R2       EQU   2                   PLH REG (RPLH)
R3       EQU   3                   AMB REG (RAMB)
R4       EQU   4                   RPL REG (RRPL)
R5       EQU   5                   RACB
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                  2ND BASE REG
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  IDATRACE DSECT REG (WORK AREA)
R14      EQU   14
R15      EQU   15
RPLH     EQU   R2
RAMB     EQU   R3
RAMBL    EQU   R4
RRPL     EQU   R4
RACB     EQU   R5
         USING PHASE1,R15
         EJECT
**********************************************************************
* PHASE1 LOCATES THE WORK AREA TO BE USED FOR THE TRACE AND DOES     *
* INITIAL PROMPTS.                                                   *
**********************************************************************
IDA019ST CSECT
PHASE1   B     PROLOG                  GO TO PROLOG
         DS    0F
         DC    C'IDA019ST'
         DC    C'&SYSDATE'
PROLOG   ST    R12,8(R13)              TEMP SAVE REG 12
         USING IDATRACE,R15
         USING PHASE1,R12,R11
         LR    R12,R15                 SET BASE REG
         L     R15,AMBTRACE(RAMB)
         ST    R12,0(R15)
         TM    FLAG1,STOP              WAS TRACE ENDED?
         BZ    SAVE1                   NO, FIND A SAVE AREA
QUICKOUT L     R12,8(R13)
         LA    R14,2(R14)              POINT R14 PAST HOOK NUMBER
         BR    R14
SAVE1    TS    SAVE1X                  CAN WE SAVE IN AREA A?
         BNZ   SAVE2                   BRANCH IF SAVE AREA IN USE
         STM   R0,R14,SAVEIN1          SAVE IN 1ST SAVE AREA
         LA    R5,SAVE1X
         B     PHASE1B
SAVE2    TS    SAVE2X                  CAN I USE 2ND SAVE AREA?
         BNZ   SAVE3                   NO, TRY 3RD
         STM   R0,R14,SAVEIN2
         LA    R6,SAVE2X
         B     PHASE1A
SAVE3    TS    SAVE3X                  CAN I USE 3RD SAVE AREA?
         BNZ   TEMP4                   NO AVALIABLE SAVE AREA
         STM   R0,R14,SAVEIN3
         LA    R6,SAVE3X
         B     PHASE1A
TEMP4    TS    SAVE4X                  TEMP SAVE IN SAVE 4?
         BNZ   TEMP5
         STM   R13,R1,SAVE4X
         LA    R14,SAVE4X
         B     GETMAIN
TEMP5    TS    SAVE5X                  TEMP SAVE IN SAVE 5?
         BNZ   TEMP6
         STM   R13,R1,SAVE5X
         LA    R14,SAVE5X
         B     GETMAIN
TEMP6    OI    FLAG0,NOSAVE            NO SAVE ERROR MAY OCCURE
         TS    SAVE6X
         BNZ   QUICKOUT                REAL PROBLEMS, GET OUT
         NI    FLAG0,X'FF'-NOSAVE      SAVE6 WAS OK, TURN OFF ERROR
         STM   R13,R1,SAVE6X
         LA    R14,SAVE6X
GETMAIN  GETMAIN RC,LV=SAVE2X-SAVE1X
         LTR   R15,R15                 WORK OK?
         L     R15,120(RAMB)           RESET THE IDATRACE REG
         BNZ   GETERROR
         STM   R2,R11,SAVEIN1-SAVE1X+8(R1) SAVE INPUT REGSIN NEW SAVE-
         MVC   SAVEIN1-SAVE1X(8,R1),12(R14)  SAVE AREA.
         MVC   SAVEIN1-SAVE1X+52(8,R1),0(R14)
         MVC   SAVEIN1-SAVE1X+48(4,R1),8(R13)  OLD REG 12
         MVI   0(R14),X'00'            FREE UP THE TEMP SAVE AREA
         LR    R6,R1
         MVI   0(R6),X'F0'
         B     PHASE1A
GETERROR OI    FLAG0,NOCORE            NEXT EXIT TELLS ABOUT CORE.
         LM    R13,R1,0(R14)           RESTORE CALLERS REGS
         B     QUICKOUT                RETURN WITH PROBLEMS
PHASE1A  LA    R8,SAVE1X+1
         LA    R7,SAVEIN1-SAVE1X-1
         LR    R9,R7                   SET MVCL LENGTH DATA
         LR    R5,R6                   REG 6 IS ALTERED IN MVCL
         LA    R6,1(R6)                GET MOVE BACK TO START
         MVCL  R6,R8                   SWAP SAVE1 WITH CURRENT SAVE
         XC    SAVEIN1(60),0(R6)       AFTER MVCL, REG6 POINTS TO -
         XC    0(60,R6),SAVEIN1        THE INPUT SAVE AREA.  SWAP IT -
         XC    SAVEIN1(60),0(R6)       WITH THE MAIN SAVE AREA.
PHASE1B  XC    IBUFFC(HOOKCALL-IBUFFC),IBUFFC  CLEAR OUT FLAGS
         ST    R5,OLDSAVE              SAVE SWAPED SAVE ADDRESS
         MVC   SAVEIN1+48(4),8(R13)    SAVE THE OLD REG 12
         DROP  R15
         USING IDATRACE,R13
         L     R13,120(RAMB)           LOAD SAVE REG
         LA    R11,2048(R12)
         LA    R11,2048(R11)
**********************************************************************
* PHASE1C CHECKS TO SEE IF THIS CALL WAS FROM VSAM CLOSE (IDA0200T). *
* THIS IS DETERMINED BY CHECKING FOR A X'00' HOOK NUMBER.  IF SO,    *
* RESET2 IS CALLED TO CLOSE DOWN THE TRACE DCB.                      *
**********************************************************************
PHASE1C  L     R10,R14IN               GET CALLERS REG 14 VALUE
         CLI   1(R10),X'00'            IS HOOK A ZERO
         BE    RESET2                  YES, CLOSE IS THE CALLER.
         L     R7,CVTPTR(R0)           GET CVT ADDRESS
         TM    FLAG1,STOP              HAVE WE BEEN TERMINATED?
         BO    EXIT1                   YES, GET OUT
         TM    264(R7),X'30'           ANY RESETS?
         BZ    PARMPMT
         TM    264(R7),X'20'           TYPE 2 RESET?
         BO    RESET2
RESET1   EQU   *                       SEE IF WE ARE RUNNING UNDER AN-
         C     R13,OLDSAVE             AN IRB (INTERUPTED A TRACE).
         BNE   EXIT1                   YES, LET OTHER REQUEST DO RESET
         LA    R8,3                    SET RESET CODE
         L     R15,IDAO19SU
         BALR  R14,R15
         TM    FLAG1,STOP              DID AN ERROR OCCUR?
         BO    EXIT1                   YES, GETOUT
         B     PARMPMT                 RETURNED, TYPE 1 RESET DONE
RESET2   TS    FLAG1                   TURN ON THE STOP FLAG
         BNZ   EXIT1                   ALREADY DONE
         TM    TRACE+48,X'10'          IS DCB OPEN?
         BZ    EXIT1                   NO, RETURN
         B     RESET1
         EJECT
***********************************************************************
* EXIT1 CODE FIRST DETERMINES IF RUNNING PRINT WAS INTERRUPTED BY AN  *
* ASYNCHRONOUS CALL AND PUTS OUT MSG.  EXIT2 THEN TURNS OFF REPEATING *
* FLAGS IF REQUESTED.  EXIT3 DETERMINES IF ABEND IS TO BE CALLED      *
* BECAUSE OF A GETMAIN ERROR.  EXIT4 UPDATES COUNTS.  EXIT5 ISSUES    *
* FREEMAINS IF NEEDED.  EXIT6 SWAPS SAVE AREAS BACK SO SAVE1X IS      *
* AGAIN THE CURRENT SAVE AREA.  EXIT7 RETURNS TO THE CALLER.          *
***********************************************************************
EXIT1    TM    STATUS,GOOD         WAS THIS A GOOD ENTRY?
         BZ    EXIT3
         C     R13,OLDSAVE         IS CURRENT SAVE THE LAST SAVE?
         BE    EXIT2               LAST EXIT, FORGET INTERUPT MSG.
         MVI   STATUS,X'00'        STOP OTHERS FROM EXITING GOOD
         L     R9,OLDSAVE          GET DISPLACEMENT TO OLD SAVE
         L     R0,IRBNUM-SAVE1X(R9) GET INTERUPTED TRACE NUMBER
         BAL   R14,CONVERT
         MVC   OUTLINE+1,STARS
         MVC   OUTLINE+15(40),CONTMSG
         MVC   OUTLINE+39(4),UNPACK+4
         LA    R2,3
         BAL   R14,PUT             TELL USER THAT THE IRB PRINT IS DONE
EXIT2    TM    FLAG0,NOCORE        DID A GETMAIN FAIL?
         BZ    EXIT3
         NI    FLAG0,X'FF'-NOCORE
         LA    R1,X'F3'            GETMAIN ERROR CODE
         LA    R8,5                ABEND FUNCTION CODE
         L     R15,IDAO19SU
         BALR  R14,R15
EXIT3    L     R7,COUNT2
         LA    R7,1(R7)            TOTAL TIMES IDATRACE HAS BEEN CALLED
         ST    R7,COUNT2
         TM    STATUS2,UNSWAP      WAS THE PARM LIST SWAPED?
         BZ    EXIT4               NO, CONTINUE
         NI    STATUS2,X'FF'-UNSWAP WILL PUT IT BACK WAY IT WAS FOUND
         TM    FLAG0,SWAPED        IS IT ALREADY IN THIS STATE?
         BO    EXIT4               YES, DON'T WORRY ABOUT IT
         BAL   R14,SWAP            RE-SWAP PARM LIST
EXIT4    TM    FLAG5,NOTE1         SINGLE PRINTS?
         BZ    EXIT5
         TM    STATUS,GOOD         LIMIT ONLY ON GOOD CALLS
         BZ    EXIT5
         NI    FLAG2,X'EE'         TURN OFF ACB AND AMBL
         NI    FLAG3,X'FE'         TURN OFF DEB
         NI    FLAG4,X'C3'         AND THE OTHERS
         TM    STATUS,PATHDONE+BASEDONE+UPGDONE
         BZ    EXIT5
         NI    AIXIN,X'EE'         SAME FOR AIX PARMS
         NI    AIXIN+2,X'C3'
EXIT5    L     R6,OLDSAVE          GET THE OLD SAVE AREA ADDRESS
         LR    R5,R6               SAVE THE SAVE AREA POINTER FOR MVCL
         CR    R6,R13              DO WE NEED TO SWAP SAVE AREAS?
         BE    EXIT7
         LA    R7,SAVEIN1-SAVE1X
         LR    R9,R7               SET MVCL LENGTH DATA
         LR    R8,R13
         MVCL  R8,R6               MOVE DATA BACK TO MAIN SAVE AREA
         XC    SAVEIN1(60),0(R6)
         XC    0(60,R6),SAVEIN1
         XC    SAVEIN1(60),0(R6)
EXIT6    CLI   0(R5),X'F0'          DOES THE SAVE AREA NEED TO BE FREED
         BNE   EXIT7                NO, CONTINUE WITH THE EXIT
         LM    R1,R14,4(R5)
         LR    R12,R1               SAVE REG1
         LA    R0,(SAVE2X-SAVE1X)   SET THE FREEMAIN LENGTH
         LA    1,0(R5)              SET THE AREA TO BE FREE ADDRESS
         SVC   10
         LR    R1,R12               RESTORE REG 1
         L     R12,8(R13)           RESTORE REG 12
         LA    R14,2(R14)           GET PAST THE HOOK NUMBER
         SR    R15,R15
         BR    R14
EXIT7    LR    R15,R5               POINT TO MY SAVED REGS
         LM    R0,R14,SAVEIN1-SAVE1X(R15)
         MVI   0(R15),X'00'         FREE UP THE SAVE AREA
         LA    R14,2(R14)          GET PAST THE HOOK NUMBER
         SR    R15,R15
         BR    R14                 RETURN TO CALLER
         EJECT
*******************************************************************
* DETERMINE IF PROMPTS (PARAMETER) HAVE BEEN DONE.  IF NOT, CALL  *
* IDA019SU TO GET THEM BEFORE CONTINUING.  IF SO OR AFTER GETTING *
* THEM, REGFIND WILL LOCATE THE CONTROL BLOCKS AND LOAD REGS      *
*******************************************************************
PARMPMT  TM    FLAG1,PARMS         HAVE I GOTTEN THE PARM LIST?
         BO    REGFIND             YES, CONTINUE
         C     R13,OLDSAVE         IS THIS AN IRB TYPE CALL?
         BNE   EXIT1               YES, RETURN, CAN ONLY PROMPT NON-IRB
         LA    R8,1                FUNCTION CODE FOR PROMPT
         L     R15,IDAO19SU
         BALR  R14,R15
         TM    FLAG1,STOP          WAS END REQUESTED OR AN ERROR?
         BO    EXIT1               YES, GETOUT
SWAPCK   TM    FLAG0,SWAPED        WAS THE PARM LIST SWAPED?
         BZ    REGFIND
         OI    STATUS2,UNSWAP
         BAL   R14,SWAP            GO PUT IT BACK THE NORMAL WAY
REGFIND  L     RAMB,AMBIN          GET INPUT REG 3
         CLI   AMBID(RAMB),X'40'   DID I GET AN AMB?
         BNE   NOCB                NO, GOT PROBLEMS
         TM    AMBFLG1(RAMB),X'40' IS AMBTYPE ON(DATA AMB)?
         BZ    DATAAMB
         ST    R3,IAMB             SAVE INDEX AMB ADDRESS
         L     RAMB,AMBPAMBL(,RAMB) GET THE PRIMARY AMBL ADDRESS
         L     RAMB,AMBLDTA(,RAMB) GET DATA AMB ADDRESS.
         B     REGLOAD             GO FIND THE REST OF THE CB'S
DATAAMB  ICM   R6,15,AMBPIXP(RAMB) GET INDEX AMB ADDRESS
         BNZ   DATAAMB1            NO INDEX AMB
         NI    FLAG2,X'FF'-INDEXCB ESDS, NO INDEX TRACE CAN BE DONE
DATAAMB1 ST    R6,IAMB
REGLOAD  ST    R3,DAMB             SAVE DATA AMB ADDRESS
         L     RPLH,PLHIN          GET PLH ADDRESS FOR INPUT REG2
         ST    RPLH,PLH            CURRENT PLH POINTER
         ICM   RRPL,15,PLHCRPL(RPLH)  GET RPL ADDRESS
         BNZ   REG01
         L     RRPL,RPLIN          PLH DIDN'T HAVE RPL, TRY OLD REG1
REG01    CLI   0(RRPL),X'00'
         BNE   NOCB                TROUBLES, ERROR EXIT
         ICM   RACB,15,RPLDACB(RRPL)  GET RPL'S ACB ADDRESS
         BZ    NOCB                NO ACB ADDRESS, TROUBLES
         CLI   ACBID(RACB),X'A0'
         BNE   NOCB                NO ACB ID BYTE, TROUBLES
         MVC   AMBL,ACBAMBL(RACB)
         ST    RRPL,RPL            SAVE RPL ADDRESS FOR LATER LOAD
         B     CONDITON
NOCB     LA    R1,X'F4'            ERROR CODE = 4
         LA    R8,5                FUNCTION CODE = 5 (ERROR)
         L     R15,IDAO19SU
         BALR  R14,R15             ISSUE IDA039A (ERROR)
         B     EXIT1
         EJECT
**********************************************************************
* CHECK FOR THE VARIOUS CONDITIONS NEEDED TO CONTINUE.  CORRECT      *
* DDNAME, CORRECT COUNT, ERROR CODES, ETC...                         *
**********************************************************************
CONDITON L     R10,R14IN           GET OLD REG14 (POINTS TO HOOK NUMBER
         CLI   1(R10),X'06'        START OF CI SPLIT?
         BNE   CON001
         OI    FLAG0,CISPLIT
CON001   CLI   1(R10),X'07'        END OF CI SPLIT?
         BNE   CON002
         NI    FLAG0,X'FF'-CISPLIT
CON002   CLI   1(R10),X'09'        START OF CA SPLIT?
         BNE   CON003
         OI    FLAG0,CASPLIT
CON003   CLI   1(R10),X'0A'        END OF CA SPLIT?
         BNE   CON004
         NI    FLAG0,X'FF'-CASPLIT
CON004   LA    R9,4                SET LOOP COUNTER
         LA    R8,HOOK
HOOKLOOP CLI   1(R10),X'03'        IS THIS IDA019RZ I/O?
         BNE   HOOK2
         CLI   0(R8),X'08'         WANT CI SPLIT I/O?
         BNE   HOOK@1              NO, SEE IF CA SPLIT I/O
         MVI   HOOKCALL+1,X'08'
         TM    FLAG0,CISPLIT       AND ARE WE DOING A CI SPLIT?
         BO    CONDIT1             AT IDA019RZ DOING CI SPLIT, TRACE
HOOK@1   CLI   0(R8),X'0B'         WANT CA SPLIT I/O?
         BNE   HOOK2               NO, CHECK NEXT
         MVI   HOOKCALL+1,X'0B'
         TM    FLAG0,CASPLIT       ARE WE DOING A CASPLIT?
         BO    CONDIT1             AT IDA019RZ DOING CA SPLIT, TRACE
HOOK2    MVC   HOOKCALL(2),0(R10)
         CLC   1(1,R10),0(R8)      DOES HOOK NUMBER MATCH USER OPTION?
         BE    CONDIT1
         LA    R8,1(R8)            POINT TO NEXT HOOK OPTION NUMBER
         BCT   R9,HOOKLOOP         CHECK REMAINDING OPTIONS
         B     EXIT1               NO HOOK MATCH, EXIT
CONDIT1  L     R6,COUNT            UPDATE COUNT VALUE FOR THIS DDNAME
         LA    R6,1(R6)
         ST    R6,COUNT
         ST    R6,IRBNUM           STORE THIS COUNT NUMBER
         TM    FLAG1,COUNTOLY
         BO    EXIT1               COUNT ONLY, GET OUT HERE
         TM    FLAG1,COUNTING      AM I COUNTING?
         BZ    CONDIT2             NO, DO ERROR CHECK
         CLC   COUNTS,COUNT
         BH    EXIT1               HAVEN'T BEEN CALLED ENOUGHT. GET OUT
         CLC   COUNTE,COUNT
         BH    CONDIT2             LOOKS WITHIN COUNT RANGE, TRACE
         C     R13,OLDSAVE         ARE WE RUNNING UNDER AN IRB?
         BNE   EXIT1               YES, NO RESET HERE
         LA    R8,3                END COUNT AND DO RESET
         L     R15,IDAO19SU
         BALR  R14,R15
         TM    FLAG1,STOP          END REQUESTED?
         BO    EXIT1               YES, RETURN
         B     CONDITON            START OVER
CONDIT2  TM    FLAG1,RMERRCD       NEED TO CHECK ERROR CODE?
         BZ    CONDIT4             NO, GO CHECK AIX STUFF
         CLI   FLAG6,X'00'         IS THIS AN ANY CONDITION?
         BNE   CONDIT3
         L     RRPL,RPL
         CLI   RPLERRCD(RRPL),X'00'    IS THERE AN ERROR?
         BE    EXIT1               NO, EXIT THEN.
         B     CONDIT4             YES, SEE WHAT TO PRINT (AIX)?
CONDIT3  CLC   FLAG6,RPLERRCD(RRPL) SUPPLIED CODE = RPLERCD?
         BNE   EXIT1
CONDIT4  TM    FLAG5,AIXX          WANT AIX CHECK?
         BZ    CONDIT7             NO, GO PRINT
         L     R10,AMBL            FIND OUT WHAT THIS IS I'M TRACING
         TM    AMBLTYPE(R10),X'40' IS AMBL AN UPG WHICH IS PART OF -
         BZ    CONDIT5             - AN AIX OR BASE? IF SO EXIT.
         L     R10,COUNT           BUT BEFORE WE DO,
         BCTR  R10,R0              MUST RESET THE COUNT VALUE.
         ST    R10,COUNT
         B     EXIT1
CONDIT5  TM    AMBLTYPE(R10),X'80' IS AMBL A PATH?
         BZ    CONDIT6             NO, CHECK BASE
         TM    AIXOPT,AIXNOAIX     WANT THIS PATH (AIX) PRINTED?
         BO    SUBEXIT             NO, TRY BASE/UPG SWAP
         OI    STATUS,PATHDONE
         B     CONDIT7
CONDIT6  TM    AMBLTYPE(R10),X'10' IS AMBL FOR A BASE?
         BZ    CONDIT7             PRINT WHAT EVER IT IS AND GET OUT
         TM    AIXOPT,AIXNOBSE     WANT THE BASE?
         BO    SUBEXIT             NO, TRY PATH/UPGS SWAP
         OI    STATUS,BASEDONE
         L     RPLH,PLH            GET CALLERS PLH TO CHECK FOR WAX
         ICM   R14,15,PLHWAX(RPLH) IS THERE ONE?
         BNZ   CONDIT7             NO, USER OPENED DATA SET
         TM    FLAG0,SWAPED        IS PARM LIST ALREADY SWAPED?
         BO    CONDIT7             YES, ALL OK
         BAL   R14,SWAP            DOING BASE, SWAP THE PARM LIST
CONDIT7  BC    0,PATCH             NOP FOR ADDING CHECK CONDITIONS
*                                  INTO THE PATCH AREA.
         EJECT
**********************************************************************
********* PHASE 2 INITIALIZES THE WORKAREA'S DCB AND DECB'S **********
********* AND PUTS OUT THE SEPARATER MESSAGE.               **********
**********************************************************************
         SPACE 1
PHASE2   XC    MESSAGES,MESSAGES
         TM    FLAG1,ADDRONLY      ADDRESS ONLY?
         BO    ACBPRT              YES, DON'T SWEAT INITIALIZATION
         OI    STATUS,GOOD         GOT THIS FAR, MUST BE A GOOD CALL
         TM    TRACE+48,X'10'      HAVE WE BEEN INITIALIZED?
         BO    PHASE2A             YES, CONTINUE
         LA    R8,2                INITIALIZE FUNCTION CODE
         L     R15,IDAO19SU
         BALR  R14,R15             CALL IDA019SU TO INITIALIZE WORKAREA
         TM    FLAG1,STOP          ERROR OR END REQUESTED?
         BO    EXIT1
         TM    TRACE+48,X'10'      DID THE INITIALIZE WORK?
         BZ    EXIT1               NO, MUST BE AN IRB PROBLEM
PHASE2A  MVC   HEADER+1(122),STARS
         SR    R1,R1
         OI    STATUS,HEADOUT      ABOUT TO ISSUE THE HEADER MSG
         BAL   R14,PRINT           PRINT FIRST SET OF STARS
         MVC   HEADER+1(32),HOOKMSG
         LH    R0,HOOKCALL
         BAL   R14,CONVERT
         MVC   HEADER+34(4),UNPACK+4 STORE THE HOOK NUMBER
         L     R0,IRBNUM
         BAL   R14,CONVERT
         MVC   HEADER+14(4),UNPACK+4
         MVC   HEADER+39(84),STARS PAD INFO LINE WITH STARS
         C     R13,OLDSAVE         IS THIS AN IRB TYPE CALL?
         BE    CALLER              NO, CONTINUE
         L     R9,OLDSAVE          GET ADDRESS OF INTERUPTED SAVE
         L     R9,IRBNUM-SAVE1X(R9) GET OLD TRACE NUMBER
         LR    R0,R9
         BAL   R14,CONVERT         CONVERT THE IRB NUMBER
         MVC   HEADER+45(59),INTERMSG
         MVC   HEADER+70(4),UNPACK+4
CALLER   BAL   R14,PRINT           PRINT HOOK NUMBER MESSAGE
         MVC   HEADER+1(26),CALLMSG
         L     R8,R14IN            GET POINTER TO HOOK NUMBER
         CLI   1(R8),X'0F'         IS THIS A USER HOOK?
         BNH   R1CHK               NO, DETERMINE THE CALLER
         MVC   HEADER+8(6),USER    TELL A USER HOOK
         BAL   R14,RPLCHK
         B     PHASE2B
R1CHK    CLI   1(R8),X'01'         IS CALLER IDA019R1?
         BNE   R3CHK
         MVC   HEADER+14(2),R1N
         BAL   R14,RPLCHK
         B     PHASE2B
R3CHK    CLI   1(R8),X'02'         IS CALLER IDA019R3?
         BNE   RZCHK
         MVC   HEADER+14(2),R3N
         BAL   R14,RPLCHK
         B     PHASE2B
RZCHK    CLI   1(R8),X'03'         IS CALLER IDA019RZ?
         BNE   SECHK
         MVC   HEADER+14(2),RZ
         BAL   R14,RPLCHK
         L     RPLH,PLH            RELOAD THE PLH REG
         L     R7,PLHDIOB(RPLH)    GET THE IOB (IOMB) ADDRESS
         CLI   0(R7),C'I'          IS THIS AN IOMB?
         BE    RZCHK1              YES, CHECK THE IOMB
         L     R8,4(R7)            GET THE ECB ADDRESS
         B     RZCHK2
RZCHK1   L     R8,24(,R7)          GET THE ECB ADDRESS
RZCHK2   TM    0(R8),X'3F'         SEE IF ECB POSTED OK
         BM    RZCHK3              EITHER ZERO OR ALL ONES
         L     R8,4(,R7)           GET ADDRESS OF BUFC
         TM    BUFCFLG1(R8),X'18'  ANY ERRORS?
         BNZ   RZCHK3
         MVC   0(20,R9),IOOK       TELL I/O WAS OK
         B     PHASE2B
RZCHK3   MVC   0(12,R9),IOFAIL     TELL ABOUT BAD I/O
         B     PHASE2B
SECHK    CLI   1(R8),X'05'         WAS CALLER IDA019SE?
         BH    RECHK
         MVC   HEADER+14(2),SE
         BAL   R14,RPLCHK          BUILD THE REQUEST TYPE LINE
         B     PHASE2B
RECHK    CLI   1(R8),X'07'         WAS CALLER IDA019RE?
         BH    RFCHK
         MVC   HEADER+14(2),RE
         BAL   R14,RPLCHK
         B     PHASE2B
RFCHK    CLI   1(R8),X'0A'         WAS CALLER IDA019RF?
         BH    RICHK
         MVC   HEADER+14(2),RF
         BAL   R14,RPLCHK
         B     PHASE2B
RICHK    CLI   1(R8),X'0D'         WAS CALLER IDA019RI?
         BH    RUCHK
         MVC   HEADER+14(2),RI
         BAL   R14,RPLCHK
         B     PHASE2B
RUCHK    CLI   1(R8),X'0E'         WAS CALLER IDA019RU?
         BNE   PHASE2B             NO, GO DO THE PRINT
         MVC   HEADER+14(2),RU
         BAL   R14,RPLCHK
         SR    R1,R1
         CLI   0(R8),X'00'         WAS THIS AN ACTIVE REQUEST?
         BE    PHASE2B
         MVC   0(23,R9),RUNOP     TELL USER NOTHING DONE TO UPG
         B     PHASE2B
RPLCHK   L     RRPL,RPL            RELOAD THE RPL REG
         L     R7,R13IN            GET ADDRESS OF USERS SAVE AREA
         SR    R9,R9
         IC    R9,23(R7)           GET CALLERS REQUEST TYPE
         MH    R9,SIX              TIMES SIX
         LA    R7,REQUEST
         AR    R9,R7
         MVC   HEADER+28(6),0(R9)  MOVE THE REQUEST WORD INTO THE MSG
         LA    R9,HEADER+31        R9 POINTS TO NEXT MESSAGE INSERT PT
         MVC   0(4,R9),MOV
         TM    RPLOPT1(RRPL),X'80' MOVE MODE?
         BZ    RPL01               YES, NEXT CHECK
         MVC   0(4,R9),LOC         LOCATE MODE
RPL01    LA    R9,4(R9)            UP THE COUNTER
         TM    RPLOPT1(RRPL),X'40' DIRECT MODE?
         BZ    RPL02
         MVC   0(4,R9),DIR
         LA    R9,4(R9)
RPL02    TM    RPLOPT1(RRPL),X'20' SEQ MODE?
         BZ    RPL03
         MVC   0(4,R9),SEQ
         LA    R9,4(R9)
RPL03    TM    RPLOPT1(RRPL),X'10' SKIP MODE?
         BZ    RPL04
         MVC   0(4,R9),SKP
         LA    R9,4(R9)
RPL04    MVC   0(4,R9),SYN         SET FOR SYNC MODE
         TM    RPLOPT1(RRPL),X'08' SYNC MODE?
         BZ    RPL05
         MVC   0(4,R9),ASY         NO, SET ASYNC MODE
RPL05    LA    R9,4(R9)
         MVC   0(4,R9),KEQ
         TM    RPLOPT1(RRPL),X'04' KEY EQU MODE?
         BZ    RPL06
         MVC   0(4,R9),KGE
RPL06    LA    R9,4(R9)
         MVC   0(4,R9),FKY         SET FULL KEY MODE
         TM    RPLOPT1(RRPL),X'02' FULL KEY?
         BZ    RPL07
         MVC   0(4,R9),GKY         NO, KEY EQU OR GREATER
RPL07    LA    R9,4(R9)
         TM    RPLOPT2(RRPL),X'80' KEY MODE?
         BZ    RPL08
         MVC   0(4,R9),KEY
         LA    R9,4(R9)
RPL08    TM    RPLOPT2(RRPL),X'40' ADDRESS MODE?
         BZ    RPL09
         MVC   0(4,R9),ADR
         LA    R9,4(R9)
RPL09    TM    RPLOPT2(RRPL),X'20' CONTROL INTER MODE?
         BZ    RPL10
         MVC   0(4,R9),CNV
         LA    R9,4(R9)
RPL10    TM    RPLOPT2(RRPL),X'02' UPDATE?
         BZ    RPL11
         MVC   0(4,R9),UPD
         LA    R9,4(R9)
RPL11    TM    RPLOPT2(RRPL),X'01' NOTE STRING POSISTION?
         BZ    RPL12
         MVC   0(4,R9),NSP
         LA    R9,4(R9)
RPL12    ICM   R0,7,RPLFDBK(RRPL)  GET ANY ERROR CODES
         BZ    RPL13
         MVC   0(26,R9),FLOP
         LA    R9,26(R9)
         ST    R14,OUTREG          SAVE R14 ACCROSS THE CONVERT CALL
         BAL   R14,CONVERT
         L     R14,OUTREG
         MVC   1(6,R9),UNPACK+2    MOVE THE ERROR CODE INTO MSG
         LA    R9,7(R9)
         B     AIX01               SEE ABOUT WHO ENTERED
RPL13    MVC   0(19,R9),FLEW       REQUEST WAS OK
         LA    R9,19(R9)
AIX01    TM    FLAG5,AIXX          COULD THIS BE A AIX/PATH/BASE?
         BZR   R14                 NO, RETURN
         L     R15,PLHIN           NEED TO DETERMINE DSTYPE THAT CALLED
         ICM   R5,15,PLHMRPL(R15)  HAVE A MASTER RPL POINTER?
         BNZ   AIX01A
         ICM   R5,15,PLHCRPL(R15)  TRY OTHER RPL POINTER
         BZR   R14
AIX01A   L     R15,RPLDACB(,R5)    GET ACB
         L     R15,ACBAMBL(,R15)   GET AMBL ADDRESS
         TM    AMBLTYPE(R15),X'80' PATH THE CALLER?
         BZ    AIX02
         MVC   0(6,R9),PATH        TELL ABOUT CALLER
         LA    R9,6(R9)
         BR    R14                 R14 IS ADDRESS TO RETURN TO.
AIX02    TM    AMBLTYPE(R15),X'20' IS CALLER A AIX?
         BZ    AIX03
         MVC   0(5,R9),AIX         TELL ABOUT CALLER
         LA    R9,5(R9)
         BR    R14                 BACK TO MAIN LINE
AIX03    TM    AMBLTYPE(R15),X'10' IS CALLER A BASE?
         BZR   R14                 NO, RETURN AS I DON'T KNOW WHAT..
         MVC   0(6,R9),BASE        TELL THE USER
         LA    R9,6(R9)
         BR    R14
PHASE2B  BAL   R14,PRINT           GO PRINT WHAT EVER THE ABOVE BUILT
         MVC   HEADER+1(122),STARS LAST SET OF STARS
         BAL   R14,PRINT
         EJECT
*******************************************************************
*    PHASE 3  LOCATES AND CONTROLS PRINT OF CONTROL BLOCKS        *
*******************************************************************
PHASE3   EQU   *
*
******  PRINT THE CALLERS REGS
*
REGPRT   TM    FLAG5,REGX          WANT CALLER'S REGS PRINTED?
         BZ    ACBPRT              NO, TRY ACB
         MVC   HEADER+1(44),REGMSG
         LA    R1,60               X'3C' BYTES LENGTH FOR REGS
         LA    R0,SAVEIN1          GET ADDRESS OF THE SAVED REGS
         BAL   R14,PRINT
*
***** PRINT ACB
*
ACBPRT   TM    FLAG2,ACBX          WANT ACB PRINTED?
         BZ    RPLPRT              NO- TRY RPL
         LR    R0,RACB
         BAL   R14,CONVERT         GO CONVERT ADDRESS.
         MVC   HEADER+1(16),ACBMSG SET UP PRINT HEADER
         MVC   HEADER+17(8),UNPACK MOVE IT INTO MESSAGE.
         SR    R1,R1
         LH    R1,ACBLENG(RACB)    GET ACB LENGTH
         BAL   R14,PRINT           PRINT THE ACB
**
***** PRINT RPL
**
RPLPRT   TM    FLAG2,RPLX          WANT RPL?
         BZ    RECPRT              NO, TRY NEXT CB.
         LR    R0,RRPL
         BAL   R14,CONVERT
         MVC   HEADER+1(16),RPLMSG SET UP PRINT HEADER
         MVC   HEADER+17(8),UNPACK GET CONVERTED ADDRESS
         ICM   R1,1,RPLID(RRPL)    GET RPL LENGTH
         BNZ   RPLPRT1
         LA    R1,76
RPLPRT1  BAL   R14,PRINT           GO PRINT THE RPL.
*
***** PRINT USER'S RECORD AREA
*
RECPRT   TM    FLAG1,ADDRONLY      ADDRESS ONLY DOES NOT PRINT RECORD
         BO    KEYPRT3
         TM    FLAG4,RECDX         WANT USER'S RECORD PRINTED?
         BZ    KEYPRT
         ICM   R0,15,RPLAREA(RRPL) GET RECORD ADDRESS
         BZ    KEYPRT
         L     R1,RPLRLEN(,RRPL)
         BAL   R14,CONVERT
         MVC   HEADER+1(52),RECMSG
         MVC   HEADER+29(8),UNPACK
         L     R0,RPLRLEN(,RRPL)   SET PRINT LENGTH
         BAL   R14,CONVERT         NEED LRECL
         MVC   HEADER+54(8),UNPACK FILL IN RECORD LENGTH
         L     R0,RPLAREA(,RRPL)   GET RECORD ADDRESS
         BAL   R14,PRINT
*
***** PRINT USER'S SEARCH ARGUMENT
*
KEYPRT   TM    FLAG4,KEYX          WANT KEY PRINTED?
         BZ    KEYPRT3             NO, SEE IF SHORT PRINT
         L     R5,RPLARG(,RRPL)    GET KEY ADDR.
         LTR   R0,R5               GET ONE?
         BZ    KEYPRT1
         MVC   HEADER+1(64),KEYMSG
         BAL   R14,CONVERT
         MVC   HEADER+42(8),UNPACK
         SR    R1,R1
         TM    RPLOPT2(RRPL),X'80' KEYED MODE?(NOT RBA)
         BO    KEYPRT1             YES, GO DETERMINE THE KEY LENGTH
         LA    R1,4                4 BYTE RBA VALUE
         B     KEYPRT2
KEYPRT1  LH    R1,RPLKEYL(,RRPL)   GET KEY LENGTH
         LTR   R1,R1               IS THERE AN RPL KEYLENGTH?
         BO    KEYPRT2             YES, USE IT
         L     R6,DAMB             GET AMB
         L     R6,AMBDSB(R6)       GET AMDSB
         SR    R1,R1
         LH    R1,AMDKEYLN(,R6)    GET AMDSB KEY LENGTH
KEYPRT2  LR    R0,R1
         BAL   R14,CONVERT
         MVC   HEADER+65(4),UNPACK+4
         LR    R0,R5
         BAL   R14,PRINT
KEYPRT3  TM    STATUS,UPGSHORT     SHORT UPG PRINT?
         BO    AMBLPRT             YES, AMBL NEXT
**
****** PRINT THE PLH HEADER
**
PLHHDPRT TM    FLAG2,PLHX+ALLCB    WANT PLH AND ALL CONTROL BLOCKS?
         BNO   PLHPRT              NO, SKIP PLH HEADER
         L     RAMB,DAMB           RESET THE AMB REG
         ICM   R0,15,AMBPH(RAMB)   GET THE HEADER ADDRESS
         BZ    PLHPRT              NONE (IN UPG'S), TRY PLH
         BAL   R14,CONVERT
         MVC   HEADER+1(23),PLHHDRMS
         MVC   HEADER+24(8),UNPACK
         LA    R1,16               SET PLH HDR LENGTH
         BAL   R14,PRINT
**
***** PRINT PLH
**
PLHPRT   TM    FLAG2,PLHX          DOES CALLER WANT THE PLH?
         BZ    AMBLPRT
         SR    R9,R9
         L     R7,AMBPH(,RAMB)     GET PLH HEADER ADDRESS
         LH    R9,PLHELTH(,R7)     R9 NOW HAS THE LENGTH
         LTR   R9,R9               GET A PLH LENGTH?
         BNZ   PLHPRT1             YES, CONTINUE
         LA    R9,120              FORCE SHORT PLH PRINT
PLHPRT1  IC    R8,PLHCNT(,R7)      R8 HAS THE COUNT OF PLH'S
         TM    FLAG2,ALLCB         WANT ALL PLH'S?
         BO    PLHPRT2             YES, GO AHEAD
         LA    R8,1                PRINT COUNT IS ONE.
         B     PLHLOOP             GO PRINT IT.
PLHPRT2  LA    RPLH,16(R7)         POINT TO 1ST PLH FOR ALL PRINT
PLHLOOP  LR    R0,RPLH             RPLH HAS EITHER CURRENT OR 1ST PLH
         BAL   R14,CONVERT
         MVC   HEADER+1(24),PLHMSG
         MVC   HEADER+25(8),UNPACK
         C     RPLH,PLH            IS THIS THE CURRENT PLH?
         BE    PLHLOOP2            YES, PRINT THIS ONE
         MVC   HEADER+1(24),HEADER+9  ERASE THE WORD 'CURRENT'.
         XC    HEADER+25(9),HEADER+25
PLHLOOP2 LR    R1,R9               GET LENGTH OF PLH
         BAL   R14,PRINT
         ICM   RPLH,15,PLHCHAIN(RPLH)  POINT TO NEXT PLH.
         BZ    AMBLPRT
         BCT   R8,PLHLOOP
**
***** PRINT AMBL
**
AMBLPRT  L     RPLH,PLH            RESTORE PLH REG
         TM    FLAG2,AMBLX         WANT IT PRINTED?
         BZ    AMBLPRT1            NO, TRY NEXT.
         L     RAMBL,AMBL          RESTORE AMBL REG
         LTR   R0,RAMBL
         BZ    AMBLPRT1            NEED ADDRESS
         BAL   R14,CONVERT
         MVC   HEADER+1(17),AMBLMSG
         MVC   HEADER+18(8),UNPACK
         SR    R1,R1
         IC    R1,AMBLLEN(RAMBL)   GET AMBL LENGTH
         BAL   R14,PRINT
AMBLPRT1 TM    STATUS,UPGSHORT     IS THIS A UPG SHORT PRINT?
         BZ    BUFFCPRT            NO, CONTINUE WITH TRACE
         NI    STATUS,X'FF'-UPGSHORT
         B     SUBEXIT3
**
***** PRINT BUFFC
**
BUFFCPRT SR    R9,R9
         TM    FLAG2,BUFFCX        WANT BUFFC PRINTED?
         BZ    BUFFPRT
         NI    STATUS,X'FF'-INDXPROC
         LR    R8,R9
         LR    R7,R8
         MVC   HEADER+1(31),BUFCMSG   SET UP DATA BUFFC HEADER MSG
         TM    FLAG2,ALLCB         ALLCB  GETS ALL BUFFC ALSO OR-
         BO    ALLBUFFC            NO PLH WAS FOUND.
         TM    FLAG2,DATACB        WANT DATA CONTROL BLOCKS?
         BZ    IBUFFCPT
         L     R0,PLHDBUFC(RPLH)
         LTR   R0,R0               GET BUFFC ADDRESS?
         BZ    IBUFFCPT            NO, TRY INDEX BUFFC
         BAL   R14,CONVERT
         MVC   HEADER+32(8),UNPACK
         LA    R1,64(R0)           SET BUFFC LENGTH.
         BAL   R14,PRINT
IBUFFCPT TM    FLAG2,INDEXCB       WANT INDEX CONTROL BLOCKS?
         BZ    BUFFPRT
         ICM   R0,15,PLHIBUFC(RPLH)  GET INDEX BUFFC ADDRESS?
         BZ    BUFFPRT             NO, GO TO BUFFER PRINT.
         BAL   R14,CONVERT
         MVC   HEADER+9(5),INDEX
         MVC   HEADER+33(8),UNPACK
         LA    R1,64               GET LENGTH
         LA    R14,BUFFPRT         FAKE RETURN POINT
         B     PRINT
*
***** ROUTINE FOR PRINTING ALL BUFFC'S
*
ALLBUFFC SR    R10,R10
         NI    STATUS,X'FF'-INDXPROC   WORKING ON DATA NOW
         TM    FLAG2,DATACB        WANT DATA CONTROL BLOCKS?
         BZ    ALLIBFC             NO, TRY ALL INDEX BUFFC
         L     R10,PLHDBUFC(RPLH)  YES, GET THE CURRENT DATA BUFFC
         L     R9,DAMB
ALLBFC2  L     R9,AMBBUFC(,R9)     GET BUFFC HEADER
         LH    R1,BUFDRLEN(,R9)    SET BUFC LENGTH
         SR    R7,R7
         IC    R7,BUFDRNO(,R9)     GET BUFC COUNT
         CLI   BUFDRID(R9),X'70'   IS THIS A NORMAL BUFC?
         BE    ALL@01              YES, CONTINUE
         LH    R7,BSPHBFNO(,R9)    GET BSPH BUFC COUNT
ALL@01   LR    R0,R9
         BAL   R14,CONVERT
         MVC   HEADER+1(6),EDBMSG  GET THE WORD 'DATA'
         TM    STATUS,INDXPROC     SHOULD THE WORD BE 'INDEX'?
         BZ    ALL@02              NO
         MVC   HEADER+1(5),INDEX   YES
ALL@02   MVC   HEADER+7(25),BUFCHDR
         MVC   HEADER+32(8),UNPACK
         BAL   R14,PRINT           GO PRINT THE BUFFC HEADER.
         CLI   BUFDRID(R9),X'70'   NORMAL BUFC?
         BE    ALLBFC3
         L     R9,BSPHBUFC(,R9)    POINT TO 1ST BUFC FROM BSPH
         B     BFCLOOP
ALLBFC3  L     R9,BUFDBUFC(R9)     POINT TO FIRST BUFFC
         B     BFCLOOP
ALLIBFC  OI    STATUS,INDXPROC     DOING INDEX DATA NOW
         TM    FLAG2,INDEXCB       WANT INDEX BUFFC?
         BZ    BUFFPRT
         L     R10,PLHIBUFC(RPLH)  GET CURRENT BUFFC
         L     R9,IAMB             NEED AMB.
         B     ALLBFC2
BFCLOOP  LR    R0,R9               ROUTINE FOR PRINTING MORE THAN ONE.
         LA    R1,64               SET BUFFC LENGTH.
         BAL   R14,CONVERT
         MVC   HEADER+1(31),BUFCMSG
         TM    STATUS,INDXPROC
         BZ    BFC@01
         MVC   HEADER+9(5),INDEX
BFC@01   MVC   HEADER+32(8),UNPACK MOVE IN BUFFC ADDRESS
         CR    R0,R10              IS THIS THE CURRENT BUFFC?
         BE    BFCLOOP1            NO, JUST PRINT MESSAGE
         MVC   HEADER+1(31),HEADER+9   ERASE 'CURRENT' WORD
         XC    HEADER+32(9),HEADER+32  AND CLEAN UP MESSAGE LINE
BFCLOOP1 BAL   R14,PRINT
         ICM   R9,15,BUFCHAIN(R9)  GET NEXT BUFFC.
         BZ    BUFCOUT             GET OUT IF CHAIN IS BROKE
         BCT   R7,BFCLOOP          DO IT AGAIN.
BUFCOUT  TM    STATUS,INDXPROC     ARE WE DOING INDEX?
         BZ    ALLIBFC             NO, THEN NOW DO INDEX BUFFC.
         NI    STATUS,X'FF'-INDXPROC
*
***** PRINT BUFFERS
*
BUFFPRT  TM    FLAG3,BUFFX         WANT BUFFERS PRINTED?
         BZ    IOBPRT
         NI    STATUS,X'FF'-INDXPROC   WORKING ON DATA NOW
         SR    R9,R9
         SR    R8,R8
         SR    R7,R7
         L     R10,DAMB            GET DATA AMB
         L     R9,IAMB             GET INDEX AMB
         L     R10,20(R10)         GET DATA AMDSB
         L     R9,20(R9)           GET INDEX AMDSB
         MVC   DBUFFLEN,20(R10)    GET BUFFER LENGTH
         MVC   IBUFFLEN,20(R9)     GET THE INDEX BUFFER SIZE
         TM    FLAG2,DATACB        CALLER WANT DATA BUFFER PRINTED?
         BZ    IBUFF               NO, TRY INDEX BUFFER
         NI    STATUS,X'FF'-INDXPROC    DOING DATA BUFFER NOW.
         MVC   BUFFLEN,DBUFFLEN    SWAP IN DATA BUFFER LENGTH.
         MVC   HEADER+1(33),BUFFMSG
         L     R10,DAMB            GET DATA AMB
         L     R7,AMBBUFC(R10)
         TM    FLAG2,ALLCB         PLHALL GETS ALL BUFFERS ALSO
         BO    ALLBUFF
         LTR   RPLH,RPLH           NEED PLH TO FIND BUFFER
         BZ    IBUFF               NO PLH, FORGET BUFFER
         L     R6,PLHDBUFC(RPLH)   GET BUFFC
BUFFPRT2 LTR   R10,R6              GET BUFFC ADDRESS?
         BZ    IBUFF               NO, FORGET BUFFER
         L     R10,BUFCBAD(R10)
         LTR   R0,R10              DID WE GET A BUFFER ADDRESS?
         BZ    IBUFF               NO, FORGET BUFFER
         L     R1,BUFFLEN
         BAL   R14,CONVERT
         MVC   HEADER+34(8),UNPACK
         TM    FLAG5,PAPSAVE       WANT PAPER SAVE OPTION?
         BZ    BUFFPRT3            NO, GO PRINT WHAT WE HAVE
         CLI   0(R10),X'00'        IS BUFFER EMPTY?
         BNE   BUFFPRT3            NO, GO PRINT IT.
         CLC   0(249,R10),1(R10)   IS COMPLETE BUFFER EMPTY?
         BNE   BUFFPRT3            NO, GO PRINT IT.
         SR    R1,R1               SET UP FOR EMPTY PRINT.
         XC    HEADER+1,HEADER+1
         MVC   HEADER+1(22),BUFEMSG
         MVC   HEADER+23(8),UNPACK SET EMPTY MESSAGE
BUFFPRT3 BAL   R14,PRINT
IBUFF    TM    STATUS,INDXPROC     HAVE WE BEEN HERE BEFORE?
         BO    IOBPRT
         OI    STATUS,INDXPROC     WE ARE DOING INDEX NOW.
         TM    FLAG2,INDEXCB       DOES CALLER WANT INDEX BUFFERS?
         BZ    IOBPRT              NO, GET OUT.
         MVC   HEADER+1(34),BUFFMSG
         MVC   HEADER+9(5),INDEX
         MVC   BUFFLEN,IBUFFLEN    SWAP CI SIZE.
         L     R6,PLHIBUFC(RPLH)   GET INDEX BUFFC ADDR
         L     R10,IAMB            GET INDEX AMB
         L     R7,AMBBUFC(R10)
         TM    FLAG2,ALLCB
         BZ    BUFFPRT2            GO TO COMMON OR FALL TO ALLBUFF
**
***** ROUTINE FOR PRINTING ALL BUFFERS
*
ALLBUFF  L     RRPL,RPL
         XC    IBUFFC,IBUFFC
         XC    DBUFFC,DBUFFC
         ICM   R9,15,PLHIBUFC(RPLH)
         BZ    ALLBUFF2            NO INDEX TO DO
         MVC   IBUFFC,BUFCBAD(R9)  GET CURRENT INDEX BUFFER ADDRESS
ALLBUFF2 L     R9,PLHDBUFC(RPLH)
         MVC   DBUFFC,BUFCBAD(R9)  GET CURRENT DATA BUFFER ADDRESS
         SR    R9,R9
         IC    R9,BUFDRNO(R7)      GET BUFC COUNT
         CLI   BUFDRNO(R7),X'72'   IS THIS A BSPH?
         BNE   BUFFLOOP-4          NO, GET GOOD BUFC POINTER
         LH    R9,BSPHBFNO(R7)     GET BSPH BUFC COUNT
         L     R7,BSPHBUFC(R7)     POINT TO FIRST BUFC
         TM    STATUS,INDXPROC
         BZ    BUFFLOOP
         CLC   DBUFFLEN,IBUFFLEN   INDEX = DATA LEN, ALREADY DID INDEX
         BE    IOBPRT
         B     BUFFLOOP
         L     R7,BUFDBUFC(R7)     POINT TO 1ST BUFC FROM NORMAL BUFCHD
BUFFLOOP ICM   R0,15,BUFCBAD(R7)   GET BUFFER ADDRESS
         BZ    BFFLOOP5            DIDN'T GET ONE, TRY NEXT
         L     R1,BUFFLEN          GET BUFFER LENGTH
         BAL   R14,CONVERT
         MVC   HEADER+34(8),UNPACK
         C     R0,IBUFFC           DO WE HAVE THE CURRENT INDEX BUFFER?
         BE    BFFLOOP3
         C     R0,DBUFFC           DO WE HAVE THE CURRENT DATA BUFFER?
         BE    BFFLOOP3
         MVC   HEADER+1(33),HEADER+9   ERASE 'CURRENT' WORD
         XC    HEADER+34(20),HEADER+34
BFFLOOP3 TM    FLAG5,PAPSAVE       WANT PAPER SAVE OPTION?
         BZ    BFFLOOP4            NO, PRINT WHAT WE HAVE
         LR    R14,R0
         CLI   0(R14),X'00'        LOOK LIKE EMPTY BUFFER?
         BNE   BFFLOOP4            NO, PRINT IT.
         CLC   0(249,R14),1(R14)   IS BUFFER EMPTY?
         BNE   BFFLOOP4            NO, GO PRINT IT.
         SR    R1,R1               SET 0 LENGTH.
         XC    HEADER+1,HEADER+1   CLEAR OUT OLD MESSAGE.
         MVC   HEADER+1(22),BUFEMSG
         MVC   HEADER+23(8),UNPACK
BFFLOOP4 BAL   R14,PRINT
         MVC   HEADER+1(34),BUFFMSG
         TM    STATUS,INDXPROC
         BZ    BFFLOOP5
         MVC   HEADER+9(5),INDEX
BFFLOOP5 L     R7,BUFCHAIN(R7)     GET NEXT BUFFC.
         BCT   R9,BUFFLOOP         DO IT AGAIN?
         B     IBUFF               FINISHED, IBUFF HAS EXIT CODE.
*
***** PRINT IOB
*
IOBPRT   XC    MESSAGES,MESSAGES   CLEAN UP AFTER BUFFER PRINT
         LTR   RPLH,RPLH           NEED PLH TO PRINT IOB AND CPA
         BZ    AMBPRT
         TM    FLAG3,IOBX          WANT IOB PRINTED?
         BZ    CPAPRT
         L     R0,PLHDIOB(RPLH)    GET IOB ADDR
         LR    R9,R0
         BAL   R14,CONVERT
         MVC   HEADER+1(17),IOBMSG
         MVC   HEADER+18(8),UNPACK
         LA    R1,X'4C'            IOB LENGTH
         CLI   0(R9),C'I'          IOMB (MVS)?
         BNE   IOBPRT1
         OI    FLAG1,MVS
         MVC   HEADER+1(4),IOMB    MVS HAS AN IOMB
         LA    R1,X'78'            AND IT IS BIGGER
IOBPRT1  BAL   R14,PRINT
         TM    FLAG1,MVS           MVS?
         BZ    CPAPRT              NO, FORGET IOSB
         ICM   R0,15,36(R9)        GET IOSB ADDR FROM IOMB
         BZ    CPAPRT
         BAL   R14,CONVERT
         MVC   HEADER+1(17),IOBMSG
         MVC   HEADER+1(4),IOSB
         MVC   HEADER+18(8),UNPACK
         LA    R1,84
         BAL   R14,CONVERT
         BAL   R14,PRINT
*
***** PRINT CPA
*
CPAPRT   TM    FLAG3,CPAX          WANT CPA PRINTED?
         BZ    AMBPRT
         NI    STATUS,X'FF'-INDXPROC DOING DATA NOW
         TM    FLAG2,DATACB       WANT DATA CPA PRINTED?
         BZ    ICPAPRT
         ICM   R1,15,PLHDBUFC(RPLH)  BUFFC HAS DATA CPA ADDRESS.
         BZ    ICPAPRT             BAD PLH-CPA POINTER, TRY INDEX
         MVC   HEADER+1(45),CPAMSG
CPALOOP  L     R0,BUFCCPA(0,R1)    GET BUFC CPA AREA
         BAL   R14,CONVERT
         MVC   HEADER+46(8),UNPACK
         LR    R1,R0
         CLI   CPAID(R1),X'71'     IS THIS A CPA?
         BNE   ICPAPRT
         LH    R1,CPALEN(R1)       GET CPA LENGTH
         BAL   R14,PRINT
ICPAPRT  TM    FLAG2,INDEXCB       WANT INDEX CPA PRINTED?
         BZ    AMBPRT
         TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    AMBPRT
         OI    STATUS,INDXPROC
         MVC   HEADER+1(45),CPAMSG
         MVC   HEADER+1(5),INDEX
         ICM   R1,15,PLHIBUFC(RPLH) BUFFC HAS CPA ADDRESS
         BNZ   CPALOOP             GO PRINT IT.
*
***** PRINT AMB
*
AMBPRT   L     RAMBL,AMBL          RESTORE THE AMBL REG
         TM    FLAG3,AMBX          WANT AMB PRINTED?
         BZ    AMDSBPRT
         NI    STATUS,X'FF'-INDXPROC
         TM    FLAG2,DATACB        WANT DATA AMB?
         BZ    IAMBPRT             NO, TRY INDEX AMB.
         MVC   HEADER+1(22),AMBMSG
         L     RAMB,DAMB           GET DATA AMB
AMBLOOP  LR    R0,RAMB
         BAL   R14,CONVERT
         MVC   HEADER+23(8),UNPACK
         SR    R1,R1
         LH    R1,AMBLEN(RAMB)     GET AMB LENGTH.
         BAL   R14,PRINT
IAMBPRT  TM    FLAG2,INDEXCB       WANT INDEX AMB?
         BZ    AMDSBPRT
         TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    AMDSBPRT            YES, BRANCH
         OI    STATUS,INDXPROC     WELL WE ARE HERE NOW.
         MVC   HEADER+1(22),AMBMSG
         MVC   HEADER+1(5),INDEX
         L     RAMB,IAMB           GET INDEX AMB
         B     AMBLOOP
*
***** PRINT AMDSB
*
AMDSBPRT TM    FLAG3,AMDSBX        WANT AMDSB PRINTED?
         BZ    ICWAPRT
         NI    STATUS,X'FF'-INDXPROC
         TM    FLAG2,DATACB        WANT DATA AMDSB?
         BZ    IAMDSB
         MVC   HEADER+1(24),AMDSBMSG
         L     RAMB,DAMB           GET DATA AMB
AMDSBLOP L     R6,AMBDSB(RAMB)     GET AMDSB
         CLI   AMDSBID(R6),X'60'   GET AMDSB?
         BNE   IAMDSB
         LR    R0,R6
         BAL   R14,CONVERT
         MVC   HEADER+25(8),UNPACK
         LH    R1,AMDLEN(R6)       GET AMDSB LENGTH.
         BAL   R14,PRINT
IAMDSB   TM    FLAG2,INDEXCB       WANT INDEX AMDSB PRINTED?
         BZ    ICWAPRT
         TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    ICWAPRT
         OI    STATUS,INDXPROC     HERE NOW.
         MVC   HEADER+1(24),AMDSBMSG
         MVC   HEADER+1(5),INDEX
         L     RAMB,IAMB           GET INDEX AMB
         B     AMDSBLOP
*
***** PRINT ICWA
*
ICWAPRT  TM    FLAG3,ICWAX         WANT ICWA, IMWA OR DIWA?
         BZ    ARDBPRT
         TM    FLAG2,INDEXCB       WANT ICWA?
         BZ    DIWAPRT
         L     RAMB,IAMB           GET INDEX AMB
         L     R6,AMBIWA(RAMB)     GET ICWA
ICWA2    CLI   IMWID(R6),X'42'     IS THIS AN IMWA?
         BE    IMWAPRT             YES, GO PRINT IT
         CLI   ICWID(R6),X'43'     IS THIS AN ICWA?
         BNE   DIWAPRT             NO, NEITHER SO GET OUT.
         LR    R0,R6
         BAL   R14,CONVERT
         MVC   HEADER+1(17),ICWAMSG
         MVC   HEADER+18(8),UNPACK
         LH    R1,ICWLEN(R6)       GET LENGTH
         B     ICWA3
IMWAPRT  LR    R0,R6
         BAL   R14,CONVERT
         MVC   HEADER+1(17),IMWAMSG
         MVC   HEADER+18(8),UNPACK
         LH    R1,2(R6)            GET LENGTH
ICWA3    BAL   R14,PRINT           GO PRINT WHAT EVER WE GOT
         ICM   R6,15,ICWCHN(R6)    GET NEXT WHAT EVER
         BNZ   ICWA2               AND IF SOME THING THERE, GO PRINT IT
*
***** PRINT DIWA
*
DIWAPRT  TM    FLAG2,DATACB        WANT DIWA?
         BZ    ARDBPRT
         L     RAMB,DAMB           GET DATA AMB
         L     R6,AMBIWA(RAMB)     GET DIWA
         LTR   R0,R6               DID WE GET ONE?
         BZ    ARDBPRT
         BAL   R14,CONVERT
         MVC   HEADER+1(17),DIWAMSG
         MVC   HEADER+18(8),UNPACK
         LH    R1,2(R6)            GET LENGTH
         BAL   R14,PRINT
*
***** PRINT ARDB
*
ARDBPRT  TM    FLAG3,ARDBX         WANT ARDB PRINTED?
         BZ    DEBPRT+6            BRANCH AROUND LMPBADR CLEAR
         NI    STATUS,X'FF'-INDXPROC
         TM    FLAG2,DATACB        WANT DATA ARDB?
         BZ    IARDB
         L     RAMB,DAMB           GET DATA AMB
ARDBLOOP L     R6,AMBDSB(RAMB)     GET AMDSB
         L     R6,AMDPARDB(R6)     GET ARDB
ARDBLOPP LTR   R0,R6               DO WE HAVE AN ADDRESS?
         BZ    IARDB
         CLI   ARDID(R6),X'61'     IS THIS AN ARDB?
         BNE   IARDB
         BAL   R14,CONVERT
         MVC   HEADER+1(23),ARDBMSG
         TM    STATUS,INDXPROC     DOING INDEX?
         BZ    ARDB@01
         MVC   HEADER+1(5),INDEX
ARDB@01  MVC   HEADER+24(8),UNPACK
         LH    R1,ARDLEN(R6)       GET LENGTH
         BAL   R14,PRINT
         L     R6,ARDNPTR(R6)      GET NEXT ARDB.
         B     ARDBLOPP
IARDB    TM    FLAG2,INDEXCB       WANT INDEX ARDB?
         BZ    EDBPRT
         TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    EDBPRT
         OI    STATUS,INDXPROC
         L     RAMB,IAMB           GET INDEX AMB
         B     ARDBLOOP
*
***** PRINT EDB
*
EDBPRT   NI    STATUS,X'FF'-INDXPROC
         TM    FLAG2,DATACB        WANT DATA EDB?
         BZ    IEDB
         L     RAMB,DAMB           GET DATA AMB
         L     R6,AMBEDB(RAMB)
         MVC   HEADER+1(22),EDBMSG
EDBLOOP  CLI   EDBID(R6),X'90'
         BNE   IEDB
         SR    R1,R1
         LR    R7,R1
         IC    R7,EDBNO(R6)        GET COUNT
         LH    R1,EDBLEN(,R6)      GET EDB LENGTH
         LR    R9,R1
         MR    R0,R7               LENGTH TIMES NUMBER OF EDB'S
         LR    R0,R6
         LA    R6,8(R6)            POINT TO FIRST EDB FOR LPMBPRT
         BAL   R14,CONVERT
         MVC   HEADER+23(8),UNPACK
         BAL   R14,PRINT
*
***** PRINT LPMB
*
LPMBPRT  EQU   *                   R6 HAS EDB ADDRESS
         L     R0,EDBLPMBA(R6)     GET ADDRESS
         LR    R14,R0
         C     R14,LPMBADR         HAVE WE PRINTED THIS LPMB BEFORE?
         BE    LPMBPRT2
         ST    R14,LPMBADR         NO, SAVE ITS ADDRESS FOR NEXT TIME
         LH    R1,LPMBLEN(R14)     GET LENGTH
         BAL   R14,CONVERT
         MVC   HEADER+1(16),LPMBMSG
         MVC   HEADER+18(8),UNPACK
         BAL   R14,PRINT
LPMBPRT2 AR    R6,R9               GET NEXT EDB ADDRESS
         BCT   R7,LPMBPRT          DO DATA OR INDEX TELL COUNT ZERO.
IEDB     TM    FLAG2,INDEXCB
         BZ    DEBPRT
         TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    DEBPRT
         OI    STATUS,INDXPROC
         L     RAMB,IAMB           GET INDEX AMB
         L     R6,AMBEDB(RAMB)     GET EDB
         MVC   HEADER+1(22),EDBMSG
         MVC   HEADER+1(5),INDEX
         B     EDBLOOP
*
***** PRINT DEB
*
DEBPRT   SR    R14,R14
         ST    R14,LPMBADR         CLEAR FIELD FOR NEXT PRINT
         TM    FLAG3,DEBX          WANT DEB?
         BZ    IICBPRT             NO, TRY IICB
         NI    STATUS,X'FF'-INDXPROC
         TM    FLAG2,DATACB        WANT DATA DEB?
         BZ    IDEB
         MVC   HEADER+1(22),DEBMSG
         L     RAMB,DAMB           GET DATA AMB
DEBLOOP  ICM   R0,7,AMBDEBAD(RAMB) GET THE DEB.
         BZ    IDEB                NO DEB ADDRESS, GET OUT
         SH    R0,TWOFOUR          SUBTRACT X'24' FROM DEB ADDRESS
         LA    R1,100
         BAL   R14,CONVERT
         MVC   HEADER+23(8),UNPACK
         BAL   R14,PRINT
IDEB     TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    IICBPRT             YES, FINISHED WITH DEB
         TM    FLAG2,INDEXCB       WANT INDEX DEB?
         BZ    IICBPRT             NO, TRY IICB
         OI    STATUS,INDXPROC
         MVC   HEADER+1(22),DEBMSG
         MVC   HEADER+1(5),INDEX
         L     RAMB,IAMB           GET INDEX AMB
         B     DEBLOOP
*
***** PRINT IICB
*
IICBPRT  L     RRPL,RPL            GET RPL ADDRESS BACK
         CLI   RPLLEN(RRPL),X'4C'  DO WE HAVE AN IICB?
         BNH   BSPHPRT             NO, TRY BSPH
         TM    FLAG5,IICBX         WANT IICB?
         BZ    BSPHPRT
         L     R5,76(RRPL)         GET IICB ADDR.
         LTR   R0,R5
         BZ    BSPHPRT             NO IICB, DONE.
         SR    R1,R1
         LH    R1,IICBLEN(R5)
         BAL   R14,CONVERT
         MVC   HEADER+1(17),IICBMSG
         MVC   HEADER+18(8),UNPACK
         BAL   R14,PRINT
*
***** PRINT THE DCB
*
DCBPRT   L     R5,76(RRPL)         GET IICB.
         L     R5,RPLDECB(R5)      GET DCB.
         LTR   R0,R5
         BZ    BSPHPRT             NO, TRY BSPH
         LA    R1,70
         BAL   R14,CONVERT
         MVC   HEADER+1(20),DCBMSG
         MVC   HEADER+21(8),UNPACK
         BAL   R14,PRINT           GO PRINT DCB
*
**** PRINT BSPH
*
BSPHPRT  NI    STATUS,X'FF'-INDXPROC
         L     RAMB,DAMB
         TM    AMBAFLG(RAMB),X'60' LSR OR GSR?
         BZ    VATPRT              NO, THEN NO BSPH
         TM    FLAG4,BSPHX         DO WE WANT BSPH?
         BZ    VATPRT              NO, DO NEXT
         TM    FLAG2,ALLCB         WANT ALL CB'S?
         BO    VSRTPRT             YES, HAVE ALREADY PRINTED THE BSPH
         TM    FLAG2,DATACB        WANT DATA BSPH?
         BZ    IBSPHPRT            NO, TRY INDEX
         MVC   HEADER+1(23),BSPHMSG
BSPHLOOP L     R5,AMBBUFC(RAMB)
         CLI   BSPHID(R5),X'72'    DO WE HAVE A BSPH?
         BNE   IBSPHPRT            NO, TRY INDEX SIDE.
         LR    R0,R5
         LH    R1,BSPHLEN(R5)      GET BSPH LENGTH
         BAL   R14,CONVERT
         MVC   HEADER+24(8),UNPACK
         BAL   R14,PRINT
IBSPHPRT TM    FLAG1,INDEXCB       WANT INDEX SIDE?
         BZ    VATPRT              NO, TRY NEXT
         TM    STATUS,INDXPROC     BEEN HERE BEFORE?
         BO    VATPRT              YES, EXIT
         OI    STATUS,INDXPROC
         MVC   HEADER+1(23),BSPHMSG
         MVC   HEADER+1(5),INDEX   SET MESSAGE FOR INDEX
         ICM   RAMB,15,IAMB
         BNZ   BSPHLOOP
*
**** PRINT THE VAT
*
VATPRT   TM    FLAG4,VATX+VSRTX    WANT VAT OR VSRT?
         BZ    BIBPRT              NO, TRY NEXT
         L     R7,CVTPTR(R0)       GET CVT
         L     R7,0(R7)            TCB WORDS
         L     R7,4(R7)            TCB ADDRESS
         ICM   R7,15,180(R7)       GET JSCB FROM TCB
         BZ    VSRTPRT             NONE, EXIT
         ICM   R7,15,196(R7)       GET VAT FROM JSCBSHR
         BZ    VSRTPRT
         CLI   VATID(R7),X'11'     VAT ID?
         BNE   VSRTPRT
         ST    R7,VATADDR
         TM    FLAG4,VATX          WANT THE VAT?
         BZ    VSRTPRT             NO, TRY NEXT
VATLOOP  LR    R0,R7
         BAL   R14,CONVERT
         MVC   HEADER+1(16),VATMSG
         MVC   HEADER+17(8),UNPACK
         LH    R1,VATLEN(R7)       GET VAT LENGTH
         BAL   R14,PRINT
         ICM   R7,15,VATNEXT(R7)   ANOTHER VAT?
         BNZ   VATLOOP             PRINT THE NEXT VAT
*
**** PRINT VSRT
*
VSRTPRT  TM    FLAG4,VSRTX         WANT VSRT?
         BZ    BIBPRT              NO, TRY NEXT
         L     RAMB,DAMB
         TM    AMBAFLG(RAMB),X'80' GSR ?
         BO    VSRTPRT1            GO TO GSR CODE
         ICM   R5,15,VATADDR       GET VAT ADDRESS (FROM VATPRT)
         BZ    BIBPRT
         LA    R5,VATVPTR(R5)
         LA    R10,2
         B     VSRTLOP1
VSRTPRT1 L     R5,CVTPTR(R0)       GET CVT ADDRESS
         ICM   R5,15,256(R5)       GET AMCBS
         BZ    BIBPRT              NO AMCBS, NO VSRT
         LA    R5,CBSCRTCB(R5)     SET R5 TO 8 AWAY FROM THE VSRT PTR
         LA    R10,8               COUNT OF VSRT ENTRIES
VSRTLOOP LA    R5,8(R5)            POINT TO NEXT VSRT
VSRTLOP1 BCT   R10,VSRT@01
         B     BIBPRT              VSRT PRINT EXIT POINT
VSRT@01  ICM   R6,15,0(R5)         GET FIRST VSRT (OR VAT) ENTRY
         BZ    VSRTLOOP            NO ENTRY, TRY NEXT
         LR    R0,R6
         BAL   R14,CONVERT
         MVC   HEADER+1(17),VSRTMSG
         MVC   HEADER+18(8),UNPACK
         LH    R1,VSRTLEN(R6)
         BAL   R14,PRINT
         B     VSRTLOOP
*
**** PRINT THE BIB
*
BIBPRT   TM    FLAG4,BIBX+UPTX+HEBX DO WE NEED THE BIB AT ALL?
         BZ    SUBEXIT
         L     RAMBL,AMBL
         ICM   R5,15,AMBLBIB(RAMBL) GET BIB ADDRESS
         BZ    SUBEXIT             NO BIB, NO UPT OR HEB
         CLI   BIBID(R5),X'10'     IS IT A BIB?
         BNE   SUBEXIT             SAME AS ABOVE
         TM    FLAG4,BIBX          WANT BIB?
         BZ    UPTPRT              NO, TRY UPT
         LR    R0,R5
         BAL   R14,CONVERT
         MVC   HEADER+1(16),BIBMSG
         MVC   HEADER+17(8),UNPACK
         LH    R1,BIBLEN(R5)
         BAL   R14,PRINT           GO PRINT THE BIB
*
**** PRINT THE UPGRADE TABLE
*
UPTPRT   TM    FLAG4,UPTX          WANT UPT AND WAX?
         BZ    HEBPRT
         ICM   R6,15,BIBUPT(R5)    GET UPT ADDRESS
         BZ    WAXPRT              NONE, EXIT
         LR    R0,R6
         BAL   R14,CONVERT
         MVC   HEADER+1(16),UPTMSG
         MVC   HEADER+17(8),UNPACK
         LH    R1,UPTLEN(R6)       SET UPT LENGTH
         BAL   R14,PRINT
*
**** PRINT THE WAX
*
WAXPRT   L     RPLH,PLH            RESET THE PLH REG
         ICM   R10,15,PLHWAX(RPLH) GET WAX ADDRESS
         BZ    HEBPRT              NOT THERE, CAN'T PRINT IT.
         CLI   WAXID(R10),X'73'    GET A WAX?
         BE    WAXPRT1
         ICM   R10,15,PLHWAX(R10)  TRY WAX IN THIS PLH
         BZ    HEBPRT
         CLI   WAXID(R10),X'73'    NOW DID WE GET A WAX?
         BNE   HEBPRT              NO, CAN'T FIND IT
WAXPRT1  LR    R0,R10
         BAL   R14,CONVERT
         MVC   HEADER+1(15),WAXMSG
         MVC   HEADER+17(8),UNPACK
         LH    R1,WAXLEN(R10)      SET PRINT LENGTH
         BAL   R14,PRINT
*
**** PRINT THE HEB
*
HEBPRT   TM    FLAG4,HEBX          WANT THE HEB?
         BZ    SUBEXIT             NO, EXIT
         ICM   R6,15,BIBHEBPT(R5)  GET HEB FROM BIB
         BZ    SUBEXIT
HEBLOOP  LR    R0,R6
         BAL   R14,CONVERT
         MVC   HEADER+1(16),HEBMSG
         MVC   HEADER+17(8),UNPACK
         LH    R1,HEBLEN(R6)       SET LENGTH
         BAL   R14,PRINT
         ICM   R6,15,HEBNHEB(R6)   MORE HEBS?
         BNZ   HEBLOOP             YES, DO NEXT ONE.  OTHERWISE, FINISH
*
**** EXIT ROUTINE DETERMINES IF THERE IS AN AIX TO DO
*
SUBEXIT  TM    FLAG5,AIXX          WANT AIX STUFF CHECK
         BZ    SUBEXIT5            NO, SEE IF WE GET OUT
         TM    AIXOPT,ONLYCALL     WANT ONLY THE CALLER TRACED?
         BO    SUBEXIT5            YEA, GET OUT.
         TM    AIXOPT,AIXNOBSE     WANT THE BASE DONE?
         BZ    SUBEXIT1            YES, TRY IT
         B     SUBEXIT2            NO, TRY PATH
*
******** SUBEXIT1 SWAPS FROM PATH (AIX) PRINT TO A BASE PRINT
*
SUBEXIT1 TM    STATUS,BASEDONE     HAVE WE ALREADY DONE THIS?
         BO    SUBEXIT2            YES, TRY PATH
         OI    STATUS,BASEDONE
         L     R10,AMBL
         TM    AMBLTYPE(R10),X'80' WAS CALLER A PATH?
         BZ    SUBEXIT2            NO, WAS BASE, TRY UPG'S
         TM    FLAG0,SWAPED        AIX'S BASE SWAP CODE
         BO    SUBEXT1A            DON'T RE-SWAP IT
         BAL   R14,SWAP
SUBEXT1A ICM   R7,15,PLHWAX(RPLH)  GET WAX ADDRESS FROM AIX PLH
         BZ    SUBEXIT3            NONE, TRY UPT'S
GOTWAX   MVC   HEADER+35(88),STARS
         MVC   HEADER+1(30),ABASEMSG
         SR    R1,R1               HEADER MESSAGE ONLY
         BAL   R14,PRINT           PRINT WAX AND TELL OF SWAP
         L     RRPL,WAXIRPL(R7)    GET BASE RPL FROM WAX
         ICM   RPLH,15,WAXBPLH(R7) GET PLH FROM WAX
         BNZ   SUBEXIT4
         L     RPLH,RPLPLHPT(RRPL) NOT IN WAX, GET FROM RPL
         B     SUBEXIT4            GO FINISH SETTING UP CB POINTERS
*
***** SWAP FROM BASE TO PATH
*
SUBEXIT2 TM    AIXOPT,AIXNOAIX     WANT THE PATH DONE?
         BO    SUBEXIT3            NO, TRY UPGS
         L     R10,AMBL
         TM    AMBLTYPE(R10),X'10' WAS LAST CALL A BASE?
         BZ    SUBEXIT3            NO, TRY UPG'S
         TM    STATUS,PATHDONE     DID WE ALREADY DO THE PATH?
         BO    SUBEXIT3            YES, TRY UPG'S
         ICM   R10,15,PLHXPLH(RPLH) SEE IF THERE IS A PATH
         BZ    SUBEXIT3            NOPE, TRY UPG'S
         OI    STATUS,PATHDONE     WILL SOON BE DONE.
         TM    FLAG0,SWAPED        WAS THE PARM LIST SWAPED?
         BZ    SUBEXT2A            NO, OK
         BAL   R14,SWAP            PUT REAL PARM LIST BACK
SUBEXT2A MVC   HEADER+1(32),AIXMSG
         MVC   HEADER+33(90),STARS
         SR    R1,R1
         BAL   R14,PRINT
         L     RPLH,PLH
         L     RPLH,PLHXPLH(RPLH)     GET AIX PLH
         L     R10,PLHWAX(,RPLH)      GET PATH PLH'S WAX
         CLI   0(R10),X'73'           GET A WAX?
         BNE   SUBEXIT3               NO, PROBLEM.  TRY UPG
         ICM   RRPL,15,WAXURPL(R10)   GET PATH (USER'S) RPL
         BNZ   SUBEXIT4               GOT IT, GO SWAP POINTERS
         ICM   RRPL,15,PLHMRPL(RPLH)  GET PATH RPL FROM THE PATH PLH
         BNZ   SUBEXIT4               GOT IT, SWAP POINTERS
         L     RRPL,PLHCRPL(RPLH)     LAST TRY FOR PATH'S RPL
         B     SUBEXIT4
*
**** SWAP TO THE UPGRADE CONTROL BLOCKS
*
SUBEXIT3 TM    AIXOPT,AIXUPG       SWAP WHAT EVER TO UPGRADE PRINT
         BZ    SUBEXIT5            DOESN'T WANT UPG, SEE IF WE CAN EXT
         ICM   R7,15,UPGPTR        ARE WE ALREADY DOING A UPG?
         BNZ   SUBEXT3B            YES, TRY NEXT UPG
         L     RAMBL,AMBL          RESTORE THE AMBL REG
         ICM   R7,15,AMBLBIB(RAMBL) GET THE BIB
         BZ    SUBEXT3A            NO BIB, TRY OTHER AMBL
         ICM   R7,15,BIBUPT(R7)    IS THERE A UPG TABLE?
         BNZ   SUBEXT3B            YES, PROCESS IT
SUBEXT3A ICM   RAMBL,15,AMBLXPT(RAMBL)  IS THERE ANOTHER AMBL?
         BZ    SUBEXT3G            NO, NO UPG TO DO.
         ICM   R7,15,AMBLBIB(RAMBL)
         BZ    SUBEXT3G
         ICM   R7,15,BIBUPT(R7)    DOES THIS AMBL HAVE A UPG TABLE
         BZ    SUBEXT3G            NO, NO UPG'S
SUBEXT3B ST    R7,UPGPTR
         SR    R6,R6
         IC    R6,UPGCOUNT         GET COUNTER OF UPG'S DONE
         LA    R6,1(R6)            ADD ONE
         STC   R6,UPGCOUNT
         CLC   UPGCOUNT,UPTNOENT(R7)  HAVE WE DONE ALL THE UPGS?
         BH    SUBEXT3G            YES, EXIT
         TM    FLAG0,SWAPED        IS THE PARM LIST ALREADY SWAPED?
         BO    SUBEXT3C            YES, DON'T RE-SWAP IT
         BAL   R14,SWAP
SUBEXT3C IC    R9,TABLE(R6)        TRANSLATE THE UPG COUNTER FOR PRT
         ICM   R10,15,PLHWAX(RPLH) SEE IF THIS HAS ALREADY BEEN DONE
         BZ    SUBEXT3H            NO, HAS NOT.
         TM    STATUS,PATHDONE     PRINTED AS A PATH?
         BZ    SUBEXT3H            NO, GO DO IT
         MVC   HEADER+57(66),STARS
         MVC   HEADER+1(56),UPGREP
         STC   R9,HEADER+12
         OI    STATUS,UPGSHORT     ONLY DO ACB, RPL AND AMBL FOR THIS
         B     SUBEXT3I
SUBEXT3H MVC   HEADER+1(68),UPGMSG TELL THE USER ABOUT THE UPG
         STC   R9,HEADER+67
         MVC   HEADER+71(52),STARS
SUBEXT3I SR    R1,R1
         BAL   R14,PRINT
SUBEXT3D BCT   R6,SUBEXT3E         IS R7 POINTING TO CURRENT ENTRY
         B     SUBEXT3F            YES, GO PRINT IT
SUBEXT3E LA    R7,12(R7)           NO, POINT TO NEXT UPG TABLE ENTRY
         B     SUBEXT3D            SEE IF THIS IS CURRENT
SUBEXT3F L     RRPL,UPTRPL(R7)     GET UPG RPL
         L     RPLH,RPLPLHPT(RRPL) GET UPG PLH
         B     SUBEXIT4            GO PRIME THE REGS
SUBEXT3G SR    R10,R10             UPG ARE FINISHED.  CLEAN UP FOR EXIT
         ST    R10,UPGPTR          CLEAR UPG CONTROL FOR EXIT
         STC   R10,UPGCOUNT
         B     SUBEXIT5
*
**** SUBEXIT4 CHANGES THE CURRENT C/B POINTERS TO THE NEW C/B POINTERS
*
SUBEXIT4 L     RACB,RPLDACB(RRPL)  GET NEW ACB FROM NEW RPL
         L     R10,ACBAMBL(RACB)   GET NEW AMBL
         ST    RRPL,RPL            SAVE NEW RPL
         ST    R10,AMBL            SAVE NEW AMBL
         ST    RPLH,PLH            SAVE NEW PLH
         L     RAMB,AMBLDTA(R10)   GET NEW DATA AMB
         ICM   R6,15,AMBLIX(R10)   GET NEW INDEX AMB
         BNZ   SUBEXT4A            GOT ONE
         TM    FLAG2,INDEXCB       IS INDEX CB ON?
         BZ    SUBEXT4A            NO, BRANCH
         NI    FLAG2,X'FF'-INDEXCB YES, TURN IT OFF
         OI    STATUS,INDEXOFF     REMEMBER TO TURN IT BACK ON
SUBEXT4A ST    R6,IAMB             SAVE INDEX AMB ADDRESS
         ST    RAMB,DAMB           SAVE THE DATA AMB ADDRESS
         TM    STATUS,HEADOUT      WAS HEADER MESSAGE ISSUED?
         BZ    PHASE2              NO, START WITH IT
         B     PHASE3              YES, START WITH THE C/B'S
*
***** SUBEXIT5 CLEANS UP BEFORE THE ATTEMPT TO EXIT
*
SUBEXIT5 NI    STATUS,X'FF'-(BASEDONE+PATHDONE+UPGDONE)
         TM    FLAG0,SWAPED        WAS THE PARM LIST SWAPED?
         BZ    SUBEXIT6            NO, CONITNUE
         BAL   R14,SWAP            THAT IS, PUT IT BACK TO NORMAL
SUBEXIT6 TM    FLAG1,ADDRONLY      WAS THIS A ADDRESS ONLY PRINT?
         BZ    EXIT1               THAT'S ALL FOLKES, NOW RETURNING
         NI    FLAG1,X'FF'-PARMS   TURN OFF 'GOT PARAMETER LIST' BIT
         B     PARMPMT             GO RE-DO THE PARAMETER PROMPT
*
SWAP     TM    STATUS,INDEXOFF     WAS THE INDEX OPTION TURNED OFF?
         BZ    SWAP2
         NI    STATUS,X'FF'-INDEXOFF
         OI    FLAG2,INDEXCB
SWAP2    XI    FLAG0,SWAPED        SWAP OF PARM LIST SWAPS CONTROL BIT
         XC    FLAG2(3),AIXIN      SWAP REAL PARM LIST AND AIX LIST
         XC    AIXIN(3),FLAG2
         XC    FLAG2(3),AIXIN
         BR    R14
**********************************************************************
*        END PHASE3 CODE                                             *
**********************************************************************
         SPACE 3
**********************************************************************
********* CONVERT ADDRESS IN REG 0 TO PRINTABLE CHARACTERS ***********
**********************************************************************
         SPACE 1
CONVERT  EQU   *
         ST    R0,UNPACK
         UNPK  UNPACK(9),UNPACK(5)
         TR    UNPACK(8),TABLE-240
         BR    R14
         SPACE 3
**********************************************************************
*  PRINT ROUTINE
*    R0  STARTING ADDRESS TO BE DUMPED.
*    R1  LENGTH OF SNAP
*    R14 RETURN POINT
**********************************************************************
         SPACE 1
PUT      LA    R8,4                PUT FUNCTION CODE
         B     CALL                CALL IDA019SU
PRINT    SR    R8,R8               PRINT FUNCTION CODE
CALL     L     R15,IDAO19SU
         ST    R14,OUTREG          SAVE THE RETURN ADDRESS
         BALR  R14,R15             CALL IDA019SU
         L     R14,OUTREG
         TM    FLAG1,STOP          ERROR OCCUR?
         BO    EXIT1               YES, RETURN TO CALLER OF IDA019ST
         BR    R14                 RETURN TO CALLER
**********************************************************************
*        END OF PRINT CODE                                           *
**********************************************************************
         EJECT
**********************************************************************
* THE PATCH AREA CONTAINS A BRANCH TO PHASE2.  AT THE END OF THE     *
* CONDITION CHECK THERE IS A BRANCH TO PATCH1.  THIS AREA            *
* CAN BE USED TO ADD FURTHER CHECKS TO DETERMINE IF THE CONDITTIONS  *
* ARE CORRECT FOR A PRINT.                                           *
* AT THE TIME PATCH IS CALLED, REG4 POINTS TO THE RPL, REG2 HAS THE  *
* PLH ADDRESS AND REG 5 IS THE ACB'S.  YOU MAY USE REGS 6 THRU 10 AS *
* WORK REGS.                                                         *
* IF YOU DO NOT WANT TO TRACE THIS CALL, RETURN TO EXIT1.            *
* IF WANT TO TRACE THIS CALL, RETURN TO PHASE2.                      *
**********************************************************************
PATCH    DC    XL64'00'
PATCH1   B     PHASE2           USED FOR ADDRESSABILITY IN PATCH
         B     EXIT1
         EJECT
**********************************************************************
**********************************************************************
         DS    0F
TABLE    DC    C'0123456789ABCDEF'
TWOFOUR  DC    X'0024'
SIX      DC    X'0006'
MOV      DC    C',MOV'
LOC      DC    C',LOC'
DIR      DC    C',DIR'
SEQ      DC    C',SEQ'
SKP      DC    C',SKP'
SYN      DC    C',SYN'
ASY      DC    C',ASY'
KEQ      DC    C',KEQ'
KGE      DC    C',KGE'
GKY      DC    C',GKY'
FKY      DC    C',FKY'
ADR      DC    C',ADR'
KEY      DC    C',KEY'
CNV      DC    C',CNV'
UPD      DC    C',UPD'
NSP      DC    C',NSP'
R1N      DC    C'R1'
RZ       DC    C'RZ'
RI       DC    C'RI'
SE       DC    C'SE'
R3N      DC    C'R3'
R2N      DC    C'R2'
RF       DC    C'RF'
RE       DC    C'RE'
RU       DC    C'RU'
REQUEST  DC    C'GET   '
         DC    C'PUT   '
         DC    C'CHECK '
         DC    C'POINT '
         DC    C'ENDREQ'
         DC    C'ERASE '
         DC    C'VERIFY'
         DC    C'FORMAT'
         DC    C'FORMAT'
         DC    C'FORCE '
         DC    C'GETIX '
         DC    C'PUTIX '
         DC    C'SEARCH'
         DC    C'MARK  '
         DC    C'WRITE '
CALLMSG  DC    C'CALLER IDA019--, REQUEST ='
FLEW     DC    C', REQUEST SUCESSFUL'
FLOP     DC    C', REQUEST FAILED.  ERROR ='
IOOK     DC    C', I/O WAS SUCCESSFUL'
IOFAIL   DC    C', I/O FAILED'
RUNOP    DC    C', NO I/O FOR UPGRADE DONE'
PATH     DC    C', PATH'
AIX      DC    C', AIX'
BASE     DC    C', BASE'
USER     DC    C'USER    '
INDEX    DC    C'INDEX'
IOMB     DC    C'IOMB'
IOSB     DC    C'IOSB'
REGMSG   DC    C'REGISTERS WHEN TRACE CALLED. (REG 0 THRU 14)'
HOOKMSG  DC    C'**** COUNT =       HOOK NUMBER ='
STARS    DC    132C'*'
ACBMSG   DC    C'ACB AT LOCATION '
AMBLMSG  DC    C'AMBL AT LOCATION '
RPLMSG   DC    C'RPL AT LOCATION '
PLHMSG   DC    C'CURRENT PLH AT LOCATION '
BUFCMSG  DC    C'CURRENT DATA  BUFC AT LOCATION '
BUFCHDR  DC    C'BUFFC HEADER AT LOCATION '
BUFFMSG  DC    C'CURRENT DATA  BUFFER AT LOCATION '
BUFEMSG  DC    C'EMPTY BUFFER FOUND AT '
IOBMSG   DC    C'IOB  AT LOCATION '
CPAMSG   DC    C'DATA  CHANNEL PROGRAM AREA (CPA) AT LOCATION '
AMBMSG   DC    C'DATA  AMB AT LOCATION '
AMDSBMSG DC    C'DATA  AMDSB AT LOCATION '
ICWAMSG  DC    C'ICWA AT LOCATION '
DIWAMSG  DC    C'DIWA AT LOCATION '
IMWAMSG  DC    C'IMWA AT LOCATION '
LPMBMSG  DC    C'LPMB AT LOCATION '
EDBMSG   DC    C'DATA  EDB AT LOCATION '
ARDBMSG  DC    C'DATA  ARDB AT LOCATION '
DEBMSG   DC    C'DATA  DEB AT LOCATION '
IICBMSG  DC    C'IICB AT LOCATION '
DCBMSG   DC    C'IIP DCB AT LOCATION '
BSPHMSG  DC    C'DATA  BSPH AT LOCATION '
VSRTMSG  DC    C'VSRT AT LOCATION '
BIBMSG   DC    C'BIB AT LOCATION '
UPTMSG   DC    C'UPT AT LOCATION '
HEBMSG   DC    C'HEB AT LOCATION '
WAXMSG   DC    C'WAX AT LOCATION '
VATMSG   DC    C'VAT AT LOCATION '
PLHHDRMS DC    C'PLH HEADER AT LOCATION '
AIXMSG   DC    C'FOLLOWING PRINT IS AIX FOR BASE.'
ABASEMSG DC    C'FOLLOWING IS AIX''S BASE PRINT.'
UPGMSG   DC    C'FOLLOWING PRINT IS UPGRADE CLUSTER FOR A BASE. '
UPGCNT   DC    C'THIS IS UPG NUMBER  .'
UPGREP   DC    C'UPG NUMBER   IS SAME AS PATH PRINT. '
         DC    C'SHORT PRINT FOLLOWS.'
KEYMSG   DC    C'USER''S SEARCH ARGUMENT (KEY) AT LOCATION '
KEYADR   DC    C'         . KEY LENGTH = '
RECMSG   DC    C'USER I/O RECORD AT LOCATION '
RECADR   DC    C'         RECORD LENGTH = '
INTERMSG DC    C'INTERUPTING COUNT NUMBER     .  IRB CAUSING '
         DC    C'FOLLOWING PRINT'
CONTMSG  DC    C'INTERUPTED TRACE NUMBER      CONTINUING.'
IDAO19SU DC    V(IDA019SU)
         EJECT
         IDATRACE
         EJECT
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDA019ST CSECT
         DS    0F
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IDA019ST CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IOBSTDRD EQU   @01
CVTPTR   EQU   16
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHFLG2  EQU   IDAPLH+3
PLHEFLGS EQU   IDAPLH+4
PLHFLG3  EQU   IDAPLH+6
PLHAFLGS EQU   IDAPLH+7
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHJCODE EQU   IDAPLH+40
PLHRSCS  EQU   IDAPLH+43
PLHDIOB  EQU   IDAPLH+76
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHKEYPT EQU   IDAPLH+248
PLHTMRPL EQU   IDAPLH+265
PLHEND   EQU   IDAPLH+280
IDAAMB   EQU   0
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
IDAAMBL  EQU   0
AMBLEOV  EQU   IDAAMBL+12
AMBLEFLG EQU   AMBLEOV
AMBLDDNM EQU   IDAAMBL+16
AMBLIDF  EQU   AMBLDDNM
AMBLQ    EQU   AMBLIDF+7
AMBLVC   EQU   IDAAMBL+28
AMBLTYPE EQU   IDAAMBL+30
AMBLSHAR EQU   IDAAMBL+33
AMBLFLG1 EQU   IDAAMBL+35
AMBLFLG2 EQU   IDAAMBL+36
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
IDABIB   EQU   0
BIBHDR   EQU   IDABIB
BIBFLG1  EQU   BIBHDR+1
BIBRTNS  EQU   IDABIB+60
TIOT1    EQU   0
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCIOFL EQU   IDABUFC+2
BUFCFLG2 EQU   IDABUFC+3
BUFCPLH  EQU   IDABUFC+4
BUFCINV  EQU   IDABUFC+28
IDAUPT   EQU   0
UPTHDR   EQU   IDAUPT
UPTFLG0  EQU   UPTHDR+1
UPTSA    EQU   IDAUPT+16
UPTAXENT EQU   IDAUPT+88
UPTRPL   EQU   UPTAXENT
UPTFLG1  EQU   UPTAXENT+4
IDAVAT   EQU   0
VATHDR   EQU   IDAVAT
VATVSRT  EQU   IDAVAT+8
VATVC    EQU   IDAVAT+20
IDADIWA  EQU   0
DIWFLG1  EQU   IDADIWA+4
DIWFLG2  EQU   IDADIWA+5
DIWSAVE  EQU   IDADIWA+28
IDAIICB  EQU   0
IIW1CBF  EQU   IDAIICB+16
IIFLAG1  EQU   IDAIICB+24
IIFLAG2  EQU   IDAIICB+28
IIFLAG3  EQU   IDAIICB+36
IIREGSAV EQU   IDAIICB+60
IIAUD    EQU   IDAIICB+132
IIAUDHDR EQU   IIAUD
IIAUDFL1 EQU   IIAUDHDR
IIAUDFL2 EQU   IIAUDHDR+1
IIGMCNTR EQU   IIAUDHDR+2
IIGMAUD  EQU   IIAUD+4
AUDCSPLI EQU   IIGMAUD+4
AUDCSPLD EQU   IIGMAUD+12
AUDCSPLB EQU   IIGMAUD+20
AUDCSPLM EQU   IIGMAUD+28
IIGMNTRY EQU   0
IIGMSPLG EQU   IIGMNTRY+4
IDAHEB   EQU   0
HEBHDREL EQU   0
HEBFREMN EQU   HEBHDREL
HEBFLAGS EQU   HEBHDREL+8
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IDAICWA  EQU   0
ICWFLG1  EQU   IDAICWA+1
IDAEDBHD EQU   0
IDAEDB   EQU   0
EDBFLG1  EQU   IDAEDB+2
IDALPMB  EQU   0
LPMBFLGS EQU   IDALPMB+1
IDAARDB  EQU   0
ARDTYPE  EQU   IDAARDB+1
ARDPRF   EQU   IDAARDB+28
IDACPA   EQU   0
CPAWPHAD EQU   IDACPA+36
CPAWSEEK EQU   CPAWPHAD+1
CPARPHAD EQU   IDACPA+52
CPARSEEK EQU   CPARPHAD+1
CPASTAT1 EQU   IDACPA+83
CPAFLAGS EQU   IDACPA+84
CPAFLAG1 EQU   CPAFLAGS
CPAFLAG2 EQU   CPAFLAGS+1
CPACCW   EQU   0
IDABSPH  EQU   0
BSPHFLG1 EQU   IDABSPH+1
BSPHCSRC EQU   IDABSPH+28
BSPHFLG2 EQU   BSPHCSRC
IDAIMWA  EQU   0
IMWFLAGS EQU   IDAIMWA+1
IDAWAX   EQU   0
WAXFLG1  EQU   IDAWAX+1
IDARPLE  EQU   0
IDAVSRT  EQU   0
VSRTFLGS EQU   IDAVSRT+12
VSRTCSL  EQU   IDAVSRT+40
VSRTCSLF EQU   VSRTCSL
VSRTCSBF EQU   VSRTCSLF
VSRTCSPF EQU   VSRTCSLF
ICWKEY2  EQU   0
ICWKEY3  EQU   0
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
TIOENTRY EQU   TIOT1+24
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
BUFCRSC1 EQU   BUFCAVL
*                                      START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00052 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00051 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00048 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00047 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00020 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
VSRTCSLN EQU   VSRTCSL+5
VSRTCSSP EQU   VSRTCSL+4
VSRTCSAD EQU   VSRTCSL+1
VSRTCSBH EQU   VSRTCSLF
VSRTCSIO EQU   VSRTCSLF
VSRTCSPL EQU   VSRTCSLF
VSRTCSWS EQU   VSRTCSLF
VSRTCSVG EQU   VSRTCSPF
VSRTCSK7 EQU   VSRTCSBF
VSRTCSVS EQU   VSRTCSLF
VSRTCSFX EQU   VSRTCSLF
VSRTASCB EQU   IDAVSRT+36
VSRTVIOT EQU   IDAVSRT+32
VSRTWAH  EQU   IDAVSRT+28
VSRTCPAH EQU   IDAVSRT+24
VSRTBUFH EQU   IDAVSRT+20
VSRTPLHH EQU   IDAVSRT+16
VSRTSTRN EQU   IDAVSRT+15
VSRTKL   EQU   IDAVSRT+14
@NM00095 EQU   VSRTFLGS
VSRTBFRF EQU   VSRTFLGS
VSRTIOBF EQU   VSRTFLGS
VSRTLSRF EQU   VSRTFLGS
VSRTGSRF EQU   VSRTFLGS
VSRTEOV  EQU   IDAVSRT+8
VSRTID   EQU   IDAVSRT+4
VSRTLEN  EQU   IDAVSRT+2
@NM00094 EQU   IDAVSRT+1
VSRTBKID EQU   IDAVSRT
RPLSAVE2 EQU   IDARPLE+24
RPLSAVE  EQU   IDARPLE+20
@NM00093 EQU   IDARPLE+17
RPLIITSB EQU   IDARPLE+16
RPLRPLPT EQU   IDARPLE+12
RPLIIBFR EQU   IDARPLE+8
RPLDECB  EQU   IDARPLE+4
RPLIICB  EQU   IDARPLE
WAXXXXX3 EQU   IDAWAX+40
WAXSRAL  EQU   IDAWAX+36
WAXSRAA  EQU   IDAWAX+32
WAXBPLH  EQU   IDAWAX+28
WAXEPTR  EQU   IDAWAX+24
WAXXPTR  EQU   IDAWAX+20
WAXRCDA  EQU   IDAWAX+16
WAXURPL  EQU   IDAWAX+12
WAXIRPL  EQU   IDAWAX+8
WAXXXXX2 EQU   IDAWAX+6
WAXPL    EQU   IDAWAX+4
WAXLEN   EQU   IDAWAX+2
WAXNOADV EQU   WAXFLG1
WAXPS    EQU   WAXFLG1
WAXPUG   EQU   WAXFLG1
WAXSRAB  EQU   WAXFLG1
WAXID    EQU   IDAWAX
IMWKEY1  EQU   IDAIMWA+76
@NM00092 EQU   IDAIMWA+72
IMWNSOFF EQU   IDAIMWA+70
IMWCIMVN EQU   IDAIMWA+68
@NM00091 EQU   IDAIMWA+67
IMWSVIEL EQU   IDAIMWA+66
IMWIEL   EQU   IDAIMWA+65
IMWFGAIN EQU   IDAIMWA+64
IMWBUFP  EQU   IDAIMWA+60
IMWLBUFC EQU   IDAIMWA+56
IMWIPTR  EQU   IDAIMWA+52
IMWXPTR  EQU   IDAIMWA+48
IMWIKEYP EQU   IDAIMWA+44
IMWXKEYP EQU   IDAIMWA+40
IMWISWKA EQU   IDAIMWA+8
IMWIXSP  EQU   IDAIMWA+4
IMWLEN   EQU   IDAIMWA+2
IMWBSE   EQU   IMWFLAGS
IMWRIPL  EQU   IMWFLAGS
IMWNEWHL EQU   IMWFLAGS
IMWID    EQU   IDAIMWA
BSPH1ST  EQU   IDABSPH+60
BSPHUBTM EQU   IDABSPH+56
BSPHUTOP EQU   IDABSPH+52
BSPHNUIW EQU   IDABSPH+48
BSPHUIW  EQU   IDABSPH+44
BSPHFND  EQU   IDABSPH+40
BSPHRDS  EQU   IDABSPH+36
BSPHCPLH EQU   IDABSPH+32
BSPHPSUC EQU   BSPHCSRC+2
@NM00090 EQU   BSPHCSRC+1
BSPHPCUC EQU   BSPHFLG2
BSPHAPRT EQU   BSPHFLG2
BSPHBSZ  EQU   IDABSPH+24
BSPHMDBT EQU   IDABSPH+20
BSPHBUFC EQU   IDABSPH+16
BSPHERCT EQU   IDABSPH+14
BSPHBFNO EQU   IDABSPH+12
BSPHNBSP EQU   IDABSPH+8
BSPHNM   EQU   IDABSPH+4
BSPHLEN  EQU   IDABSPH+2
BSPHBFRF EQU   BSPHFLG1
BSPHIOBF EQU   BSPHFLG1
BSPHID   EQU   IDABSPH
CPACCWTC EQU   CPACCW+24
CPACCWSI EQU   CPACCW+16
CPACCWSS EQU   CPACCW+8
CPACCWSK EQU   CPACCW
CPACPCHN EQU   IDACPA+92
CPANXT1  EQU   IDACPA+88
CPAWSECT EQU   IDACPA+87
CPARSECT EQU   IDACPA+86
CPATKOFL EQU   CPAFLAG2
CPAPFENT EQU   CPAFLAG2
CPAXLRA  EQU   CPAFLAG2
CPARREPL EQU   CPAFLAG2
CPAWREPL EQU   CPAFLAG2
@NM00089 EQU   CPAFLAG1
CPACHNED EQU   CPAFLAG1
CPARRPS  EQU   CPAFLAG1
CPAWRPS  EQU   CPAFLAG1
CPARV    EQU   CPAFLAG1
CPAWCV   EQU   CPAFLAG1
CPAWV    EQU   CPAFLAG1
CPAVPLV  EQU   CPASTAT1
CPASSECT EQU   IDACPA+82
CPABCINV EQU   IDACPA+80
CPABLKSZ EQU   IDACPA+76
CPAWORK2 EQU   IDACPA+72
CPAWORK1 EQU   IDACPA+68
CPAVPL   EQU   IDACPA+64
CPAIDAL  EQU   IDACPA+60
@NM00088 EQU   CPARPHAD+7
CPARSID  EQU   CPARSEEK+2
CPARBB   EQU   CPARSEEK
@NM00087 EQU   CPARPHAD
CPAFWCNT EQU   IDACPA+48
CPAWSID  EQU   IDACPA+44
CPAWPHR  EQU   CPAWPHAD+7
CPAWCHR  EQU   CPAWSEEK+2
CPAWBB   EQU   CPAWSEEK
@NM00086 EQU   CPAWPHAD
CPARCPE  EQU   IDACPA+32
CPARCPS  EQU   IDACPA+28
CPARREAL EQU   IDACPA+24
CPAWCKE  EQU   IDACPA+20
CPAWCKS  EQU   IDACPA+16
CPAWCPE  EQU   IDACPA+12
CPAWCPS  EQU   IDACPA+8
CPAWREAL EQU   IDACPA+4
CPALEN   EQU   IDACPA+2
@NM00085 EQU   IDACPA+1
CPAID    EQU   IDACPA
ARDKEYS  EQU   IDAARDB+29
@NM00084 EQU   ARDPRF
ARDPRFMT EQU   ARDPRF
ARDPRSS  EQU   ARDPRF
ARDRELNO EQU   IDAARDB+26
ARDVOLSR EQU   IDAARDB+20
ARDERBA  EQU   IDAARDB+16
ARDHRBA  EQU   IDAARDB+12
ARDHKRBA EQU   IDAARDB+8
ARDNPTR  EQU   IDAARDB+4
ARDLEN   EQU   IDAARDB+2
ARDUSED  EQU   ARDTYPE
ARDEOD   EQU   ARDTYPE
ARDUOVFL EQU   ARDTYPE
ARDSS    EQU   ARDTYPE
ARDHLI   EQU   ARDTYPE
ARDKR    EQU   ARDTYPE
ARDID    EQU   IDAARDB
LPMBSST  EQU   IDALPMB+28
LPMBEXT  EQU   IDALPMB+24
@NM00083 EQU   IDALPMB+22
LPMBLKTR EQU   IDALPMB+20
LPMTPC   EQU   IDALPMB+18
LPMTRKAU EQU   IDALPMB+16
LPMBLKSZ EQU   IDALPMB+12
LPMBPTRK EQU   IDALPMB+8
LPMAUSZ  EQU   IDALPMB+4
LPMBLEN  EQU   IDALPMB+2
@NM00082 EQU   LPMBFLGS
LPMBSSTH EQU   LPMBFLGS
LPMBTOFL EQU   LPMBFLGS
LPMSS    EQU   LPMBFLGS
LPMREPL  EQU   LPMBFLGS
LPMBRPS  EQU   LPMBFLGS
LPMBID   EQU   IDALPMB
EDBTKBAL EQU   IDAEDB+20
EDBHIRBA EQU   IDAEDB+16
EDBLORBA EQU   IDAEDB+12
EDBSTTRK EQU   IDAEDB+8
EDBLPMBA EQU   IDAEDB+4
EDBM     EQU   IDAEDB+3
@NM00081 EQU   EDBFLG1
EDBPSDS  EQU   EDBFLG1
EDBTOFLW EQU   EDBFLG1
EDBLKR   EQU   EDBFLG1
@NM00080 EQU   IDAEDB
EDBLPMBC EQU   IDAEDBHD+4
EDBLEN   EQU   IDAEDBHD+2
EDBNO    EQU   IDAEDBHD+1
EDBID    EQU   IDAEDBHD
ICWKEY1  EQU   IDAICWA+60
ICWCERP  EQU   IDAICWA+59
ICWCEL   EQU   IDAICWA+58
ICWCEF   EQU   IDAICWA+57
ICWCER   EQU   IDAICWA+56
ICWPTL   EQU   IDAICWA+55
ICWREQ   EQU   IDAICWA+54
ICWCRSEG EQU   IDAICWA+52
ICWNOSEG EQU   IDAICWA+50
ICWNEST  EQU   IDAICWA+48
ICWKEY3L EQU   IDAICWA+46
ICWKEY2L EQU   IDAICWA+44
ICWKEY1L EQU   IDAICWA+42
ICWLN    EQU   IDAICWA+40
ICWARDBP EQU   IDAICWA+36
ICWTPTR  EQU   IDAICWA+32
ICWTBASE EQU   IDAICWA+28
ICWADD   EQU   IDAICWA+24
ICWSCNT  EQU   IDAICWA+22
ICWPSEO  EQU   IDAICWA+20
ICWPRBA  EQU   IDAICWA+16
ICWCRBA  EQU   IDAICWA+12
ICWBUFC  EQU   IDAICWA+8
ICWCHN   EQU   IDAICWA+4
ICWLEN   EQU   IDAICWA+2
ICWENDRQ EQU   ICWFLG1
ICWSPLIT EQU   ICWFLG1
ICWKRDS  EQU   ICWFLG1
ICWVNE   EQU   ICWFLG1
ICWVSE   EQU   ICWFLG1
ICWRBAOK EQU   ICWFLG1
ICWWAGM  EQU   ICWFLG1
ICWWNF   EQU   ICWFLG1
ICWID    EQU   IDAICWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
HEBNBYTE EQU   HEBHDREL+16
HEBELCHN EQU   HEBHDREL+12
HEBAVSP  EQU   HEBHDREL+9
HEBRTFLG EQU   HEBFLAGS
HEBIOSUP EQU   HEBFLAGS
HEBKEY7  EQU   HEBFLAGS
HEBKEY5  EQU   HEBFLAGS
HEBJSTCB EQU   HEBFLAGS
HEBBLKPT EQU   HEBFREMN+4
HEBLN    EQU   HEBFREMN+1
HEBSP    EQU   HEBFREMN
HEBHDELS EQU   IDAHEB+12
HEBCNT   EQU   IDAHEB+10
@NM00079 EQU   IDAHEB+8
HEBNHEB  EQU   IDAHEB+4
HEBLEN   EQU   IDAHEB+2
@NM00078 EQU   IDAHEB+1
HEBID    EQU   IDAHEB
IIGMLEN  EQU   IIGMSPLG+1
IIGMPOOL EQU   IIGMSPLG
IIGMADDR EQU   IIGMNTRY
AUDCLM   EQU   AUDCSPLM+1
AUDCSPM  EQU   AUDCSPLM
AUDCMSGA EQU   IIGMAUD+24
AUDCLB   EQU   AUDCSPLB+1
AUDCSPB  EQU   AUDCSPLB
AUDCBFRS EQU   IIGMAUD+16
AUDCLD   EQU   AUDCSPLD+1
AUDCSPD  EQU   AUDCSPLD
AUDCDEB  EQU   IIGMAUD+8
AUDCLI   EQU   AUDCSPLI+1
AUDCSPI  EQU   AUDCSPLI
AUDCIICB EQU   IIGMAUD
@NM00077 EQU   IIAUDFL2
AUDDEBXF EQU   IIAUDFL2
AUDBFRRT EQU   IIAUDFL2
AUDBFREX EQU   IIAUDFL2
AUDACBRC EQU   IIAUDFL2
AUDACBCL EQU   IIAUDFL2
AUDIIFBF EQU   IIAUDFL2
AUDURSYN EQU   IIAUDFL1
AUDIISYN EQU   IIAUDFL1
AUDPRMOD EQU   IIAUDFL1
AUDDCBRT EQU   IIAUDFL1
AUDDCBEX EQU   IIAUDFL1
AUDACBRO EQU   IIAUDFL1
AUDACBOP EQU   IIAUDFL1
@NM00076 EQU   IIREGSAV+12
IIREGFC  EQU   IIREGSAV+8
IIREGBC  EQU   IIREGSAV+4
@NM00075 EQU   IIREGSAV
IISAMSYN EQU   IDAIICB+52
IISVCLST EQU   IDAIICB+48
IITBUFL  EQU   IDAIICB+45
IIBUFNO  EQU   IDAIICB+44
IIMSGPTR EQU   IDAIICB+40
IIMSGL   EQU   IDAIICB+37
@NM00074 EQU   IIFLAG3
MBFALN   EQU   IIFLAG3
IIBUFL   EQU   IDAIICB+34
IIKEYSL  EQU   IDAIICB+32
IIRPLL   EQU   IDAIICB+29
MKEYLE   EQU   IIFLAG2
MBUFNO   EQU   IIFLAG2
MBUFL    EQU   IIFLAG2
MRECFM   EQU   IIFLAG2
MOPTCD   EQU   IIFLAG2
MBLKSI   EQU   IIFLAG2
MLRECL   EQU   IIFLAG2
MRKP     EQU   IIFLAG2
IIACBL   EQU   IDAIICB+25
IIQBFRS  EQU   IIFLAG1
@NM00073 EQU   IIFLAG1
IIFTEST  EQU   IIFLAG1
IIDATA   EQU   IIFLAG1
IIFCLOSE EQU   IIFLAG1
IIFACBCL EQU   IIFLAG1
IIFGET   EQU   IIFLAG1
IIFSCAN  EQU   IIFLAG1
IIKEYPT  EQU   IDAIICB+20
IIMAXLRL EQU   IIW1CBF+2
IISAVLRL EQU   IIW1CBF
IIRPLPTR EQU   IDAIICB+12
IIACBPTR EQU   IDAIICB+8
IIDCBPTR EQU   IDAIICB+4
IICBLEN  EQU   IDAIICB+2
@NM00072 EQU   IDAIICB+1
IICBID   EQU   IDAIICB
@NM00071 EQU   IDADIWA+92
@NM00070 EQU   IDADIWA+88
@NM00069 EQU   IDADIWA+84
@NM00068 EQU   IDADIWA+80
@NM00067 EQU   IDADIWA+76
@NM00066 EQU   IDADIWA+72
@NM00065 EQU   IDADIWA+68
@NM00064 EQU   IDADIWA+64
@NM00063 EQU   IDADIWA+60
@NM00062 EQU   IDADIWA+56
DIWINRBA EQU   IDADIWA+52
DIWRKCT  EQU   IDADIWA+48
DIWSAVE5 EQU   DIWSAVE+16
DIWSAVE4 EQU   DIWSAVE+12
DIWSAVE3 EQU   DIWSAVE+8
DIWSAVE2 EQU   DIWSAVE+4
DIWSAVE1 EQU   DIWSAVE
DIWSPLTP EQU   IDADIWA+24
DIWBUFC  EQU   IDADIWA+20
DIWPLH   EQU   IDADIWA+16
DIWHRBA  EQU   IDADIWA+12
DIWLRBA  EQU   IDADIWA+8
@NM00061 EQU   IDADIWA+6
DIWFSPF  EQU   DIWFLG2
DIW1ST   EQU   DIWFLG1
DIWNOT1  EQU   DIWFLG1
DIWSHIFT EQU   DIWFLG1
DIWGSPC  EQU   DIWFLG1
DIWEOKR  EQU   DIWFLG1
DIWPFERR EQU   DIWFLG1
DIWCISPL EQU   DIWFLG1
DIWCAS   EQU   DIWFLG1
DIWLEN   EQU   IDADIWA+2
DIWATV   EQU   IDADIWA+1
DIWID    EQU   IDADIWA
VATAMBL  EQU   IDAVAT+28
VATNAE   EQU   IDAVAT+24
@NM00060 EQU   IDAVAT+22
VATENO   EQU   VATVC+1
VATVRT   EQU   VATVC
VATPAMBL EQU   IDAVAT+16
VATVPTR  EQU   VATVSRT+4
VATVUSE  EQU   VATVSRT
VATNEXT  EQU   IDAVAT+4
VATLEN   EQU   VATHDR+2
@NM00059 EQU   VATHDR+1
VATID    EQU   VATHDR
UPTBG    EQU   UPTAXENT+10
UPTLNCDE EQU   UPTAXENT+9
UPTPASS  EQU   UPTAXENT+8
UPTRKP   EQU   UPTAXENT+6
UPTF1PUD EQU   UPTFLG1+1
UPTF1PNU EQU   UPTFLG1+1
UPTF1ERA EQU   UPTFLG1+1
UPTF1PHY EQU   UPTFLG1+1
UPTF1LOG EQU   UPTFLG1+1
UPTF1BKO EQU   UPTFLG1+1
UPTF1UPG EQU   UPTFLG1
UPTF1RTY EQU   UPTFLG1
UPTF1KEY EQU   UPTFLG1
UPTF1NRF EQU   UPTFLG1
UPTF1NOP EQU   UPTFLG1
UPTF1NUK EQU   UPTFLG1
UPTF1ATV EQU   UPTFLG1
UPTF1LST EQU   UPTFLG1
UPTF1LOP EQU   UPTRPL
UPTR15   EQU   UPTSA+16
UPTR14   EQU   UPTSA+12
UPTSARES EQU   UPTSA+11
@NM00058 EQU   UPTSA+10
UPTBERCD EQU   UPTSA+9
UPTBEREG EQU   UPTSA+8
UPTLSA   EQU   UPTSA+4
UPTBRPL  EQU   UPTSA
UPTLLEN  EQU   IDAUPT+14
UPTNOENT EQU   IDAUPT+13
UPTRSC   EQU   IDAUPT+12
UPTOLD   EQU   IDAUPT+8
UPTNEW   EQU   IDAUPT+4
UPTLEN   EQU   UPTHDR+2
UPTPWS   EQU   UPTFLG0
UPTID    EQU   UPTHDR
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCWLEN EQU   BUFCINV
BUFCNXT1 EQU   IDABUFC+24
BUFCBAD  EQU   IDABUFC+20
BUFCCPA  EQU   IDABUFC+16
BUFCORBA EQU   IDABUFC+12
BUFCDDDD EQU   IDABUFC+8
BUFCAMB  EQU   BUFCPLH
@NM00057 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCMW   EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00056 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00055 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00054 EQU   CVTFIX+248
@NM00053 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00050 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00049 EQU   IEZJSCB
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
BIBVSRTP EQU   IDABIB+104
BIBASCB  EQU   IDABIB+100
BIBDDNM  EQU   IDABIB+92
BIBSTPNM EQU   IDABIB+84
BIBJOBNM EQU   IDABIB+76
BIBSIOAP EQU   BIBRTNS+12
BIBASYRT EQU   BIBRTNS+8
BIBCEAPP EQU   BIBRTNS+4
BIBINTRF EQU   BIBRTNS
BIBVGTT  EQU   IDABIB+56
BIBPSAB  EQU   IDABIB+52
BIBCSL   EQU   IDABIB+48
BIBWSHD  EQU   IDABIB+44
BIBVCRT  EQU   IDABIB+40
BIBHEBFQ EQU   IDABIB+36
BIBHEBPT EQU   IDABIB+32
BIBPRSPH EQU   IDABIB+28
BIBSPHPT EQU   IDABIB+24
BIBPAMBL EQU   IDABIB+20
BIBDACB  EQU   IDABIB+16
BIBVMT   EQU   IDABIB+12
BIBUPT   EQU   IDABIB+8
@NM00046 EQU   IDABIB+5
BIBFLG2  EQU   IDABIB+4
BIBLEN   EQU   BIBHDR+2
@NM00045 EQU   BIBFLG1
BIBCKPT  EQU   BIBFLG1
BIBREST  EQU   BIBFLG1
BIBVIRT  EQU   BIBFLG1
BIBID    EQU   BIBHDR
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00044 EQU   IDAAMDSB+41
@NM00043 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDCINV  EQU   IDAAMDSB+20
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00042 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00041 EQU   RPLRBAR+3
@NM00040 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
AMBLCMB  EQU   IDAAMBL+64
AMBLBIB  EQU   IDAAMBL+60
AMBLIX   EQU   IDAAMBL+56
AMBLDTA  EQU   IDAAMBL+52
AMBLMIDS EQU   IDAAMBL+42
AMBLNIDS EQU   IDAAMBL+41
@NM00039 EQU   IDAAMBL+40
AMBLNUM  EQU   IDAAMBL+38
AMBLNST  EQU   IDAAMBL+37
@NM00038 EQU   AMBLFLG2
AMBLSTAG EQU   AMBLFLG2
@NM00037 EQU   AMBLFLG2
AMBLDUMY EQU   AMBLFLG1
AMBLCAT  EQU   AMBLFLG1
AMBLUCRA EQU   AMBLFLG1
AMBLSCRA EQU   AMBLFLG1
AMBLVVIC EQU   AMBLFLG1
AMBLUPD  EQU   AMBLFLG1
AMBLCINV EQU   AMBLFLG1
AMBLFULL EQU   AMBLFLG1
AMBLLEN  EQU   IDAAMBL+34
@NM00036 EQU   AMBLSHAR
AMBLWRIT EQU   AMBLSHAR
AMBLCATO EQU   AMBLSHAR
AMBLPRIM EQU   AMBLSHAR
AMBLID   EQU   IDAAMBL+32
@NM00035 EQU   IDAAMBL+31
@NM00034 EQU   AMBLTYPE
AMBLFIX  EQU   AMBLTYPE
AMBLBASE EQU   AMBLTYPE
AMBLAIX  EQU   AMBLTYPE
AMBLUPGR EQU   AMBLTYPE
AMBLPATH EQU   AMBLTYPE
AMBLENO  EQU   AMBLVC+1
AMBLVRT  EQU   AMBLVC
AMBLXPT  EQU   IDAAMBL+24
AMBLDFR  EQU   AMBLQ
AMBLESDS EQU   AMBLQ
AMBLKSDS EQU   AMBLQ
AMBLUBF  EQU   AMBLQ
AMBLFSTP EQU   AMBLQ
AMBLLSR  EQU   AMBLQ
AMBLGSR  EQU   AMBLQ
AMBLDDC  EQU   AMBLQ
AMBLDCI  EQU   AMBLIDF+4
AMBLCACB EQU   AMBLIDF
@NM00033 EQU   AMBLEOV+2
AMBLCOMP EQU   AMBLEOV+1
AMBLESET EQU   AMBLEFLG
AMBLWAIT EQU   AMBLEFLG
AMBLACB  EQU   IDAAMBL+8
AMBLSCHN EQU   IDAAMBL+4
AMBLPCHN EQU   IDAAMBL
AMBTRACE EQU   IDAAMB+120
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00032 EQU   AMBCSWD1+1
@NM00031 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00030 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00029 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00028 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00027 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00026 EQU   AMBINFL
@NM00025 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00024 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00023 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00022 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00021 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBDSB   EQU   IDAAMB+20
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00019 EQU   IDAPLH+266
@NM00018 EQU   PLHTMRPL
PLHTMIOB EQU   PLHTMRPL
PLHTMINX EQU   PLHTMRPL
PLHTMDTA EQU   PLHTMRPL
PLHTMDIW EQU   PLHTMRPL
PLHTMBUF EQU   PLHTMRPL
PLHTERM  EQU   PLHTMRPL
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSLRBA EQU   IDAPLH+244
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00017 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHISPLP EQU   IDAPLH+196
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00016 EQU   IDAPLH+172
@NM00015 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHCHAIN EQU   IDAPLH+112
PLHAMB   EQU   IDAPLH+108
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00014 EQU   PLHRSCS
PLHDBPER EQU   PLHRSCS
PLHDSERR EQU   PLHRSCS
PLHASYER EQU   PLHRSCS
@NM00013 EQU   PLHRSCS
PLHBUFHD EQU   PLHRSCS
PLHINEOV EQU   PLHRSCS
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHUCODE EQU   PLHJCODE
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHUPECB EQU   PLHJORBA
PLHDSIDA EQU   IDAPLH+24
PLHCRPL  EQU   IDAPLH+20
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHVAMB  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHSLVLD EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00012 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHIWAIT EQU   PLHFLG2
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
@NM00011 EQU   PLHFLG1
PLHDRPND EQU   PLHFLG1
PLHASYRQ EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00010 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00009 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00008 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00007 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00006 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00005 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00004 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00003 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00002 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00001 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
*                                      END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IDA019ST,(C'PLS1836',0701,78209)
