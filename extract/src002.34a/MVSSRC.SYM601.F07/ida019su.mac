         TITLE 'IDA019SU  (IDATRACE)                                   *
                        '
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 200
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*            /*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
RAMB     EQU   R3
         USING PHASE1,R12,R11
         USING IDATRACE,R13
         EJECT
*****************************************************
IDA019SU CSECT
PHASE1   STM   R0,R15,PRTSAVE          SAVE REGS IN WORKAREA
         LR    R12,R15
         LA    R11,2048(R12)
         LA    R11,2048(R11)
         B     PROLOG
         DS    0F
         DC    C'IDA019SU'
         DC    C'&SYSDATE'
PROLOG   LA    R3,EXIT                 NEED TO SET EXIT REG
         LR    R14,R3
         CH    R8,=X'0005'             VALID FUNCTION CODE?
         BH    EXIT                    NO, EXIT
         SLL   R8,2                    CODE X 4
         B     BRTABLE(R8)             BRANCH TO BRANCH TABLE
BRTABLE  B     PRINT                   FC=0
         B     PARMPMT                 FC=1
         B     INITIAL                 FC=2
         B     RESET                   FC=3
         B     PUT                     FC=4
         B     ABEND                   FC=5
EXIT     LM    R0,R15,PRTSAVE
         BR    R14                     RETURN TO IDA019ST
         SPACE 3
**********************************************************************
* THE FOLLOWING CODE PROMPTS FOR THE VARIOUS INPUT PARAMETERS.  THE  *
* AMOUNT OF PROMPTING DONE IS DEPENDENT ON THE FIRST PARAMETER GIVEN.*
**********************************************************************
         SPACE 1
PARMPMT  TM    FLAG1,PARMS         WAS INITAL DONE ONCE?
         BO    PARMPMT1            YES, DON'T INITIALIZE THE WTOR LIST
         MVI   ROUTCDE+2,X'40'     INITIAL WTOR PARM LIST
         MVI   ROUTCDE+3,X'20'
         MVI   REPLYLYL,X'B0'      SET REPLY LENGTH
         LA    R5,REPLY@
         STCM  R5,7,REPLYIN        SET REPLY INPUT AREA
         LA    R5,ECB@
         ST    R5,RELYECB          SET REPLY ECB ADDRESS
         MVI   MSGLNG+2,X'80'
         L     R5,CVTPTR(R0)       GET CVT ADDRESS
         L     R5,CVTTCBP(R5)      GET TCB WORDS
         L     R5,0(0,R5)          GET TCB ADDRESS
         L     R5,TCBTIO(R5)       GET TIOT ADDRESS
         MVC   JOBNAME(8),TIOCNJOB(R5)    GET JOB NAME
         MVC   STEPNAME(8),TIOCSTEP(R5)   GET STEP NAME
         L     RAMB,AMBIN          GET ADDRESS OF THE AMB
         AH    R5,AMBTIOT(,RAMB)   POINT TO CLUSTERS DDNAME
         MVC   DDNAME(8),4(R5)     GET DDNAME TO BE USED IN MESSAGES
PARMPMT1 XC    FLAG1(10),FLAG1     CLEAR OUT THE INPUT PARMS.
         LA    R1,PARMPRMT
         BAL   R14,PROMPT          GET THE PARM LIST.
         CLI   REPLY@+10,X'00'     WAS REPLY TO LONG?
         BNE   BADPARM             YES, TRY IT AGAIN
         OI    FLAG1,PARMS
         CLC   END(3),REPLY@       DOES USER WISH TO STOP TRACE?
         BNE   PARMPMT2            NO, CONTINUE
         OI    FLAG1,STOP
         B     RESET               SEE IF DCB NEEDS TO BE CLOSED
PARMPMT2 CLC   FECNT,REPLY@        IS THIS COUNT ONLY
         BNE   PARMPMT3
         OI    FLAG1,COUNTOLY      COUNT ONLY FLAG
         LA    R0,COUNT            TELL USER WHERE THE COUNT FIELD IS.
         BAL   R14,CONVERT
         XC    DLLLINE,DLLLINE
         MVC   DLLLINE(44),COUNTMSG
         MVC   DLLLINE+35(8),UNPACK
         LA    R1,DLLLINE
         OI    STATUS,WTOR         NO REPLY NEEDED
         BAL   R14,PROMPT
         B     TRACENUM
BADPARM  NI    FLAG1,X'FF'-PARMS
BADDD    LA    R1,BADMSG           ISSUING IDA031I TO DO RESTART
         OI    STATUS,WTOR         DO NOT WANT A WAIT FOR REPLY
         BAL   R14,PROMPT
         TM    FLAG0,NODDNAME      WAS THE BAD INPUT FROM DDANME?
         BO    GETDD               YES, RETURN TO DDNAME PROMPT
         B     PARMPMT             NO, REDO THE PARM PROMPT
PARMPMT3 BAL   R14,PACKER
         CLI   REPLY@,X'FE'
         BE    TRACENUM            INPUT OK.
         CLI   REPLY@,X'FA'        ADDRESS ONLY?
         BNE   BADPARM             NO, BAD INPUT.  TRY AGAIN
         NI    REPLY@+4,X'FF'-(REGX+COUNTX) NO REGS OR COUNT WITH 'FA'
         OI    FLAG1,ADDRONLY      WANTS JUST ADDRESS
         L     R7,COUNT            SUBTRACT THIS CALL FROM THE COUNT
         BCTR  R7,R0
         ST    R7,COUNT
TRACENUM MVC   FLAG2(4),REPLY@+1   SAVE THE PARMS
         TM    FLAG2,DATACB+INDEXCB
         BNZ   TRACE@01            IF REPLY DIDN'T ASK FOR EITHER DATA-
         OI    FLAG2,DATACB+INDEXCB  OR INDEX CB'S, GIVE HIM BOTH
TRACE@01 LA    R1,WHEREMSG         FIND TRACE NUMBER TO USE
         BAL   R14,PROMPT
         LA    R9,REPLY@          FOLLOWING CODE STRIPS COMMAS AND
         LA    R8,HOLDREGS        - PADS HOOK NUMBERS TO TWO CHARACTERS
         SR    R7,R7
STRIP1   IC    R7,0(,R9)          GET FIRST BYTE OF INPUT
         STC   R7,0(,R8)          STORE IT IN INPUT BUILD AREA
         LA    R9,1(R9)
         CLI   0(R9),X'6B'        IS INPUT A COMMA?
         BE    ADDF0              YES, ADD THE X'F0'
         CLI   0(R9),X'00'        IS IT BLANK?
         BNE   STRIP3             MUST ADD F0 IF BLANK
ADDF0    MVI   0(R8),X'F0'        PUT IN PAD CHARACTER
         LA    R8,1(R8)
         STC   R7,0(,R8)          STORE FIRST BYTE OF SET
         CLI   0(R9),X'00'        LAST BYTE?
         BE    STRIP5             YES, FINISHED PACKING
         LA    R9,1(R9)           UP THE INPUT LOCATION
STRIP2   LA    R8,1(R8)           UP THE OUTPUT LOCATION
         LA    R10,REPLY@+10
         CR    R9,R10             ARE WE FINISHED?
         BL    STRIP1             NO, DO NEXT SET
         B     STRIP5
STRIP3   IC    R7,0(,R9)          NO PADDING WAS NEEDED, STORE NEXT
         LA    R8,1(R8)           - CHARACTER IN OUTPUT
         STC   R7,0(R8)
STRIP4   LA    R9,1(R9)           POINT TO NEXT INPUT CHARACTER
         CLI   0(R9),X'6B'        IS IT A COMMA?
         BNE   STRIP2             NO, GO PROCESS IT.
         B     STRIP4             TRY NEXT INPUT CHARACTER
STRIP5   XC    REPLY@,REPLY@
         MVC   REPLY@(8),HOLDREGS SAVE EDITED INPUT
         BAL   R14,PACKER
         MVC   HOOK,REPLY@
         TM    FLAG1,COUNTOLY
         BO    EXIT
AIXPMT   TM    FLAG5,AIXX          WANT AIX RE-PROMPT?
         BZ    ERRORPMT            NO, CONTINUE
         LA    R1,AIXPARM
         BAL   R14,PROMPT          GO GET AIX LIST
         BAL   R14,PACKER
         MVC   AIXIN(4),REPLY@+1   SAVE PARM LIST
         CLI   REPLY@,X'FE'        WAS A VALID PARM LIST GOTTEN?
         BE    ERRORPMT            YES, CONTINUE.
         CLI   REPLY@,X'FA'
         BNE   BADPARM             NO, REPROMPT
ERRORPMT TM    FLAG5,ERRCDPMT      WANT ERROR CODE PROMPT?
         BZ    CNTPMT
         LA    R1,ERRPRMT
         BAL   R14,PROMPT          PROMPT FOR ERROR CODE
         OI    FLAG1,RMERRCD
         CLI   REPLY@,X'C1'        WAS REPLY 'ANY'?
         BE    CNTPMT              YES,DON'T STORE IT.
         BAL   R14,PACKER
         MVC   FLAG6,REPLY@        SAVE ERROR CODE
CNTPMT   TM    FLAG5,COUNTX        WANT COUNT VALUES SET?
         BZ    EXIT                NO, RETURN
         LA    R1,CNTPRMTS
         BAL   R14,PROMPT          GET START VALUE
         BAL   R14,PACKER
         BAL   R14,PACKSHFT        RIGHT JUSTIFY INPUT
         MVC   COUNTS,REPLY@       SAVE START VALUE
         LA    R1,CNTPRMTE
         BAL   R14,PROMPT          GET END COUNT VALUE
         BAL   R14,PACKER
         BAL   R14,PACKSHFT        RIGHT JUSTIFY INPUT
         MVC   COUNTE,REPLY@       SAVE END COUNT VALUE
         OI    FLAG1,COUNTING
         B     EXIT                PROMPT FINSHED, RETURN TO CALLER.
         EJECT
**********************************************************************
* PACKER TAKES THE DATA IN 'REPLY' AND CONVERTS THE 8 BYTES OF       *
* EBCDIC TO 4 BYTES OF HEX.  FOR INSTANCE, X'C6C5F1F2F3F4F5F6' IN    *
* REPLY WOULD BECOME X'FE12345600000000' IN REPLY.                   *
**********************************************************************
         SPACE
PACKER   LA    R7,REPLY@           START ADDRESS
         SR    R8,R8
         LA    R6,10               LOOP COUNT
PACKERL  TM    0(R7),X'FF'         IS THIS BYTE BLANK?
         BZ    PACKERE             YES, DON'T TRANSLATE
         TM    0(R7),X'30'         IS BYTE NUMERIC?
         BO    PACKERN
         NI    0(R7),X'0F'         STRIP OFF ALPA ZONE
         TR    0(1,R7),TABLE2
         B     PACKERE-4
PACKERN  NI    0(R7),X'0F'         JUST STRIP ZONE OFF FOR NUMERIC
         LA    R8,4(R8)            COUNT OF HALF BYTES PROCESSED
PACKERE  LA    R7,1(R7)            NEXT BYTE
         BCT   R6,PACKERL
         MVI   REPLY@+11,X'FF'
         PACK  REPLY@(11),REPLY@(11)
         MVC   REPLY@(8),REPLY@+2
         LM    R0,R1,REPLY@
         STH   R8,INLENGTH
         XC    REPLY@,REPLY@
         SLDL  R0,24(R0)           SHIFT OUT THE UNUSED BYTES
         STM   R0,R1,REPLY@
         BR    R14
PACKSHFT LA    R8,32               32 BITS IN A WORD
         SH    R8,INLENGTH         MINIS LENGTH OF INPUT
         L     R0,REPLY@           GET INPUT
         SRL   R0,0(R8)            SHIFT OUT UNUSED BYTES
         ST    R0,REPLY@
         BR    R14                 RETURN TO CALLER
TABLE2   DC    X'000A0B0C0D0E0F'
         EJECT
**********************************************************************
* REG1 POINTS TO A MESSAGE WHICH THIS ROUTINE WILL WRITE TO THE      *
* OPERATOR (WTOR).  AFTER THE WAIT IS POSTED, 'REPLY' CONTAINS THE   *
* INPUTED DATA.                                                      *
**********************************************************************
         SPACE
PROMPT   LA    R7,MESSAGES         R7 WILL POINT TO CURRENT MSG AREA
         XC    REPLY@,REPLY@       CLEAR THE REPLY AREA
         XC    MESSAGES,MESSAGES   CLEAR THE MESSAGE AREA
         MVC   MESSAGES(7),2(R1)   MOVE IN MESSAGE ID
         MVC   MESSAGES+8(8),JOBNAME  MOVE IN JOB NAME
         LA    R7,15(R7)           CURRENT INSERT POINT IN MSG
JOBMSG   CLI   0(R7),X'40'         IS THIS A BLANK?
         BNE   STEPMSG1            NO, GO MOVE IN STEP NAME
         BCT   R7,JOBMSG           YES, BACK UP 1 AND TRY AGAIN
STEPMSG1 MVI   1(R7),C','          A COMMA
         MVC   2(8,R7),STEPNAME    MOVE IN THE JOB STEP NAME
         LA    R7,9(R7)            NEXT MSG INSERT POINT
STEPMSG2 CLI   0(R7),X'40'         IS THIS A BLANK?
         BNE   DDMSG1
         BCT   R7,STEPMSG2         BACK UP AND TRY NEXT
DDMSG1   MVI   1(R7),C','          SET THE COMMA
         MVC   2(8,R7),DDNAME      MOVE IN THE DDNAME
         LA    R7,9(R7)            POINT TO CURRENT INSERT POINT
DDMSG2   CLI   0(R7),X'40'         IS IT BLANK?
         BNE   PROMPT2             NO, GO FINISH BUILDING THE MSG
         BCT   R7,DDMSG2           BACK UP AND TRY AGAIN
PROMPT2  LH    R6,0(R1)            R6 HAS MSG LENGTH WITHOUT NAMES
         SH    R6,=X'0008'
         EX    R6,MOVEMSG          MOVE IN REMAINDING PART OF MSG
         AR    R7,R6               R7 POINT TO END OF MSG
         LA    R6,MESSAGES-1
         SR    R7,R6               R7 NOW HAS MESSAGE LENGTH
         LA    R6,4(R7)            LENGTH INCLUDES ROUTE CODE
         STH   R6,MSGLNG           WTOR PARM LIST NEEDS IT
         L     R6,ROUTCDE
         ST    R6,MESSAGES(R7)     PUT ROUTE CODE AT END OF MSG
         LA    R1,REPLYMSG         R1 HAS WTO PARM LIST
         LA    R6,REPLY@
         STCM  R6,7,REPLYIN
         XC    ECB@,ECB@
         TM    STATUS,WTOR         WAIT WTOR OR WTO
         BZ    PROMPT3             WANTS WTOR
         LA    R1,MSGLNG
PROMPT3  SVC   35                  WTO SVC
         TM    STATUS,WTOR         IS A WAIT NEEDED?
         BZ    PROMPT4
         NI    STATUS,X'FF'-WTOR
         BR    R14
PROMPT4  WAIT  1,ECB=ECB@
         CLI   REPLY@,X'00'        ANYTHING ENTERED?
         BE    BADPARM             NO, RESTART
         CLI   REPLY@,C'*'         ASTRISTIC IS BAD
         BE    BADPARM
         BR    R14                 RETURN TO PROMPT CALLER
MOVEMSG  MVC   1(0,R7),10(R1)      USED TO MOVE LAST PART OF IDA MSG
         EJECT
**********************************************************************
*  THIS ROUTINE DETERMINES IF THE ERROR MESSAGE NEEDS TO BE ISSUED   *
*  BECAUSE OF SOME ERROR CONDITION.  ERROR CODES 2 AND 3 ARE SET BY  *
*  IDA019ST AND USE THIS ROUTINE (ABEND) TO ISSUE THE MESSAGE.       *
**********************************************************************
         SPACE
WRTERR   LA    R1,X'F1'            EC=1, BSAM WRITE ERROR
         LA    R9,RESET
         B     ABEND
OPENFAIL LA    R1,X'F5'            EC=5, OPEN ERROR
         B     ABEND
CLOSERR  LA    R1,X'F6'            EC=6, CLOSE ERROR
         MVI   TRACE+48,X'00'      MAKE SURE WE DON'T TRY CLOSE AGAIN
ABEND    XC    DLLLINE,DLLLINE     CLEAR OUTPUT AREA
         MVC   DLLLINE(55),ERRORML MOVE IN ERROR MESSAGE
         STCM  R1,1,DLLLINE+24     ADD ERROR CODE
         LA    R1,DLLLINE
         BAL   R14,PROMPT
         CLI   REPLY@,C'E'         WANT TO STOP IDATRACE?
         BE    ABEND2              YES, DON'T ABEND
         ABEND 888,DUMP
ABEND2   CLI   DLLLINE+24,X'F1'    WAS THIS A WRITE ERROR?
         BNE   ABEND3
         OI    FLAG1,STOP          SET FOR EARLY OUT.
         B     CLOSE               GO CLOSE THE DATA SET.
ABEND3   TM    FLAG1,STOP          HAVE WE ALREADY TRIED A CLEAN UP?
         BO    EXIT                YES, GETOUT.
         OI    FLAG1,STOP          TERMINATE TRACE
         B     RESET               ATTEMPT A RESET.
         SPACE 3
***********************************************************************
* CONVERT ROUTINE UNPACK S THE DATA IN REG0 AND STORES IN THE FIELD   *
* UNPACK.                                                             *
***********************************************************************
         SPACE
CONVERT  ST    R0,UNPACK
         UNPK  UNPACK(9),UNPACK(5)
         TR    UNPACK(8),TABLE-240
         BR    R14                 RETURN TO CALLER
         SPACE 3
         EJECT
**********************************************************************
* RESET FLUSHES THE BUFFERS, AND THEN CLOSES THE DCB.  RETURN TO     *
* ABEND 4 IF STOP IS ON.  OTHERWISE, CALLS PARMPMT TO GET NEW PARM   *
* LIST.                                                              *
**********************************************************************
         SPACE
RESET    TM    TRACE+48,X'10'      IS DCB OPEN?
         BZ    RESETOUT            NO, NOTHING TO FLUSH OR CLOSE
         NI    FLAG5,X'FF'-PAPSAVE FORCE SPACES
         XC    MESSAGES,MESSAGES   CLEAR THE OUTPUT AREA
         LA    R2,3
         BAL   R3,PUT              WRITE OUT 3 BLANKS
         MVC   HEADER+1(122),STARS
         MVC   HEADER+31(12),TERMMSG   PUT IN TERMTATION MESSAGE
         LA    R2,21               ENOUGHT SPACES TO FORCE THE
         L     R4,CURREC+4         GET CDECBT ENTRY
         BAL   R3,PUT              WRITE LAST BUFFER
         L     R1,0(R4)            R1= ADDRESS OF LAST WRITTEN DECB
         LA    R0,1(R0)            CLEAR HIGH ORDER BYTE FOR WAIT
         SVC   1                   WAIT FOR LAST BUFFER
CLOSE    L     R10,R14IN           GET POINTER TO HOOK NUMBER
         TM    FLAG1,STOP          WAS STOP REQUESTED?
         BZ    RESETOUT            NO, DON'T CLOSE THE TRACE DATA SET.
         CLI   1(R10),X'00'        WAS CALLER IDA0200T? (VSAM CLOSE)
         BNE   CLOSE1              NO, PSW KEY IS OK.
         L     R10,CVTPTR(R0)      GET CVT ADDRESS
         L     R10,CVTTCBP(R10)    GET TCB WORDS ADDRESS
         L     R10,0(R10)          ADDRESS OF THE TCB
         L     R10,TCBRBP(R10)     ADDRESS OF MY SVRB
         SR    R9,R9
         IC    R9,RBOPSW+1(R10)    GET THE CURRENT PSW KEY
         SR    R10,R10
         IC    R10,PSWKEY          GET THE USERS KEY
         SPKA  0(R10)              SET THE KEY
CLOSE1   LA    R1,OPENLST          R1 = ADDRESS OF CLOSE PARM LIST
         LA    R3,TRACE            GET DCB ADDRESS
         ST    R3,0(R1)            STORE DCB ADDRESS
         MVI   0(R1),X'B0'         CLOSE OPTIONS (LEAVE)
         SVC   20
         LTR   R15,R15             CLOSE GO OK?
         BNZ   CLOSERR             NO, GIVE ERROR MSG
         L     R10,R14IN           GET THE HOOK POINTER
         CLI   1(R10),X'00'        CALLER IDA0200T?
         BNE   RESETOUT
         SPKA  0(R9)
RESETOUT NI    FLAG0,X'00'         CLEAR THE CONTROL FLAGS
         NI    FLAG1,STOP          DON'T TURN OFF THE STOP FLAG
         XC    FLAG2(ECB@-FLAG2),FLAG2 CLEAR OUT THE FLAGS
         NI    STATUS,X'00'
         TM    FLAG1,STOP          HAS END BEEN REQUESTED?
         BZ    PARMPMT             NO, GO RE-PROMPT
         B     EXIT                YES, RETURN TO CALLER
         EJECT
**********************************************************************
* INITIAL INITIALIZES THE DCB, DECB'S AND OPENS THE OUTPUT DATA SET. *
**********************************************************************
         SPACE 1
INITIAL  C     R13,OLDSAVE         INITIALIZE ONLY IF NOT IRB CALL
         BNE   EXIT
         MVC   ZEROLINE(PATCH-ZERODUMY),ZERODUMY
         LA    R9,DECB0            R9=1ST DECB ADDRESS
         LA    R8,DECB@0           R8=DECB TABLE ADDRESS
         LA    R7,TRACE            R7=DCB ADDRESS
         LA    R6,BUFFER0          R6=1ST OUTPUT BUFFER ADDRESS
         LA    R5,20               R5=COUNT OF DECB'S TO BE BUILT
         ST    R6,CURREC           CURRENT RECORD POINTER
         ST    R8,CURDECBT         CURRENT DECB TABLE ENTRY
DECBLOOP MVC   0(20,R9),DECB       MOVE IN COPY OF A REAL DECB
         MVI   0(R9),X'7F'         SET DECB TO POSTED STATUS
         ST    R7,8(R9)            FILL IN DCB ADDRESS
         ST    R6,12(R9)           FILL IN BUFFER ADDRESS
         ST    R9,0(R8)            FILL IN DECB TABLE
         LA    R9,20(R9)           NEXT DECB
         LA    R8,4(R8)            NEXT DECB TABLE
         LA    R6,2660(R6)         NEXT BUFFER ADDRESS
         BCT   R5,DECBLOOP
GETDD    LA    R1,DDPMT
         BAL   R14,PROMPT          GET OUTPUT DATA SET'S DDNAME
         LA    R6,8                PAD INPUT WITH X'40'S
         LA    R7,REPLY@
GETDDLOP CLI   0(R7),X'00'         IS PADDING NEEDED
         BNE   GETDD@1             NO, SKIP PAD CHARACTER
         MVI   0(R7),X'40'
GETDD@1  LA    R7,1(R7)
         BCT   R6,GETDDLOP
         OI    FLAG0,NODDNAME      SET FOR POSSIABLE ERROR
CKDDNAME L     R5,16(0,0)          GET CVT ADDRESS
         L     R5,0(0,R5)          GET TCB WORDS
         L     R5,0(0,R5)          GET TCB ADDRESS
         L     R5,12(0,R5)         GET TIOT ADDRESS
         LA    R5,28(R5)           POINT TO FIRST DDNAME
CKDDLOOP CLC   0(8,R5),REPLY@      SEE IF GIVEN DDNAME EXIST
         BE    DCBBLD              GOOD, CONTINUE
         CLI   0(R5),X'00'         IS IT BLANK?
         BE    BADDD               YES, FOUND NO MATCH, ERROR
         LA    R5,20(R5)           POINT TO NEXT TIOT ENTRY
         B     CKDDLOOP
DCBBLD   NI    FLAG0,X'FF'-NODDNAME
         MVC   TRACE(DCBEND-DCB),DCB    COPY OF DCB
         MVC   TRACE+40(8),REPLY@  FILL IN DDNAME
*        OPEN  TRACE,(OUTPUT)
         LA    R7,TRACE
         ST    R7,OPENLST          SET DCB POINTER
         LA    R1,OPENLST          POINT TO THE OPEN PARM LIST
         MVI   OPENLST,X'8F'       OPTION BYTE
         SVC   19
         TM    TRACE+48,X'10'      DID IT OPEN?
         BZ    OPENFAIL            NO, ERROR
         L     R10,CVTPTR(R0)      GET CVT ADDRESS
         L     R10,CVTTCBP(R10)    GET TCB WORDS ADDRESS
         L     R10,0(R10)          GET TCB ADDRESS
         L     R10,TCBRBP(R10)     GET CURRENT RB ADDRESS
         IC    R9,RBOPSW+1(R10)    GET MY PSW KEY
         STC   R9,PSWKEY           SAVE IT FOR CLOSE.
         B     EXIT
         SPACE 3
**********************************************************************
*  PRINT ROUTINE                                                     *
*    R0  STARTING ADDRESS TO BE PRINTED                              *
*    R1  LENGTH OF CB TO BE PRINTED (ZERO PRINTS HEADER ONLY)        *
*    R14 RETURN ADDRESS                                              *
**********************************************************************
         SPACE 1
PRINT    TM    FLAG1,ADDRONLY      ADDRESS ONLY MODE?
         BZ    PRINT1              NO, GO PRINT TRACE RECORD
         MVC   MSGLNG(2),=X'004C'  STANDARD HEADER MESSAGE LENGTH
         MVC   MESSAGES+72(4),ROUTCDE
         LA    R1,MSGLNG
         SVC   35                  WTO
         XC    MESSAGES,MESSAGES   CLEAR MESSAGE AREA
         B     EXIT
PRINT1   ST    R1,WORK6
         SLL   R0,8                CLEAR ANY HIGH ORDER BYTES.
         SRL   R0,8
         AR    R1,R0               DETERMINE THE STOP ADDRESS
         ST    R1,WORK5            SAVE IT
         L     R1,WORK6            RESTORE THE LENGTH
*
***** WRITE HEADER  ***************
*
         LA    R2,1
         BAL   R3,PUT
         LTR   R1,R1               ZERO LENGTH?
         BZ    FINISH+8            HEADER WRITTEN, GET OUT.
*
*
***** FORMAT THE FIRST LINE *******
*
         ST    R0,WORK1
         N     R0,=X'00FFFFE0'     START ON LINE BOUNDRY.
         BAL   R14,CONVERT
         ST    R0,WORK2
         MVC   ADDRESS(6),UNPACK+2 GET CORE ADDRESS INTO LINE
         MVC   DISPLACE(3),=C'000'
*
***** FIND START POINT ON FIRST LINE **********
*
         LA    R7,LINE1
         TM    WORK1+3,X'10'
         BZ    A@0001
         LA    R7,LINE2
A@0001   TM    WORK1+3,X'08'
         BZ    A@0002
         LA    R7,18(R7)
A@0002   TM    WORK1+3,X'04'
         BZ    A@0003
         LA    R7,9(R7)
*
***** FIND NEXT DISPLACEMENT VALUE **********
*
A@0003   L     R6,WORK2
         LA    R6,32(R6)           ADD 20
         S     R6,WORK1
         ST    R6,WORK3            STORE NEXT DISPLACE VALUE.
         SR    R6,R6
         L     R3,WORK1
         B     LINELOOP            GO PRINT FIRST LINE
*
***** CHECK FOR BLANK LINES AND SUPPRESS THIER PRINTING
*
ZEROCHCK L     R6,0(R3)            GET FIRST WORD
         C     R6,0(0,R3)          R3 = CURRENT DUMP POINT
         BNE   ZCHECK2             NON-ZERO WORD. FINISHED ZERO CHECK
         BXLE  R3,R8,ZEROCHCK+4    TRY NEXT WORD
ZCHECK2  LR    R2,R3               CHECK IF LESS THAN 1 LINE OF ZEROS
         S     R2,ZEROLINE         ZEROLINE HAS START VALUE
         CH    R2,=X'0020'         R2 HAS COUNT OF ZERO WORDS
         BL    ZEXIT2              LESS THAN 20 BYTES, SKIP THE MESSAGE
ZCHECK3  SRL   R3,5                UPDATE CURRENT ADDRESS
         SLL   R3,5
         ST    R3,WORK1            WORK1 IS CURRENT DUMP POINT
         L     R8,WORK5            UPDATE COUNT TO GO
         SR    R8,R3               (END ADDR - CURRENT ADDR)
         ST    R8,WORK6            WORK6 IS COUNT TO GO
         S     R3,ZEROLINE         UPDATE DISPLACE VALUE
         A     R3,WORK3            (CURRENT ADDR - LAST ZERO + OLD DISP
         ST    R3,WORK3
         L     R0,ZEROLINE         SET UP ZERO MESSAGE
         BAL   R14,CONVERT
         MVC   ZEROLINE(8),UNPACK
         L     R0,WORK1            GET NEW START POINT
         ST    R0,WORK2            UPDATE LINELOOP'S START POINT
         BAL   R14,CONVERT
         MVC   ZEROLINE+12(8),UNPACK
         LR    R0,R6
         BAL   R14,CONVERT
         MVC   ZEROLINE+29(8),UNPACK
         MVC   OUTLINE+14(37),ZEROLINE
         XC    ADDRESS(10),ADDRESS CLEAR OUT OLD DATA.
         CLC   WORK5,WORK1         IS THIS ALSO THE END OF THE CB?
         BNH   FINISH              YES, PRINT ZERO MESSAGE AND GET OUT
         LA    R2,1                NO, MUST PRINT IT HERE.
         BAL   R3,PUT              GO PRINT IT.
         MVC   ADDRESS(6),ZEROLINE+14  RESTORE PRINT LINE
         L     R0,WORK3
         BAL   R14,CONVERT
         MVC   DISPLACE(3),UNPACK+5    RESTORE DISPLACEMENT VALUE
ZEXIT2   LA    R7,LINE1
         L     R3,WORK1
         L     R0,WORK3            GET OLD DISP VALUE
         A     R0,=X'00000020'     ADD 20 TO DISPLACE VALUE.
         ST    R0,WORK3
         SR    R6,R6
*
***** BUILD FIRST LINE OF DUMP ****
*
LINELOOP L     R0,0(R3)            GET STUFF TO BE DUMPED.
         BAL   R14,CONVERT
         MVC   0(8,R7),UNPACK      PUT IT INTO THE OUT PUT RECORD.
         LA    R6,4(R6)            KEEP COUNT
         L     R1,WORK6            GET LENGTH COUNT
         SH    R1,=X'0004'         4 FROM PRINT LENGTH.
         LTR   R1,R1               ARE WE DONE?
         BNP   DONE
         ST    R1,WORK6            UPDATE LENGTH
         LA    R14,OUTLINE+71      IS THIS THE LAST ENTRY FOR THE LINE?
         CR    R7,R14              IF R7 IS LARGER IT IS.
         BH    ENDLINE
         LA    R14,OUTLINE+40      ARE WE AT THE 3 EXTRA SPACES?
         CR    R7,R14
         BNE   A@0004
         LA    R7,3(R7)
A@0004   LA    R7,9(R7)
         LA    R3,4(R3)
         B     LINELOOP            DO IT AGAIN.
*
***** FINISH UP AND PRINT THE LINE
*
ENDLINE  LA    R9,ENGLISH+32
         SR    R9,R6               R9 WAS START OF XLATED OUTPUT ADDRES
         L     R8,WORK1
         BCTR  R6,R0               CORRECT MOVE LENGTH ****
         EX    R6,MOVE             MOVE OUTPUT TO XLATE AREA.
         TR    ENGLISH(32),XLATE   TRANSLATE THE STUFF.
         MVI   ENGLISH-1,C'*'
         MVI   ENGLISH+32,C'*'
         LA    R3,4(R3)
         ST    R3,WORK1            UPDATE START POINT
         LA    R2,1                SPACE CONTROL
         BAL   R3,DLLCHECK         GO PRINT THE RECORD
         LA    R7,LINE1
         L     R0,WORK3            GET DISPLACE VALUE
         BAL   R14,CONVERT
         MVC   DISPLACE(3),UNPACK+5
         SR    R6,R6               RESET THE COUNT
         MVC   ZEROLINE(4),WORK1   SAVE START ADDR
         LA    R8,4                BXLE VALUE
         L     R9,WORK5            GET END ADDRESS FOR ZEROCHCK
         L     R0,WORK2            GET THE ALIGNED CORE ADDRESS.
         A     R0,=X'00000020'
         BAL   R14,CONVERT
         MVC   ADDRESS(6),UNPACK+2 GET CORE ADDRESS INTO LINE
         ST    R0,WORK2
         L     R3,WORK1            SET NEW START POINT
         B     ZEROCHCK            SEE IF LINE IS BLANK
DONE     LA    R9,ENGLISH
         L     R8,WORK1
         BCTR  R6,R0
         EX    R6,MOVE
         MVI   ENGLISH-1,C'*'
         MVI   ENGLISH+32,C'*'
         TR    ENGLISH(32),XLATE
FINISH   LA    R2,3
         BAL   R3,DLLCHECK
         B     EXIT                RETURN
**********************************************************************
*     DLL FORMAT CHECK ROUTINE.  TAKES ONE 133 BYTE LINE AND MAKES   *
*     TWO 66 BYTE LINE FROM IT.                                      *
**********************************************************************
DLLCHECK TM    FLAG5,DLL           WANT LINE SPLIT?
         BZ    PUT                 NO, FORGET NEXT LOGIC
         OI    FLAG5,PAPSAVE       FORCE PAPER SAVE FOR DLL RUNS
         MVC   DLLLINE(10),ADDRESS SAVE 2ND HALF OF LINE
         MVC   DLLLINE+12(35),LINE2
         MVC   DLLLINE+49(17),ENGLISH+16
         CLI   LINE1,X'00'         1ST HALF USED?
         BNE   DLL1
         CLC   LINE1(36),LINE1+1
         BE    DLL2                NO 1ST HALF, TRY 2ND
DLL1     SR    R14,R14
         MVN   SAVE1X+4(3),DISPLACE FIRST LINE?
         C     R14,SAVE1X+4
         BNE   DLL@04              NO, NO DISPLACEMENT ADJUST
         CLI   OUTLINE+13,X'00'    FIRST WORD USED?
         BNE   DLL@04              YES, NO DISPLACEMENT ADJUST
         CLI   OUTLINE+22,X'00'    2ND SLOT USED?
         BNE   DLL@02              NO
         MVI   DLLLINE+9,X'C3'     YES, FORCE NEXT DISPLACE OF C
         B     DLL@05
DLL@02   CLI   OUTLINE+31,X'00'    3RD SLOT USED?
         BNE   DLL@03
         MVI   DLLLINE+9,X'F8'     FORCE NEXT DISPLACE OF 8
         B     DLL@05
DLL@03   MVI   DLLLINE+9,X'F4'     FORCE NEXT DISPLACE OF 4
         B     DLL@05
DLL@04   IC    R14,DLLLINE+8       ADD 10 TO THE OFFSET
         IC    R14,XLATE+1(R14)
         STC   R14,DLLLINE+8
         CLI   DLLLINE+8,C'.'      DID I ADD 9+1=.?
         BNE   DLL@06
         MVI   DLLLINE+8,X'C1'     YES, RESET IT TO A
         B     DLL@05
DLL@06   CLI   DLLLINE+8,C'G'      DID AN OVERFLOW OCCUR?
         BNE   DLL@05
         MVI   DLLLINE+8,X'F0'     YES, CORRECT IT
         IC    R14,DLLLINE+7
         LA    R14,1(R14)
         STC   R14,DLLLINE+7
DLL@05   MVC   LINE2-3(17),ENGLISH-1
         MVI   LINE2+14,C'*'
         XC    LINE2+15(66),LINE2+15
         LR    R7,R3               SAVE RETURN REG ACROSS PUT CALL
         BAL   R3,PUT              WRITE 1ST HALF OF RECORD
         LR    R3,R7
DLL2     CLI   DLLLINE+12,X'00'    2ND HALF OF LINE USED?
         BNE   DLL3
         CLC   DLLLINE+12(35),DLLLINE+13
         BER   R3                  NOT USED, RETURN
DLL3     XC    OUTLINE,OUTLINE     CLEAR OUTPUT AREA
         SR    R14,R14
         IC    R14,DLLLINE+4       ADD 10 TO THE ADDRESS
         IC    R14,XLATE+1(R14)
         STC   R14,DLLLINE+4
         MVI   DLLLINE+48,C'*'
         MVC   ADDRESS(66),DLLLINE SET UP 2ND HALF OF MESSAGE
         B     PUT
         EJECT
***********************************************************************
*  THE PUT ROUTINE TAKES THE RECORD IN OUTLINE AND ATTEMPTS TO MOVE   *
* IT INTO A BUFFER AT THE CURRENT INSERT POINT (CURREC).  IF IT FITS, *
* THIS ROUTINES RETURNS.  IF IT DOES NOT FIT, THE BUFFER IS FULL AND  *
* AND I/O FOR IT IS STARTED (CALL TO BSAM).  THEN THE NEXT AVAILABLE  *
* BUFFER IS LOCATED, WAITED ON IF NEEDED, AND THE RECORD IS THEN      *
* MOVED INTO THE NEW BUFFER AND THE ROUTINE RETURNS.                  *
* REG3 = RETURN ADDRESS, REG2 = THE NUMBER OF BLANK RECORDS TO BE PUT *
* AFTER THE INSERTED RECORD.                                          *
***********************************************************************
         SPACE
PUT      TM    TRACE+48,X'10'      IS DCB OPEN?
         BZR   R3                  DCB IS CLOSED FOR SOME REASON.
         STM   R0,R7,HOLDREGS      SAVE REGS ACCROSS THE PUT
PUT2     LM    R6,R7,CURREC        R6 = CURREC . R7 = CURDECBT
         CLI   CURREC,X'14'        COME TO THE END OF A BUFFER?
         BNL   WRITE               BR IF YES
         MVC   1(132,R6),OUTLINE+1
         MVI   0(R6),X'09'         PRINTER CONTROL CHARACTER
         LR    R4,R6
         A     R4,=X'01000085'     UP THE CURRENT POINTER AND COUNT
         CS    R6,R4,CURREC
         BNE   PUT2                SOMEONE ELSE GOT OUR SPOT
         B     PUTOUT
***********************************************************************
* CURREC CROSSED A BUFFER BOUNDRY.  TRY TO WRITE OLD BUFFER           *
***********************************************************************
WRITE    TS    0(R7)               LOCK DECB FOR WRITE
         BNZ   NEXTDECB
         L     R1,0(R7)            R1 = A(DECB)
         CLI   0(R1),X'00'         IS WRITE OUTSTANDING?
         BE    NEXTDECB-4
         LA    R15,TRACE
         L     R15,48(0,R15)       GET BSAM ADDRESS
         XC    0(4,R1),0(R1)       CLEAR ECB
         BALR  R14,R15             GO TO BSAM
         NI    0(R7),X'40'         TURN OFF LOCK ON DECB
***********************************************************************
* THE WRITE FOR THE FULL BUFFER IS DONE.  FIND THE NEXT DECB TO BE    *
* USED FOR OUTPUT.                                                    *
***********************************************************************
NEXTDECB LA    R4,0(R6)            CLEAR COUNT
         LA    R5,4(R7)            NEXT DECBT ENTRY
NEXT@01  LA    R15,DECB@19         GET LAST DECB ADDRESS
         CR    R5,R15              END OF DECBS?
         BNH   CHECK1
         LA    R4,BUFFER0
         LA    R5,DECB@0
***********************************************************************
* FOUND NEW DECB.  CHECK ITS STATUS AND IF OK, USE THIS NEW BUFFER    *
***********************************************************************
CHECK1   TS    0(R5)               OK TO CHECK?
         BE    CHECK2              BR IF YES
         LA    R4,2660(R4)         NO, POINT TO NEXT BUFFER
         LA    R5,4(R5)
         B     NEXT@01             NOW TRY NEXT DECB
CHECK2   L     R2,0(R5)            R2 = A(ECB)
         TM    0(R2),X'7F'
         BO    DECBOK
         BZ    WAIT
         CLI   0(R2),X'48'
         BE    PURGE
         CLI   0(R2),X'41'
         BNE   WRTERR
EOV      LA    R1,TRACE
         L     R14,0(R5)           R14 = A(DECB)
         L     R0,16(R14)
         SH    R0,=X'0008'
         SVC   55
         LTR   R15,R15             WAS THE SYNAD ADDRESS RETURNED?
         BZ    CHECK2              HAD AN CORRECTABLE ERROR.
         B     WRTERR              HAD AN UNCORRECTABLE ERROR.
PURGE    LR    R1,R2               GO RESTART THIS PURGED I/O
         B     WRITE+12
WAIT     LA    R1,0(R2)            CLEAR HIGH BYTE FOR WAIT
         LA    R0,1(R0)
         SVC   1
         B     CHECK2
DECBOK   CDS   R6,R4,CURREC
         NI    0(R5),X'20'         TURN OFF LOCK OF DECBT ENTRY
         B     PUT2                GOT BUFFER, NOW TRY MOVE
PUTOUT   LM    R0,R7,HOLDREGS      RESTORE CALLERS REGS
         XC    OUTLINE,OUTLINE
         TM    FLAG5,PAPSAVE       WANT PAPER SAVE OPTION.
         BCR   1,R3
         BCT   R2,PUT              DO SPACES IF NEEDED
         BR    R3                  RETURN
*
MOVE     MVC   0(0,R9),0(R8)       MOVE DATA TO PRINT AREA
         DS    0F
**********************************************************************
*        END OF PRINT CODE                                           *
**********************************************************************
         EJECT
**********************************************************************
**********************************************************************
         DS    0F
TABLE    DC    C'0123456789ABCDEF'
XLATE    DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C' ............(+.'
         DC    C'...........$*)..'
         DC    C'-/.........,....'
         DC    C'..........:..''=.'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'................'
         DC    C'.ABCDEFGHI......'
         DC    C'.JKLMNOPQR......'
         DC    C'..STUVWXYZ......'
         DC    C'0123456789......'
ZERODUMY DC    C'         TO          CONTAIN 00000000 '
PATCH    DC    XL64'00'            PATCH AREA
STARS    DC    122C'*'
         LTORG
**********************************************************************
DCB      DCB   DDNAME=TRACE,DSORG=PS,MACRF=W,RECFM=FBM,SYNAD=WRTERR,   -
               NCP=20,BLKSIZE=2660,LRECL=133
DCBEND   EQU   *
DECB     WRITE ECBX,SF,DCB,PATCH,2660,MF=L
***********************************************************************
************* MESSAGE AREA ********************************************
**********************************************************************
TERMMSG  DC    C'END OF TRACE'
PARMPRMT DC    Y(L'IDA030)
IDA030   DC    C'IDA030A , ENTER VSAM TRACE PARM LIST OR ''END''.'
BADMSG   DC    Y(L'IDA031)
IDA031   DC    C'IDA031I , BD INPUT.  RESTART.'
WHEREMSG DC    Y(L'IDA032)
IDA032   DC    C'IDA032A , ENTER TRACE NUMBERS TO BE ACTIVITED.'
DDPMT    DC    Y(L'IDA033)
IDA033   DC    C'IDA033A , ENTER DDNAME OF TRACE DATA SET. '
AIXPARM  DC    Y(L'IDA034)
IDA034   DC    C'IDA034A , ENTER PARM LIST FOR PATH/UPGRADE SUPPORT. '
ERRPRMT  DC    Y(L'IDA035)
IDA035   DC    C'IDA035A , ENTER ONE BYTE ERROR CODE OR ''ANY''.'
CNTPRMTS DC    Y(L'IDA036)
IDA036   DC    C'IDA036A , ENTER START COUNT VALUE IN HEX. '
CNTPRMTE DC    Y(L'IDA037)
IDA037   DC    C'IDA037A , ENTER END COUNT VALUE IN HEX. '
COUNTMSG DC    Y(L'IDA038)
IDA038   DC    C'IDA038I , COUNT FIELD AT ADDRESS --------.'
ERRORML  DC    Y(L'IDA039)
IDA039   DC    C'IDA039A , ERROR CODE=  . ENTER A OR E (ABEND OR END) '
END      DC    C'END'
FECNT    DC    C'FE-'
         EJECT
         IDATRACE
         EJECT
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDA019SU CSECT
         DS    0F
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IDA019SU CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RBSECPTR EQU   @01
TCBPTR   EQU   @01
CVTPTR   EQU   16
IDAAMB   EQU   0
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
TIOT1    EQU   0
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00026 EQU   RBSECT+10
@NM00027 EQU   @NM00026
RBTRSVRB EQU   @NM00027
@NM00029 EQU   @NM00026+1
RBETXR   EQU   @NM00029
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00036 EQU   RBSECT+28
IRBEND   EQU   RBSECT+96
@NM00040 EQU   RBSECT+96
RBRSV138 EQU   @NM00040+7
RBRSV150 EQU   RBSECT+167
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TIOENTRY EQU   TIOT1+24
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
*                                      START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00049 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00048 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00041 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00014 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00013 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00051 EQU   CVTFIX+248
@NM00050 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00047 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00046 EQU   IEZJSCB
@NM00045 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00044 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00043 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00042 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
SIRBEND  EQU   RBSECT+168
SVRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBSCBB   EQU   RBSECT+144
TIRBEND  EQU   @NM00040+8
PRBEND   EQU   @NM00040+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00040+6
RBRSV136 EQU   @NM00040+4
RBRSV135 EQU   @NM00040
@NM00039 EQU   RBSECT+32
@NM00038 EQU   @NM00036+1
@NM00037 EQU   @NM00036
RBPGMQ1  EQU   RBPGMQ+1
@NM00035 EQU   RBPGMQ
@NM00034 EQU   RBSECT+16
@NM00033 EQU   @NM00029
@NM00032 EQU   @NM00029
RBIQETP  EQU   @NM00029
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00029
@NM00031 EQU   @NM00029
@NM00030 EQU   @NM00029
RBPMSVRB EQU   @NM00027
RBATNXIT EQU   @NM00027
@NM00028 EQU   @NM00027
RBWAITP  EQU   @NM00027
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00027
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00025 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00024 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00023 EQU   RBOPSWB2
@NM00022 EQU   XRBPSW
@NM00021 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00020 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00019 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00018 EQU   XSTAB1
@NM00017 EQU   RBBASIC+8
@NM00016 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00015 EQU   RBPRFX
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
AMBTRACE EQU   IDAAMB+120
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00012 EQU   AMBCSWD1+1
@NM00011 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00010 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00009 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00008 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00007 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00006 EQU   AMBINFL
@NM00005 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00004 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00003 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00002 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00001 EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBDSB   EQU   IDAAMB+20
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
*                                      END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IDA019SU,(C'PLS1857',0701,78209)
