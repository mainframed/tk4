*/********************************************************************/
* /*                                                                 */
* /*     IDAVCRT (VSAM CHECKPOINT RESTART TABLE) DECLARATION         */
* /*                                                                 */
* /* MACRO NAME : IDAVCRT                                            */
* /*                                                                 */
* /* DESCRIPTIVE NAME : VSAM CHECKPOINT RESTART TABLE                */
* /*                                                                 */
* /* FUNCTION : THE VSAM CHECKPOINT RESTART TABLE (VCRT) IS USED BY  */
* /*       VSAM CHECKPOINT RESTART AS A MEANS OF PROCESSING THE      */
* /*       ALTERNATE INDEX ENVIRONMENT OF VSAM RELEASE TWO. THE VCRT */
* /*       IS SUBALLOCATED FROM VCRCORE, ALSO DESCRIBED BY THIS      */
* /*       MACRO, AND CONTAINS A COUNT, BY ENTRY TYPE, OF EACH ENTRY */
* /*       APPENDED TO THE VCRT. THERE ARE THREE TYPES OF ENTRIES:   */
* /*                                                                 */
* /*       1. THE FIRST ENTRY TYPE IS THE VCRT OPEN ENTRY USED BY    */
* /*       VSAM RESTART TO REBUILD THE CONTROL BLOCKS REQUIRED FOR A */
* /*       VALID RESTART.  THIS ENTRY IS EIGHT BYTES IN LENGTH AND   */
* /*       CONTAINS POINTERS TO THE USER AMBL, AND A SAVE AREA FOR   */
* /*       THE HEADER ELEMENT BLOCKS FOR THE CLUSTER.  THE SAVE AREA */
* /*       POINTER WILL BE ZERO IF THE CLUSTER IS PART OF THE        */
* /*       IMMEDIATE UPGRADE SET.                                    */
* /*                                                                 */
* /*       2. THE SECOND ENTRY TYPE IS THE VCRT UPGRADE ENTRY, WHICH */
* /*       POINTS TO THE UPGRADE AMBLS AND THE HEB SAVE AREAS TO BE  */
* /*       PROCESSED BY VSAM RESTART. THIS ENTRY IS EIGHT BYTES LONG */
* /*       AND WILL EXIST ONLY IF THE IMMEDIATE UPGRADE SET FOR THIS */
* /*       DATA SET WAS OPEN AT CHECKPOINT TIME.                     */
* /*                                                                 */
* /*       3. THE THIRD ENTRY TYPE IS THE VCRT INDEX ENTRY. EIGHT    */
* /*       BYTES IN LENGTH, THIS ENTRY EXISTS ONLY IF THE BASE DATA  */
* /*       SET IS A KSDS OPEN FOR CREATE MODE PROCESSING. THERE WILL */
* /*       BE ONE INDEX ENTRY FOR EACH INDEX LEVEL THAT EXISTS AT    */
* /*       CHECKPOINT TIME. THE INDEX ENTRY CONTAINS ICWA AND BUFFER */
* /*       POINTERS FOR THE INDEX LEVEL IT REPRESENTS.               */
* /*                                                                 */
* /* CONTROL BLOCK STRUCTURE : THE VCRT IS POINTED TO BY THE BIB     */
* /*                                                                 */
* /* INCLUDED MACROS : NONE                                          */
* /*                                                                 */
* /* METHOD OF ACCESS : DECLARE VCRTPTR AS PTR, AND                  */
* /*                    RESPECIFY VCRCORE AND VCRHEBSA BASED         */
* /*                                                                 */
* /* CREATED BY : VCRCORE IS CREATED BY VSAM CHECKPOINT AND FREED    */
* /*       BY THE VSAM C/R CLEANUP ROUTINE IN IGC0I96C FOR ALL       */
* /*       SITUATIONS, INCLUDING ERRORS IN VS CHECKPOINT.            */
* /*                                                                 */
* /* STATUS : VS2 RELEASE 3 - LEVEL = 0                              */
* /*                                                                 */
* /* DATE OF LAST CHANGE : 28 AUGUST 74                              */
* /*                                                                 */
*/********************************************************************/
*@EJECT;
*%GOTO   VCRT1;
* /*                                                                 */
* /*       VCRT DIAGRAM                                              */
* /*                                                                 */
* /*       0 *-----------------------------------------*             */
* /*         ×  VCRID  ×           VCRFLAG1            ×             */
* /*       4 ×-----------------------------------------×             */
* /*         ×                                         ×             */
* /*         ×               VCRIDNM                   ×             */
* /*         ×                                         ×             */
* /*      12 ×-----------------------------------------×             */
* /*         ×               VCRCOREH                  ×             */
* /*      16 ×-----------------------------------------×             */
* /*         ×      VCROPNCT      ×      VCRUPGCT      ×             */
* /*      20 ×-----------------------------------------×             */
* /*         ×      VCRIDXCT      ×      RESERVED      ×             */
* /*      24 ×-----------------------------------------×             */
* /*         ×               VCRCISIZ                  ×             */
* /*      28 ×-----------------------------------------×             */
* /*         ×                VCRRBUF                  ×             */
* /*      32 ×-----------------------------------------×             */
* /*         ×                VCROPN                   ×             */
* /*      36 ×-----------------------------------------×             */
* /*         ×                VCRUPG                   ×             */
* /*      40 ×-----------------------------------------×             */
* /*         ×                VCRIDX                   ×             */
* /*      44 *-----------------------------------------*             */
* /*                                                                 */
* /*                     VCRT OPEN ENTRY                             */
* /*                                                                 */
* /*         *-----------------------------------------*             */
* /*         ×                VCRHEBS                  ×             */
* /*         ×        POINTER TO HEB SAVE AREA         ×             */
* /*         ×-----------------------------------------×             */
* /*         ×                VCRAMBL                  ×             */
* /*         ×          POINTER TO USER AMBL           ×             */
* /*         *-----------------------------------------*             */
* /*                                                                 */
* /*           THE VCRT UPGRADE ENTRY IS THE SAME AS THE OPEN ENTRY  */
* /*                                                                 */
* /*                THE VCRT INDEX ENTRY                             */
* /*                                                                 */
* /*         *-----------------------------------------*             */
* /*         ×                VCRICWA                  ×             */
* /*         ×         POINTER TO INDEX ICWA           ×             */
* /*         ×-----------------------------------------×             */
* /*         ×                VCRBUFPT                 ×             */
* /*         ×       POINTER TO ASSOCIATED BUFFER      ×             */
* /*         *-----------------------------------------*             */
* /*                                                                 */
* /*                                                                 */
*%VCRT1:  ;
*        DCL  1 IDAVCRT  BASED(VCRTPTR),    /* IDAVCRT               */
*               2 VCRID         BIT(8),     /* VCRT CONTROL BLOCK ID */
*               2 VCRFLAG1      BIT(24),    /* VCRT FLAGS            */
*                 3 VCRUPGSW    BIT(1),     /* VCRT ENTRY TYPE       */
*                                           /* 1=PROCESS VCRT UPGRADE*/
*                                           /* 0 = PROCESS VCRT OPEN */
*                 3 VCRLSR      BIT(1),     /* LSR SPECIFIED         */
*                 3 VCROUT      BIT(1),     /* OUTPUT ACB IS OPEN    */
*                 3 *           BIT(21),    /* RESERVED              */
*               2 VCRIDNM       CHAR(8),    /* VCRT CONTROL BLK NAME */
*               2 VCRCOREH      PTR(31),    /* PTR TO HEAD OF VCRCORE*/
*               2 VCROPNCT      FIXED(15),  /* OPEN ENTRY COUNT      */
*               2 VCRUPGCT      FIXED(15),  /* UPGRADE ENTRY COUNT   */
*               2 VCRIDXCT      FIXED(15),  /* INDEX ENTRY COUNT     */
*               2 *             FIXED(15),  /* RESERVED              */
*               2 VCRCISIZ      FIXED(31),  /* HIGH SPHERE CI SIZE   */
*               2 VCRSPHPT      PTR(31),    /* PTR TO SPHERE HEB SAVE*/
*               2 VCRRBUF       PTR(31),    /* PTR TO RESTART BUFFER */
*               2 VCROPN        PTR(31),    /* PTR VCRT OPEN ENTRIES */
*               2 VCRUPG        PTR(31),    /* PTR VCRT UPGRADE ENTRY*/
*               2 VCRIDX        PTR(31);    /* PTR VCRT INDEX ENTRIES*/
*/********************************************************************/
*/*                                                                  */
*/*             VCRT OPEN ENTRY                                      */
*/*                                                                  */
*/********************************************************************/
*        DCL  1 VCRENTRY(*)     BASED(VCROPN),
*               2 VCRHEBS       PTR(31),    /* POINTER TO HEB SAVE   */
*               2 VCRAMBL       PTR(31);    /* POINTER TO USER AMBL  */
*/********************************************************************/
*/*                                                                  */
*/*             VCRT UPGRADE ENTRY                                   */
*/*                                                                  */
*/********************************************************************/
*        DCL  1 VCRUPGRD(*)     BASED(VCRUPG),
*               2 VCRUHEBS      PTR(31),    /* POINTER TO HEB SAVE   */
*               2 VCRUAMBL      PTR(31);    /* PTR TO UPGRADE AMBL   */
*/********************************************************************/
*/*                                                                  */
*/*             VCRT INDEX ENTRY                                     */
*/*                                                                  */
*/********************************************************************/
*        DCL  1 VCRINDEX(*)     BASED(VCRIDX),
*               2 VCRICWA       PTR(31),    /* POINTER TO ICWA       */
*               2 VCRBUFPT      PTR(31);    /* PTR TO ASSOCIATED BUF */
*@EJECT;
*/********************************************************************/
*/*                                                                  */
*/*             VCR CORE DESCRIPTION                                 */
*/*                                                                  */
*/********************************************************************/
*        DCL  1 VCRCORE         BASED,
*               2 VCRCHDR,                  /* VCR CORE HEADER       */
*                 3 VCRCNM      CHAR(8),    /* VCR CORE NAME FOR ID  */
*                 3 VCRCNEXT    PTR(31),    /* PTR TO NEXT CORE BLK  */
*                 3 VCRCDESC    FIXED(31),  /* CLEANUP INFORMATION   */
*                   4 VCRCSP    FIXED(8),   /* SUBPOOL               */
*                   4 VCRCLEN   FIXED(24),  /* LENGTH                */
*                 3 VCRCPTRA    PTR(31),    /* PTR TO 1ST AVAIL BYTE */
*                 3 VCRCLENA    FIXED(31),  /* LENGTH OF AVAIL CORE  */
*               2 VCRCDATA      CHAR(*);    /* CORE FOR DATA         */
*@SPACE;
*/********************************************************************/
*/*                                                                  */
*/*             VCR HEB SAVE DESCRIPTION                             */
*/*                                                                  */
*/********************************************************************/
*        DCL  1 VCRHEBSA        BASED,
*               2 VCRHHDR,                  /* HEADER PER CMB ENTRY  */
*                 3 VCRHNENT    FIXED(15),  /* NUMBER OF ENTRIES     */
*                 3 VCRHFLG     BIT(8),     /* HEADER FLAGS          */
*                   4 VCRHFCON  BIT(1),     /* CONTINUATION HEADER   */
*                   4 VCRHFREL  BIT(1),     /* FREEMAIN AT RESTART   */
*                 3 VCRHCID     FIXED(8),   /* RELATIVE CMB ENTRY NO.*/
*                 3 VCRHNEXT    PTR(31),    /* POINTER TO NEXT HEADER*/
*               2 VCRHENT(*) CHAR(LENGTH(HEBHDREL)) BDY(WORD),/* HEADER
*                                         ELEMENT SAVED AT CHECKPOINT*/
*                 3 VCRHEFMN,               /* FREEMAIN INFORMATION  */
*                   4 VCRHESP   FIXED(8),   /* SUBPOOL OF STORAGE    */
*                   4 VCRHELN   FIXED(24),  /* LENGTH OF GOTTEN CORE */
*                   4 VCRHESPT  PTR(31);    /* STORAGE ADDRESS       */
*@SPACE;
*        DCL  VCRNAME  CHAR(8) CONSTANT('IDAVCRT ');/* VCRT ID NAME  */
*        DCL  VCRCNAME CHAR(8) CONSTANT('VCRCORE ');/* VCR CORE NAME */
