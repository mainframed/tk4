*/********************************************************************/
*/*                                                                  */
*/*   MACRO NAME = IDAPLH                                            */
*/*                                                                  */
*/*   DESCRIPTIVE NAME = VSAM PLACE HOLDER                           */
*/*                                                                  */
*/*   FUNCTION = THIS MACRO CONTAINS:                                */
*/*              IDAPLHDR = PLACE HOLDER HEADER - CONTAINS THE       */
*/*               NUMBER OF PLACE HOLDERS AND STATISTICS             */
*/*              IDAPLH = CONTAINS POSITION INFORMATION              */
*/*              PLHEXTEN = PLH EXTENSION PRESENT WHEN LSR OR GSR    */
*/*               OPTIONS ARE IN EFFECT                              */
*/*              PLHKEY = CONTAINS THE CURRENT KEY                   */
*/*               THIS MACRO ALSO CONTAINS VARIOUS DECLARES FOR      */
*/*               JOURNALING                                         */
*/*                                                                  */
*/*   CONTROL BLOCK STRUCTURE = THE IDAPLHDR IS POINTED TO BY THE    */
*/*              IDAAMB. THE FIRST IDAPLH IS ADJACENT TO THE         */
*/*              IDAPLHDR. SUBSEQUENT IDAPLHS ARE POINTED TO BY      */
*/*              PLHCHAIN.                                           */
*/*                                                                  */
*/*   INCLUDED MACROS = NONE                                         */
*/*                                                                  */
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
*/*                                                                  */
*/*   CREATED BY = VSAM OPEN                                         */
*/*                                                                  */
*/*   STATUS = VS/2 RELEASE 4.1  (CHANGE FLAG @Z40GSXX)              */
*/*                                                                  */
*/*   DATE OF LAST CHANGE = 15 AUGUST 75                             */
*/*                         3 JAN 77                          ZA14811*/
*/*                         02 FEB 77               @XA16338,@ZA14830*/
*/*                         04 APR 78                        @ZA32757*/
*/*                                                                  */
*/********************************************************************/
*  DCL  1 IDAPLHDR BASED,                  /* LEVEL 1 DECLARE      */
*         2 PLHID CHAR(1),                 /* PLH ID '30'X         */
*         2 PLHCNT PTR(8),                 /* NUMBER OF PLH ENTRIES*/
*         2 PLHELTH PTR(15),               /* LENGTH OF EACH ENTRY */
*         2 PLHDRREQ FIXED(31),     /* DEFER REQUEST COUNT   @X04SVLC*/
*         2 PLHDRMAX FIXED(15),     /* MAX NBR PLH IN CONCURRENT USE
*                                                            @X04SVLC*/
*         2 PLHDRCUR FIXED(15),     /* CURRENT NBR OF ACTIVE PLHS
*                                                            @X04SVLC*/
*         2 PLHIOSDQ PTR(31);       /* I/O SUPPORT DEFERRAL QUEUE
*                                      HEADER                @X04SVLC*/
*/********************************************************************/
*/* VSAM PLACE HOLDER                                                */
*/********************************************************************/
*  DCL  1 IDAPLH BASED,                    /* ENTRY DEFINITION     */
*         2 PLHAVL CHAR(1),                /* 0 IF ENTRY AVAILABLE */
*         2 PLHATV CHAR(1),                /* 0 IF NO ACTIVE REQ   */
*         2 PLHFLG1 BIT(8),                /* PROCESS FLAGS--BYTE 1*/
*           3 PLHEOVW BIT(1),              /* EOV WAITING          */
*           3 PLHENDRQ BIT(1),             /* ON IF ENDREQ ISSUED  */
*           3 PLHASKBF BIT(1),             /* LESS THAN MAX BFRS   */
*           3 PLHSSR BIT(1),               /* SEQ SET REQ          */
*           3 PLHRDEXC BIT(1),             /* PLH IN READ EXCL MODE*/
*           3 PLHASYRQ BIT(1),             /* IRB EXECUTION NEEDED */
*           3 PLHDRPND BIT(1),             /* DEFERRED REQ PENDING */
*           3 PLHSR BIT(1),           /* SUSPEND/RESUME PROCESSING IN
*                                        PLACE OF WAIT/POST @Z40GSDT*/
*         2 PLHFLG2 BIT(8),                /* PROCESS FLAGS--BYTE 2*/
*           3 PLHUPD BIT(1),               /* LAST REQUEST GET UPD */
*           3 PLHSQINS BIT(1),             /* SEQ INSERT MODE      */
*           3 PLHKEYMD BIT(1),             /* KEYED MODE             */
*           3 PLHADDTE BIT(1),             /* ADD TO END PROCESSING*/
*           3 PLHKRE   BIT(1),             /* END OF KEY RANGE     */
*           3 PLHCIINS BIT(1),             /* CI SPLIT INSERT      */
*           3 PLHSVADV BIT(1),             /* SAVE PLHNOADV--SCANDATA*/
*           3 PLHIWAIT BIT(1),             /* IDAWAIT TEST         */
*         2 PLHEFLGS BIT(16),              /* EXCEPTION FLAGS--1   */
*           3 PLHNOSPC BIT(1),             /* NO SPACE--CREATE MODE*/
*           3 PLH1ST   BIT(1),             /* 1ST REQ AFTER OPEN   */
*           3 PLHSKPER BIT(1),             /* SKIP ACROSS ERROR CNV*/
*           3 PLHSRINV BIT(1),      /* SPAN RCD EXCEPTION    @X04SVLC*/
*           3 PLHNOADV BIT(1),             /* DONT ADVANCE PLH     */
*           3 PLHEODX BIT(1),              /* EODAD TAKEN          */
*           3 PLHINVAL BIT(1),             /* ON IF INVALID        */
*           3 PLHDSCAN BIT(1),             /* SCAN DATA AFTER RD EX*/
*           3 PLHRSTRT BIT(1),      /* RESTART FLAG          @X04SVLC*/
*           3 * BIT(7),             /* RESERVED              @X04SVLC*/
*         2 PLHFLG3 BIT(8),         /* FLAGS -- BYTE 3       @X04SVLC*/
*           3 PLHSRBSG BIT(1),      /* SPAN RCD SEGS ARE INCONSISTANT
*                                                            @X04SVLC*/
*           3 PLHRAHD BIT(1),       /* READ-AHEAD            @X04SVLC*/
*           3 PLHSLVLD BIT(1),      /* ON IF 2ND LVL IDX VALID
*                                                            @X04SVLC*/
*           3 PLHBWD BIT(1),        /* PREV REQ SPEC BWD DIRECTION
*                                                            @X04SVLC*/
*           3 PLHRVRS BIT(1),       /* I/0 CHAIN REVERSED IF ON
*                                                            @X04SVLC*/
*           3 PLHEOVDF BIT(1),     /* EOV DEFER ON IRB FLAG  @ZA10850*/
*         2 PLHAFLGS BIT(8),       /* MORE FLAGS-NOT CLEARED @X04SVLC*/
*           3 PLHDRLM BIT(1),       /* DIRECT REQ ISSUED DURING
*                                      CREATE                @X04SVLC*/
*           3 PLHIOSRQ BIT(1),      /* I/O SUPPORT REQUEST   @ZA04719*/
*           3 PLHVAMB BIT(1),       /* PLHAMB IS VALID       @X04SVLC*/
*           3 PLHDBDC BIT(1),       /* PLH FROM SHR POOL     @X04SVLC*/
*           3 PLHIOSID BIT(1),      /* I/O SUPPORT ID        @X04SVLC*/
*           3 PLHRABWD BIT(1),      /* RA ENTERED IN BWD     @X04SVLC*/
*           3 PLHRAE   BIT(1),      /* RA KEY EQUAL HIT      @ZA14811*/
*         2 PLHACB   PTR(31),              /* POINTER TO ACB         */
*         2 PLHDSTYP CHAR(1),              /* DATA SET TYPE          */
*                                          /*     01 FOR DATA        */
*                                          /*     02 FOR INDEX       */
*         2 PLHRMIN  PTR(8),               /* READ THRESHOLD         */
*         2 PLHFRCNT PTR(8),               /* FREE BFRS IN ENTRY   */
*         2 PLHBFRNO PTR(8),               /* TOTAL NO OF BFRS     */
*         2 PLHMRPL PTR(31),               /* ADDR OF HEADER RPL   */
*         2 PLHCRPL PTR(31),               /* ADDR OF CURRENT RPL  */
*         2 PLHDSIDA PTR(31),              /* PTR TO DSID          */
*         2 PLHCRBA PTR(32),               /* CURRENT RBA          */
*           3 PLHJORBA PTR(32),            /* JRNAD CHANGE--OLD RBA*/
*               5 PLHUPECB PTR(31),        /* UPAD ADDR ECB  @ZA07549*/
*         2 PLHJRNLL FIXED(31),            /* JRNAD--LENGTH OF DATA*/
*         2 PLHJNRBA PTR(32),              /* JRNAD CHANGE--NEW RBA*/
*         2 PLHJCODE CHAR(1),              /* JRNAD ENTRY CODE     */
*           3 PLHUCODE CHAR(1),            /* UPAD EXIT CODE @ZA07549*/
*         2 PLHRCODE PTR(8),               /* PREVIOUS REQUEST CODE*/
*         2 PLHEOVR CHAR(1),               /* EOV REQ CODE--ALLOC/MNT*/
*         2 PLHRSCS BIT(8),              /* RESOURCE BITS AND FEEDBACK
*                                           CODE INDICATORS  @ZA32757*/
*           3 PLHINEOV BIT(1),           /* EOV IN PROCESS   @ZA32757*/
*           3 PLHBUFHD BIT(1),           /* PLH LOCKED DATA BUFC
*                                           HEADER           @ZA32757*/
*           3 * BIT(2),                  /* RESERVED         @ZA32757*/
*           3 PLHASYER BIT(1),           /* ASYNCH DEFERRED REQUEST
*                                           CANNOT BE RESTARTED BY
*                                           TERMRPL          @ZA32757*/
*           3 PLHDSERR BIT(1),           /* POSSIBLE DATA SET ERROR
*                                           CONDITION DETECTED BY
*                                           TERMRPL:  (1) INCOMPLETE
*                                           I/O OR, (2) BUFFER IN MUST
*                                           WRITE STATUS     @ZA32757*/
*           3 PLHDBPER BIT(1),           /* ERROR IN PLH DATA BUFC
*                                           POINTER DETECTED BY
*                                           TERMRPL          @ZA32757*/
*           3 * BIT(1),                  /* RESERVED         @ZA32757*/
*         2 PLHARDB    PTR(31),            /* CURRENT DATA ARDB PTR*/
*         2 PLHLRECL PTR(31),              /* LENGTH OF LAST RECORD*/
*         2 PLHDBUFC PTR(31),              /* PTR TO CURR DATA BUFC*/
*         2 PLHNBUFC PTR(31),              /* PTR TO NEXT READ BUFC*/
*         2 PLHRECP PTR(31),               /* BUFC CURR REC POINTER*/
*         2 PLHFSP PTR(31),                /* FREE SPACE POINTER   */
*         2 PLHRDFP PTR(31),               /* PTR TO CURRENT RDF   */
*         2 PLHRDFC PTR(15),               /* CURR RDF REPLIC CNT  */
*         2 PLHSRSID PTR(16),        /* SPAN RCD SEG ID      @X04SVLC*/
*         2 PLHDIOB PTR(31),               /* PTR TO DATA IOB      */
*           3 PLHIIOB PTR(31),       /* PTR TO INDEX IOB     @X04SVLC*/
*         2 PLHARET PTR(31),               /* ASYNCH RTN RETURN ADR*/
*    /* PLHSAVE1 - PLHSAVE6 ARE NOT TO BE USED BY BUFFER MANAGER,
*       I/O MANAGER, IDADRQ, OR IDATJXIT                     @X04SVLC*/
*         2 PLHSAVE1 PTR(31),              /* REGISTER SAVE 1      */
*         2 PLHSAVE2 PTR(31),              /* REGISTER SAVE 2      */
*         2 PLHSAVE3 PTR(31),              /* REGISTER SAVE 3      */
*         2 PLHSAVE4 PTR(31),              /* REGISTER SAVE 4      */
*         2 PLHSAVE5 PTR(31),              /* REGISTER SAVE 5      */
*         2 PLHSAVE6 PTR(31),              /* REGISTER SAVE 6      */
*         2 PLHAMB PTR(31),          /* IDADRQ-IDATJXIT AMB SAVE AREA
*                                                            @X04SVLC*/
*         2 PLHCHAIN PTR(31),        /* CHAIN PTR            @X04SVLC*/
*         2 PLHRETO FIXED(15),             /* OFFSET TO CURR RETURN*/
*         2 PLHRETOS FIXED(15),      /* INITIAL OFFSET       @ZA16007*/
*         2 PLHRET1(11) PTR(31),           /* 11 RETURN REGS         */
*         2 PLHASAVE PTR(31),              /* ASYNCH SAVEAREA START*/
*         2 * PTR(31),                     /* 13 TH  RETURN REG    */
*         2 * PTR(31),                     /* 14 TH  RETURN REG    */
*         2 PLHAR14 PTR(31),               /* RETURN FROM ASYNCH     */
*         2 PLHEOVPT PTR(31),              /* PTR TO RBA FOR EOV     */
*           3 PLHDDDD PTR(32),             /* PREVIOUS REQUEST RBA   */
*         2 PLHNRBA    PTR(32),            /* NEXT RBA               */
*         2 PLHIBUFC PTR(31),              /* PTR TO INDEX BUFC      */
*         2 PLHRBUFC PTR(31),        /* IDADRQ-IDATJXIT RBUFC SAVE AREA
*                                                            @X04SVLC*/
*         2 PLHISPLP   PTR(31),            /* INDEX SEARCH PARML PTR */
          2 PLHIXSPL BDY(WORD),            /* INDEX SEARCH PARM LIST */
*           3 PLHSSRBA PTR(32),            /* INDEX CINV RBA         */
*             4 PLHHIREC FIXED(32), /* HI-RECORD RBA         @X04SVLC*/
            3 PLHIXBFC PTR(31),            /* PTR TO IX SRCH BUFC    */
*           3 *        CHAR(24),           /*                        */
*         2 PLHWAX PTR(31),         /* PTR TO PATH WORK AREA @X04SVLC*/
*           3 PLHXPLH PTR(31),      /* PTR TO AIX PLH FR BASE
*                                                            @X04SVLC*/
*         2 PLHLLOR PTR(31),        /* PTR LEAST LEN SEGMENT @X04SVLC*/
*         2 PLHNOSEG FIXED(15),     /* NBR SEG SPAN RCD      @X04SVLC*/
*         2 PLHSRCSG FIXED(15),     /* CUR SEG NBR SPAN RCD  @X04SVLC*/
*         2 PLHSLRBA FIXED(32),     /* RBA 2ND LEVEL INDEX   @X04SVLC*/
*         2 PLHKEYPT PTR(31),       /* PTR TO CUR KEY        @X04SVLC*/
*         2 PLHDRRSC PTR(31),       /* ADDR OF DEFERRED REQUEST
*                                      FLAG BYTE             @X04SVLC*/
*         2 PLHPARM1 PTR(31),       /* IDADRQ-IDATJXIT RPARM1 SAVE
*                                      AREA                  @X04SVLC*/
*         2 PLHR13 PTR(31),         /* IDADRQ-I/O MGR R13 SAVE AREA
*                                                            @X04SVLC*/
*         2 PLHDRMSK BIT(8),        /* MASK FOR DEFERRED REQUEST
*                                            RESOURCE TEST   #X04SVLC*/
*         2 PLHTMRPL BIT(8),        /* TERMRPL PROCESS BITS  @ZA32757*/
*           3 PLHTERM BIT(1),       /* TERMRPL IN PROCESS    @ZA32757*/
*           3 PLHTMBUF BIT(1),    /* TERMRPL FREED BUFC HDR  @ZA32757*/
*           3 PLHTMDIW BIT(1),      /* TERMRPL FREED DIWA    @ZA32757*/
*           3 PLHTMDTA BIT(1),      /* TERMRPL FREED DATA BUFC
*                                                            @ZA32757*/
*           3 PLHTMINX BIT(1),      /* TERMRPL FREED INDEX BUFC
*                                                            @ZA32757*/
*           3 PLHTMIOB BIT(1),      /* TERMRPL FREED IOMB    @ZA32757*/
*           3 * BIT(2),             /* RESERVED              @ZA32757*/
*         2 * PTR(16),              /* RESERVED              @ZA32757*/
*      /* CROSS - REGION POST PARM LIST                      @X04SVLC*/
*         2 PLHECB PTR(31),         /* ADDR OF ECB           @X04SVLC*/
*         2 PLHASCB PTR(31),        /* ADDR OF ASCB          @X04SVLC*/
*         2 PLHERRET PTR(31),       /* ADDR OF ERROR RETURN  @X04SVLC*/
*         2 PLHEND CHAR(*);         /* PLH END               @X04SVLC*/
*/********************************************************************/
*/* VSAM PLACE HOLDER EXTENSION                                      */
*/********************************************************************/
*  DCL 1 PLHEXTEN DEFINED(PLHEND),  /* LSR/GSR EXTENSION     @X04SVLC*/
*         2 PLHRESR1 PTR(31),        /* ADDR OF SERIAL RESOURCE HELD
*                                                            @X04SVLC*/
*         2 * BIT(8),                /* UNUSED               @X04SVLC*/
*         2 PLHBMWRK BIT(8),         /* BUFFER MANAGER WORK FLAGS
*                                                            @X04SVLC*/
*           3 PLHBMRDF BIT(1),       /* RBA FOUND FLAG       @X04SVLC*/
*           3 PLHBEUC BIT(1),        /* END OF USE CHAIN     @X04SVLC*/
*           3 PLHBMSOV BIT(1),       /* START OVER FLAG      @X04SVLC*/
*         2 PLHRDCNT FIXED(15),      /* SA FOR AMBRDCNT      @X04SVLC*/
*        2 PLHBMSV1 PTR(31),         /* BFR MGR SA           @X04SVLC*/
*        2 PLHBMSV2 PTR(31),         /*                      @X04SVLC*/
*        2 PLHBMSV3 PTR(31),         /*                      @X04SVLC*/
*        2 PLHBMSV4 PTR(31),         /*                      @X04SVLC*/
*        2 PLHBMSV5 PTR(31);         /*                      @X04SVLC*/
*/********************************************************************/
*/* VSAM PLACE HOLDER KEY                                            */
*/********************************************************************/
*  DCL PLHKEY CHAR(*)BASED(PLHKEYPT);         /* CURRENT KEY #X04SVLC*/
*  DCL PLHRRN PTR(31) BASED(PLHKEYPT);/* PREV RELATIVE NUMBER@ZA14830*/
*/********************************************************************/
*/* VSAM PLACE HOLDER PUSH DOWN LIST                                 */
*/********************************************************************/
*  DCL PLHPDL (20) PTR(31) BASED;    /* R14 SAVE AREA        @ZA16007*/
*  DCL PLHPDLE PTR(31)BASED(ADDR(PLHRET1)+PLHRETO);/* NXT SA @ZA16007*/
*/********************************************************************/
*/* VSAM JOURNALING CONSTANTS                                        */
*/********************************************************************/
*  DCL PLHTDATA BIT(8) CONSTANT('00000001'B); /* DATA  DS TYPE CODE  */
*  DCL PLHTIDX  BIT(8) CONSTANT('00000010'B); /* INDEX DS TYPE CODE  */
*  DCL PLHJGET BIT(8) CONSTANT('00000000'B); /* JRNAD ENTRY FOR GET  */
*  DCL PLHJPUT BIT(8) CONSTANT('00000100'B); /* JRNAD ENTRY FOR PUT  */
*  DCL PLHJERS BIT(8) CONSTANT('00001000'B); /* ERASE JRNAD ENTRY  */
*  DCL PLHJRBAC BIT(8) CONSTANT('00001100'B); /* RBA CHANGE--JRNAD */
*  DCL PLHJCAS BIT(8) CONSTANT('00100000'B); /* START OF CA SPLIT
*                                    JRNAD CODE              @X04SVLC*/
*  DCL PLHJIER BIT(8) CONSTANT('00100100'B); /* PHYSICAL INPUT ERROR
*                                    JRNAD CODE              @X04SVLC*/
*  DCL PLHJOER BIT(8) CONSTANT('00101000'B); /* PHYSICAL OUTPUT ERROR
*                                    JRNAD CODE              @X04SVLC*/
*  DCL PLHJIXM BIT(8) CONSTANT('00101100'B); /* INDEX MODIFICATION
*                                    JRNAD CODE              @X04SVLC*/
*  DCL PLHRSRSG BIT(8)CONSTANT('00010000'B);/* READ SPANNED RECORD
*                                       SEGMENT              @X04SVLC*/
*  DCL PLHWSRSG BIT(8)CONSTANT('00010100'B);/* WRITE SPANNED RECORD
*                                       SEGMENT              @X04SVLC*/
*/********************************************************************/
*/* VSAM UPAD EXIT CONSTANTS                                 @ZA07549*/
*/********************************************************************/
*  DCL PLHUWAIT BIT(8) CONSTANT('00000000'B); /* UPAD WAIT EXIT CODE
*                                                            @ZA07549*/
