*%;/*
         MACRO
         IHAICB &DSECT=YES
.* /* START OF SPECIFICATIONS ****
.*
.*01  MODULE-NAME = IHAICB
.*
.*01  COPYRIGHT = NONE
.*
.*01  STATUS = VS2 RELEASE 2 LEVEL 2
.*
.*01  CHANGE-ACTIVITY = ICBINDIC OFFSET FOR PLS
.*
.*01  DESCRIPTIVE-NAME = INTERRUPT CONTROL BLOCK
.*
.*01  FUNCTION = BSAM AND QSAM CHAINED SCHEDULING.
.*    SIMILAR TO IOB, BUT KNOWN ONLY TO ACCESS METHOD.
.*    ONE ICB IS PROVIDED FOR EACH BLOCK CONCURRENTLY PROCESSIBLE
.*    CHANNEL PROGRAM SEGMENTS FOLLOWING ICBS ARE DYNAMICALLY
.*    CHAINED TOGETHER, AND CHAINED FROM SEGMENT FOLLOWING IOB
.*
.*01  MODULE-TYPE = MACRO
.*
.*02    MACRO-SIZE = 375 STATEMENTS
.*
.*02    PARAMETER-RECEIVED = DSECT
.*
.*03      TYPE = CHARACTER STRING
.*
.*04        VALUE = YES OR NO
.*
.*01  TABLES = NONE
.*
.*01  INNER-MACROS = NONE
.*
.*01  SYSTEM-MACROS = NONE
.*
.*
.**** END OF SPECIFICATIONS ***/
* /* MACCOMP Y-2 SC1D0/SJD48            */
* /* MACSTAT Y-2 73124/021160           */
*/********************************************************************/
*/*            INTERRUPTION CONTROL BLOCK                            */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON ICB GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */
*/*      PL/S - DCL ICBPTR  AS A BASE FOR THE ICB                    */
*/*                                                                  */
*/*  USE OF ICB                                                      */
*/*         THIS CONTROL BLOCK IS USED BY BSAM AND QSAM WITH         */
*/*         CHAINED SCHEDULING.  THE NUMBER OF ICBS IS CONTROLLED    */
*/*         BY NCP (BSAM) OR BUFNO (QSAM).  EACH ICB IS FOLLOWED     */
*/*         BY A CHANNEL PROGRAM SEGMENT SIMILAR TO THE NORMAL       */
*/*         CHANNEL PROGRAM FOR THE DEVICE, EXCEPT THAT FOR DASD     */
*/*         DEVICES IT HAS NO SEEK/SEARCH LOGIC.  THE CHANNEL        */
*/*         PROGRAM SEGMENTS TERMINATE WITH A NOP/TIC COMMAND        */
*/*         POINTING TO THE NEXT ICB CHANNEL PROGRAM SEGMENT.        */
*/*         THE ICBS ARE USED BY THE ACCESS METHOD AS IF THEY WERE   */
*/*         IOBS, BUT THEY ARE NEVER PASSED TO EXCP.                 */
*/*                                                                  */
*/*         ________________________________________________         */
*/*  0 (00) ×           ×                                   ×        */
*/*         ×  ICBNFLG1 ×               ICBNICBB            ×        */
*/*         ×___________×___________________________________×        */
*/*  4 (04) ×                                               ×        */
*/*         ×                   ICBNECB                     ×        */
*/*         ×_______________________________________________×        */
*/*  8 (08) ×           ×           ×           ×           ×        */
*/*         ×  ICBFLAG1 ×  ICBFLAG2 ×  ICBSENS0 ×  ICBSENS1 ×        */
*/*         ×___________×___________×___________×___________×        */
*/* 12 (0C) ×                                               ×        */
*/*         ×                   ICBECBPT                    ×        */
*/*         ×_______________________________________________×        */
*/* 16 (10) ×           ×                                   ×        */
*/*         ×  ICBECBCC ×                                   ×        */
*/*         ×___________×       ICBCSW                      ×        */
*/* 20 (14) ×                                               ×        */
*/*         ×                                               ×        */
*/*         ×_______________________________________________×        */
*/* 24 (18) ×                                               ×        */
*/*         ×                   ICBSTART                    ×        */
*/*         ×_______________________________________________×        */
*/* 28 (1C) ×        ICBINCAM       ×           ×           ×        */
*/*         ×  ICBCRDCC ×  ICBCRILC ×  ICBINDIC ×    *      ×        */
*/*         ×___________×___________×___________×___________×        */
*/* 32 (20) ×                                               ×        */
*/*         ×                                               ×        */
*/*         ×                   ICBSEEK                     ×        */
*/* 36 (24) ×                                               ×        */
*/*         ×                                               ×        */
*/*         ×_______________________________________________×        */
*/* 40 (28) ×                                               ×        */
*/*         ×                   ICBDACCW                    ×        */
*/*                                                                  */
*/********************************************************************/
*%/*
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').NODSCT
ICB      DSECT
         AGO   .CONT
.NODSCT  ANOP
         DS    0D
ICB      EQU   *
.CONT    ANOP
***********************************************************************
*
*              ICB SECTION 1 -- EQUIVALENT TO
*              IOB NORMAL PREFIX
*
***********************************************************************
*
ICBNICBA DS    0A ------ ADDR.NEXT ICB ON CHAIN
ICBNFLG1 DS    B -       FLAG BYTE
ICBPRTOV EQU   X'80' --- 'PRTOV' HAS OCCURRED
ICBWRITE EQU   X'40' --- 'WRITE' OPERATION IN PROCESS
ICBREAD  EQU   X'20' --- 'READ' OPERATION IN PROCESS
ICBUPDAT EQU   X'10' --- BLOCK IS TO BE UPDATED
ICBBKSPC EQU   X'08' --- ICB BEING USED FOR BACKSPACE,CONTROL,NOTE/PT.
ICBSPAN  EQU   X'04' --- THIS RECORD IS A SPANNED RECORD
ICBRSV06 EQU   X'02',,C'X' RESERVED
ICBFIRST EQU   X'01' --- THIS IS FIRST ICB ON CHAIN
ICBNICBB DS    AL3 ----- ADDR.NEXT ICB ON CHAIN
ICBNECB  DS    F ------- EVENT CONTROL BLOCK
         SPACE 3
***********************************************************************
*
*              ICB SECTION 2 -- EQUIVALENT TO
*              FIRST PART OF IOB STANDARD SECTION
*
***********************************************************************
*
ICBFLAG1 DS    B -       FLAG BYTE
ICBDATCH EQU   X'80' --- DATA CHAINING USED IN CHANNEL PROGRAM
ICBCMDCH EQU   X'40' --- COMMAND CHAINING USED IN CHANNEL PROGRAM
ICBERRTN EQU   X'20' --- ERROR ROUTINE IS IN CONTROL
ICBRPSTN EQU   X'10' --- DEVICE IS TO BE REPOSITIONED
ICBCYCCK EQU   X'08' --- CYCLIC REDUNDANCY CHECK NEEDED(TAPE ONLY)
ICBFCREX EQU   X'08' --- FETCH COMMAND RETRY EXIT (DIRECT ACCESS ONLY)
ICBIOERR EQU   X'04' --- I/O ERROR HAS OCCURRED
ICBUNREL EQU   X'02' --- THIS I/O REQUEST IS UNRELATED(NON-SEQUENTIAL)
ICBRSTRT EQU   X'01' --- RESTART ADDR.IN ICB TO BE USED
ICBFLAG2 DS    B -       FLAG BYTE
ICBHALT  EQU   X'80' --- HALT I/O HAS BEEN ISSUED BY SVC PURGE ROUTINE
ICBSENSE EQU   X'40' --- ISSUE SENSE COMMAND AFTER DEVICE END OCCURS
ICBPURGE EQU   X'20' --- ICB HAS BEEN PURGED *ALLOW I/O TO QUIESCE
ICBRDHA0 EQU   X'10' --- HOME ADDRESS TO BE READ * NO SEEK NEEDED
ICBALTTR EQU   X'08' --- NO TEST FOR OUT-OF-EXTENT * AN ALTERNATE TRACK
*                        IS IN USE
ICBSKUPD EQU   X'04' --- SEEK ADDRESS IS BEING UPDATED -CYLINDER END
*                        OR FILE MASK VIOLATION HAS OCCURRED
ICBSTATO EQU   X'02' --- DEVICE END STATUS HAS BEEN ORED WITH
*                        CHANNEL END STATUS - GRAPHICS DEVICE
ICBPNCH  EQU   X'01' --- TURNED ON BY QSAM WHEN ERROR RECOVERY IS TO
*                        BE PROVIDED FOR THE 2540 CARD PUNCH
ICBSENS0 DS    B ------- FIRST SENSE BYTE
ICBS0B0  EQU   X'80' --- BIT 0 (DEVICE DEPENDENT)
ICBS0B1  EQU   X'40' --- BIT 1 (DEVICE DEPENDENT)
ICBS0B2  EQU   X'20' --- BIT 2 (DEVICE DEPENDENT)
ICBS0B3  EQU   X'10' --- BIT 3 (DEVICE DEPENDENT)
ICBS0B4  EQU   X'08' --- BIT 4 (DEVICE DEPENDENT)
ICBS0B5  EQU   X'04' --- BIT 5 (DEVICE DEPENDENT)
ICBS0B6  EQU   X'02' --- BIT 6 (DEVICE DEPENDENT)
ICBS0B7  EQU   X'01' --- BIT 7 (DEVICE DEPENDENT)
ICBSNSC9 EQU   X'01' --- CHANNEL 9 SENSED IN CARRIAGE TAPE
ICBSENS1 DS    B ------- SECOND SENSE BYTE
ICBS1B0  EQU   X'80' --- BIT 0 (DEVICE DEPENDENT)
ICBS1B1  EQU   X'40' --- BIT 1 (DEVICE DEPENDENT)
ICBS1B2  EQU   X'20' --- BIT 2 (DEVICE DEPENDENT)
ICBS1B3  EQU   X'10' --- BIT 3 (DEVICE DEPENDENT)
ICBS1B4  EQU   X'08' --- BIT 4 (DEVICE DEPENDENT)
ICBS1B5  EQU   X'04' --- BIT 5 (DEVICE DEPENDENT)
ICBS1B6  EQU   X'02' --- BIT 6 (DEVICE DEPENDENT)
ICBS1B7  EQU   X'01' --- BIT 7 (DEVICE DEPENDENT)
ICBECBPT DS    0A ------ ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION
ICBECBCC DS    CL1 ---- COMPLETION CODE FOR THIS I/O REQUEST
ICBECBPB DS    AL3 ----- ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION
ICBFLAG3 DS    B ------- ERROR ROUTINE FLAG BYTE
ICBCSW   DS    CL7 ----- LOW ORDER 7 BYTES OF CSW AT CHANNEL END
ICBSTART DS    0A ------ ADDRESS OF CHANNEL PROGRAM
ICBSIOCC DS    B ------- BITS 2 AND 3 = C.C. FROM SIO
ICBSTRTB DS    AL3 ----- ADDRESS OF CHANNEL PROGRAM
*
***********************************************************************
*        EQUIVALENCE WITH IOB IS LOST AT THIS POINT, SINCE THE
*        TWO IOB WORDS IOBDCBPT AND IOBRESTR ARE NOT IN THE ICB
***********************************************************************
*
ICBINCAM DS    0H ------ VALUE USED TO INCREMENT BLOCK COUNT ON TAPE
ICBCRDCC DS    CL1 ----- OPTICAL READER: DATA CHECK ERROR COUNT
ICBCRILC DS    CL1 ----- OPTICAL READER: INCORRECT LENGTH ERROR COUNT
         SPACE 2
ICBINDIC DS    BL1 ----- SPECIAL CONDITION INDICATORS
ICBVOLFL EQU   X'80' --- END OF VOLUME WITH READ/WRITE ERROR
ICBRSV07 DS    BL1 ----- RESERVED
         SPACE 3
***********************************************************************
*                                                                     *
*                   EXTENSION SECTIONS OF THE ICB                     *
*                                                                     *
***********************************************************************
         SPACE 1
ICBEXTEN DS    0D
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *  DIRECT ACCESS EXTENSION *** 8 BYTES   *
*                            *                                        *
*                            ******************************************
         SPACE 1
ICBSEEK  DS    0CL8 ----
ICBM     DS    CL1 ----- RELATIVE EXTENT NUMBER FOR THIS REQUEST(0-15)
ICBBB    DS    0CL2 ---- BIN NUMBER(DATA CELL)
ICBBB1   DS    CL1
ICBBB2   DS    CL1
ICBCC    DS    0CL2 ---- CYLINDER NUMBER
ICBCC1   DS    CL1
ICBCC2   DS    CL1
ICBHH    DS    0CL2 ---- TRACK NUMBER
ICBHH1   DS    CL1
ICBHH2   DS    CL1
ICBR     DS    CL1 ----- RECORD NUMBER
ICBDACCW DS    0D ------ CHANNEL PROGRAM SEGMENT START
         MEND
**/;
*
* DECLARE
*   1 ICB BASED(ICBPTR),
*
* /* *************************************************************** */
* /*                                                                 */
* /*           ICB SECTION 1 -- EQUIVALENT TO                        */
* /*           IOB NORMAL PREFIX                                     */
* /*                                                                 */
* /* *************************************************************** */
*
*    2 ICBNICBA PTR(31),             /* ADDR.NEXT ICB ON CHAIN       */
*     3 ICBNFLG1 BIT(8),             /* FLAG BYTE                    */
*      4 ICBPRTOV BIT(1),            /* 'PRTOV' HAS OCCURRED         */
*      4 ICBWRITE BIT(1),            /* 'WRITE' OPERATION IN PROCESS */
*      4 ICBREAD  BIT(1),            /* 'READ' OPERATION IN PROCESS  */
*      4 ICBUPDAT BIT(1),            /* BLOCK IS TO BE UPDATED       */
*      4 ICBBKSPC BIT(1),            /* ICB BEING USED FOR
*                                       BACKSPACE,CONTROL,NOTE/PT.   */
*      4 ICBSPAN  BIT(1),            /* THIS RECORD IS A SPANNED
*                                       RECORD                       */
*      4 ICBRSV06 BIT(1),            /* RESERVED                     */
*      4 ICBFIRST BIT(1),            /* THIS IS FIRST ICB ON CHAIN   */
*
*     3 ICBNICBB PTR(24),            /* ADDR.NEXT ICB ON CHAIN       */
*
*    2 ICBNECB  FIXED(31),           /* EVENT CONTROL BLOCK          */
*
* /* *************************************************************** */
* /*                                                                 */
* /*           ICB SECTION 2 -- EQUIVALENT TO                        */
* /*           FIRST PART OF IOB STANDARD SECTION                    */
* /*                                                                 */
* /* *************************************************************** */
*
*    2 ICBFLAG1 BIT(8),              /* FLAG BYTE                    */
*     3 ICBDATCH BIT(1),             /* DATA CHAINING USED IN
*                                       CHANNEL PROGRAM              */
*     3 ICBCMDCH BIT(1),             /* COMMAND CHAINING USED IN
*                                       CHANNEL PROGRAM              */
*     3 ICBERRTN BIT(1),             /* ERROR ROUTINE IS IN CONTROL  */
*     3 ICBRPSTN BIT(1),             /* DEVICE IS TO BE REPOSITIONED */
*     3 ICBCYCCK BIT(1),             /* CYCLIC REDUNDANCY CHECK
*                                       NEEDED(TAPE ONLY)            */
*      4 ICBFCREX BIT(1),            /* FETCH COMMAND RETRY EXIT
*                                       (DIRECT ACCESS ONLY)         */
*     3 ICBIOERR BIT(1),             /* I/O ERROR HAS OCCURRED       */
*     3 ICBUNREL BIT(1),             /* THIS I/O REQUEST IS
*                                       UNRELATED(NON-SEQUENTIAL)    */
*     3 ICBRSTRT BIT(1),             /* RESTART ADDR.IN ICB TO BE
*                                       USED                         */
*    2 ICBFLAG2 BIT(8),              /* FLAG BYTE                    */
*     3 ICBHALT  BIT(1),             /* HALT I/O HAS BEEN ISSUED BY
*                                       SVC PURGE ROUTINE            */
*     3 ICBSENSE BIT(1),             /* ISSUE SENSE COMMAND AFTER
*                                       DEVICE END OCCURS            */
*     3 ICBPURGE BIT(1),             /* ICB HAS BEEN PURGED *ALLOW
*                                       I/O TO QUIESCE               */
*     3 ICBRDHA0 BIT(1),             /* HOME ADDRESS TO BE READ * NO
*                                       SEEK NEEDED                  */
*     3 ICBALTTR BIT(1),             /* NO TEST FOR OUT-OF-EXTENT *
*                                       AN ALTERNATE TRACKIS IN USE  */
*     3 ICBSKUPD BIT(1),             /* SEEK ADDRESS IS BEING
*                                       UPDATED -CYLINDER END OR
*                                       FILE MASK VIOLATION HAS
*                                       OCCURRED                     */
*     3 ICBSTATO BIT(1),             /* DEVICE END STATUS HAS BEEN
*                                       ORED WITH CHANNEL END STATUS
*                                       - GRAPHICS DEVICE            */
*     3 ICBPNCH  BIT(1),             /* TURNED ON BY QSAM WHEN ERROR
*                                       RECOVERY IS TO BE PROVIDED
*                                       FOR THE 2540 CARD PUNCH      */
*    2 ICBSENS0 CHAR(1),             /* FIRST SENSE BYTE             */
*     3 ICBS0B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */
*     3 ICBS0B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */
*     3 ICBS0B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */
*     3 ICBS0B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */
*     3 ICBS0B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */
*     3 ICBS0B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */
*     3 ICBS0B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */
*     3 ICBS0B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */
*      4 ICBSNSC9 BIT(1),            /* CHANNEL 9 SENSED IN
*                                       CARRIAGE TAPE                */
*    2 ICBSENS1 CHAR(1),             /* SECOND SENSE BYTE            */
*     3 ICBS1B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */
*     3 ICBS1B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */
*     3 ICBS1B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */
*     3 ICBS1B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */
*     3 ICBS1B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */
*     3 ICBS1B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */
*     3 ICBS1B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */
*     3 ICBS1B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */
*
*    2 ICBECBPT PTR(31),             /* ADDRESS OF ECB TO BE POSTED
*                                       ON I/O COMPLETION            */
*     3 ICBECBCC CHAR(1),            /* COMPLETION CODE FOR THIS I/O
*                                       REQUEST                      */
*     3 ICBECBPB PTR(24),            /* ADDRESS OF ECB TO BE POSTED
*                                       ON I/O COMPLETION            */
*    2 ICBFLAG3 CHAR(1),             /* ERROR ROUTINE FLAG BYTE      */
*    2 ICBCSW   CHAR(7),             /* LOW ORDER 7 BYTES OF CSW AT
*                                       CHANNEL END                  */
*    2 ICBSTART PTR(31),             /* ADDRESS OF CHANNEL PROGRAM   */
*     3 ICBSIOCC CHAR(1),            /* BITS 2 AND 3 = C.C. FROM SIO */
*     3 ICBSTRTB PTR(24),            /* ADDRESS OF CHANNEL PROGRAM   */
*
* /* *************************************************************** */
* /*     EQUIVALENCE WITH THE IOB IS LOST AT THIS POINT, SINCE THE   */
* /*     TWO IOB WORDS IOBDCBPT AND IOBRESTR ARE NOT IN THE ICB      */
* /* *************************************************************** */
*
*    2 ICBINCAM FIXED(15),           /* VALUE USED TO INCREMENT
*                                       BLOCK COUNT ON TAPE          */
*     3 ICBCRDCC FIXED(8),  /* OPTICAL READER:DATA CHECK ERROR COUNT */
*     3 ICBCRILC FIXED(8),  /* OPTICAL RDR:INCORRECT LENGTH ERROR CT.*/
*
*    2 ICBINDIC BIT(8),              /* SPECIAL CONDITION INDICATORS */
*     3 ICBVOLFL BIT(1),             /* EOV WITH READ/WRITE ERROR    */
*    2 ICBRSV07 CHAR(1),             /* RESERVED                     */
*
*
* /* *************************************************************** */
* /*                                                                 */
* /*                EXTENSION SECTIONS OF THE ICB                    */
* /*                                                                 */
* /* *************************************************************** */
*
*    2 ICBEXTEN BDY(DWORD),
*                        /* **************************************** */
*                        /*    DIRECT ACCESS EXTENSION *** 8 BYTES   */
*                        /* **************************************** */
*
*     3 ICBSEEK  CHAR(8),
*      4 ICBM     CHAR(1),           /* RELATIVE EXTENT NUMBER FOR
*                                       THIS REQUEST(0-15)           */
*      4 ICBBB    CHAR(2),           /* BIN NUMBER(DATA CELL)        */
*       5 ICBBB1   CHAR(1),
*       5 ICBBB2   CHAR(1),
*
*      4 ICBCC    CHAR(2),           /* CYLINDER NUMBER              */
*       5 ICBCC1   CHAR(1),
*       5 ICBCC2   CHAR(1),
*
*      4 ICBHH    CHAR(2),           /* TRACK NUMBER                 */
*       5 ICBHH1   CHAR(1),
*       5 ICBHH2   CHAR(1),
*
*      4 ICBR     CHAR(1),           /* RECORD NUMBER                */
*     3 ICBDACCW(*) CHAR(8) BDY(DWORD);
