 @EJECT ;
 /*******************************************************************/
 /********************************************************************/
 /*********************  IGGMZLOC   **********************************/
 /******************** 16 SEPT 72  2000 DB  **************************/
 /*20SET72,0900. ADD ZSDRC TO ZZRC                                   */
 /*20SEP72,0900. CHANGE ZTCIH DIM & LENGTH                           */
 /*26SEP72,1800.CHANGE LEVEL OF ZSTATE                               */
 /*26SEP72,1800.ENCLOSE ZCPSET IN STRUCTURE,RESOLVE LENGTH OF ZCPSET */
 /*30SEP72,1200.ZMCX9 ADD SUBSTRUCTURE                               */
 /*30SEP72,1200.ZPS0.DROPPED DURING LAST EDIT                        */
 /*17OCT72.1200.ADD DEBUG NAME HOLDERS                               */
 /*******************************************************************/
 /*                                                                 */
 /*  IGGMZLOC: SUBALLOCATE DECLARATIONS                             */
 /*                                                                 */
 /*******************************************************************/
* /*                                                                */
* /* MACCOMP Y-2 SC1DE/SJE92                                        */
* /* MACSTAT Y-2 72335/Y02020                                       */
* /*                                                                */
 /*******************************************************************/
     GEN REFS(CCATEMPS)(USING @DATD-(CCATEMPS-IGGCCA),11);
 %INCLUDE  SYSLIB(IGGMSAWA);
 %INCLUDE  SYSLIB(IGGMVEDC);
 @LIST OFF;
 %INCLUDE  SYSLIB(IGGMCDCL);
 %INCLUDE  SYSLIB(IGGMCMDM);

 /*******************************************************************/
 /*******************************************************************/

       %MXRCD ='497';                  /*MAX RECORD SIZE            */
       %MXRCDA = '430';                /*MAX # BYTES IN VAR SECTION */
       %ZVWN  ='10';                   /*SMALLEST W-TYPE RECORD CI# */
       %ZMXNDS='32767';                /*MAX # DATA SETS ON A VOLUME*/
       %ZMXDSX='255';                  /*MAX # DATA SET EXTENTS     */

 /*******************************************************************/

       %ZINIT ='1';                    /*INITIAL                    */
       %ZCONT ='0';                    /*CONTINUE                   */
       %ZEQ   ='''E''';                /*EQUAL                      */
       %ZNEQ  ='''N''';                /*NOT EQUAL                  */
       %ZEOF  ='''F''';                /*END OF FILE                */
       %ZEOR  ='''R''';                /*END OF RECORD              */
       %ZERR  ='''X''';                /*ERROR                      */
       %ZINSP = '''Y''';               /*EXISTS IN THE SPACE        */

        %ZAV  ='1';                    /*RLC STATE AVAILABLE        */
       %ZUN = '-1';                    /*RLC STATE,UNAVAILABLE       */

       %ZDSGC ='CTVDSDGC';
       %ZSDGC ='CTVDSPDC';
       %ZSHGC ='CTVDSPHC';
       %ZGCMSK='TRUEGC';
       %ZDSONV='ZVNDS';

 /*******************************************************************/
 /******************************************************************/
 /******************************************************************/
 DCL   ZLOCBASE   PTR(32) BDY(BYTE) BASED;
 DCL   ZADDR      PTR(32) BDY(BYTE) BASED;
 DCL   ZID     CHAR(8) BDY(BYTE) BASED;
 DCL   ZFLAG   PTR(32) BDY(BYTE);      /*DEBUG ZAP FLAG              */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                                    /*Z-TEMPS,GENERAL USE      */
  1     ZTEMP    BASED                 ,/*WORKING LOCS-VOLATELE    */
   3     ZTNDS    FIXED(15) BDY(BYTE)  ,/*DS SCAN TALLY            */
   3     ZTNDSA   FIXED(15) BDY(BYTE)  ,/*DS IN SPACE SCAN TALLY   */
   3     ZNT      FIXED(15) BDY(BYTE)  ,/*WORKING REG,ZTNT         */
   3     ZTC      FIXED(15) BDY(BYTE)  ,/*TRACK TALLY IN MAP SCAN  */
   3     ZSTATE   FIXED(15) BDY(BYTE)  ,/*RLC STATE,MAP SCAN       */
   3     ZTN      FIXED(15) BDY(BYTE) ,
   3     ZTNA     FIXED(15) BDY(BYTE) ,/*CONTENDER TRK #            */
   3     ZTN1     FIXED(15) BDY(BYTE) ,/* TEMP IN                   */
   3     ZTN2     FIXED(15) BDY(BYTE) ,/* TEMP TN                   */
   3     ZNT1     FIXED(15) BDY(BYTE) ,/* TEMP NT                   */
   3     ZNT2     FIXED(15) BDY(BYTE) ,/* TEMP NT                   */
   3     ZTNT     FIXED(15) BDY(BYTE)  ,/*TEMP, ZSDXNT             */
   3     ZNTA     FIXED(15) BDY(BYTE) ,/*TEMP ZNT ALTERNATE         */
   3     ZTLL     PTR(24)   BDY(BYTE)  ,/*TEMP, ZSDXLL             */
    5    ZTEMPP24 PTR(24)   BDY(BYTE)  ,/*WORKING CI,GENERAL       */
   3     ZTCIX    FIXED(15) BDY(BYTE) ,/* ZTCI TALLY                */
   3     ZTCIH(25) CHAR(4) BDY(BYTE) ,/*PUT/ADD CHAIN HISTORY        */
    5    ZTCEV    CHAR(4)   BDY(BYTE) ,/* CI EVENT                  */
     7   ZTCIPA   CHAR(1)             ,/*@ FROM ?@XXREC,X='ASSGN CI'*/
     7   ZTCI     PTR(24)   BDY(BYTE),/* RECORD CI #                */
   3     ZTPC     PTR(8)               ,/*TEMP, ZSDXPC             */
   3     ZTTNA    FIXED(15) BDY(BYTE)  ,/*TEMP, ZSDXTNA            */
   3     ZTFA     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZTFB     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZTFC     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZTFD     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZRA      FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZRB      FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZRC      FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZTF0     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZTF1     FIXED(15) BDY(BYTE) ,/*TEMP, USED IN MAP SHIFT    */
   3     ZTEMPP8  PTR(8)    BDY(BYTE)  ,
   3     ZTEMPP15 PTR(15)   BDY(BYTE)  ,
   3     ZTEMPP31 PTR(31)   BDY(BYTE)  ,
   3     ZTEMPF15 FIXED(15) BDY(BYTE)  ,
   3     ZTEMPF31 FIXED(31) BDY(BYTE)  ,
   3     ZTEMPB16 BIT(16)   BDY(BYTE)  ,
    5    ZTP16    PTR(16)   BDY(BYTE)  ,
     7   ZTP8     PTR(8)               ,
      9  ZTB8     BIT(8)               ,
     7   ZTP8A    PTR(8)               ,
      9  ZTB8A    BIT(8)               ;
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DECLARE
  1     ZZCTLS    BASED                ,/*OVERALL CONTROL VARIABLES*/
   3     ZCPBASE  PTR(31)   BDY(BYTE)  ,/*CURRENT BASE FOR ZCPE'S. */
   3     ZPBASE   PTR(31)   BDY(BYTE)  ,/*WORKING BASE,GENERAL     */
   3     ZPLOC    PTR(31)   BDY(BYTE)  ,/*UZIP & ZZIP START OF AREA */
   3     ZPBASEA  PTR(31)   BDY(BYTE)  ,/*WORKING BASE-ALTERNATIVE */
   3     ZPBASEB  PTR(31)   BDY(BYTE)  ,/*WORKING BASE-VOLATILE    */
   3     ZPBASE3  PTR(31)   BDY(BYTE)  ,/*ZCP SET FOR RAB3         */
   3     ZPBASE4  PTR(31)   BDY(BYTE)  ,/*ZCP SET FOR RAB4         */
   3     ZPBASE5  PTR(31)   BDY(BYTE)  ,/*ZCP SET FOR RAB5         */
   3     ZPL      PTR(31)   BDY(BYTE) ,/*-> LEFT RLC                */
   3     ZP       PTR(31)   BDY(BYTE) ,/*-> TARGET RLC              */
   3     ZPR      PTR(31)   BDY(BYTE) ,/*-> RIGHT RLC               */
   3     ZP1      PTR(31)   BDY(BYTE) ,/*SAVE ZPBASE                */
   3     ZP2      PTR(31)   BDY(BYTE) ,/*SAVE ZPBASEA               */
   3     ZP3      PTR(31)   BDY(BYTE) ,/*SAVE ZPBASEB               */
   3     ZSALOOP  FIXED(15) BDY(BYTE)  ,/*SALL LOOP COUNT          */
   3     ZLOOP    PTR(8)               ,/*SECONDARY LOOP CTL,GEN'L */
   3     ZPASS    FIXED(15) BDY(BYTE)  ,/*BYPASS PROCESS UNDER WAY */
   3     ZPASSZ   CHAR(4)   BDY(BYTE)  ,/*EXIT CODE CONTROL        */
    5    ZPASSA   CHAR(2)   BDY(BYTE)  ,
     7   ZPASSA1  CHAR(1)   BDY(BYTE)  ,
     7   ZPASSA2  CHAR(1)   BDY(BYTE)  ,
    5    ZPASSB   CHAR(2)   BDY(BYTE)  ,
     7   ZPASSB1  CHAR(1)              ,
     7   ZPASSB2  CHAR(1)              ,
   3     ZRUSE    CHAR(16)  BDY(BYTE)  ,/* RAB USAGE               */
    5    ZUSED3    PTR(8)              ,/*USED 3                   */
    5    ZUSED4    PTR(8)              ,/*USED 4                   */
    5    ZUSED5    PTR(8)              ,/*USED 5                   */
    5    ZBUILT3   PTR(8)              ,/*BUILT 3                  */
    5    ZBUILT4   PTR(8)              ,/*BUILT 4                  */
    5    ZBUILT5   PTR(8)              ,/*BUILT 5                  */
    5    ZALTER3   PTR(8)              ,/*ALTERED 3                */
    5    ZALTER4   PTR(8)              ,/*ALTERED 4                */
    5    ZALTER5   PTR(8)              ,/*ALTERED 5                */
   3     ZRTYPE   CHAR(1)              ,/*BUILD RECORD TYPE        */
   3     ZRECCI   PTR(24)   BDY(BYTE)  ,/*RECORD CI, GET/ADD/PUT   */
   3     ZMANX    PTR(8)               ,/*Z-MAIN MASTER EXIT CTL   */
   3     ZMANZ    PTR(8)               ,/*Z-MAIN RC-EXIT CTL       */
   3     ZMODE    PTR(8)               ,/*CONVERSION TYPE          */
   3     ZFUNC    PTR(8)               ,/*INDEX TO ZFC             */
   3     ZPLN     FIXED(15) BDY(BYTE)  ;/*ZIPPER LENGTH            */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 /* ZCPSET IS USED TO INDICATE WHICH RECORD POINTERS ARE USED.     */
 /*                                                                */
 DECLARE
  1     ZCPS            BASED         ,
   3     ZCPSET (3)PTR(8)             ;/*Z-PTR SET TO USE            */
       %ZPS0 = '0';                    /*PER ZCPBASE OR PER TGT CI#  */
        %ZPS3 = '3'                    ;/*PTRS TO REC IN BLOCK 3   */
        %ZPS4 = '4'                    ;/*PTRS TO REC IN BLOCK 4   */
        %ZPS5 = '5'                    ;/*PTRS TO REC IN BLOCK 5   */
        %ZPSX = '''FF''X'              ;/*PTRS NOT VALID           */
 /******************************************************************/
 /******************************************************************/
 /******************************************************************/
 /*  FUNCTIONAL PARAMETERS                                         */
 /*                                                                */
 DECLARE
  1      ZFPS     BASED                ,
   3     ZCCHH    CHAR(4)   BDY(BYTE)  ,/* LO-EXTENT CCHH          */
    5    ZCC      FIXED(15) BDY(BYTE)  ,/* LO-CC                   */
    5    ZHH      FIXED(15) BDY(BYTE)  ,/* LO-HH                   */
   3     ZCCHHX   CHAR(4)   BDY(BYTE)  ,/* HI-EXTENT CCHH          */
    5    ZCCX     FIXED(15) BDY(BYTE)  ,/* HI-CC                   */
     7   ZSUU     FIXED(15) BDY(BYTE)  ,/* # TRKS USED             */
    5    ZHHX     FIXED(15) BDY(BYTE)  ,/* HI-HH                   */
   3     ZBOHD    PTR(8)    BDY(BYTE)  ,/* BLOCK OVERHEAD          */
   3     ZCIND    FIXED(15) BDY(BYTE)  ,/* NO.OF CYL'S IN DEVICE   */
   3     ZTINC    FIXED(15) BDY(BYTE)  ,/* NO.OF TRK'S IN CYL      */
   3     ZBINT    FIXED(15) BDY(BYTE)  ,/* NO.OF BYTES IN TRK      */
   3     ZNCYL    FIXED(15) BDY(BYTE)  ,/* NO.OF CYL'S             */
   3     ZNREC    FIXED(15) BDY(BYTE)  ,/* NO.OF REC'S             */
   3     ZNBIR    FIXED(15) BDY(BYTE)  ,/* NO.OF BYTES IN REC      */
   3     ZNTRK    FIXED(15) BDY(BYTE)  ,/* NO.OF TRACKS            */
   3     ZTRKN    FIXED(15) BDY(BYTE)  ,/* TRACK NUMBER            */
   3     ZACALN   FIXED(15) BDY(BYTE)  ,/*ADJUSTED CA LENGTH       */
   3     ZNCAA    FIXED(15) BDY(BYTE)  ,/*CA TEST                  */
   3     ZSHSSN   FIXED(15) BDY(BYTE)  ;/*SPHDR SSN                */
 /*                                                                */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 /* VARIABLES USED IN MANIPULATIONS AND MOVES                       */
 DCL    ZYRLC     FIXED(31) BASED     ;

 /******************************************************************/
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZA    CHAR(MXRCD)        BASED,
   3     ZA   (*) CHAR(1)              ;
 /******************************************************************/
 DCL    ZARRAY (*) PTR(8)  BASED       ;/*ADDRESSING OVERLAY       */
 /******************************************************************/
 DCL    ZARRY1 (*) PTR(8)  BASED       ;/*ADDRESSING OVERLAY       */
 /******************************************************************/
 DCL    ZARRY  (*) PTR(8) BASED        ;/*ADDRESSING OVERLAY       */
 /******************************************************************/
 DCL    ZB        PTR(8)    BASED     ;/*ADDRESSING OVERLAY         */
 DCL    ZC        PTR(8)    BASED     ;/* ADDRESSINGOVERLAY         */
 DCL    ZD        PTR(24)   BASED     ;/*ADDRESSING OVERLAY         */
 DCL    ZE        FIXED(31) BASED     ;/*ADDRESSING OVERLAY         */
 DCL    ZF        FIXED(15) BASED     ;/*ADDRESSING OVERLAY         */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 /* ZCPTR CONTAINS THE DECLARATIONS THAT ARE USED TO ADDRESS       */
 /* RECORDS.THE STRUCTURE IS AN OVERLAY ON ZCPARRAY WHICH PROVIDES */
 /* STORAGE SPACE WITHIN THE SUBALLOCATE WORKAREA.                 */
 /*                                                                */
 DECLARE
  1     ZCPTR   BASED(ZCPBASE)         ,/*ZCPBASE IS IN ZZCTLS     */
   3     ZCPE1    PTR(31)   BDY(BYTE)  ,/*-> CATRCD                */
   3     ZCPE2    PTR(31)   BDY(BYTE)  ,/*-> CTVRCTRL              */
   3     ZCPE3    PTR(31)   BDY(BYTE)  ,/*-> NEXT BYTE BEYOND GOP'S*/
   3     ZCPE4    PTR(31)   BDY(BYTE)  ,/*-> NEXT UNUSED BYTE      */
   3     ZCPE5    PTR(31)   BDY(BYTE)  ,/*-> CTVGOPT               */
   3     ZCPE6    PTR(31)   BDY(BYTE)  ,/*-> CTVSPHDR-DESGP-DSGRP  */
   3     ZCPE6A   PTR(31)   BDY(BYTE)  ,/*->GROUP VAR FIELD LENGTH  */
   3     ZCPE7    PTR(31)   BDY(BYTE)  ,/*->CURRENT FIELD IN GROUP */
   3     ZCPE7L   PTR(31)   BDY(BYTE)  ,/*PREVIOUS FLD IN GRP      */
   3     ZCPE7R   PTR(31)   BDY(BYTE)  ,/*NEXT FIELD IN GRP        */
   3     ZCPE7A   PTR(31)   BDY(BYTE)  ,/*->FIRST FIELD IN RUN      */
   3     ZCPE7X   PTR(31)   BDY(BYTE)  ,/*->,RUN SCAN LIMIT         */
   3     ZGOSEQ   FIXED(15) BDY(BYTE)  ,/*TARGET GOP SEQNO.        */
   3     ZGODSP   PTR(16)   BDY(BYTE)  ,/*DISP TO TARGET GROUP     */
   3     ZGOCI    CHAR(3)   BDY(BYTE)  ,/*CI FOR TARGET GROUP'S REC*/
   3     ZGOGC    PTR(8)    BDY(BYTE)  ,/*TARGET GOGC               */
   3     ZNTOGO   PTR(8)    BDY(BYTE)  ,/*SCAN CTL,GOP'S YET TO SEE*/
   3     ZNDONE   PTR(8)               ,/*SCAN CONTROL,GOPS PASSED  */
   3     ZNSEEN   PTR(8)    BDY(BYTE)  ;/*SCAN CTL,GOP'S SEEN      */
 /*******************************************************************/
 DCL                                    /*ADDRESSING OVERLAY        */
  1     ZGRPF    BASED                 ,/*GROUP FORMAT FIELDS       */
   3     ZCV      PTR(8)               ,/*CTVDESCV OR CTVDSGCV      */
   3     ZLF      PTR(8)               ;/*CTVDESLF OR CTVDSGLF      */
 /*******************************************************************/
 DCL                                    /*ADDRESSING OVERLAY        */
  1     ZGRPV    BASED                 ,/*GROUP VARIABLE FIELD LN   */
  3      ZLN      FIXED(15) BDY(BYTE)  ;/*CTVMAPLN OR CTVDSXCT      */
 /******************************************************************/
 DCL
  1     ZDSDIR   BASED(ZCPE7)          ,/*CURRENT DS-DIRECTORY SLOT*/
   3     ZDSX     FIXED(15) BDY(BYTE)  ,/*SH SEQ NO.               */
   3     ZDSXC    PTR(8)               ;/*#DS EXTENTS IN THIS SPACE*/
 /******************************************************************/
 DCL
  1     ZMAPRLC  BASED(ZCPE7)          ,/*CURRENT RLC              */
   3     ZMC      PTR(8)               ,/*RLC CODE                 */
  3      ZMCX     FIXED(15) BDY(BYTE) ,/* OFFSET VALUE               */
   5     ZMCX1    PTR(8)              ,
   5     ZMCX2    PTR(8)              ;
 /******************************************************************/
 DCL
  1     ZMAPRLCA BASED(ZCPE7A)         ,/*NEXT RLC                 */
   3     ZMCA     PTR(8)               ,/* RLC CODE                */
   3     ZMCXA    FIXED(15) BDY(BYTE)  ;/* OFFSET VALUE            */
 /******************************************************************/
 DCL                                    /*PRECEDING RLC            */
  1     ZMAPRLCL   BASED(ZCPE7L)       ,
   3     ZMCL     PTR(8)               ,
   3     ZMCXL    FIXED(15) BDY(BYTE)  ;
 /******************************************************************/
 DCL                                    /*NEXT RLC                 */
  1     ZMAPRLCR   BASED(ZCPE7R)       ,
   3     ZMCR     PTR(8)               ,
   3     ZMCXR    FIXED(15) BDY(BYTE)  ;
 /******************************************************************/
 DCL
  1     ZXRLC    BASED                ,/*MAP MANIPULATION WORK AREA */
   3     ZXRLCL   CHAR(15)  BDY(BYTE) ,/* EXTENSION FIELD            */
    5    ZXUL     CHAR(3)   BDY(BYTE) ,/*RLC @ TGT LEFT,UNAVAIL     */
     7   ZXULC    PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */
     7   ZXULF    FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */
    5    ZXAXL    CHAR(3)   BDY(BYTE) ,/*RLC INSERT @ TGT LFT,AVAIL.*/
     7   ZXAXLC   PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */
     7   ZXAXLF   FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */
    5    ZXUXL    CHAR(3)   BDY(BYTE) ,/*RLC INSERT @ TGT LFT,UNAV. */
     7   ZXUXLC   PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */
     7   ZXUXLF   FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */
    5    ZXA0     CHAR(3)   BDY(BYTE) ,/*TARGET RLC,AVAILABLE SPACE */
     7   ZXA0C    PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */
     7   ZXA0F    FIXED(15) BDY(BYTE) ,/*    EXTENSION FIELD        */
    5    ZXUR     CHAR(3)   BDY(BYTE) ,/*RLC @ TGT RIGHT,UNAVAIL.   */
     7   ZXURC    PTR(8)    BDY(BYTE) ,/*    CODE FIELD             */
     7   ZXURF    FIXED(15) BDY(BYTE) ;/* EXTENSION FIELD            */

 /*******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                          /*EXTENT CONTROL TABLE               */
  1     ZXCTL  BASED(ZRCBASE)          ,/*USED IN ALLOCATING EXTENT*/
                                        /*CONTAINS PTR TO SMALLEST */
                                        /* EXTENT CONTRIBUTED & MAX*/
                                        /* NO.OF EXTENTS ALLOWED.  */
   3     ZMINX    PTR(31)   BDY(BYTE)  ,/*->MIN EXT.IN ZSDXRC SET  */
   3     ZMAXX    PTR(8)               ,/*NO.OF EXTENTS ALLOWED    */
   3     ZXTOGO   PTR(8)               ,/*EXT CAPACITY REMAINING   */
   3     ZNTREQD  FIXED(15) BDY(BYTE)  ,/*NO.OF TRKS REQUESTED     */
   3     ZNTTOGO  FIXED(15) BDY(BYTE)  ,/*NO.OF TRKS YET NEEDED    */
   3     ZCAREQD  FIXED(15) BDY(BYTE)  ,/*NO.OF CA REQUIRED        */
   3     ZCATOGO  FIXED(15) BDY(BYTE)  ;/*NO.OF CA YET NEEDED      */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                          /* BASE VER RECALL INFORMATION       */
  1     ZVRC    BASED(ZRBASE0)         ,/*                         */
   3     ZVRCI    PTR(24)   BDY(BYTE)  ,/*BASE VER-CI              */
   3     ZVNDS    FIXED(15) BDY(BYTE)  ,/* CTVNDSET                */
   3     ZVNDSP   FIXED(15) BDY(BYTE)  ,/* # SH THIS VOLUME        */
   3     ZVSHSEEN FIXED(15) BDY(BYTE)  ,/* # SH SEEN               */
   3     ZGADSS   FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SSN*/
   3     ZGADSSX  FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SSN*/
   3     ZGADLN   FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SIZE*/
   3     ZGADLNX  FIXED(15) BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-SIZE*/
   3     ZGADCI   CHAR(3)   BDY(BYTE)  ,/*POTENTIAL INSERT SLOT-CI */
   3     ZGADCIX  CHAR(3)   BDY(BYTE)  ;/*POTENTIAL INSERT SLOT-CI */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                          /*DATA SET DIRECTORY RECALL INFO.    */
  1     ZDSRC   BASED(ZRBASEA)         ,/*                         */
   3     ZDSGET  PTR(8)               ,/*GET DSD DONE FLAG,1=DONE   */
   3     ZDSCI    PTR(24)   BDY(BYTE)  ,/*CI FOR DS-GOP            */
   3     ZDSNEX   PTR(8)               ,/* # DS EXTENTS            */
   3     ZDSINSP  PTR(8)              ,/* 1=DS IN SPACE,0=NOT IN SP.*/
   3     ZDSXINSP PTR(8)              ,/*#DS EXTENTS IN THE SPACE   */
   3     ZDSXCI   PTR(24)   BDY(BYTE)  ,/*CI FOR TARGET CTVDSDIR   */
   3     ZDSGOP   CHAR(6)   BDY(BYTE)  ,/*OVERLAY,LIKE 'CTVGOPT'   */
    5    ZDSOCI   CHAR(3)   BDY(BYTE)  ,/*   CTVGOCI               */
     7   ZDSFLG   BIT(8)               ,/*   CTVGOFLG              */
     7   ZDSDSP   FIXED(15) BDY(BYTE)  ,/*   CTVGODSP              */
    5    ZDSGCI   PTR(8)               ,/*   CTVGOGCI              */
     7   ZDSEXT   BIT(1)               ,/*   CTVGOEXT              */
     7   ZDSDEL   BIT(1)               ,/*   CTVGODEL              */
     7   ZDSOGC   BIT(6)               ,/*   CTVGOGC               */
    5    ZDSSEQ   FIXED(15) BDY(BYTE)  ;/*   CTVGOSEQ              */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                          /*SPACE HEADER RECALL CONTROL INFO.  */
  1     ZSHRC    BASED(ZRBASEB)        ,/*                         */
   3     ZSHCI    PTR(24)   BDY(BYTE)  ,/*CI FOR SH-GOP            */
   3     ZSHGOP   CHAR(6)   BDY(BYTE)  ,/*OVERLAY,LIKE CTVGOPT     */
    5    ZSHOCI   CHAR(3)   BDY(BYTE)  ,/*   CTVGOCI               */
     7   ZSHFLG   BIT(8)               ,/*   CTVGOFLG              */
     7   ZSHDSP   FIXED(15) BDY(BYTE)  ,/*   CTVGODSP              */
    5    ZSHGCI   PTR(8)               ,/*   CTVGOGCI              */
     7   ZSHEXT   BIT(1)               ,/*   CTVGOEXT              */
     7   ZSHDEL   BIT(1)               ,/*   CTVGODEL              */
     7   ZSHOGC   BIT(6)               ,/*   CTVGOGC               */
    5    ZSHSEQ   FIXED(15) BDY(BYTE)  ,/*   CTVGOSEQ              */
   3     ZSHNDS   FIXED(15) BDY(BYTE)  ,/*NO.DS IN SPACE           */
   3     ZSHNEX   PTR(8)               ,/*NO.EXT IN SPACE          */
   3     ZSHSPFLG BIT(8)               ,/*SH FLAGS                 */
    5    ZSHUNQ   BIT(1)               ,/*  UNIQUE                 */
    5    ZSHAUT   BIT(1)               ,/*  AUTOMATICLY BUILT      */
    5    ZSHUCT   BIT(1)               ,/*  USER CAT IN SPACE      */
    5    ZSHMCT   BIT(1)               ,/*MASTER CATALOG IN SPACE  */
    5    *        BIT(4)               ,/*RESERVED                 */
   3     ZSHNX    PTR(8)               ,/*NO.OF EXTS SO FAR        */
   3     ZSHNSD   PTR(8)               ,/*NO.OF SD THIS PASS       */
   3     ZSHTOGO  PTR(8)               ,/*SCAN PARM SAVE ZNTOGO    */
   3     ZSHSEEN  PTR(8)               ,/*SCAN PARM SAVE ZNSEEN    */
   3     ZSHCPE5  PTR(31)   BDY(BYTE)  ;/*SCAN PARM SAVE ZCPE5     */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                          /*SPACE DESCRIPTOR RECALL INFORMATION*/
  1     ZSDRC   BASED(ZRBASEC)         ,/*                         */
   3     ZSDCI    PTR(24)   BDY(BYTE)  ,/*CI FOR SD GOP            */
   3     ZSDOCI1  PTR(24)   BDY(BYTE) ,/*SPACE MAP EXTN FIRST REC CI*/
   3     ZSDOCI2  PTR(24)   BDY(BYTE) ,/*SPACE MAP EXTN LAST REC CI */
   3     ZSDGOP   CHAR(6)   BDY(BYTE)  ,/*OVERLAY,LIKE CTVGOPT     */
    5    ZSDOCI   CHAR(3)   BDY(BYTE)  ,/*   CTGOCI                */
     7   ZSDFLG   BIT(8)               ,/*   CTVGOFLG              */
     7   ZSDDSP   FIXED(15) BDY(BYTE)  ,/*   CTVGODSP              */
    5    ZSDGCI   PTR(8)               ,/*   CTVGOGCI              */
     7   ZSDEXT   BIT(1)               ,/*   CTVGOEXT              */
     7   ZSDDEL   BIT(1)               ,/*   CTVGODEL              */
     7   ZSDOGC   BIT(6)               ,/*   CTVGOGC               */
    5    ZSDSEQ   FIXED(15) BDY(BYTE)  ,/*   CTVGOSEQ              */
   3     ZSDUU    FIXED(15) BDY(BYTE) ,/*#ALLOC UNITS USED          */
   3     ZSDTN    FIXED(15) BDY(BYTE)  ,/*FIRST TRK NO. OF EXTENT  */
   3     ZSDTNA   FIXED(15) BDY(BYTE)  ,/*FIRST AVAILABLE TRACK */
   3     ZSDNT    FIXED(15) BDY(BYTE)  ,/*NO.OF TRKS IN EXTENT     */
   3     ZSDTC    FIXED(15) BDY(BYTE)  ,/* #TRKS DURING RLC SCAN  */
   3     ZSDNX    PTR(8)               ,/*NO.EXT THIS SD SO FAR    */
   3     ZSDCT    FIXED(15) BDY(BYTE) ,/* FREE SPACE IN GROUP,TALLY  */
   3     ZSDTOGO  PTR(8)               ,/*SCAN PARM ZNTOGO         */
   3     ZSDSEEN  PTR(8)               ,/*SCAN PARM ZNSEEN         */
   3     ZSDCPE5  PTR(31)   BDY(BYTE)  ;/*SCAN PARM ZCPE5          */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                          /*SD EXTENT CONTRIBUTED RECALL INFO  */
  1     ZSDXRC   BASED(ZRBASED)        ,/*                         */
   3     ZSDXSS   FIXED(15) BDY(BYTE)  ,/*SPACE DESCRIPTOR SEQ NUMB */
   3     ZSDXCI   PTR(24)   BDY(BYTE)  ,/*CI OF SD GROUP MAP-EXT   */
   3     ZSDXOCI  PTR(24)   BDY(BYTE) ,/*ZSDOCI OF PARENT           */
   3     ZSDXOCI1 PTR(24)   BDY(BYTE) ,/*ZSDOCI1 OF PARENT          */
   3     ZSDXOCI2 PTR(24)   BDY(BYTE) ,/*ZSDOCI2 OF PARENT          */
   3     ZSDXTN   FIXED(15) BDY(BYTE)  ,/*CONTRIBUTOR TRACK NO.    */
   3     ZSDXNT   FIXED(15) BDY(BYTE)  ,/*NO.OF TRACKS CONTRIBUTED */
   3     ZSDXSP   FIXED(15) BDY(BYTE) ,/*REC SPACE IN RELATED SD    */
   3     ZSDXTNA  FIXED(15) BDY(BYTE) ;/*BASE TRACK# @ MAP IX LOC   */
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                                    /*                         */
  1     ZRCPTR  BASED                  ,/*PTRS TO ZRCARRAY SECTIONS*/
   3     ZRCBASE  PTR(31)   BDY(BYTE)  ,/*ZXCTL &BASE FOR ZRCARRAY */
   3     ZRBASE0  PTR(31)   BDY(BYTE)  ,/*ZVRC                     */
   3     ZRBASEA  PTR(31)   BDY(BYTE)  ,/*ZDSRC                    */
   3     ZRBASEB  PTR(31)   BDY(BYTE)  ,/*ZSHRC                    */
   3     ZRBASEC  PTR(31)   BDY(BYTE)  ,/*ZSDRC                    */
   3     ZRBASED  PTR(31)   BDY(BYTE)  ,/*ZSDXRC                   */
   3     ZRPSAVE  PTR(31)   BDY(BYTE)  ;/*WORKING BASE             */
 /*                                                                 */
 /******************************************************************/
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZCP   BASED                   ,
   3     *        CHAR(LENGTH(ZCPTR))  ,
   3     *        CHAR(LENGTH(ZCPTR))  ,
   3     *        CHAR(LENGTH(ZCPTR))  ;
 /******************************************************************/
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZCPA           BASED          ,
   3     *        CHAR(LENGTH(ZZCP))   ,
    5    ZCPARRAY (*) CHAR(1)          ;
 /******************************************************************/
 /*                                                                 */
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZRC                BASED      ,
   3     *        CHAR(LENGTH(ZXCTL))  ,
   3     *        CHAR(LENGTH(ZVRC))   ,
   3     *        CHAR(LENGTH(ZDSRC))  ,
   3     *        CHAR(LENGTH(ZSHRC))  ,
   3     *        CHAR(LENGTH(ZSDRC)) ,
   3     *   (5)  CHAR(LENGTH(ZSDXRC)) ;
 /*                                                                 */
 /******************************************************************/
 /******************************************************************/
 /*                                                                 */
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZRCA           BASED          ,
    3    *        CHAR(LENGTH(ZZRC))  ,
    5    ZRCARRAY (*) CHAR(1)          ;
 /*                                                                */
 /******************************************************************/
 /******************************************************************/
 /*                                                                */
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZLOC               BASED      ,
   3     *        CHAR(LENGTH(ZTEMP))  ,
   3     *        CHAR(LENGTH(ZZCTLS)) ,
   3     *        CHAR(LENGTH(ZCPS))  ,
   3     *       CHAR(LENGTH(ZFPS))    ,
   3     *        CHAR(LENGTH(ZZCP))   ,
   3     *        CHAR(LENGTH(ZZRC))   ,
   3     *        CHAR(LENGTH(ZRCPTR)) ;
 /******************************************************************/
 DCL                                    /*ADDRESSING OVERLAY       */
  1     ZZLOCA          BASED          ,
   3     *        CHAR(LENGTH(ZZLOC))  ,
    5    ZLOC     (*) CHAR(1)          ;
 /******************************************************************/
 /*                                                                 */
 /******************************************************************/
 /*******************************************************************/
 /*******************************************************************/

 RFY  CATRCD   BASED(ZCPE1);
 RFY  CTVRCTRL BASED(ZCPE2);
 RFY  CTVGOPT  BASED(ZCPE5);
 RFY  CTVSPHDR BASED(ZCPE6);
 RFY  CTVDSGRP BASED(ZCPE6);
 RFY  CTVDESGP BASED(ZCPE6);
 RFY  USERLIST BASED(SALVLIST);

 /*******************************************************************/

 RFY  ZLOCBASE BASED(ADDR(SALAXWA));
 RFY  ZTEMP    BASED(ADDR(ZLOCBASE)+LENGTH(ZLOCBASE));
 RFY  ZZCTLS   BASED(ADDR(ZTEMP)   +LENGTH(ZTEMP));
 RFY ZCPS BASED(ADDR(ZZCTLS)+LENGTH(ZZCTLS));
 RFY ZFPS BASED(ADDR(ZCPS) + LENGTH(ZCPS));
 RFY  ZZCPA    BASED(ADDR(ZFPS)    +LENGTH(ZFPS));
 RFY  ZADDR    BASED(CCAMNADR);
 RFY   ZID     BASED(ADDR(ZADDR)+ LENGTH(ZADDR));
 RFY   ZRCPTR BASED(ADDR(ZID)  +  LENGTH(ZID));
 RFY  ZZRCA    BASED(ADDR(ZRCPTR)  +LENGTH(ZRCPTR));

 RFY   ZXRLC   BASED(ADDR(ZZRCA)  +LENGTH(ZZRCA));
 RFY   ZYRLC   BASED(ADDR(ZXRLC)  +LENGTH(ZXRLC));
 /*******************************************************************/
