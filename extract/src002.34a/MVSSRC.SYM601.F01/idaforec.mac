 /********************************************************************/
 /*                                                          @X04SVRL*/
 /*   MACRO NAME = IDAFOREC                                  @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   DESCRIPTIVE NAME = COMMON OPEN WORK AREA.              @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   FUNCTION = MAPS THE COMMON OPEN WORK AREA PASSED TO    @X04SVRL*/
 /*              VSAM OPEN/CLOSE/EOV IN REGISTER 4.          @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   CONTROL BLOCK STRUCTURE = NONE                         @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   INCLUDED MACROS = IEFJFCBN                             @X04SVRL*/
 /*                     IEFJFCBX                             @X04SVRL*/
 /*                     IDAPDPRM                             @X04SVRL*/
 /*                     IECDSECS (VS2 ONLY)                  @X04SVRL*/
 /*                     IECDSECT (VS2 ONLY)                  @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY        @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   CREATED BY: IGC0001I, IGC00020, IGC0005E.              @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   STATUS = VS1 RELEASE 4   (CHANGE FLAG @X04SVXX)        @X04SVRL*/
 /*            VS2 RELEASE 3   (CHANGE FLAG @Y30DSXX)        @X04SVRL*/
 /*                                                          @X04SVRL*/
 /*   DATE OF LAST CHANGE = 5 AUGUST 74                      @X04SVRL*/
 /*                                                          @X04SVRL*/
 /********************************************************************/
 %IF ENV='VS2'  %THEN                   /*IF VS2 THEN BYPASS @Y30DSDT*/
    %GOTO IDAFOR1;                      /* VS1 SECTION       @Y30DSDT*/
 DCL FORECORE CHAR(496) BDY(DWORD) BASED(RCORE);
   DCL 1 DXLBL DEFINED(FORECORE),
*                2 VOLLABI     CHAR(3), /* LABEL IDENTIFIER         */
*                2 VOLNO       CHAR(1), /* VOLUME LABEL NUMBER      */
*                2 VOLSERNO    CHAR(6),
*                2 VOLSEC      CHAR(1),
*                2 VOLVTOC     CHAR(5),
*                2 *           CHAR(5),
*                2 *           CHAR(10),/* RESERVED                 */
*                2 *           CHAR(10),/* RESERVED                 */
*                2 VOLOWNER    CHAR(10),/* OWNER NAME AND ADDR CODE */
*                2 *           CHAR(29);/* RESERVED                 */
   DCL 1 DSECT01 DEFINED(FORECORE) POS(38),
*                2 AVOLOWNR    CHAR(14),/* ANSI OWNER ID            */
*                2 *           CHAR(28),/* RESERVED                 */
*                2 LABSTAND    CHAR(1); /* LABEL STANDARD LEVEL     */
   DCL 1 DSECT02 DEFINED(FORECORE),
*                2 FL1LABI     CHAR(3), /* LABEL IDENTIFIER         */
*                2 FL1NO       CHAR(1), /* FILE LABEL NUMBER        */
*                2 FL1ID       CHAR(17),/* FILE IDENTIFIER          */
*                2 FL1FILSR    CHAR(6), /* FILE SERIAL NUMBER       */
*                2 FL1VOLSQ    CHAR(4), /* VOL SEQ NUMBER           */
*                2 FL1FILSQ    CHAR(4), /* FILE SEQ NUMBER          */
*                2 FL1GNO      CHAR(4), /* GENERATION NUMBER        */
*                2 FL1VNG      CHAR(2), /* VERSION NUMBER OF GDG    */
*                2 FL1CREDT    CHAR(6), /* CREATION DATE            */
*                2 FL1EXPDT    CHAR(6), /* EXPIRATION DATE          */
*                2 FL1FSEC     CHAR(1), /* FILE SECURITY INDICATOR  */
*                2 FL1BLKCT    CHAR(6), /* BLOCK COUNT              */
*                2 FL1SYSCD    CHAR(13),/* SYSTEM CODE              */
*                2 FL1RES      CHAR(7), /* RESERVED                 */
*                  3 *         CHAR(1),
*                  3 FL1RES1   CHAR(6);
   DCL 1 DSECT03 DEFINED(FORECORE) POS(5),
*                2 FL2RECFM    CHAR(1), /* RECORD FORMAT            */
*                2 FL2BLKL     CHAR(5), /* BLOCK LENGTH             */
*                2 FL2LRECL    CHAR(5), /* BLOCK FACTOR/REC LEN     */
*                2 FL2DEN      CHAR(1), /* DENSITY                  */
*                2 FL2FILP     CHAR(1), /* FILE POSITION            */
*                2 FL2JSID     CHAR(17),/* JOB/STEP ID              */
*                  3 FL2JOBD   CHAR(8), /* JOB IDENTIFICATION       */
*                  3 FL2JSSP   CHAR(1), /* SLASH                    */
*                  3 FL2STEPD  CHAR(8), /* STEP IDENTIFICATION      */
*                2 FL2TRTCH    CHAR(2), /* TAPE REC TECHNIQUE       */
*                2 FL2CNTRL    CHAR(1), /* CARRIAGE CONTROL CHAR    */
*                2 *           CHAR(1), /* RESERVED                 */
*                2 FL2BLKA     CHAR(1), /* BLOCK ATTRIBUTE          */
*                2 FL2RES      CHAR(41);/* RESERVED                 */
*        DCL      FL2BUFOF     CHAR(2) BASED(ADDR(DXLBL)+50);
   DCL 1 DXDSCB  DEFINED(FORECORE),
*                2 DSCFMTID    CHAR(1), /* ID                       */
*                2 DSCFILSR    CHAR(6), /* FILE SERIAL NUMBER       */
*                2 DSCVOLSR    CHAR(2),
*                2 DSCCREDT    CHAR(3), /* CREATION DATE            */
*                2 DSCEXPDT    CHAR(3), /* EXPIRATION DATE          */
*                2 DSCNOEXT    CHAR(1),
*                2 DSCBLDBL    CHAR(1),
*                2 *           CHAR(1),
*                2 DSCSYSCD    CHAR(13),/* SYSTEM CODE              */
*                2 *           CHAR(7),
*                2 DSCFILTY    CHAR(2), /* FILE TYPE                */
*                2 DSCRECFM    CHAR(1), /* RECORD FORMAT            */
*                2 DSCOPTCD    CHAR(1), /* OPTION CODE              */
*                2 DSCBLKL     CHAR(2), /* BLOCK LENGTH             */
*                2 DSCLRECL    CHAR(2), /* RECORD LENGTH            */
*                2 DSCKEYL     CHAR(1), /* KEY LENGTH               */
*                2 DSCRKP      CHAR(2), /* KEY LOCATION             */
*                2 DSCDSIND    CHAR(1),
*                2 DSCSCALO    CHAR(4),
*                2 DSCLSTAR    CHAR(5),
*                2 DSCTRBAL    CHAR(2),
*                2 DSCEXTYP    CHAR(1), /* EXTENT TYPE INDICATOR    */
*                2 DSCEXTSQ    CHAR(1), /* EXTENT SEQ NUMBER        */
*                2 DSCLOWLM    CHAR(4),
*                2 DSCUPPLM    CHAR(4),
*                2 DSCEXT1     CHAR(10),
*                2 DSCEXT2     CHAR(10),
*                2 DSCNEXT     CHAR(5); /* POINTER TO NEXT RECORD   */
   DCL   DSCCORE PTR(31) DEFINED(FORECORE) POS(97);
   DCL   DSCBEND CHAR(0) DEFINED(FORECORE) POS(101);
   DCL 1 DXDSCB3K DEFINED(FORECORE),
*                2 DSCBF3C     CHAR(4),
*                2 DSCBEXSK    CHAR(40),
*                  3 DSCBEXTY  CHAR(1), /* EXTENT TYPE INDICATOR    */
*                  3 DSCBEXSQ  CHAR(1), /* EXTENT SEQ NUMBER        */
*                  3 DSCBLLMT  CHAR(4), /* CCHH LOWER LIMIT         */
*                  3 DSCBULMT  CHAR(4), /* CCHH UPPER LIMIT         */
*                  3 DSCBEX2   CHAR(10),/* ADDITIONAL EXTENT        */
*                  3 DSCBEX3   CHAR(10),/* ADDITIONAL EXTENT        */
*                  3 DSCBEX4   CHAR(10);/* ADDITIONAL EXTENT        */
   DCL 1 DSECT04  DEFINED(FORECORE),
*                2 DSCBFMID    CHAR(1), /* FORMAT ID 3              */
*                2 DSCBEXSD    CHAR(90),/* ADDITIONAL EXTENTS       */
*                  3 DSCBEX5   CHAR(10),
*                  3 DSCBEX6   CHAR(10),
*                  3 DSCBEX7   CHAR(10),
*                  3 DSCBEX8   CHAR(10),
*                  3 DSCBEX9   CHAR(10),
*                  3 DSCBEXA   CHAR(10),
*                  3 DSCBEXB   CHAR(10),
*                  3 DSCBEXC   CHAR(10),
*                  3 DSCBEXD   CHAR(10),
*                2 DSCBNEXT    CHAR(5); /* CCHHR OF NEXT F3 DSCB    */
   DCL 1 DSECT05  DEFINED(FORECORE),
*                2 REPLYLTH    CHAR(1),
*                2 REPLYADR    PTR(24),
*                2 REPLYECB    CHAR(4),
*                2 MSGLSTSZ    FIXED(15),/* MSG LENGTH              */
*                2 MCSFLAGS    BIT(16), /* FLAG FIELD FOR MCS       */
*                2 MESSAGEA    CHAR(68),/* MESSAGE AREA             */
*                2 DESCODE     BIT(16), /* DESCRIPTOR CODE FOR MCS  */
*                2 ROUTCODE    BIT(16), /* ROUTING CODE FOR MCS     */
*                2 REPLY       CHAR(12);/* REPLY AREA               */
*%       DCL (MSERL,MINSTL,MUNL,MVOLL) FIXED;
*%       MSERL  = 3;
*%       MINSTL = 6;
*%       MUNL   = 3;
*%       MVOLL  = 6;
   DCL 1 DSECT06  DEFINED(FORECORE) POS(13),
*                2 MSGIOSUP    CHAR(3), /* I/O SUPPORT MSG ID       */
*                2 MSGINSTR    CHAR(6), /* MSG SERIAL               */
*                  3 MSGSER    CHAR(3), /* MSG SERIAL NUMBER        */
*                    4 *       CHAR(2),
*                    4 MSGSERLO CHAR(1),/* LOW ORDER BYTE OF MSG SER*/
*                  3 *         CHAR(2),
*                  3 MSGACTN   CHAR(1), /* OPERATOR ACTION CODE     */
*                2 MSGBLANK    CHAR(1), /* BLANK                    */
*                2 MSGUN       CHAR(3), /* UNIT NAME                */
*                2 MSGCOMM1    CHAR(1), /* COMMA                    */
*                2 MSGVOLSR    CHAR(6), /* VOLSER                   */
*                2 MSGCOMM2    CHAR(1), /* COMMA                    */
*                2 MSGTEXT     CHAR(47);/* MESSAGE TEXT             */
   DCL DXJBF CHAR(176) DEFINED(FORECORE) POS(101);
*%GOTO IDAFOR2;                        /* BYPASS VS2 SECTION @Y30DSDT*/
*%IDAFOR1: DCL (FORECORE,RWTG,RWTGC) CHAR;                 /*@Y30DSDT*/
*%         FORECORE='FORCORE';                             /*@Y30DSDT*/
*%         RWTG='IECWTGTB';            /* RWTG NOT VSAM REG  @Y30DSDT*/
*%         RWTGC='*';                  /* RWTGC NOT VSAM REG @Y30DSDT*/
*%         INCLUDE SYSLIB(IECDSECT);   /* VS2 FORCORE        @Y30DSDT*/
*%         INCLUDE SYSLIB(IECDSECS);   /* VS2 FORCORE EXT.   @Y30DSDT*/
*%         DEACTIVATE RWTG,RWTGC;                          /*@Y30DSDT*/
*%IDAFOR2: ;                       /* VS1/VS2 COMMON SECTION @Y30DSDT*/
 %IF NOJFCB='YES'
    %THEN %GOTO NOJFCBA;
*%       DCL   JFCBPTR  CHAR;
*%       JFCBPTR = 'ADDR(DXJBF)';
*%       INCLUDE SYSLIB(IEFJFCBN);
*%       DCL   JFCBXPTR CHAR;
*%       JFCBXPTR = 'ADDR(DXJBF)';
*%       INCLUDE SYSLIB(IEFJFCBX);
         %NOJFCBA:;
*%IF ENV='VS2'  %THEN                   /*IF VS2, BYPASS VS1 @Y30DSDT*/
*   %GOTO IDAFOR3;                      /* SECTION           @Y30DSDT*/
   DCL DXECB CHAR(4) DEFINED(FORECORE) POS(277);
*% IF CONFLICT ^= 'NO' %THEN %GOTO NORMAL;
   DCL DXIOB CHAR(32) DEFINED(FORECORE) POS(281);
*% GOTO BYPASS;
*% NORMAL: ;
   DCL 1 DXIOB DEFINED(FORECORE) POS(281),
*                2 IOBFLAG1    BIT(8),
*                2 IOBFLAG2    BIT(8),
*                2 IOBSENSE    CHAR(2),
*                  3 IOBSENS0  BIT(8),
*                  3 IOBSENS1  BIT(8),
*                2 IOBECBPT    PTR(31),
*                  3 *         BIT(8),
*                  3 *         PTR(24),
*                2 IOBCSW,
*                  3 IOBCOMAD  CHAR(4),
*                  3 IOBSTAT0  BIT(8),
*                  3 IOBSTAT1  BIT(8),
*                  3 IOBCNT    FIXED(15),
*                2 IOBSIOCC    BIT(8),
*                2 IOBSTART    PTR(24),
*                2 IOBWGHT     BIT(8),
*                2 IOBDCBPT    PTR(24),
*                2 *           CHAR(1),
*                2 *           CHAR(3),
*                2 IOBINCAM    FIXED(15),
*                2 IOBERRCT    FIXED(15);
*% BYPASS: ;
   DCL DXDADDR CHAR(8) DEFINED(FORECORE) POS(313);
   DCL 1 DYYYY DEFINED(FORECORE) POS(321),
*                2 DXDEBDEB    PTR(31),
*                2 DXDEBIRB    PTR(31),
*                  3 DXDEBOFL  CHAR(1),
*                2 DXDEBSYS    PTR(31),
*                2 DXDEBUSR    PTR(31),
*                2 DXDEBECB    PTR(31),
*                2 DXDEBDCB    PTR(31),
*                  3 DXDCBAD   PTR(31),
*                    4 DXDEBID CHAR(1),
*                2 DXDEBAPP    PTR(31),
*                2 DXDEBUCB    PTR(31),
*                  3 DXDEBMOD  CHAR(1),
*                2 DXDEBBIN    CHAR(2),
*                2 DXDEBSCC    CHAR(2),
*                2 DXDEBSHH    CHAR(2),
*                2 DXDEBECC    CHAR(2),
*                2 DXDEBEHH    CHAR(2),
*                2 DXDEBNTR    CHAR(2);
   DCL   DXDEB                          DEFINED(FORECORE) POS(317);
   DCL   DXXXX CHAR(4)                  DEFINED(FORECORE) POS(365);
   DCL   DXDCB                          DEFINED(FORECORE) POS(321);
   DCL   DXDCBDEB PTR(31)               DEFINED(FORECORE) POS(365);
   DCL 1 DXCCW                          DEFINED(FORECORE) POS(369),
*                2 DXCCW1      CHAR(8),
*                2 DXCCW2      CHAR(8),
*                2 DXCCW3      CHAR(8),
*                2 DXCCW4      CHAR(8),
*                2 DXCCW5      CHAR(8),
*                2 DXCCW6      CHAR(8),
*                2 DXCCW7      CHAR(8),
*                2 DXCCW8      CHAR(8),
*                2 DXCCW9      CHAR(8),
*                2 DXCCW10     CHAR(8),
*                2 DXCCW11     CHAR(8),
*                2 DXCCW12     CHAR(8);
   DCL   DXVSAMID PTR(31) DEFINED(FORECORE) POS(489);
*%IDAFOR3: ;                      /* VS1/VS2 COMMON SECTION @Y30DSDT*/
   DCL 1 PDWLIST DEFINED(FORECORE),    /* WRITE-TO-PROGRAMMER
                                          PARAMETER LIST            */
*                2 WTPLNGTH FIXED(15) UNSIGNED, /* LENGTH OF LIST   */
*                2 WTPFLGS FIXED(15) UNSIGNED, /* WTPFLAGS          */
*                2 WTPMSG CHAR(71),    /* TEXT OF MESSAGE           */
*                2 WTPROUT CHAR(4);    /* ROUTING CODES             */
*  % INCLUDE SYSLIB(IDAPDPRM);
*  RFY IDAPDPRM  BASED(ADDR(DXIOB));
*%IF ENV='VS2'  %THEN                  /* IF VS2, BYPASS VS1 @Y30DSDT*/
*   %GOTO IDAFOR4;                     /*  DECLARE           @Y30DSDT*/
   DCL 1 PDWWORK DEFINED(FORECORE) POS(321),
*   %GOTO IDAFOR5;                     /* BYPASS VS2 DECLARE @Y30DSDT*/
*%IDAFOR4: ;                                               /*@Y30DSDT*/
   DCL 1 PDWWORK DEFINED(DXDCB),                           /*@Y30DSDT*/
*%IDAFOR5: ;                                               /*@Y30DSDT*/
*                2 PDWSAVE CHAR(64),   /* REGISTER SAVE AREA        */
*                2 PDWSAVEA PTR(31),   /* REG 14 SAVE AREA          */
*                2 PDWSAVEB PTR(31),   /* REG 14 SAVE AREA          */
*                2 PDWSAVEC PTR(31),   /* REG 14 SAVE AREA          */
*                2 PDWSAVED PTR(31),   /* REG 14 SAVE AREA  @X04SVRL*/
*                2 PDWMSGPT PTR(31),   /* PTR TO LOCATION IN USER'S
*                                         MESSAGE AREA      @X04SVRL*/
*                2 PDWERRCD PTR(31),   /* ERROR CODE                */
*                2 PDWORKSP CHAR(8) BDY(DWORD); /* DBL WORD WORK AREA*/
*%IF ENV='VS2'  %THEN                   /*IF VS2, BYPASS VS1 @Y30DSDT*/
*   %GOTO NOWTG;                        /* SECTION           @Y30DSDT*/
*%       DCL DSECTSIZ FIXED;
*%       DSECTSIZ = 496;
* % IF WTGX ^= 'YES' %THEN %GO TO NOWTG;
*        DCL 1 WTG BASED     ,
*             2 WTGAREA  CHAR(29) ,     /* WTG TABLE BASIC SECTION  */
*              3 WTGMODNM CHAR(8) ,     /* MODULE NAME              */
*                4 *      CHAR(6) ,     /* FIRST SIX BYTES OF MODULE*/
*                4 WTGMODID CHAR(2),    /* MODULE ID                */
*              3 *          CHAR(6),    /* TTRSZE FLD OF BLDL       */
*              3 WTGTTR     CHAR(3);    /* TTR OF FIRST TEXT RECORD */
*        DCL WTGECBAD PTR(31) BASED(ADDR(WTGTTR)+2);
*        DCL 1 DSECTT10 BASED(ADDR(WTGECBAD)+4) BDY(WORD),
*             2 *         CHAR(2),
*             2 WTGATTRB  BIT(16),      /* ATTRIBUTES OF MODULE     */
*             2 WTGMODSZ  CHAR(3),      /* MAIN STORAGE NEEDED      */
*             2 WTGTXTLN  CHAR(2),      /* LNG OF FIRST TXT REC     */
*             2 WTGLNG    PTR(8) ,      /* LNG OF WTG TABL DWORDS   */
*             2 WTGPATHS  BIT(16),      /* O/C PROC. INDICATORS     */
*               3 WTGPRLSE BIT(1),      /* DA PARTIAL RLSE REQ      */
*               3 WTGNSL   BIT(1),      /* NSL TAPE INPUT PROC.     */
*               3 WTGCLOS  BIT(1),      /* TCLOSE XCTL TO NSL RTNS  */
*               3 WTGSMF   BIT(1),      /* SMF IS ACTIVE            */
*               3 WTGJFCBW BIT(1),      /* JFCB ALTERED NEEDS JQ UPD*/
*               3 *        BIT(3),
*               3 WTGTRACE BIT(1),      /* OPT TRACE FACILITY REQD  */
*               3 WTGAM0   BIT(1),      /* VSAM ACBS IN PARM LIST   */
*               3 *        BIT(4),
*               3 WTGRECHK BIT(1),      /* INCORRECT NSL VOL MOUNTED*/
*               3 WTGOPD   BIT(1),      /* DCBS TO COMPLETE THEN    */
*                                       /* GET PROB DET FOR LAST LD */
*             2 *         CHAR(8),      /*                          */
*             2 WTGEND    CHAR(0);      /* END OF WTG TABLE         */
*        DCL 1 DSECT10A BDY(WORD) BASED,
*             2 WTGENTRY  CHAR(8) BDY(WORD),/* FIRST ENTRY IN WTG   */
*               3 WTGIDTTR CHAR(5),     /* ID & TTR OF NEXT MODULE  */
*                 4 WTGID  CHAR(2),     /* MODULE ID                */
*                 4 WTGXTTR CHAR(3),    /* TTR OF MODULE            */
*               3 WTGCORE  PTR(24);     /* ADDR OF MAIN WORKAREA    */
* %NOWTG:  ;
