*/******************************************************************/
*/*  MACRO NAME = IDATRACE                                         */
*/*                                                                */
*/*  DESCRIPTIVE NAME = VSAM TRACE WORK AREA DSECT                 */
*/*                                                                */
*/*  FUNCTION = DESCRIBES THE WORK AREA, DECB'S AND BUFFERS        */
*/*             FOR THE TRACE ROUTINES.                            */
*/*                                                                */
*/*  CONTROL BLOCK STRUCTURE = IDATRACE IS POINTED TO BY IDAAMB    */
*/*                                                                */
*/*  INCLUDED MACROS = NONE                                        */
*/*                                                                */
*/*  METHOD OF ACCESS = PL/S OR ASM.                               */
*/*                                                                */
*/*  CREATED BY = VSAM OPEN (CORE OBTAINED)                        */
*/*               IDA019SU (FIELDS INITIALIZED)                    */
*/*                                                                */
*/*  STATUS = VS/1 RELEASE 6                                       */
*/*           VS/2 RELEASE 3.7                                     */
*/*                                                                */
*/*  DATA OF LAST CHANGE = 19 MAY 1978                             */
*/*                                                                */
*/******************************************************************/
*  DCL 1 IDATRACE BASED ,               /* IDATRACE                */
*        2 SAVE1X ,                     /* MAIN SAVE AREA          */
*          3 TRAENTRY PTR(31),          /* IDA019ST ENTRY POINT    */
*          3 * CHAR(72),                /* SAVE AREA               */
*        2 PRTSAVE CHAR(64),            /* IDA019SU SAVE AREA      */
*        2 HOLDREGS CHAR(32),           /* WORK SAVE AREA          */
*        2 OLDSAVE PTR(31),             /* ADDRESS OF SWAPED SAVE  */
*        2 ROUTCDE PTR(31),             /* WTO ROUTE CODE          */
*        2 REPLY@ CHAR(24),             /* WTOR PARM LIST          */
*          3   *   CHAR(16),            /* INPUT AREA FOR WTORS    */
*          3 REPLYMSG BIT(32),          /* WTOR TEXT PARMS         */
*            4 REPLYLYL BIT(8),         /* INPUT REPLY LENGTH      */
*            4 REPLYIN BIT(24),         /* PTR TO REPLY INPUT AREA */
*          3 RELYECB CHAR(4),           /* ECB FOR WTOR            */
*        2 MSGLNG CHAR(4),              /* MESSAGE LENGTH          */
*        2 OUTLINE CHAR(133),           /* PRINT LINE              */
*          3 MESSAGES CHAR(133),        /* MESSAGE BUILD AREA      */
*           4 HEADER CHAR(133),         /* HEADER BUILD AREA       */
*            5 * BIT(8),                /*                         */
*            5 ADDRESS CHAR(6),         /* ADDRESS PART OF PRINT   */
*            5 * BIT(8),                /*                         */
*            5 DISPLACE CHAR(3),        /* DISPLACEMENT IN PRINT   */
*            5 * CHAR(2),               /*                         */
*            5 LINE1 CHAR(39),          /* FIRST PART OF PRINT     */
*            5 LINE2 CHAR(38),          /* 2ND PART OF PRINT       */
*            5 ENGLISH CHAR(34),        /* TRANSLATED PART OF PRINT*/
*            5 * CHAR(9),               /*                         */
*        2 DLLLINE CHAR(66),            /* DLL FORMAT BUILD AREA   */
*        2 OUTREG   CHAR(4) BDY(WORD),  /* INTERNAL RETURN REG     */
*        2 IBUFFC   CHAR(4),            /* ADDR OF INDEX BUFC      */
*        2 DBUFFC   CHAR(4),            /* ADDR OF DATA BUFC       */
*        2 UNPACK   CHAR(12),           /* FILED USED TO UNPACK    */
*        2 WORK1    CHAR(4),            /* START DUMP ADDRESS      */
*        2 WORK2    CHAR(4),            /* ALIGNED DUMP ADDRESS    */
*        2 WORK3    CHAR(4),            /* DDD VALUE               */
*        2 WORK5    CHAR(4),            /* END OF DATA FOR ZERO    */
*        2 WORK6    CHAR(4),            /* CURRENT PRINT LENGTH    */
*        2 IRBNUM   CHAR(4),            /* IRB INTERRUPT NUMBER    */
*        2 CPLH     CHAR(4),            /* CURRENT PLH ADDRESS     */
*        2 UPGPTR   CHAR(4),            /* UPG TABLE ADDRESS       */
*        2 INLENGTH CHAR(4),            /* REPLY LENGTH            */
*        2 AMBL     CHAR(4),            /* ADDRESS OF AMBL         */
*        2 IAMB     CHAR(4),            /* ADDRESS OF INDEX AMB    */
*        2 DAMB     CHAR(4),            /* ADDRESS OF DATA AMB     */
*        2 RPL      CHAR(4),            /* ADDRESS OF RPL          */
*        2 PLH      CHAR(4),            /* ADDRESS OF PLH          */
*        2 VATADDR  CHAR(4),            /* ADDRESS OF VAT          */
*        2 BUFFLEN  CHAR(4),            /* LENGTH OF USER BUFFERS  */
*        2 STATUS BIT(8),               /* 1 CALL STATUS FLAGS     */
*          3 WTOR BIT(1),               /* WTOR ISSUED             */
*          3 GOOD BIT(1),               /* CALL WAS HANDLED        */
*          3 INDXPROC BIT(1),           /* WORKING IN INDEX CBS    */
*          3 HEADOUT BIT(1),            /* HEADER MSG WAS ISSUED   */
*          3 UPGSHORT BIT(1),           /* SHORT UPG PRINT         */
*          3 PATHDONE BIT(1),           /* FINISHED PATH PROCESSING*/
*          3 BASEDONE BIT(1),           /* FINISHED BASE PROCESSING*/
*          3 UPGDONE BIT(1),            /* DOING UPG PROCESSING    */
*        2 STATUS2 CHAR(1),             /* 2 CALL STATUS FLAGS     */
*          3 UNSWAP BIT(1),             /* HAD TO UNSWAP THE PARM  */
*          3 * BIT(7),                  /*                         */
*        2 HOOKCALL CHAR(2),            /* CALLING HOOK NUMBER     */
*        2 SAVEIN1 CHAR(60) BDY(WORD),  /* INPUT REG SAVE AREA     */
*          3 * CHAR(4),                 /*                         */
*          3 RPLIN CHAR(4),             /* INPUTTED RPL ADDRESS    */
*          3 PLHIN CHAR(4),             /* INPUTTED PLH ADDRESS    */
*          3 AMBIN CHAR(4),             /* INPUTTED AMB ADDRESS    */
*          3 * CHAR(36),                /* INPUT REGS 4 THRU 12    */
*          3 R13IN CHAR(4),             /* INPUTTED REG 13         */
*          3 R14IN CHAR(4),             /* INPUTTED REG 14 (RETURN)*/
*        2 SAVE2X,                      /* SAME AS SAVE1X          */
*          3 SAVEIN2 CHAR(560),         /*                         */
*        2 SAVE3X,                      /* SAME AS SAVE1X          */
*          3 SAVEIN3 CHAR(560),         /*                         */
*        2 SAVE4X CHAR(20),             /* GETMAIN SAVE AREA 1     */
*        2 SAVE5X CHAR(20),             /* GETMAIN SAVE AREA 2     */
*        2 SAVE6X CHAR(20),             /* GETMAIN SAVE AREA 3     */
*        2 FLAG0 BIT(8),                /* CONTROL FLAGS           */
*          3 SWAPED   BIT(1),           /* PARM LIST IS SWAPED     */
*          3 *        BIT(1),           /*                         */
*          3 INDEXOFF BIT(1),           /* TURNED INDEX OPTION OFF */
*          3 NOCORE   BIT(1),           /* GETMAIN FAILED          */
*          3 NOSAVE   BIT(1),           /* NO SAVE AREA FOR ENTRY  */
*          3 CASPLIT  BIT(1),           /* CA SPLIT IN PROGRESS    */
*          3 CISPLIT  BIT(1),           /* CI SPLIT IN PROGRESS    */
*          3 NODDNAME BIT(1),           /* BAD TRACE DS DDNAME     */
*        2 FLAG1 BIT(8),                /*                         */
*          3 STOP     BIT(1),           /* TERMINATE BIT           */
*          3 COUNTOLY BIT(1),           /* COUNT MODE              */
*          3 MVS      BIT(1),           /* IOSB/IOMB, NOT IOB      */
*          3 ADDRONLY BIT(1),           /* ADDRESS DISPLAY MODE    */
*          3 PARMS    BIT(1),           /* HAVE INPUT PARMS        */
*          3 *        BIT(1),           /*                         */
*          3 RMERRCD  BIT(1),           /* HAVE ERROR CODE         */
*          3 COUNTING BIT(1),           /* HAVE START/STOP VALUES  */
*        2 FLAG2 BIT(8),                /* FLAGS TO DETERMINE THE  */
*          3 DATACB   BIT(1),           /* CONTROL BLOCKS TO PRINT */
*          3 INDEXCB  BIT(1),           /*                         */
*          3 RPLX     BIT(1),           /*                         */
*          3 ACBX     BIT(1),           /*                         */
*          3 PLHX     BIT(1),           /*                         */
*          3 ALLCB    BIT(1),           /*                         */
*          3 BUFFCX   BIT(1),           /*                         */
*          3 AMBLX    BIT(1),           /*                         */
*        2 FLAG3 BIT(8),                /*                         */
*          3 BUFFX    BIT(1),           /*                         */
*          3 IOBX     BIT(1),           /*                         */
*          3 CPAX     BIT(1),           /*                         */
*          3 ICWAX    BIT(1),           /*                         */
*          3 AMBX     BIT(1),           /*                         */
*          3 AMDSBX   BIT(1),           /*                         */
*          3 ARDBX    BIT(1),           /*                         */
*          3 DEBX     BIT(1),           /*                         */
*        2 FLAG4 BIT(8),                /*                         */
*          3 BSPHX    BIT(1),           /*                         */
*          3 UPTX     BIT(1),           /*                         */
*          3 BIBX     BIT(1),           /*                         */
*          3 HEBX     BIT(1),           /*                         */
*          3 VATX     BIT(1),           /*                         */
*          3 VSRTX    BIT(1),           /*                         */
*          3 RECDX    BIT(1),           /*                         */
*          3 KEYX     BIT(1),           /*                         */
*        2 FLAG5 BIT(8),                /*                         */
*          3 REGX     BIT(1),           /*                         */
*          3 IICBX    BIT(1),           /* LAST CB OPTION BIT      */
*          3 DLL      BIT(1),           /* WANTS OUTPUT IN DLL     */
*          3 PAPSAVE  BIT(1),           /* WANTS PAPER SAVE        */
*          3 NOTE1    BIT(1),           /* WANTS LIMIT PRINT       */
*          3 AIXX     BIT(1),           /* WANTS AIX RE-PROMPT     */
*          3 COUNTX   BIT(1),           /* WANTS COUNT PROMPT      */
*          3 ERRCDPMT BIT(1),           /* WANTS ERROR CODE PMT    */
*        2 FLAG6 BIT(8),                /* ERROR CODE FROM OPTR    */
*        2 AIXIN  CHAR(3),              /* AIX PARM LIST           */
*        2 AIXOPT BIT(8),               /* AIX FLAGS               */
*          3 * BIT(4),                  /* SAME AS FLAG 5 EXCEPT   */
*          3 ONLYCALL BIT(1),           /* PRINT ONLY THE CALLER   */
*          3 AIXNOAIX BIT(1),           /* DOESNT WANT AIX         */
*          3 AIXNOBSE BIT(1),           /* DOESNT WANT BASE        */
*          3 AIXUPG BIT(1),             /* DOES WANT UPG           */
*        2 UPGCOUNT BIT(8),             /* COUNTER OF UPGS DONE    */
*        2 PSWKEY BIT(8),               /* OPEN PSW KEY            */
*        2 ECB@ CHAR(4) BDY(WORD),      /* NORMAL WTOR ECB         */
*        2 LPMBADR CHAR(4),             /* VARIOUS CB POINTERS     */
*        2 IBUFFLEN CHAR(4),
*        2 DBUFFLEN CHAR(4),
*        2 HOOK CHAR(4),                /* ACTIVE TRACE HOOK NUMS  */
*        2 JOBNAME CHAR(8),             /* JOBNAME FOR MESSAGES    */
*        2 STEPNAME CHAR(8),            /* STEP NAME FOR MESSAGES  */
*        2 DDNAME CHAR(8),              /* DDNAME OF DS BEING TRAC */
*        2 COUNTS  CHAR(4),             /* START COUNT VALUE       */
*        2 COUNTE  CHAR(4),             /* STOP COUNT VALUE        */
*        2 COUNT2  CHAR(4),             /* TOTAL COUNT VALUE       */
*        2 COUNT   CHAR(4),             /* GOOD COUNT VALUES       */
*        2 DECB@0 CHAR(80),             /* 20 DECB ADDRESSS        */
*        2 OPENLST CHAR(4),             /* OPEN PARM LIST          */
*        2 CURREC CHAR(4) BDY(DWORD),   /* POINTER TO CURRENT REC  */
*        2 CURDECBT CHAR(4),            /* POINTER TO CUR DECB     */
*        2 ZEROLINE CHAR(40),           /* ZERO LINE MESSAGE AREA  */
*        2 TRACE CHAR(88),              /* TRACE OUTPUT DCB        */
*        2 DECB0 CHAR(400),             /* 20 DECBS                */
*        2 BUFFER0 CHAR(53200);         /* 20 BUFFERS              */
*/******************************************************************/
*%GOTO   IDAEND;
         MACRO
         IDATRACE  &DSECT=YES
         AIF ('&DSECT' EQ 'NO').NODS
IDATRACE DSECT
.NODS    ANOP
         AGO   .TRDSECT
IDATRACE DS    0F
.TRDSECT ANOP
SAVE1X   DS    19F          MAIN SAVE AREA FOR EXTERNAL CALLS
PRTSAVE  DS    16F          IDA019SU SAVE AREA
HOLDREGS DS    8F           WORKING SAVE AREA
OLDSAVE  DS    F            ADDRESS OF SAVE AREA THAT WAS SWAPED
ROUTCDE  DS    F            ROUTING CODE FOR WTO
REPLY@   DS    XL11         INPUT AREA FOR WTOR'S
REPLY2   DS    XL5          PADDING THE INPUT AREA
* WTO PARAMETER LIST
REPLYMSG EQU   *
REPLYLYL DS    XL1          REPLY INPUT LENGTH (10)
REPLYIN  DS    XL3          ADDRESS OF THE REPLY AREA (REPLY)
RELYECB  DS    F            ADDRESS OF THE WTOR ECB
MSGLNG   DS    F            LENGTH OF THE OUTPUT MESSAGE
*** OUTPUT AND MESSAGE BUILD AREA. ********************************
OUTLINE  DS    XL133               PRINT LINE
MESSAGES EQU   OUTLINE
HEADER   EQU   OUTLINE
ADDRESS  EQU   OUTLINE+1
DISPLACE EQU   OUTLINE+8           DDD VALUE
LINE1    EQU   OUTLINE+13          FIRST SECTION OF DUMP
LINE2    EQU   OUTLINE+52          SECOND SECTION OF DUMP
ENGLISH  EQU   OUTLINE+90          TRANSLATED PART OF DUMP
DLLLINE  DS    XL66                2ND PRINT LINE FOR DLL FORMAT
**********************************************************************
OUTREG   DS    F
IBUFFC   DS    F
DBUFFC   DS    F
UNPACK   DS    3F
WORK1    DS    F                      START DUMP ADDRESS
WORK2    DS    F                      ALIGNED DUMP ADDRESS
WORK3    DS    F                      DDD VALUE (LAST 3 BYTES)
WORK5    DS    F                      END OF DATA FOR ZEROCHECK
WORK6    DS    F                      CURRENT PRINT LENGTH
IRBNUM   DS    F
CPLH     DS    F
UPGPTR   DS    F
INLENGTH DS    F
AMBL     DS    F                      AMBL ADDRESS
IAMB     DS    F                      INDEX AMB
DAMB     DS    F                      DATA AMB
RPL      DS    F
PLH      DS    F
VATADDR  DS    F
BUFFLEN  DS    F
STATUS   DS    XL1
WTOR     EQU   128
GOOD     EQU   64
INDXPROC EQU   32
HEADOUT  EQU   16
UPGSHORT EQU   8
PATHDONE EQU   4
BASEDONE EQU   2
UPGDONE  EQU   1
STATUS2  DS    XL1
UNSWAP   EQU   128
HOOKCALL DS    XL2                    CALLER HOOK NUMBER
SAVEIN1  DS    15F
RPLIN    EQU   SAVEIN1+4              ADDRESS OF CALLERS REG 1
PLHIN    EQU   SAVEIN1+8              ADDRESS OF CALLERS REG 2
AMBIN    EQU   SAVEIN1+12             ADDRESS OF CALLERS REG 3
R13IN    EQU   SAVEIN1+52             ADDRESS OF CALLERS REG 13
R14IN    EQU   SAVEIN1+56             ADDRESS OF CALLERS REG 14
*************************** END OF SAVE 1 *****************************
SAVE2X   DC    (*-SAVE1X)X'00'        2ND SAVE AREA, SAME AS SAVE1.
SAVEIN2  EQU   SAVE2X+SAVEIN1-SAVE1X
*************************** END OF SAVE 2 *****************************
SAVE3X   DC    (SAVE2X-SAVE1X)X'00'   3RD SAVE AREA, SAME AS SAVE1.
SAVEIN3  EQU   SAVE3X+SAVEIN1-SAVE1X
*************************** END OF SAVE 3 *****************************
SAVE4X   DS    5F                     4TH SAVE AREA INCASE OF GETMAIN
SAVE5X   DS    5F                     5TH SAVE AREA INCASE OF GETMAIN
SAVE6X   DS    5F                     6TH SAVE AREA INCASE OF GETMAIN
************************** FLAG1 *************************
FLAG0    DS    XL1
SWAPED   EQU   128
INDEXOFF EQU   32
NOCORE   EQU   16
NOSAVE   EQU   8
CASPLIT  EQU   4
CISPLIT  EQU   2
NODDNAME EQU   1
FLAG1    DS    XL1                ***** FLAG 1
STOP     EQU   128
COUNTOLY EQU   64
MVS      EQU   32
ADDRONLY EQU   16
PARMS    EQU   8
UNUSED   EQU   4
RMERRCD  EQU   2                   HAVE SUPPLIED ERROR CODE
COUNTING EQU   1                   DO COUNT VALUES
FLAG2    DS    XL1                ***** FLAG 2
DATACB   EQU   128                 WANTS DATA CB'S
INDEXCB  EQU   64                  WANTS INDEX CB'S
RPLX     EQU   32                  WANTS RPL
ACBX     EQU   16                  WANTS ACB
PLHX     EQU   8                   WANTS PLH
ALLCB    EQU   4                   WANTS ALL CB'S PRINTED
BUFFCX   EQU   2                   WANTS BUFFC PRINT
AMBLX    EQU   1                   WANTS AMBL PRINT
FLAG3    DS    XL1                ***** FLAG 3
BUFFX    EQU   128                 WANTS BUFFER PRINT
IOBX     EQU   64                  WANTS IOB PRINT
CPAX     EQU   32
ICWAX    EQU   16                  WANTS ICWA, IMWA OR DIWA (IF DATA)
AMBX     EQU   8                   WANTS AMB PRINT
AMDSBX   EQU   4                   WANTS AMDSB PRINT
ARDBX    EQU   2                   WANTS ARDB, EDB, LPMB PRINT
DEBX     EQU   1                   WANTS DEB
FLAG4    DS    XL1                ***** FLAG 4
BSPHX    EQU   128                 WANTS BSPH PRINT
UPTX     EQU   64                  WANTS UPT PRINT
BIBX     EQU   32                  WANTS BIB AND CMB PRINT
HEBX     EQU   16                  WANTS HEB PRINT
VATX     EQU   8                   WANTS VAT AND VMT PRINT
VSRTX    EQU   4                   WANTS VSRT PRINT
RECDX    EQU   2                   WANTS USER RECORD
KEYX     EQU   1                   WANTS SEARCH ARGUMENT
FLAG5    DS    XL1                ***** FLAG 5
REGX     EQU   128                 WANTS REGS
IICBX    EQU   64                  WANTS IICB AND DCB
DLL      EQU   32                  WANTS OUTPUT IN DLL FORMAT
PAPSAVE  EQU   16                  WANTS PAPER SAVED
NOTE1    EQU   8                   SINGLE PRINT OPTION
AIXX     EQU   4                   WANTS REPROMPT FOR AIX STUFF
COUNTX   EQU   2                   COUNT MODE
ERRCDPMT EQU   1                   PROMPT FOR ERROR CODE
FLAG6    DS    XL1                 ERROR CODE FROM OPERATOR
AIXIN    DS    XL3                 AIX PARM LIST
AIXOPT   DS    XL1                 UNIQUE INFO FOR AIX
ONLYCALL EQU   8
AIXNOAIX EQU   4
AIXNOBSE EQU   2
AIXUPG   EQU   1
UPGCOUNT DS    XL1                 COUNT OF UPGRADES DONE.
PSWKEY   DS    XL1                 PSW KEY
ECB@     DS    F                   NORMAL WTOR ECB
LPMBADR  DS    F
IBUFFLEN DS    F
DBUFFLEN DS    F
HOOK     DS    F
JOBNAME  DS    2F
STEPNAME DS    2F
DDNAME   DS    2F
COUNTS   DS    F
COUNTE   DS    F
COUNT2   DS    F
COUNT    DS    F
DECB@0   DS    F                     A(DECB0)
DECB@1   DS    F                     A(DECB1)
DECB@2   DS    F                     A(DECB2)
DECB@3   DS    F                     A(DECB3)
DECB@4   DS    F                     A(DECB4)
DECB@5   DS    F                     A(DECB5)
DECB@6   DS    F                     A(DECB6)
DECB@7   DS    F                     A(DECB7)
DECB@8   DS    F                     A(DECB8)
DECB@9   DS    F                     A(DECB9)
DECB@10  DS    F                     A(DECB10)
DECB@11  DS    F                     A(DECB11)
DECB@12  DS    F                     A(DECB12)
DECB@13  DS    F                     A(DECB13)
DECB@14  DS    F                     A(DECB14)
DECB@15  DS    F                     A(DECB15)
DECB@16  DS    F                     A(DECB16)
DECB@17  DS    F                     A(DECB17)
DECB@18  DS    F                     A(DECB18)
DECB@19  DS    F                     A(DECB19)
OPENLST  DS    F                     OPEN PARM LIST
         DS    0D           ALIGN FOR CDS INSTRUCTION
CURREC   DS    F                     A(BUFFER1)
CURDECBT DS    F                     A(DECB@0)
ZEROLINE DS    CL40                  ZERO LINE MESSAGE
**********************************************************************
*TRACE    DCB   DDNAME=TRACE,DSORG=PS,MACRF=W,RECFM=FBM,NCP=20,
*               BLKSIZE=2660,LRECL=133
TRACE    DS    CL88         ROOM FOR ONE DCB
DECB0    DS    20XL20       20 DECBS
BUFFER0  DS    20CL2660     20 BUFFERS
         MEND
*
*%IDAEND: ;
