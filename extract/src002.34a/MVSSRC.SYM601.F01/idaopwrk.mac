 /********************************************************************/
 /*                                                                  */
 /*   MACRO NAME = IDAOPWRK                                          */
 /*                                                                  */
 /*   DESCRIPTIVE NAME = VSAM OPEN ACB WORK AREA.                    */
 /*                                                                  */
 /*   FUNCTION = THIS MACRO DEFINES THE STRUCTURE OF THE OPEN VSAM   */
 /*              ACB WORK AREA. THE ACB WORK AREA IS THE COMMON WORK */
 /*              AREA USED BY VSAM OPEN ROUTINES.                    */
 /*                                                                  */
 /*   CONTROL BLOCK STRUCTURE = THE ACB WORK AREA IS POINTED TO BY   */
 /*                             REGISTER 4 (RCORE).                  */
 /*                                                                  */
 /*   INCLUDED MACROS = NONE                                         */
 /*                                                                  */
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
 /*                                                                  */
 /*   CREATED BY: VSAM OPEN MODULE IDA0192A.                         */
 /*                                                                  */
 /*   STATUS = VS2 RELEASE 4                                 @Z40ESSR*/
 /*                                                                  */
 /*   DATE OF LAST CHANGE = 7/22/75                          @Z40WSRL*/
 /*                                                                  */
 /********************************************************************/
    DECLARE
      1 IDAOPWRK BASED(RCORE),      /* ACB WORK AREA                 */
        3 OPWSUBPL FIXED(8),        /* SUBPOOL OF WORK AREA          */
        3 OPWLENTH FIXED(24),       /* LENGTH OF WORK AREA           */
        3 OPWID CHAR(8),            /* BLOCK IDENTIFIER              */
        3 OPWFLGS1 BIT(8),          /* SPHERE FLAGS FOR SYSTEM DATA
                                       SETS                          */
          5 OPWCAT   BIT(1),        /* CATALOG OPEN                  */
          5 OPWSCRA  BIT(1),        /* SYS CATLG RECOVERY AREA OPEN  */
          5 OPWVVIC  BIT(1),        /* VVIC DATA SET                 */
            6 OPWSDS BIT(1),        /* IND SYSTEM DATA SET   @Z40WSRL*/
          5 *        BIT(5),        /* RESERVED FOR SYSTEM DATA SETS */
        3 OPWFLGS2 BIT(8),          /* SPHERE FLAGS NON-SYSTEM
                                       DATA SETS                     */
          5 OPWUCRA  BIT(1),        /* USER CATLG RECOVERY AREA OPEN */
          5 OPWIXDT  BIT(1),        /* INDEX BEING OPENED AS AN ESDS */
          5 OPWAIXDT BIT(1),        /* AIX OPENED FOR END USE        */
          5 OPWDUMMY BIT(1),        /* OPEN DUMMY DATA SET           */
          5 *        BIT(4),        /* RESERVED                      */
        3 OPWFLGS3 BIT(8),          /* INDICATORS FOR IDA0192F       */
          5 OPWDAVAT BIT(1),        /* DUMMY AMBL ADDED TO VAT       */
          5 OPWPUPGR BIT(1),        /* PATH ALSO IN UPGRADE SET      */
          5 OPWUPGOP BIT(1),        /* UPGRADE SET OPENED            */
          5 OPWNOWRK BIT(1),        /* MOD WORK AREA DOES NOT EXIST  */
          5 OPWRSTRT BIT(1),        /* RESTART IN PROGRESS           */
          5 *        BIT(3),        /* UNUSED                        */
        3 OPWFLGS4 BIT(8),          /* AUTHORIZATION LEVEL           */
          5 OPWFULL  BIT(1),        /* FULL ACCESS                   */
          5 OPWCINV  BIT(1),        /* CONTROL INTERVAL ACCESS       */
          5 OPWUPD   BIT(1),        /* UPDATE ACCESS                 */
          5 *        BIT(5),        /* NOT USED                      */
        3 OPWBIB PTR(31),           /* PTR TO BIB                    */
        3 OPWCOMWA PTR(31),         /* PTR TO OPEN COMMON WORK AREA  */
        3 OPWIDF,                   /* CLUSTER IDENTIFIER            */
          5 OPWCACB PTR(31),        /* ADDRESS OF CATALOG ACB        */
          5 OPWDCI PTR(24) BDY(WORD), /* CINV NO. OF DATA COMP       */
          5 OPWQ BIT(8),            /* QUALIFIER FOR TYPE OF OPEN    */
            7 OPWDDC  BIT(1),       /* CONNECT BY DD NAME            */
            7 OPWGSR  BIT(1),       /* OPENED FOR GSR                */
            7 OPWLSR  BIT(1),       /* OPENED FOR LSR                */
            7 OPWFSTP BIT(1),       /* OPENED FOR ICI                */
            7 OPWUBF  BIT(1),       /* OPENED FOR USER BUFFERING     */
            7 OPWKSDS BIT(1),       /* OPENED AS KSDS                */
            7 OPWESDS BIT(1),       /* OPENED AS ESDS                */
            7 OPWDFR  BIT(1),       /* OPENED WITH DEFER WRT OPTION  */
        3 OPWVSMPL,                 /* O/C/EOV VIRTUAL STORAGE
                                       MANAGER (VSM) PARAMETER LIST  */
          5 OPWVMANC PTR(31),       /* PTR TO ANCHOR BLOCK           */
          5 OPWVMSP  FIXED(8),      /* SUBPOOL FOR DIRECT REQUEST    */
          5 OPWVMLNG FIXED(24),     /* AMOUNT OF STORAGE REQUESTED   */
          5 OPWVMADR PTR(31),       /* ADDR OF GOTTEN STORAGE, ZERO
                                       IF STORAGE NOT OBTAINED       */
          5 OPWVMTYP FIXED(8),      /* REQUEST TYPE                  */
          5 OPWVMFLG BIT(8),        /* INDICATOR FLAGS               */
            7 OPWVMPGB BIT(1),      /* GET STORAGE ON A PAGE BNDY    */
            7 OPWVMKE5 BIT(1),      /* GET STORAGE IN KEY 5          */
            7 OPWVMDXK BIT(1),      /* GET STORAGE IN GSR KEY
                                       NOTE - IF NOT KEY 5 & NOT GSR,
                                       GET CORE IN KEY 0     @Z40ESSR*/
            7 OPWVMSRB BIT(1),      /* IND THIS IS A SPECIAL REQ BLK */
            7 OPWVMNSL BIT(1),      /* DO NOT BLD A CSL FOR THIS REQ */
            7 OPWVMTCB BIT(1),      /* CORE IS TO BE OWNED BY JOBSTEP
                                       TCB                           */
          5 * CHAR(2),              /* NOT USED                      */
        3 OPWVSMWA,                 /* O/C/EOV VSM WORK AREA         */
          5 OPWVANCP PTR(31),       /* PTR TO ADDR OF FIRST HEB HDR
                                       ELEM ASSOCIATED WITH THIS REQ */
          5 OPWVTBLP PTR(31),       /* PTR TO REQUEST TABLE USED BY
                                       THE GETSPACE ROUTINE          */
          5 OPWVCSLP PTR(31),       /* USED TO SCAN FOR A CSL ENTRY  */
          5 OPWVCSLE PTR(31),       /* POINTER TO CSL ENTRY          */
          5 OPWVHDRE PTR(31),       /* POINTER TO HDR ELEMENT        */
          5 OPWVR13  PTR(31),       /* SAVE AREA ADDRESS SAVE AREA   */
          5 OPWVSAVE(4) FIXED(31),  /* SAVE AREA FOR IDA0192M        */
          5 OPWVGSPL(3),            /* GET SPACE PARAMETER LISTS     */
            7 OPWVGSSP FIXED(8),    /* SUBPOOL NUMBER                */
            7 OPWVGETL FIXED(24),   /* LENGTH OF GOTTEN CORE         */
            7 OPWVGSPT PTR(31),     /* POINTER TO GOTTEN CORE        */
            7 OPWVGFLG BIT(8),      /* FLAGS FOR GET SPACE REQUEST -
                                       SEE OPWVMFLG ABOVE FOR A
                                       DESCRIPTION OF BIT SETTINGS   */
            7 OPWVREQL FIXED(24),   /* LENGTH OF REQUEST             */
          5 OPWVANCS PTR(31),       /* BIB ANCHOR PTR FOR SPHERE
                                       BLOCK REQUESTS                */
          5 OPWVLSAV,               /* SAVE AREA FOR SETLOCK         */
            7 OPWVRG12 PTR(31),     /* SAVE AREA FOR REG 12          */
            7 OPWVRG13 PTR(31),     /* SAVE AREA FOR REG 13          */
          5 OPWVFMPL,               /* FREEMAIN PARAMETER LIST       */
            7 OPWVFMSP FIXED(8),    /* FREEMAIN SUBPOOL NUMBER       */
            7 OPWVFMLN FIXED(24),   /* FREEMAIN LENGTH               */
            7 OPWVFMPT PTR(31),     /* FREEMAIN POINTER              */
        3 OPWSAVE,                  /* PTR'S TO SAVE LISTS           */
          5 OPWCSL PTR(31),         /* PTR TO CORE SAVE LIST         */
          5 OPWESL PTR(31),         /* PTR TO ENQ SAVE LIST          */
          5 OPWPSL PTR(31),         /* PTR TO PAGE FIX SAVE LIST     */
          5 OPWDSL PTR(31),         /* PTR TO DEB SAVE LIST          */
          5 OPWSSL PTR(31),         /* PTR TO SWAP SAVE LIST         */
        3 OPWCURPT PTR(31),         /* PTR TO CLUSTER BEING PROCESSED*/
        3 OPWXAMBL PTR(31),         /* PTR TO CURRENT AMBL           */
        3 OPWCAMBL PTR(31),         /* PTR TO AMBL CONNECTING TO     */
        3 OPWBCON PTR(31),          /* PTR TO BASE AMBL CONNECTING TO*/
        3 OPWPCON PTR(31),          /* PTR TO PATH AMBL CONNECTING TO*/
        3 OPWBAMBL PTR(31),         /* PTR TO AMBL FOR BASE          */
        3 OPWPAMBL PTR(31),         /* PTR TO AMBL FOR PATH          */
        3 OPWCRA CHAR(6),           /* CRA VOLUME SERIAL NUMBER      */
        3 * CHAR(1),                /* NOT USED                      */
        3 OPWCATTR CHAR(1),         /* MVM CLUSTER ATTR FLAG         */
          5 * BIT(6),               /* NOT USED              @Z40WSRL*/
          5 OPWSWSP BIT(1),         /* SWAP SPACE            @Z40WSRL*/
          5 OPWPSDS BIT(1),         /* PAGE SPACE DATA SET           */
        3 OPWUPT PTR(31),           /* PTR TO UPT                    */
        3 OPWUACB PTR(31),          /* PTR TO USER ACB               */
        3 OPWWRKPT PTR(31),         /* PTR TO CURRENT AMBWK AREA     */
        3 OPWDTWRK PTR(31),         /* PTR TO DATA AMB WORK AREA     */
        3 OPWIXWRK PTR(31),         /* PTR TO INDEX AMB WORK AREA    */
        3 OPWCTCB PTR(31),          /* PTR TO CURRENT TCB            */
        3 OPWJSTCB PTR(31),         /* PTR TO JOB STEP TCB           */
        3 OPWTIOT PTR(31),          /* PTR TO TIOT ENTRY             */
        3 OPWBUFND FIXED(31),       /* NUMBER OF DATA BUFFERS        */
        3 OPWBUFNI FIXED(31),       /* NUMBER OF INDEX BUFFERS       */
        3 OPWCSTRN FIXED(8),        /* CURRENT STRING NUMBER         */
        3 OPWSTRNO FIXED(8),        /* PATH STRING NO. IF PATH
                                       PROCESSING OTHERWISE BASE     */
        3 OPWBSTRN FIXED(8),        /* BASE STRING NO. IF PATH
                                       PROCESSING                    */
        3 * CHAR(1),                /* NOT USED                      */
        3 OPWDACB CHAR(52),         /* DUMMY ACB FOR OPENING BASE    */
        3 OPWSFI CHAR(12),          /* SUB-FUNCTION INFORMATION      */
        3 OPWERMAP CHAR(256),       /* PPCODE TO ACBERFLG MAP        */
        3 OPWSAVEA PTR(31),         /* SAVE AREA FOR RETURN ADDRESS  */
        3 OPWBSECL,                 /* BASE CLUSTER INFORMATION      */
          5 * BIT(8),               /* RESERVED FOR FLAGS            */
          5 OPWBDTCI PTR(24),       /* BASE DATA CINV NUMBER         */
          5 * BIT(8),               /* RESERVED FOR FLAGS            */
          5 OPWBIXCI PTR(24),       /* BASE INDEX CINV NUMBER        */
        3 OPWPTAIX,                 /* PATH AIX INFORMATION          */
          5 * BIT(8),               /* RESERVED FOR FLAGS            */
          5 OPWPDTCI PTR(24),       /* PATH AIX DATA CINV NUMBER     */
          5 * BIT(8),               /* RESERVED FOR FLAGS            */
          5 OPWPIXCI PTR(24),       /* PATH AIX INDEX CINV NUMBER    */
        3 OPWNOUPG FIXED(8),        /* NO. OF UPGRADE AIX'S          */
        3 OPW2YPLH PTR(24),         /* PLHNXT PTR FOR 2Y/2Z.         */
        3 OPWUPAIX (*),             /* UPGRADE AIX INFORMATION       */
          5 * BIT(8),               /* RESERVED FOR FLAGS            */
          5 OPWUDTCI PTR(24),       /* UPGRADE AIX DATA CINV NUMBER  */
          5 * BIT(8),               /* RESERVED FOR FLAGS            */
          5 OPWUIXCI PTR(24);       /* UPGRADE AIX INDEX CINV NUMBER */

    /*****************************************************************/
    /*  MAP FOR REFERENCING CURRENT CLUSTER INFORMATION              */
    /*****************************************************************/
    DECLARE
      1 OPWCURCL BASED(OPWCURPT),   /* CLUSTER INFORMATION MAP       */
        2 OPWCFLG1 BIT(8),          /* CLUSTER FLAGS SET BY SPHERE
                                       OPEN                          */
          3 OPWBASE BIT(1),         /* OPEN BASE CLUSTER             */
          3 OPWPATH BIT(1),         /* OPEN PATH AIX                 */
          3 OPWUPGR BIT(1),         /* OPEN UPGRADE AIX              */
          3 OPWSVWRK BIT(1),        /* DON'T FREE AMB WORK AREAS     */
          3 OPWPRTBL BIT(1),        /* PARTIAL CONTROL BLOCK BUILD   */
        2 OPWCDTCI PTR(24),         /* CINV NO. OF DATA COMPONENT    */
        2 OPWFLG2 BIT(8),           /* CLUSTER FLAGS SET BY CLUSTER
                                       OPEN                          */
          3 OPWDOPEN BIT(1),        /* OPEN INDR ON IN CTLG FOR DATA */
          3 OPWMODWK BIT(1),        /* MODULE WORK AREA EXISTS       */
          3 OPWEMPUP BIT(1),        /* IND EMPTY UPGRADE DS          */
          3 OPWERR2B BIT(1),        /* IND TERMINATING ERROR IN 192B */
          3 OPWIOPEN BIT(1),        /* OPEN INDR ON IN CTLG FOR INDX */
        2 OPWCIXCI PTR(24);         /* CINV NO. OF INDEX COMPONENT   */

    /*****************************************************************/
    /*  THE FOLLOWING CONSTANTS DEFINE THE REQUEST TYPE CODES USED IN*/
    /*  THE VIRTUAL STORAGE MANAGER PARAMETER LIST TO CALL IDA0192M. */
    /*  CODES 0 THROUGH 127 ARE RESERVED FOR REQUESTING SPACE IN     */
    /*  CLUSTER RELATED BLOCKS AS THESE CODES ARE USED TO INDEX THE  */
    /*  CORRESPONDING HEB HEADER ELEMENT ENTRY IN THE CMB.  CODES    */
    /*  128 THROUGH 255 ARE USED FOR ALL OTHER TYPE REQUESTS.        */
    /*****************************************************************/
    DECLARE                         /* REQUEST TYPE CODES            */
      USERBLK  FIXED(8) CONSTANT(1), /* USER BLOCK                   */
      PROTBLK  FIXED(8) CONSTANT(2), /* PROTECT BLOCK                */
      STRBLK   FIXED(8) CONSTANT(3), /* NON-PROTECTED STRING BLOCK   */
      UPSTRBLK FIXED(8) CONSTANT(4), /* NON-PROT UPGRADE STRING BLK  */
      FXSTRBLK FIXED(8) CONSTANT(5), /* GLOBAL FIXED STRING BLOCK    */
      FUSTRBLK FIXED(8) CONSTANT(6), /* GLBL UPGRADE FIXED STRING BLK*/
      BFRBLK   FIXED(8) CONSTANT(7), /* BUFFER BLOCK                 */
      UPBFRBLK FIXED(8) CONSTANT(8), /* UPGRADE BUFFER BLOCK         */
      DEBBLK   FIXED(8) CONSTANT(9), /* DEB BLOCK                    */
      EDBBLK   FIXED(8) CONSTANT(10), /* EDB BLOCK                   */
      PRSTRBLK FIXED(8) CONSTANT(11), /* PROTECTED STRING BLK        */
      PRUSTRBK FIXED(8) CONSTANT(12), /* PROT UPGR STRING BLK        */
      FIXEDBLK FIXED(8) CONSTANT(13), /* FIXED BLOCK         @ZA04718*/
      SPHBLK   FIXED(8) CONSTANT(128), /* SPHERE BLOCK               */
      PRSPHBLK FIXED(8) CONSTANT(129), /* PROTECTED SPHERE BLOCK     */
      FREECLSP FIXED(8) CONSTANT(130), /* FREE EXCESS SPACE IN CLUSTER
                                          RELATED BLOCKS             */
      FREESPH  FIXED(8) CONSTANT(131), /* FREE EXCESS SPACE IN SPHERE
                                          BLOCKS                     */
      ERRCLNUP FIXED(8) CONSTANT(132), /* PERFORM ERROR CLEAN UP     */
      DIRCTREQ FIXED(8) CONSTANT(133), /* DIRECT REQUEST FOR CORE    */
      PSAMBLBK FIXED(8) CONSTANT(134), /* PROTECTED AMBL BLOCK       */
      FREESREQ FIXED(8) CONSTANT(135); /* FREE SPECIAL REQ BLKS      */
