*/********************************************************************/
*/*                                                                  */
*/*   MACRO NAME = IDAAMB                                            */
*/*                                                                  */
*/*   DESCRIPTIVE NAME =ACCESS METHOD BLOCK                          */
*/*                                                                  */
*/*   FUNCTION = DESCRIBES DATA SET ATTRIBUTES AND SUPPLIES          */
*/*              IOS COMPATIBLE FIELDS FOR I/O                       */
*/*                                                                  */
*/*   CONTROL BLOCK STRUCTURE = THE IDAAMB IS POINTED TO BY THE      */
*/*              IDAAMBL                                             */
*/*                                                                  */
*/*   INCLUDED MACROS = NONE                                         */
*/*                                                                  */
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
*/*                                                                  */
*/*   CREATED BY = VSAM OPEN                                         */
*/*                                                                  */
*/*   STATUS = VS/1 RELEASE 4  (CHANGE FLAG @X04SVXX)                */
*/*            VS/2 RELEASE 3  (CHANGE FLAG @Y30SDXX)                */
*/*            IDATRACE SUPPORT (CHANGE FLAG @ZA29388)               */
*/*                                                                  */
*/*   DATE OF LAST CHANGE = 08/11/75                         @Z40WSRL*/
*/*                                                                  */
*/********************************************************************/
*     DCL  1 IDAAMB  BASED ,                /* AMB                 */
*               2 AMBID         BIT(8),     /* AMB IDENTIFIER      */
*               2 AMBRSC        BIT(8),     /* RESOURCE TS BYTE    */
*               2 AMBLEN        FIXED(15),  /* AMB LENGTH          */
*               2 AMBLINK       PTR(31),    /* NEXT AMB            */
*               2 AMBBUFC       PTR(31),    /* BUFFER CONTROL      */
*               2 AMBPH         PTR(31),    /* PLACEHOLDER         */
*               2 AMBCACB       PTR(31),    /*PTR TO ACB OF CATALOG*/
*                                           /*USED TO ACCESS OBJECT*/
*               2 AMBDSB        PTR(31),    /* AMDSB POINTER       */
*               2 AMBEOVR       CHAR(1),    /* EOV REQUEST TYPE - NOT
*                                              USED IN MVM   @Y30DSJH*/
*                 3 AMBFLG0     BIT(8),     /* MVM AMB FLAGS @Y30DSJH*/
*                   4 AMBPSDS   BIT(1),     /* PAGE SPACE    @Y30DSJH*/
*                   4 AMBSWSP   BIT(1),     /* SWAP SPACE    @Z40WSRL*/
*                   4 *         BIT(6),     /* UNUSED IN MVM @Z40WSRL*/
*               2 AMBFLG1       BIT(8),     /* FLAG BYTE ONE       */
*                 3 AMBCREAT    BIT(1),     /* ON IF IN CREATE MODE*/
*                3 AMBTYPE    BIT(1),       /*                       */
*                3 AMBMCAT    BIT(1),       /* MASTER CATL           */
*                3 AMBPCAT    BIT(1),       /* PRIVATE CATL          */
*                 3 AMBSPEED  BIT(1),       /* CREATE SPEED OPITON */
*                 3 AMBUBF      BIT(1),     /* USER BUFFERING      */
*                 3 AMBJRN      BIT(1),     /* JOURNAL EXIT PRESENT*/
*                 3 AMBINBUF    BIT(1),     /* SHARED DS--DIRECT   */
*                                           /* REQ BFR INVALIDATION*/
*               2 AMBDSORG      BIT(16),    /* DATA SET ORGANIZ.   */
*                    3 *        BIT(12),     /* ALWAYS ZERO         */
*                    3 AMBDORGA BIT(1),      /* ACCESS METHOD INDIC */
*                    3 *        BIT(3),      /* ALWAYS ZERO         */
*               2 AMBIOBAD      PTR(31),    /* IOB ADDR            */
*                 3 AMBIOMB     PTR(31),    /* IOMB CHAIN IN MVM
*                                                            @Y30DSJH*/
*               2 AMBCDSN       CHAR(3),    /* CATALOG DSN         */
*               2 AMBDDSN       CHAR(3),    /* DATA DSN            */
*               2 *             PTR(16),    /* RESERVED            */
*               2 AMBTIOT       FIXED(15),  /* OFFSET TO TIOT      */
*                2 AMBINFL      PTR(8),     /* INDICATOR FLAGS     */
*                  3 *          BIT(1),     /* RESERVED FOR EXCP   */
*                  3 *          BIT(2),     /* RESERVED            */
*                  3 AMBCAT     BIT(1),     /* AMB FOR VSAM CATLG  */
*                  3 AMBSCRA    BIT(1),     /* CATALOG CONTROL BLOCK
*                                              SYSTEM AREA   @X04SVLC*/
*                  3 AMBUCRA    BIT(1),     /* CATALOG CONTROL BLOCK
*                                              USER AREA     @X04SVLC*/
*                  3 AMBUPX     BIT(1),     /* SET ON IF UPGRADE TABLE
*                                              EXISTS        @X04SVLC*/
*                  3 AMBSDS     BIT(1),     /* SET ON IF SYSTEM DATA
*                                              SET           @Z40WSRL*/
*                2 AMBAMETH     PTR(8),     /* ACCESS METHOD TYPE  */
*                  %AMBVSAM='''11''X';      /* VSAM CODE           */
*               2 AMBDEBPT      PTR(31),    /* DEB ADDR            */
*                 3 AMBIFLGS    BIT(8),     /* IOS ERROR FLAGS     */
*                 3 AMBDEBAD    PTR(24),    /* DEB ADDR            */
*               2 AMBOFLGS      BIT(8),     /* OPEN FLAGS          */
*                 3 *       BIT(3),         /* ALWAYS ZERO          */
*                 3 AMBOPEN BIT(1),         /* AMB IS OPEN          */
*                 3 *       BIT(2),         /* ALWAYS ZERO          */
*                 3 AMBEXFG BIT(1),         /* USER EXIT FLAG       */
*                 3 AMBBUSY BIT(1),         /* BUSY BIT             */
*               2 AMBFLG2       PTR(8),     /* FLAG BYTE TWO @X04SVLC*/
*                 3 AMBPUG BIT(1),          /* AMB PARTICIPATES IN
*                                              UPGRADE       @X04SVLC*/
*               2 AMBRPT        FIXED(15),  /*                     */
*               2 AMBEDB        PTR(31),    /* EDB POINTER         */
*               2 AMBEOVPT      PTR(31),    /* PTR TO KEY OR RBA - NOT
*                                              USED IN MVM   @Y30DSJH*/
*                 3 AMBAMBXN    PTR(31),    /* PTR TO AMB EXTENSION IN
*                                              MVM           @Y30DSJH*/
*               2 AMBWKA        PTR(31),    /* WORK AREA PTR       */
*               2 AMBIWA        PTR(31),    /* INSERT WORK AREA PTR*/
*               2 *             PTR(31),    /* UNUSED        @Z30SSMR*/
*               2 AMBPIXP       PTR(31),    /* PTR TO PRIME INDEX AMB*/
*               2 AMBPAMBL      PTR(31),    /* PTR TO PRIMARY AMBL
*                                                            @X04SVLC*/
*               2 AMBUPLH       PTR(31),    /* PTR TO UPGRADE PLH
*                                                            @X04SVLC*/
*               2 AMBCSWD1 FIXED(31)BDY(WORD),/* CS WORD 1   @X04SVLC*/
*                 3 AMBAFLG BIT(8), /* ADDITIONAL FLAGS      @X04SVLC*/
*                   4 *      BIT(1),/* UNUSED                @X04SVLC*/
*                   4 AMBLSR BIT(1),/* LSR OPTION            @X04SVLC*/
*                   4 AMBGSR BIT(1),/* GSR OPTION            @Y30SDLP*/
*                   4 AMBICI BIT(1),/* ICIP OPTION           @Y30SDLP*/
*                   4 AMBDFR BIT(1),/* DEFER WRITES          @X04SVLC*/
*                   4 AMBSIS BIT(1),/* SEQ INSERT STRAT      @X04SVLC*/
*                   4 AMBCFX BIT(1),/* FIXED CTRL BLK OPTN   @Y30SDLP*/
*                   4 *      BIT(1),/* UNUSED                @X04SVLC*/
*                 3 * FIXED(8),     /* UNUSED                @X04SVLC*/
*                 3 AMBRDCNT FIXED(15),/* NBR OF CIS READ FOR THIS AMB
*                                           - VS1 ONLY       @X04SVLC*/
*               2 AMBBM2SH PTR(31), /* ADDR OF PLH DOING 2ND SEARCH
*                                      OF SUBPOOL - VS1 ONLY @X04SVLC*/
*               2 AMBCPA PTR(31),   /* DB/DC - PTR TO WSHD.  NON DB/DC
*                                      & VS1 - UNUSED.  NON DB/DC & VS2
*                                      - PTR TO STATIC CPA'S @Y30DSJH*/
*               2 AMBWSHD PTR(31),  /* PTR TO WORK SPACE HDR @X04SVLC*/
*               2 AMBEXEX CHAR(8),  /* EXCEPTION EXIT NAME   @X04SVLC*/
*               2 AMBSZRD FIXED(15),/* CP SIZE FOR READ      @X04SVLC*/
*               2 AMBSZWR FIXED(15),/* CP SIZE FOR WRITE     @X04SVLC*/
*               2 AMBSZFW FIXED(15),/* CP SIZE FORMAT WRITE  @X04SVLC*/
*               2 AMBSZCP FIXED(15),/* SIZE FOR CPA BASE     @X04SVLC*/
*               2 AMBVIOT PTR(31),  /* POINTER TO IDAVIOT    @X04SVLC*/
*               2 AMBTRACE PTR(31); /* PTR TO TRACE TABLE    @ZA29388*/
*  DCL   AMBINDEX BIT(1) CONSTANT('1'B);    /* INDEX TYPE AMB        */
*  DCL   AMBDATA  BIT(1) CONSTANT('0'B);    /* DATA TYPE AMB         */
* DCL AMBEOVMK BIT(8) CONSTANT('00000001'B); /* MOUNT BY KEY         */
* DCL AMBEOVMR BIT(8) CONSTANT('10000001'B); /* MOUNT BY RBA         */
* DCL AMBEOVAK BIT(8) CONSTANT('00000010'B); /* ALLOCATE BY KEY      */
* DCL AMBEOVAR BIT(8) CONSTANT('10000010'B); /* ALLOCATE BY RBA      */
* DCL AMBEOVUC BIT(8) CONSTANT('00000100'B); /* UPDATE CATALOG       */
* DCL AMBEXOFF BIT(1) CONSTANT('1'B);       /* AMB NOT LOCKED       */
*%GOTO AMBBSL2 ;
*/*                                                                */
*/*                                                                */
*/*                  ASSEMBLER DSECT FOR AMB                       */
*/*                                                                */
          MACRO
         IDAAMB &DSECT=YES
          AIF   ('&DSECT' EQ 'NO').NODS
IDAAMB    DSECT
          AGO   .AMBDSCT
.NODS     ANOP
IDAAMB    DS    0F                       ACCESS METHOD BLOCK
.AMBDSCT  ANOP
AMBID     DS    XL1                      AMB IDENTIFIER='40'
AMBRSC    DS    XL1                      RESOURCE TS BYTE
AMBIDENT  EQU   X'40'                    ID OF AMB
AMBLEN    DS    H                        AMB LENGTH IN BYTES
AMBLINK   DS    A                        AMB LINK FIELD
AMBBUFC   DS    A                        AMB BUFFER PTR
AMBPH     DS    A                        AMB PLACE HOLDER
AMBCACB   DS    A                        PTR TO CATALOG ACB
AMBDSB    DS    A                        ADDRESS OF ASB
AMBEOVR   DS    0BL1                     EOV REQUEST TYPE - NOT USED
*                                        BY EOV IN MVM         @Y30DSJH
AMBEOVMK  EQU   X'01'                    MOUNT BY KEY
AMBEOVMR  EQU   X'81'                    MOUNT BY RBA
AMBEOVAK  EQU   X'02'                    ALLOCATE BY KEY
AMBEOVAR  EQU   X'82'                    ALLOCATE BY RBA
AMBFLG0   DS    BL1                      MVM AMB FLAGS FIELD   @Y30DSJH
AMBPSDS   EQU   X'80'                    PAGE SPACE DATA SET   @Y30DSJH
AMBSWSP   EQU   X'40'                    SWAP SPACE DATA SET   @Z40WSRL
AMBFLG1   DS    BL1                      FLAG BYTE ONE
AMBCREAT  EQU   X'80'                    ON IF IN CREATE MODE
AMBTYPE  EQU   X'40'                     TYPE OF AMB
AMBMCAT  EQU   X'20'                     MASTER CATL
AMBPCAT  EQU   X'10'                     PRIVATE CATL
AMBSPEED  EQU   X'08'                    CREATE SPEED OPTION
AMBUBF   EQU   X'04'                     USER BUFFERING--CNV, MOVE MODE
AMBJRN   EQU   X'02'                     JOURNAL EXIT SPECIFIED
AMBINBUF EQU   X'01'                     SHARE--INVALIDATE DIR REQ BFRS
AMBDSORG  DS    BL2                      DS ORG FIELD
AMBDORGA EQU   X'08'                     ACCESS METHOD INDICATOR
AMBIOBAD  DS    0A                       IOB ADDR              @Y30DSJH
AMBIOMB   DS    A                        IOMB CHAIN IN MVM     @Y30DSJH
AMBCDSN   DS    CL3                      CATALOG DSN
AMBDDSN   DS    CL3                      DATA DSN
          DS    H                        RESERVED
AMBTIOT   DS    H                        OFFSET TO TIOT
AMBINFL  DS    XL1                       INDICATOR FLAGS
AMBCAT   EQU   X'10'                     AMB FOR VSAM CATALOG
AMBSCRA   EQU   X'08'                    CATALOG CONTROL BLOCK
*                                        SYSTEM AREA           @X04SVLC
AMBUCRA   EQU   X'04'                    CATALOG CONTROL BLOCK
*                                        USER AREA             @X04SVLC
AMBUPX   EQU   X'02'                     UPGRADE TAB EXISTS    @X04SVLC
AMBSDS    EQU   X'01'                    SYSTEM DATA SET       @Z40WSRL
AMBAMETH DS    XL1                       ACCESS METHOD TYPE
AMBVSAM  EQU   X'11'                     VSAM CODE
AMBIFLGS  DS    XL1                      ERROR FLAGS
AMBDEBAD  DS    AL3                      ADDRESS OF DEB
AMBOFLGS  DS    BL1                      OPEN FLAGS
AMBOPEN   EQU   X'10'                    AMB IS OPEN
AMBEXFG  EQU   X'02'               USER EXIT FLAG
AMBBUSY   EQU   X'01'                    AMB IS BUSY
AMBFLG2   DS    BL1                      FLAG BYTE TWO         @X04SVLC
AMBPUG    EQU   X'80'                    AMB PARTICIPATES IN
*                                              UPGRADE         @X04SVLC
AMBRPT    DS    H
AMBEDB    DS    A                        ADDRESS OF EDB
AMBEOVPT  DS    0A                       PTR TO KEY OR RBA FOR @Y30DSJH
*                                        EOV - NOT USED IN MVM @Y30DSJH
AMBAMBXN  DS    A                        PTR TO AMB EXTENSION  @Y30DSJH
*                                        IN MVM                @Y30DSJH
AMBWKA    DS    A                        WORK AREA PTR
AMBIWA    DS    A                        INSERT WORK AREA PTR
         DS    A                         UNUSED                @Z30SSMR
AMBPIXP   DS    A                        POINTER TO PRIME INDEX AMB
AMBPAMBL DS    A                         PTR TO PRIMARY AMBL
AMBUPLH  DS    A                         PTR TO UPGRADE PLH    @X04SVLC
AMBCSWD1 DS    0A                        CS WORD 1            @X04SVLC
AMBAFLG  DS    BL1                       ADDITIONAL FLAGS      @X04SVLC
AMBLSR   EQU   X'40'                     LSR OPTION            @X04SVLC
AMBGSR   EQU   X'20'                     GSR OPTION           @X04SVLC
AMBICI   EQU   X'10'                     ICIP OPTION           @X04SVLC
AMBDFR   EQU   X'08'                     DEFER WRITES          @X04SVLC
AMBSIS   EQU   X'04'                     SEQ INSERT STRAT      @X04SVLC
AMBCFX   EQU   X'02'                     FIXED CNTL BLK OPTION @X04SVLC
         DS    AL1                       UNUSED                @X04SVLC
AMBRDCNT DS    H                         NBR OF CIS READ FOR THIS AMB
*                                                            @X04SVLC
AMBBM2SH DS    A                         ADDR OF PLH DOING 2ND SEARCH
*                                        OF SUBPOOL            @X04SVLC
AMBCPA   DS    A                         DB/DC - PTR TO WSHD. NON DB/DC
*                                        & VS1 - UNUSED.  NON DB/DC &
*                                        VS2 - STATIC CPA PTR. @Y30DSJH
AMBWSHD  DS    A                         PTR TO WORK SPACE HDR @X04SVLC
AMBEXEX  DS    CL8                       EXCEPTION EXIT NAME   @X04SVLC
AMBSZRD  DS    H                         CP SIZE FOR READ      @X04SVLC
AMBSZWR  DS    H                         CP SIZE FOR WRITE     @X04SVLC
AMBSZFW  DS    H                         CP SIZE FORMAT WRITE  @X04SVLC
AMBSZCP  DS    H                         SIZE FOR CPA BASE     @X04SVLC
AMBVIOT  DS    A                         POINTER TO IDAVIOT    @X04SVLC
AMBTRACE DS    A                         PTR TO TRACE TABLE    @ZA29388
AMBLENTH  EQU   *-IDAAMB                 LENGTH OF AMB IN BYTES
          MEND
*
*
*%AMBBSL2: ;
