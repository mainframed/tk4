 /********************************************************************/
 /*                                                                  */
 /*   MACRO NAME = IEZCTGFV                                          */
 /*                                                                  */
 /*   DESCRIPTIVE NAME = CATALOG FIELD VECTOR TABLE                  */
 /*                                                                  */
 /*   FUNCTION = THE CATALOG FIELD VECTOR TABLE (CTGFV) IS BUILT     */
 /*              BY THE ACCESS METHOD SERVICES (AMS) UTILITY         */
 /*              PROGRAMS (WHEN THE USER ISSUES A 'DEFINE' OR        */
 /*              'ALTER' COMMAND) AND CONTAINS ADDRESSES OF          */
 /*              USER-SUPPLIED INFORMATION FIELDS AND LISTS.         */
 /*              IF THE USER IS CREATING A CLUSTER, A CTGFV          */
 /*              IS BUILT FOR EACH CATALOG RECORD THAT WILL BE       */
 /*              BUILT TO DESCRIBE THE CLUSTER.                      */
 /*                                                                  */
 /*   CONTROL BLOCK STRUCTURE = THE CLUSTER CTGFV IS POINTED TO BY   */
 /*                             THE CTGPL (CTGFVT) AND THE DATA      */
 /*                             AND INDEX CTGFV'S ARE POINTED TO     */
 /*                             BY THE CLUSTER CTGFV.                */
 /*                                                                  */
 /*   INCLUDED MACROS = NONE                                         */
 /*                                                                  */
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
 /*                                                                  */
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Z40RSXX)       @Z40RSRC*/
 /*                                                                  */
 /*   DATE OF LAST CHANGE = 9 MAY 75                         @Z40RSRC*/
 /*                                                                  */
 /********************************************************************/
 %DECLARE (CTGFVLEN, CTGFV999, CTGFVLVL) CHAR;             /*@X04SVDW*/
 %CTGFVLEN = 'LENGTH(CTGFV)';       /* LENGTH OF CTGFV       @X04SVDW*/
*%IF CTGFV999 ^= ','                /* IF BLOCK NOT CONTINUED,       */
*  %THEN %CTGFV999 = ';';           /*   THEN CLOSE DECLARE STMNT    */
*%IF CTGFVLVL = ''                  /* IF BLOCK NOT CONCATENATED,    */
*  %THEN %GOTO CTGFV001;            /*   THEN GENERATE THE DECLARE   */
*%CTGFVDUM = CTGFVLVL××' CTGFV';    /* SET MINOR LEVEL NUMBER        */
*  CTGFVDUM                         /* CTGFV CONCATENATED LEVEL      */
*%GOTO CTGFV002;                    /* SKIP THE DECLARE STATEMENT    */
*%CTGFV001:;                        /* DECLARE                       */
    DECLARE
*     1 CTGFV BASED(CTGFVT)         /* DECLARE CTGFV LEVEL ONE       */
*%CTGFV002:;                        /* SKIPPED DECLARE               */
*        BDY(WORD),                 /* WORD BOUNDARY                 */
*       5 CTGFVTYP CHAR(1),         /* ENTRY TYPE (DEFINE)           */
*       5 CTGFVPRO BIT(8),          /* CMS PROCESSING OPTIONS        */
*         10 CTGFVAVL BIT(1),       /* ADD VOLUMES (ALTER)           */
*         10 CTGFVRVL BIT(1),       /* REMOVE VOLUMES (ALTER)        */
*         10 CTGFVNDC BIT(1),       /* NO DEVICE TYPE CONVERSION
*                                                              Y02020*/
*         10 CTGFVDRC BIT(1),       /* DEFINE RECOVERY CATLG @Y30SSDW*/
*         10 CTGFVRON BIT(1),       /* SET RACF INDICATOR ON @Z40RSRC*/
*         10 CTGFVROF BIT(1),       /* ALTER - SET RACF INDICATOR
*                                      OFF                   @Z40RSRC*/
*         10 *        BIT(2),       /* RESERVED              @Z40RSRC*/
*       5 CTGFVELM PTR(8),          /* ELEMENT NO. OF FIELD CMSPCATR */
*                                   /* IN IGGMCMWA MAPPING           */
*       5 *        CHAR(1),         /* RESERVED                      */
*       5 CTGFVDCH PTR(31),         /* DATA VECTOR TABLE ADDRESS     */
*       5 CTGFVICH PTR(31),         /* INDEX VECTOR TABLE ADDRESS    */
*       5 CTGFVVCH PTR(31),         /* SPACE VECTOR TABLE ADDRESS    */
*       5 CTGFVIND PTR(31),         /* JCL STMNT NAME ADDRESS        */
*       5 CTGFVENT PTR(31),         /* ENTRY NAME FIELD ADDRESS      */
*       5 CTGFVSTY PTR(31),         /* SECURITY COMBINATION FPL ADDR */
*       5 CTGFVOWN PTR(31),         /* OWNER ID FPL ADDRESS          */
*       5 CTGFVEXP PTR(31),         /* EXPIRATION DATE FPL ADDRESS   */
*       5 CTGFVCRE PTR(31),         /* CREATION DATE FPL ADDRESS     */
*       5 CTGFVVLT PTR(31),         /* VOLUME SERIAL LIST ADDRESS    */
*       5 CTGFVRNG PTR(31),         /* KEY RANGES LIST ADDRESS       */
*       5 CTGFVDVT PTR(31),         /* ALIEN DEVICE TYPE FPL ADDRESS */
*       5 CTGFVSPC PTR(31),         /* SPACE PARM COMBO FPL ADDRESS  */
*         10 CTGFVTTR PTR(31),      /* PTR TO NONVSAM DSCB TTR Y02020*/
*       5 CTGFVAMD PTR(31),         /* AMDSB FPL ADDRESS             */
          10 CTGFVFSN PTR(31),      /* ALIEN DATA SET SEQUENCE       */
                                    /*   NUMBER FPL ADDRESS          */
*       5 CTGFVATR PTR(31),         /* DATA SET ATTRIBUTES FPL ADDR  */
*       5 CTGFVBUF PTR(31),         /* BUFFER SIZE FPL ADDRESS       */
*       5 CTGFVLRS PTR(31),         /* AVERAGE RECORD SIZE FPL ADDR  */
*       5 CTGFVLMT PTR(31),         /* ADDRS OF GDG LIMIT      Y02020*/
*         6 CTGFVEXT PTR(31),       /* ADDRESS OF EXCEPTION  @Y30SSRS*/
*                                   /*   EXIT FPL            @Y30SSRS*/
        5 CTGFVGAT PTR(31),         /* ADDRS OF GDG ATTRIBUTES Y02020*/
*         6 CTGFVUPG PTR(31),       /* ADDR OF PATH/AIX      @Y30SSRS*/
*                                   /* ATTRIBUTES FPL        @Y30SSRS*/
*       5 CTGFVNAM PTR(31),         /* ADDRESS OF TRUE NAME    Y02020*/
                                    /*   OR RELATED NAME     @Y30SSRS*/
*       5 CTGFVPWD PTR(31),         /* ADDR OF 8-BYTE        @Y30SSRS*/
*                                   /* REL OBJ PASSWORD      @Y30SSRS*/
*         6 CTGFVCPP PTR(31),       /* ADDR OF TSO COMMAND PROCESSOR
*                                      PARAMETER LIST (CPPL --
*                                      TSO COMMAND CALLERS ONLY).
*                                      IF ZERO, DAIRFAIL MESSAGES
*                                      WILL BE WTP'S.        @Z40RSRC*/
*       5 CTGFVWKA PTR(31) CTGFV999 /*CRA FEEDBACK AREA ADDR @Y30SSRS*/
 /********************************************************************/
 /*     CONSTANTS USED TO SET AND/OR TEST FIELDS DECLARED ABOVE      */
 /********************************************************************/
    DECLARE                           /* ENTRY TYPE - CTGFVTYP       */
      CTGFVDTA CHAR(1) CONSTANT('D'), /* DATA                        */
      CTGFVCL  CHAR(1) CONSTANT('C'), /* CLUSTER                     */
      CTGFVIDX CHAR(1) CONSTANT('I'), /* INDEX                       */
      CTGFVVOL CHAR(1) CONSTANT('V'), /* VOLUME (SPACE)              */
      CTGFVALN CHAR(1) CONSTANT('A'), /* ALIEN                       */
      CTGFVGBS CHAR(1) CONSTANT('B'), /* GDG BASE              Y02020*/
      CTGFVANM CHAR(1) CONSTANT('X'), /* ALIAS NAME            Y02020*/
      CTGFVPTH CHAR(1) CONSTANT('R'), /* PATH                @Y30SSRS*/
      CTGFVAIX CHAR(1) CONSTANT('G'); /* ALTERNATE INDEX     @Y30SSRS*/
