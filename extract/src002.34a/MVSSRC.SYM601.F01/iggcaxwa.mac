 /********************************************************************/
 /*                                                                  */
 /*   MACRO NAME = IGGCAXWA                                          */
 /*                                                                  */
 /*   DESCRIPTIVE NAME = CATALOG AUXILIARY WORKAREA                  */
 /*                                                                  */
 /*   FUNCTION = THE CATALOG AUXILIARY WORKAREA (CAXWA) CONTAINS     */
 /*              THE ADDRESS OF CONTROL BLOCKS AND WORK AREAS NEEDED */
 /*              WHEN A CATALOG IS BEING OPENED OR CREATED.  IT ALSO */
 /*              CONTAINS FLAGS THAT INDICATE THE TYPE OF PROCESSING */
 /*              BEING PERFORMED ON THE CATALOG AND THE OS/VS        */
 /*              COMPONENT THAT INVOKED THE PROCESSING.              */
 /*                                                                  */
 /*   CONTROL BLOCK STRUCTURE = THE CAXWA IS POINTED TO BY           */
 /*                             THE ACB (ACBUAPTR).                  */
 /*                                                                  */
 /*   INCLUDED MACROS = NONE                                         */
 /*                                                                  */
 /*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
 /*                                                                  */
 /*   CREATED BY: VSAM CATALOG MANAGEMENT DURING BUILD OR OPEN OF    */
 /*               A MASTER OR USER CATALOG.                          */
 /*                                                                  */
 /*   STATUS = VS/2 RELEASE 4   (CHANGE FLAG @Y40WSXX)       @Z40WSPJ*/
 /*                                                                  */
 /*   DATE OF LAST CHANGE = 20 MAY 75                        @Z40WSPJ*/
 /*   DATE OF LAST CHANGE = 11 NOV 74                        @Z40RSRC*/
 /*                                                                  */
 /********************************************************************/
    DECLARE
      1 IGGCAXWA BASED(CAXWAPTR),   /* ESTABLISH BASE TO THE CAXWA   */
        2 CAXID CHAR(1),            /* CAXWA ID = 'CA'X              */
        2 *     PTR(24),            /* RESERVED                      */
        2 CAXCHN   PTR(31),         /* CAXWA CHAIN PTR               */
*       2 CAXFLGS  BIT(8),          /* FLAGS                         */
          3 CAXBLD BIT(1),          /* BUILD REQUEST                 */
          3 CAXOPN BIT(1),          /* OPEN IN CONTROL               */
          3 CAXCLS BIT(1),          /* CLOSE IN CONTROL              */
          3 CAXEOV BIT(1),          /* END-OF-VOLUME IN CONTROL      */
          3 CAXCMP BIT(1),          /* I/O SUPPORT COMPLETE          */
          3 CAXMCT BIT(1),          /* 1 = MASTER CATALOG,           */
                                    /* 0 = USER CATALOG              */
          3 CAXCMR BIT(1),          /* CATALOG MGMT INVOKED          */
          3 CAXSCR BIT(1),          /* SCHEDULER INVOKED             */
        2 CAXFLG2 BIT(8),           /* FLAGS - BYTE 2                */
          3 CAXF2DT  BIT(1),        /* CATALOG DELETED               */
          3 CAXF2NDD BIT(1),        /* NO DDNAME FOUND (IFG0191X)    */
          3 CAXF2NCR BIT(1),        /* UNABLE TO GET CORE (IFG0191X) */
          3 CAXF2IOE BIT(1),        /* I/O ERROR (IFG0191X)          */
          3 CAXF2CLR BIT(1),        /* RPL CLEANUP REQUESTED   Y02020*/
          3 CAXF2CA  BIT(1),        /* FREE CAXWA IF ERROR           */
          3 CAXF2REC BIT(1),        /* RECOVERABLE CATALOG   @Y30SSDW*/
          3 CAXF2VTU BIT(1),        /* VOLUME T.S. UPDATED   @Y30SSDW*/
        2 CAXFLG3 BIT(8),           /* FLAGS                 @Y30SSDW*/
          3 CAXF3AT  BIT(1),        /* CRA ALT TIOT EXIST    @Y30SSDW*/
          3 CAXF3ANE BIT(1),        /* CRA NONEXISTENT       @Y30SSDW*/
          3 *        BIT(1),        /* RESERVED              @Z40RSRC*/
          3 CAXRAC   BIT(1),        /* CATLG IS RAC-DEFINED  @Z40RSRC*/
          3 CAXF3B5  BIT(1),        /* B56-11-NO CAT PSWD    @Z30TSBM*/
          3 CAXF3B6  BIT(1),        /* 01-NO UPD,10-UPD      @Z30TSBM*/
          3 *        BIT(2),        /* RESERVED              @Z30TSBM*/
        2 CAXACT   PTR(8),          /* CATALOG ACTIVITY COUNT        */
*       2 CAXATIOT PTR(31),         /* ALTERNATE TIOT POINTER        */
        2 CAXSCHWA PTR(31),         /* PTR TO SCHEDULER WORKAREA     */
        2 CAXDRWP  PTR(31),         /* POINTER TO DRWA               */
        2 CAXACB   PTR(31),         /* ACB POINTER                   */
        2 CAXUCB  PTR(31),          /* UCB POINTER                   */
*       2 CAXCCR,                   /* CATALOG CONTROL RECORD INFO   */
*         3 CAXHACI PTR(24) BDY(BYTE), /* HI ALLOCATED CI NUMBER     */
*         3 CAXNFCI PTR(24) BDY(BYTE), /* NEXT FREE CI NUMBER        */
*         3 CAXCDCI PTR(24) BDY(BYTE), /* DELETED CI COUNT           */
          3 CAXFDCI PTR(24) BDY(BYTE), /* FIRST DELETED CI NUMBER    */
        2 CAXASID FIXED(15),        /* AS ID FOR UCRA ACCESS @Y30SSSB*/
        2 CAXRPLCT PTR(15),         /* RPL COUNT                     */
*       2 CAXRPL   PTR(31),         /* PTR TO RPL CHAIN              */
        2 CAXCNAM CHAR(44),         /* CATALOG NAME                  */
          3 CAXVOLID CHAR(6),       /* CRA VOLUME SERIAL     @Y30SSDW*/
          3 CAXRACTS CHAR(4),       /* CRA CREATION TIME STAMP
                                                             @Y30SSDW*/
          3 CAXRATEP PTR(31) BDY(BYTE), /* TIOT ENTRY POINTER FOR CRA
                                                             @Y30SSDW*/
          3 CAXRADDN CHAR(8),       /* CRA DD NAME           @Y30SSDW*/
          3 *        CHAR(22),      /* RESERVED, CRA ONLY    @Y30SSDW*/
        2 CAXOPLST,                 /* OPEN/CLOSE PARAMETER LIST     */
          3 COPTS BIT(8),           /* OPTIONS                       */
            4 CENLST BIT(1),        /* END-OF-LIST INDICATOR         */
            4  *     BIT(7),        /* UNUSED                        */
          3 COPACB PTR(24),         /* POINTER TO ACB                */
        2 CAXOPEWA PTR(31),         /* POINTER TO O/C/EOV WORKAREA   */
        2 CAXCCA   PTR(31),         /* POINTER TO CCA                */
         3 CAXPLOCK PTR(31),        /* RPL POST LOCK         @Z40WSPJ*/
        2 CAXJDE  PTR(31),          /* POINTER TO JDE        @Y30SSDW*/
        2 CAXCRACB PTR(31),         /* ADDRESS OF CRA ACB    @Z40WSPJ*/
        2 CAXRACP  PTR(31),         /* ADDR OF RAC PROFILE   @Z40RSRC*/
        2 CAXECB PTR(31),           /* RPL WAIT ECB          @Z40WSPJ*/
         3 CAXECBHB BIT(8),         /* RPL WAIT ECB BYTE 1   @Z40WSPJ*/
          4 CAXECBWB BIT(1),        /* WAIT BIT              @Z40WSPJ*/
          4 CAXECBPB BIT(1),        /* POST BIT              @Z40WSPJ*/
          4 * BIT(6),               /* RESERVED              @Z40WSPJ*/
         3 * PTR(24),               /* RESERVED              @Z40WSPJ*/
        2 CAXASCBP PTR(31),         /* ADDRESS OF ASCB       @Z40WSPJ*/
        2 CAXHRPLW PTR(31),         /* HUNG RPL WORD         @Z40WSPJ*/
         3 CAXHRPLC PTR(15),        /* HUNG-UP RPL COUNT     @Z40WSPJ*/
         3 CAXWNQID PTR(15);        /* RPL WAIT ENQ ID       @Z40WSPJ*/
    DECLARE CAXCD PTR(8) CONSTANT (202);/* CAXWA ID CHARACTER ('CA'X)*/
 % DECLARE                          /* MACRO-PASS CHARACTER VARIABLES*/
     OPLST CHAR,                    /* OPEN/CLOSE PARAMETER LIST     */
     ENLST CHAR,                    /* END-OF-LIST INDICATOR         */
     OPDCB CHAR,                    /* POINTER TO ACB                */
     OPEWA CHAR,                    /* POINTER TO O/C/EOV WORKAREA   */
     COWCCA CHAR,                   /* POINTER TO CCA                */
     COWDRWP CHAR;                  /* POINTER TO DRWA               */
 % OPLST = 'CAXOPLST';              /* OPEN/CLOSE PARAMETER LIST     */
 % ENLST = 'CENLST';                /* END-OF-LIST INDICATOR         */
 % OPDCB = 'COPACB';                /* POINTER TO ACB                */
 % OPEWA = 'CAXOPEWA';              /* POINTER TO O/C/EOV WORKAREA   */
 % COWCCA = 'CAXCCA';               /* POINTER TO CCA                */
 % COWDRWP = 'CAXDRWP';             /* POINTER TO DRWA               */
