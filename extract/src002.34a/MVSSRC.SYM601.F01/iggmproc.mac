 % IGGMPROC:
           MACRO KEYS(PNAME,TYPE,CALLED);
           DCL IGGGVCCT CHAR EXT ;       /*CONTROL VARIABLE         */
           DCL IGGFPINT CHAR EXT;   /* INT PROC GLOBAL SW    @ZA29164*/
           DCL IGGBASE2 CHAR EXT;        /* BASE REGISTER    @ZA95164*/
           DCL PROCNAME CHAR ;           /* PROCEDURE NAME          */
           DCL (CBSW,NUSW,IESW) CHAR ;   /*PROCESSING CONTROL SW.   */
           DCL (TITLEC,TITLET) CHAR ;    /*TITLE WORK VAR.          */
           DCL BEGLABEL CHAR;       /* LABEL VARIABLE        @ZA29164*/
           DCL SFIDNAMELOVAR CHAR;
           DCL (BLANKS,ASTERICS) CHAR;   /*COMMENT VARIABLES @Y30SSPJ*/
           DCL (RX5,RX6,RX7,RX8,RX9,RX10)CHAR;/* REG VAR     @ZA95164*/
           IF IGGBASE2^='5' THEN    /* IS 2ND BASE REG 5?    @ZA95164*/
             RX5 = 'R5,';           /* NO                    @ZA95164*/
           ELSE;                    /*                       @ZA95164*/
           IF IGGBASE2^='6' THEN    /* IS 2ND BASE REG 6?    @ZA95164*/
             RX6 = 'R6,';           /* NO                    @ZA95164*/
           ELSE;                    /*                       @ZA95164*/
           IF IGGBASE2^='7' THEN    /* IS 2ND BASE REG 7?    @ZA95164*/
             RX7 = 'R7,';           /* NO                    @ZA95164*/
           ELSE;                    /*                       @ZA95164*/
           IF IGGBASE2^='8' THEN    /* IS 2ND BASE REG 8?    @ZA95164*/
             RX8 = 'R8,';           /* NO                    @ZA95164*/
           ELSE;                    /*                       @ZA95164*/
           IF IGGBASE2^='9' THEN    /* IS 2ND BASE REG 9?    @ZA95164*/
             RX9 = 'R9,';           /* NO                    @ZA95164*/
           ELSE;                    /*                       @ZA95164*/
           IF IGGBASE2^='10' THEN   /* IS 2ND BASE REG 10?   @ZA95164*/
             RX10 = 'R10';          /* NO                    @ZA95164*/
           ELSE                     /*                       @ZA95164*/
             RX9 = 'R9';            /* YES                   @ZA95164*/
           BLANKS = REPEAT(' ',65);      /* SET 66 BLANKS    @Y30SSPJ*/
           ASTERICS = REPEAT('*',65);    /* SET 66 ASTERICS  @Y30SSPJ*/
           CBSW = '2' ;                 /*PRESET TO IND. OUTER PROC */
           PROCNAME = PNAME(1) ;         /*SET PROC NAME VAR        */
           IF CALLED(1) = ''             /*IF NOT SPEC              */
             THEN IESW = 'INT' ;         /*SUPPLY DEFAULT           */
             ELSE IESW = CALLED(1) ;
           IF TYPE(1) = ''               /*IF NOT SPEC.             */
             THEN NUSW = 'NES' ;         /*SUPPLY DEFAULT           */
             ELSE NUSW = TYPE(1) ;
           TITLEC = IESW ×× 'ERNALLY' ;  /*INITIALIZE TITLE VARS.   */
           IF NUSW = 'NES'
             THEN TITLET = NUSW ×× 'TED' ;
             ELSE TITLET = NUSW ×× 'ESTED' ;
           IF IGGGVCCT = '' THEN         /*1ST TIME INVOKED  @Y30SSPJ*/
             DO;                         /* YES-FIRST TIME   @Y30SSPJ*/
               ANS ( COMMENT(ASTERICS) ) COL(2);           /*@Y30SSPJ*/
               ANS ( COMMENT(BLANKS) ) COL(2);             /*@Y30SSPJ*/
               ANS ('/') COL(2);                           /*@Y30SSPJ*/
               ANS ('*') COL(3);                           /*@Y30SSPJ*/
               ANS ('PROCNAME  -  PROCEDURE  TITLEC  CALLED  TITLET')
                  RESCAN COL(12);                          /*@Y30SSDW*/
               ANS ('*') COL(70);                          /*@Y30SSPJ*/
               ANS ('/') COL(71);                          /*@Y30SSPJ*/
               ANS ( COMMENT(BLANKS) ) COL(2);             /*@Y30SSPJ*/
               ANS ( COMMENT(ASTERICS) ) COL(2);           /*@Y30SSPJ*/
               GOTO PO ;            /*GO BUILD OUTER PROC    @Y30SSPJ*/
             END;                                          /*@Y30SSPJ*/
           SFIDNAMELOVAR = 'CL8' ×× QUOTE(PROCNAME);
           IF IGGGVCCT ^= '1' THEN      /*NOT 1ST PROC              */
             DO;
               ANS ('CALL EXIT;') SKIP COL(12);
               ANS ('/* RETURN TO CALLER         */') COL(41);
             END;
           ELSE
             DO;
               ANS ('GEN(USING @MAINENT,@15);') SKIP COL(12);
               ANS ('/* INDICATE AVAILABLE BASE REG  */')
                   COL(37);                               /* @Y30SSDW*/
      ANS ('GEN REFS(CCATEMPS) (USING @DATD-(CCATEMPS-IGGCCA),R11);')
                  SKIP COL(12);
               IF IESW='INT' THEN   /* INTERNAL PROCEDURE    @ZA29164*/
                 IGGFPINT='1';      /* SET GLOBAL SWITCH     @ZA29164*/
               ELSE;                /* NO                    @ZA29164*/
             END;
           ANS ('GEN(DS 0F);') SKIP COL(12);
           ANS ('/* FULLWORD BOUNDARY ALIGNMENT */')
               COL(37);                                   /* @Y30SSDW*/
           ANS ('GEN(DC SFIDNAMELOVAR);') SKIP COL(12);
           ANS ('/* NAME OF FOLLOWING PROCEDURE */')
                COL(37);                                  /* @Y30SSDW*/
           IF   IGGGVCCT = '3' THEN     /*INNER PROC (NOT 1ST)      */
             DO;
               ANS ('END;') SKIP COL(12);
               ANS ('/* END OF INNER PROCEDURE   */') COL(41);
             END;
           CBSW = '3' ;                 /*INDICATE INNER PROC       */
           ANS ('@EJECT ASSEMBLE;') SKIP COL(2) ;          /*@ZA95164*/
           ANS ( COMMENT(ASTERICS) ) COL(2);               /*@Y30SSPJ*/
           ANS ( COMMENT(BLANKS) ) COL(2);                 /*@Y30SSPJ*/
           ANS ('/') COL(2);                               /*@Y30SSPJ*/
           ANS ('*') COL(3);                               /*@Y30SSPJ*/
           ANS ('PROCNAME  -  PROCEDURE  TITLEC  CALLED  TITLET')
              RESCAN COL(12);                              /*@Y30SSDW*/
           ANS ('*') COL(70);                              /*@Y30SSPJ*/
           ANS ('/') COL(71);                              /*@Y30SSPJ*/
           ANS ( COMMENT(BLANKS) ) COL(2);                 /*@Y30SSPJ*/
           ANS ( COMMENT(ASTERICS) ) COL(2);               /*@Y30SSPJ*/
           ANS (PROCNAME ×× ':') SKIP RESCAN COL(2);
           ANS ('PROC OPTIONS(NOSAVEAREA,NOSAVE);') COL(12);
           ANS ('/* SPECIFY PROCEDURE OPTIONS */') COL(37);/*@Y30SSDW*/
           IF IESW = 'EXT' THEN
             DO;
               ANS ('GEN(ENTRY PROCNAME );') SKIP RESCAN COL(12);
               ANS ('/* IDENTIFY ENTRY-POINT SYMBOL */')
                   COL(37);                                /*@Y30SSDW*/
             END;
           IF IGGGVCCT = '1' THEN
             DO;                                          /* @Y30SSDW*/
               ANS ('GEN(DROP @15);') SKIP COL(12);       /* @Y30SSDW*/
               ANS ('/* DROP AVAILABLE BASE REGISTER */')
                   COL(37);                               /* @Y30SSDW*/
             END;                                         /* @Y30SSDW*/
           GOTO PP;
 PO:       ANS (PROCNAME ×× ':') SKIP COL(2);
           ANS ('PROC OPTIONS') COL(12);
           ANS ('(REENTRANT,NOSAVEAREA,NOSAVE,NOCODEREG,NODATAREG,
                  ID);') SKIP COL(18);
           IGGGVCCT = '1';              /*IND. OUTER PROC DEFINED   */
           ANS ('DECLARE IGGSEGBR REG(12) PTR(31) RSTD;') SKIP COL(12);
           ANS ('/* MODULE BASE REGISTER     */') COL(41);
           IF IGGBASE2 ^= '' THEN   /* BASE REG 2 SPECIFIED? @ZA95164*/
             DO;                    /* YES                   @ZA95164*/
               ANS('DECLARE IGGSEGB2 REG('××IGGBASE2××')PTR(31)RSTD;')
               SKIP COL(12);        /* GEN 2ND BASE DECLARE  @ZA95164*/
               ANS('/* BASE 2 REGISTER */') COL(41);       /*@ZA95164*/
             END;                   /*                       @ZA95164*/
           ELSE;                    /*                       @ZA95164*/
 PP:       ANS ('Z' ×× MACINDEX(2:4) ×× ':') SKIP COL(2);  /*@Y30SSPJ*/
           ANS ('/* LABEL FOR PROCEDURE TRACKING  */')
               COL(37);                                   /* @Y30SSDW*/
           ANS ('Z' ×× MACINDEX(2:4) ×× PROCNAME(5:LENGTH(PROCNAME))
              ×× ':') SKIP COL(2);
           ANS ('/* LABEL FOR PROCEDURE TRACKING  */')
               COL(37);                                   /* @Y30SSDW*/
           ANS ('RFY ('××RX5××RX6××RX7××RX8××RX9××RX10××') UNRSTD;')
             SKIP COL(12);          /*                       @ZA95164*/
           ANS ( '/* PL/S COMPILER WORK REGISTERS */')
              COL(37);                                    /* @Y30SSDW*/
           ANS ('RFY (R2,R3,R4) RSTD;') SKIP COL(12);
           ANS ('/* RESTRICT LOCAL WORK REGISTERS */')
              COL(37);                                    /* @Y30SSDW*/
           IF NUSW = 'NES' THEN         /*TYPE = NESTED             */
             DO;
               ANS ('GEN(STM 12,14,12(13));') SKIP COL(12);
               ANS ('/* SAVE REGISTERS OF CALLER */') COL(41);
               ANS ('GEN(LA 13,12(13));') SKIP COL(12);
               ANS ('/* POINT TO NEXT SAVE AREA  */') COL(41);
             END;
           IF IESW = 'EXT' THEN         /*EXTERNALLY CALLED         */
             DO;
               ANS ('GEN(BALR 12,0);') SKIP COL(12);
               ANS ('/* ESTABLISH ADDRESSABILITY */') COL(41);
             END;
           IF IGGGVCCT = '1' THEN       /*FIRST PROC                */
             IF IESW = 'EXT' THEN       /*EXTERNALLY CALLED @ZA95164*/
             DO;
               ANS ('IGGSEGST: GEN(DS 0H);') SKIP COL(2);
               ANS ('/* HALFWORD BOUNDARY ALIGNMENT  */')
                   COL(37);                               /* @Y30SSDW*/
               ANS ('GEN(USING *,12);') SKIP COL(12);
               ANS ('/* INDICATE AVAILABLE BASE REG */')
                   COL(37);                               /* @Y30SSDW*/
               IF IGGBASE2 ^= '' THEN/*BASE REG 2 SPECIFIED? @ZA95164*/
                 DO;                /* YES                   @ZA95164*/
                   ANS ('GEN(USING *+4095,'××IGGBASE2××');')
                     SKIP COL(12);  /*GEN USING FOR 2ND BASE @ZA95164*/
                   ANS('/* INDICATE AVAILABLE BASE REGS */') COL(37);
                   ANS('GEN(LA '××IGGBASE2××',4095(0,12));') COL(37);
                   ANS('/* LOAD BAS 2 REG */') COL(37);/*    @ZA95164*/
                 END;               /*                       @ZA95164*/
               ELSE;                /*                       @ZA95164*/
 PQ:           IGGGVCCT = CBSW ;        /*IND. OUTER OR INNER PROC  */
               RETURN;
             END;
           ELSE                     /* INTERNALLY CALLED     @ZA95164*/
             GOTO PQ;               /* ALL FINISHED          @ZA95164*/
           IF IESW = 'EXT' THEN         /*EXTERNALLY CALLED         */
            DO;                     /* YES                   @ZA29164*/
            IF IGGFPINT='1' THEN    /* FIRST PROC INTERNAL   @ZA29164*/
             BEGLABEL='@MAINENT';   /* SET LABEL             @ZA29164*/
            ELSE                    /* FIRST PROC EXTERNAL   @ZA29164*/
             BEGLABEL='IGGSEGST';   /* SET LABEL             @ZA29164*/
             IF IGGBASE2 = '' THEN  /*EXTERNALLY CALLED?     @ZA95164*/
               DO;                  /* NO, ONLY 1 BASE REG   @ZA95164*/
                 ANS ('GEN(LA 15,*-'××BEGLABEL××'(0,0));')
                   SKIP COL(12);    /*                       @ZA95164*/
                 ANS ('/* COMPUTE MODULE BASE      */')
                   COL(41);         /*                       @ZA95164*/
                 ANS ('GEN(SR 12,15);') SKIP COL(12);      /*@ZA95164*/
                 ANS ('/* SET BASE TO MODULE BASE  */')
                   COL(41);         /*                       @ZA95164*/
               END;                                        /*@ZA95164*/
             ELSE                   /* YES,BASE 2 REG SPEC   @ZA95164*/
               DO;                  /*                       @ZA95164*/
                 ANS ('GEN(USING *,12);') SKIP COL(12);/*    @ZA95164*/
                 ANS ('/* INDICATE AVAILABLE BASE REG */')
                   COL(37);         /*                       @ZA95164*/
                 ANS('GEN(B *+6);') SKIP COL(12); /*         @ZA95164*/
               ANS('/* BRANCH AROUND CONSTANT */')COL(37); /*@ZA95164*/
                 ANS('GEN(DC AL2(*-'××BEGLABEL××'-4));')  /* @ZA95164*/
                   COL(12);         /*                       @ZA29164*/
                ANS('/* OFFSET TO MODULE BASE 1*/')COL(37);/*@ZA95164*/
                 ANS('GEN(SH 12,*-2);') COL(12);           /*@ZA95164*/
                 ANS('/* COMPUTE MODULE BASE 1 */')COL(37);/*@ZA95164*/
                 ANS('GEN(LA '××IGGBASE2××',4095(0,12));')
                   COL(12);         /*                       @ZA95164*/
             ANS('/* LOAD BASE 2 REG WITH 4095 */')COL(37);/*@ZA95164*/
               ANS('GEN(USING '××BEGLABEL××',12);') SKIP   /*@ZA95164*/
                   COL(12);         /*                       @ZA29164*/
                 ANS('/* INDICATE AVAILABLE BASE REG1 */')
                 COL(41);           /*                       @ZA95164*/
                 ANS('GEN(USING '××BEGLABEL××'+4095,'××IGGBASE2××');')
                   SKIP COL(12);    /*                       @ZA95164*/
                 ANS('/* INDICATE AVAILABLE BASE REG2 */')
                   COL(37);         /*                       @ZA95164*/
               END;                 /*                       @ZA95164*/
           IGGGVCCT = '3' ;             /*IND. NOT 1ST INNER PROC   */
          END;                      /*                       @ZA29164*/
 % END ;
