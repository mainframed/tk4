         TITLE 'ISTZBF0B/A0B-VS1/M0B-VS2 - LCCW/BTU TRANSLATION CONTROL*
               LLER     '
ISTZBF0B CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTZBF0B  77.356'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
*                                                                  0499
*/****************************************************************** */
*/* LCCW/BTU TRANSLATION RECEIVES CONTROL FROM THE REMOTE DEVICE     */
*/* SCHEDULER. IT MONITERS THE TRANSLATION OF A LCPB INTO ONE OR MORE*/
*/* BTU'S. TRANSLATION IS STOPPED WHEN THE SCHEDULING LIMIT IS       */
*/* REACHED, IF I/O SCHEDULING IS TO BE SUSPENDED , IF AN ERROR HAS  */
*/* BEEN FOUND, OR IF THE LCP HAS BEEN COMPLETELY PROCESSED. LCCU/BTU*/
*/* TRANSLATION CONTROLLER REQUESTS AND ANALYZES LSCB'S USED FOR     */
*/* MULTI-LCCW LCP'S. EACH LCCW COMMAND  CODE IS TRANSLATED INTO     */
*/* A CALL TO A MODULE TO PROCESS THAT TYPE OF LCCW.                 */
*/*                                                                  */
*/****************************************************************** */
*/* TPZSAVE (7,12,14) BASE AC(BC0B)                                  */
*                                                                  0499
*   DO;                                                            0499
*     RFY                                                          0500
*      (GPR01P,                                                    0500
*       GPR12P,                                                    0500
*       GPR13P,                                                    0500
*       GPR14P) RSTD;                                              0500
*     GEN(PRINT OFF);                                              0501
*                                                                  0501
         PRINT OFF
*/* ATBUILD (ISTZSAVE)                                               */
*/* END OF ATBUILD                                                   */
*                                                                  0502
*     GEN(PRINT ON);                                               0502
         PRINT ON
*     RFY                                                          0503
*       ISTZSAVE BASED(GPR13P);                                    0503
*     GEN SETS(ZSAZSVVR)(STM   7,12,ZSAZSVVR+0(13));               0504
         STM   7,12,ZSAZSVVR+0(13)
*     GEN SETS(GPR12P);                                            0505
         BALR  GPR12P,0
@TSTART  DS    0H
         USING @TSTART,GPR12P
*     GEN(PRINT OFF);                                              0506
*                                                                  0506
         PRINT OFF
*/* ATBUILD (ISTZCRR,ISTRPH,ISTCRA) EJECT(NO)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0507
*     GEN(PRINT ON);                                               0507
         PRINT ON
*     GPR01P->RPHCRR->CRACRR->ZCREBC0B='1'B;                       0508
         L     @11,RPHCRR(,GPR01P)                                 0508
         L     @11,CRACRR(,@11)                                    0508
         OI    ZCREBC0B(@11),B'00000100'                           0508
*     ZSAZACTV='1'B;                                               0509
         OI    ZSAZACTV(GPR13P),B'10000000'                        0509
*     ZSAZTRAC='BC0B';                                             0510
         MVC   ZSAZTRAC(4,GPR13P),@CC04525                         0510
*     ZSAZSVRR=GPR14P;                                             0511
         ST    GPR14P,ZSAZSVRR(,GPR13P)                            0511
*     GPR13P=ZSAZSVFC;                                             0512
         L     GPR13P,ZSAZSVFC(,GPR13P)                            0512
*     RFY                                                          0513
*      (GPR01P) UNRSTD;                                            0513
*     RFY                                                          0514
*      (GPR14P) UNRSTD;                                            0514
*   END;                                                           0515
*                                                                  0515
*/* END TPZSAVE                                                      */
*/* SEGMENT(BF0B010)REQUEST                                          */
*                                                                  0516
*   DO;                                                            0516
*     GOTO BF0B010;                                                0517
         B     BF0B010                                             0517
*BF0B010#:                                                         0518
*   END;                            /* INITIALIZATION                */
BF0B010# DS    0H                                                  0519
*/* SEGMENT(BF0B020)REQUEST                                          */
*                                                                  0519
*   DO;                                                            0519
*     GOTO BF0B020;                                                0520
         B     BF0B020                                             0520
*BF0B020#:                                                         0521
*   END;                            /* TEST FOR SLOWDOWN             */
BF0B020# DS    0H                                                  0522
*F0BWH1:                                                           0522
*   DO WHILE(ZCRENDX='0'B);                                        0522
*                                                                  0522
F0BWH1   B     @DE00522                                            0522
@DL00522 DS    0H                                                  0523
*     /***************************************************************/
*     /*                                                             */
*     /* SEGMENT(BF0B025)REQUEST                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0523
*     DO;                                                          0523
*       GOTO BF0B025;                                              0524
         B     BF0B025                                             0524
*BF0B025#:                                                         0525
*     END;                          /* TEST FOR GEN. POLL            */
BF0B025# DS    0H                                                  0526
*     IF FMCZF002='1'B              /* IF SCHEDULING TO BE SUSPENDED */
*         &ZCRSHEDI='0'B THEN                                      0526
         TM    FMCZF002(FMCBREG),B'01000000'                       0526
         BNO   @RF00526                                            0526
         TM    ZCRSHEDI(ZCRREG),B'01000000'                        0526
         BNZ   @RF00526                                            0526
*       ZCRENDX='1'B;               /* SET EXIT SWITCH               */
         OI    ZCRENDX(ZCRREG),B'00001000'                         0527
*     ELSE                                                         0528
*F0BDO10:                                                          0528
*       DO;                         /* SCHEDULING NOT SUSPENDED      */
*                                                                  0528
         B     @RC00526                                            0528
@RF00526 DS    0H                                                  0528
F0BDO10  DS    0H                                                  0529
*         /***********************************************************/
*         /*                                                         */
*         /* GET ANY NEEDED BUFFER AND LSCB SEGMENT(BF0B030)REQUEST  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0529
*         DO;                                                      0529
*           GOTO BF0B030;                                          0530
         B     BF0B030                                             0530
*BF0B030#:                                                         0531
*         END;                                                     0531
BF0B030# DS    0H                                                  0532
*         IF ZCRCRLCP->LCPZRT00=ON×ZCRCRLCP->LCPZRT01=ON THEN/* ANY
*                                      ERROR?                @XM03HDP*/
         L     @14,ZCRCRLCP(,ZCRREG)                               0532
         TM    LCPZRT00(@14),B'11000000'                           0532
         BZ    @RF00532                                            0532
*           DO;                     /* IF SO..               @XM03HDP*/
*             LCPBREG=ZCRCRLCP;     /* INVALID LCP           @XM03HDP*/
         LR    LCPBREG,@14                                         0534
*             CALL ISTZBFZ0;        /* RECOVERY              @XM03HDP*/
         L     @14,ATCZPSVT(,VTCVTREG)                             0535
         L     @15,ZPSZBFZ0(,@14)                                  0535
         BALR  @14,@15                                             0535
*             ZCRENDX=ON;           /* EXIT SWITCH           @XM03HDP*/
         OI    ZCRENDX(ZCRREG),B'00001000'                         0536
*           END;                    /*                       @XM03HDP*/
*         ELSE                      /* NO ERROR              @XM03HDP*/
*           IF ZCRENDX='1'B THEN                                   0538
         B     @RC00532                                            0538
@RF00532 TM    ZCRENDX(ZCRREG),B'00001000'                         0538
         BO    @RT00538                                            0538
*             ;                     /* IF EXIT FLAG ON, EXIT  @X03HDP*/
*           ELSE                    /* NO EXIT                @X03HDP*/
*                                                                  0540
*             /*******************************************************/
*             /*                                                     */
*             /* SEGMENT(BF0B040)REQUEST                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0540
*             DO;                                                  0540
*               GOTO BF0B040;                                      0541
         B     BF0B040                                             0541
*BF0B040#:                                                         0542
*             END;                                                 0542
BF0B040# DS    0H                                                  0543
*       END F0BDO10;                                               0543
@RT00538 DS    0H                                                  0543
@RC00532 DS    0H                                                  0544
*   END F0BWH1;                                                    0544
*                                                                  0544
@RC00526 DS    0H                                                  0544
@DE00522 TM    ZCRENDX(ZCRREG),B'00001000'                         0544
         BZ    @DL00522                                            0544
*/* TPZRETN                                                          */
*                                                                  0545
*   DO;                                                            0545
*     RFY                                                          0546
*      (GPR07P,                                                    0546
*       GPR14P,                                                    0546
*       GPR15P) RSTD;                                              0546
*     GPR13P=ZSAZSVBC;                                             0547
         L     GPR13P,ZSAZSVBC(,GPR13P)                            0547
*     IF GPR13P=0 THEN                                             0548
         LTR   GPR13P,GPR13P                                       0548
         BZ    @RT00548                                            0548
*       ;                           /* TPDVTS ISTZFARR               */
*     ELSE                                                         0550
*       GPR14P=ZSAZSVRR;                                           0550
         L     GPR14P,ZSAZSVRR(,GPR13P)                            0550
*     GEN REFS(ZSAZSVVR)(LM    7,12,ZSAZSVVR+0(13));               0551
@RT00548 DS    0H                                                  0551
         LM    7,12,ZSAZSVVR+0(13)
*     GEN REFS(GPR14P) EXIT NOSEQFLOW(BR    GPR14P);               0552
         BR    GPR14P
*     RFY                                                          0553
*      (GPR07P,                                                    0553
*       GPR14P,                                                    0553
*       GPR15P) UNRSTD;                                            0553
*   END;                                                           0554
*                                                                  0554
*/* END TPZRETN                                                      */
*                                                                  0555
*   GEN(EJECT);                                                    0555
         EJECT
*                                                                  0556
*/* SEGMENT(BF0B010)START                                            */
*                                                                  0556
*   DO;                                                            0556
*     GOTO BF0B010@;                                               0557
         B     BF0B010@                                            0557
*BF0B010:                                                          0558
*   END;                                                           0558
*                                                                  0558
BF0B010  DS    0H                                                  0559
*/*                                                                  */
*/* THIS  ROUTINE INITIALIZES VARIABLES USED BY THIS ROUTINE AND     */
*/* MODULES CALLED BY THIS ROUTINE.                                  */
*/*                                                                  */
*                                                                  0559
*   ZCRREG=CRACRR;                  /* ACRESS TPIOS CRR              */
         L     @14,RPHCRR(,RPHREG)                                 0559
         L     ZCRREG,CRACRR(,@14)                                 0559
*   ZCRENDX='0'B;                   /* INITIALIZE LOOP FLAG          */
         NI    ZCRENDX(ZCRREG),B'11110111'                         0560
*   LCPZRT00='0'B;                  /* INITIALIZE                    */
*   LCPZRT01='0'B;                  /* LCPB ERROR FLAGS              */
         NI    LCPZRT00(LCPBREG),B'00111111'                       0562
*   ZCRCRLCP=LCPBREG;               /* INITIALIZE ZCR LCPB POINTER   */
         ST    LCPBREG,ZCRCRLCP(,ZCRREG)                           0563
*/* CODE USED TO TEST FOR 3270 RECORD REMOVED FROM BF0B AND PLACED IN
*   AF0B FOR DCR 4142                                        @X50BHM2*/
*/* SEGMENT(BF0B010)FINISH                                           */
*                                                                  0564
*   DO;                                                            0564
*     GOTO BF0B010#;                                               0565
         B     BF0B010#                                            0565
*BF0B010@:                                                         0566
*   END;                                                           0566
BF0B010@ DS    0H                                                  0567
*   GEN(EJECT);                                                    0567
         EJECT
*                                                                  0568
*/* SEGMENT(BF0B020)START                                            */
*                                                                  0568
*   DO;                                                            0568
*     GOTO BF0B020@;                                               0569
         B     BF0B020@                                            0569
*BF0B020:                                                          0570
*   END;                                                           0570
*                                                                  0570
BF0B020  DS    0H                                                  0571
*/*                                                                  */
*/* IF THE NCP IN ANY 370X IN THE PATH TO THE DEVICE IS              */
*/* IN SLOWDOWN MODE THE RPH IS QUEUED TO THE SLOWDOWN               */
*/* PAB IN THE ICNCB, AND A WAIT IS ISSUED ON THAT RPH.              */
*/*                                                                  */
*                                                                  0571
*   WORK=ADDR(ISTICNCB);            /* ADDRESS CURRENT ICNCB @XL03HDP*/
         LR    WORK,ICNCBREG                                       0571
*   DO WHILE(WORK^=0);              /* AS LONG AS THERE IS AN ICNCB
*                                                            @XL03HDP*/
         B     @DE00572                                            0572
@DL00572 DS    0H                                                  0573
*     RFY                                                          0573
*       ISTICNCB BASED(WORK);       /* ADDRESS THIS ICNCB    @XL03HDP*/
*     IF ICNSLOW='1'B               /* IS NCP IN SLOWDOWN MODE?      */
*         &LCPINTER=OFF             /* AND INTERNAL LCPB     @ZA16221*/
*         &NCBCONF=OFF&FMCCONF=OFF  /* AND NOT SICK          @ZA27036*/
*       THEN                        /* YES                           */
         TM    ICNSLOW(WORK),B'00001000'                           0574
         BNO   @RF00574                                            0574
         TM    LCPINTER(LCPBREG),B'01000000'                       0574
         BNZ   @RF00574                                            0574
         TM    NCBCONF(DNCBREG),B'01000000'                        0574
         BNZ   @RF00574                                            0574
         TM    FMCCONF(FMCBREG),B'00000001'                        0574
         BNZ   @RF00574                                            0574
*       DO;                                                        0575
*         FMCZF003='1'B;            /* TPIOS WAIT FLAG               */
         OI    FMCZF003(FMCBREG),B'00100000'                       0576
*/*  TPQUE (RPHREG,ICNZPAB1)                                         */
*                                                                  0577
*         DO;                                                      0577
*           RFY                                                    0578
*            (GPR00P,                                              0578
*             GPR01P,                                              0578
*             GPR02P,                                              0578
*             GPR14P,                                              0578
*             GPR15P) RSTD;                                        0578
*           GEN REFS(GPR01P) SETS(RPHWORK)                         0579
*               (STM GPR02P,GPR08P,RPHWORK(GPR01P));               0579
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*           GPR15P=RPHREG;          /* GET WORK ELEM POINTER         */
         LR    GPR15P,RPHREG                                       0580
*           GPR14P=ADDR(ICNZPAB1);  /* ADDRESS PAB/QUEUE POINTER     */
         LA    GPR14P,ICNZPAB1(,WORK)                              0581
*           GPR15P=GPR15P×PABWEQG1;                                0582
         O     GPR15P,@CF01281                                     0582
*           GPR02P=GPR14P->PABWEQA; /* INITIALIZE WITH QUEUE HEADER  */
         L     GPR02P,PABWEQA(,GPR14P)                             0583
*CMZA0027:                                                         0584
*           ;                       /* CS FAIL TARGET                */
CMZA0027 DS    0H                                                  0585
*           GPR00P=GPR02P;          /* SAVE QUEUE CONTENTS           */
         LR    GPR00P,GPR02P                                       0585
*           GPR15P->PABCHAIN=GPR02P×PABWEQG1;/* FORWARD CHAIN WORK 0586
*                                      ELEMENT                       */
         LR    @11,GPR02P                                          0586
         O     @11,@CF01281                                        0586
         ST    @11,PABCHAIN(,GPR15P)                               0586
*           CS(GPR02P,GPR15P,GPR14P->PABWEQA);/* CHECK FOR END OF  0587
*                                      QUEUE                         */
         CS    GPR02P,@15,PABWEQA(GPR14P)                          0587
*           BC(7,CMZA0027);                                        0588
         BC    7,CMZA0027                                          0588
*           GEN REFS(RPHWORK,GPR01P) NOSETS                        0589
*               (LM    GPR02P,GPR08P,RPHWORK(GPR01P));             0589
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*           RFY                                                    0590
*            (GPR00P,                                              0590
*             GPR01P,                                              0590
*             GPR02P,                                              0590
*             GPR14P,                                              0590
*             GPR15P) UNRSTD;                                      0590
*         END;                      /* *** END OF TPQUE GENERATION 0591
*                                      QUE RPH TO SLOWDOWN PAB WAIT
*                                      FOR SLOWDOWN COMPLETION       */
*/*  TPWAIT (RPHREG,VTCVTREG,ICNCBREG,DNCBREG,FMCBREG,BFRREG,LCPBREG,ZC
*REG,R12,R13)                                                        */
*                                                                  0592
*         DO;                       /* BEGIN TPWAIT GENERATION       */
*           RFY                                                    0593
*            (GPR01P,                                              0593
*             GPR14P,                                              0593
*             GPR15P) RSTD;                                        0593
*           RFY                                                    0594
*            (GPR00P) RSTD;                                        0594
*           GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))               0595
*           REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);              0595
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    0596
*            (GPR00P) UNRSTD;                                      0596
*           GPR15P=ADDR(LHAA0033);                                 0597
         LA    GPR15P,LHAA0033                                     0597
*           GPR14P=0;                                              0598
         SLR   GPR14P,GPR14P                                       0598
*           GPR15P=GPR15P&'00FFFFFF'X;                             0599
         N     GPR15P,@CF04556                                     0599
*           GPR15P=GPR15P×RPHWT1;                                  0600
         O     GPR15P,@CF01305                                     0600
*           CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                    0601
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0601
*           BC(7,LHAB0033);                                        0602
*                                                                  0602
         BC    7,LHAB0033                                          0602
*/* TPEXIT  NONE                                                     */
*                                                                  0603
*           DO;                                                    0603
*             RESPECIFY                                            0604
*               GPR15P RSTD;                                       0604
*                                                                  0604
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0605
*             DO;                   /* LISATCVT                    0605
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0606
*             END;                  /* LISATCVT                      */
*             RESPECIFY                                            0608
*               GPR00F RSTD;                                       0608
*             GPR00F=0;             /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       0609
*             GPR15P=GPR15P->ATCAP31;                              0610
         L     GPR15P,ATCAP31(,GPR15P)                             0610
*             DCL                                                  0611
*               FMZL0038 BASED(GPR15P) LABEL VALUERANGE(*);        0611
*             CALL FMZL0038;                                       0612
         BALR  @14,@15                                             0612
*             RESPECIFY                                            0613
*              (GPR00F,                                            0613
*               GPR15P) UNRSTD;                                    0613
*           END;                    /* **** END OF TPEXIT            */
*LHAB0033:                                                         0615
*           ;                                                      0615
LHAB0033 DS    0H                                                  0616
*           GPR01P->RPHRESMA=0;                                    0616
         SLR   @11,@11                                             0616
         ST    @11,RPHRESMA(,GPR01P)                               0616
*           RFY                                                    0617
*            (GPR00P) RSTD;                                        0617
*LHAA0033:                                                         0618
*           ;                                                      0618
LHAA0033 DS    0H                                                  0619
*           GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))               0619
*           REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);              0619
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    0620
*            (GPR00P,                                              0620
*             GPR01P,                                              0620
*             GPR14P,                                              0620
*             GPR15P) UNRSTD;                                      0620
*         END;                      /* ****END OF TPWAIT             */
*         FMCZF003='0'B;            /* TURN OFF WAIT FLAG            */
         NI    FMCZF003(FMCBREG),B'11011111'                       0622
*       END;                                                       0623
*     ELSE                                                         0624
*       ;                           /* NO, NCP NOT IN SLOWDOWN       */
@RF00574 DS    0H                                                  0625
*     WORK=ADDR(ICNCB)->NCBNSNA;    /* ADDRESS NEXT ICNCB    @XL03HDP*/
         L     WORK,NCBNSNA(,WORK)                                 0625
*   END;                            /* END OF DO WHILE       @XL03HDP*/
@DE00572 LTR   WORK,WORK                                           0626
         BNZ   @DL00572                                            0626
*   RFY                                                            0627
*     ISTICNCB BASED(ICNCBREG);     /* POINT BACK TO ORIGINAL ICNCB
*                                                            @XL03HDP*/
*/* SEGMENT(BF0B020)FINISH                                           */
*                                                                  0628
*   DO;                                                            0628
*     GOTO BF0B020#;                                               0629
         B     BF0B020#                                            0629
*BF0B020@:                                                         0630
*   END;                                                           0630
BF0B020@ DS    0H                                                  0631
*   GEN(EJECT);                                                    0631
         EJECT
*                                                                  0632
*/* SEGMENT(BF0B030)START                                            */
*                                                                  0632
*   DO;                                                            0632
*     GOTO BF0B030@;                                               0633
         B     BF0B030@                                            0633
*BF0B030:                                                          0634
*   END;                                                           0634
*                                                                  0634
BF0B030  DS    0H                                                  0635
*/*                                                                  */
*/* IF BTU ALLOCATION IS REQUIRED, THIS ROUTINE WILL GET IT VIA      */
*/* THE TRIOSBUFFER ALLOCATION ROUTINE, DETERMINE  WHETHER REG 7     */
*/* POINTS TO A LCPB OR A LSCB AND PUT POINTERS IN APPROPRIATE FIELDS*/
*/*                                                                  */
*                                                                  0635
*   IF FMCZF001='0'B                /* IF BTU ALLOCATION NOT REQUIRED*/
*     THEN                                                         0635
         TM    FMCZF001(FMCBREG),B'10000000'                       0635
         BZ    @RT00635                                            0635
*     ;                             /* THEN EXIT                     */
*   ELSE                                                           0637
*DO3:                                                              0637
*     DO;                                                          0637
DO3      DS    0H                                                  0638
*       CALL ISTZBFMB;              /* LCCW/LCPB ANALYSIS            */
         L     @14,ATCZPSVT(,VTCVTREG)                             0638
         L     @15,ZPSZBFMB(,@14)                                  0638
         BALR  @14,@15                                             0638
*       IF(ZCRCRLCP->LCPZRT00='1'B)×(ZCRCRLCP->LCPZRT01='1'B)/* WAS
*                                      THERE AN ERROR ?              */
*         THEN                                                     0639
         L     @14,ZCRCRLCP(,ZCRREG)                               0639
         TM    LCPZRT00(@14),B'11000000'                           0639
         BZ    @RF00639                                            0639
*         IF ZCR3270R=ON&           /* RECORD 3270 ..        @XM03HDP*/
*             ZCRLCSYN=ON THEN                                     0640
         TM    ZCR3270R(ZCRREG),B'00000010'                        0640
         BNO   @RF00640                                            0640
         TM    ZCRLCSYN(ZCRREG),B'00010000'                        0640
         BO    @RT00640                                            0640
*           ;                       /* AND LCCW SYNCH ?      @XM03HDP*/
*         ELSE                      /* NOT 3270 REC W/SYNCH  @XM03HDP*/
*           ZCRENDX=ON;             /* SET EXIT SWITCH       @XM03HDP*/
@RF00640 OI    ZCRENDX(ZCRREG),B'00001000'                         0642
*       ELSE                        /* IF NOT AN ERROR               */
*DO2:                                                              0643
*         DO;                                                      0643
         B     @RC00639                                            0643
@RF00639 DS    0H                                                  0643
DO2      DS    0H                                                  0644
*           IF ZCRSHEDI='1'B THEN                                  0644
         TM    ZCRSHEDI(ZCRREG),B'01000000'                        0644
         BO    @RT00644                                            0644
*             ;                                                    0645
*                                                                  0645
*           /*********************************************************/
*           /*                                                       */
*           /* IF IMMENDIATE SCHEDULING REQ.                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0646
*           ELSE                    /* SCHEDULE DIALOG IF POSSIBLE   */
*                                                                  0646
*             /*******************************************************/
*             /*                                                     */
*             /* SEGMENT(BF0B015)REQUEST                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0646
*             DO;                                                  0646
*               GOTO BF0B015;                                      0647
         B     BF0B015                                             0647
*BF0B015#:                                                         0648
*             END;                                                 0648
BF0B015# DS    0H                                                  0649
*         END DO2;                  /*                       @XM03HDP*/
@RT00644 DS    0H                                                  0650
*       IF ZCRENDX='1'B THEN                                       0650
@RC00639 TM    ZCRENDX(ZCRREG),B'00001000'                         0650
         BO    @RT00650                                            0650
*         ;                         /* EXIT IF ERROR FOUND           */
*       ELSE                                                       0652
*DO1:                                                              0652
*         DO;                                                      0652
DO1      DS    0H                                                  0653
*           IF LCCWCTL=LRESET       /* RESET OPERATION ?             */
*               ×ZCRCRLCP->LCPZF004='0'B                           0653
*                                                                  0653
*           /*********************************************************/
*           /*                                                       */
*           /* OR NOT LAST LCCW                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0653
*               ×(ZCR3270R='1'B&ZCRLCSYN='1'B)/* OR 3270 DEVICE IN 0653
*                                      RECORD MODE WITH LCCW SYNCH 0653
*                                      SPECIFIED?            @XM03HDP*/
*             THEN                                                 0653
         L     @14,LCPNXLCW(,LCPBREG)                              0653
         TM    LCCWCTL(@14),B'00001011'                            0653
         BNO   @GL00007                                            0653
         TM    LCCWCTL(@14),B'00000100'                            0653
         BZ    @RT00653                                            0653
@GL00007 L     @14,ZCRCRLCP(,ZCRREG)                               0653
         TM    LCPZF004(@14),B'00000100'                           0653
         BZ    @RT00653                                            0653
         TM    ZCR3270R(ZCRREG),B'00000010'                        0653
         BNO   @RF00653                                            0653
         TM    ZCRLCSYN(ZCRREG),B'00010000'                        0653
         BNO   @RF00653                                            0653
@RT00653 DS    0H                                                  0654
*             DO;                                                  0654
*               IF ZCR3270R='1'B&ZCRLCSYN='1'B THEN/* IF 3270R W/  0655
*                                      LCCW SYNCH            @XM03HDP*/
         TM    ZCR3270R(ZCRREG),B'00000010'                        0655
         BNO   @RF00655                                            0655
         TM    ZCRLCSYN(ZCRREG),B'00010000'                        0655
         BNO   @RF00655                                            0655
*/* TPDEQ (LCPBREG,FMCPAB3) RESET(YES)                               */
*                                                                  0656
*                 DO;               /* BEGIN TPDEQ CODE GENERATION   */
*                   DCL                                            0657
*                     FMZCA051 BIT(32) CONSTANT('80000000'X);      0657
*                   DCL                                            0658
*                     FMZCB051 BIT(32) CONSTANT('7FFFFFFF'X);      0658
*                   RFY                                            0659
*                    (GPR00P,                                      0659
*                     GPR01P,                                      0659
*                     GPR14P,                                      0659
*                     GPR15P) RSTD;                                0659
*                   RFY                                            0660
*                     ISTWKE;                                      0660
*                   GPR15P=ADDR(FMCPAB3);/* ADDRESS QUEUE POINTER    */
         LA    GPR15P,FMCPAB3(,FMCBREG)                            0661
*                   RFY                                            0662
*                    (GPR02P,                                      0662
*                     GPR03P) RSTD;                                0662
*                   STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));      0663
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0663
*                   GPR03P=LCPBREG×FMZCA051;                       0664
         L     @11,@CF01281                                        0664
         LR    GPR03P,LCPBREG                                      0664
         OR    GPR03P,@11                                          0664
*                   GPR14P=FMZCA051;                               0665
         LR    GPR14P,@11                                          0665
*                   GPR15P=ADDR(GPR15P->PABWEQA);                  0666
*FMZL1051:                                                         0667
*                   ;                                              0667
FMZL1051 DS    0H                                                  0668
*                   GPR02P=GPR15P->PABWEQA×FMZCA051;               0668
         L     GPR02P,PABWEQA(,GPR15P)                             0668
         O     GPR02P,@CF01281                                     0668
*                   DO WHILE(GPR02P^=GPR14P);                      0669
         B     @DE00669                                            0669
@DL00669 DS    0H                                                  0670
*FMZL2051:                                                         0670
*                     ;                                            0670
FMZL2051 DS    0H                                                  0671
*                     IF GPR02P=GPR03P THEN                        0671
         CR    GPR02P,GPR03P                                       0671
         BNE   @RF00671                                            0671
*                       DO;                                        0672
*                         GPR00P=GPR02P->WKECHAIN;                 0673
         L     GPR00P,WKECHAIN(,GPR02P)                            0673
*                         CS(GPR02P,GPR00P,GPR15P->PABWEQA);       0674
         CS    GPR02P,@00,PABWEQA(GPR15P)                          0674
*                         BC(7,FMZL3051);                          0675
         BC    7,FMZL3051                                          0675
*                         GPR14P=GPR02P;                           0676
         LR    GPR14P,GPR02P                                       0676
*                         GPR14P->WKECHAIN=0;                      0677
         SLR   @11,@11                                             0677
         ST    @11,WKECHAIN(,GPR14P)                               0677
*                       END;                                       0678
*                     ELSE                                         0679
*                       DO;                                        0679
         B     @RC00671                                            0679
@RF00671 DS    0H                                                  0680
*                         IF(GPR02P->WKECHAIN)=GPR14P THEN         0680
         C     GPR14P,WKECHAIN(,GPR02P)                            0680
         BNE   @RF00680                                            0680
*                           DO;                                    0681
*                             IF GPR02P->FSBTYPE=FSTYPE THEN       0682
         CLI   FSBTYPE(GPR02P),X'02'                               0682
         BNE   @RF00682                                            0682
*                               DO;                                0683
*                                 GPR02P=GPR14P;                   0684
         LR    GPR02P,GPR14P                                       0684
*                                 GOTO FMZL3051;                   0685
         B     FMZL3051                                            0685
*                               END;                               0686
*                             GPR15P=ADDR(GPR02P->LCPRSTQH);       0687
@RF00682 LA    GPR15P,LCPRSTQH(,GPR02P)                            0687
*                             GOTO FMZL1051;                       0688
         B     FMZL1051                                            0688
*                           END;                                   0689
*                         ELSE                                     0690
*                           DO;                                    0690
@RF00680 DS    0H                                                  0691
*                             GPR15P=ADDR(GPR02P->WKECHAIN);       0691
         LA    GPR15P,WKECHAIN(,GPR02P)                            0691
*                             GPR02P=GPR02P->WKECHAIN;             0692
         L     GPR02P,WKECHAIN(,GPR02P)                            0692
*                             GOTO FMZL2051;                       0693
         B     FMZL2051                                            0693
*                           END;                                   0694
*                       END;                                       0695
*FMZL3051:                                                         0696
*                     ;                                            0696
@RC00671 DS    0H                                                  0696
FMZL3051 DS    0H                                                  0697
*                   END;                                           0697
@DE00669 CR    GPR02P,GPR14P                                       0697
         BNE   @DL00669                                            0697
*ISTA0051:                                                         0698
*                   ;                                              0698
ISTA0051 DS    0H                                                  0699
*                   LM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));       0699
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0699
*                   RFY                                            0700
*                    (GPR02P,                                      0700
*                     GPR03P) UNRSTD;                              0700
*                   GPR14P=GPR14P&FMZCB051;                        0701
         N     GPR14P,@CF01279                                     0701
*                   GPR01P->RPHWEA=GPR14P;                         0702
         ST    GPR14P,RPHWEA(,GPR01P)                              0702
*                   RFY                                            0703
*                    (GPR00P,                                      0703
*                     GPR01P,                                      0703
*                     GPR14P,                                      0703
*                     GPR15P) UNRSTD;                              0703
*                 END;              /* END TPDEQ GENERATION DEQUE  0704
*                                      LCPB FROM TOP         @XL03HDP*/
*               ELSE                                               0705
*                 ;                 /* DONT DO THAT          @XL03HDP*/
@RF00655 DS    0H                                                  0706
*               ZCRPCOD1='0'X;      /* INITIALIZE PARAMATER          */
         MVI   ZCRPCOD1(ZCRREG),X'00'                              0706
*               ZCRPLSBF='1'B;      /* PARM= GET LSCB + BUFFER       */
         OI    ZCRPLSBF(ZCRREG),B'00010000'                        0707
*               CALL ISTZDFA0;      /* GET BUFFER                    */
         L     @14,ATCZPSVT(,VTCVTREG)                             0708
         L     @15,ZPSZDFA0(,@14)                                  0708
         BALR  @14,@15                                             0708
*               LCPBREG=RPHSRPRM;   /* NEW LCPB/LSCB BASE            */
         L     LCPBREG,RPHSRPRM(,RPHREG)                           0709
*               BFRREG=LSCFDBA;     /* POINTER TO BUFFER FROM LSCB   */
         L     BFRREG,LSCFDBA(,LSCBREG)                            0710
*               LSCLCPBA=ZCRCRLCP;  /* LCPB POINTER IN LSCB          */
         L     @14,ZCRCRLCP(,ZCRREG)                               0711
         ST    @14,LSCLCPBA(,LSCBREG)                              0711
*               LSCLCCWA=ZCRCRLCP->LCPNXLCW;/* PUT LCCW ADDR IN LSCB */
         L     @11,LCPNXLCW(,@14)                                  0712
         ST    @11,LSCLCCWA(,LSCBREG)                              0712
*               LSCFLGS=ZCRCRLCP->LCPFLAG2;/* COPY FLAG      @XM03HDP*/
         MVC   LSCFLGS(1,LSCBREG),LCPFLAG2(@14)                    0713
*               LSCRUCNT=ZCRCRLCP->LCPMNRCD;/* COPY CLEAR REASON CODE
*                                                            @XM19013*/
         MVC   LSCRUCNT(1,LSCBREG),LCPMNRCD(@14)                   0714
*               IF LCCWCTL=LRESET   /* IF OPERATION A RESET          */
*                 THEN                                             0715
         L     @11,LCPNXLCW(,LCPBREG)                              0715
         TM    LCCWCTL(@11),B'00001011'                            0715
         BNO   @RF00715                                            0715
         TM    LCCWCTL(@11),B'00000100'                            0715
         BNZ   @RF00715                                            0715
*                 ZCRCRLCP->LCPSTYPE=LSRSTYPE;                     0716
         MVI   LCPSTYPE(@14),X'FF'                                 0716
*               ELSE                                               0717
*                 IF RPHPABOF=ATOP  /* CHOOSE CORRECT SCHED. Q       */
*                   THEN                                           0717
         B     @RC00715                                            0717
@RF00715 CLC   RPHPABOF(1,RPHREG),ATOP                             0717
         BNE   @RF00717                                            0717
*                   IF FMCCIPI='1'B×/* IF CLEAR OR           @XM03HDP*/
*                       FMCUIPI='1'B/* UNBIND IN PROG        @XM03HDP*/
*                     THEN                                         0718
         TM    FMCCIPI(FMCBREG),B'01100000'                        0718
         BNZ   @RT00718                                            0718
*                     ;             /* DON'T DEQUEUE                 */
*                   ELSE                                           0720
*                                                                  0720
*/*  TPQUE (LSCBREG,FMCSHEAQ)                                        */
*                                                                  0720
*                     DO;                                          0720
*                       RFY                                        0721
*                        (GPR00P,                                  0721
*                         GPR01P,                                  0721
*                         GPR02P,                                  0721
*                         GPR14P,                                  0721
*                         GPR15P) RSTD;                            0721
*                       GEN REFS(GPR01P) SETS(RPHWORK)             0722
*                           (STM GPR02P,GPR08P,RPHWORK(GPR01P));   0722
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*                       GPR15P=LSCBREG;/* GET WORK ELEM POINTER      */
         LR    GPR15P,LSCBREG                                      0723
*                       GPR14P=ADDR(FMCSHEAQ);/* ADDRESS PAB/QUEUE 0724
*                                      POINTER                       */
         LA    GPR14P,FMCSHEAQ(,FMCBREG)                           0724
*                       GPR15P=GPR15P×PABWEQG1;                    0725
         O     GPR15P,@CF01281                                     0725
*                       GPR02P=GPR14P->PABWEQA;/* INITIALIZE WITH  0726
*                                      QUEUE HEADER                  */
         L     GPR02P,PABWEQA(,GPR14P)                             0726
*CMZA0058:                                                         0727
*                       ;           /* CS FAIL TARGET                */
CMZA0058 DS    0H                                                  0728
*                       GPR00P=GPR02P;/* SAVE QUEUE CONTENTS         */
         LR    GPR00P,GPR02P                                       0728
*                       GPR15P->PABCHAIN=GPR02P×PABWEQG1;/* FORWARD
*                                      CHAIN WORK ELEMENT            */
         LR    @11,GPR02P                                          0729
         O     @11,@CF01281                                        0729
         ST    @11,PABCHAIN(,GPR15P)                               0729
*                       CS(GPR02P,GPR15P,GPR14P->PABWEQA);         0730
*                                                                  0730
         CS    GPR02P,@15,PABWEQA(GPR14P)                          0730
*/*  CHECK FOR END OF QUEUE                                          */
*                                                                  0731
*                       BC(7,CMZA0058);                            0731
         BC    7,CMZA0058                                          0731
*                       GEN REFS(RPHWORK,GPR01P) NOSETS            0732
*                           (LM    GPR02P,GPR08P,RPHWORK(GPR01P)); 0732
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*                       RFY                                        0733
*                        (GPR00P,                                  0733
*                         GPR01P,                                  0733
*                         GPR02P,                                  0733
*                         GPR14P,                                  0733
*                         GPR15P) UNRSTD;                          0733
*                     END;          /* *** END OF TPQUE GENERATION   */
*                 ELSE                                             0735
*                                                                  0735
*/*  TPQUE (LSCBREG,FMCSHEDQ)                                        */
*                                                                  0735
*                   DO;                                            0735
         B     @RC00717                                            0735
@RF00717 DS    0H                                                  0736
*                     RFY                                          0736
*                      (GPR00P,                                    0736
*                       GPR01P,                                    0736
*                       GPR02P,                                    0736
*                       GPR14P,                                    0736
*                       GPR15P) RSTD;                              0736
*                     GEN REFS(GPR01P) SETS(RPHWORK)               0737
*                         (STM GPR02P,GPR08P,RPHWORK(GPR01P));     0737
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*                     GPR15P=LSCBREG;/* GET WORK ELEM POINTER        */
         LR    GPR15P,LSCBREG                                      0738
*                     GPR14P=ADDR(FMCSHEDQ);/* ADDRESS PAB/QUEUE   0739
*                                      POINTER                       */
         LA    GPR14P,FMCSHEDQ(,FMCBREG)                           0739
*                     GPR15P=GPR15P×PABWEQG1;                      0740
         O     GPR15P,@CF01281                                     0740
*                     GPR02P=GPR14P->PABWEQA;/* INITIALIZE WITH QUEUE
*                                      HEADER                        */
         L     GPR02P,PABWEQA(,GPR14P)                             0741
*CMZA0064:                                                         0742
*                     ;             /* CS FAIL TARGET                */
CMZA0064 DS    0H                                                  0743
*                     GPR00P=GPR02P;/* SAVE QUEUE CONTENTS           */
         LR    GPR00P,GPR02P                                       0743
*                     GPR15P->PABCHAIN=GPR02P×PABWEQG1;/* FORWARD  0744
*                                      CHAIN WORK ELEMENT            */
         LR    @11,GPR02P                                          0744
         O     @11,@CF01281                                        0744
         ST    @11,PABCHAIN(,GPR15P)                               0744
*                     CS(GPR02P,GPR15P,GPR14P->PABWEQA);/* CHECK FOR
*                                      END OF QUEUE                  */
         CS    GPR02P,@15,PABWEQA(GPR14P)                          0745
*                     BC(7,CMZA0064);                              0746
         BC    7,CMZA0064                                          0746
*                     GEN REFS(RPHWORK,GPR01P) NOSETS              0747
*                         (LM    GPR02P,GPR08P,RPHWORK(GPR01P));   0747
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*                     RFY                                          0748
*                      (GPR00P,                                    0748
*                       GPR01P,                                    0748
*                       GPR02P,                                    0748
*                       GPR14P,                                    0748
*                       GPR15P) UNRSTD;                            0748
*                   END;            /* *** END OF TPQUE GENERATION   */
*                                                                  0749
*               /*****************************************************/
*               /*                                                   */
*               /* PUT NEW ELEMENT ON SCHEDULE Q                     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0750
*               ZOBLNG2=ZOBLNG1;    /* SAVE BUFFER LENGTH IN BUFFER  */
@RC00717 DS    0H                                                  0750
@RC00715 LH    @14,ZOBLNG1(,BFRREG)                                0750
         N     @14,@CF04731                                        0750
         STH   @14,ZOBLNG2(,BFRREG)                                0750
*               FMCZF001='0'B;      /* SET OFF BTU ALLOC REQ'D FLG   */
         NI    FMCZF001(FMCBREG),B'01111111'                       0751
*             END;                                                 0752
*           ELSE                                                   0753
*             DO;                                                  0753
         B     @RC00653                                            0753
@RF00653 DS    0H                                                  0754
*               R15=0;              /* INITIALIZE RETN CODE  @XM03HDP*/
         SLR   R15,R15                                             0754
*               ZCRQAHED='0'B;      /* INITIALIZE FLAG               */
         NI    ZCRQAHED(ZCRREG),B'01111111'                        0755
*               IF RPHPABOF=ATOP    /* IF SCHEDULED ON ATOP          */
*                 THEN                                             0756
         CLC   RPHPABOF(1,RPHREG),ATOP                             0756
         BNE   @RF00756                                            0756
*                 IF FMCCIPI='1'B×  /* IF CLEAR OR           @XM03HDP*/
*                     FMCUIPI='1'B  /* UNBIND IN PROG        @XM03HDP*/
*                   THEN                                           0757
         TM    FMCCIPI(FMCBREG),B'01100000'                        0757
         BNZ   @RT00757                                            0757
*                   ;               /* NO Q XFER             @XM03HDP*/
*                 ELSE                                             0759
*                   DO;             /* SET Q TRANSFER PARAMS         */
*                     R9=ADDR(FMCSHEAQ);/* XSFER TO ASY        SCHEDQ*/
         LA    R9,FMCSHEAQ(,FMCBREG)                               0760
*                     R8=ADDR(FMCPAB5);/* FROM ATOP                  */
         LA    R8,FMCPAB5(,FMCBREG)                                0761
*                     CALL ISTZDFH0;/* CALL QUEUE TRANSFER    @X03HDP*/
         L     @14,ATCZPSVT(,VTCVTREG)                             0762
         L     @15,ZPSZDFH0(,@14)                                  0762
         BALR  @14,@15                                             0762
*                   END;                                           0763
*               ELSE                                               0764
*                 DO;               /* SET Q TRANSFER PARAMS         */
         B     @RC00756                                            0764
@RF00756 DS    0H                                                  0765
*                   R9=ADDR(FMCSHEDQ);/* TRANSFER TO SCHEDQ          */
         LA    R9,FMCSHEDQ(,FMCBREG)                               0765
*                   R8=ADDR(FMCPAB3);/* FROM TOP                     */
         LA    R8,FMCPAB3(,FMCBREG)                                0766
*                   CALL ISTZDFH0;  /* CALL QUEUE TRANSFER    @X03HDP*/
         L     @14,ATCZPSVT(,VTCVTREG)                             0767
         L     @15,ZPSZDFH0(,@14)                                  0767
         BALR  @14,@15                                             0767
*                 END;                                             0768
*               ZCRREG=CRACRR;      /* RESTORE ZCR ADDRESSIBILITY    */
@RC00756 L     @14,RPHCRR(,RPHREG)                                 0769
         L     ZCRREG,CRACRR(,@14)                                 0769
*               IF R15=0 THEN       /* RC OK FROM Q XFER ?   @XM03HDP*/
         LTR   R15,R15                                             0770
         BNZ   @RF00770                                            0770
*                 DO;               /* YES                   @XM03HDP*/
*                   ZCRPCOD1=ZCPBUF;/* REQ FIXED BUFFER      @XM03HDP*/
         MVI   ZCRPCOD1(ZCRREG),X'04'                              0772
*                   CALL ISTZDFA0;  /* BFFR ALLOC            @XM03HDP*/
         L     @14,ATCZPSVT(,VTCVTREG)                             0773
         L     @15,ZPSZDFA0(,@14)                                  0773
         BALR  @14,@15                                             0773
*                   LCPBREG=ZCRCRLCP;/* ADDRESS LCPB         @XM03HDP*/
         L     LCPBREG,ZCRCRLCP(,ZCRREG)                           0774
*                   LCPFDBA=RPHSRPRM;/* LINK LCPB TO NEW BUFFER    0775
*                                                            @XM03HDP*/
         L     @14,RPHSRPRM(,RPHREG)                               0775
         ST    @14,LCPFDBA(,LCPBREG)                               0775
*                   BFRREG=RPHSRPRM;/* ADDRNEW BUFFER        @XM03HDP*/
         LR    BFRREG,@14                                          0776
*                   RPHSRPRM=0;     /* CLEAR REQSTOR FIELD   @XM03HDP*/
         SLR   @14,@14                                             0777
         ST    @14,RPHSRPRM(,RPHREG)                               0777
*                   ZOBLNG2=ZOBLNG1;/* SAVE BFFR LENGTH      @XM03HDP*/
         LH    @14,ZOBLNG1(,BFRREG)                                0778
         N     @14,@CF04731                                        0778
         STH   @14,ZOBLNG2(,BFRREG)                                0778
*                   FMCZF001=OFF;   /* NO BTU ALLOC REQD     @XM03HDP*/
         NI    FMCZF001(FMCBREG),B'01111111'                       0779
*                 END;              /*                       @XM03HDP*/
*               ELSE                /* RC FROM Q XFER NOT 0  @XM03HDP*/
*                 ZCRENDX=ON;       /* SET EXIT              @XM03HDP*/
         B     @RC00770                                            0781
@RF00770 OI    ZCRENDX(ZCRREG),B'00001000'                         0781
*             END;                                                 0782
@RC00770 DS    0H                                                  0783
*         END DO1;                                                 0783
@RC00653 DS    0H                                                  0784
*     END DO3;                                                     0784
*                                                                  0784
@RT00650 DS    0H                                                  0785
*/* SEGMENT(BF0B030)FINISH                                           */
*                                                                  0785
*   DO;                                                            0785
@RT00635 DS    0H                                                  0786
*     GOTO BF0B030#;                                               0786
         B     BF0B030#                                            0786
*BF0B030@:                                                         0787
*   END;                                                           0787
BF0B030@ DS    0H                                                  0788
*   GEN(EJECT);                                                    0788
         EJECT
*                                                                  0789
*/* SEGMENT(BF0B040)START                                            */
*                                                                  0789
*   DO;                                                            0789
*     GOTO BF0B040@;                                               0790
         B     BF0B040@                                            0790
*BF0B040:                                                          0791
*   END;                                                           0791
*                                                                  0791
BF0B040  DS    0H                                                  0792
*/*                                                                  */
*/* THIS MODULE WILL CALL THE APPROPRIATE LCCW COMMAND PROCESSOR     */
*/* DEPENDING ON THE LCCW COMMAND CODE AND CONTINUE PROCESSING       */
*/* FOR COMMAND OR DATA CHAINED LCCW'S.                              */
*/*                                                                  */
*                                                                  0792
*   ZCROPCDE=0;                     /* CLEAR 3270 CMND FIELD @XM03HDP*/
         MVI   ZCROPCDE(ZCRREG),X'00'                              0792
*   IF ZCR3270R='1'B&               /* 3270 IN RECORD MODE?  @XM03HDP*/
*       LCCWOP=LSEND THEN           /* AND SEND REQUEST?     @XM03HDP*/
         TM    ZCR3270R(ZCRREG),B'00000010'                        0793
         BNO   @RF00793                                            0793
         L     @14,LCPNXLCW(,LCPBREG)                              0793
         CLI   LCCWOP(@14),X'F1'                                   0793
         BNE   @RF00793                                            0793
*/*  SEGMENT(BF0B045)REQUEST                                         */
*                                                                  0794
*     DO;                                                          0794
*       GOTO BF0B045;                                              0795
         B     BF0B045                                             0795
*BF0B045#:                                                         0796
*     END;                          /* YES, GO PROCESS       @XL03HDP*/
*   ELSE                                                           0797
*     ;                             /* NO, DONT BOTHER       @XL03HDP*/
@RF00793 DS    0H                                                  0798
*   IF LCPZRT00='1'B                /* ANY ERRORS            @XL03HDP*/
*       ×LCPZRT01='1'B THEN         /* DETECTED ?            @XL03HDP*/
@RC00793 TM    LCPZRT00(LCPBREG),B'11000000'                       0798
         BZ    @RF00798                                            0798
*     DO;                           /* IF SO...              @XL03HDP*/
*       CALL ISTZBFZ0;              /* CALL ERR RECOVERY     @XL03HDP*/
         L     @14,ATCZPSVT(,VTCVTREG)                             0800
         L     @15,ZPSZBFZ0(,@14)                                  0800
         BALR  @14,@15                                             0800
*       ZCRENDX='1'B;               /* FLAG END OF LCP       @XL03HDP*/
         OI    ZCRENDX(ZCRREG),B'00001000'                         0801
*     END;                          /* END ERROR PROCESSING  @XL03HDP*/
*   ELSE                            /* NO ERROR DETECTED     @XL03HDP*/
*     DO;                           /*                       @XL03HDP*/
         B     @RC00798                                            0803
@RF00798 DS    0H                                                  0804
*       WORK=ADDR(FMCPAB3);         /* TPIOS OUTBOUND PAB            */
         LA    WORK,FMCPAB3(,FMCBREG)                              0804
*       WORK=WORK->PABDVTA;         /* VECTOR TABLE ADDRESS          */
         L     @14,PABDVTA-1(,WORK)                                0805
         LA    @14,0(,@14)                                         0805
         LR    WORK,@14                                            0805
*       WORK=WORK+(ATCZPSVT->ZPSZTRTT->DVTOFF(INDEX+1));/* ADDRESS OF
*                                      LBVT + OFFSET OF PROCESSOR @  */
         L     @14,LCPNXLCW(,LCPBREG)                              0806
         SLR   @11,@11                                             0806
         IC    @11,INDEX(,@14)                                     0806
         L     @14,ATCZPSVT(,VTCVTREG)                             0806
         L     @14,ZPSZTRTT(,@14)                                  0806
         SLR   @10,@10                                             0806
         IC    @10,DVTOFF(@11,@14)                                 0806
         ALR   WORK,@10                                            0806
*       R15=WORK->ADDRESS;          /* ADDRESS OF LCCW PROCESSOR     */
         L     R15,ADDRESS(,WORK)                                  0807
*       CALL R15;                   /* CALL LCCW PROCCESSOR          */
         BALR  @14,@15                                             0808
*       IF ZCR3270R=ON&             /* 3270 IN RECORD AND    @XM03HDP*/
*           ZCRLCSYN=OFF&           /* NOT LCCW SYNCH AND    @XM03HDP*/
*           ZCROPCDE^=0&            /* XLATION DONE ?        @XM03HDP*/
*           LCCWOP^=LD THEN         /* AND NOT DISCONNECT     @ZAXXXX*/
         TM    ZCR3270R(ZCRREG),B'00000010'                        0809
         BNO   @RF00809                                            0809
         TM    ZCRLCSYN(ZCRREG),B'00010000'                        0809
         BNZ   @RF00809                                            0809
         CLI   ZCROPCDE(ZCRREG),0                                  0809
         BE    @RF00809                                            0809
         L     @14,LCPNXLCW(,LCPBREG)                              0809
         CLI   LCCWOP(@14),X'23'                                   0809
         BE    @RF00809                                            0809
*         DO;                       /*                       @XL03HDP*/
*           LCCWDATA=LCCWDATA-1;    /* RESTORE ORIG DATA ADDR      0811
*                                                            @XL03HDP*/
         L     @11,LCCWDATA(,@14)                                  0811
         BCTR  @11,0                                               0811
         ST    @11,LCCWDATA(,@14)                                  0811
*           LCCWCNT=LCCWCNT+1;      /* RESTORE ORIG COUNT    @XL03HDP*/
         LA    @11,1                                               0812
         LH    @10,LCCWCNT(,@14)                                   0812
         N     @10,@CF04731                                        0812
         ALR   @11,@10                                             0812
         STH   @11,LCCWCNT(,@14)                                   0812
*         END;                      /* ALL DONE              @XL03HDP*/
*       ELSE                                                       0814
*         ;                         /* NOT ABOVE CASE        @XL03HDP*/
@RF00809 DS    0H                                                  0815
*       IF FMCZF010='1'B            /* RESET IN PROGRESS AND       0815
*                                      SUSPENDED?            @XM03HDP*/
*         THEN                                                     0815
         TM    FMCZF010(FMCBREG),B'10000000'                       0815
         BNO   @RF00815                                            0815
*         ZCRENDX='1'B;             /* FLAG BF0B EXIT                */
         OI    ZCRENDX(ZCRREG),B'00001000'                         0816
*       ELSE                                                       0817
*         IF ZCRCRLCP->LCPZRT00='0'B&/* IF NO LOGICAL ERROR AND      */
*             ZCRCRLCP->LCPZRT01='0'B&/* NO CONTROL BLOCK ERROR      */
*             ZCREBCZ0='0'B         /* NO ERROR RECOVERY     @X50BHEN*/
*           THEN                    /* YES                           */
         B     @RC00815                                            0817
@RF00815 L     @14,ZCRCRLCP(,ZCRREG)                               0817
         TM    LCPZRT00(@14),B'11000000'                           0817
         BNZ   @RF00817                                            0817
         TM    ZCREBCZ0(ZCRREG),B'00010000'                        0817
         BNZ   @RF00817                                            0817
*           IF LSCLCCWA^=0          /* IF THERES STILL AN LCCW AROUND
*                                      AND                   @XL03HDP*/
*               &LSCLCCWA->LCCWCC='1'B/* IS LCCW CHAINED             */
*             THEN                  /* YES                           */
         L     @14,LSCLCCWA(,LSCBREG)                              0818
         LTR   @14,@14                                             0818
         BZ    @RF00818                                            0818
         TM    LCCWCC(@14),B'01000000'                             0818
         BNO   @RF00818                                            0818
*             DO;                                                  0819
*                                                                  0819
*               /*****************************************************/
*               /*                                                   */
*               /* SEGMENT(BF0B041)REQUEST                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0820
*               DO;                                                0820
*                 GOTO BF0B041;                                    0821
         B     BF0B041                                             0821
*BF0B041#:                                                         0822
*               END;                                               0822
BF0B041# DS    0H                                                  0823
*               IF ADDR(BFRREG->ZIBFSB)->FSBTYPE=FSTYPE            0823
*                                                                  0823
*               /*****************************************************/
*               /*                                                   */
*               /* IF REQUEST FEEDBACK SIMULATED                     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0823
*                 THEN              /* EXIT                          */
         CLI   FSBTYPE+16(BFRREG),X'02'                            0823
         BNE   @RF00823                                            0823
*                 ZCRENDX='1'B;                                    0824
         OI    ZCRENDX(ZCRREG),B'00001000'                         0824
*               ELSE                                               0825
*                 ;                                                0825
@RF00823 DS    0H                                                  0826
*             END;                                                 0826
*           ELSE                    /* NO, NO CHAINING OR NO LCCW    */
*             ZCRENDX='1'B;         /* EXIT MODULE FLAG              */
         B     @RC00818                                            0827
@RF00818 OI    ZCRENDX(ZCRREG),B'00001000'                         0827
*         ELSE                      /* NO, ERROR COMPLETION          */
*           ZCRENDX='1'B;           /* EXIT MODULE FLAG              */
         B     @RC00817                                            0828
@RF00817 OI    ZCRENDX(ZCRREG),B'00001000'                         0828
*     END;                          /* END NO ERROR                0829
*                                      PROCESSING@XL03HDP            */
@RC00817 DS    0H                                                  0829
@RC00815 DS    0H                                                  0830
*/* SEGMENT(BF0B040)FINISH                                           */
*                                                                  0830
*   DO;                                                            0830
@RC00798 DS    0H                                                  0831
*     GOTO BF0B040#;                                               0831
         B     BF0B040#                                            0831
*BF0B040@:                                                         0832
*   END;                                                           0832
BF0B040@ DS    0H                                                  0833
*   GEN(EJECT);                                                    0833
         EJECT
*                                                                  0834
*/* SEGMENT(BF0B041)START                                            */
*                                                                  0834
*   DO;                                                            0834
*     GOTO BF0B041@;                                               0835
         B     BF0B041@                                            0835
*BF0B041:                                                          0836
*   END;                                                           0836
*                                                                  0836
BF0B041  DS    0H                                                  0837
*/*                                                                  */
*/*  THIS ROUTINE CHECKS THE LCCW/LCP COUNT IN THE FMCB.  IF LESS    */
*/*  THAN 255 THE NEXT LCCW POINTER IS UPDATED AND A CHECK IS MADE   */
*/*  ON THE SCHEDULING LIMIT. IF NOT REACHED, PROCESSING CONTINUES   */
*/*                                                                  */
*                                                                  0837
*   RFY                                                            0837
*     ISTLCPB BASED(ZCRCRLCP);                                     0837
*   LCPLCCWC=LCPLCCWC+1;            /* UPDATE LCCW/LCP COUNT @XL03HDP*/
         L     @14,ZCRCRLCP(,ZCRREG)                               0838
         LA    @11,1                                               0838
         SLR   @10,@10                                             0838
         IC    @10,LCPLCCWC(,@14)                                  0838
         ALR   @10,@11                                             0838
         STC   @10,LCPLCCWC(,@14)                                  0838
*   ZCRCRLCP->LCPNXLCW=LSCLCCWA+LENGTH(ISTLCCW);/* ADDRESS NEXT LCCW
*                                      IN LCPB                       */
         LA    @11,8                                               0839
         AL    @11,LSCLCCWA(,LSCBREG)                              0839
         ST    @11,LCPNXLCW(,@14)                                  0839
*   IF LCCWOP=LTIC                  /* IF NEXT LCCW IS A TIC         */
*     THEN                                                         0840
         CLI   LCCWOP(@11),X'08'                                   0840
         BNE   @RF00840                                            0840
*     DO;                                                          0841
*       LCPNXLCW=LCCWDATA;          /* ADDRESS NEXT LCCW             */
         L     @11,LCCWDATA(,@11)                                  0842
         ST    @11,LCPNXLCW(,@14)                                  0842
*       LCPLCCWC=LCPLCCWC+1;        /* BUMP LCCW COUNT       @XL03HDP*/
         LA    @11,1                                               0843
         ALR   @10,@11                                             0843
         STC   @10,LCPLCCWC(,@14)                                  0843
*     END;                                                         0844
*   ELSE                                                           0845
*     ;                                                            0845
@RF00840 DS    0H                                                  0846
*   RFY                                                            0846
*     ISTLCPB BASED(LCPBREG);                                      0846
*   IF FMCZF001='1'B THEN           /* IF BDU ALLOCATION REQD      0847
*                                                            @XM03HDP*/
         TM    FMCZF001(FMCBREG),B'10000000'                       0847
         BNO   @RF00847                                            0847
*     LCPBREG=ZCRCRLCP;             /* RESTORE ORIG LCPB ADDR      0848
*                                                            @XM03HDP*/
         L     LCPBREG,ZCRCRLCP(,ZCRREG)                           0848
*   ELSE                            /* ELSE NOT REQUIRED             */
*     LSCLCCWA=ZCRCRLCP->LCPNXLCW;  /* UPDATE LCCW POINTER IN LSCB   */
         B     @RC00847                                            0849
@RF00847 L     @14,ZCRCRLCP(,ZCRREG)                               0849
         L     @14,LCPNXLCW(,@14)                                  0849
         ST    @14,LSCLCCWA(,LSCBREG)                              0849
*   IF FMCZF002='1'B×               /* I/O SCHED. SUSPENDED? @XM03HDP*/
*       ZCRCNLXL='1'B×              /* OR END OF XLATION?    @XM03HDP*/
*       FMCCIPI='1'B                /* OR CLEAR IN PROG      @XM03HDP*/
*     THEN                                                         0850
@RC00847 TM    FMCZF002(FMCBREG),B'01000000'                       0850
         BO    @RT00850                                            0850
         TM    ZCRCNLXL(ZCRREG),B'00000001'                        0850
         BO    @RT00850                                            0850
         TM    FMCCIPI(FMCBREG),B'01000000'                        0850
         BNO   @RF00850                                            0850
@RT00850 DS    0H                                                  0851
*     ZCRENDX='1'B;                 /* EXIT FROM LOOP ,PROCESS DONE  */
         OI    ZCRENDX(ZCRREG),B'00001000'                         0851
*   ELSE                                                           0852
*     IF ZCRSHEDI='1'B              /* IS IMMED SCHED SWITCH SET     */
*       THEN                                                       0852
         B     @RC00850                                            0852
@RF00850 TM    ZCRSHEDI(ZCRREG),B'01000000'                        0852
         BO    @RT00852                                            0852
*       ;                                                          0853
*     ELSE                          /* IF NOT...                     */
*       IF FMCZX003+DNCACIP>DNCLICP /* SCHED LIM 2B EXCEEDED         */
*         THEN                                                     0854
         SLR   @14,@14                                             0854
         IC    @14,FMCZX003(,FMCBREG)                              0854
         SLR   @11,@11                                             0854
         IC    @11,DNCACIP(,DNCBREG)                               0854
         ALR   @14,@11                                             0854
         SLR   @11,@11                                             0854
         IC    @11,DNCLICP(,DNCBREG)                               0854
         CR    @14,@11                                             0854
         BNH   @RF00854                                            0854
*         ZCRENDX='1'B;             /* EXIT LOOP, PROCESS DONE       */
         OI    ZCRENDX(ZCRREG),B'00001000'                         0855
*       ELSE                                                       0856
*         ;                                                        0856
*                                                                  0856
@RF00854 DS    0H                                                  0857
*/* SEGMENT(BF0B041)FINISH                                           */
*                                                                  0857
*   DO;                                                            0857
@RT00852 DS    0H                                                  0857
@RC00850 DS    0H                                                  0858
*     GOTO BF0B041#;                                               0858
         B     BF0B041#                                            0858
*BF0B041@:                                                         0859
*   END;                                                           0859
BF0B041@ DS    0H                                                  0860
*   GEN(EJECT);                                                    0860
         EJECT
*                                                                  0861
*/* SEGMENT(BF0B025)START                                            */
*                                                                  0861
*   DO;                                                            0861
*     GOTO BF0B025@;                                               0862
         B     BF0B025@                                            0862
*BF0B025:                                                          0863
*   END;                                                           0863
*                                                                  0863
BF0B025  DS    0H                                                  0864
*/*                                                                  */
*/* THIS  SUBROUTINE  SUSPENDS I/O FOR GENERAL POLL READ IF A READ   */
*/* IS PENDING                                                       */
*/*                                                                  */
*                                                                  0864
*   IF ZCRSHEDI='1'B                /* IMMEDIATE SCHED REQUEST?      */
*     THEN                                                         0864
         TM    ZCRSHEDI(ZCRREG),B'01000000'                        0864
         BO    @RT00864                                            0864
*     ;                             /* YES, EXIT                     */
*   ELSE                                                           0866
*     IF DNCBREG->NCBNSNA->         /* GEN POLL DEVICE ?             */
*         NCBTYPE=HCTYPE THEN                                      0866
         L     @14,NCBNSNA(,DNCBREG)                               0866
         CLI   NCBTYPE(@14),X'14'                                  0866
         BNE   @RF00866                                            0866
*       IF FMCZF004='1'B            /* READ PENDING ?                */
*         THEN                                                     0867
         TM    FMCZF004(FMCBREG),B'00010000'                       0867
         BNO   @RF00867                                            0867
*         IF LCCWRWOP=LRM×LCCWRWOP=LRT/* IS REQUEST FOR A            */
*                                                                  0868
*         /***********************************************************/
*         /*                                                         */
*         /* READ MESSAGE OR XMISSION ?                              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0868
*           THEN                                                   0868
         L     @14,LCPNXLCW(,LCPBREG)                              0868
         TM    LCCWRWOP(@14),B'00001010'                           0868
         BNO   @GL00018                                            0868
         TM    LCCWRWOP(@14),B'00110101'                           0868
         BZ    @RT00868                                            0868
@GL00018 L     @14,LCPNXLCW(,LCPBREG)                              0868
         TM    LCCWRWOP(@14),B'00001110'                           0868
         BNO   @RF00868                                            0868
         TM    LCCWRWOP(@14),B'00110001'                           0868
         BZ    @RT00868                                            0868
*           ;                                                      0869
*         ELSE                                                     0870
*           FMCZF002='1'B;                                         0870
*                                                                  0870
@RF00868 OI    FMCZF002(FMCBREG),B'01000000'                       0870
*   /*****************************************************************/
*   /*                                                               */
*   /* SUSPEND I/O SCHEDULING                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0871
*       ELSE                                                       0871
*         ;                                                        0871
@RF00867 DS    0H                                                  0872
*     ELSE                                                         0872
*       ;                                                          0872
*                                                                  0872
@RF00866 DS    0H                                                  0873
*/* SEGMENT(BF0B025)FINISH                                           */
*                                                                  0873
*   DO;                                                            0873
@RC00866 DS    0H                                                  0873
@RT00864 DS    0H                                                  0874
*     GOTO BF0B025#;                                               0874
         B     BF0B025#                                            0874
*BF0B025@:                                                         0875
*   END;                                                           0875
BF0B025@ DS    0H                                                  0876
*   GEN(EJECT);                                                    0876
         EJECT
*                                                                  0877
*/* SEGMENT(BF0B015)START                                            */
*                                                                  0877
*   DO;                                                            0877
*     GOTO BF0B015@;                                               0878
         B     BF0B015@                                            0878
*BF0B015:                                                          0879
*   END;                                                           0879
*                                                                  0879
BF0B015  DS    0H                                                  0880
*/*                                                                  */
*/* THIS SUBROUTINE CALLS DIALOG SCHEDULER IF NECESSARY              */
*/*                                                                  */
*                                                                  0880
*   R15=0;                                                         0880
         SLR   R15,R15                                             0880
*   IF((ZCR3270='1'B×NCBTYPE=HCTYPE)/* IF 3270 DEVICE OR     @ZA18452*/
*       &DNCZV001=FMCBREG)          /* HCNCB AND                     */
*                                                                  0881
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS ACTIVE FMCB OR                                @XL03HDP*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0881
*       ×(FMCZFD06='0'B&            /* IF NO DISCONNECT PENDING      */
*       (FMCZFA06='1'B×             /* NOT IN SESSION OR             */
*       FMCZFB06='1'B×              /* GOING TO BE IN SESSION        */
*       FMCZFC06='1'B))×(LCCWOP=LD×LCCWOP=LDEC)/* OPERATION A      0881
*                                      DISCONNECT                    */
*     THEN                                                         0881
         TM    ZCR3270(ZCRREG),B'00000100'                         0881
         BO    @GL00021                                            0881
         CLI   NCBTYPE(DNCBREG),X'14'                              0881
         BNE   @GL00020                                            0881
@GL00021 L     @14,DNCZV001-1(,DNCBREG)                            0881
         LA    @14,0(,@14)                                         0881
         CR    FMCBREG,@14                                         0881
         BE    @RT00881                                            0881
@GL00020 TM    FMCZFD06(FMCBREG),B'10000000'                       0881
         BNZ   @GL00019                                            0881
         TM    FMCZFA06(FMCBREG),B'00000111'                       0881
         BNZ   @RT00881                                            0881
@GL00019 L     @14,LCPNXLCW(,LCPBREG)                              0881
         CLI   LCCWOP(@14),X'23'                                   0881
         BE    @RT00881                                            0881
         CLI   LCCWOP(@14),X'33'                                   0881
         BE    @RT00881                                            0881
*     ;                             /* EXIT                          */
*   ELSE                                                           0883
*     DO;                                                          0883
*       CALL ISTZCF0B;              /* DIALOG SCHEDULER              */
         L     @14,PABDVTA+95(,FMCBREG)                            0884
         LA    @14,0(,@14)                                         0884
         L     @15,ZLBZCFAI(,@14)                                  0884
         BALR  @14,@15                                             0884
*       IF R15=0 THEN                                              0885
         LTR   R15,R15                                             0885
         BZ    @RT00885                                            0885
*         ;                                                        0886
*       ELSE                                                       0887
*         IF R15=4 THEN                                            0887
         C     R15,@CF00073                                        0887
         BNE   @RF00887                                            0887
*           ZCRENDX='1'B;                                          0888
         OI    ZCRENDX(ZCRREG),B'00001000'                         0888
*         ELSE                                                     0889
*           DO;                                                    0889
         B     @RC00887                                            0889
@RF00887 DS    0H                                                  0890
*             ZCRCNLXL='1'B;        /* TELL ZAF0B TO SHIP OUT ANY  0890
*                                      WORK ON SCHEDQ BUT NO MORE  0890
*                                      XLATION               @XM8893K*/
*             ZCRENDX='1'B;         /* EXIT BTU XLATOR               */
         OI    ZCRCNLXL(ZCRREG),B'00001001'                        0891
*           END;                                                   0892
*     END;                                                         0893
*                                                                  0893
@RC00887 DS    0H                                                  0893
@RT00885 DS    0H                                                  0894
*/* SEGMENT(BF0B015)FINISH                                           */
*                                                                  0894
*   DO;                                                            0894
@RT00881 DS    0H                                                  0895
*     GOTO BF0B015#;                                               0895
         B     BF0B015#                                            0895
*BF0B015@:                                                         0896
*   END;                                                           0896
BF0B015@ DS    0H                                                  0897
*                                                                  0897
*/********************************************************************/
*/*                                                                  */
*/* BF0B045 - THIS ROUTINE HANDLES REQUESTS FOR 3270 - TYPE          */
*/*           DEVICES IN RECORD MODE.  ERROR CHECKING IS DONE,       */
*/*           INCLUDING A TEST FOR ZERO DATA COUNT IN THE 2ND        */
*/*           LCCW.  THE 2ND LCCW POINTS TO A 3270 COMMAND,          */
*/*           WHICH WILL BE TRANSLATED TO AN EQUIVALENT LCCW         */
*/*           OP CODE WHICH WILL BE PROCESSED BY THE APPROPRIATE     */
*/*           LCCW PROCESSOR.  BEFORE THIS CAN BE DONE, IT IS        */
*/*           NECESSARY TO GET INTO KEY 0 (VIA VMDESET), OBTAIN      */
*/*           THE LOCAL MEMORY LOCK (VIA VSETLCK), AND VALIDITY      */
*/*           CHECK THE ADDRESS OF THE COMMAND BYTE (VIA VALCHEK)    */
*/*           TO DETERMINE THAT IT IS IN THE USERS ADDRESS SPACE.    */
*/*                                                                  */
*/* THE S/D CODE FRO THIS ROUTINE IS --->                    @XL03HDP*/
*/*                                                                  */
*/********************************************************************/
*/* SEGMENT(BF0B045)START                                            */
*                                                                  0897
*   DO;                                                            0897
*     GOTO BF0B045@;                                               0898
         B     BF0B045@                                            0898
*BF0B045:                                                          0899
*   END;                                                           0899
BF0B045  DS    0H                                                  0900
*   ZCREXRES='0'B;                  /* CLEAR EXCEPTION RESPONSE BIT
*                                                            @XM03HDP*/
         NI    ZCREXRES(ZCRREG),B'11110111'                        0900
*   RFY                                                            0901
*     R10 RSTD;                     /* RESTRICT WORK REG             */
*   R10=LCPNXLCW;                   /* ADDRESS FIRST LCCW            */
         L     @14,LCPNXLCW(,LCPBREG)                              0902
         LR    R10,@14                                             0902
*   LCPNXLCW=LCPNXLCW+LENGTH(ISTLCCW);/* POINT TO SECOND LCCW        */
         AL    @14,@CF00071                                        0903
         ST    @14,LCPNXLCW(,LCPBREG)                              0903
*   IF LCCWCNT=0 THEN               /* DOES IT HAVE DATA?            */
*                                                                  0904
         LH    @14,LCCWCNT(,@14)                                   0904
         N     @14,@CF04731                                        0904
         LTR   @14,@14                                             0904
         BNZ   @RF00904                                            0904
*     /***************************************************************/
*     /*                                                             */
*     /* SEGMENT(ZERORU)REQUEST                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0905
*     DO;                                                          0905
*       GOTO ZERORU;                                               0906
         B     ZERORU                                              0906
*ZERORU#:                                                          0907
*     END;                          /* PROCESS ZERO LENGTH   @ZA28604*/
*   ELSE                            /* THERE IS DATA                 */
*     DO;                                                          0908
         B     @RC00904                                            0908
@RF00904 DS    0H                                                  0909
*       IF R10->LCCWLSI='1'B THEN   /* IF 1ST LCCW SPECIFIES SYNCH   */
         TM    LCCWLSI(R10),B'00000100'                            0909
         BNO   @RF00909                                            0909
*         LCCWLSI='1'B;             /* SET SAME FLAG IN 2ND LCCW     */
         L     @14,LCPNXLCW(,LCPBREG)                              0910
         OI    LCCWLSI(@14),B'00000100'                            0910
*       ELSE                                                       0911
*         ;                         /* LCCW SYNCH NOT SPECIFIED      */
@RF00909 DS    0H                                                  0912
*                                                                  0912
*/*VMDESET  (15,ZERO)                                                */
*                                                                  0912
*       DO;                         /* INVOKE MODESET MACRO          */
*         GEN;                                                     0913
         MODESET EXTKEY=ZERO,WORKREG=2
*         RFY                                                      0914
*          (GPR15P) RSTD;                                          0914
*         GPR15F=0;                                                0915
         SLR   @11,@11                                             0915
         LR    GPR15F,@11                                          0915
*         RFY                                                      0916
*          (GPR15P) UNRSTD;         /* PUT RETURN CODE IN RCREG      */
*       END;                        /* VMDESET TRY TO GET TO KEY 0   */
*       IF R15=0 THEN               /* IF WE MADE IT                 */
         CR    R15,@11                                             0918
         BNE   @RF00918                                            0918
*         DO;                                                      0919
*           IF LCCWNTVC^='1'B THEN  /* GET LOCAL LOCK AND DO @ZA08949*/
         L     @14,LCPNXLCW(,LCPBREG)                              0920
         TM    LCCWNTVC(@14),B'00010000'                           0920
         BO    @RF00920                                            0920
*             DO;                   /* VALCHECK ONLY IF THIS IS NOT
*                                      AUTHORIZED PATH       @ZA08949*/
*               WORK=R13;           /* SAVE TPIOS SAVE AREA ADDRESS  */
         LR    WORK,R13                                            0922
*               R13=ADDR(CRASVC);   /* MACRO SAVE AREA ADDRESS       */
         L     R13,RPHCRR(,RPHREG)                                 0923
         LA    R13,CRASVC(,R13)                                    0923
*BF0B45LK:                                                         0924
*                                                                  0924
*/*VSETLCK  (15,OBTAIN,LOCAL,(LOCAL,ISTZBF0B(BF0B45UL)))             */
*                                                                  0924
*               DO;                 /* DECLARE AND RESTRICT REGS   0924
*                                      2,10,11,12,13,14, AND 15      */
BF0B45LK DS    0H                                                  0925
*                 RFY                                              0925
*                  (GPR02P,                                        0925
*                   GPR10P,                                        0925
*                   GPR11P,                                        0925
*                   GPR14P,                                        0925
*                   GPR15P) RSTD;   /* SAVE REGS 2 AND 10 THRU 14    */
*                 GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*                 GEN SETS(2);                                     0927
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                 GPR10P=GPR13P;    /* PUT SAVE AREA ADDR IN R 10  0928
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0928
*                 GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);       0929
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(LOCAL,ISTZBF0B(BF0B45UL))
*                 GPR15P=GPR13P;    /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0930
*                 DO;               /* RESTORE PSW PROTECTION KEY    */
*                   GEN SETS(2);                                   0932
         MODESET KEYADDR=(2),WORKREG=2
*                 END;              /* RESTORE REGISTERS             */
*                 GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,
*                     GPR13F,GPR14F,GPR02F);                       0934
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*                 IF GPR15F=4 THEN                                 0935
         C     GPR15F,@CF00073                                     0935
         BNE   @RF00935                                            0935
*                   GPR15F=0;                                      0936
         SLR   GPR15F,GPR15F                                       0936
*                 RFY                                              0937
*                  (GPR02P,                                        0937
*                   GPR10P,                                        0937
*                   GPR11P,                                        0937
*                   GPR14P,                                        0937
*                   GPR15P) UNRSTD;                                0937
@RF00935 DS    0H                                                  0938
*               END;                /* VSETLCK OBTAIN LOCAL MEMORY 0938
*                                      LOCK                  @XM03HDP*/
*               IF R15=0 THEN       /* IF LOCK OBTAINED SUCCESSFULLY */
         LTR   R15,R15                                             0939
         BNZ   @RF00939                                            0939
*                 DO;               /* VALIDITY CHECK USER DATA      */
*                   GEN( STM   VTCVTREG,ICNCBREG,ZCRWKARA(ZCRREG) )
*                   SETS(ZCRWKARA) REFS(VTCVTREG,ICNCBREG,ZCRREG); 0941
*                                                                  0941
          STM   VTCVTREG,ICNCBREG,ZCRWKARA(ZCRREG)
*/* WE HAVE JUST FREED UP AN EVEN-ODD REGISTER PAIR FOR VALCHEK      */
*                                                                  0942
*                   RFY                                            0942
*                    (VTCVTREG,                                    0942
*                     ICNCBREG) UNRSTD;                            0942
*                                                                  0943
*/*VALCHEK  (R15,(R13),(LCCWDATA),UA,1)                              */
*                                                                  0943
*                   DO;                                            0943
*                     RFY                                          0944
*                      (GPR01P,                                    0944
*                       GPR02P,                                    0944
*                       GPR04P,                                    0944
*                       GPR06P,                                    0944
*                       GPR14P,                                    0944
*                       GPR15P) RSTD;/* DECLARE AND RESTRICT REGS 1,
*                                      2, 4, 6, 13,14, AND 15        */
*                     R15=0;        /* SET RETURN CODE TO NO ERROR 0945
*                                      INVOKE XREGSET MACRO TO VERIFY
*                                      SAVEAREA OPERAND AND PUT IT IN
*                                      REG 13                        */
         SLR   R15,R15                                             0945
*/*XREGSET  PID('SAVEAREA')PPARM((R13))RREG(13,GPR13P)               */
*                                                                  0946
*                     DO;                                          0946
*                       GPR13P=R13; /* SET RREG SYMBOL TO VALUE OF 0947
*                                      PPARM OPERAND                 */
*                     END;          /* XREGSET                       */
*                     DCL                                          0949
*                       1 SAV0089 CHAR(20) BASED(GPR13P),/* ESTABLISH
*                                      SAVE AREA MAP                 */
*                        2 SAV10089 CHAR(4),/* TO SAVE REGS 1,2,4,6,
*                                      AND 14                        */
*                        2 SAV20089 CHAR(4),                       0949
*                        2 SAV40089 CHAR(4),                       0949
*                        2 SAV60089 CHAR(4),                       0949
*                        2 SAVE0089 CHAR(4);                       0949
*                     SAV10089=GPR01F;/* SAVE REGS ONE,              */
         STCM  GPR01F,15,SAV10089(GPR13P)                          0950
*                     SAV20089=GPR02F;/* TWO,                        */
         STCM  GPR02F,15,SAV20089(GPR13P)                          0951
*                     SAV40089=GPR04F;/* FOUR,                       */
         STCM  GPR04F,15,SAV40089(GPR13P)                          0952
*                     SAV60089=GPR06F;/* SIX,                        */
         STCM  GPR06F,15,SAV60089(GPR13P)                          0953
*                     SAVE0089=GPR14F;/* AND FOURTEEN                */
         STCM  GPR14F,15,SAVE0089(GPR13P)                          0954
*                     GPR04P=GPR01P->RPHTSKID;/* PUT ADDR OF PROCESS
*                                                              SCHED-
*                                      ULING TABLE IN REG 4          */
         L     GPR04P,RPHTSKID(,GPR01P)                            0955
*/* ATBUILD (ISTPST)                                                 */
*                                                                  0956
*/* ***** PROCESS SCHEDULING TABLE FOR VS/2       ****** */        0956
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL  1  ISTPST BDY(DWORD) BASED,                                  0956
*        2  PSTTYPE  CHAR(1),          /* CONTROL BLOCK TYPE         */
*        2  PSTLNGTH PTR(8),           /* LENGTH IN BYTES            */
*        2  *        CHAR(2),          /* RESERVED                   */
*        2  PSTCHAIN PTR(31),          /* ADDRESS OF NEXT PST        */
*        2  PSTRQFGA CHAR(8) BDY(DWORD),  /* READY QUEUE AND FLAGS   */
*           3  PSTRQUE PTR(31),        /* READY QUEUE                */
*              4  PSTRQFLG BIT(1),     /* READY QUEUE GATE           */
*              4  PSTRSV01 BIT(1),     /* REVERVED                   */
*              4  PSTRSV02 BIT(1),     /* REVERVED                   */
*              4  PSTRSV03 BIT(1),     /* REVERVED                   */
*              4  PSTRSV04 BIT(1),     /* REVERVED                   */
*              4  PSTRSV05 BIT(1),     /* REVERVED                   */
*              4  PSTRSV06 BIT(1),     /* REVERVED                   */
*              4  PSTRSV07 BIT(1),     /* REVERVED                   */
*              4  PSTRQUEA PTR(24),    /* READY QUEUE                */
*           3  PSTFLGA PTR(32),        /* FLAG FIELD                 */
*              4  PSTSSRN BIT(1),      /* IRB RUNNING SYSTEM SERVICE
*                                         TYPE REQUESTS              */
*              4  PSTUERN BIT(1),      /* IRB RUNNING USER EXIT TYPE
*                                         REQUESTS                   */
*              4  PSTIRBU1 BIT(1),     /* IRB # 1 IN USE             */
*              4  PSTIRBU2 BIT(1),     /* IRB # 2 IN USE             */
*              4  PSTSMQR BIT(1),      /* SMS RPH QUEUED FOR STORAGE */
*              4  PSTSMCU BIT(1),      /* SMS CRA IN USE             */
*              4  PSTAUTH BIT(1),      /* THE TASK THIS PST IS OBTAINED
*                                         FOR IS AUTHORIZED          */
*              4  PSTABINP BIT(1),     /* ABEND IN PROGRESS ON THIS
*                                         TASK                       */
*                 5 PSTABEND BIT(1),   /* TASK ABEND IN PROGRESS     */
*              4  PSTDMPC BIT(1),      /* DUMP HAS BEEN REQUESTED    */
*              4  PSTRSV08 BIT(23),    /* RESERVED                   */
*        2  PSTTCBA PTR(31),           /* TCB POINTER                */
*        2  PSTMPSTP PTR(31),          /* MPST POINTER - PST 6TH WORD*/
*        2  PSTACBCT FIXED(31),        /* COUNT OF OPEN ACB'S USING
*                                         THIS PST                   */
*        2  PSTPSSQ PTR(31),           /* POSTED SYSTEM SERVICE QUEUE*/
*        2  PSTNSSQ PTR(31),           /* NORMAL SYSTEM SERVICE QUEUE*/
*        2  PSTUEQ  PTR(31),           /* USER EXIT QUEUE            */
*        2  PSTIQE11 PTR(31),          /* INACTIVE IQE FOR FIRST IRB */
*        2  PSTIQE12 PTR(31),          /* ACTIVE IQE FOR FIRST IRB   */
*        2  PSTIQE21 PTR(31),          /* INACTIVE IQE FOR 2ND IRB   */
*        2  PSTIQE22 PTR(31),          /* ACTIVE IQE FOR 2ND IRB     */
*        2  PSTCRR1 PTR(31),           /* PREALLOCATED CRA           */
*        2  PSTCRRS PTR(31),           /* SMS CRA                    */
*        2  PSTSMDYP CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* SMS PAB   */
*        2  PSTSAVE CHAR(32),          /* SAVE AREA                  */
*        2  PSTDEBP  PTR(31),          /* POINTER TO DEB CHAIN       */
*                                      /* WHEN TASK ABENDS           */
*        2  PSTDMPS  FIXED(31),        /* DUMMY MPST                 */
*           3 PSTDGATE BIT(1),         /* DUMMY MPST GATE BIT        */
*           3 *        BIT(7),         /* NOT TO BE USED             */
*           3 PSTDRDYQ PTR(24);        /* DUMMY MPST READY QUEUE     */
*DCL  PSTSSRN0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN PSTSSRN OFF    */
*DCL  PSTSSRN1 BIT(32) CONSTANT('80000000'X); /* TURN PSTSSRN ON     */
*DCL  PSTUERN0 BIT(32) CONSTANT('BFFFFFFF'X); /* TURN PSTUERN OFF    */
*DCL  PSTUERN1 BIT(32) CONSTANT('40000000'X); /* TURN PSTUERN ON     */
*DCL  PSTGATE0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN PST READY QUEUE
*                                                GATE OFF            */
*DCL  PSTGATE1 BIT(32) CONSTANT('80000000'X); /* TURN PST READY QUEUE
*                                                GATE ON             */
*DCL  PSTIRB10 BIT(32) CONSTANT('DFFFFFFF'X); /* TURN PSTIRBU1 OFF   */
*DCL  PSTIRB11 BIT(32) CONSTANT('20000000'X); /* TURN PSTIRBU1 ON    */
*DCL  PSTIRB20 BIT(32) CONSTANT('EFFFFFFF'X); /* TURN PSTIRBU2 OFF   */
*DCL  PSTIRB21 BIT(32) CONSTANT('10000000'X); /* TURN PSTIRBU2 ON    */
*DCL  PSTSMQR0 BIT(32) CONSTANT('F7FFFFFF'X); /* TURN PSTSMQR OFF    */
*DCL  PSTSMQR1 BIT(32) CONSTANT('08000000'X); /* TURN PSTSMQR ON     */
*DCL  PSTSMCU0 BIT(32) CONSTANT('FBFFFFFF'X); /* TURN PSTSMCU OFF    */
*DCL  PSTSMCU1 BIT(32) CONSTANT('04000000'X); /* TURN PSTSMCU ON     */
*DCL  PSTABIP1 BIT(32) CONSTANT('01000000'X); /* TURN PSTABINP ON    */
*DCL  PSTABIP0 BIT(32) CONSTANT('FEFFFFFF'X); /* TURN OFF PSTABINP   */
*DCL  PSTYPE   BIT(8) CONSTANT('61'X);        /* TYPE CODE FOR PST   */
*                                                                  0974
*/* END OF ATBUILD                                                   */
*                                                                  0974
*                                   /* INCLUDE PROCESS SCHEDULING  0974
*                                      TABLE (ISTPST)                */
*                     GPR15P=GPR04P->PSTTCBA;/* PUT TASK CONTROL   0974
*                                      BLOCK ADDRESS IN REGISTER 15  */
         L     GPR15P,PSTTCBA(,GPR04P)                             0974
*                     GPR04F=SAV40089;/* RESTORE REG 4 INVOKE XREGSET
*                                      MACRO TO VERIFY USER AREA   0975
*                                      OPERAND AND PUT ADDR IN REG 1 */
         ICM   @11,15,SAV40089(GPR13P)                             0975
         LR    GPR04F,@11                                          0975
*/*XREGSET  PID('USER AREA')PPARM((LCCWDATA))RREG(,GPR01P)           */
*                                                                  0976
*                     DO;                                          0976
*                       GPR01P=LCCWDATA;/* SET RREG SYMBOL TO VALUE
*                                      OF PPARM OPERAND              */
         L     @11,LCPNXLCW(,LCPBREG)                              0977
         L     GPR01P,LCCWDATA(,@11)                               0977
*                     END;          /* XREGSET INVOKE XREGSET MACRO
*                                      TO VERIFY LENGTH OPERAND AND
*                                      PUT VALUE IN REG 14           */
*/*XREGSET  PID('LENGTH')PPARM(1)RREG(,GPR14F)OUTPUT(PARM)           */
*                                                                  0979
*                     DO;                                          0979
*                       GPR14F=1;   /* SET RREG SYMBOL TO VALUE OF 0980
*                                      PPARM OPERAND                 */
         LA    GPR14F,1                                            0980
*                     END;          /* XREGSET                       */
*                     GEN SETS(2);                                 0982
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                     GPR06P=GPR02P;                               0983
         LR    GPR06P,GPR02P                                       0983
*                     GPR04P=GPR15P;/* RESTORE TCB ADDR              */
         LR    GPR04P,GPR15P                                       0984
*                     GPR02F=GPR01F+GPR14F-1;/* PUT END ADDRESS IN 0985
*                                      REG 2                         */
         LR    GPR02F,GPR01F                                       0985
         ALR   GPR02F,GPR14F                                       0985
         BCTR  GPR02F,0                                            0985
*                     DCL                                          0986
*                       CZMP0089 PTR(31) LOCATION(16);/* ESTABLISH 0986
*                                      POINTER TO CVT                */
*                     CALL CZMP0089->CVT0VL00;/* INVOKE TASK       0987
*                                      SUPERVISOR VALIDITY CHECKING
*                                      ROUTINE UPON RETURN, CHECK PSW
*                                      CONDITION CODE SET BY THE   0987
*                                      VALIDITY CHECKING ROUTINE     */
         L     @11,CZMP0089                                        0987
         L     @15,CVT0VL00(,@11)                                  0987
         BALR  @14,@15                                             0987
*                     BC(8,OKAY0089);/* IF ADDR VALID, DON'T ALTER 0988
*                                      RETURN CODE VALUE FROM 0      */
         BC    8,OKAY0089                                          0988
*                     R15=4;        /* SET RETURN CODE TO ERROR      */
         LA    R15,4                                               0989
*                     GO TO VC30089;                               0990
         B     VC30089                                             0990
*OKAY0089:                                                         0991
*                     R15=0;        /* PUT RETURN CODE IN RCREG      */
OKAY0089 SLR   R15,R15                                             0991
*VC30089:                                                          0992
*                     GPR02P=GPR06P;                               0992
VC30089  LR    GPR02P,GPR06P                                       0992
*                     GEN SETS(2);                                 0993
         MODESET KEYADDR=(2),WORKREG=2
*                     GPR01F=SAV10089;/* RESTORE REGS ONE,           */
         ICM   GPR01F,15,SAV10089(GPR13P)                          0994
*                     GPR02F=SAV20089;/* TWO,                        */
         ICM   GPR02F,15,SAV20089(GPR13P)                          0995
*                     GPR04F=SAV40089;/* FOUR,                       */
         ICM   GPR04F,15,SAV40089(GPR13P)                          0996
*                     GPR06F=SAV60089;/* SIX,                        */
         ICM   GPR06F,15,SAV60089(GPR13P)                          0997
*                     GPR14F=SAVE0089;/* AND FOURTEEN                */
         ICM   GPR14F,15,SAVE0089(GPR13P)                          0998
*                     RFY                                          0999
*                      (GPR01P,                                    0999
*                       GPR02P,                                    0999
*                       GPR04P,                                    0999
*                       GPR06P,                                    0999
*                       GPR14P,                                    0999
*                       GPR15P) UNRSTD;/* UNRESTRICT REGISTERS       */
*                   END;            /* VALCHEK                       */
*                   RFY                                            1001
*                    (VTCVTREG,                                    1001
*                     ICNCBREG) RSTD;/* RESTRICT REGS AGAIN          */
*                   GEN( LM    VTCVTREG,ICNCBREG,ZCRWKARA(ZCRREG) )
*                   SETS(VTCVTREG,ICNCBREG) REFS(ZCRREG,ZCRWKARA); 1002
          LM    VTCVTREG,ICNCBREG,ZCRWKARA(ZCRREG)
*                   IF R15=0 THEN   /* IF VALCHEK OK                 */
         LTR   R15,R15                                             1003
         BNZ   @RF01003                                            1003
*                     DO;           /* CONTINUE                      */
*                       RFY                                        1005
*                         R15 UNRSTD;/* LET COMPILER USE IT          */
*                       ZCROPCDE=LCCWDATA->CMDATA;/* COPY 3270     1006
*                                      COMMAND                       */
         L     @11,LCPNXLCW(,LCPBREG)                              1006
         L     @11,LCCWDATA(,@11)                                  1006
         MVC   ZCROPCDE(1,ZCRREG),CMDATA(@11)                      1006
*XLATE:                                                            1007
*                       LCCWOP=SRTAB(ZCROPCDE+1);/* XLATE IT TO AN 1007
*                                      LCCW OP CODE                  */
XLATE    L     @11,LCPNXLCW(,LCPBREG)                              1007
         SLR   @15,@15                                             1007
         IC    @15,ZCROPCDE(,ZCRREG)                               1007
         SLR   @14,@14                                             1007
         IC    @14,SRTAB(@15)                                      1007
         STC   @14,LCCWOP(,@11)                                    1007
*/* THE 1ST LCCW CONTAINS IMMEDIATE DATA, WHICH IS MAPPED BY ISTRH   */
*                                                                  1008
*                       RFY                                        1008
*                         ISTRH BASED(ADDR(R10->LCCWDATA));        1008
*                       IF RHBB='1'B THEN/* BEGIN BRACKET REQUESTED? */
         TM    RHBB+4(R10),B'10000000'                             1009
         BNO   @RF01009                                            1009
*                         LCCWSI='1'B;/* YES, IT XLATES TO START   1010
*                                      DIALOG                        */
         OI    LCCWSI(@11),B'10000000'                             1010
*                       ELSE                                       1011
*                         ;         /* BEGIN BRACKET NOT REQUESTED   */
@RF01009 DS    0H                                                  1012
*                       IF RHEB='1'B THEN/* END BRACKET SPECIFIED ?  */
         TM    RHEB+4(R10),B'01000000'                             1012
         BNO   @RF01012                                            1012
*                         LCCWSD='1'B;/* YES, INDICATE END DIALOG    */
         L     @11,LCPNXLCW(,LCPBREG)                              1013
         OI    LCCWSD(@11),B'01000000'                             1013
*                       ELSE                                       1014
*                         ;         /* END BRACKET NO SPECIFIED      */
@RF01012 DS    0H                                                  1015
*                       IF RHEXCEPT='1'B THEN/* EXCEPTION RESPONSE ? */
         TM    RHEXCEPT+4(R10),B'00010000'                         1015
         BNO   @RF01015                                            1015
*                         ZCREXRES='1'B;/* FLAG THE ZCR              */
         OI    ZCREXRES(ZCRREG),B'00001000'                        1016
*                       ELSE                                       1017
*                         ;         /* NO EXCEP RESPONSE REQUEST     */
@RF01015 DS    0H                                                  1018
*                       LCCWDATA=LCCWDATA+1;/* POINT TO NEXT DATA  1018
*                                      BYTE, I.E. COMMAND IS NOT DATA*/
         L     @11,LCPNXLCW(,LCPBREG)                              1018
         LA    @15,1                                               1018
         AL    @15,LCCWDATA(,@11)                                  1018
         ST    @15,LCCWDATA(,@11)                                  1018
*                       LCCWCNT=LCCWCNT-1;/* ADJUST COUNT ACCORDINGLY*/
         LH    @15,LCCWCNT(,@11)                                   1019
         N     @15,@CF04731                                        1019
         BCTR  @15,0                                               1019
         STH   @15,LCCWCNT(,@11)                                   1019
*                       RFY                                        1020
*                         R15 RSTD;                                1020
*                     END;          /* END OF OK LEG                 */
*                   ELSE            /* VALCHEK RETURN BAD            */
*                     DO;                                          1022
         B     @RC01003                                            1022
@RF01003 DS    0H                                                  1023
*                       LCPZRT01='1'B;/* CONTROL BLOCK ERROR         */
         OI    LCPZRT01(LCPBREG),B'01000000'                       1023
*                       LCPMNRCD=FRMINDTR;/* INVALID DATA    @XM03HDP*/
         MVI   LCPMNRCD(LCPBREG),X'17'                             1024
*                     END;          /* END BAD VALCHEK LEG           */
*BF0B45UL:                                                         1026
*                                                                  1026
*/*VSETLCK  (15,RELEASE,LOCAL,(LOCAL,ISTZBF0B(BF0B45LK)))            */
*                                                                  1026
*                   DO;             /* DECLARE AND RESTRICT REGS   1026
*                                      2,10,11,12,13,14, AND 15      */
@RC01003 DS    0H                                                  1026
BF0B45UL DS    0H                                                  1027
*                     RFY                                          1027
*                      (GPR02P,                                    1027
*                       GPR10P,                                    1027
*                       GPR11P,                                    1027
*                       GPR14P,                                    1027
*                       GPR15P) RSTD;/* SAVE REGS 2 AND 10 THRU 14   */
*                     GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F, 1028
*                         GPR13P);                                 1028
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*                     GEN SETS(2);                                 1029
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                     GPR10P=GPR13P;/* PUT SAVE AREA ADDR IN R 10  1030
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       1030
*                     GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);   1031
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,ISTZBF0B(BF0B45LK))
*                     GPR15P=GPR13P;/* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       1032
*                     DO;           /* RESTORE PSW PROTECTION KEY    */
*                       GEN SETS(2);                               1034
         MODESET KEYADDR=(2),WORKREG=2
*                     END;          /* RESTORE REGISTERS             */
*                     GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F
*                         ,GPR13F,GPR14F,GPR02F);                  1036
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*                     IF GPR15F=4 THEN                             1037
         C     GPR15F,@CF00073                                     1037
         BNE   @RF01037                                            1037
*                       GPR15F=0;                                  1038
         SLR   GPR15F,GPR15F                                       1038
*                     RFY                                          1039
*                      (GPR02P,                                    1039
*                       GPR10P,                                    1039
*                       GPR11P,                                    1039
*                       GPR14P,                                    1039
*                       GPR15P) UNRSTD;                            1039
@RF01037 DS    0H                                                  1040
*                   END;            /* VSETLCK RELEASE LOCK  @XM03HDP*/
*                 END;              /* END OK VSETLCK PATH           */
*               ELSE                /* VSETLCK FAILED                */
*                 DO;                                              1042
         B     @RC00939                                            1042
@RF00939 DS    0H                                                  1043
*                   LCPZRT00='1'B;  /* LOGICAL ERROR                 */
         OI    LCPZRT00(LCPBREG),B'10000000'                       1043
*                   LCPMNRCD=FRMVTAME;/* VTAMS FAULT                 */
         MVI   LCPMNRCD(LCPBREG),X'A0'                             1044
*                 END;              /* END BAD VSETLCK PROCESSING    */
*               R13=WORK;           /* RESTORE TPIOS SAVE AREA     1046
*                                      ADDRESS                       */
@RC00939 LR    R13,WORK                                            1046
*             END;                  /* END NOT AUTH PATH     @ZA08949*/
*           ELSE                                                   1048
*             DO;                   /* IT IS AUTHORIZED PATH @ZA08949*/
         B     @RC00920                                            1048
@RF00920 DS    0H                                                  1049
*               RFY                                                1049
*                 R15 UNRSTD;       /* LET COMPILER USE IT   @ZA08949*/
*               ZCROPCDE=LCCWDATA->CMDATA;/* COPY 3270 COMMAND     1050
*                                                            @ZA08949*/
         L     @11,LCPNXLCW(,LCPBREG)                              1050
         L     @15,LCCWDATA(,@11)                                  1050
         MVC   ZCROPCDE(1,ZCRREG),CMDATA(@15)                      1050
*               LCCWOP=SRTAB(ZCROPCDE+1);/* XLATE IT TO AN LCCW OP 1051
*                                      CODE                  @ZA08949*/
         SLR   @15,@15                                             1051
         IC    @15,ZCROPCDE(,ZCRREG)                               1051
         SLR   @14,@14                                             1051
         IC    @14,SRTAB(@15)                                      1051
         STC   @14,LCCWOP(,@11)                                    1051
*/* THE 1ST LCCW CONTAINS IMMEDIATE DATA, WHICH IS MAPPED BY ISTRH   */
*                                                                  1052
*               IF RHBB='1'B THEN   /* BEGIN BRACKET REQUESTED?    1052
*                                                            @ZA08949*/
         TM    RHBB+4(R10),B'10000000'                             1052
         BNO   @RF01052                                            1052
*                 LCCWSI='1'B;      /* YES, IT XLATES TO START DIALOG
*                                                            @ZA08949*/
         OI    LCCWSI(@11),B'10000000'                             1053
*               ELSE                                               1054
*                 ;                 /* BEGIN BRACKET NOT REQUESTED 1054
*                                                            @ZA08949*/
@RF01052 DS    0H                                                  1055
*               IF RHEB='1'B THEN   /* END BRACKET SPECIFIED?      1055
*                                                            @ZA08949*/
         TM    RHEB+4(R10),B'01000000'                             1055
         BNO   @RF01055                                            1055
*                 LCCWSD='1'B;      /* YES, INDICATE END DIALOG    1056
*                                                            @ZA08949*/
         L     @11,LCPNXLCW(,LCPBREG)                              1056
         OI    LCCWSD(@11),B'01000000'                             1056
*               ELSE                                               1057
*                 ;                 /* END BRACKET NO SPECIFIED    1057
*                                                            @ZA08949*/
@RF01055 DS    0H                                                  1058
*               IF RHEXCEPT='1'B THEN/* EXCEPTION RESPONSE ? @ZA08949*/
         TM    RHEXCEPT+4(R10),B'00010000'                         1058
         BNO   @RF01058                                            1058
*                 ZCREXRES='1'B;    /* FLAG THE ZCR          @ZA08949*/
         OI    ZCREXRES(ZCRREG),B'00001000'                        1059
*               ELSE                                               1060
*                 ;                 /* NO EXCEPTION RESPONSE REQUEST
*                                                            @ZA08949*/
@RF01058 DS    0H                                                  1061
*               LCCWDATA=LCCWDATA+1;/* POINT TO NEXT DATA BYTE, I.E.
*                                      COMMAND IS NOT DATA   @ZA08949*/
         L     @11,LCPNXLCW(,LCPBREG)                              1061
         LA    @15,1                                               1061
         AL    @15,LCCWDATA(,@11)                                  1061
         ST    @15,LCCWDATA(,@11)                                  1061
*               LCCWCNT=LCCWCNT-1;  /* ADJUST COUNT ACCORDINGLY    1062
*                                                            @ZA08949*/
         LH    @15,LCCWCNT(,@11)                                   1062
         N     @15,@CF04731                                        1062
         BCTR  @15,0                                               1062
         STH   @15,LCCWCNT(,@11)                                   1062
*               RFY                                                1063
*                 R15 RSTD;         /*                       @ZA08949*/
*             END;                  /* END AUTHORIZED PATH   @ZA08949*/
*/*VMDESET  (15,VTAM)                                                */
*                                                                  1065
*           DO;                     /* INVOKE MODESET MACRO          */
@RC00920 DS    0H                                                  1066
*             GEN;                                                 1066
         MODESET EXTKEY=VTAM,WORKREG=2
*             RFY                                                  1067
*              (GPR15P) RSTD;                                      1067
*             GPR15F=0;                                            1068
         SLR   GPR15F,GPR15F                                       1068
*             RFY                                                  1069
*              (GPR15P) UNRSTD;     /* PUT RETURN CODE IN RCREG      */
*           END;                    /* VMDESET GET BACK INTO VTAM KEY*/
*         END;                      /* END OK VMDESET LEG            */
*       ELSE                        /* BAD VMDESET                   */
*         DO;                                                      1072
         B     @RC00918                                            1072
@RF00918 DS    0H                                                  1073
*           LCPZRT00='1'B;          /* LOGIC ERROR                   */
         OI    LCPZRT00(LCPBREG),B'10000000'                       1073
*           LCPMNRCD=FRMVTAME;      /* VTAM ERROR                    */
         MVI   LCPMNRCD(LCPBREG),X'A0'                             1074
*         END;                      /* END BAD VMDESET PATH          */
*     END;                          /* END 2ND LCCW VALID PATH       */
@RC00918 DS    0H                                                  1077
*/* SEGMENT(BF0B045)FINISH                                           */
*                                                                  1077
*   DO;                                                            1077
@RC00904 DS    0H                                                  1078
*     GOTO BF0B045#;                                               1078
         B     BF0B045#                                            1078
*BF0B045@:                                                         1079
*   END;                                                           1079
*                                                                  1079
BF0B045@ DS    0H                                                  1080
*/* ZERORU - THIS SEGMENT CHECKS IF RU INDICATES                     */
*/*          THAT A DISCONNECT SHOULD BE SENT OUT.                   */
*/*          ERROR IS SET ON ANY OTHER RH.                           */
*/* SEGMENT(ZERORU)START                                             */
*                                                                  1080
*   DO;                                                            1080
*     GOTO ZERORU@;                                                1081
         B     ZERORU@                                             1081
*ZERORU:                                                           1082
*   END;                                                           1082
ZERORU   DS    0H                                                  1083
*   IF RHBB='0'B&                   /* NOT BEGIN BRACKIT BUT @ZA28604*/
*       RHEB='1'B THEN              /* END BRACKET           @ZA28604*/
         TM    RHEB+4(R10),B'01000000'                             1083
         BNO   @RF01083                                            1083
         TM    RHBB+4(R10),B'10000000'                             1083
         BNZ   @RF01083                                            1083
*     DO;                                                          1084
*       ISTLCCW=''B;                /* ZERO LCCW ADDRESS     @ZA28604*/
         L     @14,LCPNXLCW(,LCPBREG)                              1085
         XC    ISTLCCW(8,@14),ISTLCCW(@14)                         1085
*       LCCWOP=LD;                  /* CMND = DISCONNECT     @ZA28604*/
         MVI   LCCWOP(@14),X'23'                                   1086
*       FMCZF002='1'B;              /* SET I/O SCHD SUSPENDED      1087
*                                                            @ZA28604*/
         OI    FMCZF002(FMCBREG),B'01000000'                       1087
*     END;                                                         1088
*   ELSE                            /* NOT VALID RH          @ZA28604*/
*     DO;                                                          1089
         B     @RC01083                                            1089
@RF01083 DS    0H                                                  1090
*       LCPZRT01='1'B;              /* CONTROL BLOCK ERROR   @ZA28604*/
         OI    LCPZRT01(LCPBREG),B'01000000'                       1090
*       LCPMNRCD=FRMINDTR;          /* INVALID DATA          @ZA28604*/
         MVI   LCPMNRCD(LCPBREG),X'17'                             1091
*     END;                                                         1092
*                                                                  1092
*/* SEGMENT(ZERORU)FINISH                                            */
*                                                                  1093
*   DO;                                                            1093
@RC01083 DS    0H                                                  1094
*     GOTO ZERORU#;                                                1094
         B     ZERORU#                                             1094
*ZERORU@:                                                          1095
*   END;                                                           1095
*                                                                  1095
ZERORU@  DS    0H                                                  1096
*/* TPEPILOG                                                         */
*                                                                  1096
*   GEN(PRINT OFF);                                                1096
         PRINT OFF
*/* TEMPLATE FOR CHAIN FIELD OF WORK ELEMENT */                    1097
*DCL  1  ISTWKE BDY(WORD) BASED(WKEPTR),                           1097
*        2  * CHAR(4),                 /* SPACE                       *
*        2  WKECHAIN PTR(31),          /* CHAIN POINTER               *
*           3 WKEFLAGS BIT(8),         /* FLAGS                       *
*             4 WKEGATE  BIT(1),       /* GATE BIT                    *
*             4 *        BIT(7),       /* RESERVED                    *
*           3 WKECHNGP PTR(24);        /* PTR ADDRESS                 *
*   GEN(PRINT ON);                                                 1098
*                                                                  1098
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1099
*   END ISTZBF0B                                                   1099
*                                                                  1099
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  1099
*       ;                                                          1099
@EL00001 DS    0H                                                  1099
@EF00001 DS    0H                                                  1099
@ER00001 BR    @14                                                 1099
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTZBF0B CSECT
         DS    0F
@CF00073 DC    F'4'
@CF00071 DC    F'8'
@CF01279 DC    XL4'7FFFFFFF'
@CF01281 DC    XL4'80000000'
@CF01305 DC    XL4'08000000'
@CF04556 DC    XL4'00FFFFFF'
@CF04731 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IOSBPTR  DS    A
SRBPTR   DS    A
CVTPTR   DS    A
FSBPTR   DS    A
LCPBPTR  DS    A
FMCBPTR  DS    A
DNCBPTR  DS    A
BDUPTR   DS    A
BTUPTR   DS    A
WKEPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTZBF0B CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ATOP     DC    AL1(FMCPAB5-ISTFMCB)
@CC04525 DC    C'BC0B'
BASICTRT DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000011'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'000D1600001D122D0000000000000000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
RPHPTR   EQU   @01
R0       EQU   @00
RPHREG   EQU   @01
VTCVTREG EQU   @02
ICNCBREG EQU   @03
DNCBREG  EQU   @04
FMCBREG  EQU   @05
BFRREG   EQU   @06
LCPBREG  EQU   @07
LSCBREG  EQU   @07
ZCRREG   EQU   @08
WORK     EQU   @09
R10      EQU   @10
R12      EQU   @12
R13      EQU   @13
R15      EQU   @15
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
GPR03F   EQU   @03
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
R11      EQU   @11
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ATCLCPTR EQU   1032
CZMP0089 EQU   16
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00002 EQU   IOSB+20
IOSCSW   EQU   @NM00002+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
CVTMAP   EQU   0
CVT0VL00 EQU   CVTMAP+24
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABDVTA  EQU   ISTPAB+9
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTDYPAB EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ZSAZACTV EQU   ZSAZSVMS
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZTRAC EQU   ISTZSAVE+36
ISTFDB   EQU   0
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBTYPE  EQU   FSBFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWSI   EQU   LCCWOP
LCCWSD   EQU   LCCWOP
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWCC   EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWLSI  EQU   LCCWFLAG
LCCWCNT  EQU   ISTLCCW+2
LCCWDATA EQU   ISTLCCW+4
ISTLSCB  EQU   0
LSC1WORD EQU   ISTLSCB
LSCREQTG EQU   LSC1WORD+2
LSCZRT02 EQU   LSCREQTG
LSCZRT03 EQU   LSCREQTG
LSCZRT04 EQU   LSCREQTG
LSCZRT05 EQU   LSCREQTG
LSCZRT06 EQU   LSCREQTG
LSCZRT07 EQU   LSCREQTG
LSCZMNRC EQU   LSCREQTG+1
LSCZRT08 EQU   LSCZMNRC
LSCZRT09 EQU   LSCZMNRC
LSCCHAIN EQU   ISTLSCB+4
LSCCHAI1 EQU   LSCCHAIN
LSCRUCNT EQU   ISTLSCB+8
LSCFLGS  EQU   ISTLSCB+9
LSCSEQ   EQU   ISTLSCB+10
LSCLCPBA EQU   ISTLSCB+16
LSCLCCWA EQU   ISTLSCB+20
LSCFDBA  EQU   ISTLSCB+24
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZRT00 EQU   LCPFLAGS
LCPZRT01 EQU   LCPFLAGS
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPSTYPE EQU   ISTLCPB+36
LCPFLG1  EQU   ISTLCPB+37
LCPINTER EQU   LCPFLG1
LCPLCCWC EQU   ISTLCPB+38
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPRSTQH EQU   LCPLCCW
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSHEDI EQU   ZCRFLGS2
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRCNLXL EQU   ZCRRESET
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRLCSYN EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRPFLGS EQU   ISTZCRR+17
ZCRQAHED EQU   ZCRPFLGS
ZCRIBPR  EQU   ISTZCRR+18
ZCR3270  EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCRSCPSW EQU   ISTZCRR+19
ZCRCRLCP EQU   ISTZCRR+20
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCROPCDE EQU   ISTZCRR+183
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00046 EQU   LOKCHNG+2
ISTFMCB  EQU   0
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCPAB3  EQU   ISTFMCB+96
FMCPAB5  EQU   ISTFMCB+128
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCCIPI  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCONF  EQU   FMCSSTAT
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF001 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF006 EQU   FMCZFLAG
FMCZFA06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFC06 EQU   FMCZF006
FMCZFD06 EQU   FMCZF006+1
FMCZF010 EQU   FMCZFLAG+2
FMCSHEDQ EQU   FMCVS1+8
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCZX003 EQU   FMCVS1+30
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTZLBVT EQU   0
ZLBZCFAI EQU   ISTZLBVT+8
ISTZPSVT EQU   0
ZPSZDFA0 EQU   ISTZPSVT
ZPSZDFH0 EQU   ISTZPSVT+12
ZPSZBFZ0 EQU   ISTZPSVT+28
ZPSZBFMB EQU   ISTZPSVT+32
ZPSZTRTT EQU   ISTZPSVT+40
ISTNCB   EQU   0
NCBTYPE  EQU   ISTNCB
NCBNSNA  EQU   ISTNCB+12
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
NCBCONF  EQU   NCBFLAG1
NCBDEVCH EQU   ISTNCB+36
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHPABOF EQU   ISTRPH+20
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTDNCB  EQU   0
DNCNCB   EQU   ISTDNCB
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCBSCED EQU   DNCOS+2
DNCLICP  EQU   DNCBSCED
DNCACIP  EQU   DNCBSCED+1
DNCZV001 EQU   DNCOS+17
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
ISTICNCB EQU   0
ICNCB    EQU   ISTICNCB
@NM00060 EQU   ISTICNCB+53
ICNZPAB1 EQU   ISTICNCB+64
ICNCKFLD EQU   ISTICNCB+96
ICNFLAG  EQU   ISTICNCB+100
ICNZF006 EQU   ICNFLAG
ICNSLOW  EQU   ICNFLAG
ICNFFLAG EQU   ISTICNCB+101
ICNZSWS  EQU   ISTICNCB+102
ICNFLAG2 EQU   ISTICNCB+236
ICNZD001 EQU   ISTICNCB+288
ICNWSCCW EQU   ICNZD001
ICNZD002 EQU   ISTICNCB+296
ICNZD003 EQU   ISTICNCB+320
ICNRSCCW EQU   ICNZD003
ICNZD004 EQU   ISTICNCB+328
ICNZS1VR EQU   ISTICNCB+348
ICNSRV02 EQU   ICNZS1VR
ICNDIEWA EQU   ICNSRV02
ICNDCDEB EQU   ISTICNCB+480
ICNDIDEB EQU   ICNDCDEB+12
ICNZFLAG EQU   ISTICNCB+508
ICNZH002 EQU   ISTICNCB+509
ICNZS002 EQU   ICNZH002
ICNZS003 EQU   ICNZH002
ICNZS004 EQU   ICNZH002
ICNZS006 EQU   ICNZH002
ICNZS007 EQU   ICNZH002
ICNZS008 EQU   ICNZH002
ICNZS009 EQU   ICNZH002+1
ICNZS00A EQU   ICNZH002+1
ICNZCONS EQU   ISTICNCB+680
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00074 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCZPSVT EQU   ATCAOSM+72
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00076 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTBDU   EQU   0
BDUMODIF EQU   ISTBDU+1
BDUMOD1  EQU   BDUMODIF
BDUDAF   EQU   ISTBDU+2
BDUFUNC  EQU   BDUDAF
BDUCHECK EQU   BDUFUNC
BDUFLAGS EQU   BDUDAF+1
ISTBTU   EQU   0
BTUBTH   EQU   ISTBTU
BTUFID   EQU   BTUBTH
BTUREQ   EQU   BTUBTH+6
BTURQFLG EQU   BTUREQ
BTURH    EQU   BTUBTH+10
BTUSYSTR EQU   ISTBTU+18
ISTLH    EQU   0
ISTTH    EQU   0
THFLAG1  EQU   ISTTH
THFLGA   EQU   THFLAG1
THMPF    EQU   THFLGA
THFLGB   EQU   THFLAG1+1
ISTTH2   EQU   0
TH2FLAG1 EQU   ISTTH2
TH2MPF   EQU   TH2FLAG1
ISTZOBUF EQU   0
ZOBFSM   EQU   ISTZOBUF+4
ZOBLNG1  EQU   ZOBFSM
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTZIBUF EQU   0
ZIBFSM   EQU   ISTZIBUF+4
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RH2      EQU   RHFLAGS+1
RHEXCEPT EQU   RH2
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
RHBB     EQU   RH3
RHEB     EQU   RH3
INDEX    EQU   0
ADDRESS  EQU   0
CMDATA   EQU   0
DVTOFF   EQU   0
ISTZBFMB EQU   0
ISTZBFZ0 EQU   0
ISTZDFA0 EQU   0
ISTZDFH0 EQU   0
ISTZCF0B EQU   0
FMZL0038 EQU   0
ISTWKE   EQU   0
WKECHAIN EQU   ISTWKE+4
WKEFLAGS EQU   WKECHAIN
SAV0089  EQU   0
SAV10089 EQU   SAV0089
SAV20089 EQU   SAV0089+4
SAV40089 EQU   SAV0089+8
SAV60089 EQU   SAV0089+12
SAVE0089 EQU   SAV0089+16
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTTCBA  EQU   ISTPST+16
PSTDMPS  EQU   ISTPST+132
ZIBSRB   EQU   0
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00039 EQU   FSBRQTAG
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
ZOBDLBT  EQU   ISTZOBUF
ZOBDLBCM EQU   ZOBDLBT
ZOBLNG2  EQU   ZOBDLBCM+14
@NM00081 EQU   ZOBDLBCM+25
ZOBBTU   EQU   ZOBDLBT+28
ZOBWCC   EQU   ZOBDLBT+48
ZOBECCC  EQU   ZOBDLBT+50
ZOBDIO   EQU   ZOBFSM
ZOBCCW2  EQU   ZOBDIO+8
ZOBCPTCC EQU   ZOBCCW2
ZOBFLAGS EQU   ZOBCCW2+5
ZOBCCW3  EQU   ZOBDIO+16
ZOBCPTRC EQU   ZOBCCW3
ZOBCPN2C EQU   ZOBCPTRC
ZOBCPTRA EQU   ZOBCCW3+1
@NM00085 EQU   ZOBBTU
ZIBDIO   EQU   ZIBFSM
ZIBCCW2  EQU   ZIBDIO+8
ZIBCPTCC EQU   ZIBCCW2
ZIBAIO   EQU   ISTZIBUF
ZIBAIOCM EQU   ZIBAIO
ZIBFIB   EQU   ZIBAIO+16
ZIBFSB   EQU   ZIBFIB
ZIBMDREC EQU   ZIBFSB+4
ZIBMDRIN EQU   ZIBFSB+28
ZIBBTU   EQU   ZIBFIB+32
@NM00096 EQU   ZIBBTU+12
ZIBFID1  EQU   @NM00096+1
ZIBFITXT EQU   ZIBFID1
ZIBSIB   EQU   ZIBFIB
ZIBREC   EQU   ZIBMDRIN
ZIBRECPL EQU   ZIBREC
ZIBRECHD EQU   ZIBRECPL
ZIBRECRS EQU   ZIBREC+8
ZIBRECDT EQU   ZIBREC+10
ZIBMDRRC EQU   ZIBMDREC
ZIBRCPL  EQU   ZIBMDRRC
ZIBRCDT  EQU   ZIBMDRRC+24
@NM00098 EQU   ZIBBTU
SRTAB    EQU   BASICTRT
SRB      EQU   SRBSECT
ZOBTEXT  EQU   ZOBBTU
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ZIBTH2   EQU   @NM00098+4
ZIBLH    EQU   @NM00098
ZIBRCTXT EQU   ZIBMDRRC+36
ZIBRCRID EQU   ZIBRCDT+10
ZIBRCNAM EQU   ZIBRCDT+2
ZIBRCUA  EQU   ZIBRCDT
ZIBRCPUI EQU   ZIBRCPL+20
ZIBRCPUN EQU   ZIBRCPL+16
ZIBRCTIM EQU   ZIBRCPL+12
ZIBRCDAT EQU   ZIBRCPL+8
ZIBRCRS1 EQU   ZIBRCPL+6
ZIBRCSID EQU   ZIBRCPL+5
ZIBRCID  EQU   ZIBRCPL+4
ZIBRCSW  EQU   ZIBRCPL+2
ZIBRCSYR EQU   ZIBRCPL+1
ZIBRCL   EQU   ZIBRCPL
ZIBRECTX EQU   ZIBREC+22
ZIBRECID EQU   ZIBRECDT+10
ZIBRECNA EQU   ZIBRECDT+2
ZIBRECUA EQU   ZIBRECDT
ZIBRECSV EQU   ZIBRECRS
ZIBRECDA EQU   ZIBRECPL+4
ZIBRECSI EQU   ZIBRECHD+3
ZIBRECDV EQU   ZIBRECHD+2
ZIBRECFL EQU   ZIBRECHD+1
ZIBRECTY EQU   ZIBRECHD
ZIBTEXT  EQU   ZIBSIB+4
ZIBRSV04 EQU   ZIBSIB
ZIBTEXT2 EQU   ZIBFITXT
ZIBTEXT1 EQU   ZIBFIB+52
@NM00097 EQU   @NM00096
ZIBFDBS  EQU   ZIBBTU
@NM00095 EQU   ZIBMDREC
@NM00094 EQU   ZIBFSB
ZIBLNG2  EQU   ZIBAIOCM+14
ZIBRSV03 EQU   ZIBAIOCM+13
ZIBWKBYT EQU   ZIBAIOCM+12
ZIBFDBZ  EQU   ZIBAIOCM
ZIBCPNPK EQU   ZIBCCW2+6
ZIBRSV02 EQU   ZIBCCW2+5
ZIBCPTPF EQU   ZIBCCW2+4
ZIBCPTCA EQU   ZIBCCW2+1
ZIBCPNPC EQU   ZIBCPTCC
ZIBCPRDK EQU   ZIBDIO+6
ZIBRSV01 EQU   ZIBDIO+5
ZIBCPRDF EQU   ZIBDIO+4
ZIBCPTXA EQU   ZIBDIO+1
ZIBCPRDC EQU   ZIBDIO
ZOBTH2   EQU   @NM00085+4
ZOBLH    EQU   @NM00085
ZOBCPN2K EQU   ZOBCCW3+6
ZOBRSV99 EQU   ZOBCCW3+5
ZOBCPN2F EQU   ZOBCCW3+4
ZOBCPTC2 EQU   ZOBCPTRA
ZOBCPTC1 EQU   ZOBCPN2C
ZOBCPNPK EQU   ZOBCCW2+6
ZOBRSV03 EQU   ZOBFLAGS
ZOBRT08  EQU   ZOBFLAGS
ZOBRT06  EQU   ZOBFLAGS
ZOBCPNPF EQU   ZOBCCW2+4
ZOBCPTCA EQU   ZOBCCW2+1
ZOBCPNPC EQU   ZOBCPTCC
ZOBCPWTK EQU   ZOBDIO+6
ZOBRSV02 EQU   ZOBDIO+5
ZOBCPWTF EQU   ZOBDIO+4
ZOBCPTXA EQU   ZOBDIO+1
ZOBCPWTC EQU   ZOBDIO
ZOBRSV09 EQU   ZOBECCC
ZOBECSP  EQU   ZOBECCC
ZOBRSV08 EQU   ZOBECCC
ZOBRSV07 EQU   ZOBDLBT+49
ZOBRSV06 EQU   ZOBWCC
ZOBWCSP  EQU   ZOBWCC
ZOBRSV05 EQU   ZOBWCC
ZOBRSV10 EQU   ZOBDLBCM+26
@NM00084 EQU   @NM00081
@NM00083 EQU   @NM00081
@NM00082 EQU   @NM00081
ZOBRSV04 EQU   ZOBDLBCM+16
ZOBRSV01 EQU   ZOBDLBCM+12
ZOBFDB   EQU   ZOBDLBCM
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
FSBRT0B  EQU   @NM00039+1
FSBRT0A  EQU   @NM00039+1
FSBRT09  EQU   @NM00039+1
FSBRT08  EQU   @NM00039+1
FSBRT07  EQU   @NM00039
FSBRT06  EQU   @NM00039
FSBRT05  EQU   @NM00039
FSBRT04  EQU   @NM00039
FSBRT03  EQU   @NM00039
FSBRT02  EQU   @NM00039
FSBRT01  EQU   @NM00039
FSBRT00  EQU   @NM00039
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00007 EQU   IOSPCISC+4
@NM00006 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00005 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
PSTDRDYQ EQU   PSTDMPS+1
@NM00100 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTSMDYP EQU   ISTPST+64
PSTCRRS  EQU   ISTPST+60
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTMPSTP EQU   ISTPST+20
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00099 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
WKECHNGP EQU   WKECHAIN+1
@NM00102 EQU   WKEFLAGS
WKEGATE  EQU   WKEFLAGS
@NM00101 EQU   ISTWKE
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHCHAIN  EQU   RH1
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
RHQS     EQU   RH1
ZIBLNG1  EQU   ZIBFSM
ZIBCHAIN EQU   ISTZIBUF
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00093 EQU   ISTAPCRR+137
@NM00092 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00091 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00090 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00089 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00088 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00087 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00086 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZOBCHAIN EQU   ISTZOBUF
TH2SNF   EQU   ISTTH2+4
TH2OAF   EQU   ISTTH2+3
TH2DAF   EQU   ISTTH2+2
TH2CDF   EQU   TH2FLAG1+1
TH2SEF   EQU   TH2FLAG1+1
TH2PYF   EQU   TH2FLAG1+1
TH2AFI   EQU   TH2FLAG1
TH2PSI   EQU   TH2FLAG1
TH2CMPLI EQU   TH2MPF
TH2RHI   EQU   TH2MPF
TH2FID   EQU   TH2FLAG1
THDCF    EQU   ISTTH+8
THSNF    EQU   ISTTH+6
THOAF    EQU   ISTTH+4
THDAF    EQU   ISTTH+2
THCDF    EQU   THFLGB
THSEF    EQU   THFLGB
THPYF    EQU   THFLGB
THAFI    EQU   THFLGA
THPSI    EQU   THFLGA
THCMPLI  EQU   THMPF
THRHI    EQU   THMPF
THFID    EQU   THFLAG1
LHVDATA  EQU   ISTLH+4
LHFUNCT  EQU   ISTLH+3
@NM00080 EQU   ISTLH+2
LHLEN    EQU   ISTLH
BTUTEXT  EQU   ISTBTU+20
BTUEXTR  EQU   ISTBTU+19
BTURSV02 EQU   BTUSYSTR
BTUPHASE EQU   BTUSYSTR
BTURSV01 EQU   BTUSYSTR
BTUBDU   EQU   ISTBTU+14
BTUPAD   EQU   BTURH+3
BTURH3   EQU   BTURH+2
BTURH2   EQU   BTURH+1
BTURH1   EQU   BTURH
BTUDCF   EQU   BTUBTH+8
BTUZRTSC EQU   BTURQFLG+1
BTUZRT0B EQU   BTURQFLG+1
BTUZRT0A EQU   BTURQFLG+1
BTUZRT09 EQU   BTURQFLG+1
BTUZRT08 EQU   BTURQFLG+1
BTUZRT07 EQU   BTURQFLG
BTUZRT06 EQU   BTURQFLG
BTUZRT05 EQU   BTURQFLG
BTUZRT04 EQU   BTURQFLG
BTUZRT03 EQU   BTURQFLG
BTUZRT02 EQU   BTURQFLG
BTUZRT01 EQU   BTURQFLG
BTUZRT00 EQU   BTURQFLG
BTUSORCE EQU   BTUBTH+4
BTUDEST  EQU   BTUBTH+2
BTUCDF   EQU   BTUFID+1
BTUSCF   EQU   BTUFID+1
BTUPRY   EQU   BTUFID+1
BTUASFL  EQU   BTUFID
BTUPSFL  EQU   BTUFID
BTUMPF   EQU   BTUFID
BTUFIDNO EQU   BTUFID
BDURSV04 EQU   BDUFLAGS
BDURTOE  EQU   BDUFLAGS
BDUSTPR  EQU   BDUFLAGS
BDURSV03 EQU   BDUFLAGS
BDUALT   EQU   BDUFUNC
BDUNACK  EQU   BDUFUNC
BDUACK   EQU   BDUFUNC
BDUTRPM  EQU   BDUFUNC
BDUFBMI  EQU   BDUFUNC
BDULDGPH EQU   BDUFUNC
BDUHEADP EQU   BDUFUNC
BDUSOH   EQU   BDUCHECK
BDURSV01 EQU   BDUMODIF
BDUMOD0  EQU   BDUMOD1
BDUCOMND EQU   ISTBDU
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00079 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00078 EQU   ATCAOSM+333
@NM00077 EQU   @NM00076
ATCSNUF  EQU   @NM00076
ATCOPKL  EQU   @NM00076
ATCABEN  EQU   @NM00076
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00075 EQU   @NM00074
ATCVTMAB EQU   @NM00074
@NM00073 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00072 EQU   ISTATCVT+819
@NM00071 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00070 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00069 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00068 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
ICNZCON6 EQU   ICNZCONS+10
ICNZCON5 EQU   ICNZCONS+8
ICNZCON4 EQU   ICNZCONS+6
ICNZCON3 EQU   ICNZCONS+4
ICNZCON2 EQU   ICNZCONS+2
ICNZCON1 EQU   ICNZCONS
ICNZATSA EQU   ISTICNCB+676
ICNZX012 EQU   ISTICNCB+675
ICNZX011 EQU   ISTICNCB+674
ICNZX010 EQU   ISTICNCB+672
ICNSRB   EQU   ISTICNCB+628
ICNIOSB  EQU   ISTICNCB+520
ICNZC001 EQU   ISTICNCB+512
ICNZX013 EQU   ISTICNCB+511
ICNZS010 EQU   ICNZH002+1
ICNZS00F EQU   ICNZH002+1
ICNZS00E EQU   ICNZH002+1
ICNZS00D EQU   ICNZH002+1
ICNZS00C EQU   ICNZH002+1
ICNZS00B EQU   ICNZH002+1
ICNZS01A EQU   ICNZS00A
ICNZS019 EQU   ICNZS009
ICNZS018 EQU   ICNZS008
ICNZS017 EQU   ICNZS007
ICNZS016 EQU   ICNZS006
ICNZS005 EQU   ICNZH002
ICNZS014 EQU   ICNZS004
ICNZS013 EQU   ICNZS003
ICNZS012 EQU   ICNZS002
ICNZS001 EQU   ICNZH002
ICNZF028 EQU   ICNZFLAG
ICNZF027 EQU   ICNZFLAG
ICNZF026 EQU   ICNZFLAG
ICNZF025 EQU   ICNZFLAG
ICNZF024 EQU   ICNZFLAG
ICNZF023 EQU   ICNZFLAG
ICNZF022 EQU   ICNZFLAG
ICNZF021 EQU   ICNZFLAG
ICNWORD5 EQU   ISTICNCB+504
ICNMSIZE EQU   ISTICNCB+500
ICNLCVTA EQU   ISTICNCB+496
ICNDEBAD EQU   ICNDIDEB+1
ICNDCBIF EQU   ICNDIDEB
ICNUCBAD EQU   ICNDCDEB+8
ICNAPPAD EQU   ICNDCDEB+5
ICNEXSCL EQU   ICNDCDEB+4
ICNDCBAD EQU   ICNDCDEB+1
ICNDEBID EQU   ICNDCDEB
@NM00067 EQU   ISTICNCB+477
ICNERCNT EQU   ISTICNCB+476
ICNZX002 EQU   ISTICNCB+475
ICNZX001 EQU   ISTICNCB+474
ICNZH001 EQU   ISTICNCB+472
ICNZSW3R EQU   ISTICNCB+468
ICNZSW2R EQU   ISTICNCB+464
ICNZSW1R EQU   ISTICNCB+460
ICNZS4VR EQU   ISTICNCB+436
ICNZS4RR EQU   ISTICNCB+432
ICNZS4FC EQU   ISTICNCB+428
ICNZS4BC EQU   ISTICNCB+424
ICNZS3VR EQU   ISTICNCB+400
ICNZS3RR EQU   ISTICNCB+396
ICNZS3FC EQU   ISTICNCB+392
ICNZS3BC EQU   ISTICNCB+388
ICNZS1RC EQU   ICNZS1VR+36
ICNDIEW3 EQU   ICNDIEWA+8
ICNDIEW2 EQU   ICNDIEWA+4
ICNDIEW1 EQU   ICNDIEWA
ICNZS1RR EQU   ISTICNCB+344
ICNZS1FC EQU   ISTICNCB+340
ICNZS1BC EQU   ISTICNCB+336
ICNRSTIC EQU   ICNZD004
ICNRDCOD EQU   ICNRSCCW
ICNZD006 EQU   ISTICNCB+312
ICNZD005 EQU   ISTICNCB+304
ICNWSTIC EQU   ICNZD002
ICNWRCOD EQU   ICNWSCCW
ICNZV008 EQU   ISTICNCB+284
ICNZV007 EQU   ISTICNCB+280
ICNZV006 EQU   ISTICNCB+276
ICNZV005 EQU   ISTICNCB+272
ICNZV004 EQU   ISTICNCB+268
ICNLSTIT EQU   ISTICNCB+264
ICNLSTIF EQU   ISTICNCB+260
ICNZV002 EQU   ISTICNCB+256
ICNZV001 EQU   ISTICNCB+252
ICNZV00A EQU   ISTICNCB+249
ICNBUFF  EQU   ISTICNCB+248
ICNCPQ   EQU   ISTICNCB+244
ICNNICNA EQU   ISTICNCB+240
@NM00066 EQU   ICNFLAG2+2
ICNZF019 EQU   ICNFLAG2+2
ICNZF018 EQU   ICNFLAG2+2
ICNZF017 EQU   ICNFLAG2+2
ICNZF016 EQU   ICNFLAG2+2
ICNZF015 EQU   ICNFLAG2+2
ICNMSG   EQU   ICNFLAG2+1
ICNCLOSE EQU   ICNFLAG2+1
ICNZF014 EQU   ICNFLAG2+1
ICNZF013 EQU   ICNFLAG2+1
ICNZF012 EQU   ICNFLAG2+1
ICNZF011 EQU   ICNFLAG2+1
ICNZF00D EQU   ICNFLAG2+1
ICNZF00B EQU   ICNFLAG2+1
ICNZF00A EQU   ICNFLAG2
ICNZF008 EQU   ICNFLAG2
ICNZF007 EQU   ICNFLAG2
ICNZF005 EQU   ICNFLAG2
ICNZF004 EQU   ICNFLAG2
ICNZF003 EQU   ICNFLAG2
ICNZF002 EQU   ICNFLAG2
ICNZF001 EQU   ICNFLAG2
ICNLOCK  EQU   ISTICNCB+232
ICNLICNA EQU   ISTICNCB+228
ICNRPH   EQU   ISTICNCB+120
ICNZV003 EQU   ISTICNCB+116
ICNLAST  EQU   ISTICNCB+112
ICNLSTBT EQU   ISTICNCB+108
ICNSIOQ  EQU   ISTICNCB+104
ICNFLAG1 EQU   ISTICNCB+103
ICNZSW08 EQU   ICNZSWS
ICNZSW07 EQU   ICNZSWS
ICNZSW06 EQU   ICNZSWS
ICNZSW05 EQU   ICNZSWS
ICNZSW04 EQU   ICNZSWS
ICNZSW03 EQU   ICNZSWS
ICNZSW02 EQU   ICNZSWS
ICNZSW01 EQU   ICNZSWS
ICNZFF69 EQU   ICNFFLAG
@NM00065 EQU   ICNFFLAG
ICNZFF05 EQU   ICNFFLAG
ICNZFF04 EQU   ICNFFLAG
ICNZFF03 EQU   ICNFFLAG
ICNZFF02 EQU   ICNFFLAG
ICNZFF01 EQU   ICNFFLAG
ICNZFF00 EQU   ICNFFLAG
@NM00064 EQU   ICNFLAG
ICNZCRIT EQU   ICNFLAG
ICNSTART EQU   ICNFLAG
ICNZF010 EQU   ICNFLAG
ICNZF00F EQU   ICNFLAG
ICNZF00E EQU   ICNFLAG
ICNCONF  EQU   ICNZF006
ICNCKPAB EQU   ICNCKFLD+1
ICNRSV07 EQU   ICNCKFLD
ICNCKBIT EQU   ICNCKFLD
ICNZPAB4 EQU   ISTICNCB+80
ICNRSV01 EQU   ISTICNCB+60
@NM00063 EQU   ISTICNCB+56
@NM00062 EQU   ISTICNCB+54
@NM00061 EQU   @NM00060
ICNRRY   EQU   @NM00060
ICNLCLUS EQU   @NM00060
ICNROLN  EQU   @NM00060
ICNRNRY  EQU   @NM00060
ICNLNKMD EQU   ISTICNCB+52
ICNCUUA  EQU   ISTICNCB+48
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF006 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCCONT  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00059 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00058 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00057 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00056 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBDAF   EQU   ISTNCB+2
NCBLNGTH EQU   ISTNCB+1
ZPSZDFQR EQU   ISTZPSVT+80
ZPSZDFPR EQU   ISTZPSVT+76
ZPSZDFXR EQU   ISTZPSVT+72
ZPSZWRD5 EQU   ISTZPSVT+68
ZPSZWRD4 EQU   ISTZPSVT+64
ZPSZDFMB EQU   ISTZPSVT+60
ZPSZDFMF EQU   ISTZPSVT+56
ZPSZDFNB EQU   ISTZPSVT+52
@NM00055 EQU   ISTZPSVT+48
ZPSZDFF0 EQU   ISTZPSVT+44
ZPSZBFOB EQU   ISTZPSVT+36
ZPSZBFY0 EQU   ISTZPSVT+24
ZPSZDFI0 EQU   ISTZPSVT+20
ZPSZDFB0 EQU   ISTZPSVT+16
ZPSZDFD0 EQU   ISTZPSVT+8
ZPSZDFC0 EQU   ISTZPSVT+4
ZLBZBFSC EQU   ISTZLBVT+88
ZLBZIFVB EQU   ISTZLBVT+84
ZLBZIFUB EQU   ISTZLBVT+80
ZLBZIFSB EQU   ISTZLBVT+76
ZLBRSV22 EQU   ISTZLBVT+72
ZLBZBFID EQU   ISTZLBVT+68
ZLBZBFX0 EQU   ISTZLBVT+64
ZLBRSV02 EQU   ISTZLBVT+60
ZLBRSV21 EQU   ISTZLBVT+56
ZLBZBFJB EQU   ISTZLBVT+52
ZLBZBFIB EQU   ISTZLBVT+48
ZLBZBFHB EQU   ISTZLBVT+44
ZLBZBFGB EQU   ISTZLBVT+40
ZLBZBFFB EQU   ISTZLBVT+36
ZLBZBFEB EQU   ISTZLBVT+32
ZLBZBFDB EQU   ISTZLBVT+28
ZLBZBFCB EQU   ISTZLBVT+24
ZLBZBFBB EQU   ISTZLBVT+20
ZLBZBFAB EQU   ISTZLBVT+16
ZLBZBFNB EQU   ISTZLBVT+12
ZLBZBF0B EQU   ISTZLBVT+4
ZLBZAF0B EQU   ISTZLBVT
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00054 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00053 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00052 EQU   FMCSHEAQ
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZF005 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00051 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB4  EQU   ISTFMCB+112
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00050 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00049 EQU   ISTFMCB+30
@NM00048 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDNCBA EQU   ISTFMCB+16
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCSAF   EQU   ISTFMCB+2
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
LOKXCL   EQU   @NM00046
LOKPRY   EQU   @NM00046
@NM00047 EQU   @NM00046
@NM00045 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00044 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
@NM00043 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00042 EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00041 EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
LCPFTYPE EQU   LCPRPHA
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LSCTLBAD EQU   ISTLSCB+28
LSCFDB2  EQU   LSCFDBA+1
LSCFDB1  EQU   LSCFDBA
LSCLCCW1 EQU   ISTLSCB+12
LSCRRCNT EQU   LSCSEQ+1
LSCRRCCT EQU   LSCSEQ
LSCATOP  EQU   LSCFLGS
LSCFREE  EQU   LSCFLGS
LSCDSTAT EQU   LSCFLGS
LSCEXRES EQU   LSCFLGS
LSCZRIMM EQU   LSCFLGS
LSCRSV01 EQU   LSCFLGS
LSCSMODE EQU   LSCFLGS
LSCZMIRC EQU   LSCRUCNT
LSCCHAI2 EQU   LSCCHAIN+1
LSCCHNG  EQU   LSCCHAI1
LSCZRTSC EQU   LSCZMNRC
LSCZRT0B EQU   LSCZMNRC
LSCZRT0A EQU   LSCZMNRC
LSCZRTL9 EQU   LSCZRT09
LSCZRTL8 EQU   LSCZRT08
LSCZRTL7 EQU   LSCZRT07
LSCZRTL6 EQU   LSCZRT06
LSCZRTL5 EQU   LSCZRT05
LSCZRTL4 EQU   LSCZRT04
LSCZRTL3 EQU   LSCZRT03
LSCZRTL2 EQU   LSCZRT02
LSCZRT01 EQU   LSCREQTG
LSCZRT00 EQU   LSCREQTG
LSCLNGTH EQU   LSC1WORD+1
LSCTYPE  EQU   LSC1WORD
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00040 EQU   LCCWRWOP
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
FSBFDB   EQU   ISTFSB+32
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00038 EQU   FSBSS2
@NM00037 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00036 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBLATOP EQU   FSBSFLGS
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FDBOFSET EQU   ISTFDB+10
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
FDBFDBA  EQU   ISTFDB
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00035 EQU   CVTFIX+248
@NM00034 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00009 EQU   SRBSECT+40
@NM00008 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00004 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00003 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00002
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00001 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
@NM00033 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00032 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00031 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00030 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00029 EQU   FLCFSA
@NM00028 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00027 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00026 EQU   FLCIOA
@NM00025 EQU   FLCMCLA+15
@NM00024 EQU   FLCMCLA+14
@NM00023 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00022 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00021 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00020 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00019 EQU   FLCPER
@NM00018 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00017 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00016 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00015 EQU   FLCPIILC
@NM00014 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00013 EQU   FLCSVILC
@NM00012 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00011 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00010 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00640 EQU   @RC00639
@RT00718 EQU   @RC00717
@RT00757 EQU   @RC00756
BF0B045# EQU   @RC00793
@RC00818 EQU   @RC00817
@RC00867 EQU   @RC00866
ZERORU#  EQU   @RC00904
@RT00868 EQU   @RC00867
@ENDDATA EQU   *
         END   ISTZBF0B,(C'PLS1938',0603,77356)
