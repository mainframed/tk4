         TITLE 'ISTZBF0L/A0L-VS1/M0L-VS2: 3270 S/R LOCAL XLATION CONTRO*
               OLLER    '
ISTZBF0L CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTZBF0L  77.349'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
*                                                                  0562
*/* TPZSAVE (7,12,14) AC(BC0L)BASE                                   */
*                                                                  0562
*   DO;                                                            0562
*     RFY                                                          0563
*      (GPR01P,                                                    0563
*       GPR12P,                                                    0563
*       GPR13P,                                                    0563
*       GPR14P) RSTD;                                              0563
*     GEN(PRINT OFF);                                              0564
*                                                                  0564
         PRINT OFF
*/* ATBUILD (ISTZSAVE)                                               */
*/* END OF ATBUILD                                                   */
*                                                                  0565
*     GEN(PRINT ON);                                               0565
         PRINT ON
*     RFY                                                          0566
*       ISTZSAVE BASED(GPR13P);                                    0566
*     GEN SETS(ZSAZSVVR)(STM   7,12,ZSAZSVVR+0(13));               0567
         STM   7,12,ZSAZSVVR+0(13)
*     GEN SETS(GPR12P);                                            0568
         BALR  GPR12P,0
@TSTART  DS    0H
         USING @TSTART,GPR12P
*     GEN(PRINT OFF);                                              0569
*                                                                  0569
         PRINT OFF
*/* ATBUILD (ISTZCRR,ISTRPH,ISTCRA) EJECT(NO)                        */
*/* END OF ATBUILD                                                   */
*                                                                  0570
*     GEN(PRINT ON);                                               0570
         PRINT ON
*     GPR01P->RPHCRR->CRACRR->ZCREBC0L='1'B;                       0571
         L     @11,RPHCRR(,GPR01P)                                 0571
         L     @11,CRACRR(,@11)                                    0571
         OI    ZCREBC0L(@11),B'00100000'                           0571
*     ZSAZACTV='1'B;                                               0572
         OI    ZSAZACTV(GPR13P),B'10000000'                        0572
*     ZSAZTRAC='BC0L';                                             0573
         MVC   ZSAZTRAC(4,GPR13P),@CC04723                         0573
*     ZSAZSVRR=GPR14P;                                             0574
         ST    GPR14P,ZSAZSVRR(,GPR13P)                            0574
*     GPR13P=ZSAZSVFC;                                             0575
         L     GPR13P,ZSAZSVFC(,GPR13P)                            0575
*     RFY                                                          0576
*      (GPR01P) UNRSTD;                                            0576
*     RFY                                                          0577
*      (GPR14P) UNRSTD;                                            0577
*   END;                                                           0578
*                                                                  0578
*/* END TPZSAVE                                                      */
*                                                                  0579
*   CALL CHKLCCW;                   /* CHECK NEXT LCCW AND OBTAIN  0579
*                                      BUFFER                        */
         BAL   @14,CHKLCCW                                         0579
*   DO WHILE(PTRG15^=0);            /* MAJOR LOOP                    */
         B     @DE00580                                            0580
@DL00580 DS    0H                                                  0581
*     CALL ADDR(FMCPAB3)->PABDVTA->VECTOR((PTRG15/4)+1);/* CALL LCCW
*                                      PROCESSOR                     */
         LR    @14,PTRG15                                          0581
         SRL   @14,2                                               0581
         SLA   @14,2                                               0581
         L     @11,PABDVTA+95(,PTRFMC)                             0581
         LA    @11,0(,@11)                                         0581
         L     @14,VECTOR(@14,@11)                                 0581
         LR    @15,@14                                             0581
         BALR  @14,@15                                             0581
*     IF ZCRLCSYN='1'B×             /* IF LCCW SYNCH SPECIFIED       */
*         LCPNXLCW->LCCWOP=LD THEN                                 0582
         L     @14,RPHCRR(,PTRRPH)                                 0582
         L     @14,CRACRR(,@14)                                    0582
         TM    ZCRLCSYN(@14),B'00010000'                           0582
         BO    @RT00582                                            0582
         L     @14,LCPNXLCW(,PTRLCP)                               0582
         CLI   LCCWOP(@14),X'23'                                   0582
         BE    @RT00582                                            0582
*       ;                           /* OR DISC. REQUEST      @ZA28604*/
*     ELSE                                                         0584
*       DO;                         /* LCCW SYNCH NOT REQUIRED       */
*         LCPNXLCW->LCCWCNT=LCPNXLCW->LCCWCNT+1;/* INCREMENT DATA  0585
*                                      COUNT                         */
         L     @14,LCPNXLCW(,PTRLCP)                               0585
         LA    @11,1                                               0585
         LH    @00,LCCWCNT(,@14)                                   0585
         N     @00,@CF04884                                        0585
         ALR   @11,@00                                             0585
         STH   @11,LCCWCNT(,@14)                                   0585
*         LCPNXLCW->LCCWDATA=LCPNXLCW->LCCWDATA-1;/* DECREMENT DATA
*                                      ADDRESS                       */
         L     @11,LCCWDATA(,@14)                                  0586
         BCTR  @11,0                                               0586
         ST    @11,LCCWDATA(,@14)                                  0586
*       END;                        /* END LCCW SYNCH NOT REQUIRED   */
*     IF LCPZRT00='1'B              /* IF LOGICAL ERROR              */
*         ×LCPZRT01='1'B            /* × CONTROL BLOCK ERROR         */
*         ×RPHWEA=0 THEN            /* × LCPB DEQUEUED               */
@RT00582 TM    LCPZRT00(PTRLCP),B'11000000'                        0588
         BNZ   @RT00588                                            0588
         L     @14,RPHWEA(,PTRRPH)                                 0588
         LTR   @14,@14                                             0588
         BNZ   @RF00588                                            0588
@RT00588 DS    0H                                                  0589
*       PTRG15=0;                   /* SET FOR EXIT                  */
         SLR   PTRG15,PTRG15                                       0589
*     ELSE                          /* IF NO ERROR DETECTED          */
*       DO;                         /* LEVEL 1 - NO ERROR            */
         B     @RC00588                                            0590
@RF00588 DS    0H                                                  0591
*         LCPLCCWC=LCPLCCWC+1;      /* BUMP LCCW/LCP CNT             */
         LA    @14,1                                               0591
         SLR   @11,@11                                             0591
         IC    @11,LCPLCCWC(,PTRLCP)                               0591
         ALR   @14,@11                                             0591
         STC   @14,LCPLCCWC(,PTRLCP)                               0591
*         IF ZCRRESET='1'B THEN     /* IF RESET BEING PROCESSED      */
*                                                                  0592
         L     @14,RPHCRR(,PTRRPH)                                 0592
         L     @14,CRACRR(,@14)                                    0592
         TM    ZCRRESET(@14),B'00000001'                           0592
         BNO   @RF00592                                            0592
*           /*********************************************************/
*           /*                                                       */
*           /* SEGMENT(PROCRST)REQUEST                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0593
*           DO;                                                    0593
*             GOTO PROCRST;                                        0594
         B     PROCRST                                             0594
*PROCRST#:                                                         0595
*           END;                    /* GET LSCB AND SIO IF NEEDED    */
*         ELSE                      /* IF RESET NOT IN PROGRESS      */
*           DO;                     /* LEVEL 2 - NOT RESET           */
         B     @RC00592                                            0596
@RF00592 DS    0H                                                  0597
*             ZCRQAHED='0'B;        /* CLEAR QUEING SPECIAL OPTION   */
         L     @14,RPHCRR(,PTRRPH)                                 0597
         L     @14,CRACRR(,@14)                                    0597
         NI    ZCRQAHED(@14),B'01111111'                           0597
*             IF ZCRLCSYN='1'B THEN /* IF LCCW SYNCH REQUIRED        */
*                                                                  0598
         TM    ZCRLCSYN(@14),B'00010000'                           0598
         BNO   @RF00598                                            0598
*               /*****************************************************/
*               /*                                                   */
*               /* SEGMENT(PROCSYN)REQUEST                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0599
*               DO;                                                0599
*                 GOTO PROCSYN;                                    0600
         B     PROCSYN                                             0600
*PROCSYN#:                                                         0601
*               END;                /* GET LSCB AND SIO IF NEEDED    */
*             ELSE                  /* IF NOT COMMAND CHAINED        */
*               DO;                 /* LEVEL 3 - NOT CMND CHAINED    */
         B     @RC00598                                            0602
@RF00598 DS    0H                                                  0603
*                 RFY                                              0603
*                  (QXFRFR,                                        0603
*                   QXFRTO) RSTD;                                  0603
*                 QXFRFR=ADDR(FMCPAB3);/* REMOVE FROM FMCPAB3        */
         LA    QXFRFR,FMCPAB3(,PTRFMC)                             0604
*                 QXFRTO=ADDR(FMCLCPBQ);/* ADD TO FMCLCPBQ           */
         LA    QXFRTO,FMCLCPBQ(,PTRFMC)                            0605
*                 CALL ATCZPSVT->ZPSZDFH0;/* CALL QUEUE TRANSFER   0606
*                                      ROUTINE                       */
         L     @11,ATCZPSVT(,PTRATC)                               0606
         L     @15,ZPSZDFH0(,@11)                                  0606
         BALR  @14,@15                                             0606
*                 RFY                                              0607
*                  (QXFRFR,                                        0607
*                   QXFRTO) UNRSTD;                                0607
*                 RPHWEA=0;         /* CLEAR RPH WORK ELEMENT ADDR   */
         SLR   @14,@14                                             0608
         ST    @14,RPHWEA(,PTRRPH)                                 0608
*                 IF(LCPFDBA&MASKWORD)^=0 THEN/* IF BUFFER PRESENT 0609
*                                      FROM LCPB                     */
         L     @11,LCPFDBA(,PTRLCP)                                0609
         N     @11,@CF04672                                        0609
         CR    @11,@14                                             0609
         BE    @RF00609                                            0609
*                   DO;             /* LEVEL 4 - BUFFER PRESENT      */
*                     FMCSEQ1=FMCSEQ1+1;/* INCREMENT SEQUENCE COUNTER*/
         LA    @14,1                                               0611
         SLR   @11,@11                                             0611
         IC    @11,FMCSEQ1(,PTRFMC)                                0611
         ALR   @14,@11                                             0611
         STC   @14,FMCSEQ1(,PTRFMC)                                0611
*                     ZLBELI='1'B;  /* END OF LCPB                   */
         OI    ZLBELI(PTRZLB),B'10000000'                          0612
*                     ZLBRT02='1'B; /* END OF BLOCK                  */
*                     ZLBRT04='1'B; /* FEEDBACK REQUIRED             */
*                     ZLBRT05='1'B; /* DECREMENT SCHED COUNT         */
*                     ZLBRT07='1'B; /* SCHEDULE FLAG                 */
         OI    ZLBRT02(PTRZLB),B'00101101'                         0616
*                     LCPREQTG=ZLBRQTG;/* COPY REQUEST TAG TO LCPB   */
         MVC   LCPREQTG(2,PTRLCP),ZLBRQTG(PTRZLB)                  0617
*                     IF FMCSEQ1>15 THEN/* IF SEQUENCE CTR OVERFLOW  */
         CLI   FMCSEQ1(PTRFMC),15                                  0618
         BNH   @RF00618                                            0618
*                       FMCSEQ1=1;  /* RE-INITIALIZE SEQUENCE CTR    */
         MVI   FMCSEQ1(PTRFMC),X'01'                               0619
*                     ELSE                                         0620
*                       ;           /* OTHERWISE DON'T               */
@RF00618 DS    0H                                                  0621
*                     CALL DOIO;    /* CALL SHIPOUT TO INIT I/O      */
         BAL   @14,DOIO                                            0621
*                   END;            /* LEVEL 4 - BUFFER PRESENT      */
*                 ELSE                                             0623
*                   ;               /* IF BUFFER NOT PRESENT         */
@RF00609 DS    0H                                                  0624
*                 PTRG15=0;         /* SET TO RETURN TO DEV SCHED    */
         SLR   PTRG15,PTRG15                                       0624
*               END;                /* LEVEL 3 - NOT COMMAND CHAINED
*                                                            @XM08631*/
*             IF ZCRTPDIS='1'B THEN /* IF DISCONNECT REQUIRED        */
@RC00598 L     @14,RPHCRR(,PTRRPH)                                 0626
         L     @14,CRACRR(,@14)                                    0626
         TM    ZCRTPDIS(@14),B'00100000'                           0626
         BNO   @RF00626                                            0626
*               CALL GETLSCB;       /* ALLOCATE LSCB + INIT I/O      */
         BAL   @14,GETLSCB                                         0627
*             ELSE                                                 0628
*               ;                   /* OTHERWISE DON'T               */
@RF00626 DS    0H                                                  0629
*           END;                    /* LEVEL 2 - NOT RESET           */
*       END;                        /* LEVEL 1 - NO ERROR            */
@RC00592 DS    0H                                                  0631
*   END;                            /* MAJOR LOOP                    */
@RC00588 DS    0H                                                  0631
@DE00580 LTR   PTRG15,PTRG15                                       0631
         BNZ   @DL00580                                            0631
*   IF LCPZRT00='1'B                /* IF LOGICAL ERROR              */
*       ×LCPZRT01='1'B THEN         /* × CONTROL BLOCK ERROR         */
*                                                                  0632
         TM    LCPZRT00(PTRLCP),B'11000000'                        0632
         BZ    @RF00632                                            0632
*     /***************************************************************/
*     /*                                                             */
*     /* SEGMENT(ERRPROC)REQUEST                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0633
*     DO;                                                          0633
*       GOTO ERRPROC;                                              0634
         B     ERRPROC                                             0634
*ERRPROC#:                                                         0635
*     END;                          /* SCHEDULE VALID LCCW'S         */
*   ELSE                                                           0636
*     ;                             /* IF NO ERROR                   */
@RF00632 DS    0H                                                  0637
*/* TPZRETN                                                          */
*                                                                  0637
*   DO;                                                            0637
@RC00632 DS    0H                                                  0638
*     RFY                                                          0638
*      (GPR07P,                                                    0638
*       GPR14P,                                                    0638
*       GPR15P) RSTD;                                              0638
*     GPR13P=ZSAZSVBC;                                             0639
         L     GPR13P,ZSAZSVBC(,GPR13P)                            0639
*     IF GPR13P=0 THEN                                             0640
         LTR   GPR13P,GPR13P                                       0640
         BZ    @RT00640                                            0640
*       ;                           /* TPDVTS ISTZFARR               */
*     ELSE                                                         0642
*       GPR14P=ZSAZSVRR;                                           0642
         L     GPR14P,ZSAZSVRR(,GPR13P)                            0642
*     GEN REFS(ZSAZSVVR)(LM    7,12,ZSAZSVVR+0(13));               0643
@RT00640 DS    0H                                                  0643
         LM    7,12,ZSAZSVVR+0(13)
*     GEN REFS(GPR14P) EXIT NOSEQFLOW(BR    GPR14P);               0644
         BR    GPR14P
*     RFY                                                          0645
*      (GPR07P,                                                    0645
*       GPR14P,                                                    0645
*       GPR15P) UNRSTD;                                            0645
*   END;                                                           0646
*                                                                  0646
*/* END TPZRETN                                                      */
*                                                                  0647
*                                   /* RETURN TO DEVICE SCHEDULER    */
*                                                                  0647
*/********************************************************************/
*/*                                                                  */
*/* SUBROUTINE-                                                      */
*/*      CHKLCCW                                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      CHECK NEXT LCCW AND OBTAIN BUFFER.                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0647
*CHKLCCW:                                                          0647
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/* CHKLCCW: SUBROUTINE           */
CHKLCCW  DS    0H                                                  0648
*   RFY                                                            0648
*     PTRG14 RSTD;                  /* TO SAVE RETURN ADDRESS        */
*   ZCRSVF6=PTRG14;                 /* SAVE RETURN ADDRESS           */
         L     @11,RPHCRR(,PTRRPH)                                 0649
         L     @11,CRACRR(,@11)                                    0649
         ST    PTRG14,ZCRSVF6(,@11)                                0649
*   RFY                                                            0650
*     PTRG14 UNRSTD;                /* SAVED                         */
*   CALL ATCZPSVT->ZPSZBFMB;        /* CALL LCCW/LCP ANALYSIS RTN    */
         L     @11,ATCZPSVT(,PTRATC)                               0651
         L     @15,ZPSZBFMB(,@11)                                  0651
         BALR  @14,@15                                             0651
*   PTRLCC=LCPNXLCW;                /* ADDRESS NEXT LCCW             */
         L     PTRLCC,LCPNXLCW(,PTRLCP)                            0652
*   IF LCPZRT00='1'B                /* IF LOGICAL ERROR              */
*       ×LCPZRT01='1'B THEN                                        0653
         TM    LCPZRT00(PTRLCP),B'11000000'                        0653
         BNZ   @RT00653                                            0653
*     ;                             /* × CONTROL BLOCK ERROR         */
*   ELSE                            /* IF NO ERROR FOUND             */
*     DO;                           /* LEVEL 1 - NO ERROR            */
*       ZCRPCOD1=0;                 /* BUFFER ALLOCATION PARAM       */
         L     @14,RPHCRR(,PTRRPH)                                 0656
         L     @14,CRACRR(,@14)                                    0656
         MVI   ZCRPCOD1(@14),X'00'                                 0656
*       ZCRPBUF='1'B;               /* BUFFER ALLOCATION PARAM       */
         OI    ZCRPBUF(@14),B'00000100'                            0657
*       CALL ATCZPSVT->ZPSZDFA0;    /* CALL BUFFER ALLOCATION        */
         L     @11,ATCZPSVT(,PTRATC)                               0658
         L     @15,ZPSZDFA0(,@11)                                  0658
         BALR  @14,@15                                             0658
*       IF PTRG15=0 THEN            /* IF SUCESSFUL ALLOCATION       */
         LTR   PTRG15,PTRG15                                       0659
         BNZ   @RF00659                                            0659
*         DO;                       /* LEVEL 3 - BUFFER GOTTEN       */
*           PTRZLB=RPHSRPRM;        /* GET BUFFER ADDRESS            */
         L     PTRZLB,RPHSRPRM(,PTRRPH)                            0661
*           ZCRPVZB=PTRZLB;         /* BUFFER ADDRESS TO ZCR         */
         L     @14,RPHCRR(,PTRRPH)                                 0662
         L     @14,CRACRR(,@14)                                    0662
         ST    PTRZLB,ZCRPVZB(,@14)                                0662
*           LCPFDBA=PTRZLB;         /* BUFFER ADDRESS TO LCPB        */
         ST    PTRZLB,LCPFDBA(,PTRLCP)                             0663
*           ZCRBFPTR=PTRZLB;        /* ADD BUFFER TO CHAIN           */
         ST    PTRZLB,ZCRBFPTR(,@14)                               0664
*           ZCRZLB=PTRZLB;          /* BUFFER ADDRESS TO ZCR         */
         ST    PTRZLB,ZCRZLB(,@14)                                 0665
*           ZLBLCPBA=PTRLCP;        /* SET LCPB POINTER IN ZLBUF     */
         ST    PTRLCP,ZLBLCPBA(,PTRZLB)                            0666
*           ZLBLCCWA=PTRLCC;        /* SET LCCW POINTER IN ZLBUF     */
         ST    PTRLCC,ZLBLCCWA(,PTRZLB)                            0667
*           MVN(TAGZLB,TAGFMC);     /* COPY SEQUENCE IDENTIFIER      */
         MVN   TAGZLB(1,PTRZLB),TAGFMC(PTRFMC)                     0668
*           ZLBRT09='0'B;           /* INITIALIZE SWITCH VALUE       */
         NI    ZLBRT09(PTRZLB),B'10111111'                         0669
*           IF ADDR(FMCPROCD)->PROCFTX='1'B THEN/* IF PROCFTX IS ON  */
         TM    PROCFTX+48(PTRFMC),B'00000001'                      0670
         BNO   @RF00670                                            0670
*             ZLBRT09='1'B;         /* SET SWITCH ON                 */
         OI    ZLBRT09(PTRZLB),B'01000000'                         0671
*           ELSE                                                   0672
*             ;                     /* OTHERWISE LEAVE OFF           */
@RF00670 DS    0H                                                  0673
*           IF LCCWOP=LSEND THEN                                   0673
         CLI   LCCWOP(PTRLCC),X'F1'                                0673
         BNE   @RF00673                                            0673
*             DO;                   /* IF SEND LCCW                  */
*               RFY                                                0675
*                 PTRRH RSTD;       /* ISTRH BASE                    */
*               PTRRH=ADDR(LCCWDATA);/* COVER REQUEST/RESPONSE HDR   */
*                                                                  0676
         LA    PTRRH,LCCWDATA(,PTRLCC)                             0676
*               /*****************************************************/
*               /*                                                   */
*               /* SEGMENT(SEGCON)REQUEST                            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0677
*               DO;                                                0677
*                 GOTO SEGCON;                                     0678
         B     SEGCON                                              0678
*SEGCON#:                                                          0679
*               END;                /* SET UP CONTACT, IF REQUIRED   */
SEGCON#  DS    0H                                                  0680
*               IF LCPZRT00='0'B    /* IF NO ERROR IN LCPB           */
*                   &LCPZRT01='0'B THEN                            0680
*                                                                  0680
         TM    LCPZRT00(PTRLCP),B'11000000'                        0680
         BNZ   @RF00680                                            0680
*                 /***************************************************/
*                 /*                                                 */
*                 /* SEGMENT(SEG0069)REQUEST                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0681
*                 DO;                                              0681
*                   GOTO SEG0069;                                  0682
         B     SEG0069                                             0682
*SEG0069#:                                                         0683
*                 END;              /* TRANSFORM LCCW OP CODE        */
*               ELSE                                               0684
*                 ;                 /* IF ERROR DETECTED             */
@RF00680 DS    0H                                                  0685
*               RFY                                                0685
*                 PTRRH UNRSTD;                                    0685
@RC00680 DS    0H                                                  0686
*             END;                  /* END SEND LCCW PROCESSOR       */
*           ELSE                                                   0687
*             ;                     /* IF NOT SEND LCCW              */
@RF00673 DS    0H                                                  0688
*         END;                      /* LEVEL 3 - BUFFER GOTTEN       */
*       ELSE                        /* BUFFER NOT OBTAINED           */
*         DO;                       /* PROCESS VTAM ERROR            */
         B     @RC00659                                            0689
@RF00659 DS    0H                                                  0690
*           LCPZRT00='1'B;          /* INDICATE LOGIC ERROR          */
         OI    LCPZRT00(PTRLCP),B'10000000'                        0690
*           LCPMNRCD=FRMVTAME;      /* INDICATE VTAM ERROR           */
         MVI   LCPMNRCD(PTRLCP),X'A0'                              0691
*         END;                      /* END BUFFER NOT OBTAINED ERR   */
*     END;                          /* LEVEL 1 - NO ERROR            */
@RC00659 DS    0H                                                  0694
*   IF LCPZRT00='0'B                /* IF NO ERROR                   */
*       &LCPZRT01='0'B THEN                                        0694
@RT00653 TM    LCPZRT00(PTRLCP),B'11000000'                        0694
         BNZ   @RF00694                                            0694
*     PTRG15=ATCZPSVT->ZPSZTRTT->ISTZTRTT(LCPNXLCW->LCCWOP+1);/* SET
*                                      LCCW PROCESS VECTOR   @XM06212*/
         L     @11,LCPNXLCW(,PTRLCP)                               0695
         SLR   @14,@14                                             0695
         IC    @14,LCCWOP(,@11)                                    0695
         L     @11,ATCZPSVT(,PTRATC)                               0695
         L     @11,ZPSZTRTT(,@11)                                  0695
         SLR   PTRG15,PTRG15                                       0695
         IC    PTRG15,ISTZTRTT(@14,@11)                            0695
*   ELSE                            /* IF ERROR DECTECTED            */
*     PTRG15=0;                     /* SET EXIT RETURN CODE          */
         B     @RC00694                                            0696
@RF00694 SLR   PTRG15,PTRG15                                       0696
*   RFY                                                            0697
*     PTRG14 RSTD;                  /* TO RESTORE RETURN ADDRESS     */
@RC00694 DS    0H                                                  0698
*   PTRG14=ZCRSVF6;                 /* RESTORE RETURN ADDRESS        */
         L     @11,RPHCRR(,PTRRPH)                                 0698
         L     @11,CRACRR(,@11)                                    0698
         L     PTRG14,ZCRSVF6(,@11)                                0698
*   RFY                                                            0699
*     PTRG14 UNRSTD;                /* RESTORED                      */
*   RETURN;                         /* END OF SUBROUTINE             */
@EL00002 DS    0H                                                  0700
@EF00002 DS    0H                                                  0700
@ER00002 BR    @14                                                 0700
*                                                                  0701
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT-                                                         */
*/*      SEGCON                                                      */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      SETS UP CONTACT, IF REQUIRED.                               */
*/*      VARIOUS FIELDS ARE SET UP TO SIMULATE CONTACT PROCESSING.   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0701
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SEGCON)START                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0701
*   DO;                                                            0701
*     GOTO SEGCON@;                                                0702
*SEGCON:                                                           0703
*   END;                            /* CONTACT: SUBROUTINE           */
SEGCON   DS    0H                                                  0704
*/*                                                                  */
*/*      COVER FOR ISTRH ESTABLISHED IN CHKLCCW SUBROUTINE.          */
*/*      USAGE OF PTRRH IS NOT RELEASED UNTIL END OF SEGMENT SEGVAL. */
*/*                                                                  */
*                                                                  0704
*   RFY                                                            0704
*     PTRRH RSTD;                   /* REQUEST/RESPONSE HEADER       */
*   RFY                                                            0705
*     ISTRH BASED(PTRRH);           /* ESTABLISH COVER               */
*   IF RHBB='1'B THEN               /* IF START DIALOG               */
         TM    RHBB(PTRRH),B'10000000'                             0706
         BNO   @RF00706                                            0706
*     IF(FMCZFA06='0'B              /* IF NOT IN DIALOG              */
*         &FMCZFC06='0'B)           /* & CONTACT NOT PENDING         */
*         ×FMCZFD06='1'B THEN                                      0707
         TM    FMCZFA06(PTRFMC),B'00000101'                        0707
         BZ    @RT00707                                            0707
         TM    FMCZFD06(PTRFMC),B'10000000'                        0707
         BNO   @RF00707                                            0707
@RT00707 DS    0H                                                  0708
*       DO;                         /* × DISCONNECT PENDING          */
*         FMCZX001=FMCZX001+1;      /* INCREMENT SESSION COUNT       */
         LA    @14,1                                               0709
         SLR   @00,@00                                             0709
         IC    @00,FMCZX001(,PTRFMC)                               0709
         ALR   @14,@00                                             0709
         STC   @14,FMCZX001(,PTRFMC)                               0709
*         FMCZFC06='1'B;            /* FLAG CONTACT OUTSTANDING      */
         OI    FMCZFC06(PTRFMC),B'00000001'                        0710
*         ZLBRT0A='1'B;             /* SET CONTACT IN REQUEST TAG    */
         OI    ZLBRT0A(PTRZLB),B'00100000'                         0711
*         FMCZF002='1'B;            /* FLAG I/O SCHEDULING    SUSPEND*/
         OI    FMCZF002(PTRFMC),B'01000000'                        0712
*       END;                        /* END SET UP CONTACT            */
*     ELSE                                                         0714
*       DO;                         /* NOT SET UP CONTACT            */
         B     @RC00707                                            0714
@RF00707 DS    0H                                                  0715
*         LCPZRT00='1'B;            /* FLAG AS LOGICAL ERROR         */
         OI    LCPZRT00(PTRLCP),B'10000000'                        0715
*         LCPMNRCD=FRMCDITS;        /* CONFLICTING DIALOG SEQUENCE   */
         MVI   LCPMNRCD(PTRLCP),X'A6'                              0716
*         FMCZF002='0'B;            /* ALLOW I/O SCHEDULING          */
         NI    FMCZF002(PTRFMC),B'10111111'                        0717
*         ZCRBRIS='1'B;             /* SET BRACKET REJECT SWITCH     */
         L     @14,RPHCRR(,PTRRPH)                                 0718
         L     @14,CRACRR(,@14)                                    0718
         OI    ZCRBRIS(@14),B'00000010'                            0718
*       END;                        /* END NOT CONTACT               */
*   ELSE                            /* NOT START DIALOG              */
*     IF(FMCZFA06='1'B              /* IF IN DIALOG                  */
*         ×FMCZFC06='1'B)           /* × CONTACT PENDING             */
*         &FMCZFD06='0'B THEN                                      0720
         B     @RC00706                                            0720
@RF00706 TM    FMCZFA06(PTRFMC),B'00000101'                        0720
         BZ    @RF00720                                            0720
         TM    FMCZFD06(PTRFMC),B'10000000'                        0720
         BZ    @RT00720                                            0720
*       ;                           /* & DISCONNECT NOT PENDING      */
*     ELSE                                                         0722
*       DO;                         /* OTHERWISE IS ERROR            */
@RF00720 DS    0H                                                  0723
*         LCPZRT00='1'B;            /* FLAG AS LOGICAL ERROR         */
         OI    LCPZRT00(PTRLCP),B'10000000'                        0723
*         LCPMNRCD=FRMCDITS;        /* CONFLICTING DIALOG SEQUENCE   */
         MVI   LCPMNRCD(PTRLCP),X'A6'                              0724
*       END;                        /* END DIALOG ERROR              */
*                                                                  0725
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SEGCON)FINISH                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0726
*   DO;                                                            0726
@RT00720 DS    0H                                                  0726
@RC00706 DS    0H                                                  0727
*     GOTO SEGCON#;                                                0727
         B     SEGCON#                                             0727
*SEGCON@:                                                          0728
*   END;                            /* END OF SEGMENT                */
SEGCON@  DS    0H                                                  0729
*                                                                  0729
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT-                                                         */
*/*      SEG0069                                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      TRANSFORM THE LCCW OP CODE.                                 */
*/*      THE LCCW POINTS TO A DATA STREAM, THE FIRST CHARACTER OF    */
*/*      WHICH IS A COMMAND CODE FOR A 3270.                         */
*/*      THIS ROUTING USES THE COMMAND CODE TO DETERMINE WHAT LCCW   */
*/*      SHOULD REALLY BE USED SO THAT THE COMMAND CODE CAN BE       */
*/*      BUILT AGAIN IN A DIFFERENT FORMAT. NO KIDDING.              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0729
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SEG0069)START                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0729
*   DO;                                                            0729
*     GOTO SEG0069@;                                               0730
         B     SEG0069@                                            0730
*SEG0069:                                                          0731
*   END;                            /* BF0L0069: SUBROUTINE          */
SEG0069  DS    0H                                                  0732
*   PTRLCC=LCPNXLCW;                /* ADDRESS LCCW                  */
         L     @14,LCPNXLCW(,PTRLCP)                               0732
         LR    PTRLCC,@14                                          0732
*   LCPNXLCW=LCPNXLCW+LENGTH(ISTLCCW);/* INCREMENT LCCW POINTER      */
         AL    @14,@CF00071                                        0733
         ST    @14,LCPNXLCW(,PTRLCP)                               0733
*   IF LCCWLSI='1'B THEN            /* IF 1ST LCCW HAS SYNCH         */
         TM    LCCWLSI(PTRLCC),B'00000100'                         0734
         BNO   @RF00734                                            0734
*     LCPNXLCW->LCCWLSI='1'B;       /* NOW SO DOES SECOND            */
         OI    LCCWLSI(@14),B'00000100'                            0735
*   ELSE                                                           0736
*     ;                             /* 1ST LCCW DIDN'T HAVE SYNCH    */
@RF00734 DS    0H                                                  0737
*   IF LCPNXLCW->LCCWCNT=0 THEN     /* IF LCCW HAS 0 CNT     @ZA28604*/
*                                                                  0737
         L     @14,LCPNXLCW(,PTRLCP)                               0737
         LH    @14,LCCWCNT(,@14)                                   0737
         N     @14,@CF04884                                        0737
         LTR   @14,@14                                             0737
         BNZ   @RF00737                                            0737
*     /***************************************************************/
*     /*                                                             */
*     /* SEGMENT(ZERORU)REQUEST                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0738
*     DO;                                                          0738
*       GOTO ZERORU;                                               0739
         B     ZERORU                                              0739
*ZERORU#:                                                          0740
*     END;                          /* PROCESS ZERO LNGTH    @ZA28604*/
*   ELSE                                                           0741
*     DO;                           /* LCCW COUNT NON-ZERO           */
*                                                                  0741
         B     @RC00737                                            0741
@RF00737 DS    0H                                                  0742
*       /*************************************************************/
*       /*                                                           */
*       /* SEGMENT(SEGVAL)REQUEST                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0742
*       DO;                                                        0742
*         GOTO SEGVAL;                                             0743
         B     SEGVAL                                              0743
*SEGVAL#:                                                          0744
*       END;                        /* VALIDATE AND MOVE 1ST DATA  0744
*                                      BYTE TO ZCR                   */
SEGVAL#  DS    0H                                                  0745
*       IF LCPZRT00='0'B            /* IF NO VALIDATION ERROR        */
*           &LCPZRT01='0'B THEN                                    0745
         TM    LCPZRT00(PTRLCP),B'11000000'                        0745
         BNZ   @RF00745                                            0745
*         DO;                                                      0746
*           LCPNXLCW->LCCWOP=SNATRT(ZCROPCDE+1);/* TRANSLATE DATA  0747
*                                      BYTE TO BASIC LCCW OPERATION
*                                      CODE                          */
         L     @14,LCPNXLCW(,PTRLCP)                               0747
         L     @09,RPHCRR(,PTRRPH)                                 0747
         L     @09,CRACRR(,@09)                                    0747
         SLR   @08,@08                                             0747
         IC    @08,ZCROPCDE(,@09)                                  0747
         SLR   @00,@00                                             0747
         IC    @00,SNATRT(@08)                                     0747
         STC   @00,LCCWOP(,@14)                                    0747
*           IF RHBB='1'B THEN       /* IF BEG SEQUENCE               */
         TM    RHBB(PTRRH),B'10000000'                             0748
         BNO   @RF00748                                            0748
*             LCPNXLCW->LCCWSI='1'B;/* THEN SESSION INITIATION       */
         OI    LCCWSI(@14),B'10000000'                             0749
*           ELSE                                                   0750
*             ;                     /* NOT BEGIN SEQUENCE            */
@RF00748 DS    0H                                                  0751
*           IF RHEB='1'B THEN       /* IF END SEQUENCE               */
         TM    RHEB(PTRRH),B'01000000'                             0751
         BNO   @RF00751                                            0751
*             LCPNXLCW->LCCWSD='1'B;/* THEN SESSION DISCONNECT       */
         L     @14,LCPNXLCW(,PTRLCP)                               0752
         OI    LCCWSD(@14),B'01000000'                             0752
*           ELSE                                                   0753
*             ;                     /* NOT END SEQUENCE              */
@RF00751 DS    0H                                                  0754
*           IF RHEXCEPT='1'B THEN   /* IF EXCEPTION RESPONSE         */
         TM    RHEXCEPT(PTRRH),B'00010000'                         0754
         BNO   @RF00754                                            0754
*             ZCREXRES='1'B;        /* SET ZCR EXCEPTION RESPONSE    */
         L     @14,RPHCRR(,PTRRPH)                                 0755
         L     @14,CRACRR(,@14)                                    0755
         OI    ZCREXRES(@14),B'00001000'                           0755
*           ELSE                                                   0756
*             ;                     /* NOT EXCEPTION RESPONSE        */
@RF00754 DS    0H                                                  0757
*           LCPNXLCW->LCCWDATA=LCPNXLCW->LCCWDATA+1;/* INCREMENT DATA
*                                      ADDRESS                       */
         L     @14,LCPNXLCW(,PTRLCP)                               0757
         LA    @00,1                                               0757
         AL    @00,LCCWDATA(,@14)                                  0757
         ST    @00,LCCWDATA(,@14)                                  0757
*           LCPNXLCW->LCCWCNT=LCPNXLCW->LCCWCNT-1;/* DECREMENT DATA
*                                      COUNT                         */
         LH    @00,LCCWCNT(,@14)                                   0758
         N     @00,@CF04884                                        0758
         BCTR  @00,0                                               0758
         STH   @00,LCCWCNT(,@14)                                   0758
*         END;                      /* END VALIDATION OK             */
*       ELSE                                                       0760
*         ;                         /* NOT VALIDATED OK              */
@RF00745 DS    0H                                                  0761
*     END;                          /* END LCCW COUNT NON-ZERO       */
*                                                                  0761
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SEG0069)FINISH                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0762
*   DO;                                                            0762
@RC00737 DS    0H                                                  0763
*     GOTO SEG0069#;                                               0763
         B     SEG0069#                                            0763
*SEG0069@:                                                         0764
*   END;                            /* END OF SUBROUTINE             */
SEG0069@ DS    0H                                                  0765
*                                                                  0765
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT-                                                         */
*/*      SEGVAL                                                      */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      VALIDITY CHECK 1ST DDATA BYTE OF 2ND SEND LCCW.             */
*/*      THE DATA BYTE CONTAINS THE 3270 FUNCTION CODE.              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0765
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SEGVAL)START                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0765
*   DO;                                                            0765
*     GOTO SEGVAL@;                                                0766
         B     SEGVAL@                                             0766
*SEGVAL:                                                           0767
*   END;                            /* VALIDATE: SUBROUTINE          */
SEGVAL   DS    0H                                                  0768
*   ZCRSVWK1=PTRG13;                /* SAVE SAVE AREA POINTER        */
         L     @14,RPHCRR(,PTRRPH)                                 0768
         L     @09,CRACRR(,@14)                                    0768
         ST    PTRG13,ZCRSVWK1(,@09)                               0768
*   ZCRSVWK2=PTRRH;                 /* COMPILER NEEDS A REGISTER     */
         ST    PTRRH,ZCRSVWK2(,@09)                                0769
*   RFY                                                            0770
*     PTRRH UNRSTD;                 /* RELEASE FOR COMPILER          */
*   PTRG13=ADDR(CRASVC);            /* ADDRESS A SAVE AREA VMDESET 0771
*                                      REMOVED               @DC80401*/
         LA    PTRG13,CRASVC(,@14)                                 0771
*                                                                  0772
*/*VMDESET  (15,ZERO)                                                */
*                                                                  0772
*   DO;                             /* INVOKE MODESET MACRO          */
*     GEN;                                                         0773
         MODESET EXTKEY=ZERO,WORKREG=2
*     RFY                                                          0774
*      (GPR15P) RSTD;                                              0774
*     GPR15F=0;                                                    0775
         SLR   GPR15F,GPR15F                                       0775
*     RFY                                                          0776
*      (GPR15P) UNRSTD;             /* PUT RETURN CODE IN RCREG      */
*   END;                            /* VMDESET SET ZERO KEY - MVM  0777
*                                                            @X50BHWJ*/
*   IF LCPNXLCW->LCCWNTVC^='1'B THEN/* IF THE LCCW DOES NOT INDICATE
*                                      AUTHORIZED PATH, THEN @ZA09611*/
         L     @14,LCPNXLCW(,PTRLCP)                               0778
         TM    LCCWNTVC(@14),B'00010000'                           0778
         BO    @RF00778                                            0778
*     DO;                           /* SETLOCK & VALCHECK    @ZA09611*/
*/*VSETLCK  (15,OBTAIN,LOCAL,(IEAVGM00,ISTZBF0L(UNLOCK)))            */
*                                                                  0780
*LOCKER:                                                           0780
*       DO;                         /* DECLARE AND RESTRICT REGS   0780
*                                      2,10,11,12,13,14, AND 15      */
LOCKER   DS    0H                                                  0781
*         RFY                                                      0781
*          (GPR02P,                                                0781
*           GPR10P,                                                0781
*           GPR11P,                                                0781
*           GPR14P,                                                0781
*           GPR15P) RSTD;           /* SAVE REGS 2 AND 10 THRU 14    */
*         GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);     0782
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*         GEN SETS(2);                                             0783
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*         GPR10P=GPR13P;            /* PUT SAVE AREA ADDR IN R 10  0784
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0784
*         GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);               0785
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(IEAVGM00,ISTZBF0L(UNLOCK))
*         GPR15P=GPR13P;            /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0786
*         DO;                       /* RESTORE PSW PROTECTION KEY    */
*           GEN SETS(2);                                           0788
         MODESET KEYADDR=(2),WORKREG=2
*         END;                      /* RESTORE REGISTERS             */
*         GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,GPR13F,
*             GPR14F,GPR02F);                                      0790
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*         IF GPR15F=4 THEN                                         0791
         C     GPR15F,@CF00073                                     0791
         BNE   @RF00791                                            0791
*           GPR15F=0;                                              0792
         SLR   GPR15F,GPR15F                                       0792
*         RFY                                                      0793
*          (GPR02P,                                                0793
*           GPR10P,                                                0793
*           GPR11P,                                                0793
*           GPR14P,                                                0793
*           GPR15P) UNRSTD;                                        0793
@RF00791 DS    0H                                                  0794
*       END;                        /* LOCKER:VSETLCK OBTAIN LOCAL 0794
*                                      MEMORY LOCK           @XM06405*/
*       IF PTRG15=0 THEN                                           0795
         SLR   @14,@14                                             0795
         CR    PTRG15,@14                                          0795
         BNE   @RF00795                                            0795
*         DO;                       /* IF SUCESSFUL MEMORY LOCK      */
*                                                                  0797
*/*VALCHEK  (PTRG15,(PTRG13),(LCPNXLCW->LCCWDATA),UA,1)              */
*                                                                  0797
*           DO;                                                    0797
*             RFY                                                  0798
*              (GPR01P,                                            0798
*               GPR02P,                                            0798
*               GPR04P,                                            0798
*               GPR06P,                                            0798
*               GPR14P,                                            0798
*               GPR15P) RSTD;       /* DECLARE AND RESTRICT REGS 1,
*                                      2, 4, 6, 13,14, AND 15        */
*             PTRG15=0;             /* SET RETURN CODE TO NO ERROR 0799
*                                      INVOKE XREGSET MACRO TO VERIFY
*                                      SAVEAREA OPERAND AND PUT IT IN
*                                      REG 13                        */
         SLR   @11,@11                                             0799
         LR    PTRG15,@11                                          0799
*/*XREGSET  PID('SAVEAREA')PPARM((PTRG13))RREG(13,GPR13P)            */
*                                                                  0800
*             DO;                                                  0800
*               GPR13P=PTRG13;      /* SET RREG SYMBOL TO VALUE OF 0801
*                                      PPARM OPERAND                 */
*             END;                  /* XREGSET                       */
*             DCL                                                  0803
*               1 SAV0046 CHAR(20) BASED(GPR13P),/* ESTABLISH SAVE 0803
*                                      AREA MAP                      */
*                2 SAV10046 CHAR(4),/* TO SAVE REGS 1,2,4,6, AND 14  */
*                2 SAV20046 CHAR(4),                               0803
*                2 SAV40046 CHAR(4),                               0803
*                2 SAV60046 CHAR(4),                               0803
*                2 SAVE0046 CHAR(4);                               0803
*             SAV10046=GPR01F;      /* SAVE REGS ONE,                */
         STCM  GPR01F,15,SAV10046(GPR13P)                          0804
*             SAV20046=GPR02F;      /* TWO,                          */
         STCM  GPR02F,15,SAV20046(GPR13P)                          0805
*             SAV40046=GPR04F;      /* FOUR,                         */
         STCM  GPR04F,15,SAV40046(GPR13P)                          0806
*             SAV60046=GPR06F;      /* SIX,                          */
         STCM  GPR06F,15,SAV60046(GPR13P)                          0807
*             SAVE0046=GPR14F;      /* AND FOURTEEN                  */
         STCM  GPR14F,15,SAVE0046(GPR13P)                          0808
*             GPR04P=GPR01P->RPHTSKID;/* PUT ADDR OF PROCESS   SCHED-
*                                      ULING TABLE IN REG 4          */
         L     GPR04P,RPHTSKID(,GPR01P)                            0809
*/* ATBUILD (ISTPST)                                                 */
*                                                                  0810
*/* ***** PROCESS SCHEDULING TABLE FOR VS/2       ****** */        0810
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL  1  ISTPST BDY(DWORD) BASED,                                  0810
*        2  PSTTYPE  CHAR(1),          /* CONTROL BLOCK TYPE         */
*        2  PSTLNGTH PTR(8),           /* LENGTH IN BYTES            */
*        2  *        CHAR(2),          /* RESERVED                   */
*        2  PSTCHAIN PTR(31),          /* ADDRESS OF NEXT PST        */
*        2  PSTRQFGA CHAR(8) BDY(DWORD),  /* READY QUEUE AND FLAGS   */
*           3  PSTRQUE PTR(31),        /* READY QUEUE                */
*              4  PSTRQFLG BIT(1),     /* READY QUEUE GATE           */
*              4  PSTRSV01 BIT(1),     /* REVERVED                   */
*              4  PSTRSV02 BIT(1),     /* REVERVED                   */
*              4  PSTRSV03 BIT(1),     /* REVERVED                   */
*              4  PSTRSV04 BIT(1),     /* REVERVED                   */
*              4  PSTRSV05 BIT(1),     /* REVERVED                   */
*              4  PSTRSV06 BIT(1),     /* REVERVED                   */
*              4  PSTRSV07 BIT(1),     /* REVERVED                   */
*              4  PSTRQUEA PTR(24),    /* READY QUEUE                */
*           3  PSTFLGA PTR(32),        /* FLAG FIELD                 */
*              4  PSTSSRN BIT(1),      /* IRB RUNNING SYSTEM SERVICE
*                                         TYPE REQUESTS              */
*              4  PSTUERN BIT(1),      /* IRB RUNNING USER EXIT TYPE
*                                         REQUESTS                   */
*              4  PSTIRBU1 BIT(1),     /* IRB # 1 IN USE             */
*              4  PSTIRBU2 BIT(1),     /* IRB # 2 IN USE             */
*              4  PSTSMQR BIT(1),      /* SMS RPH QUEUED FOR STORAGE */
*              4  PSTSMCU BIT(1),      /* SMS CRA IN USE             */
*              4  PSTAUTH BIT(1),      /* THE TASK THIS PST IS OBTAINED
*                                         FOR IS AUTHORIZED          */
*              4  PSTABINP BIT(1),     /* ABEND IN PROGRESS ON THIS
*                                         TASK                       */
*                 5 PSTABEND BIT(1),   /* TASK ABEND IN PROGRESS     */
*              4  PSTDMPC BIT(1),      /* DUMP HAS BEEN REQUESTED    */
*              4  PSTRSV08 BIT(23),    /* RESERVED                   */
*        2  PSTTCBA PTR(31),           /* TCB POINTER                */
*        2  PSTMPSTP PTR(31),          /* MPST POINTER - PST 6TH WORD*/
*        2  PSTACBCT FIXED(31),        /* COUNT OF OPEN ACB'S USING
*                                         THIS PST                   */
*        2  PSTPSSQ PTR(31),           /* POSTED SYSTEM SERVICE QUEUE*/
*        2  PSTNSSQ PTR(31),           /* NORMAL SYSTEM SERVICE QUEUE*/
*        2  PSTUEQ  PTR(31),           /* USER EXIT QUEUE            */
*        2  PSTIQE11 PTR(31),          /* INACTIVE IQE FOR FIRST IRB */
*        2  PSTIQE12 PTR(31),          /* ACTIVE IQE FOR FIRST IRB   */
*        2  PSTIQE21 PTR(31),          /* INACTIVE IQE FOR 2ND IRB   */
*        2  PSTIQE22 PTR(31),          /* ACTIVE IQE FOR 2ND IRB     */
*        2  PSTCRR1 PTR(31),           /* PREALLOCATED CRA           */
*        2  PSTCRRS PTR(31),           /* SMS CRA                    */
*        2  PSTSMDYP CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* SMS PAB   */
*        2  PSTSAVE CHAR(32),          /* SAVE AREA                  */
*        2  PSTDEBP  PTR(31),          /* POINTER TO DEB CHAIN       */
*                                      /* WHEN TASK ABENDS           */
*        2  PSTDMPS  FIXED(31),        /* DUMMY MPST                 */
*           3 PSTDGATE BIT(1),         /* DUMMY MPST GATE BIT        */
*           3 *        BIT(7),         /* NOT TO BE USED             */
*           3 PSTDRDYQ PTR(24);        /* DUMMY MPST READY QUEUE     */
*DCL  PSTSSRN0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN PSTSSRN OFF    */
*DCL  PSTSSRN1 BIT(32) CONSTANT('80000000'X); /* TURN PSTSSRN ON     */
*DCL  PSTUERN0 BIT(32) CONSTANT('BFFFFFFF'X); /* TURN PSTUERN OFF    */
*DCL  PSTUERN1 BIT(32) CONSTANT('40000000'X); /* TURN PSTUERN ON     */
*DCL  PSTGATE0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN PST READY QUEUE
*                                                GATE OFF            */
*DCL  PSTGATE1 BIT(32) CONSTANT('80000000'X); /* TURN PST READY QUEUE
*                                                GATE ON             */
*DCL  PSTIRB10 BIT(32) CONSTANT('DFFFFFFF'X); /* TURN PSTIRBU1 OFF   */
*DCL  PSTIRB11 BIT(32) CONSTANT('20000000'X); /* TURN PSTIRBU1 ON    */
*DCL  PSTIRB20 BIT(32) CONSTANT('EFFFFFFF'X); /* TURN PSTIRBU2 OFF   */
*DCL  PSTIRB21 BIT(32) CONSTANT('10000000'X); /* TURN PSTIRBU2 ON    */
*DCL  PSTSMQR0 BIT(32) CONSTANT('F7FFFFFF'X); /* TURN PSTSMQR OFF    */
*DCL  PSTSMQR1 BIT(32) CONSTANT('08000000'X); /* TURN PSTSMQR ON     */
*DCL  PSTSMCU0 BIT(32) CONSTANT('FBFFFFFF'X); /* TURN PSTSMCU OFF    */
*DCL  PSTSMCU1 BIT(32) CONSTANT('04000000'X); /* TURN PSTSMCU ON     */
*DCL  PSTABIP1 BIT(32) CONSTANT('01000000'X); /* TURN PSTABINP ON    */
*DCL  PSTABIP0 BIT(32) CONSTANT('FEFFFFFF'X); /* TURN OFF PSTABINP   */
*DCL  PSTYPE   BIT(8) CONSTANT('61'X);        /* TYPE CODE FOR PST   */
*                                                                  0828
*/* END OF ATBUILD                                                   */
*                                                                  0828
*                                   /* INCLUDE PROCESS SCHEDULING  0828
*                                      TABLE (ISTPST)                */
*             GPR15P=GPR04P->PSTTCBA;/* PUT TASK CONTROL BLOCK     0828
*                                      ADDRESS IN REGISTER 15        */
         L     GPR15P,PSTTCBA(,GPR04P)                             0828
*             GPR04F=SAV40046;      /* RESTORE REG 4 INVOKE XREGSET
*                                      MACRO TO VERIFY USER AREA   0829
*                                      OPERAND AND PUT ADDR IN REG 1 */
         ICM   @11,15,SAV40046(GPR13P)                             0829
         LR    GPR04F,@11                                          0829
*/*XREGSET  PID('USER AREA')PPARM((LCPNXLCW->LCCWDATA))RREG(,GPR01P) */
*                                                                  0830
*             DO;                                                  0830
*               GPR01P=LCPNXLCW->LCCWDATA;/* SET RREG SYMBOL TO VALUE
*                                      OF PPARM OPERAND              */
         L     @11,LCPNXLCW(,PTRLCP)                               0831
         L     GPR01P,LCCWDATA(,@11)                               0831
*             END;                  /* XREGSET INVOKE XREGSET MACRO
*                                      TO VERIFY LENGTH OPERAND AND
*                                      PUT VALUE IN REG 14           */
*/*XREGSET  PID('LENGTH')PPARM(1)RREG(,GPR14F)OUTPUT(PARM)           */
*                                                                  0833
*             DO;                                                  0833
*               GPR14F=1;           /* SET RREG SYMBOL TO VALUE OF 0834
*                                      PPARM OPERAND                 */
         LA    GPR14F,1                                            0834
*             END;                  /* XREGSET                       */
*             GEN SETS(2);                                         0836
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*             GPR06P=GPR02P;                                       0837
         LR    GPR06P,GPR02P                                       0837
*             GPR04P=GPR15P;        /* RESTORE TCB ADDR              */
         LR    GPR04P,GPR15P                                       0838
*             GPR02F=GPR01F+GPR14F-1;/* PUT END ADDRESS IN REG 2     */
         LR    GPR02F,GPR01F                                       0839
         ALR   GPR02F,GPR14F                                       0839
         BCTR  GPR02F,0                                            0839
*             DCL                                                  0840
*               CZMP0046 PTR(31) LOCATION(16);/* ESTABLISH POINTER TO
*                                      CVT                           */
*             CALL CZMP0046->CVT0VL00;/* INVOKE TASK SUPERVISOR    0841
*                                      VALIDITY CHECKING ROUTINE UPON
*                                      RETURN, CHECK PSW CONDITION 0841
*                                      CODE SET BY THE VALIDITY    0841
*                                      CHECKING ROUTINE              */
         L     @11,CZMP0046                                        0841
         L     @15,CVT0VL00(,@11)                                  0841
         BALR  @14,@15                                             0841
*             BC(8,OKAY0046);       /* IF ADDR VALID, DON'T ALTER  0842
*                                      RETURN CODE VALUE FROM 0      */
         BC    8,OKAY0046                                          0842
*             PTRG15=4;             /* SET RETURN CODE TO ERROR      */
         LA    PTRG15,4                                            0843
*             GO TO VC30046;                                       0844
         B     VC30046                                             0844
*OKAY0046:                                                         0845
*             PTRG15=0;             /* PUT RETURN CODE IN RCREG      */
OKAY0046 SLR   PTRG15,PTRG15                                       0845
*VC30046:                                                          0846
*             GPR02P=GPR06P;                                       0846
VC30046  LR    GPR02P,GPR06P                                       0846
*             GEN SETS(2);                                         0847
         MODESET KEYADDR=(2),WORKREG=2
*             GPR01F=SAV10046;      /* RESTORE REGS ONE,             */
         ICM   GPR01F,15,SAV10046(GPR13P)                          0848
*             GPR02F=SAV20046;      /* TWO,                          */
         ICM   GPR02F,15,SAV20046(GPR13P)                          0849
*             GPR04F=SAV40046;      /* FOUR,                         */
         ICM   GPR04F,15,SAV40046(GPR13P)                          0850
*             GPR06F=SAV60046;      /* SIX,                          */
         ICM   GPR06F,15,SAV60046(GPR13P)                          0851
*             GPR14F=SAVE0046;      /* AND FOURTEEN                  */
         ICM   GPR14F,15,SAVE0046(GPR13P)                          0852
*             RFY                                                  0853
*              (GPR01P,                                            0853
*               GPR02P,                                            0853
*               GPR04P,                                            0853
*               GPR06P,                                            0853
*               GPR14P,                                            0853
*               GPR15P) UNRSTD;     /* UNRESTRICT REGISTERS          */
*           END;                    /* VALCHEK VALIDATE USER LOCATION*/
*           IF PTRG15=0 THEN        /* IF VALCHECK SUCESSFUL         */
         LTR   PTRG15,PTRG15                                       0855
         BNZ   @RF00855                                            0855
*             ZCROPCDE=LCPNXLCW->LCCWDATA->ONEBYTE;/* MOVE CHARACTER
*                                      TO ZCR                        */
         L     @14,RPHCRR(,PTRRPH)                                 0856
         L     @14,CRACRR(,@14)                                    0856
         L     @11,LCPNXLCW(,PTRLCP)                               0856
         L     @11,LCCWDATA(,@11)                                  0856
         MVC   ZCROPCDE(1,@14),ONEBYTE(@11)                        0856
*           ELSE                                                   0857
*             DO;                   /* IF INVALID ADDRESS            */
         B     @RC00855                                            0857
@RF00855 DS    0H                                                  0858
*               LCPZRT01='1'B;      /* SET CONTROL BLOCK ERROR     0858
*                                                            @XM09526*/
         OI    LCPZRT01(PTRLCP),B'01000000'                        0858
*               LCPMNRCD=FRMINDTR;  /* FRMINDTR - INVALID DATA     0859
*                                                            @XM06287*/
         MVI   LCPMNRCD(PTRLCP),X'17'                              0859
*             END;                  /* END INVALID DATA ADDRESS      */
*/*VSETLCK  (15,RELEASE,LOCAL,(IEAVGM00,ISTZBF0L(LOCKER)))           */
*                                                                  0861
*UNLOCK:                                                           0861
*           DO;                     /* DECLARE AND RESTRICT REGS   0861
*                                      2,10,11,12,13,14, AND 15      */
@RC00855 DS    0H                                                  0861
UNLOCK   DS    0H                                                  0862
*             RFY                                                  0862
*              (GPR02P,                                            0862
*               GPR10P,                                            0862
*               GPR11P,                                            0862
*               GPR14P,                                            0862
*               GPR15P) RSTD;       /* SAVE REGS 2 AND 10 THRU 14    */
*             GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P); 0863
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*             GEN SETS(2);                                         0864
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*             GPR10P=GPR13P;        /* PUT SAVE AREA ADDR IN R 10  0865
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0865
*             GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);           0866
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(IEAVGM00,ISTZBF0L(LOCKER))
*             GPR15P=GPR13P;        /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0867
*             DO;                   /* RESTORE PSW PROTECTION KEY    */
*               GEN SETS(2);                                       0869
         MODESET KEYADDR=(2),WORKREG=2
*             END;                  /* RESTORE REGISTERS             */
*             GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,GPR13F,
*                 GPR14F,GPR02F);                                  0871
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*             IF GPR15F=4 THEN                                     0872
         C     GPR15F,@CF00073                                     0872
         BNE   @RF00872                                            0872
*               GPR15F=0;                                          0873
         SLR   GPR15F,GPR15F                                       0873
*             RFY                                                  0874
*              (GPR02P,                                            0874
*               GPR10P,                                            0874
*               GPR11P,                                            0874
*               GPR14P,                                            0874
*               GPR15P) UNRSTD;                                    0874
@RF00872 DS    0H                                                  0875
*           END;                    /* UNLOCK:VSETLCK RELEASE LOCAL
*                                      MEMORY LOCK           @XM06405*/
*         END;                      /* END VSETLLOCK SUCESSFUL       */
*       ELSE                                                       0877
*         DO;                       /* IF VSETLCK FAILED             */
         B     @RC00795                                            0877
@RF00795 DS    0H                                                  0878
*           LCPZRT00='1'B;          /* FLAG LOGICAL ERROR            */
         OI    LCPZRT00(PTRLCP),B'10000000'                        0878
*           LCPMNRCD=FRMVTAME;      /* FLAG VTAM ERROR               */
         MVI   LCPMNRCD(PTRLCP),X'A0'                              0879
*         END;                      /* END VSETLCK FAILURE VMDESET 0880
*                                      REMOVED               @DC80401*/
*     END;                          /* NOT AUTH PATH         @ZA09611*/
*   ELSE                            /* IF THIS IS FOR AUTHORIZED   0882
*                                      PATH,                 @ZA09611*/
*     ZCROPCDE=LCPNXLCW->LCCWDATA->ONEBYTE;/* COPY THE 3270 COMMAND
*                                      CODE WITHOUT DOING ANY      0882
*                                      VALIDITY CHECK        @ZA09611*/
         B     @RC00778                                            0882
@RF00778 L     @14,RPHCRR(,PTRRPH)                                 0882
         L     @14,CRACRR(,@14)                                    0882
         L     @11,LCPNXLCW(,PTRLCP)                               0882
         L     @11,LCCWDATA(,@11)                                  0882
         MVC   ZCROPCDE(1,@14),ONEBYTE(@11)                        0882
*/*VMDESET  (15,VTAM)                                                */
*                                                                  0883
*   DO;                             /* INVOKE MODESET MACRO          */
@RC00778 DS    0H                                                  0884
*     GEN;                                                         0884
         MODESET EXTKEY=VTAM,WORKREG=2
*     RFY                                                          0885
*      (GPR15P) RSTD;                                              0885
*     GPR15F=0;                                                    0886
         SLR   GPR15F,GPR15F                                       0886
*     RFY                                                          0887
*      (GPR15P) UNRSTD;             /* PUT RETURN CODE IN RCREG      */
*   END;                            /* VMDESET REST. VTAM KEY-MVM  0888
*                                                            @X50BHWJ*/
*   PTRG13=ZCRSVWK1;                /* RESTORE SAVE AREA POINTER     */
         L     @14,RPHCRR(,PTRRPH)                                 0889
         L     @14,CRACRR(,@14)                                    0889
         L     PTRG13,ZCRSVWK1(,@14)                               0889
*   RFY                                                            0890
*     PTRRH RSTD;                   /* TO RESTORE RH POINTER         */
*   PTRRH=ZCRSVWK2;                 /* RESTORE RH POINTER            */
*                                                                  0891
         L     PTRRH,ZCRSVWK2(,@14)                                0891
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(SEGVAL)FINISH                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0892
*   DO;                                                            0892
*     GOTO SEGVAL#;                                                0893
         B     SEGVAL#                                             0893
*SEGVAL@:                                                          0894
*   END;                            /* END OF SUBROUTINE             */
SEGVAL@  DS    0H                                                  0895
*/********************************************************************/
*/*  ZERORU - THIS SEGMENT CHECKS IF RH INDICATES THAT A STAND ALONE */
*/*           DISCONNECT SHOULD BE SENT OUT. ERROR IS SET ON ANY     */
*/*           OTHER RH WITH ZERO RU OR NO RU.                        */
*/********************************************************************/
*/*  SEGMENT(ZERORU)START                                            */
*                                                                  0895
*   DO;                                                            0895
*     GOTO ZERORU@;                                                0896
         B     ZERORU@                                             0896
*ZERORU:                                                           0897
*   END;                                                           0897
ZERORU   DS    0H                                                  0898
*   IF RHBB='0'B&                   /* NOT BEGIN BRACKET BUT @ZA28604*/
*       RHEB='1'B THEN              /* END BRACKET           @ZA28604*/
         TM    RHEB(PTRRH),B'01000000'                             0898
         BNO   @RF00898                                            0898
         TM    RHBB(PTRRH),B'10000000'                             0898
         BNZ   @RF00898                                            0898
*     DO;                                                          0899
*       LCPNXLCW->ISTLCCW=''B;      /* ZERO LCCW             @ZA28604*/
         L     @14,LCPNXLCW(,PTRLCP)                               0900
         XC    ISTLCCW(8,@14),ISTLCCW(@14)                         0900
*       LCPNXLCW->LCCWOP=LD;        /* CMND=DISCONNECT       @ZA28604*/
         MVI   LCCWOP(@14),X'23'                                   0901
*       FMCZF002='1'B;              /* SET I/O SCHED. SUSPENDED    0902
*                                                            @ZA28604*/
         OI    FMCZF002(PTRFMC),B'01000000'                        0902
*     END;                                                         0903
*   ELSE                            /* NOT VALID RH          @ZA28604*/
*     DO;                                                          0904
         B     @RC00898                                            0904
@RF00898 DS    0H                                                  0905
*       LCPZRT01='1'B;              /* CNTROL BLOCK ERROR    @ZA28604*/
         OI    LCPZRT01(PTRLCP),B'01000000'                        0905
*       LCPMNRCD=FRMINDTR;          /* INVALID DATA          @ZA28604*/
         MVI   LCPMNRCD(PTRLCP),X'17'                              0906
*     END;                                                         0907
*                                                                  0907
*/*  SEGMENT(ZERORU)FINISH                                           */
*                                                                  0908
*   DO;                                                            0908
@RC00898 DS    0H                                                  0909
*     GOTO ZERORU#;                                                0909
         B     ZERORU#                                             0909
*ZERORU@:                                                          0910
*   END;                                                           0910
*                                                                  0910
*/* - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
*/*                                                                  */
*/*      REMOVE COVER TO ISTRH ESTABLISHED IN SEGCON SEGMENT.        */
*/* - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
*/*      BASING IS REQUIRED BY SEGCON, SEG0069, AND REGISTER         */
*/*      SAVING IS REQUIRED IN SEGVAL.                               */
*/*                                                                  */
*/* - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - */
*                                                                  0911
*   RFY                                                            0911
*     ISTRH;                        /* COVER NO LONGER REQUIRED      */
*   RFY                                                            0912
*     PTRRH UNRSTD;                 /* REGISTER NO LONGER NEEDED     */
*   END CHKLCCW;                    /* END OF SUBROUTINE             */
         B     @EL00002                                            0913
*                                                                  0914
*/********************************************************************/
*/*                                                                  */
*/* SUBROUTINE-                                                      */
*/*      GETLSCB                                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      ALLOCATES LSCB.                                             */
*/*      QUEUES LSCB TO FMCB WAIT QUEUE.                             */
*/*      PERFORMS SOME LSCB INITIALIZATION.                          */
*/*      SCHEDULES I/O IF REQUIRED.                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0914
*GETLSCB:                                                          0914
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0914
GETLSCB  DS    0H                                                  0915
*   RFY                                                            0915
*     PTRLSC RSTD;                                                 0915
*   RFY                                                            0916
*     ISTLSCB BASED(PTRLSC);                                       0916
*   RFY                                                            0917
*     PTRG14 RSTD;                  /* TO SAVE RETURN ADDRESS        */
*   ZCRSVF7=PTRG14;                 /* SAVE RETURN ADDRESS           */
         L     @09,RPHCRR(,PTRRPH)                                 0918
         L     @09,CRACRR(,@09)                                    0918
         ST    PTRG14,ZCRSVF7(,@09)                                0918
*   RFY                                                            0919
*     PTRG14 UNRSTD;                /* SAVED                         */
*   ZCRPCOD1=0;                     /* BUFFER ALLOCATION PARAM       */
         MVI   ZCRPCOD1(@09),X'00'                                 0920
*   ZCRPLSCB='1'B;                  /* BUFFER ALLOCATION PARAM       */
         OI    ZCRPLSCB(@09),B'00001000'                           0921
*   CALL ATCZPSVT->ZPSZDFA0;        /* CALL BUFFER ALLOCATION        */
         L     @14,ATCZPSVT(,PTRATC)                               0922
         L     @15,ZPSZDFA0(,@14)                                  0922
         BALR  @14,@15                                             0922
*   IF PTRG15=0 THEN                /* IF SUCESSFUL COMPLETION       */
         LTR   PTRG15,PTRG15                                       0923
         BNZ   @RF00923                                            0923
*     DO;                           /* LEVEL 1 - BUFF ALLOCATED      */
*       PTRLSC=RPHSRPRM;            /* ADDRESS LSCB                  */
         L     PTRLSC,RPHSRPRM(,PTRRPH)                            0925
*       LSCLCPBA=PTRLCP;            /* SET LCPB ADDRESS IN LSCB      */
         ST    PTRLCP,LSCLCPBA(,PTRLSC)                            0926
*       IF ZCRQAHED='1'B THEN       /* IF FIRST OPTION REQUIRED      */
         L     @14,RPHCRR(,PTRRPH)                                 0927
         L     @14,CRACRR(,@14)                                    0927
         TM    ZCRQAHED(@14),B'10000000'                           0927
         BNO   @RF00927                                            0927
*/*  TPQUE (PTRLSC,FMCLCPBQ) FIRST                                   */
*                                                                  0928
*         DO;                                                      0928
*           RFY                                                    0929
*            (GPR00P,                                              0929
*             GPR01P,                                              0929
*             GPR02P,                                              0929
*             GPR14P,                                              0929
*             GPR15P) RSTD;                                        0929
*           GEN REFS(GPR01P) SETS(RPHWORK)                         0930
*               (STM GPR02P,GPR08P,RPHWORK(GPR01P));               0930
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*           GPR15P=PTRLSC;          /* GET WORK ELEM POINTER         */
         LR    GPR15P,PTRLSC                                       0931
*           GPR14P=ADDR(FMCLCPBQ);  /* ADDRESS PAB/QUEUE POINTER     */
         LA    GPR14P,FMCLCPBQ(,PTRFMC)                            0932
*           GPR02P=GPR14P->PABWEQA;                                0933
         L     GPR02P,PABWEQA(,GPR14P)                             0933
*           GPR00P=GPR02P;                                         0934
         LR    GPR00P,GPR02P                                       0934
*CMZA0062:                                                         0935
*           ;                                                      0935
CMZA0062 DS    0H                                                  0936
*           IF GPR00P=PABWEQG1×GPR00P=0 THEN                       0936
         CL    GPR00P,@CF02723                                     0936
         BE    @RT00936                                            0936
         LTR   GPR00P,GPR00P                                       0936
         BNZ   @RF00936                                            0936
@RT00936 DS    0H                                                  0937
*             DO;                                                  0937
*               GPR15P=GPR15P×PABWEQG1;                            0938
         L     @09,@CF02723                                        0938
         OR    GPR15P,@09                                          0938
*               GPR15P->PABCHAIN=PABWEQG1;                         0939
         ST    @09,PABCHAIN(,GPR15P)                               0939
*               CS(GPR00P,GPR15P,GPR14P->PABWEQA);                 0940
         CS    GPR00P,@15,PABWEQA(GPR14P)                          0940
*               BC(8,CMZB0062);                                    0941
         BC    8,CMZB0062                                          0941
*               GPR02P=GPR00P;                                     0942
         LR    GPR02P,GPR00P                                       0942
*               GOTO CMZA0062;                                     0943
         B     CMZA0062                                            0943
*CMZB0062:                                                         0944
*               ;                                                  0944
CMZB0062 DS    0H                                                  0945
*             END;                                                 0945
*           ELSE                                                   0946
*             DO;                                                  0946
         B     @RC00936                                            0946
@RF00936 DS    0H                                                  0947
*               DO WHILE((GPR02P->PABCHAIN)^=PABCHNG1);            0947
         B     @DE00947                                            0947
@DL00947 DS    0H                                                  0948
*                 GPR02P=GPR02P->PABCHAIN;                         0948
         L     GPR02P,PABCHAIN(,GPR02P)                            0948
*               END;                                               0949
@DE00947 L     @09,@CF02723                                        0949
         CL    @09,PABCHAIN(,GPR02P)                               0949
         BNE   @DL00947                                            0949
*               GPR15P->PABCHAIN=PABCHNG1;                         0950
         ST    @09,PABCHAIN(,GPR15P)                               0950
*               GPR02P->PABCHAIN=GPR15P×PABCHNG1;                  0951
         OR    @09,GPR15P                                          0951
         ST    @09,PABCHAIN(,GPR02P)                               0951
*             END;                                                 0952
*           GEN REFS(RPHWORK,GPR01P) NOSETS                        0953
*               (LM    GPR02P,GPR08P,RPHWORK(GPR01P));             0953
@RC00936 DS    0H                                                  0953
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*           RFY                                                    0954
*            (GPR00P,                                              0954
*             GPR01P,                                              0954
*             GPR02P,                                              0954
*             GPR14P,                                              0954
*             GPR15P) UNRSTD;                                      0954
*         END;                      /* *** END OF TPQUE GENERATION 0955
*                                      QUEUE FIRST WITHOUT SCHED.    */
*       ELSE                        /* FIRST OPTION NOT REQUIRED     */
*/*  TPQUE (PTRLSC,FMCLCPBQ)                                         */
*                                                                  0956
*         DO;                                                      0956
         B     @RC00927                                            0956
@RF00927 DS    0H                                                  0957
*           RFY                                                    0957
*            (GPR00P,                                              0957
*             GPR01P,                                              0957
*             GPR02P,                                              0957
*             GPR14P,                                              0957
*             GPR15P) RSTD;                                        0957
*           GEN REFS(GPR01P) SETS(RPHWORK)                         0958
*               (STM GPR02P,GPR08P,RPHWORK(GPR01P));               0958
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*           GPR15P=PTRLSC;          /* GET WORK ELEM POINTER         */
         LR    GPR15P,PTRLSC                                       0959
*           GPR14P=ADDR(FMCLCPBQ);  /* ADDRESS PAB/QUEUE POINTER     */
         LA    GPR14P,FMCLCPBQ(,PTRFMC)                            0960
*           GPR15P=GPR15P×PABWEQG1;                                0961
         O     GPR15P,@CF02723                                     0961
*           GPR02P=GPR14P->PABWEQA; /* INITIALIZE WITH QUEUE HEADER  */
         L     GPR02P,PABWEQA(,GPR14P)                             0962
*CMZA0068:                                                         0963
*           ;                       /* CS FAIL TARGET                */
CMZA0068 DS    0H                                                  0964
*           GPR00P=GPR02P;          /* SAVE QUEUE CONTENTS           */
         LR    GPR00P,GPR02P                                       0964
*           GPR15P->PABCHAIN=GPR02P×PABWEQG1;/* FORWARD CHAIN WORK 0965
*                                      ELEMENT                       */
         LR    @09,GPR02P                                          0965
         O     @09,@CF02723                                        0965
         ST    @09,PABCHAIN(,GPR15P)                               0965
*           CS(GPR02P,GPR15P,GPR14P->PABWEQA);/* CHECK FOR END OF  0966
*                                      QUEUE                         */
         CS    GPR02P,@15,PABWEQA(GPR14P)                          0966
*           BC(7,CMZA0068);                                        0967
         BC    7,CMZA0068                                          0967
*           GEN REFS(RPHWORK,GPR01P) NOSETS                        0968
*               (LM    GPR02P,GPR08P,RPHWORK(GPR01P));             0968
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*           RFY                                                    0969
*            (GPR00P,                                              0969
*             GPR01P,                                              0969
*             GPR02P,                                              0969
*             GPR14P,                                              0969
*             GPR15P) UNRSTD;                                      0969
*         END;                      /* *** END OF TPQUE GENERATION 0970
*                                      QUEUE WITHOUT SCHEDULING      */
*       IF(LCPFDBA&MASKWORD)^=0 THEN/* IF BUFFER PRESENT IN LCPB     */
@RC00927 L     @14,LCPFDBA(,PTRLCP)                                0971
         N     @14,@CF04672                                        0971
         LTR   @14,@14                                             0971
         BZ    @RF00971                                            0971
*         DO;                       /* LEVEL 2 - BUFFER IN LCPB      */
*           LSCREQTG=ZLBRQTG;       /* COPY REQUEST TAG FROM ZLBUF   */
         MVC   LSCREQTG(2,PTRLSC),ZLBRQTG(PTRZLB)                  0973
*           LSCLCCWA=ZLBLCCWA;      /* COPY LCCW POINTER             */
         L     @14,ZLBLCCWA(,PTRZLB)                               0974
         ST    @14,LSCLCCWA(,PTRLSC)                               0974
*           FMCZF004='0'B;          /* INITIALIZE READ UP FLAG       */
         NI    FMCZF004(PTRFMC),B'11101111'                        0975
*           IF ZLBRT03='1'B THEN    /* IF WRITE CONVERSATIONAL       */
         TM    ZLBRT03(PTRZLB),B'00010000'                         0976
         BNO   @RF00976                                            0976
*             FMCZF004='1'B;        /* INDICATE READ REQUIRED        */
         OI    FMCZF004(PTRFMC),B'00010000'                        0977
*           ELSE                                                   0978
*             ;                     /* OTHERWISE DON'T               */
@RF00976 DS    0H                                                  0979
*           FMCSEQ1=FMCSEQ1+1;      /* INCREMENT REQ TAG SEQUENCE    */
         LA    @14,1                                               0979
         SLR   @00,@00                                             0979
         IC    @00,FMCSEQ1(,PTRFMC)                                0979
         ALR   @14,@00                                             0979
         STC   @14,FMCSEQ1(,PTRFMC)                                0979
*           IF FMCSEQ1B='0000'B THEN/*                       @ZA10422
*                                      IF SEQUENCE COUNTER OFLOW     */
         TM    FMCSEQ1B(PTRFMC),B'00001111'                        0980
         BNZ   @RF00980                                            0980
*             FMCSEQ1=1;            /* REINITIALIZE COUNTER          */
         MVI   FMCSEQ1(PTRFMC),X'01'                               0981
*           ELSE                                                   0982
*             ;                     /* OTHERWISE DON'T               */
@RF00980 DS    0H                                                  0983
*           IF ZLBRT07='1'B THEN                                   0983
         TM    ZLBRT07(PTRZLB),B'00000001'                         0983
         BNO   @RF00983                                            0983
*             DO;                   /* IF SCHEDULE FLAG SET          */
*               LSCSEQ=FMCOSSN;     /* SET SEQUENCE NUMBER IN LSCB   */
         LH    @14,FMCOSSN(,PTRFMC)                                0985
         N     @14,@CF04884                                        0985
         STH   @14,LSCSEQ(,PTRLSC)                                 0985
*               CALL DOIO;          /* CALL SHIPOUT AND INIT I/O     */
         BAL   @14,DOIO                                            0986
*             END;                  /* END SCHEDULE FLAG SET         */
*           ELSE                    /* IF SCHEDULE FLAG CLEAR        */
*             DO;                   /* LEVEL 3 - NO SCHEDULE         */
         B     @RC00983                                            0988
@RF00983 DS    0H                                                  0989
*               IF ZCRRESET='1'B THEN/* IF RESET IN PROGRESS         */
         L     @14,RPHCRR(,PTRRPH)                                 0989
         L     @14,CRACRR(,@14)                                    0989
         TM    ZCRRESET(@14),B'00000001'                           0989
         BNO   @RF00989                                            0989
*                 DO;               /* PROCESS RESET IN PROGRESS     */
*                   IF ADDR(FMCPAB4)->PABWEQP^=/* IF FSB ^ON TIP     */
*                       ADDR(LCPFDBA->ZLBFSB) THEN/* FOR RESET IN  0991
*                                      PROGRESS              @ZA10422*/
         L     @14,LCPFDBA(,PTRLCP)                                0991
         LA    @14,ZLBFSB(,@14)                                    0991
         L     @00,PABWEQP+111(,PTRFMC)                            0991
         ICM   @00,8,@CB00182                                      0991
         CR    @14,@00                                             0991
         BE    @RF00991                                            0991
*                     LSCFDBA=ADDR(LCPFDBA->ZLBFSB);/* SET FSB PTR IN
*                                      LSCB                          */
         ST    @14,LSCFDBA(,PTRLSC)                                0992
*                   ELSE                                           0993
*                     ;             /*                       @ZA10422*/
@RF00991 DS    0H                                                  0994
*                   LCPFDBA=0;      /* CLEAR LCPB BUFFER POINTER     */
         SLR   @14,@14                                             0994
         ST    @14,LCPFDBA(,PTRLCP)                                0994
*                 END;              /* END RESET IN PROGRESS         */
*               ELSE                /* RESET NOT IN PROGRESS         */
*                 DO;               /* RESET NOT IN PROGRESS         */
         B     @RC00989                                            0996
@RF00989 DS    0H                                                  0997
*                   FMCZX003=FMCZX003+1;/* INCREMENT WAIT QUE COUNTER*/
         LA    @14,1                                               0997
         SLR   @00,@00                                             0997
         IC    @00,FMCZX003(,PTRFMC)                               0997
         ALR   @14,@00                                             0997
         STC   @14,FMCZX003(,PTRFMC)                               0997
*                   ZCRTSW2='1'B;   /* SET NEXT LCCW PROCESS SW.     */
         L     @14,RPHCRR(,PTRRPH)                                 0998
         L     @14,CRACRR(,@14)                                    0998
         OI    ZCRTSW2(@14),B'01000000'                            0998
*                 END;              /* END RESET NOT IN PROGRESS     */
*             END;                  /* LEVEL 3 - NO SCHEDULE         */
*         END;                      /* LEVEL 2 - BUFFER IN LCPB      */
*       ELSE                        /* NO BUFFER IN LCPB             */
*         DO;                       /* LEVEL 2 - NO BUFFER IN LCPB   */
         B     @RC00971                                            1002
@RF00971 DS    0H                                                  1003
*           LSCLCCWA=LCPNXLCW;      /* ADDRESS OF LCCW               */
         L     @14,LCPNXLCW(,PTRLCP)                               1003
         ST    @14,LSCLCCWA(,PTRLSC)                               1003
*           IF ZCRTPDIS='1'B THEN   /* IF DISCONNECT PROCESSING      */
         L     @14,RPHCRR(,PTRRPH)                                 1004
         L     @14,CRACRR(,@14)                                    1004
         TM    ZCRTPDIS(@14),B'00100000'                           1004
         BNO   @RF01004                                            1004
*             DO;                   /* LEVEL 3 - DISCONNECT          */
*               ZCRTPDIS='0'B;      /* CLEAR DISCONNECT FLAG         */
         NI    ZCRTPDIS(@14),B'11011111'                           1006
*               FMCZFD06='1'B;      /* FMCB DISCONNECT PENDING       */
         OI    FMCZFD06(PTRFMC),B'10000000'                        1007
*               LSCZRT0B='1'B;      /* LSCB DISCON. FLAG             */
         OI    LSCZRT0B(PTRLSC),B'00010000'                        1008
*               FMCZF002='1'B;      /* SET I/O SCHEDULING SUSPENDED
*                                                            @XM06347*/
         OI    FMCZF002(PTRFMC),B'01000000'                        1009
*             END;                  /* LEVEL 3 - DISCONNECT          */
*           ELSE                    /* NOT DISCONNECT PROCESSING     */
*             IF FMCZFD06^='1'B THEN/* DISC. PENDING ^ON     @ZA28604*/
         B     @RC01004                                            1011
@RF01004 TM    FMCZFD06(PTRFMC),B'10000000'                        1011
         BO    @RF01011                                            1011
*               LSCREQTG=0;         /* SET TAG FOR GENERAL POLL      */
         SLR   @14,@14                                             1012
         STH   @14,LSCREQTG(,PTRLSC)                               1012
*             ELSE                                                 1013
*               ;                   /*                       @ZA28604*/
@RF01011 DS    0H                                                  1014
*         END;                      /* LEVEL 2 - NO BUFFER IN LCPB   */
*     END;                          /* LEVEL 1 - BUFF ALLOCATED      */
*   ELSE                            /* IF BUFFER ALLOCATION FAILED   */
*     DO;                           /* SET UP VTAM ERROR             */
         B     @RC00923                                            1016
@RF00923 DS    0H                                                  1017
*       LCPZRT00='1'B;              /* INDICATE LOGIC ERROR          */
         OI    LCPZRT00(PTRLCP),B'10000000'                        1017
*       LCPMNRCD=FRMVTAME;          /* INDICATE VTAM ERROR           */
         MVI   LCPMNRCD(PTRLCP),X'A0'                              1018
*     END;                          /* VTAM LOGIC ERROR              */
*   PTRG15=0;                       /* SET RETURN TO CALLER CODE     */
@RC00923 SLR   PTRG15,PTRG15                                       1020
*   RFY                                                            1021
*     ISTLSCB;                      /* REMOVE COVER                  */
*   RFY                                                            1022
*     PTRG14 RSTD;                  /* TO RESTORE RETURN ADDRESS     */
*   PTRG14=ZCRSVF7;                 /* RESTORE RETURN ADDRESS        */
         L     @09,RPHCRR(,PTRRPH)                                 1023
         L     @09,CRACRR(,@09)                                    1023
         L     PTRG14,ZCRSVF7(,@09)                                1023
*   RFY                                                            1024
*     PTRG14 UNRSTD;                /* RESTORED                      */
*   END GETLSCB;                    /* END OF SUBROUTINE             */
@EL00003 DS    0H                                                  1025
@EF00003 DS    0H                                                  1025
@ER00003 BR    @14                                                 1025
*   GEN NOSETS NODEFS NOREFS(EJECT);                               1026
         EJECT
*                                                                  1027
*/********************************************************************/
*/*                                                                  */
*/* SUBROUTINE-                                                      */
*/*      DOIO                                                        */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      SETUP AND CALL SHIPOUT.                                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  1027
*DOIO:                                                             1027
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1027
         B     @PB00004                                            1027
DOIO     DS    0H                                                  1028
*   RFY                                                            1028
*     PTRG14 RSTD;                  /* TO SAVE RETURN ADDRESS        */
*   ZCRSVF8=PTRG14;                 /* SAVE RETURN ADDRESS           */
         L     @09,RPHCRR(,PTRRPH)                                 1029
         L     @09,CRACRR(,@09)                                    1029
         ST    PTRG14,ZCRSVF8(,@09)                                1029
*   RFY                                                            1030
*     PTRG14 UNRSTD;                /* SAVED                         */
*   IF ZLBRT05='1'B THEN            /* IF SCHED COUNT FLAG SET       */
         TM    ZLBRT05(PTRZLB),B'00000100'                         1031
         BNO   @RF01031                                            1031
*     DNCACIP=DNCACIP+1;            /* INCREMENT SCHEDULE COUNT      */
         LA    @14,1                                               1032
         SLR   @00,@00                                             1032
         IC    @00,DNCACIP(,PTRDNC)                                1032
         ALR   @14,@00                                             1032
         STC   @14,DNCACIP(,PTRDNC)                                1032
*   ELSE                                                           1033
*     ;                             /* OTHERWISE DON'T               */
@RF01031 DS    0H                                                  1034
*   PTRZLB=LCPFDBA;                 /* ADDR BEGINNING OF CHN PGM     */
         L     PTRZLB,LCPFDBA(,PTRLCP)                             1034
*   LCPFDBA=0;                      /* CLEAR BUFFER POINTER          */
         SLR   @14,@14                                             1035
         ST    @14,LCPFDBA(,PTRLCP)                                1035
*   ZLBLSTBF=ZCRBFPTR;              /* SET PTR TO LAST BUFF IN CHP   */
         L     @14,RPHCRR(,PTRRPH)                                 1036
         L     @14,CRACRR(,@14)                                    1036
         L     @14,ZCRBFPTR(,@14)                                  1036
         ST    @14,ZLBLSTBF(,PTRZLB)                               1036
*   CALL ATCZLFVT->ZLFZEFBA;        /* CALL SHIPOUT                  */
         L     @14,ATCZLFVT(,PTRATC)                               1037
         L     @15,ZLFZEFBA(,@14)                                  1037
         BALR  @14,@15                                             1037
*   ZCRTIC='0'B;                    /* CLEAR SELECT TO BE GENNED     */
         L     @14,RPHCRR(,PTRRPH)                                 1038
         L     @14,CRACRR(,@14)                                    1038
         NI    ZCRTIC(@14),B'01111111'                             1038
*   RFY                                                            1039
*     PTRG14 RSTD;                  /* TO RESTORE RETURN ADDRESS     */
*   PTRG14=ZCRSVF8;                 /* RESTORE RETURN ADDRESS        */
         L     @09,RPHCRR(,PTRRPH)                                 1040
         L     @09,CRACRR(,@09)                                    1040
         L     PTRG14,ZCRSVF8(,@09)                                1040
*   RFY                                                            1041
*     PTRG14 UNRSTD;                /* RESTORED                      */
*   END DOIO;                       /* END OF SUBROUTINE             */
@EL00004 DS    0H                                                  1042
@EF00004 DS    0H                                                  1042
@ER00004 BR    @14                                                 1042
@PB00004 DS    0H                                                  1043
*   RFY                                                            1043
*     PTRLSC UNRSTD;                /* REMOVE BASE RESTRICTION       */
*   GEN NOSETS NODEFS NOREFS(EJECT);                               1044
         EJECT
*                                                                  1045
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT-                                                         */
*/*      PROCSYN                                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      GET AN EXTRA LSCB WHEN LCCW SYNCH IS REQUIRED.  THE LSCB    */
*/*      IS INITIALIZED TO INDICATE IT IS A SYNCH LSCB.              */
*/*                                                                  */
*/********************************************************************/
*                                                                  1045
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(PROCSYN)START                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1045
*   DO;                                                            1045
*     GOTO PROCSYN@;                                               1046
         B     PROCSYN@                                            1046
*PROCSYN:                                                          1047
*   END;                            /* PROCSYN: SUBROUTINE           */
PROCSYN  DS    0H                                                  1048
*   RFY                                                            1048
*     PTRLSC RSTD;                  /* RETURNED FROM SUBROUTINE      */
*   RFY                                                            1049
*     ISTLSCB BASED(PTRLSC);        /* RETURNED FROM SUBROUTINE      */
*   ZLBRT02='1'B;                   /* SET EOB                       */
*   ZLBRT04='1'B;                   /* SET FEEDBACK REQ'D            */
*   ZLBRT05='1'B;                   /* SET DECREMENT SCHED COUNT     */
*   ZLBRT07='1'B;                   /* SET SCHEDULING FLAG           */
         OI    ZLBRT02(PTRZLB),B'00101101'                         1053
*   ZLBELI='1'B;                    /* END OF LCPB                   */
         OI    ZLBELI(PTRZLB),B'10000000'                          1054
*   CALL GETLSCB;                   /* GET LSCB & PUT IT ON WAITQ    */
         BAL   @14,GETLSCB                                         1055
*   LSCLCCWA=0;                     /* CLEAR LCCW POINTER            */
         SLR   @14,@14                                             1056
         ST    @14,LSCLCCWA(,PTRLSC)                               1056
*   LSCLCPBA=0;                     /* CLEAR LCPB POINTER            */
         ST    @14,LSCLCPBA(,PTRLSC)                               1057
*   IF ZCREXRES='1'B THEN           /* IF EXCEPTION RESPONSE         */
         L     @14,RPHCRR(,PTRRPH)                                 1058
         L     @14,CRACRR(,@14)                                    1058
         TM    ZCREXRES(@14),B'00001000'                           1058
         BNO   @RF01058                                            1058
*     LSCEXRES='1'B;                /* SET EXCEPTION RESPONSE        */
         OI    LSCEXRES(PTRLSC),B'00001000'                        1059
*   ELSE                                                           1060
*     ;                             /* OTHERWISE BEST NOT TO         */
@RF01058 DS    0H                                                  1061
*   RPHWEA=0;                       /* FLAG END OF LCPB PROCESSING   */
         SLR   @14,@14                                             1061
         ST    @14,RPHWEA(,PTRRPH)                                 1061
*   RFY                                                            1062
*     ISTLSCB;                      /* NO LONGER REQUIRED            */
*   RFY                                                            1063
*     PTRLSC UNRSTD;                /* NO LONGER REQUIRED            */
*                                                                  1063
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(PROCSYN)FINISH                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1064
*   DO;                                                            1064
*     GOTO PROCSYN#;                                               1065
         B     PROCSYN#                                            1065
*PROCSYN@:                                                         1066
*   END;                            /* END OF SEGMENT                */
PROCSYN@ DS    0H                                                  1067
*   GEN NOSETS NOREFS NODEFS(EJECT);                               1067
         EJECT
*                                                                  1068
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT-                                                         */
*/*      PROCRST                                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      GETS A LSCB.                                                */
*/*      TESTS NEXT LCCW.                                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  1068
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(PROCRST)START                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1068
*   DO;                                                            1068
*     GOTO PROCRST@;                                               1069
         B     PROCRST@                                            1069
*PROCRST:                                                          1070
*   END;                                                           1070
PROCRST  DS    0H                                                  1071
*   CALL GETLSCB;                   /* ALLOCATE LSCB + INIT I/O      */
         BAL   @14,GETLSCB                                         1071
*   IF LCPZRT00='1'B                /* IF LOGICAL ERROR              */
*       ×LCPZRT01='1'B THEN                                        1072
         TM    LCPZRT00(PTRLCP),B'11000000'                        1072
         BNZ   @RT01072                                            1072
*     ;                             /* × CONTROL BLOCK ERROR         */
*   ELSE                            /* NO ERROR DETECTED             */
*     IF LCPNXLCW->LCCWCC='1'B THEN /* IF LCCW COMMAND CHAINED       */
         L     @14,LCPNXLCW(,PTRLCP)                               1074
         TM    LCCWCC(@14),B'01000000'                             1074
         BNO   @RF01074                                            1074
*       DO;                         /* PROCESS COMMAND CHAINING      */
*         LCPNXLCW=LCPNXLCW+LENGTH(ISTLCCW);/* ADDRESS NEXT LCCW     */
         AL    @14,@CF00071                                        1076
         ST    @14,LCPNXLCW(,PTRLCP)                               1076
*         PTRLCC=LCPNXLCW;          /* SET BASING                    */
         LR    PTRLCC,@14                                          1077
*       END;                        /* END COMMAND CHAIN PROCESS     */
*     ELSE                          /* NOT COMMAND CHAINED           */
*       RPHWEA=0;                   /* CLEAR WORK ELEMENT POINTER    */
*                                                                  1079
         B     @RC01074                                            1079
@RF01074 SLR   @14,@14                                             1079
         ST    @14,RPHWEA(,PTRRPH)                                 1079
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(PROCRST)FINISH                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1080
*   DO;                                                            1080
@RC01074 DS    0H                                                  1080
@RT01072 DS    0H                                                  1081
*     GOTO PROCRST#;                                               1081
         B     PROCRST#                                            1081
*PROCRST@:                                                         1082
*   END;                            /* END OF SEGMENT                */
PROCRST@ DS    0H                                                  1083
*   GEN NOSETS NODEFS NOREFS(EJECT);                               1083
         EJECT
*                                                                  1084
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT-                                                         */
*/*      ERRPROC                                                     */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      SETS ERROR LOCK.                                            */
*/*      DETERMINES HOW MANY REAL CCW'S CAN BE PROCESS, AND GOES     */
*/*      AHEAD AND INITIATES THEM.                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  1084
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(ERRPROC)START                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1084
*   DO;                                                            1084
*     GOTO ERRPROC@;                                               1085
         B     ERRPROC@                                            1085
*ERRPROC:                                                          1086
*   END;                                                           1086
ERRPROC  DS    0H                                                  1087
*   CALL ATCZPSVT->ZPSZBFZ0;        /* CALL ERROR RECOVERY           */
         L     @11,ATCZPSVT(,PTRATC)                               1087
         L     @15,ZPSZBFZ0(,@11)                                  1087
         BALR  @14,@15                                             1087
*   ZCRSLCP='0'B;                   /* CLEAR PROCESS SWITCH          */
*   ZCREXTYP='0'B;                  /* SET EXIT TYPE = NORMAL        */
*                                                                  1089
         L     @14,RPHCRR(,PTRRPH)                                 1089
         L     @14,CRACRR(,@14)                                    1089
         NI    ZCRSLCP(@14),B'00111111'                            1089
*   /*****************************************************************/
*   /*                                                               */
*   /* SEGMENT(ERRPROC)FINISH                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1090
*   DO;                                                            1090
*     GOTO ERRPROC#;                                               1091
         B     ERRPROC#                                            1091
*ERRPROC@:                                                         1092
*   END;                            /* END OF SEGMENT                */
ERRPROC@ DS    0H                                                  1093
*/* TPEPILOG                                                         */
*                                                                  1093
*   GEN(PRINT OFF);                                                1093
         PRINT OFF
*   GEN(PRINT ON);                                                 1094
*                                                                  1094
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1095
*   END ISTZBF0L                    /* END OF COMPILATION            */
*                                                                  1095
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  1095
*       ;                                                          1095
@EL00001 DS    0H                                                  1095
@EF00001 DS    0H                                                  1095
@ER00001 BR    @14                                                 1095
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTZBF0L CSECT
         DS    0F
@CF00073 DC    F'4'
@CF00071 DC    F'8'
@CF02723 DC    XL4'80000000'
@CF04672 DC    XL4'00FFFFFF'
@CF04884 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IOSBPTR  DS    A
SRBPTR   DS    A
CVTPTR   DS    A
LCPBPTR  DS    A
LDNCBPTR DS    A
DNCBPTR  DS    A
FMCBPTR  DS    A
FSBPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTZBF0L CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC04723 DC    C'BC0L'
@CB00182 DC    X'00'
BASICTRT DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000011'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'000D1600001D122D0000000000000000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
PTRRPH   EQU   @01
PTRATC   EQU   @02
PTRLDN   EQU   @03
PTRDNC   EQU   @04
PTRFMC   EQU   @05
PTRZLB   EQU   @06
PTRLCP   EQU   @07
QXFRFR   EQU   @08
QXFRTO   EQU   @09
PTRLCC   EQU   @10
PTRLSC   EQU   @11
PTRRH    EQU   @11
PTRG12   EQU   @12
PTRG13   EQU   @13
PTRG14   EQU   @14
PTRG15   EQU   @15
GPR00F   EQU   @00
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
PTRG00   EQU   @00
PTRG08   EQU   @08
PTRG09   EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CZMP0046 EQU   16
ATCLCPTR EQU   1032
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00002 EQU   IOSB+20
IOSCSW   EQU   @NM00002+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
CVTMAP   EQU   0
CVT0VL00 EQU   CVTMAP+24
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTZPSVT EQU   0
ZPSZDFA0 EQU   ISTZPSVT
ZPSZDFH0 EQU   ISTZPSVT+12
ZPSZBFZ0 EQU   ISTZPSVT+28
ZPSZBFMB EQU   ISTZPSVT+32
ZPSZTRTT EQU   ISTZPSVT+40
ISTZFSVT EQU   0
ZFSZEFBB EQU   ISTZFSVT
ZFSZEABB EQU   ZFSZEFBB
ZFSZEFAB EQU   ISTZFSVT+4
ZFSZEAAB EQU   ZFSZEFAB
ISTZLFVT EQU   0
ZLFZEFBA EQU   ISTZLFVT
ZLFZEFAA EQU   ISTZLFVT+4
ZLFZEAAA EQU   ZLFZEFAA
ZLFZFFFA EQU   ISTZLFVT+8
ZLFZFAFA EQU   ZLFZFFFA
ZLFZEFTA EQU   ISTZLFVT+12
ZLFZEATA EQU   ZLFZEFTA
ZLFZFFTA EQU   ISTZLFVT+16
ZLFZFATA EQU   ZLFZFFTA
ZLFZEFFA EQU   ISTZLFVT+24
ZLFZEAFA EQU   ZLFZEFFA
ZLFZEFCA EQU   ISTZLFVT+28
ZLFZEACA EQU   ZLFZEFCA
ISTZLBVT EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RH2      EQU   RHFLAGS+1
RHEXCEPT EQU   RH2
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
RHBB     EQU   RH3
RHEB     EQU   RH3
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ZSAZACTV EQU   ZSAZSVMS
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZTRAC EQU   ISTZSAVE+36
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWSI   EQU   LCCWOP
LCCWSD   EQU   LCCWOP
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWCC   EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWLSI  EQU   LCCWFLAG
LCCWCNT  EQU   ISTLCCW+2
LCCWDATA EQU   ISTLCCW+4
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZRT00 EQU   LCPFLAGS
LCPZRT01 EQU   LCPFLAGS
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPLCCWC EQU   ISTLCPB+38
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCREXTYP EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRTIC   EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRGENSW EQU   ISTZCRR+16
ZCRTSW2  EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRPFLGS EQU   ISTZCRR+17
ZCRQAHED EQU   ZCRPFLGS
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRBFPTR EQU   ISTZCRR+44
ZCRZLB   EQU   ISTZCRR+48
ZCRPVZB  EQU   ISTZCRR+52
ZCRSVRTN EQU   ISTZCRR+56
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRWKARA EQU   ISTZCRR+156
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVWK2 EQU   ZCRWKARA+4
ZCROPCDE EQU   ISTZCRR+183
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCREBC0L EQU   ZCRENTER+17
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTDCCRR EQU   0
CRRSPACE EQU   ISTDCCRR+12
CRRSAREA EQU   0
CRRMAS   EQU   CRRSAREA+148
CRRMAS1  EQU   CRRMAS
CRRMAS2  EQU   CRRMAS+1
CRRMAS3  EQU   CRRMAS+2
CRRMAS4  EQU   CRRMAS+3
CRRRMAS1 EQU   CRRMAS+4
CRRRMAS2 EQU   CRRMAS+5
CRRRMAS3 EQU   CRRMAS+6
CRRSMAS  EQU   CRRRMAS3
CRRATS   EQU   CRRSAREA+156
CRRATS1  EQU   CRRATS
CRRATS2  EQU   CRRATS+1
CRRATS3  EQU   CRRATS+2
CRRATS4  EQU   CRRATS+3
CRRRATS1 EQU   CRRATS+4
CRRRATS2 EQU   CRRATS+5
CRRRATS3 EQU   CRRATS+6
CRRSATS  EQU   CRRRATS3
CRRFLGS1 EQU   CRRSAREA+164
CRRFLGS2 EQU   CRRSAREA+165
CRRFLGS3 EQU   CRRSAREA+166
CRRFLGS4 EQU   CRRSAREA+167
CRRFLGS  EQU   CRRSAREA+168
CRRRFLG1 EQU   CRRSAREA+169
CRRRTYPE EQU   CRRRFLG1
CRRFDBK1 EQU   CRRSAREA+170
CRRFDB2  EQU   CRRFDBK1+1
CRRFDB3  EQU   CRRFDBK1+2
CRRFDBK2 EQU   CRRSAREA+176
CRRDSB   EQU   CRRFDBK2
CRRESR   EQU   CRRFDBK2+2
CRRTRBUF EQU   CRRSAREA+204
CRRBFLGS EQU   CRRSAREA+280
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTRIA   EQU   0
RIAABRGS EQU   ISTRIA+16
RIAFLGS  EQU   ISTRIA+80
RIAFLG1  EQU   RIAFLGS
RIAFLG2  EQU   RIAFLGS+1
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABWEQP  EQU   PABWEQA+1
PABCHAIN EQU   PABWQCHN+4
PABDVTA  EQU   ISTPAB+9
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00061 EQU   LOKCHNG+2
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00069 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCZPSVT EQU   ATCAOSM+72
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCZLFVT EQU   ATCAOSM+188
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00071 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTNCB   EQU   0
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTLDNCB EQU   0
LDNCFLAG EQU   ISTLDNCB+54
LDNFLAGS EQU   ISTLDNCB+107
LDNFLAG2 EQU   ISTLDNCB+110
LDNZIOLK EQU   ISTLDNCB+184
LDNZERPF EQU   ISTLDNCB+185
LDNZCPAN EQU   LDNZERPF
LDNZEPIN EQU   LDNZERPF
LDNZLPC  EQU   ISTLDNCB+186
LDNDCDEB EQU   ISTLDNCB+304
LDNZSAV3 EQU   ISTLDNCB+376
LDNZSAV4 EQU   LDNZSAV3+8
LDNZH003 EQU   ISTLDNCB+577
ISTDNCB  EQU   0
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCBSCED EQU   DNCOS+2
DNCACIP  EQU   DNCBSCED+1
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROCFTX  EQU   PROPROC2
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCPROCD EQU   ISTFMCB+48
FMCPAB3  EQU   ISTFMCB+96
FMCPAB4  EQU   ISTFMCB+112
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCOSSN  EQU   FMCNXCFM
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF002 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF006 EQU   FMCZFLAG
FMCZFA06 EQU   FMCZF006
FMCZFC06 EQU   FMCZF006
FMCZFD06 EQU   FMCZF006+1
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCZX001 EQU   FMCVS1+28
FMCZX003 EQU   FMCVS1+30
FMCSEQ1  EQU   FMCVS1+34
FMCSEQ1B EQU   FMCSEQ1
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTFDB   EQU   0
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
ISTZLBUF EQU   0
ZLBFSM   EQU   ISTZLBUF+4
ISTLSCB  EQU   0
LSC1WORD EQU   ISTLSCB
LSCREQTG EQU   LSC1WORD+2
LSCZRT02 EQU   LSCREQTG
LSCZRT03 EQU   LSCREQTG
LSCZRT04 EQU   LSCREQTG
LSCZRT05 EQU   LSCREQTG
LSCZRT06 EQU   LSCREQTG
LSCZRT07 EQU   LSCREQTG
LSCZMNRC EQU   LSCREQTG+1
LSCZRT08 EQU   LSCZMNRC
LSCZRT09 EQU   LSCZMNRC
LSCZRT0B EQU   LSCZMNRC
LSCCHAIN EQU   ISTLSCB+4
LSCCHAI1 EQU   LSCCHAIN
LSCRUCNT EQU   ISTLSCB+8
LSCFLGS  EQU   ISTLSCB+9
LSCEXRES EQU   LSCFLGS
LSCSEQ   EQU   ISTLSCB+10
LSCLCPBA EQU   ISTLSCB+16
LSCLCCWA EQU   ISTLSCB+20
LSCFDBA  EQU   ISTLSCB+24
ISTCCW   EQU   0
CCWVADDR EQU   ISTCCW
CCWFLAGS EQU   ISTCCW+4
CCWSPARE EQU   ISTCCW+5
ONEBYTE  EQU   0
ISTZTRTT EQU   0
VECTOR   EQU   0
SAV0046  EQU   0
SAV10046 EQU   SAV0046
SAV20046 EQU   SAV0046+4
SAV40046 EQU   SAV0046+8
SAV60046 EQU   SAV0046+12
SAVE0046 EQU   SAV0046+16
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTTCBA  EQU   ISTPST+16
PSTDMPS  EQU   ISTPST+132
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00088 EQU   FSBRQTAG
ZLBBTRAN EQU   ISTZLBUF
ZLBFDBZ  EQU   ZLBBTRAN
ZLBAIO   EQU   ZLBBTRAN+16
ZLBDTIO  EQU   ZLBFSM
ZLBCCW1  EQU   ZLBDTIO
ZLBCCW2  EQU   ZLBDTIO+8
ZLBCCW3  EQU   ZLBDTIO+16
ZLBSNS   EQU   ZLBDTIO+28
ZLBERC   EQU   ZLBDTIO+29
ZLBELI   EQU   ZLBERC
ZLBLCPBA EQU   ZLBDTIO+32
ZLBLCCWA EQU   ZLBDTIO+36
ZLBLSTBF EQU   ZLBDTIO+44
ZLBSAF   EQU   ZLBDTIO+48
ZLBSTAT  EQU   ZLBSAF
ZLBDEVST EQU   ZLBSTAT
ZLBRQTG  EQU   ZLBDTIO+50
ZLBRQFLG EQU   ZLBRQTG
ZLBRT02  EQU   ZLBRQFLG
ZLBRT03  EQU   ZLBRQFLG
ZLBRT04  EQU   ZLBRQFLG
ZLBRT05  EQU   ZLBRQFLG
ZLBRT07  EQU   ZLBRQFLG
ZLBRT09  EQU   ZLBRQFLG+1
ZLBRT0A  EQU   ZLBRQFLG+1
ZLBFLAGS EQU   ZLBDTIO+56
ZLBTEXTA EQU   ZLBCCW3
ZLBTEXTB EQU   ZLBFLAGS
ZLBTEXTC EQU   ZLBFLAGS
ZLBPPL   EQU   ZLBTEXTC
ZLBFAIO  EQU   ZLBAIO
ZLBFSB   EQU   ZLBFAIO
TAGZLB   EQU   ZLBRQTG+1
TAGFMC   EQU   FMCSEQ1
SNATRT   EQU   BASICTRT
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ZLBFDBS  EQU   ZLBFAIO+32
ZLBPPCSC EQU   ZLBPPL+14
ZLBPPRS1 EQU   ZLBPPL+13
ZLBPPRSV EQU   ZLBPPL+12
ZLBPPCLG EQU   ZLBPPL+12
ZLBPPCC  EQU   ZLBPPL+12
ZLBPPINT EQU   ZLBPPL+12
ZLBPPHIO EQU   ZLBPPL+12
ZLBPP    EQU   ZLBPPL+4
ZLBPPLDB EQU   ZLBPPL+1
ZLBPPLF  EQU   ZLBPPL
ZLBTEXT1 EQU   ZLBTEXTB
ZLBTEXT  EQU   ZLBTEXTA+8
ZLBRSV0A EQU   ZLBTEXTA
ZLBTCP   EQU   ZLBFLAGS+8
ZLBTCSW  EQU   ZLBFLAGS+1
ZLBRSV09 EQU   ZLBFLAGS
ZLBWCCSP EQU   ZLBFLAGS
ZLBRSV07 EQU   ZLBFLAGS
ZLBLSTST EQU   ZLBDTIO+52
ZLBRQSEQ EQU   ZLBRQTG+1
ZLBRT0B  EQU   ZLBRQFLG+1
ZLBRT08  EQU   ZLBRQFLG+1
ZLBRT06  EQU   ZLBRQFLG
ZLBRT01  EQU   ZLBRQFLG
ZLBRT00  EQU   ZLBRQFLG
ZLBCHNST EQU   ZLBSTAT+1
ZLBUCST  EQU   ZLBDEVST
ZLBDEST  EQU   ZLBDEVST
ZLBRSV10 EQU   ZLBDEVST
ZLBRSV11 EQU   ZLBDTIO+40
ZLBCOMP  EQU   ZLBDTIO+31
ZLBRSV08 EQU   ZLBDTIO+30
ZLBRSV05 EQU   ZLBERC
ZLBFBMI  EQU   ZLBERC
ZLBETI   EQU   ZLBERC
ZLBEMI   EQU   ZLBERC
ZLBEBI   EQU   ZLBERC
ZLBECI   EQU   ZLBERC
ZLBSOC   EQU   ZLBSNS
ZLBSCC   EQU   ZLBSNS
ZLBSUS   EQU   ZLBSNS
ZLBSDC   EQU   ZLBSNS
ZLBSEQCK EQU   ZLBSNS
ZLBSBOL  EQU   ZLBSNS
ZLBSIR   EQU   ZLBSNS
ZLBSCR   EQU   ZLBSNS
ZLBRSV12 EQU   ZLBDTIO+24
ZLBCPTC3 EQU   ZLBCCW3+6
ZLBRSV04 EQU   ZLBCCW3+5
ZLBCPFL3 EQU   ZLBCCW3+4
ZLBCPAD3 EQU   ZLBCCW3+1
ZLBCPCF3 EQU   ZLBCCW3
ZLBCPTC2 EQU   ZLBCCW2+6
ZLBRSV03 EQU   ZLBCCW2+5
ZLBCPFL2 EQU   ZLBCCW2+4
ZLBCPAD2 EQU   ZLBCCW2+1
ZLBCPCF2 EQU   ZLBCCW2
ZLBCPTC1 EQU   ZLBCCW1+6
ZLBCMOD  EQU   ZLBCCW1+5
ZLBCPFL1 EQU   ZLBCCW1+4
ZLBCPAD1 EQU   ZLBCCW1+1
ZLBCPCF1 EQU   ZLBCCW1
ZLBLNG2  EQU   ZLBBTRAN+14
ZLBRSV01 EQU   ZLBBTRAN+12
FSBRT0B  EQU   @NM00088+1
FSBRT0A  EQU   @NM00088+1
FSBRT09  EQU   @NM00088+1
FSBRT08  EQU   @NM00088+1
FSBRT07  EQU   @NM00088
FSBRT06  EQU   @NM00088
FSBRT05  EQU   @NM00088
FSBRT04  EQU   @NM00088
FSBRT03  EQU   @NM00088
FSBRT02  EQU   @NM00088
FSBRT01  EQU   @NM00088
FSBRT00  EQU   @NM00088
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00007 EQU   IOSPCISC+4
@NM00006 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00005 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
PSTDRDYQ EQU   PSTDMPS+1
@NM00090 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTSMDYP EQU   ISTPST+64
PSTCRRS  EQU   ISTPST+60
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTMPSTP EQU   ISTPST+20
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00089 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
CCWCOUNT EQU   ISTCCW+6
CCWSPRSV EQU   CCWSPARE
CCWCFTX  EQU   CCWSPARE
CCWTRCE  EQU   CCWSPARE
CCWNULL  EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSKIP  EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWCD    EQU   CCWFLAGS
CCWADDR  EQU   CCWVADDR+1
CCWCODE  EQU   CCWVADDR
LSCTLBAD EQU   ISTLSCB+28
LSCFDB2  EQU   LSCFDBA+1
LSCFDB1  EQU   LSCFDBA
LSCLCCW1 EQU   ISTLSCB+12
LSCRRCNT EQU   LSCSEQ+1
LSCRRCCT EQU   LSCSEQ
LSCATOP  EQU   LSCFLGS
LSCFREE  EQU   LSCFLGS
LSCDSTAT EQU   LSCFLGS
LSCZRIMM EQU   LSCFLGS
LSCRSV01 EQU   LSCFLGS
LSCSMODE EQU   LSCFLGS
LSCZMIRC EQU   LSCRUCNT
LSCCHAI2 EQU   LSCCHAIN+1
LSCCHNG  EQU   LSCCHAI1
LSCZRTSC EQU   LSCZMNRC
LSCZRT0A EQU   LSCZMNRC
LSCZRTL9 EQU   LSCZRT09
LSCZRTL8 EQU   LSCZRT08
LSCZRTL7 EQU   LSCZRT07
LSCZRTL6 EQU   LSCZRT06
LSCZRTL5 EQU   LSCZRT05
LSCZRTL4 EQU   LSCZRT04
LSCZRTL3 EQU   LSCZRT03
LSCZRTL2 EQU   LSCZRT02
LSCZRT01 EQU   LSCREQTG
LSCZRT00 EQU   LSCREQTG
LSCLNGTH EQU   LSC1WORD+1
LSCTYPE  EQU   LSC1WORD
ZLBLNG1  EQU   ZLBFSM
ZLBCHAIN EQU   ISTZLBUF
FSBFDB   EQU   ISTFSB+32
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00087 EQU   FSBSS2
@NM00086 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00085 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBLATOP EQU   FSBSFLGS
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
FDBOFSET EQU   ISTFDB+10
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
FDBFDBA  EQU   ISTFDB
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00084 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX002 EQU   FMCVS1+29
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00083 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00082 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFB06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00081 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00080 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00079 EQU   ISTFMCB+30
@NM00078 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDNCBA EQU   ISTFMCB+16
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCSAF   EQU   ISTFMCB+2
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZV001 EQU   DNCOS+17
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCLICP  EQU   DNCBSCED
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF006 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCCONT  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
DNCNCB   EQU   ISTDNCB
LDNZS00F EQU   LDNZH003+1
LDNZS00E EQU   LDNZH003+1
LDNZS00D EQU   LDNZH003+1
LDNZS00C EQU   LDNZH003+1
LDNZS00B EQU   LDNZH003+1
LDNZS007 EQU   LDNZH003
LDNZS006 EQU   LDNZH003
LDNZS005 EQU   LDNZH003
LDNZS004 EQU   LDNZH003
LDNZS003 EQU   LDNZH003
LDNZS002 EQU   LDNZH003
LDNZS001 EQU   LDNZH003
LDNZS000 EQU   LDNZH003
LDNZX006 EQU   ISTLDNCB+576
LDNZC001 EQU   ISTLDNCB+569
LDNZX005 EQU   ISTLDNCB+568
LDNZV006 EQU   ISTLDNCB+564
LDNSRB   EQU   ISTLDNCB+520
LDNIOSB  EQU   ISTLDNCB+412
@NM00077 EQU   LDNZSAV3+28
LDNRSV06 EQU   LDNZSAV4+16
LDNZSAV6 EQU   LDNZSAV4+12
LDNZSAV5 EQU   LDNZSAV4
LDNZSAVE EQU   LDNZSAV3
LDNZSAV2 EQU   ISTLDNCB+368
LDNZSAV1 EQU   ISTLDNCB+352
LDNZ3RR  EQU   ISTLDNCB+348
LDNZ2RR  EQU   ISTLDNCB+344
LDNZ1RR  EQU   ISTLDNCB+340
LDNRSV0B EQU   ISTLDNCB+336
LDNRSV0A EQU   ISTLDNCB+332
LDNRSV09 EQU   ISTLDNCB+328
LDNRSV08 EQU   ISTLDNCB+324
LDNRSV07 EQU   ISTLDNCB+320
LDNDEAD  EQU   LDNDCDEB+12
LDNUCBAD EQU   LDNDCDEB+8
LDNAPPAD EQU   LDNDCDEB+5
LDNEXSCL EQU   LDNDCDEB+4
LDNDCBAD EQU   LDNDCDEB+1
LDNDEBID EQU   LDNDCDEB
LDNZRIND EQU   ISTLDNCB+300
LDNRPH   EQU   ISTLDNCB+192
LDNZTCP  EQU   ISTLDNCB+188
LDNZCHNC EQU   ISTLDNCB+187
LDNZLPC7 EQU   LDNZLPC
LDNZLPC6 EQU   LDNZLPC
LDNZLPC5 EQU   LDNZLPC
LDNZLPC4 EQU   LDNZLPC
LDNZLPC3 EQU   LDNZLPC
LDNZLPC2 EQU   LDNZLPC
LDNZLPC1 EQU   LDNZLPC
LDNZLPC0 EQU   LDNZLPC
LDNRSV05 EQU   LDNZERPF
LDNZCTOV EQU   LDNZEPIN
LDNZF001 EQU   LDNZEPIN
LDNZFRDW EQU   LDNZCPAN
LDNZFRD  EQU   LDNZCPAN
LDNZNARD EQU   LDNZCPAN
LDNRSV04 EQU   LDNZIOLK
LDNZATBF EQU   LDNZIOLK
LDNZERLK EQU   LDNZIOLK
LDNZDSIC EQU   LDNZIOLK
LDNZPAB1 EQU   ISTLDNCB+168
LDNZV005 EQU   ISTLDNCB+160
LDNZS1VR EQU   ISTLDNCB+136
LDNZS1RR EQU   ISTLDNCB+132
LDNZS1FC EQU   ISTLDNCB+128
LDNZS1BC EQU   ISTLDNCB+124
LDNZLOCK EQU   ISTLDNCB+120
LDNZFBUF EQU   ISTLDNCB+116
LDNZLAST EQU   ISTLDNCB+112
LDNRSV02 EQU   LDNFLAG2
LDNZFF04 EQU   LDNFLAG2
LDNZFF69 EQU   LDNFLAGS+2
LDNTPBIO EQU   LDNFLAGS+2
LDNZFF03 EQU   LDNFLAGS+2
LDNZFF02 EQU   LDNFLAGS+2
LDNZFF01 EQU   LDNFLAGS+2
LDNZFF00 EQU   LDNFLAGS+2
LDNCLOSD EQU   LDNFLAGS+2
LDNZENTR EQU   LDNFLAGS+2
LDNZICCW EQU   LDNFLAGS+1
LDNZREC  EQU   LDNFLAGS+1
LDNZCTXT EQU   LDNFLAGS+1
LDNZATLK EQU   LDNFLAGS+1
LDNZCHNE EQU   LDNFLAGS+1
LDNZATTP EQU   LDNFLAGS+1
LDNZIOBY EQU   LDNFLAGS+1
LDNZF00A EQU   LDNFLAGS+1
LDNZF009 EQU   LDNFLAGS
LDNZF008 EQU   LDNFLAGS
LDNZF007 EQU   LDNFLAGS
LDNZF006 EQU   LDNFLAGS
LDNZF005 EQU   LDNFLAGS
LDNZF004 EQU   LDNFLAGS
LDNZF003 EQU   LDNFLAGS
LDNZF002 EQU   LDNFLAGS
LDNZHDCC EQU   ISTLDNCB+106
LDNZARM  EQU   ISTLDNCB+104
LDNZRM   EQU   ISTLDNCB+102
LDNZRB   EQU   ISTLDNCB+100
LDNCPQ   EQU   ISTLDNCB+96
LDNSIOQ  EQU   ISTLDNCB+92
LDNZX002 EQU   ISTLDNCB+91
LDNZX001 EQU   ISTLDNCB+90
LDNZH002 EQU   ISTLDNCB+88
LDNZV001 EQU   ISTLDNCB+84
LDNZACSW EQU   ISTLDNCB+76
LDNZC002 EQU   ISTLDNCB+68
LDNCSWSV EQU   ISTLDNCB+60
LDNCHFLD EQU   ISTLDNCB+56
LDNRESRV EQU   ISTLDNCB+55
@NM00076 EQU   LDNCFLAG
LDNRMF   EQU   LDNCFLAG
LDNIBI   EQU   LDNCFLAG
LDNTSAF  EQU   ISTLDNCB+52
LDNCUUA  EQU   ISTLDNCB+48
LDNCB    EQU   ISTLDNCB
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00075 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBDAF   EQU   ISTNCB+2
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00074 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00073 EQU   ATCAOSM+333
@NM00072 EQU   @NM00071
ATCSNUF  EQU   @NM00071
ATCOPKL  EQU   @NM00071
ATCABEN  EQU   @NM00071
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00070 EQU   @NM00069
ATCVTMAB EQU   @NM00069
@NM00068 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00067 EQU   ISTATCVT+819
@NM00066 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00065 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00064 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00063 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
LOKXCL   EQU   @NM00061
LOKPRY   EQU   @NM00061
@NM00062 EQU   @NM00061
@NM00060 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
RIARSV03 EQU   RIAFLGS+2
RIARSV02 EQU   RIAFLG2
RIABR15  EQU   RIAFLG2
RIARSPCC EQU   RIAFLG2
RIARTPXT EQU   RIAFLG2
RIACONT  EQU   RIAFLG2
RIAFABN  EQU   RIAFLG2
RIARSV01 EQU   RIAFLG1
RIACTIVE EQU   RIAFLG1
RIACTL   EQU   RIAFLG1
RIAABR15 EQU   RIAABRGS+60
RIAABR14 EQU   RIAABRGS+56
RIAABR13 EQU   RIAABRGS+52
RIAABR12 EQU   RIAABRGS+48
RIAABR11 EQU   RIAABRGS+44
RIAABR10 EQU   RIAABRGS+40
RIAABR09 EQU   RIAABRGS+36
RIAABR08 EQU   RIAABRGS+32
RIAABR07 EQU   RIAABRGS+28
RIAABR06 EQU   RIAABRGS+24
RIAABR05 EQU   RIAABRGS+20
RIAABR04 EQU   RIAABRGS+16
RIAABR03 EQU   RIAABRGS+12
RIAABR02 EQU   RIAABRGS+8
RIAABR01 EQU   RIAABRGS+4
RIAABR00 EQU   RIAABRGS
RIARSV04 EQU   ISTRIA+14
RIAABPSW EQU   ISTRIA+4
RIAABCD  EQU   ISTRIA
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
CRRRVPT5 EQU   CRRSAREA+316
CRRRVPT4 EQU   CRRSAREA+312
CRRRVPT3 EQU   CRRSAREA+308
CRRRVPT2 EQU   CRRSAREA+304
CRRRVPT1 EQU   CRRSAREA+300
CRRRVCR2 EQU   CRRSAREA+292
CRRRVCR1 EQU   CRRSAREA+291
CRRXFNCD EQU   CRRSAREA+290
CRRLDOCT EQU   CRRSAREA+288
CRRBTLEN EQU   CRRSAREA+284
CRRBLEN  EQU   CRRSAREA+282
CRRBRTCD EQU   CRRSAREA+281
@NM00059 EQU   CRRBFLGS
CRRBFLG1 EQU   CRRBFLGS
CRRBLDAD EQU   CRRSAREA+276
CRRBARAD EQU   CRRSAREA+272
CRRRTN12 EQU   CRRSAREA+268
CRRRTN11 EQU   CRRSAREA+264
CRRRTN10 EQU   CRRSAREA+260
CRRRTN9  EQU   CRRSAREA+256
CRRRTN8  EQU   CRRSAREA+252
CRRRTN7  EQU   CRRSAREA+248
CRRRTN6  EQU   CRRSAREA+244
CRRRTN5  EQU   CRRSAREA+240
CRRRTN4  EQU   CRRSAREA+236
CRRRTN3  EQU   CRRSAREA+232
CRRRTN2  EQU   CRRSAREA+228
CRRRTN1  EQU   CRRSAREA+224
CRRRES1  EQU   CRRSAREA+222
CRRLCNT  EQU   CRRSAREA+220
CRRATCVT EQU   CRRSAREA+216
CRRVALCK EQU   CRRSAREA+212
CRRARPL  EQU   CRRTRBUF+4
CRRBIND  EQU   CRRTRBUF+3
CRRTRRES EQU   CRRTRBUF
CRRCLDO  EQU   CRRSAREA+200
CRRUECB  EQU   CRRSAREA+196
CRRLCPB  EQU   CRRSAREA+192
CRRCMDAD EQU   CRRSAREA+188
CRRFMCB  EQU   CRRSAREA+184
CRRCLCCW EQU   CRRSAREA+180
CRRESR2  EQU   CRRESR+1
CRRESR1  EQU   CRRESR
CRRDSB2  EQU   CRRDSB+1
CRRDSB1  EQU   CRRDSB
CRRDTACT EQU   CRRSAREA+174
CRRRSV99 EQU   CRRSAREA+173
CRRRDSOH EQU   CRRFDB3
CRRRLG   EQU   CRRFDB3
CRRLGFRC EQU   CRRFDB3
CRRRDEOT EQU   CRRFDB3
CRRRDEOM EQU   CRRFDB3
CRRRDEOB EQU   CRRFDB3
CRRUNUSD EQU   CRRFDB3
CRRUINPT EQU   CRRFDB3
CRRSTSAV EQU   CRRFDB2
CRRCUERR EQU   CRRFDB2
CRRDLGFL EQU   CRRFDB2
CRRIOERR EQU   CRRFDB2
CRRDVUNS EQU   CRRFDB2
CRRATND  EQU   CRRFDB2
CRRRVID  EQU   CRRFDB2
CRRERLK  EQU   CRRFDB2
CRRRTNCD EQU   CRRFDBK1
CRRNSNA  EQU   CRRRTYPE
CRRDFSYN EQU   CRRRTYPE
CRRRESP  EQU   CRRRTYPE
CRRDFASY EQU   CRRRTYPE
CRRDBLCK EQU   CRRRFLG1
CRRRPSBD EQU   CRRRFLG1
CRRRPLOQ EQU   CRRRFLG1
CRRRPLS  EQU   CRRRFLG1
CRRSW7   EQU   CRRFLGS
CRRSW6   EQU   CRRFLGS
CRRSW5   EQU   CRRFLGS
CRRSW4   EQU   CRRFLGS
CRRSW3   EQU   CRRFLGS
CRRSW2   EQU   CRRFLGS
CRRSW1   EQU   CRRFLGS
CRRSW0   EQU   CRRFLGS
CRRRSV04 EQU   CRRFLGS4
CRRFMCLK EQU   CRRFLGS4
CRRDLCCW EQU   CRRFLGS3
CRRRESET EQU   CRRFLGS3
CRRSUBBK EQU   CRRFLGS3
CRRRSV08 EQU   CRRFLGS3
CRRDEBQ  EQU   CRRFLGS3
CRRSTSPR EQU   CRRFLGS3
CRRDREQ  EQU   CRRFLGS3
CRRDFDBK EQU   CRRFLGS3
CRRDFSB  EQU   CRRFLGS2
CRRDPROC EQU   CRRFLGS2
CRREXTS  EQU   CRRFLGS2
CRRELSRI EQU   CRRFLGS2
CRRPOST  EQU   CRRFLGS2
CRRENDLW EQU   CRRFLGS2
CRRPRGIP EQU   CRRFLGS2
CRRDEXP  EQU   CRRFLGS2
CRRSOLRQ EQU   CRRFLGS1
CRRREQP  EQU   CRRFLGS1
CRRCPROC EQU   CRRFLGS1
CRRFINI  EQU   CRRFLGS1
CRRPREIO EQU   CRRFLGS1
CRRINIO  EQU   CRRFLGS1
CRRFLDOS EQU   CRRFLGS1
CRRDOCUR EQU   CRRFLGS1
CRRRATS4 EQU   CRRATS+7
@NM00058 EQU   CRRSATS
CRRASC51 EQU   CRRSATS
CRRASC40 EQU   CRRSATS
CRRASC30 EQU   CRRSATS
CRRASC21 EQU   CRRSATS
CRRASC10 EQU   CRRSATS
CRRASC01 EQU   CRRSATS
@NM00057 EQU   CRRRATS2
CRRPLIC  EQU   CRRRATS2
CRRRC81  EQU   CRRRATS2
CRRRC80  EQU   CRRRATS2
CRRRC65  EQU   CRRRATS2
CRRRC63  EQU   CRRRATS2
CRRRC55  EQU   CRRRATS2
CRRRC54  EQU   CRRRATS2
CRRRC53  EQU   CRRRATS1
CRRRC52  EQU   CRRRATS1
CRRRC51  EQU   CRRRATS1
CRRRC30  EQU   CRRRATS1
CRRRC26  EQU   CRRRATS1
CRRRC23  EQU   CRRRATS1
CRRRC22  EQU   CRRRATS1
CRRRC21  EQU   CRRRATS1
@NM00056 EQU   CRRATS4
CRRC3X   EQU   CRRATS4
CRRC85   EQU   CRRATS4
CRRC83   EQU   CRRATS4
CRRC82   EQU   CRRATS4
CRRC61   EQU   CRRATS4
CRRC60   EQU   CRRATS4
CRRC81   EQU   CRRATS3
CRRC80   EQU   CRRATS3
CRRC75   EQU   CRRATS3
CRRC51   EQU   CRRATS3
CRRC50   EQU   CRRATS3
CRRC42   EQU   CRRATS3
CRRC41   EQU   CRRATS3
CRRC40   EQU   CRRATS3
CRRC32   EQU   CRRATS2
CRRC31   EQU   CRRATS2
CRRC30   EQU   CRRATS2
CRRC25   EQU   CRRATS2
CRRC24   EQU   CRRATS2
CRRC23   EQU   CRRATS2
CRRC22   EQU   CRRATS2
CRRC21   EQU   CRRATS2
CRRC20   EQU   CRRATS1
CRRC13   EQU   CRRATS1
CRRC12   EQU   CRRATS1
CRRC11   EQU   CRRATS1
CRRC10   EQU   CRRATS1
CRRC02   EQU   CRRATS1
CRRC01   EQU   CRRATS1
CRRC00   EQU   CRRATS1
CRRRMAS4 EQU   CRRMAS+7
@NM00055 EQU   CRRSMAS
CRRMSC51 EQU   CRRSMAS
CRRMSC40 EQU   CRRSMAS
CRRMSC30 EQU   CRRSMAS
CRRMSC21 EQU   CRRSMAS
CRRMSC10 EQU   CRRSMAS
CRRMSC01 EQU   CRRSMAS
@NM00054 EQU   CRRRMAS2
CRRRM81  EQU   CRRRMAS2
CRRRM80  EQU   CRRRMAS2
CRRRM65  EQU   CRRRMAS2
CRRRM63  EQU   CRRRMAS2
CRRRM55  EQU   CRRRMAS2
CRRRM54  EQU   CRRRMAS2
CRRRM53  EQU   CRRRMAS1
CRRRM52  EQU   CRRRMAS1
CRRRM51  EQU   CRRRMAS1
CRRRM30  EQU   CRRRMAS1
CRRRM26  EQU   CRRRMAS1
CRRRM23  EQU   CRRRMAS1
CRRRM22  EQU   CRRRMAS1
CRRRM21  EQU   CRRRMAS1
@NM00053 EQU   CRRMAS4
CRRM3X   EQU   CRRMAS4
CRRM85   EQU   CRRMAS4
CRRM83   EQU   CRRMAS4
CRRM82   EQU   CRRMAS4
CRRM61   EQU   CRRMAS4
CRRM60   EQU   CRRMAS4
CRRM81   EQU   CRRMAS3
CRRM80   EQU   CRRMAS3
CRRM75   EQU   CRRMAS3
CRRM51   EQU   CRRMAS3
CRRM50   EQU   CRRMAS3
CRRM42   EQU   CRRMAS3
CRRM41   EQU   CRRMAS3
CRRM40   EQU   CRRMAS3
CRRM32   EQU   CRRMAS2
CRRM31   EQU   CRRMAS2
CRRM30   EQU   CRRMAS2
CRRM25   EQU   CRRMAS2
CRRM24   EQU   CRRMAS2
CRRM23   EQU   CRRMAS2
CRRM22   EQU   CRRMAS2
CRRM21   EQU   CRRMAS2
CRRM20   EQU   CRRMAS1
CRRM13   EQU   CRRMAS1
CRRM12   EQU   CRRMAS1
CRRM11   EQU   CRRMAS1
CRRM10   EQU   CRRMAS1
CRRM02   EQU   CRRMAS1
CRRM01   EQU   CRRMAS1
CRRM00   EQU   CRRMAS1
CRRFSB   EQU   CRRSAREA+144
CRRSAVE1 EQU   CRRSAREA+72
CRRSAVE  EQU   CRRSAREA
CRRRSV22 EQU   ISTDCCRR+4
CRRCRR   EQU   ISTDCCRR
@NM00052 EQU   ISTAPCRR+137
@NM00051 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00050 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00049 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00048 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00047 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00046 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00045 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00044 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00043 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00042 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00041 EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00040 EQU   LCCWRWOP
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHCHAIN  EQU   RH1
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
RHQS     EQU   RH1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00039 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00038 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00037 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
ZLBZBFSC EQU   ISTZLBVT+88
ZLBZIFVB EQU   ISTZLBVT+84
ZLBZIFUB EQU   ISTZLBVT+80
ZLBZIFSB EQU   ISTZLBVT+76
ZLBRSV22 EQU   ISTZLBVT+72
ZLBZBFID EQU   ISTZLBVT+68
ZLBZBFX0 EQU   ISTZLBVT+64
ZLBRSV02 EQU   ISTZLBVT+60
ZLBRSV21 EQU   ISTZLBVT+56
ZLBZBFJB EQU   ISTZLBVT+52
ZLBZBFIB EQU   ISTZLBVT+48
ZLBZBFHB EQU   ISTZLBVT+44
ZLBZBFGB EQU   ISTZLBVT+40
ZLBZBFFB EQU   ISTZLBVT+36
ZLBZBFEB EQU   ISTZLBVT+32
ZLBZBFDB EQU   ISTZLBVT+28
ZLBZBFCB EQU   ISTZLBVT+24
ZLBZBFBB EQU   ISTZLBVT+20
ZLBZBFAB EQU   ISTZLBVT+16
ZLBZBFNB EQU   ISTZLBVT+12
ZLBZCFAI EQU   ISTZLBVT+8
ZLBZBF0B EQU   ISTZLBVT+4
ZLBZAF0B EQU   ISTZLBVT
ZLFZWRD5 EQU   ISTZLFVT+48
ZLFZWRD4 EQU   ISTZLFVT+44
ZLFZDFK0 EQU   ISTZLFVT+40
ZLFZEMEA EQU   ISTZLFVT+36
ZLFZFFEA EQU   ISTZLFVT+32
ZLFZEMCA EQU   ZLFZEACA
ZLFZEMFA EQU   ZLFZEAFA
ZLFZFFXA EQU   ISTZLFVT+20
ZLFZFMTA EQU   ZLFZFATA
ZLFZEMTA EQU   ZLFZEATA
ZLFZFMFA EQU   ZLFZFAFA
ZLFZEMAA EQU   ZLFZEAAA
ZFSZWRD4 EQU   ISTZFSVT+36
ZFSZWRD3 EQU   ISTZFSVT+32
ZFSZEFCB EQU   ISTZFSVT+28
ZFSZFFEB EQU   ISTZFSVT+24
ZFSZDFJ0 EQU   ISTZFSVT+20
ZFSZFFFB EQU   ISTZFSVT+16
ZFSZFFDB EQU   ISTZFSVT+12
ZFSZFFCB EQU   ISTZFSVT+8
ZFSZEMAB EQU   ZFSZEAAB
ZFSZEMBB EQU   ZFSZEABB
ZPSZDFQR EQU   ISTZPSVT+80
ZPSZDFPR EQU   ISTZPSVT+76
ZPSZDFXR EQU   ISTZPSVT+72
ZPSZWRD5 EQU   ISTZPSVT+68
ZPSZWRD4 EQU   ISTZPSVT+64
ZPSZDFMB EQU   ISTZPSVT+60
ZPSZDFMF EQU   ISTZPSVT+56
ZPSZDFNB EQU   ISTZPSVT+52
@NM00036 EQU   ISTZPSVT+48
ZPSZDFF0 EQU   ISTZPSVT+44
ZPSZBFOB EQU   ISTZPSVT+36
ZPSZBFY0 EQU   ISTZPSVT+24
ZPSZDFI0 EQU   ISTZPSVT+20
ZPSZDFB0 EQU   ISTZPSVT+16
ZPSZDFD0 EQU   ISTZPSVT+8
ZPSZDFC0 EQU   ISTZPSVT+4
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00035 EQU   CVTFIX+248
@NM00034 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00009 EQU   SRBSECT+40
@NM00008 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00004 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00003 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00002
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00001 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
@NM00033 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00032 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00031 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00030 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00029 EQU   FLCFSA
@NM00028 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00027 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00026 EQU   FLCIOA
@NM00025 EQU   FLCMCLA+15
@NM00024 EQU   FLCMCLA+14
@NM00023 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00022 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00021 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00020 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00019 EQU   FLCPER
@NM00018 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00017 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00016 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00015 EQU   FLCPIILC
@NM00014 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00013 EQU   FLCSVILC
@NM00012 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00011 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00010 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
PROCRST# EQU   @RC00592
PROCSYN# EQU   @RC00598
ERRPROC# EQU   @RC00632
SEG0069# EQU   @RC00680
@RC00707 EQU   @RC00706
ZERORU#  EQU   @RC00737
@RC00795 EQU   @RC00778
ZERORU@  EQU   @EL00002
@RC00971 EQU   @RC00923
@RC01004 EQU   @RC00923
@RC00983 EQU   @RC00971
@RC00989 EQU   @RC00971
@ENDDATA EQU   *
         END   ISTZBF0L,(C'PLS1913',0603,77349)
