         TITLE 'IGC121-SUPERVISOR STATE I/O DRIVER                     *
                        '
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
IGC121   CSECT
          BALR  @11,0                    ESTABLISH BASE REGISTER VALUE
          USING *,@11                    BASE REGISTER IS R11
          B     STARTCOD                 BYPASS DC AND EQU STATEMENTS
          DC    AL1(18)                  LENGTH OF ID          @Z40TSDT
          DC    C' IGC121 '              MODULE IDENTIFIER     @Z40TSDT
          DC    C' &SYSDATE '            DATE OF COMPILATION   @Z40TSDT
*STARTCOD:                                                         0205
*   RIOMB=R1;                       /* IOMB PTR TO RIOMB             */
STARTCOD LR    RIOMB,R1                                            0205
*   RBUFC=R15;                      /* BUFC ADDRESS IN RBUFC REG     */
         LR    RBUFC,R15                                           0206
*   RESPECIFY                                                      0207
*    (R0,                                                          0207
*     R1,                                                          0207
*     R15) UNRSTD;                                                 0207
*                                                                  0207
*/*                                                                  */
*/********************************************************************/
*/*             ESTABLISH EXISTENCE OF AN FRR                        */
*/********************************************************************/
*                                                                  0208
*   RESPECIFY                                                      0208
*    (R6,                                                          0208
*     RW2,                                                         0208
*     RW3) RSTD;                    /*                       @ZA33053*/
*   R6=ADDR(IDA121F1);              /* ADDRESS OF FRR IN REG ZA33053 */
         LA    R6,IDA121F1                                         0209
*   GEN SETS(R6,RW2,RW3,FRRSCURR,FRRSFRRA,FRRSPARM) REFS(PSACSTK,  0210
*       PSALSFCC,FRRS,FRRSENTR,FRRSLAST,FRRSELEN)                  0210
*       (SETFRR  A,FRRAD=(R6),WRKREGS=(RW2,RW3),PARMAD=(R6));/*    0210
*                                                            @ZA33053*/
         SETFRR  A,FRRAD=(R6),WRKREGS=(RW2,RW3),PARMAD=(R6)
*   IOMBADR=RIOMB;                  /* IOMB PTR INTO PARM FIELD      */
         ST    RIOMB,IOMBADR(,R6)                                  0211
*   IOMBVAL=OFF;                    /* IOMBADR MAY BE BAD    @ZA26357*/
         NI    IOMBVAL(R6),B'01111111'                             0212
*   BASEREG=BASE11;                                                0213
         ST    BASE11,BASEREG(,R6)                                 0213
*                                                                  0214
*/********************************************************************/
*/*             VALIDITY CHECK AMB AND IOMB CONTROL BLOCKS           */
*/********************************************************************/
*                                                                  0214
*   RESPECIFY                       /*                       @ZA32639*/
*     IDAAMB BASED(RW3);            /*                       @ZA32639*/
*   IF PLHVAMB=ON THEN              /* IF PLHAMB IS VALID    @ZA32639*/
         L     @15,IOMPLH(,RIOMB)                                  0215
         TM    PLHVAMB(@15),B'00100000'                            0215
         BNO   @RF00215                                            0215
*     RW3=PLHAMB;                   /* USE PLHAMB POINTER    @ZA32639*/
         L     RW3,PLHAMB(,@15)                                    0216
*   ELSE                            /* PLHAMB IS NOT VALID   @ZA32639*/
*     RW3=IOMAMB;                   /* MUST USE IOMAMB PTR   @ZA32639*/
         B     @RC00215                                            0217
@RF00215 L     RW3,IOMAMB(,RIOMB)                                  0217
*   RW2=AMBPAMBL;                   /* AMBL PTR FROM AMB     @ZA32639*/
@RC00215 L     RW2,AMBPAMBL(,RW3)                                  0218
*   RESPECIFY                                                      0219
*     RW1 RSTD;                     /*                       @ZA33053*/
*   RW1=RBPSWKEY;                   /* USER KEY FROM PSW IN RB       */
         L     @15,PSATOLD                                         0220
         L     @15,TCBRBP(,@15)                                    0220
         SLR   RW1,RW1                                             0220
         IC    RW1,RBPSWKEY(,@15)                                  0220
*   RW1=RW1&KEYMASK;                /* ZERO THE LAST FOUR BITS       */
         N     RW1,@CF00096                                        0221
*   IF RW1>=KEY8 THEN               /* CALLER NOT IN PRIVLEGED MODE  */
         C     RW1,@CF00092                                        0222
         BL    @RF00222                                            0222
*VALIDCBS:                                                         0223
*     DO;                           /* CHECK VALIDITY OF AMB/IOMB    */
VALIDCBS DS    0H                                                  0224
*       RESPECIFY                                                  0224
*         RW4 RESTRICTED;           /*                       @ZA26357*/
*       RESPECIFY                                                  0225
*        (IDAAMBL) BASED(RW2);      /*                       @ZA26357*/
*       IF AMBLDTA=RW3×             /* IF AMBL POINTS BACK   @Z30SSLC*/
*           AMBLIX=RW3 THEN         /* IF AMBL POINTS BACK   @Z30SSLC*/
         C     RW3,AMBLDTA(,RW2)                                   0226
         BE    @RT00226                                            0226
         C     RW3,AMBLIX(,RW2)                                    0226
         BNE   @RF00226                                            0226
@RT00226 DS    0H                                                  0227
*         DO;                       /*                       @Z30SSLC*/
*           RW4=JSCBSHR;            /* POINT TO FIRST VAT    @Z30SSLC*/
         L     @15,PSATOLD                                         0228
         L     @15,TCBJSCB(,@15)                                   0228
         L     RW4,JSCBSHR(,@15)                                   0228
*           RESPECIFY                                              0229
*             IDAVAT BASED(RW4);    /*                       @Z30SSLC*/
*           DO UNTIL RW4=0;         /* LOOP THRU VAT CHAIN   @Z30SSLC*/
@DL00230 DS    0H                                                  0231
*             IF VATAMBL(AMBLENO)=ADDR(IDAAMBL) THEN/* PTS BACK      */
         SLR   @15,@15                                             0231
         IC    @15,AMBLENO(,RW2)                                   0231
         SLA   @15,2                                               0231
         C     RW2,VATAMBL-4(@15,RW4)                              0231
         BE    @RT00231                                            0231
*               GO TO CHKIOMB;      /* CHECK IOMB            @Z30SSLC*/
*             RW4=VATNEXT;          /* POINT TO NEXT VAT     @Z30SSLC*/
         L     RW4,VATNEXT(,RW4)                                   0233
*           END;                    /*                       @Z30SSLC*/
@DE00230 LTR   RW4,RW4                                             0234
         BNZ   @DL00230                                            0234
*         END;                      /*                       @Z30SSLC*/
*                                                                  0235
*       /*************************************************************/
*       /*                                                           */
*       /* AMB NOT FOUND IN CHAIN                            @ZA26357*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0236
*       GO TO ERRETURN;             /*                       @ZA26357*/
         B     ERRETURN                                            0236
*CHKIOMB:                           /* CHECK IOMB VALIDITY   @ZA26357*/
*                                                                  0237
*       /*************************************************************/
*       /*                                                           */
*       /* RW2 POINTS TO VALID AMBL.                         @ZA26357*/
*       /* RW3 POINTS TO VALID AMB.                          @ZA26357*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0237
*       RESPECIFY                                                  0237
*         IDAAMB BASED(RW3);        /*                       @ZA26357*/
CHKIOMB  DS    0H                                                  0238
*       IF AMBLSR=OFF&              /* IF NOT SHR RES        @ZA26357*/
*           AMBGSR=OFF THEN         /*                       @ZA26357*/
         TM    AMBLSR(RW3),B'01100000'                             0238
         BNZ   @RF00238                                            0238
*         DO;                       /*                       @ZA26357*/
*           RW4=AMBIOMB;            /* LOAD FIRST IOMB       @ZA26357*/
         L     RW4,AMBIOMB(,RW3)                                   0240
*           DO WHILE RW4^=ZERO;     /* LOOP THRU IOMB        @ZA26357*/
         B     @DE00241                                            0241
@DL00241 DS    0H                                                  0242
*             IF RIOMB=RW4 THEN     /* OUR IOMB ON CHAIN     @ZA26357*/
         CR    RIOMB,RW4                                           0242
         BE    @RT00242                                            0242
*               GO TO ALLVALID;     /* IOMB VALID            @ZA26357*/
*             RW4=RW4->IOMNXT1;     /* LOAD NEXT IOMB        @ZA26357*/
         L     RW4,IOMNXT1(,RW4)                                   0244
*           END;                                                   0245
@DE00241 LTR   RW4,RW4                                             0245
         BNZ   @DL00241                                            0245
*ERRETURN:                                                         0246
*           R2=EIGHT;               /* REASON CODE 8 INTO REGISTER   */
ERRETURN LA    R2,8                                                0246
*           DO;                     /* ABEND(377) DUMP SYSTEM        */
*             RESPECIFY                                            0248
*              (GPR01F) RESTRICTED;                                0248
*             GPR01F=((377)&'00000FFF'X)*4096;/* COMP CODE IN BITS 0249
*                                      8-19                          */
         L     GPR01F,@CF03965                                     0249
*             GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG   */
         O     GPR01F,@CF00094                                     0250
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                                  0251
*             RESPECIFY                                            0252
*              (GPR01F) UNRESTRICTED;                              0252
*           END;                    /* ABEND(377) DUMP SYSTEM      0253
*                                      AMB/IOMB INVALID      @ZA26357*/
*         END;                      /*                       @ZA26357*/
*     END VALIDCBS;                 /*                       @ZA26357*/
@RF00238 DS    0H                                                  0256
*   RESPECIFY                                                      0256
*     RW4 UNRESTRICTED;             /*                       @ZA26357*/
@RF00222 DS    0H                                                  0257
*ALLVALID:                          /*                       @ZA26357*/
*   IOMBVAL=ON;                     /* IOMBADR IS VALID      @ZA26357*/
ALLVALID OI    IOMBVAL(R6),B'10000000'                             0257
*   RESPECIFY                                                      0258
*     R6 UNRESTRICTED;              /*                       @ZA33053*/
*                                                                  0258
*   /*****************************************************************/
*   /*                                                               */
*   /* RW2 POINTS TO VALID AMBL.                             @ZA26357*/
*   /* RW3 POINTS TO VALID AMB.                              @ZA26357*/
*   /* RIOMB POINTS TO VALID IOMB.                           @ZA26357*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0259
*   IF PLHVAMB=ON THEN              /* IF PLHAMB ADR VALID   @ZA26357*/
         L     @15,IOMPLH(,RIOMB)                                  0259
         TM    PLHVAMB(@15),B'00100000'                            0259
         BNO   @RF00259                                            0259
*     DO;                           /* RPL IS PRESENT.       @ZA26357*/
*       IF(PLHCRPL->RPLREQ^=RPLPFMTD&/* IS THIS RPL FOR      @ZA26357*/
*           PLHCRPL->RPLREQ^=RPLPFMTI)×/* PREFORMAT FROM     @ZA26357*/
*           AMBLCOMP^=EOVBUSY THEN  /* EOV?                  @ZA26357*/
         L     @15,PLHCRPL(,@15)                                   0261
         CLI   RPLREQ(@15),8                                       0261
         BE    @GL00002                                            0261
         CLI   RPLREQ(@15),9                                       0261
         BNE   @RT00261                                            0261
@GL00002 CLI   AMBLCOMP(RW2),X'FF'                                 0261
         BE    @RF00261                                            0261
@RT00261 DS    0H                                                  0262
*         DO;                       /* NO, LOCK OUT EOV      @ZA26357*/
*           RESPECIFY                                              0263
*            (R15) RESTRICTED;      /*                       @ZA26357*/
*           TS(AMBAMBXN->AMBXRSC);  /* TRY TO GET AMB        @ZA26357*/
         L     @10,AMBAMBXN(,RW3)                                  0264
         TS    AMBXRSC(@10)                                        0264
*           BC(8,GOTAMB);           /* BR IF GOT AMB         @ZA26357*/
         BC    8,GOTAMB                                            0265
*           GEN SETS(RW1,RW2,RW3,FRRSCURR,FRRSELEN)/*        @ZA26357*/
*               REFS(PSACSTK,FRRS,FRRSEMP)/* REMOVE FRR      @ZA26357*/
*               (SETFRR  D,WRKREGS=(RW2,RW3));/*             @ZA26357*/
         SETFRR  D,WRKREGS=(RW2,RW3)
*           R15=DREAMB;             /* DEFER REQ TO GET AMB  @ZA26357*/
         LA    R15,12                                              0267
*           RETURN;                 /* EXIT MODULE           @ZA26357*/
@EL00001 DS    0H                                                  0268
@EF00001 DS    0H                                                  0268
@ER00001 BR    @14                                                 0268
*GOTAMB:                            /*                       @ZA26357*/
*           IF IOMLOCK^=ZERO THEN   /* IF IOMB LOCKED BY EOV @ZA26357*/
GOTAMB   CLI   IOMLOCK(RIOMB),0                                    0269
         BE    @RF00269                                            0269
*             DO;                   /* MUST DEFER REQUEST.   @ZA26357*/
*               AMBAMBXN->AMBXRSC=0;/* FREE THE AMB          @ZA26357*/
         L     @10,AMBAMBXN(,RW3)                                  0271
         MVI   AMBXRSC(@10),X'00'                                  0271
*               GEN SETS(RW1,RW2,RW3,FRRSCURR,FRRSELEN)/*    @ZA26357*/
*                   REFS(PSACSTK,FRRS,FRRSEMP)/* REMOVE FRR  @ZA26357*/
*                   (SETFRR  D,WRKREGS=(RW2,RW3));/*         @ZA26357*/
         SETFRR  D,WRKREGS=(RW2,RW3)
*               R15=DREQPR;         /* INDICATE IOMB DEFER   @ZA26357*/
         LA    R15,4                                               0273
*               RETURN;             /* RETURN FOR DEFERRAL   @ZA26357*/
         B     @EL00001                                            0274
*             END;                  /* END OF IOMB LOCKED    @ZA26357*/
*           AMBAMBXN->AMBXRSC=0;    /* FREE THE AMB          @ZA26357*/
@RF00269 L     @10,AMBAMBXN(,RW3)                                  0276
         MVI   AMBXRSC(@10),X'00'                                  0276
*           RESPECIFY                                              0277
*            (R15) UNRESTRICTED;    /*                       @ZA26357*/
*         END;                      /* END OF NON-EOV CODE   @ZA26357*/
*     END;                          /*                       @ZA26357*/
@RF00261 DS    0H                                                  0280
*                                                                  0280
*/********************************************************************/
*/*             TEST IF EOV IN PROGRESS                              */
*/********************************************************************/
*                                                                  0280
*TESTEOV:                                                          0280
*                                                                  0280
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST IF EOV PROCESSING COMPLETED                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0280
*   RESPECIFY                                                      0280
*    (R15) RSTD;                                                   0280
@RF00259 DS    0H                                                  0280
TESTEOV  DS    0H                                                  0281
*   GENERATE SETS(IOMLOCK) FLOWS(ENDTEST);                         0281
*                                                                  0281
          TS   IOMLOCK(RIOMB)       TEST AND SET ON IOMLOCK
          BZ   ENDTEST              IF CC IS ZERO,E0V HAS COMPLETED
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CC IS NOT ZERO, SET RETURN CODE IN R15 AND RETURN          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0282
*   R15=DREQPR;                     /* SET PARM FOR DEFFERRED REQUEST*/
         LA    R15,4                                               0282
*   GO TO EXIT;                     /* RETURN TO PIOD                */
         B     EXIT                                                0283
*ENDTEST:                           /*                       @Z30SSLC*/
*/********************************************************************/
*/*   UPDATE CONTROL BLOCKS - IOSB, IOMB, AND SRB            @ZA26357*/
*/********************************************************************/
*                                                                  0284
*SETBLKS:                           /*                       @ZA26357*/
*   IOMAMB=ADDR(IDAAMB);            /* GET AMB               @ZA26357*/
ENDTEST  DS    0H                                                  0284
SETBLKS  ST    RW3,IOMAMB(,RIOMB)                                  0284
*   RESPECIFY                                                      0285
*    (RW2,                                                         0285
*     RW3) UNRSTD;                  /*                       @ZA26357*/
*   RESPECIFY                                                      0286
*     IDAAMB BASED(IOMAMB);         /*                       @ZA26357*/
*   IOMBUFC=RBUFC;                  /* SET BUFC PTR IN IOMB  @ZA26357*/
         ST    RBUFC,IOMBUFC(,RIOMB)                               0287
*   IOMSAVEF=R14;                   /* SAVE RETURN REG       @ZA26357*/
         ST    R14,IOMSAVEF(,RIOMB)                                0288
*   IOSBPTR=IOMIOSB;                /* PTR TO IOSB IN REG    @ZA26357*/
         L     IOSBPTR,IOMIOSB(,RIOMB)                             0289
*   IOSCKEY=RW1;                    /* STORE USER KEY VALUE  @ZA26357*/
         STC   RW1,IOSCKEY(,IOSBPTR)                               0290
*   IOMCKEY=RW1;                    /* USER KEY IN IOMB      @ZA26357*/
         STC   RW1,IOMCKEY(,RIOMB)                                 0291
*   SRBPTCB=R4;                     /* STORE TCB ADR IN SRB  @ZA26357*/
         L     @10,IOSSRB(,IOSBPTR)                                0292
         ST    R4,SRBPTCB(,@10)                                    0292
*   IF AMBGSR=ON THEN               /* IF GLOBAL SHR         @ZA26357*/
         L     @06,IOMAMB(,RIOMB)                                  0293
         TM    AMBGSR(@06),B'00100000'                             0293
         BNO   @RF00293                                            0293
*     DO;                           /*                       @ZA26357*/
*       SRBASCB=ADDR(ASCB);         /* SET PTR TO CUR ACSB   @ZA26357*/
         L     @06,PSAAOLD                                         0295
         ST    @06,SRBASCB(,@10)                                   0295
*       SRBPASID=ASCBASID;          /* SET ASID              @ZA26357*/
         LH    @06,ASCBASID(,@06)                                  0296
         N     @06,@CF03980                                        0296
         STH   @06,SRBPASID(,@10)                                  0296
*       SRBPARM=ADDR(IOSB);         /* PARM IS IOSB          @ZA26357*/
         ST    IOSBPTR,SRBPARM(,@10)                               0297
*     END;                          /*                       @ZA26357*/
*   IQETCB=R4;                      /* TCB ADDRESS IN IQE    @ZA26357*/
@RF00293 L     @10,IOMIQE(,RIOMB)                                  0299
         ST    R4,IQETCB(,@10)                                     0299
*   RESPECIFY                                                      0300
*    (R4,                                                          0300
*     RW1,                                                         0300
*     R14) UNRSTD;                                                 0300
*   RESPECIFY                                                      0301
*    (TCB) BASED(SRBPTCB);          /*                       @ZA26357*/
*   IOMNBUF=ZERO;                   /* CLEAR BUFFER COUNTER          */
         SLR   @14,@14                                             0302
         STH   @14,IOMNBUF(,RIOMB)                                 0302
*   IF PLHIWAIT=OFF THEN            /* NOT 2ND USE OF IOMB   @ZA02276*/
         L     @14,IOMPLH(,RIOMB)                                  0303
         TM    PLHIWAIT(@14),B'00000001'                           0303
         BNZ   @RF00303                                            0303
*     IOMFL=CZERO;                  /* CLEAR FLAGS           @ZA02276*/
         MVI   IOMFL+1(RIOMB),X'00'                                0304
         MVI   IOMFL(RIOMB),B'00000000'                            0304
*   ELSE                            /* SECOND USE OF IOMB    @ZA02276*/
*                                                                  0305
*     /***************************************************************/
*     /*                                                             */
*     /* LEAVE IOMNE/AE, IOMEEXIT, AND IOMIRBSW ON FOR IDAWAIT       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0305
*     IOMFL=IOMFL&WAITMASK;         /*                       @ZA02276*/
         B     @RC00303                                            0305
@RF00303 NC    IOMFL(2,RIOMB),@CB00100                             0305
*   IF RBSTAB1<SVRB×RBPPSB=ON THEN  /* IF IN PROBLEM STATE   @ZA31120*/
@RC00303 L     @14,IOSSRB(,IOSBPTR)                                0306
         L     @14,SRBPTCB(,@14)                                   0306
         L     @14,TCBRBP(,@14)                                    0306
         CLI   RBSTAB1(@14),X'C0'                                  0306
         BL    @RT00306                                            0306
         TM    RBPPSB(@14),B'00000001'                             0306
         BNO   @RF00306                                            0306
@RT00306 DS    0H                                                  0307
*     IOMCPRB=ON;                   /* SET IOMCPRB ON ELSE   @ZA31120*/
         OI    IOMCPRB(RIOMB),B'01000000'                          0307
*   ELSE                            /* SET IOMCPRB OFF       @ZA31120*/
*     IOMCPRB=OFF;                  /* FOR SMF TEST          @ZA31120*/
         B     @RC00306                                            0308
@RF00306 NI    IOMCPRB(RIOMB),B'10111111'                          0308
*/********************************************************************/
*/* CHAIN CHANNEL PROGRAM AREA BLOCKS.  IF CALLER IS NOT PRIVILEGED, */
*/*   VALIDITY OF CPA'S MUST FIRST BE CHECKED.                       */
*/********************************************************************/
*                                                                  0309
*   RESPECIFY                                                      0309
*    (RW1,                                                         0309
*     RW2,                                                         0309
*     R15) RSTD;                                                   0309
*                                                                  0309
@RC00306 DS    0H                                                  0310
*   /*****************************************************************/
*   /*                                                               */
*   /* RW1 POINTS TO THE CPA BEING CHECKED FROM BUFCCPA. RW2 POINTS  */
*   /* TO THE CPA-S IN THE CHAIN FROM THE AMB. R15 POINTS TO THE LAST*/
*   /* VALIDATED CPA FOR CHAINING TO THE NEXT                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0310
*   IF AMBLSR=ON×AMBGSR=ON THEN     /* IF SHR RES            @Z30SSLC*/
         L     @14,IOMAMB(,RIOMB)                                  0310
         TM    AMBLSR(@14),B'01100000'                             0310
         BZ    @RF00310                                            0310
*     DO;                           /*                       @Z30SSLC*/
*       IOMSAVE3=BASE11;            /* SAVE BASE REGISTER    @Z30SSLC*/
         ST    BASE11,IOMSAVE3(,RIOMB)                             0312
*       CALL IDA019SB;              /* BUILD CPA             @Z30SSLC
*                                      ADDR OF CPA IN IOMCPA @ZA26357*/
         L     @15,@CV03897                                        0313
         BALR  @14,@15                                             0313
*       BASE11=IOMSAVE3;            /* RESTORE BASE REGISTER @Z30SSLC*/
         L     BASE11,IOMSAVE3(,RIOMB)                             0314
*       IOSBPTR=IOMIOSB;            /* RESTORE IOSB BASE     @Z30SSLC*/
         L     IOSBPTR,IOMIOSB(,RIOMB)                             0315
*       IF R15=0 THEN               /* IF NO ERROR           @ZA26357*/
         LTR   R15,R15                                             0316
         BNZ   @RF00316                                            0316
*         DO;                       /*                       @ZA26357*/
*           SPKA(IOSCKEY);          /* SWITCH TO USER KEY    @ZA26357*/
         SLR   @14,@14                                             0318
         IC    @14,IOSCKEY(,IOSBPTR)                               0318
         SPKA  0(@14)                                              0318
*           BUFCCPA=IOMCPA;         /* SET CPA ADDR          @ZA26357*/
         L     @14,IOMCPA(,RIOMB)                                  0319
         ST    @14,BUFCCPA(,RBUFC)                                 0319
*           GEN(MODESET EXTKEY=ZERO );/* RETURN TO KEY 0     @ZA26357*/
         MODESET EXTKEY=ZERO
*         END;                      /*                       @ZA26357*/
*       ELSE                        /* IF ANY ERROR          @ZA26357*/
*         DO;                       /*                       @Z30SSLC*/
         B     @RC00316                                            0322
@RF00316 DS    0H                                                  0323
*           IF R15=FOUR THEN        /* IF NO CORE WAS AVAIL  @Z30SSLC*/
         C     R15,@CF00069                                        0323
         BNE   @RF00323                                            0323
*             DO;                   /*                       @Z30SSLC*/
*               R2=THIRTY2;         /* REASON CODE 32        @Z30SSLC*/
         LA    R2,32                                               0325
*               GEN REFS(IOMSAVE0)  /* STORE REGS IN IOMB    @Z30SSLC*/
*                   (STM   0,15,IOMSAVE0(RIOMB));/*          @Z30SSLC*/
         STM   0,15,IOMSAVE0(RIOMB)
*               DO;                 /* ABEND(377) DUMP SYSTEM        */
*                 RESPECIFY                                        0328
*                  (GPR01F) RESTRICTED;                            0328
*                 GPR01F=((377)&'00000FFF'X)*4096;/* COMP CODE IN  0329
*                                      BITS 8-19                     */
         L     GPR01F,@CF03965                                     0329
*                 GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS  0330
*                                      FLAG                          */
         O     GPR01F,@CF00094                                     0330
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                                  0331
*                 RESPECIFY                                        0332
*                  (GPR01F) UNRESTRICTED;                          0332
*               END;                /* ABEND(377) DUMP SYSTEM NO CORE
*                                      CPA                   @Z30SSLC*/
*             END;                  /*                       @Z30SSLC*/
*           IF R15=EIGHT THEN       /* IF NO EDB WAS FOUND   @Z30SSLC*/
@RF00323 C     R15,@CF00058                                        0335
         BNE   @RF00335                                            0335
*             DO;                   /*                       @Z30SSLC*/
*               IF IOMEOVXC=OFF THEN/* EOV INDIC NOT SET     @Z30SSLC*/
*                                                                  0337
         TM    IOMEOVXC(RIOMB),B'00010000'                         0337
         BNZ   @RF00337                                            0337
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET UP CALL TO END OF VOL INTERFACE ROUTINE     */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0338
*                 DO;               /*                       @Z30SSLC*/
*                   RESPECIFY                                      0339
*                    (R1) RESTRICTED;                              0339
*                   PLHEOVR=AMBEOVMR;/* MT BY RBA - NO EDB   @Z30SSLC*/
         L     @14,IOMPLH(,RIOMB)                                  0340
         MVI   PLHEOVR(@14),B'10000001'                            0340
*                   IF BUFCMW=ON THEN/* IF WRITE REQ         @Z30SSLC*/
         TM    BUFCMW(RBUFC),B'10000000'                           0341
         BNO   @RF00341                                            0341
*                     PLHEOVPT=ADDR(BUFCORBA);/* OUTPUT RBA  @Z30SSLC*/
         LA    @10,BUFCORBA(,RBUFC)                                0342
         ST    @10,PLHEOVPT(,@14)                                  0342
*                   IF BUFCRRD=ON THEN/* READ REQ            @Z30SSLC*/
@RF00341 TM    BUFCRRD(RBUFC),B'00100000'                          0343
         BNO   @RF00343                                            0343
*                     PLHEOVPT=ADDR(BUFCDDDD);/* INPUT RBA   @Z30SSLC*/
         L     @14,IOMPLH(,RIOMB)                                  0344
         LA    @10,BUFCDDDD(,RBUFC)                                0344
         ST    @10,PLHEOVPT(,@14)                                  0344
*                   GEN(MODESET EXTKEY=ZERO);/* SW TO KEY 0  @ZA26357*/
@RF00343 DS    0H                                                  0345
         MODESET EXTKEY=ZERO
*                   IOMLOCK=OFF;    /* TURN OFF LOCK         @Z30SSLC*/
         MVI   IOMLOCK(RIOMB),B'00000000'                          0346
*                   IOMEOVXC=ON;    /* MARK CALL TO EOV      @Z30SSLC*/
         OI    IOMEOVXC(RIOMB),B'00010000'                         0347
*                   R15=EOVREQ;     /* SET RETURN CODE       @Z30SSLC*/
         LA    R15,8                                               0348
*                   R1=RBUFC;       /* POINT TO CURRENT BUFC @Z30SSLC*/
         LR    R1,RBUFC                                            0349
*                   GO TO EXIT;     /* RETURN TO PIOD        @Z30SSLC*/
         B     EXIT                                                0350
*                 END;              /*                       @Z30SSLC*/
*               ELSE                /* INVALID RBA           @Z30SSLC*/
*                 DO;               /*                       @Z30SSLC*/
@RF00337 DS    0H                                                  0353
*                   SPKA(IOSCKEY);  /* SW USER KEY           @ZA26357*/
         SLR   @14,@14                                             0353
         IC    @14,IOSCKEY(,IOSBPTR)                               0353
         SPKA  0(@14)                                              0353
*                   BUFCXEDB=ON;    /* INVALID RBA           @Z30SSLC*/
         OI    BUFCXEDB(RBUFC),B'00000100'                         0354
*                   BUFCEPT=ON;     /* COMPLETE BIT ON       @Z30SSLC*/
         OI    BUFCEPT(RBUFC),B'00000001'                          0355
*                   BUFCMW=OFF;     /* RESET WRITE IND       @Z30SSLC*/
*                   BUFCRRD=OFF;    /* READ INDICATOR OFF    @Z30SSLC*/
         NI    BUFCMW(RBUFC),B'01011111'                           0357
*                   GEN(MODESET EXTKEY=ZERO);/* SW TO KEY 0  @ZA26357*/
         MODESET EXTKEY=ZERO
*                   IOMLOCK=OFF;    /* REL IOMB              @Z30SSLC*/
         MVI   IOMLOCK(RIOMB),B'00000000'                          0359
*                   R15=ZERO;       /* END OF PROCESSING     @Z30SSLC*/
         SLR   R15,R15                                             0360
*                   GOTO EXIT;      /* EXIT MODULE           @Z30SSLC*/
         B     EXIT                                                0361
*                 END;              /*                       @Z30SSLC*/
*               RESPECIFY                                          0363
*                (R1) UNRESTRICTED; /*                       @ZA26357*/
*             END;                  /*                       @ZA26357*/
*         END;                      /*                       @Z30SSLC*/
@RF00335 DS    0H                                                  0366
*     END;                          /*                       @Z30SSLC*/
@RC00316 DS    0H                                                  0367
*   RW2=AMBCPA;                     /* FIRST CPA IN AMB CHAIN        */
@RF00310 L     @14,IOMAMB(,RIOMB)                                  0367
         L     RW2,AMBCPA(,@14)                                    0367
*   IF IOSCKEY>=KEY8&               /* CALLER ^ PRIV MODE    @Z30SSLC*/
*       AMBLSR=OFF THEN             /* NOT LSR               @ZA26357*/
         CLI   IOSCKEY(IOSBPTR),X'80'                              0368
         BL    @RF00368                                            0368
         TM    AMBLSR(@14),B'01000000'                             0368
         BNZ   @RF00368                                            0368
*CHKCPA:                                                           0369
*     DO;                           /* CHECK CPA VALIDITY            */
CHKCPA   DS    0H                                                  0370
*       RW1=BUFCCPA;                /* POINTER TO CPA FROM BUFC      */
         L     RW1,BUFCCPA(,RBUFC)                                 0370
*       DO WHILE RW2^=ZERO;         /* LAST CPA IN CHAIN HAS ZERO PTR*/
         B     @DE00371                                            0371
@DL00371 DS    0H                                                  0372
*         IF RW1=RW2 THEN           /* CPA FOUND IN AMB CHAIN        */
         CR    RW1,RW2                                             0372
         BNE   @RF00372                                            0372
*           DO;                                                    0373
*             IF RBUFC^=IOMBUFC THEN/* NOT FIRST TIME THRU LOOP      */
         C     RBUFC,IOMBUFC(,RIOMB)                               0374
         BE    @RF00374                                            0374
*               R15->CPACPCHN=RW1;  /* POINT LAST CPA TO THIS CPA    */
         ST    RW1,CPACPCHN(,R15)                                  0375
*             ELSE                  /* IS FIRST TIME         @ZA26357*/
*               IOMCPA=RW1;         /* PT 1ST CPA            @ZA26357*/
         B     @RC00374                                            0376
@RF00374 ST    RW1,IOMCPA(,RIOMB)                                  0376
*             R15=RW1;              /* PTR TO LAST CPA FOR CHAINING  */
@RC00374 LR    R15,RW1                                             0377
*             RBUFC=BUFCNXT1;       /* LOOK AT NEXT BUFC             */
         L     RBUFC,BUFCNXT1(,RBUFC)                              0378
*             RW2=AMBCPA;           /* START CHECK FROM FIRST CPA    */
         L     @14,IOMAMB(,RIOMB)                                  0379
         L     RW2,AMBCPA(,@14)                                    0379
*             GO TO NXTCPA;         /* CHECK CPA OF NEXT BUFC        */
         B     NXTCPA                                              0380
*           END;                                                   0381
*         ELSE                      /* CPA NOT LOCATED ON AMB CHAIN  */
*           RW2=RW2->CPANXT1;       /* CHECK NEXT CPA IN AMB CHAIN   */
@RF00372 L     RW2,CPANXT1(,RW2)                                   0382
*       END;                                                       0383
@DE00371 LTR   RW2,RW2                                             0383
         BNZ   @DL00371                                            0383
*CPAERR:                                                           0384
*       IOMCBERR=ON;                /* INVALID CPA                   */
CPAERR   OI    IOMCBERR(RIOMB),B'00001000'                         0384
*       R2=TWELVE;                  /* REASON CODE 12 INTO REGISTER  */
         LA    R2,12                                               0385
*       GEN REFS(IOMSAVE0)          /* STORE REGISTERS IN IOMB       */
*           (STM   0,15,IOMSAVE0(RIOMB));                          0386
         STM   0,15,IOMSAVE0(RIOMB)
*       DO;                         /* ABEND(377) DUMP SYSTEM        */
*         RESPECIFY                                                0388
*          (GPR01F) RESTRICTED;                                    0388
*         GPR01F=((377)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19  */
         L     GPR01F,@CF03965                                     0389
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00094                                     0390
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0391
*         RESPECIFY                                                0392
*          (GPR01F) UNRESTRICTED;                                  0392
*       END;                        /* ABEND(377) DUMP SYSTEM CPA  0393
*                                      INVALID - 179 HEX ABEND       */
*NXTCPA:                            /* CHECK CPA OF NEXT BUFC        */
*       IOMNBUF=IOMNBUF+ONE;        /* INCREMENT BUFC COUNT          */
NXTCPA   LA    @14,1                                               0394
         LH    @10,IOMNBUF(,RIOMB)                                 0394
         N     @10,@CF03980                                        0394
         ALR   @14,@10                                             0394
         STH   @14,IOMNBUF(,RIOMB)                                 0394
*       IF RBUFC^=IOMBUFC THEN      /* NOT BACK TO FIRST BUFC YET    */
         C     RBUFC,IOMBUFC(,RIOMB)                               0395
         BNE   @RT00395                                            0395
*         GO TO CHKCPA;             /* CHECK CPA OF NEXT BUFC        */
*     END CHKCPA;                                                  0397
*   ELSE                            /* PRIV OR LSR           @ZA26357*/
*     DO;                           /*                       @ZA26357*/
         B     @RC00368                                            0398
@RF00368 DS    0H                                                  0399
*       IF AMBGSR=ON×AMBLSR=ON THEN /* IF SHARED RESOURCES   @ZA26357*/
         L     @14,IOMAMB(,RIOMB)                                  0399
         TM    AMBGSR(@14),B'01100000'                             0399
         BZ    @RF00399                                            0399
*         DO;                       /*                       @ZA26357*/
*           IOMNBUF=ONE;            /* ONE BUFC FOR LSR/GSR  @ZA26357*/
         MVC   IOMNBUF(2,RIOMB),@CH00053                           0401
*           R15=IOMCPA;             /* PTR TO CPA FROM IOMB  @ZA26357*/
         L     R15,IOMCPA(,RIOMB)                                  0402
*         END;                      /*                       @ZA26357*/
*       ELSE                        /* IF PRIVILEDGED USER   @ZA26357*/
*         DO;                       /* CHAIN CPA'S TOGETHER  @ZA26357*/
         B     @RC00399                                            0404
@RF00399 DS    0H                                                  0405
*           IOMCPA=BUFCCPA;         /* PT TO 1ST CPA         @ZA33015*/
         L     @14,BUFCCPA(,RBUFC)                                 0405
         ST    @14,IOMCPA(,RIOMB)                                  0405
*CHAINCPA:                                                         0406
*           RW1=BUFCCPA;            /* PTR TO CPA FROM BUFC  @ZA33015*/
CHAINCPA L     RW1,BUFCCPA(,RBUFC)                                 0406
*           IF RBUFC^=IOMBUFC THEN  /* NOT THE FIRST TIME THRU LOOP  */
         C     RBUFC,IOMBUFC(,RIOMB)                               0407
         BE    @RF00407                                            0407
*             R15->CPACPCHN=RW1;    /* POINT LAST CPA TO THIS CPA    */
         ST    RW1,CPACPCHN(,R15)                                  0408
*           R15=RW1;                /* PTR TO LAST CPA FOR CHAINING  */
@RF00407 LR    R15,RW1                                             0409
*           RBUFC=BUFCNXT1;         /* CHANGE PTR TO NEXT BUFC       */
         L     RBUFC,BUFCNXT1(,RBUFC)                              0410
*           IOMNBUF=IOMNBUF+ONE;    /* INCREMENT BUFC COUNT          */
         LA    @14,1                                               0411
         LH    @10,IOMNBUF(,RIOMB)                                 0411
         N     @10,@CF03980                                        0411
         ALR   @14,@10                                             0411
         STH   @14,IOMNBUF(,RIOMB)                                 0411
*           IF RBUFC^=IOMBUFC THEN  /* NOT BACK TO FIRST BUFC YET    */
         C     RBUFC,IOMBUFC(,RIOMB)                               0412
         BNE   @RT00412                                            0412
*             GO TO CHAINCPA;       /* CHAIN CPA OF NEXT BUFC        */
*         END;                                                     0414
*     END;                          /*                       @ZA26357*/
@RC00399 DS    0H                                                  0416
*   IF IOMNBUF=ZERO THEN            /* NO VALID REQUEST SO RETURN    */
@RC00368 LH    @14,IOMNBUF(,RIOMB)                                 0416
         N     @14,@CF03980                                        0416
         LTR   @14,@14                                             0416
         BNZ   @RF00416                                            0416
*     DO;                                                          0417
*       IOMLOCK=OFF;                                               0418
         MVI   IOMLOCK(RIOMB),B'00000000'                          0418
*       R15=ZERO;                   /* RTRN CODE             @Z30SSLP*/
         SLR   R15,R15                                             0419
*       GO TO EXIT;                 /* RETURN TO CALLER              */
         B     EXIT                                                0420
*     END;                                                         0421
*   R15->CPACPCHN=IOMCPA;           /* LAST CPA POINTS TO FIRST      */
@RF00416 L     @14,IOMCPA(,RIOMB)                                  0422
         ST    @14,CPACPCHN(,R15)                                  0422
*   RESPECIFY                                                      0423
*    (RW1,                                                         0423
*     RW2) UNRSTD;                                                 0423
*   RESPECIFY                                                      0424
*    (RCPA) RSTD;                                                  0424
*   RESPECIFY                                                      0425
*    (IDACPA) BASED(RCPA);                                         0425
*   RCPA=IOMCPA;                    /* PTR TO FIRST CPA              */
         LR    RCPA,@14                                            0426
*/********************************************************************/
*/* TEST IF EOV MUST BE CALLED FOR INVALID RBA.                      */
*/********************************************************************/
*                                                                  0427
*CHKRBA:                            /* TEST IF RBA EDB FOUND         */
*   DO R15=IOMNBUF TO ONE BY-1;                                    0427
CHKRBA   LH    R15,IOMNBUF(,RIOMB)                                 0427
         N     R15,@CF03980                                        0427
         B     @DE00427                                            0427
@DL00427 DS    0H                                                  0428
*     IF BUFCMW=ON THEN             /* WRITE IS ON                   */
*                                                                  0428
         TM    BUFCMW(RBUFC),B'10000000'                           0428
         BNO   @RF00428                                            0428
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK WRITE RBA-S                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0429
*WRITE:                                                            0429
*       DO;                                                        0429
WRITE    DS    0H                                                  0430
*         RESPECIFY                                                0430
*          (R0,                                                    0430
*           R1,                                                    0430
*           R6) RESTRICTED;                                        0430
*         R0=BUFCORBA;              /* OUTPUT RBA                    */
         L     R0,BUFCORBA(,RBUFC)                                 0431
*         CALL CONVERT;             /* GO CONVERT RBA TO MBBCCHHR    */
         BAL   @14,CONVERT                                         0432
*         RESPECIFY                                                0433
*          (R0) UNRSTD;                                            0433
*                                                                  0433
*         /***********************************************************/
*         /*                                                         */
*         /* TEST IF RBA EDB ENTRY FOUND                             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0434
*         IF CONBB^=ZERO THEN       /* EDB NOT FOUND                 */
         LH    @14,CONBB(,RIOMB)                                   0434
         N     @14,@CF03980                                        0434
         LTR   @14,@14                                             0434
         BZ    @RF00434                                            0434
*           IF IOMEOVXC=OFF&        /* EOV INDICATOR NOT SET @Z30SSLC*/
*               AMBICI=OFF THEN     /* IF NOT ICIP           @Z30SSLC*/
*                                                                  0435
         TM    IOMEOVXC(RIOMB),B'00010000'                         0435
         BNZ   @RF00435                                            0435
         L     @14,IOMAMB(,RIOMB)                                  0435
         TM    AMBICI(@14),B'00010000'                             0435
         BNZ   @RF00435                                            0435
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP CALL TO END OF VOL INTERFACE ROUTINE         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0436
*             DO;                                                  0436
*               PLHEOVR=AMBEOVMR;   /* MOUNT BY RBA-NO EDB   @ZA26357*/
         L     @14,IOMPLH(,RIOMB)                                  0437
         MVI   PLHEOVR(@14),B'10000001'                            0437
*               PLHEOVPT=ADDR(BUFCORBA);/* PT OUTPUT RBA     @ZA26357*/
         LA    @10,BUFCORBA(,RBUFC)                                0438
         ST    @10,PLHEOVPT(,@14)                                  0438
*               IOMLOCK=OFF;        /* TURN OFF LOCK                 */
         MVI   IOMLOCK(RIOMB),B'00000000'                          0439
*               IOMEOVXC=ON;        /* MARK CALL TO EOV              */
         OI    IOMEOVXC(RIOMB),B'00010000'                         0440
*               R15=EOVREQ;         /* SET RETURN CODE               */
         LA    R15,8                                               0441
*               R1=RBUFC;           /* POINT TO CURRENT BUFC         */
         LR    R1,RBUFC                                            0442
*               GO TO EXIT;         /* RETURN TO PIOD                */
         B     EXIT                                                0443
*             END;                                                 0444
*           ELSE                    /* INVALID RBA                   */
*             DO;                                                  0445
*                                                                  0445
@RF00435 DS    0H                                                  0446
*               /*****************************************************/
*               /*                                                   */
*               /* SET MODE TO USER'S KEY WHILE SETTING BUFC BIT     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0446
*               SPKA(IOSCKEY);      /* SW KEY                @ZA26357*/
         SLR   @14,@14                                             0446
         IC    @14,IOSCKEY(,IOSBPTR)                               0446
         SPKA  0(@14)                                              0446
*               BUFCXEDB=ON;        /* INVALID RBA                   */
         OI    BUFCXEDB(RBUFC),B'00000100'                         0447
*               BUFCEPT=ON;         /* COMPLETE BIT ON               */
         OI    BUFCEPT(RBUFC),B'00000001'                          0448
*               BUFCMW=OFF;         /* WRITE INDICATOR OFF           */
*               BUFCRRD=OFF;        /* READ INDICATOR OFF            */
         NI    BUFCMW(RBUFC),B'01011111'                           0450
*               GEN(MODESET EXTKEY=ZERO);/* SW KEY           @ZA26357*/
         MODESET EXTKEY=ZERO
*             END;                                                 0452
*         ELSE                      /* RBA VALID                     */
*           DO;                     /*                       @ZA33015*/
         B     @RC00434                                            0453
@RF00434 DS    0H                                                  0454
*             WRITEXT=CONM;         /* STORE EXTENT VALUE FOR WRITE  */
*                                                                  0454
         IC    @14,CONM(,RCPA)                                     0454
         STC   @14,WRITEXT(,RCPA)                                  0454
*             /*******************************************************/
*             /*                                                     */
*             /* IF THIS IS A REPLICATED UPDATE WRITE REQUEST, THE   */
*             /* PF-CPA MUST BE VALIDITY CHECKED FOR NON-PRIVILEGED  */
*             /* USERS, AND IOMCPA POINTED TO THE PREFORMATTED CPA   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0455
*             IF LPMREPL=ON&BUFCFMT=OFF&/*                   @Z30SSLC*/
*                 AMBLSR=OFF&AMBGSR=OFF THEN/* IF NO SHR RES @Z30SSLC*/
         TM    LPMREPL(R6),B'01000000'                             0455
         BNO   @RF00455                                            0455
         TM    BUFCFMT(RBUFC),B'01000000'                          0455
         BNZ   @RF00455                                            0455
         L     @14,IOMAMB(,RIOMB)                                  0455
         TM    AMBLSR(@14),B'01100000'                             0455
         BNZ   @RF00455                                            0455
*               DO;                                                0456
*                 RESPECIFY                                        0457
*                  (RW2) RSTD;                                     0457
*                 RBUFC=BUFDRPFB;   /* PTR TO PREFORMATTED BUFC      */
         L     @10,AMBBUFC(,@14)                                   0458
         L     RBUFC,BUFDRPFB(,@10)                                0458
*                 RCPA=BUFCCPA;     /* PTR TO PF-CPA FROM BUFC       */
         L     RCPA,BUFCCPA(,RBUFC)                                0459
*                 IOMCPA=RCPA;      /* PTR TO PF-CPA IN BUFC CHAIN   */
         ST    RCPA,IOMCPA(,RIOMB)                                 0460
*                 IF IOSCKEY>=KEY8 THEN/* NON-PRIVILEGED USER        */
         CLI   IOSCKEY(IOSBPTR),X'80'                              0461
         BL    @RF00461                                            0461
*                   DO;             /* CHECK VALIDITY OF PF-CPA      */
*                     RW2=AMBCPA;   /* FIRST CPA IN CPA CHAIN        */
         L     RW2,AMBCPA(,@14)                                    0463
*                     DO WHILE RW2^=ZERO;/* CHECK VALIDITY OF PF-CPA */
         B     @DE00464                                            0464
@DL00464 DS    0H                                                  0465
*                       IF RCPA=RW2 THEN/* PF-CPA FOUND IN AMB CHAIN */
         CR    RCPA,RW2                                            0465
         BE    @RT00465                                            0465
*                         GO TO RESETPTR;/* SET POINTERS IF REPL   0466
*                                      WRITE                         */
*                       ELSE        /* PF-CPA NOT YET FOUND          */
*                         RW2=RW2->CPANXT1;/* NEXT CPA IN AMB CPA  0467
*                                      CHAIN                         */
         L     RW2,CPANXT1(,RW2)                                   0467
*                     END;                                         0468
@DE00464 LTR   RW2,RW2                                             0468
         BNZ   @DL00464                                            0468
*                     GO TO CPAERR; /* PF-CPA IS NOT VALID           */
         B     CPAERR                                              0469
*                   END;                                           0470
*RESETPTR:                                                         0471
*                 CPACPCHN=RCPA;    /* CHAIN PF-CPA TO ITSELF        */
@RF00461 DS    0H                                                  0471
RESETPTR ST    RCPA,CPACPCHN(,RCPA)                                0471
*                 CPABLKSZ=LPMBLKSZ;/* SAVE BLOCKSIZE IN PF-CPA      */
         L     @14,LPMBLKSZ(,R6)                                   0472
         ST    @14,CPABLKSZ(,RCPA)                                 0472
*                 RBUFC=IOMBUFC;    /* RESET BUFC POINTER TO 1ST BUFC*/
         L     RBUFC,IOMBUFC(,RIOMB)                               0473
*                 RESPECIFY                                        0474
*                  (RW2,                                           0474
*                   R6) UNRSTD;                                    0474
*               END;                                               0475
*           END;                    /*                       @ZA33015*/
@RF00455 DS    0H                                                  0477
*       END WRITE;                                                 0477
@RC00434 DS    0H                                                  0478
*     IF BUFCRRD=ON&BUFCXEDB=OFF THEN/* READ IS ON,NO EDB ERROR      */
*                                                                  0478
@RF00428 TM    BUFCRRD(RBUFC),B'00100000'                          0478
         BNO   @RF00478                                            0478
         TM    BUFCXEDB(RBUFC),B'00000100'                         0478
         BNZ   @RF00478                                            0478
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK READ RBA-S                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0479
*READ:                                                             0479
*       DO;                                                        0479
READ     DS    0H                                                  0480
*         RESPECIFY                                                0480
*          (R0) RESTRICTED;                                        0480
*         R0=BUFCDDDD;              /* INPUT RBA                     */
         L     R0,BUFCDDDD(,RBUFC)                                 0481
*         CALL CONVERT;             /* GO CONVERT RBA TO MBBCCHHR    */
         BAL   @14,CONVERT                                         0482
*         RESPECIFY                                                0483
*          (R0) UNRSTD;                                            0483
*                                                                  0483
*         /***********************************************************/
*         /*                                                         */
*         /* TEST IF RBA EDB ENTRY FOUND                             */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0484
*         IF CONBB^=ZERO THEN       /* EDB NOT FOUND                 */
         LH    @14,CONBB(,RIOMB)                                   0484
         N     @14,@CF03980                                        0484
         LTR   @14,@14                                             0484
         BZ    @RF00484                                            0484
*           IF IOMEOVXC=OFF&        /* EOV INDICATOR NOT SET @Z30SSLC*/
*               AMBICI=OFF THEN     /* IF NOT ICIP           @Z30SSLC*/
*                                                                  0485
         TM    IOMEOVXC(RIOMB),B'00010000'                         0485
         BNZ   @RF00485                                            0485
         L     @14,IOMAMB(,RIOMB)                                  0485
         TM    AMBICI(@14),B'00010000'                             0485
         BNZ   @RF00485                                            0485
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP CALL TO END OF VOL INTERFACE ROUTINE         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0486
*             DO;                                                  0486
*                                                                  0486
*               /*****************************************************/
*               /*                                                   */
*               /* SET MODE TO USER'S KEY WHILE SETTING PLH  @ZA26357*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0487
*               PLHEOVR=AMBEOVMR;   /* MOUNT BY RBA-NO EDB   @ZA26357*/
         L     @14,IOMPLH(,RIOMB)                                  0487
         MVI   PLHEOVR(@14),B'10000001'                            0487
*               PLHEOVPT=ADDR(BUFCDDDD);/* PT TO INPUT RBA   @ZA26357*/
         LA    @10,BUFCDDDD(,RBUFC)                                0488
         ST    @10,PLHEOVPT(,@14)                                  0488
*               IOMLOCK=OFF;        /* TURN OFF LOCK                 */
         MVI   IOMLOCK(RIOMB),B'00000000'                          0489
*               IOMEOVXC=ON;        /* MARK CALL TO EOV              */
         OI    IOMEOVXC(RIOMB),B'00010000'                         0490
*               R15=EOVREQ;         /* SET RETURN CODE               */
         LA    R15,8                                               0491
*               R1=RBUFC;           /* POINT TO CURRENT BUFC         */
         LR    R1,RBUFC                                            0492
*               GO TO EXIT;         /* RETURN TO PIOD                */
         B     EXIT                                                0493
*               RESPECIFY                                          0494
*                (R1) UNRSTD;                                      0494
*             END;                                                 0495
*           ELSE                    /* INVALID RBA                   */
*             DO;                                                  0496
*                                                                  0496
@RF00485 DS    0H                                                  0497
*               /*****************************************************/
*               /*                                                   */
*               /* SET MODE TO USER'S KEY WHILE SETTING BUFC BIT     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0497
*               SPKA(IOSCKEY);      /* SWITCH TO USER KEY    @ZA26357*/
         SLR   @14,@14                                             0497
         IC    @14,IOSCKEY(,IOSBPTR)                               0497
         SPKA  0(@14)                                              0497
*               BUFCXEDB=ON;        /* INVALID RBA                   */
         OI    BUFCXEDB(RBUFC),B'00000100'                         0498
*               BUFCEPT=ON;         /* COMPLETE BIT ON               */
         OI    BUFCEPT(RBUFC),B'00000001'                          0499
*               BUFCRRD=OFF;        /* READ INDICATOR OFF            */
         NI    BUFCRRD(RBUFC),B'11011111'                          0500
*               GEN(MODESET EXTKEY=ZERO);/* KEY TO ZERO      @ZA26357*/
         MODESET EXTKEY=ZERO
*             END;                                                 0502
*         ELSE                      /* RBA VALID                     */
*           READEXT=CONM;           /* STORE EXTENT VALUE FOR READ   */
         B     @RC00484                                            0503
@RF00484 IC    @14,CONM(,RCPA)                                     0503
         STC   @14,READEXT(,RCPA)                                  0503
*       END READ;                                                  0504
@RC00484 DS    0H                                                  0505
*     RBUFC=BUFCNXT1;               /* POINT TO NEXT BUFC            */
@RF00478 L     RBUFC,BUFCNXT1(,RBUFC)                              0505
*     RCPA=CPACPCHN;                /* POINT TO NEXT CPA             */
         L     RCPA,CPACPCHN(,RCPA)                                0506
*   END CHKRBA;                                                    0507
         BCTR  R15,0                                               0507
@DE00427 LTR   R15,R15                                             0507
         BP    @DL00427                                            0507
*   RESPECIFY                                                      0508
*    (R15) UNRSTD;                                                 0508
*   IOMEOVXC=OFF;                   /* CLEAR FOR NEXT PASS           */
*                                                                  0509
         NI    IOMEOVXC(RIOMB),B'11101111'                         0509
*   /*****************************************************************/
*   /*                                                               */
*   /* STORE ASID IN IOSB AND ZERO IOMPGAD                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0510
*   IOSASID=ASCBASID;               /* ADDR SPACE ID IN IOSB         */
         L     @10,PSAAOLD                                         0510
         MVC   IOSASID(2,IOSBPTR),ASCBASID(@10)                    0510
*   IOMPGAD=ZERO;                   /* ZERO IOMPGAD - RM CALLER      */
         SLR   @10,@10                                             0511
         ST    @10,IOMPGAD(,RIOMB)                                 0511
*   IOMNSEG=ZERO;                   /* CLEAR                 @Z30SSLP*/
         STH   @10,IOMNSEG(,RIOMB)                                 0512
*/********************************************************************/
*/*   GENERATE VIRTUAL PAGE LIST AND VIRTUAL SUB-AREA LIST           */
*/********************************************************************/
*                                                                  0513
*BLDVPL:                                                           0513
*   RESPECIFY                                                      0513
*    (R0,                                                          0513
*     R14) RSTD;                                                   0513
BLDVPL   DS    0H                                                  0514
*   RESPECIFY                                                      0514
*    (VSL) BASED(R14);                                             0514
*   R14=IOMVSL;                     /* POINTER TO VSL                */
         L     R14,IOMVSL(,RIOMB)                                  0515
*   DO R0=IOMNBUF TO ONE BY-1;                                     0516
         LH    R0,IOMNBUF(,RIOMB)                                  0516
         N     R0,@CF03980                                         0516
         B     @DE00516                                            0516
@DL00516 DS    0H                                                  0517
*     IF(BUFCRRD=ON×BUFCMW=ON) THEN /* VALID REQUEST EXISTS IN BUFC  */
         TM    BUFCRRD(RBUFC),B'10100000'                          0517
         BZ    @RF00517                                            0517
*       DO;                                                        0518
*         IOMNSEG=IOMNSEG+ONE;      /* INCR                  @Z30SSLP*/
         LA    @15,1                                               0519
         LH    @10,IOMNSEG(,RIOMB)                                 0519
         N     @10,@CF03980                                        0519
         ALR   @10,@15                                             0519
         STH   @10,IOMNSEG(,RIOMB)                                 0519
*         CPABCINV=AMDCINV/CPABLKSZ;/* NBR BLOCKS PER CINV           */
         L     @01,IOMAMB(,RIOMB)                                  0520
         L     @01,AMBDSB(,@01)                                    0520
         L     @10,CPABLKSZ(,RCPA)                                 0520
         L     @06,AMDCINV(,@01)                                   0520
         SRDA  @06,32                                              0520
         DR    @06,@10                                             0520
         STH   @07,CPABCINV(,RCPA)                                 0520
*         RFY                                                      0521
*           RW1 RSTD;               /*                       @ZA27961*/
*         RW1=(CPABLKSZ+F2K-1)&-F2K;/* ROUND UP BLKSIZE      @ZA27961*/
         SL    @10,@CF03966                                        0522
         N     @10,@CF03967                                        0522
         LR    RW1,@10                                             0522
*         RW1=RW1/F2K+1;            /* NO. OF PAGES          @ZA27961*/
         LR    @10,RW1                                             0523
         SRL   @10,11                                              0523
         ALR   @10,@15                                             0523
         LR    RW1,@10                                             0523
*         VPLSIZE=RW1;              /* ENTRIES PER BLOCK     @ZA27961*/
         STH   RW1,VPLSIZE(,RCPA)                                  0524
*         IF BUFCPFCP=OFF&          /* PREFORMAT COMPLETE    @ZA27961*/
*             CPARREPL=OFF&CPAWREPL=OFF THEN/* NOT REPLICATE @ZA27961*/
         TM    BUFCPFCP(RBUFC),B'00000010'                         0525
         BNZ   @RF00525                                            0525
         TM    CPARREPL(RCPA),B'11000000'                          0525
         BNZ   @RF00525                                            0525
*           VPLSIZE=RW1*CPABCINV;   /* TOTAL NO. OF ENTRIES  @ZA27961*/
         LH    @15,CPABCINV(,RCPA)                                 0526
         LR    @09,@15                                             0526
         MR    @08,RW1                                             0526
         STH   @09,VPLSIZE(,RCPA)                                  0526
*         IF CPAVPLV=OFF THEN       /* VIRTUAL PAGE LIST NOT BUILT   */
@RF00525 TM    CPAVPLV(RCPA),B'10000000'                           0527
         BNZ   @RF00527                                            0527
*           DO;                                                    0528
*                                                                  0528
*             /*******************************************************/
*             /*                                                     */
*             /* A VALID FUNCTION WAS SPECIFIED FOR THIS BUFFER AND  */
*             /* THE BUFFER ADDRESS IS A VIRTUAL ADDRESS BUT THE     */
*             /* VIRTUAL PAGE LIST WAS NOT VALID SO IT NEEDS TO BE   */
*             /* GENERATED                                           */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0529
*             RW1=RW1*LENGTH(PAGAD);/* BYTES PER BLK         @ZA27961*/
         SLL   RW1,2                                               0529
*             RESPECIFY                                            0530
*              (R1,                                                0530
*               RW4) RSTD;          /*                       @ZA27961*/
*             IF CPAWREPL=ON×CPARREPL=ON×/* IF REPL          @ZA27961*/
*                 BUFCPFCP=ON THEN  /* IF PREF COMPLETE      @ZA27961*/
         TM    CPAWREPL(RCPA),B'11000000'                          0531
         BNZ   @RT00531                                            0531
         TM    BUFCPFCP(RBUFC),B'00000010'                         0531
         BNO   @RF00531                                            0531
@RT00531 DS    0H                                                  0532
*               R1=1;               /* ONE IDAL ENTRY        @ZA27961*/
         LA    R1,1                                                0532
*             ELSE                  /* NOT ANY OF THE ABOVE  @ZA27961*/
*               R1=CPABCINV;        /*                       @ZA27961*/
         B     @RC00531                                            0533
@RF00531 LH    R1,CPABCINV(,RCPA)                                  0533
*             RW4=VPLSIZE*FOUR;     /* LENGTH OF VPL         @ZA27961*/
@RC00531 LH    RW4,VPLSIZE(,RCPA)                                  0534
         N     RW4,@CF03980                                        0534
         SLA   RW4,2                                               0534
*             RESPECIFY                                            0535
*              (RW2,                                               0535
*               RW3,                                               0535
*               R15) RSTD;          /*                       @ZA27961*/
*             RESPECIFY                                            0536
*              (PAGAD) BASED(RW2);                                 0536
*             RW3=BUFCBAD;          /* BUFFER ADDR TO BE CONVERTED   */
         L     RW3,BUFCBAD(,RBUFC)                                 0537
*             RW2=CPAVPL;           /* POINTER TO VPL        @Z30SSLC*/
         L     RW2,CPAVPL(,RCPA)                                   0538
*             RESPECIFY                                            0539
*               CORE BASED(RW2);    /*                       @Z30SSLC*/
*             CORE(1:RW4)=CORE(1:RW4)&&CORE(1:RW4);/* ZERO VPL       */
         LR    @06,RW4                                             0540
         BCTR  @06,0                                               0540
         EX    @06,@SX03985                                        0540
*             DO R1=R1 TO ONE BY-1; /*                       @Z30SSLC*/
         B     @DE00541                                            0541
@DL00541 DS    0H                                                  0542
*               RW4=RW3+CPABLKSZ;   /* POINT TO NEXT BLK     @Z30SSLC*/
         LR    RW4,RW3                                             0542
         AL    RW4,CPABLKSZ(,RCPA)                                 0542
*               R15=RW2+RW1;        /* PT TO NXT BLK SET     @Z30SSLC*/
         LR    R15,RW2                                             0543
         ALR   R15,RW1                                             0543
*               PAGAD=RW3;          /* BUFFER ADDRESS IN VPL         */
         ST    RW3,PAGAD(,RW2)                                     0544
*               RW2=RW2+FOUR;       /* NEXT VPL ENTRY        @Z30SSLC*/
         AL    RW2,@CF00069                                        0545
*               RW3=(RW3+F2K)&(-F2K);/* NEXT 2K BDY          @Z30SSLC*/
         LA    @06,2048                                            0546
         ALR   @06,RW3                                             0546
         N     @06,@CF03967                                        0546
         LR    RW3,@06                                             0546
*               DO WHILE RW3<RW4;   /* LOOP THRU BLK         @Z30SSLC*/
         B     @DE00547                                            0547
@DL00547 DS    0H                                                  0548
*                 PAGAD=RW3;        /* SET VPL ENTRY         @Z30SSLC*/
         ST    RW3,PAGAD(,RW2)                                     0548
*                 RW3=RW3+F2K;      /* NEXT 2K BDY           @Z30SSLC*/
         AL    RW3,@CF00088                                        0549
*                 RW2=RW2+FOUR;     /* PTR TO NEXT VPL ENTRY @Z30SSLC*/
         AL    RW2,@CF00069                                        0550
*               END;                /*                       @Z30SSLC*/
@DE00547 CR    RW3,RW4                                             0551
         BL    @DL00547                                            0551
*               RW2=R15;            /* POINT TO NXT VPL SET  @Z30SSLC*/
         LR    RW2,R15                                             0552
*               RW3=RW4;            /* COPY PTR TO NEXT BLK  @Z30SSLC*/
         LR    RW3,RW4                                             0553
*             END;                                                 0554
         BCTR  R1,0                                                0554
@DE00541 LTR   R1,R1                                               0554
         BP    @DL00541                                            0554
*             RESPECIFY                                            0555
*              (R1,                                                0555
*               RW1,                                               0555
*               RW3,                                               0555
*               RW4,                                               0555
*               R15) UNRSTD;        /*                       @Z30SSLC*/
*             RESPECIFY                                            0556
*              (RW2) UNRSTD;        /*                       @Z30SSLC*/
*           END;                                                   0557
*         IF BUFCFIX=OFF×           /* NOT FIXED OR          @Z30SSLP*/
*             IOSCKEY>=KEY8 THEN    /* NOT SVRB?             @Z30SSLP*/
@RF00527 TM    BUFCFIX(RBUFC),B'00000001'                          0558
         BZ    @RT00558                                            0558
         CLI   IOSCKEY(IOSBPTR),X'80'                              0558
         BL    @RF00558                                            0558
@RT00558 DS    0H                                                  0559
*           DO;                     /*                       @Z30SSLP*/
*             VSLSTRT=BUFCBAD;      /* BEGINNING BUFFER ADDR @ZA25729*/
         L     @15,BUFCBAD(,RBUFC)                                 0560
         ST    @15,VSLSTRT(,R14)                                   0560
*             VSLEND=BUFCBAD+AMDCINV;/* ENDING BUFFER ADDR   @ZA25729*/
         L     @01,IOMAMB(,RIOMB)                                  0561
         L     @01,AMBDSB(,@01)                                    0561
         AL    @15,AMDCINV(,@01)                                   0561
         ST    @15,VSLEND(,R14)                                    0561
*             VSLFLAG1=ZERO;        /* CLEAR FLAG1           @ZA25729*/
         MVI   VSLFLAG1(R14),X'00'                                 0562
*             VSLFLAG2=ZERO;        /* CLEAR FLAG2           @ZA25729*/
         MVI   VSLFLAG2(R14),X'00'                                 0563
*             R14=R14+EIGHT;        /* POINT TO NEXT VSL ENTRY       */
         AL    R14,@CF00058                                        0564
*           END;                    /*                       @Z30SSLP*/
*         IF AMBGSR=OFF&            /* NOT GSR & -           @Z30SSLP*/
*             AMBPAMBL->AMBLFIX=OFF&/* NOT FIXED             @Z30SSLC*/
*             IOMPLH->PLHVAMB=ON THEN/* REL 2 CB             @Z30SSLC*/
@RF00558 L     @15,IOMAMB(,RIOMB)                                  0566
         TM    AMBGSR(@15),B'00100000'                             0566
         BNZ   @RF00566                                            0566
         L     @01,AMBPAMBL(,@15)                                  0566
         TM    AMBLFIX(@01),B'00001000'                            0566
         BNZ   @RF00566                                            0566
         L     @01,IOMPLH(,RIOMB)                                  0566
         TM    PLHVAMB(@01),B'00100000'                            0566
         BNO   @RF00566                                            0566
*           DO;                     /*                       @Z30SSLP*/
*             VSLSTRT=ADDR(IDACPA); /* CPA BEGIN             @ZA25729*/
         ST    RCPA,VSLSTRT(,R14)                                  0568
*             VSLEND=VSLSTRT+CPALEN;/* CPA END               @ZA25729*/
         L     @15,VSLSTRT(,R14)                                   0569
         AH    @15,CPALEN(,RCPA)                                   0569
         ST    @15,VSLEND(,R14)                                    0569
*             VSLFLAG1=ZERO;        /* CLEAR FLAG1           @ZA25729*/
         MVI   VSLFLAG1(R14),X'00'                                 0570
*             VSLFLAG2=ZERO;        /* CLEAR FLAG2           @ZA25729*/
         MVI   VSLFLAG2(R14),X'00'                                 0571
*             R14=R14+EIGHT;        /* INCR                  @Z30SSLP*/
         AL    R14,@CF00058                                        0572
*           END;                    /*                       @Z30SSLP*/
*       END;                                                       0574
@RF00566 DS    0H                                                  0575
*     RBUFC=BUFCNXT1;               /* POINTER TO NEXT BUFC          */
@RF00517 L     RBUFC,BUFCNXT1(,RBUFC)                              0575
*     RCPA=CPACPCHN;                /* POINTER TO NEXT CPA           */
         L     RCPA,CPACPCHN(,RCPA)                                0576
*   END;                                                           0577
*                                                                  0577
         BCTR  R0,0                                                0577
@DE00516 LTR   R0,R0                                               0577
         BP    @DL00516                                            0577
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPLETE VSL FOR PAGEFIX ENTRY                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0578
*   RESPECIFY                                                      0578
*    (R15) RSTD;                                                   0578
*   IF IOMNSEG=ZERO THEN            /* NO VSL ENTRIES        @Z30SSLP*/
         LH    @10,IOMNSEG(,RIOMB)                                 0579
         N     @10,@CF03980                                        0579
         LTR   @10,@10                                             0579
         BNZ   @RF00579                                            0579
*     DO;                                                          0580
*       IOMLOCK=OFF;                /* TURN OFF LOCK BYTE            */
         MVI   IOMLOCK(RIOMB),B'00000000'                          0581
*       R15=ZERO;                   /* RTRN CODE             @Z30SSLP*/
         SLR   R15,R15                                             0582
*       GO TO EXIT;                 /* BYPASS FURTHER PROCESSING     */
         B     EXIT                                                0583
*     END;                                                         0584
*   R14=R14-EIGHT;                  /* PT TO LAST VSL ENTRY  @Z30SSLC*/
@RF00579 SL    R14,@CF00058                                        0585
*   IF R14<IOMVSL THEN              /* IF NO NEED TO PAGEFIX @Z30SSLC*/
         L     @10,IOMVSL(,RIOMB)                                  0586
         CR    R14,@10                                             0586
         BL    @RT00586                                            0586
*     GOTO BLDIDAL;                 /* SKIP OVER PAGE FIX    @Z30SSLC*/
*   VSLHIGH=ON;                     /* INDICATES LAST VSL ENTRY      */
         OI    VSLHIGH(R14),B'10000000'                            0588
*   R14=IOMVSL;                     /* FIRST VSL ENTRY               */
         LR    R14,@10                                             0589
*   VSLFIX=ON;                      /* INDICATES PGFIX VSL LIST      */
         OI    VSLFIX(R14),B'01000000'                             0590
*/********************************************************************/
*/*           PREPARE REGISTERS FOR ENTRY TO PAGEFIX ROUTINE         */
*/********************************************************************/
*                                                                  0591
*   RESPECIFY                                                      0591
*     R1 RESTRICTED;                /*                       @Z40GSDT*/
*   R1=IOMVSL;                      /* POINTER TO VSL                */
         LR    R1,@10                                              0592
*   IOMSAVE4=0;                     /* ZERO ECB              @Z30SSLC*/
         SLR   @10,@10                                             0593
         ST    @10,IOMSAVE4(,RIOMB)                                0593
*   R0=ADDR(IOMSAVE4);              /* PTR TO DUMMY ECB IN REG 0     */
         LA    R0,IOMSAVE4(,RIOMB)                                 0594
*   R1=R1×PAGEMASK;                 /* HIGH BIT ON IN REGISTER 1     */
         O     R1,@CF00094                                         0595
*   RCPA=ZERO;                      /* NO ACCNTING           @Z30SSLP*/
         SLR   RCPA,RCPA                                           0596
*   IOMPGFIX=ON;                    /* IND PGS FIXD          @Z30SSLP*/
         OI    IOMPGFIX(RIOMB),B'00000010'                         0597
*   CALL CVTVPSIB;                  /* PAGEFIX RTN ADDRESS   @Z40GSDT*/
         L     @10,CVTPTR                                          0598
         L     @15,CVTVPSIB(,@10)                                  0598
         BALR  @14,@15                                             0598
*   RESPECIFY                                                      0599
*     R15 RESTRICTED;               /*                       @Z40GSDT*/
*   RCPA=IOMCPA;                    /* RESET REGISTER 4 TO CPA PTR   */
         L     RCPA,IOMCPA(,RIOMB)                                 0600
*/********************************************************************/
*/*      CHECK PAGEFIX RETURN CODE                                   */
*/********************************************************************/
*                                                                  0601
*   IF R15=ZERO×                    /* ALL PAGES ARE FIXED   @Z40GSDT*/
*       R15=EIGHT THEN              /* NOT ALL PAGES ARE IN CORE     */
         LTR   R15,R15                                             0601
         BZ    @RT00601                                            0601
         C     R15,@CF00058                                        0601
         BNE   @RF00601                                            0601
@RT00601 DS    0H                                                  0602
*/********************************************************************/
*/*        REFERENCE EACH VPL ENTRY TO BRING PAGES INTO CORE         */
*/*              FOR PAGE FIXING AND FOR VALIDITY CHECK              */
*/********************************************************************/
*                                                                  0602
*     DO;                                                          0602
*PAGEIN1:                                                          0603
*       RESPECIFY                                                  0603
*         DATAADDR BASED(R14);                                     0603
*                                                                  0603
PAGEIN1  DS    0H                                                  0604
*       /*************************************************************/
*       /*                                                           */
*       /* SET MODE TO USER'S KEY WHILE REFERENCING PAGES            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0604
*       SPKA(IOSCKEY);              /* SET PSW TO USER KEY   @Z40GSDT*/
         SLR   @10,@10                                             0604
         IC    @10,IOSCKEY(,IOSBPTR)                               0604
         SPKA  0(@10)                                              0604
*       DO R0=IOMNBUF TO ONE BY-1;                                 0605
         LH    R0,IOMNBUF(,RIOMB)                                  0605
         N     R0,@CF03980                                         0605
         B     @DE00605                                            0605
@DL00605 DS    0H                                                  0606
*         R14=CPAVPL;               /* POINTER TO VPL                */
         L     R14,CPAVPL(,RCPA)                                   0606
*         IF(BUFCRRD=ON×BUFCMW=ON) THEN/* VALID REQUEST EXISTS IN  0607
*                                      BUFC                          */
         TM    BUFCRRD(RBUFC),B'10100000'                          0607
         BZ    @RF00607                                            0607
*           DO R1=VPLSIZE TO ONE BY-1;/* VPL SIZE STILL IN CPAWORK1  */
         LH    R1,VPLSIZE(,RCPA)                                   0608
         N     R1,@CF03980                                         0608
         B     @DE00608                                            0608
@DL00608 DS    0H                                                  0609
*             R15=DATAADDR;         /* VPL ENTRY IN REGISTER         */
         L     R15,DATAADDR(,R14)                                  0609
*             IF R15^=0 THEN        /* IF VALID ADDRESS      @Z30SSLC*/
         LTR   R15,R15                                             0610
         BZ    @RF00610                                            0610
*               GEN REFS(R15)       /* REF ENT FOR PAGEFIX   @Z40GSDT*/
*                   (NI    0(R15),B'11111111');                    0611
         NI    0(R15),B'11111111'
*             R14=R14+FOUR;         /* POINT TO NEXT VPL ENTRY       */
@RF00610 AL    R14,@CF00069                                        0612
*           END;                                                   0613
         BCTR  R1,0                                                0613
@DE00608 LTR   R1,R1                                               0613
         BP    @DL00608                                            0613
*         RBUFC=BUFCNXT1;           /* CHANGE POINTER TO NEXT BUFC   */
@RF00607 L     RBUFC,BUFCNXT1(,RBUFC)                              0614
*         RCPA=CPACPCHN;            /* CHANGE POINTER TO NEXT CPA    */
         L     RCPA,CPACPCHN(,RCPA)                                0615
*       END;                                                       0616
         BCTR  R0,0                                                0616
@DE00605 LTR   R0,R0                                               0616
         BP    @DL00605                                            0616
*       GEN(MODESET EXTKEY=ZERO);   /* RESET KEY TO ZERO     @Z40GSDT*/
         MODESET EXTKEY=ZERO
*     END;                          /*                       @Z40GSDT*/
*                                                                  0618
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR OCCURRED WHILE FIXING PAGES                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0619
*   ELSE                                                           0619
*     DO;                                                          0619
         B     @RC00601                                            0619
@RF00601 DS    0H                                                  0620
*       IOMPFERR=R15;               /* RETURN CODE IN IOMB           */
         STC   R15,IOMPFERR(,RIOMB)                                0620
*       R2=SIXTEEN;                 /* REASON CODE 16 IN REGISTER 2  */
         LA    R2,16                                               0621
*       GEN REFS(IOMSAVE0)          /* STORE REGISTERS IN IOMB       */
*           (STM   0,15,IOMSAVE0(RIOMB));                          0622
         STM   0,15,IOMSAVE0(RIOMB)
*       DO;                         /* ABEND(377) DUMP SYSTEM        */
*         RESPECIFY                                                0624
*          (GPR01F) RESTRICTED;                                    0624
*         GPR01F=((377)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19  */
         L     GPR01F,@CF03965                                     0625
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00094                                     0626
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0627
*         RESPECIFY                                                0628
*          (GPR01F) UNRESTRICTED;                                  0628
*       END;                        /* ABEND(377) DUMP SYSTEM PAGE 0629
*                                      FIX ERROR - 179 HEX ABEND     */
*     END;                                                         0630
*                                                                  0630
*/********************************************************************/
*/*             CREATE IDAL FROM VPL                                 */
*/********************************************************************/
*                                                                  0631
*BLDIDAL:                                                          0631
*   RESPECIFY                                                      0631
*    (RW2,                                                         0631
*     RW3) RSTD;                                                   0631
@RC00601 DS    0H                                                  0631
BLDIDAL  DS    0H                                                  0632
*   RESPECIFY                                                      0632
*    (PAGAD) BASED(R14);                                           0632
*   RESPECIFY                                                      0633
*    (IDAL) BASED(RW2);                                            0633
*   DO R0=IOMNBUF TO ONE BY-1;                                     0634
         LH    R0,IOMNBUF(,RIOMB)                                  0634
         N     R0,@CF03980                                         0634
         B     @DE00634                                            0634
@DL00634 DS    0H                                                  0635
*     R14=CPAVPL;                   /* POINTER TO VIRTUAL PAGE LIST  */
         L     R14,CPAVPL(,RCPA)                                   0635
*     RW2=CPAIDAL;                  /* POINTER TO IDAL               */
         L     RW2,CPAIDAL(,RCPA)                                  0636
*     IF(BUFCRRD=ON×BUFCMW=ON) THEN /* VALID REQUEST EXISTS IN BUFC  */
         TM    BUFCRRD(RBUFC),B'10100000'                          0637
         BZ    @RF00637                                            0637
*       DO R1=VPLSIZE TO ONE BY-1;                                 0638
         LH    R1,VPLSIZE(,RCPA)                                   0638
         N     R1,@CF03980                                         0638
         B     @DE00638                                            0638
@DL00638 DS    0H                                                  0639
*         R15=PAGAD;                /* BUFFER ADDRESS FROM VPL       */
         L     R15,PAGAD(,R14)                                     0639
*         IF R15^=0 THEN            /* IF NOT EMPTY VPL      @Z30SSLC*/
         LTR   R15,R15                                             0640
         BZ    @RF00640                                            0640
*           DO;                     /*                       @Z30SSLC*/
*             GEN SETS(RW3) REFS(R14) FLOWS(PAGEOUT);              0642
*                                                          /*@Z30SSLC*/
             LRA   RW3,0(R15)       CONVERT BUFFER ADDRESS TO REAL
             BNZ   PAGEOUT          ERROR IN LOCATING REAL ADDRESS
*             IDAL=RW3;             /* SET REAL ADDR IN IDAL @Z30SSLC*/
         ST    RW3,IDAL(,RW2)                                      0643
*           END;                    /*                       @Z30SSLC*/
*         R14=R14+FOUR;             /* POINT TO NEXT VPL ENTRY       */
@RF00640 LA    @10,4                                               0645
         ALR   R14,@10                                             0645
*         RW2=RW2+FOUR;             /* POINT TO NEXT IDAL ENTRY      */
         ALR   RW2,@10                                             0646
*       END;                                                       0647
         BCTR  R1,0                                                0647
@DE00638 LTR   R1,R1                                               0647
         BP    @DL00638                                            0647
*     RBUFC=BUFCNXT1;               /* POINTER TO NEXT BUFC          */
@RF00637 L     RBUFC,BUFCNXT1(,RBUFC)                              0648
*     RCPA=CPACPCHN;                /* POINTER TO NEXT CPA           */
         L     RCPA,CPACPCHN(,RCPA)                                0649
*   END;                                                           0650
         BCTR  R0,0                                                0650
@DE00634 LTR   R0,R0                                               0650
         BP    @DL00634                                            0650
*   RESPECIFY                                                      0651
*    (R14) UNRSTD;                                                 0651
*                                                                  0651
*/********************************************************************/
*/*      BRANCH TO SMF ROUTINE TO COUNT EXCP'S                       */
*/********************************************************************/
*                                                                  0652
*   RESPECIFY                                                      0652
*    (RW1) RSTD;                                                   0652
*   GEN REFS(IOMSAVE0)(STM   0,13,IOMSAVE0(RIOMB));/* SAVE REGS      */
*                                                                  0653
         STM   0,13,IOMSAVE0(RIOMB)
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT CATALOG AND CREATE MODE AND CALLER IN PROBLEM PROGRAM     */
*   /* STATE OR A NON-PRIVILEGED USER IN SUPERVISOR STATE    @ZA09130*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0654
*   IF^(AMBCREAT=OFF&(AMBCAT=ON×AMBSCRA=ON×AMBUCRA=ON))&/*   @ZA09130*/
*       (IOMCPRB=ON×IOSCKEY>=KEY8) THEN/*                    @ZA09130*/
         L     @14,IOMAMB(,RIOMB)                                  0654
         TM    AMBCREAT(@14),B'10000000'                           0654
         BNZ   @GL00016                                            0654
         TM    AMBCAT(@14),B'00011100'                             0654
         BNZ   @RF00654                                            0654
@GL00016 TM    IOMCPRB(RIOMB),B'01000000'                          0654
         BO    @RT00654                                            0654
         CLI   IOSCKEY(IOSBPTR),X'80'                              0654
         BL    @RF00654                                            0654
@RT00654 DS    0H                                                  0655
*     DO;                                                          0655
*                                                                  0655
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP REGISTERS FOR ENTRY TO SMF ROUTINE                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0656
*       R0=SRBPTCB;                 /* TCB ADDRESS IN REGISTER 0     */
         L     @14,IOSSRB(,IOSBPTR)                                0656
         L     R0,SRBPTCB(,@14)                                    0656
*       R1=ONE;                     /* SET INCREMENT TO ONE  @ZA04713*/
         LA    R1,1                                                0657
*       RW3=AMBDEBAD;               /* DEB ADDRESS IN REG 9  @Z40GSDT*/
*                                                                  0658
         L     @14,IOMAMB(,RIOMB)                                  0658
         L     RW3,AMBDEBAD-1(,@14)                                0658
         LA    RW3,0(,RW3)                                         0658
*       /*************************************************************/
*       /*                                                           */
*       /* DEB POINTER FOR EXTENT OF FIRST CHANNEL PROGRAM IN RW2    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0659
*       DO RW1=IOMNBUF TO ONE BY-1;                                0659
         LH    RW1,IOMNBUF(,RIOMB)                                 0659
         N     RW1,@CF03980                                        0659
         B     @DE00659                                            0659
@DL00659 DS    0H                                                  0660
*         IF BUFCMW=ON THEN         /* FIRST CP IS A WRITE REQUEST   */
         TM    BUFCMW(RBUFC),B'10000000'                           0660
         BNO   @RF00660                                            0660
*           DO;                                                    0661
*             RW2=ADDR(DEBBASND)+WRITEXT*LENGTH(DEBDASD);          0662
         LA    RW2,DEBBASND(,RW3)                                  0662
         SLR   @14,@14                                             0662
         IC    @14,WRITEXT(,RCPA)                                  0662
         SLA   @14,4                                               0662
         ALR   RW2,@14                                             0662
*             GO TO STOREUCB;       /* DEB EXTENT LOCATED            */
         B     STOREUCB                                            0663
*           END;                                                   0664
*         ELSE                      /* NO WRITE REQUEST IN THIS BUFC */
*           IF BUFCRRD=ON THEN      /* FIRST CP IS A READ REQUEST    */
@RF00660 TM    BUFCRRD(RBUFC),B'00100000'                          0665
         BNO   @RF00665                                            0665
*             DO;                                                  0666
*               RW2=ADDR(DEBBASND)+READEXT*LENGTH(DEBDASD);        0667
         LA    RW2,DEBBASND(,RW3)                                  0667
         SLR   @14,@14                                             0667
         IC    @14,READEXT(,RCPA)                                  0667
         SLA   @14,4                                               0667
         ALR   RW2,@14                                             0667
*               GO TO STOREUCB;     /* DEB EXTENT LOCATED            */
         B     STOREUCB                                            0668
*             END;                                                 0669
*         RBUFC=BUFCNXT1;           /* CHECK NEXT BUFC FOR VALID   0670
*                                      REQUEST                       */
@RF00665 L     RBUFC,BUFCNXT1(,RBUFC)                              0670
*         RCPA=CPACPCHN;            /* NEXT CPA IN CHAIN             */
         L     RCPA,CPACPCHN(,RCPA)                                0671
*       END;                                                       0672
*                                                                  0672
         BCTR  RW1,0                                               0672
@DE00659 LTR   RW1,RW1                                             0672
         BP    @DL00659                                            0672
*       /*************************************************************/
*       /*                                                           */
*       /* NO VALID REQUEST FOUND SO RETURN TO CALLER                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0673
*       IOMLOCK=OFF;                                               0673
         MVI   IOMLOCK(RIOMB),B'00000000'                          0673
*       GO TO EXIT;                 /* RETURN TO CALLER              */
         B     EXIT                                                0674
*STOREUCB:                          /* UCB BASED ON DEB EXTENT       */
*       RESPECIFY                                                  0675
*        (R6) RSTD;                                                0675
STOREUCB DS    0H                                                  0676
*       RW1=RW2->DEBUCBA;           /* UCB ADDRESS IN REGISTER 7     */
         L     RW1,DEBUCBA-1(,RW2)                                 0676
         LA    RW1,0(,RW1)                                         0676
*       RCPA=IOMAMB;                /* AMB ADDRESS IN REGISTER 4     */
         L     RCPA,IOMAMB(,RIOMB)                                 0677
*       R6=RIOMB;                   /* SAVE IOMB POINTER             */
         LR    R6,RIOMB                                            0678
*       RIOMB=RW3;                  /* DEB ADDRESS IN REGISTER 3     */
         LR    RIOMB,RW3                                           0679
*       CALL IEASMFEX;              /* BRANCH TO SMF                 */
         L     @15,@CV00141                                        0680
         BALR  @14,@15                                             0680
*       GEN REFS(IOMSAVE0)(LM   0,13,IOMSAVE0(R6));/* RESTORE REGS   */
         LM   0,13,IOMSAVE0(R6)
*     END;                                                         0682
*   RESPECIFY                                                      0683
*    (R1,                                                          0683
*     R6,                                                          0683
*     RW1,                                                         0683
*     RW2,                                                         0683
*     RW3) UNRSTD;                                                 0683
*                                                                  0683
@RF00654 DS    0H                                                  0684
*/********************************************************************/
*/*            BRANCH TO ABP                                         */
*/********************************************************************/
*                                                                  0684
*CALLABP:                                                          0684
*   RESPECIFY                                                      0684
*    (R1) RSTD;                                                    0684
CALLABP  DS    0H                                                  0685
*   R0=IOSSRB;                      /* SRB POINTER IN REGISTER 0     */
         L     R0,IOSSRB(,IOSBPTR)                                 0685
*   R1=IOSBPTR;                     /* IOSB POINTER IN REGISTER 1    */
         LR    R1,IOSBPTR                                          0686
*   CALL IDA121A2;                  /* BRANCH ENTRY TO ABP           */
*                                                                  0687
         L     @15,@CV00140                                        0687
         BALR  @14,@15                                             0687
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE BASE REGISTER ON RETURN                       @Z40TSDT*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0688
*   BASE11=IOMSAVEB;                /* RESTORE BASE REG      @Z40TSDT*/
         L     BASE11,IOMSAVEB(,RIOMB)                             0688
*   IF PLHSR=ON THEN                /* IF SET                @Z40GSDT*/
         L     @14,IOMPLH(,RIOMB)                                  0689
         TM    PLHSR(@14),B'00000001'                              0689
         BNO   @RF00689                                            0689
*     DO;                           /* SUSPEND THE RB/TCB    @Z40GSDT*/
*       GEN SETS(R0,R1,BASE11,IOSBPTR,R13,R14,R15) REFS(CVT,CVTSUSP)
*           (SUSPEND RB=CURRENT);   /* SUSPEND CURRENT RB    @Z40GSDT*/
         SUSPEND RB=CURRENT
*       BASE11=IOMSAVEB;            /* RESTORE THE BASE REG  @Z40GSDT*/
         L     BASE11,IOMSAVEB(,RIOMB)                             0692
*       IOMSR=ON;                   /* INDICATE RB SUSPENDED @Z40GSDT*/
         OI    IOMSR(RIOMB),B'00000001'                            0693
*       PLHSR=OFF;                  /* RESET PLH INDICATOR   @Z40GSDT*/
         L     @14,IOMPLH(,RIOMB)                                  0694
         NI    PLHSR(@14),B'11111110'                              0694
*       IOMSTCB=R0;                 /* SAVE THE TCB ADDRESS  @Z40GSDT*/
         ST    R0,IOMSTCB(,RIOMB)                                  0695
*       IOMSRBP=R1;                 /* SAVE THE RB ADDRESS   @Z40GSDT*/
         ST    R1,IOMSRBP(,RIOMB)                                  0696
*     END;                          /* END SUSPEND/RESUME    @Z40GSDT*/
*   ELSE                            /* NOT SUSPEND/RESUME    @Z40GSDT*/
*     IOMSR=OFF;                    /* RESET IOMB            @Z40GSDT*/
         B     @RC00689                                            0698
@RF00689 NI    IOMSR(RIOMB),B'11111110'                            0698
*   R15=ZERO;                       /* SET SUCCESSFUL RETURN CODE    */
@RC00689 SLR   R15,R15                                             0699
*   RESPECIFY                                                      0700
*    (R0,                                                          0700
*     R1) UNRSTD;                                                  0700
*                                                                  0700
*/********************************************************************/
*/*             RELEASE FRR AND RETURN                               */
*/********************************************************************/
*                                                                  0701
*   RESPECIFY                                                      0701
*    (RW1,                                                         0701
*     RW2,                                                         0701
*     RW3,                                                         0701
*     R14) RSTD;                                                   0701
*EXIT:                                                             0702
*   GEN SETS(RW1,RW2,RW3,FRRSCURR,FRRSELEN) REFS(PSACSTK,FRRS,FRRSEMP)
*       (SETFRR  D,WRKREGS=(RW2,RW3));                             0702
EXIT     SETFRR  D,WRKREGS=(RW2,RW3)
*   R14=IOMSAVEF;                   /* RESTORE RETURN REGISTER       */
         L     R14,IOMSAVEF(,RIOMB)                                0703
*   RESPECIFY                                                      0704
*    (RW1,                                                         0704
*     RW2,                                                         0704
*     RW3) UNRSTD;                                                 0704
*   RETURN;                                                        0705
         B     @EL00001                                            0705
*                                                                  0706
*/********************************************************************/
*/* ERRORS DUE TO PAGES NOT BEING AVAILABLE                          */
*/********************************************************************/
*                                                                  0706
*PAGEOUT:                                                          0706
*   IOMADERR=ON;                    /* ADDRESS ERROR INDICATOR ON    */
*                                                                  0706
PAGEOUT  OI    IOMADERR(RIOMB),B'00000100'                         0706
*   /*****************************************************************/
*   /*                                                               */
*   /* PREPARE REGISTERS FOR ENTRY TO PAGEFREE ROUTINE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0707
*   IF IOMPGFIX=ON THEN             /* PAGES FIXED BY I/O MGR        */
         TM    IOMPGFIX(RIOMB),B'00000010'                         0707
         BNO   @RF00707                                            0707
*     DO;                                                          0708
*       RESPECIFY                                                  0709
*        (R0,                                                      0709
*         R1) RSTD;                                                0709
*       RESPECIFY                                                  0710
*        (VSL) BASED(R1);                                          0710
*       R1=IOMVSL;                  /* POINTER TO VSL                */
         L     R1,IOMVSL(,RIOMB)                                   0711
*       VSLFREE=ON;                 /* CHANGE VSL - PAGEFREE ENTRY   */
*       VSLFIX=OFF;                                                0713
         OI    VSLFREE(R1),B'00100000'                             0713
         NI    VSLFIX(R1),B'10111111'                              0713
*       R0=ZERO;                    /* ZERO REGISTER 0               */
         SLR   R0,R0                                               0714
*       R1=R1×PAGEMASK;             /* HIGH BIT ON IN REGISTER 1     */
         O     R1,@CF00094                                         0715
*       RCPA=SRBPTCB;               /* REGISTER 4 NEEDS TCB PTR      */
         L     @10,IOSSRB(,IOSBPTR)                                0716
         L     RCPA,SRBPTCB(,@10)                                  0716
*       CALL CVTVPSIB;              /* CALL PAGEFREE         @Z40TSDT*/
         L     @10,CVTPTR                                          0717
         L     @15,CVTVPSIB(,@10)                                  0717
         BALR  @14,@15                                             0717
*       IOMPGFIX=OFF;                                              0718
         NI    IOMPGFIX(RIOMB),B'11111101'                         0718
*     END;                                                         0719
*   R2=TWENTY;                      /* REASON CODE 20 IN REG 2       */
@RF00707 LA    R2,20                                               0720
*   GEN REFS(IOMSAVE0)              /* STORE REGISTERS IN IOMB       */
*       (STM   0,15,IOMSAVE0(RIOMB));                              0721
         STM   0,15,IOMSAVE0(RIOMB)
*   DO;                             /* ABEND(377) DUMP SYSTEM        */
*     RESPECIFY                                                    0723
*      (GPR01F) RESTRICTED;                                        0723
*     GPR01F=((377)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19      */
         L     GPR01F,@CF03965                                     0724
*     GPR01F=GPR01F×'80000000'X;    /* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00094                                     0725
*     SVC(13);                      /* ISSUE ABEND SVC               */
         SVC   13                                                  0726
*     RESPECIFY                                                    0727
*      (GPR01F) UNRESTRICTED;                                      0727
*   END;                            /* ABEND(377) DUMP SYSTEM PAGE 0728
*                                      ERROR - 179 HEX ABEND         */
*                                                                  0729
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE EDB ENTRY FOR RBA INPUT - R0 CONTAINS THE RBA TO BE    */
*   /* LOCATED OUTPUT - BB IS USED AS A RETURN CODE IF BB=ZERO, RBA  */
*   /* IS CONVERTED IF BB=FOUR, EDB COULD NOT BE LOCATED             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0729
*CONVERT:                                                          0729
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0729
         B     @EL00001                                            0729
CONVERT  DS    0H                                                  0730
*   RESPECIFY                                                      0730
*    (R14,                                                         0730
*     R6) RESTRICTED;                                              0730
*   RESPECIFY                                                      0731
*    (IDAEDBHD) BASED(R6);                                         0731
*   R6=AMBEDB;                                                     0732
         L     @10,IOMAMB(,RIOMB)                                  0732
         L     R6,AMBEDB(,@10)                                     0732
*   CONBB=EDBNO;                    /* SAVE NBR OF EDB ENTRIES       */
         SLR   @10,@10                                             0733
         IC    @10,EDBNO(,R6)                                      0733
         STH   @10,CONBB(,RIOMB)                                   0733
*   CONCC=EDBLEN;                   /* SAVE EDB ENTRY LENGTH         */
         LH    @07,EDBLEN(,R6)                                     0734
         STH   @07,CONCC(,RIOMB)                                   0734
*   RESPECIFY                                                      0735
*    (IDAEDB) BASED(R6);                                           0735
*   R6=R6+LENGTH(IDAEDBHD);                                        0736
         AL    R6,@CF00058                                         0736
*   CPABLKSZ=ZERO;                                                 0737
         SLR   @07,@07                                             0737
         ST    @07,CPABLKSZ(,RCPA)                                 0737
*   DO R1=CONBB TO ONE BY-1;                                       0738
*                                                                  0738
         LR    R1,@10                                              0738
         B     @DE00738                                            0738
@DL00738 DS    0H                                                  0739
*     /***************************************************************/
*     /*                                                             */
*     /* TEST INPUT RBA AGAINST LOW AND HIGH RBA RANGE FOR EACH EDB  */
*     /* ENTRY TO FIND CORRECT ONE                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0739
*     IF R0=>EDBLORBA&R0=<EDBHIRBA THEN                            0739
         CL    R0,EDBLORBA(,R6)                                    0739
         BL    @RF00739                                            0739
         CL    R0,EDBHIRBA(,R6)                                    0739
         BH    @RF00739                                            0739
*       DO;                                                        0740
*                                                                  0740
*         /***********************************************************/
*         /*                                                         */
*         /* EDB FOUND - NOW SET UP RETURN                           */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0741
*         CONBB=ZERO;               /* BB SET TO ZERO                */
         SLR   @10,@10                                             0741
         STH   @10,CONBB(,RIOMB)                                   0741
*         CONM=EDBM;                /* EXTENT FROM EDB               */
         IC    @10,EDBM(,R6)                                       0742
         STC   @10,CONM(,RCPA)                                     0742
*         R6=EDBLPMBA;              /* LPMB PTR TO CHECK REPL BIT    */
         L     R6,EDBLPMBA(,R6)                                    0743
*         CPABLKSZ=LPMBLKSZ;        /* SAVE BLOCKSIZE IN CPA         */
         L     @10,LPMBLKSZ(,R6)                                   0744
         ST    @10,CPABLKSZ(,RCPA)                                 0744
*         GO TO ENDCNVRT;           /* PROCESSING ENDED              */
         B     ENDCNVRT                                            0745
*       END;                                                       0746
*     ELSE                          /* EDB ENTRY NOT YET FOUND       */
*       R6=R6+CONCC;                /* CHECK NEXT EDB ENTRY          */
@RF00739 LH    @10,CONCC(,RIOMB)                                   0747
         N     @10,@CF03980                                        0747
         ALR   R6,@10                                              0747
*   END;                                                           0748
         BCTR  R1,0                                                0748
@DE00738 LTR   R1,R1                                               0748
         BP    @DL00738                                            0748
*   CONBB=FOUR;                     /* SET ERROR - EDB NOT FOUND     */
         MVC   CONBB(2,RIOMB),@CH00069                             0749
*   RESPECIFY                                                      0750
*    (R0,                                                          0750
*     R1,                                                          0750
*     R6) UNRESTRICTED;                                            0750
*ENDCNVRT:                                                         0751
*   END CONVERT;                    /* RETURN TO CALLING LOCATION    */
@EL00002 DS    0H                                                  0751
@EF00002 DS    0H                                                  0751
@ER00002 BR    @14                                                 0751
*                                                                  0752
*/*                                                                  */
*/*       FUNCTIONAL RECOVERY ROUTINE FOR SIOD                       */
*/*                                                                  */
*                                                                  0752
*IDA121F1:                                                         0752
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0752
IDA121F1 DS    0H                                                  0753
*   DCL                                                            0753
*     IDFIELD CHAR(24) STATIC LOCAL INIT('IGC121  IGC121  IDA121F1');
*   RESPECIFY                                                      0754
*    (R0,                                                          0754
*     SDWAPTR,                                                     0754
*     R6,                                                          0754
*     RW1,                                                         0754
*     R13,                                                         0754
*     R14,                                                         0754
*     R15) RSTD;                                                   0754
*   R13=R0;                         /* PTR TO 200-BYTE WORK AREA     */
         LR    R13,R0                                              0755
*   RW1=SDWAPARM;                   /* PTR TO PARM FIELD FROM SDWA   */
         L     RW1,SDWAPARM(,SDWAPTR)                              0756
*   RESPECIFY                                                      0757
*     FRRAREA BASED(RW1);           /*                       @ZA33053*/
*   SDWADDR=SDWAPTR;                /* SAVE WORK AREA PTR    @ZA17494*/
         ST    SDWAPTR,SDWADDR(,RW1)                               0758
*   RIOMB=IOMBADR;                  /* RESTORE IOMB REG      @ZA20907*/
         L     RIOMB,IOMBADR(,RW1)                                 0759
*   BASE11=BASEREG;                 /* RESTORE BASE REG CONTENTS     */
         L     BASE11,BASEREG(,RW1)                                0760
*   RETADDR=R14;                    /* STORE RETURN ADDRESS          */
         ST    R14,RETADDR(,RW1)                                   0761
*   IOSBPTR=IOMIOSB;                /* ESTABLISH IOSB BASE           */
         L     IOSBPTR,IOMIOSB(,RIOMB)                             0762
*   R6=ADDR(MOVELIST)-ADDR(DUMPLIST)-ONE;/* LIST LENGTH IN R6        */
*                                                                  0763
         LA    R6,MOVELIST                                         0763
         LA    @10,DUMPLIST                                        0763
         SLR   R6,@10                                              0763
         BCTR  R6,0                                                0763
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE SDUMP LIST AND EXECUTE IT. REG 13 IS POINTED TO A SAVE   */
*   /* AREA AT THE START OF THE 200-BYTER WORK AREA AS REQUIRED FOR A*/
*   /* BRANCH ENTRY IN THE SDUMP MACRO. RCPA (R4) POINTS TO THE END  */
*   /* OF THE SAVE AREA WHERE SDUMP LIST FORM IS MOVED TO BE         */
*   /* EXECUTED. RBUFC (R5) CONTAINS THE ADDRESS SPACE ID. REGISTERS */
*   /* 14 AND 15 ARE USED FOR BRANCH. REGISTER 1 IS ALSO USED.       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0764
*   RCPA=R13+SEVENTY2;              /* POINTER TO AREA FOR SDUMP     */
         LA    RCPA,72                                             0764
         ALR   RCPA,R13                                            0764
*   RBUFC=ASCBASID;                 /* ADDR SPACE TO DUMP    @ZA20907*/
         L     @10,PSAAOLD                                         0765
         LH    RBUFC,ASCBASID(,@10)                                0765
         N     RBUFC,@CF03980                                      0765
*   GEN REFS(MOVELIST,R6,CVTSDMP,CVTMAP);                          0766
           EX      R6,MOVELIST      MOVE SDUMP LIST TO WORK AREA
           SDUMP   BRANCH=YES,ASID=(5),MF=(E,(4))  EXECUTE SDUMP
*   SDWAPTR=SDWADDR;                /* RESET SDWA PTR IN REG @ZA00144*/
         L     SDWAPTR,SDWADDR(,RW1)                               0767
*   IF SDWAFMID^=ZERO THEN          /* MEMORY NOT CURRENT            */
         LH    @10,SDWAFMID(,SDWAPTR)                              0768
         N     @10,@CF03980                                        0768
         LTR   @10,@10                                             0768
         BNZ   @RT00768                                            0768
*     GO TO FREXIT;                 /* BYPASS PAGEFREE PROCESSING    */
*                                                                  0769
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE PAGES FIXED IN SIOD                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0770
*   IF IOMPGFIX=ON&                 /*                       @ZA26357*/
*       IOMBVAL=ON THEN             /* IOMBADR IS VALID      @ZA26357*/
         TM    IOMPGFIX(RIOMB),B'00000010'                         0770
         BNO   @RF00770                                            0770
         TM    IOMBVAL(RW1),B'10000000'                            0770
         BNO   @RF00770                                            0770
*     DO;                                                          0771
*       R1=IOMVSL;                  /* PTR TO VIRTUAL SUBAREA LIST   */
         L     R1,IOMVSL(,RIOMB)                                   0772
*       VSLFREE=ON;                 /* CHANGE VSL - PAGEFREE ENTRY   */
*       VSLFIX=OFF;                                                0774
         OI    VSLFREE(R1),B'00100000'                             0774
         NI    VSLFIX(R1),B'10111111'                              0774
*       R0=ZERO;                    /* ZERO REGISTER 0               */
         SLR   R0,R0                                               0775
*       R1=R1×PAGEMASK;             /* HIGH BIT ON IN REGISTER 1     */
         O     R1,@CF00094                                         0776
*       RCPA=ZERO;                  /* NO ACCNTING           @Z30SSLP*/
         SLR   RCPA,RCPA                                           0777
*       CALL CVTVPSIB;              /* CALL PAGEFREE         @Z40TSDT*/
         L     @10,CVTPTR                                          0778
         L     @15,CVTVPSIB(,@10)                                  0778
         BALR  @14,@15                                             0778
*       IOMPGFIX=OFF;               /* PAGES FREED                   */
         NI    IOMPGFIX(RIOMB),B'11111101'                         0779
*       SDWAPTR=SDWADDR;            /* RESET SDWA PTR IN REG @ZA00144*/
         L     SDWAPTR,SDWADDR(,RW1)                               0780
*     END;                                                         0781
*FREXIT:                                                           0782
*                                                                  0782
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE SETRP MACRO TO RELEASE THE LOCAL LOCK                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0782
*   DO;                             /* SETRP RECORD(YES)RECPARM(IDFIE
*                                      LD)RC(0)FRELOCK(LOCAL)        */
@RF00770 DS    0H                                                  0782
FREXIT   DS    0H                                                  0783
*     RESPECIFY                                                    0783
*      (GPR00P,                                                    0783
*       GPR01P,                                                    0783
*       GPR14P,                                                    0783
*       GPR15P) RSTD;                                              0783
*     GPR01P->SDWARCDE=0;           /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0784
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0785
*     GPR15P=ADDR(IDFIELD);         /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,IDFIELD                                      0786
*     GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD PARAMETERS */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0787
*     GPR01P->SDWAACF4=GPR01P->SDWAACF4×'00000001'B;/* INITIALIZE  0788
*                                      LOCK FLAGS                    */
         OI    SDWAACF4(GPR01P),B'00000001'                        0788
*     RESPECIFY                                                    0789
*      (GPR00P,                                                    0789
*       GPR01P,                                                    0789
*       GPR14P,                                                    0789
*       GPR15P) UNRSTD;                                            0789
*   END;                                                           0790
*   R14=RETADDR;                    /* RESTORE RETURN ADDRESS        */
         L     R14,RETADDR(,RW1)                                   0791
*   END IDA121F1;                                                  0792
@EL00003 DS    0H                                                  0792
@EF00003 DS    0H                                                  0792
@ER00003 BR    @14                                                 0792
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1),                                     0793
*     GPR00P PTR(31) REG(0),                                       0793
*     GPR01P PTR(31) REG(1),                                       0793
*     GPR14P PTR(31) REG(14),                                      0793
*     GPR15P PTR(31) REG(15);                                      0793
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0794
*     I031F FIXED(31) BASED,                                       0794
*     I031P PTR(31) BASED,                                         0794
*     I015F FIXED(15) BASED,                                       0794
*     I015P PTR(15) BASED,                                         0794
*     I008P PTR(8) BASED,                                          0794
*     I001C CHAR(1) BASED;          /* DECLARES FOR PLS MACROS       */
*   END IGC121                                                     0795
*                                                                  0795
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEZABP  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMBXN)                                       */
*/*%INCLUDE SYSLIB  (IDAAMBL )                                       */
*/*%INCLUDE SYSLIB  (IDAAMDSB)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDACPA  )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IDAEDB  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IDAIOMB )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHAIQE  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IDALPMB )                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*@INCLUDE SYSLIB  (IDAVAT  )                                       */
*                                                                  0795
*       ;                                                          0795
@DATA    DS    0H
@CH00053 DC    H'1'
@SX03985 XC    CORE(0,RW2),CORE(RW2)
@DATD    DSECT
         DS    0F
IGC121   CSECT
         DS    0F
@CF00069 DC    F'4'
@CH00069 EQU   @CF00069+2
@CF00058 DC    F'8'
@CF00088 DC    F'2048'
@CF03965 DC    F'1544192'
@CF03967 DC    F'-2048'
@CF03966 DC    F'-2047'
@CF00094 DC    XL4'80000000'
@CF03980 DC    XL4'0000FFFF'
@CF00092 DC    XL4'80'
@CF00096 DC    XL4'F0'
@DATD    DSECT
         DS    0D
IGC121   CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00140 DC    V(IDA121A2)
@CV00141 DC    V(IEASMFEX)
@CV03897 DC    V(IDA019SB)
         DS    0D
@CB00100 DC    X'C00C'
IDFIELD  DC    CL24'IGC121  IGC121  IDA121F1'
IGC121   CSECT
DUMPLIST SDUMP HDR='ABP:IGC121 - ABEND FROM SIOD FRR',MF=L,            X
               SDATA=(SQA,PSA,NUC,RGN,TRT,CSA)
MOVELIST MVC   0(0,4),DUMPLIST
IGC121   CSECT
*                                                          /*@Z30SSLC*/
PATCH DC  8D'0'                        PATCH AREA            @Z30SSLC
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGC121   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
SDWAPTR  EQU   @01
R2       EQU   @02
RIOMB    EQU   @03
R4       EQU   @04
RCPA     EQU   @04
RBUFC    EQU   @05
R6       EQU   @06
RW1      EQU   @07
RW2      EQU   @08
RW3      EQU   @09
RW4      EQU   @10
BASE11   EQU   @11
IOSBPTR  EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR01F   EQU   @01
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CORE     EQU   0
IDAL     EQU   0
PAGAD    EQU   0
DATAADDR EQU   0
VSL      EQU   0
VSLSTRT  EQU   VSL
VSLFLAG1 EQU   VSLSTRT
VSLFIX   EQU   VSLFLAG1
VSLFREE  EQU   VSLFLAG1
VSLEND   EQU   VSL+4
VSLFLAG2 EQU   VSLEND
VSLHIGH  EQU   VSLFLAG2
FRRAREA  EQU   0
IOMBADR  EQU   FRRAREA
BASEREG  EQU   FRRAREA+4
SDWADDR  EQU   FRRAREA+8
RETADDR  EQU   FRRAREA+12
@NM00007 EQU   FRRAREA+16
IOMBVAL  EQU   @NM00007
IEZABP   EQU   0
IDAAMB   EQU   0
AMBBUFC  EQU   IDAAMB+8
AMBDSB   EQU   IDAAMB+20
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBCREAT EQU   AMBFLG1
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBIOMB  EQU   AMBIOBAD
AMBINFL  EQU   IDAAMB+42
AMBCAT   EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBDEBPT EQU   IDAAMB+44
AMBDEBAD EQU   AMBDEBPT+1
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEDB   EQU   IDAAMB+52
AMBEOVPT EQU   IDAAMB+56
AMBAMBXN EQU   AMBEOVPT
AMBPAMBL EQU   IDAAMB+76
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
AMBLSR   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBCPA   EQU   IDAAMB+92
IDAAMBXN EQU   0
AMBXEOV  EQU   IDAAMBXN
AMBXRSC  EQU   AMBXEOV+4
AMBXCSWD EQU   IDAAMBXN+16
IDAIOMBX EQU   0
IOMXFLGS EQU   IDAIOMBX+1
IOMXPDET EQU   IDAIOMBX+4
IOMXRECB EQU   IDAIOMBX+20
IOMXECB  EQU   IOMXRECB
IOMXRSLT EQU   IOMXECB
IDAAMBL  EQU   0
AMBLEOV  EQU   IDAAMBL+12
AMBLEFLG EQU   AMBLEOV
AMBLCOMP EQU   AMBLEOV+1
AMBLDDNM EQU   IDAAMBL+16
AMBLIDF  EQU   AMBLDDNM
AMBLQ    EQU   AMBLIDF+7
AMBLVC   EQU   IDAAMBL+28
AMBLENO  EQU   AMBLVC+1
AMBLTYPE EQU   IDAAMBL+30
AMBLFIX  EQU   AMBLTYPE
AMBLQ2   EQU   IDAAMBL+31
AMBLSHAR EQU   IDAAMBL+33
AMBLFLG1 EQU   IDAAMBL+35
AMBLVVIC EQU   AMBLFLG1
AMBLFLG2 EQU   IDAAMBL+36
AMBLDTA  EQU   IDAAMBL+52
AMBLIX   EQU   IDAAMBL+56
IDAAMDSB EQU   0
AMDATTR  EQU   IDAAMDSB+1
AMDNEST  EQU   IDAAMDSB+4
AMDCINV  EQU   IDAAMDSB+20
AMDHLRBA EQU   IDAAMDSB+28
AMDSSRBA EQU   IDAAMDSB+32
AMDATTR3 EQU   IDAAMDSB+40
AMDSTAT  EQU   IDAAMDSB+48
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
IDABUFDR EQU   0
BUFDRPFB EQU   IDABUFDR+4
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCEPT  EQU   BUFCFLG1
BUFCIOFL EQU   IDABUFC+2
BUFCMW   EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCFIX  EQU   BUFCIOFL
BUFCFLG2 EQU   IDABUFC+3
BUFCPLH  EQU   IDABUFC+4
BUFCDDDD EQU   IDABUFC+8
BUFCORBA EQU   IDABUFC+12
BUFCCPA  EQU   IDABUFC+16
BUFCBAD  EQU   IDABUFC+20
BUFCNXT1 EQU   IDABUFC+24
BUFCINV  EQU   IDABUFC+28
IDACPA   EQU   0
CPALEN   EQU   IDACPA+2
CPAWPHAD EQU   IDACPA+36
CPAWSEEK EQU   CPAWPHAD+1
CPARPHAD EQU   IDACPA+52
CPARSEEK EQU   CPARPHAD+1
CPAIDAL  EQU   IDACPA+60
CPAVPL   EQU   IDACPA+64
CPAWORK1 EQU   IDACPA+68
CPABLKSZ EQU   IDACPA+76
CPABCINV EQU   IDACPA+80
CPASTAT1 EQU   IDACPA+83
CPAVPLV  EQU   CPASTAT1
CPAFLAGS EQU   IDACPA+84
CPAFLAG1 EQU   CPAFLAGS
CPAFLAG2 EQU   CPAFLAGS+1
CPAWREPL EQU   CPAFLAG2
CPARREPL EQU   CPAFLAG2
CPANXT1  EQU   IDACPA+88
CPACPCHN EQU   IDACPA+92
CPACCW   EQU   0
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBUCBA  EQU   DEBUCBAD+1
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
IDAEDBHD EQU   0
EDBNO    EQU   IDAEDBHD+1
EDBLEN   EQU   IDAEDBHD+2
IDAEDB   EQU   0
EDBFLG1  EQU   IDAEDB+2
EDBM     EQU   IDAEDB+3
EDBLPMBA EQU   IDAEDB+4
EDBLORBA EQU   IDAEDB+12
EDBHIRBA EQU   IDAEDB+16
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
IDAIOMB  EQU   0
IOMBUFC  EQU   IDAIOMB+4
IOMCPA   EQU   IDAIOMB+8
IOMPLH   EQU   IDAIOMB+12
IOMAMB   EQU   IDAIOMB+16
IOMIQE   EQU   IDAIOMB+20
IOMVSL   EQU   IDAIOMB+28
IOMPGAD  EQU   IDAIOMB+32
IOMIOSB  EQU   IDAIOMB+36
IOMFLAGS EQU   IDAIOMB+40
IOMFL    EQU   IOMFLAGS
IOMAPEND EQU   IOMFL
IOMCBERR EQU   IOMFL
IOMADERR EQU   IOMFL
IOMPGFIX EQU   IOMFL
IOMCPRB  EQU   IOMFL+1
IOMSTIND EQU   IOMFLAGS+2
IOMEOVXC EQU   IOMSTIND
IOMSR    EQU   IOMSTIND
IOMCKEY  EQU   IDAIOMB+43
IOMPFERR EQU   IDAIOMB+44
IOMLOCK  EQU   IDAIOMB+45
IOMNBUF  EQU   IDAIOMB+48
IOMNSEG  EQU   IDAIOMB+50
IOMSAVER EQU   IDAIOMB+52
IOMSAVE0 EQU   IOMSAVER
IOMSAVE1 EQU   IOMSAVER+4
IOMSAVE3 EQU   IOMSAVER+12
IOMSAVE4 EQU   IOMSAVER+16
IOMSAVEB EQU   IOMSAVER+44
IOMSAVEF EQU   IOMSAVER+60
IOMNXT1  EQU   IDAIOMB+116
IOMSRBP  EQU   IDAIOMB+124
IOMSTCB  EQU   IDAIOMB+128
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSASID  EQU   IOSB+6
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00055 EQU   IOSB+20
IOSCSW   EQU   @NM00055+1
IOSTATUS EQU   IOSCSW+3
IOSSRB   EQU   IOSB+28
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
IQESECT  EQU   0
IQELNK   EQU   IQESECT
IQEIRB   EQU   IQESECT+8
IQEFLAGS EQU   IQEIRB
IQETCB   EQU   IQESECT+12
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBSHR  EQU   JSCBSEC1+8
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
IDALPMB  EQU   0
LPMBFLGS EQU   IDALPMB+1
LPMREPL  EQU   LPMBFLGS
LPMBLKSZ EQU   IDALPMB+12
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHSR    EQU   PLHFLG1
PLHFLG2  EQU   IDAPLH+3
PLHIWAIT EQU   PLHFLG2
PLHEFLGS EQU   IDAPLH+4
PLHFLG3  EQU   IDAPLH+6
PLHAFLGS EQU   IDAPLH+7
PLHVAMB  EQU   PLHAFLGS
PLHCRPL  EQU   IDAPLH+20
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHJCODE EQU   IDAPLH+40
PLHEOVR  EQU   IDAPLH+42
PLHRSCS  EQU   IDAPLH+43
PLHDIOB  EQU   IDAPLH+76
PLHAMB   EQU   IDAPLH+108
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHKEYPT EQU   IDAPLH+248
PLHTMRPL EQU   IDAPLH+265
PLHEND   EQU   IDAPLH+280
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00123 EQU   RBSECT+10
@NM00124 EQU   @NM00123
RBTRSVRB EQU   @NM00124
@NM00126 EQU   @NM00123+1
RBETXR   EQU   @NM00126
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00133 EQU   RBSECT+28
@NM00134 EQU   @NM00133
IRBEND   EQU   RBSECT+96
@NM00137 EQU   RBSECT+96
RBRSV138 EQU   @NM00137+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAFMID EQU   SDWA+236
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBPASID EQU   SRBFLC+2
SRBPTCB  EQU   SRBFLC+4
SRBPARM  EQU   SRB+28
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IDAVAT   EQU   0
VATHDR   EQU   IDAVAT
VATNEXT  EQU   IDAVAT+4
VATVSRT  EQU   IDAVAT+8
VATVC    EQU   IDAVAT+20
VATAMBL  EQU   IDAVAT+28
I256C    EQU   0
IQEEND   EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
CONM     EQU   CPAWORK1
WRITEXT  EQU   CPAWPHAD
READEXT  EQU   CPARPHAD
CVTPTR   EQU   FLCCVT
CONVOUT  EQU   IOMSAVE1
CONBB    EQU   CONVOUT
CONCC    EQU   CONVOUT+2
VPLSIZE  EQU   CPAWORK1
@NM00004 EQU   RBOPSW
RBPSWKEY EQU   @NM00004+1
RBPPSB   EQU   RBPSWKEY
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSDMP  EQU   CVTS01+232
CVTIOBP  EQU   CVTS01+360
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTVPSIB EQU   CVTS01+456
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTSUSP  EQU   CVTS01+692
BUFCRSC1 EQU   BUFCAVL
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00138 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00082 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00071 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00070 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00060 EQU   IOSPCISC+4
@NM00059 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00058 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
@NM00006 EQU   RBPSWKEY
@NM00005 EQU   @NM00004
VATNAE   EQU   IDAVAT+24
@NM00196 EQU   IDAVAT+22
VATENO   EQU   VATVC+1
VATVRT   EQU   VATVC
VATPAMBL EQU   IDAVAT+16
VATVPTR  EQU   VATVSRT+4
VATVUSE  EQU   VATVSRT
VATLEN   EQU   VATHDR+2
@NM00195 EQU   VATHDR+1
VATID    EQU   VATHDR
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00194 EQU   CVTFIX+248
@NM00193 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
@NM00192 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00191 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBSTAFX EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00190 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00189 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00188 EQU   SRB+40
@NM00187 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBCPAFF EQU   SRBFLC
SRBFLNK  EQU   SRB+4
SRBID    EQU   SRB
@NM00186 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00185 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00184 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00183 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00182 EQU   SDWADDAT+3
@NM00181 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00180 EQU   SDWADDAT+1
@NM00179 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00178 EQU   SDWADUMP+2
@NM00177 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00176 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00175 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00174 EQU   SDWAACF3
@NM00173 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00172 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00171 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00170 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00169 EQU   SDWA+239
@NM00168 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
@NM00167 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00166 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00165 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00164 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00163 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00162 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00161 EQU   SDWAINC2
@NM00160 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00159 EQU   SDWAILC2
@NM00158 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00157 EQU   SDWANXT2
@NM00156 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00155 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00154 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00153 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00152 EQU   SDWAINC1
@NM00151 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00150 EQU   SDWAILC1
@NM00149 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00148 EQU   SDWANXT1
@NM00147 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00146 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00145 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00144 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00143 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00142 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00141 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00140 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00139 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00137+8
PRBEND   EQU   @NM00137+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00137+6
RBRSV136 EQU   @NM00137+4
RBRSV135 EQU   @NM00137
@NM00136 EQU   RBSECT+32
@NM00135 EQU   @NM00133+1
RBSCF    EQU   @NM00134
RBPGMQ1  EQU   RBPGMQ+1
@NM00132 EQU   RBPGMQ
@NM00131 EQU   RBSECT+16
@NM00130 EQU   @NM00126
@NM00129 EQU   @NM00126
RBIQETP  EQU   @NM00126
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00126
@NM00128 EQU   @NM00126
@NM00127 EQU   @NM00126
RBPMSVRB EQU   @NM00124
RBATNXIT EQU   @NM00124
@NM00125 EQU   @NM00124
RBWAITP  EQU   @NM00124
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00124
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00122 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00121 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00120 EQU   RBOPSWB2
@NM00119 EQU   XRBPSW
@NM00118 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00117 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00116 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00115 EQU   XSTAB1
@NM00114 EQU   RBBASIC+8
@NM00113 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00112 EQU   RBPRFX
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00087 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00086 EQU   RPLRBAR+3
@NM00085 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00084 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
@NM00083 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00081 EQU   IDAPLH+266
@NM00080 EQU   PLHTMRPL
PLHTMIOB EQU   PLHTMRPL
PLHTMINX EQU   PLHTMRPL
PLHTMDTA EQU   PLHTMRPL
PLHTMDIW EQU   PLHTMRPL
PLHTMBUF EQU   PLHTMRPL
PLHTERM  EQU   PLHTMRPL
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSLRBA EQU   IDAPLH+244
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00079 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHISPLP EQU   IDAPLH+196
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00078 EQU   IDAPLH+172
@NM00077 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHCHAIN EQU   IDAPLH+112
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00076 EQU   PLHRSCS
PLHDBPER EQU   PLHRSCS
PLHDSERR EQU   PLHRSCS
PLHASYER EQU   PLHRSCS
@NM00075 EQU   PLHRSCS
PLHBUFHD EQU   PLHRSCS
PLHINEOV EQU   PLHRSCS
PLHRCODE EQU   IDAPLH+41
PLHUCODE EQU   PLHJCODE
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHUPECB EQU   PLHJORBA
PLHDSIDA EQU   IDAPLH+24
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHSLVLD EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00074 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
PLHDRPND EQU   PLHFLG1
PLHASYRQ EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
LPMBSST  EQU   IDALPMB+28
LPMBEXT  EQU   IDALPMB+24
@NM00073 EQU   IDALPMB+22
LPMBLKTR EQU   IDALPMB+20
LPMTPC   EQU   IDALPMB+18
LPMTRKAU EQU   IDALPMB+16
LPMBPTRK EQU   IDALPMB+8
LPMAUSZ  EQU   IDALPMB+4
LPMBLEN  EQU   IDALPMB+2
@NM00072 EQU   LPMBFLGS
LPMBSSTH EQU   LPMBFLGS
LPMBTOFL EQU   LPMBFLGS
LPMSS    EQU   LPMBFLGS
LPMBRPS  EQU   LPMBFLGS
LPMBID   EQU   IDALPMB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00069 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00068 EQU   IEZJSCB
IQEOUTLM EQU   IQESECT+20
IQEDCB   EQU   IQESECT+16
IQETCBA  EQU   IQETCB+1
IQESTAT2 EQU   IQETCB
IQEIRBA  EQU   IQEIRB+1
@NM00067 EQU   IQEFLAGS
@NM00066 EQU   IQEFLAGS
@NM00065 EQU   IQEFLAGS
@NM00064 EQU   IQEFLAGS
@NM00063 EQU   IQEFLAGS
@NM00062 EQU   IQEFLAGS
@NM00061 EQU   IQEFLAGS
IQEPURGE EQU   IQEFLAGS
IQEPARAM EQU   IQESECT+4
IQELNKA  EQU   IQELNK+1
IQESTAT1 EQU   IQELNK
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00057 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00056 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00055
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSIGP   EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00054 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSNOTRS EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
IOMUFLD  EQU   IDAIOMB+120
IOMSAVEE EQU   IOMSAVER+56
IOMSAVED EQU   IOMSAVER+52
IOMSAVEC EQU   IOMSAVER+48
IOMSAVEA EQU   IOMSAVER+40
IOMSAVE9 EQU   IOMSAVER+36
IOMSAVE8 EQU   IOMSAVER+32
IOMSAVE7 EQU   IOMSAVER+28
IOMSAVE6 EQU   IOMSAVER+24
IOMSAVE5 EQU   IOMSAVER+20
IOMSAVE2 EQU   IOMSAVER+8
IOMNMOD  EQU   IDAIOMB+46
IOMSRBM  EQU   IOMSTIND
IOMSLOC  EQU   IOMSTIND
IOMLLOCK EQU   IOMSTIND
IOMEOVTS EQU   IOMSTIND
IOMEOVW  EQU   IOMSTIND
IOMAMUSE EQU   IOMSTIND
@NM00053 EQU   IOMFL+1
IOMIRBSW EQU   IOMFL+1
IOMEEXIT EQU   IOMFL+1
@NM00052 EQU   IOMFL+1
IOMDDR   EQU   IOMFL+1
IOMCSW   EQU   IOMFL
@NM00051 EQU   IOMFL
IOMPURGE EQU   IOMFL
IOMAE    EQU   IOMAPEND
IOMNE    EQU   IOMAPEND
IOMECBPT EQU   IDAIOMB+24
IOMBID   EQU   IDAIOMB
@NM00050 EQU   FRRSFLGS+1
@NM00049 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
EDBTKBAL EQU   IDAEDB+20
EDBSTTRK EQU   IDAEDB+8
@NM00048 EQU   EDBFLG1
EDBPSDS  EQU   EDBFLG1
EDBTOFLW EQU   EDBFLG1
EDBLKR   EQU   EDBFLG1
@NM00047 EQU   IDAEDB
EDBLPMBC EQU   IDAEDBHD+4
EDBID    EQU   IDAEDBHD
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00046 EQU   DEBACS08+12
@NM00045 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00044 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00043 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
CPACCWTC EQU   CPACCW+24
CPACCWSI EQU   CPACCW+16
CPACCWSS EQU   CPACCW+8
CPACCWSK EQU   CPACCW
CPAWSECT EQU   IDACPA+87
CPARSECT EQU   IDACPA+86
CPATKOFL EQU   CPAFLAG2
CPAPFENT EQU   CPAFLAG2
CPAXLRA  EQU   CPAFLAG2
@NM00042 EQU   CPAFLAG1
CPACHNED EQU   CPAFLAG1
CPARRPS  EQU   CPAFLAG1
CPAWRPS  EQU   CPAFLAG1
CPARV    EQU   CPAFLAG1
CPAWCV   EQU   CPAFLAG1
CPAWV    EQU   CPAFLAG1
CPASSECT EQU   IDACPA+82
CPAWORK2 EQU   IDACPA+72
@NM00041 EQU   CPARPHAD+7
CPARSID  EQU   CPARSEEK+2
CPARBB   EQU   CPARSEEK
@NM00040 EQU   CPARPHAD
CPAFWCNT EQU   IDACPA+48
CPAWSID  EQU   IDACPA+44
CPAWPHR  EQU   CPAWPHAD+7
CPAWCHR  EQU   CPAWSEEK+2
CPAWBB   EQU   CPAWSEEK
@NM00039 EQU   CPAWPHAD
CPARCPE  EQU   IDACPA+32
CPARCPS  EQU   IDACPA+28
CPARREAL EQU   IDACPA+24
CPAWCKE  EQU   IDACPA+20
CPAWCKS  EQU   IDACPA+16
CPAWCPE  EQU   IDACPA+12
CPAWCPS  EQU   IDACPA+8
CPAWREAL EQU   IDACPA+4
@NM00038 EQU   IDACPA+1
CPAID    EQU   IDACPA
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCWLEN EQU   BUFCINV
BUFCAMB  EQU   BUFCPLH
@NM00037 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00036 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00035 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
AMDEXCP  EQU   AMDSTAT+44
AMDNCAS  EQU   AMDSTAT+40
AMDNCIS  EQU   AMDSTAT+36
AMDASPA  EQU   AMDSTAT+32
AMDRETR  EQU   AMDSTAT+28
AMDUPR   EQU   AMDSTAT+24
AMDIREC  EQU   AMDSTAT+20
AMDDELR  EQU   AMDSTAT+16
AMDNLR   EQU   AMDSTAT+12
AMDNEXT  EQU   AMDSTAT+10
AMDNIL   EQU   AMDSTAT+8
AMDSTSP  EQU   AMDSTAT
@NM00034 EQU   IDAAMDSB+41
@NM00033 EQU   AMDATTR3
AMDLM    EQU   AMDATTR3
AMDWAIT  EQU   AMDATTR3
AMDBIND  EQU   AMDATTR3
AMDFAULT EQU   AMDATTR3
AMDUNQ   EQU   AMDATTR3
AMDPARDB EQU   IDAAMDSB+36
AMDMAXRR EQU   AMDSSRBA
AMDNSLOT EQU   AMDHLRBA
AMDLRECL EQU   IDAAMDSB+24
AMDFSCI  EQU   IDAAMDSB+16
AMDFSCA  EQU   IDAAMDSB+14
AMDCIPCA EQU   IDAAMDSB+12
AMDPCTCI EQU   IDAAMDSB+11
AMDPCTCA EQU   IDAAMDSB+10
AMDKEYLN EQU   IDAAMDSB+8
AMDRKP   EQU   IDAAMDSB+6
AMDAXRKP EQU   AMDNEST
AMDLEN   EQU   IDAAMDSB+2
AMDSPAN  EQU   AMDATTR
AMDRRDS  EQU   AMDATTR
AMDRANGE EQU   AMDATTR
AMDORDER EQU   AMDATTR
AMDREPL  EQU   AMDATTR
AMDSDT   EQU   AMDATTR
AMDWCK   EQU   AMDATTR
AMDDST   EQU   AMDATTR
AMDSBID  EQU   IDAAMDSB
AMBLCMB  EQU   IDAAMBL+64
AMBLBIB  EQU   IDAAMBL+60
AMBLMIDS EQU   IDAAMBL+42
AMBLNIDS EQU   IDAAMBL+41
@NM00032 EQU   IDAAMBL+40
AMBLNUM  EQU   IDAAMBL+38
AMBLNST  EQU   IDAAMBL+37
@NM00031 EQU   AMBLFLG2
AMBLSTAG EQU   AMBLFLG2
@NM00030 EQU   AMBLFLG2
AMBLDUMY EQU   AMBLFLG1
AMBLCAT  EQU   AMBLFLG1
AMBLUCRA EQU   AMBLFLG1
AMBLSCRA EQU   AMBLFLG1
AMBLSDS  EQU   AMBLVVIC
AMBLUPD  EQU   AMBLFLG1
AMBLCINV EQU   AMBLFLG1
AMBLFULL EQU   AMBLFLG1
AMBLLEN  EQU   IDAAMBL+34
@NM00029 EQU   AMBLSHAR
AMBLWRIT EQU   AMBLSHAR
AMBLCATO EQU   AMBLSHAR
AMBLPRIM EQU   AMBLSHAR
AMBLID   EQU   IDAAMBL+32
@NM00028 EQU   AMBLQ2
AMBLCBIC EQU   AMBLQ2
@NM00027 EQU   AMBLTYPE
AMBLBASE EQU   AMBLTYPE
AMBLAIX  EQU   AMBLTYPE
AMBLUPGR EQU   AMBLTYPE
AMBLPATH EQU   AMBLTYPE
AMBLVRT  EQU   AMBLVC
AMBLXPT  EQU   IDAAMBL+24
AMBLDFR  EQU   AMBLQ
AMBLESDS EQU   AMBLQ
AMBLKSDS EQU   AMBLQ
AMBLUBF  EQU   AMBLQ
AMBLFSTP EQU   AMBLQ
AMBLLSR  EQU   AMBLQ
AMBLGSR  EQU   AMBLQ
AMBLDDC  EQU   AMBLQ
AMBLDCI  EQU   AMBLIDF+4
AMBLCACB EQU   AMBLIDF
@NM00026 EQU   AMBLEOV+2
AMBLESET EQU   AMBLEFLG
AMBLWAIT EQU   AMBLEFLG
AMBLACB  EQU   IDAAMBL+8
AMBLSCHN EQU   IDAAMBL+4
AMBLPCHN EQU   IDAAMBL
IOMXRBPT EQU   IOMXECB+1
IOMXIOCC EQU   IOMXRSLT
IOMXPOST EQU   IOMXRSLT
IOMXWAIT EQU   IOMXECB
IOMXR14  EQU   IDAIOMBX+16
IOMXRPL  EQU   IOMXPDET+8
IOMXR13S EQU   IOMXPDET+4
@NM00025 EQU   IOMXPDET+2
IOMXBFLG EQU   IOMXPDET
@NM00024 EQU   IDAIOMBX+2
@NM00023 EQU   IOMXFLGS
IOMXSCAN EQU   IOMXFLGS
IOMXEOVW EQU   IOMXFLGS
IOMXUSE  EQU   IOMXFLGS
IOMXLOCK EQU   IDAIOMBX
AMBXBM2S EQU   IDAAMBXN+20
AMBXRDCT EQU   AMBXCSWD+2
@NM00022 EQU   AMBXCSWD
AMBXECB  EQU   IDAAMBXN+12
AMBXASCB EQU   IDAAMBXN+8
@NM00021 EQU   AMBXEOV+7
AMBXEVRC EQU   AMBXEOV+6
AMBXEOVR EQU   AMBXEOV+5
AMBXEVPT EQU   AMBXEOV
AMBTRACE EQU   IDAAMB+120
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00020 EQU   AMBCSWD1+1
@NM00019 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
@NM00018 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPIXP  EQU   IDAAMB+72
@NM00017 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00016 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00015 EQU   AMBOFLGS
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBSDS   EQU   AMBINFL
AMBUPX   EQU   AMBINFL
@NM00014 EQU   AMBINFL
@NM00013 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00012 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
@NM00011 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00010 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
@NM00009 EQU   AMBFLG0
AMBSWSP  EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
ABPAE    EQU   IEZABP+16
ABPNE    EQU   IEZABP+12
ABPABP   EQU   IEZABP+8
ABPSIOD  EQU   IEZABP+4
ABPBR14  EQU   IEZABP+2
ABPLEN   EQU   IEZABP+1
ABPID    EQU   IEZABP
@NM00008 EQU   FRRAREA+20
VSLEND1A EQU   VSLEND+1
@NM00003 EQU   VSLFLAG2
VSLBEG   EQU   VSLSTRT+1
@NM00002 EQU   VSLFLAG1
@NM00001 EQU   VSLFLAG1
@NM00111 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00110 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00109 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00108 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00107 EQU   FLCFSA
@NM00106 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00105 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00104 EQU   FLCIOA
@NM00103 EQU   FLCMCLA+15
@NM00102 EQU   FLCMCLA+14
@NM00101 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00100 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00099 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00098 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00097 EQU   FLCPER
@NM00096 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00095 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00094 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00093 EQU   FLCPIILC
@NM00092 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00091 EQU   FLCSVILC
@NM00090 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00089 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00088 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00231 EQU   CHKIOMB
@RF00226 EQU   ERRETURN
@RT00242 EQU   ALLVALID
@RT00395 EQU   CHKCPA
@RT00412 EQU   CHAINCPA
@RT00465 EQU   RESETPTR
@RT00586 EQU   BLDIDAL
ENDCNVRT EQU   @EL00002
@RT00768 EQU   FREXIT
@PB00003 EQU   @EL00001
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGC121,(C'PLS1711',0701,78179)
