         TITLE 'IDAM19R3--VSAM PROBLEM STATE I/O DRIVER                *
                        '
IDA019R3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IDA019R3  78.201'                                 0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         IDASVR14
*   PLHAMB=ADDR(IDAAMB);            /* SAVE ADDR FOR IGC121  @Z30SSMR*/
         ST    RAMB,PLHAMB(,RPLH)                                  0086
*   PLHVAMB=ON;                     /* PLHAMB IS VALID       @Z30SSMR*/
         OI    PLHVAMB(RPLH),B'00100000'                           0087
*   IF RPLWAITX=ON&                 /* IF A VALID WAITX      @ZA07549*/
*       RPLASY=OFF THEN             /* REQUEST (I.E. SYN)    @ZA07549*/
         L     @14,PLHCRPL(,RPLH)                                  0088
         TM    RPLWAITX(@14),B'00000100'                           0088
         BNO   @RF00088                                            0088
         TM    RPLASY(@14),B'00001000'                             0088
         BNZ   @RF00088                                            0088
*     DO;                           /* MAKE SURE ECB POSTED  @ZA07549*/
*       IF RPLECBSW=ON THEN         /*                       @ZA07549*/
         TM    RPLECBSW(@14),B'00000001'                           0090
         BNO   @RF00090                                            0090
*         RPLECB->ECBPOST=ON;       /*                       @ZA07549*/
         L     @14,RPLECB(,@14)                                    0091
         OI    ECBPOST(@14),B'01000000'                            0091
*       ELSE                                                       0092
*         RPLPOST=ON;               /*                       @ZA07549*/
         B     @RC00090                                            0092
@RF00090 L     @14,PLHCRPL(,RPLH)                                  0092
         OI    RPLPOST(@14),B'01000000'                            0092
*       PLHSR=OFF;                  /*                       @ZA07549*/
@RC00090 NI    PLHSR(RPLH),B'11111110'                             0093
*     END;                          /* END WAITX CODE        @ZA07549*/
*   IF AMBTRACE^=ZERO&              /* IS IDATRACE ACTIVE    @ZA29388*/
*       BUFCMW=ON THEN              /* AND MUST WRITE ON     @ZA29388*/
@RF00088 L     @14,AMBTRACE(,RAMB)                                 0095
         LTR   @14,@14                                             0095
         BZ    @RF00095                                            0095
         TM    BUFCMW(RBUFC),B'10000000'                           0095
         BNO   @RF00095                                            0095
*     DO;                           /*                       @ZA29388*/
*       CALL IDA019ST;              /* CALL IDATRACE         @ZA29388*/
         L     @15,@CV00662                                        0097
         BALR  @14,@15                                             0097
*       GEN(DC X'0002');            /* TRACE ID              @ZA29388*/
         DC X'0002'
*     END;                          /*                       @ZA29388*/
*/********************************************************************/
*/*                                                                  */
*/*              GO TO SUPERVISOR STATE I/O DRIVER (SIOD)            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0100
*SCHDSIOD:                                                         0100
*   RWORK0=RPLH;                    /* POINTER TO PLH IN REG 0       */
@RF00095 DS    0H                                                  0100
SCHDSIOD LR    RWORK0,RPLH                                         0100
*   R1=RPARM1;                      /* POINTER TO IOMB IN REG 1      */
         LR    R1,RPARM1                                           0101
*   R15=RBUFC;                      /* POINTER TO BUFC IN REG 15     */
         LR    R15,RBUFC                                           0102
*   SVC(121);                                                      0103
         SVC   121                                                 0103
*   RRPL=PLHCRPL;                   /* RESTORE RPL PTR FOR EOV RTN   */
         L     RRPL,PLHCRPL(,RPLH)                                 0104
*                                                                  0105
*/********************************************************************/
*/*                                                                  */
*/*       WAIT IF END OF VOLUME PROCESSING IS IN PROGRESS            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0105
*EOVTEST:                                                          0105
*   IF R15=EOVINP×                  /* R15 HAS RETURN CODE FROM SIOD */
*       R15=DREAMB THEN             /* DEFER FOR AMB         @Z30SSMR*/
EOVTEST  C     R15,@CF00038                                        0105
         BE    @RT00105                                            0105
         C     R15,@CF00043                                        0105
         BNE   @RF00105                                            0105
@RT00105 DS    0H                                                  0106
*     DO;                           /* EOV IN PROGRESS               */
*                                                                  0107
*       /*************************************************************/
*       /*                                                           */
*       /* SET DEFERRED REQUEST INDICATOR IN RWORK0 AND CALL DEFERRED*/
*       /* REQUEST ROUTINE. ON RETURN, GO BACK AND START AT          */
*       /* BEGINNING.                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0107
*       RESPECIFY                                                  0107
*         RWORK3 RSTD;              /* GET REGS              @Z30SSMR*/
*       IF R15=DREAMB THEN          /* IF REQUEST FOR AMB    @Z30SSMR*/
         C     R15,@CF00043                                        0108
         BNE   @RF00108                                            0108
*         DO;                       /*                       @Z30SSMR*/
*           RWORK3=ADDR(IDAAMB);    /* POINT TO AMB          @Z30SSMR*/
         LR    RWORK3,RAMB                                         0110
*           RWORK0=EIGHT;           /* DEFER FOR AMB         @Z30SSMR*/
         LA    RWORK0,8                                            0111
*         END;                      /* END OF AMB DEFER      @Z30SSMR*/
*       ELSE                        /* MUST BE IOB DEFER     @Z30SSMR*/
*         RWORK0=DREQPR;                                           0113
         B     @RC00108                                            0113
@RF00108 LA    RWORK0,4                                            0113
*I01:                                                              0114
*       DO;                         /* IDACALL(IDADRQ)               */
@RC00108 DS    0H                                                  0114
I01      DS    0H                                                  0115
*         CALL IDADRQ;              /* EXIT TO IDADRQ                */
         L     @15,@CV00033                                        0115
         BALR  @14,@15                                             0115
*         GEN(BALR @11,0);          /* LOAD ADDR OF REENTRY          */
         BALR @11,0
*         GEN(USING *,@11);         /* ESTABLISH ADDRESSING          */
         USING *,@11
*         GEN(L     @11,=A(@PSTART));/* RELOAD BASE                  */
         L     @11,=A(@PSTART)
*         GEN(USING @PSTART,@11);   /* ESTABLISH ADDRESSING          */
         USING @PSTART,@11
*       END I01;                                                   0120
*       RFY                                                        0121
*         RWORK3 UNRSTD;            /* DROP REGISTER         @Z30SSMR*/
*       GO TO SCHDSIOD;             /* START OVER FROM TOP   @Z30SSMR*/
         B     SCHDSIOD                                            0122
*     END;                                                         0123
*   ELSE                                                           0124
*                                                                  0124
*/********************************************************************/
*/*                                                                  */
*/*       CALL END OF VOLUME PROCESSING IF NECESSARY                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  0124
*     IF R15=EOVREQ THEN            /* R15 HAS RETURN CODE FROM SIOD */
@RF00105 C     R15,@CF00041                                        0124
         BNE   @RF00124                                            0124
*       DO;                         /* CALL EOV                      */
*I02:                                                              0126
*         DO;                       /* IDACALL(IDAEOVIF)             */
I02      DS    0H                                                  0127
*           CALL IDAEOVIF;          /* EXIT TO IDAEOVIF              */
         L     @15,@CV00034                                        0127
         BALR  @14,@15                                             0127
*           GEN(BALR @11,0);        /* LOAD ADDR OF REENTRY          */
         BALR @11,0
*           GEN(USING *,@11);       /* ESTABLISH ADDRESSING          */
         USING *,@11
*           GEN(L     @11,=A(@PSTART));/* RELOAD BASE                */
         L     @11,=A(@PSTART)
*           GEN(USING @PSTART,@11); /* ESTABLISH ADDRESSING          */
         USING @PSTART,@11
*         END I02;                                                 0132
*         GO TO SCHDSIOD;           /* GO BACK TO THE START  @Z30SSMR*/
         B     SCHDSIOD                                            0133
*       END;                                                       0134
*                                                                  0135
*/********************************************************************/
*/*                                                                  */
*/*         RESET REGISTERS AND RETURN                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0135
*EXIT:                                                             0135
*   RBUFC=IOMBUFC;                  /* RESTORE BUFC POINTER          */
@RF00124 DS    0H                                                  0135
EXIT     L     RBUFC,IOMBUFC(,RPARM1)                              0135
*   RRPL=PLHCRPL;                   /* RESTORE RPL POINTER           */
         L     RRPL,PLHCRPL(,RPLH)                                 0136
*   GEN SETS(R14,PLHRETO,PLHRET1)(IDARST14);/* RESTORE REG 14        */
         IDARST14
*   RETURN;                                                        0138
*                                                                  0138
@EL00001 DS    0H                                                  0138
@EF00001 DS    0H                                                  0138
@ER00001 BR    @14                                                 0138
*   /*****************************************************************/
*   /*                                                               */
*   /* MAINTENANCE PATCH SPACE                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*   GEN(DC    50X'00');                                            0139
         DC    50X'00'
*   END IDA019R3                                                   0140
*                                                                  0140
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IDAREGS )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDAIOMB )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*                                                                  0140
*       ;                                                          0140
         B     @EL00001                                            0140
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IDA019R3 CSECT
         DS    0F
@CF00038 DC    F'4'
@CF00041 DC    F'8'
@CF00043 DC    F'12'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDA019R3 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00033 DC    V(IDADRQ)
@CV00034 DC    V(IDAEOVIF)
@CV00662 DC    V(IDA019ST)
@CV00035 DC    V(IDAWAIT)
         DS    0D
HWORD4   DC    H'4'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RWORK0   EQU   @00
RRPL     EQU   @01
R1       EQU   @01
RPLH     EQU   @02
RAMB     EQU   @03
RBUFC    EQU   @04
RWORK3   EQU   @07
RPARM1   EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RWORK1   EQU   @05
RWORK2   EQU   @06
RWORK4   EQU   @08
RWORK5   EQU   @09
R10      EQU   @10
R11      EQU   @11
IDAAMB   EQU   0
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
AMBTRACE EQU   IDAAMB+120
IDAIOMB  EQU   0
IOMBUFC  EQU   IDAIOMB+4
IOMFLAGS EQU   IDAIOMB+40
IOMFL    EQU   IOMFLAGS
IOMAPEND EQU   IOMFL
IOMSTIND EQU   IOMFLAGS+2
IOMSAVER EQU   IDAIOMB+52
IDABUFDR EQU   0
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCIOFL EQU   IDABUFC+2
BUFCMW   EQU   BUFCIOFL
BUFCFLG2 EQU   IDABUFC+3
BUFCPLH  EQU   IDABUFC+4
BUFCINV  EQU   IDABUFC+28
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHSR    EQU   PLHFLG1
PLHFLG2  EQU   IDAPLH+3
PLHEFLGS EQU   IDAPLH+4
PLHFLG3  EQU   IDAPLH+6
PLHAFLGS EQU   IDAPLH+7
PLHVAMB  EQU   PLHAFLGS
PLHCRPL  EQU   IDAPLH+20
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHJCODE EQU   IDAPLH+40
PLHRSCS  EQU   IDAPLH+43
PLHDIOB  EQU   IDAPLH+76
PLHAMB   EQU   IDAPLH+108
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHKEYPT EQU   IDAPLH+248
PLHTMRPL EQU   IDAPLH+265
PLHEND   EQU   IDAPLH+280
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLPOST  EQU   RPLECB
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLASY   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
ECB      EQU   0
ECBPOST  EQU   ECB
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
BUFCRSC1 EQU   BUFCAVL
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00027 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
@NM00033 EQU   ECB
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00032 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00031 EQU   RPLRBAR+3
@NM00030 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00029 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
@NM00028 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00026 EQU   IDAPLH+266
@NM00025 EQU   PLHTMRPL
PLHTMIOB EQU   PLHTMRPL
PLHTMINX EQU   PLHTMRPL
PLHTMDTA EQU   PLHTMRPL
PLHTMDIW EQU   PLHTMRPL
PLHTMBUF EQU   PLHTMRPL
PLHTERM  EQU   PLHTMRPL
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSLRBA EQU   IDAPLH+244
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00024 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHISPLP EQU   IDAPLH+196
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00023 EQU   IDAPLH+172
@NM00022 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHCHAIN EQU   IDAPLH+112
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00021 EQU   PLHRSCS
PLHDBPER EQU   PLHRSCS
PLHDSERR EQU   PLHRSCS
PLHASYER EQU   PLHRSCS
@NM00020 EQU   PLHRSCS
PLHBUFHD EQU   PLHRSCS
PLHINEOV EQU   PLHRSCS
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHUCODE EQU   PLHJCODE
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHUPECB EQU   PLHJORBA
PLHDSIDA EQU   IDAPLH+24
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHSLVLD EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00019 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHIWAIT EQU   PLHFLG2
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
PLHDRPND EQU   PLHFLG1
PLHASYRQ EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCWLEN EQU   BUFCINV
BUFCNXT1 EQU   IDABUFC+24
BUFCBAD  EQU   IDABUFC+20
BUFCCPA  EQU   IDABUFC+16
BUFCORBA EQU   IDABUFC+12
BUFCDDDD EQU   IDABUFC+8
BUFCAMB  EQU   BUFCPLH
@NM00018 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCXDDR EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCEPT  EQU   BUFCFLG1
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCER1  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00017 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00016 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRPFB EQU   IDABUFDR+4
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
IOMSTCB  EQU   IDAIOMB+128
IOMSRBP  EQU   IDAIOMB+124
IOMUFLD  EQU   IDAIOMB+120
IOMNXT1  EQU   IDAIOMB+116
IOMSAVEF EQU   IOMSAVER+60
IOMSAVEE EQU   IOMSAVER+56
IOMSAVED EQU   IOMSAVER+52
IOMSAVEC EQU   IOMSAVER+48
IOMSAVEB EQU   IOMSAVER+44
IOMSAVEA EQU   IOMSAVER+40
IOMSAVE9 EQU   IOMSAVER+36
IOMSAVE8 EQU   IOMSAVER+32
IOMSAVE7 EQU   IOMSAVER+28
IOMSAVE6 EQU   IOMSAVER+24
IOMSAVE5 EQU   IOMSAVER+20
IOMSAVE4 EQU   IOMSAVER+16
IOMSAVE3 EQU   IOMSAVER+12
IOMSAVE2 EQU   IOMSAVER+8
IOMSAVE1 EQU   IOMSAVER+4
IOMSAVE0 EQU   IOMSAVER
IOMNSEG  EQU   IDAIOMB+50
IOMNBUF  EQU   IDAIOMB+48
IOMNMOD  EQU   IDAIOMB+46
IOMLOCK  EQU   IDAIOMB+45
IOMPFERR EQU   IDAIOMB+44
IOMCKEY  EQU   IDAIOMB+43
IOMSR    EQU   IOMSTIND
IOMSRBM  EQU   IOMSTIND
IOMSLOC  EQU   IOMSTIND
IOMLLOCK EQU   IOMSTIND
IOMEOVXC EQU   IOMSTIND
IOMEOVTS EQU   IOMSTIND
IOMEOVW  EQU   IOMSTIND
IOMAMUSE EQU   IOMSTIND
@NM00015 EQU   IOMFL+1
IOMIRBSW EQU   IOMFL+1
IOMEEXIT EQU   IOMFL+1
@NM00014 EQU   IOMFL+1
IOMCPRB  EQU   IOMFL+1
IOMDDR   EQU   IOMFL+1
IOMCSW   EQU   IOMFL
IOMPGFIX EQU   IOMFL
IOMADERR EQU   IOMFL
IOMCBERR EQU   IOMFL
@NM00013 EQU   IOMFL
IOMPURGE EQU   IOMFL
IOMAE    EQU   IOMAPEND
IOMNE    EQU   IOMAPEND
IOMIOSB  EQU   IDAIOMB+36
IOMPGAD  EQU   IDAIOMB+32
IOMVSL   EQU   IDAIOMB+28
IOMECBPT EQU   IDAIOMB+24
IOMIQE   EQU   IDAIOMB+20
IOMAMB   EQU   IDAIOMB+16
IOMPLH   EQU   IDAIOMB+12
IOMCPA   EQU   IDAIOMB+8
IOMBID   EQU   IDAIOMB
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00012 EQU   AMBCSWD1+1
@NM00011 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBLSR   EQU   AMBAFLG
@NM00010 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00009 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00008 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00007 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBSDS   EQU   AMBINFL
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00006 EQU   AMBINFL
@NM00005 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00004 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00003 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00002 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00001 EQU   AMBFLG0
AMBSWSP  EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBDSB   EQU   IDAAMB+20
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBBUFC  EQU   IDAAMB+8
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IDA019R3,(C'PLS1751',0701,78201)
