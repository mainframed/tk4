         TITLE 'IDA121A4 - MVM I/O MANAGER ABNORMAL END ROUTINE        *
                        '
IDA121A4 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IDA121A4  78.180'                                 0001
         DROP  @15
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*                                   /*                       @Z30SSLP*/
         B     A4SKPVCN            SKIP AROUND VCON            @Z30SSLP
         DC    V(IDA019S4)         ICIP DIE RTN ADDR           @Z30SSLP
A4SKPVCN EQU   *                   SKIP TARGET                 @Z30SSLP
*   IOSBPTR=R1;                     /* SAVE IOSB POINTER IN REG 12   */
         LR    IOSBPTR,R1                                          0186
*   R1=IOSUSE;                      /* IOMB POINTER IN REGISTER 1    */
         L     R1,IOSUSE(,IOSBPTR)                                 0187
*   GEN SETS(IOMSAVE0)(STM   2,5,IOMSAVE0(R1));/* SAVE REGISTERS 2 0188
*                                      THROUGH 5                     */
         STM   2,5,IOMSAVE0(R1)
*   RIOMB=IOSUSE;                   /* POINTER TO IOMB IN REG 3      */
         L     RIOMB,IOSUSE(,IOSBPTR)                              0189
*   IOMSAVEC=R13;                   /* SAVE CONTENTS OF REG 13       */
         ST    R13,IOMSAVEC(,RIOMB)                                0190
*   IOMSAVE5=R15;                   /* SAVE CONTENTS OF REG 15       */
         ST    R15,IOMSAVE5(,RIOMB)                                0191
*   IOMSAVEE=R14;                   /* SAVE CONTENTS OF REG 14       */
         ST    R14,IOMSAVEE(,RIOMB)                                0192
*   RBUFC=IOMBUFC;                  /* POINTER TO FIRST BUFC IN REG 4*/
         L     RBUFC,IOMBUFC(,RIOMB)                               0193
*   RCPA=IOMCPA;                    /* POINTER TO FIRST CPA IN REG 5 */
         L     RCPA,IOMCPA(,RIOMB)                                 0194
*   RPLH=IOMPLH;                    /* POINTER TO PLH IN REG 2       */
         L     RPLH,IOMPLH(,RIOMB)                                 0195
*   RESPECIFY                                                      0196
*    (R1,                                                          0196
*     R13,                                                         0196
*     R14,                                                         0196
*     R15) UNRSTD;                                                 0196
*                                                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH FRR                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*   RESPECIFY                                                      0197
*    (RWORK1,                                                      0197
*     RWORK2,                                                      0197
*     RWORK3) RSTD;                                                0197
*   RWORK1=ADDR(IDA121F4);          /* ADDRESS OF FRR IN REG         */
         LA    RWORK1,IDA121F4                                     0198
*   GEN SETS(RWORK1,RWORK2,RWORK3,FRRSCURR,FRRSFRRA,FRRSPARM) REFS(
*       PSACSTK,PSALSFCC,FRRS,FRRSENTR,FRRSLAST,FRRSELEN);         0199
          SETFRR  A,FRRAD=(RWORK1),WRKREGS=(RWORK2,RWORK3),            X
               PARMAD=(RWORK1)
*   IOMBADR=RIOMB;                  /* STORE IOMB ADDRESS IN PARM  0200
*                                      FIELD                         */
         ST    RIOMB,IOMBADR(,RWORK1)                              0200
*   BASEREG=RBASE;                  /* SAVE CONTENTS OF BASE REGISTER*/
         ST    RBASE,BASEREG(,RWORK1)                              0201
*   RESPECIFY                                                      0202
*    (RWORK1,                                                      0202
*     RWORK2,                                                      0202
*     RWORK3) UNRSTD;                                              0202
*   IF AMBICI=ON THEN               /* ICIP?                 @Z30SSLP*/
         L     @08,IOMAMB(,RIOMB)                                  0203
         TM    AMBICI(@08),B'00010000'                             0203
         BNO   @RF00203                                            0203
*     DO;                           /* YES                   @Z30SSLP*/
*       IF IOSECB3=SEVENX THEN      /* NON-PERM?             @Z30SSLP*/
         TM    IOSECB3(IOSBPTR),B'01110000'                        0205
         BO    @RT00205                                            0205
*         GO TO EXIT;               /* YES, EXIT             @Z30SSLP*/
*       IF IOSECB7=BIT741×          /* COMP CD 41 OR         @Z30SSLP*/
*           IOSECB7=BIT744 THEN     /* 44?                   @Z30SSLP*/
         TM    IOSECB7(IOSBPTR),B'01000001'                        0207
         BNO   @GL00001                                            0207
         TM    IOSECB7(IOSBPTR),B'00111110'                        0207
         BZ    @RT00207                                            0207
@GL00001 TM    IOSECB7(IOSBPTR),B'01000100'                        0207
         BNO   @RF00207                                            0207
         TM    IOSECB7(IOSBPTR),B'00111011'                        0207
         BNZ   @RF00207                                            0207
@RT00207 DS    0H                                                  0208
*         DO;                       /* YES                   @Z30SSLP*/
*           IF IOSIDR=ON&           /* ASYNCH SCHE &         @Z30SSLP*/
*               IOMDDR=OFF&         /* NO YET DDR &          @Z30SSLP*/
*               IOSPGDPX=ON&        /* DUP PAGING &          @Z30SSLP*/
*               BUFCXDDR=OFF THEN   /* NO DDR BYPASS         @Z30SSLP*/
         TM    IOSIDR(IOSBPTR),B'00000100'                         0209
         BNO   @RF00209                                            0209
         TM    IOMDDR(RIOMB),B'10000000'                           0209
         BNZ   @RF00209                                            0209
         TM    IOSPGDPX(IOSBPTR),B'00000010'                       0209
         BNO   @RF00209                                            0209
         TM    BUFCXDDR(RBUFC),B'10000000'                         0209
         BNZ   @RF00209                                            0209
*             DO;                   /* YES, SET FOR DDR      @Z30SSLP*/
*               IOMDDR=ON;          /* INDICATE DDR          @Z30SSLP*/
         OI    IOMDDR(RIOMB),B'10000000'                           0211
*               IOMSAVEE=IOMSAVEE+DDRRET;/* EXIT             @Z30SSLP*/
         LA    @08,12                                              0212
         AL    @08,IOMSAVEE(,RIOMB)                                0212
         ST    @08,IOMSAVEE(,RIOMB)                                0212
*               GO TO EXIT;         /* EXIT TO DDR           @Z30SSLP*/
         B     EXIT                                                0213
*             END;                  /* END OF DDR CODE       @Z30SSLP*/
*         END;                      /* END CD 41-44          @Z30SSLP*/
*       ELSE                        /* NOT 41 OR 44          @Z30SSLP*/
*         IOMCSW=ON;                /* ADR NOT VALID         @Z30SSLP*/
         B     @RC00207                                            0216
@RF00207 OI    IOMCSW(RIOMB),B'00000001'                           0216
*       SPKA(IOMCKEY);              /* SET PSW TO USER KEY   @Z40TSDT*/
@RC00207 SLR   @08,@08                                             0217
         IC    @08,IOMCKEY(,RIOMB)                                 0217
         SPKA  0(@08)                                              0217
*       IF BUFCMW=ON THEN           /* MUST WRITE?           @Z30SSLP*/
         TM    BUFCMW(RBUFC),B'10000000'                           0218
         BNO   @RF00218                                            0218
*         BUFCER2=ON;               /* IND WRITE ERR         @Z30SSLP*/
         OI    BUFCER2(RBUFC),B'00001000'                          0219
*       ELSE                        /* NO MUST WRITE         @Z30SSLP*/
*         BUFCER1=ON;               /* IND READ ERROR        @Z30SSLP*/
         B     @RC00218                                            0220
@RF00218 OI    BUFCER1(RBUFC),B'00010000'                          0220
*       BUFCMW=OFF;                 /* RESET                 @Z30SSLP*/
@RC00218 DS    0H                                                  0222
*       BUFCRRD=OFF;                /* RESET                 @Z30SSLP*/
         NI    BUFCMW(RBUFC),B'01011111'                           0222
*       GEN(MODESET EXTKEY=ZERO);   /* SET KEY ZERO          @Z40TSDT*/
         MODESET EXTKEY=ZERO
*       RPLH=IOMPLH;                /* RELOAD PLH REG        @Z30SSLP*/
         L     RPLH,IOMPLH(,RIOMB)                                 0224
*       CPARPHAD=IOSEEK;            /* SEEK ADDR             @Z30SSLP*/
         MVC   CPARPHAD(8,RCPA),IOSEEK(IOSBPTR)                    0225
*       CPAWPHAD=IOSEEK;            /* SEEK ADDR             @Z30SSLP*/
         MVC   CPAWPHAD(8,RCPA),IOSEEK(IOSBPTR)                    0226
*       GO TO FINAL;                /* SKIP                  @Z30SSLP*/
         B     FINAL                                               0227
*     END;                          /* END ICIP              @Z30SSLP*/
*                                                                  0228
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF ERROR IS NON-PERMANENT OR A FILE PROTECT ERROR   */
*   /* WHICH APPEARS AS A PERMANENT ERROR AFTER 1ST RETRY.   @ZA09137*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0229
*   RESPECIFY                                                      0229
*    (CCW) BASED(RWORK2);           /*                       @ZA09137*/
@RF00203 DS    0H                                                  0230
*   RESPECIFY                                                      0230
*    (RWORK2) RSTD;                 /*                       @ZA09137*/
*   RWORK2=CCWSTOP-EIGHT;           /* PTR TO CCW IN ERROR   @ZA09137*/
         L     RWORK2,CCWSTOP-1(,IOSBPTR)                          0231
         LA    RWORK2,0(,RWORK2)                                   0231
         SL    RWORK2,@CF00064                                     0231
*   IF IOSECB3=SEVENX×              /*                       @ZA09137*/
*       (IOSFP=ON&IOSEQCHK=OFF&CCWCC=SEEK) THEN/*            @ZA09137*/
*                                                                  0232
         TM    IOSECB3(IOSBPTR),B'01110000'                        0232
         BO    @RT00232                                            0232
         TM    IOSFP(IOSBPTR),B'00000100'                          0232
         BNO   @RF00232                                            0232
         TM    IOSEQCHK(IOSBPTR),B'00010000'                       0232
         BNZ   @RF00232                                            0232
         CLI   CCWCC(RWORK2),B'00000111'                           0232
         BNE   @RF00232                                            0232
@RT00232 DS    0H                                                  0233
*     /***************************************************************/
*     /*                                                             */
*     /* NON-PERMANENT ERROR                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0233
*NONPERM:                                                          0233
*     DO;                                                          0233
*                                                                  0233
NONPERM  DS    0H                                                  0234
*       /*************************************************************/
*       /*                                                           */
*       /* FIND CHANNEL PROGRAM SEGMENT IN ERROR                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0234
*       RESPECIFY                                                  0234
*        (R1,                                                      0234
*         RWORK3) RSTD;             /*                       @ZA09137*/
*       CALL LOCATECP;              /* LOCATE CHANNEL PROGRAM        */
*                                                                  0235
         BAL   @14,LOCATECP                                        0235
*       /*************************************************************/
*       /*                                                           */
*       /* RWORK3 CONTAINS A PTR TO THE CHANNEL PGM IN ERROR. RCPA   */
*       /* CONTAINS POINTER TO THE CPA OF ERROR CP. RESET IOSB PTRS  */
*       /* TO ERROR CP FOR RETRY                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0236
*       CALL CHGEPTRS;                                             0236
         BAL   @14,CHGEPTRS                                        0236
*       RESPECIFY                                                  0237
*        (R1,                                                      0237
*         RWORK2,                                                  0237
*         RWORK3) UNRSTD;                                          0237
*                                                                  0237
*       /*************************************************************/
*       /*                                                           */
*       /* FILE PROTECT ERROR                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0238
*       IF IOSFP=ON&IOSEQCHK=OFF THEN/*                      @ZA02672*/
         TM    IOSFP(IOSBPTR),B'00000100'                          0238
         BNO   @RF00238                                            0238
         TM    IOSEQCHK(IOSBPTR),B'00010000'                       0238
         BNZ   @RF00238                                            0238
*         DO;                                                      0239
*                                                                  0239
*           /*********************************************************/
*           /*                                                       */
*           /* ZERO IOSB DRIVER FIELDS EXCEPT IOSERP AND IOSIPIB     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0240
*           IOSFLA=FLAINIT;                                        0240
         MVI   IOSFLA(IOSBPTR),B'11000000'                         0240
*           IOSPROC=CZERO;                                         0241
         MVI   IOSPROC(IOSBPTR),B'00000000'                        0241
*           IOSAPMSK=CZERO;                                        0242
*                                                                  0242
         MVI   IOSAPMSK+1(IOSBPTR),X'00'                           0242
         MVI   IOSAPMSK(IOSBPTR),B'00000000'                       0242
*           /*********************************************************/
*           /*                                                       */
*           /* NO LOCKS IF CALLER IS ASM                     @Z30SSLP*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0243
*           IF IOMPGAD^=ZERO&AMBICI=OFF THEN/* ASM           @Z30SSLP*/
         L     @08,IOMPGAD(,RIOMB)                                 0243
         LTR   @08,@08                                             0243
         BZ    @RF00243                                            0243
         L     @08,IOMAMB(,RIOMB)                                  0243
         TM    AMBICI(@08),B'00010000'                             0243
         BNZ   @RF00243                                            0243
*             IOSOPT=NOLOCLOK;                                     0244
         MVI   IOSOPT(IOSBPTR),B'00010000'                         0244
*           ELSE                    /* RECORD MANAGEMENT HAS LOCK    */
*             IOSOPT=RMIOSOPT;      /* NO LOCK FOR TRM RTN   @Z40GSDT*/
*                                                                  0245
         B     @RC00243                                            0245
@RF00243 MVI   IOSOPT(IOSBPTR),B'00000100'                         0245
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP RETRY AT RETURN ADDRESS PLUS 8 BYTES           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0246
*           IOMSAVEE=IOMSAVEE+EIGHT;/* RETURN ADDR RESET             */
*                                                                  0246
@RC00243 LA    @08,8                                               0246
         AL    @08,IOMSAVEE(,RIOMB)                                0246
         ST    @08,IOMSAVEE(,RIOMB)                                0246
*           /*********************************************************/
*           /*                                                       */
*           /* RESET UCB ADDR IN IOSB TO AGREE WITH ADDR IN DEB      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0247
*           RESPECIFY                                              0247
*            (DEBDAPTR) RSTD;       /*                       @Z30SSMR*/
*           DEBDAPTR=ADDR(DEBBASND)+IOSM*LENGTH(DEBDASD);          0248
         L     @08,IOMAMB(,RIOMB)                                  0248
         L     DEBDAPTR,AMBDEBPT(,@08)                             0248
         LA    DEBDAPTR,DEBBASND(,DEBDAPTR)                        0248
         SLR   @08,@08                                             0248
         IC    @08,IOSM(,IOSBPTR)                                  0248
         SLA   @08,4                                               0248
         ALR   DEBDAPTR,@08                                        0248
*           IOSUCB=DEBUCBA;         /* UCB ADDRESS INTO IOSB         */
         L     @10,DEBUCBA-1(,DEBDAPTR)                            0249
         LA    @10,0(,@10)                                         0249
         ST    @10,IOSUCB(,IOSBPTR)                                0249
*         END;                                                     0250
*       GO TO EXIT;                                                0251
         B     EXIT                                                0251
*     END NONPERM;                                                 0252
*                                                                  0252
*   /*****************************************************************/
*   /*                                                               */
*   /* PERMANENT ERROR                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0253
*PERMERR:                                                          0253
*   IF IOSECB7=BIT76D THEN          /* X'6D' IOS RETURN CODE @ZM03346*/
@RF00232 DS    0H                                                  0253
PERMERR  TM    IOSECB7(IOSBPTR),B'01101101'                        0253
         BNO   @RF00253                                            0253
         TM    IOSECB7(IOSBPTR),B'00010010'                        0253
         BNZ   @RF00253                                            0253
*     IOSEX=OFF;                    /*                       @ZM03346*/
*                                                                  0254
         NI    IOSEX(IOSBPTR),B'11111011'                          0254
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UPDATE REPLICATED WRITE OR PREFORMAT BUFC   @ZM03346*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0255
*   IF(BUFCPFCP=ON×CPAWREPL=ON)&BUFCMW=ON&BUFCFMT=OFF&AMBLSR=OFF&AMBGSR
*       =OFF THEN                   /* & NO SHR RESRC        @Z30SSMR*/
@RF00253 TM    BUFCPFCP(RBUFC),B'00000010'                         0255
         BO    @GL00011                                            0255
         TM    CPAWREPL(RCPA),B'10000000'                          0255
         BNO   @RF00255                                            0255
@GL00011 TM    BUFCMW(RBUFC),B'10000000'                           0255
         BNO   @RF00255                                            0255
         TM    BUFCFMT(RBUFC),B'01000000'                          0255
         BNZ   @RF00255                                            0255
         L     @10,IOMAMB(,RIOMB)                                  0255
         TM    AMBLSR(@10),B'01100000'                             0255
         BNZ   @RF00255                                            0255
*     DO;                                                          0256
*       SPKA(IOMCKEY);              /* SET PSW TO USERS KEY  @Z40TSDT*/
*                                                                  0257
         SLR   @08,@08                                             0257
         IC    @08,IOMCKEY(,RIOMB)                                 0257
         SPKA  0(@08)                                              0257
*       /*************************************************************/
*       /*                                                           */
*       /* SET ERROR/COMPLETION BITS IN 1ST BUFC, NOT PREFORMATTED   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0258
*       BUFCER2=ON;                 /* WRITE ERROR INDICATOR ON      */
         OI    BUFCER2(RBUFC),B'00001000'                          0258
*       BUFCMW=OFF;                 /* WRITE REQUEST OFF IN 1ST BUFC */
         NI    BUFCMW(RBUFC),B'01111111'                           0259
*       BUFCEPT=ON;                 /* COMPLETE BIT ON       @Z30SSMR*/
*                                                                  0260
         OI    BUFCEPT(RBUFC),B'00000001'                          0260
*       /*************************************************************/
*       /*                                                           */
*       /* TURN OFF FUNCTION INDICATOR IN PREFORMATTED BUFC/CPA      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0261
*       RBUFC=BUFDRPFB;             /* POINT TO PREFORMATTED BUFC    */
         L     @10,AMBBUFC(,@10)                                   0261
         L     RBUFC,BUFDRPFB(,@10)                                0261
*       BUFCMW=OFF;                 /* WRITE REQUEST OFF IN PF-BUFC  */
         NI    BUFCMW(RBUFC),B'01111111'                           0262
*       GEN(MODESET EXTKEY=ZERO);   /* RESET KEY BACK TO ZERO        */
         MODESET EXTKEY=ZERO
*       RPLH=IOMPLH;                /* RESTORE PLH POINTER           */
*                                                                  0264
         L     RPLH,IOMPLH(,RIOMB)                                 0264
*       /*************************************************************/
*       /*                                                           */
*       /* RESTORE CCW'S CHANGED BY ABP IF NECESSARY                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0265
*       IF CPAWCPE^=CPAWORK1 THEN                                  0265
         L     @10,CPAWORK1(,RCPA)                                 0265
         C     @10,CPAWCPE(,RCPA)                                  0265
         BE    @RF00265                                            0265
*         DO;                       /* REBUILD CCW TO WCKD FORMAT    */
*           RESPECIFY                                              0267
*            (CCW) BASED(RWORK1);                                  0267
*           RESPECIFY                                              0268
*            (RWORK1) RSTD;                                        0268
*           RWORK1=CPAWORK1-SIXTEEN;/* PTR TO CCWS BEFORE NOP/TIC    */
         SL    @10,@CF00096                                        0269
         LR    RWORK1,@10                                          0269
*           CCW3=CCW1;              /* RESTORE 1ST WCKD CCW          */
         MVC   CCW3(8,RWORK1),CCW1(RWORK1)                         0270
*           CCW3DA=CCW3DA+EIGHT;    /* CORRECT THE DATA ADDRESS      */
         LA    @10,8                                               0271
         L     @08,CCW3DA-1(,RWORK1)                               0271
         LA    @08,0(,@08)                                         0271
         ALR   @08,@10                                             0271
         STCM  @08,7,CCW3DA(RWORK1)                                0271
*           IF BUFCWC=ON THEN                                      0272
         TM    BUFCWC(RBUFC),B'00001000'                           0272
         BNO   @RF00272                                            0272
*             DO;                   /* REPEAT IN WRITE-CHECK CP      */
*               RWORK1=CPAWORK2-EIGHT;/* PTR TO CCW BEFORE NOP       */
         LCR   @10,@10                                             0274
         AL    @10,CPAWORK2(,RCPA)                                 0274
         LR    RWORK1,@10                                          0274
*               CCW2=CCW1;          /* CCW RESTORED TO READ          */
         MVC   CCW2(8,RWORK1),CCW1(RWORK1)                         0275
*               CCW2CC=MTRD;        /* RESTORE MULTITRACK READ CC    */
         MVI   CCW2CC(RWORK1),B'10000110'                          0276
*             END;                                                 0277
*           RESPECIFY                                              0278
*            (RWORK1) UNRSTD;                                      0278
@RF00272 DS    0H                                                  0279
*         END;                                                     0279
*       GO TO FINAL;                /* ONLY ONE BUFC TO PROCESS      */
         B     FINAL                                               0280
*     END;                                                         0281
*                                                                  0281
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR COMPLETION CODES 41 AND 44                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0282
*   IF IOSECB7=BIT741×IOSECB7=BIT744 THEN                          0282
@RF00255 TM    IOSECB7(IOSBPTR),B'01000001'                        0282
         BNO   @GL00013                                            0282
         TM    IOSECB7(IOSBPTR),B'00111110'                        0282
         BZ    @RT00282                                            0282
@GL00013 TM    IOSECB7(IOSBPTR),B'01000100'                        0282
         BNO   @RF00282                                            0282
         TM    IOSECB7(IOSBPTR),B'00111011'                        0282
         BNZ   @RF00282                                            0282
@RT00282 DS    0H                                                  0283
*ERRPROC:                                                          0283
*     DO;                                                          0283
*                                                                  0283
ERRPROC  DS    0H                                                  0284
*       /*************************************************************/
*       /*                                                           */
*       /* LOCATE CHANNEL PROGRAM WHERE ERROR OCCURRED               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0284
*       RESPECIFY                                                  0284
*        (R1,                                                      0284
*         RWORK2,                                                  0284
*         RWORK3) RSTD;                                            0284
*       RWORK2=CCWSTOP-EIGHT;       /* CCW CAUSING ERROR             */
         L     RWORK2,CCWSTOP-1(,IOSBPTR)                          0285
         LA    RWORK2,0(,RWORK2)                                   0285
         SL    RWORK2,@CF00064                                     0285
*       CALL LOCATECP;              /* LOCATE CHANNEL PROGRAM        */
*                                                                  0286
         BAL   @14,LOCATECP                                        0286
*       /*************************************************************/
*       /*                                                           */
*       /* RWORK3 CONTAINS POINTER TO START OF ERROR CP ON RETURN.   */
*       /* RCPA CONTAINS POINTER TO CPA BLOCK IN ERROR. IF RECORD    */
*       /* MGT, EITHER ERROR PROCESSING NEEDED OR RETRY.             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0287
*       IF IOMPGAD=ZERO THEN        /* CALLER IS RECORD MGT  @ZA02671*/
         L     @10,IOMPGAD(,RIOMB)                                 0287
         LTR   @10,@10                                             0287
         BNZ   @RF00287                                            0287
*         DO;                       /* NO DDR RETRY FOR ASM  @ZA02671*/
*           IF IOSIDR=OFF THEN      /* NOT ASYNCHRONOUS SCHEDULING   */
         TM    IOSIDR(IOSBPTR),B'00000100'                         0289
         BZ    @RT00289                                            0289
*             GO TO SETBITS;        /* DO ERROR PROCESSING           */
*           IF IOMDDR=ON THEN       /* DYNAMIC DEVICE RECONFIGURATION*/
         TM    IOMDDR(RIOMB),B'10000000'                           0291
         BO    @RT00291                                            0291
*             GO TO SETBITS;        /* DO ERROR PROCESSING           */
*           IF IOSPGDPX=ON THEN     /* DUPLEX PAGING                 */
         TM    IOSPGDPX(IOSBPTR),B'00000010'                       0293
         BNO   @RF00293                                            0293
*             DO;                                                  0294
*                                                                  0294
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR ANY BUFCXDDR'S ON IN REST OF CHAIN      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0295
*               RBUFC=IOMBUFC;      /* START CHECK AT FIRST BUFC     */
         L     RBUFC,IOMBUFC(,RIOMB)                               0295
*               DO R1=ONE TO IOMNBUF;/* CHECK EACH BUFC ON CHAIN     */
         LA    R1,1                                                0296
         B     @DE00296                                            0296
@DL00296 DS    0H                                                  0297
*                 IF BUFCXDDR=ON THEN/* DDR SUPPRESSED ON ERRORS     */
         TM    BUFCXDDR(RBUFC),B'10000000'                         0297
         BO    @RT00297                                            0297
*                   GO TO SETBITS;  /* DO ERROR PROCESSING           */
*                 RBUFC=BUFCNXT1;   /* POINTER TO NEXT BUFC IN CHAIN */
         L     RBUFC,BUFCNXT1(,RBUFC)                              0299
*               END;                                               0300
         AL    R1,@CF00077                                         0300
@DE00296 LH    @10,IOMNBUF(,RIOMB)                                 0300
         N     @10,@CF03380                                        0300
         CR    R1,@10                                              0300
         BNH   @DL00296                                            0300
*             END;                                                 0301
*DDRSETUP:                                                         0302
*                                                                  0302
*           /*********************************************************/
*           /*                                                       */
*           /* DYNAMIC DEVICE RECONFIGURATION - SET UP RETRY         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0302
*           IOMDDR=ON;                                             0302
*                                                                  0302
@RF00293 DS    0H                                                  0302
DDRSETUP OI    IOMDDR(RIOMB),B'10000000'                           0302
*           /*********************************************************/
*           /*                                                       */
*           /* RESET IOSB POINTERS TO ERROR CP SEGMENT FOR RETRY     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0303
*           CALL CHGEPTRS;                                         0303
         BAL   @14,CHGEPTRS                                        0303
*           RESPECIFY                                              0304
*            (R1) UNRSTD;                                          0304
*                                                                  0304
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP RETURN AT PLUS 12 TO SCHEDULE DDR              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0305
*           IOMSAVEE=IOMSAVEE+DDRRET;/* RETURN +12 - SCHEDULE DDR    */
         LA    @10,12                                              0305
         AL    @10,IOMSAVEE(,RIOMB)                                0305
         ST    @10,IOMSAVEE(,RIOMB)                                0305
*           GO TO EXIT;             /* RETURN TO CALLER              */
         B     EXIT                                                0306
*         END;                      /* RECORD MGT CODE ENDS  @ZA02671*/
*     END ERRPROC;                                                 0308
*                                                                  0308
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPLETION CODE IS OTHER THAN 41 OR 44                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0309
*   ELSE                            /* MARK 1ST CP SEG IN ERROR      */
*     DO;                                                          0309
         B     @RC00282                                            0309
@RF00282 DS    0H                                                  0310
*       RWORK2=IOSVST;              /* POINTER TO FIRST CP SEG       */
         L     RWORK2,IOSVST(,IOSBPTR)                             0310
*       CALL LOCATECP;              /* NEED START ADDRESS OF 1ST CP  */
         BAL   @14,LOCATECP                                        0311
*       IOMCSW=ON;                  /* CSW ADDRESS NOT VALID         */
         OI    IOMCSW(RIOMB),B'00000001'                           0312
*     END;                                                         0313
*SETBITS:                                                          0314
*                                                                  0314
*   /*****************************************************************/
*   /*                                                               */
*   /* SET COMPLETION BITS IN COMPLETED BUFCS AND ERROR BITS ON IN   */
*   /* BUFC WHERE ERROR OCCURRED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   RBUFC=IOMBUFC;                  /* START WITH 1ST BUFC           */
@RC00282 DS    0H                                                  0314
SETBITS  L     RBUFC,IOMBUFC(,RIOMB)                               0314
*   RCPA=IOMCPA;                    /* POINTER TO FIRST CPA          */
         L     RCPA,IOMCPA(,RIOMB)                                 0315
*   RWORK2=ZERO;                    /* INITIALIZE BUFC COUNT         */
         SLR   RWORK2,RWORK2                                       0316
*   SPKA(IOMCKEY);                  /* SWITCH TO USER KEY    @Z40TSDT*/
         SLR   @10,@10                                             0317
         IC    @10,IOMCKEY(,RIOMB)                                 0317
         SPKA  0(@10)                                              0317
*CHK1:                                                             0318
*   DO WHILE RWORK2<IOMNBUF;                                       0318
CHK1     B     @DE00318                                            0318
@DL00318 DS    0H                                                  0319
*     RWORK2=RWORK2+ONE;            /* INCREMENT BUFC COUNT          */
         LA    RWORK2,1(,RWORK2)                                   0319
*     IF CPAWV=ON THEN              /* WRITE CHANNEL PROGRAM FOR BUFC*/
         TM    CPAWV(RCPA),B'10000000'                             0320
         BNO   @RF00320                                            0320
*       DO;                                                        0321
*         BUFCMW=OFF;               /* TURN OFF WRITE REQUEST IN BUFC*/
         NI    BUFCMW(RBUFC),B'01111111'                           0322
*         IF CPAWCPS=RWORK3 THEN                                   0323
         C     RWORK3,CPAWCPS(,RCPA)                               0323
         BNE   @RF00323                                            0323
*           DO;                     /* NO WRITE CHECK CP EXISTS      */
*             BUFCER2=ON;           /* SET WRITE ERROR CODE ON       */
*             BUFCEPT=ON;           /* SET COMPLETE BIT ON           */
         OI    BUFCER2(RBUFC),B'00001001'                          0326
*             GO TO RESETKEY;                                      0327
         B     RESETKEY                                            0327
*           END;                                                   0328
*         ELSE                      /* ERROR NOT IN THIS CHANNEL PGM */
*           IF CPAWCV=OFF THEN      /* NO WRITE CHECK CHANNEL PROGRAM*/
@RF00323 TM    CPAWCV(RCPA),B'01000000'                            0329
         BNZ   @RF00329                                            0329
*             BUFCEPT=ON;                                          0330
*                                                                  0330
         OI    BUFCEPT(RBUFC),B'00000001'                          0330
*         /***********************************************************/
*         /*                                                         */
*         /* LEAVE BUFCEPT OFF IF WRITE CHECK EXISTS                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0331
*       END;                                                       0331
*     ELSE                          /* NO WRITE CP SEG EXISTS        */
*       IF CPARV=ON THEN            /* READ EXISTS                   */
         B     @RC00320                                            0332
@RF00320 TM    CPARV(RCPA),B'00100000'                             0332
         BNO   @RF00332                                            0332
*         DO;                                                      0333
*           BUFCRRD=OFF;            /* TURN OFF BUFC READ REQUEST    */
         NI    BUFCRRD(RBUFC),B'11011111'                          0334
*           IF CPARCPS=RWORK3 THEN  /* I/O ERROR IS IN THIS READ     */
         C     RWORK3,CPARCPS(,RCPA)                               0335
         BNE   @RF00335                                            0335
*             DO;                                                  0336
*               BUFCER1=ON;         /* SET READ ERROR INDICATOR ON   */
*               BUFCEPT=ON;         /* SET COMPLETE BIT ON           */
         OI    BUFCER1(RBUFC),B'00010001'                          0338
*               GO TO RESETKEY;     /* RETURN TO IOS                 */
         B     RESETKEY                                            0339
*             END;                                                 0340
*           ELSE                                                   0341
*             ;                     /* CP IS NOT IN ERROR            */
@RF00335 DS    0H                                                  0342
*           BUFCEPT=ON;             /* SET COMPLETE BIT ON           */
         OI    BUFCEPT(RBUFC),B'00000001'                          0342
*         END;                                                     0343
*       ELSE                                                       0344
*         ;                         /* NO CHANNEL PROGRAM IN BUFC    */
@RF00332 DS    0H                                                  0345
*     RBUFC=BUFCNXT1;               /* CHECK NEXT BUFC FOR ERROR     */
@RC00320 L     RBUFC,BUFCNXT1(,RBUFC)                              0345
*     RCPA=CPACPCHN;                                               0346
         L     RCPA,CPACPCHN(,RCPA)                                0346
*   END CHK1;                                                      0347
@DE00318 LH    @10,IOMNBUF(,RIOMB)                                 0347
         N     @10,@CF03380                                        0347
         CR    RWORK2,@10                                          0347
         BL    @DL00318                                            0347
*   RBUFC=IOMBUFC;                                                 0348
         L     RBUFC,IOMBUFC(,RIOMB)                               0348
*   RCPA=IOMCPA;                                                   0349
         L     RCPA,IOMCPA(,RIOMB)                                 0349
*   RWORK2=ZERO;                    /* RESET BUFC COUNT TO ZERO      */
         SLR   RWORK2,RWORK2                                       0350
*CHK2:                                                             0351
*   DO WHILE RWORK2<IOMNBUF;        /* 2ND PASS OF BUFC'S            */
CHK2     B     @DE00351                                            0351
@DL00351 DS    0H                                                  0352
*     RWORK2=RWORK2+ONE;            /* INCREMENT BUFC COUNT          */
         LA    RWORK2,1(,RWORK2)                                   0352
*     IF CPAWCV=ON THEN             /* WRITE CHECK EXISTS            */
         TM    CPAWCV(RCPA),B'01000000'                            0353
         BNO   @RF00353                                            0353
*       DO;                                                        0354
*         IF CPAWCKS=RWORK3 THEN    /* I/O ERROR IN THIS WRITE CHECK */
         C     RWORK3,CPAWCKS(,RCPA)                               0355
         BNE   @RF00355                                            0355
*           DO;                                                    0356
*             BUFCER2=ON;           /* SET WRITE ERROR INDICATOR ON  */
*             BUFCEPT=ON;           /* SET COMPLETE BIT ON           */
         OI    BUFCER2(RBUFC),B'00001001'                          0358
*             GO TO RESETKEY;       /* RETURN TO IOS                 */
         B     RESETKEY                                            0359
*           END;                                                   0360
*         ELSE                                                     0361
*           ;                       /* CP IS NOT IN ERROR            */
@RF00355 DS    0H                                                  0362
*         BUFCEPT=ON;               /* SET COMPLETE BIT ON           */
         OI    BUFCEPT(RBUFC),B'00000001'                          0362
*       END;                                                       0363
*     ELSE                          /* NO WRITE CP SEG EXISTS        */
*       IF CPARV=ON THEN            /* READ EXISTS                   */
         B     @RC00353                                            0364
@RF00353 TM    CPARV(RCPA),B'00100000'                             0364
         BNO   @RF00364                                            0364
*         DO;                                                      0365
*           BUFCRRD=OFF;            /* TURN OFF BUFC READ REQUEST    */
         NI    BUFCRRD(RBUFC),B'11011111'                          0366
*           IF CPARCPS=RWORK3 THEN  /* I/O ERROR IN THIS READ        */
         C     RWORK3,CPARCPS(,RCPA)                               0367
         BNE   @RF00367                                            0367
*             DO;                                                  0368
*               BUFCER1=ON;         /* SET READ ERROR INDICATOR ON   */
*               BUFCEPT=ON;         /* SET COMPLETE BIT ON           */
         OI    BUFCER1(RBUFC),B'00010001'                          0370
*               GO TO RESETKEY;     /* RETURN TO IOS                 */
         B     RESETKEY                                            0371
*             END;                                                 0372
*           ELSE                                                   0373
*             ;                     /* CP IS NOT IN ERROR            */
@RF00367 DS    0H                                                  0374
*           BUFCEPT=ON;             /* SET COMPLETE BIT ON           */
         OI    BUFCEPT(RBUFC),B'00000001'                          0374
*         END;                                                     0375
*       ELSE                                                       0376
*         ;                         /* NO CHANNEL PROGRAM IN BUFC    */
@RF00364 DS    0H                                                  0377
*     RBUFC=BUFCNXT1;               /* CHECK NEXT BUFC FOR ERROR     */
@RC00353 L     RBUFC,BUFCNXT1(,RBUFC)                              0377
*     RCPA=CPACPCHN;                                               0378
         L     RCPA,CPACPCHN(,RCPA)                                0378
*   END CHK2;                                                      0379
@DE00351 LH    @10,IOMNBUF(,RIOMB)                                 0379
         N     @10,@CF03380                                        0379
         CR    RWORK2,@10                                          0379
         BL    @DL00351                                            0379
*   RBUFC=IOMBUFC;                                                 0380
         L     RBUFC,IOMBUFC(,RIOMB)                               0380
*   RCPA=IOMCPA;                                                   0381
         L     RCPA,IOMCPA(,RIOMB)                                 0381
*   RWORK2=ZERO;                                                   0382
         SLR   RWORK2,RWORK2                                       0382
*CHK3:                                                             0383
*   DO WHILE RWORK2<IOMNBUF;                                       0383
CHK3     B     @DE00383                                            0383
@DL00383 DS    0H                                                  0384
*     RWORK2=RWORK2+ONE;            /* INCREMENT BUFC COUNT          */
         LA    RWORK2,1(,RWORK2)                                   0384
*     IF CPARV=ON THEN              /* READ EXISTS                   */
         TM    CPARV(RCPA),B'00100000'                             0385
         BNO   @RF00385                                            0385
*       DO;                                                        0386
*         BUFCRRD=OFF;              /* TURN OFF BUFC READ REQUEST    */
         NI    BUFCRRD(RBUFC),B'11011111'                          0387
*         IF CPARCPS=RWORK3 THEN    /* I/O ERROR IS IN THIS READ     */
         C     RWORK3,CPARCPS(,RCPA)                               0388
         BNE   @RF00388                                            0388
*           DO;                                                    0389
*             BUFCER1=ON;           /* SET READ ERROR INDICATOR ON   */
*             BUFCEPT=ON;           /* SET COMPLETE BIT ON           */
         OI    BUFCER1(RBUFC),B'00010001'                          0391
*             GO TO RESETKEY;       /* RETURN TO IOS                 */
         B     RESETKEY                                            0392
*           END;                                                   0393
*         ELSE                                                     0394
*           ;                       /* CP IS NOT IN ERROR            */
@RF00388 DS    0H                                                  0395
*         BUFCEPT=ON;               /* SET COMPLETE BIT ON           */
         OI    BUFCEPT(RBUFC),B'00000001'                          0395
*       END;                                                       0396
*     ELSE                                                         0397
*       ;                           /* NO CHANNEL PROGRAM IN BUFC    */
@RF00385 DS    0H                                                  0398
*     RBUFC=BUFCNXT1;               /* CHECK NEXT BUFC FOR ERROR     */
         L     RBUFC,BUFCNXT1(,RBUFC)                              0398
*     RCPA=CPACPCHN;                                               0399
         L     RCPA,CPACPCHN(,RCPA)                                0399
*   END CHK3;                                                      0400
@DE00383 LH    @10,IOMNBUF(,RIOMB)                                 0400
         N     @10,@CF03380                                        0400
         CR    RWORK2,@10                                          0400
         BL    @DL00383                                            0400
*RESETKEY:                                                         0401
*                                                                  0401
*   /*****************************************************************/
*   /*                                                               */
*   /* SWITCH BACK TO KEY ZERO                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0401
*   GEN(MODESET EXTKEY=ZERO);                                      0401
RESETKEY MODESET EXTKEY=ZERO
*   RESPECIFY                                                      0402
*    (RWORK2,                                                      0402
*     RWORK3) UNRSTD;                                              0402
*                                                                  0402
*   /*****************************************************************/
*   /*                                                               */
*   /* ABEND IF ERROR WAS A PROTECTION CHECK                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0403
*FINAL:                                                            0403
*   IF IOSPCHKB=ON THEN             /* PROTECTION CHECK ERROR        */
FINAL    TM    IOSPCHKB(IOSBPTR),B'00010000'                       0403
         BNO   @RF00403                                            0403
*     DO;                                                          0404
*       RPLH=TWENTY;                /* PUT REASON CODE IN REG 2      */
         LA    RPLH,20                                             0405
*       GEN REFS(IOMSAVE0)          /* STORE REGISTERS IN IOMB       */
*           (STM   0,15,IOMSAVE0(RIOMB));                          0406
         STM   0,15,IOMSAVE0(RIOMB)
*       DO;                         /* ABEND(633) DUMP SYSTEM        */
*         RESPECIFY                                                0408
*          (GPR01F) RESTRICTED;                                    0408
*         GPR01F=((633)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19  */
         L     GPR01F,@CF03368                                     0409
*         GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF00130                                     0410
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0411
*         RESPECIFY                                                0412
*          (GPR01F) UNRESTRICTED;                                  0412
*       END;                        /* ABEND(633) DUMP SYSTEM HEX 279
*                                      ABEND                         */
*     END;                                                         0414
*                                                                  0414
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL IOCOM COUNT ROUTINE IF PURGE IS IN PROGRESS      @ZA00644*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0415
*   IF IOSIPIB^=ZERO THEN           /* PURGE IS IN PROGRESS          */
@RF00403 L     @10,IOSIPIB(,IOSBPTR)                               0415
         LTR   @10,@10                                             0415
         BZ    @RF00415                                            0415
*     DO;                                                          0416
*                                                                  0416
*       /*************************************************************/
*       /*                                                           */
*       /* CALL PROC TO DECREMENT IPIBCNT AND POST IPIBECB IF CNT=0. */
*       /* REGISTERS 0, 10 THRU 13, AND 15 CHANGED BY COUNT ROUTINE. */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0417
*       RESPECIFY                                                  0417
*        (R0,                                                      0417
*         R1,                                                      0417
*         R10,                                                     0417
*         R11,                                                     0417
*         R13) RSTD;                                               0417
*       R0=ZERO;                    /* PARAMETER OF ZERO IN REG 0    */
         SLR   R0,R0                                               0418
*       R1=IOSIPIB;                 /* ADDRESS OF IPIB IN REG 1      */
         L     @08,IOSIPIB(,IOSBPTR)                               0419
         LR    R1,@08                                              0419
*       CALL IOCQCNT;               /* ENTRY POINT OF COUNT ROUTINE  */
         L     @08,CVTPTR                                          0420
         L     @08,CVTIXAVL(,@08)                                  0420
         L     @15,IOCQCNT(,@08)                                   0420
         BALR  @14,@15                                             0420
*       IOSBPTR=IOMIOSB;            /* RESTORE REGISTER 12           */
         L     IOSBPTR,IOMIOSB(,RIOMB)                             0421
*       RESPECIFY                                                  0422
*        (R0,                                                      0422
*         R1,                                                      0422
*         R10,                                                     0422
*         R11,                                                     0422
*         R13) UNRSTD;                                             0422
*     END;                                                         0423
*   IOMAE=ON;                       /* ABNORMAL END ENTERED  @ZA02276*/
@RF00415 OI    IOMAE(RIOMB),B'01000000'                            0424
*   GEN(BR    0);                   /* STORES IF MULTIPROC   @ZA02276*/
*                                                                  0425
         BR    0
*   /*****************************************************************/
*   /*                                                               */
*   /* IF CALLER IS ASM OR SRB ICIP, ESTABLISH IOSPGAD VALUE         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0426
*   IF IOMPGAD^=ZERO THEN           /* CALLER IS ASM                 */
         L     @10,IOMPGAD(,RIOMB)                                 0426
         LTR   @10,@10                                             0426
         BZ    @RF00426                                            0426
*     DO;                                                          0427
*       IOSPGAD=IOMPGAD;            /* UPDATE IOSPGAD IN IOSB        */
         ST    @10,IOSPGAD(,IOSBPTR)                               0428
*       IF AMBICI=OFF THEN          /* ASM                   @Z30SSLP*/
         L     @10,IOMAMB(,RIOMB)                                  0429
         TM    AMBICI(@10),B'00010000'                             0429
         BZ    @RT00429                                            0429
*         GO TO EXIT;               /* BYPASS RCD MGMT PROC  @Z30SSLP*/
*     END;                                                         0431
*                                                                  0431
*   /*****************************************************************/
*   /*                                                               */
*   /* RECORD MANAGEMENT IS CALLER - LOCAL LOCK HELD                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0432
*   IF PLHASYRQ=OFF THEN            /* NO ASYNCHRONOUS PROCESSING    */
@RF00426 TM    PLHASYRQ(RPLH),B'00000100'                          0432
         BNZ   @RF00432                                            0432
*     DO;                                                          0433
*       RESPECIFY                                                  0434
*        (R10,                                                     0434
*         R11,                                                     0434
*         R13) RSTD;                                               0434
*                                                                  0434
*       /*************************************************************/
*       /*                                                           */
*       /* POST ECB                                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0435
*       R10=ZERO;                   /* SIO COMPLETION CODE IN REG 10 */
         SLR   R10,R10                                             0435
*       GEN REFS(IOSCOD)(ICM   R10,8,IOSCOD(IOSBPTR));             0436
         ICM   R10,8,IOSCOD(IOSBPTR)
*       IF IOMSR=OFF THEN           /* IF NOT SUSPEND/RESUME @Z40GSDT*/
         TM    IOMSR(RIOMB),B'00000001'                            0437
         BNZ   @RF00437                                            0437
*         DO;                       /* POST SYNCHRONOUS      @Z40GSDT*/
*           R11=IOMECBPT;           /* PTR TO ECB IN REG 11          */
         L     R11,IOMECBPT(,RIOMB)                                0439
*           CALL CVT0PT01;          /* BRNCH TO POST ROUTINE @Z40GSDT*/
         L     @08,CVTPTR                                          0440
         L     @15,CVT0PT01(,@08)                                  0440
         BALR  @14,@15                                             0440
*           IOSBPTR=IOMIOSB;        /* RESTORE CONTENTS OF REG 12    */
         L     IOSBPTR,IOMIOSB(,RIOMB)                             0441
*         END;                      /*                       @Z40GSDT*/
*       ELSE                        /* SET TO RESUME         @Z40GSDT*/
*         DO;                       /*                       @Z40GSDT*/
         B     @RC00437                                            0443
@RF00437 DS    0H                                                  0444
*           IOSPGAD=ADDR(IDA121R3); /* ADDRESS OF RESUME RTN @Z40GSDT*/
         L     @08,@CV00148                                        0444
         ST    @08,IOSPGAD(,IOSBPTR)                               0444
*           ECB=R10;                /* MARK THE ECB POSTED   @Z40GSDT*/
         L     @08,IOMECBPT(,RIOMB)                                0445
         ST    R10,ECB(,@08)                                       0445
*         END;                      /* END RESUME PROCESSING @Z40GSDT*/
*       IOMEEXIT=ON;                /* EXIT BIT FOR REC MGT  @ZA02276*/
@RC00437 OI    IOMEEXIT(RIOMB),B'00001000'                         0447
*       GEN(BR    0);               /* STORES IF MULTIPROC   @ZA02276*/
         BR    0
*       IF IOMEOVW=ON THEN          /* SCHEDULE ASYNCHRONOUS ROUTINE */
         TM    IOMEOVW(RIOMB),B'01000000'                          0449
         BO    @RT00449                                            0449
*         GO TO ASYNCHRQ;                                          0450
*                                                                  0450
*       /*************************************************************/
*       /*                                                           */
*       /* REGISTERS 10 THROUGH 13 AND 15 ARE UNPREDICTABLE          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0451
*     END;                                                         0451
*   ELSE                                                           0452
*                                                                  0452
*     /***************************************************************/
*     /*                                                             */
*     /* GO TO STAGE TWO EXIT EFFECTOR TO SCHEDULE ASYNCHRONOUS      */
*     /* ROUTINE                                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0452
*ASYNCHRQ:                                                         0452
*     DO;                           /* PLHASYRQ OR IOMEOVW   @ZA00644*/
*                                                                  0452
         B     @RC00432                                            0452
@RF00432 DS    0H                                                  0452
ASYNCHRQ DS    0H                                                  0453
*       /*************************************************************/
*       /*                                                           */
*       /* ECB POSTED BY ASYNCH RTN                          @ZA00644*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0453
*       RESPECIFY                                                  0453
*        (R1) RESTRICTED;                                          0453
*       IOMIRBSW=ON;                /* ASYNCH PROCESSING SCH @ZA02276*/
*       IOMEEXIT=ON;                /* EXIT BIT FOR RCD MGT  @ZA02276*/
         OI    IOMIRBSW(RIOMB),B'00001100'                         0455
*       GEN(BR    0);               /* STORES IF MULTIPROC   @ZA02276*/
         BR    0
*       IF IOMEOVW=ON THEN          /* SCHEDULE ASYNCH RTN   @ZA02276*/
         TM    IOMEOVW(RIOMB),B'01000000'                          0457
         BNO   @RF00457                                            0457
*         DO;                       /*                       @ZA02276*/
*           IOMXEOVW=ON;            /* EOV WAIT BIT IN IOMBX @ZA02276*/
         L     @08,IOMUFLD(,RIOMB)                                 0459
         OI    IOMXEOVW(@08),B'01000000'                           0459
*           IOMEOVW=OFF;            /* BIT OFF IN IOMB       @ZA02276*/
         NI    IOMEOVW(RIOMB),B'10111111'                          0460
*         END;                      /* END OF EOV WAIT CODE  @ZA02276*/
*       R11=IOMIQE;                 /* POINTER TO IQE IN REGISTER    */
@RF00457 L     R11,IOMIQE(,RIOMB)                                  0462
*       RBIQENA=NOQUEUE;            /* SET BITS IN IRB TO PREVENT  0463
*                                      EXIT FROM PUTTING IQE ON THE
*                                      NEXT-AVAILABLE QUEUE  @ZA02880*/
         L     @08,IQEIRB(,R11)                                    0463
         NI    RBIQENA(@08),B'11111011'                            0463
         OI    RBIQENA(@08),B'00001000'                            0463
*       R1=-R11;                    /* COMPLEMENT OF IQE ADDR IN REG */
         LCR   R1,R11                                              0464
*       CALL CVT0EF00;              /* ASYNCHRONOUS SCHDULER @Z40GSDT*/
         L     @08,CVTPTR                                          0465
         L     @15,CVT0EF00(,@08)                                  0465
         BALR  @14,@15                                             0465
*     END;                                                         0466
*   RESPECIFY                                                      0467
*    (R10,                                                         0467
*     R11,                                                         0467
*     R13) UNRSTD;                                                 0467
*                                                                  0467
@RC00432 DS    0H                                                  0468
*   /*****************************************************************/
*   /*                                                               */
*   /* PREPARE REGISTERS FOR ENTRY TO PAGEFREE ROUTINE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0468
*   RESPECIFY                                                      0468
*    (R0) RESTRICTED;                                              0468
*   IF IOMPGFIX=ON THEN             /* PAGES FIXED BY I/O MGR        */
         TM    IOMPGFIX(RIOMB),B'00000010'                         0469
         BNO   @RF00469                                            0469
*     DO;                                                          0470
*       R1=IOMVSL;                  /* POINTER TO VSL                */
         L     R1,IOMVSL(,RIOMB)                                   0471
*       R0=ZERO;                    /* ZERO REGISTER 0               */
         SLR   R0,R0                                               0472
*       VSLFREE=ON;                 /* SET PAGEFREE INDICATOR ON     */
*       VSLFIX=OFF;                 /* TURN OFF PAGEFIX INDICATOR    */
         OI    VSLFREE(R1),B'00100000'                             0474
         NI    VSLFIX(R1),B'10111111'                              0474
*       R1=R1×PAGEMASK;             /* HIGH BIT ON IN IOMSAVE3       */
         O     R1,@CF00130                                         0475
*       RBUFC=ZERO;                 /* NO ACCNTING           @Z30SSLP*/
         SLR   RBUFC,RBUFC                                         0476
*       CALL CVTVPSIB;              /* PAGEFREE ROUTINE ADDRESS      */
         L     @10,CVTPTR                                          0477
         L     @15,CVTVPSIB(,@10)                                  0477
         BALR  @14,@15                                             0477
*       RBUFC=IOMBUFC;              /* RESET BUFC POINTER VALUE      */
         L     RBUFC,IOMBUFC(,RIOMB)                               0478
*       IOMPGFIX=OFF;               /* PAGE FIX INDICATOR OFF        */
         NI    IOMPGFIX(RIOMB),B'11111101'                         0479
*       RESPECIFY                                                  0480
*        (R0,                                                      0480
*         R1) UNRSTD;                                              0480
*     END;                                                         0481
*                                                                  0481
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH 'IGNORE' RETURN UNLESS SRB MODE OR SUSPEND/RESUME   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0482
*   IF IOMSRBM=OFF&                 /* SKIP IF SRB MODE OR   @Z40GSDT*/
*       IOMSR=OFF THEN              /* SUSPEND/RESUME        @Z40GSDT*/
@RF00469 TM    IOMSRBM(RIOMB),B'00000011'                          0482
         BNZ   @RF00482                                            0482
*     IOMSAVEE=IOMSAVEE+IGNORE;     /* IGNORE OFFSET ADDED TO RETURN */
         LA    @10,4                                               0483
         AL    @10,IOMSAVEE(,RIOMB)                                0483
         ST    @10,IOMSAVEE(,RIOMB)                                0483
*   IOMSAVE5=ADDR(ABPBR14);         /* PTR TO BRANCH 14 INSTRUCTION  */
*                                                                  0484
@RF00482 L     @10,CVTPTR                                          0484
         L     @10,CVTIOBP(,@10)                                   0484
         LA    @10,ABPBR14(,@10)                                   0484
         ST    @10,IOMSAVE5(,RIOMB)                                0484
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE FRR AND RETURN                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*EXIT:                                                             0485
*   RESPECIFY                                                      0485
*    (RWORK2,                                                      0485
*     RWORK3,                                                      0485
*     R13,                                                         0485
*     R14,                                                         0485
*     R15) RSTD;                                                   0485
EXIT     DS    0H                                                  0486
*   GEN SETS(RWORK2,RWORK3,FRRSCURR,FRRSELEN) REFS(PSACSTK,FRRS,FRRSEMP
*       )(SETFRR  D,WRKREGS=(RWORK2,RWORK3));                      0486
         SETFRR  D,WRKREGS=(RWORK2,RWORK3)
*   R13=IOMSAVEC;                   /* RESTORE CONTENTS OF REG 13    */
         L     R13,IOMSAVEC(,RIOMB)                                0487
*   R14=IOMSAVEE;                   /* RETURN ADDRESS INTO REG 14    */
         L     R14,IOMSAVEE(,RIOMB)                                0488
*   R15=IOMSAVE5;                   /* REGISTER 15 VALUE RESTORED    */
         L     R15,IOMSAVE5(,RIOMB)                                0489
*   IOMLOCK=OFF;                                                   0490
         MVI   IOMLOCK(RIOMB),B'00000000'                          0490
*   GEN SETS(RPLH,RIOMB,RBUFC,RCPA) REFS(IOMSAVE0)                 0491
*       (LM  2,5,IOMSAVE0(RIOMB));  /* RESTORE REGISTERS 2 THROUGH 5 */
         LM  2,5,IOMSAVE0(RIOMB)
*   RETURN;                                                        0492
@EL00001 DS    0H                                                  0492
@EF00001 DS    0H                                                  0492
@ER00001 BR    @14                                                 0492
*LOCATECP:                                                         0493
*                                                                  0493
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE CHANNEL PROGRAM WHERE ERROR OCCURRED                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0493
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0493
LOCATECP DS    0H                                                  0494
*   RESPECIFY                                                      0494
*    (R1,                                                          0494
*     R14) RSTD;                                                   0494
*   R1=ZERO;                        /* INITIALIZE COUNT REGISTER     */
         SLR   R1,R1                                               0495
*   DO WHILE R1<IOMNBUF;                                           0496
         B     @DE00496                                            0496
@DL00496 DS    0H                                                  0497
*     R1=R1+ONE;                    /* INCREMENT BUFFER COUNT        */
         AL    R1,@CF00077                                         0497
*     IF CPAWV=ON THEN              /* WRITE REQUESTED               */
         TM    CPAWV(RCPA),B'10000000'                             0498
         BNO   @RF00498                                            0498
*       IF RWORK2>=CPAWCPS&RWORK2<=CPAWCPE THEN                    0499
         L     @10,CPAWCPS(,RCPA)                                  0499
         CR    RWORK2,@10                                          0499
         BL    @RF00499                                            0499
         C     RWORK2,CPAWCPE(,RCPA)                               0499
         BH    @RF00499                                            0499
*         DO;                                                      0500
*           RWORK3=CPAWCPS;         /* ERROR FOUND IN WRITE CP       */
         LR    RWORK3,@10                                          0501
*           GO TO FOUND;                                           0502
         B     FOUND                                               0502
*         END;                                                     0503
*     IF CPAWCV=ON THEN             /* WRITE CHECK REQUESTED         */
@RF00499 DS    0H                                                  0504
@RF00498 TM    CPAWCV(RCPA),B'01000000'                            0504
         BNO   @RF00504                                            0504
*       IF RWORK2>=CPAWCKS&RWORK2<=CPAWCKE THEN                    0505
         L     @10,CPAWCKS(,RCPA)                                  0505
         CR    RWORK2,@10                                          0505
         BL    @RF00505                                            0505
         C     RWORK2,CPAWCKE(,RCPA)                               0505
         BH    @RF00505                                            0505
*         DO;                                                      0506
*           RWORK3=CPAWCKS;         /* POINTER TO WRITE CP START     */
         LR    RWORK3,@10                                          0507
*           GO TO FOUND;                                           0508
         B     FOUND                                               0508
*         END;                                                     0509
*     IF CPARV=ON THEN                                             0510
@RF00505 DS    0H                                                  0510
@RF00504 TM    CPARV(RCPA),B'00100000'                             0510
         BNO   @RF00510                                            0510
*       IF RWORK2>=CPARCPS&RWORK2<=CPARCPE THEN                    0511
         L     @10,CPARCPS(,RCPA)                                  0511
         CR    RWORK2,@10                                          0511
         BL    @RF00511                                            0511
         C     RWORK2,CPARCPE(,RCPA)                               0511
         BH    @RF00511                                            0511
*         DO;                                                      0512
*           RWORK3=CPARCPS;         /* ERROR FOUND IN READ CP        */
         LR    RWORK3,@10                                          0513
*           GO TO FOUND;                                           0514
         B     FOUND                                               0514
*         END;                                                     0515
*     RCPA=CPACPCHN;                /* GO TO NEXT CPA                */
@RF00511 DS    0H                                                  0516
@RF00510 L     RCPA,CPACPCHN(,RCPA)                                0516
*   END;                                                           0517
*                                                                  0517
@DE00496 LH    @10,IOMNBUF(,RIOMB)                                 0517
         N     @10,@CF03380                                        0517
         CR    R1,@10                                              0517
         BL    @DL00496                                            0517
*   /*****************************************************************/
*   /*                                                               */
*   /* CHANNEL PROGRAM IN ERROR NOT FOUND ERROR ON IOS PREFIX CCW    */
*   /* ------ USE IOSVST                                     @ZA29100*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0518
*   IOMCSW=ON;                      /* CSW ADDRESS NOT VALID         */
         OI    IOMCSW(RIOMB),B'00000001'                           0518
*   RCPA=IOMCPA;                    /* RESET POINTER TO FIRST CPA    */
         L     RCPA,IOMCPA(,RIOMB)                                 0519
*   RWORK2=IOSVST;                  /* USE IOSVST            @ZA29100*/
         L     RWORK2,IOSVST(,IOSBPTR)                             0520
*   GO TO LOCATECP;                 /* AND GET CPA           @ZA29100*/
         B     LOCATECP                                            0521
*FOUND:                                                            0522
*   RESPECIFY                                                      0522
*    (RWORK2,                                                      0522
*     R1) UNRSTD;                                                  0522
*   END LOCATECP;                                                  0523
@EL00002 DS    0H                                                  0523
@EF00002 DS    0H                                                  0523
@ER00002 BR    @14                                                 0523
*CHGEPTRS:                                                         0524
*                                                                  0524
*   /*****************************************************************/
*   /*                                                               */
*   /* SET POINTERS IN IOSB FOR RETRY FROM CP IN ERROR               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0524
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/*                       @Z40TSDT*/
*                                                                  0524
CHGEPTRS DS    0H                                                  0525
*   /*****************************************************************/
*   /*                                                               */
*   /* START FROM WRITE CP ONLY FOR UPDATE WRITE AND CHECK           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0525
*   IF RWORK3=CPAWCKS&BUFCFMT=OFF THEN/* CHECK CP IN ERROR           */
         L     @10,CPAWCKS(,RCPA)                                  0525
         CR    RWORK3,@10                                          0525
         BNE   @RF00525                                            0525
         TM    BUFCFMT(RBUFC),B'01000000'                          0525
         BNZ   @RF00525                                            0525
*     DO;                                                          0526
*       IOSVST=CPAWCPS+SIXTEEN;     /* START WITH WRITE      @Z30SSMR*/
*                                                                  0527
         LA    @07,16                                              0527
         AL    @07,CPAWCPS(,RCPA)                                  0527
         ST    @07,IOSVST(,IOSBPTR)                                0527
*       /*************************************************************/
*       /*                                                           */
*       /* ERROR IN A WRITE-CHECK CP SO CHAIN TO WRITE CP AND START  */
*       /* RETRY FROM WRITE CP                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0528
*       RESPECIFY                                                  0528
*        (CCW) BASED(CPAWCKS);                                     0528
*                                                                  0528
*       /*************************************************************/
*       /*                                                           */
*       /* NEED A POINTER TO THE LAST SIDARG                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0529
*       CPAWSIDN=CPAWSID+FIVE*(CPABCINV-ONE);                      0529
         L     @07,CPAWSID(,RCPA)                                  0529
         LH    @06,CPABCINV(,RCPA)                                 0529
         BCTR  @06,0                                               0529
         MH    @06,@CH00093                                        0529
         ALR   @06,@07                                             0529
         ST    @06,CPAWSIDN(,RIOMB)                                0529
*       IF SIDCC1^=SIDCCN           /* COMPARE CYLINDER ADDRESSES    */
*         THEN                                                     0530
         CLC   SIDCC1(2,@07),SIDCCN(@06)                           0530
         BE    @RF00530                                            0530
*         CCWCC=SEEKCC;             /* SEEK CYLINDER IF DIFFERENT    */
         MVI   CCWCC(@10),B'00001011'                              0531
*       ELSE                                                       0532
*         CCWCC=SEEKHH;             /* SEEK HEAD IF THE SAME         */
         B     @RC00530                                            0532
@RF00530 L     @10,CPAWCKS(,RCPA)                                  0532
         MVI   CCWCC(@10),B'00011011'                              0532
*       RESPECIFY                                                  0533
*        (CCW) BASED(CPAWCPE);                                     0533
@RC00530 DS    0H                                                  0534
*       CCWDA=CPAWREAL+(CPAWCKS-CPAWCPS);/* CHAIN WRITE TO CHK       */
         L     @10,CPAWCPE(,RCPA)                                  0534
         L     @07,CPAWCPS(,RCPA)                                  0534
         L     @06,CPAWCKS(,RCPA)                                  0534
         SLR   @06,@07                                             0534
         AL    @06,CPAWREAL(,RCPA)                                 0534
         STCM  @06,7,CCWDA(@10)                                    0534
*       IOSEEK=CPAWPHAD;            /* RESET IOSEEK                  */
         MVC   IOSEEK(8,IOSBPTR),CPAWPHAD(RCPA)                    0535
*       RWORK3=CPAWCPS;             /* WRITE CP ADDRESS INTO REGISTER*/
         LR    RWORK3,@07                                          0536
*     END;                                                         0537
*   ELSE                            /* WRITE OR READ CP IN ERROR     */
*     DO;                                                          0538
         B     @RC00525                                            0538
@RF00525 DS    0H                                                  0539
*       IOSVST=RWORK3+SIXTEEN;      /* PTR - TO ERROR CP     @Y30SSMR*/
         LA    @10,16                                              0539
         ALR   @10,RWORK3                                          0539
         ST    @10,IOSVST(,IOSBPTR)                                0539
*       IF RWORK3=CPARCPS THEN      /* READ CP IN ERROR              */
         C     RWORK3,CPARCPS(,RCPA)                               0540
         BNE   @RF00540                                            0540
*         DO;                       /*                       @ZA08251*/
*           IOSEEK=CPARPHAD;                                       0542
         MVC   IOSEEK(8,IOSBPTR),CPARPHAD(RCPA)                    0542
*           IF CPARREPL=ON THEN     /* REPLICATED READ       @ZA08251*/
         TM    CPARREPL(RCPA),B'01000000'                          0543
         BNO   @RF00543                                            0543
*             IOSVST=IOSVST+EIGHT;  /* RETRY READCNT CCW     @ZA08251*/
         AL    @10,@CF00064                                        0544
         ST    @10,IOSVST(,IOSBPTR)                                0544
*         END;                      /*                       @ZA08251*/
*       ELSE                        /* WRITE CP IN ERROR             */
*         IOSEEK=CPAWPHAD;                                         0546
         B     @RC00540                                            0546
@RF00540 MVC   IOSEEK(8,IOSBPTR),CPAWPHAD(RCPA)                    0546
*     END;                                                         0547
@RC00540 DS    0H                                                  0548
*   RESPECIFY                                                      0548
*    (RWORK2) RSTD;                                                0548
@RC00525 DS    0H                                                  0549
*   RWORK3=IOSVST;                  /* RETRY ADDR IN REG     @ZA08251*/
         L     RWORK3,IOSVST(,IOSBPTR)                             0549
*   GEN(LRA   RWORK2,0(,RWORK3));   /* CONVERT TO REAL       @ZA08251*/
         LRA   RWORK2,0(,RWORK3)
*   IOSRST=RWORK2;                  /* SET REAL START ADDR TO RETRY  */
         ST    RWORK2,IOSRST(,IOSBPTR)                             0551
*   IOSEEKA=IOSEEK;                 /* SET SEEK ADDR FOR RETRY       */
         MVC   IOSEEKA(8,IOSBPTR),IOSEEK(IOSBPTR)                  0552
*   RESPECIFY                                                      0553
*    (RWORK2,                                                      0553
*     RWORK3) UNRSTD;                                              0553
*   END CHGEPTRS;                                                  0554
@EL00003 DS    0H                                                  0554
@EF00003 DS    0H                                                  0554
@ER00003 BR    @14                                                 0554
*IDA121F4:                                                         0555
*                                                                  0555
*   /*****************************************************************/
*   /*                                                               */
*   /* FRR ROUTINE FOR ABNORMAL END ROUTINE                  @Z40TSDT*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0555
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0555
IDA121F4 DS    0H                                                  0556
*   DCL                                                            0556
*     IDFIELD CHAR(24) STATIC LOCAL INIT('IDA121A4IDA121A4IDA121F4');
*   RESPECIFY                                                      0557
*    (R0,                                                          0557
*     SDWAPTR,                                                     0557
*     RWORK1,                                                      0557
*     RWORK2,                                                      0557
*     R13,                                                         0557
*     R14,                                                         0557
*     R15) RSTD;                                                   0557
*   RWORK1=SDWAPARM;                /* PTR TO PARM FIELD FROM SDWA   */
         L     RWORK1,SDWAPARM(,SDWAPTR)                           0558
*   SDWADDR=R1;                     /* SDWA PTR IN PARMLIST FROM R1  */
         ST    R1,SDWADDR(,RWORK1)                                 0559
*   R13=R0;                         /* SAVE AREA IN 200 BYTE AREA    */
         LR    R13,R0                                              0560
*   RETADDR=R14;                    /* SAVE RETURN ADDR IN PARMLIST  */
         ST    R14,RETADDR(,RWORK1)                                0561
*   RBASE=BASEREG;                  /* RESTORE BASE REG CONTENTS     */
         L     RBASE,BASEREG(,RWORK1)                              0562
*   RCPA=ADDR(MOVELIST)-ADDR(DUMPLIST)-ONE;/* LIST LENGTH IN R5      */
         LA    RCPA,MOVELIST                                       0563
         LA    @10,DUMPLIST                                        0563
         SLR   RCPA,@10                                            0563
         BCTR  RCPA,0                                              0563
*   RIOMB=IOMBADR;                  /* PTR TO IOMB FROM PARM FIELD   */
         L     RIOMB,IOMBADR(,RWORK1)                              0564
*   IOSBPTR=IOMIOSB;                /* PTR TO IOSB                   */
*                                                                  0565
         L     IOSBPTR,IOMIOSB(,RIOMB)                             0565
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE SDUMP LIST AND EXECUTE IT REGISTER 13 POINTS TO A SAVE   */
*   /* AREA AT THE START OF THE 200 BYTE WORK AREA. REGISTER 10      */
*   /* POINTS TO THE END OF THE SAVE AREA WHERE SDUMP LIST FORM IS   */
*   /* MOVED TO BE EXECUTED. REGISTERS 14 AND 15 ARE USED FOR BRANCH.*/
*   /* R1 ALSO USED.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0566
*   RESPECIFY                                                      0566
*    (R10,                                                         0566
*     R11) RSTD;                                                   0566
*   R10=R13+SEVENTY2;               /* POINTER TO AREA FOR SDUMP     */
         LA    R10,72                                              0567
         ALR   R10,R13                                             0567
*   R11=IOSASID;                    /* ADDR SPACE TO BE DUMPED       */
         LH    R11,IOSASID(,IOSBPTR)                               0568
         N     R11,@CF03380                                        0568
*   GEN REFS(MOVELIST,RCPA,CVTSDMP,CVTMAP);                        0569
           EX      RCPA,MOVELIST    MOVE SDUMP LIST TO WORK AREA
           SDUMP   BRANCH=YES,ASID=(11),MF=(E,(10))  EXECUTE SDUMP
*   RESPECIFY                                                      0570
*    (R10,                                                         0570
*     R11) UNRSTD;                                                 0570
*   SDWAPTR=SDWADDR;                /* RESTORE SDWA BASE REGISTER    */
         L     SDWAPTR,SDWADDR(,RWORK1)                            0571
*   IF SDWAFMID^=ZERO THEN          /* MEMORY NOT DEPENDABLE         */
         LH    @10,SDWAFMID(,SDWAPTR)                              0572
         N     @10,@CF03380                                        0572
         LTR   @10,@10                                             0572
         BNZ   @RT00572                                            0572
*     GO TO ERREXIT;                /* SKIP ALL PROCESSING           */
*                                                                  0573
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE PAGES FIXED IN SIOD                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0574
*   IF IOMPGFIX=ON THEN             /* RELEASE PAGES FIXED BY SIOD   */
         TM    IOMPGFIX(RIOMB),B'00000010'                         0574
         BNO   @RF00574                                            0574
*     DO;                                                          0575
*       R1=IOMVSL;                  /* POINTER TO VSL                */
         L     R1,IOMVSL(,RIOMB)                                   0576
*       VSLFREE=ON;                 /* CHANGE VSL - PAGEFREE ENTRY   */
*       VSLFIX=OFF;                                                0578
         OI    VSLFREE(R1),B'00100000'                             0578
         NI    VSLFIX(R1),B'10111111'                              0578
*       R0=ZERO;                    /* ZERO REGISTER 0               */
         SLR   R0,R0                                               0579
*       R1=R1×PAGEMASK;             /* HIGH BIT ON IN REGISTER 1     */
         O     R1,@CF00130                                         0580
*       RBUFC=ZERO;                 /* NO ACCTING            @Z30SSLP*/
         SLR   RBUFC,RBUFC                                         0581
*       CALL CVTVPSIB;              /* PAGEFREE ROUTINE ADDRESS      */
         L     @10,CVTPTR                                          0582
         L     @15,CVTVPSIB(,@10)                                  0582
         BALR  @14,@15                                             0582
*       IOMPGFIX=OFF;               /* PAGES FREED                   */
         NI    IOMPGFIX(RIOMB),B'11111101'                         0583
*       SDWAPTR=SDWADDR;            /* RESTORE SDWA BASE REG 1       */
         L     SDWAPTR,SDWADDR(,RWORK1)                            0584
*     END;                                                         0585
*                                                                  0585
*   /*****************************************************************/
*   /*                                                               */
*   /* ABEND IF ERROR IS A PROTECTION CHECK ERROR                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0586
*   IF IOSPCHKB=ON THEN             /* PROTECT CHECK ERROR           */
@RF00574 TM    IOSPCHKB(IOSBPTR),B'00010000'                       0586
         BO    @RT00586                                            0586
*     GO TO SETABEND;                                              0587
*   ELSE                                                           0588
*     IF SDWACMPC=COMP0C4 THEN      /* INVALID BUFC                  */
         CLC   SDWACMPC(3,SDWAPTR),@CB00132                        0588
         BNE   @RF00588                                            0588
*       DO;                                                        0589
*         SDWAGR02=HWORD4;          /* CODE 4 IN REGISTER 2 IN SDWA  */
*                                                                  0590
         MVC   SDWAGR02(4,SDWAPTR),@CF00091                        0590
*         /***********************************************************/
*         /*                                                         */
*         /* SDWA BASED ON REGISTER 1 IN SETRP CALL, USES R14 & R15  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0591
*SETABEND:                                                         0591
*         DO;                       /* SETRP RECORD(YES)RECPARM(IDFIE
*                                      LD)RC(0)FRELOCK(LOCAL)COMPCOD(
*                                      633,SYSTEM)                   */
SETABEND DS    0H                                                  0592
*           RESPECIFY                                              0592
*            (GPR00P,                                              0592
*             GPR01P,                                              0592
*             GPR14P,                                              0592
*             GPR15P) RSTD;                                        0592
*           GPR01P->SDWARCDE=0;     /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0593
*           GPR01P->SDWARCRD='1'B;  /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0594
*           GPR15P=ADDR(IDFIELD);   /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,IDFIELD                                      0595
*           GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD    0596
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0596
*           GPR14P=633;             /* ACCESS COMPLETION CODE        */
         LA    GPR14P,633                                          0597
*           GEN(SLL    14,12);      /* SHIFT TO SYSTEM COMPLETION  0598
*                                      CODE                          */
         SLL    14,12
*           GPR01P->SDWACMPC=GPR14P;/* STORE COMPLETION CODE         */
         STCM  GPR14P,7,SDWACMPC(GPR01P)                           0599
*           GPR01P->SDWAACF4=GPR01P->SDWAACF4×'00000001'B;/*       0600
*                                      INITIALIZE LOCK FLAGS         */
         OI    SDWAACF4(GPR01P),B'00000001'                        0600
*           RESPECIFY                                              0601
*            (GPR00P,                                              0601
*             GPR01P,                                              0601
*             GPR14P,                                              0601
*             GPR15P) UNRSTD;                                      0601
*         END;                                                     0602
*       END;                                                       0603
*     ELSE                                                         0604
*ERREXIT:                                                          0604
*       DO;                                                        0604
*                                                                  0604
         B     @RC00588                                            0604
@RF00588 DS    0H                                                  0604
ERREXIT  DS    0H                                                  0605
*         /***********************************************************/
*         /*                                                         */
*         /* SDWA BASED ON REGISTER 1 IN SETRP CALL, USES R15        */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0605
*         DO;                       /* SETRP RECORD(YES)RECPARM(IDFIE
*                                      LD)RC(0)FRELOCK(LOCAL)        */
*           RESPECIFY                                              0606
*            (GPR00P,                                              0606
*             GPR01P,                                              0606
*             GPR14P,                                              0606
*             GPR15P) RSTD;                                        0606
*           GPR01P->SDWARCDE=0;     /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0607
*           GPR01P->SDWARCRD='1'B;  /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0608
*           GPR15P=ADDR(IDFIELD);   /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,IDFIELD                                      0609
*           GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD    0610
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0610
*           GPR01P->SDWAACF4=GPR01P->SDWAACF4×'00000001'B;/*       0611
*                                      INITIALIZE LOCK FLAGS         */
         OI    SDWAACF4(GPR01P),B'00000001'                        0611
*           RESPECIFY                                              0612
*            (GPR00P,                                              0612
*             GPR01P,                                              0612
*             GPR14P,                                              0612
*             GPR15P) UNRSTD;                                      0612
*         END;                                                     0613
*       END;                                                       0614
*   R14=RETADDR;                    /* RESTORE RETURN ADDRESS        */
@RC00588 L     R14,RETADDR(,RWORK1)                                0615
*   END IDA121F4;                                                  0616
@EL00004 DS    0H                                                  0616
@EF00004 DS    0H                                                  0616
@ER00004 BR    @14                                                 0616
*PATCH:                                                            0617
*   GEN(DC   10F'0');               /* ABP NUC PATCH AREA    @ZA08251*/
PATCH    DC   10F'0'
*   END IDA121A4                                                   0618
*                                                                  0618
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEZABP  )                                       */
*/*%INCLUDE SYSLIB  (IDAAMB  )                                       */
*/*%INCLUDE SYSLIB  (IDABUFC )                                       */
*/*%INCLUDE SYSLIB  (IDAAMBXN)                                       */
*/*%INCLUDE SYSLIB  (IDACPA  )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IECDIOCM)                                       */
*/*%INCLUDE SYSLIB  (IDAIOMB )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHAIQE  )                                       */
*/*%INCLUDE SYSLIB  (IDAPLH  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  0618
*       ;                                                          0618
         B     @EL00001                                            0618
@DATA    DS    0H
@CH00093 DC    H'5'
@DATD    DSECT
         DS    0F
IDA121A4 CSECT
         DS    0F
@CF00077 DC    F'1'
@CF00091 DC    F'4'
@CF00064 DC    F'8'
@CF00096 DC    F'16'
@CF03368 DC    F'2592768'
@CF00130 DC    XL4'80000000'
@CF03380 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IDA121A4 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00148 DC    V(IDA121R3)
         DS    0D
@CB00132 DC    X'0C4000'
IDFIELD  DC    CL24'IDA121A4IDA121A4IDA121F4'
IDA121A4 CSECT
DUMPLIST SDUMP HDR='ABP:IDA121A4 - ABEND FROM ABNORMAL END FRR',MF=L,  X
               SDATA=(SQA,PSA,NUC,RGN,TRT,CSA)
MOVELIST MVC   0(0,10),DUMPLIST
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IDA121A4 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
SDWAPTR  EQU   @01
RPLH     EQU   @02
RIOMB    EQU   @03
RBUFC    EQU   @04
RCPA     EQU   @05
RWORK1   EQU   @06
RWORK2   EQU   @07
RWORK3   EQU   @08
RBASE    EQU   @09
R10      EQU   @10
R11      EQU   @11
DEBDAPTR EQU   @11
IOSBPTR  EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR01F   EQU   @01
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR14F   EQU   @14
GPR15F   EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
I256C    EQU   0
SIDCC1   EQU   0
SIDCCN   EQU   0
CCW      EQU   0
CCW1     EQU   CCW
CCWCC    EQU   CCW1
CCWDA    EQU   CCW1+1
CCWFLG   EQU   CCW1+4
CCW2     EQU   CCW+8
CCW2CC   EQU   CCW2
CCW3     EQU   CCW+16
CCW3DA   EQU   CCW3+1
ECB      EQU   0
@NM00017 EQU   0
VSLFIX   EQU   @NM00017
VSLFREE  EQU   @NM00017
@NM00021 EQU   0
IOMBADR  EQU   @NM00021
BASEREG  EQU   @NM00021+4
RETADDR  EQU   @NM00021+8
SDWADDR  EQU   @NM00021+12
IEZABP   EQU   0
ABPBR14  EQU   IEZABP+2
IDAAMB   EQU   0
AMBBUFC  EQU   IDAAMB+8
AMBEOVR  EQU   IDAAMB+24
AMBFLG0  EQU   AMBEOVR
AMBFLG1  EQU   IDAAMB+25
AMBDSORG EQU   IDAAMB+26
AMBIOBAD EQU   IDAAMB+28
AMBINFL  EQU   IDAAMB+42
AMBDEBPT EQU   IDAAMB+44
AMBOFLGS EQU   IDAAMB+48
AMBFLG2  EQU   IDAAMB+49
AMBEOVPT EQU   IDAAMB+56
AMBCSWD1 EQU   IDAAMB+84
AMBAFLG  EQU   AMBCSWD1
AMBLSR   EQU   AMBAFLG
AMBGSR   EQU   AMBAFLG
AMBICI   EQU   AMBAFLG
IDABUFDR EQU   0
BUFDRPFB EQU   IDABUFDR+4
BUFDRCIX EQU   IDABUFDR+9
BUFDRFLG EQU   IDABUFDR+11
IDABUFC  EQU   0
BUFCAVL  EQU   IDABUFC
BUFCFLG1 EQU   IDABUFC+1
BUFCER1  EQU   BUFCFLG1
BUFCER2  EQU   BUFCFLG1
BUFCEPT  EQU   BUFCFLG1
BUFCIOFL EQU   IDABUFC+2
BUFCMW   EQU   BUFCIOFL
BUFCFMT  EQU   BUFCIOFL
BUFCRRD  EQU   BUFCIOFL
BUFCWC   EQU   BUFCIOFL
BUFCPFCP EQU   BUFCIOFL
BUFCFLG2 EQU   IDABUFC+3
BUFCXDDR EQU   BUFCFLG2
BUFCPLH  EQU   IDABUFC+4
BUFCNXT1 EQU   IDABUFC+24
BUFCINV  EQU   IDABUFC+28
IDAAMBXN EQU   0
AMBXEOV  EQU   IDAAMBXN
AMBXCSWD EQU   IDAAMBXN+16
IDAIOMBX EQU   0
IOMXFLGS EQU   IDAIOMBX+1
IOMXEOVW EQU   IOMXFLGS
IOMXPDET EQU   IDAIOMBX+4
IOMXRECB EQU   IDAIOMBX+20
IOMXECB  EQU   IOMXRECB
IOMXRSLT EQU   IOMXECB
IDACPA   EQU   0
CPAWREAL EQU   IDACPA+4
CPAWCPS  EQU   IDACPA+8
CPAWCPE  EQU   IDACPA+12
CPAWCKS  EQU   IDACPA+16
CPAWCKE  EQU   IDACPA+20
CPARCPS  EQU   IDACPA+28
CPARCPE  EQU   IDACPA+32
CPAWPHAD EQU   IDACPA+36
CPAWSEEK EQU   CPAWPHAD+1
CPAWSID  EQU   IDACPA+44
CPARPHAD EQU   IDACPA+52
CPARSEEK EQU   CPARPHAD+1
CPAWORK1 EQU   IDACPA+68
CPAWORK2 EQU   IDACPA+72
CPABCINV EQU   IDACPA+80
CPASTAT1 EQU   IDACPA+83
CPAFLAGS EQU   IDACPA+84
CPAFLAG1 EQU   CPAFLAGS
CPAWV    EQU   CPAFLAG1
CPAWCV   EQU   CPAFLAG1
CPARV    EQU   CPAFLAG1
CPAFLAG2 EQU   CPAFLAGS+1
CPAWREPL EQU   CPAFLAG2
CPARREPL EQU   CPAFLAG2
CPACPCHN EQU   IDACPA+92
CPACCW   EQU   0
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBUCBA  EQU   DEBUCBAD+1
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
IOCOM    EQU   0
IOCQCNT  EQU   IOCOM+116
IDAIOMB  EQU   0
IOMBUFC  EQU   IDAIOMB+4
IOMCPA   EQU   IDAIOMB+8
IOMPLH   EQU   IDAIOMB+12
IOMAMB   EQU   IDAIOMB+16
IOMIQE   EQU   IDAIOMB+20
IOMECBPT EQU   IDAIOMB+24
IOMVSL   EQU   IDAIOMB+28
IOMPGAD  EQU   IDAIOMB+32
IOMIOSB  EQU   IDAIOMB+36
IOMFLAGS EQU   IDAIOMB+40
IOMFL    EQU   IOMFLAGS
IOMAPEND EQU   IOMFL
IOMAE    EQU   IOMAPEND
IOMPGFIX EQU   IOMFL
IOMCSW   EQU   IOMFL
IOMDDR   EQU   IOMFL+1
IOMEEXIT EQU   IOMFL+1
IOMIRBSW EQU   IOMFL+1
IOMSTIND EQU   IOMFLAGS+2
IOMEOVW  EQU   IOMSTIND
IOMSRBM  EQU   IOMSTIND
IOMSR    EQU   IOMSTIND
IOMCKEY  EQU   IDAIOMB+43
IOMLOCK  EQU   IDAIOMB+45
IOMNBUF  EQU   IDAIOMB+48
IOMSAVER EQU   IDAIOMB+52
IOMSAVE0 EQU   IOMSAVER
IOMSAVE5 EQU   IOMSAVER+20
IOMSAVE6 EQU   IOMSAVER+24
IOMSAVEC EQU   IOMSAVER+48
IOMSAVEE EQU   IOMSAVER+56
IOMUFLD  EQU   IDAIOMB+120
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPROC  EQU   IOSB+3
IOSASID  EQU   IOSB+6
IOSPGAD  EQU   IOSB+8
IOSPKEY  EQU   IOSB+12
IOSIDR   EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00059 EQU   IOSB+20
IOSCSW   EQU   @NM00059+1
IOSTATUS EQU   IOSCSW+3
IOSTSB   EQU   IOSTATUS+1
IOSSRB   EQU   IOSB+28
IOSUSE   EQU   IOSB+32
IOSAPMSK EQU   IOSB+40
IOSSNS   EQU   IOSB+42
IOSIPIB  EQU   IOSB+44
IOSRST   EQU   IOSB+72
IOSVST   EQU   IOSB+76
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEK   EQU   IOSB+92
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
IQESECT  EQU   0
IQELNK   EQU   IQESECT
IQEIRB   EQU   IQESECT+8
IQEFLAGS EQU   IQEIRB
IQETCB   EQU   IQESECT+12
IDAPLHDR EQU   0
IDAPLH   EQU   0
PLHFLG1  EQU   IDAPLH+2
PLHASYRQ EQU   PLHFLG1
PLHFLG2  EQU   IDAPLH+3
PLHEFLGS EQU   IDAPLH+4
PLHFLG3  EQU   IDAPLH+6
PLHAFLGS EQU   IDAPLH+7
PLHCRBA  EQU   IDAPLH+28
PLHJORBA EQU   PLHCRBA
PLHJCODE EQU   IDAPLH+40
PLHRSCS  EQU   IDAPLH+43
PLHDIOB  EQU   IDAPLH+76
PLHRETO  EQU   IDAPLH+116
PLHRET1  EQU   IDAPLH+120
PLHEOVPT EQU   IDAPLH+180
PLHIXSPL EQU   IDAPLH+200
PLHSSRBA EQU   PLHIXSPL
PLHWAX   EQU   IDAPLH+232
PLHKEYPT EQU   IDAPLH+248
PLHTMRPL EQU   IDAPLH+265
PLHEND   EQU   IDAPLH+280
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00116 EQU   RBSECT+10
@NM00117 EQU   @NM00116
RBTRSVRB EQU   @NM00117
@NM00119 EQU   @NM00116+1
RBETXR   EQU   @NM00119
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00126 EQU   RBSECT+28
@NM00127 EQU   @NM00126
IRBEND   EQU   RBSECT+96
@NM00130 EQU   RBSECT+96
RBRSV138 EQU   @NM00130+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWAGR02 EQU   SDWAGRSV+8
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAFMID EQU   SDWA+236
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLC   EQU   SRB+12
SRBPTCB  EQU   SRBFLC+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
CVTMAP   EQU   0
CVT0EF00 EQU   CVTMAP+4
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIXAVL EQU   CVTMAP+124
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
IQEEND   EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
PLHKEY   EQU   0
PLHPDL   EQU   0
PLHPDLE  EQU   0
PLHRRN   EQU   0
CVTPTR   EQU   FLCCVT
IOSM     EQU   IOSEEK
CCWSTOP  EQU   IOSCSW
CPAWSIDN EQU   IOMSAVE6
@NM00006 EQU   IOSCOD
IOSECB7  EQU   @NM00006
IOSECB3  EQU   IOSECB7
@NM00010 EQU   IOSSNS
IOSEQCHK EQU   @NM00010
IOSFP    EQU   @NM00010+1
@NM00014 EQU   IOSTSB
IOSPCHKB EQU   @NM00014
@NM00019 EQU   RBSTAB2
RBIQENA  EQU   @NM00019
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
PLHEXTEN EQU   PLHEND
PLHBMWRK EQU   PLHEXTEN+5
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSDMP  EQU   CVTS01+232
CVTIOBP  EQU   CVTS01+360
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTVPSIB EQU   CVTS01+456
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
BUFCRSC1 EQU   BUFCAVL
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00131 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PLHBMSV5 EQU   PLHEXTEN+24
PLHBMSV4 EQU   PLHEXTEN+20
PLHBMSV3 EQU   PLHEXTEN+16
PLHBMSV2 EQU   PLHEXTEN+12
PLHBMSV1 EQU   PLHEXTEN+8
PLHRDCNT EQU   PLHEXTEN+6
PLHBMSOV EQU   PLHBMWRK
PLHBEUC  EQU   PLHBMWRK
PLHBMRDF EQU   PLHBMWRK
@NM00080 EQU   PLHEXTEN+4
PLHRESR1 EQU   PLHEXTEN
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00064 EQU   IOSPCISC+4
@NM00063 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00062 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
@NM00020 EQU   @NM00019
@NM00016 EQU   @NM00014
@NM00015 EQU   @NM00014
@NM00013 EQU   @NM00010+1
@NM00012 EQU   @NM00010
@NM00011 EQU   @NM00010
@NM00009 EQU   IOSECB7
NOTPERM  EQU   IOSECB3
@NM00008 EQU   IOSECB3
@NM00007 EQU   @NM00006
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00187 EQU   CVTFIX+248
@NM00186 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00185 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00184 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBSTAFX EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00183 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00182 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00181 EQU   SRB+40
@NM00180 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBFLNK  EQU   SRB+4
SRBID    EQU   SRB
@NM00179 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00178 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00177 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00176 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00175 EQU   SDWADDAT+3
@NM00174 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00173 EQU   SDWADDAT+1
@NM00172 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00171 EQU   SDWADUMP+2
@NM00170 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00169 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00168 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00167 EQU   SDWAACF3
@NM00166 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00165 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00164 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00163 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00162 EQU   SDWA+239
@NM00161 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
@NM00160 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00159 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00158 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00157 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00156 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00155 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00154 EQU   SDWAINC2
@NM00153 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00152 EQU   SDWAILC2
@NM00151 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00150 EQU   SDWANXT2
@NM00149 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00148 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00147 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00146 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00145 EQU   SDWAINC1
@NM00144 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00143 EQU   SDWAILC1
@NM00142 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00141 EQU   SDWANXT1
@NM00140 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00139 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00138 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00137 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00136 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00135 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00134 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00133 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00132 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00130+8
PRBEND   EQU   @NM00130+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00130+6
RBRSV136 EQU   @NM00130+4
RBRSV135 EQU   @NM00130
@NM00129 EQU   RBSECT+32
@NM00128 EQU   @NM00126+1
RBSCF    EQU   @NM00127
RBPGMQ1  EQU   RBPGMQ+1
@NM00125 EQU   RBPGMQ
@NM00124 EQU   RBSECT+16
@NM00123 EQU   @NM00119
@NM00122 EQU   @NM00119
RBIQETP  EQU   @NM00119
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00119
@NM00121 EQU   @NM00119
@NM00120 EQU   @NM00119
RBPMSVRB EQU   @NM00117
RBATNXIT EQU   @NM00117
@NM00118 EQU   @NM00117
RBWAITP  EQU   @NM00117
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00117
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00115 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00114 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00113 EQU   RBOPSWB2
@NM00112 EQU   XRBPSW
@NM00111 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00110 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00109 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00108 EQU   XSTAB1
@NM00107 EQU   RBBASIC+8
@NM00106 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00105 EQU   RBPRFX
PLHERRET EQU   IDAPLH+276
PLHASCB  EQU   IDAPLH+272
PLHECB   EQU   IDAPLH+268
@NM00079 EQU   IDAPLH+266
@NM00078 EQU   PLHTMRPL
PLHTMIOB EQU   PLHTMRPL
PLHTMINX EQU   PLHTMRPL
PLHTMDTA EQU   PLHTMRPL
PLHTMDIW EQU   PLHTMRPL
PLHTMBUF EQU   PLHTMRPL
PLHTERM  EQU   PLHTMRPL
PLHDRMSK EQU   IDAPLH+264
PLHR13   EQU   IDAPLH+260
PLHPARM1 EQU   IDAPLH+256
PLHDRRSC EQU   IDAPLH+252
PLHSLRBA EQU   IDAPLH+244
PLHSRCSG EQU   IDAPLH+242
PLHNOSEG EQU   IDAPLH+240
PLHLLOR  EQU   IDAPLH+236
PLHXPLH  EQU   PLHWAX
@NM00077 EQU   PLHIXSPL+8
PLHIXBFC EQU   PLHIXSPL+4
PLHHIREC EQU   PLHSSRBA
PLHISPLP EQU   IDAPLH+196
PLHRBUFC EQU   IDAPLH+192
PLHIBUFC EQU   IDAPLH+188
PLHNRBA  EQU   IDAPLH+184
PLHDDDD  EQU   PLHEOVPT
PLHAR14  EQU   IDAPLH+176
@NM00076 EQU   IDAPLH+172
@NM00075 EQU   IDAPLH+168
PLHASAVE EQU   IDAPLH+164
PLHRETOS EQU   IDAPLH+118
PLHCHAIN EQU   IDAPLH+112
PLHAMB   EQU   IDAPLH+108
PLHSAVE6 EQU   IDAPLH+104
PLHSAVE5 EQU   IDAPLH+100
PLHSAVE4 EQU   IDAPLH+96
PLHSAVE3 EQU   IDAPLH+92
PLHSAVE2 EQU   IDAPLH+88
PLHSAVE1 EQU   IDAPLH+84
PLHARET  EQU   IDAPLH+80
PLHIIOB  EQU   PLHDIOB
PLHSRSID EQU   IDAPLH+74
PLHRDFC  EQU   IDAPLH+72
PLHRDFP  EQU   IDAPLH+68
PLHFSP   EQU   IDAPLH+64
PLHRECP  EQU   IDAPLH+60
PLHNBUFC EQU   IDAPLH+56
PLHDBUFC EQU   IDAPLH+52
PLHLRECL EQU   IDAPLH+48
PLHARDB  EQU   IDAPLH+44
@NM00074 EQU   PLHRSCS
PLHDBPER EQU   PLHRSCS
PLHDSERR EQU   PLHRSCS
PLHASYER EQU   PLHRSCS
@NM00073 EQU   PLHRSCS
PLHBUFHD EQU   PLHRSCS
PLHINEOV EQU   PLHRSCS
PLHEOVR  EQU   IDAPLH+42
PLHRCODE EQU   IDAPLH+41
PLHUCODE EQU   PLHJCODE
PLHJNRBA EQU   IDAPLH+36
PLHJRNLL EQU   IDAPLH+32
PLHUPECB EQU   PLHJORBA
PLHDSIDA EQU   IDAPLH+24
PLHCRPL  EQU   IDAPLH+20
PLHMRPL  EQU   IDAPLH+16
PLHBFRNO EQU   IDAPLH+15
PLHFRCNT EQU   IDAPLH+14
PLHRMIN  EQU   IDAPLH+13
PLHDSTYP EQU   IDAPLH+12
PLHACB   EQU   IDAPLH+8
PLHRAE   EQU   PLHAFLGS
PLHRABWD EQU   PLHAFLGS
PLHIOSID EQU   PLHAFLGS
PLHDBDC  EQU   PLHAFLGS
PLHVAMB  EQU   PLHAFLGS
PLHIOSRQ EQU   PLHAFLGS
PLHDRLM  EQU   PLHAFLGS
PLHEOVDF EQU   PLHFLG3
PLHRVRS  EQU   PLHFLG3
PLHBWD   EQU   PLHFLG3
PLHSLVLD EQU   PLHFLG3
PLHRAHD  EQU   PLHFLG3
PLHSRBSG EQU   PLHFLG3
@NM00072 EQU   PLHEFLGS+1
PLHRSTRT EQU   PLHEFLGS+1
PLHDSCAN EQU   PLHEFLGS
PLHINVAL EQU   PLHEFLGS
PLHEODX  EQU   PLHEFLGS
PLHNOADV EQU   PLHEFLGS
PLHSRINV EQU   PLHEFLGS
PLHSKPER EQU   PLHEFLGS
PLH1ST   EQU   PLHEFLGS
PLHNOSPC EQU   PLHEFLGS
PLHIWAIT EQU   PLHFLG2
PLHSVADV EQU   PLHFLG2
PLHCIINS EQU   PLHFLG2
PLHKRE   EQU   PLHFLG2
PLHADDTE EQU   PLHFLG2
PLHKEYMD EQU   PLHFLG2
PLHSQINS EQU   PLHFLG2
PLHUPD   EQU   PLHFLG2
PLHSR    EQU   PLHFLG1
PLHDRPND EQU   PLHFLG1
PLHRDEXC EQU   PLHFLG1
PLHSSR   EQU   PLHFLG1
PLHASKBF EQU   PLHFLG1
PLHENDRQ EQU   PLHFLG1
PLHEOVW  EQU   PLHFLG1
PLHATV   EQU   IDAPLH+1
PLHAVL   EQU   IDAPLH
PLHIOSDQ EQU   IDAPLHDR+12
PLHDRCUR EQU   IDAPLHDR+10
PLHDRMAX EQU   IDAPLHDR+8
PLHDRREQ EQU   IDAPLHDR+4
PLHELTH  EQU   IDAPLHDR+2
PLHCNT   EQU   IDAPLHDR+1
PLHID    EQU   IDAPLHDR
IQEOUTLM EQU   IQESECT+20
IQEDCB   EQU   IQESECT+16
IQETCBA  EQU   IQETCB+1
IQESTAT2 EQU   IQETCB
IQEIRBA  EQU   IQEIRB+1
@NM00071 EQU   IQEFLAGS
@NM00070 EQU   IQEFLAGS
@NM00069 EQU   IQEFLAGS
@NM00068 EQU   IQEFLAGS
@NM00067 EQU   IQEFLAGS
@NM00066 EQU   IQEFLAGS
@NM00065 EQU   IQEFLAGS
IQEPURGE EQU   IQEFLAGS
IQEPARAM EQU   IQESECT+4
IQELNKA  EQU   IQELNK+1
IQESTAT1 EQU   IQELNK
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00061 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00060 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSRES4A EQU   IOSB+36
IOSCSWRC EQU   IOSCSW+5
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00059
IOSOPT2X EQU   IOSOPT2
IOSIGP   EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00058 EQU   IOSPKEY
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSNOTRS EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
IOMSTCB  EQU   IDAIOMB+128
IOMSRBP  EQU   IDAIOMB+124
IOMNXT1  EQU   IDAIOMB+116
IOMSAVEF EQU   IOMSAVER+60
IOMSAVED EQU   IOMSAVER+52
IOMSAVEB EQU   IOMSAVER+44
IOMSAVEA EQU   IOMSAVER+40
IOMSAVE9 EQU   IOMSAVER+36
IOMSAVE8 EQU   IOMSAVER+32
IOMSAVE7 EQU   IOMSAVER+28
IOMSAVE4 EQU   IOMSAVER+16
IOMSAVE3 EQU   IOMSAVER+12
IOMSAVE2 EQU   IOMSAVER+8
IOMSAVE1 EQU   IOMSAVER+4
IOMNSEG  EQU   IDAIOMB+50
IOMNMOD  EQU   IDAIOMB+46
IOMPFERR EQU   IDAIOMB+44
IOMSLOC  EQU   IOMSTIND
IOMLLOCK EQU   IOMSTIND
IOMEOVXC EQU   IOMSTIND
IOMEOVTS EQU   IOMSTIND
IOMAMUSE EQU   IOMSTIND
@NM00057 EQU   IOMFL+1
@NM00056 EQU   IOMFL+1
IOMCPRB  EQU   IOMFL+1
IOMADERR EQU   IOMFL
IOMCBERR EQU   IOMFL
@NM00055 EQU   IOMFL
IOMPURGE EQU   IOMFL
IOMNE    EQU   IOMAPEND
IOMBID   EQU   IDAIOMB
IOCOEND  EQU   IOCOM+128
IOCPATCH EQU   IOCOM+124
IOCUCBBM EQU   IOCOM+120
IOCIOSDQ EQU   IOCOM+112
IOCIOSEQ EQU   IOCOM+108
IOCSVCF  EQU   IOCOM+104
IOCTCCW  EQU   IOCOM+100
IOCRSVTB EQU   IOCOM+96
IOCMFCNT EQU   IOCOM+92
IOCMFHK  EQU   IOCOM+88
IOCGENA  EQU   IOCOM+84
IOCCCH   EQU   IOCOM+80
IOCASYNQ EQU   IOCOM+76
IOCLCHTB EQU   IOCOM+72
IOCATTBL EQU   IOCOM+68
IOCOMEX  EQU   IOCOM+64
IOCSYNCH EQU   IOCOM+56
IOCCATLK EQU   IOCOM+48
IOCPRGID EQU   IOCOM+44
IOCIOSCP EQU   IOCOM+40
IOCORMGT EQU   IOCOM+36
IOCVOID  EQU   IOCOM+32
IOCSTIO  EQU   IOCOM+28
@NM00054 EQU   IOCOM+24
@NM00053 EQU   IOCOM+20
IOCINT   EQU   IOCOM+16
IOCCTBL  EQU   IOCOM+12
IOCHIO   EQU   IOCOM+8
IOCPST   EQU   IOCOM+4
IOCPGCT  EQU   IOCOM+2
IOCVOICT EQU   IOCOM
@NM00052 EQU   FRRSFLGS+1
@NM00051 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00050 EQU   DEBACS08+12
@NM00049 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00048 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00047 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
CPACCWTC EQU   CPACCW+24
CPACCWSI EQU   CPACCW+16
CPACCWSS EQU   CPACCW+8
CPACCWSK EQU   CPACCW
CPANXT1  EQU   IDACPA+88
CPAWSECT EQU   IDACPA+87
CPARSECT EQU   IDACPA+86
CPATKOFL EQU   CPAFLAG2
CPAPFENT EQU   CPAFLAG2
CPAXLRA  EQU   CPAFLAG2
@NM00046 EQU   CPAFLAG1
CPACHNED EQU   CPAFLAG1
CPARRPS  EQU   CPAFLAG1
CPAWRPS  EQU   CPAFLAG1
CPAVPLV  EQU   CPASTAT1
CPASSECT EQU   IDACPA+82
CPABLKSZ EQU   IDACPA+76
CPAVPL   EQU   IDACPA+64
CPAIDAL  EQU   IDACPA+60
@NM00045 EQU   CPARPHAD+7
CPARSID  EQU   CPARSEEK+2
CPARBB   EQU   CPARSEEK
@NM00044 EQU   CPARPHAD
CPAFWCNT EQU   IDACPA+48
CPAWPHR  EQU   CPAWPHAD+7
CPAWCHR  EQU   CPAWSEEK+2
CPAWBB   EQU   CPAWSEEK
@NM00043 EQU   CPAWPHAD
CPARREAL EQU   IDACPA+24
CPALEN   EQU   IDACPA+2
@NM00042 EQU   IDACPA+1
CPAID    EQU   IDACPA
IOMXRBPT EQU   IOMXECB+1
IOMXIOCC EQU   IOMXRSLT
IOMXPOST EQU   IOMXRSLT
IOMXWAIT EQU   IOMXECB
IOMXR14  EQU   IDAIOMBX+16
IOMXRPL  EQU   IOMXPDET+8
IOMXR13S EQU   IOMXPDET+4
@NM00041 EQU   IOMXPDET+2
IOMXBFLG EQU   IOMXPDET
@NM00040 EQU   IDAIOMBX+2
@NM00039 EQU   IOMXFLGS
IOMXSCAN EQU   IOMXFLGS
IOMXUSE  EQU   IOMXFLGS
IOMXLOCK EQU   IDAIOMBX
AMBXBM2S EQU   IDAAMBXN+20
AMBXRDCT EQU   AMBXCSWD+2
@NM00038 EQU   AMBXCSWD
AMBXECB  EQU   IDAAMBXN+12
AMBXASCB EQU   IDAAMBXN+8
@NM00037 EQU   AMBXEOV+7
AMBXEVRC EQU   AMBXEOV+6
AMBXEOVR EQU   AMBXEOV+5
AMBXRSC  EQU   AMBXEOV+4
AMBXEVPT EQU   AMBXEOV
BUFCEND  EQU   IDABUFC+64
BUFCUCDN EQU   IDABUFC+60
BUFCUCUP EQU   IDABUFC+56
BUFCMDBT EQU   IDABUFC+52
BUFCHAIN EQU   IDABUFC+48
BUFXORBA EQU   IDABUFC+44
BUFXIRBA EQU   IDABUFC+40
BUFCNXT2 EQU   IDABUFC+37
BUFCIDXL EQU   IDABUFC+36
BUFCDSPC EQU   IDABUFC+32
BUFCWLEN EQU   BUFCINV
BUFCBAD  EQU   IDABUFC+20
BUFCCPA  EQU   IDABUFC+16
BUFCORBA EQU   IDABUFC+12
BUFCDDDD EQU   IDABUFC+8
BUFCAMB  EQU   BUFCPLH
@NM00036 EQU   BUFCFLG2
BUFCEOD  EQU   BUFCFLG2
BUFCBSYW EQU   BUFCFLG2
BUFCBSYR EQU   BUFCFLG2
BUFCNLAS EQU   BUFCFLG2
BUFCFIX  EQU   BUFCIOFL
BUFCXEDB EQU   BUFCIOFL
BUFCREAL EQU   BUFCIOFL
BUFCEXC  EQU   BUFCFLG1
BUFCVAL  EQU   BUFCFLG1
BUFCINS  EQU   BUFCFLG1
BUFCSEG  EQU   BUFCFLG1
BUFCUPG  EQU   BUFCFLG1
BUFCUCNT EQU   BUFCAVL
@NM00035 EQU   IDABUFDR+16
BUFDBUFC EQU   IDABUFDR+12
@NM00034 EQU   BUFDRFLG
BUFDRAVL EQU   BUFDRFLG
BUFDRREL EQU   BUFDRFLG
BUFDRTSB EQU   IDABUFDR+10
BUFDRMAX EQU   BUFDRCIX
BUFDRPFN EQU   IDABUFDR+8
BUFDRLEN EQU   IDABUFDR+2
BUFDRNO  EQU   IDABUFDR+1
BUFDRID  EQU   IDABUFDR
AMBTRACE EQU   IDAAMB+120
AMBVIOT  EQU   IDAAMB+116
AMBSZCP  EQU   IDAAMB+114
AMBSZFW  EQU   IDAAMB+112
AMBSZWR  EQU   IDAAMB+110
AMBSZRD  EQU   IDAAMB+108
AMBEXEX  EQU   IDAAMB+100
AMBWSHD  EQU   IDAAMB+96
AMBCPA   EQU   IDAAMB+92
AMBBM2SH EQU   IDAAMB+88
AMBRDCNT EQU   AMBCSWD1+2
@NM00033 EQU   AMBCSWD1+1
@NM00032 EQU   AMBAFLG
AMBCFX   EQU   AMBAFLG
AMBSIS   EQU   AMBAFLG
AMBDFR   EQU   AMBAFLG
@NM00031 EQU   AMBAFLG
AMBUPLH  EQU   IDAAMB+80
AMBPAMBL EQU   IDAAMB+76
AMBPIXP  EQU   IDAAMB+72
@NM00030 EQU   IDAAMB+68
AMBIWA   EQU   IDAAMB+64
AMBWKA   EQU   IDAAMB+60
AMBAMBXN EQU   AMBEOVPT
AMBEDB   EQU   IDAAMB+52
AMBRPT   EQU   IDAAMB+50
AMBPUG   EQU   AMBFLG2
AMBBUSY  EQU   AMBOFLGS
AMBEXFG  EQU   AMBOFLGS
@NM00029 EQU   AMBOFLGS
AMBOPEN  EQU   AMBOFLGS
@NM00028 EQU   AMBOFLGS
AMBDEBAD EQU   AMBDEBPT+1
AMBIFLGS EQU   AMBDEBPT
AMBAMETH EQU   IDAAMB+43
AMBSDS   EQU   AMBINFL
AMBUPX   EQU   AMBINFL
AMBUCRA  EQU   AMBINFL
AMBSCRA  EQU   AMBINFL
AMBCAT   EQU   AMBINFL
@NM00027 EQU   AMBINFL
@NM00026 EQU   AMBINFL
AMBTIOT  EQU   IDAAMB+40
@NM00025 EQU   IDAAMB+38
AMBDDSN  EQU   IDAAMB+35
AMBCDSN  EQU   IDAAMB+32
AMBIOMB  EQU   AMBIOBAD
@NM00024 EQU   AMBDSORG+1
AMBDORGA EQU   AMBDSORG+1
@NM00023 EQU   AMBDSORG
AMBINBUF EQU   AMBFLG1
AMBJRN   EQU   AMBFLG1
AMBUBF   EQU   AMBFLG1
AMBSPEED EQU   AMBFLG1
AMBPCAT  EQU   AMBFLG1
AMBMCAT  EQU   AMBFLG1
AMBTYPE  EQU   AMBFLG1
AMBCREAT EQU   AMBFLG1
@NM00022 EQU   AMBFLG0
AMBSWSP  EQU   AMBFLG0
AMBPSDS  EQU   AMBFLG0
AMBDSB   EQU   IDAAMB+20
AMBCACB  EQU   IDAAMB+16
AMBPH    EQU   IDAAMB+12
AMBLINK  EQU   IDAAMB+4
AMBLEN   EQU   IDAAMB+2
AMBRSC   EQU   IDAAMB+1
AMBID    EQU   IDAAMB
ABPAE    EQU   IEZABP+16
ABPNE    EQU   IEZABP+12
ABPABP   EQU   IEZABP+8
ABPSIOD  EQU   IEZABP+4
ABPLEN   EQU   IEZABP+1
ABPID    EQU   IEZABP
@NM00018 EQU   @NM00017
ECBWAIT  EQU   ECB
@NM00005 EQU   CCW3+4
@NM00004 EQU   CCW3
@NM00003 EQU   CCW2+4
CCW2DA   EQU   CCW2+1
CCWCNT   EQU   CCW1+6
@NM00002 EQU   CCW1+5
@NM00001 EQU   CCWFLG
CCWNTB   EQU   CCWFLG
CCWSLIB  EQU   CCWFLG
CCWCCB   EQU   CCWFLG
CCWDCB   EQU   CCWFLG
@NM00104 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00103 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00102 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00101 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00100 EQU   FLCFSA
@NM00099 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00098 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00097 EQU   FLCIOA
@NM00096 EQU   FLCMCLA+15
@NM00095 EQU   FLCMCLA+14
@NM00094 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00093 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00092 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00091 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00090 EQU   FLCPER
@NM00089 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00088 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00087 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00086 EQU   FLCPIILC
@NM00085 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00084 EQU   FLCSVILC
@NM00083 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00082 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00081 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00205 EQU   EXIT
@RF00209 EQU   @RC00207
@RF00238 EQU   EXIT
@RF00265 EQU   FINAL
@RT00289 EQU   SETBITS
@RT00291 EQU   SETBITS
@RT00297 EQU   SETBITS
@RF00287 EQU   @RC00282
@RF00329 EQU   @RC00320
@RT00429 EQU   EXIT
@RT00449 EQU   ASYNCHRQ
FOUND    EQU   @EL00002
@RF00543 EQU   @RC00540
@RT00572 EQU   ERREXIT
@RT00586 EQU   SETABEND
@ENDDATA EQU   *
         END   IDA121A4,(C'PLS0038',0701,78180)
