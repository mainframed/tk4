         TITLE 'CMS DEFINE GDG - IGG0CLA4                              *
                        '
IGG0CLA4 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLA4  78.117'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPDGDS'
         EJECT
         B     @PB00002                                            0190
IGGPDGDS DS    0H                                                  0191
         ENTRY IGGPDGDS
         DROP @15
Z003     DS    0H                                                  0193
Z003DGDS DS    0H                                                  0194
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
*                                                                  0199
         USING *,12
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF G0000V00 RECORD AND IF SO CONNECT TO GDG BASE    */
*   /* ENTRY                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0200
*   IF CCACD1=RCS&CTGFVTYP=CTGFVALN THEN/* CKECK FOR NO ERROR AND  0200
*                                      NON-VSAM ENTRY                */
         CLI   CCACD1(R11),0                                       0200
         BNE   @RF00200                                            0200
         L     @10,CCACPL(,R11)                                    0200
         L     @10,CTGFVT(,@10)                                    0200
         CLI   CTGFVTYP(@10),C'A'                                  0200
         BNE   @RF00200                                            0200
*     DO;                           /* OK                            */
*                                                                  0201
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF GDG DATA SET                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0202
*       IF GDGBASCI^=N THEN         /* IF GDG BASE CI SET THEN     0202
*                                      G0000V00                      */
         L     @10,CCACMSWA(,R11)                                  0202
         ICM   @05,7,GDGBASCI(@10)                                 0202
         BZ    @RF00202                                            0202
*         DO;                                                      0203
*                                                                  0203
*           /*********************************************************/
*           /*                                                       */
*           /* GET GDG BASE                                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0204
*           CCASRID=GDGBASCI;                                      0204
         MVC   CCASRID(3,R11),GDGBASCI(@10)                        0204
*           DGBASECI=GDGBASCI;      /* SAVE CI TO GDG BASE   @ZA04617*/
         MVC   DGBASECI(3,@10),GDGBASCI(@10)                       0205
*           TEMPCI=RCDCINO;         /* SAVE CI TO NVSAM DS   @ZA02530*/
         L     @05,CCAURAB(,R11)                                   0206
         L     @05,CCACPE1(,@05)                                   0206
         MVC   TEMPCI(3,@10),RCDCINO(@05)                          0206
*           DO;                                                    0207
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=ON;           /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0210
         NI    CCAF1KEY(R11),B'11100111'                           0210
*             CCAURAB=ADDR(CCARAB2);/* SET RAB PTR                   */
*                                                                  0211
         LA    @10,CCARAB2(,R11)                                   0211
         ST    @10,CCAURAB(,R11)                                   0211
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0212
*Z005GET:                                                          0212
*             CALL IGGPGET;         /* GET RECORD                    */
Z005GET  L     @15,@CV03650                                        0212
         BALR  @14,@15                                             0212
*           END;                                                   0213
*           TEMPCPE2=CCACPE22;      /* SAVE REPEATING INFO           */
         L     @10,CCACMSWA(,R11)                                  0214
         MVC   TEMPCPE2(4,@10),CCACPE22(R11)                       0214
*           IF CCACD1^=RCS THEN     /* GDG BASE GET OK?              */
         CLI   CCACD1(R11),0                                       0215
         BE    @RF00215                                            0215
*             CALL EXIT;            /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0216
*           ELSE                                                   0217
*             ;                     /* OK                            */
*                                                                  0217
@RF00215 DS    0H                                                  0218
*           /*********************************************************/
*           /*                                                       */
*           /* IF CONTAINING CATALOG IS RAC-DEFINED, CHECK USER'S    */
*           /* AUTHORIZATION TO UPDATE THE GDG BASE.         @Z40RSRC*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0218
*           IF CAXRAC=ON THEN       /* IF CAT RAC DEF'D      @Z40RSRC*/
         L     @10,CCAACB(,R11)                                    0218
         L     @10,ACBUAPTR(,@10)                                  0218
         TM    CAXRAC(@10),B'00010000'                             0218
         BNO   @RF00218                                            0218
*             DO;                   /*                       @Z40RSRC*/
*                                                                  0219
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLDC                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0220
*Z006RACG:                                                         0220
*               CALL IGGPRACG;      /* CHK RAC AUTH          @Z40RSRC*/
Z006RACG L     @15,@CV03649                                        0220
         BALR  @14,@15                                             0220
*               IF CCACD1^=RCS THEN /* IF BASE WAS DEFINED AND USER
*                                      NOT AUTH'D            @Z40RSRC*/
         CLI   CCACD1(R11),0                                       0221
         BE    @RF00221                                            0221
*                 CALL EXIT;        /* EXIT                  @Z40RSRC*/
         BAL   @14,EXIT                                            0222
*               ELSE                                               0223
*                 ;                 /* ACCESS IS OK          @Z40RSRC*/
@RF00221 DS    0H                                                  0224
*             END;                  /*                       @Z40RSRC*/
*           ELSE                                                   0225
*             ;                     /* CAT NOT RAC DEF'D     @Z40RSRC
*                                      ADDING BACK PTR               */
@RF00218 DS    0H                                                  0226
*           DGML=CTGFVENT->ENTRYNAM(GDGVLEN-FR:GDGVLEN-BR);/* LEVEL
*                                      NUMBER                @YM04122*/
         L     @10,CCAR5REC(,R11)                                  0226
         L     @05,CCACMSWA(,R11)                                  0226
         SLR   @01,@01                                             0226
         IC    @01,GDGVLEN(,@05)                                   0226
         L     @15,CCACPL(,R11)                                    0226
         L     @15,CTGFVT(,@15)                                    0226
         L     @15,CTGFVENT(,@15)                                  0226
         ALR   @15,@01                                             0226
         AL    @15,@CF04411                                        0226
         MVC   DGML(4,@10),ENTRYNAM(@15)                           0226
*           TEMPDGML=DGML;          /* SAVE GEN LEVEL        @ZA00964*/
         MVC   TEMPDGML(4,@05),DGML(@10)                           0227
*           PACK(DGPAK,DGML);       /* CONVERT LEVEL TO BINARY       */
         PACK  DGPAK(8,@10),DGML(4,@10)                            0228
*           CVB(AFCURLV,DGPAK);                                    0229
*                                                                  0229
         CVB   @10,DGPAK(,@10)                                     0229
         ST    @10,AFCURLV(,@05)                                   0229
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR DUPLICATE GENERATION LEVEL BUT UNIQUE       */
*           /* VERSION LEVEL                                 @ZA04617*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0230
*Z007VERS:                                                         0230
*           CALL IGGPVERS;                                         0230
Z007VERS BAL   @14,IGGPVERS                                        0230
*           IF CCACD1^=RCS THEN     /* ANY ERRORS            @ZA04617*/
         CLI   CCACD1(R11),0                                       0231
         BE    @RF00231                                            0231
*             CALL EXIT;            /* YES, ERROR EXIT       @ZA04617*/
         BAL   @14,EXIT                                            0232
*           DGASCI=RCDCINO;         /* SET CI OF BASE ENT            */
@RF00231 L     @10,CCAR5REC(,R11)                                  0233
         L     @05,CCAURAB(,R11)                                   0233
         L     @05,CCACPE1(,@05)                                   0233
         MVC   DGASCI(3,@10),RCDCINO(@05)                          0233
*           DGML=TEMPDGML;          /* REFRESH GENERATION LEVEL    0234
*                                                            @ZA04617*/
         L     @05,CCACMSWA(,R11)                                  0234
         MVC   DGML(4,@10),TEMPDGML(@05)                           0234
*           DGASTYPE='B';           /* SET ASSO TYPE                 */
         MVI   DGASTYPE(@10),C'B'                                  0235
*Z008BCFA:                                                         0236
*           CALL IGGPBCFA;          /* BUILD CPL/FPL FOR             */
*                                                                  0236
Z008BCFA BAL   @14,IGGPBCFA                                        0236
*           /*********************************************************/
*           /*                                                       */
*           /* ADD GDG BASE ASSOCIATION TO THE NONVSAM GDG RECORD AND*/
*           /* WRITE OUT NONVSAM CATALOG RECORD              @ZA04617*/
*           /* CALL TO MODULE IGG0CLAV                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0237
*Z009MOD:                                                          0237
*           CALL IGGPMOD;                                          0237
Z009MOD  L     @15,@CV03651                                        0237
         BALR  @14,@15                                             0237
*           IF CCACD1^=RCS THEN     /* MODIFY OK?                    */
         CLI   CCACD1(R11),0                                       0238
         BE    @RF00238                                            0238
*             CALL EXIT;            /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0239
*           CCASRID=DGBASECI;       /* CI OF GDG BASE        @ZA04615*/
@RF00238 L     @10,CCACMSWA(,R11)                                  0240
         MVC   CCASRID(3,R11),DGBASECI(@10)                        0240
*           DO;                                                    0241
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=ON;           /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0244
         NI    CCAF1KEY(R11),B'11100111'                           0244
*             CCAURAB=ADDR(CCARAB2);/* SET RAB PTR                   */
*                                                                  0245
         LA    @10,CCARAB2(,R11)                                   0245
         ST    @10,CCAURAB(,R11)                                   0245
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0246
*Z011GET:                                                          0246
*             CALL IGGPGET;         /* GET RECORD                    */
Z011GET  L     @15,@CV03650                                        0246
         BALR  @14,@15                                             0246
*           END;                    /* RE-READ GDG BASE      @ZA04615*/
*           TEMPCPE2=CCACPE22;      /* SAVE RECORD POINTER   @ZA04615*/
         L     @10,CCACMSWA(,R11)                                  0248
         MVC   TEMPCPE2(4,@10),CCACPE22(R11)                       0248
*           IF CCACD1^=RCS THEN     /* ANY ERRORS ?          @ZA04615*/
         CLI   CCACD1(R11),0                                       0249
         BE    @RF00249                                            0249
*             CALL EXIT;            /* YES, ERROR EXIT       @ZA04615*/
         BAL   @14,EXIT                                            0250
*Z012GEXP:                                                         0251
*           CALL IGGPGEXP;          /* EXPAND GENLEVEL               */
@RF00249 DS    0H                                                  0251
Z012GEXP BAL   @14,IGGPGEXP                                        0251
*           IF DGML(1:1)=DZERO&DGWRAP=ON THEN/* IS GEN LEV WRAP    0252
*                                      AROUND                @YM05306*/
         L     @10,CCAR5REC(,R11)                                  0252
         CLI   DGML(@10),C'0'                                      0252
         BNE   @RF00252                                            0252
         TM    DGWRAP(@10),B'10000000'                             0252
         BNO   @RF00252                                            0252
*             AFCURLV=AFCURLV+WRAPVAL;/* INCREMENT BY 10000  @YM05306*/
*                                                                  0253
         L     @10,CCACMSWA(,R11)                                  0253
         LH    @05,@CH03693                                        0253
         AL    @05,AFCURLV(,@10)                                   0253
         ST    @05,AFCURLV(,@10)                                   0253
*           /*********************************************************/
*           /*                                                       */
*           /* UPDATE BASE TO SHOW NEW DATA SET ADD NEW ENTRY LEVEL  */
*           /* TO TABLE                                              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0254
*           DGCNT=DGCNT+ONE;        /* ADD NEW TO GENLEVEL           */
@RF00252 L     @10,CCACMSWA(,R11)                                  0254
         LA    @05,1                                               0254
         AH    @05,DGCNT(,@10)                                     0254
         STH   @05,DGCNT(,@10)                                     0254
*REGHIST:                                                          0255
*           DGTAB(DGCNT+ONE)=AFCURLV+ONE;/* INIT FOR INSERT          */
REGHIST  L     @10,CCACMSWA(,R11)                                  0255
         LH    @05,DGCNT(,@10)                                     0255
         ALR   @05,@05                                             0255
         L     @01,CCAR4REC(,R11)                                  0255
         L     @15,AFCURLV(,@10)                                   0255
         LA    @14,1                                               0255
         ALR   @14,@15                                             0255
         STH   @14,DGTAB(@05,@01)                                  0255
*           BINLEVEL=AFCURLV;       /* SET CURRENT GDG LEVEL @ZA02530*/
*                                                                  0256
         ST    @15,BINLEVEL(,@10)                                  0256
*           /*********************************************************/
*           /*                                                       */
*           /* ADD NEW GENERATION LEVEL TO GDG TABLE AND COMPRESS    */
*           /* TABLE TO GDG DIFFERENCE STRING                @ZA04617*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0257
*Z013STRG:                                                         0257
*           CALL IGGPSTRG;          /* UPDATE GDG BASE       @ZA04617*/
*                                                                  0257
Z013STRG BAL   @14,IGGPSTRG                                        0257
*           /*********************************************************/
*           /*                                                       */
*           /* ADD NEW GDG ASSOCIATION TO GDG BASE RECORD AND WRITE  */
*           /* GDG BASE RECORD                               @ZA04617*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0258
*Z014ASSO:                                                         0258
*           CALL IGGPASSO;          /* UPDATE GDG BASE       @ZA04617*/
Z014ASSO BAL   @14,IGGPASSO                                        0258
*           IF CCACD1^=RCS&CCACD1^=RCMXGRP THEN/* IF ANY ERRORS    0259
*                                                            @ZA02530*/
         CLI   CCACD1(R11),0                                       0259
         BE    @RF00259                                            0259
         CLI   CCACD1(R11),224                                     0259
         BE    @RF00259                                            0259
*             CALL EXIT;            /* ERROR EXIT            @ZA02530*/
         BAL   @14,EXIT                                            0260
*           TEMPRC=CCAPROB;         /* SAVE RC FROM MODIFY   @ZA00964*/
*                                                                  0261
@RF00259 L     @10,CCACMSWA(,R11)                                  0261
         MVC   TEMPRC(4,@10),CCAPROB(R11)                          0261
*           /*********************************************************/
*           /*                                                       */
*           /* SET CCAMODID='A4', CCAREASN=RSN0, CCARETRN=0          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0262
*           CCAPROB=IGGSEGID+(RSN0*K256)+0;/* CLEAR RETURN CODE    0262
*                                                            @ZA00964*/
*                                                                  0262
         MVC   CCAPROB(4,R11),@CF00035                             0262
*           /*********************************************************/
*           /*                                                       */
*           /* TEST IF OLD ENTRIES NEED DELETION                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0263
*           IF DGCNT>DGLMT THEN     /* IF COUNT GT LIMIT             */
         L     @05,CCAURAB(,R11)                                   0263
         L     @05,CCACPE1(,@05)                                   0263
         LH    @10,DGCNT(,@10)                                     0263
         SLR   @15,@15                                             0263
         IC    @15,DGLMT(,@05)                                     0263
         CR    @10,@15                                             0263
         BNH   @RF00263                                            0263
*             DO;                                                  0264
*               IF DGSR=ON THEN     /* SCRATCH SPECIFIED ?   @ZA01288*/
         TM    DGSR(@05),B'01000000'                               0265
         BNO   @RF00265                                            0265
*                 CTGSCR=ON;        /* SET SCRATCH ON IN CPL @ZA01288*/
         L     @10,CCACPL(,R11)                                    0266
         OI    CTGSCR(@10),B'00000010'                             0266
*               IF DGTD=OFF THEN    /* DELETE OLDEST OR ALL?         */
@RF00265 L     @10,CCAURAB(,R11)                                   0267
         L     @10,CCACPE1(,@10)                                   0267
         TM    DGTD(@10),B'10000000'                               0267
         BNZ   @RF00267                                            0267
*                 AFCDEL=ONE;       /* ONLY OLDEST                   */
         L     @10,CCACMSWA(,R11)                                  0268
         MVC   AFCDEL(2,@10),@CH00049                              0268
*               ELSE                /* ALL                           */
*                 AFCDEL=DGCNT-ONE; /* ALL TO BE DELETED             */
         B     @RC00267                                            0269
@RF00267 L     @10,CCACMSWA(,R11)                                  0269
         LH    @05,DGCNT(,@10)                                     0269
         BCTR  @05,0                                               0269
         STH   @05,AFCDEL(,@10)                                    0269
*               DO AFIDEL=ONE TO AFCDEL/* DELETE OLD ENTRIES         */
*                     WHILE CCACD1=RCS;                            0270
@RC00267 LA    @10,1                                               0270
         B     @DE00270                                            0270
@DL00270 CLI   CCACD1(R11),0                                       0270
         BNE   @DC00270                                            0270
*                 IF AFCDEL^=ONE THEN/* CHECK IF FIRST DATA SET      */
         L     @10,CCACMSWA(,R11)                                  0271
         CLC   AFCDEL(2,@10),@CH00049                              0271
         BE    @RF00271                                            0271
*                   DO;             /* REGET BASE IF NOT FIRST DELETE*/
*                     CCASRID=DGBASECI;                            0273
         MVC   CCASRID(3,R11),DGBASECI(@10)                        0273
*                     DO;                                          0274
*                       CCAF1KEY=OFF;/* GET BY CI NO.                */
*                       CCAF1KGE=OFF;/* NOT GET NEXT                 */
*                       CCAF1UP=ON; /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0277
         NI    CCAF1KEY(R11),B'11100111'                           0277
*                       CCAURAB=ADDR(CCARAB2);/* SET RAB PTR         */
*                                                                  0278
         LA    @10,CCARAB2(,R11)                                   0278
         ST    @10,CCAURAB(,R11)                                   0278
*                       /*********************************************/
*                       /*                                           */
*                       /* CALL TO MODULE IGG0CLBI                   */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0279
*Z017GET:                                                          0279
*                       CALL IGGPGET;/* GET RECORD                   */
Z017GET  L     @15,@CV03650                                        0279
         BALR  @14,@15                                             0279
*                     END;                                         0280
*                     TEMPCPE2=CCACPE22;/* **** TEMP SAVE CPE2       */
         L     @10,CCACMSWA(,R11)                                  0281
         MVC   TEMPCPE2(4,@10),CCACPE22(R11)                       0281
*                   END;                                           0282
*                 IF CCACD1=RCS THEN/* CONTINUE IF NO ERRORS         */
@RF00271 CLI   CCACD1(R11),0                                       0283
         BNE   @RF00283                                            0283
*                   DO;                                            0284
*Z018GEXP:                                                         0285
*                     CALL IGGPGEXP;/* EXPAND GENLEVELS              */
Z018GEXP BAL   @14,IGGPGEXP                                        0285
*                     DGWK=0;       /* RESET SWITCH          @YM05306*/
         L     @10,CCAR5REC(,R11)                                  0286
         SLR   @05,@05                                             0286
         ST    @05,DGWK(,@10)                                      0286
*                     IF DGTAB(1)=AFCURLV THEN/* DO NOT DELETE CUR.
*                                      ADN. D.S.                     */
         L     @05,CCAR4REC(,R11)                                  0287
         L     @15,CCACMSWA(,R11)                                  0287
         LH    @14,DGTAB(,@05)                                     0287
         C     @14,AFCURLV(,@15)                                   0287
         BNE   @RF00287                                            0287
*                       DO;                                        0288
*                         DGDEL=DGTAB(2);/* SAVE LEVEL TO BE DELETED
*                                                            @YM05306*/
         MVC   DGDEL(2,@15),DGTAB+2(@05)                           0289
*                         DGTAB(2)=DGIGNOR;                        0290
         MVC   DGTAB+2(2,@05),DGIGNOR                              0290
*                         IF DGTAB(1)^<WRAPVAL THEN/* CHECK IF WRAP
*                                      AROUND                @YM05306*/
         LH    @15,@CH03693                                        0291
         LH    @14,DGTAB(,@05)                                     0291
         CR    @14,@15                                             0291
         BL    @RF00291                                            0291
*                           DO;                                    0292
*                             DGTAB(1)=DGTAB(1)-WRAPVAL;/* DECREMENT
*                                      BY 10000              @YM05306*/
         SLR   @14,@15                                             0293
         STH   @14,DGTAB(,@05)                                     0293
*                             DGWK=1;/* SET SWITCH           @YM05306*/
         MVC   DGWK(4,@10),@CF00049                                0294
*                           END;                                   0295
*                       END;                                       0296
*                     ELSE          /* OK TO DELETE                  */
*                       DO;                                        0297
         B     @RC00287                                            0297
@RF00287 DS    0H                                                  0298
*                         DGDEL=DGTAB(1);/* SAVE LEVEL TO BE DELETED
*                                                            @YM05306*/
         L     @10,CCACMSWA(,R11)                                  0298
         L     @05,CCAR4REC(,R11)                                  0298
         MVC   DGDEL(2,@10),DGTAB(@05)                             0298
*                         DGTAB(1)=DGIGNOR;                        0299
         MVC   DGTAB(2,@05),DGIGNOR                                0299
*                         IF DGTAB(2)^<WRAPVAL THEN                0300
         LH    @10,@CH03693                                        0300
         LH    @15,DGTAB+2(,@05)                                   0300
         CR    @15,@10                                             0300
         BL    @RF00300                                            0300
*                           DO;     /* CHECK IF WRAP AROUND  @YM05306*/
*                             DGTAB(2)=DGTAB(2)-WRAPVAL;/* DECREMENT
*                                      BY 10000              @YM05306*/
         SLR   @15,@10                                             0302
         STH   @15,DGTAB+2(,@05)                                   0302
*                             DGWK=1;/* SET SWITCH TO IND WRAP AROUND
*                                                            @YM05306*/
         L     @10,CCAR5REC(,R11)                                  0303
         MVC   DGWK(4,@10),@CF00049                                0303
*                           END;                                   0304
*                       END;                                       0305
@RF00300 DS    0H                                                  0306
*                     IF DGWK=1&DGCNT^<3 THEN/* WRAP AROUND OCCURRED
*                                      AND ENTRIES EXIST IN TABLE  0306
*                                                            @YM05306*/
@RC00287 L     @10,CCAR5REC(,R11)                                  0306
         CLC   DGWK(4,@10),@CF00049                                0306
         BNE   @RF00306                                            0306
         L     @10,CCACMSWA(,R11)                                  0306
         LH    @10,DGCNT(,@10)                                     0306
         CH    @10,@CH00136                                        0306
         BL    @RF00306                                            0306
*                       DO R2=DGCNT BY-1 TO 3;/* DECREMENT EACH ENT
*                                      BY 10000              @YM05306*/
         LR    R2,@10                                              0307
         B     @DE00307                                            0307
@DL00307 DS    0H                                                  0308
*                         DGTAB(R2)=DGTAB(R2)-WRAPVAL;             0308
         LR    @10,R2                                              0308
         ALR   @10,@10                                             0308
         L     @05,CCAR4REC(,R11)                                  0308
         LA    @01,0(@10,@05)                                      0308
         BCTR  @01,0                                               0308
         BCTR  @01,0                                               0308
         LH    @15,DGTAB(,@01)                                     0308
         SH    @15,@CH03693                                        0308
         BCTR  @05,0                                               0308
         BCTR  @05,0                                               0308
         STH   @15,DGTAB(@10,@05)                                  0308
*                       END;                                       0309
         BCTR  R2,0                                                0309
@DE00307 CH    R2,@CH00136                                         0309
         BNL   @DL00307                                            0309
*                   END;            /*                       @ZA04617*/
@RF00306 DS    0H                                                  0311
*                 IF CCACD1=RCS THEN/* CONTINUE IF NO ERRORS @ZA04617*/
*                                                                  0311
@RF00283 CLI   CCACD1(R11),0                                       0311
         BNE   @RF00311                                            0311
*                   /*************************************************/
*                   /*                                               */
*                   /* DELETE GENERATION LEVEL FROM DIFFERENCE       */
*                   /* STRING, DELETE NONVSAM ASSOCIATION FROM GDG   */
*                   /* BASE, AND DELETE NONVSAM RECORD       @ZA04617*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0312
*Z019DELG:                                                         0312
*                   CALL IGGPDELG;  /* DELETE GDG            @ZA04617*/
Z019DELG BAL   @14,IGGPDELG                                        0312
*               END;                                               0313
@RF00311 L     @05,CCACMSWA(,R11)                                  0313
         LA    @10,1                                               0313
         AH    @10,AFIDEL(,@05)                                    0313
@DE00270 L     @05,CCACMSWA(,R11)                                  0313
         STH   @10,AFIDEL(,@05)                                    0313
         L     @05,CCACMSWA(,R11)                                  0313
         CH    @10,AFCDEL(,@05)                                    0313
         BNH   @DL00270                                            0313
@DC00270 DS    0H                                                  0314
*             END;                                                 0314
*           IF TEMPRCD=RCMXGRP THEN /* TOO MANY GOP IN GDG BASE    0315
*                                      RECORD ?              @ZA00964*/
@RF00263 L     @10,CCACMSWA(,R11)                                  0315
         CLI   TEMPRCD(@10),224                                    0315
         BNE   @RF00315                                            0315
*             DO;                   /* YES, RC=224 FROM MOD  @ZA00964*/
*               DGASCI=TEMPCI;      /* CI OF NVSAM DS        @ZA00964*/
         L     @05,CCAR5REC(,R11)                                  0317
         MVC   DGASCI(3,@05),TEMPCI(@10)                           0317
*               DGML=TEMPDGML;      /* RESTORE GEN LEVEL     @ZA00964*/
         MVC   DGML(4,@05),TEMPDGML(@10)                           0318
*               DGASTYPE='A';       /* NVSAM TYPE            @ZA00964*/
         MVI   DGASTYPE(@05),C'A'                                  0319
*Z020BCFA:                                                         0320
*               CALL IGGPBCFA;      /* BUILD CPL/FPL         @ZA00964*/
Z020BCFA BAL   @14,IGGPBCFA                                        0320
*               CCAURAB=ADDR(CCARAB2);/* GDG BASE REC        @ZA00964*/
         LA    @10,CCARAB2(,R11)                                   0321
         ST    @10,CCAURAB(,R11)                                   0321
*               CCARABB=ADDR(CCARAB2);/*                     @ZA00964*/
         ST    @10,CCARABB(,R11)                                   0322
*               CCARABF=ADDR(CCARAB2);/*                     @ZA00964*/
         ST    @10,CCARABF(,R11)                                   0323
*               CCAR2UR=OFF;        /*                       @ZA00964*/
*               CCAR2WR=ON;         /*                       @ZA00964*/
*                                                                  0325
         OI    CCAR2WR(R11),B'00010000'                            0325
         NI    CCAR2UR(R11),B'01111111'                            0325
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLAV                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0326
*Z021MOD:                                                          0326
*               CALL IGGPMOD;       /* ADD ASSOCIATION TO GDG BASE 0326
*                                                            @ZA00964*/
Z021MOD  L     @15,@CV03651                                        0326
         BALR  @14,@15                                             0326
*             END;                  /* END OF MODIFY RETRY   @ZA00964*/
*           ELSE                                                   0328
*             ;                     /* NO RETRY              @ZA00964*/
@RF00315 DS    0H                                                  0329
*           IF CCACD1^=RCS THEN     /* DID AN ERROR OCCUR    @ZA02530*/
         CLI   CCACD1(R11),0                                       0329
         BE    @RF00329                                            0329
*             DO;                   /* YES, BACKOUT PROCESSING IS  0330
*                                      REQUIRED              @ZA02530*/
*               TEMPRC=CCAPROB;     /* SAVE RETURN CODE      @ZA02530*/
         L     @10,CCACMSWA(,R11)                                  0331
         MVC   TEMPRC(4,@10),CCAPROB(R11)                          0331
*               CCASRID=TEMPCI;     /* RESTORE NVSAM CI      @ZA02530*/
         MVC   CCASRID(3,R11),TEMPCI(@10)                          0332
*               DO;                                                0333
*                 CCAF1KEY=OFF;     /* GET BY CI NO.                 */
*                 CCAF1KGE=OFF;     /* NOT GET NEXT                  */
*                 CCAF1UP=ON;       /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0336
         NI    CCAF1KEY(R11),B'11100111'                           0336
*                 CCAURAB=ADDR(CCARAB1);/* SET RAB PTR               */
*                                                                  0337
         LA    @10,CCARAB1(,R11)                                   0337
         ST    @10,CCAURAB(,R11)                                   0337
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLBI                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0338
*Z023GET:                                                          0338
*                 CALL IGGPGET;     /* GET RECORD                    */
Z023GET  L     @15,@CV03650                                        0338
         BALR  @14,@15                                             0338
*               END;                /* GET NVSAM IN RAB 1    @ZA02530*/
*Z024ERUG:                                                         0340
*               CALL IGGPERUG;      /* CALL BACKOUT PROCESS - REMOVE
*                                      ASSOCIATION AND REMOVE ENTRY
*                                      IN GDG BASE STRING    @ZA02530*/
Z024ERUG BAL   @14,IGGPERUG                                        0340
*               CCAPROB=TEMPRC;     /* REFRESH RETURN CODE   @ZA02530*/
         L     @10,CCACMSWA(,R11)                                  0341
         MVC   CCAPROB(4,R11),TEMPRC(@10)                          0341
*             END;                  /* END BACKOUT PROCESS   @ZA02530*/
*           ELSE                                                   0343
*             DO;                                                  0343
         B     @RC00329                                            0343
@RF00329 DS    0H                                                  0344
*               CCASRID=TEMPCI;     /* NVSAM CI              @ZA14617*/
         L     @10,CCACMSWA(,R11)                                  0344
         MVC   CCASRID(3,R11),TEMPCI(@10)                          0344
*               CCAF1KEY=OFF;       /* GET BY CI NO.         @ZA14617*/
*               CCAF1KGE=OFF;       /* NOT GET NEXT          @ZA14617*/
*               CCAF1UP=OFF;        /* NOT GET FOR UPDATE    @ZA14617*/
         NI    CCAF1KEY(R11),B'11100101'                           0347
*               CCAURAB=ADDR(CCARAB1);/* SET RAB PTR         @ZA14617*/
*                                                                  0348
         LA    @10,CCARAB1(,R11)                                   0348
         ST    @10,CCAURAB(,R11)                                   0348
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLBI                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0349
*Z025GET:                                                          0349
*               CALL IGGPGET;       /* GET NVSAM IN RAB 1    @ZA14617*/
Z025GET  L     @15,@CV03650                                        0349
         BALR  @14,@15                                             0349
*             END;                  /*                       @ZA14617*/
*         END;                                                     0351
@RC00329 DS    0H                                                  0352
*     END;                                                         0352
@RF00202 DS    0H                                                  0353
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RF00200 BAL   @14,EXIT                                            0353
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDELG');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDELG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0356
@EF00002 DS    0H                                                  0356
@ER00002 BR    @14                                                 0356
@PB00002 DS    0H                                                  0357
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0358
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDELG  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0358
*IGGPDELG:                                                         0358
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0358
IGGPDELG DS    0H                                                  0359
*Z026:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z026DELG:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0359
*    (R5,                                                          0359
*     R6,                                                          0359
*     R7,                                                          0359
*     R8,                                                          0359
*     R9,                                                          0359
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z026     DS    0H                                                  0359
Z026DELG DS    0H                                                  0360
*   RFY                                                            0360
*    (R2,                                                          0360
*     R3,                                                          0360
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0362
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE DELETES THE SPECIFIED GENERATION LEVEL FROM THE  */
*   /* GDG BASE RECORD AND IMMEDIATELY WRITES OUT THE GDG BASE       */
*   /* RECORD. THE ASSOCIATION FOR THIS GENERATION IS THEN DELETED   */
*   /* FROM THE GDG BASE AND THE NONVSAM RECORD CORRESPONDING TO THIS*/
*   /* GENERATION LEVEL IS DELETED. NOTE THAT THIS DELETION IS DONE  */
*   /* BY CALLING IGG0CLBG - IGGPDEL IN ORDER THAT ALL ASSOCIATED    */
*   /* ALIAS ENTRIES WILL ALSO BE DELETED.                   @ZA04617*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0363
*   BINLEVEL=DGDEL;                 /* SAVE BINARY LEVEL     @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0363
         LH    @05,DGDEL(,@10)                                     0363
         ST    @05,BINLEVEL(,@10)                                  0363
*Z027GCOM:                                                         0364
*   CALL IGGPGCOM;                  /* COMPRESS GENLEVEL TABLE     0364
*                                                            @ZA04617*/
*                                                                  0364
Z027GCOM BAL   @14,IGGPGCOM                                        0364
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAG                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0365
*Z028PUPC:                                                         0365
*   CALL IGGPPUPC;                  /* WRITE BASE RECORD     @ZA04617*/
Z028PUPC L     @15,@CV03642                                        0365
         BALR  @14,@15                                             0365
*   IF CCACD1=RCS THEN              /* CONTINUE IF NO ERRORS @ZA04617*/
         CLI   CCACD1(R11),0                                       0366
         BNE   @RF00366                                            0366
*     DO;                           /* NO ERRORS             @ZA04617*/
*       CVD(DGDEL,DGPAK);           /* CONVERT FOR SEARCH    @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0368
         LH    @05,DGDEL(,@10)                                     0368
         L     @15,CCAR5REC(,R11)                                  0368
         CVD   @05,DGPAK(,@15)                                     0368
*       UNPK(DGCODE,DGPAK);         /*                       @ZA04617*/
         UNPK  DGCODE(4,@15),DGPAK(8,@15)                          0369
*       DGCODEM='1111'B;            /* SET LOW ORDER TO FX   @ZA04617*/
         OI    DGCODEM(@15),B'11110000'                            0370
*       GDGLEVEL=DGCODE;            /* SAVE GENERATION LEVEL @ZA04617*/
         MVC   GDGLEVEL(4,@10),DGCODE(@15)                         0371
*Z029BCFC:                                                         0372
*       CALL IGGPBCFC;              /* BUILD CPL/FPL         @ZA04617*/
*                                                                  0372
Z029BCFC BAL   @14,IGGPBCFC                                        0372
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAZ                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0373
*Z030EXT:                                                          0373
*       CALL IGGPEXT;               /* EXTRACT DATA SET ASSO @ZA04617*/
Z030EXT  L     @15,@CV03647                                        0373
         BALR  @14,@15                                             0373
*       IF CCACD1=RCS THEN          /* CONTINUE IF NO ERRORS @ZA04617*/
         CLI   CCACD1(R11),0                                       0374
         BNE   @RF00374                                            0374
*         DO;                       /* NO ERRORS IN EXTRACT  @ZA04617*/
*           CCASRID=DGASCI;         /* CI OF NONVSAM RECORD  @ZA04617*/
         L     @10,CCAR5REC(,R11)                                  0376
         MVC   CCASRID(3,R11),DGASCI(@10)                          0376
*           DO;                                                    0377
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=ON;           /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0380
         NI    CCAF1KEY(R11),B'11100111'                           0380
*             CCAURAB=ADDR(CCARAB1);/* SET RAB PTR                   */
*                                                                  0381
         LA    @10,CCARAB1(,R11)                                   0381
         ST    @10,CCAURAB(,R11)                                   0381
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0382
*Z032GET:                                                          0382
*             CALL IGGPGET;         /* GET RECORD                    */
Z032GET  L     @15,@CV03650                                        0382
         BALR  @14,@15                                             0382
*           END;                    /* GET REC TO BE DELETED @ZA04617*/
*         END;                      /* END GET RECORD        @ZA04617*/
*     END;                          /* END NO ERROR IN COMPRESS -  0385
*                                      WRITE GDG BASE RECORD @ZA04617*/
@RF00374 DS    0H                                                  0386
*   IF CCACD1^=RCS THEN             /* IF ANY ERRORS SO FAR  @ZA04617*/
@RF00366 CLI   CCACD1(R11),0                                       0386
         BE    @RF00386                                            0386
*     DO;                           /* YES, BACKOUT WHAT HAS BEEN  0387
*                                      DONE TO THIS POINT    @ZA04617*/
*       TEMPRC=CCAPROB;             /* SAVE RETURN CODE      @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0388
         MVC   TEMPRC(4,@10),CCAPROB(R11)                          0388
*Z033GEXP:                                                         0389
*       CALL IGGPGEXP;              /* EXPAND GDG TABLE      @ZA04617*/
Z033GEXP BAL   @14,IGGPGEXP                                        0389
*       DGCNT=DGCNT+ONE;            /* INCREMENT TABLE COUNT TO    0390
*                                      REFLECT NEW LEVEL     @ZA07526*/
         L     @10,CCACMSWA(,R11)                                  0390
         LA    @05,1                                               0390
         LH    @15,DGCNT(,@10)                                     0390
         ALR   @15,@05                                             0390
         STH   @15,DGCNT(,@10)                                     0390
*       DGTAB(DGCNT+ONE)=BINLEVEL+ONE;/* INITIALIZE FOR GEN LEVEL  0391
*                                      INSERT                @ZA07526*/
         ALR   @15,@15                                             0391
         L     @01,CCAR4REC(,R11)                                  0391
         AL    @05,BINLEVEL(,@10)                                  0391
         STH   @05,DGTAB(@15,@01)                                  0391
*Z034STRG:                                                         0392
*       CALL IGGPSTRG;              /* PUT GENERATION LEVEL BACK IN
*                                      GDG DIFFERENCE STRING @ZA04617*/
*                                                                  0392
Z034STRG BAL   @14,IGGPSTRG                                        0392
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAG                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0393
*Z035PUPC:                                                         0393
*       CALL IGGPPUPC;              /* WRITE GDG BASE RECORD @ZA04617*/
Z035PUPC L     @15,@CV03642                                        0393
         BALR  @14,@15                                             0393
*       CCAPROB=TEMPRC;             /* RESTORE RETURN CODE   @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0394
         MVC   CCAPROB(4,R11),TEMPRC(@10)                          0394
*       CALL EXIT;                  /* RETURN TO MAIN ROUTINE      0395
*                                                            @ZA04617*/
         BAL   @14,EXIT                                            0395
*     END;                          /* END BACKOUT PROCESSING      0396
*                                                            @ZA04617*/
*Z036BCFD:                                                         0397
*   CALL IGGPBCFD;                  /* BUILD CPL/FPL         @ZA04617*/
@RF00386 DS    0H                                                  0397
Z036BCFD BAL   @14,IGGPBCFD                                        0397
*   CCACPE22=TEMPCPE2;              /* TEMP RESTORE CCACPE2  @ZA04617*/
*                                                                  0398
         L     @10,CCACMSWA(,R11)                                  0398
         MVC   CCACPE22(4,R11),TEMPCPE2(@10)                       0398
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAV                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0399
*Z037MOD:                                                          0399
*   CALL IGGPMOD;                   /* DELETE ASSO FROM BASE @ZA04617*/
Z037MOD  L     @15,@CV03651                                        0399
         BALR  @14,@15                                             0399
*   IF CCACD1=RCS THEN              /* CONTINUE IF NO ERRORS @ZA04617*/
         CLI   CCACD1(R11),0                                       0400
         BNE   @RF00400                                            0400
*     DO;                           /* NO ERRORS             @ZA04617*/
*       RFY                                                        0402
*         R1 RSTD;                  /*                       @Y30SSSM*/
*                                                                  0402
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE LENGTH OF ALTERNATE CMSWA FOR DELETE.           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0403
*       CCAMNLEN=MAX(LENGTH(CMSWA),LENGTH(DELWKA));                0403
         MVC   CCAMNLEN(3,R11),@CF04404+1                          0403
*       R1=ADDR(CCAMSSPL);          /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0404
*       CCAMNSPL=USUBPOOL;          /* STORE SUBPOOL VALUE           */
*                                                                  0405
         MVI   CCAMNSPL(R11),X'FC'                                 0405
*       /*************************************************************/
*       /*                                                           */
*       /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0406
*       GEN(GETMAIN LC,MF=(E,(1))); /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*       GEN(LR R1,R15);             /* PICK UP RETURN CODE           */
         LR R1,R15
*       IF R1^=NOGETMSE THEN        /* CHECK FOR ERROR RETURN        */
*                                                                  0408
         LTR   R1,R1                                               0408
         BZ    @RF00408                                            0408
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='A4', CCAREASN=RSN2, CCARETRN=RCINSSWA     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0409
*         CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF04406                             0409
*       ELSE                        /* GETMAIN SUCCESSFUL            */
*         DO;                                                      0410
         B     @RC00408                                            0410
@RF00408 DS    0H                                                  0411
*           DO;                                                    0411
*             IF MNATFULL=ON THEN   /* TRACKING TABLE FULL           */
*                                                                  0412
         TM    MNATFULL(R11),B'10000000'                           0412
         BNO   @RF00412                                            0412
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLAT                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0413
*Z041ARFS:                                                         0413
*               CALL IGGPARFS;      /* YES,CALL SPILL ROUTINE        */
Z041ARFS L     @15,@CV03644                                        0413
         BALR  @14,@15                                             0413
*             GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*
*                                      PUSH AND TRACK                */
@RF00412 DS    0H                                                  0414
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*           END;                                                   0415
*         END;                      /* GET ALTERNATE CMSWA   @Y30SSSM*/
*       IF CCACD1^=RCS THEN                                        0417
@RC00408 CLI   CCACD1(R11),0                                       0417
         BNE   @RT00417                                            0417
*         ;                         /* GETMAIN SUCCESSFUL?   @Y30SSSM*/
*       ELSE                                                       0419
*         DO;                       /* YES, CONTINUE         @ZA04617*/
*           CCADGDGA=CCAMNADR;      /* YES,SAVE ADDRESS      @Y30SSSM*/
         L     @10,CCAMNADR(,R11)                                  0420
         ST    @10,CCADGDGA(,R11)                                  0420
*           CTGTYPE='A';            /* SET TYPE FOR CMS DEL  @ZA04617*/
         L     @05,CCACPL(,R11)                                    0421
         MVI   CTGTYPE(@05),C'A'                                   0421
*           CCAURAB=ADDR(CCARAB1);  /* NONVSAM RECORD        @ZA04617*/
         LA    @00,CCARAB1(,R11)                                   0422
         ST    @00,CCAURAB(,R11)                                   0422
*           DGSVFVT=CTGFVT;         /* SAVE PTR TO ORIG FVT  @ZA04617*/
         L     @15,CCACMSWA(,R11)                                  0423
         MVC   DGSVFVT(4,@15),CTGFVT(@05)                          0423
*           CTGENT=ADDR(CNAME);     /* ENTRY NME TO DELETE   @ZA04617*/
         LR    @14,@00                                             0424
         L     @00,CCACPE1(,@14)                                   0424
         LR    @14,@00                                             0424
         LA    @00,CNAME(,@14)                                     0424
         ST    @00,CTGENT(,@05)                                    0424
*           RVCMSFG=OFF;            /* NO BACKOUT BY ESTAE   @Y04SSSM*/
         NI    RVCMSFG(R11),B'11011111'                            0425
*           RFY                                                    0426
*             R4 RSTD;              /*                       @Y30SSSM*/
*           R4=CCADGDGA;            /* TEMP SAVE ALT CMSWA   @Y30SSSM*/
         LR    R4,@10                                              0427
*           CCADGDGA=CCACMSWA;      /* SAVE REAL CMSWA       @Y30SSSM*/
         ST    @15,CCADGDGA(,R11)                                  0428
*           CCACMSWA=R4;            /* CMSWA FOR DELETE      @Y30SSSM*/
         ST    R4,CCACMSWA(,R11)                                   0429
*           RFY                                                    0430
*            (R2,                                                  0430
*             R3,                                                  0430
*             R4,                                                  0430
*             R5) RSTD;             /*                       @Y30SSSM*/
*           R2=CCACMSWA;            /* STARTING ADDR TO ZERO @Y30SSSM*/
         L     @10,CCACMSWA(,R11)                                  0431
         LR    R2,@10                                              0431
*           R3=MAX(LENGTH(CMSWA),LENGTH(DELWKA));/*          @Y30SSSM*/
         LA    R3,684                                              0432
*           R5=N;                   /* ZERO FOR PADDING      @Y30SSSM*/
         SLR   R5,R5                                               0433
*           GEN(MVCL  R2,R4);       /* ZERO WORKAREA         @Y30SSSM*/
         MVCL  R2,R4
*           RFY                                                    0435
*             R5 UNRSTD;            /*                       @Y30SSSM*/
*                                                                  0435
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLBG                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0436
*Z042DEL:                                                          0436
*           CALL IGGPDEL;           /* DELETE DATA SET       @ZA04617
*                                      USING CMS DELETE      @ZA04617*/
Z042DEL  L     @15,@CV03645                                        0436
         BALR  @14,@15                                             0436
*           CTGFVT=CCADGDGA->DGSVFVT;/* RESTORE FVT PTR      @ZA04617*/
         L     @10,CCACPL(,R11)                                    0437
         L     @05,CCADGDGA(,R11)                                  0437
         MVC   CTGFVT(4,@10),DGSVFVT(@05)                          0437
*           IF CCACD1=RCS THEN      /* CONTINUE IF NO ERRORS @ZA04617*/
         CLI   CCACD1(R11),0                                       0438
         BNE   @RF00438                                            0438
*             DO;                   /* NO ERRORS             @ZA04617*/
*               RVCMSFG=ON;         /* RESET BACKOUT TO ON   @Y04SSSM*/
         OI    RVCMSFG(R11),B'00100000'                            0440
*               IF CTGWKA^=N THEN   /* VALID POINTER         @ZA04617*/
         SLR   @05,@05                                             0441
         L     @10,CTGWKA(,@10)                                    0441
         CR    @10,@05                                             0441
         BE    @RF00441                                            0441
*                 DO;               /* WORKAREA PROVIDED     @ZA04617*/
*                   WKALEN2=N;      /* ZERO WKAREA LEN       @ZA04617*/
         STH   @05,WKALEN2(,@10)                                   0443
*                   ENTNAMES(1)=ENTNAMES(1)&&ENTNAMES(1);/* CLEAR  0444
*                                      WORKAREA ENTRY        @ZA04617*/
         XC    ENTNAMES(45,@10),ENTNAMES(@10)                      0444
*                 END;              /* END WORKAREA CHECK    @ZA04617*/
*             END;                  /* END DELETE            @ZA04617*/
@RF00441 DS    0H                                                  0447
*           R4=CCACMSWA;            /* SAVE TEMP CMSWA FOR   @ZA07526*/
@RF00438 L     R4,CCACMSWA(,R11)                                   0447
*           CCACMSWA=CCADGDGA;      /* RESTORE REAL CMSWA    @ZA07526*/
         MVC   CCACMSWA(4,R11),CCADGDGA(R11)                       0448
*           CCADGDGA=R4;            /* SAVE TEMP CMSWA ADR   @ZA07526*/
*                                                                  0449
         ST    R4,CCADGDGA(,R11)                                   0449
*           /*********************************************************/
*           /*                                                       */
*           /* CALCULATE LENGTH OF ALTERNATE CMSWA TO FREE           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0450
*           CCAMNLEN=MAX(LENGTH(CMSWA),LENGTH(DELWKA));            0450
         MVC   CCAMNLEN(3,R11),@CF04404+1                          0450
*           CCAMNADR=CCADGDGA;      /* AREA TO FREEMAIN      @Y30SSSM*/
         L     @10,CCADGDGA(,R11)                                  0451
         ST    @10,CCAMNADR(,R11)                                  0451
*           R1=ADDR(CCAMSSPL);      /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0452
*           CCAMNSPL=USUBPOOL;      /* STORE SUBPOOL VALUE           */
         MVI   CCAMNSPL(R11),X'FC'                                 0453
*           DO;                                                    0454
*             IF MNATFULL=ON THEN   /* TRACKING TABLE FULL           */
*                                                                  0455
         TM    MNATFULL(R11),B'10000000'                           0455
         BNO   @RF00455                                            0455
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLAT                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0456
*Z045ARFS:                                                         0456
*               CALL IGGPARFS;      /* YES,CALL SPILL ROUTINE        */
Z045ARFS L     @15,@CV03644                                        0456
         BALR  @14,@15                                             0456
*             GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*
*                                      PUSH AND TRACK                */
@RF00455 DS    0H                                                  0457
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*           END;                                                   0458
*                                                                  0458
*           /*********************************************************/
*           /*                                                       */
*           /* RELEASE MAIN STORAGE FROM USER SUBPOOL 252            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0459
*           GEN(FREEMAIN L,MF=(E,(1))) ;/* FREE ALT CMSWA    @Y30SSSM*/
         FREEMAIN L,MF=(E,(1))
*           CCASRID=DGBASECI;       /* CI OF GDG BASE        @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0460
         MVC   CCASRID(3,R11),DGBASECI(@10)                        0460
*           DO;                                                    0461
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=ON;           /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0464
         NI    CCAF1KEY(R11),B'11100111'                           0464
*             CCAURAB=ADDR(CCARAB2);/* SET RAB PTR                   */
*                                                                  0465
         LA    @10,CCARAB2(,R11)                                   0465
         ST    @10,CCAURAB(,R11)                                   0465
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0466
*Z047GET:                                                          0466
*             CALL IGGPGET;         /* GET RECORD                    */
Z047GET  L     @15,@CV03650                                        0466
         BALR  @14,@15                                             0466
*           END;                    /* REREAD GDG BASE RECORD      0467
*                                                            @ZA04617*/
*           TEMPCPE2=CCACPE22;      /* SAVE RECORD POINTER   @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0468
         MVC   TEMPCPE2(4,@10),CCACPE22(R11)                       0468
*         END;                      /*                       @ZA04617*/
*     END;                          /* END NO ERRORS IN MOD  @ZA04617*/
@RT00417 DS    0H                                                  0471
*   IF CCACD1=RCS THEN                                             0471
@RF00400 CLI   CCACD1(R11),0                                       0471
         BE    @RT00471                                            0471
*     ;                             /* CONTINUE IF NO ERRORS @ZA04617*/
*   ELSE                            /* ERROR HAS OCCURRED    @ZA04617*/
*     DO;                           /* BACKOUT PROCESSING    @ZA04617*/
*       TEMPRC=CCAPROB;             /* SAVE RTN CODE         @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0474
         MVC   TEMPRC(4,@10),CCAPROB(R11)                          0474
*Z048GEXP:                                                         0475
*       CALL IGGPGEXP;              /* EXPAND GDG TBLE       @ZA04617*/
Z048GEXP BAL   @14,IGGPGEXP                                        0475
*       DGCNT=DGCNT+ONE;            /* INCREMENT TABLE COUNT TO    0476
*                                      REFLECT NEW LEVEL     @ZA07526*/
         L     @10,CCACMSWA(,R11)                                  0476
         LA    @05,1                                               0476
         LH    @00,DGCNT(,@10)                                     0476
         ALR   @00,@05                                             0476
         STH   @00,DGCNT(,@10)                                     0476
*       DGTAB(DGCNT+ONE)=BINLEVEL+ONE;/* INITIALIZE FOR GEN LEVEL  0477
*                                      INSERT                @ZA07526*/
         ALR   @00,@00                                             0477
         L     @15,CCAR4REC(,R11)                                  0477
         AL    @05,BINLEVEL(,@10)                                  0477
         LR    @10,@00                                             0477
         STH   @05,DGTAB(@10,@15)                                  0477
*Z049STRG:                                                         0478
*       CALL IGGPSTRG;              /* PUT GENERATION LEVEL BACK IN
*                                      GDG DIFFERENCE STRING @ZA04617*/
Z049STRG BAL   @14,IGGPSTRG                                        0478
*Z050BCFA:                                                         0479
*       CALL IGGPBCFA;              /* BUILD CPL/FPL FOR CALL TO   0479
*                                      MODIFY                @ZA04617*/
Z050BCFA BAL   @14,IGGPBCFA                                        0479
*       DGML=GDGLEVEL;              /* RESTORE BINARY GDG LEVEL FOR
*                                      CALL TO MODIFY        @ZA04617*/
         L     @10,CCAR5REC(,R11)                                  0480
         L     @05,CCACMSWA(,R11)                                  0480
         MVC   DGML(4,@10),GDGLEVEL(@05)                           0480
*Z051ASSO:                                                         0481
*       CALL IGGPASSO;              /* ADD ASSOCIATION BACK IN GDG 0481
*                                      BASE AND WRITE BASE   @ZA04617*/
Z051ASSO BAL   @14,IGGPASSO                                        0481
*       CCAPROB=TEMPRC;             /* RESTORE RTN CDE       @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0482
         MVC   CCAPROB(4,R11),TEMPRC(@10)                          0482
*     END;                          /* END BACKOUT PROC      @ZA04617*/
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RT00471 BAL   @14,EXIT                                            0484
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPSTRG');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPSTRG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0487
@EF00003 DS    0H                                                  0487
@ER00003 BR    @14                                                 0487
@PB00003 DS    0H                                                  0488
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0489
*/********************************************************************/
*/*                                                                  */
*/*        IGGPSTRG  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0489
*IGGPSTRG:                                                         0489
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0489
IGGPSTRG DS    0H                                                  0490
*Z052:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z052STRG:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0490
*    (R5,                                                          0490
*     R6,                                                          0490
*     R7,                                                          0490
*     R8,                                                          0490
*     R9,                                                          0490
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z052     DS    0H                                                  0490
Z052STRG DS    0H                                                  0491
*   RFY                                                            0491
*    (R2,                                                          0491
*     R3,                                                          0491
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0493
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE SCANS THE GDG TABLE AND PLACES A SPECIFIED GDG   */
*   /* GENERATION LEVEL WITHIN THE GDG TABLE. THE TABLE IS THEN      */
*   /* COMPRESSED INTO THE DIFFERENCE STRING. THIS ROUTINE ASSUMES   */
*   /* THAT RAB2 CONTAINS THE GDG BASE ENTRY AND THAT BINLEVEL       */
*   /* CONTAINS THE GENERATION LEVEL TO BE ADDED.            @ZA04617*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0494
*   AFCOTL=N;                       /*                       @ZA02530*/
         L     @10,CCACMSWA(,R11)                                  0494
         SLR   @05,@05                                             0494
         STH   @05,AFCOTL(,@10)                                    0494
*   DO R2=DGCNT BY-1 TO 2 WHILE(AFCOTL=0);/* FIND PLACE IN TABLE   0495
*                                                            @ZA02530*/
         LH    R2,DGCNT(,@10)                                      0495
         B     @DE00495                                            0495
@DL00495 L     @10,CCACMSWA(,R11)                                  0495
         ICM   @05,3,AFCOTL(@10)                                   0495
         BNZ   @DC00495                                            0495
*     IF DGTAB(R2+ONE)>BINLEVEL&    /* DOES IT FIT           @ZA02530*/
*         BINLEVEL>DGTAB(R2-ONE) THEN/* BETWEEN THESE ENTRIES?     0496
*                                                            @ZA02530*/
         LR    @05,R2                                              0496
         ALR   @05,@05                                             0496
         L     @15,CCAR4REC(,R11)                                  0496
         L     @14,BINLEVEL(,@10)                                  0496
         CH    @14,DGTAB(@05,@15)                                  0496
         BNL   @RF00496                                            0496
         LA    @09,0(@05,@15)                                      0496
         AL    @09,@CF04416                                        0496
         CH    @14,DGTAB(,@09)                                     0496
         BNH   @RF00496                                            0496
*       DO;                         /*                       @ZA02530*/
*         DGTAB(R2)=BINLEVEL;       /* YES-PLACE IT HERE     @ZA02530*/
         BCTR  @15,0                                               0498
         BCTR  @15,0                                               0498
         STH   @14,DGTAB(@05,@15)                                  0498
*         AFCOTL=R2;                /*                       @ZA02530*/
         STH   R2,AFCOTL(,@10)                                     0499
*       END;                        /*                       @ZA02530*/
*     ELSE                          /* MOVE NEXT             @ZA02530*/
*       DGTAB(R2)=DGTAB(R2-ONE);    /*                       @ZA02530*/
         B     @RC00496                                            0501
@RF00496 LR    @10,R2                                              0501
         ALR   @10,@10                                             0501
         L     @05,CCAR4REC(,R11)                                  0501
         LA    @15,0(@10,@05)                                      0501
         AL    @15,@CF04416                                        0501
         LH    @00,DGTAB(,@15)                                     0501
         BCTR  @05,0                                               0501
         BCTR  @05,0                                               0501
         STH   @00,DGTAB(@10,@05)                                  0501
*   END;                            /*                       @ZA02530*/
@RC00496 BCTR  R2,0                                                0502
@DE00495 CH    R2,@CH00119                                         0502
         BNL   @DL00495                                            0502
@DC00495 DS    0H                                                  0503
*   IF AFCOTL=N THEN                /* IF IT HASNT BEEN PUT IN TABLE
*                                                            @ZA02530*/
         L     @10,CCACMSWA(,R11)                                  0503
         ICM   @05,3,AFCOTL(@10)                                   0503
         BNZ   @RF00503                                            0503
*     DGTAB(ONE)=BINLEVEL;          /* PUT AT END            @ZA02530*/
         L     @05,CCAR4REC(,R11)                                  0504
         MVC   DGTAB(2,@05),BINLEVEL+2(@10)                        0504
*   ELSE                                                           0505
*     ;                             /* ALREADY PLACED        @ZA02530*/
@RF00503 DS    0H                                                  0506
*Z053GCOM:                                                         0506
*   CALL IGGPGCOM;                  /* COMPRESS GDG TABLE TO       0506
*                                      DIFFERENCE STRING     @ZA04617*/
Z053GCOM BAL   @14,IGGPGCOM                                        0506
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0507
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPASSO');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPASSO'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0510
@EF00004 DS    0H                                                  0510
@ER00004 BR    @14                                                 0510
@PB00004 DS    0H                                                  0511
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0512
*/********************************************************************/
*/*                                                                  */
*/*        IGGPASSO  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0512
*IGGPASSO:                                                         0512
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0512
IGGPASSO DS    0H                                                  0513
*Z054:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z054ASSO:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0513
*    (R5,                                                          0513
*     R6,                                                          0513
*     R7,                                                          0513
*     R8,                                                          0513
*     R9,                                                          0513
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z054     DS    0H                                                  0513
Z054ASSO DS    0H                                                  0514
*   RFY                                                            0514
*    (R2,                                                          0514
*     R3,                                                          0514
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0516
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE ADDS AN ASSOCIATION FOR A GENERATION INTO THE GDG*/
*   /* BASE RECORD. THIS ROUTINE ASSUMES THAT RAB1 CONTAINS THE      */
*   /* NONVSAM GDG WHOSE ASSOCIATION IS TO BE PLACED INTO THE GDG    */
*   /* BASE RECORD. RAB2 CONTAINS THE GDG BASE RECORD.       @ZA04617*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0517
*   CCAURAB=ADDR(CCARAB1);          /* SET PTR TO DATA SET   @ZA02530*/
         LA    @10,CCARAB1(,R11)                                   0517
         ST    @10,CCAURAB(,R11)                                   0517
*   DGASCI=RCDCINO;                 /* CI NUMBER OF NVSAM    @ZA02530*/
         L     @05,CCAR5REC(,R11)                                  0518
         L     @10,CCACPE1(,@10)                                   0518
         MVC   DGASCI(3,@05),RCDCINO(@10)                          0518
*   DGASTYPE='A';                   /* NVSAM ENTRYTYPE       @ZA02530*/
         MVI   DGASTYPE(@05),C'A'                                  0519
*   CCAURAB=ADDR(CCARAB2);          /* GDG BASE RECORD       @ZA02530*/
         LA    @10,CCARAB2(,R11)                                   0520
         ST    @10,CCAURAB(,R11)                                   0520
*   CCARABB=ADDR(CCARAB2);          /* SET FOR MODIFY CALL   @ZA02530*/
         ST    @10,CCARABB(,R11)                                   0521
*   CCARABF=ADDR(CCARAB2);          /* SET FOR MODIFY CALL   @ZA02530*/
         ST    @10,CCARABF(,R11)                                   0522
*   CCAR2UR=OFF;                    /*                       @ZA02530*/
*   CCAR2WR=ON;                     /* FORCE WRITE GDG BASE  @ZA02530*/
         OI    CCAR2WR(R11),B'00010000'                            0524
         NI    CCAR2UR(R11),B'01111111'                            0524
*   CCACPE2=TEMPCPE2;               /* **** TEMP ******      @ZA02530*/
*                                                                  0525
         L     @05,CCACMSWA(,R11)                                  0525
         MVC   CCACPE2(4,@10),TEMPCPE2(@05)                        0525
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAV                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0526
*Z055MOD:                                                          0526
*   CALL IGGPMOD;                   /* WRITE-UPDATE GDG BASE @ZA04617*/
Z055MOD  L     @15,@CV03651                                        0526
         BALR  @14,@15                                             0526
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0527
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPVERS');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPVERS'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0530
@EF00005 DS    0H                                                  0530
@ER00005 BR    @14                                                 0530
@PB00005 DS    0H                                                  0531
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0532
*/********************************************************************/
*/*                                                                  */
*/*        IGGPVERS  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0532
*IGGPVERS:                                                         0532
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0532
IGGPVERS DS    0H                                                  0533
*Z056:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z056VERS:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0533
*    (R5,                                                          0533
*     R6,                                                          0533
*     R7,                                                          0533
*     R8,                                                          0533
*     R9,                                                          0533
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z056     DS    0H                                                  0533
Z056VERS DS    0H                                                  0534
*   RFY                                                            0534
*    (R2,                                                          0534
*     R3,                                                          0534
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0536
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE CHECKS FOR THE POSSIBILITY OF A DEFINE REQUEST   */
*   /* FOR THE SAME GENERATION LEVEL BUT A DIFFERENT VERSION LEVEL.  */
*   /* THE GDG TABLE IS EXPANDED AND SEARCHED FOR A GENERATION LEVEL */
*   /* EQUAL TO THAT BEING DEFINED. IF A TABLE ENTRY IS FOUND THEN   */
*   /* THAT GENERATION IS DELETED FROM THE DIFFERENCE STRING, THE    */
*   /* ASSOCIATION IS DELETED FROM THE GDG BASE RECORD, AND THE      */
*   /* RECORD IS DELETED AND MAY BE SCRATCHED. AFCURLV CONTAINS THE  */
*   /* GENERATION LEVEL BEING DEFINED AND RAB2 HAS THE GDG BASE      */
*   /* RECORD.                                               @ZA04617*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0537
*Z057GEXP:                                                         0537
*   CALL IGGPGEXP;                  /* EXPAND TABLE          @ZA01383*/
Z057GEXP BAL   @14,IGGPGEXP                                        0537
*   AFCOTL=N;                       /* SET LOOP CONTROL      @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0538
         SLR   @05,@05                                             0538
         STH   @05,AFCOTL(,@10)                                    0538
*   DO DGWK=1 TO DGCNT WHILE(AFCOTL=N);/* LOOP THROUGH TABLE ENTRIES
*                                      AND CHECK CURRENT GXXX FOR  0539
*                                      DUPLICATION WITH GXXX TABLE 0539
*                                      ENTRIES - ONLY ONE VERSION  0539
*                                      LEVEL OF A GXXX MAY BE      0539
*                                      CATALOGED             @ZA01383*/
         LA    @10,1                                               0539
         B     @DE00539                                            0539
@DL00539 L     @10,CCACMSWA(,R11)                                  0539
         ICM   @05,3,AFCOTL(@10)                                   0539
         BNZ   @DC00539                                            0539
*     IF DGTAB(DGWK)=AFCURLV THEN   /* ALREADY DEFINED ?     @ZA01383*/
         L     @05,CCAR5REC(,R11)                                  0540
         L     @05,DGWK(,@05)                                      0540
         LR    @15,@05                                             0540
         ALR   @15,@15                                             0540
         L     @14,CCAR4REC(,R11)                                  0540
         LA    @09,0(@15,@14)                                      0540
         BCTR  @09,0                                               0540
         BCTR  @09,0                                               0540
         LH    @09,DGTAB(,@09)                                     0540
         C     @09,AFCURLV(,@10)                                   0540
         BNE   @RF00540                                            0540
*       DO;                         /* YES, DELETE LEVEL     @ZA01383*/
*         AFCOTL=DGWK;              /* END TABLE SEARCH      @ZA04617*/
         STH   @05,AFCOTL(,@10)                                    0542
*         DGDEL=DGTAB(DGWK);        /* GENERATION LEVEL      @ZA04617*/
         STH   @09,DGDEL(,@10)                                     0543
*         DGTAB(DGWK)=DGIGNOR;      /* LEVEL TO BE DELETED   @ZA04617*/
         SLR   @10,@10                                             0544
         ICM   @10,3,DGIGNOR                                       0544
         BCTR  @14,0                                               0544
         BCTR  @14,0                                               0544
         STH   @10,DGTAB(@15,@14)                                  0544
*         IF DGSR=ON THEN           /* IS SCRATCH OPTION ON  @ZA04617*/
         L     @10,CCAURAB(,R11)                                   0545
         L     @10,CCACPE1(,@10)                                   0545
         TM    DGSR(@10),B'01000000'                               0545
         BNO   @RF00545                                            0545
*           CTGSCR=ON;              /* SET SCRATCH IN CPL    @ZA04617*/
         L     @10,CCACPL(,R11)                                    0546
         OI    CTGSCR(@10),B'00000010'                             0546
*Z058DELG:                                                         0547
*         CALL IGGPDELG;            /* DELETE FROM STRING, DELETE  0547
*                                      ASSOCIATION AND RECORD      0547
*                                                            @ZA04617*/
@RF00545 DS    0H                                                  0547
Z058DELG BAL   @14,IGGPDELG                                        0547
*         IF CCACD1^=RCS THEN       /* ANY ERRORS DETECTED ? @ZA04617*/
         CLI   CCACD1(R11),0                                       0548
         BE    @RF00548                                            0548
*           CALL EXIT;              /* YES, ERROR EXIT       @ZA04617*/
         BAL   @14,EXIT                                            0549
*         CCASRID=TEMPCI;           /* CI OF NEW NONVSAM     @ZA04617*/
@RF00548 L     @10,CCACMSWA(,R11)                                  0550
         MVC   CCASRID(3,R11),TEMPCI(@10)                          0550
*         DO;                                                      0551
*           CCAF1KEY=OFF;           /* GET BY CI NO.                 */
*           CCAF1KGE=OFF;           /* NOT GET NEXT                  */
*           CCAF1UP=ON;             /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0554
         NI    CCAF1KEY(R11),B'11100111'                           0554
*           CCAURAB=ADDR(CCARAB1);  /* SET RAB PTR                   */
*                                                                  0555
         LA    @10,CCARAB1(,R11)                                   0555
         ST    @10,CCAURAB(,R11)                                   0555
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLBI                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0556
*Z060GET:                                                          0556
*           CALL IGGPGET;           /* GET RECORD                    */
Z060GET  L     @15,@CV03650                                        0556
         BALR  @14,@15                                             0556
*         END;                      /* RE-READ NEW NVSAM REC @ZA04617*/
*         IF CCACD1^=RCS THEN       /* ANY ERRORS ?          @ZA04617*/
         CLI   CCACD1(R11),0                                       0558
         BE    @RF00558                                            0558
*           CALL EXIT;              /* YES, ERROR EXIT       @ZA04617*/
         BAL   @14,EXIT                                            0559
*         CCASRID=DGBASECI;         /* GDG BASE CI NUMBER    @ZA04617*/
@RF00558 L     @10,CCACMSWA(,R11)                                  0560
         MVC   CCASRID(3,R11),DGBASECI(@10)                        0560
*         DO;                                                      0561
*           CCAF1KEY=OFF;           /* GET BY CI NO.                 */
*           CCAF1KGE=OFF;           /* NOT GET NEXT                  */
*           CCAF1UP=ON;             /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0564
         NI    CCAF1KEY(R11),B'11100111'                           0564
*           CCAURAB=ADDR(CCARAB2);  /* SET RAB PTR                   */
*                                                                  0565
         LA    @10,CCARAB2(,R11)                                   0565
         ST    @10,CCAURAB(,R11)                                   0565
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLBI                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0566
*Z062GET:                                                          0566
*           CALL IGGPGET;           /* GET RECORD                    */
Z062GET  L     @15,@CV03650                                        0566
         BALR  @14,@15                                             0566
*         END;                      /* RE-READ BASE GDG IN RAB 2   0567
*                                                            @ZA04617*/
*         TEMPCPE2=CCACPE22;        /* SAVE RECORD POINTER   @ZA04617*/
         L     @10,CCACMSWA(,R11)                                  0568
         MVC   TEMPCPE2(4,@10),CCACPE22(R11)                       0568
*       END;                        /* END OF DUPLICATE      @ZA01383*/
*     ELSE                                                         0570
*       ;                           /* NOT A DUPLICATE       @ZA01383*/
@RF00540 DS    0H                                                  0571
*   END;                            /* END TABLE SCAN        @ZA01383*/
         L     @05,CCAR5REC(,R11)                                  0571
         LA    @10,1                                               0571
         AL    @10,DGWK(,@05)                                      0571
@DE00539 L     @05,CCAR5REC(,R11)                                  0571
         ST    @10,DGWK(,@05)                                      0571
         L     @05,CCACMSWA(,R11)                                  0571
         CH    @10,DGCNT(,@05)                                     0571
         BNH   @DL00539                                            0571
@DC00539 DS    0H                                                  0572
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0572
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPCCFB');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPCCFB'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0575
@EF00006 DS    0H                                                  0575
@ER00006 BR    @14                                                 0575
@PB00006 DS    0H                                                  0576
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0577
*/********************************************************************/
*/*                                                                  */
*/*        IGGPCCFB  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0577
*IGGPCCFB:                                                         0577
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0577
IGGPCCFB DS    0H                                                  0578
*Z063:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z063CCFB:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0578
*    (R5,                                                          0578
*     R6,                                                          0578
*     R7,                                                          0578
*     R8,                                                          0578
*     R9,                                                          0578
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z063     DS    0H                                                  0578
Z063CCFB DS    0H                                                  0579
*   RFY                                                            0579
*    (R2,                                                          0579
*     R3,                                                          0579
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0581
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON CPL/FPL BUILD                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0582
*   DGCF=DGCF&&DGCF;                /* CLEAR CPL AND FPLS            */
         L     @10,CCAR5REC(,R11)                                  0582
         XC    DGCF(88,@10),DGCF(@10)                              0582
*   CCAF2NVC=ON;                    /* NO VALIDITY CHECK CPL/FPL     */
         OI    CCAF2NVC(R11),B'01000000'                           0583
*   CCAR1UR=OFF;                                                   0584
         NI    CCAR1UR(R11),B'01111111'                            0584
*   CCAR2UR=OFF;                                                   0585
         NI    CCAR2UR(R11),B'01111111'                            0585
*   CCAR3UR=OFF;                                                   0586
         NI    CCAR3UR(R11),B'01111111'                            0586
*   CCAR4UR=OFF;                                                   0587
         NI    CCAR4UR(R11),B'01111111'                            0587
*   CCAR5UR=ON;                                                    0588
         OI    CCAR5UR(R11),B'10000000'                            0588
*   CCARABF=CCARABB;                /* CCARABB IS INPUT TO SET       */
         L     @10,CCARABB(,R11)                                   0589
         ST    @10,CCARABF(,R11)                                   0589
*   CCAURAB=CCARABB;                                               0590
         ST    @10,CCAURAB(,R11)                                   0590
*   CCARABL=ADDR(CCARAB4);                                         0591
         LA    @10,CCARAB4(,R11)                                   0591
         ST    @10,CCARABL(,R11)                                   0591
*   CCACD1=N;                       /* CLEAR RTN CODE                */
         MVI   CCACD1(R11),X'00'                                   0592
*   RFY                                                            0593
*     CTGPL BASED(ADDR(DGCPL));                                    0593
*   CCAMCPL=ADDR(DGCPL);            /* PTR TO CPL                    */
         L     @10,CCAR5REC(,R11)                                  0594
         LA    @05,DGCPL(,@10)                                     0594
         ST    @05,CCAMCPL(,R11)                                   0594
*   CTGNOFLD=ONE;                   /* NUMBER OF DATA FPLS           */
         LA    @05,46                                              0595
         ALR   @05,@10                                             0595
         MVI   CTGNOFLD(@05),X'01'                                 0595
*   CTGFIELD(1)=ADDR(DGFPL);        /* PTR TO DATA FPL               */
         LA    @10,DGFPL(,@10)                                     0596
         ST    @10,CTGFIELD(,@05)                                  0596
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0597
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPBCFA');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPBCFA'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0600
@EF00007 DS    0H                                                  0600
@ER00007 BR    @14                                                 0600
@PB00007 DS    0H                                                  0601
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0602
*/********************************************************************/
*/*                                                                  */
*/*        IGGPBCFA  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0602
*IGGPBCFA:                                                         0602
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0602
IGGPBCFA DS    0H                                                  0603
*Z064:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z064BCFA:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0603
*    (R5,                                                          0603
*     R6,                                                          0603
*     R7,                                                          0603
*     R8,                                                          0603
*     R9,                                                          0603
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z064     DS    0H                                                  0603
Z064BCFA DS    0H                                                  0604
*   RFY                                                            0604
*    (R2,                                                          0604
*     R3,                                                          0604
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0606
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD CPL/FPL FOR ADDING GDG PTR TO DATA SET ENTRY (ASSO)     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0607
*   CCARABB=ADDR(CCARAB1);          /* SETS BASE FIRST & URAB        */
         LA    @10,CCARAB1(,R11)                                   0607
         ST    @10,CCARABB(,R11)                                   0607
*Z065CCFB:                                                         0608
*   CALL IGGPCCFB;                  /* SET COMMON PARAM.             */
*                                                                  0608
Z065CCFB BAL   @14,IGGPCCFB                                        0608
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FPL                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*   RFY                                                            0609
*     CTGFL BASED(ADDR(DGFPL));                                    0609
*   CTGFLDNO=ONE;                   /* NO OF ELEMENT IN CTGFLDAT     */
         L     @10,CCAR5REC(,R11)                                  0610
         LA    @05,86                                              0610
         ALR   @05,@10                                             0610
         MVI   CTGFLDNO(@05),X'01'                                 0610
*   CTGFLDNM=ADDR('GDGNAME ');      /* PTR TO FIELD NAME             */
         LA    @00,@CC04341                                        0611
         ST    @00,CTGFLDNM(,@05)                                  0611
*   CTGFLNG(1)=LENGTH(DGMAWA);      /* LENGTH OF FIELD DATA          */
         MVC   CTGFLNG(4,@05),@CF00041                             0612
*   CTGFLPT(1)=ADDR(DGMAWA);        /* PTR TO FIELD DATA             */
         LA    @10,DGMAWA(,@10)                                    0613
         ST    @10,CTGFLPT(,@05)                                   0613
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0614
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPBCFC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPBCFC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0617
@EF00008 DS    0H                                                  0617
@ER00008 BR    @14                                                 0617
@PB00008 DS    0H                                                  0618
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0619
*/********************************************************************/
*/*                                                                  */
*/*        IGGPBCFC  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0619
*IGGPBCFC:                                                         0619
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0619
IGGPBCFC DS    0H                                                  0620
*Z066:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z066BCFC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0620
*    (R5,                                                          0620
*     R6,                                                          0620
*     R7,                                                          0620
*     R8,                                                          0620
*     R9,                                                          0620
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z066     DS    0H                                                  0620
Z066BCFC DS    0H                                                  0621
*   RFY                                                            0621
*    (R2,                                                          0621
*     R3,                                                          0621
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0623
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD CPL AND FPLS FOR EXTRACT OF DATA SET ASSO.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*   CCARABB=ADDR(CCARAB2);                                         0624
         LA    @10,CCARAB2(,R11)                                   0624
         ST    @10,CCARABB(,R11)                                   0624
*Z067CCFB:                                                         0625
*   CALL IGGPCCFB;                  /* SET COMMON PARAM.             */
Z067CCFB BAL   @14,IGGPCCFB                                        0625
*   RFY                                                            0626
*     CTGPL BASED(ADDR(DGCPL));                                    0626
*   CTGWKA=ADDR(DGEAWA);            /* DATA RETURN AREA              */
         L     @10,CCAR5REC(,R11)                                  0627
         LA    @05,DGEAWA(,@10)                                    0627
         ST    @05,CTGWKA+46(,@10)                                 0627
*   DGELEN=LENGTH(DGEAWA)+LENGTH(DGMAWA);/* WKA FOR EXTRACT          */
         MVC   DGELEN(2,@10),@CH00207                              0628
*   RFY                                                            0629
*     CTGFL BASED(ADDR(DGFPL));                                    0629
*   CTGFLDNO=ONE;                                                  0630
         LA    @05,86                                              0630
         ALR   @05,@10                                             0630
         MVI   CTGFLDNO(@05),X'01'                                 0630
*   CTGFLDNM=ADDR('GDGNAME ');      /* PTR TO FIELD NAME             */
         LA    @00,@CC04341                                        0631
         ST    @00,CTGFLDNM(,@05)                                  0631
*   CTGFLCHN=ADDR(DGFPL2);          /* PTR TO TEST FPL               */
         LA    @00,DGFPL2(,@10)                                    0632
         ST    @00,CTGFLCHN(,@05)                                  0632
*   RFY                                                            0633
*     CTGFL BASED(ADDR(DGFPL2));                                   0633
*   CTGFLDNO=ONE;                                                  0634
         LA    @05,110                                             0634
         ALR   @05,@10                                             0634
         MVI   CTGFLDNO(@05),X'01'                                 0634
*   CTGFLDCD=CTGFLDEQ;              /* TEST SAME                     */
         MVI   CTGFLDCD(@05),X'80'                                 0635
*   CTGFLDNM=ADDR('GENLEVEL');      /* FIELD NAME                    */
         LA    @00,@CC04357                                        0636
         ST    @00,CTGFLDNM(,@05)                                  0636
*   CTGFLNG(1)=LENGTH(DGCODE);      /* LENGTH OF TEST DATA           */
         MVC   CTGFLNG(4,@05),@CF00039                             0637
*   CTGFLPT(1)=ADDR(DGCODE);        /* PTR TO TEST DATA              */
         LA    @10,DGCODE(,@10)                                    0638
         ST    @10,CTGFLPT(,@05)                                   0638
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0639
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPBCFD');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPBCFD'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0642
@EF00009 DS    0H                                                  0642
@ER00009 BR    @14                                                 0642
@PB00009 DS    0H                                                  0643
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0644
*/********************************************************************/
*/*                                                                  */
*/*        IGGPBCFD  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0644
*IGGPBCFD:                                                         0644
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0644
IGGPBCFD DS    0H                                                  0645
*Z068:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z068BCFD:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0645
*    (R5,                                                          0645
*     R6,                                                          0645
*     R7,                                                          0645
*     R8,                                                          0645
*     R9,                                                          0645
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z068     DS    0H                                                  0645
Z068BCFD DS    0H                                                  0646
*   RFY                                                            0646
*    (R2,                                                          0646
*     R3,                                                          0646
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0648
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* CHANGE CPL AND FPLS FOR DELETE OF DATA SET ASSO IN GDG BASE   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0649
*   RFY                                                            0649
*     CTGFL BASED(ADDR(DGFPL));                                    0649
*   CTGFLNG(1)=N;                   /* SET FOR DATA DELETE           */
         SLR   @10,@10                                             0650
         L     @05,CCAR5REC(,R11)                                  0650
         LA    @15,86                                              0650
         ALR   @15,@05                                             0650
         ST    @10,CTGFLNG(,@15)                                   0650
*   CTGFLPT(1)=N;                                                  0651
         ST    @10,CTGFLPT(,@15)                                   0651
*   CCAMCPL=ADDR(DGCPL);                                           0652
         LA    @10,DGCPL(,@05)                                     0652
         ST    @10,CCAMCPL(,R11)                                   0652
*   CCAR2WR=ON;                     /* UPDATE BASE                   */
         OI    CCAR2WR(R11),B'00010000'                            0653
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0654
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPGEXP');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPGEXP'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00010 DS    0H                                                  0657
@EF00010 DS    0H                                                  0657
@ER00010 BR    @14                                                 0657
@PB00010 DS    0H                                                  0658
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0659
*/********************************************************************/
*/*                                                                  */
*/*        IGGPGEXP  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0659
*IGGPGEXP:                                                         0659
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00011                                            0659
IGGPGEXP DS    0H                                                  0660
*Z069:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z069GEXP:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0660
*    (R5,                                                          0660
*     R6,                                                          0660
*     R7,                                                          0660
*     R8,                                                          0660
*     R9,                                                          0660
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z069     DS    0H                                                  0660
Z069GEXP DS    0H                                                  0661
*   RFY                                                            0661
*    (R2,                                                          0661
*     R3,                                                          0661
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0663
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* EXPAND GENLEVELS FROM STRING TO TABLE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0664
*   CCAURAB=ADDR(CCARAB2);          /* STRING IS IN RAB 2            */
         LA    @10,CCARAB2(,R11)                                   0664
         ST    @10,CCAURAB(,R11)                                   0664
*   DGLEV=N;                        /* CURRENT LEVEL COUNTER         */
         L     @10,CCAR5REC(,R11)                                  0665
         SLR   @05,@05                                             0665
         ST    @05,DGLEV(,@10)                                     0665
*   DGX=ONE;                        /* TABLE INDEX                   */
         LA    @05,1                                               0666
         ST    @05,DGX(,@10)                                       0666
*   DGCNT=-ONE;                     /* WILL CONTAIN NO OF ENTRIES    */
         L     @10,CCACMSWA(,R11)                                  0667
         MVC   DGCNT(2,@10),@CH04222                               0667
*   DO DGWK=1 BY 1 WHILE(DGCNT<0);  /* STEP THRU EXTING VALUES       */
         L     @10,CCAR5REC(,R11)                                  0668
         ST    @05,DGWK(,@10)                                      0668
         B     @DE00668                                            0668
@DL00668 DS    0H                                                  0669
*     DGVAL=DGENLVL(DGWK);          /* GET NEXT VALUE                */
         L     @10,CCAR5REC(,R11)                                  0669
         L     @05,DGWK(,@10)                                      0669
         L     @15,CCAURAB(,R11)                                   0669
         L     @15,CCACPE1(,@15)                                   0669
         SLR   @00,@00                                             0669
         IC    @00,DGENLVL-1(@05,@15)                              0669
         ST    @00,DGVAL(,@10)                                     0669
*     IF DGVAL=DGLEND THEN          /* IF END OF VALUES              */
         CH    @00,@CH03655                                        0670
         BNE   @RF00670                                            0670
*       DGCNT=DGX-ONE;              /* SET CNT TO NO OF VALUES       */
         L     @05,CCACMSWA(,R11)                                  0671
         L     @10,DGX(,@10)                                       0671
         BCTR  @10,0                                               0671
         STH   @10,DGCNT(,@05)                                     0671
*     ELSE                          /* NOT END                       */
*       IF DGVAL>DGLBLOCK THEN      /* ARE ONE OR TWO VALUES NEEDED  */
         B     @RC00670                                            0672
@RF00670 LA    @10,200                                             0672
         L     @05,CCAR5REC(,R11)                                  0672
         L     @15,DGVAL(,@05)                                     0672
         CR    @15,@10                                             0672
         BNH   @RF00672                                            0672
*         DGLEV=DGLEV+              /* TWO NEEDED                    */
*             (DGVAL-DGLBLOCK)*DGLBLOCK;                           0673
         SLR   @15,@10                                             0673
         MR    @14,@10                                             0673
         AL    @15,DGLEV(,@05)                                     0673
         ST    @15,DGLEV(,@05)                                     0673
*       ELSE                        /* ONE NEEDED OR SECOND PART     */
*         DO;                                                      0674
         B     @RC00672                                            0674
@RF00672 DS    0H                                                  0675
*           DGLEV=DGLEV+DGVAL;      /* UPDATE VALUE                  */
         L     @10,CCAR5REC(,R11)                                  0675
         L     @05,DGLEV(,@10)                                     0675
         AL    @05,DGVAL(,@10)                                     0675
         ST    @05,DGLEV(,@10)                                     0675
*           DGTAB(DGX)=DGLEV;       /* ADD TO TABLE                  */
         L     @15,DGX(,@10)                                       0676
         ALR   @15,@15                                             0676
         L     @14,CCAR4REC(,R11)                                  0676
         BCTR  @14,0                                               0676
         BCTR  @14,0                                               0676
         STH   @05,DGTAB(@15,@14)                                  0676
*           IF DGTAB(DGX)^<WRPLIMIT THEN/* ARE TABLE ENTRIES IN THE
*                                      9000 SERIES - POSSIBLE WRAP 0677
*                                      AROUND CONDITION      @YM05306*/
         CH    @05,@CH03697                                        0677
         BL    @RF00677                                            0677
*             DGWRAP=ON;            /* YES-POS WRAP ARND     @Y30LSPS*/
         OI    DGWRAP(@10),B'10000000'                             0678
*           ELSE                                                   0679
*             DGWRAP=OFF;           /* TABLE ENTRIES HAVE NOT REACHED
*                                      9000                  @YM05306*/
         B     @RC00677                                            0679
@RF00677 L     @10,CCAR5REC(,R11)                                  0679
         NI    DGWRAP(@10),B'01111111'                             0679
*           DGX=DGX+ONE;            /* INCR. INDEX                   */
@RC00677 L     @10,CCAR5REC(,R11)                                  0680
         LA    @05,1                                               0680
         AL    @05,DGX(,@10)                                       0680
         ST    @05,DGX(,@10)                                       0680
*         END;                                                     0681
*   END;                                                           0682
@RC00672 DS    0H                                                  0682
@RC00670 L     @10,CCAR5REC(,R11)                                  0682
         LA    @05,1                                               0682
         AL    @05,DGWK(,@10)                                      0682
         L     @10,CCAR5REC(,R11)                                  0682
         ST    @05,DGWK(,@10)                                      0682
@DE00668 L     @10,CCACMSWA(,R11)                                  0682
         ICM   @05,3,DGCNT(@10)                                    0682
         BM    @DL00668                                            0682
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0683
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPGCOM');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPGCOM'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00011 DS    0H                                                  0686
@EF00011 DS    0H                                                  0686
@ER00011 BR    @14                                                 0686
@PB00011 DS    0H                                                  0687
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0688
*/********************************************************************/
*/*                                                                  */
*/*        IGGPGCOM  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0688
*IGGPGCOM:                                                         0688
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00012                                            0688
IGGPGCOM DS    0H                                                  0689
*Z070:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z070GCOM:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0689
*    (R5,                                                          0689
*     R6,                                                          0689
*     R7,                                                          0689
*     R8,                                                          0689
*     R9,                                                          0689
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z070     DS    0H                                                  0689
Z070GCOM DS    0H                                                  0690
*   RFY                                                            0690
*    (R2,                                                          0690
*     R3,                                                          0690
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0692
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPRESS GENLEVEL TABLE FROM TABLE TO STRING                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0693
*   CCAURAB=ADDR(CCARAB2);          /* SET BASE FOR STRING           */
         LA    @10,CCARAB2(,R11)                                   0693
         ST    @10,CCAURAB(,R11)                                   0693
*   DGLEV=N;                        /* VALUE OF PREVIOUS ENTRY       */
         L     @10,CCAR5REC(,R11)                                  0694
         SLR   @05,@05                                             0694
         ST    @05,DGLEV(,@10)                                     0694
*   DGWK=ONE;                       /* INDEX IN STRING               */
         LA    @05,1                                               0695
         ST    @05,DGWK(,@10)                                      0695
*   DO DGX=1 BY 1 TO DGCNT;         /* STEP THRU TABLE               */
         L     @10,CCAR5REC(,R11)                                  0696
         ST    @05,DGX(,@10)                                       0696
         B     @DE00696                                            0696
@DL00696 DS    0H                                                  0697
*     IF DGTAB(DGX)^=DGIGNOR THEN   /* SKIP ENTRY IF ZERO            */
         L     @10,CCAR5REC(,R11)                                  0697
         L     @05,DGX(,@10)                                       0697
         ALR   @05,@05                                             0697
         L     @15,CCAR4REC(,R11)                                  0697
         BCTR  @15,0                                               0697
         BCTR  @15,0                                               0697
         LH    @05,DGTAB(@05,@15)                                  0697
         SLR   @00,@00                                             0697
         ICM   @00,3,DGIGNOR                                       0697
         CR    @05,@00                                             0697
         BE    @RF00697                                            0697
*       DO;                                                        0698
*         DGVAL=DGTAB(DGX)-DGLEV;   /* DIFFERENCE OF ENTRIES         */
         SL    @05,DGLEV(,@10)                                     0699
         ST    @05,DGVAL(,@10)                                     0699
*         IF DGVAL>DGLBLOCK THEN    /* CONV. TO ONE OR TWO ENTRIES   */
         LA    @15,200                                             0700
         CR    @05,@15                                             0700
         BNH   @RF00700                                            0700
*           DO;                                                    0701
*             DGENLVL(DGWK)=DGVAL/DGLBLOCK+DGLBLOCK;/* FIRST PART    */
         L     @14,DGWK(,@10)                                      0702
         L     @09,CCAURAB(,R11)                                   0702
         L     @09,CCACPE1(,@09)                                   0702
         LR    @07,@05                                             0702
         SLR   @06,@06                                             0702
         DR    @06,@15                                             0702
         ALR   @07,@15                                             0702
         STC   @07,DGENLVL-1(@14,@09)                              0702
*             DGWK=DGWK+ONE;                                       0703
         AL    @14,@CF00049                                        0703
         ST    @14,DGWK(,@10)                                      0703
*             DGVAL=DGVAL//DGLBLOCK;/* SECOND PART                   */
         LR    @06,@05                                             0704
         SRDA  @06,32                                              0704
         DR    @06,@15                                             0704
         ST    @06,DGVAL(,@10)                                     0704
*           END;                                                   0705
*         ELSE                                                     0706
*           ;                       /* ONE PART ENTRY                */
@RF00700 DS    0H                                                  0707
*         DGENLVL(DGWK)=DGVAL;      /* STORE ONLY OR SECOND PART     */
         L     @10,CCAR5REC(,R11)                                  0707
         L     @05,DGWK(,@10)                                      0707
         L     @15,CCAURAB(,R11)                                   0707
         L     @15,CCACPE1(,@15)                                   0707
         L     @00,DGVAL(,@10)                                     0707
         STC   @00,DGENLVL-1(@05,@15)                              0707
*         DGWK=DGWK+ONE;                                           0708
         AL    @05,@CF00049                                        0708
         ST    @05,DGWK(,@10)                                      0708
*         DGLEV=DGTAB(DGX);                                        0709
         L     @05,DGX(,@10)                                       0709
         ALR   @05,@05                                             0709
         L     @15,CCAR4REC(,R11)                                  0709
         BCTR  @15,0                                               0709
         BCTR  @15,0                                               0709
         LH    @05,DGTAB(@05,@15)                                  0709
         ST    @05,DGLEV(,@10)                                     0709
*       END;                                                       0710
*   END;                                                           0711
@RF00697 L     @10,CCAR5REC(,R11)                                  0711
         LA    @05,1                                               0711
         AL    @05,DGX(,@10)                                       0711
         L     @10,CCAR5REC(,R11)                                  0711
         ST    @05,DGX(,@10)                                       0711
@DE00696 L     @10,CCACMSWA(,R11)                                  0711
         CH    @05,DGCNT(,@10)                                     0711
         BNH   @DL00696                                            0711
*   DGENLVL(DGWK)=DGLEND;           /* MARK END                      */
         L     @10,CCAR5REC(,R11)                                  0712
         L     @10,DGWK(,@10)                                      0712
         L     @05,CCAURAB(,R11)                                   0712
         L     @05,CCACPE1(,@05)                                   0712
         LA    @00,255                                             0712
         STC   @00,DGENLVL-1(@10,@05)                              0712
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0713
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPERUG');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPERUG'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00012 DS    0H                                                  0716
@EF00012 DS    0H                                                  0716
@ER00012 BR    @14                                                 0716
@PB00012 DS    0H                                                  0717
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0718
*/********************************************************************/
*/*                                                                  */
*/*        IGGPERUG  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0718
*IGGPERUG:                                                         0718
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00013                                            0718
IGGPERUG DS    0H                                                  0719
*   GEN(ENTRY IGGPERUG );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPERUG
*Z071:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z071ERUG:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0720
*    (R5,                                                          0720
*     R6,                                                          0720
*     R7,                                                          0720
*     R8,                                                          0720
*     R9,                                                          0720
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z071     DS    0H                                                  0720
Z071ERUG DS    0H                                                  0721
*   RFY                                                            0721
*    (R2,                                                          0721
*     R3,                                                          0721
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0726
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE REFERENCE TO GDG DATA SET(IN RAB 1) FROM GDG BASE (IN  */
*   /* RAB 2)                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0727
*   CCAURAB=ADDR(CCARAB1);          /* SET BASE                      */
         LA    @10,CCARAB1(,R11)                                   0727
         ST    @10,CCAURAB(,R11)                                   0727
*   AFCOTL=N;                                                      0728
         L     @10,CCACMSWA(,R11)                                  0728
         SLR   @05,@05                                             0728
         STH   @05,AFCOTL(,@10)                                    0728
*   DO AFIND=LENGTH(CNAME) BY-1 TO 10 WHILE(AFCOTL=0);             0729
         LA    @10,44                                              0729
         L     @05,CCAR5REC(,R11)                                  0729
         STH   @10,AFIND(,@05)                                     0729
@DL00729 L     @10,CCACMSWA(,R11)                                  0729
         ICM   @05,3,AFCOTL(@10)                                   0729
         BNZ   @DC00729                                            0729
*     IF CNAME(AFIND)^=' ' THEN     /* END OF NAME?                  */
         L     @05,CCAR5REC(,R11)                                  0730
         LH    @05,AFIND(,@05)                                     0730
         L     @15,CCAURAB(,R11)                                   0730
         L     @15,CCACPE1(,@15)                                   0730
         ALR   @15,@05                                             0730
         CLI   CNAME-1(@15),C' '                                   0730
         BE    @RF00730                                            0730
*       AFCOTL=AFIND;               /* MARK END OF NAME              */
         STH   @05,AFCOTL(,@10)                                    0731
*   END;                                                           0732
@RF00730 L     @05,CCAR5REC(,R11)                                  0732
         SLR   @10,@10                                             0732
         BCTR  @10,0                                               0732
         AH    @10,AFIND(,@05)                                     0732
         L     @05,CCAR5REC(,R11)                                  0732
         STH   @10,AFIND(,@05)                                     0732
         CH    @10,@CH00203                                        0732
         BNL   @DL00729                                            0732
@DC00729 DS    0H                                                  0733
*   DGCODE=CNAME(AFCOTL-SLEV:AFCOTL-ELEV);/* SET LEVEL (CODED)       */
         L     @10,CCAR5REC(,R11)                                  0733
         L     @05,CCACMSWA(,R11)                                  0733
         LH    @05,AFCOTL(,@05)                                    0733
         L     @15,CCAURAB(,R11)                                   0733
         L     @15,CCACPE1(,@15)                                   0733
         ALR   @15,@05                                             0733
         MVC   DGCODE(4,@10),CNAME-7(@15)                          0733
*   PACK(DGPAK,DGCODE);                                            0734
         PACK  DGPAK(8,@10),DGCODE(4,@10)                          0734
*   CVB(DGBIN,DGPAK);                                              0735
*                                                                  0735
         CVB   @05,DGPAK(,@10)                                     0735
         ST    @05,DGBIN(,@10)                                     0735
*   /*****************************************************************/
*   /*                                                               */
*   /* EXTRACT GENLEVELS AND ATTR                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0736
*Z072GEXP:                                                         0736
*   CALL IGGPGEXP;                  /* EXPAND GENLEVEL               */
Z072GEXP BAL   @14,IGGPGEXP                                        0736
*   DO AFIDEL=1 TO DGCNT WHILE(AFCOTL^=0);                         0737
         LA    @10,1                                               0737
         B     @DE00737                                            0737
@DL00737 SLR   @10,@10                                             0737
         L     @05,CCACMSWA(,R11)                                  0737
         CH    @10,AFCOTL(,@05)                                    0737
         BE    @DC00737                                            0737
*     IF DGTAB(AFIDEL)=DGBIN THEN   /* IS THIS THE ENTRY TO DEL?     */
         LH    @15,AFIDEL(,@05)                                    0738
         ALR   @15,@15                                             0738
         L     @14,CCAR4REC(,R11)                                  0738
         L     @09,CCAR5REC(,R11)                                  0738
         LA    @08,0(@15,@14)                                      0738
         BCTR  @08,0                                               0738
         BCTR  @08,0                                               0738
         LH    @00,DGTAB(,@08)                                     0738
         C     @00,DGBIN(,@09)                                     0738
         BNE   @RF00738                                            0738
*       DO;                                                        0739
*         DGTAB(AFIDEL)=DGIGNOR;    /* SET FLAG TO DELETE ENTRY      */
         SLR   @00,@00                                             0740
         ICM   @00,3,DGIGNOR                                       0740
         BCTR  @14,0                                               0740
         BCTR  @14,0                                               0740
         STH   @00,DGTAB(@15,@14)                                  0740
*         AFCOTL=N;                                                0741
         STH   @10,AFCOTL(,@05)                                    0741
*       END;                                                       0742
*   END;                                                           0743
@RF00738 L     @05,CCACMSWA(,R11)                                  0743
         LA    @10,1                                               0743
         AH    @10,AFIDEL(,@05)                                    0743
@DE00737 L     @05,CCACMSWA(,R11)                                  0743
         STH   @10,AFIDEL(,@05)                                    0743
         L     @05,CCACMSWA(,R11)                                  0743
         CH    @10,DGCNT(,@05)                                     0743
         BNH   @DL00737                                            0743
@DC00737 DS    0H                                                  0744
*Z073GCOM:                                                         0744
*   CALL IGGPGCOM;                  /* COMPRESS GENLEVEL             */
*                                                                  0744
Z073GCOM BAL   @14,IGGPGCOM                                        0744
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ASSO PTR TO DATA SET                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0745
*Z074BCFC:                                                         0745
*   CALL IGGPBCFC;                                                 0745
Z074BCFC BAL   @14,IGGPBCFC                                        0745
*Z075BCFD:                                                         0746
*   CALL IGGPBCFD;                  /* BUILD CPL/FPL                 */
*                                                                  0746
Z075BCFD BAL   @14,IGGPBCFD                                        0746
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAV                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0747
*Z076MOD:                                                          0747
*   CALL IGGPMOD;                   /* DELETE ASSO.                  */
Z076MOD  L     @15,@CV03651                                        0747
         BALR  @14,@15                                             0747
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0748
*   END;                            /* END OF INNER PROCEDURE        */
@EL00013 DS    0H                                                  0749
@EF00013 DS    0H                                                  0749
@ER00013 BR    @14                                                 0749
@PB00013 DS    0H                                                  0750
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0751
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0751
*EXIT:                                                             0751
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00014                                            0751
EXIT     DS    0H                                                  0752
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0755
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00014 DS    0H                                                  0756
@EF00014 DS    0H                                                  0756
@ER00014 BR    @14                                                 0756
*   END                                                            0757
*                                                                  0757
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDAVVOLL)                                       */
*/*%INCLUDE SYSLIB  (IGGMGVO )                                       */
*/*%INCLUDE SYSLIB  (IGGMVEDC)                                       */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (ICHACHKL)                                       */
*/*%INCLUDE SYSLIB  (ICHRDDFL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*                                                                  0757
*       ;                                                          0757
@EL00001 DS    0H                                                  0757
@EF00001 DS    0H                                                  0757
@ER00001 BR    @14                                                 0757
@DATA    DS    0H
@CH00119 DC    H'2'
@CH00136 DC    H'3'
@CH00203 DC    H'10'
@CH00207 DC    H'12'
@CH03655 DC    H'255'
@CH03697 DC    H'9000'
@CH03693 DC    H'10000'
@CH04222 DC    H'-1'
@DATD    DSECT
         DS    0F
IGG0CLA4 CSECT
         DS    0F
@CF00049 DC    F'1'
@CH00049 EQU   @CF00049+2
@CF00039 DC    F'4'
@CF00041 DC    F'8'
@CF04404 DC    F'684'
@CF00035 DC    F'-1040973824'
@CF04406 DC    F'-1040973148'
@CF04411 DC    F'-7'
@CF04416 DC    F'-4'
@DATD    DSECT
         DS    0D
UCBPTR   DS    A
UCBDCPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLA4 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03642 DC    V(IGGPPUPC)
@CV03644 DC    V(IGGPARFS)
@CV03645 DC    V(IGGPDEL)
@CV03647 DC    V(IGGPEXT)
@CV03649 DC    V(IGGPRACG)
@CV03650 DC    V(IGGPGET)
@CV03651 DC    V(IGGPMOD)
@CV03648 DC    V(IGGPAXCI)
@CV03643 DC    V(IGGPPAD)
@CV03652 DC    V(IGGPPDE)
@CV03646 DC    V(IGGPSMFA)
         DS    0D
@CC04341 DC    C'GDGNAME '
@CC04357 DC    C'GENLEVEL'
DGIGNOR  DC    X'7FFF'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
DCWABASE EQU   @04
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IDAVVOLL EQU   0
@NM00006 EQU   IDAVVOLL
VVOLLERR EQU   IDAVVOLL+12
VVOLLENT EQU   IDAVVOLL+36
@NM00009 EQU   VVOLLENT+4
GVO      EQU   0
CMFLVLFL EQU   GVO+12
CMFLITEX EQU   GVO+34
CMFOVERL EQU   GVO+37
CMFOVLAY EQU   0
CMFXECTS EQU   0
CMFXEXST EQU   CMFXECTS+2
CMFXSTA  EQU   CMFXEXST
CMFXEXED EQU   CMFXECTS+6
CMFXEDA  EQU   CMFXEXED
CTVOLRCD EQU   1
CTVDVCHR EQU   CTVOLRCD+52
CTVBOKAB EQU   CTVDVCHR+14
CTVDVFLG EQU   CTVDVCHR+17
CTVSPHDR EQU   0
CTVSPFLG EQU   CTVSPHDR+15
CTVDESGP EQU   0
CTVEXTST EQU   CTVDESGP+4
CTVSTDES EQU   CTVEXTST
CTVDSGRP EQU   0
CTVDSDFL EQU   CTVDSGRP+6
CTVDSDIR EQU   CTVDSGRP+9
CTVGOPT  EQU   0
CTVGOCI  EQU   CTVGOPT
CTVGOGCI EQU   CTVGOPT+3
CTVRCTRL EQU   0
CTVEXRPT EQU   CTVRCTRL
CTVSPMAP EQU   0
CTVSMSN  EQU   CTVSPMAP
CTVDSPAC EQU   0
CTVDSPSN EQU   CTVDSPAC
CTVDSPFG EQU   CTVDSPAC+15
CTVSPEXT EQU   CTVDSPAC+21
CTVEXTNT EQU   CTVSPEXT
CTVDIR   EQU   0
CTVDSDSN EQU   CTVDIR
CTVDEXTN EQU   0
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2NVC EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1UR  EQU   CCAR1FLG
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2UR  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2SEG EQU   CCARAB2+8
CCACPE22 EQU   CCAR2SEG
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3UR  EQU   CCAR3FLG
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4UR  EQU   CCAR4FLG
CCAR4REC EQU   CCARAB4+4
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5UR  EQU   CCAR5FLG
CCAR5REC EQU   CCARAB5+4
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCAMCPL  EQU   CCAXCPL
CCARABB  EQU   IGGCCA+380
CCARABF  EQU   IGGCCA+384
CCARABL  EQU   IGGCCA+388
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
RVCMSFG  EQU   CCARVFG1
CCAFLG11 EQU   IGGCCA+1059
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCADGDGA EQU   IGGCCA+1488
CCAREQDQ EQU   IGGCCA+1492
CCAREDOP EQU   CCAREQDQ+2
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGRCATN EQU   CTGVMNT
CTGSCR   EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDCD EQU   CTGFL+1
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKALEN2  EQU   USERWKA+2
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDSECF  EQU   CATRCD+26
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBSTAWA EQU   TCB+252
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBINFL1 EQU   ACBINFLG
ACBVVIC  EQU   ACBINFL1
ACBINFL2 EQU   ACBINFLG+1
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
NOBASE   EQU   0
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXRAC   EQU   CAXFLG3
CAXUCB   EQU   IGGCAXWA+28
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CAXCCA   EQU   IGGCAXWA+104
CAXECB   EQU   IGGCAXWA+120
CAXECBHB EQU   CAXECB
CAXHRPLW EQU   IGGCAXWA+128
CTGFV    EQU   0
CTGFVTYP EQU   CTGFV
CTGFVPRO EQU   CTGFV+1
CTGFVENT EQU   CTGFV+20
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGFVPWD EQU   CTGFV+84
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
ACHKLIST EQU   0
ACHKINSW EQU   ACHKLIST
ACHKENTW EQU   ACHKLIST+4
ACHKFLG1 EQU   ACHKENTW
ACHKENT  EQU   ACHKENTW+1
ACHKCLNW EQU   ACHKLIST+8
ACHKFLG2 EQU   ACHKCLNW
ACHKVOLW EQU   ACHKLIST+12
ACHKFLG3 EQU   ACHKVOLW
RDDFLIST EQU   0
RDDFINSW EQU   RDDFLIST
RDDFENTW EQU   RDDFLIST+4
RDDFFLGS EQU   RDDFENTW
RDDFOVOL EQU   RDDFLIST+8
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
ENTRYNAM EQU   0
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMCPLFVT EQU   CMSWA+20
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
CMRNGCTR EQU   CMSWA+40
CMVOLCTR EQU   CMSWA+42
CMSDFSPC EQU   CMSWA+48
CMVLLIST EQU   CMSWA+64
CMVLRTCD EQU   CMVLLIST+2
CMSPCATR EQU   CMSWA+76
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMUCATCI EQU   CMSWA+410
CMSCTREC EQU   CMSWA+416
CMSRAC   EQU   CMSWA+516
CMSROBJA EQU   CMSRAC+32
CMSROBJN EQU   CMSROBJA
DELWKA   EQU   0
@NM00157 EQU   DELWKA+16
DELCODE5 EQU   @NM00157
DELSGRRN EQU   DELWKA+17
DELI     EQU   DELSGRRN
DELSPFLG EQU   DELI
DELVRRN  EQU   DELWKA+20
DELVCRN  EQU   DELWKA+22
DELXTNWA EQU   DELWKA+24
DELXLOC  EQU   DELXTNWA
DELXLEN  EQU   DELXTNWA+4
DELRACF  EQU   DELXLEN+3
DELERRSX EQU   DELWKA+32
DELERRS  EQU   DELERRSX
DELEXTWA EQU   DELWKA+52
DELCPL   EQU   DELEXTWA
@NM00161 EQU   DELEXTWA+28
DELFPLR  EQU   DELEXTWA+32
@NM00162 EQU   DELEXTWA+48
DELNMR   EQU   DELEXTWA+56
DELFPLT  EQU   DELEXTWA+64
@NM00163 EQU   DELEXTWA+80
DELNMT   EQU   DELEXTWA+88
@NM00164 EQU   DELEXTWA+112
DELNMT2  EQU   DELEXTWA+120
DELDIV   EQU   DELWKA+188
DELASCWA EQU   DELDIV
DELASSO  EQU   DELASCWA+4
DELCASWA EQU   DELDIV+16
DELCASSO EQU   DELCASWA+4
DELGASWA EQU   DELDIV+32
DELGASSO EQU   DELGASWA+4
DELRASWA EQU   DELDIV+48
DELRASSO EQU   DELRASWA+4
DELXASWA EQU   DELDIV+72
DELXASSO EQU   DELXASWA+4
DELVGOWA EQU   DELDIV+80
DELSHWA  EQU   DELDIV+137
DELDSDWA EQU   DELDIV+226
DELDIRCT EQU   DELDSDWA+4
DELSCRWA EQU   DELWKA+424
DELSCRTH EQU   DELSCRWA
DELSVOL  EQU   DELSCRWA+16
DELVOLL  EQU   DELWKA+454
DELTIOPT EQU   DELWKA+504
DELOPNPL EQU   DELWKA+508
DELOPOPT EQU   DELOPNPL
DELERASE EQU   0
DELPASSW EQU   DELERASE+156
DELENQ   EQU   0
ENQPROPR EQU   DELENQ
ENQOPT1  EQU   ENQPROPR
ENQOPT2  EQU   ENQPROPR+2
RNAME    EQU   DELENQ+12
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
DEFXWA   EQU   0
DEFXASWA EQU   DEFXWA+112
DEFXASWO EQU   DEFXWA+120
DEFXASWF EQU   DEFXWA+124
DEFXASWB EQU   DEFXWA+128
DGWA     EQU   0
DGPAK    EQU   DGWA+8
DGCODE   EQU   DGWA+16
DGCODEM  EQU   DGCODE+3
DGBIN    EQU   DGWA+20
DGLEV    EQU   DGWA+24
DGX      EQU   DGWA+28
DGVAL    EQU   DGWA+32
DGWK     EQU   DGWA+36
DGFLGS   EQU   DGWA+40
DGWRAP   EQU   DGFLGS
AFIND    EQU   DGWA+42
DGCF     EQU   DGWA+46
DGCPL    EQU   DGCF
DGFPL    EQU   DGCF+40
DGFPL2   EQU   DGCF+64
DGEAWA   EQU   DGWA+158
DGELEN   EQU   DGEAWA
DGMAWA   EQU   DGWA+162
DGASTYPE EQU   DGMAWA
DGASCI   EQU   DGMAWA+1
DGML     EQU   DGMAWA+4
DGEXPGLV EQU   0
DGTAB    EQU   DGEXPGLV
GDGPASS  EQU   0
GDGBASCI EQU   GDGPASS
GDGVLEN  EQU   GDGPASS+3
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00195 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
BUFSIZE  EQU   0
CATRECRD EQU   0
CATSN    EQU   0
CFLD     EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
EXCPNAME EQU   0
FIELDNM  EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
PASSSTRT EQU   0
TNAM     EQU   0
UCBBGN   EQU   0
@NM00057 EQU   CTGDDNM
CTGPROB  EQU   @NM00057
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CNAME    EQU   CTGRBASE
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00135 EQU   CATTR1
CCATTR   EQU   @NM00135
@NM00136 EQU   CCATTR
@NM00138 EQU   CATTR1
CRGATTR  EQU   @NM00138
CUPG     EQU   CRGATTR
DEFGLWA  EQU   CATTR
DEFGLAA  EQU   DEFGLWA
DGSAVEWA EQU   CMSCTREC
AFIDEL   EQU   DGSAVEWA
AFCDEL   EQU   DGSAVEWA+2
DGDEL    EQU   DGSAVEWA+4
AFCOTL   EQU   DGSAVEWA+6
DGCNT    EQU   DGSAVEWA+8
TEMPCPE2 EQU   DGSAVEWA+12
AFCURLV  EQU   DGSAVEWA+16
DGSVFVT  EQU   DGSAVEWA+20
BINLEVEL EQU   DGSAVEWA+24
DGBASECI EQU   DGSAVEWA+28
TEMPRC   EQU   DGSAVEWA+31
TEMPRCD  EQU   TEMPRC+3
TEMPCI   EQU   DGSAVEWA+35
TEMPDGML EQU   DGSAVEWA+38
GDGLEVEL EQU   DGSAVEWA+42
DGEAGWA  EQU   CATTR
DGLMT    EQU   DGEAGWA
DGEA     EQU   DGEAGWA+1
DGTD     EQU   DGEA
DGSR     EQU   DGEA
DGENLVL  EQU   DGEAGWA+4
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00194 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
ACHKPROF EQU   ACHKENT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00194
UCBSKPFG EQU   @NM00194
UCBRIPND EQU   @NM00194
UCBRTIAC EQU   @NM00194
UCBRSV79 EQU   @NM00194
UCBRSV78 EQU   @NM00194
UCBRSV77 EQU   @NM00194
UCBOLTEP EQU   @NM00194
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00193 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00191 EQU   DGEAGWA+2
@NM00190 EQU   DGEA
TEMPRSN  EQU   TEMPRC+2
TEMPID   EQU   TEMPRC
DEFGLGV  EQU   DEFGLWA+4
DEFGLL   EQU   DEFGLWA+2
DEFGAT   EQU   DEFGLAA+1
DEFGLMT  EQU   DEFGLAA
@NM00139 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00136
CSWAPSPC EQU   @NM00136
@NM00137 EQU   @NM00136
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00134 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
CATTISDS EQU   CATTR2
@NM00133 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CEXP     EQU   CTGRBASE+55
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
@NM00110 EQU   MCATDSTR+1
@NM00109 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00195
UCBHALI  EQU   @NM00195
UCBRSV09 EQU   @NM00195
UCBRSV08 EQU   @NM00195
UCBRSV07 EQU   @NM00195
UCBRSV06 EQU   @NM00195
UCBRSV05 EQU   @NM00195
UCBRSV04 EQU   @NM00195
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00192 EQU   UCB
DGEND    EQU   DGEXPGLV
DEND     EQU   DGWA+170
DGERLEN  EQU   DGEAWA+2
@NM00189 EQU   DGWA+150
DGFPL3   EQU   DGWA+134
@NM00188 EQU   DGCF+80
@NM00187 EQU   DGCF+56
@NM00186 EQU   DGCF+28
@NM00185 EQU   DGWA+44
@NM00184 EQU   DGWA+41
@NM00183 EQU   DGCODE+3
@NM00182 EQU   DGCODE
@NM00181 EQU   DGWA
DEFXEND  EQU   DEFXWA+132
DFASCIB  EQU   DEFXASWB+1
DFASTYPB EQU   DEFXASWB
DFASCIF  EQU   DEFXASWF+1
DFASTYPF EQU   DEFXASWF
DFASCIO  EQU   DEFXASWO+1
DFASTYPO EQU   DEFXASWO
DFASCI   EQU   DEFXASWA+5
DFASTYPE EQU   DEFXASWA+4
DFARLEN  EQU   DEFXASWA+2
DFALEN   EQU   DEFXASWA
@NM00180 EQU   DEFXWA+104
DEFXFPL3 EQU   DEFXWA+88
@NM00179 EQU   DEFXWA+80
DEFXFPL2 EQU   DEFXWA+64
@NM00178 EQU   DEFXWA+56
DEFXFPL  EQU   DEFXWA+40
@NM00177 EQU   DEFXWA+28
DEFXCPL  EQU   DEFXWA
CUMRC    EQU   CUMWA+148
@NM00176 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00175 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00174 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00173 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00172 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00171 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
RNAMEID  EQU   RNAME+7
RNAMECA  EQU   RNAME+3
RNAMECI  EQU   RNAME
ENQRNADR EQU   ENQPROPR+8
ENQQNADR EQU   ENQPROPR+4
ENQRETC  EQU   ENQPROPR+3
@NM00170 EQU   ENQOPT2
ENQSHR   EQU   ENQOPT2
ENQRLEN  EQU   ENQPROPR+1
ENQDIR   EQU   ENQOPT1
@NM00169 EQU   ENQOPT1
ENQNEW   EQU   ENQOPT1
ENQEND   EQU   ENQOPT1
DELPASWD EQU   DELPASSW+1
DELPASLN EQU   DELPASSW
DELRCPTR EQU   DELERASE+152
DELRPL   EQU   DELERASE+76
DELACB   EQU   DELERASE
F        EQU   DELWKA+514
@NM00168 EQU   DELWKA+512
DELACBPT EQU   DELOPNPL+1
@NM00167 EQU   DELOPOPT
DELOPEND EQU   DELOPOPT
DELHECIN EQU   DELTIOPT+1
@NM00166 EQU   DELTIOPT
DELPROC  EQU   DELWKA+502
DELSVTET EQU   DELWKA+490
DELSVMTL EQU   DELVOLL
DELSRCD2 EQU   DELSVOL+13
DELSRCD1 EQU   DELSVOL+12
DELSVLID EQU   DELSVOL+6
DELSDEVT EQU   DELSVOL+2
DELSNVLS EQU   DELSVOL
DELSVLST EQU   DELSCRTH+12
DELSNUSE EQU   DELSCRTH+8
DELSDSNM EQU   DELSCRTH+4
DELSCRFL EQU   DELSCRTH
@NM00165 EQU   DELDSDWA+9
DELDRRN  EQU   DELDIRCT
DELDRLNG EQU   DELDSDWA+2
DELDLNG  EQU   DELDSDWA
DELDSGRP EQU   DELSHWA+4
DELSRLNG EQU   DELSHWA+2
DELSLNG  EQU   DELSHWA
DELVGO   EQU   DELVGOWA+6
DELTVRRN EQU   DELVGOWA+4
DELVRLNG EQU   DELVGOWA+2
DELVLNG  EQU   DELVGOWA
DELXCI   EQU   DELXASSO+1
DELXTYPE EQU   DELXASSO
DELXRLNG EQU   DELXASWA+2
DELXALNG EQU   DELXASWA
DELRCI   EQU   DELRASSO+1
DELRTYP  EQU   DELRASSO
DELRRLNG EQU   DELRASWA+2
DELRALNG EQU   DELRASWA
DELGCI   EQU   DELGASSO+1
DELGTYPE EQU   DELGASSO
DELGRLNG EQU   DELGASWA+2
DELGALNG EQU   DELGASWA
DELCCI   EQU   DELCASSO+1
DELCTYPE EQU   DELCASSO
DELCRLNG EQU   DELCASWA+2
DELCALNG EQU   DELCASWA
DELACI   EQU   DELASSO+1
DELATYPE EQU   DELASSO
DELARLNG EQU   DELASCWA+2
DELALNG  EQU   DELASCWA
DELR13SA EQU   DELWKA+184
DELUSINX EQU   DELWKA+183
DELNROBJ EQU   DELWKA+182
DELNGOBJ EQU   DELWKA+181
DELNCOBJ EQU   DELWKA+180
DELT2NM  EQU   DELNMT2
DELT2DT  EQU   @NM00164
DELFPLT2 EQU   DELEXTWA+96
DELT1NM  EQU   DELNMT
DELT1DT  EQU   @NM00163
DELFPLT1 EQU   DELFPLT
DELFL1NM EQU   DELNMR
DELFL1DT EQU   @NM00162
DELFPLDT EQU   DELFPLR
DELCPLFL EQU   @NM00161
DELCPLST EQU   DELCPL
DELRETCD EQU   DELERRS+3
DELREASN EQU   DELERRS+2
DELMODID EQU   DELERRS
@NM00160 EQU   DELRACF
DELINDI  EQU   DELRACF
DELINDD  EQU   DELRACF
DELINDC  EQU   DELRACF
@NM00159 EQU   DELXLEN+2
TSTSPDUU EQU   DELXLEN
DELTSFPL EQU   DELXLOC
TSTCNTRN EQU   DELVCRN
TSTRELSP EQU   DELVRRN
DELC     EQU   DELWKA+19
DELE     EQU   DELSGRRN+1
@NM00158 EQU   DELSPFLG
DELNONVS EQU   DELSPFLG
DELSPSCR EQU   DELCODE5
DELCODE4 EQU   @NM00157
DELCODE3 EQU   @NM00157
DELGNMR  EQU   @NM00157
DELCAT   EQU   @NM00157
DELKYRNG EQU   @NM00157
DELCODE2 EQU   @NM00157
DELCODE  EQU   @NM00157
DELERRIX EQU   DELWKA+15
DELRTYPE EQU   DELWKA+14
DELR3SAV EQU   DELWKA+13
DELNMOBJ EQU   DELWKA+12
@NM00156 EQU   DELWKA
CMSDYNAL EQU   CMSRAC+164
@NM00155 EQU   CMSROBJN+1
CMSROBJI EQU   CMSROBJN
CMSWRMAC EQU   CMSRAC+16
CMSWARFV EQU   CMSRAC+12
CMSRDSVL EQU   CMSRAC+8
CMSRDSNA EQU   CMSRAC+4
@NM00154 EQU   CMSRAC+2
CMSREACD EQU   CMSRAC+1
CMSRETCD EQU   CMSRAC
CMSRACBF EQU   CMSWA+504
CMBYTAU  EQU   CMSWA+500
CMBYTTRK EQU   CMSWA+496
@NM00153 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMBLPTKS EQU   CMSWA+408
CMSDSPTB EQU   CMSWA+344
@NM00152 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00151 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00150 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
DCWFPLPT EQU   CMSWA+196
DCWAREPT EQU   CMSWA+192
@NM00149 EQU   CMSWA+190
DCWIX    EQU   CMSWA+188
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
CMDEFSWA EQU   CMSWA+128
CMSRCCOR EQU   CMSWA+124
CMEXTLST EQU   CMSWA+120
WORKPROC EQU   CMSWA+118
@NM00148 EQU   CMSWA+116
CMFPLIDX EQU   CMSWA+112
CMCNVNO  EQU   CMSWA+110
CMCNVLEN EQU   CMSWA+108
CMTRKCYL EQU   CMSPCATR+12
CMTRKPCA EQU   CMSPCATR+10
CMBLKTRK EQU   CMSPCATR+8
CMSWADTY EQU   CMSPCATR+4
CMPHYBLK EQU   CMSPCATR
CMTOTVOL EQU   CMSWA+74
CMVLVOL  EQU   CMVLLIST+4
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
CMVLLTLN EQU   CMVLLIST
@NM00147 EQU   CMSWA+62
CMSCRADT EQU   CMSWA+58
CMSCRAVI EQU   CMSWA+52
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
CMRMVVOL EQU   CMVOLCTR
CMADDVOL EQU   CMRNGCTR
SPACINDC EQU   CMSWA+38
PROCESS  EQU   CMSWA+36
CMDTAFPL EQU   CMHIXFPL
CMTSTFPL EQU   CMHDTFPL
CMRNMLST EQU   CMLDTFPL
CMEXTFLS EQU   CMCPLFVT
CMASCFPL EQU   CMSWA+16
CMWFVTPT EQU   CMSWA+12
CMWACI   EQU   CMSWA+3
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMCISREQ EQU   CMSWA+1
CMSUALOC EQU   CMWFLAGS
CMSRACDL EQU   CMWFLAGS
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00146 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00145 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00144 EQU   RTDEVUCB
@NM00143 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00142 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00141 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00140 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTVOLSER EQU   LTENTRY+2
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00132 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
RDDFVSER EQU   RDDFLIST+12
RDDFNNAM EQU   RDDFOVOL
RDDFENT  EQU   RDDFENTW+1
@NM00131 EQU   RDDFFLGS
RDDFDSTV EQU   RDDFFLGS
@NM00130 EQU   RDDFFLGS
RDDFNEWN EQU   RDDFFLGS
RDDFOLDV EQU   RDDFFLGS
RDDFTADV EQU   RDDFFLGS
RDDFTDEL EQU   RDDFFLGS
RDDFINST EQU   RDDFINSW+1
RDDFLENG EQU   RDDFINSW
ACHKVOLS EQU   ACHKVOLW+1
@NM00129 EQU   ACHKFLG3
ACHKVOL  EQU   ACHKFLG3
@NM00128 EQU   ACHKFLG3
ACHKPRF  EQU   ACHKFLG3
@NM00127 EQU   ACHKFLG3
ACHKCLN  EQU   ACHKCLNW+1
@NM00126 EQU   ACHKFLG2
ACHKTRD  EQU   ACHKFLG2
ACHKTUPD EQU   ACHKFLG2
ACHKTCTL EQU   ACHKFLG2
@NM00125 EQU   ACHKFLG2
ACHKTALT EQU   ACHKFLG2
ACHKCSA  EQU   ACHKFLG1
ACHKLOGN EQU   ACHKFLG1
ACHKLOGF EQU   ACHKFLG1
@NM00124 EQU   ACHKFLG1
ACHKDSTV EQU   ACHKFLG1
@NM00123 EQU   ACHKFLG1
@NM00122 EQU   ACHKFLG1
@NM00121 EQU   ACHKFLG1
ACHKINST EQU   ACHKINSW+1
ACHKLENG EQU   ACHKINSW
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00120 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVCPP EQU   CTGFVPWD
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00119 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00118 EQU   CTGFVPRO
CTGFVROF EQU   CTGFVPRO
CTGFVRON EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CAXWNQID EQU   CAXHRPLW+2
CAXHRPLC EQU   CAXHRPLW
CAXASCBP EQU   IGGCAXWA+124
@NM00117 EQU   CAXECB+1
@NM00116 EQU   CAXECBHB
CAXECBPB EQU   CAXECBHB
CAXECBWB EQU   CAXECBHB
CAXRACP  EQU   IGGCAXWA+116
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXPLOCK EQU   CAXCCA
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00115 EQU   COPTS
CENLST   EQU   COPTS
@NM00114 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00113 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00112 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00111 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00108 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00107 EQU   ACBINFL2
ACBCBIC  EQU   ACBINFL2
@NM00106 EQU   ACBINFL2
ACBBYPSS EQU   ACBINFL1
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFL1
ACBSCRA  EQU   ACBINFL1
ACBCAT   EQU   ACBINFL1
ACBIJRQE EQU   ACBINFL1
ACBJEPS  EQU   ACBINFL1
@NM00105 EQU   ACBINFL1
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00104 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00103 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00102 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00101 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00100 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00099 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00098 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00097 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00096 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00071 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00070 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAFX EQU   TCBSTAWA
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00069 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00068 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00067 EQU   CVTFIX+248
@NM00066 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00065 EQU   EXTRCDPT+3
EXTGOCI  EQU   EXTRCDPT
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
RCDID    EQU   CATRCD+44
@NM00064 EQU   CATRCD+27
RCDEXSEC EQU   RCDSECF
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00063 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00062 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00061 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00060 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00059 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
ENTNAMEV EQU   ENTNAMES+1
ENTNAMET EQU   ENTNAMES
WKALEN1  EQU   USERWKA
CTGFLDTS EQU   CTGFLDRE
@NM00058 EQU   CTGFLDRE
CTGPSWD  EQU   CTGJSCB
@NM00056 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00055 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00054 EQU   CTGOPTN4
CTGTIOT  EQU   CTGOPTN4
CTGBYPMT EQU   CTGOPTN4
CTGCOIN  EQU   CTGOPTN4
CTGNPROF EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00053 EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGSWAP  EQU   CTGRCATN
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1508
@NM00052 EQU   IGGCCA+1504
CCARMINN EQU   CCAREQDQ+8
CCARMAJN EQU   CCAREQDQ+4
CCAREDRC EQU   CCAREQDQ+3
@NM00051 EQU   CCAREDOP
CCAREDSH EQU   CCAREDOP
CCAREDLN EQU   CCAREQDQ+1
CCAREDFF EQU   CCAREQDQ
CCASAVMN EQU   CCADGDGA
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00050 EQU   CCAFLG10
CCADEFUN EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00049 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00048 EQU   CCAREGS
@NM00047 EQU   CCAFLG11
CCAF11B6 EQU   CCAFLG11
CCAF11B5 EQU   CCAFLG11
@NM00046 EQU   CCAFLG11
@NM00045 EQU   IGGCCA+1057
@NM00044 EQU   CCARVFG1
RVWG     EQU   CCARVFG1
RVRPLMFG EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00043 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00042 EQU   CCAMNAT+1
@NM00041 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00040 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00039 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00038 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
CCASAVID EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00037 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00036 EQU   CCAMSSPL+10
@NM00035 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00034 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
@NM00033 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00032 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
@NM00031 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00030 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00029 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00028 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCAR2REC EQU   CCARAB2+4
@NM00027 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00026 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00025 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00024 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00023 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00022 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00021 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCAREUSE EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00020 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
CTVDRSTT EQU   CTVDEXTN+4
CTVDIRTS EQU   CTVDEXTN
CTVDSDCI EQU   CTVDIR+2
CTVDSDLF EQU   CTVDSDSN+1
CTVDSDCV EQU   CTVDSDSN
CTVEXTNN EQU   CTVEXTNT+2
CTVEXTT  EQU   CTVEXTNT
CTVSQT   EQU   CTVDSPAC+18
CTVSPOPT EQU   CTVDSPAC+17
CTVNOEXT EQU   CTVDSPAC+16
@NM00019 EQU   CTVDSPFG
CTVCATDF EQU   CTVDSPFG
@NM00018 EQU   CTVDSPFG
CTVAUTO  EQU   CTVDSPFG
CTVUNIQ  EQU   CTVDSPFG
CTVF1PTR EQU   CTVDSPAC+10
CTVF1TME EQU   CTVDSPAC+2
CTVDSPLF EQU   CTVDSPSN+1
CTVDSPCV EQU   CTVDSPSN
CTVSMBIT EQU   CTVSPMAP+4
CTVSMLEN EQU   CTVSPMAP+2
CTVSMLF  EQU   CTVSMSN+1
CTVSMCV  EQU   CTVSMSN
CTVEGOPT EQU   CTVRCTRL+6
CTVEXRCT EQU   CTVRCTRL+5
@NM00017 EQU   CTVEXRPT+3
CTVEXGCI EQU   CTVEXRPT
CTVGOSEQ EQU   CTVGOPT+4
CTVGOGC  EQU   CTVGOGCI
CTVGODEL EQU   CTVGOGCI
CTVGOEXT EQU   CTVGOGCI
CTVGODSP EQU   CTVGOCI+1
CTVGOFLG EQU   CTVGOCI
CTVSPSXC EQU   CTVDSDIR+2
CTVSPSSN EQU   CTVDSDIR
CTVDSXCT EQU   CTVDSGRP+7
@NM00016 EQU   CTVDSDFL
CTVDSDCN EQU   CTVDSDFL
CTVDSCID EQU   CTVDSGRP+3
CTVDSNEX EQU   CTVDSGRP+2
CTVDSGLF EQU   CTVDSGRP+1
CTVDSGCV EQU   CTVDSGRP
CTVMAP   EQU   CTVDESGP+14
CTVMAPLN EQU   CTVDESGP+12
CTVDESHD EQU   CTVDESGP+10
CTVDESTK EQU   CTVDESGP+8
CTVSTHH  EQU   CTVSTDES+2
CTVSTCC  EQU   CTVSTDES
CTVDESUU EQU   CTVDESGP+2
CTVDESLF EQU   CTVDESGP+1
CTVDESCV EQU   CTVDESGP
CTVSPSQT EQU   CTVSPHDR+20
CTVSPSPO EQU   CTVSPHDR+19
CTVSPNEX EQU   CTVSPHDR+18
CTVSPNDS EQU   CTVSPHDR+16
@NM00015 EQU   CTVSPFLG
CTVSPCDF EQU   CTVSPFLG
CTVSPMCT EQU   CTVSPFLG
CTVSPUCT EQU   CTVSPFLG
CTVSPAUT EQU   CTVSPFLG
CTVSPUNQ EQU   CTVSPFLG
CTVF1ADR EQU   CTVSPHDR+10
CTVF1TIM EQU   CTVSPHDR+2
CTVSPHLF EQU   CTVSPHDR+1
CTVSPHCV EQU   CTVSPHDR
@NM00014 EQU   CTVOLRCD+74
CTVSYEDS EQU   CTVOLRCD+73
CTVOLFLG EQU   CTVOLRCD+72
CTVTLFAC EQU   CTVDVCHR+18
CTVTLFLG EQU   CTVDVFLG
@NM00013 EQU   CTVDVFLG
CTVABFLG EQU   CTVDVFLG
@NM00012 EQU   CTVDVFLG
CTVBONK  EQU   CTVDVCHR+16
CTVBKLB  EQU   CTVBOKAB+1
CTVBKNLB EQU   CTVBOKAB
CTVTRKSZ EQU   CTVDVCHR+12
CTVNOTRK EQU   CTVDVCHR+10
CTVNOCYL EQU   CTVDVCHR+8
CTVMXBLK EQU   CTVDVCHR+4
CTVDEVTY EQU   CTVDVCHR
CTVOLTIM EQU   CTVOLRCD+44
CTVOLNME EQU   CTVOLRCD
CMFXHRBA EQU   CMFXECTS+16
CMFXLRBA EQU   CMFXECTS+12
CMFXNOTT EQU   CMFXECTS+10
CMFXEDHH EQU   CMFXEDA+2
CMFXEDCC EQU   CMFXEDA
CMFXSTHH EQU   CMFXSTA+2
CMFXSTCC EQU   CMFXSTA
CMFXEXSS EQU   CMFXECTS
CMFLEND  EQU   CMFOVLAY+14
CMFLEXLN EQU   CMFOVLAY+12
CMFLHKLN EQU   CMFOVLAY+10
CMFLLKLN EQU   CMFOVLAY+8
CMFBYTAU EQU   CMFOVLAY+4
CMFBYTRK EQU   CMFOVLAY
CMFLSSDS EQU   GVO+35
@NM00011 EQU   CMFLITEX
CMFLNOPF EQU   CMFLITEX
CMFLSSDT EQU   CMFLITEX
CMFLNTKA EQU   GVO+32
CMFLNBTK EQU   GVO+30
CMFLPHYB EQU   GVO+26
CMFLHABA EQU   GVO+22
CMFLHUBA EQU   GVO+18
CMFLHKBA EQU   GVO+14
CMFLNOEX EQU   GVO+13
@NM00010 EQU   CMFLVLFL
CMFLVLOV EQU   CMFLVLFL
CMFLVLCN EQU   CMFLVLFL
CMFLVLPR EQU   CMFLVLFL
CMFLFLSQ EQU   GVO+10
CMFLVOL  EQU   GVO+4
CMFLDEVT EQU   GVO
VVOLLVSR EQU   VVOLLENT+6
VVOLLVFY EQU   @NM00009
VVOLLMNT EQU   @NM00009
VVOLLUCB EQU   VVOLLENT
VVOLLDEB EQU   IDAVVOLL+32
VVOLLBIB EQU   IDAVVOLL+28
VVOLLSFI EQU   IDAVVOLL+16
VVOLLCNT EQU   VVOLLERR+3
VVOLLSFC EQU   VVOLLERR+2
VVOLLFNC EQU   VVOLLERR+1
VVOLLPDC EQU   VVOLLERR
VVOLLACB EQU   IDAVVOLL+8
VVOLLTAB EQU   IDAVVOLL+4
VVOLLNBR EQU   IDAVVOLL+2
@NM00008 EQU   IDAVVOLL+1
VVOLLSWD EQU   @NM00006
VVOLLCAT EQU   @NM00006
VVOLLEOV EQU   @NM00006
VVOLLOPE EQU   @NM00006
VVOLLTIO EQU   @NM00006
VVOLLID  EQU   @NM00006
@NM00007 EQU   @NM00006
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00005 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00004 EQU   RPLRBAR+3
@NM00003 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00002 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
@NM00001 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
@NM00095 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00094 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00093 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00092 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00091 EQU   FLCFSA
@NM00090 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00089 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00088 EQU   FLCIOA
@NM00087 EQU   FLCMCLA+15
@NM00086 EQU   FLCMCLA+14
@NM00085 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00084 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00083 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00082 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00081 EQU   FLCPER
@NM00080 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00079 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00078 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00077 EQU   FLCPIILC
@NM00076 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00075 EQU   FLCSVILC
@NM00074 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00073 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00072 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00291 EQU   @RC00287
@PB00014 EQU   @EL00001
@ENDDATA EQU   *
         END   IGG0CLA4,(C'PLS1632',0701,78117)
