         TITLE 'CMS DELETE ALIAS/GDG - IGG0CLA5                        *
                        '
IGG0CLA5 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGG0CLA5  75.268'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
         USING @MAINENT,@15
         USING @DATD-(CCATEMPS-IGGCCA),R11
         DS 0F
         DC CL8'IGGPDELX'
         EJECT
         B     @PB00002                                            0151
IGGPDELX DS    0H                                                  0152
         ENTRY IGGPDELX
         DROP @15
Z003     DS    0H                                                  0154
Z003DELX DS    0H                                                  0155
         STM 12,14,12(13)
         LA 13,12(13)
         BALR 12,0
IGGSEGST DS 0H
*                                                                  0160
         USING *,12
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ALIAS ENTRY FOR NONVSAM OR CATALOG                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0161
*   CCASRCH=CTGENT->ENTRYNAM;       /* SET NAME ALAIS                */
         L     @10,CCACPL(,R11)                                    0161
         L     @10,CTGENT(,@10)                                    0161
         MVC   CCASRCH(44,R11),ENTRYNAM(@10)                       0161
*   DO;                                                            0162
*     CCAF1KEY=ON;                  /* TRUE NAME GET                 */
*     CCAF1KGE=OFF;                 /* NOT GET NEXT                  */
*     CCAF1UP=ON;                   /* GET FOR UPD                   */
         OI    CCAF1KEY(R11),B'00010010'                           0165
         NI    CCAF1KGE(R11),B'11110111'                           0165
*     CCAURAB=ADDR(CCARAB2);        /* SET RAB PTR                   */
*                                                                  0166
         LA    @10,CCARAB2(,R11)                                   0166
         ST    @10,CCAURAB(,R11)                                   0166
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLBI                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0167
*Z005GET:                                                          0167
*     CALL IGGPGET;                 /* GET RECORD                    */
Z005GET  L     @15,@CV03478                                        0167
         BALR  @14,@15                                             0167
*   END;                                                           0168
*   IF CCACD1^=RCS THEN             /* ERRORS IN GET?                */
         CLI   CCACD1(R11),0                                       0169
         BE    @RF00169                                            0169
*     CALL EXIT;                    /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0170
*   IF RCDID^=CTGTANM THEN          /* IF NOT ALAIS ENTRY -ERROR-  0171
*                                                            @YM04818*/
@RF00169 L     @10,CCAURAB(,R11)                                   0171
         L     @10,CCACPE1(,@10)                                   0171
         CLI   RCDID(@10),C'X'                                     0171
         BE    @RF00171                                            0171
*     DO;                           /*                       @YM04818*/
*                                                                  0172
*       /*************************************************************/
*       /*                                                           */
*       /* SET CCAMODID='A5', CCAREASN=RSN44, CCARETRN=RCINENT       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0173
*       CCAPROB=IGGSEGID+(RSN44*K256)+RCINENT;/* INVALID ENTRY TYPE
*                                      NOT 'X'               @Y30DSSM*/
         MVC   CCAPROB(4,R11),@CF03715                             0173
*       CALL EXIT;                  /* ERROR EXIT            @YM04818*/
         BAL   @14,EXIT                                            0174
*     END;                          /*                       @YM04818*/
*Z007DONE:                                                         0176
*   CALL IGGPDONE;                  /* DELETE ONE ENTRY              */
@RF00171 DS    0H                                                  0176
Z007DONE BAL   @14,IGGPDONE                                        0176
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0177
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDALL');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDALL'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00002 DS    0H                                                  0180
@EF00002 DS    0H                                                  0180
@ER00002 BR    @14                                                 0180
@PB00002 DS    0H                                                  0181
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0182
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDALL  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0182
*IGGPDALL:                                                         0182
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00003                                            0182
IGGPDALL DS    0H                                                  0183
*   GEN(ENTRY IGGPDALL );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPDALL
*Z008:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z008DALL:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0184
*    (R5,                                                          0184
*     R6,                                                          0184
*     R7,                                                          0184
*     R8,                                                          0184
*     R9,                                                          0184
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z008     DS    0H                                                  0184
Z008DALL DS    0H                                                  0185
*   RFY                                                            0185
*    (R2,                                                          0185
*     R3,                                                          0185
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0190
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* CALLED FROM DELETE OBJECT OR DELETE CATALOG TO DELETE ALIAS   */
*   /* CHAIN EXTRACT ALIAS CHAIN PTR                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0191
*Z009CCFM:                                                         0191
*   CALL IGGPCCFM;                                                 0191
*                                                                  0191
Z009CCFM BAL   @14,IGGPCCFM                                        0191
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD CPL FPL                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0192
*   RFY                                                            0192
*     CTGFL BASED(ADDR(DELXFPL));                                  0192
*   CTGFLCHN=ADDR(DELXFPL2);                                       0193
         L     @10,CCACMSWA(,R11)                                  0193
         LA    @05,52                                              0193
         ALR   @05,@10                                             0193
         LA    @15,DELXFPL2(,@05)                                  0193
         ST    @15,CTGFLCHN+88(,@10)                               0193
*   RFY                                                            0194
*     CTGFL BASED(ADDR(DELXFPL2));                                 0194
*   CTGFL=CTGFL&&CTGFL;                                            0195
         AL    @10,@CF00166                                        0195
         XC    CTGFL(16,@10),CTGFL(@10)                            0195
*   CTGFLDNO=ONE;                                                  0196
         MVI   CTGFLDNO(@10),X'01'                                 0196
*   CTGFLDCD=CTGFLDEQ;                                             0197
         MVI   CTGFLDCD(@10),X'80'                                 0197
*   DELNM2='TYPE    ';                                             0198
         MVC   DELNM2(8,@05),@CC03576                              0198
*   CTGFLDNM=ADDR(DELNM2);                                         0199
         LA    @15,DELNM2(,@05)                                    0199
         ST    @15,CTGFLDNM(,@10)                                  0199
*   DELTST='X';                                                    0200
         MVI   DELTST(@05),C'X'                                    0200
*   CTGFLNG(1)=LENGTH(DELTST);                                     0201
         MVC   CTGFLNG(4,@10),@CF00037                             0201
*   CTGFLPT(1)=ADDR(DELTST);                                       0202
*                                                                  0202
         LA    @05,DELTST(,@05)                                    0202
         ST    @05,CTGFLPT(,@10)                                   0202
*   /*****************************************************************/
*   /*                                                               */
*   /* EXTRACT FIRST FORWORD PTR FROM BASE CALL TO MODULE IGG0CLAZ   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0203
*Z010EXT:                                                          0203
*   CALL IGGPEXT;                                                  0203
Z010EXT  L     @15,@CV03477                                        0203
         BALR  @14,@15                                             0203
*   IF CCACD1^=RCS THEN             /* EXTRACT OK?                   */
         CLI   CCACD1(R11),0                                       0204
         BE    @RF00204                                            0204
*     CALL EXIT;                    /* ERROR RETURN                  */
         BAL   @14,EXIT                                            0205
*   ELSE                                                           0206
*     ;                             /* OK                            */
@RF00204 DS    0H                                                  0207
*   DLASCIF=DLASCI;                 /* SET PTR FOR LOOP              */
*                                                                  0207
         LA    @10,52                                              0207
         AL    @10,CCACMSWA(,R11)                                  0207
         MVC   DLASCIF(3,@10),DLASCI(@10)                          0207
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP TO DELETE COMPLETE ALIAS CHAIN                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*   DO WHILE(DLASCIF^=0);                                          0208
         B     @DE00208                                            0208
@DL00208 DS    0H                                                  0209
*     CCASRID=DLASCIF;              /* GET ALIAS RECORD              */
         L     @10,CCACMSWA(,R11)                                  0209
         MVC   CCASRID(3,R11),DLASCIF+52(@10)                      0209
*     DO;                                                          0210
*       CCAF1KEY=OFF;               /* GET BY CI NO.                 */
*       CCAF1KGE=OFF;               /* NOT GET NEXT                  */
*       CCAF1UP=ON;                 /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0213
         NI    CCAF1KEY(R11),B'11100111'                           0213
*       CCAURAB=ADDR(CCARAB2);      /* SET RAB PTR                   */
*                                                                  0214
         LA    @10,CCARAB2(,R11)                                   0214
         ST    @10,CCAURAB(,R11)                                   0214
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0215
*Z012GET:                                                          0215
*       CALL IGGPGET;               /* GET RECORD                    */
Z012GET  L     @15,@CV03478                                        0215
         BALR  @14,@15                                             0215
*     END;                                                         0216
*     IF CCACD1^=RCS THEN           /* GET OK?                       */
         CLI   CCACD1(R11),0                                       0217
         BE    @RF00217                                            0217
*       CALL EXIT;                  /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0218
*     ELSE                                                         0219
*       ;                           /* OK                            */
*                                                                  0219
@RF00217 DS    0H                                                  0220
*     /***************************************************************/
*     /*                                                             */
*     /* DELETE THIS ENTRY AND UPDATE POINTERS                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0220
*Z013DONE:                                                         0220
*     CALL IGGPDONE;                                               0220
Z013DONE BAL   @14,IGGPDONE                                        0220
*     IF CCACD1^=RCS THEN           /* ENTRY DELETED OK?             */
         CLI   CCACD1(R11),0                                       0221
         BE    @RF00221                                            0221
*       CALL EXIT;                  /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0222
*     ELSE                                                         0223
*       ;                           /* OK                            */
@RF00221 DS    0H                                                  0224
*   END;                            /* END DO LOOP                   */
@DE00208 SLR   @10,@10                                             0224
         L     @05,CCACMSWA(,R11)                                  0224
         L     @05,DLASCIF+51(,@05)                                0224
         LA    @05,0(,@05)                                         0224
         CR    @10,@05                                             0224
         BNE   @DL00208                                            0224
*   IF CTGWKA^=NULL THEN            /* WORLAREA EXIST        @Y30DSSM*/
         L     @05,CCACPL(,R11)                                    0225
         L     @05,CTGWKA(,@05)                                    0225
         CR    @05,@10                                             0225
         BE    @RF00225                                            0225
*     WKALEN2=LENGTH(WKALEN1)+LENGTH(WKALEN2);/* CLEAR NAME  #YM04818*/
         MVC   WKALEN2(2,@05),@CH00058                             0226
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RF00225 BAL   @14,EXIT                                            0227
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDONE');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDONE'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00003 DS    0H                                                  0230
@EF00003 DS    0H                                                  0230
@ER00003 BR    @14                                                 0230
@PB00003 DS    0H                                                  0231
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0232
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDONE  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0232
*IGGPDONE:                                                         0232
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00004                                            0232
IGGPDONE DS    0H                                                  0233
*Z014:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z014DONE:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0233
*    (R5,                                                          0233
*     R6,                                                          0233
*     R7,                                                          0233
*     R8,                                                          0233
*     R9,                                                          0233
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z014     DS    0H                                                  0233
Z014DONE DS    0H                                                  0234
*   RFY                                                            0234
*    (R2,                                                          0234
*     R3,                                                          0234
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0236
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE DELETES THE ALIAS ENTRY AND UPDATES THE POINTER*/
*   /* IN THE CHAIN DELETE POINTER FROM TRUE NAME ENTRY TO ALIAS     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0237
*Z015CCFM:                                                         0237
*   CALL IGGPCCFM;                  /* BUILD CPL/FPL FOR MOD         */
Z015CCFM BAL   @14,IGGPCCFM                                        0237
*   CCAURAB=ADDR(CCARAB2);          /* SET RAB POINTERS      @YM)4819*/
         LA    @10,CCARAB2(,R11)                                   0238
         ST    @10,CCAURAB(,R11)                                   0238
*   CCARABB=ADDR(CCARAB2);          /*                       @YM)4819*/
         ST    @10,CCARABB(,R11)                                   0239
*   CCARABF=ADDR(CCARAB2);          /*                       @YM)4819*/
*                                                                  0240
         ST    @10,CCARABF(,R11)                                   0240
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAZ                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0241
*Z016EXT:                                                          0241
*   CALL IGGPEXT;                   /* GET SET OF THREE STRING PTRS  */
Z016EXT  L     @15,@CV03477                                        0241
         BALR  @14,@15                                             0241
*   IF CCACD1^=RCS THEN             /* EXTRACT OK?                   */
         CLI   CCACD1(R11),0                                       0242
         BE    @RF00242                                            0242
*     CALL EXIT;                    /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0243
*   IF DLASCIB^=N THEN              /* IF BACK PRT NOT NULL GET PREV.
*                                      ENTRY                         */
@RF00242 LA    @10,52                                              0244
         AL    @10,CCACMSWA(,R11)                                  0244
         L     @05,DLASCIB-1(,@10)                                 0244
         LA    @05,0(,@05)                                         0244
         LTR   @05,@05                                             0244
         BZ    @RF00244                                            0244
*     DO;                                                          0245
*       CCASRID=DLASCIB;            /* GET PREV. ENTRY               */
         MVC   CCASRID(3,R11),DLASCIB(@10)                         0246
*       DO;                                                        0247
*         CCAF1KEY=OFF;             /* GET BY CI NO.                 */
*         CCAF1KGE=OFF;             /* NOT GET NEXT                  */
*         CCAF1UP=ON;               /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0250
         NI    CCAF1KEY(R11),B'11100111'                           0250
*         CCAURAB=ADDR(CCARAB1);    /* SET RAB PTR                   */
*                                                                  0251
         LA    @10,CCARAB1(,R11)                                   0251
         ST    @10,CCAURAB(,R11)                                   0251
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLBI                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0252
*Z018GET:                                                          0252
*         CALL IGGPGET;             /* GET RECORD                    */
Z018GET  L     @15,@CV03478                                        0252
         BALR  @14,@15                                             0252
*       END;                                                       0253
*       IF CCACD1^=RCS THEN         /* IF NOT FOUND AND              */
         CLI   CCACD1(R11),0                                       0254
         BE    @RF00254                                            0254
*         IF CCACD1=RCENT THEN      /* NO ERROR                      */
         CLI   CCACD1(R11),8                                       0255
         BNE   @RF00255                                            0255
*           DLASCIB=N;              /* SET NULL POINTER              */
         L     @10,CCACMSWA(,R11)                                  0256
         SLR   @05,@05                                             0256
         STCM  @05,7,DLASCIB+52(@10)                               0256
*     END;                                                         0257
@RF00255 DS    0H                                                  0257
@RF00254 DS    0H                                                  0258
*   IF DLASCIF^=N THEN              /* IF FOR. PTR IS NULL END OF  0258
*                                      CHAIN                         */
@RF00244 LA    @10,52                                              0258
         AL    @10,CCACMSWA(,R11)                                  0258
         L     @05,DLASCIF-1(,@10)                                 0258
         LA    @05,0(,@05)                                         0258
         LTR   @05,@05                                             0258
         BZ    @RF00258                                            0258
*     DO;                                                          0259
*       CCASRID=DLASCIF;            /* GET NEXT RECORD ON CHAIN      */
         MVC   CCASRID(3,R11),DLASCIF(@10)                         0260
*       DO;                                                        0261
*         CCAF1KEY=OFF;             /* GET BY CI NO.                 */
*         CCAF1KGE=OFF;             /* NOT GET NEXT                  */
*         CCAF1UP=ON;               /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0264
         NI    CCAF1KEY(R11),B'11100111'                           0264
*         CCAURAB=ADDR(CCARAB3);    /* SET RAB PTR                   */
*                                                                  0265
         LA    @10,CCARAB3(,R11)                                   0265
         ST    @10,CCAURAB(,R11)                                   0265
*         /***********************************************************/
*         /*                                                         */
*         /* CALL TO MODULE IGG0CLBI                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0266
*Z020GET:                                                          0266
*         CALL IGGPGET;             /* GET RECORD                    */
Z020GET  L     @15,@CV03478                                        0266
         BALR  @14,@15                                             0266
*       END;                                                       0267
*       IF CCACD1^=RCS THEN         /* IF NO ERRORS                  */
         CLI   CCACD1(R11),0                                       0268
         BE    @RF00268                                            0268
*         IF CCACD1=RCENT THEN      /* AND NOT FOUND                 */
         CLI   CCACD1(R11),8                                       0269
         BNE   @RF00269                                            0269
*           DLASCIF=N;              /* SET NULL POINTER              */
         L     @10,CCACMSWA(,R11)                                  0270
         SLR   @05,@05                                             0270
         STCM  @05,7,DLASCIF+52(@10)                               0270
*         ELSE                      /* ERRORS                        */
*           CALL EXIT;              /* ERROR EXIT                    */
         B     @RC00269                                            0271
@RF00269 BAL   @14,EXIT                                            0271
*       ELSE                                                       0272
*         ;                         /* NO ERRORS                     */
@RF00268 DS    0H                                                  0273
*     END;                          /* END FORWARD PTR NULL          */
*   ELSE                                                           0274
*     ;                             /* FORWARD POINTER NULL          */
*                                                                  0274
@RF00258 DS    0H                                                  0275
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE BACK(FORWARD(THIS ENTRY)) TO BACK(THIS ENTRY) SET UP   */
*   /* CPL/FPL FOR MOD                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0275
*   RFY                                                            0275
*     CTGFL BASED(ADDR(DELXFPL));                                  0275
@RC00258 DS    0H                                                  0276
*   CTGFLPT(1)=ADDR(DELXASGB);                                     0276
         L     @10,CCACMSWA(,R11)                                  0276
         LA    @05,88                                              0276
         ALR   @05,@10                                             0276
         LA    @15,52                                              0276
         ALR   @15,@10                                             0276
         LA    @14,DELXASGB(,@15)                                  0276
         ST    @14,CTGFLPT(,@05)                                   0276
*   CTGFLNG(1)=LENGTH(DELXASGB);                                   0277
         MVC   CTGFLNG(4,@05),@CF00058                             0277
*   CTGFLCHN=ADDR(DELXFPL2);                                       0278
         LA    @14,DELXFPL2(,@15)                                  0278
         ST    @14,CTGFLCHN(,@05)                                  0278
*   RFY                                                            0279
*     CTGFL BASED(ADDR(DELXFPL2));  /* SET TEST FPL                  */
*   CTGFL=CTGFL&&CTGFL;                                            0280
         AL    @10,@CF00166                                        0280
         XC    CTGFL(16,@10),CTGFL(@10)                            0280
*   CTGFLDNO=ONE;                                                  0281
         MVI   CTGFLDNO(@10),X'01'                                 0281
*   CTGFLDCD=CTGFLDEQ;              /* TEST FOR SAME                 */
         MVI   CTGFLDCD(@10),X'80'                                 0282
*   DELNM2='NAME    ';                                             0283
         MVC   DELNM2(8,@15),@CC03519                              0283
*   CTGFLDNM=ADDR(DELNM2);                                         0284
         LA    @05,DELNM2(,@15)                                    0284
         ST    @05,CTGFLDNM(,@10)                                  0284
*   CCAURAB=ADDR(CCARAB2);                                         0285
         LA    @05,CCARAB2(,R11)                                   0285
         ST    @05,CCAURAB(,R11)                                   0285
*   CTGFLPT(1)=ADDR(RCDCINO);                                      0286
         L     @05,CCACPE1(,@05)                                   0286
         LA    @05,RCDCINO(,@05)                                   0286
         ST    @05,CTGFLPT(,@10)                                   0286
*   CTGFLNG(1)=LENGTH(RCDCINO);                                    0287
         MVC   CTGFLNG(4,@10),@CF00414                             0287
*   CCAURAB=ADDR(CCARAB3);                                         0288
         LA    @10,CCARAB3(,R11)                                   0288
         ST    @10,CCAURAB(,R11)                                   0288
*   CCARABB=ADDR(CCARAB3);                                         0289
         ST    @10,CCARABB(,R11)                                   0289
*   CCARABF=ADDR(CCARAB3);                                         0290
         ST    @10,CCARABF(,R11)                                   0290
*   IF DLASCIF^=N THEN              /* IF FORWARD POINTER NOT NULL   */
         L     @10,DLASCIF-1(,@15)                                 0291
         LA    @10,0(,@10)                                         0291
         LTR   @10,@10                                             0291
         BZ    @RF00291                                            0291
*     DO;                                                          0292
*                                                                  0292
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAV                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0293
*Z021MOD:                                                          0293
*       CALL IGGPMOD;               /* MOD BACK PTR                  */
Z021MOD  L     @15,@CV03479                                        0293
         BALR  @14,@15                                             0293
*       IF CCACD1^=RCS THEN         /* MODIFY OK?                    */
         CLI   CCACD1(R11),0                                       0294
         BE    @RF00294                                            0294
*         CALL EXIT;                /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0295
*       ELSE                                                       0296
*         ;                         /* OK                            */
@RF00294 DS    0H                                                  0297
*     END;                          /* END FORWARD PTR NOT NULL      */
*   ELSE                                                           0298
*     ;                             /* NULL - LAST IN CHAIN          */
*                                                                  0298
@RF00291 DS    0H                                                  0299
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE FORWARD(BACK(THIS ENTRY)) TO FORWARD(THIS ENTRY)       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0299
*   RFY                                                            0299
*     CTGFL BASED(ADDR(DELXFPL));                                  0299
*   IF DLASCIB=N&DLASCIF=N THEN     /* IF ONLY ENTER IN CHAIN        */
         SLR   @10,@10                                             0300
         L     @05,CCACMSWA(,R11)                                  0300
         LA    @15,52                                              0300
         ALR   @15,@05                                             0300
         L     @14,DLASCIB-1(,@15)                                 0300
         LA    @14,0(,@14)                                         0300
         CR    @10,@14                                             0300
         BNE   @RF00300                                            0300
         L     @15,DLASCIF-1(,@15)                                 0300
         LA    @15,0(,@15)                                         0300
         CR    @10,@15                                             0300
         BNE   @RF00300                                            0300
*     DO;                                                          0301
*       CTGFLPT(1)=N;               /* DELETE PTR FROM OBJECT        */
         AL    @05,@CF00144                                        0302
         ST    @10,CTGFLPT(,@05)                                   0302
*       CTGFLNG(1)=N;                                              0303
         ST    @10,CTGFLNG(,@05)                                   0303
*     END;                                                         0304
*   ELSE                            /* CHANGE FORWARD PTR            */
*     DO;                                                          0305
         B     @RC00300                                            0305
@RF00300 DS    0H                                                  0306
*       CTGFLPT(1)=ADDR(DELXASGF);  /* SET FPL                       */
         L     @10,CCACMSWA(,R11)                                  0306
         LA    @05,88                                              0306
         ALR   @05,@10                                             0306
         LA    @10,DELXASGF+52(,@10)                               0306
         ST    @10,CTGFLPT(,@05)                                   0306
*       CTGFLNG(1)=LENGTH(DELXASGF);                               0307
         MVC   CTGFLNG(4,@05),@CF00058                             0307
*     END;                                                         0308
*   CCAURAB=ADDR(CCARAB1);          /* CHANGE RAB PTR TO MOD         */
@RC00300 LA    @10,CCARAB1(,R11)                                   0309
         ST    @10,CCAURAB(,R11)                                   0309
*   CCARABB=ADDR(CCARAB1);          /* PREVIOUS CHAIN ENTRY          */
         ST    @10,CCARABB(,R11)                                   0310
*   CCARABF=ADDR(CCARAB1);                                         0311
*                                                                  0311
         ST    @10,CCARABF(,R11)                                   0311
*   /*****************************************************************/
*   /*                                                               */
*   /* MODIFY POINTER CALL TO MODULE IGG0CLAV                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0312
*Z022MOD:                                                          0312
*   CALL IGGPMOD;                                                  0312
Z022MOD  L     @15,@CV03479                                        0312
         BALR  @14,@15                                             0312
*   IF CCACD1^=RCS THEN             /* MODIFY OK?                    */
         CLI   CCACD1(R11),0                                       0313
         BE    @RF00313                                            0313
*     CALL EXIT;                    /* ERROR EXIT                    */
         BAL   @14,EXIT                                            0314
*   ELSE                                                           0315
*     ;                             /* OK                            */
*                                                                  0315
@RF00313 DS    0H                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ALIAS ENTRY                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   DO;                                                            0316
*     CCAURAB=ADDR(CCARAB2);        /* SET RAB PTR                   */
*                                                                  0317
         LA    @10,CCARAB2(,R11)                                   0317
         ST    @10,CCAURAB(,R11)                                   0317
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLAG                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0318
*Z024PDE:                                                          0318
*     CALL IGGPPDE;                 /* PUT-DELETE RECORD             */
Z024PDE  L     @15,@CV03482                                        0318
         BALR  @14,@15                                             0318
*   END;                                                           0319
*   IF CCACD1=RCS THEN              /* DELETE OK                     */
         CLI   CCACD1(R11),0                                       0320
         BNE   @RF00320                                            0320
*     DO;                           /* RETURN DELETED ENTRY NAME     */
*       CCAURAB=ADDR(CCARAB2);                                     0322
         LA    @10,CCARAB2(,R11)                                   0322
         ST    @10,CCAURAB(,R11)                                   0322
*       RFY                                                        0323
*         CTGPL BASED(CCACPL);                                     0323
*       IF CTGWKA^=RCS THEN         /* WORKAREA EXIST        @Y30DSSM*/
         L     @10,CCACPL(,R11)                                    0324
         L     @10,CTGWKA(,@10)                                    0324
         LTR   @10,@10                                             0324
         BZ    @RF00324                                            0324
*         IF WKALEN1<LENGTH(USERWKA)+/* YES,IS IT LARGE      @Y30DSSM*/
*             LENGTH(ENTNAMES) THEN /* ENOUGH                @Y30DSSM*/
         LH    @10,WKALEN1(,@10)                                   0325
         C     @10,@CF03717                                        0325
         BNL   @RF00325                                            0325
*           DO;                     /* NO                    @Y30DSSM*/
*                                                                  0326
*             /*******************************************************/
*             /*                                                     */
*             /* SET CCAMODID='A5', CCAREASN=RSN6, CCARETRN=RCVLSM   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0327
*             CCAPROB=IGGSEGID+(RSN6*K256)+RCVLSM;/* CALLERS WORKAREA
*                                      TOO SMALL             @Y30DSSM*/
         MVC   CCAPROB(4,R11),@CF03720                             0327
*             CALL EXIT;            /* RETURN TO CALLER      @Y30DSSM*/
         BAL   @14,EXIT                                            0328
*           END;                    /* END OF ERROR          @Y30DSSM*/
*         ELSE                      /* WORKAREA IS           @Y30DSSM*/
*           DO;                     /* LARGE ENOUGH          @Y30DSSM*/
         B     @RC00325                                            0330
@RF00325 DS    0H                                                  0331
*             WKALEN2=LENGTH(ENTNAMET)+LENGTH(ENTNAMEV)+LENGTH(WKALEN1)
*                 +LENGTH(WKALEN2); /* LEN OF WORKAREA               */
         L     @10,CCACPL(,R11)                                    0331
         L     @10,CTGWKA(,@10)                                    0331
         MVC   WKALEN2(2,@10),@CH03717                             0331
*             ENTNAMET(1)=RCDID;    /* SET NAME OF DELETED OBJECT    */
         L     @05,CCAURAB(,R11)                                   0332
         L     @05,CCACPE1(,@05)                                   0332
         MVC   ENTNAMET(1,@10),RCDID(@05)                          0332
*             ENTNAMEV(1)=CNAME;                                   0333
         MVC   ENTNAMEV(44,@10),CNAME(@05)                         0333
*             CCARAB1=CCARAB1&&CCARAB2;/* EXCHANGE RAB1 WITH RAB2 FOR
*                                      SMF CALL              @ZA02864*/
         XC    CCARAB1(20,R11),CCARAB2(R11)                        0334
*             CCARAB2=CCARAB2&&CCARAB1;/*                    @ZA02864*/
         XC    CCARAB2(20,R11),CCARAB1(R11)                        0335
*             CCARAB1=CCARAB1&&CCARAB2;/*                    @ZA02864*/
         XC    CCARAB1(20,R11),CCARAB2(R11)                        0336
*             CCAURAB=ADDR(CCARAB1);/* BASE RAB IS RAB1      @ZA02864*/
         LA    @10,CCARAB1(,R11)                                   0337
         ST    @10,CCAURAB(,R11)                                   0337
*             CCASMFUC=ON;          /* WRITE SMF RECORD              */
*                                                                  0338
         OI    CCASMFUC(R11),B'10000000'                           0338
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBV                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0339
*Z026SMFS:                                                         0339
*             CALL IGGPSMFS;        /* SMF PROCESSING                */
Z026SMFS L     @15,@CV03483                                        0339
         BALR  @14,@15                                             0339
*             CCARAB1=CCARAB1&&CCARAB2;/* EXCHANGE RAB1 WITH RAB2  0340
*                                      FROM SMF CALL         @ZA02864*/
         XC    CCARAB1(20,R11),CCARAB2(R11)                        0340
*             CCARAB2=CCARAB2&&CCARAB1;/*                    @ZA02864*/
         XC    CCARAB2(20,R11),CCARAB1(R11)                        0341
*             CCARAB1=CCARAB1&&CCARAB2;/*                    @ZA02864*/
         XC    CCARAB1(20,R11),CCARAB2(R11)                        0342
*             CCAURAB=ADDR(CCARAB2);/* RESET BASE RAB        @ZA02864*/
         LA    @10,CCARAB2(,R11)                                   0343
         ST    @10,CCAURAB(,R11)                                   0343
*           END;                    /* END STORING NAMES     @Y30DSSM*/
*       ELSE                                                       0345
*         ;                         /* WORKAREA ZERO         @Y30DSSM*/
@RF00324 DS    0H                                                  0346
*     END;                          /* END DELETE OK                 */
@RC00324 DS    0H                                                  0347
*   CALL EXIT;                      /* RETURN TO CALLER              */
@RF00320 BAL   @14,EXIT                                            0347
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPBCFE');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPBCFE'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00004 DS    0H                                                  0350
@EF00004 DS    0H                                                  0350
@ER00004 BR    @14                                                 0350
@PB00004 DS    0H                                                  0351
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0352
*/********************************************************************/
*/*                                                                  */
*/*        IGGPBCFE  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0352
*IGGPBCFE:                                                         0352
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00005                                            0352
IGGPBCFE DS    0H                                                  0353
*Z027:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z027BCFE:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0353
*    (R5,                                                          0353
*     R6,                                                          0353
*     R7,                                                          0353
*     R8,                                                          0353
*     R9,                                                          0353
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z027     DS    0H                                                  0353
Z027BCFE DS    0H                                                  0354
*   RFY                                                            0354
*    (R2,                                                          0354
*     R3,                                                          0354
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0356
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD CPL/FPL INTERFACE FOR EXTRACT SET CCA PARAMETERS        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0357
*   CCAREUSE=ON;                    /* ALLOW EXT TO REUSE RABS       */
         OI    CCAREUSE(R11),B'00000100'                           0357
*   CCAF2NVC=ON;                    /* NO VALIDITY CHECK             */
         OI    CCAF2NVC(R11),B'01000000'                           0358
*   CCAR1UR=OFF;                    /* CAN USE RAB1 - 5              */
         NI    CCAR1UR(R11),B'01111111'                            0359
*   CCAR2UR=OFF;                                                   0360
         NI    CCAR2UR(R11),B'01111111'                            0360
*   CCAR3UR=OFF;                                                   0361
         NI    CCAR3UR(R11),B'01111111'                            0361
*   CCAR4UR=OFF;                                                   0362
         NI    CCAR4UR(R11),B'01111111'                            0362
*   CCAR5UR=OFF;                                                   0363
         NI    CCAR5UR(R11),B'01111111'                            0363
*   CCAURAB=ADDR(CCARAB1);          /* SET BASE RAB                  */
         LA    @10,CCARAB1(,R11)                                   0364
         ST    @10,CCAURAB(,R11)                                   0364
*   CCARABB=ADDR(CCARAB1);                                         0365
         ST    @10,CCARABB(,R11)                                   0365
*   CCARABF=ADDR(CCARAB1);                                         0366
         ST    @10,CCARABF(,R11)                                   0366
*   CCARABL=ADDR(CCARAB5);          /* SET LAST RAB                  */
         LA    @10,CCARAB5(,R11)                                   0367
         ST    @10,CCARABL(,R11)                                   0367
*   CCAEXT=ON;                      /* SET EXTRACT FUNCTION          */
         OI    CCAEXT(R11),B'00000010'                             0368
*   CCAXCPL=ADDR(DELXCPL);          /* SET PTR TO CPL                */
*                                                                  0369
         LA    @10,52                                              0369
         AL    @10,CCACMSWA(,R11)                                  0369
         ST    @10,CCAXCPL(,R11)                                   0369
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP CPL                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0370
*   RFY                                                            0370
*     CTGPL BASED(ADDR(DELXCPL));                                  0370
*   CTGPL=CTGPL&&CTGPL;                                            0371
*                                                                  0371
         XC    CTGPL(28,@10),CTGPL(@10)                            0371
*   /*****************************************************************/
*   /*                                                               */
*   /* SET LEN OF WORKAREA                                   @Y30DSSM*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0372
*   GDGLEN=((MAXGOP*FOUR)+FOUR);                                   0372
         ST    @10,@TF00001                                        0372
         L     @10,CCADGDGA(,R11)                                  0372
         MVC   GDGLEN(2,@10),@CH03723                              0372
*   CTGWKA=CCADGDGA;                                               0373
         L     @05,@TF00001                                        0373
         ST    @10,CTGWKA(,@05)                                    0373
*   ;                               /* PTR TO WORK AREA      @Y30DSSM*/
*   CTGNOFLD=ONE;                   /* NUMBER OF FPLS                */
         L     @10,@TF00001                                        0375
         MVI   CTGNOFLD(@10),X'01'                                 0375
*   CTGFIELD(1)=ADDR(DELXFPL);      /* PTR TO FPL                    */
*                                                                  0376
         L     @10,@TF00001                                        0376
         LA    @10,DELXFPL(,@10)                                   0376
         L     @05,@TF00001                                        0376
         ST    @10,CTGFIELD(,@05)                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FPL                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0377
*   RFY                                                            0377
*     CTGFL BASED(CTGFIELD(1));                                    0377
*   CTGFL=CTGFL&&CTGFL;                                            0378
         XC    CTGFL(16,@10),CTGFL(@10)                            0378
*   CTGFLDNO=ONE;                   /* NO OF FIELDS                  */
         MVI   CTGFLDNO(@10),X'01'                                 0379
*   DELNM1='NAMEDS  ';                                             0380
         L     @05,@TF00001                                        0380
         MVC   DELNM1(8,@05),@CC03625                              0380
*   CTGFLDNM=ADDR(DELNM1);          /* FIELD NAME                    */
         L     @05,@TF00001                                        0381
         LA    @05,DELNM1(,@05)                                    0381
         ST    @05,CTGFLDNM(,@10)                                  0381
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0382
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPCCFM');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPCCFM'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00005 DS    0H                                                  0385
@EF00005 DS    0H                                                  0385
@ER00005 BR    @14                                                 0385
@PB00005 DS    0H                                                  0386
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0387
*/********************************************************************/
*/*                                                                  */
*/*        IGGPCCFM  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0387
*IGGPCCFM:                                                         0387
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00006                                            0387
IGGPCCFM DS    0H                                                  0388
*Z028:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z028CCFM:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0388
*    (R5,                                                          0388
*     R6,                                                          0388
*     R7,                                                          0388
*     R8,                                                          0388
*     R9,                                                          0388
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z028     DS    0H                                                  0388
Z028CCFM DS    0H                                                  0389
*   RFY                                                            0389
*    (R2,                                                          0389
*     R3,                                                          0389
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0391
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP CPL/FPL FOR EXTRACT OF PTR(ASSO) FROM ALIAS ENRTY      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0392
*   CCAREUSE=ON;                    /* ALLOW EXT TO REUSE RABS       */
         OI    CCAREUSE(R11),B'00000100'                           0392
*   CCAF2NVC=ON;                    /* NO VALIDITY CHECK             */
         OI    CCAF2NVC(R11),B'01000000'                           0393
*   CCAR2UR=OFF;                    /* CAN USE RAB1 - 5              */
         NI    CCAR2UR(R11),B'01111111'                            0394
*   CCAR3UR=OFF;                                                   0395
         NI    CCAR3UR(R11),B'01111111'                            0395
*   CCAR4UR=OFF;                                                   0396
         NI    CCAR4UR(R11),B'01111111'                            0396
*   CCAR5UR=OFF;                                                   0397
         NI    CCAR5UR(R11),B'01111111'                            0397
*   CCARABB=ADDR(CCARAB1);                                         0398
         LA    @10,CCARAB1(,R11)                                   0398
         ST    @10,CCARABB(,R11)                                   0398
*   CCARABF=ADDR(CCARAB1);                                         0399
         ST    @10,CCARABF(,R11)                                   0399
*   CCARABL=ADDR(CCARAB5);          /* SET LAST RAB                  */
         LA    @05,CCARAB5(,R11)                                   0400
         ST    @05,CCARABL(,R11)                                   0400
*   CCAXCPL=ADDR(DELXCPL);          /* SET PTR TO CPL                */
*                                                                  0401
         LA    @05,52                                              0401
         AL    @05,CCACMSWA(,R11)                                  0401
         ST    @05,CCAXCPL(,R11)                                   0401
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP CPL                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0402
*   RFY                                                            0402
*     CTGPL BASED(ADDR(DELXCPL));                                  0402
*   CTGPL=CTGPL&&CTGPL;                                            0403
         XC    CTGPL(28,@05),CTGPL(@05)                            0403
*   CTGNOFLD=ONE;                   /* NUMBER OF FPLS                */
         MVI   CTGNOFLD(@05),X'01'                                 0404
*   DLXALNG=LENGTH(DLXASCWA);       /*                       @Y30DSPJ*/
         MVC   DLXALNG(2,@05),@CH00255                             0405
*   CTGWKA=ADDR(DLXASCWA);          /* AREA FOR RETURN OF ASSO.    0406
*                                                            @Y30DSPJ*/
         LA    @15,DLXASCWA(,@05)                                  0406
         ST    @15,CTGWKA(,@05)                                    0406
*   CTGFIELD(1)=ADDR(DELXFPL);      /* PTR TO FPL                    */
*                                                                  0407
         LA    @15,DELXFPL(,@05)                                   0407
         ST    @15,CTGFIELD(,@05)                                  0407
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FPL                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0408
*   RFY                                                            0408
*     CTGFL BASED(CTGFIELD(1));     /* SET FOR ASSOC.                */
*   CTGFL=CTGFL&&CTGFL;                                            0409
         XC    CTGFL(16,@15),CTGFL(@15)                            0409
*   CTGFLDNO=ONE;                                                  0410
         MVI   CTGFLDNO(@15),X'01'                                 0410
*   DELNM1='NAMEDS  ';                                             0411
         MVC   DELNM1(8,@05),@CC03625                              0411
*   CTGFLDNM=ADDR(DELNM1);                                         0412
         LA    @05,DELNM1(,@05)                                    0412
         ST    @05,CTGFLDNM(,@15)                                  0412
*   CCAURAB=ADDR(CCARAB1);          /* SET BASE RAB                  */
         ST    @10,CCAURAB(,R11)                                   0413
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0414
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDELB');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDELB'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00006 DS    0H                                                  0417
@EF00006 DS    0H                                                  0417
@ER00006 BR    @14                                                 0417
@PB00006 DS    0H                                                  0418
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0419
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDELB  -  PROCEDURE  EXTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0419
*IGGPDELB:                                                         0419
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00007                                            0419
IGGPDELB DS    0H                                                  0420
*   GEN(ENTRY IGGPDELB );           /* IDENTIFY ENTRY-POINT SYMBOL   */
         ENTRY IGGPDELB
*Z029:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z029DELB:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0421
*    (R5,                                                          0421
*     R6,                                                          0421
*     R7,                                                          0421
*     R8,                                                          0421
*     R9,                                                          0421
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z029     DS    0H                                                  0421
Z029DELB DS    0H                                                  0422
*   RFY                                                            0422
*    (R2,                                                          0422
*     R3,                                                          0422
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
         LA 13,12(13)
*   GEN(BALR 12,0);                 /* ESTABLISH ADDRESSABILITY      */
         BALR 12,0
*   GEN(LA 15,*-IGGSEGST(0,0));     /* COMPUTE MODULE BASE           */
         LA 15,*-IGGSEGST(0,0)
*   GEN(SR 12,15);                  /* SET BASE TO MODULE BASE       */
*                                                                  0427
         SR 12,15
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE GDG BASE:                                      @Y30DSSM*/
*   /* A NON-EMPTY GDG BASE CAN ONLY BE DELETE BY SPECIFYING @Y30DSSM*/
*   /* THE FORCE OPTION ON THE DELETE STATEMENT. IF THE BASE IS NOT  */
*   /* EMPTY AND FORCE NOT SPECIFIED THEN AN ERROR CONDITION RESULTS.*/
*   /* WHEN FORCE IS SPECIFIED,THE NVSAM DATA SETS ARE NOT           */
*   /* SCRATCHED,ONLY THE CATALOG ENTRIES ARE REMOVED. IF THE USER   */
*   /* WISHES TO SCRATCH THE NVSAM DATA SETS,HE MUST FIRST DELETE    */
*   /* EACH ONE BY NAME AND THEN DELETE THE GDG BASE RECORD. @Y30DSSM*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0428
*   CCAMNLEN=(MAXGOP*FOUR)+MAX(LENGTH(DELWKA),LENGTH(CMSWA));/* CALC
*                                      SIZE FOR GETMAIN      @Y30DSSM*/
         MVC   CCAMNLEN(3,R11),@CF03718+1                          0428
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0429
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
*                                                                  0430
         MVI   CCAMNSPL(R11),X'FC'                                 0430
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE MAIN STORAGE FROM USER SUBPOOL 252                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0431
*   GEN(GETMAIN LC,MF=(E,(1)));     /* GET MAIN STORAGE SPACE        */
         GETMAIN LC,MF=(E,(1))
*   GEN(LR R1,R15);                 /* PICK UP RETURN CODE           */
         LR R1,R15
*   IF R1^=NOGETMSE THEN            /* CHECK FOR ERROR RETURN        */
*                                                                  0433
         LTR   R1,R1                                               0433
         BZ    @RF00433                                            0433
*     /***************************************************************/
*     /*                                                             */
*     /* SET CCAMODID='A5', CCAREASN=RSN2, CCARETRN=RCINSSWA         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0434
*     CCAPROB=IGGSEGID+(RSN2*K256)+RCINSSWA;/* INSUFFICIENT CORE   0434
*                                      ERROR                         */
         MVC   CCAPROB(4,R11),@CF03727                             0434
*   ELSE                            /* GETMAIN SUCCESSFUL            */
*     DO;                                                          0435
         B     @RC00433                                            0435
@RF00433 DS    0H                                                  0436
*       DO;                                                        0436
*         IF MNATFULL=ON THEN       /* TRACKING TABLE FULL           */
*                                                                  0437
         TM    MNATFULL(R11),B'10000000'                           0437
         BNO   @RF00437                                            0437
*           /*********************************************************/
*           /*                                                       */
*           /* CALL TO MODULE IGG0CLAT                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0438
*Z033ARFS:                                                         0438
*           CALL IGGPARFS;          /* YES,CALL SPILL ROUTINE        */
Z033ARFS L     @15,@CV03481                                        0438
         BALR  @14,@15                                             0438
*         GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/*  0439
*                                      PUSH AND TRACK                */
@RF00437 DS    0H                                                  0439
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*       END;                                                       0440
*     END;                          /*                       @Y30DSSM*/
*   CCADGDGA=CCAMNADR;              /* ADDR OF WORKAREA      @Y30DSSM*/
@RC00433 L     @10,CCAMNADR(,R11)                                  0442
         ST    @10,CCADGDGA(,R11)                                  0442
*   GDGMS=CCAMNLEN;                 /* SAVE LEN OF GETMAIN   @Y30DSSM*/
         L     @05,CCAMNLEN-1(,R11)                                0443
         LA    @05,0(,@05)                                         0443
         STCM  @05,15,GDGMS(@10)                                   0443
*   RFY                                                            0444
*    (R6,                                                          0444
*     R7,                                                          0444
*     R8,                                                          0444
*     R9) RSTD;                     /* RST FOR MVCL          @Y30DSSM*/
*   R6=ADDR(GDGWKA);                /* STARTING STOR ADDR    @Y30DSSM*/
         LR    R6,@10                                              0445
*   R7=CCAMNLEN;                    /* LENGTH OF STORAGE     @Y30DSSM*/
         LR    R7,@05                                              0446
*   R9=NULL;                        /* PADDING CHAR 0        @Y30DSSM*/
         SLR   R9,R9                                               0447
*   MVCL(R6,R8);                    /* ZERO STORAGE          @Y30DSSM*/
         MVCL  R6,R8                                               0448
*   RFY                                                            0449
*    (R6,                                                          0449
*     R7,                                                          0449
*     R8,                                                          0449
*     R9) UNRSTD;                   /* FREE REGS FOR CMPLR   @Y30DSSM*/
*Z034BCFE:                                                         0450
*   CALL IGGPBCFE;                  /* BUILD CPL & FPL'S     @Y30DSSM*/
*                                                                  0450
Z034BCFE BAL   @14,IGGPBCFE                                        0450
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TO MODULE IGG0CLAZ                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0451
*Z035EXT:                                                          0451
*   CALL IGGPEXT;                   /* EXT ALL NVSAM GOPS    @Y30DSSM*/
Z035EXT  L     @15,@CV03477                                        0451
         BALR  @14,@15                                             0451
*   RFY                                                            0452
*     CTGPL BASED(CCACPL);          /* REBASE CPL            @Y30DSSM*/
*   GDGCPL=CTGPL;                   /* SAVE CALLERS CPL      @Y30DSSM*/
         L     @10,CCADGDGA(,R11)                                  0453
         L     @05,CCACPL(,R11)                                    0453
         MVC   GDGCPL(28,@10),CTGPL(@05)                           0453
*   GDGCPLAD=CCACPL;                /* SAVE CPL ADDR         @Y30DSSM*/
         STCM  @05,15,GDGCPLAD(@10)                                0454
*   GDGCI=RCDCINO;                  /* SAVE GDG BASE CI NO.  @Y30DSSM*/
*                                                                  0455
         L     @01,CCAURAB(,R11)                                   0455
         L     @01,CCACPE1(,@01)                                   0455
         MVC   GDGCI(3,@10),RCDCINO(@01)                           0455
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF GDG BASE IS FULL AND FORCE SPECIFIED  @Y30DSSM*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0456
*   IF ADDR(DELXFPL)->CTGFLNG(1)^=N THEN/* GDG BASE FULL     @Y30DSSM*/
         L     @15,CCACMSWA(,R11)                                  0456
         L     @14,CTGFLNG+88(,@15)                                0456
         LTR   @14,@14                                             0456
         BZ    @RF00456                                            0456
*     IF CTGSCR=ON THEN             /* FORCE DELETE          @Y30DSSM*/
         TM    CTGSCR(@05),B'00000010'                             0457
         BNO   @RF00457                                            0457
*       DO;                         /* YES - START NVSAM CODE        */
*         CCAPROB=CCAPROB&&CCAPROB; /* ZERO RETURN CODE      @Y30DSSM*/
         L     @09,CCAPROB(,R11)                                   0459
         LR    @08,@09                                             0459
         XR    @08,@09                                             0459
         ST    @08,CCAPROB(,R11)                                   0459
*         GDGNOCI=(ADDR(DELXFPL)->CTGFLNG(1)/FOUR);/* NO. OF NVSAMS
*                                      TO BE DELETED         @Y30DSSM*/
         SRDA  @14,32                                              0460
         D     @14,@CF00058                                        0460
         STH   @15,GDGNOCI(,@10)                                   0460
*         CTGWKA=ADDR(DLXASCWA);    /* WORKAREA POINTER      @Y30DSSM*/
*                                                                  0461
         L     @10,CCACMSWA(,R11)                                  0461
         LA    @10,DLXASCWA+52(,@10)                               0461
         ST    @10,CTGWKA(,@05)                                    0461
*         /***********************************************************/
*         /*                                                         */
*         /* LOOP TO DELETE ALL NVSAM CATALOG RECORDS WHICH  @Y30DSSM*/
*         /* ARE BASED ON GDG                                @Y30DSSM*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0462
*         DO GDG1=1 TO GDGNOCI;     /* CONTROL BY NUMBER OF CI'S FROM
*                                      EXTRACT               @Y30DSSM*/
         LA    @10,1                                               0462
         B     @DE00462                                            0462
@DL00462 DS    0H                                                  0463
*           CCASRID=GDGNVCI(GDG1);  /* GET BY CI NUMBER      @Y30DSSM*/
         L     @10,CCADGDGA(,R11)                                  0463
         SLR   @05,@05                                             0463
         IC    @05,GDG1(,@10)                                      0463
         SLA   @05,2                                               0463
         ALR   @10,@05                                             0463
         MVC   CCASRID(3,R11),GDGNVCI-4(@10)                       0463
*           DO;                                                    0464
*             CCAF1KEY=OFF;         /* GET BY CI NO.                 */
*             CCAF1KGE=OFF;         /* NOT GET NEXT                  */
*             CCAF1UP=ON;           /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0467
         NI    CCAF1KEY(R11),B'11100111'                           0467
*             CCAURAB=ADDR(CCARAB1);/* SET RAB PTR                   */
*                                                                  0468
         LA    @10,CCARAB1(,R11)                                   0468
         ST    @10,CCAURAB(,R11)                                   0468
*             /*******************************************************/
*             /*                                                     */
*             /* CALL TO MODULE IGG0CLBI                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0469
*Z037GET:                                                          0469
*             CALL IGGPGET;         /* GET RECORD                    */
Z037GET  L     @15,@CV03478                                        0469
         BALR  @14,@15                                             0469
*           END;                    /* GET NVSAM RCD         @Y30DSSM*/
*           IF CCACD1^=RCS THEN     /* GET FAIL              @Y30DSSM*/
         CLI   CCACD1(R11),0                                       0471
         BE    @RF00471                                            0471
*             DO;                   /* YES                   @Y30DSSM*/
*               CCAPROB=CCAPROB&&CCAPROB;/* ZERO RTN CDE     @Y30DSSM*/
         L     @10,CCAPROB(,R11)                                   0473
         LR    @05,@10                                             0473
         XR    @05,@10                                             0473
         ST    @05,CCAPROB(,R11)                                   0473
*               CCASRID=GDGCI;      /* GET GDG BASE RECORD   @Y30DSSM*/
         L     @10,CCADGDGA(,R11)                                  0474
         MVC   CCASRID(3,R11),GDGCI(@10)                           0474
*               DO;                                                0475
*                 CCAF1KEY=OFF;     /* GET BY CI NO.                 */
*                 CCAF1KGE=OFF;     /* NOT GET NEXT                  */
*                 CCAF1UP=ON;       /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0478
         NI    CCAF1KEY(R11),B'11100111'                           0478
*                 CCAURAB=ADDR(CCARAB2);/* SET RAB PTR               */
*                                                                  0479
         LA    @10,CCARAB2(,R11)                                   0479
         ST    @10,CCAURAB(,R11)                                   0479
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL TO MODULE IGG0CLBI                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0480
*Z039GET:                                                          0480
*                 CALL IGGPGET;     /* GET RECORD                    */
Z039GET  L     @15,@CV03478                                        0480
         BALR  @14,@15                                             0480
*               END;                /* GET GDG               @Y30DSSM*/
*               IF CCACD1^=RCS THEN /* GET FAIL              @Y30DSSM*/
         CLI   CCACD1(R11),0                                       0482
         BE    @RF00482                                            0482
*Z040DGBC:                                                         0483
*                 CALL IGGPDGBC;    /* FREE STORAGE & RETURN @Y30SSSM*/
Z040DGBC BAL   @14,IGGPDGBC                                        0483
*               ELSE                                               0484
*Z041PUNT:                                                         0484
*                 CALL IGGPPUNT;    /* SET UP CPL AND FPL FOR MODIFY
*                                                            @Y30DSSM*/
*                                                                  0484
         B     @RC00482                                            0484
@RF00482 DS    0H                                                  0484
Z041PUNT BAL   @14,IGGPPUNT                                        0484
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLAV                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0485
*Z042MOD:                                                          0485
*               CALL IGGPMOD;       /* DELETE BAD NVSAM GOP  @Y30DSSM*/
@RC00482 DS    0H                                                  0485
Z042MOD  L     @15,@CV03479                                        0485
         BALR  @14,@15                                             0485
*               RFY                                                0486
*                 CTGPL BASED(CCACPL);/* REBASE CPL          @Y30DSSM*/
*             END;                  /* END NVSAM GOP ERROR   @Y30DSSM*/
*           ELSE                    /* GET FOR NVSAM         @Y30DSSM*/
*             DO;                   /* SUCCESSFUL            @Y30DSSM*/
         B     @RC00471                                            0488
@RF00471 DS    0H                                                  0489
*               RFY                                                0489
*                 CTGPL BASED(CCACPL);                             0489
*               CTGPL=CTGPL&&CTGPL; /* CLEAR CPL             @Y30DSSM*/
         L     @10,CCACPL(,R11)                                    0490
         XC    CTGPL(28,@10),CTGPL(@10)                            0490
*               CTGPURG=ON;         /* NO EXP DATE CHECK     @Y30DSSM*/
         OI    CTGPURG(@10),B'00100000'                            0491
*               CTGWKA=NULL;        /* NO WORKAREA           @Y30DSSM*/
         SLR   @05,@05                                             0492
         ST    @05,CTGWKA(,@10)                                    0492
*               CTGENT=ADDR(CNAME); /* 44 BYTE NAME          @Y30DSSM*/
         L     @05,CCAURAB(,R11)                                   0493
         L     @05,CCACPE1(,@05)                                   0493
         LA    @05,CNAME(,@05)                                     0493
         ST    @05,CTGENT(,@10)                                    0493
*               CTGSCR=OFF;         /* TURN OFF BIT SO NVSAMS WILL 0494
*                                      NOT BE SCRATCHED      @Y30DSSM*/
         NI    CTGSCR(@10),B'11111101'                             0494
*               CTGTYPE='A';        /* SHOW RCD TYP AS NVSAM @Y30DSSM*/
*                                                                  0495
         MVI   CTGTYPE(@10),C'A'                                   0495
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLBG                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0496
*Z043DEL:                                                          0496
*               CALL IGGPDEL;       /* DELETE NVSAM GOP AND NVSAM  0496
*                                      CATALOG RECORD AND ANY ALIAS
*                                      RECORDS ASSOCIATED WITH THE 0496
*                                      NVSAM                 @Y30DSSM*/
Z043DEL  L     @15,@CV03480                                        0496
         BALR  @14,@15                                             0496
*               CCAPROB=CCAPROB&&CCAPROB;/* ZERO RTN CD      @Y30DSSM*/
         L     @10,CCAPROB(,R11)                                   0497
         LR    @05,@10                                             0497
         XR    @05,@10                                             0497
         ST    @05,CCAPROB(,R11)                                   0497
*             END;                  /* END NORMAL NVSAM CODE @Y30DSSM*/
*         END;                      /* END DO LOOP           @Y30DSSM*/
@RC00471 L     @05,CCADGDGA(,R11)                                  0499
         LA    @10,1                                               0499
         SLR   @15,@15                                             0499
         IC    @15,GDG1(,@05)                                      0499
         ALR   @10,@15                                             0499
@DE00462 L     @05,CCADGDGA(,R11)                                  0499
         STC   @10,GDG1(,@05)                                      0499
         L     @05,CCADGDGA(,R11)                                  0499
         CH    @10,GDGNOCI(,@05)                                   0499
         BNH   @DL00462                                            0499
*       END;                        /* END ALL NVSAM CODE    @Y30DSSM*/
*     ELSE                          /* ERROR                 @Y30DSSM*/
*       DO;                         /* NO FORCE OPTION       @Y30DSSM*/
*                                                                  0501
         B     @RC00457                                            0501
@RF00457 DS    0H                                                  0502
*         /***********************************************************/
*         /*                                                         */
*         /* SET CCAMODID='A5', CCAREASN=RSN28, CCARETRN=RCINFUNC    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0502
*         CCAPROB=IGGSEGID+(RSN28*K256)+RCINFUNC;/* FORCE NOT      0502
*                                      SPECIFIED WITH NON-EMPTY GDG
*                                      BASE                  @Y30DSSM*/
         MVC   CCAPROB(4,R11),@CF03730                             0502
*Z045DGBC:                                                         0503
*         CALL IGGPDGBC;            /* FREE STORAGE & RETURN @Y30SSSM*/
Z045DGBC BAL   @14,IGGPDGBC                                        0503
*       END;                        /* END FORCE ERROR       @Y30DSSM*/
*   ELSE                            /* GDG BASE              @Y30DSSM*/
*     DO;                           /* EMPTY                 @Y30DSSM*/
         B     @RC00456                                            0505
@RF00456 DS    0H                                                  0506
*       IF CTGPURG^=ON THEN         /* CK IF PURGE REQ       @Y30LSPS*/
         L     @10,CCACPL(,R11)                                    0506
         TM    CTGPURG(@10),B'00100000'                            0506
         BO    @RF00506                                            0506
*         DO;                       /* IF NOT PURGE CK E     @Y30LSPS*/
*           IF CVTDATE(2:4)<CEXP    /* CK CURRENT DATE       @Y30LSPS*/
*             THEN                  /* EXP DATE NOT YET      @Y30LSPS*/
         L     @10,CCAURAB(,R11)                                   0508
         L     @10,CCACPE1(,@10)                                   0508
         L     @05,CVTPTR                                          0508
         CLC   CVTDATE+1(3,@05),CEXP(@10)                          0508
         BNL   @RF00508                                            0508
*             DO;                   /* ERROR NOT EXPIRED     @Y30LSPS*/
*                                                                  0509
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='A5', CCAREASN=RSN0, CCARETRN=RCDATE */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0510
*               CCAPROB=IGGSEGID+(RSN0*K256)+RCDATE;/* NOT EXPIRED 0510
*                                                            @Y30DSSM*/
         MVC   CCAPROB(4,R11),@CF03731                             0510
*Z047DGBC:                                                         0511
*               CALL IGGPDGBC;      /* QUIT WITH ERROR       @Y30LSPS*/
Z047DGBC BAL   @14,IGGPDGBC                                        0511
*             END;                  /* END IF NOT EXP        @Y30LSPS*/
*           ELSE                                                   0513
*             ;                     /* EXPIR DATE PAST       @Y30LSPS*/
@RF00508 DS    0H                                                  0514
*         END;                      /* END NOT PURGE         @Y30LSPS*/
*       ELSE                                                       0515
*         ;                         /* OK TO DELETE          @Y30LSPS*/
@RF00506 DS    0H                                                  0516
*     END;                          /* END DATE CHECK        @Y30DSSM*/
*   CCASRID=GDGCI;                  /* REGET GDG BASE        @Y30DSSM*/
@RC00456 L     @10,CCADGDGA(,R11)                                  0517
         MVC   CCASRID(3,R11),GDGCI(@10)                           0517
*   CCACPL=GDGCPLAD;                /* REFRESH CALLERS CP AD @Y30DSSM*/
         ICM   @05,15,GDGCPLAD(@10)                                0518
         ST    @05,CCACPL(,R11)                                    0518
*   RFY                                                            0519
*     CTGPL BASED(CCACPL);          /* REBASE CPL            @Y30DSSM*/
*   CTGPL=GDGCPL;                   /* REFRESH CALLERS CPL   @Y30DSSM*/
*                                                                  0520
         MVC   CTGPL(28,@05),GDGCPL(@10)                           0520
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE GDG BASE RECORD AND ANY HORIZONTAL EXTENTION   @Y30DSSM*/
*   /* RECORDS IT MIGHT HAVE.                                @Y30DSSM*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0521
*   DO UNTIL EXTGOCI=ZERO;          /* DO UNTIL ALL HORIZONTAL     0521
*                                      EXTENTIONS ARE DELETED,START
*                                      BY DELETING GDG BASE. @Y30DSSM*/
@DL00521 DS    0H                                                  0522
*     DO;                                                          0522
*       CCAF1KEY=OFF;               /* GET BY CI NO.                 */
*       CCAF1KGE=OFF;               /* NOT GET NEXT                  */
*       CCAF1UP=ON;                 /* GET FOR UPD                   */
         OI    CCAF1UP(R11),B'00000010'                            0525
         NI    CCAF1KEY(R11),B'11100111'                           0525
*       CCAURAB=ADDR(CCARAB1);      /* SET RAB PTR                   */
*                                                                  0526
         LA    @10,CCARAB1(,R11)                                   0526
         ST    @10,CCAURAB(,R11)                                   0526
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLBI                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0527
*Z049GET:                                                          0527
*       CALL IGGPGET;               /* GET RECORD                    */
Z049GET  L     @15,@CV03478                                        0527
         BALR  @14,@15                                             0527
*     END;                          /* GET GDG BASE RECORD   @Y30DSSM*/
*     IF CCACD1^=RCS THEN           /* GET FOR GDG GOOD      @Y30DSSM*/
         CLI   CCACD1(R11),0                                       0529
         BE    @RF00529                                            0529
*Z050DGBC:                                                         0530
*       CALL IGGPDGBC;              /* NO,FREE CORE & EXIT   @Y30SSSM*/
Z050DGBC BAL   @14,IGGPDGBC                                        0530
*     CCAURAB=ADDR(CCARAB1);        /* SET RAB               @Y30DSSM*/
@RF00529 LA    @10,CCARAB1(,R11)                                   0531
         ST    @10,CCAURAB(,R11)                                   0531
*     DLASCI=EXTGOCI;               /* SAVE EXTENTION CI     @Y30DSSM*/
         L     @05,CCACMSWA(,R11)                                  0532
         L     @01,CCACPE2(,@10)                                   0532
         MVC   DLASCI+52(3,@05),EXTGOCI(@01)                       0532
*     GDGTYPE=RCDID;                /* SAVE RECORD TYPE      @Y30DSSM*/
*                                                                  0533
         L     @05,CCADGDGA(,R11)                                  0533
         L     @10,CCACPE1(,@10)                                   0533
         MVC   GDGTYPE(1,@05),RCDID(@10)                           0533
*     /***************************************************************/
*     /*                                                             */
*     /* CALL TO MODULE IGG0CLAG                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0534
*Z051PDE:                                                          0534
*     CALL IGGPPDE;                 /* DELETE GDG ON FIRST CALL AND
*                                      EXTENTIONS ON SUBSEQUENT    0534
*                                      CALLS.                @Y30DSSM*/
Z051PDE  L     @15,@CV03482                                        0534
         BALR  @14,@15                                             0534
*     IF CCACD1=RCS&                /* DELETE SUCCESSFUL     @Y30DSSM*/
*         GDGTYPE='B' THEN          /* DELETED RECORD GDG    @Y30DSSM*/
         CLI   CCACD1(R11),0                                       0535
         BNE   @RF00535                                            0535
         L     @10,CCADGDGA(,R11)                                  0535
         CLI   GDGTYPE(@10),C'B'                                   0535
         BNE   @RF00535                                            0535
*       DO;                         /* YES                   @Y30DSSM*/
*         CCAURAB=ADDR(CCARAB1);    /* SET RAB POINTER       @Y30DSSM*/
         LA    @10,CCARAB1(,R11)                                   0537
         ST    @10,CCAURAB(,R11)                                   0537
*         IF CTGWKA^=RCS THEN       /* WORK AREA EXIST       @Y30DSSM*/
         L     @10,CCACPL(,R11)                                    0538
         L     @10,CTGWKA(,@10)                                    0538
         LTR   @10,@10                                             0538
         BZ    @RF00538                                            0538
*           IF WKALEN1<LENGTH(USERWKA)+/* YES,IS IT LARGE    @Y30DSSM*/
*               LENGTH(ENTNAMES) THEN/* ENOUGH               @Y30DSSM*/
         LH    @10,WKALEN1(,@10)                                   0539
         C     @10,@CF03717                                        0539
         BNL   @RF00539                                            0539
*             DO;                   /* NO                    @Y30DSSM*/
*                                                                  0540
*               /*****************************************************/
*               /*                                                   */
*               /* SET CCAMODID='A5', CCAREASN=RSN6, CCARETRN=RCVLSM */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0541
*               CCAPROB=IGGSEGID+(RSN6*K256)+RCVLSM;/* CALLERS     0541
*                                      WORKAREA TOO SMALL    @Y30DSSM*/
         MVC   CCAPROB(4,R11),@CF03720                             0541
*Z053DGBC:                                                         0542
*               CALL IGGPDGBC;      /* FREE STORAGE & RETURN @Y30SSSM*/
Z053DGBC BAL   @14,IGGPDGBC                                        0542
*             END;                  /* END WORKAREA CHECK    @Y30DSSM*/
*           ELSE                    /* WORKAREA IS           @Y30DSSM*/
*             DO;                   /* LARGE ENOUGH          @Y30DSSM*/
         B     @RC00539                                            0544
@RF00539 DS    0H                                                  0545
*               WKALEN2=LENGTH(USERWKA)+LENGTH(ENTNAMES);/* LENGTH OF
*                                      WORK AREA             @Y30DSSM*/
         L     @10,CCACPL(,R11)                                    0545
         L     @10,CTGWKA(,@10)                                    0545
         MVC   WKALEN2(2,@10),@CH03717                             0545
*               ENTNAMET(1)=RCDID;  /* RECORD TYPE B         @Y30DSSM*/
         L     @05,CCAURAB(,R11)                                   0546
         L     @05,CCACPE1(,@05)                                   0546
         MVC   ENTNAMET(1,@10),RCDID(@05)                          0546
*               ENTNAMEV(1)=CNAME;  /* GDG NAME              @Y30DSSM*/
         MVC   ENTNAMEV(44,@10),CNAME(@05)                         0547
*               CCASMFUC=ON;        /* INDICATE UNCATALOG    @Y30DSSM*/
*                                                                  0548
         OI    CCASMFUC(R11),B'10000000'                           0548
*               /*****************************************************/
*               /*                                                   */
*               /* CALL TO MODULE IGG0CLBV                           */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0549
*Z054SMFS:                                                         0549
*               CALL IGGPSMFS;      /* CALL SMF              @Y30DSSM*/
Z054SMFS L     @15,@CV03483                                        0549
         BALR  @14,@15                                             0549
*             END;                  /* END SMF CODE          @Y30DSSM*/
*         ELSE                                                     0551
*           ;                       /*                       @Y30DSSM*/
@RF00538 DS    0H                                                  0552
*       END;                        /* END ERROR ON DELETE   @Y30DSSM*/
*     ELSE                                                         0553
*       ;                           /*                       @Y30DSSM*/
@RF00535 DS    0H                                                  0554
*     CCASRID=DLASCI;               /* CI OF HORIZONTAL EXTENTION  0554
*                                      RECORD TO DELETE      @Y30DSSM*/
@RC00535 L     @10,CCACMSWA(,R11)                                  0554
         MVC   CCASRID(3,R11),DLASCI+52(@10)                       0554
*   END;                            /* END DELETING EXTENT.  @Y30DSSM*/
@DE00521 L     @10,CCAURAB(,R11)                                   0555
         L     @10,CCACPE2(,@10)                                   0555
         CLC   EXTGOCI(3,@10),ZERO                                 0555
         BNE   @DL00521                                            0555
*Z055DGBC:                                                         0556
*   CALL IGGPDGBC;                  /* FREE STORAGE          @Y30SSSM*/
Z055DGBC BAL   @14,IGGPDGBC                                        0556
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0557
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPDGBC');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPDGBC'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00007 DS    0H                                                  0560
@EF00007 DS    0H                                                  0560
@ER00007 BR    @14                                                 0560
@PB00007 DS    0H                                                  0561
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0562
*/********************************************************************/
*/*                                                                  */
*/*        IGGPDGBC  -  PROCEDURE  INTERNALLY  CALLED  UNNESTED      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0562
*IGGPDGBC:                                                         0562
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00008                                            0562
IGGPDGBC DS    0H                                                  0563
*Z056:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z056DGBC:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0563
*    (R5,                                                          0563
*     R6,                                                          0563
*     R7,                                                          0563
*     R8,                                                          0563
*     R9,                                                          0563
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z056     DS    0H                                                  0563
Z056DGBC DS    0H                                                  0564
*   RFY                                                            0564
*    (R2,                                                          0564
*     R3,                                                          0564
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*                                                                  0564
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30SSSM*/
*   /* SET UP TO FREE ALL STORAGE ACQUIRED FOR DELETE GDG    @Y30DSSM*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0565
*   CCAMNADR=CCADGDGA;              /* AREA TO FREEMAIN      @Y30DSSM*/
         L     @10,CCADGDGA(,R11)                                  0565
         ST    @10,CCAMNADR(,R11)                                  0565
*   CCAMNLEN=GDGMS;                 /* LENGTH TO FREEMAIN    @Y30DSSM*/
         MVC   CCAMNLEN(3,R11),GDGMS+1(@10)                        0566
*   R1=ADDR(CCAMSSPL);              /* POINT TO STRG MGMT P.L.       */
         LA    R1,CCAMSSPL(,R11)                                   0567
*   CCAMNSPL=USUBPOOL;              /* STORE SUBPOOL VALUE           */
         MVI   CCAMNSPL(R11),X'FC'                                 0568
*   DO;                                                            0569
*     IF MNATFULL=ON THEN           /* TRACKING TABLE FULL           */
*                                                                  0570
         TM    MNATFULL(R11),B'10000000'                           0570
         BNO   @RF00570                                            0570
*       /*************************************************************/
*       /*                                                           */
*       /* CALL TO MODULE IGG0CLAT                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0571
*Z059ARFS:                                                         0571
*       CALL IGGPARFS;              /* YES,CALL SPILL ROUTINE        */
Z059ARFS L     @15,@CV03481                                        0571
         BALR  @14,@15                                             0571
*     GEN REFS(CCAMNAT)(MVC CCAMNAT(248,11),CCAMNAT+8(11));/* PUSH 0572
*                                      AND TRACK                     */
@RF00570 DS    0H                                                  0572
         MVC CCAMNAT(248,11),CCAMNAT+8(11)
*   END;                                                           0573
*                                                                  0573
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE MAIN STORAGE FROM USER SUBPOOL 252                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0574
*   GEN(FREEMAIN L,MF=(E,(1))) ;    /* FREE STORAGE          @Y30DSSM*/
         FREEMAIN L,MF=(E,(1))
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0575
*   GEN(DS 0F);                     /* FULLWORD BOUNDARY ALIGNMENT   */
         DS 0F
*   GEN(DC CL8'IGGPPUNT');          /* NAME OF FOLLOWING PROCEDURE   */
         DC CL8'IGGPPUNT'
*   END;                            /* END OF INNER PROCEDURE        */
@EL00008 DS    0H                                                  0578
@EF00008 DS    0H                                                  0578
@ER00008 BR    @14                                                 0578
@PB00008 DS    0H                                                  0579
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0580
*/********************************************************************/
*/*                                                                  */
*/*        IGGPPUNT  -  PROCEDURE  INTERNALLY  CALLED  NESTED        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0580
*IGGPPUNT:                                                         0580
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00009                                            0580
IGGPPUNT DS    0H                                                  0581
*Z060:                              /* LABEL FOR PROCEDURE TRACKING  */
*Z060PUNT:                          /* LABEL FOR PROCEDURE TRACKING  */
*   RFY                                                            0581
*    (R5,                                                          0581
*     R6,                                                          0581
*     R7,                                                          0581
*     R8,                                                          0581
*     R9,                                                          0581
*     R10) UNRSTD;                  /* PL/S COMPILER WORK REGISTERS  */
Z060     DS    0H                                                  0581
Z060PUNT DS    0H                                                  0582
*   RFY                                                            0582
*    (R2,                                                          0582
*     R3,                                                          0582
*     R4) RSTD;                     /* RESTRICT LOCAL WORK REGISTERS */
*   GEN(STM 12,14,12(13));          /* SAVE REGISTERS OF CALLER      */
         STM 12,14,12(13)
*   GEN(LA 13,12(13));              /* POINT TO NEXT SAVE AREA       */
*                                                                  0584
         LA 13,12(13)
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @Y30DSSM*/
*   /* INTERNAL ROUTINE TO BUILD CPL AND FPL FOR DELETING THE GOP FOR*/
*   /* NVSAM WHICH COULD NOT BE DELETED NORMALLY SINCE NVSAM RECORD  */
*   /* WAS INACCESSABLE.                                     @Y30DSSM*/
*   /* SET UP CPL AND FPLS FOR MODIFY                        @Y30DSSM*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0585
*   CCARABB=ADDR(CCARAB2);          /* BASE RAB              @Y30DSSM*/
         LA    @10,CCARAB2(,R11)                                   0585
         ST    @10,CCARABB(,R11)                                   0585
*   CCARABF=ADDR(CCARAB2);          /* FIRST RAB             @Y30DSSM*/
         ST    @10,CCARABF(,R11)                                   0586
*   CCARABL=ADDR(CCARAB4);          /* LAST RAB              @Y30DSSM*/
         LA    @10,CCARAB4(,R11)                                   0587
         ST    @10,CCARABL(,R11)                                   0587
*   CCAF2NVC=ON;                    /* NO VALIDITY CHECK     @Y30DSSM*/
         OI    CCAF2NVC(R11),B'01000000'                           0588
*   CCAR2UR=OFF;                    /*                       @Y30DSSM*/
         NI    CCAR2UR(R11),B'01111111'                            0589
*   CCAR3UR=OFF;                    /*                       @Y30DSSM*/
         NI    CCAR3UR(R11),B'01111111'                            0590
*   CCAR4UR=OFF;                    /*                       @Y30DSSM*/
         NI    CCAR4UR(R11),B'01111111'                            0591
*   CCAREUSE=OFF;                   /* DON'T USE DATA        @Y30DSSM*/
         NI    CCAREUSE(R11),B'11111011'                           0592
*   GDGMCPL=GDGMCPL&&GDGMCPL;       /* CLEAR CPL             @Y30DSSM*/
         L     @10,CCADGDGA(,R11)                                  0593
         XC    GDGMCPL(28,@10),GDGMCPL(@10)                        0593
*   GDGFPL1=GDGFPL1&&GDGFPL1;       /* CLEAR FIRST FPL       @Y30DSSM*/
         XC    GDGFPL1(16,@10),GDGFPL1(@10)                        0594
*   GDGFPL2=GDGFPL2&&GDGFPL2;       /* CLEAR SECOND FPL      @Y30DSSM*/
         XC    GDGFPL2(16,@10),GDGFPL2(@10)                        0595
*   CCAMCPL=ADDR(GDGMCPL);          /* SET CPL ADDR          @Y30DSSM*/
         LA    @05,GDGMCPL(,@10)                                   0596
         ST    @05,CCAMCPL(,R11)                                   0596
*   RFY                                                            0597
*     CTGPL BASED(CCAMCPL);         /* BASE CPL              @Y30DSSM*/
*   CTGNOFLD=ONE;                   /* ONE FIELD POINTER     @Y30DSSM*/
         MVI   CTGNOFLD(@05),X'01'                                 0598
*   CTGFIELD(1)=ADDR(GDGFPL1);      /* FPL ADDRESS           @Y30DSSM*/
         LA    @15,GDGFPL1(,@10)                                   0599
         ST    @15,CTGFIELD(,@05)                                  0599
*   RFY                                                            0600
*     CTGFL BASED(CTGFIELD(1));     /* BASE FIRST FPL        @Y30DSSM*/
*   CTGFLDNO=ONE;                   /* DATA/LEN ADDR PTRS    @Y30DSSM*/
         MVI   CTGFLDNO(@15),X'01'                                 0601
*   CTGFLDNM=ADDR(GDGNAME);         /* FIELD NAME            @Y30DSSM*/
         LA    @14,GDGNAME                                         0602
         ST    @14,CTGFLDNM(,@15)                                  0602
*   CTGFLCHN=ADDR(GDGFPL2);         /* CHAIN SECOND FPL      @Y30DSSM*/
         LA    @14,GDGFPL2(,@10)                                   0603
         ST    @14,CTGFLCHN(,@15)                                  0603
*   GDGFLDT1=GDGFLDT1&&GDGFLDT1;    /* CLEAR DATA/LEN PTRS   @Y30DSSM*/
         XC    GDGFLDT1(8,@10),GDGFLDT1(@10)                       0604
*   CTGFIELD(2)=ADDR(GDGFPL2);      /* TEST FPL ADDR         @Y30DSSM*/
         ST    @14,CTGFIELD+4(,@05)                                0605
*   RFY                                                            0606
*     CTGFL BASED(CTGFIELD(2));     /* REBASE FOR TEST FPL   @Y30DSSM*/
*   CTGFLDNO=ONE;                   /* DATA LEN/ADDR PTRS    @Y30DSSM*/
         MVI   CTGFLDNO(@14),X'01'                                 0607
*   CTGFLDCD=EQUAL;                 /* TEST CONDITION        @Y30DSSM*/
         MVI   CTGFLDCD(@14),X'80'                                 0608
*   CTGFLDNM=ADDR(NAME);            /* FIELD NAME            @Y30DSSM*/
         LA    @10,NAME                                            0609
         ST    @10,CTGFLDNM(,@14)                                  0609
*   CTGFLNG(1)=THREE;               /* LENGTH OF TEST FIELD  @Y30DSSM*/
         MVC   CTGFLNG(4,@14),@CF00414                             0610
*   CTGFLPT(1)=ADDR(GDGNVCI(GDG1)); /* CI FOR TEST           @Y30DSSM*/
         L     @10,CCADGDGA(,R11)                                  0611
         SLR   @05,@05                                             0611
         IC    @05,GDG1(,@10)                                      0611
         SLA   @05,2                                               0611
         LA    @10,GDGNVCI-4(@05,@10)                              0611
         ST    @10,CTGFLPT(,@14)                                   0611
*   CALL EXIT;                      /* RETURN TO CALLER              */
         BAL   @14,EXIT                                            0612
*   END;                            /* END OF INNER PROCEDURE        */
@EL00009 DS    0H                                                  0613
@EF00009 DS    0H                                                  0613
@ER00009 BR    @14                                                 0613
@PB00009 DS    0H                                                  0614
*   GEN(EJECT);                     /* GO TO A NEW PRINT PAGE        */
         EJECT
*                                                                  0615
*/********************************************************************/
*/*                                                                  */
*/*         RETURN-TO-CALLER  PROCEDURE-EXITING  SUBFUNCTION         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0615
*EXIT:                                                             0615
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/* SPECIFY PROCEDURE OPTIONS     */
         B     @PB00010                                            0615
EXIT     DS    0H                                                  0616
*   GEN(LM 12,14,0(13));            /* RESTORE REGISTERS OF CALLER   */
         LM 12,14,0(13)
*   GEN(MVI 12(13),255);            /* MARK END OF PDL               */
         MVI 12(13),255
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*PATCH:                                                            0619
*   GEN(DC (12+((*+139-@MAINENT)/140))A(0));/* PATCH AREA            */
PATCH    DC (12+((*+139-@MAINENT)/140))A(0)
*   END;                            /* END OF EXIT PROCEDURE         */
@EL00010 DS    0H                                                  0620
@EF00010 DS    0H                                                  0620
@ER00010 BR    @14                                                 0620
*   END                                                            0621
*                                                                  0621
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGGMCDCL)                                       */
*/*%INCLUDE SYSLIB  (IGGMCTRC)                                       */
*/*%INCLUDE SYSLIB  (IGGCCA  )                                       */
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (AMCBS   )                                       */
*/*%INCLUDE SYSLIB  (IGGCAXWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGFV)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGWA)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGVL)                                       */
*/*%INCLUDE SYSLIB  (IEZCTGCV)                                       */
*/*%INCLUDE SYSLIB  (IGGMCMDM)                                       */
*/*%INCLUDE SYSLIB  (IGGMVEDC)                                       */
*/*%INCLUDE SYSLIB  (IGGMGVO )                                       */
*/*%INCLUDE SYSLIB  (IDAVVOLL)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IGGMCMWA)                                       */
*                                                                  0621
*       ;                                                          0621
@EL00001 DS    0H                                                  0621
@EF00001 DS    0H                                                  0621
@ER00001 BR    @14                                                 0621
@DATA    DS    0H
@CH00255 DC    H'16'
@CH03723 DC    H'1024'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
IGG0CLA5 CSECT
         DS    0F
@CF00037 DC    F'1'
@CF00414 DC    F'3'
@CF00058 DC    F'4'
@CH00058 EQU   @CF00058+2
@CF03717 DC    F'49'
@CH03717 EQU   @CF03717+2
@CF00144 DC    F'88'
@CF00166 DC    F'120'
@CF03718 DC    F'1536'
@CF03731 DC    F'-1040908204'
@CF03727 DC    F'-1040907612'
@CF03720 DC    F'-1040906708'
@CF03730 DC    F'-1040901072'
@CF03715 DC    F'-1040896964'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGG0CLA5 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03477 DC    V(IGGPEXT)
@CV03478 DC    V(IGGPGET)
@CV03479 DC    V(IGGPMOD)
@CV03480 DC    V(IGGPDEL)
@CV03481 DC    V(IGGPARFS)
@CV03482 DC    V(IGGPPDE)
@CV03483 DC    V(IGGPSMFS)
         DS    0D
@CC03519 DC    C'NAME    '
@CC03576 DC    C'TYPE    '
@CC03625 DC    C'NAMEDS  '
GDGNAME  DC    CL8'GDGNAME '
NAME     DC    CL8'NAME    '
ZERO     DC    X'000000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IGGSEGBR EQU   @12
RWA      EQU   @02
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
DCWABASE EQU   @04
RET      EQU   @14
RFLD     EQU   @04
RGO      EQU   @15
RNDX     EQU   @03
RP0      EQU   @00
RP1      EQU   @01
RSAVE    EQU   @13
RWK1     EQU   @06
RWK2     EQU   @07
RWK3     EQU   @08
RWK4     EQU   @09
RZERO    EQU   @00
R0       EQU   @00
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
WKR2     EQU   @02
WKR3     EQU   @03
WKR4     EQU   @04
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IGGCCA   EQU   0
CCAPROB  EQU   IGGCCA+4
CCAERRCD EQU   CCAPROB+2
CCAREASN EQU   CCAERRCD
CCARETRN EQU   CCAERRCD+1
CCACD1   EQU   CCARETRN
CCAFLG1  EQU   IGGCCA+14
CCAF1KEY EQU   CCAFLG1
CCAF1KGE EQU   CCAFLG1
CCAF1UP  EQU   CCAFLG1
CCAFLG2  EQU   IGGCCA+15
CCAF2NVC EQU   CCAFLG2
CCAF2COB EQU   CCAFLG2
CCAFLG3  EQU   IGGCCA+16
CCAFLG4  EQU   IGGCCA+17
CCAFLG5  EQU   IGGCCA+18
CCAFLG6  EQU   IGGCCA+19
CCAREUSE EQU   CCAFLG6
CCAEXT   EQU   CCAFLG6
CCATCB   EQU   IGGCCA+20
CCARB    EQU   IGGCCA+24
CCACPL   EQU   IGGCCA+28
CCAACB   EQU   IGGCCA+32
CCAURAB  EQU   IGGCCA+40
CCASRCH  EQU   IGGCCA+44
CCASRID  EQU   CCASRCH
CCARAB0  EQU   IGGCCA+88
CCAR0FLG EQU   CCARAB0
CCAR0SEG EQU   CCARAB0+8
CCARAB1  EQU   IGGCCA+108
CCAR1FLG EQU   CCARAB1
CCAR1UR  EQU   CCAR1FLG
CCAR1SEG EQU   CCARAB1+8
CCARAB2  EQU   IGGCCA+128
CCAR2FLG EQU   CCARAB2
CCAR2UR  EQU   CCAR2FLG
CCAR2SEG EQU   CCARAB2+8
CCARAB3  EQU   IGGCCA+148
CCAR3FLG EQU   CCARAB3
CCAR3UR  EQU   CCAR3FLG
CCAR3SEG EQU   CCARAB3+8
CCARAB4  EQU   IGGCCA+168
CCAR4FLG EQU   CCARAB4
CCAR4UR  EQU   CCAR4FLG
CCAR4SEG EQU   CCARAB4+8
CCARAB5  EQU   IGGCCA+188
CCAR5FLG EQU   CCARAB5
CCAR5UR  EQU   CCAR5FLG
CCAR5REC EQU   CCARAB5+4
CCAR5SEG EQU   CCARAB5+8
CCATIQRN EQU   IGGCCA+212
CCADESA  EQU   IGGCCA+224
CCAEXTDE EQU   CCADESA+4
CCAEXTAD EQU   CCAEXTDE+2
CCAEQDQ  EQU   IGGCCA+280
CCAEDOPT EQU   CCAEQDQ+2
CCAMSSPL EQU   IGGCCA+300
CCAMNSPL EQU   CCAMSSPL+9
CCACMS   EQU   IGGCCA+316
CCACMSWA EQU   CCACMS
CCACPE5  EQU   IGGCCA+324
CCACPE6  EQU   IGGCCA+340
CCACPE61 EQU   IGGCCA+344
CCACPE7  EQU   IGGCCA+348
CCAFLPT  EQU   IGGCCA+364
CCADICT  EQU   IGGCCA+372
CCAXCPL  EQU   IGGCCA+376
CCAMCPL  EQU   CCAXCPL
CCARABB  EQU   IGGCCA+380
CCARABF  EQU   IGGCCA+384
CCARABL  EQU   IGGCCA+388
CCALREL  EQU   IGGCCA+396
CCASN    EQU   IGGCCA+398
CCARBA   EQU   IGGCCA+448
CCACRAVL EQU   CCARBA
CCACRADT EQU   CCARBA+6
CCATLNG  EQU   IGGCCA+468
CCAIDPT3 EQU   IGGCCA+480
CCAGRGC  EQU   IGGCCA+493
CCAGRHI  EQU   IGGCCA+494
CCASSEQ  EQU   CCAGRHI
CCAFLG7  EQU   IGGCCA+552
CCAFLG8  EQU   IGGCCA+553
CCAFLG9  EQU   IGGCCA+554
CCASMFLG EQU   IGGCCA+562
CCASMFG1 EQU   CCASMFLG
CCASMFUC EQU   CCASMFG1
CCASMFSR EQU   CCASMFG1
CCABMINP EQU   IGGCCA+684
CCABMFLG EQU   CCABMINP+6
CCABMOUT EQU   IGGCCA+692
CCABMOFG EQU   CCABMOUT+4
CCATEMPS EQU   IGGCCA+744
CCAMNCAT EQU   IGGCCA+784
CCAMNAT  EQU   CCAMNCAT
MNATTOP  EQU   CCAMNAT
MNATFULL EQU   MNATTOP
MNATFLGS EQU   CCAMNAT+240
CCAMNLEN EQU   CCAMNCAT+249
CCAMNADR EQU   CCAMNCAT+252
CCAARFWA EQU   IGGCCA+1040
ARFGMLEN EQU   CCAARFWA
CCARVFG1 EQU   IGGCCA+1056
CCAREGS  EQU   IGGCCA+1060
CCABZSAV EQU   IGGCCA+1408
CCACUMPL EQU   IGGCCA+1412
CCARALSA EQU   IGGCCA+1440
CCAFLG10 EQU   IGGCCA+1444
CCASMFP  EQU   IGGCCA+1480
CCAPROBX EQU   IGGCCA+1484
CCAERCDX EQU   CCAPROBX+2
CCADGDGA EQU   IGGCCA+1488
CTGPL    EQU   0
CTGOPTN1 EQU   CTGPL
CTGOPTN2 EQU   CTGPL+1
CTGEXT   EQU   CTGOPTN2
CTGERASE EQU   CTGOPTN2
CTGSMF   EQU   CTGERASE
CTGREL   EQU   CTGSMF
CTGPURG  EQU   CTGOPTN2
CTGVMNT  EQU   CTGPURG
CTGSCR   EQU   CTGOPTN2
CTGOPTN3 EQU   CTGPL+2
CTGOPTN4 EQU   CTGPL+3
CTGENT   EQU   CTGPL+4
CTGFVT   EQU   CTGENT
CTGCAT   EQU   CTGPL+8
CTGCVOL  EQU   CTGCAT
CTGWKA   EQU   CTGPL+12
CTGDSORG EQU   CTGPL+16
CTGTYPE  EQU   CTGPL+18
CTGNOFLD EQU   CTGPL+19
CTGDDNM  EQU   CTGPL+20
CTGNEWNM EQU   CTGDDNM
CTGFBFLG EQU   CTGNEWNM+2
CTGJSCB  EQU   CTGPL+24
CTGFIELD EQU   CTGPL+28
CTGFL    EQU   0
CTGFLDNO EQU   CTGFL
CTGFLDCD EQU   CTGFL+1
CTGFLDGC EQU   CTGFL+2
CTGFLDRE EQU   CTGFL+3
CTGFLDWA EQU   CTGFL+4
CTGFLDNM EQU   CTGFL+8
CTGFLCHN EQU   CTGFL+12
CTGFLDAT EQU   CTGFL+16
CTGFLNG  EQU   CTGFLDAT
CTGFLPT  EQU   CTGFLDAT+4
USERWKA  EQU   0
WKALEN1  EQU   USERWKA
WKALEN2  EQU   USERWKA+2
WKA      EQU   USERWKA+4
ENTNAMES EQU   WKA
ENTNAMET EQU   ENTNAMES
ENTNAMEV EQU   ENTNAMES+1
DICTENT  EQU   0
DICTFLGS EQU   DICTENT
DIC2ENT  EQU   0
DIC2FLGS EQU   DIC2ENT
CCARAB   EQU   0
CCARABFL EQU   CCARAB
CCACPE1  EQU   CCARAB+4
CCACPE2  EQU   CCARAB+8
CATGOPT  EQU   0
CATGOCI  EQU   CATGOPT
CATGOFLG EQU   CATGOCI
CATGOGC1 EQU   CATGOPT+3
CATGOSEQ EQU   CATGOPT+4
CATRCD   EQU   0
RCDCINO  EQU   CATRCD+1
RCDID    EQU   CATRCD+44
NREPLF   EQU   CATRCD+48
REPCNTRL EQU   0
EXTRCDPT EQU   REPCNTRL
EXTGOCI  EQU   EXTRCDPT
VARFIELD EQU   0
CNTRLINF EQU   0
LENFIX   EQU   CNTRLINF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDATE  EQU   CVTMAP+56
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTCBSP  EQU   CVTMAP+256
CVTPURG  EQU   CVTMAP+260
CVTAMFF  EQU   CVTMAP+264
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBWORDS EQU   0
TCBPTR   EQU   TCBWORDS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBUAPTR EQU   ACBCOMN+64
AMCBS    EQU   0
CBSCMP   EQU   AMCBS+16
CBSVSRT  EQU   AMCBS+32
IGGCAXWA EQU   0
CAXFLGS  EQU   IGGCAXWA+8
CAXFLG2  EQU   IGGCAXWA+9
CAXFLG3  EQU   IGGCAXWA+10
CAXCCR   EQU   IGGCAXWA+32
CAXCNAM  EQU   IGGCAXWA+52
CAXOPLST EQU   IGGCAXWA+96
COPTS    EQU   CAXOPLST
CTGFV    EQU   0
CTGFVPRO EQU   CTGFV+1
CTGFVSPC EQU   CTGFV+52
CTGFVAMD EQU   CTGFV+56
CTGFVLMT EQU   CTGFV+72
CTGFVGAT EQU   CTGFV+76
CTGWA    EQU   0
CTGWAVL  EQU   CTGWA
CTGVL    EQU   0
CTGVLX   EQU   0
CTGCV    EQU   0
CTGCVDSN EQU   CTGCV+6
MWA      EQU   0
VLST     EQU   MWA+2
CVOLIND  EQU   MWA+252
ASGO     EQU   1
PASSGO   EQU   1
PASSWORD EQU   PASSGO
USERAREC EQU   PASSGO+50
USERLIST EQU   0
LTENTRY  EQU   USERLIST+2
LTRETCOD EQU   LTENTRY
SPACEPRM EQU   0
SPCOPTNS EQU   SPACEPRM+6
CTGDSATR EQU   0
CTGATR1  EQU   CTGDSATR
CTGATR2  EQU   CTGDSATR+1
RGATTRFL EQU   0
RGATTR1  EQU   RGATTRFL
RGATTSG1 EQU   RGATTRFL+1
ENTRYNAM EQU   0
DEVCHARS EQU   0
RTDEVUCB EQU   DEVCHARS
RTBOKAB  EQU   DEVCHARS+14
RTDVFLGS EQU   DEVCHARS+17
CTVOLRCD EQU   1
CTVDVCHR EQU   CTVOLRCD+52
CTVDVFLG EQU   CTVDVCHR+17
CTVSPHDR EQU   0
CTVSPFLG EQU   CTVSPHDR+15
CTVDESGP EQU   0
CTVEXTST EQU   CTVDESGP+4
CTVSTDES EQU   CTVEXTST
CTVDSGRP EQU   0
CTVDSDFL EQU   CTVDSGRP+6
CTVDSDIR EQU   CTVDSGRP+9
CTVGOPT  EQU   0
CTVGOCI  EQU   CTVGOPT
CTVGOGCI EQU   CTVGOPT+3
CTVRCTRL EQU   0
CTVEXRPT EQU   CTVRCTRL
CTVSPMAP EQU   0
CTVSMSN  EQU   CTVSPMAP
CTVDSPAC EQU   0
CTVDSPSN EQU   CTVDSPAC
CTVDSPFG EQU   CTVDSPAC+15
CTVSPEXT EQU   CTVDSPAC+21
CTVEXTNT EQU   CTVSPEXT
CTVDIR   EQU   0
CTVDSDSN EQU   CTVDIR
CTVDEXTN EQU   0
GVO      EQU   0
CMFLVLFL EQU   GVO+12
CMFLITEX EQU   GVO+34
CMFOVERL EQU   GVO+37
CMFOVLAY EQU   0
CMFXECTS EQU   0
CMFXEXST EQU   CMFXECTS+2
CMFXSTA  EQU   CMFXEXST
CMFXEXED EQU   CMFXECTS+6
CMFXEDA  EQU   CMFXEXED
IDAVVOLL EQU   0
@NM00118 EQU   IDAVVOLL
VVOLLERR EQU   IDAVVOLL+12
VVOLLENT EQU   IDAVVOLL+36
@NM00121 EQU   VVOLLENT+4
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
DSPTBL   EQU   0
CMSWA    EQU   0
CMWFLAGS EQU   CMSWA
CMCISUSE EQU   CMSWA+2
CMWRKATR EQU   CMCISUSE
CMCPLFVT EQU   CMSWA+20
CMNRMEXT EQU   CMSWA+24
CMLDTFPL EQU   CMNRMEXT
CMSSEXTS EQU   CMSWA+28
CMHDTFPL EQU   CMSSEXTS
CMCANVOL EQU   CMSWA+32
CMHIXFPL EQU   CMCANVOL
CMRNGCTR EQU   CMSWA+40
CMVOLCTR EQU   CMSWA+42
CMSDFSPC EQU   CMSWA+48
CMVLLIST EQU   CMSWA+64
CMVLRTCD EQU   CMVLLIST+2
CMSPCATR EQU   CMSWA+76
CMWASTOR EQU   CMSWA+132
CMPOT    EQU   CMWASTOR
CMDCONV  EQU   CMPOT
CMIXFANO EQU   CMDCONV
CMPOTX   EQU   CMWASTOR+4
CMPBI    EQU   CMPOTX
CMIXFANS EQU   CMPBI
CMWABYTB EQU   CMSWA+140
CMPBIX   EQU   CMWABYTB
CMNEST   EQU   CMPBIX
CMFANT   EQU   CMNEST
CMSPCQTY EQU   CMFANT
CMWGENAM EQU   CMSWA+144
CMWDATE  EQU   CMWGENAM+12
CMWTIME  EQU   CMWGENAM+17
DCWPLSPS EQU   CMSWA+200
DCWPLSPL EQU   DCWPLSPS
DCWPLBFS EQU   CMSWA+232
DCWPLBFL EQU   DCWPLBFS
DCWPLEDS EQU   CMSWA+260
DCWPLEDL EQU   DCWPLEDS
DCWPLARS EQU   CMSWA+288
DCWPLARL EQU   DCWPLARS
DCWPLCDS EQU   CMSWA+316
DCWPLCDL EQU   DCWPLCDS
CMUCATCI EQU   CMSWA+410
DELWKA   EQU   0
@NM00134 EQU   DELWKA+16
DELCODE5 EQU   @NM00134
DELSGRRN EQU   DELWKA+17
DELI     EQU   DELSGRRN
DELSPFLG EQU   DELI
DELVRRN  EQU   DELWKA+20
DELVCRN  EQU   DELWKA+22
DELXTNWA EQU   DELWKA+24
DELXLOC  EQU   DELXTNWA
DELXLEN  EQU   DELXTNWA+4
DELERRSX EQU   DELWKA+32
DELERRS  EQU   DELERRSX
DELEXTWA EQU   DELWKA+52
DELCPL   EQU   DELEXTWA
@NM00137 EQU   DELEXTWA+28
DELFPLR  EQU   DELEXTWA+32
@NM00138 EQU   DELEXTWA+48
DELNMR   EQU   DELEXTWA+56
DELFPLT  EQU   DELEXTWA+64
@NM00139 EQU   DELEXTWA+80
DELNMT   EQU   DELEXTWA+88
@NM00140 EQU   DELEXTWA+112
DELNMT2  EQU   DELEXTWA+120
DELDIV   EQU   DELWKA+188
DELASCWA EQU   DELDIV
DELASSO  EQU   DELASCWA+4
DELCASWA EQU   DELDIV+16
DELCASSO EQU   DELCASWA+4
DELGASWA EQU   DELDIV+32
DELGASSO EQU   DELGASWA+4
DELRASWA EQU   DELDIV+48
DELRASSO EQU   DELRASWA+4
DELXASWA EQU   DELDIV+72
DELXASSO EQU   DELXASWA+4
DELVGOWA EQU   DELDIV+80
DELSHWA  EQU   DELDIV+137
DELDSDWA EQU   DELDIV+226
DELDIRCT EQU   DELDSDWA+4
DELSCRWA EQU   DELWKA+424
DELSCRTH EQU   DELSCRWA
DELSVOL  EQU   DELSCRWA+16
DELVOLL  EQU   DELWKA+454
DELTIOPT EQU   DELWKA+504
DELOPNPL EQU   DELWKA+508
DELOPOPT EQU   DELOPNPL
DELERASE EQU   0
DELPASSW EQU   DELERASE+156
DELENQ   EQU   0
ENQPROPR EQU   DELENQ
ENQOPT1  EQU   ENQPROPR
ENQOPT2  EQU   ENQPROPR+2
RNAME    EQU   DELENQ+12
CUMPLWA  EQU   0
CUMPL    EQU   CUMPLWA
CUMIN    EQU   CUMPL
CUMOUT   EQU   CUMPL+1
CUMWA    EQU   CUMPLWA+8
CUMFLAG  EQU   CUMWA
CUMWASS2 EQU   CUMWA+48
CUMWASS  EQU   CUMWASS2+2
CUMWTYP  EQU   CUMWASS
DELXWA   EQU   0
DELXCPL  EQU   DELXWA
DELXFPL  EQU   DELXWA+36
DELNM1   EQU   DELXWA+60
DELXFPL2 EQU   DELXWA+68
DELNM2   EQU   DELXWA+92
@NM00156 EQU   DELXWA+100
DELTST   EQU   @NM00156
DLXASCWA EQU   DELXWA+104
DLXALNG  EQU   DLXASCWA
DELXASGO EQU   DLXASCWA+4
DLASCI   EQU   DELXASGO+1
DELXASGF EQU   DLXASCWA+8
DLASCIF  EQU   DELXASGF+1
DELXASGB EQU   DLXASCWA+12
DLASCIB  EQU   DELXASGB+1
GDGWKA   EQU   0
GDGLEN   EQU   GDGWKA
GDGGOPS  EQU   GDGWKA+4
GDGNVCI  EQU   GDGGOPS+1
GDGCPLAD EQU   GDGWKA+1024
GDGCPL   EQU   GDGWKA+1028
GDG1     EQU   GDGWKA+1056
GDGMS    EQU   GDGWKA+1058
GDGCI    EQU   GDGWKA+1062
GDGNOCI  EQU   GDGWKA+1066
GDGMCPL  EQU   GDGWKA+1068
GDGFPL1  EQU   GDGWKA+1104
GDGFLDT1 EQU   GDGWKA+1120
GDGFPL2  EQU   GDGWKA+1128
GDGTYPE  EQU   GDGWKA+1151
BUFSIZE  EQU   0
CATRECRD EQU   0
CATSN    EQU   0
CI       EQU   0
CTGVLDSP EQU   0
DATEFLD  EQU   0
EXCPNAME EQU   0
FIELDNM  EQU   0
LRECL    EQU   0
OWNIDFLD EQU   0
PASSSTRT EQU   0
TNAM     EQU   0
@NM00035 EQU   CTGDDNM
CTGPROB  EQU   @NM00035
CTGREASN EQU   CTGPROB+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
MCATDSTR EQU   CVTAMFF
CVTAMF1  EQU   MCATDSTR
CTGRBASE EQU   NREPLF+1
CNAME    EQU   CTGRBASE
CEXP     EQU   CTGRBASE+55
CATTR    EQU   CTGRBASE+58
CATTR1   EQU   CATTR
CATTR2   EQU   CATTR+1
COPEN    EQU   CTGRBASE+60
CSPACPRM EQU   CTGRBASE+65
@NM00097 EQU   CATTR1
CCATTR   EQU   @NM00097
@NM00098 EQU   CCATTR
@NM00100 EQU   CATTR1
CRGATTR  EQU   @NM00100
CUPG     EQU   CRGATTR
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00101 EQU   CRGATTR
CUPD     EQU   CUPG
CPGSP    EQU   @NM00098
@NM00099 EQU   @NM00098
CEXT     EQU   CTGRBASE+86
CDOSUINF EQU   CTGRBASE+84
CLRECL   EQU   CTGRBASE+80
CHIA     EQU   CTGRBASE+76
CHIU     EQU   CTGRBASE+72
CSORT    EQU   CSPACPRM+6
CSEC     EQU   CSPACPRM+3
CPRIM    EQU   CSPACPRM
CBUF     EQU   CTGRBASE+61
@NM00096 EQU   COPEN
COPENDS  EQU   COPEN
CNUS     EQU   CATTR2
@NM00095 EQU   CATTR2
CATTRSSH EQU   CATTR2
CATTRISH EQU   CATTR2
CTRKOV   EQU   CATTR1
CTEMP    EQU   CATTR1
CINHIB   EQU   CATTR1
CRECOV   EQU   CATTR1
CERASE   EQU   CATTR1
CREUSE   EQU   CATTR1
CUNIQ    EQU   CATTR1
CSP      EQU   CATTR1
CCRE     EQU   CTGRBASE+52
COWNID   EQU   CTGRBASE+44
@NM00085 EQU   MCATDSTR+1
@NM00084 EQU   CVTAMF1
AMF1NONX EQU   CVTAMF1
AMF1OPEN EQU   CVTAMF1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CTGREAS2 EQU   CTGREASN+1
CTGREAS1 EQU   CTGREASN
CTGMODID EQU   CTGPROB
GDGMODCI EQU   GDGWKA+1148
GDGFLDT2 EQU   GDGWKA+1144
GDGFIELD EQU   GDGWKA+1096
GDG2     EQU   GDGWKA+1057
GDGTYP   EQU   GDGGOPS
GDGXLEN  EQU   GDGWKA+2
DELXEND  EQU   DELXWA+124
DELDEL   EQU   DELXWA+120
DLASTYPB EQU   DELXASGB
DLASTYPF EQU   DELXASGF
DLASTYPE EQU   DELXASGO
DLXARLNG EQU   DLXASCWA+2
@NM00157 EQU   @NM00156+1
@NM00155 EQU   DELXWA+84
@NM00154 EQU   DELXWA+52
@NM00153 EQU   DELXWA+28
CUMRC    EQU   CUMWA+148
@NM00152 EQU   CUMWA+146
CUMFMWA  EQU   CUMWA+58
CUMWCI2  EQU   CUMWASS2+7
CUMWTYP2 EQU   CUMWASS2+6
CUMWCI   EQU   CUMWASS+1
CUMTYPE  EQU   CUMWTYP
CUMWREL  EQU   CUMWASS2
CUMFN2   EQU   CUMWA+40
CUMFN1   EQU   CUMWA+32
CUMDY    EQU   CUMWA+29
@NM00151 EQU   CUMWA+28
CUMSRID  EQU   CUMWA+25
@NM00150 EQU   CUMWA+24
CUMRABD  EQU   CUMWA+20
CUMRAB2  EQU   CUMWA+16
CUMRAB1  EQU   CUMWA+12
CUMRABB  EQU   CUMWA+8
CUMURAB  EQU   CUMWA+4
CUMBCI   EQU   CUMWA+1
@NM00149 EQU   CUMFLAG
CUMEXIT  EQU   CUMFLAG
CUMICI   EQU   CUMPL+5
CUMDCI   EQU   CUMPL+2
@NM00148 EQU   CUMOUT
CUMNE    EQU   CUMOUT
CUMDUP   EQU   CUMOUT
@NM00147 EQU   CUMIN
CUMFUNC  EQU   CUMIN
CUMNRG   EQU   CUMIN
CUMFDEL  EQU   CUMIN
RNAMEID  EQU   RNAME+7
RNAMECA  EQU   RNAME+3
RNAMECI  EQU   RNAME
ENQRNADR EQU   ENQPROPR+8
ENQQNADR EQU   ENQPROPR+4
ENQRETC  EQU   ENQPROPR+3
@NM00146 EQU   ENQOPT2
ENQSHR   EQU   ENQOPT2
ENQRLEN  EQU   ENQPROPR+1
ENQDIR   EQU   ENQOPT1
@NM00145 EQU   ENQOPT1
ENQNEW   EQU   ENQOPT1
ENQEND   EQU   ENQOPT1
DELPASWD EQU   DELPASSW+1
DELPASLN EQU   DELPASSW
DELRCPTR EQU   DELERASE+152
DELRPL   EQU   DELERASE+76
DELACB   EQU   DELERASE
F        EQU   DELWKA+514
@NM00144 EQU   DELWKA+512
DELACBPT EQU   DELOPNPL+1
@NM00143 EQU   DELOPOPT
DELOPEND EQU   DELOPOPT
DELHECIN EQU   DELTIOPT+1
@NM00142 EQU   DELTIOPT
DELPROC  EQU   DELWKA+502
DELSVTET EQU   DELWKA+490
DELSVMTL EQU   DELVOLL
DELSRCD2 EQU   DELSVOL+13
DELSRCD1 EQU   DELSVOL+12
DELSVLID EQU   DELSVOL+6
DELSDEVT EQU   DELSVOL+2
DELSNVLS EQU   DELSVOL
DELSVLST EQU   DELSCRTH+12
DELSNUSE EQU   DELSCRTH+8
DELSDSNM EQU   DELSCRTH+4
DELSCRFL EQU   DELSCRTH
@NM00141 EQU   DELDSDWA+9
DELDRRN  EQU   DELDIRCT
DELDRLNG EQU   DELDSDWA+2
DELDLNG  EQU   DELDSDWA
DELDSGRP EQU   DELSHWA+4
DELSRLNG EQU   DELSHWA+2
DELSLNG  EQU   DELSHWA
DELVGO   EQU   DELVGOWA+6
DELTVRRN EQU   DELVGOWA+4
DELVRLNG EQU   DELVGOWA+2
DELVLNG  EQU   DELVGOWA
DELXCI   EQU   DELXASSO+1
DELXTYPE EQU   DELXASSO
DELXRLNG EQU   DELXASWA+2
DELXALNG EQU   DELXASWA
DELRCI   EQU   DELRASSO+1
DELRTYP  EQU   DELRASSO
DELRRLNG EQU   DELRASWA+2
DELRALNG EQU   DELRASWA
DELGCI   EQU   DELGASSO+1
DELGTYPE EQU   DELGASSO
DELGRLNG EQU   DELGASWA+2
DELGALNG EQU   DELGASWA
DELCCI   EQU   DELCASSO+1
DELCTYPE EQU   DELCASSO
DELCRLNG EQU   DELCASWA+2
DELCALNG EQU   DELCASWA
DELACI   EQU   DELASSO+1
DELATYPE EQU   DELASSO
DELARLNG EQU   DELASCWA+2
DELALNG  EQU   DELASCWA
DELR13SA EQU   DELWKA+184
DELUSINX EQU   DELWKA+183
DELNROBJ EQU   DELWKA+182
DELNGOBJ EQU   DELWKA+181
DELNCOBJ EQU   DELWKA+180
DELT2NM  EQU   DELNMT2
DELT2DT  EQU   @NM00140
DELFPLT2 EQU   DELEXTWA+96
DELT1NM  EQU   DELNMT
DELT1DT  EQU   @NM00139
DELFPLT1 EQU   DELFPLT
DELFL1NM EQU   DELNMR
DELFL1DT EQU   @NM00138
DELFPLDT EQU   DELFPLR
DELCPLFL EQU   @NM00137
DELCPLST EQU   DELCPL
DELRETCD EQU   DELERRS+3
DELREASN EQU   DELERRS+2
DELMODID EQU   DELERRS
@NM00136 EQU   DELXLEN+2
TSTSPDUU EQU   DELXLEN
DELTSFPL EQU   DELXLOC
TSTCNTRN EQU   DELVCRN
TSTRELSP EQU   DELVRRN
DELC     EQU   DELWKA+19
DELE     EQU   DELSGRRN+1
@NM00135 EQU   DELSPFLG
DELNONVS EQU   DELSPFLG
DELSPSCR EQU   DELCODE5
DELCODE4 EQU   @NM00134
DELCODE3 EQU   @NM00134
DELGNMR  EQU   @NM00134
DELCAT   EQU   @NM00134
DELKYRNG EQU   @NM00134
DELCODE2 EQU   @NM00134
DELCODE  EQU   @NM00134
DELERRIX EQU   DELWKA+15
DELRTYPE EQU   DELWKA+14
DELR3SAV EQU   DELWKA+13
DELNMOBJ EQU   DELWKA+12
@NM00133 EQU   DELWKA
CMBYTAU  EQU   CMSWA+500
CMBYTTRK EQU   CMSWA+496
CMSCTREC EQU   CMSWA+416
@NM00132 EQU   CMSWA+413
CMDEFACI EQU   CMUCATCI
CMBLPTKS EQU   CMSWA+408
CMSDSPTB EQU   CMSWA+344
@NM00131 EQU   DCWPLCDS+27
DCWPLCDV EQU   DCWPLCDS+24
DCWPLCDA EQU   DCWPLCDL+16
DCWPLCDH EQU   DCWPLCDL
DCWPLARV EQU   DCWPLARS+24
DCWPLARA EQU   DCWPLARL+16
DCWPLARH EQU   DCWPLARL
@NM00130 EQU   DCWPLEDS+27
DCWPLEDV EQU   DCWPLEDS+24
DCWPLEDA EQU   DCWPLEDL+16
DCWPLEDH EQU   DCWPLEDL
DCWPLBFV EQU   DCWPLBFS+24
DCWPLBFA EQU   DCWPLBFL+16
DCWPLBFH EQU   DCWPLBFL
@NM00129 EQU   DCWPLSPS+31
DCWPLSPV EQU   DCWPLSPS+24
DCWPLSPA EQU   DCWPLSPL+16
DCWPLSPH EQU   DCWPLSPL
DCWFPLPT EQU   CMSWA+196
DCWAREPT EQU   CMSWA+192
@NM00128 EQU   CMSWA+190
DCWIX    EQU   CMSWA+188
CMWPAD   EQU   CMWGENAM+35
CMWTIME2 EQU   CMWTIME+11
CMWDELM2 EQU   CMWTIME+9
CMWTIME1 EQU   CMWTIME+2
CMWDELM1 EQU   CMWTIME
CMWDAY   EQU   CMWDATE+2
CMWYEAR  EQU   CMWDATE
CMWFIXID EQU   CMWGENAM
CMNCILL  EQU   CMSPCQTY
CMNCITL  EQU   CMIXFANS
CMWT     EQU   CMIXFANO
CMDEFSWA EQU   CMSWA+128
CMSRCCOR EQU   CMSWA+124
CMEXTLST EQU   CMSWA+120
WORKPROC EQU   CMSWA+118
@NM00127 EQU   CMSWA+116
CMFPLIDX EQU   CMSWA+112
CMCNVNO  EQU   CMSWA+110
CMCNVLEN EQU   CMSWA+108
CMTRKCYL EQU   CMSPCATR+12
CMTRKPCA EQU   CMSPCATR+10
CMBLKTRK EQU   CMSPCATR+8
CMSWADTY EQU   CMSPCATR+4
CMPHYBLK EQU   CMSPCATR
CMTOTVOL EQU   CMSWA+74
CMVLVOL  EQU   CMVLLIST+4
CMVLRT2  EQU   CMVLRTCD+1
CMVLRT1  EQU   CMVLRTCD
CMVLLTLN EQU   CMVLLIST
@NM00126 EQU   CMSWA+62
CMSCRADT EQU   CMSWA+58
CMSCRAVI EQU   CMSWA+52
CMSDEFCI EQU   CMSDFSPC+1
CMSWAFLG EQU   CMSDFSPC
CMSPCFVT EQU   CMSWA+44
CMRMVVOL EQU   CMVOLCTR
CMADDVOL EQU   CMRNGCTR
SPACINDC EQU   CMSWA+38
PROCESS  EQU   CMSWA+36
CMDTAFPL EQU   CMHIXFPL
CMTSTFPL EQU   CMHDTFPL
CMRNMLST EQU   CMLDTFPL
CMEXTFLS EQU   CMCPLFVT
CMASCFPL EQU   CMSWA+16
CMWFVTPT EQU   CMSWA+12
CMWACI   EQU   CMSWA+3
CMAMDRNG EQU   CMWRKATR
CMAMDORD EQU   CMWRKATR
CMAMDRPL EQU   CMWRKATR
CMAMDSDT EQU   CMWRKATR
CMAMDWCK EQU   CMWRKATR
CMAMDDST EQU   CMWRKATR
CMCISREQ EQU   CMSWA+1
CMPROC   EQU   CMWFLAGS
CMPROCM  EQU   CMWFLAGS
CMFGDLSC EQU   CMWFLAGS
DSNPHYBS EQU   DSPTBL+30
DSPHYBPT EQU   DSPTBL+22
DSMPHYBS EQU   DSPTBL+20
DSDEVCHA EQU   DSPTBL
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00125 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00124 EQU   RPLRBAR+3
@NM00123 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00122 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
VVOLLVSR EQU   VVOLLENT+6
VVOLLVFY EQU   @NM00121
VVOLLMNT EQU   @NM00121
VVOLLUCB EQU   VVOLLENT
VVOLLDEB EQU   IDAVVOLL+32
VVOLLBIB EQU   IDAVVOLL+28
VVOLLSFI EQU   IDAVVOLL+16
VVOLLCNT EQU   VVOLLERR+3
VVOLLSFC EQU   VVOLLERR+2
VVOLLFNC EQU   VVOLLERR+1
VVOLLPDC EQU   VVOLLERR
VVOLLACB EQU   IDAVVOLL+8
VVOLLTAB EQU   IDAVVOLL+4
VVOLLNBR EQU   IDAVVOLL+2
@NM00120 EQU   IDAVVOLL+1
VVOLLSWD EQU   @NM00118
VVOLLCAT EQU   @NM00118
VVOLLEOV EQU   @NM00118
VVOLLOPE EQU   @NM00118
VVOLLTIO EQU   @NM00118
VVOLLID  EQU   @NM00118
@NM00119 EQU   @NM00118
CMFXHRBA EQU   CMFXECTS+16
CMFXLRBA EQU   CMFXECTS+12
CMFXNOTT EQU   CMFXECTS+10
CMFXEDHH EQU   CMFXEDA+2
CMFXEDCC EQU   CMFXEDA
CMFXSTHH EQU   CMFXSTA+2
CMFXSTCC EQU   CMFXSTA
CMFXEXSS EQU   CMFXECTS
CMFLEND  EQU   CMFOVLAY+14
CMFLEXLN EQU   CMFOVLAY+12
CMFLHKLN EQU   CMFOVLAY+10
CMFLLKLN EQU   CMFOVLAY+8
CMFBYTAU EQU   CMFOVLAY+4
CMFBYTRK EQU   CMFOVLAY
CMFLSSDS EQU   GVO+35
@NM00117 EQU   CMFLITEX
CMFLNOPF EQU   CMFLITEX
CMFLSSDT EQU   CMFLITEX
CMFLNTKA EQU   GVO+32
CMFLNBTK EQU   GVO+30
CMFLPHYB EQU   GVO+26
CMFLHABA EQU   GVO+22
CMFLHUBA EQU   GVO+18
CMFLHKBA EQU   GVO+14
CMFLNOEX EQU   GVO+13
@NM00116 EQU   CMFLVLFL
CMFLVLOV EQU   CMFLVLFL
CMFLVLCN EQU   CMFLVLFL
CMFLVLPR EQU   CMFLVLFL
CMFLFLSQ EQU   GVO+10
CMFLVOL  EQU   GVO+4
CMFLDEVT EQU   GVO
CTVDRSTT EQU   CTVDEXTN+4
CTVDIRTS EQU   CTVDEXTN
CTVDSDCI EQU   CTVDIR+2
CTVDSDLF EQU   CTVDSDSN+1
CTVDSDCV EQU   CTVDSDSN
CTVEXTNN EQU   CTVEXTNT+2
CTVEXTT  EQU   CTVEXTNT
CTVSQT   EQU   CTVDSPAC+18
CTVSPOPT EQU   CTVDSPAC+17
CTVNOEXT EQU   CTVDSPAC+16
@NM00115 EQU   CTVDSPFG
CTVCATDF EQU   CTVDSPFG
@NM00114 EQU   CTVDSPFG
CTVAUTO  EQU   CTVDSPFG
CTVUNIQ  EQU   CTVDSPFG
CTVF1PTR EQU   CTVDSPAC+10
CTVF1TME EQU   CTVDSPAC+2
CTVDSPLF EQU   CTVDSPSN+1
CTVDSPCV EQU   CTVDSPSN
CTVSMBIT EQU   CTVSPMAP+4
CTVSMLEN EQU   CTVSPMAP+2
CTVSMLF  EQU   CTVSMSN+1
CTVSMCV  EQU   CTVSMSN
CTVEGOPT EQU   CTVRCTRL+6
CTVEXRCT EQU   CTVRCTRL+5
@NM00113 EQU   CTVEXRPT+3
CTVEXGCI EQU   CTVEXRPT
CTVGOSEQ EQU   CTVGOPT+4
CTVGOGC  EQU   CTVGOGCI
CTVGODEL EQU   CTVGOGCI
CTVGOEXT EQU   CTVGOGCI
CTVGODSP EQU   CTVGOCI+1
CTVGOFLG EQU   CTVGOCI
CTVSPSXC EQU   CTVDSDIR+2
CTVSPSSN EQU   CTVDSDIR
CTVDSXCT EQU   CTVDSGRP+7
@NM00112 EQU   CTVDSDFL
CTVDSDCN EQU   CTVDSDFL
CTVDSCID EQU   CTVDSGRP+3
CTVDSNEX EQU   CTVDSGRP+2
CTVDSGLF EQU   CTVDSGRP+1
CTVDSGCV EQU   CTVDSGRP
CTVMAP   EQU   CTVDESGP+14
CTVMAPLN EQU   CTVDESGP+12
CTVDESHD EQU   CTVDESGP+10
CTVDESTK EQU   CTVDESGP+8
CTVSTHH  EQU   CTVSTDES+2
CTVSTCC  EQU   CTVSTDES
CTVDESUU EQU   CTVDESGP+2
CTVDESLF EQU   CTVDESGP+1
CTVDESCV EQU   CTVDESGP
CTVSPSQT EQU   CTVSPHDR+20
CTVSPSPO EQU   CTVSPHDR+19
CTVSPNEX EQU   CTVSPHDR+18
CTVSPNDS EQU   CTVSPHDR+16
@NM00111 EQU   CTVSPFLG
CTVSPCDF EQU   CTVSPFLG
CTVSPMCT EQU   CTVSPFLG
CTVSPUCT EQU   CTVSPFLG
CTVSPAUT EQU   CTVSPFLG
CTVSPUNQ EQU   CTVSPFLG
CTVF1ADR EQU   CTVSPHDR+10
CTVF1TIM EQU   CTVSPHDR+2
CTVSPHLF EQU   CTVSPHDR+1
CTVSPHCV EQU   CTVSPHDR
@NM00110 EQU   CTVOLRCD+74
CTVSYEDS EQU   CTVOLRCD+73
CTVOLFLG EQU   CTVOLRCD+72
CTVTLFAC EQU   CTVDVCHR+18
CTVTLFLG EQU   CTVDVFLG
@NM00109 EQU   CTVDVFLG
CTVBONK  EQU   CTVDVCHR+16
CTVBKLB  EQU   CTVDVCHR+15
CTVBKNLB EQU   CTVDVCHR+14
CTVTRKSZ EQU   CTVDVCHR+12
CTVNOTRK EQU   CTVDVCHR+10
CTVNOCYL EQU   CTVDVCHR+8
CTVMXBLK EQU   CTVDVCHR+4
CTVDEVTY EQU   CTVDVCHR
CTVOLTIM EQU   CTVOLRCD+44
CTVOLNME EQU   CTVOLRCD
RTTOLFCT EQU   DEVCHARS+18
RTTOLFLG EQU   RTDVFLGS
@NM00108 EQU   RTDVFLGS
RTKABFLG EQU   RTDVFLGS
@NM00107 EQU   RTDVFLGS
RTBONK   EQU   DEVCHARS+16
RTBOKLB  EQU   RTBOKAB+1
RTBOKNLB EQU   RTBOKAB
RTTRKSIZ EQU   DEVCHARS+12
RTNOTRKS EQU   DEVCHARS+10
RTNOCYLS EQU   DEVCHARS+8
RTMXDBLK EQU   DEVCHARS+4
RTCLSTYP EQU   RTDEVUCB+2
@NM00106 EQU   RTDEVUCB
@NM00105 EQU   RGATTSG1
RGATSUP1 EQU   RGATTSG1
@NM00104 EQU   RGATTR1
RGATTUPG EQU   RGATTR1
CTGDSNUS EQU   CTGATR2
@NM00103 EQU   CTGATR2
CTGDSSSH EQU   CTGATR2
CTGDSISH EQU   CTGATR2
CTGTRKOV EQU   CTGATR1
CTGDSTPX EQU   CTGATR1
CTGDSINH EQU   CTGATR1
CTGDSREC EQU   CTGATR1
CTGDSERA EQU   CTGATR1
CTGDSREU EQU   CTGATR1
CTGDSUNQ EQU   CTGATR1
CTGDSSPD EQU   CTGATR1
SPCROUND EQU   SPCOPTNS
SPCALXRQ EQU   SPCOPTNS
SPCMXIGR EQU   SPCOPTNS
SPCCNTIG EQU   SPCOPTNS
@NM00102 EQU   SPCOPTNS
SPCRQTYP EQU   SPCOPTNS
SPCSECDQ EQU   SPACEPRM+3
SPCPRIMQ EQU   SPACEPRM
LTVOLSER EQU   LTENTRY+2
LTRETCD2 EQU   LTRETCOD+1
LTRETCD1 EQU   LTRETCOD
LTLENGTH EQU   USERLIST
USERAREV EQU   USERAREC+2
USERAREL EQU   USERAREC
USVRMDUL EQU   PASSGO+42
PASSATMP EQU   PASSGO+40
PASSPRMT EQU   PASSGO+32
READPW   EQU   PASSWORD+24
UPDATEPW EQU   PASSWORD+16
CIPW     EQU   PASSWORD+8
MASTERPW EQU   PASSWORD
ASCI     EQU   ASGO+1
ASTYPE   EQU   ASGO
CVLSER   EQU   MWA+259
TTR2     EQU   MWA+256
BIN0     EQU   CVOLIND+3
TTR1     EQU   CVOLIND
@NM00094 EQU   MWA+242
FSN      EQU   VLST+10
VOLSER   EQU   VLST+4
DEVTYP   EQU   VLST
VOLENTCT EQU   MWA
CTGCVCC  EQU   CTGCV+50
CTGCVDEV EQU   CTGCVDSN
CTGCVVOL EQU   CTGCV
CTGVLTTR EQU   CTGVLX+12
@NM00093 EQU   CTGVLX
CTGVLSEQ EQU   CTGVL+10
CTGVLDEV EQU   CTGVL+6
CTGVLVOL EQU   CTGVL
CTGWAGB  EQU   CTGWA+12
CTGWAGCT EQU   CTGWA+10
CTGWAUCT EQU   CTGWA+8
CTGWAVCT EQU   CTGWA+6
CTGWALV  EQU   CTGWA+4
CTGFVWKA EQU   CTGFV+88
CTGFVPWD EQU   CTGFV+84
CTGFVNAM EQU   CTGFV+80
CTGFVUPG EQU   CTGFVGAT
CTGFVEXT EQU   CTGFVLMT
CTGFVLRS EQU   CTGFV+68
CTGFVBUF EQU   CTGFV+64
CTGFVATR EQU   CTGFV+60
CTGFVFSN EQU   CTGFVAMD
CTGFVTTR EQU   CTGFVSPC
CTGFVDVT EQU   CTGFV+48
CTGFVRNG EQU   CTGFV+44
CTGFVVLT EQU   CTGFV+40
CTGFVCRE EQU   CTGFV+36
CTGFVEXP EQU   CTGFV+32
CTGFVOWN EQU   CTGFV+28
CTGFVSTY EQU   CTGFV+24
CTGFVENT EQU   CTGFV+20
CTGFVIND EQU   CTGFV+16
CTGFVVCH EQU   CTGFV+12
CTGFVICH EQU   CTGFV+8
CTGFVDCH EQU   CTGFV+4
@NM00092 EQU   CTGFV+3
CTGFVELM EQU   CTGFV+2
@NM00091 EQU   CTGFVPRO
CTGFVDRC EQU   CTGFVPRO
CTGFVNDC EQU   CTGFVPRO
CTGFVRVL EQU   CTGFVPRO
CTGFVAVL EQU   CTGFVPRO
CTGFVTYP EQU   CTGFV
CAXCRACB EQU   IGGCAXWA+112
CAXJDE   EQU   IGGCAXWA+108
CAXCCA   EQU   IGGCAXWA+104
CAXOPEWA EQU   IGGCAXWA+100
COPACB   EQU   CAXOPLST+1
@NM00090 EQU   COPTS
CENLST   EQU   COPTS
@NM00089 EQU   CAXCNAM+22
CAXRADDN EQU   CAXCNAM+14
CAXRATEP EQU   CAXCNAM+10
CAXRACTS EQU   CAXCNAM+6
CAXVOLID EQU   CAXCNAM
CAXRPL   EQU   IGGCAXWA+48
CAXRPLCT EQU   IGGCAXWA+46
CAXASID  EQU   IGGCAXWA+44
CAXFDCI  EQU   CAXCCR+9
CAXCDCI  EQU   CAXCCR+6
CAXNFCI  EQU   CAXCCR+3
CAXHACI  EQU   CAXCCR
CAXUCB   EQU   IGGCAXWA+28
CAXACB   EQU   IGGCAXWA+24
CAXDRWP  EQU   IGGCAXWA+20
CAXSCHWA EQU   IGGCAXWA+16
CAXATIOT EQU   IGGCAXWA+12
CAXACT   EQU   IGGCAXWA+11
@NM00088 EQU   CAXFLG3
CAXF3B6  EQU   CAXFLG3
CAXF3B5  EQU   CAXFLG3
@NM00087 EQU   CAXFLG3
CAXF3ANE EQU   CAXFLG3
CAXF3AT  EQU   CAXFLG3
CAXF2VTU EQU   CAXFLG2
CAXF2REC EQU   CAXFLG2
CAXF2CA  EQU   CAXFLG2
CAXF2CLR EQU   CAXFLG2
CAXF2IOE EQU   CAXFLG2
CAXF2NCR EQU   CAXFLG2
CAXF2NDD EQU   CAXFLG2
CAXF2DT  EQU   CAXFLG2
CAXSCR   EQU   CAXFLGS
CAXCMR   EQU   CAXFLGS
CAXMCT   EQU   CAXFLGS
CAXCMP   EQU   CAXFLGS
CAXEOV   EQU   CAXFLGS
CAXCLS   EQU   CAXFLGS
CAXOPN   EQU   CAXFLGS
CAXBLD   EQU   CAXFLGS
CAXCHN   EQU   IGGCAXWA+4
@NM00086 EQU   IGGCAXWA+1
CAXID    EQU   IGGCAXWA
CBSVPTR  EQU   CBSVSRT+4
CBSVUSE  EQU   CBSVSRT
CBSCRTCB EQU   AMCBS+28
CBSCRACA EQU   AMCBS+24
CBSCAXCN EQU   AMCBS+20
CBSMCUCB EQU   CBSCMP
CBSCBP   EQU   AMCBS+12
CBSACB   EQU   AMCBS+8
CBSMCSTA EQU   AMCBS+4
CBSSIZ   EQU   AMCBS+2
CBSID    EQU   AMCBS
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00083 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00082 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00081 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00080 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00079 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00078 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00077 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00076 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00075 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00074 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
@NM00049 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBRSV48 EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00048 EQU   TCB+296
TCBSCBQ  EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBRSV36 EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBRSV35 EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00047 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBRSV04 EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00046 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NEXTTCB  EQU   TCBWORDS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00045 EQU   CVTFIX+248
@NM00044 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
CNTVAR   EQU   CNTRLINF
VARINFO  EQU   VARFIELD+2
VARLEN   EQU   VARFIELD
REPGOPT  EQU   REPCNTRL+6
REPCNT   EQU   REPCNTRL+5
@NM00043 EQU   EXTRCDPT+3
NREPCV   EQU   CATRCD+47
RCDSIZ   EQU   CATRCD+45
@NM00042 EQU   CATRCD+26
RCDDICTS EQU   CATRCD+22
RCDRACTS EQU   CATRCD+18
RCDCRADT EQU   CATRCD+14
RCDCRACI EQU   CATRCD+11
RCDCRAVL EQU   CATRCD+5
RCDRELID EQU   CATRCD+4
RCDKEYTY EQU   CATRCD
CATGOGC  EQU   CATGOGC1
CATGODEL EQU   CATGOGC1
CATGOEXT EQU   CATGOGC1
CATGODSP EQU   CATGOCI+1
@NM00041 EQU   CATGOFLG
CCACPE4  EQU   CCARAB+16
CCACPE3  EQU   CCARAB+12
@NM00040 EQU   CCARAB+2
CCARABRI EQU   CCARAB+1
CCARBUPD EQU   CCARABFL
@NM00039 EQU   CCARABFL
CCARBPA  EQU   CCARABFL
CCARBWR  EQU   CCARABFL
CCARBU2  EQU   CCARABFL
CCARBU1  EQU   CCARABFL
CCARBUR  EQU   CCARABFL
DIC2GC   EQU   DIC2ENT+3
DIC2LC   EQU   DIC2ENT+2
DIC2ST   EQU   DIC2ENT+1
@NM00038 EQU   DIC2FLGS
DIC2UPGD EQU   DIC2FLGS
DIC2SCRA EQU   DIC2FLGS
DIC2MV   EQU   DIC2FLGS
DIC2FLG  EQU   DIC2FLGS
DIC2COMB EQU   DIC2FLGS
DIC2REP  EQU   DIC2FLGS
DIC2VAR  EQU   DIC2FLGS
DICTGC   EQU   DICTENT+3
DICTLC   EQU   DICTENT+2
DICTST   EQU   DICTENT+1
@NM00037 EQU   DICTFLGS
DICTUPGD EQU   DICTFLGS
DICTSCRA EQU   DICTFLGS
DICTMV   EQU   DICTFLGS
DICTFLG  EQU   DICTFLGS
DICTCOMB EQU   DICTFLGS
DICTREP  EQU   DICTFLGS
DICTVAR  EQU   DICTFLGS
CTGFLDTS EQU   CTGFLDRE
@NM00036 EQU   CTGFLDRE
CTGPSWD  EQU   CTGJSCB
@NM00034 EQU   CTGFBFLG
CTGNGDSN EQU   CTGFBFLG
CTGGDGB  EQU   CTGFBFLG
CTGKEEP  EQU   CTGFBFLG
CTGPAR   EQU   CTGFBFLG
CTGFDBK  EQU   CTGNEWNM
@NM00033 EQU   CTGDSORG
CTGOPTNS EQU   CTGDSORG
@NM00032 EQU   CTGOPTN4
CTGDOCAT EQU   CTGOPTN4
CTGLBASE EQU   CTGOPTN4
CTGAM0   EQU   CTGOPTN3
CTGNUM   EQU   CTGOPTN3
CTGSRH   EQU   CTGOPTN3
CTGGDGL  EQU   CTGOPTN3
CTGSUPLT EQU   CTGOPTN3
CTGFUNC  EQU   CTGOPTN3
@NM00031 EQU   CTGOPTN2
CTGOVRID EQU   CTGOPTN2
CTGDISC  EQU   CTGOPTN2
CTGGTNXT EQU   CTGOPTN2
CTGRCATN EQU   CTGVMNT
CTGGTALL EQU   CTGREL
CTGNSVS  EQU   CTGEXT
CTGGENLD EQU   CTGOPTN1
CTGCNAME EQU   CTGOPTN1
CTGNAME  EQU   CTGOPTN1
CTGREAD  EQU   CTGOPTN1
CTGUPD   EQU   CTGOPTN1
CTGCI    EQU   CTGOPTN1
CTGMAST  EQU   CTGOPTN1
CTGBYPSS EQU   CTGOPTN1
CCAEND   EQU   IGGCCA+1492
CCARETRX EQU   CCAERCDX+1
CCARESNX EQU   CCAERCDX
CCAMODDX EQU   CCAPROBX
CCASMFCD EQU   CCASMFP+3
CCASMFRC EQU   CCASMFP+2
CCASMFMD EQU   CCASMFP
CCAREWKA EQU   IGGCCA+1476
CCAVTS   EQU   IGGCCA+1468
CCARAVCA EQU   IGGCCA+1460
CCARANCA EQU   IGGCCA+1452
CCADICTS EQU   IGGCCA+1448
CCASUMTT EQU   IGGCCA+1445
@NM00030 EQU   CCAFLG10
CCAPRANX EQU   CCAFLG10
CCARARTC EQU   CCAFLG10
CCARAFEV EQU   CCAFLG10
CCACATAC EQU   CCAFLG10
CCAPDMW  EQU   CCAFLG10
CCAINCPL EQU   CCAFLG10
@NM00029 EQU   CCARALSA+2
CCACRABT EQU   CCARALSA
CCARAREC EQU   IGGCCA+1436
CCARARBA EQU   IGGCCA+1432
CCARARPL EQU   IGGCCA+1428
CCARAACB EQU   IGGCCA+1424
CCACRACI EQU   IGGCCA+1420
CCASBASE EQU   IGGCCA+1417
CCATNQCT EQU   IGGCCA+1416
CCADSPWA EQU   CCABZSAV
CCAMODNM EQU   CCAREGS+4
@NM00028 EQU   CCAREGS
@NM00027 EQU   IGGCCA+1057
@NM00026 EQU   CCARVFG1
RVESBOR  EQU   CCARVFG1
RVESBO   EQU   CCARVFG1
RVCMSFG  EQU   CCARVFG1
RVARFI   EQU   CCARVFG1
RVCCAV   EQU   CCARVFG1
ARFSBECH EQU   CCAARFWA+12
ARFSBSCH EQU   CCAARFWA+8
ARFGMADR EQU   CCAARFWA+4
ARFLEN   EQU   ARFGMLEN+1
ARFGMLP  EQU   ARFGMLEN
CCAMNLL  EQU   CCAMNCAT+248
MNATARG2 EQU   CCAMNAT+244
MNATARG1 EQU   CCAMNAT+241
MNATSCLS EQU   MNATFLGS
@NM00025 EQU   MNATFLGS
MNATVAL  EQU   MNATFLGS
@NM00024 EQU   CCAMNAT+1
@NM00023 EQU   MNATTOP
CCABMRB2 EQU   IGGCCA+740
CCABMRB1 EQU   IGGCCA+736
CCABMWK4 EQU   IGGCCA+732
CCABMWK3 EQU   IGGCCA+728
CCABMWK2 EQU   IGGCCA+724
CCABMWK1 EQU   IGGCCA+720
CCABMSTR EQU   IGGCCA+718
CCABMBYT EQU   IGGCCA+716
CCABMBTL EQU   IGGCCA+714
CCABMBT1 EQU   IGGCCA+712
CCABMEND EQU   IGGCCA+708
CCABMPTR EQU   IGGCCA+704
CCABMGOP EQU   IGGCCA+700
CCABMPAD EQU   IGGCCA+699
@NM00022 EQU   IGGCCA+697
CCABMOST EQU   CCABMOFG
CCABMOTR EQU   CCABMOUT+2
CCABMONN EQU   CCABMOUT
@NM00021 EQU   CCABMINP+7
CCABMLST EQU   CCABMFLG
CCABMCCK EQU   CCABMFLG
CCABMSET EQU   CCABMFLG
CCABMCHK EQU   CCABMFLG
CCABMST  EQU   CCABMFLG
CCABMMIN EQU   CCABMINP+4
CCABMLIM EQU   CCABMINP+2
CCABMTRK EQU   CCABMINP
CCAR14S  EQU   IGGCCA+680
CCAXLATE EQU   IGGCCA+640
CCADEL2  EQU   IGGCCA+637
CCADEL1  EQU   IGGCCA+634
CCAVAR1  EQU   IGGCCA+614
CCAVAR   EQU   IGGCCA+594
CCADELN  EQU   IGGCCA+592
CCAVARPT EQU   IGGCCA+588
CCARBASE EQU   IGGCCA+584
CCARRAB  EQU   IGGCCA+580
CCAVARLN EQU   IGGCCA+578
CCACI3   EQU   IGGCCA+575
CCACI2   EQU   IGGCCA+572
CCACI1   EQU   IGGCCA+569
CCACHAIN EQU   IGGCCA+566
CCASMFLN EQU   IGGCCA+564
CCASMFG2 EQU   CCASMFLG+1
@NM00020 EQU   CCASMFG1
CCASMFAL EQU   CCASMFSR
CCASMFDF EQU   CCASMFUC
CCASMFCT EQU   IGGCCA+560
CCASMFRD EQU   IGGCCA+556
CCANORBA EQU   IGGCCA+555
CCARESUM EQU   CCAFLG9
CCARAICI EQU   CCAFLG9
CCARAACT EQU   CCAFLG9
CCAUCRA  EQU   CCAFLG9
CCARACR  EQU   CCAFLG9
CCARALRD EQU   CCAFLG9
CCARAEOV EQU   CCAFLG9
CCARABYC EQU   CCAFLG9
CCAAUCAT EQU   CCAFLG8
CCALEOD  EQU   CCAFLG8
CCAVRIND EQU   CCAFLG8
CCALPIND EQU   CCAFLG8
CCASCICK EQU   CCAFLG8
CCASCRA  EQU   CCAFLG8
CCAVBUFI EQU   CCAFLG8
CCADSRCL EQU   CCAFLG8
CCACRABU EQU   CCAFLG7
CCAFEOV  EQU   CCAFLG7
CCAROREQ EQU   CCAFLG7
CCAONCE  EQU   CCAFLG7
CCASMFBR EQU   CCAFLG7
CCASMFA  EQU   CCAFLG7
CCASMFEX EQU   CCAFLG7
CCALSP   EQU   CCAFLG7
CCALCPL  EQU   IGGCCA+548
CCASMFPT EQU   IGGCCA+544
CCAALPTR EQU   IGGCCA+540
CCAILNG2 EQU   IGGCCA+536
CCAILNG3 EQU   IGGCCA+532
CCASDWAP EQU   IGGCCA+528
CCACWAP  EQU   IGGCCA+524
CCACDTCT EQU   IGGCCA+522
CCADTCT  EQU   IGGCCA+520
CCACDTA  EQU   IGGCCA+516
CCADTA   EQU   IGGCCA+512
CCASVCI1 EQU   IGGCCA+509
CCASVCI  EQU   IGGCCA+506
CCADISP  EQU   IGGCCA+504
CCAREPCT EQU   IGGCCA+502
CCADIFF  EQU   IGGCCA+500
CCADLEN  EQU   IGGCCA+498
CCAIXTPL EQU   IGGCCA+496
CCAGRHI1 EQU   CCASSEQ
CCARCDID EQU   CCAGRGC
@NM00019 EQU   IGGCCA+492
CCANEFV  EQU   IGGCCA+491
CCAGVEXT EQU   IGGCCA+488
CCANEVV  EQU   IGGCCA+486
CCAGVCT  EQU   IGGCCA+484
CCARABSM EQU   CCAIDPT3
CCAIDPT2 EQU   IGGCCA+476
CCASMFIX EQU   IGGCCA+474
CCACNIX  EQU   IGGCCA+472
CCARBAL  EQU   IGGCCA+470
CCATLEN  EQU   CCATLNG
CCARBA2  EQU   CCARBA+16
CCARBA1  EQU   CCARBA+12
CCATT    EQU   CCARBA+10
CCACCHH2 EQU   CCACRADT
CCACCHH1 EQU   CCACRAVL+2
CCASS    EQU   CCACRAVL
CCATEST  EQU   IGGCCA+444
CCATNO   EQU   IGGCCA+442
CCATREL  EQU   IGGCCA+410
CCATNUM  EQU   IGGCCA+408
CCATNREL EQU   IGGCCA+406
CCAIXREL EQU   IGGCCA+404
CCAIXFPL EQU   IGGCCA+402
@NM00018 EQU   IGGCCA+400
CCASN1   EQU   CCASN
CCALREL1 EQU   CCALREL
CCAGC    EQU   IGGCCA+395
CCACBASE EQU   IGGCCA+392
CCARABPT EQU   IGGCCA+368
CCATFLPT EQU   CCAFLPT
CCAILNG  EQU   IGGCCA+360
CCASL    EQU   IGGCCA+358
CCAGOPLN EQU   IGGCCA+356
CCACPE71 EQU   IGGCCA+352
CCAIDPT  EQU   CCACPE7
CCARABSE EQU   CCACPE61
CCACPE53 EQU   IGGCCA+336
CCACPE52 EQU   IGGCCA+332
CCACPE51 EQU   IGGCCA+328
CCALUME  EQU   IGGCCA+324
CCAEXCMS EQU   CCACMS+4
CCARPRM  EQU   IGGCCA+312
@NM00017 EQU   CCAMSSPL+10
@NM00016 EQU   CCAMSSPL+8
CCAMNPTR EQU   CCAMSSPL+4
CCAMNLLP EQU   CCAMSSPL
CCAMLRET EQU   IGGCCA+296
CCAEDUCB EQU   CCAEQDQ+12
CCAEDRNM EQU   CCAEQDQ+8
CCAEDQNM EQU   CCAEQDQ+4
CCAEDRCD EQU   CCAEQDQ+3
@NM00015 EQU   CCAEDOPT
CCAEDSHR EQU   CCAEDOPT
CCAEDRLN EQU   CCAEQDQ+1
CCAEDXFF EQU   CCAEQDQ
CCAASCI  EQU   IGGCCA+271
CCAASCIX EQU   IGGCCA+270
CCACRRP  EQU   IGGCCA+269
CCAASCIK EQU   IGGCCA+268
CCAEXTTH EQU   CCAEXTDE+6
CCAEXTHH EQU   CCAEXTAD+2
CCAEXTCC EQU   CCAEXTAD
CCAEXTSS EQU   CCAEXTDE
CCASSVOL EQU   CCADESA+2
CCAIXEXT EQU   CCADESA+1
CCANDEXT EQU   CCADESA
CCARPL1  EQU   IGGCCA+220
CCAQLEN  EQU   IGGCCA+219
CCASC    EQU   IGGCCA+218
CCATQDB  EQU   CCATIQRN+2
CCATASID EQU   CCATIQRN
CCARPLT  EQU   IGGCCA+211
CCARPLX  EQU   IGGCCA+210
CCARPLF  EQU   IGGCCA+209
CCARPLK  EQU   IGGCCA+208
CCACPE45 EQU   CCAR5SEG+8
CCACPE35 EQU   CCAR5SEG+4
CCACPE25 EQU   CCAR5SEG
@NM00014 EQU   CCARAB5+2
CCAR5RPL EQU   CCARAB5+1
CCAR5UPD EQU   CCAR5FLG
@NM00013 EQU   CCAR5FLG
CCAR5PA  EQU   CCAR5FLG
CCAR5WR  EQU   CCAR5FLG
CCAR5U2  EQU   CCAR5FLG
CCAR5U1  EQU   CCAR5FLG
CCACPE44 EQU   CCAR4SEG+8
CCACPE34 EQU   CCAR4SEG+4
CCACPE24 EQU   CCAR4SEG
CCAR4REC EQU   CCARAB4+4
@NM00012 EQU   CCARAB4+2
CCAR4RPL EQU   CCARAB4+1
CCAR4UPD EQU   CCAR4FLG
@NM00011 EQU   CCAR4FLG
CCAR4PA  EQU   CCAR4FLG
CCAR4WR  EQU   CCAR4FLG
CCAR4U2  EQU   CCAR4FLG
CCAR4U1  EQU   CCAR4FLG
CCACPE43 EQU   CCAR3SEG+8
CCACPE33 EQU   CCAR3SEG+4
CCACPE23 EQU   CCAR3SEG
CCAR3REC EQU   CCARAB3+4
@NM00010 EQU   CCARAB3+2
CCAR3RPL EQU   CCARAB3+1
CCAR3UPD EQU   CCAR3FLG
@NM00009 EQU   CCAR3FLG
CCAR3PA  EQU   CCAR3FLG
CCAR3WR  EQU   CCAR3FLG
CCAR3U2  EQU   CCAR3FLG
CCAR3U1  EQU   CCAR3FLG
CCACPE42 EQU   CCAR2SEG+8
CCACPE32 EQU   CCAR2SEG+4
CCACPE22 EQU   CCAR2SEG
CCAR2REC EQU   CCARAB2+4
@NM00008 EQU   CCARAB2+2
CCAR2RPL EQU   CCARAB2+1
CCAR2UPD EQU   CCAR2FLG
@NM00007 EQU   CCAR2FLG
CCAR2PA  EQU   CCAR2FLG
CCAR2WR  EQU   CCAR2FLG
CCAR2U2  EQU   CCAR2FLG
CCAR2U1  EQU   CCAR2FLG
CCACPE41 EQU   CCAR1SEG+8
CCACPE31 EQU   CCAR1SEG+4
CCACPE21 EQU   CCAR1SEG
CCAR1REC EQU   CCARAB1+4
@NM00006 EQU   CCARAB1+2
CCAR1RPL EQU   CCARAB1+1
CCAR1UPD EQU   CCAR1FLG
@NM00005 EQU   CCAR1FLG
CCAR1PA  EQU   CCAR1FLG
CCAR1WR  EQU   CCAR1FLG
CCAR1U2  EQU   CCAR1FLG
CCAR1U1  EQU   CCAR1FLG
CCACPE40 EQU   CCAR0SEG+8
CCACPE30 EQU   CCAR0SEG+4
CCACPE20 EQU   CCAR0SEG
CCAR0REC EQU   CCARAB0+4
@NM00004 EQU   CCARAB0+2
CCAR0RPL EQU   CCARAB0+1
CCAR0UPD EQU   CCAR0FLG
@NM00003 EQU   CCAR0FLG
CCAR0PA  EQU   CCAR0FLG
CCAR0WR  EQU   CCAR0FLG
CCAR0U2  EQU   CCAR0FLG
CCAR0U1  EQU   CCAR0FLG
CCAR0UR  EQU   CCAR0FLG
@NM00002 EQU   CCASRCH+3
CCASRCIN EQU   CCASRID
CCANPCCB EQU   IGGCCA+36
CCADPL   EQU   CCARB
CCALBCYL EQU   CCATCB
CCAMOD   EQU   CCAFLG6
CCASUPFD EQU   CCAFLG6
CCAINIT  EQU   CCAFLG6
CCAMNOSP EQU   CCAFLG6
CCADELP  EQU   CCAFLG6
CCAMCODR EQU   CCAFLG6
CCATEX2  EQU   CCAFLG5
CCATEX1  EQU   CCAFLG5
CCATEX   EQU   CCAFLG5
CCATHIT  EQU   CCAFLG5
CCAMODPA EQU   CCAFLG5
CCAMEX1  EQU   CCAFLG5
CCAMEX   EQU   CCAFLG5
CCAMEX2  EQU   CCAFLG5
CCATCOMP EQU   CCAFLG4
CCAGVNE  EQU   CCAFLG4
CCAGVEX  EQU   CCAFLG4
CCAGVNBS EQU   CCAFLG4
CCAGVNF  EQU   CCAFLG4
CCAGVNC  EQU   CCAFLG4
CCAF4BYS EQU   CCAFLG4
CCAF4DRQ EQU   CCAFLG4
CCAEGREC EQU   CCAFLG3
CCALFT   EQU   CCAFLG3
CCAELC2  EQU   CCAFLG3
CCANF    EQU   CCAFLG3
CCAEXGR2 EQU   CCAFLG3
CCAGDSP  EQU   CCAFLG3
CCAGC4   EQU   CCAFLG3
CCAEXGR1 EQU   CCAFLG3
CCAF2SMO EQU   CCAFLG2
CCAF2CB  EQU   CCAF2COB
CCAF2CO  EQU   CCAF2COB
CCAF2RHS EQU   CCAFLG2
CCAF2XEQ EQU   CCAFLG2
CCAF2CCT EQU   CCAFLG2
CCAF2SYS EQU   CCAFLG2
CCAF1DK  EQU   CCAFLG1
CCAF1CR  EQU   CCAFLG1
CCAF1LRD EQU   CCAFLG1
CCAF1CNS EQU   CCAFLG1
CCAF1LPS EQU   CCAFLG1
CCACD2   EQU   IGGCCA+13
@NM00001 EQU   IGGCCA+8
CCACDR   EQU   CCAREASN
CCAMODID EQU   CCAPROB
CCASZ    EQU   IGGCCA+2
CCAID    EQU   IGGCCA
@NM00073 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00072 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSARV062 EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00071 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00070 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00069 EQU   FLCFSA
@NM00068 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00067 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00066 EQU   FLCIOA
@NM00065 EQU   FLCMCLA+15
@NM00064 EQU   FLCMCLA+14
@NM00063 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00062 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00061 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00060 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00059 EQU   FLCPER
@NM00058 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00057 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00056 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00055 EQU   FLCPIILC
@NM00054 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00053 EQU   FLCSVILC
@NM00052 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00051 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00050 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00268 EQU   @RC00258
@RC00325 EQU   @RC00324
@RC00457 EQU   @RC00456
@RC00538 EQU   @RC00535
@PB00010 EQU   @EL00001
@RC00269 EQU   @RC00268
@RC00539 EQU   @RC00538
@ENDDATA EQU   *
         END   IGG0CLA5,(C'PLS0207',0602,75268)
