         TITLE '*** IKTVTGET: TSO/VTAM TGET ROUTINE ***                *
                        '
IKTVTGET CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKTVTGET  78.013'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*                                                                  0120
*/********************************************************************/
*/*                                                                  */
*/*  START OF VTAM TGET. ENTERED FROM IGC0009C WITH LOCAL LOCK HELD  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0120
*   XSATCBA=TCBPTR;                 /* SAVE TCB ADDRESS              */
         STCM  TCBPTR,7,XSATCBA(RBSECPTR)                          0120
*   RFY                                                            0121
*     TCBPTR UNRSTD;                /* FREE-UP REGISTER              */
*   RFY                                                            0122
*     TCB BASED(XSATCBA);                                          0122
*   TVWAPTR=TSBXTVWA;               /* SET-UP ADDRESSABILITY TO TVWA */
         L     @04,TSBEXTNT(,TSBPTR)                               0123
         L     TVWAPTR,TSBXTVWA(,@04)                              0123
*   SAVEREG=TVWALLWA;               /* SET R13 TO LOCALLY-LOCKED SAVE
*                                      AREA                          */
         L     SAVEREG,TVWALLWA(,TVWAPTR)                          0124
*   XSADATSZ=0;                     /* INITIALIZE DATA SIZE TO 0     */
         SLR   @04,@04                                             0125
         STH   @04,XSADATSZ(,RBSECPTR)                             0125
*   XSADATVF='0'B;                  /* INITIALIZE TO 'DATA NOT     0126
*                                      VERIFIED'                     */
         NI    XSADATVF(RBSECPTR),B'11110111'                      0126
*                                                                  0127
*/********************************************************************/
*/*                                                                  */
*/*     FOLLOWING DO WILL NORMALLY BE EXECUTED ONCE. IT WILL ITERATE */
*/*     IF THERE IS NO DATA AVAILABLE & CALLER REQUESTED 'NOWAIT'.   */
*/*     (AFTER BEING SUSPENDED/REDISPATCHED WHEN DATA IS AVAILABLE)  */
*/*     IT WILL ALSO ITERATE IF THE QUEUE ELEMENT OBTAINED INDICATES */
*/*     'PARTIAL LINE'. I.E. REMAINDER OF INPUT LINE IS IN A FOLLOW- */
*/*     ING QUEUE ELEMENT.                                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0127
*   DO UNTIL XSADOSWT='0'B;         /* BIG DO TO PREVENT GOTO'S      */
@DL00127 DS    0H                                                  0128
*     XSADOSWT='0'B;                /* INIT. SWITCH TO OFF FOR EXIT  */
         NI    XSADOSWT(RBSECPTR),B'11101111'                      0128
*     CALL TERMSTAT;                /* CHECK TERMINAL STATUS STATUS
*                                      RETURNED IN XSARC             */
         BAL   @14,TERMSTAT                                        0129
*     IF XSARC^=CONTINUE THEN                                      0130
         CLC   XSARC(1,RBSECPTR),CONTINUE                          0130
         BNE   @RT00130                                            0130
*       ;                           /* IF TERMINAL SESSION CANCELLED
*                                      OR ATTENTION HIT, RETURN      */
*     ELSE                                                         0132
*       DO;                                                        0132
*         IPREQ=OBTAIN;             /* REQUEST FOR DATA              */
         MVI   IPREQ(SAVEREG),X'02'                                0133
*/*                                                                  */
*/*  *****************************************************************/
*/*                                                                  */
*/*       CALL INPUT QUEUE MANAGER, IKTQMIN.                         */
*/*       PARAMETER LIST INTERFACE IS BUILT DIRECTLY                 */
*/*       SO THAT PLS WILL NOT GENERATE ANY 'TEMPS'                  */
*/*       ITSELF. DIRECTLY BUILT PARAMETER LIST IS IN                */
*/*       LOCALLY LOCKED WORK AREA.                                  */
*/*                                                                  */
*/*  *****************************************************************/
*/*                                                                 **/
*                                                                  0134
*         PRMLSTAD=ADDR(IPARMS);    /* PUT ADDR INTO 'TEMP'          */
         LA    @04,IPARMS(,SAVEREG)                                0134
         ST    @04,PRMLSTAD(,SAVEREG)                              0134
*         RFY                                                      0135
*           PRMREG1 RSTD;                                          0135
*         PRMREG1=ADDR(PRMLSTAD);   /* REG 1 POINTS TO PLS PARM LST  */
         LA    PRMREG1,PRMLSTAD(,SAVEREG)                          0136
*         CALL IKTQMIN;             /* CALL INPUT QUEUE MANAGER      */
         L     @04,CVTPTR                                          0137
         L     @04,TCASTPTR(,@04)                                  0137
         L     @15,TCASIQM(,@04)                                   0137
         BALR  @14,@15                                             0137
*         RFY                                                      0138
*           PRMREG1 UNRSTD;                                        0138
*         IF IPRC=UNSUCCES THEN     /* ANY DATA AVAILABLE ?          */
         CLI   IPRC(SAVEREG),3                                     0139
         BNE   @RF00139                                            0139
*           DO;                     /* NO DATA                       */
*             IF TSBXTMTP^=T3767 THEN/* NOT A 3767 TERMINAL? @ZM20749*/
         L     @04,TSBEXTNT(,TSBPTR)                               0141
         CLI   TSBXTMTP(@04),2                                     0141
         BE    @RF00141                                            0141
*               DO;                 /* NOT A 3767 TERMINAL   @ZM20749*/
*                 IF TVWAPGN='1'B×  /* IS PAGING ON?         @YM03259*/
*                     TVWAKBDL='1'B×/* KEYBOARD LOCKED?      @YM03259*/
*                     TVWAATTN>0×   /* ATTENTION?            @ZM20749*/
*                     TVWAAIGN='1'B /* ATTENTION IGNORED?    @ZM20749*/
*                   THEN            /* PAGING OR KEYBOARD LOCKED   0143
*                                                            @YM03259*/
         TM    TVWAPGN(TVWAPTR),B'01000000'                        0143
         BO    @RT00143                                            0143
         TM    TVWAKBDL(TVWAPTR),B'00100000'                       0143
         BO    @RT00143                                            0143
         CLI   TVWAATTN(TVWAPTR),0                                 0143
         BH    @RT00143                                            0143
         TM    TVWAAIGN(TVWAPTR),B'00100000'                       0143
         BNO   @RF00143                                            0143
@RT00143 DS    0H                                                  0144
*                   TVWAULK='1'B;   /* REQUEST TO UNLOCK KEYBOARD  0144
*                                                            @YM03259*/
         OI    TVWAULK(TVWAPTR),B'00000100'                        0144
*                 ELSE                                             0145
*                   ;               /* NO PAGING-KEYBOARD          0145
*                                      UNLOCKED@YM03259              */
@RF00143 DS    0H                                                  0146
*                 IF TVWATIS='0'B&  /* IS TOM NOT SCHEDULED? @YM03259*/
*                     TVWATAS='0'B& /* AVAILABLE AND         @YM03259*/
*                     (TVWAKBDL='1'B×/* IS THE KEYBOARD LOCKED?    0146
*                                                            @ZM20749*/
*                     TVWAATTN>0×   /* ATTENTION?            @ZM20749*/
*                     TVWAAIGN='1'B)/* ATTENTION IGNORED?    @ZM20749*/
*                   THEN            /* YES                           */
         TM    TVWATIS(TVWAPTR),B'01100000'                        0146
         BNZ   @RF00146                                            0146
         TM    TVWAKBDL(TVWAPTR),B'00100000'                       0146
         BO    @RT00146                                            0146
         CLI   TVWAATTN(TVWAPTR),0                                 0146
         BH    @RT00146                                            0146
         TM    TVWAAIGN(TVWAPTR),B'00100000'                       0146
         BNO   @RF00146                                            0146
@RT00146 DS    0H                                                  0147
*                   DO;             /* SET UP SCHEDULING OF TOM      */
*                     TVWATIS='1'B; /* INDICATE TOM SCHEDULED      0148
*                                      SCHEDULE TOM                  */
         OI    TVWATIS(TVWAPTR),B'01000000'                        0148
*                     RFY                                          0149
*                       WORK1REG RSTD;                             0149
*                     WORK1REG=TSBXSRB;/* GET ADDRESS OF SRB         */
         L     @04,TSBEXTNT(,TSBPTR)                               0150
         L     WORK1REG,TSBXSRB(,@04)                              0150
*                     GEN(SCHEDULE SRB=(WORK1REG),SCOPE=LOCAL)     0151
*                     REFS(TSBXSRB,CVTPTR,CVTLSMQ,CVTMAP,SRBFLNK,  0151
*                         SRBSECT);                                0151
         SCHEDULE SRB=(WORK1REG),SCOPE=LOCAL
*                     RFY                                          0152
*                       WORK1REG UNRSTD;                           0152
*                   END;            /* TOM HAS BEEN SCHEDULED        */
*                 ELSE                                             0154
*                   ;               /* NO                            */
@RF00146 DS    0H                                                  0155
*               END;                /*                       @ZM20749*/
*             ELSE                                                 0156
*               ;                   /* A 3767 TERMINAL       @ZM20749
*                                      IF TGET NO WAIT, THEN RETURN
*                                      TO CALLER IMMEDIATELY         */
@RF00141 DS    0H                                                  0157
*             IF XSANOWT='1'B THEN  /* DID CALLER SAY 'NOWAIT' ?     */
         TM    XSANOWT(RBSECPTR),B'00010000'                       0157
         BNO   @RF00157                                            0157
*               DO;                 /* YES,                          */
*                 XSARC=NOWAIT;     /* SET RETURN CODE TO NODATA     */
         MVI   XSARC(RBSECPTR),X'04'                               0159
*               END;                                               0160
*                                                                  0160
*             /*******************************************************/
*             /*                                                     */
*             /* NO DATA AVAILABLE AND CALLER SPECIFIED TGET WAIT.   */
*             /* SUSPEND CALLER UNTIL DATA IS AVAILABLE OR ATTENTION */
*             /* HIT                                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0161
*             ELSE                                                 0161
*               DO;                                                0161
         B     @RC00157                                            0161
@RF00157 DS    0H                                                  0162
*                 XSADOSWT='1'B;    /* SET SWITCH TO CONTINUE LOOP 0162
*                                      AFTER DATA BECOMES AVAILABLE  */
         OI    XSADOSWT(RBSECPTR),B'00010000'                      0162
*                 RFY                                              0163
*                  (PRMREG1,                                       0163
*                   REG2) RSTD;                                    0163
*                                                                  0164
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET 'TPUT' OR 'TGET' INDICATOR FOR SRM ACCORDING*/
*                 /* TO WHETHER THE TERMINAL OUTPUT MANAGER WILL BE  */
*                 /* ACTIVE BEFORE TERMINAL DATA IS ENTERED. THIS    */
*                 /* AFFECTS THE SWAP OUT/SWAP IN OF THE ADDRESS     */
*                 /* SPACE                                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0164
*                 IF TSBXTMTP=T3767 /* 3767?                 @YM03601*/
*                   THEN            /* 3767                  @YM03601*/
         L     @04,TSBEXTNT(,TSBPTR)                               0164
         CLI   TSBXTMTP(@04),2                                     0164
         BNE   @RF00164                                            0164
*                   IF TSBSPIT='0'B&TSBAUTON='1'B&TSBSTAUT='1'B/*  0165
*                                      PROMPT?               @YM03601*/
*                     THEN          /* PROMPT IN EFFECT      @YM03601*/
         TM    TSBSPIT(TSBPTR),B'00100000'                         0165
         BNZ   @RF00165                                            0165
         TM    TSBAUTON(TSBPTR),B'01000100'                        0165
         BNO   @RF00165                                            0165
*                     TVWAPRMT='1'B;/* PROMPT IN EFFECT      @YM03601*/
         OI    TVWAPRMT(TVWAPTR),B'00000010'                       0166
*                   ELSE            /* NO PROMPT             @YM03601*/
*                     DO;           /* RESET SWITCHES        @YM03601*/
         B     @RC00165                                            0167
@RF00165 DS    0H                                                  0168
*                       TVWAPRMT='0'B;/* NO PROMPT           @YM03601*/
*                       TVWAP1ST='0'B;/* RESET 1ST-PROMPT    @YM03601*/
         NI    TVWAPRMT(TVWAPTR),B'11111100'                       0169
*                     END;          /* END OF RESET          @YM03601*/
*                 ELSE                                             0171
*                   ;               /* 3270                  @YM03601*/
@RF00164 DS    0H                                                  0172
*                 PRMREG1=1;        /* NO SYSEVENT           @YM03259*/
@RC00164 LA    PRMREG1,1                                           0172
*                 IF TVWATIS='0'B   /* IS TOM SCHEDULED?     @YM03259*/
*                   THEN            /* TOM NOT SCHEDULED     @YM03259
*                                                            @ZA12766
*                                                            @ZA12766*/
         TM    TVWATIS(TVWAPTR),B'01000000'                        0173
         BNZ   @RF00173                                            0173
*                   IF TVWAKBDL='0'B/* KEYBOARD UNLOCKED?    @YM03259*/
*                     THEN          /* KEYBOARD UNLOCKED     @YM03259*/
         TM    TVWAKBDL(TVWAPTR),B'00100000'                       0174
         BNZ   @RF00174                                            0174
*                     PRMREG1=INPTWAIT;/* INPUT WAIT         @YM03259*/
         SLR   PRMREG1,PRMREG1                                     0175
*                   ELSE                                           0176
*                     ;             /* KEYBOARD LOCKED       @YM03259
*                                                            @ZA12766*/
@RF00174 DS    0H                                                  0177
*                 ELSE              /* TOM SCHEDULED         @YM03259*/
*                   IF TVWAKBDL='0'B/* KEYBOARD LOCKED?      @YM03259*/
*                     THEN          /* KEYBOARD UNLOCKED     @YM03259*/
         B     @RC00173                                            0177
@RF00173 TM    TVWAKBDL(TVWAPTR),B'00100000'                       0177
         BNZ   @RF00177                                            0177
*                     IF TVWATIR='1'B/* IS TOM RUNNING?      @YM03259*/
*                       THEN        /* TOM IS RUNNING        @YM03259*/
         TM    TVWATIR(TVWAPTR),B'00001000'                        0178
         BNO   @RF00178                                            0178
*                       IF TSBXTMTP=IDS×TSBXTMTP=TNDS/*      @G58AK3A*/
*                         THEN      /* 3270 OR NDS           @YM03601*/
         L     @04,TSBEXTNT(,TSBPTR)                               0179
         CLI   TSBXTMTP(@04),1                                     0179
         BE    @RT00179                                            0179
         CLI   TSBXTMTP(@04),4                                     0179
         BNE   @RF00179                                            0179
@RT00179 DS    0H                                                  0180
*                         PRMREG1=INPTWAIT;/* INPUT WAIT     @YM03601*/
         SLR   PRMREG1,PRMREG1                                     0180
*                       ELSE        /* 3767 OR USER          @YM03601*/
*                         IF TVWADOOQ='1'B/* QUEUE EMPTY?    @YM03601*/
*                           THEN    /* QUEUE EMPTY           @YM03601*/
         B     @RC00179                                            0181
@RF00179 TM    TVWADOOQ(TVWAPTR),B'01000000'                       0181
         BNO   @RF00181                                            0181
*                           PRMREG1=OTPTWAIT;/* OUTPUT WAIT  @YM03601*/
         L     PRMREG1,OTPTWAIT                                    0182
*                         ELSE      /* DATA ON QUEUE         @YM03601*/
*                           IF TVWAPRMT='1'B&TVWAP1ST='0'B/* @YM03601*/
*                             THEN  /* FIRST PROMPT          @YM03601*/
         B     @RC00181                                            0183
@RF00181 TM    TVWAPRMT(TVWAPTR),B'00000010'                       0183
         BNO   @RF00183                                            0183
         TM    TVWAP1ST(TVWAPTR),B'00000001'                       0183
         BNZ   @RF00183                                            0183
*                             DO;   /*                       @YM03601*/
*                               TVWAP1ST='1'B;/* NOT 1ST PROMPT    0185
*                                                            @YM03601*/
         OI    TVWAP1ST(TVWAPTR),B'00000001'                       0185
*                               PRMREG1=OTPTWAIT;/* OUTPUT WAIT    0186
*                                                            @YM03601*/
         L     PRMREG1,OTPTWAIT                                    0186
*                             END;  /*                       @YM03601*/
*                           ELSE    /*                       @YM03601*/
*                             PRMREG1=INPTWAIT;/* INPUT WAIT @YM03601*/
         B     @RC00183                                            0188
@RF00183 SLR   PRMREG1,PRMREG1                                     0188
*                     ELSE                                         0189
*                       ;           /* TOM IS NOT RUNNING    @YM03259*/
@RF00178 DS    0H                                                  0190
*                   ELSE                                           0190
*                     ;             /* KEYBOARD IS LOCKED    @YM03259*/
@RF00177 DS    0H                                                  0191
*                 IF PRMREG1=INPTWAIT THEN/* IWAIT REQUESTED @ZA24418*/
@RC00177 DS    0H                                                  0191
@RC00173 LTR   PRMREG1,PRMREG1                                     0191
         BNZ   @RF00191                                            0191
*                   DO;             /*                       @ZA24418*/
*                     ;             /* DELETED TESTING FOR TVWAIOP 0193
*                                                            @ZA28881*/
*                     MPSTSOIW='1'B;/* TELL VTAM IWAIT WAS ISSUED  0194
*                                                            @ZA28881*/
         L     @04,ASCBPTR                                         0194
         L     @04,ASXBPTR(,@04)                                   0194
         L     @04,ASXBMPST(,@04)                                  0194
         OI    MPSTSOIW(@04),B'10000000'                           0194
*                     TVWAISYS='1'B;/* SET IWAIT INDICATOR   @ZA28881*/
         OI    TVWAISYS(TVWAPTR),B'10000000'                       0195
*                   END;            /*                       @ZA24418*/
*                 ELSE                                             0197
*                   ;               /*                       @ZA24418*/
@RF00191 DS    0H                                                  0198
*                 IF PRMREG1^=1     /* ISSUE SYSEVENT?       @YM03259*/
*                   THEN            /* ISSUE SYSEVENT        @YM03259*/
         C     PRMREG1,@CF00050                                    0198
         BE    @RF00198                                            0198
*                   DO;             /* SET UP SYSEVENT               */
*                     REG2=ASCBASID;/* GET THIS ADDR. SPCS ASID      */
         L     @04,ASCBPTR                                         0200
         LH    REG2,ASCBASID(,@04)                                 0200
         N     REG2,@CF02686                                       0200
*                     GEN REFS(ASCBASID,CVTPTR,CVTOPTE,CVT) SETS(  0201
*                         PRMREG0,RTNREG,ENTRYREG);                0201
***
***         INFORM SYSTEM RESOURCE MANAGER OF WAIT
***
            SYSEVENT TERMWAIT,ASID=(REG2),ENTRY=BRANCH
*                     RFY                                          0202
*                      (PRMREG1,                                   0202
*                       REG2) UNRSTD;                              0202
*                   END;            /* END OF SYSEVENT               */
*                 ELSE                                             0204
*                   ;               /* DO NOT ISSUE SYSEVENT         */
@RF00198 DS    0H                                                  0205
*                 TSBIWAIT='1'B;    /* INDICATE IWAIT CONDITION      */
         OI    TSBIWAIT(TSBPTR),B'01000000'                        0205
*                                                                  0206
*                 /***************************************************/
*                 /*                                                 */
*                 /* PREPARE TO SUSPEND CALLER VIA BRANCH TO THE     */
*                 /* STATUS ROUTINE. LOCAL LOCK HELD ON ENTRY TO     */
*                 /* STATUS ROUTINE.                                 */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0206
*                 STM(PRMREG0,ENTRYREG,TCBGRS);/* SAVE REGISTERS     */
         L     @04,XSATCBA-1(,RBSECPTR)                            0206
         LA    @04,0(,@04)                                         0206
         STM   PRMREG0,ENTRYREG,TCBGRS(@04)                        0206
*                 RBOPSW2=ADDR(REDISPCH);/* SET UP RESUME PSW TELL 0207
*                                      STATUS TO RE-DISPATCH TASK AT
*                                      LABEL 'REDISPCH'              */
         LA    @15,REDISPCH                                        0207
         ST    @15,RBOPSW2(,RBSECPTR)                              0207
*                 RFY                                              0208
*                  (PRMREG0,                                       0208
*                   PRMREG1) RSTD;                                 0208
*                 SAVEREG=NDISPBIT; /* SET NON-DISPATCHABLE FLAG     */
         LA    SAVEREG,2048                                        0209
*                 PRMREG0=SDTCB;    /* SET ENTRY CODE                */
         LA    PRMREG0,15                                          0210
*                 PRMREG1=XSATCBA;  /* SET TCB TO SUSPEND            */
         LR    PRMREG1,@04                                         0211
*                 CALL STATUS;      /* CALL STATUS TO SUSPEND TASK   */
         L     @04,CVTPTR                                          0212
         L     @04,SCVTSPTR(,@04)                                  0212
         L     @15,SCVTSTAT(,@04)                                  0212
         BALR  @14,@15                                             0212
*                 RFY                                              0213
*                  (PRMREG0,                                       0213
*                   PRMREG1) UNRSTD;                               0213
*                                                                  0213
*                 /***************************************************/
*                 /*                                                 */
*                 /* UPON BEING RE-DISPATCHED, LOCAL LOCK MUST BE    */
*                 /* RE-OBTAINED                                     */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0214
*REDISPCH:                                                         0214
*                 RFY                                              0214
*                  (RTNREG,                                        0214
*                   ENTRYREG,                                      0214
*                   REG0,                                          0214
*                   REG1) RSTD;                                    0214
REDISPCH DS    0H                                                  0215
*                 GEN SETS(RTNREG,ENTRYREG,REG0,REG1) REFS(PSALITA,FLC)
*                     ;                                            0215
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,              --
               RELATED=(TSB,IKTVTGET(RETURN))
*                 RFY                                              0216
*                  (RTNREG,                                        0216
*                   ENTRYREG,                                      0216
*                   REG0,                                          0216
*                   REG1) UNRSTD;                                  0216
*               END;                /* END OF NO DATA AVAILABLE,   0217
*                                      SUSPEND CALLER                */
*           END;                    /* END OF NO DATA AVAILABLE      */
*/*                                                                  */
*/*  *****************************************************************/
*/*                                                                  */
*/*            DATA IS AVAILABLE. EDIT DATA AND MOVE INTO            */
*/*            CALLER'S BUFFER. EDIT ROUTINES UPDATE XSAPRMSZ,       */
*/*            XSABFRAD, IPBFSZ,IPBUFADR                             */
*/*                                                                  */
*/*  *****************************************************************/
*                                                                  0219
*         ELSE                                                     0219
*           DO;                                                    0219
         B     @RC00139                                            0219
@RF00139 DS    0H                                                  0220
*             IF XSADATVF='0'B THEN /* IF NOT DONE BEFORE, THEN GO 0220
*                                      VERIFY THAT CALLER'S ADDRESS
*                                      IS VALID                      */
         TM    XSADATVF(RBSECPTR),B'00001000'                      0220
         BNZ   @RF00220                                            0220
*               CALL VERIFY;                                       0221
         BAL   @14,VERIFY                                          0221
*             RFY                                                  0222
*              (PRMREG0,                                           0222
*               PRMREG1) RSTD;                                     0222
*                                                                  0222
@RF00220 DS    0H                                                  0223
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP R0 AND R1 TO POINT TO XSA AND IPARMS FOR     */
*             /* EXTERNAL EDIT ROUTINES                              */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0223
*             PRMREG0=ADDR(XSA);    /* PT. TO EXTENDED SAVE AREA     */
         LA    PRMREG0,XSA(,RBSECPTR)                              0223
*             PRMREG1=ADDR(IPARMS); /* PT. TO QMGR PARAM. LIST       */
         LA    PRMREG1,IPARMS(,SAVEREG)                            0224
*             IF IPTRMTYP=TUSERDEF THEN/* CHECK FOR USER.DEFINED   0225
*                                      DEVICE TYPE                   */
         CLI   IPTRMTYP(SAVEREG),3                                 0225
         BNE   @RF00225                                            0225
*               CALL IKTGETXT;      /* CALL USER EDIT FOR SPCL DEVIC */
         L     @15,@CV02623                                        0226
         BALR  @14,@15                                             0226
*             ELSE                                                 0227
*               IF IPTRMTYP=IDS×IPTRMTYP=TNDS THEN/* CALL          0227
*                                      EDIT@G58AK3A                  */
         B     @RC00225                                            0227
@RF00225 CLI   IPTRMTYP(SAVEREG),1                                 0227
         BE    @RT00227                                            0227
         CLI   IPTRMTYP(SAVEREG),4                                 0227
         BNE   @RF00227                                            0227
@RT00227 DS    0H                                                  0228
*                 DO;               /* FOR 3270 OR NDS               */
*                   IF ADDR(IKTIDSX4)^=0 THEN/* IF EXIT ROUTINE, CALL
*                                      IT                            */
         L     @04,@CV02622                                        0229
         LTR   @04,@04                                             0229
         BZ    @RF00229                                            0229
*                     DO;                                          0230
*                       CALL IKTIDSX4;/* INSTALLATION EXIT           */
         L     @15,@CV02622                                        0231
         BALR  @14,@15                                             0231
*                       RFY                                        0232
*                         RCREG RSTD;                              0232
*                       IF RCREG=NORMALSO THEN/* CALL NORMAL EDIT IF
*                                      REQUESTED BY EXIT             */
         C     RCREG,@CF00035                                      0233
         BNE   @RF00233                                            0233
*                         DO;                                      0234
*                           RFY                                    0235
*                             RCREG UNRSTD;                        0235
*                           CALL EDIT3270;/* 3270 EDIT ROUTINE       */
         BAL   @14,EDIT3270                                        0236
*                         END;                                     0237
*                     END;          /* END 'EXIT RTN FOR 3270' DO    */
*                   ELSE                                           0239
*                     CALL EDIT3270;/* IF NO EXIT ROUTINE, CALL    0239
*                                      NORMAL 3270 EDIT ROUTINE E    */
         B     @RC00229                                            0239
@RF00229 BAL   @14,EDIT3270                                        0239
*                 END;                                             0240
*               ELSE                                               0241
*                 IF IPTRMTYP=T3767 THEN/* 3767 OR 3770 TERMINAL     */
         B     @RC00227                                            0241
@RF00227 CLI   IPTRMTYP(SAVEREG),2                                 0241
         BNE   @RF00241                                            0241
*                   IF ADDR(IKTRTX4)^=0 THEN/* IF EXIT ROUTINE, CALL
*                                      IT                            */
         L     @04,@CV02621                                        0242
         LTR   @04,@04                                             0242
         BZ    @RF00242                                            0242
*                     DO;                                          0243
*                       CALL IKTRTX4;/* INSTALLATION EXIT            */
         L     @15,@CV02621                                        0244
         BALR  @14,@15                                             0244
*                       RFY                                        0245
*                         RCREG RSTD;                              0245
*                       IF RCREG=NORMALSO THEN/* CALL NORMAL EDIT IF
*                                      REQUESTED BY EXIT             */
         C     RCREG,@CF00035                                      0246
         BNE   @RF00246                                            0246
*                         DO;                                      0247
*                           RFY                                    0248
*                             RCREG UNRSTD;                        0248
*                           CALL EDIT3767;/* 3767 AND 3770 EDIT    0249
*                                      ROUTINE E                     */
         BAL   @14,EDIT3767                                        0249
*                         END;                                     0250
*                     END;                                         0251
*                   ELSE                                           0252
*                     CALL EDIT3767;/* IF NO EXIT ROUTINE, CALL    0252
*                                      NORMAL 3767 EDIT ROUTINE      */
         B     @RC00242                                            0252
@RF00242 BAL   @14,EDIT3767                                        0252
*             RFY                                                  0253
*              (PRMREG0,                                           0253
*               PRMREG1) UNRSTD;                                   0253
@RC00242 DS    0H                                                  0253
@RF00241 DS    0H                                                  0253
@RC00227 DS    0H                                                  0253
@RC00225 DS    0H                                                  0254
*             XSADATSZ=XSADATSZ+XSACURDS;/* ACCUMULATE TOTAL INPUT 0254
*                                      DATA SIZE FOR RETURN TO     0254
*                                      CALLER. EDIT ROUTINES SET   0254
*                                      XSACURDS TO AMOUNT OF DATA  0254
*                                      MOVED FROM THIS Q ELEMENT     */
*                                                                  0254
         LH    @04,XSADATSZ(,RBSECPTR)                             0254
         AH    @04,XSACURDS(,RBSECPTR)                             0254
         STH   @04,XSADATSZ(,RBSECPTR)                             0254
*             /*******************************************************/
*             /*                                                     */
*             /* AS MUCH DATA AS POSSIBLE HAS BEEN EDITED. NOW CHECK */
*             /* IF ALL HAS BEEN EDITED. (IT HAS UNLESS CALLER'S     */
*             /* BUFFER IS SMALLER THAN THE INPUT LINE SIZE)         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0255
*             IF IPBFSZ=0 THEN      /* CHECK IF ALL DATA MOVED       */
         LH    @04,IPBFSZ(,SAVEREG)                                0255
         LTR   @04,@04                                             0255
         BNZ   @RF00255                                            0255
*               DO;                                                0256
*                 IPREQ=DELETE;     /* REQUEST THAT ELEMENT BE DEL'D */
*                                                                  0257
         MVI   IPREQ(SAVEREG),X'03'                                0257
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL INPUT QUEUE MANAGER, IKTQMIN PARAMETER LIST*/
*                 /* INTERFACE IS BUILT DIRECTLY SO THAT PLS WILL NOT*/
*                 /* GENERATE ANY TEMPS ITSELF. DIRECTLY BUILT       */
*                 /* PARAMETER LIST IS IN LOCALLY LOCKED WORK AREA.  */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0258
*                 PRMLSTAD=ADDR(IPARMS);/* PUT ADDR INTO 'TEMP'      */
         LA    @04,IPARMS(,SAVEREG)                                0258
         ST    @04,PRMLSTAD(,SAVEREG)                              0258
*                 RFY                                              0259
*                   PRMREG1 RSTD;                                  0259
*                 PRMREG1=ADDR(PRMLSTAD);/* REG 1 POINTS TO PLS PARM
*                                      LST                           */
         LA    PRMREG1,PRMLSTAD(,SAVEREG)                          0260
*                 CALL IKTQMIN;     /* CALL INPUT QUEUE MANAGER      */
         L     @04,CVTPTR                                          0261
         L     @04,TCASTPTR(,@04)                                  0261
         L     @15,TCASIQM(,@04)                                   0261
         BALR  @14,@15                                             0261
*                 RFY                                              0262
*                   PRMREG1 UNRSTD;                                0262
*                 IF IPPRTL='1'B THEN/* PARTIAL LINE INDICATOR MAY BE
*                                      ON, INDICATING MORE DATA      */
         TM    IPPRTL(SAVEREG),B'00100000'                         0263
         BNO   @RF00263                                            0263
*                   XSADOSWT='1'B;  /* YES, SET SWITCH TO CONTINUE 0264
*                                      CALLING QUEUE MGR             */
         OI    XSADOSWT(RBSECPTR),B'00010000'                      0264
*                 ELSE                                             0265
*                   DO;                                            0265
*                                                                  0265
         B     @RC00263                                            0265
@RF00263 DS    0H                                                  0266
*                     /***********************************************/
*                     /*                                             */
*                     /* TELL SRM THAT INPUT COMPLETED -'TGETTPUT'   */
*                     /* AND ALL DATA MOVED                          */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0266
*                     RFY                                          0266
*                      (PRMREG1,                                   0266
*                       REG2) RSTD;                                0266
*                     PRMREG1=TGETIND;/* INDICATE TGET(BIT 0 =0) AND
*                                      NO MORE DATA (BIT 1 =0)       */
         SLR   PRMREG1,PRMREG1                                     0267
*                     REG2=ASCBASID;/* GET ASID OF THIS ADDR. SPC.   */
         L     @04,ASCBPTR                                         0268
         LH    REG2,ASCBASID(,@04)                                 0268
         N     REG2,@CF02686                                       0268
*                     GEN REFS(ASCBASID,CVTPTR,CVTOPTE,CVT) SETS(  0269
*                         PRMREG0,RTNREG,ENTRYREG);                0269
***
***      INFORM SRM OF TGET COMPLETION
***
         SYSEVENT TGETTPUT,ASID=(REG2),ENTRY=BRANCH
*                     RFY                                          0270
*                      (PRMREG1,                                   0270
*                       REG2) UNRSTD;                              0270
*                     XSARC=0;      /* ALL DATA MOVED SUCCESSFULLY   */
         MVI   XSARC(RBSECPTR),X'00'                               0271
*                     IF TCBTCT^=0 THEN/* TEST FOR SMF RUNNING       */
         L     @04,XSATCBA-1(,RBSECPTR)                            0272
         L     @04,TCBTCT(,@04)                                    0272
         LTR   @04,@04                                             0272
         BZ    @RF00272                                            0272
*                       TCTLIN=TCTLIN+1;/* IF SO, INCR NO. OF TGET'S */
         LA    @15,1                                               0273
         AL    @15,TCTLIN(,@04)                                    0273
         ST    @15,TCTLIN(,@04)                                    0273
*                   END;            /* END 'NOT PARTIAL LINE' DO     */
*               END;                /* END'ALL DATA MOVED' SECTION   */
*             ELSE                  /* START 'NOT ALL DATA MOVED'    */
*               DO;                                                0276
         B     @RC00255                                            0276
@RF00255 DS    0H                                                  0277
*                 IPREQ=UPDATE;     /* REQUEST THAT ELE. BE UPDATED  */
*                                                                  0277
         MVI   IPREQ(SAVEREG),X'04'                                0277
*                 /***************************************************/
*                 /*                                                 */
*                 /* CALL INPUT QUEUE MANAGER, IKTQMIN PARAMETER LIST*/
*                 /* INTERFACE IS BUILT DIRECTLY SO THAT PLS WILL NOT*/
*                 /* GENERATE ANY TEMPS ITSELF. DIRECTLY BUILT       */
*                 /* PARAMETER LIST IS IN LOCALLY LOCKED WORK AREA.  */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0278
*                 PRMLSTAD=ADDR(IPARMS);/* PUT ADDR INTO 'TEMP'      */
         LA    @04,IPARMS(,SAVEREG)                                0278
         ST    @04,PRMLSTAD(,SAVEREG)                              0278
*                 RFY                                              0279
*                   PRMREG1 RSTD;                                  0279
*                 PRMREG1=ADDR(PRMLSTAD);/* REG 1 POINTS TO PLS PARM
*                                      LST                           */
         LA    PRMREG1,PRMLSTAD(,SAVEREG)                          0280
*                 CALL IKTQMIN;     /* CALL INPUT QUEUE MANAGER      */
         L     @04,CVTPTR                                          0281
         L     @04,TCASTPTR(,@04)                                  0281
         L     @15,TCASIQM(,@04)                                   0281
         BALR  @14,@15                                             0281
*                 RFY                                              0282
*                   PRMREG1 UNRSTD;                                0282
*                                                                  0283
*                 /***************************************************/
*                 /*                                                 */
*                 /* TELL SRM THAT INPUT COMPLETED-'TGETTPUT' AND    */
*                 /* THAT ALL DATA NOT MOVED                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0283
*                 RFY                                              0283
*                  (PRMREG1,                                       0283
*                   REG2) RSTD;                                    0283
*                 PRMREG1=MOREDATA; /* INDICATE TGET(BIT 0=0) AND  0284
*                                      MORE DATA (BIT 1=1)           */
         L     PRMREG1,MOREDATA                                    0284
*                 REG2=ASCBASID;    /* GET THIS ADDR. SPCS. ASID     */
         L     @04,ASCBPTR                                         0285
         LH    REG2,ASCBASID(,@04)                                 0285
         N     REG2,@CF02686                                       0285
*                 GEN REFS(ASCBASID,CVTPTR,CVTOPTE,CVT) SETS(PRMREG0,
*                     RTNREG,ENTRYREG);                            0286
***
***      INFORM SRM OF TGET COMPLETION
***
         SYSEVENT TGETTPUT,ASID=(REG2),ENTRY=BRANCH
*                 RFY                                              0287
*                  (PRMREG1,                                       0287
*                   REG2) UNRSTD;                                  0287
*                 XSARC=TOOSMALL;   /* TELL CALLER MORE DATA THAN CAN
*                                      FIT IN CALLER'S BUFFER        */
         MVI   XSARC(RBSECPTR),X'0C'                               0288
*                 IF TCBTCT^=0 THEN /* TEST FOR SMF RUNNING          */
         L     @04,XSATCBA-1(,RBSECPTR)                            0289
         L     @04,TCBTCT(,@04)                                    0289
         LTR   @04,@04                                             0289
         BZ    @RF00289                                            0289
*                   TCTLIN=TCTLIN+1;/* IF SO, INCR NO. OF TGET'S     */
         LA    @15,1                                               0290
         AL    @15,TCTLIN(,@04)                                    0290
         ST    @15,TCTLIN(,@04)                                    0290
*               END;                /* END 'NOT ALL DATA MOVED'      */
@RF00289 DS    0H                                                  0292
*           END;                    /* END OF DATA AVAILABLE  SECTION*/
@RC00255 DS    0H                                                  0293
*       END;                        /* END OF XSARC = SUCCESS DO     */
@RC00139 DS    0H                                                  0294
*   END;                            /* END OF DO UNTIL XSADOSW= '0'  */
@RT00130 DS    0H                                                  0294
@DE00127 TM    XSADOSWT(RBSECPTR),B'00010000'                      0294
         BNZ   @DL00127                                            0294
*                                                                  0295
*/*                                                                  */
*/********************************************************************/
*/*            TGET RETURN POINT. RELEASE LOCAL LOCK,                */
*/*            RESTORE TCBFX VALUE AND RETURN TO CALLER              */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*                                                                  0295
*   TCBTIOTG='0'B;                  /* CLEAR ATTN INDICATOR IN TCB   */
         L     @04,XSATCBA-1(,RBSECPTR)                            0295
         NI    TCBTIOTG(@04),B'11101111'                           0295
*   TSBATTN='0'B;                   /* CLEAR ATTN INDICATOR IN TSB   */
         NI    TSBATTN(TSBPTR),B'01111111'                         0296
*   GEN SETS(RTNREG,ENTRYREG,REG0,REG1) REFS(PSALITA,FLC);         0297
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                         --
               RELATED=(TSB,IKTVTGET(REDISPCH))
*   IF XSATCBFX='1'B THEN           /* IF ASYNCHRONOUS EXITS WERE  0298
*                                      ALLOWED ON ENTRY,             */
         TM    XSATCBFX(RBSECPTR),B'00100000'                      0298
         BNO   @RF00298                                            0298
*     TCBFX='0'B;                   /* RESET TCB ASYN. EXIT INDIC.   */
         L     @04,XSATCBA-1(,RBSECPTR)                            0299
         NI    TCBFX(@04),B'11111110'                              0299
*   RFY                                                            0300
*     PRMREG1 RSTD;                                                0300
@RF00298 DS    0H                                                  0301
*   PRMREG1=XSADATSZ;               /* RETURN INPUT DATA SIZE TO   0301
*                                      CALLER IN REG 1               */
         LH    PRMREG1,XSADATSZ(,RBSECPTR)                         0301
*   RFY                                                            0302
*     RTNREG RSTD;                                                 0302
*   RTNREG=XSARETG;                 /* RESTORE RETURN ADDRESS        */
         L     RTNREG,XSARETG(,RBSECPTR)                           0303
*   RETURN CODE(XSARC);             /* RETURN TO ADDRESS THAT WAS IN
*                                      R14 ON ENTRY,WITH TGET CODE   */
         SLR   @15,@15                                             0304
         IC    @15,XSARC(,RBSECPTR)                                0304
@EL00001 DS    0H                                                  0304
@EF00001 DS    0H                                                  0304
@ER00001 BR    @14                                                 0304
*   RFY                                                            0305
*     RTNREG UNRSTD;                                               0305
*   RFY                                                            0306
*     PRMREG1 UNRSTD;                                              0306
*TERMSTAT:                                                         0307
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0307
TERMSTAT DS    0H                                                  0308
*                                                                  0308
*/*                                                                  */
*/********************************************************************/
*/*            TERMSTAT IS AN INTERNAL PROCEDURE CALLED TO DETERMINE */
*/*            THE STATUS OF THE TERMINAL.                           */
*/*            IT SETS XSARC ON RETURN:                              */
*/*             = 0 - NORMAL                                         */
*/*             = 14 HEX - TERMINAL SESSION HAS BEEN CANCELLED       */
*/*             =  8 - ATTENTION WAS HIT                             */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*                                                                  0308
*   RFY                                                            0308
*     RTNREG RSTD;                                                 0308
*   XSASAVEA=RTNREG;                /* SAVE RETURN ADDRESS           */
         ST    RTNREG,XSASAVEA(,RBSECPTR)                          0309
*   RFY                                                            0310
*     RTNREG UNRSTD;                                               0310
*   IF TSBCANC='1'B THEN            /* TEST TERMINAL CANCELLED       */
         TM    TSBCANC(TSBPTR),B'00000100'                         0311
         BNO   @RF00311                                            0311
*     XSARC=TERMCNCL;               /* IF YES, SET RC = CANCELLED    */
         MVI   XSARC(RBSECPTR),X'14'                               0312
*   ELSE                                                           0313
*     IF TCBTIOTG='1'B THEN         /* TEST ATTN HIT                 */
         B     @RC00311                                            0313
@RF00311 L     @04,XSATCBA-1(,RBSECPTR)                            0313
         TM    TCBTIOTG(@04),B'00010000'                           0313
         BNO   @RF00313                                            0313
*       XSARC=ATTEN;                /* IF YES, SET RC TO ATTEN       */
         MVI   XSARC(RBSECPTR),X'08'                               0314
*     ELSE                                                         0315
*       XSARC=SUCCESS;              /* OTHERWISE, SET RC SUCCESSFUL  */
         B     @RC00313                                            0315
@RF00313 IC    @04,SUCCESS                                         0315
         STC   @04,XSARC(,RBSECPTR)                                0315
*   RFY                                                            0316
*     RTNREG RSTD;                                                 0316
@RC00313 DS    0H                                                  0316
@RC00311 DS    0H                                                  0317
*   RTNREG=XSASAVEA;                /* RESTORE RETURN ADDRESS        */
         L     RTNREG,XSASAVEA(,RBSECPTR)                          0317
*   RETURN;                                                        0318
@EL00002 DS    0H                                                  0318
@EF00002 DS    0H                                                  0318
@ER00002 BR    @14                                                 0318
*   RFY                                                            0319
*     RTNREG UNRSTD;                                               0319
*   END TERMSTAT;                                                  0320
*VERIFY:                                                           0321
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0321
*                                                                  0321
VERIFY   DS    0H                                                  0322
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/*      THIS TESTS IF CALLER'S DATA ADDRESS IS IN THE CALLER'S      */
*/*      KEY. IT DOES SO BY REFERENCING THE FIRST BYTE OF EACH       */
*/*      PAGE REQUIRED FOR THE TPUT.                                 */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*                                                                  0322
*   DCL                                                            0322
*     APAGE FIXED(15) CONSTANT(4096);/* PAGE SIZE                    */
*   DCL                                                            0323
*     MODULUS FIXED(8) CONSTANT(12);/* MODULUS OF A VS2 PAGE IS    0323
*                                      2**12=4096                    */
*   RFY                                                            0324
*     RTNREG RSTD;                                                 0324
*   XSASAVEA=RTNREG;                /* SAVE RETURN ADDRESS           */
         ST    RTNREG,XSASAVEA(,RBSECPTR)                          0325
*   RFY                                                            0326
*     RTNREG UNRSTD;                                               0326
*   XSADATVF='1'B;                  /* SET INDICATOR TO 'VERIFIED'   */
*   XSADMOVE='1'B;                  /* INDICATE 'DATA VERIFICATION 0328
*                                      UNDERWAY'                     */
         OI    XSADATVF(RBSECPTR),B'01001000'                      0328
*/*    GET INTO CALLER'S KEY TO VALIDATE DATA                        */
*                                                                  0329
*   RFY                                                            0329
*     REG2 RSTD;                                                   0329
*   REG2=RBLINKB->RBOPSWB2;         /* OBTAIN CALLERS KEY FROM RB    */
         L     @04,RBLINKB-1(,RBSECPTR)                            0330
         SLR   REG2,REG2                                           0330
         IC    REG2,RBOPSWB2(,@04)                                 0330
*   GEN SETS(REG2);                                                0331
        MODESET KEYADDR=(2),WORKREG=2   GET IN TASK S KEY
*   RFY                                                            0332
*     REG2 UNRSTD;                                                 0332
*   RFY                                                            0333
*     WORK1REG RSTD;                                               0333
*   WORK1REG=XSABFRAD;              /* GET INPUT BUFFER ADDRESS      */
         L     WORK1REG,XSABFRAD-1(,RBSECPTR)                      0334
         LA    WORK1REG,0(,WORK1REG)                               0334
*   SRL(WORK1REG,MODULUS);          /* SHIFT OFF PARTIAL PAGE        */
         SRL   WORK1REG,12                                         0335
*   SLL(WORK1REG,MODULUS);          /* SHIFT IN ZEROS                */
         SLL   WORK1REG,12                                         0336
*/*                                                                  */
*/*       LOOP THRU EACH PAGE, MOVING FIRST BYTE TO ITSELF           */
*/*                                                                  */
*                                                                  0337
*   RFY                                                            0337
*     WORK2REG RSTD;                                               0337
*   WORK2REG=XSABFRAD+XSAPRMSZ;     /* DEFINE UPPER LIMIT            */
         L     WORK2REG,XSABFRAD-1(,RBSECPTR)                      0338
         LA    WORK2REG,0(,WORK2REG)                               0338
         AH    WORK2REG,XSAPRMSZ(,RBSECPTR)                        0338
*                                                                  0339
*/*  IF PROGRAM CHECK OCCURS DURING BELOW DO WHILE, THEN IKT93EST    */
*/*  WILL CHANGE THE ABEND CODE TO '15D'X                            */
*                                                                  0339
*   DO WHILE WORK1REG<WORK2REG;                                    0339
         B     @DE00339                                            0339
@DL00339 DS    0H                                                  0340
*     GEN REFS(WORK1REG)(MVC 0(1,WORK1REG),0(WORK1REG));/* REFERENCE
*                                      PAGE                          */
         MVC 0(1,WORK1REG),0(WORK1REG)
*     WORK1REG=WORK1REG+APAGE;      /* INCREMENT BY PAGE SIZE        */
         AL    WORK1REG,@CF02642                                   0341
*   END;                                                           0342
@DE00339 CR    WORK1REG,WORK2REG                                   0342
         BL    @DL00339                                            0342
*   RFY                                                            0343
*    (WORK1REG,                                                    0343
*     WORK2REG) UNRSTD;                                            0343
*                                                                  0343
*/*                                                                  */
*/*         GET BACK INTO KEY 0                                      */
*/*                                                                  */
*                                                                  0344
*   GEN(MODESET EXTKEY=ZERO);                                      0344
         MODESET EXTKEY=ZERO
*   XSADMOVE='0'B;                  /* CLEAR INDICATOR THAT DATA   0345
*                                      VERIFICATION WAS GOING ON     */
         NI    XSADMOVE(RBSECPTR),B'10111111'                      0345
*   RFY                                                            0346
*     RTNREG RSTD;                                                 0346
*   RTNREG=XSASAVEA;                                               0347
         L     RTNREG,XSASAVEA(,RBSECPTR)                          0347
*   RETURN;                                                        0348
@EL00003 DS    0H                                                  0348
@EF00003 DS    0H                                                  0348
@ER00003 BR    @14                                                 0348
*   RFY                                                            0349
*     RTNREG UNRSTD;                                               0349
*   END VERIFY;                                                    0350
*EDIT3767:                                                         0351
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0351
EDIT3767 DS    0H                                                  0352
*                                                                  0352
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/*        EDIT3767 IS THE STANDARD TSO/VTAM EDIT ROUTINE FOR        */
*/*        THE 3767 AND 3770 TERMINALS. IT CHECKS FOR A TGET EDIT    */
*/*        REQUEST AND SCANS FOR INVALID DATA IF SO. IT MOVES THE    */
*/*        DATA FROM THE INPUT QUEUE TO THE CALLER'S DATA AREA       */
*/*        AND PADS WITH BLANKS IF EDIT OPTION.                      */
*/*                                                                  */
*/*        INPUT NEEDED---XSABFRAD - CALLER' DATA ADDRESS            */
*/*                       XSAPRMSZ - CALLER'S DATA AREA SIZE         */
*/*                       IPBUFADR - QUEUE ELEMENT ADDRESS           */
*/*                       IPBFSZ   - QUEUE ELEMENT SIZE              */
*/*                       XSAEDITO - OPTION IS EDIT IF='00'          */
*/*                                                                  */
*/*        OUTPUT-----EDIT3767 UPDATES THE DATA ADDRESSES AND        */
*/*                   AREA SIZES LISTED ABOVE.                       */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*                                                                  0352
*   RFY                                                            0352
*     RTNREG RSTD;                                                 0352
*   XSASAVEA=RTNREG;                /* SAVE RETURN ADDRESS           */
         ST    RTNREG,XSASAVEA(,RBSECPTR)                          0353
*   RFY                                                            0354
*     RTNREG UNRSTD;                                               0354
*   XSACURDS=0;                     /* CLEAR DATA MOVED COUNTER      */
         SLR   @04,@04                                             0355
         STH   @04,XSACURDS(,RBSECPTR)                             0355
*   IF XSAEDITO^='00'B THEN         /* 00 IS EDIT OPTION             */
         TM    XSAEDITO(RBSECPTR),B'00000011'                      0356
         BZ    @RF00356                                            0356
*/*                                                                  */
*/*       TGET ASIS. IF EITHER COUNT IS ZERO ON ENTRY,               */
*/*       NOTHING TO MOVE.                                           */
*/*                                                                  */
*                                                                  0357
*     IF XSAPRMSZ^=0&IPBFSZ^=0 THEN                                0357
         LH    @15,XSAPRMSZ(,RBSECPTR)                             0357
         CR    @15,@04                                             0357
         BE    @RF00357                                            0357
         LH    @14,IPBFSZ(,SAVEREG)                                0357
         CR    @14,@04                                             0357
         BE    @RF00357                                            0357
*       DO;                                                        0358
*         RFY                                                      0359
*           REG1 RSTD;                                             0359
*         REG1=MIN(XSAPRMSZ,IPBFSZ);/* GET MINIMUM FOR MOVE          */
         LR    REG1,@14                                            0360
         CR    REG1,@15                                            0360
         BNH   *+6
         LR    REG1,@15                                            0360
*         XSATARGT(1:REG1)=IPSOURCE(1:REG1);/* MOVE DATA TO CALLERS
*                                      DATA AREA. 3767 HAS A MAX   0361
*                                      IPBFSZ=256                    */
         L     @04,XSABFRAD-1(,RBSECPTR)                           0361
         LA    @04,0(,@04)                                         0361
         LR    @11,REG1                                            0361
         BCTR  @11,0                                               0361
         L     @10,IPBUFADR(,SAVEREG)                              0361
         EX    @11,@SM02690                                        0361
*         XSAPRMSZ=XSAPRMSZ-REG1;   /* UPDATE CALLER'S SIZE          */
         SLR   @15,REG1                                            0362
         STH   @15,XSAPRMSZ(,RBSECPTR)                             0362
*         XSABFRAD=XSABFRAD+REG1;   /* UPDATE CALLER'S ADDRESS       */
         ALR   @04,REG1                                            0363
         STCM  @04,7,XSABFRAD(RBSECPTR)                            0363
*         IPBFSZ=IPBFSZ-REG1;       /* UPDATE QUEUE ELE SIZE         */
         SLR   @14,REG1                                            0364
         STH   @14,IPBFSZ(,SAVEREG)                                0364
*         IPBUFADR=IPBUFADR+REG1;   /* UPDATE QUEUE ELE ADDRESS      */
         ALR   @10,REG1                                            0365
         ST    @10,IPBUFADR(,SAVEREG)                              0365
*         XSACURDS=REG1;            /* SET AMOUNT OF DATA MOVED      */
         STH   REG1,XSACURDS(,RBSECPTR)                            0366
*         RFY                                                      0367
*           REG1 UNRSTD;                                           0367
*       END;                        /* END 'TGET ASIS' MOVE          */
*     ELSE                                                         0369
*       ;                           /* IF EITHER=0, NO DATA MOVE     */
@RF00357 DS    0H                                                  0370
*   ELSE                            /* 'TGET EDIT' DATA MOVE         */
*     DO;                                                          0370
*                                                                  0370
         B     @RC00356                                            0370
@RF00356 DS    0H                                                  0371
*       /*************************************************************/
*       /*                                                           */
*       /* SCAN DATA VIA 'TRT' INSTRUCTION, MOVING VALID DATA AND    */
*       /* POINTING PAST INVALID CHAR. CONTINUE UNTIL THERE IS NO    */
*       /* MORE DATA TO MOVE OR NO ROOM TO MOVE IT TO.               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0371
*       DO WHILE XSAPRMSZ^=0&IPBFSZ^=0;                            0371
         B     @DE00371                                            0371
@DL00371 DS    0H                                                  0372
*         RFY                                                      0372
*           REG3 RSTD;                                             0372
*         REG3=MIN(IPBFSZ,XSAPRMSZ,256);/* NO MORE THAN 256 CHARS CAN
*                                      BE TESTED AT ONCE.            */
         LH    REG3,IPBFSZ(,SAVEREG)                               0373
         LH    @04,XSAPRMSZ(,RBSECPTR)                             0373
         CR    REG3,@04                                            0373
         BNH   *+6
         LR    REG3,@04                                            0373
         LA    @04,256                                             0373
         CR    REG3,@04                                            0373
         BNH   *+6
         LR    REG3,@04                                            0373
*         RFY                                                      0374
*          (REG1,                                                  0374
*           REG2) RSTD;                                            0374
*         REG1=0;                   /* CLEAR REGISTER BEFORE TRT     */
         SLR   REG1,REG1                                           0375
*         TRT(IPSOURCE(1:REG3),TGETEDIT(1));/* SEARCH FOR INVALID  0376
*                                      CHAR                          */
         L     @04,IPBUFADR(,SAVEREG)                              0376
         LR    @15,REG3                                            0376
         BCTR  @15,0                                               0376
         EX    @15,@SB02692                                        0376
*         BC(CC0,DATAVALD);         /* BRCH IF ALL DATA VALID        */
         BC    8,DATAVALD                                          0377
*                                                                  0378
*         /***********************************************************/
*         /*                                                         */
*         /* NOT ALL DATA IS VALID..REG1 POINTS TO FIRST INVALID CHAR*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0378
*         REG3=REG1-IPBUFADR;       /* COMPUTE NO. OF VALID CHARS  0378
*                                      MOVED.                        */
         L     @04,IPBUFADR(,SAVEREG)                              0378
         LR    REG3,REG1                                           0378
         SLR   REG3,@04                                            0378
*         RFY                                                      0379
*          (REG1,                                                  0379
*           REG2) UNRSTD;                                          0379
*         IF REG3^=0 THEN           /* ANY DATA TO MOVE ?            */
         LTR   REG3,REG3                                           0380
         BZ    @RF00380                                            0380
*           DO;                     /* YES                           */
*             XSATARGT(1:REG3)=IPSOURCE(1:REG3);/* MOVE DATA         */
         L     @02,XSABFRAD-1(,RBSECPTR)                           0382
         LA    @02,0(,@02)                                         0382
         LR    @15,REG3                                            0382
         BCTR  @15,0                                               0382
         EX    @15,@SM02694                                        0382
*             XSAPRMSZ=XSAPRMSZ-REG3;/* UPDATE CALLER'S SIZE         */
         LH    @04,XSAPRMSZ(,RBSECPTR)                             0383
         SLR   @04,REG3                                            0383
         STH   @04,XSAPRMSZ(,RBSECPTR)                             0383
*             XSABFRAD=XSABFRAD+REG3;/* UPDATE CALLER'S ADDRESS      */
         ALR   @02,REG3                                            0384
         STCM  @02,7,XSABFRAD(RBSECPTR)                            0384
*             XSACURDS=XSACURDS+REG3;/* INCREMENT AMT OF DATA MOVED  */
         LR    @04,REG3                                            0385
         AH    @04,XSACURDS(,RBSECPTR)                             0385
         STH   @04,XSACURDS(,RBSECPTR)                             0385
*           END;                                                   0386
*         IPBFSZ=IPBFSZ-REG3-1;     /* UPDATE QUEUE ELE SIZE TO AM'T
*                                      OF DATA MOVED PLUS THE INVALID
*                                      CHAR THAT IS DELETED.         */
@RF00380 LH    @04,IPBFSZ(,SAVEREG)                                0387
         SLR   @04,REG3                                            0387
         BCTR  @04,0                                               0387
         STH   @04,IPBFSZ(,SAVEREG)                                0387
*         IPBUFADR=IPBUFADR+REG3+1; /* UPDATE QUEUE ELE ADDRESS TOO  */
         LR    @04,REG3                                            0388
         AL    @04,IPBUFADR(,SAVEREG)                              0388
         AL    @04,@CF00050                                        0388
         ST    @04,IPBUFADR(,SAVEREG)                              0388
*         GO TO CONTIN1;            /* GO CONTINUE SEARCHING QUEUE 0389
*                                      ELE DATA                      */
         B     CONTIN1                                             0389
*                                                                  0390
*         /***********************************************************/
*         /*                                                         */
*         /* ALL DATA SCANNED IN 'TRT' WAS VALID                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0390
*DATAVALD:                                                         0390
*         XSATARGT(1:REG3)=IPSOURCE(1:REG3);/* MOVE DATA             */
DATAVALD L     @04,XSABFRAD-1(,RBSECPTR)                           0390
         LA    @04,0(,@04)                                         0390
         LR    @02,REG3                                            0390
         BCTR  @02,0                                               0390
         L     @15,IPBUFADR(,SAVEREG)                              0390
         EX    @02,@SM02696                                        0390
*         XSAPRMSZ=XSAPRMSZ-REG3;   /* UPDATE CALLER'S DATA SIZE     */
         LH    @02,XSAPRMSZ(,RBSECPTR)                             0391
         SLR   @02,REG3                                            0391
         STH   @02,XSAPRMSZ(,RBSECPTR)                             0391
*         XSABFRAD=XSABFRAD+REG3;   /* UPDATE CALLER'S ADDRESS       */
         ALR   @04,REG3                                            0392
         STCM  @04,7,XSABFRAD(RBSECPTR)                            0392
*         IPBFSZ=IPBFSZ-REG3;       /* UPDATE QUEUE ELE SIZE         */
         LH    @04,IPBFSZ(,SAVEREG)                                0393
         SLR   @04,REG3                                            0393
         STH   @04,IPBFSZ(,SAVEREG)                                0393
*         IPBUFADR=IPBUFADR+REG3;   /* UPDATE QUEUE ELE ADDRESS      */
         ALR   @15,REG3                                            0394
         ST    @15,IPBUFADR(,SAVEREG)                              0394
*         XSACURDS=XSACURDS+REG3;   /* INCREMENT AMT OF DATA MOVED   */
         LR    @04,REG3                                            0395
         AH    @04,XSACURDS(,RBSECPTR)                             0395
         STH   @04,XSACURDS(,RBSECPTR)                             0395
*CONTIN1:                                                          0396
*                                                                  0396
*         /***********************************************************/
*         /*                                                         */
*         /* CONTINUE WITH TRT LOOP                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0396
*         RFY                                                      0396
*           REG3 UNRSTD;                                           0396
CONTIN1  DS    0H                                                  0397
*       END;                        /* END EDIT'S DO WHILE           */
@DE00371 SLR   @04,@04                                             0397
         CH    @04,XSAPRMSZ(,RBSECPTR)                             0397
         BE    @DC00371                                            0397
         CH    @04,IPBFSZ(,SAVEREG)                                0397
         BNE   @DL00371                                            0397
@DC00371 DS    0H                                                  0398
*                                                                  0398
*       /*************************************************************/
*       /*                                                           */
*       /* EITHER IPBFSZ OR XSAPRMSZ IS ZERO 1. IF XSAPRMSZ ^= 0 AND */
*       /* THIS IS END OF INPUT(IPPRTL=0), THEN PAD REMAINING BUFFER */
*       /* WITH BLANKS. 2. IF IPBFSZ ^= 0, THEN SCAN FOR ANOTHER     */
*       /* VALID CHAR, ADJUSTING IPBFSZ AND IPBUFADR. THIS IS DONE SO*/
*       /* THAT IF CALLER IS RETURNED A CODE '0C'HEX, INDICATING THAT*/
*       /* MORE DATA FOLLOWS, THEN THERE SHOULD BE VALID DATA        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0398
*       IF XSAPRMSZ^=0&IPPRTL='0'B THEN                            0398
         LH    @04,XSAPRMSZ(,RBSECPTR)                             0398
         LTR   @04,@04                                             0398
         BZ    @RF00398                                            0398
         TM    IPPRTL(SAVEREG),B'00100000'                         0398
         BNZ   @RF00398                                            0398
*         DO;                                                      0399
*                                                                  0399
*           /*********************************************************/
*           /*                                                       */
*           /* PAD INPUT AREA WITH BLANKS, BUT DON'T CHANGE XSAPRMSZ */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0400
*           RFY                                                    0400
*            (REG0,                                                0400
*             REG1,                                                0400
*             REG2,                                                0400
*             REG3) RSTD;                                          0400
*           REG0=XSABFRAD;          /* TARGET ADR FOR 'MVCL'         */
         L     REG0,XSABFRAD-1(,RBSECPTR)                          0401
         ICM   REG0,8,@CB02616                                     0401
*           REG1=XSAPRMSZ;          /* AM'T OF AREA TO MOVE INTO REG2
*                                      NOT SET SINCE COUNT WILL BE 0402
*                                      ZERO, CAUSING PAD CHAR TO BE
*                                      USED                          */
         LR    REG1,@04                                            0402
*           REG3=BLANK;             /* PADDING CHAR IS A BLANK       */
         LA    REG3,64                                             0403
*           SLL(REG3,24);           /* PUT INTO PAD POSITION         */
         SLL   REG3,24                                             0404
*           MVCL(REG0,REG2);        /* MOVE IN BLANKS & SET COUNT=0  */
         MVCL  REG0,REG2                                           0405
*         END;                                                     0406
*       IF IPBFSZ^=0 THEN           /* MORE DATA IN QUEUE ELE ? YES,
*                                      VALIDATE IT                   */
@RF00398 LH    @04,IPBFSZ(,SAVEREG)                                0407
         LTR   @04,@04                                             0407
         BZ    @RF00407                                            0407
*         DO UNTIL REG3^=0×IPBFSZ=0;                               0408
@DL00408 DS    0H                                                  0409
*           REG3=MIN(IPBFSZ,256);   /* 'TRT' UP TO 256 CHARS         */
         LH    REG3,IPBFSZ(,SAVEREG)                               0409
         LA    @04,256                                             0409
         CR    REG3,@04                                            0409
         BNH   *+6
         LR    REG3,@04                                            0409
*           REG1=0;                 /* CLEAR REGISTER BEFORE TRT     */
         SLR   REG1,REG1                                           0410
*           TRT(IPSOURCE(1:REG3),TGETEDIT(1));/* SEE IF ANY VALID    */
         L     @04,IPBUFADR(,SAVEREG)                              0411
         LR    @15,REG3                                            0411
         BCTR  @15,0                                               0411
         EX    @15,@SB02692                                        0411
*           BC(CC0,CONTIN2);        /* BRANCH IF THERE IS VALID DATA */
         BC    8,CONTIN2                                           0412
*           REG3=REG1-IPBUFADR;     /* NO. OF VALID CHARS            */
         L     @04,IPBUFADR(,SAVEREG)                              0413
         LR    REG3,REG1                                           0413
         SLR   REG3,@04                                            0413
*           IF REG3=0 THEN          /* ANY VALID AT ALL ?            */
         LTR   REG3,REG3                                           0414
         BNZ   @RF00414                                            0414
*             DO;                   /* NO, KEEP SEARCHING            */
*               IPBFSZ=IPBFSZ-1;    /* UPDATE QUEUE ELE SIZE         */
         LH    @15,IPBFSZ(,SAVEREG)                                0416
         BCTR  @15,0                                               0416
         STH   @15,IPBFSZ(,SAVEREG)                                0416
*               IPBUFADR=IPBUFADR+1;/* UPDATE QUEUE ELE ADDRESS      */
         AL    @04,@CF00050                                        0417
         ST    @04,IPBUFADR(,SAVEREG)                              0417
*             END;                                                 0418
*                                                                  0418
*           /*********************************************************/
*           /*                                                       */
*           /* FALL THRU TO CONTIN2.                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0419
*CONTIN2:                                                          0419
*                                                                  0419
*           /*********************************************************/
*           /*                                                       */
*           /* REG3 IS 0 IF FIRST CHAR IN TRT WAS INVALID. OTHERWISE */
*           /* IT IS THE NO. OF VALID CHARS IF BRANCH WASN'T TAKEN & */
*           /* IT IS MIN(IPBFSZ,256) IF BRANCH WAS TAKEN. IF REG3 IS */
*           /* 0 THEN THE DO UNTIL WILL CONTINUE SEARCHING FOR A     */
*           /* VALID CHAR, UPDATING QUEUE ELE POINTERS (UNLESS IPBFSZ*/
*           /* BECOMES 0, IN WHICH CASE THERE IS NO MORE DATA)       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0419
*         END;                      /* END DO UNTIL                  */
@RF00414 DS    0H                                                  0419
CONTIN2  DS    0H                                                  0419
@DE00408 SLR   @04,@04                                             0419
         CR    REG3,@04                                            0419
         BNE   @DC00408                                            0419
         CH    @04,IPBFSZ(,SAVEREG)                                0419
         BNE   @DL00408                                            0419
@DC00408 DS    0H                                                  0420
*       RFY                                                        0420
*        (REG0,                                                    0420
*         REG1,                                                    0420
*         REG2,                                                    0420
*         REG3) UNRSTD;                                            0420
@RF00407 DS    0H                                                  0421
*     END;                          /* END 'EDIT' OPTION PROCESSING  */
*   RFY                                                            0422
*     RTNREG RSTD;                                                 0422
@RC00356 DS    0H                                                  0423
*   RTNREG=XSASAVEA;                /* RESTORE RETURN ADDRESS        */
         L     RTNREG,XSASAVEA(,RBSECPTR)                          0423
*   RETURN;                                                        0424
@EL00004 DS    0H                                                  0424
@EF00004 DS    0H                                                  0424
@ER00004 BR    @14                                                 0424
*   RFY                                                            0425
*     RTNREG UNRSTD;                                               0425
*   END EDIT3767;                                                  0426
*EDIT3270:                                                         0427
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0427
EDIT3270 DS    0H                                                  0428
*                                                                  0428
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/*        EDIT3270 IS THE STANDARD TSO/VTAM EDIT ROUTINE FOR        */
*/*        THE 3270 TERMINAL. IT CHECKS FOR A TGET EDIT              */
*/*        REQUEST AND SCANS FOR INVALID DATA AND 3270 CONTROL CHARS */
*/*        IF SO. IT MOVES THE                                       */
*/*        DATA FROM THE INPUT QUEUE TO THE CALLER'S DATA AREA       */
*/*        AND PADS WITH BLANKS IF EDIT OPTION.                      */
*/*                                                                  */
*/*        INPUT NEEDED---XSABFRAD - CALLER' DATA ADDRESS            */
*/*                       XSAPRMSZ - CALLER'S DATA AREA SIZE         */
*/*                       IPBUFADR - QUEUE ELEMENT ADDRESS           */
*/*                       IPBFSZ   - QUEUE ELEMENT SIZE              */
*/*                       XSAEDITO - OPTION IS EDIT IF='00'          */
*/*                                                                  */
*/*        OUTPUT-----EDIT3270 UPDATES THE DATA ADDRESSES AND        */
*/*                   AREA SIZES LISTED ABOVE.                       */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*                                                                  0428
*   DCL                                                            0428
*     SBA BIT(8) CONSTANT('11'X);   /* 3270 START BUFFER ADDRES      */
*   RFY                                                            0429
*     RTNREG RSTD;                                                 0429
*   XSASAVEA=RTNREG;                /* SAVE RETURN ADDRESS           */
         ST    RTNREG,XSASAVEA(,RBSECPTR)                          0430
*   RFY                                                            0431
*     RTNREG UNRSTD;                                               0431
*   XSACURDS=0;                     /* CLEAR DATA MOVED COUNTER      */
         SLR   @04,@04                                             0432
         STH   @04,XSACURDS(,RBSECPTR)                             0432
*   IF XSAEDITO^='00'B THEN         /* 00 IS EDIT OPTION             */
         TM    XSAEDITO(RBSECPTR),B'00000011'                      0433
         BZ    @RF00433                                            0433
*     DO;                                                          0434
*                                                                  0434
*/*                                                                  */
*/*     DECREMENT 'CONTROL CHARACTER COUNT' TO KEEP TRACK OF NUMBER  */
*/*     OF CONTROL CHARACTERS THAT COULD NOT BE MOVED                */
*/*                                                                  */
*                                                                  0435
*       IPCCC=MAX(IPCCC-XSAPRMSZ,0);/* MOVE A MAX OF XSAPRMSZ CONTROL
*                                      CHARACTERS FROM QUEUE         */
         LH    @15,XSAPRMSZ(,RBSECPTR)                             0435
         SLR   @14,@14                                             0435
         IC    @14,IPCCC(,SAVEREG)                                 0435
         SLR   @14,@15                                             0435
         CR    @14,@04                                             0435
         BNL   *+6
         LR    @14,@04                                             0435
         STC   @14,IPCCC(,SAVEREG)                                 0435
*                                                                  0436
*/*     TGET ASIS DATA MOVE. IF EITHER COUNT IS ZERO ON ENTRY,       */
*/*     NOTHING TO MOVE                                              */
*/*                                                                  */
*                                                                  0436
*       IF XSAPRMSZ^=0&IPBFSZ^=0 THEN                              0436
         CR    @15,@04                                             0436
         BE    @RF00436                                            0436
         LH    @14,IPBFSZ(,SAVEREG)                                0436
         CR    @14,@04                                             0436
         BE    @RF00436                                            0436
*         DO;                                                      0437
*           RFY                                                    0438
*            (REG0,                                                0438
*             REG1,                                                0438
*             REG2,                                                0438
*             REG3) RSTD;                                          0438
*           REG0=XSABFRAD;          /* TARGET ADDR FOR 'MVCL'        */
         L     @04,XSABFRAD-1(,RBSECPTR)                           0439
         LA    @04,0(,@04)                                         0439
         LR    REG0,@04                                            0439
*           REG1=MIN(XSAPRMSZ,IPBFSZ);/* GET MINIMUM FOR MOVE        */
         LR    REG1,@14                                            0440
         CR    REG1,@15                                            0440
         BNH   *+6
         LR    REG1,@15                                            0440
*           REG2=IPBUFADR;          /* SOURCE ADDR FOR 'MVCL'        */
         L     @11,IPBUFADR(,SAVEREG)                              0441
         LR    REG2,@11                                            0441
*           REG3=REG1;              /* SAME SIZE                     */
         LR    REG3,REG1                                           0442
*           XSAPRMSZ=XSAPRMSZ-REG1; /* UPDATE CALLER'S SIZE          */
         SLR   @15,REG1                                            0443
         STH   @15,XSAPRMSZ(,RBSECPTR)                             0443
*           XSABFRAD=XSABFRAD+REG1; /* UPDATE CALLER'S ADDRESS       */
         ALR   @04,REG1                                            0444
         STCM  @04,7,XSABFRAD(RBSECPTR)                            0444
*           IPBFSZ=IPBFSZ-REG1;     /* UPDATE QUEUE ELE SIZE         */
         SLR   @14,REG1                                            0445
         STH   @14,IPBFSZ(,SAVEREG)                                0445
*           IPBUFADR=IPBUFADR+REG1; /* UPDATE QUEUE ELE ADDRESS      */
         ALR   @11,REG1                                            0446
         ST    @11,IPBUFADR(,SAVEREG)                              0446
*           XSACURDS=REG1;          /* SET AMOUNT OF DATA MOVED      */
         STH   REG1,XSACURDS(,RBSECPTR)                            0447
*           MVCL(REG0,REG2);        /* MOVE DATA FROM INPUT BUFFER TO
*                                      CALLERS DATA AREA             */
         MVCL  REG0,REG2                                           0448
*           RFY                                                    0449
*            (REG0,                                                0449
*             REG1,                                                0449
*             REG2,                                                0449
*             REG3) UNRSTD;                                        0449
*         END;                      /* END 'TGET ASIS' MOVE          */
*       ELSE                                                       0451
*         ;                         /* IF EITHER=0, NO DATA MOVE     */
@RF00436 DS    0H                                                  0452
*     END;                          /* END 'TGET ASIS'               */
*   ELSE                            /* 'TGET EDIT' DATA MOVE         */
*     DO;                                                          0453
*                                                                  0453
         B     @RC00433                                            0453
@RF00433 DS    0H                                                  0454
*       /*************************************************************/
*       /*                                                           */
*       /* POINT PAST 3270 CONTROL CHARACTERS. IPCCC IS >=0 AND <=6. */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0454
*       IPBFSZ=IPBFSZ-IPCCC;        /* ADJUST DATA COUNT             */
         SLR   @04,@04                                             0454
         IC    @04,IPCCC(,SAVEREG)                                 0454
         LH    @15,IPBFSZ(,SAVEREG)                                0454
         SLR   @15,@04                                             0454
         STH   @15,IPBFSZ(,SAVEREG)                                0454
*       IPBUFADR=IPBUFADR+IPCCC;    /* ADJUST DATA POINTER           */
         AL    @04,IPBUFADR(,SAVEREG)                              0455
         ST    @04,IPBUFADR(,SAVEREG)                              0455
*       IPCCC=0;                    /* SET CONTROL CHARACTER COUNT   */
         MVI   IPCCC(SAVEREG),X'00'                                0456
*                                                                  0457
*       /*************************************************************/
*       /*                                                           */
*       /* SCAN DATA VIA 'TRT' INSTRUCTION, MOVING VALID DATA AND    */
*       /* POINTING PAST INVALID CHAR. CONTINUE UNTIL THERE IS NO    */
*       /* MORE DATA TO MOVE OR NO ROOM TO MOVE IT TO.               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0457
*       DO WHILE XSAPRMSZ^=0&IPBFSZ^=0;                            0457
         B     @DE00457                                            0457
@DL00457 DS    0H                                                  0458
*         RFY                                                      0458
*           REG3 RSTD;                                             0458
*         REG3=MIN(IPBFSZ,XSAPRMSZ,256);/* NO MORE THAN 256 CHARS CAN
*                                      BE TESTED AT ONCE.            */
         LH    REG3,IPBFSZ(,SAVEREG)                               0459
         LH    @04,XSAPRMSZ(,RBSECPTR)                             0459
         CR    REG3,@04                                            0459
         BNH   *+6
         LR    REG3,@04                                            0459
         LA    @04,256                                             0459
         CR    REG3,@04                                            0459
         BNH   *+6
         LR    REG3,@04                                            0459
*         RFY                                                      0460
*          (REG1,                                                  0460
*           REG2) RSTD;                                            0460
*         REG1=0;                   /* CLEAR REGISTER BEFORE TRT     */
         SLR   REG1,REG1                                           0461
*         TRT(IPSOURCE(1:REG3),TGETEDIT(1));/* SEARCH FOR INVALID  0462
*                                      CHAR                          */
         L     @04,IPBUFADR(,SAVEREG)                              0462
         LR    @15,REG3                                            0462
         BCTR  @15,0                                               0462
         EX    @15,@SB02692                                        0462
*         BC(CC0,DATAOK);           /* BRANCH IF ALL DATA IS VALID   */
         BC    8,DATAOK                                            0463
*                                                                  0464
*         /***********************************************************/
*         /*                                                         */
*         /* NOT ALL DATA IS VALID..REG1 POINTS TO FIRST INVALID CHAR*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0464
*         REG3=REG1-IPBUFADR;       /* COMPUTE NO. OF VALID CHARS  0464
*                                      MOVED.                        */
         L     @04,IPBUFADR(,SAVEREG)                              0464
         LR    REG3,REG1                                           0464
         SLR   REG3,@04                                            0464
*         IF REG3^=0 THEN           /* ANY DATA TO MOVE ?            */
         LTR   REG3,REG3                                           0465
         BZ    @RF00465                                            0465
*           DO;                     /* YES                           */
*             XSATARGT(1:REG3)=IPSOURCE(1:REG3);/* MOVE DATA         */
         L     @15,XSABFRAD-1(,RBSECPTR)                           0467
         LA    @15,0(,@15)                                         0467
         LR    @14,REG3                                            0467
         BCTR  @14,0                                               0467
         EX    @14,@SM02698                                        0467
*             XSAPRMSZ=XSAPRMSZ-REG3;/* UPDATE CALLER'S SIZE         */
         LH    @04,XSAPRMSZ(,RBSECPTR)                             0468
         SLR   @04,REG3                                            0468
         STH   @04,XSAPRMSZ(,RBSECPTR)                             0468
*             XSABFRAD=XSABFRAD+REG3;/* UPDATE CALLER'S ADDRESS      */
         ALR   @15,REG3                                            0469
         STCM  @15,7,XSABFRAD(RBSECPTR)                            0469
*             XSACURDS=XSACURDS+REG3;/* INCREMENT AMT OF DATA MOVED  */
         LR    @04,REG3                                            0470
         AH    @04,XSACURDS(,RBSECPTR)                             0470
         STH   @04,XSACURDS(,RBSECPTR)                             0470
*           END;                                                   0471
*         RFY                                                      0472
*           IPSOURCE BASED(REG1);   /* REFERENCE DATA VIA REGISTER 0472
*                                                            @YM03231*/
@RF00465 DS    0H                                                  0473
*         IF IPSOURCE(1)=SBA THEN   /* IS INVALID CHAR A START BUFFER
*                                      ADDRESS ?             @YM03231*/
         CLI   IPSOURCE(REG1),X'11'                                0473
         BNE   @RF00473                                            0473
*           REG2=3;                 /* YES...PULL OUT SBA,@,@        */
         LA    REG2,3                                              0474
*         ELSE                                                     0475
*           REG2=1;                 /* NO...JUST PULL OUT ONE CHAR   */
         B     @RC00473                                            0475
@RF00473 LA    REG2,1                                              0475
*         RFY                                                      0476
*           IPSOURCE BASED(IPBUFADR);                              0476
@RC00473 DS    0H                                                  0477
*         IPBFSZ=IPBFSZ-REG3-REG2;  /* UPDATE QUEUE ELE SIZE TO AM'T
*                                      OF DATA MOVED PLUS THE INVALID
*                                      CHAR(S) THAT IS DELETED       */
         LH    @04,IPBFSZ(,SAVEREG)                                0477
         SLR   @04,REG3                                            0477
         SLR   @04,REG2                                            0477
         STH   @04,IPBFSZ(,SAVEREG)                                0477
*         IPBUFADR=IPBUFADR+REG3+REG2;/* UPDATE QUEUE ELE ADDRESS TOO*/
         LR    @04,REG3                                            0478
         AL    @04,IPBUFADR(,SAVEREG)                              0478
         ALR   @04,REG2                                            0478
         ST    @04,IPBUFADR(,SAVEREG)                              0478
*         RFY                                                      0479
*          (REG1,                                                  0479
*           REG2) UNRSTD;                                          0479
*         GO TO CONTIN3;            /* GO CONTINUE SEARCHING QUEUE 0480
*                                      ELE DATA                      */
         B     CONTIN3                                             0480
*                                                                  0481
*         /***********************************************************/
*         /*                                                         */
*         /* ALL DATA SCANNED IN 'TRT' WAS VALID                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0481
*DATAOK:                                                           0481
*         XSATARGT(1:REG3)=IPSOURCE(1:REG3);/* MOVE DATA             */
DATAOK   L     @04,XSABFRAD-1(,RBSECPTR)                           0481
         LA    @04,0(,@04)                                         0481
         LR    @02,REG3                                            0481
         BCTR  @02,0                                               0481
         L     @15,IPBUFADR(,SAVEREG)                              0481
         EX    @02,@SM02696                                        0481
*         XSAPRMSZ=XSAPRMSZ-REG3;   /* UPDATE CALLER'S DATA SIZE     */
         LH    @02,XSAPRMSZ(,RBSECPTR)                             0482
         SLR   @02,REG3                                            0482
         STH   @02,XSAPRMSZ(,RBSECPTR)                             0482
*         XSABFRAD=XSABFRAD+REG3;   /* UPDATE CALLER'S ADDRESS       */
         ALR   @04,REG3                                            0483
         STCM  @04,7,XSABFRAD(RBSECPTR)                            0483
*         IPBFSZ=IPBFSZ-REG3;       /* UPDATE QUEUE ELE SIZE         */
         LH    @04,IPBFSZ(,SAVEREG)                                0484
         SLR   @04,REG3                                            0484
         STH   @04,IPBFSZ(,SAVEREG)                                0484
*         IPBUFADR=IPBUFADR+REG3;   /* UPDATE QUEUE ELE ADDRESS      */
         ALR   @15,REG3                                            0485
         ST    @15,IPBUFADR(,SAVEREG)                              0485
*         XSACURDS=XSACURDS+REG3;   /* INCREMENT AMT OF DATA MOVED   */
         LR    @04,REG3                                            0486
         AH    @04,XSACURDS(,RBSECPTR)                             0486
         STH   @04,XSACURDS(,RBSECPTR)                             0486
*CONTIN3:                                                          0487
*                                                                  0487
*         /***********************************************************/
*         /*                                                         */
*         /* CONTINUE WITH TRT LOOP                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0487
*         RFY                                                      0487
*           REG3 UNRSTD;                                           0487
CONTIN3  DS    0H                                                  0488
*       END;                        /* END EDIT'S DO WHILE           */
@DE00457 SLR   @04,@04                                             0488
         CH    @04,XSAPRMSZ(,RBSECPTR)                             0488
         BE    @DC00457                                            0488
         CH    @04,IPBFSZ(,SAVEREG)                                0488
         BNE   @DL00457                                            0488
@DC00457 DS    0H                                                  0489
*                                                                  0489
*       /*************************************************************/
*       /*                                                           */
*       /* EITHER IPBFSZ OR XSAPRMSZ IS ZERO 1. IF XSAPRMSZ ^= 0 AND */
*       /* THIS IS END OF INPUT(IPPRTL=0), THEN PAD REMAINING BUFFER */
*       /* WITH BLANKS. 2. IF IPBFSZ ^= 0, THEN SCAN FOR ANOTHER     */
*       /* VALID CHAR, ADJUSTING IPBFSZ AND IPBUFADR. THIS IS DONE SO*/
*       /* THAT IF CALLER IS RETURNED A CODE '0C'HEX, INDICATING THAT*/
*       /* MORE DATA FOLLOWS, THEN THERE SHOULD BE VALID DATA        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0489
*       IF XSAPRMSZ^=0&IPPRTL='0'B THEN                            0489
         LH    @04,XSAPRMSZ(,RBSECPTR)                             0489
         LTR   @04,@04                                             0489
         BZ    @RF00489                                            0489
         TM    IPPRTL(SAVEREG),B'00100000'                         0489
         BNZ   @RF00489                                            0489
*         DO;                                                      0490
*                                                                  0490
*           /*********************************************************/
*           /*                                                       */
*           /* PAD INPUT AREA WITH BLANKS, BUT DON'T CHANGE XSAPRMSZ */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0491
*           RFY                                                    0491
*            (REG0,                                                0491
*             REG1,                                                0491
*             REG2,                                                0491
*             REG3) RSTD;                                          0491
*           REG0=XSABFRAD;          /* TARGET ADR FOR 'MVCL'         */
         L     REG0,XSABFRAD-1(,RBSECPTR)                          0492
         ICM   REG0,8,@CB02616                                     0492
*           REG1=XSAPRMSZ;          /* AM'T OF AREA TO MOVE INTO REG2
*                                      NOT SET SINCE COUNT WILL BE 0493
*                                      ZERO, CAUSING PAD CHAR TO BE
*                                      USED                          */
         LR    REG1,@04                                            0493
*           REG3=BLANK;             /* PADDING CHAR IS A BLANK       */
         LA    REG3,64                                             0494
*           SLL(REG3,24);           /* PUT INTO PAD POSITION         */
         SLL   REG3,24                                             0495
*           MVCL(REG0,REG2);        /* MOVE IN BLANKS & SET COUNT=0  */
         MVCL  REG0,REG2                                           0496
*         END;                                                     0497
*       IF IPBFSZ^=0 THEN           /* MORE DATA IN QUEUE ELE ? YES,
*                                      VALIDATE IT                   */
@RF00489 LH    @04,IPBFSZ(,SAVEREG)                                0498
         LTR   @04,@04                                             0498
         BZ    @RF00498                                            0498
*         DO UNTIL REG3^=0×IPBFSZ=0;                               0499
@DL00499 DS    0H                                                  0500
*           REG3=MIN(IPBFSZ,256);   /* 'TRT' UP TO 256 CHARS         */
         LH    REG3,IPBFSZ(,SAVEREG)                               0500
         LA    @04,256                                             0500
         CR    REG3,@04                                            0500
         BNH   *+6
         LR    REG3,@04                                            0500
*           REG1=0;                 /* CLEAR REGISTER BEFORE TRT     */
         SLR   REG1,REG1                                           0501
*           TRT(IPSOURCE(1:REG3),TGETEDIT(1));/* SEE IF ANY VALID    */
         L     @04,IPBUFADR(,SAVEREG)                              0502
         LR    @15,REG3                                            0502
         BCTR  @15,0                                               0502
         EX    @15,@SB02692                                        0502
*           BC(CC0,CONTIN4);        /* BRANCH IF THERE IS VALID DATA */
         BC    8,CONTIN4                                           0503
*           REG3=REG1-IPBUFADR;     /* NO. OF VALID CHARS            */
         L     @04,IPBUFADR(,SAVEREG)                              0504
         LR    REG3,REG1                                           0504
         SLR   REG3,@04                                            0504
*           IF REG3=0 THEN          /* ANY VALID AT ALL ?            */
         LTR   REG3,REG3                                           0505
         BNZ   @RF00505                                            0505
*             DO;                   /* NO, KEEP SEARCHING            */
*               IPBFSZ=IPBFSZ-1;    /* UPDATE QUEUE ELE SIZE         */
         LH    @15,IPBFSZ(,SAVEREG)                                0507
         BCTR  @15,0                                               0507
         STH   @15,IPBFSZ(,SAVEREG)                                0507
*               IPBUFADR=IPBUFADR+1;/* UPDATE QUEUE ELE ADDRESS      */
         AL    @04,@CF00050                                        0508
         ST    @04,IPBUFADR(,SAVEREG)                              0508
*             END;                                                 0509
*                                                                  0509
*           /*********************************************************/
*           /*                                                       */
*           /* FALL THRU TO CONTIN2.                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0510
*CONTIN4:                                                          0510
*                                                                  0510
*           /*********************************************************/
*           /*                                                       */
*           /* REG3 IS 0 IF FIRST CHAR IN TRT WAS INVALID. OTHERWISE */
*           /* IT IS THE NO. OF VALID CHARS IF BRANCH WASN'T TAKEN & */
*           /* IT IS MIN(IPBFSZ,256) IF BRANCH WAS TAKEN. IF REG3 IS */
*           /* 0 THEN THE DO UNTIL WILL CONTINUE SEARCHING FOR A     */
*           /* VALID CHAR, UPDATING QUEUE ELE POINTERS (UNLESS IPBFSZ*/
*           /* BECOMES 0, IN WHICH CASE THERE IS NO MORE DATA)       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0510
*         END;                      /* END DO UNTIL                  */
@RF00505 DS    0H                                                  0510
CONTIN4  DS    0H                                                  0510
@DE00499 SLR   @04,@04                                             0510
         CR    REG3,@04                                            0510
         BNE   @DC00499                                            0510
         CH    @04,IPBFSZ(,SAVEREG)                                0510
         BNE   @DL00499                                            0510
@DC00499 DS    0H                                                  0511
*       RFY                                                        0511
*        (REG0,                                                    0511
*         REG1,                                                    0511
*         REG2,                                                    0511
*         REG3) UNRSTD;                                            0511
@RF00498 DS    0H                                                  0512
*     END;                          /* END 'EDIT' OPTION PROCESSING  */
*   RFY                                                            0513
*     RTNREG RSTD;                                                 0513
@RC00433 DS    0H                                                  0514
*   RTNREG=XSASAVEA;                /* RESTORE RETURN ADDRESS        */
         L     RTNREG,XSASAVEA(,RBSECPTR)                          0514
*   RETURN;                                                        0515
@EL00005 DS    0H                                                  0515
@EF00005 DS    0H                                                  0515
@ER00005 BR    @14                                                 0515
*   RFY                                                            0516
*     RTNREG UNRSTD;                                               0516
*   END EDIT3270;                                                  0517
*   END IKTVTGET                                                   0518
*                                                                  0518
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKTTCAST)                                       */
*/*%INCLUDE SYSLIB  (IKTTVWA )                                       */
*/*%INCLUDE SYSLIB  (IKJTSB  )                                       */
*/*%INCLUDE SYSLIB  (IKTTSBX )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (ISTPAB  )                                       */
*/*%INCLUDE SYSLIB  (ISTDYPAB)                                       */
*/*%INCLUDE SYSLIB  (ISTMPST )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IEFTCT  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IKTIPARM)                                       */
*                                                                  0518
*       ;                                                          0518
@DATA    DS    0H
@SM02690 MVC   XSATARGT(0,@04),IPSOURCE(@10)
@SB02692 TRT   IPSOURCE(0,@04),TGETEDIT
@SM02694 MVC   XSATARGT(0,@02),IPSOURCE(@04)
@SM02696 MVC   XSATARGT(0,@04),IPSOURCE(@15)
@SM02698 MVC   XSATARGT(0,@15),IPSOURCE(@04)
@DATD    DSECT
         DS    0F
IKTVTGET CSECT
         DS    0F
@CF00050 DC    F'1'
@CF00035 DC    F'4'
@CF02642 DC    F'4096'
@CF02686 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IKTVTGET CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02621 DC    V(IKTRTX4)
@CV02622 DC    V(IKTIDSX4)
@CV02623 DC    V(IKTGETXT)
         DS    0D
OTPTWAIT DC    XL4'80000000'
MOREDATA DC    XL4'40000000'
SUCCESS  DC    AL1(0)
@CB02616 DC    X'00'
         DS    CL2
PATCHLBL DC    20F'0'
TGETEDIT DC    5X'01'
         DC    X'00'
         DC    16X'01'
         DC    X'00'
         DC    41X'01'
         DC    192X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TVWAPTR  EQU   @08
TSBPTR   EQU   @09
SRBPTR   EQU   @01
RBSECPTR EQU   @05
TCBPTR   EQU   @04
PRMREG0  EQU   @00
REG0     EQU   @00
PRMREG1  EQU   @01
REG1     EQU   @01
WORK1REG EQU   @01
REG2     EQU   @02
REG3     EQU   @03
WORK2REG EQU   @03
SAVEREG  EQU   @13
RTNREG   EQU   @14
ENTRYREG EQU   @15
RCREG    EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
TCAST    EQU   0
TCASUSER EQU   TCAST+4
TCASIQM  EQU   TCAST+72
TCASFLG1 EQU   TCAST+88
TCASFLG2 EQU   TCAST+89
TVWA     EQU   0
TVWALLWA EQU   TVWA+24
TVWAATTN EQU   TVWA+85
TVWAFLG7 EQU   TVWA+110
TVWAECBL EQU   TVWA+120
TVWADLST EQU   TVWA+132
TVWAFLG1 EQU   TVWA+144
TVWATIS  EQU   TVWAFLG1
TVWATAS  EQU   TVWAFLG1
TVWAULK  EQU   TVWAFLG1
TVWAFLG2 EQU   TVWA+145
TVWAPGN  EQU   TVWAFLG2
TVWAFLG3 EQU   TVWA+146
TVWAAIGN EQU   TVWAFLG3
TVWAFLG4 EQU   TVWA+147
TVWADOOQ EQU   TVWAFLG4
TVWAKBDL EQU   TVWAFLG4
TVWAFLG5 EQU   TVWA+150
TVWATIR  EQU   TVWAFLG5
TVWAPRMT EQU   TVWAFLG5
TVWAP1ST EQU   TVWAFLG5
TVWAFLG6 EQU   TVWA+182
TVWAISYS EQU   TVWAFLG6
TSB      EQU   0
TSBASCBA EQU   TSB
TSBSTAT  EQU   TSBASCBA
TSBFLG1  EQU   TSB+4
TSBFLG2  EQU   TSB+16
TSBAUTON EQU   TSBFLG2
TSBSTAUT EQU   TSBFLG2
TSBFLG3  EQU   TSB+24
TSBATTN  EQU   TSBFLG3
TSBSPIT  EQU   TSBFLG3
TSBFLG5  EQU   TSB+25
TSBTERMC EQU   TSB+26
TSBTERM1 EQU   TSBTERMC
TSBTERM2 EQU   TSBTERMC+1
TSBSTCC  EQU   TSB+34
TSBFLG4  EQU   TSB+41
TSBIWAIT EQU   TSBFLG4
TSBCANC  EQU   TSBFLG4
TSBRCB   EQU   TSB+64
TSBLINKA EQU   TSBRCB+4
TSBTPOST EQU   TSB+72
TSBTPFLG EQU   TSBTPOST
TSBMINL  EQU   TSB+84
TSBEXTNT EQU   TSB+96
TSBX     EQU   0
TSBXFLG1 EQU   TSBX+32
TSBXTVWA EQU   TSBX+36
TSBXSRB  EQU   TSBX+56
TSBXTERM EQU   TSBX+72
TSBXTMTP EQU   TSBXTERM
SRBSECT  EQU   0
SRBFLNK  EQU   SRBSECT+4
SRBFLC   EQU   SRBSECT+12
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBMPST EQU   ASXB+16
ASXBAEQ  EQU   ASXB+168
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTMPST  EQU   0
MPSRSV07 EQU   ISTMPST+4
MPSTSOIW EQU   MPSRSV07
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
SCVTSECT EQU   0
SCVTSTAT EQU   SCVTSECT+148
SMFTCT   EQU   0
TCTSW    EQU   SMFTCT+3
TCTCRTBL EQU   SMFTCT+8
TCTIOTBL EQU   SMFTCT+12
TCTPOOL  EQU   SMFTCT+16
TCTJSTX  EQU   SMFTCT+36
TCTTJLM  EQU   SMFTCT+40
TCTLIN   EQU   SMFTCT+48
TCTPGSMF EQU   SMFTCT+64
TCTPGIN  EQU   TCTPGSMF
TCTPGOUT EQU   TCTPGSMF+4
TCTCORE  EQU   0
TCTTIOT  EQU   0
TCTPLEXT EQU   TCTTIOT
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBEXSAVE EQU   XRBESA
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00081 EQU   RBSECT+10
@NM00082 EQU   @NM00081
RBTRSVRB EQU   @NM00082
@NM00084 EQU   @NM00081+1
RBETXR   EQU   @NM00084
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00091 EQU   RBSECT+28
@NM00092 EQU   @NM00091
IRBEND   EQU   RBSECT+96
@NM00095 EQU   RBSECT+96
RBRSV138 EQU   @NM00095+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFX    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IPSOURCE EQU   0
XSATARGT EQU   0
DYNAMARA EQU   0
IPARMS   EQU   DYNAMARA+72
IPBUFADR EQU   IPARMS
IPREQ    EQU   IPARMS+4
IPRC     EQU   IPARMS+5
IPBFSZ   EQU   IPARMS+6
IPFLAGS  EQU   IPARMS+8
IPPRTL   EQU   IPFLAGS+1
IPCCC    EQU   IPFLAGS+2
IPTRMTYP EQU   IPFLAGS+3
IPNXFLGS EQU   IPARMS+16
PRMLSTAD EQU   DYNAMARA+92
IKTQMIN  EQU   0
STATUS   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTOPTE  EQU   CVTS01+188
CVTLSMQ  EQU   CVTS01+268
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTTCASP EQU   CVTS01+664
TCASTPTR EQU   CVTTCASP
ASCBPTR  EQU   PSAAOLD
ASXBPTR  EQU   ASCBASXB
SCVTSPTR EQU   CVTABEND
TCTIODSP EQU   TCTPLEXT+8
TCTDCBLE EQU   TCTIODSP+4
TCTDDENT EQU   TCTDCBLE+4
TCTFLGS  EQU   TCTDDENT+3
CVTPTR   EQU   FLCCVT
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
RBOPSW2  EQU   RBOPSW+4
XSA      EQU   RBEXSAVE
XSAPRM0  EQU   XSA
XSAPRMSZ EQU   XSAPRM0+2
XSAPRM1  EQU   XSA+4
XSAOPTNS EQU   XSAPRM1
XSANOWT  EQU   XSAOPTNS
XSAEDITO EQU   XSAOPTNS
XSABFRAD EQU   XSAPRM1+1
XSAWD3   EQU   XSA+8
XSAFLAG  EQU   XSAWD3
XSADMOVE EQU   XSAFLAG
XSATCBFX EQU   XSAFLAG
XSADOSWT EQU   XSAFLAG
XSADATVF EQU   XSAFLAG
XSATCBA  EQU   XSAWD3+1
XSAWD4   EQU   XSA+12
XSASAVEA EQU   XSAWD4
XSAENQAD EQU   XSA+16
XSAWD8   EQU   XSA+28
XSAUSERP EQU   XSA+32
XSAWD9   EQU   XSAUSERP
XSARETG  EQU   XSA+36
XSAWD11  EQU   XSA+40
XSARC    EQU   XSAWD11
XSADATSZ EQU   XSAWD9
XSACURDS EQU   XSAWD9+2
CONTINUE EQU   SUCCESS
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
XSAWD12  EQU   XSA+44
XSAIDAS  EQU   XSAWD11+2
@NM00125 EQU   XSAWD11+1
XSAWD10  EQU   XSARETG
XSASAVEB EQU   XSAWD8
XSAWD7   EQU   XSAENQAD+8
XSAWD6   EQU   XSAENQAD+4
XSAWD5   EQU   XSAENQAD
XSARETY  EQU   XSAFLAG
XSAAUTH  EQU   XSAFLAG
XSALOCKS EQU   XSAFLAG
XSAIDENQ EQU   XSAFLAG
XSABRK   EQU   XSAOPTNS
XSAHOLD  EQU   XSAOPTNS
XSAPRIOR EQU   XSAOPTNS
XSAUSRID EQU   XSAOPTNS
XSAPTGT  EQU   XSAOPTNS
XSAASID  EQU   XSAPRM0
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00096 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
TCTTKRLD EQU   TCTDDENT+13
TCTEXRLD EQU   TCTDDENT+12
TCTRSV10 EQU   TCTDDENT+8
TCTDCTR  EQU   TCTDDENT+4
TCTRSV26 EQU   TCTFLGS
TCTRSV25 EQU   TCTFLGS
TCTRSV24 EQU   TCTFLGS
TCTRSV23 EQU   TCTFLGS
TCTRSV22 EQU   TCTFLGS
TCTNOCNT EQU   TCTFLGS
TCTVAMDS EQU   TCTFLGS
TCTDDIND EQU   TCTFLGS
TCTSCTR  EQU   TCTDDENT+2
TCTUCBP  EQU   TCTDDENT
TCTIOTSD EQU   TCTIODSP+2
TCTDCBTD EQU   TCTIODSP
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
IPNXTMTP EQU   IPNXFLGS+3
IPNXCCC  EQU   IPNXFLGS+2
@NM00131 EQU   IPNXFLGS+1
IPNXPRTL EQU   IPNXFLGS+1
IPNXPMT  EQU   IPNXFLGS+1
IPNXAVBL EQU   IPNXFLGS+1
@NM00130 EQU   IPNXFLGS
IPNXALC  EQU   IPNXFLGS
IPNXBFSZ EQU   IPARMS+14
@NM00129 EQU   IPARMS+12
@NM00128 EQU   IPFLAGS+1
IPPRMPT  EQU   IPFLAGS+1
IPAVBL   EQU   IPFLAGS+1
@NM00127 EQU   IPFLAGS
IPALLOC  EQU   IPFLAGS
@NM00126 EQU   DYNAMARA
@NM00124 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00123 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00122 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00121 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00095+8
PRBEND   EQU   @NM00095+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00095+6
RBRSV136 EQU   @NM00095+4
RBRSV135 EQU   @NM00095
@NM00094 EQU   RBSECT+32
@NM00093 EQU   @NM00091+1
RBSCF    EQU   @NM00092
RBPGMQ1  EQU   RBPGMQ+1
@NM00090 EQU   RBPGMQ
@NM00089 EQU   RBSECT+16
@NM00088 EQU   @NM00084
@NM00087 EQU   @NM00084
RBIQETP  EQU   @NM00084
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
RBPMSVRB EQU   @NM00082
RBATNXIT EQU   @NM00082
@NM00083 EQU   @NM00082
RBWAITP  EQU   @NM00082
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00082
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00080 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00079 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00078 EQU   RBOPSWB2
@NM00077 EQU   XRBPSW
@NM00076 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00075 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00074 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00073 EQU   XSTAB1
@NM00072 EQU   RBBASIC+8
@NM00071 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00070 EQU   RBPRFX
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00069 EQU   CVTFIX+248
@NM00068 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
TCTRSV11 EQU   TCTTIOT+6
TCTSZLKP EQU   TCTTIOT+4
TCTSZEXT EQU   TCTPLEXT+2
@NM00067 EQU   TCTPLEXT
TCTLCS   EQU   TCTCORE+16
TCTRBA   EQU   TCTCORE+12
TCTRSZ   EQU   TCTCORE+10
TCTMINC  EQU   TCTCORE+8
TCTHWM   EQU   TCTCORE+4
TCTLWM   EQU   TCTCORE
TCTSOUT  EQU   TCTPGSMF+16
TCTSIN   EQU   TCTPGSMF+12
TCTRGNS  EQU   TCTPGSMF+8
TCTACT   EQU   TCTPGOUT
TCTAJS   EQU   TCTPGIN
TCTPPST  EQU   SMFTCT+60
TCTAST   EQU   SMFTCT+56
TCTLOUT  EQU   SMFTCT+52
TCTWLMT  EQU   SMFTCT+44
TCTSACT  EQU   TCTTJLM
TCTSTOF  EQU   TCTJSTX
TCTRSV08 EQU   SMFTCT+32
TCTJMR   EQU   SMFTCT+28
TCTUDATA EQU   SMFTCT+24
TCTUTL   EQU   SMFTCT+20
TCTSZE   EQU   TCTPOOL+2
@NM00066 EQU   TCTPOOL
TCTTCB   EQU   SMFTCT+4
TCTRSV07 EQU   TCTSW
TCTRSV06 EQU   TCTSW
TCTRSV05 EQU   TCTSW
TCTRSV04 EQU   TCTSW
TCTRSV03 EQU   TCTSW
TCTRSV02 EQU   TCTSW
TCTIEX   EQU   TCTSW
TCTJSTI  EQU   TCTSW
TCTQA    EQU   SMFTCT
@NM00065 EQU   SCVTSECT+180
@NM00064 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00063 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00062 EQU   SCVTSECT+160
@NM00061 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
@NM00060 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00059 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00058 EQU   SCVTSECT+128
@NM00057 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00056 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00055 EQU   SCVTSECT+108
@NM00054 EQU   SCVTSECT+104
@NM00053 EQU   SCVTSECT+100
@NM00052 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00051 EQU   SCVTSECT+88
@NM00050 EQU   SCVTSECT+84
@NM00049 EQU   SCVTSECT+80
@NM00048 EQU   SCVTSECT+76
@NM00047 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00046 EQU   SCVTSECT+56
@NM00045 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00044 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00043 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00042 EQU   SCVTSECT+24
@NM00041 EQU   SCVTSECT+20
@NM00040 EQU   SCVTSECT+16
@NM00039 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSSYSRT EQU   ISTMPST+132
MPSQEL   EQU   ISTMPST+128
MPSDBTBL EQU   ISTMPST+124
MPSASCB  EQU   ISTMPST+120
MPSTPPAB EQU   ISTMPST+88
MPSSMPAB EQU   ISTMPST+56
MPSSMRPH EQU   ISTMPST+52
MPSSRB55 EQU   ISTMPST+48
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSASID  EQU   MPSFLGA+2
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSSRBO  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSTSOIR EQU   MPSRSV07
MPSID    EQU   ISTMPST
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV18 EQU   ASXB+200
ASXBRV17 EQU   ASXB+196
ASXBRV16 EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00038 EQU   SRBSECT+40
@NM00037 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBID    EQU   SRBSECT
TSBXEND  EQU   TSBX+120
@NM00036 EQU   TSBX+116
TSBXBIND EQU   TSBX+80
TSBXRPL  EQU   TSBX+76
TSBXTMBF EQU   TSBXTERM+2
@NM00035 EQU   TSBXTERM+1
TSBXAIND EQU   TSBX+70
TSBXRSZO EQU   TSBX+69
TSBXRSZI EQU   TSBX+68
TSBXLBUF EQU   TSBX+64
TSBXCSAP EQU   TSBX+60
TSBXSRBI EQU   TSBX+52
@NM00034 EQU   TSBX+48
TSBXTOM  EQU   TSBX+44
TSBXTIM  EQU   TSBX+40
@NM00033 EQU   TSBX+33
@NM00032 EQU   TSBXFLG1
TSBXWREC EQU   TSBXFLG1
TSBXLOGF EQU   TSBXFLG1
TSBXACTV EQU   TSBXFLG1
TSBXASCI EQU   TSBXFLG1
TSBXUID  EQU   TSBX+24
@NM00031 EQU   TSBX+16
@NM00030 EQU   TSBX+12
TSBXECB  EQU   TSBX+8
TSBXBCK  EQU   TSBX+4
TSBXFWD  EQU   TSBX
TSBEND   EQU   TSB+120
TSBSF1   EQU   TSB+112
TSBTRMID EQU   TSB+104
TSBALTC  EQU   TSB+103
TSBALTR  EQU   TSB+102
TSBPRMC  EQU   TSB+101
TSBPRMR  EQU   TSB+100
TSBPSWD  EQU   TSB+88
TSBLECB  EQU   TSBMINL
TSBLINE  EQU   TSB+82
TSBSTAX  EQU   TSB+81
TSBATTNC EQU   TSB+80
TSBF1V   EQU   TSBTPOST+7
TSBF1M   EQU   TSBTPOST+6
TSBF2V   EQU   TSBTPOST+5
TSBF2M   EQU   TSBTPOST+4
TSBFLAGV EQU   TSBTPOST+3
TSBFLAGM EQU   TSBTPOST+2
TSBSBASV EQU   TSBTPOST+1
@NM00029 EQU   TSBTPFLG
@NM00028 EQU   TSBTPFLG
@NM00027 EQU   TSBTPFLG
@NM00026 EQU   TSBTPFLG
TSBNEWID EQU   TSBTPFLG
TSBTPAYI EQU   TSBTPFLG
TSBTPQCB EQU   TSBTPFLG
TSBPOSTO EQU   TSBTPFLG
TSBLINKB EQU   TSBLINKA+1
TSBPRI   EQU   TSBLINKA
TSBRQCB  EQU   TSBRCB
TSBCTCB  EQU   TSB+60
TSBERSDS EQU   TSB+56
TSBAUTOI EQU   TSB+52
TSBAUTOS EQU   TSB+48
TSBATNCC EQU   TSB+44
TSBASRCE EQU   TSB+42
TSBHLDL  EQU   TSBFLG4
TSBGETBF EQU   TSBFLG4
TSBHOLD  EQU   TSBFLG4
TSBHUNG  EQU   TSBFLG4
TSBOWAIT EQU   TSBFLG4
TSBOCAB  EQU   TSBFLG4
TSBLNNO  EQU   TSB+40
TSBATNTC EQU   TSB+38
TSBATNLC EQU   TSB+36
TSBCHDCC EQU   TSBSTCC+1
TSBLNDCC EQU   TSBSTCC
TSBWTJID EQU   TSB+32
TSBECB   EQU   TSB+28
TSBC1050 EQU   TSBTERM2
@NM00025 EQU   TSBTERM2
@NM00024 EQU   TSBTERM2
@NM00023 EQU   TSBTERM2
@NM00022 EQU   TSBTERM2
TSBCTWX  EQU   TSBTERM2
@NM00021 EQU   TSBTERM2
@NM00020 EQU   TSBTERM2
@NM00019 EQU   TSBTERM1
@NM00018 EQU   TSBTERM1
@NM00017 EQU   TSBTERM1
TSBC2741 EQU   TSBTERM1
TSBC5041 EQU   TSBTERM1
TSBCATTN EQU   TSBTERM1
TSBCBRK  EQU   TSBTERM1
TSBCIHBN EQU   TSBTERM1
TSBVTAM  EQU   TSBFLG5
TSBKEYS  EQU   TSBFLG5
@NM00016 EQU   TSBFLG5
TSBATMP  EQU   TSBFLG5
TSBNFLOP EQU   TSBFLG3
TSBNOBRK EQU   TSBFLG3
TSBTPUT  EQU   TSBFLG3
TSBAWOIP EQU   TSBFLG3
TSBNBKSP EQU   TSBFLG3
TSBTJMSG EQU   TSBFLG3
TSBIBFP  EQU   TSB+21
TSBNIBF  EQU   TSB+20
TSBITBFP EQU   TSB+17
TSBSATN2 EQU   TSBFLG2
TSBSATN1 EQU   TSBFLG2
TSBAUTOC EQU   TSBFLG2
TSBAULST EQU   TSBFLG2
TSBBRKIN EQU   TSBFLG2
TSBBIPI  EQU   TSBFLG2
TSBOBFP  EQU   TSB+13
TSBNOBF  EQU   TSB+12
TSBOTBFP EQU   TSB+9
TSBLNSZ  EQU   TSB+8
TSBWTCB  EQU   TSB+5
TSBTJBF  EQU   TSBFLG1
TSBTJIP  EQU   TSBFLG1
TSBTJOW  EQU   TSBFLG1
TSBIFLSH EQU   TSBFLG1
TSBWOWIP EQU   TSBFLG1
TSBOWIP  EQU   TSBFLG1
TSBOFLSH EQU   TSBFLG1
TSBANSR  EQU   TSBFLG1
TSBASCB  EQU   TSBASCBA+1
TSBATNLD EQU   TSBSTAT
TSB3270  EQU   TSBSTAT
TSBDISC  EQU   TSBSTAT
TSBITOFF EQU   TSBSTAT
TSBNOBUF EQU   TSBSTAT
TSBDSPLY EQU   TSBSTAT
TSBLWAIT EQU   TSBSTAT
TSBINUSE EQU   TSBSTAT
TVWAEND  EQU   TVWA+216
@NM00015 EQU   TVWA+208
TVWAUSRA EQU   TVWA+200
@NM00014 EQU   TVWA+192
TVWAFRWO EQU   TVWA+188
TVWAFRWI EQU   TVWA+184
TVWARSHW EQU   TVWA+183
@NM00013 EQU   TVWAFLG6
TVWAINB  EQU   TVWAFLG6
TVWAFMEW EQU   TVWAFLG6
TVWARCDT EQU   TVWAFLG6
TVWAIOP  EQU   TVWAFLG6
TVWAIOTR EQU   TVWAFLG6
@NM00012 EQU   TVWA+180
TVWAQMLB EQU   TVWA+176
TVWAATBO EQU   TVWA+172
TVWAATBI EQU   TVWA+168
TVWATRNM EQU   TVWA+160
TVWATABO EQU   TVWA+156
TVWATABI EQU   TVWA+152
TVWALNCT EQU   TVWA+151
TVWANFSP EQU   TVWAFLG5
TVWAFSW  EQU   TVWAFLG5
TVWAWO   EQU   TVWAFLG5
TVWAFSM  EQU   TVWAFLG5
TVWASCAN EQU   TVWAFLG5
@NM00011 EQU   TVWA+148
TVWADARC EQU   TVWAFLG4
TVWARCRS EQU   TVWAFLG4
TVWAQMEV EQU   TVWAFLG4
TVWAFLSC EQU   TVWAFLG4
TVWANOFB EQU   TVWAFLG4
TVWAFMSC EQU   TVWAFLG4
TVWATRDF EQU   TVWAFLG3
TVWATRAN EQU   TVWAFLG3
TVWAQLBU EQU   TVWAFLG3
TVWAQMIO EQU   TVWAFLG3
TVWAQMRT EQU   TVWAFLG3
TVWASDSG EQU   TVWAFLG3
TVWABRIN EQU   TVWAFLG3
TVWABIR  EQU   TVWAFLG2
TVWARTRY EQU   TVWAFLG2
TVWABKMG EQU   TVWAFLG2
TVWAERMG EQU   TVWAFLG2
TVWAGERR EQU   TVWAFLG2
TVWASCD  EQU   TVWAFLG2
TVWABFC  EQU   TVWAFLG2
TVWAOOPS EQU   TVWAFLG1
TVWALTE  EQU   TVWAFLG1
TVWAXSCD EQU   TVWAFLG1
TVWATID  EQU   TVWAFLG1
TVWATOD  EQU   TVWAFLG1
TVWADIN3 EQU   TVWADLST+8
TVWADIN2 EQU   TVWADLST+4
TVWADIN1 EQU   TVWADLST
TVWAECB3 EQU   TVWAECBL+8
TVWAECB2 EQU   TVWAECBL+4
TVWAECB1 EQU   TVWAECBL
TVWATECB EQU   TVWA+116
TVWAECB  EQU   TVWA+112
TVWALNSV EQU   TVWA+111
@NM00010 EQU   TVWAFLG7
TVWACHSE EQU   TVWAFLG7
TVWATOBB EQU   TVWAFLG7
TVWARISW EQU   TVWAFLG7
TVWARET  EQU   TVWAFLG7
TVWARDBF EQU   TVWAFLG7
TVWASND1 EQU   TVWAFLG7
TVWABKPG EQU   TVWAFLG7
TVWAVSZ  EQU   TVWA+108
TVWAVST  EQU   TVWA+104
TVWAEXL  EQU   TVWA+100
TVWARPL  EQU   TVWA+96
TVWANIB  EQU   TVWA+92
TVWAACB  EQU   TVWA+88
TVWATQL2 EQU   TVWA+87
TVWATQL1 EQU   TVWA+86
TVWACHNL EQU   TVWA+84
TVWALBUF EQU   TVWA+80
TVWAHBUF EQU   TVWA+76
TVWACLSZ EQU   TVWA+74
TVWARTR  EQU   TVWA+72
TVWAGMPT EQU   TVWA+68
TVWATCB  EQU   TVWA+64
TVWAUSMN EQU   TVWA+60
TVWACPID EQU   TVWA+56
TVWAEOQ  EQU   TVWA+52
TVWANOM  EQU   TVWA+48
TVWABOQ  EQU   TVWA+44
TVWAEIQ  EQU   TVWA+40
TVWANIM  EQU   TVWA+36
TVWABIQ  EQU   TVWA+32
TVWAQMWA EQU   TVWA+28
TVWABFPT EQU   TVWA+20
TVWATOPQ EQU   TVWA+16
TVWATOMW EQU   TVWA+12
TVWATIMW EQU   TVWA+8
TVWAPPL  EQU   TVWA
TCASTEND EQU   TCAST+136
TCASDUMP EQU   TCAST+132
TCASSCHD EQU   TCAST+128
TCASTPND EQU   TCAST+124
TCASOMJR EQU   TCAST+120
@NM00009 EQU   TCAST+118
TCASBR14 EQU   TCAST+116
TCASATTN EQU   TCAST+112
TCASASCI EQU   TCAST+108
TCASTTQH EQU   TCAST+104
@NM00008 EQU   TCAST+102
@NM00007 EQU   TCAST+100
@NM00006 EQU   TCAST+98
@NM00005 EQU   TCAST+96
TCASASCB EQU   TCAST+92
@NM00004 EQU   TCAST+90
@NM00003 EQU   TCASFLG2
@NM00002 EQU   TCASFLG1
TCASNACT EQU   TCASFLG1
TCASVSD  EQU   TCASFLG1
TCASABND EQU   TCASFLG1
TCASMDSW EQU   TCASFLG1
TCASBKMD EQU   TCASFLG1
TCASLTE  EQU   TCAST+84
TCASEXIT EQU   TCAST+80
TCASOQM  EQU   TCAST+76
TCASTSB  EQU   TCAST+68
TCASTTL  EQU   TCAST+64
TCASWA   EQU   TCAST+60
TCASFRR  EQU   TCAST+56
TCASMSGS EQU   TCAST+52
TCASDATO EQU   TCAST+48
TCASDATI EQU   TCAST+44
TCASXECB EQU   TCAST+40
TCASTID  EQU   TCAST+32
@NM00001 EQU   TCAST+31
TCASCHNL EQU   TCAST+30
TCASCRSZ EQU   TCAST+28
TCASLBUF EQU   TCAST+24
TCASHBUF EQU   TCAST+20
TCASCLSZ EQU   TCAST+18
TCASRCON EQU   TCAST+16
TCASACBP EQU   TCAST+8
TCASUMAX EQU   TCASUSER+2
TCASUSEC EQU   TCASUSER
TCASID   EQU   TCAST
@NM00120 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00119 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00118 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00117 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00116 EQU   FLCFSA
@NM00115 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00114 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00113 EQU   FLCIOA
@NM00112 EQU   FLCMCLA+15
@NM00111 EQU   FLCMCLA+14
@NM00110 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00109 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00108 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00107 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00106 EQU   FLCPER
@NM00105 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00104 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00103 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00102 EQU   FLCPIILC
@NM00101 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00100 EQU   FLCSVILC
@NM00099 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00098 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00097 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00165 EQU   @RC00164
@RC00178 EQU   @RC00177
@RC00157 EQU   @RC00139
@RC00229 EQU   @RC00227
@RF00246 EQU   @RC00242
@RC00263 EQU   @RC00255
@RF00272 EQU   @RC00255
@RC00183 EQU   @RC00178
@RC00181 EQU   @RC00178
@RC00179 EQU   @RC00178
@RF00233 EQU   @RC00229
@ENDDATA EQU   *
         END   IKTVTGET,(C'PLS0213',0701,78013)
