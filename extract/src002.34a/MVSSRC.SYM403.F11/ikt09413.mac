         TITLE '******** IKT09413:  STLINENO - TERMINAL CONTROL MACRO  *
                ********'
IKT09413 CSECT ,                                                   0001
@MAINENT BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKT09413  77.319'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*        /************************************************************/
*        /*                                                          */
*        /* SHIFT OUT PARAMETERS FROM INPUT REG.  IF ANY REMAINING   */
*        /* BITS ARE NOT ZERO, ERROR RETURN CODE 4 IS ISSUED.        */
*        /*                                                          */
*        /************************************************************/
*        REG2 = RPARM1;                /*MOVE PARM REG TO WORK REG   */
         LR    REG2,RPARM1                                         0025
*        SLL(REG2,SHIFT1);             /*SHIFT OUT MODE BIT          */
         SLR   @10,@10                                             0026
         IC    @10,SHIFT1                                          0026
         SLL   REG2,0(@10)                                         0026
*        SRL(REG2,SHIFT9);             /*SHIFT OUT LINE NUMBER       */
         SLR   @10,@10                                             0027
         IC    @10,SHIFT9                                          0027
         SRL   REG2,0(@10)                                         0027
*        IF REG2 ^= 0 THEN                                         0028
         LTR   REG2,REG2                                           0028
         BZ    @RF00028                                            0028
*          RETCODE = CODE04;                                       0029
         LA    RETCODE,4                                           0029
*        ELSE                                                      0030
*          /**********************************************************/
*          /*                                                        */
*          /* IF THE TERMINAL IN USE IS NOT A DISPLAY TERMINAL, THE  */
*          /* RETURN CODE IS SET TO 8.                               */
*          /*                                                        */
*          /**********************************************************/
*          IF TSBDSPLY = '0'B THEN                                 0030
         B     @RC00028                                            0030
@RF00028 TM    TSBDSPLY(TSBPTR),B'00100000'                        0030
         BNZ   @RF00030                                            0030
*            RETCODE = CODE08;                                     0031
         LA    RETCODE,8                                           0031
*          ELSE                                                    0032
*            /********************************************************/
*            /*                                                      */
*            /* THE LINE NUMBER SPECIFIED MUST BE GREATER THAN ZERO  */
*            /* AND NO LARGER THAN THE MAX ALLOWED NUMBER OF LINES   */
*            /* FOR THE TERMINAL IN USE. INVALID LINE NUMBER IS NOTED*/
*            /* WITH RETURN CODE 12.                                 */
*            /*                                                      */
*            /********************************************************/
*            DO;                                                   0032
         B     @RC00030                                            0032
@RF00030 DS    0H                                                  0033
*              REG2A = RPARM1;         /*SAVE PARM WITH MODE BIT   0033
*                                        INTACT.                     */
         LR    REG2A,RPARM1                                        0033
*              SLL(RPARM1,SHIFT1);     /*SHIFT OUT MODE BIT          */
         SLR   @10,@10                                             0034
         IC    @10,SHIFT1                                          0034
         SLL   RPARM1,0(@10)                                       0034
*              SRL(RPARM1,SHIFT1);     /*RESTORE LINE NUMBER         */
         SRL   RPARM1,0(@10)                                       0035
*              IF RPARM1 = 0 THEN      /*ZERO LINE NUMBER IS INVALID */
         LTR   RPARM1,RPARM1                                       0036
         BNZ   @RF00036                                            0036
*                RETCODE = CODE12;                                 0037
         LA    RETCODE,12                                          0037
*              ELSE                                                0038
*                /****************************************************/
*                /*                                                  */
*                /* IF LINE NUMBER IS NOT TOO LARGE, LINNOPROC IS    */
*                /* CALLED TO SET THE LINE NUMBER AND PERFORM MODE   */
*                /* PROCESSING.                                      */
*                /*                                                  */
*                /****************************************************/
*                                                                  0038
*                IF TSBXTMBF = LGSCREEN THEN /*LOOK FOR LARGE SCREEN */
         B     @RC00036                                            0038
@RF00036 L     @10,TSBEXTNT(,TSBPTR)                               0038
         CLC   TSBXTMBF(2,@10),@CH00057                            0038
         BNE   @RF00038                                            0038
*                  IF RPARM1 > MAXLNLG THEN /*TOO LARGE, SET RETCODE */
         CL    RPARM1,@CF00059                                     0039
         BNH   @RF00039                                            0039
*                    RETCODE = CODE12;                             0040
         LA    RETCODE,12                                          0040
*                  ELSE                     /*OK, CALL LNNOPROC      */
*                    GEN (BAL RBRANCH,LNNOPROC)                    0041
*                       SETS (RBRANCH) REFS (LNNOPROC);            0041
         B     @RC00039                                            0041
@RF00039 DS    0H                                                  0041
         BAL RBRANCH,LNNOPROC
*                ELSE                       /*MUST BE SMALL SCREEN   */
*                  IF RPARM1 > MAXLNSM THEN /*TOO LARGE, SET RETCODE */
         B     @RC00038                                            0042
@RF00038 LA    @10,12                                              0042
         CLR   RPARM1,@10                                          0042
         BNH   @RF00042                                            0042
*                    RETCODE = CODE12;                             0043
         LR    RETCODE,@10                                         0043
*                  ELSE                     /*OK, CALL LNNOPROC      */
*                    GEN (BAL RBRANCH,LNNOPROC)                    0044
*                       SETS (RBRANCH) REFS (LNNOPROC);            0044
         B     @RC00042                                            0044
@RF00042 DS    0H                                                  0044
         BAL RBRANCH,LNNOPROC
*            END;                                                  0045
*        RETURN;                                           /*@ZM20487*/
@EL00001 DS    0H                                                  0046
@EF00001 DS    0H                                                  0046
@ER00001 BR    @14                                                 0046
*        /************************************************************/
*        /*                                                          */
*        /* LNNOPROC: STORES LINE NUMBER IN TVWALNCT.  SETS FULL     */
*        /*           SCREEN MODE ON OR OFF BASED ON THE MODE BIT    */
*        /*           IN PARAMETER REGISTER 1.                       */
*        /*                                                          */
*        /************************************************************/
*LNNOPROC:                                                         0047
*        REG3 = TSBXTVWA;              /*GET ADDRES OF TVWA          */
LNNOPROC L     @10,TSBEXTNT(,TSBPTR)                               0047
         L     REG3,TSBXTVWA(,@10)                                 0047
*        RFY TVWA BASED(REG3);         /*REBASE TVWA                 */
*        GEN (STCM RPARM1,1,TVWALNCT(REG3))                        0049
*           REFS (RPARM1) SETS (TVWALNCT); /*STORE LINE NUM IN TVWA  */
         STCM RPARM1,1,TVWALNCT(REG3)
*        IF REG2A < 0 THEN             /*HIGH ORDER BIT ON?          */
         LTR   REG2A,REG2A                                         0050
         BNM   @RF00050                                            0050
*          DO;                                                     0051
*            TVWAFSM = '1'B;           /*YES-SET FULL SCREEN MODE ON */
         OI    TVWAFSM(REG3),B'01000000'                           0052
*          END;                                                    0053
*        ELSE                          /*HIGH ORDER BIT OFF          */
*          DO;                         /*TURN OFF FULL SCR MODE INDIC*/
         B     @RC00050                                            0054
@RF00050 DS    0H                                                  0055
*            TVWAFSM = '0'B;           /*FULL SCREEN MODE            */
*            TVWAWO  = '0'B;           /*FULL SCREEN WRITTEN OVER    */
*            TVWAFSW = '0'B;           /*FULL SCREEN TPUT WAITING    */
         NI    TVWAFSM(REG3),B'10001111'                           0057
*          END;                                                    0058
*        /************************************************************/
*        /*                                                          */
*        /* RETURN TO MAINLINE WITH RETURN CODE 0                    */
*        /*                                                          */
*        /************************************************************/
*        RETCODE = CODE00;             /*SET GOOD RETURN CODE        */
@RC00050 SLR   RETCODE,RETCODE                                     0059
*        GEN (BR RBRANCH)                                          0060
*           REFS (RBRANCH);            /*RETURN TO MAINLINE          */
         BR RBRANCH
*        END IKT09413                                              0061
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJTSB  )                                        *
*/*%INCLUDE SYSLIB  (IKTTSBX )                                        *
*/*%INCLUDE SYSLIB  (IKTTVWA )                                        *
*;                                                                 0061
         B     @EL00001                                            0061
@DATA    DS    0H
@CH00057 DC    H'1920'
@DATD    DSECT
         DS    0F
IKT09413 CSECT
         DS    0F
@CF00059 DC    F'24'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKT09413 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SHIFT1   DC    AL1(1)
SHIFT9   DC    AL1(9)
         DS    CL2
PATCH    DC    15F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RBASE    EQU   @12
RPARM0   EQU   @00
RPARM1   EQU   @01
REG2     EQU   @02
REG2A    EQU   @02
REG3     EQU   @03
TSBPTR   EQU   @05
RBRANCH  EQU   @11
RLINK    EQU   @14
RETCODE  EQU   @15
TSB      EQU   0
TSBASCBA EQU   TSB
TSBSTAT  EQU   TSBASCBA
TSBDSPLY EQU   TSBSTAT
TSBFLG1  EQU   TSB+4
TSBFLG2  EQU   TSB+16
TSBFLG3  EQU   TSB+24
TSBFLG5  EQU   TSB+25
TSBTERMC EQU   TSB+26
TSBTERM1 EQU   TSBTERMC
TSBTERM2 EQU   TSBTERMC+1
TSBSTCC  EQU   TSB+34
TSBFLG4  EQU   TSB+41
TSBRCB   EQU   TSB+64
TSBLINKA EQU   TSBRCB+4
TSBTPOST EQU   TSB+72
TSBTPFLG EQU   TSBTPOST
TSBMINL  EQU   TSB+84
TSBEXTNT EQU   TSB+96
TSBX     EQU   0
TSBXFLG1 EQU   TSBX+32
TSBXTVWA EQU   TSBX+36
TSBXTERM EQU   TSBX+72
TSBXTMBF EQU   TSBXTERM+2
TVWA     EQU   0
TVWAFLG7 EQU   TVWA+110
TVWAECBL EQU   TVWA+120
TVWADLST EQU   TVWA+132
TVWAFLG1 EQU   TVWA+144
TVWAFLG2 EQU   TVWA+145
TVWAFLG3 EQU   TVWA+146
TVWAFLG4 EQU   TVWA+147
TVWAFLG5 EQU   TVWA+150
TVWAFSM  EQU   TVWAFLG5
TVWAWO   EQU   TVWAFLG5
TVWAFSW  EQU   TVWAFLG5
TVWALNCT EQU   TVWA+151
TVWAFLG6 EQU   TVWA+182
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
TVWAEND  EQU   TVWA+216
@NM00027 EQU   TVWA+208
TVWAUSRA EQU   TVWA+200
@NM00026 EQU   TVWA+192
TVWAFRWO EQU   TVWA+188
TVWAFRWI EQU   TVWA+184
TVWARSHW EQU   TVWA+183
@NM00025 EQU   TVWAFLG6
TVWAINB  EQU   TVWAFLG6
TVWAFMEW EQU   TVWAFLG6
TVWARCDT EQU   TVWAFLG6
TVWAIOP  EQU   TVWAFLG6
TVWAIOTR EQU   TVWAFLG6
TVWAISYS EQU   TVWAFLG6
@NM00024 EQU   TVWA+180
TVWAQMLB EQU   TVWA+176
TVWAATBO EQU   TVWA+172
TVWAATBI EQU   TVWA+168
TVWATRNM EQU   TVWA+160
TVWATABO EQU   TVWA+156
TVWATABI EQU   TVWA+152
TVWAP1ST EQU   TVWAFLG5
TVWAPRMT EQU   TVWAFLG5
TVWANFSP EQU   TVWAFLG5
TVWATIR  EQU   TVWAFLG5
TVWASCAN EQU   TVWAFLG5
@NM00023 EQU   TVWA+148
TVWADARC EQU   TVWAFLG4
TVWARCRS EQU   TVWAFLG4
TVWAQMEV EQU   TVWAFLG4
TVWAFLSC EQU   TVWAFLG4
TVWANOFB EQU   TVWAFLG4
TVWAKBDL EQU   TVWAFLG4
TVWADOOQ EQU   TVWAFLG4
TVWAFMSC EQU   TVWAFLG4
TVWATRDF EQU   TVWAFLG3
TVWATRAN EQU   TVWAFLG3
TVWAQLBU EQU   TVWAFLG3
TVWAQMIO EQU   TVWAFLG3
TVWAQMRT EQU   TVWAFLG3
TVWAAIGN EQU   TVWAFLG3
TVWASDSG EQU   TVWAFLG3
TVWABRIN EQU   TVWAFLG3
TVWABIR  EQU   TVWAFLG2
TVWARTRY EQU   TVWAFLG2
TVWABKMG EQU   TVWAFLG2
TVWAERMG EQU   TVWAFLG2
TVWAGERR EQU   TVWAFLG2
TVWASCD  EQU   TVWAFLG2
TVWAPGN  EQU   TVWAFLG2
TVWABFC  EQU   TVWAFLG2
TVWAOOPS EQU   TVWAFLG1
TVWALTE  EQU   TVWAFLG1
TVWAULK  EQU   TVWAFLG1
TVWAXSCD EQU   TVWAFLG1
TVWATID  EQU   TVWAFLG1
TVWATAS  EQU   TVWAFLG1
TVWATIS  EQU   TVWAFLG1
TVWATOD  EQU   TVWAFLG1
TVWADIN3 EQU   TVWADLST+8
TVWADIN2 EQU   TVWADLST+4
TVWADIN1 EQU   TVWADLST
TVWAECB3 EQU   TVWAECBL+8
TVWAECB2 EQU   TVWAECBL+4
TVWAECB1 EQU   TVWAECBL
TVWATECB EQU   TVWA+116
TVWAECB  EQU   TVWA+112
TVWALNSV EQU   TVWA+111
@NM00022 EQU   TVWAFLG7
TVWACHSE EQU   TVWAFLG7
TVWATOBB EQU   TVWAFLG7
TVWARISW EQU   TVWAFLG7
TVWARET  EQU   TVWAFLG7
TVWARDBF EQU   TVWAFLG7
TVWASND1 EQU   TVWAFLG7
TVWABKPG EQU   TVWAFLG7
TVWAVSZ  EQU   TVWA+108
TVWAVST  EQU   TVWA+104
TVWAEXL  EQU   TVWA+100
TVWARPL  EQU   TVWA+96
TVWANIB  EQU   TVWA+92
TVWAACB  EQU   TVWA+88
TVWATQL2 EQU   TVWA+87
TVWATQL1 EQU   TVWA+86
TVWAATTN EQU   TVWA+85
TVWACHNL EQU   TVWA+84
TVWALBUF EQU   TVWA+80
TVWAHBUF EQU   TVWA+76
TVWACLSZ EQU   TVWA+74
TVWARTR  EQU   TVWA+72
TVWAGMPT EQU   TVWA+68
TVWATCB  EQU   TVWA+64
TVWAUSMN EQU   TVWA+60
TVWACPID EQU   TVWA+56
TVWAEOQ  EQU   TVWA+52
TVWANOM  EQU   TVWA+48
TVWABOQ  EQU   TVWA+44
TVWAEIQ  EQU   TVWA+40
TVWANIM  EQU   TVWA+36
TVWABIQ  EQU   TVWA+32
TVWAQMWA EQU   TVWA+28
TVWALLWA EQU   TVWA+24
TVWABFPT EQU   TVWA+20
TVWATOPQ EQU   TVWA+16
TVWATOMW EQU   TVWA+12
TVWATIMW EQU   TVWA+8
TVWAPPL  EQU   TVWA
TSBXEND  EQU   TSBX+120
@NM00021 EQU   TSBX+116
TSBXBIND EQU   TSBX+80
TSBXRPL  EQU   TSBX+76
@NM00020 EQU   TSBXTERM+1
TSBXTMTP EQU   TSBXTERM
TSBXAIND EQU   TSBX+70
TSBXRSZO EQU   TSBX+69
TSBXRSZI EQU   TSBX+68
TSBXLBUF EQU   TSBX+64
TSBXCSAP EQU   TSBX+60
TSBXSRB  EQU   TSBX+56
TSBXSRBI EQU   TSBX+52
@NM00019 EQU   TSBX+48
TSBXTOM  EQU   TSBX+44
TSBXTIM  EQU   TSBX+40
@NM00018 EQU   TSBX+33
@NM00017 EQU   TSBXFLG1
TSBXWREC EQU   TSBXFLG1
TSBXLOGF EQU   TSBXFLG1
TSBXACTV EQU   TSBXFLG1
TSBXASCI EQU   TSBXFLG1
TSBXUID  EQU   TSBX+24
@NM00016 EQU   TSBX+16
@NM00015 EQU   TSBX+12
TSBXECB  EQU   TSBX+8
TSBXBCK  EQU   TSBX+4
TSBXFWD  EQU   TSBX
TSBEND   EQU   TSB+120
TSBSF1   EQU   TSB+112
TSBTRMID EQU   TSB+104
TSBALTC  EQU   TSB+103
TSBALTR  EQU   TSB+102
TSBPRMC  EQU   TSB+101
TSBPRMR  EQU   TSB+100
TSBPSWD  EQU   TSB+88
TSBLECB  EQU   TSBMINL
TSBLINE  EQU   TSB+82
TSBSTAX  EQU   TSB+81
TSBATTNC EQU   TSB+80
TSBF1V   EQU   TSBTPOST+7
TSBF1M   EQU   TSBTPOST+6
TSBF2V   EQU   TSBTPOST+5
TSBF2M   EQU   TSBTPOST+4
TSBFLAGV EQU   TSBTPOST+3
TSBFLAGM EQU   TSBTPOST+2
TSBSBASV EQU   TSBTPOST+1
@NM00014 EQU   TSBTPFLG
@NM00013 EQU   TSBTPFLG
@NM00012 EQU   TSBTPFLG
@NM00011 EQU   TSBTPFLG
TSBNEWID EQU   TSBTPFLG
TSBTPAYI EQU   TSBTPFLG
TSBTPQCB EQU   TSBTPFLG
TSBPOSTO EQU   TSBTPFLG
TSBLINKB EQU   TSBLINKA+1
TSBPRI   EQU   TSBLINKA
TSBRQCB  EQU   TSBRCB
TSBCTCB  EQU   TSB+60
TSBERSDS EQU   TSB+56
TSBAUTOI EQU   TSB+52
TSBAUTOS EQU   TSB+48
TSBATNCC EQU   TSB+44
TSBASRCE EQU   TSB+42
TSBHLDL  EQU   TSBFLG4
TSBGETBF EQU   TSBFLG4
TSBCANC  EQU   TSBFLG4
TSBHOLD  EQU   TSBFLG4
TSBHUNG  EQU   TSBFLG4
TSBOWAIT EQU   TSBFLG4
TSBIWAIT EQU   TSBFLG4
TSBOCAB  EQU   TSBFLG4
TSBLNNO  EQU   TSB+40
TSBATNTC EQU   TSB+38
TSBATNLC EQU   TSB+36
TSBCHDCC EQU   TSBSTCC+1
TSBLNDCC EQU   TSBSTCC
TSBWTJID EQU   TSB+32
TSBECB   EQU   TSB+28
TSBC1050 EQU   TSBTERM2
@NM00010 EQU   TSBTERM2
@NM00009 EQU   TSBTERM2
@NM00008 EQU   TSBTERM2
@NM00007 EQU   TSBTERM2
TSBCTWX  EQU   TSBTERM2
@NM00006 EQU   TSBTERM2
@NM00005 EQU   TSBTERM2
@NM00004 EQU   TSBTERM1
@NM00003 EQU   TSBTERM1
@NM00002 EQU   TSBTERM1
TSBC2741 EQU   TSBTERM1
TSBC5041 EQU   TSBTERM1
TSBCATTN EQU   TSBTERM1
TSBCBRK  EQU   TSBTERM1
TSBCIHBN EQU   TSBTERM1
TSBVTAM  EQU   TSBFLG5
TSBKEYS  EQU   TSBFLG5
@NM00001 EQU   TSBFLG5
TSBATMP  EQU   TSBFLG5
TSBNFLOP EQU   TSBFLG3
TSBNOBRK EQU   TSBFLG3
TSBTPUT  EQU   TSBFLG3
TSBAWOIP EQU   TSBFLG3
TSBNBKSP EQU   TSBFLG3
TSBSPIT  EQU   TSBFLG3
TSBTJMSG EQU   TSBFLG3
TSBATTN  EQU   TSBFLG3
TSBIBFP  EQU   TSB+21
TSBNIBF  EQU   TSB+20
TSBITBFP EQU   TSB+17
TSBSATN2 EQU   TSBFLG2
TSBSATN1 EQU   TSBFLG2
TSBSTAUT EQU   TSBFLG2
TSBAUTOC EQU   TSBFLG2
TSBAULST EQU   TSBFLG2
TSBBRKIN EQU   TSBFLG2
TSBAUTON EQU   TSBFLG2
TSBBIPI  EQU   TSBFLG2
TSBOBFP  EQU   TSB+13
TSBNOBF  EQU   TSB+12
TSBOTBFP EQU   TSB+9
TSBLNSZ  EQU   TSB+8
TSBWTCB  EQU   TSB+5
TSBTJBF  EQU   TSBFLG1
TSBTJIP  EQU   TSBFLG1
TSBTJOW  EQU   TSBFLG1
TSBIFLSH EQU   TSBFLG1
TSBWOWIP EQU   TSBFLG1
TSBOWIP  EQU   TSBFLG1
TSBOFLSH EQU   TSBFLG1
TSBANSR  EQU   TSBFLG1
TSBASCB  EQU   TSBASCBA+1
TSBATNLD EQU   TSBSTAT
TSB3270  EQU   TSBSTAT
TSBDISC  EQU   TSBSTAT
TSBITOFF EQU   TSBSTAT
TSBNOBUF EQU   TSBSTAT
TSBLWAIT EQU   TSBSTAT
TSBINUSE EQU   TSBSTAT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00030 EQU   @EL00001
@RC00028 EQU   @EL00001
@RC00042 EQU   @EL00001
@RC00038 EQU   @EL00001
@RC00036 EQU   @EL00001
@RC00039 EQU   @RC00038
@ENDDATA EQU   *
         END   IKT09413,(C'PLS2134',0701,77319)
