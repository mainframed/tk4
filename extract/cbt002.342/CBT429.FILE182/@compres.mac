         TITLE 'P D S  --  PDS COMPRESS                      09/28/88'
***********************************************************************
***      COMPRESS SUBCOMMAND   ADDED BY BRUCE LELAND -- APR., 1984  ***
***********************************************************************
*
         SPACE 1
COMPRESS CSECT
         USING *,R8
         SPACE 1
         CLI   #CMXFLAG,0                 LIST OPTION SET?
         BNE   *+8                        YES, BRANCH
         MVI   #CMXFLAG,&COMPLST          NO, USE THE DEFAULT
         MVI   VOLALLOC,X'40'             READ THE DSCB AGAIN
         CLI   DSPALLOC,ALLOOLD           EXCLUSIVE USE ALREADY?
         BE    CMXSYSDD                   YES, BRANCH
         CLI   #CMXSHR,1                  SHR COMPRESS DESIRED?
         BE    CMXSYSDD                   YES, BRANCH
*  ALLOCATE THE DATA SET TO COMPRESS AS "OLD"
         BAS   R2,CLOSEIT                 CLOSE THE DATA SET
         BAS   R2,DEALLDCB                UNALLOCATE THE DATA SET
         LA    R0,RESTART0                ABEND RECOVERY
         ST    R0,RECOVER                               RESTART ADDRESS
         MVI   DSPALLOC,ALLOOLD           WANT EXCLUSIVE USE NOW
         L     R15,=V(ALLOCATE)           ALLOCATION ROUTINE ADDRESS
         BASR  R14,R15                    ALLOCATE THE DATA SET?
         B     RESTART0                   NO, ERROR
         SPACE 1
         L     R8,##ADRCMD                REESTABLISH THE BASE REGISTER
         CLI   DSPALLOC,ALLOOLD           OLD ALLOCATION NOW?
         BE    CMXSYSDD                   YES, BRANCH
         CLI   #CMXSHR,1                  SHR COMPRESS DESIRED?
         BNE   RESTART2                   NO, QUIT
         SPACE 2
*  ALLOCATE COMPRESS //SYSIN FILE
CMXSYSDD XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),CMXDDNAM      REQUEST DDNAME FEEDBACK
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(20),CMXSYSIN    ADD OTHER LIST ELEMENTS
         SPACE 1
         DYNALLOC
         MVC   #CMXDDIN(8),#CMXSYS3+6     MOVE IN THE DSNAME
         SPACE 2
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   CMXERROR                   NO, BRANCH
         SPACE 3
*  ALLOCATE COMPRESS //SYSPRINT DATA SET
         SPACE 1
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),CMXDDNAM      REQUEST DDNAME FEEDBACK
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(4),CMXSYSIN     ASSUME DUMMY TEXT IS DESIRED
         CLI   #CMXFLAG,3                 NOLIST?
         BNE   *+8                        NO, BRANCH
         LA    R5,4(,R5)                  YES, USE THE DUMMY TEXT
         MVC   S99TUPTR+4(40),CMXSYSPR    ADD OTHER LIST ELEMENTS
         MVC   MSGTEXT2(9+9),CMXPRTFI     ADD PRIMARY, SECONDARY
         LA    R0,MSGTEXT2                START OF PRIMARY AMOUNT
         ST    R0,S99TUPTR+4              CHANGE ADDRESS POINTER
         LA    R0,MSGTEXT2+9              START OF SECONDARY AMOUNT
         ST    R0,S99TUPTR+4+4            CHANGE ADDRESS POINTER
         L     R15,TOTUSEDX               NUMBER OF USED MEMBER BLOCKS
         MH    R15,=H'21'                 MAXIMUM MEMBERS
         AR    R15,R15                    MAXIMUM MEMBERS*2
         SR    R14,R14
         D     R14,=F'50'                 50 MEMBERS/PAGE
         SRL   R15,4                      DIVIDED BY 16
         LA    R15,2(,R15)                ADD 2
         STCM  R15,B'0111',MSGTEXT2+6     UPDATE IN PRIMARY SPACE
         STCM  R15,B'0111',MSGTEXT2+9+6   UPDATE IN SECONDARY SPACE
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDPR(8),#CMXSYS3+6     MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BNZ   CMXERROR                   NO, BRANCH
         SPACE 2
*  ALLOCATE COMPRESS //SYSUT3 DATA SET
         SPACE 1
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBAL           ALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTERS
         SPACE 1
         MVC   #CMXSYS3(14),CMXDDNAM      REQUEST DDNAME FEEDBACK
         LA    R3,#CMXSYS3                FIRST TEXT POINTER
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO FIRST TEXT UNITS
         MVC   S99TUPTR+4(24),CMXSYSUT    ADD OTHER LIST ELEMENTS
         MVC   MSGTEXT2(9+9),CMXPRTFI     ADD PRIMARY, SECONDARY
         LA    R0,MSGTEXT2                START OF PRIMARY AMOUNT
         ST    R0,S99TUPTR+4              CHANGE ADDRESS POINTER
         LA    R0,MSGTEXT2+9              START OF SECONDARY AMOUNT
         ST    R0,S99TUPTR+4+4            CHANGE ADDRESS POINTER
         L     R15,TOTUSEDX               NUMBER OF USED MEMBER BLOCKS
         MH    R15,=H'21'                 MAXIMUM MEMBERS
         MH    R15,=H'105'
         SR    R14,R14
         D     R14,=F'100'                TOTAL SPACE IN BLOCKS
         SRL   R15,4                      DIVIDED BY 16
         LA    R15,2(,R15)                ADD 2
         STCM  R15,B'0111',MSGTEXT2+6     UPDATE IN PRIMARY SPACE
         STCM  R15,B'0111',MSGTEXT2+9+6   UPDATE IN SECONDARY SPACE
         SPACE 1
         DYNALLOC
         SPACE 2
         MVC   #CMXDDT3(8),#CMXSYS3+6     MOVE IN THE DDNAME
         DROP  R1,R3,R4,R5
         LTR   R15,R15                    SUCCESSFUL?
         BZ    CMXSTAX                    YES, BRANCH
         SPACE 2
CMXERROR ST    R15,DAIRRC                 SAVE RETURN CODE
         LA    R0,RESTART0                ABEND RECOVERY
         ST    R0,RECOVER                               RESTART ADDRESS
         LA    R14,M99RB                  POINTER TO SVC 99 BLOCK
         LA    R15,DAIRRC                 POINTER TO RETURN CODE
         LA    R0,ADDRFF02                POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFSVC99)           POINTER TO INVOCATION TYPE
         L     R2,ADDRCPPL                POINTER TO THE CPPL
         STM   R14,R2,DFDAPLP             INITIALIZE DFDAPLP, DFDRCP,
*                                           DFJEFF02, DFIDP AND DFCPPLP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                    PROBLEM WITH IKJEFF18?
         BZ    CMXERR2                    NO, BRANCH
         SPACE 1
         CVD   R15,DOUBLE
         MVI   MTHIGHL,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         SPACE 1
CMXERR2  BAS   R2,CLOSEIT                 CLOSE THE DATA SET
         BAS   R2,DEALLDCB                UNALLOCATE THE DATA SET
         B     CMXRETRN
         SPACE 3
CMXSTAX  M$MSG L480                       COMPRESS IN PROGRESS MESSAGE
         OI    ##ADRPA#,$A                DEFER ALL ATTENTIONS
         SPACE 1
         XC    WORKTBL,WORKTBL            CLEAR THE TEMPORARY TABLE
         STAX  COMPNULL,USADDR=(R7),REPLACE=NO,IBUF=0,                 X
               OBUF=(PDS480W,PDS480WL),MF=(E,WORKTBL)
         LA    R1,ZERO                    NO FIRST PARAMETER
         ST    R1,#CMXLIST
         LA    R1,#CMXDDNA                SECOND PARAMETER
         ST    R1,#CMXLIST+4
         OI    #CMXLIST+4,X'80'           MARK END OF LIST
         XC    #CMXDDNA(34),#CMXDDNA      CLEAR FIRST PORTION OF LIST
         MVI   #CMXDDNA+1,80              LENGTH OF DDNAME LIST
         MVC   #CMXDDT1,DDNAME            SYSUT1 DDNAME
         MVC   #CMXDDT2,DDNAME            SYSUT2 DDNAME
         BAS   R6,RESERVE                 RESERVE DEVICE IF REQUIRED
         XC    #SUBHOLD(28+20),#SUBHOLD
         LA    R14,#SUBHOLD+28            POINT TO FLAGS
         LA    R15,CMXCOPY                POINT TO CALLED PROGRAM
         LA    R0,#SUBHOLD+28+4           POINT TO PROGRAM NAME LENGTH
         LA    R1,#SUBHOLD+28+8           POINT TO RETURN CODE
         LA    R2,#SUBHOLD+28+12          POINT TO REASON CODE
         LA    R3,#SUBHOLD+28+16          POINT TO ABEND CODE
         LA    R4,#CMXLIST                POINT TO PARAMETER LIST
         STM   R14,R4,#SUBHOLD            UPDATE IKJEFTSR PARM LIST
         OI    #SUBHOLD+24,X'80'          INDICATE THE END OF THE LIST
         MVI   #SUBHOLD+28+3,X'02'        A PROGRAM IS BEING INVOKED
         MVI   #SUBHOLD+28+4+3,8          PROGRAM NAME LENGTH IS 8
         SPACE 1
COMPRZAP LA    R0,3239  **TO BE ZAPPED    PASSWORD
         SVC   247      **TO BE ZAPPED    GET AUTHORIZED
         ORG   *-2      -- NOTE --        OVERLAY THE SVC CALL
         NOPR  0        **TO BE ZAPPED    OVERLAY THE SVC CALL
         LA    R3,##SUBCAL                WHO TO ATTACH
         LA    R1,#CMXLIST                PARAMETERS TO PASS
         CLC   ##SUBCAL(8),CMXEFTSR       INVOKE IKJEFTSR?
         BNE   COMPNLNK                   NO, BRANCH
         LA    R1,#SUBHOLD                POINT TO THE PARAMETER LIST
         SPACE 2
COMPNLNK BAS   R2,ATTACH                  SPFCOPY/IEBCOPY/$PDSFAST
COMPLINK SR    R0,R0                      UNAUTHORIZATION CODE
         SVC   247      **TO BE ZAPPED    GET UNAUTHORIZED
         ORG   *-2      -- NOTE --        OVERLAY THE SVC CALL
         NOPR  0        **TO BE ZAPPED    OVERLAY THE SVC CALL
         SPACE 3
         BAS   R2,DEQ                     RELEASE ANY RESERVES
         BAS   R2,CLOSEIT                 CLOSE THE DATA SET
         BAS   R2,DEALLDCB                UNALLOCATE THE DATA SET
         LA    R0,RESTART0                ABEND RECOVERY
         ST    R0,RECOVER                               RESTART ADDRESS
         STAX  ,
         NI    ##ADRPA#,FF-$A             ALLOW ATTENTIONS AGAIN
         MVI   ATTNECB,0                  CLEAR THE ATTENTION ECB
         CLC   ##SUBCAL(8),CMXEFTSR       INVOKE IKJEFTSR?
         BNE   CMXTSROK                   NO, BRANCH
         MVC   SUBSECB+3(1),#SUBHOLD+28+11  COPY FINAL RETURN CODE
         CLI   SUBSECB+3,12               RC:12
         BL    CMXTSROK                   LOW, VALID COMPRESS
         BE    *+12                       EQUAL, ATTENTION
         CLI   SUBSECB+3,X'FF'            RETURN CODE = FF?
         BNE   CMXTSROK                   NO, BRANCH
         M$MSG L980                       ATTENTION WITH IKJEFTSR
         B     CMXRETRN
         SPACE 1
CMXTSROK CLI   SUBSECB+3,12               RETURN CODE > 12?
         BH    CMXNOPEN                   YES, BRANCH
         CLI   #CMXFLAG,3                 NOLIST REQUESTED?
         BNE   CMXOPEN                    NO, BRANCH
CMXNOPEN MVI   MTHIGHL+4,3
         SR    R15,R15
         ICM   R15,B'0001',SUBSECB+3
         CVD   R15,DOUBLE
         MVC   INSERT#1(8),##SUBCOM       SUBCOMMAND NAME
         MVC   INSERT#2-1(4),=X'40202120'
         ED    INSERT#2-1(4),DOUBLE+6
         MVI   INSERT#2,C'='
         M$MSG L171$2
         B     CMXRETRN
         SPACE 3
CMXOPEN  MVC   STOWDCB(CMXDL),CMXDCB      GET MODEL DCB
         MVC   DCBDDNAM-IHADCB+STOWDCB(8),#CMXDDPR
         MVI   OPENLIST,X'80'
         OPEN  (STOWDCB),MF=(E,OPENLIST)      OPEN SYSPRINT
         TM    DCBOFLGS-IHADCB+STOWDCB,X'10'  SUCCESSFUL OPEN?
         BO    CMXMSGIN                       YES, BRANCH
         M$MSG L865                           NO STATUS AVAILABLE
         B     CMXRETRN                       EXIT
         SPACE 3
*  PROCESS SYSPRINT RECORDS
         SPACE 1
CMXMSGIN GET   STOWDCB                    GET LIST RECORD
         CLI   1(R1),X'40'                HEADER LINE?
         BE    CMXMSGIN                   YES, IGNORE
         CLI   #CMXFLAG,2                 FULL LIST REQUESTED?
         BE    CMXMSGON                   YES, OUTPUT
         LA    R3,CMXEXCL-6               START OF EXCLUSION TABLE -6
CMXMSGCK LA    R3,6(,R3)                  NEXT MESSAGE ID
         CLC   1(6,R1),0(R3)              MESSAGE ID TO BE EXCLUDED?
         BE    CMXMSGIN                   YES, IGNORE
         CLI   0(R3),FF                   END OF TABLE?
         BNE   CMXMSGCK                   NO, LOOP
         SPACE 3
CMXMSGON MVC   MSGTEXT1(136),MSGBL132     BLANK THE MESSAGE LINE
*        CLC   1(6,R1),CMXIEB14           UNUSED TRACKS MESSAGE?
*        BNE   *+8                        NO, BRANCH
*        MVI   MSGTEXT1+1,64              YES, TRUNCATE THE MESSAGE
         MVC   MSGTEXT1+4(120),1(R1)      ADD THE IEBCOPY MESSAGE
         M$ERRST MSGTEXT1                 OUTPUT THE MESSAGE
         B     CMXMSGIN
         SPACE 3
CMXEXCL  DC    C'IEB152'           IEB152I MEMBERNAME COMPRESSED-WAS AL
         DC    C'IEB154'           IEB154I MEMBERNAME HAS BEEN SUCCESSF
         DC    C'IEB167'           IEB167I FOLLOWING MEMBER(S) COPIED F
         DC    C'IEB161'           IEB161I COMPRESS TO BE DONE USING IN
* FOLLOWING ARE FOR PDSFAST, VERSION 3.2 OR LATER:
         DC    C'----- '           -----  PDSFAST PAGE HEADER LINE
         DC    C'COPYRI'           COPYRIGHT  ... PDSFAST HEADER LINE
         DC    C'PDF101'           PDF101I START PDSFAST EXECUTION
         DC    C'PDF104'           PDF104I START COPY STEP 1
         DC    C'PDF110'           PDF110I OPERATION IS COMPRESS - INDD
         DC    C'PDF121'           PDF121I NO CONTROL CARDS FOUND ON DD
         DC    C'PDF156'           PDF156M MEMBER ........ MOVED
         DC    C'PDF189'           PDF189I END OF COPY STEP 1, CONDITIO
         DC    C'PDF195'           PDF195I END OF CONTROL CARD FILE
* FOLLOWING ARE FOR PDSFAST, VERSION 3.1 OR EARLIER:
         DC    C'PDSFAS'           PDSFAST   ... HEADER LINE
         DC    C'PDF00 '           PDF00  START EXECUTION
         DC    C'PDF06 '           PDF06   INPUT DATASET:  ...
         DC    C'PDF09 '           PDF09  MEMBER ........ - MOVED ...
         DC    X'FF'
         SPACE 2
*** THE FOLLOWING MESSAGES ARE ALSO CANDIDATES FOR SUPPRESSION:
CMXIEB14 DC    C'IEB144'           IEB144I THERE ARE XXXXXXX UNUSED TRA
***      DC    C'IEB147'           IEB147I END OF JOB X WAS HIGHEST RET
***      DC    C'IEB149'           IEB149I THERE ARE XXXXXXX UNUSED DIR
***      DC    C'IEB153'           IEB153I ALL MEMBERS COMPRESSED-ALL W
         DC    X'FF'
         SPACE 2
CMXMDONE DS    0H
         MVI   OPENLIST,X'80'
         CLOSE (STOWDCB),MF=(E,OPENLIST)  CLOSE THE SYSPRINT FILE.
         LA    R1,STOWDCB
         FREEPOOL (1)
         SPACE 2
CMXRETRN M$ERRST MSGBLANK
         LA    R1,#CMXDDIN                SYSIN DDNAME
         BAS   R2,CMXFREDD                FREE THIS DATA SET
         SPACE 1
         LA    R1,#CMXDDPR                SYSPRINT DDNAME
         BAS   R2,CMXFREDD                FREE THIS DATA SET
         SPACE 1
         LA    R1,#CMXDDT3                SYSUT3 DDNAME
         BAS   R2,CMXFREDD                FREE THIS DATA SET
         B     RESTART0
         SPACE 1
CMXFREDD CLI   0(R1),X'41'                ANY DDNAME ALLOCATED?
         BLR   R2                         NO, RETURN
         SPACE 1
         MVC   #CMXSYS3+6(8),0(R1)        DDNAME TO FREE
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBUN           UNALLOCATE
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,#CMXSYS3                TEXT POINTER
         USING S99TUNIT,R3
         MVC   S99TUKEY(6),CMXFDDNA       ADD TEXT KEYS
         ST    R3,S99TUPTR                POINT TO TEXT UNIT
         LA    R0,CMXUNALC                UNALLOC EVEN IF "PERM"
         ST    R0,S99TUPTR+4              ADD THIS ELEMENT TOO
         OI    S99TUPTR+4,X'80'           MARK END OF THE TEXT LIST
         SPACE 1
         DYNALLOC
         BR    R2
         SPACE 1
         DROP  R1,R3,R4,R5
         SPACE 2
COMPNULL BR    14                      JUST RETURN TO THE RETURN
         SPACE 2
*  COMPRESS CONSTANTS
         PRINT NOGEN
CMXDCB   DCB   DSORG=PS,DDNAME=CMX,MACRF=GL,EODAD=CMXMDONE
CMXDL    EQU   *-CMXDCB
         PRINT GEN
         SPACE 2
PDS480W  DC    C'PDS480W COMPRESS MAY NOT BE INTERRUPTED'
PDS480WL EQU   *-PDS480W
         SPACE 2
CMXEFTSR DC    CL8'IKJEFTSR'
CMXCOPY  DC    CL8'IEBCOPY'
CMXDDNAM DC    X'0055000100084040404040404040'
CMXFDDNA DC    X'000100010008'
CMXDUMMY DC    X'00240000'                       DUMMY DATA SET
CMXBLKSI DC    X'0030000100020050'               DCB=BLKSIZE=80
CMXNEW   DC    X'00040001000104'                 DISP=(NEW)
CMXDEL   DC    X'00050001000104'                 DISP=(,DELETE)
CMXCDEL  DC    X'00060001000104'                 DISP=(,,DELETE)
CMXPERM  DC    X'00520000'                       PERMANENT ALLOCATION
CMXUNALC DC    X'00070000'                       UNALLOCATE PERMANENT
         SPACE 2
         SPACE 2
CMXPRTFI DC    X'000A00010003',AL3(*-*)          SPACE=(,NNN)
CMXPRTSE DC    X'000B00010003',AL3(*-*)          SPACE=(,(,NNN))
CMXPRTIN DC    X'00090001000300181B'             SPACE=(6171)
CMXUT3IN DC    X'000900010003000050'             SPACE=(80)
         SPACE 1
CMXPRTRE DC    X'004900010001',XL1'94'           DCB=RECFM=FBA
CMXPRTLR DC    X'004200010002',AL2(121)          DCB=LRECL=121
CMXPRTBL DC    X'003000010002',AL2(6171)         DCB=BLKSIZE=6171
         SPACE 2
CMXSYSIN DC    A(CMXDUMMY,CMXBLKSI,CMXNEW,CMXDEL),X'80',AL3(CMXCDEL)
CMXSYSUT DC    A(CMXPRTFI,CMXPRTSE,CMXUT3IN)
         DC    A(CMXNEW,CMXDEL),X'80',AL3(CMXCDEL)
CMXSYSPR DC    A(CMXPRTFI,CMXPRTSE,CMXPRTIN)
         DC    A(CMXPRTRE,CMXPRTLR,CMXPRTBL)
         DC    A(CMXNEW,CMXDEL,CMXCDEL),X'80',AL3(CMXPERM)
