*        IKJTSMSG ('PDS100I ',,' -- VERSION 8.5.15   '),L100
*                                                ×
*                .-------------------------------'
*                ×
*                V
         LCLC  &MM
&MM      SETC  '15'         MODIFICATION NUMBER (MM) IN MESSAGE PDS100I
         LCLC  &FIXDATE
&FIXDATE SETC  '06/02/2000' DATE OF LAST MAINTENANCE FOR PDS
         EJECT
PDSMAIN  TITLE 'P D S  --  PDS COMMAND PROCESSOR             &FIXDATE'
*   DATA SET PDS AT LEVEL 8.5 ON  06/02/00  (DRK -- Y2K, UCB SERVICES)*
*   DATA SET PDS AT LEVEL 8.4 ON  02/05/90  (ABL -- SWA ABOVE 16 MEG) *
*   DATA SET PDS AT LEVEL 8.3 ON  09/27/88  (ABL -- SWA ABOVE 16 MEG) *
*   DATA SET PDS AT LEVEL 8.1 ON  12/17/87  (ABL -- XX LINE CMD)      *
*   DATA SET PDS AT LEVEL 8.0 ON   2/28/86  (ABL -- FOR ISPF V2)      *
*   DATA SET PDS AT LEVEL 7 AS OF  1/15/85  (SDS -- MEMLIST)          *
*   DATA SET PDS AT LEVEL 6 AS OF  7/16/83  (ABL -- MVS/XA VERSION)   *
*   DATA SET PDS AT LEVEL 5 AS OF  7/08/82  (ABL -- MEMBER GROUPS)    *
*   DATA SET PDS AT LEVEL 4 AS OF  9/30/80  (ABL -- MVS ONLY VERSION) *
*   DATA SET PDS AT LEVEL 3 AS OF  1/28/80  (ABL -- MVS VERSION)      *
*   DATA SET PDS AT LEVEL 2 AS OF 11/14/77  (ABL -- MVT VERSION)      *
*   DATA SET PDS AT LEVEL 1 AS OF  6/12/75  (UCLA VERSION)            *
*   DATA SET PDS AT LEVEL 0 AS OF  3/20/72  (FIREMAN'S FUND VERSION)  *
*                                                                     *
***                                                                   *
*** BEFORE ASSEMBLING, THE COPY CODE IN #PDSGEN SHOULD BE MODIFIED    *
*** TO REFLECT RESOURCES AVAILABLE AT YOUR INSTALLATION.              *
***                                                                   *
*** NOTE: PDS CAN BE LINKED INTO SYS1.LPALIB TO REDUCE EACH PDS       *
***       USER'S SWAP LOAD; HOWEVER, YOU SHOULD ALSO KEEP A COPY      *
***       OF PDS IN YOUR LINK LIST (WITH THE SAME OR A DIFFERENT      *
***       MEMBER NAME) AS A BACKUP IN CASE YOUR LPALIB IS REPLACED    *
***       IN A FUTURE SYSTEM.                                         *
***                                                                   *
         TITLE 'P D S  --  PDS SUPPORT REPRESENTATIVES       09/28/88'
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
*                                                                     *
*                                                                     *
* PLEASE REPORT ANY PROBLEMS, ENHANCEMENTS, SUGGESTIONS OR COMMENTS   *
* CONCERNING THE PDS COMMAND TO EITHER:                               *
*                                                                     *
*     A. BRUCE LELAND             OR       STEVEN D. SMITH            *
*     SERENA INC.                                                     *
*     500 AIRPORT BLVD. - 2ND FLOOR                                   *
*     BURLINGAME, CA 94010                                            *
*     (415) 696-1800         (415) 696-1753                           *
*                                                                     *
*                                                                     *
*                                                                     *
*  IF AN ERROR OR ABEND CONDITION PERSISTS IN PDS, TRY THE            *
*  FOLLOWING STEPS FOR PROBLEM RESOLUTION:                            *
*                                                                     *
*                                                                     *
*   1.  CONTACT THE IBM SUPPORT CENTER FOR KNOWN MVS PROBLEMS         *
*                                                                     *
*                                                                     *
*   2.  REPORT THE PROBLEM (WHETHER RESOLVED OR NOT) TO BRUCE LELAND. *
*       PLEASE INCLUDE APPROPRIATE DOCUMENTATION FOR UNRESOLVED       *
*       PROBLEMS AS FOLLOWS:                                          *
*                                                                     *
*       A.  PLEASE USE AN UNLABELLED, 1600 OR 6250 BPI TAPE WITH      *
*           AS MANY FILES AS REQUIRED FOR DOCUMENTATION.              *
*                                                                     *
*       B.  INDICATE IF YOU HAVE SPF, ISPF VERSION 1 OR 2 AND IF      *
*           THE PROBLEM INVOLVES THE SPF INTERFACE CODE IN PDS.       *
*                                                                     *
*       C.  IF POSSIBLE, DUPLICATE THE ERROR ON PAPER BY EXECUTING    *
*           PDS IN BACKGROUND MODE.                                   *
*                                                                     *
*       D.  NOTE YOUR MVS OPERATING SYSTEM LEVEL (FOR EXAMPLE,        *
*           SP 1.3.3 AT 8402).                                        *
*                                                                     *
*       E.  NOTE THE PDS LEVEL (OR BETTER YET, UNLOAD A COPY OF THE   *
*           PDS SOURCE CODE INSTALLED AT YOUR INSTALLATION).          *
*                                                                     *
*       F.  UNLOAD A COPY OF THE PDS LOAD MODULE USING IEBCOPY.       *
*                                                                     *
*       G.  UNLOAD THE DATA SET IN QUESTION WITH IEBCOPY OR AN        *
*           APPROPRIATE UTILITY.                                      *
*                                                                     *
*       H.  BE SURE TO INCLUDE YOUR NAME AND PHONE NUMBER SO THAT     *
*           ANY RESULTS OR QUESTIONS CAN BE REFERRED BACK TO YOU.     *
*                                                                     *
*                                                                     *
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
         TITLE 'P D S  --  PDS COMMAND PURPOSE               06/15/98'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* TITLE -      P D S     --    TSO PDS COMMAND PROCESSOR              *
*                                                                     *
* FUNCTION -   PROVIDE A TSO USER WITH THE CAPABILITY                 *
*              TO MANIPULATE A PARTITIONED DATA SET                   *
*                                                                     *
* OPERATION -  ACCEPT FROM THE TSO USER THE NAME OF A PARTITIONED     *
*              DATA SET AND PERFORM ANY OF SEVERAL SUBCOMMANDS        *
*                                                                     *
* WRITTEN    - BY TOM SPRINGER AT FIREMAN'S FUND (NOW WITH IBM)       *
* MODIFIED   - BY WILLIAM FINKELSTEIN, WITH CITIBANK IN LOS ANGELES   *
* MODIFIED   - BY STEVEN SMITH, WITH SECURITY PACIFIC NATIONAL BANK   *
* MODIFIED   - BY BRUCE LELAND, WITH COMPUTER ASSOCIATES              *
* MAINTAINED - BY JOHN KALINICH, WITH USA LSSC IN ST. LOUIS           *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         COPY #PDSMODS
         SPACE 3
         COPY  #PDSGEN    ***  ESTABLISH THE PDS GLOBAL VALUES SS AUG84
         SPACE 2
&CBRO    SETC  'BROWSE'   ***  SPF BROWSE SERVICE NAME
&CEDI    SETC  'EDIT'     ***  SPF EDIT SERVICE NAME
         SPACE 1
         AIF   ('&MVSLEV' EQ 'MVS038').MVSOK
         AIF   ('&MVSLEV' EQ 'MVS12X').MVSOK
         AIF   ('&MVSLEV' EQ 'MVS13X').MVSOK
         AIF   ('&MVSLEV' EQ 'MVS220').MVSOK                   SS JUL88
         AIF   ('&MVSLEV' EQ 'MVS310').MVSOK                  DRK MAY98
         AIF   ('&MVSLEV' EQ 'MVS410').MVSOK                  DRK MAY98
         AIF   ('&MVSLEV' EQ 'MVS510').MVSOK                  DRK MAY98
         AIF   ('&MVSLEV' EQ 'MVS60X').MVSOK                  DRK MAY98
         SPACE 3
         MNOTE 12,'*** MVSLEV -- MVS LEVEL &MVSLEV IS INVALID ***'
         SPACE 2
         AGO   .NOGEN
.MVSOK   ANOP
         AIF   ('&CISP' EQ '').NOSPF
         AIF   ('&CISP' EQ 'SPF').SMNOTE
         AIF   ('&CISP' EQ 'ISPF').SMNOTE
         AIF   ('&CISP' EQ 'ISPFV2').SMNOTE
         SPACE 3
         MNOTE 12,'*** CISP -- SPF CONTROL &CISP IS INVALID ***'
         SPACE 2
         AGO   .NOGEN
.NOSPF   ANOP
&CISP    SETC  'NO SPF'
&NBRO    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
&NEDI    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
&NISP    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
&NSPF    SETC  ''          *** NULLIFY THE SPF SUBCOMMANDS -- NO SPF
.SMNOTE  ANOP
         SPACE 3
         MNOTE *,'&CISP INTERFACE CODE WILL BE GENERATED'
         SPACE 2
.NOERR   ANOP
         TITLE 'P D S  --  PDS PROGRAM ENTRY                 06/15/98'
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
***                                                                 ***
***    HISTORICAL SECTION:                                          ***
***                                                                 ***
***                                                                 ***
***     VERSION   LAST MOD   SIZE   IN K   # SUBS   SOURCE   HELP   ***
***     =======   ========   ====   ====   ======   ======   ====   ***
***                                                                 ***
***      PDS00    3/20/72    3E00    16K     15      3500     500   ***
***                                                                 ***
***      PDS10    6/12/75    4000    16K     15      4000     500   ***
***                                                                 ***
***      PDS20   11/14/77    4180    17K     18      4500     500   ***
***                                                                 ***
***      PDS30    1/28/80    47A0    18K     19      4851     512   ***
***                                                                 ***
***      PDS45    8/20/81    45A8    18K     22      5037     517   ***
***                                                                 ***
***      PDS52   11/08/82    6090    25K     25      6253    1123   ***
***                                                                 ***
***      PDS53    4/06/83    9610    38K     28      8978    1502   ***
***                                                                 ***
***      PDS60    9/30/83    CF28    52K     32     12068    1997   ***
***                                                                 ***
***      PDS61    2/06/84    E948    59K     34     13496    2270   ***
***                                                                 ***
***      PDS62    7/31/84   11F58    72K     39     16062    3676   ***
***                                                                 ***
***      PDS63   10/08/84   12DB0    76K     40     17124    3782   ***
***                                                                 ***
***      PDS70    1/20/85   16CD8    92K     41     20420    4112   ***
***                                                                 ***
***      PDS71    6/10/85   1B6E0   110K     44     24005    4675   ***
***                                                                 ***
***      PDS72   11/08/85   20E78   132K     46     28500    5140   ***
***                                                                 ***
***      PDS73    5/12/86   24718   146K     48     31260    5185   ***
***                                                                 ***
***      PDS80    3/09/87   29C50   168K     48     35088    5669   ***
***                                                                 ***
***      PDS81   12/18/88   2CA90   179K     50     37237    5834   ***
***                                                                 ***
***      PDS82    9/28/88   2D360   180K     52     37869    5943   ***
***                                                                 ***
***      PDS83    3/05/89   35E78   215K                            ***
***                                                                 ***
***      PDS84    2/05/90   36730   217K                            ***
***                                                                 ***
***      PDS85    6/02/00   380B0   225K     55     45084    5982   ***
***                                                                 ***
***                                                                 ***
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
         SPACE 5
PDSMAIN  M$ENTER
         WXTRN VSUBCMD,VTSOCMD      OPTIONAL PDS EXIT ROUTINES
         USING WORKAREA,R7          WORK AREA DSECT
         SPACE 1
         LA    R0,0                 POSSIBLE ZAP LOCATION
         L     R8,=A(PDSINIT)       ADDRESS OF INITIALIZATION CSECT
         BR    R8
         SPACE 1
ABEND0C1 SR    R0,R0                POSSIBLE ZAP LOCATION
         DC    H'0'                 ADDED FOR TEST FUNCTION
         SPACE 1
KLEAR    LA    R2,NEWCMD            ADDED FOR TEST FUNCTION
         L     R8,=V(CLEAR)         ADDRESS OF SUBCOMMAND
         BR    R8                   EXECUTE THE CLEAR FUNCTION
         SPACE 2
PDSINIT  CSECT
         USING *,R8
         LR    R6,R1                ADDRESS OF CPPL
         L     R1,0(,R1)            POINT TO PASSED PARAMETER LIST
         CLC   2(2,R1),=C'++'       SPF ADDRESS MARKER FROM PDS?
         BNE   GETMAIN              NO, NOT AN ENTRY FROM SPF
         TR    4(8,R1),TRTABLE      CONVERT WORK AREA
         MVC   3(8,R1),4(R1)        POINTER TO
         PACK  7(5,R1),3(9,R1)        HEXADECIMAL
         ICM   R7,B'1111',7(R1)     RESTORE ADDRESS
         ICM   R0,B'1100',PDSDATE   MM OF MM/DD/YY            ABL NOV86
         ICM   R0,B'0011',PDSDATE+3 DD OF MM/DD/YY            ABL NOV86
         ICM   R1,B'1100',PDSTIME   HH OF HH:MM               ABL NOV86
         ICM   R1,B'0011',PDSTIME+3 MM OF HH:MM               ABL NOV86
         AR    R0,R1                COMBINED                  ABL NOV86
         C     R0,0(,R7)            DATE/TIME STAMPS EQUAL?   ABL NOV86
         BE    SAMEPRGM             YES, BRANCH               ABL NOV86
         LA    R1,PDSCOMPT           ERROR MESSAGE            ABL NOV86
         LA    R0,L'PDSCOMPT         ERROR MESSAGE LENGTH     ABL NOV86
         TPUT  (1),(0),R             PUTLINE FAILED           ABL NOV86
         SPACE 2                                              ABL NOV86
         LM    R14,R12,12(R13)          SAVE REGISTERS        ABL NOV86
         LA    R15,4                    RC=4 FOR RETURN KEY   ABL NOV86
         BR    R14                      RETURN TO SPF         ABL NOV86
PDSCOMPT DC    C'PDS997E DIFFERENT VERSION OF PDS REINVOKED'  ABL NOV86
SAMEPRGM DS    0H                                             ABL NOV86
         LH    R0,PDSENTRY          NUMBER OF ENTRIES
         A     R0,=F'1'
         STH   R0,PDSENTRY
         C     R0,=F'1'             FIRST SPF ENTRY?
         BH    RETURN2              NO, END STATEMENT
         LA    R15,FIRST4K
         LA    R15,SPFMAIN-FIRST4K(,R15)  SPF REGISTER SAVE AREA
         ST    R15,8(,R13)
         ST    R13,4(,R15)          CHAIN TO SECONDARY SAVEAREA
         LR    R13,R15
         LM    R9,R12,BASES         RESTORE BASE REGISTERS
         MVI   ISPFTEXT+1,12        LENGTH OF COUNT AND "ISPF    "
         NI    FLAGSFF,FF-FSPFERR   SPF ERROR OFF
         OI    FLAGSFF,FSPFCALL     SPF CALL ACTIVE
         MVC   STAEPARM(4),STAELIST   RESET THE ESTAE EXIT
         L     R2,=A(STAEEXIT)        ESTAE EXIT ADDRESS
         ESTAE (R2),CT,PARAM=(R7),TERM=YES,MF=(E,STAEPARM)
         B     RESTART0               REALLOCATE THE DATA FILES
         SPACE 3
GETMAIN  L     R5,WORKSIZE
         LA    R0,0(,R5)                CLEAR THE TOP BYTE
         GETMAIN RU,LV=(0),SP=1,BNDRY=PAGE
         LR    R7,R1                    WORK AREA ADDRESS
         LR    R4,R1                    CLEAR WORK AREA
         SR    R1,R1                    NULL SOURCE
         MVCL  R4,R0                    FILL WITH PAD 0 FROM R1(0:7)
         SPACE 1
         L     R0,=A(DEVLISTL)          LENGTH OF WORK AREA   DRK JUN98
         GETMAIN R,LV=(0)               GETMAIN EDT WORK AREA DRK JUN98
         ST    R1,DEVLISTP              EDT WORK AREA         DRK JUN98
         SPACE 1
         L     R1,0(,R6)                POINT TO PASSED PARAMETER LIST
         CLI   2(R1),X'40'              INVOKED AS AN ISPF PGM()?
         BNH   INITADDR                 NO, BRANCH
*
***   PDS HAS BEEN INVOKED AS AN ISPF PGM()  -- TO ALLOW THE USE OF
*     NORMAL TSO SERVICES, A CPPL MUST BE BUILT.
*     A.  GETMAIN AN AREA FOR CREATED CONTROL BLOCKS IN SUBPOOL 78
*         (THE SUBPOOL TSO USES FOR ECT I/O SERVICE AND WORK AREAS)
*     B.  COPY IN THE SYSTEM UPT AND PSCB ADDRESSES
*     C.  CREATE A TSO COMMAND BUFFER FROM THE INPUT PARAMETERS
*     D.  CREATE AN ECT AREA
*         1.  THE ECT POINTS TO AN I/O SERVICE AREA
*         2.  THE I/O SERVICE AREA POINTS TO AN I/O WORK AREA WHICH
*             IS INITIALLY 32 BYTES LONG.
*     E.  A METHOD OF LOCATING THE ACTUAL TSO ECT HAS BEEN DEVELOPED.
*         IN A FOLLOWING RELEASE OF PDS, THE CREATED ECT AREA WILL
*         BE DELETED; FOR NOW, THE LOCATED ECT IS ACTUALLY USED.
*     F.  AT PROGRAM END, CLEAN UP THE OBTAINED AREA
*         1.  IF THE I/O WORK AREA WAS FREED AND EXPANDED, RELEASE
*             THE NEW I/O WORK AREA.
*         2.  RELEASE THE OBTAINED SUBPOOL 78 CONTROL BLOCK AREA.
         SPACE 1
         OI    FLAGSFF,FSPFDIAL+FSPFOPT6  SET APPROPRIATE SPF FLAGS
         MVI   SUBPDIAL,78              GETMAIN SUBPOOL
         LA    R0,16+96+64+16+32        GETMAIN AREA SIZE
         ICM   R0,B'1000',SUBPDIAL      GETMAIN SUBPOOL
         GETMAIN R,LV=(0)
         XC    0(16+96+64+16+32,R1),0(R1)
         STCM  R1,B'0111',SUBPDIAL+1    CREATED CPPL START
         LA    R2,16(,R1)               CREATED CBUF START
         LA    R3,96(,R2)               CREATED ECT START
         LA    R4,64(,R3)               CREATED I/O SERVICE AREA
         LA    R5,16(,R4)               CREATED I/O WORK AREA
         ST    R2,CPPLCBUF-CPPL(,R1)    START OF CBUF
         ST    R3,CPPLECT-CPPL(,R1)     START OF ECT
         MVI   0(R5),X'80'              MARK END OF THE LIST
         ST    R5,0(,R4)                FIRST I/O WORK ELEMENT
         ST    R5,4(,R4)                LAST USED I/O WORK ELEMENT
         MVC   8(2,R4),=H'32'           INITIAL I/O WORK AREA LENGTH
         L     R5,16                    --> CVT
         L     R5,0(,R5)                --> TCB WORDS
         L     R5,4(,R5)                --> TCB
         L     R5,180(,R5)              --> JSCB
         L     R5,264(,R5)              --> PSCB
         ST    R5,CPPLPSCB-CPPL(,R1)
         L     R5,52(,R5)               --> UPT
         ST    R5,CPPLUPT-CPPL(,R1)
         MVC   ECTPCMD-ECT(8,R3),BLANKS CLEAR THE PRIMARY COMMAND
         MVC   ECTSCMD-ECT(8,R3),BLANKS CLEAR THE SECONDARY COMMAND
         ST    R4,ECTIOWA-ECT(,R3)      START OF THE I/O SERVICE AREA
         L     R15,0(,R6)               START OF THE PARM AREA
         LR    R6,R1                    POINT TO THE CREATED CPPL
         LH    R5,0(,R15)               PARM LENGTH
         LA    R1,4(,R5)
         STH   R1,0(,R2)                CBUF STRING LENGTH
         MVC   4(92,R2),BLANK128        CLEAR THE CBUF AREA
         BCTR  R5,0                     MACHINE STRING LENGTH
         MVC   4(*-*,R2),2(R15)         <<EXECUTED>>
         EX    R5,*-6                   MOVE IN THE PARM STRING
         LA    R15,4(,R2)               PREPARE FOR STRING SCAN
         LR    R14,R15
         SPACE 1
         LA    R15,1(,R15)              FIND
         CLI   0(R15),X'40'                 FIRST
         BNE   *-8                               BLANK
         SPACE 1
         LR    R5,R15
         SR    R5,R14                   LENGTH OF PDS PROGRAM NAME
         BCTR  R5,0                     MACHINE LENGTH
         MVC   ECTPCMD-ECT(*-*,R3),4(R2)  <<EXECUTED>>
         EX    R5,*-6                   MOVE IN THE PDS PROGRAM NAME
         SPACE 1
         LA    R15,1(,R15)              FIND
         CLI   0(R15),X'40'                 NEXT
         BE    *-8                              NON-BLANK
         SPACE 1
         SR    R15,R14
         STH   R15,2(,R2)               OFFSET TO OPERANDS
         MVI   ECTSWS2-ECT(R3),ECTDEFCS DEFAULT DELETE CHARACTERS USED
         LOAD  EP=ISPLINK               ADDRESS OF SPF INTERFACE MODULE
         ST    R0,ISPLINK               SAVE ADDRESS FOR LATER
         SPACE 3
         NOP   INITADDR                   ZAP FOR TESTING
*        L     R2,X'21C'               ** SEARCH TCB'S METHOD
*        L     R2,X'7C'(,R2)              --> FIRST JSTCB
*        L     R2,X'88'(,R2)              --> DAUGHTER TCB
*        L     R2,X'50'(,R2)              --> IKJEFT01 REGISTER 8
*        L     R2,X'2C'(,R2)              --> ECT
         L     R2,X'224'               ** SEARCH ASCB METHOD   SS SEP89
         L     R2,X'6C'(,R2)              AXCB                 SS SEP89
         L     R2,X'14'(,R2)              LWA                  SS SEP89
         L     R2,X'20'(,R2)              ECT                  SS SEP89
         B     FECTUPD                    ZAP FOR TESTING
         SPACE 1
         L     R1,SUBPDIAL             ** USE THE PSCBRLGB AREA
         L     R2,CPPLPSCB-CPPL(,R1)       --> PSCB
         L     R2,PSCBRLGB-PSCB(,R2)      --> RELOGON BUFFER
         L     R2,X'100'(,R2)             --> ECT
         SPACE 1
FECTUPD  L     R1,SUBPDIAL             ** UPDATE THE ECT ADDRESS
         ST    R2,CPPLECT-CPPL(,R1)       NEW ECT POINTER
         MVC   ECTPCMD-ECT(8+8,R2),ECTPCMD-ECT(R3)
         SPACE 3
INITADDR LM    R2,R4,CPPLUPT-CPPL(R6)   INITIALIZE ADDRUPT,
         L     R5,CPPLCBUF-CPPL(R6)       ADDRPSCB, ADDRECT,
         STM   R2,R6,ADDRUPT              ADDRCBUF AND ADDRCPPL
         ST    R5,ADDRCBU2              SAVE ORIGINAL CBUF ADDR
         MVC   PDSNAME,ECTPCMD-ECT(R4)  SAVE THE PDS COMMAND NAME
         CLI   ECTSCMD-ECT(R4),X'40'      IS PDS A SUBCOMMAND?
         BE    INITADD2                   NO, BRANCH
         CLC   ECTSCMD-ECT(3,R4),=C'GO '  GO (UNDER TEST)?
         BE    INITADD2                   YES, BRANCH
         CLC   ECTSCMD-ECT(4,R4),=C'END ' RUN (UNDER TEST)?
         BE    INITADD2                   YES, BRANCH
         MVC   PDSNAME,ECTSCMD-ECT(R4)    SAVE THE PDS COMMAND NAME
         SPACE 1
*  SET DEFAULTS FOR CONTROL --
INITADD2 OI    FLAGSGG,&CONGLBL         SET DEFAULT GLOBAL VARIABLES
         OI    FLAGSJJ,&CONADEF+FCHANGEB  ALLOCATION MSG & BUFFERING
         TM    ECTSWS-ECT(R4),ECTBKGRD  BACKGROUND MODE?
         BNO   INITADD3                 NO, BRANCH
         OI    FLAGSEE,FBKGRND          YES, SET A FLAG FOR LATER
         OI    FLAGSGG,FRECVCON         YES, NO RECOVERY IS A DEFAULT
         SPACE 1
INITADD3 L     R12,=V(PDSCOMM)          BASE FOR @SUBS
         STM   R9,R12,BASES             SAVE BASE REGISTERS
         MVC   BLDLLIST,BLDLPARM        BLDL NUMBER OF MEMBERS & LENGTH
         ST    R7,8(,R13)               CHAIN
         ST    R13,4(,R7)                    SAVE
         LR    R13,R7                            AREAS
         SPACE 1
         L     R5,WORKBUFF
         LA    R0,0(,R5)                CLEAR THE TOP BYTE
         GETMAIN RU,LV=(0),SP=1,BNDRY=PAGE
         L     R0,=F'32768'             MAXIMUM BLOCKSIZE
         ST    R1,IOBUFF1               INPUT BUFFER 1
         LA    R15,FIRST4K
         LA    R15,IOBUFN-FIRST4K(,R15) FIRST BUFFER POINTER
         ST    R1,0(,R15)               INPUT BUFFER 1
         AR    R1,R0
         ST    R1,IOBUFF2               INPUT BUFFER 2
         AR    R1,R0
         ST    R1,IODIR1                FIRST DIR IOAREA
         AR    R1,R0
         ST    R1,IODIR2                SECOND DIR IOAREA
         MVI   INUMSAV+1,1              NUMBER OF INPUT BUFFERS
         SPACE 1
         LA    R1,2048(,R7)
         LA    R1,2048(,R1)             POINT TO DMEMAREA (MEMBER LIST)
         ST    R1,PMEMMIN               FIRST ELEMENT OF THE LIST
         ST    R1,PMEMMAX               LAST ELEMENT OF THE LIST
         LA    R0,$TMSGWRK-WORKAREA-4096(R1)  POINT TO $TMSGWRK
         ST    R0,MTEXTRCT              SAVE EXTRACT ADDRESS
         MVI   MTEXTRCT,124             MAXIMUM TEXT LENGTH
         LA    R1,28(,R1)               SECOND MEMBER LIST POINTER
         ST    R1,MMEMMIN               FIRST ELEMENT OF THE LIST
         ST    R1,MMEMCURR              CURRENT ELEMENT OF THE LIST
         ST    R1,MMEMMAX               LAST ELEMENT OF THE LIST
*        GTSIZE ,                       TERMINAL PAGESIZE/LINESIZE
         GTSIZE
         STM   R0,R1,PAGESIZE           LINES/SCREEN
*        ST    R1,LINESIZE              CHARACTERS/LINE
         SPACE 1
         MVC   STAEPARM(4),STAELIST     SET A ESTAE EXIT
         L     R2,=A(STAEEXIT)          ESTAE EXIT ADDRESS
         ESTAE (R2),CT,PARAM=(R7),TERM=YES,MF=(E,STAEPARM)
         SPACE 1
         LA    R14,MTCSECTP            START OF MESSAGE DESCRIPTOR
         L     R15,ADDRCPPL            START OF THE CPPL
         LA    R0,ATTNECB              ECB TO USE
         STM   R14,R0,MTPLPTR          INITIALIZE IKJEFF02 FIELDS
         OI    MTHIGH,X'80'            STANDARD LINKAGE
         OI    MTSW1,MTPUTLSW+MTJOBISW MESSAGE -- PUTLINE AND COMPRESS
         MVI   MTMSGID,C'L'            MESSAGE IDENTIFIER (FIRST BYTE)
         LA    R1,INSERT#1             ADDRESS OF INSERT 1
         ST    R1,MTADDR-1             START OF INSERT INFORMATION
         MVI   MTHIGHL,8               LENGTH OF THE STANDARD INSERT
         LA    R1,INSERT#2             ADDRESS OF INSERT 2
         ST    R1,MTADDR+4-1           START OF INSERT INFORMATION
         MVI   MTHIGHL+4,8             LENGTH OF THE STANDARD INSERT
         MVI   VOLSET,C'*'             INITIALIZE VOLSET
         MVI   FIXPDSD+4,X'80'         INITIALIZE WRITE DECB
         MVI   LASTMOD,C'*'            SET INITIAL MODULE DEFAULT
         MVI   REPLTH+1,X'FF'          SET INITIAL REPLACE LENGTH
         MVC   COMMENTR(33*4),COMMBRAN SET MAINLINE BRANCH INSTRUCTIONS
         B     SERV00
COMMBRAN B     $TMSGRT         1       ** KEEP IN SYNC WITH #MDSECT
         B     MESSAGE0        2       ** KEEP IN SYNC WITH #MDSECT
         B     MESSTXT1        3       ** KEEP IN SYNC WITH #MDSECT
         B     ATTACH          4       ** KEEP IN SYNC WITH #MDSECT
         B     READDIR         5       ** KEEP IN SYNC WITH #MDSECT
         B     NEWSTAX         6       ** KEEP IN SYNC WITH #MDSECT
         B     NEWCMD          7       ** KEEP IN SYNC WITH #MDSECT
         B     RESTART0        8       ** KEEP IN SYNC WITH #MDSECT
         B     DEFGROUP       19       ** KEEP IN SYNC WITH #MDSECT
         B     EXIT8N         10       ** KEEP IN SYNC WITH #MDSECT
         B     EXIT8M         11       ** KEEP IN SYNC WITH #MDSECT
         B     M$PUTGT        12       ** KEEP IN SYNC WITH #MDSECT
         B     CONVDATE       13       ** KEEP IN SYNC WITH #MDSECT
         B     SHUTSTW2       14       ** KEEP IN SYNC WITH #MDSECT
         B     SHUTSTOW       15       ** KEEP IN SYNC WITH #MDSECT
         B     OPENSTOW       16       ** KEEP IN SYNC WITH #MDSECT
         B     ENQMTEST       17       ** KEEP IN SYNC WITH #MDSECT
         B     SPFRECUR       18       ** KEEP IN SYNC WITH #MDSECT
         B     CLOSEIT        19       ** KEEP IN SYNC WITH #MDSECT
         B     RESTART2       20       ** KEEP IN SYNC WITH #MDSECT
         B     M$PUTLIN       21       ** KEEP IN SYNC WITH #MDSECT
         B     DEALLDCB       22       ** KEEP IN SYNC WITH #MDSECT
         B     RESERVE        23       ** KEEP IN SYNC WITH #MDSECT
         B     DEQ            24       ** KEEP IN SYNC WITH #MDSECT
         B     ABEND0C1       25       ** KEEP IN SYNC WITH #MDSECT
         B     YESNO          26       ** KEEP IN SYNC WITH #MDSECT
         B     MEMSNEXT       27       ** KEEP IN SYNC WITH #MDSECT
         B     EXIT12O        28       ** KEEP IN SYNC WITH #MDSECT
         B     DEALLOCZ       29       ** KEEP IN SYNC WITH #MDSECT
         B     CALLCMDZ       30       ** KEEP IN SYNC WITH #MDSECT
         B     YESNO1         31       ** KEEP IN SYNC WITH #MDSECT
         B     ATTACH2        32       ** KEEP IN SYNC WITH #MDSECT
         B     MFILTER        33       ** KEEP IN SYNC WITH #MDSECT
         TITLE 'P D S  --  PDS SERVICE ROUTINE ADDRESSES     09/28/88'
*
*    LOCATE THE TSO SERVICE ROUTINES AND THE DISK ADDRESS CONVERTERS
*
SERV00   LA    R2,ADDRPUTL              FIRST SERVICE ROUTINE ADDRESS
         LA    R3,MODULEN               FIRST LOAD ADDRESS
         SPACE 1
SERVLOOP L     R1,CVTPTR                CVT ADDRESS
         AH    R1,0(,R3)                OFFSET IN THE CVT
         ICM   R0,B'1111',0(R1)         ANY PRELOADED ADDRESS?
         BNZ   SERVCVTA                 YES, BRANCH
***      XC    PARMLIST(12),PARMLIST    CLEAR THE PARMLIST AREA
         LOAD  EPLOC=2(R3)  ***,SF=(E,PARMLIST)
         MVI   0(R2),X'D6'              MARK TO DELETE LATER
         SPACE 1
SERVCVTA STCM  R0,B'0111',1(R2)         UPDATE THE ADDRESS
         LA    R2,4(,R2)                NEXT SERVICE ADDRESS
         LA    R3,10(,R3)               NEXT MODULES ADDRESS
         CLI   0(R3),X'FF'              END OF MODULES?
         BNE   SERVLOOP                 NO, BRANCH
         SPACE 2
*        L     R2,ADDRPSCB              ADDRESS OF THE PSCB
*        MVC   PARMLIST(4),ENQSTEP      SET OPTION BITS FOR ENQ
*        ENQ   (SPFUSER,PSCBUSER-PSCB(R2),E,7,STEP),RET=TEST,
*              MF=(E,PARMLIST)          CHECK FOR SPF ENQ
         SPACE 1
         LINK  EP=ISPQRY                ISPF SERVICES QUERY   DRK SEP99
         LTR   R15,R15                  SPF ALREADY INITIALIZED?
         BNZ   PRIM00                   NO, BRANCH            DRK SEP99
         SPACE 1
         XI    FLAGSFF,FSPFOPT6         YES, INVERT THE OPTION 6 FLAG
         TM    FLAGSFF,FSPFDIAL         DIALOG ALREADY?
         BO    PRIM00                   YES, BRANCH
***      L     R8,=V(CLEAR)             ADDRESS OF SUBCOMMAND
***      BAS   R2,4(R8)                 ENTER AT CLEAR1
***      L     R8,=A(PDSINIT)           RESET BASE REGISTER
         TITLE 'P D S  --  PDS PRIMARY SUBCOMMAND CHECK      09/28/88'
*
*     GET THE DATA SET NAME AND ANY SUBCOMMAND FROM THE COMMAND LINE
*
         SPACE 1
PRIM00   L     R2,ADDRCBUF         COMMAND BUFFER
         LH    R3,0(,R2)           TOTAL COMMAND LENGTH
         LR    R1,R3               TOTAL COMMAND LENGTH
         BCTR  R1,0                MACHINE LENGTH
         LA    R14,FIRST4K         BASE FOR RECALLST
         MVC   RECALLST-FIRST4K(*-*,R14),0(R2) <<EXECUTED>>
         EX    R1,*-6              SAVE PREVIOUS SUBCOMMAND
         XC    RECALLST-FIRST4K(2,R14),=F'0'
         SPACE 1
         LH    R4,2(,R2)           OFFSET TO OPERANDS
         LA    R4,4(,R4)           PLUS COUNT BYTES
         LA    R2,0(R2,R4)         START OF OPERANDS
         SR    R3,R4               BYTES LEFT TO SCAN - ANY?
         BNP   PRIM90              NO, BRANCH
         SPACE 1
PRIM10   OI    0(R2),X'40'         UPPER-CASE THE OPERANDS
         CLI   0(R2),X'40'         BLANK?
         BE    PRIM20              YES, BRANCH
         LA    R2,1(,R2)           NO, TRY THE NEXT ONE
         BCT   R3,PRIM10
         B     PRIM90              NOT FOUND, BRANCH
         SPACE 1
PRIM20   OI    0(R2),X'40'         UPPER-CASE THE OPERANDS
         LA    R5,PRIMOPTN-2       PDS VALID KEYWORD TABLE START -2
         CLI   0(R2),X'40'         BLANK?
         BNE   PRIM30              NO, BRANCH
         LA    R2,1(,R2)           YES, TRY THE NEXT ONE
         BCT   R3,PRIM20
         B     PRIM90              NOT FOUND, BRANCH
         SPACE 1
PRIM30   LA    R5,2(,R5)           NEXT VALID KEYWORD ENTRY
         CLI   0(R5),X'FF'         END OF KEYWORD TABLE?
         BE    PRIM40              YES, FOUND A SUBCOMMAND
         CLC   0(1,R2),0(R5)       FIRST CHARACTER MATCH?
         BNE   PRIM30              NO, CONTINUE LOOPING
         SPACE 1
         CLI   0(R2),C'X'          XISPMODE?
         BNE   *+8                 NO, BRANCH
         OI    FLAGSGG,FOUTSOME    MATCH ON XISPMODE
         SPACE 1
         C     R3,=F'1'            ANOTHER CHARACTER?
         BNH   PRIM90              NO, NO SUBCOMMAND ADDED
         OI    1(R2),X'40'         UPPER-CASE THE NEXT CHARACTER
         CLC   1(1,R2),1(R5)       MATCH SECOND CHARACTER TOO?
         BE    PRIM10              YES, --NOT A SUBCOMMAND--
         CLI   1(R2),X'40'         SECOND CHARACTER A BLANK?
         BE    PRIM10              YES, --NOT A SUBCOMMAND--
         CLI   1(R2),C'('          PARENTHESIS FOLLOWING V (FOR VOL)?
         BE    PRIM10              YES, --NOT A SUBCOMMAND--
         EJECT
PRIM40   LA    R0,256              COUNT OF SUBCOMMAND CHARACTERS
         ICM   R0,B'1000',=X'01'   SUBPOOL 1
         GETMAIN R,LV=(0)
         MVI   0(R1),X'40'         BLANK THE
         MVC   1(255,R1),0(R1)              SUBCOMMAND STORAGE
         XC    0(4,R1),0(R1)       CLEAR THE FIRST WORD
         MVI   0(R1),1             LENGTH=1*256
         ST    R1,SUBCMNDP         SAVE THE STORAGE POINTER
         SPACE 1
PRIM42   OC    4(1,R1),0(R2)       MOVE AND UPPER-CASE THE CHARACTER
         MVI   0(R2),X'40'         BLANK THE COMMAND LINE CHARACTER
         LA    R1,1(,R1)
         LA    R2,1(,R2)
         BCT   R3,PRIM42
         SPACE 3
PRIM90   ICM   R1,B'1111',SUBCMNDP ADDRESS OF SUBCOMMAND?
         BZ    PRIM92              NO - ZERO, BRANCH
         CLC   4(4,R1),$ISM        ISPMODE?
         BE    PRIM98              YES, BRANCH
         CLC   4(4,R1),$MML        MEMLIST?
         BE    PRIM98              YES, BRANCH
         CLC   4(2,R1),$ML         ML?
         BE    PRIM98              YES, BRANCH
         B     PRIM96
PRIM92   TM    FLAGSFF,FSPFDIAL    DIALOG ALREADY?
         BNO   PRIM96              NO, DO PROGRAM IDENTIFIER
         LA    R0,=CL8'CONTROL'    FIRST PARAMETER
         LA    R1,=CL8'DISPLAY'    SECOND PARAMETER
         LA    R2,=CL8'SM     '    THIRD PARAMETER
         LA    R3,=F'1'            FOURTH PARAMETER
         STM   R0,R3,MSGTEXT2      SAVE ADDRESSES
         OI    MSGTEXT2+12,X'80'   LAST
         LA    R1,MSGTEXT2             PARAMETER
         L     R15,ISPLINK
         BASR  R14,R15             LET ISPF KNOW
         SPACE 2
PRIM96   DS    0H                  PROGRAM IDENTIFIER
         AIF   ('&ISPOPT' NE 'ISPMODE').NNISPM1
         OI    FLAGSGG,FISPMODE    SET A FLAG FOR LATER
         TM    FLAGSGG,FOUTSOME    MATCH ON XISPMODE?
         BO    PRIM97              YES, USE LINE MODE
         TM    FLAGSFF,FSPFOPT6    INVOKED UNDER ISPF?
         BNO   PRIM97              NO, BRANCH
         ICM   R1,B'1111',SUBCMNDP ANY SUBCOMMAND?
         BZ    PRIM98              NO, BRANCH
PRIM97   NI    FLAGSGG,FF-FISPMODE YES, CANNOT GET AUTOMATIC ISPMODE
.NNISPM1 ANOP
         ICM   R1,B'1111',SUBCMNDP    ADDRESS OF SUBCOMMAND?  ABL NOV86
         BNZ   PRIM98                 YES, BRANCH             ABL NOV86
         MVC   INSERT#1(8),PDSNAME
         M$MSG L100$1
         M$ERRST MSGBLANK          ONE BLANK LINE
         SPACE 2
PRIM98   L     R1,=V($CHA)         PCL FOR DATA SET NAME
         MVC   ##SUBCOM(PTW),0(R1) PCL FOR DATA SET NAME
         L     R15,=V(PARSE)       PARSE ADDRESS
         BASR  R14,R15             CALL PARSE
         B     EXIT12N             ERROR EXIT
         SPACE 2
         ICM   R1,B'1111',SUBCMNDP    ADDRESS OF SUBCOMMAND?
         ST    R1,ADDRCBUF
         BZ    PRIM99                 NO - ZERO, BRANCH
         OI    FLAGSBB,FCMD+FONESHOT  YES, INDICATE ONE SUBCOMMAND ONLY
         B     RESTART0                    SKIP THE PROGRAM MESSAGE
         SPACE 1
PRIM99   L     R1,=V(DSNAMES)      ALLOCATION STATUS ROUTINE
         ST    R1,##ADRCMD         EXECUTED AFTER OPEN OF DATA SET
         MVI   ##ADRCM#,CONTINUE   FLAG TO CONTINUE
         B     RESTART0
         SPACE 2
PRIMOPTN DC    CL2'OL'      "OLD"
         DC    CL2'SH'      "SHR"
         DC    CL2'NU'      "NUMBER"
         DC    CL2'VO'      "VOLUME" OR "VOLSET"
         DC    CL2'XI'      "XISPMODE"
         DC    X'FF'        END OF MAIN COMMAND TABLE
         DROP  R8
PDSMAIN  CSECT
         ENTRY KLEAR,OPENEXIT,NEWCMD,RETURN,CMDSCAN4
         TITLE 'P D S  --  PDS DATA SET INITIALIZATION       09/28/88'
RESTART0 DS    0H                  ** ALLOCATE OR REALLOCATE DATA SET
         SPACE 1
         MVC   DSPALLOC,DSPREQST   SET INITIAL DISPOSITION SHR/OLD
         SPACE 2
         L     R15,=A(ALLOCATE)    ALLOCATION ROUTINE ADDRESS
         XC    RECOVER,RECOVER     CANNOT RECOVER - NOT INITIALIZED YET
         BASR  R14,R15             ALLOCATE THE DATA SET
         B     EXIT12N             ALLOCATION UNSUCCESSFUL
         SPACE 1
RESTART2 MVC   INDCB(LEXCPDCB),EXCPDCB MOVE PATTERN DCB
         MVC   STOWDCB(LSAMDCB),SAMDCB ALSO FOR STOW OPERATIONS
         MVC   DCBDDNAM-IHADCB+INDCB,DDNAME
         MVC   DCBDDNAM-IHADCB+STOWDCB,DDNAME
         MVC   DCBDSORG-IHADCB+STOWDCB(1),DSORG
         TM    DSORG,DS1DSGPO                    DSORG=PO?
         BO    *+8                               YES, BRANCH
         MVI   DCBDSORG-IHADCB+STOWDCB,DS1DSGPS  NO, USE DSORG=PS
         SPACE 2
RESTART4 MVI   OPENLIST,X'00'      ** REOPEN THE DATA SET          **
         MVI   OPENLIST+4,X'80'
         XC    RECOVER,RECOVER     CANNOT RECOVER - NOT INITIALIZED YET
         XC    BLKSI(2),BLKSI
         OPEN  (STOWDCB,INPUT,INDCB,INPUT),MF=(E,OPENLIST)
         SPACE 1
         MVI   OPENLIST,X'80'
         CLOSE (STOWDCB),MF=(E,OPENLIST)       OPENED FOR DCB EXIT ONLY
         SPACE 1
         TM    DCBOFLGS-IHADCB+INDCB,DCBOFOPN  DCB OPEN?
         BNO   EXIT12O                         NO, QUIT
         EJECT
         L     R1,DCBDEBAD-IHADCB+INDCB        DEB ADDRESS
         MVC   NUMEXT+1(1),DEBNMEXT(R1)        NUMBER OF D.A. EXTENTS
         L     R4,DEBUCBAD(,R1)                ADDRESS OF FIRST UCB
         ST    R4,UCBADDR                      ADDRESS OF FIRST UCB
         MVC   BYTEUCB+1(1),UCBTYP+3(R4)       SAVE THE UCB DEVICE TYPE
         ICM   R2,B'1110',DS1REFD              PRESERVE LREF  ABL JUN88
         CLI   VOLALLOC,X'40'                  ANY VOLUME DISCOVERED?
         BNE   RESTART7                        YES, OBTAIN IS DONE
         MVC   VOLALLOC,UCBVOLI(R4)            SAVE VOLUME NAME USED
         L     R14,OBTAIN                      OBTAIN FLAGS
         LA    R15,DSNAME                      ADDRESS OF DSNAME
         LA    R0,VOLALLOC                     VOLUME SERIAL
         LA    R1,DS1FMTID                     OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST                 SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                       GET THE FORMAT 1 DSCB
         LTR   R15,R15                         SUCESSFUL OBTAIN?
         BZ    RESTART7                        YES, BRANCH
         SPACE 1
*     IF THE DSNAME IS AN ALIAS ENTRY IN A VSAM CATALOG, A LOCATE
*     WILL PUT THE TRUE NAME IN THE DSNAME FIELD -- ISSUE A LOCATE,
*     AND TRY THE OBTAIN AGAIN.
         MVC   WORKTMP(44),DSNAME              COPY DSNAME
         L     R14,LOCATE
         LA    R15,WORKTMP                     ACTUAL DSNAME
         SR    R0,R0                           NO CVOL VALUE
         LA    R1,MSGTEXT1                     LOCATE WORK AREA
         STM   R14,R1,PARMLIST                 SAVE CAMLIST PARAMETERS
         LOCATE PARMLIST
         LTR   15,15                           SUCCESSFUL LOCATE?
         BNZ   RESTART5                        NO, ERROR
         SPACE 1
         L     R14,OBTAIN                      OBTAIN FLAGS
         LA    R15,WORKTMP                     ACTUAL DSNAME
         LA    R0,VOLALLOC                     VOLUME SERIAL
         LA    R1,DS1FMTID                     OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST                 SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                       GET THE FORMAT 1 DSCB
         SPACE 1
         LTR   R15,R15                         SUCCESSFUL?
         BZ    RESTART7                        YES, BRANCH
         SPACE 1
RESTART5 M$MSG L830                     NO DSCB FOUND MESSAGE
         BAS   R2,SHUTSTW2              DELETE DATA SET ENQUEUES
         BAS   R2,CLOSEIT               CLOSE THE DATA SET
         BAS   R2,DEALLDCB              FREE THE DATA SET
RESTART6 M$PUTGT PDS381A,ATTN=EXIT12N   DATA SET RECOVERY MESSAGE
         SPACE 2
         TM    FLAGSBB,FNULL            USER WANT ANOTHER DATA SET?
         BO    RESTART6                 NULL REPLY, ASK AGAIN
         SPACE 1
         MVC   DSNLEN(SAVLEN),SAVDSN+1  RESET THE DATA SET NAME
         MVC   FULLWORD(4),##ADRCMD     SAVE CONTINUATION INFORMATION
         L     R1,=V($CHA)              PCL FOR DATA SET NAME
         MVC   ##SUBCOM(PTW),0(R1)      PCL FOR DATA SET NAME
         L     R15,=V(PARSE)            PARSE ADDRESS
         BASR  R14,R15                  INVOKE PARSE
         B     EXIT12N                  EXIT - PARSE FAILURE
         MVC   ##ADRCMD(4),FULLWORD     CONTINUATION INFORMATION
         B     RESTART0                 RETRY ALLOCATION
         SPACE 2
RESTART7 TM    FLAGSJJ,FNOREAD          REOPEN FOR LSTAR?     ABL JUN88
         BNO   *+8                      NO, BRANCH            ABL JUN88
         STCM  R2,B'1110',DS1REFD       YES, PRESERVE LREF    ABL JUN88
         SPACE 2                                              ABL JUN88
         STM   R14,R12,12(R13)                 SAVE REGISTERS ABL JUN88
         ICM   R0,B'0111',DS1LSTAR             DS1LSTAR --> MBBCCHHR
         SLL   R0,8                            MOVE TO HIGH POSTION
         L     R1,DCBDEBAD-IHADCB+INDCB        DEB ADDRESS
         LA    R2,LSTARMBB                     RETURN ADDRESS
         L     R15,ADDRCNVT                    CONVERSION ROUTINE
         LR    R3,R13                          SAVE R13
         BASR  R14,R15
         LR    R13,R3                          RESTORE R13
         LM    R14,R12,12(R13)                 RESTORE REGISTERS
         SPACE 2
         LA    R0,IOECB                        ECB ADDRESS
         ST    R0,IOBECB                       SET INTO IOB
         LA    R0,INDCB                        DCB ADDRESSS
         ST    R0,IOBDCB                       SET INTO DCB
         MVI   IOB,X'C2'                       SET IOB FLAGS
         SPACE 2
         XC    TOTUSEDX(4+4),TOTUSEDX          CLEAR TOTUSEDX/TOTALLOX
         TM    DSORG,DS1DSGPO                  PARTITIONED DATA SET?
         BNO   RESTART9                        NO, BRANCH
         SPACE 1
         L     R14,=X'01080100'                R=1, K=08, DD=256
         TRKCALC FUNCTN=TRKCAP,TYPE=BYTEUCB+1,RKDD=(14),              XX
               REGSAVE=YES,MF=(E,PARMLIST)
         ST    R0,DIRTRACK                     DIRECTORY BLOCKS/TRACK
         CLC   DS1LSTAR(3),ZERO                NULL DATA SET?
         BE    RESTART9                        YES, BRANCH
         SPACE 1
         STM   R14,R12,12(R13)                 SAVE REGISTERS
         LA    R0,1*256                        TTR=000001
         L     R1,DCBDEBAD-IHADCB+INDCB        DEB ADDRESS
         LA    R2,IOBSEEK                      OUTPUT ADDRESS
         L     R15,ADDRCNVT                    CONVERSION ROUTINE
         LR    R3,R13                          SAVE R13
         BASR  R14,R15
         LR    R13,R3                          RESTORE R13
         LM    R14,R12,12(R13)                 RESTORE REGISTERS
         SPACE 1
         LA    R1,CCW0                         START OF CHANNEL PROGRAM
         ST    R1,IOBCCW
         MVC   CCW0(7*8),CCWDIRR               CCW'S TO READ DIRECTORY
         MVC   WORKTMP(8),IOBSEEK              INITIALIZE BOTH CCHHR'S
         MVC   WORKTMP+8(8),IOBSEEK            INITIALIZE BOTH CCHHR'S
         LA    R1,WORKTMP+3                    USED CCHHR
         STCM  R1,B'0111',CCW1+1
         LA    R1,CCW1                         TIC TARGET 1
         STCM  R1,B'0111',CCW3+1
         LA    R1,WORKTMP+8+3                  TOTAL CCHHR
         STCM  R1,B'0111',CCW4+1
         LA    R1,CCW4                         TIC TARGET 2
         STCM  R1,B'0111',CCW6+1
         SPACE 2
         MVI   IOECB,0
         EXCP  IOB
         WAIT  ECB=IOECB
         MVI   IOB,X'C2'                       SET IOB FLAGS
         NI    DCBIFLG-IHADCB+INDCB,X'3B'      RESET DCB ERROR FLAG
         SPACE 1
         STM   R2,R12,28(R13)                  CONVERT CCHHR TO TTR
         LA    R2,WORKTMP
         L     R1,INDCB+(DCBDEBAD-IHADCB)
         L     R15,ADDRRLTV
         LR    R3,R13
         BASR  R14,R15
         LR    R13,R3
         LM    R2,R12,28(R13)
         SRDL  R0,16                           00TT RXXX
         SRL   R1,24                           00TT 000R
         MH    R0,DIRTRACK+2
         AR    R0,R1
         ST    R0,TOTUSEDX                     USED DIR. BLOCKS
         SPACE 1
         STM   R2,R12,28(R13)                  CONVERT CCHHR TO TTR
         LA    R2,WORKTMP+8
         L     R1,INDCB+(DCBDEBAD-IHADCB)
         L     R15,ADDRRLTV
         LR    R3,R13
         BASR  R14,R15
         LR    R13,R3
         LM    R2,R12,28(R13)
         SRDL  R0,16                           00TT RXXX
         SRL   R1,24                           00TT 000R
         MH    R0,DIRTRACK+2
         AR    R0,R1
         BCTR  R0,0
         ST    R0,TOTALLOX                     ALLOCATED DIR. BLOCKS
         SPACE 2
RESTART9 MVC   CCWS(LCCWINIT),CCWINIT          INITIALIZE CCWS
         SPACE 1
         LA    R0,IOBSEEK+3
         LA    R1,CCW1A
         STCM  R0,B'0111',CCW1A+1              ***
         STCM  R1,B'0111',CCW2A+1              *** -- INIT. CCW'S
         STCM  R0,B'0111',CCW3A+1              ***
         SPACE 1
         LA    R1,SNO
         LA    R2,CCW1
         STCM  R1,B'0111',CCW0+1               ***
         STCM  R0,B'0111',CCW1+1               ***
         STCM  R2,B'0111',CCW2+1               ***  -- READ CCW'S
         STCM  R0,B'0111',CCW5+1               ***
         STCM  R1,B'0111',CCW6+1               ***
         SPACE 2
         LA    R1,CCW0                         FIRST CCW (SET SECTOR)
         ST    R1,EXCPCCWI                     SAVE FOR EXCP ROUTINE
         TM    FLAGSJJ,FCHANGEB                CHANGE BUFFERING?
         BNO   SETBUFF                         NO, BRANCH
         LH    R15,BYTEUCB                     UCBBYTE
         MH    R15,=H'9'                       INDEX INTO UNIT TABLE
         LA    R15,UNITTBL(R15)                DEVICE UNIT TYPE
         NI    FLAGSEE,FF-FFULLTRK-FDOUBCON
         MVI   DEVRPS,X'05'                    ASSUME RETAIN RESULTS
         CLI   0(R15),C'R'                     RETAIN RESULTS?
         BE    SETBUFF                         YES, BRANCH
         MVI   DEVRPS,X'04'                    DO NOT RETAIN RESULTS
         CLI   0(R15),C'M'                     READ MULTIPLE?
         BE    SETBUFF                         YES, BRANCH
         OI    FLAGSEE,FFULLTRK
         CLI   0(R15),C'D'                     DOUBLE?
         BE    SETBUFF                         YES, BRANCH
         OI    FLAGSEE,FDOUBCON                NO, MUST BE SINGLE
         SPACE 1
SETBUFF  NI    FLAGSJJ,FF-FCHANGEB             BUFFERING IS SET
         CLI   UCBTYP+3(R4),X'08'              2314 DISK?
         BNE   NOT2314                         NO, BRANCH
         ST    R2,EXCPCCWI                     YES, DO NOT READ SECTOR
         XI    CCW5+4,X'40'                    DO NOT CHAIN CCW5
         SPACE 1
NOT2314  MVI   DSORG+1,0                       CLEAR SECOND DSORG BYTE
         TM    DSORG,DS1DSGIS+DS1DSGPS+DS1DSGDA+DS1DSGPO  DSORG KNOWN?
         BM    *+10                                       YES, BRANCH
         MVC   DSORG(2),DS1DSORG                          NO, USE LABEL
         SPACE 1
         LA    R14,FIRST4K
         LA    R14,MSGENTDS-FIRST4K(R14)       POINT TO ENTER OPTIONS
         ST    R14,MSGENTDA                    SAVE FOR LATER
         MVC   0(115,R14),PDS300A              " ENTER OPTIONS -- ..."
         LA    R1,25+7(R14)                    WHERE TO ADD DSNAME
         MVC   0(44,R1),DSNAME                 ADD DSNAME
         AH    R1,DSNLEN                       POINT TO DSNAME END
         MVC   0(9,R1),=C',VOL=SER='           ADD ",VOL=SER="
         MVC   9(6,R1),VOLALLOC                ADD VOLUME SERIAL
         TM    DSORG,DS1DSGPO                  PARTITIONED?
         BNO   *+10                            NO, BRANCH
         MVC   9+6+2(4,R1),=C'MEM='            DEFAULT GROUP NAME
         LA    R1,9+6+2+4(,R1)                 WHERE TO ADD MEM=...
         ST    R1,MSGENTPT                     WHERE TO ADD MEM=...
         BAS   R14,DEFGROUP                    ADD DEFAULT GROUP
         SPACE 1
         MVC   LABLRECL(2),LRECL               SAVE THE DCB LRECL FIELD
         TM    FLAGSCC,RECFMF                  FIXED FORMAT?
         BNO   NEWSTAX                         NO, BRANCH
         TM    RECFM,DCBRECBR                  RECFM=FB?
         BO    NEWSTAX                         YES, BRANCH
         MVC   LRECL(2),BLKSI                  RECFM=F ONLY
         SPACE 1
NEWSTAX  LA    R0,NEWCMD              ABEND RECOVERY ADDRESS
         ST    R0,RECOVER
         L     R14,ADDRECT
         MVC   ECTPCMD-ECT(8,R14),PDSNAME   RESET PDS COMMAND NAME
         SPACE 1
         L     R2,=A(ATTNEXIT)
         STAX  (2),USADDR=(R7),REPLACE=YES,IBUF=0,OBUF=0,              X
               MF=(E,STAXPARM)
         SPACE 1
         AIF   ('&ISPOPT' NE 'ISPMODE').NNISPM2
         AIF   ('&CISP' NE 'ISPFV2').NNISPM2
         TM    FLAGSGG,FISPMODE         ISPMODE TO BE SET?
         BNO   NEWSTAX8                 NO,BRANCH
         LA    R1,L731                  ASSUME SPF DID NOT INITIALIZE
         TM    FLAGSFF,FSPFERR          CORRECT?
         BO    MSGNEWXX                 YES, BRANCH
         TM    FLAGSFF,FSPFCALL+FSPFDIAL  SPF ENVIRONMENT INITIALIZED?
         BM    NEWSTAX2                   YES, CALL SPF EDIT/BROWSE
         BAS   R2,SPFRECUR                NO, INVOKE PDS AS A DIALOG
         SPACE 3
NEWSTAX2 ICM   R15,B'1111',ISPLINK      ISPLINK ADDRESS KNOWN?
         BNZ   NEWSTAX5                 YES, BRANCH
         OI    FLAGSFF,FSPFERR          SPF ERROR
         LOAD  EP=ISPLINK               ADDRESS OF SPF INTERFACE MODULE
         ST    R0,ISPLINK               SAVE ADDRESS FOR LATER
         XI    FLAGSFF,FSPFERR          NOT AN SPF ERROR NOW
NEWSTAX5 NI    FLAGSGG,FF-FISPMODE      ISPMODE WILL BE SET NOW
         STFSMODE ON,INITIAL=YES        ENTER FULLSCREEN MODE
         OI    SPFLAG0,SPFDON           ISPMODE ACTIVE NOW
         OI    SPFLAG3,SPFCHN           FORCE MSG TO BE LOGGED
         MVC   INSERT#1(8),PDSNAME
         M$MSG L100$1
         M$ERRST MSGBLANK               ONE BLANK LINE
.NNISPM2 ANOP
NEWSTAX8 ICM   R8,B'1111',##ADRCMD    SUBCOMMAND TO BE CONTINUED?
         BNM   NEWCMD                 NO, BRANCH
         NI    ##ADRCM#,FF-CONTINUE           TURN OFF CALL FLAG
         BASR  R2,R8                  YES, BRANCH
         TITLE 'P D S  --  PDS NEW SUBCOMMAND PROCESSING     09/28/88'
*
*  GET THE NEXT SUBCOMMAND
*
         SPACE 1
NEWCMD   MVI   STARTTR+3,0             CLEAR THE READ ADDRESS
         BAS   R2,SHUTSTOW             CLOSE STOW; RELEASE ANY ENQUEUES
         SPACE 1
         SR    R0,R0
         ICM   R0,B'1000',SUBPOOLT     ANY TEMPORARY STORAGE?
         MVI   SUBPOOLT,0              CLEAR THE SUBPOOL CHARACTER
         BZ    NEWCMD10                NO, LINK TO THE SUBCOMMAND
         FREEMAIN R,SP=(0)             YES, RELEASE IT
         SPACE 1
NEWCMD10 MVI   MTHIGHL,8               LENGTH OF STANDARD INSERT 1
         MVI   MTHIGHL+4,8             LENGTH OF STANDARD INSERT 2
         TM    FLAGSAA,FMEM#MEM        MEMBER GROUP IN PROGRESS?
         BO    MEMSGET                 YES, BRANCH
         SPACE 2
         TM    SPFLAG2,SPFLNCD         LINE COMMAND?
         BO    NEWCMD20                YES, IGNORE MEMBER LIST
         TM    PMEMMIN,X'80'           MEMBER LIST ACTIVE?
         BNO   NEWCMD20                NO, BRANCH
         TM    DSORG,DS1DSGPO          PARTITIONED?
         BNO   NEWCMD20                NO, MEMBER NAME NOT NEEDED
         TM    ##ADRPC#,@G             MEMBER GROUP ALLOWED?
         BNO   NEWCMD20                NO, BRANCH
         L     R1,PMEMCURR             CURRENT MEMBER LIST ELEMENT
         TM    0(R1),X'80'             ACTIVE ELEMENT?
         BNO   NEWCMD20                NO, BRANCH
         NI    FLAGSHH,FOPTIONS+FLKEDYES+FLKEDNO   RESET SOME  SS FEB88
         MVC   FLAGSAA,4(R1)           RESET CONTROL FLAGS
         MVC   LMEMBER1+1(19),5(R1)    RESET MEMBER NAMES AND LENGTH
         MVC   DEVRPS+1(3),5+18(R1)    GET CURRENT TTR ADDRESS ***TEST
         L     R1,0(,R1)               NEXT LIST ELEMENT
         ST    R1,PMEMCURR             SAVE FOR NEXT LIST ITERATION
         MVC   ##SUBCOM(#LSUB),#SUBHOLD  RESET SUBCOMMAND CHANGED DATA
         TM    FLAGSAA,FMEM#MEM        MEMBER GROUP REQUESTED?
         BO    CMDVER                  YES, BRANCH
         SPACE 1
         TM    ##ADRPA#,$W             DELAY MEMBER MESSAGE?
         BNO   NEWCMD14                NO, BRANCH
         MVC   DELAYMSG(38),MSGMEMQ
         MVC   DELAYMSG+7(8),##SUBCOM
         MVC   DELAYMSG+7+8+1(8),MEMBER1
         TR    DELAYMSG+7+8+1(8),TRLINE
         OI    FLAGSHH,FDELAYM         MESSAGE IS AVAILABLE
         B     CMDVER
         SPACE 1
NEWCMD14 TM    ##ADRPA#,$D             SUPPRESS DEFAULT MESSAGE?
         BO    CMDVER                  YES, BRANCH
         M$ERRST MSGBLANK
         MVC   INSERT#1(8),MEMBER1
         M$MSG L002$1                  WHO IS BEING PROCESSED
         B     CMDVER
         SPACE 1
NEWCMD20 MVI   FLAGSAA,0               CLEAR THE MAJOR CONTROL FLAGS
         MVC   ##HELOFF(1),FLAGSII     SAVE THE THEN/ELSE FLAGS
         MVI   FLAGSHH,0               CLEAR ALL FLAGSHH FLAGS
         MVI   FLAGSII,0               CLEAR ALL FLAGSII FLAGS
         MVI   IODIRADD,X'FE'          MARK AS AN INVALID CCHH ADDRESS
         MVI   IOBUFADD,X'FE'          MARK AS AN INVALID CCHH ADDRESS
         L     R1,PMEMCURR             CURRENT START OF MEMBER LIST
         MVC   PMEMCURR(4),PMEMMIN     RESET THE CURRENT POINTER
         TM    FLAGSEE,FMEMGRP         SUBLIST FOR A NEW GRP?
         BNO   NEWCMD24                NO, BRANCH
         TM    DSORG,DS1DSGPO          PARTITIONED?
         BNO   NEWCMD24                NO, MEMBER NAME NOT NEEDED
         CLI   #ALIAOPT,1              ALIAS MEMBERS TOO?
         BNE   NEWCMD22                NO, BRANCH
         CLC   $SUL(8),##SUBCOM        SUBLIST SUBCOMMAND?
         BNE   NEWCMD22                NO, BRANCH
         MVI   #ALIAOPT,X'80'+1        ALIAS PHASE
         ST    R1,PMEMCURR             RESET START OF MEMBER LIST
         B     CALLCMDZ                CALL SUBLIST AGAIN
         SPACE 1
NEWCMD22 MVC   LMEMBER1(2+8+8+2),MMEMBERD+1  RESET THE MEMBER NAME
***TEST  MVC   FLAGSAA(1),MMEMBERD     RESET THE MEMBER FLAG
         XC    MMEMMIN(12),PMEMMIN     INTERCHANGE
         XC    PMEMMIN(12),MMEMMIN                THE
         XC    MMEMMIN(12),PMEMMIN                   MEMBER LISTS
         MVC   MEMBERD(1+2+8+8+2),MMEMBERD    RESET THE DEFAULT NAME
         BAS   R14,DEFGROUP            ADD DEFAULT GROUP
         XI    FLAGSEE,FMEMGRP         MEMGRP USED NOW
         SPACE 2
         SPACE 1
NEWCMD24 TM    FLAGSBB,FCMD            COMMAND BUFFER AVAILABLE?
         BO    HAVECMD                 YES, BRANCH
         SPACE 1
         TM    FLAGSBB,FONESHOT        ONE SUBCOMMAND ONLY?
         BNO   NEWCMD28                NO, BRANCH             ABL NOV86
         CLC   ##SUBCOM(8),$ML         ML COMMAND FAIL?       ABL FEB87
         BE    NEWCMD25                YES, BRANCH            ABL FEB87
         CLC   ##SUBCOM(8),$MML        MEMLIST COMMAND FAIL?  ABL NOV86
         BNE   RETURN                  NO, TERMINATE          ABL NOV86
NEWCMD25 MVC   ##SUBCOM(8),$ISM        USE ISPMODE INSTEAD    ABL NOV86
         ICM   R1,B'1111',#ACTIONT     ANY THEN(MEMLIST)?     ABL NOV86
         BZ    CALLCMDZ                NO, BRANCH             ABL NOV86
         MVC   ##ADRCMD+1(3),9(R1)     CHANGE START ADDRESS   ABL NOV86
         B     CALLCMDZ                TRY AGAIN              ABL NOV86
         SPACE 1
NEWCMD28 DS    0H
         TM    FLAGSEE,FBKGRND         BACKGROUND MODE?
         BNO   NEWCMD30                NO, BRANCH
         M$ERRST MSGBLANK              YES, OUTPUT A SEPARATOR LINE
         SPACE 2
NEWCMD30 DS    0H
         ICM   R8,B'1111',ADDRSUMR        SUMMARY ROUTINE?    ABL NOV86
         BZ    *+6                        NO, BRANCH          ABL NOV86
         BASR  R2,R8                      YES, BRANCH         ABL NOV86
         SPACE 1
         TM    FLAGSGG,FOUTSOME           ANY OUTPUT FOR SUBCOMMAND?
         BO    NEWCMD38                   YES, BRANCH
         TM    FLAGSGG,FOUTSUB            SUBCOMMAND GAIN CONTROL?
         BNO   NEWCMD38                   NO, BRANCH
         LA    R1,L241
         CLC   $FIN(8),##SUBCOM           FIND SUBCOMMAND?
         BE    NEWCMD33                   YES, BRANCH
*        LA    R1,L241
         CLC   $REP(8),##SUBCOM           REPLACE SUBCOMMAND?
         BE    NEWCMD36                   YES, BRANCH
         LA    R1,L242
         CLC   $MAP(8),##SUBCOM           MAP SUBCOMMAND?
         BE    NEWCMD36                   YES, BRANCH
         LA    R1,L243
         CLC   $HIS(8),##SUBCOM           HISTORY SUBCOMMAND?
         BE    NEWCMD36                   YES, BRANCH
         LA    R1,L715
         CLC   $MML(8),##SUBCOM           MEMLIST SUBCOMMAND?
         BE    NEWCMD36                   YES, BRANCH
         CLC   $ML(8),##SUBCOM            ML SUBCOMMAND?
         BE    NEWCMD36                   YES, BRANCH
         CLC   $IFX(8),##SUBCOM           IF SUBCOMMAND?
         BNE   NEWCMD38                   NO, BRANCH
NEWCMD33 M$MSG (R1)
         TM    ##HELOFF,FSUBLIST          THEN/ELSE(SUBLIST)?
         BNO   NEWCMD38                   NO, BRANCH
         MVI   FLAGSAA,0                  NULL MEMBER GROUP
         MVC   PMEMCURR(4),PMEMMAX        NULL MEMBER LIST
         NI    PMEMMIN,255-X'80'          NULL MEMBER LIST
         XC    MEMBERD(1+2+8+8+2),MEMBERD NO MEMBER LIST
         L     R1,MSGENTPT                START OF MEMBER PART
         MVC   0(17,R1),BLANK128          CLEAR OUT THE MEMBER NAME
         B     NEWCMD38
         SPACE 2
NEWCMD36 M$MSG (R1)
         SPACE 2
NEWCMD38 NI    FLAGSGG,FF-FOUTSOME-FOUTSUB  NO OUTPUT FOR SUBCOMMAND
         MVI   ##SUBCOM,0              RESET THE SUBCOMMAND NAME
         MVI   ATTNECB,2+1             FLAG -- CAN BE ATTENTIONED
         L     R1,MSGENTDA             POINT TO ENTER OPTIONS MESSAGE
        M$PUTGT (R1),ATTN=NEWCMD40     FIRST TRY FOR A COMMAND
         B     HAVECMD                 GOT A COMMAND
         SPACE 2
NEWCMD40 MVI   ATTNECB,2+1             FLAG -- CAN BE ATTENTIONED
         L     R1,MSGENTDA             POINT TO ENTER OPTIONS MESSAGE
        M$PUTGT (R1),ATTN=EXIT8N       SECOND TRY FOR A COMMAND
         B     HAVECMD                 GOT A COMMAND
         TITLE 'P D S  --  PDS SUBCOMMAND INVOKE SCAN        09/28/88'
*
*        SET UP FOR SUBCOMMAND SCAN
*
         SPACE 1
HAVECMD  NI    FLAGSBB,FF-FCMD
         NI    FLAGSEE,FF-FMEMGRP      SUBLIST NOT USED YET
         LA    R15,PARMLIST
         USING CSPL,R15
         SPACE 1
         L     R1,ADDRUPT              ADDRESS OF THE UPT
         L     R2,ADDRECT              ADDRESS OF THE ECT
         L     R14,ECTIOWA-ECT(R2)     ADDRESS OF I/O WORK AREA
         L     R14,0(,R14)             STACK ADDRESS
         ST    R14,PARMSTAK            SAVE STACK ADDRESS FOR LATER
         LA    R3,ATTNECB              ADDRESS OF THE ATTENTION ECB
         LA    R4,ZERO                 ADDRESS OF A ZERO FLAG AREA
         LA    R5,SCANANSR             ADDRESS OF THE RESULT AREA
         L     R6,ADDRCBUF             ADDRESS OF THE SUBCOMMAND
         STM   R1,R6,CSPLUPT           SETUP CSPLUPT, CSPLECT, CSPLECB,
         DROP  R15                           CSPLFLG, CSPLOA & CSPLCBUF
         SPACE 1
         LA    R14,FIRST4K
         MVC   MSGTEXT1(256),RECALLST-FIRST4K(R14) SAVE SUBCOMMAND
         MVC   MSGTEXT2(9),BLANK128             BLANK FIRST
         LH    R1,0(,R6)                        TOTAL LENGTH
         SH    R1,=H'4'                         NULL INPUT?
         BNP   HAVECMD8                         YES, IGNORE SUBCOMMAND
         BCTR  R1,0                             MACHINE LENGTH
         OC    MSGTEXT2(*-*),4(R6)              <<EXECUTED>>
         EX    R1,*-6                           UPPER CASE AND MOVE
         LA    R0,(HAVECMDE-HAVECMDT)/2         TABLE ENTRIES
         LA    R1,HAVECMDT-2                    START OF COMMAND TABLE
         CLI   1(R6),5                          ONE CHARACTER?
         BE    HAVECMD1                         YES, BRANCH
HAVECMD0 LA    R1,2(,R1)                        NEXT TABLE ENTRY
         CLC   MSGTEXT2(2),0(R1)                THIS SUBCOMMAND?
         BE    HAVECMD3                         YES, IGNORE FOR RECALL
         BCT   R0,HAVECMD0                      CHECK ALL ENTRIES
         CLI   MSGTEXT2+1,X'40'                 FOLLOWED BY A BLANK?
         BNE   HAVECMD2                         NO, BRANCH
         SPACE 1
         LA    R0,(HAVECMDE-HAVECMDT)/2         TABLE ENTRIES
         LA    R1,HAVECMDT-2                    START OF COMMAND TABLE
HAVECMD1 LA    R1,2(,R1)                        NEXT TABLE ENTRY
         CLC   MSGTEXT2(1),0(R1)                THIS SUBCOMMAND
         BE    HAVECMD3                         YES, IGNORE FOR RECALL
         BCT   R0,HAVECMD1                      CHECK ALL ENTRIES
         SPACE 1
HAVECMD2 MVC   RECALLST-FIRST4K(256,R14),0(R6)  NO, RESET SUBCOMMAND
         SPACE 2
HAVECMD3 CLI   4(R6),C'?'              QUESTION ?
         BE    HAVECMD4                YES, BRANCH
         CLI   4(R6),C'.'              PERIOD (FOR EXTENDED HELP)?
         BNE   HAVECMD7                NO, BRANCH
         CLI   5(R6),C'?'              QUESTION (FOR EXTENDED HELP)?
         BNE   HAVECMD7                NO, BRANCH
         SPACE 1
HAVECMD4 LA    R1,L520                 ** EXTENDED HELP IS REQUESTED
         MVC   RECALLST-FIRST4K(256,R14),MSGTEXT1  RESET SUBCOMMAND
         OC    ERRORMSG(3*5),ERRORMSG  ANY ERRORS NOTED?
         BZ    MSGNEW                  NO, "NO INFORMATION AVAILABLE"
         MVC   0(12,R6),MSGHELP        'H MS MS(' AND 4 BYTE LENGTH
         LA    R2,ERRORMSG-3           START OF ERROR MESSAGES-3
         LA    R0,3*5/3                MAXIMUM NUMBER OF MESSAGES
         LH    R4,0(,R6)               CURRENT LENGTH
         SPACE 1
HAVECMD5 LA    R3,0(R4,R6)             POINT TO CURRENT BYTE
         LA    R2,3(,R2)               NEXT MESSAGE
         MVC   0(3,R3),PDS300A+4       'PDSNNN,' (AFTER FORMATTING)
         MVC   3(3,R3),0(R2)           MESSAGE IDENTIFICATION
         MVI   6(R3),C','              SEPARATING COMMA
         LA    R4,7(,R4)               ADD TO LENGTH
         STH   R4,0(,R6)               UPDATE LENGTH
         CLI   3(R2),X'00'             ANOTHER MESSAGE?
         BE    *+8                     NO, BRANCH
         BCT   R0,HAVECMD5             REPEAT FOR ALL MESSAGES
         MVI   6(R3),C')'              FINAL MATCHING PARENTHESIS
**       M$ERRST (R6)                  DELETE ** FOR TESTING
         SPACE 1
HAVECMD7 XC    ERRORMSG(3*5),ERRORMSG  CLEAR PREVIOUS ERROR MESSAGES
         SPACE 1
HAVECMD8 MVI   ATTNECB,0               CLEAR ECB
         LA    R1,PARMLIST             PARAMETER LIST START
         L     R15,ADDRSCAN            IKJSCAN ADDRESS
         BASR  R14,R15                 INVOKE COMMAND SCAN
         SPACE 1
         LA    R15,SCANANSR            ADDR OF RESULTS
         USING CSOA,R15
         SPACE 1
         TM    CSOAFLG,CSOANOC         EMPTY BUFFER?
         BO    NEWCMD30                YES, STILL NEED COMMAND
         SPACE 1
         L     R8,=V(EXEC)             EXEC ENTRY POINT
         TM    CSOAFLG,CSOAEXEC        IMPLICIT EXEC?
         BO    4(R8)                   YES, BRANCH
         SPACE 2
         TM    CSOAFLG,CSOAVWP+CSOAVNP VALID COMMAND?
         BNZ   HAVECMD9                YES, BRANCH
         LA    R1,L877                 INVALID COMMAND MESSAGE
         CLI   4(R6),X'6E'             RESHOW COMMAND?
         BNE   MSGNEW                  NO, ERROR MESSAGE
         MVI   ATTNECB,2+1             FLAG -- CAN BE ATTENTIONED
        M$PUTGT MSGBLANK,ATTN=NEWCMD40 FIRST TRY FOR A COMMAND
         B     HAVECMD                 GOT A COMMAND
         SPACE 1
HAVECMD9 TM    CSOAFLG,CSOAVWP         ANY OPERAND?
         BNO   *+8                     NO, BRANCH
         OI    FLAGSHH,FOPTIONS        YES, NOTE FOR LATER
         TITLE 'P D S  --  PDS SUBCOMMAND TABLE SCAN         09/28/88'
*
*   COMMAND SCAN - IN THE CASE OF A POTENTIALLY AMBIGUOUS ENTRY
*                  (E.G. 'A ') THE FIRST MATCH IN THE COMMAND TABLE
*                  (ATTR IN THIS CASE) IS USED.
*
         L     R2,CSOACNM              ADDR OF COMMAND NAME
         LH    R3,CSOALNM              LENGTH OF NAME
         BCTR  R3,0                    MACHINE LENGTH
         SPACE 2
         L     R1,=V($TBL)             START OF COMMAND SCAN
         SPACE 2
         CLC   0(*-*,R1),0(R2)         <<EXECUTED>>
CMDSCAN  EX    R3,*-6                  THIS SUBCOMMAND?
         BNE   CMDSCAN2                NO, BRANCH
         SPACE 1
         MVC   ##SUBCOM(PTW),0(R1)     INITIALIZE ##SUBCOM, ##ADRCMD,
*                                        ##ADRPCL AND ##ADRPAR
         TM    DSORG,DS1DSGPO          PARTITIONED?
         BO    CMDFND                  YES, BRANCH
         TM    ##ADRPC#,@S             SUPPORTED IF NOT PARTITIONED?
         BO    CMDFND2                 YES, BRANCH
         SPACE 1
CMDSCAN2 LA    R1,PTW(R1)              NEXT ENTRY IN TABLE
         CLI   0(R1),X'FF'             END OF TABLE?
         BNE   CMDSCAN                 NO, CONTINUE
         SPACE 1
         SR    R2,R2
         L     R8,=V(OPTIONS)          OPTIONS SUBCOMMAND START
         BR    R8
         SPACE 1
CMDSCAN4 LA    R15,SCANANSR            INVALID SUBCOMMAND MESSAGE
         LH    R3,CSOALNM              LENGTH OF NAME
         BCTR  R3,0                    MACHINE LENGTH
         SR    R2,R2
         L     R8,=V(OPTIONS)          OPTIONS SUBCOMMAND START
         BR    R8
         DROP  R15
         TITLE 'P D S  --  PDS SUBCOMMAND INITIAL PROCESSING 09/28/88'
CMDFND   NI    ##ADRPC#,FF-@S          PARTITIONED, TURN OFF OTHER FLAG
         SPACE 2
CMDFND2  MVC   ##ANSWER(LISUBS),ISUBS  INITIALIZE THE PDL SAVE AREA
         L     R14,ADDRECT
         MVC   ECTSCMD-ECT(8,R14),##SUBCOM  RESET PDS SUBCOMMAND NAME
         NI    ECTSWS2-ECT(R14),FF-X'04'    (ECTNOQPR) DO PROMPT HELP
         CLC   0(8,R1),$RC2            RECALL SUBCOMMAND?
         BE    CMDFND3                 YES, BRANCH
         CLC   0(8,R1),$REC            RECALL SUBCOMMAND?
         BNE   CMDCHECK                NO, BRANCH
CMDFND3  LA    R14,FIRST4K
         MVC   RECALLST-FIRST4K(256,R14),MSGTEXT1  YES, USE PREVIOUS
         LH    R1,RECALLST-FIRST4K(R14)  LENGTH OF OLD SUBCOMMAND
         BCTR  R1,0                    MACHINE LENGTH
         XC    MSGTEXT1(256),MSGTEXT1  CLEAR THE MESSAGE AREA
         MVC   MSGTEXT1(*-*),RECALLST-FIRST4K(R14) <<EXECUTED>>
         EX    R1,*-6                  MOVE IN MESSAGE
         CLI   MSGTEXT1+1,79+4         A FULL LINE (80 -1)?
         BH    *+8                     YES, BRANCH
         MVI   MSGTEXT1+1,79+4         NO, CHANGE LENGTH TO 80
         LA    R1,MSGTEXT1+1(R1)       POINT TO POSITION AFTER TEXT
         MVI   0(R1),X'40'             ADD ONE TRAILING BLANK
         LH    R1,2(,R6)               OFFSET TO OPERANDS
         LA    R1,4(R1,R6)             POINT TO OPERANDS
         TM    FLAGSHH,FOPTIONS        ANY OPERANDS?
         BNO   CMDFND4                 NO, BRANCH
         OI    0(R1),X'40'             UPPER CASE THE OPERAND
         CLI   0(R1),C'C'              CHANGE OPERAND?
         BNE   CMDFND4                 NO, BRANCH
         MVC   MSGTEXT1(132),RECALLDS-FIRST4K(R14)  MOVE IN DSNAME
         SPACE 2
CMDFND4  M$ERRST MSGTEXT1              DISPLAY THE OLD SUBCOMMAND
         LH    R1,2(,R6)               OFFSET TO OPERANDS
         LA    R1,4(R1,R6)             POINT TO OPERANDS
         TM    FLAGSHH,FOPTIONS        ANY OPERANDS?
         BNO   NEWCMD                  NO, BRANCH
         OI    0(R1),X'40'             UPPER CASE THE OPERAND
         CLI   0(R1),C'E'              ENTER OPERAND?
         BNE   NEWCMD                  NO, BRANCH
         NI    FLAGSHH,FF-FOPTIONS     TURN OFF THE OPERAND FLAG
         LA    R14,FIRST4K
         MVC   PUTGETBF(256),RECALLST-FIRST4K(R14)  CHANGE TO PREVIOUS
         B     HAVECMD                 SCAN AND PARSE THIS AGAIN
         SPACE 2
CMDCHECK TM    ##ADRPC#,@N       IGNORE OPTIONS?
         BO    CMDVER            YES, BRANCH
         SPACE 2
         CLC   ##SUBCOM(8),$PAT  PATTERN SUBCOMMAND?
         BNE   CMDCHK2           NO, BRANCH
         TM    FLAGSHH,FOPTIONS  ANY OPERAND SPECIFIED?
         BO    CMDPARSE          YES, USE THE SPECIFIED DATA
         CLI   MEMBERP,X'00'     ANY DEFAULT PATTERN YET?
         BE    CMDPARSE          NO, FORCE A CALL TO PARSE
         SPACE 1
         MVC   LMEMBER1(2+8+8+2),MEMBERP+1  RESET DEFAULT PATTERN
         MVC   FLAGSAA,MEMBERP   RESTORE THE DEFAULT FLAGS
         B     CMDVER
         SPACE 2
CMDCHK2  TM    ##ADRPC#,@G       MEMBER NAME DEFAULT (AND GROUP)?
         BNO   CMDREQD           NO, CHECK IF OPERANDS REQUIRED
         TM    FLAGSHH,FOPTIONS  ANY OPERAND SPECIFIED?
         BO    CMDPARSE          YES, USE THE SPECIFIED DATA
         SPACE 2
         TM    ##ADRPC#,@S       NON-PARTITIONED DATA SET?
         BO    CMDVER            YES, BRANCH
         CLI   MEMBERD,X'00'     ANY DEFAULT MEMBER NAME YET?
         BE    CMDPARSE          NO, FORCE A CALL TO PARSE
         TM    ##ADRPC#,@R       OPERANDS REQUIRED?
         BO    CMDPARSE          YES, BRANCH
         SPACE 1
         MVC   LMEMBER1(2+8+8+2),MEMBERD+1  RESET DEFAULT MEMBER NAMES
         MVC   FLAGSAA,MEMBERD   RESTORE THE DEFAULT FLAGS
         MVC   PMEMCURR(4),PMEMMIN  RESET THE FIRST MEMBER POINTER
         TM    FLAGSAA,FMEM#MEM  MEMBER GROUP REQUESTED?
         BO    CMDVER            YES, BRANCH
         SPACE 1
         TM    ##ADRPA#,$W       DELAY MEMBER MESSAGE?
         BO    CMDPARS2          YES, BRANCH
         SPACE 1
         TM    ##ADRPA#,$D       SUPPRESS DEFAULT MESSAGE?
         BO    CMDVER            YES, BRANCH
         SPACE 1
         TM    PMEMMIN,X'80'     ACTIVE MEMBER LIST?
         BNO   CMDCHK6           NO, BRANCH
         SPACE 1
         CLC   ##SUBCOM(8),$MEM  MEMBERS SUBCOMMAND?
         BE    CMDVER            YES, BRANCH
         SPACE 1
         CLC   ##SUBCOM(8),$SUB  SUBMIT SUBCOMMAND?
         BE    CMDVER            YES, BRANCH
         SPACE 1
         CLC   ##SUBCOM(8),$DEL  DELETE SUBCOMMAND?
         BE    CMDVER            YES, BRANCH
         SPACE 1
CMDCHK6  MVC   INSERT#1(8),MEMBER1
         M$MSG L002$1            TELL THE USER WHO IS BEING PROCESSED
         B     CMDVER            CALL THE COMMAND
         SPACE 3
CMDREQD  TM    ##ADRPC#,@R       OPERANDS REQUIRED?
         BO    CMDPARSE          YES, BRANCH
         TM    FLAGSHH,FOPTIONS  ANY OPERANDS SPECIFIED?
         BZ    CMDVER            NO, BRANCH
         SPACE 2
CMDPARSE OI    FLAGSHH,FOPTIONS  NOW THERE ARE OPERANDS
         L     R1,ADDRCBUF       START OF SUBCOMMAND BUFFER
         MVC   ##HELOFF(2),2(R1) SAVE THE OFFSET
         L     R15,=V(PARSE)     PARSE ADDRESS
         BASR  R14,R15           GET THE COMMAND OPERANDS
         B     NEWCMD            INVALID PARSE, IGNORE
         L     R1,ADDRCBUF       START OF SUBCOMMAND BUFFER
         MVC   2(2,R1),##HELOFF  RESET THE OFFSET
         SPACE 1
         TM    ##ADRPA#,$W       DELAY MEMBER MESSAGE?
         BNO   CMDVER            NO, BRANCH
CMDPARS2 MVC   DELAYMSG(38),MSGMEMQ
         MVC   DELAYMSG+7(8),##SUBCOM
         MVC   DELAYMSG+7+8+1(8),MEMBER1
         TR    DELAYMSG+7+8+1(8),TRLINE
         OI    FLAGSHH,FDELAYM         MESSAGE IS AVAILABLE
         B     CMDVER
         SPACE 3
CMDVER   ICM   R15,B'1111',=V(VSUBCMD)  VERIFY THE SUBCOMMAND?
         BZ    CALLCMD                  NO, BRANCH
         OI    FLAGSJJ,FSUBCMD          YES, SET A ESTAE FLAG
         L     R1,ADDRCBUF              COMMAND BUFFER ADDRESS
         ST    R1,ADDRTEXT              COMMAND ADDRESS
         MVC   MSGTEXT1(16),ADDRTEXT    MOVE ARGUMENT LIST
         LA    R1,##SUBCOM              COMMAND NAME
         CLC   ##SUBCOM(8),$ATTL        ATTRIB SUBCOMMAND?
         BNE   CMDVER2                  NO, BRANCH
         TM    #OPTOPT,X'F0'            ATTRIBUTE CHANGES?
         BNO   CMDVER2                  NO, BRANCH
         LA    R1,=CL8'ATTRMOD'         YES, CHANGE THE COMMAND NAME
CMDVER2  CLC   ##SUBCOM(8),$VER         VERIFY SUBCOMMAND?
         BNE   CMDVER4                  NO, BRANCH
         TM    #VERUPDT,2               NOUPDATE?
         BO    CMDVER4                  YES, BRANCH
         TM    DSORG,DS1DSGPO           PARTITIONED DATA SET?
         BNO   CMDVER4                  NO, BRANCH
         TM    FLAGSAA,FMEMBER1+FMEMBER2  ALL MEMBERS?
         BNZ   CMDVER4                    NO, BRANCH
         TM    FLAGSAA,FMEM#MEM           MEMBER GROUP?
         BO    CMDVER4                    YES, BRANCH
         LA    R1,=CL8'VERMOD'            NO, CHANGE THE COMMAND NAME
         SPACE 1
CMDVER4  ST    R1,MSGTEXT1+16           FOR VERIFICATION ROUTINE
         LA    R1,DSNAME                DSNAME
         ST    R1,MSGTEXT1+20           FOR VERIFICATION ROUTINE
         OI    MSGTEXT1+20,X'80'        MARK END OF LIST
         LA    R1,MSGTEXT1              START OF ARGUMENT LIST
         BASR  R14,R15                  CALL VERIFICATION ROUTINE
         NI    FLAGSJJ,FF-FSUBCMD       RESET THE ESTAE FLAG
         MVC   INSERT#1(8),##SUBCOM     COMMAND NAME
         LA    R1,L920$1                ASSUME NOT AUTHORIZED
         LTR   R15,R15                  CORRECT?
         BNZ   MSGNEWXX                 YES, BRANCH
         SPACE 2
         CLC   ##SUBCOM(8),$FIN         FIND SUBCOMMAND?
         BE    CMDVER6                  YES, BRANCH
         CLC   ##SUBCOM(8),$IFX         IF SUBCOMMAND?
         BNE   CALLCMD                  NO, BRANCH
         SPACE 1
CMDVER6  L     R15,=V(VSUBCMD)          VERIFY THE SUBCOMMAND
         ICM   R1,B'1111',#ACTIONT      THEN ACTION?
         BZ    CMDVER8                  NO, BRANCH
         OI    FLAGSJJ,FSUBCMD          YES, SET A ESTAE FLAG
         MVC   MSGTEXT1(16),ADDRTEXT    MOVE ARGUMENT LIST
         ST    R1,MSGTEXT1+16           FOR VERIFICATION ROUTINE
         LA    R1,MSGTEXT1              START OF ARGUMENT LIST
         BASR  R14,R15                  CALL VERIFICATION ROUTINE
         NI    FLAGSJJ,FF-FSUBCMD       RESET THE ESTAE FLAG
         ICM   R1,B'1111',#ACTIONT      THEN ACTION
         MVC   INSERT#1(8),0(R1)        COMMAND NAME
         LA    R1,L920$1                ASSUME NOT AUTHORIZED
         LTR   R15,R15                  CORRECT?
         BNZ   MSGNEWXX                 YES, BRANCH
         SPACE 2
CMDVER8  L     R15,=V(VSUBCMD)          VERIFY THE SUBCOMMAND
         ICM   R1,B'1111',#ACTIONE      ELSE ACTION?
         BZ    CALLCMD                  NO, BRANCH
         OI    FLAGSJJ,FSUBCMD          YES, SET A ESTAE FLAG
         MVC   MSGTEXT1(16),ADDRTEXT    MOVE ARGUMENT LIST
         ST    R1,MSGTEXT1+16           FOR VERIFICATION ROUTINE
         LA    R1,MSGTEXT1              START OF ARGUMENT LIST
         BASR  R14,R15                  CALL VERIFICATION ROUTINE
         NI    FLAGSJJ,FF-FSUBCMD       RESET THE ESTAE FLAG
         ICM   R1,B'1111',#ACTIONE      ELSE ACTION
         MVC   INSERT#1(8),0(R1)        COMMAND NAME
         LA    R1,L920$1                ASSUME NOT AUTHORIZED
         LTR   R15,R15                  CORRECT?
         BNZ   MSGNEWXX                 YES, BRANCH
         TITLE 'P D S  --  PDS SUBCOMMAND BLDL CHECKING      09/28/88'
CALLCMD  MVC   #SUBHOLD(#LSUB),##SUBCOM   SAVE SUBCOMAND CHANGED DATA
         TM    ##ADRPC#,@S         NON-PARTITIONED DATA SET?
         BO    CALLCMD9            YES, BRANCH
         TM    FLAGSAA,FMEM#MEM    MEMBER GROUP DESIRED?
         BO    CALLCMD8            YES, BRANCH
         TM    ##ADRPC#,@C         CHANGE DIRECTORY AND NO BLDL?
         BNO   CALLCMD2            NO, BRANCH
         MVC   DIRNAME,MEMBER1     GET MEMBER NAME
         SPACE 2
CALLCMD2 TM    ##ADRPC#,@B         BLDL REQUIRED?
         BNO   CALLCMD8            NO, BRANCH
         SPACE 2
         XC    DIRUSER,DIRUSER     CLEAR THE USER FIELDS
         MVC   DIRNAME,MEMBER1     ORIGINAL MEMBER NAME
         MVC   DIRTTR(3),DEVRPS+1  GET ORIGINAL TTR ADDRESS  ***TEST
         SPACE 2
         SR    R15,R15
         BLDL  INDCB,BLDLLIST      LOCATE DIRECTORY ENTRY
         B     *+4(R15)            PROCESS RETURN CODE
         B     CALLCMD6              00 - SUCCESSFUL
         B     NOMEMBER              04 - MEMBER NOT FOUND
         B     IOERROR               08 - I/O ERROR
         SPACE 2
CALLCMD6 DS    0H
         MVC   DIRFLAG(DIREND-DIRFLAG),DIRFLAG+2 BLDL ADDS THINGS
         LA    R14,DIRNAME                CURRENT MEMBER NAME ADDRESS
         ST    R14,DIRPTRS                UPDATE IF NO GROUP
         SPACE 2
CALLCMD8 TM    FLAGSAA,FMEM#MEM           MEMBER GROUP TO START?
         BNO   CALLCMDZ                   NO, BRANCH
         SPACE 1
         TM    FLAGSAA,FMEMBER1+FMEMBER2  ANY MEMBER NAMES?
         BNZ   MEMSINIT                   YES, BRANCH
         OI    FLAGSHH,FMEMALLM           : NOTATION USED (FOR COPY)
         TM    ##ADRPC#,@I                BROWSE, EDIT OR VERIFY?
         BNO   MEMSINIT                   NO, BRANCH
         SPACE 2
CALLCMD9 NI    FLAGSAA,FF-FMEM#MEM        TURN OFF MEMBER GROUPS
         B     CALLCMDZ                   CALL THE SUBCOMMAND
         TITLE 'P D S  --  PDS SUBCOMMAND MEMBER GROUPS      09/28/88'
MEMSINIT MVC   #SUBHOLD(#LSUB),##SUBCOM SAVE SUBCOMMAND CHANGED DATA
         XC    DIRNAME(8),DIRNAME       CLEAR THE MEMBER NAME
         XC    DIRHOLD(8),DIRHOLD       HIGHEST NAME PROCESSED YET
         OI    FLAGSII,FDIRGRP          INPUT FOR MEMBER GROUP
         TM    FLAGSAA,FMEMRANG         MEMBER RANGE?
         L     R8,=V(DISPLAY)           DISPLAY SUBCOMMAND START
         BOR   R8                       YES, BRANCH
         B     8(R8)                    NO, MEMBER PATTERN
         SPACE 1
MEMSGET  MVC   DIRPTRS(12),DIRPTRS2     RESTORE THE DIRPTRS
         MVC   CURMBB(8),CURDIR         RESTORE THE DIRECTORY ADDRESS
         OI    FLAGSII,FDIRGRP          INPUT FOR MEMBER GROUP
         L     R8,=V(DISPLAY)           DISPLAY SUBCOMMAND START
         B     4(R8)                    GET NEXT MEMBER
         SPACE 1
MEMSNEXT NI    FLAGSII,FF-FDIRGRP       MEMBER GROUP INPUT IS COMPLETE
         OI    FLAGSBB,FRANPAT          MEMBERS EXIST IN THIS RANGE
         MVC   DIRPTRS2(12),DIRPTRS     SAVE THE DIRPTRS
         MVC   CURDIR(8),CURMBB         SAVE THE DIRECTORY ADDRESS
         MVC   ##SUBCOM(#LSUB),#SUBHOLD RESET CHANGED INFORMATION
         L     R14,DIRPTRS              START OF CURRENT MEMBER NAME
         CLC   DIRHOLD(8),0(R14)        NAME PROCESSED BEFORE?
         BNL   MEMSGET                  YES, BRANCH AND IGNORE
         MVC   DIRHOLD(8),0(R14)        SAVE LAST NAME PROCESSED
         XC    DIRNAME(74),DIRNAME      CLEAR THE CURRENT ENTRY
         IC    R15,MEMFLAG              DIRECTORY FLAG BYTE
         N     R15,=XL4'0000001F'       NUMBER OF HALFWORDS
         LA    R15,11(R15,R15)          MACHINE LENGTH OF ENTRY
         MVC   DIRNAME(*-*),0(R14)      <<EXECUTED>>
         EX    R15,*-6                  MOVE IN THE CURRENT ENTRY
         SPACE 1
         MVC   MSGTEXT1,MSGMEMQ         SUBCOMMAND AND MEMBER MESSAGE
         MVC   MSGTEXT1+7(8),##SUBCOM
         MVC   MSGTEXT1+7+8+1(8),DIRNAME
         TR    MSGTEXT1+7+8+1(8),TRLINE
         TM    ##ADRPC#,@W              HEADER DELAYED SUBCOMMAND?
         BNO   MEMSMSG                  NO, BRANCH
         SPACE 1
MEMSKIP  MVC   DELAYMSG(38),MSGTEXT1    SAVE FOR THEN/ELSE ACTION
         OI    FLAGSHH,FDELAYM          SUBCOMMAND IS AVAILABLE
         B     CALLCMDZ                 CALL THE SUBCOMMAND
         SPACE 2
MEMSMSG  M$ERRST MSGBLANK
         M$ERRST MSGTEXT1
         SPACE 3
CALLCMDZ L     R8,##ADRCMD              SUBCOMMAND ROUTINE START
         LA    R2,NEWCMD                SUBCOMMAND TERMINATION ADDRESS
         BR    R8                       LINK TO THE SUBCOMMAND
         TITLE 'P D S  --  PDS YES/NO PROMPTING ROUTINE      09/28/88'
*
*        ROUTINE TO PROMPT FOR A YES OR NO ANSWER
*
         SPACE 1
YESNO    TM    FLAGSGG,FPROMCON          PROMPTING TURNED OFF?
         BO    4(R2)                     YES, SIMULATE A YES RESPONSE
YESNO1   TM    FLAGSEE,FBKGRND+FNOTTERM  INPUT FROM THE TERMINAL?
         BNZ   4(R2)                     NO, SIMULATE A YES RESPONSE
         TM    FLAGSBB,FONESHOT          ONE SUBCOMMAND ONLY?
         BO    4(R2)                     YES, ALL DONE
         ST    R1,YESNOSV                PROMPTING MESSAGE ADDRESS
         SPACE 1
YESNO2   L     R1,YESNOSV              PROMPTING MESSAGE ADDRESS
        M$PUTGT (R1),ATTN=NEWCMD       PROMPT FOR DESIRED ACTION
         TM    FLAGSEE,FNOTTERM        INPUT FROM THE TERMINAL?
         BZ    YESNO4                  YES, BRANCH
         OI    FLAGSBB,FCMD            NO, PDS SUBCOMMAND AVAILABLE
         B     4(R2)                   SIMULATE A YES RESPONSE
         SPACE 1
YESNO4   TM    FLAGSBB,FNULL           NULL REPLY?
         BO    YESNO2                  YES, TRY AGAIN
         L     R1,ADDRCBUF
         LH    R14,0(,R1)              TOTAL NUMBER OF BYTES IN MESSAGE
         SH    R14,=H'4'               LESS LENGTH OF COUNT FIELDS
         SPACE 1
YESNO6   CLI   4(R1),X'40'             BLANK?
         BNE   YESNO8                  NO, BRANCH
         LA    R1,1(,R1)               TRY THE NEXT BYTE
         BCT   R14,YESNO6              ANY NON-BLANK?
         B     YESNO2                  NO, TRY AGAIN
         SPACE 1
YESNO8   OI    4(R1),X'40'             UPPER-CASE THE RESULT
         CLI   4(R1),C'N'              CHECK REPLY
         BER   R2                      "N", RETURN AT +0
         SPACE 1
         CLI   4(R1),C'Y'              VALID REPLY?
         BNE   YESNO2                  NO, ASK AGAIN
         B     4(,R2)                  "Y", RETURN AT +4
         TITLE 'P D S  --  PDS MEMBER FILTERING BY NAME      09/28/88'
*
*        ROUTINE TO FILTER MEMBER NAMES
*          EXITS: 0(R2) - SIMULATE END OF DIRECTORY
*                 4(R2) - MEMBER FAILED FILTERING
*                 8(R2) - MEMBER PASSED FILTERING
*
         SPACE 1
MFILTER  TM    FLAGSAA,FMEMASTR      ASTERISK MEMBER NAME?
         BO    MFIL200               YES, BRANCH
         TM    FLAGSAA,FMEMRANG      MEMBER NAME RANGE?
         BNO   MFIL300               NO, BRANCH
*** MEMBER RANGE SPECIFICATION LIKE  COND:CONZ
         TM    FLAGSAA,FMEMBER1      START ENTRY SPECIFIED?
         BNO   MFIL100               NO, BRANCH
         SPACE 1
         LH    R15,LMEMBER1          MACHINE LENGTH OF THE MEMBER NAME
         CLC   MEMBER1(*-*),MEMNAME  <<EXECUTED>>
         EX    R15,*-6               ABOVE THIS VALUE?
         BH    4(R2)                 YES, **FAILED
         XI    FLAGSAA,FMEMBER1      FIRST NAME IS SATISFIED
         SPACE 2
         AIF   ('&CONDRNG' EQ 'N').NRNG
         TM    FLAGSAA,FMEMBER2          LAST ENTRY SPECIFIED?
         BO    MFIL100                   YES, BRANCH
         CLC   $DIS(8),##SUBCOM          DISPLAY SUBCOMMAND?
         BNE   MFIL100                   NO, BRANCH
         STH   R15,LMEMBER2              LENGTH-1 OF SECOND NAME
         MVC   MEMBER2(*-*),MEMBER1      <<EXECUTED>>
         EX    R15,*-6                   DUPLICATE FIRST MEMBER NAME
         OI    FLAGSAA,FMEMBER2          SET SECOND ENTRY HERE
         SPACE 2
.NRNG    ANOP
         SPACE 2
MFIL100  TM    FLAGSAA,FMEMBER2      END ENTRY SPECIFIED?
         BNO   8(R2)                 NO, **PASSED
         SPACE 1
         LH    R15,LMEMBER2          MACHINE LENGTH OF THE MEMBER NAME
         CLC   MEMBER2(*-*),MEMNAME  <<EXECUTED>>
         EX    R15,*-6               BELOW THIS VALUE?
         BL    0(R2)                 YES, **SIMULATE DIRECTORY END
         B     8(R2)                 **PASSED
         SPACE 3
*** MEMBER PART SPECIFICATION LIKE  COND*PT
MFIL200  CLI   MEMBER1,0             ANY DATA?
         BE    MFIL210               NO, BRANCH
         LH    R15,LMEMBER1          MACHINE LENGTH OF THE MEMBER NAME
         SPACE 1
         CLC   MEMNAME(*-*),MEMBER1  <<EXECUTED>>
         EX    R15,*-6               MEMBER NAME:FIRST PART
         BL    4(R2)                   BELOW, **FAILED
         BH    0(R2)                   ABOVE, **SIMULATE DIRECTORY END
         SPACE 1
MFIL210  TM    FLAGSAA,FMEMBER2      A SECOND PART TOO?
         BNO   8(R2)                 NO, **PASSED
         LA    R1,8                  MAXIMUM MEMBER LENGTH
         LH    R14,LMEMBER1          FIRST PART MACHINE LENGTH
         CLI   MEMBER1,0             ANY DATA?
         BE    MFIL220               NO, BRANCH
         LA    R14,1(,R14)           FIRST PART LENGTH
MFIL220  SR    R1,R14                MAXIMUM PATTERN LENGTH
         LH    R15,LMEMBER2          MACHINE LENGTH OF THIS PART
         SR    R1,R15                NUMBER OF COMPARES VALID?
         BNP   4(R2)                 NO, FAILED
         LA    R14,MEMNAME(R14)      POSITION IN MEMBER NAME
         CLC   0(*-*,R14),MEMBER2    <<EXECUTED>>
MFIL230  EX    R15,*-6               IN THIS MEMBER NAME?
         BE    8(R2)                 YES, **PASSED
         LA    R14,1(,R14)
         BCT   R1,MFIL230            MAYBE, CHECK ALL OTHER POSITIONS
         B     4(R2)                 NO, **FAILED
         SPACE 3
*** MEMBER PATTERN SPECIFICATION LIKE  COND/PT
MFIL300  LH    R15,LMEMBER1          MACHINE LENGTH OF THIS PATTERN
         LA    R1,8                  MAXIMUM PATTERN LENGTH
         SR    R1,R15                COMPARE LENGTH
         LA    R14,MEMNAME           POSITION IN MEMBER NAME
         CLC   0(*-*,R14),MEMBER1    <<EXECUTED>>
MFIL310  EX    R15,*-6               IN THIS MEMBER NAME?
         BE    MFIL320               YES, BRANCH
         LA    R14,1(,R14)
         BCT   R1,MFIL310            MAYBE, CHECK ALL OTHER POSITIONS
         B     4(R2)                 NO, **FAILED
         SPACE 2
MFIL320  TM    FLAGSAA,FMEMBER2      A SECOND PATTERN TOO?
         BNO   8(R2)                 NO, **PASSED
         LH    R15,LMEMBER2          MACHINE LENGTH OF THIS PATTERN
         LA    R1,8                  MAXIMUM PATTERN LENGTH
         SR    R1,R15                COMPARE LENGTH
         LA    R14,MEMNAME           POSITION IN MEMBER NAME
         CLC   0(*-*,R14),MEMBER2    <<EXECUTED>>
MFIL330  EX    R15,*-6               IN THIS MEMBER NAME?
         BE    8(R2)                 YES, **PASSED
         LA    R14,1(,R14)
         BCT   R1,MFIL330            MAYBE, CHECK ALL OTHER POSITIONS
         B     4(R2)                 NO, **FAILED
         TITLE 'P D S  --  PDS DATE CONVERSION ROUTINE       09/28/88'
*
*        DATE CONVERSION ROUTINE -- CHANGES FORMAT YYDDDF TO MMDDYY
*
         SPACE 1
         ENTRY CONVDATE                                        SS JUL85
CONVDATE ST    R14,R14SAVE
         MVC   DAYTABLE,DAYMONTH
         XC    DOUBLE,DOUBLE
         MVC   0(3,R15),=X'456799' INVALID DATE IS 45/67/99
         SR    R14,R14             SETUP FOR LEAP YEAR TEST
         IC    R14,0(,R1)
         SLL   R14,4
         ST    R14,DOUBLE+4
         OI    DOUBLE+7,X'0F'
         LR    R14,R1
         CVB   R0,DOUBLE           GET YEAR IN BINARY
         SR    R1,R1
         SRDL  R0,2                SHIFT OFF REMAINDER OF YEAR/4
         LTR   R1,R1               THIS A LEAP YEAR?
         BNZ   *+8                 NO, BRANCH
         MVI   DAYTABLE+1,29       YES, FEB HAS 29 DAYS
         SPACE 1
         MVC   2(1,R15),0(R14)     YEAR RECORD CREATED
         MVC   DOUBLE+6(2),1(R14)
         TM    DOUBLE+7,X'0C'      VALID SIGN?
         BNO   DAYSKIP             NO, DON'T 0C7
         CVB   R1,DOUBLE           GET RELATIVE DAYS IN BINARY
         SPACE 1
         LA    R14,DAYTABLE
         SR    R0,R0
DAYLOOP  IC    R0,0(R14)           DAYS THIS MONTH
         SR    R1,R0               WITHIN THIS MONTH?
         BNP   DAYNOW
         LA    R14,1(R14)
         B     DAYLOOP
         SPACE 1
DAYNOW   AR    R1,R0               GET DAY OF THE MONTH
         LA    R0,10
         MR    R0,R0
         CVD   R1,DOUBLE
         MVC   1(1,R15),DOUBLE+6
         LA    R1,DAYTABLE-1
         SR    R14,R1
         LA    R1,10
         MR    R0,R14
         CVD   R1,DOUBLE
         MVC   0(1,R15),DOUBLE+6
         SPACE 1
DAYSKIP  L     R14,R14SAVE
         BR    R14
         TITLE 'P D S  --  PDS GROUP DISPLAY ROUTINE         09/28/88'
*
*        GROUP NAME DISPLAY -- UPDATES THE PDS300A MESSAGE
*
         SPACE 1
DEFGROUP TM    DSORG,DS1DSGPO                  PARTITIONED?
         BNOR  R14                             NO, RETURN
         CLI   MEMBERD,0                       ANY DEFAULT YET?
         BER   R14                             NO, RETURN
         ST    R14,R14SAVE                     RETURN ADDRESS
         LA    R0,17                           MAX CHARACTERS
         L     R1,MSGENTPT                     WHERE TO START OUTPUT
         MVC   0(17,R1),BLANK128               BLANK THE OUTPUT
         TM    PMEMMIN,X'80'                   ACTIVE MEMBER LIST?
         BNO   DEFGR10                         NO, BRANCH
         MVI   0(R1),C'('                      START OF MEMBER LIST
         LA    R1,1(,R1)                       NEXT CHARACTER
         BCTR  R0,0                            ONE LESS CHARACTER
         SPACE 1
DEFGR10  MVI   0(R1),C':'                      ASSUME COLON SEPARATOR
         TM    MEMBERD,FMEMBER1+FMEMBER2       ANY MEMBERS?
         BZ    DEFGR90                         NO, ASSUME ALL MEMBERS
         MVC   0(8,R1),MEMBERD+1+2             ASSUME A SINGLE MEMBER
         TM    MEMBERD,FMEM#MEM                MEMBER GROUP?
         BNO   DEFGR90                         NO, DONE
         SPACE 1
         SR    R14,R14
         ICM   R14,B'0011',MEMBERD+1           MACHINE LENGTH OF MEMBER
         BNZ   DEFGR20                         MORE THAN ZERO, BRANCH
         CLI   0(R1),X'00'                     NULL FIRST OPERAND?
         BNE   DEFGR20                         NO, BRANCH
         TM    MEMBERD,FMEMRANG+FMEMASTR       RANGE OR PART MEMBER?
         BNZ   DEFGR30                         YES, BRANCH
         SPACE 1
DEFGR20  AH    R14,=H'1'                       ACTUAL LENGTH
         SR    R0,R14                          OK?
         BNP   DEFGR90                         YES, BRANCH
         AR    R1,R14                          NEXT CHARACTER START
         SPACE 1
DEFGR30  MVI   0(R1),C':'                      ASSUME RANGE
         TM    MEMBERD,FMEMRANG                CORRECT?
         BO    *+8                             YES, BRANCH
         MVI   0(R1),C'/'                      NO, PATTERN
         TM    MEMBERD,FMEMASTR                PART NAME?
         BNO   *+8                             YES, BRANCH
         MVI   0(R1),C'*'                      NO, USE *
         TM    MEMBERD,FMEMBER2                ANY MEMBER 2?
         BNO   DEFGR90                         NO, BRANCH
         MVC   1(8,R1),MEMBERD+1+2+8           ADD THE SECOND NAME
         SPACE 1
DEFGR90  L     R1,MSGENTPT                     WHERE TO START OUTPUT
         TR    0(17,R1),TRLINE                 TRANSLATE TO PRINTABLE
         L     R14,R14SAVE                     RETURN ADDRESS
         BR    R14
         TITLE 'P D S  --  INITIALIZATION OF SPF ENVIRONMENT 09/28/88'
*        CALL SPF; REQUEST SPF TO CALL PDS RECURSIVELY AS A DIALOG
SPFRECUR DS    0H
         AIF ('&CISP' NE 'ISPFV2').NSPF350
         TM    FLAGSFF,FSPFOPT6         UNDER SPF AS A DIALOG?
         BOR   R2                       YES, BRANCH
.NSPF350 ANOP
         OI    FLAGSFF,FSPFERR          SPF ERROR FLAG
         MVI   ##ADRCM#,CONTINUE+EDITOR+FABEND
         BAS   R2,CLOSEIT               NEED TO CLOSE BEFORE SPF
         BAS   R2,DEALLDCB              AND FREE THE DATA SET
*
         ICM   R0,B'1100',PDSDATE   MM OF MM/DD/YY            ABL NOV86
         ICM   R0,B'0011',PDSDATE+3 DD OF MM/DD/YY            ABL NOV86
         ICM   R1,B'1100',PDSTIME   HH OF HH:MM               ABL NOV86
         ICM   R1,B'0011',PDSTIME+3 MM OF HH:MM               ABL NOV86
         AR    R0,R1                COMBINED                  ABL NOV86
         ST    R0,0(,R7)            SAVE DATE/TIME STAMP      ABL NOV86
*
         ESTAE 0                        *                      SS SEP89
         MVC   ISPFTEXT+4(L'ISPF),ISPF        ISPF   PGM(PDS45678) P...
         MVC   ISPFTEXT+ISPFPGM+4(8),PDSNAME  PDS COMMAND NAME
         ST    R7,ISPFTEXT+4+ISPFPARM         ADD STORAGE ADDRESS
         UNPK  ISPFTEXT+4+ISPFPARM(9),ISPFTEXT+4+ISPFPARM(5)
         MVI   ISPFTEXT+4+ISPFPARM+8,C')'     RESTORE )
         TR    ISPFTEXT+4+ISPFPARM(8),TRTABLE CONVERT TO EBCDIC
         CLC   PDSNAME(3),=C'PDS'       PDS... NAME?
         BNE   SPFREC2                  NO, BRANCH
         CLI   PDSNAME+5,C'T'           TEST IDENTIFIER?
         BNE   SPFREC2                  NO, BRANCH
         MVC   ISPFTEXT+4+ISPFTEST(4),=C'TEST'  ADD TEST TO STRING
SPFREC2  LA    R1,L'ISPF+4              LENGTH OF STRING PASSED TO SPF
         SLL   R1,16                    CLEAR BOTTOM TWO BYTES
         ST    R1,ISPFTEXT              SAVE STRING TOTAL LENGTH
*        M$ERRST ISPFTEXT               DELETE * TO OUTPUT COMMAND
         MVI   ISPFTEXT+3,8             OFFSET OF PGM(... PARAMETER
         LA    R1,ISPFTEXT              START OF PARAMETER LIST
         ST    R1,ADDRTEXT              COMMAND ADDRESS
         LA    R1,ADDRTEXT              START OF CPPL PARAMETERS
         LA    R15,FIRST4K              START OF EXTENDED DATA AREA
         LA    R15,ATTACHS1-FIRST4K(,R15)  FIRST PARAMETER LIST
         MVI   SPFECB,0                 CLEAR SPFECB          DRK OCT99
         ATTACH EPLOC=ISPF,ECB=SPFECB,SZERO=NO,SHSPV=78,SF=(E,(15))
         ST    R1,SPFTCB                TCB ADDRESS FOR THE SUBTASK
         WAIT  ECB=SPFECB               WAIT FOR COMPLETION
         DETACH SPFTCB                  REMOVE THIS SUBTASK
         NI    FLAGSFF,FF-FSPFCALL      SPF FLAG TURNED OFF
         SR    R5,R5
         CLC   ##SUBCOM(8),$END         END SUBCOMMAND?
         BE    RETURN8                  YES, DONE
         OI    FLAGSFF,FSPFERR          SPF ERROR
         B     RESTART0                 REALLOCATE THE FILE AND REOPEN
         TITLE 'P D S  --  PDS LOGGING OF SESSION DATA       09/28/88'
         SPACE 1
LOGDATA  L     R0,RECOVER                   CURRENT RECOVERY ADDRESS
         ENTRY LOGDATA                                         SS JUL85
         LA    R15,FIRST4K                  SECOND WORK AREA BASE
         STM   R14,R8,LOGREGS-FIRST4K(R15)  SAVE ENTRY REGISTERS
         LA    R0,LOGD90                    LOCAL RECOVERY ADDRESS
         ST    R0,RECOVER
         MVC   MSGLAST(80),BLANK128         BLANK
         LH    R14,0(,R1)                   LENGTH OF MESSAGE
         SH    R14,=H'5'                    MACHINE LENGTH VALID?
         BM    LOGD96                       NO, DO NOT LOG
         CH    R14,=H'79'
         BNH   *+8                          LINE LENGTH=MIN(80,ACTUAL)
         LH    R14,=H'79'
         MVC   MSGLAST(*-*),4(R1)          <<EXECUTED>>
         EX    R14,*-6                     MOVE IN THE PROMPT
         LA    R0,MSGLAST                      OUTPUT THE MESSAGE
         TM    DCBRECFM-IHADCB+LOGDCB,DCBRECV  RECFM=V?
         BNO   LOGD40                          NO, BRANCH
         CLC   0(2,R1),DCBLRECL-IHADCB+LOGDCB  LRECL OK?
         BNH   *+10                            YES, BRANCH
         MVC   0(2,R1),DCBLRECL-IHADCB+LOGDCB  NO, REDUCE LRECL
         LR    R0,R1
         SPACE 1
LOGD40   NI    FLAGSFF,FF-FLOGWRT           TURN OFF FOR AN ERROR
         PUT   LOGDCB,(0)
         OI    FLAGSFF,FLOGWRT              TURN ON -- IT IS OK
         B     LOGD96
         SPACE 1
LOGD90   LA    R15,FIRST4K        RECOVERY: SECOND WORK AREA BASE
         LM    R14,R8,LOGREGS-FIRST4K(R15)  RESET ENTRY REGISTERS
         MVI   CONTOPTN,0                   TURN OFF RECORDING
         MVI   OPENLIST,X'80'
         CLOSE (LOGDCB),MF=(E,OPENLIST)
         M$MSG L081                         NOTE THE CLOSE
***TEST  OI    ATTNECB,X'40'                MARK AS AN ATTENTION
LOGD96   LA    R15,FIRST4K                  SECOND WORK AREA BASE
         LM    R14,R1,LOGREGS-FIRST4K(R15)  RESET CHANGED REGISTERS
         ST    R0,RECOVER                   RESET THE RECOVERY ADDRESS
         BR    R14
         TITLE 'P D S  --  PDS ATTACH EXTERNAL SUBCOMMANDS   09/28/88'
*
*        ATTACH EXTERNAL PDS SUBCOMMANDS
*
         SPACE 3
ATTACH   LA    R0,NEWSTAX                 ABEND RECOVERY (EXCEPT EDIT)
         ST    R0,RECOVER
         SPACE 1
ATTACH2  MVC   DIRNAME,0(R3)               WHO TO CALL
         LR    R5,R1
         SPACE 2
*** IN A LINKLIST LIBRARY?
         BLDL  0,BLDLLIST -----+           CHECK FOR A LOAD MODULE
         LA    R1,X'100'       ×           TTR=1 (FOR SEQUENTIAL)
         ST    R1,DIRTTR       ×           RESET TTR
         LTR   R15,R15    <----+           IN THE LINKLIST?
         BZ    ATTACH8                     YES, LINK TO IT
         L     R15,CVTPTR                  NEED TO ALSO CHECK LPALIB
         L     R15,CVTLPDIA-CVTMAP(R15)    POINT TO LINK PACK DIRECTORY
         SPACE 2
*** MODULE NOT IN LINKLIST/STEPLIB, TRY THE IN-STORAGE LPALIB DIRECTORY
ATTACH4  CLC   8(8,R15),DIRNAME            THIS MODULE NAME?
         BE    ATTACH8                     YES, LINK TO IT
         CLI   8(R15),X'FF'                END OF DIRECTORY?
         LA    R15,40(,R15)
         BNE   ATTACH4                     NO, BRANCH
         MVC   INSERT#1(8),##SUBCAL        YES, ISSUE AN ERROR MESSAGE
         M$MSG L859$1
         B     NEWCMD
         SPACE 3
ATTACH8  OI    ##ADRCM#,EXTERNAL          AN EXTERNAL SUBCOMMAND
         LR    R1,R5
         MVI   SUBSECB,0                  CLEAR THE ATTENTION ECB
         SPACE 2
         L     R4,=A(STAEEXIT)            POINT TO THE ESTAE EXIT
         LA    R15,FIRST4K                START OF EXTENDED DATA AREA
         LA    R15,ATTACHS2-FIRST4K(,R15) SECOND PARAMETER LIST
         ATTACH EPLOC=(3),ECB=SUBSECB,SZERO=NO,SHSPV=78,              XX
               TERM=YES,ESTAI=((4),(7)),SF=(E,(15))
         SPACE 2
         ST    R1,SUBSTCB                 SUBTASK TCB ADDRESS
         WAIT  ECB=SUBSECB                WAIT FOR COMPLETION
         SPACE 2
         NI    ##ADRCM#,FF-EXTERNAL       BACK IN PDS NOW
         XC    M99RBPTR(40),M99RBPTR      CLEAR THE WORK AREA
         LA    R1,M99RBPTR                MARK ITS DATA SETS FOR REUSE
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND          MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20                 LENGTH 20
         MVI   S99VERB,S99VRBRI           REMOVE IN-USE VERB
         ST    R5,S99TXTPP                POINT TO TEXT POINTER
         SPACE 1
         LA    R3,M99TUNIT
         USING S99TUNIT,R3
         ST    R3,S99TUPTR                POINT TO TEXT UNITS
         OI    S99TUPTR,S99TUPLN          MARK END OF LIST
         MVI   S99TUKEY+1,1               KEY=1
         MVI   S99TUNUM+1,1               NUMBER=1
         MVI   S99TULNG+1,4               LENGTH OF TEXT=4
         MVC   S99TUPAR(4),SUBSTCB        SUBTASK TCB ADDRESS
         SPACE 1
         DYNALLOC
         SPACE 2
         ICM   R1,B'1111',SUBSTCB         NEED TO BE DETACHED?
         BZR   R2                         NO, DONE
         MVC   FULLWORD(4),SUBSTCB        PREPARE FOR THE XC
         XC    SUBSTCB(4),SUBSTCB         DO NOT DETACH AGAIN
         DETACH FULLWORD                  REMOVE THIS SUBTASK
         BR    R2                         DONE
         DROP  R1,R3,R4,R5
         TITLE 'P D S  --  PDS ATTENTION EXIT ROUTINE        09/28/88'
***
***      ATTENTION EXIT ROUTINE
***
         SPACE 1
ATTNEXIT M$ENTER ATTNEXIT
         MVC   PMEMHOLD(4),PMEMCURR      SAVE MEMBER LIST POSITION
         MVC   PMEMHOLD(1),FLAGSAA       SAVE MEMBER GROUP FLAG
         NI    FLAGSAA,FF-FMEM#MEM       TERMINATE ANY MEMBER GROUP
         MVC   PMEMCURR(4),PMEMMAX       TERMINATE ANY MEMBER LIST
         TM    ATTNECB,2+1             PARSE OR "ENTER OPTIONS"?
         BO    ATTNPOST                YES, "ENTER OPTIONS" -- BRANCH
         SPACE 2
         TM    ##ADRPA#,$A+$D          BROWSE, ISPF OR EDIT?
         BNO   ATTN$A                  NO, BRANCH
         STAX  ,                       CANCEL THE ATTENTION EXIT
         OI    ##ADRPA#,$F                                     SOFTATTN
         B     ATTNDONE
         SPACE 2
ATTN$A   TM    ##ADRPA#,$A             ATTENTIONS ACCEPTED?
         BZ    ATTNPTGT                YES, BRANCH
         MVI   ATTNECB,0               CLEAR THE ECB
         CLC   ##SUBCOM,$COP           COPY SUBCOMMAND?
         BE    ATTN$A2                 YES, BRANCH
         M$MSG L481                    COMPRESS SUBCOMMAND
         B     ATTNDONE
ATTN$A2  M$MSG L485                    COPY SUBCOMMAND
         B     ATTNDONE
         SPACE 2
ATTNPTGT TM    ATTNECB,X'40'           PREVIOUS ATTENTION CLEARED?
         BNZ   ATTNLOOP                NO, BRANCH
         TCLEARQ INPUT                 SYNCRONIZE INPUT QUEUE AGAIN
         OI    FLAGSII,FATTNPRO        FLAG FOR PROMPT INPUT ONLY
         L     R2,R14PTGT              M$PUTGT IS NOT RECURSIVE
         L     R1,MSGENTDA             POINT TO ENTER OPTIONS MESSAGE
        M$PUTGT (R1)                   PROMPT WITH "ENTER OPTIONS"
         ST    R2,R14PTGT              M$PUTGT IS NOT RECURSIVE
         TM    FLAGSBB,FNULL           NULL LINE ENTERED?
         BO    ATTNBACK                YES, UNDO ATTENTION
         OI    FLAGSBB,FCMD            NO, INDICATE COMMAND AVAILABLE
         B     ATTNPOST
ATTNBACK MVC   PMEMCURR(4),PMEMHOLD    RESET MEMBER LIST POSTION
         TM    PMEMHOLD,FMEM#MEM       MEMBER GROUP IN PROGRESS?
         BNO   ATTNDONE                NO, BRANCH
         OI    FLAGSAA,FMEM#MEM        RESET ANY MEMBER GROUP
         B     ATTNDONE
         SPACE 2
ATTNPOST LA    R1,ATTNECB
         TM    ##ADRCM#,EXTERNAL       ATTENTION FOR INTERNAL PDS CODE?
         BZ    ATTNPOS2                YES, BRANCH
         L     R2,SUBSTCB              SUBTASK TCB ADDRESS
         STATUS STOP,TCB=(2)           STOP THE SUBTASK
         LA    R1,SUBSECB              SUBCOMMAND ECB
ATTNPOS2 POST  (1)                     NOTIFY OF ATTENTION ENTERED
         XC    ADDRSUMR,ADDRSUMR       CLEAR THE SUMMARY ADDRESS
         XC    ATTRCNT2(4+4),ATTRCNT2  CLEAR COUNTS
         XC    ATTRTOT2(8+8),ATTRTOT2  CLEAR TOTALS
         XC    PARMLIST(28),PARMLIST   CLEAR THE STACK PARAMETER LIST
         LA    R1,PARMLIST
         L     R14,ADDRUPT
         L     R15,ADDRECT
         LA    R0,PARMLIST+24
         STM   R14,R0,IOPLUPT-IOPL(R1) FOR IOPLUPT, IOPLECT & IOPLECB
         L     R15,ADDRSTCK            STACK ROUTINE START
         STACK PARM=PARMLIST+16,DELETE=ALL,MF=(E,(1)),ENTRY=(15)
         SPACE 1
ATTNDONE SR    R15,R15                 ATTENTION PROCESSED
         M$EXIT
         SPACE 1
ATTNLOOP MVI   ATTNECB,0               CLEAR THE ATTENTION ECB FOR NOW
         M$MSG L470                    POSSIBLE LOOP MESSAGE
         OI    ##ADRPA#,$Q             NO ABEND MSG, QUIET MODE
         DC    H'0'                    *** S0C1 ABEND TO RESTART PDS **
         TITLE 'P D S  --  PDS ESTAE EXIT ROUTINE            09/28/88'
         ENTRY STAEEXIT                                        SS JUL85
STAEEXIT CSECT
         USING *,R15                    TEMPORARY BASE
         CH    R0,STAECD                WORK AREA PROVIDED?
         BNE   STAE02                   YES, BRANCH
         SR    R15,R15                  NO RETRY TO BE ATTEMPTED
         BR    R14                      RETURN
         DROP  R15
STAECD   DC    H'12'
         SPACE 1
STAE02   STM   R14,R12,12(R13)          SAVE REGISTERS
         LR    R5,R1                    SDWA POINTER
         USING SDWA,R5
         L     R7,SDWAPARM              WORK AREA ADDRESS
         LR    R8,R15                   BASE REGISTER
         USING STAEEXIT,R8
         AIF   ('&MVSLEV' LT 'MVS220').MVS22A                  SS JUL88
         L     R1,CVTPTR                *                      SS JUL88
         TM    CVTDCB-CVT(R1),CVTMVSE   REALY  XA              SS JUL88
         BZ    *+4+4+2                  NO, SKIP  BSM          SS JUL88
         LA    R1,*+4+2                 POINT AFTER BSM        SS JUL88
         BSM   0,R1                     SET MODE 24            SS JUL88
.MVS22A  ANOP                                                  SS JUL88
         LA    R15,FIRST4K
         LA    R15,STAESAVE-FIRST4K(,R15)  STAE SAVE AREA
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         LM    R9,R12,BASES
         MVC   INSERT#1,MSGABE          ABEND MESSAGE
         L     R0,SDWAABCC              ABEND CODE
         SRDL  R0,12                    SHIFT USER ABEND TO R1
         ST    R0,FULLWORD              SYSTEM ABEND CODE
         UNPK  INSERT#1(5),FULLWORD+2(3)
         TR    INSERT#1(4),TRTABLE
         MVI   INSERT#1,C'S'
         MVI   INSERT#1+4,X'40'
         SRL   R1,20                    USER ABEND
         CVD   R1,DOUBLE
         UNPK  DOUBLE(5),DOUBLE+5(3)                           ABL11/86
         OI    DOUBLE+4,X'F0'                 MAKE PRINTABLE   ABL11/86
         MVC   INSERT#1+MSGABEUS(4),DOUBLE+1  GET USER ABEND   ABL11/86
         TR    SDWANAME(8),TRLINE             MAKE DISPLAYABLE
         MVC   INSERT#1+MSGABEPG(8),SDWANAME  PROGRAM NAME
         SR    R0,R0
         SR    R1,R1
         ICM   R0,B'0111',SDWANXTP            NEXT INSTRUCTION
         ICM   R1,B'0111',SDWAEPA+1           ENTRY POINT ADDRESS ZERO?
         BNZ   STAE10                         NO, BRANCH
         LR    R1,R9                          PDS ENTRY POINT ADDRESS
         CLI   INSERT#1+MSGABEPG,C'.'         UNPRINTABLE NAME?
         BNE   STAE10                         NO, BRANCH
         MVC   INSERT#1+MSGABEPG(8),PDSNAME   YES, USE PDS MAINLINE
         SPACE 1
STAE10   TM    FLAGSJJ,FTSOCMD                TSOCMD VERIFICATION?
         BNO   STAE12                         NO, BRANCH
         L     R1,=V(VTSOCMD)                 YES, ACTUAL START
         MVC   INSERT#1+MSGABEPG(8),=CL8'VTSOCMD'
         SPACE 1
STAE12   TM    FLAGSJJ,FSUBCMD                SUBCMD VERIFICATION?
         BNO   STAE14                         NO, BRANCH
         L     R1,=V(VSUBCMD)                 YES, ACTUAL START
         MVC   INSERT#1+MSGABEPG(8),=CL8'VSUBCMD'
         SPACE 1
STAE14   NI    FLAGSJJ,FF-FTSOCMD-FSUBCMD     RESET ESTAE FLAGS
         SR    R0,R1                          OFFSET TO ERROR POSITIVE?
         BP    STAE16                         YES, BRANCH
         AR    R0,R1                          NO, USE ERROR LOCATION
         SR    R1,R1
         SPACE 1
STAE16   CLI   SDWANAME,C'.'                  DISPLAYABLE?
         BNE   STAE20                         YES, BRANCH
         MVC   INSERT#1+MSGABEAT-1(27),INSERT#1+MSGABEAT-2
         AR    R0,R1                          NO, USE ERROR LOCATION
         SPACE 1
STAE20   LR    R2,R0                          BEST OFFSET SO FAR
         CLC   INSERT#1+MSGABEPG(8),PDSNAME   PDS MAINLINE?
         BNE   STAE24                         NO, BRANCH
         LA    R3,STAEADDR-12                 START OF ADDRESS LIST -12
         SPACE 1
STAE22   LA    R3,12(,R3)                     NEXT ADDRESS POINTER
         CLI   0(R3),X'FF'                    END OF ADDRESSES?
         BE    STAE24                         YES, BRANCH
         SR    R0,R0
         SR    R1,R1
         ICM   R0,B'0111',SDWANXTP            NEXT INSTRUCTION
         ICM   R1,B'0111',1(R3)               POSSIBLE ASSEMBLY GROUP
         SR    R0,R1                          OFFSET TO ERROR VALID?
         BM    STAE22                         NO, BRANCH
         CR    R0,R2                          CLOSER FIT?
         BH    STAE22                         NO, BRANCH
         LR    R2,R0                          YES, USE THIS OFFSET
         MVC   INSERT#1+MSGABEPG(8),4(R3)     AND USE THIS LABEL
         B     STAE22
         SPACE 1
STAE24   ST    R2,FULLWORD
         UNPK  INSERT#1+MSGABEAT(7),FULLWORD+1(4)
         TR    INSERT#1+MSGABEAT(6),TRTABLE
         MVI   INSERT#1+MSGABEAT+6,X'40'
         CLM   R2,B'0111',SDWANXTP            ADJUSTED ADDRESS?
         BNE   *+8                            YES, BRANCH
         MVI   INSERT#1+MSGABEAT-1,X'40'      NO, CLEAR THE + SIGN
         SPACE 1
         CLC   INSERT#1+2(2),=C'3E'           S*3E ABEND?
         BE    STAE60                         YES, IGNORE THIS ABEND
***TEST  FROM TENNIE
***TEST  CLC   INSERT#1+2(2),=C'22'           S*3E ABEND?
***TEST  BE    STAE60                         YES, IGNORE THIS ABEND
***TEST  NI    SPFFLAG0,255-SPFDON            TURN OFF DIALOG MODE
         TM    ##ADRPA#,$Q                    QUIET MODE?
         BO    STAE30                         YES, BRANCH
         L     R2,MTADDR-1                    SAVE CURRENT PARM#1
         LA    R1,INSERT#1                    START OF THIS INSERT
         ST    R1,MTADDR-1                    TELL IKJEFF02
         MVI   MTHIGHL,MSGABEND-MSGABE        LENGTH FOR THIS MESSAGE
         M$MSG L999$1                         ABEND ERROR MESSAGE
         ST    R2,MTADDR-1                    RESET CURRENT PARM#1
         SPACE 1
         TCLEARQ INPUT                        CLEAR ANY INPUT
         XC    PARMLIST(28),PARMLIST          CLEAR THE STACK
         LA    R1,PARMLIST                    AREA FOR STACK PARM LIST
         SPACE 1
         L     R2,ADDRUPT
         L     R3,ADDRECT
         LA    R4,PARMLIST+24
         STM   R2,R4,IOPLUPT-IOPL(R1)         IOPLUPT, IOPLECT, IOPLECB
         SPACE 2
         L     R15,ADDRSTCK                   STACK ROUTINE
         STACK PARM=PARMLIST+16,DELETE=ALL,MF=(E,(1)),ENTRY=(15)
         SPACE 1
         NI    FLAGSAA,FF-FMEM#MEM            TURN OFF ANY MEMBER GROUP
         MVC   PMEMCURR(4),PMEMMAX      TERMINATE ANY MEMBER LIST
         SPACE 2
STAE30   LR    R1,R5                    SDWA START
         STM   R0,R15,SDWASRSV          RESET THE RETURN REGISTERS
         LR    R0,R7                    MAIN SAVE AREA ADDRESS
         TM    FLAGSFF,FSPFCALL         SPF INITIALIZED?
         BNO   STAE31                   NO, BRANCH
         LA    R2,FIRST4K
         LA    R0,SPFMAIN-FIRST4K(,R2)  SAVEAREA WHEN PDS IS A DIALOGUE
STAE31   ST    R0,SDWASR13              RESET REGISTER 13
         SR    R2,R2
         ICM   R2,B'0111',RECOVER+1     ANY ABEND RECOVERY ADDRESS?
         BZ    STAE60                   NO, BRANCH
         CLC   INSERT#1+2(2),=C'22'     S*22 ABEND?
         BE    STAE60                   YES, RECOVERY NOT POSSIBLE
         TM    ##ADRPA#,$Q              QUIET MODE?
         BO    STAE32                   YES, BRANCH
         TM    FLAGSGG,FRECVCON         STAE RECOVERY DISALLOWED?
         BO    STAE60                   YES, BRANCH
         SPACE 1
STAE32   TM    ##ADRCM#,EXTERNAL        EXTERNAL SUBCOMMAND?
         BO    STAE40                   YES, BRANCH
         TM    ##ADRCM#,CONTINUE+FABEND CONTINUE THROUGH RECOVERY?
         BO    STAE35                   YES, BRANCH
         NI    ##ADRCM#,FF-CONTINUE     TURN OFF ANY CONTINUATION
STAE35   LR    R1,R5                    PDS ABENDED !!!
         L     R13,4(,R13)
         SETRP REGS=(14,12),RC=4,RETADDR=(2),RETREGS=YES,FRESDWA=YES
         SPACE 2
STAE40   POST  SUBSECB                  NOTIFY OF ATTENTION ENTERED
         SPACE 1
STAE60   NI    FLAGSAA,FF-FMEM#MEM      TURN OFF ANY MEMBER GROUP
         MVC   PMEMCURR(4),PMEMMAX      TERMINATE ANY MEMBER LIST
         L     R13,4(,R13)
         LR    R1,R5                    SDWA POINTER
         SETRP REGS=(14,12),RC=0        NO RECOVERY
         SPACE 2
STAEADDR DC    A(PDSMAIN),CL8'PDSMAIN'
         DC    V(ALIAS),CL8'ALIAS'
         DC    V(PARSE),CL8'PARSE'
         DC    V(ISPDSPY),CL8'ISPDSPY'
         DC    X'FF'
         SPACE 2
MSGABE   DC    C'S123 U1234 AT +123456 IN PROGRAM 12345678'
MSGABEUS EQU   6                 USER ERROR CODE
MSGABEAT EQU   MSGABEUS+9        OFFSET TO ERROR
MSGABEPG EQU   MSGABEAT+18       PROGRAM NAME
MSGABEND EQU   *                 END OF MSGABE MESSAGE
         DROP  R8
PDSMAIN  CSECT
         TITLE 'P D S  --  PDS MEMBER IN USE CHECKING        09/28/88'
*
*        MEMBER IN USE CHECKS
*
         SPACE 2
ENQMTEST MVC   PARMLIST(4),ENQTEST     INITIALIZE ENQUEUE PARAMTERS
         ENQ   (SPFEDIT,DSNAME,E,52,SYSTEMS),RET=TEST,MF=(E,PARMLIST)
         SR    R1,R1
         LTR   R15,R15                 MEMBER IN USE?
         BZ    4(,R2)                  NO, SKIP ONE INSTRUCTION
         SPACE 1
         AIF ('&MVSLEV' LT 'MVS13X').NMVS13A
         XC    PARMLIST(48),PARMLIST
         GQSCAN AREA=(WORKTBL,296),RESNAME=(SPFEDIT,DSNAME,52),        X
               REQLIM=1,SCOPE=ALL,MF=(E,PARMLIST)
         SR    R1,R1
         CH    R15,=H'4'               ALLOCATED?
         BE    4(,R2)                  NO, RETURN
         LA    R1,L862                 ERROR?
         BH    MSGNEWXX                YES, TERMINATE
         LH    R14,WORKTBL+RIBVLEN-RIB         VARIABLE SECTION LENGTH
         LA    R14,WORKTBL+RIBEND-RIB(R14)     START OF RIB ENTRY
         MVC   INSERT#2(8),RIBEJBNM-RIBE(R14)  JOBNAME
         AGO   .GOTQCB
.NMVS13A ANOP
         MVC   INSERT#2(8),=CL8'????????'  NAME IF NOT ON SP 1.3 SYSTEM
         L     R14,16                  --> CVT
         LA    R14,640(,R14)           --> FIRST QCB
***TEST  LA    R14,TESTQCB  ***TEST    --> TEST STRUCTURE
         SPACE 1
ENQ2     ICM   R14,B'0111',1(R14)      ANY MORE MAJORS?
         BZ    ENQDONE                 NO, USE ????????
         CLC   16(8,R14),SPFEDIT       SPFEDIT MAJOR?
         BNE   ENQ2                    NO, CONTINUE LOOKING
         SPACE 1
         LA    R14,8(,R14)             POINT TO START OF MINOR LIST
ENQ4     ICM   R14,B'0111',1(R14)      ANY MORE MINORS?
         BZ    ENQDONE                 NO, USE ????????
         CLI   16(R14),52              SAME LENGTH?
         BNE   ENQ4                    NO, NO MATCH
         CLC   DSNAME(52),20(R14)      THE SAME MINOR?
         BNE   ENQ4                    NO, BRANCH
         SPACE 1
         L     R1,8(,R14)              FIRST (AND ONLY) QEL
         MVC   INSERT#2-2(2),14(R1)    ASID VALUE
         L     R1,16                   --> CVT
         L     R14,556(,R1)            --> ASVT
         LA    R15,520(,R14)           --> ENTRY ADDRESS -4
         L     R0,516(,R14)            NUMBER OF ASID'S
         SPACE 1
ENQ6     LA    R15,4(,R15)             NEXT ENTRY
         TM    0(R15),X'80'            IN USE?
         BO    ENQ8                    NO, BRANCH
         L     R1,0(,R15)              --> ASCB
         CLC   INSERT#2-2(2),36(R1)    THIS ASCB?
         BE    ENQ10                   YES, BRANCH
ENQ8     BCT   R0,ENQ6                 CHECK ALL ACTIVE ASID'S
         B     ENQDONE                 NOT FOUND, USE ????????
         SPACE 1
ENQ10    ICM   R15,B'1111',172(R1)     INITIATED PROGRAM JOBNAME
         BNP   ENQ12                   NO, BRANCH
         MVC   INSERT#2(8),0(R15)      YES, GET THE JOBNAME
         B     ENQDONE
ENQ12    ICM   R15,B'1111',176(R1)     JOBNAME FOR START/MOUNT/LOGON
         BNP   ENQ14                   NO, CANNOT LOCATE
         MVC   INSERT#2(8),0(R15)      YES, GET THE JOBNAME
         B     ENQDONE
ENQ14    MVC   INSERT#2(8),=CL8'SYSTEM'
         ICM   R15,B'1111',56(R1)      CSCB?
         BNP   ENQDONE                 NO, BRANCH
         MVC   INSERT#2(8),8(R15)      YES, GET THE JOBNAME
         SPACE 3
         AGO   .GOTQCB      ***TEST
         B     ENQDONE
         LA    R14,TESTQCB             --> TEST STRUCTURE
TESTQCB  DC    A(TESTQCB2)
TESTQCB2 DC    A(TESTQCB3),A(0),A(MINOR1),A(0),CL8'SYSDSN'
TESTQCB3 DC    A(00000000),A(0),A(MINOR2),A(0),CL8'SPFEDIT'
MINOR1   DC    CL2'NOT USED'
MINOR2   DC    A(MINOR3),A(0),A(TESTQEL1),A(0),AL1(52),AL3(0)
         DC    CL44'HABL.LIB.CNTL',CL8'XXXXXXXX'
MINOR3   DC    A(0),A(0),A(TESTQEL2),A(0),AL1(52),AL3(0)
         DC    CL44'HABL.LIB.CNTL',CL8'PDSMAIN'
TESTQEL1 DC    A(0),A(0),A(0),AL2(0),AL2(1)
TESTQEL2 DC    A(0),A(0),A(0),AL2(0),AL2(2)
         SPACE 3
.GOTQCB  ANOP
ENQDONE  DS    0H
         MVI   MTHIGHL,8               EIGHT CHARACTER MEMBER NAME
         MVI   MTHIGHL+4,8             EIGHT CHARACTER JOBNAME
         MVC   INSERT#1(8),DSNMEMQ     MEMBER IN USE
         LA    R1,L850$2               ERROR MESSAGE
         TM    ##ADRPA#,$Q             QUIET MODE CHECK?
         BOR   R2                      YES, RETURN
         M$MSG (R1)                    YES, MESSAGE
         BR    R2                                  AND ERROR RETURN
         TITLE 'P D S  --  PDS STANDARD MESSAGES             09/28/88'
*
*        SUBCOMMAND MESSAGE SUBROUTINES
*
         SPACE 3
NOMEMBER LA    R1,L853$1              MSG - (MEMBER) NOT FOUND
         MVC   INSERT#1(8),DIRNAME
         CLI   INSERT#1,C'*'          * MEMBER NAME?
         BNE   MSGNEW                 NO, BRANCH
         CLI   INSERT#1+1,X'40'       *BLANK MEMBER NAME?
         BNE   MSGNEW                 NO, BRANCH
         LA    R1,L858                YES, USE PDS858 INSTEAD
         B     MSGNEW
         SPACE 3
IOERROR  LA    R1,L836                MSG - I/O ERROR IN DIRECTORY
         SPACE 3
MSGNEWXX NI    FLAGSAA,FF-FMEM#MEM       TURN OFF ANY MEMBER GROUP
         MVC   PMEMCURR(4),PMEMMAX       TERMINATE ANY MEMBER LIST
         SPACE 2
MSGNEW   M$MSG (R1)                   OUTPUT THE MESSAGE REFERRED TO
         B     NEWCMD                   AND GET A NEW SUBCOMMAND
         TITLE 'P D S  --  PDS IKJEFF02 SETUP PROCESSING     09/28/88'
*
*        IKJEFF02 SETUP PROCESSING
*
         SPACE 1
$TMSGRT  CLI   0(R1),C'0'               IKJEFF02 CALL?
         BL    MESSAGE0                 NO, BRANCH
         ST    R14,R14PUTT              SAVE RETURN ADDRESS
         MVC   MTMSGID+1(3),0(R1)       MESSAGE IDENTIFIER
         TR    INSERT#1(8),TRLINE       TRANSLATE ANY MEMBER NAME
         CLI   0(R1),C'4'               WARNING OR ERROR MESSAGE?
         BL    $TMSGRT5                 NO, BRANCH
         LA    R0,3*5/3                 NUMBER OF MESSAGES TO SAVE
         LA    R15,ERRORMSG-3           START OF MESSAGES -3
         SPACE 1
$TMSGRT2 LA    R15,3(,R15)              NEXT SAVED MESSAGE ID
         CLC   0(3,R15),0(R1)           THIS MESSAGE?
         BE    $TMSGRT5                 YES, BRANCH
         CLI   0(R15),X'00'             EMPTY SLOT?
         BNE   $TMSGRT3                 NO, BRANCH
         MVC   0(3,R15),0(R1)           YES, SAVE THIS MESSAGE ID
         B     $TMSGRT5
$TMSGRT3 BCT   R0,$TMSGRT2              CONTINUE FOR ALL POSITIONS
         MVC   ERRORMSG(3*5),ERRORMSG+3 SLIDE UP BY ONE ENTRY
         MVC   ERRORMSG+3*5-3(3),0(R1)  SAVE THIS NEW ENTRY
         SPACE 1
$TMSGRT5 LA    R15,PARTADDR-4           PARTITIONED SEARCH LIST -4
         L     R1,PARTADDR              INITIALIZE FOR THE LOOP
$TMSGRT7 LA    R15,4(,R15)              NEXT LIST ENTRY
         LR    R0,R1                    SAVE FOR OVERRUN
         L     R1,0(,R15)               POINTER IN MSGCSECT
         CLI   0(R1),X'40'              END OF MSGCSECT?
         BE    $TMSGRT9                 YES, BRANCH
         CLC   1(3,R1),MTMSGID+1        IN THIS PARTITION ELEMENT?
         BNH   $TMSGRT7                 NO, BRANCH
         SPACE 1
$TMSGRT9 ST    R0,MTCSECTP              START OF MESSAGE CSECT
         LA    R1,MTPLPTR               START OF PARAMETER LIST
         L     R15,ADDRFF02             START OF IKJEFF02
         BASR  R14,R15                  FORMAT THIS MESSAGE
         SPACE 1
         L     R14,R14PUTT              LOAD RETURN ADDRESS
         L     R1,MTEXTRCT              ADDRESS OF EXTRACTED MESSAGE
         CLC   4(3,R1),=C'PDS'          PDS ROUTINE MESSAGE?
         BNE   MESSAGE0                 NO, BRANCH
         TM    SPFLAG0,SPFDON           SPF DISPLAY MODE ON    SS SEP84
         BO    MESSAGE0                 YES, WANT MSGIDS       SS SEP84
         L     R15,ADDRUPT              ADDRESS OF THE UPT
         TM    UPTSWS-UPT(R15),UPTMID   MESSAGE ID DESIRED?
         BO    MESSAGE0                 YES, BRANCH
         LH    R0,0(,R1)                CURRENT LENGTH
         SH    R0,=H'8'                 LESS EIGHT
         SLL   R0,16                    SHIFT TO CORRECT POSITION
         ST    R0,8(,R1)                STORE OVER MESSAGE-ID
         LA    R1,8(,R1)                POINT TO NEW LENGTH WORD
         B     MESSAGE0
         TITLE 'P D S  --  PDS MESSAGE/PUTLINE PROCESSING    09/28/88'
*
*        M$ERRST PROCESSING (MULTILEVEL MESSAGES HAVE BEEN DISABLED)
*
         SPACE 1
MESSTXT1 LA    R1,MSGTEXT1              OUTPUT MSGTEXT1
         SPACE 1
MESSAGE0 ST    R14,R14PUTM              SAVE LINKAGE REGISTER
        M$PUTLIN (R1),ATTN=NEWCMD       DEFAULT INTERRUPT ADDRESS
         L     R14,R14PUTM              RESTORE LINKAGE REGISTER
         BR    R14                      RETURN
         SPACE 3
*
*        PUTLINE PROCESSING
*
         SPACE 1
M$PUTLIN TM    ATTNECB,X'40'          ATTN OCCUR?
         BOR   R14                    YES, IMMEDIATE RETURN
         ST    R14,R14PUTL
         TM    FLAGSFF,FLOGWRT        LOG RECORDING?
         BNO   PUTLINE1               NO, BRANCH
         ST    R14,R14PUTL2           SECONDARY PUTLINE RETURN ADDRESS
         L     R14,R14PUTM
         ST    R14,R14PUTL2+4
         BAS   R14,LOGDATA            YES, LINK TO LOG ROUTINE
         L     R14,R14PUTL2+4
         ST    R14,R14PUTM            LINKAGE FOR MESSAGE0
         L     R14,R14PUTL2
         ST    R14,R14PUTL
PUTLINE1 DS    0H
         SPACE 1
         TM    SPFLAG0,SPFDON         DIALOG DISPLAY MODE      SS JUL84
         BZ    SPFNO1                 NO                       SS JUL84
         MVI   SPFLAG1,SPFPUTL        FUNCTION TYPE            SS JUL84
         L     R15,=V(ISPDSPY)                                 SS JUL84
         TM    ##ADRCM#,EXTERNAL      EXTERNAL SUBCOMMAND?    ABL NOV84
         BNOR  R15                    NO, CALL ISPMODE        ABL NOV84
         CLC   4(6,R1),=C'PDS999'     PDS ABEND MESSAGE?      ABL NOV84
         BNER  R15                    NO, CALL ISPMODE        ABL NOV84
*** ISPMODE CANNOT ISSUE THIS ERROR MESSAGE ???               ABL NOV84
SPFNO1   DS    0H                                              SS JUL84
         SPACE 1
         LR    R0,R1                  SAVE DATA LINE POINTER
         LA    R1,PARMLIST
         USING IOPL,R1
         L     R14,ADDRUPT
         L     R15,ADDRECT
         STM   R14,R15,IOPLUPT       INITIALIZE IOPLUPT AND IOPLECT
         SPACE 1
         LA    R15,ATTNECB
         ST    R15,IOPLECB           INITIALIZE IOPLECB
         DROP  R1
         SPACE 1
         TM    FLAGSEE,FNOTTERM      FROM A CLIST SOURCE?
         BNO   PUTLINE4              NO, BRANCH
         CLI   CONTOPTN,03           CONTROL DSN OUTPUT?
         BNE   PUTLINE4              NO, BRANCH
         L     R14,R14PUTL           RETURN ADDRESS
         B     4(R14)                RETURN ADDRESS (+4)
PUTLINE4 DS    0H
**
         L     R15,ADDRPUTL
         SPACE 2
         PUTLINE PARM=PUTLPARM,ENTRY=(15),MF=(E,(1)),                  X
               OUTPUT=((0),TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK)
         SPACE 2
         L     R14,R14PUTL           RETURN ADDRESS (+0 OR +4)
         TM    ATTNECB,X'40'         ATTN OCCUR?
         BOR   R14                   YES, RETURN AT +0
         SPACE 2
         CH    R15,=H'4'             PUTLINE ERROR SIGNALLED?
         BNH   4(R14)                NO, RETURN AT +4
         SPACE 2
         LA    R1,PUTLINER           ERROR MESSAGE
         LA    R0,L'PUTLINER         ERROR MESSAGE LENGTH
         TPUT  (1),(0),R             PUTLINE FAILED
         SPACE 2
         L     R1,PUTLPARM+4         START OF OUTPUT MESSAGE
         LA    R1,4(,R1)             LESS LENGTH CODE
         LA    R0,79                 FIRST 79 BYTES
         TPUT  (1),(0),R             INVALID OUTPUT TEXT
         SPACE 2
         NOP   NEWCMD                LOCATION FOR TEST COMMAND
         DC    H'0'                  FORCE AN ABEND CLEANUP
         SPACE 2
PUTLINER DC    C'*** PUTLINE FAILED, RC > 4; DATA WAS:'
         TITLE 'P D S  --  PDS PUTGET PROCESSING             09/28/88'
*
*        PUTGET PROCESSING
*
         SPACE 1
M$PUTGT  TM    ATTNECB,X'40'         ATTN OCCUR?
         BOR   R14                   YES, IMMEDIATE RETURN
         LA    R0,1                  ONLY ONE SEGMENT
         STM   R0,R1,PUTOLD1
         ST    R14,R14PTGT
         TM    FLAGSFF,FLOGWRT       LOG RECORDING?
         BNO   PUTGT01               NO, BRANCH
         ST    R14,R14PUTL2+8
         BAS   R14,LOGDATA           YES, LINK TO LOG ROUTINE
         L     R14,R14PUTL2+8
         ST    R14,R14PTGT
         L     R1,PUTOLD1+4          PROMPT MESSAGE
PUTGT01  DS    0H
         SPACE 1
         TM    SPFLAG0,SPFDON         DIALOG DISPLAY MODE      SS JUL84
         BZ    SPFNO2                 NO                       SS JUL84
         MVI   SPFLAG1,SPFPTGET       FUNCTION TYPE            SS JUL84
         L     R15,=V(ISPDSPY)                                 SS JUL84
         BR    R15                                             SS JUL84
SPFNO2   DS    0H                                              SS JUL84
         NI    FLAGSBB,FF-FNULL
         SPACE 1
         LA    R0,1                  ONLY ONE SEGMENT
         STM   R0,R1,PUTOLD1
         SPACE 2
PUTGT02  LA    R1,PARMLIST
         L     R14,ADDRUPT
         L     R15,ADDRECT
         LA    R0,ATTNECB
         STM   R14,R0,IOPLUPT-IOPL(R1)  INITIALIZE IOPLUPT, IOPLECT,
*                                                  AND IOPLECB
         TM    FLAGSJJ,FSTACKED         STACKED DATA?         ABL NOV86
         BNO   PUTGT03                  NO, BRANCH            ABL NOV86
         L     R15,PUTOLD1+4            PROMPT MESSAGE        ABL NOV86
         CLC   4(7,R15),PDS300A+4       ENTER OPTIONS?        ABL NOV86
         BE    PUTGT20                  YES, BRANCH           ABL NOV86
PUTGT03  DS    0H                                             ABL NOV86
         L     R15,ADDRPTGT
         LA    R14,PTGTPARM             LOAD PARM ADDRESS
         MVI   00(R14),X'10'            SINGLE LEVEL
         MVI   01(R14),X'80'            MODE MESSAGE
         MVI   08(R14),X'00'            PUTGET
         MVI   10(R14),X'80'            TGET EDIT
         LA    R0,PUTOLD1               ADDRESS OF OUTPUT
         ST    R0,4(,R14)
         SPACE 1
         TM    FLAGSII,FATTNPRO         ATTENTION PROCESSING?
         BNO   PUTGT04                  NO, BRANCH
         MVI   08(R14),X'10'            TERM PROCESSING
         NI    FLAGSII,FF-FATTNPRO      NOT ATTENTION PROCESSING
         SPACE 1
PUTGT04  PUTGET PARM=PTGTPARM,MF=(E,(1)),ENTRY=(15),                   X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK)
         STC   R15,PARMLIST          SAVE RETURN CODE
         NI    FLAGSEE,FF-FNOTTERM   ASSUME INPUT WAS FROM THE TERMINAL
         CLI   PARMLIST,4            CORRECT?
         BNE   *+8                   YES, BRANCH
         OI    FLAGSEE,FNOTTERM      NO, NOT FROM THE TERMINAL
         SPACE 1
         CLI   PARMLIST,12           PUTGET STATUS:
         BH    EXIT8N                  ERROR -- BRANCH
         BL    PUTGT10                 SUCCESSFUL, STACK OR ATTENTION
         L     R1,ADDRECT              STACK, 2ND-LEVEL MSG., NO PAUSE
         OI    ECTMSGF-ECT(R1),X'80' IGNORE SECOND LEVEL MESSAGES AND
         B     PUTGT02               GET THE DATA FROM THE STACK
         SPACE 3
PUTGT10  SR    R15,R15               ASSUME RETURN AT +0
         TM    ATTNECB,X'40'         ATTN OCCUR?
         BO    PUTGT80               YES, BRANCH
         SPACE 1
         LA    R1,PTGTPARM           PUTGET PARM AREA START
         L     R1,PGPBIBUF-PGPB(R1)  INPUT BUFFER ADDRESS
         XC    PUTGETBF(256),PUTGETBF                         ABL NOV86
         SPACE 2
         LH    R14,0(,R1)            SUBCOMMAND LENGTH
         CH    R14,=H'256'           MORE THAN PDS'S LIMIT?
         BNH   *+8                   NO, BRANCH
         LH    R14,=H'256'           YES, USE THE CURRENT LIMIT
         BCTR  R14,0                 MACHINE LENGTH OF THIS LINE
         MVC   PUTGETBF(*-*),0(R1)   <<EXECUTED>>
         EX    R14,*-6               SAVE THE ENTERED LINE
         SPACE 2
         LH    R0,0(R1)              BUFFER LENGTH
         ICM   R0,B'1000',=X'01'     SUBPOOL IS 1
         SPACE 1
         FREEMAIN R,LV=(0),A=(1)     RELEASE THE INPUT BUFFER
         B     PUTGT30                                        ABL NOV86
         SPACE 2                                              ABL NOV86
PUTGT20  LA    R15,FIRST4K                                    ABL NOV86
         MVC   PUTGETBF(256),PUTGETST-FIRST4K(R15)            ABL NOV86
         NI    FLAGSJJ,FF-FSTACKED                            ABL NOV86
         SPACE 2                                              ABL NOV86
*UTGT30  NI    FLAGSJJ,FF-FSTACKED                            ABL NOV86
PUTGT30  LH    R14,PUTGETBF          STRING LENGTH            ABL NOV86
         SH    R14,=H'4'             LESS HEADER LENGTH       ABL NOV86
         BNP   PUTGT60               NULL, BRANCH             ABL NOV86
         LA    R1,PUTGETBF+3                                  ABL NOV86
         SPACE 1                                              ABL NOV86
PUTGT40  LA    R1,1(,R1)             FIND                     ABL NOV86
         CLI   0(R1),C';'                FIRST                ABL NOV86
         BE    PUTGT50                        SEMICOLON       ABL NOV86
         BCT   R14,PUTGT40           FOUND?                   ABL NOV86
         B     PUTGT60               NO, BRANCH               ABL NOV86
         SPACE 2                                              ABL NOV86
PUTGT50  MVI   0(R1),X'40'           BLANK THE SEMICOLON      ABL NOV86
         LCR   R0,R14                - REMAINING LENGTH       ABL NOV86
         SH    R14,=H'2'             SKIP ; MACHINE LENGTH OK?ABL NOV86
         BNP   PUTGT60               NO, BRANCH               ABL NOV86
         OC    1(*-*,R1),1(R1)       <<EXECUTED>>             ABL NOV86
         EX    R14,*-6               ANY FOLLOWING DATA?      ABL NOV86
         BZ    PUTGT60               NO, BRANCH               ABL NOV86
         OI    FLAGSJJ,FSTACKED      STACKED DATA NOW         ABL NOV86
         AH    R0,PUTGETBF           LESS NUMBER              ABL NOV86
         STH   R0,PUTGETBF                      REMOVED       ABL NOV86
         LA    R15,FIRST4K                                    ABL NOV86
         XC    PUTGETST-FIRST4K(256,R15),PUTGETST-FIRST4K(R15)    NOV86
         MVC   PUTGETST-FIRST4K+4(*-*,R15),1(R1)  <<EXECUTED>>ABL NOV86
         EX    R14,*-6               MOVE TO SECOND STRING    ABL NOV86
         LA    R0,5(,R14)            LENGTH OF SECOND STRING  ABL NOV86
         STH   R0,PUTGETST-FIRST4K(R15)                       ABL NOV86
         XC    1(*-*,R1),1(R1)       <<EXECUTED>>             ABL NOV86
         EX    R14,*-6               CLEAR AFTER SEMICOLON    ABL NOV86
PUTGT60  DS    0H                                             ABL NOV86
         SPACE 2
         LA    R1,PUTGETBF           ADDRESS OF INPUT LINE
         ST    R1,ADDRCBUF           SAVE THE LINE ADDRESS
         SPACE 1
         TM    FLAGSFF,FLOGWRT       LOG RECORDING?
         BNO   PUTGT70               NO, BRANCH
         L     R14,R14PTGT
         ST    R14,R14PUTL2+12
         L     R1,ADDRCBUF           USER RESPONSE
         BAS   R14,LOGDATA           YES, LINK TO LOG ROUTINE
         L     R14,R14PUTL2+12
         ST    R14,R14PTGT
         SPACE 2
PUTGT70  LA    R15,4                 ASSUME RETURN AT +4
         CH    R15,PUTGETBF          A NULL LINE?
         BL    PUTGT80               NO, BRANCH
         OI    FLAGSBB,FNULL         YES, INDICATE A NULL LINE
         SPACE 2
PUTGT80  L     R14,R14PTGT
         B     0(R14,R15)
         TITLE 'P D S  --  PDS DATA SET ALLOCATION           09/28/88'
*
*        DATA SET ALLOCATION SUBROUTINE
*
         SPACE 2
ALLOCATE CSECT
         USING *,R8
         LR    R8,R15
         ST    R14,R14SAVE             SAVE LINKAGE REGISTER
         NI    FLAGSCC,FF-FVOLSET      CLEAR VOLUME SET FLAG
         SPACE 2
DYNA010  NI    FLAGSCC,FF-FPERMDS      CLEAR PERMANENT STATUS
         SPACE 2
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBAL         ALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL                        START OF TEXT
         SPACE 1
         MVC   0(L'ALLDDNAM,R3),ALLDDNAM         SPECIFY DDNAME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLDDNAM(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLDSORG,R3),ALLDSORG         SPECIFY DSORG TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLDSORG(,R3)                START OF NEXT TEXT
         SPACE 1
         TM    FLAGSBB,FNOTFILE                  FILENAME ENTERED?
         BO    DYNA080                           NO, BRANCH
         SPACE 1
*** FILE NAME ALLOCATION
* GET DSN FROM DDNAME + CAT NUMBER      *                      SS JUL88
         L     R1,X'21C'          ACT TCB                      SS JUL88
         L     R1,TCBJSCB-TCBRBP(R1)     JSCB                  SS JUL88
         L     R1,JSCDSABQ-IEZJSCB(R1)   DSAB QUE              SS JUL88
         L     R15,12(,R1)               FIRST DSAB            SS JUL88
         USING DSAB,R15                                        SS JUL88
DYNA020  DS    0H                       *                      SS JUL88
         LTR   R15,R15                  END OF THE LINE        SS JUL88
         BZ    DYNA050                  NO DDNAME              SS JUL88
         L     R1,DSABTIOT                                     SS JUL88
         CLC   4(8,R1),DDNAMEH          THIS DDNAME            SS JUL88
         BE    DYNA025                  YES                    SS JUL88
         L     R15,DSABFCHN             NEXT DSAB              SS JUL88
         B     DYNA020                  CONTINUE SEARCH        SS JUL88
DYNA025  DS    0H                       *                      SS JUL88
         LR    R14,R15                  SAVE DSAB ADDR         SS JUL88
         L     R15,DSABFCHN             NEXT ENTRY             SS JUL88
         LTR   R15,R15                  ANY ENTRY              SS JUL88
         BZ    DYNA050                  NO DDNAME              SS JUL88
         LA    R0,1                     ASSUME ONLY ONE        SS JUL88
         L     R1,DSABTIOT                                     SS JUL88
         CLC   4(8,R1),BLANKS           CONCATENATED           SS JUL88
         BNE   DYNA035                  NO                     SS JUL88
         LR    R15,R14                  START WITH FIRST       SS JUL88
         SR    R0,R0                    ZERO COUNTER           SS JUL88
DYNA030  DS    0H                       *                      SS JUL88
         A     R0,=F'1'                 ADD ONE                SS JUL88
         CH    R0,CONCATNM              IS THIS THE NUMBER     SS JUL88
         BNL   DYNA036                  YES                   ABL AUG88
         LR    R14,R15                  SAVE PREV              SS JUL88
         L     R15,DSABFCHN             NEXT ENTRY             SS JUL88
         LTR   R15,R15                  ANY ENTRY              SS JUL88
         BZ    DYNA035                  USE LAST ENTRY         SS JUL88
         L     R1,DSABTIOT                                     SS JUL88
         CLC   4(8,R1),BLANKS           CONCATENATED           SS JUL88
         BE    DYNA030                  YES, CONTINUE SEARCH   SS JUL88
DYNA035  DS    0H                       *                      SS JUL88
         STC   R0,DDNAMEN               CAT NUMBER OF          SS JUL88
         B     DYNA040                  DONE WITH SEARCH       SS JUL88
DYNA036  DS    0H                       *                      SS JUL88
         LR    R14,R15                  SAVE GOOD ENTRY        SS JUL88
         STC   R0,DDNAMEN               CAT NUMBER OF          SS JUL88
DYNA037  DS    0H                       *                      SS JUL88
         L     R15,DSABFCHN             NEXT ENTRY             SS JUL88
         LTR   R15,R15                  ANY ENTRY              SS JUL88
         BZ    DYNA040                  FOUND LAST ENTRY       SS JUL88
         L     R1,DSABTIOT                                     SS JUL88
         CLC   4(8,R1),BLANKS           CONCATENATED           SS JUL88
         BNE   DYNA040                  NO, END SEARCH         SS JUL88
         A     R0,=F'1'                 ADD ONE                SS JUL88
         B     DYNA037                  TRY NEXT ONE           SS JUL88
DYNA040  DS    0H                       *                      SS JUL88
         LR    R15,R14                  THIS ENTRY IS THE ONE  SS JUL88
         STC   R0,DDNAMEM               NUMBER IN CAT          SS JUL88
         L     R1,DSABTIOT                                     SS JUL88
         USING TIOENTRY,R1                                     SS JUL88
         SR    R14,R14                  *                      SS JUL88
         ICM   R14,7,TIOEFSRT           UCB ADDRESS            SS JUL88
         TM    0(R14),X'80'             UCB FOR VID DEVICE     SS MAR89
         BO    DYNA050                  YES,  NO VOLUME SERIAL SS MAR89
         CLI   UCBTYP+2(R14),X'20'      IS IT DASD             SS JUL88
         BNE   DYNA065                  NO,  CANNOT USE        SS JUL88
         MVC   VOLUME(6),UCBVOLI(R14)   VOL SER                SS JUL88
         AIF   ('&MVSLEV' GE 'MVS220').MVS22C                  SS JUL88
         ICM   R1,7,TIOEJFCB                                   SS JUL88
         LA    R1,16(,R1)        OVER HEADER                   SS JUL88
         MVC   DSNAME(44),0(R1)         MOVE DSN               SS JUL88
         AGO   .MVS22CX                                        SS JUL88
.MVS22C  ANOP                                                  SS JUL88
         L     R1,CVTPTR                *                      SS JUL88
         TM    CVTDCB-CVT(R1),CVTMVSE   REALY  XA              SS JUL88
         BZ    *+4+4+4+2                NO, SKIP  BSM          SS JUL88
         LA    R1,*+4+4+2               POINT AFTER BSM        SS JUL88
         O     R1,=X'80000000'          31 BIT MODE            SS JUL88
         BSM   0,R1                     SET MODE               SS JUL88
*        L     R1,DSABSIOT              POINT TO SIOT          SS JUL88
*        L     R1,SJFCBPTR-SIOT(R1)     JFCB ADDR              SS JUL88
*        MVC   DSNAME(44),0(R1)         MOVE DSN               SS JUL88
         SPACE 1
         L     R1,DSABTIOT              POINT TO TIOT         DRK AUG99
         DROP  R15                                            DRK AUG99
         USING TIOENTRY,R1                                    DRK AUG99
         LA    R6,EPA                   POINT TO EPA          DRK AUG99
         ST    R6,SWEPAPTR              INITIALIZE EPA PTR    DRK AUG99
         USING ZB505,R6                                       DRK AUG99
         XC    SWAEPAX,SWAEPAX          INITIALIZE THE EPA    DRK AUG99
         MVC   SWVA,TIOEJFCB            SVA OF JFCB INTO EPA  DRK AUG99
         SWAREQ FCODE=RL,               LOCATE                DRK AUG99X
               EPA=SWEPAPTR,             JFCB                 DRK AUG99X
               MF=(E,PARMLIST),           IN                  DRK AUG99X
               UNAUTH=YES                  SWA                DRK AUG99
         L     R1,SWBLKPTR              SET PTR TO THE JFCB   DRK AUG99
         DROP  R6                                             DRK AUG99
         USING INFMJFCB,R1              ADDRESS JFCB          DRK AUG99
         MVC   DSNAME(44),JFCBDSNM      MOVE DSN              DRK AUG99
         SPACE 1
         L     R1,CVTPTR                *                      SS JUL88
         TM    CVTDCB-CVT(R1),CVTMVSE   REALY  XA              SS JUL88
         BZ    *+4+4+2                  NO, SKIP  BSM          SS JUL88
         LA    R1,*+4+2                 POINT AFTER BSM        SS JUL88
         BSM   0,R1                     SET MODE 24            SS JUL88
.MVS22CX ANOP                                                  SS JUL88
         OI    FLAGSBB,FNOTFILE                  IGNORE FILE NOW
         LA    R0,44
         LA    R1,DSNAME+44
         SPACE 1
DYNA042  BCTR  R1,0                              BACK UP ONE BYTE
         CLI   0(R1),X'40'                       BLANK?
         BNE   DYNA044                           NO, BRANCH
         BCT   R0,DYNA042                        YES, FIND NONBLANK
         SPACE 1
DYNA044  STH   R0,DSNLEN                         UPDATE DSNAME LENGTH
         B     DYNA080
         SPACE 1
DYNA050  LA    R1,M99RBPTR
         MVI   S99VERB,S99VRBIN                  REQUEST INFORMATION
         MVI   WORKTBL+1,X'01'                   SPECIFY DDNAME KEY
         MVC   WORKTBL+6(8),DDNAMEH              SPECIFY DDNAME
         MVC   DDNAME(8),DDNAMEH                 SAVE DDNAME
         MVI   WORKTBL+6+8+1,X'0A'               REQUEST DSORG
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLDSNAM,R3),ALLDSNAM         SPECIFY DSNAME TEXT
         MVI   1(R3),X'05'                       REQUEST DSNAME KEY
         MVC   6(44,R3),BLANK128                 BLANK DSNAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 1
         LTR   R15,R15                           ANY PROBLEM?
         BNZ   DYNA400                           YES, BRANCH
         SPACE 1
         MVC   DSNLEN(46),4(R3)                  GET DSN AND LENGTH
         MVC   DSORG(2),WORKTBL+20               SAVE RETURNED DSORG
         MVC   VOLUME(8),BLANKS
         MVI   VOLALLOC,X'40'                    VOLUME IS NOT KNOWN
         L     R1,X'21C'                         --> CURRENT TCB
         L     R1,X'00C'(,R1)                    --> TIOT
         LA    R15,24                            OFFSET TO TIOENTRY
         SPACE 1
DYNA060  LA    R1,0(R15,R1)                      NEXT ENTRY
         CLI   0(R1),0                           END OF TIOT?
         BE    DYNA200                           YES, BRANCH
         SR    R15,R15
         IC    R15,0(,R1)
         CLC   4(8,R1),DDNAME                    THIS DDNAME?
         BNE   DYNA060                           NO, BRANCH
         SPACE 1
         L     R14,16(,R1)                       POINT TO UCB
         TM    18(R14),X'20'                     DASD?
         BO    DYNA070                           YES, BRANCH
DYNA065  M$MSG L843                              NO, ERROR MESSAGE
         B     DYNA440
         SPACE 1
DYNA070  MVC   VOLUME(6),28(R14)                 SAVE VOLUME NAME
         MVC   VOLALLOC(6),28(R14)               SAVE VOLUME NAME
         B     DYNA200
         SPACE 3
*** ALLOCATION BY DATA SET NAME
DYNA080  OI    S99FLG11,S99NOCNV                 USE A FRESH ALLOCATION
         LA    R1,M99RBPTR
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLVOLUM,R3),ALLVOLUM         SPECIFY VOLUME TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R0,L'ALLVOLUM(,R3)                START OF NEXT TEXT
         SPACE 1
         CLI   VOLUME,X'40'                      ANY VOLUME SPECIFIED?
         BE    DYNA100                           NO, BRANCH
         MVI   1(R3),X'10'                       CONVERT TO SPECIFY
         MVC   6(6,R3),VOLUME                    SPECIFY VOLUME
         LA    R3,L'ALLVOLUM(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLUNIT,R3),ALLUNIT           SPECIFY UNIT TEXT
         MVC   6(8,R3),ALLOLSYS                  USE "SYSALLDA"
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R0,L'ALLUNIT(,R3)                 START OF NEXT TEXT
         SPACE 1
DYNA100  LR    R3,R0                             NEXT TEXT POINTER
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLPERM,R3),ALLPERM           SPECIFY PERMANENT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLPERM(,R3)                 START OF NEXT TEXT
         SPACE 1
         CLI   PASSWORD,X'41'                    ANY PASSWORD?
         BL    DYNA140                           NO, BRANCH
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLPASSW,R3),ALLPASSW         SPECIFY PASSWORD TEXT
         MVC   6(8,R3),PASSWORD                  SPECIFY DDNAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLPASSW(,R3)                START OF NEXT TEXT
         SPACE 1
DYNA140  LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLDSNAM,R3),ALLDSNAM         SPECIFY DSNAME TEXT
         MVC   4(46,R3),DSNLEN                   SPECIFY DSNAME
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLDSNAM+44(,R3)             START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLALLOC,R3),ALLALLOC         SPECIFY DISP TEXT
         MVC   6(1,R3),DSPALLOC                  SPECIFY DISPOSITION
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLALLOC(,R3)                START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLNORM,R3),ALLNORM           SPECIFY NORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         LA    R3,L'ALLNORM(,R3)                 START OF NEXT TEXT
         SPACE 1
         LA    R5,4(,R5)                         NEXT POINTER ELEMENT
         MVC   0(L'ALLANORM,R3),ALLANORM         SPECIFY ABNORMAL TEXT
         ST    R3,S99TUPTR                       POINT TO TEXT UNIT
         OI    S99TUPTR,X'80'                    MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   DYNA400                  NO, BRANCH
         MVC   DDNAME,WORKTBL+6         SAVE DDNAME
         MVC   DSORG(2),WORKTBL+20      SAVE DSORG
         MVC   VOLALLOC(6),VOLUME       SET THE VOLUME SPECIFIED
         CLI   VOLUME,X'40'             ANY VOLUME?
         BNE   *+10                     YES, BRANCH
         MVC   VOLALLOC(6),WORKTBL+28   GET THE ALLOCATED VOLUME NAME
         SPACE 1
         CLC   DDNAME(3),=CL8'SYS00000'   TEMPORARY TYPE DDNAME?
         BNE   DYNA200                    NO, BRANCH
         NC    WORKTBL+6(8),=CL8'SYS00000'  MASK WITH "SYS00000"
         CLC   WORKTBL+6(8),=CL8'SYS00000'  TEMPORARY TYPE DDNAME?
         BE    *+8                          YES, BRANCH
DYNA200  OI    FLAGSCC,FPERMDS            NO, MARK AS "PERMANENT"
         SPACE 1
         DEVTYPE DDNAME,DEVTYPE,DEVTAB  GET DEVICE DEPENDENT DATA
         SPACE 1
         L     R14,OBTAIN               OBTAIN FLAGS
         LA    R15,DSNAME               ADDRESS OF DSNAME
         LA    R0,VOLALLOC              VOLUME SERIAL
         LA    R1,DS1FMTID              OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                GET THE FORMAT 1 DSCB
         SPACE 1
         LTR   R15,R15                  SUCESSFUL OBTAIN?
         BZ    DYNA260                  YES, BRANCH
         SPACE 1
*     IF THE DSNAME IS AN ALIAS ENTRY IN A VSAM CATALOG, A LOCATE
*     WILL PUT THE TRUE NAME IN THE DSNAME FIELD -- ISSUE A LOCATE,
*     AND TRY THE OBTAIN AGAIN.
         MVC   WORKTBL(44),DSNAME       COPY DSNAME TO ANOTHER AREA
         L     R14,LOCATE
         LA    R15,WORKTBL              ACTUAL DSNAME
         SR    R0,R0                    NO CVOL VALUE
         LA    R1,MSGTEXT1              LOCATE WORK AREA
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         LOCATE PARMLIST
         LTR   15,15                    SUCCESSFUL LOCATE?
         BNZ   DYNA240                  NO, ERROR
         SPACE 1
         L     R14,OBTAIN               OBTAIN FLAGS
         LA    R15,WORKTBL              ACTUAL DSNAME
         LA    R0,VOLALLOC              VOLUME SERIAL
         LA    R1,DS1FMTID              OUTPUT START ADDRESS
         STM   R14,R1,PARMLIST          SAVE CAMLIST PARAMETERS
         OBTAIN PARMLIST                GET THE FORMAT 1 DSCB
         SPACE 1
         LTR   R15,R15                  SUCCESSFUL OBTAIN?
         BZ    DYNA260                  YES, BRANCH
DYNA240  MVI   VOLALLOC,X'40'           NO, SET BACK TO BLANK
         SPACE 2
DYNA260  TM    DSORG,DS1DSGPO           PARTITIONED?
         BO    DYNA300                  YES, BRANCH
         SPACE 2
         LA    R1,X'100'                TTR=1
         ST    R1,DIRTTR                SAVE FOR LATTER
         TM    ##ADRCM#,EDITOR          EDIT, BROWSE, TSOEDIT OR FSE?
         BO    DYNA300                  YES, BRANCH
         OI    DDNAMEN,X'80'            OUTPUT A WARNING MESSAGE LATER
*        M$MSG L530                     OUTPUT A WARNING MESSAGE LATER
         SPACE 2
DYNA300  LA    R14,FIRST4K
         LA    R14,RECALLDS-FIRST4K(R14)  POINT TO THE DSNAME SAVE
         MVC   0(132,R14),MSGBL132
         MVC   4(8,R14),$CHAL             "CHANGE"
         MVI   4+9(R14),C''''             QUOTE
         MVC   4+10(44,R14),DSNAME        DATA SET NAME
         LH    R1,DSNLEN                  LENGTH
         LA    R14,4+10(R1,R14)           POINT TO END OF NAME
         MVI   0(R14),C''''               FINAL QUOTE
         CLI   VOLUME,X'41'               ANY VOLUME?
         BL    DYNA310                    NO, BRANCH
         MVC   2(4,R14),DYNAVOL           ADD "VOL("
         MVC   2+4(6,R14),VOLUME          ADD VOLUME
         MVI   2+4+6(R14),C')'            ADD FINAL )
         LA    R14,2+4+6(R14)             POINT TO ) -1
         SPACE 1
DYNA310  CLI   DSPALLOC,ALLOOLD           OLD ALLOCATION?
         BNE   *+10                       NO, BRANCH
         MVC   2(3,R14),DYNAOLD           YES, ADD OLD
         SPACE 1
         XC    6(40,R14),6(R14)           INSERT FINAL NULLS
         SPACE 1
         L     R14,R14SAVE              RETURN AT
         B     4(R14)                            +4 (SUCCESSFUL)
         SPACE 2
DYNA400  CLC   DSNAMEH(3),=C'END '      WAS "END" ENTERED BY THE USER?
         BNE   DYNA410                  NO, BRANCH
         TM    DSNAMEH+3,X'FF'-X'40'    WITH A FOLLOWING BLANK OR NULL?
         BZ    DYNA900                  YES, TERMINATE THE PROGRAM
         SPACE 1
DYNA410  LA    R14,M99RB                POINTER TO SVC 99 BLOCK
         ST    R15,DAIRRC               RETURN CODE
         LA    R15,DAIRRC               POINTER TO RETURN CODE
         LA    R0,ADDRFF02              POINTER TO A(IKJEFF02)
         LA    R1,=AL2(DFBUFSW*256+DFSVC99)  RETURN BUFFER;GENERAL CALL
         L     R2,ADDRCPPL              POINTER TO THE CPPL
         LA    R3,MSGTEXT1              POINTER TO OUTPUT TEXT
         STM   R14,R3,DFDAPLP           INITIALIZE DFDAPLP, DFDRCP,
*                                       DFJEFF02, DFIDP, DFCPPLP DFBUFP
         SPACE 1
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)
         LTR   R15,R15                  PROBLEM WITH IKJEFF18?
         BNZ   DYNA420                  YES, BRANCH
*
         LA    R1,MSGTEXT1              START OF MESSAGE
         L     R15,ADDRUPT              ADDRESS OF THE UPT
         TM    UPTSWS-UPT(R15),UPTMID   MESSAGE ID DESIRED?
         BO    DYNA412                  YES, BRANCH
         CLI   13(R1),X'40'             BLANK FOLLOWING MSGID?
         BNE   DYNA412                  NO, KEEP THE WHOLE THING
         LH    R0,0(,R1)                CURRENT LENGTH
         SH    R0,=H'10'                LESS TEN
         SLL   R0,16                    SHIFT TO CORRECT POSITION
         ST    R0,10(,R1)               STORE OVER MESSAGE-ID
         LA    R1,10(,R1)               POINT TO NEW LENGTH WORD
DYNA412  M$ERRST (R1)                   OUTPUT FIRST LEVEL MESSAGE
*
         CLC   MSGTEXT1+256(2),=H'0'    ANY SECOND MESSAGE?
         BE    DYNA440                  NO, BRANCH
         LA    R1,MSGTEXT1+256          START OF MESSAGE
         L     R15,ADDRUPT              ADDRESS OF THE UPT
         TM    UPTSWS-UPT(R15),UPTMID   MESSAGE ID DESIRED?
         BO    DYNA414                  YES, BRANCH
         CLI   13(R1),X'40'             BLANK FOLLOWING MSGID?
         BNE   DYNA414                  NO, KEEP THE WHOLE THING
         LH    R0,0(,R1)                CURRENT LENGTH
         SH    R0,=H'10'                LESS TEN
         SLL   R0,16                    SHIFT TO CORRECT POSITION
         ST    R0,10(,R1)               STORE OVER MESSAGE-ID
         LA    R1,10(,R1)               POINT TO NEW LENGTH WORD
DYNA414  M$ERRST (R1)                   OUTPUT SECOND LEVEL MESSAGE
         B     DYNA440
         SPACE 2
DYNA420  CVD   R15,DOUBLE
         MVI   MTHIGHL,4
         MVC   INSERT#1(4),=X'40202120'
         ED    INSERT#1(4),DOUBLE+6
         MVI   INSERT#1,C'='
         M$MSG L835$1
         SPACE 1
DYNA440  TM    FLAGSBB,FONESHOT         ONE SUBCOMMAND ONLY?
         BO    DYNA900                  YES, TERMINATE
         CLI   DSPREQST,ALLOOLD         DISP=OLD REQUESTED?
         BE    DYNA500                  YES, ATTEMPT RETRY
         CLI   DSPALLOC,ALLOMOD         MOD ALLOCATION ATTEMPT?
         BE    DYNA444                  YES, BRANCH
         CLI   DSPALLOC,ALLOOLD         OLD ALLOCATION ATTEMPT?
         BNE   DYNA500                  NO, REALLOCATE
         SPACE 1
DYNA444  MVI   DSPALLOC,ALLOSHR         YES, RETRY WITH DISP=SHR
         NI    FLAGSAA,FF-FMEM#MEM      TURN OFF MEMBER GROUPS
         NI    ##ADRCM#,FF-CONTINUE     TURN OFF THE CONTINUED FLAG
         B     DYNA010
         SPACE 2
DYNA500  CLI   VOLSET,C'*'              ANY VOLSET IN EFFECT?
         BE    DYNA600                  NO, BRANCH
         CLI   VOLSET,X'40'             ANY VOLSET IN EFFECT?
         BNH   DYNA600                  NO, BRANCH
         CLI   VOLUME,X'40'             VOLUME(*)?
         BNH   DYNA590                  YES, BRANCH
         TM    FLAGSCC,FVOLSET          VOLSET IGNORE?
         BO    DYNA590                  YES, BRANCH
         OI    FLAGSCC,FVOLSET          VOLSET IGNORE ALLOCATION
         M$MSG L412                     REALLOCATE AND IGNORE VOLSET
         MVC   VOLUME(8),BLANKS         RESET VOLUME
         B     DYNA010                  RETRY ALLOCATION
DYNA590  MVI   MTHIGHL,8
         MVC   INSERT#1(8),VOLSET       CURRENT VOLSET VALUE
         M$MSG L410$1                   ISSUE A WARNING MESSAGE
         SPACE 2
DYNA600 M$PUTGT PDS381A,ATTN=DYNA900    DATA SET RECOVERY ROUTINE
         SPACE 2
         TM    FLAGSBB,FNULL            USER WANT ANOTHER DATA SET?
         BO    DYNA500                  NULL REPLY, ASK AGAIN
         SPACE 1
         MVC   DSNLEN(SAVLEN),SAVDSN+1  RESET THE DATA SET NAME
         MVC   FULLWORD(4),##ADRCMD     SAVE CONTINUATION INFORMATION
         L     R1,=V($CHA)              PCL FOR DATA SET NAME
         MVC   ##SUBCOM(PTW),0(R1)      PCL FOR DATA SET NAME
         L     R15,=V(PARSE)            PARSE ADDRESS
         BASR  R14,R15                  INVOKE PARSE
         B     DYNA900                  EXIT - PARSE FAILURE
         NI    FLAGSCC,FF-FVOLSET       CLEAR VOLUME SET FLAG
         MVC   ##ADRCMD(4),FULLWORD     CONTINUATION INFORMATION
         B     DYNA010                  RETRY ALLOCATION
         SPACE 2
DYNA900  L     R14,R14SAVE              ERROR EXIT - NOT ALLOCATED
         BR    R14
ALLDDNAM DC    X'0055000100084040404040404040'
ALLDSORG DC    X'0057000100020000'
ALLVOLUM DC    X'005D00010006404040404040'
ALLUNIT  DC    X'0015000100084040404040404040'
ALLPERM  DC    X'00520000'
ALLPASSW DC    X'0050000100084040404040404040'
ALLDSNAM DC    X'00020001002C'
ALLALLOC DC    X'00040001000108'
ALLNORM  DC    X'00050001000108'
ALLANORM DC    X'00060001000108'
ALLOOLD  EQU   X'01'
ALLOMOD  EQU   X'02'
ALLOSHR  EQU   X'08'
ALLOLSYS DC    C'SYSALLDA'
ALLOL000 DC    C'SYS00000'
DYNAVOL  DC    C'VOL('
DYNAOLD  DC    C'OLD'
PDSMAIN  CSECT
         TITLE 'P D S  --  PDS DATA SET UNALLOCATION         09/28/88'
*
*        FREE DATA SET NO LONGER REQUIRED
*
         SPACE 2
DEALLDCB MVI   VOLALLOC,X'40'     ** CONDITIONAL FREE OF FILE
         TM    FLAGSCC,FPERMDS    DATA SET PERMANENTLY ALLOCATED?
         BOR   R2                 YES, SKIP EXPLICIT FREE
         SPACE 2
DEALLOCZ CLC   DDNAME(8),SYSPROC        SYSPROC DDNAME?
         BER   R2                       YES, QUIT
         XC    M99RBPTR(40),M99RBPTR    CLEAR THE WORK AREA
         LA    R1,M99RBPTR              DYNAMIC ALLOCATION
         USING S99RBP,R1
         SPACE 1
         LA    R4,M99RB
         USING S99RB,R4
         ST    R4,S99RBPTR
         OI    S99RBPTR,S99RBPND        MARK END OF LIST
         SPACE 1
         LA    R5,M99TUPL
         USING S99TUPL,R5
         MVI   S99RBLN,20               LENGTH 20
         MVI   S99VERB,S99VRBUN         UNALLOCATE
         ST    R5,S99TXTPP              POINT TO TEXT POINTERS
         LA    R3,WORKTBL               START OF TEXT
         SPACE 1
         MVC   0(L'UNADDNAM,R3),UNADDNAM
         MVC   6(8,R3),DDNAME           SPECIFY DDNAME
         ST    R3,S99TUPTR              POINT TO TEXT UNIT
         LA    R3,L'UNADDNAM(,R3)       START OF NEXT TEXT
         SPACE 1
         CLC   DDNAME(8),SYSHELP        SYSHELP DDNAME?
         BE    UNA100                   YES, BRANCH
         SPACE 1
         LA    R5,4(,R5)                NEXT POINTER ELEMENT
         MVC   0(L'UNAPERM,R3),UNAPERM  UNALLOC "PERM" TOO
         ST    R3,S99TUPTR              POINT TO TEXT UNIT
         LA    R3,L'ALLDSORG(,R3)       START OF NEXT TEXT
         SPACE 1
UNA100   OI    S99TUPTR,X'80'           MARK END OF LIST
         SPACE 1
         DYNALLOC
         SPACE 2
         DROP  R1,R4,R5
         LTR   R15,R15                  SUCCESSFUL?
         BNZR  R2                       NO, RETURN
         BR    R2                       RETURN
         SPACE 1
UNADDNAM DC    X'0001000100084040404040404040'
UNAPERM  DC    X'00070000'
         TITLE 'P D S  --  PDS OPEN/CLOSE STOW ROUTINES      09/28/88'
*
*        OPEN/CLOSE STOW SUBROUTINES
*
         SPACE 3
OPENSTOW TM    DCBOFLGS-IHADCB+STOWDCB,DCBOFOPN  STOW DCB OPEN?
         BO    4(R2)                             YES, EXIT
         SPACE 1
         MVI   OPENLIST,X'80'
         TM    FLAGSCC,FUPDATE                   UPDATE DESIRED?
         BO    OPENSTW6                          YES, SKIP RESERVE
         SPACE 1
         BAS   R6,RESERVE                        RESERVE THE DEVICE
OPENSTW6 OPEN  (STOWDCB,UPDAT),MF=(E,OPENLIST)   OPEN IT FOR UPDATE NOW
         SPACE 1
         TM    DCBOFLGS-IHADCB+STOWDCB,DCBOFOPN  STOW DCB OPEN?
         BO    4(R2)                             YES, BRANCH
         SPACE 1
         M$MSG L831                              STOW DID NOT OPEN
         NI    FLAGSCC,FF-FUPDATE                OPEN FAILED
         BR    R2                                ERROR RETURN
         EJECT
*
*        OPEN/CLOSE STOW SUBROUTINES
*
         SPACE 3
SHUTSTOW TM    FLAGSCC,FUPDATE                   UPDATE CLOSE?
         BO    SHUTSTW2                          YES, BRANCH
         TM    FLAGSEE,FBKGRND                   BACKGROUND MODE?
         BOR   R2                                YES, RESERVE IS OK
         SPACE 2
SHUTSTW2 MVI   OPENLIST,X'80'
         TM    DCBOFLGS-IHADCB+STOWDCB,DCBOFOPN  STOW DCB OPEN?
         BNO   DEQ                               NO, BRANCH
         SPACE 1
         TM    FLAGSCC,FUPDATE                   UPDATE CLOSE?
         BNO   SHUTSTW6                          NO, BRANCH
         XI    FLAGSCC,FUPDATE                   UPDATE CLOSE NOW
         MVI   OPENLIST,X'7C'                    MARK TERMINATION
         L     R8,=V(LIST)                       UPDATE BASE REGISTER
         L     R15,=V(LIST170)                   FINAL UPDATE ROUTINE
         BASR  R14,R15
         SPACE 2
SHUTSTW6 CLI   DSPALLOC,ALLOOLD                  EXCLUSIVE USE?
         BE    DEQ                               YES, NO CLOSE
         CLI   DSPALLOC,ALLOMOD                  EXCLUSIVE USE?
         BE    DEQ                               YES, NO CLOSE
         SPACE 1
         MVI   OPENLIST,X'80'
         TM    DCBOFLGS-IHADCB+STOWDCB,DCBOFOPN  STOW DCB OPEN?
         BNO   DEQ                               NO, BRANCH
         CLOSE (STOWDCB),MF=(E,OPENLIST)         CLOSE IT NOW
         B     DEQ
         TITLE 'P D S  --  PDS RESERVE ROUTINE               09/28/88'
*
*        UCB RESERVE ROUTINE
*
         SPACE 1
RESERVE  CLI   DSPALLOC,ALLOOLD            EXCLUSIVE USE?
         BER   R6                          YES, RETURN
         CLI   DSPALLOC,ALLOMOD            EXCLUSIVE USE?
         BER   R6                          YES, RETURN
         SPACE 1
         CLI   RESERVET,C'R'               ALREADY RESERVED?
         BER   R6                          YES, RETURN
         MVI   RESERVET,C'R'               MARK AS RESERVED
         SPACE 2
         MVC   PARMLIST(4),RESERVEL        LIST FORM OF RESERVE
         RESERVE (SPFEDIT,DSNAME,E,44,SYSTEMS),RET=HAVE,UCB=UCBADDR,  XX
               MF=(E,PARMLIST)
         SPACE 2
         TM    FLAGSCC,RECFMU              LOAD LIBRARY?
         BNOR  R6                          NO, RETURN
         SPACE 2
         L     R1,UCBADDR                  UCB ADDRESS
         TM    UCBTYP+1(R1),UCBRR          SHARED DEVICE?
         BNO   RESERVE2                    NO, BRANCH
         MVC   PARMLIST(4),RESERVEL        LIST FORM OF RESERVE
         RESERVE (SYSIEWLP,DSNAME,E,44,SYSTEMS),RET=HAVE,UCB=UCBADDR, XX
               MF=(E,PARMLIST)
         BR    R6
         SPACE 5
RESERVE2 MVC   PARMLIST(4),ENQHAVE         LIST FORM OF RESERVE
         ENQ   (SYSIEWLP,DSNAME,E,44,SYSTEM),RET=HAVE,MF=(E,PARMLIST)
         BR    R6
         TITLE 'P D S  --  PDS DEQ ROUTINE                   09/28/88'
*
*        UCB DEQ ROUTINE
*
         SPACE 1
DEQ      CLI   DSPALLOC,ALLOOLD            EXCLUSIVE USE?
         BER   R2                          YES, RETURN
         CLI   DSPALLOC,ALLOMOD            EXCLUSIVE USE?
         BER   R2                          YES, RETURN
         SPACE 1
         CLI   RESERVET,C'R'               RESERVED?
         BNER  R2                          NO, RETURN
         MVI   RESERVET,0                  NO LONGER RESERVED
         SPACE 2
         MVC   PARMLIST(4),DEQSYSS         LIST FORM, DEQ "SYSTEMS"
         DEQ   (SPFEDIT,DSNAME,44,SYSTEMS),RET=HAVE,UCB=UCBADDR,       X
               MF=(E,PARMLIST)
         SPACE 2
         TM    FLAGSCC,RECFMU              LOAD LIBRARY?
         BNOR  R2                          NO, RETURN
         SPACE 2
         L     R1,UCBADDR                  UCB ADDRESS
         TM    UCBTYP+1(R1),UCBRR          SHARED DEVICE?
         BNO   DEQ2                        NO, BRANCH
         MVC   PARMLIST(4),DEQSYSS         LIST FORM, DEQ "SYSTEMS"
         DEQ   (SYSIEWLP,DSNAME,44,SYSTEMS),RET=HAVE,UCB=UCBADDR,      X
               MF=(E,PARMLIST)
         BR    R2
         SPACE 5
DEQ2     MVC   PARMLIST(4),DEQSYS          LIST FORM, DEQ "SYSTEM"
         DEQ   (SYSIEWLP,DSNAME,44,SYSTEM),RET=HAVE,MF=(E,PARMLIST)
         BR    R2
         TITLE 'P D S  --  PDS OPEN EXIT                     09/28/88'
         USING IHADCB,R1
OPENEXIT TM    ##ADRCM#,FIXOPEN                FIXPDS DCB MODIFICATION?
         BNO   OPENEXT2                        NO, BRANCH
         MVC   DCBRECFM(1),#RECFM+3            NEW RECORD FORMAT
         MVC   DCBLRECL(2),#LRECL+2            NEW LRECL
         MVC   DCBBLKSI(2),#BLKSI+2            NEW BLKSIZE
         MVI   DCBKEYLE,0                      RESET THE KEY LENGTH
         CLI   #OPTCD,1                        ANY OPTCD CHANGE?
         BL    OPENEXT2                        NO, BRANCH
         NI    DCBOPTCD,255-X'A4'              TURN OFF AFFECTED BITS
         OC    DCBOPTCD(1),#OPTCD+3            TURN ON DESIRED BITS
         SPACE 1
OPENEXT2 MVC   RECFM(1),DCBRECFM               SAVE RECORD FORMAT BYTE
         NI    FLAGSCC,FF-RECFMU-RECFMV-RECFMF CLEAR TEST BITS
         XI    FLAGSCC,RECFMU                  ASSUME RECFM=U
         TM    DCBRECFM,DCBRECU                CORRECT?
         BO    OPENEXT4                        YES, BRANCH
         XI    FLAGSCC,RECFMU+RECFMV           ASSUME RECFM=V
         TM    DCBRECFM,DCBRECV                CORRECT?
         BO    OPENEXT4                        YES, BRANCH
         XI    FLAGSCC,RECFMV+RECFMF           ASSUME RECFM=F
         NI    DCBRECFM,FF-DCBRECSB            DROP ANY S OF RECFM=FBS
         TM    DCBRECFM,DCBRECF                CORRECT?
         BO    OPENEXT4                        YES, BRANCH
         XI    FLAGSCC,RECFMV                  NO, INDICATE UNKNOWN
         SPACE 1
OPENEXT4 CLC   BLKSI(2),ZERO                   HAVE ANY LRECL?
         BNER  R14                             YES, RETURN
         MVC   LRECL,DCBLRECL                  SAVE LRECL
         MVC   BLKSI,DCBBLKSI                  SAVE BLOCKSIZE
         MVC   OPTCD,DCBOPTCD                  SAVE OPTCD
         BR    R14
         DROP  R1
         TITLE 'P D S  --  PDS DIRECTORY READ SUBROUTINE     09/28/88'
*
*        DIRECTORY READ SUBROUTINE
*
         SPACE 1
READDIR  ST    R14,R14READD
         NI    FLAGSEE,FF-FDIREND      END OF DIRECTORY TO COME YET
         CLI   STARTTR+2,X'01'         TTR=000001 (START OF DIRECTORY)?
         BNE   DEBLOCK                 NO, BRANCH
         SPACE 1
         XC    TOTBLOCK(LTOT),TOTBLOCK CLEAR THE TOTALS AREA
         LA    R1,L875                 ASSUME NO DIRECTORY BLOCKS
         CLC   DS1LSTAR(3),ZERO        CORRECT?
         BE    READDIRE                YES, ERROR EXIT
         SPACE 2
READDIR1 L     R15,=A(EXCP)        READ THE DIRECTORY RECORDS
         BASR  R14,R15
         B     *+4(R15)                PROCESS RETURN CODE
         B     READDIR2                 00 - GOOD READ
         B     READDIR4                 04 - END OF MEMBER
         B     READDIR4                 08 - END OF DATA SET
         B     IOERROR                  12 - I/O ERROR IN DIRECTORY
         SPACE 2
READDIR2 LA    R1,L876                 ASSUME INVALID DIRECTORY BLOCK
         CLC   LS+2(2),=H'256'         CORRECT?
         BNE   READDIRE                YES, ERROR EXIT
         L     R14,TOTTRKS
         LA    R14,1(,R14)
         CLC   TOTCCHH,CURMBB+3        SWITCH TRACKS?
         BE    *+8                     NO, BRANCH
         ST    R14,TOTTRKS             YES, UPDATE TRACK COUNT
         MVC   TOTCCHH,CURMBB+3        NEW CCHH QUANTITY
         SPACE 1
         L     R14,TOTBLOCK
         LA    R14,1(R14)
         ST    R14,TOTBLOCK
         TM    FLAGSEE,FDIREND         USAGE AND LAST MEMBER FOUND?
         BO    READDIR1                YES, BRANCH
         SPACE 1
         L     R14,TOTUSED
         LA    R14,1(R14)
         ST    R14,TOTUSED
***      MVI   TOTTHISM+3,0
         SPACE 1
         LR    R15,R0                   BUFFER ADDRESS
         LA    R0,2
         LH    R1,0(,R15)
         BCTR  R1,0
         LA    R1,0(R1,R15)
         STM   R15,R1,DIRPTRS
         SPACE 8
DEBLOCK  LM    R15,R1,DIRPTRS
         BXH   R15,R0,READDIR1         INDEX TO NEXT MEMBER NAME
         STM   R15,R1,DIRPTRS
         SPACE 1
         CLI   0(R15),X'FF'            LAST MEMBER?
         BE    READDIR3                YES
         SPACE 1
         MVC   MEMNAME(12),0(R15)      SAVE FIRST 12 BYTES OF ENTRY
         SPACE 1
***      L     R0,TOTTHISM
***      A     R0,=F'1'
***      ST    R0,TOTTHISM
***      C     R0,TOTMAXM
***      BNH   *+8
***      ST    R0,TOTMAXM              MAX DIRECTORY ENTRIES IN A BLOCK
         SPACE 1
         IC    R14,11(,R15)
         N     R14,=XL4'0000001F'
         LA    R0,12(R14,R14)
         STM   R15,R1,DIRPTRS
         SPACE 2
         TM    MEMFLAG,X'80'           ALIAS?
         LA    R14,TOTMEMR             ASSUME NOT
         BZ    *+8                     CORRECT?
         LA    R14,TOTMEMA             NO, ALIAS
         SPACE 1
         L     R15,0(,R14)
         LA    R15,1(,R15)
         ST    R15,0(,R14)
         SPACE 1
         CLC   ##SUBCOM(8),$USA        USAGE SUBCOMMAND?
         BE    DEBLOCK                 YES, CONTINUE TO DEBLOCK
         LA    R15,4                   NO, GET THE EXIT OFFSET
         B     READDIR5
         SPACE 2
READDIR3 OI    FLAGSEE,FDIREND         FLAG LAST MEMBER FOUND
         CLC   ##SUBCOM(8),$USA        USAGE SUBCOMMAND?
         BE    READDIR1                YES, CONTINUE READING
         B     READDIR4                NO, EXIT WITH LAST MEMBER
         SPACE 2
READDIRE M$MSG (R1)                    DIRECTORY ERROR
         MVI   STARTTR+2,X'00'         RESET THE START TTR
         SPACE 2
READDIR4 SR    R15,R15                 END OF DIRECTORY OR LAST MEMBER
         SPACE 1
READDIR5 L     R14,R14READD
         B     0(R14,R15)
         TITLE 'P D S  --  PDS EXCP READ SUBROUTINE          09/28/88'
*
*        EXCP SUBROUTINE
*
         SPACE 1
EXCP     CSECT
         USING *,R8
         ST    R14,R14EXCP
         ST    R8,R8EXCP
         LR    R8,R15
         LH    R1,IODONE                    ANOTHER
         LA    R1,1(,R1)                           INPUT
         STH   R1,IODONE                                ENTRY
*
         LA    R14,IODIR1                   ASSUME DIRECTORY BLOCKS
         LA    R15,IODIR1+4                 ASSUME DIRECTORY BLOCKS
         LA    R0,IODIRCUR                  ASSUME DIRECTORY BLOCKS
         TM    FLAGSII,FDIRGRP              DIRECTORY READ?
         BO    EXCPCON                      YES, BRANCH
         LA    R14,IOBUFF1                  NO, I/O BUFFER CONTROL
         LA    R15,IOBUFF1+4                NO, I/O BUFFER CONTROL
         LA    R0,IOBUFCUR                  NO, I/O BUFFER CONTROL
*
EXCPCON  ST    R14,IBUFPTR
         ST    R15,ISAVSEEK
         ST    R0,ICONTROL
         ICM   R0,B'1111',STARTTR           NEW TTR ADDRESS?
         BNZ   EXCPNTTR                     YES, BRANCH
         TM    FLAGSJJ,FNOREAD              REOPEN FOR NULL DATA SET?
         BO    EXCPNTTR                     YES, BRANCH
         TM    FLAGSII,FDIRGRP              DIRECTORY READ?
         BO    EXCPCN50                     YES, BRANCH
         MVC   IBUFPTR(12),IBUFSAV          RESTORE POINTERS
         CLI   DEVRPS,X'05'                 SAVE EXCP'S?
         BNE   EXCPCN50                     NO, DO NOT REUSE BUFFERS
*
         L     R1,ISAVSEEK                  PREVIOUS SEEK ADDRESS
         MVC   CURMBB(8),0(R1)              SAVE IN CURMBB
         MVC   IOBSEEK(LIOBDIR),0(R1)       RESET IOBSEEK
*
         L     R1,ICONTROL                  CONTROL WORDS ADDRESS
         L     R15,0(,R1)                   CURRENT DATA ADDRESS
         CLC   4(4,R1),0(R15)               ANY LOGICAL DATA RECORDS?
         BE    EXCPCN50                     YES, GET A LOGICAL RECORD
*
*  SEARCH OTHER TRACKS TO SEE IF THIS ONE IS ALREADY IN STORAGE
         LA    R1,FIRST4K
         LA    R1,IOBUFN-FIRST4K(,R1)         FIRST SAVED TRACK CONTROL
         LH    R0,INUMSAV                     NUMBER OF BUFFERS
EXCPCN10 CLC   IOBUFAN-IOBUFN(4,R1),CURMBB+3  THIS CCHH?
         BE    EXCPCN30                       YES, BRANCH
         LA    R1,32(,R1)                     NEXT ADDRESS
         BCT   R0,EXCPCN10                    CHECK ALL ADDRESSES
         B     EXCPCN50            ***TEST    NOT FOUND, OVERLAY TRACK
*
*  NOT IN STORAGE -- CHECK IF REQUESTED TTR CHANGE OR CONTINUATION
         TM    CUREXT,X'80'                 REQUESTED READ TRACK?
         BO    EXCPCN20                     YES, ALLOCATE TRACK TWO
         BNO   EXCPCN50                     NO,   OVERLAY TRACK TWO
*  NEED TO READ A TRACK; ALLOCATE A SECOND TRACK CONTROL
EXCPCN20 NI    CUREXT,FF-X'80'              MARK AS AFTER FIRST TRACK
         LA    R1,FIRST4K
         LA    R1,IOBUFN-FIRST4K(,R1)       FIRST SAVED TRACK CONTROL
         LH    R0,INXTSAV                   NEXT AVAILABLE
         MH    R0,=H'32'                    *32
         AR    R1,R0                        TRACK CONTROL TO USE
         ST    R1,IBUFPTR                   BUFFER TO USE
         LA    R0,IOBUFCN-IOBUFN(,R1)
         ST    R0,ICONTROL                  CURRENT, ADDRESS
         MVI   IOBUFCN-IOBUFN(R1),X'40'     MARK AS A NEW ADDRESS
         OI    IOBUFAN-IOBUFN(R1),X'FC'     MARK CCHH AS INVALID
         LA    R0,IOBUFSN-IOBUFN(,R1)
         ST    R0,ISAVSEEK                  IOBSEEK AND RESET
         LH    R1,INXTSAV                   NEXT AVAILABLE TRK CONTROL
         LA    R1,1(,R1)                    NEXT AVAILABLE TRK CONTROL
         CH    R1,INUMSAV                   NEXT AVAILABLE TRK CONTROL
         BL    *+6                          NEXT AVAILABLE TRK CONTROL
         SR    R1,R1                        NEXT AVAILABLE TRK CONTROL
         STH   R1,INXTSAV                   NEXT AVAILABLE TRK CONTROL
         B     EXCPCONT                     DO A REAL EXCP
*
*  THIS TRACK IS ALREADY IN STORAGE, REUSE IT TO SAVE AN INPUT EXCP
EXCPCN30 DS    0H
         ST    R1,IBUFPTR                   POTENTIAL POINTER
         LA    R0,IOBUFCN-IOBUFN(,R1)
         ST    R0,ICONTROL                  POTENTIAL POINTER
         LA    R0,IOBUFSN-IOBUFN(,R1)
         ST    R0,ISAVSEEK                  POTENTIAL POINTER
*
         L     R1,ICONTROL                  CONTROL WORD
         L     R15,IBUFPTR                  BUFFER ADDRESS
         L     R15,0(,R15)                  BUFFER POINTER
         STCM  R15,B'0111',1(R1)            RESET START OF READ BUFFER
         CLC   4(4,R1),0(R15)               SAME CCHH STILL IN STORAGE?
         BNE   EXCPCN49                     NO, BRANCH
         SPACE 2
         L     R14,0(,R1)                   START OF CCHHKDD(DATA)
         CLC   CURMBB+3(5),0(R14)           CCHHR:STORAGE CCHHR
         BE    EXCPCN60                       EQUAL; SAVE AN EXCP
         SPACE 2
*  TRACK DOES NOT CONTAIN THIS TTR; INVALIDATE CCHH ADDRESS
EXCPCN49 L     R1,IBUFPTR                   START OF THIS TRACK CONTROL
         MVI   IOBUFAN-IOBUFN(R1),X'FE'     MARK CCHH AS INVALID
*  NEED TO READ A TRACK; SET UP IOBSEEK INFORMATION
EXCPCN50 DS    0H
         L     R15,ISAVSEEK
         MVC   IOBSEEK(LIOBDIR),0(R15)      RESTORE IOBSEEK INFORMATION
         B     EXCPCONT                     DO A REAL EXCP
*  PREVIOUSLY READ TRACK CONTAINS THIS TTR, REUSE THIS TRACK BUFFER
EXCPCN60 L     R15,ISAVSEEK
         MVC   IOBSEEK(LIOBDIR),0(R15)      RESTORE IOBSEEK INFORMATION
         MVI   IOECB,X'7F'                  RESET THE READ ECB
         B     EXCPCONT
         SPACE 2
EXCPNTTR LH    R1,IODONEW                   ANOTHER
         LA    R1,1(,R1)                           TTR
         STH   R1,IODONEW                             CHANGE
         L     R0,STARTTR
         CLM   R0,B'1110',DS1LSTAR          TTR:DS1LSTAR
         BL    EXCPNTT4                     LOW, VALID
         CLI   RESERVET,C'R'                ALREADY RESERVED?
         BE    EXCPNTT4                     YES, DO NOT OPEN AGAIN
         SPACE 2
*** TTR EXCEEDS DS1LSTAR -- NEED TO REOPEN THE DATA SET
         LA    R0,EXCPNTT2                  REENTRY ADDRESS
         ST    R0,##ADRCMD
         OI    ##ADRCM#,CONTINUE            REENTER FLAG
         L     R1,RECOVER                   SAVE RECOVERY ADDRESS
         LM    R15,R0,IOBSEEK               SAVE NEXT IOBSEEK
         ICM   R14,B'1111',KEYLN            KEYLN, DATALN, SNO
         STM   R14,R8,R148EXCP              SAVE CHANGED REGISTERS
         BAS   R2,CLOSEIT                   CLOSE THE DATA SET
         MVI   VOLALLOC,X'40'               NEED ANOTHER OBTAIN
         B     RESTART2
         SPACE 1
EXCPNTT2 LM    R14,R8,R148EXCP              RESET REGISTERS
         ST    R1,RECOVER                   RESET RECOVERY ADDRESS
         STM   R15,R0,IOBSEEK               RESET NEXT IOBSEEK
         STCM  R14,B'1111',KEYLN            KEYLN, DATALN, SNO
EXCPNTT4 L     R0,STARTTR
         XC    STARTTR,STARTTR              ZERO THE TTR
         TM    FLAGSJJ,FNOREAD              NO INPUT MODE?
         BO    EXCPEND0                     YES, DONE
         SPACE 2
         SRL   R0,8
         BCTR  R0,0                         REDUCE INITIAL TTR BY ONE
         SLL   R0,8
         SPACE 1
         STM   R15,R12,12+4(R13)            CONVERT TTR TO MBBCCHHR
         L     R1,INDCB+(DCBDEBAD-IHADCB)   DEB ADDRESS
         LA    R2,CURMBB                    RETURN CCHHR
         L     R15,ADDRCNVT                 TTR TO MBBCCHHR CONVERTER
         LR    R3,R13                       SAVE ADDRESS OF SAVE AREA
         BASR  R14,R15
         LR    R13,R3                       RESTORE SAVE AREA ADDRESS
         LM    R15,R12,12+4(R13)            RESTORE REGISTERS
         SPACE 1
         SPACE 2
         CLI   DEVRPS,X'05'                 SAVE EXCP'S?
         BNE   EXCPSV99                     NO, DO NOT REUSE BUFFERS
*
*  NEW TTR, TRY TO REUSE A TRACK IF READ MULTIPLE AND IN STORAGE
*
         CLI   IODIRADD,X'FE'               INVALID ADDRESS?
         BNE   EXCPSV04                     NO, BRANCH
*
*  INPUT FOR A NEW COMMAND; REINITIALIZE THE READ CONTROL BUFFERS
         MVI   IODIRADD,X'FD'               STILL INVALID ADDRESS
         MVI   INXTSAV+1,0                  NEXT AVAILABLE BUFFER
         LA    R1,FIRST4K
         LA    R1,IOBUFAN-FIRST4K(,R1)      FIRST ADDRESS POINTER
         LH    R0,INUMSAV                   NUMBER OF BUFFERS
EXCPSV02 MVI   0(R1),X'FE'                  INVALIDATE THIS ADDRESS
         LA    R1,32(,R1)                   NEXT ADDRESS
         BCT   R0,EXCPSV02                  MARK ALL ADDRESSES
*
EXCPSV04 DS    0H
         TM    FLAGSII,FDIRGRP              DIRECTORY READ?
         BNO   EXCPSV20                     NO, BRANCH
         L     R1,ICONTROL                  START OF BUFFER CONTROL
         CLC   CURMBB+3(4),4(R1)            SAME CCHH AS LAST READ?
         BNE   EXCPSV99                     NO, BRANCH
         L     R15,IBUFPTR                  BUFFER ADDRESS
         L     R15,0(,R15)                  BUFFER POINTER
         STCM  R15,B'0111',1(R1)            RESET START OF READ BUFFER
         CLC   4(4,R1),0(R15)               SAME CCHH STILL IN STORAGE?
         BNE   EXCPSV99                     NO, BRANCH
         SR    R15,R15
         IC    R15,CURMBB+7                 R-1
         LA    R15,1(,R15)                  R
         STC   R15,CURMBB+7                 UPDATE R
         SPACE 2
EXCPSV10 L     R14,0(,R1)                   START OF CCHHKDD(DATA)
         CLC   CURMBB+3(5),0(R14)           CCHHR:STORAGE CCHHR
         BL    EXCPSV99                       LOW, NOT IN STORAGE
         BE    EXCPSV14                       EQUAL; SAVE AN EXCP
         OC    0(4,R14),0(R14)              END OF DATA?
         BZ    EXCPSV99                     YES, BRANCH
         SPACE 1
         SR    R15,R15
         IC    R15,5(,R14)                  K, KEY LENGTH
         SR    R0,R0
         ICM   R0,B'0011',6(R14)            DD, DATA LENGTH
         ST    R0,LS
         LA    R14,8(R14,R15)               (DATA), START OF DATA
         ST    R14,EXCPBUFF
         AR    R14,R0
         STCM  R14,B'0111',1(R1)            NEXT DATA ADDRESS
         B     EXCPSV10
*  PREVIOUSLY READ DIRECTORY TRACK CONTAINS THIS TTR, REUSE IT
EXCPSV14 L     R15,ISAVSEEK
         MVC   IOBSEEK(LIOBDIR),0(R15)      RESTORE IOBSEEK INFORMATION
         MVI   IOECB,X'7F'                  RESET THE READ ECB
         B     EXCPCONT
         SPACE 2
EXCPSV20 DS    0H
         LA    R1,FIRST4K
         LA    R1,IOBUFN-FIRST4K(,R1)         FIRST SAVED TRACK CONTROL
         LH    R0,INUMSAV                     NUMBER OF BUFFERS
EXCPSV22 CLC   IOBUFAN-IOBUFN(4,R1),CURMBB+3  THIS CCHH?
         BE    EXCPSV30                       YES, BRANCH
         LA    R1,32(,R1)                     NEXT ADDRESS
         BCT   R0,EXCPSV22                    CHECK ALL ADDRESSES
         B     EXCPSV50                       NOT FOUND READ THE TRACK
*
EXCPSV30 DS    0H
         ST    R1,IBUFPTR                   POTENTIAL POINTER
         LA    R0,IOBUFCN-IOBUFN(,R1)
         ST    R0,ICONTROL                  POTENTIAL POINTER
         LA    R0,IOBUFSN-IOBUFN(,R1)
         ST    R0,ISAVSEEK                  POTENTIAL POINTER
*
         L     R1,ICONTROL                  CONTROL WORD
         L     R15,IBUFPTR                  BUFFER ADDRESS
         L     R15,0(,R15)                  BUFFER POINTER
         STCM  R15,B'0111',1(R1)            RESET START OF READ BUFFER
         CLC   4(4,R1),0(R15)               SAME CCHH STILL IN STORAGE?
         BNE   EXCPSV49                     NO, BRANCH
         SR    R15,R15
         IC    R15,CURMBB+7                 R-1
         LA    R15,1(,R15)                  R
         STC   R15,CURMBB+7                 UPDATE R
         SPACE 2
EXCPSV40 L     R14,0(,R1)                   START OF CCHHKDD(DATA)
         CLC   CURMBB+3(5),0(R14)           CCHHR:STORAGE CCHHR
         BL    EXCPSV49                       LOW, NOT IN STORAGE
         BE    EXCPSV60                       EQUAL; SAVE AN EXCP
         OC    0(4,R14),0(R14)              END OF DATA?
         BZ    EXCPSV49                     YES, BRANCH
         SPACE 1
         SR    R15,R15
         IC    R15,5(,R14)                  K, KEY LENGTH
         SR    R0,R0
         ICM   R0,B'0011',6(R14)            DD, DATA LENGTH
         ST    R0,LS
         LA    R14,8(R14,R15)               (DATA), START OF DATA
         ST    R14,EXCPBUFF
         AR    R14,R0
         STCM  R14,B'0111',1(R1)            NEXT DATA ADDRESS
         B     EXCPSV40
         SPACE 2
*  TRACK DOES NOT CONTAIN THIS TTR; INVALIDATE CCHH ADDRESS
EXCPSV49 L     R1,IBUFPTR                   START OF THIS TRACK CONTROL
         MVI   IOBUFAN-IOBUFN(R1),X'FE'     MARK CCHH AS INVALID
*  NEED TO READ A TRACK; ALLOCATE A TRACK CONTROL
EXCPSV50 DS    0H
         OI    CUREXT,X'80'                 MARK AS FIRST TRACK
         LA    R1,FIRST4K
         LA    R1,IOBUFN-FIRST4K(,R1)       FIRST SAVED TRACK CONTROL
         LH    R0,INXTSAV                   NEXT AVAILABLE
         MH    R0,=H'32'                    *32
         AR    R1,R0                        TRACK CONTROL TO USE
         ST    R1,IBUFPTR                   BUFFER TO USE
         LA    R0,IOBUFCN-IOBUFN(,R1)
         ST    R0,ICONTROL                  CURRENT, ADDRESS
         OI    IOBUFAN-IOBUFN(R1),X'FC'     MARK CCHH AS INVALID
         LA    R0,IOBUFSN-IOBUFN(,R1)
         ST    R0,ISAVSEEK                  IOBSEEK AND RESET
         LH    R1,INXTSAV                   NEXT AVAILABLE TRK CONTROL
         LA    R1,1(,R1)                    NEXT AVAILABLE TRK CONTROL
         CH    R1,INUMSAV                   NEXT AVAILABLE TRK CONTROL
         BL    *+6                          NEXT AVAILABLE TRK CONTROL
         SR    R1,R1                        NEXT AVAILABLE TRK CONTROL
         STH   R1,INXTSAV                   NEXT AVAILABLE TRK CONTROL
         B     EXCPSV99                     DO A REAL EXCP
*  PREVIOUSLY READ TRACK CONTAINS THIS TTR, REUSE THIS TRACK BUFFER
EXCPSV60 L     R15,ISAVSEEK
         MVC   IOBSEEK(LIOBDIR),0(R15)      RESTORE IOBSEEK INFORMATION
         MVI   IOECB,X'7F'                  RESET THE READ ECB
         B     EXCPCONT
         SPACE 2
*  DIFFERENT TRACK OR DATA START NOT FOUND, DO A REAL EXCP
EXCPSV99 MVC   IOBSEEK(8),CURMBB            RESET THE DESIRED CCHHR
         CLC   IOBSEEK(8),LSTARMBB          LESS THAN DS1LSTAR?
         BL    EXCP1                        YES, BRANCH
         TM    DSORG+1,DS1ACBM              VSAM DATA SET?
         BO    EXCP1                        YES, IGNORE DS1LSTAR
         TM    DSORG,DS1DSGIS               ISAM DATA SET?
         BO    EXCP1                        YES, IGNORE DS1LSTAR
         TM    DSORG,DS1DSGPO               PARTITIONED DATA SET?
         BNO   EXCPEND8                     NO, NO WARNING MESSAGE
         M$MSG L872                         OUTPUT A WARNING MESSAGE
         B     EXCPEND8                     TERMINATE I/O FOR THIS
         SPACE 1
EXCP1    L     R1,INDCB+(DCBDEBAD-IHADCB)   DEB ADDRESS
         LA    R1,16(,R1)                   CURRENT EXTENT POINTER - 16
         SR    R15,R15
EXCP2    LA    R1,16(,R1)                   NEXT EXTENT POINTER
         CLM   R15,B'0001',IOBSEEK          THIS EXTENT?
         LA    R15,1(,R15)
         BNE   EXCP2                        NO, BRANCH
         B     EXCPINIT                     YES, DO THE FIRST READ
         SPACE 2
*    INITIALIZE CCHHR, SECTOR NUMBER AND READ IN THE LENGTH OF RECORD 1
EXCPXTNT SR    R1,R1                        AFTER THE FIRST EXTENT
         IC    R1,IOBSEEK
         A     R1,=F'1'
         STC   R1,IOBSEEK                   INCREMENT EXTENT NUMBER
         CH    R1,NUMEXT                    WITHIN THE EXTENTS?
         BNL   EXCPEND8                     NO, NO FINAL EOF RECORDED
         L     R1,CUREXT
         LA    R1,16(,R1)                   CURRENT EXTENT ENTRY
         MVC   IOBSEEK+3(4),6(R1)           INITIAL CCHH
         MVI   IOBSEEK+7,0                  INITIAL R=0
         SPACE 3
EXCPINIT STCM  R1,B'0111',CUREXT+1          UPDATE FOR LATER
         MVI   SNO,0                        SET SECTOR NUMBER=ZERO
         L     R1,ICONTROL                  CURRENT BUFFER START
         MVI   0(R1),X'40'                  MARK AS A NEW ADDRESS
         CLI   DEVRPS,X'05'                 SAVE EXCP'S?
         BNE   EXCPINI2                     NO, BRANCH
         OI    4(R1),X'FC'                  INVALIDATE THE EXTENT
         TM    ATTNECB,X'40'                ATTENTION SIGNALLED?
         BO    NEWCMD                       YES, BRANCH
         SR    R1,R1
         IC    R1,IOBSEEK+7                 R OF CCHHR
         LA    R1,1(,R1)                    R+1
         STC   R1,IOBSEEK+7                 R OF CCHHR
         MVC   CURMBB(8),IOBSEEK            DISK ADDRESS OF THIS RECORD
         MVI   IOBSEEK+7,X'01'              READ FIRST RECORD ON TRACK
         MVI   IOECB,X'7F'                  RESET THE IO ECB
         B     EXCPEXCP                     PERFORM THE INPUT EXCP
EXCPINI2 MVI   4(R1),X'FE'                  INVALIDATE THE EXTENT
         SPACE 1
EXCPREST LA    1,CCW1A
         ST    1,IOBCCW                     CHANNEL PROGRAM ADDRESS
         MVI   IOECB,0                      ZERO THE ECB
         EXCP  IOB
         WAIT  ECB=IOECB
         MVC   IOBCCW,EXCPCCWI              CHANNEL PROGRAM ADDRESS
         CLI   IOECB,X'7F'                  GOOD READ?
         BNE   EXCPERRA                     NO, INITIAL READ FAILED
         SPACE 2
EXCPCONT TM    ATTNECB,X'40'                ATTENTION SIGNALLED?
         BO    NEWCMD                       YES, BRANCH
         SPACE 1
         MVC   CURMBB(8),IOBSEEK            DISK ADDRESS OF THIS RECORD
         MVC   LS+2(2),DATALN               BLOCK LENGTH FOR THIS READ
         CLI   IOECB,X'42'                  EXTENT VIOLATION LAST TIME?
         BE    EXCPXTNT                     YES, DO THE NEXT EXTENT
         CLI   IOECB,X'7F'                  PREVIOUS READ OK?
         BNE   EXCPREST                     NO, RETRY WITH OTHER EXCP
         SPACE 3
*   CHECK FOR READ MULTIPLE
EXCPEXCP TM    FLAGSEE,FDOUBCON+FFULLTRK    MULTIPLE DESIRED?
         BNZ   EXCPDOUB                     NO, BRANCH
         TM    FLAGSII,FSINGLE              SINGLE BUFFERING REQUIRED?
         BO    EXCPDOUB                     YES, BRANCH
         TM    RECFM,DCBRECTO               TRACK OVERFLOW DATA SET?
         BO    EXCPDOUB                     YES, BRANCH
         L     R1,ICONTROL                  CONTROL WORDS ADDRESS
         CLI   0(R1),X'40'                  DEGRADED BUFFERING?
         BL    EXCPDOUB                     YES, BRANCH
         LH    R14,IOLOGUSE                 COUNT OF SAVED I/O'S
         LA    R14,1(,R14)
         CLI   4(R1),X'FE'                  NEW TTR?
         BE    EXCPTRK                      YES, BRANCH
         L     R15,0(,R1)                   CURRENT DATA ADDRESS
         CLC   4(4,R1),0(R15)               ANY LOGICAL DATA RECORDS?
         BE    EXCPLOG                      YES, BRANCH
         SPACE 1
EXCPTRK  MVI   CCW3,X'5E'              READ MULTIPLE COUNT, KEY, DATA
         L     R14,IBUFPTR                  BUFFER POINTER
         L     R14,0(,R14)                  BUFFER ADDRESS
         STCM  R14,B'0111',CCW3+1           UPDATE READ BUFFER ADDRESS
         ST    R14,EXCPBUFF                 EXCP BUFFER ADDRESS
         SR    R15,R15
         ICM   R15,B'0011',DEVTMAXT         ZERO FILL AND LENGTH
         STCM  R15,B'0011',CCW3+6           UPDATE READ LENGTH
         SPACE 1
         L     R1,ICONTROL                  CONTROL WORDS ADDRESS
         CLI   4(R1),X'FE'                  NEW TTR?
         BNE   EXCPTRK1                     NO, BYPASS MVCL
         SR    R0,R0                        NULL SOURCE
         SR    R1,R1                        NULL SOURCE
         MVCL  R14,R0                       FILL WITH PAD 0 FROM R1
         SPACE 1
EXCPTRK1 SR    R0,R0
         IC    R0,IOBSEEK+7
         BCTR  R0,0
         STC   R0,IOBSEEK+7                 REDUCE IOBSEEK BY ONE
         MVI   SNO,0                        SECTOR ZERO
***TEST  MVC   CCW4(8),CCWTIC
***TEST  LA    R1,CCW5                      USE A TIC
***TEST  STCM  R1,B'0111',CCW4+1
         MVI   IOECB,0                      CLEAR IOECB
         MVC   CCW4(8),CCW5  **TEST         MOVE DOWN COMMAND CHAIN
         MVC   CCW5(8),CCW6  **TEST         MOVE DOWN COMMAND CHAIN
         EXCP  IOB                          INITIATE TRACK I/O
         WAIT  ECB=IOECB                    WAIT FOR COMPLETION
         MVC   CCW6(8),CCW5  **TEST         RESET COMMAND CHAIN
         MVC   CCW5(8),CCW4  **TEST         RESET COMMAND CHAIN
         LH    R14,IOPHYTRK
         LA    R14,1(,R14)                  COUNT OF PHYSICAL TRACKS
         STH   R14,IOPHYTRK
         L     R1,ICONTROL                  CONTROL WORDS ADDRESS
         L     R15,EXCPBUFF                 START OF DATA
         ST    R15,0(,R1)                   SAVE FOR LATER
         MVC   4(4,R1),0(R15)               SAVE CCHH OF CCHHRKDL
         LH    R14,IOLOGUSE                 COUNT OF SAVED I/O'S
         MVC   0(1,R1),IOECB                SAVE THE ECB
         MVI   IOECB,X'7F'                  ASSUME GOOD READ
         SPACE 1
         CLI   0(R1),X'42'                  NEW EXTENT (NEXT TRACK)?
         BE    EXCPINT                      YES, BRANCH
         CLI   0(R1),X'7F'                  GOOD READ?
         BNE   EXCPTRK6                     NO, BRANCH
EXCPTRK2 CLC   IOBSEEK+3(4),CURMBB+3        NEXT CCHH EQUAL THIS CCHH?
         BNE   EXCPINT                      NO, SUCCESSFUL READ
         MVC   IOBSEEK(8),CURMBB            RESTORE THE DISK ADDRESS
         MVI   0(R1),0                      DEGRADED I/O BUFFERING
         L     R14,0(,R1)                   START OF INPUT RECORD
         MVC   IOBSEEK+8(3),5(R14)          RESET KDD FIELDS
         TM    ##ADRPA#,$Q                  QUIET MODE?
         BO    EXCPDOUB                     YES, BRANCH
         LA    R1,L893                      NEXT TTR IS INCORRECT
         B     EXCPTRKX                     OUTPUT ERROR MESSAGE
         SPACE 1
EXCPTRK6 MVC   IOBSEEK(8),CURMBB            RESTORE THE DISK ADDRESS
         MVI   0(R1),0                      DEGRADED I/O BUFFERING
         TM    ##ADRPA#,$Q                  QUIET MODE?
         BO    EXCPDOUB                     YES, BRANCH
         LA    R1,L892                      READ MULTIPLE FAILED
         SPACE 1
EXCPTRKX STM   R1,R12,24(R13)               PERMANENT I/O ERROR
         LA    R2,IOBSEEK
         L     R1,INDCB+(DCBDEBAD-IHADCB)   CONVERT MBBCCHHR TO TTR
         L     R15,ADDRRLTV
         LR    R3,R13
         BASR  R14,R15
         LR    R13,R3
         LM    R1,R12,24(R13)
         SPACE 1
         STCM  R0,B'1110',EXCPWRK           TTR OF THIS ERROR
         MVC   EXCPWRK+3(1),MTHIGHL
         MVC   EXCPWRK+4(8),INSERT#1
         UNPK  INSERT#1(7),EXCPWRK(4)
         TR    INSERT#1(6),TRTABLE
         MVI   MTHIGHL,6                    LENGTH OF THE TTR INSERT
         M$MSG (R1)                         OUTPUT THE ERROR MESSAGE
         MVC   MTHIGHL(1),EXCPWRK+3
         MVC   INSERT#1(8),EXCPWRK+4
         B     EXCPDOUB                     DO NORMAL INPUTS
         SPACE 2
EXCPINT  DS    0H                           REPOSITITION TO R OF CCHHR
         CLI   DEVRPS,X'05'                 SAVE EXCP'S?
         BNE   EXCPLOG                      NO, BRANCH
*
EXCPINT2 L     R14,0(,R1)                   START OF CCHHKDD(DATA)
         CLC   CURMBB+3(5),0(R14)           CCHHR:STORAGE CCHHR
         BL    EXCPINT9                       LOW, NOT IN STORAGE
         BE    EXCPLOG2                       EQUAL FOUND
         OC    0(4,R14),0(R14)              END OF DATA?
         BZ    EXCPINT9                     YES, BRANCH
         SPACE 1
         SR    R15,R15
         IC    R15,5(,R14)                  K, KEY LENGTH
         SR    R0,R0
         ICM   R0,B'0011',6(R14)            DD, DATA LENGTH
         ST    R0,LS
         LA    R14,8(R14,R15)               (DATA), START OF DATA
         ST    R14,EXCPBUFF
         AR    R14,R0
         STCM  R14,B'0111',1(R1)            NEXT DATA ADDRESS
         B     EXCPINT2
*
*  ERROR: NOT FOUND IN STORAGE, STOP SAVED EXCPS AND CONTINUE
EXCPINT9 MVI   DEVRPS,X'06'                 ERROR IN SAVED EXCP CODE
         B     EXCPTRK2
         SPACE 2
*  GET NEXT LOGICAL PHYSICAL RECORD
EXCPLOG  STH   R14,IOLOGUSE                 COUNT OF SAVED I/O'S
EXCPLOG2 L     R14,0(,R1)                   START OF NEXT RECORD
         MVC   CURMBB+3(5),0(R14)           CURRENT MBBCCHHR
         SR    R15,R15
         IC    R15,5(,R14)                  KEY LENGTH
         SR    R0,R0
         ICM   R0,B'0011',6(R14)            DATA LENGTH
         ST    R0,LS
         LA    R14,8(R14,R15)               START OF ACTUAL DATA
         ST    R14,EXCPBUFF
         AR    R14,R0
         STCM  R14,B'0111',1(R1)            NEXT DATA ADDRESS
         MVI   IOECB,X'7F'                  ASSUME NORMAL INPUT
         CLC   0(4,R14),4(R1)               SAME TRACK ADDRESS?
         BE    *+10                         YES, BRANCH
         MVC   IOECB(1),0(R1)               RESET THE IOECB
         B     EXCPFIN
         SPACE 3
* CHECK FOR DOUBLE BUFFERING
EXCPDOUB MVC   CCW3(8),CCWREAD              READ KEY AND DATA
         L     R1,IOBUFF1                   STANDARD BUFFER ADDRESS
         TM    FLAGSII,FDIRGRP              DIRECTORY GROUP INPUT?
         BNO   *+8                          NO, BRANCH
         L     R1,IODIR1                    DIRECTORY BUFFER ADDRESS
         MVC   0(8,R1),IOBSEEK+3            SAVE THE CCHHRKDD DATA
         LA    R1,8(,R1)                    SKIP PAST CCHHRKDD BYTES
         STCM  R1,B'0111',CCW3+1            UPDATE READ BUFFER ADDRESS
         TM    RECFM,DCBRECTO               TRACK OVERFLOW DATA SET?
         BO    EXCPSING                     YES, BRANCH
         TM    FLAGSEE,FDOUBCON+FFULLTRK    CONTROL SINGLE?
         BO    EXCPSING                     YES, BRANCH
         TM    FLAGSII,FSINGLE+FNOTDOUB     THEN/ELSE(DELETE), RESTORE?
         BNZ   EXCPSING                     YES, BRANCH
         MVC   CCW4(8),CCWREAD              INITIALIZE SECOND READ CCW
         MVI   CCW4,X'9E'                   MT READ COUNT, KEY, DATA
         L     R14,IODIR2                   ASSUME DIRECTORY INPUT
         TM    FLAGSII,FDIRGRP              CORRECT?
         BO    *+8                          YES, BRANCH
         L     R14,IOBUFF2                  NO, NORMAL INPUT
         STCM  R14,B'0111',CCW4+1
         SPACE 1
         L     R1,ICONTROL
         CLI   0(R1),X'3F'                  GOOD READ?
         BE    EXCPSEC                      YES, BRANCH
         CLI   0(R1),X'02'                  NEW EXTENT NEXT TIME?
         BE    EXCPSEC                      YES, BRANCH
         SPACE 1
         MVI   IOECB,0                      ZERO THE ECB
         EXCP  IOB
         WAIT  ECB=IOECB
         SPACE 1
         L     R1,ICONTROL
         MVC   0(1,R1),IOECB                SAVE THE ECB
         NI    0(R1),FF-X'40'               REDUCE BY X'40'
         MVI   IOECB,X'7F'                  ASSUME A GOOD READ
         L     R14,CCW3                     LOAD FIRST BUFFER ADDRESS
         SH    R14,=H'8'                    BACK UP TO CCHHRKDD
         CLI   0(R1),X'3F'                  GOOD READ?
         BE    EXCPSEC2                     YES, BRANCH
         LA    R15,CCW5                     IF SECOND FAILED
         CLI   0(R1),X'02'                  NEW EXTENT?
         BNE   EXCPDOU2                     NO, BRANCH
         C     R15,IOBCSW                   FAILED ON:
         BH    EXCPXTNT                       FIRST, BRANCH
         BE    EXCPSEC1                       SECOND, MARK NEXT INPUT
         B     EXCPSEC2                       THIRD, MARK AFTER NEXT
         SPACE 1
EXCPDOU2 TM    IOBCSW+4,X'01'               X'41', END OF FILE?
         BNO   EXCPDOU4                     NO, BRANCH
         MVI   0(R1),X'3F'                  YES, READ NEXT RECORD
         C     R15,IOBCSW                   FAILED ON FIRST?
         BNH   EXCPSEC2                     NO, BRANCH
         MVI   0(R1),0                      READ THE NEXT BLOCK
         MVC   IOBSEEK+3(5),0(R14)          CURRENT MBBCCHHR
         SR    R0,R0
         IC    R0,IOBSEEK+7                 R OF MBBCCHHR
         AH    R0,=H'1'                     NEXT R
         STC   R0,IOBSEEK+7                 UPDATE FOR NEXT READ
         B     EXCPSEC2
         SPACE 1
EXCPDOU4 MVI   0(R1),0                      READ THE NEXT BLOCK
         MVC   IOBSEEK+3(5),0(R14)          CURRENT MBBCCHHR
         SR    R0,R0
         IC    R0,IOBSEEK+7                 R OF MBBCCHHR
         AH    R0,=H'1'                     NEXT R
         STC   R0,IOBSEEK+7                 UPDATE FOR NEXT READ
         SPACE 1
         C     R15,IOBCSW                   FAILED ON FIRST?
         BNH   EXCPSEC2                     NO, BRANCH
         MVI   IOECB,X'41'                  PERMANENT I/O ERROR
         MVC   IOBSEEK(8),CURMBB            RESET THE SEEK ADDRESS
         B     EXCPERR
         SPACE 2
EXCPSEC  LH    R14,IOLOGUSE
         LA    R14,1(,R14)
         STH   R14,IOLOGUSE
         L     R14,CCW4                     LOAD SECOND BUFFER ADDRESS
EXCPSEC1 MVC   IOECB(1),0(R1)               RESET THE ECB
         OI    IOECB,X'40'                  ADD X'40'
         MVI   0(R1),0                      READ THE NEXT BLOCK
         SPACE 1
EXCPSEC2 MVC   CURMBB+3(5),0(R14)           CURRENT MBBCCHHR
         SR    R15,R15
         IC    R15,5(,R14)                  KEY LENGTH
         SR    R0,R0
         ICM   R0,B'0011',6(R14)            DATA LENGTH
         ST    R0,LS
         LA    R14,8(R14,R15)               START OF ACTUAL DATA
         ST    R14,EXCPBUFF
         B     EXCPFIN
         SPACE 3
*  IF ALL ELSE FAILS, TRY SINGLE BUFFERING
EXCPSING MVC   CCW4(8),CCWTIC               USE A TIC
         LA    R1,CCW5
         STCM  R1,B'0111',CCW4+1            WHERE TO TIC
         SPACE 1
         MVI   IOECB,0                      ZERO THE ECB
         EXCP  IOB
         WAIT  ECB=IOECB
         L     R1,ISAVSEEK                  SAVE IOBSEEK INFORMATION
         MVC   0(LIOBDIR,R1),IOBSEEK        SAVE IOBSEEK INFORMATION
         SPACE 1
         L     R1,ICONTROL
         MVI   0(R1),0
         L     R14,CCW3                     POINT TO OUTPUT BUFFER
         SH    R14,=H'8'                    BACK UP TO CCHHRKDD
         CLI   IOECB,X'41'                  X'42' OR X'7F'?
         BH    EXCPSIN2                     YES, BRANCH
         TM    IOBCSW+4,X'01'               X'41', END OF FILE?
         BNO   EXCPERR                      NO, BRANCH
         SPACE 1
EXCPSIN2 MVC   CURMBB+3(5),0(R14)           CURRENT MBBCCHHR
         SR    R15,R15
         IC    R15,5(,R14)                  KEY LENGTH
         SR    R0,R0
         ICM   R0,B'0011',6(R14)            DATA LENGTH
         ST    R0,LS
         LA    R14,8(R14,R15)               START OF ACTUAL DATA
         ST    R14,EXCPBUFF
         SPACE 1
         TM    RECFM,DCBRECTO               RECORD OVERFLOW DATA SET?
         BNO   EXCPFIN                      NO, BRANCH
         CLI   IOBSEEK+7,2                  THIS R OF CCHHR=2?
         BNE   EXCPFIN                      NO, BRANCH
         CLI   CURMBB+7,1                   THIS R OF CCHHR=1?
         BE    EXCPFIN                      YES, BRANCH
         SPACE 1
*  TRACK OVERFLOW RECORDS READ OK: HOWEVER, THE LENGTH
*       IS SET TO THE FIRST SEGMENT OF A SPLIT RECORD.
         AR    R14,R0
         ICM   R0,B'0011',6(R14)            LENGTH OF SECOND SEGMENT
         L     R1,LS                        LENGTH OF FIRST SEGMENT
         AR    R1,R0
         ST    R1,LS                        COMBINED RECORD LENGTH
         LA    R1,8(,R14)                   START OF SECOND SEGMENT
         LR    R15,R14                      END OF FIRST SEGMENT
         LR    R14,R0                       LENGTH TO MOVE
         MVCL  R14,R0                       SLIDE DOWN BY 8 BYTES
         L     R0,LS
         SPACE 3
EXCPFIN  LTR   R0,R0                        END OF FILE?
         BZ    EXCPFIN2                     YES, BRANCH
         CLI   IOECB,X'42'                  EXTENT PROBLEM (NEXT TIME)?
         BE    EXCPEND0                     YES, QUIT
EXCPFIN2 TM    DSORG+1,DS1ACBM              VSAM DATA SET?
         BO    EXCPFIN4                     YES, IGNORE DS1LSTAR
         TM    DSORG,DS1DSGIS               ISAM DATA SET?
         BO    EXCPFIN4                     YES, IGNORE DS1LSTAR
         CLC   CURMBB(8),LSTARMBB           CURRENT:DS1LSTAR
         BH    EXCPEND8                       HIGH, END OF DATA SET
         BL    EXCPFIN4                       LOW, GOOD READ
         TM    DSORG,DS1DSGPO                 EQUAL, PARTITIONED?
         BO    EXCPEND8                              YES, END OF DATA
         SPACE 1
EXCPFIN4 LTR   R0,R0                        END OF MEMBER OR DATA SET?
         BP    EXCPEND0                     NO, BRANCH
         TM    DSORG,DS1DSGPS+DS1DSGDA      DSORG=PS OR DA?
         BM    EXCPEND8                     YES, END OF DATA SET
         TM    DSORG+1,DS1ACBM              VSAM DATA SET?
         BO    EXCPEND8                     YES, END OF DATA SET
         B     EXCPEND4                     END OF MEMBER
         SPACE 3
EXCPERRA SR    R0,R0                        FIRST READ OF EXTENT ERROR
         IC    R0,IOBSEEK+7
         A     R0,=F'1'
         STC   R0,IOBSEEK+7                 ADD 1 TO R OF MBBCCHHR
         TM    ##ADRPA#,$Q                  QUIET MODE I/O?
         BO    EXCPERR+6                    YES, BRANCH
         M$ERRST MSGBLANK
         M$MSG L990                         INITIALIZATION READ FAILED
         B     EXCPERR+6
         SPACE 1
EXCPERR  MVC   IOBSEEK(8),CURMBB            CURRENT MBBCCHHR
         STM   R2,R12,28(R13)               PERMANENT I/O ERROR
         LA    R2,IOBSEEK
         L     R1,INDCB+(DCBDEBAD-IHADCB)   CONVERT MBBCCHHR TO TTR
         L     R15,ADDRRLTV
         LR    R3,R13
         BASR  R14,R15
         LR    R13,R3
         LM    R2,R12,28(R13)
         STCM  R0,B'1110',MSGTEXT1+20       TTR OF THIS ERROR
         UNPK  INSERT#1(7),MSGTEXT1+20(4)
         TR    INSERT#1(6),TRTABLE
         MVC   INSERT#1+6(2),BLANKS
         LA    R15,12                   *** PERMANENT I/O ERROR
         TM    ##ADRPA#,$Q                  QUIET MODE I/O?
         BO    EXCPENDZ                     YES, BRANCH
         M$ERRST MSGBLANK
         MVC   INSERT#1+8(1),MTHIGHL        PRESERVE CURRENT LENGTH
         MVI   MTHIGHL,6                    LENGTH OF THE TTR INSERT
         M$MSG L991$1
         MVC   MTHIGHL(1),INSERT#1+8        RESET MESSAGE LENGTH
         LA    R15,12                   *** PERMANENT I/O ERROR
         B     EXCPENDZ
         SPACE 5
EXCPEND8 LA    R15,8                    *** END OF DATA SET
         B     EXCPENDZ
EXCPEND4 LA    R15,4                    *** END OF MEMBER OR ISAM AREA
         B     EXCPENDZ
EXCPEND0 SR    R15,R15                  *** SUCCESSFUL READ
         L     R0,EXCPBUFF              EXCP BUFFER ADDRESS
EXCPENDZ L     R14,ISAVSEEK                 SAVE IOBSEEK INFORMATION
         MVC   0(LIOBDIR,R14),IOBSEEK       SAVE IOBSEEK INFORMATION
         TM    FLAGSII,FDIRGRP              DIRECTORY READ?
         BO    EXCPOUT                      YES, BRANCH
         MVC   IBUFSAV(12),IBUFPTR ISAVSEEK ICONTROL -- SAVE I/O BUFFER
EXCPOUT  L     R8,R8EXCP
         L     R14,R14EXCP
         BR    R14
PDSMAIN  CSECT
         TITLE 'P D S  --  PDS CLOSE DCB ROUTINE             09/28/88'
*
*        CLOSE DCB'S
*
CLOSEIT  MVI   FLAGSII,0               CLEAR THE I/O FLAGS
         SPACE 1
         MVI   OPENLIST,0
         MVI   OPENLIST+4,X'80'
         CLOSE (INDCB,,STOWDCB),MF=(E,OPENLIST)
         MVC   BLKSI(2),ZERO           CLEAR THE BLOCKSIZE
         SPACE 1
         BR    R2
         TITLE 'P D S  --  PDS END                           06/15/98'
EXIT12O  LA    R1,L831                  DATA SET DID NOT OPEN
EXIT12M  M$MSG (R1)                     OUTPUT THE ERROR MESSAGE
EXIT12N  MVI   RETURNCD+3,12            ERROR CODE 12 (NO CLOSE & FREE)
         MVC   ##SUBCOM(8),$END         SIMULATE AN END SUBCOMMAND
         B     RETURN2
         SPACE 1
EXIT8M   M$MSG (R1)                     OUTPUT THE ERROR MESSAGE
EXIT8N   MVI   RETURNCD+3,8             ERROR CODE 8
         MVC   ##SUBCOM(8),$END         SIMULATE AN END SUBCOMMAND
         SPACE 1
RETURN   TM    FLAGSSS,C'1'             RETURN SEEN AN END BEFORE?
         BO    RETURN1                  YES, BRANCH
         OI    FLAGSSS,X'01'            CONVERT 2 --> 3;  4 --> 5
         CLI   FLAGSSS,C'0'             RETURN TRAP SET?
         BH    NEWCMD                   YES, BRANCH
         SPACE 1
RETURN1  DS    0H                       *                      SS DEC87
         TM    SPFLAG0,SPFTABLE       DIALOG TABLE UNCLEAN     SS DEC87
         BZ    SPFNO3                 NO                       SS DEC87
         MVI   SPFLAG1,SPFCLEAN       FUNCTION TYPE            SS DEC87
         L     R15,=V(ISPDSPY)                                 SS DEC87
         BASR  R14,R15                                         SS DEC87
         NOP   0                      IGNORE RETURN 0          SS DEC87
SPFNO3   DS    0H                                              SS DEC87
         BAS   R2,SHUTSTW2              DELETE ANY DS ENQUES   SS DEC87
         BAS   R2,CLOSEIT               CLOSE THE DATA SET
         BAS   R2,DEALLDCB              FREE THE DATA SET TOO
         SPACE 1
RETURN2  OI    FLAGSGG,FRECVCON         STAE RECOVERY DISALLOWED
         ICM   R5,B'1111',RETURNCD      NORMAL EXIT?
         BZ    RETURN4                  YES, BRANCH
         SPACE 2
         XC    PARMLIST(6*4),PARMLIST   CLEAR STACK PARAMETER AREA
         LA    R1,PARMLIST              AREA FOR STACK PARM LIST
         USING IOPL,R1
         SPACE 1
         L     R2,ADDRUPT
         L     R3,ADDRECT
         LA    R4,ATTNECB
         STM   R2,R4,IOPLUPT            INITIALIZE IOPLUPT, IOPLECT,
         DROP  R1
         SPACE 2
         MVI   ATTNECB,0
         L     R15,ADDRSTCK             STACK ROUTINE
         STACK PARM=PARMLIST+16,DELETE=ALL,MF=(E,(1)),ENTRY=(15)
         SPACE 2
         TCLEARQ INPUT                  CLEAR INPUT BUFFERS
         SPACE 2
RETURN4  STAX  ,                        CANCEL ANY OUTSTANDING STAX
         ESTAE 0                        CANCEL THE ESTAE EXIT
         SPACE 2
         TM    DCBOFLGS-IHADCB+QAMDCB,X'10' OUT OPEN?
         BNO   RETURN5                      NO, BRANCH
         MVI   OPENLIST,X'80'               END OF LIST
         CLOSE (QAMDCB),MF=(E,OPENLIST)     CLOSE THE OUT DATA SET
         SPACE 1
RETURN5  MVI   CONTOPTN,0                   TURN OFF ANY LOGGING
         TM    DCBOFLGS-IHADCB+LOGDCB,X'10' LOG OPEN?
         BNO   RETURN6                      NO, BRANCH
         MVI   OPENLIST,X'80'
         CLOSE (LOGDCB),MF=(E,OPENLIST)
         SPACE 2
RETURN6  SR    R0,R0
         ICM   R0,B'1000',SUBLIST2      ANY SUBPOOL 24 DATA?
         BZ    RETURN7                  NO, BRANCH
         FREEMAIN R,SP=(0)
         SPACE 2
RETURN7  DS    0H
         TM    FLAGSFF,FSPFCALL         TERMINATE SPF?
         BNO   RETURN9                  NO, BRANCH
         NI    FLAGSFF,FF-FSPFCALL      YES, TERMINATE SPF TOO
***TEST  STLINENO LINE=1           CLEAR SCREEN               *TEST
***TEST  STFSMODE OFF              TURN OFF FULL SCREEN MODE  *TEST
         SPACE 1                                              *TEST
         MVC   ##SUBCOM(8),$END         SIMULATE END SUBCOMMAND
         LA    R1,RETURN8               END COMMAND FINAL CODE
         ST    R1,##ADRCMD              EXECUTED AFTER OPEN OF DATA SET
         MVI   ##ADRCM#,CONTINUE        FLAG TO CONTINUE
         L     R13,4(,R13)              PREVIOUS SAVE AREA
         LM    R14,R12,12(R13)          SAVE REGISTERS
         LA    R15,4                    RC=4 -- SIMULATES RETURN KEY
         BR    R14                      RETURN TO SPF
         SPACE 2
RETURN8  DS    0H
***TEST  STFSMODE OFF              TURN OFF FULL SCREEN MODE  *TEST
***TEST  STTMPMD  OFF              WAKE UP SESSION MANAGER    *TEST
***TEST  M$ERRST MSGBLANK                                     *TEST
         SPACE 1                                              *TEST
RETURN9  DS    0H
         L     R1,ADDRCPPL                   ORIGINAL CPPL ADDRESS
         MVC   CPPLCBUF-CPPL(4,R1),ADDRCBU2  RESTORE ORIGINAL CBUF
         SPACE 1
         TM    FLAGSFF,FSPFDIAL         PDS CALLED BY SPF AS A DIALOG?
         BNO   RETURN12                 NO, BRANCH
         LA    R0,=CL8'CONTROL'         FIRST PARAMETER
         LA    R1,=CL8'DISPLAY'         SECOND PARAMETER
         LA    R2,=CL8'REFRESH'         THIRD PARAMETER
         STM   R0,R2,MSGTEXT2           SAVE ADDRESSES
         OI    MSGTEXT2+8,X'80'         LAST
         LA    R1,MSGTEXT2                  PARAMETER
         L     R15,ISPLINK
         BASR  R14,R15                  LET SPF KNOW
         SPACE 1
         L     R3,SUBPDIAL              START OF GETMAINED AREA
         CLC   16+96+64+8(2,R3),=H'32'  EXPANDED I/O WORK AREA?
         BE    RETURN10                 NO, BRANCH
         L     R1,16+96+64(,R3)         START OF NEW I/O WORK AREA
         LH    R0,16+96+64+8(,R3)       SIZE OF NEW I/O WORK AREA
         ICM   R0,B'1000',SUBPDIAL      SUBPOOL OF NEW I/O WORK AREA
         FREEMAIN R,LV=(0),A=(1)
         SPACE 2
RETURN10 LA    R0,16+96+64+16           LENGTH OF CREATED AREAS
         CLC   16+96+64+8(2,R3),=H'32'  I/O WORK AREA RELEASE TOO?
         BNE   *+8                      NO, BRANCH
         LA    R0,16+96+64+16+32        LENGTH OF CREATED AREAS
         ICM   R0,B'1000',SUBPDIAL      SUBPOOL OF CREATED WORK AREAS
         FREEMAIN R,LV=(0),A=(3)
         SPACE 2
RETURN12 SR    R0,R0
         ICM   R0,B'1000',OUTMEMBS      ANY SUBPOOL 22 DATA?
         BZ    RETURN14                 NO, BRANCH
         FREEMAIN R,SP=(0)
         SPACE 2
RETURN14 SR    R0,R0
         ICM   R0,B'1000',SUBLIST1      ANY SUBPOOL 23 DATA?
         BZ    RETURN20                 NO, BRANCH
         FREEMAIN R,SP=(0)
         SPACE 2
RETURN20 L     R1,IOBUFF1               START OF BUFFER AREA
         L     R0,WORKBUFF
         FREEMAIN R,LV=(0),A=(1)
         SPACE 2
         L     R1,DEVLISTP              EDT WORK AREA         DRK JUN98
         L     R0,=A(DEVLISTL)          LENGTH OF WORK AREA   DRK JUN98
         FREEMAIN R,LV=(0),A=(1)                              DRK JUN98
         SPACE 2
         LA    R2,ADDRPUTL              FIRST SERVICE ROUTINE ADDRESS
         LA    R3,MODULEN               FIRST LOAD ADDRESS
         SPACE 1
RETURN30 CLI   0(R2),X'D6'              DELETE REQUIRED?
         BNE   RETURN40                 NO, BRANCH
         DELETE  EPLOC=2(R3)
RETURN40 LA    R2,4(,R2)                NEXT SERVICE ADDRESS
         LA    R3,10(,R3)               NEXT MODULES ADDRESS
         CLI   0(R3),X'FF'              END OF MODULES?
         BNE   RETURN30                 NO, BRANCH
         SPACE 2
         LR    R13,R7                   ADDRESS OF THE FIRST SAVE AREA
         LR    R15,R5                   RETURN CODE
         L     R0,WORKSIZE
         SPACE 1
         M$EXIT LV=(0)
         TITLE 'P D S  --  PDS CONSTANTS                     09/28/88'
WORKSIZE DC    0F'0',AL1(1),AL3(LENWORK)           DYNAMIC STORAGE SIZE
WORKBUFF DC    0F'0',AL1(1),AL3(32768*2+58786)     INPUT BUFFER SIZE
BLANKS   DC    0F'0',8X'40'
         SPACE 2
FF       EQU   X'FF'        IMMEDIATE FLAG MASK (FOR NI INSTRUCTIONS)
DEBNMEXT EQU   16           OFFSET IN DEB FOR NUMBER OF EXTENTS
DEBUCBAD EQU   32           OFFSET IN DEB FOR UCB ADDRESS
UCBTYP   EQU   16           OFFSET IN UCB FOR UNIT TYPE WORD
UCBRR    EQU   X'20'        UCB IS ON A SHARED DASD DEVICE
UCBVOLI  EQU   28           OFFSET IN UCB FOR DISK VOLUME NAME
         SPACE 3
         PRINT NOGEN
EXCPDCB  DCB   DEVD=DA,DDNAME=X,MACRF=E,EXLST=EXLST
LEXCPDCB EQU   *-EXCPDCB
SAMDCB   DCB   DSORG=PO,DEVD=DA,DDNAME=X,MACRF=(R,W),EXLST=EXLST
LSAMDCB  EQU   *-SAMDCB
EXLST    DC    X'85',AL3(OPENEXIT)
         PRINT GEN
         SPACE 2
BLDLPARM DC    AL2(1,74)
         SPACE 2
DAYMONTH DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31)
TRTABLE  EQU   *-X'C0'
UNHEXTBL DC    X'00',X'FAFBFCFDFEFF',9X'00'  X'C0' TO X'CF'
         DC    16X'00'                       X'D0' TO X'DF'
         DC    16X'00'                       X'E0' TO X'EF'
HEXTBL   DC    C'0123456789ABCDEF'           X'F0' TO X'FF'
         SPACE 2
SYSHELP  DC    CL8'SYSHELP'               FOR DDNAME FREE IN HELP
SYSPROC  DC    CL8'SYSPROC'               FOR NO DDNAME FREE IN DEALLOC
SPFUSER  DC    CL8'SPFUSER'               FOR SPF OPTION 6 ENQ TEST
SPFEDIT  DC    CL8'SPFEDIT'               FOR SPF MEMBER ENQ TEST
SYSIEWLP DC    CL8'SYSIEWLP'              FOR LINKAGE-EDITOR RESERVE
         AIF ('&CISP' EQ 'ISPF' OR '&CISP' EQ 'ISPFV2').FORISPF
ISPF     DC    C'ISPF    PGM(12345678)    PARM(++12345678)             X
                    '      COULD ZAP TO CHANGE "NEWAPPL(ISR)" OR "TEST"
         AGO   .FORBOTH
.FORISPF ANOP
ISPF     DC    C'ISPF    PGM(12345678)    PARM(++12345678) NEWAPPL(ISR)X
                    '      COULD ZAP TO CHANGE "NEWAPPL(ISR)" OR "TEST"
.FORBOTH ANOP
ISPFPGM  EQU   12,8                       DISPLACEMENT TO PROGRAM NAME
ISPFPARM EQU   32,8                       DISPLACEMENT TO PARM PASSED
ISPFTEST EQU   55,4                       DISPLACEMENT TO TEST TEXT
         EJECT
ISUBS    DC    33F'0'           INITIAL PDL AREA
         ORG   *-20
ZERO     DC    F'0'
         DC    XL4'FFFFFF'      INITIALIZE #MAXLEN
         DC    3F'9999999'      INITIALIZE #MAXFIND, #MAXIN, #MAXOUT
LISUBS   EQU   *-ISUBS          INITIALIZATION LENGTH
         SPACE 2
*  NOTE - THESE CCWS ARE USED FOR DATA READS
CCWINIT  CCW   X'31',IOBSEEK-IOBSEEK+3,X'60',5  SEARCH ID EQUAL (CCHHR)
         CCW   X'08',*-8-(*-8),X'60',1          TIC
         CCW   X'92',IOBSEEK-IOBSEEK+3,X'20',8  MT READ NEXT COUNT
*
         CCW   X'23',SNO-SNO,X'60',1            SET SECTOR
         CCW   X'31',IOBSEEK-IOBSEEK+3,X'60',5  SEARCH ID EQUAL (CCHHR)
         CCW   X'08',*-8-(*-8),X'60',1          TIC
CCWREAD  CCW   X'0E',*-*,X'60',32768            READ KEY AND DATA
CCWTIC   CCW   X'08',*+8-(*+8),X'60',1          TIC (OR MT READ CKD)
         CCW   X'92',IOBSEEK-IOBSEEK+3,X'60',8  MT READ NEXT COUNT
         CCW   X'22',SNO-SNO,X'20',1            READ SECTOR NUMBER
         SPACE 1
*  NOTE - THESE CCWS ARE USED FOR DIRECTORY COUNTS
CCWDIRR  CCW   X'1A',0,X'70',5                  READ HOME ADDRESS
         CCW   X'92',WORKTMP+3-WORKTMP,X'60',5  MT READ NEXT COUNT
         CCW   X'A9',KEYDATA,X'60',8            SEARCH KEY EQUAL
         CCW   X'08',*-16-(*-16),X'60',1        TIC
         CCW   X'92',WORKTMP+11-WORKTMP,X'60',5 MT READ NEXT COUNT
         CCW   X'86',0,X'70',1                  READ DATA
         CCW   X'08',*-16-(*-16),X'20',1        TIC
         SPACE 2
KEYDATA  DC    XL8'FFFFFFFFFFFFFFFF',XL2'000E',XL8'FFFFFFFFFFFFFFFF'
         EJECT
UNITTBL  DC    CL9'D????    '
         DC    CL9'D????    '
         DC    CL9'D????    '
         DC    CL9'D????    '
         DC    CL1'&DB9345 ',CL8'&UN9345  '                   DRK NOV99
         DC    CL9'D????    '
         DC    CL1'&DB23051',CL8'&UN23051 '
         DC    CL1'&DB23052',CL8'&UN23052 '
         DC    CL1'&DB2314 ',CL8'&UN2314  '
         DC    CL1'&DB3330 ',CL8'&UN3330  '
         DC    CL1'&DB3340 ',CL8'&UN3340  '
         DC    CL1'&DB3350 ',CL8'&UN3350  '
         DC    CL1'&DB3375 ',CL8'&UN3375  '
         DC    CL1'&DB33301',CL8'&UN33301 '
         DC    CL1'&DB3380 ',CL8'&UN3380  '
         DC    CL1'&DB3390 ',CL8'&UN3390  '
         DC    CL9'M????    '
         SPACE 3
HAVECMDT DC    CL2'&NOR1 '
         DC    CL2'&NOR2 '
         DC    CL2'&NOR3 '
         DC    CL2'&NOR4 '
         DC    CL2'&NOR5 '
         DC    CL2'&NOR6 '
         DC    CL2'&NOR7 '
         DC    CL2'&NOR8 '
         DC    CL2'&NOR9 '
HAVECMDE DS    0X
         SPACE 3
OBTAIN   CAMLST SEARCH,0,0,0
         ORG   OBTAIN+4
         SPACE 3
LOCATE   CAMLST NAME,0,,0
         ORG   LOCATE+4
         SPACE 3
*ENQSTEP  ENQ   (*-*,*-*,E,7,STEP),RET=TEST,MF=L
*         ORG   ENQSTEP+4
*         SPACE 3
ENQTEST  ENQ   (*-*,*-*,E,*-*,SYSTEMS),RET=TEST,MF=L
         ORG   ENQTEST+4
         SPACE 3
ENQHAVE  ENQ   (*-*,*-*,E,*-*,SYSTEM),RET=HAVE,MF=L
         ORG   ENQHAVE+4
         SPACE 7
RESERVEL RESERVE (*-*,*-*,E,*-*,SYSTEMS),RET=HAVE,UCB=0,MF=L
         ORG   RESERVEL+4
         SPACE 3
DEQSYSS  DEQ   (*-*,*-*,*-*,SYSTEMS),RET=HAVE,UCB=0,MF=L
         ORG   DEQSYSS+4
         SPACE 3
DEQSYS   DEQ   (*-*,*-*,*-*,SYSTEM),RET=HAVE,MF=L
         ORG   DEQSYS+4
         SPACE 3
STAELIST ESTAE *-*,PARAM=*-*,TERM=YES,MF=L
         ORG   STAELIST+4
         SPACE 3
MODULEN  DC    AL2(CVTPUTL-CVTMAP),CL8'IKJPUTL '
         DC    AL2(CVTPARS-CVTMAP),CL8'IKJPARS '
         DC    AL2(CVTPTGT-CVTMAP),CL8'IKJPTGT '
         DC    AL2(CVTGETL-CVTMAP),CL8'IKJGETL '
         DC    AL2(CVTSCAN-CVTMAP),CL8'IKJSCAN '
         DC    AL2(CVTSTCK-CVTMAP),CL8'IKJSTCK '
         DC    AL2(CVTEHDEF-CVTMAP),CL8'IKJEHDEF'
         DC    AL2(CVTEFF02-CVTMAP),CL8'IKJEFF02'
         DC    AL2(CVTPCNVT-CVTMAP),CL8'CVTPCNVT'
         DC    AL2(CVTPRLTV-CVTMAP),CL8'CVTPRLTV'
         DC    X'FFFF'
         SPACE 3
$ATTL    DC    CL8'&NATT '
$CHAL    DC    CL8'&NCHA '
$COP     DC    CL8'&NCOP '
$DEL     DC    CL8'&NDEL '
$DIS     DC    CL8'&NDIS '                                    ABL NOV86
$END     DC    CL8'&NEND '
$FIN     DC    CL8'&NFIN '
$HIS     DC    CL8'&NHIS '
$IFX     DC    CL8'&NIFX '
$ISM     DC    CL8'&NISM '
$MAP     DC    CL8'&NMAP '
$MEM     DC    CL8'&NMEM '
$MML     DC    CL8'&NMML '
$ML      DC    CL8'&IMLX '
$PAT     DC    CL8'&NPAT '
$REC     DC    CL8'&NREC '
$RC2     DC    CL8'&NRC2 '
$REP     DC    CL8'&NREP '
$SUB     DC    CL8'&NSUB '
$SUL     DC    CL8'&NSUL '
$USA     DC    CL8'&NUSA '
$VER     DC    CL8'&NVER '
#EXE     DC    CL8'&CEXE '
PTW      EQU   32        SUBCOMMAND TABLE WIDTH
         SPACE 3
         PRINT NOGEN
MSGBLANK M$TX  '  '
MSGHELP  M$TX  'H MS MS('
MSGMEMQ  M$TX  '**                                '
MSGBL132 M$TX  '                                                       X
                                                                       X
                                    '  -- 132 BYTES
BLANK128 EQU   MSGBL132+4,128
         SPACE 2
PDS300A  M$TX  'PDS300A ENTER OPTION -- DSN=...                        X
                                                                      '
*BYTE COUNT:   ' 234567 10 234567 20 234567 30 234567 40 234567 50 2345
*DS300A  M$TX  'PDS300A ENTER OPTION -- DSN=123456789012345678901234567
*              89012345678901234,VOL=SER=123456  MEM=12345678:12345678'
*BYTE COUNT:   67 60 234567 70 234567 80 234567 90 23456 100 23456 110'
*
*FOR DIALOG:   '- DSN=12345678901234567890123456789012345678901234,VOL=
*              SER=123456  MEM=12345678'
*
PDS381A  M$TX  'PDS381A REENTER THE DATA SET NAME, VOLUME AND DISPOSITIX
               ON'
         TITLE 'P D S  --  PDS LITERALS                      09/28/88'
         LTORG
         TITLE 'P D S  --  PDS TRANSLATE TABLES              09/28/88'
PATCH    B     PATCH
         DC    18H'0'
         SPACE 3
***  TRANSLATE TABLE TO CONVERT UNPRINTABLES TO PERIODS
TRLINE   DC    256C'.'            ASSUME ALL UNPRINTABLE FIRST
         ORG   TRLINE+C' '
         DC    1X'40'             BLANK IS OK
         ORG   TRLINE+C'Ö'
         DC    C'Ö.<(+×&&'        Ö.<(+×&  ARE OK
         ORG   TRLINE+C'!'
         DC    C'!$*);^-/'        !$*);^-/  ARE OK
         ORG   TRLINE+C'|'
         DC    C'|,%_>?'          |,%_>?  ARE OK
         ORG   TRLINE+C'`'
         DC    C'`:#@''="'        `:#@'="  ARE OK
         ORG   TRLINE+X'81'       LOWER-CASE ABCDEFGHI
         DC    X'818283848586878889'
         ORG   TRLINE+X'91'       LOWER-CASE JKLMONPQR
         DC    X'919293949596979899'
         ORG   TRLINE+X'A1'       LOWER-CASE ~STUVWXYZ
         DC    X'A1A2A3A4A5A6A7A8A9'
         ORG   TRLINE+C'{'
         DC    C'{ABCDEFGHI'      {ABCDEFGHI  ARE OK
         ORG   TRLINE+C'}'
         DC    C'}JKLMNOPQR'      }JKLMNOPQR  ARE OK
         ORG   TRLINE+C'\'
         DC    C'\'               \ IS OK
         ORG   TRLINE+C'S'
         DC    C'STUVWXYZ'        STUVWXYZ  ARE OK
         ORG   TRLINE+C'0'
         DC    C'0123456789'      0123456789  ARE OK
         ORG   ,
         TITLE 'P D S  --  PDS MESSAGE LABELS/MESSAGE CSECT  09/28/88'
L002$1   DC    C'002'
L081     DC    C'081'
L100$1   DC    C'100'
L241     DC    C'241'
L242     DC    C'242'
L243     DC    C'243'
L410$1   DC    C'410'
L412     DC    C'412'
L470     DC    C'470'
L481     DC    C'481'
L485     DC    C'485'
L520     DC    C'520'
L715     DC    C'715'
L731     DC    C'731'
L830     DC    C'830'
L831     DC    C'831'
L835$1   DC    C'835'
L836     DC    C'836'
L843     DC    C'843'
L850$2   DC    C'850'
L853$1   DC    C'853'
L858     DC    C'858'
L859$1   DC    C'859'
L862     DC    C'862'
L872     DC    C'872'
L875     DC    C'875'
L876     DC    C'876'
L877     DC    C'877'
L892     DC    C'892'
L893     DC    C'893'
L920$1   DC    C'920'
L990     DC    C'990'
L991$1   DC    C'991'
L999$1   DC    C'999'
         DC    X'FF'             LIST TERMINATOR
         SPACE 5
PARTADDR DC    A(PROBE01)        PROBE POINTS FOR THE MESSAGE CSECT
         DC    A(PROBE02)          (FOR A PARTITIONED SEARCH)
         DC    A(PROBE03)
         DC    A(PROBE04)
         DC    A(PROBE05)
         DC    A(PROBE06)
         DC    A(PROBE07)
         DC    A(PROBE08)
         DC    A(PROBE09)
         DC    A(PROBE10)
         DC    A(PROBE11)
         DC    A(PROBE12)
         DC    A(PROBE99)
         SPACE 2
MSGCSECT CSECT
** INFORMATIONAL MESSAGES
PROBE01  DS    0C          PLACE BEFORE THE FIRST MESSAGE OF THE CSECT
         IKJTSMSG ('PDS001I TESTMESSAGES -- ALL NUMBERED MESSAGES FOLLOX
               W:'),L001
         IKJTSMSG ('PDS002I DEFAULT MEMBER IS ',),L002
         IKJTSMSG ('PDS005I END OF FILE'),L005
         IKJTSMSG ('PDS006I END OF DATA SET'),L006
         IKJTSMSG ('PDS010I THE ALIAS HAS BEEN ASSIGNED'),L010
         IKJTSMSG ('PDS020I ',,' ATTRIBUTES ARE:',),L020
         IKJTSMSG ('PDS021I APF AUTHORIZED'),L021
         IKJTSMSG ('PDS022I NOT APF AUTHORIZED, OBSOLETE LINKAGE EDITORX
               '),L022
         IKJTSMSG ('PDS023I APF AUTHORIZED, APF DATA VALUE GREATER THANX
                1'),L023
         IKJTSMSG ('PDS024I PAGE ALIGNMENT IS REQUIRED'),L024
         IKJTSMSG ('PDS025I SSI INFORMATION: ',),L025
         IKJTSMSG ('PDS026I MOD:',),L026
         IKJTSMSG ('PDS030I GLOBAL OPERANDS: ',),L030
         IKJTSMSG ('PDS031I INPUT BUFFERING: ',),L031
         IKJTSMSG ('PDS032I TESTCPULOOP -- CPU LOOP FOLLOWS:'),L032
         IKJTSMSG ('PDS033I TESTABEND -- SYSTEM 0C1 FOLLOWS:'),L033
         IKJTSMSG ('PDS034I TESTOUTLOOP -- THIS DATA REPEATS'),L034
PROBE02  DS    0C
         IKJTSMSG ('PDS035I TESTREAD -- EXCP RETURN CODE=',,'; NEXT TTRX
                ADDRESS IS ',),L035
         IKJTSMSG ('PDS036I LARGEST FREE STORAGE AREA IS ',,'K'),L036
         IKJTSMSG ('PDS040I ',,' HAS BEEN DELETED'),L040
         IKJTSMSG ('PDS050I ',,' WILL BE ',),L050
         IKJTSMSG ('PDS051I ',,' IS BEING ',),L051
         IKJTSMSG ('PDS060I TRANSLATOR HISTORY BY CSECT -'),L060
         IKJTSMSG ('PDS061I AMASPZAP UPDATE HISTORY BY CSECT -'),L061
         IKJTSMSG ('PDS062I USER-SUPPLIED UPDATE HISTORY BY CSECT -'), X
               L062
         IKJTSMSG ('PDS064I LAST LINK-EDITED ON ',,'  BY LKED ',),L064
         IKJTSMSG ('PDS065I MAIN MEMBER NAME UPDATED FOR MEMBER: ',),  X
               L065
         IKJTSMSG ('PDS066I MEMBER IS AN ALIAS FOR: ',),L066
         IKJTSMSG ('PDS071I THE FOLLOWING OPTIONS ARE AVAILABLE:'),L071
         IKJTSMSG ('PDS080I PDSOUT DCB IS CLOSED'),L080
         IKJTSMSG ('PDS080I LOGCOPY DCB IS CLOSED'),L081
         IKJTSMSG ('PDS090I ',,' HAS BEEN RENAMED TO ',),L090
         IKJTSMSG ('PDS091I ',,' HAS BEEN RESTORED'),L091
PROBE03  DS    0C
         IKJTSMSG ('PDS092I AMODE/RMODE INFORMATION UPDATED FOR MEMBER:X
                ',),L092
         IKJTSMSG ('PDS100I ',,' -- VERSION 8.5.&MM   '),L100
         IKJTSMSG ('PDS101I DELETED MEMBER FOUND AT TTR: ',),L101
         IKJTSMSG ('PDS102I ENTRY POINT AT ',),L102
         IKJTSMSG ('PDS103I ENTRY POINT AT ',,'  --  ',),L103
         IKJTSMSG ('PDS104I MODULE LENGTH  ',,'  -- ',),L104
         IKJTSMSG ('PDS105I LAST FIX DATE: &FIXDATE'),L105
         IKJTSMSG ('PDS110I',,' LOGICAL RECORDS WERE INPUT'),L110
         IKJTSMSG ('PDS111I',,' PHYSICAL BLOCKS WERE INPUT'),L111
         IKJTSMSG ('PDS112I',,' CHARACTERS IN THE LARGEST PHYSICAL BLOCX
               K'),L112
         IKJTSMSG ('PDS113I',,' CHARACTERS PER AVERAGE PHYSICAL BLOCK')X
               ,L113
         IKJTSMSG ('PDS114I',,' TRACKS COULD BE REGAINED BY COMPRESSINGX
                THIS DATA SET'),L114
         IKJTSMSG ('PDS115I',,' MEMBERS WERE CHECKED'),L115
         IKJTSMSG ('PDS116I DATA SET WAS CHECKED'),L116
         IKJTSMSG ('PDS117I ',,' MEMBERS COUNTED; CUMULATIVE SIZE IS ',X
               ,' RECORDS',),L117
         IKJTSMSG ('PDS118I ',,' MEMBERS RMODE24; SIZE IS ',,'K'),L118
         IKJTSMSG ('PDS119I ',,' MEMBERS RMODEANY; SIZE IS ',,'K'),L119
         IKJTSMSG ('PDS120I OS/390 RESIDENCE MODE IS ',,' -- ADDRESSINGX
                MODE IS ',),L120
         IKJTSMSG ('PDS140I ',,' RECORD',),L140
         IKJTSMSG ('PDS141I AT ',),L141
PROBE04  DS    0C
         IKJTSMSG ('PDS142I ',),L142
         IKJTSMSG ('PDS143I ',,' DIRECTORY ENTRY, LENGTH=',),L143
         IKJTSMSG ('PDS144I DATA LINE ',,':'),L144
         IKJTSMSG ('PDS145I ',),L145
         IKJTSMSG ('PDS160I ',),L160
         IKJTSMSG ('PDS161I ',),L161
         IKJTSMSG ('PDS162I ',),L162
         IKJTSMSG ('PDS163I ',),L163
         IKJTSMSG ('PDS164I ',),L164
         IKJTSMSG ('PDS165I ',),L165
         IKJTSMSG ('         ',),L169
         IKJTSMSG ('PDS171I ',,' HAS COMPLETED; RC',),L171
         IKJTSMSG ('PDS180I ',),L180
         IKJTSMSG ('PDS181I EXTENTS IN TRACKS: ',),L181
         IKJTSMSG ('PDS182I ',),L182
         IKJTSMSG ('PDS183I ',),L183
PROBE05  DS    0C
         IKJTSMSG ('PDS184I ',),L184
         IKJTSMSG ('PDS185I ',),L185
         IKJTSMSG ('PDS186I ',),L186
         IKJTSMSG ('PDS190I AN ALIAS NAMED ',,' IS ALREADY AT THIS TTR'X
               ),L190
         IKJTSMSG ('PDS193I THIS GROUP CONTAINS ',,' MEMBERS'),L193
         IKJTSMSG ('PDS194I CONCATENATION ',,' OF ',),L194
         IKJTSMSG ('PDS200I ',),L200
         IKJTSMSG ('PDS210I ',),L210
         IKJTSMSG ('PDS220I ',),L220
         IKJTSMSG ('PDS230I ',),L230
         IKJTSMSG ('PDS232I ',),L232
         IKJTSMSG ('PDS241I NO MATCHING DATA WAS FOUND'),L241
         IKJTSMSG ('PDS242I NO MATCHING EXTERNAL SYMBOLS WERE FOUND'),LX
               242
         IKJTSMSG ('PDS243I NO MATCHING HISTORY DATA WAS FOUND'),L243
         IKJTSMSG ('PDS245I NO MATCHING MEMBERS WERE FOUND'),L245
         IKJTSMSG ('PDS250I ',),L250
         IKJTSMSG ('PDS260I ',),L260
         IKJTSMSG ('PDS262I ',),L262
         IKJTSMSG ('PDS273I OUTPUT DATA SET NAME IS ',),L273
         SPACE 2
** WARNING MESSAGES
         IKJTSMSG ('PDS400W NO MEMBERS ARE IN THE DATA SET'),L400
PROBE06  DS    0C
         IKJTSMSG ('PDS410W VOLSET(',,') IS STILL IN EFFECT'),L410
         IKJTSMSG ('PDS412W REALLOCATION WITHOUT VOLSET WILL BE ATTEMPTX
               ED'),L412
         IKJTSMSG ('PDS441W ',,' (WEAK)'),L441
         IKJTSMSG ('PDS442W ',,' (MISSING)'),L442
         IKJTSMSG ('PDS443W MAXBLK HAS BEEN RAISED TO THE DATA SET LRECX
               L VALUE'),L443
         IKJTSMSG ('PDS444W MAXBLK EXCEEDS THE DATA SET BLOCKSIZE'),   X
               L444
         IKJTSMSG ('PDS451W ALL MEMBERS IN THIS PDS WILL BE LOST'),    X
               L451
         IKJTSMSG ('PDS460W NO HISTORY DATA IS AVAILABLE'),L460
         IKJTSMSG ('PDS470W THE PROGRAM IS PROBABLY IN A LOOP'),L470
         IKJTSMSG ('PDS480W COMPRESS IS IN PROGRESS'),L480
         IKJTSMSG ('PDS480W COMPRESS MAY NOT BE INTERRUPTED'),L481
         IKJTSMSG ('PDS482W BLOCKSIZE SHOULD BE EVENLY DIVISIBLE BY THEX
                DCB LRECL'),L482
         IKJTSMSG ('PDS484W COPY IS IN PROGRESS'),L484
         IKJTSMSG ('PDS484W COPY SHOULD NOT BE INTERRUPTED'),L485
         IKJTSMSG ('PDS500W NO COBOL TASK GLOBAL TABLE WAS FOUND'),L500
         IKJTSMSG ('PDS502W THIS MODULE WAS COMPILED WITH ENDJOB AND MIX
               XED RES AND NORES OPTIONS'),L502
         IKJTSMSG ('PDS503W THIS MODULE WAS COMPILED WITH MIXED RES ANDX
                NORES OPTIONS'),L503
         IKJTSMSG ('PDS510W THIS IS A NULL MEMBER'),L510
PROBE07  DS    0C
         IKJTSMSG ('PDS520W NO INFORMATION IS AVAILABLE'),L520
         IKJTSMSG ('PDS530W THIS DATA SET IS NOT PARTITIONED'),L530
         IKJTSMSG ('PDS532W MULTIPLE INPUT MEMBERS WILL BE UNLOADED TO X
               THIS SEQUENTIAL DATA SET'),L532
         SPACE 2
** ERROR MESSAGES
         IKJTSMSG ('PDS700E THIS RANGE OF NAMES IS INVALID'),L700
         IKJTSMSG ('PDS701E THIS DATA SET IS NOT A LOAD LIBRARY'),L701
         IKJTSMSG ('PDS702E THIS DATA SET IS A LOAD LIBRARY'),L702
         IKJTSMSG ('PDS703E THIS MODULE HAS NO EXTERNAL SYMBOLS'),L703
         IKJTSMSG ('PDS704E MODULE ',,' HAS NO EXTERNAL SYMBOLS'),L704
         IKJTSMSG ('PDS705E EXTERNAL SYMBOL ',,' WAS NOT FOUND'),L705
         IKJTSMSG ('PDS710E INVALID APF INFORMATION FORMAT; MEMBER IS AX
               SSUMED NOT AUTHORIZED'),L710
         IKJTSMSG ('PDS711E NO MEMBER NAMES ARE IN THIS RANGE'),L711
         IKJTSMSG ('PDS712E NO MEMBER NAMES MATCH THIS PATTERN'),L712
         IKJTSMSG ('PDS713E NO MEMBER NAMES MATCH THIS COMBINATION NAMEX
               '),L713
         IKJTSMSG ('PDS715E NO MATCHING ATTRIBUTES WERE FOUND'),L715
         IKJTSMSG ('PDS720E NOT APF AUTHORIZED; THE APF DATA IS MISSINGX
               '),L720
         IKJTSMSG ('PDS721E NOT APF AUTHORIZED; THE APF DATA IS THE WROX
               NG LENGTH'),L721
         IKJTSMSG ('PDS722E THE APF DATA CAN NOT BE CHANGED'),L722
         IKJTSMSG ('PDS723E THE RLD/CONTROL COUNT CAN NOT BE CHANGED'),X
               L723
         IKJTSMSG ('PDS724E RMODE AND AMODE CAN NOT BE CHANGED -- OBSOLX
               ETE LINKAGE-EDITOR'),L724
         IKJTSMSG ('PDS726E PAGE ALIGNMENT CAN NOT BE CHANGED -- OBSOLEX
               TE LINKAGE-EDITOR'),L726
         IKJTSMSG ('PDS730E THIS SUBCOMMAND IS NOT OPERATIONAL; YOU AREX
                ALREADY UNDER SPF'),L730
PROBE08  DS    0C
         IKJTSMSG ('PDS731E SPF IS NOT OPERATIONAL NOW'),L731
         IKJTSMSG ('PDS732E CLIST PROCESSING IS NOT SUPPORTED FROM ISPMX
               ODE OR MEMLIST'),L732
         IKJTSMSG ('PDS733E BROWSE FAILED -- NULL MEMBER OR I/O ERROR')X
               ,L733
         IKJTSMSG ('PDS740E THIS MODULE HAS NO MATCHING EXTERNAL SYMBOLX
               S'),L740
         IKJTSMSG ('PDS750E A REQUIRED NOTELIST POINTER WAS NOT FOUND IX
               N THIS MEMBER'),L750
         IKJTSMSG ('PDS751E A NOTELIST RECORD COULD NOT BE FOUND FOR THX
               IS MEMBER'),L751
         IKJTSMSG ('PDS752E THE NUMBER OF DESIRED DIRECTORY BLOCKS MUSTX
                BE SPECIFIED'),L752
         IKJTSMSG ('PDS770E A SEARCH STRING IS REQUIRED'),L770
         IKJTSMSG ('PDS771E ',,' IS AN INVALID SUBCOMMAND; ENTER "HELP"X
                OR "OPTIONS" FOR HELP'),L771
         IKJTSMSG ('PDS772E A REPLACEMENT STRING IS REQUIRED'),L772
         IKJTSMSG ('PDS773E EQUAL LENGTH STRINGS ARE REQUIRED FOR BLOCKX
                AND DUMP UPDATES'),L773
         IKJTSMSG ('PDS774E REPLACE TERMINATED; CHARACTER EXPANSION FAIX
               LED'),L774
         IKJTSMSG ('PDS780E ',,' DCB OPEN ERROR -- REALLOCATE AND TRY AX
               GAIN'),L780
         IKJTSMSG ('PDS781E ',,' DCB ATTRIBUTES CONFLICT -- USE SEQUENTX
               IAL WITH RECFM=FB AND LRECL=80'),L781
         IKJTSMSG ('PDS800E NO LOAD MODULE TEXT WAS FOUND FOR MEMBER'),X
               L800
         IKJTSMSG ('PDS801E END OF MEMBER SIMULATED -- REMAINDER OF TRAX
               CK SKIPPED'),L801
PROBE09  DS    0C
         IKJTSMSG ('PDS802E A MAIN MEMBER NAMED ',,' IS ALREADY AT THISX
                TTR'),L802
         IKJTSMSG ('PDS804E RESTORE ABANDONED'),L804
         IKJTSMSG ('PDS805E INVALID LOAD MODULE DATA'),L805
         IKJTSMSG ('PDS806E BLOCK LENGTH OF',,' EXCEEDS THE MAXBLK VALUX
               E'),L806
         IKJTSMSG ('PDS811E RECORD LENGTH',,' IS INVALID'),L811
         IKJTSMSG ('PDS812E BLOCK LENGTH OF',,' EXCEEDS THE DATA SET DCX
               B BLKSIZE'),L812
         IKJTSMSG ('PDS813E RECORD LENGTH OF',,' EXCEEDS THE MAXIMUM DCX
               B LRECL'),L813
         IKJTSMSG ('PDS814E BLOCK LENGTH OF',,' IS NOT DIVISIBLE BY THEX
                DCB LRECL'),L814
         IKJTSMSG ('PDS820E THIS MEMBER IS AN ALIAS FOR ',,' BUT IT POIX
               NTS TO ',),L820
         IKJTSMSG ('PDS821E RMODE ENTRY DOES NOT CORRESPOND WITH MEMBERX
                ',),L821
         IKJTSMSG ('PDS822E MAIN AMODE ENTRY DOES NOT CORRESPOND WITH MX
               EMBER ',),L822
         IKJTSMSG ('PDS823E RLD/CONTROL COUNT DOES NOT CORRESPOND WITH X
               MEMBER ',),L823
         IKJTSMSG ('PDS824E DUPLICATE MEMBER NAME -- IGNORED'),L824
         IKJTSMSG ('PDS825E MEMBER NAME IS OUT OF SEQUENCE -- IGNORED')X
               ,L825
         IKJTSMSG ('PDS826E THE DIRECTORY RLD/CONTROL COUNT DOES NOT MAX
               TCH THE FIRST RLD ENTRY'),L826
         IKJTSMSG ('PDS827E ',,' IS AN ALIAS FOR THIS MEMBER BUT IT POIX
               NTS TO ',),L827
PROBE10  DS    0C
         IKJTSMSG ('PDS830E OBTAIN ERROR; DSCB NOT ON VOLUME'),L830
         IKJTSMSG ('PDS831E UNABLE TO OPEN DATA SET'),L831
         IKJTSMSG ('PDS832E DUMMY MEMBER ADD FAILED, RC=8'),L832
         IKJTSMSG ('PDS833E DUMMY MEMBER DELETE FAILED, RC=8'),L833
         IKJTSMSG ('PDS834E ERROR IN GENERAL FAIL SERVICE ROUTINE;  R15X
               ',),L834
         IKJTSMSG ('PDS835E ERROR IN DAIRFAIL SERVICE ROUTINE;  R15',),X
               L835
         IKJTSMSG ('PDS836E I/O ERROR IN DIRECTORY'),L836
         IKJTSMSG ('PDS840E INVALID HEXADECIMAL STRING LENGTH'),L840
         IKJTSMSG ('PDS841E INVALID HEXADECIMAL CHARACTERS'),L841
         IKJTSMSG ('PDS842E THIS STRING IS TOO LONG'),L842
         IKJTSMSG ('PDS843E ONLY DISK DATA SETS ARE SUPPORTED'),L843
         IKJTSMSG ('PDS850E ',,' IS BEING UPDATED BY ',),L850
         IKJTSMSG ('PDS851E THIS DATA SET IS BEING UPDATED BY ',),L851
         IKJTSMSG ('PDS852E ',,' ALREADY EXISTS'),L852
         IKJTSMSG ('PDS853E ',,' NOT FOUND'),L853
         IKJTSMSG ('PDS854E ',,' IS AN INVALID MEMBER NAME'),L854
PROBE11  DS    0C
         IKJTSMSG ('PDS855E THE DATA SET DIRECTORY IS FULL AND MEMBERS X
               CANNOT BE ADDED'),L855
         IKJTSMSG ('PDS858E NO DEFAULT MEMBER HAS BEEN ESTABLISHED'),  X
               L858
         IKJTSMSG ('PDS859E COMMAND ',,' WAS NOT FOUND'),L859
         IKJTSMSG ('PDS860E MEMBER IS AN ALIAS BUT NO MAIN MEMBER EXISTX
               S'),L860
         IKJTSMSG ('PDS861E THE ALIAS DIRECTORY ENTRY NOTES THE MAIN ENX
               TRY NAME AS ',),L861
         IKJTSMSG ('PDS862E ERROR IN GQSCAN DATA'),L862
         IKJTSMSG ('PDS864E ',,' IS AN APPARENT ALIAS FOR THIS MEMBER')X
               ,L864
         IKJTSMSG ('PDS865E THE IEBCOPY OUTPUT CAN NOT BE OPENED'),L865
         IKJTSMSG ('PDS870E PDS DIRECTORIES MUST BE CONTAINED IN ONE EXX
               TENT'),L870
         IKJTSMSG ('PDS871E A TTR FOR THIS MEMBER WAS NOT FOUND'),L871
         IKJTSMSG ('PDS872E THIS MEMBER IS AFTER THE DATA SET END-OF-FIX
               LE'),L872
         IKJTSMSG ('PDS873E TTR IS BEYOND THE USED PORTION OF THE DATA X
               SET'),L873
         IKJTSMSG ('PDS874E TSO COMMAND NAME IS INVALID'),L874
         IKJTSMSG ('PDS875E THIS DATA SET HAS NO DIRECTORY BLOCKS'),   X
               L875
         IKJTSMSG ('PDS876E A DIRECTORY RECORD HAS AN INCORRECT LENGTH X
               (NOT 256 CHARACTERS)'),L876
         IKJTSMSG ('PDS877E INVALID SUBCOMMAND NAME'),L877
         IKJTSMSG ('PDS880E RESIDENCE MODE ANY AND ADDRESSING MODE ',, X
               ' ARE INCOMPATIBLE'),L880
PROBE12  DS    0C
         IKJTSMSG ('PDS881E REENTRANT ATTRIBUTE CONFLICTS WITH NOT REUSX
               ABLE'),L881
         IKJTSMSG ('PDS882E TEST ATTRIBUTE CONFLICTS WITH NOT EDIT'),  X
               L882
         IKJTSMSG ('PDS883E REUSABLE ATTRIBUTE CONFLICTS WITH SCATTER')X
               ,L883
         IKJTSMSG ('PDS884E OVERLAY ATTRIBUTE CONFLICTS WITH ',),L884
         IKJTSMSG ('PDS885E MORE THAN ONE OUTPUT MEMBER WOULD BE NAMED X
               ',),L885
         IKJTSMSG ('PDS892E READ MULTIPLE FAILED AT TTR=',),L892
         IKJTSMSG ('PDS893E READ MULTIPLE ERROR -- NEXT TTR (',,') IS IX
               NCORRECT'),L893
         IKJTSMSG ('PDS900E THE SOURCE AND TARGET DATA SETS MUST DIFFERX
               '),L900
         IKJTSMSG ('PDS910E TSO COMMAND ',,' IS NOT ALLOWED'),L910
         IKJTSMSG ('PDS920E SUBCOMMAND ',,' IS NOT ALLOWED FOR THIS DATX
               A SET'),L920
         IKJTSMSG ('PDS930E ',,' IS AN INVALID SUBCOMMAND ABBREVIATION'X
               ),L930
         IKJTSMSG ('PDS973E NO DEFAULT OUTPUT DATA SET NAME HAS BEEN ESX
               TABLISHED'),L973
         IKJTSMSG ('PDS980E IEBCOPY WAS INTERRUPTED'),L980
         IKJTSMSG ('PDS982E SEQUENTIAL INPUT MUST BE COPIED TO A SPECIFX
               IC OUTPUT MEMBER'),L982
         IKJTSMSG ('PDS990E EXTENT INITIALIZATION READ FAILED'),L990
         IKJTSMSG ('PDS991E PERMANENT I/O ERROR AT TTR=',),L991
         IKJTSMSG ('PDS998E ABEND ',,' LOADING THIS MODULE'),L998
         IKJTSMSG ('PDS999E ABEND ',),L999
         PRINT GEN
          SPACE 1
** END OF MESSAGES
PROBE99  DS    0C               MUST BE THE LAST PROBE LABEL
         IKJTSMSG
         PRINT NOGEN
&PDSPRT  SETC  'ON'
&PDSMAIN SETC  'YES'
         COPY  #MDSECT
         TITLE 'P D S  --  PDS SDWA DSECT                    09/28/88'
         AIF ('&MVSLEV' EQ 'MVS038').MVS038
         IHASDWA  VRAMAP=NO
         AGO   .SDWADEF
.MVS038  ANOP
         IHASDWA
.SDWADEF ANOP
         TITLE 'P D S  --  PDS SVC 99 PARAMETER LIST         09/28/88'
         IEFZB4D0
         AIF ('&MVSLEV' LT 'MVS13X').NMVS13C
         TITLE 'P D S  --  RIB, RIBE DEFINITION              09/28/88'
         ISGRIB
.NMVS13C ANOP
         TITLE 'P D S  --  PDS PPL, CSPL, CSOA DSECTS        09/28/88'
         IKJPPL
         SPACE 3
         IKJCSPL
         SPACE 2
         IKJCSOA
         TITLE 'P D S  --  PDS IOPL, PGPB DSECTS             09/28/88'
         IKJIOPL
         SPACE 5
         IKJPGPB
**       TITLE 'P D S  --  PDS GTPB DSECT                    09/28/88'
**       IKJGTPB
         TITLE 'P D S  --  PDS UPT / PSCB / ECT DSECTS       09/28/88'
         IKJUPT
         SPACE 3
         IKJPSCB
         SPACE 3
         IKJECT
         TITLE 'P D S  --  PDS CPPL DSECT                    09/28/88'
         IKJCPPL
         TITLE 'P D S  --  PDS DCBD AND CVT DSECTS           09/28/88'
         PRINT NOGEN
         DCBD  DSORG=PO
         SPACE 5
         CVT   DSECT=YES
         IHADSAB
         IKJTCB ,                                              SS JUL88
TIOT     DSECT                                                 SS JUL88
         IEFTIOT1                                              SS JUL88
         IEZJSCB                                               SS JUL88
         SPACE 5                                               SS JUL88
         IEFJFCBN                                             DRK AUG99
         IEFZB505  LOCEPAX=YES                                DRK AUG99
         IEFJESCT                                             DRK AUG99
         SPACE 5
.NOGEN   END  PDSMAIN
