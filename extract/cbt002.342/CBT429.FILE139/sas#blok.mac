//*
//*
//REPORT  EXEC PGM=FDREPORT
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SORTWK01 DD  UNIT=SYSCR,SPACE=(CYL,(10,10))
//SORTWK02 DD  UNIT=SYSCR,SPACE=(CYL,(10,10))
//SORTWK03 DD  UNIT=SYSCR,SPACE=(CYL,(10,10))
//ABRMAP   DD  DSN=&&REPORT,UNIT=SYSCR,DISP=(NEW,PASS),
//             SPACE=(CYL,(10,10))
//DISK1    DD  DISP=OLD,UNIT=DISK,VOL=SER=USER01
//SYSIN    DD  *
 TITLE LINE='*** ALL DATASETS ***'
 REPORT FIELD=(DSN,VOL,DEVTYPE,KEYLEN,
               LRDATE,DCBINFO,SIZEINFO,
               BKDATE)
 PRINT PAGEWIDTH=132,ONLINE,SORT=COMBINE
//*
//*
//S1 EXEC SAS,OPTIONS='MACROGEN,NOSORTLIST,NODYNALLOC,PAGES=MAX'
//WORK     DD  UNIT=SYSDA,SPACE=(CYL,(70,60))
//DATASETS DD  DISP=OLD,DSN=&&REPORT
//SYSIN DD  *

 /* Dennis Longnecker                                           */
 /* Administrator for the Courts                                */
 /* 1206 South Quince Street                                    */
 /* Olympia, WA   98507                                         */
 /* (206) 753-3365                                              */

 /*                                                             */
 /* This SAS procedure will accept as input as dataset with the */
 /* following characteristics:                                  */
 /*                                                             */
 /*    starting length  description                             */
 /*    column                                                   */
 /*    2        40      Dataset name                            */
 /*    47        6      Volume Serial Number                    */
 /*    54        4      Type of Disk (3330, 3350, 3380)         */
 /*    73        2      DSORG                                   */
 /*    77        3      RECFM                                   */
 /*    82        5      Blocksize                               */
 /*    89        5      Lrecl                                   */
 /*                                                             */

 DATA
    CHANGE (KEEP=
            DSNAME RECFM DISKTYPE VOLSER
            LRECL BLKSIZE ORG
            SUGGEST BLOCKING)
    PERFECT(KEEP=
            DSNAME RECFM DISKTYPE VOLSER
            LRECL BLKSIZE ORG
            SUGGEST BLOCKING);

 INFILE DATASETS;

    ARRAY WORK    {6}    WORK1-WORK6;
    ARRAY MESSAGES{6} $3 MESSAGE1-MESSAGE6;
    ARRAY OPT3380S{6}    OPT33801-OPT33806;
    ARRAY OPT3350S{6}    OPT33501-OPT33506;
    ARRAY OPT3330S{6}    OPT33301-OPT33306;

 FORMAT
    SUGGEST $27.
  ;

    RETAIN
       MESSAGE1-MESSAGE6
       OPT33801-OPT33806
       OPT33501-OPT33506
       OPT33301-OPT33306
      ;

 /* Define the blocking type matrix */
 MESSAGES{1} = '1/1';
 MESSAGES{2} = '1/2';
 MESSAGES{3} = '1/3';
 MESSAGES{4} = '1/4';
 MESSAGES{5} = '1/5';
 MESSAGES{6} = '   ';

 /* These are the optimal block sizes for 3380's */
 OPT3380S{1} = 99999;
 OPT3380S{2} = 23476;
 OPT3380S{3} = 16476;
 OPT3380S{4} = 11476;
 OPT3380S{5} =  9076;
 OPT3380S{6} =     0;

 /* These are the optimal block sizes for 3360's */
 OPT3350S{1} = 19069;
 OPT3350S{2} =  9442;
 OPT3350S{3} =  6233;
 OPT3350S{4} =  4628;
 OPT3350S{5} =  3666;
 OPT3350S{6} =     0;

 /* These are the optimal block sizes for 3330's */
 OPT3330S{1} = 13030;
 OPT3330S{2} = 06447;
 OPT3330S{3} =     0;
 OPT3330S{4} =     0;
 OPT3330S{5} =     0;
 OPT3330S{6} =     0;

 INPUT
    @2 DSNAME   $40.
    @  ;


 /* Reject the following Header Type Lines */
 IF DSNAME ^=:'-------';
 IF DSNAME ^=:'DATA SET NAME';
 IF DSNAME ^=:'FDR400';
 IF DSNAME ^=:'       ';
 IF DSNAME ^=:'$$';
 IF DSNAME ^=:'***';

 INPUT
  @47  VOLSER   $6.
  @54  DISKTYPE $4.
  @73  ORG      $2.
  @77  RECFM    $3.
  @82  BLKSIZE
  @89  LRECL
     ;

 /* Reject the entry if it is one of the following */
 IF RECFM ^= 'V  ';   /* Non-Blocked */
 IF RECFM ^= 'F  ';   /* Non-Blocked */
 IF RECFM ^= '** ';   /* Unknown     */
 IF ORG   ^= 'EF ';   /* No VSAM     */


 /* This code is here for two reasons :                    */
 /*   1) You can uncomment all the lines to report on      */
 /*      actual device types.                              */
 /*    or                                                  */
 /*   2) You can uncomment the 'DO LOOP' for the device    */
 /*      type you want to migrate                          */
 /*                                                        */

 /*IF DISKTYPE = '3380' THEN      /* initialize for 3380's */
    DO J = 1 TO 6; WORK{J} = OPT3380S{J}; END;
 /*
 /*ELSE IF DISKTYPE = '3350' THEN /* initialize for 3360's */
 /*   DO J = 1 TO 6; WORK{J} = OPT3350S{J}; END;

 /*ELSE IF DISKTYPE = '3330' THEN /* initialize for 3330's */
 /*   DO J = 1 TO 6; WORK{J} = OPT3330S{J}; END;
 /* */


 /* Check to see where the current blocksize fits in       */
 DO LOOP = 1 TO 6 WHILE (BLKSIZE < WORK{LOOP} );
*   PUT 'PASS NUMBER ' LOOP DSNAME BLKSIZE WORK{LOOP};
 END;

 IF BLKSIZE > WORK{1}
    THEN DO;
       SUGGEST  = MESSAGES{1} ×× ' *BLKSIZE is Large';
       BLOCKING = BLKSIZE;
       OUTPUT CHANGE; /* write it out! */
     END; /* if work{loop} < blocksze */

 ELSE IF BLKSIZE = WORK{LOOP}
    THEN DO;
       SUGGEST  = MESSAGES{LOOP} ×× ' Perfect Tracking';
       BLOCKING = BLKSIZE;
       OUTPUT PERFECT; /* write it out! */
     END; /* if work{loop} = blocksze */

 ELSE
    DO;
       SUGGEST  = MESSAGES{LOOP-1} ×× ' Tracking';
       BLOCKING = WORK{LOOP-1};

       /* This logic is for FB records */
       IF RECFM = 'FB'
          THEN DO;
             TEMP = BLKSIZE + LRECL;

             /* is suggested blocksize > the current              */
             /*                          blocksize + lrecl ?      */
             IF TEMP >= BLOCKING
                THEN DO;
                   /* Compute blocksize based on the LRECL */
                   BLOCKING = FLOOR(BLOCKING/LRECL) * LRECL;
                   SUGGEST = MESSAGES{LOOP-1}
                             ×× ' Tracking - Close';
                   END; /* if temp > blocking */
           END; /* if recfm ^= 'vb' */

       OUTPUT CHANGE; /* write it out! */
     END; /* if blocksze > work{loop} */

 PROC SORT DATA=CHANGE;
    BY DSNAME;

 PROC PRINT NOOBS LABEL UNIFORM;
 LABEL
    DSNAME   = 'Dataset Name'
    VOLSER   = 'VOLSER'
    DISKTYPE = 'Disk Type'
    ORG      = 'DSORG'
    RECFM    = 'RECFM'
    BLKSIZE  = 'Block Size'
    LRECL    = 'LRECL'
    SUGGEST  = 'Reblocking Suggestion'
    BLOCKING = 'Suggested Blocksize'
   ;

    TITLE 'Datasets Which Should be Re-Blocked';

    VAR
       DSNAME VOLSER DISKTYPE
       ORG RECFM BLKSIZE LRECL
       SUGGEST BLOCKING
      ;

 PROC SORT DATA=PERFECT;
    BY DSNAME;

 PROC PRINT NOOBS LABEL UNIFORM;
 LABEL
    DSNAME   = 'Dataset Name'
    VOLSER   = 'VOLSER'
    DISKTYPE = 'Disk Type'
    ORG      = 'DSORG'
    RECFM    = 'RECFM'
    BLKSIZE  = 'Block Size'
    LRECL    = 'LRECL'
    SUGGEST  = 'Reblocking Suggestion'
    BLOCKING = 'Suggested Blocksize'
   ;

    TITLE 'Datasets Which are Practically Perfect in Every Way';

    VAR
       DSNAME VOLSER DISKTYPE
       ORG RECFM BLKSIZE LRECL
       SUGGEST BLOCKING
      ;
//*
