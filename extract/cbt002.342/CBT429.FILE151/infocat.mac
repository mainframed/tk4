*PROCESS GN,SEQ(73,77),A,OF;
 INFOCAT: PROC REORDER OPTIONS(MAIN);
-/*---------------------------------------------------------------------
   THIS PROGRAM READS THE OUTPUT OF IDCAMS "LISTCAT ALL" AND PRODUCES
   INPUT FOR INFO/MVS BLGOZB PROGRAM.  BLGOZC MAY BE USED TO CREATE
   AN INFO/MVS-SEARCHABLE DATA BASE.
   CHANGED 10/21/88 JDS MODIFIED TO PRODUCE INFO/MVS R3 OUTPUT.
   CHANGED 10/26/88 JDS ADDED CHECKS FOR NEW KEYWORDS ON CREATION DATE
                        AND DEVICE TYPES OF DASD AND TAPE.
 ---------------------------------------------------------------------*/
         DCL INREC CHAR(255) VARYING STATIC,
             CARD  CHAR(80)  STATIC     INIT((80)' '),
             SYSIN  FILE RECORD SEQUENTIAL INPUT,
             SYSUT1 FILE RECORD SEQUENTIAL INPUT,
             SYSUT2 FILE RECORD SEQUENTIAL OUTPUT
                    ENV(FB RECSIZE(80) BLKSIZE(32640) TOTAL),
             1 OUT1 STATIC,     /* HEADER LINE */
               2 ID      CHAR(2)        INIT('H '),
               2 ENTRYL  CHAR(1)        INIT('U'),
               2 ENTRYN  PIC '999999'   INIT(0),
               2 FIL102  CHAR(63)       INIT((63)' '),
               2 FIL103  CHAR(8)        INIT((8)' '),
             1 OUT2 STATIC,     /* TITLE LINE 1 */
               2 ID      CHAR(2)        INIT('T '),
               2 TIMEX   CHAR(15)       INIT((15)' '),
               2 DATET   CHAR(09)       INIT((09)' '),
               2 FIL201  CHAR(05)       INIT('CAT: '),
               2 CATNAME CHAR(41)       INIT((41)' '),
               2 FIL202  CHAR(8)        INIT((8)' '),
             1 OUT3 STATIC,     /* TITLE LINE 2 */
               2 ID      CHAR(2)        INIT('T '),
               2 FIL301  CHAR(7)        INIT('ENTRY: '),
               2 ENTRYT  CHAR(11)       INIT((11)' '),
               2 FIL302  CHAR(1)        INIT(' '),
               2 ENTRY   CHAR(44)       INIT((44)' '),
               2 FIL303  CHAR(7)        INIT((7)' '),
               2 FIL304  CHAR(8)        INIT((8)' '),
             1 OUT4 STATIC,     /* KEYWORD LINE */
               2 ID      CHAR(2)        INIT('K '),
               2 TEXT4   CHAR(70)       INIT((70)' '),
               2 FIL401  CHAR(8)        INIT((8)' '),
             1 OUT5 STATIC,     /* BLANK LINE BETWEEN KEYWORD / TEXT */
               2 FIL501  CHAR(1)        INIT(' '),
               2 TEXT5   CHAR(71)       INIT((71)' '),
               2 FIL502  CHAR(8)        INIT((8)' '),
             1 OUT6 STATIC,     /* TEXT LINE */
               2 FIL601  CHAR(1)        INIT(' '),
               2 TEXT6   CHAR(71)       INIT((71)' '),
               2 FIL602  CHAR(8)        INIT((8)' '),
             1 OUT7 STATIC,     /* END LINE */
               2 ID      CHAR(4)        INIT('$EOM'),
               2 FIL701  CHAR(68)       INIT((68)' '),
               2 FIL702  CHAR(8)        INIT((8)' '),
             1 OUT8 STATIC,     /* END LINE */
               2 ID      CHAR(9)        INIT('H G000001'),
               2 FIL801  CHAR(63)       INIT((63)' '),
               2 FIL802  CHAR(8)        INIT((8)' '),
             1 OUT9 STATIC,     /* END LINE */
               2 ID      CHAR(2)        INIT('T '),
               2 TEXT9   CHAR(21)       INIT('DATA BASE TITLE ENTRY'),
               2 FIL901  CHAR(49)       INIT((49)' '),
               2 FIL902  CHAR(8)        INIT((8)' '),
             G3REC CHAR(80) VARYING STATIC INIT(' '),
             (EOF1,EOF2) CHAR(1) STATIC INIT('N'),
             KEY(1024)  CHAR(16) VARYING STATIC,
             LINE(1024) CHAR(72) VARYING STATIC,
             TKEY CHAR(16) VARYING STATIC,
             FYEAR CHAR(2) STATIC INIT('00'),
             FDAY  CHAR(3) STATIC INIT('000'),
             (ENT#,NK,P,I,NT,LX,#IN),
             FIXED BIN(15) STATIC INIT(0);
         ON ENDFILE(SYSUT1) EOF1 = 'Y';
         ON ENDFILE(SYSIN)  EOF2 = 'Y';
         ON UNDEFINEDFILE(SYSIN)  EOF2 = 'Y';
0/*      CREATE DATA BASE TITLE ENTRY */
0        WRITE FILE(SYSUT2) FROM(OUT8);
         WRITE FILE(SYSUT2) FROM(OUT9);
         READ FILE(SYSIN) INTO(CARD);
         DO WHILE (EOF2 = 'N');
           SUBSTR(TEXT6,1,71) = SUBSTR(CARD,1,71);
           WRITE FILE(SYSUT2) FROM(OUT6);
           READ FILE(SYSIN) INTO(CARD);
           END;
         WRITE FILE(SYSUT2) FROM(OUT7);
0/*      READ FIRST RECORD */
0        READ FILE(SYSUT1) INTO(INREC);
         #IN = 1;
0/*      CREATE FIRST ENTRY */
0        CALL KEYWORD('TITLE');
         CALL ADD('THIS FILE (U) IS THE OUTPUT FROM IDCAMS "LISTCAT ALL"
 .');
         CALL WRITE;
0/*      LOOP WHILE READING INPUT */
0        DO WHILE (EOF1 = 'N');
0/*        PAGE HEADING */
0          IF SUBSTR(INREC,1,9) = '1IDCAMS  ' THEN DO;
             IF TIMEX = ' ' THEN DO;
               TIMEX = SUBSTR(INREC,68,15);
               DATET = SUBSTR(INREC,90,09);
               END;
             GO TO READ;
             END;
0/*        PAGE SUB-HEADING */
0          IF SUBSTR(INREC,1,1) = '-' THEN
           IF SUBSTR(INREC,31,24) = 'LISTING FROM CATALOG -- ' THEN DO;
             IF SUBSTR(INREC,55) ^= CATNAME THEN DO;
               CALL WRITE;
               CATNAME = SUBSTR(INREC,55);
               END;
             GO TO READ;
             END;
0/*        NEW ENTRY */
0          IF SUBSTR(INREC,1,7)  = '0ALIAS '
            × SUBSTR(INREC,1,9)  = '0CLUSTER '
            × SUBSTR(INREC,1,9)  = '0NONVSAM '
            × SUBSTR(INREC,1,13) = '0USERCATALOG '
            × SUBSTR(INREC,1,11) = '0PAGESPACE '
            × SUBSTR(INREC,1,10) = '0GDG BASE '
            × SUBSTR(INREC,1,8)  = '0VOLUME ' THEN DO;
             CALL WRITE;
             ENTRYT = SUBSTR(INREC,2,INDEX(INREC,' ')-2);
             CALL KEYWORD(SUBSTR(INREC,2,INDEX(INREC,' ')-2));
             ENTRY = SUBSTR(INREC,18);
             CALL KEYWORD(SUBSTR(INREC,18));
             IF SUBSTR(INREC,26,1) ^= ' ' THEN DO;
                CALL KEYWORD(SUBSTR(INREC,18,
                INDEX(SUBSTR(INREC,18,9),'.')-1));
                END;
             END;
0          IF SUBSTR(INREC,2,45) =
           '         THE NUMBER OF ENTRIES PROCESSED WAS:' THEN DO;
             CALL WRITE;
             ENTRYT  = 'STATISTICS';
             ENTRY   = 'ENTRY';
             CALL KEYWORD('STATISTICS');
             END;
0          IF SUBSTR(INREC,38,16) = 'CREATION--------' THEN DO;
             FYEAR = SUBSTR(INREC,56,2);
             FDAY  = SUBSTR(INREC,59,3);
             SUBSTR(G3REC,1,7) = 'CRDATE/';
             SUBSTR(G3REC,8,2) = FYEAR;
             SUBSTR(G3REC,10,3) = FDAY;
             CALL KEYWORD(SUBSTR(G3REC,1,12));
             SUBSTR(G3REC,1,7) = 'CRYEAR/';
             SUBSTR(G3REC,8,2) = FYEAR;
             SUBSTR(G3REC,10,3) = FDAY;
             CALL KEYWORD(SUBSTR(G3REC,1,9));
             END;
0          IF SUBSTR(INREC,38,10) = 'DEVTYPE---' THEN DO;
             IF SUBSTR(INREC,53,4) = '3010' THEN
             CALL KEYWORD('DASD');
             IF SUBSTR(INREC,53,4) = '3200' THEN
             CALL KEYWORD('TAPE');
             END;
0          IF SUBSTR(INREC,9,10) = 'DEVTYPE---' THEN DO;
             IF SUBSTR(INREC,24,4) = '3010' THEN
             CALL KEYWORD('DASD');
             IF SUBSTR(INREC,24,4) = '3200' THEN
             CALL KEYWORD('TAPE');
             END;
0          IF SUBSTR(INREC,2,16) = '   DATA ------- '
            × SUBSTR(INREC,2,16) = '   INDEX ------ '
            × SUBSTR(INREC,2,16) = '       ALIAS----'
            × SUBSTR(INREC,2,16) = '       USERCAT--'
            × SUBSTR(INREC,2,16) = '       NONVSAM--' THEN
           CALL KEYWORD(SUBSTR(INREC,18));
0          IF SUBSTR(INREC,2,16) = '         DSN----' THEN
           CALL KEYWORD(SUBSTR(INREC,18,
           INDEX(SUBSTR(INREC,18,45),' ')-1));
0          IF SUBSTR(INREC,2,25) = '       VOLSER------------' THEN
           CALL KEYWORD(SUBSTR(INREC,27,
           INDEX(SUBSTR(INREC,27,7),' ')-1));
0          IF SUBSTR(INREC,2,25) = '       OWNER-IDENT-------' THEN
           IF SUBSTR(INREC,27,6) ^= '(NULL)' THEN
           CALL KEYWORD(SUBSTR(INREC,27,
           INDEX(SUBSTR(INREC,27,9),' ')-1));
0          I = LENGTH(INREC);
           DO WHILE (SUBSTR(INREC,I,1) = ' ');
             I = I - 1;
             END;
           IF I > 71 THEN DO;
             CALL ADD(SUBSTR(INREC,2,64));
             CALL ADD(SUBSTR(INREC,62));
             END;
           ELSE DO;
             CALL ADD(SUBSTR(INREC,2));
             END;
 READ:     READ FILE(SYSUT1) INTO(INREC);
           #IN = #IN + 1;
           END;
         CALL WRITE;
         RETURN;
1/*      ADD A LINE OF TEXT TO THE CURRENT ENTRY */
0ADD:    PROC(X);
         DCL X CHAR(*);
         IF NT < 1024 THEN DO;
           NT = NT + 1;
           LINE(NT) = ' '××X;
           END;
         ELSE DO;
           PUT SKIP(2) EDIT ('MAXIMUM ENTRY LINES EXECEEDED.  ',
           'INPUT RECORD NUMBER ',#IN,'.',
           'LINE IGNORED: "',X,'".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A);
           END;
         RETURN;
         END ADD;
1/*      WRITE OUT THE CURRENT ENTRY */
0WRITE:  PROC;
         IF NK = 0 THEN RETURN;
         ENT# = ENT# + 1;
         ENTRYN = ENT#;
         NPIC = NT + 5;
         WRITE FILE(SYSUT2) FROM(OUT1);
         WRITE FILE(SYSUT2) FROM(OUT2);
         WRITE FILE(SYSUT2) FROM(OUT3);
         P = 1;
         TEXT4 = (70)' ';
         DO I = 1 TO NK;
           IF P + LENGTH(KEY(I)) > 70 THEN
             DO;
             WRITE FILE(SYSUT2) FROM(OUT4);
             P = 1;
             TEXT4 = (70)' ';
             END;
           SUBSTR(TEXT4,P,LENGTH(KEY(I))) = KEY(I);
           P = P + LENGTH(KEY(I)) + 1;
           END;
         WRITE FILE(SYSUT2) FROM(OUT4);
         WRITE FILE(SYSUT2) FROM(OUT5);
         DO I = 1 TO NT;
           TEXT6 = LINE(I);
           WRITE FILE(SYSUT2) FROM(OUT6);
           END;
         WRITE FILE(SYSUT2) FROM(OUT7);
         NK,NT = 0;
         RETURN;
         END;
1/*      ADD A KEYWORD TO THE CURRENT ENTRY */
0KEYWORD: PROC(X);
         DCL X CHAR(*);
         IF VERIFY(X,' ') = 0 × LENGTH(X) < 2 THEN RETURN;
         IF NK = 0 THEN DO;
           NK = 1;
           KEY(1) = X;
           RETURN;
           END;
         ELSE IF NK < 1024 THEN DO;
           TKEY = X;
           DO I = 1 TO NK;
             IF TKEY = KEY(I) THEN RETURN;
             END;
           NK = NK + 1;
           KEY(NK) = X;
           END;
         ELSE DO;
           PUT SKIP(2) EDIT ('MAXIMUM KEYWORDS EXECEEDED.  ',
           'INPUT RECORD NUMBER ',#IN,'.',
           'KEYWORD IGNORED: "',X,'".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A);
           END;
         RETURN;
         END KEYWORD;
         END;
