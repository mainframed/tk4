         EJECT
         TITLE 'JOBACOPY COPY MEMBER - INSTALLATION MODIFIABLE CODE'
*---------------------------------------------------------------------*
*        THIS SOURCE MEMBER IS COPIED INTO THE BOTTOM OF THE IOF      *
*        JOBACESS SOURCE MODULE AND CONTAINS ALL OF THE SUBROUTINES   *
*        AND TABLES WHICH ARE USED TO MAKE THE ACCESS DECISIONS FOR   *
*        THE JOBACESS MODULE. BY MODIFYING OR REPLACING THIS MEMBER   *
*        YOU CAN INSTALL YOUR OWN SET OF JOB ACCESS RULES FOR IOF.    *
*---------------------------------------------------------------------*
* MODIFICATIONS:                                                      *
*                                                                     *
*   THIS SOURCE AS PROVIDED BY TRIANGLE SYSTEMS SOFTWARE FOR LOCAL    *
*   TAILORING BY A CUSTOMER HAS BEEN MODIFIED WITH A RACF INTERFACE   *
*   FOR AUTHORIZATION DETERMINATION.                                  *
*                                                                     *
*   NEEDED - RACF RESOURCE CLASSES:  $JOBNAME                         *
*                                    $DESTID                          *
*                                                                     *
*              WHERE '$JOBNAME' REPRESENTS THE JES 'JOBNAMES'         *
*            &       '$DESTID' IDENTIFIES PRINTERS, REMOTES, ETC.     *
*                                                                     *
*   NOTES:                                                            *
*                                                                     *
*     AUTHORITY IS DETERMINED BY A COMBINATION OF METHODS.            *
*     TSO UADS IS CHECKED TO SEE IF THE USER HAS 'OPER' AUTH          *
*     AND IF SO, IS PROVIDED AN AUTOMATIC LEVEL OF AUTHORITY.         *
*     IN ADDITION, VARIOUS USER GROUPS ARE GIVEN GLOBAL AUTHORITY     *
*     SINCE THEIR JOB FUNCTION REQUIRES SUCH(I.E. - PRODUCTION        *
*     CONTROL)                                                        *
*                                                                     *
*     THE RACF INTERFACE PERFORMS RACROUTE/RACHECKS AGAINST           *
*     CLASS($JOBNAME/$DESTID) TO DETERMINE THE LEVEL OF AUTHORITY     *
*     THAT THE USER HAS AGAINST THE JOBS/DESTINATIONS HE IS TRYING    *
*     TO READ/UPDATE/ALTER.                                           *
*                                                                     *
*     THE 'IOFCMD' MODULE MUST BE LINKED (AC=1) SINCE RACF            *
*     REQUIRES THE AUTHORIZATION OR 'IOFCMD' MAY BE PLACED            *
*     IN THE RACF AUTHORIZED CALLER TABLE.                            *
*                                                                     *
*                                                                     *
*   AUTHORIZATION:                                                    *
*                                                                     *
*     READ   - ABILITY TO VIEW JOBS WITHIN THAT ENTITY                *
*     UPDATE - ABILITY TO ROUTE, RELEASE, HOLD, ETC.                  *
*     ALTER  - ABILITY TO CANCEL/PURGE HELD OUTPUT                    *
*                                                                     *
*---------------------------------------------------------------------*
JOBACESS CSECT
         EJECT
*        THIS SUBROUTINE DETERMINES IF THE CURRENT USER SHOULD
*        BE GRANTED 'OPERATOR' AUTHORITY FOR JOBS SELECTED FOR THIS
*        IOF SESSION.
*
CHEKOPER DS    0H
         BAL   R14,ISITOPER       USE SEPARATE ROUTINE TO TELL
         B     0(R9)              NO - NOT 'OPERATOR' USER
         SPACE
         LA    R1,ALOWOPER        YES - APPEND 'OPERATOR' PRIV.
         BAL   R14,MRGVECT           TO PREVIOS PRIVILEDGES
         BR    R9                 AND RETURN TO CALLER
         EJECT
*        DETERMINE IF THIS USER HAS 'OPERATOR' AUTHORITY
ISITOPER EQU   *
         CLC   PSCBUSER(2),=C'PC' IS IT OPER (MCI DEFINITION)
         BE    4(R14)
         CLC   PSCBUSER(2),=C'PJ' IS IT OPER (MCI DEFINITION)
         BE    4(R14)
         CLC   PSCBUSER(2),=C'PB' IS IT OPER (MCI DEFINITION)
         BE    4(R14)
         CLC   PSCBUSER(2),=C'PA' IS IT OPER (MCI DEFINITION)
         BE    4(R14)
         TM    PSCBATR1,PSCBCTRL  WELL, IS IT 'OPERATOR' USER
         BZR   R14                NO - RETURN TO +0
         B     4(R14)             YES - RETURN TO +4
         EJECT
*        CHECK TO SEE IF THE CURRENT USER HAS SPECIAL PRIVILEDGES TO
*        MANAGE THE JOBS WITH THE DESTINATION SPECIFIED IN THE
*        'DEST' OPERAND OF IOF. WE WILL CALL RACF IN ORDER TO
*        DETERMINE DESTINATION AUTHORITY.
*
*        INPUT REGISTERS TO THIS ROUTINE:
*
*        R11 POINTS TO THE JAC DSECT
*        R10 POINTS TO THE SEL DSECT
*        R9  IS THE RETURN REGISTER
*
*
CHEKDEST DS    0H
         BAL   R14,ISITOPER       SEE IF 'OPERATOR' USER
         B     *+4+4              +0 => NO - CONTINUE
         B     OKDEST             +4 => YES - ALLOW ACCESS TO JOBS
         SPACE
         XR    R1,R1              CLEAR OUT PERMISSIONS
         L     R3,CVTPTR          LOAD ADDRESS OF CVT
         USING CVT,R3
         L     R3,CVTSMCA         LOAD ADDRESS OF SMCA
         USING SMCABASE,R3
         MVC   RACDEST(4),SMCASID COPY SMF ID TO USER
         DROP  R3
         MVI   RACDEST+4,X'4B'    PERIOD AS DELIMITER
         MVC   RACDEST+5(8),JACDEST
         MVC   WRKRACFL(RACFSKLN),RACFSKEL  SET PATTERN FOR MACRO
         LA    R4,RACDEST         COPY THE DEST POINTER
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS1,ATTR=READ,                               X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK RC
         BNZ   0(R9)              +0 => NO - FAIL REQUEST
OKDEST   EQU   *
         BAL   R14,KILLUSID       REMOVE USERID RESTRICTION
         SPACE
         LA    R1,ALOWDEST        AND GRANT 'DEST' PERMISSIONS
         BAL   R14,MRGVECT        DONE
         B     4(R9)              +4 => YES - ALLOW SESSION
         EJECT
*        THE USER ENTERED 'IOF * USERID(XXXXX)' (OR SPF EQUIVALENT).
*        CHECK TO SEE IF THE CURRENT USER HAS SPECIAL PRIVILEDGES
*        TO CONTROL THE JOBS OF THE USER WHOSE USERID IS JACUSID.
*        WE WILL CALL RACF TO DETERMINE IF THE USER HAS AUTHORITY
*        OVER JOBS BEGINNING 'USERID*'.
*
*        INPUT REGISTERS TO THIS ROUTINE:
*
*        R11 POINTS TO THE JAC DSECT
*        R9  IS THE RETURN REGISTER
*
*
CHEKUSER DS    0H
         BAL   R14,ISITOPER       IS THIS 'OPERATOR' USER
         B     *+4+4              +0 => NO - CONTINUE
         B     4(R9)              +4 => YES - ALLOW SESSION
         SPACE
         XR    R1,R1              CLEAR OUT PERMISSION VECTOR
         MVI   RACUSID,X'40'      CLEAR OUT RACF ENTITY NAME
         MVC   RACUSID+1(7),RACUSID
         MVC   RACUSID(7),JACUSID MOVE USERID INTO FIELD
         MVC   WRKRACFL(RACFSKLN),RACFSKEL  SET PATTERN FOR MACRO
         LA    R4,RACUSID         POINT TO RACF ENTITY NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=READ,                               X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK RC
         BNZ   0(R9)              +0 => NO - FAIL REQUEST
OKUSER   EQU   *
         B     4(R9)              +4 => YES - ALLOW SESSION
         EJECT
*        USER ENTERED IOF JOBNAME (OR IOF JOBNAME(JOBID)). IF THE
*        JOB NAME BEGINS WITH THE USER'S USERID WE WILL ALLOW ALL
*        FUNCTIONS. IF NOT, WE WILL CHECK RACF TO DETERMINE IF THE
*        USER HAS AUTHORITY TO THE JOBNAME.
*
*        INPUT REGISTERS TO THIS ROUTINE:
*
*        R11 POINTS TO THE JAC DSECT
*        R9  IS THE RETURN REGISTER
*
*
CHEKJOBN EQU   *
         BAL   R14,ISITOPER       IS THIS 'OPERATOR' USER
         B     *+4+4              +0 => NO - CONTINUE
         B     4(R9)              +4 => YES - ALLOW SESSION
         SPACE
         XR    R1,R1              CLEAR OUT PERMISSION VECTOR
         SR    R14,R14
         IC    R14,PSCBUSRL       LENGTH OF USERID
         LTR   R14,R14            IS IT NULL (TSO BATCH)
         BZ    CHEKJOB2           YES - NO POSSIBLE MATCH
         BCTR  R14,0              MINUS 1
         EX    R14,CLCUSR         SEE IF JOBNAME STARTS WITH USERID
         BNE   CHEKJOB2           NO - CHECK RACF
         LA    R1,ALOWOWNR        YES - ALLOW 'OWNER' PERMISSIONS
         BAL   R14,MRGVECT        AND APPEND TO PREVIOUS
         B     4(R9)              +4 => YES - ALLOW SESSION
CLCUSR   CLC   JACJNAM(*-*),PSCBUSER
         SPACE
CHEKJOB2 MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJNAM         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=READ,                               X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK RC
         BNZ   0(R9)              +0 => NO - FAIL REQUEST
OKJOBN   EQU   *
         B     4(R9)              +4 => YES - ALLOW SESSION
         EJECT
*        JCT FOR THE JOB HAS BEEN READ.
*        CHECK TO SEE IF THE CURRENT USER HAS SPECIAL PRIVILEDGES
*        TO CONTROL THE JOBS OF THE USER WHOSE USERID ADDRESS IS PASSED
*        TO THIS ROUTINE IN R2. WE WILL SEARCH AN INSTALLATION DEFINED
*        TABLE IN CSECT USIDTABL (SEE SAMPLE SOURCE MEMBER USIDTABL).
*
*        INPUT REGISTERS TO THIS ROUTINE:
*
*        R11 POINTS TO THE JAC DSECT
*        R2  HAS THE ADDRESS OF THE USERID IN THE JCT
*        R9  IS THE RETURN REGISTER
*
*        OUTPUT REGISTERS:
*
*        R1 = ADDRESS OF A PERMISSION VECTOR TO BE ADDED (OR'ED)
*        WITH JACJALOW TO FORM A NEW JACJALOW. THIS ALLOWS YOU TO
*        EXPAND THE PERMISSIONS FOR A SPECIFIC JOB BASED UPON DATA
*        CONTAINED IN THE JOB'S JCT.
*
CHEKJCT  DS    0H
         XR    R1,R1              START WITH NO PERMISSIONS
         BR    R9                 RETURN TO CALLER
         EJECT
*        COPY ANY DESIRED JCT DATA TO THE JWK DSECT SO THAT IT WILL
*        BE AVAILABLE FOR VALIDATE CALLS. ALTHOUGH THIS DEFAULT CODE
*        WILL ONLY SAVE JACJUSER FROM THE JCT, YOU CAN USE JACJCT TO
*        ACCESS THE JCT FOR THE JOB, ADD FIELDS TO THE JWK DSECT
*        BELOW, AND THEN SAVE ADDITIONAL JCT DATA INTO THE JWK DSECT.
*
*        INPUT PARMS:
*
*        R15 POINTS TO A DATA AREA WHERE YOU CAN SAVE JCT DATA FOR
*            THE JOB. THIS IS NECESSARY SINCE THE JCT WILL NOT BE
*            AVAILABLE DURING 'VALIDATE' CALLS LATER. YOU CAN ADD MORE
*            VARIABLES TO THE JWK AREA BY JUST EXPANDING THE JWKDSECT
*            AS PROVIDED BELOW.
*        JACJCT POINTS TO THE JCT FOR THE CURRENT JOB.
*        JACJUSER CONTAINS THE USERID FROM THE JCT. SEE SOURCE MEMBER
*                 JESEQUAT TO REDEFINE THE VALUE PASSED IN JACJUSER.
*
SAVEJCT  DS    0H
         USING JWKDSECT,R15
         MVC   JWKJUSER,JACJUSER  JUST COPY USERID FROM JCT
         SPACE
         L     R14,=V(JMJQE#US)   ADDR OF OFFSET TO JQE USERID
         LH    R2,0(R14)          OFFSET INTO JQE FOR USERID
         LTR   R2,R2              IS THERE ONE
         BZ    NOTINJQE           NO - INSTALLATION DOES NOT HAVE MOD
         A     R2,JACJQE          ADDR OF USERID IN JQE FOR JOB
         MVC   JWKJUSER,0(R2)     USE JQE USERID INSTEAD OF JCT USID
NOTINJQE EQU   *
         SPACE
         OI    JWKFLAG,JWKFINIT   AND MARK DATA AS SAVED
         DROP  R15
         BR    R9                 RETURN TO CALLER
         EJECT
*        LOOK TO SEE IF THE JOB NAME SPECIFIED IN JACJNAM IS A
*        'SPECIAL' JOB NAME THAT IS ACTUALLY KEYED TO A SPECIFIC
*        CATEGORY OF JOBS. THE TABLE WHICH DEFINES THESE JOB NAMES
*        IS NAMED 'XFORMTAB' AND IS CONTAINED IN THE 'SELSETUP'
*        ASSEMBLY. THIS ROUTINE IS SUPPOSED TO DETERMINE IF THIS IS
*        ONE OF THE 'TRICK' JOB NAMES.
TRICKJOB EQU   *
         CLI   JACJNAM,C' '       IS THERE A JOB NAME AT ALL
         BE    0(R9)              NO - +0 RETURN IMPLIES NOT 'TRICK'
         SPACE
         L     R15,=V(XFORMTAB)   ADDR OF 'TRICK' JOB TABLE
         USING TFNDSECT,R15
TRIKLOOP EQU   *
         CLC   TFNNAME,JACJNAM    IS THIS A MATCH
         BE    4(R9)              YES - +4 RETURN IMPLIES 'YES'
         TM    TFNFLAG,TFNFLAST   NO - IS THIS LAST ENTRY
         BO    0(R9)              YES - +0 RETURN IMPLIES NOT 'TRICK'
         LA    R15,TFNLEN(R15)    NO - NEXT TABLE ENTRY
         B     TRIKLOOP           CONTINUE SCAN TIL MATCH OR END
         DROP  R15
         EJECT
*        DETERMINE IF THIS USER IS AUTHORIZED TO USE ONE OF THE
*        'TRICK' JOB NAMES WITHOUT BEING RESTRICTED TO ONLY THOSE
*        JOBS AUTHORIZED TO HIS USERID. IF SO, THEN ALLOW OPERATOR
*        PERMISSIONS AND REMOVE THE USERID LIMITATION.
CHKTRICK EQU   *
         BAL   R14,ISITOPER       IS THIS 'OPERATOR' USER
         B     0(R9)              +0 => NO - DO NOT ALLOW 'GLOBAL'
         SPACE
         BAL   R14,KILLUSID       REMOVE USERID RESTRICTION
         SPACE
         LA    R1,ALOWOPER        AND GRANT OPERATOR PERMISSIONS
         BAL   R14,MRGVECT        DONE
         BR    R9                 +0 => YES - ALLOW SESSION
         EJECT
*        CHECK TO SEE IF THE JOBNAME WAS SUPPLIED BY SPECIFYING THE
*        'CURRENT' OPERAND OF IOF. IF SO, THEN THE ACTUAL JOB NAME
*        AND JOB ID WILL HAVE BEEN FILLED IN AND WE SHOULD ALLOW
*        OWNER PERMISSIONS AND REMOVE THE USERID LIMITATION. THE
*        BASIS FOR THIS IS THAT ANY JOB SHOULD BE ALLOWED TO INVOKE
*        IOF TO LOOK AT ITSELF.
CHEKCURR EQU   *
         TM    JACIFLAG,JACICURR  'CURRENT' SPECIFIED
         BZ    4(R9)              NO - +4 => NOT 'CURRENT'
         SPACE
         MVI   SELUIDL,0          YES - REMOVE USERID LIMITATION
         LA    R1,ALOWOWNR        AND ALLOW OWNER PERMISSIONS
         BAL   R14,MRGVECT           DONE
         B     0(R9)              +0 RETURN IMPLIES 'CURRENT' SPECIFIED
         EJECT
*        USER HAS REQUESTED 'ALLJOBS'. SEE IF THIS USER IS AUTHORIZED
*        TO DISPLAY JOBS THAT DO NOT 'BELONG' TO HIM.
CHEKALLJ EQU   *
         BAL   R14,ISITOPER       IS THIS AN 'OPERATOR' USER
         B     0(R9)              +0 => NO - IGNORE THE REQUEST
         SPACE
         B     4(R9)              OK RETURN
         EJECT
*        CHECK TO SEE IF THE USER HAS ENTERED ANY OPERANDS THAT
*        IMPLY THAT THE USERID RESTRICTION SHOULD BE REMOVED.
*        IF SO, THE 'CHEKALLJ' ROUTINE WILL BE CALLED (BY OUR CALLER)
*        TO VERIFY THAT THE USER IS INDEED AUTHORIZED.
NEEDALLJ EQU   *
         CLI   JACIALLJ,C'Y'      ARE ALL JOBS 'FORCED'
         BE    4(R9)              YES - NEED TO REMOVE USERID REQ.
         CLI   SELUIDL,0          USERID ALREADY REMOVED
         BER   R9                 YES - NO NEED TO CHECK FURTHER
         SPACE
         CLC   SELTYPE,=CL8'ALL'  IS THIS 'SIMPLE' IOF SESSION
         BNE   4(R9)              NO - TRY TO REMOVE USERID REQ.
         SPACE
         TM    SELCLASS,X'BF'     INPUT CLASS SPECIFIED
         BNZ   4(R9)              YES - TRY TO REMOVE USERID REQ.
         TM    SELDEST,X'BF'      HOW ABOUT 'DEST'
         BNZ   4(R9)              YES - TRY TO REMOVE USERID REQ.
         TM    SELFROM,X'BF'      HOW ABOUT 'FROM'
         BNZ   4(R9)              YES - TRY TO REMOVE USERID REQ.
         TM    SELTO,X'BF'        HOW ABOUT 'TO'
         BNZ   4(R9)              YES - TRY TO REMOVE USERID REQ.
         TM    SELXEQ,X'BF'       HOW ABOUT 'XEQ'
         BNZ   4(R9)              YES
         TM    SELSELN,X'BF'      HOW ABOUT 'SELECT'
         BNZ   4(R9)              YES
         SPACE
         BR    R9                 SIMPLE SESSION - LEAVE USERID REQ.
         EJECT
*        INSTALLATION EXIT ROUTINE TO COMPLETELY EXAMINE ANY INPUT
*        PARMS FOR THIS SESSION AND FAIL THE SESSION IF NECESSARY.
CHEKPARM EQU   *
         B     4(R9)              ALLOW ALL PARMS AS OK
         EJECT
*
CHEKOWNR EQU   *
         CLI   SELUIDL,0          IS USERID LIMITATION STILL IN EFFECT
         BER   R9                 NO - JUST RETURN
         CLC   PSCBUSER,SELUID    AND IS IT THIS USER
         BNER  R9                 NO - JUST RETURN
         LA    R1,ALOWOWNR        YES - GRANT OWNER PERMISSIONS
         BAL   R14,MRGVECT           DONE
         BR    R9                 RETURN TO CALLER
         EJECT
*        THIS ROUTINE WILL SET THE 'SELGROUP' BYTE TO INDICATE
*        ANY SPECIAL DISPLAY FIELDS THAT SHOULD BE PRESENTED TO THIS
*        USER. EACH BIT IN 'SELGROUP' REPRESENTS A SINGLE GROUP OF
*        DISPLAY FIELDS. IF THE GROUP OPERAND OF A #FIELD MACRO
*        (IN THE FORMJQE, FORMJOE, ETC. ASSEMBLIES) IS SPECIFIED
*        THEN THE CORRESPONDING BIT IN THE SELGROUP BYTE MUST BE SETR
*        IN ORDER FOR THAT FIELD TO APPEAR ON THE DISPLAY.
*
*        AS DISTRIBUTED, IOF ONLY USES ONE SPECIAL GROUP OF FIELDS,
*        AND THAT IS THE SET OF DISPLAY FIELDS FROM A JOB'S JCT CONTROL
*        BLOCK. TO SEE THE JCT FIELDS, THE USER ENTERS THE 'EXTEND'
*        COMMAND ON EITHER THE 'JOB LIST' OR 'OUTPUT GROUP' DISPLAY.
*        ONLY OPERATOR USERS ARE ALLOWED TO SEE THE JCT FIELDS. IF
*        YOU WANT TO CHANGE THAT, JUST CHANGE THE CODE BELOW.
SETFIELD      EQU                *
         TM    JACIFLAG,JACIXTND  DID USER REQUEST EXTEND
         BZ    NOTXTND            NO
         SPACE
         BAL   R14,ISITOPER       IS THIS 'OPERATOR' USER
         B     NOTXTND            +0 => NO - QUIETLY IGNORE THE REQUEST
         SPACE
         MVI   SELGROUP,SELGRP1   YES - SET 'EXTEND' GROUP
NOTXTND  EQU   *
         BR    R9
         EJECT
*        REMOVE THE USERID REQUIREMENT FOR ELEMENTS DISPLAYED DURING
*        THIS TSO SESSION. DO NOT REMOVE REQUIREMENT IF USER ENTERED
*        'MYJOBS'  (OR 'NO' IN ALLJOBS ISPF FIELD) OR IF THE USER
*        EXPLICITLY REQUESTED A USERID.
KILLUSID EQU   *
         CLI   JACIALLJ,C'N'      'MYJOBS' SPECIFIED
         BER   R14                YES - DON'T REMOVE USERID REQ.
         CLI   JACUSIDL,0         NO - DID USER SUPPLY A USERID
         BNER  R14                YES - DON'T REMOVE USERID REQ.
         SPACE
         MVI   SELUIDL,0          KILL USERID REQ. FOR THIS SESSION
         BR    R14
         EJECT
*        THE ROUTINES BELOW ARE THE VALIDATION SUBROUTINES THAT ARE
*        CALLED WHEN AN IOF FUNCTION HAS BEEN REQUESTED BY THE USER
*        BUT THE SPECIFIED FUNCTION HAS NOT YET BEEN AUTHORIZED FOR
*        THE USER. THESE ROUTINES CAN JUST FAIL THE REQUEST OR USE
*        ADDITIONAL INFORMATION TO TRY TO MAKE A MORE REFINED
*        DECISION. ON INPUT TO ALL OF THESE ROUTINES:
*
*        R2   ADDR OF USERID WHO OWNS THIS JOB
*        R9   RETURN REGISTER
*             RETURN TO 0(R9) IMPLIES FAIL THE REQUEST
*             RETURN TO 4(R9) IMPLIES ALLOW THE REQUEST
*
*        ADDITIONAL INPUT VALUES ARE DEFINED IN THE COMMENTS FOR
*        EACH FUNCTION.
*
         SPACE 3
*        VECTOR TABLE FOR INDIVIDUAL VALIDATION ROUTINES
FUNCTABL DS    0F
         DC    A(FAILIT)          0  UNDEFINED FUNCTION
         DC    A(JCANCEL)         1  CANCEL A JOB
         DC    A(JRELEASE)        2  RELEASE HELD DATA SETS FOR JOB
         DC    A(JROUTE)          3  ROUTE A JOB
         DC    A(JSELECT)         4  SELECT A JOB FOR OUTPUT REVIEW
         SPACE
         DC    A(DBROWSE)         5  SELECT A DATA SET FOR BROWSE
         DC    A(DPRINT)          6  PRINT A DATA SET TO SYSOUT
         DC    A(DRELEASE)        7  RELEASE A HELD SYSOUT DATA SET
         DC    A(DCANCEL)         8  CANCEL A HELD SYSOUT DATA SET
         DC    A(DSAVE)           9  SNAP DATA TO EXTERNAL DATA SET
         DC    A(DMODIFY)         10 MODIFY ATTR OF HELD SYSOUT
         DC    A(DDISPLAY)        11 DISPLAY DATA SET ON MENU
         SPACE
         DC    6A(FAILIT)         12-17  UNDEFINED FUNCTIONS
         DC    A(JSET)            18  SET ATTRIBUTES FOR A JOB
         DC    A(JOCAN)           19 CANCEL A JOE
         DC    A(JOSET)           20 SET VALUES FOR A JOE
         DC    4A(FAILIT)         21-24
         SPACE
         DC    A(IHOLD)           25 FCTJHOLD  =>  HOLD A JOB
         DC    A(IRELEASE)        26 FCTJRLSE  =>  RELEASE A JOB
         DC    A(IRESTART)        27 FCTJRSTR  => RESTART JOB
         DC    A(ICOMMAND)        28 JCTJMVSC  => MVS OR JES2 COMMAND
         SPACE
         DC    4A(FAILIT)         29-32  UNDEFINED FUNCTIONS
         EJECT
*        ROUTINES INVOKED BY 'VALIDATE' WHEN THE REQUESTED FUNCTION
*        IS ALLOWED BUT ONE OR MORE OPERANDS (PARMS) SPECIFIED BY
*        THE USER ARE NOT ALLOWED.
         SPACE
FUNCTAB2 DS    0F
         DC    A(FAILIT)          0  INVALID
         DC    A(FAILIT)          1  CANCEL JOB (NO PARMS)
         DC    A(JRELEAS2)        2  RELEASE HELD SYSOUTS FOR JOB
         DC    A(JROUTE2)         3  ROUTE A JOB
         DC    A(FAILIT)          4  SELECT A JOB (NO PARMS)
         SPACE
         DC    A(FAILIT)          5  BROWSE (NO PARMS)
         DC    A(DPRINT2)         6  PRINT DATA SET
         DC    A(DRELEAS2)        7  RELEASE A SYSOUT DATA SET
         DC    A(FAILIT)          8  CANCEL DATA SET (NO PARMS)
         DC    A(DSAVE2)          9  SNAP
         DC    A(DMODIFY2)        10 MODIFY DATA SET
         DC    A(FAILIT)          11 DISPLAY DATA SET ON MENU
         SPACE
         DC    6A(FAILIT)         12-17
         DC    A(JSET2)           18 SET JOB ATTRIBUTES
         DC    A(FAILIT)          19 CANCEL A JOE (NO PARMS)
         DC    A(JOSET2)          20 SET JOE ATTRIBUTES
         DC    4A(FAILIT)         21-24
         SPACE
         DC    A(FAILIT)          25 HOLD A JOB (NO PARMS)
         DC    A(FAILIT)          26 RELEASE A JOB (NO PARMS)
         DC    A(FAILIT)          27 RESTART A JOB
         DC    A(FAILIT)          28 ENTER AN MVS OR JES2 COMMAND
         SPACE
         DC    4A(FAILIT)
         EJECT
*        ROUTINES INVOKED AS A LAST CHANCE FOR INSTALLATION TO
*        FAIL A PARTICULAR FUNCTION EVEN AFTER PERMISSION HAS BEEN
*        GRANTED FOR THE FUNCTION AND ITS OPERANDS.
OKTABL   DS    0F
         DC    A(FAILIT)          0  INVALID FCT
         DC    A(OCANCEL)         1  JOB CANCEL
         DC    A(ORELEASE)        2  JOB HELD SYSOUT RELEASE
         DC    A(OROUTE)          3  JOB ROUTE
         DC    A(OSELECT)         4  JOB SELECT
         SPACE
         DC    A(ODBROWSE)        5  DATA SET BROWSE
         DC    A(ODPRINT)         6  DATA SET PRINT
         DC    A(ODRLSE)          7  DATA SET RELEASE
         DC    A(ODCANCEL)        8  DATA SET CANCEL
         DC    A(ODSAVE)          9  DATA SET SNAP
         DC    A(ODMODIFY)        10 DATA SET MODIFY
         DC    A(ODDSPLAY)        11 DISPLAY DATA SET ON MENU
         SPACE
         DC    6A(FAILIT)         12-17 INVALID
         DC    A(OJSET)           18 JOB ATTR SET
         DC    A(OJOCAN)          19 JOE CANCEL
         DC    A(OJOSET)          20 JOE SET
         DC    4A(FAILIT)         21-24 INVALID
         SPACE
         DC    A(OIHOLD)          25 JOB HOLD
         DC    A(OIRLSE)          26 JOB RLSE
         DC    A(OIRSTRT)         27 JOB RESTART
         DC    A(OICOMAND)        28 MVS/JES2 COMMAND
         DC    4A(FAILIT)         29-32 INVALID
         EJECT
*
*        THE INDIVIDUAL FUNCTION VALIDATION ROUTINES BELOW ARE FOR THOS
*        FUNCTIONS THAT AFFECT AN ENTIRE JOB (CANCEL, ROUTE, ETC.).
*
         SPACE 3
*
*        CANCEL A JOB
*
JCANCEL  EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=ALTER,                              X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         EJECT
*
*        RELEASE ALL HELD SYSOUT DATA SETS FOR A JOB
*
JRELEASE EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME         **
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=UPDATE,                             X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         SPACE
JRELEAS2 EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         EJECT
*
*        CHANGE THE PRINT AND PUNCH ROUTE FOR A JOB
*
JROUTE   EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=UPDATE,                             X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         SPACE
JROUTE2  EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         EJECT
JSELECT  EQU  *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=READ,                               X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         EJECT
JSET     EQU   *
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         SPACE
JSET2    EQU   *
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         EJECT
*
*        THE INDIVIDUAL FUNCTION VALIDATION ROUTINES BELOW ARE FOR THOS
*        FUNCTIONS THAT AFFECT ONLY A SINGLE SYSOUT DATA SET (BROWSE,
*        CANCEL, ETC.). NOTE THAT THESE ROUTINES CAN ONLY BE CALLED IF
*        THE USER HAS BEEN GRANTED PERMISSION TO SELECT THE JOB FOR
*        OUTPUT REVIEW BUT THE SPECIFIC DATA SET FUNCTION HAS NOT
*        BEEN AUTHORIZED BY TURNING ON THE JACJALOW BIT FOR THE
*        FUNCTION.
*
*        JACOPDV POINTS TO THE PDV FOR THE DATA SET. THE PDV CONTAINS
*        ALL THE SYSOUT ATTRIBUTES FOR A DATA SET. IF YOU WANT TO
*        LIMIT ACCESS BY CLASS, FORMS, OR OTHER ATTRIBUTES YOU SHOULD
*        NOT GRANT DATA SET FUNCTIONS (BROWSE, RELEASE, ETC.) IN THE
*        DEFAULT 'ALL' PERMISSIONS GRANTED AT IOFINIT AND JOBINIT ABOVE
*
*        THIS WILL CAUSE THE DATA SET FUNCTION ROUTINES BELOW TO BE
*        CALLED. THEY CAN THEN MAKE THE DETERMINATION OF WHETHER THE
*        SPECIFIC FUNCTION SHOULD BE ALLOWED BASED UPON THE VALUES IN
*        THE PDV FOR THE SPECIFIC DATA SET.
*
DRELEASE EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME         **
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=UPDATE,                      **     X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         SPACE
DRELEAS2 EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         EJECT
*
*        CANCEL A HELD SYSOUT DATA SET
*
*        JACOPDV POINTS TO THE PDV FOR THE DATA SET TO BE CANCELLED.
*
DCANCEL  EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=ALTER,                              X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         EJECT
*
*        MODIFY ATTRIBUTES OF A SYSOUT DATA SET.
*
*        JACOPDV POINTS TO PDV FOR DATA SET TO BE MODIFIED.
*        JACPPDV POINTS TO 'PARM' PDV CONTAINING VALUES SUPPLIED
*           BY THE USER ON THE MODIFY FUNCTION.
*        JACFPDV POINTS TO A BIT MASK INDICATING WHICH PARMS WERE
*           SUPPLIED BY THE USER (AND ARE CONTAINED IN JACPPDV PDV).
*
DMODIFY  EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=UPDATE,                             X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         SPACE
DMODIFY2 EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         EJECT
*
*        THE FOLLOWING DSET FUNCTIONS ARE ALWAYS AUTHORIZED
*        AS THEY REQUIRE SELECTION.  PREVIOUS SELECTION
*        READ AUTHORITY.  THESE FUNCTIONS REQUIRE READ
*        AUTHORITY.  THEREFORE, THESE FUNCTIONS ARE AUTHORIZED
*
*        NOTE, USERS WHO REACH THESE ROUTINES WILL NOT BE
*        GRANTED PERMISSION VECTORS.
*
DBROWSE  EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         SPACE
DPRINT   EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         SPACE
DPRINT2  EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         SPACE
DSAVE    EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         SPACE
DSAVE2   EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         SPACE
DDISPLAY EQU   *
         B     4(R9)              AUTHORIZED (RETURN +4)
         EJECT
*
*        THE INDIVIDUAL FUNCTION VALIDATION ROUTINES BELOW ARE FOR
*        FUNCTIONS REQUESTED AGAINST A SPECIFIC JOB OUTPUT ELEMENT(JOE)
*        THE FOLLOWING PARMS ARE SET:
*
*        JACFPDV   ADDR OF BIT MASK OF OPERANDS SPECIFIED
*        JACPPDV   ADDR OF PARM JOV WITH SPECIFIED PARMS
*        JACOPDV   ADDR OF ORIGINAL JOV
*
         SPACE 3
*
*        CANCEL A JOE
*
JOCAN    EQU   *
         MVC   WRKRACFL(RACFSKLN),RACFSKEL   SET PATTERN FOR MACRO
         LA    R4,JACJOBN         POINT TO THE JOB NAME
         LA    R5,RACWK           DEFINE WORK AREA ADDRESS
         RACROUTE REQUEST=AUTH,WORKA=(R5),ENTITY=((R4)),               X
               CLASS=RACLASS2,ATTR=ALTER,                              X
               MF=(E,WRKRACFL)
         LTR   R15,R15            CHECK IF AUTHORIZED TO ACCESS
         BZ    4(R9)              AUTHORIZED (RETURN +4)
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         EJECT
*
*        SET VALUES FOR A JOE
*
JOSET    EQU   *
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
*
*        SET VALUES FOR A JOE (OPERAND)
*
JOSET2   EQU   *
         BR    R9                 NOT AUTHORIZED, (RETURN +0)
         EJECT
*
*        THE INDIVIDUAL FUNCTION VALIDATION ROUTINES BELOW ARE FOR
*        THOSE INSTALLATION DEFINED FUNCTIONS THAT ARE DEFINED FOR
*        THE IOF JOB LIST PANEL.
*
*
*        ISSUE THE JES2 $HJ COMMAND TO HOLD A JOB.
*        THIS IS AN EXAMPLE OF AN INSTALLATION DEFINED COMMAND.
*        SEE JESCTL ASSEMBLY FOR INFORMATION ON ADDING YOUR OWN
*        INSTALLATION DEFINED COMMANDS.
*
IHOLD    EQU   *
         BR    R9                 FAIL THE REQUEST
         SPACE
*
*        ISSUE THE JES2 $AJ COMMAND TO RELEASE A JOB FROM HOLD
*        THIS IS ALSO AN EXAMPLE OF AN INSTALLATION DEFINED COMMAND.
*
IRELEASE EQU   *
         BR    R9                 FAIL THE REQUEST
         SPACE
*
*        ISSUE THE JES2 $EJ COMMAND TO 'RESTART' A JOB
*
IRESTART EQU   *
         BR    R9
         SPACE
*
*        ISSUE AN MVS OR A JES2 COMMAND. THE FIELD JACOPDV CONTAINS THE
*        ADDR OF THE SVC 34 COMMAND BUFFER, INCLUDING PREFIX.
*
ICOMMAND EQU   *
         BR    R9                 FAIL THE REQUEST
         EJECT
*        THE INDIVIDUAL ROUTINES BELOW ARE CALLED AFTER BOTH THE
*        FUNCTION AND USER-SUPPLIED OPERANDS HAVE BEEN OK'ED. THIS
*        GIVES THE INSTALLATION A CHANCE TO EASILY INSTALL GLOBAL
*        EXCEPTION RULES (LIKE NO ACCESS TO ANY SYSOUT DATA SET OF
*        CLASS X).
*
*        THE JAC PARM VALUES ARE THE SAME HERE AS FOR THE INDIVIDUAL
*        FUNCTION AND OPERAND VALIDATION ROUTINES ABOVE.
*
*
         SPACE
*        CANCEL A JOB
OCANCEL  EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        RELEASE HELD SYSOUTS FOR A JOB
ORELEASE EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        ROUTE A JOB
OROUTE   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        SELECT A JOB FOR OUTPUT REVIEW
OSELECT  EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        SET ATTRIBUTES FOR A JOB
OJSET    EQU   *
         TM    PSCBATR1,PSCBCTRL  WELL, IS IT 'OPERATOR' USER
         BZR   R9                 NO - RETURN TO +0
         B     4(R9)             YES - RETURN TO +4
         SPACE
*        HOLD A JOB
OIHOLD   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        RELEASE A JOB
OIRLSE   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        RESTART A JOB AFTER EXECUTION COMPLETES
OIRSTRT  EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        ISSUE JES2 OR MVS COMMANDS
OICOMAND EQU   *
         TM    PSCBATR1,PSCBCTRL  WELL, IS IT 'OPERATOR' USER
         BZR   R9                 NO - RETURN TO +0
         B     4(R9)             YES - RETURN TO +4
         EJECT
*        FINAL OK ROUTINES FOR DATA SET FUNCTIONS
         SPACE
*        BROWSE A DATA SET
ODBROWSE EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        PRINT A DATA SET
ODPRINT  EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        RELEASE HELD DATA SET
ODRLSE   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        CANCEL HELD SYSOUT
ODCANCEL EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        SNAP A DATA SET
ODSAVE   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        MODIFY HELD SYSOUT
ODMODIFY EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        DISPLAY DATA SET ON MENU
ODDSPLAY EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         EJECT
*        FINAL VALIDATION CHANCE FOR JOE FUNCTIONS
         SPACE
*        CANCEL A JOE
OJOCAN   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         SPACE
*        MODIFY ATTRIBUTES OF A JOE
OJOSET   EQU   *
         B     4(R9)              FUNCTION AND OPERANDS ARE STILL OK
         EJECT
*        THE TABLES BELOW CONTROL THE PERMISSIONS ALLOWED FOR VARIOUS
*        TYPES OF IOF ACCESS. THE COMMENTS WITH EACH TABLE DESCRIBE
*        THE TYPE OF ACCESS TO WHICH THE TABLE APPLIES.
         SPACE 3
*        THE TABLE BELOW SPECIFIES THE PERMISSIONS ALLOWED TO THE
*        OWNER OF A JOB. A USER OWNS A JOB IF IT APPEARS ON HIS JOB
*        LIST MENU WHEN HE HAS ENTERED IOF WITH NO OPERANDS OR IF
*        THE USER IS ALLOWED TO USE THE USERID OPERAND WITH ANOTHER
*        USER'S JOBS, OR IF THE USER IS ALLOWED ACCESS TO ALL THE
*        JOBS ROUTED TO A SPECIFIC DESTINATION.
*
ALOWOWNR DS    0F
         DC    A(OWNRFUNC)        ADDR OF FUNCTIONS ALLOWED VECTOR
         DC    A(OWNRJSET)        ADDR OF JOB SET OPERANDS ALLOWED
         DC    A(OWNROSET)        ADDR OF JOE SET OPERANDS ALLOWED
         DC    A(OWNRDSET)        ADDR OF DATA SET OPERANDS ALLOWED
         SPACE
*        VECTOR OF FUNCTIONS ALLOWED
OWNRFUNC DS    0C
         DC    AL1(FCTCANC)       CANCEL A JOB
         DC    AL1(FCTRLSE)       RELEASE HELD SYSOUTS FOR A JOB
         DC    AL1(FCTROUTE)      ROUTE A JOB
         DC    AL1(FCTSEL)        SELECT A JOB FOR REVIEW
*        DC    AL1(FCTSET)        SET ATTRIBUTES FOR A JOB
         DC    AL1(FCTDBRWS)      BROWSE A DATA SET
         DC    AL1(FCTDPRNT)      SNAP OR PRINT A DATA SET TO SYSOUT
         DC    AL1(FCTDRLSE)      RELEASE A HELD SYSOUT
         DC    AL1(FCTDCANC)      CANCEL A HELD SYSOUT
         DC    AL1(FCTDSAVE)      SNAP SYSOUT DATA SET TO NON-SYSOUT
         DC    AL1(FCTDMODF)      MODIFY ATTR OF HELD SYSOUT
         DC    AL1(FCTDDISP)      DISPLAY DATA SET ON MENU
         DC    AL1(FCTJOCAN)      CANCEL A JOE
*        DC    AL1(FCTJOSET)      SET ATTRIBUTES FOR A JOE
         DC    AL1(255)
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR JOB MODIFICATION FUNCTIONS
OWNRJSET DS    0C
*        DC    AL1($JPDESTI)      XEQ DEST
*        DC    AL1($JPDESTO)      OUTPUT DEST
*        DC    AL1($JPSYIDS)      SYSID(S)
*        DC    AL1($JPIND)        INDEPENDENT MODE
*        DC    AL1($JPPRTY)       PRIORITY
*        DC    AL1($JPCLASI)      INPUT CLASS
*        DC    AL1($JPCLASO)      NEW OUTPUT SYSOUT CLASS
*        DC    AL1($JPOCLAS)      OLD OUTPUT CLASSES
         DC    X'FF'
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR SETTING JOE ATTRIBUTES
OWNROSET DS    0C
*        DC    AL1($JOBURST)      BURST
*        DC    AL1($JOCLASS)      CLASS
*        DC    AL1($JODEST)       DEST
*        DC    AL1($JOFCB)        FCB
*        DC    AL1($JOFLASH)      FLASH
*        DC    AL1($JOFORM)       FORMS
*        DC    AL1($JOPRIO)       PRIORITY
*        DC    AL1($JOPRMOD)      PRMODE
*        DC    AL1($JOSEL)        SELECT
*        DC    AL1($JOUCS)        UCS
*        DC    AL1($JOWTRID)      WRITER ID
         DC    X'FF'
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR SYSOUT DATA SET FUNCTIONS
OWNRDSET DS    0C
         DC    AL1($DFDEST)       DEST
         DC    AL1($DFCLASS)      CLASS
         DC    AL1($DFCOPYS)      COPYS
         DC    AL1($DFUCS)        UCS
         DC    AL1($DFFORMS)      FORMS
         DC    AL1($DFFCB)        FCB
         DC    AL1($DF2BRST)      BURST
         DC    AL1($DFCHARS)      CHARS
         DC    AL1($DFFLSHC)      FLASHC
         DC    AL1($DFFLASH)      FLASH
         DC    AL1($DFMODF)       MODIFY
         DC    AL1($DFCOPYG)      COPYG
         DC    AL1($DFINDEX)      INDEX
         DC    AL1($DFLNDEX)      LINDEX
         DC    AL1($DFCPTN)       Z
         DC    AL1($DFCKPTP)      CKPTPGS
         DC    AL1($DFCKPTL)      CKPTLNS
         DC    AL1($DFMODFT)      MODTRC
         DC    AL1($DFWTRID)      WRITER ID
         DC    AL1($DFLINCT)      LINECT
         DC    AL1($DFUSER)       SECONDARY DEST
         DC    AL1($DFPRMOD)      PRMODE
         DC    X'FF'
         EJECT
*        THE TABLE BELOW DEFINES THE PERMISSIONS GRANTED FOR ALL JOBS
*        TO A USER WHO HAS 'OPERATOR' AUTHORITY.
ALOWOPER DS    0F
         DC    A(OPERFUNC)        ADDR OF FUNCTIONS ALLOWED BIT MASK
         DC    A(OPERJSET)        ADDR OF JOB SET OPERANDS ALLOWED MASK
         DC    A(OPEROSET)        ADDR OF JOE SET OPERANDS ALLOWED MASK
         DC    A(OPERDSET)        ADDR OF DATA SET FUNCTIONS OPERANDS
         SPACE
*        VECTOR OF FUNCTIONS ALLOWED
OPERFUNC DS    0C
         DC    AL1(FCTCANC)       CANCEL A JOB
         DC    AL1(FCTRLSE)       RELEASE HELD SYSOUTS FOR A JOB
         DC    AL1(FCTROUTE)      ROUTE A JOB
         DC    AL1(FCTSEL)        SELECT A JOB FOR REVIEW
         DC    AL1(FCTSET)        SET ATTRIBUTES FOR A JOB
         DC    AL1(FCTDBRWS)      BROWSE A DATA SET
         DC    AL1(FCTDPRNT)      SNAP OR PRINT A DATA SET TO SYSOUT
         DC    AL1(FCTDRLSE)      RELEASE A HELD SYSOUT
         DC    AL1(FCTDCANC)      CANCEL A HELD SYSOUT
         DC    AL1(FCTDSAVE)      SNAP SYSOUT DATA SET TO NON-SYSOUT
         DC    AL1(FCTDMODF)      MODIFY ATTR OF HELD SYSOUT
         DC    AL1(FCTDDISP)      DISPLAY DATA SET ON MENU
         DC    AL1(FCTJOCAN)      CANCEL A JOE
         DC    AL1(FCTJOSET)      SET ATTRIBUTES FOR A JOE
         DC    AL1(FCTJHOLD)      HOLD A JOB
         DC    AL1(FCTJRLSE)      RELEASE A JOB
         DC    AL1(FCTJRSTR)      RESTART A JOB
         DC    AL1(FCTJMVSC)      ENTER AN MVS OR JES2 COMMAND
         DC    AL1(255)
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR JOB MODIFICATION FUNCTIONS
OPERJSET DS    0C
         DC    AL1($JPDESTI)      XEQ DEST
         DC    AL1($JPDESTO)      OUTPUT DEST
         DC    AL1($JPSYIDS)      SYSID(S)
         DC    AL1($JPIND)        INDEPENDENT MODE
         DC    AL1($JPPRTY)       PRIORITY
         DC    AL1($JPCLASI)      INPUT CLASS
         DC    AL1($JPCLASO)      NEW OUTPUT SYSOUT CLASS
         DC    AL1($JPOCLAS)      OLD OUTPUT CLASSES
         DC    X'FF'
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR SETTING JOE ATTRIBUTES
OPEROSET DS    0C
         DC    AL1($JOBURST)      BURST
         DC    AL1($JOCLASS)      CLASS
         DC    AL1($JODEST)       DEST
         DC    AL1($JOFCB)        FCB
         DC    AL1($JOFLASH)      FLASH
         DC    AL1($JOFORM)       FORMS
         DC    AL1($JOPRIO)       PRIORITY
         DC    AL1($JOPRMOD)      PRMODE
         DC    AL1($JOSEL)        SELECT
         DC    AL1($JOUCS)        UCS
         DC    AL1($JOWTRID)      WRITER ID
         DC    X'FF'
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR SYSOUT DATA SET FUNCTIONS
OPERDSET DS    0C
         DC    AL1($DFDEST)       DEST
         DC    AL1($DFCLASS)      CLASS
         DC    AL1($DFCOPYS)      COPYS
         DC    AL1($DFUCS)        UCS
         DC    AL1($DFFORMS)      FORMS
         DC    AL1($DFFCB)        FCB
         DC    AL1($DF2BRST)      BURST
         DC    AL1($DFCHARS)      CHARS
         DC    AL1($DFFLSHC)      FLASHC
         DC    AL1($DFFLASH)      FLASH
         DC    AL1($DFMODF)       MODIFY
         DC    AL1($DFCOPYG)      COPYG
         DC    AL1($DFINDEX)      INDEX
         DC    AL1($DFLNDEX)      LINDEX
         DC    AL1($DFCPTN)       Z
         DC    AL1($DFCKPTP)      CKPTPGS
         DC    AL1($DFCKPTL)      CKPTLNS
         DC    AL1($DFMODFT)      MODTRC
         DC    AL1($DFWTRID)      WRITER ID
         DC    AL1($DFLINCT)      LINECT
         DC    AL1($DFUSER)       SECONDARY DEST
         DC    AL1($DFPRMOD)      PRMODE
         DC    X'FF'
         SPACE 3
*        THE TABLE BELOW DEFINES THE PERMISSIONS GRANTED FOR ALL
*        JOBS ROUTED TO A SPECIFIC DESTINATION TO A USER WHO IS
*        AUTHORIZED TO USE THE DEST OPERAND OF IOF FOR THAT DEST.
*
ALOWDEST DS    0F
         DC    A(DESTFUNC)        ADDR OF FUNCTIONS ALLOWED VECTOR
         DC    A(DESTJSET)        ADDR OF JOB SET OPERANDS ALLOWED
         DC    A(DESTOSET)        ADDR OF JOE SET OPERANDS ALLOWED
         DC    A(DESTDSET)        ADDR OF DATA SET OPERANDS ALLOWED
         SPACE
*        VECTOR OF FUNCTIONS ALLOWED
DESTFUNC DS    0C
*        DC    AL1(FCTCANC)       CANCEL A JOB
*        DC    AL1(FCTRLSE)       RELEASE HELD SYSOUTS FOR A JOB
*        DC    AL1(FCTROUTE)      ROUTE A JOB
         DC    AL1(FCTSEL)        SELECT A JOB FOR REVIEW
*        DC    AL1(FCTSET)        SET ATTRIBUTES FOR A JOB
         DC    AL1(FCTDBRWS)      BROWSE A DATA SET
         DC    AL1(FCTDPRNT)      SNAP OR PRINT A DATA SET TO SYSOUT
*        DC    AL1(FCTDRLSE)      RELEASE A HELD SYSOUT
*        DC    AL1(FCTDCANC)      CANCEL A HELD SYSOUT
         DC    AL1(FCTDSAVE)      SNAP SYSOUT DATA SET TO NON-SYSOUT
*        DC    AL1(FCTDMODF)      MODIFY ATTR OF HELD SYSOUT
         DC    AL1(FCTDDISP)      DISPLAY DATA SET ON MENU
         DC    AL1(FCTJOCAN)      CANCEL A JOE
         DC    AL1(FCTJOSET)      SET ATTRIBUTES FOR A JOE
         DC    AL1(255)
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR JOB MODIFICATION FUNCTIONS
DESTJSET DS    0C
*        DC    AL1($JPDESTI)      XEQ DEST
*        DC    AL1($JPDESTO)      OUTPUT DEST
*        DC    AL1($JPSYIDS)      SYSID(S)
*        DC    AL1($JPIND)        INDEPENDENT MODE
*        DC    AL1($JPPRTY)       PRIORITY
*        DC    AL1($JPCLASI)      INPUT CLASS
*        DC    AL1($JPCLASO)      NEW OUTPUT SYSOUT CLASS
*        DC    AL1($JPOCLAS)      OLD OUTPUT CLASSES
         DC    X'FF'
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR SETTING JOE ATTRIBUTES
DESTOSET DS    0C
         DC    AL1($JOBURST)      BURST
         DC    AL1($JOCLASS)      CLASS
         DC    AL1($JODEST)       DEST
         DC    AL1($JOFCB)        FCB
         DC    AL1($JOFLASH)      FLASH
         DC    AL1($JOFORM)       FORMS
         DC    AL1($JOPRIO)       PRIORITY
         DC    AL1($JOPRMOD)      PRMODE
         DC    AL1($JOSEL)        SELECT
         DC    AL1($JOUCS)        UCS
         DC    AL1($JOWTRID)      WRITER ID
         DC    X'FF'
         SPACE
*        VECTOR OF OPERANDS ALLOWED FOR SYSOUT DATA SET FUNCTIONS
DESTDSET DS    0C
*        DC    AL1($DFDEST)       DEST
*        DC    AL1($DFCLASS)      CLASS
*        DC    AL1($DFCOPYS)      COPYS
*        DC    AL1($DFUCS)        UCS
*        DC    AL1($DFFORMS)      FORMS
*        DC    AL1($DFFCB)        FCB
*        DC    AL1($DF2BRST)      BURST
*        DC    AL1($DFCHARS)      CHARS
*        DC    AL1($DFFLSHC)      FLASHC
*        DC    AL1($DFFLASH)      FLASH
*        DC    AL1($DFMODF)       MODIFY
*        DC    AL1($DFCOPYG)      COPYG
*        DC    AL1($DFINDEX)      INDEX
*        DC    AL1($DFLNDEX)      LINDEX
*        DC    AL1($DFCPTN)       Z
*        DC    AL1($DFCKPTP)      CKPTPGS
*        DC    AL1($DFCKPTL)      CKPTLNS
*        DC    AL1($DFMODFT)      MODTRC
*        DC    AL1($DFWTRID)      WRITER ID
*        DC    AL1($DFLINCT)      LINECT
*        DC    AL1($DFUSER)       SECONDARY DEST
*        DC    AL1($DFPRMOD)      PRMODE
         DC    X'FF'
         EJECT
*        TABLE THAT MAPS AN IOF FUNCTION INDEX INTO AN OFFSET FROM
*        JACJALOW AT WHICH THE BIT MASK IS STORED INDICATING WHICH
*        OPERANDS ARE ALLOWED FOR THE FUNCTION.
FUNCMAP  DS    0C
         DC    AL1(0)             CANCEL (NO PARMS)
         DC    AL1(JACJSET-JACJALOW)   RELEASE HELD SYSOUTS FOR A JOB
         DC    AL1(JACJSET-JACJALOW)   ROUTE A JOB
         DC    AL1(0)             SELECT (NO PARMS)
         SPACE
         DC    AL1(0)             BROWSE (NO PARMS)
         DC    AL1(JACDSET-JACJALOW)   PRINT A DATA SET
         DC    AL1(JACDSET-JACJALOW)   RELEASE A HELD SYSOUT
         DC    AL1(0)             CANCEL A HELD SYSOUT (NO PARMS)
         DC    AL1(0)                  SNAP
         DC    AL1(JACDSET-JACJALOW)   MODIFY A SYSOUT DATA SET
         DC    AL1(0)             DISPLAY DATA SET ON MENU
         SPACE
         DC    6AL1(0)
         DC    AL1(JACJSET-JACJALOW)   SET JOB ATTRIBUTES
         DC    AL1(0)             CANCEL A JOE
         DC    AL1(JACOSET-JACJALOW)   SET JOE ATTRIBUTES
         SPACE
         DC    4AL1(0)
         SPACE
         DC    AL1(0)             HOLD JOB (NO PARMS)
         DC    AL1(0)             RELEASE JOB (NO PARMS)
         DC    AL1(0)             RESTART JOB (NO PARMS)
         DC    AL1(0)             MVS (OR JES2) CMND (NO PARMS)
         SPACE
         DC    4AL1(0)            **** RESERVED ****
         EJECT
*        THE DSECT BELOW IS JUST AN EXTENSION OF THE WRKDSECT DSECT
*        DEFINED IN THE BODY OF THE JOBACESS SOURCE MODULE. ANY
*        VARIABLES THAT YOU ADD HERE WILL JUST BE APPENDED TO THE
*        END OF THE WRKDSECT DSECT.
*
*
*        CONSTANTS AND SKELETONS NEEDED
*
RACLASS1 DC    XL1'07'
         DC    CL7'$DESTID'
RACLASS2 DC    XL1'08'
         DC    CL8'$JOBNAME'
RACFSKEL RACROUTE REQUEST=AUTH,ATTR=READ,                              X
               MF=L
RACFSKLN EQU   *-RACFSKEL          LENGTH OF SKELETON RACFPATT
*
*        THE DSECT BELOW IS JUST AN EXTENSION OF THE WRKDSECT DSECT
*        DEFINED IN THE BODY OF THE JOBACESS SOURCE MODULE. ANY
*        VARIABLES THAT YOU ADD HERE WILL JUST BE APPENDED TO THE
*        END OF THE WRKDSECT DSECT.
*
WRKDSECT DSECT
*        JUST ADD YOUR WORK AREAS RIGHT HERE
RACWK    DS    CL512
WRKRACFL DS    0F,CL(RACFSKLN)
RACUSID  DS    0F
         DS    CL8         8 CHARACTER USERID FIELD FOR RACF
RACDEST  DS    0F
         DS    CL13        SMFID+'.'+JACDEST
WRKSIZE  EQU   *-WRKDSECT
         EJECT
*
*        THE DSECT BELOW IS JUST AN EXTENSION OF THE JWKDSECT DSECT
*        DEFINED IN THE BODY OF THE JOBACESS SOURCE MODULE. ANY
*        VARIABLES THAT YOU ADD HERE WILL JUST BE APPENDED TO THE
*        END OF THE JWKDSECT DSECT. THIS WORK AREA IS USED TO SAVE
*        JCT DATA FOR EACH JOB AT 'JOBINIT' SO THAT IT WILL BE
*        AVAILABLE AT 'VALIDATE'.
*
JWKDSECT DSECT
*        JUST ADD YOUR VARIABLE DEFINITIONS RIGHT HERE
JWKSIZE  EQU   *-JWKDSECT
         EJECT
*        IF YOU NEED TO SPECIFY ANY ADDITIONAL DSECTS FOR WORK AREAS
*        YOU CAN JUST DEFINE THEM RIGHT HERE.
         CVT   DSECT=YES           MAP THE CVT
         IEESMCA ,                 MAP THE SMCA
