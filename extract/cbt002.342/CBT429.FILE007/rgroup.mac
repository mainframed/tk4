RGROUP   TITLE 'CHANGE CURRENT RACF CONNECT GROUP'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  RGROUP    WALT FARRELL, RAINIER BANK, 11/10/78                     *
*                                                                     *
*  PURPOSE:  TO CHANGE THE RACF GROUP TO WHICH A RACF TSO-USER OR JOB *
*            IS CURRENTLY CONNECTED.                                  *
*                                                                     *
*  INPUT:    (1) A GROUP NAME, WHICH WILL BECOME THE NEW CURRENT      *
*                GROUP NAME IF THE USER IS RACF AUTHORIZED TO IT.     *
*             OR                                                      *
*            (2) NO PARAMETER, IN WHICH CASE THE NAME OF THE CURRENT  *
*                GROUP WILL BE LISTED.                                *
*  NOTE:     THIS PROGRAM MAY BE RUN UNDER TSO OR AS A BACKGROUND JOB.*
*            IT MUST BE APF AUTHORIZED, WHICH WILL LIMIT THE WAYS IT  *
*            CAN BE EXECUTED UNDER TSO.                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  MODIFICATIONS:                                                     *
*            (1) AFTER SUCCESSFULLY CHANGING THE CURRENT GROUP,       *
*                PROPAGATE THE SETTING OF THE ACEE ADSP FLAG INTO THE *
*                JSCB, WHERE THE SYSTEM ACTUALLY CHECKS IT. THIS WILL *
*                BYPASS AN IBM DESIGN FLAW.                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RGROUP   CSECT
         GBLA  &NUMINS                  MAXIMUM NUMBER OF INSERTS
&NUMINS  SETA  2                        FOR IKJEFF02
         SPACE
*                                       REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
BR       EQU   12
CCR      EQU   13
LR       EQU   14
R14      EQU   14
EPR      EQU   15
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*        INITIALIZATION                                               *
*                                                                     *
***********************************************************************
         SPACE
         STM   LR,BR,12(CCR)       SAVE REGS AND LINK SAVE AREAS
         LR    BR,EPR
         USING RGROUP,BR           #####
         LR    R11,R1              SAVE PARM ADDRESS
         GETMAIN R,LV=LWORKA
         USING WORKA,R1            #####
         ST    CCR,WSAVE+4
         ST    R1,8(,CCR)
         LR    CCR,R1
         DROP  R1                  #####
         USING WORKA,CCR           #####
         ST    R11,WCPPLP          SAVE POSSIBLE CPPL ADDRESS
         MVI   WFLAGS,0            CLEAR THE FLAG BYTE
         XC    WRETCDE,WRETCDE     SET RETURN CODE TO ZERO
         XC    WECB,WECB           CLEAR PARSE ECB
         MVC   WRACINIT,RACINIT    INIT LIST FORM OF RACINIT
         MVC   WEXTRACT,EXTRACT    INIT LIST FORM OF EXTRACT
         EJECT
***********************************************************************
*                                                                     *
*        VERIFY RACF ACTIVE AND USER DEFINED TO RACF                  *
*                                                                     *
***********************************************************************
         SPACE
         L     R2,X'10'            GET CVT
         USING CVT,R2              #####
         RACSTAT ,                 TEST FOR RACF ACTIVE
         LTR   R15,R15             ACTIVE?
         BNZ   RGNORACF            MESSAGEIF NOT
         L     R3,CVTTCBP          GET ASCB ADDR
         L     R3,12(,R3)
         USING ASCB,R3             #####
         L     R3,ASCBASXB         GET ASXB ADDRESS
         USING ASXB,R3             #####
         L     R3,ASXBSENV         GET ACEE ADDRESS
         LA    R3,0(,R3)
         LTR   R3,R3               ACEE ADDRESS THERE?
         BZ    RGNOUSER            ISSUE MSG IF NOT - NOT RACF USER
         USING ACEE,R3             #####
         CLC   ACEEACEE,CACEE      ACEE VALID?
         BNE   RGACERR             MSG IF NOT
         TM    ACEEFLG1,ACEERACF   RACF DEFINED USER?
         BZ    RGNOUSER            MSG IF NOT
         ST    R3,WACEEP           SAVE ACEE ADDRESS
         DROP  R2,R3               #####
         EJECT
***********************************************************************
*                                                                     *
*        CHECK MODE OF OPERATION (CP OR CALLED)                       *
*                                                                     *
***********************************************************************
         SPACE
         EXTRACT WAPSCB,'S',       GET PSCB ADDRESS                    X
               FIELDS=(PSB),                                           X
               MF=(E,WEXTRACT)
         L     R2,WAPSCB           ENSURE HIGH BYTE CLEAR
         LA    R2,0(,R2)
         ST    R2,WAPSCB
         TM    0(R11),X'80'        ONLY ONE PARM IN PARMLIST?
         BZ    RG010               NO, ASSUME CP FOR NOW
         NI    WFLAGS,X'FF'-WFCP   YES, NOT A CP
         B     RG020               GO CHECK AUTHORIZATION
RG010    EQU   *
         USING CPPL,R11            #####
         L     R2,CPPLPSCB         PICK UP PSCB ADDR FROM CPPL
         LA    R2,0(,R2)           CLEAR HIGH BYTE
         C     R2,WAPSCB           VERIFY PSCB CORRECT
         BNE   RGERR2              ERROR IF NOT CORRECT PSCB ADDRESS
         OI    WFLAGS,WFCP         SHOW WE ARE A CP
         DROP  R11                 #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* GET GROUP NAME FROM CALL COMMAND                                    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RG020    EQU   *
         TM    WFLAGS,WFCP         RUNNING AS A CP?
         BO    RG030               YES, GO PARSE COMMAND
*                                  ELSE USE PARM FROM CALL COMMAND
         L     R1,0(,R11)          PICK UP THE PARM
         LH    R2,0(,R1)           GET THE PARM LENGTH
         LTR   R2,R2               CHECK FOR VALID PARM LENGTH
         BZ    RG500               IF ZERO, LIST CURRENT GROUP NAME
         BM    RGERR4              IF MINUS, ERROR
         C     R2,=F'8'            IF GREATER THAN 8 THEN ERROR
         BH    RGERR4
         STC   R2,WGROUPL          SAVE LENGTH OF NAME
         BCTR  R2,0                DECREMENT FOR EXECUTE
         MVC   WGROUPN(0),2(R1)    **EXECUTED**
         EX    R2,*-6              SAVE THE GROUP NAME
         B     RG100               CONTINUE PROCESSING
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PARSE COMMAND TO GET GROUP NAME                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RG030    EQU   *
         LA    R2,WPPL             POINT TO PPL IN WORKAREA
         USING PPL,R2              #####
         L     R3,WCPPLP           POINT TO CPPL
         USING CPPL,R3             #####
         MVC   PPLUPT,CPPLUPT      SET UP PPL
         MVC   PPLECT,CPPLECT
         LA    R1,WECB
         ST    R1,PPLECB
         L     R1,APCL
         ST    R1,PPLPCL
         LA    R1,WANS
         ST    R1,PPLANS
         MVC   PPLCBUF,CPPLCBUF
         XC    PPLUWA,PPLUWA
         DROP  R2,R3               #####
         CALLTSSR EP=IKJPARS,      PARSE THE COMMAND                   X
               MF=(E,WPPL)
         CLC   WANS,=X'FF000000'   PARSE OK?
         BE    RGERR5              ERROR IF NOT
         L     R1,WANS             POINT TO PDL
         USING IKJPARMD,R1         #####
         TM    PGRP+6,X'80'        PARAMETER PRESENT?
         BZ    RG500               GO LIST CURRENT GROUP NAME IF NOT
         L     R2,PGRP             POINT TO GROUP NAME
         LH    R3,PGRP+4           GET LENGTH
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PARSE COMMAND TO GET GROUP NAME (CONTINUED)                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         STC   R3,WGROUPL          SAVE LENGTH OF GROUP NAME
         BCTR  R3,0                DECREMENT FOR EXECUTE
         MVC   WGROUPN(0),0(R2)    **EXECUTED**
         EX    R3,*-6              MOVE IN GROUP NAME
         IKJRLSA (1)               FREE PDL STORAGE
         DROP  R1                  #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* CHANGE CURRENT CONNECT GROUP                                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RG100    EQU   *
         MVC   WINSGRPL,WGROUPL         SET UP INSERTS FOR
         LA    R1,WGROUPN               POSSIBLE ERROR MESSAGE
         STCM  R1,7,WINSGRPA
         LA    R1,X'84'
         STC   R1,WINSGR2L
         LA    R1,WSAVR15
         STCM  R1,7,WINSGR2A
         LA    R1,2
         ST    R1,WINSGRPC
         RACINIT GROUP=WGROUP,ENVIR=CHANGE,MF=(E,WRACINIT)
         LTR   R15,R15                  SUCCESSFUL?
         BZ    RG600                    YES - GO PROPAGATE ADSP TO GET
*                                             AROUND IBM BUG
         ST    R15,WSAVR15              ELSE SAVE FOR ERROR MSG AND
         C     R15,=XL4'14'             CHECK ERROR CODE
         BE    RGNOGRP                  BIF NOT DEFINED TO GROUP
         C     R15,=XL4'18'
         BE    RGFEXIT                  BIF FAILED BY INST. EXIT
         C     R15,=XL4'24'
         BE    RGGREV                   BIF USER REVOKED IN GROUP
         C     R15,=XL4'30'
         BE    RGNOTERM                 BIF TERMINAL NOT ALLOWED
         B     RGRACERR
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* LIST CURRENT CONNECT GROUP                                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RG500    EQU   *
         L     R1,WACEEP                ADDRESS ACEE
         USING ACEE,R1                  #####
         MVC   WINSGRPL,ACEEGRPL        SET UP INSERTS
         MVC   WGROUPN,ACEEGRPN
         DROP  R1                       #####
         LA    R1,WGROUPN
         STCM  R1,7,WINSGRPA
         LA    R1,1
         ST    R1,WINSGRPC
         LA    R2,WINSGRP               ISSUE MESSAGE GIVING CURRENT
         LA    R3,RGM02                 GROUP
         BAL   LR,RGEFF02
         B     RG900
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROPAGATE ADSP FROM ACEE TO JSCB TO GET AROUND IBM DESIGN FLAW      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RG600    EQU   *
         L     R1,CVTPTR                GET JSCB ADDRESS
         USING CVT,R1                   #####
         L     R1,CVTTCBP
         L     R1,4(,R1)
         USING TCB,R1                   #####
         L     R2,TCBJSCB
         USING IEZJSCB,R2               #####
         DROP  R1                       #####
         L     R3,WACEEP                GET ACEE ADDRESS
         USING ACEE,R3                  #####
         MODESET KEY=ZERO               GET UPDATE ACCESS TO JSCB
         NI    JSCBFBYT,X'FF'-JSCBADSP  TURN OFF ADSP IN JSCB
         TM    ACEEFLG1,ACEEADSP        DOES USER NOW HAVE ADSP?
         BZ    RG650                    /NO  - LEAVE JSCBADSP OFF
         OI    JSCBFBYT,JSCBADSP        /YES - TURN JSCBADSP ON
RG650    MODESET KEY=NZERO              BACK TO OUR NORMAL KEY
         B     RG900
         DROP  R2,R3                    #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* CLEANUP AND LEAVE                                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RG900    EQU   *
RG999    EQU   *
         LR    R1,CCR                   GET ADDR/LENGTH OF
         LA    R0,LWORKA                WORKING STORAGE
         L     CCR,4(,CCR)              FIND LAST SAVE AREA
         L     R2,WRETCDE               SAVE RETURN CODE
         FREEMAIN R,LV=(0),A=(1)        FREE WORKING STORAGE
         LR    R15,R2                   GET RETURN CODE
         RETURN (14,12),RC=(15)         RESTORE REGS AND RETURN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* ERROR HANDLING                                                      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
*
* RACF NOT ACTIVE
*
RGNORACF SR    R2,R2                    NO INSERT LIST
         LA    R3,RGM03                 ISSUE MESSAGE 3
         BAL   LR,RGEFF02
         B     RGRET4                   RC=4
*
* USER NOT DEFINED TO RACF
*
RGNOUSER SR    R2,R2                    NO INSERT LIST
         LA    R3,RGM04                 ISSUE MESSAGE 4
         BAL   LR,RGEFF02
         B     RGRET4                   RC=4
*
* INVALID ACEE
*
RGACERR  LA    R2,INSACEE               INSERT = 'ACEE'
         LA    R3,RGM05                 ISSUE MESSAGE 5
         BAL   LR,RGEFF02
         B     RGRET16                  RC=16
*
* INVALID PARM LIST (PSCB ADDR WRONG)
*
RGERR2   LA    R2,INSPSCB               INSERT = 'PSCB'
         LA    R3,RGM05                 ISSUE MESSAGE 5
         BAL   LR,RGEFF02
         B     RGRET16                  RC=16
*
* INVALID PARM LIST (PARM LENGTH WRONG)
*
RGERR4   LA    R2,INSPARM               INSERT = 'PARAMETER LENGTH'
         LA    R3,RGM05                 ISSUE MESSAGE 5
         BAL   LR,RGEFF02
         B     RGRET8                   RC=8
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* ERROR HANDLING CONTINUED                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
*
* PARSE ERROR
*
RGERR5   ST    R15,WSAVR15              SAVE ERROR CODE
         LA    R2,WINSR15               INSERT = 'PARAMETER LENGTH'
         USING INSDSECT,R2              #####
         LA    R3,1                     SET UP INSERT
         ST    R3,INSCNT
         MVI   INSLEN,X'84'             LEN=4, TRANSLATE TO NUMERIC
         LA    R3,WSAVR15
         STCM  R3,7,INSDATA
         LA    R3,RGM06                 ISSUE MESSAGE 6
         BAL   LR,RGEFF02
         B     RGRET16                  RC=16
*
* USER NOT DEFINED IN REQUESTED GROUP
*
RGNOGRP  LA    R2,WINSGRP               INSERT = GROUP NAME
         LA    R3,RGM07                 ISSUE MESSAGE 7
         BAL   LR,RGEFF02
         B     RGRET8                   RC=8
*
* RACINIT FAILED BY INST. EXIT
*
RGFEXIT  SR    R2,R2                    NO INSERT
         LA    R3,RGM08                 ISSUE MESSAGE 8
         BAL   LR,RGEFF02
         B     RGRET8                   RC=8
*
* USER REVOKED IN REQUESTED GROUP
*
RGGREV   LA    R2,WINSGRP               INSERT = GROUP NAME
         LA    R3,RGM10                 ISSUE MESSAGE 10
         BAL   LR,RGEFF02
         B     RGRET8                   RC=8
*
* TERMINAL NOT AUTHORIZED
*
RGNOTERM L     R2,WACEEP                GET ACEE ADDRESS
         USING ACEE,R2                  #####
         LA    R2,ACEETRID              POINT TO TERMINAL ID
         DROP  R2                       #####
         STCM  R2,7,WINSGR2A            PUT INTO INSERT LIST
         LA    R2,8                     LENGTH OF INSERT IS 8
         STC   R2,WINSGR2L
         LA    R2,WINSGRP               INSERT = GRP NAME/TERMINAL ID
         LA    R3,RGM12                 ISSUE MESSAGE 12
         BAL   LR,RGEFF02
         B     RGRET8                   RC=8
*
* UNEXPECTED RACINIT RETURN CODE
*
RGRACERR LA    R2,WINSGRP               INSERT GROUP NAME/RC
         LA    R3,RGM11                 ISSUE MESSAGE 10
         BAL   LR,RGEFF02
         B     RGRET16                  RC=16
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* INTERFACE TO IKJEFF02     R2->INSDSECT, R3->CL4'MSGID',LR->RETURN   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RGEFF02  ST    LR,WSAVLR           SAVE RETURN REG
         XC    MTPARML(MTLENMT),MTPARML  CLEAR PARMS
         LA    R1,MTCSECTP         INIT PARMS
         ST    R1,MTPLPTR
         TM    WFLAGS,WFCP         CP?
         BZ    RGEFF02A            NO CPPL IF NOT, SO USE WTP
         L     R1,WCPPLP
         ST    R1,MTCPPLP
         OI    MTSW1,MTPUTLSW      SET FOR PUTLINE IF CPPL
         B     RGEFF02B
RGEFF02A OI    MTSW1,MTWTPSW       SET FOR WTP IF NO CPPL
RGEFF02B OI    MTSW1,MTHEXSW       HEX TRANSLATION FOR NUMERIC INSERTS
         OI    MTHIGH,X'80'
         L     R1,AMSGS
         ST    R1,MTCSECTP
         MVC   MTMSGID(4),0(R3)
         LTR   R2,R2               ANY INSERTS?
         BZ    RGEFF02D            BIF NOT
         USING INSDSECT,R2         #####
         L     R1,INSCNT           GET NUMBER OF INSERTS
         C     R1,=F'&NUMINS'      ENSURE COUNT OK
         BNH   RGEFF02C
         ABEND RGA01               IF NOT, USER 1 ABEND
RGEFF02C SLL   R1,2                ELSE GET COUNT*4
         BCTR  R1,0                LESS ONE FOR EXECUTE
         MVC   MTINSRTS(0),INSLEN  **EXECUTED**
         EX    R1,*-6              MOVE INSERT DATA INTO PARMLIST
         DROP  R2                  #####
RGEFF02D EQU   *
         CALLTSSR EP=IKJEFF02,     ISSUE MESSAGE                       X
               MF=(E,MTPARML)
         L     LR,WSAVLR           RETURN TO CALLER
         BR    LR
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* ROUTINES TO SET RETURN CODE AND BEGIN TO EXIT                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RGRET4   LA    R1,4
         ST    R1,WRETCDE
         B     RG900
RGRET8   LA    R1,8
         ST    R1,WRETCDE
         B     RG900
RGRET16  LA    R1,16
         ST    R1,WRETCDE
         B     RG900
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* CONSTANTS, ETC.                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
APCL     DC    A(PCL)
AMSGS    DC    A(MSGS)
         DS    0F
RACINIT  RACINIT ENVIR=CHANGE,MF=L
RACINITL EQU   *-RACINIT
         DS    0F
EXTRACT  EXTRACT ,'S',FIELDS=(PSB),MF=L
EXTRACTL EQU   *-EXTRACT
         DS    0F
INSACEE  DC    F'1',AL1(L'CACEE),AL3(CACEE)
INSPSCB  DC    F'1',AL1(L'CPSCB),AL3(CPSCB)
INSPARM  DC    F'1',AL1(L'CPMLN),AL3(CPMLN)
CACEE    DC    C'ACEE'
CPSCB    DC    C'PSCB'
CPMLN    DC    C'PARAMETER LENGTH'
RGA01    EQU   1                   USER 1 ABEND CODE
RGM02    DC    C'RG02'             MESSAGE ID'S
RGM03    DC    C'RG03'
RGM04    DC    C'RG04'
RGM05    DC    C'RG05'
RGM06    DC    C'RG06'
RGM07    DC    C'RG07'
RGM08    DC    C'RG08'
RGM09    DC    C'RG09'
RGM10    DC    C'RG10'
RGM11    DC    C'RG11'
RGM12    DC    C'RG12'
         LTORG
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* IBM DSECTS                                                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         PRINT NOGEN
         IKJCPPL
         IKJPPL
LPPL     EQU   *-PPL
         IHAACEE
         IHAASCB
         IHAASXB
         IKJTCB
         IEZJSCB
         ICHPRCVT
         CVT   DSECT=YES
         PRINT GEN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* LOCAL DSECTS                                                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
WORKA    DSECT
WSAVE    DS    18F                 MUST BE FIRST IN WORKA
WSAVLR   DS    F                   SAVE AREA FOR LR FOR INTERNAL SUBS
WSAVR15  DS    F                   SAVE AREA FOR R15 FOR ERROR MSGS
WCPPLP   DS    A                   A(CPPL) IF ANY
WACEEP   DS    A                   A(ACEE)
WANS     DS    A                   A(PDE)
WAPSCB   DS    A                   A(PSCB)
WECB     DS    F                   PARSE ECB
WRETCDE  DS    F                   RETURN CODE FOR CALLER
WINS     DS    F,FL1,AL3           MAPPED BY INSDSECT
WGROUP   DS    0XL9                GROUP PARAMETER FOR RACINIT:
WGROUPL  DS    X                     LENGTH OF NEW GROUP NAME
WGROUPN  DS    CL8                   NEW GROUP NAME
         DS    0F
WPPL     DS    XL(LPPL)            PARSE PARAMETER LIST(FULLWORD ALIGN)
         DS    0F
WRACINIT DS    XL(RACINITL)        AREA FOR LIST FORM RACINIT
         DS    0F
WEXTRACT DS    XL(EXTRACTL)        AREA FOR LIST FORM EXTRACT
WFLAGS   DS    X                   FLAGS:
WFCP     EQU   X'80'                 RGROUP RUNNING AS A CP
WINSGRP  DS    0F                  MSG INSERT FOR GROUP NAME:
WINSGRPC DS    F                     INSERT COUNT
WINSGRPL DS    X                     LENGTH OF INSERT
WINSGRPA DS    AL3                   ADDR OF INSERT
WINSGR2L DS    X                     LENGTH OF INSERT
WINSGR2A DS    AL3                   ADDR OF INSERT
WINSR15  DS    XL8                 INSERT AREA FOR R15
         IKJEFFMT MTNINST=&NUMINS
LWORKA   EQU   *-WORKA
INSDSECT DSECT
INSCNT   DS    F                   COUNT OF INSERTS
INSLEN   DS    FL1                 LENGTH OF INSERT
INSDATA  DS    AL3                 ADDR OF INSERT
* . . .
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PARSE PARAMETER CONTROL LIST (PCL)                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
RGROUP   CSECT ,  ENSURE WE ARE IN A CSECT
PCL      IKJPARM
PGRP     IKJIDENT 'GROUP NAME',UPPERCASE,MAXLNTH=8,                    X
               FIRST=ALPHA,OTHER=ALPHANUM,                             X
               HELP=('NAME OF A RACF GROUP TO WHICH YOU ARE CONNECTED')
         IKJENDP
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* MESSAGES FOR ISSUANCE BY IKJEFF02                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
MSGS     CSECT
         IKJTSMSG ('RG02 CURRENT GROUP IS ',),RG02
         IKJTSMSG ('RG03 RGROUP IGNORED, RACF NOT ACTIVE'),RG03
         IKJTSMSG ('RG04 RGROUP IGNORED, NOT DEFINED TO RACF'),RG04
         IKJTSMSG ('RG05 INVALID ',),RG05
         IKJTSMSG ('RG06 PARSE ERROR ',),RG06
         IKJTSMSG ('RG07 RGROUP FAILED. YOU ARE NOT AUTHORIZED TO USE G$
               ROUP ',),RG07
         IKJTSMSG ('RG08 RGROUP FAILED BY INSTALLATION EXIT'),RG08
         IKJTSMSG ('RG10 RGROUP FAILED. YOU ARE NOT CURRENTLY AUTHORIZE$
               D TO USE GROUP ',),RG10
         IKJTSMSG ('RG11 RACINIT FAILED, GROUP = ',,', RC = ',),RG11
         IKJTSMSG ('RG12 RGROUP FAILED. GROUP ',,' IS NOT AUTHORIZED TO$
                USE TERMINAL ',),RG12
         IKJTSMSG
         END   RGROUP
