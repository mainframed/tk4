SETPW    TITLE 'SETPW -- RACF CENTRALIZED PASSWORD MAINTENANCE'
**********************************************************************
*                                                                    *
*  MODULE NAME -                                                     *
*                                                                    *
*     SETPW -- RACF CENTRALIZED PASSWORD MAINTENANCE                 *
*                                                                    *
*  FUNCTION -                                                        *
*                                                                    *
*     THIS TSO COMMAND PROCESSOR ALLOWS THE AUTHORIZED USER TO       *
*     CHANGE PASSWORDS FOR OTHER USERS. AN 'AUTHORIZED USER' IS      *
*     ONE THAT HAS EITHER THE SPECIAL AUTHORITY, OR ONE THAT IS      *
*     AUTHORIZED TO 'RACFPW.CHANGES' IN THE FACILITY CLASS. THIS     *
*     COMMAND CAN BE USEFUL WHEN YOU HAVE CENTRALIZED USER ADMIN-    *
*     ISTRATION, BUT CANNOT BE IN FOUR BUILDINGS AT ONCE AND YOU     *
*     DON'T BELIEVE IN GIVING NEW PASSWORDS OUT OVER THE PHONE.      *
*                                                                    *
*     NOTES FOR 'SPECIAL' USERS:                                     *
*          IF THE USER EXECUTING 'SETPW' HAS SPECIAL, THE FOLLOWING  *
*          OCCURS:                                                   *
*             THE PASSWORD IS RESET.                                 *
*             THE PASSDATE IS SET TO THE CURRENT DATA.               *
*             THE REVOKE BIT (FLAG4) IS SET TO 1 (NOT REVOKED).      *
*          IN OTHER WORDS, THE USER WILL NOT HAVE TO CHANGE HIS/HER  *
*          PASSWORD WHEN LOGGING ON FOR THE FIRST TIME.              *
*                                                                    *
*     NOTES FOR NON-SPECIAL USERS:                                   *
*          IF THE USER EXECUTING 'SETPW' DOES NOT HAVE SPECIAL,      *
*          BUT IS AUTHORIZED VIA 'RACFPW.CHANGES', THE FOLLOWING     *
*          OCCURS:                                                   *
*             THE PASSWORD IS RESET.                                 *
*             THE PASSDATE IS SET TO 00.000                          *
*             THE REVOKE BIT (FLAG4) IS SET TO 1 (NOT REVOKED).      *
*          THE USER LOGGING ON MUST THEN CHANGE THEIR PASSWORD       *
*          WHEN THEY LOGON FOR THE FIRST TIME.                       *
*                                                                    *
*                                                                    *
*     COMMAND SYNTAX:                                                *
*        SETPW USERID PASSWORD                                       *
*                                                                    *
*  NOTE -                                                            *
*                                                                    *
*     THIS COMMAND MUST BE ENTERED IN THE TSO AUTHORIZED             *
*     COMMAND TABLE, 'IKJEFTE2' AND LINKED 'AC=1'.                   *
*                                                                    *
*  CSECTS -                                                          *
*                                                                    *
*     SETPW    - MAINLINE PROGRAM                                    *
*     RACFPW01 - RACROUTE ROUTINE TO CHECK 'RACFPW.CHANGES'          *
*                                                                    *
*  ATTRIBUTES -                                                      *
*                                                                    *
*     REENTRANT, AUTHORIZED, ATTACHED FROM THE TMP                   *
*                                                                    *
*  ENTRY CONDITIONS -                                                *
*                                                                    *
*     R1  - ADDRESS OF THE COMMAND PROCESSOR PARAMETER LIST (CPPL)   *
*     R13 - ADDRESS OF A STANDARD SAVE AREA                          *
*     R14 - RETURN ADDRESS                                           *
*     R15 - ENTRY ADDRESS (SETPW)                                    *
*                                                                    *
*  EXIT CONDITIONS -                                                 *
*                                                                    *
*     R15 - CONTAINS A RETURN CODE:                                  *
*        R15 = 0 - PASSWORD CHANGED FOR USERID                       *
*        R15 = 8 - PARSE ERROR                                       *
*        R15 = 12 - ERROR IN RACF PROCESSING                         *
*        R15 = 16 - RACF NOT ACTIVE                                  *
*        R15 = 20 - USERID NOT AUTHORIZED                            *
*                                                                    *
*  REGISTER USAGE -                                                  *
*                                                                    *
*     R13 - ADDRESS OF SAVE/WORK AREA                                *
*     R12 - BASE ADDRESS (SETPW)                                     *
*     R11 - ADDRESS OF COMMAND PROCESSOR PARAMETER LIST (CPPL)       *
*     R10 - ADDRESS OF PARSE PARAMETER LIST (PPL)                    *
*     R9  - ADDRESS OF ADDRESS SPACE CONTROL BLOCK (ASCB)            *
*     R8  - ADDRESS OF ADDRESS SPACE EXTENSION BLOCK (ASXB)          *
*     R7  - ADDRESS OF ACCESSOR ENVIRONMENT ELEMENT (ACEE)           *
*     R6  - ADDRESS OF PARAMETER DESCRIPTOR LIST (PDL)               *
*     R4  - WORK                                                     *
*     R3  - WORK                                                     *
*     R2  - WORK                                                     *
*     R1  - WORK                                                     *
*     R0  - WORK                                                     *
*                                                                    *
*  OPERATION -                                                       *
*                                                                    *
*     1.  CHECK THE USER'S AUTHORIZATION FOR THE COMMAND AND THE     *
*         STATUS OF RACF (ACTIVE OR INACTIVE).                       *
*     2.  CALL IKJPARS TO PARSE THE COMMAND LINE FOR THE PARAMETERS. *
*     3.  SET THE NEW PASSWORD AND PASSWORD CHANGE DATE IN THE       *
*         TEMPLATE AND REWRITE THE USER TEMPLATE.                    *
*     4.  EXIT.                                                      *
*                                                                    *
*  CHANGE HISTORY -                                                  *
*                                                                    *
*     WRITTEN 10/85 BY BILL SOMERVILLE,                              *
*                                                                    *
*           MCI TELECOMMUNICATIONS CORP.                             *
*           1151 SEVEN LOCKS ROAD                                    *
*           ROCKVILLE, MARYLAND 20854                                *
*           (301) 738-2768                                           *
*                                                                    *
*     ADDED RACROUTE, PASSDATE, REVOKE FLAG CODE 02/02/87            *
*           STUART SABEL, BLUE CROSS OF WASHINGTON AND ALASKA        *
*                                                                    *
*                                                                    *
*                                                                    *
**********************************************************************
*****************  START OF NON-IBM MACROS  **************************
**********************************************************************
         MACRO
         SAVEAREA &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').NODSECT
         AIF   ('&DSECT' NE 'YES').PARMERR
SAVEAREA DSECT                     FORMAT OF STANDARD SAVE AREA
         AGO   .COMMON
.NODSECT ANOP
SAVEAREA DS    0F                  FORMAT OF STANDARD SAVE AREA
.COMMON  ANOP
SAVEPLI  DS    F                   USED BY PL/I
SAVEOLD  DS    F                   OLD (BACK-CHAIN) SAVE AREA
SAVENEW  DS    F                   NEW (FORWARD-CHAIN) SAVE AREA
SAVER14  DS    F                   CALLER'S R14
SAVER15  DS    F                   CALLER'S R15
SAVER0   DS    F                   CALLER'S R0
SAVER1   DS    F                   CALLER'S R1
SAVER2   DS    F                   CALLER'S R2
SAVER3   DS    F                   CALLER'S R3
SAVER4   DS    F                   CALLER'S R4
SAVER5   DS    F                   CALLER'S R5
SAVER6   DS    F                   CALLER'S R6
SAVER7   DS    F                   CALLER'S R7
SAVER8   DS    F                   CALLER'S R8
SAVER9   DS    F                   CALLER'S R9
SAVER10  DS    F                   CALLER'S R10
SAVER11  DS    F                   CALLER'S R11
SAVER12  DS    F                   CALLER'S R12
SAVESIZE EQU   *-SAVEAREA          LENGTH OF SAVEAREA IN BYTES
         MEXIT
.PARMERR ANOP
         MNOTE 8,'*** ERROR *** INVALID PARM: DSECT=&DSECT'
         MEND
         MACRO
         REGS
         LCLA  &REG
&REG     SETA  0
*  GENERAL REGISTER EQUATES
.RLOOP   ANOP
R&REG    EQU   &REG
&REG     SETA  &REG+1
         AIF   (&REG LE 15).RLOOP
&REG     SETA  0
*  CONTROL REGISTER EQUATES
.CLOOP   ANOP
C&REG    EQU   &REG
&REG     SETA  &REG+1
         AIF   (&REG LE 15).CLOOP
&REG     SETA  0
*  FLOATING-POINT REGISTER EQUATES
.FLOOP   ANOP
F&REG    EQU   &REG
&REG     SETA  &REG+2
         AIF   (&REG LE 6).FLOOP
         MEND
**********************************************************************
*****************  END OF NON-IBM MACROS  ****************************
**********************************************************************
         EJECT
         USING SAVEAREA,R13
         USING SETPW,R12
         USING CPPL,R11
         USING PPL,R10
         USING ASCB,R9
         USING ASXB,R8
         USING ACEE,R7
         USING SETPWPDL,R6
         USING PSA,R0
SETPW    CSECT
         SAVE  (14,12),,'SETPW   &SYSDATE.&SYSTIME'    SAVE REGISTERS
         LR    R12,R15             ESTABLISH BASE REGISTER
         LR    R11,R1              SAVE CPPL ADDRESS
         GETMAIN R,LV=WORKSIZE     OBTAIN A WORK AREA
         ST    R1,SAVENEW          FORWARD CHAIN
         ST    R13,SAVEOLD-SAVEAREA(,R1)     BACKWARD CHAIN
         LR    R13,R1              SAVE THE SAVE AREA POINTER
         XC    SAVENEW(4),SAVENEW  CLEAR FORWARD CHAIN
**********************************************************************
*  INITIALIZE THE PARSE PARAMETER LIST.                              *
**********************************************************************
         LA    R10,PWPPL           GET THE PPL ADDRESS
         MVC   PPLUPT(4),CPPLUPT   MOVE THE UPT ADDRESS
         MVC   PPLECT(4),CPPLECT   MOVE THE ECT ADDRESS
         LA    R1,PWECB            GET THE ECB ADDRESS
         ST    R1,PPLECB           SAVE THE ECB ADDRESS
         L     R1,=A(SETPWPCL)     GET THE PCL ADDRESS
         ST    R1,PPLPCL           SAVE THE PCL ADDRESS
         LA    R1,PWPDL            GET THE PDL ADDRESS AREA ADDRESS
         ST    R1,PPLANS           SAVE THE PDL ADDRESS AREA ADDRESS
         MVC   PPLCBUF(4),CPPLCBUF MOVE THE COMMAND BUFFER ADDRESS
         XC    PPLUWA(4),PPLUWA    CLEAR THE USER WORK AREA ADDRESS
         MVC   PWUSERID(8),=CL8' ' INITIALIZE THE USERID
         MVC   PWPSWD(8),=CL8' '   INITIALIZE THE PASSWORD
         XC    PWECB(4),PWECB      CLEAR THE ECB
**********************************************************************
*  INITIALIZE THE MESSAGE PARAMETER LIST.                            *
**********************************************************************
         LA    R1,MTCSECTP         GET THE MT DESCRIPTOR ADDRESS
         ST    R1,MTPLPTR          SAVE IN THE MT HEADER
         ST    R11,MTCPPLP         SAVE THE CPPL ADDRESS
         XC    MTECBP(4),MTECBP    CLEAR THE ECB POINTER
         L     R1,=A(SETPWMSG)     GET THE MESSAGE CSECT ADDRESS
         ST    R1,MTCSECTP         SAVE THE MESSAGE CSECT ADDRESS
         MVI   MTSW1,MTHEXSW+MTPUTLSW   INSERTS HEX + PUTLINE
         MVI   MTSW2,X'00'         CLEAR SWITCHES
         XC    MTINSRTS(16),MTINSRTS    CLEAR INSERTS
         EJECT
**********************************************************************
*  PARSE THE COMMAND LINE FOR THE USERID AND PASSWORD.               *
**********************************************************************
         CALLTSSR EP=IKJPARS,MF=(E,(R10))    PARSE THE COMMAND LINE
         LTR   R15,R15             DID THE PARSE COMPLETE?
         BNZ   PARSEERR            NO, GO ANALYZE THE ERROR
         L     R6,PPLANS           GET THE PDL ADDRESS ADDRESS
         L     R6,0(,R6)           GET THE PDL ADDRESS
         LH    R3,USERID+4         GET THE USERID LENGTH
         STC   R3,PWUSERLN         SAVE THE USERID LENGTH
         BCTR  R3,R0               SUBTRACT ONE FOR MOVE
         L     R1,USERID           GET THE USERID ADDRESS
         LA    R2,PWUSERID         GET THE WORK AREA ADDRESS
         EX    R3,MOVEPARM         MOVE THE USERID TO THE WORK AREA
         LH    R3,PASSWORD+4       GET THE PASSWORD LENGTH
         STC   R3,PWPSWDLN         SAVE THE PASSWORD LENGTH
         BCTR  R3,R0               SUBTRACT ONE FOR MOVE
         L     R1,PASSWORD         GET THE PASSWORD ADDRESS
         LA    R2,PWPSWD           GET THE WORK AREA ADDRESS
         EX    R3,MOVEPARM         MOVE THE PASSWORD TO THE WORK AREA
         TIME  DEC                 OBTAIN THE CURRENT DATE
         STCM  R1,B'0111',PWDATE   SAVE THE DATE
         EJECT
**********************************************************************
*  CHECK ON THE STATUS OF RACF AND THE USER'S AUTHORITY TO ISSUE     *
*  THIS COMMAND.                                                     *
**********************************************************************
         RACSTAT ,                 CHECK ON RACF STATUS
         LTR   R15,R15             IS RACF ALIVE AND WELL?
         BNZ   RACINACT            NO, GO ISSUE MESSAGE AND END
         L     R9,PSAAOLD          GET OUR ASCB ADDRESS
         L     R8,ASCBASXB         GET OUR ASXB ADDRESS
         ICM   R7,B'1111',ASXBSENV IS THERE AN ACEE?
         BZ    NOTAUTHR            NO, USER NOT AUTHORIZED
         TM    ACEEFLG1,ACEESPEC   IS THE USER SPECIAL?
         BO    CHGPW               YES, GO ON WITH PASSWORD CHANGE
         CALL  RACFPW01            AUTHORIZED TO 'RACFPW.CHANGES'?
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   NOTAUTHR            IF NOT ZERO-YOU CAN'T DO IT
         MVC   PWDATE,ZERODATE     BLANK OUT THE PASSWORD DATE FIELD
         EJECT
**********************************************************************
*  CHANGE THE PASSWORD AND THE PASSWORD CHANGE DATE.                 *
**********************************************************************
CHGPW    DS    0H
         XR    R2,R2               CLEAR R2
         IC    R2,PWPSWDLN         GET THE PASSWORD LENGTH
         LA    R3,PWPSWD           GET THE PASSWORD ADDRESS
         LA    R4,PWDATE           GET THE PASSWORD CHANGE DATE ADDRESS
         LA    R5,PWREV            GET THE REVOKED FIELD ADDRESS
         MVC   PWUPDPWD(ACTNSKLN),ACTNSKEL   MOVE IN SKELETON ACTION
         MVC   PWUPDDAT(ACTNSKLN),ACTNSKEL   MOVE IN SKELETON ACTION
         MVC   PWUPDREV(ACTNSKLN),ACTNSKEL   MOVE IN SKELETON ACTION
         ICHEACTN FIELD='PASSWORD',FLDATA=((R2),(R3)),ENCRYPT=YES,     X
               MF=(E,PWUPDPWD)
         ICHEACTN FIELD='PASSDATE',FLDATA=(3,(R4)),MF=(E,PWUPDDAT)
         ICHEACTN FIELD='FLAG4',FLDATA=(1,(R5)),MF=(E,PWUPDREV)
         MVC   PWUPDATE(INTYSKLN),INTYSKEL   MOVE IN SKELETON UPDATE
         LA    R1,PWUPDATE+X'1C'   GET THE FLDEF ADDRESS
         ST    R1,PWUPDATE+X'08'   SAVE FLDEF ADDRESS IN THE PLIST
         ICHEINTY ALTER,TYPE='USR',ENTRY=PWUSERLN,MF=(E,PWUPDATE),     X
               ACTIONS=(PWUPDPWD,PWUPDDAT,PWUPDREV)
         LTR   R15,R15             WAS THE PASSWORD UPDATED PROPERLY?
         BNZ   RACERR              NO, GO PRINT A MESSAGE AND EXIT
         B     UPDATEOK            YES, INDICATE UPDATE WAS SUCCESSFUL
         EJECT
**********************************************************************
*  ISSUE MESSAGES INDICATING THE STATUS OF THE CHANGE REQUEST.       *
**********************************************************************
RACINACT MVC   MTMSGID(4),=CL4'PW01'   PUT MESSAGE CODE INTO PLIST
         LA    R2,16              SYNTAX ERROR RETURN CODE
         B     INSERTRC           INSERT THE RC AND WRITE
NOTAUTHR MVC   MTMSGID(4),=CL4'PW02'   PUT MESSAGE CODE INTO PLIST
         LA    R2,20              SYNTAX ERROR RETURN CODE
         B     WRITEMSG           WRITE THE ERROR MESSAGE
PARSEERR MVC   MTMSGID(4),=CL4'PW03'   PUT MESSAGE CODE INTO PLIST
         LA    R2,8               PARSE ERROR RETURN CODE
         B     INSERTRC           INSERT THE RC AND WRITE
RACERR   LA    R2,12              RACF ERROR RETURN CODE
         C     R15,=F'12'         WAS THE USERID FOUND?
         BE    RACERRNU           NO, PRINT SPECIAL MESSAGE
         MVC   MTMSGID(4),=CL4'PW04'   PUT MESSAGE CODE INTO PLIST
         C     R15,=F'36'         IS THERE MORE INFO IN R0?
         BNE   INSERTRC           NO, GO AHEAD AND ISSUE MESSAGE
         SLL   R0,16              SHIFT REASON CODE
         OR    R15,R0             INSERT R0 AS HIGH ORDER BYTES
         B     INSERTRC           INSERT THE RC AND WRITE
RACERRNU MVC   MTMSGID(4),=CL4'PW05'   PUT MESSAGE CODE INTO PLIST
         B     WRITEMSG           WRITE THE ERROR MESSAGE
UPDATEOK MVC   MTMSGID(4),=CL4'PW06'   PUT MESSAGE CODE INTO PLIST
         LA    R2,0               NORMAL RETURN CODE
         B     WRITEMSG           WRITE THE ERROR MESSAGE
INSERTRC ST    R15,PWINSRC        SAVE THE RETURN CODE
         LA    R1,PWINSRC         GET THE RETURN CODE ADDRESS
         STCM  R1,B'0111',MTADDR  PUT THE ADDRESS IN THE PLIST
         MVI   MTLEN,4            LENGTH OF ENTRY IS 4 BYTES
         OI    MTHIGHL,X'80'      INDICATE TRANSLATION IS DESIRED
WRITEMSG CALLTSSR EP=IKJEFF02,MF=(E,MTPARML)     WRITE THE MESSAGE
         B     FREE               GO FREE THE PDL AND EXIT
         EJECT
**********************************************************************
*  RETURN CONTROL TO THE TMP.                                        *
**********************************************************************
FREE     IKJRLSA PWPDL             RELEASE THE PDL STORAGE
         LR    R15,R2              PUT THE RETURN CODE INTO R15
EXIT     LR    R1,R13              GET THE WORK AREA POINTER
         L     R13,SAVEOLD         GET CALLER'S SAVE AREA
         ST    R15,SAVER15         SET RETURN CODE
         FREEMAIN R,LV=WORKSIZE,A=(R1)  FREE OUR WORK AREA
         XC    SAVENEW(4),SAVENEW  CLEAR FORWARD CHAIN
         RETURN (14,12)            RESTORE REGISTERS AND RETURN
         EJECT
**********************************************************************
*  CONSTANTS AND SKELETONS.                                          *
**********************************************************************
MOVEPARM MVC   0(*-*,R2),0(R1)     EXECUTED MOVE INSTRUCTION
ACTNSKEL ICHEACTN FIELD=PASSWORD,FLDATA=(8,ACTNSKLN),MF=L
ACTNSKLN EQU   *-ACTNSKEL          LENGTH OF SKELETON ICHEACTN PLIST
INTYSKEL ICHEINTY ALTER,TYPE='USR',ENTRY=INTYSKLN,MF=L,                X
               ACTIONS=(INTYSKLN,INTYSKLN,INTYSKLN)
INTYSKLN EQU   *-INTYSKEL          LENGTH OF SKELETON ICHEINTY PLIST
         EJECT
         LTORG
         EJECT
**********************************************************************
*  PARSE PARAMETER CONTROL LIST.                                     *
**********************************************************************
SETPWPCL IKJPARM DSECT=SETPWPDL
USERID   IKJIDENT 'USERID',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM,       X
               PROMPT='USERID TO BE CHANGED'
PASSWORD IKJIDENT 'PASSWORD',PTBYPS,MAXLNTH=8,PROMPT='NEW PASSWORD',   X
               FIRST=NONATNUM,OTHER=NONATNUM
         IKJENDP
         EJECT
**********************************************************************
*  COMMAND ERROR AND INFORMATIONAL MESSAGES.                         *
**********************************************************************
SETPWMSG CSECT
PWD001E  IKJTSMSG ('PWD001E RACF IS INACTIVE - RACSTAT RC = ',),PW01
PWD002E  IKJTSMSG ('PWD002E USER NOT AUTHORIZED TO THIS FUNCTION'),PW02
PWD003E  IKJTSMSG ('PWD003E PARSE ERROR - IKJPARS RC =',),PW03
PWD004E  IKJTSMSG ('PWD004E RACF ERROR - ICHEINTY RC = ',),PW04
PWD005E  IKJTSMSG ('PWD005E USERID NOT FOUND'),PW05
PWD006I  IKJTSMSG ('PWD006I PASSWORD CHANGED'),PW06
         IKJTSMSG
         EJECT
         REGS
         EJECT
**********************************************************************
*  SAVE AND WORK AREA.                                               *
**********************************************************************
WORKAREA DSECT
         SAVEAREA DSECT=NO
PWPPL    DS    0F,CL(PPLSIZE)      PARSE PARAMETER LIST
PWECB    DS    F                   PARSE EVENT CONTROL BLOCK
PWPDL    DS    F                   PARSE ANSWER AREA ADDRESS
PWINSRC  DS    F                   RETURN CODE FOR INSERT
PWUSERLN DS    AL1                 LENGTH OF USERID FIELD
PWUSERID DS    CL8                 USERID FROM COMMAND LINE
PWPSWDLN DS    AL1                 LENGTH OF PASSWORD FIELD
PWPSWD   DS    CL8                 PASSWORD FROM COMMAND LINE
PWDATE   DS    XL3                 PASSWORD CHANGE DATE
PWUPDATE DS    0F,CL(INTYSKLN)     UPDATE PARAMETER LIST
PWUPDPWD DS    0F,CL(ACTNSKLN)     PASSWORD UPDATE ACTION ENTRY
PWUPDDAT DS    0F,CL(ACTNSKLN)     PASSDATE UPDATE ACTION ENTRY
PWUPDREV DS    0F,CL(ACTNSKLN)     PASSDATE UPDATE ACTION ENTRY
PWMSGPL  IKJEFFMT MTDSECT=NO       IKJEFF02 MESSAGE PARAMETER LIST
WORKSIZE EQU   *-WORKAREA
ZERODATE DC    X'00000F'           ZEROS FOR PASSDATE
PWREV    DC    B'1'                USER NOT REVOKED FLAG
         EJECT
         IKJCPPL
         EJECT
         IKJPPL
PPLSIZE  EQU   *-PPL
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IHAACEE
         EJECT
         IHAPSA
         EJECT
         CVT   DSECT=YES,LIST=NO
         EJECT
         TITLE 'RACFPW01 - CHECK TO SEE IF USER MAY CHANGE PASSWORDS'
***********************************************************************
***********************************************************************
***                                                                 ***
***      MODULE - RACFPW01                                          ***
***                                                                 ***
***      ROUTINE CALLED BY 'SETPW' COMMAND PROCESSOR                ***
***                                                                 ***
***      THIS MODULE WILL CONTROL WHO MAY EXECUTE THE 'SETPW' TSO   ***
***      COMMAND TO CHANGE THE PASSWORDS OF OTHER USERS.            ***
***                                                                 ***
***      REQUIREMENTS:                                              ***
***      1. CLASS 'FACILITY' MUST BE ACTIVATED. THE PROFILE NAME    ***
***         USED MUST BE DEFINED AS 'RACFPW.CHANGES'                ***
***                                                                 ***
***      2. IF A NON-SPECIAL USER WISHES TO USE THE 'SETPW'         ***
***         COMMAND, THE USER MUST BE AUTHORIZED TO THIS PROFILE    ***
***         WITH AT LEAST 'READ' AUTHORITY.                         ***
***                                                                 ***
***         EXAMPLE:                                                ***
***         RDEF RACFPW.CHANGES CL(FACILITY) UACC(NONE)             ***
***         PERMIT RACFPW.CHANGES CL(FACILITY) ID(SYS1) AC(READ)    ***
***                                                                 ***
***      RETURN CODES:                                              ***
***         0 - USER AUTHORIZED TO 'RACFPW.CHANGES'                 ***
***                                                                 ***
***         4 - FAIL REQUEST FOR PASSWORD CHANGE                    ***
***             USED IF RACHECK RETURNS WITH NON-ZERO RETURN CODE   ***
***                                                                 ***
***      LOGGING SHOULD BE PERFORMED IN ALL CASES.                  ***
***      THE PROFILE SPECIFIES AUDIT(ALL).                          ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
RACFPW01 CSECT ,
         SAVE  (14,12),,RACFPW01-&SYSDATE-&SYSTIME
         LR    R12,R15             PROGRAM ADDRESSABILITY
         USING RACFPW01,R12        ****
***********************************************************************
* GET SPACE FOR RACROUTE PARM LIST                                    *
***********************************************************************
         L     R0,DYNSIZE          DYNAMIC AREA SIZE TO R0
         GETMAIN RU,               GETMAIN                             *
               LV=(0),SP=229               DYNAMIC AREA
         LR    R11,R1              DYNAMIC AREA ADDRESSABILITY
         USING DATD,R11            ****
         ST    R13,SAVEIT+4        SAVE CALLER'S SAVEAREA ADR
         ST    R11,8(,R13)         SAVE OUR SAVEAREA ADR
         LR    R13,R11             OUR SAVEAREA ADR TO R13
***********************************************************************
* ISSUE RACROUTE FOR AUTHORITY TO CHANGE PASSWORDS                    *
***********************************************************************
RACF     DS    0H
         MVC   AUTHCHK(LRACROUT),RACROUTL INIT RACROUTE MACRO
         MVC   PROFILE,RACPROF     INIT RACROUTE PROFILE
         RACROUTE REQUEST=AUTH,    RACHECK REQUEST.                    *
               CLASS=RACLASS,      CHECK FOR                           *
               ATTR=READ,          READ                                *
               ENTITY=PROFILE,     AUTHORITY                           *
               LOG=ASIS,           TO CHANGE A PASSWORD                *
               WORKA=SAFWORK,      SAF WORK AREA.                      *
               MF=(E,AUTHCHK)
***********************************************************************
* PROCESS RETURN CODE                                                 *
***********************************************************************
         LA    R8,SAFWORK          SAF WORK AREA.
         USING SAFW,R8
         C     R15,=F'0'           AUTHORIZED?
         BE    RETURN0             YES - RETURN WITH RC=0
*
SETFAIL  DS    0H
         LA    R3,4                SET RETURN CODE TO FAIL REQUEST
         B     FINAL
*
RETURN0  SR    R3,R3               SET RETURN CODE TO ALLOW REQUEST
***********************************************************************
* CLEAN UP AND QUIT                                                   *
***********************************************************************
FINAL    DS    0H
         L     R13,SAVEIT+4        RESTORE R13
         L     R0,DYNSIZE          DYNAMIC AREA SIZE TO R0
         LR    R1,R11              DYNAMIC DATA ADDRESS TO R1
         FREEMAIN RU,SP=229,       FREEMAIN                            *
               LV=(0),             DYNAMIC                             *
               A=(1)               AREA
         LR    R15,R3              LOAD RETURN CODE
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN
         EJECT
***********************************************************************
* DATA AREAS                                                          *
***********************************************************************
         DS    0D                   DOUBLE WORD ALIGN
DYNSIZE  DC    AL4(SIZEDATD)        DYN AREA SIZE
RACLASS  DC    AL1(L'RACLASSN)      CLASS NAME FOR RACROUTE
RACLASSN DC    C'FACILITY'          CLASS NAME FOR RACROUTE
RACPROF  DC    CL39'RACFPW.CHANGES' PROFILE FOR RACROUTE
RACROUTL RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L
LRACROUT EQU   *-RACROUTL           LENGTH OF RACROUTE MACRO.
         DS    0D
         LTORG
***********************************************************************
* DSECT FOR THIS PROGRAM'S DYNAMIC AREA                               *
***********************************************************************
DATD     DSECT
SAVEIT   DS    18F                 REGISTER SAVE AREA
SAFWORK  DS    CL512               SAF WORK AREA.
         DS    0D
DOUBLE   DC    D'0'                WORK DOUBLE WORD
PROFILE  DS    CL39                PROFILE FOR RACROUTE
         ORG   PROFILE
RACPPREF DC    C'RACFPW.CHANGES'   PROFILE PREFIX
         ORG
         DS    0D
AUTHCHK  RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*
SIZEDATD EQU   *-DATD              LENGTH OF DSECT
*
         ICHSAFW  ,
*
         END   ,
