RACFPROT TITLE 'RACFPROT - DISPLAY RACF PROFILES FOR DATA SETS'
***********************************************************************
*                                                                     *
* MODULE NAME:     RACFPROT                                           *
*                                                                     *
* FUNCTION:        TSO COMMAND PROCESSOR THAT WILL ACCEPT CATALOG     *
*                  NODES AS INPUT AND RETURN DATA SET NAMES UNDER     *
*                  THOSE NODES AND THE GENERIC RACF PROFILES THAT     *
*                  PROTECT THEM VIA THE PUTLINE MACRO.                *
*                                                                     *
* INPUT DATASETS:  NONE                                               *
*                                                                     *
* OUTPUT DATASETS: NONE                                               *
*                                                                     *
* ATTRIBUTES:      NON-REENTRANT, AC=1                                *
*                                                                     *
* REGISTER USAGE:  USES STANDARD LINKAGE CONVENTIONS                  *
*                  R0 - COUNTER BASE                                  *
*                  R1 - COMMAND PROCESSOR INPUT BUFFER                *
*                  R2 - R11 - WORK REGISTERS                          *
*                  R12- BASE REGISTER                                 *
*                  R13- IBM LINKAGE ETC.                              *
*                                                                     *
* RETURN CODES:    0  - SUCCESSFUL                                    *
*                  4  - NODE(S) NOT FOUND                             *
*                  8  - ERROR IN PARSE                                *
*                  12 - WORK AREA TOO SMALL                           *
*                  16 - SYNTAX ERROR                                  *
*                  20 - RACHECK ERROR                                 *
*                                                                     *
* SYNTAX:          LOC CATALOG.NODES NOHEADING                        *
*                  YOU MAY SPECIFY ALL NODES EXCEPT FOR THE LAST NODE.*
*                                                                     *
* NOTE:            DURING ASSEMBLY YOU MAY RECEIVE A LEVEL 4 MNOTE    *
*                  FROM THE RACHECK MACRO. THIS IS BECAUSE OF THE     *
*                  'PRIVATE' KEYWORD ON THE ENTITY STATEMENT AND CAN  *
*                  BE IGNORED.                                        *
*                                                                     *
* AUTHOR:          STUART SABEL  12/23/88                             *
*                                                                     *
***********************************************************************
         EJECT
         USING SAVEAREA,R13
         USING RACFPROT,R12
         USING CPPL,R11
         USING PPL,R10
         USING MYPDL,R6
RACFPROT CSECT
         SAVE  (14,12),,'RACFPROT - &SYSDATE.&SYSTIME' SAVE REGISTERS
         LR    R12,R15                 ESTABLISH BASE REGISTER
         LR    R11,R1                  SAVE CPPL ADDRESS
         GETMAIN R,LV=WORKSIZE         OBTAIN A WORK AREA
         ST    R1,SAVENEW              FORWARD CHAIN
         ST    R13,SAVEOLD-SAVEAREA(,R1)     BACKWARD CHAIN
         LR    R13,R1                  SAVE THE SAVE AREA POINTER
         XC    SAVENEW(4),SAVENEW      CLEAR FORWARD CHAIN
         EJECT
**********************************************************************
*  INITIALIZE THE PARSE PARAMETER LIST.                              *
**********************************************************************
         LA    R10,MYPPL               GET THE PPL ADDRESS
         MVC   PPLUPT(4),CPPLUPT       MOVE THE UPT ADDRESS
         MVC   PPLECT(4),CPPLECT       MOVE THE ECT ADDRESS
         LA    R1,MYECB                GET THE ECB ADDRESS
         ST    R1,PPLECB               SAVE THE ECB ADDRESS
         L     R1,=A(MYPCL)            GET THE PCL ADDRESS
         ST    R1,PPLPCL               SAVE THE PCL ADDRESS
         LA    R1,MYPDLA               GET THE PDL ADDRESS AREA ADDRESS
         ST    R1,PPLANS               SAVE THE PDL ADDR AREA ADDRESS
         MVC   PPLCBUF(4),CPPLCBUF     MOVE THE COMMAND BUFFER ADDRESS
         XC    PPLUWA(4),PPLUWA        CLEAR THE USER WORK AREA ADDRESS
         MVC   LOCATE(44),=CL44' '     INITIALIZE THE INPUT AREA
         XC    MYECB(4),MYECB          CLEAR THE ECB
**********************************************************************
*  INITIALIZE THE MESSAGE PARAMETER LIST.                            *
**********************************************************************
         LA    R1,MTCSECTP             GET THE MT DESCRIPTOR ADDRESS
         ST    R1,MTPLPTR              SAVE IN THE MT HEADER
         ST    R11,MTCPPLP             SAVE THE CPPL ADDRESS
         XC    MTECBP(4),MTECBP        CLEAR THE ECB POINTER
         L     R1,=A(SETMYMSG)         GET THE MESSAGE CSECT ADDRESS
         ST    R1,MTCSECTP             SAVE THE MESSAGE CSECT ADDRESS
         MVI   MTSW1,MTHEXSW+MTPUTLSW  INSERTS HEX + PUTLINE
         MVI   MTSW2,X'00'             CLEAR SWITCHES
         XC    MTINSRTS(16),MTINSRTS   CLEAR INSERTS
         EJECT
**********************************************************************
*  PARSE THE COMMAND LINE FOR THE DATA WANTED.                       *
**********************************************************************
         CALLTSSR EP=IKJPARS,MF=(E,(R10))    PARSE THE COMMAND LINE
         LTR   R15,R15                 DID THE PARSE COMPLETE?
         BNZ   PARSEERR                NO, GO ANALYZE THE ERROR
         L     R6,PPLANS               GET THE PDL ADDRESS ADDRESS
         L     R6,0(,R6)               GET THE PDL ADDRESS
GETDSN   DS    0H
         LH    R3,MYDSN+4              GET THE DATASET LENGTH
         STC   R3,LOCLEN               SAVE THE DATASET LENGTH
         BCTR  R3,0                    SUBTRACT ONE FOR MOVE
         L     R1,MYDSN                GET THE DATASET NAME ADDRESS
         LA    R2,LOCATE               GET THE WORK AREA ADDRESS
         EX    R3,MOVEPARM             MOVE THE DSNAME TO THE WORK AREA
         EJECT
**********************************************************************
*  SET UP IKJEHCIR PARAMETER LIST                                    *
**********************************************************************
         DS    0H
         L     R4,SHORTLN             GET SHORT LIST LENG
         GETMAIN RU,LV=(R4),BNDRY=PAGE GET ONE PAGE WORTH
         ST    R1,STORAGE             SAVE STORAGE PTR
         LR    R3,R1                  SET ADDRESSABILITY
         USING MYALIST,R3             ADDRESSABILITY
         SR    R1,R1                  CLEAR R1
         XC    MYALIST(255),MYALIST   CLEAR HEADER ETC
         STH   R4,LISTLEN             SET LENGTH INTO LIST
         XC    CLEAR1,CLEAR1          CLEAR PARM LIST
         XC    CLEAR2,CLEAR2          CLEAR PARM LIST
         XC    CLEAR3,CLEAR3          CLEAR PARM LIST
         MVI   RETURNC,0              CLEAR RETURN CODE
         EJECT
**********************************************************************
*  CALL IKJEHCIR TO DO THE CATALOG LOCATE                            *
**********************************************************************
DOIT     DS    0H
         LA    R1,CATPARMS            POINT TO PARAMETER LIST
         CALLTSSR EP=IKJEHCIR,MF=(E,(R1)) CALL IT
**********************************************************************
*  CHECK THE RETURN CODE TO SEE WHAT THE STATUS OF THE LOCATE IS.    *
**********************************************************************
         CLI   RETURNC,0              CHECK IF SUCCESSFUL
         BZ    GOTNAMES               PUT OUT DSNAMES IF SUCCESSFUL
         CLI   RETURNC,40             WORK AREA TOO SMALL
         BE    TOOSMALL               GO ISSUE AN ERROR MESSAGE
         CLI   RETURNC,44             OTHER WAY TO SAY TOO SMALL
         BE    TOOSMALL               GO ISSUE AN ERROR MESSAGE
         B     NOTFOUND               GO ISSUE AN ERROR MESSAGE
         EJECT
**********************************************************************
*  LOOP THROUGH THE DATASET NAMES AND ISSUE A PUTLINE FOR EACH ONE.  *
**********************************************************************
GOTNAMES DS    0H
         LH    R5,USELEN               GET LENGTH OF RETURNED DATA
         N     R5,LOWBITS              KEEP LOW HALF WORD
         SH    R5,=H'4'                SUBTRACT OUT FIRST WORD
         LA    R7,LISTTYPE             POINT TO FIRST ENTRY
         USING SDATA,R7                WORK ADDRESSABILITY
         L     R8,CPPLUPT              SAVE ADDRESS OF THE UPT
         L     R4,CPPLECT              SAVE ADDRESS OF THE ECT
         CLI   NOHEAD+1,1              NO HEADINGS WANTED?
         BE    LOOP1                   THEN DON'T DISPLAY HEADINGS
         MVC   LINE+4(90),HEAD1        MOVE IN FIRST HEADING
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE,TERM,SINGLE,DATA),          X
               MF=(E,IOPLADS),UPT=(R8),ECT=(R4),ECB=MYECB
         MVC   LINE+4(90),HEAD2        MOVE IN SECOND HEADING
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE,TERM,SINGLE,DATA),          X
               MF=(E,IOPLADS),UPT=(R8),ECT=(R4),ECB=MYECB
LOOP1    DS    0H
         MVC   DSNAME,DATANAME         COPY DATA SET NAME
         MVC   LINE+4(44),DSNAME       MOVE IT TO THE OUTPUT LINE
CHECK    DS    0H
         MVC   PROFILE(44),BLANKS      BLANK OUT PROFILE NAME
*        LA    R2,LISTFORM             ADDRESS OF RACHECK MF=L
*        USING ACHKLIST,R2             RACHECK PARM LIST MAP
*        OI    ACHKFLG3,ACHKPRI        SET 'PRIVATE' BIT
*        DROP  R2                      NO MORE BASE
         MVC   MYCHECK(LISTLENG),LISTFORM   MOVE IN RACHECK LIST
         MODESET KEY=ZERO              BECOME A MINOR DEITY
         RACHECK ENTITY=(DSNAME,PRIVATE),MF=(E,MYCHECK)
         USING RRPF,R1                 RETURNED AREA ADDRESSABILITY
         C     R15,=X'00000004'        PROFILE NOT FOUND?
         BE    NOPROT                  NOPE, TELL ME
         C     R15,=X'00000008'        NOT AUTHORIZED?
         BE    GOTPROF                 TELL 'EM ANYWAY
         LTR   R15,R15                 CHECK IT AGAIN
         BNZ   RACFERR                 NO GOOD IF NOT ZERO
         B     GOTPROF                 LOOKS GOOD
NOPROT   DS    0H
         MVC   PROFILE(44),UNPROT      MOVE IN UNPROTECTED MSG
         B     FREEME                  GO FREEMAIN SP229
GOTPROF  MVC   PROFILE(44),DSPDSNM     COPY PROFILE NAME
FREEME   DS    0H
         MVC   GETLEN(3),RRPLEN        COPY SP229 LENGTH
         L     R0,GETLEN               LOAD TO R0
         SRL   R0,4                    SHIFT RIGHT FOR FULLWORD
         FREEMAIN R,LV=(R0),A=(R1),SP=229   FREE SP 229 FROM RACHECK
         MODESET KEY=NZERO             BECOME A PEASANT AGAIN
         MVC   LINE+50(44),PROFILE     MOVE IN PROFILE NAME
PUTIT    DS    0H
         PUTLINE PARM=PUTBLOK,OUTPUT=(LINE,TERM,SINGLE,DATA),          X
               MF=(E,IOPLADS),UPT=(R8),ECT=(R4),ECB=MYECB
NOVOLS   DS    0H
         LA    R7,ENTLE1(R7)           INCR TO NEXT ENTRY
         SH    R5,ENTLEN1              DECR REMAINING DATA
         LTR   R5,R5                   CHECK IF DONE
         BP    LOOP1                   CONTINUE IF NOT DONE
         B     AOK                     WE BE DONE NOW.
         EJECT
**********************************************************************
*  ISSUE MESSAGES INDICATING THE STATUS OF THE LOCATE REQUEST.       *
**********************************************************************
TOOSMALL MVC   MTMSGID(4),=CL4'LA01'   PUT MESSAGE CODE INTO PLIST
         LA    R2,12                   SYNTAX ERROR RETURN CODE
         B     INSERTRC                INSERT THE RC AND WRITE
NOTFOUND MVC   MTMSGID(4),=CL4'LA02'   PUT MESSAGE CODE INTO PLIST
         LA    R2,4                    SYNTAX ERROR RETURN CODE
         B     INSERTRC                INSERT THE RC AND WRITE
PARSEERR MVC   MTMSGID(4),=CL4'LA03'   PUT MESSAGE CODE INTO PLIST
         LA    R2,8                    PARSE ERROR RETURN CODE
         B     INSERTRC                INSERT THE RC AND WRITE
RACFERR  MVC   MTMSGID(4),=CL4'LA05'   PUT MESSAGE CODE INTO PLIST
         LA    R2,20                   PARSE ERROR RETURN CODE
         B     INSERTRC                INSERT THE RC AND WRITE
SYNERROR MVC   MTMSGID(4),=CL4'LA04'   PUT MESSAGE CODE INTO PLIST
         LA    R2,16                   SYNTAX ERROR RETURN CODE
         B     WRITEMSG                WRITE THE ERROR MESSAGE
AOK      LA    R2,0                    NORMAL RETURN CODE
         B     FREE                    EXIT WITHOUT ANY MESSAGE
INSERTRC ST    R15,MYINSRC             SAVE THE RETURN CODE
         LA    R1,MYINSRC              GET THE RETURN CODE ADDRESS
         STCM  R1,B'0111',MTADDR       PUT THE ADDRESS IN THE PLIST
         MVI   MTLEN,4                 LENGTH OF ENTRY IS 4 BYTES
         OI    MTHIGHL,X'80'           INDICATE TRANSLATION IS DESIRED
WRITEMSG CALLTSSR EP=IKJEFF02,MF=(E,MTPARML)     WRITE THE MESSAGE
         B     FREE                    GO FREE THE PDL AND EXIT
         EJECT
**********************************************************************
*  FREE GETMAINED STORAGE AND RETURN CONTROL TO THE TMP              *
**********************************************************************
FREE     IKJRLSA MYPDLA                RELEASE THE PDL STORAGE
EXIT     DS    0H
         LR    R1,R3                   STORAGE ADDRESS FOR IKJEHCIR
         L     R4,SHORTLN              SAVE STORAGE SIZE
         FREEMAIN RU,LV=(R4),A=(R1)    FREE IKJEHCIR WORK AREA
         LR    R1,R13                  GET THE WORK AREA POINTER
         L     R13,SAVEOLD             GET CALLER'S SAVE AREA
         FREEMAIN R,LV=WORKSIZE,A=(R1)  FREE OUR WORK AREA
         LR    R15,R2                  PUT THE RETURN CODE INTO R15
         ST    R15,SAVER15             SET RETURN CODE
         XC    SAVENEW(4),SAVENEW      CLEAR FORWARD CHAIN
         RETURN (14,12),RC=(15)        RESTORE REGISTERS AND RETURN
         EJECT
**********************************************************************
*  PARSE PARAMETER CONTROL LIST.                                     *
**********************************************************************
MYPCL    IKJPARM DSECT=MYPDL
MYDSN    IKJPOSIT DSNAME,PROMPT='THE CATALOG NODE(S) TO SEARCH FOR',   X
               HELP='COMPLETE, UNQUOTED CATALOG NODES TO SCAN FOR.'
NOHEAD   IKJKEYWD
         IKJNAME  'NOHEAD',ALIAS=('N','NO','NOHEAD','NOHEADING')
         IKJENDP
**********************************************************************
*  CONSTANTS AND SKELETONS.                                          *
**********************************************************************
LISTFORM RACHECK ENTITY=DSNAME,CLASS='DATASET',ATTR=READ,RELEASE=1.8,  X
               DSTYPE=N,LOG=NOSTAT,RACFIND=NO,GENERIC=ASIS,STATUS=NONE,X
               VOLSER=VOLUME,MF=L
LISTLENG EQU   *-LISTFORM              LENGTH OF RACHECK MACRO
PUTBLOK  PUTLINE MF=L                  DEFAULT PUTLINE MACRO, LIST FORM
MOVEPARM MVC   0(*-*,R2),0(R1)         EXECUTED MOVE INSTRUCTION
HEAD1    DC    CL90'CATALOGED DATA SET NAME                       PROTE+
               CTING RACF PROFILE'
HEAD2    DC    CL90'--------------------------------------------  -----+
               ---------------------------------------'
VOLUME   DC    CL6' '                  DUMMY VOLSER FOR RACHECK
UNPROT   DC    CL44'***** UNPROTECTED DATA SET *****'
BLANKS   DC    CL44' '                 BLANK SPACES
LINE     DC    H'90',H'0'              PUTLINE OUTPUT LENGTH/RSVD BYTE
         DC    CL90' '                 PUTLINE OUTPUT LINE
ENTLENG  DC    H'58'                   COUNTER
ENTLEN1  DC    H'45'                   COUNTER
DSNAME   DC    CL44' '                 RETURNED DATA SET NAME
LOCATE   DC    CL44' '                 NODES FROM COMMAND LINE
SHORTLN  DC    F'131064'               WORKAREA SIZE FOR LOCATES
LOWBITS  DC    F'65535'                LOW VALUES
CATPARMS DC    X'02'                   LOCATE OPTION - LOCATE ALL NAMES
CLEAR1   DC    XL2'0'                  RESERVED
RETURNC  DC    X'0'                    CATALOG RETURN CODE
CATARG   DC    A(LOCATE)               CATALOG SEARCH ARGUMENT
CLEAR2   DC    A(0)                    VOLSER OF CVOL
STORAGE  DC    A(0)                    WORK AREA ADDRESS
CATSAVE  DC    A(REGSAVE)              SAVE AREA
CLEAR3   DC    A(0)                    PASSWORD
ALIGNMNT DS    0D                      ALIGNMENT
REGSAVE  DS    16F                     REGISTER SAVE AREA
REGSAVE1 DS    16F                     REGISTER SAVE AREA
         LTORG
SDATA    DSECT
TYPEX    DS    CL1                     DATA SET TYPE
DATANAME DS    CL44                    RETURNED DATA SET NAME
ENTLE1   EQU   *-SDATA                 LENGTH OF CATALOG ENTRIES
MYALIST  DSECT
LISTLEN  DS    H                       LENGTH OF THIS BLOCK
USELEN   DS    H                       LENGTH OF BLOCK USED
LISTTYPE DS    CL1                     TYPE OF CATALOG ENTRY
LISTNAME DS    CL44                    DATA SET NAME ENTRY
         EJECT
**********************************************************************
*  COMMAND ERROR AND INFORMATIONAL MESSAGES.                         *
**********************************************************************
SETMYMSG CSECT
LOC001E  IKJTSMSG ('RAC001E TOO MANY ENTRIES - IKJEHCIR RC = ',),LA01
LOC002E  IKJTSMSG ('RAC002E CATALOG NODE(S) NOT FOUND - IKJEHCIR RC = 'X
               ,),LA02
LOC003E  IKJTSMSG ('RAC003E PARSE ERROR - IKJPARS RC =',),LA03
LOC004E  IKJTSMSG ('RAC004E SYNTAX ERROR. USE UNQUOTED NODES'),LA04
LOC005E  IKJTSMSG ('RAC005E ERROR CONDITION IN RACHECK'),LA05
         IKJTSMSG
         EJECT
**********************************************************************
*  SAVE AND WORK AREA.                                               *
**********************************************************************
WORKAREA DSECT
SAVEAREA DS    0F
SAVEPLI  DS    F                       USED BY PL/I PGMS
SAVEOLD  DS    F                       BACKWARD CHAIN
SAVENEW  DS    F                       FORWARD CHAIN
SAVER14  DS    F                       SAVE CALLER'S R0-15
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
SAVER2   DS    F
SAVER3   DS    F
SAVER4   DS    F
SAVER5   DS    F
SAVER6   DS    F
SAVER7   DS    F
SAVER8   DS    F
SAVER9   DS    F
SAVER10  DS    F
SAVER11  DS    F
SAVER12  DS    F
SAVESIZE EQU   *-SAVEAREA              SIZE OF THIS AREA
         DS    0F                      ALIGNMENT
GETLEN   DS    XL3                     SP229 GETMAINED LENGTH
MYPPL    DS    0F,CL(PPLSIZE)          PARSE PARAMETER LIST
MYECB    DS    F                       PARSE EVENT CONTROL BLOCK
IOPLADS  DS    4F'0'                   SPACE FOR IO PARM LIST
MYPDLA   DS    F                       PARSE ANSWER AREA ADDRESS
MYINSRC  DS    F                       RETURN CODE FOR INSERT
LOCLEN   DS    AL1                     LENGTH OF DATASET NAME
PROFILE  DS    CL44                    RETURNED PROFILE NAME
MYCHECK  RACHECK ENTITY=DSNAME,CLASS='DATASET',ATTR=READ,RELEASE=1.8,  X
               DSTYPE=N,LOG=NOSTAT,RACFIND=NO,GENERIC=ASIS,STATUS=NONE,X
               VOLSER=VOLUME,MF=L
         PRINT NOGEN
MYMSGPL  IKJEFFMT MTDSECT=NO           IKJEFF02 MESSAGE PARAMETER LIST
WORKSIZE EQU   *-WORKAREA
         IKJCPPL                       CMD PROC PARM LIST MAP
         IKJPPL                        PARSE PARM LIST MAP
PPLSIZE  EQU   *-PPL
         CVT   DSECT=YES,LIST=NO       COMMUNICATIONS VECTOR TABLE
         ICHRRPF                       RACF RESIDENT PROFILE MAP
         ICHACHKL                      RACHECK PARM LIST MAP
**********************************************************************
* REGISTER EQUATES                                                   *
**********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   RACFPROT
