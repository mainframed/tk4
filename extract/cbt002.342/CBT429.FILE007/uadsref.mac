1UADSREF: PROCEDURE OPTIONS (MAIN REENTRANT) REORDER;
0/*******************************************************************/
 /*                                                                 */
 /*  PROGRAM NAME -                                                 */
 /*                                                                 */
 /*     UADSREF                                                     */
 /*                                                                 */
 /*  FUNCTION -                                                     */
 /*                                                                 */
 /*     THIS PROGRAM READS THE SYS1.UADS DATASET AND PRODUCES       */
 /*     "ACCOUNT" CONTROL CARDS TO DELETE AND ADD USERIDS.          */
 /*                                                                 */
 /*  REQUIREMENTS -                                                 */
 /*                                                                 */
 /*     THIS PROGRAM REQUIRES THAT PL/I RELEASE 5.1 OR HIGHER       */
 /*     BE INSTALLED FOR EXECUTION.                                 */
 /*                                                                 */
 /*  SAMPLE JCL -                                                   */
 /*                                                                 */
 /*  //JOBNAME  JOB (ACCT DATA,'PROGRAMMER NAME',                   */
 /*  //         CLASS=X,MSGCLASS=X,NOTIFY=XXXXXX                    */
 /*  //UADSREF  EXEC PGM=UADSREF                                    */
 /*  //SYSPRINT  DD  SYSOUT=*                                       */
 /*  //SYSOUT    DD  SYSOUT=*                                       */
 /*  //PL1DUMP   DD  SYSOUT=*                                       */
 /*  //UADS      DD  DSN=SYS1.UADS(USERID0),DISP=SHR,DCB=(RECFM=U,  */
 /*  //             BLKSIZE=6192)                                   */
 /*                                                                 */
 /*******************************************************************/
1   DECLARE
       UADS FILE RECORD INPUT,
       SYSPRINT FILE PRINT,
       ACCOUNT FILE RECORD OUTPUT,
0      1 DHED BASED (HEDBPTR),
          2 UADSMHDR,
             3 UADSBLNG FIXED BIN (15),
             3 UADSFSQP FIXED BIN (15),
             3 UADSUSER CHAR (8),
             3 UADSBN01,
                4 UADSBN1R CHAR (1),
                4 UADSBN1F CHAR (1),
             3 UADSOMAX FIXED BIN (15),
             3 UADSATTR,
                4 UADSATR1 CHAR (1),
                4 UADSATR2 CHAR (1),
             3 UADSINST BIT (16) ALIGNED,
             3 UADSUPTP FIXED BIN (31),
             3 UADSPWD1 FIXED BIN (31),
             3 UADSPERP FIXED BIN (31),
             3 UADSDEST CHAR (8),
             3 UADSSUBH CHAR (1),
             3 UADSSUBC CHAR (1),
             3 UADSSUBM CHAR (1),
             3 UADSSOUT CHAR (1),
             3 UADSSUBR CHAR (1),
             3 UADSDRBA CHAR (3),
             3 UADSDFTP FIXED BIN (31),
             3 UADSMAXC FIXED BIN (31),
             3 UADSRSVD CHAR (8),
       HEDBPTR POINTER,
       OVLY_UADSENT (200) FIXED BIN (31),
       UADSENT CHAR (800) VAR BASED (HEDBPTR),
0      1 UADSNODE BASED (UADSNPTR),
          2 UADSNNFL CHAR (1),
          2 UADSNNEX CHAR (3),
          2 UADSNSUB FIXED BIN (31),
          2 UADSNDAT FIXED BIN (31),
       UADSNPTR POINTER,
       OVLY_NODE CHAR (12),
0      1 DPOPB BASED (UADSPPTR),
          2 UADSPCTR CHAR (1),
          2 UADSRSVD CHAR (3),
          2 UADSPPWD CHAR (8),
       UADSPPTR POINTER,
       OVLY_DPOPB CHAR (12),
0      1 DNOBD BASED (UADSAPTR),
          2 UADSACTR CHAR (1),
          2 UADSRSVD CHAR (3),
          2 UADSADRF CHAR (40),
          2 UADSALEN CHAR (1),
          2 UADSANUM CHAR (40 REFER (UADSALEN)),
       UADSAPTR POINTER,
       OVLY_DNOBD CHAR (85),
0      1 DROBD BASED (UADSRPTR),
          2 UADSRCTR CHAR (1),
          2 UADSRSVD CHAR (3),
          2 UADSRNAM CHAR (8),
          2 UADSRSIZ FIXED BIN (31),
          2 UADSUNAM CHAR (8),
       UADSRPTR POINTER,
       OVLY_DROBD CHAR (24),
0   OUT_REC CHAR (132) VAR,
0   SUBSTR BUILTIN,
    ADDR BUILTIN,
    LENGTH BUILTIN,
    LOW BUILTIN,
    UNSPEC BUILTIN;
1   HEDBPTR = ADDR (OVLY_UADSENT);
    UADSNPTR = ADDR (OVLY_NODE);
    UADSPPTR = ADDR (OVLY_DPOPB);
    UADSAPTR = ADDR (OVLY_DNOBD);
    UADSRPTR = ADDR (OVLY_DROBD);
    READ FILE (UADS) INTO (OVLY_UADSENT);
    OUT_REC = UADSUSER ×× ' USER ATTRIBUTES: ';
    IF UNSPEC (UADSATR1) & '10000000'B THEN
       OUT_REC = OUT_REC ×× '  OPER ';
    ELSE
       OUT_REC = OUT_REC ×× 'NOOPER ';
    IF UNSPEC (UADSATR1) & '01000000'B THEN
       OUT_REC = OUT_REC ×× '  ACCT ';
    ELSE
       OUT_REC = OUT_REC ×× 'NOACCT ';
    IF UNSPEC (UADSATR1) & '00100000'B THEN
       OUT_REC = OUT_REC ×× '  JCL ';
    ELSE
       OUT_REC = OUT_REC ×× 'NOJCL ';
    IF UNSPEC (UADSATR1) & '00010000'B THEN
       OUT_REC = OUT_REC ×× '  MOUNT ';
    ELSE
       OUT_REC = OUT_REC ×× 'NOMOUNT ';
    IF UNSPEC (UADSATR1) & '00000100'B THEN
       OUT_REC = OUT_REC ×× 'NORECOVER ';
    ELSE
       OUT_REC = OUT_REC ×× '  RECOVER ';
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    OUT_REC = (9) ' ' ×× 'INSTALLATION ATTRIBUTES (HEX): ' ××
       HEX (UADSINST);
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    OUT_REC = (9) ' ' ×× 'MAXSIZE: ';
    IF UADSMAXC = 0 THEN
       PUT FILE (SYSPRINT) EDIT (OUT_REC, 'NOLIM') (SKIP, (2) A);
    ELSE
       PUT FILE (SYSPRINT) EDIT (OUT_REC, UADSMAXC) (SKIP, A, F (6));
    OUT_REC = (9) ' ' ×× 'DESTINATION:   ';
    IF UADSDEST = LOW (8) THEN
       OUT_REC = OUT_REC ×× 'DEFAULT';
    ELSE
       OUT_REC = OUT_REC ×× UADSDEST;
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    OUT_REC = (9) ' ' ×× 'HOLD MSGCLASS: ';
    IF UADSSUBH = LOW (1) THEN
       OUT_REC = OUT_REC ×× 'DEFAULT';
    ELSE
       OUT_REC = OUT_REC ×× UADSSUBH;
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    OUT_REC = (9) ' ' ×× 'JOB CLASS:     ';
    IF UADSSUBC = LOW (1) THEN
       OUT_REC = OUT_REC ×× 'DEFAULT';
    ELSE
       OUT_REC = OUT_REC ×× UADSSUBC;
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    OUT_REC = (9) ' ' ×× 'MESSAGE CLASS: ';
    IF UADSSUBM = LOW (1) THEN
       OUT_REC = OUT_REC ×× 'DEFAULT';
    ELSE
       OUT_REC = OUT_REC ×× UADSSUBM;
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    OUT_REC = (9) ' ' ×× 'SYSOUT CLASS:  ';
    IF UADSSOUT = LOW (1) THEN
       OUT_REC = OUT_REC ×× 'DEFAULT';
    ELSE
       OUT_REC = OUT_REC ×× UADSSOUT;
    PUT FILE (SYSPRINT) EDIT (OUT_REC) (SKIP, A);
    RETURN;
1HEX: PROCEDURE (BIT_STRING) RETURNS (CHAR (512) VAR);
0/*******************************************************************/
 /*                                                                 */
 /*  FUNCTION NAME -                                                */
 /*                                                                 */
 /*     HEX                                                         */
 /*                                                                 */
 /*  FUNCTION -                                                     */
 /*                                                                 */
 /*     THIS FUNCTION RETURNS THE EBCDIC HEX REPRESENTATION OF THE  */
 /*     STRING PASSED TO IT.                                        */
 /*                                                                 */
 /*******************************************************************/
1   DECLARE
       BIT_STRING BIT (1024) VAR,
       CHAR_STRING CHAR (512) VAR,
0      BIT_LEN FIXED BIN (31),
       BIT_POS FIXED BIN (31),
0      CONV_CHARS (0 : 15) CHAR (1) STATIC
          INIT ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
          'A', 'B', 'C', 'D', 'E', 'F');
1   BIT_LEN = LENGTH (BIT_STRING);
    BIT_POS = 1;
    CHAR_STRING = '';
    DO WHILE (BIT_LEN > BIT_POS);
       CHAR_STRING = CHAR_STRING ××
          CONV_CHARS (SUBSTR (BIT_STRING, BIT_POS, 4));
       BIT_POS = BIT_POS + 4;
       END;
    RETURN (CHAR_STRING);
    END HEX;
    END UADSREF;
