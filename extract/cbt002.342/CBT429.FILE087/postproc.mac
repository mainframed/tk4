//D061001X JOB (00000000,06009,10),POSTPROC,MSGCLASS=Q,NOTIFY=D061001
//*
//* REF: D061001.SYSLOG(POSTPROC)
//* DOC: SYSLOG EXCEPTION REPORT POST-PROCESSOR PROGRAM
//*      THIS JOB ASSEMBLES,LINKS, AND TESTS THE PROGRAM "POSTPROC".
//*      SEE SOURCE CODE COMMENTS BELOW FOR ADDT'L INFO.
//*
//ASSEMBLE EXEC PGM=IFOX00,PARM='OBJ,TERM'
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1700,(600,100))
//SYSUT2   DD DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(1700,(300,50))
//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(1700,(300,50))
//SYSTERM  DD SYSOUT=*
//SYSPUNCH DD DUMMY
//SYSGO    DD DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),
//             DISP=(MOD,PASS)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
*
*   THIS PROGRAM PROCESSES THE OUTPUT FROM PROGRAM 'OPTIONE' FOR
*   THE SOLE PURPOSE OF CREATING A PAGE BREAK AT EACH CHANGE OF
*   THE SYSLOG IDENTIFIER (SYSLOG RECORD COLUMNS 1 THRU 5).
*   SEE SOURCE CODE 'OPTIONE' COMMENTS FOR ADDT'L INFO.
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
POSTPROC CSECT
         STM   14,12,12(13)
         BALR  9,0
         USING *,9
         ST    13,SAVEAREA+4
         LA    12,SAVEAREA
         ST    12,8(13)
         LR    13,12
STARTPR  OPEN  (SYSUT1,,SYSUT2,(OUTPUT))
READ     MVI   RECORD,X'40'
         MVC   RECORD+1(132),RECORD
         GET   SYSUT1,RECORD
         CLC   RECORD(5),CURRENT   DO WE HAVE A NEW SORT RECORD ID?
         BE    SAMEID              NO. GO PRINT IT (WITHOUT ASA)
         MVC   CURRENT(5),RECORD   SAVE NEW CURRENT SORTID
         MVC   PRTLINE+1(132),RECORD
         MVC   PRTLINE(1),=C'1'    MOVE ASA PAGE BREAK INTO PRINT LINE
         PUT   SYSUT2,PRTLINE      PRINT RECORD
         MVI   PRTLINE,X'40'
         MVC   PRTLINE+1(132),PRTLINE
         B     READ
SAMEID   MVC   PRTLINE+1(132),RECORD
         PUT   SYSUT2,PRTLINE   PRINT RECORD
         MVI   PRTLINE,X'40'
         MVC   PRTLINE+1(132),PRTLINE   CLEAR PRINT LINE
         B     READ
EOF      CLOSE (SYSUT1,,SYSUT2)
         L     13,SAVEAREA+4
         LM    0,12,20(13)
         L     14,12(13)
         BR    14
         EJECT
         LTORG
RECORD   DS    CL133' '
PRTLINE  DS    CL133' '
CURRENT  DS    CL5' '
SAVEAREA DC    18F'0'
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=EOF,              X
               BLKSIZE=133,LRECL=133,RECFM=F
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,BLKSIZE=133,RECFM=FA,   X
               LRECL=133
         END
/*
//LINKEDT EXEC PGM=IEWL,COND=(4,LT),
//         PARM='LIST,XREF,LET',REGION=650K
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(1700,(400,50))
//SYSLMOD  DD  DISP=SHR,DSN=D061001.LOAD
//OBJSET   DD  DSN=&&OBJSET,DISP=(OLD,DELETE,DELETE)
//SYSLIN   DD  *
 INCLUDE OBJSET
 NAME POSTPROC(R)
//*
//OPTIONE  EXEC PGM=OPTIONE,REGION=300K,TIME=2
//STEPLIB DD DSN=D061001.LOAD,DISP=SHR
//SYSUT1 DD DSN=D061001.SYSLOGD,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSUT2 DD DISP=(,PASS),DSN=&&SYSLOG,SPACE=(CYL,(1,1),RLSE),UNIT=SYSDA
//SYSUDUMP  DD SYSOUT=*
//*
//SORT EXEC PGM=SORT,REGION=1000K,COND=(0,NE,OPTIONE)
//SORTLIB DD DISP=SHR,DSN=SYS1.SORTLIB
//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(2,1))
//SORTIN DD UNIT=SYSDA,DSN=&&SYSLOG,DISP=(OLD,DELETE)
//SORTOUT DD UNIT=SYSDA,DSN=&&SORTOUT,SPACE=(TRK,(30,10)),DISP=(,PASS),
// DCB=(RECFM=F,BLKSIZE=133)
//SYSOUT  DD SYSOUT=*
//SYSIN   DD *
 SORT FIELDS=(1,5,CH,A,7,3,CH,A,8,11,CH,A)
/*
//POSTPROC EXEC PGM=POSTPROC,REGION=300K,TIME=2,COND=(0,NE,SORT)
//STEPLIB DD DSN=D061001.LOAD,DISP=SHR
//SYSUT1 DD DSN=&&SORTOUT,UNIT=SYSDA,DISP=(OLD,DELETE)
//SYSUT2 DD SYSOUT=*,DCB=(RECFM=FA,BLKSIZE=133)
//SYSPRINT DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//* END OF D061001.SYSLOG(POSTPROC) JOBSTREAM
