************************************************************************
*
*  REFER: D061001.SYSLOG(LOGSCAN)
*  DOC  : MVS SYSLOG EXTRACT PROGRAM (LOADMOD=LOGSCAN)
*         JOBSTREAM 'LOGASMCL' COMPILES AND LINKS THIS CODE
*         MARK DIEHL - HERCULES/ALLEGANY BALLISTICS LAB (ABL)
*
*  THIS VERSION OF THE SYSLOG SCAN WAS CREATED BY MODIFYING THE
*  ORIGINAL SE/2 VERSION SO IT WILL WORK USING SP/3 SYSLOG DATA.
*  VERY FEW CHANGES WERE REQUIRED TO MAKE THE PROGRAM WORK ON SP.
*  A FEW OFFSET CHANGES WHERE THE DATE AND TIME ARE SCANNED PLUS A
*  CHANGE IN THE 'D T' MSG ID IEE104I ( WAS IEE102I IN SE/2) SCAN.
*
*  THIS VERSION SCANS THE ENTIRE SYSLOG TAPE INSTEAD OF READING
*  UNTIL THE DESIRED DATE AND TIME IS LESS THAN THE TIME STAMP ON
*  THE TAPE. THE TAPE CAN GET OUT OF SEQUENCE FOR VARIOUS REASONS
*  SINCE THE EXTERNAL WRITER DOES NOT NECESSARILY WRITE THE LOGS
*  TO TAPE IN THE SAME ORDER IN WHICH THEY WERE CREATED. (E.G., IPL)
*
*
*  PRIOR TO THE INTEGRATION OF THIS PROGRAM INTO AN ISPF APPLICATION,
*  (AND ISPF'S ACCOMPANYING INPUT VALIDATION CAPABILITIES) PARM VALIDITY
*  CHECKING WAS DONE BY THIS PROGRAM (AS INDICATED BY THE VARIOUS CC'S
*  BELOW).  ISPF NOW DOES THE PARM VALIDITY CHECKING IN THE PANELS BUT
*  THIS CODE CONTINUES TO DO THE SAME CHECKING IN CASE SOME SOUL HAS AN
*  OLD JCL DECK AROUND FROM THE PRE-ISPF DAYS.
*
*  PGM ABEND CODES            MESSAGE
*           1        INVALID LENGTH PARM
*           2        INVALID JULIAN DATE IN PARM
*           3        INVALID STARTING HOUR IN PARM
*           4        SEARCH ARGUMENT LONGER THAN 18 CHARS
*           5        NUMBER OF HOURS TO PRINT EQUALS ZERO
*
*  NOTE THAT THE EFFECTIVE DATE RANGE OF A REPORT PRODUCED BY THIS PGM
*  IS FOUR DAYS.  THIS IS BECAUSE THE ENDING DATE/TIME IS DERIVED BY
*  ADDING THE 'NUMBER OF HOURS TO REPORT' TO THE 'BEGIN HOUR' VALUE.
*  THESE TWO FIELDS ARE TWO BYTES EACH, HENCE A MAX '# HOURS' OF 99
*  WOULD BE FOUR DAYS PLUS 3 HOURS (99/24).  THIS IMPOSED RANGE OF 4
*  DAYS WORKS WELL IN OUR SHOP.   IT ALSO KEEPS THE USER OF THE SYSLOG
*  APPLICATION HONEST BY PREVENTING THEM FROM PRODUCING LARGE REPORTS.
*  AN ALTERNATIVE, SHOULD THIS 'RESTRICTION' PREVENT ONE FROM ACCESSING
*  THE NEEDED SYSLOG DATA, IS TO RUN JOBSTREAM 'PRINTLOG' THEN USE
*  SPF 3.8 OPTION 'O' TO STASH THE JOB AS AN ONLINE DATASET THEN USE
*  SPF BROWSE TO FIND THE DESIRED DATA.
*
************************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
SYSLOGSP CSECT
         STM   14,12,12(13)
         BALR  9,0
         USING *,9
         ST    13,SAVEAREA+4
         LA    12,SAVEAREA
         ST    12,8(13)
         LR    13,12
         B     PROCPARM
         DC    C'&SYSDATE'
PROCPARM L     R1,0(R1)           LOAD ADDRESS OF PARM
         LH    R2,0(R1)           LOAD LENGTH OF PARM
         CH    R2,=H'5'           SEE IF AT LEAST 5 CHARS
         BL    ERROR1             NO,ERROR
         MVC   BEGDT,2(R1)        SAVE JULIAN DATE
         PACK  WORK3,BEGDT        PACK BEGINNING DATE
         CP    WORK3,=P'366'      SEE IF DATE GT 366
         BH    ERROR2             YES,ERROR
         MVC   BEGHR,5(R1)        SAVE BEGIN HOUR
         PACK  WORK1,BEGHR        PACK BEGIN HOUR
         CP    WORK1,=P'24'       SEE IF START HOUR GT 23
         BNL   ERROR3             YES,ERROR
         ZAP   WORK2,=P'2'        SET DEFAULT # HRS TO PRINT
         CH    R2,=H'7'           SEE IF # HRS SPECIFIED
         BL    DEFHRS             NO,BRANCH
         PACK  WORK2,7(2,R1)      PACK # HRS
         CP    WORK2,=P'0'        SEE IF # HRS SPECIFIED EQ 0
         BE    ERROR5             YES, ERROR
DEFHRS   SP    WORK2,=P'1'        SUBTRACT 1 FROM HOURS
         AP    WORK1,WORK2        ADD BEGIN HRS TO # HRS
DAYLOOP  CP    WORK1,=P'24'       HOURS GT 24
         BL    DTEND              YES, GET OUT
         SP    WORK1,=P'24'       SUBTRACT 24 HOURS
         AP    WORK3,=P'1'        ADD 1 TO ENDING DATE
         B     DAYLOOP            LOOP
DTEND    CP    WORK3,=P'366'      SEE IF END DATE GT 366
         BNH   GOODATE            NO, BRANCH
         WTO   'ENDING DATE CANNOT CROSS YEAR BOUNDARY',ROUTCDE=11
         WTO   'ENDING DATE ASSUMED DAY 366 HOUR 24',ROUTCDE=11
         ZAP   WORK3,=P'366'      SET END DATE TO 366
         ZAP   WORK1,=P'24'       SET END HOUR TO 24
GOODATE  UNPK  ENDDT,WORK3        UNPACK ENDING DATE
         OI    ENDDT+2,X'F0'      MAKE DATE PRINTABLE
         UNPK  ENDHR,WORK1        UNPACK ENDING HOUR
         OI    ENDHR+1,X'F0'      MAKE HOUR PRINTABLE
         CH    R2,=H'7'           SEE IF SEARCH ARGUMENT PRESENT
         BNH   STARTPR            NO, BRANCH
         OI    SWITCH,SEARCH      TURN ON SEARCH ARG SWITCH
         SH    R2,=H'8'           SUBTRACT 8 FOR MATCHING LENGTH OF ARG
         CH    R2,=H'17'          SEE IF ARG  LENGTH GT 18
         BH    ERROR4             YES, ERROR
         EX    R2,MOVEARG         SAVE SEARCH ARGUMENT
         STH   R2,ARGLEN          SAVE ARGUMENT MACHINE LENGTH
         B     STARTPR            GO START PROCESSING
MOVEARG  MVC   ARGUMENT(0),9(R1)        ***EXECUTE ONLY****
STARTPR  OPEN  (SYSUT1,,SYSUT2,(OUTPUT))
READ     GET   SYSUT1             READ SYSLOG
         LA    R1,4(R1)           INCREMENT R1 BY 4 TO BYPASS RDW
         CLC   25(7,R1),=C'IEE136I'  IS THIS A 'D T' DATE STAMP?
         BE    DATE1              YES, GO PROCESS IT
         CLC   25(7,R1),=C'IEE104I'  IS THIS A 'D A,L' DATE STAMP?
         BE DATE2                 YES, GO PROCESS IT
         TM    SWITCH,PRDATE      WAS OUR LAST DATE WITHIN RANGE ?
         BNO   READ               NO, DROP THE RECORD
         CLI   8(R1),C'.'         DOES THIS RECORD HAVE A TIME STAMP?
         BE    CKTIME             YES, GO CHECK TIME
CKLAST   TM    SWITCH,PRLAST      DID WE PRINT THE LAST LINE ?
         BNO   READ               NO, DROP THE RECORD
         B     WRITE              GO GET READY TO PRINT IT
CKTIME   CLC   6(8,R1),=C'00.00.00'  SEE IF TIME = '00.00.00'
         BE    CKLAST             YES, IGNORE TIME STAMP
         CLC   6(2,R1),CURHR      SEE IF HOUR HAS CHANGED
         BE    CKLAST             NO, GO SEE IF PREVIOUS WAS PRINTED
         BH    INCREASE           INCREASED, NO DATE CHANGE ASSUMED
DECREASE CLC   6(2,R1),=C'00'     SEE IF NEW HOUR COULD BE NEW DAY
         BNE   INCREASE           PROBABLY NOT, ASSUME SAME DATE
         MVC   CURHR,6(R1)        SAVE HOUR
         PACK  WORK3,CURDT        PACK CURRENT DATE
         AP    WORK3,=P'1'        ADD 1 TO CURRENT DATE FOR DAY CHANGE
         UNPK  CURDT,WORK3        UNPACK NEW CURRENT DATE
         OI    CURDT+2,X'F0'      MAKE NEW CURRENT DATE PRINTABLE
         OI    SWITCH,PRDATE+PRLAST  TURN OFF
         XI    SWITCH,PRDATE+PRLAST    DATE AND RECORD PROC INDICATORS
         CLC   CURDT,BEGDT        SEE IF NEW DATE GT BEGIN DATE
         BL    READ               NO,BYPASS UNTIL NEXT DATE RECORD
         CLC   CURDT,ENDDT        SEE IF NEW DATE LT NEXT DATE RECORD
         BH    READ               NO, BYPASS UNTIL NEXT DATE RECORD
         OI    SWITCH,PRDATE      TURN ON DATE WITHIN RANGE INDICATOR
INCREASE MVC   CURHR,6(R1)        SAVE HOUR
         CLC   CURTIME,STARTIME   SEE IF NEW TIME GT START TIME
         BL    NOPRINT            NO, SET TO NOT PRINT
         CLC   CURTIME,ENDTIME    SEE IT NEW TIME LT ENDING TIME
         BNH   WRITE              YES, GO GET READY TO PRINT IT
NOPRINT  OI    SWITCH,PRLAST      RESET
         XI    SWITCH,PRLAST      PROCESS PRINT INDICATOR
         B     READ               GO READ NEXT RECORD
DATE1    MVC   NEWDT,62(R1)       SAVE DATE
         MVC   NEWHR,45(R1)       SAVE HOUR
         B     PROCDATE           GO PROCESS NEW DATE
DATE2    MVC   NEWDT,45(R1)       SAVE DATE
         MVC   NEWHR,33(R1)       SAVE HOUR
PROCDATE OI    SWITCH,PRDATE+PRLAST    TURN OFF THE
         XI    SWITCH,PRDATE+PRLAST    DATE AND RECORD PROC INDICATORS
         MVC   CURDT,NEWDT        SAVE DATE
         MVC   CURHR,NEWHR        SAVE HOUR
         CLC   CURTIME,LOWTIME    SEE IF NEW LOWEST TIME PROCESSED
         BH    NEXTIME            NO, BRANCH
         MVC   LOWTIME,CURTIME    MAKE CURRENT NEW LOW TIME
NEXTIME  CLC   CURTIME,HIGHTIME   SEE IF NEW HIGHEST TIME PROCESSED
         BL    CONTIME1           NO, BRANCH
         MVC   HIGHTIME,CURTIME   MAKE CURRENT NEW HIGH TIME
CONTIME1 CLC   CURDT,BEGDT        SEE IF NEW DATE GT BEGIN DATE
         BL    READ               NO, BYPASS UNTIL NEXT DATE RECORD
         CLC   CURDT,ENDDT        SEE IF NEW DATE LT END DATE
         BH    READ               NO, BYPASS UNTIL NEXT DATE RECORD
         OI    SWITCH,DTFOUND     TURN ON DATE FOUND INDICATOR
         OI    SWITCH,PRDATE      TURN ON DATE WITHIN RANGE INDICATOR
         CLC   CURTIME,STARTIME   SEE IF NEW TIME GT BEGIN TIME
         BL    READ               NO, DROP THE RECORD
         CLC   CURTIME,ENDTIME    SEE IF NEW TIME LT END TIME
         BH    READ               NO, DROP THE RECORD
WRITE    OI    SWITCH,PRDATE      TURN ON DATE WITHIN RANGE INDICATOR
         OI    SWITCH,PRLAST      TURN ON RECORD PROCESSED INDICATOR
         LR    R11,R1             SAVE INPUT RECORD ADDRESS
         SH    R1,=H'4'           RESET R1 TO BEGINNING OF RECORD
         TM    SWITCH,SEARCH      SEARCH ARGUMENT ?
         BNO   PRINT              NO, GO PRINT IT
         LH    R3,0(R1)           LOAD LRECL
         LH    R4,ARGLEN          LOAD ARGUMENT LENGTH
         SR    R3,R4              FIND # OF POSSIBLE STRINGS
COMPLOOP EX    R4,COMPARE         COMPARE FOR ARGUMENT
         BE    PRINT              FOUND IT, NOW GO PRINT IT
         LA    R11,1(R11)         INCREMENT COMPARE ADDRESS
         BCT   R3,COMPLOOP        LOOP
         B     READ               ARGUMENT NOT FOUND, DROP THE RECORD
COMPARE  CLC   ARGUMENT(0),0(R11)    ****EXECUTE ONLY ****
PRINT    LR    R0,R1              SET RECD ADDRESS
         PUT   SYSUT2             PRINT IT
         AP    RECNT,=P'1'        ADD 1 TO RECORD COUNT
         B     READ               GO GET NEXT RECORD
EOF      MVC   WTO1+28(3),BEGDT   MOVE BEGIN DATE TO WTO
         MVC   WTO1+37(2),BEGHR   MOVE BEGIN HOUR TO WTO
         MVC   WTO1+53(3),ENDDT   MOVE ENDING DATE TO WTO
         MVC   WTO1+62(2),ENDHR   MOVE ENDING HOUR TO WTO
         WTO   ' ',ROUTCDE=11
         WTO   'THE RANGE REQUESTED TO BE SEARCHED IS:',ROUTCDE=11
WTO1     WTO   '       - BEGIN DATE=XXX TIME=XX  ENDING DATE=XXX TIME=XX
               X',ROUTCDE=11
         TM    SWITCH,SEARCH      WAS SEARCH ARGUMENT SPECIFIED ?
         BNO   NOWTO2             NO, BYPASS WTO
         MVC   WTO2+24(30),ARGUMENT   MOVE ARGUMENT STRING TO WTO
WTO2     WTO   'SEARCH ARGUMENT=                               ',      X
               ROUTCDE=11
NOWTO2   MVC   WTO3+28(3),LOWDT   MOVE LOWEST DATE TO WTO
         MVC   WTO3+37(2),LOWHR   MOVE LOWEST HOUR TO WTO
         MVC   WTO3+53(3),HIGHDT  MOVE HIGHEST DATE TO WTO
         MVC   WTO3+62(2),HIGHHR  MOVE HIGHEST HOUR TO WTO
         WTO   ' ',ROUTCDE=11
         WTO   'THE SYSLOG DATA RANGE THAT WAS SEARCHED IS:',ROUTCDE=11
WTO3     WTO   '       - LOW   DATE=XXX TIME=XX  HIGH   DATE=XXX TIME=XX
               X',ROUTCDE=11
         TM    SWITCH,DTFOUND     SEE IF DATE MATCH FOUND
         BO    EOF1               YES, BRANCH
WTO4     WTO   'REQUESTED DATE NOT FOUND ON TAPE',ROUTCDE=11
         OI    SWITCH,ERROR       TURN ON ERROR INDICATOR
EOF1     CP    RECNT,=P'0'        SEE IF ANY RECORDS PRINTED
         BNE   CLOSE              YES, BRANCH
WTO5     WTO   'NO SYSLOG RECORDS PRINTED',ROUTCDE=11
         OI    SWITCH,ERROR       TURN ON ERROR INDICATOR
CLOSE    CLOSE (SYSUT1,,SYSUT2)   CLOSE FILES
         LA    R15,0              SET RETURN CODE TO ZERO
         TM    SWITCH,ERROR       SEE IF ERROR OCCURRED
         BNO   REAR               NO, KEEP ZERO RETURN CODE
         LA    R15,16             SET RETURN CODE TO 16
REAR     L     13,SAVEAREA+4
         LM    0,12,20(13)
         L     14,12(13)
         BR    14
         EJECT
ERROR1   WTO   'PARM MUST START WITH 3 CHAR JULIAN DATE AND 2 CHAR STARX
               TING HOUR',ROUTCDE=11
         ABEND 1
ERROR2   WTO   'JULIAN DATE IN PARM GREATER THAN 366',ROUTCDE=11
         ABEND 2
ERROR3   WTO   'STARTING HOUR IN PARM GREATER THAN 23',ROUTCDE=11
         ABEND 3
ERROR4   WTO   'SEARCH ARGUMENT CANNOT EXCEED 18 CHARACTERS',ROUTCDE=11
         ABEND 4
ERROR5   WTO   'NUMBER OF HOURS TO PRINT CANNOT BE ZERO',ROUTCDE=11
         ABEND 5
         EJECT
         LTORG
WORK1    DC    PL2'0'
WORK2    DC    PL2'0'
WORK3    DC    PL2'0'
STARTIME DS    0CL5
BEGDT    DC    CL3'000'
BEGHR    DC    CL2'00'
ENDTIME  DS    0CL5
ENDDT    DC    CL3'000'
ENDHR    DC    CL2'00'
CURTIME  DS    0CL5
CURDT    DC    CL3'000'
CURHR    DC    CL2'00'
NEWTIME  DS    0CL5
NEWDT    DC    CL3'000'
NEWHR    DC    CL2'00'
LOWTIME  DS    0CL5
LOWDT    DC    XL3'FFFFFF'
LOWHR    DC    XL2'FFFF'
HIGHTIME DS    0CL5
HIGHDT   DC    XL3'000000'
HIGHHR   DC    XL2'0000'
SWITCH   DC    XL1'00'
PRDATE   EQU   1
PRLAST   EQU   2
DTFOUND  EQU   4
ERROR    EQU   8
SEARCH   EQU   16
RECNT    DC    PL6'0'
ARGLEN   DC    H'0'
ARGUMENT DC    CL30' '
SAVEAREA DC    18F'0'
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOF,              X
               BLKSIZE=32760,LRECL=133,RECFM=VBA
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,BLKSIZE=137,RECFM=VBA,  X
               LRECL=133
         END
