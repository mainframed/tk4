./       ADD   NAME=$AMODE
         MACRO
&LABEL  $AMODE &MODE,&REG=R3,&SAVE=,&RESET=
&SP      SETC  'SP'.'&SYSNDX'
         AIF   (T'&MODE EQ 'O').MODEOK
         AIF   ('&MODE' EQ '24' OR '&MODE' EQ '31').MODEOK
         MNOTE 12,'*** INVALID AMODE SPECIFIED.'
         MEXIT
.MODEOK  ANOP
         AIF   (T'&LABEL EQ 'O').NOLABEL
&LABEL   DS    0H
.NOLABEL ANOP
         L     &REG,16
         TM    CVTDCB-CVTMAP(&REG),CVTMVSE
         BZ    &SP
         AIF   (T'&SAVE EQ 'O').NOSAVE
         SR    &REG,&REG
         BSM   &REG,0
         ST    &REG,&SAVE
.NOSAVE  ANOP
         AIF   (T'&RESET EQ 'O').SET
         L     &REG,&RESET
         O     &REG,=AL4(*+6)
         BSM   0,&REG
         AGO   .AMODE99
.SET     ANOP
         AIF   ('&MODE' EQ '31').TO31
         L     &REG,=AL4(*+6)
         BSM   0,&REG
         AGO   .AMODE99
.TO31    ANOP
         L     &REG,=AL4(*+6+X'80000000')
         BSM   0,&REG
.AMODE99 ANOP
&SP      DS    0H
         MEND
./       ADD   NAME=$EPILOG
         MACRO
&LABEL   $EPILOG &RC
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
./       ADD   NAME=$EXEC
//LANEJ     JOB LANEJ,$EXEC,NOTIFY=LANEJ,REGION=6M,
//*        USER=IBMUSER,
//         MSGLEVEL=(1,1),MSGCLASS=X,CLASS=C
//JOBLIB DD DSN=TECTSG.ISPFJCL.LOAD,DISP=SHR
//*PORTRAIT OUTPUT PAGEDEF=A16D,FORMDEF=A16D DEFAULT=YES
//*TWOUP    OUTPUT PAGEDEF=A26D,FORMDEF=A26D DEFAULT=YES
//*FOURUP   OUTPUT PAGEDEF=U46D,FORMDEF=U46D DEFAULT=YES
//*-------------------------------------------------------------*
//*   THIS JCL IS IN:        LANEJ.TECTSG.SMPELIST($EXEC)
//*-------------------------------------------------------------*
// EXEC PGM=LISTCSI,REGION=4000K
//SYSPRINT DD DSN=LANEJ.FM,DISP=SHR
//SYSUDUMP DD SYSOUT=*
//SMPCSI   DD DSN=MVSESA.MVSP.SMPCSI.CSI,
//         DISP=SHR
./       ADD   NAME=$IDCAMS
//TSGJCL  JOB T50000,LANE,
//         NOTIFY=TSGJCL,MSGCLASS=X,CLASS=X
// EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//RMF DD DSN=MVST.V1R5.CSI,DISP=SHR
//SYSIN DD *
 PRINT IFILE(RMF) FROMKEY(X'00016F00E4E8F3')  COUNT(256)
./       ADD   NAME=$PELIST
//TSGJCLA   JOB  (T50000),'TSGJCL ',
//          NOTIFY=TSGJCL,MSGCLASS=X,CLASS=Z
//STEP1     EXEC PGM=PELIST,PARM=(MVST,MVSD)
//STEPLIB   DD   DSN=TSGJCL.SYSTEMS.LOAD,DISP=SHR
//GLBLCSI   DD   DSN=GLOBAL.V1R5.CSI,DISP=SHR
//TARGCSI   DD   DSN=MVST.V1R5.CSI,DISP=SHR
//DISTCSI   DD   DSN=MVSD.V1R5.CSI,DISP=SHR
//WRKDISK   DD   DSN=&&WORK,DISP=(,PASS,DELETE),
//          UNIT=WORK,
//          SPACE=(3120,(100,50)),
//          DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//DISKIN    DD   DDNAME=WRKDISK
//REPORT    DD   SYSOUT=*
//SYSOUT    DD   SYSOUT=*
./       ADD   NAME=$PROLOG
         MACRO
&LABEL   $PROLOG &LV=0
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
         $REGS
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
./       ADD   NAME=$REGS
         MACRO
         $REGS
         GBLB  &PRORG
         AIF   (&PRORG).MEX2
&PRORG   SETB  1
 SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
 SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
 SPACE
.MEX2    ANOP
       MEND
./       ADD   NAME=#RTN
         MACRO
&LABEL   #RTN
.*---------------------------------------------------------------------
.*
.*       STANDARD RETURN MACRO
.*
.*---------------------------------------------------------------------
         L     R13,4(R13)         GET BACK CHAIN POINTER
         ST    R15,16(R13)        SAVE REGISTER 15 (RETCODE)
         LM    R14,R12,12(R13)    RESTORE CALLERS REGS
         BR    R14                RETURN TO CALLER
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
.*
.*       FREEWARE: THIS MACRO IS DISTRIBUTED ON AN AS-IS BASIS
.*                 WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
.*
.*                 THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
.*                 P.O. BOX 21525
.*                 GREENFIELD, WI 53221
.*
.*
.*       MACRO WRITTEN BY:
.*
.*                 PRODUCTIVITY SYSTEMS, INC.
.*                 MILWAUKEE, WI
.*
.*---------------------------------------------------------------------
.*
.*    THIS MACRO HAS MET A BASIC SET OF PROGRAMMING AND
.*    DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
.*    FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
.*    EVALUATION OF THE USE OF THIS MACRO IN THEIR ENVIRONMENT.
.*
.*    NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
.*    FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
.*    FUNCTION, RESULTS, OR PERFORMANCE OF THIS MACRO.
.*
.*    IMPLEMENTATION AND USE OF THIS MACRO CONSTITUTES A RELEASE
.*    FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
.*    THIS MACRO AT THE USER'S INSTALLATION.
.*
.*    THIS MACRO IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
.*    RECIPIENTS ARE FREE TO MAKE THIS MACRO AVAILABLE TO OTHERS IN
.*    LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
.*    NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
.*    INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
.*    INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
.*
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
         MEND
./       ADD   NAME=#SLC
         MACRO
&LABEL   #SLC
.*---------------------------------------------------------------------
.*
.*       STANDARD LINKAGE MACRO
.*
.*---------------------------------------------------------------------
         LCLA  &AA,&BB,&CC
&AA      SETA  1
&LABEL   CSECT
         SAVE  (14,12),,'&LABEL &SYSPARM &SYSDATE &SYSTIME '
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
         LR    &SYSLIST(1),R15    SET BASE
         LA    R1,SAVEAREA
         B     START
SAVEAREA DC    18F'0'
START    EQU   *
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         L     R1,24(R13)          RESTORE REG 1
         LA    R13,SAVEAREA        SET SAVEAREA POINTER
.LOOP    ANOP
&AA      SETA  &AA+1
&CC      SETA  &CC+4096
         AIF   (&AA GT N'&SYSLIST).DONE
&BB      SETA  &AA-1
         USING &LABEL+&CC,&SYSLIST(&AA) INFORM ASSEMBLER
         LA    &SYSLIST(&AA),2048(&SYSLIST(&BB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         AGO   .LOOP
.DONE    ANOP
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
.*
.*       FREEWARE: THIS MACRO IS DISTRIBUTED ON AN AS-IS BASIS
.*                 WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
.*
.*                 THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
.*                 P.O. BOX 21525
.*                 GREENFIELD, WI 53221
.*
.*
.*       MACRO WRITTEN BY:
.*
.*                 PRODUCTIVITY SYSTEMS, INC.
.*                 MILWAUKEE, WI
.*
.*---------------------------------------------------------------------
.*
.*    THIS MACRO HAS MET A BASIC SET OF PROGRAMMING AND
.*    DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
.*    FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
.*    EVALUATION OF THE USE OF THIS MACRO IN THEIR ENVIRONMENT.
.*
.*    NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
.*    FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
.*    FUNCTION, RESULTS, OR PERFORMANCE OF THIS MACRO.
.*
.*    IMPLEMENTATION AND USE OF THIS MACRO CONSTITUTES A RELEASE
.*    FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
.*    THIS MACRO AT THE USER'S INSTALLATION.
.*
.*    THIS MACRO IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
.*    RECIPIENTS ARE FREE TO MAKE THIS MACRO AVAILABLE TO OTHERS IN
.*    LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
.*    NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
.*    INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
.*    INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
.*
.*---------------------------------------------------------------------
.*---------------------------------------------------------------------
         MEND
./       ADD   NAME=GIMMAC
         MACRO
         GIMMAC
         PUSH  PRINT
         PRINT GEN
GMAC     DSECT ,
GMAIDENT DS    XL4                 00013040 IDENTIFIES A MACRO     @L05
GMANAME  DS    CL8                 MACRO NAME
GMASUBID DS    XL2                 MACRO SUBTYPE IDENTIFIER        @L05
GMASELF  EQU   X'0100'             SELF-DEFINING ENTRY             @L05
GMAFMID  EQU   X'0120'             FMID THAT THE MAC BELONGS TO    @L05
GMARMID  EQU   X'0130'             SYSMOD LAST REPLACED THE MACRO  @L05
GMALSTUP EQU   X'0D90'             LAST UPDATE                     @L05
GMASLIB  EQU   X'0DD0'             SYSLIB THE MACRO GOES INTO      @L05
GMADLIB  EQU   X'1F00'             DISTLIB THE MACRO LIVES IN      @L05
GMARESV2 DS    XL2                 ??
GMADATA1 DS    CL8                 VARIABLE DATA
         POP   PRINT
         MEND
./       ADD   NAME=GIMMOD
         MACRO
         GIMMOD
         PUSH  PRINT
         PRINT GEN
GMOD     DSECT ,
GMOIDENT DS    XL4                 00013030 IDENTIFIES A MOD       @L05
GMONAME  DS    CL8                 MODULE NAME
GMOSUBID DS    XL2                 MODULE SUBTYPE IDENTIFIER       @L05
GMOSELF  EQU   X'0100'             SELF-DEFINING ENTRY             @L05
GMOFMID  EQU   X'0120'             FMID THAT THE MOD BELONGS TO    @L05
GMORMID  EQU   X'0130'             SYSMOD LAST REPLACED THE MODULE @L05
GMOLSTUP EQU   X'0D90'             LAST UPDATE                     @L05
GMODLIB  EQU   X'1F00'             DISTLIB THE MODULES LIVES IN    @L05
GMOCSECT EQU   X'2130'             A CSECT WITHIN THE MODULE       @L05
GMOLMOD  EQU   X'3010'             THE LMOD THIS MOD BELONGS IN    @L05
GMORESV3 DS    XL2                 ??
GMODATA1 DS    CL8                 VARIABLE DATA
         POP   PRINT
         MEND
./       ADD   NAME=GIMSYMOD
         MACRO
         GIMSYMOD
         PUSH  PRINT
         PRINT GEN
GSYSMOD  DSECT ,
GSYIDENT DS    XL4                 00016F00 IDENTIFIES A SYSMOD    @L05
GSYNAME  DS    CL8                 SYSMOD NAME
GSYSUBID DS    XL2                 SYSMOD SUBTYPE IDENTIFIER       @L05
GSYSELF  EQU   X'0100'             SELF-DEFINING ENTRY             @L05
GSYTYPE  EQU   X'0140'             SYSMOD TYPE                     @L05
GSYSTATE EQU   X'0150'             SYSMOD STATUS (I THINK)         @L05
GSYLSTSP EQU   X'0170'             LASTSUP                         @L05
GSYFMID  EQU   X'0E20'             FMID THE SYSMOD BELONGS TO      @L05
GSYRECV  EQU   X'0E30'             RECEIVE DATE AND TIME           @L05
GSYINST  EQU   X'0E40'             INSTALL DATE AND TIME           @L05
GSYPRERQ EQU   X'7020'             SYSMOD THAT THIS ONE PREREQ'S   @L05
GSYSUP   EQU   X'7040'             SYSMOD THAT THIS ONE SUP'S      @L05
GSYDELET EQU   X'7080'             SYSMOD DELETED BY THIS ONE      @L05
GSYSRCID EQU   X'70C0'             SYSMOD SOURCE IDENTIFIER        @L05
GSYMOD   EQU   X'3030'             A MOD CONTAINED IN THIS SYSMOD  @L05
GSYMAC   EQU   X'3040'             A MAC CONTAINED IN THIS SYSMOD  @L05
GSYSUPBY EQU   X'F0'               A SYSMOD THAT SUPS THIS ONE
*SYIFREQ EQU   X'F1'               IFREQ
GSYRESV2 DS    XL2                 ??
GSYDATA1 DS    CL8                 VARIABLE DATA
         ORG   GSYDATA1
GSYDATE  DS    PL3                 APPLY OR ACCEPT DATE
GSYTIME  DS    XL3                 TIME X'HHMMSS'
         ORG   GSYDATA1
GSYIFID1 DS    CL8                 IFREQ NAME 1
GSYIFID2 DS    CL8                 IFREQ NAME 2
         ORG   GSYDATA1+8
         POP   PRINT
         MEND
./       ADD   NAME=GIMZONE
         MACRO
         GIMZONE
         PUSH  PRINT
         PRINT GEN
GZONE    DSECT ,
GZOIDENT DS    XL4                 00010300 IDENTIFIES A ZONE      @L05
GZONAME  DS    CL8                 ZONE NAME
GZORESV1 DS    XL1                 CONSTANT X'10'
GZOSUBID DS    XL1                 ZONE SUBTYPE IDENTIFIER
GZOTYPE  EQU   X'00'               ZONE TYPE
GZORESV2 DS    XL1                 ??                              @L05
GZODATA1 DS    CL8                 VARIABLE DATA
         POP   PRINT
         MEND
./       ADD   NAME=LISTCSI
         PRINT  GEN
LCSI     TITLE 'DISCLAIMER AND AUTHOR''S NAME.'
*---------------------------------------------------------------------*
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT SUNCOR INC.  OR SUPPLIED BY OTHER    *
*     USERS ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST AND IS *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.                        *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO SUNCOR.  HOWEVER, NO PROMISE CAN BE MADE THAT SUCH           *
*     SUGGESTIONS WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT    *
*     COMMENTS TO:                                                    *
*                                                                     *
*              JIM LANE                                               *
*              TECHNICAL SUPPORT GROUP                                *
*              SUNCOR INC.                                            *
*              36 YORK MILLS RD                                       *
*              TORONTO, ONTARIO M2P 2C5                               *
*                                                                     *
*                PHONE: (416)-733-7396                                *
*                                                                     *
*                SHARE INSTALLATION CODE: SNI                         *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY SUNCOR WITHOUT CHARGE OR      *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  NAME     LISTCSI                                                   *
*                                                                     *
*  ABSTRACT THIS PROGRAM PRODUCES A CONDENSED LISTING OF THE CONTENTS *
*           OF AN SMP/E CSI DATASET.  IT LISTS THE FOLLOWING ELEMENT  *
*           TYPES (IN THE INDICATED ORDER) WITH THE FOLLOWING DATA    *
*           FOR EACH:                                                 *
*                                                                     *
*              MODS     FMID/RMID/LASTUPD/DISTLIB/LMOD                *
*              MACS     FMID/RMID/LASTUPD/DISTLIB/SYSLIB              *
*              SYSMODS  STATUS/FMID/LASTUPD/DATE/PRE/SUP/ELEMENTS     *
*                                                                     *
*           LISTCSI IS NOT INTENDED TO COMPLETELY REPLACE THE LIST    *
*           FUNCTION OF SMP/E, BUT JUST CREATE A SUMMARY THAT WON'T   *
*           WRECK YOUR BACK GETTING IT TO YOUR OFFICE (OR TURN THE    *
*           TREE INTO AN ENDANGERED SPECIES).                         *
*                                                                     *
*                                                                     *
* ENVIRONMENT                                                         *
*                                                                     *
*           MVS/XA 2.2.0                                              *
*           DFP/XA 2.3.0                                              *
*           SMP/E  1.5.0
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  JCL REQUIREMENTS:                                                  *
*                                                                     *
*     //JOBNAME  JOB ............                                     *
*     //LIST   EXEC PGM=LISTCSI,REGION=4000K                          *
*     //STEPLIB  DD DSN=TSGJCL.SYSTEMS.LOAD,DISP=SHR                  *
*     //SYSPRINT DD SYSOUT=*                                          *
*     //SYSUDUMP DD SYSOUT=*                                          *
*     //SMPCSI   DD DSN=SYS1.EUPT.CSI,                                *
*     //         DISP=SHR                                             *
*                                                                     *
*  REGISTER USAGE:                                                    *
*                                                                     *
*     2 -      BASE ADDRESS FOR CSI RECORDS                           *
*    10 -      INTERNAL SUBROUTINE LINKAGE                            *
*    11 -      PROGRAM BASE ADDRESS 1                                 *
*    12 -      PROGRAM BASE ADDRESS 2                                 *
*                                                                     *
*  IBM MACROS:    ABEND ACB CLOSE CVT DCB EXLST GET OPEN PUT RPL      *
*                                                                     *
*  USER MACROS:   $AMODE $EPILOG $PROLOG $REGS GIMMAC GIMMOD GIMSYMOD *
*                 GIMZONE                                             *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*    CHANGE ACTIVITY SUMMARY:                                         *
*                                                                     *
*    @TEC - FIX BUGS FOUND AFTER AUTHOR'S MOVE TO TORONTO HYDRO:      *
*         . FIRST 2 BYTES OF KEY AREN'T ALWAYS X'0001'                *
*         - CHANGE PAGE LENGTH TO 80                                  *
*    @L05 - UPGRADE TO SUPPORT CSI FORMAT OF SMP/E RELEASE 5.         *
*         - SKIP PRINTING OF SYSMODS IN UNKNOWN STATUS.               *
*         - CORRECTLY PRINT RECEIVE AND INSTALL DATES. I HAD THOUGHT  *
*           THESE WERE APPLY AND ACCEPT DATE RESPECTIVELY.            *
*         - INCREASE CAPACITY OF ELEMENTS AND SUPERSEDED SYSMOD       *
*           TABLES TO ALLOW FULL DETAILS OF FUNCTION SYSMODS.         *
*                                                                     *
*---------------------------------------------------------------------*
         TITLE 'LIST THE CONTENTS OF AN SMP/E CSI CLUSTER.'
&NAME    SETC  'LISTCSI'
&VERSION SETC  '1.2.0'                                             @L05
         AMODE 31
         PUNCH ' MODE AMODE(31),RMODE(24) '
         $REGS ,
LISTCSI  $PROLOG R11,R12          ENTRY LINKAGE
         LA    R2,CSIREC          BASE ADDRESS FOR CSI RECORDS.
         OPEN  (SYSPRINT,OUTPUT)
         OPEN  (ACBCSI)
         LTR   R15,R15            DID IT OPEN?
         BZ    NEXTREC            YES.
         ABEND 98
         SPACE ,
NEXTREC  DS    0H
         LA    R1,RPLCSI           PICK UP ADDR OF RPL
         GET   RPL=(1)             READ IN A CSI RECORD
         LTR   R15,R15             GOTTEN OK?
         BZ    GOTONE              YES.
         ABEND 99                  OOPS?
         SPACE ,
***********************************************************************
*    CHECK THE 1ST 4 BYTES OF THE RECORD TO DETERMINE IF IT IS A TYPE *
*    WE WANT TO PROCESS.                                              *
***********************************************************************
         SPACE ,
GOTONE   DS    0H
         CLC   2(2,R2),GIMSMOD     IS THIS A SYSMOD?               @TEC
         BE    DOSYSMOD            YES. LET'S DO IT.
         CLC   2(2,R2),GIMMOD      IS THIS A MOD?                  @TEC
         BE    DOMOD               YES.
         CLC   2(2,R2),GIMMAC      IS THIS A MAC?                  @TEC
         BE    DOMAC               YES.
         CLC   2(2,R2),GIMZONE     ZONE DESCRIPTION?               @TEC
         BE    DOZONE              YES.
         B     NEXTREC             TRY THE NEXT ONE.
         SPACE ,
EODCSI   DS    0H
         CLOSE (ACBCSI,,SYSPRINT)
         $EPILOG ,
         TITLE 'ROUTINE TO PROCESS A SYSMOD ENTRY.'
         USING GSYSMOD,R2
DOSYSMOD DS    0H
         TM    SWITCH,MOD1ST       DID WE HAVE MODS PREVIOUSLY?
         BZ    *+16                NO.
         TM    SWITCH,MODRIGHT     DID THEY LEAVE A PARTIAL LINE?
         BZ    *+8                 NO.
         BAL   R10,PRINTIT         IF SO, PRINT IT.
         NI    SWITCH,255-MOD1ST   FORGET ABOUT MODS NOW.
         TM    SWITCH,SYSM1ST      HAVE WE DONE ONE OF THESE YET?
         BO    *+12                YES.
         OI    SWITCH,SYSM1ST      THEN THIS MUST BE THE ONE.
         BAL   R10,SYSMTITL
         XC    ELEMOFF,ELEMOFF     RESET ELEMENT COUNT
         XC    ELEMNUM,ELEMNUM     RESET ELEMENT COUNT
         XC    SUPOFF,SUPOFF       RESET SUP COUNT
         XC    PREOFF,PREOFF       RESET PRE COUNT
         MVC   SAVSMOD,GSYNAME     SAVE THE NAME OF THIS SYSMOD.
         AP    CNTSMODR,ONE        COUNT A SYSMOD RECORD
         AP    CNTSMODS,ONE        COUNT A SYSMOD.
         SPACE ,
SMGET    LA    R1,RPLCSI           PICK UP ADDR OF RPL
         GET   RPL=(1)             READ IN A CSI RECORD
         AP    CNTSMODR,ONE        COUNT A SYSMOD RECORD
         CLC   SAVSMOD,GSYNAME     IS IT STILL THE SAME SYSMOD?
         BNE   SMSKIP99            NO. PRINT THE OLD ONE.
         CLC   GSYSUBID,=AL2(GSYFMID) IS THIS THE FMID SUBREC?     @L05
         BNE   SMSKIP1             NO
         MVC   SAVFMID,GSYDATA1    SAVE FMID NAME.
         B     SMGET               AND GET ANOTHER RECORD.
         SPACE ,
SMSKIP1  DS    0H
         CLC   GSYSUBID,=AL2(GSYRECV) IS THIS THE RECEIVE SUBREC   @L05
         BNE   SMSKIP2             NO
         MVC   SAVRCDTE,GSYDATE    SAVE THE RECEIVE DATE           @L05
         MVC   SAVRCTME,GSYTIME    SAVE THE RECEIVE TIME           @L05
         SR    R0,R0               CLEAR R0.
         ICM   R0,7,GSYDATE        PICK UP APPLY DATE.
         XC    DTWORK,DTWORK       CLEAR DOUBLE WORD
         ST    R0,DTWORK+4         STORE FOR DATE CONVERSION
         LA    R1,DTWORK           SETUP ADDRESS
         ST    R1,DTPARM           OF PACKED FIELD
         LA    R1,DTPARM           IN PARMLIST
         L     R15,=V(XDATEDIT)    ADDRESS OF DATE CONVERT ROUTINE
         BALR  R14,R15             CONVERT DATE
         MVC   LSRCDATE,DTWORK     SETUP CONVERTED DATE            @L05
         B     SMGET               AND GET ANOTHER RECORD.
         SPACE ,
SMSKIP2  DS    0H
         CLC   GSYSUBID,=AL2(GSYINST)  IS THIS THE INSTALL SUBREC  @L05
         BNE   SMSKIP3             NO
         MVC   SAVINDTE,GSYDATE    SAVE THE ACCEPT DATE            @L05
         MVC   SAVINTME,GSYTIME    SAVE THE ACCEPT TIME            @L05
         SR    R0,R0               CLEAR R0.
         ICM   R0,7,GSYDATE        PICK UP ACCEPT DATE.
         XC    DTWORK,DTWORK       CLEAR DOUBLE WORD
         ST    R0,DTWORK+4         STORE FOR DATE CONVERSION
         LA    R1,DTWORK           SETUP ADDRESS
         ST    R1,DTPARM           OF PACKED FIELD
         LA    R1,DTPARM           IN PARMLIST
         L     R15,=V(XDATEDIT)    ADDRESS OF DATE CONVERT ROUTINE
         BALR  R14,R15             CONVERT DATE
         MVC   LSINDATE,DTWORK     SETUP CONVERTED DATE            @L05
         B     SMGET               AND GET ANOTHER RECORD.         @L05
         SPACE ,
SMSKIP3  DS    0H
         CLC   GSYSUBID,=AL2(GSYLSTSP) IS THIS THE LASTSUP SUBREC? @L05
         BNE   SMSKIP4             NO
         MVC   SAVLSTSP,GSYDATA1   SAVE THE LASTSUP ID.
         MVC   SAVINTME,GSYTIME    SAVE THE INSTALL TIME           @L05
         B     SMGET               AND GET ANOTHER RECORD.         @L05
         SPACE ,
SMSKIP4  DS    0H
         CLC   GSYSUBID,=AL2(GSYSTATE) IS THIS THE STATUS SUBREC?  @L05
         BNE   SMSKIP5             NO
         CLI   GSYDATA1,X'00'                                      @L05
         BE    SMFLUSH                                             @L05
         CLI   SAVSMOD,C'U'                                        @L05
         BE    SMSKIP41                                            @L05
         CLI   GSYDATA1,X'04'                                      @L05
         BE    SMFLUSH                                             @L05
         B     SMSKIP41            GET ANOTHER RECORD.             @L05
SMFLUSH  DS    0H                                                  @L05
         OI    SWITCH,FLUSH        DON'T PRINT THIS ONE.           @L05
SMSKIP41 DS    0H                                                  @L05
         TM    GSYDATA1,X'04'      IS IT SUPD?                     @L05
         BZ    *+10                NO                              @L05
         MVC   LSSTATUS,=CL10'SUPERSEDED'
         TM    GSYDATA1,X'20'      IS IT ACCEPTED?                 @L05
         BZ    *+10                NO                              @L05
         MVC   LSSTATUS,=CL10'ACCEPTED'
         TM    GSYDATA1,X'80'      IS IT APPLIED?                  @L05
         BZ    *+10                NO                              @L05
         MVC   LSSTATUS,=CL10'APPLIED'
         B     SMGET               AND GET ANOTHER RECORD.
         SPACE ,
SMSKIP5  DS    0H
         CLC   GSYSUBID,=AL2(GSYPRERQ) IS THIS THE PREREQ SUBREC?  @L05
         BNE   SMSKIP6             NO
         L     R3,PREOFF           GET OFFSET INTO TABLE OF PREREQS
         LA    R4,PRES(R3)         ADDR OF NEXT SLOT
         C     R4,LSTPRE           TABLE OVERFLOW?
         BNL   SMGET               OOPS.
         MVC   0(7,R4),GSYDATA1    SAVE NAME OF PREREQ
         LA    R3,7(0,R3)          SKIP AHAEAD 1.
         ST    R3,PREOFF           AND SAVE FOR A NEXT TIME
         B     SMGET               AND GET ANOTHER RECORD.
         SPACE ,
SMSKIP6  DS    0H
         CLC   GSYSUBID,=AL2(GSYSUP) IS THIS THE SUP SUBREC?       @L05
         BNE   SMSKIP7             NO
         L     R3,SUPOFF           GET OFFSET INTO TABLE OF SUPS
         LA    R4,SUPS(R3)         ADDR OF NEXT SLOT
         L     R0,=AL4(LSTSUP)                                     @L05
         CR    R4,R0               TABLE OVERFLOW?                 @L05
         BNL   SMGET               OOPS.
         MVC   0(7,R4),GSYDATA1    SAVE NAME OF SUP
         LA    R3,7(0,R3)          SKIP AHAEAD 1.
         ST    R3,SUPOFF           AND SAVE FOR A NEXT TIME
         B     SMGET               AND GET ANOTHER RECORD.
         SPACE ,
SMSKIP7  DS    0H
         CLC   GSYSUBID,=AL2(GSYMOD) IS THIS A MOD RECORD?         @L05
         BE    SMSKIP71            YES.
         CLC   GSYSUBID,=AL2(GSYMAC) IS THIS A MAC RECORD?         @L05
         BE    SMSKIP71            YES.
         B     SMSKIP8             NO
         SPACE ,
SMSKIP71 DS    0H
         L     R3,ELEMOFF          GET OFFSET INTO TABLE OF ELEMS
         L     R15,=A(ELEMS)       ADDR OF ELEMENTS TABLE          @L05
         LA    R4,0(R15,R3)        ADDR OF NEXT SLOT               @L05
         L     R0,=AL4(LSTELEM)
         CR    R4,R0               TABLE OVERFLOW?
         BNL   SMGET               OOPS.
         MVC   0(8,R4),GSYDATA1    SAVE NAME OF ELEM
         LA    R3,8(0,R3)          SKIP AHAEAD 1.
         ST    R3,ELEMOFF          AND SAVE FOR A NEXT TIME
         B     SMGET               AND GET ANOTHER RECORD.
SMSKIP8  DS    0H
         B     SMGET               AND GET ANOTHER RECORD.
         SPACE ,
SMSKIP99 DS    0H
         TM    SWITCH,FLUSH        SHOULD I PRINT THIS ONE?        @L05
         BO    SKIPSMOD            NO.                             @L05
         MVC   LSNAME,SAVSMOD      SET UP SYSMOD NAME
         MVC   LSFMID,SAVFMID      SET UP THE FMID.
         MVC   LSLSTSP,SAVLSTSP    SET UP LASTSUP.
CONTPRNT DS    0H
         BAL   R10,FORMELEM        SET UP SOME ELEMNTS, MAYBE
         BAL   R10,FORMPRE         ALSO PREREQS
         BAL   R10,FORMSUP         AND DON'T FORGET THE SUPS
         BAL   R10,PRINTIT         PRINT
         L     R6,LINECNTR         PICK UP CURRENT LINE NUMBER
         LA    R6,1(0,R6)          COUNT THE ONE I'VE JUST PRINTED
         ST    R6,LINECNTR         AND SAVE THAT
         C     R6,PAGESIZE         IS THERE ROOM FOR ANOTHER ONE?
         BL    *+8                 YES.
         BAL   R10,SYSMTITL        NO.
         SPACE ,
         L     R6,ELEMNXT          NEXT ELEMENT
         C     R6,ELEMOFF          IS THAT ALL FOR THIS SYSMOD?
         BL    CONTPRNT            NO. KEEP ON PRINTING.
         L     R6,PRENXT           NEXT PREREQ
         C     R6,PREOFF           IS THAT ALL FOR THIS SYSMOD?
         BL    CONTPRNT            NO. KEEP ON PRINTING.
         L     R6,SUPNXT           NEXT SUP
         C     R6,SUPOFF           IS THAT ALL FOR THIS SYSMOD?
         BL    CONTPRNT            NO. KEEP ON PRINTING.
SKIPSMOD DS    0H                                                  @L05
         NI    SWITCH,255-FLUSH    RESET NOPRINT FLAG.             @L05
         XC    ELEMNXT,ELEMNXT     RESET FOR NEXT SYSMOD.
         XC    ELEMNUM,ELEMNUM     RESET FOR NEXT SYSMOD.
         XC    PRENXT,PRENXT       RESET FOR NEXT SYSMOD.
         XC    PRENUM,PRENUM       RESET FOR NEXT SYSMOD.
         XC    SUPNXT,SUPNXT       RESET FOR NEXT SYSMOD.
         XC    SUPNUM,SUPNUM       RESET FOR NEXT SYSMOD.
         MVI   SAVSTUFF,C' '
         MVC   SAVSTUFF+1(SAVLEN),SAVSTUFF
         B     GOTONE
         TITLE 'SUBROUTINE TO SET UP ELEMENT NAMES ON A PRINT LINE.'
FORMELEM DS    0H
MORELEM  L     R6,ELEMNXT          OFFSET OF NEXT ELEMENT TO PRINT.
         C     R6,ELEMOFF          IS THAT ALL FOR THIS SYSMOD?
         BNL   DONELEM             YES.
         L     R15,=A(ELEMS)       ADDRESS OF ELEMENTS TABLE       @L05
         LA    R7,0(R15,R6)        ADDR OF ELEMENT NAME TO PRINT   @L05
         L     R8,ELEMNUM          SLOT NUMBER W/IN PRINT LINE
         SR    R9,R9               CLEAR A REGISTER
         IC    R9,ELEMTAB(R8)      OFFSET W/IN PRINT LINE
         LA    R9,LINE(R9)         ADDR OF SLOT W/IN PRINT LINE
         MVC   0(8,R9),0(R7)       MOVE ELEMENT NAME ONTO PRINT LINE
         LA    R6,8(0,R6)          NEXT OFFSET W/IN ELEMS
         ST    R6,ELEMNXT          SAVE THAT.
         LA    R8,1(0,R8)          NEXT SLOT NUMBER W/IN PRINT LINE
         C     R8,ELEMMAX          MORE ROOM ON PRINT LINE?
         BH    OVFELEM             NO.
         ST    R8,ELEMNUM          SAVE SLOT #.
         B     MORELEM             SET UP MORE ELEMENTS, MAYBE.
OVFELEM  DS    0H
         XC    ELEMNUM,ELEMNUM     BACK TO 1ST SLOT ON PRINT LINE
DONELEM  DS    0H
         BR    R10                 GOBACK
         TITLE 'SUBROUTINE TO SET UP PREREQ NAMES ON A PRINT LINE.'
FORMPRE  DS    0H
MORPRE   L     R6,PRENXT           OFFSET OF NEXT PREREQ TO PRINT.
         C     R6,PREOFF           IS THAT ALL FOR THIS SYSMOD?
         BNL   DONPRE              YES.
         LA    R7,PRES(R6)         ADDR OF PREREQ NAME TO PRINT
         L     R8,PRENUM           SLOT NUMBER W/IN PRINT LINE
         SR    R9,R9               CLEAR A REGISTER
         IC    R9,PRETAB(R8)       OFFSET W/IN PRINT LINE
         LA    R9,LINE(R9)         ADDR OF SLOT W/IN PRINT LINE
         MVC   0(7,R9),0(R7)       MOVE PREREQ NAME ONTO PRINT LINE
         LA    R6,7(0,R6)          NEXT OFFSET W/IN PRES
         ST    R6,PRENXT           SAVE THAT.
         LA    R8,1(0,R8)          NEXT SLOT NUMBER W/IN PRINT LINE
         C     R8,PREMAX           MORE ROOM ON PRINT LINE?
         BH    OVFPRE              NO.
         ST    R8,PRENUM           SAVE SLOT #.
         B     MORPRE              SET UP MORE PREREQS, MAYBE.
OVFPRE   DS    0H
         XC    PRENUM,PRENUM       BACK TO 1ST SLOT ON PRINT LINE
DONPRE   DS    0H
         BR    R10                 GOBACK
         TITLE 'SUBROUTINE TO SET UP SUP NAMES ON A PRINT LINE.'
FORMSUP  DS    0H
MORSUP   L     R6,SUPNXT           OFFSET OF NEXT SUP TO PRINT.
         C     R6,SUPOFF           IS THAT ALL FOR THIS SYSMOD?
         BNL   DONSUP              YES.
         LA    R7,SUPS(R6)         ADDR OF SUP NAME TO PRINT
         L     R8,SUPNUM           SLOT NUMBER W/IN PRINT LINE
         SR    R9,R9               CLEAR A REGISTER
         IC    R9,SUPTAB(R8)       OFFSET W/IN PRINT LINE
         LA    R9,LINE(R9)         ADDR OF SLOT W/IN PRINT LINE
         MVC   0(7,R9),0(R7)       MOVE SUP NAME ONTO PRINT LINE
         LA    R6,7(0,R6)          NEXT OFFSET W/IN SUPS
         ST    R6,SUPNXT           SAVE THAT.
         LA    R8,1(0,R8)          NEXT SLOT NUMBER W/IN PRINT LINE
         C     R8,SUPMAX           MORE ROOM ON PRINT LINE?
         BH    OVFSUP              NO.
         ST    R8,SUPNUM           SAVE SLOT #.
         B     MORSUP              SET UP MORE SUPS, MAYBE.
OVFSUP   DS    0H
         XC    SUPNUM,SUPNUM       BACK TO 1ST SLOT ON PRINT LINE
DONSUP   DS    0H
         BR    R10                 GOBACK
         DROP  R2
         TITLE 'SUBROUTINE TO PRINT A TITLE LINE OVER SYSMODS.'
SYSMTITL DS    0H
         MVI   CC,C'1'             NEW PAGE
         MVC   LINE(7),=C'&NAME'
         MVC   LINE+8(5),=C'&VERSION'
         MVC   LINE+44(24),=C'LISTING OF ENTRIES FROM '
         MVC   LINE+68(8),ZONETYPE
         MVC   LINE+77(4),=C'ZONE'
         MVC   LINE+82(8),ZONE
         MVC   LINE+119(7),=C'&NAME'
         MVC   LINE+127(5),=C'&VERSION'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   CC,C' '
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         SPACE ,
         MVC   LINE+37(17),=C'-----DATE--------'                   @L05
         MVC   LINE+55(15),=C'-PREREQUISITE--'
         MVC   LINE+71(15),=C'---SUPERSEDED--'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   CC,C' '
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE(6),=C'SYSMOD'
         MVC   LINE+10(10),=C'--STATUS--'
         MVC   LINE+21(7),=C'-FMID--'
         MVC   LINE+29(7),=C'LASTSUP'
         MVC   LINE+37(8),=C'RECEIVE '                             @L05
         MVC   LINE+46(8),=C'INSTALL '                             @L05
         MVC   LINE+55(15),=C'----SYSMODS----'
         MVC   LINE+71(15),=C'----SYSMODS----'
         MVC   LINE+87(18),=C'------------------'
         MVC   LINE+105(08),=C'ELEMENTS'
         MVC   LINE+113(18),=C'------------------'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         SPACE ,
         MVI   CC,C'0'
         MVC   LINECNTR,=F'4'      COUNT THREE LINES OF TITLE.
         MVC   LSNAME,SAVSMOD      SET UP SYSMOD NAME
         BR    R10                 GOBACK
         TITLE 'PROCESS A MOD ENTRY.'
         USING GMOD,R2
DOMOD    DS    0H
         TM    SWITCH,MAC1ST       DID WE HAVE MACS PREVIOUSLY?
         BZ    *+16                NO.
         TM    SWITCH,MACRIGHT     DID THEY LEAVE A PARTIAL LINE?
         BZ    *+8                 NO.
         BAL   R10,PRINTIT         IF SO, PRINT IT.
         NI    SWITCH,255-MAC1ST   FORGET ABOUT MACS NOW.
         TM    SWITCH,MOD1ST       HAVE WE DONE ONE OF THESE YET?
         BO    *+12                YES.
         OI    SWITCH,MOD1ST       THEN THIS MUST BE THE ONE.
         BAL   R10,MODTITL
         MVC   SAVMOD,GMONAME      SAVE THE NAME OF THIS MOD.
         AP    CNTMODR,ONE         COUNT A MOD RECORD
         AP    CNTMODS,ONE         COUNT A MOD.
         SPACE ,
MOGET    LA    R1,RPLCSI           PICK UP ADDR OF RPL
         GET   RPL=(1)             READ IN A CSI RECORD
         AP    CNTMODR,ONE         COUNT A MOD RECORD
         CLC   SAVMOD,GMONAME      IS IT STILL THE SAME MOD?
         BNE   MOSKIP99            NO. PRINT THE OLD ONE.
         CLC   GMOSUBID,=AL2(GMOFMID) IS THIS THE MODS FMID?       @L05
         BNE   MOSKIP1             NO
         MVC   SAVFMID,GMODATA1    SAVE THE FMID VALUE.
         B     MOGET               GET ANOTHER RECORD.
         SPACE ,
MOSKIP1  DS    0H
         CLC   GMOSUBID,=AL2(GMORMID) IS THIS THE MODS RMID?       @L05
         BNE   MOSKIP2             NO
         MVC   SAVRMID,GMODATA1    SAVE THE RMID VALUE.
         B     MOGET               GET ANOTHER RECORD.
         SPACE ,
MOSKIP2  DS    0H
         CLC   GMOSUBID,=AL2(GMOLSTUP) IS THIS THE MODS LASTUPD?   @L05
         BNE   MOSKIP3             NO
         MVC   SAVLSTUP,GMODATA1   SAVE THE LASTUPD VALUE.
         B     MOGET               GET ANOTHER RECORD.
         SPACE ,
MOSKIP3  DS    0H
         CLC   GMOSUBID,=AL2(GMODLIB) IS THIS THE MODS DISTLIB?    @L05
         BNE   MOSKIP4             NO
         MVC   SAVDLIB,GMODATA1    SAVE THE DLIB NAME.
         B     MOGET               GET ANOTHER RECORD.
         SPACE ,
MOSKIP4  DS    0H
         CLC   GMOSUBID,=AL2(GMOLMOD) IS THIS THE MODS LMOD?       @L05
         BNE   MOSKIP5             NO
         MVC   SAVLMOD,GMODATA1    SAVE THE LMOD NAME.
         B     MOGET               GET ANOTHER RECORD.
MOSKIP5  DS    0H
         B     MOGET               GET ANOTHER RECORD.
         SPACE ,
MOSKIP99 DS    0H
         SR    R6,R6               CLEAR A REGISTER
         TM    SWITCH,MODRIGHT     SHIFT THE PRINT?
         BZ    *+16                NO.
         LA    R6,60               SHIFT AMOUNT
         NI    SWITCH,255-MODRIGHT SWITCH OFF
         B     *+08
         OI    SWITCH,MODRIGHT     SHIFT THE NEXT ONE.
         SPACE ,
         LA    R7,LMODNAME(R6)
         MVC   0(8,R7),SAVMOD      SET UP MOD NAME
         LA    R7,LMFMID(R6)
         MVC   0(7,R7),SAVFMID     SET UP FMID
         LA    R7,LMRMID(R6)
         MVC   0(7,R7),SAVRMID     SET UP RMID
         LA    R7,LMLSTUP(R6)
         MVC   0(7,R7),SAVLSTUP    SET UP LSTUP
         LA    R7,LMDLIB(R6)
         MVC   0(8,R7),SAVDLIB     SET UP DLIB
         LA    R7,LMLMOD(R6)
         MVC   0(8,R7),SAVLMOD     SET UP LMOD
         TM    SWITCH,MODRIGHT     LINE FULL?
         BO    GOTONE              NO.
         BAL   R10,PRINTIT         PRINT
         SPACE ,
         L     R6,LINECNTR         PICK UP CURRENT LINE NUMBER
         LA    R6,1(0,R6)          COUNT THE ONE I'VE JUST PRINTED
         ST    R6,LINECNTR         AND SAVE THAT
         C     R6,PAGESIZE         IS THERE ROOM FOR ANOTHER ONE?
         BL    *+8                 YES.
         BAL   R10,MODTITL         NO.
         SPACE ,
         MVI   SAVSTUFF,C' '
         MVC   SAVSTUFF+1(SAVLEN),SAVSTUFF
         B     GOTONE
         DROP  R2
         TITLE 'PRINT TITLES OVER A MOD'
MODTITL  DS    0H
         MVI   CC,C'1'             NEW PAGE
         MVC   LINE(7),=C'&NAME'
         MVC   LINE+8(5),=C'&VERSION'
         MVC   LINE+44(24),=C'LISTING OF ENTRIES FROM '
         MVC   LINE+68(8),ZONETYPE
         MVC   LINE+77(4),=C'ZONE'
         MVC   LINE+82(8),ZONE
         MVC   LINE+119(7),=C'&NAME'
         MVC   LINE+127(5),=C'&VERSION'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   CC,C' '
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         SPACE ,
         MVC   LINE+00(7),=C'--MOD--'
         MVC   LINE+10(7),=C'-FMID--'
         MVC   LINE+18(7),=C'-RMID--'
         MVC   LINE+26(7),=C'LASTUPD'
         MVC   LINE+34(7),=C'DISTLIB'
         MVC   LINE+43(8),=C'--LMOD--'
         MVC   LINE+60(7),=C'--MOD--'
         MVC   LINE+70(7),=C'-FMID--'
         MVC   LINE+78(7),=C'-RMID--'
         MVC   LINE+86(7),=C'LASTUPD'
         MVC   LINE+94(7),=C'DISTLIB'
         MVC   LINE+103(8),=C'--LMOD--'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         SPACE ,
         MVI   CC,C'0'
         MVC   LINECNTR,=F'3'      COUNT TWO LINES OF TITLE.
         BR    R10                 GOBACK
         TITLE 'PROCESS A MAC ENTRY.'
         USING GMAC,R2
DOMAC    DS    0H
         TM    SWITCH,MAC1ST       HAVE WE DONE ONE OF THESE YET?
         BO    *+12                YES.
         OI    SWITCH,MAC1ST       THEN THIS MUST BE THE ONE.
         BAL   R10,MACTITL
         MVC   SAVMAC,GMANAME      SAVE THE NAME OF THIS MAC.
         AP    CNTMACR,ONE         COUNT A MAC RECORD
         AP    CNTMACS,ONE         COUNT A MAC.
         SPACE ,
MAGET    LA    R1,RPLCSI           PICK UP ADDR OF RPL
         GET   RPL=(1)             READ IN A CSI RECORD
         AP    CNTMACR,ONE         COUNT A MAC RECORD
         CLC   SAVMAC,GMANAME      IS IT STILL THE SAME MAC?
         BNE   MASKIP99            NO. PRINT THE OLD ONE.
         CLC   GMASUBID,=AL2(GMAFMID) IS THIS THE MACS FMID?       @L05
         BNE   MASKIP1             NO
         MVC   SAVFMID,GMADATA1    SAVE THE FMID VALUE.
         B     MAGET               GET ANOTHER RECORD.
         SPACE ,
MASKIP1  DS    0H
         CLC   GMASUBID,=AL2(GMARMID) IS THIS THE MACS RMID?       @L05
         BNE   MASKIP2             NO
         MVC   SAVRMID,GMADATA1    SAVE THE RMID VALUE.
         B     MAGET               GET ANOTHER RECORD.
         SPACE ,
MASKIP2  DS    0H
         CLC   GMASUBID,=AL2(GMALSTUP) IS THIS THE MACS LASTUPD?   @L05
         BNE   MASKIP3             NO
         MVC   SAVLSTUP,GMADATA1   SAVE THE LASTUPD VALUE.
         B     MAGET               GET ANOTHER RECORD.
         SPACE ,
MASKIP3  DS    0H
         CLC   GMASUBID,=AL2(GMADLIB) IS THIS THE MACS DISTLIB?    @L05
         BNE   MASKIP4             NO
         MVC   SAVDLIB,GMADATA1    SAVE THE DLIB NAME.
         B     MAGET               GET ANOTHER RECORD.
         SPACE ,
MASKIP4  DS    0H
         CLC   GMASUBID,=AL2(GMASLIB) IS THIS THE MACS SYSLIB?     @L05
         BNE   MASKIP5             NO
         MVC   SAVSLIB,GMADATA1    SAVE THE SLIB NAME.
         B     MAGET               GET ANOTHER RECORD.
MASKIP5  DS    0H
         B     MAGET               GET ANOTHER RECORD.
         SPACE ,
MASKIP99 DS    0H
         SR    R6,R6               CLEAR A REGISTER
         TM    SWITCH,MACRIGHT     SHIFT THE PRINT?
         BZ    *+16                NO.
         LA    R6,60               SHIFT AMOUNT
         NI    SWITCH,255-MACRIGHT SWITCH OFF
         B     *+08
         OI    SWITCH,MACRIGHT     SHIFT THE NEXT ONE.
         SPACE ,
         LA    R7,LMACNAME(R6)
         MVC   0(8,R7),SAVMAC      SET UP MAC NAME
         LA    R7,LMFMID(R6)
         MVC   0(7,R7),SAVFMID     SET UP FMID
         LA    R7,LMRMID(R6)
         MVC   0(7,R7),SAVRMID     SET UP RMID
         LA    R7,LMLSTUP(R6)
         MVC   0(7,R7),SAVLSTUP    SET UP LSTUP
         LA    R7,LMDLIB(R6)
         MVC   0(8,R7),SAVDLIB     SET UP DLIB
         LA    R7,LMSLIB(R6)
         MVC   0(8,R7),SAVSLIB     SET UP SLIB
         TM    SWITCH,MACRIGHT     LINE FULL?
         BO    GOTONE              NO.
         BAL   R10,PRINTIT         PRINT
         SPACE ,
         L     R6,LINECNTR         PICK UP CURRENT LINE NUMBER
         LA    R6,1(0,R6)          COUNT THE ONE I'VE JUST PRINTED
         ST    R6,LINECNTR         AND SAVE THAT
         C     R6,PAGESIZE         IS THERE ROOM FOR ANOTHER ONE?
         BL    *+8                 YES.
         BAL   R10,MACTITL         NO.
         SPACE ,
         MVI   SAVSTUFF,C' '
         MVC   SAVSTUFF+1(SAVLEN),SAVSTUFF
         B     GOTONE
         DROP  R2
         TITLE 'PRINT TITLES OVER A MAC'
MACTITL  DS    0H
         MVI   CC,C'1'             NEW PAGE
         MVC   LINE(7),=C'&NAME'
         MVC   LINE+8(5),=C'&VERSION'
         MVC   LINE+44(24),=C'LISTING OF ENTRIES FROM '
         MVC   LINE+68(8),ZONETYPE
         MVC   LINE+77(4),=C'ZONE'
         MVC   LINE+82(8),ZONE
         MVC   LINE+119(7),=C'&NAME'
         MVC   LINE+127(5),=C'&VERSION'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   CC,C' '
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         SPACE ,
         MVC   LINE+00(7),=C'--MAC--'
         MVC   LINE+10(7),=C'-FMID--'
         MVC   LINE+18(7),=C'-RMID--'
         MVC   LINE+26(7),=C'LASTUPD'
         MVC   LINE+34(7),=C'DISTLIB'
         MVC   LINE+43(8),=C'--SLIB--'
         MVC   LINE+60(7),=C'--MAC--'
         MVC   LINE+70(7),=C'-FMID--'
         MVC   LINE+78(7),=C'-RMID--'
         MVC   LINE+86(7),=C'LASTUPD'
         MVC   LINE+94(7),=C'DISTLIB'
         MVC   LINE+103(8),=C'--SLIB--'
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         SPACE ,
         MVI   CC,C'0'
         MVC   LINECNTR,=F'3'      COUNT TWO LINES OF TITLE.
         BR    R10                 GOBACK
         TITLE 'SAVE ZONE DETAILS.'
         USING GZONE,R2
DOZONE   DS    0H
         CLC   GZOSUBID,=AL2(GZOTYPE) IS THIS THE ZONE TYPE SUB    @L05
         BNE   NEXTREC             NO.
         MVC   ZONE,GZONAME        SAVE ZONE NAME.
         MVC   ZONETYPE,GZODATA1   SAVE ZONE TYPE.
         B     NEXTREC             GOBACK
         DROP  R2
         TITLE 'PRINT CONTENT OF A LINE.'
PRINTIT  DS    0H
        $AMODE 24
         PUT   SYSPRINT,PRTLINE
        $AMODE 31
         MVI   CC,C' '
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    R10                 GOBACK
         LTORG ,
         TITLE 'DATA AREAS'
*        VALUES IN THE 1ST 3 BYTES OF THE CSI RECORD KEY.
GIMUNK1  DC    X'000001'           ??
GIMZONE1 DC    X'000002'           ZONE NAME OF THIS CSI
GIMZONE  DC    X'0300'             ZONE
GIMDDDEF DC    X'0605'             DDDEF ENTRY                     @TEC
GIMLMOD  DC    X'3010'             LMOD ENTRY                      @TEC
GIMMAC   DC    X'3040'             MAC ENTRY                       @TEC
GIMMOD   DC    X'3030'             MOD ENTRY                       @TEC
GIMSRC   DC    X'3050'             SRC ENTRY                       @TEC
GIMSMOD  DC    X'6F00'             SYSMOD ENTRY                    @TEC
         SPACE ,
*        CSI RECORD TYPE COUNTERS
ONE      DC    PL3'1'              ONE.
CNTSMODR DC    PL3'0'              COUNT OF SYSMOD RECORDS
CNTSMODS DC    PL3'0'              COUNT OF SYSMODS
CNTMODR  DC    PL3'0'              COUNT OF MOD RECORDS
CNTMODS  DC    PL3'0'              COUNT OF MODS
CNTMACR  DC    PL3'0'              COUNT OF MAC RECORDS
CNTMACS  DC    PL3'0'              COUNT OF MACS
         SPACE ,
*        ZONE INFO FOR THE 1ST TITLE LINE
ZONE     DC    CL8' '              NAME OF ZONE WE'RE LISTING
ZONETYPE DC    CL8' '              TYPE OF ZONE
         SPACE ,
*        DATA TO BE SAVED FROM CSI RECORDS BEFORE PRINTING.
SAVSTUFF EQU   *
SAVMOD   DC    CL8' '              CURRENT MOD NAME.
SAVMAC   DC    CL8' '              CURRENT MAC NAME.
SAVRMID  DC    CL7' '              CURRENT RMID.
SAVLSTUP DC    CL7' '              CURRENT LASTUPD
SAVDLIB  DC    CL8' '              CURRENT DLIB
SAVSLIB  DC    CL8' '              CURRENT SYSLIB
SAVLMOD  DC    CL8' '              CURRENT LMOD.
SAVSMOD  DC    CL8' '              CURRENT SYSMOD NAME.
SAVFMID  DC    CL7' '              FMID OF CURRENT ENTRY.
SAVLSTSP DC    CL7' '              LASTSUP
SAVRCDTE DC    PL3'0'              RECEIVE DATE                    @L05
SAVRCTME DC    XL3'0'              RECEIVE TIME                    @L05
SAVINDTE DC    PL3'0'              INSTALL DATE                    @L05
SAVINTME DC    XL3'0'              INSTALL TIME                    @L05
SAVLEN   EQU   *-SAVSTUFF-1
         SPACE ,
*        DATA AREAS FOR DATE CONVERSION
         DS    0D
DTWORK   DC    D'0'                WORK FIELD FOR DATE CONVERSION
DTPARM   DC    AL4(0)
DTL5     EQU   DTWORK+3,5          5 BYTES FOR EDIT MACRO
DTL4     EQU   DTWORK+4,4          4 BYTES FOR EDIT MACRO
DTL3     EQU   DTWORK+5,3          3 BYTES FOR EDIT MACRO
DTL2     EQU   DTWORK+6,2          2 BYTES FOR EDIT MACRO
         SPACE ,
*        CONTROL BLOCKS FOR DDNAME=SMPCSI
         DS    0F
BUFLEN   DC    AL4(1024*128)       128K RECORD BUFFER
OPENERR  DC    AL4(0)              OPEN ERROR CODE.
BUFPTR   DC    AL4(0)
ACBCSI   ACB   AM=VSAM,DDNAME=SMPCSI,EXLST=EXLCSI,                     X
               BUFNI=8,BUFND=32
EXLCSI   EXLST EODAD=EODCSI
PAGELEN  EQU   60                                                  @TEC
         DS    0F
CSIPTR   DC    AL4(0)
CSIKEY   DC    CL24' '                                             @L05
CSIREC   DC    CL143' '                                            @L05
RPLCSI   RPL   ACB=ACBCSI,                                             X
               AM=VSAM,                                                X
               AREA=CSIREC,                                            X
               AREALEN=123,                                            X
               OPTCD=(KEY,SEQ,MVE)
CSIOPEN  DC    X'00'
         SPACE ,
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,            X
               LRECL=133,BLKSIZE=23408
         SPACE ,
*        WORK AREA FOR REPORT PRINTLINE
PRTLINE  DS    0CL133
CC       DC    CL1' '             CARRIAGE CONTROL CHARACTER
LINE     DC    CL132' '           PRINT LINE
LSNAME   EQU   LINE,8              SYSMOD NAME
LSSTATUS EQU   LINE+10,10          SYSMOD STATUS
LSFMID   EQU   LINE+21,7           SYSMOD'S FMID
LSLSTSP  EQU   LINE+29,7           SYSMOD'S LASTSUP
LSRCDATE EQU   LINE+37,8           RECEIVE DATE                    @L05
LSINDATE EQU   LINE+46,8           INSTALL DATE                    @L05
         SPACE ,
LMACNAME EQU   LINE,8              MAC NAME
LMODNAME EQU   LINE,8              MOD NAME
LMFMID   EQU   LINE+10,7           MOD'S FMID
LMRMID   EQU   LINE+18,7           MOD'S RMID
LMLSTUP  EQU   LINE+26,7           MOD'S LASTUPD
LMDLIB   EQU   LINE+34,8           MOD'S DLIB
LMLMOD   EQU   LINE+43,8           MOD'S LMOD
LMSLIB   EQU   LINE+43,8           MAC'S SYSLIB
         SPACE ,
*        CONTROL VARIABLE FOR PAGE LAYOUT
PAGESIZE DC    F'80'               MAX LINES PER PAGE              @TEC
LINECNTR DC    F'0'                CURRENT LINE NUMBER
         SPACE ,
*        FLAGS TO CONTROL INTER-RELATIONSHIPS BETWEEN MULTIPLE CSI
*        RECORDS MAKING UP A SINGLE LOGICAL ENTITY
SWITCH   DC    X'00'
SYSM1ST  EQU   X'80'               1ST SYSMOD HAS BEEN PROCESSED.
MOD1ST   EQU   X'40'               1ST MOD HAS BEEN DONE
MODRIGHT EQU   X'20'               PRINT NEXT MOD ON RIGHT HALF
MAC1ST   EQU   X'10'               1ST MAC HAS BEEN DONE
MACRIGHT EQU   X'08'               PRINT NEXT MAC ON RIGHT HALF
FLUSH    EQU   X'01'               FLUSH THIS BOGUS SYSMOD         @L05
         SPACE ,
*        A SYSMOD CAN HAVE A VARIABLE NUMBER OF PRE'S, SUP'S AND
*        ELEMENTS. IF NECESSARY "EXTRA" ONES ARE FLOWED ONTO SUBSEQUENT
*        PRINT LINES.
*        THESE VARIABLES ARE:
*              1) TABLES TO ACCUMULATE PRE'S, SUP'S AND ELEMENTS
*              2) COUNTERS TO KEEP TRACK OF HOW MANY WE HAVE AND TO
*                 DETECT TABLE OVERFLOW.
*              3) COUNTERS TO RECORD HOW MANY ITEMS HAVE BEEN PRINTED
*                 AND HOW MANY CAN FIT ON A PRINT LINE.
*              4) TABLES OF OFFSETS ACROSS THE PAGE AT WHICH TO
*                 POSITION THINGS.
*
*        NB: VARIABLES NAMED LSTXXXX BELOW HERE MUST NOT BE MOVED!
ELEMMAX  DC    F'4'                HIGHEST ELEMENT FIELD
ELEMNUM  DC    F'0'                NEXT AVAILABLE ELEMENT FIELD
ELEMNXT  DC    F'0'                NEXT ELEMENT TO BE PRINTED.
ELEMOFF  DC    AL4(0)              OFFSET OF LATEST ELEMENT
ELEMTAB  DC    AL1(87,96,105,114,123)
PREMAX   DC    F'1'                HIGHEST PREREQ FIELD
PRENUM   DC    F'0'                NEXT AVAILABLE PREREQ FIELD
PRENXT   DC    F'0'                NEXT PREREQ TO BE PRINTED.
PREOFF   DC    AL4(0)              OFFSET OF LATEST PRE
PRETAB   DC    AL1(55,63)
SUPMAX   DC    F'1'                HIGHEST SUP FIELD
SUPNUM   DC    F'0'                NEXT AVAILABLE SUP FIELD
SUPNXT   DC    F'0'                NEXT SUP TO BE PRINTED.
SUPOFF   DC    AL4(0)              OFFSET OF LATEST SUP
SUPTAB   DC    AL1(71,79)
         SPACE ,
PRES     DC    64CL7' '            TABLE OF PRE NAMES
LSTPRE   DC    A(*)
SUPS     DC    1200CL7' '          TABLE OF SUP NAMES              @L05
LSTSUP   DC    A(*)
         DS    0F
ELEMS    DC    3000CL8' '          TABLE OF ELEMENT NAMES          @L05
LSTELEM  DC    A(*)
         SPACE ,
         TITLE 'LAYOUTS FOR SMP/E CSI RECORD TYPES.'
         GIMSYMOD ,
         GIMMOD ,
         GIMMAC ,
         GIMZONE ,
         CVT   LIST=NO,DSECT=YES
         EJECT ,
         COPY  XDATEDIT
         END   ,
         PUNCH ' IDENTIFY LISTCSI(''@120 &SYSDATE &SYSTIME'') '
         PUNCH ' IDENTIFY XDATEDIT(''@110 &SYSDATE &SYSTIME'') '
         PUNCH ' NAME LISTCSI(R) '
         END   ,
./       ADD   NAME=PELIST
         PRINT GEN                                                 @L05
*----------------------------------------------------------------------
*
*        FREEWARE: THIS PROGRAM IS DISTRIBUTED ON AN AS-IS BASIS
*                  WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
*
*                  THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
*                  P.O. BOX 21525
*                  MILWAUKEE, WI 53221
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        PROGRAM WRITTEN BY:
*
*                  MICHAEL GEARING
*                  PORTLAND, OR
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        MODIFIED MARCH 1988
*                 BY R.B.VIPOND
*                    BALCOR/AMERICAN EXPRESS
*                    4849 GOLF ROAD
*                    SKOKIE, IL.   60077
*                    (312)677-2900
*
*          IN AN ATTEMPT TO REDUCE THE AMOUNT OF MANUAL
*          INTERVENTION AND CHECKING THAT HAD TO BE DONE
*          AND DECISIONS THAT HAD TO BE MADE, THE FOLLOWING
*          CHANGES HAVE BE INCORPORATED INTO THIS PROGRAM:
*
*            INCLUDED ACTION TO BE TAKEN MESSAGE ON REPORT...
*
*            INCLUDED CORRECTING PTF NUMBER ON REPORT IF IT
*            WAS ON THE SYSTEM...
*
*            EXCLUDED PE'D PTF'S THAT HAD ALREADY BEEN SUP'D
*            BY ANOTHER PTF...
*
*            CHANGED NAME FROM HOLDPGM TO PELIST...
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*     PROGRAM INPUT:
*        ,PARM=(???????,???????) - TARGET ZONE NAME,DIST ZONE NAME...
*        GLBLCSI        -  GLOBAL CSI
*        TARGCSI        -  TARGET CSI
*        DISTCSI        -  DISTRIBUTION CSI
*        DISKIN         -  WORK DISK CREATED IN OUTPUT
*
*     PROGRAM OUTPUT:
*        WRKDISK        -  WORK DISK ALSO USED AS INPUT
*        REPORT         -  PE LIST WITH ACTION TO BE TAKEN
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*     COMPILE AND EXECUTION JCL SAMPLES:
*
* //PROC1    EXEC ASMHCL,REGION.C=4096K,REGION.L=4096K,
* //  PARM.L='LIST,LET,NCAL,XREF,SIZE=(384K,96K)'
* //C.SYSLIB DD  DSN=TECH.NASPA.MACLIB,DISP=SHR
* //         DD  DSN=SYS1.MACLIB,DISP=SHR
* //         DD  DSN=SYS1.AMODGEN,DISP=SHR
* //C.SYSIN  DD  DSN=TECH.SMPE.SOURCE(PELIST),DISP=SHR
* //L.SYSLMOD DD  DSN=TBCT.LINKLIB,DISP=SHR
* //L.SYSIN  DD  DSN=TECH.NASPA.LINKDATA(PELIST),DISP=SHR
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
* //STEP1    EXEC PGM=PELIST,PARM=(MVST,MVSD)
* //STEPLIB  DD  DSN=TBCT.LINKLIB,DISP=SHR
* //GLBLCSI  DD  DSN=GLOBAL.CSI,DISP=SHR
* //TARGCSI  DD  DSN=MVST.CSI,DISP=SHR
* //DISTCSI  DD  DSN=MVSD.CSI,DISP=SHR
* //WRKDISK  DD  DSN=&&WORK,DISP=(,PASS,DELETE),
* //            UNIT=WORK,
* //            VOL=SER=WORK01,
* //            SPACE=(3120,(100,50)),
* //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
* //DISKIN   DD  DSN=&&WORK,DISP=(SHR,DELETE,DELETE),
* //            UNIT=(WORK,,DEFER),
* //            VOL=SER=WORK01
* //REPORT   DD  SYSOUT=*
* //SYSOUT   DD  SYSOUT=*
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*     THIS PROGRAM HAS MET A BASIC SET OF PROGRAMMING AND
*     DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
*     FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
*     EVALUATION OF THE USE OF THIS PROGRAM IN THEIR ENVIRONMENT.
*
*     NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
*     FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
*     FUNCTION, RESULTS, OR PERFORMANCE OF THIS PROGRAM.
*
*     IMPLEMENTATION AND USE OF THIS PROGRAM CONSTITUTES A RELEASE
*     FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
*     THIS PROGRAM AT THE USER'S INSTALLATION.
*
*     THIS PROGRAM IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
*     RECIPIENTS ARE FREE TO MAKE THIS PROGRAM AVAILABLE TO OTHERS IN
*     LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
*     NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
*     INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
*     INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*        FIND  PTF'S THAT HAVE BEEN APPLIED THAT ARE IN ERROR
*
*----------------------------------------------------------------------
*
PELIST   #SLC  R12
         EJECT
*----------------------------------------------------------------------
*        PROCESS INPUT PARM
*----------------------------------------------------------------------
*
         L     R3,0(R1)           LOAD REG 3 WITH PTR TO PARM
         LH    R4,0(R3)           PARM LENGTH
         BCTR  R4,R0              DECR FOR MVC
         B     EXECWTO            BRANCH AROUND
EXMVC1   MVC   WTOPARM+15(0),2(R3)
EXECWTO  EX    R4,EXMVC1
WTOPARM  WTO   'PARM =                     '
         B     EXCPARM            BRANCH AROUND
EXMVC2   MVC   ZONENAME(0),2(R3)
EXCPARM  EX    R4,EXMVC2          COPY ZONE NAME TO KEY
         BLDVRP BUFFERS=(2048(256),4096(64)),STRNO=3               @L05
         OPEN  (GLBLCSI,(INPUT),TARGCSI,(INPUT))
         LTR   R15,R15            GOOD OPEN?
         BNZ   ERROR              NO - ABEND
         OPEN  (DISTCSI,(INPUT),WRKDISK,(OUTPUT))
         LTR   R15,R15            GOOD OPEN?
         BNZ   ERROR              NO - ABEND
         EJECT
*----------------------------------------------------------------------
*        SEPERATE TARGET ZONE AND DISTRIBUTION ZONE NAMES...
*----------------------------------------------------------------------
*
SEPZONE  DS    0H
         LA    R5,7               POSSIBLE 7 POSITION NAME
         LA    R15,TZONAME        FIRST POS OF TZONE NAME
         LA    R2,ZONENAME        FIRST POS OF PARM AREA
CHKTNAM  DS    0H
         CLI   0(R2),C','         END OF NAME ?
         BE    ENDNAM                 YES
         MVC   0(1,R15),0(R2)     MOVE ONE POS OF TZONE NAME
         LA    R15,1(R15)         ADD ONE
         LA    R2,1(R2)           ADD ONE
         BCT   R5,CHKTNAM         IF NOT END GO MOVE NEXT POS
ENDNAM   DS    0H
         LA    R2,1(R2)           ADD ONE
         MVC   DZONAME,0(R2)      MOVE DZONE NAME
         EJECT
*----------------------------------------------------------------------
*        FIND THE TARGET ZONE RECORD THAT HAS A HEX NUMBER IN IT THAT
*        IS USED AS PART OF THE KEY TO THAT TARGET ZONE.
*----------------------------------------------------------------------
*
FINDTZ   DS    0H
         GET   RPL=TARGSEQ        GET A RECORD
         LTR   R15,R15            DID WE GET ONE?
         BNZ   ERROR              NO -
         CLC   TARGETZ,=X'000002' PAST ZONE RECORDS?
         BNH   FINDTZ2            NO - OK
         WTO   'THERE IS NO TARGET ZONE TO MATCH THE INPUT PARM',      +
               ROUTCDE=(11)
         B     STOP2
FINDTZ2  EQU   *
         CLC   TZONAME,TARGETS    COMPARE THE ZONE NAMES
         BNE   FINDTZ             NOT THE ONE WE WANT
         MVC   TZONKEY,TARGETH    SAVE ZONE KEY
         MVC   TARGHEX,TZONKEY    MOVE ZONE HEX TO TARGET
         EJECT
*----------------------------------------------------------------------
*        FIND THE DIST   ZONE RECORD THAT HAS A HEX NUMBER IN IT THAT
*        IS USED AS PART OF THE KEY TO THAT DIST   ZONE.
*----------------------------------------------------------------------
*
FINDDZ   DS    0H
         GET   RPL=DISTSEQ        GET A RECORD
         LTR   R15,R15            DID WE GET ONE?
         BNZ   ERROR              NO -
         CLC   DISTZ,=X'000002'   PAST ZONE RECORDS?
         BNH   FINDDZ2            NO - OK
         WTO   'THERE IS NO DIST   ZONE TO MATCH THE INPUT PARM',      +
               ROUTCDE=(11)
         B     STOP2
FINDDZ2  EQU   *
         CLC   DZONAME,DISTS      COMPARE THE ZONE NAMES
         BNE   FINDDZ             NOT THE ONE WE WANT
         MVC   DZONKEY,DISTH      SAVE ZONE KEY
         MVC   DISTHEX,DZONKEY    MOVE ZONE HEX TO DIST
         EJECT
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
*
SETUP    DS    0H
         POINT RPL=GLBLSEQ        POSITION TO GLOBAL ZONE START
         LTR   R15,R15            OK?
         BNZ   ERROR              NO - ERROR
*
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT IS A
*        HOLD TYPE SYSMOD.
*----------------------------------------------------------------------
*
READGLB  DS    0H
         GET   RPL=GLBLSEQ        GET A RECORD
         LTR   R15,R15            GOT IT?
         BNZ   ERROR              NO - ERROR
         CLC   GLOBALK,ZONE26     LAST GLOBAL SYSMOD RECORD?
         BH    SETEOF                                              @L05
         CLC   GLOBALF,=X'2210'   HOLD TYPE SYSMOD?                @L05
         BNE   READGLB            NO - KEEP LOOKING
*
*----------------------------------------------------------------------
*        ONCE WE HAVE A HOLD TYPE SYSMOD, SEE IF IT IS APPLIED IN
*        OUR TARGET ZONE.
*----------------------------------------------------------------------
*
         MVC   TARGSYS,GLOBALP    MOVE HOLD PTF
         GET   RPL=TARGDIR        SEE IF IT IS IN THE TZONE
         LTR   R15,R15            FIND IT?
         BNZ   READGLB            NO - OK
*
*----------------------------------------------------------------------
*        JUST BECAUSE THE HELD PTF IS APPLIED DOESN'T MEAN IT IS
*        ON IN ERROR. THE APAR NUMBER THAT THE PTF IS BEING HELD FOR
*        MAY HAVE BEEN VALIDLY SUPERCEDED BY ANOTHER PTF.
*        TO CHECK THIS OUT, SEE IF THE APAR IN ERROR IS APPLIED
*        IN OUR TZONE. IF IT IS NOT, THEN WE KNOW THAT THE HELD
*        PTF IS ON IN ERROR.
*----------------------------------------------------------------------
*
         MVC   TARGSYS,GLOBALE    MOVE ERROR APAR
         GET   RPL=TARGDIR        SEE IF IT IS ON
         LTR   R15,R15            IS THE ERROR APAR IN THE TZONE?
         BZ    READGLB            YES - THEN IT IS SUPERCEDED
*
*----------------------------------------------------------------------
*        CREATE WORK DISK FILE...
*----------------------------------------------------------------------
*
         MVC   WDISKS,GLOBALP     PTF IN ERROR
         MVC   WDISKE,GLOBALE     FIXING APAR
         PUT   WRKDISK,WDISK      WRITE WORK DISK RECORD
         B     READGLB            GET NEXT RECORD
         EJECT
*----------------------------------------------------------------------
*        ROUTINE TO DETERMINE ACTION TO BE TAKEN...
*----------------------------------------------------------------------
*
SETEOF   DS    0H
         MVI   EOFSW,C'Y'       VALID EOF REACHED
CHKWORK  DS    0H
         CLOSE (GLBLCSI,,TARGCSI,,WRKDISK,,DISTCSI)
         LTR   R15,R15            GOOD CLOSE ?
         BNZ   ERROR              NO - ABEND
         OPEN  (GLBLCSI,(INPUT),TARGCSI,(INPUT),REPORT,(OUTPUT))
         LTR   R15,R15            GOOD OPEN?
         BNZ   ERROR              NO - ABEND
         OPEN  (DISTCSI,(INPUT),DISKIN,(INPUT))
         LTR   R15,R15            GOOD OPEN?
         BNZ   ERROR              NO - ABEND
*----------------------------------------------------------------------
         MVC   REPRTS,=C' P E   '
         MVC   REPRTE,=C'A P A R'
         MVC   REPRTF,=C' F I X '
         MVC   REPRTM,=C'ACTION TO BE TAKEN                      '
         PUT   REPORT,REPRT       WRITE A LINE
         MVC   REPRTS,=C'-------'
         MVC   REPRTE,=C'-------'
         MVC   REPRTF,=C'-------'
         MVC   REPRTM,=C'----------------------------------------'
         PUT   REPORT,REPRT       WRITE A LINE
*----------------------------------------------------------------------
         MVC   TARGHEX,TZONKEY
         MVI   TARGHEX-1,X'00'
         MVI   TARGHEX+1,X'26'
         MVC   SUPDHEX,DZONKEY
*        MVI   SUPDHEX-1,X'00'
*        MVI   SUPDHEX+1,X'26'
         MVI   SUPDPE+7,C' '
         MVC   SUPDPE+8,=X'26010000'
         MVC   SUPDPE+12,=C'UNKNOWN'
         MVC   DISTHEX,DZONKEY
         MVI   DISTHEX-1,X'00'
         MVI   DISTHEX+1,X'26'
         EJECT
*----------------------------------------------------------------------
*        READ WORK FILE...
*----------------------------------------------------------------------
*
READWRK  DS    0H
         MVI   FIXFND,C'N'      RESET FIX FOUND SWITCH
         CLI   EOFSW,C'N'       VALID EOF REACHED ?
         BE    STOP                   NO
*----------------------------------------------------------------------
         GET   DISKIN,WDISK       READ RECORD
         MVC   REPRTS,WDISKS      PTF IN ERROR
         MVC   REPRTE,WDISKE      FIXING APAR
*
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
*
CHKFIX   DS    0H
         POINT RPL=GLBLSEQ        POSITION TO GLOBAL ZONE START
         LTR   R15,R15            OK?
         BNZ   ERROR              NO - ERROR
*
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT IS THE
*        CORRECTING PTF FOR THIS APAR FIX...
*----------------------------------------------------------------------
*
APARFIX  DS    0H
         GET   RPL=GLBLSEQ        GET A RECORD
         LTR   R15,R15            GOT IT?
         BNZ   ERROR              NO - ERROR
         CLC   GLOBALK,ZONE26     LAST GLOBAL SYSMOD RECORD?
         BNE   NOFIX                 YES
         CLC   GLOBALF,=X'7040'   SUPING APAR ?                    @L05
         BNE   APARFIX            NO - KEEP LOOKING
         CLC   GLOBALE,WDISKE     PTF FIX FOR ARAR ?
         BNE   APARFIX            NO - KEEP LOOKING
         MVC   REPRTF,GLOBALP     FIXING PTF
         MVI   FIXFND,C'Y'        FIX FOUND
         B     CHKSUPD            CHECK TO SEE IF IT IS SUPD
NOFIX    DS    0H
         MVC   REPRTF,=C'       '
         MVI   FIXFND,C'N'        FIX NOT FOUND
*
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING SYSMOD, BEGIN CHECK FOR SUPD PE IN
*        OUR TARGET ZONE.
*----------------------------------------------------------------------
*
CHKSUPD  DS    0H
         MVC   SUPDPE,WDISKS      PE PTF
         GET   RPL=TARGSUP        SEE IF IT IS IN THE TZONE
         LTR   R15,R15            FIND IT?
         BNZ   CHKACC             NO - OK
         CLI   FIXFND,C'Y'        WAS A FIX FOUND ?
         BNE   FIXNFND                  NO
         MVC   REPRTM,MESS4       PE SUPD IGNORE FIX
         B     PRTRPT
FIXNFND  DS    0H
         MVC   REPRTM,MESS5       PE SUPD
         B     PRTRPT
*
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING PTF THAT HASN'T BEEN SUPERCEDED,
*        SEE IF PE IS ACCEPTED INTO OUR DISTRIBUTION ZONE...
*----------------------------------------------------------------------
*
CHKACC   DS    0H
         CLI   FIXFND,C'Y'        WAS A FIX FOUND ?
         BE    CONTCHK                 YES
         MVC   REPRTM,MESS3       FIX NOT ON SYSTEM
         B     PRTRPT
CONTCHK  DS    0H
         MVC   DISTSYS,WDISKS     MOVE HOLD PTF
         GET   RPL=DISTDIR        SEE IF IT IS IN THE DIST ZONE
         LTR   R15,R15            FIND IT?
         BNZ   NOACC              NO - OK
         MVC   REPRTM,MESS1       APPLY FIX
         B     PRTRPT
NOACC    DS    0H
         MVC   REPRTM,MESS2       RESTORE PE OR APPLY FIX
         B     PRTRPT
*
*----------------------------------------------------------------------
*        PRINT REPORT
*----------------------------------------------------------------------
*
PRTRPT   DS    0H
         PUT   REPORT,REPRT       WRITE A LINE
         AP    COUNT,=P'1'        ADD ONE
         B     READWRK            GET NEXT RECORD
         EJECT
*----------------------------------------------------------------------
*        END OF JOB ROUTINE
*----------------------------------------------------------------------
*
STOP     DS    0H
         MVC   REPRTS,=C'-------'
         MVC   REPRTE,=C'-------'
         MVC   REPRTF,=C'-------'
         MVC   REPRTM,=C'----------------------------------------'
         PUT   REPORT,REPRT       WRITE A LINE
         MVC   REPRTS,=C'*******'
         MVC   REPRTE,TZONAME
         MVC   REPRTF,DZONAME
         MVC   REPRTM,=C'PRINT AND READ MCS FOR ALL FIXES        '
         PUT   REPORT,REPRT       WRITE A LINE
*----------------------------------------------------------------------
         UNPK  WTO+23(7),COUNT    UNPACK COUNT
         OI    WTO+29,X'F0'       SET SIGN
WTO      WTO   'RECORD COUNT = NNNNNNN'
         CLOSE (GLBLCSI,,TARGCSI,,DISKIN)
         CLOSE (DISTCSI,,REPORT)
STOP2    EQU   *
         DLVRP TYPE=LSR                                            @L05
         LA    R15,0
         #RTN
         EJECT
*----------------------------------------------------------------------
*        ERROR ROUTINES
*----------------------------------------------------------------------
ERROR    DS    0H
         ABEND 16,DUMP
         EJECT
*----------------------------------------------------------------------
ZONE26   DC    XL4'00006F00'                                       @L05
*----------------------------------------------------------------------
GLOBAL   DS    0CL143                                              @L05
GLOBALK  DC    CL4' '                                              @L05
GLOBALP  DC    CL7' '
         DC    CL1' '                                              @L05
*
GLOBALF  DC    CL2' '        X'2210' = HOLD ERROR                  @L05
*                            X'F5' = SYSTEM HOLD
*                            X'F7' = SOURCE ID
*                            X'7040' = SUPS THIS APAR              @L05
         DC    CL2' '
GLOBALE  DC    CL7' '
         DC    CL121' '                                            @L05
*----------------------------------------------------------------------
ZONENAME DC    CL15' '
TZONAME  DC    CL7' '
DZONAME  DC    CL7' '
*----------------------------------------------------------------------
SUPDKEY  DS    0CL23
SUPDHEX  DC    XL2'0000'                                           @L05
         DC    XL2'6F00'                                           @L05
SUPDPE   DC    CL7' '
         DC    CL1' '
         DC    XL1'26'
         DC    XL1'01'
         DC    XL2'0000'
         DC    CL8'UNKNOWN '
*----------------------------------------------------------------------
TARGKEY  DS    0CL11                                               @L05
TARGHEX  DC    XL2'0000'                                           @L05
         DC    XL2'6F00'                                           @L05
TARGSYS  DC    CL7' '
*----------------------------------------------------------------------
TARGET   DS    0CL143                                              @L05
TARGETZ  DC    CL3' '
         DC    CL1' '                                              @L05
TARGETE  DC    CL7' '
         DC    CL1' '                                              @L05
*
TARGETF  DC    CL2' '        X'01' = SUPD IF TARGETS = UNKNOWN     @L05
*                            X'12' = SUPD BY TARGETS
         DC    CL2' '
TARGETS  DC    CL7' '
         DC    CL121' '                                            @L05
*----------------------------------------------------------------------
         ORG   TARGET
         DS    CL4
TARGETH  DS    CL2                                                 @L05
         ORG
*----------------------------------------------------------------------
DISTKEY  DS    0CL11                                               @L05
DISTHEX  DC    XL2'0000'                                           @L05
         DC    XL2'6F00'                                           @L05
DISTSYS  DC    CL7' '
*----------------------------------------------------------------------
DISTRIB  DS    0CL143                                              @L05
DISTZ    DC    CL3' '
         DC    CL1' '                                              @L05
DISTE    DC    CL7' '
         DC    CL1' '                                              @L05
DISTF    DC    CL2' '                                              @L05
         DC    CL2' '
DISTS    DC    CL7' '
         DC    CL121' '                                            @L05
*----------------------------------------------------------------------
         ORG   DISTRIB
         DS    CL4
DISTH    DS    CL2                                                 @L05
         ORG
*----------------------------------------------------------------------
WDISK    DS    0CL80
WDISKS   DC    CL7' '    PTF IN ERROR
WDISKE   DC    CL7' '    APAR FIX
         DC    CL66' '
*----------------------------------------------------------------------
*----------------------------------------------------------------------
REPRT    DS    0CL80
         DC    CL2' '
REPRTS   DC    CL7' '   PTF IN ERROR
         DC    CL2' '
REPRTE   DC    CL7' '   APAR FIX
         DC    CL2' '
REPRTF   DC    CL7' '   FIXING PTF
         DC    CL2' '
REPRTM   DC    CL40' '  ACTION TO BE TAKEN
         DC    CL11' '
*------------------*----------------------------------------*----------
MESS1    DC    CL40'APPLY FIXING PTF'
MESS2    DC    CL40'RESTORE PTF IN ERROR OR APPLY FIXING PTF'
MESS3    DC    CL40'FIXING PTF NOT ON SYSTEM * CALL SUPPORT'
MESS4    DC    CL40'PE HAS BEEN SUPD * FIX CAN BE IGNORED'
MESS5    DC    CL40'PE HAS BEEN SUPD'
*----------------------------------------------------------------------
COUNT    DC    PL4'0'   RECORD COUNT
EOFSW    DC    CL1'N'   END OF FILE SWITCH
FIXFND   DC    CL1'N'   FIXING PTF FOUND SWITCH
TZONKEY  DC    XL2'00'  TARG ZONE KEY                              @L05
DZONKEY  DC    XL2'00'  DIST ZONE KEY                              @L05
*----------------------------------------------------------------------
GLBLCSI  ACB   AM=VSAM,MACRF=(LSR,KEY,SEQ,DIR,IN),DDNAME=GLBLCSI,  @L05+
               EXLST=CSIEXIT
TARGCSI  ACB   AM=VSAM,MACRF=(LSR,KEY,SEQ,DIR,IN),DDNAME=TARGCSI,  @L05+
               EXLST=CSIEXIT
DISTCSI  ACB   AM=VSAM,MACRF=(LSR,KEY,SEQ,DIR,IN),DDNAME=DISTCSI,  @L05+
               EXLST=CSIEXIT
GLBLSEQ  RPL   ACB=GLBLCSI,AM=VSAM,OPTCD=(KEY,SEQ,KEQ,GEN,MVE),        +
               KEYLEN=3,ARG=ZONE26,AREA=GLOBAL,AREALEN=143         @L05
TARGDIR  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,DIR,MVE,GEN,KEQ),        +
               KEYLEN=11,ARG=TARGKEY,AREA=TARGET,AREALEN=143       @L05
TARGSEQ  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,SEQ,MVE),                +
               AREA=TARGET,AREALEN=143                             @L05
TARGSUP  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,DIR,MVE,GEN,KEQ),        +
               KEYLEN=23,ARG=SUPDKEY,AREA=TARGET,AREALEN=143       @L05
DISTDIR  RPL   ACB=DISTCSI,AM=VSAM,OPTCD=(KEY,DIR,MVE,GEN,KEQ),        +
               KEYLEN=11,ARG=DISTKEY,AREA=DISTRIB,AREALEN=143      @L05
DISTSEQ  RPL   ACB=DISTCSI,AM=VSAM,OPTCD=(KEY,SEQ,MVE),                +
               AREA=DISTRIB,AREALEN=143                            @L05
CSIEXIT  EXLST AM=VSAM,EODAD=READWRK
WRKDISK  DCB   DDNAME=WRKDISK,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80,   +
               BLKSIZE=3120
DISKIN   DCB   DDNAME=DISKIN,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=80,    +
               BLKSIZE=3120,EODAD=STOP
REPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80,    +
               BLKSIZE=3120
         END
./       ADD   NAME=SAS
DATA A;
 INFILE CSI VSAM;
 INPUT @1 K1  IB4.   ;
 K=PUT(K1,$HEX8.) ;

PROC FREQ;
 TABLES K;
./       ADD   NAME=XDATEDIT
RWA      EQU   2                   GENERAL WORK REG
RWB      EQU   3                   GENERAL WORK REG
RWC      EQU   4                   GENERAL WORK REG
RWD      EQU   5                   GENERAL WORK REG
RSPACE   EQU   6                   NUMBER OF LINES TO SPACE
RBAL     EQU   7                   NUMBER OF LINES LEFT ON PAGE
RLPEXIT  EQU   8                   EXIT FROM LIST PROCESSING ROUTINE
RPARM    EQU   9                   CALL PARAMETER LIST ADDR
RPLD     EQU   10                  PLD BLOCK BASE
RWKAREA  EQU   11                  BASE REGISTER FOR WORK AREA
RBASE    EQU   12                  BASE REGISTER FOR CODING
RRET     EQU   14                  STANDARD RETURN ADDR
RDSECT   EQU   11                  BASE REG FOR ARGUMENT/RESULT
RPARMD   EQU   1                   PARAMETER LIST POINTER
RARGSAVE EQU   2                   TO SAVE ORIGINAL PACKED ARGUMENT
RMONTH   EQU   3
RDAY     EQU   4                   RDAY AND RYEAR ARE AN EVEN/ODD
RYEAR    EQU   5                   PAIR FOR DIVISION
RWORK    EQU   6
RLIST    EQU   7
         TITLE 'DATE EDITING ROUTINE "XDATEDIT"'
* STATUS:  VERSION 0, MOD 2, 5 OCTOBER 1967.
         SPACE
* FUNCTION/OPERATION:  EDITS A PACKED DECIMAL DATE IN YEAR-DAY FORM TO
*        EBCDIC MONTH-DAY-YEAR FORM.  CORRECTS FOR LEAP YEARS AND
*        FOR THE TURN OF A CENTURY.
         SPACE
* ENTRY POINTS:  ENTER AT "XDATEDIT" VIA BALR 14,15 WITH REG 13 SET
*        TO A STANDARD 18-WORD SAVE AREA.  REGISTER 1 POINTS TO A
*        PARAMETER LIST CONTAINING ONE ADDRESS.
         SPACE
* INPUT:  THE ADDRESS IN THE PARAMETER LIST IS THAT OF AN ALIGNED
*        DOUBLE WORD CONTAINING THE ARGUMENT IN PACKED DECIMAL AS:
*        X'0000000000YYDDD+'.
         SPACE
* OUTPUT:  THE RESULT IS RETURNED IN THE SAME DOUBLE WORD IN EBCDIC AS
*        C'MM/DD/YY'.
         SPACE
* DATA SETS:  NONE.
         SPACE
* EXTERNAL ROUTINES:  NONE.
         SPACE
* EXITS-NORMAL:  RETURN VIA REG 14 WITH RETURN CODE 0 IN REG 15.
         SPACE
* EXITS-ERROR:  IF THE DAY NUMBER IS ZERO OR EXCEEDS THE MAXIMUM VALUE
*        APPROPRIATE TO THE YEAR, RETURN VIA REG 14 WITH RETURN CODE 4
*        IN REG 15 AND THE RESULT FIELD SET TO C' YY.DDD '.
         SPACE
* TABLES/WORK AREAS:  NONE.
         SPACE
* ATTRIBUTES:  REENTRANT, READ ONLY.
         SPACE
* NOTES:  NONE.
         EJECT
* DUMMY SECTION TO DEFINE THE ARGUMENT AND RETURN FIELD.
         SPACE
DUMMY    DSECT
DWORD    DS    1D
         SPACE 6
* BEGIN CONTROL SECTION HERE.  DEFINE REGISTER TAGS.
         SPACE
XDATEDIT CSECT
         SPACE
         SPACE 6
* ENTER HERE.  SAVE GENERAL REGISTERS AND SET UP BASE REGISTERS.
         SPACE
         SAVE  (14,12),,*
         SPACE
         BALR  RBASE,0
         USING *,RBASE
         L     RDSECT,0(RPARMD)    LOAD ARGUMENT ADDRESS
         USING DWORD,RDSECT
         EJECT
* CONVERT YEAR AND DAY TO BINARY, AND SEPARATE BY DIVISION.
         SPACE
         MVI   DWORD,X'00'         CLEAR HIGH DECIMAL DIGITS
         MVC   DWORD+1(4),DWORD    IN ARG TO ZEROS
         OI    DWORD+7,X'0F'       FORCE PLUS SIGN
         L     RARGSAVE,DWORD+4    SAVE ARGUMENT FOR 'BADDATE'
         SPACE
         CVB   RYEAR,DWORD         CONVERT YYDDD TO BINARY
         SR    RDAY,RDAY           CLEAR HIGH-ORDER DIVIDEND
         D     RDAY,F1000          QUOTIENT=YEAR; REMAINDER=DAY
         SPACE
* CHECK FOR LEAP YEAR, AND LOAD RLIST WITH BASE ADDRESS OF APPROPRIATE
* LIST OF MONTH SIZES.
         SPACE
DAYOK    DS    0H
         LA    RLIST,STDLIST       POINT RLIST TO STANDARD MONTHS
         LTR   RWORK,RYEAR         LOAD BINARY YEAR NUMBER
         BZ    NOTLEAP             BR IF TURN OF CENTURY
         N     RWORK,=F'3'         TEST LOW TWO BITS
         BC    4,NOTLEAP           BR IF NON-ZERO
         LA    RLIST,LPYLIST       POINT RLIST TO LEAP-YEAR MONTHS
NOTLEAP  DS    0H
         SPACE
* TEST DAY NUMBER AGAINST ZERO AND THE UPPER LIMIT DETERMINED BY
* THE YEAR NUMBER.
         SPACE
         LTR   RDAY,RDAY           TEST FOR ZERO
         BZ    BADDATE             BR IF SO
         CH    RDAY,0(0,RLIST)     TEST FOR UPPER LIMIT
         BH    BADDATE             BR IF TOO LARGE
         SPACE
* REDUCE JULIAN DAY TO DAY-OF-MONTH, ACCUMULATING MONTH NUMBER.
         SPACE
         LA    RMONTH,1            INITIAL MONTH NUMBER
         SR    RWORK,RWORK
DAYLOOP  IC    RWORK,1(RMONTH,RLIST)  LENGTH OF MONTH INTO RWORK
         CR    RDAY,RWORK          TEST IF DAY IN THIS MONTH
         BNH   DAYDONE             BR IF DAY LESS THAN MONTH SIZE
         SR    RDAY,RWORK          REDUCE DAY BY LENGTH OF MONTH
         LA    RMONTH,1(RMONTH)    INCREMENT MONTH
         B     DAYLOOP
DAYDONE  DS    0H
         SPACE
* COMBINE MONTH, DAY, AND YEAR IN BINARY IN ONE REGISTER, MULTIPLYING
* EACH BY A FACTOR TO PLACE IT PROPERLY IN THE DECIMAL RESULT.
* THE TRICK IS THAT  1000(1000(MONTH)+DAY)+YEAR  GIVES  MM0DD0YY  WHEN
* CONVERTED TO DECIMAL.  AFTER UNPACKING, THE ZEROS ARE REPLACED BY
* SLASHES.
         SPACE
         MH    RMONTH,H1000
         AR    RMONTH,RDAY
         MH    RMONTH,H1000
         AR    RMONTH,RYEAR
         CVD   RMONTH,DWORD
         MVC   DWORD(5),DWORD+3    MOVE OVER FOR UNPACKING
         UNPK  DWORD(8),DWORD(5)   CONVERT TO ALPHA
         OI    DWORD+7,X'F0'       COVER UP SIGN
         MVI   DWORD+2,C'/'        INSERT SLASHES
         MVI   DWORD+5,C'/'
         SR    15,15               SET NORMAL RETURN CODE OF 0
         SPACE
EXITD    RETURN  (14,12),T,RC=(15)  RETURN TO CALLER
         SPACE 2
* FOR ARGUMENTS WHOSE DAY NUMBER IS ZERO OR TOO LARGE, RETURN IN
* 'DWORD' THE EDITED VALUE  C' YY.DDD ' AND SET A RETURN CODE OF 4.
         SPACE
BADDATE  ST    RARGSAVE,DWORD      RESTORE ORIGINAL PACKED ARGUMENT
         UNPK  DWORD+2(5),DWORD+1(3)  UNPACK INTO ALPHA
         MVC   DWORD+1(2),DWORD+2  SHIFT YEAR 1 LEFT
         MVI   DWORD,C' '          APPLY COSMETICS
         MVI   DWORD+3,C'.'
         MVI   DWORD+7,C' '
         LA    15,4                SET RETURN CODE
         B     EXITD
         EJECT
* LISTS OF MONTH SIZES FOR STANDARD AND LEAP YEARS:
         SPACE
         SPACE
STDLIST  DC    H'365'              DAY LIMIT FOR STANDARD YEARS
         DC    AL1(31)
         DC    AL1(28)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         SPACE
LPYLIST  DC    H'366'              DAY LIMIT FOR LEAP YEARS
         DC    AL1(31)
         DC    AL1(29)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         SPACE
F1000    DC    F'1000'
H1000    EQU   F1000+2
         LTORG
