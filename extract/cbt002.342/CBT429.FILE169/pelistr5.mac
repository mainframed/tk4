*----------------------------------------------------------------------
*
*        FREEWARE: THIS PROGRAM IS DISTRIBUTED ON AN AS-IS BASIS
*                  WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, BY:
*
*                  THE NATIONAL SYSTEMS PROGRAMMERS ASSOCIATION (NASPA)
*                  P.O. BOX 21525
*                  MILWAUKEE, WI 53221
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        PROGRAM WRITTEN BY:
*
*                  MICHAEL GEARING
*                  PORTLAND, OR
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*        MODIFIED MARCH 1988
*                 BY R.B.VIPOND
*                    BALCOR/AMERICAN EXPRESS
*                    4849 GOLF ROAD
*                    SKOKIE, IL.   60077
*                    (312)677-2900
*
*          IN AN ATTEMPT TO REDUCE THE AMOUNT OF MANUAL
*          INTERVENTION AND CHECKING THAT HAD TO BE DONE
*          AND DECISIONS THAT HAD TO BE MADE, THE FOLLOWING
*          CHANGES HAVE BE INCORPORATED INTO THIS PROGRAM:
*
*            INCLUDED ACTION TO BE TAKEN MESSAGE ON REPORT.
*
*            INCLUDED CORRECTING PTF NUMBER ON REPORT IF IT
*            WAS ON THE SYSTEM.
*
*            EXCLUDED PE'D PTF'S THAT HAD ALREADY BEEN SUP'D
*            BY ANOTHER PTF.
*
*            CHANGED NAME FROM HOLDPGM TO PELIST.
*
*
*        MODIFIED MARCH 1989
*                 BY R.B.VIPOND
*                    BALCOR/AMERICAN EXPRESS
*                    4849 GOLF ROAD
*                    SKOKIE, IL.   60077
*                    (312)677-2900
*
*            SUGGESTED BY: DON WEIMER
*          SUPPRESSED SUPERSEDED PTF MESSAGES SINCE THEY HAVE
*          NO ACTION TO BE TAKEN AND ARE ONLY FOR INFORMATION
*          PURPOSES.
*
*
*        MODIFIED FEBRUARY 1991
*                 BY KEVIN L. WILLIAMS
*                    MEIJER, INC., 982/2
*                    2727 WALKER AVE NW
*                    GRAND RAPIDS, MI  49504
*                    (616) 791-3621
*
*          CONVERTED TO SMP/E RELEASE 5 FORMAT AND CHANGED
*          THE NAME FROM PELIST TO PELISTR5.
*
*          ADDED CODE TO OPTIONALLY SHOW SUPD PE PTFS.
*
*          ELIMINATED INFORMATIONAL WTOS
*
*          ELIMINATED NEED FOR WRKDISK AND DISKIN.
*
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*     PROGRAM INPUT:
*        ,PARM=(TTTTTTT,DDDDDDD{,S})
*                       -  TARGET ZONE NAME, DLIB ZONE NAME,
*                          (OPTIONALLY) SHOW SUPD PE PTFS
*        GLBLCSI        -  GLOBAL CSI
*        TARGCSI        -  TARGET CSI
*        DLIBCSI        -  DLIB CSI
*
*     PROGRAM OUTPUT:
*        REPORT         -  PE LIST WITH ACTION TO BE TAKEN
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
*     COMPILE AND EXECUTION JCL SAMPLES:
*
* //PROC1    EXEC ASMHCL,REGION.C=4096K,REGION.L=4096K,
* //  PARM.L='LIST,LET,NCAL,XREF,SIZE=(384K,96K)'
* //C.SYSLIB DD  DSN=TECH.NASPA.MACLIB,DISP=SHR
* //         DD  DSN=SYS1.MACLIB,DISP=SHR
* //         DD  DSN=SYS1.AMODGEN,DISP=SHR
* //C.SYSIN  DD  DSN=TECH.SMPE.SOURCE(PELISTR5),DISP=SHR
* //L.SYSLMOD DD  DSN=TBCT.LINKLIB,DISP=SHR
* //L.SYSIN  DD  DSN=TECH.NASPA.LINKDATA(PELISTR5),DISP=SHR
*
*   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
*
* //STEP1    EXEC PGM=PELISTR5,PARM=(MVST,MVSD,S)
* //STEPLIB  DD  DSN=TBCT.LINKLIB,DISP=SHR
* //GLBLCSI  DD  DSN=GLOBAL.CSI,DISP=SHR
* //TARGCSI  DD  DSN=MVST.CSI,DISP=SHR
* //DLIBCSI  DD  DSN=MVSD.CSI,DISP=SHR
* //REPORT   DD  SYSOUT=*
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*     THIS PROGRAM HAS MET A BASIC SET OF PROGRAMMING AND
*     DOCUMENTATION STANDARDS, BUT HAS NOT BEEN PROGRAM TESTED IN ANY
*     FORMAL FASHION BY NASPA. THE USER IS EXPECTED TO MAKE THE FINAL
*     EVALUATION OF THE USE OF THIS PROGRAM IN THEIR ENVIRONMENT.
*
*     NASPA MAKES NO WARRANTY, EXPRESSED OR IMPLIED, OF THE FITNESS
*     FOR A PARTICULAR PURPOSE AS RELATES TO THE DOCUMENTATION,
*     FUNCTION, RESULTS, OR PERFORMANCE OF THIS PROGRAM.
*
*     IMPLEMENTATION AND USE OF THIS PROGRAM CONSTITUTES A RELEASE
*     FROM LIABILITY OF NASPA FOR ANY PROBLEMS ARISING FROM THE USE OF
*     THIS PROGRAM AT THE USER'S INSTALLATION.
*
*     THIS PROGRAM IS MADE AVAILABLE BY NASPA WITHOUT CHARGE.
*     RECIPIENTS ARE FREE TO MAKE THIS PROGRAM AVAILABLE TO OTHERS IN
*     LIKE MANNER, PROVIDED THIS DISCLAIMER IS KEPT INTACT.  IT MAY
*     NOT BE SOLD, TRADED, OR EXCHANGED FOR CASH, SERVICES, OR AS AN
*     INCENTIVE FOR SERVICES AND/OR OTHER PURCHASES, NOR MAY IT BE
*     INTEGRATED INTO ANY PROGRAM FOR SUCH USE.
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*        FIND  PTFS THAT HAVE BEEN APPLIED THAT ARE IN ERROR
*
*----------------------------------------------------------------------
*
PELISTR5 #SLC  R12
         EJECT
*----------------------------------------------------------------------
*        PROCESS INPUT PARM
*----------------------------------------------------------------------
*
         L     R3,0(R1)                POINT TO PASSED PARAMETER
         LH    R4,0(R3)                PARAMETER LENGTH
         LA    R3,2(R3)                POINT PAST PARM LENGTH
*
         LA    R15,TZONAME             TARGET ZONE NAME
CHKTNAME CLI   0(R3),C','              END OF TARGET ZONE NAME?
         BE    ENDTNAME                YES -> GET DLIB ZONE
         MVC   0(1,R15),0(R3)          MOVE ONE CHAR OF TZONE NAME
         LA    R15,1(R15)              NEXT OUTPUT POSITION
         LA    R3,1(R3)                NEXT INPUT POSITION
         BCT   R4,CHKTNAME             DO NEXT CHARACTER
         B     BADPARM                 NO COMMA -> PARM ERROR
ENDTNAME LA    R3,1(R3)                SKIP COMMA
         BCT   R4,DNAME                DECREMENT PARAMETER LENGTH
         B     BADPARM                 NO DLIB ZONE IN PARM
*
DNAME    LA    R15,DZONAME             DLIB ZONE NAME
CHKDNAME CLI   0(R3),C','              END OF DLIB ZONE NAME?
         BE    ENDDNAME                YES -> CHECK FOR ",S"
         MVC   0(1,R15),0(R3)          MOVE ONE CHAR OF TZONE NAME
         LA    R15,1(R15)              NEXT OUTPUT POSITION
         LA    R3,1(R3)                NEXT INPUT POSITION
         BCT   R4,CHKDNAME             DO NEXT CHARACTER
         B     ZONEOPEN                NO OTHER PARAMTER
ENDDNAME LA    R3,1(R3)                SKIP COMMA
         BCT   R4,PARM3                DECREMENT PARAMETER LENGTH
         B     BADPARM                 COMMA BUT NO THIRD PARM
PARM3    MVC   SHOWSUPD,0(R3)          SAVE THIRD PARM
         B     ZONEOPEN
*
BADPARM  WTO   'INVALID PARM - MUST SPECIFY TARGET ZONE, DLIB ZONE, AND+
                (OPTIONALLY) "S" TO SHOW SUPD PE PTFS',ROUTCDE=(11)
         B     STOP2
*
*----------------------------------------------------------------------
*        OPEN THE GLOBAL, TARGET, AND DLIB ZONE CSIS
*----------------------------------------------------------------------
*
ZONEOPEN OPEN  (GLBLCSI,(INPUT),TARGCSI,(INPUT),DLIBCSI,(INPUT))
         LTR   R15,R15                 GOOD OPEN?
         BNZ   ERROR                   NO -> ABEND
         EJECT
*----------------------------------------------------------------------
*        FIND THE TARGET ZONE RECORD THAT HAS A HEX NUMBER IN IT THAT
*        IS USED AS PART OF THE KEY TO THAT TARGET ZONE.
*----------------------------------------------------------------------
*
FINDTZ   GET   RPL=TARGSEQ             GET A RECORD
         LTR   R15,R15                 DID WE GET ONE?
         BNZ   ERROR                   NO -> GET OUT
         CLC   TARGETZ,ZONE02          PAST ZONE RECORDS?
         BNH   FINDTZ2                 NO -> WE'RE OK
         WTO   'THERE IS NO TARGET ZONE TO MATCH THE INPUT PARM',      +
               ROUTCDE=(11)
         B     STOP2
FINDTZ2  CLC   TZONAME,TARGETS         REQUESTED ZONE NAME?
         BNE   FINDTZ                  NO -> KEEP LOOKING
         MVC   TZONKEY,TARGETH         SAVE ZONE KEY
         MVC   TARGHEX,TZONKEY         MOVE ZONE HEX TO TARGET
         EJECT
*----------------------------------------------------------------------
*        FIND THE DLIB ZONE RECORD THAT HAS A HEX NUMBER IN IT THAT
*        IS USED AS PART OF THE KEY TO THAT DLIB ZONE.
*----------------------------------------------------------------------
*
FINDDZ   GET   RPL=DLIBSEQ             GET A RECORD
         LTR   R15,R15                 DID WE GET ONE?
         BNZ   ERROR                   NO -> GET OUT
         CLC   DLIBZ,ZONE02            PAST ZONE RECORDS?
         BNH   FINDDZ2                 NO -> WE'RE OK
         WTO   'THERE IS NO DLIB ZONE TO MATCH THE INPUT PARM',        +
               ROUTCDE=(11)
         B     STOP2
FINDDZ2  CLC   DZONAME,DLIBS           COMPARE THE ZONE NAMES
         BNE   FINDDZ                  NOT THE ONE WE WANT
         MVC   DZONKEY,DLIBH           SAVE ZONE KEY
         MVC   DLIBHEX,DZONKEY         MOVE ZONE HEX TO DLIB
         EJECT
*----------------------------------------------------------------------
*        GETMAIN STORAGE TO STORE PE PTF AND FIXING APAR INFORMATION.
*        THIS INFORMATION USED TO BE WRITTEN TO A TEMPORARY FILE
*        ON DASD.  REQUEST STORAGE TO STORE AT LEAST 10 AND UP TO
*        100,000 PE PTFS.
*----------------------------------------------------------------------
*
         GETMAIN VRC,LV=(14*100000,14*10)
         STM   R0,R1,WRKSIZE           SAVE STORAGE SIZE AND ADDRESS
         LR    R5,R1                   CURRENT RECORD POINTER
         USING WRKAREA,R5              MAP THE DSECT
         SLR   R6,R6                   INITIALIZE NUMBER OF PE PTFS
*
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
*
SETUP    POINT RPL=GLBLSEQ             POINT TO SYSMOD RECORDS
         LTR   R15,R15                 OK?
         BNZ   ERROR                   NO -> ERROR
*
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT IS A
*        HOLD TYPE SYSMOD.
*----------------------------------------------------------------------
*
READGLB  GET   RPL=GLBLSEQ             GET A RECORD
         LTR   R15,R15                 GOT IT?
         BNZ   ERROR                   NO -> ERROR
         CLC   GLOBALK,ZONE6F          LAST GLOBAL SYSMOD RECORD?
         BNE   SETEOF                  YES -> WE'RE DONE HERE
         CLC   GLOBALF,TYPE2210        HOLDERROR TYPE SYSMOD RECORD?
         BNE   READGLB                 NO -> KEEP LOOKING
*
*----------------------------------------------------------------------
*        ONCE WE HAVE A SYSMOD WITH HOLDERROR.  SEE IF IT IS
*        APPLIED IN OUR TARGET ZONE.
*----------------------------------------------------------------------
*
         MVC   TARGSYS,GLOBALP         MOVE HOLD PTF
         GET   RPL=TARGDIR             SEE IF IT IS IN THE TZONE
         LTR   R15,R15                 FIND IT?
         BNZ   READGLB                 NO -> OK
*
*----------------------------------------------------------------------
*        JUST BECAUSE THE HELD PTF IS APPLIED DOESN'T MEAN IT IS
*        ON IN ERROR. THE APAR NUMBER THAT THE PTF IS BEING HELD
*        FOR MAY HAVE BEEN VALIDLY SUPERSEDED BY ANOTHER PTF.
*        TO CHECK THIS OUT, SEE IF THE APAR IN ERROR IS APPLIED
*        IN OUR TZONE.  IF IT IS NOT, THEN WE KNOW THAT THE HELD
*        PTF IS ON IN ERROR.
*----------------------------------------------------------------------
*
         MVC   TARGSYS,GLOBALE         MOVE ERROR APAR
         GET   RPL=TARGDIR             SEE IF IT IS ON
         LTR   R15,R15                 IS THE ERROR APAR IN THE TZONE?
         BZ    READGLB                 YES -> THEN IT IS SUPERSEDED
*
*----------------------------------------------------------------------
*        WE NOW KNOW THAT WE HAVE A PE PTF APPLIED IN OUR TARGET
*        ZONE (THOUGH THE PTF COULD STILL BE SUPD).  SAVE THE
*        PE PTF AND FIXING APAR IN A TABLE FOR FUTURE PROCESSING.
*----------------------------------------------------------------------
*
         MVC   WRKS,GLOBALP            PTF IN ERROR
         MVC   WRKE,GLOBALE            FIXING APAR
         LA    R5,WRKLEN(R5)           NEXT SLOT IN STORAGE
         LA    R6,1(R6)                BUMP PE PTF COUNTER
         B     READGLB                 GET NEXT RECORD
         EJECT
*----------------------------------------------------------------------
*        CLOSE AND REOPEN THE GLOBAL, TARGET AND DLIB ZONE CSIS
*----------------------------------------------------------------------
*
SETEOF   MVI   EOFSW,C'Y'              VALID EOF REACHED
         CLOSE (GLBLCSI,,TARGCSI,,DLIBCSI)
         LTR   R15,R15                 GOOD CLOSE ?
         BNZ   ERROR                   NO -> ABEND
         OPEN  (GLBLCSI,(INPUT),TARGCSI,(INPUT),DLIBCSI,(INPUT),       +
               REPORT,(OUTPUT))
         LTR   R15,R15                 GOOD OPEN?
         BNZ   ERROR                   NO -> ABEND
*----------------------------------------------------------------------
         MVC   REPRTS,=C'  P E  '
         MVC   REPRTE,=C'A P A R'
         MVC   REPRTF,=C' F I X '
         MVC   REPRTM,=C'ACTION TO BE TAKEN                      '
         PUT   REPORT,REPRT            WRITE A LINE
         MVC   REPRTS,=C'-------'
         MVC   REPRTE,=C'-------'
         MVC   REPRTF,=C'-------'
         MVC   REPRTM,=C'----------------------------------------'
         PUT   REPORT,REPRT            WRITE A LINE
*----------------------------------------------------------------------
         MVI   TARGHEX-1,X'00'         SETUP TARGET KEY FOR
         MVC   TARGHEX,TZONKEY           SYSMOD RECORDS
         MVI   TARGHEX+1,X'6F'
         MVI   TARGHEX+2,X'00'
*
         MVI   SUPDHEX-1,X'00'         SETUP TARGET KEY FOR
         MVC   SUPDHEX,DZONKEY           SYSMOD SUPBY RECORDS
         MVI   SUPDHEX+1,X'6F'
         MVI   SUPDHEX+2,X'00'
         MVI   SUPDPE+7,C' '
         MVC   SUPDPE+8,=X'01700000'
*
         MVI   DLIBHEX-1,X'00'         SETUP DLIB KEY FOR
         MVC   DLIBHEX,DZONKEY           SYSMOD RECORDS
         MVI   DLIBHEX+1,X'6F'
         MVI   DLIBHEX+2,X'00'
*
         L     R5,WRKADDR              POINT TO FIRST PE PTF IN STORAGE
         B     DOPTF                   SKIP TABLE POINTER BUMP CODE
         EJECT
*----------------------------------------------------------------------
*        PROCESS EACH PE PTF
*----------------------------------------------------------------------
*
NEXTPTF  LA    R5,WRKLEN(R5)           POINT TO NEXT PE PTF
         BCTR  R6,0                    DECREMENT COUNTER
DOPTF    CLI   EOFSW,C'N'              VALID EOF REACHED?
         BE    STOP                    NO -> GET OUT
         LTR   R6,R6                   ANY MORE PE PTFS?
         BZ    STOP                    NO - > GET OUT
         MVC   REPRTS,WRKS             MOVE PTF IN ERROR TO PRINT
         MVC   REPRTE,WRKE             MOVE FIXING APAR TO PRINT
         MVC   SUPDPE,WRKS             MOVE PE PTF TO SUPD KEY
         MVC   DLIBSYS,WRKS            MOVE PE PTF TO DLIB KEY
         MVI   FIXFND,C'N'             RESET FIX FOUND SWITCH
*
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
*
CHKFIX   POINT RPL=GLBLSEQ             POSITION TO GLOBAL ZONE START
         LTR   R15,R15                 OK?
         BNZ   ERROR                   NO -> ERROR
*
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT
*        IS THE CORRECTING PTF FOR THIS APAR FIX.
*----------------------------------------------------------------------
*
APARFIX  GET   RPL=GLBLSEQ             GET A RECORD
         LTR   R15,R15                 GOT IT?
         BNZ   ERROR                   NO -> ERROR
         CLC   GLOBALK,ZONE6F          LAST GLOBAL SYSMOD RECORD?
         BNE   NOFIX                   YES
         CLC   GLOBALF,TYPE7040        SUPING SYSMOD RECORD?
         BNE   APARFIX                 NO -> KEEP LOOKING
         CLC   GLOBALE,WRKE            PTF FIX FOR ARAR?
         BNE   APARFIX                 NO -> KEEP LOOKING
         MVC   REPRTF,GLOBALP          MOVE FIXING PTF TO PRINT
         MVI   FIXFND,C'Y'             INDICATE FIX FOUND
         B     CHKSUPD                 CHECK TO SEE IF IT IS SUPD
NOFIX    MVC   REPRTF,=C'       '
         MVI   FIXFND,C'N'             INDICATE FIX NOT FOUND
*
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING SYSMOD, BEGIN CHECKING TO SEE IF
*        THE PTF IN ERROR HAS BEEN SUPD IN OUR TARGET ZONE.
*----------------------------------------------------------------------
*
CHKSUPD  GET   RPL=TARGSUP             GET PE PTF SUPD SYSMOD RECORD
         LTR   R15,R15                 FIND ONE?
         BNZ   CHKACC                  NO -> THIS PTF IS REALLY PE
         CLI   SHOWSUPD,C'S'           SHOW SUPD PE PTFS?
         BNE   NEXTPTF                 NO -> DON'T PRINT IT
*
         CLI   FIXFND,C'Y'             WAS A FIX FOUND ?
         BNE   FIXNFND                 NO -> NO FIX TO IGNORE
         MVC   REPRTM,MSG4             "PE SUPD - IGNORE FIX"
         B     PRTRPT                  GO PRINT REPORT LINE
FIXNFND  MVC   REPRTM,MSG5             "PE SUPD"
         B     PRTRPT                  GO PRINT REPORT LINE
*
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING PTF THAT HASN'T BEEN SUPERSEDED,
*        SEE IF PE IS ACCEPTED INTO OUR DLIB ZONE.
*----------------------------------------------------------------------
*
CHKACC   CLI   FIXFND,C'Y'             WAS A FIX FOUND ?
         BE    CONTCHK                 YES -> CHECK IF PE PTF ACCEPTED
         MVC   REPRTM,MSG3             FIX NOT ON SYSTEM
         B     PRTRPT                  GO PRINT REPORT LINE
CONTCHK  GET   RPL=DLIBDIR             CHECK DLIB ZONE FOR PE PTF
         LTR   R15,R15                 PE PTF ACCEPTED?
         BNZ   NOACC                   NO -> COULD RESTORE PE PTF
         MVC   REPRTM,MSG1             "APPLY FIX"
         B     PRTRPT                  GO PRINT REPORT LINE
NOACC    MVC   REPRTM,MSG2             "RESTORE PE OR APPLY FIX"
         B     PRTRPT                  GO PRINT REPORT LINE
*
*----------------------------------------------------------------------
*        PRINT REPORT LINE
*----------------------------------------------------------------------
*
PRTRPT   PUT   REPORT,REPRT            WRITE A LINE
         B     NEXTPTF                 GET NEXT RECORD
         EJECT
*----------------------------------------------------------------------
*        END OF JOB ROUTINE
*----------------------------------------------------------------------
*
STOP     MVC   REPRTS,=C'-------'
         MVC   REPRTE,=C'-------'
         MVC   REPRTF,=C'-------'
         MVC   REPRTM,=C'----------------------------------------'
         PUT   REPORT,REPRT            WRITE A LINE
         MVC   REPRTS,=C'*******'
         MVC   REPRTE,TZONAME
         MVC   REPRTF,DZONAME
         MVC   REPRTM,=C'PRINT AND READ MCS FOR ALL FIXES        '
         PUT   REPORT,REPRT            WRITE A LINE
*----------------------------------------------------------------------
         CLOSE (GLBLCSI,,TARGCSI,,DLIBCSI,,REPORT)
*
         LM    R0,R1,WRKSIZE           GET STORAGE SIZE AND ADDRESS
         LTR   R0,R0                   DID WE DO GETMAIN?
         BZ    STOP2                   NO -> SKIP FREEMAIN
         FREEMAIN RC,LV=(0),A=(1)      FREE THE STORAGE
*
STOP2    LA    R15,0
         #RTN
         EJECT
*----------------------------------------------------------------------
*        ERROR ROUTINES
*----------------------------------------------------------------------
ERROR    ABEND 16,DUMP
         EJECT
*----------------------------------------------------------------------
WRKSIZE  DC    F'0'                    SIZE OF STORAGE AREA
WRKADDR  DS    1A                      ADDRESS OF STORAGE AREA
ZONE02   DC    XL4'00000200'           ZONE RECORD
ZONE6F   DC    XL4'00006F00'           SYSMOD RECORD
TYPE2210 DC    XL2'2210'               HOLDERROR SYSMOD RECORD
TYPE7040 DC    XL2'7040'               SUPING SYSMOD RECORD
*----------------------------------------------------------------------
GLOBAL   DS    0CL143
GLOBALK  DC    CL4' '
GLOBALP  DC    CL7' '
         DC    CL1' '
GLOBALF  DC    CL2' '                  X'0170' = LASTSUP
*                                      X'2210' = HOLDERROR
*                                      X'7040' = SUPS
         DC    CL2' '
GLOBALE  DC    CL7' '
         DC    CL120' '
*----------------------------------------------------------------------
TZONAME  DC    CL7' '
DZONAME  DC    CL7' '
SHOWSUPD DC    CL1'N'
*----------------------------------------------------------------------
SUPDKEY  DS    0CL16
         DC    XL1'00'
SUPDHEX  DC    XL1'00'
         DC    XL1'6F'
         DC    XL1'00'
SUPDPE   DC    CL7' '
         DC    CL1' '
         DC    XL2'0170'
         DC    XL2'0000'
*----------------------------------------------------------------------
TARGKEY  DS    0CL11
         DC    XL1'00'
TARGHEX  DC    XL1'00'
         DC    XL1'6F'
         DC    XL1'00'
TARGSYS  DC    CL7' '
*----------------------------------------------------------------------
TARGET   DS    0CL143
TARGETZ  DC    CL4' '
TARGETE  DC    CL7' '
         DC    CL1' '
TARGETF  DC    CL2' '
         DC    CL2' '
TARGETS  DC    CL7' '
         DC    CL120' '
*----------------------------------------------------------------------
         ORG   TARGET
         DS    CL5
TARGETH  DS    CL1
         ORG
*----------------------------------------------------------------------
DLIBKEY  DS    0CL11
         DC    XL1'00'
DLIBHEX  DC    XL1'00'
         DC    XL1'6F'
         DC    XL1'00'
DLIBSYS  DC    CL7' '
*----------------------------------------------------------------------
DLIB     DS    0CL143
DLIBZ    DC    CL4' '
DLIBE    DC    CL7' '
         DC    CL1' '
DLIBF    DC    CL2' '
         DC    CL2' '
DLIBS    DC    CL7' '
         DC    CL120' '
*----------------------------------------------------------------------
         ORG   DLIB
         DS    CL5
DLIBH    DS    CL1
         ORG
*----------------------------------------------------------------------
REPRT    DS    0CL80
         DC    CL2' '
REPRTS   DC    CL7' '                  PTF IN ERROR
         DC    CL2' '
REPRTE   DC    CL7' '                  APAR FIX
         DC    CL2' '
REPRTF   DC    CL7' '                  FIXING PTF
         DC    CL2' '
REPRTM   DC    CL40' '                 ACTION TO BE TAKEN
         DC    CL11' '
*----------------------------------------------------------------------
MSG1     DC    CL40'APPLY FIXING PTF'
MSG2     DC    CL40'RESTORE PTF IN ERROR OR APPLY FIXING PTF'
MSG3     DC    CL40'FIXING PTF NOT ON SYSTEM * ORDER FIX'
MSG4     DC    CL40'PE HAS BEEN SUPD * FIX CAN BE IGNORED'
MSG5     DC    CL40'PE HAS BEEN SUPD'
*----------------------------------------------------------------------
EOFSW    DC    CL1'N'                  END OF FILE SWITCH
FIXFND   DC    CL1'N'                  FIXING PTF FOUND SWITCH
TZONKEY  DC    XL1'00'                 TARGET ZONE KEY
DZONKEY  DC    XL1'00'                 DLIB ZONE KEY
*----------------------------------------------------------------------
WRKAREA  DSECT
WRKS     DS    CL7                     PTF IN ERROR
WRKE     DS    CL7                     APAR FIX
WRKLEN   EQU   *-WRKAREA
*----------------------------------------------------------------------
PELISTR5 CSECT
         LTORG                         LITERAL TABLE
         EJECT
*----------------------------------------------------------------------
GLBLCSI  ACB   AM=VSAM,MACRF=(KEY,SEQ,DIR,IN),DDNAME=GLBLCSI,          +
               EXLST=CSIEXIT
TARGCSI  ACB   AM=VSAM,MACRF=(KEY,SEQ,DIR,IN),DDNAME=TARGCSI,          +
               EXLST=CSIEXIT
DLIBCSI  ACB   AM=VSAM,MACRF=(KEY,SEQ,DIR,IN),DDNAME=DLIBCSI,          +
               EXLST=CSIEXIT
GLBLSEQ  RPL   ACB=GLBLCSI,AM=VSAM,OPTCD=(KEY,SEQ,KEQ,GEN,MVE),        +
               KEYLEN=4,ARG=ZONE6F,AREA=GLOBAL,AREALEN=143
TARGDIR  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,DIR,KEQ,GEN,MVE),        +
               KEYLEN=11,ARG=TARGKEY,AREA=TARGET,AREALEN=143
TARGSEQ  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,SEQ,MVE),                +
               AREA=TARGET,AREALEN=143
TARGSUP  RPL   ACB=TARGCSI,AM=VSAM,OPTCD=(KEY,DIR,KEQ,GEN,MVE),        +
               KEYLEN=16,ARG=SUPDKEY,AREA=TARGET,AREALEN=143
DLIBDIR  RPL   ACB=DLIBCSI,AM=VSAM,OPTCD=(KEY,DIR,KEQ,GEN,MVE),        +
               KEYLEN=11,ARG=DLIBKEY,AREA=DLIB,AREALEN=143
DLIBSEQ  RPL   ACB=DLIBCSI,AM=VSAM,OPTCD=(KEY,SEQ,MVE),                +
               AREA=DLIB,AREALEN=143
CSIEXIT  EXLST AM=VSAM,EODAD=NEXTPTF
REPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=80,    +
               BLKSIZE=3120
*----------------------------------------------------------------------
         END
