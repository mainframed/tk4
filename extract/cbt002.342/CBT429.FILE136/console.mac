         TITLE 'MVS CONSOLE ROUTINE'
CONSOLE  CSECT
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        FIXED POINT REGISTERS                                        *
*                                                                     *
***********************************************************************
         SPACE 1
R0       EQU   0        *USED BY O.S.
R1       EQU   1        *USED BY O.S. // ADDRESS OF PARAMETER LIST
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13       *USED BY O.S. // SAVE-AREA ADDRESS
R14      EQU   14       *USED BY O.S. // RETURN ADDRESS
R15      EQU   15       *USED BY O.S. // ENTRY-PT ADDR, RETURN CODE
         SPACE 1
***********************************************************************
*                                                                     *
*        FLOATING POINT REGISTERS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
F0       EQU   0
F2       EQU   2
F4       EQU   4
F6       EQU   6
         EJECT
ENTRY    SAVE  (14,12),T,CONSOLE_&SYSDATE._&SYSTIME            HD JUN88
         LR    R10,R15                 GET ENTRY POINT
         USING ENTRY,R10
         LR    R5,R1                   SAVE CPPL ADDRESS
         L     R0,GETLEN
         GETMAIN R,LV=(0)
         XC    0(DATASIZ,R1),0(R1)     CLEAR WORKAREA
         ST    R13,4(,R1)              CHAIN SAVE AREAS
         ST    R1,8(,R13)              *
         LR    R13,R1                  POINT TO MY SAVERAREA
         USING DATA,R13
         RWHOLE AUTHON                                         HD JUN88
         GTSIZE ,
         LTR   R0,R0
         BZ    RETURN
         ST    R0,SCRLEN
         USING PSCB,R3                                         HD JUN88
         L     R3,8(,R5)               TEST FOR OPER ABILITY
         TM    PSCBATR1,PSCBCTRL          IN THE PSCB          HD JUN88
         BO    OKGO                    USER HAS AUTHORITY
         DROP  R3                                              HD JUN88
         LA    R0,L'ERRMSG             SEND NO GO
         LA    R1,ERRMSG
         LA    R4,PUTFLG
         SLL   R4,24
         OR    R1,R4
         TPUT  (1),(0),R
         B     RETURN
         EJECT
OKGO     DS    0H                                              HD JUN88
         MODESET MF=(E,SUPRMOD)
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  SET UP ESTAE EXIT TO TRAP ABENDS AND FREE STORAGE          HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         ESTAE CEXIT,CT,PARAM=SQUATEP,                         HD JUN88X
               XCTL=NO,PURGE=NONE,                             HD JUN88X
               ASYNCH=NO,TERM=YES,MF=(E,ESTAE2)                HD JUN88
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  GET STORAGE FOR COMMON AREA CODE                           HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         GETMAIN RU,LV=SQUATL,SP=241,LOC=BELOW                 HD JUN88
         ST    R1,SQUATEP              SAVE ENTRY POINT        HD JUL89
         MVC   0(SQUATL,R1),SQUAT      MOVE SQUAT CODE         HD JUN88
         LA    R1,CROSSMEM-SQUAT(,R1)  INCREMENT ADDRESS       HD JUL89
         ST    R1,SQATCMEP             SAVE CROSSMEM EP        HD JUL89
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  SET UP CROSS MEMORY ENVIORNMENT AND EXTRACT TDCM ADDRESS   HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         XC    AXLIST,AXLIST           CLEAR AXLIST
         MVI   AXLIST+1,X'2'
         LA    R9,SH6ASID
         AXRES AXLIST=AXLIST           RESERVE AX VALUE
         LA    R2,1                    SET AX=1
         AXSET AX=(2)                  CHANGE AX VALUE TO ONE
         STH   R0,AXSAVE               SAVE ORGINAL AX VALUE
         L     R15,CVTPTR              GET CVT ADDRESS
         USING CVT,R15
         L     R15,CVTCUCB             GET UCM BASE ADDRESS
         USING UCM,R15
         LH    R1,UCMCTID              GET CONSOLE TASK ASID
         ST    R1,0(,R9)               SAVE IT
         EPAR  R1                      GET PRIMARY ASID
         STH   R1,0(,R9)               PUT IT IN THE PARM LIST
         L     R11,UCMVEZ              *LOAD SIZE OF UCM ENTRY
         L     R14,UCMVEL              GET ADDR OF LAST UCM ENTRY
         L     R15,UCMVEA              GET FIRST  UCME
         USING UCMLIST,R15
CONCHK   TM    UCMDISP1,X'80'          *CHECK FOR MAST CONS
         BO    CHKTYPE
         LA    R15,0(R11,R15)          *INCREMENT TO NEXT UCM ENTRY
         CR    R15,R14                 CHECK FOR END OF LIST
         BNH   CONCHK                  ITS OK SO GO AGAIN
         LA    R0,L'CONERR             GET LEN OF CONSOLE ERR MSG
         LA    R1,CONERR               GET ADDR OF CONSOLE ERR MSG
         L     R4,PUTFLG               GET PUT FLGS
         SLL   R4,24                   PUT FLGS IN UPPER BYTE
         OR    R1,R4                   SET TPUT REG
         TPUT  (R1),(R0),R
         B     RETURN
CHKTYPE  MVI   CTYPE,C'P'              ASSUME NONCOLOR CONSOLE
         CLI   UCMEDEVX,UCM3792B       *CHECK FOR 3279-2B
         BE    SETCOLOR
         CLI   UCMEDEVX,UCM3793B       *CHECK FOR 3279-2B
         BNE   GETDCM
SETCOLOR MVI   CTYPE,C'C'              SET CONSOLE TYPE
GETDCM   L     R15,UCMXB               GET FIXED DCM ADDRESS
         DROP  R15
         LH    R6,2(,R9)
         SSAR  R6                      SET ADDR TO SECONDARY ADDR
         L     R1,SQUATEP              LOAD STORAGE ADDRESS    HD JUN88
         BASR  R14,R1                  GO FISH                 HD JUN88
         LA    R4,4                    GET LEN OF DATA TO MOVE
         LA    R3,TEMPA1               WHERE TO PUT ADDRESS (DATA)
         LA    R5,DCMAENTR-STRTDCM(R15)    GET ADDR OF ADDR    HD JUN88
         LA    R14,0                   SET KEY 0
         MVCP  0(R4,R3),0(R5),R14       MOVE ADDR TO TEMPA1
         LA    R3,TEMPA2
         LA    R5,DCMASCRN-STRTDCM(R15)
         LA    R14,0
         MVCP  0(R4,R3),0(R5),R14
         LH    R6,0(R9)                GET MY ADDRESS SPACE
         SSAR  R6                      SET PRIMARY ADDRESSING
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  SET UP SCREEN FORMAT AND CALL CROSSMEM TO MOVE DATA        HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         L     R1,TEMPA1               LOAD ADDR OF ENTRY LINE
         S     R1,TEMPA2               MINUS ADDR OF START OF BUFFER
         ST    R1,8(,R9)               STORE BUFFER SIZE IN PARMLIST
         LR    R4,R1                   SAVE LEN FOR DIVIDE
         SRDL  R4,32                   SHIFT FOR DIVIDE
         L     R1,TEMPA2               GET SCREEN ADDRESS
         CLI   CTYPE,C'C'              CHECK FOR COLOR CON
         BNE   SETNCOL
         S     R1,=F'12'               BACKUP FOR ATTRIBUTE BYTES
         D     R4,=F'90'               GET NUM OF ROWS
         B     SKPNCOL
SETNCOL  S     R1,=F'6'
         D     R4,=F'84'               GET NUM OF ROWS
SKPNCOL  ST    R1,4(,R9)               STORE SCREEN ADDR IN PARMLIST
         LA    R5,3(R5)                ADD 3 FOR ENTRY AREA
         ST    R5,CROWS                SAVE NUM OF ROWS
         MODESET MF=(E,PROBMOD)
         SPACE 3
         LA    R1,DATASIZ(,R13)        GET TGET BUFFER ADDRESS
         ST    R1,SH6INPTA             SAVE IT
         LA    R1,SH6TGTBZ(,R1)        GET SCREEN BUFFER ADDRESS
         ST    R1,SH6BUFAD             SAVE IT
         LA    R1,SH6BUFSZ(,R1)        GET ADDR OF USER SCR BUF
         ST    R1,USCRBUF              SAVE ADDR OF USER SCR BUF
         MVI   0(R1),X'C3'             SET UP WCC
         LA    R1,80                   SET UP TGET PARMS
         ST    R1,SH6INPT              *
         MVI   SH6TGOPT,TERMTGET+TGETASIS  *
         OI    SH6FLAG1,SH6JES         SET JES COMMANDS OK
         OI    SH6FLAG1,SH6AUTH+SH6USE  SET AUTH FLAG
         SPACE 2
SH6A005  DS    0H
         TM    SH6FLAG1,SH6USE          IS USER OK
         BZ    SH6EOJ
         STFSMODE ON,INITIAL=YES
         STTMPMD  ON                                           HD JUN88
         STLINENO LINE=1
SH6A010  BAL   R14,SH6B010             ENTRY TO MOVE ROUTINE
         CLI   CTYPE,C'C'              CHECK FOR COLOR CONSOLE
         BNE   SKIPCOL                 SKIP COLOR CON ADJUST
         L     R3,USCRBUF              GET ADDR OF USER BUF AREA
         LA    R3,1(,R3)               BUMP PAST WCC
         L     R4,SH6BUFAD             GET ADDR OF CONSOLE BUF
         L     R5,CROWS                GET NUM OF CONSOLE ROWS
         SH    R5,=H'3'                SUB FOR ENTRY AREA
CLOOP    MVC   0(3,R3),0(R4)           MOVE SBA AND SCR ADDR
         MVC   3(2,R3),=X'1DE4'        MOVE IN SF AND ATTR BYTE
         MVC   5(79,R3),11(R4)         MOVE IN TEXT
         LA    R3,84(,R3)              INCR TO NEXT TO LINE
         LA    R4,90(,R4)              INCR TO NEXT FROM LINE
         BCT   R5,CLOOP                KEEP ON MOV'N'
         ST    R3,ENTRYA               SAVE ENTRY AREA ADDR
         XC    0(168,R3),0(R3)          CLEAR ENTRY AREA
         LA    R3,168(,R3)              AND INCR
         S     R3,USCRBUF              CALC THE LEN OF USER BUF
         ST    R3,CONBUFL
         B     FIXUPSCR                GO FIX UP FOR USER SCR SIZE
SKIPCOL  L     R4,USCRBUF              GET USER BUF ADD
         L     R5,DCMBUFSZ             GET LEN OF BUFFER
         LA    R4,1(,R4)               BUMP PAST WCC
         LR    R15,R5
         L     R14,SH6BUFAD            GET ADDR OF FROM BUFF
         MVCL  R4,R14
         L     R5,DCMBUFSZ             GET LEN
         LA    R5,1(,R5)               ADD ONE FOR WCC
         L     R4,USCRBUF              GET ADDR OF USER SCR BUF
         AR    R4,R5                   POINT TO END
         ST    R4,ENTRYA               SAVE ENTRY AREA ADDR
         XC    0(168,R4),0(R4)         CLEAR THE AREA
         LA    R5,168(,R5)             BUMP PAST ENTRY AREA
         ST    R5,CONBUFL              AND SAVE
FIXUPSCR EQU   *
         L     R1,USCRBUF              GET ADDRESS
         CLC   CROWS,SCRLEN            HOW DO THE TWO SCRNS COMPARE
         BNH   BUFREADY                YES...DO NOT MANIPULATE
         L     R6,USCRBUF              GET ADDR OF USER SCR BUF
         A     R6,CONBUFL              GET ADDR OF END OF BUFFER
         L     R4,SCRLEN               GEN NUMBER OF USER ROWS
         LR    R7,R4                   GET COUNTER OF ROWS
         BCTR  R7,0                    SUB FOR ENTRY AREA
         BCTR  R7,0                    SUB FOR ENTRY AREA
         MH    R4,=H'84'               GET LEN OF NEW BUFFER
         SR    R6,R4                   GET ADDR OF NEW BUFFER
         ST    R4,CONBUFL              SAVE NEW BUF LEN
         LR    R1,R6                   SAVE BUFF ADDR FOR PUT
         BCTR  R1,0                    SUB FOR WCC
         MVI   0(R1),X'C3'             MOVE IN WCC
         SLR   R3,R3                   USE R3 AS SCREEN POS
FLOOP    LR    R4,R3                   GET SCR POS IN EVEN REG
         SRDL  R4,6                    SHIFT LOW ORDER BITS TO ODD
         SRL   R5,26                   THEN SHIFT THEM TO LOW ORDER
         STC   R4,1(,R6)               SAVE FIRST ADDR BYTE
         STC   R5,2(,R6)               SAVE SECOND ADDR BYTE
         TR    1(2,R6),CCTABL          PUT IN REAL ADDR BYTES
         LA    R3,80(,R3)              INCR TO NEXT POS
         LA    R6,84(,R6)              GET TO NEXT ROW
         BCT   R7,FLOOP                AND GO AGAIN
BUFREADY L     R6,ENTRYA               GET ADDR OF ENTRY AREA
         MVI   0(R6),X'12'             MOVE IN EUA
         L     R4,SCRLEN
         MH    R4,=H'80'               CALC LAST POS
         BCTR  R4,0                    POINT TO LAST POS
         SRDL  R4,6                    SHIFT LOW ORDER BITS TO ODD
         SRL   R5,26                   THEN SHIFT THEM TO LOW ORDER
         STC   R4,1(,R6)               SAVE FIRST ADDR BYTE
         STC   R5,2(,R6)               SAVE SECOND ADDR BYTE
         TR    1(2,R6),CCTABL          PUT IN REAL ADDR BYTES
         LA    R6,3(,R6)               GET ADDR OF END OF BUF
         L     R4,SCRLEN               GET NUM OF LINES
         SH    R4,=H'2'                BACK UP FOR ENTRY AREA
         MH    R4,=H'80'               CALC BUF POS
         MVI   0(R6),X'11'             MOVE SBA
         SRDL  R4,6                    SHIFT LOW ORDER BITS TO ODD
         SRL   R5,26                   THEN SHIFT THEM TO LOW ORDER
         STC   R4,1(,R6)               SAVE FIRST ADDR BYTE
         STC   R5,2(,R6)               SAVE SECOND ADDR BYTE
         TR    1(2,R6),CCTABL          PUT IN REAL ADDR BYTES
         LA    R6,3(,R6)               BUMP PAST SBA
         MVC   0(3,R6),=X'1D4013'      MOVE IN SFA, CURSOR
         LA    R6,3(,R6)               GET ADDR OF END OF BUF
         SR    R6,R1                   GET LEN
         LR    R0,R6                   GET LEN TO PUT
         ICM   R1,8,=AL1(3)            SET TPUT OPTIONS
         TM    SH6FLAG1,SH6AUTH          CHECK CONSOLE AUTH
         BO    SH6A011
         MVI   0(R1),X'C4'             RESET KEY BOARD
SH6A011  BAL   R14,TPUT
         TM    SH6FLAG1,SH6AUTH          CHECK CONSOLE AUTH
         BO    SH6A012
         STIMER WAIT,DINTVL=WAITIME
         B     SH6A010
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  GET INPUT FROM USER AND ISSUE OPERATOR COMMAND             HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
SH6A012  BAL   R14,TGET
         CLI   0(R9),X'6E'             CHECK FOR RESHOW
         BE    SH6A005
         CLI   0(R9),C'3'              CHECK FOR EOF PFK3
         BE    SH6EOJ
         CLI   0(R9),X'C3'             CHECK FOR EOF PFK15
         BE    SH6EOJ
         CLI   0(R9),X'7D'             CHECK FOR ENTER KEY
         BNE   SH6A005
         TM    SH6FLAG1,SH6TRMIN           WAS THERE INPUT
         BO    SH6A010                   NO
         TM    SH6FLAG1,SH6AUTH        CHECK AUTH
         BZ    SH6A030                 USER NOT AUTH
         CLI   6(R9),C'K'              DONT ALLOW CONTROL CMDS
         BE    SH6A030
         CLI   6(R9),C'$'              IS IT A JES2 COMMAND
         BNE   SH6A019                 NO
         TM    SH6FLAG1,SH6JES         IS USER AUTHORIZED
         BZ    SH6A030                 NO
SH6A019  LA    R2,6(,R9)               BUMP PAST BUFFER HEADER
         LR    R3,R2
SH6A020  CLI   0(R3),X'FF'             LOOK FOR END OF DATA
         BE    SH6A025                 GO GET LENGTH OF DATA
         LA    R3,1(,R3)               BUMP TO NEXT CHAR
         B     SH6A020                 CHECK AGAIN
SH6A025  SR    R3,R2                   GET CMD LENGTH
         LA    R3,4(,R3)               ADD SVC 34 HEADER LENGTH
         SLL   R3,16                   SET FIELDS FOR SVC 34
         ST    R3,2(,R9)               *
         LA    R1,2(,R9)               GET ADDR OF MSG FOR WTO
         SLR   R0,R0                   CLEAR R0
         SVC   35                      ISSUE DISPLAY OF COMMAND
         MODESET MF=(E,SUPRMOD)
         SLR   R0,R0                   SET R0
         LA    R1,2(,R9)               POINT TO BUFFER
         SVC   34                      ISSUE THE CMD
         MODESET MF=(E,PROBMOD)
         B     SH6A005
SH6A030  LM    R0,R1,ER0002
         BAL   R14,TPUT
         BAL   R14,TGET
         B     SH6A005
         EJECT
SH6B010  DS    0H
         SPACE 1
***************************************************************HD JUL89
**                                                             HD JUL89
**  BRANCH AND LINK TO CROSSMEM IN SQA TO MOVE DATA            HD JUL89
**                                                             HD JUL89
***************************************************************HD JUL89
         SPACE 1
         ST    R14,SH6RTN2
SH6B015  DS    0H
         MODESET MF=(E,SUPRMOD)        GET SUPERVISOR STATE    HD JUN88
         LA    R1,SH6ASID              POINT TO PARM LIST
         L     R15,SQATCMEP            LOAD EP                 HD JUL89
         O     R15,BIT31               SET TO 31 BIT MODE      HD JUL89
         BASSM R14,R15
         MODESET MF=(E,PROBMOD)        BACK TO PROBLEM MODE    HD JUN88
         LA    R14,SH6B015Z                                    HD JUL89
         BSM   0,R14                   BACK TO 24 BIT MODE     HD JUL89
SH6B015Z L     R14,SH6RTN2             RETURN
         BR    R14
         SPACE 2
SH6EOJ   DS    0H
         STLINENO LINE=1
         STFSMODE OFF
         STTMPMD  OFF                                          HD JUN88
RETURN   DS    0H                                              HD JUN88
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  FREE STORAGE AND RETURN TO CALLER                          HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         MODESET MF=(E,SUPRMOD)        GET SUPERVISOR STATE    HD JUN88
         L     R1,SQUATEP              GET STORAGE ADDRESS     HD JUN88
         LTR   R1,R1                   ANYTHING THERE?         HD JUN88
         BZ    RETURN1                 NO, BYPASS FREEMAIN     HD JUN88
         FREEMAIN RU,LV=SQUATL,A=(1),SP=241                    HD JUN88
         SPACE 1                                               HD JUN88
RETURN1  DS    0H                                              HD JUN88
         MODESET MF=(E,PROBMOD)        BACK TO PROBLEM MODE    HD JUN88
         RWHOLE AUTHOFF                                        HD JUN88
         LR    R1,R13                  GET WORK AREA ADDRESS
         L     R13,4(,R13)             POINT TO PREVIOUS SAVE AREA
         LA    R0,DATASIZ+SH6BUFSZ+SH6TGTBZ WORK AREA SIZE
         FREEMAIN R,LV=(0),A=(1)
         SPACE 1
         RETURN (14,12),T,RC=0
         TITLE  'CONSOLE - EXITS AND COMMON SUBROUTINES'
TGET     DS    0H
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  'TGET' SUBROUTINE                                          HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         ST    R14,SH6RTN1             SAVE RETURN ADDRESS
         NI    SH6FLAG1,255-SH6TRMIN
         LM    R0,R1,SH6INPT           LOAD TGET PARMS
         TGET  (1),(0),R
         L     R9,SH6INPTA             GET BUFFER ADDRESS
         LA    R15,0(R1,R9)            GET END OF DATA
         MVI   0(R15),X'FF'            MARK END OF DATA
         C     R1,=F'6'                WAS INPUT GT 6 BYTES
         BNH   TGETNOIN                NO
         LR    R15,R1                  SAVE DATA COUNT
         SH    R15,=H'7'               SUBTRACT HEADER+1
         EX    R15,EX1                 MAKE IT UPPER CASE
TGETEX   L     R14,SH6RTN1             GET RETURN ADDRESS
         BR    R14
TGETNOIN OI    SH6FLAG1,SH6TRMIN
         B     TGETEX
EX1      OC    6(0,R9),BLANKS
         SPACE 2
TPUT     DS    0H
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**  'TPUT' SUBROUTINE                                          HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         ST    R14,SH6RTN1             SAVE RETURN
         TPUT  (1),(0),R
         L     R14,SH6RTN1
         BR    R14
         SPACE 2
***************************************************************HD JUN88
**                                                             HD JUN88
**  ESTAE EXIT - ENTERED WHEN ABTERM IN MAIN PROGRAM           HD JUN88
**  USED TO FREE CSA STORAGE AT ADDRESS SAVED IN SQASTOR       HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
CEXIT    DS    0H                      ESTAE EXIT              HD JUN88
         USING CEXIT,R12               TELL ASSEMBLER          HD JUN88
         LR    R12,R15                 GET ENTRY POINT ADDR    HD JUN88
         LA    R4,12                   LOAD ESTAE RETURN CODE  HD JUN88
         CR    R0,R4                   DID WE GET AN SDWA?     HD JUN88
         BNE   GOTSDWA                 YES, CONTINUE           HD JUN88
NOSDWA   DS    0H                                              HD JUN88
***************************************************************HD JUN88
**                                                             HD JUN88
**  R0 = 12 / MVS COULDN'T GET STORAGE FOR AN SDWA             HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         LR    R5,R14                  SAVE RETURN ADDRESS     HD JUN88
         L     R2,0(R2)                LOAD PARM ADDRESS       HD JUN88
         L     R1,0(R2)                POINT TO PARAMETER      HD JUN88
         LTR   R1,R1                   PARAM PASSED?           HD JUN88
         BZ    NOSRETN                 NO..RETURN              HD JUN88
         FREEMAIN RU,LV=SQUATL,A=(1),SP=241                    HD JUN88
         LR    R14,R5                  LOAD RETURN ADDRESS     HD JUN88
NOSRETN  SLR   R15,R15                 CONTINUE TERMINATION    HD JUN88
         BR    R14                     RETURN TO CALLER        HD JUN88
         SPACE 2                                               HD JUN88
GOTSDWA  DS    0H                                              HD JUN88
         SPACE 1
***************************************************************HD JUN88
**                                                             HD JUN88
**       HOME OF THE SDWA AND LAND OF THE FREEMAIN             HD JUN88
**                                                             HD JUN88
***************************************************************HD JUN88
         SPACE 1
         USING SDWA,R6                 TELL ASSEMBLER          HD JUN88
         STM   R14,R12,12(R13)         SAVE REGISTERS          HD JUN88
         LR    R6,R1                   GET ADDRESS OF SDWA     HD JUN88
         SPACE 1                                               HD JUN88
         L     R1,SDWAPARM             GET PARM ADDRESS        HD JUN88
         L     R1,0(,R1)               GET PARM                HD JUN88
         LTR   R1,R1                   IS IT GOTTEN?           HD JUN88
         BZ    GOTSRETN                NO, SKIP FREEMAIN       HD JUN88
         FREEMAIN RU,LV=SQUATL,A=(1),SP=241                    HD JUN88
GOTSRETN SETRP REGS=(14,12),RC=0,WKAREA=(6)                    HD JUN88
         TITLE 'CONSOLE - DATA AREAS'
         DS    0F                                              HD JUN88
BIT31    DC    X'80000000'             TO SET 31BIT MODE       HD JUN88
         SPACE 1                                               HD JUN88
SQUAT    DS    0H                                              HD JUN88
         SAC   256(0)                  SWITCH ADDRESS SPACE    HD JUN88
         L     R15,0(,R15)             LOAD TDCM ADDRESS       HD JUN88
         SAC   0(0)                    RETURN HOME             HD JUN88
         BR    R14                     RETURN TO CALLER        HD JUN88
CROSSMEM DS    0H                                              HD JUL89
*                                                              HD JUL89
*  THIS ROUTINE IS USED TO MOVE DATA FROM ONE ADDRESS SPACE TO HD JUL89
*  ANOTHER -- ON ENTRY R1 POINTS TO A LIST OF 4 PARMS          HD JUL89
*  1) 02(R1) IS ASID                                           HD JUL89
*  2) 04(R1) IS THE FROM DATA AREA IN SECONDARY ADDR SPACE     HD JUL89
*  3) 08(R1) IS THE LENGTH TO BE MOVED                         HD JUL89
*  4) 12(R1) IS THE TARGET ADDRESS IN THE PRIMARY ADDR SPACE   HD JUL89
*                                                              HD JUL89
*  THIS ROUTINE IS, AND SHOULD, BE ENTERED IN SUPERVISOR MODE  HD JUL89
*  WITH A STORAGE PROTECT KEY OF ZERO!                         HD JUL89
*                                                              HD JUL89
*                                                              HD JUL89
*  UPDATED 07/11/89 - HOWARD M. DEAN                           HD JUL89
*                                                              HD JUL89
*                                                              HD JUL89
@CROSS   SAVE  (14,12),,CROSSMEM_&SYSDATE._&SYSTIME            HD JUN88
         LR    R10,R15                                         HD JUL89
         USING CROSSMEM,R10                                    HD JUL89
         LR    R9,R1                   SAVE PARM LIST          HD JUL89
         L     R3,12(,R9)        GET TARGET ADDRESS            HD JUL89
         L     R4,4(,R9)         GET SCREEN ADDRESS            HD JUL89
         LH    R1,2(R9)          LOAD SECONDARY ASID           HD JUL89
         L     R6,8(,R9)         LOAD BUFFER SIZE              HD JUL89
         SSAR  R1                SET SECONDARY ADDRESS SPACE   HD JUL89
         SAC   X'100'(0)         SET SECANDARY ADDRESSING      HD JUL89
         LA    R5,256            GET EFFECTIVE LEN             HD JUL89
         LA    R2,0                SET ACCESS KEY              HD JUL89
@LOOP1   MVCP  0(R6,R3),0(R4),R2    MOVE FROM SEC ADDRSPC      HD JUL89
         BZ    @ENDMVC              END OF MOVE                HD JUL89
         AR    R3,R5                   INCR SINK BY 256        HD JUL89
         AR    R4,R5                   INCR SOURCE BY 256      HD JUL89
         SR    R6,R5                   DECREMENT LEN BY 256    HD JUL89
         B     @LOOP1                  LOOP TILL YOU POOP      HD JUL89
@ENDMVC  DS    0H                                              HD JUL89
         SAC   X'000'(0)               SET PRIMARY ADDRESSING  HD JUL89
         LH    R1,0(R9)                LOAD CONSOLE ASID       HD JUL89
         SSAR  R1                                              HD JUL89
         LM    R14,R12,12(R13)                                 HD JUL89
         SR    R15,R15                                         HD JUL89
         BSM   0,R14                   RETURN IN CORRECT MODE  HD JUL89
SQUATL   EQU   *-SQUAT                 SQUAT LENGTH            HD JUN88
         EJECT
CLR      DC    A(CL01001E-CL01001)
         DC    AL1(3),AL3(CL01001)
ER0001   DC    A(ER01001E-ER01001)
         DC    AL1(3),AL3(ER01001)
ER0002   DC    A(ER01002E-ER01002)
         DC    AL1(3),AL3(ER01002)
ER0003   DC    A(ER03001E-ER03001)
         DC    AL1(3),AL3(ER03001)
ER0004   DC    A(ER04001E-ER04001)
         DC    AL1(3),AL3(ER04001)
         SPACE 3
LOADCRSM LOAD  EP=CROSSMEM,GLOBAL=YES,SF=L
LOADLEN  EQU   *-LOADCRSM
         SPACE 3
WAITIME  DC    C'00001000'
BLANKS   DC    CL80' '
CL01001  EQU   *
         DC    X'C3',X'11',X'4040',X'3C',X'4040',X'00'
CL01001E EQU   *
ER01001  EQU   *
         DC    X'C3',X'11',X'5A50',X'1D40',X'13',X'12',X'5D61'
ER01001E EQU   *
ER01002  EQU   *
         DC    X'C3',X'11',X'5AD1'
         DC    C'COMMAND NOT AUTHORIZED'
ER01002E EQU   *
ER03001  EQU   *
         DC    X'C3',X'11',X'E450',X'1D40',X'13',X'12',X'E761'
ER03001E EQU   *
ER04001  EQU   *
         DC    X'C3',X'11',X'F240',X'1D40',X'13',X'12',X'F561'
ER04001E EQU   *
         SPACE 3
SCRBUF2  EQU   1761
SCRBUF3  EQU   2401
SCRBUF4  EQU   3281
         SPACE 3
CONERR   DC    C'ERROR IN FINDING MASTER CONSOLE'
ERRMSG   DC    C'USER NOT AUTHORIZED'
PUTFLG   EQU   B'00010100'
PROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L
SUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L
CCTABL   DC    X'40C1C2C3C4C5C6C7'
         DC    X'C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7'
         DC    X'D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7'
         DC    X'E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7'
         DC    X'F8F97A7B7C7D7E7F'
         EJECT
DATA     DSECT
SAVEREG  DS    18F
SQUATEP  DS    A                       SQA CODE ENTRY POINT    HD JUL89
SQATCMEP DS    A                       "CROSSMEM" ENTRY POINT  HD JUL89
AXLIST   DC    0F'0'
         DC    H'2'                    NUMBER OF AX'S TO BE RESERVED
         DC    H'0'                    AX=0 VALUE
AX       DC    H'0'                    AX=1 VALUE
AXSAVE   DC    F'0'                    SAVE AREA FOR ORGINAL AX VALUE
ESTAE2   ESTAE ,CT,XCTL=NO,PURGE=NONE,ASYNCH=NO,TERM=YES,MF=L  HD JUN88
SH6BUFSZ EQU   3612                    SCREEN BUFFER SIZE
CONBUFL  DS    F
SCRLEN   DS    F                       USER'S SCREEN LENGTH
SH6INPT  DS    A                       TGET INPUT BYTE COUNT
SH6TGOPT DS    AL1                     TGET OPTION BYTE
TERMTGET EQU   X'80'
TGETASIS EQU   X'01'
         ORG   *-1
SH6INPTA DS    A                       TGET BUFFER ADDRESS
SH6TGTBZ EQU   87                      TGET BUFFER SIZE
SH6ASID  DS    A                       ASID FOR TASK AND CONSOLE
DCMPAGAD DS    A                       PAGEABLE DCM ADDRESS
DCMBUFSZ DS    F                       BUFFER SIZE
SH6BUFAD DS    A                       SCREEN BUFFER ADDRESS
SH6RTN1  DS    A                       RETURN ADDRESS FOR TGET
SH6RTN2  DS    A                       RETURN ADDRESS FOR CROSSMEM
SH6CRSEP DS    A                       EP FOR CROSSMEM
SH6FLAG1 DS    AL1
SH6AUTH  EQU   X'80'                   USER HAS AUTHORITY
SH6TRMIN EQU   X'40'                   TERMINAL INPUT
SH6USE   EQU   X'20'                   ALLOW USE
SH6CRSLD EQU   X'10'                   CROSS MEM LOADED
SH6JES   EQU   X'08'                   ALLOW JES COMMANDS
SH6RSV01 DS    AL3
SH6USRID DS    CL7                     TSO USER ID
CTYPE    DS    C
CROWS    DS    F                       NUMBER OF ROWS IN CONSOLE SCR
USCRBUF  DS    A                       ADDRESS OF USER SCREEN BUF
TEMPA1   DS    A
TEMPA2   DS    A
ENTRYA   DS    A
DATASIZ  EQU   *-DATA
         TITLE 'CONSOLE - LITERALS AND MVS DUMMY SECTIONS'     HD JUN88
CONSOLE  CSECT
GETLEN   DC    A(DATASIZ+(2*SH6BUFSZ+1)+SH6TGTBZ) WORK AREA SIZE
         SPACE 1                                               HD JUN88
         LTORG
         SPACE 1                                               HD JUN88
         EJECT
         IEECUCM DSECT=YES,FORMAT=NEW,LIST=YES
         EJECT
         IEECDCM
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IKJTCB LIST=YES
         EJECT
         IKJPSCB                                               HD JUN88
         EJECT                                                 HD JUN88
         IHASDWA  ,                                            HD JUN88
         EJECT                                                 HD JUN88
TIOT     DSECT
         IEFTIOT1
CONSOLE  CSECT
         END
