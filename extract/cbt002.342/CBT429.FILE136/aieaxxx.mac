AIEAXXX  TITLE 'WTO EXIT FOR IEA MESSAGE PROCESSING'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . AIEAXXX
*
*  DATE WRITTEN . . . . 04/85
*
*  AUTHOR . . . . . . . M. MILLER (FROM J. ELSWORTH)
*
*  ENVIRONMENT  . . . . MVS/XA WTO EXIT
*
*  FUNCTION
*    RECEIVES CONTROL FOR VARIOUS IEA MESSAGES ( IEAXXX ).
*    AS SPECIFIED IN IEAMPF00 IN PARMLIB
*    MAY START TASKS OR TAKE OTHER ACTIONS.
*
*
*  DESCRIPTION:
*    1) GETMAIN A SAVE AND WORK AREA
*    2) BRANCH DEPENDING ON MESSAGE ID
*
*    IEA911E:
*      START THE IPCSADD TASK, S IPCSADD,DUMP=??, VIA SVC34.
*      DUMP IS THE DUMP DATASET TO BE COPIED FOR IPCS
*
*    3) FREEMAIN STORAGE
*    4) RETURN
*
*
*  REGISTERS AT ENTRY:
*     R1 : @CTXT COMMTAS USER EXIT PARAMETER LIST
*    R13 : @STANDARD SAVE AREA
*    R14 : RETURN ADDRESS
*    R15 : ENTRY POINT
*
*
*  REGISTERS AT EXIT: ALL REGISTERS RESTORED
*
*
*
*
*
*
*
*
*
*
*
*
*            ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  REGISTERS USED:
*
R0       EQU   0                       WORK REGISTER
R1       EQU   1                       INPUT PARMS AND WORK REGISTER
R2       EQU   2                       MESSAGE ATTRIBUTES BAR
R3       EQU   3
R4       EQU   4                       MESSAGE TEXT BAR
R5       EQU   5                       CTXT BAR
R6       EQU   6
R7       EQU   7                       WORK REGISTER
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER AND DYN BAR
R14      EQU   14                      RETURN ADDRESS
R15      EQU   15                      ENTRY ADDRESS
*
*
*  CALLED MODULES: NONE
*
*  ASSUMPTIONS: MUST BE RUN UNDER AN MVS/XA SYSTEM 2.1.2
*
*
*  ATTRIBUTES:
*    REENTRANT
*    AMODE=31
*    RMODE=ANY
*
*  ABENDS: NONE
*
*
*  MESSAGES (WTO'S):
*    AIEAXXX - NO MESSAGE MATCH FOUND
*      ISSUED IF MODULE INVOKED FOR OTHER THAN ITS INTENDED PURPOSES
*
*
*  CAVEATS:
*    DO NOT ISSUE ANY WAITS IN THIS ROUTINE
*    BE SURE TO LINK AS REENTRANT
*
*
*
*
*
*
*
*
*
*
*            ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  IMPLEMENTATION NOTES:
*    AFTER ASSEMBLY AND LINK LLA MUST BE RESTARTED
*
*    IN SYS1.PARMLIB(MPFLST??) MUST CONTAIN AT LEAST ONE OF THE
*    FOLLOWING STATEMENTS:
*
*      IEA????,SUP(NO),USEREXIT(AIEAXXX)
*
*      WHERE IEA???? IS THE MESSAGE ID TO CAUSE OUR INVOCATION
*
*      TO ACTIVATE THE MPFLIST; T MPF=??  WHERE ?? IS THE MPFLST SUFFIX
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
AIEAXXX  CSECT
AIEAXXX  AMODE 31                      31 BIT ADDRESSING MODE
AIEAXXX  RMODE ANY                     CAN RUN ABOVE OR BELOW
         SPACE 2
***********************************************************************
*  ESTABLISH ADDRESSABILITY, AND CHAIN SAVE AREAS
***********************************************************************
         SPACE 1
         USING *,R15                   EST. ADDRESSABILITY
         B     PROLOG                  BYPASS PROLOGUE
         DC    AL1(IDXXX-ID)           PROLOGUE LENGTH
ID       DC    C'AIEAXXX '           MODULE NAME
         DC    C'&SYSDATE-&SYSDATE'    COMPILE DATE
IDXXX    DS    0H                      ALLIGNMENT
PROLOG   SAVE  (14,12)                 SAVE CALLERS REGS
         LR    R12,R15                 SAVE ENTRY ADRESS
         DROP  R15                     LOSE OLD BASE
         USING AIEAXXX,R12             REAL BASE ADDRESS=R12
         L     R5,0(R1)                @CTXT
         USING CTXT,R5                 MAP CTXT
         SPACE 2
***********************************************************************
*
*  GETMAIN A SAVEAREA AND WORK AREA
*
* NOTE! STORAGE IS ACQUIRED BELOW THE LINE DUE TO SVC34 REQUIREMENTS
*
***********************************************************************
         SPACE 1
GETMAIN  GETMAIN RU,LV=DYNAMICL,SP=230,LOC=BELOW,RELATED=(FREEMAIN)
         ST    R13,4(,R1)              SETUP
         ST    R1,8(R13)               SET FORWARD POINTER
         LR    R13,R1                  @ACQUIRED STORAGE
         USING DYNAMIC,R13             MAP DYNAMIC AREA
         EJECT
***********************************************************************
*  DETERMINE WHICH MESSAGE TO PROCESS
***********************************************************************
         SPACE 1
         L     R2,CTXTTXPJ             @MESSAGE ATTRIBUTESS
         USING CTXTATTR,R2             MAP MESSAGE ATTRIBUTES
         LA    R4,CTXTTMSG             @BASE TEXT
         USING MSGTEXT,R4              MAP BASE TEXT
         CLC   MSGID,=CL8'IEA911E'     MESSAGE IEA911E ?
         BE    IEA911E                 -YES
         SPACE 3
***********************************************************************
*  PUT TESTS FOR NEW MESSAGE TYPES HERE
***********************************************************************
         SPACE 1
         MVC   MSGERR(NOML),NOM
         WTO   MF=(E,MSGERR)      ISSUE ERROR MSG
         B     RETURN
         EJECT
***********************************************************************
*
*           1         2         3         4         5
*  1234567890123456789012345678901234567890123456789012
*
*  IEA911E COMPLETE DUMP ON SYS1.DUMP??
*  IEA911E PARTIAL DUMP ON SYS1.DUMP??
*
***********************************************************************
         SPACE 1
IEA911E  EQU   *
         MVC   COMHDR(COMLEN),CCOMHDR  MOVE CMD DATA TO DYNAMIC AREA
         CLC   MSGID+8(13),=CL13'COMPLETE DUMP'
         BE    CHK911A
         CLC   MSGID+8(13),=CL13'PARTIAL DUMP '
         BNE   RETURN
         MVC   COMDS(2),MSGID+33
         B     STRTCMD
CHK911A  MVC   COMDS(2),MSGID+34
         B     STRTCMD
*  ISSUE THE START COMMAND VIA SVC34
         SPACE 1
STRTCMD  EQU   *
         SR    R0,R0                   NO UCMID ADDRESS
         MGCR  COMHDR                  SEND COMMAND VIA SVC34
* TURN HIGH LIGHTING OFF
         OI    CTXTRFB1,CTXTRCDC       SET BIT TO CHANGE DESCRIPTORS
         L     R11,CTXTDCP             GET ADDR TO DESCIPTOR CODES
         XC    0(2,R11),0(R11)         CLEAR THE CODES
         EJECT
***********************************************************************
*  RETURN
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    R11,R13                 SAVE DYN AREA ADDR
         L     R13,4(R13)              @CALLERS SAVE AREA
         SPACE 2
*  FREE THE SAVE AREA AND WORK AREA THAT WAS ACQUIRED EARLIER
         SPACE 1
FREEMAIN FREEMAIN RU,LV=DYNAMICL,A=(R11),SP=230,RELATED=(GETMAIN)
         RETURN (14,12)                RESTORE REGS AND RETURN
         SPACE 5
***********************************************************************
*  CONSTANTS AND RENTRANT MISCELLANEOUS
***********************************************************************
         SPACE 1
NOM      WTO   'AIEAXXX - NO MESSAGE MATCH FOUND',                     X
               ROUTCDE=(1),DESC=(11),MF=L
NOML     EQU   *-NOM
CCOMHDR  DC    AL2(COMLEN),AL2(0)      COMMAND HEADER
CCOMMAND DC    C'S IPCSADD,DUMP='       COMMAND TEXT
CCOMDS   DC    C'?? '                  COMMAND TEXT (SYSTEM)
         SPACE 2
         LTORG
         EJECT
         IEZVX100
         EJECT
         IKJTCB                        TIMING CONTROL TABLE
         EJECT
         IEFTCT                        TIMING CONTROL TABLE
         EJECT
         IEFJMR                        JOB MANAGEMENT RECORD
         EJECT
IHAPSA   DSECT
         IHAPSA
         EJECT
***********************************************************************
*  MAP SAVE AND WORK AREAS THAT ARE ACQUIRED
***********************************************************************
         SPACE 1
DYNAMIC  DSECT
SAVE1    DS   18F                      SAVE AREA
         SPACE 1
COMHDR   DS    AL2(COMLEN),AL2(0)      COMMAND HEADER
COMMAND  DS    C'S IPCSADD,DUMP='      COMMAND TEXT
COMDS    DS    C'?? '                  COMMAND TEXT (DUMP DS)
COMLEN   EQU   *-COMHDR                COMMAND BLOCK LENGTH
MSGERR   DS    CL132
DYNAMICL EQU   *-DYNAMIC               LENGTH OF DYNAMIC AREA
         SPACE 5
MSGTEXT  DSECT
MSGID    DS    CL8                     MESSAGE ID
         END
