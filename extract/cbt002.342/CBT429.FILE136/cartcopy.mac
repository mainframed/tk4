         TITLE 'CARTRIDGE TAPE COPY'
CARTCOPY START
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT GEN
         STM   R14,R12,12(R13)           SAVE CALLERS REGISTERS
         LR    R9,R15                    INITIALIZE BASE REGISTER
         USING CARTCOPY,R9,R10           ESTABLISH ADDRESSABILITY
         ST    R13,MYSAVE+4              LINK TO MINE
         LA    R11,MYSAVE                MY SAVE AREA
         ST    R11,8(R13)                LINK TO CALLERS
         LR    R13,R11                   POINT R13 TO MY SAVE AREA
         LR    R10,R9                    PUT CONTENTS OF R9 INTO R10
         AH    R10,K4                    ADD 4096
         B     BEGIN                     START EM UP
MYNAME   DC    C'CARTCOPY'
VERSION  DC    C'1.0'
         DC    C' &SYSDATE, &SYSTIME'
K4       DC    H'4096'
MYSAVE   DC    18F'0'
*********************************************************************
* OPEN FILES                                                        *
*********************************************************************
BEGIN    DS    0H
         OPEN  (INPUT,INPUT,FATSOUT,OUTPUT)
         OPEN  (REJECT,OUTPUT)
*********************************************************************
* INITIALIZE THE TMC PARAMETER LIST                                 *
*********************************************************************
OPENTMC  DS    0H
         OPENTMC NOTACT=READERR3         INITIALIZE PARAMETR LIST
*********************************************************************
* HEADING ROUTINE                                                   *
*********************************************************************
         BAL   R8,REJHDR
         B     READCARD
REJHDR   DS    0H
         AP    RPAGE,PONE                ADD 1 TO PAGE COUNTER
         MVC   REJPAGE,=X'40202120'      MOVE IN EDIT MASK FOR EXPAGE
         ED    REJPAGE,RPAGE             EDIT EXPAGE ON OUTPUT
         PUT   REJECT,REJHDG1            WRITE HEADING 1
         PUT   REJECT,BLANKS             INSERT BLANK LINE
         BR    R8                        BRANCH BACK TO MAINLINE
*********************************************************************
* MAINLINE ROUTINE                                                  *
*********************************************************************
READCARD DS    0H
         GET   INPUT,INREC               GET INPUT RECORD
         CLI   INREC+3,C'A'              DOES VOL BEGIN WITH 'A'?
         BE    ACCEPT                    YES - ACCEPT RECORD
         PUT   REJECT,INREC              REJECT RECORD
         AP    RCOUNT,PONE               ADD 1 TO REJECT RECORD COUNT
         CLC   RCOUNT,PTHIRTY            IS REJECT RECORD COUNT > 30?
         BL    READCARD                  NO - GET ANOTHER CARD
         BAL   R8,REJHDR                 YES - GO TO HEADING ROUNTINE
         ZAP   RCOUNT,PZEROS             RESET REJECT CARD COUNTER
         B     READCARD                  GET ANOTHER CARD
ACCEPT   DS    0H
*        WTO   'ACCEPT',ROUTCDE=(11)
         MVC   VSN(6),INVOLSER           MOVE VOLSER TO VSN FIELD
****************************************************************
* GET THE TMC RECORD FOR VOLSER                                *
****************************************************************
         LA    R12,RECWORK1              LOAD RECWORK1 AREA ADDRESS
         USING TMREC,R12
READTMC  DS    0H
*        WTO   'READTMC',ROUTCDE=(11)
         GETTMC VSN,RECWORK1,READERR1,ENQ=NO  GET THE TMC RECORD
         MVC   VOLTABLE,VOLTABLE-1       CLEAR VOLTABLE
         MVC   VOLTABL1,VOLTABL1-1       CLEAR VOLTABLE1
         LA    R7,VOLTABLE               LOAD ADDRESS OF VOLTABLE IN R7
         MVC   0(6,R7),TMVOLSER          MOVE VOLSER INTO VOLTABLE
         LA    R7,6(,R7)                 INCREMENT R7 BY 6
* CATALOG SEARCH
         MVI   CATFLAG,C'N'              RESET CATFLAG
         MVC   DATASET,TMDSN             MOVE DATA SET FOR LOCATE
         LOCATE LOCDSN                   TRY TO FIND DSN IN CATALOG
         LTR   R15,R15                   TEST R15 FOR RETURN CODE
         BNZ   TEST1                     NON-ZERO RC, GO TO TEST1
         CLC   LOCAREA+6(6),TMVOLSER     ARE VOLUMES EQUAL ?
         BNE   TEST1                     NO - GO TO TEST1
         CLC   LOCAREA+12(2),=X'0001'    IS THIS THE 1ST FILE?
         BNE   TEST1                     NO - GO TO TEST1
YESCAT1  DS    0H
*        WTO   'YESCAT1',ROUTCDE=(11)
         MVI   CATFLAG,C'Y'              SET CATFLAG = Y
TEST1    DS    0H
*        WTO   'TEST1',ROUTCDE=(11)
         CLC   TMFRSVOL,HEXZEROS         IS 1STVOL FIELD BLANK?
         BE    TEST3                     YES - GO TO TEST3
TEST2    DS    0H
*        WTO   'TEST2',ROUTCDE=(11)
         CLC   TMFRSVOL,TMVOLSER         IS 1STVOL = VOLSER
         BNE   READCARD                  NO - GET ANOTHER RECORD
TEST3    DS    0H
*        WTO   'TEST3',ROUTCDE=(11)
         CLC   TMADSNB,HEXZEROS          IS DSNB FIELD BLANK?
         BNE   DSNBSEEN                  NO - BRANCH TO DSNBSEEN
         CLC   TMNXTVOL,HEXZEROS         IS THERE ANOTHER VOLUME?
         BE    TEST33                    NO - GO TO TEST33
         BAL   R4,NXTVOL                 BRANCH TO NXTVOL ROUTINE
         B     TEST3                     BRANCH TO TEST3
TEST33   DS    0H
*        WTO   'TEST33',ROUTCDE=(11)
         BAL   R4,FATJCL                 YES - BRANCH TO FATJCL
         PUT   FATSOUT,PROCCARD          WRITE PROCCARD
         B     READCARD                  GET ANOTHER CARD
DSNBSEEN DS    0H
*        WTO   'DSNBSEEN',ROUTCDE=(11)
         BAL   R4,FATJCL                 BRANCH TO FATJCL
         ZAP   PCOUNTER,PZEROS           SET PCOUNTER TO '0'
         MVC   RELBLK,TMADSNB            STORE ADDRESS OF 1ST DSNB
****************************************************************
* GET 1ST DSNB
****************************************************************
GETDSNB1 DS    0H
*        WTO   'GETDSNB1',ROUTCDE=(11)
         GETDSNB DSNBWORK,RELBLK,(R11),ENQ=NO
         USING TMSDSNB,R11
         AP    PCOUNTER,PONE             ADD '1' TO PCOUNTER
         MVC   VOLTABLE,VOLTABLE-1       CLEAR VOLTABLE
         MVC   VOLTABL1,VOLTABL1-1       CLEAR VOLTABLE1
         LA    R7,VOLTABLE               LOAD ADDRESS OF VOLTABLE IN R7
         MVC   0(6,R7),TMVOLSER          MOVE VOLSER INTO VOLTABLE
         LA    R7,6(,R7)                 INCREMENT R7 BY 6
* CATALOG SEARCH
         MVI   CATFLAG,C'N'              RESET CATFLAG
         MVC   DATASET,DSNBDSN           MOVE DATA SET FOR LOCATE
         LOCATE LOCDSN                   TRY TO FIND DSN IN CATALOG
         LTR   R15,R15                   TEST R15 FOR RETURN CODE
         BNZ   DSNBCMPR                  NON-ZERO RC, GO TO DSNBCMPR
         CLC   LOCAREA+6(6),TMVOLSER     ARE VOLUMES EQUAL ?
         BNE   DSNBCMPR                  NO - GO TO DSNBCMPR
         CLC   LOCAREA+12(2),DSNBFSN     DO FILE SEQUENCE'S MATCH?
         BNE   DSNBCMPR                  NO - GO TO TEST1
YESCAT2  DS    0H
*        WTO   'YESCAT2',ROUTCDE=(11)
         MVI   CATFLAG,C'Y'              SET CATFLAG = Y
****************************************************************
* DETERMINE HOW MANY DSNB'S AND HOW MANY VOLUMES
****************************************************************
DSNBCMPR DS    0H
*        WTO   'DSNBCMPR',ROUTCDE=(11)
         MVC   NUMDSNB,TM#DSNBS          MOVE # DSNB'S TO NUMDSNB
         SR    R6,R6                     CLEAR R6
         LH    R6,NUMDSNB                LOAD NUMDSNB INTO R6
         CVD   R6,PNUMDSNB               LOAD R6 IN PNUMDSNB
         CP    PNUMDSNB,PCOUNTER         IS NUMDSNB > COUNTER?
         BZ    TSTFORMO                  IF EQUAL, TEST FOR MORE
         BL    ABEND                     IF LOW, BRANCH TO ABEND
         BAL   R4,DSNBJCL                BRANCH TO DSNBJCL
         AP    PCOUNTER,PONE             ADD 1 TO PCOUNTER
         MVC   RELBLK,DSNBNEXT           STORE ADDRESS OF NXT DSNB
         B     GETDSNB2                  BRANCH TO GETDSNB2
TSTFORMO DS    0H
*        WTO   'TSTFORMO',ROUTCDE=(11)
         CLC   TMNXTVOL,HEXZEROS         IS THERE ANOTHER VOLUME?
         BNE   GETNEXT                   YES - BRANCH TO GETNEXT
         BAL   R4,DSNBJCL                BRANCH TO DSNBJCL
         PUT   FATSOUT,PROCCARD          WRITE PROCCARD
         B     READCARD                  GET ANOTHER CARD
GETNEXT  DS    0H
*        WTO   'GETNEXT',ROUTCDE=(11)
         BAL   R4,NXTVOL                 BRANCH TO NXTVOL SUBROUTINE
         B     DSNBCMPR                  BRANCH TO DSNBCMPR
****************************************************************
* GET ALL SUBSEQUENT DSNB'S
****************************************************************
GETDSNB2 DS    0H
*        WTO   'GETDSNB2',ROUTCDE=(11)
         GETDSNB DSNBWORK,RELBLK,(R11),ENQ=NO
         MVC   VOLTABLE,VOLTABLE-1       CLEAR VOLTABLE
         MVC   VOLTABL1,VOLTABL1-1       CLEAR VOLTABLE1
         LA    R7,VOLTABLE               LOAD ADDRESS OF VOLTABLE IN R7
         MVC   0(6,R7),TMVOLSER          MOVE VOLSER INTO VOLTABLE
         LA    R7,6(,R7)                 INCREMENT R7 BY 6
* CATALOG SEARCH
         MVI   CATFLAG,C'N'              RESET CATFLAG
         MVC   DATASET,DSNBDSN           MOVE DATA SET FOR LOCATE
         LOCATE LOCDSN                   TRY TO FIND DSN IN CATALOG
         LTR   R15,R15                   TEST R15 FOR RETURN CODE
         BNZ   DSNBCMPR                  NON-ZERO RC, GO TO DSNBCMPR
         CLC   LOCAREA+6(6),TMVOLSER     ARE VOLUMES EQUAL ?
         BNE   DSNBCMPR                  NO - GO TO DSNBCMPR
         CLC   LOCAREA+12(2),DSNBFSN     DO FILE SEQUENCE'S MATCH?
         BNE   DSNBCMPR                  NO - GO TO DSNBCMPR
YESCAT3  DS    0H
*        WTO   'YESCAT3',ROUTCDE=(11)
         MVI   CATFLAG,C'Y'              SET CATFLAG = Y
         B     DSNBCMPR                  BRANCH TO DSNBCMPR
****************************************************************
* SUBROUTINE TO BUILD JCL FOR DSNB
****************************************************************
DSNBJCL  DS    0H
*        WTO   'DSNBJCL',ROUTCDE=(11)
         MVC   FILESEQ,DSNBFSN           MOVE FILE SEQ # TO FILESEQ
         SR    R6,R6                     CLEAR R6
         LH    R6,FILESEQ                LOAD FILSEQ INTO R6
         CVD   R6,PLABEL                 LOAD R6 IN PACKED LABEL FIELD
         UNPK  LABEL,PLABEL+6(2)         UNPK PLABEL INTO LABEL
         OI    LABEL+2,X'F0'             RESET ZONE
         MVC   LABNUM1(2),LABEL+1        MOVE INPUT LABEL # TO LABNUM1
         MVC   LABNUM2(2),LABEL+1        MOVE OUTPUT LABEL # TO LABNUM2
         MVC   LABNUM3(2),LABEL+1        MOVE OUTPUT LABEL # TO LABNUM3
         UNPK  STEPCNT,PSTEPCNT          UNPACK STEP COUNT
         OI    STEPCNT+2,X'F0'           RESET ZONE FOR PRINTING
         MVC   PREVSTEP(2),STEPCNT+1     MOVE INTO PREVSTEP FIELD
         MVC   PREVSTP2(2),STEPCNT+1     MOVE INTO PREVSTP2 FIELD
         AP    PSTEPCNT,PONE             ADD 1 TO STEP COUNT
         UNPK  STEPCNT,PSTEPCNT          UNPACK STEP COUNT
         OI    STEPCNT+2,X'F0'           RESET ZONE FOR PRINTING
         MVC   STEPNUM(2),STEPCNT+1      MOVE INTO STEPNUM FIELD
         MVC   INDSNCD,DSNBDSN           MOVE DSN TO TAPEIN DD
         MVC   OUTDSNCD,DSNBDSN          MOVE DSN TO TAPEOUT DD
* FATAR JCL CARDS FOR COPY
         PUT   FATSOUT,EXEC              WRITE EXEC CARD
         PUT   FATSOUT,SYSPRT2           WRITE SYSPRT2 CARD
         CLI   CATFLAG,C'Y'              IS CATFLAG SET TO 'Y'?
         BE    CATIN1                    YES - BRANCH TO CAT1
         MVC   LABNUM4,LABNUM1           WRITE LABNUM1 TO LABNUM4
         PUT   FATSOUT,TAPEIN4           WRITE TAPEIN4 CARD
         BAL   R2,GETVOL                 BRANCH TO GETVOL SUBROUTINE
         B     NOCAT1                    BRANCH TO NOCAT1
CATIN1   DS    0H
         PUT   FATSOUT,TAPEIN1           WRITE TAPEIN1 CARD
         BAL   R2,GETVOL                 BRANCH TO GETVOL SUBROUTINE
NOCAT1   DS    0H
         PUT   FATSOUT,TAPEIN3           WRITE TAPEIN3 CARD
         CLI   CATFLAG,C'Y'              IS CATFLAG SET TO 'Y'?
         BE    CATOUT1                   YES - BRANCH TO CATOUT1
         PUT   FATSOUT,TAPEOUT6          NO - WRITE TAPEOUT6
         B     NOCAT2                    BRANCH TO NOCAT2
CATOUT1  DS    0H
         PUT   FATSOUT,TAPEOUT1          WRITE TAPEOUT1 CARD
NOCAT2   DS    0H
         CLC   DSNBNEXT,HEXZEROS         IS THERE ANOTHER DATASET?
         BE    SKIPOUT3                  NO - SKIP TAPEOUT3
         PUT   FATSOUT,TAPEOUT3          WRITE TAPEOUT3 CARD
         B     OUT4                      BRANCH TO OUT4
SKIPOUT3 DS    0H
         PUT   FATSOUT,TAPEOUT5          WRITE TAPEOUT5 CARD
OUT4     DS    0H
         PUT   FATSOUT,TAPEOUT4          WRITE TAPEOUT4 CARD
         PUT   FATSOUT,SYSIN1            WRITE SYSIN CARD
         CLC   DSNBBLKC,HEXZEROS         IS BLOCK COUNT = ZERO?
         BNE   BLOCKS1                   NO - GO TO BLOCKS1
         PUT   FATSOUT,CNTRL2            YES - WRITE CNTRL2 CARD
         B     ENDSTP1                   BRANCH AROUND BLOCKS1
BLOCKS1  DS    0H
         PUT   FATSOUT,CNTRL1            WRITE CNTRL1 CARD
ENDSTP1  DS    0H
         PUT   FATSOUT,ENDSTEP           MARK END OF STEP
         BR    R4                        BRANCH BACK TO CALLER
****************************************************************
* ABEND THE PROGRAM WHEN SOMETHING SERIOUS HAPPENS
****************************************************************
ABEND    DS    0H
*        WTO   'ABEND',ROUTCDE=(11)
         ABEND 99,DUMP                   IF LOW, SOMETHING'S WRONG
****************************************************************
* SUBROUTINE TO GET NEXT VOLUME INFORMATION
****************************************************************
NXTVOL   DS    0H
*        WTO   'NXTVOL',ROUTCDE=(11)
         GETTMC TMNXTVOL,RECWORK1,READERR1,ENQ=NO
         MVC   0(6,R7),TMVOLSER          MOVE VOLSER TO VOLTABLE
         LA    R7,6(,R7)                 INCREMENT R7 BY 6
         BR    R4                        BRANCH BACK TO CALLER
****************************************************************
* SUBROUTINE TO WRITE FATAR JCL CARDS FOR 1ST STEP OF VOLUME
* CHAIN
****************************************************************
FATJCL   DS    0H
*        WTO   'FATJCL',ROUTCDE=(11)
         AP    PJOBNUM,PONE              ADD '1' TO PJOBNUM
         CP    PJOBNUM,PFIVE             IS PJOBNUM > 4 ?
         BL    NOTFIVE                   NO - BRANCH TO NOTFOUR
         ZAP   PJOBNUM,PONE              SET PJOBNUM TO ONE
NOTFIVE  DS    0H
         UNPK  JOBNUM,PJOBNUM            UNPACK PJOBNUM INTO JOBNUM
         OI    JOBNUM+1,X'F0'            FIX SIGN BIT FOR PRINTING
         MVC   LABNUM1,ONE               MOVE 1 INTO INPUT LABEL
         MVC   LABNUM2,ONE               MOVE 1 INTO OUTPUT LABEL 2
         MVC   LABNUM3,ONE               MOVE 1 INTO OUTPUT LABEL 3
         UNPK  STEPCNT,PSTEPCNT          UNPACK STEP COUNT
         OI    STEPCNT+2,X'F0'           RESET ZONE FOR PRINTING
         MVC   PREVSTEP(2),STEPCNT+1     MOVE INTO PREVSTEP FIELD
         MVC   PREVSTP2(2),STEPCNT+1     MOVE INTO PREVSTP2 FIELD
         ZAP   PSTEPCNT,PONE             SET PSTEPCNT TO '1'
         UNPK  STEPCNT,PSTEPCNT          UNPACK STEP COUNT
         OI    STEPCNT+2,X'F0'           RESET ZONE FOR PRINTING
         MVC   STEPNUM(2),STEPCNT+1      MOVE INTO STEPNUM FIELD
         MVC   INDSNCD,INDSN             MOVE DSN TO TAPEIN DD
         MVC   OUTDSNCD,INDSN            MOVE DSN TO TAPEOUT DD
         PUT   FATSOUT,PRIORITY          WRITE PRIORITY CARD
         PUT   FATSOUT,JOBCARD           WRITE JOBCARD
         PUT   FATSOUT,ROUTE             WRITE ROUTE PRINT CARD
         AP    PJOBCNTR,PONE             ADD 1 TO JOB COUNTER
         CP    PJOBCNTR,PFIFTY           IS THERE MORE THAN 50 STEPS?
         BH    FINISH                    YES - THATS ALL FOLKS
         PUT   FATSOUT,HOLDJOB           WRITE HOLDJOB CARD
         PUT   FATSOUT,EXEC              WRITE EXEC CARD
         PUT   FATSOUT,SYSPRT            WRITE SYSPRT CARD
         PUT   FATSOUT,SYSPRT1           WRITE SYSPRT1 CARD
         CLI   CATFLAG,C'Y'              IS CATFLAG SET TO 'Y'?
         BE    CATIN2                    YES - BRANCH TO CAT2
         MVC   LABNUM4,LABNUM1           WRITE LABNUM1 TO LABNUM4
         PUT   FATSOUT,TAPEIN4           WRITE TAPEIN4 CARD
         BAL   R2,GETVOL                 BRANCH TO GETVOL SUBROUTINE
         B     NOCAT3                    BRANCH TO NOCAT3
CATIN2   DS    0H
         PUT   FATSOUT,TAPEIN1           WRITE TAPEIN1 CARD
         BAL   R2,GETVOL                 BRANCH TO GETVOL SUBROUTINE
NOCAT3   DS    0H
         PUT   FATSOUT,TAPEIN3           WRITE TAPEIN3 CARD
         CLI   CATFLAG,C'Y'              IS CATFLAG SET TO 'Y'?
         BE    CATOUT2                   YES - BRANCH TO CATOUT2
         PUT   FATSOUT,TAPEOUT6          NO - WRITE TAPEOUT6
         B     NOCAT4                    BRANCH TO NOCAT4
CATOUT2  DS    0H
         PUT   FATSOUT,TAPEOUT1          WRITE TAPEOUT1 CARD
NOCAT4   DS    0H
         PUT   FATSOUT,TAPEOUT2          WRITE TAPEOUT2 CARD
         PUT   FATSOUT,TAPEOUT4          WRITE TAPEOUT4 CARD
         PUT   FATSOUT,SYSIN1            WRITE SYSIN CARD
         CLC   TMBLKCNT,HEXZEROS         IS BLOCK COUNT = ZERO?
         BNE   BLOCKS2                   NO - GO TO BLOCKS2
         PUT   FATSOUT,CNTRL2            YES - WRITE CNTRL2 CARD
         B     ENDSTP2                   BRANCH AROUND CNTRL1
BLOCKS2  DS    0H
         PUT   FATSOUT,CNTRL1            WRITE CNTRL1 CARD
ENDSTP2  DS    0H
         PUT   FATSOUT,ENDSTEP           MARK END OF STEP
         BR    R4                        GO BACK TO CALLER
****************************************************************
* SUBROUTINE TO GET THE VOLUMES FOR THE INPUT CARD
****************************************************************
GETVOL   DS    0H
         LA    R7,VOLTABLE               LOAD R7 W/ADDR OF VOLTABLE
         MVC   VOLIN1(6),0(R7)           LOAD 1ST VOLSER
         LA    R7,6(,R7)                 INCREMENT R7 BY 6
         CLC   0(6,R7),BLANKS            IS THERE ANOTHER ENTRY?
         BE    PUTPAREN                  NO - GO TO PUTPAREN
         MVC   VOLIN1+6(3),COMMA         YES - WRITE COMMA
         B     NOPAREN                   GO TO NOPAREM
PUTPAREN MVC   VOLIN1+6(3),CLSPAREN      WRITE CLOSE PARENTHESIS
NOPAREN  PUT   FATSOUT,VOLCARD1          WRITE VOLCARD1
         CLC   0(6,R7),BLANKS            IS THERE ANOTHER ENTRY?
         BNE   GETVOL1                   YES - BRANCH TO GETVOL1
         BR    R2                        BRANCH BACK TO CALLER
GETVOL1  DS    0H
         MVC   VOLIN2(6),0(R7)           LOAD NEXT VOLSER
         LA    R7,6(,R7)                 INCREMENT R7 BY 6
         CLC   0(6,R7),BLANKS            IS THERE ANOTHER ENTRY?
         BE    PUTPARN1                  NO - GO TO PUTPARN1
         MVC   VOLIN2+6(3),COMMA         YES - WRITE COMMA
         B     NOPAREN1                  GO TO NOPAREN1
PUTPARN1 MVC   VOLIN2+6(3),CLSPAREN      WRITE CLOSE PARENTHESIS
NOPAREN1 PUT   FATSOUT,VOLCARD2          WRITE VOLCARD2
         CLC   0(6,R7),BLANKS            IS THERE ANOTHER ENTRY?
         BNE   GETVOL1                   YES - GET NEXT VOLUME
         BR    R2                        BRANCH BACK TO CALLER
****************************************************************
*  READ ERROR ROUTINE                                          *
****************************************************************
READERR1 DS    0H
*        WTO   'READERR1',ROUTCDE=(11)
         CLOSE (INPUT,,FATSOUT)          CLOSE FILES INPUT/FATSOUT
         CLOSE (REJECT)                  CLOSE FILE REJECT
         L     13,MYSAVE+4               RESTORE SAVE AREA
         LM    14,12,12(13)              RESTORE REGS
         LA    15,99                     SET BAD RETURN CODE - 99
         BR    14                        GO BACK TO CALLER
READERR2 DS    0H
*        WTO   'READERR2',ROUTCDE=(11)
         CLOSE (INPUT,,FATSOUT)          CLOSE FILES INPUT/FATSOUT
         CLOSE (REJECT)                  CLOSE FILE REJECT
         L     13,MYSAVE+4               RESTORE SAVE AREA
         LM    14,12,12(13)              RESTORE REGS
         LA    15,88                     SET BAD RETURN CODE - 88
         BR    14                        GO BACK TO CALLER
READERR3 DS    0H
*        WTO   'READERR3',ROUTCDE=(11)
         CLOSE (INPUT,,FATSOUT)          CLOSE FILES INPUT/FATSOUT
         CLOSE (REJECT)                  CLOSE FILE REJECT
         L     13,MYSAVE+4               RESTORE SAVE AREA
         LM    14,12,12(13)              RESTORE REGS
         LA    15,77                     SET BAD RETURN CODE - 77
         BR    14                        GO BACK TO CALLER
****************************************************************
*  CLOSE FILES AND GO BACK                                     *
****************************************************************
FINISH   DS    0H
         CP    PJOBCNTR,PFIFTY           WERE THERE 50 STEPS CREATED?
         BL    CLOSEIT                   NO - CLOSE FILES
         WTO   'MAXIMUM NUMBER OF JOBS CREATED - 50',ROUTCDE=(11)
CLOSEIT  CLOSE (INPUT,,FATSOUT)          CLOSE FILES INPUT/FATSOUT
         CLOSE (REJECT)                  CLOSE FILE REJECT
         L     13,MYSAVE+4               RESTORE SAVE AREA
         LM    14,12,12(13)              RESTORE REGS
         LA    15,0                      SET R15 TO 0
         BR    14                        GO BACK TO CALLER
****************************************************************
*  DCB DEFINITIONS                                             *
****************************************************************
INPUT    DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,EODAD=FINISH,            X
               LRECL=133
FATSOUT  DCB   DDNAME=FATSOUT,LRECL=80,MACRF=PM,DSORG=PS,              X
               RECFM=FB
REJECT   DCB   DDNAME=REJECT,LRECL=133,MACRF=PM,DSORG=PS,              X
               RECFM=FA
****************************************************************
*  FATS  JCL CARDS                                             *
****************************************************************
JOBCARD  DS    0CL80
         DC    CL6'//COPY'
JOBNUM   DC    CL2'  '
         DC    CL72' JOB 0060,BIN-322,CLASS=D,MSGCLASS=A,USER=XXXXXXX '
HOLDJOB  DC    CL80'//HOLDJOB EXEC PGM=HOLDJOB '
PRIORITY DC    CL80'/*PRIORITY 4 '
ROUTE    DC    CL80'/*ROUTE PRINT RMT99 '
EXEC     DS    0CL80
         DC    CL6'//FATS'
STEPNUM  DC    CL2'  '
         DC    CL72' EXEC PGM=FATAR '
SYSPRT   DC    CL80'//SYSPRINT DD DSN=&&FATPRT,DISP=(,PASS),UNIT=SYSDA,X
                '
SYSPRT1  DC    CL80'//   SPACE=(TRK,(5,5),RLSE) '
SYSPRT2  DC    CL80'//SYSPRINT DD SYSOUT=A '
TAPEIN1  DS    0CL80
         DC    CL53'//TAPEIN DD DISP=(OLD,UNCATLG,KEEP),UNIT=CTAPE,LABEX
               L='
LABNUM1  DC    CL2' '
         DC    CL25', '
*
VOLCARD1 DS    0CL80
         DC    CL27'//   VOL=(,RETAIN,,21,SER=('
VOLIN1   DC    CL9' '
         DC    CL44' '
*
VOLCARD2 DS    0CL80
         DC    CL5'//   '
VOLIN2   DC    CL9' '
         DC    CL66' '
*
TAPEIN3  DS    0CL80
         DC    CL13'//       DSN='
INDSNCD  DC    CL44' '
         DC    CL23' '
COMMA    DC    CL3',  '
CLSPAREN DC    CL3')),'
TAPEIN4  DS    0CL80
         DC    CL52'//TAPEIN DD DISP=(OLD,DELETE,KEEP),UNIT=CTAPE,LABELX
               ='
LABNUM4  DC    CL2' '
         DC    CL26', '
TAPEOUT1 DC    CL80'//TAPEOUT DD DISP=(NEW,CATLG,DELETE),UNIT=CTAPE, '
TAPEOUT2 DC    CL80'//   VOL=(,RETAIN,,21), '
TAPEOUT3 DS    0CL80
         DC    CL31'//  VOL=(,RETAIN,,21,REF=*.FATS'
PREVSTEP DC    CL2'  '
         DC    CL16'.TAPEOUT),LABEL='
LABNUM2  DC    CL2'  '
         DC    CL29', '
TAPEOUT4 DS    0CL80
         DC    CL13'//       DSN='
OUTDSNCD DC    CL44' '
         DC    CL23' '
TAPEOUT5 DS    0CL80
         DC    CL25'//  VOL=(,,,21,REF=*.FATS'
PREVSTP2 DC    CL2'  '
         DC    CL16'.TAPEOUT),LABEL='
LABNUM3  DC    CL2'  '
         DC    CL35', '
TAPEOUT6 DC    CL80'//TAPEOUT DD DISP=(NEW,KEEP,DELETE),UNIT=CTAPE, '
SYSIN1   DC    CL80'//SYSIN DD * '
CNTRL1   DC    CL80'   ANALYZE LABELS=OS '
CNTRL2   DC    CL80'   ANALYZE LABELS=YES,NF=1 '
ENDSTEP  DC    CL80'/* '
PROCCARD DC    CL80'//CARTCOPY EXEC CARTCOPY '
****************************************************************
* INPUT RECORD - INPUT
****************************************************************
INREC    DS    0CL133
         DS    CL3
INVOLSER DC    CL6' '                    INPUT VOLSER
         DS    CL1
INDSN    DC    CL44' '                   INPUT DATA SET NAME
         DS    CL1
INEXPDT  DC    CL5' '                    INPUT EXPIRATION DATE
         DS    CL1
INPGMR   DC    CL20' '                   INPUT PGMR NAME
         DS    CL1
INCHRG   DS    0CL21
INCHRGCD DC    CL4' '                    INPUT CHARGE CODE
         DS    CL18                      THE REST OF INCHRG + 1 SPACE
INCJOB   DC    CL8' '                    INPUT CREATING JOB
         DS    CL1
INCRTDT  DC    CL5' '                    INPUT CREATION DATE
         DS    CL1
IN1STVOL DC    CL6' '                    INPUT 1ST VOLSER FIELD
         DS    CL8
****************************************************************
* PRINTLINE
****************************************************************
         DC    CL1' '
PRTLINE  DC    CL133' '
****************************************************************
* ACCUMULATORS
****************************************************************
         DS    0D                        DOUBLEWORD ALIGNMENT
PCOUNTER DC    PL8'0'                    PCOUNTER ON DBLWD BOUNDRY
PNUMDSNB DC    PL8'0'                    PNUMDSNB ON DBLWD BOUNDRY
RPAGE    DC    PL2'0'                    PACKED PAGE COUNTER FOR RPT
COUNT    DC    PL2'0'                    PACKED ACCEPTED RECORD COUNTER
RCOUNT   DC    PL2'0'                    PACKED REJECT RECORD COUNTER
PSTEPCNT DC    PL2'0'                    PACKED STEP COUNT
PJOBCNTR DC    PL2'0'                    PACKED JOB COUNTER
****************************************************************
* MISC. PACKED AND ZONED DEFINITIONS
****************************************************************
         DS    0D                        DOUBLEWORD ALIGNMENT
PLABEL   DC    PL8'0'                    PLABEL ON DOUBLEWORD BOUNDRY
PZEROS   DC    PL16'0'                   PACKED ZEROS
PONE     DC    P'1'                      PACKED ONE
PFIVE    DC    P'5'                      PACKED FIVE
PTHIRTY  DC    P'30'                     PACKED THIRTY
PFIFTY   DC    P'50'                     PACKED FIFTY
PLABEL1  DC    PL2'0'                    PLABEL1
PJOBNUM  DC    PL2'0'                    PACKED JOB NUMBER
****************************************************************
* MISC. DEFINITIONS
****************************************************************
RELBLK   DC    F'0'                      ADDRESS OF 1ST DSNB
         DS    0H                        ALIGNMENT FOR FILESEQ
FILESEQ  DS    HL2                       FILE SEQUENCE #
PREVDSNB DC    F'0'                      PREVIOUS DSNB #
NUMDSNB  DS    HL2                       # OF DSNB'S
ONE      DC    CL2'01'                   CHARACTER 01
CATFLAG  DC    CL1'N'                    CATALOG FLAG
PASSFLAG DC    CL1'Y'                    1ST PASS FLAG
LASTFLAG DC    CL1'N'                    LAST STEP FLAG
LABEL    DC    CL3' '                    LABEL FIELD
VSN      DC    CL6' '                    INPUT VOLSER
BLANKS   DC    CL133' '                  BLANKS OUT RECORD
HEXZEROS DC    XL80'0'                   HEX ZEROS
STEPCNT  DC    CL3' '                    STEP COUNT FIELD (CHARACTER)
****************************************************************
* VOLUME TABLE
****************************************************************
         DC    CL1' '
VOLTABLE DC    CL252' '                  VOLUME TABLE/42 ENTRIES
VOLTABL1 DC    CL252' '                  VOLUME TABLE1/42 ENTRIES
****************************************************************
* AREAS USED FOR CATALOG SEARCH
****************************************************************
LOCDSN   CAMLST NAME,DATASET,,LOCAREA
DATASET  DC    CL44' '
PARMVOL  DS    F                         ADDRESS OF VOLUME FOR CALL
PARMDSN  DS    F                         ADDRESS OF DSN FOR CALL
****************************************************************
* TMRECORD/TMSDSNB/LOCATE WORK I/O AREAS
****************************************************************
RECWORK1 DS    CL200
DSNBWORK DS    CL200
LOCAREA  DS    0D
         DS    256C
****************************************************************
* REPORT HEADERS
****************************************************************
REJHDG1  DS    0CL133
         DC    CL36'1  '
         DC    CL16'REJECTED RECORDS'
         DS    CL34' '
         DC    CL4'PAGE'
REJPAGE  DC    CL4' '
         DS    CL39
****************************************************************
*  TMC RECORD FORMAT                                           *
****************************************************************
TMREC    DSECT ,
         TMRECORD
****************************************************************
*  DSNB RECORD FORMAT                                          *
****************************************************************
TMSDSNB  DSECT ,
         TMSDSNB
         END
