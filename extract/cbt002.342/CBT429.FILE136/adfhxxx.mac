DFH      TITLE 'WTO EXIT FOR CICS MESSAGE PROCESSING'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . ADFHXXX
*
*  DATE WRITTEN . . . . 04/85
*
*  AUTHOR . . . . . . . JIM ELSWORTH (AND MUCKED WITH BY S BUZZO)
*                       (ADDITIONALLY MUCKED WITH BY M MILLER)
*                       (MUCKED WITH AGAIN BY S BUZZO)
*
*  ENVIRONMENT  . . . . MVS/XA WTO EXIT
*
*  FUNCTION
*    RECEIVES CONTROL FOR CICS JOURNAL SWITCH MESSAGE (ADFHXXX)
*    MAY START TASKS OR TAKE OTHER ACTIONS.
*
*
*  DESCRIPTION:
*    1) GETMAIN A SAVE AND WORK AREA
*    2) BRANCH DEPENDING ON MESSAGE ID
*
*    ADFHXXX:
*      START THE CICS JOURNAL BACKUP JOB, BY ISSUING
*      'S JOB,N=A#______' VIA SVC 34
*                  × ×××
*                  × ××--- A IF MESSAGE TEXT CONTAINS 'PRIMARY'
*                  × ××    B IF MESSAGE TEXT CONTAINS 'SECONDARY'
*                  × ××
*                  × ----- NN DEPENDING ON WHAT MSG TEXT CONTAINS
*                  ×       01 IF MESSAGE CONTAINS 'SYSTEM'
*                  ×         WHERE N IS THE NUMBER OF THE JOURNAL
*                  ×------ MLS IF THE MESSAGE FROM JOBNAME 'CICS16P '
*                          OWQ IF THE MESSAGE FROM JOBNAME "CICS    '
*        EXAMPLE: "S JOB,N=A#MLS09A" OR "S JOB,N=A#OWQ09B"
*
*      VERIFY THAT THE JOBNAME IS 'CICS    ' OR 'CICS16P '
*
*    3) FREEMAIN STORAGE
*    4) RETURN
*
*
*  REGISTERS AT ENTRY:
*     R1 : @CTXT COMMTAS USER EXIT PARAMETER LIST
*    R13 : @STANDARD SAVE AREA
*    R14 : RETURN ADDRESS
*    R15 : ENTRY POINT
*
*
*  REGISTERS AT EXIT: ALL REGISTERS RESTORED
*
*
*
*
*
*
*
*
*
*
*
*
*            ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  REGISTERS USED:
*
R0       EQU   0                       WORK REGISTER
R1       EQU   1                       INPUT PARMS AND WORK REGISTER
R2       EQU   2                       MESSAGE ATTRIBUTES BAR
R3       EQU   3
R4       EQU   4                       MESSAGE TEXT BAR
CTXTPTR  EQU   5                       CTXT BAR
R6       EQU   6
R7       EQU   7                       WORK REGISTER
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN ADDRESS
R15      EQU   15                      ENTRY ADDRESS
*
*
*  CALLED MODULES: NONE
*
*  ASSUMPTIONS: MUST BE RUN UNDER AN MVS/XA SYSTEM
*
*
*  ATTRIBUTES:
*    REENTRANT
*    AMODE=31
*    RMODE=ANY
*
*  ABENDS: NONE
*
*
*  MESSAGES (WTO'S):
*    ADFHXXX - NO MESSAGE MATCH FOUND
*      ISSUED IF MODULE INVOKED FOR OTHER THAN ITS INTENDED PURPOSES
*
*    ADFHXXX - NO TCT FURTHER PROCESSING ABORTED
*       ISSUED IF TCBTCT ADDRESS IS NULL.
*
*
*  CAVEATS:
*    DO NOT ISSUE ANY WAITS IN THIS ROUTINE
*    BE SURE TO LINK AS REENTRANT
*
*
*
*
*
*
*
*
*
*
*            ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  IMPLEMENTATION NOTES:
*    AFTER ASSEMBLY AND LINK LLA MUST BE RESTARTED
*
*    IN SYS1.PARMLIB(MPFLST??) MUST CONTAIN AT LEAST ONE OF THE
*    FOLLOWING STATEMENTS:
*
*      FNM????,SUP(NO),USEREXIT(ADFHXXX)
*
*      WHERE FNM???? IS THE MESSAGE ID TO CAUSE OUR INVOCATION
*
*      TO ACTIVATE THE MPFLIST; T MPF=??  WHERE ?? IS THE MPFLST SUFFIX
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IEZVX100
         EJECT
         IKJTCB                        TIMING CONTROL TABLE
         EJECT
         IEFTCT                        TIMING CONTROL TABLE
         EJECT
         IEFJMR                        JOB MANAGEMENT RECORD
         EJECT
IHAPSA   DSECT
         IHAPSA
         EJECT
***********************************************************************
*  MAP SAVE AND WORK AREAS THAT ARE ACQUIRED
***********************************************************************
         SPACE 1
DYNAMIC  DSECT
SAVE1    DS   18F                      SAVE AREA
         SPACE 1
COMHDR   DS    AL2(COMLEN),AL2(0)      COMMAND HEADER
COMMAND  DS    C'S JOB,N=A#______'     COMMAND TEXT
COMLEN   EQU   *-COMHDR                COMMAND BLOCK LENGTH
RCOMHDR  DS    AL2(RCOML),AL2(0)
RCOM     DC    C'REPLY '
REPLY    DC    C'XX,GO'
RCOML    EQU   *-RCOMHDR
DYNAMICL EQU  *-DYNAMIC                LENGTH OF DYNAMIC AREA
         SPACE 5
MSGTEXT  DSECT
MSGID    DS    CL8                     MESSAGE ID
         EJECT
ADFHXXX CSECT
ADFHXXX AMODE 31                       31 BIT ADDRESSING MODE
ADFHXXX RMODE ANY                      CAN RUN ABOVE OR BELOW
         SPACE 2
***********************************************************************
*  ESTABLISH ADDRESSABILITY, AND CHAIN SAVE AREAS
***********************************************************************
         SPACE 1
         USING *,R15                   EST. ADDRESSABILITY
         B     PROLOG                  BYPASS PROLOGUE
         DC    AL1(L'ID)               PROLOGUE LENGTH
ID       DC    C'&SYSDATE-&SYSDATE'    MODULE NAME AND COMPILE DATE
         DS    0H                      ALLIGNMENT
PROLOG   SAVE  (14,12)                 SAVE CALLERS REGS
         LR    R12,R15                 SAVE ENTRY ADRESS
         DROP  R15                     LOSE OLD BASE
         USING ADFHXXX,R12             REAL BASE ADDRESS=R12
         L     CTXTPTR,0(R1)           @CTXT
         USING CTXT,CTXTPTR            MAP CTXT
         SPACE 2
***********************************************************************
*
*  GETMAIN A SAVEAREA AND WORK AREA
*
* NOTE! STORAGE IS ACQUIRED BELOW THE LINE DUE TO SVC34 REQUIREMENTS
*
***********************************************************************
         SPACE 1
GETMAIN  GETMAIN RU,LV=DYNAMICL,SP=230,LOC=BELOW,RELATED=(FREEMAIN)
         ST    R13,4(R1)               SETUP
         ST    R1,8(R13)                 SET FORWARD POINTER
         LR    R13,R1                  @ACQUIRED STORAGE
         USING DYNAMIC,R13             MAP DYNAMIC AREA
         EJECT
***********************************************************************
*  DETERMINE WHICH MESSAGE TO PROCESS
***********************************************************************
         SPACE 1
         L     R2,CTXTTXPJ             @MESSAGE ATTRIBUTESS
         USING CTXTATTR,R2             MAP MESSAGE ATTRIBUTES
         LA    R4,CTXTTMSG             @BASE TEXT
         USING MSGTEXT,R4              MAP BASE TEXT
         CLC   MSGID,=CL8'DFH4583'    MESSAGE DFH4583 ?
         BE    DFH4583                 -YES
         SPACE 3
***********************************************************************
*  PUT TESTS FOR NEW MESSAGE TYPES HERE
***********************************************************************
         SPACE 1
         WTO   'ADFHXXX - NO MESSAGE MATCH FOUND'
         B     RETURN
         EJECT
***********************************************************************
*
*           1         2         3         4         5
*  1234567890123456789012345678901234567890123456789012
*
*  DFH4583 - CICS SYSTEM LOG. PRIMARY  EXTENT (DDNAME=
*  DFH4583 - CICS JOURNAL NN. PRIMARY  EXTENT (DDNAME=
***********************************************************************
         SPACE 1
DFH4583  EQU   *
         MVC   COMHDR(COMLEN),CCOMHDR  MOVE CMD DATA TO DYNAMIC AREA
         L     R7,PSATOLD-PSA    @OUR TCB
         ICM   R7,15,TCBTCT-TCB(R7)
         BNZ   D21510
         WTO   'ADFHXXX - NO TCT - FURTHER PROCESSING ABORTED'
         B     RETURN
D21510   EQU   *
         L     R7,TCTJMR-SMFTCT(R7)    @JMR
***********************************************************************
* VERYIFY THIS MESSAGE IS COMING FROM JOBNAME 'CICS     '
***********************************************************************
CHEKCJOB CLC   JMRJOB-JMR(8,R7),=CL8'CICS    '
         BE    CICS#0
         CLC   JMRJOB-JMR(8,R7),=CL8'CICS16P '
         BE    CICS#6
         B     WRONGJOB      WRONG JOB FIRED THIS EXIT - WTO AND END
***********************************************************************
* PLUG IN THE 5TH CHAR OF JOB NAME BASED ON JOBNAME OF CICS
***********************************************************************
CICS#0   MVC   COMMAND+10(3),=C'OWQ'
         B     WHICHLOG
CICS#6   MVC   COMMAND+10(3),=C'MLS'
         B     WHICHLOG
***********************************************************************
* IF MSG SAYS 'SYSTEM' START JOB 'A#OWQ_1_'  OTHERWISE A#OWQ_2_
* IE WE ARE DEALING WITH A SYSTEM JOURNAL SWITCH - START JOB A#OWQ_1_
* IF NOT SYSTEM JOURNAL ASSUME USER JOURNAL # 2
***********************************************************************
WHICHLOG EQU   *
         CLC   MSGID+15(6),=C'SYSTEM'
         BE    LOG01                   START JOB FOR SYSTEM LOG (01)
         MVC   COMMAND+13(2),MSGID+23  MUST BE USER JOURNAL #
         B     WHICHEXT
LOG01    MVC   COMMAND+13(2),=C'01'
***********************************************************************
* IF MSG SAYS 'PRIMARY' START JOB A#OWQ__A' OTHERWISE A#OWQ__B
* IE PRIMARY LOG HAS JUST FILLED, SO START JOB A#OWQ__A
***********************************************************************
WHICHEXT CLC   MSGID+27(7),=C'PRIMARY'
         BE    PRIEXT
         MVI   COMMAND+15,C'B'
         B     ALLOK
PRIEXT   MVI   COMMAND+15,C'A'
         SPACE 1
***********************************************************************
*  ISSUE THE START COMMAND VIA SVC34
***********************************************************************
         SPACE 1
ALLOK    SR    R0,R0                   NO UCMID ADDRESS
         MGCR  COMHDR                  SEND COMMAND VIA SVC34
***********************************************************************
*  NOW ISSUE REPLY TEXT OF 'REPLY NN,GO REPLY FROM ADFHXXX EXIT'
***********************************************************************
ISSUMGCR EQU   *
         MVC   RCOMHDR(RCOML),CRCOMHDR MOVE IN THE REPLY BUFFER
         MVC   REPLY(2),CTXTRPID       INSERT THE REPLY ID
         SR    R0,R0                   CLEER REGISTER ZERO
         MGCR  RCOMHDR                 ISSUE THE COMMAND
         B     RETURN
         EJECT
         SPACE 1
***********************************************************************
*  WRONG JOB NAME- ISSUE WTO AND EXIT
***********************************************************************
WRONGJOB WTO   'CICS JOURNAL SWITCH NOT FROM JOBNAME CICS OR CICS16P'
***********************************************************************
*  RETURN
***********************************************************************
RETURN   EQU   *
         LR    R11,R13
         L     R13,4(R13)              @CALLERS SAVE AREA
         SPACE 2
*  FREE THE SAVE AREA AND WORK AREA THAT WAS ACQUIRED EARLIER
         SPACE 1
         FREEMAIN RU,LV=DYNAMICL,A=(R11),SP=230,RELATED=(GETMAIN)
         RETURN (14,12)                RESTORE REGS AND RETURN
         SPACE 5
***********************************************************************
*  CONSTANTS AND RENTRANT MISCELLANEOUS
***********************************************************************
         SPACE 1
CRCOMHDR DC    AL2(RCOML),AL2(0)
TXTINSRT DC    C'REPLY XX,GO'
CCOMHDR  DC    AL2(COMLEN),AL2(0)      COMMAND HEADER
CCOMMAND DC    C'S JOB,N=A#______'     COMMAND TEXT
         SPACE 2
         LTORG
         END
