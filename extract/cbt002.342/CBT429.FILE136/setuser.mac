SETUSER  TITLE '- SET UP PSCB/UPT FROM LIDREC FOR TMP BACKGROUND JOBS'
         MACRO
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.* ---> E@SAV
.*
.*  DESCRITPION:
.*    SET UP ENTRY TO A MODULE CALLED VIA STANDRD LINKAGE AND
.*    OPTIONALLY ACQUIRE A DYNAMIC SAVE AND WORK AREA.
.*
.*
.*   1. GENERATES A CSECT WITH ID '&CSECT'.
.*   2. SETS UP STANDARD ENTRY LINKAGE
.*
.*      IF RENT=NO:
.*
.*   3. GENERATES A AN INLINE SAVE AREA
.*   4. USES R13 AS BOTH PGM AND SAVE AREA BASE
.*   5. OPTIONALLY ESTABLISHES A SECOND BASE REGISTER (&BASE2)
.*
.*      IF RENT=YES:
.*
.*   3. ACQUIRES STORAGE AREA (72+&DYNAREA) BYTES LONG.
.*      1ST 72 BYTES USED AS OS SAVE AREA.
.*   4. SETS UP CSECT ADDRESSABILITY BASED ON &BASE
.*
.*
.*  ARGUMENTS: ------------------------------------------------------
.*
.*     &BASE : BASE REG USED IF RENT=YES
.*
.*    &BASE2 : OPTIONAL 2ND BASE REGISTER (RENT=NO ONLY)
.*
.*     &RENT : 'NO' MEANS GENERATE AN INLINE SAVE AREA
.*
.*             'YES' MEANS ACQUIRE AN AREA OF STORGAE (72+&DYNAREA)
.*             BYTES LONG FOR USE AS A FORWARD SAVE AREA AND OPTIONALLY
.*             A WORK AREA.
.*
.*  &DYNAREA : LENGTH OF STORAGE (IN ADDITION TO 72) TO ACQUIRE
.*
.*    &DSECT : NAME OF DSECT THAT NAPS DYNMAIC AREA
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
&CSECT   E@SAV &BASE=R12,              DEFAULT BR FOR RENT=NO          &
               &BASE2=,                SECOND BASE REGISTER (OPTIONAL) &
               &RENT=NO,               GETMAIN SA IN RENT=YES          &
               &DSECT=,                DSECT NAME FOR ACQUIRED STORAGE &
               &DYNAREA=0              ADITIONAL AREA TO GETMAIN
.*
         LCLC  &RSA1,&RSA2
.*
&RSA1    SETC  'RS'.'&SYSNDX'.'AA'
&RSA2    SETC  'RS'.'&SYSNDX'.'A2'
         AIF   ('&CSECT' NE '').A100
         MNOTE 8,'E@SAV MUST BE GIVEN A LABEL - USED FOR CSECT NAME'
         AGO   .AMEND
.*
.A100    ANOP
         AIF   ('&RENT' EQ 'YES').A5000
         AIF   ('&RENT' EQ 'NO').A1000
         MNOTE 8,'''RENT='' MUST BE EITHER ''YES'' OR ''NO'''
         AGO   .AMEND
.*
.*
.* RENT=NO
.*
.*
.A1000   ANOP
&CSECT   CSECT
         USING &CSECT,15               CALLED VIA STANDARD LINKAGE
         B     &RSA1                   BRACH AROUND  EYECATCHER
         DC    CL24'&CSECT-&SYSDATE-&SYSTIME'
&RSA1    STM   14,12,12(13)            SAVE CALLERS REGS
         BAL   3,&RSA2                 BRANCH AROUND SAVE AREA
         DC    18F'-1'                 SAVE AREA
         DROP  15                      END TEMP USING
&RSA2    ST    3,8(13)                 OUR SAVE AREA POINTER
         ST    13,4(3)                 POINTER TO CALLERS SAVE AREA
         LR    13,3                    @OUR SAVE AREA
         USING &RSA1,13                SAVE AREA IS THE BASE
         AIF   ('&BASE2' EQ '').AMEND
         LA    &BASE2,4095(R13)        ESTABLISH
         LA    &BASE2,1(&BASE2)        SECOND
         USING &RSA1+4096,&BASE2       BASE
         AGO   .AMEND
.*
.*
.* RENT=YES
.*
.*
.A5000   ANOP
&CSECT   CSECT
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    &BASE,R15          COPY EPA
         USING &CSECT,&BASE       ADDRESSABILITY
         MNOTE *,'       GETMAIN RU,LV=72+&DYNAREA,LOC=RES'
         GETMAIN RU,              LV=LENGTH                            &
               LV=72+&DYNAREA.    STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES,           RELATIVE TO 16MB LINE
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         AIF   ('&DSECT' EQ '').A6999
         USING &DSECT,R13         MAP SA AND WORK AREA
.A6999   ANOP
.*
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
.A8999   ANOP
.*
.AMEND   ANOP
         MEND
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . SETUSER
*
*  DATE WRITTEN . . . . 04/84
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*
*  ENVIRONMENT  . . . . T S O  COMMAND PROCESSOR (ONLY)
*
*  PURPOSE:
*    USES THE ACF2 LOGON ID RECORD TO FILL IN THE &SYSUID AND &SYSPREF
*    FIELDS IF EXECUTING TSO IN BATCH MODE.
*
*  DESCRIPTION:
*    MOVES SELECTED FIELDS OF THE ACF2 LIDREC TO THE PROTECTED STEP
*    CONTROL BLOCK (PSCB) AND THE USER PROFILE TABLE (UPT).
*
*  ATTRIBUTES:
*    REENTRANT ETC.
*
*  CALLED MODULES:
*    NONE
*
*  ASSUMPTIONS:
*    ACF2 IS UP
*    RUN AS A COMMAND PROCESSOR
*
*
*  ABENDS:
*    NONE
*
*  CAVEATS:
*    (1) POTENTIAL PROBLEMS IF RUN AS OTHER THAN A COMMAND PROCESSOR.
*
*    (2) A FEW PICO SECOND ARE SPENT IN PROTECT KEY 0.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         ACCVT
         EJECT
         ACFASVT
         EJECT
         ACUCB
         EJECT
         LIDREC
         EJECT
         IKJPSCB
         EJECT
         IHAPSA
         EJECT
         IHAASCB
         EJECT
         IKJUPT
         EJECT
         IKJTMPWA
         EJECT
         ACFREGS
         SPACE 2
RUPT     EQU   3                        @UPT
RPSCB    EQU   4                        @PSCB
RLID     EQU   5                        @LID
RACCVT   EQU   6                        @ACCVT
RACUCB   EQU   7                        @ACUCB
         EJECT
***********************************************************************
*  LINKAGE CONVENTIONS
***********************************************************************
         SPACE 1
SETUSER  E@SAV
         ICM   RUPT,15,4(R1)            @USER PROFILE TABLE
         USING UPT,RUPT                 MAP UPT
         BZ    RETURN                   WHAT! NO UPT
         ICM   RPSCB,15,8(R1)           @PROTECTED STEP CONTROL BLOCK
         BZ    RETURN                   WHAT! NO PSCB?
         USING PSCB,RPSCB               MAP PSCB
         BZ    RETURN                   WHAT! NO UPT?
         SPACE 1
*  ABANDON THE TASK IF UID ALREADY CONTAINS SOMETHING
         SPACE 1
         CLC   =C'ASYSJEE',PSCBUSER     ME?
         BE    GETACCVT                 -YES, SO CONTINUE
         CLC   =C'ASYSHMD',PSCBUSER     ANOTHER?               HD DEC87
         BE    GETACCVT                 -YES, SO CONTINUE      HD DEC87
         CLI   PSCBUSER,C'A'            USER FIELD SET?
         BE    RETURN                   -YES, SO FORGET THIS ENDEAVOR
         EJECT
***********************************************************************
*  BEGIN ACF2 JOURNEY TO END UP WITH THE ADDRESS OF THE LID RECORD
***********************************************************************
         SPACE 1
GETACCVT ACFINCVT RACCVT,NONE=RETURN    @ACCVT
         USING ACCVT,RACCVT             MAP ACCVT
         SPACE 1
         ACFGUCB RACUCB,NONE=RETURN,INLINE=YES,SYS=AOS2 @ACUCB
         USING ACUCB,RACUCB             MAP ACUCB
         SPACE 1
         TM    ACCCFLG,ACCCNUAD         UADS=NO
         BZ    RETURN                   -NO, SO CAN'T DO IT.
         SPACE 1
         L     RLID,ACULRECP            @LIDREC
         USING LIDREC,RLID              MAP LIDREC
         SPACE 2
***********************************************************************
*  SET UP UPT FIELDS
***********************************************************************
         SPACE 2
         TM    LIDTFLG2,LIDT2MSG        MSGID SET?
         BZ    AC2MOD                   -NO
         OI    UPTSWS,UPTMID            -YES, TURN ON PROF MSGID
         SPACE 1
AC2MOD   EQU   *
         TM    LIDTFLG2,LIDT2MOD        MODE SET?
         BZ    AC2PPR                   -NO
         OI    UPTSWS,UPTMODE           TURN ON PROF MODE
         SPACE 1
AC2PPR   EQU   *
         MVC   UPTPREFX,LIDTPPFX        TURN ON PROFILE PREFIX
         CLI   UPTPREFX,C'.'
         BE    DOPSCB
         MVI   UPTPREFL,7
         TRT   UPTPREFX,BLANKS
         BZ    DOPSCB
         LA    R0,UPTPREFX
         SR    R1,R0
         STC   R1,UPTPREFL
         SPACE 2
***********************************************************************
*  SET UP PSCB FIELDS
***********************************************************************
         SPACE 1
DOPSCB   RWHOLE AUTHON
         SPACE 1
ACIN0    MODESET KEY=ZERO,RELATED=(ACOUT0,'OUT OF KEY 0')
         MVC   PSCBUSER,LIDLID          USERID
         MVI   PSCBUSRL,7               ASSUME USERID LENGTH IS 7
         TRT   PSCBUSER,BLANKS          IS USERD ID LENGTH < 7?
         BZ    ACUNIT                   -NO
         LA    R0,PSCBUSER              -YES, THEN
         SR    R1,R0                      COMPUTE LENGTH
         STC   R1,PSCBUSRL                AND SAVE IN PSCB
         SPACE 1
ACUNIT   EQU   *
         MVC   PSCBGPNM,LIDTUNIT        SET UP PSCB DEFAULT UNIT
         SPACE 1
         MVC   PSCBATR1,LIDTFLG3        SYSTEM ATTRIBUTES
         MVC   PSCBATR2,LIDTAT2         USER ATTRIBUTES
         SPACE 1
         MVC   PSCBDEST,LIDTDRMT        DEFAULT DESTINATION
         SPACE 1
ACOUT0   MODESET KEY=NZERO,RELATED=(ACIN0,'INTO KEY 0')
         SPACE 1
         RWHOLE AUTHOFF
         SPACE 2
RETURN   EQU   *
         L     R13,4(R13)               POINT CALLERS SA
         RETURN (14,12)                 RELOAD CALLERS REGS
         SPACE 3
***********************************************************************
*  CONSTANTS
***********************************************************************
         SPACE 1
BLANKS   DC    256X'00'
         ORG   BLANKS+C' '
         DC    AL1(4)
         ORG
         SPACE 2
         LTORG
         END
