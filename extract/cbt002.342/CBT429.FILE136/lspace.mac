LSP      TITLE 'ISSUE LSPACE SVC (78) FOR ONLINE DASD'      *HMD 05/80*
         LCLB  &XA                    MVS/XA SUPPORT        *HMD 12/85*
&XA      SETB  1                      SET TO ZERO FOR       *HMD 12/85*
*                                     MVS/SP 1.3.X          *HMD 12/85*
*********************************************************** *HMD 12/85*
**  NOTE: THIS COMMAND PROCESSOR WILL RUN ON  'ONLY'     ** *HMD 12/85*
**        MVS/SP 1.3.X OR HIGHER OPERATING SYSTEMS.      ** *HMD 12/85*
**                                                       ** *HMD 12/85*
**        MVS/XA SUPPORT IS PROVIDED VIA THE '&XA' SET   ** *HMD 12/85*
**        SYMBOL ABOVE.                                  ** *HMD 12/85*
*********************************************************** *HMD 12/85*
LSPACE   CSECT
         AIF   (NOT &XA).X001                               *HMD 12/85*
LSPACE   AMODE 31             SET ADDRESSING MODE           *HMD 12/85*
LSPACE   RMODE ANY            SET RESIDENCY MODE            *HMD 12/85*
.X001    ANOP                                               *HMD 12/85*
         TSOENTER REGS=YES,PL=(CPPL,PARSE,IO),              *HMD 12/85*X
               WORK=LDYNAMIC,CPR=Y,SP=1                     *HMD 12/85*
         LUSE  CVTMAP,R3      ADDRESS THE CVT               *HMD 12/85*
         LUSE  UCB,R4         ADDRESS THE UCB DSECT         *HMD 05/80*
         LUSE  IKJPARMD,R9    ESTABLISH PDL ADDRESSIBILITY  *HMD 01/86*
         SPACE 2                                            *HMD 01/86*
         INUSE ,              SEE WHO'S ON FIRST            *HMD 01/86*
         EJECT                                              *HMD 05/80*
*                                                           *HMD 05/80*
*  CLEAR THE WORK AREA                                      *HMD 05/80*
*                                                           *HMD 05/80*
         LA   R2,TSOUSER               GET START OF W/A     *HMD 05/80*
         LA   R3,LDYNAMIC              LENGTH TO CLEAR      *HMD 05/80*
         SR   R4,R4                    CLEAR R4             *HMD 05/80*
         SR   R5,R5                    CLEAR R5             *HMD 05/80*
         MVCL R2,R4                    C L E A R  L O N G   *HMD 05/80*
*                                                           *HMD 05/80*
*  GET PUTLINE SERVICE ROUTINE IN STORAGE                   *HMD 05/80*
*                                                           *HMD 05/80*
         LOAD EP=IKJPUTL                                    *HMD 05/80*
         ST   R0,ADDRPUTL              SAVE PUTLINE ADDR    *HMD 05/80*
         EJECT
***********************************************************************
* CALLTSSR TO PARSE (ENTRY POINT IKJPARS); ON RETURN PPLRANS --> PDL  *
* HANDLE ALL ERROR CODES RETURNED BY PARSE USING GENERAL FAIL SERVICE *
* ROUTINE.                                                            *
***********************************************************************
*                                                                     *
PARSE    MVC   PPLPCL,=V(PARMTAB)      INSERT PARMTAB ADDR  *HMD 05/80*
         XC    TSOECB,TSOECB           CLEAR ECB            *HMD 05/80*
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         LTR   R15,R15                 SEE IF RETURN CODE ZERO
         BZ    GOODPARS                IF YES GO TO GOOD PARS ROUTINE
         C     R15,RC4                 RETURN CODE OF 4     *HMD 05/80*
         BE    SETCD                   SET RC=8             *HMD 05/80*
         C     R15,RC20                RETURN CODE OF 20    *HMD 05/80*
         BE    SETCD                   SET RC=8             *HMD 05/80*
         EJECT                                              *HMD 05/80*
***********************************************************************
*                                                                     *
*        FORMAT THE GENERAL FAIL (IKJEFF19) PARM BLOCK                *
*                                                                     *
***********************************************************************
         ST    R15,GFRCODE             SAVE RETURN CODE     *HMD 05/80*
         MVI   GFCALLID+1,GFPARSE      INDICATE PARSE       *HMD 05/80*
         LA    R5,CPPL                 GET CPPL ADDRESS     *HMD 05/80*
         ST    R5,GFCPPLP              POINT FOR IKJEFF19   *HMD 05/80*
         LA    R5,TSOECB               GET ECB ADDRESS      *HMD 05/80*
         ST    R5,GFECBP               SAVE IN GFPL         *HMD 05/80*
         LA    R1,GFCBPTR              POINT TO GFPL        *HMD 05/80*
         ST    R1,GFPARMP              SAVE PARM POINTER    *HMD 05/80*
         LA    R1,GFPARMP              INDIRECT POINTER     *HMD 05/80*
         XC    TSOECB,TSOECB           CLEAR ECB            *HMD 05/80*
*                                                           *HMD 05/80*
         LINK  EP=IKJEFF19             LINK TO GNRLFAIL     *HMD 05/80*
*                                                           *HMD 05/80*
         LTR   R15,R15                 GNRLFAIL OK?         *HMD 05/80*
         BZ    SETCD                   YES, RETURN TO MVS   *HMD 05/80*
         CVD   R15,DEC                 CONVERT RC           *HMD 05/80*
         UNPK  RUNPK,DEC+6(2)          UNPK RETURN CODE     *HMD 05/80*
         OI    RUNPK+2,C'0'            FIX SIGN             *HMD 05/80*
         MVC   GFERR(GNRLERRL),GNRLERR MOVE GNRL ERROR MSG  *HMD 05/80*
         MVC   GFERRND-3(2),RUNPK+1    MOVE R15 VALUE       *HMD 05/80*
         MVC   OLD,SEGNUM              MOVE NUMBER OF SEGS  *HMD 05/80*
         LA    R1,GFERR                GET ADDR OF MSG      *HMD 05/80*
         ST    R1,OLDADDR              SAVE IN OLD          *HMD 05/80*
         L     R15,ADDRPUTL            GET PUTLINE ADDR     *HMD 05/80*
*                                                           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 05/80*X
               MF=(E,IOPL),ENTRY=(15)  PUT OUT ERROR MSG    *HMD 05/80*
*                                                           *HMD 05/80*
SETCD    LA    R15,8                   RETURN CODE OF 8     *HMD 05/80*
         B     FINISH                  END IT NOW           *HMD 05/80*
*                                                                     *
         EJECT
***********************************************************************
* SET UP ADDRESSABILITY TO PDL & LOAD REG 6 WITH ADDRESS OF DSNAME PDE*
***********************************************************************
*                                                                     *
GOODPARS DS    0H
         MVC   PARMNM,BLANKS           CLEAR NAME AREA      *HMD 05/80*
         L     R9,PPLRANS        LOAD PTR TO PARS ANSWER    *HMD 01/86*
         LA    R6,VOLUMES        LOAD PTR TO DSNAME LIST    *HMD 01/86*
         LA    R7,KWORD          LOAD PTR TO FLAG LIST      *HMD 01/86*
         CLI   1(R7),X'00'       Q. ANY KEYWORDS            *HMD 01/86*
         BNE   SETSW             A. YES - TURN ON SWITCH
*                                A. NO  - FALL THRU
LDPTR    L     R7,0(R6)          SET UP PTR TO VOLUME LIST
CHKL     LH    R8,4(R6)          SET UP LENGTH OF VOL LIST
         ST    R8,SAVELGTH
         LTR   R8,R8             IS LENGTH ZERO ?
         BZ    DEFAULT           YES - ASSUME ALL VOLUMES
         BCTR  R8,0
         EX    R8,MOVEVOL
         SPACE 2                                            *HMD 01/86*
         INUSE ,                                            *HMD 05/80*
*                                                                     *
         EJECT
***********************************************************************
*    STEP THROUGH SEQUENCE CHECKING FOR COMMAND PARAMETER ENTRY TYPE  *
***********************************************************************
*                                                                     *
         ST    R6,PARSAVE
         CLC   PARMNM(3),=C'ALL'       ALL VOLUMES REQUEST  *HMD 05/80*
         BE    DEFAULT                 TAKE THE DEFAULT     *HMD 05/80*
         CLC   PARMNM(6),=C'PUBLIC'
         BE    PUBLWD
         CLC   PARMNM(7),=C'PRIVATE'
         BE    PRIVWD
         CLC   PARMNM(7),=C'STORAGE'
         BE    STORWD
         BAL   R5,VOLKYWD              IS REQUEST FOR VOLUME ID ?
         CLI   REQFLG,VOLFLG           IS REQUEST FOR VOLUME???
         BE    CHKPDE                  YES, GO TO IT
         BAL   R5,UCBKYWD              IS REQUEST FOR UCB ADDRESS ?
         CLI   REQFLG,UCBFLG           IS REQUEST FOR UCB?  *HMD 05/80*
         BE    CHKPDE                  YES, GET NEXT ONE    *HMD 05/80*
         BAL   R5,DEVKYWD              IS REQUEST FOR DEVICE TYPE ?
         CLI   REQFLG,DEVFLG           REQUEST FOR DEVICE?  *HMD 05/80*
         BE    CHKPDE                  CHECK NEXT REQUEST   *HMD 05/80*
*                                                                     *
         EJECT
***********************************************************************
*        HANDLE REQEST TO DISPLAY PUBLIC VOLUMES                      *
***********************************************************************
PUBLWD   DS    0H                   REQUEST IS FOR 'PUBLIC' *HMD 05/80*
         L     R3,CVTPTR            GET CVT ADDRESS         *HMD 05/80*
         XC    IOSWORK,IOSWORK      CLEAR WORK AREA         *HMD 01/86*
         XC    IOSADDR,IOSADDR      INITIALIZE UCB ADDRESS  *HMD 01/86*
         MVI   IOSTYPE,UCB3DACC     REQUEST ONLY DASD VOLS  *HMD 01/86*
NEXTPUB  DS    0H                   UCB SEARCH LOOP         *HMD 01/86*
         L     R15,CVTUCBSC         GET UCB SEARCH ROUTINE  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CALL  (15),(IOSWORK,IOSTYPE,IOSADDR),VL,MF=(E,IOSCALL)
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15              END OF SEARCH?          *HMD 01/86*
         BNZ   CHKPEOT              YES, MUST NOT BE PUBLIC *HMD 05/80*
         SPACE 1                                            *HMD 01/86*
PUBCHK   DS    0H                   CHECK THE UCB CAREFULLY *HMD 05/80*
         L     R4,IOSADDR           GET THE UCB ADDRESS     *HMD 01/86*
         TM    UCBSTAT,UCBONLI      ONLINE?                 *HMD 05/80*
         BNO   NEXTPUB              NO, GET NEXT UCB        *HMD 01/86*
         MVI   REQFLG,PUBFLG        TURN ON PUBLIC FLAG     *HMD 05/80*
         TM    UCBSTAB,UCBBPUB      IS THIS A PUBLIC VOL?   *HMD 05/80*
         BZ    NEXTPUB              THIS IS NOT PUBLIC      *HMD 01/86*
         OI    GOTFLG,GOTPUBL       WE GOT A PUBLIC VOL     *HMD 06/82*
         B     SVC78                GO ISSUE SVC 78         *HMD 06/82*
         SPACE 1                                            *HMD 01/86*
CHKPEOT  DS    0H                   CHECK FOR PUBLIC EOT    *HMD 06/82*
         TM    GOTFLG,GOTPUBL       DID WE GET A PUB VOL?   *HMD 06/82*
         BZ    NOPUBL               NOPE..INDICATE ERROR    *HMD 06/82*
         B     CHKFLG               GO CHECK FLAGS          *HMD 06/82*
         EJECT
***********************************************************************
*        HANDLE REQEST TO DISPLAY PRIVATE VOLUMES                     *
***********************************************************************
PRIVWD   DS    0H                                           *HMD 05/80*
         L     R3,CVTPTR            GET CVT ADDRESS         *HMD 05/80*
         XC    IOSWORK,IOSWORK      CLEAR WORK AREA         *HMD 01/86*
         XC    IOSADDR,IOSADDR      INITIALIZE UCB ADDRESS  *HMD 01/86*
         MVI   IOSTYPE,UCB3DACC     REQUEST ONLY DASD VOLS  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
NEXTPRIV DS    0H                   PRIVATE VOLUME LOOP     *HMD 01/86*
         L     R15,CVTUCBSC         GET UCB SEARCH ROUTINE  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CALL  (15),(IOSWORK,IOSTYPE,IOSADDR),VL,MF=(E,IOSCALL)
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15              END OF SEARCH?          *HMD 01/86*
         BNZ   CHKFLG               YES, MUST NOT BE PRIVATE*HMD 05/80*
         SPACE 1                                            *HMD 01/86*
CHKPRIV  DS    0H
         L     R4,IOSADDR           GET UCB ADDRESS         *HMD 01/86*
         TM    UCBSTAT,UCBONLI      ONLINE DEVICE?          *HMD 05/80*
         BNO   NEXTPRIV             NO, GET NEXT UCB        *HMD 01/86*
         MVI   REQFLG,PRIVFLG       TURN ON PRIVATE FLAG    *HMD 01/86*
         TM    UCBSTAB,UCBBPRV      MOUNTED PRIVATE?        *HMD 05/80*
         BO    SVC78                GO GET FREE SPACE       *HMD 05/80*
         B     NEXTPRIV             ELSE GO GET NEXT VOLUME *HMD 01/86*
         EJECT
***********************************************************************
*        HANDLE REQEST TO DISPLAY STORAGE VOLUMES                     *
***********************************************************************
STORWD   DS    0H                                           *HMD 05/80*
         L     R3,CVTPTR            GET CVT ADDRESS         *HMD 05/80*
         XC    IOSWORK,IOSWORK      CLEAR WORK AREA         *HMD 01/86*
         XC    IOSADDR,IOSADDR      INITIALIZE UCB ADDRESS  *HMD 01/86*
         MVI   IOSTYPE,UCB3DACC     REQUEST ONLY DASD VOLS  *HMD 01/86*
NEXTSTOR DS    0H                                           *HMD 01/86*
         L     R15,CVTUCBSC         GET UCB SEARCH ROUTINE  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CALL  (15),(IOSWORK,IOSTYPE,IOSADDR),VL,MF=(E,IOSCALL)
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15              END OF SEARCH?          *HMD 01/86*
         BNZ   CHKFLG               YES, MUST NOT BE STORAGE*HMD 05/80*
         SPACE 1                                            *HMD 01/86*
CHKSTOR  DS    0H
         L     R4,IOSADDR           GET UCB ADDRESS         *HMD 01/86*
         TM    UCBSTAT,UCBONLI    ONLINE UCB?               *HMD 05/80*
         BNO   NEXTSTOR             NO, GET NEXT UCB        *HMD 01/86*
         MVI   REQFLG,STORFLG     TURN ON STORAGE FLAG      *HMD 05/80*
         TM    UCBSTAB,UCBBSTR    STORAGE VOLUME?           *HMD 05/80*
         BO    SVC78              GO GET FREE SPACE         *HMD 05/80*
         B     NEXTSTOR           RETURN FOR MORE           *HMD 01/86*
         EJECT
***********************************************************************
*        IF REQUEST IS FOR VOL(S), THEN PROCESS; ELSE BYPASS          *
***********************************************************************
VOLKYWD  DS    0H
         L     R3,CVTPTR            GET CVT ADDRESS         *HMD 05/80*
         XC    IOSWORK,IOSWORK      CLEAR WORK AREA         *HMD 01/86*
         XC    IOSADDR,IOSADDR      INITIALIZE UCB ADDRESS  *HMD 01/86*
         MVI   IOSTYPE,0            CHECK ALL DEVICE TYPES  *HMD 01/86*
REQNEXT  DS    0H                                           *HMD 01/86*
         L     R15,CVTUCBSC         GET UCB SEARCH ROUTINE  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CALL  (15),(IOSWORK,IOSTYPE,IOSADDR),VL,MF=(E,IOSCALL)
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15              END OF SEARCH?          *HMD 01/86*
         BNZR  R5                   COULD NOT FIND VOLUME   *HMD 01/86*
         SPACE 1
SERCHEK  DS    0H                                           *HMD 01/86*
         L     R4,IOSADDR           GET THE UCB ADDRESS     *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CLI   REQFLG,ALLFLG        REQUEST FOR ALL?        *HMD 05/80*
         BE    CKVOL                YES, DO THIS ONE        *HMD 05/80*
         SPACE 1                                            *HMD 01/86*
         L     R6,SAVELGTH          OPERAND LENGTH IN REG 6 *HMD 01/86*
         BCTR  R6,0                 GET MACHINE LENGTH      *HMD 01/86*
         EX    R6,COMPARE           COMPARE VOLSERS         *HMD 01/86*
         BNE   REQNEXT              NE - TRY AGAIN          *HMD 01/86*
*                                   EQ - PROCEEED           *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
CKVOL    DS    0H                                           *HMD 05/80*
         TM    UCBTBYT3,UCB3DACC    IS THIS A DASD DEVICE?  *HMD 01/86*
         BNO   CKALL                NO, CHECK FOR ERROR     *HMD 01/86*
         TM    UCBSTAT,UCBONLI      DEVICE ONLINE ?         *HMD 05/80*
         BNO   CKALL1               NO-ISSUE MSG, RETURN    *HMD 05/80*
         CLI   REQFLG,ALLFLG        ALL ONLINE DEVICES?     *HMD 05/80*
         BE    CALLLSP              CALL LSPACE SVC         *HMD 05/80*
         MVI   REQFLG,VOLFLG        TURN VOL FLAG ON        *HMD 05/80*
CALLLSP  B     SVC78                FIND SPACE ATTRIBUTES   *HMD 05/80*
*
CKALL    CLI   REQFLG,ALLFLG        ARE WE LOOKING AT ALL?  *HMD 05/80*
         BE    REQNEXT              YES, CHECK NEXT UCB     *HMD 01/86*
         B     NODASD               VOLSER IS IN ERROR      *HMD 01/86*
*                                                           *HMD 05/80*
CKALL1   CLI   REQFLG,ALLFLG        ARE WE LOOK AT ALL?     *HMD 05/80*
         BE    REQNEXT              YES, GET NEXT UCB       *HMD 01/86*
         B     MSG08                DEVICE IS NOT MOUNTED   *HMD 05/80*
*                                                           *HMD 05/80*
         EJECT
***********************************************************************
*        IF REQUEST IS FOR UCB(S), THEN PROCESS; ELSE BYPASS          *
***********************************************************************
UCBKYWD  DS    0H
         L     R3,CVTPTR            GET CVT ADDRESS         *HMD 05/80*
         XC    IOSWORK,IOSWORK      CLEAR WORK AREA         *HMD 01/86*
         XC    IOSADDR,IOSADDR      INITIALIZE UCB ADDRESS  *HMD 01/86*
         MVI   IOSTYPE,0            REQUEST ALL DEVICES     *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
REQNEXT1 DS    0H                                           *HMD 01/86*
         L     R15,CVTUCBSC         GET UCB SEARCH ROUTINE  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CALL  (15),(IOSWORK,IOSTYPE,IOSADDR),VL,MF=(E,IOSCALL)
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15              END OF SEARCH?          *HMD 01/86*
         BNZR  R5                   COULD NOT FIND VOLUME   *HMD 01/86*
         SPACE 1                                            *HMD 05/80*
UCBCHEK  DS    0H                                           *HMD 01/86*
         L     R4,IOSADDR           GET UCB ADDRESS         *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         MVC   VOLSER(6),UCBVOLI  SAVE VOLSER FOR MSG       *HMD 01/86*
         L     R6,SAVELGTH        GET LENGTH OF OPERAND     *HMD 01/86*
         BCTR  R6,0               DECREMENT FOR EX          *HMD 01/86*
         EX    R6,COMPUCB         COMPARE VOLSERS           *HMD 01/86*
         BNE   REQNEXT1           IF UNEQUAL, GET NEXT UCB  *HMD 01/86*
         SPACE 1
CHKUCB   DS    0H                  CHECK UCB FIELDS         *HMD 05/80*
         MVI   REQFLG,UCBFLG       TURN ON UCB REQUEST FLAG *HMD 05/80*
         TM    UCBTBYT3,UCB3DACC   IS THIS A DASD DEVICE?   *HMD 01/86*
         BNO   NODASD              NO, MUST BE AN ERROR     *HMD 01/86*
         TM    UCBSTAT,UCBONLI     IS DEVICE ONLINE ?       *HMD 05/80*
         BNO   MSG0C               NO - ISSUE MSG, RETURN   *HMD 05/80*
         B     SVC78               RIGHT TYPE - GO TO LSPACE SVC
*
         EJECT
DEVKYWD  DS    0H                 PROCESS DEVICE KEYWORD
***********************************************************************
*        IF REQUEST IS DEVNAME(S), THEN PROCESS; ELSE BYPASS          *
***********************************************************************
         AIF   (&XA).X003                                   *HMD 01/86*
***********************************************************************
*                                                                     *
*             PREPARE TO COUNT NUMBER OF UCB ADDRESSES                *
*                                                                     *
***********************************************************************
DEVCOUNT L     R3,CVTPTR            GET CVT ADDRESS         *HMD 01/86*
         XC    IOSWORK,IOSWORK      CLEAR WORK AREA         *HMD 01/86*
         XC    IOSADDR,IOSADDR      INITIALIZE UCB ADDRESS  *HMD 01/86*
         XC    CNTSAVE,CNTSAVE      CLEAR DEVICE COUNTER    *HMD 01/86*
         MVI   IOSTYPE,0            COUNT ALL THE DEVICES   *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
DEVLOOP  DS    0H                                           *HMD 01/86*
         L     R15,CVTUCBSC         GET UCB SEARCH ROUTINE  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         CALL  (15),(IOSWORK,IOSTYPE,IOSADDR),VL,MF=(E,IOSCALL)
         SPACE 1                                            *HMD 01/86*
         L     R1,CNTSAVE         LOAD COUNT SAVE           *HMD 01/86*
         LA    R1,1(,R1)          INCREMENT COUNTER         *HMD 01/86*
         ST    R1,CNTSAVE         SAVE COUNTER              *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15            END OF SEARCH?            *HMD 01/86*
         BZ    DEVLOOP            NO, CONTINUE              *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
* R1 NOW CONTAINS THE NUMBER OF DEVICES PLUS ONE            *HMD 01/86*
         BCTR  R1,0               DECREMENT COUNT           *HMD 01/86*
         LR    R9,R1              SAVE COUNT IN R9          *HMD 01/86*
*
LOAD     DS    0H
*                                                           *HMD 05/80*
         LOAD  EP=DEVNAMET        LOAD MASK TABLE
*                                                           *HMD 05/80*
         LR    R10,R0             SAVE MASK TABLE ADDRESS   *HMD 05/80*
*                                                           *HMD 05/80*
         LOAD  EP=DEVMASKT        LOAD MASK TABLE           *HMD 05/80*
*                                                           *HMD 05/80*
         LR    R11,R0             SAVE MASK TABLE ADDRESS   *HMD 05/80*
*                                                           *HMD 05/80*
         L     R0,0(,R10)         # OF NAME ENTRIES IN R0   *HMD 05/80*
         LA    R15,4(,R10)        FIRST ENTRY FROM DEVNAMET *HMD 05/80*
*                                                           *HMD 05/80*
TABLSCAN DS    0H
         CLC   PARMNM(8),0(R15)   COMPARE FOR CORRECT NAME
         BE    HAVENAME           YES, WE GOT IT
         LA    R15,12(,R15)       INCREMENT NAMET POINTER
         BCT   R0,TABLSCAN        READ AGAIN
         AGO   .X004                                        *HMD 01/86*
.X003    ANOP                                               *HMD 01/86*
***********************************************************************
**                                                                   **
**  USE ROUTINE IEFEB4UV TO SCAN ELIGIBLE DEVICE TABLE FOR MVS/XA    **
**                                                                   **
***********************************************************************
DEVSRCH  DS    0H                 SCAN DEVICE TABLE         *HMD 01/86*
         ST    R5,SAVERETN        SAVE RETURN ADDRESS       *HMD 01/86*
         LA    R0,EUTAB           GET TABLE ADDRESS         *HMD 01/86*
         LA    R1,EFLAGS          GET FLAGS ADDRESS         *HMD 01/86*
         STM   R0,R1,EB4PARMS     SAVE PARAMETERS           *HMD 01/86*
         MVC   EFLAGS,=X'1000'    SET REQUEST FLAGS         *HMD 01/86*
         MVC   EUNAME,PARMNM      MOVE UNIT NAME TO LIST    *HMD 01/86*
         XC    EULIST(8),EULIST   CLEAR UCB LIST AND ZERO   *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         LA    R1,EB4PARMS        GET PARM LIST ADDRESS     *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         LINK  EP=IEFEB4UV,SF=(E,EB4LINK)                   *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         LTR   R15,R15            CHECK RETURN CODE         *HMD 01/86*
         BNZ   PUTNON             UNIT NAME NOT FOUND       *HMD 01/86*
         OI    GOTFLG,GOTFREEM    INDICATE FREEMAIN NEEDED  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         L     R10,EULIST          GET LIST ADDRESS         *HMD 01/86*
         L     R6,USPNUM-ULIST(R10)                         *HMD 01/86*
*                                   GET NUMBER OF ENTRIES   *HMD 01/86*
         LA    R7,UCBPTRS-ULIST(R10)                        *HMD 01/86*
*                                   GET POINTER TO UCB TBL  *HMD 01/86*
EB4SPAC  L     R4,0(,R7)            POINT TO NEXT UCB       *HMD 01/86*
         LA    R5,EB4CNTR           INDICATE RETURN ADDRESS *HMD 01/86*
         MVI   REQFLG,DEVFLG        INDICATE DEVICE SEARCH  *HMD 01/86*
         TM    UCBTBYT3,UCB3DACC    IS THIS DIRECT ACCESS   *HMD 01/86*
         BNO   NODASD               NO, SEND MESSAGE        *HMD 01/86*
         TM    UCBSTAT,UCBONLI      ONLINE DASD?            *HMD 01/86*
         BZ    NOTONL               NO, NOT ONLINE          *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         BAL   R5,SVC78             REPORT ON SPACE USAGE   *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
EB4CNTR  LA    R7,L'UCBPTRS(R7)     POINT TO NEXT UCB       *HMD 01/86*
         BCT   R6,EB4SPAC           CONTINUE WITH NEXT UCB  *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
         L     R5,SAVERETN          RESTORE RETURN ADDR     *HMD 01/86*
         BR    R5                   CHECK NEXT OPERAND      *HMD 01/86*
.X004    ANOP                                               *HMD 01/86*
         EJECT                                              *HMD 01/86*
         AIF   (&XA).X023         BYPASS FOR MVS/XA         *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
***********************************************************************
**                                                                   **
**  WE'VE FOUND A MATCH IN THE DEVICE NAME TABLE - SELECT THE UNIT   **
**                                                                   **
***********************************************************************
         SPACE 1                                            *HMD 01/86*
HAVENAME LH    R0,0(,R11)         GET # OF DEVMASKT ENTRIES *HMD 05/80*
         LA    R1,4(,R11)         GET MASK ENTRY            *HMD 05/80*
*                                                           *HMD 05/80*
FINDMASK CLC   8(4,R15),4(R1)     ARE DEVICE TYPES EQUAL    *HMD 05/80*
         BE    HAVEMASK           YES - HAVE CORRECT MASK   *HMD 05/80*
         LA    R1,8(R1,R9)        NO - INCR MASK POINTER    *HMD 05/80*
         BCT   R0,FINDMASK        GET NEXT MASK ENTRY       *HMD 05/80*
         B     PUTNON             PUT OUT MESSAGE           *HMD 05/80*
*
HAVEMASK DS    0H                                           *HMD 05/80*
         LA    R2,7(R1,R9)        END OF MASK ENTRY         *HMD 05/80*
         L     R3,0(,R1)          NUMBER OF BITS THIS ENTRY *HMD 05/80*
         LA    R4,8(,R1)          POINT TO NEXT BYTE        *HMD 05/80*
         SR    R7,R7              CLEAR FOR CALCULATION     *HMD 05/80*
NEXTBYTE LA    R5,8               8 BITS TO A BYTE          *HMD 05/80*
         LA    R6,X'80'           LOAD TEST MASK            *HMD 05/80*
NEXTBIT  TM    0(R4),0            << EXECUTED >>            *HMD 05/80*
         EX    R6,NEXTBIT         IS THIS BIT ON?           *HMD 05/80*
         BZ    NOTTHIS            NO, GET NEXT ONE          *HMD 05/80*
         LA    R14,0(R7,R8)       DOUBLE INDEX              *HMD 05/80*
*                                 TO LOOKUP ENTRY           *HMD 05/80*
         SLR   R45,R15            CLEAR R15 FOR UCB INSERT  *HMD 05/80*
         ICM   R15,3,0(R14)       INSERT UCB ADDRESS        *HMD 05/80*
         TM    UCBTBYT3-UCB(15),UCB3DACC                    *HMD 01/86*
         BNO   NODASD             NOT DIRECT ACCESS         *HMD 01/86*
         TM    UCBSTAT-UCB(15),UCBONLI                      *HMD 01/86*
         BZ    NOTONL             NOT ONLINE                *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
NOTDA    DS    0H
         ST    R3,CNTSAVE       SAVE COUNTER OF BIT ENTRIES
         ST    R5,BITSAVE       SAVE COUNTER OF # OF BITS
         MVI   REQFLG,DEVFLG    INDICATE DEVICE SEARCH
         LR    R4,R15           LOAD UCB ADDRESS            *HMD 01/86*
         BAL   R5,SVC78         CHECK FREE SPACE ON VOLUME
         L     R3,CNTSAVE       RESTORE COUNT OF ENTRIES
         L     R5,BITSAVE       RESTORE NUMBER OF BITS
         SPACE 1                                            *HMD 01/86*
CNTR     BCT   R3,NOTTHIS       CONTINUE DEVMASKT SEARCH
         B     CHKPDE
         SPACE 1                                            *HMD 01/86*
NOTTHIS  DS    0H
         LA    R7,2(,R7)        BUMP BIT COUNTER
         SRL   R6,1             DIVIDE BY 2
         BCT   R5,NEXTBIT       CHECK NEXT BIT
         LA    R4,1(,R4)        NEXT BYTE
         CR    R4,R2            MASK BIT COUNT ERROR?
         BH    TOOMANY          YES, TELL USER
         B     NEXTBYTE
.X023    ANOP                                               *HMD 01/86*
*                                                           *HMD 05/80*
*  PUT NON-SUPPORTED MESSAGE TO TERMINAL                    *HMD 05/80*
*                                                           *HMD 05/80*
PUTNON   MVC   OLD,SEGNUM         ONE SEGMENT THIS TIME     *HMD 05/80*
         LA    R1,NOSUPP          ADDRESS OF MESSAGE        *HMD 05/80*
         ST    R1,OLDADDR         SAVE IN OLD               *HMD 05/80*
         XC    TSOECB,TSOECB      CLEAR ECB                 *HMD 05/80*
         L     R15,ADDRPUTL       GET PUTLINE ADDRESS       *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 05/80*X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
         B     CHKPDE             CHECK FOR MORE REQUESTS   *HMD 05/80*
*
         SPACE 2                                            *HMD 01/86*
NOTONL   EQU   *
         MVC   OFFLMSG(OFFLL),OFFLID  MOVE MESSAGE TO AREA  *HMD 05/80*
         MVC   OFFLMSG+13(3),UCBNAME  MOVE DEVICE NAME      *HMD 05/80*
         MVC   OLD,SEGNUM             ONE SEGEMENT          *HMD 05/80*
         LA    R1,OFFLMSG             GET MESSAGE ADDRESS   *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         L     R15,ADDRPUTL           GET PUTLINE ADDRESS   *HMD 05/80*
         XC    TSOECB,TSOECB          CLEAR ECB             *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 05/80*X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
         AIF   (&XA).X090                                   *HMD 01/86*
         B     CNTR
         AGO   .X091                                        *HMD 01/86*
.X090    ANOP                                               *HMD 01/86*
         B     EB4CNTR          SCAN NEXT UCB ADDRESS       *HMD 01/86*
.X091    ANOP                                               *HMD 01/86*
*
*                                                           *HMD 05/80*
TOOMANY  DS    0H               TOO MANY BITS IN DEVMASKT   *HMD 05/80*
         MVC   OLD,SEGNUM       ONE SEGMENT ONLY            *HMD 05/80*
         LA    R1,MCNTA         ADDRESS OF MESSAGE          *HMD 05/80*
         ST    R1,OLDADDR       SAVE IN OLD                 *HMD 05/80*
         L     R15,ADDRPUTL     GET PUTLINE ADDRESS         *HMD 05/80*
         XC    TSOECB,TSOECB    CLEAR ECB                   *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 05/80*X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
         B     CHKPDE
         EJECT
***********************************************************************
*        CALL LSPACE SVC (SVC 78) AND ISSUE SPACE MESSAGE             *
***********************************************************************
SVC78    ST    R4,UCBSAVE        SAVE UCB ADDR FOR SEARCH   *HMD 01/86*
         LR    R0,R4             SAVE ADDRESS OF UCB        *HMD 01/86*
         LA    R1,VOLSPC         LOAD REG 1 WITH ADDR OF MSG AREA
         SVC   78                ISSUE LSPACE SVC
         LTR   R15,R15           CHECK FOR RETURN CODE ZERO
         BZ    PUTMSG            IF ZERO, GO TO PUTMSG
         LR    R8,R15            LOAD RETURN CODE INTO REG 15
         B     ERRORS            GO TO CONVERT ROUTINE
*                                                                     *
PUTMSG   MVC   SPCMSGM(SPCMSGL),SPCMSGA   MOVE IN MESSAGE   *HMD 05/80*
         MVC   SPCMSGM+4(3),UCBNAME       MOVE IN UCBID     *HMD 05/80*
         MVC   SPCMSGM+9(6),UCBVOLI       MOVE IN VOLSER    *HMD 05/80*
         L     R15,ADDRPUTL      GET PUTLINE ADDRESS        *HMD 05/80*
         XC    TSOECB,TSOECB     CLEAR ECB                  *HMD 05/80*
*                                                           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(SPCMSGM,TERM,SINGLE,DATA),          X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
*                                                           *HMD 05/80*
         MVC   VOLSPC1,BLANKS             CLEAR AREA        *HMD 05/80*
         MVC   VOLSPC1(4),=H'42,0'        MOVE IN MSG LEN   *HMD 05/80*
         MVC   VOLSPC1+9(30),VOLSPC       MOVE IN SVC78 MSG *HMD 05/80*
         L     R15,ADDRPUTL               GET PUTLINE ADDR  *HMD 05/80*
         XC    TSOECB,TSOECB              CLEAR ECB         *HMD 05/80*
*                                                           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(VOLSPC1,TERM,SINGLE,DATA),          X
               MF=(E,IOPL),ENTRY=(15)     PUT OUT MESSAGE   *HMD 05/80*
*                                                           *HMD 05/80*
         EJECT                                              *HMD 05/80*
***********************************************************************
*        CHECK REQUEST FLAGS AND PROCESS AS INDICATED                 *
***********************************************************************
         CLI   FLGSW,FLGSET            IS SPECIAL FLAG SET?
         BE    UCBFLAG                 YES, UCB INDICATION
CHKFLGS  CLI   REQFLG,PUBFLG           PUBLIC?
         BE    NEXTPUB                 YES
         CLI   REQFLG,PRIVFLG          PRIVATE?
         BE    NEXTPRIV                YES
         CLI   REQFLG,STORFLG          STORAGE?
         BE    NEXTSTOR                YES
         CLI   REQFLG,MYFLG            MYVOLS (NOT SUPPORTED YET)
         BER   R5                      YES
         CLI   REQFLG,VOLFLG           WAS REQUEST FOR VOLSER
         BE    REQNEXT                 YES - DO NEXT
         CLI   REQFLG,ALLFLG           WAS REQUEST FOR ALL  *HMD 05/80*
         BE    REQNEXT                 YES - DO NEXT        *HMD 05/80*
         CLI   REQFLG,UCBFLG           WAS THIS A UCB REQUEST
         BE    REQNEXT1                YES - DO NEXT
         CLI   REQFLG,DEVFLG           WAS THIS A DEV REQUEST
         BER   R5                      YES - PROCESS NEXT VOLSER
         B     CHKPDE                  NONE OF ABOVE, GET NEXT
*                                      REQUEST              *HMD 05/80*
*                                                           *HMD 05/80*
DEFAULT  MVC   PARMNM,=C'ALL'          ALL VOLUMES IS DEFAULT
         MVI   REQFLG,ALLFLG           INDICATE ALL VOLUMES *HMD 05/80*
         BAL   R5,VOLKYWD              VOLUME KEYWORD       *HMD 05/80*
         CLI   REQFLG,ALLFLG           ARE WE PROCESSING ALL*HMD 05/80*
         BE    CHKPDE                  YES, CHECK PDE       *HMD 05/80*
*                                                                     *
         EJECT                                              *HMD 05/80*
***********************************************************************
*        FORMAT AND 'PUTLINE' SVC78 ERROR MESSAGES                    *
***********************************************************************
ERRORS   DS    0H                     CHECK SVC78 ERRORS
         C     R8,RC4                 IS RETURN CODE 4
         BE    MSG04                  YES, GOTO ROUTINE
         C     R8,RC8                 IS RETURN CODE 8
         BE    MSG08                  YES, GOTO ROUTINE
         C     R8,RC12                IS RETURN CODE 12
         BE    MSG0C                  YES, GOTO ROUTINE
* IF WE GOT HERE, WE HAVE AN UNKNOWN RETURN CODE            *HMD 05/80*
         CVD   R8,DEC                 CONVERT RETURN CODE
         UNPK  RUNPK(3),DEC+6(2)      UNPACK RETURN CODE    *HMD 05/80*
         OI    RUNPK+2,X'F0'          FIX SIGN              *HMD 05/80*
         MVC   SVC78R(SVC78ERL),SVC78ER   MOVE ERROR MSG    *HMD 05/80*
         MVC   SVC78N-3(2),RUNPK+1    MOVE RETURN CODE      *HMD 05/80*
         LA    R1,SVC78R              ADDR OF MESSAGE       *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 GO PUT OUT MESSAGE    *HMD 05/80*
*
MSG04    DS    0H                                           *HMD 05/80*
         MVC   MSG04M(RC04L),RC04A    MOVE IN MESSAGE       *HMD 05/80*
         MVC   MSG04M+13(3),UCBNAME   MOVE IN UCB NAME
         MVC   MSG04M+17(6),UCBVOLI   MOVE IN VOLSER
         LA    R1,MSG04M              GET MESSAGE ADDR
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 PUT OUT MESSAGE
*                                                           *HMD 05/80*
MSG08    DS    0H                                           *HMD 05/80*
         MVC   MSG08M(RC08L),RC08A    MOVE IN MESSAGE       *HMD 05/80*
         MVC   MSG08M+13(3),UCBNAME   MOVE IN DEVICE NAME   *HMD 05/80*
         LA    R1,MSG08M              GET MESSAGE ADDR      *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 PUT OUT MESSAGE       *HMD 05/80*
*                                                           *HMD 05/80*
MSG0C    DS    0H                                           *HMD 05/80*
         MVC   MSG0CM(RC0CL),RC0CA    MOVE IN MESSAGE       *HMD 05/80*
         MVC   MSG0CM+13(3),UCBNAME   MOVE IN DEVICE NAME   *HMD 05/80*
         LA    R1,MSG0CM              GET MESSAGE ADDR      *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 PUT OUT MESSAGE       *HMD 05/80*
*                                                           *HMD 05/80*
NODASD   DS    0H                     NOT A DASD DEVICE     *HMD 05/80*
         MVC   DMSGM(DMSGL),DMSGA     MOVE IN MESSAGE       *HMD 05/80*
         MVC   DMSGM+13(3),UCBNAME    MOVE IN DEVICE NAME   *HMD 05/80*
         LA    R1,DMSGM               GET MESSAGE ADDR      *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 PUT OUT MESSAGE       *HMD 05/80*
*                                                           *HMD 05/80*
NOSUP    DS    0H                     NON-SUPPORTED DEVICE  *HMD 05/80*
         LA    R1,UNKA                GET MESSAGE ADDR      *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 PUT OUT MESSAGE       *HMD 05/80*
*                                                           *HMD 05/80*
NOPUBL   DS    0H                                           *HMD 05/80*
         MVI   REQFLG,ESOCODE         CLEAR REQUEST FLAG    *HMD 05/80*
         LA    R1,PUBLICA             GET MESSAGE ADDR      *HMD 05/80*
         ST    R1,OLDADDR             SAVE IN OLD           *HMD 05/80*
         B     PUTLNE                 PUT OUT MESSAGE       *HMD 05/80*
*                                                           *HMD 05/80*
PUTLNE   DS    0H             COMMON ERR PUTLINE ROUTINE    *HMD 05/80*
         MVC   OLD,SEGNUM     ONE SEGMENT                   *HMD 05/80*
         XC    TSOECB,TSOECB  CLEAR ECB                     *HMD 05/80*
         L     R15,ADDRPUTL   GET PUTLINE ADDRESS           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 05/80*X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
         B     CHKFLGS        CHECK YOUR FLAGS              *HMD 05/80*
*
         EJECT
***********************************************************************
* CHECK FOR ADDITIONAL PARAMETERS, IF MORE; PROCESS, ELSE CLEANUP YOUR*
*           MESS AND EXIT (ALL DONE)                                  *
***********************************************************************
*
CHKFLG   CLI   REQFLG,ESOCODE          REQUEST NOT FOUND
         BE    NOSUP
*
CHKPDE   DS    0H                      CHECK PDE FOR MORE   *HMD 05/80*
         AIF   (&XA).X009                                   *HMD 01/86*
*                                                           *HMD 05/80*
         DELETE EP=DEVMASKT            DELETE THE TABLE     *HMD 05/80*
*                                                           *HMD 05/80*
         DELETE EP=DEVNAMET            AND THE OTHER ONE    *HMD 05/80*
*                                                           *HMD 05/80*
         AGO   .X019                   BRANCH AROUND XA CODE*HMD 01/86*
.X009    ANOP                                               *HMD 01/86*
***********************************************************************
**                                                                   **
**              FREE IEFEB4UV GOTTEN STORAGE                         **
**                                                                   **
***********************************************************************
FREEX    DS    0H                                           *HMD 01/86*
         TM    GOTFLG,GOTFREEM   DO WE NEED TO FREEMAIN?    *HMD 01/86*
         BNO   FREEY             NO, BYPASS THIS CODE       *HMD 01/86*
         L     R1,EULIST         ADDRESS TO FREE            *HMD 01/86*
         L     R0,USPLEN-ULIST(R1)                          *HMD 01/86*
*                                LOAD SUBPOOL,LENGTH        *HMD 01/86*
         FREEMAIN R,LV=(0),A=(1) FREE THE STORAGE           *HMD 01/86*
         SPACE 2                                            *HMD 01/86*
FREEY    DS    0H                                           *HMD 01/86*
.X019    ANOP                                               *HMD 01/86*
         L     R6,PARSAVE                                   *HMD 01/86*
         L     R7,8(,R6)         LOAD CHAIN FOR VOL LIST    *HMD 01/86*
         C     R7,ENDCHAIN       IS IT END OF VOL LIST?     *HMD 01/86*
         BE    FINISH            IF YES CLEANUP & EXIT      *HMD 01/86*
         L     R6,8(,R6)         LOAD PTR TO NEXT VOLUME    *HMD 01/86*
         L     R7,0(R6)          ADDR OF NEXT VOLUME        *HMD 01/86*
         MVC   PARMNM,BLANKS                                *HMD 01/86*
         MVI   REQFLG,ESOCODE    CLEAR REQFLG AREA          *HMD 01/86*
         XC    WORKUCB(16),WORKUCB
*                                CLEAR UCB WORK AREA        *HMD 01/86*
         B     CHKL                          AND PROCESS
         EJECT                                              *HMD 05/80*
***********************************************************************
*        EXECUTED INSTRUCTIONS                                        *
***********************************************************************
COMPARE  CLC   PARMNM(0),UCBVOLI   IS THIS THE VOL REQUESTED ?
*                                                                     *
MOVEVOL  MVC   PARMNM(0),0(R7)     GET PARAMETER FROM CMND  *HMD 01/86*
*                                                                     *
COMPUCB  CLC   PARMNM(0),UCBNAME   CHECK DEVICE NUMBER      *HMD 01/86*
*                                                           *HMD 01/86*
TEST4FLG TM    0(R15),*-*          TEST FOR FLAG
*                                                                     *
         EJECT
***********************************************************************
* CLEANUP AREAS GETMAINED BY PARSE, SET RETURN CODE, RESTORE REGISTERS*
* AND EXIT
***********************************************************************
*                                                                     *
FINISH   DS    0H
         ST    R15,RETCODE         SAVE RETURN CODE         *HMD 05/80*
*                                                           *HMD 05/80*
         IKJRLSA PPLRANS           FREE PARSE STORAGE       *HMD 05/80*
*                                                           *HMD 05/80*
         DELETE EP=IKJPUTL         GET RID OF PUTLINE       *HMD 05/80*
*                                                           *HMD 05/80*
         L     R15,RETCODE         RESTORE RETURN CODE      *HMD 05/80*
*                                                           *HMD 05/80*
         TSOLEAVE RETCODE=(15)     RETURN TO MVS            *HMD 05/80*
*
         EJECT
***********************************************************************
*             PROCESSES FLAGS KEYWORD                                 *
***********************************************************************
UCBFLAG  DS    0H
         STM   R2,R3,CHAINSAV       SAVE REGISTERS SO NEXT CODE
         STM   R14,R15,CHAINSAV+8   DOESNT DESTROY THEM
         STM   R4,R5,BUFRSAV
         LA    R4,FLGMSG            POINT TO MSG AREA
         LA    R5,FLGMSGN           POINT TO END OF AREA
         L     R15,ADDRPUTL         GET PUTLINE ADDR        *HMD 05/80*
         XC    TSOECB,TSOECB        CLEAR ECB               *HMD 05/80*
*                                                           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(HDRA,TERM,SINGLE,DATA),  *HMD 05/80*X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
*
         SPACE 1                                            *HMD 01/86*
         L     R2,UCBSAVE                                   *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
NXTUCB   LA    R3,TABLE
FLAGLOOP CLI   0(R3),X'FF'          END OF TABLE
         BE    DONEWFLG             YES - ALL DONE
         LR    R15,R2               GET COPY OF UCB ADDRESS
         SLR   R14,R14              ZERO R14 FOR INSERT
         IC    R14,0(R3)            GET OFFSET OF FLAG IN UCB
         AR    R15,R14              GET ADDRESS OF FLAG
         IC    R14,1(R3)            GET FLAG
         EX    R14,TEST4FLG         TEST FOR CORRECT FLAG
         BZ    NEXTFLAG             NOT ON - LOOP
         BAL   R14,MSGBUF
*                                                                     *
NEXTFLAG DS    0H
         LA    R3,10(R3)             BUMP FLAG POINTER
         B     FLAGLOOP
*                                                                     *
DONEWFLG DS    0H
         MVC   FLGMSGA,=H'69,0'      MOVE IN LENGTH         *HMD 05/80*
         L     R15,ADDRPUTL          GET PUTLINE ADDRESS    *HMD 05/80*
         XC    TSOECB,TSOECB         CLEAR ECB              *HMD 05/80*
*                                                           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(FLGMSGA,TERM,SINGLE,DATA),          X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
*                                                           *HMD 05/80*
         MVC   FLGMSG,BLANKS
         LM    R4,R5,BUFRSAV
         LM    R2,R3,CHAINSAV
         LM    R14,R15,CHAINSAV+8
         B     CHKFLGS
*                                                                     *
SETSW    MVI   FLGSW,FLGSET          INDICATE KEYWORD IS PRESENT
         B     LDPTR
*                                                                     *
MSGBUF   EQU   *
         MVC   5(8,R4),2(R3)         MOVE IN STATUS DESCRIPTOR
         LA    R4,10(R4)             BUMP AREA POINTER
         CR    R4,R5                 COMPARE FOR MORE ROOM
         BLR   R14                   LOW - RETURN
         STM   R0,R15,SAVE015        SAVE REGS ACROSS PUTL  *HMD 05/80*
         MVC   FLGMSGA,=H'69,0'      MOVE IN LENGTH         *HMD 05/80*
         L     R15,ADDRPUTL          GET PUTLINE ADDRESS    *HMD 05/80*
         XC    TSOECB,TSOECB         CLEAR ECB              *HMD 05/80*
*                                                           *HMD 05/80*
         PUTLINE PARM=PTPB,OUTPUT=(FLGMSGA,TERM,SINGLE,DATA),          X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 05/80*
*                                                           *HMD 05/80*
         MVC   FLGMSG,BLANKS         CLEAR MESSAGE AREA
         LM    R0,R15,SAVE015        RESTORE SAVED REGS     *HMD 05/80*
         LA    R4,FLGMSG             RESET MESSAGE PTR      *HMD 05/80*
         LA    R5,FLGMSGN            RESET END OF MESSAGE   *HMD 05/80*
         B     NEXTFLAG              GET NEXT FLAG GROUP    *HMD 05/80*
*                                                                     *
         EJECT                                              *HMD 05/80*
***********************************************************************
* ERROR AND INFORMATIONAL MESSAGES                                    *
***********************************************************************
*                                                                     *
GNRLERR  DC    AL2(GNRLERRL),AL2(0)
         DC    C'HMD0011I AN ERROR WAS ENCOUNTERED IN THE GENERAL FAIL X
               SERVICE ROUTINE (REGISTER 15 = 00)'          *HMD 05/80*
GNRLERRL EQU   *-GNRLERR
*
SVC78ER  DC    AL2(SVC78ERL),AL2(0)
         DC    C'HMD0020I AN UNKNOWN ERROR CODE WAS ENCOUNTERED IN THE X
               LSPACE SVC (REGISTER 15 = XX)'
SVC78ERL EQU   *-SVC78ER
*                                                           *HMD 05/80*
RC04A    DC    AL2(RC04L),AL2(0)                            *HMD 05/80*
RC04     DC    C'HMD0021I XXX XXXXXX - PERMANANT I/O ERROR'
RC04L    EQU   *-RC04A                                      *HMD 05/80*
*                                                           *HMD 05/80*
RC08A    DC    AL2(RC08L),AL2(0)                            *HMD 05/80*
RC08     DC    C'HMD0022I XXX - VOLUME NOT MOUNTED  '
RC08L    EQU   *-RC08A                                      *HMD 05/80*
*                                                           *HMD 05/80*
RC0CA    DC    AL2(RC0CL),AL2(0)                            *HMD 05/80*
RC0C     DC    C'HMD0023I XXX - UCB NOT READY OR INVALID UCB SPECIFIED'
RC0CL    EQU   *-RC0CA                                      *HMD 05/80*
*                                                           *HMD 05/80*
DMSGA    DC    AL2(DMSGL),AL2(0)                            *HMD 05/80*
DMSG     DC    C'HMD0025I XXX - NOT A DIRECT ACCESS DEVICE'
DMSGL    EQU   *-DMSGA                                      *HMD 05/80*
*                                                           *HMD 05/80*
PUBLICA  DC    AL2(PUBLICL),AL2(0)                          *HMD 05/80*
PUBLC    DC    C'HMD0026I NO PUBLIC DEVICES MOUNTED'
PUBLICL  EQU   *-PUBLICA                                    *HMD 05/80*
*                                                           *HMD 05/80*
UNKA     DC    AL2(UNKNWNL),AL2(0)                          *HMD 05/80*
UNKNWN   DC    C'HMD0027I UNKNOWN OR INVALID DEVICE SPECIFIED'
UNKNWNL  EQU   *-UNKA                                       *HMD 05/80*
*                                                           *HMD 05/80*
HDRA     DC    AL2(HDRL),AL2(0)                             *HMD 05/80*
HDR      DC    C'     STATUS FLAGS ARE:'
HDRL     EQU   *-HDRA                                       *HMD 05/80*
*                                                           *HMD 05/80*
SPCMSGA  DC    AL2(SPCMSGL),AL2(0)                          *HMD 05/80*
SPCMSG   DC    C'            CYL TRK  XTNT CYL-C TRK-C '
SPCMSGL  EQU   *-SPCMSGA                                    *HMD 05/80*
*                                                           *HMD 05/80*
OFFLID   DC    AL2(OFFLL),AL2(0)      LENGTH OF MESSAGE     *HMD 05/80*
         DC    C'HMD0016I XXX  OFFLINE'                     *HMD 05/80*
OFFLL    EQU   *-OFFLID
*                                                           *HMD 05/80*
MCNTA    DC    AL2(MCNTL),AL2(0)      FOR PUTLINE MSG       *HMD 05/80*
         DC    C'HMD0017I TOO MANY BITS IN DEVMASKT COUNT - SEE YOUR SYX
               STEMS PROGRAMMER'                            *HMD 05/80*
MCNTL    EQU   *-MCNTA                                      *HMD 05/80*
*                                                           *HMD 05/80*
NOSUPP   DC    AL2(NONSUPL),AL2(0)                          *HMD 05/80*
         DC    C'HMD0015I NON-SUPPORTED DEVICE NAME SPECIFIED'
NONSUPL  EQU   *-NOSUPP                                     *HMD 05/80*
*                                                           *HMD 05/80*
         EJECT                                              *HMD 05/80*
***********************************************************************
*        UCB FLAGS TABLE                                              *
***********************************************************************
TABLE    DS    0H
         DC    X'0104',CL8'NONALLOC'     JES2,ETC
         DC    X'0340',CL8'CHANGING'     CHANGING STATUS
         DC    X'0320',CL8'RESERVED'     MOUNT STATUS - RESERVED
         DC    X'0310',CL8'UNLOAD  '     UNLOAD PENDING
         DC    X'0308',CL8'ALLOCATD'     ALLOCATED
         DC    X'0304',CL8'RESIDENT'     PERM. RESIDENT
         DC    X'0302',CL8'SYSRES  '     SYSRES, MSTRCONS, CONS
         DC    X'0301',CL8'SECONS  '     LABELS VERIFD/SECONS
         DC    X'0680',CL8'BUSY    '     DEVICE BUSY
         DC    X'0640',CL8'NOT-RDY '     NOT READY
         DC    X'0620',CL8'POSTED  '     POST FLAG
         DC    X'0610',CL8'SENSE OP'     PENDING SENSE OP
         DC    X'0608',CL8'CU BUSY '     CONTROL UNIT BUSY
         DC    X'0604',CL8'S/A PROC'     STANDALONE PROCESS
         DC    X'0602',CL8'ACTIVE  '     CHANNEL PGN ACTIVE
         DC    X'0601',CL8'QUIESCED'     QUIESCED
         DC    X'0740',CL8'SNS ACTV'     SENSE ACTIVE
         DC    X'0720',CL8'SNS POST'     SENSE POST
         DC    X'0710',CL8'DEV-RESV'     DEVICE RESERVED
         DC    X'0708',CL8'CRH CONN'     CRH CONNECTION
         DC    X'0C10',CL8'REWIND  '     REWIND IN PROGRESS
         DC    X'1480',CL8'ATT PEND'     ATTENTION PENDING
         DC    X'1420',CL8'U DEV ND'     UNSOLICITED DEVICE END
         DC    X'1410',CL8'INTRCEPT'     INTERCEPT CONDITION
         DC    X'1408',CL8'INT MSG '     INTERVENTION MESSAGE ISSUED
         DC    X'1404',CL8'INT REQD'     INTERVENTION MSG REQUIRED
         DC    X'1402',CL8'- MTP - '     MOUNT PENDING/CE/DE
         DC    X'1401',CL8'DDR PEND'     DDR SWITCH PENDING
         DC    X'2210',CL8'PRIVATE '     USE STATUS - PRIVATE
         DC    X'2208',CL8'PUBLIC  '     USE STATUS - PUBLIC
         DC    X'2204',CL8'STORAGE '     USE STATUS - STORAGE
         DC    X'FFFF',CL8'        '     END OF TABLE
         TITLE 'LTORG'
         LTORG ,
         TITLE 'CONSTANTS'
BLANKS   DC    CL80' '            SPACES FOR CLEARING STUFF *HMD 05/80*
CLEAR    DC    F'0'               CLEAR 1 FULL WORD         *HMD 05/80*
ENDCHAIN DC    X'FF000000'
EOUCB    DC    H'-1'              END OF UCB TABLE          *HMD 05/80*
FILLER   DC    H'0'               FILLER FOR ALIGNMENT      *HMD 05/80*
HALF12   DC    H'12'
HALF0    DC    H'0'
RC4      DC    F'4'               RETURN CODE OF 4          *HMD 05/80*
RC8      DC    F'8'               RETURN CODE OF 8          *HMD 05/80*
RC12     DC    F'12'              RETURN CODE OF 12         *HMD 05/80*
RC20     DC    F'20'              RETURN CODE OF 20         *HMD 05/80*
SEGNUM   DC    F'1'               NUMBER OF SEGMENTS FOR OLD*HMD 05/80*
         TITLE 'PARSE PARAMETER LIST'                       *HMD 05/80*
***********************************************************************
*                     PARSE PARAMETER LIST                            *
***********************************************************************
PARMTAB  IKJPARM DSECT=IKJPARMD
VOLUMES  IKJIDENT 'DEVICE LIST',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,    X
               DEFAULT='ALL',CHAR
KWORD    IKJKEYWD
         IKJNAME   'FLAGS'
         IKJENDP
         TITLE 'PATCH AREA'
         PRINT ON,DATA                                      *HMD 05/80*
         ENTRY PATCH                                        *HMD 05/80*
PATCH    DC    C'LSPACE PATCH AREA'                         *HMD 05/80*
         DC    50X'00'                  GENERATE PATCH AREA *HMD 05/80*
         PRINT ON,NODATA                                    *HMD 05/80*
         TITLE  'DSECT FOR LSPACE PROGRAM'                            *
***********************************************************************
* DSECT FOR GETMAINED WORKAREA                                        *
***********************************************************************
*                                                                     *
TSODSECT DSECT                                              *HMD 05/80*
********************** LIST MACRO INSTRUCTIONS ************************
*
PTPB     PUTLINE MF=L
*
***********************************************************************
ADDRPUTL DS    F                   PUTLINE ADDRESS          *HMD 05/80*
BITSAVE  DS    F
BUFRSAV  DS    D                   SAVE AREA FOR TWO REGS
CHAINSAV DS    2D                  SAVE AREA FOR FOUR REGS
CNTSAVE  DS    F
CXALIGN  DS    0D                  ALIGNMENT AREA           *HMD 05/80*
CONV     DS    2F
DEC      DS    2F
DMSGM    DS    (DMSGL)C            DEVICE MESSAGE           *HMD 05/80*
*                                                           *HMD 05/80*
FLGMSGA  DS    A                   FLAG MESSAGE FOR PUTL    *HMD 05/80*
FLGMSG   DS    CL65
FLGMSGN  DS    0C                  END OF FLAG MSG
*                                                           *HMD 05/80*
FLGSW    DC    X'00'
FLGSET   EQU   X'FF'                                        *HMD 05/80*
GFPARMP  DS    F
GFERR    DS    CL(GNRLERRL)        GENERAL FAIL ERROR       *HMD 05/80*
GFERRND  DS    0X                  FOR INSERTING RC         *HMD 05/80*
LCFILL   DS    CL1                 AREA SEPERATOR
MSG04M   DS    (RC04L)C            FOR RC=04                *HMD 05/80*
MSG08M   DS    (RC08L)C            FOR RC=08                *HMD 05/80*
MSG0CM   DS    (RC0CL)C            FOR RC=0C (12)           *HMD 05/80*
OFFLMSG  DS    (OFFLL)C            FOR 'OFFLINE' MESSAGE    *HMD 05/80*
OLD      DS    F                   OUTPUT LINE DESCRIPTOR   *HMD 05/80*
OLDADDR  DS    A                   MESSAGE ADDRESS          *HMD 05/80*
PARMNM   DS    CL8                 PARAMETER NAME
PARSAVE  DS    F                   SAVE ACROSS PARSE
PFILL    DS    H                   ALIGNMENT FILLER         *HMD 05/80*
*   REQUEST FLAGS - SHOWS TYPE OF LSPACE REQUEST            *HMD 05/80*
REQFLG   DS    X
ESOCODE  EQU   X'00'
ALLFLG   EQU   X'01'                                        *HMD 05/80*
VOLFLG   EQU   X'04'
UCBFLG   EQU   X'08'
PUBFLG   EQU   X'11'
PRIVFLG  EQU   X'22'
STORFLG  EQU   X'33'
DEVFLG   EQU   X'88'
MYFLG    EQU   X'FF'
GOTFLG   DS    X                                            *HMD 06/82*
GOTPUBL  EQU   X'80'    1... ....  WE'VE GOTTEN ONE PUBLIC  *HMD 01/86*
         AIF   (NOT &XA).X010                               *HMD 01/86*
GOTFREEM EQU   X'08'    .... 1...  EB4UV FREEMAIN NECESSARY *HMD 01/86*
.X010    ANOP                                               *HMD 01/86*
*                                                           *HMD 05/80*
RETCODE  DS    F
RUNPK    DS    CL3                 UNPACK WORK AREA         *HMD 01/86*
RUCBNAME DS    CL3                 EBCDIC UCB NAME          *HMD 01/86*
SAVELGTH DS    F
SAVEPDE  DS    F
SAVERETN DS    F                   REG 5 SAVE AREA          *HMD 01/86*
SAVE015  DS    16F                 REG 0-15 SAVE AREA       *HMD 05/80*
SPCMSGM  DS    (SPCMSGL)C          SPACE MESSAGE AREA       *HMD 05/80*
SVC78R   DS    (SVC78ERL)C         SVC 78 ERROR MESSAGE     *HMD 05/80*
SVC78N   DS    0X                  END OF MESSAGE           *HMD 05/80*
         SPACE 2                                            *HMD 12/85*
*********************************************************** *HMD 12/85*
**                                                       ** *HMD 12/85*
**  UCB LOOKUP ROUTINE (IOSVSUCB) PARAMTER LIST          ** *HMD 12/85*
**                                                       ** *HMD 12/85*
*********************************************************** *HMD 12/85*
         SPACE 2                                            *HMD 12/85*
IOSCALL  CALL  ,(0,0,0),MF=L     LIST FORM CALL MACRO       *HMD 12/85*
         SPACE 1                                            *HMD 12/85*
IOSWORK  DS    XL100             100 BYTE WORK AREA         *HMD 12/85*
IOSTYPE  DS    X                 DEVICE TYPE FLAG           *HMD 12/85*
IOSADDR  DS    F                 ADDRESS OF UNIT CNTL BLOCK *HMD 12/85*
         SPACE 2                                            *HMD 12/85*
         AIF   (NOT &XA).X015                               *HMD 01/86*
*********************************************************** *HMD 12/85*
**                                                       ** *HMD 12/85*
**  IEFEB4UV UNIT VERIFICATION ROUTINE PARAMETER LIST    ** *HMD 12/85*
**                                                       ** *HMD 12/85*
*********************************************************** *HMD 12/85*
         SPACE 1                                            *HMD 01/86*
EB4LINK  LINK  EP=0,SF=L         LIST FORM OF LINK MACRO    *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
EB4PARMS DS    0A                PARAMETER ANCHOR POINT     *HMD 01/86*
EB4PARM1 DS    A                 POINTER TO FLAG AREA
EB4PARM2 DS    A                 POINTER TO UNIT TABLE      *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
EFLAGS   DS    XL2                                          *HMD 01/86*
EUTAB    DS    0A                ALIGN                      *HMD 01/86*
EUNAME   DS    CL8               UNIT NAME                  *HMD 01/86*
EULIST   DS    A                 POINTER TO UCB LIST        *HMD 01/86*
EUZERO   DS    A                 ZERO, NO ATTRIBUTES        *HMD 01/86*
         SPACE 1                                            *HMD 01/86*
.X015    ANOP                                               *HMD 01/86*
UCBADDR  DS    F                                            *HMD 01/86*
UCBSAVE  DS    F                 SAVE AREA FOR UCB          *HMD 01/86*
VOLSER   DS    CL6               VOLSER SAVE AREA
VOLSPC   DS    CL30              SVC78 WORK AREA
VOLSPC1  DS    CL42              LSPACE MESSAGE W/A
WORKUCB  DS    2D                WORK AREA
         TITLE 'GNRLFAIL PARARMETER LIST'                   *HMD 05/80*
*
*
         IKJEFFGF   ,              GNRLFAIL PARM LIST       *HMD 05/80*
*                                                           *HMD 05/80*
*                                                           *HMD 05/80*
LDYNAMIC EQU   *-TSOUSER                                    *HMD 05/80*
         TITLE 'CVT DSECT'
         CVT   DSECT=YES,LIST=YES
         TITLE 'UCB DSECT'                                  *HMD 05/80*
UCB      DSECT                                              *HMD 05/80*
         IEFUCBOB LIST=YES                                  *HMD 05/80*
         EJECT                                              *HMD 01/86*
         AIF    (NOT &XA).END                               *HMD 01/86*
ULIST    DSECT                     UCB RETURN AREA MAP      *HMD 01/86*
USPLEN   DS     F                  SUBPOOL 230 AND LENGTH   *HMD 01/86*
USPNUM   DS     F                  NUMBER OF UCB ENTRIES    *HMD 01/86*
UCBPTRS  DS     0F                 START OF UCB ENTRIES     *HMD 01/86*
.END     ANOP                                               *HMD 01/86*
         END    LSPACE
