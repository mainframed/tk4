PDF      TITLE 'INITIALIZATION UTILITY FOR TSO/E PROGRAM PRODUCT'
***********************************************************************
*                                                                     *
* MODULE NAME = PDFINIT                                               *
*                                                                     *
* STATUS = TSO EXTENSIONS VERSION 1 RELEASE 2.1                       *
*          (NOTE - THIS COMMAND WILL NOT OPERATE                      *
*                  WITHOUT THE TSO/EXTENTIONS                         *
*                  PROGRAM PRODUCT)                                   *
*                                                                     *
* LEVEL  = MVS/XA 2.2.0                                        WFJJAN89
*          (MINIMUM O/S LEVEL IS MVS/SP 1.3.3)                 HD JUN87
*          TSO/E  VERSION 1 RELEASE 4.0                        WFJJAN89
*          (MINIMUM TSO/E LEVEL IS TSO/E VER 1 REL 2.0)        HD JUN87
*                                                              HD JUN87
* AUTHOR = HOWARD M. DEAN                                             *
*          SYNTEX U.S.A.                                              *
*          TECHNICAL SUPPORT                                          *
*          M/S A5-CIS-5                                               *
*          3401 HILLVIEW AVENUE                                       *
*          PALO ALTO, CA 94303                                        *
*          (415) 852-1792                                             *
*                                                                     *
*          HOWARD M. DEAN                                      HD NOV86
*          SR. SYSTEMS SPECIALIST                              HD NOV86
*          AMERICAN PRESIDENT COMPANIES                        HD NOV86
*          SAN MATEO DATACENTER                                HD NOV86
*          #3 WATERS PARK DRIVE                                HD NOV86
*          SUITE 115                                           HD NOV86
*          SAN MATEO, CA 94403                                 HD NOV86
*          (415) 570-2331                                      HD NOV86
*                                                              HD NOV86
* FUNCTION = THIS MODULE WILL OPTIONALLY ALLOCATE THE 'ISPPROF'       *
*            PROFILE DATASET FOR USE WITH ISPF VERSION 2.2 OR LATER.  *
*            ALSO, A COMMAND NAMED IN THE 'CMD' KEYWORD PARAMETER, OR *
*            A DATASET NAMED '&PREFIX..PROFILE.CLIST' WILL BE PLACED  *
*            ON THE INPUT STACK FOR EXECUTION AS SOON AS THIS COMMAND *
*            PROCESSOR TERMINATES. THE EXECUTION FLOW IS AS FOLLOWS:  *
*                                                                     *
*            1) GET AND SAVE TIME OF DAY                              *
*                                                                     *
*            2) CHECK FOR VALID ENVIRONMENT. 'PDFINIT' MAY NOT BE     *
*               EXECUTED FROM WITHIN A COMMAND PROCEDURE. THIS IS TO  *
*               PREVENT RECURSION IN CASE SOMEONE PUTS THIS COMMAND   *
*               IN THEIR PROFILE 'CLIST'.                             *
*                                                                     *
*            3) GET AND SAVE SMF SYSTEM ID                     WFJJAN89
*                                                                     *
*            4) BUILD A TABLE OF ELIGIBLE VOLUMES UPON WHICH TO       *
*               ALLOCATE THE PROFILE DATA SET IF NECESSARY.           *
*                                                                     *
*            5) BUILD THE NAMES OF THE PROFILE DATASET AND     HD JUN86
*               PROFILE COMMAND PROCEDURE. THE USERID FROM THE HD JUN86
*               PSCB IS USED FOR THE ISPF PROFILE DATASET AND  HD JUN86
*               THE PREFIX FROM THE UPT IS USED FOR THE        HD JUN86
*               PROFILE CLIST.  HOWEVER, IF A COMMAND IS       HD JUN86
*               SPECIFIED, THE PROFILE CLIST IS NOT ALLOCATED  HD JUN86
*               AND EXECUTED.                                  HD JUN86
*                                                                     *
*            6) CALL 'IKJPARS' TO CHECK OPERANDS ON COMMAND    HD JUN86
*               LINE                                           HD JUN86
*                                                              HD JUN86
*            7) IF 'NOISPF' SPECIFIED, SKIP STEPS 8, 9, & 10   HD JUN86
*
*            8) DEALLOCATE 'ISPPROF' DDNAME  (IF PREVIOUSLY USED)     *
*                                                                     *
*            9) ATTEMPT TO ALLOCATE FILE 'ISPPROF' EXCLUSIVELY        *
*               AS DATASET '&SYSUID..ISPF.PROFILE'             HD MAY86
*                                                                     *
*           10) IF DATASET NOT FOUND, ALLOCATE IT NEW AS FOLLOWS:     *
*                                                                     *
*               ALLOC FI(ISPPROF) DA('&SYSUID..ISPF.PROFILE')- HD MAY86
*               BLOCK(9040) DIR(10) UNIT(SYSALLDA) VOL(&VOL) - WFJJAN89
*               SPACE(60) BLKSIZE(9040) LRECL(80) RECFM(F B)   WFJJAN89
*                                                                     *
*               VOLUME &VOL IS DETERMINED BY THE FOLLOWING     HD NOV86
*               ALGORITHM:                                     HD NOV86
*                                                              HD NOV86
*                 1) EXTRACT 'MINUTE' PORTION OF TOD           HD NOV86
*                 2) SEARCH UNITS FOR VOLUMES WITH "TS" IN     HD JUN87
*                    POSITIONS 4 AND 5 OF THE NAME.            HD JUN87
*                 3) COMPARE "TS" VOLUMES AGAINST SYSTEM ID    WFJJAN89
*                    AND, IF VALID, BUILD A TABLE WITH TEN     WFJJAN89
*                    VOLUME SERIALS. IF THERE ARE LESS THAN    WFJJAN89
*                    TEN THE FIRST VOLSERS ARE "WRAPPED        WFJJAN89
*                    AROUND" TO COMPLETE THE TABLE. SELECTION  WFJJAN89
*                    IS AS FOLLOWS:                            WFJJAN89
*                                                              WFJJAN89
*                    IF 'MINUTE' VALUE IS:                     WFJJAN89
*                                                              WFJJAN89
*                    BETWEEN 00-05  - SELECT FIRST   VOLUME    WFJJAN89
*                    BETWEEN 06-11  - SELECT SECOND  VOLUME    WFJJAN89
*                    BETWEEN 12-17  - SELECT THIRD   VOLUME    WFJJAN89
*                    BETWEEN 18-23  - SELECT FOURTH  VOLUME    WFJJAN89
*                    BETWEEN 24-29  - SELECT FIFTH   VOLUME    WFJJAN89
*                    BETWEEN 30-35  - SELECT SIXTH   VOLUME    WFJJAN89
*                    BETWEEN 36-41  - SELECT SEVENTH VOLUME    WFJJAN89
*                    BETWEEN 42-47  - SELECT EIGHTH  VOLUME    WFJJAN89
*                    BETWEEN 48-53  - SELECT NINTH   VOLUME    WFJJAN89
*                    BETWEEN 54-59  - SELECT TENTH   VOLUME    WFJJAN89
*                                                              WFJJAN89
*                 4) DISPLAY MESSAGE SHOWING VOLUME SERIAL     HD SEP87
*                    SELECTED.                                 HD SEP87
*                                                              HD JUN87
*           11) IF THE 'CMD' KEYWORD WAS SUPPLIED:             HD JUN86
*                                                              HD JUN86
*               * ALLOCATE STORAGE FOR AN LSD                  HD JUN86
*               * MOVE THE COMMAND SUPPLIED INTO THE LSD       HD JUN86
*               * INVOKE IKJSTCK TO PLACE THE COMMAND ON THE   HD JUN86
*                 INPUT STACK AND AN 'IN-STORAGE' SOURCE       HD JUN86
*                 DATASET.                                     HD JUN86
*               * SKIP STEPS 12, 13, & 14 AND RETURN           HD JUN86
*                                                              HD JUN86
*           12) ATTEMPT TO ALLOCATE '&SYSPREF..PROFILE.CLIST'         *
*                                                                     *
*           13) IF DATASET NOT FOUND, THEN JUST RETURN                *
*                                                                     *
*           14) IF DATASET WAS FOUND, THEN PLACE IT ON THE STACK      *
*               FOR EXECUTION AFTER THIS COMMAND PROCESSOR FINISHES.  *
*                                                                     *
* USAGE  =  PLACE THE FOLLOWING PARAMETER FIELD ON                    *
*           THE 'EXEC' CARD IN TSO LOGON PROCEDURES:                  *
*                                                              HD JUN86
*                //TSO    EXEC PGM=IKJEFT01,                   HD JUN86
*                //     PARM='PDFINIT NOISPF CMD(''TIME'')'    HD JUN86
*                                                              HD JUN86
*           IF NO PARAMETERS ARE SPECIFIED, THEN               HD JUN86
*           AN ISPF PROFILE DATASET IS ALLOCATED AND           HD JUN86
*           AN '&SYSPREF..PROFILE.CLIST' IS PLACED ON          HD JUN86
*           THE INPUT STACK.                                   HD JUN86
*                                                              HD JUN86
* ENTRY POINTS = PDFINIT                                              *
*                                                                     *
* EXIT NORMAL =  EXIT TO THE TERMINAL MONITOR PROGRAM WITH AN R/C IN  *
*                REGISTER 15 AS FOLLOWS:                              *
*                                                                     *
*                R15 = 0       ALLOCATIONS COMPLETE - PROCEED         *
*                R15 = 8       COULD NOT FIND PROFILE CLIST           *
*                R15 = 12      AN ERROR OCCURED PROCESSING THIS CMD   *
*                                                                     *
* EXIT ERROR = DISPLAY MULTILEVEL ERROR MESSAGE AND                   *
*              RETURN TO CALLER AS IN EXIT NORMAL ABOVE.              *
*                                                                     *
* RESTRICTIONS =                                                      *
*                                                                     *
*      WARNING! THIS COMMAND PROCEDURE CANNOT BE EXECUTED FROM WITHIN *
*               A CLIST OR CMDPROC DATASET. THIS IS TO PREVENT A      *
*               RECURSIVE LOOP IF PDFINIT IS ONE COMMAND IN A USER'S  *
*               PROFILE CLIST.                                        *
*                                                                     *
*               A SPECIFIC CHECK IS MADE AND AN INVALID ENVIRONMENT   *
*               WILL CAUSE AN ERROR MESSAGE TO BE GENERATED AND       *
*               PROCESSING WILL TERMINATE.                            *
*                                                                     *
* REGISTER-CONVENTIONS =                                              *
*                                                                     *
*  REGISTER     0: WORK AND SYSTEM PARAMETERS                         *
*  REGISTER     1: WORK AND SYSTEM PARAMETERS                         *
*  REGISTERS 2-11: WORK REGISTERS                                     *
*  REGISTER    12: PROGRAM BASE REGISTER                              *
*  REGISTER    13: POINTER TO DYNAMIC AREA AND SAVE AREA              *
*  REGISTER    14: LINK REGISTER FOR PROGRAM SUBROUTINES              *
*  REGISTER    15: WORK REGISTER AND SUBROUTINE CALL REGISTER         *
*                                                                     *
* ATTRIBUTES -  PDFINIT IS REENTERABLE, REFRESHABLE AND               *
*               RUNS IN PROBLEM STATE, PROBLEM KEY, UNAUTHORIZED.     *
*                                                                     *
* MODIFICATIONS =                                                     *
*                                                                     *
* DATE     WHO COMMENTS                                               *
*                                                                     *
* 05/05/89 HMD (APS)                                           HD MAY89
*              1) ADDED SPECIAL CHARACTER '^' TO SYSTEM        HD MAY89
*                 ID TABLE TO INDICATE PROFILE DATASET         HD MAY89
*                 SHOULD BE ALLOCATED ON A 'WORK' VOLUME.      HD MAY89
*                                                              HD MAY89
*              2) CHANGE 'VOLT' SUBROUTINE TO CHECK FOR        HD MAY89
*                 SPECIAL CHARACTER ABOVE. IF SO, USE          HD MAY89
*                 'WORK' AS THE VOLUME PREFIX WHEN BUILDING    HD MAY89
*                 THE VOLUME TABLE.                            HD MAY89
*                                                              HD MAY89
* 01/27/89 WFJ (APC)                                                  *
*              1) REWORKED VOLSER TO SYSID CHECK TO USE A TABLE       *
*                 (LINES FLAGGED WITH 'WFJFEB89'                      *
*                                                                     *
* 01/10/89 WFJ (APC)                                                  *
*              1) EXPANDED TABLE TO ALLOW FOR TEN VOLSERS             *
*              2) ADDED SUBROUTINE TO ACQUIRE SMF SYSTEM ID           *
*              3) ADDED CHECKS OF VOLSER AGAINST SYSID DURING VOLSER  *
*                 TABLE BUILD                                         *
*                                                                     *
* 07/??/88 HMD (APC)                                                  *
*              1) INCREASED ALLOCATION OF PROFILE DATA SET:           *
*                 SPACE(60) DIR(10)                                   *
*                                                                     *
* 09/03/87 HMD (APC)                                                  *
*              1) ADD EXTRA VOLSER (NOW UP TO 5) FOR ALLOCATION       *
*                 SELECTION.                                          *
*              2) DISPLAY MESSAGE SHOWING WHICH VOLUME ON WHICH WE    *
*                 ALLOCATED THE PROFILE DATASET.                      *
*                                                                     *
* 06/24/87 HMD (APC)                                                  *
*              1) BUILD VOLUME TABLE FROM VOLUMES WITH 'TS' IN        *
*                 POSITIONS FOUR AND FIVE OF ONLINE VOLUMES.          *
*              2) PROPOGATE UP TO FOUR VOLUMES IN TABLE               *
*              3) USE TOD ALGORIGTHM TO SELECT CORRECT VOLUMES        *
*                                                                     *
* 11/20/86 HMD (APC) ADDED LOOKUP ROUTINE TO SELECT PACK FOR NEW ISPF *
*              PROFILE DATA SET.                                      *
*                                                                     *
* 06/26/86 HMD (SYNTEX)                                               *
*              1)  ADDED PARSE ROUTINE                                *
*              2)  ADDED "NOISPF" PARM TO BYPASS ISPF ALLOCATION      *
*              3)  ADDED "CMD" PARM TO STACK QUOTED COMMAND STRING    *
*                  INSTEAD OF THE PROFILE CLIST                       *
*              4)  WROTE HELP MEMBER                                  *
*              5)  MISC. CLEANUP                                      *
*                                                                     *
* 04/04/86 HMD (SYNTEX) INSTALLED                                     *
*                                                                     *
***********************************************************************
         EJECT                                              *HMD 04/86*
PDFINIT  TSOENTER REGS=YES,CPR=YES,PL=(CPPL,IO,SCAN,PARSE), *HMD 04/86*X
               SP=1,WORK=AREALEN                            *HMD 04/86*
         LA    R10,2048(R12)     ESTABLISH                     WFJFEB89
         LA    R10,2048(R10)             SECOND                WFJFEB89
         USING PDFINIT+4096,R10                 BASE           WFJFEB89
         SPACE 2                                            *HMD 04/86*
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**       HOUSEKEEPING - INITIALIZE STORAGE                  *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R0,TSOUSER          R0 -> USER SECTION       *HMD 03/85*
         LA    R1,AREALEN          R1 = LENGTH OF WORKAREA  *HMD 03/85*
         SLR   R15,R15             R15 = 0                  *HMD 03/85*
         MVCL  R0,R14              CLEAR WORKAREA  TO ZEROS *HMD 03/85*
         SPACE 1                                            *HMD 04/86*
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**       MAIN PROCESSING SECTION - CALL SUBROUTINES         *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         TIME  DEC                 GET TIME OF DAY             HD NOV86
         ST    R0,TIMESAVE         SAVE IT                     HD NOV86
         SPACE 1                                            *HMD 04/86*
         BAL   RLINK,CMDPROC       CHECK FOR VALID ENVIRON  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         BAL   RLINK,IDS     GET HOME SYS. & SMF IDS FROM ACF2 WFJFEB89
         SPACE 1                                               WFJFEB89
         CLC   SYSID,HOMEID        COMPARE SYSID AND HOME SYS  WFJFEB89
         BE    BUILDVOL            BUILD VOLUME TABLE          WFJFEB89
         CLI   SYSID,C'B'          CHECK FOR APLB              WFJFEB89
         BE    NOVOLTAB            SKIP BUILDING VOLUME TABLE  WFJFEB89
BUILDVOL BAL   RLINK,VOLT          BUILD VOLUME TABLE          HD JUN87
         SPACE 1                                               HD JUN87
NOVOLTAB BAL   RLINK,NAMES         BUILD DATASET NAMES      *HMD 04/86*
         SPACE 1                                               HD JUN86
         BAL   RLINK,PARSE         PARSE OPERANDS              HD JUN86
         SPACE 1                                               HD JUN86
         TM    PARSFLAG,PARSFAIL   DID PARSE FAIL?             HD JUN86
         LA    R2,MESS10           LOAD ERROR MESSAGE          HD JUN86
         LA    R3,MESS02           LOAD SECOND LEVEL MESSAGE   HD JUN86
         BO    ERRORMSG            SEND MESSAGE AND RETURN     HD JUN86
         SPACE 1                                               HD JUN86
         LUSE  IKJPARMD,R9         ADDRESS THE PARSE DSECT     HD JUN86
         L     R9,PPLRANS          LOAD ANSWER PLACE           HD JUN86
         CLI   KEYISPF+1,2         WAS NOISPF ENTERED?         HD JUN86
         BNE   *+8                 BRANCH AROUND 'OI'          HD JUN86
         OI    PARSFLAG,PNOISPF    INDICATE NO ISPF ALLOCATE   HD JUN86
         SPACE 1                                               HD JUN86
         LDROP R9                  NO NEED FOR BASE NOW        HD JUN86
         BAL   RLINK,ALLODDN       FIX UP 'ISPPROF' DNAME   *HMD 04/86*
         CLI   DYNFLAG,DYNFAIL     DID DYNALLOC FAIL?       *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R2,MESS01           GET FIRST LEVEL MESSAGE  *HMD 04/86*
         LA    R3,MESS02           GET SECOND LEVEL MESSAGE *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         BE    ERRORMSG            YES, PRINT MSG AND END   *HMD 04/86*
         BAL   RLINK,ALLODSN       GO ALLOCATE ISPPROF DSN  *HMD 04/86*
         CLI   DYNFLAG,DYNFAIL     CHECK FOR DYNALLOC FAIL  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R2,MESS01           GET FIRST LEVEL MESSAGE  *HMD 04/86*
         LA    R3,MESS02           GET SECOND LEVEL MESSAGE *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         BE    ERRORMSG            YES, PRINT MSG AND END   *HMD 04/86*
         SPACE 1                                               HD JUN86
         LUSE  IKJPARMD,R9         ADDRESS THE PDE             HD JUN86
         L     R9,PPLRANS          LOAD ANSWER PLACE           HD JUN86
         CLI   KEYCMD+1,0          'COMMAND' KEYWORK PRESENT?  HD JUN86
         BE    CLII                NO, TRY THE PROFILE CLIST   HD JUN86
         TM    CMD+6,X'80'         IS COMMAND PRESENT?         HD JUN86
         BZ    CLII                NO, TRY THE PROFILE CLIST   HD JUN86
         OI    PARSFLAG,PCMD       INDICATE COMMAND PRESENT    HD JUN86
         SPACE 1                                               HD JUN86
         BAL   RLINK,DOCMD         GO STACK THE COMMAND        HD JUN86
         SPACE 1                                               HD JUN86
         SLR   R2,R2               CLEAR RETURN CODE           HD JUN86
         B     RETURN                                          HD JUN86
         LDROP R9                                              HD JUN86
         SPACE 1                                               HD JUN86
CLII     BAL   RLINK,ALLOCLI       GO CHECK FOR CLIST       *HMD 04/86*
         CLI   DYNFLAG,DYNCNF      CLIST NOT FOUND?         *HMD 04/86*
         BNE   CHKFAIL             YES, JUST GO BACK        *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R2,8                RETURN CODE 8            *HMD 04/86*
         B     RETURN              RETURN TO CALLER         *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
CHKFAIL  CLI   DYNFLAG,DYNFAIL     FAILURE?                 *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R2,MESS05           GET FIRST LEVEL MESSAGE  *HMD 04/86*
         LA    R3,MESS06           GET SECOND LEVEL MSG     *HMD 04/86*
         BE    ERRORMSG            PRINT MESSAGE AND RETURN *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         BAL   RLINK,GOSTACK       GO SET UP STACK          *HMD 04/86*
         SLR   R2,R2               CLEAR RETURN CODE        *HMD 04/86*
         B     RETURN              RETURN TO CALLER         *HMD 04/86*
         EJECT
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**       RETURN TO THE TERMINAL MONITOR PROGRAM             *HMD 04/86*
**               (FREE STORAGE AND GO)                      *  HD JUN86
**                                                          *  HD JUN86
*************************************************************  HD JUN86
RETURN   IKJRLSA  PPLRANS          CLEAR PARSE STORAGE         HD JUN86
         SPACE 2                                               HD JUN86
         TSOLEAVE RETCODE=(2)      RETURN TO CALLER         *HMD 04/86*
         EJECT
***************************************************************HD JUN86
**                                                             HD JUN86
**  PARSE    -  INVOKE PARSE SERVICE ROUTINE                   HD JUN86
**                                                             HD JUN86
***************************************************************HD JUN86
PARSE    DS    0H                                              HD JUN86
         ST    RLINK,SAVRLINK      SAVE LINK REGISTER          HD JUN86
         MVI   PARSFLAG,0          CLEAR PARSE FLAG            HD JUN86
         MVC   PPLPCL,APDFTAB      MOVE PARM TAB ENTRY         HD JUN86
         XC    TSOECB,TSOECB       CLEAR THE EVENT BLOCK       HD JUN86
         SPACE 1
         CALLTSSR EP=IKJPARS,MF=(E,PPL)                        HD JUN86
         SPACE 1
         LTR   R15,R15             CHECK RETURN CODE           HD JUN86
         BZ    PARSEZ              OK RETURN TO CALLER         HD JUN86
         C     R15,PARSERC         PROMPT NOT ALLOWED?         HD JUN86
         BE    PARSEB              YES, JUST SEND MESSAGE      HD JUN86
         SPACE 1
         ST    R15,GFRCODE         SAVE RETURN CODE            HD JUN86
         MVI   GFCALLID+1,GFPARSE  INDICATE PARSE IS CALLER    HD JUN86
         LA    R0,CPPL             LOAD CPPL ADDRESS           HD JUN86
         ST    R0,GFCPPLP          SAVE POINTER TO CPPL        HD JUN86
         LA    R0,TSOECB           LOAD ECB POINTER            HD JUN86
         ST    R0,GFECBP           SAVE IN PARM LIST           HD JUN86
         LA    R0,L'PGMNAME        LOAD LENGTH OF PGM NAME     HD JUN86
         STH   R0,GFPGMNL          SAVE LENGTH OF PROGRAM NAME HD JUN86
         LA    R0,PGMNAME          LOAD PROGRAM NAME           HD JUN86
         ST    R0,GFPGMNP          SAVE POINTER TO NAME        HD JUN86
         LA    R0,GFPARMS          LOAD PARM ADDRESS           HD JUN86
         ST    R0,GFPTR            SAVE IN PARM POINTER        HD JUN86
         SPACE 1
         LA    R1,GFPTR                                        HD JUN86
         SPACE 1                                               HD JUN86
         XC    TSOECB,TSOECB       CLEAR THE EVENT BLOCK       HD JUN86
         LINK  EP=IKJEFF19         LINK TO MESSAGE ROUTINE     HD JUN86
         SPACE 1
PARSEB   OI    PARSFLAG,PARSFAIL   INDICATE PARSE FAILURE      HD JUN86
         SPACE 1
PARSEZ   L     RLINK,SAVRLINK      LOAD RETURN REGISTER        HD JUN86
         BR    RLINK               RETURN TO CALLER            HD JUN86
         EJECT
***************************************************************WFJFEB89
**                                                             WFJFEB89
**  IDS      -  ACQUIRE "HOME SYSTEM" AND SMF SYSID FROM ACF2  WFJFEB89
**                                                             WFJFEB89
***************************************************************WFJFEB89
IDS      EQU   *                                               WFJFEB89
         ST    RLINK,SAVRLINK      SAVE RETURN REGISTER        WFJFEB89
         SPACE 1                                               WFJFEB89
         ACFINCVT 4,NONE=IDSERROR  CALL ACF FOR ACF CVT ADDR.  WFJFEB89
         LUSE  ACCVT,R4            ADDRESS THE ACF CVT         WFJFEB89
         SPACE 1                   CALL ACF FOR ACF UCB ADDR.  WFJFEB89
         ACFGUCB 5,NONE=IDSERROR,INLINE=YES                    WFJFEB89
         LDROP R4                  NO LONGER NEED ACF CVT      WFJFEB89
         LUSE  ACUCB,R5            ADDRESS THE ACF UCB         WFJFEB89
         MVC   SMFID(4),ACUSCPU    SAVE SMF SYSID              WFJFEB89
         L     R6,ACUUIDP          LOAD ACF UID RECORD POINTER WFJFEB89
         MVC   HOMEID(1),23(R6)    SAVE HOME SYSTEM ID         WFJFEB89
         B     IDSEND              RETURN                      WFJFEB89
         SPACE 1                                               WFJFEB89
IDSERROR EQU   *                                               WFJFEB89
         LA    R2,MESS14           GET FIRST LEVEL MESSAGE     WFJFEB89
         LA    R3,MESS02           GET SECOND LEVEL MESSAGE    WFJFEB89
         B     ERRORMSG            YES, PRINT MSG AND END      WFJFEB89
         SPACE 1                                               WFJFEB89
IDSEND   L     RLINK,SAVRLINK      LOAD RETURN REGISTER        WFJFEB89
         BR    RLINK               RETURN TO CALLER            WFJFEB89
         LDROP R5                  NO LONGER NEED ACF UCB      WFJFEB89
         INUSE ,                                               WFJFEB89
         EJECT                                                 WFJFEB89
***************************************************************HD JUN87
**                                                             HD JUN87
**  VOLT - BUILD THE VOLUME TABLE, MABEL                       HD JUN87
**                                                             HD JUN87
***************************************************************HD JUN87
VOLT     DS    0H                                              HD JUN87
         LUSE  CVT,R3              ADDRESS THE CVT             HD JUN87
         LUSE  UCBOB,R7            ADDRESS THE UCB             HD JUN87
         SPACE 1                                               HD JUN87
         ST    RLINK,SAVRLINK      SAVE RETURN REGISTER        HD JUN87
         L     R3,CVTPTR           LOAD CVT POINTER            HD JUN87
         MVC   VOLTAB(VOLTABL),VOLTABI  MOVE VOLTAB SKELETON   HD JUN87
         MVC   SYSTAB(SYSTABL),SYSTABI  MOVE SYSTAB SKELETON   WFJFEB89
         LA    R8,VOLTAB           LOAD VOLUME TABLE ADDRESS   HD JUN87
         LA    R4,SYSTAB           LOAD SYSTEM TABLE ADDRESS   WFJFEB89
         MVI   UCBFLAG,UCB3DACC    MOVE IN DASD DEVICE CODE    HD JUN87
         SPACE 1                                               HD JUN87
SYSLOOP  CLI   0(R4),X'FF'         END OF TABLE?               WFJFEB89
         BE    SYSERROR            NO VALID SYSID FOUND        WFJFEB89
         CLC   SYSID,0(R4)         COMPARE SYSID WITH ENTRY    WFJFEB89
         BE    UCBLOOP             VALID SYSID FOUND           WFJFEB89
         LA    R4,SYSTLEN(R4)      LOAD NEXT TABLE ENTRY       WFJFEB89
         B     SYSLOOP             PROCESS NEXT ENTRY          WFJFEB89
         SPACE 1                                               WFJFEB89
UCBLOOP  CLI   0(R8),X'FF'         END OF TABLE?               HD JUN87
         BE    UCBEND              END OF TABLE                HD JUN87
         L     R15,CVTUCBSC        LOAD LOOKUP ROUTINE ADDR    HD JUN87
         SPACE 1                                               HD JUN87
         CALL  (15),               CALL UCB LOOKUP ROUTINE     HD JUN87+
               (UCBWORK,UCBFLAG,UCBUNIT),                      HD JUN87+
               VL,MF=(E,UCBCALL)                               HD JUN87
         SPACE 1                                               HD JUN87
         LTR   R15,R15             CHECK FOR END OF TABLE      HD JUN87
         BNZ   UCBEND              END OF UCB TABLE            HD JUN87
         SPACE 1                                               HD JUN87
UCBGOT   L     R7,UCBUNIT          GET UNIT CNTL BLOCK ADDR    HD JUN87
         TM    UCBSTAT,UCBONLI     ONLINE?                     HD JUN87
         BZ    UCBLOOP             SKIP OFFLINE SERIALS        HD JUN87
         CLI   1(R4),NOT           CHECK FOR WORK VOLUME       HD MAY89
         BNE   UCBNORM             NO, USE NORMAL CRITERIA     HD MAY89
         CLC   UCBVOLI(4),=C'WORK' WORK VOLUME?                HD MAY89
         BNE   UCBLOOP             NO FETCH NEXT ONE           HD MAY89
         TM    UCBSTAB,UCBBSTR     STORAGE VOLUME?             HD MAY89
         BZ    UCBLOOP             NO..TRY THE NEXT            HD MAY89
         MVC   1(6,R8),UCBVOLI     MOVE IN VOLUME SERIAL       HD JUN87
         LA    R8,VOLTLEN(R8)      LOAD NEXT ENTRY             HD JUN87
         B     UCBLOOP             GET NEXT UNIT               HD JUN87
UCBNORM  CLC   UCBVOLI(1),1(R4)    VALIDATE VOLUME FOR SYSTEM  WFJFEB89
         BNE   UCBLOOP             SKIP UNMATCHED VOLUMES      WFJFEB89
         CLC   UCBVOLI+3(2),=C'TS' CHECK FOR 'TS' VOLUME       HD JUN87
         BNE   UCBLOOP             SKIP NON-TS VOLUMES         HD JUN87
         MVC   1(6,R8),UCBVOLI     MOVE IN VOLUME SERIAL       HD JUN87
         LA    R8,VOLTLEN(R8)      LOAD NEXT ENTRY             HD JUN87
         B     UCBLOOP             GET NEXT UNIT               HD JUN87
         SPACE 1                                               HD JUN87
UCBEND   DS    0H                  END OF TABLE OR UCBS        HD JUN87
         LA    R6,VOLTAB           GET TABLE ADDRESS           HD JUN87
         CR    R6,R8               ARE WE STILL AT BEGINNING?  HD JUN87
         BE    UCBERROR            YES, NO CANDIDATE VOLUME    HD JUN87
         SPACE 1                                               HD JUN87
UCBPROP  DS    0H                  PROPOGATE VOLUME SERIAL     HD JUN87
         CLI   0(R8),X'FF'         DID WE HIT END OF TABLE?    HD JUN87
         BE    UCBBYE              YES, GO BACK                HD JUN87
* IF WE GOT HERE, WE RAN OUT OF VOLUMES BEFORE END OF TABLE    HD JUN87
         MVC   1(6,R8),1(R6)       MOVE IN FIRST/NEXT VOLSER   WFJJAN89
         LA    R8,VOLTLEN(R8)      INCREMENT TO NEXT           HD JUN87
         LA    R6,VOLTLEN(R6)      INCREMENT TO NEXT           WFJJAN89
         B     UCBPROP             TRY NEXT SLOT               HD JUN87
         SPACE 1                                               HD JUN87
SYSERROR EQU   *                                               WFJFEB89
         LA    R2,MESS13           GET FIRST LEVEL MESSAGE     WFJFEB89
         LA    R3,MESS02           GET SECOND LEVEL MESSAGE    WFJFEB89
         B     ERRORMSG            YES, PRINT MSG AND END      WFJFEB89
         SPACE 1                                               WFJFEB89
UCBERROR DS    0H                                              HD JUN87
         LA    R2,MESS12           GET FIRST LEVEL MESSAGE     HD JUN87
         LA    R3,MESS02           GET SECOND LEVEL MESSAGE    HD JUN87
         B     ERRORMSG            YES, PRINT MSG AND END      HD JUN87
         SPACE 1                                               HD JUN87
UCBBYE   L     RLINK,SAVRLINK      LOAD RETURN ADDRESS         HD JUN87
         BR    RLINK               RETURN TO CALLER            HD JUN87
         LDROP R3,R7               UNBASE THYSELF              HD JUN87
         EJECT                                                 HD JUN87
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**  ALLODDN  -  DEALLOCATE THE PROFILE DDNAME               *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 2                                            *HMD 04/86*
*************************************************************HMD 04/86*
*   BUILD SVC99 REQUEST BLOCKS IN GOTTEN AREA TO DEALLOCATE *HMD 04/86*
*   THE PROFILE DDNAME                                      *HMD 04/86*
*************************************************************HMD 04/86*
ALLODDN  DS    0H                                           *HMD 04/86*
         ST    RLINK,STAKLINK   SAVE LINKAGE REG IN STACK   *HMD 04/86*
         TM    PARSFLAG,PNOISPF WAS 'NOISPF' SPECIFIED?        HD JUN86
         BO    ALLOCDNE         ALL DONE, GO HOME              HD JUN86
         LA    R5,RB1           BUILD S99 RB PTR
         ST    R5,APRB1
         OI    APRB1,S99RBPND
         SPACE 2
         LUSE  S99RB,R5
         MVI   S99RBLN,20       BUILD S99 RB
         MVI   S99VERB,S99VRBUN UNALLOCATE THE DDNAME       *HMD 04/86*
         LA    R6,RB1P1
         ST    R6,S99TXTPP
         LDROP R5
         SPACE 2
         LA    R5,RB1TU1
         ST    R5,RB1P1
         LUSE  S99TUNIT,R5      BUILD RB1TU1 - DDNAME
         MVI   S99TUKEY+1,DALDDNAM
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,L'DDNAME
         MVC   S99TUPAR(8),DDNAME
         OI    RB1P1,S99RBPND               FLAG END OF CHAIN
         SPACE 2
         LDROP R5
         SPACE 1
         MVI   DYNFLAG,DYNOK ASSUME ALLOCATION WAS FINE     *HMD 04/86*
         LA    R1,APRB1      LOAD PARAMETER POINTER FOR SVC99
         SPACE 1
         DYNALLOC            ISSUE SVC99
         SPACE 1
         LTR   RRC,RRC       CHECK RETURN CODE
         BZ    ALLOCDNE      RETURN TO CALLER               *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R1,RB1        POINTER TO REQUEST BLOCK       *HMD 04/86*
         LUSE  S99RB,R1      ADDRESS THE BLOCK              *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         CLC   S99ERROR,=X'0438'  SEE IF DDNAME NOT FOUND   *HMD 04/86*
         BE    ALLOCDNE           ...NO ERROR AFTER ALL     *HMD 04/86*
         LDROP R1
         MVI   DYNFLAG,DYNFAIL    INDICATE ERROR            *HMD 04/86*
         ST    R15,SVC99RC        SAVE RETURN CODE          *HMD 04/86*
         LA    R15,SVC99RC        LOAD CODE ADDRESS         *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         BAL   RLINK,DERROR       CALL IKJEFF18             *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
ALLOCDNE L     RLINK,STAKLINK     LOAD FROM THE STACK       *HMD 04/86*
         BR    RLINK              RETURN TO CALLER          *HMD 04/86*
         EJECT
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**  ALLODSN  -  ALLOC THE XXXX.ISPF.PROFILE DSNAME          *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 2                                            *HMD 04/86*
*************************************************************HMD 04/86*
*   BUILD SVC99 REQUEST BLOCKS IN GOTTEN AREA TO ALLOCATE   *HMD 04/86*
*   THE PROFILE DATASET OLD                                 *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 1                                            *HMD 04/86*
ALLODSN  DS    0H                 ALLOCATE THE PROFILE DSN  *HMD 04/86*
         ST    RLINK,STAKLINK     PUSH LINKAGE ON THE STACK *HMD 04/86*
         TM    PARSFLAG,PNOISPF   WAS 'NOISPF' SPECIFIED?      HD JUN86
         BO    ALLODSNE           ALL DONE, RETURN             HD JUN86
         LA    R5,RB1             BUILD S99 RB PTR          *HMD 04/86*
         ST    R5,APRB1
         OI    APRB1,S99RBPND
         SPACE 1
         LUSE  S99RB,R5           ESTABLISH BASE REGISTER
         MVI   S99RBLN,X'14'      BUILD S99 RB
         MVI   S99VERB,S99VRBAL   INDICATE 'ALLOCATE'
         MVI   S99FLG11,S99NOCNV  NON-CONVERTABLE BONDS
         LA    R6,RB1P1
         ST    R6,S99TXTPP
         LDROP R5
         SPACE 2
         LA    R5,RB1TU1
         ST    R5,RB1P1
         LUSE  S99TUNIT,R5        BUILD RB1TU1 - DDNAME
         MVI   S99TUKEY+1,DALDDNAM
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,L'DDNAME
         MVC   S99TUPAR(8),DDNAME
         SPACE 1
         LA    R5,RB1TU2          BUILD RB1TU2 - DSNAME
         ST    R5,RB1P2
         MVI   S99TUKEY+1,DALDSNAM
         MVI   S99TUNUM+1,X'01'
         SPACE 1
         LA    R5,RB1TU4          BUILD RB1TU4 - STATUS
         ST    R5,RB1P4
         MVI   S99TUKEY+1,DALSTATS
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'01'
         MVI   S99TUPAR,DA08OLD             SET FOR OLD
         SPACE 1
         LA    R5,RB1TU5          BUILD RB1TU5 - DISPOSITION
         ST    R5,RB1P5
         MVI   S99TUKEY+1,DALNDISP
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'01'
         MVI   S99TUPAR,DA08KEEP  SET FOR KEEP
         OI    RB1P5,S99RBPND     FLAG END OF CHAIN
         LDROP R5
         SPACE 2
         MVI   DYNFLAG,DYNOK      ASSUME ALLOCATION OK      *HMD 04/86*
         LA    R1,APRB1           LOAD PARAMETER POINTER    *HMD 04/86*
         SPACE 1
         DYNALLOC                 ISSUE SVC99
         SPACE 1
         LTR   RRC,RRC            CHECK SVC99 RETURN CODE
         BZ    ALLODSNE           ALL OK, END THIS ROUTINE  *HMD 04/86*
         SPACE 2
         LA    R1,RB1
         LUSE  S99RB,R1
         SPACE 1
         CLC   S99ERROR,=X'1708'  SEE IF DSNAME NOT FOUND
         BE    ALLODSN2           ... OK NO ERROR AFTER ALL
         LDROP R1
         MVI   DYNFLAG,DYNFAIL    INDICATE FAILURE          *HMD 04/86*
         ST    RRC,SVC99RC        SAVE RETURN CODE FOR FF18 *HMD 04/86*
         LA    RRC,SVC99RC        POINT TO RETURN CODE      *HMD 04/86*
         BAL   RLINK,DERROR       CALL IKJEFF18             *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
ALLODSNE DS    0H                                           *HMD 04/86*
         L     RLINK,STAKLINK     LOAD FROM STACK           *HMD 04/86*
         BR    RLINK              RETURN TO CALLER          *HMD 04/86*
         EJECT
*************************************************************HMD 04/86*
** OK - MUST NOT HAVE ONE SO LETS BUILD A NEW               *HMD 04/86*
** PROFILE DATASET BUILD MORE SVC99 REQUEST BLOCKS          *HMD 04/86*
** IN GOTTEN AREA TO ALLOCATE THE PROFILE DATASET AS        *HMD 04/86*
** NEW, CATLG                                               *HMD 04/86*
*************************************************************HMD 04/86*
ALLODSN2 DS    0H            ALLOCATE DSNAME AS NEW         *HMD 04/86*
         LUSE  S99TUNIT,R5
         LA    R5,RB1TU4     BUILD RB1TU4 - STATUS
         MVI   S99TUPAR,DA08NEW             SET FOR NEW
         SPACE 1
         LA    R5,RB1TU5     BUILD RB1TU5 - DISPOSITION
         ST    R5,RB1P5      RESET END OF CHAIN FLAG
         MVI   S99TUPAR,DA08CAT             SET FOR CATLG
         SPACE 1
         LA    R5,RB1TU7     BUILD RB1TU7 - BLOCKLEN SPECS  *HMD 04/86*
         ST    R5,RB1P7
         MVI   S99TUKEY+1,DALBLKLN          AVG BLOCK LEN   *HMD 04/86*
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'03'             MOVE IN LENGTH  *HMD 04/86*
         MVC   S99TUPAR+1(2),BLKSIZE        MOVE IN BLKSIZE *HMD 04/86*
         SPACE 1
         LA    R5,RB1TUA     BUILD RB1TUA - PRIMARY SPACE
         ST    R5,RB1PA
         MVI   S99TUKEY+1,DALPRIME
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'03'
         MVC   S99TUPAR+1(2),PRIM           SET FOR # BLKS  *HMD 04/86*
         SPACE 1
         LA    R5,RB1TUC     BUILD RB1TUC - DIRECTORY BLKS
         ST    R5,RB1PC
         MVI   S99TUKEY+1,DALDIR
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'03'
         MVC   S99TUPAR+1(2),DIRBLKS        SET FOR # DIR BLK
         SPACE 1
***************************************************************WFJFEB89
*                                                              WFJFEB89
* IF SYSID EQ HOMEID THEN                                      WFJFEB89
*   USE UNIT=SYSALLDA AND ALLOC USING VOLSER FROM VOLUME TABLE WFJFEB89
* ELSE IF (SYSID NE HOMEID) AND (EXECUTING ON APLB) THEN       WFJFEB89
*   USE UNIT=SYSDA AND ALLOC WITHOUT VOLSER                    WFJFEB89
*                                                              WFJFEB89
* WHERE SYSDA IS GENERIC FOR UNITS WITH VOLSERS WORKXX AND     WFJFEB89
* SYSALLDA IS GENERIC FOR ALL UNITS.  THIS CONFORMS TO THE     WFJFEB89
* RULE (SDB: 02/22/89) THAT CROSSOVER USERS ON THE PRODUCTION  WFJFEB89
* SYSTEM MAY ONLY ALLOCATE ON WORK VOLUMES.                    WFJFEB89
*                                                              WFJFEB89
***************************************************************WFJFEB89
GETUNIT  LA    R5,RB1TU15          BUILD RB1TU15 - UNIT        HD NOV86
         CLC   SYSID,HOMEID        COMPARE SYSID AND HOME SYS  WFJFEB89
         BE    SAMESYSU            'SYSALLDA' & ALLOC BY VOLSERWFJFEB89
         CLI   SYSID,C'B'          CHECK FOR APLB              WFJFEB89
         BNE   SAMESYSU            'SYSALLDA' & ALLOC BY VOLSERWFJFEB89
         MVC   S99TUPAR(L'UNITDA),UNITDA  ELSE USE 'SYSDA'     WFJFEB89
         MVI   S99TULNG+1,L'UNITDA                             WFJFEB89
*                                  LOAD WORK VOL ALLOC MESSAGE WFJFEB89
         MVI   MESSDYN,C' '        CLEAR DYNAMIC AREA          WFJFEB89
         MVC   MESSDYN+1(L'MESSDYN-1),MESSDYN                  WFJFEB89
         MVC   MESSDYN(MESS15L),MESS15                         WFJFEB89
         B     GETUNITE            ALLOC W/O VOLSER            WFJFEB89
SAMESYSU MVC   S99TUPAR(L'UNIT),UNIT                           HD NOV86
         MVI   S99TULNG+1,L'UNIT                               HD NOV86
         SPACE 1
         LA    R5,RB1TU10    BUILD RB1TU10- VOL SER
         ST    R5,RB1P10
         MVI   S99TUKEY+1,DALVLSER
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'06'
         SPACE 1                                               HD NOV86
***************************************************************HD NOV86
**                                                            *HD NOV86
**   CALCULATE VOLSER VALUE BASED ON TIME OF DAY              *HD NOV86
**                                                            *HD NOV86
***************************************************************HD NOV86
SAMESYSV SLR   R1,R1                                           HD NOV86
         IC    R1,TIMESAVE+1 GET 'MINUTES' VALUE               HD NOV86
         LA    R2,VOLTAB     GET VOLUME TABLE                  HD NOV86
         MVC   S99TUPAR(6),=C'#ERROR'                          HD JUN87
*                            MOVE IN DEFAULT VOLSER            HD JUN87
         SPACE 1                                               HD NOV86
TIMECHK  CLI   0(R2),X'FF'   END OF TABLE?                     HD NOV86
         BE    GETUNITE      END OF TABLE <BAD UNIT>           HD NOV86
         CLM   R1,1,0(R2)    COMPARE WITH SECOND VALUE         HD NOV86
         BNH   TIMELOW       CHECK SECOND VALUE                HD NOV86
         LA    R2,VOLTLEN(R2)      INCREMENT TO NEXT ENTRY     HD NOV86
         B     TIMECHK                                         HD NOV86
TIMELOW  MVC   S99TUPAR(VOLTLEN-1),1(R2)                       HD JUN87
*                            MOVE IN VOLUME SERIAL             HD NOV86
         MVI   MESSDYN,C' '      CLEAR DYNAMIC AREA            HD SEP87
         MVC   MESSDYN+1(L'MESSDYN-1),MESSDYN                  HD SEP87
         MVC   MESSDYN(MESS03L),MESS03                         HD SEP87
         MVC   MESSDYN+MESS03L-6(6),1(R2)                      HD SEP87
         SPACE 2
GETUNITE LA    R5,RB1TU15    BUILD RB1TU15- UNIT
         ST    R5,RB1P15
         MVI   S99TUKEY+1,DALUNIT
         MVI   S99TUNUM+1,X'01'
*  TEXT HAS BEEN PREVIOUSLY MOVED INTO PLACE                *HMD 04/86*
         SPACE 1
         LA    R5,RB1TU30    BUILD RB1TU30- BLKSIZE
         ST    R5,RB1P30
         MVI   S99TUKEY+1,DALBLKSZ
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'2'
         MVC   S99TUPAR(2),BLKSIZE          MOVE IN BLKSIZE
         SPACE 1
         LA    R5,RB1TU3C    BUILD RB1TU3C- DSORG
         ST    R5,RB1P3C
         MVI   S99TUKEY+1,DALDSORG
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'2'
         MVI   S99TUPAR,X'02'               MOVE IN DSORG=PO
         SPACE 1
         LA    R5,RB1TU42    BUILD RB1TU42- LRECL
         ST    R5,RB1P42
         MVI   S99TUKEY+1,DALLRECL
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'02'
         MVC   S99TUPAR(2),LRECL            MOVE IN LRECL
         SPACE 1
         LA    R5,RB1TU49    BUILD RB1TU49- RECFM
         ST    R5,RB1P49
         MVI   S99TUKEY+1,DALRECFM
         MVI   S99TUNUM+1,X'01'
         MVI   S99TULNG+1,X'1'
         MVI   S99TUPAR,X'90'        MOVE IN RECFM=FB
         SPACE 1
         OI    RB1P49,S99RBPND       FLAG END OF CHAIN
         LDROP R5
         SPACE 2
         MVI   DYNFLAG,DYNOK ASSUME ALLOCATION WAS OK       *HMD 04/86*
         LA    R1,APRB1      LOAD PARAMETER POINTER FOR SVC99
         DYNALLOC            ISSUE SVC99
         SPACE 1
         LTR   RRC,RRC           CHECK SVC99 RETURN CODE
         BNZ   ALLOFAIL          NON-ZERO, SOME FAILURE     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R1,1              NUMBER OF SEGMENTS         *HMD 04/86*
         ST    R1,OLD            SAVE IN OLD                *HMD 04/86*
         SPACE 1                                               HD SEP87
         LA    R1,MESSDYN        USE DYNAMIC AREA FOR M3       HD SEP87
         ST    R1,OLD+4          SAVE IN OLD                *HMD 04/86*
         XC    TSOECB,TSOECB     CLEAR EVENT CNTL BLOCK     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 04/86*X
               MF=(E,IOPL)                                  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         B     ALLODSXE          RETURN TO CALLER           *HMD 04/86*
ALLOFAIL DS    0H                                           *HMD 04/86*
         MVI   DYNFLAG,DYNFAIL   INDICATE FAILURE           *HMD 04/86*
         ST    RRC,SVC99RC       SAVE RETURN CODE           *HMD 04/86*
         LA    RRC,SVC99RC       LOAD ADDRESS               *HMD 04/86*
         LA    R1,RB1            GET PARM BLOCK POINTER     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         BAL   RLINK,DERROR      PRINT ERROR MESSAGE        *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
ALLODSXE DS    0H                END OF THE LINE
         L     RLINK,STAKLINK    RELOAD FROM STACK          *HMD 04/86*
         BR    RLINK             RETURN TO CALLER           *HMD 04/86*
         EJECT                                              *HMD 04/86*
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**  ALLOCLI  -  CHECK FOR EXISTANCE OF:                     *HMD 04/86*
**              '&PREFIX..PROFILE.CLIST'                    *HMD 04/86*
**  IF SO, THEN PUT IT ON THE EXECUTION STACK               *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 2                                            *HMD 04/86*
ALLOCLI  DS    0H                                           *HMD 04/86*
         ST    RLINK,STAKLINK   SAVE LINKAGE REG IN STACK   *HMD 04/86*
         LA    R5,RB1           BUILD S99 RB PTR            *HMD 04/86*
         ST    R5,APRB1                                     *HMD 04/86*
         OI    APRB1,S99RBPND                               *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         LUSE  S99RB,R5                                     *HMD 04/86*
         MVI   S99RBLN,20       BUILD S99 RB                *HMD 04/86*
         MVI   S99VERB,S99VRBAL ALLOCATE THE DSNAME         *HMD 04/86*
         LA    R6,RB1P1                                     *HMD 04/86*
         ST    R6,S99TXTPP                                  *HMD 04/86*
         LDROP R5                                           *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R5,RB1TU1                                    *HMD 04/86*
         ST    R5,RB1P1                                     *HMD 04/86*
         LUSE  S99TUNIT,R5      BUILD RB1TU1 - RETURN DDN   *HMD 04/86*
         MVI   S99TUKEY+1,DALRTDDN    RETURN DDNAME         *HMD 04/86*
         MVI   S99TUNUM+1,X'01'                             *HMD 04/86*
         MVI   S99TULNG+1,8           DDNAME IS EIGHT BYTES *HMD 04/86*
         MVI   S99TUPAR,C' '          CLEAR DDNAME          *HMD 04/86*
         MVC   S99TUPAR+1(7),S99TUPAR CLEAR IT ALL THE WAY  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         XC    RB1P2,RB1P2      CLEAR SECOND TU POINTER     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R5,RB1TU3        GET DSNAME TEXT UNIT        *HMD 04/86*
         ST    R5,RB1P3         SAVE POINTER IN LIST        *HMD 04/86*
         MVI   S99TUKEY+1,DALDSNAM                          *HMD 04/86*
         MVI   S99TUNUM+1,X'01'                             *HMD 04/86*
* DSNAME HAS ALREADY BEEN BUILT                             *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R5,RB1TU4          BUILD RB1TU4 - STATUS     *HMD 04/86*
         ST    R5,RB1P4                                     *HMD 04/86*
         MVI   S99TUKEY+1,DALSTATS                          *HMD 04/86*
         MVI   S99TUNUM+1,X'01'                             *HMD 04/86*
         MVI   S99TULNG+1,X'01'                             *HMD 04/86*
         MVI   S99TUPAR,DA08SHR   SET STATUS FOR SHR        *HMD 04/86*
         SPACE 1
         XC    RB1P5,RB1P5        CLEAR TU POINTER          *HMD 04/86*
         SPACE 1
         LA    R5,RB1TU7          SET RETURN DSORG          *HMD 04/86*
         ST    R5,RB1P7           STORE POINTER IN LIST     *HMD 04/86*
         MVI   S99TUKEY+1,DALRTORG    RETURN DSORG          *HMD 04/86*
         MVI   S99TUNUM+1,X'01'   ONE PARAMETER             *HMD 04/86*
         MVI   S99TULNG+1,2       LENGTH OF TWO             *HMD 04/86*
         XC    S99TUPAR(2),S99TUPAR                         *HMD 04/86*
*                                 CLEAR RETURN FIELD        *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         OI    RB1P7,S99RBPND     FLAG END OF CHAIN
         LDROP R5                                           *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         MVI   DYNFLAG,DYNOK ASSUME ALLOCATION WAS FINE     *HMD 04/86*
         LA    R1,APRB1
         SPACE 1                                            *HMD 04/86*
         DYNALLOC            ISSUE SVC99                    *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LTR   RRC,RRC       CHECK RETURN CODE              *HMD 04/86*
         BZ    ALLOCLFE      NOW FREE THE DDNAME            *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         ST    RRC,SVC99RC        SAVE RETURN CODE          *HMD 04/86*
         LA    R1,RB1                                       *HMD 04/86*
         LUSE  S99RB,R1                                     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         CLC   S99ERROR,=X'1708'  SEE IF DSNAME NOT FOUND   *HMD 04/86*
         BNE   ALLOCLID           .. OK, JUST RETURN        *HMD 04/86*
         MVI   DYNFLAG,DYNCNF     INDICATE DSN NOT FOUND    *HMD 04/86*
         B     ALLOCLIE           RETURN TO CALLER          *HMD 04/86*
         LDROP R1                                           *HMD 04/86*
ALLOCLID MVI   DYNFLAG,DYNFAIL    INDICATE ERROR            *HMD 04/86*
         LA    R15,SVC99RC        LOAD CODE ADDRESS         *HMD 04/86*
         BAL   RLINK,DERROR       CALL IKJEFF18             *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
ALLOCLIE L     RLINK,STAKLINK     LOAD FROM THE STACK       *HMD 04/86*
         BR    RLINK              RETURN TO CALLER          *HMD 04/86*
         EJECT                                              *HMD 04/86*
***********************************************************************
**                                                                   **
**  ALLOCLFE -  FREE THE DDNAME OF THE DATASET WE JUST               **
**              ALLOCATED.                                           **
**                                                                   **
***********************************************************************
         SPACE 2                                            *HMD 04/86*
ALLOCLFE DS    0H                 FREE THE ALLOCATED DDN    *HMD 04/86*
         LA    R5,RB1TU7          GET DSORG RETURN          *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LUSE  S99TUNIT,R5        ADDRESS THE TEXT UNIT     *HMD 04/86*
         CLI   S99TUPAR,X'40'     SEQUENTIAL - NORMAL?      *HMD 04/86*
         BE    ALLOCLFF           YES, THIS IS FINE         *HMD 04/86*
         CLI   S99TUPAR,X'41'     SEQUENTIAL - UNMOVABLE?   *HMD 04/86*
         BE    ALLOCLFF           YES, THIS IS FINE         *HMD 04/86*
         MVI   DYNFLAG,DYNFAIL    INDICATE FAILURE          *HMD 04/86*
         LDROP R5                                           *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R1,1               ONE MESSAGE SEGMENT       *HMD 04/86*
         ST    R1,OLD             SAVE IN OLD               *HMD 04/86*
         LA    R1,MESS04          GET MESSAGE               *HMD 04/86*
         ST    R1,OLD+4           SAVE IN OLD               *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         XC    TSOECB,TSOECB      CLEAR ECB                 *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 04/86*X
               MF=(E,IOPL)                                  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
ALLOCLFF DS    0H                                           *HMD 04/86*
         LA    R5,RB1           BUILD S99 RB PTR
         ST    R5,APRB1
         OI    APRB1,S99RBPND
         SPACE 2
         LUSE  S99RB,R5
         MVI   S99RBLN,20       BUILD S99 RB
         MVI   S99VERB,S99VRBUN UNALLOCATE THE DDNAME       *HMD 04/86*
         LA    R6,RB1P1
         ST    R6,S99TXTPP
         LDROP R5
         SPACE 2
         LA    R5,RB1TU1
         ST    R5,RB1P1
         LUSE  S99TUNIT,R5      GET RETURNED DDNAME
         MVI   S99TUKEY+1,DALDDNAM
         MVI   S99TUNUM+1,X'01'
* DDNAME IS ALREADY SETUP FROM PREVIOUS ALLOCATION          *HMD 04/86*
         OI    RB1P1,S99RBPND               FLAG END OF CHAIN
         LDROP R5
         LA    R1,APRB1      LOAD PARAMETER POINTER FOR SVC99
         SPACE 1
         DYNALLOC            ISSUE SVC99
         SPACE 1                                            *HMD 04/86*
* IF DEALLOCATION FAILS, FLAG FAILURE AND RETURN            *HMD 04/86*
         LTR   RRC,RRC                                      *HMD 04/86*
         BZ    ALLOCLIE                                     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R1,RB1                                       *HMD 04/86*
         LUSE  S99RB,R1                                     *HMD 04/86*
         CLC   S99ERROR,=X'0438'  SEE IF DDNAME NOT FOUND   *HMD 04/86*
         BE    ALLOCLIE           ..THIS IS NOT AN ERROR    *HMD 04/86*
         LDROP R1                                           *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         MVI   DYNFLAG,DYNFAIL    FLAG FAILURE              *HMD 04/86*
         ST    RRC,SVC99RC        SAVE RETURN CODE          *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R15,SVC99RC        ADDRESS THE RETURN CODE   *HMD 04/86*
         BAL   RLINK,DERROR       CALL IKJEFF18 FOR MSG     *HMD 04/86*
         B     ALLOCLIE           RETURN TO CALLER          *HMD 04/86*
         EJECT                                              *HMD 04/86*
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**   DOCMD   - STACK OUR COMMAND AND GET OUT FAST!!         *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 1                                               HD JUN86
DOCMD    DS    0H                                              HD JUN86
         LUSE  LSD,R5                                          HD JUN86
         LUSE  IKJPARMD,R9                                     HD JUN86
         SPACE 1                                               HD JUN86
         ST    RLINK,STAKLINK                                  HD JUN86
         SPACE 2                                               HD JUN86
         LH    R7,CMD+4      LOAD LENGTH OF COMMAND            HD JUN86
         CH    R7,MAXLEN     CHECK COMMAND LENGTH              HD JUN86
         SPACE 1                                               HD JUN86
         LA    R2,MESS11              MESSAGE TO DISPLAY
         LA    R3,MESS06                "     "    "
         BH    ERRORMSG      OK, LET'S DO IT                   HD JUN86
         SPACE 2                                               HD JUN86
         GETMAIN LU,LA=CMDREQ,A=ANSWER,SP=78,LOC=BELOW,        HD JUN86X
               MF=(E,LGM)              GET STORAGE FOR LIST    HD JUN86
         SPACE 2                                               HD JUN86
         L     R9,PPLRANS    LOAD ANSWER PLACE                 HD JUN86
         SPACE 1                                               HD JUN86
         L     R5,ANSWER     LOAD LSD ADDRESS                  HD JUN86
         L     R6,ANSWER+4   LOAD INSTORAGE LIST ADDRESS       HD JUN86
         SPACE 1                                               HD JUN86
         ST    R6,LSDADATA   SAVE DATA ADDRESS                 HD JUN86
         ST    R6,LSDANEXT   SAVE NEXT LINE ADDRESS            HD JUN86
         SPACE 1                                               HD JUN86
         L     R4,CMDREQ+4   LOAD LENGTH OF RECORD             HD JUN86
         STH   R4,LSDRCLEN            LENGTH OF RECORD         HD JUN86
         STH   R4,LSDTOTLN            SAVE TOTAL LENGTH        HD JUN86
         XC    12(4,R5),12(R5)        CLEAR LAST ELEMENT       HD JUN86
         LDROP R5                                              HD JUN86
         SPACE 1                                               HD JUN86
         L     R1,CMD                                          HD JUN86
         MVI   0(R6),C' '    CLEAR AREA                        HD JUN86
         MVC   1(255,R6),0(R6)     TO BLANKS                   HD JUN86
         BCTR  R7,0          DECREMENT FOR 'EX'                HD JUN86
         MVC   0(0,R6),0(R1) MOVE COMMAND                      HD JUN86
         EX    R7,*-6              TO AREA                     HD JUN86
         SPACE 1                                               HD JUN86
         B     DOSTACK       GO PLACE COMMAND ON STACK         HD JUN86
         EJECT                                                 HD JUN86
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**   GOSTACK - STACK AN 'EXECUTE' COMMAND IN STORAGE TO     *HMD 04/86*
**             BE EXECUTED UPON EXIT FROM THIS COMMAND      *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 2                                            *HMD 04/86*
GOSTACK  DS    0H           STACK AN EXECUTE COMMAND        *HMD 04/86*
         ST    RLINK,STAKLINK     SAVE LINK REGISTER        *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         GETMAIN LU,LA=REQUEST,A=ANSWER,SP=78,LOC=BELOW,    *HMD 04/86*X
               MF=(E,LGM)   GET STORAGE FOR LIST            *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         L     R5,ANSWER    GET LSD ADDRESS                 *HMD 04/86*
         L     R6,ANSWER+4  GET INSTORAGE LIST ADDRESS      *HMD 04/86*
         LUSE  LSD,R5       ADDRESS THE LSD                 *HMD 04/86*
         ST    R6,LSDADATA  SAVE DATA ADDRESS               *HMD 04/86*
         ST    R6,LSDANEXT  SAVE NEXT LINE ADDRESS          *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         L     R4,REQUEST+4           LOAD RECORD LENGTH    *HMD 04/86*
         STH   R4,LSDRCLEN            LENGTH OF RECORD      *HMD 04/86*
         STH   R4,LSDTOTLN            SAVE TOTAL LENGTH     *HMD 04/86*
         XC    12(4,R5),12(R5)        CLEAR LAST ELEMENT    *HMD 04/86*
         LDROP R5                     DROP LSD BASE         *HMD 04/86*
         MVI   0(R6),C' '             CLEAR LIST            *HMD 04/86*
         MVC   1(55,R6),0(R6)            TO BLANKS          *HMD 04/86*
         MVC   0(L'STAKEXEC,R6),STAKEXEC                    *HMD 04/86*
         LA    R6,L'STAKEXEC(R6)      MOVE IN 'EXEC' CMD    *HMD 04/86*
         LH    R4,CDSNLEN             GET DATASET LENGTH    *HMD 04/86*
MOVEDSNC MVC   0(0,R6),CDSNAME        MOVE IN THE NAME      *HMD 04/86*
         BCTR  R4,0                   DECREMENT FOR 'EX'    *HMD 04/86*
         EX    R4,MOVEDSNC            MOVE IN THE NAME      *HMD 04/86*
         LA    R6,1(R4,R6)            POINT TO END OF NAME  *HMD 04/86*
         MVI   0(R6),C''''            MOVE IN END QUOTE     *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
DOSTACK  STACK PARM=STKPB,STORAGE=((5),SOURCE),MF=(E,IOPL)  *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         LTR   RRC,RRC                CHECK RETURN CODE     *HMD 04/86*
         BZ    STACKRTE               RETURN TO CALLER      *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R1,1                   ONE SEGMENT           *HMD 04/86*
         ST    R1,OLD                 SAVE IN O.L.D         *HMD 04/86*
         LA    R1,MESS07              PRINT MESSAGE         *HMD 04/86*
         ST    R1,OLD+4               SAVE IN O.L.D         *HMD 04/86*
         XC    TSOECB,TSOECB          CLEAR ECB             *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         PUTLINE PARM=PTPB,OUTPUT=(OLD,TERM,SINGLE,INFOR),  *HMD 04/86*X
               MF=(E,IOPL)                                  *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         LA    R2,MESS05              MESSAGE TO DISPLAY    *HMD 04/86*
         LA    R3,MESS06                "     "    "        *HMD 04/86*
         B     ERRORMSG               PRINT MSG AND RETURN  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
STACKRTE L     RLINK,STAKLINK         RESTORE RETURN REG    *HMD 04/86*
         XC    ANSWER(8),ANSWER       CLEAR STORAGE POINTER    HD JUN86
         BR    RLINK                  RETURN TO CALLER      *HMD 04/86*
         EJECT                                              *HMD 04/86*
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**       DYNAMIC ALLOCATION FAILURE - PRINT MESSAGE         *HMD 04/86*
**                                                          *HMD 04/86*
**                                                          *HMD 04/86*
** INPUT: THIS ROUTINE PRINTS A MULTILEVEL MESSAGE          *HMD 04/86*
**                                                          *HMD 04/86*
**        R2 --> POINTER TO FIRST LEVEL MESSAGE             *HMD 04/86*
**        R3 --> POINTER TO SECOND LEVEL MESSAGE            *HMD 04/86*
*************************************************************HMD 04/86*
ERRORMSG DS    0H                                           *HMD 04/86*
         LA    R1,OLD2          SECOND LEVEL MESSAGE        *HMD 04/86*
         ST    R1,OLD1          SAVE IN FIRST OLD           *HMD 04/86*
         LA    R1,1             NUMBER OF SEGMENTS          *HMD 04/86*
         ST    R1,OLD1+4                                    *HMD 04/86*
         ST    R1,OLD2+4        SAVE IN LINE DESCRIPTORS    *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LR    R1,R2            GET MESSAGE POINTER         *HMD 04/86*
         ST    R1,OLD1+8        SAVE IN OLD                 *HMD 04/86*
         LR    R1,R3            GET MESSAGE POINTER         *HMD 04/86*
         ST    R1,OLD2+8        SAVE IN OLD                 *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         XC    TSOECB,TSOECB    CLEAR EVENT CNTL BLOCK      *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         PUTLINE PARM=PTPB,OUTPUT=(OLD1,TERM,MULTLVL,INFOR),           X
               MF=(E,IOPL)                                  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA    R2,12            RETURN CODE 12              *HMD 04/86*
         B     RETURN                                       *HMD 04/86*
         EJECT
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**  CMDPROC - CHECK TO SEE IF USER IS INVOKING THIS COMMAND *HMD 04/86*
**            FROM A CLIST. IF SO, TERMINATE TO AVOID       *HMD 04/86*
**            A RECURSIVE INVOCATION.                       *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
CMDPROC  DS    0H
         ST    RLINK,SAVRLINK        SAVE THE LINKAGE REG   *HMD 04/86*
         L     R15,CVTPTR            GET CVT POINTER        *HMD 04/86*
         L     R15,CVTTVT-CVT(R15)   GET TSO VECTOR TABLE   *HMD 04/86*
         L     R15,TSVTVACC-TSVT(R15)                       *HMD 04/86*
*                                    GET IKJCT441 ADDRESS   *HMD 04/86*
         LA    R1,TSVELOC            SELECT LOCATE SERVICE  *HMD 04/86*
         ST    R1,ECODE              SAVE IN PARM LIST      *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         CALL  (15),                  CALL IKJCT441         *HMD 04/86*X
               (ECODE,                ENTRY CODE            *HMD 04/86*X
               NAMEPTR,               NAME POINTER          *HMD 04/86*X
               NAMELEN,               NAME LENGTH           *HMD 04/86*X
               VALUEPTR,              VALUE POINTER         *HMD 04/86*X
               VALUELEN,              VALUE LENGTH          *HMD 04/86*X
               TOKEN),                TOKEN (UNUSED HERE)   *HMD 04/86*X
               VL,MF=(E,CCT441L)      CALL THE SUCKER       *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         CH     R15,=H'40'            CALL FROM READY MODE  *HMD 04/86*
         BE    CMDPROCE                                     *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         LA     R2,MESS08                                   *HMD 04/86*
         LA     R3,MESS09                                   *HMD 04/86*
         B      ERRORMSG              INDICATE ERROR        *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
CMDPROCE DS     0H                                          *HMD 04/86*
         L      RLINK,SAVRLINK        RETURN TO CALLER      *HMD 04/86*
         BR     RLINK                                       *HMD 04/86*
         EJECT                                              *HMD 04/86*
*************************************************************HMD 05/86*
**                                                          *HMD 05/86*
**  NAMES - SUBROUTINE TO BUILD DATASET NAMES. THE ISPF     *HMD 05/86*
**          PROFILE DATASET IS BUILT FROM THE USERID, BUT   *HMD 05/86*
**          THE TSO PREFIX IS USED TO BUILD THE PROFILE     *HMD 05/86*
**          COMMAND PROCEDURE DATASET.                      *HMD 05/86*
**                                                          *HMD 05/86*
*************************************************************HMD 05/86*
NAMES    DS    0H                                           *HMD 05/86*
         ST    RLINK,SAVRLINK      SAVE THE LINKAGE REG     *HMD 04/86*
         LUSE  UPT,R1                                       *HMD 04/86*
         LUSE  PSCB,R2                                      *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         MVI   PDSNAME,C' '        CLEAR                    *HMD 04/86*
         MVC   PDSNAME+1(43),PDSNAME     NAME FIELD         *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         MVI   CDSNAME,C' '        CLEAR                    *HMD 04/86*
         MVC   CDSNAME+1(43),CDSNAME     NAME FIELD         *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         L     R1,CPPLUPT    GET USER PROFILE TABLE         *HMD 04/86*
         L     R2,CPPLPSCB   GET PROTECTED STEP CNTL BLOCK  *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         INUSE ,             SEE WHOS ON FIRST              *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
*                                                           *HMD 05/86*
* BUILD THE ISPF PROFILE DATASET NAME                       *HMD 05/86*
*                                                           *HMD 05/86*
PROFNAME SLR   R3,R3         CLEAR WORK REGISTER            *HMD 05/86*
         ICM   R3,B'0001',PSCBUSRL                          *HMD 05/86*
*                            LOAD USERID LENGTH             *HMD 05/86*
         LA    R4,PDSNAME    POINT TO NAME BUILD FIELD      *HMD 05/86*
         LA    R6,PSCBUSER   POINT TO USERID AREA           *HMD 05/86*
NAMEMOV1 MVC   0(0,R4),0(R6) >>>  EXECUTED INSTRUCTION <<<  *HMD 05/86*
         BCTR  R3,0          DECREMENT FOR EXECUTE          *HMD 05/86*
         EX    R3,NAMEMOV1   MOVE IN THE NAME               *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         LA    R4,1(R3,R4)   POINT TO END OF NAME           *HMD 05/86*
         MVI   0(R4),C'.'    BUILD DOT                      *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         MVC   1(L'DSNPART,R4),DSNPART                      *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         LA    R4,PDSNAME                                   *HMD 05/86*
         SLR   R3,R3          CLEAR COUNTER                 *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
PARTLOOP DS    0H                                           *HMD 05/86*
         CLI   0(R4),C' '     END OF NAME?                  *HMD 05/86*
         BE    PARTEXIT       EXIT                          *HMD 05/86*
         LA    R3,1(,R3)      COUNT CHARACTERS              *HMD 05/86*
         LA    R4,1(,R4)      BUMP TEXT POINTER             *HMD 05/86*
         B     PARTLOOP                                     *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
PARTEXIT DS    0H                                           *HMD 05/86*
         STH   R3,PDSNLEN     SAVE LENGTH                   *HMD 04/86*
         SPACE 2                                            *HMD 05/86*
*                                                           *HMD 05/86*
* BUILD THE PROFILE CLIST DATASET NAME                      *HMD 05/86*
*                                                           *HMD 05/86*
PREFIX   SLR   R3,R3         CLEAR WORK REGISTER            *HMD 05/86*
         ICM   R3,B'0001',UPTPREFL                          *HMD 05/86*
*                            LOAD PREFIX POINTER            *HMD 05/86*
         BZ    USERID        NO PREFIX, USE USERID          *HMD 05/86*
         LA    R6,UPTPREFX   POINT TO PREFIX AREA           *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
BLDNAME  LA    R5,CDSNAME    POINT TO NAME BUILD FIELD      *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
NAMEMOV2 MVC   0(0,R5),0(R6)                                *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         BCTR  R3,0          DECREMENT FOR EXECUTE          *HMD 05/86*
         EX    R3,NAMEMOV2                                  *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         LA    R5,1(R3,R5)   POINT TO END OF PREFIX/USERID  *HMD 05/86*
         MVI   0(R5),C'.'    MOVE IN 'DOT'                  *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         MVC   1(L'DSNXCTL,R5),DSNXCTL                      *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         SLR   R3,R3          CLEAR COUNTERS                *HMD 05/86*
         LA    R5,CDSNAME     COUNT CHARACTERS              *HMD 05/86*
XCTLLOOP DS    0H                                           *HMD 05/86*
         CLI   0(R5),C' '     END OF NAME?                  *HMD 05/86*
         BE    XCTLEXIT                                     *HMD 05/86*
         LA    R3,1(,R3)      COUNT CHARACTERS              *HMD 05/86*
         LA    R5,1(,R5)      BUMP TEXT POINTER             *HMD 05/86*
         B     XCTLLOOP       CONTINUE COUNTING             *HMD 05/86*
XCTLEXIT STH   R3,CDSNLEN     SAVE THE LENGTH               *HMD 05/86*
         L     RLINK,SAVRLINK RESTORE THE LINKOR            *HMD 05/86*
         BR    RLINK          RETURN HOME                   *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
USERID   SLR   R3,R3         CLEAR WORK REGISTER            *HMD 05/86*
         ICM   R3,B'0001',PSCBUSRL                          *HMD 05/86*
*                            LOAD PREFIX POINTER            *HMD 05/86*
         LA    R6,PSCBUSER   POINT TO PREFIX AREA           *HMD 05/86*
         B     BLDNAME       GO BUILD NAME                  *HMD 05/86*
         SPACE 1                                            *HMD 05/86*
         LDROP R1,R2         DROP REGISTERS                 *HMD 05/86*
         EJECT
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**   DERROR - USE IKJEFF18 (DAIRFAIL) TO REPORT DYNAMIC     *HMD 04/86*
**            ALLOCATION ERRORS                             *HMD 04/86*
**                                                          *HMD 04/86*
**   INPUT  - R15 = POINTER TO DYNAMIC ALLOC RETURN CODE    *HMD 04/86*
**            R1  = POINTER TO SVC99 REQUEST BLOCK          *HMD 04/86*
**                                                          *HMD 04/86*
**   OUTPUT - MESSAGE TO TSO USER, THEN CONTINUE WITH       *HMD 04/86*
**            THE COMMAND                                   *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
         SPACE 1                                            *HMD 04/86*
DERROR   DS    0H                                           *HMD 04/86*
         ST    RLINK,SAVRLINK     SAVE RETURN REGISTER      *HMD 04/86*
         ST    R15,DFRCP          POINTER TO RETURN CODE    *HMD 04/86*
         ST    R1,DFS99RBP        SAVE REQUEST BLOCK PTRAD  *HMD 04/86*
         MVI   S99ID,0            ISSUE PUTLINE             *HMD 04/86*
         MVI   S99ID+1,DFSVC99    INDICATE CALLER IS SVC99  *HMD 04/86*
         XC    DFBUFP,DFBUFP      GET FULLWORD OF ZEROS     *HMD 04/86*
         LA    R1,DFBUFP          POINT TO FULLWORD OF ZERO *HMD 04/86*
         ST    R1,DFJEFF02        SAVE IN PARM LIST         *HMD 04/86*
         LA    R1,S99ID           ADDRESS OF ID FIELD       *HMD 04/86*
         ST    R1,DFIDP           DAIRFAIL ID POINTER       *HMD 04/86*
         LA    R1,CPPL            ADDRESS OF CPPL           *HMD 04/86*
         ST    R1,DFCPPLP         STORE IN POINTER          *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         LA    R1,DFPARMS         GET PARAMETERS            *HMD 04/86*
HOT      LINK  EP=IKJEFF18        GET YOUR HOT LINKS HERE   *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
         L     RLINK,SAVRLINK     GET RETURN REGISTER       *HMD 04/86*
         BR    RLINK              AND RETURN TO CALLER      *HMD 04/86*
         EJECT                                              *HMD 04/86*
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**             LITERAL ORGANIZATION                         *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
IRVING   LTORG                                              *HMD 04/86*
         SPACE 2                                            *HMD 04/86*
STAKEXEC DC    C'EXEC '''          COMMAND TO BE EXECUTED   *HMD 04/86*
DSNPART  DC    C'ISPF.PROFILE'     REST OF DATASET NAME
DSNXCTL  DC    C'PROFILE.CLIST'    EXECUTE FROM WITHIN      *HMD 04/86*
DDNAME   DC    C'ISPPROF '         DDNAME - MUST BE ISPPROF
UNIT     DC    C'SYSALLDA'         UNIT IF ON HOME SYSTEM      WFJFEB89
UNITDA   DC    C'SYSDA'            UNIT IF NOT ON HOME SYSTEM  WFJFEB89
PGMNAME  DC    C'PDFINIT'          NAME OF PROGRAM             HD JUN86
         SPACE 1                                               HD JUN86
PARSERC  DC    F'4'                RETURN CODE OF 4 OR HIGHER  HD JUN86
APDFTAB  DC    V(PDFTAB)           ADDRESS OF PARSE PARM LIST  HD JUN86
PRIM     DC    H'60'               PRIM   - # OF BLOCKS     *HMD 07/88*
DIRBLKS  DC    H'10'               DIRBLKS- # OF DIR BLOCKS *HMD 07/88*
LRECL    DC    H'80'               LRECL  - MUST BE 80 FOR ISPF
BLKSIZE  DC    H'9040'             BLKSIZE- AVERAGE BLKLEN  *HMD 04/86*
MAXLEN   DC    H'256'              MAXIMUM COMMAND LENGTH      HD JUN86
         SPACE 1                                            *HMD 04/86*
REQUEST  DC    F'16'               SPACE FOR LSD DATA AREA  *HMD 04/86*
         DC    AL1(128)            END OF LIST INDICATOR    *HMD 04/86*
         DC    AL3(56)             80 BYTE RECORDS          *HMD 04/86*
         SPACE 1                                               HD JUN86
*                                                              HD JUN86
* ALLOCATE STORAGE FOR 'CMD(' PARM ON COMMAND EXECUTION        HD JUN86
*                                                              HD JUN86
CMDREQ   DC    F'16'               SPACE FOR LSD DATA AREA     HD JUN86
         DC    AL1(128)            END OF LIST INDICATOR       HD JUN86
         DC    AL3(256)            256 BYTES FOR COMMAND       HD JUN86
         SPACE 1                                               HD NOV86
*                                                              WFJFEB89
* THIS TABLE MAPS THE LAST CHARACTER OF THE SYSID TO THE       WFJFEB89
* CORRECT FIRST CHARACTER OF ELIGIBLE TSO VOLUMES FOR THAT     WFJFEB89
* SYSTEM                                                       WFJFEB89
*                                                              WFJFEB89
SYSTABI  DC    CL2'A^'             USE WORK PACKS FOR APLA     HD MAY89
         DC    CL2'BA'             MAPPING FOR APLB            WFJFEB89
         DC    CL2'CH'             MAPPING FOR APLC            WFJFEB89
         DC    CL2'DD'             MAPPING FOR APLD            WFJFEB89
SYSTEND  DC    XL2'FFFF'           END OF SYSTEM TABLE         WFJFEB89
SYSTABL  EQU   *-SYSTABI           LENGTH OF SYSTEM TABLE      WFJFEB89
         SPACE 1                                               HD MAY89
NOT      EQU   C'^'                DESIGNATES A WORK VOLUME    HD MAY89
*                                  10 ENTRY VOLUME TABLE       WFJJAN89
VOLTABI  DC    X'05'               VOLUME TABLE CONSTANT       WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'11'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'17'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'23'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'29'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'35'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'41'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'47'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'53'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
         DC    X'59'                                           WFJJAN89
         DC    CL6'XXXTSX'                                     WFJJAN89
VOLTEND  DC    X'FF',XL6'00'       END OF VOLUME TABLE         HD JUN87
VOLTABL  EQU   *-VOLTABI           LENGTH OF VOLUME TABLE      HD JUN87
         EJECT
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**             PUTLINE MESSAGES                             *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
MESS01   TSOMSG 'PDF080I FAULT OCCURED PROCESSING ISPF PROFILE FILE+'
         SPACE 2
MESS02   TSOMSG 'PDF081I INITIALIZATION TERMINATED DUE TO THIS ERROR'
         SPACE 2
MESS03   TSOMSG 'PDF082I A NEW ISPF PROFILE DATASET HAS BEEN CREATED ONX
                VOLUME XXXXXX'                                 HD SEP87
MESS03L  EQU   *-MESS03                                        HD SEP87
         SPACE 2
MESS04   TSOMSG 'PDF085I DSORG OF PROFILE CLIST MUST BE PHYSICAL SEQUENX
               TIAL'                                        *HMD 04/86*
         SPACE 2
MESS05   TSOMSG 'PDF086I ALLOCATION ERROR OCCURED FOR PROFILE COMMAND PX
               ROCEDURE+'                                      HD JUN86
         SPACE 2
MESS06   TSOMSG 'PDF087I COMMAND OR COMMAND PROCEDURE NOT EXECUTED'
         SPACE 2                                            *HMD 04/86*
MESS07   TSOMSG 'PDF088I STACK FAILURE PROCESSING COMMAND OR PROCEDURE'
         SPACE 2                                            *HMD 04/86*
MESS08   TSOMSG 'PDF089I INVALID ENVIRONMENT FOR TSO INITIALIZATION+'
         SPACE 2
MESS09   TSOMSG 'PDF090I INITIALIZATION ROUTINE MAY NOT BE EXECUTED FROX
               M WITHIN A COMMAND PROCEDURE'                *HMD 04/86*
         SPACE 2                                               HD JUN86
MESS10   TSOMSG 'PDF100I FAULT OCCURED PARSING THE COMMAND OPERANDS+'
         SPACE 2                                            *HMD 04/86*
MESS11   TSOMSG 'PDF101I SPECIFIED COMMAND IS TOO LONG TO PROCESS+'
         SPACE 2                                            *HMD 04/86*
MESS12   TSOMSG 'PDF112I VOLUME NOT AVAILABLE TO CREATE ISPF PROFILE DA+
               TA SET+'
         SPACE 2
MESS13   TSOMSG 'PDF113I SYSTEM ID NOT MATCHED. UNABLE TO CREATE ISPF P+
               ROFILE DATA SET+'                               WFJFEB89
         SPACE 2
MESS14   TSOMSG 'PDF114I ACF2 VALIDATION FAILED. UNABLE TO CREATE ISPF +
               PROFILE DATA SET+'                              WFJFEB89
         SPACE 2
MESS15   TSOMSG 'PDF115I A NEW ISPF PROFILE DATASET HAS BEEN CREATED ONX
                A WORK VOLUME ON THIS SYSTEM'                  WFJFEB89
MESS15L  EQU   *-MESS15                                        WFJFEB89
         SPACE 2
*************************************************************HMD 04/86*
**                                                          *HMD 04/86*
**           MISCELLANEOUS EQUIVILENCES                     *HMD 04/86*
**                                                          *HMD 04/86*
*************************************************************HMD 04/86*
RLINK    EQU   14                LINKAGE REGISTER           *HMD 04/86*
RRC      EQU   15                RETURN CODE REGISTER       *HMD 04/86*
         EJECT                                                 HD JUN86
***************************************************************HD JUN86
**                                                             HD JUN86
**           PARSE CONTROL PARAMETERS                          HD JUN86
**                                                             HD JUN86
***************************************************************HD JUN86
PDFTAB   IKJPARM
         SPACE 1
KEYISPF  IKJKEYWD DEFAULT='ISPF'
         IKJNAME  'ISPF'
         IKJNAME  'NOISPF'
         SPACE 1
KEYCMD   IKJKEYWD
         IKJNAME  'COMMAND',SUBFLD=CMDSUBF,ALIAS='CMD'
         SPACE 2
CMDSUBF  IKJSUBF
CMD      IKJPOSIT QSTRING,UPPERCASE,                                   +
               PROMPT='A QUOTED TSO COMMAND FOR POST-PROCESSING+',     +
               HELP=('A QUOTED STRING REPRESENTING A TSO COMMAND AND IT+
               S POSITIONAL AND KEYWORD PARAMETERS+','A STRING OF CHARA+
               CTERS BETWEEN TWO QUOTATION MARKS TO BE PLACED ON THE IN+
               PUT STACK')
         IKJENDP
         EJECT
***************************************************************HD JUN86
**                                                             HD JUN86
**           DYNAMIC STORAGE AREA                              HD JUN86
**                                                             HD JUN86
***************************************************************HD JUN86
TSODSECT DSECT                   RESUME USER AREA
         SPACE 1
DYNFLAG  DS    X                 DYNAMIC ALLOCATION FLAG    *HMD 04/86*
DYNOK    EQU   X'00' .... ....   DYNAMIC ALLOC WAS FINE     *HMD 04/86*
DYNFAIL  EQU   X'FF' 1111 1111   DYNAMIC ALLOC FAILED       *HMD 04/86*
DYNCNF   EQU   X'FE' 1111 111.   CLIST DSN NOT FOUND        *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
PARSFLAG DS    X                 PARSE FLAG                    HD JUN86
PNOISPF  EQU   X'80' 1... ....   NOISPF KEYWORD SPECIFIED      HD JUN86
PCMD     EQU   X'40' .1.. ....   CMD STRING SPECIFIED          HD JUN86
PARSFAIL EQU   X'01' .... ...1   ERROR OCCURED IN PARSE        HD JUN86
         SPACE 1                                               HD NOV86
SMFID    DS    0F                SAVE AREA FOR SMF SYSTEM ID   WFJJAN89
         DS    CL3                                             WFJFEB89
SYSID    DS    CL1                                             WFJFEB89
         SPACE 1                                               WFJJAN89
HOMEID   DS    C                 SAVE AREA FOR "HOME SYSTEM" IDWFJFEB89
         SPACE 1                                               WFJFEB89
TIMESAVE DS    F                 SAVE AREA FOR TOD             HD NOV86
         SPACE 1                                               HD JUN86
SAVRLINK DS    F                 LINKAGE REGISTER SAVE      *HMD 04/86*
STAKLINK DS    F                 LINKAGE REGISTER SAVE      *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
PTPB     PUTLINE MF=L            PUTLINE PARM BLOCK         *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
STKPB    STACK   MF=L            STACK PARM BLOCK           *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
OLD      DS    F                 NUMBER OF SEGMENTS         *HMD 04/86*
         DS    F                 POINTER TO MESSAGE LINE    *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
OLD1     DS    A                 POINTER TO OLD2            *HMD 04/86*
         DS    F                 NUMBER OF SEGMENTS         *HMD 04/86*
         DS    A                 POINTER TO MESSAGE LINE    *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
OLD2     DS    A                 ZERO - END OF CHAIN        *HMD 04/86*
         DS    F                 NUMBER OF SEGMENTS         *HMD 04/86*
         DS    A                 POINTER TO MESSAGE LINE    *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
**************************                                     HD SEP87
** DYNAMIC MESSAGE AREA **                                     HD SEP87
**************************                                     HD SEP87
MESSDYN  DS    CL84              MESSAGE AREA                  HD SEP87
*                                                              WFJFEB89
* SYSTEM TABLE                                                 WFJFEB89
*                                                              WFJFEB89
SYSTAB   DS    0F                  NUMBER OF ENTRIES MUST      WFJFEB89
ENTRY1   DS    CL2                                             HD MAY89
ENTRY2   DS    CL2                 MATCH CONSTANT SYSTABI      HD MAY89
ENTRY3   DS    CL2                                             HD MAY89
ENTRY4   DS    CL2                                             HD MAY89
SYSTABE  DS    XL2               END OF TABLE INDICATOR        WFJFEB89
SYSTLEN  EQU   *-SYSTABE         ENTRY LENGTH                  WFJFEB89
************************                                       HD SEP87
** VOLUME TABLE       **                                       HD SEP87
************************                                       HD SEP87
VOLTAB   DS    0F                                              HD JUN87
ENTRY#1  DS    XL1,CL6           NUMBER OF ENTRIES MUST        HD JUN87
ENTRY#2  DS    XL1,CL6              MATCH CONSTANT VOLTABI     HD JUN87
ENTRY#3  DS    XL1,CL6                ================         HD JUN87
ENTRY#4  DS    XL1,CL6                ================         HD JUN87
ENTRY#5  DS    XL1,CL6                ================         HD JUN87
ENTRY#6  DS    XL1,CL6                                         WFJJAN89
ENTRY#7  DS    XL1,CL6                                         WFJJAN89
ENTRY#8  DS    XL1,CL6                                         WFJJAN89
ENTRY#9  DS    XL1,CL6                                         WFJJAN89
ENTRY#10 DS    XL1,CL6                                         WFJJAN89
VOLTABE  DS    XL1,CL6           END OF TABLE INDICATOR        HD JUN87
VOLTLEN  EQU   *-VOLTABE                                       HD JUN87
         SPACE 1                                               HD JUN87
GFPTR    DS    F                 POINTER TO GNRLFAIL PARM LIST HD JUN86
SVC99RC  DS    F                 SVC99 RETURN CODE          *HMD 04/86*
S99ID    DS    H                 2 BYTE IKJEFF18 ID FIELD   *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
         IKJEFFDF DFDSECT=NO     IKJEFF18 PARM LIST         *HMD 04/86*
         SPACE 1                                               HD JUN86
         IKJEFFGF GFDSECT=NO     IKJEFF19 PARM LIST            HD JUN86
         SPACE 2                                            *HMD 04/86*
APRB1    DS    F                 POINTER TO SVC99 REQUEST BLOCKS
         SPACE 1
RB1      DS    5F                SVC 99 REQUEST BLOCK
         SPACE 1
RB1P1    DS    F                 POINTER TO SVC99 TEXT UNIT 01
RB1P2    DS    F                 POINTER TO SVC99 TEXT UNIT 02
RB1P3    DS    F                 POINTER TO SVC99 TEXT UNIT 03
RB1P4    DS    F                 POINTER TO SVC99 TEXT UNIT 04
RB1P5    DS    F                 POINTER TO SVC99 TEXT UNIT 05
RB1P7    DS    F                 POINTER TO SVC99 TEXT UNIT 07
RB1PA    DS    F                 POINTER TO SVC99 TEXT UNIT 0A
RB1PC    DS    F                 POINTER TO SVC99 TEXT UNIT 0C
RB1P10   DS    F                 POINTER TO SVC99 TEXT UNIT 10
RB1P15   DS    F                 POINTER TO SVC99 TEXT UNIT 15
RB1P30   DS    F                 POINTER TO SVC99 TEXT UNIT 30
RB1P3C   DS    F                 POINTER TO SVC99 TEXT UNIT 3C
RB1P42   DS    F                 POINTER TO SVC99 TEXT UNIT 42
RB1P49   DS    F                 POINTER TO SVC99 TEXT UNIT 49
         SPACE 1
RB1TU1   DS    XL14              SVC99 TEXT UNIT 01 - DDNAME
         SPACE 1
RB1TU2   DS    F                 SVC99 TEXT UNIT 02 - DSNAME
PDSNLEN  DS    H                 LENGTH OF DATASET NAME     *HMD 04/86*
PDSNAME  DS    CL44              DATA SET NAME              *HMD 04/86*
         SPACE 1
RB1TU3   DS    F                 PROFILE.CLIST DSNAME PTR   *HMD 04/86*
CDSNLEN  DS    H                 LENGTH OF BUILD DSNAME     *HMD 04/86*
CDSNAME  DS    CL44              DATA SET NAME              *HMD 04/86*
         SPACE 1
RB1TU4   DS    XL7               SVC99 TEXT UNIT 04 - DS STATUS
RB1TU5   DS    XL7               SVC99 TEXT UNIT 05 - DS DISPOSITION
RB1TU7   DS    XL9 BLOCK LENGTH  SVC99 TEXT UNIT 07 - BLKLEN*HMD 04/86*
RB1TUA   DS    XL9               SVC99 TEXT UNIT 0A - PRIMARY SPACE
RB1TUC   DS    XL9               SVC99 TEXT UNIT 0C - DIRECTORY BLKS
RB1TU10  DS    XL12              SVC99 TEXT UNIT 10 - VOL SER
RB1TU15  DS    XL(6+L'UNIT)      SVC99 TEXT UNIT 15 - UNIT
RB1TU30  DS    XL8               SVC99 TEXT UNIT 30 - BLKSIZE
RB1TU3C  DS    XL8               SVC99 TEXT UNIT 3C - DSORG
RB1TU42  DS    XL8               SVC99 TEXT UNIT 42 - LRECL
RB1TU49  DS    XL7               SVC99 TEXT UNIT 49 - RECFM
         SPACE 1                                            *HMD 04/86*
ANSWER   DS    2F                ANSWER FROM LIST GETMAIN   *HMD 04/86*
         SPACE 1                                               HD JUN86
LGM      GETMAIN LU,MF=L         LIST FORM GETMAIN          *HMD 04/86*
         SPACE 1                                               HD JUN86
CCT441L  CALL  ,(0,0,0,0,0,0),MF=L                          *HMD 04/86*
         SPACE 1                                               HD JUN87
UCBCALL  CALL  ,(0,0,0),MF=L     UCB LOOKUP ROUTINE            HD JUN87
         SPACE 2                                            *HMD 04/86*
UCBWORK  DS    XL100             WORK AREA FOR UCB LOOKUP      HD JUN87
UCBUNIT  DS    A                 UNIT CONTROL BLOCK ADDRESS    HD JUN87
UCBFLAG  DS    X                 FLAG - CHECK ONLY DASD        HD JUN87
         SPACE 2                                               HD JUN87
ECODE    DS    A                                            *HMD 04/86*
NAMEPTR  DS    A                                            *HMD 04/86*
NAMELEN  DS    F                                            *HMD 04/86*
VALUEPTR DS    A                                            *HMD 04/86*
VALUELEN DS    F                                            *HMD 04/86*
TOKEN    DS    F                                            *HMD 04/86*
         SPACE 1                                            *HMD 04/86*
AREALEN  EQU   *-TSOUSER
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJDAP08                                           *HMD 04/86*
         EJECT                                              *HMD 04/86*
         IKJUPT                                             *HMD 04/86*
         EJECT                                              *HMD 04/86*
         IKJPSCB                                            *HMD 04/86*
         EJECT                                              *HMD 04/86*
         IKJLSD                                             *HMD 04/86*
         EJECT                                              *HMD 04/86*
         IKJTSVT                                            *HMD 04/86*
         EJECT                                              *HMD 04/86*
         IEFUCBOB LIST=YES                                     HD JUN87
         EJECT                                                 HD JUN87
         IHAPSA                    PREFIXED STORAGE AREA       WFJFEB89
         EJECT                                                 WFJFEB89
         IHAASCB                   ADDR. SPACE CONTROL BLOCK   WFJFEB89
         EJECT                                                 WFJFEB89
         ACCVT                     ACF2 COMM. VECTOR TABLE     WFJFEB89
         EJECT                                                 WFJFEB89
         ACFASVT                   ACF2 ADDRESS SPACE VEC. TBL WFJFEB89
         EJECT                                                 WFJFEB89
         ACUCB                     ACF2 ADDRESS SPACE CON. BLK WFJFEB89
         EJECT                                                 WFJFEB89
         CVT   LIST=YES,DSECT=YES                           *HMD 04/86*
         END
