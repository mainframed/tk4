++ USERMOD (LM52900).
++ VER (Z038) FMID (HDZ11C0)
   /*
                        CUNY MOD LM52900


     INSTALL THE CUNY DFP DADSM EXIT ROUTINES (IGGPRE00/IGGPOST0).

                                 * * *

                THE FOLLOWING FUNCTIONS ARE INCLUDED:

         ALLOCATE, RENAME, EXTEND: VALIDATE THE DSNAME (RE LOCAL
                STANDARDS)

         ALLOCATE, RENAME: ENSURE THAT THE DATASET (THE NEW DSNAME,
                FOR RENAME) IS NOT ALREADY CATALOGED ON ANOTHER VOLUME
                AND, IF THE DSNAME IS A GDG NAME, IT HAS A GDG BASE
                ENTRY IN THE CATALOG

         ALLOCATE, EXTEND: CALL RACF TO CHECK AUTHORITY TO CREATE
                DATASETS ON THIS VOLUME; ADD CUNY INFORMATION TO THE
                FORMAT 1 DSCB


                             **  NOTES  **

     THIS CODE USES THE CVT USER FIELD, CVTUSER.

     MODULE IGGPOST0 IS DELETED BY THIS INSTALL.  IGGPOST0 BECOMES
     AN ALIAS ENTRY IN LMOD IGGPRE00, AS THE ROUTINES SHARE MUCH CODE.

   */.
++ JCLIN.
//LM52900A EXEC LINKS,NAME=LPALIB,PARM=RENT
//SYSLIN DD *
 INCLUDE CULIB(IGGPRE00)
 ENTRY IGGPRE00
 ALIAS IGGPOST0
 NAME  IGGPRE00(R)
/*
//LM52900B EXEC LINKS,NAME=LINKLIB
//SYSLIN DD *
 INCLUDE CULIB(PREPOST0)
 NAME PREPOST0(R)
/*
++ MOD (IGGPOST0) DELETE DISTLIB (AOSD0).
++ SRC (PREPOST0) DISTLIB (ASOURCE) SYSLIB (SOURCE) DISTMOD (CULIB).
PREPOST0 TITLE '           DADSM EXIT "SUBSYSTEM" ROUTINE - LM52900'
************                          *********************************
* PREPOST0 *                          *  VERSION 1.2,  2 OCTOBER 1996 *
************                          *********************************
*
*
*
*        THIS ROUTINE IS USED TO FORCE ALLOCATION OF A USERCATALOG TO
*        THE *MASTER* ASID FOR LATER USE BY THE DADSM EXIT ROUTINE,
*        IGGPRE00.  DETAILED COMMENTARY IS PROVIDED IN THAT MODULE.
*
*
*        AN ENTRY IN A SYS1.PARMLIB IEFSSNXX MEMBER IS REQUIRED
*        FOR THIS ROUTINE.  THE FORMAT IS
*
*            PRPO,PREPOST0
*
*        THE SUBSYSTEM NAME, "PRPO", IS ARBITRARY (BUT MUST BE UNIQUE).
*
*
*        NOTE THAT ALTHOUGH THIS ROUTINE IS ENTERED FOR SUBSYSTEM
*        INITIALIZATION--FOR CONVENIENCE AND EASE OF INSTALLATION--
*        THE DADSM EXIT IS NOT A SUBSYSTEM (I.E., IT DOES NOT
*        PROCESS IEFSSREQ REQUESTS).  THE SIMPLEST WAY TO NOT BE A
*        SUBSYSTEM IS TO DO NOTHING:  ALLOCATE NO SSVT, AND LEAVE THE
*        SSCTSSVT POINTER ZERO.  HENCE, THESE ARE (NOT) DONE.
*
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTIONS                 *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*        THIS ROUTINE REQUIRES *NO* INSTALLATION-DEPENDENT
*        CUSTOMIZATION (UNLESS YOU WISH TO CHANGE THE CONSOLE
*        MESSAGE NUMBERS).  THE CATALOG TO BE ALLOCATED IS
*        DEFINED IN IGGPRE00, IN ROUTINE "SPECINIT".
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTIONS                 *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*
*        SEND BRICKBATS TO:
*
*           ARON EISENPRESS
*           MANAGER, MVS SYSTEMS
*           CITY UNIVERSITY OF NEW YORK
*           COMPUTING AND INFORMATION SERVICES
*           555 WEST 57TH STREET, 16TH FLOOR
*           NEW YORK, NEW YORK  10019-2919
*
*           PHONE: 212/541-0918
*
*           EMAIL: AFECU@CUNYVM.CUNY.EDU
*
*
*
*        ATTRIBUTES:
*
*           KEY ZERO *
*           SUPERVISOR STATE *
*           NON-REENTRANT
*           NONRESIDENT, IN LINKLIB
*
*           * (THIS ROUTINE DOESN'T REQUIRE KEY ZERO OR SUPERVISOR
*              STATE, BUT THAT'S THE STATE IN WHICH SUBSYSTEM
*              INITIALIZATION ROUTINES GET CONTROL.  IT MUST BE AN
*              AUTHORIZED TASK, THOUGH--EITHER KEY OR STATE SUFFICE
*              FOR THAT--IN ORDER TO ISSUE THE ALLOCATE SVC.)
*
*
*        SYSTEM LEVEL: MVS/XA DFP/XA V2.4 (HDP2240)
*
*
*        RETURN CODES USED: NONE
*
*
*        ASSEMBLY OF THIS MODULE REQUIRES ASSEMBLER H DUE TO THE USE
*        OF FORWARD REFERENCES IN DEFINING SEVERAL LENGTH FIELDS.
*
*
*
*        MESSAGES ISSUED:
*
*         CNY656I DADSM EXIT IS NOT PRESENT, PLEASE NOTIFY SYSTEMS
*                  PROGRAMMING
*         CNY657I DADSM EXIT INITIALIZATION INCOMPLETE, PLEASE NOTIFY
*                  SYSTEMS PROGRAMMING
*         CNY658I DADSM EXIT INITIALIZATION COMPLETE
*
*
*        N.B. THIS MODULE DOES NOT PROVIDE A STANDARD SAVE AREA.
*             ONE IS NOT NEEDED FOR SVC CALLS, AND THERE ARE NO
*             OTHER EXTERNAL CALLS IN THIS CODE.
*
*
*
*
*        ********************
*        * MODIFICATION LOG *
*        ********************
*
*        VERSION 1.1, 22 JULY 1991
*          -- ADDED AMODE/RMODE FOR MVS/XA, AND UPDATED COMMENTS.
*
*        VERSION 1.2, 2 OCTOBER 1996
*          -- UPDATED FOR NEW RETURN CODE FORMAT FOR DF/SMS.
         TITLE '           ENTRY POINT'
**************************
* PREPOST0 - ENTRY POINT *
**************************
*
*        REGISTER USAGE:
*
*           R1 = WORK
*           R2 = BASE
*           R3 = WORK (SYSRES UCB ADDRESS)
*           R4 = WORK (REALLOC SPACE QUANTITY)
*
PREPOST0 CSECT ,
         SPACE ,
         SAVE  (14,12),,PREPOST0-&SYSDATE  SAVE REGISTERS AT ENTRY
         LR    R2,R15              GET A BASE REGISTER
         USING PREPOST0,R2
         USING PSA,R0              REQUIRED "USING" FOR LOW-CORE
         SPACE ,
*              ENSURE THAT WE ARE RUNNING IN THE *MASTER* ASID (1)
         SPACE ,
         L     R1,PSAAOLD          GET @ CURRENT ASCB
         USING ASCB,R1
         CLC   ASCBASID,MASTERAS   IS IT *MASTER*?
         BNE   EXIT                NO, IGNORE THIS INVOCATION (NO MSG)
         DROP  R1
         TITLE '           ISSUE DADSM ALLOCATION CALL'
******************************************
* PREPOST0 - ISSUE DADSM ALLOCATION CALL *
******************************************
*
*        ATTEMPT TO ALLOCATE A SPECIALLY-NAMED DATASET.
*
*        THE DSNAME AND THE ASID ARE A KEY TO THE DADSM EXIT
*        (IGGPRE00) TO PERFORM SPECIAL PROCESSING.
*
*        NOTE THAT THE DATASET WILL NEVER GET ALLOCATED UNLESS THE
*        DADSM EXIT IS NOT PRESENT.  ALSO, IT DOES NOT MATTER IF THE
*        DATASET ALREADY EXISTS, BECAUSE THE EXIT GETS CONTROL BEFORE
*        DADSM ALLOCATION'S DUPLICATE-NAME CHECK TAKES PLACE.
*
*        THE DATASET ALLOCATION IS SPECIFIED AS ZERO TRACKS ON THE
*        SYSRES VOLUME (MOSTLY FOR CONVENIENCE).
*
*        NOTE THAT THE PARTIAL DSCB USED FOR REALLOC MUST HAVE THE
*        DS1FMTID FIELD SET -- OTHERWISE A FORMAT 0 DSCB IS CREATED!
*
         SPACE ,
         L     R3,FLCCVT           ADDRESS THE CVT
         USING CVT,R3
         L     R3,CVTSYSAD         GET THE ADDRESS OF THE SYSRES UCB
         USING UCB,R3
         MVC   DS1DSSN-IECSDSL1+PDSCB,UCBVOLI  COPY THE REAL VOLID (TO
*                                  LOOK PRETTY IN CASE EXIT IS ABSENT)
         DROP  R3
         SPACE ,
         XR    R4,R4               INDICATE A SPACE QUANTITY OF ZERO
         SPACE ,
*              ISSUE THE REALLOC MACRO TO INVOKE DADSM ALLOCATION
         SPACE ,
         REALLOC DSSIZE=(R4),PDSCB=PDSCB,UCB=(R3),MF=(E,REALLOC)
         TITLE '           ANALYZE ALLOCATION RETURN CODE'
*********************************************
* PREPOST0 - ANALYZE ALLOCATION RETURN CODE *
*********************************************
*
*        ANALYZE THE RETURN CODE FROM DADSM ALLOCATION.
*
*        THIS ROUTINE EXPECTS THE DADSM EXIT TO HAVE REJECTED THE
*        ALLOCATION (WHICH RESULTS IN A DADSM RETURN CODE OF X'B4)
*        WITH A REASON CODE OF 901.  IF THE EXIT DID GOT CONTROL BUT
*        WAS UNABLE TO INITIALIZE PROPERLY, IT WILL RETURN A REASON
*        CODE OF 902.  ANY OTHER REASON CODE OR RETURN CODE INDICATES
*        THAT THE EXIT DID NOT GET CONTROL FROM DADSM FOR SOME REASON.
*
*        NOTE THAT AS OF DFP VERSION 3 AND UP, THE RETURN CODE IS IN
*        REGISTER 15 BY ITSELF, AND THE IGGPRE00 REASON CODE IS IN THE
*        LOW-ORDER 2 BYTES OF REGISTER 0.  (THE REASON CODE USED TO BE
*        IN THE HIGH-ORDER 2 BYTES OF REGISTER 15.)
*
         SPACE ,
         C     R15,PRE00ERR        TEST RETURN CODE FOR IGGPRE00 ERROR
         BNE   NOT902              EXIT DIDN'T REJECT US -- IT'S NOT IN
         SPACE ,
*              THE RETURN CODE INDICATES REJECTION BY IGGPRE00; NOW
*              CHECK THE REASON CODES.
         SPACE ,
         CLM   R0,B'0011',RC901    TEST REASON CODE FOR SUCCESS
         BNE   NOT901              BIF NOT
         SPACE ,
*              NOTE THAT A "SUCCESS" MESSAGE ISN'T REALLY NEEDED
*              EXCEPT THAT WITHOUT ONE THERE'S NO WAY TO TELL IF
*              THIS ROUTINE WAS INVOKED AT ALL.
         SPACE ,
         WTO   'CNY658I DADSM EXIT INITIALIZATION COMPLETE',DESC=4,    *
               ROUTCDE=2
         B     EXIT
         SPACE 2
*              TEST REASON CODE FOR FAILURE-REJECTION-BY-DADSM-EXIT
         SPACE ,
NOT901   CLM   R0,B'0011',RC902     YES, TEST FOR IT
         BNE   NOT902               BIF NOT
         SPACE ,
         WTO   'CNY657I DADSM EXIT INITIALIZATION INCOMPLETE, PLEASE NO*
               TIFY SYSTEMS PROGRAMMING',DESC=11,ROUTCDE=(2,10)
         B     EXIT
         SPACE 2
*              DADSM EXIT DID NOT IDENTIFY THIS REQUEST AND IS
*              THEREFORE PRESUMED MISSING OR DEAD.
         SPACE ,
NOT902   WTO   'CNY656I DADSM EXIT IS NOT PRESENT, PLEASE NOTIFY SYSTEM*
               S PROGRAMMING',DESC=11,ROUTCDE=(2,10)
         SPACE 2
EXIT     RETURN (14,12),RC=0       RETURN TO OUR CALLER
         TITLE '           CONSTANT AND INCONSTANT VALUES'
*          *****************************
*          * CONSTANTS AND INCONSTANTS *
*          *****************************
         SPACE 2
MASTERAS DC    H'1'                ASID NUMBER OF *MASTER* ASID
         SPACE 2
*              THE FOLLOWING ARE RETURN CODES FROM REALLOC (SVC 32)
*              IN R15: THE ALLOCATE RETURN CODE (X'B4' MEANS THE EXIT
*                      REJECTED ALLOCATION FOR THE VOLUME)
*              IN R0: THE REASON CODE IS THE LOW-ORDER HALFWORD
         SPACE ,
         DS    0F
PRE00ERR DC    AL4(X'B4')          RETURN CODE FOR IGGPRE00 RC=4
         SPACE ,
RC901    DC    AL2(901)            EXIT REASON CODE FOR SUCCESSFUL INIT
         SPACE ,
RC902    DC    AL2(902)            EXIT REASON CODE FOR INIT FAILURE
         SPACE 2
REALLOC  REALLOC MF=L              REALLOC PARAMETER LIST (LIST FORMAT)
         SPACE 2
PDSCB    DC    XL(DS1END-IECSDSL1)'00'  ZEROED PARTIAL DSCB FOR REALLOC
         SPACE ,
         ORG   PDSCB               ORG BACK TO INSERT DSNAME
         DC    CL(L'DS1DSNAM)'SYS1.EARTHMAN TO IBM: CALL 1-800-IGG-PRE0*
               0'                  STRANGE DSNAME INDICATING INIT CALL
         SPACE ,
         ORG   PDSCB+DS1FMTID-IECSDSL1  ORG TO FMTID FIELD
         DC    C'1'                FORMAT-1 IDENTIFIER
         SPACE ,
         ORG   ,                   THEN ORG TO END OF PDSCB
         TITLE '           SYSTEM DSECTS'
*          *****************
*          * SYSTEM DSECTS *
*          *****************
*
*        THE FOLLOWING DSECTS ARE DEFINED HERE:
*
*        REGISTER EQUATES (MACRO YREGS)
*        ASCB (MACRO IHAASCB)
*        CVT (MACRO CVT)
*        DSCB1 (MACRO IECSDSL1) - FORMAT 1 DSCB
*        PSA (MACRO IHAPSA)
*        UCB (MACRO IEFUCBOB)
         SPACE 2
         YREGS ,                   DEFINE REGISTERS
         TITLE '           SYSTEM DSECTS  -  ASCB  (IHAASCB)'
         IHAASCB
         TITLE '           SYSTEM DSECTS  -  CVT  (CVT)'
         CVT   DSECT=YES
         TITLE '           SYSTEM DSECTS  -  DSCB1  (IECSDSL1)'
DSCB1    DSECT
         IECSDSL1 1
         TITLE '           SYSTEM DSECTS  -  PSA  (IHAPSA)'
         IHAPSA
         TITLE '           SYSTEM DSECTS  -  UCB  (IEFUCBOB)'
UCB      DSECT ,
         IEFUCBOB
         SPACE 3
         END   PREPOST0
++ SRC (IGGPRE00) DISTLIB (ASOURCE) SYSLIB (SOURCE) DISTMOD (CULIB).
PREPOST  TITLE 'IGGPRE00/IGGPOST0 - DFP DADSM EXIT ROUTINES - LM52900'
*********************               ***********************************
* IGGPRE00/IGGPOST0 *               * VERSION 1.13,   26 AUGUST 1997  *
*********************               ***********************************
*
*
*        THESE ROUTINES PREFORM SPECIAL LOCAL PROCESSING FOR ALLOCATE,
*        RENAME, AND EXTEND.
*
*
*        THE FOLLOWING FUNCTIONS ARE INCLUDED:
*
*
*        ALLOCATE, RENAME, EXTEND: VALIDATE THE DSNAME (RE LOCAL
*               STANDARDS)
*
*        ALLOCATE, RENAME: ENSURE THAT THE DATASET (THE NEW DSNAME,
*               FOR RENAME) IS NOT ALREADY CATALOGED ON ANOTHER VOLUME
*               AND, IF THE DSNAME IS A GDG NAME, IT HAS A GDG BASE
*               ENTRY IN THE CATALOG
*
*        ALLOCATE, EXTEND: CALL RACF TO CHECK AUTHORITY TO CREATE
*               DATASETS ON THIS VOLUME; ADD CUNY INFORMATION TO THE
*               FORMAT 1 DSCB
*
*  *****************************************************************
*  *****************************************************************
*  **                                                             **
*  **                      * CAVEAT *                             **
*  **                                                             **
*  **    THIS EXIT MAKES USE OF CATALOG MANAGEMENT FUNCTIONS      **
*  **    THAT ARE NOT PUBLISHED EXTERNAL INTERFACES.  THEY ARE:   **
*  **                                                             **
*  **      1) ISSUE SUPERLOCATE VIA SVC 26.                       **
*  **                                                             **
*  **      2) TEMPORARILY INSERT A SAVED CATALOG ACB ADDRESS IN   **
*  **         THE PCCB WHEN AN INITIATOR CALLS DADSM ALLOCATE.    **
*  **         THIS HAS A DEPENDENCY ON A CATALOG'S ACB ADDRESS    **
*  **         (PCCACBP) BEING INVARIANT BETWEEN ADDRESS SPACES.   **
*  **                                                             **
*  **    THIS EXIT ALSO FORCES THE USERCATALOG THAT'S NEEDED      **
*  **    FOR THE DATASET-CATALOGABILITY CHECKS TO REMAIN OPEN     **
*  **    AND PERMANENTLY ALLOCATED TO THE *MASTER* ASID.          **
*  **                                                             **
*  **    CAVEAT: IF THIS USERCATALOG IS SHARED ACROSS MULTIPLE    **
*  **    PROCESSORS, THEN IF A SHARING PROCESSOR CAUSES THE       **
*  **    INDEX TO EXTEND TO A NEW DASD EXTENT, IT IS THOUGHT      **
*  **    THAT MSG IEC331I 004-66 WILL RESULT AND THE LOCATE       **
*  **    WILL FAIL.  IT'S THOUGHT THAT THIS WON'T HAVE ANY REAL   **
*  **    IMPACT ON THE CATALOG'S AVAILABILITY, AS ANY LOCATE      **
*  **    TO THAT CATALOG FROM ANOTHER CALLER SHOULD SUCCESSFULLY  **
*  **    GO THROUGH EOV AND UPDATE THE CATALOG CONTROL BLOCKS.    **
*  **                                                             **
*  **                                                             **
*  *****************************************************************
*  *****************************************************************
*
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTIONS                 *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*        SECTIONS OF CODE WHICH IMPLEMENT INSTALLATION-DEPENDENT
*        STANDARDS OR FUNCTIONS ARE ENCLOSED IN BOXES LIKE THE ONES
*        HERE.  THE ROUTINES IN THIS VERSION ARE, OF COURSE, FOR THE
*        CITY UNIVERSITY OF NEW YORK/COMPUTING & INFORMATION SERVICES.
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*        THIS MODULE REQUIRES USE OF A WORD ADDRESSABLE THROUGH THE
*        CVT; AS DISTRIBUTED THIS WORD IS THE CVT USER FIELD,
*        CVTUSER.  THIS CODE IS LOCATED FOLLOWING LABELS "SPECI60"
*        AND "SUPLOC40".
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTIONS                 *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*
*        SEND BRICKBATS TO:
*
*           ARON EISENPRESS
*           MANAGER, MVS SYSTEMS
*           CITY UNIVERSITY OF NEW YORK
*           COMPUTING AND INFORMATION SERVICES
*           555 WEST 57TH STREET, 16TH FLOOR
*           NEW YORK, NEW YORK  10019-2919
*
*           PHONE: 212/541-0918
*
*           EMAIL: AFECU@CUNYVM.CUNY.EDU
*
*
*        ATTRIBUTES:
*
*           KEY ZERO
*           SUPERVISOR STATE
*           REENTRANT
*           RESIDENT IN LPALIB
*
*
*        SYSTEM LEVEL: MVS/ESA DFSMS V1.3 (HDZ11C0)
*
*
*        RETURN CODES USED:
*
*            0 - CONTINUE DADSM PROCESSING
*            4 - REJECT ALLOCATION FOR THIS VOLUME
*                 REASON CODES:
*                    1 - DATASET CANNOT BE CATALOGED
*                    2 - DSNAME DOES NOT CONFORM TO STANDARDS
*                    3 - REQUIRED GDG BASE NOT CATALOGED
*                    4 - RACF DENIED AUTHORITY TO CREATE DATASET ON VOL
*                  901 - SPECIAL INITIALIZATION CALL COMPLETED OK
*                  902 - SPECIAL INITIALIZATION CALL FAILED
*
*
*        EXTERNAL ROUTINES OR MODIFICATIONS REQUIRED:
*
*         PREPOST0: THIS ROUTINE MUST BE DEFINED AS A SUBSYSTEM
*                   INITIALIZATION ROUTINE.  IT'S USED TO FORCE ANY
*                   REQUIRED USERCATALOG(S), AS DEFINED HERE IN
*                   ROUTINE "SPECINIT", TO BE ALLOCATED AND OPENED.
*
*         SYS1.PARMLIB: AN ENTRY IN AN IEFSSNXX MEMBER IS REQUIRED
*                   TO INVOKE PREPOST0 DURING SYSTEM INITIALIZATION.
*
*         JES2/JES3/DYNALLOC: EXIT CODE IS REQUIRED TO FORCE NEW
*                   DATASETS TO BE CATALOGED--I.E., TO CHANGE DISP=
*                   (,KEEP), TO DISP=(,CATLG).  THESE EXITS ARE
*                   DISCUSSED IN MORE DETAIL TWO PAGES HENCE.
*
*         WYLBUR: IF WYLBUR OR A SIMILAR TEXT-EDITING/JOB SUBMISSION
*                   SYSTEM IS USED, IT MUST BE MODIFIED TO RECOGNIZE
*                   THE RETURN CODES ISSUED HERE.
*
*
*        A NOTE REGARDING RETURN CODES:
*
*         IBM'S DOCUMENTATION ONLY ALLUDES TO THE ACTUAL VALUES
*         RETURNED TO THE DADSM CALLER.  HERE'S WHAT THEY ARE:
*
*         ALLOCATE (SVC 32): R15 CONTAINS X'B4' FOR A RETURN CODE
*                   OF 4 FROM THIS EXIT.  THE LOW-ORDER HALFWORD
*                   OF R0 CONTAINS THE REASON CODE SUPPLIED BY
*                   THIS EXIT.
*
*         RENAME (SVC 30): R15 IS 8 ("UNUSUAL CONDITION ENCOUNTERED"),
*                   AND THE STATUS CODE IN THE VOLUME LIST ENTRY IS
*                   SET TO 4 (WHICH COULD ALSO INDICATE AN I/O ERROR;
*                   THERE'S NO WAY TO TELL).
*
*
*        ASSEMBLY OF THIS MODULE REQUIRES ASSEMBLER H DUE TO THE USE
*        OF FORWARD REFERENCES IN DEFINING SEVERAL LENGTH FIELDS.
*
*
*
*        MESSAGES ISSUED:
*
*         CNY651I XXXXXXXX REQUEST DENIED, DATASET NAME IS ALREADY
*                  CATALOGED ON VVVVVV:
*         CNY652I XXXXXXXX REQUEST DENIED, DSNAME DOES NOT CONFORM
*                  TO CUNY STANDARDS:
*         CNY653I  VOLUME=VVVVVV, DSNAME=DDDDDDDDDDDDDDDDDDDD...
*         CNY654I XXXXXXXX REQUEST DENIED, REQUIRED GDG BASE IS NOT
*                  CATALOGED:
*         CNY655I XXXXXXXX REQUEST DENIED, NO RACF AUTHORITY TO CREATE
*                  DATASETS ON THIS VOLUME:
*         CNY659I DADSM EXIT HAS ABENDED, SYSTEM CODE=SSS, JOB=JJJJJJJJ
*
*
*        PROGRAM FUNCTIONAL ROUTINES:
*
*        IGGPRE00 - PRE-EXIT MAINLINE
*        IGGPOST0 - POST-EXIT MAINLINE
*        EXIT     - EXIT (I.E., GO AWAY) ROUTINE
*        PREALL   - PRE-EXIT ALLOCATE FUNCTION
*        PREREN   - PRE-EXIT RENAME FUNCTION
*        PREEXT   - PRE-EXIT EXTEND FUNCTION
*        COMMON   - PRE-EXIT COMMON FUNCTIONS
*        ERROR    - EXIT ERROR EXIT ROUTINES
*        SPECINIT - SPECIAL INITIALIZATION ENTRY ROUTINE
*        SUPERLOC - CATALOG SUPERLOCATE ROUTINE
*        DSNCHECK - DSNAME STANDARDS CHECK
*        RACCHECK - RACF AUTHORITY CHECK
*        VOLDSNIN - VOLUME & DSNAME INITIAL CHECK
*        MODDSCB  - FORMAT 1 DSCB MODIFICATION ROUTINE  *CUNY CODE*
*        INITPPWA - WORKAREA INITIALIZATION
*        ENQCHECK - SYSZTIOT ENQ INITIALIZATION AND CHECK
*        FINDSIOT - SCAN DSAB CHAIN AND LOCATE SIOT (ALLOCATE ONLY)
*        AUTHCHK  - AUTHORIZATION CHECK & PROGRAM NAME DETERMINATION
*        ESTAEXIT - ESTAE EXIT
*        PPWA     - WORK AREA DSECT
*        CONSTANTS
*        SYSTEM DSECTS
*
*
*
*
*        ********************
*        * MODIFICATION LOG *
*        ********************
*
*        VERSION 1.1, 30 JUNE 1987
*          -- ADD CHECK FOR GDG BASE ENTRY IN CATALOG WHEN DSNAME
*             LOOKS LIKE A GDG.  ADDED NEW MESSAGE (CNY654I) AND
*             ADDITIONAL REASON CODE (3).
*          -- ALLOW IEHMOVE COPY/MOVE TO BYPASS CATALOGABILITY TESTS.
*          -- REVISE CUNY VOLUME LIST.
*
*        VERSION 1.2, 15 JANUARY 1988
*          -- ADD CODE TO DETECT VVDS AUTOMATIC ALLOCATION.  IT WAS
*             BEING REJECTED (INVALID DSNAME) FOR NON-PRIV'ED USERS
*             BECAUSE IT WAS NOT RECOGNIZED AS A VSAM ALLOCATION.
*          -- REVISE CUNY VOLUME LIST.
*
*        VERSION 1.3, 01 JUNE 1988
*          -- ALLOW CATALOG ALLOCATION IN THE "SUPERLOC" ROUTINE
*             *IF* THE EXIT WAS CALLED FOR RENAME.  THIS LETS THE
*             THE CATALOGABILITY CHECK ALWAYS WORK FOR RENAMES.
*          -- UPDATE SOME INCORRECT COMMENTARY.
*
*        VERSION 1.4, 15 OCTOBER 1990
*          -- ADD RACROUTE TO CHECK RACF AUTHORITY TO CREATE DATASETS
*             ON A SPECIFIC VOLUME.
*          -- CUNY STAFF JOBS ARE NO LONGER EXEMPT FROM DSNAME CHECKS.
*          -- UPDATE COMMENTARY AS APPROPRIATE.
*
*        VERSION 1.5, 16 APRIL 1991
*          -- REMOVE MOST MODIFICATIONS FROM FORMAT 1 DSCB, AND
*             ELIMINATE THE USE OF SVC 255.
*
*        VERSION 1.6, 25 APRIL 1991
*          -- THE CUNY VOLUME LIST IS UPDATED TO BE MORE INCLUSIVE.
*
*        VERSION 1.7, 22 JULY 1991
*          -- MODIFIED FOR DFP/XA.  ADDED AMODE/RMODE; REMOVED USE OF
*             CUNYCVT (CVTUSER IS NOW USED); UPDATED COMMENTS.
*
*        VERSION 1.8, 24 JANUARY 1992
*          -- CORRECTED AN 0C4 AFTER LABEL "GOTPRB" WHEN A PRB CREATED
*             BY SYNCH HAD A ZERO CDE ADDRESS.
*          -- EXPANDED INFORMATION RETURNED IN SDWA.
*          -- MOVED ESTAE EXIT CODE AFTER CONSTANT AREA TO PROVIDE FOR
*             ADDITIONAL ADDRESSABILITY.
*          -- RESEQUENCED ENTIRE MODULE.
*
*        VERSION 1.9, 20 NOVEMBER 1992
*          -- BYPASS THIS EXIT FOR AN SMS-MANAGED VOLUME.
*          -- BYPASS ERROR MESSAGES WHEN AN ALLOCATE REQUEST FOR A
*             NON-SPECIFIC VOLUME WITH A SYSTEM-GENERATED DSNAME FAILS
*             ON A STORAGE VOLUME DUE TO A NON-CONFORMING DSNAME.  NOTE
*             THAT THE REQUEST IS STILL FAILED; ONLY THE MESSAGES ARE
*             BYPASSED.  MVS ALLOCATION WILL RETRY ON OTHER VOLUMES
*             BEFORE IT FAILS THE JOB.
*          -- UPDATE THE VOLUME PREFIX LIST, REMOVING "BMD" AND "RKD".
*          -- BYPASS DSNAME VALIDATION FOR THE IBM SERVICE DIRECTOR
*             (TSO USERID SRVIM) WHEN IT ATTEMPTS TO ALLOCATE A SYS3.
*             DATASET ON A CNY VOLUME.
*
*        VERSION 1.10, 7 OCTOBER 1993
*          -- BYPASS ERROR MESSAGES WHEN AN ALLOCATE REQUEST FOR A
*             NON-SPECIFIC VOLUME FAILS ON A PUBLIC VOLUME DUE TO LACK
*             OF RACF PERMISSION.  NOTE THAT THE REQUEST IS STILL
*             FAILED; ONLY THE MESSAGES ARE BYPASSED.  MVS ALLOCATION
*             WILL RETRY ON OTHER VOLUMES BEFORE IT FAILS THE JOB.
*             THIS MAKES IT POSSIBLE TO SET UP SCRATCH (PUBLIC)
*             VOLUMES WITH LIMITED ACCESS.
*          -- USE LOG=NONE ON THE RACROUTE FOR AN ALLOCATE REQUEST THAT
*             MEETS THE ABOVE CONDITIONS.  OTHERWISE THERE ARE RACF
*             LOGGING MESSAGES FOR EACH REJECTED ATTEMPT.
*          -- ADDED AN ADDITIONAL GLOBAL BASE REGISTER.
*
*        VERSION 1.11, 30 SEPTEMBER 1994
*          -- ADD CODE AT "MODDSCB3" TO SET THE CREATION TIME "HIGH"
*             IF TODAY'S DATE DIFFERS FROM THE VALUE TO BE SAVED AS
*             THE DATASET'S CREATION DATE.
*
*        VERSION 1.12, 8 OCTOBER 1996
*          -- UPDATES FOR MVS/ESA AND DFSMS:
*             - CHANGE USAGE OF "SIOPSCNT" TO "SIOTSMS6".  SIOPSCNT
*               USED TO BE RECOMMENDED (SEE INFO ITEM Q352076) BUT IT
*               NO LONGER EXISTS AT THIS LEVEL.  CODE INSPECTION SHOWS
*               THAT IEFDB414 AND IEFVDA SET SIOTSMS6 WHEN ANY VOLUME-
*               RELATED JCL KEYS ARE SPECIFIED, SO THAT FLAG IS NOW
*               TESTED HERE.
*             - CODE TO CLEAR DSCB1 FIELDS USED BY CUNY MODS IN OLDEN
*               TIMES WAS REMOVED, AS THOSE FIELDS ARE NOW DEFINED AND
*               USED BY DFSMS.
*             - CODE AT MODDSCB TO BYPASS THE PROBLEM DESCRIBED BY
*               OY44612 IS REMOVED, AS THAT'S BEEN FIXED AT HBB4430.
*             - COMMENTS WERE UPDATED FOR THE CHANGE IN THE LOCATION
*               OF THE REASON CODE (NOW IN R0 FOR THE CALLER OF THE
*               ALLOCATION SVCS).
*             - CHANGE THE EPA (FOR THE SWAREQ CALL) TO BE AN EXTENDED
*               EPA (LENGTH OF SWAEPAX) TO FIX OCCASIONAL 0C4 FAILURES.
*               THIS REQUIREMENT IS POORLY DOCUMENTED...
*             - EXCLUDE "FDRABR." DATASETS FROM DSNAME VALIDATION WHEN
*               THE PROGRAM IS "FDR...".
*             - UPDATE TO FINDSIOT ROUTINE TO TAKE ACCOUNT OF THE FACT
*               THAT THE JFCB PASSED TO IGGPRE00 IS NOW A *COPY* OF THE
*               ACTUAL JFCB, SO A COMPARE ON THE JFCB ADDRESS WILL
*               NEVER MATCH.  WE NOW COMPARE THE CONTENTS OF THE JFCB
*               (ON THE ASSUMPTION THAT THERE WILL NOT BE TWO IDENTICAL
*               JFCBS FOR A TEMPORARY ALLOCATION ON THE SAME VOLUME).
*             THE DATASET'S CREATION DATE.
*
*        VERSION 1.13, 26 AUGUST 1997
*          -- CHANGE TESTAUTH TO SPECIFY RBLEVEL=1 TO AVOID ABEND 177.
         TITLE 'IGGPRE00 - COMMENTARY ON REQUIRED EXTERNAL MODIFICATION*
               S'
*          *************************************************
*          * COMMENTARY ON REQUIRED EXTERNAL MODIFICATIONS *
*          *************************************************
*
*
*        THIS PAGE DESCRIBES THE CODE THAT'S REQUIRED EXTERNAL TO
*        THIS EXIT TO CHANGE THE DISP FOR NEW DATASETS FROM "KEEP" TO
*        "CATLG".  THIS FUNCTION *CANNOT* BE IMPLEMENTED WITHIN THIS
*        EXIT BECAUSE IT'S TOO LATE HERE -- ANY REQUIRED USERCATALOGS
*        MUST HAVE BEEN DETERMINED BY THE INITIATOR PRIOR TO THIS
*        POINT, SO THAT THEY WILL BE ALLOCATED AT TERMINATION TIME.
*        (OTHERWISE MESSAGE IEC331I 004-002 WILL RESULT, AND THE
*        DATASET WON'T GET CATALOGED.)
*
*
*        THE FOLLOWING EXITS APPEAR TO BE APPROPRIATE PLACES FOR THIS
*        CODE:
*
*        FOR JES3: EXIT IATUX06 IS CALLED AFTER CONVERTER/INTERPRETER
*                  PROCESSING AND CAN ACCESS THE JFCB AND SIOT FOR
*                  EACH DD CARD.
*
*        FOR JES2: SMF STEP INITIATION EXIT IEFUSI CAN ACCESS THE JFCB
*                  AND SIOT CONTROL BLOCKS (THOUGH THAT'S NOT PART OF
*                  THE PUBLISHED EXTERNAL INTERFACE FOR THE EXIT, BUT
*                  NOTE THAT THE LCT *IS* ADDRESSABLE FROM R10 THERE).
*                  JES2 EXIT 6 OR SMF EXIT IEFUJV COULD ALSO BE USED,
*                  BUT THE DD CARD INFORMATION THERE IS IN INTERNAL-
*                  TEXT FORMAT, WHICH ISN'T AS SIMPLE TO DEAL WITH.
*                  (IT ALSO MAY BE POSSIBLE TO ACCESS THE JFCB AND
*                  SIOT IN SWA WHEN IEFUJV IS CALLED WITH ENTRY CODE
*                  32 (INTERPRETATION COMPLETED), BUT THIS PROBABLY
*                  WOULDN'T BE A DOCUMENTED PART OF THE INTERFACE.)
*
*        FOR DYNAMIC ALLOCATION: EXIT IEFDB401 CAN INSPECT AND CHANGE
*                  THE DYNALLOC PARAMETER LISTS.
*
*
*        THE LOGIC IN EACH INSTANCE IS AS FOLLOWS:
*
*        DETERMINE WHETHER THE DATASET MUST BE CATALOGED ACCORDING
*           TO INSTALLATION STANDARDS.  (THIS TEST OUGHT TO AGREE
*           WITH THE INSTALLATION-DEPENDENT CODING IN THIS EXIT).
*        IF SO, CHECK IF THE DISP IS (NEW,KEEP).
*        IF SO, CHANGE THE DISP TO (NEW,CATLG).
*
*        IF FEASIBLE, THE EXIT SHOULD ALSO IDENTIFY RECEIVED PASSED
*           DATASETS WITH DISP=(OLD,KEEP) WHICH WERE CREATED IN THE
*           CURRENT JOB, AND THEN CHANGE THEIR DISP TO (OLD,CATLG).
*           THIS IS DEFINITELY POSSIBLE IN THE JES3 EXIT, IATUX06.
*
*
*        NOTE THAT ANY OF THESE EXITS THAT USE THE JFCB AND SIOT WILL
*        NEED TO BE UPDATED FOR MVS/XA 2.2+, TO SUPPORT THE RELOCATION
*        OF SWA ABOVE THE 16 MEG LINE.
         TITLE 'IGGPRE00/POST0 - COMMENTARY ON FUNCTIONAL LIMITATIONS'
*              ****************************************
*              * COMMENTARY ON FUNCTIONAL LIMITATIONS *
*              ****************************************
*
*
*        THIS PAGE DESCRIBES THE LIMITATIONS ON DATASETS THAT CAN BE
*        PROCESSED BY THIS EXIT, EITHER FOR THE CATALOGABILITY CHECK
*        OR FOR DSNAME VALIDATION.
*
*
*                 CATALOGABILITY-CHECK LIMITATIONS:
*
*        A DATASET WILL NOT BE VALIDATED FOR CATALOGABILITY IF ANY
*        OF THE FOLLOWING IS TRUE:
*
*           DATASET IS VIO
*           DATASET IS VSAM (DSORG=AM)
*           DATASET IS CURRENTLY CATALOGED ON MORE THAN ONE VOLUME
*           VOLUME IS SMS-MANAGED
*           CATALOG SUPERLOCATE ENCOUNTERS AN I/O ERROR
*           CALLING PROGRAM IS DFHSM
*           CALLING PROGRAM IS DFDSS
*           CALLING PROGRAM IS FDRDSF
*           DATASET IS ISAM AND IS NOT THE FIRST IN THE ALLOCATION
*           CALLING PROGRAM IS THE INITIATOR AND A STEPCAT EXISTS
*           CALLING PROGRAM IS DYNAMIC ALLOCATION AND THE REQUIRED
*               USERCATALOG WAS NOT ALLOCATED IN THE STEP (THIS
*               OCCURS WHEN THE DATASET'S DISP IS NOT ",CATLG")
*           CALLING PROGRAM IS THE INITIATOR AND THE PREPOST0
*               "SUBSYSTEM" INITIALIZATION ROUTINE DID NOT
*               SUCCESSFULLY ALLOCATE THE REQUIRED USERCATALOG
*           CALLING PROGRAM IS NOT THE INITIATOR AND THE REQUIRED
*               USERCATALOG IS NOT CURRENTLY ALLOCATED AND OPEN,
*               AND THE DADSM FUNCTION IS "ALLOCATE"
*           CALLING PROGRAM IS IEHMOVE (IEHMVESV)
*
*
*                 DSNAME-STANDARDS LIMITATIONS:
*
*        A DATASET WILL BE EXCLUDED FROM THE DSNAME STANDARDS CHECK
*        IF ANY OF THE FOLLOWING IS TRUE:
*
*           DATASET IS VIO
*           DATASET IS VSAM (DSORG=AM)
*           VOLUME IS SMS-MANAGED
*           CALLING PROGRAM IS DFHSM
*           CALLING PROGRAM IS ICKDSF
*           CALLING PROGRAM IS IEHMOVE (IEHMVESV) AND THE DSNAME
*               BEGINS WITH &&TEMP.T (WHICH IS CREATED FOR A "MOVE
*               DSNAME" TO THE SAME VOLUME)
*           CALLING PROGRAM IS FDR... AND THE DSNAME BEGINS WITH
*               "FDRABR."
         TITLE 'IGGPRE00/POST0 - COMMENTARY ON UNIMPLEMENTED FUNCTIONS'
*              *****************************************
*              * COMMENTARY ON UNIMPLEMENTED FUNCTIONS *
*              *****************************************
*
*
*        A NUMBER OF OTHER FUNCTIONS MIGHT BE DESIRED IN THIS EXIT
*        BUT HAVE NOT BEEN IMPLEMENTED AT THIS TIME.  THIS COMMENTARY
*        DESCRIBES KNOWN PITFALLS, RESTRICTIONS, AND IMPLEMENTATION
*        TECHNIQUES.
*
*
*        FUNCTION: CATALOG OR UNCATALOG A DATASET IN IGGPOST0
*
*        THIS FUNCTION MAY BE EASY OR DIFFICULT DEPENDING ON THE
*        SPECIFIC SITUATION.  THESE ARE SOME KNOWN CAVEATS:
*
*        IN MOST CASES, CAMLST BYTE 1 BIT 0 MUST BE SET, TO INHIBIT
*            DYNAMIC ALLOCATION (THIS SETS CTGDOCAT IN THE CTGPL).
*        IF THE SYSZTIOT ENQ IS HELD, CAMLST BYTE 2 BIT 3 MUST BE SET.
*        IF A REQUIRED USERCATALOG IS NOT ALREADY OPEN, IT'S PROBABLY
*            NOT POSSIBLE TO CATALOG OR UNCATALOG A DATASET HERE. CODE
*            SIMILAR TO THAT IN THE SUPERLOCATE ROUTINE (FOLLOWING
*            LABEL SUPLOC30) MIGHT BE SAFE, BUT ONLY AFTER THE CALLING
*            ENVIRONMENT IS CAREFULLY DEFINED AND ANALYZED.
*
*
*        FUNCTION: TSO SUPPORT
*
*        THE CATALOG CHECK IS NOT NECESSARY FOR TSO, AS TSO DOES
*        CHECK THE CATALOG BEFORE CREATING A NEW DATASET.  HOWEVER,
*        THE OTHER FUNCTIONS (SUCH AS RACF AUTHORIZATION, DSNAME
*        VALIDATION, CHECKING FOR A GDG BASE, AND FORMAT 1 DSCB
*        UPDATES) ARE STILL BE VALUABLE.  THIS EXIT DOES WORK WITH
*        TSO WITHOUT PROBLEMS (ALTHOUGH THE MESSAGE THAT TSO ISSUES,
*        "IKJ56223 SPACE REQUEST DENIED BY INSTALLATION EXIT", IS
*        A BIT MISLEADING).
*
*
*        FUNCTION: MVS/XA SUPPORT
*
*        THIS EXIT HAS BEEN TESTED AND MODIFIED TO WORK WITH
*        MVS/XA 2.2 (DFP/XA 2.4).  A POSSIBLE EXPOSURE, THOUGH,
*        IS THAT THE AUTOMATIC CATALOG REORIENTATION AFTER CATALOG
*        RECOVERY MIGHT AFFECT THE EXIT'S USE OF A SAVED CATALOG
*        ACB POINTER.
*
*        NOTE THAT THE EXIT MUST EXECUTE IN 31-BIT MODE WITH DFP 2.3+
*        (SEE APAR OY12910), AS THE JFCB ADDRESS MAY BE ABOVE THE
*        16-MEG LINE.  BECAUSE RACROUTE IS A 31-BIT INTERFACE TO
*        RACF, AMODE(31) RMODE(ANY) *IS* VALID FOR RACF.
*
*        FOR MVS/ESA(TM), THERE DOESN'T SEEM TO BE ANY REASON THAT
*        THE EXIT WON'T WORK, BUT IT HASN'T BEEN TESTED YET.  NOTE
*        THAT SYSTEM-MANAGED DATASETS (USING THE NEW DFSMS) MUST BE
*        CATALOGED, SO THE EXIT WON'T BE NEEDED FOR THEM.
*
*
*        FUNCTION: SUPPORT OF DATASETS CATALOGED IN OS CVOLS OR
*                  VSAM (NON-ICF) CATALOGS
*
*        OS CVOLS ARE NOT SUPPORTED; THEY DO NOT USE AN ACB, AND THE
*        LOGIC IN "SPECINIT" WILL NOT WORK.  NON-ICF CATALOGS HAVE
*        NOT BEEN TESTED; ANY CHANGES NEEDED WOULD PROBABLY BE IN THE
*        SUPERLOCATE ROUTINE.  FOR REFERENCE, SEE INITIATOR MODULES
*        IEFAB469 (JLOCATE) AND IEFAB4F4/5 (UN/ALLOCATE CATALOG).
         TITLE 'IGGPRE00 - PRE-DADSM EXIT MAINLINE'
********************************
* IGGPRE00 - PRE-EXIT MAINLINE *
********************************
*
*        THIS IS THE IGGPRE00 ENTRY FOR PROCESSING BEFORE THE
*        DADSM SYSTEM ROUTINES.
*
*        THIS ROUTINE PERFORMS INITIAL PROCESSING AS COMMENTED BELOW.
*
*        GLOBAL REGISTER USAGE:
*           R2, R3 = BASE
*           R4 = EXIT RETURN CODE (PRESET TO 0)
*           R5 = EXIT WORK AREA (PPWA)
*           R9 = LOCAL RETURN REGISTER
*           R11 = EXIT PARAMETER LIST (IECIEXPL)
*           R13 = SAVE AREA POINTER (NOT SET UNTIL PPWA IS INITIALIZED)
*
IGGPRE00 CSECT ,
IGGPRE00 AMODE 31
IGGPRE00 RMODE ANY
         SPACE ,
         SAVE  (14,12),,IGGPRE00-&SYSDATE  SAVE REGISTERS AT ENTRY
         LR    R2,R15              GET A BASE REGISTER
         USING IGGPRE00,R2
         LA    R3,IGGPRE00+4095    GET A 2ND BASE REGISTER
         USING IGGPRE00+4095,R3
         USING PSA,R0              REQUIRED "USING" FOR LOW-CORE
         SPACE ,
*              GET EXIT PARAMETER LIST (IECIEXPL)
         SPACE ,
         LR    R11,R1              GET ADDRESS OF PRE-PROCESSING
         USING PREPL,R11               EXIT PARAMETER LIST
         SPACE ,
*              PRESET THE EXIT RETURN CODE (R4) TO ZERO.
         SPACE ,
         XR    R4,R4               PRESET IT HERE...
         SPACE ,
*              PRESET THE PPWA POINTER (R5) TO ZERO, INDICATING
*              TO THE EXIT ROUTINE THAT THERE IS NO PPWA
         SPACE ,
         XR    R5,R5
         SPACE ,
*              MAKE A QUICK EXIT ON ENTRY CONDITIONS FOR WHICH
*              WE DO NO PROCESSING:
*                    PARTIAL RELEASE
*                    SCRATCH
*                    VIO DATASET
*                    EXTEND ON CURRENT VOLUME
*                    VOLUME IS SMS-MANAGED
         SPACE ,
         CLI   IEXFUNC,IEXPR       PARTIAL RELEASE?
         BE    EXIT                 YES, QUICK EXIT
         CLI   IEXFUNC,IEXSCR      SCRATCH?
         BE    EXIT                 YES, QUICK EXIT
         SPACE ,
*              VIO DATASETS ARE SKIPPED SINCE THEY HAVE NO VOLUMES
*              TO VALIDATE & CAN'T BE CATALOGED & CAN'T HAVE PASSWORD
*              PROTECTION & THIS EXIT CAN'T PASS A MODEL DSCB FOR THEM
*              ANYWAY.
         SPACE ,
         TM    IEXFLAG,IEXVIO      VIO DATASET?
         BO    EXIT                 YES, QUICK EXIT
         CLI   IEXFUNC,IEXEXT      EXTEND?
         BNE   PRE01                (NO)
         CLI   IEXEXTCD,X'04'      ON NEW VOLUME?
         BNE   EXIT                 NO, QUICK EXIT
PRE01    DS    0H
         SPACE ,
         L     R1,IEXUCB           @ UCB, FROM EXIT PARM LIST
         USING UCBOB,R1
         TM    UCBFL5,UCBSMS       IS VOLUME SMS-MANAGED?
         BO    EXIT                 YES, QUICK EXIT
         DROP  R1
         SPACE ,
*              SET UP WORK AREA (PPWA)
         SPACE ,
*              NOTE THAT INITPPWA SETS R13 AND CHAINS THE SAVE AREAS
         SPACE ,
         BAL   R9,INITPPWA         GO GETMAIN & INITIALIZE PPWA
*                                  ADDRESS IS RETURNED IN R5
         USING PPWA,R5             SET UP ADDRESSABILITY
         SPACE ,
*              SET UP ESTAE EXIT
         SPACE ,
         ESTAE ESTAEXIT,CT,PARAM=(R5),TERM=YES,PURGE=NONE,ASYNCH=YES,  *
               MF=(E,WAESTAE)
         SPACE ,
         OI    WAFLAG1,WAFESTAE    SHOW THAT THE ESTAE IS ESTABLISHED
         SPACE ,
*              INITIALIZE THE ENQ PARAMETERS AND CHECK IF THE SYSZTIOT
*              RESOURCE IS HELD BY THIS TASK
         SPACE ,
         BAL   R9,ENQCHECK
         SPACE ,
*              SAVE THE PROGRAM NAME IF IT'S AN AUTHORIZED PROGRAM
         SPACE ,
         BAL   R9,AUTHCHK
         SPACE ,
*              ROUTE PROCESSING ACCORDING TO DADSM FUNCTION CODE
         SPACE ,
         CLI   IEXFUNC,IEXALL      ALLOCATE?
         BE    PREALL               BIF SO
         CLI   IEXFUNC,IEXEXT      EXTEND (ON A NEW VOLUME)?
         BE    PREEXT               BIF SO
         CLI   IEXFUNC,IEXREN      RENAME?
         BE    PREREN               BIF SO
         SPACE ,
*              NOTE THAT DFP/XA HAS TWO ADDITIONAL ENTRY TYPES:
*               - X'06' "PARTREL" PARTIAL RELEASE
*               - X'07' EXTEND (VSAM CALLER WITHOUT DEB PARAMETER)
*              THESE (AND ANY MORE) WILL END UP HERE AND THEN EXIT.
         SPACE ,
         B     EXIT                LEFTOVERS (S.N.O.) GO TO EXIT
         TITLE 'IGGPOST0 - POST-DADSM EXIT MAINLINE'
*********************************
* IGGPOST0 - POST-EXIT MAINLINE *
*********************************
*
*        THIS IS THE IGGPOST0 ENTRY FOR PROCESSING AFTER THE
*        DADSM SYSTEM ROUTINES.
*
*        THIS ROUTINE CURRENTLY PERFORMS NO PROCESSING.
*
*        IF ANY FUNCTIONAL CODE IS ADDED HERE, THE ESTAE ENVIRON-
*        MENT MUST BE REESTABLISHED (AS FOR THE IGGPRE00 ENTRY).
*
*        REGISTER USAGE:
*           R2, R3 = BASE
*           R4 = EXIT RETURN CODE (PRESET TO 0)
*           R5 = EXIT WORK AREA (PPWA)
*           R11 = EXIT PARAMETER LIST (IECIEXPL)
*
         ENTRY IGGPOST0
         SPACE ,
IGGPOST0 SAVE  (14,12),,*          SAVE REGISTERS AT ENTRY
         DROP  R2                  GLOBAL BASE IS NOT VALID NOW
         USING IGGPOST0,R15        THIS ONE IS ALL WE GOT
         L     R2,BASEADDR         GET BACK A GOOD VALUE
         DROP  R15
         USING IGGPRE00,R2         REINSTATE GLOBAL BASE
         LA    R3,IGGPRE00+4095    GET OUR 2ND BASE REGISTER
         USING IGGPRE00+4095,R3
         SPACE ,
*              GET EXIT PARAMETER LIST (IECIEXPL)
         SPACE ,
         LR    R11,R1              GET ADDRESS OF PRE-PROCESSING
*                                      EXIT PARAMETER LIST
         SPACE ,
*              PRESET THE EXIT RETURN CODE (R4) TO ZERO.
         SPACE ,
         XR    R4,R4               PRESET IT HERE...
         SPACE ,
*              FIND THE PRE/POST WORKAREA
         SPACE ,
         L     R5,IEXRSVWD         GET SAVED ADDRESS FROM PARM LIST
         LTR   R5,R5               IS THERE ONE?
         BZ    EXIT                NO WORK AREA, JUST RETURN
         SPACE ,
*              SET OUR FLAG TO SHOW WE'RE IN POST0.  THIS WILL ALERT
*              THE EXIT ROUTINE TO FREE THE WORK AREA.
         SPACE ,
         OI    WAFLAG1,WAFPOST0    SET IGGPOST0 FLAG
         SPACE ,
*              RETURN TO DADSM
         SPACE ,
         B     EXIT                (YEAH, I KNOW IT'S THE NEXT INSTR)
         TITLE 'EXIT     - IGGPRE00/IGGPOST0 EXIT ROUTINE'
******************************
* EXIT     - GO-AWAY ROUTINE *
******************************
*
*        THIS ROUTINE RETURNS CONTROL FROM IGGPRE00 AND IGGPOST0
*        BACK TO THE DADSM SYSTEM ROUTINES.  THE ESTAE IS CANCELLED
*        IF ACTIVE, AND THE PPWA IS FREED ON EXIT FROM IGGPOST0.
*
*        INPUT REGISTERS:
*           R4 = RETURN CODE TO BE PASSED BACK TO DADSM
*           R5 = ADDRESS OF PPWA, OR ZERO IF NO PPWA
*
*        FLAG "WAFESTAE" INDICATES IF OUR ESTAE IS ACTIVE (AND
*           THEREFORE MUST BE CANCELLED)
*        FLAG "WAFPOST0" INDICATES WE ARE EXITING FROM IGGPOST0
*           (AND THEREFORE MUST FREE THE PPWA)
*
EXIT     DS    0H
         SPACE ,
*              RESTORE R13 FROM THE SAVE AREA IN THE PPWA IF WE ARE
*              EXITING FROM IGGPRE00
*
*              NOTE THAT IGGPOST0 DOES *NOT* USE THE SAVE AREA, AS
*              ONE IS NOT NEEDED FOR SVC CALLS AND IT MAKES NO OTHER
*              EXTERNAL CALLS
         SPACE ,
         LTR   R5,R5               TEST FOR PPWA, CANNOT RESTORE R13
         BZ    EXIT1               IF THERE IS NONE
         TM    WAFLAG1,WAFPOST0    TEST IF THIS EXIT IS FROM IGGPOST0
         BO    EXIT1               BRANCH IF YES
         L     R13,SAVEAREA+4      IT'S IGGPRE00, RESTORE SAVED R13
         SPACE ,
EXIT1    DS    0H
         SPACE ,
*              CANCEL THE ESTAE EXIT IF THERE IS ONE
         SPACE ,
         LTR   R5,R5               TEST FOR PPWA, IF NOT THEN NO ESTAE
         BZ    EXIT2               SKIP THIS IF NO
         TM    WAFLAG1,WAFESTAE    TEST IF ESTAE IS ACTIVE
         BZ    EXIT2               SKIP THIS IF NO
         SPACE ,
         ESTAE 0                   ELSE CANCEL ESTAE, COMME CA
         SPACE ,
         NI    WAFLAG1,255-WAFESTAE  AND RESET PPWA FLAG TOO
         SPACE ,
EXIT2    DS    0H
         SPACE ,
*              FREEMAIN THE PPWA IF EXITING FROM IGGPOST0
         SPACE ,
         LTR   R5,R5               TEST FOR PPWA, IF NONE DON'T FREE IT
         BZ    EXIT3               SKIP THIS IF NONE
         TM    WAFLAG1,WAFPOST0    TEST IF EXIT IS FROM IGGPOST0
         BZ    EXIT3               SKIP THIS IF NO
         SPACE ,
         FREEMAIN RU,LV=WAEND-PPWA,SP=230,A=(R5)  FREEIT
         SPACE ,
         XR    R5,R5               SHOW THAT THE PPWA IS FREE
         SPACE ,
EXIT3    DS    0H
         SPACE ,
*              RETURN TO DADSM
         SPACE ,
         LR    R15,R4              PUT RETURN CODE IN R15
         RETURN (14,12),RC=(15)    BYE BYE
         SPACE ,
         TITLE 'PREALL   - IGGPRE00 ALLOCATE FUNCTION MAINLINE'
********************************
* PREALL   - ALLOCATE FUNCTION *
********************************
*
*        THIS ROUTINE PERFORMS SPECIFIC INITIALIZATION FOR
*        ALLOCATE PROCESSING, CALLS THE "VOLDSNIN" ROUTINE,
*        AND SETS ANY OTHER ALLOCATION-DEPENDENT FLAGS.
*
*        REGISTER USAGE:
*           R1 = WORK
*
PREALL   DS    0H
         SPACE ,
*              IF THIS ENTRY IS FOR OUR SPECIAL INITIALIZATION, GO
*              DIRECTLY TO THE "SPECINIT" ROUTINE.
         SPACE ,
         TM    WAFLAG2,WAFINIT     IS THE FLAG SET?
         BO    SPECINIT            YES, GO RIGHT TO SPECIAL CODE
         SPACE ,
*              PRESET MESSAGES CNY651/2 TO "ALLOCATE"
         SPACE ,
         MVC   WAC651AL,CON65ALL   LIKE SO
         SPACE ,
*              DETERMINE IF THIS IS A VSAM DATASET.
*              NOTE THAT AUTOMATIC ALLOCATION OF A VVDS PASSES A
*              "PARTIAL" DSCB, THOUGH NORMAL VSAM ALLOCATION DOESN'T.
         SPACE ,
         TM    IEXFLAG,IEXMF1      ENSURE THAT A JFCB IS PRESENT
         BO    PREALL10            BRANCH IF NOT TO TEST "PARTIAL" DSCB
         SPACE ,
*              CALL THE "FINDSIOT" ROUTINE TO LOCATE THE SIOT THAT
*              CORRESPONDS TO THE JFCB.  IT'S CHECKED AT ERROR2,
*              ERROR4, OR IN THE "RACCHECK" ROUTINE.
         SPACE ,
         BAL   R9,FINDSIOT         FIND @ SIOT
         SPACE ,
         L     R1,IEXPTR1
         USING JFCB,R1             GET @ JFCB
         TM    JFCDSRG2,JFCORGAM   IS THIS A VSAM ALLOCATION??
         BZ    PREALL20            NO
         OI    WAFLAG1,WAFVSAM     YES, SET THE FLAG
         DROP  R1
         B     PREALL20            SKIP AROUND PARTIAL-DSCB TESTS
         SPACE ,
PREALL10 L     R1,IEXFMT1          ADDRESS F1 DSCB DATA AREA
         USING DS1FMTID,R1
         TM    DS1DSORG+1,DS1ACBM  IS THIS A VSAM DATASET (ONLY VVDS
         BZ    PREALL20             ALLOCATION USES THIS PATH)?
         OI    WAFLAG1,WAFVSAM     IF SO, SET THE VSAM-DATASET FLAG
         DROP  R1
PREALL20 DS    0H
         SPACE ,
*              CHECK WHAT FURTHER CHECKING IS NEEDED FOR VOLUME/DSNAME
         SPACE ,
         L     R1,IEXDSN           @ DSNAME FROM EXIT PARM LIST
         BAL   R9,VOLDSNIN         CALL VOLUME/DSN INITIAL CHECK
         SPACE ,
*              SET FLAG TO PERFORM RACF CHECK (NOT SET IN "COMMON"
*              BECAUSE IT'S NOT DONE FOR RENAME)
         SPACE ,
         OI    WAFLAG2,WAFRACCK    RACF CHECK IS NEEDED
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              SET FLAG TO PERFORM CUNY FORMAT 1 DSCB MODIFICATIONS
         SPACE ,
         OI    WAFLAGU,WAFMDSCB    MUST GO TO DSCB-MODIFY ROUTINE
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              CONTINUE IN COMMON CODE
         SPACE ,
         B     COMMON              ETC.
         TITLE 'PREREN   - IGGPRE00 RENAME FUNCTION MAINLINE'
******************************
* PREREN   - RENAME FUNCTION *
******************************
*
*        THIS ROUTINE PERFORMS SPECIFIC INITIALIZATION FOR
*        RENAME PROCESSING, CALLS THE "VOLDSNIN" ROUTINE,
*        AND SETS ANY OTHER RENAME-DEPENDENT FLAGS.
*
*        REGISTER USAGE:
*           R1 = WORK
*
PREREN   DS    0H
         SPACE ,
*              PRESET MESSAGES CNY651/2 TO "  RENAME"
         SPACE ,
         MVC   WAC651AL,CON65REN   LIKE SO
         SPACE ,
*              DETERMINE IF THIS IS A VSAM DATASET.
         SPACE ,
         L     R1,IEXFMT1          RENAME ALWAYS PASSES FORMAT 1 DSCB
         USING DS1FMTID,R1         GET IT
         TM    DS1DSORG+1,DS1ACBM  IS THIS A VSAM DATASET??
         BZ    PREREN10            NO
         OI    WAFLAG1,WAFVSAM     YES, SET VSAM FLAG
PREREN10 DS    0H
         DROP  R1
         SPACE ,
*              CHECK WHAT FURTHER CHECKING IS NEEDED FOR VOLUME/DSNAME
         SPACE ,
         L     R1,IEXPTR1          @ RENAME PARM LIST FROM EXIT PARMS
         L     R1,8(,R1)           @ NEW DSNAME FROM RENAME PARM LIST
*                                  (NOTE THAT IEXDSN IS THE *OLD* DSN)
         BAL   R9,VOLDSNIN         CALL VOLUME/DSN INITIAL CHECK
         SPACE ,
*              ANY INSTALLATION-DEPENDENT CODE COULD BE ADDED HERE.
         SPACE ,
*              CONTINUE IN COMMON CODE
         SPACE ,
         B     COMMON              ETC.
         TITLE 'PREEXT   - IGGPRE00 EXTEND FUNCTION MAINLINE'
******************************
* PREEXT   - EXTEND FUNCTION *
******************************
*
*        THIS ROUTINE PERFORMS SPECIFIC INITIALIZATION FOR
*        EXTEND PROCESSING, CALLS THE "VOLDSNIN" ROUTINE,
*        AND SETS ANY OTHER EXTEND-DEPENDENT FLAGS.
*
*        REGISTER USAGE:
*           R1 = WORK
*
PREEXT   DS    0H
         SPACE ,
*              PRESET MESSAGES CNY651/2 TO "  EXTEND"
         SPACE ,
         MVC   WAC651AL,CON65EXT   LIKE SO
         SPACE ,
*              DETERMINE IF THIS IS A VSAM DATASET.
         SPACE ,
         L     R1,IEXPTR1          EXTEND ALWAYS PASSES A JFCB
         USING JFCB,R1             GET @ JFCB
         TM    JFCDSRG2,JFCORGAM   IS THIS A VSAM ALLOCATION??
         BZ    PREEXT10            NO
         OI    WAFLAG1,WAFVSAM     YES, SET THE FLAG
         DROP  R1
PREEXT10 DS    0H
         SPACE ,
*              CHECK WHAT FURTHER CHECKING IS NEEDED FOR VOLUME/DSNAME
         SPACE ,
         L     R1,IEXDSN           @ DSNAME FROM EXIT PARM LIST
         BAL   R9,VOLDSNIN         CALL VOLUME/DSN INITIAL CHECK
         SPACE ,
*              ENSURE THAT NO CATALOG CHECK IS DONE ON EXTEND
*              (IT'S NOT MEANINGFUL...)
         SPACE ,
         NI    WAFLAG1,255-WAFCATCK  RESET "CAT CHECK NEEDED" FLAG
         SPACE ,
*              SET FLAG TO PERFORM RACF CHECK
         SPACE ,
         OI    WAFLAG2,WAFRACCK    RACF CHECK IS NEEDED
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              SET FLAG TO PERFORM CUNY FORMAT 1 DSCB MODIFICATIONS
         SPACE ,
         OI    WAFLAGU,WAFMDSCB    MUST GO TO DSCB-MODIFY ROUTINE
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              CONTINUE IN COMMON CODE
         SPACE ,
         B     COMMON              YES, THIS BRANCHES TO THE NEXT PAGE
*                                   -- BUT IT'S CLEARER THIS WAY.
         TITLE 'COMMON   - IGGPRE00 COMMON FUNCTION MAINLINE'
************************************************
* COMMON   - PRE-EXIT COMMON FUNCTION MAINLINE *
************************************************
*
*        THIS ROUTINE IS ENTERED FOR COMMON PROCESSING OF ALL
*        SUPPORTED FUNCTIONS IN THE PRE-EXIT (IGGPRE00).  IT
*        CALLS THE SUPERLOCATE, DSNAME CHECK, AND OTHER ROUTINES
*        AS REQUIRED, AND DETERMINES IF AN ERROR RETURN IS NEEDED.
*
*        THE FORMAT OF THE DSNAME IS TESTED TO DETERMINE IF IT
*        LOOKS LIKE A GDG, BECAUSE A "PSEUDO-GDG" DATASET CANNOT
*        BE CATALOGED IN AN ICF CATALOG.  IF THE DATASET LOOKS
*        LIKE IT'S A GDG, A SECOND SUPERLOCATE WILL BE DONE TO
*        ENSURE THAT THE GDG BASE *IS* IN THE CATALOG.
*
*        NOTE THAT THIS CODE USES THE "DSNXLATE" TRANSLATE TABLE
*        CONTAINED IN ROUTINE "DSNCHECK".
*
*        NORMAL EXIT: EXIT
*
*        ERROR EXITS: ERROR1 - DATASET CANNOT BE CATALOGED
*                     ERROR2 - DSNAME DOESN'T CONFORM TO STANDARDS
*                     ERROR3 - GDG BASE IS NOT CATALOGED
*                     ERROR4 - NO RACF PERMIT TO CREATE DATASETS ON VOL
*
*        REGISTER USAGE:
*           R1 = WORK
*           R15 = WORK
*
*        NOTE: FIELD "WAWORK1" IS USED TO SAVE THE CONTENTS OF FIELD
*              WADSNAME OVER THE SECOND (GDG BASE) SUPERLOCATE CALL.
*
COMMON   DS    0H
         SPACE ,
*              TEST IF A SUPERLOCATE IS REQUIRED
         SPACE ,
         TM    WAFLAG1,WAFCATCK    WHAT WAS THE DETERMINATION?
         BZ    CATCKOK             SKIP IF NOT NEEDED
         SPACE ,
*              CALL THE SUPERLOCATE ROUTINE
         SPACE ,
         BAL   R9,SUPERLOC
         SPACE ,
*              THIS IS THE RETURN BRANCH TABLE
         SPACE ,
         B     CATGDGCK       +0   DSNAME NOT FOUND IN CATALOG
*                                  (LET'S CHECK IF IT'S A PSEUDO-GDG)
         B     CATCKOK        +4   REQUIRED CATALOG NOT ALLOCATED
*                                  (LET IT THROUGH SINCE WE CAN'T TELL)
         B     CATCKOK        +8   DATASET IS ON MORE THAN 3 VOLUMES
*                                  (SPECS SAY THIS IS OK TOO)
         B     CATCKOK        +12  SOME OTHER ERROR (I/O ERROR?)
*                                  (THIS OUGHT TO PUT OUT A MESSAGE,
*                                   BUT DOESN'T RIGHT NOW)
         B     CATCKOK        +16  DSNAME FOUND IN CATALOG BUT IS A
*                                  GDG BASE
*                                  (WE COULD CHECK THAT THE ALLOCATION
*                                   IS FOR A MODEL DSCB, BUT DON'T)
*        NO BRANCH            +20  DSNAME FOUND IN CATALOG.. INSPECT IT
         SPACE ,
*              DSNAME WAS FOUND IN CATALOG.  IT'S AN ERROR IF
*               1) VOLUME COUNT IS ONE, AND
*               2) VOLUME SERIAL DIFFERS FROM THAT BEING ALLOCATED.
         SPACE ,
         CLC   HONE,CTGWAVCT-CTGWA+WACTGWA  IS IT ONE VOLUME?
         BNE   CATCKOK             IF NOT ASSUME IT'S OK
         CLC   WAUCBVOL,CTGVLVOL-CTGVL+WACTGVL  IS IT THE SAME ONE???
         BNE   ERROR1              IF NOT IT'S AN ERROR.
*              NOTE THAT THE CATALOG ENTRY'S DEVICE TYPE ISN'T
*              VALIDATED.  THAT CAN'T BE DONE TRIVIALLY.
         SPACE ,
         B     CATCKOK
         SPACE 2
*              DSNAME WAS NOT FOUND IN CATALOG.  IT'S AN ERROR *IF* IT
*              LOOKS LIKE A GDG BUT HAS NO GDG BASE ENTRY CATALOGED.
         SPACE ,
CATGDGCK L     R1,WADSNAME         GET @ DSNAME
         LA    R1,L'JFCBDSNM-1(R1)  GET LAST CHARACTER OF DSNAME
         SPACE ,
GDGLOOP  CLI   0(R1),C' '          SCAN FOR LAST NON-BLANK CHARACTER
         BNE   GDGLOOP2            EXIT WHEN IT'S BEEN FOUND
         BCT   R1,GDGLOOP          BACK UP AND LOOP
         SPACE ,
GDGLOOP2 SH    R1,HEIGHT           BACK UP 8 MORE (TO .G0000V00)
         C     R1,WADSNAME         ENSURE WE'RE STILL IN THE DSNAME
         BNH   CATCKOK             BIF NOT, IT CAN'T BE A GDG
         SPACE ,
*              USE THE TRANSLATE TABLE FOUND IN ROUTINE "DSNCHECK"
*              TO CHECK IF THIS IS REALLY A GDG-FORMAT NAME
         SPACE ,
         MVC   WADSNWRK(GDGCKLEN),0(R1)  COPY POSSIBLE .G0000V00
         TR    WADSNWRK(GDGCKLEN),DSNXLATE  CONVERT TO TYPE CODES
         OC    WADSNWRK(GDGCKLEN),GDGMATCH  TURN ON ALL VALID CODES
         XC    WADSNWRK(GDGCKLEN),GDGMATCH  TURN OFF ALL VALID CODES
         BNZ   CATCKOK             IF ANY ARE LEFT, IT'S NOT A GDG
         SPACE ,
*              CHECK THE ALPHA CHARACTERS FOR 'G' AND 'V'
         SPACE ,
         CLI   1(R1),C'G'          THIS MUST BE A 'G'
         BNE   CATCKOK             IF NOT, IT'S NOT A GDG
         CLI   6(R1),C'V'          THIS MUST BE A 'V'
         BNE   CATCKOK             IF NOT, IT'S NOT A GDG
         SPACE ,
*              WE HAVE DETERMINED THAT THE DATASET NAME *LOOKS* LIKE
*              A GDG.  A SECOND SUPERLOCATE IS NOW DONE, FOR THE GDG
*              BASE NAME, TO ENSURE THAT THERE IS ONE IN THE CATALOG.
         SPACE ,
         MVC   WAWORK1,WADSNAME    SAVE THE ACTIVE DSNAME POINTER
         MVI   WADSNWRK,C' '       BLANK OUT THE DSNAME SAVE AREA
         MVC   WADSNWRK+1(L'WADSNWRK-1),WADSNWRK  ...
         LA    R15,WADSNWRK        ADDRESS THE WORK AREA
         ST    R15,WADSNAME        SAVE AS NEW DSNAME POINTER
         L     R15,WAWORK1         ADDRESS THE CURRENT (FULL) DSNAME
         SR    R1,R15              COMPUTE LENGTH OF GDG BASE NAME
         SH    R1,HONE             LESS ONE FOR EXECUTE
         BM    GDGOK               ENSURE NON-NEGATIVE (SHOULDN'T BE!)
         EX    R1,GDGNMOVE         MOVE THE GDG BASE NAME TO WADSNWRK
         SPACE ,
*              CALL THE SUPERLOCATE ROUTINE TO FIND THE GDG BASE
         SPACE ,
         BAL   R9,SUPERLOC
         SPACE ,
*              THIS IS THE RETURN BRANCH TABLE
         SPACE ,
         B     GDGNF          +0   DSNAME NOT FOUND IN CATALOG
*                                  (NOT KOSHER, GDG BASE MISSING)
         B     GDGOK          +4   REQUIRED CATALOG NOT ALLOCATED
*                                  (LET IT THROUGH SINCE WE CAN'T TELL)
         B     GDGNF          +8   DATASET IS ON MORE THAN 3 VOLUMES
*                                  (NOT KOSHER FOR A GDG BASE...)
         B     GDGOK          +12  SOME OTHER ERROR (I/O ERROR?)
*                                  (THIS OUGHT TO PUT OUT A MESSAGE,
*                                   BUT DOESN'T RIGHT NOW)
         B     GDGOK          +16  DSNAME FOUND IN CATALOG BUT IS A
*                                  GDG BASE
*                                  (GOOD, THIS IS WHAT WE WANT)
*        NO BRANCH            +20  DSNAME FOUND IN CATALOG
*                                  (BAD, IT'S NOT A GDG BASE)
         SPACE ,
*              GDG BASE WAS NOT FOUND IN THE CATALOG (OR WAS FOUND
*              TO BE A DATASET).  THIS IS AN ERROR.
         SPACE ,
GDGNF    MVC   WADSNAME,WAWORK1    RESTORE THE DSNAME POINTER
         B     ERROR3              AND GO ISSUE MESSAGE CNY654I
         SPACE ,
GDGNMOVE MVC   WADSNWRK(*-*),0(R15)  EX'ED MOVE FOR GDG BASE NAME
         SPACE ,
GDGMATCH DC    AL1(P,A,N,N,N,N,A,N,N)  PATTERN FOR '.G0000V00'
*                  . G 0 0 0 0 V 0 0
GDGCKLEN EQU   *-GDGMATCH          LENGTH OF PATTERN
         SPACE 2
*              GDG VALIDATION OK.  RESTORE WADSNAME & CONTINUE.
         SPACE ,
GDGOK    MVC   WADSNAME,WAWORK1    COPY BACK FROM WHERE WE SAVED IT
         SPACE ,
CATCKOK  DS    0H
         SPACE 2
*              TEST IF DSNAME VALIDATION IS NEEDED
         SPACE ,
         TM    WAFLAG1,WAFDSNCK    CHECK THE FLAG...
         BZ    DSNCKOK             SKIP ROUTINE IF NOT REQUIRED
         SPACE ,
         BAL   R9,DSNCHECK         CHECK THE DSNAME...
         SPACE ,
*              THIS IS THE RETURN BRANCH TABLE
         SPACE ,
         B     ERROR2         +0   DSNAME IS NOT VALID: ERROR RETURN
*
*        NO BRANCH            +4   DSNAME CONFORMS TO OUR STANDARDS
         SPACE ,
DSNCKOK  DS    0H
         SPACE 2
*              TEST IF RACF VALIDATION IS NEEDED
         SPACE ,
         TM    WAFLAG2,WAFRACCK    CHECK THE FLAG...
         BZ    RACCKOK             SKIP ROUTINE IF NOT REQUIRED
         SPACE ,
         BAL   R9,RACCHECK         CALL RACF FOR AUTHORIZATION CHECK
         SPACE ,
*              THIS IS THE RETURN BRANCH TABLE
         SPACE ,
         B     ERROR4         +0   RACF ACCESS DENIED: ERROR RETURN
*
*        NO BRANCH            +4   RACF AUTHORITY OK, OR NOT PROTECTED
         SPACE ,
RACCKOK  DS    0H
         SPACE 2
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              PERFORM CUNY FORMAT 1 DSCB MODIFICATION IF REQUIRED
         SPACE ,
         TM    WAFLAGU,WAFMDSCB    CALL DSCB-MODIFY ROUTINE??
         BZ    NOMODSCB            BIF NOT
         BAL   R9,MODDSCB          CALL IF SO
NOMODSCB DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              EXIT PROCESSING HAS COMPLETED SUCCESSFULLY.
*              TAKE NORMAL EXIT (RC=0 IS STILL IN R4).
         SPACE ,
         B     EXIT
         TITLE 'ERROR    - IGGPRE00/POST0 ERROR EXIT ROUTINES'
**************************
* ERROR    - ERROR EXITS *
**************************
*
*        THIS ROUTINE ISSUES MESSAGES CNY651I, CNY652I, CNY653I,
*        CNY654I, AND CNY655I, SETS THE EXIT RETURN CODE AND REASON
*        CODE, AND EXITS.
*
*        ENTRY POINTS:
*           ERROR1 - DATASET CANNOT BE CATALOGED (MSG CNY651I)
*           ERROR2 - DSNAME DOESN'T CONFORM TO STANDARDS (MSG CNY652I)
*           ERROR3 - REQUIRED GDG BASE NOT CATALOGED (MSG CNY654I)
*           ERROR4 - NO RACF PERMIT TO CREATE DATASETS (MSG CNY655I)
*
*           ON ENTRY TO ERROR1, CVGVLVOL MUST BE SET (AS BY ROUTINE
*           "SUPERLOC") SO IT CAN BE PROVIDED IN MSG CNY651I.
*
*           ON ENTRY TO ERROR2, IF THE SIOT ADDRESS IS AVAILABLE IN
*           "WASIOTAD", THEN IF THE SIOT INDICATES A NON-SPECIFIC
*           VOLUME REQUEST AND A SYSTEM GENERATED DSNAME, AND THE
*           UCB INDICATES A STORAGE VOLUME, THEN THE ERROR MESSAGES
*           (ONLY) WILL BE BYPASSED.
*
*           ON ENTRY TO ERROR4, IF THE SIOT ADDRESS IS AVAILABLE IN
*           "WASIOTAD", THEN IF THE SIOT INDICATES A NON-SPECIFIC
*           VOLUME REQUEST AND THE UCB INDICATES A PUBLIC VOLUME,
*           THEN THE ERROR MESSAGES (ONLY) WILL BE BYPASSED.
*
*        REGISTER USAGE:
*           R1 = WORK
*           R4 = EXIT RETURN CODE (RESET TO 4)
*
ERROR1   DS    0H                  UNCATALOGABLE DATASET ENTRY
         SPACE ,
*              SET INSTALLATION REASON CODE FOR THIS ENTRY (1)
         SPACE ,
         MVC   IEXREASN,REASON1    MOVE IN A 'ONE'
         SPACE ,
*              CONSTRUCT MESSAGE CNY651I
         SPACE ,
         MVC   WAC651LN,CON651     MCS PREFIX FIELDS
         MVC   WAC651P1,CON651P1   MESSAGE PREFIX
*              NOTE THAT FIELD WAC651AL IS ALREADY SET
         MVC   WAC651P2,CON65P2    TEXT
         MVC   WAC651P3,CON651P3   MORE TEXT
*              NOTE THAT THE LENGTH (L'CTGVLVOL) IS REQUIRED HERE
*              BECAUSE THE ASSEMBLER DOESN'T ALLOW IT ON THE EQU
         MVC   WAC651P4(L'CTGVLVOL),CTGVLVOL-CTGVL+WACTGVL  VOLSER
         MVC   WAC651P5,CON651P5   MORE TEXT
         MVC   WAC651MC,MCS65      MCS SUFFIX FIELDS
         SPACE ,
*              CONTINUE WITH COMMON CODE
         SPACE ,
         B     ERRORCOM
         SPACE 2
ERROR2   DS    0H                  UNCONFORMING DSNAME ENTRY
         SPACE ,
*              SET INSTALLATION REASON CODE FOR THIS ENTRY (2)
         SPACE ,
         MVC   IEXREASN,REASON2    MOVE IN A 'TWO'
         SPACE ,
*              ADDRESS THE SIOT, IF PRESENT
         SPACE ,
         ICM   R1,B'1111',WASIOTAD  @ SIOT, IF AVAILABLE
         BZ    ERROR2Z             SIOT NOT AVAILABLE, BYPASS THIS
         USING SIOT,R1
         SPACE ,
*              TEST IF SIOT INDICATES NON-SPECIFIC VOLUME REQUEST
         SPACE ,
         TM    SIOTSMS,SIOTSMS6    ON => VOLUME WAS SPECIFIED
         BO    ERROR2Z             CONTINUE WITH MESSAGES IF SPECIFIC
         SPACE ,
*              TEST IF SIOT INDICATES A SYSTEM-GENERATED NAME
         SPACE ,
         TM    SCTSBYT1,SIOTGDSN   GENERATED DSNAME?
         BZ    ERROR2Z             CONTINUE WITH MESSAGES IF NOT
         SPACE ,
*              TEST IF UCB INDICATES A STORAGE VOLUME
         SPACE ,
         ICM   R1,B'1111',IEXUCB   @ UCB
         BZ    ERROR2Z             BRANCH IF UCB NOT AVAILABLE
         USING UCBOB,R1
         TM    UCBSTAB,UCBBSTR     STORAGE VOLUME?
         BO    SETRC4              YES, THEN BYPASS ERROR MESSAGES
         DROP  R1
ERROR2Z  DS    0H
         SPACE ,
*              CONSTRUCT MESSAGE CNY652I
         SPACE ,
         MVC   WAC652LN,CON652     MCS PREFIX FIELDS
         MVC   WAC652P1,CON652P1   MESSAGE PREFIX
*              NOTE THAT FIELD WAC652AL IS ALREADY SET
*              (SINCE IT'S SET AS WAC651AL, BOTH MUST BE IDENTICAL)
         MVC   WAC652P2,CON65P2    TEXT
         MVC   WAC652P3,CON652P3   MORE TEXT
         MVC   WAC652MC,MCS65      MCS SUFFIX FIELDS
         SPACE ,
*              CONTINUE WITH COMMON CODE
         SPACE ,
         B     ERRORCOM
         SPACE 2
ERROR3   DS    0H                  MISSING GDG BASE ENTRY
         SPACE ,
*              SET INSTALLATION REASON CODE FOR THIS ENTRY (3)
         SPACE ,
         MVC   IEXREASN,REASON3    MOVE IN A 'THREE'
         SPACE ,
*              CONSTRUCT MESSAGE CNY654I
         SPACE ,
         MVC   WAC654LN,CON654     MCS PREFIX FIELDS
         MVC   WAC654P1,CON654P1   MESSAGE PREFIX
*              NOTE THAT FIELD WAC654AL IS ALREADY SET
*              (SINCE IT'S SET AS WAC651AL, BOTH MUST BE IDENTICAL)
         MVC   WAC654P2,CON65P2    TEXT
         MVC   WAC654P3,CON654P3   MORE TEXT
         MVC   WAC654MC,MCS65      MCS SUFFIX FIELDS
         SPACE ,
*              CONTINUE WITH COMMON CODE
         SPACE ,
         B     ERRORCOM
         SPACE 2
ERROR4   DS    0H                  NO RACF PERMIT TO CREATE DATASETS
         SPACE ,
*              SET INSTALLATION REASON CODE FOR THIS ENTRY (4)
         SPACE ,
         MVC   IEXREASN,REASON4    MOVE IN A 'FOUR'
         SPACE ,
*              ADDRESS THE SIOT, IF PRESENT
         SPACE ,
         ICM   R1,B'1111',WASIOTAD  @ SIOT, IF AVAILABLE
         BZ    ERROR4Z             SIOT NOT AVAILABLE, BYPASS THIS
         USING SIOT,R1
         SPACE ,
*              TEST IF SIOT INDICATES NON-SPECIFIC VOLUME REQUEST
         SPACE ,
         TM    SIOTSMS,SIOTSMS6    ON => SPECIFIC VOLUME SPECIFIED
         BO    ERROR4Z             CONTINUE WITH MESSAGES IF SPECIFIC
         SPACE ,
*              TEST IF UCB INDICATES A PUBLIC VOLUME
         SPACE ,
         ICM   R1,B'1111',IEXUCB   @ UCB
         BZ    ERROR4Z             BRANCH IF UCB NOT AVAILABLE
         USING UCBOB,R1
         TM    UCBSTAB,UCBBPUB     PUBLIC VOLUME?
         BO    SETRC4              YES, THEN BYPASS ERROR MESSAGES
         DROP  R1
ERROR4Z  DS    0H
         SPACE ,
*              CONSTRUCT MESSAGE CNY655I
         SPACE ,
         MVC   WAC655LN,CON655     MCS PREFIX FIELDS
         MVC   WAC655P1,CON655P1   MESSAGE PREFIX
*              NOTE THAT FIELD WAC655AL IS ALREADY SET
*              (SINCE IT'S SET AS WAC651AL, BOTH MUST BE IDENTICAL)
         MVC   WAC655P2,CON65P2    TEXT
         MVC   WAC655P3,CON655P3   MORE TEXT
         MVC   WAC655MC,MCS65      MCS SUFFIX FIELDS
         SPACE 2
*              COMMON ERROR ROUTINE
         SPACE ,
ERRORCOM DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              SKIP WTP IF THE CALLER IS A WYLBUR I/O TASK
         SPACE ,
         TM    WAFLAGU,WAFWYLIO    IS OUR CALLER A WYLBUR I/O TASK?
         BO    SETRC4              YES, SKIP AROUND THE WTO'S
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
         WTO   MF=(E,WAMSGARA)     ISSUE CNY651I/CNY652I TO SYSMSG
         SPACE 2
*              CONSTRUCT MESSAGE CNY653I
         SPACE ,
         MVC   WAC653LN,CON653     MCS PREFIX FIELDS
         MVC   WAC653P1,CON653P1   MESSGE PREFIX & TEXT
*              NOTE THAT THE LENGTH (L'WAUCBVOL) IS REQUIRED HERE
*              BECAUSE THE ASSEMBLER DOESN'T ALLOW IT ON THE EQU
         MVC   WAC653VV(L'WAUCBVOL),WAUCBVOL  VOLUME NAME
         MVC   WAC653P2,CON653P2   MORE TEXT
         L     R1,WADSNAME         GET @ DSNAME
*              NOTE THAT THE LENGTH (L'JFCBDSNM) IS REQUIRED HERE
*              BECAUSE THE ASSEMBLER DOESN'T ALLOW IT ON THE EQU
         MVC   WAC653DS(L'JFCBDSNM),0(R1)  COPY DSNAME
         MVC   WAC653MC,MCS65      MCS SUFFIX FIELDS
         SPACE ,
         WTO   MF=(E,WAMSGARA)     ISSUE CNY653I TO SYSMSG
         SPACE ,
*              SET THE EXIT RETURN CODE (IN R4) TO 4 (REJECT VOLUME)
         SPACE ,
SETRC4   LA    R4,4                SET RETURN CODE HERE
         SPACE ,
*              GO EXIT FROM THE EXIT
         SPACE ,
         B     EXIT                'BYE
         TITLE 'SPECINIT - IGGPRE00 SPECIAL INITIALIZATION ROUTINE'
*********************************************
* SPECINIT - SPECIAL INITIALIZATION ROUTINE *
*********************************************
*
*        THIS ROUTINE IS ENTERED WHEN OUR "SUBSYSTEM INITIALIZATION"
*        MODULE, PREPOST0, ISSUES A REALLOC MACRO FOR INITDSN.  IT
*        IS USED TO FORCE THE USERCAT REQUIRED FOR CATALOG CHECKS
*        HERE TO BE ALLOCATED TO *MASTER* SO THAT ITS ACB MAY BE
*        REFERENCED LATER FOR SUPERLOCATES UNDER THE INITIATOR.
*        THE FOLLOWING IS THE PROCESSING LOGIC:
*
*          1) SET WADSNAME TO POINT TO INITDSNC, WHOSE HIGH-LEVEL
*             INDEX IS IN THE USERCATALOG WE NEED TO ALLOCATE.
*
*          2) CALL THE SUPERLOCATE ROUTINE.  IT SHOULD RETURN
*             INDICATING THAT THE REQUIRED CATALOG COULDN'T BE
*             ALLOCATED, BUT IN DOING SO WILL DETERMINE THE
*             NAME OF THE USERCATALOG IF THAT'S DIFFERENT FROM
*             THE HIGH-LEVEL INDEX NAME.
*
*          3) RESET THE "CTGDOCAT" FLAG IN THE CTGPL AND REISSUE
*             THE SUPERLOCATE.  THIS SHOULD CAUSE THE CATALOG TO
*             BE ALLOCATED.  THE SUCCESS OF THE SUPERLOCATE IS
*             IMMATERIAL.
*
*          4) ENQUEUE (SHARED) ON THE PCCB CHAIN, FIND THE PCCB
*             ENTRY FOR THE USERCATALOG, AND SAVE ITS NAME AND
*             ACB ADDRESS IN AN AREA ADDRESSED BY THE CVT USER
*             EXTENSION (** THIS IS INSTALLATION DEPENDENT **).
*             DEQUEUE FROM THE PCCB CHAIN AND EXIT.
*
*        NOTE THAT THIS CODE CURRENTLY ALLOCATES ONLY ONE USER-
*        CATALOG, BUT IT COULD EASILY BE EXTENDED FOR SEVERAL.
*
*
*        NORMAL EXIT: TO EXIT, WITH RETURN CODE 4, REASON CODE 901
*
*        ERROR EXIT:  TO EXIT, WITH RETURN CODE 4, REASON CODE 902
*
*        REGISTER USAGE:
*           R1 = WORK
*           R4 = RETURN CODE TO BE PASSED BACK TO DADSM (WILL BE 4)
*           R6 = GORILLA ADDRESS
*           R7 = PCCB ADDRESS
*
SPECINIT DS    0H
         SPACE ,
*              COPY INITDSNC TO THE PPWA AND POINT WADSNAME AT IT; WE
*              CAN'T USE IT DIRECTLY, OR AN 0C4 RESULTS WHEN CATALOG
*              MANAGEMENT TRIES TO RESAVE IT (FOR SOME REASON).  NOTE
*              THAT IT'S IMMATERIAL WHETHER OR NOT THAT DATASET IS
*              ACTUALLY IN THE CATALOG.
         SPACE ,
         MVC   WADSNWRK,INITDSNC   COPY THE DSNAME TO THE WORK AREA
         LA    R1,WADSNWRK         ADDRESS IT THERE
         ST    R1,WADSNAME         AND SAVE ITS ADDRESS
         SPACE ,
*              ISSUE THE SUPERLOCATE TO GET THE NAME OF THE USERCATALOG
         SPACE ,
         BAL   R9,SUPERLOC         GO TO IT
         SPACE ,
*              THIS IS THE RETURN BRANCH TABLE
*              THE ONLY EXPECTED RETURN IS "CATALOG UNAVAILABLE"
         SPACE ,
         B     SPEC902        +0   DSNAME NOT FOUND IN CATALOG
*                                  (SHOULD NOT OCCUR HERE, ERROR)
         B     SPECI10        +4   REQUIRED CATALOG NOT ALLOCATED
*                                  (CONTINUE WITH THIS ROUTINE)
         B     SPEC902        +8   DATASET IS ON MORE THAN 3 VOLUMES
*                                  (SHOULD NOT OCCUR HERE, ERROR)
         B     SPEC902        +12  SOME OTHER ERROR (I/O ERROR?)
*                                  (SHOULD NOT OCCUR HERE, ERROR)
         B     SPEC902        +16  DSNAME FOUND IN CATALOG BUT IS A
*                                  GDG BASE
*                                  (SHOULD NOT OCCUR HERE, ERROR)
         B     SPEC902        +20  DSNAME FOUND IN CATALOG
*                                  (SHOULD NOT OCCUR HERE, ERROR)
         SPACE ,
*              CONTINUE BY TURNING OFF "CTGDOCAT" AND REISSUING
*              THE SUPERLOCATE.  THIS WILL CAUSE THE REQUIRED
*              CATALOG TO BE ALLOCATED.  THE CTGCV SHOULD REMAIN
*              UNCHANGED OVER THIS CALL.
         SPACE ,
SPECI10  NI    CTGOPTN4-CTGPL+WACTGPL,255-CTGDOCAT  ** RESET FLAG **
         SPACE ,
         LOCATE WACTGPL            REISSUE SUPERLOCATE
         SPACE ,
*              THESE ARE THE CATALOG RETURN CODES WE TEST FOR:
*
*                R15=0   SUPERLOCATE SUCCESSFUL, VOLUME(S) IN WACTGVL
*                        (EXCEPT: IF CTGGDGB ON, DSN IS A GDG BASE)
*                R15=8   DATASET WAS NOT FOUND IN CATALOG
*
*              ANY OTHER ERROR INDICATES THAT THIS CODE DID NOT
*              FUNCTION PROPERLY, AND WILL TAKE THE ERROR902 EXIT.
         SPACE ,
         C     R15,RCS         0   RETURN CODE=SUCCESS?
         BE    SPECI20             YES, CONTINUE WITH THIS ROUTINE
         SPACE ,
         C     R15,RCENT       8   RETURN CODE=DATASET NOT IN CATALOG?
         BE    SPECI20             YES, CONTINUE WITH THIS ROUTINE
         SPACE ,
         B     SPEC902             NO, TAKE ERROR 902 RETURN
         SPACE ,
*              ENQUEUE ON THE PCCB RESOURCE AND SEARCH THE PCCB
*              CHAIN FOR THE ENTRY FOR THE CATALOG JUST ALLOCATED
         SPACE ,
SPECI20  MVC   WAENQ(PCCBENQE-PCCBENQ),PCCBENQ  COPY IN MODEL
         SPACE ,
         ENQ   (,,S,,),MF=(E,WAENQ)  THIS IS A *SHARED* ENQUEUE
         SPACE ,
         OI    WAFLAG2,WAFPCENQ    REMEMBER THAT WE'RE ENQUEUED
         SPACE ,
         L     R1,PSATOLD          @ CURRENT TCB
         USING TCB,R1
         ICM   R1,B'1111',TCBJSCB  @ JSCB
         USING IEZJSCB,R1
         BZ    SPEC902             BE SURE IT EXISTS - ELSE ERROR EXIT
         ICM   R1,B'1111',JSCBACT  @ "ACTIVE" JSCB
         BZ    SPEC902             BE SURE IT EXISTS TOO
         SPACE ,
*              SEARCH THE PCCB CHAIN FOR AN ENTRY WHERE PCCDSNAM
*              MATCHES CTGCVDSN (THE DSNAME, NOT ALIAS, IS MATCHED)
         SPACE ,
         ICM   R7,B'1111',JSCBPCC  @ FIRST PCCB OR ZERO
         DROP  R1
         USING IEFPCCB,R7
SPECI30  BZ    SPEC902             ENSURE PCCB ENTRY EXISTS, ELSE ERROR
         TM    PCCSTAT1,PCCACTIV   IS THIS PCCB ACTIVE?
         BZ    SPECI40             NO, GO LOOK AT THE NEXT ONE
         CLC   PCCDSNAM,CTGCVDSN-CTGCV+WACTGCV  DOES IT MATCH?
         BE    SPECI50             YES, GO SAVE THE INFO
SPECI40  ICM   R7,B'1111',PCCNEXTP  NO, GET THE NEXT ONE
         B     SPECI30             AND GO CHECK IT
         SPACE ,
*              WE'VE LOCATED THE PCCB ENTRY.  OBTAIN STORAGE FOR
*              THE GORILLA CONTROL BLOCK, WHICH WILL HOLD THE
*              USERCATALOG'S NAME AND ACB ADDRESS. SUBPOOL 241 IS
*              USED (CSA, NOT JOB-RELATED); THAT'S THE SAME AS FOR
*              THE CAXWA AND CATALOG ACB.
         SPACE ,
SPECI50  GETMAIN RU,LV=KINGKONG-GORILLA,SP=241,LOC=ANY  GET THE GORILLA
         SPACE ,
*              NOTE THAT THE GORILLA IS NEVER RELEASED.
         SPACE ,
         LR    R6,R1               SAVE THE ADDRESS
         USING GORILLA,R6
         SPACE ,
*              SAVE THE PCCB INFORMATION IN THE GORILLA, THEN DEQ
*              SYSZPCCB AND CHAIN AND SHACKLE THE GORILLA TO THE CVT.
         SPACE ,
         MVC   GORDSNAM,PCCDSNAM   SAVE THE CATALOG DSNAME
         MVC   GORACBP,PCCACBP     SAVE THE ACB POINTER
         DROP  R7
         SPACE ,
         DEQ   MF=(E,WAENQ)        RELEASE THE PCCB ENQUEUE
         SPACE ,
         NI    WAFLAG2,255-WAFPCENQ  AND RESET THE ENQ FLAG
         SPACE ,
SPECI60  DS    0H                  THIS LABEL IS ONLY FOR THE XREF
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              THE FOLLOWING CODE MUST BE MODIFIED TO PROVIDE IN
*              R1 THE ADDRESS OF A GLOBALLY-ADDRESSABLE FULLWORD
*              IN WHICH THE ADDRESS OF THE GORILLA CAN BE SAVED.
*              AS DISTRIBUTED, IT USES THE CVT USER FIELD, CVTUSER.
         SPACE ,
         L     R1,FLCCVT           @ CVT
         USING CVT,R1
         LA    R1,CVTUSER          @ CVTUSER
         DROP  R1
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
         ST    R6,0(,R1)           SAVE THE GORILLA POINTER
         DROP  R6
         SPACE ,
*              RETURN TO THE CALLER WITH REASON CODE 901, INDICATING
*              THAT OUR SPECIAL PROCESSING WAS SUCCESSFUL.
         SPACE ,
         MVC   IEXREASN,REASONI1   SET REASON CODE 901
         LA    R4,4                SET EXIT RETURN CODE
         B     EXIT                WE'RE ALL DONE
         SPACE 2
*              TAKE ERROR EXIT IF ANY OF THE ABOVE FAILED.
*              ENSURE THAT THE PCCB RESOURCE IS DEQUEUED, THEN
*              RETURN WITH REASON CODE 902.
         SPACE ,
SPEC902  TM    WAFLAG2,WAFPCENQ    IS OUR ENQ OUTSTANDING?
         BZ    SPEC902A            NO, BYPASS DEQ
         SPACE ,
         DEQ   MF=(E,WAENQ)        RELEASE THE PCCB ENQUEUE
         SPACE ,
         NI    WAFLAG2,255-WAFPCENQ  AND RESET THE ENQ FLAG
         SPACE ,
SPEC902A MVC   IEXREASN,REASONI2   SET REASON CODE 902
         LA    R4,4                SET EXIT RETURN CODE
         B     EXIT                WE'RE ALL DONE
         SPACE 2
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              THE FOLLOWING DSNAME MUST BEGIN WITH A HIGH-LEVEL INDEX
*              THAT IS THE NAME OR AN ALIAS OF THE USERCATALOG TO BE
*              ALLOCATED HERE.  THE DSNAME NEEDN'T BE IN THE CATALOG.
         SPACE ,
INITDSNC DC    CL(L'JFCBDSNM)'WYL.EARTHMAN'  HIGH INDEX='WYL'
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         TITLE 'SUPERLOC - IGGPRE00/POST0 CATALOG SUPERLOCATE ROUTINE'
******************************************
* SUPERLOC - CATALOG SUPERLOCATE ROUTINE *
******************************************
*
*        THIS ROUTINE PERFORMS A SUPERLOCATE TO DETERMINE IF (AND
*        WHERE) THE DATASET WHOSE NAME IS POINTED TO BY WADSNAME
*        IS CATALOGED.
*
*        A SUPERLOCATE IS USED HERE, EVEN THOUGH IT'S NOT A
*        PUBLISHED EXTERNAL INTERFACE (IT'S ALSO PRIVILEGED),
*        BECAUSE THE CAMLST LOCATE INTERFACE CAN'T BE TOLD NOT TO
*        ATTEMPT TO ALLOCATE A REQUIRED CATALOG.  THIS RESULTS
*        IN S130 AND S138 ABENDS IF WE ARE UNDER THE INITIATOR
*        (OR DYNAMIC ALLOCATION), AND ALSO PERMANENTLY ALLOCATES
*        THE CATALOG TO THE INITIATOR ITSELF (RATHER THAN TO THE
*        JOB BEING INITIATED).
*
*        THE CODE ALSO MODIFIES ENTRIES IN THE PCCB CHAIN, WHICH
*        IS ALSO NOT A PUBLISHED EXTERNAL INTERFACE.  SEE THE
*        COMMENTS PRECEDING LABEL SUPLOC30 FOR MORE INFORMATION.
*
*        NOTE THAT THIS CODE FOLLOWS THE FUNCTION OF INITIATOR
*        MODULE IEFAB469, WHICH ISSUES SUPERLOCATES FOR JOB
*        ALLOCATION.
*
*        N.B.: THIS CODE SHOULD NOT BE CALLED FOR VSAM DATASETS.
*        NOT ONLY IS IT UNNECESSARY (SINCE ALL VSAM DATASETS MUST
*        BE CATALOGED) BUT IT CAN ALSO RESULT IN AN INTERLOCK OR
*        ABEND WHEN AN ICF CATALOG IS REORGANIZED.
*
*
*        CALLED FOR: ALLOCATION, RENAME
*
*        INPUT: FIELD "WADSNAME" POINTS TO THE DSNAME TO BE FOUND.
*
*        RETURN CODES ARE VIA A BRANCH TABLE, AS FOLLOWS:
*
*           R9+0: DATASET NOT FOUND IN CATALOG
*           R9+4: REQUIRED CATALOG COULD NOT BE ALLOCATED
*           R9+8: DATASET IS ON MORE THAN THREE VOLUMES
*           R9+12: SOME OTHER ERROR (I/O ERROR ASSUMED)
*           R9+16: DATASET NAME WAS FOUND IN CATALOG BUT IS A GDG BASE
*           R9+20: SUCCESS, VOLUME LIST IS IN WACTGVL (COUNT IN CTGWA)
*
*        REGISTER USAGE:
*           R0 = WORK
*           R1 = WORK
*           R5 = WORKAREA ADDRESS
*           R6 = GORILLA ADDRESS
*           R7 = PCCB ADDRESS
*           R8 = ADDRESS OF ACTIVE JSCB
*           R9 = RETURN ADDRESS
*           R10 = SAVED SUPERLOCATE RETURN CODE
*           R14 = WORK
*           R15 = WORK/SVC RETURN CODE
*
*        NOTE: THIS CODE MUST NOT MODIFY WAWORK1.  (SEE "COMMON" CODE.)
*
SUPERLOC DS    0H
         SPACE ,
*              CONSTRUCT THE CTGPL (CATALOG PARAMETER LIST)
         SPACE ,
         XC    WACTGPL,WACTGPL     CLEAR IT, TO START
         SPACE ,
*              THE FOLLOWING LOAD/USING IS JUST FOR CONVENIENCE
         SPACE ,
         LA    R1,WACTGPL          GET @ PL IN A REGISTER
         USING CTGPL,R1
         SPACE ,
         OI    CTGOPTN1,CTGNAME    SUPERLOCATE IS BY NAME
         OI    CTGOPTN3,CTGSUPLT+CTGAM0  FUNCTION IS SUPERLOCATE;
*                                  THIS IS A CTGPL (NOT CAMLST)
         SPACE ,
*              CATALOG MANAGEMENT WILL BE ALLOWED TO DYNAMICALLY
*              ALLOCATE AND OPEN ANY NEEDED CATALOGS *IF* THIS
*              EXIT WAS CALLED FOR A FUNCTION OTHER THAN ALLOCATE.
*              (AT PRESENT, RENAME IS THE ONLY OTHER FUNCTION THAT
*              REACHES THIS CODE.)  A CHECK FOR THE INITIATOR IS
*              ALSO MADE, JUST FOR SAFETY.  (THAT DOESN'T DETECT IF
*              DYNAMIC ALLOCATION IS THE CALLER, BUT THAT'S NOT A
*              PROBLEM, UNLESS DYNALLOC STARTS ISSUING RENAMES...)
         SPACE ,
         TM    WAFLAG2,WAFIIC      IS THE INITIATOR THE DADSM CALLER?
         BO    SUPLOC04            YES, ENSURE CTGDOCAT IS SET
         CLI   IEXFUNC,IEXALL      IS THE DADSM FUNCTION ALLOCATE?
         BNE   SUPLOC07            NO, NEEDN'T SET CTGDOCAT
SUPLOC04 OI    CTGOPTN4,CTGDOCAT   ** DO NOT DYNAMICALLY ALLOCATE **
*                                      ** OR OPEN ANY CATALOG **
         SPACE ,
SUPLOC07 DS    0H
         TM    WAFLAG1,WAFZTIOT    DO WE ALREADY OWN THE SYSZTIOT ENQ?
         BZ    SUPLOC10            NO, IT'S OK
         OI    CTGOPTN4,CTGTIOT    YES, INDICATE WE ALREADY OWN IT
SUPLOC10 DS    0H
         MVC   CTGENT,WADSNAME     SET DSNAME ADDRESS
         SPACE ,
*              NOTE THAT THIS SUPERLOCATE WILL NOT INITIATE A DFHSM
*              RECALL BECAUSE NEITHER CTGCOIN ("CONTROLLER INTERCEPT
*              REQUESTED" -- THAT MEANS HSM) NOR CTGTJES3 ("JES3
*              SUPERLOCATE REQUEST") IS SET.
         SPACE ,
         LA    R14,WACTGCV         THE CTGCV IS REQUIRED (TO RETURN THE
         ST    R14,CTGCVOL          NAME OF AN UNAVAILABLE USERCAT)
         LA    R14,WACTGWA         GET CTGWA ADDRESS
         ST    R14,CTGWKA           INTO THE CTGPL ALSO
         DROP  R1
         SPACE ,
*              FILL IN THE CTGWA (ALREADY ADDRESSED BY R14)
         SPACE ,
         XC    WACTGWA,WACTGWA     CLEAR IT, FIRST
         USING CTGWA,R14
         LA    R1,WACTGVL          GET ADDRESS OF VOLUME LIST
         ST    R1,CTGWAVL          PUT IT IN WA
         LA    R1,L'WACTGVL        GET SIZE OF VOLUME LIST
         STH   R1,CTGWALV          SAVE IT IN WA
*                                  FIELDS CTGWAVCT & CTGWAUCT ARE SET
*                                  BY THE CATALOG MANAGEMENT CALL
         DROP  R14
         SPACE ,
*              ISSUE THE CATALOG SVC
         SPACE ,
         LOCATE WACTGPL            ISSUEIT
         SPACE ,
*              THESE ARE THE CATALOG RETURN CODES WE TEST FOR:
*
*                R15=0   SUPERLOCATE SUCCESSFUL, VOLUME(S) IN WACTGVL
*                        (EXCEPT: IF CTGGDGB ON, DSN IS A GDG BASE)
*                R15=8   DATASET WAS NOT FOUND IN CATALOG
*                R15=36  REQUIRED USERCATALOG WAS NOT AVAILABLE
*                R15=40  WACTGVL IS TOO SMALL
*                        (DATASET IS ON MORE THAN THREE VOLUMES)
*
*              THE FOLLOWING RETURN CODES ARE ALSO THOUGHT TO INDICATE
*              AN UNAVAILABLE CATALOG (ACCORDING TO IEFAB469):
*
*                R15=68   OS CVOL NEEDED
*                R15=188  STEPCAT NEEDED
*
*              ANY OTHER ERROR IS ASSUMED TO BE AN I/O ERROR.
         SPACE ,
         C     R15,RCS         0   RETURN CODE=SUCCESS?
         BE    SUPLOC20            YES, TEST IF WE FOUND A GDG BASE
         SPACE ,
         C     R15,RCENT       8   RETURN CODE=DATASET NOT IN CATALOG?
         BE    0(R9)               YES, TAKE DEFINED RETURN
         SPACE ,
         C     R15,RCDSNF     36   RETURN CODE=CATALOG NOT ALLOCATED?
         BE    SUPLOC30            YES, CONTINUE PROCESSING
         SPACE ,
         C     R15,RCVLSZ     40   RETURN CODE=DATASET ON > 3 VOLUMES?
         BE    8(R9)               YES, TAKE DEFINED RETURN
         SPACE ,
         C     R15,RCNOSP     68   RETURN CODE=OS CVOL NEEDED?
         BE    SUPLOC30            YES, DO LIKE "CATALOG NOT ALLOC"
         SPACE ,
         C     R15,RCCATUNA  188   RETURN CODE=STEPCAT NEEDED?
         BE    SUPLOC30            YES, DO LIKE "CATALOG NOT ALLOC"
         SPACE ,
         B     12(R9)              NO, TAKE RETURN FOR ALL OTHER CODES
         SPACE ,
*              TEST IF DSNAME SUCCESSFULLY LOCATED IS A GDG BASE
         SPACE ,
SUPLOC20 TM    CTGFBFLG-CTGPL+WACTGPL,CTGGDGB  IS IT A GDG BASE?
         BO    16(R9)              YES, TAKE DEFINED RETURN
         B     20(R9)              NO, TAKE RETURN FOR SUCCESS
         SPACE 3
*              THE FOLLOWING CODE HANDLES THE SITUATION WHERE
*              A REQUIRED USERCAT IS NOT AVAILABLE AND THE CALLER
*              OF DADSM IS THE INITIATOR.  THE FOLLOWING IS THE
*              LOGIC:
*
*                1) OBTAIN THE SAVED CATALOG ACB ADDRESS FROM THE CVT
*                   USER EXTENSION (** INSTALLATION DEPENDENT **).
*                   IF IT'S NOT AVAILABLE (IF SPECIAL INITIALIZATION
*                   FAILED), RETURN CATALOG UNAVAILABLE.
*
*                2) ENQUEUE ON THE STEP'S PCCB CHAIN AND SEARCH FOR
*                   AN ENTRY MATCHING THE REQUIRED CATALOG NAME WHICH
*                   IS ALSO NOT ACTIVE AND HAS A ZERO ACB ADDRESS.
*                   IF IT'S NOT FOUND, RETURN CATALOG UNAVAILABLE.
*                   (IF THE DATASET HAS DISP=CATLG, THE INITIATOR
*                   WILL HAVE ALREADY BUILT THIS PCCB ENTRY DURING
*                   "DD FUNCTION CONTROL" PROCESSING IN IEFAB454.)
*                   IF A STEPCAT PCCB ENTRY IS FOUND, RETURN CATALOG
*                   UNAVAILABLE; THIS WILL PREVENT ERRONEOUS RESULTS.
*
*                3) UPDATE THE PCCB ENTRY WITH THE SAVED ACB ADDRESS
*                   AND MARK IT ACTIVE.  DEQUEUE FROM THE PCCB CHAIN.
*
*                4) RE-ISSUE THE SUPERLOCATE.
*
*                5) RE-ENQUEUE ON THE PCCB CHAIN AND RESTORE THE PCCB
*                   ENTRY.
*
*                6) ANALYZE THE NEW SUPERLOCATE RETURN CODE.
*
         SPACE ,
SUPLOC30 DS    0H
         SPACE ,
*              DETERMINE IF WE CAN PROCESS THIS CONDITION HERE.  IF
*              NOT, TAKE THE DEFINED RETURN FOR "CATALOG UNAVAILABLE."
         SPACE ,
         TM    WAFLAG2,WAFIIC      IS THE INITIATOR THE DADSM CALLER?
         BZ    4(R9)               RETURN IF NOT
         CLI   IEXFUNC,IEXALL      IS THE DADSM FUNCTION ALLOCATE?
         BNE   4(R9)               RETURN IF NOT
         SPACE ,
SUPLOC40 DS    0H                  THIS LABEL IS ONLY FOR THE XREF
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              THE FOLLOWING CODE MUST BE MODIFIED TO PROVIDE IN
*              R1 THE ADDRESS OF A GLOBALLY-ADDRESSABLE FULLWORD
*              IN WHICH THE ADDRESS OF THE GORILLA WAS SAVED.
*              AS DISTRIBUTED, IT USES THE CVT USER FIELD, CVTUSER.
         SPACE ,
         L     R1,FLCCVT           @ CVT
         USING CVT,R1
         LA    R1,CVTUSER          @ CVTUSER
         DROP  R1
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
         ICM   R6,B'1111',0(R1)    OBTAIN THE GORILLA POINTER
         BZ    4(R9)               RETURN IF THERE'S NONE
         USING GORILLA,R6
         SPACE ,
*              CHECK THAT WE NEED THE SAME CATALOG THAT WAS
*              ALLOCATED BY SPECINIT.  RETURN IF NOT.
         SPACE ,
         CLC   GORDSNAM,CTGCVDSN-CTGCV+WACTGCV  GORILLA=CTGCV?
         BNE   4(R9)               RETURN IF NOT
         SPACE ,
*              GET THE ACTIVE JSCB'S ADDRESS IN R7.
         SPACE ,
         L     R1,PSATOLD          @ CURRENT TCB
         USING TCB,R1
         ICM   R8,B'1111',TCBJSCB  @ JSCB
         USING IEZJSCB,R8
         BZ    4(R9)               BE SURE IT EXISTS - ELSE ERROR EXIT
         ICM   R8,B'1111',JSCBACT  @ "ACTIVE" JSCB
         BZ    4(R9)               BE SURE IT EXISTS TOO
         DROP  R1
         SPACE ,
*              SAVE THE GORILLA AND ACTIVE JSCB ADDRESSES IN THE
*              PPWA IN CASE THE ESTAE EXIT GETS ENTERED WITH EITHER
*              WAFPCENQ OR WAFPCMOD SET.  (NOTE THAT THE SAVED
*              ADDRESSES AREN'T VALID IF NEITHER FLAG IS SET...)
         SPACE ,
         ST    R6,WAGORILL         SAVE GORILLA ADDRESS
         ST    R8,WAJSCBAC         SAVE JSCBACT ADDRESS
         SPACE ,
*              ENQUEUE ON THE PCCB RESOURCE AND SEARCH THE PCCB
*              CHAIN FOR THE ENTRY FOR THE CATALOG IN GORDSNAM.
         SPACE ,
         MVC   WAENQ(PCCBENQE-PCCBENQ),PCCBENQ  COPY IN MODEL
         SPACE ,
         ENQ   MF=(E,WAENQ)        OBTAIN SYSZPCCB (EXCLUSIVE)
         SPACE ,
         OI    WAFLAG2,WAFPCENQ    REMEMBER THAT WE'RE ENQUEUED
         SPACE ,
*              SEARCH THE PCCB CHAIN FOR AN INACTIVE ENTRY WHERE
*              PCCDSNAM MATCHES GORDSNAM AND PCCACBP IS ZERO.
*              IF A STEPCAT ENTRY IS FOUND, RETURN IMMEDIATELY.
*              (NOTE THAT STEPCATS ARE PLACED FIRST IN THE CHAIN.)
         SPACE ,
         ICM   R7,B'1111',JSCBPCC  @ FIRST PCCB OR ZERO
         USING IEFPCCB,R7
SUPLOC50 BZ    SUPLOC99            ENSURE PCCB ENTRY EXISTS, ELSE ERROR
         TM    PCCSTAT1,PCCSTEPC   IS THIS A STEPCAT ENTRY?
         BO    SUPLOC99            GET OUT IF SO
         TM    PCCSTAT1,PCCACTIV   IS THIS PCCB ACTIVE?
         BO    SUPLOC55            YES, GO LOOK AT THE NEXT ONE
         CLC   PCCACBP,ZERO        IS ITS ACB POINTER ZERO?
         BNE   SUPLOC55            NO, GO LOOK AT THE NEXT ONE
         CLC   PCCDSNAM,GORDSNAM   DOES IT MATCH?
         BE    SUPLOC60            YES, GO MODIFY IT...
SUPLOC55 ICM   R7,B'1111',PCCNEXTP  NO, GET THE NEXT ONE
         B     SUPLOC50            AND GO CHECK IT
         SPACE ,
*              MODIFY THE PCCB ENTRY WE'VE FOUND
         SPACE ,
SUPLOC60 OI    PCCSTAT1,PCCACTIV   SET ENTRY ACTIVE
         MVC   PCCACBP,GORACBP     COPY SAVED ACB POINTER
         SPACE ,
*              IF PCCDDNAM IS BLANK, CHANGE IT SO THAT VSAM CATALOG
*              EOV (IFG0550Y/IFG0200N) CANNOT POSSIBLY FIND A
*              MATCHING ENTRY IN THE TIOT.
         SPACE ,
         CLC   PCCDDNAM,BLANKS     IS IT BLANKS NOW?
         BNE   SUPLOC65            SKIP IF NOT
         MVC   PCCDDNAM,FAKEDDN    ELSE GO CHANGE IT
         SPACE ,
*              REMEMBER WE'VE MODIFIED THE PCCB ENTRY
         SPACE ,
SUPLOC65 OI    WAFLAG2,WAFPCMOD    SET A FLAG HERE
         SPACE ,
*              DEQUEUE FROM THE SYSZPCCB RESOURCE (FOR NOW)
         SPACE ,
         DEQ   MF=(E,WAENQ)        RELEASE THE PCCB ENQUEUE
         SPACE ,
         NI    WAFLAG2,255-WAFPCENQ  AND RESET THE ENQ FLAG
         SPACE ,
*              RE-ISSUE THE SUPERLOCATE.  SAVE THE RETURN CODE IN R10.
         SPACE ,
         LOCATE WACTGPL            DO IT AGAIN
         SPACE ,
         LR    R10,R15             SAVE THE RETURN CODE
         SPACE ,
*              ENQUEUE ON SYSZPCCB AND FIND OUR PCCB ENTRY AGAIN
*              (BE SAFE, THOUGH IT SHOULD NOT HAVE MOVED); THEN
*              RESTORE THE FIELDS WE'VE MODIFIED.
         SPACE ,
*              NOTE THAT MUCH OF THE FOLLOWING CODE ALSO APPEARS
*              IN THE ESTAE EXIT.
         SPACE ,
*                                  THE ENQ PARM LIST IS STILL SET
         SPACE ,
         ENQ   MF=(E,WAENQ)        OBTAIN SYSZPCCB (EXCLUSIVE)
         SPACE ,
         OI    WAFLAG2,WAFPCENQ    REMEMBER THAT WE'RE ENQUEUED
         SPACE ,
*              SEARCH THE PCCB CHAIN FOR A ACTIVE ENTRY WHERE
*              PCCDSNAM MATCHES GORDSNAM.
         SPACE ,
         ICM   R7,B'1111',JSCBPCC  @ FIRST PCCB OR ZERO
SUPLOC70 BZ    SUPLOC99            ENSURE PCCB ENTRY EXISTS, ELSE ERROR
         TM    PCCSTAT1,PCCACTIV   IS THIS PCCB ACTIVE?
         BZ    SUPLOC75            NO, GO LOOK AT THE NEXT ONE
         CLC   PCCDSNAM,GORDSNAM   DOES IT MATCH?
         BE    SUPLOC80            YES, GO UNMODIFY IT...
SUPLOC75 ICM   R7,B'1111',PCCNEXTP  NO, GET THE NEXT ONE
         B     SUPLOC70            AND GO CHECK IT
         SPACE ,
*              UN-MODIFY THE PCCB ENTRY WE'VE FOUND
         SPACE ,
SUPLOC80 NI    PCCSTAT1,255-PCCACTIV  SET ENTRY INACTIVE
         MVC   PCCACBP,ZERO        ZERO THE ACB POINTER
         SPACE ,
*              RESET PCCDDNAM IF IT WAS MODIFIED
         SPACE ,
         CLC   PCCDDNAM,FAKEDDN    IS IT OUR SPECIAL DDNAME?
         BNE   SUPLOC85            BIF NOT
         MVC   PCCDDNAM,BLANKS     ELSE RESTORE IT TO BLANKS
         SPACE ,
SUPLOC85 NI    WAFLAG2,255-WAFPCMOD  RESET "PCCB MODIFIED" FLAG
         SPACE ,
*              DEQUEUE FROM THE SYSZPCCB RESOURCE
         SPACE ,
         DEQ   MF=(E,WAENQ)        RELEASE THE PCCB ENQUEUE
         SPACE ,
         NI    WAFLAG2,255-WAFPCENQ  AND RESET THE ENQ FLAG
         SPACE ,
*              RETURN THE SUPERLOCATE RETURN CODE TO R15 (FOR
*              CONSISTENCY) AND ANALYZE IT.  FOR BREVITY, TESTS
*              FOR "CATALOG NOT ALLOCATED" ARE OMITTED, SINCE
*              THAT SHOULDN'T OCCUR, AND ANYWAY OUR CALLER DOESN'T
*              DO ANYTHING DIFFERENT THAN FOR THE +12 RETURN.
         SPACE ,
         LR    R15,R10             RESTORE RETURN CODE TO R15
         SPACE ,
         C     R15,RCS         0   RETURN CODE=SUCCESS?
         BE    SUPLOC20            YES, TEST IF WE FOUND A GDG BASE
         SPACE ,
         C     R15,RCENT       8   RETURN CODE=DATASET NOT IN CATALOG?
         BE    0(R9)               YES, TAKE DEFINED RETURN
         SPACE ,
         C     R15,RCVLSZ     40   RETURN CODE=DATASET ON > 3 VOLUMES?
         BE    8(R9)               YES, TAKE DEFINED RETURN
         SPACE ,
         B     12(R9)              NO, TAKE RETURN FOR ALL OTHER CODES
         SPACE 2
*              DEQUEUE FROM THE SYSZPCCB RESOURCE IN CASE OF ERROR
         SPACE ,
SUPLOC99 DEQ   MF=(E,WAENQ)        RELEASE THE PCCB ENQUEUE
         SPACE ,
         NI    WAFLAG2,255-WAFPCENQ  AND RESET THE ENQ FLAG
         SPACE ,
         NI    WAFLAG2,255-WAFPCMOD  RESET THIS TOO, FOR SAFETY
         SPACE ,
*              TAKE THE "CATALOG UNAVAILABLE" ERROR RETURN
         SPACE ,
         B     4(R9)               COMME CA
         SPACE ,
         DROP  R6,R7,R8
         SPACE 2
*              THE FOLLOWING CATALOG MANAGEMENT RETURN CODE NAMES AND
*              DESCRIPTIONS WERE EXTRACTED FROM PL/S MACRO IGGMCTRC.
         SPACE ,
*              NOTE THAT ONLY THOSE WE COMPARE AGAINST ARE DEFINED
*              AS DC'S; THE REST (HERE FOR COMPLETENESS) ARE EQU'S.
         SPACE ,
RCS      DC    A(0)                  /* SUCCESSFUL - NO ERRORS       */
RCCAT    EQU   4                     /* CATALOG NON-EXISTENT OR NOT  */
*                                    /*   OPENED                     */
COCECOMP EQU   4                     /* OPEN COMPLETE                */
RCENT    DC    A(8)                  /* ENTRY NOT EXIST (NON-DEF),   */
*                                    /* ENTRY EXISTS (DEFINE)        */
RCINSP   EQU   20                    /* INSUFF SPACE CAT D.S.        */
RCIOL    EQU   24                    /* I/O ERROR CAT D.S. LOCATE    */
RCIONL   EQU   28                    /* I/O ERROR CAT D.S. NOT LOCATE*/
RCINCPL  EQU   32                    /* INVALID CPL OR USER WORK     */
*                                    /* AREA OUTSIDE USER REGION     */
RCDSNF   DC    A(36)                 /* DATA SET NOT FOUND           */
RCVLSZ   DC    A(40)                 /* VOLUME LIST OR WORKAREA TOO  */
*                                    /* SMALL, CORRECT SIZE IN       */
*                                    /* FEEDBACK FIELD               */
RCVLSM   EQU   44                    /* WORKAREA TOO SMALL, UNABLE   */
*                                    /* TO RETURN REQUIRED SIZE      */
RCINFUNC EQU   48                    /* INVALID FUNCTION             */
RCIOU    EQU   52                    /* I/O ERROR USER VOLUME        */
RCSEC    EQU   56                    /* SECURITY VERIFICATION        */
RCINENT  EQU   60                    /* INVALID ENTRY TYPE           */
RCNAME   EQU   64                    /* ASSOCIATION NAME NOT EXIST   */
RCNOSP   DC    A(68)                 /* NO SPACE ON USER VOLUME      */
RCNMNTD  EQU   72                    /* USER VOLUME NOT MOUNTED      */
RCNUNIT  EQU   76                    /* UNIT NOT AVAILABLE FOR       */
*                                    /*   MOUNTING                   */
RCRELOP  EQU   80                    /* INVALID OPERATION FOR
*                                         RELATIONSHIP       @Y30SSPJ*/
RCDATE   EQU   84                    /* UNEXPIRED PURGE DATE         */
RCCRAOP  EQU   88                    /* ERROR WITH CRA OPERATION
*                                                            @Y30SSPJ*/
RCDSEXT  EQU   92                    /* D.S. MAX NO. OF EXTENTS      */
RCOBTAIN EQU   94                    /* OS/VS DADSM OBTAIN ERROR
*                                                            @Y30SSSM*/
RCSPANCK EQU   96                    /* SPANNED RECORD VALIDITY
*                                          CHECK FAILED      @Y30SSPJ*/
RCRENAME EQU   98                    /* DADSM RENAME ERROR   @Y30SSPJ*/
RCSCRTCH EQU   102                   /* DADSM SCRATCH I/0 ERROR
*                                                            @Y30SSPJ*/
RCCATEX  EQU   104                   /* CATALOG EXISTS               */
RCNTFMT4 EQU   106                   /* INVALID FORMAT 4 DSCB
*                                          READ FROM VOLUME  @Y30SSPJ*/
RCINFNAM EQU   108                   /* INVALID FIELDNAME            */
RCPRFNDL EQU   110                   /* PROFILE NOT DELETED  @Z40RSRC*/
RCINFPL  EQU   112                   /* INVALID FPL                  */
RCDUPROF EQU   114                   /* DUPLICATE PROFILE    @Z40RSRC*/
RCCATBAL EQU   116                   /* CATALOG OUT-OF-BALANCE       */
RCNDEFSS EQU   118                   /* ENTITY CANNOT BE DEFINED
*                                       TO SECURITY SUB SYS  @Z40RSRC*/
RCSYSFLD EQU   120                   /* ATTEMPTED TO MODIFY SYSTEM   */
*                                    /* FIELD OR NON-EXISTENT FIELD  */
RCINCI   EQU   124                   /* INVALID CI NUMBER            */
RCBLKVCK EQU   128                   /* VALIDITY CHECK ON USER BLOCK */
RCINPTR  EQU   132                   /* INVALID POINTER              */
RCMISPAR EQU   136                   /* MISSING REQUIRED PARAMETER   */
RCINCNPM EQU   140                   /* INCONSISTENT PARAMETERS      */
RCINENTN EQU   144                   /* INVALID ENTRYNAME            */
RCVOLOWN EQU   148                   /* VOLUME ALREADY OWNED         */
RCDNECAT EQU   152                   /* DELETE OF NON-EMPTY CATALOG  */
RCNOSPSA EQU   156                   /* NO SPACE TO SUBALLOCATE      */
RCVNDSPD EQU   160                   /* VOL NOT DELETED (SPACE DEL   */
RCINSSWA EQU   164                   /* INSUFF STORAGE FOR WORKAREA  */
RCINVDTY EQU   168                   /* UNSUPPORTED DEVICE TYPE      */
RCDUPNVL EQU   172                   /* DUPLICATE NAME ON VOLUME     */
RCNSPVTC EQU   176                   /* NO SPACE ON VTOC             */
RCDSNFND EQU   180                   /* DATA SPACE NOT FOUND         */
RCDSO    EQU   184                   /* DATA SET OPEN - CANNOT       */
*                                    /*   DELETE             @Y30SSSB*/
RCCATUNA DC    A(188)                /* CATALOG UNAVAILABLE          */
RCMLRSZ  EQU   192                   /* MAX. LOG. REC. SIZE EXCEEDED */
RCMCISZD EQU   196                   /* MAX CI SIZE EXCEEDED - DATA  */
RCMCISZI EQU   200                   /* MAX CI SIZE EXCEEDED - INDEX */
RCKEYINC EQU   204                   /* KEY EXTENDS BEYOND END OF    */
*                                    /*   MAXIMUM LOGICAL RECORD     */
RCBUFSIZ EQU   208                   /* BUFFER SIZE TOO SMALL        */
RCSIZCAL EQU   212                   /* SIZE CALCULATIONS UNSOLVABLE */
RCVTCBAL EQU   216                   /* VTOC OF VOLUME OUT-OF-BALANCE*/
RCDOSVTC EQU   220                   /* DOS VTOC CANNOT BE CONVERTED */
*                                    /*   TO OS VTOC                 */
RCMXGRP  EQU   224                   /* CATALOG ENTRY HAS EXCEEDED MAX.
*                                         NUMBER OF OCCURRENCES      */
RCTSAUTH EQU   226                   /* TESTAUTH MACRO FAILED
*                                                            @Y30SSJG*/
RCLOCKER EQU   228                   /* TIME-OF-DAY CLOCK ERROR      */
RCHIGH   EQU   230                   /* NOT LOW RANGE RECORD ON
*                                          CI GET            @Y30SSJG*/
RCSMFER  EQU   232                   /* SMF PROCESSING ERROR         */
RCLEOD   EQU   234                   /* EOD ENCOUNTERED WHILE
*                                          READING CATALOG LOW DATA
*                                          KEY RANGE         @Y30SSJG*/
RCSPMAPE EQU   236                   /* SPACE MAP SCAN ERROR         */
RCNOUCEN EQU   238                   /* NO USER CATALOG ENTRY IN
*                                          MASTER CATALOG FOR
*                                          CONVERTV          @Y30SSJG*/
RCINDER  EQU   240                   /* NO DDNAME ERROR      @Y30SSDW*/
RCEFRMPH EQU   242                   /* PHYSICAL ERROR FROM RECORD
*                                          MANAGEMENT DURING DELETE
*                                          WITH ERASE OPTION @Y30SSPJ*/
RCEF     EQU   244                   /* ERASE FAILED - DELETE NOT    */
*                                    /*   PERFORMED                  */
RCVOLENT EQU   248                   /* VOLUME ENTRY DOES NOT EXIST  */
RCEFRM   EQU   250                   /* LOGICAL ERROR FROM RECORD
*                                          MANAGEMENT DURING DELETE
*                                          WITH ERASE OPTION @Y30SSPJ*/
RCEE     EQU   252                   /* EARLY EXIT CODE              */
         TITLE 'DSNCHECK - IGGPRE00 DSNAME STANDARDS CHECK'
*************************************
* DSNCHECK - DSNAME STANDARDS CHECK *
*************************************
*
*        THIS ROUTINE DETERMINES WHETHER THE DSNAME MEETS INSTALLATION
*        STANDARDS.  THE REQUIRED FORMAT IS DEFINED BELOW.
*
*        CALLED FOR: ALLOCATION, EXTEND, RENAME
*
*
*        ***********
*        *  NOTE:  *  THE TRANSLATE TABLE BELOW IS ALSO USED FOR
*        ***********    THE GDG CHECK IN ROUTINE "COMMON".
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*        THIS ROUTINE MUST BE MODIFIED TO TEST THE DSNAME ACCORDING
*              TO INSTALLATION STANDARDS.
*
*        FOR CUNY, THE DSNAME MUST BEGIN IN THE FORM
*               WYL.AA.ANN.A
*              WHERE A=ALPHA AND N=ALPHANUMERIC
*
*        NOTE THAT THE LOGIC IN THIS SECTION MUST BE MODIFIED IF
*              THE DSNAME STANDARD IS NOT A FIXED FORMAT WITH A
*              SPECIFIC HIGH-LEVEL PREFIX.
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*
*        INPUT: WADSNAME POINTS TO THE DSNAME TO BE CHECKED
*
*        RETURN CODES ARE VIA A BRANCH TABLE:
*           R9+0: DSNAME IS *NOT* VALID
*           R9+4: DSNAME IS VALID
*
*        REGISTER USAGE:
*           R1 = WORK
*           R9 = RETURN ADDRESS
*
DSNCHECK DS    0H
         SPACE ,
*              OBTAIN THE DSNAME'S ADDRESS
         SPACE ,
         L     R1,WADSNAME         FROM THE WORK AREA
         SPACE ,
*              VALIDATE THE DSNAME PREFIX
         SPACE
         CLC   PREFIX,0(R1)        SEE IF IT MATCHES
         BNER  R9                  NO, DSNAME IS INVALID
         SPACE ,
*              COMPARE THE DSNAME AGAINST THE MODEL DEFINED BELOW
         SPACE ,
         MVC   WADSNWRK,0(R1)      COPY DSNAME TO WORK AREA
         TR    WADSNWRK,DSNXLATE   CONVERT CHARACTERS TO TYPE CODES
         OC    WADSNWRK,DSNMATCH   TURN ON ALL VALID TYPE CODES
         XC    WADSNWRK,DSNMATCH   TURN OFF ALL VALID TYPE CODES
         BNZR  R9                  IF ANY ARE LEFT, THE DSN'S INVALID
         SPACE ,
         B     4(R9)               OTHERWISE IT PASSED, USE "OK" RETURN
         SPACE 2
*              DEFINE TRANSLATE TABLE FOR DSNAME VALIDATION
         SPACE ,
* CHARACTER TYPE EQUATES:
         SPACE ,
A        EQU   X'80'               ALPHABETIC (INCLUDES NATIONAL CHARS)
N        EQU   X'40'               NUMERIC
P        EQU   X'20'               PERIOD
         SPACE ,
INV      EQU   X'10'               INVALID (ALL OTHER CHARACTERS)
ANY      EQU   X'FF'               IN MODEL, MEANS ANY CHAR IS OK
         SPACE ,
DSNXLATE DC    256AL1(INV)         PRE-FILL TABLE WITH "INVALID"
         SPACE ,
* ALPHABETIC CHARACTERS:
         SPACE ,
         ORG   DSNXLATE+C'A'
         DC    (C'I'-C'A'+1)AL1(A)  LETTERS A-I
         ORG   DSNXLATE+C'J'
         DC    (C'R'-C'J'+1)AL1(A)  LETTERS J-R
         ORG   DSNXLATE+C'S'
         DC    (C'Z'-C'S'+1)AL1(A)  LETTERS S-Z
         ORG   DSNXLATE+C'@'
         DC    AL1(A)               NATIONAL CHARACTER @
         ORG   DSNXLATE+C'#'
         DC    AL1(A)               NATIONAL CHARACTER #
         ORG   DSNXLATE+C'$'
         DC    AL1(A)               NATIONAL CHARACTER $
         SPACE ,
* NUMERIC CHARACTERS:
         SPACE ,
         ORG   DSNXLATE+C'0'
         DC    (C'9'-C'0'+1)AL1(N)  NUMERICS 0-9
         SPACE ,
* THE PERIOD:
         SPACE ,
         ORG   DSNXLATE+C'.'
         DC    AL1(P)              YUP.
         ORG   ,
         SPACE 2
*              DEFINE THE MATCH PATTERN (PRESET TO ALL "ANY"):
         SPACE ,
DSNMATCH DC    (L'JFCBDSNM)AL1(ANY)          (WILL BE MODIFIED BELOW)
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              THE FOLLOWING MODIFIES THE MATCH PATTERN TO
*              CUNY SPECIFICATIONS:
         SPACE ,
         ORG   DSNMATCH
         DC    AL1(A,A,A,P,A,A,P,A,A+N,A+N,P,A)
*                  W Y L . A A . A A/N A/N . A
         ORG   ,
         SPACE ,
PREFIX   DC    C'WYL.'             REQUIRED DSNAME PREFIX
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         TITLE 'RACCHECK - IGGPRE00 RACF AUTHORITY CHECK'
***********************************
* RACCHECK - RACF AUTHORITY CHECK *
***********************************
*
*        THIS ROUTINE CALLS RACF TO CHECK THAT THE USER HAS RACF
*        AUTHORIZATION TO ALLOCATE A DATASET ON THIS VOLUME.
*
*        THE RACF CALL IS FOR CLASS "FACILITY" AND PROFILE NAME
*        $DASDI.VVVVVV, WHERE VVVVVV IS THE VOLUME SERIAL.  RACF
*        UPDATE AUTHORITY IS REQUIRED TO ALLOCATE A DATASET.  IF
*        THE PROFILE NAME IS NOT DEFINED, THEN ALLOCATION ON THE
*        VOLUME DOES NOT REQUIRE RACF AUTHORIZATION.
*
*        NOTE THAT THE RACF CALL SPECIFIES LOG=ASIS, TO LOG
*        VIOLATIONS ACCORDING TO THE PROFILE'S SPECIFICATION.
*        IF WE USE STORAGE VOLUMES AND PROTECT THEN THROUGH THIS
*        FACILITY, THE CALL SHOULD BE CHANGED TO LOG=NOFAIL, AS
*        OTHERWISE MISLEADING MESSAGES (ICH408I) AND/OR SMF RECORDS
*        WILL BE CREATED IF USERS ARE AUTHORIZED TO ONLY A SUBSET
*        OF THE STORAGE VOLUMES.
*
*        NOTE THAT VSAM DATASETS ARE *NOT* EXCLUDED FROM THIS CHECK.
*
*        IF THE REQUEST IS FOR NON-SPECIFIC VOLUME ALLOCATION AND
*        THE VOLUME BEING TESTED IS PUBLIC, THEN THE RACROUTE IS
*        ISSUED WITH LOG=NOFAIL TO AVOID ERROR MESSAGES IF THE USER
*        HASN'T SUFFICIENT AUTHORITY IN THIS CASE.
*
*
*        THE RACROUTE PARAMETERS AND PARAMETER LIST HAVE ALL BEEN
*        SET UP BY PPWAINIT.
*
*        NOTE THAT THIS CODE IS ADAPTED FROM THE SAMPLE EXIT THAT'S
*        DISTRIBUTED WITH RACF IN SYS1.SAMPLIB MEMBER RACINSTL.
*
*
*        CALLED FOR: ALLOCATION, EXTEND
*
*        RETURN CODES ARE VIA A BRANCH TABLE:
*           R9+0: AUTHORITY DENIED BY RACF
*           R9+4: REQUEST IS AUTHORIZED BY RACF, OR RESOURCE IS NOT
*                 DEFINED TO RACF, OR RACF IS NOT ACTIVE
*
*        REGISTER USAGE:
*           R9 = RETURN ADDRESS
*
RACCHECK DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              WYLBUR SAVES ARE EXCLUDED FROM THE RACF CHECK
*              BECAUSE WYLBUR DOES ITS OWN RACF CALL.
         SPACE ,
         TM    WAFLAGU,WAFWYLIO    IS OUR CALLER A WYLBUR I/O TASK?
         BO    4(R9)               YES, BYPASS THE RACF CALL
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              DETERMINE IF THE REQUEST IS FOR A NON-SPECIFIC VOLUME
*              ALLOCATION AND THE CURRENT VOLUME IS A PUBLIC VOLUME.
*              IF SO, DO THE RACROUTE WITH LOG=NOFAIL, TO AVOID RACF
*              ERROR MESSAGES IF THE USER DOES NOT HAVE AUTHORITY.
*              THERE IS ALSO COMPARABLE CODE AT "ERROR4" TO BYPASS
*              THE ERROR MESSAGE TO SYSMSG IN THIS CASE.
*
*              NOTE THAT A TEST FOR A SYSTEM-GENERATED NAME WAS
*              REMOVED; A TEMPORARY DATASET CAN HAVE A REAL DSNAME.
         SPACE ,
*              ADDRESS THE SIOT, IF PRESENT
         SPACE ,
         ICM   R1,B'1111',WASIOTAD  @ SIOT, IF AVAILABLE
         BZ    RACHECK1            SIOT NOT AVAILABLE, GO NORMALLY
         USING SIOT,R1
         SPACE ,
*              TEST IF SIOT INDICATES NON-SPECIFIC VOLUME REQUEST
         SPACE ,
         TM    SIOTSMS,SIOTSMS6    ON => SPECIFIC VOLUME WAS SPECIFIED
         BO    RACHECK1            CONTINUE WITH MESSAGES IF SPECIFIC
         SPACE ,
*              TEST IF UCB INDICATES A PUBLIC VOLUME
         SPACE ,
         ICM   R1,B'1111',IEXUCB   @ UCB
         BZ    RACHECK1            BRANCH IF UCB NOT AVAILABLE
         USING UCBOB,R1
         TM    UCBSTAB,UCBBPUB     PUBLIC VOLUME?
         BO    RACHECK2            YES, THEN BYPASS ERROR MESSAGES
         DROP  R1
         SPACE ,
*              ISSUE THE NORMAL RACROUTE CALL FOR AUTHORITY CHECKING
         SPACE ,
RACHECK1 RACROUTE  REQUEST=AUTH,   REQUEST IS FOR RACHECK              *
               CLASS=RACLASS,      CLASS NAME IS 'FACILITY'            *
               ENTITY=RACPPROF,    ENTITY IS '$DASDI.VVVVVV'           *
               ATTR=UPDATE,        UPDATE AUTHORITY IS REQUIRED        *
               LOG=ASIS,           LOG ACCESS ACCORDING TO PROFILE     *
               WORKA=SAFWORK,      ADDRESS OF SAF WORK AREA            *
               MF=(E,RACPROUT)     ADDRESS THE PARAMETER SKELETON
         B     RACHECK3            CONTINUE AND CHECK THE RETURN CODE
         SPACE ,
*              ISSUE THE RACROUTE CALL WITH LOG=NOFAIL INSTEAD
         SPACE ,
RACHECK2 RACROUTE  REQUEST=AUTH,   REQUEST IS FOR RACHECK              *
               CLASS=RACLASS,      CLASS NAME IS 'FACILITY'            *
               ENTITY=RACPPROF,    ENTITY IS '$DASDI.VVVVVV'           *
               ATTR=UPDATE,        UPDATE AUTHORITY IS REQUIRED        *
               LOG=NOFAIL,         DO NOT LOG ACCESS FAILURES          *
               WORKA=SAFWORK,      ADDRESS OF SAF WORK AREA            *
               MF=(E,RACPROUT)     ADDRESS THE PARAMETER SKELETON
         SPACE ,
*              CHECK THE RACROUTE RETURN CODE
         SPACE ,
RACHECK3 DS    0H
         SPACE ,
*              THESE ARE THE EXPECTED RETURN CODES:
*                R15=0  -  THE RACF AUTHORITY CHECK SUCCEEDED.
*                R15=4  -  RACF IS NOT ACTIVE, OR THERE IS NO
*                          PROFILE FOR THE REQUESTED RESOURCE.
*                          IN EITHER CASE, WE ALLOW ACCESS.
*                R15=8  -  THE RACF AUTHORITY CHECK FAILED.
*
*              WE NEED TO CHECK ONLY FOR R15=8 BECAUSE ALL OTHER
*              RETURN CODES ALLOW THE ALLOCATION TO PROCEED.
         SPACE ,
         C     R15,EIGHT           TEST FOR RETURN CODE=8
         BER   R9                  FAIL REQUEST IF RC=8
         SPACE ,
         B     4(R9)               OTHERWISE IT PASSED, USE "OK" RETURN
         TITLE 'VOLDSNIN - IGGPRE00 VOLUME && DSNAME INITIAL CHECK'
********************************************
* VOLDSNIN - VOLUME & DSNAME INITIAL CHECK *
********************************************
*
*        THIS ROUTINE DETERMINES WHETHER THE CURRENT VOLUME AND DSNAME
*              ARE SUBJECT TO DSNAME/CATALOG STANDARDS
*
*        CALLED FOR: ALLOCATION, RENAME, EXTEND
*
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*        THIS ROUTINE MUST BE MODIFIED TO TEST THE VOLUME SERIAL
*              AND DSNAME ACCORDING TO INSTALLATION STANDARDS.
*
*        FOR CUNY, DATASETS SUBJECT TO DSNAME CHECKS ARE ALL THOSE ON
*            VOLUMES WITH PREFIXES "ACT", "CNY", "PRD", "RES",
*            AND "UCC", AND ANY DATASETS WITH A HIGH-LEVEL INDEX OF
*            "WYL." ON VOLUMES WITH PREFIXES "ADA", "ILS", "JES",
*            "MVS", "SCR", "SYS", "TMP", AND "UCC".
*
*        FOR CUNY, DATASETS SUBJECT TO CATALOG CHECKS ARE THOSE WITH A
*            HIGH-LEVEL INDEX OF "WYL." ON VOLUMES WITH PREFIXES OF
*            "ACT", "ADA", "CNY", "ILS", "JES", "MVS",
*            "PRD", "RES", "SYS", AND "UCC".
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*
*        INPUT:  FLAG BIT "WAFVSAM" INDICATES IF THE CURRENT DATASET
*              IS VSAM (DSORG=AM).
*                R1 CONTAINS THE ADDRESS OF THE DSNAME TO BE CHECKED
*              (NOTE THAT THIS IS DIFFERENT FOR RENAME, WHERE IT'S
*              THE *NEW* DSNAME, THAN FOR ALLOCATE AND EXTEND).
*
*        OUTPUT: FLAG BITS "WAFDSNCK" AND "WAFCATCK" IN "WAFLAG1"
*              ARE SET AS APPROPRIATE.  R1 IS SAVED IN WADSNAME.
*
*        NOTE: VSAM DATASETS ARE NOT ELIGIBLE FOR EITHER DSNAME
*              OR CATALOGABILITY CHECKS.
*
*        REGISTER USAGE:
*           R1 = DSNAME POINTER
*           R6 = UCB POINTER
*           R9 = RETURN ADDRESS
*           R14 = WORK
*           R15 = WORK
*
VOLDSNIN DS    0H
         SPACE ,
*              SAVE DSNAME POINTER FOR FUTURE USE
         SPACE ,
         ST    R1,WADSNAME         SAVEITHERE
         SPACE ,
*              ENSURE FLAGS ARE RESET
         SPACE ,
         NI    WAFLAG1,255-WAFDSNCK-WAFCATCK  LIKE SO
         SPACE ,
*              BYPASS VSAM DATASETS
         SPACE ,
         TM    WAFLAG1,WAFVSAM     IS THIS ONE?
         BOR   R9                  YES, EXIT THIS ROUTINE
         SPACE ,
*              SEE IF THE VOLUME SERIAL IS IN OUR LIST.
         SPACE ,
*              LOOP THROUGH THE VOLUME LIST (FOUND BELOW)
         SPACE ,
         LA    R14,VOLIST          @ FIRST VOLUME PREFIX
         LA    R15,VOLCOUNT        NUMBER OF ENTRIES TO CHECK
         SPACE ,
VOLLOOP  CLC   WAUCBVOL(L'VOLIST),0(R14)  IS THIS ONE OF OURS?
         BE    VOLGOTIT            BIF SO
         LA    R14,L'VOLIST+1(R14)  NO, INCREMENT POINTER
         BCT   R15,VOLLOOP         AND GO TEST THE NEXT ONE
         SPACE ,
*              VOLUME WAS NOT FOUND.  DSNAME ISN'T TO BE CHECKED
*              EITHER IN THAT CASE, SO JUST RETURN TO CALLING ROUTINE.
         SPACE ,
         BR    R9                  ... LIKE SO.
         SPACE ,
*              VOLUME WAS FOUND.  SET FLAG, THEN LOOK AT DSNAME.
         SPACE ,
*              DSNAME CHECK DETERMINATION
         SPACE ,
VOLGOTIT TM    L'VOLIST(R14),WAFDSNCK  IS DSN CHECK REQUIRED?
         BO    DSNCK10             YES, GO DO IT
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              CHECK HIGH-LEVEL INDEX.  ANY "WYL." DATASETS MUST
*              UNDERGO DSNAME VALIDATION IF THE VOLUME IS IN OUR
*              LIST EVEN IF WAFDSNCK ISN'T SET.  (IF IT IS SET,
*              *ANY* DSNAME ON THE VOLUME IS VALIDATED.)
         SPACE ,
         L     R1,WADSNAME         ENSURE THAT R1 POINTS TO DSNAME
         SPACE ,
         CLC   HILINDEX,0(R1)      CHECK DSNAME HIGH-LEVEL INDEX
         BE    DSNCK10             MATCH, GO SET DSNAME VALIDATION
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
         B     VOLGOT2             ELSE SKIP TO CAT CHECK TESTS
DSNCK10  DS    0H
         SPACE ,
*              NOTE THAT THE OBVIOUS METHOD OF COPYING THE FLAG BITS
*              (OC  WAFLAG1,0(R14)) IS NOT USED BECAUSE OF THE MANY
*              EXCEPTION TESTS WE MUST MAKE.  ALSO, NOTE THAT R14
*              MUST BE PRESERVED UNTIL LABEL "VOLGOT2" TO ALLOW THE
*              VOLUME CATALOG CHECK CODE TO WORK.
         SPACE 2
*              CHECK IF DSNAME CHECK SHOULD BE BYPASSED.
         SPACE ,
*              THE FOLLOWING DATASETS WILL BE EXCLUDED FROM THE
*              DSNAME STANDARDS CHECK:
*
*               VSAM (DSORG=AM)  -  VSAM DSCB1 NAMES CAN'T PROPERLY BE
*                                   CONTROLLED HERE.  VSAM DATASETS ARE
*                                   EXCLUDED ABOVE (IN THIS ROUTINE).
*               VIO              -  VIO DSNAMES DON'T MATTER; EXCLUDED
*                                   IN THE IGGPRE00 MAINLINE.
         SPACE ,
*              SINCE VSAM AND VIO DATASETS DON'T GET TO THIS ROUTINE,
*              NO CODE IS REQUIRED HERE.
         SPACE ,
*              THE FOLLOWING AUTHORIZED PROGRAMS WILL BE EXCLUDED
*              FROM THE DSNAME CHECK BECAUSE THEY ARE KNOWN (AND
*              ALLOWED) TO CREATE NON-STANDARD NAMES:
*
*               DFHSM  (PREFIX IS "ARC")
*               ICKDSF
*               IEHMOVE (PROGRAM NAME "IEHMVESV") WHEN DSNAME
*                       BEGINS WITH "&&TEMP.T": THIS IS CREATED
*                       FOR A "MOVE DSNAME" TO THE SAME VOLUME
*               FDR... WHEN DSNAME BEGINS WITH "FDRABR."
         SPACE ,
         TM    WAFLAG1,WAFWAPGM    HAVE WE AN AUTHORIZED PROGRAM NAME?
         BZ    DSNCK20             NO, SKIP THIS CODE
         SPACE ,
*              BECAUSE THERE ARE ONLY THREE NAMES TO COMPARE HERE,
*              THE CODE ISN'T SET UP TO LOOP THROUGH THE LIST
         SPACE ,
         L     R1,WADSNAME         ENSURE THAT R1 POINTS TO DSNAME
         SPACE ,
         CLC   PGMPREF1,WAPGM      CHECK PROGRAM PREFIX
         BE    VOLGOT2             IF FOUND EXIT THIS ROUTINE
         SPACE ,
         CLC   PGMPREF3,WAPGM      CHECK FOR "FDR" PROGRAM PREFIX
         BNE   DSNCK15             SKIP FOLLOWING TEST IF NOT
         CLC   FDRABDSN,0(1)       COMPARE FOR "FDRABR." DSNAME
         BE    VOLGOT2             IF FOUND EXIT THIS ROUTINE
DSNCK15  DS    0H
         SPACE ,
         CLC   PGMLISTA,WAPGM      CHECK PROGRAM NAME
         BE    VOLGOT2             IF FOUND EXIT THIS ROUTINE
         SPACE ,
         CLC   PGMLISTB,WAPGM      CHECK PROGRAM NAME FOR IEHMOVE
         BNE   DSNCK20             IF NOT FOUND SKIP DSNAME COMPARE
         SPACE ,
         CLC   IEHMVDSN,0(R1)      COMPARE FOR IEHMOVE'S DSNAME
         BE    VOLGOT2             IF FOUND EXIT THIS ROUTINE
         SPACE ,
DSNCK20  DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              WYLBUR SAVES ARE EXCLUDED FROM THE DSNAME CHECKING
*              BECAUSE WYLBUR DOES ITS OWN CHECKS.
         SPACE ,
         TM    WAFLAGU,WAFWYLIO    IS OUR CALLER A WYLBUR I/O TASK?
         BO    VOLGOT2             YES, DO NOT PERFORM DSNAME CHECKS
         SPACE 2
*              TSO USERID SRVIM (THE IBM SERVICE DIRECTOR) IS
*              EXEMPTED FROM DSNAME CHECKING WHEN THE DSNAME
*              PREFIX IS "SYS3." AND THE VOLUME PREFIX IS "CNY".
*              THIS IS NECESSARY BECAUSE OUR MOD LM54400 IS NOT
*              COMPLETE ENOUGH TO ALLOW IT TO USE A "WYL." PREFIX.
         SPACE ,
*              FIRST, FIND OUT IF THERE IS A TSO USERID
         SPACE ,
         L     R1,PSATOLD           @ CURRENT TCB
         USING TCB,R1
         L     R1,TCBJSTCB          @ JOB STEP TCB
         ICM   R1,B'1111',TCBJSCB   @ JSCB
         BZ    NOTSRVIM             SKIP IF NO JSCB ADDRESS
         USING IEZJSCB,R1
         ICM   R1,B'1111',JSCBPSCB  @ PSCB
         BNP   NOTSRVIM             SKIP IF PSCB NOT PRESENT
         USING PSCB,R1
         SPACE ,
*              SEE IF THE TSO USERID IS SRVIM
         SPACE ,
         CLC   PSCBUSER,SRVIM       WELL, IS IT?
         BNE   NOTSRVIM             SKIP IF NOT
         DROP  R1
         SPACE ,
*              SEE IF THE DATASET NAME PREFIX IS SYS3.
         SPACE ,
         L     R1,WADSNAME          @ DSNAME
         CLC   SYS3,0(R1)           CHECK THE HIGH-LEVEL INDEX
         BNE   NOTSRVIM             SKIP IF IT'S NOT SYS3.
         SPACE ,
*              SEE IF THE VOLUME PREFIX IS CNY
         SPACE ,
         CLC   CNY,0(R14)           (R14 -> VOLIST ENTRY)
         BNE   NOTSRVIM             SKIP IF IT'S NOT A CNY VOLUME
         SPACE ,
*              ALL TESTS PASSED FOR SRVIM, BYPASS DSNAME VALIDATION
         SPACE ,
         B     VOLGOT2
         SPACE ,
NOTSRVIM DS    0H
         SPACE 2
*              NOTE THAT STAFF JOBS ARE NO LONGER EXEMPT FROM DSNAME
*              CHECKING (STARTED TASKS WERE AND ARE NOT, EITHER).
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
         OI    WAFLAG1,WAFDSNCK    INDICATE DSNAME MUST BE VALID
         SPACE 2
*              CATALOG CHECK DETERMINATION
         SPACE ,
VOLGOT2  TM    L'VOLIST(R14),WAFCATCK  IS CAT CHECK REQUIRED?
         BZR   R9                  IF NOT, RETURN
         SPACE ,
*              CHECK IF CATALOG CHECK SHOULD BE BYPASSED.
         SPACE ,
*              THE FOLLOWING DATASETS WILL BE EXCLUDED FROM THE
*              CATALOGABILITY CHECK:
*
*               VSAM (DSORG=AM)  -  ALL VSAM DATASETS ALREADY MUST
*                                   BE CATALOGED.  VSAM DATASETS ARE
*                                   EXCLUDED ABOVE (IN THIS ROUTINE).
*               VIO              -  VIO DATASETS CANNOT BE CATALOGED;
*                                   EXCLUDED IN THE IGGPRE00 MAINLINE.
*               ISAM (DSORG=IS)  -  ONLY THE FIRST ALLOCATION CALL
*                                   FOR AN ISAM DATASET IS SUBJECT
*                                   TO THIS CHECK.  (SEE THE JCL
*                                   MANUAL: MANY VALID ISAM DATASET
*                                   ALLOCATIONS CAN'T BE CATALOGED.)
         SPACE ,
*              SINCE VSAM AND VIO DATASETS DON'T GET TO THIS ROUTINE,
*              ONLY ISAM (ALLOCATE FUNCTION) MUST BE TESTED HERE:
         SPACE ,
         CLI   IEXFUNC,IEXALL       IS THIS ALLOCATE?
         BNE   VOLCK10              SKIP TEST IF NOT
         TM    IEXFLAG,IEXMF1       IS THERE A JFCB?
         BO    VOLCK10              SKIP IF NOT, CAN'T BE ISAM
         L     R14,IEXPTR1          YES, GET JFCB ADDRESS
         USING JFCB,R14
         TM    JFCDSORG,JFCORGIS    IS THIS AN ISAM ALLOCATION?
         BZ    VOLCK10              SKIP IF NOT
         DROP  R14
         SPACE ,
*              DETERMINE IF THIS IS THE FIRST ISAM ALLOCATION CALL
*              BY CHECKING THE DSAB LIST
         SPACE ,
         L     R14,IEXPTR2          GET DSAB LIST POINTER
         CLC   0(4,R14),4(R14)      IS CURRENT (+0) = FIRST (+4)?
         BNER  R9                   EXIT IF NOT, NO CATCK THIS DSN
VOLCK10  DS    0H
         SPACE ,
*              THE FOLLOWING AUTHORIZED PROGRAMS WILL BE EXCLUDED
*              FROM THE CATALOGABILITY CHECK BECAUSE THEY ARE KNOWN
*              (AND ALLOWED) TO MANIPULATE THE CATALOG THEMSELVES:
*
*               DFHSM  (PREFIX IS "ARC")
*               DFDSS  (PREFIX IS "ADR")
*               FDRDSF (PREFIX "FDR")
*               IEHMOVE (PROGRAM NAME "IEHMVESV") - OTHERWISE A
*                       COPY/MOVE TO ANOTHER VOLUME OF A CATALOGED
*                       DATASET IS NOT ALLOWED
         SPACE ,
         TM    WAFLAG1,WAFWAPGM    HAVE WE AN AUTHORIZED PROGRAM NAME?
         BZ    VOLCK20             NO, SKIP THIS CODE
         SPACE ,
*              BECAUSE THERE ARE ONLY FOUR NAMES TO COMPARE HERE,
*              THE CODE ISN'T SET UP TO LOOP THROUGH THE LIST
         SPACE ,
         CLC   PGMPREF1,WAPGM      CHECK PROGRAM PREFIX
         BER   R9                  IF FOUND EXIT THIS ROUTINE
         SPACE ,
         CLC   PGMPREF2,WAPGM      CHECK PROGRAM NAME
         BER   R9                  IF FOUND EXIT THIS ROUTINE
         SPACE ,
         CLC   PGMPREF3,WAPGM      CHECK PROGRAM NAME
         BER   R9                  IF FOUND EXIT THIS ROUTINE
         SPACE ,
         CLC   PGMLISTB,WAPGM      CHECK PROGRAM NAME FOR IEHMOVE
         BER   R9                  IF FOUND EXIT THIS ROUTINE
VOLCK20  DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              CHECK HIGH-LEVEL INDEX.  ONLY "WYL." DATASETS MUST
*              UNDERGO THE CATALOG CHECK.
         SPACE ,
         L     R1,WADSNAME         ENSURE THAT R1 POINTS TO DSNAME
         SPACE ,
         CLC   HILINDEX,0(R1)      CHECK DSNAME HIGH-LEVEL INDEX
         BNER  R9                  EXIT IF NOT OURS ("WYL.")
         SPACE ,
*              WYLBUR ACTIVE/QWIKFILE SAVES ARE EXCLUDED FROM THE
*              CATALOGABILITY TEST BECAUSE WYLBUR MAY SAVE MULTIPLE
*              SUCH DATASETS FOR A SINGLE USER ON DIFFERENT VOLUMES.
         SPACE ,
         TM    WAFLAGU,WAFWYLIO    IS OUR CALLER A WYLBUR I/O TASK?
         BZ    VOLCK80             NO, SKIP "ACTIVE" COMPARES
*                            BYTE: 01234567890123456
         CLC   WYLACT,10(R1)       WYL.GG.UUU.ACTIVE ?
         BER   R9                  YES, EXIT
         CLC   WYLQWIK,10(R1)      WYL.GG.UUU.QWIK.?
         BER   R9                  YES, EXIT
VOLCK80  DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              DATASET PASSES ALL TESTS.  SET THE FLAG (AT LAST)...
         SPACE ,
         OI    WAFLAG1,WAFCATCK    INDICATE DSNAME MUST BE CAT'ABLE
         SPACE ,
         BR    R9                  RETURN TO CALLING ROUTINE
         SPACE 2
*              PROGRAM NAME PREFIX LIST (LENGTHS DEFINE THE COMPARES)
         SPACE ,
PGMPREF1 DC    C'ARC'              DFHSM
PGMPREF2 DC    C'ADR'              DFDSS
PGMPREF3 DC    C'FDR'              FDRDSF ET. AL.
         SPACE ,
*              PROGRAM NAME LIST
         SPACE ,
PGMLISTA DC    CL8'ICKDSF'
PGMLISTB DC    CL8'IEHMVESV'       PART OF IEHMOVE
         SPACE ,
*              SPECIAL DSNAMES
         SPACE ,
IEHMVDSN DC    C'&&&&TEMP.T'       THAT'S &&TEMP.T FOR IEHMOVE (IT'S
*                                  FOLLOWED BY 7 NUMERICS, BUT THAT'S
*                                  NOT CHECKED HERE)
FDRABDSN DC    C'FDRABR.'          USED BY FDR/ABR...
         SPACE 2
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              VOLUME PREFIX LIST
         SPACE ,
*              NOTE: THE LENGTH OF THE FIRST ENTRY DEFINES THE
*                    COMPARE LENGTH; ALL PREFIXES IN THE TABLE
*                    MUST BE THE SAME LENGTH.
*
*                    THE FLAG BITS INDICATE WHICH FUNCTIONS ARE
*                    REQUIRED FOR THESE VOLUMES.
*
*                    WAFDSNCK: ON = ALL DSNAMES MUST MEET STANDARDS
*                              OFF= ONLY "WYL." DATASETS ARE CHECKED
*
*                    WAFCATCK: ON = ONLY "WYL." DATASETS ARE CHECKED
*                              OFF= NO DATASETS MUST BE CATALOGABLE
*
         SPACE ,
VOLIST   DC    C'ACT',AL1(WAFDSNCK+WAFCATCK)
         DC    C'ADA',AL1(WAFCATCK)
         DC    C'CNY',AL1(WAFDSNCK+WAFCATCK)
         DC    C'ILS',AL1(WAFCATCK)
         DC    C'JES',AL1(WAFCATCK)
         DC    C'MVS',AL1(WAFCATCK)
         DC    C'PRD',AL1(WAFDSNCK+WAFCATCK)
         DC    C'RES',AL1(WAFDSNCK+WAFCATCK)
         DC    C'SCR',AL1(0)
         DC    C'SYS',AL1(WAFCATCK)
         DC    C'TMP',AL1(0)
         DC    C'UCC',AL1(WAFDSNCK+WAFCATCK)
VOLCOUNT EQU   (*-VOLIST)/(L'VOLIST+1)  COMPUTE NUMBER OF ENTRIES
         SPACE 2
*              HIGH-LEVEL INDEX FOR DSNAME COMPARE
         SPACE ,
HILINDEX DC    C'WYL.'
         SPACE ,
*              COMPARES FOR WYLBUR DATASET NAMES
         SPACE ,
WYLACT   DC    C'.ACTIVE '         ACTIVE FILE
WYLQWIK  DC    C'.QWIK.'           QWIK FILE
         SPACE ,
*              ADDITIONAL CONSTANTS FOR SRVIM/SYS3./CNY CHECKS
         SPACE ,
SRVIM    DC    CL(L'PSCBUSER)'SRVIM'  SRVIM USERID
SYS3     DC    C'SYS3.'            SYS3. HIGH LEVEL INDEX
CNY      DC    C'CNY'              CNY VOLUME PREFIX
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         TITLE 'MODDSCB  - IGGPRE00 FORMAT 1 DSCB MODIFICATION ROUTINE'
***********************************
* MODDSCB  - F1 DSCB MODIFICATION *
***********************************
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*        THIS *ENTIRE* ROUTINE IS INSTALLATION-SPECIFIC.
*
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
*
*
*        THIS ROUTINE ADDS CUNY INFORMATION TO THE FORMAT 1 DSCB.
*
*        CALLED FOR: ALLOCATION, EXTEND
*
*        DSCB FIELDS ADDED: CREATION TIME OF DATASET
*
*
*        REGISTER USAGE:
*           R0 = WORK
*           R1 = WORK
*           R7 = "MODEL" F1 DSCB AREA (FROM PARM, OR IN WORKAREA)
*           R9 = RETURN ADDRESS
*           R14 = WORK
*           R15 = WORK
*
*        NOTE: CALLED FOR ALL DATASET TYPES, INCLUDING VSAM.
*
*        NOTE: IBM "RESERVED" FIELDS IN THE FORMAT 1 DSCB WHICH WERE
*              FORMERLY USED BY CUNY ARE NO LONGER ZEROED WHEN A
*              "PARTIAL" DSCB IS PASSED, AS IBM NOW ACTUALLY USES
*              THOSE FIELDS FOR DF/SMS.
*
*
*        SHORT DISSERTATION ON MODEL/PARTIAL/GDG DSCB POINTERS:
*
*              IBM IS VERY CONFUSING IN THE USE OF THE TERM
*              "MODEL DSCB" HERE.  THERE ARE ACTUALLY THREE TYPES
*              OF MODEL DSCBS BEING REFERRED TO:
*
*                1) THE GDG (USUALLY) MODEL DSCB.  THIS IS A DATASET
*                   WHICH EXISTS ONLY TO PROVIDE DCB AND LABEL
*                   CHARACTERISTICS FOR THE ALLOCATION OF OTHER
*                   DATASETS (ESPECIALLY FOR A GDG, WHERE A MODEL
*                   IS REQUIRED).  AS FAR AS ALLOCATION IS CONCERNED,
*                   THOUGH, THIS IS JUST A NORMAL DATASET -- EXCEPT
*                   THAT IT IS USUALLY ALLOCATED WITHOUT ANY SPACE.
*
*                2) THE "PARTIAL" DSCB.  THIS IS WHAT IS REFERRED TO
*                   BY FLAG IEXMF1.  THIS IS A DSCB-FORMAT PARM PASSED
*                   TO ALLOCATION (SVC 32) IN PLACE OF A JFCB (BIT 0
*                   IN R0 IS SET TO INDICATE THIS), AND IS USED
*                   PRIMARILY BY UTILITY PROGRAMS LIKE IEHMOVE.  IT IS
*                   A CONFUSING MISNOMER TO CALL THIS A "MODEL" DSCB.
*                   NOTE THAT THIS DSCB FORMAT IS ALSO PASSED WHEN
*                   ALLOCATION IS INVOKED BY THE (NEW) "REALLOC" MACRO.
*
*                3) THE MODEL DSCB PASSED BACK TO ALLOCATION VIA
*                   IEXFMT1.  THIS DSCB IS USED BY THIS EXIT TO
*                   PRE-SET CERTAIN FIELDS IN THE REAL FORMAT 1
*                   DSCB, AND IT DOES NOT EXIST OUTSIDE OF THIS
*                   EXIT ENVIRONMENT.
*
MODDSCB  DS    0H
         SPACE ,
*              GET POSSIBLE DSCB POINTER
         SPACE ,
         L     R7,IEXFMT1      POINTER TO F1 DSCB 96 BYTE
         USING DS1FMTID,R7          DATA AREA
         SPACE ,
*              TEST IF THIS ENTRY WAS PASSED A PARTIAL (MODEL) DSCB.
*              NOTE THAT THERE IS NO JFCB AVAILABLE IN THIS CASE.
*
*              CODE HERE TO CLEAR "OLD" CUNY FIELDS WAS REMOVED, AS
*              THOSE FIELDS ARE NOW ACTUALLY BEING USED BY DFSMS.
         SPACE ,
         TM    IEXFLAG,IEXMF1    IF ON, IEXFMT1 -> PARTIAL F1 DSCB.
         BO    MODDSCB3            SKIP CODE FOR *NO* PARTIAL DSCB
         SPACE ,
*              SINCE WE WERE *NOT* PASSED A PARTIAL DSCB, WE MUST
*              USE THE AREA AT WA1FMODL AND PASS IT BACK TO THE
*              ALLOCATE/EXTEND FUNCTION.  (IF A PARTIAL DSCB *WAS*
*              PASSED, THE CREATION TIME IS ADDED TO IT.)
         SPACE ,
         LA    R7,WAF1MODL     ADDRESS OF WORK AREA
         ST    R7,IEXFMT1      STORE IT IN PARAMETER LIST
*                              AS MODEL DSCB POINTER
*                              NOTE THAT WORKAREA IS ALREADY ZEROED.
         SPACE ,
MODDSCB3 DS    0H
         SPACE ,
*              SAVE THE TIME OF CREATION IN THE DSCB
         SPACE ,
*              NOTE THAT THE CREATION DATE FOR A NEW DATASET WILL NOW
*              REPRESENT TODAY'S DATE -- AS PER APAR OY44612 WHICH
*              WAS FIXED IN HBB4430.  (SPECIAL CODE USED TO BE HERE
*              TO DEAL WITH THAT SITUATION.)
         SPACE ,
         TIME  BIN                 GET THE TIME (IN BINARY) AND DATE
         SPACE ,
*              SAVE THE TIME IN AN UNUSED FIELD IN THE DSCB1.  THIS
*              IS USED ONLY BY WYLCLEAN, TO DETERMINE THE AGE OF A
*              DATASET.
         SPACE ,
         STCM  R0,B'0110',DSCB1+X'67'  YES, SAVE THE CURRENT TIME
*                                  NOTE THAT THE HI-ORDER BYTE
*                                  IS ALWAYS ZERO AND IS NOT SAVED.
         SPACE ,
         BR    R9                  RETURN TO CALLER
         DROP  R7
         TITLE 'INITPPWA - IGGPRE00 WORKAREA INITIALIZATION'
**************************************
* INITPPWA - WORKAREA INITIALIZATION *
**************************************
*
*        THIS ROUTINE GETMAINS AND CLEARS THE WORKAREA, INSERTS THE
*        EYECATCHER, AND CAN PERFORM ANY INSTALLATION-DEPENDENT SETUP.
*
*        THE WORKAREA ADDRESS IS RETURNED IN R5 AND STORED IN THE
*        INSTALLATION EXIT RESERVED WORD IN THE EXIT PARM LIST.
*        AT IGGPOST0 TIME IT WILL BE RETRIEVED FROM THERE TO BE FREED.
*
*        REGISTER USAGE:
*           R0 = WORK
*           R1 = WORK
*           R5 = WORKAREA ADDRESS
*           R9 = RETURN ADDRESS
*           R11 = EXIT PARAMETER LIST (IECIEXPL)
*           R13 = SAVE AREA POINTER
*           R14 = WORK
*           R15 = WORK
*
INITPPWA DS    0H
         SPACE ,
         GETMAIN RU,LV=WAEND-PPWA,SP=230,LOC=ANY  DO THE GETMAIN
         SPACE ,
         LR    R5,R1               SAVE THE AREA ADDRESS
         SPACE ,
*              SET UP TO CLEAR THE WORKAREA VIA MVCL
         SPACE ,
         LR    R0,R1               SET MOVE-TO ADDRESS
         LA    R1,WAEND-PPWA        AND LENGTH
         LA    R14,*               MOVE-FROM ADDRESS (ARBITRARY)
         SR    R15,R15              PAD IS 00, LENGTH IS ZERO
         SPACE ,
         MVCL  R0,R14              CLEAR THE WORKAREA
         SPACE ,
         MVC   WAEBCDIC,CONSPPWA   SET UP EYECATCHER
         ST    R5,IEXRSVWD         SAVE ADDRESS FOR IGGPOST0 TO FIND
         SPACE ,
*              CHAIN THE SAVE AREAS
         SPACE ,
         ST    R13,SAVEAREA+4      SAVE CALLER'S SAVE AREA POINTER
         LA    R1,SAVEAREA         ADDRESS OUR SAVE AREA
         ST    R1,8(,R13)          CHAIN OUR SAVE AREA TO CALLER'S
         LR    R13,R1              AND ADDRESS OUR SAVE AREA VIA R13
         SPACE ,
*              SAVE THE PREPL ADDRESS.  IT'S USED BY THE ESTAE EXIT
*              TO COPY THE ENTIRE PARAMETER LIST TO THE SDWA (VRA).
         SPACE ,
         ST    R11,WAPREPL         SAVE THE PREPL ADDRESS
         SPACE ,
*              COPY THE VOLUME NAME TO THE WORK AREA
         SPACE ,
         L     R1,IEXUCB           @ UCB, FROM EXIT PARM LIST
         USING UCBOB,R1
         MVC   WAUCBVOL,UCBVOLI    COPY VOLUME NAME
         DROP  R1
         SPACE ,
*              DETERMINE IF THIS IS OUR SPECIAL INITIALIZATION
*              CALL (FROM A "SUBSYSTEM" INITIALIZATION ROUTINE).
*              THIS IS THE CASE IF THE FUNCTION IS ALLOCATE (THAT'S
*              TESTED IN ROUTINE PREALL), THE CALLING ASID IS 1,
*              AND THE DSNAME MATCHES INITDSN.
*
*              IF SO, SET A FLAG.  THE REQUIRED USERCAT WILL THEN
*              BE ALLOCATED (VIA A SUPERLOCATE WITHOUT CTGDOCAT SET)
*              TO THE CALLER (*MASTER*) AND ITS ACB ADDRESS SAVED.
         SPACE ,
         L     R1,PSAAOLD          GET @ CURRENT ASCB
         USING ASCB,R1
         CLC   ASCBASID,MASTERAS   IS IT *MASTER*?
         BNE   PPINNORM            NO, IT'S NOT US
         DROP  R1
         L     R1,IEXDSN           GET @ DSNAME BEING ALLOCATED
*              NOTE THAT DADSM ALLOCATION'S DUPLICATE-DSNAME CHECK
*              IS DONE *AFTER* THIS EXIT IS CALLED.
         CLC   INITDSN,0(R1)       IS IT OUR SPECIAL NAME?
         BNE   PPINNORM            NO, IT'S NOT US
         SPACE ,
*              SPECIAL INITIALIZATION CALL WAS DETECTED.  SET FLAG.
         SPACE ,
         OI    WAFLAG2,WAFINIT     SET "SPECIAL INITIALIZATION" FLAG
         SPACE ,
PPINNORM DS    0H
         SPACE ,
*              INITIALIZE THE PARAMETER AREAS FOR THE RACROUTE CALL
         SPACE ,
         MVC   RACPROUT(L'RACROUTL),RACROUT  MOVE RACROUTE SKELETON
         MVC   RACPPROF,RACPROF    MOVE THE PROFILE NAME SKELETON
         MVC   RACPVOL(L'WAUCBVOL),WAUCBVOL  AND FILL IN THE VOLSER
         SPACE ,
PPINEXIT BR    R9                  RETURN TO CALLER
         TITLE 'ENQCHECK - IGGPRE00/POST0 SYSZTIOT ENQ INIT AND CHECK'
****************************************************
* ENQCHECK - SYSZTIOT ENQ INITIALIZATION AND CHECK *
****************************************************
*
*        THIS ROUTINE SETS UP THE SYSZTIOT ENQUEUE PARAMETER RNAME
*        AND ISSUES THE ENQ SVC TO CHECK IF THE SYSZTIOT RESOURCE
*        IS HELD.  IT'S CALLED ON ENTRY TO IGGPRE00; IF ANY PROCESSING
*        WERE DONE IN IGGPOST0 IT WOULD ALSO BE CALLED THEN (SINCE
*        THE ENQ STATUS MIGHT HAVE CHANGED SINCE IGGPRE00).
*
*        REGISTER USAGE:
*           R1 = WORK
*           R9 = RETURN ADDRESS
*           R14 = WORK
*           R15 = WORK/SVC RETURN CODE
*
ENQCHECK DS    0H
         SPACE ,
*              INITIALIZE THE SYSZTIOT RNAME FIELDS (ASID, DSAB)
         SPACE ,
         L     R1,PSAAOLD           @ CURRENT ASCB
         USING ASCB,R1
         MVC   WARNASID,ASCBASID    COPY ASID FOR RNAME
         SPACE ,
         L     R1,PSATOLD           @ CURRENT TCB
         USING TCB,R1
         L     R1,TCBJSCB           @ JSCB
         USING IEZJSCB,R1
*              NOTE THAT THE DSAB ADDRESS WE NEED IS FROM THE
*              *CURRENT* JSCB, NOT THE ACTIVE JSCB
         SPACE ,
         MVC   WARNDSAB,JSCDSABQ    COPY @ QDB FOR DSAB CHAIN
         DROP  R1
         SPACE ,
*              RNAME IS NOW CONSTRUCTED (ASID+DSAB).  TRY THE ENQUEUE.
         SPACE ,
         NI    WAFLAG1,255-WAFZTIOT  ENSURE FLAG IS RESET
         SPACE ,
         MVC   WAENQ(TIOTENQE-TIOTENQ),TIOTENQ  COPY THE MF=L PARM LIST
         SPACE ,
         ENQ   (,WARNAME,,,),,MF=(E,WAENQ)  SEE IF RESOURCE IS AVAIL
         SPACE ,
         LTR   R15,R15              RETURN CODE: R15=0 MEANS AVAILABLE
         BZR   R9                   RETURN IF WE DON'T OWN SYSZTIOT
         CLI   3(R15),8             ELSE TEST SPECIFIC RETURN CODE
*              CODE OF 8 MEANS THIS TASK ALREADY OWNS THE RESOURCE
         BNER  R9                   NOT 8, WE DON'T OWN TIOT, RETURN
         OI    WAFLAG1,WAFZTIOT     IS 8, SET FLAG: TIOT ENQ IS HELD
         BR    R9                    AND RETURN TO CALLER
         TITLE 'FINDSIOT - IGGPRE00/POST0 SCAN DSAB CHAIN, FIND SIOT'
**********************************************
* FINDSIOT - SCAN DSAB CHAIN AND LOCATE SIOT *
**********************************************
*
*        THIS ROUTINE SCANS THE DSCB CHAIN AND LOCATES THE SIOT
*        ENTRY THAT CORRESPONDS TO THE JFCB ADDRESSED BY IEXPTR1.
*        THE SIOT'S ADDRESS IS SAVED IN WASIOTAD.
*
*        THIS ROUTINE FUNCTIONS ONLY FOR ALLOCATE, EXTEND, AND PARTIAL
*        RELEASE, AS ONLY THOSE ENTRIES PASS A JFCB ADDRESS.  IT ALSO
*        WILL NOT FUNCTION WHEN A MODEL DSCB IS PASSED, AS THE JFCB
*        ADDRESS IS NOT AVAILABLE IN THAT CASE.
*
*        THIS CODE DEPENDS ON "WASIOTAD" BEING ZERO ON ENTRY (AS IT
*        DOESN'T ZERO IT ITSELF).  THE INITPPWA ROUTINE DOES CLEAR
*        IT (AS PART OF THE GETMAINED WORKAREA).
*
*        NOTE THAT THIS ROUTINE LOCATES THE SIOT THROUGH THE
*        JSCB -> QDB -> DSAB -> SIOT CHAIN; ALTERNATIVELY THE
*        JSCB -> JCT -> SCT -> SIOT CHAIN COULD BE USED, BUT
*        THAT WOULD NECESSITATE USING A SERIES OF SWAREQ CALLS.
*        (ONE SWAREQ CALL MAY BE NEEDED ANYWAY; SEE BELOW.)
*
*        NOTE THAT THE JFCB POINTED TO BY IEXPTR1 IS NOW A *COPY*
*        OF THE REAL JFCB, SO THE TEST AFTER LABEL "GOODSIOT"
*        WILL PROBABLY NOT MATCH ITS ADDRESS.  ANOTHER TEST WILL
*        NOW COMPARE THE CONTENTS OF THE JFCBS AND ASSUME THAT
*        IF THEY'RE IDENTICAL THEN THEY ARE THE SAME JFCB; THIS
*        MAY NOT BE 100% VALID BUT IS SUFFICIENTLY VALID FOR THE
*        SITUATIONS WE ARE CONCERNED WITH HERE (NEW DATASET BEING
*        ALLOCATED ON PUBLIC OR STORAGE VOLUME).
*
*
*        REGISTER USAGE:
*           R0 = WORK (SWAREQ MACRO)
*           R1 = WORK (SWAREQ MACRO)
*           R6 = WORK
*           R9 = RETURN ADDRESS
*           R14 = SIOT ADDRESS, WORK (SWAREQ MACRO)
*           R15 = WORK (SWAREQ MACRO)
*
FINDSIOT DS    0H
         SPACE ,
*              VERIFY THAT THIS IS A VALID ENTRY CONDITION
         SPACE ,
         TM    IEXFLAG,IEXMF1      ALLOCATE/MODEL DSCB POINTER?
         BOR   R9                   YES, EXIT/NO JFCB ADDRESS AVAIL.
         CLI   IEXFUNC,IEXALL      ALLOCATE?
         BE    SCANSIOT             YES, CONTINUE
         CLI   IEXFUNC,IEXEXT      EXTEND?
         BE    SCANSIOT             YES, CONTINUE
         CLI   IEXFUNC,IEXPR       PARTIAL RELEASE?
         BE    SCANSIOT             YES, CONTINUE
         BR    R9                  NO, EXIT
         SPACE ,
*              LOCATE AND SCAN THE DSAB CHAIN
         SPACE ,
SCANSIOT L     R6,PSATOLD          @ CURRENT TCB
         USING TCB,R6
         ICM   R6,B'1111',TCBJSCB  @ JSCB
         BZR   R9                  ENSURE JSCB EXISTS
         USING IEZJSCB,R6
*              NOTE THAT THE DSAB ADDRESS WE NEED IS FROM THE
*              ACTIVE JSCB, NOT THE CURRENT JSCB
         SPACE ,
         ICM   R6,B'1111',JSCBACT  @ ACTIVE JSCB
         BZR   R9                  ENSURE JSCB EXISTS
         SPACE ,
         ICM   R6,B'1111',JSCDSABQ @ QDB FOR DSAB CHAIN
         BZR   R9                  EXIT IF NOT
         USING QDB,R6
         CLC   QDBQDB,CHARDSAB     VERIFY EYE-CATCHER ('DSAB')
         BNER  R9                  EXIT IF NOT CORRECT
         SPACE ,
         ICM   R6,B'1111',QDBFELMP  @ FIRST DSAB
         BZR   R9                  ENSURE DSAB EXISTS
         USING DSAB,R6
         SPACE ,
CHEKDSAB CLC   DSABID,CHARDSAB     VERIFY EYE-CATCHER ('DSAB')
         BNER  R9                  EXIT IF NOT CORRECT
         SPACE ,
         ICM   R14,B'1111',DSABSIOT  @ SIOT
         BNZ   GOODSIOT            HAVE ADDRESS, BRANCH
         SPACE ,
*              THE "IN-STORAGE" SIOT ADDRESS IN THE DSAB MAY BE
*              ZERO, IN WHICH CASE WE NEED TO USE THE SWAREQ
*              SERVICE TO GET THE SIOT'S REAL ADDRESS.
*
*              THE SWAREQ USES THE "UNAUTHORIZED" CALL; OTHERWISE,
*              AN 0B0-0C ABEND OCCURS IN SEVERAL SITUATIONS (FOR
*              EXAMPLE, UNDER DYNAMIC ALLOCATION, OR FOR A CATALOG
*              THAT'S BEING ALLOCATED, FOR A "GDG-ALL" REQUEST,
*              OR FOR A MULTI-VOLUME VSAM DATASET).  SOME, BUT NOT
*              ALL, OF THESE SITUATIONS CAN BE BYPASSED BY TESTING
*              FLAGS IN THE DSAB, BUT THERE WAS STILL AN EXPOSURE.
         SPACE ,
         LA    R15,EPA             INITIALIZE THE EPA POINTER
         ST    R15,SWEPAPTR        FOR THE SWAREQ CALL
         XC    EPA,EPA             INITIALIZE THE AREA
         MVC   SWVA-SWAEPA+EPA,DSABSSVA  COPY SIOT SVA (BLOCK TOKEN)
*                                  SWAREQ DESTROYS R0, R1, AND R14-R15
         SWAREQ FCODE=RL,EPA=SWEPAPTR,UNAUTH=YES,MF=(E,SWAPARMS)  SIOT?
         LTR   R15,R15             CHECK IF SWAREQ SUCCEEDED
         BNZ   NEXTDSAB            IF NOT, SKIP THIS DSAB
         SPACE ,
         L     R14,SWBLKPTR-SWAEPA+EPA  @ SIOT (MAY BE ABOVE THE LINE)
         SPACE ,
         USING SIOT,R14
GOODSIOT CLI   SIOTTYPE,SIOTID     VERIFY SIOT ID (03)
         BNER  R9                  EXIT IF NOT CORRECT
         SPACE ,
*              FOUND AN SIOT.  SEE IF ITS JFCB POINTER MATCHES THE
*              ADDRESS OF THE JFCB WE WERE PASSED IN THE PARM LIST.
         SPACE ,
         CLC   SJFCBPTR,IEXPTR1    SEE IF IT MATCHES
         BE    GOTSIOT             YES, SAVE THE ADDRESS
         SPACE ,
*              IF THE JFCB ADDRESSES DO NOT MATCH, THEN WE'LL COMPARE
*              THE CONTENTS OF THE TWO JFCBS.  IF THE CONTENT IS THE
*              SAME, WE'LL ASSUME THEY ARE THE SAME JFCB AFTER ALL.
         SPACE ,
         ICM   R1,B'1111',SJFCBPTR  ADDRESS JFCB POINTED TO BY SIOT
         BZ    NEXTDSAB            (IF NONE, DON'T COMPARE IT)
         ICM   R15,B'1111',IEXPTR1  ADDRESS THE PARM-LIST JFCB
         BZ    NEXTDSAB            (IF NONE, DON'T COMPARE IT)
         CLC   0(JFCBEND-JFCB,R1),0(R15)  COMPARE 'EM
         BE    GOTSIOT             GOT IT??  SAVE ADDRESS IF SO
         SPACE ,
NEXTDSAB ICM   R6,B'1111',DSABFCHN  NO MATCH, CHAIN TO NEXT DSAB
         BNZ   CHEKDSAB            CHECK IT IF ONE EXISTS
         BR    R9                  EXIT IF NOT
         SPACE ,
*              THE MATCHING SIOT WAS FOUND.  SAVE ITS ADDRESS IN
*              WASIOTAD FOR LATER USE.
         SPACE ,
GOTSIOT  ST    R14,WASIOTAD        SAVE IT THERE
         BR    R9                  AND RETURN TO THE CALLER
         SPACE ,
         DROP  R6,R14
         LTORG ,                   SWAREQ MF=E GENERATES A LITERAL
         TITLE 'AUTHCHK  - IGGPRE00 PROGRAM AUTHORIZATION CHECK'
*****************************************************************
* AUTHCHK  - AUTHORIZATION CHECK AND PROGRAM NAME DETERMINATION *
*****************************************************************
*
*        THIS ROUTINE DETERMINES IF THE CALLING TASK IS AUTHORIZED
*        AND, IF SO, SAVES THE PROGRAM NAME FROM THE MOST RECENT
*        PRB FOUND ON THE RB CHAIN.  A TEST IS ALSO MADE TO DETERMINE
*        IF THE INITIATOR WAS THE CALLER OF THE DADSM FUNCTION.
*
*        NOTE THAT IT'S NOT MEANINGFUL TO SAVE THE PROGRAM NAME
*        IF IT ISN'T AUTHORIZED, SINCE THERE'S NO CONTROL OVER
*        THE NAMING OF UNAUTHORIZED PROGRAMS.
*
*        REGISTER USAGE:
*           R0 = WORK
*           R1 = WORK
*           R9 = RETURN ADDRESS
*           R15 = SVC RETURN CODE
*
AUTHCHK  DS    0H
         SPACE ,
*              DETERMINE IF THE TASK IS AUTHORIZED
         SPACE ,
         NI    WAFLAG1,255-WAFAUTH-WAFWAPGM  PRESET FLAG: UNAUTHORIZED;
*                                  NO PROGRAM NAME FOUND
         TESTAUTH FCTN=1,STATE=YES,KEY=YES,RBLEVEL=1  ANY THESE TRUE?
         LTR   R15,R15             WELL??
         BNZR  R9                  EXIT IF TASK NOT AUTHORIZED
         SPACE ,
*              TASK IS AUTHORIZED.  FIND THE CALLING PROGRAM NAME.
         SPACE ,
         OI    WAFLAG1,WAFAUTH     SET FLAG, CALLER IS AUTHORIZED
         L     R1,PSATOLD          @ CURRENT TCB
         USING TCB,R1
         L     R1,TCBRBP           @ CURRENT RB
         USING RBBASIC,R1
         SPACE ,
*              THIS LOGIC FOLLOWS THE RB CHAIN BACK FROM THE CURRENT
*              RB (WHICH SHOULD BE AN SVRB) UNTIL EITHER
*               - A PRB IS FOUND, AND WE SAVE THE PROGRAM NAME, IF
*                 ONE IS PRESENT, OR
*               - THE LAST RB IS FOUND, AND WE GIVE UP
         SPACE ,
LOOPRB   MVC   WAWORK1(1),RBSTAB1  SET UP TO TEST RB TYPE
         NI    WAWORK1,RBFTP       REMOVE EXTRANEOUS BITS
         CLI   WAWORK1,RBFTPRB     COMPARE FOR PRB
         BE    GOTPRB              BRANCH IF IT IS ONE; ELSE
NOTPRB   TM    RBSTAB2,RBTCBNXT    IS TCB NEXT IN CHAIN (VIA RBLINK)?
         BO    NOPRB               IF SO THERE'S NO PRB HERE
         L     R1,RBLINK           ELSE GET THE PRIOR RB
         B     LOOPRB              AND TEST IT
         SPACE ,
*              FOUND A PRB.  IF THE CDE ADDRESS (RBCDE1) IS ZERO THEN
*              DO NOT USE IT; IF FLAG "RBCDSYNC" IS SET TO INDICATE
*              THAT THIS CDE REPRESENTS A SYNCH SVC, THEN CONTINUE
*              SEARCHING FOR THE ORIGINAL PRB.  NOTE THAT R15'S HIGH-
*              ORDER BYTE IS ALREADY ZERO FROM THE TESTAUTH SVC ABOVE.
         SPACE ,
GOTPRB   ICM   R15,B'0111',RBCDE1  FOUND PRB, GET @ CDE
         BNZ   GOTPRB1             @ CDE IS NON-ZERO, BRANCH
         TM    RBCDFLGS,RBCDSYNC   WAS THIS PRB FOR A SYNCH SVC?
         BO    NOTPRB              IF SO, CONTINUE SEARCHING
         B     NOPRB               IF NOT, GIVE UP
         USING CDENTRY,R15
GOTPRB1  MVC   WAPGM,CDNAME        COPY PROGRAM NAME
         OI    WAFLAG1,WAFWAPGM    SHOW WE'VE GOT IT
         DROP  R15
         SPACE ,
*              SET A FLAG IF OUR CALLER IS THE INITIATOR (IEFIIC)
         SPACE ,
         CLC   WAPGM,INITNAME      WELL, IS IT?
         BNE   NOTINIT             BIF NOT
         OI    WAFLAG2,WAFIIC      ELSE SET DA FLAG
NOTINIT  DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
*              SET A FLAG (FOR LATER) IF THIS IS A WYLBUR I/O TASK
         SPACE ,
         CLC   WYLPATH,WAPGM       IS THIS PROGRAM A WYLBUR SUBTASK?
         BNE   NOTAWYL             NO, NOT WHAT WE WANT
         OI    WAFLAGU,WAFWYLIO    YES, SET THE FLAG
NOTAWYL  DS    0H
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
NOPRB    BR    R9                  RETURN TO CALLER
         TITLE '           CONSTANT VALUES'
*          *************
*          * CONSTANTS *
*          *************
         SPACE 2
SYSZTIOT DC    CL8'SYSZTIOT'       RNAME FOR TIOT ENQ (RET=TEST)
         SPACE ,
SYSZPCCB DC    CL8'SYSZPCCB'       RNAME FOR PCCB ENQ
         SPACE ,
QNPCCB   DC    C'PCCB'             QNAME FOR PCCB ENQ
         SPACE ,
CONSPPWA DC    C'PPWA'             TO INITIALIZE WAEBCDIC
         SPACE ,
BASEADDR DC    A(IGGPRE00)         MODULE BASE (USED FOR POST0 ENTRY)
         SPACE ,
INITNAME DC    CL8'IEFIIC'         NAME OF INITIATOR
         SPACE ,
MASTERAS DC    H'1'                ASID NUMBER OF *MASTER* ASID
         SPACE ,
BLANKS   DC    CL8' '              A BUNCHA BLANKS
         SPACE ,
CHARDSAB DC    C'DSAB'             EYE-CATCHER IN DSAB
         SPACE ,
FAKEDDN  DC    CL8'*IGGPRE*'       NON-BLANK DDNAME TO STUFF IN PCCB
         SPACE ,
INITDSN  DC    CL(L'JFCBDSNM)'SYS1.EARTHMAN TO IBM: CALL 1-800-IGG-PRE0*
               0'                  STRANGE DSNAME INDICATING INIT CALL
         SPACE ,
*              MODEL ENQ PARAMETER LISTS (SINCE MF=E WON'T CREATE THEM)
         SPACE ,
TIOTENQ  ENQ   (SYSZTIOT,*-*,E,6,SYSTEM),RET=TEST,MF=L  SYSZTIOT ENQ
TIOTENQE EQU   *
         SPACE ,
PCCBENQ  ENQ   (SYSZPCCB,QNPCCB,E,4,STEP),MF=L  SYSZPCCB ENQ/DEQ
PCCBENQE EQU   *
         SPACE ,
*              RACROUTE PARAMETERS AND SKELETON
         SPACE ,
RACLASS  DC    AL1(L'RACLASSN)     CLASS NAME LENGTH FOR RACROUTE
RACLASSN DC    C'FACILITY'         CLASS NAME FOR RACROUTE
RACPROF  DC    CL39'$DASDI.'       PROFILE NAME (VOLSER TO BE ADDED)
         SPACE ,
RACROUT  RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L
RACROUTL EQU   RACROUT,*-RACROUT   LENGTH OF GENERATED RACROUTE AREA
         SPACE ,
ZERO     DC    F'0'                FULLWORD CONSTANT ZERO
         SPACE ,
EIGHT    DC    F'8'                FULLWORD CONSTANT EIGHT
         SPACE ,
HONE     DC    H'1'                HALFWORD CONSTANT 1
         SPACE ,
HEIGHT   DC    H'8'                HALFWORD CONSTANT 8
         SPACE ,
*              REASON CODES (FOR IEXREASN)
         SPACE ,
REASON1  DC    H'1'                REASON CODE 1
REASON2  DC    H'2'                REASON CODE 2
REASON3  DC    H'3'                REASON CODE 3
REASON4  DC    H'4'                REASON CODE 4
REASONI1 DC    H'901'              REASON CODE 901 (INITIALIZATION)
REASONI2 DC    H'902'              REASON CODE 902 (INITIALIZATION)
         SPACE ,
HEXLATE  DC    C'0123456789ABCDEF'   TO HEX
         SPACE ,
*              MESSAGE PIECES FOR WTP MESSAGES CNY651I/652I/654I/655I
         SPACE ,
CON651P1 DC    C'CNY651I '
CON652P1 DC    C'CNY652I '
CON654P1 DC    C'CNY654I '
CON655P1 DC    C'CNY655I '
CON65ALL DC    C'ALLOCATE'
CON65REN DC    CL(L'CON65ALL)'  RENAME'
CON65EXT DC    CL(L'CON65ALL)'  EXTEND'
CON65P2  DC    C' REQUEST DENIED, '
CON651P3 DC    C'DATASET NAME IS ALREADY CATALOGED ON '
CON651P5 DC    C':'
CON652P3 DC    C'DSNAME DOES NOT CONFORM TO CUNY STANDARDS:'
CON654P3 DC    C'REQUIRED GDG BASE IS NOT CATALOGED:'
CON655P3 DC    C'NO RACF AUTHORITY TO CREATE DATASETS ON THIS VOLUME:'
         SPACE ,
*              MCS PREFIXES FOLLOW:
CON651   DC    AL2(4+L'CON651P1+L'CON65ALL+L'CON65P2+L'CON651P3+L'CTGVL*
               VOL+L'CON651P5,32768)
CON652   DC    AL2(4+L'CON652P1+L'CON65ALL+L'CON65P2+L'CON652P3,32768)
CON654   DC    AL2(4+L'CON654P1+L'CON65ALL+L'CON65P2+L'CON654P3,32768)
CON655   DC    AL2(4+L'CON655P1+L'CON65ALL+L'CON65P2+L'CON655P3,32768)
MCS65    DC    X'10000020'         DESC=(4),ROUTCDE=(11)
         SPACE ,
CON653P1 DC    C'CNY653I  VOLUME='  (FOLLOWED BY 6-BYTE VOLUME)
CON653P2 DC    C', DSNAME='        (FOLLOWED BY 44-BYTE VOLUME)
         SPACE ,
CON653   DC    AL2(4+L'CON653P1+L'WAUCBVOL+L'CON653P2+L'JFCBDSNM,32768)
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
WYLPATH  DC    C'WYPATH'           WYLBUR SUBTASK PROGRAM PREFIX
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
NAMIEXPL DC    C'IECIEXPL'         MACRO NAME FOR PREPL, FOR SDWA VRA
         SPACE ,
*              TITLE FOR SDUMP
         SPACE ,
CONDTITL DC    AL1(TITLEND-*-1)
TITLE1   DC    C'PRE/POST'    <--  REPLACED BY CSECT NAME (IF SDWA...)
         DC    C' ABEND DUMP, SYSTEM CODE='
TITLE2   DC    C'XXX'         <--  ABEND CODE GOES HERE
         DC    C' FOR JOB='
TITLE3   DC    C'*UNKNOWN'
TITLEND  EQU   *
         SPACE ,
*              MODULE/CSECT/FRR NAMES (FOR RECPARM)
         SPACE ,
CONPRE00 DC    CL8'IGGPRE00'       MODULE & CSECT NAME
CONPOST0 DC    CL8'IGGPOST0'       ALT CSECT NAME
CONESTAE DC    CL8'ESTAEXIT'       FRR NAME
         SPACE ,
*              WTO MESSAGE (CNY659I) TO ALERT (?) OPERATORS ON ABEND
         SPACE
CON659   DC    AL2(CON659E-*,32768)
         DC    C'CNY659I DADSM EXIT HAS ABENDED, '
         DC    C'SYSTEM CODE='
CON659CD DC    C'XXX'
         DC    C', JOB='
CON659JB DC    C'*UNKNOWN'
CON659E  EQU   *
         DC    X'00204040'         DESC=(11),ROUTCDE=(2,10)
CON659EE EQU   *
         TITLE 'ESTAEXIT - IGGPRE00/POST0 ESTAE EXIT'
***************************
* ESTAEXIT - ESTAE EXIT   *
***************************
*
*        THE ESTAE EXIT PERFORMS THE FOLLOWING FUNCTIONS:
*
*        1) CHECK IF AN SDWA IS PRESENT; VALIDATE THE PREPOST WORKAREA.
*        2) ISSUE AN OPERATOR MESSAGE GIVING THE COMPLETION CODE.
*        3) TAKE AN SDUMP.
*        4) RETURN TO RTM, REQUESTING LOGREC RECORDING.
*
*
*        NOTE THAT THE ESTAE EXIT FOLLOWS THE MODULE CONSTANTS,
*        TO PROVIDE FOR ADDITIONAL ADDRESSABILITY (THIS IS NO LONGER
*        NECESSARY, HOWEVER, AS WE'VE ADDED A 2ND BASE REGISTER FOR
*        THE ENTIRE MODULE).
*
*
*        REGISTER USAGE:
*           R1 = COMPLETION CODE, WORK
*           R2, R3 = IGGPRE00 BASE
*           R5 = PPWA
*           R6 = SDWA, OR 0 IF NO SDWA SUPPLIED
*           R7 = RETURN ADDRESS (R14 SAVE) IF NO SDWA PRESENT
*           R8 = ADDRESS OF ACTIVE JSCB
*           R9 = PCCB ADDRESS
*           R10 = GORILLA ADDRESS
*           R14 = WORK
*
ESTAEXIT DS    0H
         SPACE ,
         PUSH  USING
         DROP  ,                   ENSURE NO BASE REGS ARE ASSUMED
         USING ESTAEXIT,R15
         SPACE
*              CHECK FOR SDWA FOR REGISTER SAVE.  SET UP BASE REGISTER.
         SPACE
         C     R0,CONS12           IS THERE AN SDWA?
         BE    NOSDWA              BIF NOT, DO ALTERNATE INITIALIZATION
         STM   R14,R12,12(R13)     SAVE THE REGISTERS
         SPACE ,
*              SET UP THE NORMAL BASE REGISTERS FOR IGGPRE00.
         SPACE ,
         L     R2,BASEREST         GET BACK A GOOD VALUE
         USING IGGPRE00,R2         REINSTATE GLOBAL BASE
         LA    R3,IGGPRE00+4095    REINSTATE OUR 2ND GLOBAL BASE TOO
         USING IGGPRE00+4095,R3
         DROP  R15                 DON'T NEED THIS ANYMORE
         SPACE
*              LOAD THE REGISTERS FROM THE SDWA.
         SPACE
         LR    R6,R1               COPY SDWA ADDRESS
         USING SDWA,R6
         SPACE
*              LOAD ABEND COMPLETION CODE FROM SDWA.
         SPACE
         L     R1,SDWAABCC         ALSO LOAD ABEND COMPLETION CODE
         SPACE
*              CHECK IF THE USER PARAMETER AREA (PPWA) ADDRESS
*              IS AVAILABLE.
         SPACE
         L     R5,SDWAPARM         GET ITS ADDRESS
         LTR   R5,R5               IS IT SUPPLIED?
         BZ    GONOPARM            NO, GO CONTINUE THE ABEND
         USING PPWA,R5             YES, IT'S THERE
         B     ESTACONT            GO CONTINUE ANALYSIS
         SPACE ,
*              THE FOLLOWING CONSTANTS ARE NEEDED HERE TO SET UP
*              ADDRESSABILITY TO THE REST OF THE MODULE AND/OR
*              BEFORE ADDRESSABILITY IS SET UP.
         SPACE ,
CONS12   DC    F'12'               STAE CODE IF NO WORK AREA
         SPACE ,
BASEREST DC    A(IGGPRE00)         MODULE BASE
         SPACE
*              THE SDWA CANNOT BE USED AFTER THIS POINT WITHOUT
*              CHECKING THAT IT WAS SUPPLIED.
*              (IF SO, R6 IS NON-ZERO AND CONTAINS ITS ADDRESS).
         SPACE ,
*              IF AN SDWA WAS NOT SUPPLIED, GET THE PPWA ADDRESS
*              AND COMPLETION CODE.  (IF AN SDWA WAS SUPPLIED,
*              THESE FIELDS WERE LOADED ABOVE FROM THE SDWA.)
         SPACE ,
*              THE PPWA IS REQUIRED, TO PROVIDE REENTRANT WORK AREAS.
         SPACE ,
NOSDWA   DS    0H                  (COMPLETION CODE IS ALREADY IN R1)
         DROP  R2,R3               (TEMPORARY DROP IN REGISTERS)
         USING ESTAEXIT,R15
         SR    R6,R6               CLEAR R6 TO SHOW NO SDWA PRESENT
         LR    R7,R14              SAVE RETURN ADDRESS IN R7
         LTR   R5,R2               PUT PARAM ADDR IN R5
         BZ    GONOSDWA            IF ABSENT, GET OUT
         SPACE ,
*              SET UP THE NORMAL BASE REGISTERS FOR IGGPRE00.
*              (NOTE: NOT DONE EARLIER IN THIS CODE PATH BECAUSE
*              R2 CONTAINS THE PARAM ADDRESS WHEN THERE'S NO SDWA.)
         SPACE ,
         L     R2,BASEREST         GET BACK A GOOD VALUE
         USING IGGPRE00,R2         REINSTATE GLOBAL BASE
         LA    R3,IGGPRE00+4095    REINSTATE OUR 2ND GLOBAL BASE TOO
         USING IGGPRE00+4095,R3
         DROP  R15                 DON'T NEED THIS ANYMORE
         SPACE ,
*              CONTINUE HERE WITH OR WITHOUT AN SDWA.
         SPACE ,
ESTACONT DS    0H
         SPACE ,
*              SET UP AND ISSUE THE OPERATOR MESSAGE AND DUMP TITLE.
*              R1 CONTAINS THE ABEND COMPLETION CODE.
         SPACE ,
         MVC   WAMSGARA(CON659EE-CON659),CON659  COPY MSG SKELETON
         MVC   DUMPTITL,CONDTITL   COPY DUMP TITLE SKELETON
         ST    R1,WAWORK1          COMPLETION CODE
         UNPK  WAWORK2,WAWORK1+1(2)  BECOMES MORE READABLE
         OI    WAWORK2+3,X'F0'       ...
         TR    WAWORK2,HEXLATE-240  AND EVEN MORE READABLE
         MVC   WAC659CD,WAWORK2+1  COPY COMP CODE TO MESSAGE
         MVC   WADTITL2,WAWORK2+1  AND TO DUMP TITLE TOO
         SPACE ,
         USING PSA,R0
         L     R1,PSAAOLD          @ CURRENT ASCB
         USING ASCB,R1
         L     R14,ASCBJBNI        @ INITIATED JOBNAME
         LTR   R14,R14             IS AN ADDRESS PRESENT?
         BNZ   COPY659             YES, COPY IT
         L     R14,ASCBJBNS        NO, GET @ STC JOBNAME
         LTR   R14,R14             IS IT PRESENT??
         BZ    PUT659              IF NOT, LEAVE JOBNAME AS *UNKNOWN
COPY659  MVC   WAC659JB,0(R14)     COPY JOBNAME TO MSG
         DROP  R1
PUT659   MVC   WADTITL3,WAC659JB   COPY JOBNAME TO DUMP TITLE TOO
         SPACE ,
         WTO   MF=(E,WAMSGARA)     SHIP THE MESSAGE OUT
         SPACE ,
*              DETERMINE THE "CSECT" (IGGPRE00 OR IGGPOST0) AND
*              SET UP THE SDWA "RECORDING PARAMETER" FIELDS
         SPACE ,
         LTR   R6,R6               IS THERE AN SDWA?
         BZ    DOSDUMP             NO, DON'T BOTHER WITH RECPARM
         SPACE ,
         MVC   SDWAMODN,CONPRE00   MODULE NAME = 'IGGPRE00'
         MVC   SDWACSCT,CONPRE00   CSECT = 'IGGPRE00'
         TM    WAFLAG1,WAFPOST0    ARE WE REALLY IN IGGPRE00?
         BZ    GODUMP              YES, IT'S ALL SET
         MVC   SDWACSCT,CONPOST0   NO, MAKE IT IGGPOST0
GODUMP   MVC   WADTITL1,SDWACSCT   EITHER WAY, COPY IT TO DUMP TITLE
         MVC   SDWAREXN,CONESTAE   RECOVERY ROUTINE = 'ESTAEXIT'
         SPACE ,
*              COPY THE DUMP TITLE TO THE SDWA.
         SPACE ,
         VRADATA VRAINIT=SDWAVRA,SDWAREG=6,  INITIALIZE VRADATA        *
               KEY=VRAEBC,         SET DUMP TITLE AS MISC. EBCDIC INFO *
               DATA=WADTITL1,LEN=TITLEND-TITLE1  LOCATION & LENGTH
         SPACE ,
*              SET THE VRA KEY TO ALLOW SUPPRESSION OF DUPLICATE DUMPS.
         SPACE ,
         VRADATA KEY=VRADAE        DAE MAY SUPPRESS DUPLICATE DUMPS
         SPACE ,
*              COPY THE IECIEXPL (PREPL) PARAMETER LIST TO THE VRA.
         SPACE ,
         VRADATA KEY=VRACBM,DATA=NAMIEXPL  COPY "IECIEXPL"
         SPACE ,
         L     R1,WAPREPL          GET SAVED PREPL ADDRESS
         VRADATA KEY=VRACB,DATA=(R1),LEN=IEXLNGTH  COPY IT TOO
         SPACE ,
*              CONTINUE THE ABEND.  TAKE A DUMP AND RETURN.
         SPACE
DOSDUMP  SDUMP HDRAD=DUMPTITL,     ** TAKE DUMP **                     *
               SDATA=(RGN,SQA,ALLPSA,NUC,CSA,TRT),MF=(E,WASDUMP)
         SPACE ,
*              THE FOLLOWING CODE DOES ANY SPECIAL CLEAN-UP NEEDED:
*              OUTSTANDING ENQ'S ARE DEQ'ED, AND THE PCCB ENTRY IS
*              RESTORED IF IT WAS MODIFIED.  IF THE EXIT IS MODIFIED,
*              MAKE *SURE* THIS CODE WON'T BE BYPASSED IN EXECUTION.
         SPACE ,
*              FIRST, CHECK IF THE PCCB ENTRY MUST BE RESTORED
         SPACE ,
         TM    WAFLAG2,WAFPCMOD    WAS IT MODIFIED?
         BZ    ESTACON8            NO, BYPASS CODE TO RESTORE IT
         SPACE ,
*              OBTAIN THE GORILLA AND JSCBACT ADDRESSES FROM PPWA
         SPACE ,
         L     R8,WAJSCBAC         GET SAVED JSCBACT
         USING IEZJSCB,R8
         L     R10,WAGORILL        GET SAVED GORILLA
         USING GORILLA,R10
         SPACE ,
         TM    WAFLAG2,WAFPCENQ    DO WE STILL HAVE SYSZPCCB ENQ'ED?
         BO    ESTACON1            IF SO, DON'T OBTAIN ENQ AGAIN
         SPACE ,
*              ENQUEUE ON SYSZPCCB AND FIND OUR PCCB ENTRY AGAIN
*              (BE SAFE, THOUGH IT SHOULD NOT HAVE MOVED); THEN
*              RESTORE THE FIELDS WE'VE MODIFIED.
         SPACE ,
*                                  THE ENQ PARM LIST IS STILL SET
         SPACE ,
         ENQ   MF=(E,WAENQ)        OBTAIN SYSZPCCB (EXCLUSIVE)
         SPACE ,
         OI    WAFLAG2,WAFPCENQ    REMEMBER THAT WE'RE ENQUEUED
ESTACON1 DS    0H
         SPACE ,
*              SEARCH THE PCCB CHAIN FOR A ACTIVE ENTRY WHERE
*              PCCDSNAM MATCHES GORDSNAM.
         SPACE ,
         ICM   R9,B'1111',JSCBPCC  @ FIRST PCCB OR ZERO
         USING IEFPCCB,R9
ESTACON2 BZ    ESTACON8            ENSURE PCCB ENTRY EXISTS, ELSE EXIT
         TM    PCCSTAT1,PCCACTIV   IS THIS PCCB ACTIVE?
         BZ    ESTACON3            NO, GO LOOK AT THE NEXT ONE
         CLC   PCCDSNAM,GORDSNAM   DOES IT MATCH?
         BE    ESTACON4            YES, GO UNMODIFY IT...
ESTACON3 ICM   R9,B'1111',PCCNEXTP  NO, GET THE NEXT ONE
         B     ESTACON2            AND GO CHECK IT
         SPACE ,
*              UN-MODIFY THE PCCB ENTRY WE'VE FOUND
         SPACE ,
ESTACON4 NI    PCCSTAT1,255-PCCACTIV  SET ENTRY INACTIVE
         MVC   PCCACBP,ZERO        ZERO THE ACB POINTER
         SPACE ,
*              RESET PCCDDNAM IF IT WAS MODIFIED
         SPACE ,
         CLC   PCCDDNAM,FAKEDDN    IS IT OUR SPECIAL DDNAME?
         BNE   ESTACON5            BIF NOT
         MVC   PCCDDNAM,BLANKS     ELSE RESTORE IT TO BLANKS
         SPACE ,
ESTACON5 NI    WAFLAG2,255-WAFPCMOD  RESET "PCCB MODIFIED" FLAG
         SPACE ,
         DROP  R8,R9,R10
         SPACE ,
ESTACON8 TM    WAFLAG2,WAFPCENQ    IS THE SYSZPCCB ENQ OUTSTANDING?
         BZ    ESTACON9            NO, BYPASS DEQ
         SPACE ,
*              DEQUEUE FROM THE SYSZPCCB RESOURCE
         SPACE ,
         DEQ   MF=(E,WAENQ)        RELEASE THE PCCB ENQUEUE
         SPACE ,
         NI    WAFLAG2,255-WAFPCENQ  AND RESET THE ENQ FLAG
         SPACE ,
ESTACON9 DS    0H
         SPACE ,
*              END OF CODE TO RESTORE THE PCCB ENTRY
         SPACE ,
         LTR   R6,R6               HAVE WE AN SDWA?
         BZ    GONOSDWA            BIF NOT
         SPACE ,
*              FREEMAIN THE PPWA BEFORE RETURNING TO RTM
         SPACE ,
         FREEMAIN RU,LV=WAEND-PPWA,SP=230,A=(R5)  FREEIT
         SPACE ,
*              NOW EXIT VIA SETRP WHEN SDWA WAS PRESENT
         SPACE ,
         SETRP WKAREA=(R6),REGS=(14,12),DUMP=NO,  * WE TOOK ONE *      *
               RECORD=YES,                                             *
               RC=0   ** CONTINUE TERMINATION **
         SPACE ,
*              EXIT VIA SETRP WHEN SDWA IS PRESENT BUT PPWA ABSENT
         SPACE ,
GONOPARM SETRP WKAREA=(R6),REGS=(14,12),DUMP=YES, * WE NEED ONE *      *
               RECORD=YES,                                             *
               RC=0   ** CONTINUE TERMINATION **
         SPACE ,
         DROP  R6                  ###
         SPACE ,
*              CONTINUE ABEND IF SDWA WAS NOT SUPPLIED
         SPACE ,
GONOSDWA LR    R14,R7              RESTORE RETURN REGISTER
         LA    R15,0               SET RC=0, CONTINUE ABEND
         BR    R14                 AND RETURN
         SPACE ,
         POP   USING
         TITLE 'PPWA     - IGGPRE00/POST0 LOCAL WORK AREA'
*************************
* PPWA - LOCAL WORKAREA *
*************************
*
*        THIS WORKAREA IS GETMAINED BY IGGPRE00, FREEMAINED BY
*        IGGPOST0, AND USED THROUGHOUT.  ITS ADDRESS IS SAVED IN
*        IEXRSVWD (FOR IGGPOST0), AND IS ALSO PASSED TO THE ESTAE
*        EXIT VIA THE ESTAE "PARAM" FIELD.
*
*        *WARNING*  THIS AREA IS CLEARED TO ALL ZEROS WHEN GETMAINED.
*                   INITPPWA MUST CONTAIN CODE TO INITIALIZE ANY FIELD
*                   THAT MUST BE SET NON-ZERO.
*
PPWA     DSECT ,
         SPACE ,
WAEBCDIC DC    C'PPWA'             EYE-CATCHER
         SPACE ,
SAVEAREA DS    18F                 STANDARD SAVE AREA FOR IGGPRE00 ONLY
         SPACE ,
WAFLAG1  DS    X                   FLAG BYTE
         SPACE ,
WAFZTIOT EQU   X'80'                80 = TASK ALREADY OWNS SYSZTIOT ENQ
WAFAUTH  EQU   X'40'                40 = AN AUTHORIZED PGM CALLED US
WAFWAPGM EQU   X'20'                20 = AUTH PGM NAME IS IN WAPGM
WAFPOST0 EQU   X'10'                10 = WE'RE IN IGGPOST0
WAFDSNCK EQU   X'08'                08 = THIS VOLUME REQUIRES DSN CHECK
WAFCATCK EQU   X'04'                04 = THIS DSNAME REQUIRES CAT CHECK
WAFVSAM  EQU   X'02'                02 = THIS IS A VSAM DATASET
WAFESTAE EQU   X'01'                01 = ESTAE IS ACTIVE
*
*                                                **********
*                                                *  NOTE  *
*                                                **********
*
*                                     IF WAFDSNCK IS ON IT MEANS THAT
*                                     ALL DATASETS ON THAT VOLUME MUST
*                                     MEET THE DSNAME STANDARDS CHECK.
*
*                                     IF WAFCATCK IS ON IT MEANS THAT
*                                     THE DATASET MUST PASS THE CATALOG
*                                     TEST (I.E., IT'S CATALOGABLE).
         SPACE ,
WAFLAG2  DS    X                   ANOTHER FLAG BYTE
         SPACE ,
WAFIIC   EQU   X'80'                80 = CALLER IS INITIATOR
WAFINIT  EQU   X'40'                40 = "SPECIAL INITIALIZATION" ENTRY
WAFPCENQ EQU   X'20'                20 = ENQ OUTSTANDING FOR PCCB CHAIN
WAFPCMOD EQU   X'10'                10 = PCCB ENTRY FOR GORDSNAM MOD'ED
WAFRACCK EQU   X'08'                08 = RACF CALL NEEDED
         SPACE ,
WARNAME  DS    0H                  RNAME FOR SYSZTIOT ENQ (6 BYTES)
WARNASID DS    H                    - ASID
WARNDSAB DS    XL4                  - DSAB CHAIN POINTER
         SPACE ,
*              THE FOLLOWING AREA IS USED FOR THE SYSZTIOT AND
*              SYSZPCCB ENQ'S...
         SPACE ,
WAENQ    ENQ   (SYSZTIOT,WARNAME,E,6,SYSTEM),RET=TEST,MF=L
         SPACE ,
WAPGM    DS    CL8                 PRB PROGRAM NAME (IF AUTHORIZED PGM)
         SPACE ,
WAWORK   DS    D                   DOUBLE-WORD WORK AREA ...
         ORG   WAWORK              ALSO REDEFINED AS TWO FULLWORDS ...
WAWORK1  DS    F                   FOR ESTAE EXIT ABEND CODE CONVERSION
WAWORK2  DS    F                    AND OTHER USEFUL FUNCTIONS
         SPACE ,
WADSNAME DS    F                   @ DSNAME (FOR RENAME, THE NEW DSN)
         SPACE ,
WAGORILL DS    F                   SAVED GORILLA ADDRESS, FOR ESTAE
WAJSCBAC DS    F                   SAVED JSCBACT ADDRESS, FOR ESTAE
WAPREPL  DS    F                   SAVED PREPL ADDRESS, FOR ESTAE
         SPACE ,
WASIOTAD DS    F                   SAVED SIOT ADDRESS, OR ZERO
         SPACE ,
WADSNWRK DS    XL(L'JFCBDSNM)      FOR DSNAME VALIDATION & GDG TESTS
         SPACE 2
WACTGPL  DS    XL(CTGPLLEN)        AREA FOR CATALOG PARAMETER LIST
         SPACE ,
WACTGWA  DS    XL(CTGWALEN)        AREA FOR CATALOG WORK AREA
         SPACE ,
WACTGVL  DS    XL(CTGVLLEN*3)      AREA FOR CATALOG VOLUME LIST
*                                  (LARGE ENOUGH FOR THREE VOLUMES)
         SPACE ,
WACTGCV  DS    XL(CTGCVLEN)        AREA FOR CATALOG CVOL LIST
         SPACE ,
WAUCBVOL DS    CL(L'UCBVOLI)       SAVE AREA FOR VOLUME NAME
         SPACE 2
*              WORK AREA FOR ALL MESSAGES.  LENGTH IS COMPUTED
*              BY "ORG"S, TO SIZE FOR LARGEST MESSAGE AUTOMATICALLY.
         SPACE ,
WAMSGARA EQU   *                   MESSAGE WORK AREA
         SPACE ,
WAC659CD EQU   CON659CD-CON659+WAMSGARA  TEXT AREAS FOR
WAC659JB EQU   CON659JB-CON659+WAMSGARA   MESSAGE CNY659I
         ORG   WAMSGARA+CON659EE-CON659  SIZE FOR MESSAGE CNY659I
         SPACE ,
*              BUILD AREA EQU'S FOR MESSAGE CNY651I
         SPACE ,
WAC651LN EQU   WAMSGARA,4          MCS LENGTH FIELD, FLAGS
WAC651P1 EQU   WAMSGARA+L'WAC651LN,L'CON651P1  MESSAGE ID
WAC651AL EQU   WAC651P1+L'WAC651P1,L'CON65ALL  ENTRY TYPE
WAC651P2 EQU   WAC651AL+L'WAC651AL,L'CON65P2  MORE MESSAGE
WAC651P3 EQU   WAC651P2+L'WAC651P2,L'CON651P3  MORE MESSAGE
*              THE LENGTH OF THE FOLLOWING SHOULD BE L'CTGVLVOL
WAC651P4 EQU   WAC651P3+L'WAC651P3             VOLUME SERIAL
WAC651P5 EQU   WAC651P4+L'CTGVLVOL,L'CON651P5  MORE MESSAGE
WAC651MC EQU   WAC651P5+L'WAC651P5,L'MCS65  MCS DESC/ROUTCDE
         ORG   WAC651MC+L'WAC651MC  RESERVE SPACE FOR MESSAGE
         SPACE ,
*              BUILD AREA EQU'S FOR MESSAGE CNY652I
         SPACE ,
WAC652LN EQU   WAMSGARA,4          MCS LENGTH FIELD, FLAGS
WAC652P1 EQU   WAMSGARA+L'WAC652LN,L'CON652P1  MESSAGE ID
*              ENSURE THAT WAC652AL == WAC651AL.
*              ONLY WAC651AL IS REFERENCED IN THE CODE.
WAC652AL EQU   WAC652P1+L'WAC652P1,L'CON65ALL  ENTRY TYPE
WAC652P2 EQU   WAC652AL+L'WAC652AL,L'CON65P2  MORE MESSAGE
WAC652P3 EQU   WAC652P2+L'WAC652P2,L'CON652P3  MORE MESSAGE
WAC652MC EQU   WAC652P3+L'WAC652P3,L'MCS65  MCS DESC/ROUTCDE
         ORG   WAC652MC+L'WAC652MC  RESERVE SPACE FOR MESSAGE
         SPACE ,
*              BUILD AREA EQU'S FOR MESSAGE CNY653I
         SPACE ,
WAC653LN EQU   WAMSGARA,4          MCS LENGTH FIELD, FLAGS
WAC653P1 EQU   WAMSGARA+L'WAC653LN,L'CON653P1  MESSAGE ID
*              THE LENGTH OF THE FOLLOWING SHOULD BE L'WAUCBVOL
WAC653VV EQU   WAC653P1+L'WAC653P1             VOLUME NAME
WAC653P2 EQU   WAC653VV+L'WAUCBVOL,L'CON653P2  MORE MESSAGE
*              THE LENGTH OF THE FOLLOWING SHOULD BE L'JFCBDSNM
WAC653DS EQU   WAC653P2+L'WAC653P2            DSNAME
WAC653MC EQU   WAC653DS+L'JFCBDSNM,L'MCS65  MCS DESC/ROUTCDE
         ORG   WAC653MC+L'WAC653MC  RESERVE SPACE FOR MESSAGE
         SPACE ,
*              BUILD AREA EQU'S FOR MESSAGE CNY654I
         SPACE ,
WAC654LN EQU   WAMSGARA,4          MCS LENGTH FIELD, FLAGS
WAC654P1 EQU   WAMSGARA+L'WAC654LN,L'CON654P1  MESSAGE ID
*              ENSURE THAT WAC654AL == WAC651AL.
*              ONLY WAC651AL IS REFERENCED IN THE CODE.
WAC654AL EQU   WAC654P1+L'WAC654P1,L'CON65ALL  ENTRY TYPE
WAC654P2 EQU   WAC654AL+L'WAC654AL,L'CON65P2  MORE MESSAGE
WAC654P3 EQU   WAC654P2+L'WAC654P2,L'CON654P3  MORE MESSAGE
WAC654MC EQU   WAC654P3+L'WAC654P3,L'MCS65  MCS DESC/ROUTCDE
         ORG   WAC654MC+L'WAC654MC  RESERVE SPACE FOR MESSAGE
         SPACE ,
*              BUILD AREA EQU'S FOR MESSAGE CNY655I
         SPACE ,
WAC655LN EQU   WAMSGARA,4          MCS LENGTH FIELD, FLAGS
WAC655P1 EQU   WAMSGARA+L'WAC655LN,L'CON655P1  MESSAGE ID
*              ENSURE THAT WAC655AL == WAC651AL.
*              ONLY WAC651AL IS REFERENCED IN THE CODE.
WAC655AL EQU   WAC655P1+L'WAC655P1,L'CON65ALL  ENTRY TYPE
WAC655P2 EQU   WAC655AL+L'WAC655AL,L'CON65P2  MORE MESSAGE
WAC655P3 EQU   WAC655P2+L'WAC655P2,L'CON655P3  MORE MESSAGE
WAC655MC EQU   WAC655P3+L'WAC655P3,L'MCS65  MCS DESC/ROUTCDE
         ORG   WAC655MC+L'WAC655MC  RESERVE SPACE FOR MESSAGE
         SPACE ,
         ORG   ,                   ALLOW STORAGE FOR LARGEST MESSAGE
         SPACE 2
DUMPTITL DS    XL(TITLEND-CONDTITL)  DUMP TITLE AREA
WADTITL1 EQU   TITLE1-CONDTITL+DUMPTITL  RELOCATED
WADTITL2 EQU   TITLE2-CONDTITL+DUMPTITL  FILL-IN-THE-BLANKS
WADTITL3 EQU   TITLE3-CONDTITL+DUMPTITL  TITLE FIELDS...
         SPACE 2
WAESTAE  ESTAE ESTAEXIT,CT,PARAM=*-*,TERM=YES,PURGE=NONE,ASYNCH=YES,   *
               MF=L                ESTAE SKELETON
         SPACE ,
WASDUMP  SDUMP HDRAD=DUMPTITL,SDATA=(RGN,SQA,ALLPSA,NUC,CSA,TRT),MF=L
         SPACE ,
*              RACROUTE PARAMETERS, PARAMETER LIST, AND WORK AREA
         SPACE ,
RACP$DAS DC    0C'$DASDI.'         SYMBOL NEEDED FOR LENGTH COMPUTATION
RACPPROF DC    CL39'$DASDI.VVVVVV'  VVVVVV IS REPLACED WITH WAUCBVOL
RACPVOL  EQU   RACPPROF+L'RACP$DAS
         SPACE ,
RACPROUT RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L
         SPACE ,
SAFWORK  DS    CL(SAFWLEN)         REQUIRED RACROUTE WORK AREA
         SPACE ,
SWAPARMS SWAREQ MF=L               PARAMETER AREA FOR SWAREQ MACRO
         SPACE ,
SWEPAPTR DS    F                   POINTER TO THE EPA AREA FOR SWAREQ
         SPACE ,
EPA      DS    CL(L'SWAEPAX)       EPA AREA FOR THE SWAREQ MACRO
*                                  NOTE: AN EXTENDED EPA IS REQUIRED
*                                        WITH UNAUTH=YES
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              INSTALLATION-DEPENDENT CODE SECTION                  *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE ,
WAFLAGU  DS    X                   INSTALLATION-DEPENDENT FLAG BYTE
WAFMDSCB EQU   X'20'                20 = MODDSCB ROUTINE MUST BE CALLED
WAFWYLIO EQU   X'10'                10 = CALLER IS A WYLBUR I/O TASK
         SPACE ,
WAF1MODL DS    XL(DS1END-DS1FMTID)  MODEL F1 DSCB TO PASS TO ALLOCATE
         SPACE ,
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
* *              END OF INSTALLATION-DEPENDENT CODE                   *
* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         SPACE 2
WAEND    EQU   *                   END OF PPWA
         TITLE '           SYSTEM DSECTS'
*          *****************
*          * SYSTEM DSECTS *
*          *****************
*
*        THE FOLLOWING DSECTS ARE DEFINED HERE:
*
*        REGISTER EQUATES (MACRO YREGS)
*        PREPL (MACRO IECIEXPL) - IGGPRE00/IGGPOST0 EXIT PARAMETER LIST
*        GORILLA - GLOBAL SAVE FOR USERCATALOG ACB POINTER
*        ASCB (MACRO IHAASCB)
*        CDE (MACRO IHACDE)
*        CTGCV (TRANSLATED FROM PL/S MACRO IEZCTGCV)
*      * CTGPL (MACRO IEZCTGPL)
*        CTGVL (TRANSLATED FROM PL/S MACRO IEZCTGVL)
*        CTGWA (TRANSLATED FROM PL/S MACRO IEZCTGWA)
*        CVT (MACRO CVT)
*        DSCB1 (MACRO IECSDSL1) - FORMAT 1 DSCB
*        EPA (MACRO IEFZB505)
*        JESCT (MACRO IEFJESCT)
*        JFCB (MACRO IEFJFCBN)
*        JSCB (MACRO IEZJSCB)
*        PCCB (MACRO IEFPCCB)
*        PSA (MACRO IHAPSA)
*        PSCB (MACRO IKJPSCB)
*      * QDB (MACRO IHAQDB)
*        RB (MACRO IHARB)
*        SAFW (MACRO ICHSAFW)
*        SDWA (MACRO IHASDWA)
*        SIOT (MACRO IEFASIOT)
*        TCB (MACRO IKJTCB)
*        UCB (MACRO IEFUCBOB)
*
*              * THESE MACROS ARE AVAILABLE IN THE OPTIONAL SOURCE
*                MATERIALS FOR MVS OR DFP (FILE 1, AAPVT).  ALL OTHER
*                MACROS ARE FOUND IN SYS1.MACLIB OR SYS1.MODGEN.
         SPACE 2
         YREGS ,                   DEFINE REGISTERS
         TITLE '           SYSTEM DSECTS  -  PREPL  (IECIEXPL)'
         IECIEXPL
         TITLE '           SYSTEM DSECTS  -  GORILLA'
*              THE GORILLA IS THE GLOBAL SAVE AREA FOR THE REQUIRED
*              USERCATALOG'S DSNAME AND ACB POINTER.  IT IS USED ONLY
*              WITHIN THIS EXIT: CREATED IN ROUTINE SPECINIT, AND
*              REFERENCED IN ROUTINE SUPERLOC.  IT DOESN'T STAND FOR
*              ANYTHING BECAUSE I HAVEN'T THOUGHT OF AN ACRONYM YET.
         SPACE ,
GORILLA  DSECT ,
         SPACE ,
GORDSNAM DS    CL(L'PCCDSNAM)      CATALOG DATA SET NAME
GORACBP  DS    AL(L'PCCACBP)       CATALOG ACB ADDRESS
         SPACE ,
KINGKONG EQU   *                   END OF GORILLA
         TITLE '           SYSTEM DSECTS  -  ASCB  (IHAASCB)'
         IHAASCB
         TITLE '           SYSTEM DSECTS  -  CDE  (IHACDE)'
         IHACDE
         TITLE '           SYSTEM DSECTS  -  CTGCV  (FROM IEZCTGCV)'
*              THE FOLLOWING DSECT HAS BEEN TRANSLATED FROM THE PL/S
         SPACE ,
*/********************************************************************/
*/*                                                                  */
*/*   MACRO NAME = IEZCTGCV                                          */
*/*                                                                  */
*/*   DESCRIPTIVE NAME = VSAM CATALOG CONTROL VOLUME LIST            */
*/*                                                                  */
*/*   FUNCTION = MAPPING FOR THE OS/VS SYSTEM CATALOG CVOL ENTRY     */
*/*                                                                  */
*/*   CONTROL BLOCK STRUCTURE = IF THE REQUEST IS 'SUPERLOCATE',     */
*/*                             THE CTGCV IS POINTED TO BY THE       */
*/*                             CTGPL (CTGCVOL).                     */
*/*                                                                  */
*/*   INCLUDED MACROS = NONE                                         */
*/*                                                                  */
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
*/*                                                                  */
*/*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */
*/*                                                                  */
*/*   DATE OF LAST CHANGE = 17 JUL 74                                */
*/*                                                                  */
*/********************************************************************/
*                                   /* DECLARE                       */
CTGCV    DSECT ,                    /* DECLARE CTGCV LEVEL ONE       */
*                                   /* WORD BOUNDARY                 */
CTGCVVOL DS    CL6                  /* CVOL VOLUME SERIAL            */
*                                   /* VOLUME SER OF CATALOG   Y02020*/
CTGCVDSN DS    CL44                 /* CATALOG NAME            Y02020*/
CTGCVDEV EQU   CTGCVDSN,4           /* CVOL DEVICE TYPE        Y02020*/
CTGCVCC  DS    CL44                 /* ALIAS NAME OR CONNECTOR Y02020*/
         SPACE ,
CTGCVLEN EQU   *-CTGCV             LENGTH OF CTG CVOL LIST
         TITLE '           SYSTEM DSECTS  -  CTGPL  (IEZCTGPL)'
         IEZCTGPL
         TITLE '           SYSTEM DSECTS  -  CTGVL  (FROM IEZCTGVL)'
*              THE FOLLOWING DSECT HAS BEEN TRANSLATED FROM THE PL/S
         SPACE ,
*/********************************************************************/
*/*                                                                  */
*/*   MACRO NAME = IEZCTGVL                                          */
*/*                                                                  */
*/*   DESCRIPTIVE NAME = VSAM CATALOG VOLUME LIST AND EXTENSION      */
*/*                                                                  */
*/*   FUNCTION = MAPPING MACRO FOR THE CATALOG VOLUME LIST           */
*/*              AND THE VOLUME LIST EXTENSION.                      */
*/*                                                                  */
*/*   CONTROL BLOCK STRUCTURE = THE CTGVL IS POINTED TO BY THE       */
*/*                             CTGWA (CTGWAVL).                     */
*/*                                                                  */
*/*   INCLUDED MACROS = NONE                                         */
*/*                                                                  */
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
*/*                                                                  */
*/*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */
*/*                                                                  */
*/*   DATE OF LAST CHANGE = 18 JUL 74                                */
*/*                                                                  */
*/********************************************************************/
*                                   /* DECLARE                       */
*/********************************************************************/
*/*                     CATALOG  VOLUME  LIST                        */
*/********************************************************************/
*
CTGVL    DSECT ,                    /* DECLARE CTGVL LEVEL ONE       */
*                                   /* WORD BOUNDARY                 */
CTGVLVOL DS    CL6                  /* VOLUME SERIAL NUMBER          */
CTGVLDEV DS    CL4                  /* DEVICE TYPE                   */
CTGVLSEQ DS    H                    /* FILE SEQUENCE NUMBER          */
         SPACE ,
CTGVLLEN EQU   *-CTGVL             LENGTH OF CTG VOLUME LIST
         SPACE ,
*/********************************************************************/
*/*                     VOLUME  LIST  EXTENSION                      */
*/********************************************************************/
*
CTGVLTTR DS    CL3                  /* FORMAT 1 DSCB TTR             */
         SPACE ,
CTGVLXLN EQU   *-CTGVL             LENGTH OF CTG VOLUME LIST WITH EXT
         SPACE ,
*              NOTE THAT THE VOLUME LIST EXTENSION (THE TTR)
*              IS PRESENT ONLY FOR A SINGLE-VOLUME DATASET.
         TITLE '           SYSTEM DSECTS  -  CTGWA  (FROM IEZCTGWA)'
*              THE FOLLOWING DSECT HAS BEEN TRANSLATED FROM THE PL/S
         SPACE ,
*/********************************************************************/
*/*                                                                  */
*/*   MACRO NAME = IEZCTGWA                                          */
*/*                                                                  */
*/*   DESCRIPTIVE NAME = VSAM CATALOG SCHEDULER WORKAREA             */
*/*                                                                  */
*/*   FUNCTION = MAPPING MACRO FOR THE VSAM CATALOG                  */
*/*              SCHEDULER WORKAREA.                                 */
*/*                                                                  */
*/*   CONTROL BLOCK STRUCTURE = THE CTGWA IS POINTED TO BY THE       */
*/*                             CTGPL (CTGWKA).                      */
*/*                                                                  */
*/*   INCLUDED MACROS = NONE                                         */
*/*                                                                  */
*/*   METHOD OF ACCESS = PL/S - NO DECLARES NECESSARY                */
*/*                                                                  */
*/*   STATUS = VS/2 RELEASE 3   (CHANGE FLAG @Y30SSXX)               */
*/*                                                                  */
*/*   DATE OF LAST CHANGE = 18 JUL 74                                */
*/*                                                                  */
*/********************************************************************/
*
CTGWA    DSECT ,                    /* DECLARE CTGWA LEVEL ONE       */
*                                   /* WORD BOUNDARY                 */
CTGWAVL  DS    F                    /* VOLUME LIST ADDRESS           */
CTGWALV  DS    H                    /* VOLUME LIST LENGTH            */
CTGWAVCT DS    H                    /* NUMBER OF VOLUME ENTRIES IN   */
*                                   /*   VOLUME LIST                 */
CTGWAUCT DS    H                    /* MINIMUM UNIT COUNT            */
CTGWAGCT DS    H                    /* COUNT OF GENERATIONS    Y02020*/
CTGWAGB  DS    F                    /* POINTER TO G0000V00     Y02020*/
         SPACE ,
CTGWALEN EQU   *-CTGWA             LENGTH OF CTG WORK AREA
         TITLE '           SYSTEM DSECTS  -  CVT  (CVT)'
         CVT   DSECT=YES
         TITLE '           SYSTEM DSECTS  -  DSAB  (IHADSAB)'
         IHADSAB
         TITLE '           SYSTEM DSECTS  -  DSCB1  (IECSDSL1)'
DSCB1    DSECT
         IECSDSL1 1
         TITLE '           SYSTEM DSECTS  -  EPA  (IEFZB505)'
         IEFZB505 LOCEPAX=YES
         TITLE '           SYSTEM DSECTS  -  JESCT  (IEFJESCT)'
         IEFJESCT
         TITLE '           SYSTEM DSECTS  -  JFCB  (IEFJFCBN)'
JFCB     DSECT
         IEFJFCBN
         TITLE '           SYSTEM DSECTS  -  JSCB  (IEZJSCB)'
         IEZJSCB
         TITLE '           SYSTEM DSECTS  -  PCCB  (IEFPCCB)'
         IEFPCCB
         TITLE '           SYSTEM DSECTS  -  PSA  (IHAPSA)'
         IHAPSA
         TITLE '           SYSTEM DSECTS  -  PSCB (IKJPSCB)'
         IKJPSCB
         TITLE '           SYSTEM DSECTS  -  QDB  (IHAQDB)'
         IHAQDB ,
         TITLE '           SYSTEM DSECTS  -  RB  (IHARB)'
         IHARB
         TITLE '           SYSTEM DSECTS  -  SAFW  (ICHSAFW)'
         ICHSAFW
         TITLE '           SYSTEM DSECTS  -  SDWA  (IHASDWA)'
         IHASDWA
         TITLE '           SYSTEM DSECTS  -  SIOT  (IEFASIOT)'
SIOT     DSECT ,
         IEFASIOT
         TITLE '           SYSTEM DSECTS  -  TCB  (IKJTCB)'
         IKJTCB
         TITLE '           SYSTEM DSECTS  -  UCB  (IEFUCBOB)'
UCB      DSECT ,
         IEFUCBOB
         SPACE 3
         END   IGGPRE00
