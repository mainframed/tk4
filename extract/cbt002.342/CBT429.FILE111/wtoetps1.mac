//S40DA01S JOB (11613109,0402,1,1,,LONG,,,104),PURDY,CLASS=H,
//            MSGCLASS=X
//ASM     EXEC PGM=IEV90,
//             PARM='NODECK,OBJ,LINECNT=99,BUFSIZE(MAX),RENT',
//             REGION=4096K
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(1700,(600,100))
//SYSUT2   DD  DSN=&&SYSUT2,UNIT=VIO,SPACE=(1700,(300,50))
//SYSUT3   DD  DSN=&&SYSUT3,UNIT=VIO,SPACE=(1700,(300,50))
//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1089
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSSQ,SPACE=(80,(200,50)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
*          DATA SET WTOETPS1   AT LEVEL 004 AS OF 01/08/88
WTOETPS1 TITLE 'WTOETPS1 -- MACROS TO INITIALIZE TAPE TABLE IN CSA'
         MACRO
&NAME1   STRING  &ADDRESS=,&STACKER=N
         GBLA  &OFFSET
         LCLA  &RANGE,&I
         LCLC  &CONST,&START,&A,&STKR
         AIF   (&OFFSET NE 0).AFTINIT
&NAME1   B     STRINGGM       BRANCH TO DO THE GETMAIN
STRINGIN DS    0H             INITIALIZE THE TAPE TABLE
.AFTINIT ANOP
&MAXIMUM SETC  '0123456789ABCDEF'
&CPTR    SETA  0
&CONST   SETC  '&ADDRESS(1)'(1,2)
.*               ASSUMES A THREE DIGIT DEVICE ADDRESS
&START   SETC  '&ADDRESS(1)'(3,1)
&RANGE   SETA  1
         AIF   (K'&ADDRESS LT 2).NORANGE
&RANGE   SETA  &ADDRESS(2)
.NORANGE ANOP
&CPTR    SETA  &CPTR+1
         AIF   ('&START' NE '&MAXIMUM'(&CPTR,1)).NORANGE
.*    TABLE LAYOUT:
.*       RESERVED            CL1
.*       UNIT ADDRESS        CL3
.*       NUMBER OF ENTRIES   H
.*       VOLUME SERIALS      CL6
         SPACE 1
&ENTRIES SETA  2             AN ORDINARY TAPE DRIVE
         SPACE 1
&STKR    SETC  '&STACKER'
         AIF   ('&STKR' EQ 'N').NOSTKR
         SPACE 1
&ENTRIES SETA  6 A TAPE DRIVE WITH A STACKER FOR UNLOADED TAPES
         SPACE 1
.NOSTKR  ANOP
         MVC   TAPETBL+&OFFSET.(3),=C' &CONST.' INITIALIZE EACH ENTRY
.*               ASSUMES A THREE DIGIT DEVICE ADDRESS
&A       SETC  '&MAXIMUM'(&CPTR,1)
&I       SETA  &OFFSET+3
         MVI   TAPETBL+&I.,C'&A.'         CALCULATED UNIT NUMBER
         LA    R1,&ENTRIES                VOLUMES IN DEVICE STACKER
&I       SETA  &OFFSET+4
         STH   R1,TAPETBL+&I              STORED IN THE TAPE TABLE
&OFFSET  SETA  &OFFSET+6+&ENTRIES*6
&RANGE   SETA  &RANGE-1
&CPTR    SETA  &CPTR+1
         AIF   (&CPTR GT 16).MEND
         AIF   (&RANGE GT 0).NOSTKR
.MEND    MEND
         SPACE 3
         MACRO
         STRNGEND
         GBLA  &OFFSET
&I       SETA  &OFFSET
         MVC   TAPETBL+&I.(6),=X'FFFFFFFF0000' INITIALIZE FINAL ENTRY
&OFFSET  SETA  &OFFSET+6
         B     STRINGPR       BRANCH TO PROCESSING CODE
&OFFSET  SETA  &OFFSET+12     ADD SPACE FOR THE TABLE HEADER
HDRLEN   EQU           12     ADD SPACE FOR THE TABLE HEADER
*        GETMAIN RU,LV=&OFFSET,LOC=ANY,SP=241,RELATED=GETCSA
STRINGGM GETMAIN RU,LV=&OFFSET,LOC=ANY,SP=241,RELATED=GETCSA
         LR    R11,R1         SAVE THE ADDRESS FOR LATER
         LA    R2,=XL6'00'    CLEAR THE AREA TO HEX ZEROES
         SR    R3,R3
         LR    R4,R11
         LA    R1,&OFFSET     STORE THE LENGTH OF THE TABLE
         LR    R5,R1
         BCTR  R5,0
         MVCL  R4,R2
         MVC   CSAEYECT,=C'WTOETPS1' SET UP THE TABLE HEADER
         ST    R1,CSALENG
         SR    R2,R2          STORE THE TAPE UNIT ADDRESS TABLE ADDRESS
         CS    R2,R11,TAPESTKR
         BE    STRINGIN INITIALIZE THE TAPE TABLE
         L     R2,CSALENG     OOPS, SOMEBODY BEAT ME TO IT
         MVC   0(4,R11),=C'OLD ' CHANGE THE EYE CATCHER
         FREEMAIN RU,LV=(R2),A=(R11),SP=241,RELATED=GETCSA
         B     START2
STRINGSZ DC    F'&OFFSET'     CHECK THE SIZE OF THE EXISTING AREA
STRINGPR DS    0H
.MEND    MEND
         TITLE 'WTOETPS1 -- WTO EXIT TO MAINTAIN TAPE UNLOAD DATA'
WTOETPS1 CSECT
WTOETPS1 AMODE 31
WTOETPS1 RMODE ANY
         PRINT ON,GEN
         USING *,R12
         STM   R14,R12,12(R13)
         LR    R12,R15
         B     START
         DC    C'WTOETPS1'
         DC    C'&SYSDATE',C' &SYSTIME'
START    LR    R4,R1         PRESERVE POINTER TO PASSED PARM LIST  JWP
         SPACE
         GETMAIN RU,LV=AREAREGS,SP=230,LOC=(BELOW,ANY) GETMAIN FOR REGS
         SPACE
         LR    R10,R1        SAVE POINTER TO GOTTEN AREA           JWP
         MVI   0(R10),X'00'  CLEAR GOTTEN AREA                     JWP
         MVC   1(AREAREGS-1,R10),0(R10)                            JWP
         ST    R13,4(R10)    EXCHANGE THE REGISTER SAVE AREA       JWP
         ST    R10,8(R13)    POINTERS TRICK                        JWP
         LR    R13,R10                                             JWP
         USING WORKREGS,R13  ESTABLISH ADDRESSABILITY TO GOTTEN AREA
         LR    R1,R4         RESTORE REG 1                         JWP
         SPACE
         L     R8,CVTPTR      FIND USERCVT
         USING CVT,R8
         L     R9,CVTUSER
         USING USERCVT,R9
         LTR   R9,R9          IS THE USERCVT VALID?
         BNZ   CVTOK           NO, DO NOT DO ANYTHING DUMB          JWP
         SPACE 1                                                    JWP
         LR    R3,R1          SAVE REGISTER 1                       JWP
         GETMAIN RU,LV=80,LOC=ANY,SP=241   GET USERCVT AREA         JWP
         CS    R9,R1,CVTUSER  STORE ADDRESS OF GOTTEN AREA          JWP
         BNE   CVTOK          OTHER PROCESSOR  GOT HERE FIRST       JWP
         LR    R9,R1          LOAD ADDRESS OF GOTTEN AREA           JWP
         MVI   0(R9),X'00'    CLEAR USERCVT                         JWP
         MVC   1(79,R9),0(R9)                                       JWP
         MVC   0(8,R9),=C'USERCVT*' PUT IN EYECATCHER               JWP
         LR    R1,R3          RESTORE REGISTER 1                    JWP
         DROP  R8
         SPACE 1
CVTOK    L     R8,0(R1)       PICK UP ADDRESS OF CTXT
         USING CTXT,R8
         L     R7,CTXTTXPJ    LOAD POINTER TO THE MAJOR LINE
         USING CTXTATTR,R7
         TM    CTXTTFB1,CTXTTFWR  WTOR?
         BO    RETURN          YES, SOMETHING IS WRONG
         CLC   =C'IEC502E',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?
         BE    START1          YES, PROCESS IT
         CLC   =C'IEF234E',CTXTTMSG IS THIS THE CORRECT MAJOR LINE?
         BNE   RETURN          NO, DON'T KNOW WHY I WAS CALLED
START1   LA    R6,CTXTTMSG+10
         USING MSGAREA,R6
         CLI   UNITADDR,C' '  IS THIS A TWO-CHARACTER DISPOSITION
         BNE   START2           NO, SKIP CHANGES
         LA    R6,1(R6)         YES, MOVE FURTHER OUT
         SPACE 1
START2   MVC   SMFREC(SMFSLEN),SMFSKEL MOVE SKELETON SMF RECORD    JWP
         TIME  BIN           GET DATE AND TIME                     JWP
         ST    R0,SMFDTIME   STORE DATE & TIME IN RECORD           JWP
         ST    R1,SMFDDATE                                         JWP
         L     R1,16         LOAD ADDRESS OF CVT                   JWP
         L     R1,196(R1)    LOAD ADDRESS OF SMCA                  JWP
         MVC   SMFDSID,16(R1) MOVE SYSTEM ID FROM SMCA             JWP
         MVC   SMFDUNIT,UNITADDR MOVE IN UNIT ADDRESS              JWP
         CLC   DISPSL,=C'SL' SEE IF DISP IS WHAT WE WANT           JWP
         BNE   DISPPVT                                             JWP
         MVC   SMFDJOBN,JOBNAME  MOVE IN JOBNAME                   JWP
         CLC   JOBNAME(3),=C'T40' SEE IF TEST TYPE JOB             JWP
         BNE   WRITESMF                                            JWP
         MVI   SMFDTEST,C'T' FLAG THIS AS A TEST TYPE TAPE         JWP
         B     WRITESMF                                            JWP
DISPPVT  MVC   SMFDJOBN,JOBNAME+1  MOVE IN JOBNAME                 JWP
         CLC   JOBNAME+1(3),=C'T40' SEE IF TEST TYPE JOB           JWP
         BNE   WRITESMF                                            JWP
         MVI   SMFDTEST,C'T' FLAG THIS AS A TEST TYPE TAPE         JWP
         B     WRITESMF                                            JWP
WRITESMF SMFWTM SMFREC       WRITE SMF RECORD                      JWP
         SPACE
         L     R11,TAPESTKR   FIND THE TAPE UNIT ADDRESS TABLE
         LTR   R11,R11        IS THERE ONE?
         BZ    STRINGS         NO, CREATE ONE
         USING CSATABLE,R11
         CLC   =C'WTOETPS1',CSAEYECT  IS THIS THE CORRECT TABLE?
         BE    START3                   YES, CHECK MORE
         EX    4,*                      NO, FIND OUT WHY
START3   CLC   STRINGSZ,CSALENG       IS THE TABLE THE CORRECT LENGTH?
         BE    STRINGPR                 YES, LET'S GO
         SR    R1,R1                  CLEAR THE USERCVT AREA
         LR    R2,R11
         CS    R2,R1,TAPESTKR
         L     R2,CSALENG
         MVC   0(4,R11),=C'OLD ' CHANGE THE EYE CATCHER
         FREEMAIN RU,LV=(R2),A=(R11),SP=241,RELATED=GETCSA
STRINGS  STRING ADDRESS=(570,4),STACKER=N
         STRING ADDRESS=(F70,16),STACKER=Y
         STRING ADDRESS=(580,4),STACKER=Y
         STRNGEND
         DROP  R11
         SPACE 1
         LA    R11,HDRLEN(R11)   SKIP PAST THE TAPE TABLE HEADER
CKVOLSER CLC   =X'FFFFFFFF',0(R11) IS THIS THE END OF THE TABLE?
         BE    CKVOLSE3              YES, FORGET IT
         LH    R10,4(R11)          PICK UP THE NUMBER OF TABLE ENTRIES
         LA    R3,6(R11)           FIND THE FIRST TABLE ENTRY
CKVOLSE1 CLC   0(6,R3),VOLSER
         BE    CKVOLSE2              YES, ERASE IT
         LA    R3,6(R3)              NO, TRY ANOTHER
         BCT   R10,CKVOLSE1        TRY ANOTHER VOL=SER=
         LR    R11,R3              SET UP THE NEW POINTER
         B     CKVOLSER            GO TO IT
CKVOLSE2 MVC   0(6,R3),=XL6'00'  CLOBBER THE OLD VOLUME SERIAL NUMBER
         SPACE 1
CKVOLSE3 CLC   =CL6' ',VOLSER    IS THE VOLUME SERIAL NUMBER BLANK?
         BE    RETURN              YES, FORGET IT
         L     R11,TAPESTKR   FIND THE TAPE UNIT ADDRESS TABLE
         LA    R11,HDRLEN(R11)   SKIP PAST THE TAPE TABLE HEADER
CHKUNIT  CLC   =X'FFFFFFFF',0(R11) IS THIS THE END OF THE TABLE?
         BE    RETURN                YES, FORGET IT
*              ASSUMES A THREE DIGIT UNIT ADDRESS
         CLC   1(3,R11),UNITADDR IS THIS THE CORRECT UNIT ADDRESS?
         BE    FOUNDIT             YES, PROCESS IT
         LH    R1,4(R11)           NO, FIND THE NEXT ONE
         MH    R1,=H'6'          NUMBER OF TABLE ENTRIES * 6
         LA    R11,6(R1,R11)     SKIP TO NEXT TABLE ENTRY
         B     CHKUNIT
STACKER  CLC   =XL6'00',0(R11)   IS THERE A TAPE HERE?
         BE    FOUNDIT1            NO, SKIP THE MOVE
         BCTR  R1,0              SUBTRACT ONE
         LR    R3,R1             CALCULATE OFFSET
         MH    R3,=H'6'          CALCULATE END OF TABLE
         L     R10,=F'-6'        LOAD INCREMENT
         LA    R3,0(R3,R11)      POINT TO THE NEXT-TO-LAST ENTRY
STACKER1 MVC   6(6,R3),0(R3)     WIPE OUT THE OLDEST ONE
         BXH   R3,R10,STACKER1   LOOP TO PUSH DOWN THE STACK
         MVC   6(6,R3),0(R3)     WIPE OUT THE OLDEST ONE
         B     FOUNDIT1
FOUNDIT  LH    R1,4(R11)         PICK UP THE UNIT ADDRESS COUNTER
         LA    R11,6(R11)        SKIP THE HEADING INFORMATION
         BCT   R1,STACKER        SUBTRACT 1 AND HANDLE STACKER
FOUNDIT1 MVC   0(6,R11),VOLSER   MOVE VOLSER TO TABLE
RETURN   LR    R1,R13            LOAD ADDRESS OF GOTTEN AREA
         L     R13,4(R13)        LOAD PREVIOUS SAVE AREA ADDRESS
         LA    R0,AREAREGS       LOAD LENGTH OF AREA
         FREEMAIN RU,LV=(0),A=(1),SP=230
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         SPACE 1
         LTORG
         EJECT
         CNOP  2,4
SMFSKEL  DS    0H        SMF RECORD TO BE WRITTEN
SMFLEN   DC    H'31'     RECORD LENGTH
SMFSEG   DC    H'0'      SEGMENT INDICATOR
SMFSIND  DC    X'06'     SYSTEM INDICATOR
SMFRECTY DC    AL1(200)  RECORD TYPE
SMFTIME  DS    XL4       TIME
SMFDATE  DS    XL4       DATE
SMFSID   DS    CL4       SYSTEM ID
SMFTYPE  DC    C'K'      K - KEEP RECORD
SMFUNIT  DS    CL3       UNIT ADDRESS
SMFTEST  DC    C'P'      SET TEST FLAG FOR PRODUCTION
SMFJOBN  DC    CL8' '    JOBNAME
SMFSLEN  EQU   *-SMFSKEL
         EJECT
**********************************************************************
*                                                                    *
*        DSECT USED TO MAP GOTTEN AREA                               *
*                                                                    *
**********************************************************************
         SPACE
WORKREGS DSECT
         SPACE
REGAREA  DS    18F       REGISTER SAVE AREA
         SPACE
         CNOP  2,4
SMFREC   DS    0H        SMF RECORD TO BE WRITTEN
SMFDLEN  DS    H         LENGTH
SMFDSEG  DS    H         SEGMENT INDICATOR
SMFDSIND DS    XL1       SYSTEM INDICATOR
SMFDRECT DS    XL1       RECORD TYPE
SMFDTIME DS    XL4       TIME
SMFDDATE DS    XL4       DATE
SMFDSID  DS    CL4       SYSTEM ID
SMFDTYPE DS    CL1       K - KEEP RECORD
SMFDUNIT DS    CL3       UNIT ADDRESS
SMFDTEST DS    CL1       TEST TYPE TAPE
SMFDJOBN DS    CL8       JOBNAME
         SPACE
AREAREGS EQU   *-WORKREGS
         EJECT
CSATABLE DSECT
         SPACE 1
CSAEYECT DS    D              TABLE EYE-CATCHER
CSALENG  DS    F              LENGTH OF THE TABLE
TAPETBL  DS    F              TAPE UNIT ENTRIES
         SPACE 1
USERCVT  DSECT                                                      JWP
         DS    D              EYECATCHER 'USERCVT*'                 JWP
TAPESTKR DS    A              ADDRESS OF TAPE CSA TABLE             JWP
         SPACE 1
MSGAREA  DSECT
UNITADDR DS    CL3            UNIT ADDRESS IN THE MESSAGE
         DS    C              ,
VOLSER   DS    CL6            VOLUME SERIAL NUMBER IN THE MESSAGE
         DS    C              ,
DISPSL   DS    CL2            SL
         DS    C              ,
JOBNAME  DS    CL8            JOBNAME IN THE MESSAGE
         SPACE 3
         IEZVX100
         PRINT NOGEN
         REGEQU
         CVT   DSECT=YES,LIST=YES
         END   WTOETPS1
/*
//LKED1   EXEC PGM=IEWL,PARM='LIST,LET,MAP,XREF,RENT,REFR',
//             COND=(8,LT,ASM)
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210)
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN
//SYSLMOD  DD  DSN=SYS1.LINKLIB,DISP=SHR
//SYSIN    DD *
  SETCODE AC(1)
  NAME WTOETPS1(R)
/*
