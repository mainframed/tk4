         MACRO
&NAME    MOVEP &FR,&TO
&NAME    LA    R1,FILEP&FR
         LA    R15,&TO
         BAL   R14,MOVEP
         MEND
         MACRO
&NAME    ERROR &TEXT,&EXIT,&RC=12
&NAME    UPUT  ERR&SYSNDX,*,CPPL=CPPL                          *AB79238
         OI    RETC+1,&RC         SET BAD RETURN CODE          *AB79238
         B     &EXIT
ERR&SYSNDX DC C&TEXT
         MEND
LSTM     TITLE 'LISTM -- LIST MEMBERS COMMAND'
         PRINT NOGEN
LISTM    SAVEX LV=1024
         PRINT GEN
         SPACE 3
*        REGISTER USAGE
*        R0    WORK REGISTER
*        R1    WORK REGISTER
*        R2    WORK REGISTER
*        R3-R4 UNUSED
*BUF     R5    -> NEXT PLACE IN TPUT BUFFER       (PRINT)
*LINK    R6    RETURN REG FROM CPUT
*MEM     R7    -> ELEMENT IN MEMBER LIST
*ALI     R8    -> ELEMENT IN ALIAS LIST
*        R9    -> FIRST CHAR OF NEXT DIR ENTRY    (BUILD)
*LALI    R9    -> LAST ALIAS NAME                 (PRINT)
*        R10   =12 (MIN DIR ENTRY LEN)            (BUILD)
*        R11   -> LAST CHAR IN DIRECTORY BLOCK    (BUILD)
*PDSNPDE R11   -> DATA SET PARSE DESCRIPTOR       (PARSE)
*        R12   BASE REG FOR CODE
*        R13   -> OS SAVE AREA
*        R14   RETURN ADDRESS
*        R15   LINKAGE REGISTER/RETURN CODE
         SPACE 3
ON       EQU   X'FF'
OFF      EQU   X'00'
         SPACE 3
BUF      EQU   R5
LINK     EQU   R6
MEM      EQU   R7
ALI      EQU   R8
LALI     EQU   R9
PDSNPDE  EQU   R11
         EJECT
         USING WORKAREA,R13        DECLARE BASE FOR WORK AREA
         LM    R1,R4,0(R1)         LOAD PARAMETERS
         STM   R1,R4,CPPL          STORE IN LOCAL COPIES
         ST    R1,PPLCBUF          STORE CBUF POINTER IN PPL
         ST    R2,PPLUPT           STORE UPT POINTER IN PPL...
         ST    R2,DAPLUPT          ...AND DAPS
         ST   R2,DFPLUPT          ...AND DFPL                  *AB79238
         ST    R3,DAPLPSCB         STORE PSCB POINTER IN DAPL
         ST   R3,DFPBPSCB         ...AND DFPB                  *AB79238
         ST    R4,PPLECT           STORE ECT POINTER IN PPL...
         ST    R4,DAPLECT          ...AND DAPL
         ST   R4,DFPLECT          ...AND DFPL                  *AB79238
         XC    ECB,ECB             CLEAR EVENT CONTROL BLOCK
         LA    R1,ECB              POINT TO ECB
         ST    R1,PPLECB           STORE POINTER TO ECB IN PPL...
         ST    R1,DAPLECB          ...AND DAPL
         ST   R1,DFPLECB          ...AND DFPL                  *AB79238
         XC    RETC,RETC          SET UP ORIGINAL 0 RETCODE    *AB79238
         L     R1,=A(PCL)          POINT TO PARSE CONTROL BLOCK
         ST    R1,PPLPCL           STORE PCL POINTER IN PPL
         LA    R1,ANS              POINT TO PDL LOCATION HOLDER
         ST    R1,PPLANS           STORE POINTER IN PPL
         LA    R1,PPL              POINT TO PARSE PARM LIST
         LINK  EP=IKJPARS          CALL UP PARSE SERVICE ROUTINE
         LTR   R15,R15             DID IT GO OK?
         BNZ   PARSFAIL            NO, ERROR
         MVI   OPTIONS,0           CLEAR OPTIONS BYTE
         L     R1,ANS              GET PDL ASDRESS
         USING PDL,R1              DECLARE BASE FOR PDL
         CLI   TYPE+1,2            WAS "ALPHA" REQUESTED?
         BNE   *+8                 NO, SKIP:
         OI    OPTIONS,OPTALPHA    --FLAG "ALPHA ORDER"
         CLI   COLUMN+1,2          WAS "COLUMN" REQUESTED?
         BNE   *+8                 NO, SKIP:
         OI    OPTIONS,OPTCOLUM    --FLAG "COLUMNAR FORMAT"
         LA    PDSNPDE,FILES       POINT TO DSN ELEMENT
         DROP  R1                  DROP PDL ADDRESSABILITY
         USING FILE,PDSNPDE        DECLARE FILE BASE
ALLOCATE DS    0H
         ST    PDSNPDE,PDSNSAVE    STORE POINTER FOR LOOP
         MVI   DSNBUF-1,C' '       CLEAR DSNAME BUFFER...
         MVC   DSNBUF,DSNBUF-1     ...BY CLASSIC METHOD
         XC    DAPB08(DAPB08L),DAPB08 CLEAR DAIR PARM BLOCK
         MVI   DA08CD+1,X'08'      MOVE IN TYPE CODE
         LA    R1,DSNLEN           POINT TO DSNAME BUFFER...
         ST    R1,DA08PDSN         ...FROM DAPB08
         MVC   DA08DDN(24),DSNBUF  CLEAR DDNAME, UNIT, SERIAL
         MVC   DA08MNM(16),DA08DDN CLEAR MEMBER, PASSWORD
         MVC   DA08DSP,=X'080808'  INSERT "(SHR,KEEP,KEEP)"
         MOVEP DSN,DSNBUF          MOVE IN DATA SET NAME
         MVC   DSNLEN,FILELDSN     INSERT DSNAME LENGTH
         TM    FILEFDSN,X'40'      ARE THERE QUOTES?
         BO    QUOTSEND            YES, JUST SEND BODY
         LA   R1,DFPB             POINT DFPL TO DFPB           *AB79238
         ST   R1,DFPLDFPB                                      *AB79238
         MVI  DFPBDSN,X'04'       REQUEST QUALIFIER            *AB79238
         LA   R1,DSNLEN           SET UP DSN POINTER           *AB79238
         STCM R1,7,DFPBDSN+1      FOR IKJEHDEF                 *AB79238
         MVI  DFPBPSCB,X'21'      SET CONTROL CODES            *AB79238
         LA   R1,DFPL                                          *AB79238
         LINK EP=IKJEHDEF         CALL DEFAULT SERVICE RTN     *AB79238
         LTR  R15,R15                                          *AB79238
         BNZ  DEFFAIL             STOP IF DEFAULT ERROR        *AB79238
         LH    R15,DSNLEN          LOAD LENGTH OF BODY
         BCTR  R15,0               MAKE IT MVC FORM
         EX    R15,MVCDSN          MOVE IN BODY OF DSNAME
         LA    R1,TPUTBUF          LOAD START ADDRESS
         LA    R0,1(,R15)         COMPUTE LENGTH               *AB79238
         UPUT  (1),(0),DATA,CPPL=CPPL  SEND OUT LINE           *AB79238
         B     PASTSEND            SKIP OVER QUOTE CODE
MVCDSN   MVC   TPUTBUF(0),DSNBUF   MOVE IN BODY OF DSNAME      *AB79238
QUOTSEND DS    0H
         LA    R1,DSNBUF           POINT TO BUFFER
         UPUT  (1),44,DATA,CPPL=CPPL   SEND IT TO USER         *AB79238
PASTSEND DS    0H
         MOVEP PWD,DA08PSWD        MOVE IN PASSWORD
         TM    FILEFMEM,X'80'      WAS A MEMBER GIVEN?
         BNZ   MEMERR              YES, ERROR
MEMIGN   DS    0H
         LA    R1,DAPB08           POINT TO TYPE 08 DASB
         ST    R1,DAPLDAPB         ...IN DAPB
         LA    R1,DAPL             POINT TO DAPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15             DID IT GO OK?
         BNZ   DAIRFAIL            NO, ERROR
FAILOK   DS    0H
         TM    DA08DSO,X'02'       IS IT DSORG=PO?
         BZ    NOTPO               NO, ERROR
         MVC   BSAM,BSAMEX         MOVE IN BLANK DCB
         MVC   BSAM+40(8),DA08DDN  INSERT DDNAME
         DROP  PDSNPDE             DROP FILE ADDRESSABILITY
         LA    R1,BSAM             CONSTRUCT...
         ST    R1,ABSAM            ...LIST-FORM...
         MVI   ABSAM,X'80'         ...OPEN/CLOSE
         LA    R1,ABSAM            POINT TO IT
         OPEN  MF=(E,(1))          USE IT TO OPEN BSAM DCB
         TM    BSAM+48,X'10'       DID IT OPEN OK?
         BZ    OPENFAIL            NO, ERROR
         LA    MEM,MHEAD           POINT TO MEMBER LIST HEAD
         LA    ALI,AHEAD           POINT TO ALIAS LIST HEAD
         XC    MHEAD(8),MHEAD      CLEAR CHAIN HEADERS
         LA    R1,TPUTBUF          INITIALIZE
         ST    R1,TPBSTART           BUFFER START
         LA    R1,L'TPUTBUF-1(R1)      AND
         ST    R1,TPBEND                 STOP POINTERS
*                                  GET LINE SIZE FOR...        *MW74183
         GTSIZE
         LTR   R0,R0              IS THIS A SCREEN?            *AB79238
         BZ    GOTSIZE            NO.                          *AB79238
         BCTR  R1,0               YES, CORRECT BY 1            *AB79238
GOTSIZE  LA    R1,TPUTBUF(R1)      ...INITIALIZE BUFFER...     *MW74177
         ST    R1,TPBSTOP          ...STOP POINTER
         MVI   PASSSW,OFF          CLEAR PASS SWITCH
         MVC   BSAMDECB,DECBEX     MOVE IN LIST-FORM DECB
         LA    R1,BSAM             POINT TO DCB...
         ST    R1,DECBDCB          ...IN DECB
         LA    R1,DIRBLOCK        POINT TO INPUT AREA...
         ST    R1,DECBAREA         ...IN DECB
         MVI   TPUTBUF,C' '        CLEAR TPUT BUFFER BY...
         MVC   TPUTBUF+1(L'TPUTBUF-1),TPUTBUF ...CLASSIC METHOD
         EJECT
READBSAM DS    0H
         READ  BSAMDECB,SF,MF=E    READ A DIRECTORY BLOCK
CHCKBSAM CHECK BSAMDECB            WAIT FOR GOOD END
         LA    R10,12              SET
         LA    R11,DIRBLOCK-1       UP
         LA    R9,DIRBLOCK+2         FOR
         AH    R11,DIRBLOCK           BXLE
         USING MEMBERDS,R9         DECLARE BASE REG
NEXTMEM  DS    0H
         CLI   MEMBNAME,X'FF'      TEST FOR END O. DIRECTORY
         BE    LASTMEM             IF THERE, END LOOP
         GETMAIN R,LV=16           GET SPACE FOR LIST ELEMENT
         MVC   4(12,R1),MEMBNAME   MOVE IN NAME, TTR
         TM    OPTIONS,OPTALPHA    WAS "ALPHA" REQUESTED?
         BO    ALPHAADD            YES, ADD TO MEMBER LIST
         TM    MEMBFLGS,X'80'      IS THIS AN ALIAS?
         BO    ISALIAS             YES, GO ADD TO ALIAS LIST
ALPHAADD DS    0H
         ST    R1,0(MEM)           CHAIN ONTO END OF MEMBER LIST
         LR    MEM,R1              USE AS NEW END
         B     ADDED               CONTINUE WITH NEXT MEMBER
ISALIAS  DS    0H
         ST    R1,0(ALI)           CHAIN ONTO END OF ALIAS LIST
         LR    ALI,R1              USE AS NEW END
ADDED    DS    0H
         NI    MEMBFLGS,X'1F'      CLEAR ALIAS, TTRN COUNT
         SLR   R1,R1               CLEAR FOR...
         IC    R1,MEMBFLGS         ...LOAD NO. OF USER 1/2-WDS
         SLL   R1,1                DOUBLE TO GET LENGTH
         AR    R9,R1               ADD TO POINTER
         BXLE  R9,R10,NEXTMEM      LOOP IF MORE IN BLOCK
         B     READBSAM            OTHERWISE, READ NEXT BLOCK
LASTMEM  DS    0H
         LA    BUF,TPUTBUF         POINT TO START OF BUFFER
         SLR   R0,R0               CLEAR FOR:
         ST    R0,0(MEM)           --GROUND END OF MEMBER...
         ST    R0,0(ALI)           --...AND ALIAS LISTS
         L     MEM,MHEAD           POINT TO FIRST MEMBER ELEMENT
         LTR   MEM,MEM             WERE THERE ANY MEMBERS?     *MW74183
         BNZ   MLOOP               YES, SKIP:                  *MW74183
         MVC   TPUTBUF(L'NOMEM),NOMEM --INSERT TEXT            *MW74183
         LA    BUF,L'NOMEM(,BUF)   --POINT PAST IT             *MW74183
         B     ATEST               --GO TEST FOR ALIASES       *MW74183
MLOOP    DS    0H
         CLI   PASSSW,ON           IS THIS PASS TWO?
         BNE   PASS1               NO, SKIP:
         MVI   1(BUF),C'?'         --FLAG "PRIMARY UNKNOWN"
         MVC   2(8,BUF),4(MEM)     --INSERT FIRST ALIAS NAME
         BAL   LINK,CPUT           --PUT IF OVERFLOW
         LR    ALI,MEM             --START SEARCH HERE
         B     ALOOP               --GO SEARCH FOR OTHER ALIASES
PASS1    DS    0H
         TM    15(MEM),X'80'       IS THIS AN ALIAS? ("ALPHA")
         BZ    NOTALIAS            NO, SKIP:
         MVI   1(BUF),C'*'         --FLAG WITH STAR
         MVC   2(8,BUF),4(MEM)     --INSERT MEMBER NAME
         BAL   LINK,CPUT           --PUT IF OVERFLOW
         B     ENDALI              --FORGET ALIAS SEARCH
NOTALIAS DS    0H
         MVC   1(8,BUF),4(MEM)     INSERT MEMBER NAME
         BAL   LINK,CPUT           PUT IF OVERFLOW
         LA    ALI,AHEAD           POINT TO ALIAS LIST HEAD
ALOOP    DS    0H
         LR    LALI,ALI            SAVE LAST ADDRESS
         L     ALI,0(ALI)          GET NEXT ADDRESS
ALOOPT   DS    0H
         LTR   ALI,ALI             IS THERE ONE?
         BZ    ENDALI              NO, EXIT
         CLC   12(3,MEM),12(ALI)   SAME TTR?
         BNE   ALOOP               NO, LOOP FOR ANOTHER
         MVI   1(BUF),C'='         FLAG AS ALIAS
         MVC   2(8,BUF),4(ALI)     INSERT ALIAS NAME
         BAL   LINK,CPUT           PUT IF OVERFLOW
         LR    R1,ALI              SAVE ALIAS ENTRY ADDRESS
         L     ALI,0(ALI)          FIND NEXT ENTRY
         ST    ALI,0(LALI)         CHAIN TO LAST ENTRY
         FREEMAIN R,LV=16,A=(1)    FREE USED ENTRY
         B     ALOOPT              GO TEST NEXT
ENDALI   DS    0H
         LR    R1,MEM              SAVE ENTRY ADDRESS
         L     MEM,0(MEM)          FIND NEXT ENTRY
         FREEMAIN R,LV=16,A=(1)    FREE USED ENTRY
         LTR   MEM,MEM             IS THERE ONE?
         BNZ   MLOOP               YES, LOOP
ATEST    DS    0H                                              *MW74183
         L     MEM,AHEAD           GET FIRST ALIAS ADDRESS
         LTR   MEM,MEM             ARE THERE ANY EXTRA?
         BZ    ENDMEM              NO, SKIP:
         MVI   PASSSW,ON           --SET TO PASS TWO
         XC    AHEAD,AHEAD         --CLEAR OUT ALIAS HEADER
         B     MLOOP               --GO LIST EXTRAS
ENDMEM   DS    0H
         LA    R1,TPUTBUF          POINT TO BUFFER
         UPUT  (1),L'TPUTBUF,DATA,CPPL=CPPL OUTPUT REST OF LINE*AB79238
CLOSE    DS    0H
         LA    R1,ABSAM            POINT TO LIST-FORM OPEN/CLOSE
         CLOSE MF=(E,(1))          USE IT TO CLOSE BSAM DCB
DEALLOC  DS    0H
         L     PDSNPDE,PDSNSAVE    RE-LOAD POINTER
         USING FILE,PDSNPDE        DECLARE BASE
         XC    DAPB18(DAPB18L),DAPB18 CLEAR TYPE 18 DAPB
         MVI   DA18CD+1,X'18'      INSERT TYPE CODE
         MVC   DA18DDN(18),DA08DDN INSERT DDNAME, CLEAR -MNM, -SCLS
         MVI   DA18DSP,X'08'       FLAG "KEEP"
         MVC   DA18JBNM,DA08MNM    CLEAR SYSOUT JOBCLASS
         LA    R1,DAPB18           POINT TO TYPE 18 DAPB...
         ST    R1,DAPLDAPB         ...IN DAPL
         LA    R1,DAPL             POINT TO DAPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15             DID IT GO OK?
         BNZ   FREEFAIL            NO, ERROR
NEXTFILE DS    0H
         L     PDSNPDE,FILEPFIL    CHAIN TO NEXT FILE PDE
         LTR   PDSNPDE,PDSNPDE     IS THERE ONE?
         BP    ALLOCATE            YES, LOOP TO DO IT
         DROP  PDSNPDE             FORGET BASE
RLSA     IKJRLSA ANS               RELEASE SPACE FOR PDE
         LH    R2,RETC            LOAD RETURN CODE TO BE       *AB79238
         CH    R2,=H'12'          IS IT NOT TOO BAD?           *AB79238
         BL    GOHOME             NO.                          *AB79238
         STACK PARM=FLUSH,MF=(E,PPL)   YES, FLUSH STACK        *AB79238
         TCLEARQ INPUT            AND CLEAR TERM QUEUE         *AB79238
GOHOME   LR    R15,R2             RETURN CODE TO R15           *AB79238
         RETURNX RC=(15)          RETURN TO CALLER             *AB79238
CPUT     DS    0H
         TM    OPTIONS,OPTCOLUM    WAS "COLUMN" REQUESTED?
         BZ    *+12                NO, SKIP:
         LA    R2,10(BUF)          --SPACE OVER 10 COLUMNS
         B     CPUTPET             --GO TEST FOR PAST END
         LR    R2,BUF              POINT TO FIRST ADDED CHAR
CPUTL    LA    R2,1(R2)            STEP TO NEXT CHAR
         CLI   0(R2),C' '          IS IT BLANK?
         BNE   CPUTL               NO, LOOP FOR BLANK
CPUTPET  DS    0H
         C     R2,TPBSTOP          PAST END?
         BH    *+8                 YES, SKIP:
         LR    BUF,R2              --POINT TO NEW END
         BR    LINK                --RETURN
         LR    R0,BUF              DECREMENT END ADDRESS BY...
         S     R0,TPBSTART         ...START TO GET LENGTH
         LA    R1,TPUTBUF                                      *AB79238
         UPUT  (1),(0),DATA,CPPL=CPPL   SEND 1ST PART          *AB79238
         SR    R2,BUF              COMPUTE ADDED LENGTH
         MVC   TPUTBUF,0(BUF)      MOVE ADDED DATA TO START
         LA    BUF,TPUTBUF(R2)     POINT PAST IT
         L     R0,TPBEND           GET LENGTH OF...
         SR    R0,BUF              ...REST OF LINE
         MVI   0(BUF),C' '         CLEAR...
         STC   R0,*+5              ...THAT MANY...
         MVC   1(0,BUF),0(BUF)     ..CHARACTERS
         BR    LINK                RETURN
PARSFAIL MVI   RETC+1,12          SET BAD RETURN CODE          *AB79238
         CH    R15,=H'12'         SEE IF MSG NEEDED            *AB79238
         BL    RLSA               NO, JUST DIE                 *AB79238
         ERROR ' PARSE FAILURE',RLSA
DAIRFAIL DS    0H
         MVI   WHATFAIL,OFF       FALG "ALLOCATE FAILED"
         OI    RETC+1,12          SET ERROR FLAG               *AB79238
HNDLFAIL DS    0H
         DAIRFAIL DAPL=DAPL,MF=(E,FAILPL)   INVOKE DAIRFAIL    *AB79238
         CLI   WHATFAIL,ON         WAS IT A FREE FAILURE?
         BE    NEXTFILE            YES, GO TRY NEXT FILE
         TM    DA08FLG,X'80'       WAS IT ALLOCATED ANYWAY?
         BO    FAILOK              YES, GO TRY TO OPEN
         B     NEXTFILE            NO, TRY NEXT FILE
DEFFAIL  MVI   RETC+1,12                                       *AB79238
         CH    R15,=H'8'          WHAT RETURN CODE?            *AB79238
         BL    NEXTFILE           PROBABLY COULDN'T PROMPT     *AB79238
         BE    TOOLONG            NAME WAS TOO LONG            *AB79238
         CH    R15,=H'16'         CHECK FOR DAIR-TYPE ERROR    *AB79238
         BE    DAIRMSG            IF SO, CALL DAIR ANYWAY      *AB79238
         CH    R15,=H'20'                                      *AB79238
         BE    DAIRMSG                                         *AB79238
         CVD   R15,DECWORK        GET RETURN CODE INTO MSG     *AB79238
         UNPK  DEFCODE(2),DECWORK                              *AB79238
         OI    DEFCODE+1,X'F0'                                 *AB79238
         UPUT  DEFMSG1,*,HELP=(DEFMSG2),CPPL=CPPL SEND MSG     *AB79238
         MVI   RETC+1,12          SET ERROR CODE               *AB79238
         B     NEXTFILE           TRY NEXT DSN                 *AB79238
DAIRMSG  OI    DA08CTL,X'20'      ASK DAIR TO ADD PREFIX       *AB79238
         B     PASTSEND           CALL DAIR TO GET GOOD MSG    *AB79238
TOOLONG  ERROR ' DSNAME TOO LONG',NEXTFILE                     *AB79238
OPENFAIL ERROR ' OPEN FAILURE',CLOSE
MEMERR   ERROR ' MEMBER NAME IGNORED',MEMIGN,RC=4
FREEFAIL DS    0H
         MVI   WHATFAIL,ON         FLAG "FREE FAILED"
         OI    RETC+1,4           INDICATE MINOR ERROR         *AB79238
         B     HNDLFAIL            JOIN COMMON CODE
NOTPO    ERROR ' NOT PARTITIONED',DEALLOC
MOVEP    DS    0H
         TM    6(R1),X'80'         IS IT PRESENT
         BCR   8,R14               NO, RETURN
         LH    R2,4(,R1)           PICK UP LENGTH
         BCTR  R2,0                MAKE IT MVC FORM
         L     R1,0(,R1)           PICK UP ADDRESS
         EX    R2,MOVEPMVC         MOVE IT IN
         BR    R14                 RETURN
MOVEPMVC MVC   0(0,R15),0(R1)
         EJECT
FLUSH    STACK DELETE=ALL,MF=L    TO FLUSH STACK               *AB79238
NOMEM    DC    C' (DATA SET HAS NO MAIN MEMBERS) '             *MW74183
DEFMSG1  DC    C' DEFAULT ERROR+'                              *AB79238
DEFMSG2  DC    C' RETURN CODE XX'                              *AB79238
DEFCODE  EQU   *-2                POINTER TO RET CODE          *AB79238
         PRINT NOGEN
BSAMEX   DCB   DSORG=PS,MACRF=R,KEYLEN=0,EODAD=LASTMEM,                *
               LRECL=256,RECFM=F,BLKSIZE=256
BSAMEXL  EQU   *-BSAMEX
         READ  DECBEX,SF,,,256,MF=L
DECBEXL  EQU   *-DECBEX
         LTORG
PCL      IKJPARM DSECT=PDL
FILES    IKJPOSIT DSNAME,LIST,PROMPT='DATA SET NAME(S)'                *
               HELP=('NAME(S) OF DATA SET(S) FOR WHICH MEMBER LIST IS D*
               ESIRED')
TYPE     IKJKEYWD DEFAULT='MATCH'
         IKJNAME 'MATCH'
         IKJNAME 'ALPHA'
COLUMN   IKJKEYWD DEFAULT='FREE'
         IKJNAME 'FREE'
         IKJNAME 'COLUMN'
         IKJENDP
         SPACE 2
MEMBERDS DSECT MAPS ONE ENTRY IN PDS DIRECTORY
MEMBNAME DS    CL8                 NAME OF MEMBER
MEMBTTR  DS    XL3                 LOCATION OF MEMBER
MEMBFLGS DS    BL1                 ALIAS,#(TTRN'S),#(1/2-WDS)
MEMBDATA DS    CL62 (MAX)          USER DATA (INCL. TTRN-S)
         SPACE 2
FILE     DSECT MAPS ONE DATA SET PARSE DESCRIPTOR
FILEPDSN DS    A                   -> DATA SET NAME
FILELDSN DS    H                   LENGTH OF NAME
FILEFDSN DS    2X                  FLAGS
FILEPMEM DS    A                   -> MEMBER NAME
FILELMEM DS    H                   LENGTH OF NAME
FILEFMEM DS    2X                  FLAGS
FILEPPWD DS    A                   -> PASSWORD
FILELPWD DS    H                   LENGTH
FILEFPWD DS    2X                  FLAGS
FILEPFIL DS    A                   -> NEXT DATA SET DESCRIPTOR
         SPACE 2
WORKAREA DSECT
         DS    18F                 O/S SAVE AREA
ABSAM    DS    A                   OPEN/CLOSE PARM LIST
BSAM     DS    CL(BSAMEXL)         PLACE FOR BSAM DCB
DIRBLOCK DS    CL256               DIRECTORY BLOCK BUFFER
BSAMDECB DS    CL(DECBEXL)         SPACE FOR DECB
DECBDCB  EQU   BSAMDECB+8          -> DATA CONTROL BLOCK
DECBAREA EQU   BSAMDECB+12         -> INPUT AREA (DIRBLOCK)
MHEAD    DS    A                   HEAD OF MEMBER LIST
AHEAD    DS    A                   HEAD OF ALIAS LIST
TPBSTART DS    A                   -> START OF TPUT BUFFER
TPBSTOP  DS    A                   -> LAST USABLE CHAR OF TPUT BUFFER
TPBEND   DS    A                   -> END OF TPUT BUFFER
TPUTBUF  DS    CL152               TPUT BUFFER
PASSSW   DS    X                   PASS SWITCH 00=1,FF=S
OPTIONS  DS    X                   OPTION BYTE
*        VALUE FOR "OPTIONS" BYTE
OPTALPHA EQU   X'80'               ALPHA ORDER, NO ALIAS MATCHING
OPTCOLUM EQU   X'40'               LIST IN COLUMNAR FORMAT
*        END OF VALUES FOR "OPTIONS"
DSNLEN   DS    H                   LENGTH OF DATA IN:
DSNBUF   DS    CL44                  DATA SET NAME BUFFER FOR DAIR
ECB      DS    F                   EVENT CONTROL BLOCK FOR ATTN
ANS      DS    A                   -> PDL FROM PARSE
PDSNSAVE DS    A                   SAVE AREA FOR PDL POINTER
         SPACE 2
CPPL     DS    0CL16               COMMAND PROCESSOR PARAMETER LIST
CPPLCBUF DS    A                   -> COMMAND BUFFER
CPPLUPT  DS    A                   -> USER PROFILE TABLE
CPPLPSCB DS    A                   -> PROTECTED STEP CONTROL BLOCK
CPPLECT  DS    A                   -> ENVIRONMENT CONTROL TABLE
         SPACE 2
PPL      DS    0CL28               PARSE PARAMETER LIST
PPLUPT   DS    A                   -> USER PROFILE TABLE
PPLECT   DS    A                   -> ENVIRONMENT CONTROL TABLE
PPLECB   DS    A                   -> ATTN EVENT CONTROL BLOCK
PPLPCL   DS    A                   -> PARSE CONTROL LIST
PPLANS   DS    A                   -> LOC -> PARSE DESCRIPTOR LIST
PPLCBUF  DS    A                   -> COMMAND BUFFER
PPLUWA   DS    A                   -> USER WORK AREA
         SPACE 2
DAPL     DS    0CL20               DYNAMIC ALLOCATION PARAMETER LIST
DAPLUPT  DS    A                   -> USER PROFILE TABLE
DAPLECT  DS    A                   -> ENVIRONMENT CONTROL TABLE
DAPLECB  DS    A                   -> ATSN EVENT CONTROL BLOCK
DAPLPSCB DS    A                   -> PROTECTED STEP CONTROL BLOCK
DAPLDAPB DS    A                   -> DYNAMIC ALLOCATION PARAMETER BLCK
         SPACE 2
DAPB08   DS    0C                  DYN. ALLOC. PARAM. BLOCK TYPE 08
*                                  (ALLOCATE BY DSNAME)
DA08CD   DS    XL2                 IN: TYPE CODE (X'0008')
DA08FLG  DS    XL2                 OUT: FLAGS
DA08DARC DS    XL2                 OUT: DYN. ALLOC. RETURN CODE
DA08CTRC DS    XL2                 OUT: CATALOG RETURN CODE
DA08PDSN DS    A                   IN: -> DSNAME BUFFER
DA08DDN  DS    CL8                 IN: SPACES; OUT:DDNAME
DA08UNIT DS    CL8                 IN: SPACES
DA08SER  DS    CL8                 IN: SPACES
DA08XXXX DS    CL16                IN: ZEROS (SPACE PARMS)
DA08MNM  DS    CL8                 IN: SPACES (MEMBER NAME)
DA08PSWD DS    CL8                 IN: SPACES OR PASSWORD
DA08DSP  DS    XL3                 IN: X'080808' => (SHR,KEEP,KEEP)
DA08CTL  DS    X,XL3               IN: X'00' OR X'20' FOR PREFIX USERID
DA08DSO  DS    X                   OUT: X'02' => "PO", X'01' => "U"
DA08ALN  DS    CL8                 IN: IGNORED
DAPB08L  EQU   *-DAPB08            LENGTH OF TYPE 08 DAPB
         SPACE 2
DAPB18   DS    0C                  DYN. ALLOC. PARAM. BLOCK TYPE 18
*                                  (FREE A DATA SET)
DA18CD   DS    XL2                 IN: TYPE CODE (X'0018')
DA18FLG  DS    XL2                 OUT: FLAGS
DA18DARC DS    XL2                 OUT: DYN. ALLOC. RETURN CODE
DA18CTRC DS    XL2                 CATALOG RETURN CODE
DA18PDSN DS    A                   IN: -> DSNAME BUFFER
DA18DDN  DS    CL8                 IN: DDNAME
DA18MNM  DS    CL8                 IN: SPACES (MEMBER NAME)
DA18SCLS DS    CL2                 IN: SPACES (SYSOUT CLASS)
DA18DSP  DS    X                   IN: X'08' (KEEP)
DA18CTL  DS    X                   IN: X'00' OR X'20' FOR PREFIX USERID
DA18JBNM DS    CL8                 IN: SPACES (SYSOUT JOBNAME)
DAPB18L  EQU   *-DAPB18            LENGTH OF TYPE 18 DAPB
         SPACE 2
DFPL     DS    0CL16              DEFAULT PARM LIST            *AB79238
DFPLUPT  DS    A                  ->UPT                        *AB79238
DFPLECT  DS    A                  ->ECT                        *AB79238
DFPLECB  DS    A                  ->ECB                        *AB79238
DFPLDFPB DS    A                  ->DEFAULT PARM BLOCK         *AB79238
DFPB     DS    0CL12              DEFAULT PARM BLOCK           *AB79238
DFPBDSN  DS    A                  ->DSN TO BE QUALIFIED        *AB79238
DFPBPSCB DS    A                  ->PSCB                       *AB79238
DFPBQUAL DS    A                  ->RETURN QUALIFIER (UNUSED)  *AB79238
DECWORK  DS    D                  DECIMAL WORK AREA            *AB79238
FAILPL   DAIRFAIL MF=L            DAIRFAIL PARM LIST           *AB79238
RETC     DS    H              ULTIMATE RETURN CODE             *AB79238
WHATFAIL DS    C                   WHAT FAILED SWITCH
         END   LISTM
