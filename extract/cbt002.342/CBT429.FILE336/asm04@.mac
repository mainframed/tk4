1
-
0                  INSTITUTE FOR COMPUTER SERVICES AND APPLICATIONS
0                                  RICE UNIVERSITY
0                                   10 March 1980
0                                Document No. ASM004
0                        SAVEX and RETURNX Macro Instructions
-
        The IBM conventions for register saving and save area chaining i
        assembler language routines require a substantial amount of
        housekeeping code at the start of a routine and a lesser amount
        each exit point.  The IBM SAVE and RETURN macro instructions pro
        shorthand for some, but not all, of the necessary code.  ICSA pr
        the SAVEX and RETURNX macros to allow the generation of all norm
        entry and exit code with a single macro instruction.  SAVEX and
        RETURNX are stored in the data set RICE.MACLIB, which is automat
        available in batch when any ICSA assembler PROC is used (unless
        SYSMAC1 parameter of the EXEC card is specified) and in time-sha
        when either of the ICSA assembler prompters is used (unless eith
        NORICEMAC or LIBFILE keyword is specified).
-       SAVEX
0       The SAVEX macro is used to save registers at an entry point of a
        routine, to establish a new save area, link it to the save area
        and set up base and parameter registers.  It also can be used to
        provide internal documentation of the function and version of th
        routine.
0       The syntax of SAVEX is as follows:
0           ö¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¼
+                       ¼           ¼
            ×           ×           ×                                ×
            ×  LABEL    ×  MACRO    ×     OPERANDS                   ×
            ×           ×           ×                                ×
            ×¿¿¿¿¿¿¿¿¿¿¿×¿¿¿¿¿¿¿¿¿¿¿×¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿×
+           ¨           ¿           ¿                                ³
            ×           ×           ×                                ×
            ×           ×           ×     ö                ¼         ×
            ×  [label]  ×  SAVEX    ×     × REGS=(r1[,r2]) ×         ×
            ×           ×           ×     ¨                ³         ×
            ×           ×           ×     ö                      ¼   ×
            ×           ×           ×     × ,LV=length,SP=number ×   ×
            ×           ×           ×     × ,SA=address          ×   ×
            ×           ×           ×     × ,CHAIN=NO            ×   ×
            ×           ×           ×     ¨                      ³   ×
            ×           ×           ×     ö                  ¼       ×
            ×           ×           ×     × ,BASE=(reg-list) ×       ×
            ×           ×           ×     ¨                  ³       ×
            ×           ×           ×     ö            ¼             ×
            ×           ×           ×     × ,PARMR=reg ×             ×
            ×           ×           ×     ¨            ³             ×
            ×           ×           ×     ö           ¼              ×
            ×           ×           ×     × ,CSECT=NO ×              ×
            ×           ×           ×     ¨           ³              ×
            ×           ×           ×     ö             ¼            ×
            ×           ×           ×     × ,REGSTRS=NO ×            ×
            ×           ×           ×     ¨             ³            ×
            ×           ×           ×     ö          ¼               ×
            ×           ×           ×     × ,ID=name ×               ×
            ×           ×           ×     ¨          ³               ×
            ×           ×           ×     ö         ¼                ×
            ×           ×           ×     × ,TMS=NO ×                ×
            ×           ×           ×     ¨         ³                ×
            ×           ×           ×     ö               ¼          ×
            ×           ×           ×     × ,XID='string' ×          ×
            ×           ×           ×     ¨               ³          ×
            ×           ×           ×     ö           ¼              ×
            ×           ×           ×     × ,PARM=YES ×              ×
            ×           ×           ×     ¨           ³              ×
            ×           ×           ×     ö             ¼            ×
            ×           ×           ×     × ,BANNER=YES ×            ×
            ×           ×           ×     ¨             ³            ×
            ×           ×           ×                                ×
            ¨¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿³
+                       ¨           ¨
1
        ASM004
-
        REGS=(r1[,r2]) specifies which registers are to be saved on entr
             the routine.  The registers are stored by the instruction
0                      STM   r1,r2,offset(13)
0            The registers must be specified as absolute integers (i.e.,
             symbolic registers are not allowed).  REGS=(14,12) is the
             default.  Note that if only one register is specified, only
             register is saved.
0       LV=length requests the allocation of a new save area of the indi
             length by use of the GETMAIN macro.  GETMAIN is described i
             IBM manual, OS/VS2 MVS Supervisor Services and Macro
+                        ______ ___ __________ ________ ___ _____
             Instructions.  If none of LV, SA and CHAIN is specified, LV
+            ____________
             assumed by default.
        SP=number specifies the storage subpool from which a new save ar
             to be allocated.  The default is SP=0.  For information on
             use of subpools, see the IBM manual, OS/VS2 MVS Supervisor
+                                                 ______ ___ __________
             Services and Macro Instructions.
+            ________ ___ _____ ____________
        SA=address specifies that the storage area indicated is to be us
             a new save area.  Alternately, SA=* may be used to specify
             new static save area (of length 72 bytes) should be generat
             part of the macro expansion.  If SA is specified, LV and SP
             be ignored.  Note: The use of SA causes the containing prog
             be non-reentrant.
        CHAIN=NO may be specified to suppress chaining to or allocating
             save area.  If CHAIN=NO is not specified, these functions w
             performed.
0       BASE=(reg-list) specifies one or more registers to be set up as
             program base registers.  If only one register is supplied,
             parentheses may be omitted.  The default is BASE=12.  Note:
             assembler routine is intended for use from PL/I, the BASE k
             should be explicitly supplied, as maintenance of the PL/I
             environment requires that the contents of register 12 not b
             modified.
0       PARMR=reg specifies that the contents of register 1 (usually a
             parameter address) are to be preserved in the indicated reg
             The form "PARMR=" may also be used to indicate that the con
             of register 1 need not be preserved.  Note that registers 1
             15 and 0 must not be used for this purpose.  PARMR=1 is the
             default.
0       CSECT=NO specifies that a new control section is not to be start
             If CSECT=NO is not specified, a new CSECT is generated whos
             is the label of the SAVEX macro.
0       REGSTRS=NO may be specified to suppress the generation of standa
             symbolic names for the general-purpose and floating-point
             registers.  If REGSTRS=NO is not coded, the symbols Rn (for
             between 0 and 15) and FRn (for even n between 0 and 6) are
             generated.  Additionally, symbols RA, RB ... RF are generat
             an alternate representation for registers 10 through 15.  S
             will not generate register names more than once in a single
             assembly.
0       ID=name may be used to specify a routine name to appear in the S
             AREA TRACE portion of a dump taken while the routine is act
             If the ID parameter is omitted, the label field of the macr
             the current CSECT name if the macro has no label, is used.
0       TMS=NO may be used to specify that the time and date of assembly
             be included in the SAVE AREA TRACE information.  If TMS=NO
             specified, the time and date of assembly will appear
             automatically in any dump taken while the routine is active
0       XID='string' may be used to insert descriptive text into the SAV
             TRACE information.
0       PARM=YES may be used to insert any SYSPARM value passed to the
             assembler into the SAVE AREA TRACE information.
0       BANNER=YES may be specified to produce a heading page for a rout
             This page will contain the routine name, time of assembly a
             date of assembly in block letters.  If TMS=NO was specified
             the routine name is so printed.  Note that the use of this
             specification may substantially increase the CPU time requi
             for assembly.
1
        ASM004
-
        Example 1:  Begin a routine named CLOCK, using standard linkage
             conventions, register 12 as a base register, 1 as a paramet
             register, and a 72 byte dynamic save area.
0         cc 1        10
             CLOCK    SAVEX
-       Example 2:  Begin a routine with two entry points, A and B.  At
             entry, save the contents of register 1 in register 3.  Use
             static save area with label MYSAVE.
0         cc 1        10    16
             A        SAVEX SA=MYSAVE,PARMR=R3
                      B     JUNCTION
                      DROP  R12
                      ENTRY B
             B        SAVEX SA=MYSAVE,PARMR=R3,CSECT=NO
             JUNCTION BALR  R12,0
                      USING *,R12
-       Example 3:  Begin a routine FREQNCY, which requires a dynamic wo
             save area of 12K bytes, and 2 base registers.  Provide deta
             information to be printed in the SAVE AREA TRACE of a dump.
0         cc 1        10    16                                         7
             FREQNCY  SAVEX LV=12288,BASE=(R10,R11),BANNER=YES,        *
                            XID='FREQUENCY REPORTING SUBROUTINE - VERSI*
                            ON 6.1'
-       RETURNX
0       The RETURNX macro is used to return control to a calling routine
        freeing any dynamic save area taken on entry.  The syntax of RET
        is as follows:
-            ö¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¼
+                        ¼           ¼
             ×           ×           ×                                ×
             ×  LABEL    ×  MACRO    ×    OPERANDS                    ×
             ×           ×           ×                                ×
             ×¿¿¿¿¿¿¿¿¿¿¿×¿¿¿¿¿¿¿¿¿¿¿×¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿×
+            ¨           ¿           ¿                                ³
             ×           ×           ×                                ×
             ×           ×           ×    ö              ¼            ×
             ×           ×  RETURNX  ×    × REGS=(r1,r2) ×            ×
             ×           ×           ×    ¨              ³            ×
             ×           ×           ×    ö                ¼          ×
             ×           ×           ×    × ,RC=number     ×          ×
             ×           ×           ×    × ,RC=(reg-list) ×          ×
             ×           ×           ×    ¨                ³          ×
             ×           ×           ×                                ×
             ¨¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿¿³
+                        ¨           ¨
-       REGS=(r1,r2) specifies which registers are to be restored before
             returning to the calling program.  The registers are loaded
             the instruction
0                      LM    r1,r2,offset(13)
0            The registers must be specified as absolute integers (i.e.,
             symbolic registers are not allowed).  REGS=(14,12) is the
             default.  If only a single register is specified, only that
             register will be restored.
0       RC=number specifies a return code which is to be returned to the
             calling routine in register 15.  The default is RC=0.
        RC=(reg-list) specifies one or more registers whose contents are
             returned intact to the calling routine.  The register(s) mu
             specified as absolute integers (i.e., symbolic registers ar
             permitted).
-       Example 1:  Return to the calling routine, with a 0 return code
             register 15.
0         cc 1        10
                      RETURNX
1
        ASM004
-
        Example 2:  Return to the calling routine, preserving the conten
             registers 15 and 0.
0         cc 1        10
             EXIT     RETURNX RC=(15,0)
