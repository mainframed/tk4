SCOP     TITLE 'SEQUENTIAL COPY UTILITY'
         MACRO
&N       PRT   &M,&EN,&MF=I
         LCLA  &J,&K
&K       SETA  K'&M
         AIF   ('&MF' EQ 'L').L1
&N       LA    R0,MS&SYSNDX
         BAL   R14,PRINT
PRTEXT   CSECT
MS&SYSNDX DC   AL2(3+&K),X'8000'
.L2      ANOP
&EN      DC    C'0',C&M
         DC    X'00000020'
&SYSECT  CSECT
         MEXIT
.L1      ANOP
PRTEXT   CSECT
&J       SETA  &K+5
&N       DS    0CL&J
         DC    AL2(3+&K),X'8000'
         AGO   .L2
         MEND
         MACRO
         JUMP  &I,&O
         BAL   LR,&I
         BAL   LR,&O
         MEND
         MACRO
         USEI
         GBLC  &DBASE
         AIF   ('&DBASE' EQ 'IR').GOTBASE
         AIF   ('&DBASE' EQ '').NODROP
         DROP  &DBASE
.NODROP  USING IHADCB,IR
&DBASE   SETC  'IR'
.GOTBASE MEND
         MACRO
         USEO
         GBLC  &DBASE
         AIF   ('&DBASE' EQ 'OR').GOTBASE
         AIF   ('&DBASE' EQ '').NODROP
         DROP  &DBASE
.NODROP  USING IHADCB,OR
&DBASE   SETC  'OR'
.GOTBASE MEND
         MACRO
         USEP
         GBLC  &DBASE
         AIF   ('&DBASE' EQ 'PR').GOTBASE
         AIF   ('&DBASE' EQ '').NODROP
         DROP  &DBASE
.NODROP  USING IHADCB,PR
&DBASE   SETC  'PR'
.GOTBASE MEND
         MACRO
         USES
         GBLC  &DBASE
         AIF   ('&DBASE' EQ 'SR').GOTBASE
         AIF   ('&DBASE' EQ '').NODROP
         DROP  &DBASE
.NODROP  USING IHADCB,SR
&DBASE   SETC  'SR'
.GOTBASE MEND
         MACRO
         REGS
         LCLA  &I
.NXT     AIF   (&I EQ 16).END
R&I      EQU   &I
&I       SETA  &I+1
         AGO   .NXT
.END     MEND
         EJECT
***********************************************************************
*     THIS PROGRAM COPIES ONE SEQUENTIAL DATASET TO ANOTHER USING
*   QSAM (THUS THE DATASETS MUST NOT CONTAIN KEYED RECORDS),
*   MAKING THE FOLLOWING TYPES OF FORMAT CHANGES -
*
*        BLOCKED TO UNBLOCKED OR VICE VERSA
*        RECORD FORMAT CHANGES WHERE POSSIBLE
*        REBLOCKING
*
*           THE FOLLOWING TABLE SHOWS ACCEPTABLE SOURCE AND TARGET
*        RECORD FORMATS -
*
*                 S O U R C E
* TARGET *  F  *  FB  *  V  *  VB  *  U  *
*        *-----*------*-----*------*-----*
*   F    *     *      * T/F * T/F  * T/F *
*        *     *      *     *      *     *
*   FB   *     *      * T/F * T/F  * T/F *
*        *     *      *     *      *     *
*   V    *     *      *     *      *     *
*        *     *      *     *      *     *
*   VB   *     *      *     *      *     *
*        *     *      *     *      *     *
*   U    *     *      *     *      *     *
*        *-----*------*-----*------*-----*
*
*           THE EMPTY CELLS SHOWN ABOVE INDICATE THAT NO DATA IS LOST
*        AND THAT THE COPY AND OPTIONAL TRANSFORMATION OCCUR AS
*        IMPLICITLY SPECIFIED.  WHEN FORMAT V, VB, OR U ARE
*        CONVERTED TO FORMAT F OR FB, TRUNCATION OR RIGHT BLANK FILL
*        OCCURS AS NECESSARY.
*
*           AN EARLIER VERSION OF THIS PROGRAM OFFERED THE OPTION TO
*        BE INVOKED VIA LINK, ATTACH, OR XCTL AND THE OPTION TO CHANGE
*        THE DEFAULT DDNAMES.  THIS VERSION WILL SIMPLY ALWAYS USE THE
*        DEFAULT DDNAMES -
*
*        SYSPRINT  MESSAGE DATA SET
*        SYSUT1    INPUT DATA SET
*        SYSUT2    OUTPUT DATA SET
*
*   MODIFICATION ITEMS
* 1) WHEN OUTPUT DATA SET IS A UNIT RECORD DEVICE, FORCE THE
*    RECORD FORMAT TO BE UNBLOCKED AND
*    THE BLOCKSIZE TO BE THE SAME AS THE LRECL.
* 2) REMOVE EXTRA LEADING BLANK FROM HEADER MESSAGE.
*    DOUBLE SPACE ALL OTHER MESSAGES.
* 3) SUPPORT SPANNED RECORDS.
* 4) SUPPORT RECFM=D
*
***********************************************************************
         EJECT
SEQCOPY  START
         PRINT NOGEN
         REGS
BR       EQU   R2                 BASE REGISTER
IR       EQU   R3                 INPUT DCB ADDRESS
OR       EQU   R4                 OUTPUT DCB ADDRESS
PR       EQU   R5                 PRINT DCB ADDRESS
SR       EQU   R6                 SCRATCH
WR       EQU   R7                 SCRATCH
PDR      EQU   R8                 ERROR MESSAGE TEMPLATE DSECT BASE
LR       EQU   R9                 LINK REGISTER
IRECPT   EQU   R10                INPUT ADDRESS (EVEN FOR MVCL)
ILRECL   EQU   R11                INPUT LENGTH (ODD FOR MVCL)
         EJECT
         SAVE  (14,12),,*
         USING SEQCOPY,BR
         LR    BR,R15             ESTABLISH BASE REGISTER
         ST    R13,SAVE+4
         LA    R13,SAVE
         LA    IR,IN              INPUT DCB ADDRESS
         LA    OR,OUT             OUTPUT DCB ADDRESS
         LA    PR,PRINTDCB        PRINT DCB ADDRESS
         OPEN  (IN,,OUT,(OUTPUT),PRINTDCB,(OUTPUT))
         USEP
         TM    DCBOFLGS,X'10'     Q.DID SYSPRINT OPEN
         BO    PRTOPEN            YES.
         OI    POPEN+1,X'F0'      FORCE MESSAGES TO JOB LOG
         WTO   'OPEN FAILED FOR SYSPRINT',ROUTCDE=11
         USING PRTEXT,PDR
PRTOPEN  L     PDR,=A(PRTEXT)
         LA    R0,HEADING
         BAL   R14,PRINT          PRINT OPENING LINE
         B     OM0I               GO PRINT OPEN EXIT MESSAGES
TSYS1OP  NI    OMX+1,X'0F'        FORCE TO NO-OP
         USEI
         TM    DCBOFLGS,X'10'     Q.DID SYSUT1 OPEN
         BO    SYS1OP             YES.
         PRT   'SEQ001 UNABLE TO OPEN SYSUT1 - EOJ'
         B     BADRET
         USEO
SYS1OP   TM    DCBOFLGS,X'10'     Q.DID SYSUT2 OPEN
         BO    SYS2OP             YES.
         PRT   'SEQ002 UNABLE TO OPEN SYSUT2 - EOJ'
         B     BADRET
         SPACE 2
IOERR1   LR    R0,R1              A(SYNAD MESSAGE BUFFER) TO R0
         BAL   R14,PRINT          PRINT I/O ERROR MESSAGE
IOERR2   SYNADRLS
         L     R14,ERRRET         GET ERROR RETURN
         USES
         TM    DCBEROPT,X'C0'     Q.SKIP OR ACCEPT ERROR
         BCR   7,R14              YES, RETURN
BADRET   MVI   RC+3,16            SET COND CODE = 16
         B     CLOSE
         SPACE 2
*   INPUT DATA SET END OF DATA ROUTINE
EOF      MVC   NUM+8(9),=X'202020202020202120'
         ED    NUM+7(10),RECCOUNT
         PRT   'SEQ009 XXXXXXXXX LOGICAL RECORDS WERE COPIED',NUM
         PRT   'SEQ010 END OF JOB - SEQUENTIAL COPY UTILITY'
         SPACE 2
CLOSE    CLOSE (PRINTDCB,,OUT,,IN)  CLOSE ALL DATA SETS
         L     R15,RC
         L     R13,4(0,R13)
         RETURN (14,12),RC=(15)
         EJECT
***********************************************************************
*           SELECT INPUT AND OUTPUT ROUTINES TO USE BASED ON THE
*        INPUT AND OUTPUT RECORD FORMATS -
*
*   INPUT RECFM     F    0
*                   V    8
*                   U   16
*
*  OUTPUT RECFM     F    0
*                   V   24
*                   U   48
*
*           THUS WE HAVE THE FOLLOWING CASE SELECTION -
*
*        RECFM         ROUTINE       CODE
*    INPUT  OUTPUT  INPUT  OUTPUT    VALUE
*      F      F     INPUT1 OUT1        0
*      V      F     INPUT2 OUT1        8
*      U      F     INPUT1 OUT1       16
*    -----------------------------------
*      F      V     INPUT1 OUT2       24
*      V      V     INPUT1 OUT1       32
*      U      V     INPUT1 OUT2       40
*    -----------------------------------
*      F      U     INPUT1 OUT1       48
*      V      U     INPUT1 OUT1       56
*      U      U     INPUT2 OUT1       64
*
***********************************************************************
         EJECT
*   PRINT OUT ANY MESSAGES SET BY THE OPEN EXITS
OM0I     B     OM0O
         OI    OM0I+1,X'F0'
         USEI
         TM    DCBDEVT,X'20'      INPUT ON DA DEVICE?
         BZ    OM0O               NO, NO ERROR
OM0E     PRT   'SEQ006 KEYED RECORDS NOT SUPPORTED'
         MVI   RC+3,16
         B     CLOSE
OM0O     B     OM1
         OI    OM0O+1,X'F0'
         USEO
         TM    DCBDEVT,X'20'      OUTPUT ON DA DEVICE?
         BNZ   OM0E               YES, ERROR
OM1      B     OM2
         OI    OM1+1,X'F0'        CLOSE GATE
         PRT   'SEQ003 INPUT RECFM MISSING - FB ASSUMED'
OM2      B     OM3
         OI    OM2+1,X'F0'        CLOSE GATE
         PRT   'SEQ004 INPUT BLKSIZE MISSING - SET TO 80'
OM3      EQU   *
OMX      B     TSYS1OP            ONE-SHOT BRANCH
         SPACE 2
         USEI                     PROCESS I/P RECFM
SYS2OP   B     RECFMTS            ONLY ONE MESSAGE FOR OUTPUT FILE
         OI    SYS2OP+1,X'F0'     CLOSE GATE SINCE IT WAS OPEN
         PRT   'SEQ005 OUTPUT TO UNIT RECORD, UNBLOCKING FORCED'
RECFMTS  TM    INRECFM,X'C0'      Q.RECFM=U
         BO    INISU              YES.
         SR    WR,WR              CODE FOR RECFM F
         TM    INRECFM,X'80'      Q.RECFM=F
         BO    INISF              YES.
         LA    WR,8               ELSE DEFAULT TO V
         B     INISF
INISU    LA    WR,16              CODE FOR RECFM U
         USEO                     PROCESS O/P RECFM
INISF    TM    OUTRECFM,X'C0'     Q.RECFM=U
         BO    OUTISU             YES.
         TM    OUTRECFM,X'80'     Q.RECFM=F
         BO    OUTISF             YES.
         LA    WR,24(0,WR)        ADD 24 IF RECFM V
         B     OUTISF
OUTISU   LA    WR,48(0,WR)        ADD 48 IF RECFM U
         SPACE 2
*
*        BEGIN COPY FROM SYSUT1 TO SYSUT2
*
OUTISF   STC   WR,CASE            INDICATE I/O CASE
         LA    WR,RTTAB(WR)       INDEX TO BRANCH PAIR
         MVC   INROUTE,0(WR)      PLANT INPUT GATE
         MVC   OUTROUTE,4(WR)     PLANT OUTPUT GATE
         NI    TRAP+1,X'0F'       OPEN UNLIKE CONCATENATION GATE
INROUTE  BAL   LR,*-*             INPUT GATE
TRAP     NOP   OM0I               B IF UNLIKE CONCATENATION
         AP    RECCOUNT,=P'1'     ADD ONE TO RECORD COUNTER
OUTROUTE BAL   LR,*-*             OUTPUT GATE
         B     INROUTE            CLOSE LOOP
         EJECT
***********************************************************************
*        INPUT ROUTINE #1
***********************************************************************
INPUT1   GET   (IR)               GET LOCATE MODE
         USEI
         LR    IRECPT,R1          COPY RECORD ADDRESS
         LH    ILRECL,DCBLRECL    AND ITS LENGTH
         BR    LR
         SPACE 3
***********************************************************************
*        INPUT ROUTINE #2
***********************************************************************
INPUT2   GET   (IR)               GET LOCATE MODE
         USEI
         LA    IRECPT,4(0,R1)     POINT AT DATA
         LH    ILRECL,DCBLRECL    GET LENGTH OF DATA AND PREFIX
         S     ILRECL,=F'4'       TRIM TO OMIT HEADER
         BR    LR
         EJECT
***********************************************************************
*        OUTPUT ROUTINE #1
***********************************************************************
OUTPUT1  CLI   CASE,24            Q.IS OUTPUT FORMAT F
         BL    FIXOUT             YES, DCB LRECL IS FIXED
         USEO
         STH   ILRECL,DCBLRECL    STORE OUTPUT LRECL
FIXOUT   PUT   (OR)               LOCATE BUFFER FOR OUTPUT
         LH    R15,DCBLRECL       GET OUTPUT AREA LENGTH
*
*        IRECPT        = ADDRESS OF INPUT AREA
*        ILRECL        = LENGTH OF INPUT AREA AND PAD BYTE
*        R14           = ADDRESS OF OUTPUT AREA
*        R15           = LENGTH OF OUTPUT AREA
*
MOVE     LR    R14,R1             COPY OUTPUT AREA ADDRESS
         ICM   ILRECL,8,=C' '     USE BLANK PAD CHARACTER
         MVCL  R14,IRECPT         COPY FROM INPUT TO OUTPUT
         BR    LR                 AND EXIT OUTPUT STAGE
         SPACE 3
***********************************************************************
*        OUTPUT ROUTINE #2
***********************************************************************
         USEO
OUTPUT2  LA    WR,4(0,ILRECL)     GET INPUT LENGTH PLUS 4
         STH   WR,DCBLRECL        STORE IN OUTPUT DCB
         PUT   (OR)               TAKE AN OUTPUT AREA
         STH   WR,0(0,R1)         PLANT LL
         SR    R0,R0
         STH   R0,2(0,R1)         PLANT 00
         LA    R1,4(0,R1)         POINT AT RECORD AREA
         LR    R15,ILRECL         LOAD OUTPUT LENGTH FOR MOVE
         B     MOVE               TRANSFER DATA PORTION
         EJECT
RTTAB    DS    0F
         JUMP  INPUT1,OUTPUT1     F TO F
         JUMP  INPUT2,OUTPUT1     V TO F
         JUMP  INPUT1,OUTPUT1     U TO F
*
         JUMP  INPUT1,OUTPUT2     F TO V
         JUMP  INPUT1,OUTPUT1     V TO V
         JUMP  INPUT1,OUTPUT2     U TO V
*
         JUMP  INPUT1,OUTPUT1     F TO U
         JUMP  INPUT2,OUTPUT1     V TO U
         JUMP  INPUT1,OUTPUT1     U TO U
*
         EJECT
*   PRINTER DCB OPEN EXIT ROUTINE
         USEP
PRNTEXIT NI    DCBRECFM,X'39'     CLEAR EXTRANEOUS BITS
         OI    DCBRECFM,X'44'     SET TO FORMAT VA
         LH    WR,DCBLRECL
         LTR   WR,WR              Q.LRECL SPECIFIED
         BNZ   PRBLKSI            YES, GO CHECK BLOCKSIZE
PRDEFLR  LA    WR,137
         STH   WR,DCBLRECL        INSERT DEFAULT LRECL
PRBLKSI  LH    SR,DCBBLKSI
         LTR   SR,SR              Q.BLOCKSIZE SPECIFIED
         BNZ   PRLRECK            YES.
         LA    SR,141
         STH   SR,DCBBLKSI        INSERT DEFAULT BLOCKSIZE
PRLRECK  CH    WR,=Y(125)         Q.LRECL LESS THAN MINIMUM
         BL    PRDEFLR            YES, USE DEFAULT
         LA    WR,4(0,WR)         COMPUTE MIN BLOCKSIZE
         CR    SR,WR              Q.IS BLOCKSIZE LARGE ENOUGH
         BNL   PRBLKOK            YES.
         LR    SR,WR              ELSE USE MINIMUM
PRBLKOK  STH   SR,DCBBLKSI
         BR    R14
         SPACE 3
*   SYSPRINT OUTPUT SUBROUTINE
PRINT    ST    R14,WORK           SAVE RETURN ADDRESS
POPEN    NOP   PRWTP
         PUT   (PR),(0)
         L     R14,WORK           RELOAD RETURN ADDRESS
         BR    R14
PRWTP    LR    R1,R0              COPY FOR WTO
         MVI   4(R1),C' '         BLANK OUT ASA CONTROL CHARACTER
         WTO   MF=(E,(1))
         L     R14,WORK
         BR    R14
*   SYSPRINT SYNAD ROUTINE
PRINTERR LR    SR,PR              SAVE DCB PTR
         ST    R14,ERRRET         SAVE SYNAD RETURN
         SYNADAF ACSMETH=QSAM
         MVC   5(L'SQM4-5,R1),SQM4+5  INSERT OUR HEADER INTO MESSAGE
         WTO   MF=(E,(1))         DISPLAY THE MESSAGE
         B     IOERR2
SQM4     PRT   'SEQ011 I/O ERROR ON SYSPRINT - EOJ',MF=L
         EJECT
*   INPUT DCB OPEN EXIT
         USEI
INEXIT   CLI   DCBKEYLE,0         IS KEYLEN = 0?
         BE    INKEYL
         NI    OM0I+1,X'0F'       KEYS NOT SUPPORTED
INKEYL   CLI   DCBBUFNO,0         Q.BUFFER COUNT EXPLICIT
         BNZ   IBUFNO             YES.
         MVI   DCBBUFNO,4         NO, GIVE IT 4 BUFFERS
IBUFNO   TM    DCBRECFM,X'C0'     Q.RECFM SPECIFIED
         BNZ   IRECFM             YES.
         TM    DCBOPTCD,X'08'     CHECK FOR ASCII TAPE (OPTCD Q)
         BZ    IRECFB             IF NOT, DEFAULT RECFM TO FB
         TM    DCBRECFM,X'20'     IS THE RECFM=D?
         BZ    IRECFB             NO, DEFAULT IT
         MVC   INRECFM,DCBRECFM   YES, SAVE IT AS V
         XI    INRECFM,X'60'
         B     IRECFMD            SKIP FB CODE
IRECFB   OI    DCBRECFM,X'90'     NO, DEFAULT TO FB
         NI    OM1+1,X'0F'        ACTIVATE MESSAGE 1
IRECFM   MVC   INRECFM,DCBRECFM   SAVE INPUT RECORD FORMAT
IRECFMD  OC    DCBBLKSI,DCBBLKSI  Q.BLOCKSIZE GIVEN
         BNZ   IBLKSI             YES.
         MVI   DCBBLKSI+1,80      NO, DEFAULT TO 80
         NI    OM2+1,X'0F'        ACTIVATE MESSAGE 2
IBLKSI   TM    DCBRECFM,X'48'     IS INPUT VS?
         BNO   ISPAND             NO.
         OI    DCBBFTEK,X'60'     YES, FORCE BFTEK=A TO GET RECORDS
ISPAND   NOP   SETSW              ONE TIME SWITCH
         OI    ISPAND+1,X'F0'     CLOSE GATE BEHIND US
         OI    DCBOFLGS,X'08'     SHOW WE ALLOW UNLIKE CONCATENATION
         BR    R14
SETSW    OI    TRAP+1,X'F0'       TURN ON RE-INITIALIZE TRAP
         BR    R14
         SPACE 5
*   INPUT DCB SYNAD ROUTINE
INERR    LR    SR,IR              COPY DCB ADDRESS
         ST    R14,ERRRET         SAVE RETURN ADDRESS
         SYNADAF ACSMETH=QSAM
         MVC   5(L'SQM5-5,R1),SQM5+5  INSERT OUR HEADER INTO MESSAGE
         B     IOERR1
SQM5     PRT   'SEQ012 I/O ERROR ON INPUT DATA SET',MF=L
         EJECT
*   OUTPUT DCB OPEN EXIT ROUTINE
         USEO
OUTEXIT  CLI   DCBKEYLE,0         IS KEYLEN = 0?
         BE    OUTKEYL
         NI    OM0O+1,X'0F'       KEYS NOT SUPPORTED
         BR    R14                SKIP REST OF EXIT
OUTKEYL  CLI   DCBBUFNO,0         Q.BUFFER COUNT EXPLICIT
         BNZ   OX1                YES.
         MVI   DCBBUFNO,4         NO, GIVE IT 4 BUFFERS
OX1      TM    DCBRECFM,X'C0'     Q.RECFM SPECIFIED
         BNZ   OX2                YES.
         TM    DCBOPTCD,X'08'     ASCII OUTPUT TAPE (OPTCD=Q)?
         BZ    OX1D               NO, COPY RECFM FROM INPUT
         TM    DCBRECFM,X'20'     YES, OUTPUT RECFM=D?
         BZ    OX1AD              NO, DEFAULT FROM INPUT
         MVC   OUTRECFM,DCBRECFM  YES, SAVE AS V FOR PROCESSING
         XI    OUTRECFM,X'60'
         B     OX1B               GO PROCESS BUFOFF
OX1AD    MVC   DCBRECFM(1),INRECFM     COPY OUTPUT RECFM FROM INPUT
         MVC   OUTRECFM,INRECFM
         TM    INRECFM,X'80'      IS INPUT V OR D?
         BNZ   OX2A               NO, CONTINUE
         XI    DCBRECFM,X'60'     YES, MAKE OUTPUT D
OX1B     CLI   DCBBUFOF,4         IS THE BUFOFF=4?
         BNE   OX2A               NO.
         OI    DCBUSASI,X'40'     YES, SET BUFOFF=L
         B     OX2A               AND SKIP NON-ASCII CODE
OX1D     MVC   DCBRECFM(1),INRECFM              ELSE COPY FROM INPUT
OX2      MVC   OUTRECFM,DCBRECFM  SAVE OUTPUT RECORD FORMAT
OX2A     OC    DCBBLKSI,DCBBLKSI  Q.BLOCK SIZE SPECIFIED
         BNZ   OX3                YES.
         MVC   DCBBLKSI,DCBBLKSI-IHADCB(IR)  ELSE COPY FROM INPUT
OX3      OC    DCBLRECL,DCBLRECL  Q.LRECL SPECIFIED
         BNZ   OX4                YES.
         OC    DCBLRECL,DCBLRECL-IHADCB(IR)  ELSE COPY FROM INPUT
         BZ    OX5                DON'T BLOCK IF LRECL=0
OX4      TM    DCBRECFM,X'40'     RECFM F?
         BNZ   OX5                NO, DON'T SET BLOCKING
         CLC   DCBLRECL,DCBBLKSI  LRECL ^= BLKSIZE?
         BE    OX5                NO.
         OI    DCBRECFM,X'10'     YES, MAKE SURE RECFM=B
OX5      TM    DCBDEVT,X'40'      Q.UNIT RECORD DEVICE
         BZ    OX7                NO, CHECK FOR SPANNING
         TM    DCBRECFM,X'10'     Q.RECORDS BLOCKED
         BCR   8,R14              NO, ALREADY UNBLOCKED
         NI    DCBRECFM,X'EF'     REMOVE BLOCKING
         LH    WR,DCBLRECL        LOAD SPECIFIED LRECL
         TM    DCBRECFM,X'80'     FIXED FORMAT?
         BNZ   OX6                YES, USE LRECL AS BLKSIZE
         LA    WR,4(,WR)          ADD 4 FOR V FORMAT
OX6      ST    WR,DCBBLKSI        FORCE UNBLOCKED
         NI    SYS2OP+1,X'0F'     SHOW UNBLOCKING FORCED
         BR    R14                RETURN TO OPEN
OX7      TM    DCBRECFM,X'48'     VS TYPE RECORDS?
         BCR   14,R14             NO.
         OI    DCBBFTEK,X'60'     YES, FORCE LOGICAL RECORD INTERFACE
         BR    R14                AND RETURN
         SPACE 3
*   OUTPUT DCB SYNAD ROUTINE
OUTERR   LR    SR,OR              COPY DCB ADDRESS
         ST    R14,ERRRET         SAVE RETURN ADDRESS
         SYNADAF ACSMETH=QSAM
         MVC   5(L'SQM6-5,R1),SQM6+5  INSERT OUR HEADER INTO MESSAGE
         B     IOERR1
SQM6     PRT   'SEQ013 I/O ERROR ON OUTPUT DATA SET - EOJ',MF=L
         EJECT
IN       DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,                        X
               SYNAD=INERR,EXLST=INEX,EODAD=EOF
OUT      DCB   DSORG=PS,MACRF=PL,DDNAME=SYSUT2,                        X
               SYNAD=OUTERR,EXLST=OTEX
PRINTDCB DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      X
               SYNAD=PRINTERR,EXLST=PREX
WORD     DS    D
INEX     DC    X'85',AL3(INEXIT)
OTEX     DC    X'85',AL3(OUTEXIT)
PREX     DC    X'85',AL3(PRNTEXIT)
CASE     DC    F'0'               JUMP CASE IN HIGH BYTE
SAVE     DS    18F
WORK     DS    F
ERRRET   DS    A
RC       DC    A(0)
INRECFM  DS    XL1                INPUT RECORD FORMAT
OUTRECFM DS    XL1                OUTPUT RECORD FORMAT
         LTORG
RECCOUNT DC    P'+000000000'
HEADING  DC    AL2(EH-HEADING,0)
         DC    C'1SEQ000 SEQUENTIAL DATA SET COPY UTILITY'
EH       EQU   *
         DS    0D
         DCBD  DSORG=QS,DEVD=DA
         END   SEQCOPY
