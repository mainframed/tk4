1
-
      The TSO functional accounting enhancement (the RUA11 family of sys
      and related programs) was developed to obtain better TSO response
      information than provided by other products and interfaces.
0     Note that at least MVS/SE2 is required for functional accounting t
      used.   Also  note that  unless you  have the  TSO Command  Packag
      TSO/E,  no one but  SPF and a few non-IBM products  use the functi
      accounting  interface.  Thus,   without one  of  these products,
      probably aren't interested, unless everyone runs under SPF,  or un
      you are willing to  do some work to add the  interface to vanilla
      There are two primary changes made:
0     (a)  Functional accounting is changed so that it is no longer requ
           to  have a  load  module containing  the  names of  "interest
           commands and subcommands.   Instead,  the  first 200 commands
           subcommands of any sort are recorded.
0     (b)  The fields in the  type 32 detail record that are  defined by
           to contain  SRB time,  number  of TPUTs  and number of  TGETs
           replaced by  elapsed time,   "quick" elapsed  time,  and  "qu
           command count respectively.   (A quick  command is defined as
           which completes without issuing a  TGET;  the total quick ela
           time  is the  total elapsed  time  for quick  invocations of
           command or subcommand.)
0     The implementation of  part (a)  above requires  a little elaborat
      The IEEMB846 module (which contains the interesting TSO command na
      is replaced  by a module which  contains 200 names beginning  with
      '0'  (zero)   character.    The module  which  accumulates  functi
      accounting data  is changed so that,   whenever it finds  a previo
      unknown command,  it  replaces the first '0' command in  the list
      the new command.  Thus, by altering the sample version of this mod
      you can increase  or decrease the maximum number  recorded,  or in
      some commands  at the front  which you want to  be sure to  catch,
      matter how many others may occur first.
0     The TSOSUMM program is provided to produce a response time report
      a batch of SMF data.   It is  written in PASCAL/VS;  if you don't
      PASCAL/VS,  it should not be that hard  to convert it to PL/I.   (
      you ask,  was it written in PASCAL  in the first place?   I'm glad
      asked  that  question.)    Sample  JCL for  running  TSOSUMM  is
      provided.
0     One optional input  to TSOSUMM is a "CMDIN" data  set,  which prov
      information on alias  command names,  and on translation  of the e
      character subcommand designators into  command-subcommand pairs.
      data in in free format, each card of the format
0          command×command.subcmd alias...
0     The sample  data set is  sorted in  descending order by  command n
      This results in a slight efficiency improvement, but is not requir
