++USERMOD (RJC12K1)
   /* ICSA MODIFICATION TO HASPCOMM TO ADD TOTAL RECORD COUNTS TO
      THE $DF COMMAND; ADD $XF FORM TO PROVIDE PSEUDO-$DJ OUTPUT
      LINES AS WELL FOR EVERY JOB COUNTED IN THE RECORD COUNT, USING
      ONLY THE RECORDS COUNTED FOR THAT FORM; BREAK THE OUTPUT LINES
      SO THAT ONLY 1 OUTPUT CLASS IS USED ON A LINE; AND OMIT THE
      WTR NAME OF (NONE) IF SO.

      LINES K2334750 TO K2334780 CONTAIN CODE WHICH CAN BE USED
      IF THE JTIP MOD FROM UICC IS ON YOUR SYSTEM.  THIS RECOGNIZES
      AN ADDITIONAL "FETCH" QUEUE.  REMOVE THE COMMENT SYMBOL IF
      YOU HAVE JTIP.                                           */.
++VER (Z038) FMID(EJE1102)
             PRE(AZ29819                                    /* IBM  */
                 RCB05A1                                    /* ICSA */).
++MACUPD (#ICSACOM) ASSEM(HASPCOMM,HASPDOC).
./ CHANGE NAME=#ICSACOM
COMIFLG1 DS    BL1                    ICSA COM FLAGS            RJC12K1
         SPACE 1                                                RJC12K1
COMI1X   EQU   B'10000000'            $X( ) COMMAND             RJC12K1
         SPACE 1                                                RJC12K1
++SRCUPD (HASPCOMM).
./ CHANGE NAME=HASPCOMM
         $COMTAB XF,HASPCJ1A,REDIR=$DF   EXTENDED $DF           RJC12K1
HASPCJ1A $COMGRUP XF,DF,OQ,PQ       MORE JOB QUEUE COMMANDS     RJC12K1
****************************************************************RJC12K1
*                                                              *RJC12K1
*        $ X F - EXTENDED DISPLAY $ D F                        *RJC12K1
*                                                              *RJC12K1
****************************************************************RJC12K1
CXF      OI    COMIFLG1,COMI1X      SET EXTENDED DISPLAY FLAG   RJC12K1
         MVI   COMVERB,C'D'         RESET COMMAND VERB          RJC12K1
*        GET SPACE FOR 100 PARTIAL JQE ENTRIES+RECORD COUNTS    RJC12K1
*        NUMBER OF ENTRIES BASED ON DF MAXIMUM 100 ENTRY LIMIT  RJC12K1
CXFGET   GETMAIN RU,LV=1602,RELATED=(CXFREE,'XF JQE TABLE')     RJC12K1
         ST    R1,CXFJQTBL          SAVE ADDRESS OF TABLE       RJC12K1
         MVI   COMPNTER,CDFRELJ+CDFHOLD MAKE DEFAULT ALL JOBS   RJC12K1
         MVI   CDFIFLG1,0           RESET CHECKLIST FLAGS       RJC12K1
         MVI   CDFSSTUP,C' '        BLANK OUT CHECKLIST AREA    RJC12K1
         MVC   CDFSSTUP+1(L'CDFSSTUP-1),CDFSSTUP                RJC12K1
         L     R0,4(,WD)            POINT TO NEXT OPERAND       RJC12K1
         SR    R0,R1                GET SIZE+1                  RJC12K1
         SH    R0,=H'4'             GET TEXT MACHINE COUNT      RJC12K1
         BM    CDFINVO              INVALID IF NEGATIVE         RJC12K1
         $CFSEL (B,CDFB),(C,CDFC),(D,CDFHA),(F,CDFF),(J,CDFJ),(O,CDFO),X
               (Q,CDFQ),(R,CDFR),(T,CDFT),(W,CDFW) SELECT OPRND RJC12K1
         CLI   2(R1),C'R'           THIS DISPLAY RELEASED ONLY? RJC12K1
         BE    CDFNSPEC             EQUIVALENT TO DEFAULT       RJC12K1
CDFB     OI    CDFIFLG1,CDFI1B      SET TO CHECK BURST          RJC12K1
         CH    R0,=H'1'             ONLY Y OR N ALLOWED         RJC12K1
         BNL   CDFINVO              IF LONGER, INVALID          RJC12K1
         CLI   2(R1),C'Y'           WAS 'Y' SPECIFIED?          RJC12K1
         BNE   CDFSETN              NO, TRY FOR 'N'             RJC12K1
         MVI   CDFSB,C'Y'           YES, INSERT INTO CHECKLIST  RJC12K1
         B     CDFNSPEC             AND PROCEED TO NEXT OPERAND RJC12K1
CDFSETN  CLI   2(R1),C'N'           WAS 'N' SPECIFIED?          RJC12K1
         BNE   CDFINVO              NO, INVALID OPERAND         RJC12K1
         MVI   CDFSB,C'N'           YES, INSERT INTO CHECKLIST  RJC12K1
         B     CDFNSPEC             AND PROCEED TO NEXT OPERAND RJC12K1
CDFF     OI    CDFIFLG1,CDFI1F      SET TO CHECK FORMS          RJC12K1
         CH    R0,=H'4'             NAMES ARE 4 CHARS OR LESS   RJC12K1
         BNL   CDFINVO              IF LONGER, INVALID          RJC12K1
         LR    R15,R0               FOR EXECUTE PURPOSES        RJC12K1
         EX    R15,CDFXF            MOVE INTO CHECKLIST         RJC12K1
         B     CDFNSPEC             PROCEED TO NEXT OPERAND     RJC12K1
CDFXF    MVC   CDFSF(*-*),2(R1)     **** EXECUTE ONLY ****      RJC12K1
CDFC     OI    CDFIFLG1,CDFI1C      SET TO CHECK CARRIAGE TAPE  RJC12K1
         CH    R0,=H'4'             NAMES ARE 4 CHARS OR LESS   RJC12K1
         BNL   CDFINVO              IF LONGER, INVALID          RJC12K1
         LR    R15,R0               FOR EXECUTE PURPOSES        RJC12K1
         EX    R15,CDFXC            MOVE INTO CHECKLIST         RJC12K1
         B     CDFNSPEC             PROCEED TO NEXT OPERAND     RJC12K1
CDFXC    MVC   CDFSC(*-*),2(R1)     **** EXECUTE ONLY ****      RJC12K1
CDFT     OI    CDFIFLG1,CDFI1T      SET TO CHECK TRAIN          RJC12K1
         CH    R0,=H'4'             NAMES ARE 4 CHARS OR LESS   RJC12K1
         BNL   CDFINVO              IF LONGER, INVALID          RJC12K1
         LR    R15,R0               FOR EXECUTE PURPOSES        RJC12K1
         EX    R15,CDFXT            MOVE INTO CHECKLIST         RJC12K1
         B     CDFNSPEC             PROCEED TO NEXT OPERAND     RJC12K1
CDFXT    MVC   CDFST(*-*),2(R1)     **** EXECUTE ONLY ****      RJC12K1
CDFW     OI    CDFIFLG1,CDFI1W      SET TO CHECK WRITER NAME    RJC12K1
         CH    R0,=H'8'             NAMES ARE 8 CHARS OR LESS   RJC12K1
         BNL   CDFINVO              IF LONGER, INVALID          RJC12K1
         LR    R15,R0               FOR EXECUTE PURPOSES        RJC12K1
         EX    R15,CDFXW            MOVE INTO CHECKLIST         RJC12K1
         B     CDFNSPEC             PROCEED TO NEXT OPERAND     RJC12K1
CDFXW    MVC   CDFSW(*-*),2(R1)     **** EXECUTE ONLY ****      RJC12K1
CDFO     OI    CDFIFLG1,CDFI1O      SET TO CHECK FLASH OVERLAY  RJC12K1
         CH    R0,=H'4'             NAMES ARE 4 CHARS OR LESS   RJC12K1
         BNL   CDFINVO              IF LONGER, INVALID          RJC12K1
         LR    R15,R0               FOR EXECUTE PURPOSES        RJC12K1
         EX    R15,CDFXO            MOVE INTO CHECKLIST         RJC12K1
         B     CDFNSPEC             PROCEED TO NEXT OPERAND     RJC12K1
CDFXO    MVC   CDFSO(*-*),2(R1)     **** EXECUTE ONLY ****      RJC12K1
CDFQ     OI    CDFIFLG1,CDFI1Q      SET TO USE ONLY THIS CLASS  RJC12K1
         CH    R0,=H'1'             ONLY 1 CLASS ALLOWED        RJC12K1
         BNL   CDFINVO              IF MORE, INVALID            RJC12K1
         L     R14,=A(CLJHLDTB)     CHECK FOR VALID CLASS       RJC12K1
         LA    R15,36               THERE ARE 36 CLASSES        RJC12K1
CDFQLP   CLC   0(1,R14),2(R1)       TRY                         RJC12K1
         BE    CDFXQ                  TO                        RJC12K1
         LA    R14,1(,R14)              FIND                    RJC12K1
         BCT   R15,CDFQLP                 CLASS IN VALID TABLE  RJC12K1
         B     CDFINVO              IF NOT THERE, INVALID       RJC12K1
CDFXQ    LA    R14,36               FIND                        RJC12K1
         SR    R14,R15                OFFSET                    RJC12K1
         SLL   R14,1                    INTO                    RJC12K1
         STC   R14,CDFSQ                  TABLE                 RJC12K1
         B     CDFNSPEC             PROCEED TO NEXT OPERAND     RJC12K1
         TM    CDFIFLG1,X'FF'       ARE WE LIMITING SETUPS?     RJC12K1
         BZ    CDFCCHOK             NO, USE ALL OF THEM         RJC12K1
         TM    CDFIFLG1,CDFI1B      CHECK BURST?                RJC12K1
         BZ    CDFCF                NO, TRY FORMS               RJC12K1
         TM    CDFCFLAG,$JOEBRST    BURST=YES?                  RJC12K1
         BZ    CDFCBN               NO, CHECK FOR NO            RJC12K1
         CLI   CDFSB,C'Y'           WAS 'Y' ASKED FOR?          RJC12K1
         BNE   CDFEJOA              NO, SKIP THIS ONE           RJC12K1
         B     CDFCF                YES, TRY FORMS              RJC12K1
CDFCBN   CLI   CDFSB,C'N'           WAS 'N' ASKED FOR?          RJC12K1
         BNE   CDFEJOA              NO, SKIP THIS ONE           RJC12K1
CDFCF    TM    CDFIFLG1,CDFI1F      ARE WE LIMITING FORMS?      RJC12K1
         BZ    CDFCC                NO, TRY CARRIAGE TAPE       RJC12K1
         CLC   CDFORMS,CDFSF        YES, CHECK FORMS SPEC.      RJC12K1
         BNE   CDFEJOA              SKIP IF NO MATCH            RJC12K1
CDFCC    TM    CDFIFLG1,CDFI1C      ARE WE LIMITING CARR. TAPE? RJC12K1
         BZ    CDFCT                NO, TRY PRINT TRAIN         RJC12K1
         CLC   CDFFCB,CDFSC         YES, CHECK CARR. TAPE SPEC. RJC12K1
         BNE   CDFEJOA              SKIP IF NO MATCH            RJC12K1
CDFCT    TM    CDFIFLG1,CDFI1T      ARE WE LIMITING TRAINS?     RJC12K1
         BZ    CDFCW                NO, TRY WRITERS             RJC12K1
         CLC   CDFUCS,CDFST         YES, CHECK TRAIN SPEC.      RJC12K1
         BNE   CDFEJOA              SKIP IF NO MATCH            RJC12K1
CDFCW    TM    CDFIFLG1,CDFI1W      ARE WE LIMITING WRITERS?    RJC12K1
         BZ    CDFCO                NO, TRY FLASH               RJC12K1
         CLC   CDFWTR,CDFSW         YES, CHECK WRITER NAME      RJC12K1
         BNE   CDFEJOA              SKIP IF NO MATCH            RJC12K1
CDFCO    TM    CDFIFLG1,CDFI1O      ARE WE LIMITING FLASH?      RJC12K1
         BZ    CDFCCHOK             NO, USE THIS ONE            RJC12K1
         CLC   CDFLASH,CDFSO        YES, CHECK FLASH SPEC.      RJC12K1
         BNE   CDFEJOA              SKIP IF NO MATCH            RJC12K1
CDFCCHOK NULL  ,                    REJOIN NORMAL CODE          RJC12K1
         MVC   CDFMB,=C'F=XXXX C=XXXX T=XXXX L=XXXXX ' BASE MSG RJC12K1
         SR    WD,WD                CLEAR LENGTH REGISTER       RJC12K1
         MVC   CDFMBW-2(2),=C'W='   INSERT WTR INDICATOR        RJC12K1
         LA    WD,L'CDFWTR+2        BUMP LENGTH POINTER         RJC12K1
SKIP120  LA    WD,CDFMB+L'CDFMB(WD) POINT TO NEXT MSG AREA      RJC12K1
         MVC   CXFMBSV,CDFMID       SAVE SETUP CHARACTERISTICS  RJC12K1
         TM    CDFIFLG1,CDFI1Q      ARE WE LIMITING TO ONE CLASSRJC12K1
         BZ    CDFCNQ               NO, PROCEED AS USUAL        RJC12K1
         IC    WB,CDFSQ             YES, SET THE CLASS OFFSET   RJC12K1
         B     CDFACLS              PROCESS CLASS               RJC12K1
CDFCNQ   NULL  ,                    REJOIN COMMON CODE          RJC12K1
         TM    CDFIFLG1,CDFI1Q      LIMITING TO ONE CLASS?      RJC12K1
         BO    CDFEJOE              YES, SKIP THE REST OF THEM  RJC12K1
         TM    COMIFLG1,COMI1X      EXTENDED FORM?              RJC12K1
         BZ    CXFCJQX              NO, DON'T CLEAR TABLE       RJC12K1
         L     R1,CXFJQTBL          GET ADDRESS OF TABLE        RJC12K1
         STH   R0,0(,R1)            SET ENTRY COUNTER TO ZERO   RJC12K1
CXFCJQX  XC    CDFRECCT,CDFRECCT    CLEAR RECORD COUNT          RJC12K1
         MVC   CDFMID(L'CXFMBSV),CXFMBSV REFRESH PRINT LINE     RJC12K1
         LR    WE,R14               SAVE FOR LATER USE          RJC12K1
         BL    CDFRECSM             GO COUNT AND INSERT IN TABLERJC12K1
         L     R0,CDFRECCT          GET TOTAL RECORDS           RJC12K1
         CVD   R0,COMDWORK          CONVERT TO DECIMAL          RJC12K1
         MVC   COMDWORK-4(8),=X'4020202020202120' EDIT MASK     RJC12K1
         ED    COMDWORK-4(8),COMDWORK+4  MAKE PRINTABLE         RJC12K1
         MVC   CDFMBL,COMDWORK-1    MOVE INTO PRINT LINE        RJC12K1
         C     R0,=F'99999'         100K OR MORE?               RJC12K1
         BNH   CXFNKCNT             NO, FINISHED HERE           RJC12K1
         MVC   CDFMBL(4),COMDWORK-3 YES, MOVE IN K LINES        RJC12K1
         MVI   CDFMBL+4,C'K'        FILL IN "K"                 RJC12K1
CXFNKCNT NULL  ,                    REJOIN NORMAL CODE          RJC12K1
*        THIS LINE DELETED BY ICSA                              RJC12K1
*        THIS LINE DELETED BY ICSA                              RJC12K1
         S     WD,=F'5'             BACK UP TO CLASS SLOT       RJC12K1
         TM    COMIFLG1,COMI1X      EXTENDED DISPLAY?           RJC12K1
         BZ    CXFPJQX              NO, REJOIN NORMAL CODE      RJC12K1
         L     WE,CXFJQTBL          GET ADDRESS OF TABLE        RJC12K1
         LH    WC,0(,WE)            GET NUMBER OF ENTRIES       RJC12K1
         LA    WE,2(,WE)            BUMP TO FIRST ENTRY         RJC12K1
         LTR   WC,WC                ARE THERE ANY ENTRIES       RJC12K1
         BNP   CXFPJQX              IF NONE, QUIT               RJC12K1
CXFPJQLP MVI   COMMAND,C' '         BLANK OUT                   RJC12K1
         MVC   COMMAND+1(35),COMMAND   IN USUAL MANNER          RJC12K1
         LH    R0,0(,WE)            GET JOBID                   RJC12K1
         CH    R0,=H'10000'         IS IT A JOB?                RJC12K1
         BNL   CXFPJQT              IF NOT TRY TSU OR STC       RJC12K1
         MVC   COMMAND(3),=C'JOB'   INSERT TYPE                 RJC12K1
         B     CXFPJQJ              AND CONTINUE                RJC12K1
CXFPJQT  SH    R0,=H'20000'         IS IT A TSU?                RJC12K1
         BL    CXFPJQS              NO, A STC                   RJC12K1
         MVC   COMMAND(3),=C'TSU'   YES, INSERT TYPE            RJC12K1
         B     CXFPJQJ                AND CONTINUE              RJC12K1
CXFPJQS  MVC   COMMAND(3),=C'STC'   MUST BE STC                 RJC12K1
         AH    R0,=H'10000'         READJUST BASE               RJC12K1
CXFPJQJ  $CFCVE ,                   CONVERT TO EBCDIC           RJC12K1
         MVC   COMMAND+3(5),COMDWORK  INSERT NUMBER             RJC12K1
         MVC   COMMAND+9(8),2(WE)   INSERT JOBNAME              RJC12K1
         MVC   COMMAND+18(5),=C'Q=PPU'  PRIME WITH QUEUE        RJC12K1
*        CLI   14(WE),$FETCH        IS IT IN FETCH QUEUE?       RJC12K1
*        BNE   CXFPJQO              NO, SOME OUTPUT QUEUE       RJC12K1
*        MVC   COMMAND+20(3),=C'FET'  ADJUST QUEUE TYPE         RJC12K1
*        B     CXFPJQL              AND GO INSERT LINES         RJC12K1
CXFPJQO  CLI   14(WE),$HARDCPY      IS IT IN PPU QUEUE?         RJC12K1
         BE    CXFPJQL              YES, THEN GO ADD LINE       RJC12K1
         MVC   COMMAND+20(3),=C'OUT' ADJUST QUEUE TYPE          RJC12K1
CXFPJQL  MVC   COMMAND+24(2),=C'L=' ADD LINES KEYWORD           RJC12K1
         L     R0,10(,WE)           GET RECORD COUNT            RJC12K1
         CVD   R0,COMDWORK          CONVERT TO DECIMAL          RJC12K1
         MVC   COMDWORK-4(8),=X'4020202020202120' EDIT MASK     RJC12K1
         ED    COMDWORK-4(8),COMDWORK+4  EDIT TO PRINTABLE      RJC12K1
         MVC   COMMAND+26(5),COMDWORK-1  MOVE TO PRINT LINE     RJC12K1
         C     R0,=F'99999'         100K OR MORE?               RJC12K1
         BNH   CXFPKCNT             NO, LEAVE ASIS              RJC12K1
         MVC   COMMAND+26(4),COMDWORK-3  MOVE THOUSANDS         RJC12K1
         MVI   COMMAND+30,C'K'        AND ADD "K"               RJC12K1
CXFPKCNT TM    15(WE),QUEHOLDA+QUEHOLD1  JOB HELD?              RJC12K1
         BZ    CXFPJQR              IF NOT, RELEASED            RJC12K1
         MVC   COMMAND+32(4),=C'HOLD'  ELSE INSERT FLAG         RJC12K1
CXFPJQR  $CWTO L=36                 SEND THE LINE               RJC12K1
         LA    WE,16(,WE)           BUMP TO NEXT ENTRY          RJC12K1
         BCT   WC,CXFPJQLP          END TRY NEXT ENTRY, IF ANY  RJC12K1
CXFPJQX  NULL  ,                    REJOIN IBM CODE             RJC12K1
*        THIS LINE DELETED BY ICSA                              RJC12K1
CDFNOJOP TM    COMIFLG1,COMI1X      EXTENDED DISPLAY?           RJC12K1
         BZ    CXFXJQX              NO, REJOIN NORMAL CODE      RJC12K1
         L     WF,CXFJQTBL          POINT TO TABLE              RJC12K1
CXFREE   FREEMAIN R,LV=1602,A=(WF),RELATED=(CXFGET,'XF JQE TABLE') 12K1
CXFXJQX  TM    CDFFLAGS,CDFJOEOK    DID WE FIND ANY?            RJC12K1
CDFRECSM L     R15,CDFRECCT         UPDATE                      RJC12K1
         A     R15,JOERECCT           CURRENT                   RJC12K1
         ST    R15,CDFRECCT             RECORD TOTAL            RJC12K1
         TM    COMIFLG1,COMI1X      EXTENDED DISPLAY?           RJC12K1
         BZ    CDFNXTJO             IF NOT, GET NEXT JOE        RJC12K1
         LR    R14,WE               RETRIEVE JQE POINTER        RJC12K1
         L     WE,CXFJQTBL          GET TABLE ADDRESS           RJC12K1
         LH    WC,0(,WE)              AND CURRENT ENTRY COUNT   RJC12K1
         LA    WE,2(,WE)            BUMP TO FIRST ENTRY         RJC12K1
         LTR   WC,WC                IS TABLE EMPTY?             RJC12K1
         BZ    CXFJQIF              YES, JUST INSERT ENTRY      RJC12K1
CXFJQILP CLC   0(2,WE),QUEJOBNO(R14)  IS JOB IN TABLE?          RJC12K1
         BNE   CXFNXTJQ             SKIP ENTRY IF NOT           RJC12K1
         L     R15,10(,WE)          UPDATE CURRENT              RJC12K1
         A     R15,JOERECCT           LINE COUNT                RJC12K1
         ST    R15,10(,WE)              AND STORE NEW COUNT     RJC12K1
         B     CDFNXTJO             THEN REJOIN NORMAL CODE     RJC12K1
CXFNXTJQ LA    WE,16(,WE)           BUMP TO NEXT ENTRY          RJC12K1
         BCT   WC,CXFJQILP          AND TRY AGAIN               RJC12K1
CXFJQIF  MVC   0(2,WE),QUEJOBNO(R14)  NEW ENTRY: INSERT JOBID   RJC12K1
         MVC   2(8,WE),QUEJNAME(R14) JOBNAME                    RJC12K1
         MVC   10(4,WE),JOERECCT     RECORD COUNT               RJC12K1
         MVC   14(1,WE),QUETYPE(R14) QUEUE TYPE                 RJC12K1
         MVC   15(1,WE),QUEFLAGS(R14) AND HOLD FLAGS            RJC12K1
         L     WE,CXFJQTBL          FIND BEGINNING AGAIN        RJC12K1
         LH    WC,0(,WE)            UPDATE                      RJC12K1
         LA    WC,1(,WC)              ENTRY                     RJC12K1
         STH   WC,0(,WE)                COUNT                   RJC12K1
         B     CDFNXTJO             REJOIN NORMAL CODE          RJC12K1
CDFMB    EQU   CDFMR1+10,29         BASE TEXT                   RJC12K1
CDFMBL   EQU   CDFMBT+7,5           RECORD COUNT                RJC12K1
CDFMBW   EQU   CDFMBL+8,8           WRITER NAME                 RJC12K1
CDFICSA  EQU   COMMAND+103          ICSA AREA IN COMMAND BUFFER RJC12K1
CDFIFLG1 EQU   CDFICSA,1            ICSA FLAGS FOR $ DF         RJC12K1
CDFI1B   EQU   B'10000000'          LIMIT BURST                 RJC12K1
CDFI1F   EQU   B'01000000'                FORMS                 RJC12K1
CDFI1C   EQU   B'00100000'                CARRIAGE TAPE         RJC12K1
CDFI1T   EQU   B'00010000'                PRINT TRAIN           RJC12K1
CDFI1W   EQU   B'00001000'                WRITER                RJC12K1
CDFI1O   EQU   B'00000100'                FLASH                 RJC12K1
CDFI1Q   EQU   B'00000001'                CLASS                 RJC12K1
CDFSSTUP EQU   CDFIFLG1+1,26        LIMIT CHECKLIST AREA        RJC12K1
CDFSB    EQU   CDFSSTUP,1           DESIRED BURST               RJC12K1
CDFSF    EQU   CDFSB+1,4                    FORMS               RJC12K1
CDFSC    EQU   CDFSF+4,4                    CARRIAGE TAPE       RJC12K1
CDFST    EQU   CDFSC+4,4                    TRAIN               RJC12K1
CDFSW    EQU   CDFST+4,8                    WRITER              RJC12K1
CDFSO    EQU   CDFSW+8,4                    FLASH               RJC12K1
CDFSQ    EQU   CDFSO+4,1                    CLASS               RJC12K1
CDFRECCT EQU   CDFSSTUP+26,4        CURRENT RECORD COUNT TOTAL  RJC12K1
CXFJQTBL EQU   CDFRECCT+4,4         ADDRESS OF JQE TABLE        RJC12K1
CXFMBSV  EQU   CXFJQTBL+4,36        REFRESH BUFFER FOR PRINTLINERJC12K1
