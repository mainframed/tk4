         TITLE 'LIENVPLI -- PL/I ENVIRONMENT INTERFACE ROUTINES'
         BANNER LIENVPLI
         SPACE
***********************************************************************
*                                                                     *
* MODULE NAME -                                                       *
*        LIENVPLI                                                     *
*                                                                     *
* FUNCTION -                                                          *
*        TO SERVE AS AN INTERFACE TO SERVICES OF THE PL/I ENVIRONMENT,*
*        WITH AS LITTLE DEPENDENCY AS PRACTICAL ON THE IMPLEMENTATION *
*        OF THAT ENVIRONMENT.                                         *
*                                                                     *
* ENVIRONMENT -                                                       *
*        PL/I (OPTIMIZER OR CHECKOUT)                                 *
*                                                                     *
* ENTRY POINTS AND FUNCTIONS -                                        *
*        LIENTER: OBTAIN DSA ON ROUTINE ENTRY                         *
*        LIELIFO: OBTAIN VDA (AUTOMATIC STORAGE EXTENSION)            *
*        LIEXIT:  RETURN FROM ROUTINE, FREEING DSA AND VDA'S          *
*        LIERETC: RETURN FROM ROUTINE, SETTING A RETURN CODE AND      *
*                 FREEING DSA AND VDA'S                               *
*        LIEGET:  OBTAIN NON-LIFO (BASED) STORAGE                     *
*        LIEFREE: FREE NON-LIFO (BASED) STORAGE                       *
*        LIENSUR: MAKE MEMORY AVAILABLE FOR GETMAIN                   *
*        LIERLSE: ALLOW RECLAMATION OF FREED MEMORY                   *
*        LIESIGN: SIGNAL A PL/I CONDITION (OR ISSUE STOP)             *
*        LIEGOTO: GOTO A PL/I LABEL VARIABLE                          *
*        LIEBLK:  INTERCEPT GOTO FROM CALLED ROUTINES                 *
*                                                                     *
* NOTE -                                                              *
*        THE SAME SERVICES AND ENTRY POINTS ARE PROVIDED IN AN        *
*        ASSEMBLER ENVIRONMENT BY THE LIENVASM MODULE. ROUTINES       *
*        WHICH REQUEST PL/I ENVIRONMENTAL SERVICES ONLY THROUGH       *
*        THESE INTERFACES CAN RUN EQUALLY WELL IN THE PSEUDO-PL/I     *
*        ENVIRONMENT IMPLEMENTED BY THAT MODULE.                      *
***********************************************************************
         EJECT
LIENVPLI CSECT
         SPACE
         REGISTER
         SPACE
RTCA     EQU   R12                PL/I TCA POINTER
RDSA     EQU   R13                PL/I DSA POINTER
         SPACE
         USING TCA,RTCA
         SPACE
         ENTRY LIENTER,LIELIFO,LIERETC,LIEXIT,LIEGET,LIEFREE
         ENTRY LIENSUR,LIERLSE,LIESIGN,LIEGOTO,LIEBLK
         TITLE 'LIENTER -- DSA ALLOCATION ROUTINE'
         BANNER LIENTER
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAME -                                                      *
*        LIENTER                                                      *
*                                                                     *
* FUNCTION -                                                          *
*        TO OBTAIN A DSA AND AUTOMATIC STORAGE FOR ITS CALLER.        *
*                                                                     *
* LINKAGE -                                                           *
*        BALR R11,R10, GENERATED BY THE LIENTRY MACRO, USED AS THE    *
*        THE FIRST STATEMENT OF THE CALLING ROUTINE.                  *
*                                                                     *
* PARAMETERS -                                                        *
*        THE SIZE OF THE DSA IS CONTAINED IN REGISTER 0.              *
*                                                                     *
* RETURN INFORMATION -                                                *
*        THE ADDRESS OF THE NEW DSA IS CONTAINED IN REGISTER 13.      *
***********************************************************************
         EJECT
         SPACE
***********************************************************************
*        USE THE STANDARD PL/I BLOCK ENTRY CODE TO ALLOCATE A DSA.    *
***********************************************************************
         SPACE
         USING LIENTER,R10
LIENTER  L     R1,OFNB(,RDSA)     NEXT AVAILABLE BYTE
         ALR   R0,R1              NEXT AVAIL. AFTER DSA
         CL    R0,TEOS            IS THERE ENOUGH?
         BNH   ENOUGH             YES.
         L     R15,TOVF           NO, CALL OVERFLOW ROUTINE
         BALR  R14,R15
ENOUGH   ST    R0,OFNB(,R1)       STORE NEW NEXT AVAIL.
         ST    RDSA,4(,R1)        CHAIN TOGETHER DSA'S
         MVC   OFLW(4,R1),OFLW(RDSA)   A(LIBRARY WORKSPACE)
         LA    RDSA,0(,R1)        RDSA-> NEW DSA (CLEAR HIGH-ORDER     *
                                  BYTE FOR GOTO-OUT-OF-BLOCK)
         MVC   OFF0(2,RDSA),=AL1(CDSA,0)    ESTABLISH BLOCK TYPE
         MVC   86(2,RDSA),=X'91C0'     ALLOW PLI ERROR HANDLING
         BR    R11                BACK TO THE CALLER
         SPACE
         DROP  R10
         TITLE 'LIELIFO -- GET LIFO STORAGE (VDA) ROUTINE'
         BANNER LIELIFO
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAME -                                                      *
*        LIELIFO                                                      *
*                                                                     *
* FUNCTION -                                                          *
*        TO OBTAIN WORK STORAGE WHICH WILL BE FREED ON EXIT FROM      *
*        THE CALLING ROUTINE.                                         *
*                                                                     *
* LINKAGE -                                                           *
*        CALL, GENERATED BY THE LIFO MACRO.                           *
*                                                                     *
* PARAMETERS -                                                        *
*        THE SIZE OF THE STORAGE REQUIRED IS PASSED IN REGISTER 0.    *
*                                                                     *
* RETURN INFORMATION -                                                *
*        THE ADDRESS OF THE ALLOCATED STORAGE IS RETURNED IN REGISTER *
*        1.                                                           *
***********************************************************************
         EJECT
***********************************************************************
*        USE THE STANDARD PL/I GET VDA CODE TO ALLOCATE LIFO STORAGE  *
*        (GOING TO A LIBRARY ROUTINE IF NO STORAGE IS AVAILABLE IN    *
*        THE ISA).                                                    *
***********************************************************************
         SPACE
         USING LIELIFO,R15
LIELIFO  L     R1,OFNB(,RDSA)     NEXT AVAILABLE BYTE
         ALR   R0,R1              END OF NEW AREA
         CL    R0,TEOS            WILL IT FIT?
         BNH   YESVDA             YES.
         ST    R14,OFNB(,RDSA)    SAVE RETURN ADDRESS
         L     R15,TOVV           GET VDA ROUTINE
         BALR  R14,R15            GO GET A VDA
         DROP  R15                OUR BASE IS GONE
         L     R14,OFNB(,RDSA)    RESTORE RETURN ADDR
YESVDA   ST    R0,OFNB(,RDSA)     UPDATE AVAIL. POINTER
         BR    R14                AND RETURN (ADDR. IN R1)
         TITLE 'LIERETC/LIEXIT -- PROCEDURE EXIT ROUTINES'
         BANNER LIEXIT
         SPACE
         BANNER LIERETC
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAMES -                                                     *
*        LIEXIT AND LIERETC                                           *
*                                                                     *
* FUNCTION -                                                          *
*        TO RETURN TO OUR CALLER'S CALLER, AFTER FREEING THE DSA AND  *
*        ANY VDA'S.                                                   *
*                                                                     *
* LINKAGE -                                                           *
*        ENTERED BY BR R14, GENERATED BY THE LIEXIT MACRO.            *
*                                                                     *
* PARAMETERS -                                                        *
*        FOR LIEXIT, NONE. FOR LIERETC, THE RETURN CODE IS PASSED IN  *
*        REGISTER 15.                                                 *
*                                                                     *
* RETURN INFORMATION -                                                *
*        RETURN IS NOT MADE TO THE CALLING ROUTINE, BUT TO ITS CALLER.*
*        LIERETC DOES RETURN THE REQUESTED RETURN CODE IN REGISTER 15.*
***********************************************************************
         EJECT
***********************************************************************
*        LIERETC AND LIEXIT MERELY EXECUTE A STANDARD RETURN SEQUENCE.*
*        THE DSA AND VDA'S ARE FREED LATER BY THE PL/I LIBRARY WHEN   *
*        MORE STORAGE IS REQUIRED.                                    *
***********************************************************************
         SPACE
         USING LIERETC,R14
LIERETC  L     RDSA,4(,RDSA)      FIND PREVIOUS DSA
         ST    R15,16(,RDSA)      STORE RETURN CODE
         B     GOHOME
         DROP  R14
         SPACE
LIEXIT   L     RDSA,4(,RDSA)      FIND PREVIOUS DSA
GOHOME   LM    R14,R11,12(RDSA)   RESTORE THE REGS
         BR    R14                AND RETURN
         TITLE 'LIEGET/LIEFREE -- NON-LIFO STORAGE GET AND FREE ROUTINE*
               S'
         BANNER LIEGET
         SPACE
         BANNER LIEFREE
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAMES -                                                     *
*        LIEGET AND LIEFREE                                           *
*                                                                     *
* FUNCTION -                                                          *
*        TO ALLOCATE AND FREE (RESPECTIVELY) NON-LIFO STORAGE, I.E.,  *
*        STORAGE WHOSE LIFETIME IS NOT THE SAME AS THAT OF THE        *
*        CALLING ROUTINE.                                             *
*                                                                     *
* LINKAGE -                                                           *
*        CALL, GENERATED BY THE LIGET AND LIFREE MACROS, RESPECTIVELY.*
*                                                                     *
* PARAMETERS -                                                        *
*        R0 CONTAINS THE AMOUNT OF STORAGE TO ALLOCATE OR FREE. FOR   *
*        LIEFREE, R1 CONTAINS THE AREA TO FREE.                       *
*                                                                     *
* RETURN INFORMATION -                                                *
*        FOR LIEGET, R1 WILL CONTAIN THE ADDRESS OF THE ALLOCATED     *
*        MEMORY. NO INFORMATION IS RETURNED FROM LIEFREE.             *
***********************************************************************
         EJECT
***********************************************************************
*        LIEGET AND LIEFREE MERELY PASS THEIR PARAMETERS ON TO THE    *
*        PL/I LIBRARY, WHICH DOES ALL THE WORK.                       *
***********************************************************************
         SPACE
LIEGET   L     R15,TGET           NON-LIFO GET ROUTINE
         BR    R15                CALL, RETURN VIA R14
         SPACE 10
LIEFREE  L     R15,TFRE           NON-LIFO FREE ROUTINE
         BR    R15                CALL, RETURN VIA R14
         TITLE 'LIENSUR/LIERLSE -- GETMAIN ASSURANCE/FREEMAIN RECOVERY *
               ROUTINES'
         BANNER LIENSUR
         SPACE
         BANNER LIERLSE
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAMES -                                                     *
*        LIENSUR AND LIERLSE                                          *
*                                                                     *
* FUNCTION -                                                          *
*        TO RESECTIVELY ENSURE THAT A GETMAIN WILL BE SUCCESSFUL AND  *
*        TO ALLOW THE RECLAMATION OF FREEMAINED MEMORY. THESE ROUTINES*
*        ARE EFFECTIVE ONLY IN A CHECKOUT COMPILER ENVIRONMENT.       *
*                                                                     *
* LINKAGE -                                                           *
*        CALL, GENERATED BY THE LINSURE AND LIRLSE MACROS,            *
*        RESPECTIVELY.                                                *
*                                                                     *
* PARAMETERS -                                                        *
*        FOR LIENSUR, REGISTER 0 CONTAINS THE AMOUNT OF MEMORY        *
*        TO BE MADE AVAILABLE. NO PARAMETERS ARE PASSED TO LIERLSE.   *
*                                                                     *
* RETURN INFORMATION -                                                *
*        NONE                                                         *
***********************************************************************
         EJECT
***********************************************************************
*        IN A CHECKOUT COMPILER ENVIRONMENT, CALL THE GETMAIN         *
*        ASSURANCE OR FREEMAIN RECOVERY ROUTINE. OTHERWISE, DO        *
*        NOTHING.                                                     *
***********************************************************************
         SPACE
LIENSUR  TM    TFB0,TTCK           CHECKOUT ENVIRONMENT?
         BCR   8,R14               NO, DO NOTHING
         L     R15,TGAR            YES, CALL GETMAIN ASSURANCE
         BR    R15                 RETURN VIA R14
         SPACE 10
LIERLSE  TM    TFB0,TTCK           CHECKER ACTIVE?
         BCR   8,R14               NO.
         L     R15,TFRR            YES, CALL FREEMAIN RECOVERY
         BR    R15                 AND RETURN VIA R14
         TITLE 'LIESIGN -- SIGNAL PL/I CONDITION ROUTINE'
         BANNER LIESIGN
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAME -                                                      *
*        LIESIGN                                                      *
*                                                                     *
* FUNCTION -                                                          *
*        TO SIGNAL A PL/I CONDITION (OR ISSUE A PL/I STOP, WHICH IS   *
*        REALLY A PECULIAR WAY OF SIGNALLING FINISH).                 *
*                                                                     *
* LINKAGE -                                                           *
*        CALL, GENERATED BY THE LISIGNAL MACRO.                       *
*                                                                     *
* PARAMETERS -                                                        *
*        REGISTER 1 ADDRESS A PL/I CONDITION WORD, WHICH DEFINES      *
*        THE CONDITION TO BE SIGNALLED.                               *
*                                                                     *
* RETURN INFORMATION -                                                *
*        NONE                                                         *
***********************************************************************
         EJECT
***********************************************************************
*        THE SIGNAL IS PERFORMED BY PASSING CONTROL TO THE PL/I       *
*        ERROR HANDLER.                                               *
***********************************************************************
         SPACE
LIESIGN  L     R15,TERR           ERROR HANDLER ADDRESS
         BR    R15                CALL, RETURN VIA R14
         TITLE 'LIEGOTO -- GOTO LABEL VARIABLE ROUTINE'
         BANNER LIEGOTO
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAME -                                                      *
*        LIEGOTO                                                      *
*                                                                     *
* FUNCTION -                                                          *
*        TO GO TO A PL/I LABEL IN A CALLING ROUTINE, TERMINATING      *
*        INTERVENING BLOCKS.                                          *
*                                                                     *
* LINKAGE -                                                           *
*        BR 14, GENERATED BY THE LIGOTO MACRO.                        *
*                                                                     *
* PARAMETERS -                                                        *
*        REGISTER 0 ADDRESSES THE TARGET ADDRESS AND REGISTER 1       *
*        CONTAINS THE DSA OF THE ROUTINE TO WHICH CONTROL IS TO BE    *
*        RETURNED.                                                    *
*                                                                     *
* RETURN INFORMATION -                                                *
*        NONE (CONTROL NEVER RETURNS)                                 *
***********************************************************************
         EJECT
***********************************************************************
*        CONTROL IS PASSED IMMEDIATELY TO THE PL/I NON-LOCAL GOTO     *
*        CODE IN THE TCA, AFTER COPYING THE PARANETERS TO THE PL/I    *
*        LIBRARY'S PREFERRED REGISTERS.                               *
***********************************************************************
         SPACE
LIEGOTO  LR    R14,R0             COPY PARMS TO PL/I REGS
         LR    R15,R1
         BAL   R1,TGTC            GO TO GOOB CODE IN TCA
         TITLE 'LIEBLK -- GOTO INTERCEPTION ROUTINE'
         BANNER LIEBLK
         SPACE
***********************************************************************
*                                                                     *
* ROUTINE NAME -                                                      *
*        LIEBLK                                                       *
*                                                                     *
* FUNCTION -                                                          *
*        TO REQUEST INTERCEPTION OF ANY ATTEMPT TO EXIT THE CALLING   *
*        ROUTINE VIA GOTO. IF SUCH A GOTO OCCURS, CONTROL RETURNS     *
*        TEMPORARILY TO THE CALLER OF OUR CALLER; ON RETURN THEREFROM,*
*        THE GOTO IS ALLOWED TO COMPLETE.                             *
*                                                                     *
* LINKAGE -                                                           *
*        CALL, GENERATED BY THE LIBLOCK MACRO.                        *
*                                                                     *
* PARAMETERS -                                                        *
*        REGISTER 1 MUST CONTAIN THE DSA OF THE INTERCEPTING ROUTINE  *
*        (I.E., OUR CALLER'S CALLER).                                 *
*                                                                     *
* RETURN INFORMATION -                                                *
*        NONE                                                         *
*                                                                     *
* NOTE -                                                              *
*        BYTE 1 OF THE CALLER'S DSA MUST BE SET IN ADVANCE TO X'08'.  *
*        IF A GOTO IS INTERCEPTED, THE BIT IS TURNED OFF TO INDICATE  *
*        THIS TO THE INTERCEPTING ROUTINE.                            *
***********************************************************************
         EJECT
***********************************************************************
*        LIEBLK IS CALLED TO BLOCK GOTO'S OUT OF A ROUTINE WHICH      *
*        MUST HAVE CONTROL BACK BEFORE IT IS TERMINATED (SUCH AS      *
*        AN EXIT ROUTINE). THE BLOCKAGE IS ACCOMPLISHED BY ALTERING   *
*        DSA'S SO THAT THE INTERCEPTOR APPEARS TO BE THE PL/I SORT    *
*        INTERFACE, WHICH NEEDS TO CATCH NON-LOCAL GOTO'S IN ORDER TO *
*        TERMINATE THE SORT.                                          *
***********************************************************************
         SPACE
         USING LIEBLK,R15
LIEBLK   ST    R1,4(,RDSA)        CHAIN DSA'S TOGETHER
         MVI   OFF0(RDSA),CDSA+CONB    PRETEND TO BE LIBRARY ROUTINE
         MVC   86(2,RDSA),=X'91C0'
         MVC   OFLW(8,RDSA),OFLW(R1)   COPY LWS INFO
         MVI   OFXQ(RDSA),2       FOR GOTO RECOVERY
         OI    TFB1,TGFS          SET SORT-EXIT-ACTIVE
         BR    R14                AND RETURN
         DROP  R15
         SPACE 5
         LTORG
         TITLE 'LIENVPLI -- PL/I CONTROL BLOCK MAPPINGS'
         PLIDSA ,                 DEFINE DSA OFFSETS
         SPACE
         PLITCA ,                 DEFINE USEFUL TCA FIELDS
         END
