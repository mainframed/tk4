PROC 0 TEST TBLDSN(TASKLIST)
/*TITLE SPTASKDR: DRIVER FOR ONLINE TASKS-LIST APPLICATION   (CSS)    */
/* AUTHOR:  JOE VEILLEUX                                              */
/* HISTORY: 27FEB85-JJV-1.00-ORIGINAL EXPERIMENTAL RELEASE            */
/*          28FEB85-JJV-1.01-ADD ACK FOR SORT, SAVE                   */
/*          08MAR85-JJV-1.02-ADD NOTEBOOK, CHANGE DEFAULT SORT ORDER  */
/*          18MAR85-JJV-1.03-CHANGE DEFAULT SORT ORDER AGAIN          */
CONTROL MAIN END(ENDO) NOMSG
IF &TEST EQ TEST THEN CONTROL LIST SYMLIST CONLIST MSG
ISPEXEC VGET (TASKSRTF) PROFILE
IF &LASTCC EQ 8 OR &TASKSRTF EQ THEN SET &TASKSRTF = &STR(**UNKNOWN**)
ISPEXEC VGET (TASKNDSN) PROFILE
IF &LASTCC EQ 8 OR &TASKNDSN EQ THEN SET &TASKNDSN = &STR(**NOT SET**)
ISPEXEC TBOPEN TASKLIST WRITE LIBRARY(ISPTABL) SHARE
IF &LASTCC EQ 8 THEN DO
  ISPEXEC TBCREATE TASKLIST WRITE LIBRARY(ISPTABL) SHARE +
    NAMES(CATEGORY TASK PRIORITY TARGDATE TARGSORT HOURS STATUS)
  IF &LASTCC NE 0 THEN DO
    ISPEXEC SETMSG MSG(TASK001S)
    EXIT
    ENDO
  ISPEXEC SETMSG MSG(TASK001T)
  ISPEXEC TBSORT TASKLIST +
    FIELDS(STATUS,C,D PRIORITY,N,A HOURS,N,D TARGSORT,N,A)
  SET &TASKSRTF = &STR(STATUS(D) PRIORITY HOURS(D) DATE)
  ISPEXEC VPUT (TASKSRTF) PROFILE
  ENDO
/* SET FLAG TO DELETE "PRINT" DATASET ON EXIT */
SET &PRTDEL =
SET &RC = 0
SET &ZTDTOP = 0
SET &UPDTFLAG =
/* DISPLAY THE TABLE FOR UPDATE UNTIL "END" OR "CANCEL" */
DO WHILE 1=1
  IF &RC EQ 4 THEN ISPEXEC TBDISPL TASKLIST POSITION(CRP)
  ELSE DO
    /* REPOSITION THE TABLE AS THE USER LAST SAW IT */
    ISPEXEC TBTOP   TASKLIST
    ISPEXEC TBSKIP  TASKLIST NUMBER(&ZTDTOP)
    /* HONOR A PENDING SCROLL REQUEST (IF ANY) */
    ISPEXEC VGET (ZVERB ZSCROLLN)
    IF &ZVERB EQ UP THEN ISPEXEC TBSKIP TASKLIST NUMBER(-&ZSCROLLN)
    ELSE IF &ZVERB EQ DOWN THEN ISPEXEC TBSKIP TASKLIST +
      NUMBER(&ZSCROLLN)
    /* NOW REDISPLAY THE TABLE */
    ISPEXEC TBDISPL TASKLIST PANEL(TASKTBD) POSITION(CRP)
    ENDO
  SET &RC = &LASTCC
  IF &CMD EQ CANCEL OR &RC GT 4 THEN GOTO LOOPEXIT /* EXIT LOOP */
  ELSE IF &CMD EQ SORT THEN DO
    IF &SF1 EQ THEN DO
      SET &SF1 = STATUS
      SET &SF2 = PRIORITY
      SET &SF3 = HOURS
      SET &SF4 = DATE
      SET &SF5 =
      ENDO
    SET &SORTFLDS =
    SET &TASKSRTF =
    SET &I = 1
    DO WHILE &I LT 6
      SET &SF = SF&I
      SET &S = &&&SF
      IF &S EQ CATEGORY THEN DO
        SET &SORTFLDS = &STR(&SORTFLDS CATEGORY,C,A)
        SET &TASKSRTF = &STR(&TASKSRTF CATEGORY)
        ENDO
      ELSE IF &S EQ PRIORITY THEN DO
        SET &SORTFLDS = &STR(&SORTFLDS PRIORITY,N,A)
        SET &TASKSRTF = &STR(&TASKSRTF PRIORITY)
        ENDO
      ELSE IF &S EQ DATE THEN DO
        SET &SORTFLDS = &STR(&SORTFLDS TARGSORT,N,A)
        SET &TASKSRTF = &STR(&TASKSRTF DATE)
        ENDO
      ELSE IF &S EQ HOURS THEN DO
        SET &SORTFLDS = &STR(&SORTFLDS HOURS,N,D)
        SET &TASKSRTF = &STR(&TASKSRTF HOURS(D))
        ENDO
      ELSE IF &S EQ STATUS THEN DO
        SET &SORTFLDS = &STR(&SORTFLDS STATUS,C,D)
        SET &TASKSRTF = &STR(&TASKSRTF STATUS(D))
        ENDO
      SET &I = &I + 1
      ENDO
    ISPEXEC VPUT (TASKSRTF) PROFILE
    ISPEXEC TBSORT TASKLIST FIELDS(&SORTFLDS)
    ISPEXEC SETMSG MSG(TASK005R)
    ENDO
  ELSE IF &CMD EQ SAVE THEN DO
    ISPEXEC TBSAVE TASKLIST REPLCOPY PAD(15) LIBRARY(ISPTABL)
    SET &UPDTFLAG =
    ISPEXEC SETMSG MSG(TASK005S)
    ENDO
  ELSE IF &CMD EQ INPUT THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    DO WHILE &INPN GE 1
      ISPEXEC TBVCLEAR TASKLIST
      ISPEXEC DISPLAY PANEL(TASKUPD)
      IF &LASTCC EQ 0 THEN DO
        ISPEXEC TBADD TASKLIST ORDER
        SET &UPDTFLAG = YES
        ENDO
      SET &INPN = &INPN-1
      ENDO
    ISPEXEC CONTROL DISPLAY RESTORE
    ENDO
  ELSE IF &CMD EQ NOTEBOOK THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    IF &NBDSN EQ THEN DO /* EDIT NOTEBOOK DATASET */
      ISPEXEC VGET (TASKNDSN) PROFILE
      IF &LASTCC NE 0 OR &TASKNDSN EQ THEN +
        ISPEXEC DISPLAY PANEL(TASKNDSN)
      IF &LASTCC EQ 0 THEN DO
        ISPEXEC VPUT (TASKNDSN) PROFILE
        ERROR DO
          ERROR DO
            ISPEXEC SETMSG MSG(TASK006E)
            GOTO SKPNBALC
            ENDO
          ATTR NBATTR RECFM(V B) LRECL(80) BLKSIZE(6233)
          ALLOC F(N) DSN(&TASKNDSN($TASK$)) NEW REUSE +
            SP(10 10) TRACKS DIR(5) USING(NBATTR)
          FREE ATTR(NBATTR)
          ERROR OFF
          ENDO
        ALLOC F(N) DSN(&TASKNDSN) SHR REUSE
        SKPNBALC: ERROR OFF
        FREE F(N)
        ERROR OFF
        ISPEXEC CONTROL ERRORS RETURN
        ISPEXEC EDIT DATASET(&TASKNDSN)
        IF &LASTCC GT 4 THEN ISPEXEC SETMSG MSG(TASK006T)
        ISPEXEC CONTROL ERRORS CANCEL
        ENDO
      ENDO
    ELSE DO
      SET &TASKNDSN = &NBDSN
      ISPEXEC VPUT (TASKNDSN) PROFILE
      ENDO
    ISPEXEC CONTROL DISPLAY RESTORE
    ENDO
  ELSE IF &CMD EQ PRT THEN DO
    ERROR DO
      ERROR OFF
      FREE ATTR(VBA)
      ATTR VBA RECFM(V B A) LRECL(137) BLKSIZE(6233) DSORG(PS)
      ALLOC F(ISPFILE) DSN(TASKTEMP.LISTING) REUSE +
        USING(VBA) SP(1 1) TRACKS
      SET &PRTDEL = DELETE
      ENDO
    ALLOC F(ISPFILE) DSN(TASKTEMP.LISTING) OLD REUSE
    ERROR OFF
    ISPEXEC SELECT PGM(X1A100)
    ISPEXEC FTOPEN
    ISPEXEC FTINCL TASKPRT
    ISPEXEC FTCLOSE
    IF &PRTDEST EQ THEN +
      PRINTO TASKTEMP.LISTING UCS(GO12) NOHEADING NOMSG
    ELSE PRINTO TASKTEMP.LISTING NOHEADING NOMSG DEST(&PRTDEST)
    ISPEXEC SETMSG MSG(TASK003P)
    ENDO
  ELSE IF &ZTDSELS GE 1 THEN DO
    IF &ACT EQ D THEN -
      DO WHILE &N GE 1
        ISPEXEC TBDELETE TASKLIST
        ISPEXEC TBSKIP TASKLIST
        /* CHECK RETURN CODE TO GUARD AGAINST DELETING TOO MANY */
        IF &LASTCC NE 0 THEN SET &N = 0
        ELSE SET &N = &N-1
        SET &UPDTFLAG = YES
        ENDO
    ELSE IF &ACT EQ R THEN -
      DO WHILE &N GE 1
        ISPEXEC TBADD TASKLIST ORDER
        SET &N = &N-1
        SET &UPDTFLAG = YES
        ENDO
    ELSE IF &ACT EQ U THEN DO
      ISPEXEC CONTROL DISPLAY SAVE
      ISPEXEC DISPLAY PANEL(TASKUPD)
      IF &LASTCC EQ 0 THEN DO
        ISPEXEC TBPUT TASKLIST ORDER /* RESAVE ROW IN TABLE */
        SET &UPDTFLAG = YES
        ENDO
      ISPEXEC CONTROL DISPLAY RESTORE
      ENDO
    ELSE IF &ACT EQ N THEN DO
      ISPEXEC CONTROL DISPLAY SAVE
      ISPEXEC VGET (TASKNDSN) PROFILE
      IF &LASTCC NE 0 OR &TASKNDSN EQ THEN -
        ISPEXEC DISPLAY PANEL(TASKNDSN)
      IF &LASTCC EQ 0 THEN DO
        ISPEXEC VPUT (TASKNDSN) PROFILE
        ERROR DO
          ERROR DO
            ISPEXEC SETMSG MSG(TASK006E)
            GOTO SKPNALC
            ENDO
          ATTR NBATTR RECFM(V B) LRECL(80) BLKSIZE(6233)
          ALLOC F(N) DSN(&TASKNDSN) NEW REUSE +
            SP(10 10) TRACKS DIR(5) USING(NBATTR)
          FREE ATTR(NBATTR)
          ERROR OFF
          ENDO
        ALLOC F(N) DSN(&TASKNDSN) SHR
        SKPNALC: ERROR OFF
        FREE F(N)
        ERROR OFF
        ISPEXEC EDIT DATASET(&TASKNDSN(&CATEGORY))
        IF &LASTCC EQ 0 THEN ISPEXEC SETMSG MSG(TASK006S)
        ELSE ISPEXEC SETMSG MSG(TASK006N)
        ENDO
      ISPEXEC CONTROL DISPLAY RESTORE
      ENDO
    ENDO
  ENDO
LOOPEXIT: -
FREE F(ISPFILE) ATTR(VBA) &PRTDEL
IF &CMD EQ CANCEL THEN DO
  ISPEXEC TBEND TASKLIST
  ISPEXEC SETMSG MSG(TASK002C)
  ENDO
ELSE IF &UPDTFLAG EQ THEN DO
  ISPEXEC TBEND TASKLIST
  ISPEXEC SETMSG MSG(TASK002N)
  ENDO
ELSE DO
  ISPEXEC TBCLOSE TASKLIST REPLCOPY PAD(15) LIBRARY(ISPTABL)
  ISPEXEC SETMSG MSG(TASK002S)
  ENDO
