TSCALL   TITLE 'INVOKE LNKLST/JOBLIB PROGRAMS FROM TSO WITHOUT CALL'
*
******** ***************************** *********************** *******
***      SYNTAX: TSCALL PROGRAM 'PARMS'
***      ATTRIBUTES: RENT RUSE REFR
***      IF A "TASKLIB" DD IS PRESENT, IT IS USED AS A TASKLIB.
******** ***************************** *********************** *******
*
TSCALL   @ENT  R12,(0,DSALEN,C),DSA=YES
         LR    R10,R1
         USING CPPL,R10                SAVE CP PARM LIST
*
**       INIT
*
         LA    R1,DSAPARML             SETUP CALLEE "O/S" PARM
         ST    R1,DSAPARM@
         OI    DSAPARM@,X'80'
*
         MVC   DSAPUPT,CPPLUPT         GIVE PARSE ADDRS OF UPT
         MVC   DSAPECT,CPPLECT          " ECT
         MVC   DSAPPCL,=V(TSCALPCL)    PARSE LIST
         LA    R1,DSAWANS
         ST    R1,DSAPANS               " ANSWER AREA POINTER
         MVC   DSAPCBUF,CPPLCBUF        " CBUF
         LA    R1,DSAWECB
         ST    R1,DSAPECB               " ECB
         LA    R1,DSAPUPT              PARSE LIST
         CALLTSSR EP=IKJPARS           GO PARSE
         LTR   R15,R15                 PROBLEMS?
         BNZ   PARSEERX                YES-GET OUT
         ICM   R9,15,DSAWANS           PUT PARSE ANSWER ADDRS IN R9
         BZ    PARSEERX                NO-FORGET IT
         USING IKJPARMD,R9             TELL ASM
*
**       COPY PARM DATA FROM TSO TO MY PARM AREA
*
         LH    R2,PARM+4               PASS CALLERS PARM L'
         STH   R2,DSAPARML             SAVE AS O/S PARM L'
         LTR   R2,R2                   NONE?
         BZ    NOPARM
         BCTR  R2,R0
         L     R1,PARM
MVEPARM  MVC   DSAPARMA(0),0(R1)       MOVE 1 BYTE
         EX    R2,MVEPARM              THEN EXECUTE WITH RIGHT L
NOPARM   DS    0H
*
**       COPY PROGRAM NAME
*
         MVC   DSANAME,=CL8' '         SET W/ BLANKS
         L     R1,MEMBER           PT TO NAME OF UTILITY WANTED
         LH    R2,MEMBER+4         PUT LENGTH IN R2 FOR CLC
         BCTR  R2,R0
MVC      MVC   DSANAME(0),0(R1)              SAVE NAME
         EX    R2,MVC                        SAVE 8CHAR NAME
         OC    DSANAME,=CL8' '         PAD W/ BLANKS
*
         DROP  R9
         IKJRLSA DSAWANS               RELEASE PARSE STOR
*
         MVC   DSAATTS(DSAATTL),SSAATTS COPY MODEL TO WORK
         NI    DSAATTS+8,255-X'02'     NO TASKLIB YET
*
**       SEE IF TASKLIB SPECIFIED
*
         L     R5,16                   CVT
         L     R5,0(,R5)               CVTTCBP TCB WORDS
         L     R5,4(,R5)               CURRENT TCB
         L     R5,12(,R5)              TCBTIO (TIOT)
         LA    R5,24(R5)               GET 1ST DDNAME
         XR    R6,R6                   CLEAR WORK
DDLOOP   EQU   *                       SCAN TIOT
         CLC   0(4,R5),=F'0'           END?
         BE    NOTASKLB                YES-NO TASKLIB
         CLC   4(8,R5),=CL8'TASKLIB'   MATCH?
         BE    TASKLIB                 YES-OPEN IT
         IC    R6,0(R5)                NO-TRY NEXT ENTRY
         AR    R5,R6                      "
         B     DDLOOP                  LOOP
TASKLIB  DS    0H
         TPUT  TASKTPUT,L'TASKTPUT     INFORM CALLER
         OI    DSAATTS+8,X'02'         SHOW TASKLIB IN ATT LIST
         MVC   DSATASKS(SSATASKL),SSATASKS COPY MODEL TO WORK
         XC    DSAWF,DSAWF             CREATE OPEN LIST
         MVI   DSAWF,X'80'             "
         LA    R2,DSATASK              GET WORK DCB
         STCM  R2,7,DSAATT+49          ADD TASKLIB DCB
         OPEN  ((R2),INPUT),MF=(E,DSAWF) OPEN TASKLIB
NOTASKLB DS    0H
*                                                              25JUN84
**       SEE IF IN LPA                                         25JUN84
*                                                              25JUN84
         L     R2,CVTPTR               CVT ADDR
         L     R2,CVTQLPAQ-CVT(0,R2)   LPA CDE(+188N)
         L     R2,0(0,R2)              1ST CDE
         USING CDENTRY,R2                                      25JUN84
CDECHK   CLC   DSANAME,CDNAME          MATCH?
         BE    DOATTACH                YES-GO
         ICM   R2,7,CDCHAIN            NEXT CDE
         BNZ   CDECHK                  NO, GO CHECK NEXT
         DROP  R2                                              25JUN84
*                                                              25JUN84
**       LPDE                                                  25JUN84
*                                                              25JUN84
         L     R2,CVTPTR               CVT
         L     R2,CVTLPDIA-CVT(R2)     LPDE CHAIN(+360N)
         USING LPDE,R2                                         25JUN84
LPDECHK  DS    0H                      END?
         CLI   LPDENAME,X'FF'          END?
         BE    LPDEEND                 NOT FOUND-TRY BLDL
         CLC   DSANAME,LPDENAME        MATCH
         BE    LPDEHIT                 YES-DO ATTACH
         LA    R2,40(0,R2)             NEXT LPDE(NO MAC NAME)
         B     LPDECHK                 CHECK NEXT
LPDEHIT  DS    0H                      LAST CHANCE             25JUN84
         B     DOATTACH
         DROP  R2                                              25JUN84
LPDEEND  DS    0H                      LAST CHANCE             25JUN84
*
**             SETUP - BLDL
*
         MVC   DSABFF,=H'1'        1 ENTRY
         MVC   DSABLL,=AL2(DSABEND-DSABNAME) ENTRY LENGTH
         MVC   DSABNAME,DSANAME
         ICM   R2,7,DSAATT+49          SEE IF TASKLIB
         BZ    DOBLDL
         L     R2,CVTPTR               NO-USE LINKLIB DCB
         L     R2,CVTLINK-CVT(R2)      LINKLIB DCB
         LA    R2,0                    NO-USE TASK LIST
DOBLDL   DS    0H
         LA    R3,DSABLDL
         BLDL  (R2),(R3)               LOCATE IT
         LTR   R15,R15                 FOUND??
         BZ    DOATTACH                NO-JUST SAY NOT FOUND
         ST    R15,DSAECB              SET RETURN CODE
         TPUT  BLDLERR,L'BLDLERR
         B     DOCLOSE                 SEE IF TASKLIB TO CLOSE
DOATTACH DS    0H
*
**             ATTACH THE PROGRAM
*
         LA    R1,DSAPARM@             O/S PARM
         LA    R5,DSAECB               TASK ECB
         LA    R3,DSANAME              EPLOC NAME
         ATTACH EPLOC=(R3),ECB=(R5),SF=(E,DSAATT)
         ST    R1,DSATCB               SAVE TCB ADDR
         WAIT  1,ECB=DSAECB            WAIT
         DETACH DSATCB                 DETACH EM
DOCLOSE  DS    0H
         ICM   R1,7,DSAATT+49          SEE IF TASKLIB
         BZ    TERME                   NO-RETURN
         CLOSE (R1),MF=(E,DSAWF)       CLOSE TASKLIB
         B     TERME
TERME    DS    0H                      RETURN W/ UTILITY RC
         XR    R15,R15
         ICM   R15,7,DSAECB+1
TERMEX   DS    0H
         @RET  EQ
PARSEERX DS    0H
         TPUT  PARSERR,L'PARSERR   YES-GIVE IT UP
         LA    R15,12                  SEVERE ERROR
         B     TERMEX
PARSERR  DC    C'TSCALL - PARSE ENDED WITH ERROR'
TASKTPUT DC    C'TSCALL - TASKLIB BEING HONORED'
BLDLERR  DC    C'TSCALL - PROGRAM NOT FOUND IN SYSTEM'
         PUSH  PRINT
         PRINT NOGEN
SSATASKS DS    0D                      START OF TASKLIB DCB
SSATASK  DCB   DDNAME=TASKLIB,DSORG=PO,MACRF=R
SSATASKL EQU   *-SSATASKS              LENGTH
SSAATTS  DS    0D                      START OF ATTACH LIST
SSAATT   ATTACH EPLOC=*-*,ECB=*-*,TASKLIB=*-*,SZERO=NO,SF=L
SSAATTL  EQU   *-SSAATTS               LENGTH
         POP   PRINT
         LTORG ,
******** ***** *********************** PARSE
TSCALPCL IKJPARM
MEMBER   IKJIDENT 'STRING',MAXLNTH=8,PROMPT='UTILITY NAME',    XXXXXXXXX
               OTHER=ALPHANUM,FIRST=ALPHA
PARM     IKJPOSIT QSTRING
         IKJENDP
******** ***** *********************** D S A
DSA      DSECT
DSAWF    DS    F                       WORK WORD
DSANAME  DC    CL8' '                  PROGRAM TO ATTACH
*
DSAPARM@ DC    AL1(128),AL3(0)         PARM PTR
DSAPARML DC    H'0'                    PARM LENGTH
DSAPARMA DC    CL100' '                PARM
*
DSAECB   DC    F'0'                    TASK ECB
DSATCB   DS    F                       TASK TCB
*
DSATASKS DS    0D                      START OF TASKLIB DCB
DSATASK  DCB   DDNAME=TASKLIB,DSORG=PO,MACRF=R
DSATASKL EQU   *-DSATASKS              LENGTH
*
DSAATTS  DS    0D                      START OF ATTACH LIST
DSAATT   ATTACH EPLOC=*-*,ECB=*-*,TASKLIB=*-*,SZERO=NO,SF=L
DSAATTL  EQU   *-DSAATTS               LENGTH
*
*                                      PARSE PARM LIST
DSAPUPT  DC    A(0)                    UPT
DSAPECT  DC    A(0)                    ECT
DSAPECB  DC    A(DSAWECB)              ECB
DSAPPCL  DC    A(*-*)                  TSCALPCL
DSAPANS  DC    A(DSAWANS)              ANS
DSAPCBUF DC    A(0)
DSAPUWA  DC    A(0)
DSAWECB  DC    A(0)
DSAWANS  DC    A(0)
         DS    0D
*        BLDL
DSABLDL  DS    0F
DSABFF   DS    H                   # ENTRIES
DSABLL   DS    H                   ENTRY LENGTH
DSABNAME DS    CL8                 NAME
DSABTTR  DS    XL3                 TTR
DSABK    DS    X
DSABZ    DS    X
DSABC    DS    X
DSABDATA DS    XL100               DATA
DSABATR1 EQU   DSABNAME+22         ATR1
DSABEND  EQU   *                   LEN
DSALEN   EQU   *-DSA
**                                     DSECTS
         PRINT NOGEN
         IKJCPPL ,                     CPPL
         IKJPSCB ,                     PSCB
         IHACDE  ,                     CDE
         IHALPDE ,                     LPDE
         CVT   DSECT=YES
         END
