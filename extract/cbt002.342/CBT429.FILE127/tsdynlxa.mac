*          DATA SET CBT910     AT LEVEL 002 AS OF 09/21/83
***********************************************************************
***********************************************************************
*******             C. B. T.         8/83               LMB-CBT *******
*******                                                         *******
*******                                                         *******
******* UPDATED WITH UCB CODING CONVENTIONS FOR X-A         CBT *******
******* THIS CODE SHOULD RUN UNDER MVS SP AND X-A           CBT *******
*******                                                     CBT *******
******* CONVERTED TO RUN UN-AUTHORIZED                           CJH **
******* THIS MODULE HAS BEEN CONVERTED TO PUTLINE/GETLINE.  CBT *******
***********************************************************************
CBT910   CSECT
CBT910   AMODE 31
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
EDTLUVSP EQU   X'000'
LUVENTNO EQU   X'000'
LUVENTLN EQU   X'004'
LUVENTRY EQU   X'008'
LUVUNAME EQU   X'000'
LUVVALUE EQU   X'008'
         EJECT
         USING *,R15
         BC    15,PROLOG
         DC    CL8'CBT910  '       MODULE NAME
         DC    CL8'&SYSDATE'      DATE MODULE COMPILED
         DC    CL8'&SYSTIME'      TIME MODULE COMPILED
         DROP  15
PROLOG   EQU   *
         STM   R14,R12,12(R13)    SAVE REGS
         LR    R11,R15            SET UP BASE REG
         USING CBT910,R11
         GETMAIN R,LV=LDYNAMIC    LEN OF DYNAMIC AREA
         LR    R10,R1
         ST    R13,4(R10)         SAVE HSA IN LSA
         ST    R10,8(R13)         SAVE LSA IN HSA
         L     R1,24(R13)         RESTORE REG ONE
         LR    R13,R10            SET UP NEW SAVE AREA
         USING DYNMAREA,R13
         ST    R1,CPPLADDR
         MVI   MSGWORK,X'40'      CLEAR MSG BUFFER
         MVC   MSGWORK+1(120),MSGWORK
         MVI   NAMETAB,X'40'      CLEAR NAME TABLE TO BLANKS
         MVC   NAMETAB+1(255),NAMETAB
         MVC   NAMETAB+256(255),NAMETAB
         MVC   NAMETAB+511(255),NAMETAB
         MVC   NAMETAB+766(255),NAMETAB
         MVC   NAMETAB+1021(255),NAMETAB
         MVC   NAMETAB+1276(255),NAMETAB
         MVC   NAMETAB+1531(255),NAMETAB
         MVC   NAMETAB+1786(14),NAMETAB
         SPACE 2
LOAD     L     R1,CVTPTR          CVT ADDRESS
         USING CVTMAP,R1          ADDRESS TO DSECT
         L     R1,CVTJESCT        JES CONTROL TABLE
         USING JESCT,R1           ADDRESS TO DSECT
         L     R15,JESCTEXT            EXTENSION
         L     R15,JESGB4UV-JESPEXT(R15) ADR OF IEFGB4UV
         ST    R15,DSAGB4UV
         L     R1,JESEDT          EDT
         DROP  R1
         L     R10,EDTLUVSP(,R1)  LOOK-UP SECTION
         L     R0,LUVENTNO(,R10)  # OF UNIT NAMES
         L     R8,LUVENTLN(,R10)  LENGTH OF ENTRY
         LA    R15,LUVENTRY(,R10)      FIRST ENTRY
         LA    R1,NAMETAB
TABLSCAN MVC   0(8,R1),0(R15)
         MVI   8(R1),C' '
         LA    R1,9(R1)           INCREMENT OUTPUT STAK
         LA    R15,0(R8,R15)      INCREMENT NAMET POINTER
         BCT   R0,TABLSCAN
         EJECT
REPEAT   EQU   *                           AXC
         LA    R2,NAMETAB                      NAME
NAMESOUT EQU   *
         MVC   MSGOUT(72),0(R2)   MOVE OUT 8 NAMES
         BAL   R4,PUTLINE         GO PRINT IT OUT
         LA    R2,72(R2)
         CLI   0(R2),C' '
         BNE   NAMESOUT
GET      MVC   MSGOUT(L'MSGENTER),MSGENTER
         BAL   R4,PUTLINE
GET1     BAL   R4,GETLINE
         MVC   UNITNAME(8),=CL8' '
         L     R1,INPUTADR
         LH    R7,0(R1)
         CLC   0(2,R1),=X'0004'   A NULL RETURN?
         BC    12,GET             NO REPLY GO ASK AGAIN
         CLI   4(R1),C'='                THE ABILITY TO REPEAT AXC
         BE    REPEAT                    THE ABILITY TO REPEAT AXC
GET2     DS    0H
         MVC   MSGOUT(80),4(R1)
         BAL   R4,PUTLINE
         CLI   4(R2),C'*'
         BE    GET1
         LA    R1,4(R1)       POINT TO INPUT DATA
         LR    R2,R1
         BC    15,COMPRIT
         MVC   UNITNAME(0),0(R2)
COMPRIT  EX    R7,*-6
         TR    UNITNAME(8),TRTABLE
         CLC   END,UNITNAME
         BE    EODAD
***********************************************************************
***********************************************************************
* CHECK THAT THE CLASS NAME ENTERED IS VALID. THIS IS DONE
* BY COMPARING THE NAME (GENERIC OR ESOTERIC) AGAINST THE
* CLASS NAMES IN THE EDT LOOK UP SECTION.
* A DSECT FOR EDT SHOULD BE SUBSTITUTED WHEN AVAILABLE.
***********************************************************************
***********************************************************************
         L     R0,LUVENTNO(,R10)   # CLASS TYPES IN EDT
         LA    R15,LUVENTRY(,R10)   1ST ENTRY
NAMESCAN CLC   UNITNAME,0(R15)
         BE    HAVENAME
         LA    R15,0(R8,R15)        GET NEXT ENTRY
         BCT   R0,NAMESCAN
         MVC   MSGOUT(8),UNITNAME
         BAL   R4,PUTLINE
         MVC   MSGOUT(27),=CL27' ******* INVALID CLASS NAME'
         BAL   R4,PUTLINE
         STIMER REAL,BINTVL==F'500'  WAIT 5 SEC TO SINK IN
         B     GET
***********************************************************************
* THE DEVICE NAME ENTERED IS VALID (IT WAS FOUND AGAIN IN
* THE EDT LOOKUP SECTION.  MOVE UNITNAME TO KEY 1 STORAGE
* AND INVOKE IEFAB4UV TO RETURN ASSOCIATED UCB ADDRESSES.
* R0, R1, R2, R8, R7, R14 CAN BE REUSED NOW.
***********************************************************************
HAVENAME SR   R1,R1               INITIALIZE IT
         L    R2,CVTPTR           GET CVT POINTER
         L    R2,0(R2)            OLD-NEW POINTER
         L    R2,4(R2)            OUT TCB POINTER
         ST   R6,TCBHOLD          HOLD ADDR OF TCB
         USING TCB,R6
**********YOU MUST BE SUPERVISOR MODE TO GETMAIN KEY1 SP:
*$       SR   R1,R1
*$       SVC  888
*$       TESTAUTH FCTN=1
*$       LTR   R15,R15
*$       BNZ   NOAUTH                  RATS
         L    R9,SPNO236               SUBPOOL 236 (KEY 1)
*$       MODESET MODE=SUP
         GETMAIN R,LV=LKEY1SP,SP=(R9)  FOR KEY SUBPOOL STORAGE
**********MUST BE KEY0 (OR KEY1) TO MOVE INTO SP236 (WRITE PROTECTED):
*$       MODESET EXTKEY=ZERO
         ST   R1,KEY1ADDR         SAVE KEY1 GETMAIN'D AREA PTR
         LR   R7,R1              PTR TO KEY1 STORAGE
         USING KEY1SP,R7         ADDR TO DSECT
***********************************************************************
* SET UP PARAMETER LIST FOR KEY 1 STORAGE FOR IEFAB4UV
***********************************************************************
         LA   R1,UNITABLE
         ST   R1,UTBLPTR
         LA   R1,FLAGS
         ST   R1,FLAGPTR
         LA   R1,ATTRAREA
         ST   R1,ATTRPTR
         MVC  UNAME(8),UNITNAME
         MVC  FLAGS,FLAGSET
******KEY0 NO LONGER NEEDED, ALL INFO ALREADY MOVED INTO SP236 STORAGE:
         ST   R6,TCBHOLD
         USING TCB,R6
*$       MODESET EXTKEY=TCB,WORKREG=9
*$       LA   R1,4
*$       SVC  888
*$       LINK EP=IEFAB4UV
         ESTAE MYESTAE,CT,PARAM=(R13)
         LA   R1,PARMLIST
         L     R15,DSAGB4UV
         BALR  R14,R15
         ST    R15,DSAGB4RC            SAVE RC
         ESTAE 0
*
         L     R15,DSAGB4RC            RESTORE RC
         LTR  R15,R15             HAVE UCBS BEEN RETURNED?
         BC   8,GOTUCBS           UCBS RETURNED GO LOOK AT THEN
         CH   R15,=H'4'           R15=4
         BC   8,NONAME            SAY CLASS NAME NOT FOUND
         CH   R15,=H'16'          R16=16
         BC   8,NOSTORGE          NO STORAGE AVAIL FOR UCB LIST
         BC   15,ABENDIT          ABEND ALL OTHER RETURN CODES
***********************************************************************
* UCBS RETURNED IN SUBPOOL 230 STORAGE. KEY 1 STORAGE CAN
* NOW BE FREED,  THEN PROCESS THE UCB LIST AND FREE
* SUBPOOL 230 STORAGE PRIOR TO EOJ.
***********************************************************************
GOTUCBS  MVC  UCBLIST,UCBPTR      SAVE PTR TO UCB LIST
         L    R9,SPNO236
         L    R1,KEY1ADDR
         FREEMAIN R,LV=LKEY1SP,SP=(R9),A=(R1)
         L     R9,UCBLIST         PTR TO UCB LIST
         CLI   0(R9),X'E6'        IS THIS THE UCB LIST?
         BC    7,NOTUCBLS         NOT UCB LIST SEND MSG
         MVC   LISTLEN,0(R9)      HOLD LEN OF LIST
         DROP  R7                 FROM KEY1 PARM DSECT
         L     R7,4(R9)           NUMBER OF UCBS IN LIST
         LA    R9,8(R9)           ADDRESS OF 1ST UCB PTR
         L     R15,0(R9)          FIRST UCB PTR
GETUCB   EQU   *
         USING UCBOB,R15
         MVC   MSGOUT+4(3),UCBNAME
         TM    UCBDVCLS,UCB3DACC        DIRECT ACCESS?
         BZ    NOTDA                    NO
         TM    UCBSTAT,UCBONLI          ONLINE?
         BZ    NOTONL
         CLI   UCBVOLI,X'00'            YES, VOLID KNOWN?
         BE    NOTDA                    NO
         MVI   MSGOUT+8,C'-'
         MVC   MSGOUT+10(6),UCBVOLI
         B     NOTDA
NOTONL   EQU   *
         MVI   MSGOUT+8,C'-'
         MVC   MSGOUT+10(7),=CL7'OFFLINE'
         SPACE 2
NOTDA    DS    0H
         BAL   R4,PUTLINE
         BCT   R7,NOTTHIS
         B     GET
NOTTHIS  DS    0H
         LA    R9,4(,R9)
         L     R15,0(R9)
         BC    15,GETUCB
GETLINE  STM   R0,R15,SAVEREGS    SAVE CALLER'S REGS
         L     R2,CPPLADDR        ADDR OF CPPL
         USING CPPL,R2
         L     R3,CPPLUPT         UPT ADDR
         L     R4,CPPLECT         ECT ADDR
         XC    ECB,ECB            CLEAR OUT ECB
         XC    GTPBX(8),GTPBX     CLEAR GET PARMLIST TO ZEROS
         XC    IOPLX(16),IOPLX    CLEAR PARM LIST TO ZEROS
         LA    R1,IOPLX           ADDR OF LIST
         GETLINE PARM=GTPBX,UPT=(R3),ECT=(R4),ECB=ECB,                 X
               TERMGET=(EDIT,WAIT),INPUT=(ISTACK,LOGICAL),             X
               MF=(E,(1))
         LA    R5,GTPBX           ADDRESSABILITY FOR THE GTPB
         USING GTPB,R5
         L     R6,GTPBIBUF        ADDR OF INPUT LINE
         ST    R6,INPUTADR        SAVE ADDR OF INPUT BUFFER
         LM    R0,R15,SAVEREGS    RESTORE CALLER'S REGS
         BR    R4
         EJECT
PUTLINE  MVC   MSGCNTL,PUTCNTL    MOVE IN PUTLINE CONTROL CHARS
         STM   R0,R15,SAVEREGS    SAVE CALLER'S REGS
         LA    R5,MSGWORK         ADDR OF MSG BUFFER
         L     R2,CPPLADDR        ADDR OF CPPL
         USING CPPL,R2
         LA    R1,PUTLPARM        ADDR OF PLIST
         USING IOPL,R1
         MVC   IOPLECT,CPPLECT    MOVE ADDR OF ECT TO PLIST
         MVC   IOPLUPT,CPPLUPT    MOVE ADDR OF UPT TO PLIST
         LA    R0,ECB             ADDR OF ECB
         ST    R0,IOPLECB         STORE INTO PLIST
         XC    ECB,ECB            CLEAR ECB TO ZEROS
         XC    PTPB(16),PTPB      CLEAR PLIST TO ZEROS
         PUTLINE PARM=PTPB,ECB=ECB,                                    X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               OUTPUT=((R5),TERM,SINGLE,DATA),                         X
               MF=(E,(1))
         MVI   MSGWORK,X'40'      CLEAR BUFFER TO SPACES
         MVC   MSGWORK+1(120),MSGWORK
         LM    R0,R15,SAVEREGS    RESTORE CALLER'S REGS
         BR    R4                 RETURN TO CALLER
NONAME   MVC   MSGOUT(27),=CL27'  CLASS NAME NOT FOUND - RETRY'
         BAL   R4,PUTLINE
         BC    15,GET
NOSTORGE MVC   MSGOUT(27),=CL27'  NO STORAGE AVAIL FOR UCB LIST'
         BAL   R4,PUTLINE
         BC    15,EODAD
NOTUCBLS MVC   MSGOUT(27),=CL27'  UCB LIST NOT BEING SEARCHED'
         BAL   R4,PUTLINE
         BC    15,EODAD
ABENDIT  MVC   MSGOUT(10),=CL10'  ABEND IT'
         BAL   R4,PUTLINE
         BC    15,EODAD
NOAUTH   MVC   MSGOUT(27),=CL27'  NOT AUTHORIZED'
         BAL   R4,PUTLINE
         BC    15,QUIT
EODAD    L     R6,TCBHOLD
         USING TCB,R6
*$       SR    R1,R1              PREPARE FOR AUTHORIZATION
*$       SVC   888                TO PREPARE FOR KEY=1
*$       MODESET MODE=SUP         TO PREPARE FOR KEY=1
         L     R0,LISTLEN         SUBPOOL 230 + LEN OF STORAGE
         L     R1,UCBLIST         PTR TO GETMAIN'D AREA
         LTR   R1,R1              IS A FREEMAIN REQUIRED
         BC    8,EODADB           NO BRANCH AROUND IT
         N     R0,=X'00FFFFFF'         FORCE SUBPOOL 0 *$
*$       MODESET EXTKEY=SCHED
         SVC   10                 FREEMAIN OF SUBPOOL 230
EODADB   DS    0H
*$       MODESET KEY=ZERO,MODE=PROB
*$       MODESET EXTKEY=TCB,WORKREG=9
*$       LA    R1,4
*$       SVC   888
QUIT     DS    0H
         LR    R1,R13             DYNAMIC AREA ADDR
         LA    R0,LDYNAMIC        SIZE OF AREA
         L     R13,4(,R13)        PREV SAVE AREA
         LA    R1,0(,R1)          CLEAR HI ORDER
         SVC   10                 FREEMAIN
         LM    R14,R12,12(R13)    RESTORE REGS
         LA    R15,0              RETURN CODE
         MVI   12(R13),X'FF'      INDICATE RETURN
         BR    R14                GO BACK TO TMP
         LTORG
MYESTAE  DS    0H
         PUSH  USING
         USING MYESTAE,R15
         USING SDWA,R1
         CH    R0,=H'12'               Q/SDWA
         BE    MYESQUIT                N/GET OUT
         SP    MYESCTR,=P'1'           LOOP FAILSAFE
         BZ    MYESQUIT
         CLC   =X'0C2000',SDWACMPC     PRIV OP INTERRUPT?
         BNE   MYESA78                 YES-SKIP IT
         L     R0,SDWANXT1             NEW INSTR AFTER PRIVOP
         B     MYESRTRY
MYESA78  DS    0H
         CLC   =X'B78000',SDWACMPC     GETMAIN/FREEMAIN FAIL
         BNE   MYESQUIT
         ICM   R0,15,SDWASRSV+15*4     GET ORIG R15
         N     R0,=X'FFFF00FF'         SET SUBPOOL TO ZERO
         STCM  R0,15,SDWASRSV+15*4     NEW R15
         L     R0,SDWANXT2
         SH    R0,=H'2'                BACKUP
MYESRTRY DS    0H
         SETRP RC=4,RETADDR=(R0),FRESDWA=YES,DUMP=NO,RETREGS=YES
         BR    R14
MYESQUIT DS    0H
         SETRP RC=0,FRESDWA=NO,DUMP=YES
         BR    R14
MYESCTR  DC    P'01024'                LOOP PROTECTION
         POP   USING
         LTORG
ALLBLANK DS    200CL9' '
         DS    0F
SPNO236  DC    X'00000000'        SUBPOOL 236 *$ USE SP0
SPNO230  DC    X'00000000'        SUBPOOL 230 *$ USE SP0
FLAGSET  DC    XL2'1000'          BIT 3 SET FOR UCB SEARCH
PUTCNTL  DC    H'121'             CONTROL CHARS FOR PUTLINE
         DC    H'0'
MSGENTER DC C'ENTER GROUP NAME OR ''='' TO REPEAT OR ''END'' TO END'
END      DC    C'END'
         DS    0D        TO DEFINE WHOLE FF BYTES OF A TABLE
TRTABLE  DC    XL256'00'
         ORG   TRTABLE+X'40'
         DC    X'40'                    BLANK
         ORG   TRTABLE+X'60'
         DC    X'60'                    - (DASH)
         ORG   TRTABLE+X'81'
         DC    X'C1C2C3C4C5C6C7C8C9'    ABCDEFGHI
         ORG   TRTABLE+X'91'
         DC    X'D1D2D3D4D5D6D7D8D9'    JKLMNOPQR
         ORG   TRTABLE+X'A2'
         DC    X'E2E3E4E5E6E7E8E9'      STUVWXYZ
         ORG   TRTABLE+X'C1'
         DC    X'C1C2C3C4C5C6C7C8C9'    ABCDEFGHI
         ORG   TRTABLE+X'D1'
         DC    X'D1D2D3D4D5D6D7D8D9'    JKLMNOPQR
         ORG   TRTABLE+X'E2'
         DC    X'E2E3E4E5E6E7E8E9'      STUVWXYZ
         ORG   TRTABLE+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9'  123456789
         ORG   TRTABLE+X'100'
GETLIST  GETLINE INPUT=(TERM,PHYSICAL),                                X
               TERMGET=(EDIT,WAIT),MF=L
DYNMAREA DSECT
SAVEAREA DS    18F                      SAVE AREA
SAVEREGS DS    16F                      FOR PUTLINE
CPPLADDR DS    F
******THE FOLLOWING ARE FOR PUTLINE:
MSGWORK  DS    0CL121
MSGCNTL  DS    F                  CONTROL WORD FOR PUTLINE
MSGOUT   DS    CL120              FOR PUTLINE
PUTLPARM DS    10A
ECB      DS    F
PTPB     DS    4F
******THE FOLLOWING ARE FOR GETLINE:
GTPBX    DS    2F
IOPLX    DS    4F                 I-O PARM LIST FOR GETLINE
INPUTADR DS    F                  ADDR FOR INPUT BFFER
INPUTCTL DS    F                  CNTL BYTES OF INPUT BUFFER
UNITNAME DC    CL8' '
         DC    C' '
NAMETAB  DS    0F
         DC    200CL9' '
         DS    0F
TCBHOLD  DS    F
DSAGB4UV DS    F                       EP OF IEFGB4UV
DSAGB4RC DS    F                       RC "
KEY1ADDR DS    F
LISTLEN  DS    F
UCBLIST  DS    F                   PTR TO UCB LIST
         DS    0D
LDYNAMIC EQU   *-DYNMAREA          SIZE OF DYNAM AREA
***********************************************************************
* DSECT FOR KEY1 SUBPOOL GETMAIN'D STORAGE
***********************************************************************
KEY1SP   DSECT                     GETMAIN DSECT FOR KEY1 SUBPOOL
PARMLIST DS    2F                  PARMLIST MAPPING
         ORG   PARMLIST
UTBLPTR  DS    F                   ADDRESS OF 100-BYTE WORK AREA
FLAGPTR  DS    F                   ADDR OF DEVTYPE BYTE TO BE SEARCHED
         DS    0F
UNITABLE DS    CL20
         ORG   UNITABLE
UNAME    DS    8C
UCBPTR   DS    F
ATTRPTR  DS    F
         DS    F
*
FLAGS    DS    XL2
ATTRAREA DS    CL10
LKEY1SP  EQU   *-KEY1SP
***********************************************************************
*        DSECTS
***********************************************************************
         PUSH  PRINT
         PRINT  OFF                    SAVE-A-TREE
         EJECT
         IEFUCBOB ,
         EJECT
         IEFJESCT ,
         EJECT
         CVT   DSECT=YES
         EJECT
         IKJTCB ,
         EJECT
         IKJCPPL ,
         EJECT
         IKJPPL ,
         EJECT
         IKJIOPL ,
         EJECT
         IKJGTPB ,
         EJECT
         IHASDWA ,
         POP   PRINT
         END
