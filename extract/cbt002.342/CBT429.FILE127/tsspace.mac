TSSPACE  TITLE 'TSO CP TO PRINT DASD SPACE INFO  12JUN94 - HUNTER'
********************************************************************
*                  T-S-D-S-P-A-C-E
*      PROGRAM TO PRINTOUT AVAILABLE SPACE ON A DISK DRIVE
*      USES LSPACE (SVC 78)  FUNCTION
*      ALSO DETERMINES IF PACK HAS INDEXED VTOC
*      PRODUCED FROM DISASEMBLY OF ORIGINAL OBJECT MODULE
*      W F HARTMAN MAY 1981
*            CODE FROM CBTV224   - CLARK
*      RE-WORKED:
*        RENT; %FREE SPACE; UNIT NAME; NO. USERS;ALT PATH, PATH MASK
*        ADDED XA SUPPORT                                      DDMMM84
********************************************************************
         MACRO
&N       @ED   &OU,&WK
&N       MVC   &OU,OTMASK               MOVE MASK
         L     R0,&WK                   GET DATA
         CVD   R0,WD                    MAKE PACKED
         ED    &OU,WD+4                 EDIT IT
         MEND
         PRINT NOGEN
TSSPACE @ENT   R12,(0,DSAEND-DSA,C),DSA=YES
         XC    WKCLRS(WKCLRL),WKCLRS   CLEAR COUNTERS
         LA    R2,PPL                  GET ADDRESS OF PPL
         USING PPL,R2                  TELL ASSEMBLER
         MVC   UPT,4(R1)               COPY  UPT
         MVC   ECT,12(R1)              COPY  ECT
         LA    R0,ECB                  GET ADDRESS OF NEW ECB
         ST    R0,ECBP                 SAVE ECB ADDRESS
         XC    ECB,ECB                 ZERO ECB
         MVC   PCL,ADDPCL              GET ADD OF PCL
         LA    R0,ANS                  GET ADD OF ANSWER WORD
         ST    R0,ANSW                 PUT IN PPL
         MVC   COMBUF,0(R1)            PUT ADD OF CBUFF IN PPL
         XC    WK,WK                   ZERO USER WORK AREA
         LA    R1,PPL                  GET ADD OF PPL
         CALLTSSR EP=IKJPARS           GO PARSE IT
         DROP  R2
         LTR   R15,R15                 TEST  RETURN CODE
         BNZ   ERROR                   ERROR GO TELL USER
*
**       SAY   HELLO
*
         LA    R0,HDR1E-HDR1S          L' MSG
         LA    R1,HDR1S
         TPUT (R1),(R0)  TPUT MESSAGE
         LA    R0,HDR2E-HDR2S          L' MSG
         LA    R1,HDR2S
         TPUT (R1),(R0)  TPUT MESSAGE
*
         MVI   UNIT,C' '               UNIT=C' '=NO HITS
*
         L     R6,ANS                  GET ADDRESS OF ANSWER AREA
*---                                   PROCESS PATH INFO       25JUN84
         USING IKJPARMD,R6                                     25JUN84
         CLC   =H'1',MINPATHK          FIRST KEYWORD SPEC'D    25JUN84
         BNE   SKPPATH                 NO-SKIP                 25JUN84
         L     R14,MINPATHI            DATA ADR                25JUN84
         LH    R15,MINPATHI+4          L'                      25JUN84
         BCTR  R15,0                   L' -1                   25JUN84
MINPATHX PACK  WD,0(*-*,R14)           EXECUTED                25JUN84
         EX    R15,MINPATHX             """"""                 25JUN84
         CVB   R0,WD                                           25JUN84
         ST    R0,MINPATHD             SAVE MIN PATHS REQD     25JUN84
SKPPATH  DS    0H                                              25JUN84
*---     ---   PROCESS VOLSERS                                 25JUN84
         LA    R6,VOL                  PDL DSECT ENTRY
         DROP  R6                                              25JUN84
         TM    6(R6),X'80'             IS IT REQUST FOR SPEC VOL
         BO    GETVOL                  YES GO PROCESS
         SR    R6,R6                   NO-ALL VOLUMES
         B     SKPVOL                  SKIP
GETVOL   DS    0H
         MVI   VOLSER,C' '
         MVC   VOLSER+1(5),VOLSER
         L     R7,0(R6)                GET ADDRESS OF VOLUME
         LH    R8,4(R6)                GET LENGTH OF VOLUME
         BCTR  R8,R0                   MACHINE LENGTH
         LA    R9,VOLSER               ADDRESS OF MESSAGE
         EX    R8,EXMVC                MOVE VOLUME IN
SKPVOL   DS    0H
         TITLE 'SCAN UCBS'
*
***            THIS CODE COPIED FROM (TSUCBSCN)
*
LOCUCB   DS    0H  -----------------FORMAT IOS SCAN PARM LIST
         XC    DSXAWORK,DSXAWORK       ZERO OUT UCB WORKAREA
         LA    R1,DSXAWORK             ADDR OF UCB WORKAREA
         ST    R1,DSXAWA               STORE IT IN PARM LIST
         LA    R1,DSXACLAS             PTR TO DEV CLAS TO SEARCH
         ST    R1,DSXADEVT             STORE IN PARM LIST
         MVI   DSXACLAS,UCB3DACC       ONLY SEARCH DASD
         LA    R1,DSXAUCBP             AREA TO STORE UCB ADDR
         ST    R1,DSXAUCB              IN PARM LIST
         OI    DSXAUCB,X'80'           SIGNIFY END OF PARMLIST
UCBLOOP  DS    0H
LOCUCB1  DS    0H  -----------------SCAN FOR A UCB---------
         L     R15,CVTPTR
         MVC   DSADCB,CVTDCB-CVT(R15)  SAVE OP SYS TYPE
*        ICM   R15,15,X'434'(R15)      CVTUCBSC VALID?(IOSVSUCB)
         ICM   R15,15,CVTUCBSC-CVT(R15) CVTUCBSC VALID?(IOSVSUCB)
         BZ    LOCUCBE0                ZERO=OLD MVS
***>>>>>>----UCB SCAN SERVICE FOR MVS/SP1.2 AND ABOVE:-----<<<<<<***
** PARM:(100BYTE-WORK,1BYTE-DEV-CLASS,1WORD-UCB-PTR)              **
**RETURN CODES: R15 = 00-UCB RETURNED; 04-NO MORE UCBS            **
         LA    R1,DSXALIST             PTR TO PARM LIST
         BALR  R14,R15                 BRANCH TO IT
         B     LOCUCBXX                COMMON ENTRY POINT
***>>>>>>----- EMULATION UCB SCAN SERVICE FOR OLD MVS------<<<<<<***
LOCUCBE0 DS    0H
         ICM   R14,B'1111',DSXAEUCB    BR IF THIS IS
         BNZ   LOCUCBE1                SECOND OR LATER CALL
         L     R14,CVTPTR              ADDR-UCB VECTOR TABLE
         L     R14,X'24'(R14)         *XA  CVTILK2-CVT(R14)
         ST    R14,DSXAEILK            SAVE(TO CHECK FOR DUPS)
LOCUCBE1 DS    0H
         SR    R1,R1                   ZERO UCB ADDR PTR
LOCUCBE3 DS    0H
         LA    R14,2(,R14)             NEXT PTR(1ST UCB SKIPPED)
         ICM   R1,B'0011',0(R14)       ADDR OF UCB
         BZ    LOCUCBE3                BR IF NULL ENTRY
         LA    R15,4                   SHOW NO HITS (CC UNCHANGED)
         BO    LOCUCBEX                BR IF END
         LA    R15,0                   SHOW HITS (CC UNCHANGED)
LOCUCBE5 DS    0H
         CLC   DSXACLAS,UCBTBYT3-UCBCMSEG(R1) BR IF THIS UCB
         BNE   LOCUCBE3                IS NOT DESIRED CLASS
         ST    R1,DSXAUCB              PROVIDE ADDR OF UCB
         ST    R14,DSXAEUCB            REMEMBER WHERE TO RESUME
***>>>>> CHECK FOR DUPLICATE CHANNEL PATH
         L     R14,DSXAEILK            ADDR OF FIRST UCB PTR
LOCUCBE7 DS    0H
         CL    R14,DSXAEUCB            EXIT IF NO DUPLICATE
         BE    LOCUCBEX                CHANNEL PATH FOUND(R15=0)
         LA    R14,2(,R14)             ADDR OF NEXT PTR
         CLC   0(2,R14),DSXAUCB+2      CONTINUE LOOP IF THIS IS NOT
         BNE   LOCUCBE7                DUPLICATE CHANNEL PATH
         L     R14,DSXAEUCB            SETUP TO RESUME SCAN
         B     LOCUCBE3                AND GO RE-ENTER LOOP
LOCUCBEX DS    0H
***>>>>>>       UCB SCAN ROUTINE - COMMON RETURN POINT     <<<<<<***
LOCUCBXX DS    0H
         LTR   R15,R15                 GOT ONE?
         BNZ   UCBEND                  NO
         L     R8,DSXAUCBP GET ADR OF  UCB FROM PTR
         USING UCBCMSEG,R8
         CLI   UCBID,UCBSTND           IS ADDRESS VALID
         BNE   UCBSKP                  NO
         CLI   UCBDVCLS,UCB3DACC       IS IT DASDI
         BNE   UCBSKP                  NO   SKIP
         TM    UCBSTAT,UCBONLI         IS IT ONLINE
         BNO   UCBSKP                  NO  SKIP
         TM    UCBSTAT,UCBCHGS         IS IT CHANGING STATUS
         BO    UCBSKP                  YES SKIP
         LTR   R6,R6                   TEST IF ONLY ONE VOLUME WANTED
         BZ    SNGVOL                  NO GO PROCESS
         LH    R0,4(R6)                GET L' VOLSER
         L     R14,0(R6)               GET VOLSER(FAMILY)
         LA    R15,UCBVOLI             OP2
         CLC   =C'ALL ',0(R14)         ALL SPECIFIED           25JUN84
         BE    SNGVOL                  YES-PROCESS IT          25JUN84
CLCVOL   DS    0H                      CHECK VOLSER
         CLI   0(R14),C' '             SHORT VOLSER
         BE    SNGVOL                  YES-MATCH
         CLC   0(1,R14),0(R15)         COMPARE VOLSER
         BNE   UCBSKP                  DONT WANT
         LA    R14,1(R14)              NEXT
         LA    R15,1(R15)              "
         BCT   R0,CLCVOL               LOOP
         BNE   UCBSKP                  DO NOT WANT
SNGVOL   DS    0H
         TITLE 'PROCESS THIS ONLINE DASD UCB ----------------'
         MVI   OUTMESS,C' '             CLEAR OUTPUT AREA
         MVC   OUTMESS+1(OUTMESSL-1),OUTMESS
         MVC   UNIT,UCBNAME            XXX UBIT ADR
         MVC   VOLSER,UCBVOLI          VOLSER
*------- ----- SHOW NUMBER OF USERS
         XR    R1,R1
         IC    R1,UCBUSER              CONCURRENT USERS(+26X)
         TM    DSADCB,DSADCBXA         MVS/XA?                 DDMMM84
         BZ    *+8                     NO                      DDMMM84
         LH    R1,UCBUSER              2BYTES IN XA            DDMMM84
         CVD   R1,WD                   PACKED "   "
         UNPK  OUTMUSER,WD             DISPLAY "  "
         OI    OUTMUSER+L'OUTMUSER-1,C'0' FIX SIGN
*------- ----- SEE IF ALT PATH
         TM    DSADCB,DSADCBXA         MVS/XA?                 DDMMM84
         BZ    NOTXA                   NO                      DDMMM84
         LH    R15,=H'-24'             UCBCHPS (8CHIPIDS)      DDMMM84
         AR    R15,R8                  GET ADDR OF UCBSHPS     DDMMM84
         UNPK  OUTMALTC(9),0(5,R15)    HANDLE 1ST 4 PATHS      DDMMM84
         MVI   OUTMALTC+8,C' '         FIX UNPK DAMAGE         DDMMM84
         TR    OUTMALTC(8),HEXTR-X'F0' MAKE DISPLAY ABLE       DDMMM84
         LH    R15,=H'-28'             UCBLPM 1=AVAIL          DDMMM84
         AR    R15,R8                  GET ADDR "              DDMMM84
         IC    R15,0(R15)              GET PATH BYTE           DDMMM84
         B     DOPATHXA                CONTINUE                DDMMM84
NOTXA    DS    0H                      SP3 (&BELOW)            DDMMM84
         TM    UCBFL5,X'01'           *XA UCBALTPH  ALTPATH?
         BZ    SKPALT                  NO
         L     R15,CVTPTR              CVT(+10)
         L     R15,CVTILCH-CVT(R15)    LCH(+8C)
         SR    R14,R14
         IC    R14,UCBCMSEG+X'A'      *XA UCBLCI LCH INDEX(+A)
         SLL   R14,5                   LCH DISPL
         LA    R15,0(R14,R15)          LCH ENTRY
         L     R14,LCHTCH-LCH(R15)     TCH PATH TABLE(+10)
         LA    R14,2(R14)              PROPER SLOT
         MVC   OUTMALTC,0(R14)         CHANNEL NUMBER
         TR    OUTMALTC,HEXTR
*------- ----- SHOW PATH DATA
         IC    R15,UCBCMSEG+X'8'      *XAUCBCHM
DOPATHXA DS    0H                      XA ENTRY (HANDLE 1ST 4  DDMMM84
         SRL   R15,4                   ISOLATE NIBBLE
         N     R15,=F'15'              "
*------- ----- SHOW NUMBER OF ONLINE PATHS
         XR    R14,R14                                         25JUN84
         IC    R14,PTHONTAB(R15)       XLATE TO ONLINE PATHS
         TM    DSADCB,DSADCBXA         XA                      DDMMM84
         BZ    DOPATHTR                NO-CONTINUE             DDMMM84
         SH    R14,=H'4'                                       DDMMM84
* A PATH BIT IN NON-XA: 0=ONLINE, 1=OFFLINE                    DDMMM84
* A PATH BIT IN XA:     0=OFFLINE, 1=ONLINE                    DDMMM84
         LPR   R14,R14                 FLIP FOR XA LOGIC       DDMMM84
DOPATHTR DS    0H                                              DDMMM84
         STC   R14,OUTMPTHN            SAVE # PATHS
         TR    OUTMPTHN,HEXTR
*------- ----- SEE IF MINPATHS SPEC'D
         OC    MINPATHD,MINPATHD       NON-ZERO                25JUN84
         BZ    SKPMINCK                NO-SKIP CHECK           25JUN84
         C     R14,MINPATHD            PATHS AT OR ABOVE MIN   25JUN84
         BNL   UCBSKP                  YES-SKIP EM             25JUN84
SKPMINCK DS    0H                      CONTINUE                25JUN84
*------- ----- SHOW PATH MASK
         SLL   R15,2                   *4=0,4,8,...
         LA    R14,PATHMASK(R15)       CONVER PATH TO BITS
         MVC   OUTMPTHM,0(R14)         NIBBLE IN BITS C'XXXX'
SKPALT   DS    0H                      SKIP IF NO ALTS
*------- ----- LSPACE
         LA    R0,UCBCMSEG             UCB ADR
         LA    R1,WORKA
         SVC   78                      ISSUE LSPACE
         MVC   OUTMESSV,VOLSER         VOLSER
         MVC   OUTMESSU,UNIT           ADDR
*------- ----- SEE IF INDEXED
         CVAFTST  UCB=(R8)             TEST  VTOC
         B     BRTBL(R15)              TEST  RETURN CODE
BRTBL    B     RC0
         B     RC4
         B     RC8                     INDEXED
         B     RC12
         B     RC16
RC8      MVC   INFLAG,=C'I '
RC4      DS    0H
RC0      DS    0H
*------- ----- GET DEV INFO
*                                      CALC % FULL
         LA    R15,STCYLS              GET DEVICE TABLE
DEVLOC   DS    0H
         CLC   UCBUNTYP,(STCYLS-STCYLS)(R15)
         BE    DEVGOT
         CLI   (STCYLS-STCYLS)(R15),X'FF'
         BE    DEVGOT
         LA    R15,(STCYLS1-STCYLS)(R15)  NEXT
         B     DEVLOC                  LOOP
DEVGOT   DS    0H
         MVC   OUTMESSD,(STCYLNAM-STCYLS)(R15) DEV. NAME
         LH    R14,(STCYLTTK-STCYLS)(R15)       #TRKS/VOL
         A     R14,WKTOTTTK            TOT TRKS SEEN
         ST    R14,WKTOTTTK
*
         LH    R14,(STCYLMAX-STCYLS)(R15)       #CYLS/VOL
         A     R14,WKTOTCYL            TOT CYLS SEEN
         ST    R14,WKTOTCYL
*
         PACK  WD,WA#CYL               # FREE CYL
         CVB   R0,WD                   "
         LR    R14,R0
         A     R14,WKFRECYL            TOT FREE CYLS
         ST    R14,WKFRECYL
*
         MH    R0,(STCYLTRK-STCYLS)(R15)       #TRKS/CYL
         PACK  WD,WA#TRK               # FREE TRKS
         CVB   R14,WD                  "
         AR    R0,R14                  TOTAL FREE TRKS ON VOL
*
         LR    R14,R0
         A     R14,WKFRETRK            TOT FREE TRKS - ALLVOL
         ST    R14,WKFRETRK
*
         SRDA  R0,32                   SHIFT TO R1
         M     R0,=F'100'              FOR % CALC
         A     R1,=F'50'               "
         LH    R14,(STCYLTTK-STCYLS)(R15)
         DR    R0,R14                  CALC % FREE
         CVD   R1,WD                   ANSWER
         UNPK  OUTMESSP,WD
         OI    OUTMESSP+L'OUTMESSP-1,C'0' FIX SIGN
*
         LA    R0,OUTMESSL
         LA    R1,OUTMESS
         TPUT (R1),(R0)  TPUT MESSAGE
TESTONE  LTR   R6,R6
         B     UCBSKP                  TRY MORE VOLSERS GROUP
*****    BNZ   SECVOL
UCBSKP   DS    0H                      INCREMENT BY 2
         B     UCBLOOP                 CONTINUE SEARCHING SVC TABLE
UCBEND   LTR   R6,R6                   IS IT ALL
         BZ    DONE                    YES
         CLI   UNIT,C' '               WERE ANY VOLSERS FOUND
         BNE   DONE                    YES-NO MSG
         MVC   OUTMESS(25),NOVOL
         MVC   OUTMESS+7(6),VOLSER
         LA    R0,25
         LA    R1,OUTMESS              VOL NOT FOUND
         TPUT (R1),(R0)                TPUT MESSAGE
SECVOL   L     R6,8(R6)
         LA    R6,0(R6)
         LTR   R6,R6                   IS THERE A SECOND VOLUME
         BNZ   GETVOL
DONE     IKJRLSA   ANS                 FREE PARSE AREA
DONE1    DS    0H                      TO FREE
         @ED   OTFRECYL,WKFRECYL
         @ED   OTFRETRK,WKFRETRK
         @ED   OTTOTCYL,WKTOTCYL
         @ED   OTTOTTTK,WKTOTTTK
         LA    R0,HDR3E-HDR3S           L' MSG
         LA    R1,HDR3S
         TPUT (R1),(R0)  TPUT MESSAGE
         LA    R0,L'OTTOTS              L' MSG
         LA    R1,OTTOTS
         TPUT (R1),(R0)  TPUT MESSAGE
         @RET  EQ,RC=0
RC12     TPUT  NOVIB,L'NOVIB
         B     TESTONE
RC16     TPUT  NOTDA,L'NOTDA
         B     TESTONE
ERROR    TPUT  ERRMESS,L'ERRMESS           TGET/TPUT
         B     DONE1
EXMVC    MVC   0(0,9),0(7)
ADDPCL   DC    V(PARSEPCL)
         DC    H'0016'
NOVIB    DC    C'VIB NOT INIT'
NOTDA    DC    C'NOT DASDI   '
ERRMESS  DC    C'PARSE FAILED'
VOLMESS  DC    C'VOL VVVVVV '
UNITMESS DC    C'UNIT UUU '
NOVOL    DC    C'VOLUME VVVVVV NOT MOUNTED'
HDR1S    DC    C'SPACE-2.1 IX SPACE=  --F R E E-- / -CONTIG-'
         DC    C' DEV   % NO. -PATH- ALT.PATH'
HDR1E    EQU   *
HDR2S    DC    C'         VTOC      #CYL,#TRK,#EXT/#CYL,#TRK'
         DC    C'     FRE USR #/MASK /CHPIDS '
HDR2E    EQU   *
HDR3S    DC    C' TOTAL-CYL TOTAL-TRK  FREE-CYL  FREE-TRK'
*              C' Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9'
HDR3E    EQU   *
OTMASK   DC    X'40206B2020206B202120'  Z,ZZZ,ZZ9
*
*        DEVICE CHARACTERISTICS TABLE
STCYLS   DS    0H                  TABLE OF DEVICE TYPE TO MAX. CYLS
         DC    X'0900'             DEVICE TYPE
STCYLMAX EQU   *
         DC    H'404'              MAX CYLS
STCYLNAM EQU   *
         DC    CL4'3330'           EBCDIC NAME
STCYLTRK EQU   *
         DC    H'19'               TRACKS PER CYLINDER
STCYLTTK EQU   *
         DC    AL2(404*19)         TRACKS PER VOL
STCYLS1  DS    0H                  FOR SIZE OF ENTRY CALC
         DC    X'0D00',H'0808',CL4'3331',H'19',AL2(0808*19)
         DC    X'0B00',H'0555',CL4'3350',H'30',AL2(0555*30)
         DC    X'0800',H'0200',CL4'2314',H'20',AL2(0200*20)
         DC    X'0A00',H'0696',CL4'3340',H'12',AL2(0696*12)
         DC    X'0C00',H'0959',CL4'3375',H'12',AL2(0959*12)
         DC    X'0E00',H'0885',CL4'3380',H'15',AL2(0885*15)
         DC    X'FFFF',H'9999',CL4'UNKN',H'19',AL2(99*99)
HEXTR    DC    C'0123456789ABCDEF'
*                  0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F  - MASK BITS
PTHONTAB DC    AL1(4,3,3,2,3,2,2,1,3,2,2,1,2,1,1,0) - # ZEROS
PATHMASK DC    C'0000',C'0001',C'0010',C'0011'      0-3 MASK
         DC    C'0100',C'0101',C'0110',C'0111'      4-7 MASK
         DC    C'1000',C'1001',C'1010',C'1011'      8-B MASK
         DC    C'1100',C'1101',C'1110',C'1111'      C-F MASK
         PUSH  PRINT                                           25JUN84
         PRINT  GEN                                            25JUN84
PARSEPCL IKJPARM  DSECT=IKJPARMD
VOL      IKJIDENT 'VOLUME',UPPERCASE,MAXLNTH=6,FIRST=ALPHANUM,       XXX
               OTHER=ALPHANUM,LIST
MINPATHK IKJKEYWD ,                                            25JUN84
         IKJNAME 'MINPATHS',SUBFLD=MINPATHS                    25JUN84
MINPATHS IKJSUBF
MINPATHI IKJIDENT 'MINPATHS',MAXLNTH=1,                        25JUN84 X
               FIRST=NUMERIC,                                  25JUN84 X
               PROMPT='MINIMUM NUMBER OF PATHS TO DEVICE'      25JUN84
         IKJENDP
         POP   PRINT                                           25JUN84
*        EQUATES
DSA      DSECT
*        WORK AREA FOR  TSSPACE CP
ANS      DS    F
ECB      DS    F
PPL      DS    0F
UPT      DS    F
ECT      DS    F
ECBP     DS    F
PCL      DS    F
ANSW     DS    F
COMBUF   DS    F
DSADCB   DS    X                       COPY OF CVTDCB - OP SYS
DSADCBXA EQU   X'80'                   XA OPERATING SYSTEM
WK       DS    F
WKCLRS   EQU   *                        CLEAR AREA AT INIT
MINPATHD DS    F                       MINIMUM NUMBER OF PATHS
WKFRETRK DS    F                        TOT FREE TRKS ON ALL V
WKFRECYL DS    F                        TOT FREE CYLS ON ALL V
WKTOTCYL DS    F                        TOT      CYLS ON ALL V
WKTOTTTK DS    F                        TOT      TRKS ON ALL V
WKCLRL   EQU   *-WKCLRS
WD       DS    D
WLOOKUP  DS    F
******** ***** OUTPUT TOTALS
OTTOTS   DC    C' TOTAL CYL TOTAL TRK  FREE CYL  FREE TRK'
*              C' Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9 Z,ZZZ,ZZ9'
OTTOTCYL EQU   OTTOTS+00,10
OTTOTTTK EQU   OTTOTS+10,10
OTFRECYL EQU   OTTOTS+20,10
OTFRETRK EQU   OTTOTS+30,10
******** ***** OUTPUT MESSAGE
OUTMESS  DS    CL79                    MESSAGE AREA
         ORG   OUTMESS                 RE-MAP
OUTMESSV DS    CL6,C                   VOLSER
OUTMESSU DS    CL3,C                   UNIT
INFLAG   DS    CL2                     INDEXED VTOC FLAG AREA
WORKA    DS    CL30                    AREA FOR LSPACE RETURN
WA#CYL   EQU   WORKA+06,4              FREE CYL
WA#TRK   EQU   WORKA+11,4              FREE TRK
WA#EXT   EQU   WORKA+16,4              EXTENTS
WA#CCYL  EQU   WORKA+21,4              CONTIG. CYL
WA#CTRK  EQU   WORKA+26,4              CONTIG. TRK
         DS    C                       FILLER
OUTMESSD DS    CL4,C                   DEV NAME 3380/3350
OUTMESSP DS    CL2,C                   %FULL
OUTMUSER DS    CL3,C                   UCBUSER-CONC. USERS
OUTMPTHN DS    C,CL1                   PATHS ONLINE
OUTMPTHM DS    CL4,CL1                 PATH MASK
OUTMALTX DS    CL3,CL6                 ALT CHAN(OR CHPIDS IN XA)
OUTMALTC EQU   OUTMALTX+1,1            ALT CHAN(MIDDLE POS.)
OUTMESSF EQU   OUTMESS+L'OUTMESS-*     FILLER (ASM ERR IF TOO LONG)
         DS    (OUTMESSF)X             FILLER (ASM ERR IF TOO LONG)
OUTMESSL EQU   *-OUTMESS
******** ***** ************************ **********************
VOLSER   DS   CL6       VOLSER
UNIT     DS   CL3       UNIT
******** ***** ************************ **********************
*
***            THIS CODE COPIED FROM (TSUCBSCN)
*
******** ***** *********************** START OF UCB LOOKUP DSA
DSXALIST DS    0F                      PARMLIST FOR UCB
DSXAWA   DS    F                       %100-BYTE WORK AREA
DSXADEVT DS    F                       %DEV TYPE TO SEARCH
DSXAUCB  DS    F                       %UCB FULL WORD PTR
         DS    0D                      FOLLOWING MUST BE ALIGNED
DSXAWORK DS    CL100                   UCB WORK AREA
DSXAEUCB EQU   DSXAWORK+00,04          EMULATION CURR. UCB PTR
DSXAEILK EQU   DSXAWORK+04,04          EMULATION CVTILK2 ADDR
DSXACLAS DS    CL1                     DEVICE CLASS TO SEARCH
DSXAUCBP DS    F                       %UCB
******** ***** *********************** END OF UCB LOOKUP DSA
DSAEND   EQU  *                         LENGTH OF WORK
         IEFUCBOB ,                    UCB
         CVT   DSECT=YES               CVT
LCH      DSECT                         LCH
         ORG   LCH+16
LCHTCH   DS    A
CSD      DSECT                         CSD
         ORG   CSD+8
CSDCPUAL DS    XL2
CPU1     EQU   X'40'
CPU2     EQU   X'20'
         END  ,
