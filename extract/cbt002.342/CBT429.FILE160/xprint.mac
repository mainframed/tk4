         TITLE 'XPRINT - COMMAND PROCESSOR FRONT-END FOR PRINT UTILITY'
         PRINT NOGEN
**********************************************************************
***                                                                ***
***                      XPRINT COMMAND                            ***
***                                                                ***
***  GENERAL FUNCTION:                                             ***
***                                                                ***
***     THIS COMMAND PROCESSOR IS A FRONT-END FOR A PRINT          ***
***     UTILITY.                                                   ***
***                                                                ***
***                                                                ***
***  PROCESSING:                                                   ***
***                                                                ***
***     1.  LINKAGE CONVENTIONS IN, GET STORAGE.                   ***
***     2.  CREATE PARSE PARM LIST.                                ***
***     3.  PARSE THE PARMS WITH IKJPARS.                          ***
***     4.  CREATE PARM LISTS FOR DYNAMIC ALLOCATION SVC-99.       ***
***     5.  FREE THE FILE NAMES WITH SVC-99.                       ***
***     6.  ALLOCATE THE FILES WITH SVC-99.                        ***
***     7.  CREATE PARMS FOR PRINT UTILITY.                        ***
***     8.  IF THE UTILITY IS NOT ALREADY A CSECT IMBEDDED         ***
***         IN THE PROGRAM, LOAD IT FROM STEPLIB/LPA/JPA/LNKLST.   ***
***     9.  EXECUTE THE UTILITY.                                   ***
***    10.  FREE THE FILES WITH SVC-99.                            ***
***    11.  FREE STORAGE, LINKAGE CONVENTIONS BACK.                ***
***                                                                ***
**********************************************************************
         SPACE 6
**********************************************************************
***                                                                ***
***  CUSTOMIZATION:                                                ***
***                                                                ***
***  1.  DDNAMES AT LABELS INPUTLIT AND LISTLIT.                   ***
***  2.  UTILITY PROGRAM NAME AT LABELS VPGM AND UTILNAME.         ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***                        HELP TEXT                               ***
***                        =========                               ***
***                                                                ***
***                                                                ***
***  )F Function -                                                 ***
***                                                                ***
***       XPRINT is a command for producing a hexadecimal          ***
***       'over-under' listing of a sequential file, or member of  ***
***       a partitioned dataset.                                   ***
***                                                                ***
***                                                                ***
***  )X Syntax -                                                   ***
***                                                                ***
***       XPRINT  dataset-name  record-limit                       ***
***       XP                                                       ***
***                                                                ***
***       ALIAS: XP                                                ***
***                                                                ***
***       REQUIRED:  dataset-name                                  ***
***       DEFAULTS:  none                                          ***
***                                                                ***
***  )O Operands -                                                 ***
***                                                                ***
***  ))dataset-name -                                              ***
***      The name of the dataset to be printed.  If single quotes  ***
***      (') are placed around the name, it will be used as is.    ***
***      If not, the TSO user prefix will be added to the front    ***
***      of the name.                                              ***
***                                                                ***
***  ))record-limit                                                ***
***      A decimal number (0-999) to limit the number of input     ***
***      records XPRINT will print from the file.                  ***
***                                                                ***
***                                                                ***
***  ))EXAMPLES:                                                   ***
***                                                                ***
***       (Assume your TSO user prefix is ABCD123)                 ***
***                                                                ***
***                                                                ***
***          1.  XPRINT  MYPROJ.DATA                               ***
***                  Creates a listing of 'ABCD123.MYPROJ.DATA'.   ***
***                                                                ***
***          2.  XPRINT  MYPROJ.DATA  50                           ***
***                  Creates a listing of 'ABCD123.MYPROJ.DATA',   ***
***                  using a limit of 50 input records.            ***
***                                                                ***
***          3.  XPRINT  'WXYZ789.USERLIB.CNTL(ALPHA)'             ***
***                  Creates a listing of library member ALPHA,    ***
***                  in library USERLIB.CNTL belonging to user     ***
***                  WXYZ789.                                      ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  NOTES FOR PROGRAMMER:                                         ***
***                                                                ***
***  1.  A.  THERE IS A NOTEST/TEST OPERAND WHICH SHOULD NOT BE    ***
***          DOCUMENTED IN THE HELP TEXT.  THE TEST OPERAND WILL   ***
***          USE TPUT TO WRITE THE FIRST 48 BYTES OF THE UTILITY   ***
***          LOAD MODULE TO THE SCREEN.  THIS IS FOR THE PURPOSE   ***
***          OF DISPLAYING THE GENERAL AREA OF AN EYECATCHER       ***
***          DURING DEBUGGING.                                     ***
***                                                                ***
***      B.  IT WILL ALSO NOTE WHETHER THE UTILITY HAD TO BE       ***
***          DYNAMICALLY LOADED DURING EXECUTION.                  ***
***                                                                ***
***  2.  THE UTILITY PROGRAM MAY BE LINKEDITED WITH THIS COMMAND   ***
***      PROCESSOR, BUT IT DOESN'T HAVE TO BE.  IF THE UTILITY     ***
***      IS NOT LINKED IN, THIS CP WILL LOAD IT FROM THE SYSTEM    ***
***      LIBRARIES.                                                ***
***                                                                ***
***      THIS COMMAND PROCESSOR IS REUSABLE, REENTERABLE AND       ***
***      REFRESHABLE.  YOU SHOULD NOT LINK IN THE UTILITY:         ***
***                                                                ***
***      A.  IF THIS CP IS GOING TO RESIDE IN LPA AND THE UTILITY  ***
***          IS NOT REENTERABLE, OR CANNOT GO INTO LPA FOR ANY     ***
***          OTHER REASON.                                         ***
***                                                                ***
***      B.  IF THE UTILITY IS MAINTAINED BY A GROUP OTHER THAN    ***
***          THOSE RESPONSIBLE FOR COMMAND PROCESSORS.             ***
***                                                                ***
***      C.  THE UTILITY WILL STILL BE RUN STAND-ALONE, WITHOUT    ***
***          THE COMMAND PROCESSOR (SUCH AS IN BATCH).             ***
***                                                                ***
***      D.  IF THE UTILITY IS STILL BEING DEVELOPED, OR IS BEING  ***
***          CHANGED FREQUENTLY.                                   ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  RETURN CODES -                                                ***
***       00 - OKAY                                                ***
***       0C - SOMETHING WRONG.                                    ***
***                                                                ***
***  REGISTER USAGE                                                ***
***       R0-R2  LINKAGE CONVENTIONS, MACROS                       ***
***          R3  (NOT USED)                                        ***
***          R4  WORK, TEMPORARY BASE OF PDE                       ***
***       R5-R6  WORK                                              ***
***       R7-R8  (NOT USED)                                        ***
***          R9  BASE OF PARM DESCRIPTOR ELEMENT LIST (PDL)        ***
***         R10  BAL REGISTER                                      ***
***         R11  (NOT USED)                                        ***
***         R12  PROGRAM BASE REGISTER                             ***
***         R13  LINKAGE CONVENTIONS, BASE OF AREA IN SP-000       ***
***     R14-R15  LINKAGE CONVENTIONS                               ***
***                                                                ***
***  NON-IBM MACROS USED:                                          ***
***     GTEDADAT  - CREATE CONTROL BLOCKS FOR DYNALLOC/DAIRFAIL    ***
***     GTEDASET  - LINK CONTROL BLOCKS TOGETHER                   ***
***     GTEDAALC  - EXECUTE DYNALLOC/DAIRFAIL                      ***
***                                                                ***
***  ASSEMBLER OPTIONS:       RENT                                 ***
***  LINKAGE EDITOR OPTIONS:  REUS,RENT,REFR  ALIAS(XP)            ***
***                                                                ***
***  CULPRIT:                                                      ***
***     CHUCK HOFFMAN                                              ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  LINKAGE CONVENTIONS WHEN UTILITY GETS CONTROL:                ***
***                                                                ***
***     R1 - POINTING TO 3-MEMBER LIST OF ADDRESSES.               ***
***          A.  ADDRESS OF COUNT HALFWORD, FOLLOWED BY COUNT      ***
***              IN DISPLAY FORMAT.  LEADING ZEROES ARE PROVIDED.  ***
***          B.  ADDRESS OF 44-CHARACTER DATASET NAME.             ***
***          C.  ADDRESS OF 8-CHARACTER MEMBER NAME.               ***
***                                                                ***
***          THE LAST ADDRESS IN THE LIST IS FLAGGED WITH THE      ***
***          HIGH ORDER BIT ON.                                    ***
***                                                                ***
***    R13 - POINTING TO 18-FULLWORD SAVE AREA OF CALLER.          ***
***                                                                ***
***    R14 - RETURN ADDRESS IN CALLER.                             ***
***                                                                ***
***    R15 - TWO USES.                                             ***
***          A.  ADDRESS OF SUBROUTINE UPON ENTRY.                 ***
***          B.  RETURN CODE UPON EXIT.                            ***
***                                                                ***
***  THE UTILITY MUST RESTORE REGISTERS 0-14 BEFORE RETURNING      ***
***  CONTROL TO THIS FRONTEND.                                     ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  MAINTENANCE HISTORY:                                     CAH84259A
***                                                                ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***   PROLOGUE                                                     ***
***                                                                ***
**********************************************************************
*
XPRINT   CSECT
         STM   R14,R12,12(R13)          SAVE INTO CALLERS S.A.
         B     BASE-XPRINT(0,R15)       BRANCH TO AROUND EYECATCHER
         DC    AL1(L'NAME)                LENGTH OF NAME
NAME     DC    C'XPRINT'                  MODULE NAME
         DC    C' &SYSDATE &SYSTIME '     DD.MM.YY HH.MM
BASE     LR    RBASE,R15                RBASE IS BASE REGISTER
         USING XPRINT,RBASE               TELL ASSEMBLER
         GETMAIN  R,LV=WORKDLEN,SP=0    GET AREA FOR MYSAVE AND WORK
         ST    R13,4(0,R1)              CALLERS S.A. ADDR TO MY S.A.
         ST    R1,8(0,R13)              MY S.A. ADDR TO CALLERS S.A.
         LM    R15,R1,16(R13)           RESTORE REGS USED BY GETMAIN
         L     R13,8(0,R13)             R13 POINTS TO MY S.A.
         USING WORKD,R13                  TELL ASSEMBLER
*
         USING PARMPDL,R9               ADDRESSABILITY OF PDE LIST
*
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE TO ZERO
         MVI   SWITCH1,B'00000000'      INITIALIZE SWITCHES
         ST    R1,CPPLPTR               SAVE CPPL POINTER
*
         B     MAINLINE
*
         EJECT
**********************************************************************
***                                                                ***
***   MAIN LINE ROUTINE                                            ***
***                                                                ***
**********************************************************************
*
MAINLINE BAL   RBAL,PPLSETUP            SET UP PARSE PARM LIST
*
         BAL   RBAL,PARSE               PARSE THE INPUT PARAMETERS
         CLC   RETCDE(4),F0             IF RETURN CODE IS BAD
         BE    *+14                     THEN
         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12
         B     ENDING                     AND GO TO ENDING
*
         BAL   RBAL,ALLOCATE            ALLOCATE THE FILES
         CLC   RETCDE(4),F0             IF RETURN CODE IS BAD
         BE    *+14                     THEN
         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12
         B     ENDING                     AND GO TO ENDING
*
         BAL   RBAL,UTILITY             PERFORM SUBROUTINE
         LTR   R15,R15                  IF RETURN CODE IS BAD
         BE    *+10                     THEN
         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12
*
         BAL   RBAL,FREE                FREE THE FILES
         CLC   RETCDE(4),F0             IF RETURN CODE IS BAD
         BE    *+14                     THEN
         MVC   COMPCODE(4),F12            SET RETURN CODE TO 12
         B     ENDING                     AND GO TO ENDING
*
         B     ENDING                   BRANCH TO ENDING
         EJECT
**********************************************************************
***                                                                ***
***   EPILOGUE                                                     ***
***                                                                ***
**********************************************************************
ENDING   LA       R2,MYPPL+(PPLANS-PPL)   ADDRESS OF PTR TO PDL
         L        R2,0(0,R2)              R4 POINTS TO PDL
         IKJRLSA  (R2)                    FREE STORAGE OF PDL
*
         L        R14,COMPCODE            R14 TEMPORARILY HAS COMP CODE
         LR       R15,R13                 R15 HAS MY SAVE AREA ADDRESS
         L        R13,4(0,R13)            R13 RESTORE, PNT TO CALLER SA
         FREEMAIN R,LV=WORKDLEN,SP=0,A=(R15)  FREE MYSAVE,COMPCODE,ETC
         LM       R0,R12,20(R13)          R0-R12 RESTORE FROM CALLER SA
         LR       R15,R14                 R15 GETS COMP CODE
         L        R14,12(0,R13)           R14 RESTORE FROM CALLERS S.A.
         MVI      12(R13),X'FF'           SIGNAL MODULE COMPLETE
         BR       R14                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***        CREATE PARSE PARAMETER LIST                             ***
***                                                                ***
**********************************************************************
PPLSETUP ST    RBAL,PPRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         L     R4,CPPLPTR               ADDRESS OF CMD PROC PARM LIST
         USING CPPL,R4                    ADDRESSABILITY
         MVC   MYPPL+(PPLUPT-PPL)(4),CPPLUPT              UPT  (CPPL)
         MVC   MYPPL+(PPLECT-PPL)(4),CPPLECT              ECT  (CPPL)
         LA    R5,MYECB
         ST    R5,MYPPL+(PPLECB-PPL)                      ECB  (MINE)
         MVC   MYPPL+(PPLPCL-PPL)(4),VPARMPCL             PCL  (CSECT)
         LA    R5,MYANS
         ST    R5,MYPPL+(PPLANS-PPL)                      ANS  (MINE)
         MVC   MYPPL+(PPLCBUF-PPL)(4),CPPLCBUF            CBUF (CPPL)
         XC    MYPPL+(PPLUWA-PPL)(4),MYPPL+(PPLUWA-PPL)   UWA  (MINE)
         DROP  R4
*
PPEND    L     RBAL,PPRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
         EJECT
**********************************************************************
***                                                                ***
***    PARSE THE INPUT PARAMETER STRING                            ***
***                                                                ***
**********************************************************************
PARSE    ST    RBAL,PARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         XC    MYECB,MYECB              ZERO THE ECB FOR PARSE
PARSEIT  CALLTSSR EP=IKJPARS,MF=(E,MYPPL)  PARSE THE PARMS
         L     R9,MYPPL+(PPLANS-PPL)    POINTER TO PDL ADDRESS
         L     R9,0(0,R9)               ADDRESSABILITY OF PDL
*
PAEND    L     RBAL,PARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
         EJECT
**********************************************************************
***                                                                ***
***    ALLOCATE THE FILES                                          ***
***                                                                ***
**********************************************************************
ALLOCATE ST    RBAL,ALRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         BAL   RBAL,FREE                FREE THE DDNAMES
*
ALSETL   MVC   DLD(DLDLEN),DLP          INITIALIZE 'LIST' BLOCKS
         GTEDASET DLD,CPPLPTR=CPPLPTR   LINK 'LIST' BLOCKS TOGETHER
ALSETI   MVC   DID(DIDLEN),DIP          INITIALIZE 'INPUT' BLOCKS
         GTEDASET DID,CPPLPTR=CPPLPTR   LINK 'INPUT' BLOCKS TOGETHER
*
ALDSN    LA    R4,PARMDSN               POINT TO PDE
         USING PDSN,R4                  ADDRESSABILITY OF DSN PDE
         LH    R5,PDSNDLTH              R5 IS LENGTH OF DSN
         BCTR  R5,0                       MINUS ONE FOR EXEC
         L     R6,PDSNDADR              R6 IS ADDRESS OF DSN
         MVC   DIDDSNAM(44),BLANKS      CLEAR THE T.U. DSNAME FIELD
         B     *+10                     BRANCH AROUND MOVES
         MVC   DIDDSNAM(0),0(R6)          MOVE DSN TO ALLOCATE T.U.
         EX    R5,*-6                   EXECUTE THE MOVE
         MVC   MYPDSNAM(44),DIDDSNAM    COPY TO OUTPUT PARM
*
ALTSTMEM TM    PDSNMFLG,X'80'           IF NO MEMBER NAME
         BNO   ALNOMEM                    GO TO NO MEMBERS PROC
*
ALMEM    LH    R5,PDSNMLTH              R5 IS LENGTH OF MEMBER NAME
         BCTR  R5,0                       MINUS ONE FOR EXEC
         L     R6,PDSNMADR              R6 IS ADDRESS OF MEMBER NAME
         MVC   DIDMEMBR(8),BLANKS       CLEAR THE T.U. MEMBER FIELD
         B     *+10                     BRANCH AROUND MOVES
         MVC   DIDMEMBR(0),0(R6)          MOVE NAME TO ALLOCATE T.U.
         EX    R5,*-6                   EXECUTE THE MOVE
         MVC   MYPMEMBR(8),DIDMEMBR     COPY TO OUTPUT PARM
         B     ALALCL                   BRANCH AROUND NO MEMBERS PROC
*
ALNOMEM  MVC   MYPMEMBR(8),BLANKS       CLEAR OUTPUT PARM FIELD
         XC    DIDMEMKY(2),DIDMEMKY     CLEAR THE KEY FOR MEMBER T.U.
*
ALALCL   MVC   DLDDDNAM(8),LISTLIT        INITIALIZE DDNAME
         GTEDAALC DLD,VERB=AL,ERRMSG=YES  ALLOCATE 'LIST' FILE
         CLC   DLDS99RC,F0                IF BAD ALLOCATION
         BNE   ALERR0C                      GO TO BAD RETURN
ALALCI   MVC   DIDDDNAM(8),INPUTLIT       INITIALIZE DDNAME
         GTEDAALC DID,VERB=AL,ERRMSG=YES  ALLOCATE 'INPUT' FILE
         CLC   DIDS99RC,F0                IF BAD ALLOCATION
         BNE   ALERR0C                      GO TO BAD RETURN
*
ALOK     B     ALEND
*
ALERR0C  LA    R15,X'0C'(0,0)           SET RETURN CODE
         ST    R15,RETCDE               SAVE IT
         B     ALEND                    GO TO END OF PROC
*
         DROP  R4                       DROP ADDRESSABILITY OF PDE
*
ALEND    L     RBAL,ALRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
         EJECT
**********************************************************************
***                                                                ***
***    UNALLOCATE THE FILES                                        ***
***                                                                ***
**********************************************************************
FREE     ST    RBAL,FRRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
FRSET    MVC   DUD(DUDLEN),DUP          INITIALIZE CONTROL BLOCKS
         GTEDASET DUD,CPPLPTR=CPPLPTR   LINK BLOCKS TOGETHER
*
FRLIST   MVC   DUDDDNAM(8),LISTLIT      RESET THE DDNAME
         GTEDAALC DUD,VERB=UN,ERRMSG=YES  FREE THE LIST FILE
*
FRINPUT  MVC   DUDDDNAM(8),INPUTLIT     RESET THE DDNAME
         GTEDAALC DUD,VERB=UN,ERRMSG=YES  FREE THE INPUT FILE
*
FREND    L     RBAL,FRRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
         EJECT
**********************************************************************
***                                                                ***
***    EXECUTE THE UTILITY SUBROUTINE                              ***
***                                                                ***
**********************************************************************
UTILITY  ST    RBAL,UTRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
UTPARM1  XC    MYPLEN,MYPLEN            ZERO THE LENGTH PARM
         XC    MYPCHAR,MYPCHAR          ZERO THE COUNT PARM
         LA    R4,PARMCHR               R4 POINTS TO PARM CHAR PDE
         USING PPDE,R4                  ADDRESSABILITY OF PDE
         TM    PPDEFLG,X'80'            IF PARMCHR OPERAND NOT USED
         BNO   UTLOAD                     BRANCH AROUND
         LH    R5,PPDELTH               R5 IS PARMCHR OPERAND LENGTH
         BCTR  R5,0                       MINUS 1 FOR EXEC
         L     R6,PPDEADR               R6 POINTS TO PARMCHR OPERAND
         DROP  R4                       DROP ADDRESSABILITY OF PDE
         MVI   MYPLEN+1,X'03'           SET LENGTH PARM
         MVC   MYPCHAR(2),XF0S          MOVE X'F0'S TO LEADING DIGITS
         LA    R4,MYPCHAR+2             R4 POINTS TO LAST DIGIT
         SR    R4,R5                    R4 POINTS TO TARGET OF MOVE
         B     *+10                     BRANCH AROUND MOVE
         MVC   0(0,R4),0(R6)              MOVE PARMCHR TO PARMLEN
         EX    R5,*-6                   EXECUTE THE MOVE
*
UTLOAD   MVC   UTILADDR(4),VPGM         MOVE VCON TO STORAGE
         CLC   VPGM,F0                  IF VCON WASN'T RESOLVED
         BNE   UTLINK                     THEN
         MVC   UTLOADL(UTLOADLN),UTLOADD    INITIALIZE LIST FOR LOAD
         LOAD  ERRET=UTERR04,SF=(E,UTLOADL) LOAD THE UTILITY
         ST    R0,UTILADDR                  PUT THE ADDR INTO STORAGE
         OI    SWITCH1,X'80'                NOTE THAT UTIL WAS LOADED
*
UTLINK   CLC   PARMTEST(2),H1           IF 'TEST' OPERAND IS USED
         BNE   *+8                        THEN
         BAL   RBAL,TEST                    PERFORM THE TEST PROC
         LA    R4,MYPLEN                ADDR OF PLEN
         ST    R4,MYPARML+00              INTO PARM ADDRESS LIST
         LA    R4,MYPDSNAM              ADDR OF DSNAME
         ST    R4,MYPARML+04              INTO PARM ADDRESS LIST
         LA    R4,MYPMEMBR              ADDR OF MEMBER NAME
         ST    R4,MYPARML+08              INTO PARM ADDRESS LIST
         OI    MYPARML+08,X'80'         MARK END OF LIST
         LA    R1,MYPARML               R1 POINTS TO PARM ADDR LIST
         L     R15,UTILADDR             R15 POINTS TO SUBROUTINE
         BALR  R14,R15                  LINK TO SUBROUTINE
         ST    R15,RETCDE               SAVE SUBROUTINE RETURN CODE
         B     UTEND                    GO TO ENDING
*
UTERR04  LA    R15,X'04'(0,0)           RETURN CODE TO R15
         ST    R15,RETCDE               PUT IT INTO RETCDE
         B     UTEND                    GO TO ENDING
*
*
UTEND    L     RBAL,UTRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
         EJECT
**********************************************************************
***                                                                ***
***    PUT OUT TEST INFORMATION                                    ***
***                                                                ***
**********************************************************************
TEST     ST    RBAL,TERBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         L     R4,UTILADDR              R4 POINTS TO UTILITY
         TPUT  (R4),48                  PRINT AROUND EYECATCHER
*
         TM    SWITCH1,X'80'            IF UTILITY WAS LOADED
         BNO   *+12                       THEN
         LA    R4,UTLOADMS                  POINT TO 'LOADED' MSG
         B     *+8                      ELSE
         LA    R4,UTNOLOAD                  POINT TO 'NOT LOADED' MSG
         TPUT  (R4),47                  WRITE THE MESSAGE
         TPUT  BLANKS,1                 WRITE A BLANK LINE
*
TEEND    L     RBAL,TERBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
         EJECT
**********************************************************************
***                                                                ***
***   DATA CONSTANTS                                               ***
***                                                                ***
**********************************************************************
CONSTDTA DS    0D                       AREA FOR DATA CONSTANTS
VPARMPCL DC    V(PARMPCL)               ADDR OF PARM CONTROL LIST
*
INPUTLIT DC    CL8'INPUT'               INPUT DDNAME
LISTLIT  DC    CL8'LIST'                OUTPUT DDNAME
VPGM     DC    V(HEXPRINT)              ADDR OF CALLED UTILITY PGM
UTILNAME DC    CL8'HEXPRINT'            MUST BE CL8, (BLANK PAD OKAY)
*
UTLOADD  LOAD EPLOC=UTILNAME,SF=L       DATA FOR LOAD PARM LIST
*
BLANKS   DC    CL80' '                  LITERAL
F0       DC    F'0'                     CONSTANT
F12      DC    F'12'                    CONSTANT
H1       DC    H'1'                     CONSTANT
XF0S     DC    X'F0F0'                  LITERAL
UTLOADMS DC    CL47'--- Utility was loaded during execution ---    '
UTNOLOAD DC    CL47'--- Utility was NOT loaded during execution ---'
*
DUP      GTEDADAT DDNAM=X
DIP      GTEDADAT DSNAM=X,DDNAM=X,STATS=SHR,NDISP=KEEP,CDISP=KEEP,     X
               MEMBR=X
DLP      GTEDADAT DDNAM=X,TERM=YES
*
CONSTEND DS    0D
CONSTLEN EQU   *-CONSTDTA               TOTAL LENGTH OF CONSTANTS
*
         EJECT
**********************************************************************
***                                                                ***
***    COMMAND OPERANDS                                            ***
***                                                                ***
***                                                                ***
***         SYNTAX -                                               ***
***                                                                ***
***           XPRINT  dataset-name  record-limit  NOTEST           ***
***                                               TEST             ***
***                                                                ***
***           REQUIRED:  dataset-name                              ***
***           DEFAULTS:  NOTEST                                    ***
***                                                                ***
**********************************************************************
PARMPCL  IKJPARM  DSECT=PARMPDL
*
PARMDSN  IKJPOSIT DSNAME,                                              X
               USID,                                                   X
               PROMPT='the name of the dataset you want to list',      X
               HELP=('1-44 character DSNAME with optional member name')
*
PARMCHR  IKJIDENT 'Record count',                                      X
               MAXLNTH=3,                                              X
               FIRST=NUMERIC,OTHER=NUMERIC,                            X
               HELP=('number of records to print (0-999) +',           X
               'null if you want the whole file to print')
*
PARMTEST IKJKEYWD DEFAULT='NOTEST'
         IKJNAME  'TEST'
         IKJNAME  'NOTEST'
*
         IKJENDP
*
         EJECT
**********************************************************************
***                                                                ***
***   DATA AREA IN SUBPOOL 000                                     ***
***                                                                ***
**********************************************************************
WORKD    DSECT                          AREA-13 FOR VARIABLES
MYSAVE   DS    18F                      REGISTER SAVE AREA
CPPLPTR  DS    F                        INITIAL VALUE OF R1 (CPPLADDR)
RETCDE   DS    F                        INTERNAL RETURN CODE
COMPCODE DS    F                        PROGRAM COMPLETION CODE
*
PPRBALSV DS    F                        RETURN ADDRESS SAVE AREA
PARBALSV DS    F                        RETURN ADDRESS SAVE AREA
ALRBALSV DS    F                        RETURN ADDRESS SAVE AREA
FRRBALSV DS    F                        RETURN ADDRESS SAVE AREA
UTRBALSV DS    F                        RETURN ADDRESS SAVE AREA
TERBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
UTILADDR DS    F                        ADDRESS OF UTILITY ROUTINE
*
MYPPL    DS    7F                       PARSE PARAMETER LIST
MYECB    DS    F                        ECB FOR PARSE
MYANS    DS    F                        POINTER TO THE PDL
*
DUD      GTEDADAT MAP=ONLY,DDNAM=X
DID      GTEDADAT MAP=ONLY,DSNAM=X,DDNAM=X,STATS=SHR,NDISP=KEEP,       X
               CDISP=KEEP,MEMBR=X
DLD      GTEDADAT MAP=ONLY,DDNAM=X,TERM=YES
*
UTLOADL  LOAD SF=L                      LOAD PARM LIST
UTLOADLN EQU  *-UTLOADL
*
SWITCH1  DS    B'00000000'              SWITCHES
*                1.......                 UTILITY LOADED DURING RUN
*                .1111111                 (NOT USED)
*
         DS    0D
MYPARML  DS    A                        ADDRESS OF MYPARM
         DS    A                        ADDRESS OF MYPDSNAM
         DS    A                        ADDRESS OF MYPMEMBR
*
MYPARM   DS    0D                       PARM TO PASS TO UTILITY
MYPLEN   DS    H                          LENGTH
MYPCHAR  DS    CL100                      DATA
MYPDSNAM DS    CL44                     DATASET NAME FROM PARM
MYPMEMBR DS    CL8                      MEMBER NAME FROM PARM
*
WORKDEND DS    0D
WORKDLEN EQU   *-WORKD                  TOTAL LENGTH OF WORK-13 AREA
         EJECT
**********************************************************************
***                                                                ***
***   MAPPING MACROS                                               ***
***                                                                ***
**********************************************************************
         CVT   DSECT=YES              , CVTMAP FOR IKJPARS
         PRINT GEN
         IKJCPPL                        COMMAND PROCESSOR PARM LIST
         IKJPPL                         PARSE PARM LIST
         PRINT NOGEN
         IEFZB4D0
         IKJEFFDF DFDSECT=YES,DFDSEC2=YES
         IHADCB DSORG=PO,DEVD=DA
         EJECT
**********************************************************************
***                                                                ***
***   OTHER DSECTS                                                 ***
***                                                                ***
**********************************************************************
PDSN     DSECT                          PDE FOR DSNAME
PDSNDADR DS    AL4                        ADDRESS OF DSN
PDSNDLTH DS    H                          LENGTH OF DSN
PDSNDFLG DS    BL1                        FLAG BITS
         DS    XL1                        RESERVED
PDSNMADR DS    AL4                        ADDRESS OF MEMBER NAME
PDSNMLTH DS    H                          LENGTH OF MEMBER NAME
PDSNMFLG DS    BL1                        FLAG BITS
         DS    XL1                        RESERVED
PDSNPADR DS    AL4                        ADDRESS OF PASSWORD
PDSNPLTH DS    H                          LENGTH OF PASSWORD
PDSNPFLG DS    BL1                        FLAG BITS
         DS    XL1                        RESERVED
PDSNNEXT DS    AL4                        NEXT PDE ADDRESS IN LIST
         SPACE 3
PPDE     DSECT                          PDE FOR IKJIDENT OR IKJPOSIT
PPDEADR  DS    AL4                        ADDRESS
PPDELTH  DS    H                          LENGTH
PPDEFLG  DS    BL1                        FLAG BITS
         DS    XL1                        RESERVED
         EJECT
**********************************************************************
***                                                                ***
***   EQUATES                                                      ***
***                                                                ***
**********************************************************************
RBASE    EQU   12                       BASE REGISTER
RBAL     EQU   10                       BAL REGISTER
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
