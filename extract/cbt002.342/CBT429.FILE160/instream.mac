         TITLE 'INSTREAM - GET INPUT FROM TERMINAL OR CLIST'
**********************************************************************
***                                                                ***
***                INSTREAM COMMAND  (ALIAS INS)                   ***
***                                                                ***
***  GENERAL FUNCTION:                                             ***
***                                                                ***
***      THIS COMMAND GETS INPUT FROM THE TERMINAL OR CLIST        ***
***      COMMAND STACK AND WRITES IT TO A TEMPORARY DATASET        ***
***      ALLOCATED TO A FILE NAME AND TEMPORARY DATASET NAME.      ***
***      THE DEFAULTS ARE DATASET NAME &&SYSIN AND FILE NAME       ***
***      SYSIN.  THE TEMPORARY DATASET NAME WILL MATCH THE         ***
***      FILE NAME.                                                ***
***                                                                ***
***  FORMAT:                                                       ***
***                                                                ***
***    INSTREAM   DDNAME(NAME)  END(STRING)  CAPS  NOTIFY          ***
***    IN           FILE(NAME)               ASIS  NONOTIFY        ***
***                                                                ***
***  REQUIRED:                                                     ***
***    NONE                                                        ***
***                                                                ***
***  DEFAULTS:                                                     ***
***    DDNAME(SYSIN) END(END) CAPS NOTIFY                          ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  RETURN CODES -                                                ***
***       00 - NORMAL COMPLETION                                   ***
***   NON-00 - CORRESPOND TO ERROR MESSAGES                        ***
***                                                                ***
***  REGISTER USAGE                                                ***
***                                                                ***
***      R0-R1 - MACROS, LINKAGE CONVENTIONS                       ***
***      R2-R3 - MACROS, WORK                                      ***
***      R4-R6 - WORK                                              ***
***      R7-R8 - << NOT USED >>                                    ***
***         R9 - BASE FOR PARM DESCRIPTOR LIST CREATED BY PARSE    ***
***        R10 - BAL REGISTER                                      ***
***        R11 - BASE FOR WORK1 PROGRAM VARIABLES AREA             ***
***        R12 - BASE FOR PROGRAM                                  ***
***        R13 - BASE OF WORK0 AREA, REG SAVE AREA AND CODES       ***
***        R14 - MACROS, LINKAGE CONVENTIONS                       ***
***        R15 - MACROS, WORK, LINKAGE CONVENTIONS                 ***
***          +---------------------------------------------+       ***
***          ×  EXCEPT FOR BASE REGISTERS, DATA IS NEVER   ×       ***
***          ×  PASSED IN REGISTERS BETWEEN SUBSECTIONS OF ×       ***
***          ×  CODE.                                      ×       ***
***          +---------------------------------------------+       ***
***                                                                ***
***  NON-IBM MACROS USED:                                          ***
***     LINKSAVE - LINKAGE CONVENTIONS IN                          ***
***     EQ$R     - REGISTER EQUATES                                ***
***     LINKBACK - LINKAGE CONVENTIONS BACK                        ***
***     GTEDADAT - CREATE SVC-99 AND IKJEFF18 CONTROL BLOCKS       ***
***     GTEDASET - INITIALIZE AND LINK SVC-99 AND IKJEFF18 CONTROL ***
***                BLOCKS                                          ***
***     GTEDAALC - PERFORM DYNAMIC ALLOCATION AND DAIRFAIL         ***
***                ANALYSIS OF FAILURES                            ***
***                                                                ***
***  ASSEMBLER OPTIONS:       RENT                                 ***
***  LINKAGE EDITOR OPTIONS:  RENT, REUS, REFR, ALIAS(SAFEC)       ***
***                                                                ***
***  CULPRIT:                                                      ***
***     CHUCK HOFFMAN                                              ***
***     USER SERVICES CENTER                                       ***
***     BUREAU OF SYSTEMS OPERATIONS (BSO)                         ***
***     OFFICE OF MANAGEMENT INFORMATION SYSTEMS (OMIS)            ***
***     EXECUTIVE OFFICE FOR ADMINISTRATION AND FINANCE (A&F)      ***
***     COMMONWEALTH OF MASSACHUSETTS                              ***
***     ONE ASHBURTON PLACE, ROOM 1619                             ***
***     BOSTON, MA  02108                                          ***
***                                 (617) 727-5725                 ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  MAINTENANCE HISTORY:                                          ***
***                                                                ***
***                                                                ***
**********************************************************************
         EJECT
         PRINT NOGEN
**********************************************************************
***                                                                ***
***   PROLOGUE                                                     ***
***                                                                ***
**********************************************************************
*
INSTREAM LINKSAVE BASE=12,GETMAIN=YES
         EQ$R
         USING WORK0,R13                ADDRESSABILITY OF WORK0
         USING PARMPDL,R9               ADDRESSABILITY OF PRM DESC LST
         ST    R1,CPPLPTR               SAVE CPPL POINTER
         GETMAIN  R,LV=WORK1LEN         GET MAIN STORAGE
         LR    R11,R1                   ADDRESS OF MAIN STORAGE
         USING WORK1,R11                ADDRESSABILITY OF WORK1
         XC    COMPCODE,COMPCODE        CLEAR PROGRAM RETURN CODE
         XC    RETCDE,RETCDE            CLEAR INTERNAL RETURN CODE
         B     MAINLINE
*
         EJECT
**********************************************************************
***                                                                ***
***   MAIN LINE ROUTINE                                            ***
***                                                                ***
**********************************************************************
*
MAINLINE BAL   R10,PPLSETUP             SET UP PARSE PARM LIST
         BAL   R10,PARSE                PARSE THE INPUT PARAMETERS
*
         BAL   R10,IOPLSET              SET UP IOPL AND GTPB
*
         BAL   R10,GETPARMS             GET THE PARMS
*
         BAL   R10,ALLOCOUT             ALLOCATE THE OUTPUT DATASET
         CLC   RETCDE(4),DZIPS          IF RETCDE 0
         BE    *+14                       BRANCH AROUND
         MVC   COMPCODE(4),RETCDE       ELSE SET COMPLETION CODE
         B     ENDING                     AND BRANCH TO ENDING
*
         BAL   R10,OPENSETS             OPEN THE DATASETS
         CLC   RETCDE(4),DZIPS          IF RETCDE 0
         BE    *+14                       BRANCH AROUND
         MVC   COMPCODE(4),RETCDE       ELSE SET COMPLETION CODE
         B     ENDING                     AND BRANCH TO ENDING
*
         BAL   R10,COPY                 COPY THE DATA
         CLC   RETCDE(4),DZIPS          IF RETCDE 0
         BE    *+14                       BRANCH AROUND
         MVC   COMPCODE(4),RETCDE       ELSE SET COMPLETION CODE
*
         BAL   R10,CLOSSETS             CLOSE THE DATASETS
*
         B     ENDING                   BRANCH TO ENDING
         EJECT
**********************************************************************
***                                                                ***
***   EPILOGUE                                                     ***
***                                                                ***
**********************************************************************
ENDING   LA       R4,MYPPL+(PPLANS-PPL)   ADDRESS OF PTR TO PDL
         L        R4,0(0,R4)              R4 POINTS TO PDL
         IKJRLSA  (R4)                    FREE STORAGE OF PDL
*
         CLC      COMPCODE,DZIPS          IF COMPLETION CODE NOT ZERO
         BNE      ENDFREE                   BRANCH TO ENDING
*
         TM       SWITCH1,X'02'           IF 'NONOTIFY' SELECTED
         BO       ENDFREE                   BRANCH TO ENDING
         XC       RETCDE,RETCDE           ELSE SET CODE=00 FOR MSG 00
         BAL      R10,MSGPUT                AND PUT OUT MESSAGE
*
ENDFREE  FREEMAIN R,LV=WORK1LEN,A=(R11) , FREE MAIN STORAGE
         LINKBACK RCADDR=COMPCODE
*
         EJECT
**********************************************************************
***                                                                ***
***        CREATE PARSE PARAMETER LIST                             ***
***                                                                ***
**********************************************************************
PPLSETUP ST    R10,PPR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         L     R4,CPPLPTR               ADDRESS OF CMD PROC PARM LIST
         USING CPPL,R4                    ADDRESSABILITY
         MVC   MYPPL+(PPLUPT-PPL)(4),CPPLUPT              UPT  (CPPL)
         MVC   MYPPL+(PPLECT-PPL)(4),CPPLECT              ECT  (CPPL)
         LA    R5,MYECB
         ST    R5,MYPPL+(PPLECB-PPL)                      ECB  (MINE)
         MVC   MYPPL+(PPLPCL-PPL)(4),VPARMPCL             PCL  (CSECT)
         LA    R5,MYANS
         ST    R5,MYPPL+(PPLANS-PPL)                      ANS  (MINE)
         MVC   MYPPL+(PPLCBUF-PPL)(4),CPPLCBUF            CBUF (CPPL)
         XC    MYPPL+(PPLUWA-PPL)(4),MYPPL+(PPLUWA-PPL)   UWA  (MINE)
         DROP  R4
*
PPEND    L     R10,PPR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    PARSE THE INPUT PARAMETER STRING                            ***
***                                                                ***
**********************************************************************
PARSE    ST    R10,PAR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         XC    MYECB,MYECB              ZERO THE ECB FOR PARSE
PARSEIT  CALLTSSR EP=IKJPARS,MF=(E,MYPPL)  PARSE THE PARMS
         L     R9,MYPPL+(PPLANS-PPL)    POINTER TO PDL ADDRESS
         L     R9,0(0,R9)               ADDRESSABILITY OF PDL
*
PAEND    L     R10,PAR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    SET UP THE INPUT OUTPUT PARM LIST.                          ***
***                                                                ***
***    IOPLIOPB, THE ADDR OF THE GETLINE/PUTLINE/PUTGET PARM       ***
***    BLOCK WILL BE FILLED IN BEFORE EACH GETLINE/PUTLINE/PUTGET. ***
***                                                                ***
***    INITIALIZE MY GETLINE PARM BLOCK.                           ***
***    INITIALIZE MY PUTLINE PARM BLOCK.                           ***
***    INITIALIZE MY OUTPUT LINE DESCRIPTOR BLOCK.                 ***
***                                                                ***
**********************************************************************
IOPLSET  ST    R10,IOR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         L     R4,CPPLPTR               R4 POINTS TO CPPL
         USING CPPL,R4                  ADDRESSABILITY
         LA    R5,MYIOPL                R5 POINTS TO IOPL
         USING IOPL,R5                  ADDRESSABILITY
*
         MVC   IOPLUPT(4),CPPLUPT       GET ADDR OF UPT FROM CPPL
         MVC   IOPLECT(4),CPPLECT       GET ADDR OF ECT FROM CPPL
         LA    R6,MYECB                 ADDR OF MY ECB
         ST    R6,IOPLECB                 SET IN IOPL
         XC    IOPLIOPB(4),IOPLIOPB     CLEAR IOPB ADDRESS
*
         MVC   MYGTPB(8),GTPBPROT       INITIALIZE MY GTPB
*
         MVC   MYPTPB(12),PTPBPROT      INITIALIZE MY PTPB
*
         MVC   MYOLD(8),OLDPROT         INITIALIZE MY OLD
*
IOEND    L     R10,IOR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
*
         DROP  R4
         DROP  R5
*
         EJECT
**********************************************************************
***                                                                ***
***    GET THE PARMS                                               ***
***                                                                ***
**********************************************************************
GETPARMS ST    R10,GER10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
GECAPS   CLC   KCAPS,H1                 IF CAPS OPERAND IN USE
         BNE   *+8                        THEN
         OI    SWITCH1,X'04'              TURN ON 'CAPS' SWITCH
*
GENOTE   CLC   KNOTE,H2                 IF NONOTIFY OPERAND IN USE
         BNE   *+8                        THEN
         OI    SWITCH1,X'02'              TURN ON 'NONOTIFY' SWITCH
*
GEND     L     R4,SBENDCH               R4 POINTS TO END CHARACTERS
         LH    R5,SBENDCH+4             R5 IS LENGTH OF END CHARS
         XC    ENDWORD(12),ENDWORD      CLEAR END WORD
         A     R5,F4                    R5 IS LENGTH OF END INPUT
         STH   R5,ENDWORD               SAVE THE LENGTH
         S     R5,F5                    R5 IS LENGTH-1 OF CHARS
         B     *+10                     BRANCH AROUND MOVE
         MVC   ENDWORD+4(0),0(R4)         MOVE CHARS TO STORAGE
         EX    R5,*-6                   EXECUTE THE MOVE
         TM    SWITCH1,X'04'            IF 'CAPS' NOT SELECTED
         BNO   GEFILE                     GO TO NEXT ROUTINE
         B     *+10                     BRANCH AROUND CAPITALIZE
         TR    ENDWORD+4(0),CAPTABL       CAPITALIZE
         EX    R5,*-6                   EXECUTE THE CAPITALIZE
*
GEFILE   L     R4,SBFILCH               R4 POINTS TO DDNAME
         LH    R5,SBFILCH+4             R5 IS LENGTH OF DDNAME
         BCTR  R5,0                       MINUS 1 FOR EXEC
         MVC   DDNIN(8),BLANKS          CLEAR THE DDNAME FIELD
         B     *+10                     BRANCH AROUND MOVE
         MVC   DDNIN(0),0(R4)             MOVE DDNAME TO STORAGE
         EX    R5,*-6                   EXECUTE THE MOVE
*
GEEND    L     R10,GER10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    ALLOCATE THE OUTPUT DATASET                                 ***
***                                                                ***
**********************************************************************
ALLOCOUT ST    R10,ALR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   DDB(DDBLEN),DD2          INITIALIZE CONTROL BLOCKS
         MVC   DDBDDNAM(8),DDNIN        INSERT THE DDNAME
         GTEDASET DDB,CPPLPTR=CPPLPTR   LINK BLOCKS TOGETHER
         GTEDAALC DDB,VERB=UN,ERRMSG=NO UNALLOCATE OUTPUT FILE
*
         MVC   DDA(256),DD1             INITIALIZE THE CONTROL
         MVC   DDA+256(DDALEN-256),DD1+256  BLOCKS FOR SVC99/DAIRFAIL
         MVC   DDADDNAM(8),DDNIN        INSERT THE DDNAME
         MVC   DDADSNAM+2(8),DDNIN      CONSTRUCT DSN AS &&DDNAME
ALSET    GTEDASET DDA,CPPLPTR=CPPLPTR   LINK BLOCKS TOGETHER
ALALC    GTEDAALC DDA,VERB=AL           ALLOCATE THE DATASET
ALRETCK  CLC   DDAS99RC(4),DZIPS        IF RETURN NOT ZERO
         BNE   ALERR04                    GO TO ERROR
         B     ALEND
*
ALERR04  LA    R15,X'04'(0,0)           CONSTANT TO R15
         ST    R15,RETCDE               SET INTERNAL RETURN CODE
         BAL   R10,MSGPUT               PUT OUT THE MESSAGE
         B     ALEND                    GO TO ENDING
*
ALEND    L     R10,ALR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    OPEN THE OUTPUT DATASET                                     ***
***                                                                ***
**********************************************************************
OPENSETS ST    R10,OPR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         LA    R4,OUTDCB                R5 POINTS TO OUTPUT DCB
         USING IHADCB,R4                ADDRESSABILITY OF DCB
*
         MVC   OUTDCB(DCBOLEN),DCBPROTO INITIALIZE THE DCB
         MVC   DCBDDNAM(8),DDNIN        SET THE DDNAME
*
OPENOUT  MVC   OPENLIST(4),OPENLO       MOVE OPTIONS TO LIST
         LA    R5,OUTDCB                ADDRESS OF OUTPUT DCB
         STCM  R5,7,OPENLIST+1            INTO OPEN PARM LIST
         OPEN  MF=(E,OPENLIST)        , OPEN THE DATASET
         TM    DCBOFLGS,X'10'           IF NOT SUCCESSFUL
         BZ    OPERR08                    GO TO ERROR ROUTINE
         B     OPEND                    ELSE GO TO ENDING
*
         DROP  R4
*
OPERR08  LA    R15,X'08'(0,0)           CONSTANT TO R15
         ST    R15,RETCDE               SET INTERNAL RETURN CODE
         BAL   R10,MSGPUT               PUT OUT THE MESSAGE
         B     OPEND                    GO TO ENDING
*
OPEND    L     R10,OPR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***   CLOSE THE DATASETS                                           ***
***                                                                ***
**********************************************************************
CLOSSETS ST    R10,CLR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
CLOSOUT  LA    R4,OUTDCB                ADDRESS OF INPUT DCB
         MVC   CLOSLIST(4),CLOSPRTO     INITIALIZE PARM LIST
         CLOSE ((R4)),MF=(E,CLOSLIST)   CLOSE THE DATASETS
         LTR   R15,R15                  IF RETURN CODE NOT ZERO
         BNZ   CLERR0C                    GO TO ERROR ROUTINE
*
         B     CLEND
*
CLERR0C  LA    R15,X'0C'(0,0)           CONSTANT TO R15
         ST    R15,RETCDE               SET INTERNAL RETURN CODE
         BAL   R10,MSGPUT               PUT OUT THE MESSAGE
         B     CLEND                    GO TO ENDING
*
CLEND    L     R10,CLR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***     PERFORM THE DATA COPY                                      ***
***                                                                ***
**********************************************************************
COPY     ST    R10,COR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
COGET    BAL   R10,GTREC                GET A RECORD
         CLC   RETCDE(4),DZIPS          IF RETURN NOT ZERO
         BNE   COEOF                      TERMINATE INPUT
COPUT    BAL   R10,PTREC                PUT THE RECORD
         B     COGET                    LOOP BACK UNTIL END OF FILE
*
COEOF    B     COEND                    END OF FILE
*
COEND    L     R10,COR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***     GET AN INPUT RECORD                                        ***
***                                                                ***
***     GTTRM  IS USED TO GET DATA FROM THE KEYBOARD OR DATA       ***
***       STACKED INSTREAM BY A CLIST.                             ***
***                                                                ***
**********************************************************************
GTREC    ST    R10,GTR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
GTTRM    GETLINE PARM=MYGTPB,MF=(E,MYIOPL)  GET ONE LINE FROM STACK
         C     R15,F4                   IF RETURN CODE GREATER THAN 4
         BH    GTERR10                    BRANCH TO ERROR ROUTINE
         L     R4,MYGTPB+4              R4 POINTS TO INPUT AREA
         LH    R1,0(0,R4)               R1 IS TOTAL LENGTH OF INPUT
         C     R1,F4                    IF INPUT IS 4 CHARS (NULL LINE)
         BNH   COEOF                      BRANCH TO EODAD POINT
*
         XC    ENDCK(12),ENDCK          CLEAR THE WORK AREA
         LH    R2,ENDWORD               R2 IS LENGTH OF AREA
         BCTR  R2,0                       MINUS ONE FOR EXECS TO FOLLOW
         B     *+10                     BRANCH AROUND MOVE
         MVC   ENDCK(0),0(R4)             MOVE TO CHECK WORD AREA
         EX    R2,*-6                   EXECUTE THE MOVE
*
         TM    SWITCH1,X'04'            IF 'CAPS' NOT SELECTED
         BNO   GTCOMPAR                   BRANCH TO COMPARE
         B     *+10                     BRANCH AROUND CAPITALIZE
         TR    ENDCK(0),CAPTABL           CAPITALIZE
         EX    R2,*-6                   EXECUTE THE CAPITALIZE
*
GTCOMPAR B     *+10                     BRANCH AROUND COMPARE
         CLC   ENDCK(0),ENDWORD           COMPARE WITH ENDWORD
         EX    R2,*-6                   EXECUTE THE COMPARE
         BE    COEOF                    IF INPUT EQUAL ENDWORD: EOF
*
         STH   R1,LRECLI                SAVE THE INPUT LENGTH
         MVC   DATAWK24(80),BLANKS      CLEAR THE OUTPUT AREA
         S     R1,F5                    R1 IS LEN -1 OF CHARACTERS
         B     *+10                     BRANCH AROUND EXECUTED INSTR
         MVC   DATAWK24(0),4(R4)          MOVE DATA TO OUTPUT AREA
         EX    R1,*-6                   EXECUTE THE MOVE
         TM    SWITCH1,X'04'            IF 'CAPS' NOT SELECTED
         BNO   GTEND                      BRANCH TO ENDING
         B     *+10                     BRANCH AROUND CAPITALIZE
         TR    DATAWK24(0),CAPTABL        CAPITALIZE
         EX    R1,*-6                   EXECUTE THE CAPITALIZE
         B     GTEND                    GO TO ENDING
*
GTERR10  LA    R15,X'10'(0,0)           CONSTANT TO R15
         ST    R15,RETCDE               SET INTERNAL RETURN CODE
         BAL   R10,MSGPUT               PUT OUT THE MESSAGE
         B     GTEND                    GO TO ENDING
*
GTEND    L     R10,GTR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***     PUT AN OUTPUT RECORD                                       ***
***                                                                ***
**********************************************************************
PTREC    ST    R10,PTR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         LA    R4,DATAWK24              ADDRESS OF OUTPUT AREA
         PUT   OUTDCB,(R4)              PUT THE RECORD
*
PTEND    L     R10,PTR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***     PUT A PUTLINE MESSAGE                                      ***
***                                                                ***
***                                                                ***
***   +++  NOTE, RETCDE IS AN INPUT ARGUMENT.  IS NOT ZEROED.      ***
***                                                                ***
**********************************************************************
MSGPUT   ST    R10,MSR10SAV             SAVE RETURN ADDRESS
*
         L     R4,RETCDE                R4 HAS OFFSET (MESSAGE NUMBER)
         L     R4,MSGTBLA(R4)           R4 HAS ADDR OF MESSAGE
         ST    R4,MYOLD+4               ADDRESS INTO O.L.D.
*
         PUTLINE PARM=MYPTPB,OUTPUT=MYOLD,MF=(E,MYIOPL)
*
MSEND    L     R10,MSR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***   DATA CONSTANTS                                               ***
***                                                                ***
**********************************************************************
CONSTDTA DS    0D                       AREA FOR DATA CONSTANTS
VPARMPCL DC    V(PARMPCL)               ADDR OF PARM CONTROL LIST
DZIPS    DS    0D                       DOUBLE WORD OF ZEROES
         DC    2F'0'
BLANKS   DC    CL80' '                  10 DOUBLE WORDS OF BLANKS
*
DD1      GTEDADAT  DDNAM=X,STATS=NEW,NDISP=PASS,CDISP=DELETE,          X
               TRK=YES,PRIME=1,SECND=1,BLKSZ=80,DSORG=PS,LRECL=80,     X
               RECFM=F,UNIT=DISK,DSNAM=&&&&
*
DD2      GTEDADAT  DDNAM=X,UNALC=X
*
MSGTBLA  DC    A(MSG00),A(MSG04),A(MSG08),A(MSG0C)
         DC    A(MSG10)
*
         DS    0D
DCBPROTO DCB   DSORG=PS,MACRF=PM
DCBOLEN  EQU   *-DCBPROTO
*
OPENLO   OPEN  (,(OUTPUT)),MF=L
CLOSPRTO CLOSE (),MF=L                  CLOSE PARM LIST, OUTPUT FILE
F4       DC    F'4'                     CONSTANT
F5       DC    F'5'                     CONSTANT
F8       DC    F'8'                     CONSTANT
F12      DC    F'12'                    CONSTANT
F320     DC    F'320'                   CONSTANT
H1       DC    H'1'                     CONSTANT
H2       DC    H'2'                     CONSTANT
GTPBPROT GETLINE MF=L
PTPBPROT PUTLINE MF=L
OLDPROT  DC    F'1',A(0)
*SG--  DC  H'--',H'0',C'INS00--E .+....2....+....3....+....4....+....5.X
               ...+....6....+....7
MSG00  DC  H'40',H'0',C'INS0000I INSTREAM OPERATION COMPLETE'
MSG04  DC  H'51',H'0',C'INS0004E UNABLE TO ALLOCATE OUTPUT FILE/DD NAMEX
               '
MSG08  DC  H'39',H'0',C'INS0008E UNABLE TO OPEN OUTPUT FILE'
MSG0C  DC  H'40',H'0',C'INS000CE UNABLE TO CLOSE OUTPUT FILE'
MSG10  DC  H'55',H'0',C'INS0010E UNABLE TO READ DATA FROM TERMINAL OR CX
               LIST'
*
CAPTABL  DC    XL16'000102030405060708090A0B0C0D0E0F'
         DC    XL16'101112131415161718191A1B1C1D1E1F'
         DC    XL16'202122232425262728292A2B2C2D2E2F'
         DC    XL16'303132333435363738393A3B3C3D3E3F'
         DC    XL16'404142434445464748494A4B4C4D4E4F'
         DC    XL16'505152535455565758595A5B5C5D5E5F'
         DC    XL16'606162636465666768696A6B6C6D6E6F'
         DC    XL16'707172737475767778797A7B7C7D7E7F'
         DC    X'80',C'ABCDEFGHI',X'8A8B8C8D8E8F'
         DC    X'90',C'JKLMNOPQR',X'9A9B9C9D9E9F'
         DC    X'A0A1',C'STUVWXYZ',X'AAABACADAEAF'
         DC    XL16'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    XL16'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
*
CONSTEND DS    0D
CONSTLEN EQU   *-CONSTDTA               TOTAL LENGTH OF CONSTANTS
*
         EJECT
**********************************************************************
***                                                                ***
***    COMMAND OPERANDS                                            ***
***                                                                ***
**********************************************************************
PARMPCL  IKJPARM  DSECT=PARMPDL
*
KEND     IKJKEYWD DEFAULT='END'
         IKJNAME 'END',SUBFLD=SUBEND
*
KFILE    IKJKEYWD DEFAULT='FILE'
         IKJNAME 'FILE',SUBFLD=SUBFILE,ALIAS=('DDNAME')
*
KCAPS    IKJKEYWD DEFAULT='CAPS'
         IKJNAME 'CAPS'
         IKJNAME 'ASIS'
*
KNOTE    IKJKEYWD DEFAULT='NOTIFY'
         IKJNAME 'NOTIFY'
         IKJNAME 'NONOTIFY'
*
SUBEND   IKJSUBF
SBENDCH  IKJIDENT 'END OF FILE INDICATOR',                             X
               ASIS,MAXLNTH=8,FIRST=ANY,OTHER=ANY,                     X
               HELP='1-8 CHARACTERS (DEFAULT: END)',                   X
               DEFAULT='END'
*
SUBFILE  IKJSUBF
SBFILCH  IKJPOSIT DSNAME,DDNAM,                                        X
               DEFAULT='SYSIN',                                        X
               HELP='1-8 CHARACTER FILE NAME (DEFAULT: SYSIN)'
*
         IKJENDP
*
         EJECT
**********************************************************************
***                                                                ***
***   DATA AREA OBTAINED WITH LINKSAVE                             ***
***                                                                ***
**********************************************************************
WORK0    DSECT                          AREA-0 FOR VARIABLES
MYSAVE   DS    18F                      REGISTER SAVE AREA
CPPLPTR  DS    F                        INITIAL VALUE OF R1 (CPPLADDR)
RETCDE   DS    F                        INTERNAL RETURN CODE
COMPCODE DS    F                        PROGRAM COMPLETION CODE
*
         EJECT
**********************************************************************
***                                                                ***
***  DATA VARIABLES                                                ***
***                                                                ***
**********************************************************************
WORK1    DSECT                          AREA-1 FOR VARIABLES
PPR10SAV DS    F                        RETURN ADDRESS SAVE AREA
PAR10SAV DS    F                        RETURN ADDRESS SAVE AREA
IOR10SAV DS    F                        RETURN ADDRESS SAVE AREA
GER10SAV DS    F                        RETURN ADDRESS SAVE AREA
ALR10SAV DS    F                        RETURN ADDRESS SAVE AREA
OPR10SAV DS    F                        RETURN ADDRESS SAVE AREA
CLR10SAV DS    F                        RETURN ADDRESS SAVE AREA
COR10SAV DS    F                        RETURN ADDRESS SAVE AREA
GTR10SAV DS    F                        RETURN ADDRESS SAVE AREA
PTR10SAV DS    F                        RETURN ADDRESS SAVE AREA
MSR10SAV DS    F                        RETURN ADDRESS SAVE AREA
MYPPL    DS    7F                       PARSE PARAMETER LIST
MYECB    DS    F                        ECB FOR PARSE
MYANS    DS    F                        POINTER TO THE PDL
MYIOPL   DS    4F                       IOP LIST FOR PUT/GET LINE
MYPTPB   DS    3F                       PUTLINE PARM BLOCK
MYGTPB   DS    2F                       GETLINE PARM BLOCK
MYOLD    DS    2F                       OUTPUT LINE DESCRIPTR BLOCK
DDNIN    DS    CL8                      INPUT DDNAME
*
DDA      GTEDADAT  MAP=ONLY,                                           X
               DDNAM=X,STATS=NEW,NDISP=PASS,CDISP=DELETE,              X
               TRK=YES,PRIME=1,SECND=1,BLKSZ=80,DSORG=PS,LRECL=80,     X
               RECFM=F,UNIT=DISK,DSNAM=&&&&
DDB      GTEDADAT  MAP=ONLY,DDNAM=X,UNALC=X
OPENLIST DS    2F                       PARM LIST FOR OPEN
CLOSLIST DS    F                        PARM LIST FOR CLOSE
OUTDCB   DCB   DSORG=PS,MACRF=PM
LRECLI   DS    H                        INPUT LRECL
SWITCH1  DC    B'00000000'              SWITCHES AREA #1
*                .....1..   X'04'         'CAPS' OPERAND IS IN USE
*                ......1.   X'02'         'NONOTIFY' OPERAND IS IN USE
*
         DS    0F                       ALIGN
ENDWORD  DS    0XL12                    LITERAL FOR 'END'
         DS    H                          TOTAL LENGTH (CHARS+4)
         DS    H                          X'0000' OFFSET
         DS    CL8                        CHARACTERS FROM PARM
ENDCK    DS    CL12                     WORK AREA FOR 'END'
*
TEMPNUM  DS    CL8                      TEMP STORAGE FOR LINE NUMBER
OUTBEGIN DS    F
*
DATAWK24 DS    XL320                    OUTPUT AREA
*
WORK1END DS    0D
WORK1LEN EQU   *-WORK1                  TOTAL LENGTH OF WORK-1 AREA
         EJECT
**********************************************************************
***                                                                ***
***   MAPPING MACROS                                               ***
***                                                                ***
**********************************************************************
         CVT   DSECT=YES              , CVTMAP FOR IKJPARS
         IKJCPPL                        COMMAND PROCESSOR PARM LIST
         IKJPPL                         PARSE PARM LIST
         IKJIOPL                        IO PARM LIST FOR GET/PUTLINE
         IKJGTPB                        GETLINE PARM BLOCK
         IKJPTPB                        PUTLINE PARM BLOCK
         IEFZB4D0                       MAPS SVC-99 CONTROL BLOCKS
         IKJEFFDF DFDSECT=YES,DFDSEC2=YES  MAPS IKJEFF18 CONTROL BLOCKS
         IHADCB DSORG=PS,DEVD=DA      , MAPS THE DCB FOR DA DEVICES
         END
