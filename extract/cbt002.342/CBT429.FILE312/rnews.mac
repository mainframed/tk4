Œ\INMR01








VE


  /* this rexx exec is expected to be invoked by the EXEC command
     thus:
     EXec 'dsname(RECEIVE)'
       and it will then issue the TSO RECEIVE command for the
       EXEC and PANELS members to create 4 new datasets:
       userid.rnews.NEW.EXEC
       useÿ
         userid.rnews.NEW.PANELS
         userid.rnews.NEW.SKELS
         You will then neÿ
           datasets for production use.
           */
                                        ÿ
          parse source with x1 x2 x3 dsn .
           x = PROMPT("ON") /* enable prompting */
          queue "dsn(rnews.new.exec)"                  ÿ
            "Receive inds('"dsn"(exec)')"
            queue "dsn(rnews.new.msgs)"
            "Receive inds('"dsn"(msgs)')"                             ÿ
              queue "dsn(rnews.new.panels)"
              "Receive inds('"dsn"(panels)')"
              queue "dsn(rnews.new.skels)"
     ÿ
                if sysvar('sysispf') <> "ACTIVE" then exit
                Address ISPEXEC
                   "ˆ Browse dataset('"dsn"($doc)')"
          
ents news items to the              ISPF user upon request, or optionall
 integrated into ISR@PRIM           so that is presents new news items o
                                     ÿ
                                      Notes:
                                         1. Members starting with RNEW a
of the News dialog                       2. Members ÿ
of the print dialog                        3. Members starting with LPR
 of the LPR print dialog
                                        Installation:              ÿ

                                            - execute the $RECEIVE exec
d the EXEC, MSGS, PANELS                      members into partitioned d
  ÿ
our shop                                      - edit/tailor the RNEWSCK
 your shop                                      you may not have a news
r systems and forÿ
to production level libraries                   - run the ADMIN dialog t
te some news items                              - update ISR@PRIM to inv
RNEWSCK exec to display         ÿ
                                                  - decide if you want t
 a PRINT option (one is                             provided).  In eithe
ou will need to update the                     ÿ
 routine and if you have no                           print option also
he panels:                                               RNEWH2, RNEWH2A
L, RNEWTBLA                                         - print isÿ
bers starting with KP* but you                          *NEED* to test t
your site before using.
                                                    Update to ISR@PRIM t
e the new news items to be displayed                  once per day.

                                                      1) In ISR@PRIM in
T section inÿ
he == lines):                                           ================
tart of statements ======================               IF (&ZSPLIT = 'N
 /* Not in split screen    ÿ
   /* No command pending             @lbd*/                   IF (&ZNEWS
DONE') /* No NEWS displayed yet      @lbd*/                     &zcmd =
              /* news command        @lbd*+
     /* Simulate enter                 @ÿ
'DONE' /*                                @lbd*/                     &ZCL
O'     /*                                @lbd*/                 IF (&ZCM
 &ZNEWSPAN = 'DONE'   /* command pending @lbd*/        ÿ
) SHARED /*                                @lbd*/               IF (&ZSP
ES') &ZNEWSPAN = 'DONE'  /*                @lbd*/               ========
======= end of statements =======================                     ÿ
                                                                  2) in
 section insert:                                                     NF,
ewsck) newappl(isp)'
     ÿ
on
                                                                    To a
r this application eÿ
tive dialog.  Create new news items and then SAVE.  You may           DE
 you may not UPDATE an existing news item. The reason that            UP
not supported is because the user mÿ

The dialog maintains a small ISPF table with one row in the
PF Profile dataset.  This table contains a flag foÿ
ndicating the users status in relation to the item. Thus if a news
as been marked read then the user will not see any UPDATES to that
tem.                                                             ÿ

 that the ADMIN updates are made to a working copy of the table
set and at SAVE time all updates are copied into production.
ÿ
en you SAVE the news table a index of keywords is generated to allow
keyword search.  See the RNEWSKEY for more information on how this
st is generatedÿ

User Interface
                              ÿ
  The user interface is a simple ISPF table.  If the RNEWS command is
  entered without operands then the entire table is displayed.  If the
  RNEWS command is entered with the NEW keywoÿ
    items will be displayed (this is what the RNEWSCK exec does in
    ISR@PRIM).
                                                            +
      The following command and line options are availableÿ

        Command Options:  Find xxx    Search xxx
        Line Options:     S -Select   U -Unread   X -Ignore   P -Print

          Find   will find the specified character string in the display
                 text.
        ÿ
            Search will look for the specified word in all members and d
                   only those members which have that word.  This search
                   usinÿ

              S      Select the current news item to browse
              U      Mark the current ÿ
                X      Mark the current news item ignored
                P      Print the current news item
                                                     ÿ
                  Usage:

                  RNEWS is entered by executing the Rexx procedure Rÿ
roviding one        or more of the valid parameters:

                    Syntax:   RNEWS parameters
   ÿ
                      Required Parameters:   KSYS      Defines that RNEW
se the KSYS set of                                     tables, panels, a
tons.             ÿ
installation as an                                       alternative to

                              ***ÿ

                          Optional Parameters:
                                        NEW     ÿ
only if new or                                      unread items are in
e for the  user                           DEBUG     Used to turn on REXX
 for debugging purposes                   ADMIN     Enable the ÿ
application                                 TEST      Uses a test news t
 testing purposes.                          FORCE     If the table is lo
ADMIN and the lock is                                 obsolete (for some
n that left the member                                  LOCK in the news
set) this option will                                     override the l
administration purposes.          {

Ã
§SYSLBD


Ü



k·
	
T

©
	




xx exec */

ss ISREDIT                                                          ÿ

MACRO"
f length(subject) = 0 then do
  "REÿ
      "(BOT) = LINENUM .ZLAST"
      if bot = 0 then "TENTER .ZF"
      end             ÿÿ

       "RESET"
       "PROFILE UNLOCK"               ÿ
           "RECOVERY ON"
           "NUMBER OFF"
           "CAPS OFF"                                ÿ
               "NULL ON"
               "AUTOLIST OFF"
               "PACK OFF"                                           +
                   "HEX OFF"                                      ÿ
                     "AUTOSAVE ON"
                     "AUTONUM OFF"
            ÿ
 ÿ
                         "DEFINE rnewemc MACRO CMD"
                         "DEFs INE END ALIAS rneweme"
                ÿ
                     
                                      */
                               ÿ
--------------------------------------- */        ÿ
                                          */               /*  This ISPF
cro is used as an Alias for the ISPF EDIT */  ÿ
d by the RISCNEWS exec.                     */               /*    ÿ
                                              */               /* ------
--------------------------------------------- */             ÿ
                                                                 "MACRO
OPROÿ
                                                                   "DEFI
CEL RESET"  /* reset CANCEL back to normal */                        "DE
    RESET"  /* reset ÿ
                                                                       "
           ÿ
d = "CANCEL"                          `
ss ISPEXEC "VPUT (rnewsend)"                                       
ç
      */
                       /* ----------------------------------------------
----- */        ÿ
          */               /*  This ISPF Edit Macro is used as an Alias
ISPF EDIT */               /*  'END' command by the RISCNEWS exec.
          */               /*    ÿ
              */               /* --------------------------------------
------------- */               Address ISREDIT
                               "MACRO (PARM) NOPROÿ

                                   "(NUMVAL) = NUMBER"
                                   if numval = "ON" then do        ÿ
      +
    ÿ
aving this entry..."                        Address ISPEXEC "SETMSG MSG(
"     ÿ
                   ÿ

                       ÿ
ND back to normal */              ÿ
 CANCEL back to normal */
                                        ÿ
                                                 ÿ

                                                     rnews send = "END"
                                                       Address Iÿ
rnewsend)"                                       
   /* ---------------------  rexx procedure  ---------------------- *
    * Name:       RNEWSKEY                                          *

        * Function:   To process all members of the News PDS that are
        *             news items and extract all words that are not
        *     ÿ
          *    ÿ
            *             function.
            *                ÿ
              * Syntax:     %RNEÿ
*               *
*               * Author:    Lionel B. Dyck ÿ
  *               *                              ÿ
    *               * History:
    *               *             12/10/92 - Add panel to iÿ
      *               *                        ask the user to be ÿ
        *               *
        *               *             11/30/92 - add more words to ignor
          *               *
   ÿ
'           *               *
         ÿ
              *     ÿ
                *               *
                *       +
----------------- */  ÿ
                                     arg dsn out_dsn

                                     ÿ
                                         w.        = ""
                                         all_words = ""
                                         total     =ÿ
                                             out.0     = 0

                                             /* go setup the words ÿ
/         ÿ
nore ***"                                        call please_wait
                                                 call set_ignore
  ÿ
re upper case */         ÿ
e(ignore_words)
                 ÿ
hen do                                    ÿ
ef)"."dsn                                                     end
                                ÿ
                                                           ÿ
str(dsn,2,length(dsn)-2)                                               e
                                               ÿ
                                                                 if left
sn,1) <> "'" then do                                                  ou
sysvar(syspref)"."out_dsn                                     ÿ

             ÿ
ut_dsn = substr(out_dsn,2,length(out_dsn)-2)
 end
                              ÿ
uttrap("lm.","*")
            ÿ
se = "*** Determine News and Information memberÿ
all please_wait
                           ÿ
 "LISTD" "'"dsn"'" "MEMBERS"                                    ÿ

   x = outtrap("off")                     +
                                        ÿ
   ÿ
            if lm.i = "--MEMBERS--" then leave
            end                                        ÿ
                    ÿ
             i = i + 1
                                                                      ÿ
               do count = i to lm.0  ÿ
                    member = strip(lm.count)
                    /* we only want members that start with N */
     ÿ
                        /* and then only those that are 6 characters in
/                       if length(member) <> 6 then iterate
                    ÿ
                            "Alloc f("ddn") ds('"dsn"("member")') Shrÿ
                              "Execio * diskr" ddn "(finis stem in."
                              "Freeÿ
                                phase = "*** Processing member:" member
      ÿ
                                                  ÿ
                                    do w_count = 1 to in.0
                       ÿ
='")                                     words = words(in.w_countÿ
                                           if words > 0 then
                                        ÿ
                                                   word = translate(word
ÿ
en do                                                   wÿ
                                                          hold_word = ""
               ÿ
                                                         if right(word,1
" then                                                        hold_word
ord,length(word)-1)           ÿ
 then iterate                                                if datatype
") = 0 thenÿ
gnore_words) > 0 then iterate                ÿ
then do
     w.word = word member   ÿ
       all_words = all_words word                           +
         total = total + 1                                ÿ
           end                                 ÿ
        else do
              if wordpos(member,w.word) = 0 then
                   w.word = w.word  member                      ÿ
                  end
                                                                    end
        ÿ
 ÿ
                                                                     pha
* Building Index List aÿ
se_wait           ÿ

1 to total                            ÿ
rd = word(all_words,i)             +
line = out.0 + 1                 ÿ
  out.0 = line                                       ÿ
    if length(w.word) < 70 then do
       out.line = w.word                          ÿ
         end                                                        ÿ
        else do forever
             pos = pos(" ",w.word,60)                              ÿ
               pm1 = pos - 1
   ÿ
                 if pm1 > 0 then do
    ÿ
                  ÿ
                        end
                     ÿ
                             out.ÿ
                               new = ""
                               end    ÿ
                           if length(new) = 0 thÿ
                             w.word = word new
                             line = out.0 + 1          ÿ
                               out.0 = line                    ÿ
                                 end
                         end

                             phase = "*** Writing the Index of Search Wo
*"                             call please_wait
           ÿ
                                 "Alloc f("ddn") ds('"out_dsn"(index)')
e"         ÿ
                            ÿ

                          ÿ
                                             ÿ
                                         set_ignore:
                                         ÿ
------------------------- *                   * define all worÿ
er than 1 and 2 character   *                   * words which are alread
d........................   *                   *       ÿ
                              *                   * Note:

be less than 512 characters..     *                   * ---------------ÿ
----------------------------------- */               ignore_words = "THE
 THAT HAVE",                                                        "WIT
IS NOT YOU BUTÿ
M TIMEÿ
GET THEY THAN UNDER ANY THERE MORE",
D THESE NUMBER WHAT SOME ALSO Iÿ
 ABOVE NEW ONLY TWO Hÿ
 DOES MOST BECAUSE THEM THEN OUT YOUR KNOW MAY",
ONE SET CHANGE SUCH MANY NEED VERY WERE JUST OFFÿ
nore_words,                         ÿ
"MAIN MUST MAKE LARGE PUT WORK YET DONE FOLLOWING",
"FOUND ITS PLEASE SEEMS SEE SINCE AFTER MUCH",                   ÿ
  "AVAILABLE COULD EITHER ETC GOOD PEOPLE WHERE",  ÿ
    "THINK FIRST NAME OVER WAY WITHOUT BAD DURING WANT",
    "WELL BEING BOTH DIFFERENT EACH GOT STILL TOO ANOTHER",
  ÿ
words = ignore_words,
        "USING RUNNING USER BACK CALL DOESN AM DID",
        "LAST REAL ÿ
 ÿ
            "ELSE ENCOUNTERED FIXED HOWEVER NEVER RIGHT HAVEN",
            "HELP SOMETHING CAUSED Cÿ
              "W+
              ÿ
                  "LONG LOOKS MIGHT SAY THING ANYTHING ÿ
                    "THROUGH AROUND CALLED DOING EXCEPT GOES LEAST"
     ignore_words = ignore_woÿ
                      "THOUGHT UNTIL ABLE ALWAYS AWAY HIS LATER LITTLE N
                        "YES ANYBODY FAR RATHER SEVERAL BETWEEN DAYS",
                        "NECESSARY READ SEEMÿ
,                         "CAUSES CHANGED CORRECT KEEP LOT USES AGO BELI
,        ÿ
                            "NOTHING PLACE SENT CONTAINS FOÿ
TED"           ignore_words = ignore_words,
                          ÿ
EN",                            "INCORRECT ISSUED OWN SEND THOUGHT TIMES
ER",                              "ALONG ANYWAY BEST COMMENTS LEFT LONGE
MAYBE",                           "REQUIRED+
VES HARD",                          "HIT ÿ
COME",   ÿ
ATED SOON",                             "TOOK TURNED SYSTEM"
                         ignore_words = ignore_words,     ÿ
                        ÿ
TIONS SELECTING",                            "OBTAINING INTENT NEAR DERI
LY VIDEO ALONE",                             "CANNOT UPON COMES ELIMINAT
CED WHOSE AFTERWARDS",                 ÿ
 YOURSELF ONTO"
                                 return
            ÿ
                                     Please_Wait:
                                        Address ISPEXEC "Control Display
                             s            Address ISPEXEC "Display Paÿ
AIT)"                                       return
                                 {
------------  rexx procedure  -------------------- *                  *
   Rÿ
                                                     *          ÿ
tion:  Check for new news items                        *
                   ÿ
         1) test for SYSL.ISPF.TEST dataset in the       *
 ÿ
              new Systems news    +
*            2) Display new KPITÿ
  *                 ÿ
    * Syntax:    %rnewsck                                        *
    *                                          ÿ
      * Author:    Lionel B. Dyck    ÿ
        *            Kaiser Permanente Information Technology        *
        *            Walnut Creek, CA 94598                   ÿ
          *            (925) 926-5332                 ÿ
            *            Internet: lionel.b.dyck@kp.org
            *
              * History:                                               ÿ
                *            03/27/00 - creation
                *
            ÿ
/       ÿ
                   Address ISPExec "Vget (rnewsck) Profile"
                   if rnewsÿ
                     rnewÿ
                       Address ISPExec "Vput (rnewsck) Profile"
                                          ÿ
                         call outtrap "lisÿ
                           "listalc"
                           call outtrap "off"            ÿ
                                                           ÿ
                               found = 0

                                 do i = 1 to listalc.0
                                      if pos("SYSL.ISPF.TEST",listalc.i)
n found = 1                           if found = 1 then leave
       ÿ
             +
           ÿ
                      ÿ
                                              end
                            z
                                     ÿ         "%Rnews kpit new"
                                       {
is Rexx Exec will select panel KPRINTM which allows users to */
it, browse, copy, email or print datasets.  (Utilityÿç

  ÿ
                                                                   ÿ
             arg in_dsn opt
                   ÿ
               if length(in_dsn) > 0 then do
  ÿ
                    "Vput (Wdsn) Proÿ
                      end
                 ÿ
                     if length(opt) > 0 then do      ÿ
                          kprcmd = opt
                          "Vput ÿ
                         /*   "Control Nondispl Enter" */             ÿ
                              end
                                               ÿ
                             "Select Panel(KPRINTM)"
       ¼
                               exit                           ÿ
                         
E the WDSN from the user */
                                                    trace (OFF)
                                                      ÿ

                                                        Address ISPEXEC
DSN) PROFILEÿ
                                                            If wdsn = ""
                                                               Then do
                           ÿ
ere is Nÿ
EXEC "SETMSG MSG(ISRZ001)"                                           SIG
_Exec                                     ÿ
 Loop */                 ÿ
                                                                    Addr
XEC                                                      ÿ
RRORS RETURN"                             ÿ
DATASET("wdsn")"

<= 4 Then SIGNAL Exit_Exec                                 ÿ

dress ISPEXEC "SETMSG MSG(&ZERRMSG)"

Exit_ÿ
 
ser */
                    ÿ
                              ÿ
                                Address ISPEXEC "VGET (WDSN CDSN CMEM) P
                                   ÿ
                                  If cdsn = "" ÿ
                                       Then do
                                         zedlmsg =ÿ
omplete the COPY function",                          "are not prÿ
 check and Re-Enter."                        Address ISPEXEC "SETMSG MSG
)"                                           CALL Exit_Exec      ÿ
                                          End  /* End If Statement */
 ÿ
                                            /*--------------------------
ÿ
r processing      ÿ
-------------------------------------*/
               ÿ
                                   ÿ
(' wmem ')'                                         cdsn = STRIP(cdsn,,"
                              ÿ
 '(' cdmem ')'                                      ÿ
                                                        /*--------------
---------------------------------------------ÿ
see if the CDSN and WDSN are the same          */         /*---------ÿ
-------------------------------------------------*/
                                                            ÿ
m××')' = wdsn××'('××wmem××')'                                     Then d
      ÿ
"The 'TO DATASET' and 'FROM DATASET' can not be the",
  "same for a successful copy.  Please check and",
  "Re-Enter."          ÿ
s ISPEXEC "SETMSG MSG(ISRZ001)"
xit_Exec  +
 /* End ÿ
se Do
 cdsn××'('××cmem××')' = wdsn××'('××wmem××')'
en do                  ÿ
    zedlmsg = "The 'TO DATASET' and 'FROM DATASET' can noÿ
                "same for a successful copy.  Please check and",
                "Re-Enter."           ÿ
        Address ISPEXEC "SETMSG MSG(ISRZ001)"
          CALL Exit_Exec
          End  /* End If Statement */                ÿ

      /*---ÿ
        /*    Check to see if the the copying to dsn has multiple meÿ
/         /*------------------------------------------------------------
/                           ÿ
            If cmem ^= ""  &  cdmem ^= ""
   ÿ
                   zedlmsg = "The 'To Member'ÿ
,                              "  Please check and Re-Enter."
                  ÿ
                       CALL Exit_Exec                         ÿ
                    End  /* End cmem & cdmem If Statememt */
                                 ÿ
                      /*------------------------------------------------

             */         /*----------------------ÿ
---------------*/
                ÿ
                              Address ISPEXEC "LMINIT DATAID(inÿ
sn")"                         Else do
                                wÿ
                                     If SYSDSN(wdsn) = OK
                                          Then do
                                            Addresÿ
d) DATASET("wdsn")"                         End /* End wdsn Do Loop */
             ÿ
                                                zedlmsg = ""wdsn" wÿ
d.  Check 'From Dataset' and",                              "Re-Enter."
                            +
ISRZ001)"                 ÿ
      ÿ
 Statement */                                 End  /* End the 1st wdsn I
ent */                                   ÿ
                       +
                     ÿ
                                                       Tÿ
                                                           Address ISPEX
IT DATAID(outdd) DATASET("cdsn")"     ÿ
                                                             CALL Cleanÿ
                                                               zedlmsg =
py function has completed successfully."               ÿ
 "SETMSG MSG(ISRZ001)"                                           CALL Ex
      ÿ
n 1st Do Loop */                                                 Else do
                                                                     cds
dsn"'"               ÿ
SN(cdsn) = OK
 do      ÿ
Address ISPEXEC "LMINIT DATAID(outddÿ
  CALL Copy_Now
  CALL Clean_Up           ÿ
    zedlmsg = "The copy function has completed succÿ
      Address ISPEXEC "SETMSG MSG(ISRZ001)"
      CALL Exit_Exec                       ÿ
      End  /* End cdsn 2nd Do Loop and If Statement */            ÿ
d  /* End cdsn 1st If Statement */
                                                            ÿ
/*-------------------------------------------------------------------*/
/ÿ
  /*-------------------------------------------------------------------*

    zedlmsg = ""ÿ
      Address ISPEXEC "SETMSG MSG(ISRZ001)"
      CALL Cleÿ
                               ÿ

          Exit_Exec: EXIT      ÿ
                                              +
              /*----------------------------ÿ
-----*/         /* This is the coping function andÿ
 done  */         /* Check to see if CDSN is a PDS or SEQ dataset
       */         /*---------------------------------------ÿ
---------*/                                                        +
                      COPY_NOW:                                  ÿ
                        corg = LISTDSI(cdsn)
                          If SYSDSORG = 'PO' then
                             If cmem = ""  then
  ÿ
         ÿ
                                         zedlmsg = "A 'Member Name' MUST
ified when the",   ÿ
RTITIONED DATASET"      ÿ
)"                                           CALL Clean_Up
                                    ÿ
                                       ÿ
mem = "" Statement */                          Else do
                                                 cmemÿ
                                                   flaÿ
                                          End  /* End the If cdsn SYSDSO
' Statement */                               Else flag = YES          ÿ
                                                                     ÿ
                                              /*------------------------
-----------------------------------*/         /*    Check to see if a me
 added ÿ
----ÿ
                                                  If flag ^= YES then
                        ÿ
                   ÿ
                                                      Else Do
                                         ÿ
 to dataset is not a PARTITIONED",ÿ
nd cannot contain a member."                                Address ISPE
MSG MSG(ISRZ001)"                                         ÿ
                                                 ÿ
                                                              End /* End
se Do Statement */                                               Else Do
                                                                +
= "The Copying to dataset is not a PARTITIONED",              ÿ
    "DATASET and cannot contain a member."
s ISPEXEC "SETÿ
 Clean_Up
LL Exit_Exec
* End cdmem Else Do Statement *+
                             ÿ
------------ÿ
    Check to see if WDSN is a PDS or SEQ dataset                   */
----------------------------------------------ÿ
                           ÿ
  worg = LISTDSI(wdsn)
  If SYSDSORG = 'PO' then                                      ÿ
       If wmem = ""                       ÿ
            then do
              zedlmsg = "A member name MUST be specified when the copyin
ÿ
                  Address ISPEXEC "SETMSG MSG(ISRZ001)"
                  CALL Clean_Up
                 ÿ
              End  /* End wdsn SYSDSORG If Statement */

              If wmem = "" then   ÿ
       ÿ
                                     "TOMEM("cmem") REPLACE TRUNC"
                  Else                             ÿ
                      ÿ
,                                        "TODATAID("outdd") TOMEM("cmem"
E TRUNC"                                                            ÿ
                        /*-----------ÿ
---------------*/         /*    Now check the LMCOPY function return cod
od completion  */         /*--------------------------------------------
-----ÿ
                              If rc ^= 0 then
                                If rc = 4
                      ÿ
                                        zedlmsg = "The FROM dataset is e
opy function has been",                           "terminated.  Please c
 dataset and Re-Enter."                ÿ
  +
ÿ
                                            End /* End theÿ
 */                                           Else do
               ÿ
                                                then do
                                                    zedlmsg = "The FROM
t member is not found.  Copy fÿ
inated.  Please check the member and",                            "Re-En
                                                        Address ISPEXEC
MSG(ISRZ00ÿ
                                                            CALL Exit_Ex
                                                          End /* End the
 8 Statement */            ÿ
= 0 Statement */
                                                          Return_Copy_no
N                                           ÿ
                                                              /*--------
---------------------------------------------------*/         /* This ro
 CALLed to clean-up the LMINIT and LMCOPY function */        ÿ
----------ÿ
                                                                  Clean_
                                                                  Addres
XEC "LMFREE DATAID("indd"ÿ
PEXEC "LMFREE DATAID("outdd")"                                        Re
an_up: RETURN                                                        {


                    trace (OFF)
                    ÿ

                        Address ISPEXEC "VGET (WDSN) PROFILE"
                                     ÿ
                            If wdsn = ""
                               Then do
                                 zedlmsg = "There is Nÿ
DIT aÿ
                                     SIGNAL Exit_Exec
                                End  /* End Do Loop */                 ÿ
                    +
                  ÿ
                                      "CONTROL ERRORS RETURN"
          ÿ
                                 ÿ
                                          If RC <= 4 Then SIGNAL Exit_Ex
                           ÿ
                                            Addrÿ
SG)"                                          SIGNAL Exit_Exec_NOW
                                            ÿ
                                                Exit_Exec:     ÿ
                                                  If RC = 0
                                                    Then Do  ÿ
                                                        zedsmsg = "DATA
VED"                                                      Address ISPEXE
G MSG(ISRZ001)"                                         End /* End the T
 Statement */                                           Exit_Exec_NOW: E
             ÿ


   Address ISPEXEC          ÿ
      ÿ
       display_panel:
       "display panel(kpprntp)"            ÿ
                       ÿ
           if rc = 8 then exit
                                                          ÿ
             "Vget (wdsn hcla hpid ncpy ÿ

               parse value "" with null
                                                         ÿ
                   pcc = c
                   pbnd = b
        ÿ

                       if pcc = "Y" then pcc = "CCHAR"
                       ÿ
           ÿ
                                         else pbnd = ""
                                      +
                            ÿ

                                 dsnstat = sysdsn(wdsn)
                                 if dsnstat =ÿ
                                        else do
                                           zedlmsg = dsnstat
                                           "Setmsg Msg(isrz001ÿ
                                            end

                                         Signal display_panel

                                             Print:
                                                worg = Listdsi(wdsn)
                ÿ
                                                       if wmem = null th
pds_testing                                            else do
                               ÿ
wdsn                             ÿ
                                                             end
                                              ÿ
                                                  ÿ
ow wdsn                                                          Call pr
                                                             ÿ
                                                                retÿ

                                                               Print_it_
                                                                    Arg
    ÿ
null
           ÿ
ress TSO "printds ds(ÿ
           "copies("ncpy") notitle" pcc pbnd
e                         ÿ
 Address TSO "printds ds("pdsn") classÿ
               "copies("ncpy") outdes("ptyp") notitle" pcc pbnd
turn                                     ÿ
                                                       ÿ
rint_msg:
  if rc = 0                                             ÿç
                   then do
    ÿ
                        else zcpy = 'copies were'                      ÿ
                          zedlmsg = ""ncpy" "zcpy" successfully printed
"."                  ÿ
                         end
      ÿ
                                      ÿ
                       pds_testing:
                     ÿ
                            "Lmopen Dataid("dataid") Opÿ
                              "Lmmdisp Dataid("dataid") Option(Display)"
                                "Comÿ
                                  do while rc == 0
                                       Call process_selection wdsn
                                      "Lmmdisp Dataÿ
                                         if rc == 8
         +
ion(Disÿ
rnt)"                                       end
                                            "Lmmdisp Dataid("dataid") Op
e)"                     ÿ
 ÿ
                                              return
                                         ÿ
                ÿ
                                                  Arg pdsn
                                                  if left(ÿ
                               ÿ
 "'" p_dsn "'"                                        else p_dsn = sysva
ef")"."pdsn                                           zlmember = strip(z
r)                                            ÿ
                                                          When zllcmd =
lcmd = "S"                                                Then do
            ÿ
"dataid") Option(Put) Member("zlmember")",                          "Zlu
nted)"                                                          pdsn = "
("zlmember")'"               ÿ
t_now pdsn                                                          End
                                                                    When
= "B"                                           ÿ
se Dataid("dataid") Member("zlmember")"                               Ot
nop;     ÿ
                                                                 Œ
                                                                       
§
------------- *               * Name:      LPRPrint
              *               *
              *       ÿ
r ISPF dialog     *               *            to invoke the LPRPRINT IS
 and then use     *               *            the TCP/IP LPR command to
he specified      *               *    ÿ
d printer.            *               *
                      *               *            Note that the specifi
must have LPD active  *               *            to reÿ
                          *               *
                          *               * Syntax:    %lprprint dsname
                          *               *
    ÿ
                              *               *
                              *               * Author:    Lionel B. Dyc
          ÿ
 Information Technology           *               *            25 N. Via
ve.                               *               *            Walnut Cr
94598                      ÿ
2                                     *               *            Inter
nel.b.dyck@kp.org                     *               *
                                      *     ÿ
                                          *               *            0
- save inds in profile                    *               *            0
- Remove ack as tcp/ip 3.1 doesn't        *               *  ÿ
/94 - update for Postscript option            *               *
/94 - fix parse for pds dsname                *               *
/94 - fix for pds input w/member name         *               *

          dsname is pds and no member given       *               *
1/17/94 - fix for invalid dsn and for messages    *               *
1/07/94 - add +
            ÿ
                supported                               *
     01/04/94 - add entry optionalÿ
                  and suppoÿ
         01/03/94 - updated to cleanup invocation           *
         12/22/93 - creation of application        +
                                          ÿ
  * ------------------------------------------------------------- */

  arg inds                                               ÿ

      Address ISPEXEC

     ÿ
            "VGET (lprdest lprhost lprbin lprcc lprntfy lprlcnt lprhead
                  "lprburst lprntfy lprps lpruopt lprpinds) Profile"
       ÿ
                 "Display Panel(LPRPRINT)"
                 if rc > 3 then exit 0
                "VPUT ÿ
",                        "lprburst lprntfy lprps lpruopt lprpinds) Prof

                  if sysdsn(lprpinds)ÿ
                         lprsmsg = "Error"
                         lprlmsg = "Specified data set does not exist:"
                         "Vput (lprsmsg lprlmsg)"   ÿ
                             "SETMSG MSG(LPR002)"
                             end
                          else do                                  ÿ
          ÿ
 header burst,                                    copies postscr
                                   if lprbin   = "Yes" then binary = "Bi
  ÿ
                                                           else cc     =
                                       if lprntfy  = "Yes" then mail   =
                 ÿ
Header"                                    if lprburst = "No"  then burs
Burst"                                     if lprcopy  > 1     then copi
pies" lprcopy                   +
nt = "Linecount" lprlcnt      ÿ
postscr = "Postscript"                           if lprps    = "Landscap
postscr = "Landscape"
                                             ÿ
                                                     if pos("(",lprpinds
en sysdsorg = "PS"                                   Select
               +
× pos("(",lprpiÿ
pr lprpinds                                                  When sysdso
"                                                                 then c
_pds                            ÿ
                                                               end
                                                               end
          ÿ

                                                              do_pds:
                         ÿ
aid(dataid) Dataset("lprpinds") Enq(Shrw)"                           "Lm
aid("dataid") Option(Input)"                                         "Lm
taid("dataid") Option(Display)",        ÿ
ds(ÿ
ile rc == 0
ll process_selection                                   ÿ
Lmmdisp Dataid("dataÿ
  if rc == 8
     then "Lmmdisp Dataid("dataid") Option(Display)",                 ÿ
            "Commands(Any) Panel(LPRPÿ
   end
   "Lmmdisp Dataid("dataid") Option(Free)"
   "Lÿ
       "Lmfree  Dataid("dataid")"
     return
                    ÿ
      process_selection:
         if left(lprpinds,1) = "'"
            then parse value lprpinÿ
        ÿ
             zlmember = strip(zlmember)
             Select                               +
               When zllcmÿ
                   Then do
                     "Lmmdisp Dataid("dataid") Option(Put) Member("zlmem
                         "Zludata(printed)ÿ
                         call do_lpr "'"w_dsn"("zlmember")'"
                         end
                       When zllcmd = "B"                   +
                           Then "Browse Dataid("dataid") Meÿ
                             Otherwise nop;
                             End
             ÿ

                              do_lpr:
                            ÿ
             ÿ
                                    "LPR" dsn "(Printer" lprdest "Host"
"Type",                                   bÿ
st copies ,                   ÿ
                                        if sysdsorg <> "PS" then return
                                        lprsmsg = ""      ÿ
                                          lprlmÿ
est "at" lprhost                           "Vput (lprsmsg lprlmsg)"
                                           "SETMSG MSG(LPR002)"
                                              return            
                                     {
-----------------  rexx procedure  ---------------------- *
:      Rÿ
                                                            *       ÿ
Function:  Present News and Information items for review      *
           by an ISPF uÿ
*            providing an easy to use interface for adding      *
*    ÿ
  *                                   ÿ
    * Syntax:    %RNEWS options.......                              *
    *                 ÿ
      * required options are:                        ÿ
        *
        *            KPIT     -  Kaiserÿ
          *                                                         +
            *            KSYS     -  Kaiser Systems ISPF News     ÿ
              *                                           ÿ
*               *            KTEST    -  Test news table
*               *
*ÿ
    *               *                        using one of the above as a
    *               *
    *           ÿ
      *     ÿ
        *               *            ADMIN    -  Perform administrative
s       *               *      ÿ
          *               *  ÿ
l list of   *               *                         authorized userids
s function) *               *            DEBUGÿ
ace           *               *            TESÿ
et              *               *                        (see test dsn b
                *               *            NEW      -  Onlyÿ
 new items have   *               *                        beenÿ
st display          *               *                        or unread i
...............     *               *                        See check_c
processing below      *               *                        (default
ÿ
a set is 'locked'       *               *                        this wi
ride the loÿ
for admin functio+
               ÿ
                          ÿ
                                *               *
                                ÿ
                                  *      ÿ
                                    *               *        Panels:  de
 rexx variables below               *            ÿ
by rexx variables below               *               * ÿ
                                        *               *
                                        *               * History:ÿ
                                          *               *            ÿ
0 fix ISPTABL allocation                    *               *
9 change security to look for racf group    *               *
7 Rÿ
/95 Ta+
24/9ÿ
...     removed intervÿ
 10/28/92 to 11/02/92 Creation of this application  *               *
                   ÿ
                                       ÿ
                                                        *
ere are 2 'system' ISPF tables useÿ
NEWS which contains information about each news item andÿ
  ITEMTBL that contains the last item number assigned.      *
  The application (AISC, ROCK, etc.) defines the ÿ
    ISPF panels and skeleton that will be used.               *
* 3.  The news_id variable is suffixed with 'TBL' and a 1 row   *
*     ISPF table is created in the user's ISPTABL data set.  If ÿ
  *     this dd is not defined then it is created in the users    *
  *     ISÿ
    * 4.  Option NEW will check for NEW and Unread notices and if   *

      * 5.  The ADMIN functÿ
        *     in variable admin_users.
        * 6.  ÿ
          *     into a work data set under tÿ
            *     the amount of time the table is locked.  A member in
            *     the news daÿ
              *     serialization in the update process.  Thi+
*               *     then deleted upon successful completiÿ
  *               * 7.  All updates made undÿ
    *               *     data set into the production data set.  If the
e   *               *     bdt_nodes is non-zero then all updates are sen
g     *               *     MVS/BDT to all of the specifiedÿ
        *               * 8.  Add the following to the ISPCMDS command t
allow   *               *
        *    ÿ
            *               *     '''' RFIND     0  &USRRFIND
            *               *                          Rfind passthru va
            *               * ÿ
         ÿ
--------------- */
                               arg options     ÿ
                        +
                      ÿ
--------------------- *               * Verify entry under ISPF Apÿ
                        *               * ------------------------------
----------------------- */           ÿ
o                                           exit 0
   ÿ
                                              else dÿ
                                                Address ISPEXEC  "VGET Z
                    ÿ
                                                     cmd = sysvar('ÿ
                                                       Address ISPEXEC,
                                     ÿ
md options") NEWAPPL(ISP)"                               exit 0
  ÿ
                                                     eÿ

                 ÿ
                                                                       ÿ
                                                           /* ----------
--------------------------------ÿ
                                              *               * admin_ds
ork dataÿ
educe the time the news data set is 'locked'.  ÿ
                                                  *               * ----
-------------------------+
ysvar(syspref)".WORKNEWÿ
                                                                       /
------------------------------------------------------- *
ization variables that must be validatedÿ
                                                            *
nel          Normal user table display panel                *
min_panel    Table panel for administration functions    ÿ
browse_panelÿ
* edit_panel     Customized ISPF Edit panel                     *
* ext_variable   Extension variable names (if any)              *
  *                        ÿ
    * news_skeleton  ISPF File Tailoring skeleton                   *
    *                                                               *
    * adminÿ
        *                application    ÿ
          *
          * title          Titÿ
            *                                          ÿ
              * news_id        4 character news category (e.g. AISC, ROC
              * news_dsn       Data set name ofÿ
*               * admin_dsn      Data set name used by admin function ÿ
  *               *                prevent locking real data set/table.
  *               *                copied into production data sÿ
    *               *
    *ÿ
      *               *
 ÿ
        *           ÿ
ers.      *               *                (note: ALL is a valid center)
          *       ÿ
f the       *               *      ÿ
 new item     *               *                and during NEW processing
ALL items     *               *    ÿ
 requested.     *               *                 ÿ
                  *               * bdt_nodes      MVS/BDT node names wh
tes are to be     *               *                tÿ
                    *               *                            ÿ
                      *               * Note: All dsn's are fully qualif
out quotes in the     *               *       variables.             +
                        *               * -------------------------ÿ
ÿ
                                           parse value null with news_id
n bdt_nodes panel admin_panel,                                    browse
dit_ÿ
s check_center ext_variable expdate,                                  ne
dt_msg title
                     ÿ

                                                   if length(options) =
o                                     ÿ
                                                          lmsg = sysvar(
 "must be invoked with valid parameters",                        "- try
                                                       ÿ
S ISPEXEC "SETMSG MSG(RNEW000)"


 do   ÿ
if wordpos("DEBUG",options) > 0 then trace i
if wordpos("KPIT",options) > 0 then do
          ÿ
                admin_dsn     = "SYSL.KPITNEWS.WTABLE"
                news_dsn      = "SYSL.KPITNEWS.TABLE"
                panel    ÿ
                    admin_panel   = "RNEWTBLA"
                    browse_panel  = "RNR$BRO"
                    edit_panel    = "RNRÿ
                        news_skeleton = "RNEWKPIT"
                        ext_variable  = "EXPDATE"
                        news_id       = "KPIT"         ÿ
                            title         = "KP-IT News and Information"
                            end
                if wordpos("KSYS",options) > 0 then do                ÿ
           ÿ
                                admin_dsn     = "SYSL.SYSNEWS.WTABLE"
                                news_dsn      = "SYSL.SYSNEWS.TABLE"
     ÿ
                                    admin_panel   = "RNEWTBLA"
                                    browse_panel  = "RNR$BRO"
                    ÿ
                                        newÿ
                                          ext_variable  = "EXPDATE"
                                   ÿ
                                            title         = ÿ
 and Information"                             end
                                  if wordpos("KTESÿ
                                                admin_users   = "SYSLBD"
                                                  news_dsn      = "SYSLB
WS.TABLE"                                         panel         =ÿ
                                                    admin_panel   = "RNE
              ÿ
                                                      edit_panel    = "R
+
SYS"                             ÿ
DATE"                                                       news_id
T"                                                          title
t Systems Newÿ
                                                    if length(news_dsn)
 do                                                            smsg = nu
                            ÿ
ave not requested a news application",
tact your systems administrator"                                   ADDRE
EC "SETMSG MSG(RNEW000)"                   ÿ
    ÿ
                                                            if check_cen
ull then do                                               ÿ
check_center "ALL"   ÿ
                                                                if wordp
E",options) > 0 then force = "on"                               if wordp
W",options)   > 0 then show_opt = "newÿ
                    else show_opt = "all"                           if s
= "new" then do                                                        i
oc <> nuÿ
 wordpos(center,news_loc) = 0 then exit

os("TEST",options)  > 0ÿ
est = "on"
ews_dsn = sysvar(syspref)".TESTNEWS.TABLE"
f sysdsn("'"news_dsn"'") <> "OK" then ÿ
    "Allo+
       ÿ
        "Free  ds('"news_dsn"')"                     ÿ
          end
       end              ÿ
      if wordpos("ADMIN",options) > 0 then do                       ÿ
           select
           when admin_users = "RACF" thenÿ
                call outtrap "racf."
   ÿ
                  call outtrap "off"                      ÿ
                    parse value racf.2 with " DEFAULT-GROUP=" group .
                  +
                ÿ
                           if admin <> "on" then do
                               smsg = null
                               ÿ
n"            ÿ
                                   exit 0
                                   end        ÿ
                               ÿ
                                  end
                               when wordpos(sysvar(sysuid),adÿ
en do                               admin = "on"ÿ
                                      panel = admin_panel
                                      end
                                     when admin_users = "*" then ÿ
                                          admin = "on"
                                          panel = admin_panel
           ÿ
  ÿ
                                                   smsg = null
                          ÿ
zed for this functiÿ
SG(RNEW000)"                                           exit 0
                                         ÿ
                                    ÿ
                                                   end
                                                end     ÿ
                                                     +
                                               /* -ÿ
--------------------------------- *               * Verify that the newÿ
 4 characters of less...            *               * ------------------
----------------------------------- */             if length(news_idÿ
 do                                                                  sms
      ÿ
evere Error with news_id -",
ontacÿ
 ISPEXEC "SETMSG MSG(ÿ
0
                      ÿ
                                    +
------------ *                    ÿ
itle           *                         ÿ
---------------- */                                                 titl
er(title,65,)                                    ÿ
                                                          ÿ
------------------------------------------------------- *
e data set name variable for the news table d/s         *       ÿ
--------------------------------------------------------- */
min <> "on" then
tive_dsn = news_dsn

active_dsn =ÿ

f sysdsn("'"neÿ
    if show_opt = "new" then ÿ
      else do
           smsg = null       ÿ
             lmsg = "The ISPF" news_id "News aÿ
                      "on this system."
               Address ISPEXEC              ÿ
                 call do_msg                                   ÿ
                   exit 0
                   end                                     ÿ
             end
ÿ
               parse value '1 1 0 0 0' with crp rowcrp last_find new_cou
                              prev_crp
                 +
               ÿ
         ÿ
                       today = substr(date('S'),3)
                                ÿ
                        ÿ
                           "Control Errors Return"
                                                 ÿ
                             /* -------ÿ
--------------- *               * Open the users one row table containin
tem status      *               * --------------------------------ÿ
----------------- */             call TBOpen_User     +
                                                    ÿ
                                     User_Display:
     ÿ
                                                                   ÿ
                                         usrrfind = "PASSTHRU"
                      ÿ
                                           zcmd = null
  ÿ
                                       ÿ
                                                       "TBTOP news"
                 ÿ
p")"                                                    ÿ
                                                              "TBDISPL n
L("panel")"                     ÿ
                                                                "TBDISPL
PANEL("panel")",
W("rowcrp") AUTOSEL(NO)"                       ÿ
                                                         src = rc
          ÿ
                                                           Usrÿ
                                                             "VPUT USRRF
                           ÿ
                                                                 if src
en do                                                                 if
 <> "on" then                               ÿ
l Out_A_Here
= null      ÿ
g = "You have changed the table - enter SAVE",               ÿç
                  " to save it or Cancel to exit now"
           call do_msg     ÿ
          end

       crp = ztdtop                       ÿ
         rowcrp = null
               ÿ
           if row <> null then                           ÿ
                if row > 0 then do
                  "TBTop news"  ÿ
                    "TBSkip news NUMBER("row")"
                      end                                             ÿ
                                                   ÿ
                     zcmd_ok = null

     ÿ
                           When words(Zcmd) > 1 then do
                                parse value zcmd with o1 o2
                    ÿ
Tableÿ
                                    if zcmd_ok <> "ok" then do
                                   ÿ
                      ÿ
                                           "Setmsg Msg(RNEW000)"
                                           end    ÿ
                                       ÿ
                                       When zcmd = "RFIND" then do
                                            zcmd = "RFIND" o2    ÿ
                                              call Find_ÿ
                                                end
                                           When abbrev("NEW",zcmd,1) = 1
ÿ
en call Save_It                                When abbrev("CANCEL",zcmd
then call Out_A_Here                           When length(zcmd) = 0 the
               ÿ
          ÿ
                                                             When admin
hen select                    ÿ
 "D" then call Delete_It   +
 = "S" then call Read_it ÿ
el = "P" then call Print_it                  ÿ
wise nop;
                                          ÿ
n <> "on" then select                                       ÿ
hen zsel = "S" then call Read_it
hen zsel = "X" then call Ignore_it                         ÿ
 When zsel = "U" then call Unread_it
   When zsel = "P" then call Print_it
   otherwise nop;
     end
therwise n+
 end    ÿ
d              ÿ

wise nop               ÿ
                                ÿ

nal User_Display                      ÿ
                                                 ÿ
 Do_Admin:
 lockdd = "LOCK"random()                             ÿ
                                                                  ÿ
     if "OK" = sysdsn("'"news_dsn"(LOCK)'") then do
        if force <> "on" then do                                    ÿ
          Address TSO,
   ÿ
            Address TSO,
   ÿ
              Addresÿ
                  "Free f("lockdd")"
                smÿ
                  lmsg = "The News Adÿ
                           "use by:" strip(lock.1) "Contact that individ
                           "verifÿ
,                            "To over-ride just deleteÿ
ws",                           "data set: '"news_dsn"'"
                        call do_msg             ÿ
                          exit 0                                       +
                            end                                      ÿ
                           end                                 ÿ

                             else do
      ÿ
                                      "Alloc f("lockdd") ds('"news_dsn"(
Shr"                                lock. = null
                       ÿ
             ÿ
c')                                     Address TSO,
                                        ÿ
 lock."                     +
                          ÿ
                                              end          ÿ

                                         ÿ

                                                 if "OK" <> sysdsn("'"ad
'") then do                                         Addrÿ
                                                      "Alloc DS('"admin_
ew Space(15,1ÿ
ksize(0)"                                               Address TSO,   ÿ
                                                          "Free DS('"adm
)"                            ÿ
                                                            else do
      ÿ
)                                              ÿ
,                                                                      "
"admin_dsn"(news)'"  ÿ
SO,                                                             ÿ
te '"admin_dsn"(itemtbl)'"
("ON")                              ÿ

 ÿ
NEWS DATASET ID('"NEWS_dsn"')"                     ÿ
EWS DATASET ID('"admin_dsn"')"
                  ÿ
 DATAID(prdnews) DATASET('"news_dsn"') Enq(shr)"                  ÿ
it Dataid(news)    DataSet('"admin_dsn"') Enq(shr)"
                                   +
Copy FROMID("prdnews")",         ÿ
 ÿ
 "LMCopy FROMID("prdnews")",
        "TODATAID("news") FROMMEM(itemtbl) Replaceÿ
                ÿ
     "LMFREE Dataid("prdnews")"
     "LMFREE Dataid("news")"                                       ÿ
                               ÿ
         tbopen:
         "TBOPEN NEWS LIBRARY(NEWS) WRITE"
    ÿ
 */              Select                     ÿ
   */              When rc = 8 then do
                      "ÿ
                                 "Names(Subject Member Statÿ
ers)",                             "Library(news) Write"
                          "TBSort   newsÿ
                            "TBSAVE news REPLCOPY LIBRARY(news)"
                              call Create_New_Item
                              end                        ÿ
                             When rc = 12 then do        /* 12 - Table i
nq failedÿ
                                     "TBCLOSE news ReplCopy Library(News
                                       open_sw = "on"
                        ÿ
                                         end
           ÿ
                                       ÿ
n") in use - try later"                   "Setmsg Msg(RNEW000)"
                            ÿ
                                            "LIBDEF NEÿ
                                              exit 0
                                             ÿ
                                             When rc > 12 then do    ÿ
 - Input library not allocated */                 smsg = null
 - Severe error                */                 lmsg = news_ÿ
 Contact System Support"                            "Setmsg Msg(RNEW000)
    ÿ
                                                      "LIBDEF NEWS"

                   ÿ
                                                         otherwise nop;
                                                         End
              ÿ
                                                         text = null

                               ÿ

                                                             /* --------
--------------------------------------------- * ÿ
Individual processing sub-routines follow:                    *
                                                              *
General routines:                                             *

  * Ignore_It       -  Flag an item as Ingored                    *
  * Print_It        -  Print an item                              *
  * Read_It   ÿ
      * Unread_It       -  Flag item as Unread                        *
      * Search_Table    -  Search all items for character string      *
      * Do_Msg          -  isÿ
          * check_center_names - verifies center names if check_center o
          * check_expire_date  - see if expdate variable in table
          * TBOpen_User     -  Opens the useÿ
              * Read_Index      -  Reads the word index for the Search o
              * Out_A_Here      -  Exit routine
              *                                            ÿ
  *               * ----------------------------------------------------
- *               * Admin routines:
  *               * Create_New_Item - Create a New Item
    ÿ
      *               * Save_It         -  Save the News Table
      *               * Get_Item_ID     -  gets the next item number
      *  ÿ
          *               * --------------------------------------------
--------- */
                        ÿ
------------- *               * Delete_it routine used by the administra
emove items   *               * from the news and information table and
ete the       *               * item frÿ
                  *               * -----------------ÿ
------------------- */             Delete_it:
                                       "LMINIT DATAID(ÿ
sn"') ENQ(SHRW)"                         "LMOPEN DATAID("dataid") OPTIÿ
T)"                                        "LMMDEL DATAID("dataid") MEMB
er")"                                      "LMCLOSE DATAID("dataid")"ÿ
                                             "LMFREE DATAID("dataid")"
       ÿ
                                           return
    +
  ÿ
--------------------------------- *               * Find_it routine to s
e table subject entries for the   *               * specified character
 The search is doÿ
e ISPF TBSCAN which is very limited.  *               * ----------------
------------------------------------- */             Find_It:
                                ÿ
                                                            parse value
h o1 argument                                               find_argumen
ment                                           ÿ
                                                                argument
(argument)                                                      zsel = n
                                                              ÿ
              ÿ
                                                                    star
crp                                                                 find
= null                         ÿ
 null
"RFIND" then do
ev_crp <> stÿ
ast_find = last_find + 1
TBTOP  news"
TBSKIP news     Position(ROÿ
   end
   else do
        "TBSKIP news     Position(ROWID) Nÿ
  ÿ
    if rc = 8 then do
                   s_smsg = find_argument "Found Wrapped"ÿ
                   +
                 ÿ
                         end
                      else s_smsg = find_argument "Found"
                                  ÿ
              /* perform search */
       ÿ
                do forever                         ÿ
                     search = translate(subject)
                     i+
                    ÿ
                              rowcrp = crp
                              last_find = crp
                                  sÿ
       ÿ
in row:" crp                          call do_msg
                                  prev_crp = startÿ
                        ÿ
                                      end
                                   "TBSKIP news POSITION(Rowid)" ÿ
                                     if rÿ
                                             "TBTOP news"
                                              s_smsg = find_argument "Fo
ÿ
                                                  smsg = find_argument "
d"                                                lmsg = find_argument "
d during searchÿ
                                                      call do_msg
                                                      prev_crp = start_c
                              ÿ
            ÿ
                                                          else find_loop
                                             ÿ
                             ÿ
                                                       end
                                                 return     ÿ
                                              ÿ
                                                     Search_Table:
                                                        zcmd_ok = "ok"
                                                          argum+
(o2)                                                        aÿ
rgument)                                                      parse valu
ith zsel sÿ
hit_items                                                       src    =
                                                                  crp
                         ÿ
                                                                    hits
               ÿ
 "                                      +
en_user                               ÿ
ad_index                          ÿ
rds(word.argument) = 0 then do
sg = "The requested word" argument "was not found.", ÿ
       "All items displayed."                      ÿ
  end
lse do                                                              ÿ
    hit = wordindex(word.argument,2)                                ÿ
      hit_items = strip(substr(word.argument,hit))
     "TBTop news "
   ÿ
     ÿ
             if wordpos(member,hit_items) = 0 then do
                "Tÿ
                  end ÿ
                    else hits = hits + 1
                 "TBSkip news"   ÿ
                   if rc > 0 then leaveÿ
                     end
                  lmsg = "The requested word" arÿ
                           "the" hits "displayed items."ÿ
                      end
                 call do_msg                                   ÿ
                   "TBTop news"
                     return

                       /* ----------------------------------------------
------- * ÿ
          *               * --------------------------------------------
--------- */ ÿ
                           +
                         ÿ
                            ÿ
                                       text = overlay(item"/X",text,x+1,
                                       calÿ
                                         enÿ
                                        status = "Ignored"
                                        if show_opt = "new"ÿ
                                            "TBDelete news+
                                              new_counteÿ
                                                if new_counter = 0 then
 Out_A_Here                                       end
                                                else do                ÿ
                                                       if ext_variable =
en             ÿ
                                                            else "TBMOD
e("extÿ
                                ÿ

                     ÿ
--------------------------------------- *        ÿ
print the selected news item.             *               *
                                    ÿ
g is used to include the subject, etc.      *               * as aÿ
he printed item.                              *               *
                                              *    ÿ
 is used to a data set allocated by this        *               * applic
 thÿ
fter printing.                                    *               ÿ
                                                    *               * Th
ll RPRINT generalizeÿ
e actual printing.                                    *               *
-ÿ
                                     ÿ
dmin <> "on" then do
 = pos(" "item"/ÿ
 l = length(item"/R")                                 ÿ
   text = overlay(item"/R",text,x+1,l)
   end                         ÿ
  "Libdef ISPSLIB Dataset Id('"active_dsn"')"                          ÿ
±
                Address TSO,                  ÿ
                    "Allocate F(ISPFILE) DS("report_dsn") NEW Reuse",
        ÿ
                    "FTOpen"                                 ÿ
                      "FTIncl" news_skeleton
                      "FTÿ
                        "Libdef ISPSLIB"
                          "Control Display Save"
                            "Select CMD(%KPRÿ
                              "Control Display Restore"
                              msg_opt = msg()
         ÿ
                                  Address TSO,
                                     "Free f(ISPFILE)"
                        ÿ
                                         "Delete" report_dsn
                                      x = msg(msg_opt)
                                      sÿ
               ÿ
                                             "TBMOD news"
                                             else "TBMÿ
le")"                           ÿ

                                           /* -----------------------ÿ
----------------------------- *               * Rÿ
owse to view the selected       *               * news and information i
e browse uses a customized      *               * ISPF Browse Panel to a
 disÿ
mation is not part of the item      *               * text.
                                    *               * ------------------
-------------------ÿ
   ÿ
do                                                           x = pos(" "
text)                             ÿ
R")                 ÿ
item"/R",text,x+1,l)                                             call Sa
                                                 ÿ
                                     +
                                   ÿ
play Save"                                                      ÿ
taset('"active_dsn"("member")') Panel("browse_panel")"                "C
isplay Restore"                                     ÿ
 "Read"

MOD news"                                                            ÿ
lse "TBMOD News Save("ext_variable")"
              +
            ÿ
--------ÿ
* Unread_it routine will flag an item in the users news item    *
* tracking table as unread ÿ
  * of the table when nexÿ
    * ------------------------------------------------------------- */
   Unread_it:                             ÿ
        if admin <> "on" then do          ÿ
             x = pos(" "item"/",text)
             l = length(item"/U")                        ÿ
               text = overlay(item"/U",text,x+1,l)         ÿ
                 call Save_User
                 end
                status = "Unread"
                  if ext_variable = null then
                     "TBMOD news"
       ÿ
             ÿ

                   /* ÿ
----- *               * Save_iÿ
ration  *               * function to save the updated news table and th
the     *               * updated NEWÿ
et into   *               * the production dataÿ
then        *               * MVS/BDT is invoked to transmit the updates
specified   *               * other locations.      ÿ
              *               *                                 ÿ
                *               * Before the MVS/BDT is processed the in
ey words is     *               * built using the RNEWKEY exec.    ÿ
                  *               *
 +

  ÿ
                                             smsg = null
                ÿ
t allowed"       ÿ
                                                 return
                                 ÿ
                                +
news)"                        ÿ
SET('"news_dsn"') Enq(shr)"                         ÿ
taSet('"admin_dsn"')"                                 if length(created_
 > 0 then                                    ÿ
ords(created_members)                                        "LMCopy ÿ
"prdnews")",                                                          "F
ews")",                                                     ÿ
("word(created_members,new_count)")",
word(cÿ
ace"                                                                end
                                                                "LMCopy
("prdnews")",          ÿ
("news") FROMMEM(news) ToMem(news) Replace"                       "LMCop
ID("prdnewÿ
ID("news") FROMMEM(itemtbl) ToMem(itemtbÿ
d(%RNEWSKEY '"news_dsn"' '"admin_dsn"')"                              "L
DATAID("prdnews")",      ÿ
FromID("news") FROMMEM(index) ToMem(index) replace"      ÿ
E Dataid("prdnews")"
E Dataid("news")"                       ÿ
ength(bdt_nodes) > 0 then do
 call bdt_change
 bdt_msg = "Updates sent to nodes:" bdt_nodes          ÿ
   end
smsg = nullÿ
  lmsg = "News Table saved and copied into production data set.",     ÿ
           "Members updated were:" created_members"." bdt_msg
    call do_msg             ÿ
      Changed = null
     ÿ
     return                                  +
                                           ÿ
         /* --------ÿ
            * Save_user routine will save the users item tracking table
            * after each items status is changed.           ÿ
              * -------------------ÿ
*/             Save_User:
                  if admin = "on" then return
                    "TBPUT" news_id"TBL"          +
                      "TBSAVE "news_id"TBL REPLCÿ
                        return
                ÿ
                       /* -------------------------------------ÿ
--------- *               * Do_msg routine is used to issue the ISPF Mes
          *               * -----ÿ
----------- */             Do_Msg:
                                "Setmsg Msg(RNEW000)"
                             return               ÿ

             ÿ
----------------- *               * Create_new_item routine.       ÿ
                    *               *
                    *       ÿ
ation function to     *               * create new news and information
A cuÿ
ubject, etc.            *               *  ÿ
                          *               * The member name is determine
 item number.        ÿ
--------------------------- */             Create_New_Itemÿ
                                                if admin <> "on" then do
                                      ÿ
                                                     lmsg = "Error: Comm
W is not allowed"                                      call do_msg
                                                       ÿ
                                                         end
        ÿ
,N,D)"                                                  "TBTop news"
                                                          "TBSkip news"
                       ÿ
                                                            date   = dat
         +
       ÿ
ght(item+100000,5)                                                Subjec
": "                                                              "Contr
ay Save"                ÿ
                                                                       "
aset('"active_dsn"("member")') Panel("edit_panel")",                   "
ewEM)"                                   ÿ
_        if rnewsend = "CANCEL" then leave
          if check_center = null then leave
             else call check_center_names                             ÿ
   ÿ
                 else do
                      smsg = null
       ÿ
                          if check_rc = 1 then
                             lmsg = "Verify centers and then save again.
                        ÿ
                              if check_rc = 2 then
                                 lmsg = lmsg "Verify expiration date for
d/yy"                         call do_msgÿ
                                  end
                        end
                      "Control Display Restore"           ÿ
                           "VGET (RNEWSEND)"
                           if rnewsend = "CANCEL" then do
                             smsg = "Cancelled"
                                 lmsg = "Creation of new NEWS item has b
elled"                           "Setmsg Msg(RNEW000)"
                                 end
            ÿÿ
                                     if ext_variable = null then
                                       "TBAdd news Order"
                            ÿ
                                           "TBAdd news Order Save("ext_v
)"                                       created_members = created_membe
r                                        Chÿ
                                             smsg = "OK"
                                             lmsg = "Creation of new NEW
as successful",                                     "- donÿ
the table"                                       "Setmsg Msg(RNÿ
                                                   end
                                             return

ÿ
--------------------------------- *               * Bdt_change routine
        +
      ÿ
tion function to transmit updates to    *               * other location
MVS/BDT.                                *               * --------------
---------------------ÿ
                                                           created_membe
ip(created_members)                                        bdt_item = st
S ITEMTBL INDEX" created_members)   ÿ
ate(bdt_item,","," ")                                          Address T
                                                               do bdt =
ds(bdt_nodes)                                      ÿ
n" then                                                             "BDT
DS('"news_dsn"') SHR Dap(PDS) Parm(r=y s m=("bdt_item"))",             "
('"news_dsn"') SHR Dap(PDS) LOC("word(bdt_nodes,bdt)")"           ÿ
       ÿ
 Q FROM DS('"news_dsn"') SHR Dap(PDS)",
(r=y s m=("bdt_item"))",
 ÿ
d
ss ISPEXEC
n               ÿ

* ------------------------------------------------------------- *
* Get_item_id routine.  Used byÿ
    * get the next item number for new items.                       *
    * ------------------------------------------------------------- */
   Get_Item_ID:                               ÿ
        "TBOPEN ITEMTBL LIBRARY(NEWS) WRITE"
         If rc <> 0 Then               /* Return codes
           Select                      /*  8 - Table does notÿ
            ÿ
                  "TBCreate Itemtbl",
                           "Names(Itemnum)",
                             +
                      itemnÿ
                        "TBADD    Itemtbl"
           ÿ
                          item = itemnum    ÿ
                            return
                          +
                        ÿ
 enq failed    */                 if open_sw <> "on" then do
                                     "TBCLOSE Itemtbl Replcopy Library(n
                                     opÿ
ÿ
                                         end
                                      smsg = null     ÿ
                 ÿ
y later"                                  "Setmsg Msg(RNEW000)"
                                          "LIBDEF NEWS"              ÿ
                                  ÿ
                                              end
                                           When rc > 12 then do        /
nputÿ
 - Severe error                */                 lmsg = news_id "News E
ontact System Support"                            "Setmsg Msg(RNEW000)"
                   ÿ
                                                      exit 0
                                                      end
                                  ÿ
     ÿ
                                                   "TBSkip   Itemtbl"
                                                 ÿ
                      ÿ
                                                       "TBPUT    Itemtbl
                                                       "TBCLOSE ÿ
opy Library(news)"                     ÿ
                                                           return


                                                               /* ------
----------------------------------------------- *               * Tbopen
              ÿ
                                                    *               * Tÿ
tine opens and reads the users item table             *               *
-----------------------------ÿ
= "on" then call Do_Admin
o       ÿ
--------------------------------------------+
rify status of ddname ISPTABL and libdef iÿ
already allocated.  This isÿ
* table name using the dsname of the 1st dsname in the ISPTLIB  *
* allocation.  For this application we want to use the acÿ
  * dsname - thus this is a circumvention foÿ
    * ------------------------------------------------------------- */

     table_dd = listdsi("ISPTABL" "FILE")                    ÿ
       if table_dd = 16 then do
          x = listdsi("ISPPROF" "FILE")
       ÿ
                "Alloc f(ISPTABL) shr ds('"sysdsname"')"
              end
           "TBOPEN "neÿ
               ÿ
                   when rc = 0 then "TBSkip" news_id"TBL"
                   when rc = 8 then dÿ
 */                     "TBCreatÿ
                                    "Library(ISPTABL)"
                          text = null               ÿ
                            item = null          ÿ
                              "TBADD" news_id"TBL"
                              "TBSAVE "news_id"TBL REPLCOPY Libraryÿ
                                show_opt = "all" /* first time */ ÿ
                                  end
                               when rc = 12 then do          /* 12 - Tab
e;ÿ
   ÿ
                                         open_sw = "on"
                 ÿ
                    ÿ
                                          smsg = null
                                ÿ
se - try later"                      +
                                   ÿ
                                               ÿ
                                               when rc > 12 then do
 - Input library not allocated */                 smÿ
20 - Severe error                */                 lmsg = new+
 - Contact System Support"                            "Setmsÿ
                                                        exit 0         ÿ
                                                          end
                                                       otherwise nop;
                                                         End
        ÿ

          ÿ
SET ID('"active_dsn"')"  ÿ
                                                              "TBOPEN NE
RY(NEWS) NOWRITE SHARE"  ÿ
                                          ÿ
--------------------------------------------- *                   * Get
est item number for new checking.       ÿ
----------------------------------------------- */         ÿ
EMTBL LIBRARY(NEWS) NOWRITE SHARE"                                    "T
EMTBL"                                                 ÿ
em = itemnum
 ITEMTBL"                                                              e
                                                                      ÿ

-------------ÿ
ocess for display only NEW items:                           *
     ÿ
Check the high_item value withÿ
* found then exit as we have seen all items..........           *
* ------------------ÿ
 if show_opt = "new" then                      ÿ
      select
      when pos(high_item"/",text) =ÿ
        when pos("/U",text) > 0 then nop                        ÿ
          otherwise  call Out_A_Here
          end                                     ÿ

 ÿç
------- *               * The table is sorted by item number in dÿ
er        *               * so the newest is on the top of the display..
.....     *       ÿ
----------- */             "TBTop  news"
+
                                     ÿ
                                 /* ------------------------------------
----------------- *               * If not admin then update each table
 the status fÿ
                      *               *
                      *               *    /E = Expired
                      *     ÿ
                          *               *    /R = Read
                          *               *    /U = Unread
                          *               *ÿ
        ÿ
----------------------------- */             if admin <> "on" then do
                                                "TBQuery Nÿ
)"                       ÿ
                                                    Do i = 1 to rownews
                                                       Select
                                          ÿ
",text) > 0 then do                                              x = pos
"/",text)                                                        l = len
tem"/") ÿ
bstr(text,x+l,1)                                                     end
                                                                  when p
em"/",text) = 0 then doÿ
s = "New"
= text item"/U"
                                      ÿ
e nop;       ÿ

                                                     ÿ
n status = "R" then status = "ÿ
hen status = "X" then status = "Ignored"
hen status = "U" then status = "Unread"                             ÿ
 When status = "N" then status = "NotAppl"     +
   When status = "E" then status = "Expired" ÿ
     otherwise nop;
   ÿ
* --------------------------------------------------------- * ÿ
  * if NEWS option then do not display 'old' items...         *
  * --------------+
       if show_oÿ
 ÿ
                  "TBDelete news"
                  all_rows = alÿ
                  ÿ
                      else do
                           check_rc = 0       ÿ
                             if cheÿ
                                  call check_center_names
                               call check_expire_date        ÿ
                                 if check_rc = 0 theÿ
                                         new_counter = new_counter + 1
                                         if ext_variable = null then
                                              "TBMOD news"           ÿ
                                                else "TBMOD News Save("e
ble")"                                    end
           ÿ
      ÿ
                                              all_rows = all_rows - 1
                          ÿ
                       ÿ
                                      end
                                    else ÿ
                                        ÿ
                                                "TBMOD news"
                                                else "TBÿ
iable")"                                      end        ÿ
                                           "TBSkip news"
                                        end                            ÿ
                                       call Save_User
                                         end /* end do for admin <> "on"

      ÿ
e          +
         ÿ
                     ÿ

                          ÿ
                                    +
                                  ÿ
                                             ÿ
----------------------------------------- *               * check_center
                                          *      ÿ
                                            *               * ÿ
l verify that the center names entered in     *               * the cent
able are supported (for the Admin function)   *               * ÿ
m should be displayed on this center.           *               *

 if all is OK otherwise it is 1.                  *               * ----

                ÿ
"on" then do
nters = words(ÿ
rc = 0                           ÿ
oc = 1 to total_centers
ocx = word(centers,loc)      ÿ
 if wordpos(locx,check_center) = 0 then check = 1 ÿ
   end
end                                         ÿ
lse if show_opt <> "new" then do                                   ÿ
 if wordpos(center,centers) = 0 then do
             check_rc = 1                                  ÿ
               x = pos(" "item"/",text)
    ÿ
                 text = overlay(item"/N",text,x+1,l)
                   call Save_User
                   enÿ
            end
         ÿ
                                      ÿ
             check_expire_date:
             /* --------ÿ
*               * check_expire_date:                   +
  *               *                                  ÿ
    *               * This routine willÿ
      *               * in the ext_variable in the ISPF Table.  If so, t
ill   *               * be validated for Admin function and for New wiÿ
mine    *               * if the item has expired.    +
          *               *                         ÿ
            *               * Invalid or Expired will cause check_rc to
o 2      ÿ
              *               *                                    ÿ
                *               * --------------------------------------
--------------- */        ÿ
turn                              if length(expdate) = 0 then do
  ÿ
                                          cÿ
                                         return
                 ÿ
                                        if datatype(expdate)ÿ
                                             check_rc = 2
                                ÿ
                                               end
                                              parse value expdate with m
 "/" yy                                       iÿ
                                                if dd = null then check_
              ÿ
                                                  if dd > 31 tÿ
                                                    if mm > 12 then chec
                               ÿ
n                                                     if admin = "on" th
urn                                                     dd = 100 + dd
                                                ÿ
                                                          item_date = yy
(mm,2,2)""suÿ
 then do                                                         ÿ
                                                                   x = p
em"/",text)                ÿ
item"/E")                                                            tex
laÿ
                                          ÿ

                   +
                 ÿ
--------------------------------------------------------- *
s routine reads the words from the index for use with     *
 SEARCH command.                  ÿ

          if read_index = "on" then return
                               else read_index = "on"          ÿ
       ÿ
              Address TSO
              "Alloc f("index_dd") ds('"news_dsn"(INDEX)') Shr Reuse"
ÿ
                  "Free f("index_dd")"
                  Address ISPexec
                 ÿ
                      do idx_count = 1 to index.0
                         word = word(index.idx_count,1)
                         if lengthÿ
                                word.word = index.idx_count
                                else
                                word.word = word.woÿ
                                 end
                             drop index.
                             return                                 ÿ
  ÿ
                                 /* ------------------------------------
----------------- *               * Out_a_here routine.   This is where
ng coÿ
..................    *               * --------------------------------
--------------------- */             Out_A_Here:
                      ÿ
                                            "TBSAVE "news_id"TBL REPLCOP
y(ISPTABL)"                                 "TBCLOSE" news_id"TBL Librar
L)"                                    ÿ
                                             else do
                                                 "LMINIT DATAID(dataid)
'"news_dsn"') ENQ(SHRW)"                         "LMOPENÿ
TION(OUTPUT)"                                        "LMMDEL DATAID("dat
MBER(LOCK)"                                          "LMCLOSE DATAID("da
                                                     "LMFREE DATAID("dat
)"                                                       "LIBDEF PRDNEWS
                                                          end
                                                       "TBEnd news "
            +
          ¶ `                                                exit 0
                                                     {
                                {
©NKAISERA

YSLBD






n×‹


INDOW=NORESP .TYPE=NOTIFY ÿ
                                                               

         'Input data set name must be speÿ
           LPR002  '&LPRSMSG' .WINDOW=NORESP .TYPE=NOTIFY
           ') &LPRLMSG'
             
¦
0000531203325

OPYÇ





?È
mü


"
 


kÈ
Á




)                                                              /* + type
 intens(low )                   information only  */           /* _ type
 intens(high) caps(on ) just(left )         ÿ
t) intens(high) caps(off) just(asis ) color(white)                    `
t) intens(high) caps(off) just(asis ) color(yellow)                   ~
t) intens(high) caps(off) just(asis ) color(turq)          ÿ
extÿ
(text) intens(high) caps(off) just(asis ) color(turq)
(output) intens(high) color(turq)                                      )
                    ÿ
------------------% News and Information Tutorial +---------------------
ction ===>_zcmd
         ÿ
                           Table Selection Options

  Option     Explanation+
   ~                  ÿ
     `  Select    ~Select the current item for Reading
     ~                                                                 ÿ
       `  Delete    ~Delete the selecÿ
         ~
         `  Print     ~Print the selected item
        ÿ
             )Init
             )Proc
              &zcont = rns ewh0a                                   ÿ
                 )End
                 
                                           /* + type(text  ) intens(low
  ÿ
(on ) just(left )               */            ÿ
(off) just(asis ) color(white)                    ` type(text) intens(hi
(off) just(asis )ÿ
ps(off) just(asis ) color(turq)                     % type(textÿ
                                                      ^ type(text) inten
caps(off) just(asis ) color(turqÿ
gh) color(turq)                                      )Body
ÿ
News and Information Tutorial +----------------ÿ
                                                         %
                 ÿ
       Table Status Values                                 ~  ÿ
                                                             ~  Value
nation                            ÿ
                                                               `  Ignore
ou have chosen to mark the item as Ignored.                      `  New
his is a New item that you have never seen before. ÿ
~You have read the item                                            `  Un
~You have noÿ
  ~and you have seen the item in the table display.                 ÿ
                                                                       `
d   ~The item has an expiraÿ
ppl   ~The item is for another center and does not apply to this
     ÿ
                                          +
* Expired only applies if the author estÿ
                        ÿ
 ~  * NotAppl only applies if the author restricted this item to specifi
      center.                                          ÿ
   )Init                                 ÿ
     )Proc
      &zcont = rnewh0                                                 ÿ
       )End                                               Æ
         
                                   /* + type(text  ) intens(low )
    iÿ
st(left )               */            ÿ
just(left ) pad('_') color(turq)          ! type(output) intens(high) ca
just(asis ) color(whÿ
just(asis ) color(yellow)                   ~ type(textÿ
) just(asis ) color(turq)                     % type(text) intens(high)
                                   ÿ
ff) just(asis ) color(turq)                     # type(output) intens(hi
lor(turq)                                      )Body
                                               +--ÿ
nd Information Tutorial +------------------------%Selection ===>_zcmd
         ÿ
                                                   ~    The News ÿ
on Application is a simple way to convey             ~    information to
sers who utilize the ISPF ÿ
ded to inform about changes; new features or           ~    facilities;
ÿ
                                           ÿ
pics are presented in sequence, or may be selected         ~    by numbe
               ÿ
                                                            ÿ
mmand Options                                                  ~    %2+
lection Options               ÿ
Status Values                                                    ~
                                                                   )Init
                                             ÿ

= trans( &zcmdÿ
       1,rnewh1                                             +
         2,rnewh2                                         ÿ
           3,rnewh3              ÿ
             *,'?'
             )
End                                               Æ
 
                           /* + type(text  ) intens(low )
rmation ÿ
)               */            ÿ
) color(white)                    ` type(text) intens(high) caps(off) ju
) color(yellow)        ÿ
s ) color(turq)                     % type(textÿ
                                      ^ type(text) intens(high) caps(off
sis ) color(turq)                     ÿ
                                     )Body                      ÿ
                                       +----------------------% News and
tion Tutorial +------------------------%Selection ===ÿ
                                         %
 ÿ
mmand Options                              ~                        ÿ
                                             ~  Option     Explanation
                  ÿ
                                               `  Find      ~Seach the s
nfoÿ
                                   ÿ
                                                   !             Ex.  Fi
                  ÿ
                                                    ÿ
ext of all news and information items for the          ~             spe
haracter string (no wild cards). ÿ
                                                         !           ÿ
arch abc                                                   ~
                                                ÿ
                                                             )Proc
      n                                                        )End
                                                               ÿ

           /* + type(text  ) intens(low )                   information
           /* _ type( input) intens(high) caps(on ) just(left )
*/            ÿ
                    ` type(text) intens(high) caps(off) just(asis ) colo
)                   ~ type(text) intens(high) caps(off) just(asis ) colo
                    % type(textÿ
           ÿ
rq)                     # type(output) intens(high) color(turq)
                     )Body                      ÿ
                       +--ÿ
+------------------------%Selection ===>_zcmd
                         %                                       ÿ
                           ~             ÿ
                             ~
                             ~  Option     Explanation
  ÿ
                                 `  Select    ~Select the current item f
ng                               ~
                   ÿ
                                     ~
                                     `  Unread    ~Flag the item as Unre
s will allow this item to           ÿ
he appÿ
unread and new items.                    ~
                                         `  Ignore   ÿ
s ignored.  Used to rÿ
d this or should review it again later.      ~
                                             )Init                    V
                                    ÿ
                                                 )End
                                                 
 Default(%+_)                                      ÿ
+ type(text  ) intens(low )                   information only  */
_ type( input) intens(high) caps(on ) just(left )               */
  ! type(text) intens(high) caps(off) just(asis ) color(white)    ÿ
    ` type(text) intens(high) caps(off) just(asis ) color(yellow)
    ~ type(text) intens(high) caps(off) just(asis ) color(turq)
    % type(textÿ
 ÿ
        # type(output) intens(high) color(turq)
     )Body                      ÿ
       +--------+
---------%Seleÿ
           %                                       ÿ
             ~                            Table Command Options
             ~               ÿ
               ~  Option     Explanation                            ÿ
                 ~
                 `  Find      ~Seach the subÿ
 character         ~             string.
     ÿ
                     !             Ex.  Find abc           ÿ
                       ~
                      ÿ
                         ~
                           `  Save      ~Save all changes and propogate
(if appliable) to          ~           ÿ
ation                        ~
         ÿ
                               ~                        ÿ
                                 ~
                        ÿ
                                   )Proc
                                     )End
                                     
+_)                                                              /* + ty
 ) intens(low )                   information only  */           /* _ ty
t) intens(high) caps(on ) just(left )               */ÿ
input) intens(high) caps(on ) just(left ) pad('_') color(turq)
utput) intens(high) caps(off) just(asis ) color(white)
ext) intens(high) caps(off) just(asis ) color(yellow)                ÿ
(textÿ
pe(text) intens(high)
pe(text) intens(high) caps(off) just(asis ) color(turq)
pe(oÿ
dy
--------------------% News and Information Tutorial +-------------------
lection ===>_zcmd  ÿ
 %
 %                          Administration Application
 %                                +
     ~    The News and Informatiÿ
       ~    information to those users who utilize the ISPF interface.
       ~    Information is provided to inform about changes; new feature
         ~    facilities; and to educate.      ÿ
           ~
           ~    The following topics are presented in sequence, or may b
ed        ÿ
               ~
               ~    %1+ Table Command Options
               ~    %2+ Tabÿ
                   ~
                   )Init
                   )Proc                    ÿ
            ÿ
                                       1,rnewh1a
                                       2,rnewh2a             ÿ
                           ÿ
                                           )
                           )End
                             
                                                         /* % type(text
s(high)              Defaults displayed for */           /* + type(text
s(low )                   information only  */           ÿ
ntens(high) caps(on ) just(left )               */              ! type(
ntens(high) caps(on ) just(left ) pad('_')                      ^ type(o
ntens(high) caps(off) just(left ) color(white)                  × type(t
 intens(low ) caps(off) just(asis ) color(white)                    ` ty
t) intens(high) caps(off) just(asis) color(white)                )Body
                                                                 +------
--% Kaiÿ
                                                                     %
                                                                     %
                      ÿ
                        Please be Patient

                                     ÿ

                The Search word index is being generated.
                                                    +
 %  The current phase is:                         ÿ
   %
   %     `phase
  ÿ
       %
       )Init
       )Proc       s
ÿ
           
                                     /* _ type( input) intens(high) caps
st(left )      ÿ
just(left ) pad('_') color(turq)        ÿ
EVERSE) color(turq) just(asis)              ! type(output) intens(high)
) just(asis ) color(turq)     ÿ
) just(asis ) color(yellow)                   ~ type(textÿ
ff) just(asis ) color(turq)                     % type(text) intens(high
                                             ÿ
(off) just(asis ) color(turq)                     + type(text  ) intens(
                                                      skip(on)
                                                    # type(oÿ
) caps(off) just(asis ) color(yellow)              )Body  WIDTH(80) EXPA
           ÿ
                      / /%                           %Command ===>_zcmd
                                     %Scroll ===>_mamt+%
                            ÿ
~xxx   %New        Save       Cancel                     `Line Options:
elect  %P~ÿ
                                             ÿ
bject                                                        +
                         ÿ
                                                              ÿ
 #z                                                              )Init
                                        ÿ
EWH0A                                                                .ZV

SR                                                     ÿ
 &z                                                                    )
                ÿ
CMD = &Z)                                                             +
if (&ztdsels = 0000)                                                ÿ
     &row = .csrrow                ÿ
       if (&row ^= &z)
           if (&zsel = &z)
   ÿ
        if (&ztdsels ^= 0000)
             &row = &z
        IF (&ZSEL ÿ
               if (&Zsel = '=')                                    ÿ
                    &Zsel = &osel
              &osel = &zsel      ÿ
                ver (&zsel,list,S,P,D)
    Ø        )End
             {
                                           /* _ type( input) intens(high
n ) just(left )               */              } type(output) INTENS(HIGH
(REVERSE) color(turq) just(asis)            ÿ
ps(on ) just(left ) pad('_') color(turq)          ! type(output) intens(
ps(off) just(left ) color(turq)                   ` type(text) intens(hi
(off) just(asis ) color(yellow)                   ~ type(textÿ
caps(off) just(asis ) color(turq)                     % type(text) inten
                                                      + type(text  ) int
)                                                       skip(on)
             ÿ
high) caps(off) just(asis ) color(yellow)              )Body  WIDTH(80)
/)                                                     }title
               ÿ
                                         %Scroll ===>_mamt+%
                                                           `Command Opti
nd~xxx   %Search~xxx            ÿ
 %S~-Select  %U~-Unread  %X~-Ignore  %P~-Print                 +
                                                               +Sel +Dat
atus   Subject                                   ÿ
                                                                   )Mode
                                                                   @z+
 !z       #z                                                      ÿ

= RNEWH0
= '(ZSEL Date Status Subject)'
 &zÿ
         &mamt = CSR
       )Proc
        IF (&ZCMD = &Z)ÿ
                if (&ztdsels = 0000)
                   &row = .csrrow
                   if (&row ^= &z)    ÿ
                           if (&zsel = &z)
                               &zsel = S
                    if (&ztdsels ^= 0000)            ÿ
                             &row = &z
                        IF (&ZSEL ^= &Z)
                           if (&Zsel = '=')                         ÿ
     +
   ÿ
                              ver (&zsel,list,S,X,P,U)
   ÿ
                    °        {
                                                           ~ type(Input)
(high) caps(off) jÿ
(high) caps(off) just(asis ) color(turq)                    ÿ
S(OFF) INTENS(HIGH) COLOR(GREEN)                               @ TYPE(IN
S(ON) INTENS(HIGH) COLOR(WHITE)  ÿ
APS(OFF) INTENS(HIGH) FORMAT(&MIXED)                             × AREA(
C) EXTEND(ON) SCROLL(ON) USERMOD(20)                               ! TYP
) INTENS(HIGH) PAD(-)                           ÿ
OUT) INTENS(LOW)                                                    02 T
OUT) INTENS(HIÿ
TAOUT) SKIP(ON) /* FOR TEXT ENTER CMD. FIELD */                ÿ
DATAIN)  INTENS(LOW)  CAPS(OFF)
DATAIN)  INTENS(HIGH) CAPS(OFF)ÿ
E(DATAIN)  INTENS(LOW)  CAPS(IN)
YPE(DATAIN)  INTENS(HIGH) CAPS(IN)
YPE(DATAIN)  INTENS(LOW)  FORMAT(DBCS)          ÿ
 TYPE(DATAIN)  INTENS(LOW)  FORMAT(EBCDIC)
 TYPE(DATAIN)ÿ
20 TYPE(DATAIN)  INTENS(LOW)  CAPS(IN) FORMAT(&MIXED)            ÿ
 )Body  WIDTH(80) EXPAND(//)
 +----------------------/-/-+
---%Command ===>_zcmd     ÿ
Z   ÿ
       `Subject: ~SUBJECT
       `Author:  ~Author                 ÿ
         `Date:    ~Dÿ
Expdate    ×ZDATA ----------------------------------/-/-----------------
----------××                                        / / ÿ
            ×× -----------------------ÿ
--------------× %&PFE+= Save Message   %CANCEL+to abort message
                +                                                      ÿ
                 )INIT                                 ÿ

                     .HELP = ISR20000         /* DEFAULT TUTORIAL NAME
      ÿ
 NAME  */
                         &PFE = PFK(END)
                     ÿ
         +
       ÿ
                               IF (&ÿ
                                   .CURSOR = SUBJECT
                        ÿ
                                 )REINIT           ÿ

                                     REFRÿ
                                       REFRESH(SUBJECT,AUTHOR,DATEÿ
                                         .HELP = ISR20000         /* DEF
ORIAL NAME     */                                         ÿ
                                         )PROC
 ÿ
                                             &ZCURSOR = .CURSOR
                                               &ZCSROFF = .CSRPOS
                ÿ

            ÿ
                               ÿ

                             «                       /*  DYNAMIC AREA SC
TH FROM PQUERY. (80,132,160)                  +
EPTH FROM PQUERY. (24,32,43,27,60)          ÿ
¦
        _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH) FORMAT(&MIXED)
        + TYPE(TEXT) INTENS(LOW)                           ÿ
        ÿ
            ~ type(output) intens(high) caps(off) just(asis ) color(yell
            ` type(text) intens(high) caps(off) just(asis ) color(turq)
              × AREA(DYNAÿ
                } type(output) INTENS(HIGH) HILITE(REVERSE) color(turq)
s)           )BODY   WIDTH(80) EXPAND(//)
         ÿ
                 %Command ===>_zcmd                 / /
Scroll ===>_Z   +`----------------------------------/-/-----------------
-----------------`Subjecÿ
            / /      `Author:  ~Author
            / /      `Date:    ~Date                   / /
`Expire: ~Expdate    `-----------------ÿ
------------------------+×ZDATA ----------------------------/-/---------
------------------------××                                  / /
                        ×× ---------------------------ÿ
-------------ÿ
                               .HELP = ISR10000
                               .ZVARS = 'ZSCBR'                      ÿ
                              ÿ
                                   &ZLines = ' '
                                   &ZColums = ' '
    ÿ
                                     )Reinit
                                       Refresh(ZCMD,ZSCBR,ZDATA)
                   ÿ
                                         )PROC
                                           &ZCURSOR = .CURSOR
                                  ÿ
 ÿ

                                             )ENDÿ
                  #                              /* 5665-402 (C) COPYRIG
ORP 1980, 1989 */                                
                                                                +
   TYPE(INPUT) INTENS(HIGH) CAPS(ON)  JUST(LEFT) COLOR(TURQ)  ÿ
 ~   TYPE(TEXT)  INTENS(LOW)  CAPS(OFF)            COLOR(YELLOW)
ÿ
 )BODY
   +-------% Print Reports and Text on the IBM Advanced Function Printer
---%Command ===>_ÿ

     ~  Dataÿ
       +                          ÿ
         ~  Printer          %===>_PRTDEST + IBM Advanced Function Print
ter      +                 ÿ
           ~  Print Orientation%===>_PRTORNT  +    ÿ
             +     Options:    Portrait (8.5 x 11)        Landscape (11
             +                 P2UP     (2ÿ
 8.5)          +                                            L4UP    ÿ
 x 8.5)          +
                 ~  Lines per Inch   %===>_PRTLPI+   (6, ÿ
                   +
     ÿ
s per Inch (?=list)  +
                       ~  Copy Count       %===>_PRTCOPY+  Number of cop
roduce                ÿ
                         ~  Carriage Control %===>_PRTCC+    ASA or Mach
       ÿ
 not in DSCB)              ~  Printing ÿ
x or Tumble)                 +
                      ÿ
e primarily for dumps          )INIT                    ÿ
                                  .CURSOR = PRTDSN
                                  &PRÿ
                                    &PRTORNT = TRANS(&PRTORNT &Z,PORTRAI
                                      &PRTDEST = TRANS(&PRTDEST &Z,RMP??
                                      &PRTMODE = TRAÿ
                                        &PRTCOPY = TRANS(&PRTCOPY &Z,1 *
          ÿ
)                                         &PRTCHAR = TRANS(&PRTCHARÿ
,*)                                        )PROC
                           +
                         ÿ
  +
ÿ
                                            ÿ
L4UP)                                                     &PRTORNT = TRA
(&PRTORNT,1) P,ÿ
                                                        VER (ÿ
,LIST,PORTRAIT,LANDSCAPE,P2UP,L2UP,L4UP)                  IF (&PRTLPIX ^
2UP,L4UP)                     ÿ
BLANK,LIST,6,8,8.8,10,12,12.8)                                  &PRTLPIX
NS(&PRTLPI 8.8,88 12.8,128 *,*)                               &PRTMODE =
RUNC(&PRTMODE,1) D,DUPLEX S,SIMPLEX T,TUMBLE ÿ
NBLANK,LIST,DUPLEX,SIMPLEX,TUMBLE)                              &PRTCOPY
(&PRTCOPY &Z,1 ÿ
NUM)                                                        ÿ
RANS(TRUNC(&PRTCC,1) A,ASA M,MACH *,*)                              VER
LIST,ASA,MACH)                  ÿ
NT = PORTRAIT)
CB = P&PRTLPIX
ORNT = LANDSCAPE)                                ÿ
TFCB = L&PRTLPIX
RTORNT = Pÿ
PRTFCB = 2UPP                                                     ÿ
 IF (&PRTCHAR = &Z)
     &PRTCHAR = GT20     ÿ
   IF (&PRTCHAR ^= ?)
   ÿ
  IF (&PRTORNT = L2UP)                  ÿ
       &PRTFCB = 2UPL
       IF (&PRTCHAR ÿ
             &PRTCHAR = GT15                           ÿ
           IF (&PRTCHAR ^= ?)
               VER (&PRTCHAR,NONBLANKÿ
GF15,                                    GS15,GT51,GU15,ST15,ST51,GS10ÿ
24)         IF (&PRTORNT = L4UP)
               &PRTFCB = 4UPL                         ÿ
                 IF (&PRTCHAR = &Z)
     ÿ
                   IF (&PRTCHAR ^= ?)                                  +
                         VER (&PRTCHAR,NONBLANK,LIST,GT24)           ÿ
                    +
                  ÿ
                              IF (&PRTLPIX = 6)
        ÿ
EBTR,EITR,ELTR,ESTR,             ÿ
10,PR12,RT10,SR12,ST10)           IF (&PRTLPIX = 8)
                         ÿ
S15,GT12,D224,D225,D226,                        ÿ
,SB12,ST12,ST15)                      IF (&PRTLPIX = 10)
                                          ÿ
                                        IF (&PRTLPIX = 12)     ÿ
                                              VER (&PRTCHAR,LIST,GFC,GSC
                                          IF (&PRTLPIX = 88ÿ
                                                VER (&PRTCHAR,LIST,GT24)
                                              IF (&PRTLPIX = 128)
                                                  VER (&PRTCHAR,LIST,GT2
                                          IF (&PRTCHAR = &Z)
             ÿ
                                                    &PRTCHAR = TRANS(&PR
UP,GT20 L2UP,ÿ
)                           ÿ
X 6,ST10 8,ST15 10,GC15
  12,GSC 88,GT24 128,GT20)    ž                   VPUT (PRTDSN PRTDEST P
RTORNT PRTLPI) PROFILE                     ÿ
                                                   {
ATTR
 _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)                     ÿ
   × AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)
  ÿ
     Ö TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT) PAD(0)
      01 TYPE(DATAIN) INTENS(HIGH) CAPS(ON)
      02 TYPE(DATAOÿ
        03 TYPE(DATAIN)  INTENS(HIGH) CAPS(ON)
        ÿ
          05 TYPE(DATAOUT)  INTENS(Hÿ
            06 TYPE(DATAOUT)  INTENS(LOW)
           )BODY WIDTH(ÿ
             %Member List -- &ZDSN ------------------ÿ
ZMLCR%OFÖZMLTR+%Command ===>_ZCMD
roll ===>_Z   +%Commands:      LOCATE,+
                +%Line commands: / oÿ
                    +&ZMLCOLS
                     ×ZDATA --------------------------------------------
--------------------××                             ÿ
         ÿ
------------------------×)INIT
                           .ZVARS = 'ZSCML'         /* SCROLL AMT ÿ
E  */                     ÿ
                               &ZSCML = CSR
                             )PROC
 ÿ
                                 )END
                                  /*  $M1= MEMLIST   M230     860923   1
FUNCTION TEST   ÿ
                           */         /*
                           */         /*   CHANGED 3 LINES
                      3@M1C*/  ÿ
, 1989 */                                
(%+_)                                                                ^ t
t) intens(non)                                ÿ
put) intens(high)                                                     ÿ
input) intens(non)
text) intens(low) skip(on)                                   ÿ
xpand(!!)
%Kaiserÿ
and  ===>_zcmd

+Dataset:@wdsn          ÿ

           ÿ
 %  +Sysout Class      %===>@hcla+       ÿ
   %  +Local Printer ID  %===>@hpid    +
   %  +Number of Copies  %ÿ
     %  +Print Type        %===>@ptyp    + (enter ? to lisÿ
       %  +Carriage Control  %===>@C+        (Y=yes)
       %  +Bind              %===>@B+    ÿ
         %
           %
           %! ! +Press%ENTER+to invoke print or%&END+to +
el ! !       %                                        ÿ
              ÿ
                 )Init
                    .help = isr00003                                 ÿ
                      .cursor =ÿ
                        if (&ncpy = ' ') &ncpy = '1'
                        if (&hcla = ' ') &hcla = 'a'
    ÿ
                            &end = pfk(END)
                            Vget ( wdsn hcla hpid ncpy ptyp ) Profile
                   ÿ
                                Ver (&wdsn,nb)
                                Ver (&hpid,nb)
                             &plisÿ
RTÿ
                                    Ver (&b,list,Y,N)
                                    Ver (&ptyp,liÿ
                   +
e                Ý                     )End
                                       {
lt(%+_)                                                                ^
put) intens(non)                                                       @
put) intens(high)                                                     ÿ

e(text) intens(low) skip(on)
xpand(!!)
%Kaiserÿ
mmand  ===>_zcmd

+Dataset:@wdsn          ÿ
+%
 %   B+- Browse
 %   C+- Copy                            ÿ
     %        +To Dataset     %===>@cdsn
    +%        +Member Name    %===>@cmem    +
     %   E+- Edit                                         ÿÿ
         %   M+- EMC2 Email
         %        +Send to ID     %===>@emsnd
        +%        +Subject title  %===>@emsub
            +%        +Your password  %===>#empsw   + (not displayed)
               %   P+- Print
               %   T+- TCP/IP Printing
              ÿ
       ÿ
                  +%
                   %! ! &END+- ÿ
                     )ÿ
                          .Help = isr00003
                          .Cursor = zcmd        ÿ
                            IF (&kprcÿ
                                  &zcmd   = &kprcmd
                                  &kprcmd = &z                   ÿ
                                    .Resp = ENTER   ÿ
                                  &sys = &zsysid
                                  &end = pfk(END)
  ÿ

                                   )PROC
                   +
  ÿ

                                            if (&zcmd = XM)
                 ÿ

                                                &Zsel = Trans( trunc (&z
                                ÿ
s)'                                                               C,'Cmd
)'                                                                E,'Cmd
)'                                             ÿ
emc2)'                                                                P,
prnt)'                                                                T,
rprint &wdsn)'                                                ÿ
xmitip ÿ

                                                                       B
it                      ÿ
exit
exit
exit        ÿç
             IN,exit
             EN,exit
              Q,exit       ÿ
               QUIT,exit
                ' ',' '
                  *,'?' )                 ÿ
      &’ ztrail = .Trail
     )END
     {
                                     _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH
                                     × AREA(DYNAMIC) SCROLL(ON) EXTEND(O
                                    ÿ
                                         Ö TYPE(OUTPUT) INTENS(HIGH) JUS
 PAD(0)                                 01 TYPE(DATAIN) INTENS(HIGH) CAP
                                        02 TYPE(DATAOÿ
       ÿ
N)                                          04 TYPE(DATAOUT)  INTENS(LOW
                                            05 TYPE(DATAOUT)  INTENS(Hÿ
                      ÿ
                                               )BODY WIDTH(80)
                                               %Member List -- &ZDSN ---
-------ÿ
                                 %Scroll ===>_Z   +%Commands:      LOCAT
, SELECT, SORT, HELP                              +%Line commands: / or
ct, B = Browse          ÿ
                                                       ×ZDATA ----------
------------------------------------------------------××
                                         ÿ
----------------------------------------------------------×)INIT
                                                             .ZVARS = 'Z
      /* SCROLL AMT VARIABLE NAME  */                     ÿ
  ÿ
                                                                 VPUT (Z
OFILE                                                          )END
                 ÿ
LIST   M230     860923   158590 : FUNCTION TEST          */         /*
0184                                                     */         /*
            V                   +
NGED 3 LINES                  ÿ
-402 (C) COPYRIGHT IBM CORP 1980, 1989 */
¦
                   /* _ type( input) intens(hÿ
        */              ! type(text) intens(high) caps(off) just(asis )
ite)                  ÿ
                          $ type(output) intens(high) caps(oÿ
lor(white)                     hilite(reverse)
                            ` type(textÿ
lor(yellow)                   ~ type(text) intens(high) caps(off) just(a
color(turq)                     @ type(text) intens(high)
                                + type(text  ) intens(loÿ
                                    skip(on)
          ÿ
                                 )Body
                                   +------------------! Print Data via T
R Information +----------ÿ
                                     @
          ÿ
                                       #ÿ
----------------------------------------#)Area Help
                           ÿ
P Connected Printers using LPR             ~           ÿ
                                             ~    This ISPF application
 an easy to use interface for printing      ÿ
re remotely attached via the TCP/IP network.   ~                      ÿ
                                                 ~    LPR is the TCP/IP
nter client command that prints the user         ~    informaÿ
printer connected via the TCP/IP network.  It      ~    communicates to
(Lineÿ
inter is attached.                                   ~
                                                       ~    The informat
 is asked for on theÿ
                                                         `    Input Data
  ===>         ÿ
                                   ÿ
ta set name that contains the information that is to be      ~    printe
 remote printer.  The format is:ÿ
                                                  +
user.data                                       ÿ
  user.data(member)                                +
    'prefix.user.data'                           ÿ
                                                               ÿ
inter Name        ===>
                                                                  ÿ
This is the name of the printer as it is identified to the Host
  on which the printer is attached.

   ÿ
             ÿ
 ~
 `    Host Name (nodÿ
   ~                        ÿ
     ~    This is the TCP/IP Host Name on which the LPD (Line Printer se
     ~    is active that owns the speÿ
       ~                                   ÿ
         ~       e.g.   iscprint.rockwell.com
         ~                                            ÿ
           `    Binary              ===>                  ÿ
             ~
             ~    Used to specify if the user data is to be translated ÿ
CDIC           ~    to ASCII.  Specify`Yes~if the data is already in ASC
mat and          ~    is not to be translated by the LPR command.
                 ~
        ÿ
        ÿ
                     ~    Specify`Yes~if the data to be printed contains
e control            ~   ÿ
act.  Otherwise        ÿ
 then it will be         ~    used.
                         ~                ÿ
                           `    Copiesÿ
                             ~
                             ~    Indicates the number of cÿ
o be printed.                  ~                     ÿ
                                 `    Lines per Page      ===>
                                 ~
                                   ~    Indicates the number of line+
per page to be printed before        ~    a new page is forced.  Bÿ
 0 the maximum number of lines         ~    per page allowed by the prin
 be printed.   +
             ÿ
 ÿ
                                             ~    Indicates if you want
 printed with the name of the ÿ
every page.  Onlÿ
                                                 `    Burst Page
                                               ÿ
                               ÿ
a banner page to be printed before your              ~    data.  This pa
ed as a separator page between multiple              ~    print ÿ
ontains the ISPF Host Name, TSO Userid, and   ÿ
being printed.                                           ~
                                                         `    Notify Com
 ÿ
                                                             ~    This o
ll request that an electronic mail message be generated      ~    to you
e data has completÿ
s is not supported by all versions of LPD so even if you         ~
uest the message, you may not receive it.                        ~
                                   ÿ
pt         ÿ
                                                                     ~
ption may be Portrait, Landscape, or No.  If 'no' isÿ
ostscript control headers ÿ
inter.  Portrait and Landscape will cause the appropriate headers to be
serted into the data stream. `Do not use this on a true Postscript fiÿ
                                         ÿ
  Other Options       ===>

  Thisÿ
 ~    directly supported by this dialog.
 +
 !Note:`Use the Enter kÿ
     `      Use key $LEFT`to scroll down and key $RIGHT`to scroll up.
     )Init
       .cursor = zcmd                   ÿ
      +
    ÿ
           )Proc                                           +
             )end                                        
               {
                                                @ type( input) intens(hi
(off) just(left ) pad('_')                        color(blue)
                                  ÿ
caps(off) just(left ) color(blue)                   _ type( input) inten
caps(on ) just(left )                               › type(text) intens(
ps(off) just(asis ) color(blue)                  ÿ
                                                        × type(text) int
) caps(off) just(asis ) color(blue)                           hilite(usc
                                                        # type(tÿ
ghÿ
                                                            ` type(text)
high) caps(off) just(asis ) color(turq)                     ~ type(text)

ens(low ) caps(off) just(asis ) color(blue)                  )Body
                                                             +----------
--% Print Dataÿ
cmd                                                              `
                                                                 `Enter/
                             ÿ
Data Set    %===>_lprpinds                                         + %
                                                                     `
r Name      %===>!lprdest                   ÿ
st Name (node)  %===>!lprhost                                          +

nary            %===>!lprbin+   Use if the file is already ÿ
Carriagÿ
  Copies            %===>!lprcopy+
  Lines per Page    %===>!lprlcnt+  Lines per page if no CC or (0=defaul
    Header Info       %=ÿ
 `    Burst Page        %===>!lprburst+ Generate a burst page on the pri
 `    Notify Complete   %===>!lprntfy+  Send Mail when print complete
 `    Posÿ
     `    Other Options     %===>@lpruopt
    +`
     )Init              +
          .HELP = lprpÿ
            .cursor  = lprpinds
            &lprbin  = trans(trunc(&lprbin,1) Y,Yes N,No y,Yes n,No &z,N
              &lprcc   = trans(trunc(ÿ
                  &lprcopy = trans(&lprcopy &z,1 *,*)
                  &lprlcnt = trans(&lprlcnt &z,0 *,*)
                  &lprhead = trans(trunc(&lprhead,1)ÿ
Yes)        ÿ
&z,Yes)               &lprntfy = trans(trunc(&lprntfy,1) Y,Yes N,No y,Ye
z,No)                 &lprps   = trans(trunc(&lprps,1) P,Portrait, ÿ
 N,No                        ÿ
pe n,No &z,No)           )Reinit
                          .cursor = lprpinds
  ÿ
 n,No &z,No)                  &lprcc   = trans(trunc(&lprcc,1) Y,Yes N,N
n,No &z,No)                   &lprcopy = trans(&lprcopy &z,1 *,*)
                 ÿ
                                  &lprhead = trans(trunc(&lprhead,1) Y,Y
y,Yes n,No &z,Yes)                &lprburst= trans(trunc(&lprburst,1) Y,
 y,Yes n,No &z,Yes)             ÿ
ÿ
t, L,Landscape N,No                                                    p
t, l,Landscape n,No &z,No)           )Proc     ÿ
                 ÿ
 N,No y,Yes n,No &z,No *,*)               &lprcc   = trans(trunc(&lprcc,
 N,No y,Yes n,No &z,No *,*)               &lprcopy = trans(&lpÿ
                                  ÿ
)                                             &lprhead = trans(trunc(&lp
 Y,Yes N,No y,Yes n,No &z,Yes *,*)            &lprburst= trans(trunc(&lp
,1) Y,Yes N,No y,Yes n,No &z,Yes *,*)           &lpÿ
y,1) Y,Yes N,No y,Yes n,No &z,No *,*)             &lprps   = trans(trunc
1) P,Portrait, L,Landscape N,No
   p,Portraiÿ
name,msg=lpr001)                                      ver (&lprdest,nb)
                                                      ver (&lprhost,nb)
                           ÿ
,No) ÿ
s,No)                                                     ver (&lprcopy,
                                          +
)                     ÿ
,list,Yes,No)                                                   ver (&lp
b,list,Yes,No)                                                  ver (&lp
,list,Yes,No)                          +
nb,list,Portrait,Landscape,No)         >                             )En
                                                                     {

A
OPYÇ
NEWS

&



ÿÿÿÿÿÿÿÿ



on for the RNEWS aÿ
edure RNEWS                                             )CM
                                                        )ÿ
 Dyck                            ÿ
                                                            )TB  65
                                                                       K
Permanente Information Technology ISPF News     ÿ
                                                                Subject:
T                                                               )BLANK 1
           ÿ
     &DATE                                                          Expi
ate: &EXPDATE                                                       )BLA
                            f                                         )I
MBER NT
	
r option KSYS     )CM  Called by Rexx procedure RNEWS
             ÿ
                    )ÿ
                      )CM
                      )TB  6ÿ
                                      ÿ
ormation                  )BLANK 2
                          Subject: &SUBJECTÿ
                            )BLANK 1                   ÿ
                              Item Date:       &DATE
                              Expiration Date: &EXPDATE   +
                                )BLANK 2                ¶
                                    )IM  &MEMBER NT
                                    

