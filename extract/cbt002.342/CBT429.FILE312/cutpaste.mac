Œ\INMR01


 

æ






ADD NAME=#CUT
TORIAL ---------------- CUT and PASTE Edit Macros ------------------ TUT
mmand ===>_ZCMD

                           -----------------------
                           × General Information ×
             ÿ
 %
 +The%CUT+and%PASTE+edit macros allow you to copy or move data from one
 +session to another.       ÿ
   +
   %CUT+copies or moves data from an edit session to a temporary ISPF ta
   %PASTE+copies or moves that data from thÿ
ion. +
     +The edit sessions may be concurrent using split screen.
     +Or data may be cut from an edit session and pasted dÿ
ession.+The temporary ISPF table is destroyed when you exit ISPF.
       +
       +The following topics are presented in sequence, or may be select
number:  %  1+- A simple example -- copy data from one screen to another
         %  2+- An overview of CUT and PASTE
         %  3+- The CUT edit macro -- copy/move data into a table
        ÿ
           %  5+- Nesting CUT and PASTE within another edit macro
           )INIT
           &ZUP = #CUT ÿ
             )PROC
             &ZSEL = TRANS(&ZCMD 1,CUTTUT1
                                 2,CUTÿ
                                   3,CUTTUT3
                                   4,CUTTUT4
                                   5,CUTTUT5         ÿ
                                     *,?)
                 )END
                 ./ ADD NAME=#PASTE                                 ÿ
                   %TUTORIAL ---------------- CUT and PASTE Edit Macros
---------- TUTORIAL%Command ===>_ZCMD
                   %
   +
 ÿ
                       %                           ---------------------
                       %
                ÿ
e data from one edit     +session to another.
                         +
                         %CUT+cÿ
emporary ISPF table.       %PASTE+copies or moves that data from the ISP
into another edit session. +
                           +The edit sessions ÿ
reen.                        +Or data may be cut from an edit session an
 during a later edit session.+The temporary ISPF table is destroyed when
t ISPF.                      +                               ÿ
                               +The following topics are presented in se
or may be selected by number:  %  1+- A simple example -- copy data from
een to another                 %  2+- An overview of CUT and PASTE
                                 %  3+- The CUT edit macro -- copy/move
o a table                        %  4+- The PASTE edit macro -- copy/mov
rom a table                      %  5+- Nesting CUT and PASTE within ano
t macro    ÿ
                                   &ZUP = #CUT
                                   )PROC
                          ÿ
                                                         2,CUTTUT2
                                                         3,CUTTUT3
                                         ÿ
                                                           5,CUTTUT5
                                                           *,?)
                                       )END             ÿ
                                         ./ ADD NAME=CUTPRMPT
                                         %------------------------- CUT
ro Parameters ---------------------------%Command ===>_ZCMD            ÿ
                                           %
                                           +Action%===>_CUT     +
CE, EXTEND, SHOW, DELETE, PROFILE, HELP, ?)+
      ÿ
d for actions%REPLACE, EXTEND, SHOW, DELETE:++   Table name%===>_TABLE
             (alphanumeric, first char alpha)+
                     +
s apply only to actÿ
                                                 +   Exclude status%===>
                 (X or NX)                       +
                                  ÿ
                                                   +      Left column  %
+                  (1 - 255)                       +      Right column %
+                  (1 - 255)                     ÿ
                                                     +   The following p
s may be used instead of line commands               +   (C, CC, Cn, or
n):                                                  +      Rangÿ
_Z   +                 (COPY or MOVE)                  +      Top line
_TCUT  +               (line label, e.g., .ZFIRST)     +      Bottom lin
_BCUT  +               (line label, e.g., .ZLAST)      )INIT

                                                          .ZVARS = '(STA
 RCUT CMDCUT)'                                            .CURSOR = CUT
              ÿ
                                                            &CMDCUT = TR
C(&CMDCUT,1) C,COPY M,MOVE)
                             ÿ

                                                              &CUT = TRA
(&CUT,1)                                    ÿ
CE
D
                                                           ÿ
ETE
FILE
P
?'
)                                                                   VER
NBLANK,LIST,REPLACE,EXTEND,SHOW,DELETE,PROFILE,HELP,'?')            VER
NONBLANK,ÿ
TRANS(TRUNC(&STATUS,1) N,NX X,X *,*)                                  VE
US,NONBLANK,LIST,NX,X)                                                VE
,NUM) VER (&LCUT,RANGE,1ÿ
UT,NUM) VER (&RCUT,RANGE,1,255)
UT ^= &Z) VER (&RCUT,NONBLANK)
UT ^= &Z) VER (&LCUT,NONBLANK)         +
T = TRUNC(&CMDCUT,1) VER (&CMDCUT,NONÿ
T = TRUNC(&TCUT,1) VER (&TEST,PICT,'.')  &TEST = .TRAIL  VER (&TEST,ALPH
T = TRUNC(&BCUT,1) VER (&TEST,PICT,'.')  &TEST = .TRAIL  VER (&TEST,ALPH
(&BCUT ^= &Z)  VER (&TCUT,NONBLANK)                 ÿ

D
ADD NAME=CUTPROF                                                   ÿ
------------------ CUT/PASTE Edit Macro Profile Parameters -------------
Command ===>_ZCMD

Deÿ
)+
 +CUT macro default parameters:
 +   Action      ÿ
   +   Exclude status   %===>_STATUS     +         (X or NX)
   +   Left column      %===>_Z  +                 (1 - 255)
   +   Right column     %===>_Z ÿ
     +   Range command    %===>_Z   +                (COPY or MOVE)
     +   Range top line   %===>_TCUT  +              (line label, e.g. .
     +   Range bottom line%===>_BCUT  +        ÿ
       +
       +PASTE macro default parameters:
       +   Action           %===>_PASTE +              (COPY, ÿ
         +   At               %===>_AT +                 (1 - 255)
         +   Left column      %===>_Z  +                 (1 - 255)
         +   Right column     %===>_Z  +                 (1 - 255)
           +   Range command    %===>_Z      +             (AFTER, BEFOR
ERLAY)     +   Range top line   %===>_TPASTE+              (line label,
IRST)      +   Range bottom line%===>_BPASTE+              (line label,
AST)       )ÿ

              .ZVARS = '(LCUT RCUT CMDCUT LPASTE RPASTE CMDPASTE)'
              .CURSOR = TABÿ
                .HELP = #CUT
                &CMDCUT = TRANS(&CMDCUT C,COPY M,MOVE)
                &CMDPASTE = TRANS(&CMDPASTÿ

                 )PROC
                                                         +
                    VER (&TABLE,NONBLANK,NAME)         ÿ
                      &CUT = TRANS(TRUNC(&CUT,1) R,REPLACE E,EXTEND P,PR
)                     VER (&CUT,NONBLANK,LIST,REPLACE,EXTEND,PROMPT)
                      &STATUS = TRANS(TRUNC(&STATUS,1) N,NX X,X *,*)  ÿ
                        VER (&STATUS,LIST,NX,X)
                        VER (&LCUT,NUM) VER (&LCUT,RANGE,1,255)
                        VER (&RCUT,NUM) VER (&RCUT,RANGE,1,255)
     ÿ
                          VER (&CMDCUT,LIST,COPY,MOVE)
                          &TEST = TRUNC(&TCUT,1) VER (&TEST,PICT,'.')  &
TRAIL VER (&TEST,ALPÿ
 .TRAIL VER (&TEST,ALPHA)   &PASTE = TRANS(TRUNC(&PASTE,1) C,COPY M,MOVE
T)                          VER (&PASTE,NONBLANK,LIST,COPY,MOVE,PROMPT)
                            VER (&Aÿ
                              VER (&LPASTE,NUM) VER (&LPASTE,RANGE,1,255
                              VER (&RPASTE,NUM) VER (&RPASTE,RANGE,1,255
                              VER (&CMDCUT,LIST,COÿ
                                &TEST = TRUNC(&TPASTE,1) VER (&TEST,PICT
EST = .TRAIL VER (&TEST,ALPHA)  &TEST = TRUNC(&BPASTE,1) VER (&TEST,PICT
EST = .TRAIL VER (&TEST,ALPHA)                                   ÿ
                                  IF  (&LCUT   > &RCUT  ) &TEMP = &LCUT
  = &RCUT     &RCUT = &TEMP       IF  (&LPASTE > &RPASTE) &TEMP = &LPAST
E = &RPASTE &RPASTE = &TEMP
ÿ
                                   ./ ADD NAME=CUTTUT1
                                   %TUTORIAL --------- CUT/PASTE Edit Ma
Simple Example ÿ
                                     %
                                     +The following example shows two co
 edit sessions using split scrÿ
 screen via the%CUT+macro,             +then copied into the lower scree
e%PASTE+macro.                         +   -----------------------------
----------------------------------     +   ×%ÿ
                                  +×     +   ×
                                   ×     +   × 000300
                                   ×     +   ×%CC+400 This bÿ
                                     ×     +   × 000500            of th
s                                    ×     +   ×%CC+600
  will be copied ...                 ×     +   × 000700
                                       ×     +   ×
                                         ×     +   ×%.  .  .  .  .  .  .
.  .  .  .  .  .  .  .  .  .  .  .  .  .+×     +   ×%COMMAND ===> paste
                                        +×     +   ×
        ÿ
                                           ×     +   ×%A+0200 ... after
e.                                         ×     +   × 000300
                       ÿ
                                             ×     +   -----------------
----------------------------------------------     )END
                                      ÿ
                                                     %------------------
ew of CUT and PASTE Edit Macros ---------------------%Command ===>_ZCMD
                                                     ÿ
                                                       +The%CUT+and%PAST
acros work together to transfer data from one edit     +session to anoth
e sessions may be on different split screens. %CUT+is  +similar to tÿ
imary commands CREATE and REPLACE, while%PASTE+is similar+to COPY and MO
ever instead of using a data set,%CUT+and%PASTE+use a    +shared tempora
table.                                                   +
   ÿ
           Parameter Syntax                                +Parameter sy
the same as other edit commands. All parameters are        +optional or
ault values. Paramÿ
nd may be specified in lowercase.                            +
                                                             %
            Copying and Moving   ÿ
me as copying, except that the original information is deleted +after it
d. The command%CUT REPLACE+copies/moves data to a table,       +replacin
evious data (if any). %CUT EXTEND+leaves data alÿ
 intact--it copies/moves at the end of the table. The command    %PASTE
ies data from a table. The data may be pasted any number of      +times.
mand%PASTE MOVE+moves data, leaving the table empty.           ÿ
                                                                   +
              (Press ENTER to continue)                            )PROC
                                                                    &ZCO
UTTUT2A                                                              )EN
                                                                     ./
=CUTTUT2A                                                            %--
--------- Ove+
===>_ZCMD  ÿ

            Specifying Line Location Via Line Commands
                          ÿ
e are two ways of specifying where lines of data are to be cut or pasted
first is via line commands. When you use the%CUT+command, you specify
ing via the%C, CC,+or%Cn+line commands. Yÿ
%Mn+commands.%C+and%M+specify a single line.%CC+and%MM+specify a first a
st line.%Cn+and%Mn+specify a number of lines (e.g.,%C5+or%M12).+
                                                        ÿ
When you use the%PASTE+command, you specify the location to receive data
the%A, B, O, OO,+or%On+line commands.%A+specifies copying/moving after t
designated line. %B+specifies copying/moving before the designated lineÿ
 %OO,+or%On+specify overlaying the designated line(s).
 +
 +
 +    ÿ
   +
   +
   +                 ÿ
     +
     +                          (Press ENTER to continue)
     )PROC                          ÿ
        &ZCONT = CUTTUT2B
       )END
       ./ ADD NAME=CUTTUT2B                        ÿ
         %------------------- Overview of CUT and PASTE Edit Macros ----
---------%Command ===>_ZCMD
         %                                                        ÿ
           %                   Specifying Line Location Via Parameters
           +
           +The other way to specify where lines of data are to be cut o
 ÿ
 range+or    %CUT MOVE range. "Range"+is either one or two line labels (
is a period  +followed by a name in the line command area). The first li
ta is        +auÿ
beled .ZLAST;  +the line containing the cursor is automatically labeled
or example, you+might say%CUT REPLACE COPY .ZFIRST .ZCSR.+
               +               +
                 +           ÿ
                   +Similarly, you may specify%PASTE AFTER range, PASTE
ange,+or           %PASTE OVERLAY range.+For example, you might say%PAST
FTER .ZLAST.+      %                        ÿ
                     +
                     +
                     +                                     ÿ
                       +
                       +
                       +                          (Press ENTER to contin
                         )PROC
                          &ZCONT = CUTTUT2C
                         )END
         ÿ
                           %------------------- Overview of CUT and PAST
acros ---------------------%Command ===>_ZCMD
                        ÿ
                             %                           Specifying Colu
s                            +Rather than cutting and pasting entire lin
ions of lines may be         +specifiedÿ
in the current BOUNDS setting. +The default BOUNDS setting is the entire
You can override your current  +BOUNDS via%CUT+parameters:%CUT col-1 col
e%"Col-1"+and%"col-2"+are      +column numbers. For exÿ
ithout overlay honors the columns+used by%CUT,+ignoring the current BOUN
                                 +
                                 %                              PASTEÿ
rlay                               +Overlay replaces portions of lines.
ult is to overlay data within the  +current BOUNDS columns. The original
nds are honored, and data outside  +the current BOUNDS is truncated. You
rridÿ
o override the original cut bounds in+two ways. One way is to place the
ithin the data at the column where   +you wish the cut data to be placed
her way is to use tÿ
PASTE AT 17.                           +
                                       +
                                  ÿ
                                         +                          (Pre
 to continue)                            )PROC
                                          &ZCONT +
                                           )ENDÿ
                                             ./ ADD NAME=CUTTUT2D
                                             %------------------- Overvi
T and PASTE Edit Macros ---------------------%Command ===>_ZCMÿ
                                               %
                                               %
 and Nonexcluded Lines                         +Normally all lines speci
or%CUT+are copied/moved. However you can specify +that only excluded or
excluded lines will be copied/moved via the%X+and%NX+parameters (i.e.,%C
CUT NX).                                         +
            ÿ
   Multiple Tables                                 +You may use as many
s you wish via the%TABLE+parameter. This allows you+to have multiple pie
ut data with easily remembeÿ
c characters, with the first character alphabetic.   +The name must not
ame as any table in your table libraries. For example%CUT TABLE cutpaste
TE TABLE cutpaste.                        ÿ
                                                       %
    Displaying Table Data                              +You may display
 in a table via%CUT SHOW.+The data will be displayed as+eÿ
ded by a MSG line containing the data set name, member   +name, and the
f the data.                                              +
                                                         +
                                                           +
                                                           +
      (Press ENTER to continue)                            )PROC
       ÿ
                                                             )END
                                                             ./ ADD NAME
E                     ÿ
--- Overview of CUT and PASTE Edit Macros ---------------------%Command
D                                                              %
                                     ÿ
               Deleting Table Data                               +Data i
tically deleted via%CUT REPLACE+and%PASTE MOVE.+In addition, you +may sp
T DELETE.+For example,%CUT DELETE TABLE example.    ÿ              +
                                                                   %
               Prompting for Parameters                            +To m
asier to remember the parameters, you may specify%CUT PROMPT+and   ÿç
È%PASTE PROMPT.+This will display a data entry panel on which you can en
 +parameters.
 +
 %ÿ
   +You may specify your own default parameters by specifying%CUT PROFIL
   +Will display a data entry panel on which you can enter parameters wh
 be+remembered acÿ
     %                      CUT   REPLACE TABLE cutpaste COPY
     %                      PASTE COPY    TABLE cutpaste AFTER
     +                          ÿ
       +
       %                           Displaying this Tutorial
       +This tutorial may be displayed via%CUT ÿ
TE ?.    )END
         ./ ADD NAME=CUTTUT3
         %TUTORIAL ---------------------- CUT Edit Macro -----ÿ
-- TUTORIAL%Command ===>_ZCMD
           %
           %     CUT  <REPLACE >  <TABLE table>  <NX>  <col-1 col-2>  <C
<range>      %          <EXTEND  >                 <X >
             %          <SHOW    >
             %          <DELETE  >
            ÿ
               %          <PROFILE >
               %          <HELP × ?>
               +           ÿ
                 +All parameters are optional except that%REPLACE+and%EX
uire either a    %range+of lines or the following line commands:
                 +    %C, CC,+or%Cn+- to cÿ
                   +    %M, MM,+or%Mn+- to move one or more lines to the
                   +
                   +Parameters may be specified in any orÿ
viated.              +If a parameter is not specified, a default is take
our CUT/PASTE        +profile (see the PROFILE parameter). The initial p
alues are:           +     CUT REPLACE TABLE cutpaste COPY
                       +
                       +
                       +                   (Press ENTER for parameter de
s)     +
     ÿ
                            &ZCONT = CUTTUT3A

                    ÿ
                             ./ ADD NAME=CUTTUT3A
                             %TUTORIAL ---------------- CUT Edit Macro P
s ------------------ TUTORIAL%Commaÿ
                               %
                               %REPLACE    +Copy/move lines starting at
nning of a table.              %EXTEND     +Copy/mÿ
d of a table.                    %SHOW       +Display the contents of a
 edit note lines.                %DELETE     +Delete all lines from a ta
                                 %PROMPT     +Display a parameterÿ
                                   %PROFILE    +Set default parameter va
                                   %HELP or ?  +Display this tutorial.
                                   %TABLE table+Name of a table to hold
ÿ
mes in your table library.           %NX         +Copy/move only nonexcl
es.                                  %X          +Copy/move only exclude
               ÿ
ries for copy/move (overrides BOUNDS).+%COPY       +Copy lines if specif
ange+into a table                      +            (instead of%C, CC, C
ommands).                     ÿ
%range+into a table                      +            (instead of%M, MM,
 commands).                              %range      +One or two line la
ch specify the top and bottom lines to be+   ÿ
RST .ZLAST).  Used in conjunction with     +           %COPY+or%MOVE+par
                                           )END
                                           ./ ADD NAME=CUTTUÿ
                                             %TUTORIAL -----------------
TE Edit Macro ---------------------- TUTORIAL%Command ===>_ZCMD
                                             %
                                               %   PASTE  <COPY    >  <T
le>  <AT at>  <col-1 col-2>  <AFTER  >  <range>%          <MOVE    >
                             <BEFORE >         %          <PROMPT  >
          ÿ
                                                 +
                                                 +All parameters are opt
cept that%COPY+and%MOVE+r+
ing line commands:     ÿ
t table lines after a specific line                  +     %B
t table lines before a specific line                 +     %O, OO,+or%On
erlay lines with table lines          ÿ
                                                       +Parameters may b
ied in any order, and may be abbreviated.              +If a parameter i
ecified, a default is taken from your CUT/PASTE      ÿ
ROFILE parameter). The initial profile values are:       +      PASTE CO
 cutpaste AFTER                                          +
                                                         +          ÿ
                                                           +
                                                           +
                                                           +
Preÿ

                                                              &ZCONT = C
                  ÿ
                                                               )END
                                                               ./ ADD NA
T4A                              ÿ
---------------- PASTE Edit Macro ---------------------- TUTORIAL%Comman
CMD                                                              %
                                                ÿ
Copy lines from a table.                                           %MOVE
Move lines from a table.                                           %PROM
Display a parameter entry panel.                               ÿ
 +Display this tutorial.                                             %TA
e+Name of table to hold lines. You may have as many as you like, but +
  they must not duplicate names in your table library.               %AT
   +Column number used instead of the left bound of the lines in a     +
    table.  As an alternative, place the cursor within the data at the +
    column to be used as the left bound.                               %
l-2+Left and ÿ
     +Copy/move table lines after line specified by%range+
      (instead of%A+line command).
     +Copy/move table lines ÿ
        (instead of%B+line command).
LAY    +Overlay lines specified by%range+with lines copied/moved from ta
        (instead of%O, OO, On+line commands+
nge      +One or two line labels which spÿ
            copied/moved (e.g., .ZFIRST .ZLAST).  Used in conjunction wi
           %AFTER, BEFORE,+or%OVERLAY+parameter.
END                                                     ÿ
 ./ ADD NAME=CUTTUT5
 %TUTORIAL ------ Nesting CUT and PASTE Within Other Edit Macros -------
L%Command ===>_ZCMD                                                    ÿ
   %
   %CUT+and%PASTE+may be invoked from within an edit macro as follows:
   +
   %  ÿ
     +
     %     ISREDIT PASTE ... range
     +               ÿ
       +Note that a%range+is required. In other words line commands are
.      +This is because%CUT+and%PASTE+do not specify ISREDIT PROCESS whe
re     +invoked as nested macros. ThN erefore the higher level macro(s)
ess their+own line commands without conflict with%CUT+and%PASTE.+
         )END
         {
841-00409-00409-00000-SYSLBD         /*********************************R
*****************************        *
                            *        *ÿ
r move lines from the current *        * edit session and place them in
 ISPF table. The PASTE macro  *        * will copy or move the data into
 edit session.  See the       *        * tutorial staÿ
 further information.           *        *
                                *        * CUT <REPLACE > <TABLE table>
l-1 col-2> <COPY> <range>       *        *     <EXTEND  >           ÿ
             <MOVE>               *        *     <SHOW    >
                                  *        *     <DELETE  >
                                  *        *     <PROMPT  >
   ÿ
                                    *        *     <HELP × ?>
                                    *        *
                  ÿ
                                      *        * Douglas H. Adams
                                      *        * Mail Code 110-SH28
                                 ÿ
ation                                   *        * 2201 Seal Beach Boule
                                        *        * P.O. Box 2515
                                        *       ÿ
0-1515                                    *        *
                                          *        * (213) 797-2618
                                          *        *           ÿ
                                            *        *******************
********************************************/
                                                     Signal on novalue
                                                       If address() ^==
en do                                                     Say "CUT must
ted under TSO"                                            Exit 12
             ÿ
                                                         If sysvar("SYSI
= "ACTIVE" Then do                                          Say "CUT mus
cuted under ISPF"           ÿ
                                                              End
                                                           Zerralrm = "N
                                           +
                                         ÿ
MACRO (PARM) NOPROCESS"                                        If rc ^=
all error_msg "CUT is an edit macro",,
            "CUT must be invoked under the ISPF editor" ÿ
 "SCAN = OFF"
                                                                 /******
*********************************************************        * Creaÿ
btain cut/paste profile parameter values                  *        *****
**********************************************************/        Addre
EC "TBSTATS CUTPROF STATUS2(STATUS2) LIBRARY(ISPPROF)"             Selec
      ÿ
tus2 = 1 Then do /* table is not open */
ss ISPEXEC "TBSTATS CUTPROF STATUS1(STATUS1)",
           "LIBRARY(Iÿ
status1 = 2 Then do /* table does not exist */
Address ISPEXEC "TBCREATE CUTPROF WRITE SHARE LIBRARY(ISPPROF)"
Table = "CUTPASTE"                  ÿ
  Cut = "REPLACE"
  Status = ""
  Lcut = ""                                        ÿ
    Rcut = ""
    Cmdcut = "C"
    Tcut = ""                                                     ÿ
      Bcut = ""
      Paste = "COPY"
      At = ""
 ÿ
        Rpaste = ""
        Cmdpaste = "A"
        Tpaste =ÿ
          Bpaste = ""
          Address ISPEXEC "TBADD CUTPROF",
                          "SAVEÿ
                                 "TCUT BCUT PASTE AT LPASTE RPASTE",
                                 "CMDPASTE TPASTE BPASTE)"
            Address ISPEXEC "TBSAVE CUTPROF LIÿ
              End
           Else do /* table exists */
              Address ISPEXEC "TBOPEN CUTPROF WRITE SHARE LIB+
                Address ISPEXEC "TBTOP CUTPROF"            ÿ
                  Address ISPEXEC "TBSKIP CUTPROF"
                  End
               End
              When status2 = 5 Then do /* table is open as share write *
                 Address ISPEXEC "TBTOP CUTPROF"
                 Address ISPEXEC "TBSKIP CUTPROF"
         ÿ
                Otherwise
                   Call error_msg "CUTPROF invalid status",,
                        ÿ
RITE"             End

               /***********************ÿ
*********        * Parse parameters specified on edit macro call
        *        *******************************************************
********/        Default_table = table                ÿ
                   Table_expected = 0
                   Nlabel = 0
                   Ncolumn = 0                                       ÿ
                     Parm = translate(parm," ",",")
                     Parse upper var parm value parm
                     Do while value ^== ""
    ÿ
                             When table_expected             Then do
                                                                Table =
                   ÿ
 = 0                                                              End
                               When abbrev("REPLACE",value,1)  Then cut
CE"                            Wheÿ
END"                             When abbrev("SHOW",value,1)     Then cu
W"                               When abbrev("DELETE",value,1)   Then cu
ETE"                             When abbrev("PROÿ
ROMPT"                             When abbrev("PROFILE",value,4)  Then
ROFILE"                            When abbrev("HELP",value,1)     Then
ELP"                               When value == "?"            ÿ
"HELP"                               When abbrev("TABLE",value,1)    The
expected = 1                         When value == "X"               The
 = "X"                               When abbrev("NX",value,1)       The

                                              ncolumn < 2

umn = ncolumn+1
column = 1  ÿ
en lcut = value
se rcut = value
d                          ÿ
n cmdcut = "C"                               When abbrev("MOVE",value,1)
n cmdcut = "M"                               When substr(value,1,1) == "
                                          ÿ
hen do
  Nlabel = nlabel+1
  If nlabel = 1                                          ÿ
    Then tcut = value
    Else bcut = value
    End                                          Otherwise
                                                      Call error_msg val
nvalid",,                                                        "Press
P key for a list of valid parameters"              End
       ÿ
m                                                 End

                      ÿ

                                                 /**********************
*************************************ÿ
                                          *        *********************
******************************************/           When cut == "HELP"
                                                    ÿ
ROL DISPLAY SAVE"                                          Address ISPEX
CT PGM(ISPTUTOR) PARM(#CUT)"                               Address ISPEX
ROL DISPLAY RESTORE"                                       Exit 1  ÿ
                                                             End

                                                       /****************
**ÿ
LE"                                             *        ***************
************************************************/           When cut ==
" Then do        +
 "TBGET CUTPROFÿ
EC "DISPLAY PANEL(CUTPROF)"                                        If rc
n do                                                                  Ad
PEXEC "TBSTATS" table "STATUS1ÿ
s1 = 1
l error_msg table "unavailable",,
              "Table" table "exists in a tablÿ
s ISPEXEC "TBPUT CUTPROF",
          "SAVE(TABLE CUT STATUS LCUT RCUT CMDCUT",
               "TCUT BCUT PASTE AT LPASTE RPASTE",          ÿ
                 "CMDPASTE TPASTE BPASTE)"
ess ISPEXEC "TBSAVE CUTPROF LIBRARY(ISPPROF)"

1

                                                                     /**
**********ÿ
 option "PROMPT"                                              *        *
**************************************************************/
ut == "PROMPT" Then do   ÿ
ddress ISPEXEC "TBGET CUTPROF"
ddress ISPEXEC "DISPLAY PANEL(CUTPRMPT)"
f rc ^= 0 Then exit 1                   ÿ
 End

herwise nop                                            ÿ
End

********************************************************************* ÿ
 Validate and create or open cut/paste table if necessary             *
**********************************************************************/
f table_expected Then call error_msg "Table name missing",,
     ÿ
 If ^ datatype(substr(table,1,1),"uppercase") ×,
    ^ datatype(table,"alphanumeric")
 Then call error_msgÿ
                    "Name must be alphanumeric, first character alphabet
   Address ISPEXEC "TBSTATS" table "STATUS2(STATUS2)"
   Select                          +
        When status2 = 1 Then do ÿ
             If table ^== default_table Then do
                Address ISPEXEC "TBSTATS" table "STATUS1(STATUS1)"
                If status1 = 1 Then call error_mÿ
                                        "Table" table "exists in a table
"                 End
               Address ISPEXEC "TBCREATE" table "NOWRITE SHARE ÿ
                 If rc ^= 0 Then do
                    Address ISPEXEC "TBOPEN" table "NOWRITE SHARE"
                    If rc ^= 0 Then call error_msg "Open failed",,
                                              "Table" table "cannot be o
c" rc                 End
                   End
             ÿ
                  Otherwise
                     Call error_msg table "Invalid status",,
                            ÿ
 NOWRITE"           End
                 Address ISPEXEC "TBQUERY" table "NAMES(NAMES) KEYNUM(KE
                 If names ^== "(CUTDATA)" ×ÿ
                      Address ISPEXEC "TBEND" table
                      Call error_msg table "unavailable",,
                                     "Table" table "was noÿ
 macro"                 End

                     /**************************************************
***************        * Process option "SHOW"
              *        *************************************************
**************/        If cut == "SHOW" Then do
        ÿ
                            Select
                               When rc = 0
                       ÿ
DEST"                            When rc = 8
                                    Then do
                                    Adÿ
"                                     If linenum = 1 & colnum = 0
                                      Then linenum = 0
                                      End            +
                                     Otherwise     ÿ
                                          Call error_msg "Invalid line c
,                                                        "Valid commands
OW are A or B"                         End                        ÿ
                                      Dataset = ""
                                      Address ISPEXEC "TBBOTTOM" table
                                      Do rows = 0 by 1 while rc = 0
 ÿ
"= NOTELINE (CUTDATA)"                     If dataset ^== "" Then do
                                              Msg = dataset"("member")
 lcut rcut      ÿ
enum "= MSGLINE (MSG)"                          Dataset = ""
                                                End
                               ÿ
UMBER(-1)"                                     End
                                            Zerrsm = rows "lines display
                                            Zeÿ
                                              Address ISPEXEC "SETMSG MS
2)"                                           Exit 1
                                              End            ÿ

                                             /**************************
*************************************        * Process option "DELETE"
                                      *        *************************
**************************************/        If cut == "DELETE" Then d
                                                  Address ISPEXEC "TBBOT
le         ÿ
                                                       Address ISPEXEC "
" table                                                End
                          ÿ
ble                                                   Zerrsm = "All data
"                                                     Zerrlm = "All data
 from table" table                       ÿ
MSG(ISRZ002)"                                           Exit 1
                                                        End
                                                        ÿ
                                                       /****************
***********************************************        * Process bounds
d right columns)                              *        ****************+
************************************************/        Address ISREÿ
TH) = DATA_WIDTH"                                          Width = forma
                                                           Select
                                                              When ncolu
 lcuÿ
ISREDIT "(LCUT RCUT) = BOUNDS"                                  When nco
 Then call error_msg "column number missing",,
  "one column numbeÿ
                                                                  End
                                                               Left = mi
cut)                              ÿ
(lcut,rcut),width)                                               Lcut =
                                                                 Rcut =
                                                 ÿ
th Then call error_msg "Column" left "invalid",,
                 "Left column" left "is greater than" width        Lengt
t-left+1                                                        ÿ
                                                                     /**
*************************************************************        * P
ange (top and bottom lines)                                 *        ***

SREDIT "(LEVEL) = MACRO_LEVEL"                                         I
= 1 Then do
s ISREDIT "PROÿ
rocess = rc
nge = ".ZFRANGE"
nge = ".ZLRANGE"             ÿ
d
do
_process = 4                                ÿ
Zfrange = ".ZFIRST"
Zlrange = ".ZLAST"
End                                                        ÿ
elect
  When nlabel = 0 & rc_process = 0 Then do
     Address ISREDIT "(CMDCUT) = RANGE_CMD"
       Address ISREDIT "(TOP) = LINENUM" zfrange
       Address ISREDIT "(BOTTOM) = LINENUM" zlrange
       End
    When +
       ÿ
           If rc ^= 0 Then call error_msg tcut "invalid",,
                                          tcut "invalid or not found"
           Bottom = toÿ
             End
          When nlabel = 2 & rc_process ^= 0 Then do
             Address ISREDIT "(LINE1)ÿ
               If rc ^= 0 Then call error_msg tcut "invalid",,
                                              tcut "invalid or not found
               Address ISREDIT "(LINE2) = LINENUM" bÿ
                 If rc ^= 0 Then call error_msg bcut "invalid",,
                                                bcut "invalid or not fou
                 Top = min(line1,line2)                            ÿ
                   Bottom = max(line1,line2)
                   End
                When nlabel = 0 & rc_process ^= 0
  ÿ
                                         "Specify range or copy/move lin
d(s):",                                  "C, CC, Cn, M, MM, or Mn"
                 ÿ
                       Then call error_msg "Command conflict",,
                                     cmdcut "line command conflicts with
arameter"           End         ÿ
                   Rows = bottom-top+1

                   Select                      ÿ

                     /**************************************************
*************        * Process option "REPLACE"               ÿ
              *        *************************************************
**************/           When cut == "REPLACE" Then do
                             Address ISPEXEC "TBBOTTOM" table "NOREAD"
                               Do until rc ^= 0
                                  Address ISPEXEC "TBDELETE" table
                                  End
            ÿ                    End

                           /********************************************
*******************        ÿç
                                *        *******************************
********************************/           When cut == "EXTEND" Then Ad
PEXEC "TBBOTTOM" table "NOREAD"           ÿ
                                              Otherwise nop
                                              End
                                                         ÿ
                                             /**************************
*************************************        * Process data
                                    *        ***************************
**************************************/        Lines = 0
                                               Address ISREDIT "(DATASET
SET"                                           Address ISREDIT "(MEMBER)
R"     ÿ
 LCUT RCUT) MULT("rows")"
                                                 Do line = top to bottom
                      ÿ
                                                         Address ISREDIT
US) = XSTATUS" line                                      If status ^== x
hen iterate                          ÿ
                                                        Address ISREDIT
A) = LINE" line                                         If length ^= wid
do                                                  ÿ
en do                                                           Editdata
ay(" ",cutdata,left,length)                                     Address
"LINE" line "= (EDITDATA)"                                      Endÿ
                                                               Cutdata =
cutdata,left,length)                                           End
                                                            Cutdata = st
atÿ
BADD" table firstrow                                          Lines = li
                                                              Firstrow =
                 ÿ

                                                             If cmdcut =
length = width                  ÿ
DIT "DELETE" top bottom                                        Address I
TBTOP" table                                                   If cmdcut
Then Zerrsm = lines "lines copied"             +
  Else Zerrsm = lines "lines moved"          ÿ
table" table                                                       Addre
EC "SETMSG MSG(ISRZ002)"                                           Exit
                                                            ÿ
                                                                     /**
*************************************************************        * I
or message and exit abnornally                              *        ***
**************************************************************/        E
: Procedure                                                            P
 zerrsm,zerrlm                                                         Z
= "YES"   ÿ
= "#CUT"
 ISPEXEC "SETMSG MSG(ISRZ002)"
                         ÿ

*******************************************************************
p uninitialized variables               ÿ
********************************************************************/
alue:
Say "Uninitialized variable in line" sigl":"           ÿ
  Say sourceline(sigl)
  Trace "?Results"
  Nop                                                                 ÿ
 ./ ADD NAME=PASTE    0100-1995013-1995013-0841-00407-00407-00000-SYSLBD
 /*********************************REXX*********************************
 *
 * PAÿ
   * ISPF table into the current edit session. The table must have
   * previously been created by the CUT macro.  See the tutorial startin
   * with panel #CUTÿ
     *
     * PASTE <COPY  > <TABLE table> <AT at> <col-1 col-2> <AFTER>   <ran
     *       <MOVE  >              ÿ
       *       <HELP×?>                                     <OVERLAY>
       *       <PROMPT>
       *                                          ÿ
*        *
*        * Douglas H. Adams
*        * Mail Code 110-SH28                                    +
  *        * Rockwell International Corporation                ÿ
    *        * 2201 Seal Beach Boulevard
    *        * P.O. Box 2515
    *        * Seal Beach, California 90740-1515
      *        *
      *        * (213) 797-2618
      *        *
      *      ÿ
********/
                 Signal on novalue
                 If address(ÿ
                      Say "CUT must be executed under TSO"
                      Exit 12
                      End                  ÿ
                     If sysvar("SYSISPF") ^== "ACTIVE" Then do
                        Say "CUT must be executed under ISPF"
                        Exit 12                           ÿ
                          End
                       Zerralrm = "NO"
                       Zerrhm = "#CUT"
                         Address ISREDIT "MACRO (PARM) NOPROCESS"
                         If rc ^= 0 Then call error_msg "PASTE is an edi
,,                                                  "PASTE must be invok
 the ISPÿ

                           /********************************************
*******************    ÿ
                    *        *******************************************
********************/        Address ISPEXEC "TBSTATS CUTPROF STATUS2(ST
IBRARY(ISPPROF)"             Select   ÿ
                                  When status2 = 1 Then do /* table is n
*/                                   Address ISPEXEC "TBOPEN CUTPROF WRI
 LIBRARY(ISPPROF)"                   If rc ^= 0 Then ÿ
oes not exist",,                                  "CUT/PASTE profile mus
ated by the CUT macro"                 Address ISPEXEC "TBTOP CUTPROF"
                                       Address ISPEXEC "TBSKIP CUTPRÿ
                                         End
                                      When status2 = 5 Then do /* table
as share write */                        Address ISPEXEC "TBTOP CUTPROF"
   +
 ÿ
                                          Otherwise
                                             Call error_msg "CUTPROF inv
tus",,          ÿ
open as other than SHARE WRITE"             End

                               ÿ
***********************************        * Parse parameters specified
macro call                        *        *****************************
**********************************/        Tabÿ
                                             At_expected = 0
                                             Ncolumn = 0
                                             Nlabel = 0      ÿ
                                               Parm = translate(parm," "
                                               Parse upper var parm valu
                                               Do while value ^== ""
                                                    Select
                                                       When table_expect
       Then do
          Tÿ
            Table_expected = 0
            End                                          When at_expecte
         Then do          ÿ
              At = value
              At_expected = 0
              End                        ÿ
value,1)     Then paste = "COPY"                             When abbrev
value,1)     Then paste = "MOVE"                             When abbrev
",value,1)   Then paste = "PROMPT"                      ÿ
",value,1)     Then paste = "HELP"                             When valu
               Then paste = "HELP"                             When abbr
E",value,1)    Then table_expected = 1                         When abbÿ
",value,2)       Then at_expected = 1                            When da
alue,"number") &,                                                     nc
2                Then do
      ÿ
                      If ncolumn = 1
                      Then lpaste = value
                     +
                   ÿ
ev("AFTER",value,2)    Then cmdpaste = "A"                             W
ev("BEFORE",value,1)   Then cmdpaste = "B"                             W
ev("OVERLAY",value,1)  Then cmdpasÿ
bstr(value,1,1) == "." &,
abel < 2                 Then do
                         Nlabel = nlabel+1       ÿ
                           If nlabel = 1
                           Then tpaste = value
                           Else bpaste = value                  ÿ
                             End
erwise
Call error_msg value "is invalid",,

nd
e upper var parm value parm
              ÿ

t
                             ÿ
*********************************************************************
rocess option "HELP"                                                *
********************************************ÿ
  When paste == "HELP" Then do
     Address ISPEXEC "CONTROL DISPLAY SAVE"
     Address ISPEXEC "SELECT PGM(ISPTUTOR) PARM(#CUT)"     ÿ
       Address ISPEXEC "CONTROL DISPLAY RESTORE"
       Exit 1
       End

   /********************************************************************
   * Process option "PROMPT"
   ******ÿ
        When paste == "PROMPT" Then do
           Address ISPEXEC "TBGET CUTPROF"
           Address ISPEXÿ
             If rc ^= 0 Then exit 1
             End
                                       +
            Otherwise nop            ÿ
              End

           /****************************************ÿ
*****        * Validate and open cut/paste table if necessary
    *        ***********************************************************
****/        If table_expected Then call error_msg "Table name missÿ
                                       "TABLE keyword must be followed b
e name"        Address ISPEXEC "TBSTATS" table "STATUS2(STATUS2)"
               Select
  ÿ
                       Address ISPEXEC "TBOPEN" table "SHARE NOWRITE"
                       If rc ^= 0 Then call error_msg table "does not ex
                 ÿ
 CUT macro"              End
                      When status2 = 4 Then nop /* table is open as shar
e */                  Otherwise ÿ
                           Call error_msg table "Invalid status",,
                                          "Table" table "is open as othe
HARE NOWRITE"           End                    ÿ
                       Address ISPEXEC "TBQUERY" table "NAMES(NAMES) ROW
UM)",                                                  "KEYNUM(KEYNUM)"
                       If names ^= "(CUTDATA)" × keynum ^= 0 Tÿ
                            Address ISPEXEC "TBEND" table
                            Call error_msg table "unavailable",,
                                           "Table" table "was not create
he CUT macro"                 End
                           If rownum = 0 Then call error_msg "Table" tab
mpty",,                                                   "Table" table
t contain anÿ
                             /******************************************
*********************        * Process bounds (left and right columns)
                    *      ÿ
**********************/        Address ISREDIT "(WIDTH) = DATA_WIDTH"
                               Width = format(width)
                               Select     ÿ
                                    When ncolumn = 0 & lcut == ""
                                       Then address ISREDIT "(LPASTE RPA
OUNDS"                              When ncolumn = 2 Then+
mn number missing",,                                   ÿ
specified--two are required"            Otherwise nop
                                        End
                                     Left = min(lpaste,rpaste)        ÿ
                                       Right = min(max(lpaste,rpaste),wi
                                       Lpaste = left
                                       Rpaste = right
     ÿ
lumn" left "invalid",,                                                 "
umn" left "is greater than" width
                    ÿ
***********************************        * Process cursor or AT parame
rride table bounds)               *        *****************************
**********************************/ÿ
                                                When at == "" Then do
                                                   Address ISREDIT "(,CU
CURSOR"                                           ÿ
                                                     End
                                                  When at ^== "" & CMDPA
O" Then do                                           If at > widtÿ
rror_msg "AT value" at "invalid",,
    "AT value" at "is greater than" width              End
                                                    When at ^== "" & CMD
ÿ
nd conflict",,                                                      "AT
must only be specified with O line command"          End
               ÿ
                                                     /******************
*********************************************        * Process range (to
ttom lines)                   ÿ
**********************************************/        Address ISREDIT "
= LINENUM .ZLAST"                                      Address ISREDIT "
= MACRO_LEVEL"                               ÿ
                                                            Address ISRE
CESS DEST RANGE O"                                          Rc_process =
                                                            ÿ
E"                                                            Zlrange =
E"                                                            Zdest = ".
                                                              End
                                                             Else do
                                                                  rc_pro
2                                                                 Zfrang
IRST"                                                             Zlrang
AST"    ÿ
AST"                                                                End
                                                                 Select
                       ÿ
 = 0 Then do

e = "A"                               ÿ

process = 0 Then call error_msg "Line command conflict",,
                    "A or B command conflicts with O ÿ
label = 0 & rc_process = 4 Then do
ress ISREDIT "(TOP) = LINENUM" zdest
paste = "A"                                                         ÿ
nd
 nlabel = 0 & rc_process = 8 Then do
ddress ISREDIT "(CMDPASTE) = RANGE_CMD"
ddrÿ
 Address ISREDIT "(BOTTOM) = LINENUM" .zlrange
 Top = format(top)
 Bottom = format(bÿ
   End
When nlabel = 0 & rc_process = 12 Then do
   Address ISREDIT "(TOP) = LINENÿ
     Address ISREDIT "(BOTTOM) = LINENUM" zlrange
     Top = format(top)
     Bottom = format(bottom)                    ÿ
       If top ^= bottom Then call error_msg "Missing line commands",,
                                    "Enter line command: A, B or O/OO/On
       Cmdpaste = "A"                                          ÿ
         End
      When nlabel > 0 & rc_process < 12
      Then call error_msg "Command conflict",,
                           "Line command conflicts with line label param
        When nlabel = 1 & cmdpaste == "A" Then do
           Address ISREDIT "(TOP) = LINENUM" tpaste
           If+
           ÿ
"              End
            When nlabel = 1 & cmdpaste == "B" Then do
               Address ISRÿ
                 If rc ^= 0 Then call error_msg "Invalid label" tpaste,,
                                           "Label" tpaste "is invalid or
ed"              Top = top-1             ÿ
                   End
                When nlabel = 1 & cmdpaste == "O" Then do
                   Address ISREDIT "(TOP) = LINENUM" tpaÿ
                     If rc ^= 0 Then call error_msg "Invalid label" tpas
                                               "Label" tpaste "is invali
efined"              Bottom = top                                      ÿ
                       End
                    When nlabel = 2 & cmdpaste ^== "O"
                       Then call error_msg "Too many labels",,
      ÿ
 or BEFORE"           When nlabel = 2 & cmdpaste == "O" Then do
                         Address ISREDIT "(FIRST) = LINENUM" tpaste
                     ÿ
,,                                                   "Label" tpaste "is
or undefined"              Address ISREDIT "(LAST) = LINENUM" bpaste
                           If rc ^= ÿ
te,,                                                   "Label" bpaste "i
d or undefined"              Top = min(first,last)
                             Bottom = max(first,lasÿ
                               End
                            Otherwise
                               Call error_msg "Catastrophic error"ÿ
                                                "Catastrophic error occu
processing range"             End
                           Lines = 0
 ÿ

                             Select
                ÿ
                               /****************************************
***********************        * Destination specified (A or B command)
                      *        ÿç
************************************/           When cmdpaste == "A" × c
== "B" Then do                                     Address ISPEXEC "TBTO
                                              ÿ
ble                                                  Rc_skip = rc
                                                     Do line = top by 1
_skip = 0                                               Addreÿ
AFTER" line "= <(LCUT) (CUTDATA)>"                        If rc = 4 Then
ed = truncated+1                                          Lines = lines+
                                                          Address ISPEXE
KIP" table                                                  Rc_skip = rc
                                                            End line
                                                         End
           ÿ
                                                     /******************
*********************************************        * Range specified (
r On command)             ÿ
**********************************************/           When cmdpaste
hen do                                                       If at ^= 0
paste                                    ÿ
r_msg "Cursor out of bounds",,
"Cursor position greater than right bound" rpaste              Line = to
                                                        ÿ
= bottom                                                            Addr
XEC "TBTOP" table                                                   Addr
XEC "TBSKIP" table                                                  Rc_ÿ
rc                                                                    Do
line to bottom while rc_skip = 0
 0 Then do
 = lcuÿ
ght = rcut
d
do                   ÿ
Left = at
Right = at+rcut-lcut
End                                 ÿ
ddress ISREDIT "(EDITDATA) = LINE" line
tart_cut = max(1,lpaste-lcut+1)
ength = min(right,rpaste)-max(left,lpaste)+1       +
 Cutdata = substr(cutdata,start_cut,length)      ÿ
   Start_paste = max(left,lpaste)
   Editdata = overlay(cutdata,editdata,start_paste)
   Address ISREDIT "LINE" line "= (EDITDATA)"                   ÿ
     If left < lpaste × right > rpaste
     Then truncated = truncated+1
     Lines = lines+1

       Rc_skip = rc
       End line
    End       ÿ
   End

End                          ÿ

elect
                                            ÿ
 /**********************************************************************
 * Process MOVE command
 **********************************************************ÿ
      When paste == "MOVE" Then do
         Address ISPEXEC "TBBOTTOM" table
         Do until rc ^= 0
              Address ISPEXEC "TBDELETE" table
              End
           Address ISPEXEC "TBEND" table
         ÿ
                Zerrsm = lines "lines moved"
                Zerrlm = "From table" table
                Address ÿ
                  End
               Else do
                  Zerrsm = truncated "lÿ
                    Zerrlm = lines "lines moved from table" table
                    Zerralrm = "YES"
                    Address ISPEXEC "SETMSG MSG(ISRZ00ÿ
                      End
                   End
                                                                     +
               /***************************************************ÿ
*********        * Process COPY command
        *        *******************************************************
********/           When paste == "COPY" Then do
  ÿ
                         If truncated = 0 Then do
                            Zerrsm = lines "lines copied"
                 ÿ
                              Zerralrm = "NO"
                              Address ISPEXEC "SETMSG MSG(ISRZ002)"
                              Enÿ
                             Else do
                                Zerrsm = truncated "lines truncated"
                                Zerrlm = lines ÿ
                                  Address ISPEXEC "SETMSG MSG(ISRZ002)"
                                  End
                               End                            ÿ

                              End

                             /******************************************
*********************        * Normal exit
                    *        *******************************************
************ÿ

                               /****************************************
***********************    ÿ
                        *        ***************************************
************************/        Error_msg: Procedure
                                 Parse argÿ
                                   Zerralrm = "YES"
                                   Zerrhm = "#CUT"
                                   Address ISPEXEC "SETMSÿ
                                     Exit 12

                                     /**********************************
*******************************        * Trap uninitialized variables
                              *        *********************************
******************************/        Novalue:
       +
 siglÿ
                                              Trace "?Results"
                                              Nop
                                            {
