        /* ---------------------  rexx procedure  ----------------------
         * Name:      XMITVM
         *
         * Function:  Transmit a message to VM in PROFS format
         *
         * Syntax:    %XMITVM node.userid option.....
         *
         *            where option(s) are:
         *
         *            MSGDS data-set-name
         *              specifies the data set that contains the
         *              message
         *
         *            MSGDD ddname
         *              specifies the DDname that contains the
         *              message
         *
         *            NOTIFY
         *            NONOTIFY
         *              indicates whether an acknowledgement is being
         *              requested
         *
         *            SUBJECT 'subject for message'
         *              specifies the subject that PROFS will see in
         *              message table
         *
         *            NOMSG
         *              indicates that not confirmation message of
         *              transmission is to occur.
         *
         * Author:    Lionel B. Dyck
         *            Kaiser Permanente Information Technology
         *            25 N. Via Monte Ave.
         *            Walnut Creek, CA 94598
         *            (925) 926-5332
         *            Internet: lionel.b.dyck@kp.org
         *
         * History:
         *            03/27/00:  cleanup for sharing
         *            06/14/93:  Updated to support lrecl>80
         *            09/21/90:  Lionel B. Dyck
         *
         * -------------------------------------------------------------

        parse arg address options

        msgid = sysvar(sysicmd)

        if pos(".",address) = 0 then do
           say msgid "Invalid address ("address") was specified"
           say msgid "The address must be of the format node.userid"
           signal exit8
           end

        upper_options = options
        upper upper_options

        parse value "" with dsn ddn subj notify msg

        if wordpos("MSGDS",upper_options) > 0 then do
           pw = wordpos("MSGDS",upper_options)
           if ddn = "" then
                       dsn = word(upper_options,pw+1)
                       else do
                       say msgid "Both MSGDS and MSGDD were specified,"
                       say msgid "please correct your options and try ag
                       exit 8
                       end
           end

        if wordpos("MSGDD",upper_options) > 0 then do
           pw = wordpos("MSGDD",upper_options)
           if dsn = "" then
                       ddn = word(upper_options,pw+1)
                       else do
                       say msgid "Both MSGDS and MSGDD were specified,"
                       say msgid "please correct your options and try ag
                       exit 8
                       end
           end

        if wordpos("NONOTIFY",upper_options) > 0 then do
           if notify = "" then
                          notify = "off"
                          else do
                          say msgid "Notify and NoNotify were both speci
                          say msgid "Notify is being used as the default
                          end
           end

        if wordpos("NOTIFY",upper_options) > 0 then do
           if notify = "" then
                          notify = "on"
                          else do
                          say msgid "Notify and NoNotify were both speci
                          say msgid "Notify is being used as the default
                          end
           end

        if wordpos("NOMSG",upper_options) > 0 then msg = "off"

        if wordpos("SUBJECT",upper_options) > 0 then do
           pw = wordpos("SUBJECT",upper_options)
           pc = wordindex(upper_options,pw)
           sopt = overlay("SUBJECT",options,pc,7)
           options = sopt
           parse value options with x "SUBJECT" "'" subject "'" more
           end

        if dsn = "" & ddn = "" then do
           say msgid "Neither the MSGDS or MSGDD were specified."
           say msgid "Command terminating - try again."
           signal exit8
           end

        workdd = "XMDD"random()
        indd   = "XMDD"random()

        if dsn = "" then do
           indd = ddn
           call listdsi(ddn "FILE")
           dsn = sysdsname
           end

        if ddn = "" then
           "ALLOC F("indd") DS("dsn") SHR"

        call listdsi(dsn)
           dcb = "Lrecl("syslrecl") Blksize("sysblksize")"
           recfm = substr(sysrecfm,1,1)" "substr(sysrecfm,2,1),
                   substr(sysrecfm,3,3)
           dcb = dcb "Recfm("strip(recfm)")"

        "ALLOC F("workdd") SYSOUT(B) DEST("address")" dcb

        "EXECIO * DISKR" indd "(FINIS STEM in."
        if ddn = "" then "FREE F("indd")"

        /* -------------------------------------------------------------
        /* Fix up the PROFS Header record
        /* -------------------------------------------------------------

        center = sysvar('sysnode')

        userid = sysvar(sysuid)

        parse value address with tonode "." toid

        upper tonode toid

        header = " MSG:FROM:" left(userid,8)"--"left(center,8) "TO:",
                   left(toid,8)"--"left(tonode,18)date('u') time()

        new_header = overlay(x2c('FE'),header,1)
        header = new_header

        if notify = "on" then do
            new_header = overlay(x2c('01'),header,80)
            header = new_header
            end

        /* -------------------------------------------------------------
        /* Fix up the PROFS Trailer record
        /* -------------------------------------------------------------
        trailer = left(" ",6)left(sendsubj,65)

        new_trailer = overlay(x2c('FFFF00000011'),trailer,1)
        trailer = overlay(x2c('000000000000000000'),new_trailer,72)

        if subject = "" then subject = "File:" dsname

        new_trailer = overlay(subject,trailer,7,65)
        trailer = new_trailer

        out.  = ""
        out.0 = 1

        out.1 = header
        do i = 1 to in.0
           out.0 = out.0 + 1
           n = out.0
           out.n = in.i
           end
        out.0 = out.0 + 1
        n = out.0
        out.n = trailer

        "EXECIO * DISKW" workdd "(FINIS STEM out."
        "FREE F("workdd")"

        if msg = "" then
           say "Message successfully transmitted to:" address

        exit 0

        exit8:
           say msgid " "
           say msgid "Syntax is: "
           say msgid "%XMITVM node.userid"
           say msgid "        MSGDS data-set-name   or"
           say msgid "        MSGDD ddname"
           say msgid "        NOTIFY or NONOTIFY"
           say msgid "        SUBJECT 'subject text' "
           exit 8
           end
