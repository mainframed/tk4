         MACRO
         MODULE &CNAME,&AMODE=31,&RMODE=ANY,&SP=1,&LOC=,&BASE=12,      X
               &ENTRY=BRANCH,&FLOATSV=NO,&RENT=YES,&WORK=YES,          X
               &PCRETRY=,&SDWA=3,                                   #01X
               &TEXT=' '
.*+-------------------------------------------------------------------+
.*|                     MAINTENANCE LOG                               |
.*+----------+------------------------------------+---------+---------+
.*|  DATE    |      DESCRIPTION                   | CHANGED | REFER   |
.*+----------+------------------------------------+---------+---------+
.*| 05/27/92 | ENTRY=ESTAEX/PCRETRY= SUPPORT      | MJM     | #01     |
.*| 08/02/92 | EXTENDED ARR PARMLIST              | MJM     | #02     |
.*+----------+------------------------------------+---------+---------+
.*|      (C)   COPYRIGHT MD-PALADIN INC. 1992                         |
.*+-------------------------------------------------------------------+
.*
.**********************************************************************
.*   BEGIN MODULE WITH THIS MACRO                                     *
.*     &CNAME   - NAME OF MODULE (7 CHARACTERS OR LESS)               *
.*     &AMODE   - "24" OR "31"                                        *
.*     &RMODE   - "24" OR "ANY"                                       *
.*     &SP      - SUBPOOL FOR RENTRANT STORAGE THIS MODULE            *
.*     &LOC     - "BELOW" IF GETMAINED STORAGE BELOW 16M              *
.*     &BASE    - BASE REGISTER (NOT R1, R2 OR R13)                   *
.*     &ENTRY   - "BRANCH" "PCSTACK" "PCBASIC" "SRB" OR "SVC"         *
.*                OR "ESTAEX" .   "ESTAEX" IS ALSO FOR ARR RTNS     #01
.*     &FLOATSV - SAVE FLOATING POINT REGISTERS                       *
.*     &RENT    - WORK AREA DYNAMICALLY OBTAINED (DEFAULT = YES)      *
.*     &WORK    - WORK AREA TO BE GOTTEN (DEFAULT = YES)              *
.*     &PCRETRY - RETRY ADDRESS FOR ARR. (WHEN ENTRY=PCSTACK ONLY)  #01
.*     &SDWA    - REGISTER USED TO ADDRESS SDWA (WHEN TYPE=ESTAEX)  #01
.*     &TEXT    - COMMENT THAT IS ASSEMBLED INTO OBJECT CODE          *
.**********************************************************************
         GBLA  &POOL
         GBLB  &EQU
         GBLB  &CALSA,&WORKA,&FLOAT,&RENTA
         GBLB  &RETRYA                                              #01
         GBLB  &ESTAEA                                              #01
         GBLC  &SYSSPLV,&SYSASCE
         GBLC  &DSCTLEN,&NRENTWK,&DNAME
         GBLC  &SAVEGEN,&SAVELEN,&SAVEFLT,&SPLEVI
         GBLC  &GRSVRET                                             #01
         LCLB  &E1
         LCLC  &BEGIN,&TXT,&ONSTACK
.*#02    LCLC  &RETPARM                                             #01
         LCLC  &ESTAE1                                              #01
         LCLC  &CNAMEL                                              #02
         SPLEVEL  TEST
.*************************************************
.*       CHECK ERROR CONDITIONS                  *
.*************************************************
&E1      SETB  0
         AIF   (T'&CNAME NE 'O').OK1
         MNOTE 8,'MODULE NAME IS REQUIRED'
&E1      SETB  1
.OK1     ANOP
         AIF   (K'&CNAME LE 7).OK2
         MNOTE 8,'MODULE NAME MUST BE LESS THAN 7 CHARACTERS'
&E1      SETB  1
.OK2     ANOP
         AIF   (&BASE GT 2 AND &BASE LT 13).OK3
         MNOTE 8,'ONLY REGISTERS 3 THROUGH 12 CAN BE BASE REGISTERS'
&E1      SETB  1
.OK3     ANOP
         AIF   ('&ENTRY' EQ 'BRANCH' OR '&ENTRY' EQ 'PCSTACK').OK4
         AIF   ('&ENTRY' EQ 'PCBASIC' OR '&ENTRY' EQ 'SRB').OK4
         AIF   ('&ENTRY' EQ 'SVC').OK4
         AIF   ('&ENTRY' EQ 'ESTAEX').OK4                           #01
         MNOTE 8,'"ENTRY="  "BRANCH","PCSTACK","PCBASIC","SRB","SVC"'
         MNOTE 8,' OR  "ESTAEX" '                                   #01
&E1      SETB  1
.OK4     ANOP
         AIF   ('&ENTRY' NE 'PCSTACK' OR '&SYSSPLV' GT '2').OK5
         MNOTE 8,'"ENTRY=PCSTACK" MUST BE ASSEMBLED "SPLEVEL > 2"  '
&E1      SETB  1
.OK5     ANOP
         AIF   ('&ENTRY' NE 'SVC').OK6
         AIF   ('&BASE' EQ '6').OK6
         MNOTE 8,'BASE REGISTER MUST BE 6 WITH "ENTRY=SVC" '
&E1      SETB  1
.OK6     ANOP
         AIF   (&E1).MEND
.*************************************************
.*       SET GLOBAL SYMBOLS                      *
.*************************************************
&POOL    SETA  &SP
&SPLEVI  SETC  '&SYSSPLV'
&DSCTLEN SETC  'L'.'&CNAME'
&NRENTWK SETC  'N'.'&CNAME'
&DNAME   SETC  'W'.'&CNAME'
&BEGIN   SETC  'BEG'.'&SYSNDX'
&SAVEGEN SETC  'GEN'.'&SYSNDX'
&SAVEFLT SETC  'FLT'.'&SYSNDX'
&SAVELEN SETC  'LEN'.'&SYSNDX'
&ONSTACK SETC  'STK'.'&SYSNDX'
&GRSVRET SETC  'GRT'.'&SYSNDX'                                      #01
.*#02RETPARM SETC  'RET'.'&SYSNDX'                                  #01
&ESTAE1  SETC  'EST'.'&SYSNDX'                                      #01
&CNAMEL  SETC  'CNA'.'&SYSNDX'                                      #02
&TXT     SETC  '&TEXT'
         AIF   ('&TXT'(1,1) EQ '''').STRIP
         AIF   ('&TXT'(1,1) EQ '(').STRIP
         AGO   .NOSTRIP
.STRIP   ANOP
&TXT     SETC  '&TXT'(2,K'&TXT-2)
.NOSTRIP ANOP
.*************************************************
.*       SET GLOBAL SWITCHES                     *
.*************************************************
&WORKA   SETB  0     OBTAIN REENTRANT WORKAREA ?
         AIF   ('&WORK'(1,1) EQ 'N').NWORK
         AIF   ('&ENTRY' EQ 'PCBASIC' AND '&SPLEVI' LT '3').NWORK
         AIF   ('&ENTRY' EQ 'SVC' AND '&SPLEVI' LT '3').NWORK
&WORKA   SETB  1
.NWORK   ANOP
&RENTA   SETB  0     OBTAIN WORK AREA AND NON-REENTRANT
         AIF   ('&RENT'(1,1) EQ 'N').NRENT
         AIF   ('&ENTRY' EQ 'SRB' AND '&SPLEVI' LT '3').NRENT
&RENTA   SETB  1
.NRENT   ANOP
&CALSA   SETB  0     IS SAVE AREA PROVIDED BY CALLER ?
         AIF   ('&ENTRY'(1,2) EQ 'PC').NSAVE
         AIF   ('&ENTRY' EQ 'SRB').NSAVE
         AIF   ('&ENTRY' EQ 'SVC').NSAVE
&CALSA   SETB  1
.NSAVE   ANOP
&FLOAT   SETB  0     ARE FLOATING POINT REGISTERS SAVED ?
         AIF   ('&FLOATSV'(1,1) EQ 'N').NFLOT
         AIF   (&WORKA EQ 0).NFLOT
&FLOAT   SETB  1
.NFLOT   ANOP
&RETRYA  SETB  0     RETRY                                          #01
         AIF   (T'&PCRETRY EQ 'O').NRTTT                            #01
         AIF   ('&ENTRY' NE 'PCSTACK').NRTTT                        #01
&RETRYA  SETB  1                                                    #01
.NRTTT   ANOP                                                       #01
&ESTAEA  SETB  0     ESTAE ?                                        #01
         AIF   ('&ENTRY' NE 'ESTAEX').NESTT                         #01
         AIF   ('&SPLEVI' LT '3').NESTT                             #01
&ESTAEA  SETB  1                                                    #01
.NESTT   ANOP                                                       #01
&CNAME   CSECT
         AIF   ('&SPLEVI' LT '2').NOAMODE
*        *---------------------------------------*
*        *     SPECIFY AMODE AND RMODE           *
*        *---------------------------------------*
&CNAME   AMODE &AMODE
&CNAME   RMODE &RMODE
.NOAMODE ANOP
         AIF   (&WORKA NE 1).NOWORK0
*        +---------------------------------------+
*        |     SAVE AREAS                        |
*        +---------------------------------------+
&DNAME   DSECT                    USER ACQUIRED STORAGE FOR REENTRABLE
&SAVEGEN DS    18F                GENERAL REGISTER SAVE AREA
         AIF   (&FLOAT NE 1).NOF1
&SAVEFLT DS    4D                 FLOATING POINT REGISTER SAVE AREA
.NOF1    ANOP
&SAVELEN DS    F                  LENGTH OF ACQUIRED STORAGE
         AIF   (&RETRYA EQ 0).NORET                                 #01
&GRSVRET DS    4F                 GENERAL AND ACCESS REGS 0 AND 1   #01
ESTPARAM DS    0F,CL(LESTPARM)    ARR RETRY ADDRESS AND ALET        #02
.*#02    DS    X                  ARR FLAGS BYTE                    #01
.*#02    DS    3X                 NOT USED                          #01
         ESTPARM                                                    #02
.NORET   ANOP                                                       #01
&CNAME   CSECT
.NOWORK0 ANOP
         AIF   (&EQU).NOEQU
&EQU     SETB  1
*        *---------------------------------------*
*        *     REGISTER EQUATES                  *
*        *---------------------------------------*
         PRINT NOGEN
         COPY EQUATES
         PRINT GEN
.NOEQU   ANOP
*        *---------------------------------------*
*        *     ENTRY POINT                       *
*        *---------------------------------------*
         AIF   ('&ENTRY'(1,2) EQ 'PC').PCENT
         AIF   ('&ENTRY' EQ 'SVC').SVCENT
         AIF   ('&ENTRY' EQ 'ESTAEX').ESTAENT                       #01
.*************************************************
.*       ENTRY = BRANCH AND SRB                  *
.*************************************************
         USING &CNAME,15          SET ADDRESSING ON ENTRY POINT
         B     &BEGIN             BRANCH AROUND EYECATCHER
         DC    C' &CNAME '        NAME OF CSECT
         DC    C' &SYSDATE '      DATE OF ASSEMBLY
         DC    C' &SYSTIME '      TIME OF ASSEMBLY
         DC    C' &TXT  '
         AIF   ('&SPLEVI' LT '3').XA1
         AIF   (&WORKA EQ 0).NL1
&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK
.NL1     ANOP
&BEGIN   BAKR  14,0               PUSH REGS AND PSW ONTO STACK
         LAE   &BASE,0(15,0)      LOAD BASE REGISTER WITH ENTRYPNT
         MSTA  0                  PUSH REGS AND PSW ONTO STACK
         AGO   .DROP15            DROP ADDRESSING ON ENTRY POINT
.XA1     ANOP
         AIF   (&CALSA NE 1).NOSA1
&BEGIN   SAVE  (14,12)            CALLER'S REGS => CALLER'S SAVEAREA
         LR    &BASE,15           LOAD BASE REGISTER WITH ENTRY POINT
         AGO   .DROP15            DROP ADDRESSING ON ENTRY POINT
.NOSA1   ANOP
&BEGIN   LR    &BASE,15           LOAD BASE REGISTER WITH ENTRY POINT
.DROP15  ANOP
         DROP  15                 DROP ADDRESSING ON ENTRY POINT
         USING &CNAME,&BASE       SET ADDRESSING ON BASE REGISTER
         AGO   .CKSTG
.*************************************************                  #01
.*       ENTRY = ESTAEX (ALSO FOR ARRS)          *                  #01
.*************************************************                  #01
.ESTAENT ANOP                                                       #01
         PUSH  PRINT                                                #01
         PRINT NOGEN                                                #01
         IHASDWA                                                    #01
         POP   PRINT                                                #01
&CNAME   CSECT                                                      #01
         USING &CNAME,15          SET ADDRESSING ON ENTRY POINT     #01
         B     &BEGIN             BRANCH AROUND EYECATCHER          #01
         DC    C' &CNAME '        NAME OF CSECT                     #01
         DC    C' &SYSDATE '      DATE OF ASSEMBLY                  #01
         DC    C' &SYSTIME '      TIME OF ASSEMBLY                  #01
         DC    C' &TXT  '                                           #01
         AIF   (&WORKA EQ 0).NL8                                    #01
&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK       #01
.NL8     ANOP                                                       #01
&BEGIN   DS    0H                 PUSH REGS AND PSW ONTO STACK      #01
*        *---------------------------------------*                  #01
*        *     TEST WHETHER THERE IS AN SDWA     *                  #01
*        *---------------------------------------*                  #01
         CH    R0,=H'12'               WAS AN SDWA OBTAINED ?       #01
         BNE   &ESTAE1                 YES; CONTINUE                #01
         LA    R15,0                   SET FOR PERCOLATION          #01
         BR    R14                     RETURN TO RTM2               #01
&ESTAE1  DS    0H                                                   #01
         BAKR  14,0               PUSH REGS AND PSW ONTO STACK      #01
         LAE   &BASE,0(15,0)      LOAD BASE REGISTER WITH ENTRYPNT  #01
         MSTA  0                  PUSH REGS AND PSW ONTO STACK      #01
         DROP  15                 DROP ADDRESSING ON ENTRY POINT    #01
         USING &CNAME,&BASE       SET ADDRESSING ON BASE REGISTER   #01
         AGO   .CKSTG                                               #01
.*************************************************
.*       ENTRY = PCSTACK AND PCBASIC             *
.*************************************************
.PCENT   ANOP
         BASR  &BASE,0            LOAD BASE REGISTER                #01
         BCTR  &BASE,0            .. SUBTRACT 2 FROM
         BCTR  &BASE,0            .. BASE REGISTER
         USING &CNAME,&BASE       SET ADDRESSING ON ENTRY POINT
         AIF   ('&SPLEVI' LT '3').PC2
         LAE   &BASE,0(&BASE,0)   CLEAR BASE ACCESS REGISTER
         AIF   (&RETRYA EQ 1).PC2                                   #01
         MSTA  0                  SAVE REGS 1 AND 2 IN USER STACK
.PC2     ANOP
         B     &BEGIN             BRANCH AROUND EYECATCHER
         DC    C' '                                                 #02
&CNAMEL  DC    CL8'&CNAME',C' '   NAME OF CSECT                     #02
         DC    C' &SYSDATE '      DATE OF ASSEMBLY
         DC    C' &SYSTIME '      TIME OF ASSEMBLY
         DC    C' &TXT  '
         AIF   (&WORKA EQ 0).NL2
&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK
.NL2     ANOP
&BEGIN   DS    0H
         AGO   .CKSTG
.SVCENT  ANOP
.*************************************************
.*       ENTRY = SVC                             *
.*************************************************
         USING &CNAME,6           SET ADDRESSING ON ENTRY POINT
         B     &BEGIN             BRANCH AROUND EYECATCHER
         DC    C' &CNAME '        NAME OF CSECT
         DC    C' &SYSDATE '      DATE OF ASSEMBLY
         DC    C' &SYSTIME '      TIME OF ASSEMBLY
         DC    C' &TXT  '
         AIF   ('&SPLEVI' LT '3').XA3
         AIF   (&WORKA EQ 0).NL3
&ONSTACK DC    C'F1SA'            CALLER'S SAVE AREA ON STACK
.NL3     ANOP
&BEGIN   BAKR  14,0               PUSH REGS AND PSW ONTO STACK
         MSTA  0                  PUSH REGS AND PSW ONTO STACK
         AGO   .ESVCE             DROP ADDRESSING ON ENTRY POINT
.XA3     ANOP
&BEGIN   DS    0H
.ESVCE   ANOP
.CKSTG   ANOP
.*************************************************
.*      GET A WORK AREA FOR REENTRANCY           *
.*************************************************
         AIF   (&WORKA EQ 0).NOWORK
         AIF   (&RENTA EQ 1).YESRENT
         LA    13,&NRENTWK        ADDRESS OF WORK AREA
         AGO   .MAPDSECT
.YESRENT ANOP
*        *---------------------------------------*
*        *     GET STORAGE FOR WORK AREA         *
*        *---------------------------------------*
         LA    0,&DSCTLEN          LENGTH OF STORAGE
         AIF   (T'&LOC EQ 'O' OR '&SPLEVI' LT '2').NOLOC
         AIF   ('&SPLEVI' LT '3').NOSTOR
         STORAGE OBTAIN,COND=NO,                                       X
               LENGTH=(0),                                             X
               LOC=&LOC,                                               X
               SP=&POOL,                                               X
               ADDR=(1)
         AGO   .GOT
.NOSTOR  ANOP
         GETMAIN RU,                                                   X
               LV=(0),                                                 X
               LOC=&LOC,                                               X
               SP=&POOL
         AGO   .GOT
.NOLOC   ANOP
         AIF   ('&SPLEVI' LT '3').NOSTOR1
         STORAGE OBTAIN,COND=NO,                                       X
               LENGTH=(0),                                             X
               SP=&POOL,                                               X
               ADDR=(1)
         AGO   .GOT
.NOSTOR1 ANOP
         GETMAIN RU,                                                   X
               LV=(0),                                                 X
               SP=&POOL
.GOT     ANOP
         AIF   ('&SPLEVI' GT '2').ESA2
         AIF   (&CALSA EQ 0).NOCSA0
         LR    2,13               PRESERVE ADDRESS CALLER'S SAVEAREA
         ST    13,4(1)            SAVE A(CALLER'S SAVE AREA)
         ST    1,8(13)            A(SAVE AREA) => CALLER'S SAVE AREA
.NOCSA0  ANOP
         LR    13,1               A(SAVE AREA THIS CSECT) => R13
         AGO   .MAPDSECT
.ESA2    ANOP
         AIF   (&CALSA EQ 0).NOCSA
         ST    1,8(0,13)          A(SAVE AREA) => CALLER'S SAVE AREA
.NOCSA   ANOP
         LAE   13,0(1,0)          LOAD SAVE AREA GEN AND ACC REGS
*                                 INDICATE CALLER'S SAVEAREA ON STACK
         MVC   4(L'&ONSTACK,13),&ONSTACK
.MAPDSECT ANOP
         USING &DNAME,13          ADDRESSING FOR SAVE AREA
         ST    0,&SAVELEN         SAVE SUBPOOL AND LENGTH
.*************************************************
.*       RESTORE REGISTERS FROM STACK OR         *
.*       CALLER'S SAVE AREA                      *
.*************************************************
.NOWORK  ANOP
         AIF   ('&SPLEVI' LT '3').XA2
         AIF   (&RETRYA EQ 0).NRETY                                 #01
         EREG  0,1                RESTORE REGS FROM STACK           #01
         STM   0,1,&GRSVRET       SAVE GENERAL REGS 0 AND 1         #01
         STAM  0,1,&GRSVRET+8     SAVE ACCESS  REGS 0 AND 1         #01
         LAE   14,ESTPARAM        ARR PARMLIST ADDRESS              #02
         LAE   15,&PCRETRY               ..RETRY ADDRESS            #01
         ST    15,ESTRETRY-ESTPARM(14)   ..INTO ARR PARMLIST        #02
         ST    &BASE,ESTLOAD-ESTPARM(14) BASE REGISTER VALUE        #02
         MVC   ESTMOD-ESTPARM(L'&CNAMEL,14),&CNAMEL MODULE NAME     #02
         EAR   15,14              ARR PARMLIST ALET TO GPR 15       #02
.*#02    LAE   0,ESTPARAM         LOAD RETRY PARMLIST ADDRESS       #01
         MSTA  14                 SAVE IN MODIFIED STACK AREA       #01
.NRETY   ANOP                                                       #01
         EREG  14,1               RESTORE REGS FROM STACK
         AIF   ('&ENTRY' NE 'ESTAEX').NOSDWA                        #01
         LAE   &SDWA,0(0,1)       SDWA ADDRESS                      #01
         USING SDWA,&SDWA         ADDRESSIN FOR SDWA                #01
.NOSDWA  ANOP                                                       #01
         AGO   .NOCSA2
.XA2     ANOP
         AIF   (&CALSA EQ 0 OR &WORKA EQ 0).NOCSA2
         LM    14,2,12(2)         RESTORE REGS FROM CALLER'S SAVEAREA
.NOCSA2  ANOP
.******  SAVE FLOATING POINT REGISTERS ***********
         AIF   (&FLOAT EQ 0).MEND
         STD   0,&SAVEFLT         ..SAVE
         STD   2,&SAVEFLT+8       ..FLOATING
         STD   4,&SAVEFLT+16      ..POINT
         STD   6,&SAVEFLT+24      ..REGISTERS
.MEND    MEND
