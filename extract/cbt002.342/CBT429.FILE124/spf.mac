         PRINT   GEN
***********************************************************************
*                                                                     *
*        SETUP                                                        *
*                                                                     *
***********************************************************************
SPF      XABGN SAVE=(SAVEAREA,LSAVAREA),REQUS=YES,GEN=GEN
         LA    R7,4095(R12)
         USING SPF+4095,R7
         LA    R9,4095(R13)
         USING SAVEAREA+4095,R9
         MVC   DAPB08C(DAPB08L),DAPB08CI SET UP DAPB08 CONTROL
         MVC   DAPB18C(DAPB18L),DAPB18CI SET UP DAPB18 CONTROL
         LR    R8,R1                   LOAD REGISTER 8 TO PRESERVE
*                                      POINTER TO COMMAND PROCESSOR
*                                      PARAMETER LIST
         ST    R1,CPPLPNTR             SAVE R1
         USING CPPL,R8                 ESTABLISH ADDRESSABILITY TO CPPL
         LA    R6,DAPLSECT             LOAD ADDRESS OF DAIR PARAMETER
*                                      LIST
         USING DAPL,R6                 ESTABLISH ADDRESSABILITY TO DAPL
         L     R1,CPPLUPT              LOAD POINTER TO USER PROFILE
*                                      TABLE FROM CPPL
         L     R2,CPPLECT              LOAD POINTER TO ENVIRONMENT
*                                      CONTROL TABLE FROM CPPL
         SR    R3,R3                   ZERO REGISTER 3
         ST    R3,ECB                  STORE REGISTER AS ECB FOR PPL
         LA    R3,ECB                  LOAD ADDRESS OF ECB
         STM   R1,R3,DFPLSECT          STORE UPT,ECT,ECB IN DFPL
         STM   R1,R3,DAPLSECT          STORE ADDRESS OF UPT, ECT, AND
*                                      ECB IN DAPL
         LA    R3,DFPBSECT             GET ADDRESS OF DFPB
         ST    R3,DFPLSECT+12          PUT IT IN THE CONTROL BLOCK
         USING DFPB,R3
         LA    R2,DFPBDSL
         ST    R2,DFPBDSN
         LA    R2,DFPBQUA
         ST    R2,DFPBQUAL
         MVI   DFPBCODE,DFPB04
         MVC   DFPBPSCB,CPPLPSCB
         MVI   DFPBCNTL,DFPBRET
         XC    DFPBCAT(8),DFPBCAT
         DROP  R3
         DROP  R6,R8             DROP ADDRESSABILITY TO CPPL, DAPL
         EJECT
****** INITIALIZE LIBRARY TABLES AND FLAGS
         MVI   SYSPRGMR,C'N'   SET FLAG TO NOT SYSTEMS PROGRAMMER
         MVI   SYSPROC,C'N'    SET FLAG TO NO SYSPROC
         MVI   FPROF,C'N'      SET FLAG TO NO ISPPROF
         MVI   FPLIB,C'N'      SET FLAG TO NO ISPPLIB
         MVI   FMLIB,C'N'      SET FLAG TO NO ISPMLIB
         MVI   FSLIB,C'N'      SET FLAG TO NO ISPSLIB
         MVI   FTLIB,C'N'      SET FLAG TO NO ISPTLIB
         MVI   FLLIB,C'N'      SET FLAG TO NO ISPLLIB
         MVI   FTABL,C'N'      SET FLAG TO NO ISPTABL
         MVI   FFILE,C'N'      SET FLAG TO NO ISPFILE
         MVI   NPLIB,C'Y'      SET FLAG TO USE ISPPLIB DEFAULT
         MVI   NMLIB,C'Y'      SET FLAG TO USE ISPMLIB DEFAULT
         MVI   NSLIB,C'Y'      SET FLAG TO USE ISPSLIB DEFAULT
         MVI   NTLIB,C'Y'      SET FLAG TO USE ISPTLIB DEFAULT
         MVI   NTABL,C'N'      SET FLAG FOR NO ISPTABL DEFAULT
         MVI   NFILE,C'N'      SET FLAG FOR NO ISPFILE DEFAULT
         MVI   NLLIB,C'Y'      SET FLAG TO USE ISPLLIB DEFAULT
         MVI   NCLIB,C'Y'      SET FLAG TO USE SYSPROC DEFAULT
         SR    R2,R2           SET R2 TO ZERO
         ST    R2,CLIBTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,PLIBTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,MLIBTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,SLIBTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,LLIBTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,TLIBTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,TABLTABC          SET NUMBER OF ENTRIES TO ZERO
         ST    R2,FILETABC          SET NUMBER OF ENTRIES TO ZERO
         MVC   CLIBTABL(8),=CL8'SYSPROC '  SET UP CLIB DDNAME
         MVC   PLIBTABL(8),=CL8'ISPPLIB '  SET UP PLIB DDNAME
         MVC   MLIBTABL(8),=CL8'ISPMLIB '  SET UP MLIB DDNAME
         MVC   SLIBTABL(8),=CL8'ISPSLIB '  SET UP SLIB DDNAME
         MVC   LLIBTABL(8),=CL8'ISPLLIB '  SET UP LLIB DDNAME
         MVC   TLIBTABL(8),=CL8'ISPTLIB '  SET UP TLIB DDNAME
         MVC   TABLTABL(8),=CL8'ISPTABL '  SET UP TABL DDNAME
         MVC   FILETABL(8),=CL8'ISPFILE '  SET UP FILE DDNAME
         MVC   PROFILE(8),=CL8'WPROFILE'   SET UP WPROFILE MEMBER NAME
         EJECT
****** GO THRU TIOT LOOKING FOR DD NAMES
         L     R2,16           R2 <- ADDR OF CVT
         L     R2,0(R2)        R2 <- ADDR OF ADDR OF TCB'S FROM CVT
         L     R2,4(R2)        R2 <- ADDR OF CURRENT TCB
         L     R2,12(R2)       R2 <- ADDR OF TIOT FROM TCB
         LA    R2,24(R2)       R2 <- ADDR OF FIRST DD ENTRY IN TIOT
         SR    R3,R3           R3 <- 0
CHECKDD  CLC   4(8,R2),=CL8'SYSSPF  '  IS THIS A SYSTEMS PROGRAMMER?
         BNE   CHKSPROC        IF NOT GO TO MOVE ENTRY INTO TABLE
         MVI   SYSPRGMR,C'Y'   SET SYSTEMS PROGRAMMER FLAG
         B     SKPENTRY        DO NOT MOVE THIS ENTRY INTO TABLE
CHKSPROC DS    0H
         CLC   4(8,R2),=CL8'SYSPROC' IS THIS THE SYSPROC DD
         BNE   CHKISP          IT IS NOT, CHECK NEXT ISP DD
         MVI   SYSPROC,C'Y'    SET SYSPROC PRESENT
         B     SKPENTRY        DO NOT MOVE THIS ENTRY INTO TABLE
CHKISP   CLC   4(3,R2),=CL8'ISP'       IS THIS AND ISP DD?
         BNE   SKPENTRY        IF NOT SKIP ENTRY
         CLC   4(8,R2),=CL8'ISPPROF '  IS THIS ISPPROF
         BNE   CHKPLIB         IF NOT CHECK NEXT ISP DD
         MVI   FPROF,C'Y'      SET ISPPROF
         B     SKPENTRY
CHKPLIB  DS    0H
         CLC   4(8,R2),=CL8'ISPPLIB ' IS THIS THE ISPPLIB DD
         BNE   CHKMLIB         IT IS NOT, CHECK FOR NEXT ISP DD
         MVI   FPLIB,C'Y'      SET ISPPLIB PRESENT
         B     SKPENTRY
CHKMLIB  DS    0H
         CLC   4(8,R2),=CL8'ISPMLIB ' IS THIS THE ISPMLIB DD
         BNE   CHKSLIB         IT IS NOT, CHECK FOR NEXT ISP DD
         MVI   FMLIB,C'Y'      SET ISPPLIB PRESENT
         B     SKPENTRY        DO NOT MOVE THIS ENTRY INTO TABLE
CHKSLIB  DS    0H
         CLC   4(8,R2),=CL8'ISPSLIB ' IS THIS THE ISPSLIB DD
         BNE   CHKLLIB         IT IS NOT, CHECK FOR NEXT ISP DD
         MVI   FSLIB,C'Y'      SET ISPPLIB PRESENT
         B     SKPENTRY
CHKLLIB  DS    0H
         CLC   4(8,R2),=CL8'ISPLLIB ' IS THIS THE ISPLLIB DD
         BNE   CHKTLIB         IT IS NOT, CHECK FOR NEXT ISP DD
         MVI   FLLIB,C'Y'      SET ISPLLIB PRESENT
         B     SKPENTRY
CHKTLIB  DS    0H
         CLC   4(8,R2),=CL8'ISPTLIB ' IS THIS THE ISPTLIB DD
         BNE   CHKTABL         IT IS NOT, CHECK FOR NEXT ISP DD
         MVI   FTLIB,C'Y'      SET ISPTLIB PRESENT
         B     SKPENTRY
CHKTABL  DS    0H
         CLC   4(8,R2),=CL8'ISPTABL ' IS THIS THE ISPTABL DD
         BNE   CHKFILE         IT IS NOT, CHECK FOR NEXT ISP DD
         MVI   FTABL,C'Y'      SET ISPTABL PRESENT
         B     SKPENTRY
CHKFILE  DS    0H
         CLC   4(8,R2),=CL8'ISPFILE ' IS THIS THE ISPFILE DD
         BNE   SKPENTRY        IT IS NOT, GO TO END OF CHECKS
         MVI   FFILE,C'Y'      SET ISPFILE PRESENT
         B     SKPENTRY
SKPENTRY IC    R3,0(R2)        R3 <- LENGTH OF THIS TIOT ENTRY
         AR    R2,R3           R2 <- ADDR OF NEXT TIOT ENTRY
         CLI   0(R2),0         IS THIS AN ZERO LENGTH ENTRY (THE END)?
         BNE   CHECKDD         NOPE, WE GOT A LIVE ONE.
         EJECT
****** CHECK TO SEE IF USER HAS PROFILE DATASET
         CLI   FPROF,C'Y'      DOES USER HAVE ISPPROF ALLOCATED?
         BE    CHKWPROF        IF SO BRANCH TO CHECK FOR WPROFILE
****** ALLOCATE ISPPROF
         L     R1,CPPLPNTR                            SET UP R1
         L     R2,8(R1)                R1 NOW POINTS TO OF PSCB
         LA    R4,18                   LOAD LENGTH OF PROFILE DSN
         STH   R4,PROFDSNP             STORE LENGTH OF PROFILE DSN
         MVC   PROFDSN(12),=CL44'TSO.PROFILE.'  SET UP PROFILE DSN
         MVC   PROFDPID(6),0(R2)       MOVE IN THE DPID
         LA    R3,=CL8'ISPPROF '         POINT AT DDNAME
         LA    R4,PROFDSNP             POINT AT DSN FOR ALLOCATE
         SR    R5,R5                   SET ATTR IND TO NO
         BAL   R11,ALLOCATE            ALLOCATE ISPPROF
CHKWPROF DS    0H
**** CHECK (FIND) FOR WPROFILE MEMBER     ***************************
         L     R1,CPPLPNTR                            SET UP R1
         L     R2,8(R1)                R2 NOW POINTS TO OF PSCB
         LA    R4,18                   LOAD LENGTH OF PROFILE DSN
         STH   R4,PROFDSNP             STORE LENGTH OF PROFILE DSN
         MVC   PROFDSN(12),=CL44'TSO.PROFILE.'  SET UP PROFILE DSN
         MVC   PROFDPID(6),0(R2)       MOVE IN THE DPID
**** DETERMIN USER WPROFILE NAME          ***************************
*                                         ***************************
         L     R1,CPPLPNTR                            SET UP R1
         L     R2,0(R1)                R2 NOW POINTS TO COMMAND BUFF
         LH    R1,0(R2)                R1 HAS COMMAND BUFF LENGTH
         LH    R4,2(R2)                R4 HAS COMMAND OFFSET
         AR    R2,R4                   R2 POINTS PAST COMMAND
         SR    R1,R4                   R1 HAS LENGTH MINUS OFFSET
         C     R1,=F'4'                CHECK R1, LENGTH MUST BE > 4
         BNH   ENDWPNS                 IF NOT SKIP BUF CHECK
         BCTR  R1,0                    IND CAN NOT BE LAST BYTE
WPNSLOOP DS    0H
         LR    R5,R1                   SETUP ADDRESS
         AR    R5,R2                   SETUP ADDRESS
         CLI   0(R5),C'<'              CHECK FOR PROF IND CHAR
         BE    GOTWPNS                 GOT ONE
         BCT   R1,WPNSLOOP             DECREMENT AND TRY AGAIN
         B     ENDWPNS
GOTWPNS  MVC   PROFILE(1),1(R5)        MOVE IN CHARACTER
         OI    PROFILE,X'40'           MOVE IN CHARACTER
         MVC   0(2,R5),=C'  '          CLEAR IND FROM COMMAND BUFF
ENDWPNS  DS    0H
*                                         ***************************
         CLI   PROFILE,C'/'               CHECK FOR "NO WPROFILE"
         BE    ENDPROF
* * * * * * * * * * * * * * * * * * * * * * * * * * * * TPJ 9/17/86
*  THE FOLLOWING COMMENTED OUT LINES WERE USED TO GET * TPJ 9/17/86
* THE ACTUAL DSN ALLOCATED TO ISPPROF.  SINCE ONLY    * TPJ 9/17/86
* SYSTEMS PROGRAMMERS EVER USED PROFILE DSNS OTHER    * TPJ 9/17/86
* THAN THERE OWN, AND ONLY OCCASIONLY THIS WAS SEEN   * TPJ 9/17/86
* AS UNNEEDED OVERHEAD AND HAS BEEN COMMENTED OUT.    * TPJ 9/17/86
* THE @PROFILE MEMBER IS SEACHED FOR IN               * TPJ 9/17/86
*  "TSO.PROFILE.LOGONID" NO MATTER WHAT DSN IS        * TPJ 9/17/86
* ALLOCATED TO ISPPROF.                               * TPJ 9/17/86
* * * * * * * * * * * * * * * * * * * * * * * * * * * * TPJ 9/17/86
*        MVC   PROFJFCB(LPDCIMAG),PROIMAGE              TPJ 9/17/86
*        LA    R4,JFCBAREA                              TPJ 9/17/86
*        ST    R4,JFCBA                                 TPJ 9/17/86
*        LA    R4,7                                     TPJ 9/17/86
*        STC   R4,JFCBA                                 TPJ 9/17/86
*        LA    R4,JFCBA                                 TPJ 9/17/86
*        LA    R4,0(R4)             CLEAR HIGH ORDER BYTEPJ 9/17/86
*        ST    R4,PROFJFCB+36                           TPJ 9/17/86
*        LA    R4,PROFJFCB                              TPJ 9/17/86
*        RDJFCB ((4))                                   TPJ 9/17/86
*        SR    R4,R4                   SET R4 TO ZERO   TPJ 9/17/86
*        LA    R2,JFCBDSN              SET R2 TO START OF DSN 17/86
*CNLP    LA    R4,1(R4)                SET R4 UP BY ONE TPJ 9/17/86
*        LR    R1,R2                                    TPJ 9/17/86
*        AR    R1,R4                                    TPJ 9/17/86
*        CLI   0(R1),C' '              CHECK FOR A SPAC TPJ 9/17/86
*        BNE   CNLP                                     TPJ 9/17/86
*        BCTR  R4,0                    DECREMENT BY ONE TPJ 9/17/86
*        ST    R4,JFCBDSLN             SAVE LENGTH      TPJ 9/17/86
*        STH   R4,PROFDSNP             STORE LENGTH OF PROFILE DSN
*        MVC   PROFDSN(44),JFCBDSN              GET PROFILE DSN
         LA    R3,=CL8'WPROFILE'         POINT AT DDNAME
         LA    R4,PROFDSNP             POINT AT DSN FOR ALLOCATE
         SR    R5,R5                   SET ATTR IND TO NO
         BAL   R11,ALLOCATE            ALLOCATE ISPPROF
         MVC   ISPPARMI(LISPIIMA),ISPIIMAG
         MVC   OPENLIST(LOPNIMAG),OPNIMAGE
         MVC   CLOSLIST(LCLOIMAG),CLOIMAGE
         LA    R2,ISPPARMI     R2 POINT TO INPUT DCB
         OPEN  ((R2),INPUT),MF=(E,OPENLIST) OPEN THE PROFILE
*                                                       TPJ 9/17/86
         TM    X'30'(R2),X'10' IS THE OPEN OKAY?
         BZ    ERROPENI        NOPE
         FIND  (R2),PROFILE,D FIND THE WPROFILE MEMBER
         LTR   R15,R15         WAS FIND SUCCESSFUL
         BNZ   FINI            NOPE
         LA    R2,ISPPARMI
         CLOSE ((R2)),MF=(E,CLOSLIST)
         LA    R3,=CL8'WPROFILE'         POINT AT THE DDNAME
         BAL   R11,FREEDDNM              FREE THE DDNAME
         L     R1,CPPLPNTR                            SET UP R1
         L     R2,8(R1)                R1 NOW POINTS TO OF PSCB
         LA    R4,18                   LOAD LENGTH OF PROFILE DSN
         STH   R4,PROFDSNP             STORE LENGTH OF PROFILE DSN
         MVC   PROFDSN(12),=CL44'TSO.PROFILE.'  SET UP PROFILE DSN
         MVC   PROFDPID(6),0(R2)       MOVE IN THE DPID
*        L     R4,JFCBDSLN             LOAD LENGTH
*        STH   R4,PROFDSNP             STORE LENGTH OF PROFILE DSN
*        MVC   PROFDSN(44),JFCBDSN     GET PROFILE DSN
         LA    R3,=CL8'WPROFILE'       POINT AT DDNAME
         MVC   DAP08MNM(8),PROFILE     MOVE IN MEMBER NAME
         LA    R4,PROFDSNP             POINT AT DSN FOR ALLOCATE
         SR    R5,R5                   SET ATTR IND TO NO
         BAL   R11,ALLOCATE            ALLOCATE ISPPROF
         MVC   DAP08MNM(8),=CL8' '     CLEAR MEMBER NAME
         MVC   ISPPARMI(LISPIIMX),ISPIIMAX
         LA    R2,ISPPARMI
         OPEN  ((R2),INPUT),MF=(E,OPENLIST) OPEN THE WPROFILE
         TM    X'30'(R2),X'10' IS THE OPEN OKAY?
         BZ    ERROPENW        NOPE
****** GO THRU WPROFILE PUTTING LIBRARIES INTO TABLES
         LA    R10,PARMREC     R10 NOW POINT TO RECORD BUFFER
READNEXT DS    0H
         GET   ISPPARMI,(R10)
         LA    R4,PARMREC      POINTER INTO RECORD
         CLI   0(R4),C'*'           IS IT A COMMENT CARD?
         BE    READNEXT             IF IT IS IGNORE IT, READ NEXT
         CLC   0(5,R4),=CL5'CLIB '    IS IT A CLIB LIBRARY?
         BNE   CHKPLIBC             IF NOT CHECK IF PLIB
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPCLIB             SKIP DEFAULT CANCEL
         MVI   NCLIB,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPCLIB DS    0H
         CLI   SYSPROC,C'Y'         IS CLIB ALREADY ALLOCATED?
         BE    READNEXT             IF SO THEN IGNORE, GOTO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,CLIBTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKPLIBC CLC   0(5,R4),=CL5'PLIB '    IS IT A PLIB LIBRARY?
         BNE   CHKMLIBC             IF NOT CHECK IF MLIB
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPPLIB             SKIP DEFAULT CANCEL
         MVI   NPLIB,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPPLIB DS    0H
         CLI   FPLIB,C'Y'           DO WE HAVE ISPPLIB?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,PLIBTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKMLIBC CLC   0(5,R4),=CL5'MLIB '    IS IT A MLIB LIBRARY?
         BNE   CHKSLIBC             IF NOT CHECK IF SLIB
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPMLIB             SKIP DEFAULT CANCEL
         MVI   NMLIB,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPMLIB DS    0H
         CLI   FMLIB,C'Y'           DO WE HAVE ISPMLIB?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,MLIBTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKSLIBC CLC   0(5,R4),=CL5'SLIB '    IS IT A SLIB LIBRARY?
         BNE   CHKTLIBC             IF NOT CHECK TLIB
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPSLIB             SKIP DEFAULT CANCEL
         MVI   NSLIB,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPSLIB DS    0H
         CLI   FSLIB,C'Y'           DO WE HAVE ISPSLIB?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,SLIBTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKTLIBC CLC   0(5,R4),=CL5'TLIB '    IS IT A TLIB LIBRARY?
         BNE   CHKTABLC             IF NOT CHECK TABL
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPTLIB             SKIP DEFAULT CANCEL
         MVI   NTLIB,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPTLIB DS    0H
         CLI   FTLIB,C'Y'           DO WE HAVE ISPTLIB?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,TLIBTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKTABLC CLC   0(5,R4),=CL5'TABL '    IS IT A TABL LIBRARY?
         BNE   CHKFILEC             IF NOT CHECK FILE
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPTABL             SKIP DEFAULT CANCEL
         MVI   NTABL,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPTABL DS    0H
         CLI   FTABL,C'Y'           DO WE HAVE ISPTABL?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,TABLTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKFILEC CLC   0(5,R4),=CL5'FILE '    IS IT A TABL LIBRARY?
         BNE   CHKLLIBC             IF NOT CHECK LLIB
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPFILE             SKIP DEFAULT CANCEL
         MVI   NFILE,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPFILE DS    0H
         CLI   FFILE,C'Y'           DO WE HAVE ISPTABL?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,FILETABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
CHKLLIBC CLC   0(5,R4),=CL5'LLIB '    IS IT A LLIB LIBRARY?
         BNE   BADCRD               IF NOT ITS A BAD CARD
         CLC   5(5,R4),=CL5'NODEF'    NO DEFAULT LIBS SPECIFIED?
         BNE   STUPLLIB             SKIP DEFAULT CANCEL
         MVI   NLLIB,C'N'           SET TO "NO DEFAULT"
         B     READNEXT             GOTO READ NEXT
STUPLLIB DS    0H
         CLI   FLLIB,C'Y'           DO WE HAVE ISPTABL?
         BE    READNEXT             IF SO READNEXT
         CLI   5(R4),C' '           IS FIRST BYTE SPACE?
         BE    BADCRD               IF IT IS GIVE BAD CARD MESSAGE
         LA    R4,5(R4)             POINT R4 AT LIBRARY NAME
         LA    R3,LLIBTABC          POINT AT TABLE ENTRY COUNT
         BAL   R11,FILLTAB
         B     READNEXT             GOTO READ NEXT
****** END OF WPROFILE PROCESSING **********
FINI     LA    R2,ISPPARMI
         CLOSE ((R2)),MF=(E,CLOSLIST)
         LA    R3,=CL8'WPROFILE'         POINT AT THE DDNAME
         BAL   R11,FREEDDNM              FREE THE DDNAME
         B     ENDPROF
*
BADCRD   DS    0H
         TPUT  =C'SYS981I - SPF WPROFILE CONTAINS BAD CARD',40
         TPUT  (R4),80
         TPUT  =C'SYS981I - THE ABOVE CARD IS IGNORED',35
         B     READNEXT
ERROPENI WTO   'SYS982I - SPF PROFILE INPUT OPEN ERROR',ROUTCDE=(11)
         B     FINI
ERROPENW WTO   'SYS982I - SPF WPROFILE INPUT OPEN ERROR',ROUTCDE=(11)
         B     FINI
ERRREAD  WTO   'SYS984I - SPF PROFILE READ ERROR',ROUTCDE=(11)
         B     FINI
*
ENDPROF  DS    0H
         EJECT
****** ADD DEFAULT LIBRARIES TO TABLES
         CLI   SYSPROC,C'Y'         DO WE NEED TO FILL CLIB TABLE?
         BE    APLIBTB              IF NOT CHECK PLIB TABLE
         CLI   NCLIB,C'N'           DO WE NEED DEFAULT CLIB?
         BE    APLIBTB              IF NOT CHECK PLIB TABLE
         LA    R3,CLIBTABC          POINT AT TABLE ENTRY COUNT
         CLI   SYSPRGMR,C'Y'        IS THIS A SYSTEMS PROGRAMMER?
         BNE   CLIBUSR              IF NOT GIVE USER CLISTLIB
         LA    R4,=CL46'SYS2.CLISTLIB'         (WSRCC SYSP CLIST)
         BAL   R11,FILLTAB
         LA    R4,=CL46'SYS1.ISPF230.SYSCLIB'  (WSRCC SYSCLIB)
         B     CLIBFILL
CLIBUSR  LA    R4,=CL46'SYS2.ISPCLIST'         (WSRCC CUST CLIST)
CLIBFILL BAL   R11,FILLTAB
         LA    R3,CLIBTABC          POINT AT TABLE ENTRY COUNT
         LA    R4,=CL46'SYS1.ISPF230.PDFCLIB'  (ISPF CLISTLIB)
         BAL   R11,FILLTAB
APLIBTB  DS    0H
         CLI   FPLIB,C'Y'           DO WE NEED TO FILL PLIB TABLE?
         BE    AMLIBTB              IF NOT CHECK MLIB TABLE
         CLI   NPLIB,C'N'           DO WE NEED DEFAULT PLIB(S)?
         BE    AMLIBTB              IF NOT CHECK MLIB TABLE
         CLI   SYSPRGMR,C'Y'        IS THIS A SYSTEMS PROGRAMMER?
         BNE   APLIBNS              IF NOT GOTO STORE PLIB
         LA    R3,PLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         LA    R4,=CL46'SYS1.ISPF230.SYSPLIB'
         BAL   R11,FILLTAB
APLIBNS  DS    0H
         LA    R3,PLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         LA    R4,=CL46'SYS1.ISPF230.PDFPLIB'
         BAL   R11,FILLTAB
AMLIBTB  DS    0H
         CLI   FMLIB,C'Y'           DO WE NEED TO FILL MLIB TABLE?
         BE    ASLIBTB              IF NOT CHECK SLIB TABLE
         CLI   NMLIB,C'N'           DO WE NEED TO DEFAULT MLIB?
         BE    ASLIBTB              IF NOT CHECK SLIB TABLE
         LA    R3,MLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         CLI   SYSPRGMR,C'Y'        IS THIS A SYSTEMS PROGRAMMER?
         BNE   MLIBUSR              IF NOT GIVE USER MSG LIB
         LA    R4,=CL46'SYS1.ISPF230.SYSMLIB'  (WSRCC SYSMLIB)
         BAL   R11,FILLTAB
MLIBUSR  LA    R4,=CL46'SYS1.ISPF230.PDFMLIB'
         BAL   R11,FILLTAB
ASLIBTB  DS    0H
         CLI   FSLIB,C'Y'           DO WE NEED TO FILL SLIB TABLE?
         BE    ATLIBTB              IF NOT CHECK TLIB TABLE
         CLI   NSLIB,C'N'           DO WE NEED DEFAULT SLIB?
         BE    ATLIBTB              IF NOT CHECK TLIB TABLE
         LA    R3,SLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         CLI   SYSPRGMR,C'Y'        IS THIS A SYSTEMS PROGRAMMER?
         BNE   SLIBUSR              IF NOT GIVE USER SKELLIB
         LA    R4,=CL46'SYS1.ISPF230.SYSSLIB'  (WSRCC SYSSLIB)
         BAL   R11,FILLTAB
SLIBUSR  LA    R4,=CL46'SYS1.ISPF230.PDFSLIB'
         BAL   R11,FILLTAB
ATLIBTB  DS    0H
         CLI   FTLIB,C'Y'           DO WE NEED TO FILL TLIB TABLE?
         BE    ALLIBTB              IF NOT CHECK LLIB TABLE
         CLI   NTLIB,C'N'           DO WE NEED DEFAULT TLIB?
         BE    ALLIBTB              IF NOT CHECK LLIB TABLE
         CLI   SYSPRGMR,C'Y'        IS THIS A SYSTEMS PROGRAMMER?
         BNE   TLIBJUSR             IF NOT GIVE JUST USER TLIB
         LA    R3,TLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         LA    R4,=CL46'SYS1.ISPF230.SYSTLIB'
         BAL   R11,FILLTAB
TLIBJUSR DS    0H
         LA    R3,TLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         LA    R4,=CL46'SYS1.ISPF230.PDFTLIB'
         BAL   R11,FILLTAB
ALLIBTB  DS    0H
         CLI   FLLIB,C'Y'           DO WE NEED TO FILL LLIB TABLE?
         BE    ENDADD
         CLI   NLLIB,C'N'           DO WE NEED DEFAULT SLIB?
         BE    ENDADD               IF NOT THEN END
         LA    R3,LLIBTABC          POINT AT FIRST EMPTY TABLE ENTRY
         CLI   SYSPRGMR,C'Y'        IS THIS A SYSTEMS PROGRAMMER?
         BNE   LLIBUSR              IF NOT GIVE USER MSG LIB
         LA    R4,=CL46'SYS1.ISPF230.SYSLOAD'  (WSRCC SYSMLIB)
         BAL   R11,FILLTAB
LLIBUSR  LA    R4,=CL46'SYS1.ISPF230.PDFLOAD'
         BAL   R11,FILLTAB
****                                                         ****
ENDADD   DS    0H
       EJECT
***** ALLOCATE FILES NOT ALREADY ALLOCATED
         CLI   SYSPROC,C'Y'      DOES USER HAVE SYSPROC ALLOCATED?
         BE    PERMCLIB        BRANCH TO MARK SYSPROC PERM
         LA    R3,CLIBTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES FOR SYSPROC
*****
***** IF SYSPROC ALLOCATED THEN MARK IT PERM
*****
***********************************************************************
**  THE FOLLOWING WAS ADDED TO MARK THE SYSPROC DD SO THAT FREEALL   **
** DID NOT FREE IT.                                                  **
***********************************************************************
PERMCLIB DS    0H             MARK SYSPROC PERM
         L     R2,CVTPTR      CVT ADDR                           * #1 *
         USING CVTMAP,R2                                         * #1 *
         L     R2,CVTTCBP     TCB-TCB ADDR   (TCBHEAD)           * #1 *
         L     R2,4(,R2)      TCB ADDR       (CURRENT TCB)       * #1 *
         USING TCB,R2                                            * #1 *
         L     R2,TCBJSCB     JOB STEP CONTROL BLOCK ADDR        * #1 *
         USING IEZJSCB,R2                                        * #1 *
         L     R2,JSCDSABQ    LOAD ADDRESS OF QDB FOR DSAB CHAIN * #1 *
         L     R2,12(R2)      LOAD ADDRESS OF FIRST DSAB         * #1 *
         USING DSAB,R2                                           * #1 *
INLOOP   EQU   *                                                 * #1 *
         L     R15,DSABTIOT   POINT TO TIOT                      * #1 *
         USING TIOELNGH,R15                                      * #1 *
         CLI   TIOEDDNM,C' '  PART OF A CONCAT GROUP?            * #1 *
         BNE   RESETFLG       NO, CHECK THE LIST                 * #1 *
         TM    FLAG,X'80'     IS THE CONCAT GROUP FLAG ON?       * #1 *
         BO    PERM           YES, GO MARK THIS ONE              * #1 *
RESETFLG NI    FLAG,X'FF'-X'80' TURN OFF THE FLAG                * #1 *
DDLOOP   CLC   TIOEDDNM(8),=CL8'SYSPROC'                         * #1 *
         BE    PERM           YES, GO MARK IT PERM               * #1 *
         B     NOPERM                                            * #1 *
PERM     BAL   R8,PERMDS      GO PERM THIS DDNAME                * #1 *
         OI    FLAG,X'80'     TURN ON FLAG FOR CONCAT GROUP      * #1 *
NOPERM   L     R2,DSABFCHN    LOAD POINTER TO NEXT DSAB ENTRY    * #1 *
         LTR   R2,R2          END OF CHAIN ?                     * #1 *
         BNE   INLOOP         NO, KEEP LOOKING                   * #1 *
         B     ALLPLIB                                           * #1 *
PERMDS   EQU   *                                                 * #1 *
         STAX  DEFER=YES         NO ATTN WHILE WE ARE AUTHORIZED * #1 *
         AUTH  ON                                                * #1 *
         MODESET KEY=ZERO                                        * #1 *
         NI    DSABFLG1,X'FF'-DSABDALC  INDICATE NO DYNAM ALLOCED* #1 *
         MODESET KEY=NZERO                                       * #1 *
         AUTH  OFF                                               * #1 *
         STAX  DEFER=NO                                          * #1 *
         BR    R8                       RETURN TO CALLER         * #1 *
         DROP  R2
         DROP  R15                                               * #1 *
***********************************************************************
***********************************************************************
*****
*****
ALLPLIB  DS    0H
         CLI   FPLIB,C'Y'      DOES USER HAVE ISPPLIB ALLOCATED?
         BE    ALLMLIB         IF SO BRANCH TO CHECK FOR ISPMLIB
         LA    R3,PLIBTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
ALLMLIB  DS    0H
         CLI   FMLIB,C'Y'      DOES USER HAVE ISPMLIB ALLOCATED?
         BE    ALLSLIB         IF SO BRANCH TO CHECK FOR ISPSLIB
         LA    R3,MLIBTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
ALLSLIB  DS    0H
         CLI   FSLIB,C'Y'      DOES USER HAVE ISPSLIB ALLOCATED?
         BE    ALLTLIB         IF SO BRANCH TO CHECK FOR ISPTLIB
         LA    R3,SLIBTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
ALLTLIB  DS    0H
         CLI   FTLIB,C'Y'      DOES USER HAVE ISPTLIB ALLOCATED?
         BE    ALLTABL         IF SO BRANCH TO CHECK FOR ISPTABL
         LA    R3,TLIBTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
ALLTABL  DS    0H
         CLI   FTABL,C'Y'      DOES USER HAVE ISPTABL ALLOCATED?
         BE    ALLFILE         IF SO BRANCH TO CHECK FOR ISPLLIB
         LA    R3,TABLTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
ALLFILE  DS    0H
         CLI   FFILE,C'Y'      DOES USER HAVE ISPTABL ALLOCATED?
         BE    ALLLLIB         IF SO BRANCH TO CHECK FOR ISPLLIB
         LA    R3,FILETABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
ALLLLIB  DS    0H
         CLI   FLLIB,C'Y'      DOES USER HAVE ISPLLIB ALLOCATED?
         BE    FIN             IF SO BRANCH TO CHECK FOR ISPLLIB
         LA    R3,LLIBTABL     LOAD ADDRESS OF TABLE
         BAL   R11,ALLOCTAB    BRANCH TO ALLOCATE FILES
         EJECT
FIN      DS    0H
         L     R1,CPPLPNTR        LOAD THE ADDRESS OF THE CPPL PNTR
         L     R2,SAVEAREA+4      LOAD THE ADDRESS OF PREV SAVE AREA
         ST    R1,0(R2)           SAVE THE ADDRESS OF THE CPPL PNTR
         XAFIN  RETURN=NO,RC1=(R12),GEN=GEN
         LR    R12,R1             RESTORE ADDRESSABILITY FOR XCTL
         L     R1,0(R13)          LOAD ADDRESS OF CPPL PNTR
         XCTL  EP=PDF
         EJECT
*
      EJECT
**************************************************************
**** ALLOCATE FILE                                        ****
****     ON ENTER:  R3 ===> DDNAME                        ****
****                R4 ===> DSN  (LEN(2) DSN(44))         ****
****                R5 ===> ATTRIB LIST (OR ZERO)         ****
****     ON EXIT    R3 ===> DDNAME ALLOCATED              ****
****     USES REGS: R3 R4 R1 R8 R14 R15                   ****
**************************************************************
ALLOCATE DS    0H
         STM   R1,R11,ALLOCSV          STORE REGS
         MVC   DAP08DDN(8),0(R3)       MOVE IN DDNAME
         LTR   R5,R5                   CHECK FOR ATTRIBUTE LIST
         BZ    CLRALN                  IF ZERO CLEAR ATTR LIST
         MVC   DAP08ALN(8),0(R5)       MOVE IN ATTRIBUTE NAME
         B     STDSNADR                GO TO STORE DSN
CLRALN   MVC   DAP08ALN(8),=CL8' '     CLEAR ATTR LIST
STDSNADR ST    R4,DAP08DSN             STORE ADDRESS OF DATA SET NAME
         SR    R4,R4                   ZERO REGISTER 4
         ST    R4,ECB                  STORE REGISTER 4 AS ECB
         MVC   DAP08CD(2),=X'0008'     MOVE IN ALLOCATE CODE
         LA    R1,DAPLSECT             LOAD ADDRESS OF DAPL
         LA    R8,DAPB08C              LOAD ADDRESS OF DAP08
         USING DAPL,R1                 ESTABLISH ADDRESSABILITY TO DAPL
         ST    R8,DAPLDAPB             STORE ADDRESS OF DAPB IN DAPL
         DROP  R1                      DROP ADDRESSABILITY TO DAPL
         CALLTSSR EP=IKJDAIR           CALL DAIR TO ALLOCATE DATASET
         LTR   R15,R15                 SEE IF RETURN CODE IS ZERO
         BZ    ALRTN                   IF OK THEN RETURN TO CALLER
         MVC   DFID,DFIDI              SET UP DFID FIELD
         MVI   DFID+1,DFDAIR           SET DAIRFAIL ID TO INDICATE DAIR
         BAL   R2,DAIRFAIL             GO TO DAIRFAIL ROUTINE TO HAVE
*                                      ERROR MESSAGE PUT OUT
ALRTN    DS    0H
         LM    R1,R11,ALLOCSV    RESTORE REGS
         LA    R3,DAP08DDN       RETURN ADDRESS OF DDNAME
         BR    R11
      EJECT
**************************************************************
**** ALLOCATE FILES FROM TABLES                           ****
****     ON ENTER:  R3 ===> TABLE ADDRESS                 ****
**************************************************************
ALLOCTAB DS    0H
         STM   R1,R11,ALLOTSV          STORE REGS
         MVC   HOLDDDNM(8),0(R3)             SAVE DDNAME
         L     R6,8(R3)                      LOAD DSN COUNT INTO R6
         LTR   R6,R6         MAKE SURE THERE IS DSN(S) TO ALLOCATE
         BZ    ALTABDON      IF NOT THEN EXIT
         LA    R2,12(R3)                     POINT AT FIRST DSN
         USING DDNTDSCT,R2
         SR    R3,R3                         CLEAR R3
         STH   R3,DDNAMCNT        CLEAR DDNAME TABLE COUNT
ALTABLP  DS    0H
         SR    R5,R5              CLEAR R5, NO ATTRIB LIST
         LA    R3,HOLDDDNM        POINT AT DDNAME TO USE
         LA    R4,DDNDSN          POINT R4 AT DSN TO ALLOC
         BAL   R11,ALLOCATE       CALL ALLOCATE
         CLC   0(3,R3),=C'SYS'  IS IT A 'SYS' DD NAME?        * #2 *
         BE    ITSASYS                                        * #2 *
         CLC   DDNAMCNT,=H'0'     WAS THERE ONLY ONE?         * #2 *
         BE    ITSASYS            IF SO OK                    * #2 *
         MVC   HOLDDDNM(8),=CL8' ' CLEAR DDNAME TO ALLOCATE   * #2 *
         B     ALTABLP                                        * #2 *
ITSASYS  DS    0H                                             * #2 *
         LH    R5,DDNAMCNT        LOAD DDNAME TABLE COUNT
         LA    R5,1(R5)           INCREMENT COUNT
         STH   R5,DDNAMCNT        UPDATE COUNT
         BCTR  R5,R0              DECREMENT BACK FOR CALCULATION
         M     R4,=F'8'           MULTIPLY BY NAME LENGTH
         LA    R4,DDNAMTAB        POINT AT START OF TAB
         AR    R5,R4              GET DISPLACEMENT TO NEXT OPEN SLOT
         MVC   0(8,R5),0(R3)      MOVE IN DDNAME ALLOCATED
         MVC   HOLDDDNM(8),=CL8' ' CLEAR DDNAME TO ALLOCATE
         LA    R2,DDNNEXT         UPDATE TABLE POINTER
         BCT   R6,ALTABLP         DECREMENT TABLE COUNT, REPEAT
         LH    R6,DDNAMCNT        LOAD DDNAME COUNT
         C     R6,=F'1'           WAS THERE ONLY ONE?
         BE    ALTABDON           IF SO GO TO EXIT.
         SR    R5,R5              SET R5 TO ZEROES
         STH   R5,DA0CFLG         SET FLG TO ZEROES
         STH   R5,DA0CDARC        SET ERROR CODE TO ZEROES
         STH   R5,DA0CR1          SET TO ZEROES
         STH   R5,DA0CR2          SET TO ZEROES
         ST    R5,ECB                  STORE REGISTER 4 AS ECB
         MVC   DA0CCD(2),=X'000C'      MOVE IN CONCATINATE CODE
         LA    R1,DAPLSECT             LOAD ADDRESS OF DAPL
         LA    R8,DA0CCD               LOAD ADDRESS OF DA0CCD
         USING DAPL,R1                 ESTABLISH ADDRESSABILITY TO DAPL
         ST    R8,DAPLDAPB             STORE ADDRESS OF DAPB IN DAPL
         DROP  R1                      DROP ADDRESSABILITY TO DAPL
         CALLTSSR EP=IKJDAIR           CALL DAIR TO CONCATINATE DDNAMES
         LTR   R15,R15                 SEE IF RETURN CODE IS ZERO
         BZ    ALTABDON                IF OK THEN RETURN TO CALLER
         MVC   DFID,DFIDI              SET UP DFID FIELD
         MVI   DFID+1,DFDAIR           SET DAIRFAIL ID TO INDICATE DAIR
         BAL   R2,DAIRFAIL             GO TO DAIRFAIL ROUTINE TO HAVE
*                                      ERROR MESSAGE PUT OUT
ALTABDON DS    0H
         LM    R1,R11,ALLOTSV    RESTORE REGS
         BR    R11
         DROP  R2
        EJECT
***********************************************************************
*    FILL THE TABLE ENTRY                                             *
*      R3===> TABLE ENTRY COUNT, +4 ===> FIRST TABLE ENTRY            *
*      R4===> START OF DSNAME TO MOVE INTO TABLE                      *
***********************************************************************
*
FILLTAB  DS    0H             FILL TABLE WITH FILE
         STM   R1,R11,FILLTSV          STORE REGS
         LA    R8,4(R3)       POINT AT FIRST ENTER
         LR    R10,R4         SAVE POINTER TO DSN
         L     R5,0(R3)       LOAD CURRENT ENTRY COUNT
         LA    R5,1(R5)       INCREMENT COUNT BY 1
         C     R5,=F'16'     MORE THAN POSSIBLE ENTRIES?
         BE    TOMANYLB       IF TOO MANY LIBS TELL USER
         ST    R5,0(R3)       STORE NEW VALUE
         BCTR  R5,0           SET COUNT DOWN BY ONE
         M     R4,=F'46'      MULTIPLY BY LENGTH OF ENTRY
         AR    R8,R5          SET R8 TO FIRST EMPTY ENTRY ADDRESS
         USING DDNTDSCT,R8
         SR    R2,R2          SET R2 TO ZERO
LOOPCHK  DS    0H
         LR    R6,R2
         AR    R6,R10
         CLI   0(R6),C' '  CHECK FOR A BLANK
         BE    FOUNDEND       IF SPACE FOUND
         C     R2,=F'44'      LARGER THAN POSSIBLE DSN?
         BE    BADDSNMS       IF BAD LENGTH GIVE USER MESSAGE
         LA    R2,1(R2)       SET R2 UP BY ONE
         B     LOOPCHK        CHECK NEXT BYTE
FOUNDEND DS    0H
         STH   R2,DDNDSNLN       STORE LENGTH OF
         MVC   DDNDSNNM(44),=CL44' ' SPACE OUT DSN FIELD
         BCTR  R2,0                DECREMENT R2 BY 1
         EX    R2,MOVEDSN          MOVE IN THE DSN
FILLEXIT LM    R1,R11,FILLTSV    RESTORE REGS
         BR    R11
BADDSNMS DS    0H
         TPUT  =C'SYSXXXE - BAD DSN LENGTH, LIBRARY IGNORED',40
         TPUT  (R10),80
         TPUT  =C'SYSXXXE - THE ABOVE CARD IS IGNORED      ',40
         L     R2,0(R3)       LOAD CURRENT ENTRY COUNT
         BCTR  R2,0           SET COUNT DOWN BY ONE
         ST    R2,0(R3)       STORE NEW VALUE
         B     FILLEXIT
TOMANYLB DS    0H
         TPUT  =C'SYSXXXE - TO MANY LIBRARIES, USE NO MORE THAN 16',47
         TPUT  (R10),80
         TPUT  =C'SYSXXXE - THE ABOVE CARD IS IGNORED      ',40
         B     FILLEXIT
MOVEDSN  MVC   DDNDSNNM(0),0(R10)   MOVE IN DSN
         DROP  R8
      EJECT
**************************************************************
**** FREE DDNAME                                          ****
****     ON ENTER:  R3 ===> DDNAME                        ****
****     USES REGS:                                       ****
**************************************************************
FREEDDNM DS    0H
         STM   R1,R11,FREEDDSV         STORE REGS
         MVC   DAP18DDN(8),0(R3)       MOVE IN DDNAME
         SR    R4,R4                   CLEAR REG 4
         ST    R4,ECB                  STORE REGISTER 4 AS ECB
         MVC   DAP18CD(2),=X'0018'     MOVE IN ALLOCATE CODE
         LA    R1,DAPLSECT             LOAD ADDRESS OF DAPL
         LA    R8,DAPB18C              LOAD ADDRESS OF DAPB18C
         USING DAPL,R1                 ESTABLISH ADDRESSABILITY TO DAPL
         ST    R8,DAPLDAPB             STORE ADDRESS OF DAPB IN DAPL
         DROP  R1                      DROP ADDRESSABILITY TO DAPL
         CALLTSSR EP=IKJDAIR           CALL DAIR TO ALLOCATE DATASET
         LTR   R15,R15                 SEE IF RETURN CODE IS ZERO
         BZ    FRRTN                   IF OK THEN RETURN TO CALLER
         MVC   DFID,DFIDI              SET UP DFID FIELD
         MVI   DFID+1,DFDAIR           SET DAIRFAIL ID TO INDICATE DAIR
         BAL   R2,DAIRFAIL             GO TO DAIRFAIL ROUTINE TO HAVE
*                                      ERROR MESSAGE PUT OUT
FRRTN    DS    0H
         LM    R1,R11,FREEDDSV    RESTORE REGS
         BR    R11
        EJECT
***********************************************************************
*                                                                     *
*        INVOKE DAIRFAIL TO DISPLAY AN ERROR MESSAGE                  *
*                                                                     *
***********************************************************************
*
DAIRFAIL XC    DFPARMS(DFLEN),DFPARMS  INITIALIZE PARMLIST FOR DAIR
*                                      FAIL TO ZEROS
         ST    R1,DFDAPLP              STORE POINTER TO DAPL/RB IN
*                                      PARAMETER LIST
         ST    R15,RETCODE             STORE RETURN CODE
         LA    R1,RETCODE              LOAD ADDRESS OF RETURN CODE
         ST    R1,DFRCP                STORE POINTER TO RETURN CODE IN
*                                      PARAMETER LIST
         LA    R1,=F'0'                LOAD ADDRESS OF FULLWORD OF
*                                      ZEROS
         ST    R1,DFJEFF02             STORE DUMMY POINTER TO IKJEFF02
*                                      IN PARMLIST
         LA    R1,DFID                 LOAD ADDRESS OF DAIR FAIL ID
*                                      FIELD
         ST    R1,DFIDP                STORE POINTER TO DFID IN
*                                      PARMLIST
         L     R1,SAVEAREA+4           LOAD ADDRESS OF PEVIOUS
*                                      SAVEAREA
         L     R1,24(R1)               LOAD POINTER TO CPPL
         ST    R1,DFCPPLP              STORE POINTER TO CPPL IN
*                                      PARMLIST
         LINK  EP=IKJEFF18,MF=(E,DFPARMS)  LINK TO DAIR FAIL SERVICE
*                                      ROUTINE TO HANDLE RETURN
*                                      CODE
         XAFIN
         LTORG
***************************** CONSTANTS *******************************
*
*
DFIDI    DC    X'0001' NO WTP, DAIRFAIL
WPROFILE DC    CL8'WPROFILE'
*
******************** DAIR CONTROL BLOCK CONSTANTS *********************
DAPB08CI DS    0F
         DC    X'0008'                 DA08CD
         DC    H'0'                    DA08FLG
         DC    H'0'                    DA08DARC
         DC    H'0'                    DA08CTRC
         DC    A(0)                    DA08PDSN
         DC    CL8'        '           DA08DDN
         DC    CL8' '                  DA08UNIT
         DC    CL8' '                  DA08SER
         DC    F'0'                    DA08BLK
         DC    F'0'                    DA08PQTY
         DC    F'0'                    DA08SQTY
         DC    F'0'                    DA08DQTY
         DC    CL8' '                  DA08MNM
         DC    CL8' '                  DA08PSWD
         DC    X'08'                   DA08DSP1      SHR
         DC    X'08'                   DA08DSP2      KEEP
         DC    X'08'                   DA08DSP3      KEEP
         DC    X'08'                   DA08CTL       PERM
         DC    F'0'                    DA08DSO
         DC    CL8' '                  DA08ALN
DAPB08L  EQU   *-DAPB08CI              LENGTH
        SPACE 3
DAPB18CI DS    0F
         DC    X'0018'                 DA18CD
         DC    H'0'                    DA18FLG
         DC    H'0'                    DA18DARC
         DC    H'0'                    DA18CTRC
         DC    A(0)                    DA18PDSN
         DC    CL8'        '           DA18DDN
         DC    CL8' '                  DA18MNM
         DC    H'0'                    DA18CLS
         DC    X'00'                   DA08DSP2
         DC    X'10'                   DA08CTL
         DC    8X'00'                  RESERVED
DAPB18L   EQU   *-DAPB18CI              LENGTH
        SPACE 3
ISPIIMAG DCB   DDNAME=WPROFILE,DSORG=PO,MACRF=R,EODAD=FINI
LISPIIMA EQU   *-ISPIIMAG
ISPIIMAX DCB   DDNAME=WPROFILE,DSORG=PS,MACRF=GM,EODAD=FINI
LISPIIMX EQU   *-ISPIIMAX
OPNIMAGE OPEN  (ISPIIMAG,INPUT),MF=L
LOPNIMAG EQU   *-OPNIMAGE
CLOIMAGE CLOSE (),MF=L
LCLOIMAG EQU   *-CLOIMAGE
*PROIMAGE DCB   EXLST=PROIMAGE,DDNAME=ISPPROF,DSORG=PO,MACRF=R
*LPDCIMAG EQU   *-PROIMAGE
         EJECT
         SPACE 2
         IKJDAP08
DAP08LEN EQU   *-DAPB08
         IKJDAPL
DAPLLEN  EQU   *-DAPL
         IKJCPPL
CPPLLEN  EQU   *-CPPL
         IKJDFPB
         CVT DSECT=YES
         SPACE 4
         IKJTCB                                                  * #1 *
         IEZJSCB                                                 * #1 *
DSAB     IHADSAB                                                 * #1 *
TIOT     DSECT                                                   * #1 *
         IEFTIOT1                                                * #1 *
         EJECT
DDNTDSCT DSECT
DDNDSN   DS   0H                     FILE NAME LENGTH AND NAME
DDNDSNLN DS    H                     FILE NAME LENGTH
DDNDSNNM DS    CL44                  FILE NAME
DDNNEXT  DS    0H                    NEXT DDN TABLE ENTERY
        EJECT
WORKAREA DSECT
SAVEAREA DS    18F
         DS    0D
DAP08    DS    0F
         ORG   DAP08+DAP08LEN
DAPLSECT DS    0F
         ORG   DAPLSECT+DAPLLEN
DFPLSECT DS    4F                   SPACE FOR DFPL
DFPBSECT DS    5F                   SPACE FOR DFPB
         DS    H                    TO GET ALLIGNMENT
DFPBDSL  DS    H                    DSNAME LENGTH
DFPBNAME DS    CL44                 DSNAME
DFPBQUA  DS    CL8
ECB      DS    F
RETCODE  DS    F
         SPACE 4
CPPLPNTR DS    A               HOLD ADDRESS OF CPPL POINTER
DFID     DS    XL2             '0001' NO WTP, DAIRFAIL
DAPB08C  DS    0F
DAP08CD  DS    XL2   '0008'            DA08CD
         DS    H                       DA08FLG
         DS    H                       DA08DARC
         DS    H                       DA08CTRC
DAP08DSN DS    A                       DA08PDSN
DAP08DDN DS    CL8                     DA08DDN
         DS    CL8                     DA08UNIT
         DS    CL8                     DA08SER
         DS    F                       DA08BLK
         DS    F                       DA08PQTY
         DS    F                       DA08SQTY
         DS    F                       DA08DQTY
DAP08MNM DS    CL8                     DA08MNM
         DS    CL8                     DA08PSWD
         DS    X                       DA08DSP1      SHR
DAP08DSP DS    X                       DA08DSP2      KEEP
         DS    X                       DA08DSP3      KEEP
         DS    X                       DA08CTL       PERM
         DS    F                       DA08DSO
DAP08ALN DS    CL8                     DA08ALN
        SPACE 3
DAPB18C  DS    0F
DAP18CD  DC    X'0018'                 DA18CD
         DC    H'0'                    DA18FLG
         DC    H'0'                    DA18DARC
         DC    H'0'                    DA18CTRC
         DC    A(0)                    DA18PDSN
DAP18DDN DC    CL8'        '           DA18DDN
         DC    CL8' '                  DA18MNM
         DC    H'0'                    DA18CLS
         DC    X'00'                   DA08DSP2
         DC    X'00'                   DA08CTL
         DC    8X'00'                  RESERVED
        SPACE 4
         IKJEFFDF
        SPACE 4
ALLOCSV  DS    12F
ALLOTSV  DS    12F
FILLTSV  DS    12F
FREEDDSV DS    12F
        SPACE 4
SYSPRGMR DC    C'N'     SYSTEMS PROGRAMMER FLAG
SYSPROC  DC    C'N'     SYSPROC PRESENT FLAG
FPROF    DC    C'N'     FLAG FOR ISPPROF
FPLIB    DC    C'N'     FLAG FOR ISPPLIB
FMLIB    DC    C'N'     FLAG FOR ISPMLIB
FTABL    DC    C'N'     FLAG FOR ISPTABL
FTLIB    DC    C'N'     FLAG FOR ISPTLIB
FSLIB    DC    C'N'     FLAG FOR ISPSLIB
FLLIB    DC    C'N'     FLAG FOR ISPLLIB
FFILE    DC    C'N'     FLAG FOR ISPFILE
NPLIB    DC    C'Y'     FLAG FOR ISPPLIB DEFAULT
NMLIB    DC    C'Y'     FLAG FOR ISPMLIB DEFAULT
NTLIB    DC    C'Y'     FLAG FOR ISPTLIB DEFAULT
NLLIB    DC    C'Y'     FLAG FOR ISPLLIB DEFAULT
NTABL    DC    C'N'     FLAG FOR ISPTABL DEFAULT
NFILE    DC    C'N'     FLAG FOR ISPFILE DEFAULT
NSLIB    DC    C'Y'     FLAG FOR ISPSLIB DEFAULT
NCLIB    DC    C'Y'     FLAG FOR SYSPROC DEFAULT
         SPACE 4
PROFILE  DS    CL8      AREA TO HOLD THE PROFILE NAME     * # 3 *
PROFDSNP DS    H        PROFILE DATA SET NAME LENGTH (18)
PROFDSN  DS    0CL44    PROFILE DATA SET NAME
         DS    CL12     'TSO.PROFILE.'
PROFDPID DS    CL6      USER'S DPID
         DS    CL26     FILLER
         SPACE 2
ISPPARMI DCB   DDNAME=WPROFILE,DSORG=PS,MACRF=GM,EODAD=FINI
OPENLIST OPEN  (,),MF=L
CLOSLIST CLOSE (),MF=L
*PROFJFCB DCB   EXLST=PROIMAGE,DDNAME=ISPPROF,DSORG=PO,MACRF=R
PARMREC  DS    CL80
*
HOLDDDNM DS    CL8      AREA TO HOLD DDNAME FOR ALLOCATE
*
**********    CONCATINATE DDNAMES CONTROL BLOCK  **************
DA0CCD     DS    H               SET TO X'000C'
DA0CFLG    DS    H               SET TO ZEROES
DA0CDARC   DS    H               ERROR CODE
DA0CR1     DS    H               SET TO ZEROES
DDNAMCNT   DS    H               COUNT OF DDNAME TABLE ENTRIES
DA0CR2     DS    H               SET TO ZEROES
DDNAMTAB   DS    8CL8           TABLE TO HOLD 10 DD NAMES FOR ALLOCATE
FLAG     DS    X                                                 * #1 *
*
*JFCBA    DS    F                 X'07',AL3(JFCBAREA)
*JFCBAREA DS    0F
*JFCBDSN  DS    44X                    X'00'
*         DS    132X                   X'00'
*JFCBDSLN DS    F                      TO HOLD DSN LENGTH
*
**** LIBRARY TABLES
           DS     0D             START OF TABLE AREA
CLIBTABL   DS     CL8            DD NAME
CLIBTABC   DS     F              NUMBER OF ENTRIES
CLIBTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
PLIBTABL   DS     CL8            DD NAME
PLIBTABC   DS     F              NUMBER OF ENTRIES
PLIBTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
MLIBTABL   DS     CL8            DD NAME
MLIBTABC   DS     F              NUMBER OF ENTRIES
MLIBTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
SLIBTABL   DS     CL8            DD NAME
SLIBTABC   DS     F              NUMBER OF ENTRIES
SLIBTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
TLIBTABL   DS     CL8            DD NAME
TLIBTABC   DS     F              NUMBER OF ENTRIES
TLIBTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
TABLTABL   DS     CL8            DD NAME
TABLTABC   DS     F              NUMBER OF ENTRIES
TABLTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
LLIBTABL   DS     CL8            DD NAME
LLIBTABC   DS     F              NUMBER OF ENTRIES
LLIBTABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
FILETABL   DS     CL8            DD NAME
FILETABC   DS     F              NUMBER OF ENTRIES
FILETABE   DS    CL736          16 * LENGTH(H) AND DSN(CL44)
*
LSAVAREA EQU   *-SAVEAREA
         END
