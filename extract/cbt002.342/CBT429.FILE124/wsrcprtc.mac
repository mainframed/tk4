 PROC 0 DEBUG
 CONTROL    NOLIST MSG
 IF &DEBUG = DEBUG THEN -
 CONTROL   CONLIST MSG SYMLIST
 SET &MEMBER = /* NULL */
 ISPEXEC VGET (PPARM,VLM,DSNM,MBR) SHARED
 LISTDSI &DSNM &VLM
 IF &SYSREASON ^= 0  THEN -
 DO
   SET &S = &SYSREASON
   SET &R = /* NULL */
   IF &S=1 THEN SET &R=&STR(ERROR PARSING STATEMENT)
   IF &S=2 THEN SET &R=&STR(DYNAMIC ALLOCATION PROCESSING ERROR)
   IF &S=3 THEN SET &R=&STR(FILE IS OF TYPE THAT CANNOT BE PROCESSED)
   IF &S=4 THEN SET &R=&STR(ERROR DETERMINING UNIT NAME)
   IF &S=5 THEN SET &R=&STR(DATA SET NOT CATALOGED)
   IF &S=6 THEN SET &R=&STR(ERROR OBTAINING THE DATA SET NAME)
   IF &S=7 THEN SET &R=&STR(ERROR FINDING DEVICE TYPE)
   IF &S=8 THEN SET &R=&STR(DATA SET DOES NOT RESIDE ON DA DEVICE)
   IF &S=9 THEN SET &R=&STR(HSM MIGRATED DATA SET NORECALL)
   IF &S=11 THEN SET &R=&STR(YOU LACK AUTHORITY TO ACCESS DATA SET)
   IF &S=12 THEN SET &R=&STR(VSAM DATA SETS ARE NOT SUPPORTED)
   IF &S=13 THEN SET &R=&STR(DATA SET COULD NOT BE OPENED)
   IF &S=14 THEN SET &R=&STR(DEVICE TYPE NOT FOUND IN UCB TABLES)
   IF &S=17 THEN SET &R=&STR(SYSTEM OR USER ABEND OCCURRED)
   IF &S=18 THEN SET &R=&STR(PARTIAL DATA SET INFORMATION WAS OBTAINED)
   IF &S=19 THEN SET &R=&STR(DATA SET RESIDES ON MULTIPLE VOLUMES)
   IF &S=20 THEN SET &R=&STR(DEVICE TYPE NOT FOUND IN EDT)
   IF &S=21 THEN SET &R=&STR(CATALOG ERROR IN TRYING TO LOCATE)
   IF &S=22 THEN SET &R=&STR(&VLM NOT MOUNTED)
   IF &S=23 THEN SET &R=&STR(PERMANENT I/O ERROR ON VOLUME)
   IF &S=24 THEN SET &R=&STR(DATA SET NOT FOUND BY OBTAIN MACRO)
   IF &S=25 THEN SET &R=&STR(DATA SET MIGRATED TO NON-DASD DEVICE)
   IF &S=26 THEN SET &R=&STR(DATA SET RESIDES ON MASS STORAGE DEVICE)
   IF &S=27 THEN SET &R=&STR(NO VOLUME SERIAL IS ALLOCATED TO DATA SET)
   WRITE
   WRITE
   WRITE
   WRITE
   WRITE  &DSNM  CANNOT BE PROCESSED
   WRITE
   WRITE             &R
   EXIT
 END
 IF &SYSDSORG = &STR(PS) THEN -
 DO
   PRINTO &DSNM &PPARM &VLM
   EXIT
 END
 SET &MLC = &LENGTH(&STR(&MBR))
 IF  &MLC = 0 THEN SET &MLC = 1
 IF  &SUBSTR(&MLC:&MLC,&STR(&MBR  )) =  &STR(*) THEN -
   DO
    SET &MEMBER = &STR(MEMBER(&MBR))
   END
 ELSE -
 IF &STR(&MBR) ^= /* NULL */ THEN -
 DO
    SET &MEMC = 1
    SET &MEMN = &STR(&MBR)
    GOTO WORK
 END
 SET &MEMC = 0
 SET &MEMN = /* NULL */
 SET &MEMH = /* NULL */
 ISPEXEC LMINIT  DATAID(PRTTSTD) DATASET(&DSNM) &VLM
 SET &LCC = &LASTCC
 IF &LCC ^= 0 THEN -
 WRITE &LCC
 ISPEXEC LMOPEN  DATAID(&PRTTSTD)
 SET &LCC = &LASTCC
 IF &LCC ^= 0 THEN -
 WRITE &LCC
 LOOP: -
 ISPEXEC LMMDISP DATAID(&PRTTSTD) PANEL(PRTPNL00) &MEMBER
 SET &FCC = &LASTCC
 ISPEXEC VGET (PENTR)
 IF &STR(&PENTR) = CANCEL OR &STR(&PENTR) = CAN THEN GOTO STOPIT
 IF &FCC ^= 0 THEN GOTO WORK
 SET &MEMC = &MEMC + 1
 SET &MEMH = &ZLMEMBER
 SET &MEMN = &STR(&MEMN&SUBSTR(1:8,&MEMH        )
  ISPEXEC LMMDISP DATAID(&PRTTSTD) OPTION(PUT) MEMBER(&MEMH) +
   ZLUDATA(SELECTED)
 GETLOOP: -
 ISPEXEC LMMDISP DATAID(&PRTTSTD) OPTION(GET)
 SET &MCC = &LASTCC
 ISPEXEC VGET (PENTR)
 IF &STR(&PENTR) = CANCEL OR &STR(&PENTR) = CAN THEN GOTO STOPIT
 IF &MCC = 8 THEN GOTO LOOP
 SET &MEMC = &MEMC + 1
 SET &MEMH = &ZLMEMBER
 SET &MEMN = &STR(&MEMN&SUBSTR(1:8,&MEMH        )
 ISPEXEC LMMDISP DATAID(&PRTTSTD) OPTION(PUT) MEMBER(&MEMH) +
   ZLUDATA(SELECTED)
 GOTO GETLOOP
 IF &FCC = 0 THEN GOTO LOOP
 STOPIT: -
   ISPEXEC LMMDISP DATAID(&PRTTSTD) OPTION(FREE)
   ISPEXEC LMCLOSE DATAID(&PRTTSTD)
   ISPEXEC LMFREE DATAID(&PRTTSTD)
  EXIT
 STRTWORK: -
   ISPEXEC LMMDISP DATAID(&PRTTSTD) OPTION(FREE)
   ISPEXEC LMCLOSE DATAID(&PRTTSTD)
   ISPEXEC LMFREE DATAID(&PRTTSTD)
 WORK: -
   SET &LCC = &LASTCC
   IF &LCC ^= 0 THEN -
   WRITE &LCC
   IF &MEMC = 0 THEN -
   DO
      WRITE NO MEMBERS SELECTED, PRINTOFF TERMINATING
      EXIT
   END
   SET &PRMLEN = &LENGTH(&STR(&PPARM))
   SET &DSNLEN = &LENGTH(&STR(&DSNM)
   IF &SUBSTR(1:1,&STR(&DSNM) ) = &STR(') THEN -
     SET &DSNM = &SUBSTR(1:&EVAL(&DSNLEN - 1),&STR(&DSNM) )
   SET &PRTC = 0
   SET &MS = -7
   SET &ME =  0
PRTLOOP: -
   SET &PRTC = &PRTC + 1
   SET &MS = &MS + 8
   SET &ME = &ME + 8
   SET &MBR = &SUBSTR(&MS:&ME,&MEMN       )
   SET &MBR = &MBR
   PRINTO &DSNM(&MBR)&STR(') &PPARM &VLM
   IF &MEMC > &PRTC THEN GOTO PRTLOOP
