*
*      THIS PROGRAM IS USED WITH THE GDGUTIL CLIST AND THE
*      GDGUTILP ISPF PANEL TO MODIFY THE NUMBER OF ENTRIES
*      BEING KEPT FOR A GDG INDEX.
*
*      THIS CODE WAS DOWNLOADED FROM THE NASPA BULLETIN BOARD
*      AND MODIFIED SLIGHTLY (DDNAMES AND WTO MSG) FOR USE
*      AT THE WILSON STREET REGIONAL COMPUTING CENTER
*             P.O. BOX 7850 - ROOM B174
*             ONE WEST WILSON STREET
*             MADISON, WI 53707-7850
*
*                      - J.MARTIN 4/26/89(608) 266-9525
*
*
*      RESET # OF ENTRIES IN A GDG. INPUT EXISTING GDG NAME AT
*      SYSIN. NAME IN COLS 1-44. NEW NUMBER OF ENTRIES IN COLS 46-48
*      IN FORMAT NNN. ENTRIES MUST BE > 2 AND < 255. MULTIPLE
*      RECORDS MAY BE INPUT. ANY ERROR WILL CAUSE FURTHER RECORDS
*      TO NOT BE PROCESSED. ENTERING DLX IN ENTRIES FIELD WILL
*      CAUSE INDEX TO BE DELETED.
*
*      THIS PROGRAM WILL HANDLE ONLY TWENTY VOLUMES PER DATA SET.
*      IF THE DATA SET RESIDES ON MORE THAN 20 VOLUMES, ONLY
*      THE FIRST 20 WILL BE RECATLOGED.
*
*      FOR SECURITY REASONS, YOU SHOULD FIRST LIST THE GDG
*      YOU ARE PLANNING TO RESET.
*
*          EXECUTION JCL
*
*//RESET   EXEC PGM=RESETGDG
*//STEPLIB  DD  DSN=AS.REQUIRED,DISP=SHR
*//REPORT   DD  SYSOUT=*
*//SYSPRINT DD  SYSOUT=*
*//SYSUDUMP DD  SYSOUT=*
*//SNAPPER  DD  SYSOUT=*
*//SYSIN    DD  *
*ABC.TEST.GDG                                 255
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
R10      EQU   10
RB       EQU   11
R11      EQU   11
RC       EQU   12
R12      EQU   12
RD       EQU   13
R13      EQU   13
RE       EQU   14
R14      EQU   14
RF       EQU   15
R15      EQU   15
***********************************************************************
*                                                                     *
*  RESET NUMBER OF ENTRIES IN A GDG  (MVS VERSION - OPERATES ON BOTH  *
*   CVOLS AND VSAM/ICF CATALOGS)                                      *
* ** WARNING ** AS OF YET, THIS PROGRAM WILL NOT HANDLE DATASETS      *
*  RESIDING ON MORE THAN 20 VOLUMES. ONLY THE FIRST TWENTY VOLS       *
*  WILL BE RECATALOGED.                                               *
*                                                                     *
*  THIS PROGRAM DOES NOT SCRATCH DISK DATASETS AS IT UNCATALOGES THEM *
*                                                                     *
***********************************************************************
         EJECT
RESETGDG CSECT
         SAVE  (14,12),,RESETGDG&SYSDATE&SYSTIME
         LR    R12,R15
         USING RESETGDG,R12
         USING TBLENTRY,R10
         ST    R13,SAV+4          STORE ADDRESS OF HIS SAVEAREA
         LR    R2,R13             SAVE ADDRESS OF HIS SAVEAREA
         LA    13,SAV             LOAD ADDRESS OF MY SAVEAREA
         ST    13,8(2)            STORE ADDRESS OF MY SAV IN HIS SAV
*
*
INIT     EQU   *
         OPEN  (SYSIN,INPUT,REPORT,OUTPUT)
*
CONTROL  EQU   *
CNTRL1   BAL   R11,READ
         CLC   ENTRIES,=C'DLX'    IS THIS A DELETE REQUEST?
         BNE   CNTRL2               NO - SKIP AROUND
*        WTO   'DELETED',ROUTCDE=11,DESC=6
         B     CNTRL1
CNTRL2   BAL   R11,RECAT
*        WTO   'SUCCESS',ROUTCDE=11,DESC=6
         FREEMAIN  R,LV=80000,A=TABADDR
         B     CNTRL1
*
READ     EQU   *
         MVC   OUTAREA,SPACES
         MVI   OUTAREA,X'89'      SKIP TO TOP
         BAL   R8,WRITEPRT        WRITE A BLANK LINE WITH SKIP TO TOP
         GET   SYSIN,INAREA       READ INPUT REC
         MVC   OUTAREA+1(80),INAREA   MOVE THE RECORD TO OUTAREA
         BAL   R8,WRITEPRT        WRITE THE RECORD TO REPORT
         CLC   ENTRIES,=C'DLX'    IS THIS A DELETE REQUEST?
         BE    DELREQ                YES - SKIP
         CLC   ENTRIES,=C'001'    IS ENTRIES LESS THAN 1?
         BL    BADENT               YES - TERMINATE
         CLC   ENTRIES,=C'255'    IS ENTRIES GREATER THAN 255?
         BH    BADENT               YES - TERM
         PACK  PWORK,ENTRIES      CONVERT ENTRIES TO BINARY
         CVB   R9,PWORK
         STC   R9,BGDG+3          STORE # ENTRIES IN BLDG LIST
         GETMAIN R,LV=80000       GET ENOUGH STORAGE FOR 256 ENTRIES
         LR    R10,R1             LOAD THE WORKAREA ADDRESS
         ST    R10,TABADDR        SAVE IT
DELREQ   EQU   *                  LABEL FOR SKIP IF DELETE REQUEST
         MVC   SAVENAME,GDGNAME   SAVE NAME FOR LATER BLDG
         TRT   GDGNAME,BLANKTBL   FIND ADDRESS OF BLANK
         LR    R3,R1              SAVE IT IN R3
*
         MVC   0(3,R3),=C'(0)'    INSERT RELATIVE GENERATION REF
         LOCATE LOCNAME           FIND OUT WHAT KIND OF CATALOG WE HAVE
         STCM  R1,B'1000',CATYPE  STORE THE HIGH ORDER BYTE
         L     R2,16              GET ADDRESS OF CVT
         TM    116(R2),X'20'      IS THIS VS1?
         BNO   NOTVS1               NO -SKIP
         MVI   CATYPE,CVOLTYPE    IF VS1 THIS MUST BE CVOL
NOTVS1   CLC   ENTRIES,=C'DLX'    IS THIS A DELETE REQUEST?
         BE   UNCREST               YES - GO DELETE
*
LOCLOOP  EQU   *
         MVC   0(3,R3),=C'(0)'    INSERT RELATIVE GENERATION REF
         LOCATE LOCNAME           LOCATE GENERATION(0)
         LTR   R15,R15            WAS LOCATE SUCESSFULL?
         BNZ   WRITEFF              NO - MUST HAVE BEEN THE LAST ONE
         LA    R8,UNCAT-8         SAVE ADDRESS OF TAG FOR ERROR WTO
         CATALOG  UNCAT           UNCAT THE DATASET
         LTR   R15,R15            WAS UNCAT SUCESSFULL?
         BNZ   ERROR                NO - ERROR
         MVC   MSGNAME,GDGNAME    SET UP MSG LINE
         MVC   MSGAREA(14),UNCATMSG
         BAL   R8,WRITEPRT        GO WRITE MSG TO REPORT
         LA    R4,TCATBLK         GET READY FOR MVCL
         LA    R5,265             LENGTH IS 265
         LA    R6,CATBLK
         LA    R7,265
         MVCL  R4,R6              MOVE BLK INTO TABLE
         MVC   TNAME,GDGNAME      MOVE NAME INTO TABLE
         LA    R10,310(,R10)      INCREMENT TABLE ADDRESS
         BCT   R9,LOCLOOP         LOOP
UNCREST  EQU   *
         MVC   0(3,R3),=C'(0)'    INSERT RELATIVE GENERATION REF
         LOCATE LOCNAME           GET THE ABSOLUTE GEN NUMBER
         CATALOG  UNCAT           GO UNCAT THIS GEN
         LTR   R15,R15            SUCESSFULL?
         BNZ   WRITEFF              NO - MUST BE DONE - RETURN
         MVC   MSGNAME,GDGNAME    SET UP MSG LINE
         MVC   MSGAREA(14),UNCATMSG
         BAL   R8,WRITEPRT        GO WRITE MSG TO REPORT
         B     UNCREST            LOOP
WRITEFF  EQU   *                  WRITE FF'S TO INDICATE END OF TABLE
         CLC   ENTRIES,=C'DLX'    IS THIS A DELETE REQUEST?
         BE    SKIP1                YES - SKIP AROUND FFFF WRITE
         MVC   0(4,R10),=X'FFFFFFFF'   WRITE FF'S TO INDICATE END TBL
SKIP1    EQU   *
         TM    CATYPE,CVOLTYPE    IS THIS A CVOL?
         BO    CVOLDEL              YES - USE THE CAMLST
         B     ICFDEL               NO - USE IDCAMS
CVOLDEL  LA    R8,DELIDX-8        SAVE ADDRESS OF TAG FOR ERROR WTO
         INDEX  DELIDX            DELETE THE INDEX
         LTR   R15,R15            WAS DELETE SUCESSFULL?
         BNZ   ERROR                NO -ERROR
DELOK    MVC   MSGNAME,SAVENAME   SET UP MSG LINE
         MVC   MSGAREA(14),DELXMSG
         BAL   R8,WRITEPRT        GO WRITE MSG TO REPORT
         BR    R11                RETURN
*
ICFDEL   EQU   *                  COME HERE IF ICF CATALOG
         MVC   DELCARD+9(36),SAVENAME  MOVE THE GDG NAME INTO STMT
         LA    R1,IDCDEL          POINT R1 TO THE PARM LIST
         L     R15,=V(IDCAMSIN)   GET THE ADDR OF THE IDCAMS INTERFACE
         BALR  R14,R15            GO UNCAT
         LTR   R15,R15            SUCESSFULL?
         BZ    DELOK                YES - BRANCH
         B     IDCERROR            ELSE BRANCH TO HANDLE IDCAMS ERROR
*
*
RECAT    EQU   *
         TM    CATYPE,CVOLTYPE    IS THIS A CVOL?
         BO    CVOLIDX              YES - USE THE INDEX
         B     ICFDEF               NO - USE IDCAMS
CVOLIDX  LA    R8,BGDG-8          SAVE ADDRESS OF TAG FOR ERROR WTO
         INDEX BGDG               GO BUILD NEW INDEX USING NEW ENTRIES
         LTR   R15,R15            SUCESSFULL?
         BNZ   ERROR                NO - ERROR
INDEXOK  MVC   MSGNAME,SAVENAME   SET UP MSG LINE
         MVC   MSGAREA(26),BLDGMSG
         MVC   MSGAREA+22(3),ENTRIES
         BAL   R8,WRITEPRT        GO WRITE MSG TO REPORT
         L     R10,TABADDR        LOAD START ADDRESS OF SAVE TABLE
         CLC   TNAME(4),=X'FFFFFFFF'  IS THERE ANYTHING TO RECATALOG?
         BNE   CATLOOP              YES - BRANCH AROUND
         BR     R11
CATLOOP  EQU   *
         MVC   GDGNAME,TNAME      MOVE IN NAME
         MVC   CATBLK(242),TVOLLIST  MOVE IN VOLUME LIST
         LA    R8,CAT-8           SAVE ADDRESS OF TAG FOR ERROR WTO
         CATALOG CAT              GO CATALOG THE DATASET
         LTR   R15,R15            SUCESSFULL?
         BNZ   ERROR                NO - ERROR
         MVC   MSGNAME,GDGNAME    SET UP MSG LINE
         MVC   MSGAREA(14),CATMSG
         BAL   R8,WRITEPRT        GO WRITE MSG TO REPORT
         LA    R10,310(,R10)      INCREMENT TABLE ADDRESS
         CLC   TNAME(4),=X'FFFFFFFF'  IS THIS THE LAST ENTRY
         BER   R11                  YES -RETURN
         B     CATLOOP            ELSE LOOP
*
ICFDEF   EQU   *
         MVC   DEFCARD+15(36),SAVENAME      MOVE IN THE GDG NAME
         MVC   DEFCARD+58(3),ENTRIES   MOVE IN THE LIMIT
         LA    R1,IDCDEF          POINT R1 TO THE PARM LIST
         L     R15,=V(IDCAMSIN)   GET THE ADDR OF THE IDCAMS INTERFACE
         BALR  R14,R15            GO UNCAT
         LTR   R15,R15            SUCESSFULL?
         BZ    INDEXOK              YES - BRANCH
         B     IDCERROR            ELSE BRANCH TO HANDLE IDCAMS ERROR
*
*
ERROR    EQU   *
         ST    R15,CCODE          STORE RETURN CODE FROM CAMLST
         MVC   WTOX+24(8),0(R8)   MOVE IN THE TAG
WTOX     WTO   'ERROR IN CAMLST XXXXXXXX',ROUTCDE=11,DESC=6
         B     TERM
*
IDCERROR EQU   *
         ST    R15,CCODE          SAVE RETURN CODE FROM IDCAMS
         WTO   'IDCAMS RETURNED ERROR - SEE IDCAMS SYSPRINT MESSAGES', X
               ROUTCDE=11
         B     TERM
*
*
BYE      EQU   *
         CLOSE (SYSIN,,REPORT)
         L     R13,SAV+4
         L     R15,CCODE
         RETURN (14,12),RC=(15)
*
*
***********************************************************************
SNAPIT   EQU   *
         LA    R11,320(,R10)
         WTO   'SNAP DUMP REQUESTED',ROUTCDE=11,DESC=6
         OPEN (SNAPPER,OUTPUT)
         SNAP  DCB=SNAPPER,PDATA=(PSW,REGS),STORAGE=(CATBLK,BLANKTBL)
         SNAP  DCB=SNAPPER,STORAGE=((R10),(R11))
         CLOSE (SNAPPER)
         B     BYE
*
BADENT   EQU   *
         MVC   OUTAREA+1(25),ENTMSG   WRITE INVALID ENTRIES MSG
         BAL   R8,WRITEPRT
         MVC   CCODE,=F'99'
TERM     MVC   OUTAREA+1(91),TERMMSG  WRITE TERMINATION MESSAGE
         BAL   R8,WRITEPRT
         B     SNAPIT
*
WRITEPRT EQU   *
         PUT   REPORT,OUTAREA     WRITE OUTPUT RECORD
         MVC   OUTAREA,SPACES     CLEAR OUTAREA
         BR    R8                 RETURN
*
         DS    0F                 FULLWORD ALIGNMENT
         DC    CL8'NAME    '      TAG FOR ERROR MSG
LOCNAME  CAMLST NAME,GDGNAME,,CATBLK
*
         DC    CL8'UNCAT   '        TAG FOR ERROR MSG
UNCAT    CAMLST UNCAT,GDGNAME   UNCAT AND RETAIN INDEX LEVLELS
*
         DC    CL8'DLTX    '        TAG FOR ERROR MSG
DELIDX   CAMLST DLTX,SAVENAME   DELETE GDG INDEX
*
         DC    CL8'BLDG    '        TAG FOR ERROR MSG
BGDG     CAMLST BLDG,SAVENAME,,,DELETE,,000
*
         DC    CL8'CAT     '        TAG FOR ERROR MSG
CAT      CAMLST CAT,GDGNAME,,CATBLK
*
************************ DATA AREAS AND DCB'S *************************
*
         DS    0D
CATBLK   DS    CL265
SAV      DS    18F
PWORK    DS    D
TABADDR  DS    A(0)
INAREA   DS    0CL80
GDGNAME  DS    CL44
         DS    CL1
ENTRIES  DS    CL3
         DS    CL32
SAVENAME DS    CL44
CCODE    DC    F'0'
PGEN     DS    PL3
SPACES   DC    C' '
OUTAREA  DS    0CL133
         DC    C' '
MSGNAME  DS    CL44
         DS    CL8
MSGAREA  DS    CL80
CATYPE   DC    X'00'              CATALOG TYPE
CVOLTYPE EQU   X'08'
ICFTYPE  EQU   X'00'
IDCDEL   DC    F'1'               ONE CARD WILL BE PASSED TO IDCAMSIN
         DC    A(DELCARD)         ADDRESS OF THE IDCAMS DELETE STMT
DELCARD  DC    C' DELETE (                          ) GDG'
         DC    (80-L'DELCARD)C' ' FILL IT OUT WITH BLANKS
IDCDEF   DC    F'1'               ONE CARD WILL BE PASSED TO IDCAMSIN
         DC    A(DEFCARD)         ADDRESS OF THE CARD
DEFCARD  DC    C' DEF GDG (NAME(                                    )  X
               LIM(000) SCR)'
         DC    (80-L'DEFCARD)C' '  FILL IT OUT WITH BLANKS
BLANKTBL DC    64X'00',X'FF',191X'00'
TERMMSG  DC    CL91'** UNACCEPTABLE ERROR ** - PROGRAM TERMINATING - NOX
                FURTHER INPUT RECORDS WILL BE PROCESSED'
ENTMSG   DC    CL25'*** INVALID ENTRIES INPUT'
UNCATMSG DC    CL14'UNCATALOGED   '
CATMSG   DC    CL14'CATALOGED     '
DELXMSG  DC    CL14'INDEX DELETED '
BLDGMSG  DC    CL26'INDEX CREATED ENTRIES=XXX'
*
SYSIN    DCB   DDNAME=GDGIN,MACRF=GM,LRECL=80,DSORG=PS,RECFM=FB,       C
               EODAD=BYE
REPORT   DCB   DDNAME=GDGOUT,MACRF=PM,LRECL=133,DSORG=PS,RECFM=FBM
SNAPPER  DCB   DDNAME=SNAPPER,MACRF=W,LRECL=125,BLKSIZE=882,DSORG=PS,  C
               RECFM=VBA
         LTORG
TBLENTRY DSECT                    310 BYTE TABLE ENTRY
TNAME    DS    CL44               ABSOLUTE NAME
TCATBLK  DS    0CL265             KEEP ON DBLWORD
TVOLLIST DS    CL242              VOLUME LIST INCLUDING # OF VOLUMES
         DS    CL10               ZEROS
CHAINTTR DS    CL3                CHAIN TTR
         DS    CL4                ZERO
CVOLSER  DS    CL6                FOUND ON THIS CVOL
         DS    C                  FILLER
*
         TITLE    'IDCAMS INTERFACE'
***********************************************************************
*                                                                     *
*  THIS MODULE WILL ALLOW YOU TO INVOKE IDCAMS. ON ENTRY,             *
*  R1 SHOULD POINT TO A LIST THAT LOOKS LIKE THIS:                    *
*                                                                     *
*   - FULLWORD CONTAINING THE BINARY COUNT OF 80 BYTE ENTRIES         *
*     FOLLOWING.                                                      *
*   - ADDRESS OF  80 BYTE IDCAMS SYSIN RECORDS                        *
*                                                                     *
*  THIS MODULE IGNORES OPEN/CLOSE REQUESTS FROM IDCAMS.               *
*                                                                     *
*  REGISTER USAGE -                                                   *
*                                                                     *
*    R2   = WORK REG                                                  *
*    R3  =                                                            *
*    R4  = NUMBER OF IDCAMS SYSIN RECORD IMAGES* FROM CALLER *        *
*    R5  = POINTER TO CURRENT SYSIN RECORD           V                *
*    R6  = POINTER TO IOFLAGS                  * FROM IDCAMS *        *
*    R7  = POINTER TO IOINFO                         V                *
*    R8  = POINTER TO USERDATA AREA                                   *
*    R9                                                               *
*    R10                                                              *
*    R11 = BAL RETURN REG                                             *
*    R12 = BASE                                                       *
*    R13 = SAVEAREA POINTER
*                                                                     *
***********************************************************************
         EJECT
IDCAMSIN CSECT
         SAVE  (14,12),,IDCAMSIN&SYSDATE&SYSTIME
         LR    R12,R15
         USING IDCAMSIN,R12
         ST    R13,SAV2+4         STORE ADDRESS OF HIS SAVEAREA
         LR    R2,R13             SAVE ADDRESS OF HIS SAVEAREA
         LA    13,SAV2            LOAD ADDRESS OF MY SAVEAREA
         ST    13,8(2)            STORE ADDRESS OF MY SAV IN HIS SAV
*
*
         MVC   USRDATA(8),0(R1)   SAVE THE PARMS
         LINK  EP=IDCAMS,PARAM=(OPTLIST,DNAMELST,PGNOLIST,IOLIST),     X
               VL=1
         L     R13,SAV2+4
         RETURN (14,12),RC=(15)
SAV2     DS    18F
*
OPTLIST  DC    H'0'               EMPTY OPTION LIST
DNAMELST DC    H'0'               EMPTY DNAME LIST
PGNOLIST DC    H'0'               EMPTY PAGE NO LIST
IOLIST   DC    F'1'               ONE GROUP OF I/O LISTS FOLLOW
         DC    A(SYSINID)         POINTER TO ID FOR SYSIN
         DC    A(IOROUT)          POINTER TO I/O ROUTINE
         DC    A(USRDATA)         ADDR OF USER DATA AREA
SYSINID  DC    CL10'DDSYSIN   '   INDICATE WE WISH TO MANAGE SYSIN
USRDATA  DC    2F'0'              USER DATA AREA
***********************************************************************
         DROP  R12                DROP R12 TO RE-ESTABLISH BASE
*
IOROUT   CSECT                    USER I/O ROUTINE
         SAVE  (14,12)            SAVE IDCAMS REGS
         LR    R12,R15
         USING IOROUT,R12
         ST    R13,IOSAV+4        BACK CHAIN
         LR    R2,R13
         LA    R13,IOSAV          POINT TO THE SAVE AREA FOR THIS GUY
         ST    R13,8(2)           FORWARD CHAIN
         LM    R6,R7,4(R1)        GET THE IOFLGS AND IOINFO POINTERS
         L     R1,0(,R1)          POINT TO THE USERDATA AREA
         LM    R4,R5,0(R1)        GET THE USERDATA
         LR    R8,R1              SAVE ADDR OF USERDATA AREA
*
         XR    R15,R15            CLEAR R15
         IC    R15,0(,R6)         INSERT THE REQUEST CODE
         L     R15,FUNCTAB(R15)     LOAD ROUTINE ADDRESS
         BALR  R11,R15            AND GO DO IT
RET      EQU   *                  GO BACK TO IDCAMS
         L     R13,IOSAV+4        RESTORE THE IDCAMS SAVAREA POINTER
         RETURN (14,12),RC=(15)
*
OPENRTN  EQU   *                  WE WILL INGNORE OPEN REQUESTS
         XR    R15,R15            CLEAR THE RET CODE
         BR    R11                AND RETURN
*
CLOSERTN EQU   *                  WE WILL IGNORE CLOSE REQUESTS
         XR    R15,R15            CLEAR THE RET CODE
         BR    R11                AND RETURN
*
GETRTN   EQU   *
         LTR   R4,R4              ANY MORE SYSIN RECS?
         BNZ   GETREC               YES - GO GET ONE
         LA    R15,4              ELSE INDICATE END OF FILE
         BR    R11                AND RETURN
GETREC   ST    R5,0(,R7)          POINT TO THE RECORD IN IDCAM'S LIST
         MVC   4(4,R7),=F'80'     INDICATE IT'S LENGTH IS 80
         LA    R5,80(,R5)         POINT TO THE NEXT RECORD
         XR    R15,R15            ZERO THE RETURN CODE
         BCTR  R4,0               DECREMENT THE SYSIN RECORD COUNT
         STM   R4,R5,0(R8)        STORE COUNT AND ADDRESS IN USRDATA
         BR    R11                AND RETURN
*
***********************************************************************
************************ DATA AREAS AND DCB'S *************************
*
IOSAV    DS    18F
*
FUNCTAB  EQU   *
         DC    A(OPENRTN)
         DC    A(CLOSERTN)
         DC    A(GETRTN)
         LTORG
*
         END
