*******************************************************************
*                                                                 *
*            D I S C L A I M E R    S E C T I O N                 *
*                                                                 *
*******************************************************************
*                                                                 *
* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *
* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *
* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *
* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *
* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *
* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *
* SUPPLIED .                                                      *
*                                                                 *
* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *
* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *
* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *
* FUTURE .                                                        *
*                                                                 *
*******************************************************************
***********************************************************************
*   TITLE: ZTPR0205                                                   *
*   AUTHOR: MURPHY                                                    *
*   DATE-WRITTEN: 10/16/84                                            *
*                 11/08/88  -  CORRECT JOB#/TIME, ADD HL - PMM        *
*                 04/06/90  -  UPDATED FOR APF FROM PARMLIB - PMM     *
*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *
*              GC28-1046-1                                            *
*   REMARKS:                                                          *
*                                                                     *
*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *
*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE.            *
*                                                                     *
***********************************************************************
ZTPR0205 CSECT
         BEGIN PROGRAM=ZTPR0205
*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME
         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT
         LR    R2,R1              SAVE CPPL
         USING ZTPR0205,R12       R12 BASE REGISTER
         GETMAIN RC,LV=WORKL,SP=1 GETMAIN  FOR SAVEAREA/WORK
         LTR   R15,R15            CHECK RETURN CODE
         BNZ   GETMERR
         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA
         USING SAVDSECT,R3        ADDRESSABILITY
         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)
         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)
         LR    R13,R3             ADDRESS OF SAVEAREA IN R13
         DROP  R3
         USING SAVDSECT,R13
         USING CPPL,R2
         L     R6,CPPLPSCB
         DROP  R2
         USING PSCB,R6
         MVC   USERID,PSCBUSER
         MVC   USERIDL,PSCBUSRL
         MVC   USERATTR,PSCBATR1  SAVE OPER AUTH INFO
         MVI   USERFLAG,X'00'
         MVI   CMDFLAG,X'00'
         DROP  R6
         ST    R2,CPPLSAVE
         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE
         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT
         MVC   SCREEN(108),DSCREEN SCREEN IMAGE
         GTSIZE
         LTR   R0,R0
         BZ    FREERET2            NON-DISPLAY TERMINAL
         CH    R1,=H'80'           80 WIDE?
         BNE   SETM2               NO - SET IT TO THIS
         CH    R0,=H'43'           MOD 4?
         BE    VERIFY
         CH    R0,=H'32'           MOD 3?
         BNE   SETM2
MODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY
         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)
         MVC   DSCRO3,=X'E6F0'     (32,1)
         MVC   DSCRO4,=X'E7F7'     (32,72)
         B     VERIFY
SETM2    STSIZE SIZE=80,LINE=24
         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG
         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT
         MVC   DSCRO3,=X'5CF0'     24,1
         MVC   DSCRO4,=X'5DF7'     24,72
VERIFY   EQU   *
         STFSMODE ON,INITIAL=YES
         LA    R7,TABLEND
         LA    R6,4
         LA    R1,TABLE
TBLOOP   CLC   0(4,R1),USERID
         BE    USEROK
         BXLE  R1,R6,TBLOOP
         TM    USERATTR,X'80'   OPER AUTHORITY?
         BZ    NOAUTH
*        MVI   CMDFLAG,X'FF'
         B     VEROK1
USEROK   MVI   USERFLAG,X'FF'
         B     VEROK1
FREEAX   MVI   FREEFLAG,X'FF'
         B     VEROK1
VEROK1   STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE
         TESTAUTH FCTN=1
         LTR   R15,R15
         BZ    GOTAUTH
GOTAUTH  MODESET MF=(E,SUPRMOD)
         CLI   FREEFLAG,X'FF'
         BNE   AXIT
         AXFRE AXLIST=AXLIST     FREE    AN AUTHORIZATION INDEX IN A.T.
         B     SCRENDEF
NOTAUTH  TPUT  MSGNO2,6
         B     FREERET2
AXIT     AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.
         LA    R1,1              MASTER IS ASID 1
         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1
         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX
SCRENDEF CLI   FREEFLAG,X'FF'
         BE    FREERET
         MVC   COMMAND,COMMANDL
         MVI   HEX40S,X'40'         SPACE
         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE
         L     R2,SCRLENG           SCREEN LENGTH
         S     R2,=F'0160'          MINUS 2 LINES
         LA    R5,DETAIL            ADDRESS OF SCREEN
         ST    R5,FRSTLINE
         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA
         ST    R2,LASTLINE          SAVE THE ADDRESS
         LA    R1,16
         L     R1,0(R1)
         USING CVT,R1
         L     R1,CVTMSER
         DROP  R1
         USING BASE,R1
         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE
         SR    R4,R4
         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD
         BZ    NOTACTIV
         ST    R4,MTTSIZE
         ST    R3,MTTADDR
         DROP  R1
         GETMAIN RC,LV=(4)       LENGTH WAS IN R4
         LTR   R15,R15
         BNZ   GETMERR
         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT
AUTHRIZE L     R9,MTTSIZE
         L     R3,MTTADDR
         SRA   R9,8             DIVIDE BY 256
         BNP   NOTACTIV
         LA    R1,1
         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!
         SR    R5,R5
         LA    R6,0(R4,R11)      END OF GETMAIN AREA
         LA    R7,256
         LR    R10,R11
MOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES
         LA    R10,256(,R10)
         LA    R3,256(,R3)
         BCT   R9,MOVELOOP
         B     ALLMOVED
FREERET  L     R4,MTTSIZE
         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA
         LTR   R15,R15            CHECK RETURN CODE
         BNZ   FREEMERR
*        SR    R1,R1                   ****************************
*        L     R1,16                   *  A                       *
*        USING CVT,R1                  *   D                      *
*        L     R1,CVTTCBP              *    D      J              *
*        DROP  R1                      *     R      S             *
*        L     R1,4(R1)                *      E      C            *
*        USING TCB,R1                  *       S      B           *
*        L     R1,TCBJSCB              *        S                 *
*        DROP  R1                      ****************************
*        USING IEZJSCB,R1
*        NI    JSCBOPTS,X'FF'-JSCBAUTH
*        DROP  R1
*        STAX  DEFER=NO                NOW THEY CAN INTERRUPT
FREERET2 LR    R3,R13
         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA
         FREEMAIN RC,LV=WORKL,A=(3),SP=1
         LTR   R15,R15            CHECK RETURN CODE
         BNZ   FREEERR2
*        MODESET MF=(E,PROBMOD)        PROBLEM STATE
RETURN   RETURN (14,12),,RC=(15)
GETMERR  WTO   ' ZTPR0205 - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',X
               ROUTCDE=2
         L     R13,4(,R13)        RELOAD R13
         B     RETURN
BADLOAD  TPUT  BADLDMSG,25
NOAUTH   TPUT  MSGNO1,13
         B     FREERET2
FREEMERR TPUT  MSG2,33
         B     FREERET2
FREEERR2 TPUT  MSG1,33
         B     RETURN
ALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1
         SSAR  R1             SET SECONDARY TO OUR ASID
ADJUST   CLC   MTT,0(R11)     MTT HEADER
         BNE   NOTACTIV
         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER
         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE
         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT
         LA    R9,0(R9,R11)   CURRENT ENTRY
         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA
         L     R9,32(,R11)    FIRST ENTRY IN MTT
         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY
         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE
         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE
         L     R9,12(,R11)    LAST BYTE
         SR    R9,R8          GET DISPLACEMENT
         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE
         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE
         MVC   CURRLINE,MTTCLINE CURRENT LINE
DISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,CURRLINE    CURRENT LINE
         MVI   UPFLAG,X'00'
         MVI   WRAPFLAG,X'00'
         MVI   FOUNDFLG,X'00'
         MVC   BOTTOM,CURRLINE
DISPLOOP SR    R7,R7
         ICM   R7,B'0011',8(R6)  LOAD LENGTH
         BNP   FINDNEXT
         LA    R8,10(R7,R6)
         CLI   SEARCHON,X'FF'
         BE    DISPCHEK
         CLI   UPFLAG,X'FF'
         BNE   DISPSUB
DISPCHEK CLC   CURRLINE,MTTCLINE
         BNL   CHEKLINE
         C     R8,MTTCLINE
         BNL   ENDOFLST
CHEKLINE C     R6,MTTCLINE
         BNL   CHEKWRAP
         C     R8,MTTCLINE
         BNL   ENDOFLST
         B     DISPSUB
CHEKWRAP CLI   WRAPFLAG,X'FF'
         BE    WRITEIT
DISPSUB  CLI   SEARCHON,X'FF'
         BE    SEARCHLN
         S     R7,=F'51'      MINUS CONTROL STUFF
         BNP   FINDNEXT
DISPL    C     R7,SEVENTY9    > 80
         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA
         S     R7,EIGHTY
         LA    R1,112(R6,R7)  LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX01
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX01
         B     FINDNEXT
EX01     EX    R7,DISPMOV2
         S     R5,EIGHTY
         C     R5,FRSTLINE
         BNH   WRITEIT
         LA    R7,62          MAX LENGTH IS 80
MOVEDATA LA    R1,63(R6,R7)   LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX02
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX02
         B     FINDNEXT
EX02     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA
         MVC   10(9,R5),46(R6) SKIP CONTROL STUFF
         CLC   =CL2'40',34(R6)
         BE    SKIPTIM
         MVC   00(8,R5),35(R6) SKIP CONTROL STUFF
*        BAL   R2,SEARCHLN
SKIPTIM  S     R5,EIGHTY
         C     R5,FRSTLINE
         BNH   WRITEIT
*        CLI   UPFLAG,X'FF'
*        BE    UP
FINDNEXT ST    R6,CURRLINE
         BAL   R2,PREVLINE    GET NEXT     LINE
         B     DISPLOOP
DOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?
         BE    AUTHRIZE
         MVI   FOUNDFLG,X'00'
         BAL   R2,CLEARSCR    GET NEXT     LINE
         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN
         ST    R6,CURRLINE    CURRENT LINE
         ST    R6,TOP         CURRENT LINE
         MVI   DOWNFLAG,X'FF'
*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *
DOWNLOOP SR    R7,R7
         ICM   R7,B'0011',8(R6)  LOAD LENGTH
         BNP   FINDNXTD
         LA    R8,10(R7,R6)   NEXT LINE
         C     R8,MTTCLINE
         BNH   DOWNSUB
         C     R6,MTTCLINE
         BNL   DOWNSUB
         MVC   0(80,R5),CENDOFIT
         B     WRITEITD
DOWNSUB  S     R7,=F'51'      MINUS SIX
         BNP   FINDNXTD
         C     R7,SEVENTY9    > 80
         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA
         S     R7,EIGHTY
         LA    R1,112(R6,R7)  LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX03
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX03
         B     FINDNXTD
EX03     EX    R7,DISPMOV2
         LA    R7,62          MAX LENGTH IS 80
         A     R5,EIGHTY
         C     R5,LASTLINE
         BNL   WRITEITD
MOVEDOWN LA    R1,63(R6,R7)   LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX04
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX04
         B     FINDNXTD
EX04     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA
         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF
         CLC   =CL2'40',33(R6)
         BE    SKIPTIM2
         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF
*        BAL   R2,SEARCHLN
SKIPTIM2 A     R5,EIGHTY
         C     R5,LASTLINE
         BNL   WRITEITD
FINDNXTD ST    R6,CURRLINE
         BAL   R2,UPLINE      GET NEXT     LINE
         B     DOWNLOOP
UP       BAL   R2,UPLINE      PREVIOUS LINE
         B     DISPLOOP
SEARCHLN L     R10,ARGLENG
         LA    R15,15(,R6)    START OF LINE
         LR    R3,R7
         SR    R3,R10
         BNP   FINDNEXT
COMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT
         BE    FOUNDIT
         LA    R15,1(,R15)    NEXT BYTE
         LA    R1,0(R15,R10)
         C     R1,MTTLLINE
         BNL   FINDNEXT
         BCT   R3,COMPLOOP
         B     FINDNEXT
FOUNDIT  MVI   SEARCHON,X'00' RESET
         MVI   FOUNDFLG,X'FF'
         S     R7,=F'51'
         ST    R6,SEARCHTP
         ST    R6,CURRLINE
         ST    R6,BOTTOM
         B     DISPL
UPLINE   LA    R8,1           INCREMENT 0F 1
         L     R6,CURRLINE
         CLC   R6,MTTFLINE    ARE WE AT TOP
         BH    UPCONTIN       NO - SKIP
         L     R6,MTTLLINE
         S     R6,=F'05'
UPCONTIN LNR   R8,R8          DECREMENT OF -1
         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT
         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU
*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE
         BCTR  R6,0           SUBTRACT  1
UPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?
         BE    PREVFND        YES, BRANCH
         BCTR  R6,0           MINUS 1
         CR    R6,R9
         BNL   UPLOOP
*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *
*   VERY BOTTOM AND WORK BACKWARDS -                                 *
         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?
         BNE   WRITEITD       YES - BRANCH
         MVI   STARTFLG,X'FF' FLAG IT
         L     R6,MTTLLINE    ADDRESS OF LAST LINE
         S     R6,=F'05'      MINUS SIX
         L     R9,MTTCLINE
         B     UPLOOP         NOW FIND PREVIOUS
PREVLINE LA    R8,1           INCREMENT 0F 1
         L     R6,CURRLINE    ADDRESS OF CURRENT LINE
         LA    R6,1(,R6)      INCREMENT
         C     R6,MTTLLINE    LAST LINE?
         BL    PREVCONT       NO, BRANCH
         L     R6,MTTFLINE    START AT FIRST
         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED
PREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT
         S     R9,=F'06'      CBEGINLN LENGTH
         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US
         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU
PREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?
         BE    PREVFND        YES, BRANCH
         BXLE  R6,R8,PREVLOOP LOOP
*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *
*   VERY BOTTOM AND WORK BACKWARDS -                                 *
         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?
         BNE   WRITEIT        YES - BRANCH
         MVI   STARTFLG,X'FF' FLAG IT
         L     R6,MTTFLINE    ADDRESS OF FRST LINE
         B     PREVLOOP       NOW FIND PREVIOUS
PREVFND  BR    R2             RETURN
WRITEITD BAL   R2,TPUT        WRITE SCREEN
         ST    R6,BOTTOM      SAVE WHERE WE WERE
         B     TGET           GET NEXT INPUT FROM TERMINAL
WRITEIT  EQU   *
         BAL   R2,TPUT        WRITE SCREEN
         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE
TGET     MVC   WORKLINE,HEX40S
         MVI   SEARCHON,X'00' RESET SEARCH FLAG
         BAL   R2,CLEARSCR
         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,CURRLINE    CURRENT LINE
         MVI   UPFLAG,X'00'   RESET UP FLAG
         TGET  WORKLINE,70,ASIS
         CLI   WORKLINE,X'7D' PFK USED?
         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY
         NI    WORKLINE,X'0F'
         CLI   WORKLINE,X'01' PF-1?
         BE    HELPOUT        YES, DISPLAY HELP INFO
         CLI   WORKLINE,X'03' PF-3?
         BE    FREEAX         YES, END
         CLI   WORKLINE,X'05' SEARCH REPEAT
         BE    SEARCHRP
*        CLI   WORKLINE,X'06' SEARCH REPEAT
*        BE    ABEND
         CLI   WORKLINE,X'07' UP?
         BE    UPSET
         CLI   WORKLINE,X'08'
         BE    DOWN
         CLI   WORKLINE,X'09'
         BE    SETTOP
         CLI   WORKLINE,X'0A'
         BE    SETBOT
         CLI   WORKLINE,C'>'  MESSAGE INPUT
         BE    TGET
         B     AUTHRIZE
NOCMDS   BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN
         MVC   DETAIL+880(23),=C'COMMANDS NOT AUTHORIZED'
         BAL   R2,TPUT
         B     TGET
CHECKOUT OC    WORKLINE+6(74),HEX40S
         CLC   WORKLINE+6(4),HEX40S
         BE    AUTHRIZE
         MVC   CMDLINE,WORKLINE+6
         CLC   =C'T  ',CMDLINE  TOP
         BE    SETTOP
         CLC   CMDLINE(3),=C'TOP'
         BE    SETTOP
         CLC   =C'B  ',CMDLINE  TOP
         BE    SETBOT
         CLC   XFINDQ,CMDLINE  F '
         BE    FIND
         CLC   CFIND,CMDLINE  FIND
         BE    FIND
         CLC   CMDLINE(3),=C'BOT'
         BE    SETBOT
         CLC   CMDLINE(3),=C'END'
         BE    FREEAX
         CLC   =C'Z ',CMDLINE  TOP
         BE    FREEAX
         CLC   =C'X ',CMDLINE  TOP
         BE    FREEAX
         CLI   CMDFLAG,X'FF'
         BE    NOCMDS
         CLI   USERFLAG,X'FF'
         BNE   NOWTO
         MVC   WTOCMD(100),WTOLIST
         MVC   WTOCMD+8(72),CMDLINE
         MVC   WTOCMD+78(4),USERID
         LA    R7,WTOCMD
         WTL   MF=(E,(R7))
NOWTO    SLR   R0,0                    CLEAR REG 0
ISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND
         SVC   34                      ISSUE COMMAND
         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS
         MVC   CMDLINE,HEX40S
         B     AUTHRIZE
*    FIND OPERATION REQUESTED                                         *
FIND     EQU   *
         OC    WORKLINE+6(74),HEX40S      UPPER CASE
         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER
         MVC   ARGUMENT(74),HEX40S        CLEAR OUT
         LA    R8,1
         LA    R6,WORKLINE
         LA    R9,74(,R6)
         LA    R7,ARGUMENT
FINDQUOT CLI   0(R6),X'7D'
         BE    FOUNQUOT
         LA    R6,1(,R6)
         CR    R6,R9
         BL    FINDQUOT
         B     REENTER
FOUNQUOT LA    R6,1(,R6)
ARGLOOP  CLI   0(R6),X'7D'
         BE    ARGDONE
         MVC   0(1,R7),0(R6)
         LA    R7,1(,R7)
         BXLE  R6,R8,ARGLOOP
*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *
REENTER  BAL   R2,CLEARSCR
         MVC   DETAIL+418(43),CHELPLN7
         BAL   R2,TPUT
         B     TGET
*EARCH   B     FREERET
ENDOFLST MVC   0(80,R5),CENDOFIT
         CLI   SEARCHON,X'FF'
         BNE   WRITEIT
         MVC   24(09,R5),=C'NOT FOUND'
         MVI   FOUNDFLG,X'00'
         B     WRITEIT
SEARCHRP CLI   SRCHFLAG,X'FF'
         BNE   REENTER
         CLI   FOUNDFLG,X'FF'
         BNE   LOADCURR
         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP
LOADCURR L     R6,CURRLINE
         MVI   FOUNDFLG,X'00'
         BAL   R2,PREVLINE
         ST    R6,CURRLINE
         MVI   SEARCHON,X'FF'
         B     UPSET
ARGDONE  LA    R8,ARGUMENT
         BCTR  R7,0
         SR    R7,R8
         BNP   REENTER
         ST    R7,ARGLENG
         MVI   FOUNDFLG,X'00' NOT FOUND YET
         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT
         MVI   SEARCHON,X'FF' PLEASE SEARCH
         L     R6,BOTTOM
         B     SETBOT2
SETBOT   L     R6,MTTCLINE
SETBOT2  ST    R6,CURRLINE
         L     R5,LASTLINE
         B     DISPLOOP
SETTOP   L     R6,MTTCLINE
         ST    R6,CURRLINE
         BAL   R2,UPLINE
         ST    R6,CURRLINE
         BAL   R2,UPLINE
         ST    R6,BOTTOM
         B     DOWN
UPSET    MVI   UPFLAG,X'FF'
         CLI   DOWNFLAG,X'FF'
         BNE   UPSET2
         MVC   CURRLINE,TOP
         MVI   DOWNFLAG,X'00'
UPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,CURRLINE    WHERE WE LEFT OFF
         ST    R6,BOTTOM
         MVI   FOUNDFLG,X'00'
         B     DISPLOOP
COMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT
DISPMOVE MVC   18(0,R5),63(R6) SKIP CONTROL STUFF
DISPMOV2 MVC   0(0,R5),112(R6) SKIP CONTROL STUFF
TPUT     LA    R1,SCREEN
         L     R0,SCRTPUTL
         TPUT  (1),(0),FULLSCR
         BR    R2
HELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN
*        MVC   DETAIL+80(80),CHELPLN1
*        MVC   DETAIL+160(80),CHELPLN2
         MVC   DETAIL+400(80),CHELPLN3
         MVC   DETAIL+480(70),CHELPLN4
         MVC   DETAIL+640(39),CHELPLN5
         MVC   DETAIL+720(43),CHELPLN6
         MVC   DETAIL+880(43),CHELPLN7
         BAL   R2,TPUT
         B     TGET
NOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN
         MVC   DETAIL(16),=C'TRACE NOT ACTIVE'
         BAL   R2,TPUT
         STIMER WAIT,BINTVL=ONE
         L     R2,CPPLSAVE
         LINK  EP=ZTPR0200
         B     FREEAX
**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **
CLEARSCR LA    R6,DETAIL
         L     R7,SCRLENG
         SR    R9,R9
         ICM   R9,B'1001',HEX40S
         LA    R8,HEX40S
         MVCL  R6,R8
         BR    R2
TABLE    DC    CL4'MURF'          USERIDS VALID TO USE IT
         DC    CL4'XXXX'
TABLEND  DC    CL4'XXXX'          ROBERT CHAMBERLAIN
DSCREEN  DS    0C             DISPLAY SCREEN
         DC    X'03'          CONTROL
         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)
         DC    X'00115D7F1140403C404000' CLEAR SCREEN
         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *
                             PF-1 FOR HELP '
         DC    X'11'          SET BUFFER ADDRESS
         DC    X'F460'        (43,1)
*        DC    C'_'
         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD
         DC    X'13'          SET CURSOR ADDRESS
         DC    X'11'          SET BUFFER ADDRESS
         DC    X'F5E7'        (43,72)
         DC    X'1DF0'        TERMINATE INPUT FIELD
         DC    C' '           INDICATES MORE TO BE DISPLAYED
         DC    X'11'          SET BUFFER ADDRESS
         DC    X'C150'        (2,1)
*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)
DSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART
FOUR     DC    F'4'
BADLDMSG DC    CL25'ERROR LOADING IKJEFFUT  '
         DS    0F
AUTH     DC    CL4'AUTH'
MTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER
HEXFS    DC    XL4'FFFFFFFF'
HEXZIP   DC    XL4'00000000'
CMAINT   DC    XL5'1401091523'
COMMANDL DC    Y(76),Y(00)
ONE      DC    A(100)             1 SECOND
CBEGINLN DC    XL4'00000001'
EIGHTY   DC    F'080'             CONSTANT 80
SEVENTY9 DC    F'079'             CONSTANT 79
ANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'
MSGNO1   DC    CL13'SYSTEM ACTIVE'
MSGNO2   DC    CL6'NO APF'
MSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'
MSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'
XFINDQ   DC    XL3'C6407D'        HEX FOR F '
CFIND    DC    CL4'FIND'          CHARACTER FIND
CEND     DC    CL3'END'           CHARACTER END
CZ       DC    CL1'Z'             CHARACTER Z
PATTERN  DC    XL4'40202120'
AXLIST   DC    H'1'
         DC    H'0'
WTOLIST  WTL   '                                                       X
                                       ZTPR0200',MF=L
SUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO
PROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO
         LTORG
CENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **
               * * * * * * * * * * * * * * '
*HELPLN1 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*
               HE MASTER TRACE TABLE IN    '
*HELPLN2 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*
               E ACTIVE TO PAGE UP/DOWN.   '
CHELPLN3 DC    CL80'  PF-1  HELP            PF-3  END                PF*
               -5  REPEAT FIND   PF-7  UP  '
CHELPLN4 DC    CL70'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*
               -10 BOTTOM (NEWEST)'
CHELPLN5 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '
CHELPLN6 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '
CHELPLN7 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '
SAVDSECT DSECT
SAVEAREA DS    18F
DOUBLWD  DS    D
PARMWKAD DS    F
CPPLSAVE DS    F
         DS    0D
WORKLINE DS    CL80
HEX40S   DS    CL80
WTOCMD   DS    CL100
PARMWORK DS    CL44
USERID   DS    CL7
USERIDL  DS    XL1
USERATTR DS    XL1
STARTFLG DS    XL1
SRCHFLAG DS    XL1
USERFLAG DS    XL1
FREEFLAG DS    XL1
CMDFLAG  DS    XL1
FOUNDFLG DS    XL1
SEARCHON DS    XL1
UPFLAG   DS    XL1
WRAPFLAG DS    XL1
DOWNFLAG DS    XL1
MTTSIZE  DS    F              SIZE OF MTT
MTTADDR  DS    F              MTT ADDRESS IN MASTER ASID
BOTTOM   DS    F              BOTTOM    OF SCREEN
TOP      DS    F              TOP OF SCREEN
SEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH
CURRLINE DS    F              CURRENT LINE FOR US
FRSTLINE DS    F              FIRST LINE ON OUR DISPLAY
LASTLINE DS    F              LAST  LINE ON OUR DISPLAY
MTTFLINE DS    F              FIRST LINE IN OUR AREA
MTTLLINE DS    F              LAST  LINE IN OUR AREA
MTTCLINE DS    F              CURRENT LINE IN OUR AREA
SCRLENG  DS    F
SCRTPUTL DS    F
ARGLENG  DS    F
ARGUMENT DS    CL74
COMMAND  DS    F
CMDLINE  DS    CL72
SCREEN   DS    0CL108
         DS    XL1            CONTROL
DSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)
         DS    XL11
         DS    CL80
         DS    XL1            SET BUFFER ADDRESS
DSCRO3   DS    XL2            (43,1)
*        DS    XL1
         DS    XL2            MARK NEXT FIELD AS INPUT FIELD
         DS    XL1            SET CURSOR ADDRESS
         DS    XL1            SET BUFFER ADDRESS
DSCRO4   DS    XL2
         DS    XL2            TERMINATE INPUT FIELD
         DS    XL2            SET BUFFER ADDRESS
DSCRO5   DS    XL2
DETAIL   DS    43CL80
WORKL    EQU   *-SAVEAREA
         CVT   DSECT=YES
         IEZJSCB
         IKJTCB DSECT=YES
         IEEBASEA
         IEECHAIN
         IKJPSCB
         IKJCPPL
         IKJUPT
         END
