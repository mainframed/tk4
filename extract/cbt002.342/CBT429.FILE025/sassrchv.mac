//TDBJ   JOB   (6496,B015),'TECH - TDB ',CLASS=T,MSGCLASS=T,
// MSGLEVEL=(2,0),NOTIFY=TDBF
//*********************************************************************
//*                                                                   *
//******************************************************************* *
//*                                                                 * *
//*            D I S C L A I M E R    S E C T I O N                 * *
//*                                                                 * *
//******************************************************************* *
//*                                                                 * *
//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   * *
//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        * *
//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND * *
//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR * *
//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              * *
//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL * *
//* SUPPLIED .                                                      * *
//*                                                                 * *
//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE * *
//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS * *
//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE * *
//* FUTURE .                                                        * *
//*                                                                 * *
//******************************************************************* *
//*                                                                   *
//*                                                                   *
//*  THIS SAS CODE WRITTEN BY TOM BURNS AT TEXAS UTILITIES SERVICES   *
//*  TO REPORT ON WHO WAS ACCESSING DELETING VSAM DATASETS.  IT NEEDS *
//*  SOME OF THE TYPE 60 RECORDS TO BE CUT BY SMF.  WE ARE ON ICF,    *
//*  BUT IT USED TO WORK WHEN WE HAD SOME VSAM CATALOGS ALSO.         *
//*                                                                   *
//*  INSTRUCTIONS:                                                    *
//*                                                                   *
//*  1.  CHANGE THE DSNAMES DD INPUT TO THE DATA AND INDEX NAMES IN   *
//*      QUESTION.  THE CLUSTER NAME DOES NOT SHOW UP IN THESE RECORDS*
//*                                                                   *
//*  2.  CHANGE THE SMF INPUT DSN IN THE SMFTAPE DD TO THE SMF INPUT  *
//*      DATASET FOR YOUR INSTALLATION.                               *
//*                                                                   *
//*                                                                   *
//*********************************************************************
//DSLIST   EXEC SAS,REGION=1024K,
// COPIES=1,SORT=99,OPTIONS='NOSTIMER,S=72'
//WORK      DD  UNIT=SYSDA,SPACE=(CYL,(250,200))
//FT11F001  DD  SYSOUT=*
//SMFTAPE  DD DSN=TUSS.SM.PNDSYSA.SMFRECS.DAILY(0),
//            DISP=(OLD,KEEP)
//         DD DSN=TUSS.SM.PNDSYSB.SMFRECS.DAILY(0),
//            DISP=(OLD,KEEP),UNIT=AFF=SMFTAPE
//DSNAMES   DD  *
RECISV.DATA.RECEIVE.TRANS
OLCISV.DATA.RECEIVE.TRANS
RECISV.INDEX.RECEIVE.TRANS
OLCISV.INDEX.RECEIVE.TRANS
//SYSIN     DD  *
COMMENT
        THIS JOB SUMMARIZES USES OF VSAM DATASETS BY JOBS
WRITTEN BY TOM BURNS AT TEXAS UTILITIES  ;
OPTIONS NOMACROGEN NOSYMBOLGEN
SYSPARM='STARTDATE=02/01/88,STARTTIME=00:00:00,
ENDDATE=12/31/99,ENDTIME=23:59:59';
%MACRO CONVTIME(TIMEIN);
   %* <TIMEIN> MUST BE IN .01 SECOND UNITS;
   %LOCAL HOURS MINUTES SECONDS;
   %LET HOURS=INT(&TIMEIN/360000);
   %LET MINUTES=INT(MOD(&TIMEIN,360000)/6000);
   %LET SECONDS=INT(MOD(&TIMEIN,6000)/100);
   %STR( HMS(&HOURS,&MINUTES,&SECONDS)+MOD(&TIMEIN,100)/100 )
   %MEND CONVTIME;
%MACRO DSNCULL(INPUT,OUTPUT);
   %LOCAL RDINPUT RDDSN WRTUSES;
   %LET RDINPUT=RDINP&SYSINDEX;
   %LET RDDSN=RDDSN&SYSINDEX;
   %LET WRTUSES=WRT&SYSINDEX;
   IF _N_=1 THEN DO;
      LINK &RDINPUT;
      LINK &RDDSN;
      END;
   IF REQDSN<DSN THEN DO;
      LINK &RDDSN;
      RETURN;
      END;
   IF REQDSN=DSN THEN GOTO &WRTUSES;
   IF REQDSN>DSN THEN DO;
      LINK &RDINPUT;
      RETURN;
      END;
 &WRTUSES: OUTPUT &OUTPUT; LINK &RDINPUT; RETURN;
 &RDINPUT: SET &INPUT; RETURN;
 &RDDSN: SET DSNAMES; RETURN;
   %MEND DSNCULL;
DATA DSNAMES;
   INFILE DSNAMES CLOSE=FREE;
   LABEL  REQDSN = DSNAME;
   FORMAT REQDSN     $44.;
   INPUT REQDSN : $44.;
   OUTPUT DSNAMES;
   RETURN;
DATA
 VSAMACT (KEEP = RDRDATE JNAM RECDATE RECTIME DSN USERID TYPE
                 ERRE TRKREQ SMF64DIL SMF64DEX SMF64DLR SMF64DDE
                 SMF64DIN  SMF64DUP SMF64DRE SMF64DFS SMF64DCS
                 SMF64DAS  SMF64DEP SMF64DBS SMF64DCI SMF64DLS
                 SMF64DKL  SMF64DDN)
 VSAMREN (KEEP = RDRDATE JNAM RECDATE RECTIME DSN USERID NDSN)
 VSAMSCR (KEEP = RDRDATE JNAM RECDATE RECTIME DSN TYPE USERID);
   LABEL  JNAM    = JOBNAME
          TYPE    = TYPE
          RECDATE = DATE
          RECTIME = TIME
          RDRDATE = READER DATE
          USERID  = USERID
          NDSN    = NEW DSNAME;
   FORMAT JNAM                $8.
          TYPE                $8.
          RECDATE        MMDDYY8.
          RECTIME          TIME8.
          RDRDATE     DATETIME16.
          USERID              $8.
          NDSN               $44.;
   INFILE SMFTAPE MISSOVER JFCB=JFCBMANX CLOSE=FREE;
   IF _N_=1 THEN DO;
      IF SUBSTR(JFCBMANX,100,1)='....1...'B
         THEN SMFCOL1=5;
      ELSE SMFCOL1=1;
OPTIONS NOSOURCE;* SKIP LISTING OF SYSPARM SCAN;
      FOUND=1; NPARM=1;
      STRTDATE=0; STRTTIME=0; ENDDATE=0; ENDTIME=0;
      DO WHILE(FOUND);
         FOUND=0;
         IF 'STARTDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;
            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');
            IF WORD='TODAY' THEN STRTDATE=TODAY();
            ELSE STRTDATE=INPUT(WORD,MMDDYY8.);
            FOUND=1;
            END;
         IF 'STARTTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;
            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');
            IF WORD='NOW' THEN STRTTIME=HMS(HOUR(DATETIME()),0,0);
            ELSE STRTTIME=INPUT(WORD,TIME8.);
            FOUND=1;
            END;
         IF 'ENDDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;
            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');
            IF WORD='TODAY' THEN ENDDATE=TODAY();
            ELSE ENDDATE=INPUT(WORD,MMDDYY8.);
            FOUND=1;
            END;
         IF 'ENDTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;
            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');
            IF WORD='NOW' THEN ENDTIME=HMS(1+HOUR(DATETIME()),0,0);
            ELSE ENDTIME=INPUT(WORD,TIME8.);
            FOUND=1;
            END;
         NPARM=NPARM+2;
         END;
      IF ENDDATE=0 THEN ENDDATE=MDY(12,31,99);
      IF ENDTIME=0 THEN ENDTIME=HMS(23,59,59);
OPTIONS SOURCE;
      RETAIN SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME
      TRKREQ ERRE SMF64ESL SMF64DIL SMF64DEX SMF64DLR SMF64DDE SMF64DIN
      SMF64DUP SMF64DRE SMF64DFS SMF64DCS SMF64DAS SMF64DEP SMF64DBS
      SMF64DCI SMF64DLS SMF64DKL SMF64DDN;
      END;
   INPUT @SMFCOL1    SMFEOF   :      $12.
         @SMFCOL1+ 1 ID             PIB1.@;
   IF SMFEOF='SMFEOFMARK' THEN STOP; * END OF FILE ON INPUT;
   IF ID<60 OR 69<ID THEN RETURN;
   ELSE INPUT @SMFCOL1+  2 SMFTIME       PIB4.
              @SMFCOL1+  6 SMFDATE        PD4.@;
   IF ID=60×ID=61×ID=65×ID=66 THEN
      INPUT @SMFCOL1+ 46 JNAM            $8.
            @SMFCOL1+ 54 RDRDATE  SMFSTAMP8.
            @SMFCOL1+ 62 USERID          $8.@;
   IF (62<=ID & ID<=64) × (67<=ID & ID<=69) THEN
      INPUT @SMFCOL1+ 14 JNAM            $8.
            @SMFCOL1+ 22 RDRDATE  SMFSTAMP8.
            @SMFCOL1+ 30 USERID          $8.@;
   RECDATE=DATEJUL(SMFDATE);
   RECTIME=%CONVTIME(SMFTIME);
   IF ID=62 THEN DO;* COMPONENT/CLUSTER OPEN;
      IF RECDATE<STRTDATE THEN RETURN;
      IF RECDATE>ENDDATE THEN RETURN;
      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;
      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;
      INPUT @SMFCOL1+ 38 SMF62IND  PIB1.
            @SMFCOL1+ 92 DSN      : $44.@;
      TYPE = 'OPEN' ;
      OUTPUT VSAMACT;
      END;
   IF ID=64 THEN DO;* CLOSE INPUT/OUTPUT DATASET;
      IF RECDATE<STRTDATE THEN RETURN;
      IF RECDATE>ENDDATE THEN RETURN;
      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;
      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;
      INPUT @SMFCOL1+ 38 SMF64RIN  PIB1.
            @SMFCOL1+ 39 SMF64DTY  PIB1.
            @SMFCOL1+ 84 DSN      : $44.
            @SMFCOL1+128 TRKREQ    PIB2.
            @SMFCOL1+134 SMF64ESL  PIB2.@;
      TYPE='CLUSTER ';
      IF SMF64RIN='..1.....'B THEN ERRE='NO SPACE';
      IF SMF64RIN='.....1..'B THEN ERRE='ABENDPRO';
      IF SMF64DTY='1.......'B THEN TYPE='DATA    ';
      IF SMF64DTY='.1......'B THEN TYPE='INDEX   ';
      INPUT @SMFCOL1+48+136+SMF64ESL SMF64DIL PIB4.
                                 SMF64DEX PIB4.
                                 SMF64DLR PIB4.
                                 SMF64DDE PIB4.
                                 SMF64DIN PIB4.
                                 SMF64DUP PIB4.
                                 SMF64DRE PIB4.
                                 SMF64DFS PIB4.
                                 SMF64DCS PIB4.
                                 SMF64DAS PIB4.
                                 SMF64DEP PIB4.
                                 SMF64DBS PIB4.
                                 SMF64DCI PIB4.
                                 SMF64DLS PIB4.
                                 SMF64DKL PIB4.
                                 SMF64DDN $8.@;
*PUT DSN= TYPE=;
      OFFSET=SMFCOL1+SMF64ESL+136;
      INPUT @OFFSET+60 SMF64DDE PIB4.
            @OFFSET+64 SMF64DIN PIB4.
            @OFFSET+68 SMF64DUP PIB4.@;
      INPUT @OFFSET+106 SMF64DDN $8.@;
      TYPE = 'CLOSE' ;
      OUTPUT VSAMACT;
      END;
   IF ID=67 THEN DO;* VSAM DATASET DELETE;
      IF RECDATE<STRTDATE THEN RETURN;
      IF RECDATE>ENDDATE THEN RETURN;
      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;
      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;
      INPUT @SMFCOL1+39 SMF67IOD PIB1.
            @SMFCOL1+84 DSN     : $44.@;
      IF SMF67IOD='0000....'B THEN RETURN;
      IF SMF67IOD='1.......'B THEN TYPE='CLUSTER ';
      IF SMF67IOD='.1......'B THEN TYPE='DATA    ';
      IF SMF67IOD='..1.....'B THEN TYPE='INDEX   ';
      IF SMF67IOD='...1....'B THEN TYPE='CATALOG ';
      IF SMF67IOD='....1...'B THEN TYPE='NON-VSAM';
      IF SMF67IOD='.....1..'B THEN TYPE='GDG     ';
      IF SMF67IOD='......1.'B THEN TYPE='ALIAS   ';
      IF SMF67IOD='.......1'B THEN TYPE='*RESERV*';
      OUTPUT VSAMSCR;
      END;
   IF ID=68 THEN DO;* VSAM DATASET RENAME;
      IF RECDATE<STRTDATE THEN RETURN;
      IF RECDATE>ENDDATE THEN RETURN;
      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;
      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;
      INPUT @SMFCOL1+ 82 DSN    : $44.
            @SMFCOL1+126 NDSN   : $44.@;
      OUTPUT VSAMREN;
      END;
   INPUT;
   RETURN;
PROC SORT DATA=DSNAMES OUT=DSNAMES; BY REQDSN;
PROC SORT DATA=VSAMACT OUT=VSAMACT; BY DSN;
DATA ACTIVITY(KEEP= DSN JNAM RECDATE RECTIME
                 SMF64DEX SMF64DLR SMF64DDE
                 SMF64DIN  SMF64DUP SMF64DRE);
   * CULL DATA TO ONLY REQUESTED DATASETS;
   FORMAT DSN    $20.
          REQDSN $20.;
   %DSNCULL(VSAMACT,ACTIVITY);
PROC SORT DATA=ACTIVITY OUT=ACTIVITY;
   BY RECDATE RECTIME;
PROC PRINT DATA=ACTIVITY UNIFORM LABEL;
   ID DSN;
*  VAR JNAM USERID RECDATE RECTIME TYPE;
   TITLE 'VSAM DATASET USAGE';
PROC SORT DATA=VSAMREN OUT=VSAMREN; BY DSN;
DATA RENAMES(KEEP= DSN JNAM RECDATE RECTIME RDRDATE USERID NDSN);
   * CULL DATA TO ONLY REQUESTED DATASETS;
   FORMAT DSN    $44.
          REQDSN $44.;
   %DSNCULL(VSAMREN,RENAMES);
PROC SORT DATA=RENAMES OUT=RENAMES;
   BY RECDATE RECTIME;
PROC PRINT DATA=RENAMES UNIFORM LABEL;
   ID DSN;
   VAR JNAM USERID RECDATE RECTIME NDSN;
   TITLE 'VSAM DATASET RENAMES';
PROC SORT DATA=VSAMSCR OUT=VSAMSCR; BY DSN;
DATA SCRATCH(KEEP= DSN JNAM RECDATE RECTIME RDRDATE USERID TYPE);
   * CULL DATA TO ONLY REQUESTED DATASETS;
   FORMAT DSN    $44.
          REQDSN $44.;
   %DSNCULL(VSAMSCR,SCRATCH);
PROC SORT DATA=SCRATCH OUT=SCRATCH;
   BY RECDATE RECTIME;
PROC PRINT DATA=SCRATCH UNIFORM LABEL;
   ID DSN;
   VAR JNAM USERID TYPE RECDATE RECTIME;
   TITLE 'VSAM DATASET SCRATCHES';
