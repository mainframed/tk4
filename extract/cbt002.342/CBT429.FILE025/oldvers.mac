./ ADD NAME=$$$$DOCO 0100-93082-93082-1928-00006-00006-00000-OLDVERS

  THIS MATERIAL IS THE ESA 3.1.3 VERSION OF THE CONSOLE PROGRAMS.
  IT IS INCLUDED HERE FOR THOSE WITH OLDER SYSTEMS, IF FOR SOME
  REASON THE NEWER STUFF DOESN'T WORK FOR THEM.
         S.GOLOB - 212-206-5847   OR  908-901-0943

./ ADD NAME=CONESA   0100-93082-93082-1928-00894-00894-00000-OLDVERS
         TITLE 'CONSOLE DISPLAY'
*******************************************************************
*                                                                 *
*            D I S C L A I M E R    C O M M E N T                 *
*                                                                 *
*******************************************************************
*                                                                 *
* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *
* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *
* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *
* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *
* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *
* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *
* SUPPLIED .                                                      *
*                                                                 *
* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *
* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *
* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *
* FUTURE .                                                        *
*                                                                 *
*******************************************************************
***********************************************************************
*                                                                     *
*                                                                     *
*                                                                     *
*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *
*        TO PRESENT A CONSOLE APPEARANCE.                             *
*                                                                     *
*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *
*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *
*        PROCESSOR HIGHLIGHTING THE HIGHLIGHTED MESSAGES - P.MURPHY   *
*                                                                     *
*                                                                     *
***********************************************************************
ZTPR0200 CSECT
         BEGIN PROGRAM=ZTPR0200
         LR    R12,R15
         USING ZTPR0200,R12
         LR    R2,R1
         GETMAIN R,LV=WORKLENG
         LR    R3,R1
         ST    R13,4(R3)      SAVE THE CALLER'S R13
         ST    R3,8(,R13)
         LR    R13,R3
         USING WORKAREA,R13
         ST    R2,SAVECPPL
         USING CPPL,R2
         L     R6,CPPLPSCB
         DROP  R2
         USING PSCB,R6
* IF YOU HAVE OPER AUTHORITY - YOU ARE  AUTHORIZED.  IF NOT, THEN YOU *
* NEED TO BE IN THE TABLE IN THIS PROGRAM TO USE IT.  ISSUES A WTL    *
* WHEN USERFLAG IS SET TO X'FF'.                                      *
         MVC   USERID,PSCBUSER
         TM    PSCBATR1,PSCBCTRL
         BZ    NOAUTH
         DROP  R6
         MVI   USERFLAG,X'00'
         B     NOTUSER
USEROK   MVI   USERFLAG,X'FF'
NOTUSER  MVI   AUTOFLAG,X'00' AUTO MODE FLAG
         MVI   BLANKS,X'40'
         MVC   BLANKS+1(79),BLANKS
         MVI   CNSLFLAG,X'00'
         MVI   THRUFLAG,X'00'
         MVI   ISSUFLAG,X'00'
         MVC   CMDLINE,BLANKS
         MVI   RESHOWFL,X'00' RESHOW INDICATOR
         MVI   MOD5FLAG,X'00' FLAG FOR MOD 5
         MVI   SCREEN,X'03' WCC
         MVC   CLEAR(17),CLR CLEAR SCREEN CONTROL CHARS
         GTSIZE
         LTR   R0,R0              DISPLAY DEVICE?
         BZ    FREESKIP           YES, GO FREE AND RETURN
         CH    R1,EIGHTY          80 CHAR LINES
         BNE   CHEKM5             NO, SET MODE 2
         CH    R0,FORTY3          MOD 4?
         BE    SETM4              YES, BRANCH
         CH    R0,THIRTY2         MOD 3?
         BE    SETM3              YES, BRANCH
SETM2    TPUT  MOD2,3
         TGET  REPLY,50
*        MVI   CLEAR,X'7E'
*        LTR   R15,R15            ZERO RET CODE
*        BNZ   FREESKIP           NO, RETURN
         LA    R3,24              22 LINES PER SCREEN
         MVC   CURSOR,=X'5CF0'    ROW 24 COL 2
         MVC   ENDOFSCR,=X'5D7F'    ROW 24 COL 80
         MVC   TPUTLEN,=AL4(24*84+1) LENGTH OF TPUT
         B     PROCESS
CHEKM5   CH    R0,=H'27'          27 LINES?
         BNE   SETM2
         CH    R1,=H'132'         132 WIDTH?
         BNE   SETM2
SETM5    LA    R3,27              27 LINES PER SCREEN
*        MVI   CLEAR,X'7E'
         MVI   MOD5FLAG,X'FF'
         MVC   TPUTLEN,=AL4(27*84+1) LENGTH OF TPUT
         MVC   ENDOFSCR,=X'F76B'  ROW 27 COL 132
         MVC   CURSOR,=X'F5E8'    ROW 27 COL 2 IC
         B     PROCESS
SETM3    LA    R3,32              22 LINES PER SCREEN
         MVC   TPUTLEN,=AL4(32*84+1) LENGTH OF TPUT
         MVC   ENDOFSCR,=X'E77E'  ROW 32 COL 80
         MVC   CURSOR,=X'E6F0'    ROW 32 COL 2 IC
         B     PROCESS
SETM4    LA    R3,43              22 LINES PER SCREEN
         MVC   TPUTLEN,=AL4(43*84+1) LENGTH OF TPUT
PROCESS  ST    R3,NUMLINES
         MVI   HELPFLAG,X'00'
         MVI   CMDFLAG,X'00'
         LA    R1,16
         L     R1,0(R1)
         USING CVT,R1
         L     R1,CVTASVT
         DROP  R1
         USING ASVT,R1
         L     R5,ASVTMAXU
         LA    R15,ASVTENTY-4
ASVTLOOP BCTR  R5,0
         LTR   R5,R5
         BZ    CONABEND
         LA    R15,4(,R15)
         ICM   R6,15,0(R15)
         BM    ASVTLOOP
         USING ASCB,R6
         ICM   R7,15,ASCBJBNS
         BZ    ASVTLOOP
         CLC   =C'CONSOLE',0(R7)
         BNE   ASVTLOOP
         SR    R1,R1
         LH    R1,ASCBASID
         DROP  R1,R6
*        TM    CVTDCB,CVTMVSE
*        BZ    LOAD5
*        DROP  R1
*        LA    R1,7
STORECON ST    R1,CONSASID
         BAL   R3,AUTHRIZ
         AXRES AXLIST=AXLIST      RESERVE AN AX
         L     R1,CONSASID        'CONSOLE' ASID
         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0
         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE
         BAL   R3,UNAUTH
         B     SHOWCONS
AXFREE   BAL   R3,AUTHRIZ
         AXFRE AXLIST=AXLIST
         BAL   R3,UNAUTH
SHOWRTRN DS    0H
FREESKIP LR    R3,R13
         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13
         FREEMAIN RC,A=(3),LV=WORKLENG
         SR    R15,R15
         RETURN (14,12),RC=(15)
SHOWCONS DS    0H
         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON
         TPUT  CLEAR,17,FULLSCR
*---------------------------------------------------------------------*
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *
*---------------------------------------------------------------------*
BLDUCMS  L     R4,16              R4 = ADDR OF CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4
         USING UCM,R4
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB
         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB
         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)
UCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB
         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)
         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMDONE            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BL    UCMLOOP            NOPE; KEEP GOING
UCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND
         CLI   CNSLFLAG,X'FF'
         BNE   SETMAST
         MVC   OLDCONS,CONSOLE
         L     R4,CONSOLE
         LA    R4,1(,R4)
         B     MASTSCAN
         DROP  R4
*---------------------------------------------------------------------*
*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *
*        CONSOLE WHEN ENTERING THE "JESOPER" COMMAND.                 *
*---------------------------------------------------------------------*
SETMAST  SR    R4,R4
         ST    R4,CONSOLE
MASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE
CKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   MASTCONT           NO, CONTINUE
         CLI   CNSLFLAG,X'FF'
         BNE   CONABEND
         CLI   THRUFLAG,X'FF'
         BE    CONABEND
         MVI   THRUFLAG,X'FF'
         SR    R4,R4              START W/ FIRST ENTRY
         B     MASTCONT
CONABEND ABEND 1
MASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX
         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT
         L     R5,0(0,R5)         SET POINTER TO UCM
         LTR   R5,R5
         BZ    NEXT
         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM
         CLI   CNSLFLAG,X'FF'
         BE    SKIPMSTR
         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?
         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..
         B     NEXT
SKIPMSTR TM    UCMDISP1,UCMDISPC  GRAPHICS
         BZ    NEXT
ACTIVCHK TM    UCMATR,UCMUF       ACTIVE?
         BNZ   MASTFND
NEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE
         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE
         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP
MASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE
         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)
         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW
NEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         ICM   R4,15,CONSOLE      R4 = CONSOLE TO BE DISPLAYED
         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   GETUCM             NO, CONTINUE
RESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE
         ST    R4,CONSOLE         AND SAVE IT
GETUCM   SLL   R4,2               MULTIPLY BY 4
         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM
         L     R5,0(0,R5)         R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         ST    R6,UCMTABX
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS           YES
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
WRTERR4  DS    0H
         B     RESETCN            RESET THE CONSOLE NUMBER
GRAPHICS EQU   *
AUTHDONE EQU   *
         MVC   OLDCONS,CONSOLE
         MVC   HEADING,HEADING1
         CLI   ISSUFLAG,X'FF'
         BNE   CONSINIT
         MVC   HEADING+45(18),NOTISSUD
         MVI   ISSUFLAG,X'00'
CONSINIT MVI   CNSLFLAG,X'00'
         BAL   R3,AUTHRIZ
         L     R1,CONSASID        'CONSOLE' ASID IS 5 370/ 6 XA
         SSAR  R1                 SET 'CONSOLE' AS SECONDARY
         PRINT ON,GEN
         SLR   R0,R0              SECONDARY KEY
         L     R6,UCMTABX
         LA    R1,4               TRUE LENGTH
         MVCP  RDCM(R1),0(R6),R0
         L     R7,RDCM
         USING STRTDCM,R7
         LA    R1,L'LASTLINE      TRUE LENGTH
         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0
         LA    R1,L'SIBPTR
         SLR   R0,R0              SET STORAGE KEY
         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB
         LA    R1,2
         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL
         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME
         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0       RTME
         LA    R1,4
         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0
         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE
         L     R5,CONL
         SR    R4,R4
         SR    R5,R8
         LA    R5,84(,R5)
         ST    R5,CONL            SAVE IT
         LA    R4,SCREEN          MY BUF
         LA    R4,3737(,R4)
         LR    R9,R5              BUFFER LEN
MOVEBUFF DS    0H
         SH    R8,=H'6'
         SLR   R0,R0             RESET THE KEY
MVCPLOOP DS    0H
         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER
         BZ    GOTITALL
         AL    R8,=F'256'        MAX LEN ALLOWED
         AL    R4,=F'256'        MAX LEN ALLOWED
         SL    R5,=F'256'        MAX LEN ALLOWED
         B     MVCPLOOP
*---------------------------------------------------------------------*
*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *
*        SECONDARY ADDRSPC MUST BE THE SAME                           *
*---------------------------------------------------------------------*
GOTITALL DS    0H
         EPAR  R1                EXTRACT PRIMARY ASN
         SSAR  R1
         BAL   R3,UNAUTH
         DROP  R5,R7
         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF
         LA    R3,3737(,R3)
         LA    R9,HEADING+10
         CLI   HEADING+9,C' '
         BNE   RDMODE
         LA    R9,HEADING+9
RDMODE   MVC   0(6,R9),RTMEC
         SR    R5,R5
         LH    R5,RTME
         CVD   R5,DOUBLWD
         MVC   WORKLINE(5),PATTERN1
         ED    WORKLINE(5),DOUBLWD+5
         MVC   6(3,R9),WORKLINE+2
         MVC   09(6,R9),RNUMC
         SR    R5,R5
         IC    R5,RNUM+1
         CVD   R5,DOUBLWD
         MVC   WORKLINE(5),PATTERN1
         ED    WORKLINE(5),DOUBLWD+5
         MVC   15(3,R9),WORKLINE+2
         TIME  DEC
         ST    R0,WORK
         MVI   WORK+3,X'0C'
         UNPK  DOUBLWD(7),WORK(4)
         LA    R9,HEADING+36
         MVC   0(2,R9),DOUBLWD
         MVC   3(2,R9),DOUBLWD+2
         MVC   6(2,R9),DOUBLWD+4
FIRSTL   L     R9,NUMLINES       NUMBER OF LINES ON PROG TERMINAL
         L     R5,CONL
         SR    R4,R4
         LA    R1,90
         DR    R4,R1
         LA    R5,2(,R5)
         ST    R5,CONL
         CR    R9,R5
         BNL   FIRSTL1
         SR    R5,R9
         L     R1,CONL
         SR    R4,R4
         LA    R5,2(,R5)
         SR    R1,R5
         ST    R1,CONL
         LA    R1,90
         MR    R4,R1
         LA    R3,0(R5,R3)
FIRSTL1  LA    R5,SCREEN+1            ADDRESS OF FIRST LINE
         LA    R6,PAGEDEF             LINES TO BE DISPLAYED
         CLI   MOD5FLAG,X'FF'         MOD 5?
         BNE   NOTMOD5
         LA    R6,PAGEDEF5
NOTMOD5  L     R1,CONL
         SR    R9,R1
         SR    R10,R10
         BCTR  R9,0                   MINUS ONE
         MVC   0(5,R5),0(R6)          CONTROL CHAR
         MVC   5(79,R5),HEADING       HEADING
         SR    R15,R15
         IC    R15,CONSOLE+3
         SRL   R15,4                  ONLY WANT LEFT BYTE
         C     R15,TEN
         BL    NUMERIC1
         O     R15,CHAROR
         B     SECONDCK
NUMERIC1 O     R15,NUMBEROR
SECONDCK STC   R15,78(R5)
         IC    R15,CONSOLE+3
         SLL   R15,28                 ONLY WANT LEFT BYTE
         SRL   R15,28
         C     R15,TEN
         BL    NUMERIC2
         O     R15,CHAROR
         B     STORECHR
NUMERIC2 O     R15,NUMBEROR
STORECHR STC   R15,79(R5)
         LA    R5,84(,R5)             INCREMENT
         LA    R10,85(,R10)
         LA    R6,5(,R6)              INCREMENT
         BCTR  R1,0
         CLI   HELPFLAG,X'FF'         HELP?
         BNE   MOVESTUP
         L     R9,NUMLINES
         S     R9,=F'07'
         MVC   0(5,R5),0(R6)
         MVC   5(79,R5),BLANKS
         LA    R5,84(,R5)             INCREMENT
         LA    R6,05(,R6)             INCREMENT
         MVC   0(5,R5),0(R6)
         LA    R1,HEADING1
         MVC   5(79,R5),80(R1)
         LA    R5,84(,R5)             INCREMENT
         LA    R6,5(,R6)              INCREMENT
         MVC   0(5,R5),0(R6)
         LA    R1,80(,R1)
         MVC   5(79,R5),80(R1)
         LA    R5,84(,R5)             INCREMENT
         LA    R6,5(,R6)              INCREMENT
         MVC   0(5,R5),0(R6)
         MVC   5(79,R5),160(R1)
         LA    R5,84(,R5)             INCREMENT
         LA    R6,5(,R6)              INCREMENT
         MVC   0(5,R5),0(R6)
         MVC   5(79,R5),240(R1)
         LA    R5,84(,R5)             INCREMENT
         LA    R6,5(,R6)              INCREMENT
         LA    R10,420(,R10)
         B     SPACLOOP
MOVESTUP LR    R15,R5
*        MVC   0(4,R5),0(R6)          LINE ADDRESS
*        MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE
*        B     MVIT2
MOVELOOP CLI   CLRFLAG,X'FF'
         BE    MVIT
         CLC   5(74,R15),9(R3)        HAS THIS LINE CHANGED?
         BNE   MVIT
         CLC   4(1,R15),0(R3)         ATTRIBUTE BYTE CHANGED?
         BE    SKPMV                  NO NEED SENDING DOWN THE LINE
MVIT     MVC   0(4,R5),0(R6)          LINE ADDRESS
         MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE
         MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN
MVIT2    MVC   5(79,R5),9(R3)         MOVE LINE OF PRINT
         MVC   80(4,R5),BLANKS
         LA    R5,84(,R5)
         LA    R10,84(,R10)
SKPMV    LA    R6,05(,R6)             INCREMENT
         LA    R3,90(,R3)             INCREMENT
*        LA    R3,6(,R3)              INCREMENT
         LA    R15,84(,R15)
*        AP    HEADING(2),HEADING(2)
         BCT   R1,MOVELOOP            LOOP
         MVI   CLRFLAG,X'00'
SPACLOOP LA    R6,05(,R6)             INCREMENT
         BCTR  R9,0
         C     R9,=F'0'
         BH    SPACLOOP
         MVC   0(5,R5),0(R6)          LINE ADDRESS
         MVI   4(R5),X'C9'            ATTRIBUTE
         MVI   5(R5),X'13'            INSERT CURSOR
         CLI   HELPFLAG,X'FF'
         BE    GOAHEAD2
         CLI   IPLFLAG,X'FF'
         BE    GOAHEAD2
         CLI   AUTOFLAG,X'FF'
         BE    AUTOROLL
GOAHEAD  CLI   RESHOWFL,X'FF'
         BNE   GOAHEAD2
         MVI   RESHOWFL,X'00'
         MVC   6(72,R5),CMDLINE+4
         B     GOAHEAD3
GOAHEAD2 MVC   6(79,R5),BLANKS        LAST LINE IS INPUT LINE
GOAHEAD3 MVI   CMDFLAG,X'00'
         LA    R10,84(,R10)
         LR    R0,R10
         LA    R1,SCREEN              ADDRESS OF SCREEN
         TPUT  (1),(0),FULLSCR        TPUT
         MVC   REPLY,BLANKS           CLEAR
TGET1    TGET  REPLY,84,ASIS,WAIT     INPUT
         MVI   HELPFLAG,X'00'
         B     CHEKOUT
AUTOROLL EQU   *
         LA    R1,SCREEN              ADDRESS OF SCREEN
         CLI   RESHOWFL,X'FF'
         BNE   GOAHEAD5
         MVI   RESHOWFL,X'00'
         MVC   6(72,R5),CMDLINE+4
         MVC   REPLY,BLANKS
         LA    R10,72(,R10)
         B     GOAHEAD5
GOAHEAD5 CLI   CMDFLAG,X'FF'
         BNE   AUTOTPUT
         MVC   0(5,R5),0(R6)          LINE ADDRESS
         MVI   4(R5),X'C9'            ATTRIBUTE
         MVI   5(R5),X'13'            INSERT CURSOR
         MVI   CMDFLAG,X'00'
AUTOTPUT LA    R0,5(,R10)
*        LR    R0,R10
         TPUT  (1),(0),FULLSCR
         STIMER WAIT,BINTVL=TIMER
         TGET  REPLY,70,ASIS,NOWAIT
CHEKOUT  CLI   REPLY,X'7D'
         BE    GOTSTUFF
         NI    REPLY,X'0F'
         CLI   REPLY,X'01'
         BE    HELP
         CLI   REPLY,X'02'
         BE    AUTOSTOP
         CLI   REPLY,X'03'
         BE    AXFREE
         CLI   REPLY,X'04'
         BE    AUTOON
         CLI   REPLY,X'05'
         BE    CNSLSW
         CLI   REPLY,X'06'
         BE    RESHOW
         CLI   REPLY,X'07'
         BE    MTT
         CLI   REPLY,X'08'
         BE    AUTO10
         CLI   REPLY,X'09'
         BE    AUTO2
         CLI   REPLY,X'0A'
         BE    OMON
         CLI   REPLY,X'0B'
         BE    AUTO4
         CLI   REPLY,X'0C'
         BE    IPLINFO
NOTIFY   MVI   CLRFLAG,X'FF'
         MVI   CMDFLAG,X'FF'
         B     AUTHDONE
CNSLSW   MVI   CNSLFLAG,X'FF'
         MVI   REPLY,X'00'
         MVI   THRUFLAG,X'00'
         MVI   CLRFLAG,X'FF'
         B     SHOWCONS
RESHOW   MVI   RESHOWFL,X'FF'
         B     AUTHDONE
IPLINFO  MVC   WORKLINE,BLANKS
         MVC   WORKLINE+10(46),MESSAGE
         LA    R1,16              HEX 10
         L     R2,0(R1)           ADDRESS OV CVT
         USING CVT,R2
         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA
         L     R1,CVTSYSAD
         MVC   WORKLINE+72(3),13(1)
         MVC   WORKLINE+65(7),=C'SYSRES='
         USING SMCABASE,R3
         MVC   IPLDATE,SMCAIDTE   IPL DATE
         MVC   IPLTIME,SMCAITME   IPL TIME
         DROP  R3
         L     R3,CVTASMVT
         TM    1(R3),X'08'     CLPA?
         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS
         MVC   WORKLINE+57(3),=C'YES'
         B     DATEEDIT
NOCLPA   MVC   WORKLINE+57(3),=C'NO '
DATEEDIT MVC   WORKLINE+31(5),PATTERN1
         ED    WORKLINE+31(5),IPLDATE+1 MAKE PRINTABLE
         DROP  R2
         L     R6,IPLTIME
         SRDA  R6,32(0)
         L     R3,THREE60
         DR    R6,R3
         CVD   R7,DOUBLWD
         MVC   WORK(4),=X'40212020'
         ED    WORK(4),DOUBLWD+6
         MVC   WORKLINE+43(2),WORK+2
         SRDA  R6,32              SHIFT REMAINDER
         L     R3,SIXTY
         DR    R6,R3
         CVD   R7,DOUBLWD
         MVC   WORK(4),=X'F0212020'
         ED    WORK(4),DOUBLWD+6
         MVC   WORKLINE+46(2),WORK+2
         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE
         LA    R6,PAGEDEF             LINES TO BE DISPLAYED
         LA    R10,85
         CLI   MOD5FLAG,X'FF'
         BNE   NONMOD5
         LA    R6,PAGEDEF5
NONMOD5  L     R9,NUMLINES
         BCTR  R9,0
         MVC   0(5,R5),0(R6)
         MVC   5(79,R5),WORKLINE
         LA    R5,84(,R5)             INCREMENT
         LA    R6,05(,R6)             INCREMENT
         BCTR  R9,0
         TPUT  CLEAR,17,FULLSCR
         MVI   IPLFLAG,X'FF'
         TCLEARQ INPUT
         B     SPACLOOP
MTT      L     R1,SAVECPPL
         LINK  EP=MTT
         TPUT  CLEAR,17,FULLSCR
         MVI   AUTOFLAG,X'00'
         MVI   CLRFLAG,X'FF'
         B     AUTHDONE
OMON     L     R1,SAVECPPL
         LINK  EP=RMFMON
         TPUT  CLEAR,17,FULLSCR
         MVI   AUTOFLAG,X'00'
         MVI   CLRFLAG,X'FF'
         B     AUTHDONE
HELP     MVI   HELPFLAG,X'FF'
         MVI   AUTOFLAG,X'00'
         TPUT  CLEAR,17,FULLSCR
         MVI   CLRFLAG,X'FF'
*        TCLEARQ INPUT
         B     FIRSTL
AUTOON   MVC   TIMER,ONE
         CLI   USERFLAG,X'FF'
         BE    AUTO2
         B     AUTOSET
AUTO2    MVC   TIMER,THREE
*        CLC   =X'5CF0',CURSOR     MOD2? KEEP MIKE FROM AUTOING AT 1SEC
*        BE    AUTO4
         B     AUTOSET
AUTO4    MVC   TIMER,FIVE
AUTOSET  MVI   AUTOFLAG,X'FF'
         MVC   5(72,R5),BLANKS
         MVI   REPLY,X'00'
         B     AUTHDONE
AUTO10   MVC   TIMER,=F'990'            APP 10 SECS
         B     AUTOSET
AUTOSTOP MVI   AUTOFLAG,X'00'
         B     AUTHDONE
SKIPALL  MVI   ISSUFLAG,X'FF'
         B     AUTHDONE
GOTSTUFF DS    0H
         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?
         BE    NOTIFY              THEN EXIT
         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE
         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?
         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED
         MVC   CMDLINE+4(72),REPLY+6
         MVC   CMDLINE(4),CMDFMT
         MVC   REPLY,BLANKS
         CLI   CMDLINE+4,C'Z'      IS IT END,
         BE    AXFREE              THEN EXIT
         CLI   CMDLINE+4,C'X'      IS IT END,
         BE    AXFREE              THEN EXIT
         CLC   CMDLINE+4(3),=C'END' IS IT END,
         BE    AXFREE               THEN EXIT
GOTCMD   TPUT  CLEAR,17,FULLSCR
         MVI   CLRFLAG,X'FF'
         CLI   USERFLAG,X'FF'
         BNE   NOWTO
LOGLINE  MVC   WTOCMD(100),WTOLIST
         MVC   WTOCMD+8(72),CMDLINE+4
         MVC   WTOCMD+78(4),USERID
         LA    R7,WTOCMD
         WTL   MF=(E,(R7))
NOWTO    BAL   R3,AUTHRIZ
         SLR   R0,0                 CLEAR REG 0
         L     R0,CONSOLE
ISSUE    LA    R1,CMDLINE          GET ADDRESS OF COMMAND I SMF
         SVC   34                  ISSUE COMMAND VIA SVC 34
         STIMER WAIT,BINTVL=ONE
         BAL   R3,UNAUTH
         MVI   CMDFLAG,X'FF'
         B     AUTHDONE
NOAUTH   LA    R7,TABLEND
         LA    R6,4
         LA    R5,TABLE
TBLOOP   CLC   0(4,R5),USERID
         BE    USEROK
         BXLE  R5,R6,TBLOOP
         TPUT  MSGNO1,13
         B     SHOWRTRN
AUTHRIZ  STAX  DEFER=YES
         L     R1,AUTH
         LA    R0,1
         SYSDSVC SVC=244
         MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO
         BR    R3                ****************************
UNAUTH   L     R1,16             *  A                       *
         USING CVT,R1            *   D                      *
         L     R1,CVTTCBP        *    D      J              *
         DROP  R1                *     R      S             *
         L     R1,4(R1)          *      E      C            *
         USING TCB,R1            *       S      B           *
         L     R1,TCBJSCB        *        S                 *
         DROP  R1                ****************************
         NI    236(R1),X'FE'     SET AUTHORIZATION OFF
         MODESET MF=(E,PROBMOD)
         STAX  DEFER=NO
         BR    R3
         EJECT
         LTORG
*---------------------------------------------------------------------*
*                         C O N S T A N T S                           *
*---------------------------------------------------------------------*
CMDFMT   DC    Y(76),Y(00)            LENGTH OF COMMAND
MESSAGE  DC    CL46'LAST SYSTEM IPL DATE XXXXX  TIME HH:MM  CLPA ='
PATTERN1 DC    XL5'2120202020'
THREE60  DC    F'360000'
SIXTY    DC    F'6000'
AXLIST   DC    H'1',H'0'           AXRES PARMLIST
         CNOP  0,8
*---------------------------------------------------------------------*
*               327X SCREEN CLEAR CONTROL CHARACTERS                  *
*---------------------------------------------------------------------*
CLR      DC    X'7E'              WCC - CLEAR SCREEN
         DC    X'11F56F'          SBA TO ROW 43, COL 80
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'3C404000'        FILL SCREEN WITH NULLS
         DC    X'11F460'          ROW 43 COL 2
         DC    X'1DE913'          SBA TO ROW 1, COL 1 1DC813
ONE      DC    A(175)             1.75 SECOND
FIVE     DC    A(444)             5 SECONDS
THREE    DC    A(220)             3 SECONDS
TEN      DC    F'10'
NUMBEROR DC    XL4'000000F0'
CHAROR   DC    XL4'000000C0'
HEXFS    DC    XL4'FFFFFFFF'
HEXZIP   DC    2F'0000000000000000'
MSGNO1   DC    CL13'SYSTEM ACTIVE'
         DS    0F
WTOLIST  WTL   '                                                       X
                                       ZTPR0200',MF=L
         DS    0F
AUTH     DC    CL4'AUTH'
         SPACE 5
SUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L
PROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L
TABLE    DC    CL4'XXXX'
TABLEND  DC    CL4'XXXX'
RTMEC    DC    CL6',RTME='
RNUMC    DC    CL6',RNUM='
MOD2     DC    CL3'***'
FORTY3   DC    H'43'
THIRTY2  DC    H'32'
EIGHTY   DC    H'80'
PAGEDEF  DC    X'1140401DE8'          ROW  1   COL  1
         DC    X'11C1501DC4'          ROW  2   COL  1
         DC    X'11C2601DC4'          ROW  3   COL  1
         DC    X'11C3F01DC4'          ROW  4   COL  1
         DC    X'11C5401DC4'          ROW  5   COL  1
         DC    X'11C6501DC4'          ROW  6   COL  1
         DC    X'11C7601DC4'          ROW  7   COL  1
         DC    X'11C8F01DC4'          ROW  8   COL  1
         DC    X'114A401DC4'          ROW  9   COL  1
         DC    X'114B501DC4'          ROW 10   COL  1
         DC    X'114C601DC4'          ROW 11   COL  1
         DC    X'114DF01DC4'          ROW 12   COL  1
         DC    X'114F401DC4'          ROW 13   COL  1
         DC    X'1150501DC4'          ROW 14   COL  1
         DC    X'11D1601DC4'          ROW 15   COL  1
         DC    X'11D2F01DC4'          ROW 16   COL  1
         DC    X'11D4401DC4'          ROW 17   COL  1
         DC    X'11D5501DC4'          ROW 18   COL  1
         DC    X'11D6601DC4'          ROW 19   COL  1
         DC    X'11D7F01DC4'          ROW 20   COL  1
         DC    X'11D9401DC4'          ROW 21   COL  1
         DC    X'115A501DC4'          ROW 22   COL  1
         DC    X'115B601DC4'          ROW 23   COL  1
         DC    X'115CF01DC4'          ROW 24   COL  1
         DC    X'115E401DC4'          ROW 25   COL  1
         DC    X'115F501DC4'          ROW 26   COL  1
         DC    X'1160601DC4'          ROW 27   COL  1
         DC    X'1161F01DC4'          ROW 28   COL  1
         DC    X'11E3401DC4'          ROW 29   COL  1
         DC    X'11E4501DC4'          ROW 30   COL  1
         DC    X'11E5601DC4'          ROW 31   COL  1
         DC    X'11E6F01DC4'          ROW 32   COL  1
         DC    X'11E8401DC4'          ROW 33   COL  1
         DC    X'11E9501DC4'          ROW 34   COL  1
         DC    X'116A601DC4'          ROW 35   COL  1
         DC    X'116BF01DC4'          ROW 36   COL  1
         DC    X'116D401DC4'          ROW 37   COL  1
         DC    X'116E501DC4'          ROW 38   COL  1
         DC    X'116F601DC4'          ROW 39   COL  1
         DC    X'11F0F01DC4'          ROW 40   COL  1
         DC    X'11F2401DC4'          ROW 41   COL  1
         DC    X'11F3501DC4'          ROW 42   COL  1
         DC    X'11F4601DC8'          ROW 43   COL  1
PAGEDEF5 DC    X'1140401DE8'          ROW  1   COL  1 MODEL 5
         DC    X'11C2C41DE4'          ROW  2   COL  1
         DC    X'11C4C81DE4'          ROW  3   COL  1
         DC    X'11C64C1DE4'          ROW  4   COL  1
         DC    X'11C8501DE4'          ROW  5   COL  1
         DC    X'114AD41DE4'          ROW  6   COL  1
         DC    X'114CD81DE4'          ROW  7   COL  1
         DC    X'114E5C1DE4'          ROW  8   COL  1
         DC    X'1150601DE4'          ROW  9   COL  1
         DC    X'11D2E41DE4'          ROW 10   COL  1
         DC    X'11D4E81DE4'          ROW 11   COL  1
         DC    X'11D66C1DE4'          ROW 12   COL  1
         DC    X'11D8F01DE4'          ROW 13   COL  1
         DC    X'115AF41DE4'          ROW 14   COL  1
         DC    X'115CF81DE4'          ROW 15   COL  1
         DC    X'115E7C1DE4'          ROW 16   COL  1
         DC    X'1161401DE4'          ROW 17   COL  1
         DC    X'11E3C41DE4'          ROW 18   COL  1
         DC    X'11E5C81DE4'          ROW 19   COL  1
         DC    X'11E74C1DE4'          ROW 20   COL  1
         DC    X'11E9501DE4'          ROW 21   COL  1
         DC    X'116BD41DE4'          ROW 22   COL  1
         DC    X'116DD81DE4'          ROW 23   COL  1
         DC    X'116F5C1DE4'          ROW 24   COL  1
         DC    X'11F1601DE4'          ROW 25   COL  1
         DC    X'11F3E41DE4'          ROW 26   COL  1
         DC    X'11F5E81DE4'          ROW 27   COL  1
NOTISSUD DC    CL18'COMMAND NOT ISSUED'
HEADING1 DC    CL80'K S,DEL=                            99:99:99       X
                             CONSOLE XX    '
HELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X
                 PF-3   END                '
HELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX
                 PF-6   RESHOW LAST COMMAND'
HELPMSG3 DC    CL80'PF-7   PAGE THRU MTT        PF-8  AUTO UPDATE 10 SEX
               C PF-9   AUTO UPDATE 4 SEC  '
HELPMSG4 DC    CL80'PF-10  RMFMON               PF-11 AUTO UPDATE 2 SECX
                 PF-12  IPL INFO           '
WORKAREA DSECT
SAVEAREA DS    18F
UCMTABX  DS    F
RDCM     DS    F
WORKLINE DS    CL80
REPLY    DS    CL80
BLANKS   DS    CL80
CMDLINE  DS    CL80
HEADING  DS    CL80
SIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER
UCMTAB   DS    F
         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES
UCMTABE  EQU   *
NUMUCMS  DS    H
OLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER
         SPACE 5
CLEAR    DS    XL2                WCC - CLEAR SCREEN
ENDOFSCR DS    XL2                SBA TO ROW XX, COL 80
         DS    XL3                SBA TO ROW 1, COL 1
         DS    XL5                FILL SCREEN WITH NULLS
CURSOR   DS    XL2                SBA TO ROW 1, COL 1
         DS    XL3                INSERT CURSOR
LASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE
CONNUM   DS    CL2' 1'            CONSOLE NUMBER
CTYPE    DS    CL4' '
MASTER   DS    CL8' '             MASTER CONSOLE
SYS      DS    CL4' '             SYS  AUTHORIZATION
IO       DS    CL4' '             I/O  AUTHORIZATION
CONS     DS    CL5' '             CONS AUTHORIZATION
         DS    CL3' '
*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE
TIME     DS    CL3' '             SECONDS REMAINING ON TIMER
SLASH    DS    CL1'/'
PAUSE    DS    CL3'1.0'           DELAY IN SECONDS
         DS    CL2' '
AREAA    DS    XL1
CNSLFLAG DS    XL1
THRUFLAG DS    XL1
AUTOFLAG DS    XL1
ISSUFLAG DS    XL1
RESHOWFL DS    XL1
HELPFLAG DS    XL1
USERFLAG DS    XL1
CLRFLAG  DS    XL1
IPLFLAG  DS    XL1
MOD5FLAG DS    XL1
CMDFLAG  DS    XL1
CONSOLE  DS    F                   CONSOLE TO BE LOOKED AT
CONSASID DS    F                   'CONSOLE' ASID FOR CMS
NUMLINES DS    F
CONL     DS    F
SAVECPPL DS    F
TPUTLEN  DS    F
TIMER    DS    F
RTME     DS    H
RNUM     DS    H
USERID   DS    CL7
TABAREA  DS    CL77
SELCODE  DS    CL3            LINE SELECTION CODE
SELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA
WORK     DS    D
IPLDATE  DS    F
IPLTIME  DS    F
DOUBLWD  DS    D
WTOCMD   DS    CL104
SCREEN   DS    XL1       SPACE FOR WCC
         DS    43CL84
         DS    CL124     EXTRA FOR MOD5
BUF      DS    45CL133            OPERATORS SCREEN BUFFER
WORKLENG EQU   *-WORKAREA
         PRINT NOGEN
         TITLE '*** PROTECTED STEP CONTROL BLOCK DSECT ***'
         IKJPSCB                   COPY THE PSCB FORMAT DSECT
         TITLE '*** COMMAND PROCESSOR PARAMETER LIST DSECT ***'
         IKJCPPL                   COMMAND PROCESSOR PARM LIST
         TITLE '*** TSO USER PROFILE TABLE DSECT ***'
         IKJUPT                    TSO USER PROFILE TABLE
         TITLE '*** COMMUNICATION VECTOR TABLE ***'
         CVT   DSECT=YES
         TITLE '*** J S C B ***'
         IEZJSCB
         TITLE '*** T  C  B ***'
         IKJTCB DSECT=YES
*        TITLE '*** RDCM DSECT ***'
*EERDCM  DSECT ,
*        IEECRDCM
         TITLE '*** TDCM DSECT ***'
IEETDCM  DSECT ,
         IEECDCM
         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'
         IEECUCM FORMAT=NEW
         IHAASVT
         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'
         IHAASCB
         TITLE '*** TSB DSECT ***'
         IKJTSB LIST=YES
         TITLE '*** CHAIN     ***'
         IEECHAIN
         IEESMCA
         END
./ ADD NAME=CONESAJ  0100-93082-93082-1928-00030-00030-00000-OLDVERS
//MURFC    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=3,NOTIFY=MURF
//*********************************************************************
//*1.CHANGE SYSIN AND SYSLIB DD TO CORRECT UNLOADED CBT FILE NAME.    *
//*2.CHANGE SYSLMOD TO CORRECT LOAD LIB.                              *
//*********************************************************************
//COM     EXEC PGM=IEV90,REGION=512K,
//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.AMODGEN
//         DD  DSN=LBKQ.FILE025.PDS,DISP=SHR
//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),
//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))
//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  DSN=LBKQ.FILE025.PDS(CONESA),DISP=SHR
//*
//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),
//             PARM='XREF,LET,LIST,RENT,REUS'
//SYSPRINT     DD   SYSOUT=*
//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSLMOD      DD   DISP=SHR,DSN=SYSX.LOADLIB(ZTPR0200)
//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)
//             DD   DDNAME=SYSIN
//SYSIN        DD   *
 ALIAS CONSOLE
 NAME ZTPR0200(R)
./ ADD NAME=KLEENUP  0100-93082-93082-1928-00049-00049-00000-OLDVERS
/* REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.             */
/* KLEENUP COMMAND FORMAT:                                           */
/* KLEENUP GDGDSN MMM NNN                                            */
/* IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY     */
/* MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM */
/* CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN */
/* EXAMPLE:                                                          */
/*           KLEENUP SYS2.LISTCAT.USERCAT ML2 1                      */
/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */
/* MIGRATIONLEVEL 2.                                                 */
/*           KLEENUP SYS2.LISTCAT.USERCAT                            */
/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */
/* MIGRATIONLEVEL 1 BY DEFAULT.                                      */
ARG DS LVL NUM
X=OUTTRAP('LN.')
"LISTC ENT(" "'"DS"'" ") ALL"
X=OUTTRAP(OFF);
IF LVL ^= 'ML2' OR 'WAIT' OR 'NOWAIT' THEN
         LVL = ' '
IF NUM = '' THEN DO
            SAY 'MIGRATING OFF ALL BUT CURRENT GENERATION ' DS
            NUM = 1
            END
TOT=0
    DO I= 1 TO LN.0
/*  SAY "LN."I "=" LN.I */
    IF SUBSTR(LN.I,3,09) = 'NONVSAM' THEN DO
       PARSE VALUE LN.I WITH NV DSH DSN
       N=I+6
       VOL=SUBSTR(LN.N,26,31)
       PUSH DSN
       PUSH VOL
       TOT=TOT+1
       END
    END
    DO I = 1 TO TOT
       PULL VOL
       PULL DSN
       IF I > NUM THEN DO
        IF SUBSTR(VOL,1,6) ^= "MIGRAT"  THEN DO
            CALL PRG
            END
        END
    END
RETURN
PRG:
SAY "HMIGRATE (" "'"DSN"'"  ")" LVL
"HMIGRATE (" "'"DSN"'"  ")" LVL
           RETURN
./ ADD NAME=MTTESA   0100-93082-93082-1928-00718-00718-00000-OLDVERS
*******************************************************************
*                                                                 *
*                        D I S C L A I M E R                      *
*                                                                 *
*******************************************************************
*                                                                 *
* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *
* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *
* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *
* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *
* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *
* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *
* SUPPLIED .                                                      *
*                                                                 *
* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *
* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *
* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *
* FUTURE .                                                        *
*                                                                 *
*******************************************************************
***********************************************************************
*   TITLE: ZTPR0205                                                   *
*   AUTHOR: MURPHY                                                    *
*   DATE-WRITTEN: 10/16/84                                            *
*                 11/08/88  -  CORRECT JOB#/TIME, ADD HL - PMM        *
*                 04/06/90  -  UPDATED FOR APF FROM PARMLIB - PMM     *
*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *
*              GC28-1046-1                                            *
*   REMARKS:                                                          *
*                                                                     *
*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *
*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE.            *
*                                                                     *
***********************************************************************
ZTPR0205 CSECT
         BEGIN PROGRAM=ZTPR0205
*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME
         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT
         LR    R2,R1              SAVE CPPL
         USING ZTPR0205,R12       R12 BASE REGISTER
         GETMAIN RC,LV=WORKL      GETMAIN  FOR SAVEAREA/WORK
         LTR   R15,R15            CHECK RETURN CODE
         BNZ   GETMERR
         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA
         USING SAVDSECT,R3        ADDRESSABILITY
         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)
         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)
         LR    R13,R3             ADDRESS OF SAVEAREA IN R13
         DROP  R3
         USING SAVDSECT,R13
         USING CPPL,R2
         L     R6,CPPLPSCB
         DROP  R2
         USING PSCB,R6
         MVC   USERID,PSCBUSER
         MVC   USERIDL,PSCBUSRL
         MVC   USERATTR,PSCBATR1  SAVE OPER AUTH INFO
         MVI   USERFLAG,X'00'
         MVI   CMDFLAG,X'00'
         DROP  R6
         ST    R2,CPPLSAVE
         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE
         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT
         MVC   SCREEN(108),DSCREEN SCREEN IMAGE
         GTSIZE
         LTR   R0,R0
         BZ    FREERET2            NON-DISPLAY TERMINAL
         CH    R1,=H'80'           80 WIDE?
         BNE   SETM2               NO - SET IT TO THIS
         CH    R0,=H'43'           MOD 4?
         BE    VERIFY
         CH    R0,=H'32'           MOD 3?
         BNE   SETM2
MODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY
         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)
         MVC   DSCRO3,=X'E6F0'     (32,1)
         MVC   DSCRO4,=X'E7F7'     (32,72)
         B     VERIFY
SETM2    STSIZE SIZE=80,LINE=24
         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG
         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT
         MVC   DSCRO3,=X'5CF0'     24,1
         MVC   DSCRO4,=X'5DF7'     24,72
VERIFY   EQU   *
         STFSMODE ON,INITIAL=YES
         LA    R7,TABLEND
         LA    R6,4
         LA    R1,TABLE
TBLOOP   CLC   0(4,R1),USERID
         BE    USEROK
         BXLE  R1,R6,TBLOOP
         TM    USERATTR,X'80'   OPER AUTHORITY?
         BZ    NOAUTH
         MVI   CMDFLAG,X'FF'
         B     VEROK1
USEROK   MVI   USERFLAG,X'FF'
         B     VEROK1
FREEAX   MVI   FREEFLAG,X'FF'
         B     VEROK1
*EROK    DELETE EP=IKJEFFUT
VEROK1   STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE
         TESTAUTH FCTN=1
         LTR   R15,R15
         BZ    GOTAUTH
         L     R1,AUTH
         LA    R0,1
         SYSDSVC
GOTAUTH  MODESET MF=(E,SUPRMOD)
         CLI   FREEFLAG,X'FF'
         BNE   AXIT
         AXFRE AXLIST=AXLIST     FREE    AN AUTHORIZATION INDEX IN A.T.
         B     SCRENDEF
NOTAUTH  TPUT  MSGNO2,6
         B     FREERET2
AXIT     AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.
         LA    R1,1              MASTER IS ASID 1
         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1
         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX
SCRENDEF CLI   FREEFLAG,X'FF'
         BE    FREERET
         MVC   COMMAND,COMMANDL
         MVI   HEX40S,X'40'         SPACE
         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE
         L     R2,SCRLENG           SCREEN LENGTH
         S     R2,=F'0160'          MINUS 2 LINES
         LA    R5,DETAIL            ADDRESS OF SCREEN
         ST    R5,FRSTLINE
         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA
         ST    R2,LASTLINE          SAVE THE ADDRESS
         LA    R1,16
         L     R1,0(R1)
         USING CVT,R1
         L     R1,CVTMSER
         DROP  R1
         USING BASE,R1
         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE
         SR    R4,R4
         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD
         BZ    NOTACTIV
         ST    R4,MTTSIZE
         ST    R3,MTTADDR
         DROP  R1
         GETMAIN RC,LV=(4)       LENGTH WAS IN R4
         LTR   R15,R15
         BNZ   GETMERR
         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT
AUTHRIZE L     R9,MTTSIZE
         L     R3,MTTADDR
         SRA   R9,8             DIVIDE BY 256
         BNP   NOTACTIV
         LA    R1,1
         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!
         SR    R5,R5
         LA    R6,0(R4,R11)      END OF GETMAIN AREA
         LA    R7,256
         LR    R10,R11
MOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES
         LA    R10,256(,R10)
         LA    R3,256(,R3)
         BCT   R9,MOVELOOP
         B     ALLMOVED
FREERET  L     R4,MTTSIZE
         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA
         LTR   R15,R15            CHECK RETURN CODE
         BNZ   FREEMERR
         SR    R1,R1                   ****************************
         L     R1,16                   *  A                       *
         USING CVT,R1                  *   D                      *
         L     R1,CVTTCBP              *    D      J              *
         DROP  R1                      *     R      S             *
         L     R1,4(R1)                *      E      C            *
         USING TCB,R1                  *       S      B           *
         L     R1,TCBJSCB              *        S                 *
         DROP  R1                      ****************************
         USING IEZJSCB,R1
         NI    JSCBOPTS,X'FF'-JSCBAUTH
         DROP  R1
         MODESET MF=(E,PROBMOD)        PROBLEM STATE
*        STAX  DEFER=NO                NOW THEY CAN INTERRUPT
FREERET2 LR    R3,R13
         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA
         FREEMAIN RC,LV=WORKL,A=(3) FREE STORAGE
         LTR   R15,R15            CHECK RETURN CODE
         BNZ   FREEERR2
RETURN   RETURN (14,12),,RC=(15)
GETMERR  WTO   ' ZTPR0205 - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',X
               ROUTCDE=2
         L     R13,4(,R13)        RELOAD R13
         B     RETURN
BADLOAD  TPUT  BADLDMSG,25
NOAUTH   TPUT  MSGNO1,13
         B     FREERET2
FREEMERR TPUT  MSG2,33
         B     FREERET2
FREEERR2 TPUT  MSG1,33
         B     RETURN
ALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1
         SSAR  R1             SET SECONDARY TO OUR ASID
ADJUST   CLC   MTT,0(R11)     MTT HEADER
         BNE   NOTACTIV
         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER
         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE
         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT
         LA    R9,0(R9,R11)   CURRENT ENTRY
         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA
         L     R9,32(,R11)    FIRST ENTRY IN MTT
         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY
         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE
         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE
         L     R9,12(,R11)    LAST BYTE
         SR    R9,R8          GET DISPLACEMENT
         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE
         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE
         MVC   CURRLINE,MTTCLINE CURRENT LINE
DISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,CURRLINE    CURRENT LINE
         MVI   UPFLAG,X'00'
         MVI   WRAPFLAG,X'00'
         MVI   FOUNDFLG,X'00'
         MVC   BOTTOM,CURRLINE
DISPLOOP SR    R7,R7
         ICM   R7,B'0011',8(R6)  LOAD LENGTH
         BNP   FINDNEXT
         LA    R8,10(R7,R6)
         CLI   SEARCHON,X'FF'
         BE    DISPCHEK
         CLI   UPFLAG,X'FF'
         BNE   DISPSUB
DISPCHEK CLC   CURRLINE,MTTCLINE
         BNL   CHEKLINE
         C     R8,MTTCLINE
         BNL   ENDOFLST
CHEKLINE C     R6,MTTCLINE
         BNL   CHEKWRAP
         C     R8,MTTCLINE
         BNL   ENDOFLST
         B     DISPSUB
CHEKWRAP CLI   WRAPFLAG,X'FF'
         BE    WRITEIT
DISPSUB  CLI   SEARCHON,X'FF'
         BE    SEARCHLN
         S     R7,=F'51'      MINUS CONTROL STUFF
         BNP   FINDNEXT
DISPL    C     R7,SEVENTY9    > 80
         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA
         S     R7,EIGHTY
         LA    R1,112(R6,R7)  LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX01
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX01
         B     FINDNEXT
EX01     EX    R7,DISPMOV2
         S     R5,EIGHTY
         C     R5,FRSTLINE
         BNH   WRITEIT
         LA    R7,62          MAX LENGTH IS 80
MOVEDATA LA    R1,63(R6,R7)   LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX02
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX02
         B     FINDNEXT
EX02     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA
         MVC   10(9,R5),46(R6) SKIP CONTROL STUFF
         CLC   =CL2'40',34(R6)
         BE    SKIPTIM
         MVC   00(8,R5),35(R6) SKIP CONTROL STUFF
*        BAL   R2,SEARCHLN
SKIPTIM  S     R5,EIGHTY
         C     R5,FRSTLINE
         BNH   WRITEIT
*        CLI   UPFLAG,X'FF'
*        BE    UP
FINDNEXT ST    R6,CURRLINE
         BAL   R2,PREVLINE    GET NEXT     LINE
         B     DISPLOOP
DOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?
         BE    AUTHRIZE
         MVI   FOUNDFLG,X'00'
         BAL   R2,CLEARSCR    GET NEXT     LINE
         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN
         ST    R6,CURRLINE    CURRENT LINE
         ST    R6,TOP         CURRENT LINE
         MVI   DOWNFLAG,X'FF'
*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *
DOWNLOOP SR    R7,R7
         ICM   R7,B'0011',8(R6)  LOAD LENGTH
         BNP   FINDNXTD
         LA    R8,10(R7,R6)   NEXT LINE
         C     R8,MTTCLINE
         BNH   DOWNSUB
         C     R6,MTTCLINE
         BNL   DOWNSUB
         MVC   0(80,R5),CENDOFIT
         B     WRITEITD
DOWNSUB  S     R7,=F'51'      MINUS SIX
         BNP   FINDNXTD
         C     R7,SEVENTY9    > 80
         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA
         S     R7,EIGHTY
         LA    R1,112(R6,R7)  LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX03
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX03
         B     FINDNXTD
EX03     EX    R7,DISPMOV2
         LA    R7,62          MAX LENGTH IS 80
         A     R5,EIGHTY
         C     R5,LASTLINE
         BNL   WRITEITD
MOVEDOWN LA    R1,63(R6,R7)   LAST BYTE ADDRESS
         S     R1,MTTLLINE    ADD OF 0C4 BYTE
         BC    12,EX04
         SR    R7,R1
         BCTR  R7,0
         BC    2,EX04
         B     FINDNXTD
EX04     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA
         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF
         CLC   =CL2'40',33(R6)
         BE    SKIPTIM2
         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF
*        BAL   R2,SEARCHLN
SKIPTIM2 A     R5,EIGHTY
         C     R5,LASTLINE
         BNL   WRITEITD
FINDNXTD ST    R6,CURRLINE
         BAL   R2,UPLINE      GET NEXT     LINE
         B     DOWNLOOP
UP       BAL   R2,UPLINE      PREVIOUS LINE
         B     DISPLOOP
SEARCHLN L     R10,ARGLENG
         LA    R15,15(,R6)    START OF LINE
         LR    R3,R7
         SR    R3,R10
         BNP   FINDNEXT
COMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT
         BE    FOUNDIT
         LA    R15,1(,R15)    NEXT BYTE
         LA    R1,0(R15,R10)
         C     R1,MTTLLINE
         BNL   FINDNEXT
         BCT   R3,COMPLOOP
         B     FINDNEXT
FOUNDIT  MVI   SEARCHON,X'00' RESET
         MVI   FOUNDFLG,X'FF'
         S     R7,=F'51'
         ST    R6,SEARCHTP
         ST    R6,CURRLINE
         ST    R6,BOTTOM
         B     DISPL
UPLINE   LA    R8,1           INCREMENT 0F 1
         L     R6,CURRLINE
         CLC   R6,MTTFLINE    ARE WE AT TOP
         BH    UPCONTIN       NO - SKIP
         L     R6,MTTLLINE
         S     R6,=F'05'
UPCONTIN LNR   R8,R8          DECREMENT OF -1
         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT
         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU
*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE
         BCTR  R6,0           SUBTRACT  1
UPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?
         BE    PREVFND        YES, BRANCH
         BCTR  R6,0           MINUS 1
         CR    R6,R9
         BNL   UPLOOP
*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *
*   VERY BOTTOM AND WORK BACKWARDS -                                 *
         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?
         BNE   WRITEITD       YES - BRANCH
         MVI   STARTFLG,X'FF' FLAG IT
         L     R6,MTTLLINE    ADDRESS OF LAST LINE
         S     R6,=F'05'      MINUS SIX
         L     R9,MTTCLINE
         B     UPLOOP         NOW FIND PREVIOUS
PREVLINE LA    R8,1           INCREMENT 0F 1
         L     R6,CURRLINE    ADDRESS OF CURRENT LINE
         LA    R6,1(,R6)      INCREMENT
         C     R6,MTTLLINE    LAST LINE?
         BL    PREVCONT       NO, BRANCH
         L     R6,MTTFLINE    START AT FIRST
         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED
PREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT
         S     R9,=F'06'      CBEGINLN LENGTH
         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US
         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU
PREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?
         BE    PREVFND        YES, BRANCH
         BXLE  R6,R8,PREVLOOP LOOP
*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *
*   VERY BOTTOM AND WORK BACKWARDS -                                 *
         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?
         BNE   WRITEIT        YES - BRANCH
         MVI   STARTFLG,X'FF' FLAG IT
         L     R6,MTTFLINE    ADDRESS OF FRST LINE
         B     PREVLOOP       NOW FIND PREVIOUS
PREVFND  BR    R2             RETURN
WRITEITD BAL   R2,TPUT        WRITE SCREEN
         ST    R6,BOTTOM      SAVE WHERE WE WERE
         B     TGET           GET NEXT INPUT FROM TERMINAL
WRITEIT  EQU   *
         BAL   R2,TPUT        WRITE SCREEN
         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE
TGET     MVC   WORKLINE,HEX40S
         MVI   SEARCHON,X'00' RESET SEARCH FLAG
         BAL   R2,CLEARSCR
         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,CURRLINE    CURRENT LINE
         MVI   UPFLAG,X'00'   RESET UP FLAG
         TGET  WORKLINE,70,ASIS
         CLI   WORKLINE,X'7D' PFK USED?
         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY
         NI    WORKLINE,X'0F'
         CLI   WORKLINE,X'01' PF-1?
         BE    HELPOUT        YES, DISPLAY HELP INFO
         CLI   WORKLINE,X'03' PF-3?
         BE    FREEAX         YES, END
         CLI   WORKLINE,X'05' SEARCH REPEAT
         BE    SEARCHRP
*        CLI   WORKLINE,X'06' SEARCH REPEAT
*        BE    ABEND
         CLI   WORKLINE,X'07' UP?
         BE    UPSET
         CLI   WORKLINE,X'08'
         BE    DOWN
         CLI   WORKLINE,X'09'
         BE    SETTOP
         CLI   WORKLINE,X'0A'
         BE    SETBOT
         CLI   WORKLINE,C'>'  MESSAGE INPUT
         BE    TGET
         B     AUTHRIZE
NOCMDS   BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN
         MVC   DETAIL+880(23),=C'COMMANDS NOT AUTHORIZED'
         BAL   R2,TPUT
         B     TGET
CHECKOUT OC    WORKLINE+6(74),HEX40S
         CLC   WORKLINE+6(4),HEX40S
         BE    AUTHRIZE
         MVC   CMDLINE,WORKLINE+6
         CLC   =C'T  ',CMDLINE  TOP
         BE    SETTOP
         CLC   CMDLINE(3),=C'TOP'
         BE    SETTOP
         CLC   =C'B  ',CMDLINE  TOP
         BE    SETBOT
         CLC   XFINDQ,CMDLINE  F '
         BE    FIND
         CLC   CFIND,CMDLINE  FIND
         BE    FIND
         CLC   CMDLINE(3),=C'BOT'
         BE    SETBOT
         CLC   CMDLINE(3),=C'END'
         BE    FREEAX
         CLC   =C'Z ',CMDLINE  TOP
         BE    FREEAX
         CLC   =C'X ',CMDLINE  TOP
         BE    FREEAX
         CLI   CMDFLAG,X'FF'
         BE    NOCMDS
         CLI   USERFLAG,X'FF'
         BNE   NOWTO
         MVC   WTOCMD(100),WTOLIST
         MVC   WTOCMD+8(72),CMDLINE
         MVC   WTOCMD+78(4),USERID
         LA    R7,WTOCMD
         WTL   MF=(E,(R7))
NOWTO    SLR   R0,0                    CLEAR REG 0
ISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND
         SVC   34                      ISSUE COMMAND
         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS
         MVC   CMDLINE,HEX40S
         B     AUTHRIZE
*    FIND OPERATION REQUESTED                                         *
FIND     EQU   *
         OC    WORKLINE+6(74),HEX40S      UPPER CASE
         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER
         MVC   ARGUMENT(74),HEX40S        CLEAR OUT
         LA    R8,1
         LA    R6,WORKLINE
         LA    R9,74(,R6)
         LA    R7,ARGUMENT
FINDQUOT CLI   0(R6),X'7D'
         BE    FOUNQUOT
         LA    R6,1(,R6)
         CR    R6,R9
         BL    FINDQUOT
         B     REENTER
FOUNQUOT LA    R6,1(,R6)
ARGLOOP  CLI   0(R6),X'7D'
         BE    ARGDONE
         MVC   0(1,R7),0(R6)
         LA    R7,1(,R7)
         BXLE  R6,R8,ARGLOOP
*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *
REENTER  BAL   R2,CLEARSCR
         MVC   DETAIL+418(43),CHELPLN7
         BAL   R2,TPUT
         B     TGET
*EARCH   B     FREERET
ENDOFLST MVC   0(80,R5),CENDOFIT
         CLI   SEARCHON,X'FF'
         BNE   WRITEIT
         MVC   24(09,R5),=C'NOT FOUND'
         MVI   FOUNDFLG,X'00'
         B     WRITEIT
SEARCHRP CLI   SRCHFLAG,X'FF'
         BNE   REENTER
         CLI   FOUNDFLG,X'FF'
         BNE   LOADCURR
         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP
LOADCURR L     R6,CURRLINE
         MVI   FOUNDFLG,X'00'
         BAL   R2,PREVLINE
         ST    R6,CURRLINE
         MVI   SEARCHON,X'FF'
         B     UPSET
ARGDONE  LA    R8,ARGUMENT
         BCTR  R7,0
         SR    R7,R8
         BNP   REENTER
         ST    R7,ARGLENG
         MVI   FOUNDFLG,X'00' NOT FOUND YET
         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT
         MVI   SEARCHON,X'FF' PLEASE SEARCH
         L     R6,BOTTOM
         B     SETBOT2
SETBOT   L     R6,MTTCLINE
SETBOT2  ST    R6,CURRLINE
         L     R5,LASTLINE
         B     DISPLOOP
SETTOP   L     R6,MTTCLINE
         ST    R6,CURRLINE
         BAL   R2,UPLINE
         ST    R6,CURRLINE
         BAL   R2,UPLINE
         ST    R6,BOTTOM
         B     DOWN
UPSET    MVI   UPFLAG,X'FF'
         CLI   DOWNFLAG,X'FF'
         BNE   UPSET2
         MVC   CURRLINE,TOP
         MVI   DOWNFLAG,X'00'
UPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY
         L     R6,CURRLINE    WHERE WE LEFT OFF
         ST    R6,BOTTOM
         MVI   FOUNDFLG,X'00'
         B     DISPLOOP
COMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT
DISPMOVE MVC   18(0,R5),63(R6) SKIP CONTROL STUFF
DISPMOV2 MVC   0(0,R5),112(R6) SKIP CONTROL STUFF
TPUT     LA    R1,SCREEN
         L     R0,SCRTPUTL
         TPUT  (1),(0),FULLSCR
         BR    R2
HELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN
*        MVC   DETAIL+80(80),CHELPLN1
*        MVC   DETAIL+160(80),CHELPLN2
         MVC   DETAIL+400(80),CHELPLN3
         MVC   DETAIL+480(70),CHELPLN4
         MVC   DETAIL+640(39),CHELPLN5
         MVC   DETAIL+720(43),CHELPLN6
         MVC   DETAIL+880(43),CHELPLN7
         BAL   R2,TPUT
         B     TGET
NOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN
         MVC   DETAIL(16),=C'TRACE NOT ACTIVE'
         BAL   R2,TPUT
         STIMER WAIT,BINTVL=ONE
         L     R2,CPPLSAVE
         LINK  EP=ZTPR0200
         B     FREEAX
**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **
CLEARSCR LA    R6,DETAIL
         L     R7,SCRLENG
         SR    R9,R9
         ICM   R9,B'1001',HEX40S
         LA    R8,HEX40S
         MVCL  R6,R8
         BR    R2
TABLE    DC    CL4'MURF'          USERIDS VALID TO USE IT
         DC    CL4'XXXX'
TABLEND  DC    CL4'XXXX'          ROBERT CHAMBERLAIN
DSCREEN  DS    0C             DISPLAY SCREEN
         DC    X'03'          CONTROL
         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)
         DC    X'00115D7F1140403C404000' CLEAR SCREEN
         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *
                             PF-1 FOR HELP '
         DC    X'11'          SET BUFFER ADDRESS
         DC    X'F460'        (43,1)
*        DC    C'_'
         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD
         DC    X'13'          SET CURSOR ADDRESS
         DC    X'11'          SET BUFFER ADDRESS
         DC    X'F5E7'        (43,72)
         DC    X'1DF0'        TERMINATE INPUT FIELD
         DC    C' '           INDICATES MORE TO BE DISPLAYED
         DC    X'11'          SET BUFFER ADDRESS
         DC    X'C150'        (2,1)
*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)
DSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART
FOUR     DC    F'4'
BADLDMSG DC    CL25'ERROR LOADING IKJEFFUT  '
         DS    0F
AUTH     DC    CL4'AUTH'
MTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER
HEXFS    DC    XL4'FFFFFFFF'
HEXZIP   DC    XL4'00000000'
CMAINT   DC    XL5'1401091523'
COMMANDL DC    Y(76),Y(00)
ONE      DC    A(100)             1 SECOND
CBEGINLN DC    XL4'00000001'
EIGHTY   DC    F'080'             CONSTANT 80
SEVENTY9 DC    F'079'             CONSTANT 79
ANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'
MSGNO1   DC    CL13'SYSTEM ACTIVE'
MSGNO2   DC    CL6'NO APF'
MSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'
MSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'
XFINDQ   DC    XL3'C6407D'        HEX FOR F '
CFIND    DC    CL4'FIND'          CHARACTER FIND
CEND     DC    CL3'END'           CHARACTER END
CZ       DC    CL1'Z'             CHARACTER Z
PATTERN  DC    XL4'40202120'
AXLIST   DC    H'1'
         DC    H'0'
WTOLIST  WTL   '                                                       X
                                       ZTPR0200',MF=L
SUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO
PROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO
         LTORG
CENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **
               * * * * * * * * * * * * * * '
*HELPLN1 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*
               HE MASTER TRACE TABLE IN    '
*HELPLN2 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*
               E ACTIVE TO PAGE UP/DOWN.   '
CHELPLN3 DC    CL80'  PF-1  HELP            PF-3  END                PF*
               -5  REPEAT FIND   PF-7  UP  '
CHELPLN4 DC    CL70'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*
               -10 BOTTOM (NEWEST)'
CHELPLN5 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '
CHELPLN6 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '
CHELPLN7 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '
SAVDSECT DSECT
SAVEAREA DS    18F
DOUBLWD  DS    D
PARMWKAD DS    F
CPPLSAVE DS    F
         DS    0D
WORKLINE DS    CL80
HEX40S   DS    CL80
WTOCMD   DS    CL100
PARMWORK DS    CL44
USERID   DS    CL7
USERIDL  DS    XL1
USERATTR DS    XL1
STARTFLG DS    XL1
SRCHFLAG DS    XL1
USERFLAG DS    XL1
FREEFLAG DS    XL1
CMDFLAG  DS    XL1
FOUNDFLG DS    XL1
SEARCHON DS    XL1
UPFLAG   DS    XL1
WRAPFLAG DS    XL1
DOWNFLAG DS    XL1
MTTSIZE  DS    F              SIZE OF MTT
MTTADDR  DS    F              MTT ADDRESS IN MASTER ASID
BOTTOM   DS    F              BOTTOM    OF SCREEN
TOP      DS    F              TOP OF SCREEN
SEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH
CURRLINE DS    F              CURRENT LINE FOR US
FRSTLINE DS    F              FIRST LINE ON OUR DISPLAY
LASTLINE DS    F              LAST  LINE ON OUR DISPLAY
MTTFLINE DS    F              FIRST LINE IN OUR AREA
MTTLLINE DS    F              LAST  LINE IN OUR AREA
MTTCLINE DS    F              CURRENT LINE IN OUR AREA
SCRLENG  DS    F
SCRTPUTL DS    F
ARGLENG  DS    F
ARGUMENT DS    CL74
COMMAND  DS    F
CMDLINE  DS    CL72
SCREEN   DS    0CL108
         DS    XL1            CONTROL
DSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)
         DS    XL11
         DS    CL80
         DS    XL1            SET BUFFER ADDRESS
DSCRO3   DS    XL2            (43,1)
*        DS    XL1
         DS    XL2            MARK NEXT FIELD AS INPUT FIELD
         DS    XL1            SET CURSOR ADDRESS
         DS    XL1            SET BUFFER ADDRESS
DSCRO4   DS    XL2
         DS    XL2            TERMINATE INPUT FIELD
         DS    XL2            SET BUFFER ADDRESS
DSCRO5   DS    XL2
DETAIL   DS    43CL80
WORKL    EQU   *-SAVEAREA
         CVT   DSECT=YES
         IEZJSCB
         IKJTCB DSECT=YES
         IEEBASEA
         IEECHAIN
         IKJPSCB
         IKJCPPL
         IKJUPT
         END
./ ADD NAME=MTTESAJ  0100-93082-93082-1928-00025-00025-00000-OLDVERS
//MURF2    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=3,NOTIFY=MURF
//COM     EXEC PGM=IEV90,REGION=512K,
//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DSN=LBKQ.FILE025.PDS,DISP=SHR
//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),
//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))
//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))
//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))
//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  DSN=LBKQ.FILE025.PDS(MTTESA),DISP=SHR
//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),
//             PARM='XREF,LET,LIST,RENT,AC=1'
//SYSPRINT     DD   SYSOUT=*
//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSLMOD      DD   DISP=SHR,DSN=SYSX.LOADLIB(ZTPR0205)
//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)
//             DD   DDNAME=SYSIN
//SYSIN        DD   *
 ALIAS MTT
 NAME ZTPR0205(R)
./ ENDUP       "REVIEW" PDS MEMBER OFFLOAD AT 19:30 ON 93/03/23
