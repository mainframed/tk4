ISREDIT MACRO (DA VOLUME) NOPROCESS
CONTROL NOMSG
 IF &DA = ? THEN DO
 ISPEXEC DISPLAY PANEL(DSIGENP)
 EXIT
 END
IF &VOLUME = THEN DO
SET &VOL =
GOTO SETIN
END
SET &VOL = &STR(VOLUME(&VOLUME))
SETIN: +
SET &IN = &DA
IF &IN = THEN DO
           SET ZEDSMSG = &STR(INVALID DSN )
       SET ZEDLMSG = &STR(DSIGEN WORKS WITH VALID DATASET NAMES)
           ISPEXEC SETMSG MSG(ISRZ001)
         EXIT CODE(12)
  END
  ISREDIT PROCESS DEST
  IF &LASTCC = 0 THEN DO
  ISREDIT LOCATE .ZDEST
  IF &LASTCC = 8 THEN +
     DO
           SET ZEDSMSG = &STR(EMPTY DATA SET )
       SET ZEDLMSG = &STR(DSIGEN WORKS ONLY WHEN DATA SET HAS VALID +
                                 DATA AND LINE NUMBERS)
           ISPEXEC SETMSG MSG(ISRZ001)
         EXIT CODE(12)
   END
SET  &SXS1 =
SET  &SXS2 =
SET  &SXS3 =
SET  &SXS4 =
SET  &SXS5 =
SET  &SXS6 =
SET  &SXS7 =
SET  &SXS8 =
SET  &SXS9 =
SET  &SXS10 =
SET  &SXS11 =
SET  &SXS12 =
SET  &SXS13 =
SET  &SXS14 =
SET  &SXS15 =
SET  &SXS16 =
SET  &SXS17 =
SET  &SXS18 =
SET  &SXS19 =
SET  &SXS20 =
SET  &SXS21 =
SET  &SXS22 =
SET  &SXS23 =
SET  &SXS23 =
LISTDSI &IN DIRECTORY &VOL
SET CODE = &LASTCC
SET REASON = &SYSREASON
IF &CODE = 16 AND &REASON = 5 THEN DO
           SET ZEDSMSG = &STR(DATASET NO FOUND)
       SET ZEDLMSG = &STR(&IN MUST BE A FULLY QUALIFIED DATA SET NAME)
           ISPEXEC SETMSG MSG(ISRZ001)
         EXIT CODE(12)
  END
SET  &SXS1 =   &STR(&SYSDSNAME  )
SET  &SXS2 =   &STR(&SYSVOLUME  )
SET  &SXS3 =   &STR(&SYSUNIT    )
SET  &SXS4 =   &STR(&SYSDSORG   )
SET  &SXS5 =   &STR(&SYSRECFM   )
SET  &SXS6 =   &STR(&SYSLRECL   )
SET  &SXS7 =   &STR(&SYSBLKSIZE )
SET  &SXS8 =   &STR(&SYSALLOC   )
SET  &SXS9 =   &STR(&SYSUSED    )
SET  &SXS10 =  &STR(&SYSPRIMARY )
SET  &SXS11 =  &STR(&SYSSECONDS )
SET  &SXS12 =  &STR(&SYSUNITS   )
SET  &SXS13 =  &STR(&SYSEXTENTS )
SET  &SXS14 =  &STR(&SYSCREATE  )
SET  &SXS15 =  &STR(&SYSREFDATE )
SET  &SXS16 =  &STR(&SYSEXDATE  )
SET  &SXS17 =  &STR(&SYSUPDATED )
SET  &SXS18 =  &STR(&SYSTRKSCYL )
SET  &SXS19 =  &STR(&SYSBLKSTRK )
SET  &SXS20 =  &STR(&SYSADIRBLK )
SET  &SXS21 =  &STR(&SYSUDIRBLK )
SET  &SXS22 =  &STR(&SYSMEMBERS )
SET  &SXS23 =  &STR(&SYSMSGLVL1 )
SET  &SXS24 =  &STR(&SYSMSGLVL2 )
SET &DSNIN =  &STR(DSN=&SXS1)
IF &SXS12 = TRACK THEN SET &SXS12R = TRK
IF &SXS12 = CYLINDER THEN SET &SXS12R = CYL
IF &SXS12 = BLOCK THEN SET &SXS12R = &SYSDVAL(&SXS10)
SET &DORG  =  &STR(DSORG=&SXS4)
SET &SPAC  =  &STR(SPACE=(&SXS12R
SET &RCFM  =  &STR(RECFM=&SXS5
SET &LREC  =  &STR(LRECL=&SXS6
SET &BLKSZ =  &STR(BLKSIZE=&SXS7
SET &SLS10 = &SYSDVAL(&SXS10)
SET &SLS11 = &SYSDVAL(&SXS11)
SET &SLS20 = &SYSDVAL(&SXS20)
ISPEXEC VPUT (DORG SPAC RCFM LREC BLKSZ) PROFILE
ISPEXEC VGET (DORG SPAC RCFM LREC BLKSZ) PROFILE
IF &SXS4 = PO THEN +
SET &CMA = &STR(,)
SET &SP1 = &STR(&SPAC&CMA(&SLS10,&SLS11,&SLS20),RLSE)
SET &RGT = &STR())
SET &L5A = &STR(//         &SP1)&RGT&CMA
SET &L5A = &STR(&L5A&CMA)
SET &L5B   = &STR(//       DCB=(&DORG,&RCFM,&LREC,&BLKSZ)
SET &L1 = &STR(//COPY    EXEC PGM=IEBCOPY               )
SET &L3 = &STR(//SYSPRINT DD SYSOUT=*                   )
SET &L4 = &STR(//IN1      DD DISP=SHR,DSN=&SXS1        )
SET &L5 = &STR(//OUTDD    DD DISP=(,CATLG),UNIT=SYSDA,DSN= )
SET &L6 = &STR(//SYSUT3 DD UNIT=DISK,SPACE=(CYL,(2,2))  )
SET &L7 = &STR(//SYSUT4 DD UNIT=DISK,SPACE=(CYL,(2,2))  )
SET &L8 = &STR(//SYSIN DD *                             )
SET &L9 = &STR(  COPY INDD=((IN1,R)),OUTDD=OUTDD        )
SET &LA = &STR(/*                                       )
ISPEXEC VPUT (L1  L3 L4 L5 L5A L5B L6 L7 L8 L9 LA) PROFILE
     ISPEXEC VGET L1
       ISREDIT MASKLINE = "&L1"
       ISREDIT LINE_AFTER .ZDEST = MASKLINE


     ISPEXEC VGET L3
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 1
       ISREDIT MASKLINE = "&L3"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L4
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 2
       ISREDIT MASKLINE = "&L4"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L5
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 3
       ISREDIT MASKLINE = "&L5"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L5A
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 4
       ISREDIT MASKLINE = "&L5A"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L5B
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 5
       ISREDIT MASKLINE = "&L5B"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L6
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 6
       ISREDIT MASKLINE = "&L6"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L7
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 7
       ISREDIT MASKLINE = "&L7"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L8
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 8
       ISREDIT MASKLINE = "&L8"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET L9
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 9
       ISREDIT MASKLINE = "&L9"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

     ISPEXEC VGET LA
       ISREDIT (LINEPTR) = LINENUM .ZDEST
       SET &LINEPTR = &LINEPTR + 10
       ISREDIT MASKLINE = "&LA"
       ISREDIT LINE_AFTER &LINEPTR = MASKLINE

ERROROUT:+
       ISREDIT MASKLINE = ' '


      SET RC = 0
  END
  ELSE DO
     IF &MAXCC = 8 THEN DO
         SET ZEDSMSG = &STR(INDICATE POSITION)
         SET ZEDLMSG = &STR(MARK 'A' ON LINE AFTER WHICH /*USERPARM +
                            DATA SHOULD BE INSERTED)
     END
     ELSE DO
         SET ZEDSMSG = &STR(ERROR ENCOUNTERED)
         SET ZEDLMSG = &STR(UNABLE TO PROCESS REQUEST, +
                             RECHECK INPUT)
     END
     ISPEXEC SETMSG MSG(ISRZ000)
     SET RC = 12
  END
  EXIT CODE(&RC)
