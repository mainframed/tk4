ISREDIT MACRO (TYPE,FIRST,LAST)
 IF &STR(&TYPE) = ? THEN DO
 ISPEXEC DISPLAY PANEL(SUM)
 EXIT
 END
/*
/*       DATASET:  H562813.PVTLIB.MACSOUT(SUM)
/*        AUTHOR:  ANDREW CALL
/*      MODIFIED:  CHANGED FROM 255 VB TO 80 FB  PAUL G. DAVIS
/*                 CHANGED TO HANDLE UP TO 3 DECIMAL PLACES
/*     DATE/TIME:  09/11/86     86.254     13:34
/*
/*   DESCRIPTION:  EDIT MACRO TO SUM A COLUMN OF NUMBERS
/*
/* CONTROL LIST CONLIST SYMLIST
/*

SETUP:    ISREDIT (START) = LINENUM .ZFIRST
          ISREDIT (END)   = LINENUM .ZLAST
          SET &TOTAL   = 0
          SET &VALID   = 0
          SET &INVALID = 0
          IF &DATATYPE(&TYPE) = &STR(NUM) THEN +
             DO
                    SET &LAST  = &FIRST
                    SET &FIRST = &TYPE
                    SET &TYPE  = &STR(ALL)
             END

CHECK:    IF &DATATYPE(&FIRST) = &STR(NUM) THEN
          ELSE DO
                      SET &ZEDSMSG = &STR(START NOT NUMERIC)
                      SET &ZEDLMSG = &STR(START COLUMN NUMBER IS NOT NUM
                      ISPEXEC SETMSG MSG(ISRZ001)
                      EXIT CODE(20)
               END
          IF &DATATYPE(&LAST) = &STR(NUM) THEN
          ELSE DO
                      SET &ZEDSMSG = &STR(END NOT NUMERIC)
                      SET &ZEDLMSG = &STR(ENDING COLUMN NUMBER IS NOT NU
                      ISPEXEC SETMSG MSG(ISRZ001)
                      EXIT CODE(20)
               END
          IF &TYPE = &STR(X)    THEN GOTO DOX
          IF &TYPE = &STR(NX)   THEN GOTO DONX
          IF &TYPE = &STR(ALL)  THEN GOTO DOALL
          SET &ZEDSMSG = &STR(TYPE IS INVALID)
          SET &ZEDLMSG = &STR(TYPE OF LINES MUST BE 'X', 'NX', OR 'ALL')
          ISPEXEC SETMSG MSG(ISRZ001)
          EXIT CODE(20)

DOX:      DO WHILE &START LE &END
                ISREDIT (STATUS) = XSTATUS &START
                IF &STATUS = &STR(X) THEN +
                   DO
                           ISREDIT (DATALINE) = LINE &START
                           SET &HOLDER = &SUBSTR(&FIRST:&LAST,&DATALINE)
                           SET &HOLDER = &HOLDER
                           SET &X = &STR(&HOLDER)
                           IF &X = THEN GOTO BAD1
                           SET &L3 =1
                           SET L1 = &LENGTH(&X)
                           SET &L3 = &L1
                           DO WHILE &L3 >= 1
                           SET &TMP = &SUBSTR(&L3:&L3,&STR(&X))
                           IF &STR(&TMP) = &STR(.) THEN GOTO SIZEX
                           SET &L3 = &L3 -1
                           END
SIZEX: +
                           SET &L2 =1
                           SET L1 = &LENGTH(&X)
                           DO WHILE &L2 LE &L1
                           SET &TMP = &SUBSTR(&L2:&L2,&STR(&X))
     IF &TMP NE &STR(,) AND &TMP NE &STR(.)  AND &TMP NE &STR(') THEN +
                           SET &NUM = &NUM&TMP
                           SET &L2 = &L2 + 1
                           END
                           SET &HOLDER = &NUM
                           SET &NUM =
BAD1:                      IF &DATATYPE(&HOLDER) = &STR(NUM) THEN +
                              DO
                                    SET &TOTAL  = &TOTAL + &HOLDER
                                    SET &VALID  = &VALID + 1
                                       SET &L4 = &L1 - &L3
                                       IF &L4 > &L5 THEN SET &L5 = &L4
                                       SET &L3 = &L5
                              END
                           ELSE SET &INVALID = &INVALID + 1
                   END
                SET &START = &START + 1
          END
                          SET &TI = 1
          IF &L3 = 3 THEN SET &TI = 1000
          IF &L3 = 2 THEN SET &TI = 100
          IF &L3 = 1 THEN SET &TI = 10
          SET &T1 = &TOTAL / &TI
          SET &T2 = &TOTAL - &T1 * &TI
          IF &T2 = 0 THEN SET &T2 = &STR(0)
          IF &T2 < 10 AND &L3 = 2 THEN SET &T2 = &STR(0)&T2
          IF &T2 < 10 AND &L3 = 3 THEN SET &T2 = &STR(0)&STR(0)&T2
          SET &TOTAL = &STR(&T1&STR(.)&T2)
          SET &ZEDSMSG = &STR(SUM:  &TOTAL)
          SET &ZEDLMSG = &STR(THE SUM OF+
          '&TYPE' NUMBERS IN COLUMNS &FIRST TO &LAST IS:  &TOTAL)
          ISPEXEC SETMSG MSG(ISRZ001)
          ISREDIT LINE_BEFORE 1 = NOTELINE +
          'SUM OF NUMBERS IN COLUMNS &FIRST TO &LAST IS &TOTAL'
          ISREDIT LINE_BEFORE 1 = NOTELINE +
          '       PROCESSED &VALID VALID AND &INVALID INVALID LINES'
          ISREDIT LINE_BEFORE 1 = NOTELINE ' '
          EXIT CODE(0)

DONX:     DO WHILE &START LE &END
                ISREDIT (STATUS) = XSTATUS &START
                IF &STATUS = &STR(NX) THEN +
                   DO
                           ISREDIT (DATALINE) = LINE &START
                           SET &HOLDER = &SUBSTR(&FIRST:&LAST,&DATALINE)
                           SET &HOLDER = &HOLDER
                           SET &X = &STR(&HOLDER)
                           IF &X = THEN GOTO BAD2
                           SET &L3 =1
                           SET L1 = &LENGTH(&X)
                           IF &L1 = 0 THEN GOTO CK1
                           SET &L3 = &L1
                           DO WHILE &L3 >= 1
                           SET &TMP = &SUBSTR(&L3:&L3,&STR(&X))
                           IF &STR(&TMP) = &STR(.) THEN GOTO SIZE
                           SET &L3 = &L3 -1
                           END
SIZE: +
                           SET &L2 =1
                           SET L1 = &LENGTH(&X)
                           DO WHILE &L2 LE &L1
                           SET &TMP = &SUBSTR(&L2:&L2,&STR(&X))
     IF &TMP NE &STR(,) AND &TMP NE &STR(.)  AND &TMP NE &STR(') THEN +
                           SET &NUM = &NUM&TMP
                           SET &L2 = &L2 + 1
                           END
CK1:                       SET &HOLDER = &NUM
                           SET &NUM =
BAD2:                      IF &DATATYPE(&HOLDER) = &STR(NUM) THEN +
                              DO
                                    SET &TOTAL  = &TOTAL + &HOLDER
                                    SET &VALID  = &VALID + 1
                                       SET &L4 = &L1 - &L3
                                       IF &L4 > &L5 THEN SET &L5 = &L4
                                       SET &L3 = &L5
                              END
                           ELSE SET &INVALID = &INVALID + 1
                   END
                SET &START = &START + 1
          END
                          SET &TI = 1
          IF &L3 = 3 THEN SET &TI = 1000
          IF &L3 = 2 THEN SET &TI = 100
          IF &L3 = 1 THEN SET &TI = 10
          SET &T1 = &TOTAL / &TI
          SET &T2 = &TOTAL - &T1 * &TI
          IF &T2 = 0 THEN SET &T2 = &STR(0)
          IF &T2 < 10 AND &L3 = 2 THEN SET &T2 = &STR(0)&T2
          IF &T2 < 10 AND &L3 = 3 THEN SET &T2 = &STR(0)&STR(0)&T2
          SET &TOTAL = &STR(&T1&STR(.)&T2)
          SET &ZEDSMSG = &STR(SUM:  &TOTAL)
          SET &ZEDLMSG = &STR(THE SUM OF '&TYPE+
          ' NUMBERS IN COLUMNS &FIRST TO &LAST+
          IS:  &TOTAL)
          ISREDIT LINE_BEFORE 1 = NOTELINE 'SUM +
          OF NUMBERS IN COLUMNS &FIRST TO &LAST IS &TOTAL'
          ISREDIT LINE_BEFORE 1 = NOTELINE '    +
          PROCESSED &VALID VALID AND &INVALID INVALID LINES'
          ISREDIT LINE_BEFORE 1 = NOTELINE ' '
          ISPEXEC SETMSG MSG(ISRZ001)
          EXIT CODE(0)

DOALL:    DO WHILE &START LE &END
                ISREDIT (DATALINE) = LINE &START
                SET &HOLDER = &SUBSTR(&FIRST:&LAST,&DATALINE)
                SET &HOLDER = &HOLDER
                           SET &X = &STR(&HOLDER)
                           IF &X = THEN GOTO BAD3
                           SET &L3 =1
                           SET L1 = &LENGTH(&X)
                           SET &L3 = &L1
                           DO WHILE &L3 >= 1
                           SET &TMP = &SUBSTR(&L3:&L3,&STR(&X))
                           IF &STR(&TMP) = &STR(.) THEN GOTO SIZEALL
                           SET &L3 = &L3 -1
                           END
SIZEALL: +
                           SET &L2 =1
                           SET L1 = &LENGTH(&X)
                           DO WHILE &L2 LE &L1
                           SET &TMP = &SUBSTR(&L2:&L2,&STR(&X))
     IF &TMP NE &STR(,) AND &TMP NE &STR(.)  AND &TMP NE &STR(') THEN +
                           SET &NUM = &NUM&TMP
                           SET &L2 = &L2 + 1
                           END
                           SET &HOLDER = &NUM
                           SET &NUM =
BAD3:           IF &DATATYPE(&HOLDER) = &STR(NUM) THEN +
                   DO
                         SET &TOTAL  = &TOTAL + &HOLDER
                         SET &VALID  = &VALID + 1
                                       SET &L4 = &L1 - &L3
                                       IF &L4 > &L5 THEN SET &L5 = &L4
                                       SET &L3 = &L5
                   END
                ELSE SET &INVALID = &INVALID + 1
                SET &START  = &START + 1
          END
                          SET &TI = 1
          IF &L3 = 3 THEN SET &TI = 1000
          IF &L3 = 2 THEN SET &TI = 100
          IF &L3 = 1 THEN SET &TI = 10
          SET &T1 = &TOTAL / &TI
          SET &T2 = &TOTAL - &T1 * &TI
          IF &T2 = 0 THEN SET &T2 = &STR(0)
          IF &T2 < 10 AND &L3 = 2 THEN SET &T2 = &STR(0)&T2
          IF &T2 < 10 AND &L3 = 3 THEN SET &T2 = &STR(0)&STR(0)&T2
          SET &TOTAL = &STR(&T1&STR(.)&T2)
          SET &ZEDSMSG = &STR(SUM:  &TOTAL)
          SET &ZEDLMSG = &STR(THE SUM OF '&TYPE' +
          NUMBERS IN COLUMNS &FIRST TO &LAST IS:  &TOTAL)
          ISREDIT LINE_BEFORE 1 = NOTELINE 'SUM OF +
          NUMBERS IN COLUMNS &FIRST TO &LAST IS &TOTAL'
          ISREDIT LINE_BEFORE 1 = NOTELINE ' +
          PROCESSED &VALID VALID AND &INVALID INVALID LINES'
          ISREDIT LINE_BEFORE 1 = NOTELINE ' '
          ISPEXEC SETMSG MSG(ISRZ001)
          EXIT CODE(0)
