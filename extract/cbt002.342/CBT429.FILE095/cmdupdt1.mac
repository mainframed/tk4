ISREDIT MACRO
                         /* ANOTHER FINE EDIT MACRO */
                             /* BROUGHT TO YOU */
                        /* BY YOUR TECHNICAL SUPPORT */
                                  /* STAFF */
  ISPEXEC VGET TARGETDD PROFILE
  ISPEXEC VGET FLAG2 PROFILE
  ISREDIT EXCLUDE ALL
  CONTROL ASIS
  IF &FLAG2 = TABL THEN GOTO SECOND
  SET &I = 1
  SET &SYSOUTTRAP = 400
  LISTA ST
  SET &BOT = &SYSOUTLINE
  DO WHILE &BOT >= &I
     SET &TEMP = &&SYSOUTLINE&I
     ISREDIT LINE_AFTER .ZLAST = "&TEMP"
     SET &I = &I + 1
  END
SECOND: +
      ISPEXEC VPUT (DSN1 DSN2 DSN3 DSN4 DSN5 +
            DSN6 DSN7 DSN8 DSN9 DSN10 DSN11 DSN12) SHARED
  SET LEN1 = &LENGTH(&TARGETDD)
  ISREDIT (I)  = LINENUM .ZF
  ISREDIT (LR)  = LINENUM .ZL
  ISREDIT (LB,RB) = BOUNDS
  ISREDIT C '           ' '' 1 ALL
  ISREDIT C '  ' '$$' 1 ALL
  DO WHILE (&I <= &LR)
    ISREDIT (RECX) = LINE &I
    IF &SUBSTR(3:&LEN1+3,&STR(&RECX)) = &STR(&TARGETDD) THEN DO
    SET I = &I - 1
    GOTO REALCODE
    END
    SET RECB = &STR(&RECX)
    SET I = &I + 1
  END
NOTABLE: +
WRITE TARGET DDNAME &TARGETDD NOT FOUND ENTER DATASET NAME FOR TARGET +
(NO QUOTES)
  READ TARG2
     LISTDSI '&TARG2' NODIRECTORY

     SET &LISTDSI_RC = &LASTCC
     IF  &LISTDSI_RC ^= 0 THEN DO
      SET &CURPOS = &DSN&DNUM
      SET ZEDSMSG = &STR(INVALID NAME)
      SET ZEDLMSG = &STR(TSO DATA SET &TARG2 IS NOT A +
              CATALOGED DATA SET NAME)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO NOTABLE
   END
  ALLOC DA('&TARG2') FILE(&TARGETDD) SHR
  SET &RECB = &TARG2
  SET &I = &I -1
REALCODE: +
SET &INDX = 1
    ISREDIT (RECX&INDX) = LINE &I
    SET DSN1    = &STR(&RECB)
    ISPEXEC VPUT (DSN1) SHARED
/*  CONTROL NOLIST NOCON NOSYM
    IF &FLAG2 = TABL THEN DO
    SET ISPC2  = &DSN1
 ISPEXEC VPUT (ISPC2) PROFILE
 ISREDIT CANCEL
    EXIT
    END
SET &I = &I +2
DO WHILE (&I <   &LR)
    ISREDIT (RECX) = LINE &I
    IF &SUBSTR(1:2,&STR(&RECX)) = &STR($$) THEN DO
    GOTO PUTIT
    END

    IF &SUBSTR(1:4,&STR(&RECX)) = &STR(KEEP) THEN GOTO NOGO
/*  CONTROL LIST CON SYM
    SET &INDX = &INDX + 1
    ISREDIT (RECX&INDX) = LINE &I
    SET DSN&INDX = &STR(&RECX)
    ISPEXEC VPUT (DSN&INDX) SHARED
NOGO: +
    SET &I = &I + 1
     END
/*  CONTROL NOLIST NOCON NOSYM
PUTIT: +
    SET DSN&INDX =
    ISPEXEC VPUT (DSN&INDX) SHARED
     IF &DEBUG = DEBUG THEN DO
     GOTO PREDISPL
     END
     CONTROL CAPS NOFLUSH NOMSG
PREDISPL: ISPEXEC VGET (DSN1 DSN2 DSN3 DSN4 DSN5 +
            DSN6 DSN7 DSN8 DSN9 DSN10 DSN11 DSN12 MEM) SHARED
DISPLAY: SET &MEM = ISPCMDS

      SET &FOUND = &STR(NOO)
      SET &DNUM = 0
DO WHILE &DNUM < 12
 SET &DNUM = &DNUM + 1
 SET &CURDSN = &STR(&&DSN&DNUM)
 SET &DLEN = &LENGTH(&CURDSN)
 IF &DLEN > 0 THEN DO
       SET &PDSNAME = &CURDSN

     LISTDSI '&PDSNAME' NODIRECTORY

     SET &LISTDSI_RC = &LASTCC
     IF  &LISTDSI_RC ^= 0 THEN DO
      SET &CURPOS = &DSN&DNUM
      SET ZEDSMSG = &STR(INVALID NAME)
      SET ZEDLMSG = &STR(TSO DATA SET &PDSNAME IS NOT A +
              CATALOGED DATA SET NAME)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO DISPLAY
      END
     IF &SYSDSORG ^= PO THEN DO
      SET &CURPOS = &DSN&DNUM
      SET ZEDSMSG = &STR(NOT A PDS)
      SET ZEDLMSG = &STR(TSO DATA SET &PDSNAME IS NOT A +
              PARTITIONED DATA SET NAME)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO DISPLAY
      END
     SET &DLEN =&LENGTH(&MEM)
     FREE FI(PDSFILE)
     SET &FCC = &LASTCC
     IF &INIT = YES THEN +
     ISPEXEC LMFREE DATAID(&INP)
     ALLOC DDNAME(PDSFILE) DA('&PDSNAME') SHR REUS
     SET &FCC = &LASTCC
     IF &FCC > 0 THEN DO
      SET &CURPOS = DSN&DNUM
      SET ZEDSMSG = &STR(COULD NOT ALLOC)
      SET ZEDLMSG = &STR(DATA SET COULD NOT BE NOT +
              BE ALLOCATED)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO DISPLAY
     END
   ISPEXEC LMINIT DATAID(INP) DDNAME(PDSFILE) ENQ(SHR)
   SET &INIT = YES
    SET LMCC = &LASTCC
    IF LMCC > 0 THEN DO
      WRITE RC &LMCC FOR LMINIT- TYPE END OR HIT ENTER
      READ ANS
     IF &ANS = &STR(END) THEN DO
      SET &CURPOS = DSN&DNUM
      SET ZEDSMSG = &STR(COULD NOT ALLOC)
      SET ZEDLMSG = &STR(DATA SET COULD NOT BE NOT +
              BE INITIALIZED)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO GETOUT
      END
     END
   ISPEXEC LMOPEN DATAID(&INP) OPTION(INPUT)
    SET LMCC = &LASTCC
    IF LMCC > 0 THEN DO
      WRITE RC &LMCC FOR LMINIT- TYPE END OR HIT ENTER
      READ ANS
     IF &ANS = &STR(END) THEN DO
      SET &CURPOS = DSN&DNUM
      SET ZEDSMSG = &STR(COULD NOT ALLOC)
      SET ZEDLMSG = &STR(DATA SET COULD NOT BE NOT +
              BE INITIALIZED)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO GETOUT
      END
     END
    SET &INMEMB = &MEM
    ISPEXEC LMMFIND DATAID(&INP) MEMBER(&INMEMB)
    SET LMCC = &LASTCC
   IF &LMCC = 0 THEN DO
      SET &CURPOS = DSN&DNUM
      SET &FMEM&DNUM = &STR(====>)
     SET &ISPC1 = &PDSNAME
     ISPEXEC VPUT (ISPC1) PROFILE
      GOTO FINIS
      ISPEXEC SETMSG MSG(ISRZ001)
     ISPEXEC LMCLOSE DATAID(&INP)
     SET &LMCC = &LASTCC
     ISPEXEC LMFREE DATAID(&INP)
     SET &LMCC = &LASTCC
     FREE FI(PDSFILE)
      ISREDIT CANCEL
   END
   END
  END
    IF &FOUND ^= &STR(YES) THEN DO
      SET ZEDSMSG = &STR(&MEM NOT FOUND)
      SET ZEDLMSG = &STR(MEMBER &MEM NOTFOUND IN CONCATENATION)
      ISPEXEC SETMSG MSG(ISRZ001)
      GOTO PREDISPL
    END
  ELSE DO
      SET ZEDSMSG = &STR(&MEM FOUND)
      SET ZEDLMSG = &STR(MEMBER &MEM FOUND IN &PDSNAME)
      ISPEXEC SETMSG MSG(ISRZ001)
    GOTO DISPLAY
   END
 MSG: +
 ISPEXEC CONTROL DISPLAY REFRESH
  GOTO PREDISPL
 FINIS: +
     ISPEXEC LMCLOSE DATAID(&INP)
     SET &LMCC = &LASTCC
     ISPEXEC LMFREE DATAID(&INP)
     SET &LMCC = &LASTCC
     FREE DDNAME(PDSFILE)
     SET &FCC = &LASTCC
     SET &FLAG2 = TABL
     ISPEXEC VPUT (FLAG2) PROFILE
     SET &TARGETDD = ISPTABL
     SET &FLAG =
     ISREDIT END
 EXIT
 GETOUT +
     ISPEXEC LMCLOSE DATAID(&INP)
     SET &LMCC = &LASTCC
     ISPEXEC LMFREE DATAID(&INP)
     SET &LMCC = &LASTCC
     FREE  FI(PDSFILE)
     SET &FCC = &LASTCC
  EXIT

