 ISREDIT MACRO (PARM) NOPROCESS
 ISPEXEC CONTROL ERRORS RETURN
 IF &PARM ^= &Z THEN +
   DO
     IF &PARM = ? THEN +
       DO
         ISPEXEC DISPLAY PANEL(PASTE)
         EXIT
       END
     ELSE +
        IF &DATATYPE(&PARM) = NUM THEN +
          DO
           SET LEVEL = &PARM
           END
        ELSE +
          DO
           SET ZEDSMSG = &STR(INVALID ARGUMENT)
             SET ZEDLMSG = &STR(VALID ARGUMENTS ARE A "?" OR A LEVEL +
                               NUMBER)
           ISPEXEC SETMSG MSG(ISRZ001)
          EXIT
        END
  END
ELSE +
 SET LEVEL = 1
ISREDIT PROCESS DEST RANGE 0
SET RC = &LASTCC
IF &RC > 8 THEN +
 DO
   ISREDIT (EMP1) = LINENUM .ZFIRST
   ISREDIT (EMP2) = LINENUM .ZLAST
   IF &EMP1 = &EMP2 THEN +
     DO
       SET RC = 4
         SET EMPTY = YES
    END
 ELSE +
    DO
           SET ZEDSMSG = &STR(RANGE NO SPECIFIED)
         SET ZEDLMSG = &STR(A RANGE OR INSERTION LINE COMMAND WAS NOT +
                            PROVIDED - SPECIFY AND RE-EXECUTE)
           ISPEXEC SETMSG MSG(ISRZ001)
           EXIT CODE(12)
          END
   END
ISPEXEC VGET (RCUTLM&LEVEL,RCUTLB&LEVEL,RCUTRB&LEVEL) PROFILE
IF &LASTCC > 0 THEN +
  DO
           SET ZEDSMSG = &STR(LEVEL DOES NOT EXIST)
             SET ZEDLMSG = &STR(NO CUT LINES FOR LEVEL &LEVEL EXIST)
           ISPEXEC SETMSG MSG(ISRZ001)
           EXIT CODE(12)
        END
SET LINES = &&RCUTLM&LEVEL
SET LINESTOPASTE = &LINES
SET LBND = &&RCUTLB&LEVEL
SET LBND = &LBND
SET RBND = &&RCUTRB&LEVEL
SET RBND = &RBND
ISREDIT (LHBND,RHBND) = BOUNDS
IF &RC > 8 THEN +
  DO
     SET ZEDSMSG = &STR(NO PLACE TO PASTE)
     SET ZEDLMSG = &STR(YOU MUST +
                        USE "A" OR "B", LINE COMMANDS)
     ISPEXEC SETMSG MSG(ISRZ001)
     EXIT CODE(12)
   END
 CONTROL ASIS
 IF &RC = 4 THEN +
 DO
   ISREDIT (ILINE) = LINENUM .ZDEST
   IF &EMPTY = YES THEN +
    SET ILINE = 0
  SET INDEX = 0
 DO WHILE &INDEX < &LINESTOPASTE
 ISPEXEC VGET RCUT&LEVEL&EVAL(&INDEX+1) PROFILE
 ISREDIT LINE_AFTER &ILINE = < (LBND) (RCUT&LEVEL&EVAL(&INDEX+1)) >
   SET INDEX  = &INDEX + 1
   SET ILINE  = &ILINE + 1
 END
END
ELSE +
  DO
    ISREDIT (CROW,CPOS) = CURSOR
    IF &CPOS > 0 THEN +
     DO
      SET LPOS =&CPOS
      SET RPOS = &RBND-&LBND+1
     END
   ELSE +
      DO
        SET LPOS = &LBND
        SET RPOS = &RBND
      END
    SET BERR = NO
   IF &LHBND > &LPOS THEN +
     DO
     SET ZEDSMSG = &STR(ILLEGAL BOUNDS)
     SET ZEDLMSG = &STR(YOUR CURRENT LEFT BOUND IS GREATER THAN +
                        THE RELATIVE LBND )F &LPOS TO BE PASTED)
        SET BERR = YES
      END
    IF &BERR = YES THEN +
     DO
     ISPEXEC SETMSG MSG(ISRZ001)
     EXIT CODE(12)
 END
  ISREDIT (FIRST) = LINENUM .ZFRANGE
  ISREDIT (LAST) = LINENUM .ZLRANGE
  SET RANGE = &EVAL(&LAST-&FIRST+1)
  IF &RANGE < &LINESTOPASTE THEN +
         SET LINESTOPASTE = &RANGE
         SET PLACE = 0
         SET RINDEX = 0
     DO WHILE &RINDEX < &RANGE
       SET &INDEX = 0
        DO WHILE &INDEX < &LINESTOPASTE
          ISPEXEC VGET RCUT&LEVEL&EVAL(&INDEX+1) PROFILE
          SET CUT = &&RCUT&LEVEL&EVAL(&INDEX+1)
          SET CUT = &SYSNSUB(2,&CUT)
          ISREDIT (LINE) = LINE &EVAL(&FIRST+&PLACE)
          IF &LHBND < &LPOS THEN +
             SET NULINE = &SUBSTR(1:&LPOS-1,&NRSTR(&LINE))
          ELSE +
           SET NULINE = &Z
          SET NULINE = &NRSTR(&NULINE)&NRSTR(&CUT)
          IF &RHBND > &RPOS THEN +
            SET NULINE = &NRSTR(&NULINE)+
             &SUBSTR(&LENGTH(&NRSTR(&NULINE))+1:&RHBND,&NRSTR(&LINE))
          ISREDIT LINE &EVAL(&FIRST+&PLACE) = (NULINE)
          SET INDEX = &INDEX +1
          SET PLACE = &PLACE +1
       END
        SET RINDEX = &RINDEX + &LINESTOPASTE
        IF &RINDEX + &LINESTOPASTE > &RANGE THEN +
          SET LINESTOPASTE = &RANGE - &RINDEX
      END
   END
