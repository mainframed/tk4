/* ----------------------------- PARA ------------------------------ */
/* ================================================================= */
/*                HOUSTON INFORMATION PROCESSING CENTER              */
/*                  OPERATING SYSTEMS SOFTWARE GROUP                 */
/* ================================================================= */
/*                                                                   */
/*                                PARA                               */
/*                        PARAGRAPH REFORMATTER                      */
/*                                                                   */
/*+ PARA IS AN EDIT MACRO THAT REFORMATS TEXT PARAGRAPHS.            */
/* ITS  OPERATING   PARAMETERS   ARE   SPECIFIED   BY  KEYWORD=VALUE */
/* COMBINATIONS AND/OR KEYWORDS.  EXAMPLE:                           */
/*         PARA OL=13 NL=14 NJ                                       */
/*                                                                   */
/* THESE PARA PARAMETERS WILL BE REMEMBERED THROUGHOUT A SESSION; NO */
/* RETYPING UNLESS YOU WANT TO CHANGE A PARAMETER:                   */
/*  OL=NN DEFINES PARAGRAPH'S OLD LEFT MARGIN                        */
/*  NL=NN DEFINES PARAGRAPH'S NEW LEFT MARGIN                        */
/*  OR=NN DEFINES PARAGRAPH'S OLD RIGHT MARGIN                       */
/*  NR=NN DEFINES PARAGRAPH'S NEW RIGHT MARGIN                       */
/*  I=NN  DEFINES PARAGRAPH'S INDENTATION OF FIRST LINE              */
/*  D     MEANS DOUBLE SPACE AT END OF SENTENCE                      */
/*  ND    MEANS NO DOUBLE SPACE AT END OF SENTENCE (SINGLE SPACE)    */
/*  J     MEANS RIGHT JUSTIFICATION OF PARAGRAPH                     */
/*  NJ    MEANS NO RIGHT JUSTIFICATION OF PARAGRAPH                  */
/*                                                                   */
/* THESE PARA PARAMETERS ARE IN EFFECT FOR ONE EXECUTION ONLY:       */
/*  C     MEANS CENTERING OF PARAGRAPH                               */
/*  NC    MEANS NO CENTERING OF PARAGRAPH                            */
/*  ?     MEANS SHOW PARAMETER VALUES VIA MSGLINE                    */
/*  HELP  MEANS DISPLAY HELP INFORMATION                             */
/*  TEST  MEANS TRACE THE EXECUTION OF PARA ON THE USER'S CONSOLE    */
/*  RH    MEANS REMOVE WORD HYPHENATION                              */
/*  LC    MEANS CHANGE TO LOWER CASE                                 */
/*  PROF  MEANS STORE PARA PARAMETERS IN YOUR PROFILE DSN            */
/*  SHAR  MEANS STORE PARA PARAMETERS IN SHARED VARIABLE POOL        */
/*                                                                   */
/* ================================================================= */
/*                          MODIFICATION LOG                         */
/*   DATE     AUTHOR             DESCRIPTION                         */
/* 09/17/86 M. G. BERRYHILL    AUTHOR                                */
/* 09/29/86 M. G. BERRYHILL    ADD RH, PROF PARAMETERS               */
/* 10/01/86 M. G. BERRYHILL    FIX ADJUST VALUES                     */
/* 10/16/86 M. G. BERRYHILL    SPEEDUP MODS, FIX CENTERING FUNCTION  */
/* 10/29/86 M. G. BERRYHILL    ADD LC, FIX CENTERING FUNCTION        */
/* ================================================================= */
 SET &STIME = &SYSTIME
 SET &SCPU  = &SYSCPU
 SET &SSRV  = &SYSSRV
 ISREDIT MACRO (P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12) NOPROCESS
/*********************************************************************/
/* PHASE 1: PROCESS PARAMETERS                                       */
/*********************************************************************/
/* PARA WILL STORE ITS VARIABLES  IN EITHER THE SHARED VARIABLE POOL */
/* (DEFAULT), OR IN THE  PROFILE  VARIABLE POOL.  A VARIABLE, PARAP, */
/* IN THE PROFILE VARIABLE POOL  "REMEMBERS"  THE USER'S CHOICE.  IF */
/* PARAP IS NOT FOUND,  THE  SHARED  VARIABLE  POOL IS ASSUMED.  THE */
/* PARA PARAMETERS ARE  GOTTEN  FROM  THE APPROPRIATE VARIABLE POOL. */
/* IF NOT FOUND, DEFAULTS ARE CREATED BASED ON DISPLAY COLUMNS.      */
 ISPEXEC VGET (PARAP) PROFILE
 IF &LASTCC ^= 0 THEN SET &PARAP = &STR(S)
 SET &POOL = &STR(SHARED)
 IF &STR(&PARAP) = &STR(P) THEN SET &POOL = &STR(PROFILE)
 ISPEXEC VGET (PARAOL,PARANL,PARAOR,PARANR,PARAD,PARAI,PARAJ) &POOL
 IF &LASTCC ^= 0 THEN +
  DO
   SET &PARAI = 0
   SET &PARAJ = &STR(J)
   SET &PARAD = &STR(D)
   ISREDIT (PARAOL,PARAOR) = DISPLAY_COLS
   SET &PARANL = &PARAOL
   SET &PARANR = &PARAOR
  END
 SET &PARAC = &STR(NC)
 SET &PARAL = &STR(NL)
 SET &PARAH = &STR(NH)
 SET &PARAQ = &STR(N?)
 SET &PARAR = &STR(KH)
 SET &PARAT = &STR(NT)
 ISREDIT (MAXCOL) = DATA_WIDTH
/* PROBLEM:  THE COLS LINE  COMMAND  DISPLAYS RECORD COLUMN NUMBERS, */
/* WHILE INTERNAL PARA PROCESSING  IS  BASED ON DATA COLUMN NUMBERS. */
/* IF NUMBER=ON, RECORD  COLUMN  NUMBERS  DO  NOT  MATCH DATA COLUMN */
/* NUMBERS FOR CERTAIN DATASET  TYPES  AND RECORD FORMATS.  SEE EDIT */
/* COMMAND IN THE  SPF/PDF  REFERENCE  MANUAL  FOR MORE INFORMATION. */
/* SINCE THE USER  WILL  BE  CODING  PARAMETERS  IN  TERMS OF RECORD */
/* COLUMN NUMBERS, AN ADJUSTMENT VALUE MUST BE CALCULATED.           */
 SET &ADJUST = 0
 ISREDIT (NUMPARM1,NUMPARM2) = NUMBER
 IF &STR(&NUMPARM1) = &STR(ON) THEN +
  DO
   IF &SUBSTR(9:13,&NUMPARM2) ^= &STR(COBOL) THEN +
    DO
     ISREDIT (FRECFM) = RECFM
     IF &STR(&FRECFM) = &STR(V) THEN SET &ADJUST = 8
    END
   ELSE SET &ADJUST = 6
  END
/* SCAN THE USER-CODED  PARAMETERS,  EXTRACTING VALUES AND ADJUSTING */
/* THE PARA OPERATING PARAMETERS.                                    */
 ISREDIT SCAN = OFF
 SET &L = &STR(&&P)
 ISREDIT SCAN = ON
 SET &S = 1
 DO WHILE (&S ^> 12)
  SET &PARM = &STR(&L&S)
  SET &S = &S + 1
  IF &STR(&PARM) ^= &STR() THEN +
   DO
    SET &PARMLEN = &LENGTH(&STR(&PARM))
    SET &KEYLEN = &PARMLEN
    IF &KEYLEN > 3 THEN SET &KEYLEN = 3
    SET &KEYWORD = &SUBSTR(1:&KEYLEN,&PARM)
    IF &KEYLEN > 2 THEN SET &KEYLEN = 2
    SET &IKEY = &SUBSTR(1:&KEYLEN,&PARM)
    IF &STR(&KEYWORD) = &STR(NL=) THEN +
     DO
      IF &PARMLEN < 4 THEN GOTO MSG1
      SET &PARANL = &SUBSTR(4:&PARMLEN,&PARM)
      IF &DATATYPE(&PARANL) ^= NUM THEN GOTO MSG1
      SET &PARANL = &PARANL - &ADJUST
      IF &PARANL < 1 THEN GOTO MSG1
      IF &PARANL > &MAXCOL THEN GOTO MSG1
     END
    ELSE IF &STR(&KEYWORD) = &STR(NR=) THEN +
     DO
      IF &PARMLEN < 4 THEN GOTO MSG1
      SET &PARANR = &SUBSTR(4:&PARMLEN,&PARM)
      IF &DATATYPE(&PARANR) ^= NUM THEN GOTO MSG1
      SET &PARANR = &PARANR - &ADJUST
      IF &PARANR < 1 THEN GOTO MSG1
      IF &PARANR > &MAXCOL THEN GOTO MSG1
     END
    ELSE IF &STR(&PARM) = &STR(?) THEN SET &PARAQ = &STR(?)
    ELSE IF &STR(&IKEY) = &STR(I=) THEN +
     DO
      IF &PARMLEN < 3 THEN GOTO MSG1
      SET &PARAI = &SUBSTR(3:&PARMLEN,&PARM)
      IF &DATATYPE(&PARAI) ^= NUM THEN GOTO MSG1
     END
    ELSE IF &STR(&KEYWORD) = &STR(OL=) THEN +
     DO
      IF &PARMLEN < 4 THEN GOTO MSG1
      SET &PARAOL = &SUBSTR(4:&PARMLEN,&PARM)
      IF &DATATYPE(&PARAOL) ^= NUM THEN GOTO MSG1
      SET &PARAOL = &PARAOL - &ADJUST
      IF &PARAOL < 1 THEN GOTO MSG1
      IF &PARAOL > &MAXCOL THEN GOTO MSG1
     END
    ELSE IF &STR(&KEYWORD) = &STR(OR=) THEN +
     DO
      IF &PARMLEN < 4 THEN GOTO MSG1
      SET &PARAOR = &SUBSTR(4:&PARMLEN,&PARM)
      IF &DATATYPE(&PARAOR) ^= NUM THEN GOTO MSG1
      SET &PARAOR = &PARAOR - &ADJUST
      IF &PARAOR < 1 THEN GOTO MSG1
      IF &PARAOR > &MAXCOL THEN GOTO MSG1
     END
    ELSE IF &STR(&PARM) = &STR(NJ) THEN SET &PARAJ = &STR(NJ)
    ELSE IF &STR(&PARM) = &STR(J) THEN SET &PARAJ = &STR(J)
    ELSE IF &STR(&PARM) = &STR(ND) THEN SET &PARAD = &STR(ND)
    ELSE IF &STR(&PARM) = &STR(D) THEN SET &PARAD = &STR(D)
    ELSE IF &STR(&PARM) = &STR(NC) THEN SET &PARAC = &STR(NC)
    ELSE IF &STR(&PARM) = &STR(C) THEN SET &PARAC = &STR(C)
    ELSE IF &STR(&PARM) = &STR(HELP) THEN SET &PARAH = &STR(H)
    ELSE IF &STR(&PARM) = &STR(TEST) THEN SET &PARAT = &STR(T)
    ELSE IF &STR(&PARM) = &STR(RH) THEN SET &PARAR = &STR(RH)
    ELSE IF &STR(&PARM) = &STR(LC) THEN SET &PARAL = &STR(LC)
    ELSE IF &STR(&PARM) = &STR(PROF) THEN SET &PARAP = &STR(P)
    ELSE IF &STR(&PARM) = &STR(SHAR) THEN SET &PARAP = &STR(S)
    ELSE GOTO MSG1
   END
  ELSE SET &S = 13
 END
 SET &PARM = &STR(I,NL CONFLICT)
 SET &P1 = &PARANL + &PARAI
 IF &P1 < 1 THEN GOTO MSG1
 IF &P1 > &MAXCOL THEN GOTO MSG1
 SET &PARM = &STR(NL,NR CONFLICT)
 IF &PARANL ^< &PARANR THEN GOTO MSG1
 SET &PARM = &STR(OL,OR CONFLICT)
 IF &PARAOL ^< &PARAOR THEN GOTO MSG1
 ISPEXEC VPUT (PARAP) PROFILE
 SET &POOL = &STR(SHARED)
 IF &STR(&PARAP) = &STR(P) THEN SET &POOL = &STR(PROFILE)
 ISPEXEC VPUT (PARAOL,PARANL,PARAOR,PARANR,PARAD,PARAI,PARAJ) &POOL
 SET &MAXLEN = &PARANR - &PARANL + 1
 SET &FUNC = &STR(1)
 IF &STR(&PARAC) = &STR(C) THEN SET &FUNC = &STR(2)
 IF &STR(&PARAH) = &STR(H) THEN SET &FUNC = &STR(3)
 IF &STR(&PARAQ) = &STR(?) THEN SET &FUNC = &STR(4)
 IF &STR(&PARAT) = &STR(T) THEN +
  CONTROL MSG LIST PROMPT CONLIST SYMLIST
 CONTROL ASIS
 ISREDIT (STATUS) = USER_STATE
 ISREDIT CAPS = OFF
/*********************************************************************/
/* PHASE   2, FUNCTION 1: REFORMAT PARAGRAPH                         */
/*********************************************************************/
/*                                                                   */
/* FUNCTION 1: REFORMAT PARAGRAPH                                    */
/* SECTION  1: READ LINES, EXTRACT RIGHT MARGINS, WORDS, AND LEFT    */
/*             MARGINS.                                              */
/*                                                                   */
/* INITIALIZATION                                                    */
 IF &STR(&FUNC) = &STR(1) THEN +
  DO
   ISREDIT PROCESS RANGE Z
   IF &LASTCC > 0 THEN GOTO MSG2
   ISREDIT (FLNUM) = LINENUM .ZFRANGE
   ISREDIT (LLNUM) = LINENUM .ZLRANGE
   ISREDIT LABEL &FLNUM = .BEGINC
   ISREDIT LABEL &LLNUM = .ENDC
   SET &BEGINL = &STR(.BEGINC)
   SET &ENDL = &STR(.ENDC)
   ISREDIT C X'50' X'FA' &BEGINL &ENDL ALL
   ISREDIT C X'7D' X'FB' &BEGINL &ENDL ALL
   SET &ILCNT = &LLNUM - &FLNUM + 1
   SET &IWCNT = 0
   ISPEXEC VGET (ZUSER)
   ISPEXEC TBCREATE &ZUSER.W NAMES(WORD,WORDLEN) NOWRITE
   IF &LASTCC ^= 0 THEN +
    DO
     ISPEXEC TBEND &ZUSER.W
     ISPEXEC TBCREATE &ZUSER.W NAMES(WORD,WORDLEN) NOWRITE
    END
   ISPEXEC TBCREATE &ZUSER.L NAMES(LMARGIN,RMARGIN,LNUM) NOWRITE
   IF &LASTCC ^= 0 THEN +
    DO
     ISPEXEC TBEND &ZUSER.L
     ISPEXEC TBCREATE &ZUSER.L NAMES(LMARGIN,RMARGIN,LNUM) NOWRITE
    END
   SET &LPAD = &STR()
   SET &LSTOP = &PARANL - 1
   IF &PARAOL < &PARANL THEN +
    DO
     SET &LSTOP = &PARAOL - 1
     SET &S = 0
     SET &L = &PARANL - &PARAOL
     DO WHILE (&S < &L)
      SET &S = &S + 1
      SET &LPAD = &STR(&LPAD )
     END
    END
   SET &RPAD = &STR()
   SET &RSTOP = &PARANR + 1
   IF &PARAOR > &PARANR THEN +
    DO
     SET &RSTOP = &PARAOR + 1
     SET &S = 0
     SET &L = &PARAOR - &PARANR
     DO WHILE (&S < &L)
      SET &S = &S + 1
      SET &RPAD = &STR(&RPAD )
     END
    END
   SET &WLNUM = &FLNUM
   DO WHILE (&WLNUM ^> &LLNUM)
    ISREDIT (WLINE) = LINE &WLNUM
    SET &LNUM = &WLNUM
    SET &WLNUM = &WLNUM + 1
    SET &LMARGIN = &STR()
    IF &LSTOP > 0 THEN SET &LMARGIN = &SUBSTR(1:&LSTOP,&WLINE)
    SET &LMARGIN = &STR(&LMARGIN&LPAD)
    SET &RMARGIN = &STR()
    IF &RSTOP <= &MAXCOL THEN +
     SET &RMARGIN = &SUBSTR(&RSTOP:&MAXCOL,&WLINE)
    ISPEXEC TBADD &ZUSER.L
    SET &S = &PARAOL
    DO WHILE (&S ^> &PARAOR)
     SET &TS = &SUBSTR(&S,&WLINE)
     DO WHILE (&STR(&TS) = &STR( ))
      SET &S = &S + 1
      IF &S ^> &PARAOR THEN SET &TS = &SUBSTR(&S,&WLINE)
      ELSE SET &TS = &STR(X)
     END
     IF &S ^> &PARAOR THEN +
      DO
       SET &SOW = &S
       DO WHILE (&STR(&TS) ^= &STR( ))
        SET &S = &S + 1
        IF &S ^> &PARAOR THEN SET &TS = &SUBSTR(&S,&WLINE)
        ELSE SET &TS = &STR( )
       END
       SET &WORD = &SUBSTR(&SOW:&S-1,&WLINE)
       SET &WORDLEN = &LENGTH(&STR(&WORD))
       ISPEXEC TBADD &ZUSER.W
       SET &IWCNT = &IWCNT + 1
      END
    END
   END
/*                                                                   */
/* FUNCTION 1: REFORMAT PARAGRAPH                                    */
/* SECTION  2: MANIPULATE EXTRACTED WORDS AND LEFT MARGINS           */
/*                                                                   */
/* IF DESIRED, REMOVE HYPHENS AND REBUILD WORD. WHY REMOVE HYPHENS?  */
/* SUPPOSE NL/NR MISCODED PREVIOUSLY, TOO SHORT; NEXT ROUTINE WOULD  */
/* HAVE SPLIT AND HYPHENATED WORDS PREVIOUSLY. THIS RECOVERS EASILY. */
   IF &STR(&PARAR) = &STR(RH) THEN +
    DO
     ISPEXEC TBTOP &ZUSER.W
     SET &EOTWRD = 0
     ISPEXEC TBSKIP &ZUSER.W
     IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
     DO WHILE (&EOTWRD = 0)
      IF &WORDLEN > 1 THEN +
       DO
        SET &P1 = &SUBSTR(&WORDLEN,&WORD)
        IF &STR(&P1) = &STR(-) THEN +
         DO
          SET &P2 = &WORDLEN - 1
          SET &P3 = &SUBSTR(1:&P2,&WORD)
          ISPEXEC TBSKIP &ZUSER.W
          IF &LASTCC = 0 THEN +
           DO
            SET &WORD = &STR(&P3&WORD)
            SET &WORDLEN = &WORDLEN + &P2
            ISPEXEC TBPUT &ZUSER.W
            ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
            ISPEXEC TBDELETE &ZUSER.W
            SET &IWCNT = &IWCNT - 1
            ISPEXEC TBSKIP &ZUSER.W
           END
          ELSE SET &EOTWRD = 1
         END
        ELSE +
         DO
          ISPEXEC TBSKIP &ZUSER.W
          IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
         END
       END
      ELSE +
       DO
        ISPEXEC TBSKIP &ZUSER.W
        IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
       END
     END
     SET &EOTWRD = 0
     ISPEXEC TBBOTTOM &ZUSER.W
     IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
     DO WHILE (&EOTWRD = 0)
      IF &WORDLEN > 1 THEN +
       DO
        SET &P1 = &SUBSTR(1,&WORD)
        IF &STR(&P1) = &STR(-) THEN +
         DO
          SET &P2 = &WORDLEN - 1
          SET &P3 = &SUBSTR(2:&WORDLEN,&WORD)
          ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
          IF &LASTCC = 0 THEN +
           DO
            SET &WORD = &STR(&WORD&P3)
            SET &WORDLEN = &WORDLEN + &P2
            ISPEXEC TBPUT &ZUSER.W
            ISPEXEC TBSKIP &ZUSER.W
            ISPEXEC TBDELETE &ZUSER.W
            SET &IWCNT = &IWCNT - 1
            ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
           END
          ELSE SET &EOTWRD = 1
         END
        ELSE +
         DO
          ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
          IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
         END
       END
      ELSE +
       DO
        ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
        IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
       END
     END
    END
/* IF A WORD WON'T FIT BETWEEN NL AND NR, SPLIT AND HYPHENATE IT.    */
/* ALSO, DOUBLE SPACE AT END OF SENTENCE.                            */
   SET &P1 = &STR(Y)
   ISPEXEC TBTOP &ZUSER.W
   SET &EOTWRD = 0
   ISPEXEC TBSKIP &ZUSER.W
   IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
   DO WHILE (&EOTWRD = 0)
    IF &STR(&PARAL) = &STR(LC) THEN +
     DO
      SET &WORD = &STR(&SYSLC(&WORD))
      IF &STR(&P1) = &STR(Y) THEN +
       DO
        SET &P1 = &STR(N)
        SET &P2 = &SYSCAPS(&SUBSTR(1,&WORD))
        SET &P3 = &STR()
        IF &WORDLEN > 1 THEN SET &P3 = &SUBSTR(2:&WORDLEN,&WORD)
        SET &WORD = &STR(&P2&P3)
       END
      ISPEXEC TBPUT &ZUSER.W
     END
    SET &P4 = &SUBSTR(&WORDLEN,&WORD)
    IF &STR(&P4) = &STR(.) OR &STR(&P4) = &STR(?) +
    OR &STR(&P4) = &STR(:) OR &STR(&P4) = &STR(!) +
    OR &STR(&P4) = &STR(") THEN +
     DO
      SET &P1 = &STR(Y)
      IF &STR(&P4) ^> &STR(") AND &STR(&PARAD) = &STR(D) THEN +
       DO
        SET &WORD = &STR(&WORD )
        SET &WORDLEN = &WORDLEN + 1
        IF &WORDLEN ^> &MAXLEN THEN ISPEXEC TBPUT &ZUSER.W
       END
     END
    IF &WORDLEN > &MAXLEN THEN +
     DO
      SET &P4 = &SUBSTR(&MAXLEN+1:&WORDLEN,&WORD)
      SET &P4 = &STR(-&P4)
      SET &WORDLEN = &MAXLEN
      SET &WORD = &SUBSTR(1:&MAXLEN,&WORD)
      ISPEXEC TBPUT &ZUSER.W
      SET &WORD = &STR(&P4)
      SET &WORDLEN = &LENGTH(&STR(&P4))
      ISPEXEC TBADD &ZUSER.W
      SET &IWCNT = &IWCNT + 1
      ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
     END
    ISPEXEC TBSKIP &ZUSER.W
    IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
   END
/* ADJUST LEFT MARGIN FOR INDENTATION                                 */
   ISPEXEC TBTOP &ZUSER.L
   ISPEXEC TBSKIP &ZUSER.L
   SET &IPAD = &STR()
   IF &PARAI > 0 THEN +
    DO
     SET &S = 0
     DO WHILE (&S < &PARAI)
      SET &S = &S + 1
      SET &IPAD = &STR(&IPAD )
     END
    END
   IF &PARAI < 0 THEN +
    DO
     SET &S = &PARANL + &PARAI - 1
     SET &LMARGIN = &SUBSTR(1:&S,&LMARGIN)
    END
   SET &LMARGIN = &STR(&LMARGIN&IPAD)
   ISPEXEC TBPUT &ZUSER.L
/*                                                                   */
/* FUNCTION 1: REFORMAT PARAGRAPH                                    */
/* SECTION  3: REBUILD PARAGRAPH                                     */
/*                                                                   */
/* READ LINE TABLE AND WORD TABLE, MERGING BOTH TO CREATE NEW LINE   */
   SET &OLCNT  = 0
   SET &OWCNT  = 0
   SET &EOTLIN = 0
   SET &EOTWRD = 0
   ISPEXEC TBTOP &ZUSER.W
   ISPEXEC TBTOP &ZUSER.L
   ISPEXEC TBSKIP &ZUSER.L
   IF &LASTCC > 0 THEN SET &EOTLIN = 1
   DO WHILE (&EOTLIN = 0)
    SET &WORKSTG = &STR(&LMARGIN)
    SET &WORKLEN = &LENGTH(&STR(&WORKSTG))
    SET &EOSLIN = 0
    SET &WRDCNT = 0
    IF &EOTWRD = 0 THEN +
     DO
      ISPEXEC TBSKIP &ZUSER.W
      IF &LASTCC ^= 0 THEN +
       DO
        SET &EOTWRD = 1
        SET &EOSLIN = 1
       END
      DO WHILE (&EOSLIN = 0)
       SET &WORKLEN = &WORKLEN + &WORDLEN
       IF &WORKLEN < &PARANR THEN +
        DO
         SET &OWCNT  = &OWCNT  + 1
         SET &WRDCNT = &WRDCNT + 1
         SET &WORKLEN = &WORKLEN + 1
         SET &WORKSTG = &STR(&WORKSTG&WORD )
        END
       ELSE IF &WORKLEN > &PARANR THEN +
        DO
         SET &WORKLEN = &WORKLEN - &WORDLEN
         SET &EOSLIN = 1
         ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
        END
       ELSE IF &WORKLEN = &PARANR THEN +
        DO
         SET &OWCNT  = &OWCNT  + 1
         SET &WRDCNT = &WRDCNT + 1
         SET &WORKSTG = &STR(&WORKSTG&WORD)
         SET &EOSLIN = 1
        END
       IF &EOSLIN = 0 THEN +
        DO
         ISPEXEC TBSKIP &ZUSER.W
         IF &LASTCC ^= 0 THEN +
          DO
           SET &EOTWRD = 1
           SET &EOSLIN = 1
          END
        END
      END
     END
    IF &STR(&PARAJ) = &STR(J) THEN +
     IF &EOTWRD = 0 THEN +
      DO
       DO WHILE (&SUBSTR(&WORKLEN,&WORKSTG) = &STR( ))
        SET &WORKLEN = &WORKLEN - 1
        SET &WORKSTG = &SUBSTR(1:&WORKLEN,&WORKSTG)
       END
       SET &WRDCNT = &WRDCNT - 1
       IF &WRDCNT ^> 0 THEN +
        DO WHILE (&WORKLEN < &PARANR)
         SET &WORKLEN = &WORKLEN + 1
         SET &WORKSTG = &STR(&WORKSTG )
        END
       SET &SPCADD = &PARANR - &WORKLEN
       DO WHILE (&SPCADD > &WRDCNT)
        SET &S = &LENGTH(&STR(&LMARGIN)) + 1
        SET &P1 = 0
        DO WHILE (&P1 < &WRDCNT)
         DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
          SET &S = &S + 1
         END
         SET &P2 = &SUBSTR(1:&S-1,&WORKSTG)
         SET &P3 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
         SET &WORKLEN = &WORKLEN + 1
         SET &WORKSTG = &STR(&P2 &P3)
         SET &SPCADD = &SPCADD - 1
         DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
          SET &S = &S + 1
         END
         SET &P1 = &P1 + 1
        END
       END
       IF &SPCADD > 0 THEN +
        DO
         SET &S = &LENGTH(&STR(&LMARGIN)) + 1
         SET &P1 = (&WRDCNT - &SPCADD) / 2
         DO WHILE (&P1 > 0)
          DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
           SET &S = &S + 1
          END
          DO WHILE (&SUBSTR(&S,&WORKSTG)  = &STR( ))
           SET &S = &S + 1
          END
          SET &P1 = &P1 - 1
         END
         DO WHILE (&SPCADD > 0)
          DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
           SET &S = &S + 1
          END
          SET &P1 = &SUBSTR(1:&S-1,&WORKSTG)
          SET &P2 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
          SET &WORKLEN = &WORKLEN + 1
          SET &WORKSTG = &STR(&P1 &P2)
          SET &SPCADD = &SPCADD - 1
          DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
           SET &S = &S + 1
          END
         END
        END
      END
     ELSE +
      DO WHILE (&WORKLEN < &PARANR)
       SET &WORKLEN = &WORKLEN + 1
       SET &WORKSTG = &STR(&WORKSTG )
      END
    IF &STR(&PARAJ) = &STR(NJ) THEN +
     DO WHILE (&WORKLEN < &PARANR)
      SET &WORKLEN = &WORKLEN + 1
      SET &WORKSTG = &STR(&WORKSTG )
     END
    SET &WORKSTG = &STR(&WORKSTG&RPAD&RMARGIN)
    ISREDIT LINE &LNUM = (WORKSTG)
    SET &OLCNT = &OLCNT + 1
    ISPEXEC TBSKIP &ZUSER.L
    IF &LASTCC > 0 THEN SET &EOTLIN = 1
   END
/* LINE TABLE AT END; WORD TABLE NOT AT END. READ WORD TABLE, CREATE */
/* NEW LINES.                                                        */
   IF &EOTWRD = 0 THEN +
    DO
     SET &LMARGIN = &STR()
     SET &S = 0
     SET &LSTOP = &PARANL - 1
     DO WHILE (&S < &LSTOP)
      SET &LMARGIN = &STR(&LMARGIN )
      SET &S = &S + 1
     END
     SET &RMARGIN = &STR()
     SET &S = 0
     SET &RSTOP = &MAXCOL - &PARANR
     DO WHILE (&S < &RSTOP)
      SET &RMARGIN = &STR(&RMARGIN )
      SET &S = &S + 1
     END
     ISPEXEC TBSKIP &ZUSER.W
     IF &LASTCC ^= 0 THEN +
      DO
       SET &EOTWRD = 1
       SET &EOSLIN = 1
      END
     DO WHILE (&EOTWRD = 0)
      SET &WORKSTG = &STR(&LMARGIN)
      SET &WORKLEN = &LENGTH(&STR(&LMARGIN))
      SET &EOSLIN = 0
      SET &WRDCNT = 0
      DO WHILE (&EOSLIN = 0)
       SET &WORKLEN = &WORKLEN + &WORDLEN
       IF &WORKLEN < &PARANR THEN +
        DO
         SET &OWCNT  = &OWCNT + 1
         SET &WRDCNT = &WRDCNT + 1
         SET &WORKLEN = &WORKLEN + 1
         SET &WORKSTG = &STR(&WORKSTG&WORD )
        END
       ELSE IF &WORKLEN > &PARANR THEN +
        DO
         SET &WORKLEN = &WORKLEN - &WORDLEN
         SET &EOSLIN = 1
         ISPEXEC TBSKIP &ZUSER.W NUMBER(-1)
        END
       ELSE IF &WORKLEN = &PARANR THEN +
        DO
         SET &OWCNT  = &OWCNT + 1
         SET &WRDCNT = &WRDCNT + 1
         SET &WORKSTG = &STR(&WORKSTG&WORD)
         SET &EOSLIN = 1
        END
       IF &EOSLIN = 0 THEN +
        DO
         ISPEXEC TBSKIP &ZUSER.W
         IF &LASTCC ^= 0 THEN +
          DO
           SET &EOTWRD = 1
           SET &EOSLIN = 1
          END
        END
      END
      IF &STR(&PARAJ) = &STR(J) THEN +
       IF &EOTWRD = 0 THEN +
        DO
         DO WHILE (&SUBSTR(&WORKLEN,&WORKSTG) = &STR( ))
          SET &WORKLEN = &WORKLEN - 1
          SET &WORKSTG = &SUBSTR(1:&WORKLEN,&WORKSTG)
         END
         SET &WRDCNT = &WRDCNT - 1
         IF &WRDCNT = 0 THEN +
          DO WHILE (&WORKLEN < &PARANR)
           SET &WORKLEN = &WORKLEN + 1
           SET &WORKSTG = &STR(&WORKSTG )
          END
         SET &SPCADD = &PARANR - &WORKLEN
         DO WHILE (&SPCADD > &WRDCNT)
          SET &S = &LENGTH(&STR(&LMARGIN)) + 1
          SET &P1 = 0
          DO WHILE (&P1 < &WRDCNT)
           DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
            SET &S = &S + 1
           END
           SET &P2 = &SUBSTR(1:&S-1,&WORKSTG)
           SET &P3 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
           SET &WORKLEN = &WORKLEN + 1
           SET &WORKSTG = &STR(&P2 &P3)
           SET &SPCADD = &SPCADD - 1
           DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
            SET &S = &S + 1
           END
           SET &P1 = &P1 + 1
          END
         END
         IF &SPCADD > 0 THEN +
          DO
           SET &S = &LENGTH(&STR(&LMARGIN)) + 1
           SET &P1 = (&WRDCNT - &SPCADD) / 2
           DO WHILE (&P1 > 0)
            DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
             SET &S = &S + 1
            END
            DO WHILE (&SUBSTR(&S,&WORKSTG)  = &STR( ))
             SET &S = &S + 1
            END
            SET &P1 = &P1 - 1
           END
           DO WHILE (&SPCADD > 0)
            DO WHILE (&SUBSTR(&S,&WORKSTG) ^= &STR( ))
             SET &S = &S + 1
            END
            SET &P1 = &SUBSTR(1:&S-1,&WORKSTG)
            SET &P2 = &SUBSTR(&S:&WORKLEN,&WORKSTG)
            SET &WORKLEN = &WORKLEN + 1
            SET &WORKSTG = &STR(&P1 &P2)
            SET &SPCADD = &SPCADD - 1
            DO WHILE (&SUBSTR(&S,&WORKSTG) = &STR( ))
             SET &S = &S + 1
            END
           END
          END
        END
       ELSE +
        DO WHILE (&WORKLEN < &PARANR)
         SET &WORKLEN = &WORKLEN + 1
         SET &WORKSTG = &STR(&WORKSTG )
        END
      IF &STR(&PARAJ) = &STR(NJ) THEN +
       DO WHILE (&WORKLEN < &PARANR)
        SET &WORKLEN = &WORKLEN + 1
        SET &WORKSTG = &STR(&WORKSTG )
       END
      SET &WORKSTG = &STR(&WORKSTG&RMARGIN)
      ISREDIT LINE_AFTER &LLNUM = DATALINE (WORKSTG)
      SET &OLCNT  = &OLCNT + 1
      SET &LLNUM = &LLNUM + 1
      IF &EOTWRD = 0 THEN +
       DO
        ISPEXEC TBSKIP &ZUSER.W
        IF &LASTCC ^= 0 THEN SET &EOTWRD = 1
       END
     END
    END
   ISPEXEC TBCLOSE &ZUSER.L
   ISPEXEC TBCLOSE &ZUSER.W
   IF &IWCNT ^= &OWCNT THEN GOTO MSG3
   IF &ILCNT >  &OLCNT THEN GOTO MSG3
  END
/*********************************************************************/
/* PHASE 2, FUNCTION 2: CENTER PARAGRAPH                             */
/*********************************************************************/
 IF &STR(&FUNC) = &STR(2) THEN +
  DO
   ISREDIT PROCESS RANGE Z
   IF &LASTCC ^= 0 THEN GOTO MSG2
   ISREDIT (FLNUM) = LINENUM .ZFRANGE
   ISREDIT (LLNUM) = LINENUM .ZLRANGE
   SET &WLNUM = &FLNUM
   DO WHILE (&WLNUM ^> &LLNUM)
    ISREDIT (WLINE) = LINE &WLNUM
    SET &SOL = 0
    DO WHILE (&SOL = 0)
     SET &S = &PARAOL
     DO WHILE (&S ^> &PARAOR)
      IF &SUBSTR(&S,&WLINE) ^= &STR( ) THEN +
       DO
        SET &SOL = &S
        SET &S = &PARAOR
       END
      SET &S = &S + 1
     END
     IF &SOL = 0 THEN SET &SOL = -1
    END
    IF &SOL > 0 THEN +
     DO
      SET &EOL = 0
      DO WHILE (&EOL = 0)
       SET &S = &PARAOR
       DO WHILE (&S ^< &PARAOL)
        IF &SUBSTR(&S,&WLINE) ^= &STR( ) THEN +
         DO
          SET &EOL = &S
          SET &S = &PARAOL
         END
        SET &S = &S - 1
       END
      END
      SET &LMARGIN = &STR()
      SET &S = &SOL - 1
      IF &S > 0 THEN SET &LMARGIN = &SUBSTR(1:&S,&WLINE)
      SET &RMARGIN = &STR()
      SET &S = &EOL + 1
      IF &S ^> &MAXCOL THEN SET &RMARGIN = &SUBSTR(&S:&MAXCOL,&WLINE)
      SET &WORKSTG = &SUBSTR(&SOL:&EOL,&WLINE)
      SET &WORKLEN = &LENGTH(&STR(&WORKSTG))
      SET &P1 = &PARAOR - &PARAOL + 1
      IF &P1 > &WORKLEN THEN +
       DO
        SET &P2 = ((&P1 - &WORKLEN) / 2) + &PARAOL - 1
        SET &P3 = &LENGTH(&STR(&LMARGIN))
        SET &P4 = &P2 - &P3
        IF &P2 < &P3 THEN +
         IF &P2 > 0 THEN SET &LMARGIN = &SUBSTR(1:&P2,&LMARGIN)
         ELSE SET &LMARGIN = &STR()
        DO WHILE (&P2 > &P3)
         SET &LMARGIN = &STR(&LMARGIN )
         SET &P3 = &P3 + 1
        END
        SET &P3 = &LENGTH(&STR(&RMARGIN))
        IF &P4 > 0 THEN +
         IF &P3 > 0 THEN SET &RMARGIN = &SUBSTR(&P4+1:&P3,&RMARGIN)
         ELSE SET &RMARGIN = &STR()
        DO WHILE (&P4 < 0)
         SET &RMARGIN = &STR( &RMARGIN)
         SET &P4 = &P4 + 1
        END
        SET &WORKSTG = &STR(&LMARGIN&WORKSTG&RMARGIN)
        ISREDIT LINE &WLNUM = (WORKSTG)
       END
     END
    SET &WLNUM = &WLNUM + 1
   END
  END
/*********************************************************************/
/* PHASE 2, FUNCTION 3: HELP                                         */
/*********************************************************************/
 IF &STR(&FUNC) = &STR(3) THEN +
  DO
   ISREDIT (FLNUM) = DISPLAY_LINES
   SET &P1 = &STR(ZZ BLOCK COMMANDS DEFINE START AND END OF PARAGRAPH)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( SHAR  MEANS STORE PARA PARAMETERS)
   SET &P1 = &STR(&P1 IN SHARED VARIABLE POOL)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( PROF  MEANS STORE PARA PARAMETERS IN YOUR PROFILE)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( LC    MEANS CHANGE PARAGRAPH TO LOWER CASE)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( RH    MEANS REMOVE HYPHENS AND REJOIN WORDS)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( HELP  MEANS DISPLAY HELP INFORMATION)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( ?     MEANS QUERY CURRENT PARAMETER VALUES)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( NC    MEANS NO CENTERING OF PARAGRAPH)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( C     MEANS CENTERING OF PARAGRAPH)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( NJ    MEANS NO RIGHT MARGIN JUSTIFICATION)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( J     MEANS RIGHT MARGIN JUSTIFICATION)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( ND    MEANS NO DOUBLE SPACE AT END OF SENTENCE)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( D     MEANS DOUBLE SPACE AT END OF SENTENCE)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( I=NN  DEFINES PARAGRAPH'S FIRST LINE INDENTATION)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( NR=NN DEFINES PARAGRAPH'S NEW RIGHT MARGIN)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( NL=NN DEFINES PARAGRAPH'S NEW LEFT MARGIN)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( OR=NN DEFINES PARAGRAPH'S OLD RIGHT MARGIN)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR( OL=NN DEFINES PARAGRAPH'S OLD LEFT MARGIN)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR(PARA'S KEYWORD PARAMETERS ARE:)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
   SET &P1 = &STR(PARA IS AN IMPROVED TFLOW; A PARAGRAPH REFORMATTER)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
  END
/*********************************************************************/
/* PHASE 2, FUNCTION 4: DISPLAY CURRENT PARA PARAMETERS              */
/*********************************************************************/
 IF &STR(&FUNC) = &STR(4) THEN +
  DO
   ISREDIT (FLNUM) = DISPLAY_LINES
   SET &P1 = &PARAOL + &ADJUST
   SET &P2 = &PARANL + &ADJUST
   SET &P3 = &PARAOR + &ADJUST
   SET &P4 = &PARANR + &ADJUST
   SET &P5 = &STR(SHAR)
   IF &STR(&PARAP) = &STR(P) THEN SET &P5 = &STR(PROF)
   SET &P6 = &STR(PARA PARAMETERS AT &SYSSTIME: OL=&P1 NL=&P2 OR=&P3)
   SET &P6 = &STR(&P6 NR=&P4 I=&PARAI &PARAJ &PARAD &P5)
   ISREDIT LINE_AFTER &FLNUM = MSGLINE (P6)
  END
/*********************************************************************/
/* PHASE 3: END OF EXECUTION MESSAGE                                 */
/*********************************************************************/
 SET &ETIME = &SYSTIME
 SET &P1    = &SUBSTR(1:2,&ETIME)
 SET &P2    = &SUBSTR(4:5,&ETIME)
 SET &P3    = &SUBSTR(7:8,&ETIME)
 SET &P4    = &SUBSTR(1:2,&STIME)
 SET &P5    = &SUBSTR(4:5,&STIME)
 SET &P6    = &SUBSTR(7:8,&STIME)
 IF &P1 < &P4 THEN SET &P1 = &P1 + 24
 SET &WTIME = ((&P1 - &P4) * 3600) + ((&P2 - &P5) * 60) + &P3 - &P6
 SET &ECPU  = &SYSCPU
 SET &P1    = &LENGTH(&STR(&ECPU))
 SET &P2    = &LENGTH(&STR(&SCPU))
 SET &P3    = &SUBSTR(1:&P1-3,&ECPU)
 SET &P4    = &SUBSTR(1:&P2-3,&SCPU)
 SET &P5    = &SUBSTR(&P1-1,&P1,&ECPU)
 SET &P6    = &SUBSTR(&P2-1,&P2,&SCPU)
 IF &P5 < &P6 THEN +
  DO
   SET &P5 = &P5 + 100
   SET &P3 = &P3 - 1
  END
 SET &P1 = &P3 - &P4
 SET &P2 = &P5 - &P6
 IF &P2 < 10 THEN SET &P2 = &STR(0&P2)
 SET &WCPU = &STR(&P1..&STR(&P2))
 SET &WSRV = &SYSSRV - &SSRV
 SET ZEDSMSG = &STR(PARA: NORMAL END)
 SET &P1 = &STR(PARA ENDED NORMALLY; STATISTICS:
 SET ZEDLMSG = &STR(&P1 TIME=&WTIME CPU=&WCPU SERVICE=&WSRV)
 ISPEXEC SETMSG MSG(ISRZ000)
 ISREDIT C X'FA' X'50' &BEGINL &ENDL ALL
 ISREDIT C X'FB' X'7D' &BEGINL &ENDL ALL
 ISREDIT RESET CHG
 ISREDIT USER_STATE = (STATUS)
 EXIT CODE(0)
/*********************************************************************/
/* ERROR MESSAGE ROUTINES                                            */
/*********************************************************************/
MSG1: SET ZEDSMSG = &STR(ERROR: &PARM)
 SET ZEDLMSG = &STR(INVALID KEYWORD PARAMETER OR KEYWORD VALUE)
 ISPEXEC SETMSG MSG(ISRZ001)
 EXIT CODE(16)
MSG2: SET &ZEDSMSG = &STR(ZZ LINE COMMANDS NEEDED)
 SET &ZEDLMSG = &STR(ZZ LINE COMMANDS MARK PARAGRAPH START AND END)
 ISPEXEC SETMSG MSG(ISRZ001)
 EXIT CODE(16)
MSG3: SET &P1 = &STR(PARA LOGIC ERROR! INPUT WORDS:&IWCNT LINES=&ILCNT)
 SET &P1 = &STR(&P1, OUTPUT WORDS=&OWCNT LINES=&OLCNT)
 ISREDIT LINE_AFTER &FLNUM = MSGLINE (P1)
 EXIT CODE(16)
