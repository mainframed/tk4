// EXEC ASMHCL
//C.SYSLIB DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//C.SYSIN DD *
 COPY $DOC
GETDSAB       AMODE    31
GETDSAB       RMODE    ANY
GETDSAB       CSECT
              BAKR     R14,0                * Load ESA Stack
              LR       R12,R15              * Establish Base
             USING     GETDSAB,R12
              BSM      R14,0                * Save mode
              B        GET_STOR             * Skip constants
              DC       C'GETDSAB_&SYSDATE._&SYSTIME.'
GET_STOR      STORAGE  OBTAIN,              * Get storage for save area+
               LENGTH=STORAGE_LEN,LOC=RES
              ST       R1,STORADDR          * Save for later
              LR       R13,R1               * Point R13 to save area   +
                                              even though we don't use +
                                              it someone might!
              XC       0(STORAGE_LEN,R13),0(R13)
              ST       R13,4(,R1)           * Save forward
              ST       R1,8(,R1)            * Backwards
              LR       R13,R1               * Point to 18F words
              MVC      4(4,R1),=C'F1SA'     * Storage macro
             USING     STORAGE,R13          * Talk to our storage area
*  Get 1st one...
FIRST_DSAB    GETDSAB FIRST,                                           +
               DSABPTR=DSABPTR,             * Storage area             +
               RSNCODE=RSNCODE,             * Reason code              +
               MF=(E,DSAB_LIST)             *
              ST     R15,DSAB_RC
              LTR    R15,R15                *
              BNZ    BAD_DSAB               * Write your own
              B      PROCESS_DSAB           *
              SPACE  2
NEXT_DSAB     GETDSAB NEXT,                                            +
               DSABPTR=DSABPTR,                                        +
               RSNCODE=RSNCODE,                                        +
               MF=(E,DSAB_LIST)
              ST     R15,DSAB_RC
              LTR    R15,R15                *
              BNZ    END_DSAB
PROCESS_DSAB  DS     0H
              L      R9,DSABPTR
             USING   DSAB,R9
              L      R8,DSABTIOT            * =A(TIOT)
             USING   TIOENTRY,R8            *
*
*  Users familiar with processing a TIOT entry can add their own
*  code here.  Usually, one could determine the DDNAME and then
*  use the TIOEJFCB to obtain the data set name.
*
              B      NEXT_DSAB              * Loop....
             DROP    R8
BAD_DSAB      DS     0H
END_DSAB      DS     0H
FINE          L        R2,STORADDR
              STORAGE  RELEASE,LENGTH=STORAGE_LEN,ADDR=(R2)
              PR       ,                    * Reload ESA STAX
STORADDR        DS       F
                LTORG
                DROP   ,
STORAGE         DSECT
SAVE_AREA       DS     18F
DSAB_RC         DS       F
                DS      0D
DSABPTR         DS       F
                GETDSAB MF=(L,DSAB_LIST) <<< LABEL
TIOT_ADDR       DS       F
RETCODE         DS       F
RSNCODE         DS       F
                DS      0D
STORAGE_LEN     EQU      *-STORAGE
                IHADSAB
                CVT DSECT=YES,LIST=NO
                PRINT OFF
                IEFJESCT
SIOT            DSECT
                IEFASIOT
JFCB            DSECT
                IEFJFCBN  LIST=YES
TIOT            DSECT
                IEFTIOT1
UCB             DSECT
                IEFUCBOB  PREFIX=YES,LIST=YES
                IEZJSCB
                IKJTCB
                YREGS
*---------------------------------------------------------------------*
*                                                                     *
*    Sys/Stat for MVS is an integrated ISPF MVS search and display    *
*    facility that uses the latest technology to improve systems      *
*    programmers productvity.  Please call for a no obligation        *
*    evaluation.                                                      *
*                                                                     *
*    Advent Software                                                  *
*    340 West Butterfield Road                                        *
*    Suite 4B                                                         *
*    Elmhurst, IL 60126                                               *
*    (708) 279-5449                                                   *
*                                                                     *
*---------------------------------------------------------------------*
                END
