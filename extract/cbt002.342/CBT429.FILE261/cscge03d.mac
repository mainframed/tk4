         TITLE 'SP1GE03D -   E  EXCEPTION MONITOR'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       SP1GE03D -       E  EXCEPTION MONITOR                     ***
***                                                                 ***
***       VERSION -        1.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SP RELEASE 1                         ***
***                                                                 ***
***       UPDATED -        06/15/81                                 ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*                  EXCEPTION MONITOR OUTPUT MESSAGES
*               ---------------------------------------
*
*
*
*
*   SYSTEM EXCEPTION MESSAGES
*   --------------------------------------
*
*   CHANNEL XX   XXX% BUSY  FOR XXXXX SEC
*   UUU VVVVVV   XXX% BUSY  FOR XXXXX SEC
*   UUU VVVVVV   NOT READY  FOR XXXXX SEC
*   EXCESS SYSTEM PAGING FOR    XXXXX SEC
*   LOCAL PAGE I/O DEGRADED FOR XXXXX SEC
*   WTO BUFFER SHORTAGE, WQE COUNT= XXXXX
*   SQA AVAIL= XXXXXK, CSA AVAIL= XXXXXK
*
*
*
*
*   JOB RESOURCE USAGE EXCEPTION MESSAGES
*   --------------------------------------
*
*   JJJJJJJJ POSSIBLE LOOP FOR  XXXXX SEC
*   JJJJJJJJ XXX% CPU FOR       XXXXX SEC
*   JJJJJJJJ ABEND IN PROGRESS  XXXXX SEC
*   JJJJJJJJ EXCESS SWAP COUNT = XXXXX
*   JJJJJJJJ XXXXX FRAMES FOR   XXXXX SEC
*
*
*
*
*   JOB WAIT EXCEPTION MESSAGES
*   --------------------------------------
*
*    ( NOTE -   A JOB IS CONSIDERED TO BE WAITING IF IT USES 0% CPU  )
*
*
*   JJJJJJJJ ENQ SYSDSN   WAIT  XXXXX SEC       ENQ CONFLICT
*   JJJJJJJJ I/O ON UUU   WAIT  XXXXX SEC       I/O PENDING
*   JJJJJJJJ ALLOC QUEUE  WAIT  XXXXX SEC       ALLOC QUEUE
*   JJJJJJJJ REPLY NN     WAIT  XXXXX SEC       REPLY PENDING
*   JJJJJJJJ SWAP RRRRRR  WAIT  XXXXX SEC       SWAPPED OUT
*
*      RRRRRR -     ( SWAP REASON CODES )
*                   LONGWT           LONG WAIT
*                   AUXSTOR          AUXILLARY STORAGE SHORTAGE
*                   REALSTR          REAL STORAGE SHORTAGE
*                   DETWAIT          MSO DETECTED WAIT
*                   REQUEST          REQUEST SWAP
*                   ENQEXC           ENQ EXCHANGE
*                   WORKEXC          WORKLOAD EXCHANGE
*                   UNILATR          UNILATERAL
*
*
*
*   ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND
*
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
CSCGE03D CSECT
         LR    R12,R15
         LA    R7,4095(0,R12)
         LA    R7,1(0,R7)
         USING CSCGE03D,R12,R7
         MODESET KEY=ZERO,MODE=SUP
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         L     R3,XAL
         LA    R3,0(0,R3)
         MVI   PARM,C'A'           ALL SCANS ACTIVE
         LTR   R3,R3               ANY PARM
         BZ    *+10                NO
         MVC   PARM(1),0(R3)       SET SCAN TYPE
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         EJECT
CSCSTART L     R4,16               CVT
         L     R4,604(0,R4)        RMCT
         MVC   WTOLIST(84),SRMOVLY
         L     R5,88(0,R4)         WAMT
         L     R1,THRTSOPG         TSO PERF GROUP NUMBER
         SLL   R1,2                TIMES 4
         L     R6,80(R1,R5)        WAMP OFFSET
         AR    R5,R6               WAMP ADDRESS
         SR    R14,R14
         L     R15,0(0,R5)         TOTAL ENDED TRANS
         LTR   R15,R15             ZERO TRANS
         BZ    NOTSO               YES, BYPASS 0C9
         L     R15,12(0,R5)        TOTAL ELAPSED TIME FOR ENDED TRANS
         D     R14,0(0,R5)         DIVIDE BY ENDED TRANSACTIONS
         SR    R14,R14
         D     R14,=F'1000'
         SPACE 1
NOTSO    CVD   R15,DOUBLE          AVG SECONDS RESPONSE TIME
         SRDL  R14,32
         D     R14,=F'10'
         CVD   R15,DOUBLEX
         MVC   WTOLIST+8(7),=X'402021204B2020'
         ED    WTOLIST+8(4),DOUBLE+6
         UNPK  WTOLIST+13(2),DOUBLEX+6(2)
         OI    WTOLIST+14,X'F0'
         SR    R1,R1
         IC    R1,392(0,R4)        LONG TERM CPU AVG        AXC-SP1
         CVD   R1,DOUBLE
         MVC   WTOLIST+25(4),=X'40212020'
         ED    WTOLIST+25(4),DOUBLE+6
         LH    R1,390(0,R4)        AVERAGE CPU              AXC-SP1
         CVD   R1,DOUBLE
         MVC   WTOLIST+38(4),=X'40212020'
         ED    WTOLIST+38(4),DOUBLE+6
         LH    R1,882(0,R4)        AVERAGE PAGING           AXC-SP1
         CVD   R1,DOUBLE
         MVC   WTOLIST+51(4),=X'40212020'
         ED    WTOLIST+51(4),DOUBLE+6
         LH    R1,870(0,R4)        AVERAGE UIC              AXC-SP1
         CVD   R1,DOUBLE
         MVC   WTOLIST+65(4),=X'40212020'
         ED    WTOLIST+65(4),DOUBLE+6
         LH    R1,878(0,R4)        AVERAGE ASMQ             AXC-SP1
         CVD   R1,DOUBLE
         MVC   WTOLIST+78(4),=X'40212020'
         ED    WTOLIST+78(4),DOUBLE+6
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              MCS ID OF REQUESTING CONSOLE
         SVC   35
         MVI   WTOLIST+4,C' '
         MVC   WTOLIST+5(79),WTOLIST+4
         MVC   WTOLIST(4),=X'00540100'
         L     R8,XAA              ASCB/OUCB INFO STORAGE
         USING JOBTABLE,R8
         XC    C1BSYCNT(4),C1BSYCNT
         XC    C2BSYCNT(4),C2BSYCNT
         XC    C3BSYCNT(4),C3BSYCNT
         XC    C4BSYCNT(4),C4BSYCNT
         XC    C5BSYCNT(4),C5BSYCNT
         XC    C6BSYCNT(4),C6BSYCNT
         XC    C7BSYCNT(4),C7BSYCNT
         XC    C8BSYCNT(4),C8BSYCNT
         XC    C9BSYCNT(4),C9BSYCNT
         XC    CABSYCNT(4),CABSYCNT
         XC    CBBSYCNT(4),CBBSYCNT
         XC    CCBSYCNT(4),CCBSYCNT
         XC    CDBSYCNT(4),CDBSYCNT
         XC    CEBSYCNT(4),CEBSYCNT
         XC    CFBSYCNT(4),CFBSYCNT
         BAL   R10,CHKWQE
         BAL   R10,CHKSQA
         BAL   R10,CHKPAG
         L     R3,THRSTIMR
         CLI   PARM,C'C'           CHANNEL AND DEVICE SCAN ELIMINATE
         BE    JOBOUT              YES
         CLI   PARM,C'D'           DEVICE SCAN ELIMINATE
         BE    *+8                 YES
         BAL   R10,CHKUCB          CLEAR UCB TABLE
         BAL   R10,CHNLOOP
         EJECT
JOBOUT   L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         B     JOBOUT2
         SPACE 1
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         L     R6,56(0,R5)         CSCB ADDR
         L     R9,144(0,R5)        LOAD OUCB ADDR
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         SPACE 1
JOBOUT2  LA    R4,4(0,R4)          INCR INTO ASVT
         CLC   1(3,R4),=F'0'       END OF ASVT
         BE    RETURN              YES, RETURN
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT2             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         EJECT
ASCBFORM LH    R1,36(0,R5)         ASID
         MH    R1,=H'48'           TABLE ENTRY LENGTH
         L     R8,XAA              JOBTABLE ADDR
         AR    R8,R1               JOBTABLE ENTRY ADDR THIS ASID
         LA    R1,=CL8'*MASTER*'
         CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BE    ASCBFRM1            YES
         L     R1,172(0,R5)        JOBNAME POINTER
         LTR   R1,R1               ZERO
         BNZ   ASCBFRM1            NO
         L     R1,176(0,R5)        STC/TSU NAME POINTER
         LTR   R1,R1               ZERO
         BNZ   ASCBFRM1            NO
         LA    R1,=CL8'*UNKNWN*'
         B     ASCBFRM1            NO
         SPACE 1
ASCBFRM0 XC    JOBFLAG(38),JOBFLAG CLEAR COUNTERS
         B     ASCBFRM2+12
         SPACE 1
ASCBFRM1 CLC   JOBNAME(8),0(R1)    JOB/STC/TSU NAME MATCH
         BE    ASCBFRM2            YES
         MVC   JOBNAME(8),0(R1)    JOB/STC/TSU NAME
         MVC   JOBASID(2),36(R5)   JOB/STC/TSU ASID
         XC    JOBFLAG(38),JOBFLAG CLEAR COUNTERS
         EJECT
ASCBFRM2 BAL   R10,CHKABN          CHECK FOR JOBS ABENDING
         BAL   R10,CHKFRM          CHECK FOR JOBS WITH HIGH FRAMES
         BAL   R10,CHKSWP          CHECK FOR JOBS WITH SWAP COUNTS
         LM    R14,R15,64(R5)      TCB TIME
         SRDL  R14,22
         LR    R1,R15
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R1,R15
         C     R1,JOBTIME          COMPARE PREVIOUS CPU TIME
         BE    ASCBFRM4            EQUAL, JOB WAITING
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         C     R1,JOBCPUT          COMPARE PREVIOUS CPU TIME
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         L     R15,JOBCPUT         LOAD PREVIOUS CPU TIME
         LTR   R15,R15             ANY PREVIOUS
         BNZ   *+8                 YES
         ST    R1,JOBCPUT          PREVIOUS = CURRENT
         L     R15,JOBTIME         LOAD PREVIOUS CPU TIME
         LTR   R15,R15             ANY PREVIOUS
         BNZ   *+8                 YES
         ST    R1,JOBTIME          PREVIOUS = CURRENT
         LR    R15,R1
         S     R15,JOBCPUT         SUB PREVIOUS CPU TIME
         S     R1,JOBTIME          SUB PREVIOUS CPU TIME
         ST    R15,SAVETIM1        SAVE DIFFERENCE
         ST    R1,SAVETIM2         SAVE DIFFERENCE
         XC    JOBWAIT(4),JOBWAIT  CLEAR WAIT COUNTER
         TIME  BIN
         L     R1,JOBCPUL          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBCPUL          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBCPUL          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BE    ASCBFRMA            YES
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         L     R15,SAVETIM1        LOAD DIFFERENCE
         LTR   R15,R15             NEGATIVE
         BM    ASCBFRM0            YES
         SR    R14,R14
         M     R14,=F'10'          PERCENT
         SR    R14,R14
         DR    R14,R1              PERCENT UTIL
         BAL   R10,CHKCPU          CHECK JOB CPU UTILIZATION LIMIT
         EJECT
ASCBFRMA TIME  BIN                 POTENTIAL LOOP
         L     R1,JOBLOOP          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBLOOP          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBLOOP          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R11               YES, NO LOOP YET
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         L     R15,SAVETIM2        LOAD DIFFERENCE
         LTR   R15,R15             NEGATIVE
         BM    ASCBFRM0            YES
         SR    R14,R14
         M     R14,=F'10'          PERCENT
         SR    R14,R14
         DR    R14,R1              PERCENT UTIL
         C     R15,THRLOOPP        OVER CPU PERCENT THRESHOLD
         BNL   *+18                YES
         XC    JOBLOOP(4),JOBLOOP
         XC    JOBTIME(4),JOBTIME
         BR    R11
         LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         LOOP SECONDS
         CVD   R15,DOUBLE
         C     R15,THRLOOPT        OVER LOOP THRESHOLD
         BCR   4,R11               NO
         CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BCR   8,R11               YES, NO LOOP CHECK
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BNE   *+10                JOB
         CLI   28(R6),X'01'        TSU OR STC
         BCR   7,R11               STC
         L     R1,108(0,R9)        EXCP COUNT
         L     R15,JOBEXCP         PREVIOUS EXCP COUNT
         ST    R1,JOBEXCP          SAVE PREVIOUS EXCP COUNT
         CR    R1,R15              COMPARE CURRENT TO PREVIOUS
         BL    ASCBFRM0            CURRENT LOWER,  STEP CHANGE
         BE    ASCBFRMC            NO EXCPS, POSSIBLE LOOP
         XC    JOBLOOP(4),JOBLOOP
         XC    JOBTIME(4),JOBTIME
         BR    R11
         SPACE 1
ASCBFRMC CLI   WJOB1,C' '          1ST PASS
         BNE   ASCBFRM3            NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'POSSIBLE LOOP FOR XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLE+5
         BR    R11
         EJECT
ASCBFRM3 MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'POSSIBLE LOOP FOR XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         SPACE 1
ASCBFRM4 TIME  BIN
         L     R1,JOBWAIT          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBWAIT          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBWAIT          INTERVAL TIME
         XC    JOBLOOP(4),JOBLOOP  CLEAR LOOP COUNTER
         XC    JOBCPUT(4),JOBCPUT  CLEAR CPU TIME ACCUM
         XC    JOBCPUL(4),JOBCPUL  CLEAR ELAPSED TIME ACCUM
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R11               YES, NO WAIT YET
         BM    ASCBFRM0            NEGATIVE, CLEAR COUNTERS
         LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         WAIT SECONDS
         CVD   R15,DOUBLE
         ST    R15,CURRWAIT
         LA    R3,WMSG1
         CLI   WJOB1,C' '          1ST PASS
         BE    ASCBFRM5            YES
         LA    R3,WMSG2
         EJECT
ASCBFRM5 MVC   0(12,R3),=CL12' '
         BAL   R10,CHKENQ          CHECK ENQ OUTSTANDING
         CLI   0(R3),C' '          ANY ENQS FOR THIS JOB
         BNE   ASCBFRM6            YES
         BAL   R10,CHKALC          CHECK ALLOCATION QUEUE
         CLI   0(R3),C' '          ANY ALLOC PENDING FOR THIS JOB
         BNE   ASCBFRM6            YES
         BAL   R10,CHKQIO          CHECK I/O OUTSTANDING
         CLI   0(R3),C' '          ANY I/O FOR THIS JOB
         BNE   ASCBFRM6            YES
         BAL   R10,CHKREP          CHECK REPLY OUTSTANDING
         CLI   0(R3),C' '          ANY REPLIES FOR THIS JOB
         BNE   ASCBFRM6            YES
         L     R1,CURRWAIT         CURRENT WAIT TIME
         C     R1,THRSWPWT         OVER SWAP WAIT THRESHOLD
         BCR   4,R11               NO
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BNE   *+10                JOB
         CLI   28(R6),X'01'        TSU OR STC
         BCR   7,R11               STC OR INIT
         BAL   R10,CHKSRC          CHECK SWAP REASON CODE
         CLI   0(R3),C'*'          EXCLUDED SRC
         BNE   *+10                NO
         MVI   0(R3),C' '
         BR    R11
         CLI   0(R3),C' '          ANY SRC FOR THIS JOB
         BNE   ASCBFRM6            YES
         MVC   0(12,R3),=12C'?'
         SPACE 1
ASCBFRM6 CLI   WJOB1,C' '          1ST TIME
         BNE   ASCBFRM7            NO, 2ND PASS
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1+12(16),=CL16' WAIT XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLE+5
         BR    R11
         SPACE 1
ASCBFRM7 MVC   WJOB2(8),JOBNAME
         MVC   WMSG2+12(16),=CL16' WAIT XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         EJECT
CHNLOOP  STIMER WAIT,DINTVL=THRINTVL
         LR    R4,R10
         CLI   PARM,C'D'           DEVICE SCAN ELIMINATE
         BE    *+8                 YES
         BAL   R10,CHKUCB1         CHECK BUSY UCBS
         LR    R10,R4
         SPACE 1
         TCH   CHAN1               TEST CHANNEL 01 BUSY
         L     R1,C1BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C1BSYCNT         SAVE BUSY COUNT
         TCH   CHAN2               TEST CHANNEL 02 BUSY
         L     R1,C2BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C2BSYCNT         SAVE BUSY COUNT
         TCH   CHAN3               TEST CHANNEL 03 BUSY
         L     R1,C3BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C3BSYCNT         SAVE BUSY COUNT
         TCH   CHAN4               TEST CHANNEL 04 BUSY
         L     R1,C4BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C4BSYCNT         SAVE BUSY COUNT
         TCH   CHAN5               TEST CHANNEL 05 BUSY
         L     R1,C5BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C5BSYCNT         SAVE BUSY COUNT
         TCH   CHAN6               TEST CHANNEL 06 BUSY
         L     R1,C6BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C6BSYCNT         SAVE BUSY COUNT
         TCH   CHAN7               TEST CHANNEL 07 BUSY
         L     R1,C7BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C7BSYCNT         SAVE BUSY COUNT
         TCH   CHAN8               TEST CHANNEL 08 BUSY
         L     R1,C8BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C8BSYCNT         SAVE BUSY COUNT
         EJECT
         TCH   CHAN9               TEST CHANNEL 09 BUSY
         L     R1,C9BSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,C9BSYCNT         SAVE BUSY COUNT
         TCH   CHAN10              TEST CHANNEL 10 BUSY
         L     R1,CABSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,CABSYCNT         SAVE BUSY COUNT
         TCH   CHAN11              TEST CHANNEL 11 BUSY
         L     R1,CBBSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,CBBSYCNT         SAVE BUSY COUNT
         TCH   CHAN12              TEST CHANNEL 12 BUSY
         L     R1,CCBSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,CCBSYCNT         SAVE BUSY COUNT
         TCH   CHAN13              TEST CHANNEL 13 BUSY
         L     R1,CDBSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,CDBSYCNT         SAVE BUSY COUNT
         TCH   CHAN14              TEST CHANNEL 14 BUSY
         L     R1,CEBSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,CEBSYCNT         SAVE BUSY COUNT
         TCH   CHAN15              TEST CHANNEL 15 BUSY
         L     R1,CFBSYCNT         LOAD CURRENT BUSY COUNT
         BC    1,CHNEND            END OF CHANNELS
         BC    13,*+8              NOT BUSY
         LA    R1,1(0,R1)          ADD 1 TO BUSY COUNT
         ST    R1,CFBSYCNT         SAVE BUSY COUNT
         EJECT
CHNEND   BCT   R3,CHNLOOP
         LR    R4,R10
         CLI   PARM,C'D'           DEVICE SCAN ELIMINATE
         BE    *+8                 YES
         BAL   R10,CHKUCB6         CHECK BUSY UCBS
         LR    R10,R4
         SR    R14,R14
         L     R15,C1BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C1BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C1BSYPCT
         SR    R14,R14
         L     R15,C2BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C2BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C2BSYPCT
         SR    R14,R14
         L     R15,C3BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C3BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C3BSYPCT
         SR    R14,R14
         L     R15,C4BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C4BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C4BSYPCT
         SR    R14,R14
         L     R15,C5BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C5BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C5BSYPCT
         EJECT
         SR    R14,R14
         L     R15,C6BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C6BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C6BSYPCT
         SR    R14,R14
         L     R15,C7BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C7BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C7BSYPCT
         SR    R14,R14
         L     R15,C8BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C8BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C8BSYPCT
         SR    R14,R14
         L     R15,C9BSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,C9BSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,C9BSYPCT
         SR    R14,R14
         L     R15,CABSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,CABSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,CABSYPCT
         EJECT
         SR    R14,R14
         L     R15,CBBSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,CBBSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,CBBSYPCT
         SR    R14,R14
         L     R15,CCBSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,CCBSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,CCBSYPCT
         SR    R14,R14
         L     R15,CDBSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,CDBSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,CDBSYPCT
         SR    R14,R14
         L     R15,CEBSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,CEBSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,CEBSYPCT
         SR    R14,R14
         L     R15,CFBSYCNT
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         L     R1,CFBSYPCT         CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+8                 NO
         LA    R1,30               FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,CFBSYPCT
         EJECT
CHKCHN1  LA    R3,C1BSYPCT         CHANNEL BUSY PCT
         LA    R4,C1BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH1LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH1BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'01'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C2BSYPCT         CHANNEL BUSY PCT
         LA    R4,C2BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH2LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH2BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'02'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C3BSYPCT         CHANNEL BUSY PCT
         LA    R4,C3BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH3LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH3BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'03'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C4BSYPCT         CHANNEL BUSY PCT
         LA    R4,C4BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH4LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH4BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'04'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C5BSYPCT         CHANNEL BUSY PCT
         LA    R4,C5BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH5LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH5BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'05'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C6BSYPCT         CHANNEL BUSY PCT
         LA    R4,C6BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH6LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH6BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'06'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C7BSYPCT         CHANNEL BUSY PCT
         LA    R4,C7BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH7LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH7BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'07'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,C8BSYPCT         CHANNEL BUSY PCT
         LA    R4,C8BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH8LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH8BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'08'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         EJECT
         LA    R3,C9BSYPCT         CHANNEL BUSY PCT
         LA    R4,C9BSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCH9LM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCH9BS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'09'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,CABSYPCT         CHANNEL BUSY PCT
         LA    R4,CABSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCHALM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCHABS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'10'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,CBBSYPCT         CHANNEL BUSY PCT
         LA    R4,CBBSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCHBLM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCHBBS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'11'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,CCBSYPCT         CHANNEL BUSY PCT
         LA    R4,CCBSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCHCLM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCHCBS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'12'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,CDBSYPCT         CHANNEL BUSY PCT
         LA    R4,CDBSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCHDLM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCHDBS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'13'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,CEBSYPCT         CHANNEL BUSY PCT
         LA    R4,CEBSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCHELM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCHEBS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'14'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         LA    R3,CFBSYPCT         CHANNEL BUSY PCT
         LA    R4,CFBSYTIM         CHANNEL BUSY TIME
         LA    R5,THRCHFLM         CHANNEL BUSY PERCENT LIMIT
         LA    R6,THRCHFBS         CHANNEL BUSY TIME THRESHOLD
         LA    R9,=C'15'           CHANNEL NUMBER
         BAL   R11,CHNDISP
         BR    R10
         EJECT
CHNDISP  L     R1,0(0,R3)
         C     R1,0(0,R5)          THRESHOLD REACHED
         BL    CHNDISP1            NO
         TIME  BIN
         L     R1,0(0,R4)          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,0(0,R4)          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,0(0,R4)          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R11               YES
         BP    CHNDISP2
         SPACE 1
CHNDISP1 XC    0(4,R4),0(R4)
         BR    R11
         SPACE 1
CHNDISP2 LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         L     R1,0(0,R3)          PERCENT BUSY
         CVD   R1,DOUBLE
         CVD   R15,DOUBLEX
         C     R15,0(0,R6)         CHANNEL BUSY TIME THRESHOLD REACHED
         BCR   4,R11               NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHNDISP3            NO, 2ND HALF
         MVC   WJOB1(38),=CL38'CHANNEL XX   XXX% BUSY  FOR XXXXX SEC'
         MVC   WJOB1+8(2),0(R9)    CHANNEL NUMBER
         MVC   WJOB1+12(4),=X'40202120'
         ED    WJOB1+12(4),DOUBLE+6
         MVC   WJOB1+27(6),=X'402020202120'
         ED    WJOB1+27(6),DOUBLEX+5
         BR    R11
         SPACE 1
CHNDISP3 MVC   WJOB2(38),=CL38'CHANNEL XX   XXX% BUSY  FOR XXXXX SEC'
         MVC   WJOB2+8(2),0(R9)    CHANNEL NUMBER
         MVC   WJOB2+12(4),=X'40202120'
         ED    WJOB2+12(4),DOUBLE+6
         MVC   WJOB2+27(6),=X'402020202120'
         ED    WJOB2+27(6),DOUBLEX+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         EJECT
CHKCPU   STM   R0,R15,SAVEREGS
         CVD   R15,DOUBLE
         C     R15,THRCPULP        OVER CPU PERCENT THRESHOLD
         BL    CHKCPU2             NO
         LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         LOOP SECONDS
         CVD   R15,DOUBLEX
         C     R15,THRCPULT        OVER CPU THRESHOLD
         BL    CHKCPU3             NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKCPU1             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28' XXX% CPU FOR     XXXXX SEC'
         MVC   WMSG1(4),=X'40202120'
         ED    WMSG1(4),DOUBLE+6
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLEX+5
         B     CHKCPU3
         SPACE 1
CHKCPU1  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28' XXX% CPU FOR     XXXXX SEC'
         MVC   WMSG2(4),=X'40202120'
         ED    WMSG2(4),DOUBLE+6
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLEX+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         B     CHKCPU3
         SPACE 1
CHKCPU2  XC    JOBCPUL(4),JOBCPUL
         XC    JOBCPUT(4),JOBCPUT
         SPACE 1
CHKCPU3  LM    R0,R15,SAVEREGS
         BR    R10
         EJECT
CHKPAG   L     R9,16               CVT
         L     R9,604(0,R9)        RMCT
         SR    R1,R1
         LH    R1,882(0,R9)        AVERAGE PAGING           AXC-SP1
         C     R1,THRPAGLM         OVER PAGING THRESHOLD
         BH    CHKPAG1             YES
         XC    PAGHITIM(4),PAGHITIM
         B     CHKPAG3             CHECK PAGE I/O
         SPACE 1
CHKPAG1  TIME  BIN
         L     R1,PAGHITIM         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,PAGHITIM         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,PAGHITIM         INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BZ    CHKPAG3             YES
         BP    CHKPAG2
         XC    PAGHITIM(4),PAGHITIM
         B     CHKPAG3             CHECK PAGE I/O
         SPACE 1
CHKPAG2  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         C     R15,THRPAGHI        PAGING HIGH TIME THRESHOLD REACHED
         BL    CHKPAG3             NO, CHECK PAGE I/O
         CVD   R15,DOUBLE
         CLI   WJOB1,C' '
         BNE   CHKPAG2A
         MVC   WJOB1(38),=CL38'EXCESS SYSTEM PAGING FOR    XXXXX SEC'
         MVC   WJOB1+27(6),=X'402020202120'
         ED    WJOB1+27(6),DOUBLE+5
         B     CHKPAG3
         SPACE 1
CHKPAG2A MVC   WJOB2(38),=CL38'EXCESS SYSTEM PAGING FOR    XXXXX SEC'
         MVC   WJOB2+27(6),=X'402020202120'
         ED    WJOB2+27(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         SPACE 1
CHKPAG3  L     R1,16               CVT
         L     R1,704(0,R1)        ASMVT
         L     R1,8(0,R1)          PART
         LA    R1,80(0,R1)         PART ENTRIES
         SPACE 1
CHKPAG4  TM    8(R1),X'E0'
         BZ    CHKPAG6
         SPACE 1
CHKPAG5  LA    R1,64(0,R1)         NEXT PART ENTRY
         CLI   8(R1),X'00'         END OF PART
         BE    CHKPAG5A            YES, EXIT
         TM    9(R1),X'80'         NOT IN USE
         BO    CHKPAG5             YES, GET NEXT
         B     CHKPAG4
         SPACE 1
CHKPAG5A XC    PAGIOTIM(4),PAGIOTIM
         BR    R10
         EJECT
CHKPAG6  L     R14,56(0,R1)       PARERQTM -   BURST COMPUTATION VALUE
         SRL   R14,8              DIVIDE BY 256
         CVD   R14,DOUBLE
         C     R14,THRPAGTM       OVER PAGE I/O AVG SERV TIME THRESH
         BH    CHKPAG7            YES
         B     CHKPAG5
         SPACE 1
CHKPAG7  TIME  BIN
         L     R1,PAGIOTIM         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,PAGIOTIM         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,PAGIOTIM         INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R10               YES
         BP    CHKPAG8
         XC    PAGIOTIM(4),PAGIOTIM
         BR    R10
         SPACE 1
CHKPAG8  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         C     R15,THRPAGIO        PAGE I/O HIGH TIME THRESHOLD REACHED
         BCR   4,R10               NO, EXIT
         CVD   R15,DOUBLE
         CLI   WJOB1,C' '
         BNE   CHKPAG8A
         MVC   WJOB1(38),=CL38'LOCAL PAGE I/O DEGRADED FOR XXXXX SEC'
         MVC   WJOB1+27(6),=X'402020202120'
         ED    WJOB1+27(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKPAG8A MVC   WJOB2(38),=CL38'LOCAL PAGE I/O DEGRADED FOR XXXXX SEC'
         MVC   WJOB2+27(6),=X'402020202120'
         ED    WJOB2+27(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKABN   L     R1,16              CVT
         L     R1,640(0,R1)       FIRST VALID MAJOR QCB
         B     CHKABN1+4          1ST MAJOR PROCESS
         SPACE 1
CHKABN1  L     R1,0(0,R1)         NEXT MAJOR
         LTR   R1,R1              EXIST
         BCR   8,R10              NO, END OF QCBS
         CLC   16(8,R1),=CL8'SYSIEA01'  ABEND QCB
         BNE   CHKABN1            NO, NEXT MAJOR
         L     R14,8(0,R1)        1ST MINOR
         LTR   R14,R14            EXIST
         BCR   8,R10              NO
         B     CHKABN3
         SPACE 1
CHKABN2  L     R14,0(0,R14)       NEXT MINOR QCB
         LTR   R14,R14            EXIST
         BCR   8,R10              NO
         SPACE 1
CHKABN3  L     R15,8(0,R14)       1ST QEL
         SPACE 1
CHKABN4  LTR   R15,R15            EXIST
         BZ    CHKABN2            NO
         CLC   JOBASID(2),14(R15) ASID MATCH
         BE    CHKABN5            YES, JOB ABENDING
         L     R15,0(0,R15)       NEXT QEL
         LA    R15,0(0,R15)
         LTR   R15,R15            EXIST
         BZ    CHKABN2            NO
         B     CHKABN4
         SPACE 1
CHKABN5  TIME  BIN
         L     R1,JOBABEND         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBABEND         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBABEND         INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R10               YES
         BP    CHKABN7
         SPACE 1
CHKABN6  XC    JOBABEND(4),JOBABEND
         BR    R10
         SPACE 1
CHKABN7  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         CVD   R15,DOUBLEX
         C     R15,THRABEND        TIME THRESHOLD REACHED
         BCR   4,R10               NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKABN8             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'ABEND IN PROGRESS XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLEX+5
         BR    R10
         SPACE 1
CHKABN8  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'ABEND IN PROGRESS XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLEX+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKREP   L     R1,CURRWAIT         CURRENT WAIT TIME
         C     R1,THRREPWT         OVER REPLY WAIT THRESHOLD
         BCR   4,R10               NO
         L     R1,16              CVT
         L     R1,100(0,R1)       UCM BASE
         L     R1,28(0,R1)        1ST ORE
         LA    R1,0(0,R1)
         SPACE 1
CHKREP1  LTR   R1,R1              ANY OUTSTANDING REPLIES
         BCR   8,R10              NO
         CLC   JOBASID(2),24(R1)  ASID MATCH
         BE    CHKREP2            YES
         L     R1,0(0,R1)         NEXT ORE
         LA    R1,0(0,R1)
         B     CHKREP1
         SPACE 1
CHKREP2  MVC   0(12,R3),=CL12'REPLY '
         MVC   7(2,R3),4(R1)      REPLY ID
         BR    R10
         SPACE 5
CHKSRC   LA    R1,SRCTAB
         SR    R15,R15
         IC    R15,41(0,R9)        SWAP REASON CODE
         CH    R15,=H'13'          MAX SWAP REASON CODE
         BCR   2,R10               OVER MAX
         MH    R15,=H'12'
         LA    R1,0(R15,R1)        SWAP REASON CODE OUTPUT
         MVC   0(12,R3),0(R1)
         BR    R10
         EJECT
CHKFRM   CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BCR   8,R10               YES, NO FRAME CHECK
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BNE   *+10                JOB
         CLI   28(R6),X'01'        TSU OR STC
         BCR   7,R10               STC
         L     R1,16              LOAD CVT ADDR
         L     R1,356(0,R1)       LOAD PVT ADDR
         L     R15,12(0,R1)       PFT APPARENT ADDR
         AH    R15,16(0,R1)       PFT ACTUAL ADDR
         SR    R14,R14             INDEX
         IC    R14,18(0,R1)           TO
         SLL   R14,8                      END OF
         IC    R14,19(0,R1)                 PFT
         SH    R14,16(0,R1)
         SRL   R14,4               DIVIDE BY 16
         SR    R1,R1               CLEAR FRAME COUNT
         SPACE 1
CHKFRM1  CLC   0(2,R15),JOBASID    ASID MATCH
         BNE   CHKFRM2             NO
         LA    R1,1(0,R1)          ADD 1 TO FRAME COUNT
         SPACE 1
CHKFRM2  LA    R15,16(0,R15)       NEXT PFT
         BCT   R14,CHKFRM1         PROCESS NEXT
         L     R15,JOBFRCNT        JOB FRAME COUNT  (WEIGHTED AVG)
         XC    JOBFRCNT(4),JOBFRCNT
         C     R1,THRFRAME         THRESHOLD REACHED
         BL    CHKFRM3             NO
         LTR   R15,R15             ZERO
         BNZ   *+6                 NO
         LR    R15,R1              FAKE START
         MH    R15,=H'3'           3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         ST    R1,JOBFRCNT
         CVD   R1,DOUBLE
         TIME  BIN
         L     R1,JOBFRAME         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,JOBFRAME         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,JOBFRAME         INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BCR   8,R10               YES
         BP    CHKFRM4
         SPACE 1
CHKFRM3  XC    JOBFRAME(4),JOBFRAME
         BR    R10
         EJECT
CHKFRM4  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         CVD   R15,DOUBLEX
         C     R15,THRFRMTM        FRAME USAGE TIME THRESHOLD REACHED
         BCR   4,R10               NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKFRM5             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28' XXXXX FRAMES FOR XXXXX SEC'
         MVC   WMSG1+17(6),=X'402020202120'
         ED    WMSG1+17(6),DOUBLEX+5
         MVC   WMSG1(6),=X'402020202120'
         ED    WMSG1(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKFRM5  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28' XXXXX FRAMES FOR XXXXX SEC'
         MVC   WMSG2+17(6),=X'402020202120'
         ED    WMSG2+17(6),DOUBLEX+5
         MVC   WMSG2(6),=X'402020202120'
         ED    WMSG2(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKSWP   CLC   36(2,R5),=H'1'      MASTER SCHEDULER
         BCR   8,R10               YES, NO SWAP CHECK
         CLC   172(4,R5),=F'0'     JOB OR STC/TSU
         BCR   8,R10               STC OR TSO
         LH    R1,42(0,R9)         SWAP COUNT
         CVD   R1,DOUBLE
         C     R1,THRSWAP          THRESHOLD REACHED
         BCR   4,R10
         SPACE 1
CHKSWP1  CLI   WJOB1,C' '          1ST PASS
         BNE   CHKSWP2             NO, 2ND HALF
         MVC   WJOB1(8),JOBNAME
         MVC   WMSG1(28),=CL28'EXCESS SWAP COUNT = XXXXX'
         MVC   WMSG1+19(6),=X'402020202120'
         ED    WMSG1+19(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKSWP2  MVC   WJOB2(8),JOBNAME
         MVC   WMSG2(28),=CL28'EXCESS SWAP COUNT = XXXXX'
         MVC   WMSG2+19(6),=X'402020202120'
         ED    WMSG2+19(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKWQE   L     R1,16               CVT
         L     R1,100(0,R1)        UCM BASE
         SR    R14,R14
         LH    R15,58(0,R1)        CURRENT WQE COUNT
         CVD   R15,DOUBLE
         M     R14,=F'100'
         LH    R1,238(0,R1)        WQE COUNT LIMIT
         DR    R14,R1              PERCENT USED
         C     R15,THRWQELM        WQE THRESHOLD LIMIT REACHED
         BCR   4,R10               NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKWQE1             NO, 2ND HALF
         MVC   WJOB1(38),=CL38'WTO BUFFER SHORTAGE, WQE COUNT= XXXXX'
         MVC   WJOB1+31(6),=X'402020202120'
         ED    WJOB1+31(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKWQE1  MVC   WJOB2(38),=CL38'WTO BUFFER SHORTAGE, WQE COUNT= XXXXX'
         MVC   WJOB2+31(6),=X'402020202120'
         ED    WJOB2+31(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKSQA   L     R1,16               CVT
         L     R3,356(0,R1)        LOAD PVT ADDR
         L     R1,560(0,R1)        GDA
         LR    R6,R1               SAVE GDA ADDR
         L     R4,8(0,R6)          CSA PQE
         L     R5,0(0,R4)          1ST FBQE FOR CSA
         SR    R9,R9
         CR    R4,R5               END OF CHAIN
         BE    CHKSQA2             YES
         SPACE 1
CHKSQA1  A     R9,8(0,R5)          ADD FREE AREA
         L     R5,0(0,R5)          NEXT FBQE
         CR    R4,R5               END OF CHAIN
         BNE   CHKSQA1             NO
         SPACE 1
CHKSQA2  LR    R1,R9               CSA AVAIL
         SRL   R1,10               DIVIDE BY 1K
         CVD   R1,DOUBLE
         L     R1,28(0,R6)         SQA AVAIL
         SR    R1,R9               SUBTRACT CSA
         BNP   CHKSQA3             IF NOT POSITIVE, SQA IN CSA
         SRL   R1,10               DIVIDE BY 1K
         CVD   R1,DOUBLEX
         B     CHKSQA4             IF NOT POSITIVE, SQA IN CSA
         SPACE 1
CHKSQA3  SR    R1,R1
         SPACE 1
CHKSQA4  C     R1,THRSQALM         THRESHOLD REACHED
         BCR   2,R10
         SPACE 1
CHKSQA5  CLI   WJOB1,C' '          1ST PASS
         BNE   CHKSQA6             NO, 2ND HALF
         MVC   WJOB1(38),=CL38'SQA AVAIL= XXXXXK, CSA AVAIL= XXXXXK'
         MVC   WJOB1+10(6),=X'402020202120'
         ED    WJOB1+10(6),DOUBLEX+5
         MVC   WJOB1+29(6),=X'402020202120'
         ED    WJOB1+29(6),DOUBLE+5
         BR    R10
         SPACE 1
CHKSQA6  MVC   WJOB2(38),=CL38'SQA AVAIL= XXXXXK, CSA AVAIL= XXXXXK'
         MVC   WJOB2+10(6),=X'402020202120'
         ED    WJOB2+10(6),DOUBLEX+5
         MVC   WJOB2+29(6),=X'402020202120'
         ED    WJOB2+29(6),DOUBLE+5
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R10
         EJECT
CHKENQ   L     R1,16              CVT
         L     R1,640(0,R1)       FIRST VALID MAJOR QCB
         ST    R2,SAVEREGS
         B     CHKENQ1+4          1ST MAJOR PROCESS
         SPACE 1
CHKENQ1  L     R1,0(0,R1)         NEXT MAJOR
         LTR   R1,R1              EXIST
         BZ    CHKENQ8            NO, END OF QCBS
         MVC   MAJOR(8),16(R1)    SAVE MAJOR QCB
         L     R14,8(0,R1)        1ST MINOR
         LTR   R14,R14            EXIST
         BZ    CHKENQ1            NO
         B     CHKENQ3
         SPACE 1
CHKENQ2  L     R14,0(0,R14)       NEXT MINOR QCB
         LTR   R14,R14            EXIST
         BZ    CHKENQ1            NO
         SPACE 1
CHKENQ3  L     R15,8(0,R14)       1ST QEL
         SPACE 1
CHKENQ4  LTR   R15,R15            EXIST
         BZ    CHKENQ2            NO
         TM    12(R15),X'80'      SHARED
         BZ    CHKENQ5            NO
         L     R15,0(0,R15)       NEXT QEL
         LA    R15,0(0,R15)
         B     CHKENQ4
         SPACE 1
CHKENQ5  C     R15,8(0,R14)       IS EXCL QEL THE 1ST QEL
         BNE   CHKENQ6            NO
         L     R2,0(0,R15)        NEXT QEL
         LA    R2,0(0,R2)
         LTR   R2,R2              EXIST
         BZ    CHKENQ2            NO
         SPACE 1
CHKENQ6  L     R15,0(0,R15)       NEXT QEL
         LA    R15,0(0,R15)
         LTR   R15,R15            EXIST
         BZ    CHKENQ2            NO
         CLC   JOBASID(2),14(R15) ASID MATCH
         BE    CHKENQ7            YES, ENQ CONFLICT THIS JOB
         B     CHKENQ6
         SPACE 1
CHKENQ7  MVC   0(12,R3),=CL12'ENQ'
         MVC   4(8,R3),MAJOR
         SPACE 1
CHKENQ8  L     R2,SAVEREGS
         BR    R10
         EJECT
CHKALC   L     R1,CURRWAIT         CURRENT WAIT TIME
         C     R1,THRALCWT         OVER ALLOCATION WAIT THRESHOLD
         BCR   4,R10               NO
         L     R1,16              CVT
         L     R1,548(0,R1)       AQTOP
         L     R14,0(0,R1)        1ST QUEUE ELEMENT
         SPACE 1
CHKALC1  CR    R1,R14             END OF CHAIN
         BCR   8,R10              YES, NOT IN ALLOCATION
         SR    R15,R15
         LH    R15,22(0,R14)      ASID
         CH    R15,JOBASID        ASID MATCH
         BE    CHKALC2
         L     R14,0(0,R14)       NEXT QUEUE ELEMENT
         B     CHKALC1
         SPACE 1
CHKALC2  MVC   0(12,R3),=CL12'ALLOC QUEUE'
         BR    R10
         EJECT
CHKUCB   STM   R0,R15,SAVEREGS
         MVC   UCBTABND(2),=X'FFFF'
         LA    R6,UCBTAB-12
         SPACE 1
CHKUCB0  LA    R6,12(0,R6)
         CLC   0(2,R6),=X'FFFF'    END OF TABLE
         BE    CHKUCB9             YES
         CLI   2(R6),X'00'         REFERENCED LAST PASS
         BNE   *+10                YES
         XC    0(8,R6),0(R6)
         MVI   2(R6),X'00'
         XC    8(4,R6),8(R6)
         B     CHKUCB0
         SPACE 1
CHKUCB1  XC    UCBDMSAV(24),UCBDMSAV
         STM   R0,R15,SAVEREGS
         L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         SPACE 1
CHKUCB1A BAL   R10,UCBDML#0        GET NEXT UCB ADDR
         LTR   R1,R1               END OF UCBS
         BZ    CHKUCB9             YES, EXIT
         CLI   18(R1),X'20'        DASD
         BNE   CHKUCB1A            NO
         TM    3(R1),X'88'         ONLINE/ALLOCATED
         BNO   CHKUCB1A            NO
         LA    R6,UCBTAB-12
         SPACE 1
CHKUCB2  LA    R6,12(0,R6)         NEXT UCB ENTRY
         CLC   0(2,R6),=X'FFFF'    END OF UCB TABLE
         BE    CHKUCB3             YES, CHECK FOR EMPTY SLOT
         CLM   R1,3,0(R6)          UCB ADDR MATCH
         BNE   CHKUCB2             NO
         B     CHKUCB5
         SPACE 1
CHKUCB3  LA    R6,UCBTAB-12
         SPACE 1
CHKUCB4  LA    R6,12(0,R6)         NEXT UCB ENTRY
         CLC   0(2,R6),=X'FFFF'    END OF UCB TABLE
         BE    CHKUCB1A            YES, NEXT UCB
         CLC   0(2,R6),=X'0000'    EMPTY SLOT
         BNE   CHKUCB4             NO, NEXT ENTRY
         SPACE 1
CHKUCB5  STCM  R1,3,0(R6)          SAVE UCB ADDR
         MVI   2(R6),X'FF'         SLOT IN USE
         L     R1,8(0,R6)
         LA    R1,1(0,R1)
         ST    R1,8(0,R6)
         B     CHKUCB1A
         EJECT
CHKUCB6  STM   R0,R15,SAVEREGS
         LA    R6,UCBTAB-12
         SPACE 1
CHKUCB7  LA    R6,12(0,R6)
         CLC   0(2,R6),=X'FFFF'    END OF UCB TABLE
         BE    CHKUCB9             YES, EXIT
         SR    R1,R1
         ICM   R1,3,0(R6)          UCB ADDR
         LA    R3,UCBNRDY
         LA    R4,THRUCBNR
         TM    6(R1),X'40'         NOT READY
         BO    CHKUCB7A
         LA    R3,UCBBUSY
         LA    R4,THRUCBBS
         SR    R14,R14
         L     R15,8(0,R6)         UCB BUSY COUNT
         XC    8(4,R6),8(R6)
         M     R14,=F'100'
         D     R14,THRSTIMR        PERCENT BUSY
         SR    R1,R1
         IC    R1,3(0,R6)          CUMULATIVE PERCENT
         LTR   R1,R1               ZERO
         BNZ   *+6                 NO
         LR    R1,R15              FAKE START
         MH    R1,=H'3'            3/4 PREVIOUS
         AR    R1,R15              1/4 CURRENT
         SRL   R1,2
         STC   R1,3(0,R6)          NEW CUM PERCENT
         C     R1,THRUCBLM         THRESHOLD REACHED
         BL    CHKUCB7B            NO
         SPACE 1
CHKUCB7A TIME  BIN
         L     R1,4(0,R6)          OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,4(0,R6)          OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,4(0,R6)          INTERVAL TIME
         LTR   R1,R1               TIME EQUAL 0
         BZ    CHKUCB7             YES
         BP    CHKUCB8
         SPACE 1
CHKUCB7B XC    4(8,R6),4(R6)
         B     CHKUCB7
         EJECT
CHKUCB8  LR    R14,R1
         SRDL  R14,32
         D     R14,=F'100'         SECONDS
         SR    R1,R1
         IC    R1,3(0,R6)
         CVD   R1,DOUBLE
         CVD   R15,DOUBLEX
         C     R15,0(0,R4)         TIME THRESHOLD REACHED
         BL    CHKUCB7             NO
         CLI   WJOB1,C' '          1ST PASS
         BNE   CHKUCB8A            NO, 2ND HALF
         MVC   WJOB1(38),0(R3)
         SR    R1,R1
         ICM   R1,3,0(R6)          UCB ADDR
         MVC   WJOB1(3),13(R1)     DEVICE ADDRESS
         MVC   WJOB1+4(6),28(R1)   DEVICE VOLSER
         MVC   WJOB1+27(6),=X'402020202120'
         ED    WJOB1+27(6),DOUBLEX+5
         LA    R1,UCBNRDY
         CR    R1,R3               NOT READY MESSAGE
         BE    CHKUCB7             YES, NO PERCENT
         MVC   WJOB1+12(4),=X'40202120'
         ED    WJOB1+12(4),DOUBLE+6
         B     CHKUCB7
         SPACE 1
CHKUCB8A MVC   WJOB2(38),0(R3)
         SR    R1,R1
         ICM   R1,3,0(R6)          UCB ADDR
         MVC   WJOB2(3),13(R1)     DEVICE ADDRESS
         MVC   WJOB2+4(6),28(R1)   DEVICE VOLSER
         MVC   WJOB2+27(6),=X'402020202120'
         ED    WJOB2+27(6),DOUBLEX+5
         LA    R1,UCBNRDY
         CR    R1,R3               NOT READY MESSAGE
         BE    CHKUCB8B            YES, NO PERCENT
         MVC   WJOB2+12(4),=X'40202120'
         ED    WJOB2+12(4),DOUBLE+6
         SPACE 1
CHKUCB8B LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         B     CHKUCB7
         SPACE 1
CHKUCB9  LM    R0,R15,SAVEREGS
         BR    R10
         EJECT
CHKQIO   XC    UCBDMSAV(24),UCBDMSAV
         MVC   QIOASID(2),JOBASID  SAVE ASID
         STM   R0,R15,SAVEREGS
         L     R9,16               .CVT
         L     R9,40(0,R9)         .UCB LOOKUP TABLE
         SPACE 1
CHKQIO1  BAL   R10,UCBDML#0        GET NEXT UCB ADDR
         LTR   R1,R1               END OF UCBS
         BZ    CHKQIO3             YES, EXIT
         B     CHKQIO2
         SPACE 1
CHKQIO2  LR    R2,R1              UCB ADDR
         CLI   18(R1),X'20'       DASD
         BE    *+18               YES
         L     R4,20(0,R1)        UCB EXTENTION ADDR
         CLC   QIOASID(2),14(R4)  ASID MATCH
         BNE   CHKQIO1            NO, NEXT UCB
         LR    R4,R1              UCB ADDR
         S     R4,=F'4'           DECR ADDR -4
         L     R4,0(0,R4)         IOQ ADDR
         LA    R4,0(0,R4)
         LTR   R4,R4              ANY IOQ
         BZ    CHKQIO1            NO, NEXT UCB
         L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    CHKQIO1            NO, NEXT UCB
         B     CHKQIO9
         SPACE 1
CHKQIO3  L     R8,16              CVT ADDR
         L     R8,140(0,R8)       LCH ADDR
         SPACE 1
CHKQIO4  CLC   16(4,R8),=F'0'     END OF LCH
         BE    CHKQIO8A           YES, EXIT
         CLC   0(4,R8),=X'FFFFFFFF' IOQ ADDR EXIST
         BNE   CHKQIO6            YES
         SPACE 1
CHKQIO5  LA    R8,32(0,R8)        NEXT LCH
         B     CHKQIO4
         SPACE 1
CHKQIO6  L     R4,0(0,R8)         1ST IOQ
         L     R6,4(0,R8)         LAST IOQ
         SPACE 1
CHKQIO7  L     R5,8(0,R4)         IOSB ADDR
         LA    R5,0(0,R5)
         LTR   R5,R5              EXIST
         BZ    CHKQIO7A           NO
         L     R2,16(0,R5)        UCB ADDR
         CLC   QIOASID(2),6(R5)   ASID MATCH
         BE    CHKQIO8            YES
         SPACE 1
CHKQIO7A CR    R4,R6              END OF IOQS
         BE    CHKQIO5            YES
         L     R4,0(0,R4)         NEXT IOQ
         B     CHKQIO7
         SPACE 1
CHKQIO8  MVC   0(12,R3),=CL12'I/O ON'
         MVC   8(3,R3),13(R2)
         SPACE 1
CHKQIO8A LM    R0,R15,SAVEREGS
         BR    R10
         SPACE 1
CHKQIO9  C     R2,16(0,R5)        UCB ADDR MATCH
         BNE   CHKQIO8A           NO, EXIT
         CLC   QIOASID(2),6(R5)   ASID MATCH
         BE    CHKQIO8            YES
         B     CHKQIO1
         EJECT
UCBDML#0 ST    R8,UCBDMSAV         .SAVE WORK REG 1
         ST    R10,UCBDMSAV+8      .SAVE WORK REG 3
         ST    R11,UCBDMSAV+12     .SAVE WORK REG 4
         L     R8,UCBDMLOW         .SET SEARCH ARGUMENT
         SPACE 1
UCBDML#1 LA    R8,1(0,R8)          .NEXT UNIT ADDR POSSIBLE
         L     R10,=X'0000FFFF'    .SET MAX NEXT LEAST HIGH
         SPACE 1
UCBDML#2 CLC   0(2,R9),=X'FFFF'    .END OF TABLE
         BE    UCBDMOUT            .YES, GO PROCESS
         SR    R1,R1
         ICM   R1,3,0(R9)          .LOAD UCB ADDR
         LTR   R1,R1               .ZERO ADDR
         BNZ   UCBDML#4            .NO, CONTINUE
         SPACE 1
UCBDML#3 LA    R9,2(0,R9)          .NEXT UCB LOOKUP TABLE ENTRY
         B     UCBDML#2
         SPACE 1
UCBDML#4 CLI   18(R1),X'10'        GRAPHICS
         BE    UCBDML#3            YES, NEXT UCB
         CLI   18(R1),X'40'        COMM
         BE    UCBDML#3            YES, NEXT UCB
         TM    6(R1),X'8A'         BUSY AND/OR CHANNEL PROGRAM ACTIVE
         BZ    UCBDML#3            NO, NEXT UCB
         BAL   R11,UCBDMCNV        .CONVERT UNIT ADDR TO HEX
         CR    R1,R8               .UNIT EQUAL
         BL    UCBDML#3            .LOW NOT EQUAL, NEXT UCB
         LR    R10,R1              .SET NEXT LEAST HIGH UNIT ADDR
         MVC   UCBDMCUR+2(2),0(R9) .SET NEXT LEAST HIGH UCB ADDR
         B     UCBDMOUT            .GO PROCESS
         EJECT
UCBDMCNV SR    R14,R14
         SR    R15,R15
         IC    R15,13(0,R1)        .UNIT ADDR DIGIT
         TM    13(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,14(0,R1)        .UNIT ADDR DIGIT
         TM    14(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         IC    R15,15(0,R1)        .UNIT ADDR DIGIT
         TM    15(R1),X'F0'        .NUMERIC
         BO    *+8                 .YES, BYPASS VALUE ADJUST
         LA    R15,9(0,R15)        .SET VALUE TO COVER A-F
         SLL   R15,28              .SHIFT OUT ALL BUT PERTINENT
         SLDL  R14,4               .INSERT INTO RESULTS REGISTER
         LR    R1,R14              .SET RESULTS REG
         BR    R11
         SPACE 3
UCBDMOUT C     R10,=X'0000FFFF'    .ALL DONE
         BE    UCBDMEX             .YES
         ST    R10,UCBDMLOW        .NEXT LOW UNIT ADDR
         L     R1,UCBDMCUR         .LOAD UCB ADDR FOR FOUND UNIT
         B     UCBDMCON            .CONTINUE
         SPACE 1
UCBDMEX  SR    R1,R1               .CLEAR UCB ADDR REGISTER
         L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         B     UCBDMRET            .END OF UCBS
         SPACE 1
UCBDMCON L     R8,UCBDMSAV         .RELOAD WORK REG 1
         L     R10,UCBDMSAV+8      .RELOAD WORK REG 3
         L     R11,UCBDMSAV+12     .RELOAD WORK REG 4
         SPACE 1
UCBDMRET EQU   *
         BR    R10
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGE03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BR    R11
         SPACE 3
RETURN   CLI   WJOB1,C' '          ANY OUTPUT
         BE    EXIT                NO
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         SPACE 1
EXIT     ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R2,SAVRET           RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         MODESET KEY=NZERO,MODE=PROB
         SR    R15,R15
         LR    R14,R2
         BR    R14
         EJECT
         LTORG
         EJECT
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
UCBNRDY  DC    CL38'XXX XXXXXX   NOT READY  FOR XXXXX SEC'
UCBBUSY  DC    CL38'XXX XXXXXX   XXX% BUSY  FOR XXXXX SEC'
         SPACE 3
         DS    0F
STAEMSG  DC    X'00540100'
         DC    CL80'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
SRMOVLY  DS    0CL84
         DC    XL4'00540100'
         DC    CL5'TSO-',CL10' '
         DC    CL6'LGCP-',CL7' '
         DC    CL6'AVCP-',CL7' '
         DC    CL6'AVPG-',CL7' '
         DC    CL7'AVUIC-',CL7' '
         DC    CL6'ASMQ-',CL6' '
         SPACE 3
SRCTAB   DC    CL12' '
         DC    CL12'*'
         DC    CL12'*'
         DC    CL12'SWAP LONGWT '
         DC    CL12'SWAP AUXSTOR'
         DC    CL12'SWAP REALSTR'
         DC    CL12'SWAP DETWAIT'
         DC    CL12'SWAP REQUEST'
         DC    CL12'SWAP ENQEXC '
         DC    CL12'SWAP WORKEXC'
         DC    CL12'SWAP UNILATR'
         DC    CL12'SWAP TRANSIT'
         DC    CL12'*'
         DC    CL12'*'
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*        THRESHOLD VALUES FOR ALL DISPLAY LIMITS                      *
*                                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
         DS    0D
THRINTVL DC    CL8'00000050'       1/2 SEC STIMER FOR CHANNEL BUSY
THRSTIMR DC    F'20'               CHANNEL BUSY STIMER REPETITIONS
***   THE ABOVE VALUES MULTIPLIED TOGETHER GIVE THE MINIMUM
***   REFRESH FOR THIS COMMAND
THRTSOPG DC    F'13'               TSO PERFORMANCE GROUP
THRSWAP  DC    F'30'               HIGH SWAP COUNT THRESHOLD
THRFRAME DC    F'200'              HIGH FRAME USE LIMIT
*  SET THRFRAME LOWER IF PAGING IS HIGH   = 100 ?
THRFRMTM DC    F'60'               HIGH FRAME USE TIME THRESHOLD
THRABEND DC    F'10'               JOB ABENDING TIME THRESHOLD
THRLOOPP DC    F'05'               LOOP CPU PERCENT THRESHOLD
THRLOOPT DC    F'30'               LOOP TIME THRESHOLD
THRCPULP DC    F'20'               EXCESS JOB CPU PERCENT THRESHOLD
THRCPULT DC    F'10'               EXCESS JOB CPU TIME THRESHOLD
THRSWPWT DC    F'180'              SWAP WAIT TIME THRESHOLD
THRREPWT DC    F'30'               REPLY WAIT TIME THRESHOLD
THRALCWT DC    F'30'               ALLOCATION WAIT TIME THRESHOLD
THRWQELM DC    F'60'               HIGH WQE PERCENT USE THRESHOLD
THRSQALM DC    F'64'               SQA SHORTAGE MIN 'K' THRESHOLD
THRPAGHI DC    F'60'               HIGH PAGING TIME THRESHOLD
THRPAGLM DC    F'50'               HIGH PAGING PAGES/SEC LIMIT
THRPAGIO DC    F'30'               PAGE I/O SLOW TIME THRESHOLD
THRPAGTM DC    F'60'               PAGE I/O SLOW BURST LIMIT
THRUCBNR DC    F'30'               DEVICE NOT READY THRESHOLD  (DASD)
THRUCBBS DC    F'30'               DEVICE BUSY THRESHOLD       (DASD)
THRUCBLM DC    F'40'               DEVICE BUSY LIMIT           (DASD)
* CHANNEL LIMITS ARE SET TO 35% FOR DISK AND 70% FOR TAPE
THRCH1BS DC    F'60'               CHANNEL 1 PERCENT BUSY THRESHOLD
THRCH1LM DC    F'35'               CHANNEL 1 PERCENT BUSY LIMIT
THRCH2BS DC    F'60'               CHANNEL 2 PERCENT BUSY THRESHOLD
THRCH2LM DC    F'35'               CHANNEL 2 PERCENT BUSY LIMIT
THRCH3BS DC    F'60'               CHANNEL 3 PERCENT BUSY THRESHOLD
THRCH3LM DC    F'35'               CHANNEL 3 PERCENT BUSY LIMIT
THRCH4BS DC    F'60'               CHANNEL 4 PERCENT BUSY THRESHOLD
THRCH4LM DC    F'35'               CHANNEL 4 PERCENT BUSY LIMIT
THRCH5BS DC    F'60'               CHANNEL 5 PERCENT BUSY THRESHOLD
THRCH5LM DC    F'35'               CHANNEL 5 PERCENT BUSY LIMIT
THRCH6BS DC    F'60'               CHANNEL 6 PERCENT BUSY THRESHOLD
THRCH6LM DC    F'35'               CHANNEL 6 PERCENT BUSY LIMIT
THRCH7BS DC    F'60'               CHANNEL 7 PERCENT BUSY THRESHOLD
THRCH7LM DC    F'35'               CHANNEL 7 PERCENT BUSY LIMIT
THRCH8BS DC    F'60'               CHANNEL 8 PERCENT BUSY THRESHOLD
THRCH8LM DC    F'35'               CHANNEL 8 PERCENT BUSY LIMIT
THRCH9BS DC    F'60'               CHANNEL 9 PERCENT BUSY THRESHOLD
THRCH9LM DC    F'35'               CHANNEL 9 PERCENT BUSY LIMIT
THRCHABS DC    F'60'               CHANNEL A PERCENT BUSY THRESHOLD
THRCHALM DC    F'35'               CHANNEL A PERCENT BUSY LIMIT
THRCHBBS DC    F'60'               CHANNEL B PERCENT BUSY THRESHOLD
THRCHBLM DC    F'35'               CHANNEL B PERCENT BUSY LIMIT
THRCHCBS DC    F'60'               CHANNEL C PERCENT BUSY THRESHOLD
THRCHCLM DC    F'35'               CHANNEL C PERCENT BUSY LIMIT
THRCHDBS DC    F'60'               CHANNEL D PERCENT BUSY THRESHOLD
THRCHDLM DC    F'35'               CHANNEL D PERCENT BUSY LIMIT
THRCHEBS DC    F'60'               CHANNEL E PERCENT BUSY THRESHOLD
THRCHELM DC    F'35'               CHANNEL E PERCENT BUSY LIMIT
THRCHFBS DC    F'60'               CHANNEL F PERCENT BUSY THRESHOLD
THRCHFLM DC    F'35'               CHANNEL F PERCENT BUSY LIMIT
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
SAVEREGS DS    18F
DOUBLE   DS    2F
DOUBLEX  DS    2F
MAJOR    DS    2F
NUMCHK   DS    2F
PARM     DS    F
QIOASID  DS    F
XSASAVE  DS    F
SAVETIM1 DS    F
SAVETIM2 DS    F
SAVECPU1 DS    F
SAVECPU2 DS    F
CURRWAIT DS    F
         SPACE 3
UCBDMSAV DS    4F
UCBDMLOW DS    F
UCBDMCUR DS    F
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL80
WJOB1    DS    CL8
         DS    CL2
WMSG1    DS    CL15
         DS    CL1
WRSN1    DS    CL12
         DS    CL4
WJOB2    DS    CL8
         DS    CL2
WMSG2    DS    CL15
         DS    CL1
WRSN2    DS    CL12
         SPACE 5
ESTAELST DS    0F,(ESTAEOVX)X
WORKEND  DS    0F
         EJECT
JOBTABLE DSECT
PAGHITIM DS    F
PAGIOTIM DS    F
C1BSYTIM DS    F
C1BSYCNT DS    F
C1BSYPCT DS    F
C2BSYTIM DS    F
C2BSYCNT DS    F
C2BSYPCT DS    F
C3BSYTIM DS    F
C3BSYCNT DS    F
C3BSYPCT DS    F
C4BSYTIM DS    F
C4BSYCNT DS    F
C4BSYPCT DS    F
C5BSYTIM DS    F
C5BSYCNT DS    F
C5BSYPCT DS    F
C6BSYTIM DS    F
C6BSYCNT DS    F
C6BSYPCT DS    F
C7BSYTIM DS    F
C7BSYCNT DS    F
C7BSYPCT DS    F
C8BSYTIM DS    F
C8BSYCNT DS    F
C8BSYPCT DS    F
C9BSYTIM DS    F
C9BSYCNT DS    F
C9BSYPCT DS    F
CABSYTIM DS    F
CABSYCNT DS    F
CABSYPCT DS    F
CBBSYTIM DS    F
CBBSYCNT DS    F
CBBSYPCT DS    F
CCBSYTIM DS    F
CCBSYCNT DS    F
CCBSYPCT DS    F
CDBSYTIM DS    F
CDBSYCNT DS    F
CDBSYPCT DS    F
CEBSYTIM DS    F
CEBSYCNT DS    F
CEBSYPCT DS    F
CFBSYTIM DS    F
CFBSYCNT DS    F
CFBSYPCT DS    F
UCBTAB   DS    100CL12
UCBTABND DS    F
JOBNAME  DS    CL8
JOBASID  DS    H
JOBFLAG  DS    H
JOBTIME  DS    F
JOBCPUT  DS    F
JOBEXCP  DS    F
JOBLOOP  DS    F
JOBCPUL  DS    F
JOBWAIT  DS    F
JOBFRAME DS    F
JOBFRCNT DS    F
JOBABEND DS    F
         DS    499CL48
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
XAA      DS    F
         SPACE 5
CHAN1    EQU   256
CHAN2    EQU   512
CHAN3    EQU   768
CHAN4    EQU   1024
CHAN5    EQU   1280
CHAN6    EQU   1536
CHAN7    EQU   1792
CHAN8    EQU   2048
CHAN9    EQU   2304
CHAN10   EQU   2560
CHAN11   EQU   2816
CHAN12   EQU   3072
CHAN13   EQU   3328
CHAN14   EQU   3584
CHAN15   EQU   3840
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
