         TITLE 'CSCGJ03D -   J  JOB MONITOR'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CSCGJ03D -       J  JOB MONITOR                           ***
***                                                                 ***
***       VERSION -        1.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        09/01/79                                 ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CSCGJ03D CSECT
         LR    R12,R15
         USING CSCGJ03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         MVI   TSOSW,C' '
         XC    JOBTOT2(8),JOBTOT2
         XC    DMNTAB(200),DMNTAB
         MVC   DMNTAB+200(200),DMNTAB
         MVC   DMNTAB+400(200),DMNTAB
         MVC   DMNTAB+600(200),DMNTAB
         L     R3,XAL              PARM LIST ADDR
         LA    R3,0(0,R3)
         LTR   R3,R3               ANY PARM
         BZ    PARM2               NO
         MVC   TSOSW(2),0(R3)      SAVE PARM
         CLI   TSOSW,C'D'          DOMAIN LIST
         BE    PARM2               YES, CONTINUE
         CLI   TSOSW,C'T'          TSO DISPLAY
         BE    PARM2               YES, CONTINUE
         CLI   TSOSW,C'J'          JOB DISPLAY
         BE    PARM1               YES, CONTINUE
         MVC   DOUBLE(2),=C'00'
         MVZ   DOUBLE(2),TSOSW
         CLC   DOUBLE(2),=C'00'    DOMAIN DISPLAY
         BNE   PARM1
         PACK  DOUBLE(8),TSOSW(2)
         CVB   R1,DOUBLE
         STC   R1,DOMAIN           SAVE DOMAIN
         MVI   TSOSW,C'X'
         B     PARM2
         SPACE 1
PARM1    MVI   TSOSW,C' '
         SPACE 1
PARM2    MVC   WTOLIST(4),=X'00540100'
         MVI   SCANRET,C' '        SET FOUND
         MVI   SCANTYPE,C'I'       SET IN QUEUE SCAN
         EJECT
SETINIT  L     R4,16               CVT
         L     R4,556(0,R4)        ASVT
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         L     R8,XAA              ASCB/OUCB INFO STORAGE
         USING JOBTABLE,R8
         SPACE 1
SETINIT1 CLC   0(16,R8),=4F'0'     1ST TIME
         BNE   SETINIT3            NO
         SPACE 1
SETINIT2 LA    R4,4(0,R4)          INCR INTO ASVT
         CLC   1(3,R4),=F'0'       END OF ASVT
         BE    RETURN              YES, EXIT
         TM    0(R4),X'80'         AVAILABLE SLOT
         BO    SETINIT2            YES
         L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         ST    R5,0(0,R8)          ENTRY ID
         LM    R14,R15,64(R5)      TCB TIME
         SRDL  R14,22
         LR    R1,R15
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R15,R1
         ST    R15,4(0,R8)         SAVE PREVIOUS CPU TIME
         TIME  BIN
         ST    R0,16(0,R8)
         LA    R8,20(0,R8)         NEXT ENTRY
         B     SETINIT2
         SPACE 1
SETINIT3 LA    R1,HDRI             IN QUEUE HDR
         CLI   TSOSW,C'D'          DOMAIN LIST
         BE    JOBOUT              YES, CONTINUE
         BAL   R11,MSGRTN1
         EJECT
JOBOUT   L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         B     JOBOUT4
         SPACE 1
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         L     R6,56(0,R5)         CSCB ADDR
         L     R7,144(0,R5)        LOAD OUCB ADDR
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN
         BNE   JOBOUT2             NO
         CLI   41(R7),X'00'        SRC PRESENT
         BNE   JOBOUT6             YES, GO CHECK DET WAIT
         CLI   38(R5),X'7F'        LOGICAL SWAP
         BE    JOBOUT4             YES, OUT
         B     JOBOUT3             CONTINUE
         SPACE 1
JOBOUT2  CLI   38(R5),X'7F'        LOGICAL SWAP
         BE    JOBOUT3             YES, OUT QUEUE
         CLI   41(R7),X'00'        SWAP REASON
         BE    JOBOUT4             NO, IN QUEUE
         CLI   41(R7),X'06'        DETECTED WAIT
         BNE   JOBOUT3             NO
         TM    21(R7),X'01'        MSO DET WAIT BIT ON
         BZ    JOBOUT4             NO, IGNORE SRC
         SPACE 1
JOBOUT3  MVI   JOBMSG,C' '
         MVC   JOBMSG+1(79),JOBMSG
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         L     R6,144(0,R5)        OUCB ADDR
         L     R3,60(0,R5)         TSB ADDR
         L     R5,56(0,R5)         CSCB ADDR
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO
         CLI   TSOSW,C'D'          DOMAIN LIST
         BE    JOBOUT4             YES, CONTINUE
         LA    R1,WTOLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         SPACE 1
JOBOUT4  LA    R4,4(0,R4)          INCR INTO ASVT
         CLC   1(3,R4),=F'0'       END OF ASVT
         BE    JOBOUT5             YES, RETURN
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT4             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         SPACE 1
JOBOUT5  CLI   SCANTYPE,C'O'       OUT QUEUE SCAN
         BE    DMNCHK              YES, EXIT
         MVI   SCANRET,C' '        INIT OUTPUT SWITCH
         MVI   SCANTYPE,C'O'       SET OUT QUEUE SCAN NEXT
         CLI   TSOSW,C'D'          DOMAIN LIST
         BE    JOBOUT              YES, CONTINUE
         BAL   R11,JOBTOTL         TOTAL INPUT QUEUE
         LA    R1,WTOLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         LA    R1,HDRO             OUT QUEUE HDR
         BAL   R11,MSGRTN1
         B     JOBOUT              NEXT PASS
         SPACE 1
JOBOUT6  CLI   41(R7),X'06'        DETECTED WAIT
         BNE   JOBOUT4             NO
         TM    21(R7),X'01'        MSO DET WAIT BIT ON
         BZ    JOBOUT3             NO, IGNORE SRC
         B     JOBOUT4
         EJECT
ASCBFORM UNPK  DOUBLE(5),36(3,R5)
         NC    DOUBLE(4),=4X'0F'
         TR    DOUBLE(4),=C'0123456789ABCDEF'
         MVC   ASID(4),DOUBLE      SAVE ASID
         L     R8,XAA              JOBTABLE ADDR
         SPACE 1
ASCBFRM1 CLC   0(4,R8),=F'0'       JOBTABLE END
         BE    ASCBFRM2            YES
         C     R5,0(0,R8)          ASCB MATCH
         BE    ASCBFRM2            YES
         LA    R8,20(0,R8)         NEXT ENTRY
         B     ASCBFRM1
         SPACE 1
ASCBFRM2 LM    R14,R15,64(R5)      TCB TIME
         SRDL  R14,22
         LR    R1,R15
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R1,R15
         L     R15,4(0,R8)         LOAD PREVIOUS CPU TIME
         LTR   R15,R15             ANY PREVIOUS
         BNZ   *+6                 NO
         LR    R15,R1              PREVIOUS = CURRENT
         ST    R15,8(0,R8)         SAVE PREVIOUS CPU TIME
         ST    R1,4(0,R8)          SAVE TOTAL CPU TIME
         S     R1,8(0,R8)          SUB PREVIOUS CPU TIME
         ST    R1,12(0,R8)         SAVE DIFFERENCE
         TIME  BIN
         L     R1,16(0,R8)         OLD TIME
         LTR   R1,R1               ANY OLD TIME
         BNZ   *+8                 YES
         ST    R0,16(0,R8)         OLD TIME = NEW TIME
         LR    R1,R0               BINARY TIME
         S     R1,16(0,R8)         INTERVAL TIME
         ST    R0,16(0,R8)         NEW TIME BEGIN
         LTR   R1,R1               TIME EQUAL 0
         BZ    ASCBFRMY            YES, NO DIVIDE
         L     R15,12(0,R8)        LOAD DIFFERENCE
         LTR   R15,R15             NEGATIVE
         BM    ASCBFRMX            YES
         SR    R14,R14
         M     R14,=F'10'          PERCENT
         SR    R14,R14
         DR    R14,R1              PERCENT UTIL
         ST    R15,JOBTOT1+4       SAVE JOB TOTAL PCT
         CVD   R15,DOUBLE          PERCENT TO PRINT
         MVC   PCT(7),=X'402020204B2020'
         ED    PCT(4),DOUBLE+6
         CH    R15,=H'50'          MAX
         BNH   *+8                 NO
         LH    R15,=H'50'          SET MAX
         EX    R15,PCTMVE          GRAPHIC PERCENT
         LA    R15,PCTGRAPH(R15)
         MVI   0(R15),C'>'
         SRDL  R14,32
         M     R14,=F'100'
         DR    R14,R1              PERCENT UTIL  (HUNDREDTHS)
         ST    R15,JOBTOT1         SAVE JOB TOTAL HUNDREDTHS
         CVD   R15,DOUBLE          PERCENT TO PRINT  (HUNDREDTHS)
         UNPK  PCT+5(2),DOUBLE+6(2)
         OI    PCT+6,X'F0'
         BR    R11
         SPACE 1
ASCBFRMX MVC   PCT(7),=C'**CHG**'
         BR    R11
         SPACE 1
ASCBFRMY MVC   PCT(7),=C'**ERR**'
         BR    R11
         SPACE 1
PCTMVE   MVC   PCTGRAPH(0),PCTLINE
         EJECT
JOBTOTL  MVC   WTOLIST+4(20),=CL20'## IN Q TOTAL ##'
         SR    R14,R14
         L     R15,JOBTOT2
         D     R14,=F'100'
         A     R15,JOBTOT2+4       TOTAL PERCENT
         CVD   R15,DOUBLE          PERCENT TO PRINT
         MVC   PCT(7),=X'402020204B2020'
         ED    PCT(4),DOUBLE+6
         SRL   R15,1
         CH    R15,=H'50'          MAX
         BNH   *+8                 NO
         LH    R15,=H'50'          SET MAX
         EX    R15,PCTTOT          GRAPHIC PERCENT
         LA    R15,PCTGRAPH(R15)
         MVI   0(R15),C'>'
         CVD   R14,DOUBLE
         UNPK  PCT+5(2),DOUBLE+6(2)
         OI    PCT+6,X'F0'
         BR    R11
         SPACE 1
PCTTOT   MVC   PCTGRAPH(0),PCTTLINE
         EJECT
DMNCHK   MVC   DMNLIST(4),=X'00540100'
         CLI   TSOSW,C'D'          DOMAIN LIST
         BNE   RETURN              NO
         LA    R4,DMNTAB-8
         SR    R5,R5
         SPACE 1
DMNCHK1  CVD   R5,DOUBLE           DOMAIN NUMBER
         MVC   DMNLIST+4(80),=CL80'DOMAIN XX'
         UNPK  DMNNBR(2),DOUBLE+6(2)
         OI    DMNNBR+1,X'F0'
         LA    R5,1(0,R5)          NEXT DOMAIN
         LA    R4,8(0,R4)          NEXT TABLE ENTRY
         C     R5,=F'51'           END OF DOMAINS
         BE    DMNCHK2             YES, TOTAL
         CLC   0(8,R4),=2F'0'      ANY TIME IN THIS DOMAIN
         BE    DMNCHK1             NO
         SR    R14,R14
         L     R15,0(0,R4)
         D     R14,=F'100'
         A     R15,4(0,R4)         TOTAL PERCENT
         CVD   R15,DOUBLE          PERCENT TO PRINT
         MVC   DMNPCT(7),=X'402020204B2020'
         ED    DMNPCT(4),DOUBLE+6
         SRL   R15,1
         CH    R15,=H'50'          MAX
         BNH   *+8                 NO
         LH    R15,=H'50'          SET MAX
         EX    R15,DMNTOT          GRAPHIC PERCENT
         LA    R15,DMNGRAPH(R15)
         MVI   0(R15),C'>'
         CVD   R14,DOUBLE
         UNPK  DMNPCT+5(2),DOUBLE+6(2)
         OI    DMNPCT+6,X'F0'
         LA    R1,DMNLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         B     DMNCHK1
         SPACE 3
DMNCHK2  MVC   DMNLIST+4(80),=CL80'TOTAL PCT'
         SR    R14,R14
         L     R15,JOBTOT2
         D     R14,=F'100'
         A     R15,JOBTOT2+4       TOTAL PERCENT
         CVD   R15,DOUBLE          PERCENT TO PRINT
         MVC   DMNPCT(7),=X'402020204B2020'
         ED    DMNPCT(4),DOUBLE+6
         SRL   R15,1
         CH    R15,=H'50'          MAX
         BNH   *+8                 NO
         LH    R15,=H'50'          SET MAX
         EX    R15,DMNTOT          GRAPHIC PERCENT
         LA    R15,DMNGRAPH(R15)
         MVI   0(R15),C'>'
         CVD   R14,DOUBLE
         UNPK  DMNPCT+5(2),DOUBLE+6(2)
         OI    DMNPCT+6,X'F0'
         LA    R1,DMNLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         B     RETURN
         SPACE 1
DMNTOT   MVC   DMNGRAPH(0),PCTTLINE
         EJECT
CSCBFORM CLI   TSOSW,C'T'          TSO USER DISPLAY
         BNE   CSCBFRM0            NO
         CLI   28(R5),X'01'        TSO USER
         BNE   JOBOUT4             NO, BYPASS
         B     CSCBFRM6
         SPACE 1
CSCBFRM0 CLI   TSOSW,C'D'          DOMAIN LIST
         BE    *+12                YES, CONTINUE
         CLI   28(R5),X'01'        TSO USER
         BE    JOBOUT4             YES, DONT PROCESS
         CLI   28(R5),X'03'        INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         LA    R9,0(0,R5)          SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,30(0,R5)
         SLL   R10,8               ASID
         IC    R10,31(0,R5)
         SPACE 1
CSCBFRM1 L     R5,0(0,R5)          NEXT CSCB
         LA    R5,0(0,R5)          CLEAR HIGH ORDER
         LTR   R5,R5               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R5,R9               LOAD CSCB ADDR
         B     JOBOUT4             NO GOOD
         CR    R5,R9               SAME CSCB
         BE    JOBOUT4             YES, NO GOOD
         CH    R10,30(0,R5)        SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         SPACE 1
CSCBFRM2 MVC   JOBNAME(8),8(R5)
         MVC   STEPNAME(8),64(R5)
         B     CSCBFRM4
         SPACE 1
CSCBFRM3 MVC   JOBNAME(8),16(R5)
         MVC   STEPNAME(8),8(R5)
         SPACE 1
CSCBFRM4 CLI   TSOSW,C'X'          DOMAIN DISPLAY
         BNE   CSCBFRM5            NO
         CLC   DOMAIN(1),40(R6)    DOMAIN MATCH
         BNE   JOBOUT4
         SPACE 1
CSCBFRM5 LM    R14,R15,JOBTOT1
         A     R14,JOBTOT2
         A     R15,JOBTOT2+4
         STM   R14,R15,JOBTOT2
         CLI   TSOSW,C'D'          DOMAIN LIST
         BE    CSCBFRM7            YES
         CLC   ASID(4),=C'0001'
         BCR   7,R11
         MVC   JOBNAME(20),=CL20'MASTER'
         BR    R11
         SPACE 1
CSCBFRM6 MVC   JOBNAME(8),8(R5)
         MVC   STEPNAME(8),16(R5)
         B     CSCBFRM5
         SPACE 1
CSCBFRM7 SR    R1,R1
         IC    R1,40(0,R6)         DOMAIN NUMBER
         SLL   R1,3
         LA    R1,DMNTAB(R1)       DOMAIN TABLE SLOT
         LM    R14,R15,JOBTOT1
         A     R14,0(0,R1)
         A     R15,4(0,R1)
         STM   R14,R15,0(R1)       SAVE DOMAIN TOTALS
         B     JOBOUT4
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGJ03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SPACE 1
MSGRTN1  SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
RETURN   ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00540100'
         DC    CL80'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
PCTLINE  DC    CL51'0=========1=========2=========3=========4========='
PCTTLINE DC    CL51'0====1====2====3====4====5====6====7====8====9===='
         SPACE 1
         DS    0F
NFNDMSG  DC    X'00540100'
         DC    CL80'NO JOBS ON OUT QUEUE'
         SPACE 1
HDRI     DC    X'00540100'
         DC    CL26'****   IN  QUEUE   ****'
         DC    CL54' CPU PERCENT UTILIZATION'
         SPACE 1
HDRO     DC    X'00540100'
         DC    CL26'****   OUT  QUEUE   ****'
         DC    CL54' CPU PERCENT UTILIZATION'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
JOBTOT1  DS    2F
JOBTOT2  DS    2F
XSASAVE  DS    F
ASID     DS    F
SCANRET  DS    C
SCANTYPE DS    C
TSOSW    DS    C
DOMAIN   DS    C
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL80
JOBNAME  DS    CL8
         DS    CL1
STEPNAME DS    CL8
         DS    CL3
PCT      DS    CL7
         DS    CL2
PCTGRAPH DS    CL51
         SPACE 5
         DS    0F
DMNLIST  DS    F
DMNMSG   DS    0CL80
         DS    CL7
DMNNBR   DS    CL2
         DS    CL4
DMNPCT   DS    CL7
         DS    CL3
DMNGRAPH DS    CL51
         DS    CL6
         SPACE 2
ESTAELST DS    0F,(ESTAEOVX)X
DMNTAB   DS    200F
WORKEND  DS    0F
         SPACE 5
JOBTABLE DSECT
JOBTAB   DS    800F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
XAA      DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
