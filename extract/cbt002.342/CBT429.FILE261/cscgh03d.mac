         TITLE 'CSCGH03D -   TSO GRAPHIC MONITOR HELP'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       CSCGH03D -       TSO GRAPHIC MONITOR HELP                 ***
***                                                                 ***
***       VERSION -        2.4                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE TO MVS/SP1.3                      ***
***                                                                 ***
***       UPDATED -        07/19/81  AXC-CBT FIX ESTAE              ***
***                        09/27/82  AXC-CBT ADD 3375 AND 3380      ***
***                                  SUPPORT                        ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
CSCGH03D CSECT
         LR    R12,R15
         USING CSCGH03D,R12
         L     R0,SIZE
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         L     R3,XAL              LOAD SUB-PARM ADDR
         MVC   WTOLIST(4),=X'00340100'
         LA    R4,CMDTAB           LOAD COMMAND HELP TABLE ADDR
         LTR   R3,R3               ANY PARMS
         BZ    PRINT               NO, LEVEL 1 HELP
         SPACE 3
PARM     CLC   0(1,R3),0(R4)       TABLE MATCH
         BE    PRINT               YES, USE IT
         LA    R4,4(0,R4)          NEXT ENTRY
         CLI   0(R4),X'00'         END OF TABLE
         BNE   PARM                NO, CONTINUE
         LA    R1,ERRMSG
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         B     RETURN
         EJECT
PRINT    L     R5,0(0,R4)          LEVEL 2 HELP LIST
         SPACE 3
PRINT1   MVC   WTOLIST+4(48),0(R5)
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R5,48(0,R5)         NEXT MSG
         CLI   0(R5),X'00'         END OF MSGS
         BNE   PRINT1              NO, CONTINUE
RETURN   EQU   *
         ESTAE 0
         L     R0,SIZE             LOAD FREEMAIN SIZE
         LR    R1,R13              LOAD FREEMAIN ADDR
         L     R14,SAVRET          LOAD RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14                 EXIT
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(CSCGH03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     RETURN
         EJECT
         LTORG
         SPACE 5
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
ERRMSG   DC    X'00340100'
         DC    CL48'HELP NOT AVAILABLE FOR THIS COMMAND, ENTER  H'
         SPACE 3
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         EJECT
CMDTAB   DS    0F
         DC    C'H',AL3(HDRTAB)
         DC    C'A',AL3(ATAB)
         DC    C'E',AL3(ETAB)
         DC    C'F',AL3(FTAB)
         DC    C'I',AL3(ITAB)
         DC    C'J',AL3(JTAB)
         DC    C'O',AL3(OTAB)
         DC    C'Q',AL3(QTAB)
         DC    C'S',AL3(STAB)
         DC    C'U',AL3(UTAB)
         DC    C'#',AL3(#TAB)
         DC    F'0'
         EJECT
HDRTAB   DS    0F
         DC    CL48'ENTER  H X  FOR HELP WITH COMMAND  X'
         DC    CL48'H -   (GH)  DISPLAY HELP                       '
         DC    CL48'A -   (GA)  DISPLAY JOB ACTIVITY               '
         DC    CL48'E -   (GE)  DISPLAY EXCEPTIONS                 '
         DC    CL48'F -   (GF)  DISPLAY PAGE STATISTICS BY JOB     '
         DC    CL48'J -   (GJ)  DISPLAY CPU UTILIZATION            '
         DC    CL48'I -   (GI)  DISPLAY JES2 INITIATORS            '
         DC    CL48'O -   (GO)  DISPLAY SYSTEM I/O ACTIVITY        '
         DC    CL48'Q -   (GQ)  DISPLAY JES QUEUE  (MODIFIED Q CMD)'
         DC    CL48'S -   (GS)  DISPLAY SYSTEM INDICATORS          '
         DC    CL48'U -   (GU)  DISPLAY DASD FREE SPACE            '
         DC    CL48'# -   (SM)  DISPLAY HELP # COMMANDS            '
         DC    CL48' '
         DC    CL48'FOLLOWING ARE FULL SCREEN POSITIONING COMMANDS.'
         DC    CL48'-NNN        SCROLL UP NNN LINES                '
         DC    CL48'+NNN        SCROLL DOWN NNN LINES              '
         DC    CL48'-           SCROLL TO TOP                      '
         DC    CL48'+           SCROLL TO BOTTOM                   '
         DC    CL48'=YXXXY      FIND STRING EQ XXX, Y IS DELIMITER '
         DC    F'0'
         EJECT
ATAB     DS    0F
 DC    CL48'ANNNN       DISPLAY JOB ACTIVITY  FOR ASID NNNN'
 DC    CL48'            GRAPHIC DISPLAY OF -               '
 DC    CL48'            JOBNAME,  STEPNAME,  PERCENT CPU   '
 DC    CL48'            PERCENT CPU,                       '
 DC    CL48'            PAGE FRAME ALLOCATION,             '
 DC    CL48'            PAGING IN PAGES PER SECOND,        '
 DC    CL48'            AVERAGE JOB CPU UTILIZATION,       '
 DC    CL48'            AVERAGE REAL FRAME USAGE,          '
 DC    CL48'            CURRENT SWAP COUNT,                '
 DC    CL48'            JOB I/O ACTIVITY.                  '
 DC    CL48'            JOB EXCEPTIONS AS FOLLOWS -        '
 DC    CL48'            POSSIBLE LOOPS,                    '
 DC    CL48'            ABEND IN PROGRESS,                 '
 DC    CL48'            WAITING ON REPLIES,                '
 DC    CL48'            WAITING ON ALLOCATION,             '
 DC    CL48'            WAITING ON ENQUEUE CONFLICTS,      '
 DC    CL48'            WAITING ON I/O PENDING,            '
 DC    CL48'            WAITING TO BE SWAPPED IN.          '
 DC    F'0'
         EJECT
ETAB     DS    0F
 DC    CL48'E -         DISPLAY ALL EXCEPTIONS              '
 DC    CL48'ED -        DISPLAY EXCEPTIONS (NOT DEVICE)     '
 DC    CL48'EC -        DISPLAY EXCEPTIONS (NOT CHAN/DEVICE)'
 DC    CL48'            AUTOMATIC REFRESH MINIMUM 10 SEC    '
 DC    CL48'                                                '
 DC    CL48'            EXCEPTIONAL SYSTEM CONDITIONS -     '
 DC    CL48'            EXCESS PAGING AND PAGE I/O BUSY,    '
 DC    CL48'            EXCESS DEVICE UTILIZATION,          '
 DC    CL48'            EXCESS CHANNEL UTILIZATION.         '
 DC    CL48'                                                '
 DC    CL48'            EXCEPTIONAL JOB CONDITIONS -        '
 DC    CL48'            POSSIBLE LOOPS,                     '
 DC    CL48'            ABEND IN PROGRESS,                  '
 DC    CL48'            EXCESS JOB CPU UTILIZATION,         '
 DC    CL48'            EXCESS REAL FRAME USAGE,            '
 DC    CL48'            EXCESS SWAP COUNT,                  '
 DC    CL48'            WAITING ON REPLIES,                 '
 DC    CL48'            WAITING ON ALLOCATION,              '
 DC    CL48'            WAITING ON ENQUEUE CONFLICTS,       '
 DC    CL48'            WAITING ON I/O PENDING,             '
 DC    CL48'            WAITING TO BE SWAPPED IN.           '
 DC    F'0'
         EJECT
FTAB     DS    0F
 DC    CL48'F -         DISPLAY PAGE STATISTICS BY JOB     '
 DC    CL48'            GRAPHIC DISPLAY OF -               '
 DC    CL48'            PAGE FRAME ALLOCATION BY JOB AND   '
 DC    CL48'            PAGING BY JOB IN PAGES PER SECOND. '
 DC    F'0'
         EJECT
JTAB     DS    0F
 DC    CL48'JD -        DISPLAY CPU UTILIZATION            '
 DC    CL48'            GRAPHIC DISPLAY OF -               '
 DC    CL48'            ALL ACTIVE DOMAINS.                '
 DC    CL48'                                               '
 DC    CL48'J -         DISPLAY CPU UTILIZATION            '
 DC    CL48'            GRAPHIC DISPLAY OF -               '
 DC    CL48'            JOBNAME,  STEPNAME,  PERCENT CPU   '
 DC    CL48'            UTILIZATION FOR ACTIVE JOBS.       '
 DC    CL48'                                               '
 DC    CL48'JT -        DISPLAY CPU UTILIZATION            '
 DC    CL48'            GRAPHIC DISPLAY OF -               '
 DC    CL48'            JOBNAME,  STEPNAME,  PERCENT CPU   '
 DC    CL48'            UTILIZATION FOR ACTIVE TSO USERS.  '
 DC    CL48'                                               '
 DC    CL48'JNN -       DISPLAY CPU UTILIZATION            '
 DC    CL48'            GRAPHIC DISPLAY OF -               '
 DC    CL48'            JOBNAME,  STEPNAME,  PERCENT CPU   '
 DC    CL48'            UTILIZATION FOR ALL JOBS IN DMN XX.'
 DC    CL48'                                               '
 DC    F'0'
         EJECT
ITAB     DS    0F
 DC    CL48'I -         DISPLAY JES2 INITIATORS            '
 DC    CL48'            DISPLAY OF -                       '
 DC    CL48'            INITIATOR STATUS,                  '
 DC    CL48'            JOB NUMBER,                        '
 DC    CL48'            JOBNAME,                           '
 DC    CL48'            JOB CLASS,                         '
 DC    CL48'            INITIATOR CLASSES.                 '
 DC    F'0'
         EJECT
OTAB     DS    0F
         DC    CL48'OXNN -      DISPLAY SYSTEM I/O ACTIVITY        '
         DC    CL48'            WHERE -                            '
         DC    CL48'              X -   SCAN TYPE                  '
         DC    CL48'                    A -   ALL DEVICES          '
         DC    CL48'                    V -   DASD AND TAPE        '
         DC    CL48'                    D -   DASD                 '
         DC    CL48'                    T -   TAPE                 '
         DC    CL48'                    U -   UNIT RECORD          '
         DC    CL48'                    C -   COMM AND DISPLAY     '
         DC    CL48'              NN -  PERCENT BUSY THRESHOLD     '
         DC    CL48'                    20% BUSY IS THE DEFAULT    '
         DC    F'0'
         EJECT
QTAB     DS    0F
         DC    CL48'Q XXX       DISPLAY JES QUEUE  (MODIFIED Q CMD)'
         DC    CL48'(NNN)Q XXX  DISPLAY JES QUEUE  (MODIFIED Q CMD)'
         DC    CL48'            WHERE -                            '
         DC    CL48'              NNN -    IS THE NUMBER OF        '
         DC    CL48'                       1000 LINE SEGMENTS      '
         DC    CL48'                       TO INCREMENT INTO THE   '
         DC    CL48'                       DATA SET BEFORE         '
         DC    CL48'                       DISPLAY ANY DATA.       '
         DC    CL48'              XXX -    IS THE Q COMMAND        '
         DC    CL48'              H -         HELP WITH Q CMD      '
         DC    CL48'              DI -        DISPLAY INPUT        '
         DC    CL48'              DO -        DISPLAY OUTPUT       '
         DC    CL48'              DA -        DISPLAY ACTIVE JOBS  '
         DC    CL48'              DT -        DISPLAY ACTIVE TSO   '
         DC    CL48'              DS -        DISPLAY ACTIVE STC   '
         DC    CL48'              JLOG J -    DISPLAY JOBLOG JOB J '
         DC    CL48'              JCL J -     DISPLAY JOBJCL JOB J '
         DC    CL48'              JMSG J -    DISPLAY JOBMSG JOB J '
         DC    CL48'              DD J -      DISPLAY DD IDS JOB J '
         DC    CL48'              SL S -      DISPLAY SYSLOG STC S '
         DC    CL48'              L J DSID -  DISPLAY DATASET DSID '
         DC    CL48'                          JOB J                '
         DC    CL48'     NOTE -   J IS EITHER JOBNAME OR JOB NUMBER'
         DC    CL48'     NOTE -   S IS STC NUMBER                  '
         DC    F'0'
         EJECT
STAB     DS    0F
         DC    CL48'S -         DISPLAY SYSTEM INDICATORS          '
         DC    CL48'            GRAPHIC DISPLAY OF -               '
         DC    CL48'            CURRENT AVERAGE CPU,               '
         DC    CL48'            CURRENT LONG TERM CPU,             '
         DC    CL48'            CURRENT AVERAGE PAGING,            '
         DC    CL48'            CURRENT AVERAGE UIC,               '
         DC    CL48'            CURRENT AVERAGE ASMQ LENGTH,  AND  '
         DC    CL48'            CURRENT MPL FOR EACH DOMAIN        '
         DC    CL48'            CONTAINING RUNNING JOBS.           '
         DC    CL48'                                               '
         DC    CL48'SA -        DISPLAY SYSTEM INDICATORS          '
         DC    CL48'            GRAPHIC DISPLAY OF -               '
         DC    CL48'            AVERAGE AVERAGE CPU,               '
         DC    CL48'            AVERAGE LONG TERM CPU,             '
         DC    CL48'            AVERAGE AVERAGE PAGING,            '
         DC    CL48'            AVERAGE AVERAGE UIC,               '
         DC    CL48'            AVERAGE AVERAGE ASMQ LENGTH,  AND  '
         DC    CL48'            CURRENT MPL FOR EACH DOMAIN        '
         DC    CL48'            CONTAINING RUNNING JOBS.           '
         DC    F'0'
         EJECT
UTAB     DS    0F
         DC    CL48'U           DISPLAY DASD SPACE ALL ONLINE DASD '
         DC    CL48'U VVVV      DISPLAY DASD SPACE ON VOLUME VVVV  '
         DC    CL48'            WHERE VVVV IS A 1-6 DIGIT VOLSER OR'
         DC    CL48'            VOLSER PREFIX                      '
         DC    CL48'U U=NNN     DISPLAY DASD SPACE ON UNIT NNN     '
         DC    CL48'U D=XXXX    DISPLAY DASD SPACE ON DEVTYPE XXXX '
         DC    CL48'            (3330,3330V,3330-1,3350,2305-2,    '
         DC    CL48'             3375,3380)                        '
         DC    CL48'                                               '
         DC    CL48'            DISPLAY OF -                       '
         DC    CL48'            UNIT, DEVTYPE, STATUS, VOLSER,     '
         DC    CL48'            NO. OF DCBS OPEN, NO. OF USERS,    '
         DC    CL48'            FREE CYLS, FREE TRKS, FREE EXTENTS,'
         DC    CL48'            LARGEST CONTIG EXTENT CYL/TRK      '
         DC    F'0'
         EJECT
#TAB     DS    0F
         DC    CL48'ENTER  #H X  FOR HELP WITH COMMAND  X'
         DC    CL48'       L= NN    DIRECTS COMMAND OUTPUT TO       '
         DC    CL48'                CONSOLE WITH ID =  NN           '
         DC    CL48'       T= NNN   SETS TIME LIMIT IN SECONDS FOR  '
         DC    CL48'                MONITOR COMMANDS   1 - 999      '
         DC    CL48'       S= XXXX  DIRECTS THE COMMAND TO SYSTEM   '
         DC    CL48'                XXXX AND THE OUTPUT BACK TO     '
         DC    CL48'                THE ORIGINATOR.                 '
         DC    CL48'#A -   (SE)  DISPLAY JOB STATUS -  EXPANDED  D A'
         DC    CL48'#C -   (SK)  CALCULATOR, TOD, AND MSTCONS SWITCH'
         DC    CL48'#D -   (SD)  DISPLAY AND ZAP CORE               '
         DC    CL48'#E -   (SS)  EXECUTE AN OPERATOR COMMAND        '
         DC    CL48'#F -   (SF)  DISPLAY PAGE FRAME ASSIGNMENTS     '
         DC    CL48'#H -   (SM)  DISPLAY HELP                       '
         DC    CL48'#I -   (SJ)  DISPLAY IPS AND SWAP COUNTS        '
         DC    CL48'#J -   (SL)  MODIFIED DISPLAY ACTIVE REPLACEMENT'
         DC    CL48'#L -   (SC)  DISPLAY LINES FOR TSO              '
         DC    CL48'#M -   (SO)  TSO MULTIPLE SEND                  '
         DC    CL48'#N -   (SA)  DISPLAY ENQUEUE                    '
         DC    CL48'#O -   (SR)  DISPLAY PENDING I/O AND ALLOCATION '
         DC    CL48'#P -   (SP)  DISPLAY SU CONFIGURATION           '
         DC    CL48'#Q -   (SQ)  ANALYZE ENQUEUE CONFLICTS          '
         DC    CL48'#R -   (SG)  DISPLAY DEVICE STATUS              '
         DC    CL48'#S -   (SH)  DISPLAY LPA MODULES                '
         DC    CL48'#T -   (SN)  DISPLAY TIOT AND EXCP COUNTS BY DD '
         DC    CL48'#V -   (SI)  DISPLAY UNIT                       '
         DC    CL48'##A -  (ZA)  MONITOR JOB ACTIVITY               '
         DC    CL48'##B -  (ZB)  MONITOR DEVICE BUSY                '
         DC    CL48'##C -  (ZC)  MONITOR CHANNEL BUSY               '
         DC    CL48'##J -  (ZJ)  MONITOR JOBS                       '
         DC    CL48'##P -  (ZP)  MONITOR PAGING                     '
         DC    CL48'##S -  (ZS)  MONITOR SYSTEM INDICATORS          '
         DC    F'0'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    F
XSASAVE  DS    F
         SPACE 3
         DS    0F
WTOLIST  DS    CL54
         SPACE 3
ESTAELST DS    0F,(ESTAEOVX)X
WORKEND  DS    0D
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
