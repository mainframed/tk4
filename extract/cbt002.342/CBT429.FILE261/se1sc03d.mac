         TITLE 'IEESC03D -   #L  DISPLAY TSO LINES'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESC03D -       #L DISPLAY TSO LINES                     ***
***                                                                 ***
***       VERSION -        1.4                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        07/19/81  AXC-CBT HANDLE ESTAE           ***
***                        08/10/81  JCC-BCB TEST FOR END OF ASCBS  ***
***                                          ADD VTAM LOGIC         ***
***                        08/10/81  JGS - TEST IF UNDER TSO      NERDC
***                        01/11/82  RLL - CHANGE ESTAE PARM LENGTH ***
***                        01/19/82  AXC-CBT CHANGE TSO CHECK       ***
***                                                                 ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESC03D CSECT
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESC03D,R12
         LA    R0,LWKDSECT        SIZE OF SAVE-AREA AND WORK-AREA
         O     R0,SUB241          GET FROM SUB-POOL 241
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WKDSECT,R13        FIRST 18 WRDS ARE SAVE-AREA
         USING XSA,R2
         XC    0(LWKDSECT,R13),0(R13)  ZERO-OUT WORK AREA
         ST    R14,SAVA           PUT RETURN ADDRESS IN UNUSED SLOT
         ST    R2,XSASAVE         SAVE XSA POINTER
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         SR    R3,R3              CLEAR REGISTER
         IC    R3,XAU             R3 = CONSOL ID FOR MCS
         MVI   WTOLIST+2,X'01'    MCSFLAGS = QREG0
         XC    SWTCH,SWTCH        ZERO-OUT SWTCH
         LA    R6,BUFFER          START OF BUFFER
         MVI   BUFFER,C' '        BLANK-OUT BUFFER
         MVC   BUFFER+1(59),BUFFER                                JCC
         LA    R7,2               ENTRIES PER LINE
         L     R11,16             CVT ADDR
         L     R9,556(0,R11)      LOAD ASVT ADDR
         L     R5,516(0,R9)       MAX # OF ASIDS                  JCC
         MH    R5,=H'4'           MULTIPLY BY 4                   JCC
         LA    R5,528(R5,R9)      ADD TO ADDR OF FIRST ASCB       JCC
         ST    R5,ASCBEND         STORE ADDR OF LAST ASCB         JCC
         ZAP   TOTUSER,=P'0'      CLEAR TOTAL FIELD               JCC
         LA    R9,520(0,R9)       ASVT ENTRY ADDR
         B     NEXTONE            GO GET ASCB
         EJECT
***********************************************************************
*
*        LOOP THRU ALL ASCBS
*
***********************************************************************
         USING TSB,R11                                            JCC
LOOP1    LM    R10,R11,56(R8)      LOAD CSCB/TSB ADDR
         LTR   R11,R11             ANY TSB
         BZ    NEXTONE             NO, NOT TP USER
         AP    TOTUSER,=P'1'       ADD 1 TO USER TOTAL            JCC
         MVI   SWTCH,X'F0'         OUTPUT EXISTS
         MVC   1(8,R6),8(R10)      JOBNAME
         MVI   10(R6),C'('         BRACKET ASCB
         UNPK  11(5,R6),36(3,R8)   UNPACK ASID
         NC    11(4,R6),=4X'0F'       AND
         TR    11(4,R6),=C'0123456789ABCDEF' TRANSLATE
         MVI   15(R6),C')'         BRACKET ASID
*        CLC   =C'0A23',TSTSVC35   IF EXECUTING UNDER TSO         NERDC
         CLC   =XL2'0A23',TSTSVC35   IF EXECUTING UNDER TSO     CBT-AX
*        BNE   SKIPLINE             BYPASS ABEND S0C4             NERDC
         BNE   LOOP1C               BYPASS ABEND S0C4           CBT-AXC
         MVI   17(R6),C'-'
         TM    TSBFLG5,TSBVTAM     IF THIS IS VTAM                JCC
         BO    VTAMRTN             THEN GO TO EXTENSION           JCC
         UNPK  18(5,R6),82(3,R11)  UNPACK LINE ADDR
         NC    19(3,R6),=4X'0F'       AND
         TR    19(3,R6),=C'0123456789ABCDEF' TRANSLATE
         MVI   18(R6),C' '
         MVI   22(R6),C' '
LOOP1C   DS    0H                                                 JCC
         LA    R6,ENTRYSIZ(0,R6)   INCR INTO BUFFER
         BCT   R7,NEXTONE          NEXT ASCB
         LA    R4,60               MSG LENGTH                     JCC
         BAL   R11,IOCS            GO WTO
         LA    R7,2                ENTRIES PER LINE
         LA    R6,BUFFER           LOAD BUFFER ADDR
         MVI   0(R6),C' '
         MVC   1(59,R6),0(R6)                                     JCC
         SPACE 3
NEXTONE  LA    R9,4(0,R9)          INCR INTO ASVT
         L     R8,0(0,R9)          LOAD ASCB ADDR
         C     R9,ASCBEND          END OF ASCBS?                  JCC
         BNL   LOOP2               YES, EXIT                      JCC
         TM    0(R9),X'80'         ASID ASSIGNED
         BO    NEXTONE             NO, CHECK NEXT
         B     LOOP1
VTAMRTN  DS    0H                                                 JCC
         L     R5,TSBEXTNT         FETCH TSB EXTENSION ADDRESS    JCC
         USING TSBX,R5             TELL THE ASSEMBLER             JCC
         TM    TSBXFLG1,TSBXWREC   IF NOT WAITING RECONNECT       JCC
         BNO   VTGETSYM            THEN GO GET SYMBOLIC NAME      JCC
         MVC   19(8,R6),=CL8'*DISCON*'   SET DISCONNECT STATUS    JCC
         B     LOOP1C              GO BACK TO LOOP                JCC
VTGETSYM DS    0H                                                 JCC
         MVC   19(8,R6),TSBTRMID   MOVE SYMBOLIC NAME TO LINE     JCC
         B     LOOP1C              GO BACK TO LOOP                JCC
         DROP  R5,R11                                             JCC
         SPACE 3
LOOP2    CH    R7,=H'2'            ANY TO WRITE
         BE    CLEANUP             NO, EXIT
         LA    R4,60               MSG LENGTH                     JCC
         BAL   R11,IOCS            WRITE LAST
         EJECT
***********************************************************************
*
*        RELEASE ALL CORE AND RETURN
*
***********************************************************************
CLEANUP  TM    SWTCH,X'F0'        DID OUTPUT EXIST ?
         BZ    NOOUTPUT           NO...
         MVI   BUFFER,C' '        CLEAR THE                       JCC
         MVC   BUFFER+1(59),BUFFER          BUFFER AREA           JCC
         MVC   BUFFER(28),TOTMSG     MOVE THE TOTAL MESSAGE       JCC
         MVC   BUFFER+28(4),=X'40202120'  MOVE EDIT MASK          JCC
         ED    BUFFER+28(4),TOTUSER  EDIT THE TOTAL               JCC
         LA    R4,60              MESSAGE LENGTH                  JCC
         BAL   R11,IOCS           WRITE TOTALS                    JCC
         SPACE 2
CLNUPX   EQU   *
         ESTAE 0
         LA    R0,LWKDSECT        SIZE OF CORE
         O     R0,SUB241          RETURN TO SUB-POOL 241
         LR    R1,R13             START OF CORE
         L     R4,SAVA
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         LR    R14,R4
         BR    R14                RETURN
         EJECT
***********************************************************************
*
*        I/O CONTROL SECTION
*
*        ON ENTRY :
*                  R3  = CONSOL ID FOR MCS
*                  R4  = LENGTH OF MESSAGE
*                  R11 = RETURN ADDRESS
*
***********************************************************************
IOCS     DS    0H
OPER     LA    R4,4(,R4)          ADD CONTROL BYTES TO LENGTH
         STH   R4,WTOLIST         SET LENGTH IN CONTROL FIELD
         LA    R1,WTOLIST
         SR    R0,R0
         IC    R0,XAU             R0 = CONSOL ID FOR MCS
TSTSVC35 SVC   35                 LABEL FOR TEST IF UNDER TSO     NERDC
         BR    R11                RETURN
         EJECT
***********************************************************************
*
*        ISSUE ERROR MESSAGES HERE
*
***********************************************************************
NOOUTPUT MVC   BUFFER(LMSG),MSG   SET ERROR MESSAGE
         LA    R4,LMSG
         SPACE 2
         BAL   R11,IOCS
         B     CLNUPX
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESC03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     CLNUPX
         EJECT
***********************************************************************
*
*        DSECTS, EQUATES, TABLES, ETC.
*
***********************************************************************
         SPACE 2
         DS    0F                 ALIGN ON FULL WORD BOUNDARY
SUB241   DC    X'F1000000'        MASK FOR SUB-POOL 241
ENTRYSIZ EQU   28                 SIZE OF EACH ENTRY IN BUFFER    JCC
MSG      DC    C'   ***    NO ACTIVE TP USERS    ***'
LMSG     EQU   *-MSG
TOTMSG   DC    CL28'TOTAL NUMBER OF TSO USERS IS'                 JCC
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 2
WKDSECT  DSECT
SAVA     DS    18F                SAVE-AREA
XSASAVE  DS    F                  EXTENDED SAVE-AREA ADDRESS
WTOLIST  DS    F                  WTO CONTROL WORD
BUFFER   DS    CL60               WTO BUFFER                      JCC
SWTCH    DS    CL1
ESTAELST DS    0F,(ESTAEOVX)X                         ****(RLL)****
ASCBEND  DS    F                                                  JCC
TOTUSER  DS    PL2                                                JCC
LWKDSECT EQU   *-WKDSECT
         SPACE 2
DSXSA    DSECT
XSA      DS    0D
XAP      DS    F                  PTR TO XCTL NAME
XAD      DS    F                  DCB PTR
XAX      DS    D                  XCTL NAME
XAE      DS    0C                 ERROR CODE
XAR      DS    F                  PTR TO PARM LIST (REG1)
XAN      DS    0C                 VERB INDEX
XAL      DS    F                  PTR TO LIST POSITION
XAV      DS    D                  VERB
XAS      DS    D                  TEMP SAVE-AREA
XAU      DS    C                  UCM ENTRY INDICATOR
         DS    C                  RESERVED
XAJ      DS    H                  TJID ENTRY INDICATOR
         DS    F                  RESERVED
         EJECT                                                    JCC
         IKJTSB LIST=YES,EXT=YES                                  JCC
         EJECT
         IHASDWA                  RESERVED
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
