         TITLE 'XA1SH03D -   #S  DISPLAY LPA MODULES'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESH03D -       #S  DISPLAY LPA MODULES                  ***
***                                                                 ***
***       VERSION -        1.3                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/XA  2.1                              ***
***                                                                 ***
***       UPDATED -        07/21/81  AXC-CBT HANDLE ESTAE           ***
***                        01/26/83  AXC-CBT CHANGE ESTAE PARM LEN  ***
***                        05/10/86  GLA-BFG FIX FOR 31 BIT XA      ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESH03D CSECT
         LR    R12,R15
         USING IEESH03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         L     R3,XAL              LOAD LIST POINTER
         LA    R3,0(0,R3)          CLEAR HIGH ORDER
         LTR   R3,R3               PARM EXIST
         BZ    NOPARM              NO, CHECK RETURN
         MVC   WTOLIST+4(9),0(R3)  SAVE MODULE NAME
         CLI   0(R3),C'*'          ADDRESS
         BE    ADDRESS             YES, GO SEARCH
         L     R4,16               CVT ADDR
         L     R4,188(0,R4)        LPA CDE
         L     R4,0(0,R4)          1ST CDE
         LA    R5,WTOLIST+4        MODULE NAME
         SR    R9,R9               CDE INDICATOR
         SPACE
CDECHK   CLC   8(8,R4),0(R5)       MATCH
         BE    PRINT               YES, GO PRINT
         L     R4,0(0,R4)          NEXT CDE
         LA    R4,0(0,R4)          CLEAR HIGH ORDER
         LTR   R4,R4               END OF CHAIN
         BNZ   CDECHK              NO, GO CHECK NEXT
         L     R4,16               CVT
         L     R4,360(0,R4)        LPDE CHAIN
         LA    R9,4                LPDE INDICATOR
         SPACE
LPDECHK  CLC   8(8,R4),=8X'FF'     END OF CHAIN
         BE    NOTFOUND            YES, MODULE NOT FOUND
         CLC   8(8,R4),0(R5)       MATCH
         BE    PRINT               YES, GO PRINT
         LA    R4,40(0,R4)         NEXT LPDE
         B     LPDECHK             GO CHECK NEXT
         EJECT
ADDRESS  LA    R7,WTOLIST+5        ADDRESS
         SR    R4,R4               CLEAR RESULT
         LA    R6,8                SET FOR FULL XA ADDRESS     GLA-BFG
PARMCNV0 CLI   0(R7),C'0'          VALID CHAR
         BL    PARMCNV1            NO
         CLI   0(R7),C'9'          VALID CHAR
         BH    ERROR               NO, PARM ERROR
         B     PARMCNV2            O.K., VALID PARM
         SPACE
PARMCNV1 CLI   0(R7),C'A'          VALID CHAR
         BL    ERROR               NO, PARM ERROR
         CLI   0(R7),C'F'          VALID CHAR
         BH    ERROR               NO, PARM ERROR
         SPACE
PARMCNV2 SR    R8,R8               INSERT
         IC    R8,0(0,R7)             DIGIT
         SRDL  R8,4                SHIFT OUT NUMERIC
         SRL   R9,28               ADJUST NUMERIC
         AH    R9,=H'9'               VALUE
         SH    R8,=H'12'           MAKE SIGN 0 OR 3
         MH    R8,=H'3'            MAKE SIGN 0 OR 9
         SR    R9,R8               CALCULATE HEX VALUE
         LR    R5,R9               LOAD HEX VALUE AND
         SLL   R5,28                  SHIFT INTO
         SLDL  R4,4                      RESULT
         LA    R7,1(0,R7)          NEXT BYTE
         BCT   R6,PARMCNV0
         LR    R5,R4               SAVE ADDRESS
         L     R4,16               CVT ADDR
         L     R4,188(0,R4)        LPA CDE
         L     R4,0(0,R4)          1ST CDE
         SR    R9,R9               CDE INDICATOR
         EJECT
ACDECH1  TM    28(R4),X'04'        MINOR CDE
         BO    ACDECH2             YES, GO TRY NEXT
         L     R6,20(0,R4)         EXTENT LIST
         L     R7,8(0,R6)          LOAD MODULE LENGTH
         LA    R7,0(0,R7)          CLEAR HIGH ORDER
         L     R6,12(0,R6)         LOAD MODULE ADDR
         CR    R5,R6               MATCH
         BL    ACDECH2             NO, TRY NEXT
         AR    R6,R7               MODULE END
         CR    R5,R6               MATCH
         BL    APRINT              YES, GO PRINT
         SPACE
ACDECH2  L     R4,0(0,R4)          NEXT CDE
         LA    R4,0(0,R4)          CLEAR HIGH ORDER
         LTR   R4,R4               END OF CHAIN
         BNZ   ACDECH1             NO, GO CHECK NEXT
         L     R4,16               CVT
         L     R4,360(0,R4)        LPDE CHAIN
         LA    R9,4                LPDE INDICATOR
         SPACE
ALPDECH1 CLC   8(8,R4),=8X'FF'     END OF CHAIN
         BE    NOTADDR             YES, ADDR NOT FOUND
         TM    28(R4),X'04'        MINOR LPDE
         BO    ALPDECH2            YES, TRY NEXT
         L     R6,36(0,R4)         LOAD MODULE ADDR
         L     R7,32(0,R4)         LOAD MODULE LEN
         LA    R7,0(0,R7)          CLEAR HIGH ORDER
         CR    R5,R6               MATCH
         BL    ALPDECH2            NO, TRY NEXT
         AR    R6,R7               MODULE END
         CR    R5,R6               MATCH
         BL    APRINT              YES, GO PRINT
         SPACE
ALPDECH2 LA    R4,40(0,R4)         NEXT LPDE
         B     ALPDECH1            GO CHECK NEXT
         EJECT
APRINT   MVC   WTOLIST+4(8),8(R4)  MODULE NAME
         SPACE
PRINT    MVI   WTOLIST+14,C' '     CLEAR
         MVC   WTOLIST+15(37),WTOLIST+14
         MVC   WTOLIST+14(8),WTOLIST+4
         ST    R4,DOUBLE
         UNPK  WTOLIST+4(9),DOUBLE(5)
         NC    WTOLIST+4(8),=8X'0F'
         TR    WTOLIST+4(8),=C'0123456789ABCDEF'
         MVI   WTOLIST+12,C' '
         MVI   WTOLIST+13,C' '
         LTR   R9,R9
         BNZ   PRINTXL             LPDE
         L     R6,20(0,R4)         LOAD XTNT LIST ADDR
         TM    28(R4),X'04'        MINOR CDE
         BNO   PRINTCD             NO, USE THIS ONE
         L     R6,20(0,R6)         LOAD MAJOR XTNT LIST ADDR
PRINTCD  UNPK  WTOLIST+24(9),12(5,R6) TRANSLATE
         B     PRINTXC
PRINTXL  UNPK  WTOLIST+24(9),36(5,R4) TRANSLATE
PRINTXC  NC    WTOLIST+24(8),=8X'0F'   MODULE ADDR
         TR    WTOLIST+24(8),=C'0123456789ABCDEF'
         MVI   WTOLIST+32,C' '
         B     *+4(R9)             BR BY TYPE
         B     PRTCDE              CDE
         TM    28(R4),X'04'        MINOR LPDE
         BNO   PRTLSIZ             NO, GO PRINT MODULE SIZE
         MVC   WTOLIST+34(8),32(R4) PRINT MAJOR NAME
         MVC   WTOLIST+24(7),=C'*MAJOR='
         B     WTO
         SPACE
PRTLSIZ  UNPK  WTOLIST+34(7),33(4,R4)
         NC    WTOLIST+34(6),=6X'0F'
         TR    WTOLIST+34(6),=C'0123456789ABCDEF'
         MVI   WTOLIST+40,C' '
         B     WTO
         SPACE
PRTCDE   UNPK  WTOLIST+34(7),9(4,R6) TRANSLATE
         NC    WTOLIST+34(6),=6X'0F'
         TR    WTOLIST+34(6),=C'0123456789ABCDEF'
         MVI   WTOLIST+40,C' '
         MVC   WTOLIST+42(4),=C'USE='
         UNPK  WTOLIST+47(5),24(3,R4)  USE COUNT
         NC    WTOLIST+47(4),=6X'0F'
         TR    WTOLIST+47(4),=C'0123456789ABCDEF'
         MVI   WTOLIST+51,C' '
         SPACE 3
WTO      LA    R1,WTOLIST
         MVC   WTOLIST(4),=X'00340100'
         SR    R0,R0
         IC    R0,XAU              MCSID
         SVC   35
         B     RETURN
         EJECT
NOTFOUND LA    R1,NFNDMSG          NOT FOUND
         B     MSGRTN
         SPACE 3
NOTADDR  LA    R1,NFNDADR          NOT FOUND
         B     MSGRTN
         SPACE 3
ERROR    LA    R1,BADADR           INVALID ADDR
         B     MSGRTN
         SPACE 3
NOPARM   LA    R1,ERRMSG           PARM ERROR
         SPACE 3
MSGRTN   SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         SPACE 3
RETURN   EQU   *
         ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESH03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     RETURN
         EJECT
         LTORG
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'MODULE NOT FOUND'
         SPACE 3
         DS    0F
NFNDADR  DC    X'00360100'
         DC    CL50'ADDRESS NOT FOUND'
         SPACE 3
         DS    0F
BADADR   DC    X'00360100'
         DC    CL50'ADDRESS INVALID'
         SPACE 3
         DS    0F
ERRMSG   DC    X'00360100'
         DC    CL50'PARAMETER MISSING'
         SPACE 3
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
DOUBLE   DS    2F
SAVRET   DS    18F
XSASAVE  DS    F
WTOLIST  DS    52C
ESTAELST DS    0F,(ESTAEOVX)X AXC-CBT
WORKEND  DS    0D
         SPACE 5
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
