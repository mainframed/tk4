         TITLE 'IEEZJ03D -   ##J  JOB MONITOR'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEEZJ03D -       ##J  JOB MONITOR                         ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/XA 2.1.1                             ***
***                                                                 ***
***       UPDATED -        09/01/79                                 ***
***                        08/10/81  JCC-BCB TEST FOR END OF ASCBS  ***
***                        05/15/83  JAL-SNET INCREASE JOBTABLE TO  ***
***                                      HOLD 300 ASIDS             ***
***                        02/07/84  JAL-ADD 31-BIT CODING FOR XA   ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEEZJ03D CSECT
IEEZJ03D AMODE 24
IEEZJ03D RMODE 24
         SPLEVEL SET=2
         LR    R12,R15
         USING IEEZJ03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         LR    R10,R13             LOAD SAVE AREA ADDR
         L     R9,AMODE31                                   -JAL/XA-
         BSM   0,R9                                         -JAL/XA-
AMODE31  DC    A(CONT31+X'80000000')                        -JAL/XA-
CONT31   DS    0H                                           -JAL/XA-
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         MVI   TSOSW,C' '
         L     R1,XAT              LOAD WAITTIME ADDR
         L     R15,8(0,R1)         LOAD HEX WAITTIME
         LTR   R15,R15             TIME NOT SPECIFIED
         BNZ   *+10                NO
         MVC   0(8,R1),=CL8'00003000'   30 SECONDS DEFAULT
         L     R3,XAL              PARM LIST ADDR
         LA    R3,0(0,R3)
         LTR   R3,R3               ANY PARM
         BZ    PARM2               NO
         MVC   TSOSW(2),0(R3)      SAVE PARM
         CLI   TSOSW,C'T'          TSO DISPLAY
         BE    PARM2               YES, CONTINUE
         CLI   TSOSW,C'J'          JOB DISPLAY
         BE    PARM1               YES, CONTINUE
         MVC   DOUBLE(2),=C'00'
         MVZ   DOUBLE(2),TSOSW
         CLC   DOUBLE(2),=C'00'    DOMAIN DISPLAY
         BNE   PARM1
         PACK  DOUBLE(8),TSOSW(2)
         CVB   R1,DOUBLE
         STC   R1,DOMAIN           SAVE DOMAIN
         MVI   TSOSW,C'D'
         B     PARM2
         SPACE 1
PARM1    MVI   TSOSW,C' '
         SPACE 1
PARM2    MVC   WTOLIST(4),=X'00400100'
         MVI   SCANRET,C' '        SET FOUND
         MVI   SCANTYPE,C'I'       SET IN QUEUE SCAN
         EJECT
SETINIT  L     R4,16               CVT
         L     R4,556(0,R4)        ASVT
         L     R8,516(0,R4)        MAX # ASIDS                   JCC
         CH    R8,=H'0300'         OVER 300 ASIDS                JAL
         BH    RETURN               YES, GET OUT                 JAL
         MH    R8,=H'4'            MULT BY LENGTH                JCC
         LA    R8,528(R4,R8)       FIND END OF ASID LIST         JCC
         ST    R8,ASVTEND          STORE THAT ADDR               JCC
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         LA    R8,JOBTABLE         ASCB/OUCB INFO STORAGE
         SPACE 1
SETINIT1 XC    0(16,R8),0(R8)
         SPACE 1
SETINIT2 LA    R4,4(0,R4)          INCR INTO ASVT
         C     R4,ASVTEND          END OF ASVT                   JCC
         BNL   SETINIT3            YES, EXIT                     JCC
         TM    0(R4),X'80'         AVAILABLE SLOT
         BO    SETINIT2            YES
         L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         L     R7,144(0,R5)        OUCB ADDR
         ST    R5,0(0,R8)          SAVE ENTRY ID
         SR    R14,R14
         SR    R15,R15
         ICM   R15,3,40(R5)        EXCP COUNT
         A     R15,108(0,R7)       OUCB EXCP COUNT
         ST    R15,4(0,R8)         SAVE TOTAL EXCPS
         LM    R14,R15,64(R5)      TCB TIME
         SRDL  R14,22
         LR    R1,R15
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R1,R15
         ST    R1,8(0,R8)          SAVE TOTAL CPU TIME
         LA    R8,12(0,R8)         NEXT ENTRY
         B     SETINIT1
         SPACE 1
SETINIT3 L     R3,XAT              LOAD WAITTIME ADDR
         STIMER WAIT,DINTVL=(R3)
         LA    R1,HDRI             IN QUEUE HDR
         BAL   R11,MSGRTN1
         EJECT
JOBOUT   MVI   JOBMSG,C' '
         MVC   JOBMSG+1(59),JOBMSG
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         L     R5,516(0,R4)        MAX # ASIDS                   JCC
         MH    R5,=H'4'            MULT BY LENGTH                JCC
         LA    R5,528(R4,R5)       FIND END OF ASID LIST         JCC
         ST    R5,ASVTEND          STORE THAT ADDR               JCC
         LA    R4,524(0,R4)        ASCB SLOT ADDR
         B     JOBOUT4
         SPACE 1
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         LA    R5,0(0,R5)
         L     R6,56(0,R5)         CSCB ADDR
         L     R7,144(0,R5)        LOAD OUCB ADDR
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN
         BNE   JOBOUT2             NO
         CLI   41(R7),X'00'        SRC PRESENT
         BNE   JOBOUT6             YES, GO CHECK DET WAIT
         CLI   38(R5),X'7F'        LOGICAL SWAP
         BE    JOBOUT4             YES, OUT
         B     JOBOUT3             CONTINUE
         SPACE 1
JOBOUT2  CLI   38(R5),X'7F'        LOGICAL SWAP
         BE    JOBOUT3             YES, OUT QUEUE
         CLI   41(R7),X'00'        SWAP REASON
         BE    JOBOUT4             NO, IN QUEUE
         CLI   41(R7),X'06'        DETECTED WAIT
         BNE   JOBOUT3             NO
         TM    21(R7),X'01'        MSO DET WAIT BIT ON
         BZ    JOBOUT4             NO, IGNORE SRC
         SPACE 1
JOBOUT3  BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         L     R6,144(0,R5)        OUCB ADDR
         L     R3,60(0,R5)         TSB ADDR
         L     R5,56(0,R5)         CSCB ADDR
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO
         LA    R1,WTOLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         SPACE 1
JOBOUT4  LA    R4,4(0,R4)          INCR INTO ASVT
         C     R4,ASVTEND          END OF ASVT                   JCC
         BNL   JOBOUT5             YES, RETURN                   JCC
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT4             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         SPACE 1
JOBOUT5  CLI   SCANTYPE,C'O'       OUT QUEUE SCAN
         BE    RETURN              YES, EXIT
         MVI   SCANRET,C' '        INIT OUTPUT SWITCH
         MVI   SCANTYPE,C'O'       SET OUT QUEUE SCAN NEXT
         LA    R1,HDRO             OUT QUEUE HDR
         BAL   R11,MSGRTN1
         B     JOBOUT              NEXT PASS
         SPACE 1
JOBOUT6  CLI   41(R7),X'06'        DETECTED WAIT
         BNE   JOBOUT4             NO
         TM    21(R7),X'01'        MSO DET WAIT BIT ON
         BZ    JOBOUT3             NO, IGNORE SRC
         B     JOBOUT4
         EJECT
ASCBFORM UNPK  DOUBLE(5),36(3,R5)
         NC    DOUBLE(4),=4X'0F'
         TR    DOUBLE(4),=C'0123456789ABCDEF'
         MVC   ASID(4),DOUBLE      SAVE ASID
         LA    R8,JOBTABLE
         SPACE 1
ASCBFRM1 CLC   0(4,R8),=F'0'       JOBTABLE END
         BE    ASCBFRM2            YES
         C     R5,0(0,R8)          ASCB MATCH
         BE    ASCBFRM2            YES
         LA    R8,12(0,R8)         NEXT ENTRY
         B     ASCBFRM1
         SPACE 1
ASCBFRM2 MVC   CPUT(10),=XL10'402021204B40404B4040'
         LM    R14,R15,64(R5)      CPU TIME
         SRDL  R14,22
         LR    R9,R15              SAVE CPU TIME
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R15,R9              CPU PLUS SRB TIME
         SR    R14,R14
         D     R14,=F'10'          HUNDREDTHS
         SR    R14,R14
         D     R14,=F'100'         SECONDS
         CVD   R14,DOUBLE          HUNDREDTHS TO PRINT
         UNPK  CPUT+8(2),DOUBLE+6(2)
         OI    CPUT+9,X'F0'
         SR    R14,R14
         D     R14,=F'60'          MINUTES
         CVD   R14,DOUBLE          SECONDS TO PRINT
         UNPK  CPUT+5(2),DOUBLE+6(2)
         OI    CPUT+6,X'F0'
         CVD   R15,DOUBLE          MINUTES TO PRINT
         ED    CPUT(4),DOUBLE+6
         CLI   CPUT+2,C' '         OVER 9 MINUTES
         BNE   ASCBFRM4            YES
         CLC   CPUT+3(3),=C'0.0'
         BNE   ASCBFRM3
         MVC   CPUT+3(3),=CL8' '
         SPACE 1
ASCBFRM3 CLC   CPUT+3(2),=C'0.0'
         BNE   ASCBFRM4
         MVC   CPUT+3(2),=CL8' '
         SPACE 1
ASCBFRM4 CLC   0(4,R8),=F'0'       ANY INTERVAL DATA
         BE    ASCBFRM6            NO
         MVC   CPUC(8),=XL8'40404B40404B4040'
         LM    R14,R15,64(R5)      CPU TIME
         SRDL  R14,22
         LR    R9,R15              SAVE CPU TIME
         LM    R14,R15,200(R5)     SRB TIME
         SRDL  R14,22
         AR    R15,R9              CPU PLUS SRB TIME
         C     R15,8(0,R8)         STEP CHANGE INDICATED
         BNL   *+14                NO
         MVC   CPUC+1(7),=CL7'**CHG**'
         B     ASCBFRM6
         SR    R14,R14
         S     R15,8(0,R8)         CALCULATE INTERVAL TIME
         D     R14,=F'10'          HUNDREDTHS
         SR    R14,R14
         D     R14,=F'100'         SECONDS
         CVD   R14,DOUBLE          HUNDREDTHS TO PRINT
         UNPK  CPUC+6(2),DOUBLE+6(2)
         OI    CPUC+7,X'F0'
         SR    R14,R14
         D     R14,=F'60'          MINUTES
         CVD   R14,DOUBLE          SECONDS TO PRINT
         UNPK  CPUC+3(2),DOUBLE+6(2)
         OI    CPUC+4,X'F0'
         CVD   R15,DOUBLE          MINUTES TO PRINT
         UNPK  CPUC(2),DOUBLE+6(2)
         OI    CPUC+1,X'F0'
         MVI   CPUC,X'40'
         CLC   CPUC+1(3),=C'0.0'
         BNE   ASCBFRM5
         MVC   CPUC+1(3),=CL8' '
         SPACE 1
ASCBFRM5 CLC   CPUC+1(2),=C'0.0'
         BNE   ASCBFRM6
         MVC   CPUC+1(2),=CL8' '
         SPACE 1
ASCBFRM6 SR    R14,R14
         SR    R15,R15
         ICM   R15,3,40(R5)        EXCP COUNT
         A     R15,108(0,R7)       OUCB EXCP COUNT
         LR    R1,R15              SAVE TOTAL EXCPS
         MVC   EXCPT(10),=XL10'40206B2020206B202120'
         CVD   R1,DOUBLE
         ED    EXCPT(10),DOUBLE+4
         CLC   0(4,R8),=F'0'       ANY INTERVAL DATA
         BCR   8,R11               NO
         C     R1,4(0,R8)          STEP CHANGE INDICATED
         BNL   *+12                NO
         MVC   EXCPC+1(5),=CL5'*CHG*'
         BR    R11
         S     R1,4(0,R8)          SUB PREV COUNT
         CVD   R1,DOUBLE
         MVC   EXCPC(6),=X'402020202120'
         ED    EXCPC(6),DOUBLE+5
         BR    R11
         EJECT
CSCBFORM CLI   TSOSW,C'T'          TSO USER DISPLAY
         BNE   CSCBFRM0            NO
         CLI   28(R5),X'01'        TSO USER
         BNE   JOBOUT4             NO, BYPASS
         B     CSCBFRM6
         SPACE 1
CSCBFRM0 CLI   28(R5),X'01'        TSO USER
         BE    JOBOUT4             YES, DONT PROCESS
         CLI   28(R5),X'03'        INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         LA    R9,0(0,R5)          SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,30(0,R5)
         SLL   R10,8               ASID
         IC    R10,31(0,R5)
         SPACE 1
CSCBFRM1 L     R5,0(0,R5)          NEXT CSCB
         LA    R5,0(0,R5)          CLEAR HIGH ORDER
         LTR   R5,R5               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R5,R9               LOAD CSCB ADDR
         B     JOBOUT4             NO GOOD
         CR    R5,R9               SAME CSCB
         BE    JOBOUT4             YES, NO GOOD
         CH    R10,30(0,R5)        SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         SPACE 1
CSCBFRM2 MVC   JOBNAME(8),8(R5)
         MVC   STEPNAME(8),64(R5)
         MVC   PROCNAME(8),32(R5)
         B     CSCBFRM4
         SPACE 1
CSCBFRM3 MVC   JOBNAME(8),16(R5)
         MVC   STEPNAME(8),8(R5)
         MVC   PROCNAME(8),32(R5)
         SPACE 1
CSCBFRM4 CLI   TSOSW,C'D'          DOMAIN DISPLAY
         BNE   CSCBFRM5            NO
         CLC   DOMAIN(1),40(R6)    DOMAIN MATCH
         BNE   JOBOUT4
         SPACE 1
CSCBFRM5 CLC   ASID(4),=C'0001'
         BCR   7,R11
         MVC   JOBNAME(26),=CL26'MASTER'
         BR    R11
         SPACE 1
CSCBFRM6 MVC   JOBNAME(8),8(R5)
         MVC   STEPNAME(8),16(R5)
         MVC   PROCNAME(8),=CL8' '
         CLC   TSOSVTST(2),=X'0A23'  SVC 35 REPLACED
         BNE   CSCBFRM5              YES, BYPASS 0C4
         UNPK  PROCNAME(5),82(3,R3)  LINE NUMBER
         NC    PROCNAME(4),=8X'0F'
         TR    PROCNAME(4),=C'0123456789ABCDEF'
         MVC   PROCNAME+4(4),=CL4' '
         B     CSCBFRM5
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEEZJ03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SPACE 1
MSGRTN1  SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
TSOSVTST SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
RETURN   CLI   SCANRET,C' '        ANY FOUND
         BE    NOTFOUND            NO, TELL OPERATOR
         ESTAE 0
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         LA    R8,AMODE24                                  -JAL/XA-
         BSM   0,R8                                        -JAL/XA-
AMODE24  DS    0H                                          -JAL/XA-
         SR    R15,R15
         BR    R14
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
         SPACE 3
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 1
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'NO JOBS ON OUT QUEUE'
         SPACE 1
HDRI     DC    X'00440100'
         DC    CL26'****   IN  QUEUE   ****'
         DC    CL38' EXCPC    EXCPT    CPUC     CPUT'
         SPACE 1
HDRO     DC    X'00440100'
         DC    CL26'****   OUT  QUEUE   ****'
         DC    CL38' EXCPC    EXCPT    CPUC     CPUT'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
XSASAVE  DS    F
ASID     DS    F
ASVTEND  DS    F                                                 JCC
SCANRET  DS    C
SCANTYPE DS    C
TSOSW    DS    C
DOMAIN   DS    C
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL60
JOBNAME  DS    CL9
STEPNAME DS    CL9
PROCNAME DS    CL8
EXCPC    DS    CL6
EXCPT    DS    CL10
CPUC     DS    CL8
CPUT     DS    CL10
         SPACE 3
JOBTABLE DS    900F
         SPACE 3
ESTAELST DS    0F,(ESTAEOVX)X
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAT      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
