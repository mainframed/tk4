         TITLE 'IEESL03D -   #J  DISPLAY ACTIVE REPLACEMENT'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESL03D -       #J  DISPLAY ACTIVE REPLACEMENT           ***
***                                                                 ***
***       VERSION -        2.0                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SP 1.3.6                             ***
***                                                                 ***
***       UPDATED -        05/27/81                                 ***
***                        RICK LEOPOLDI RLL-CHANGE ESTAE PARM LEN. ***
***                                      RLL-HAVE IN & OUT DISPLAYSQQ**
***                        02/22/82 -JCC-BCB TEST FOR END OF ASCBS  ***
***                        05/25/83 -GLA-BFG OUR VERSION OF #J      ***
***                        06/07/83 -GLA-BFG FIX NUMBER OF ASCB ON  ***
***                                      #JC SO NO OVERLAY OF CSA   ***
***********************************************************************
***********************************************************************
         EJECT
IEESL03D CSECT
         LR    R12,R15
         USING IEESL03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         MVI   CPUSW,0             SET FOR PASS 1                   GLA
*                                                                   GLA
**       GET SPACE FOR #JC TABLE                                    GLA
*                                                                   GLA
         L     R4,CVTPTR           CVT ADDR                         GLA
         USING CVT,R4                                               GLA
         L     R4,CVTASVT          ASVT ADDR                        GLA
         USING ASVT,R4                                              GLA
         L     R4,ASVTMAXU         GET NUMBER OF ASCBS              GLA
         DROP  R4                                                   GLA
         MH    R4,=H'6'       6 BYTES PER ENTRY                     GLA
         ST    R4,CPUSSIZ                                           GLA
         GETMAIN R,LV=(R4),SP=0 GET PRIVATE AREA                    GLA
         ST    R1,CPUSAVE                                           GLA
         LR    R0,R1          GET ADDRESS                           GLA
         LR    R1,R4          GET LENGTH                            GLA
         SR    R2,R2                                                GLA
         SR    R3,R3                                                GLA
         MVCL  R0,R2                                                GLA
         L     R2,XSASAVE          GET XSA ADDR
         LR    R10,R13             LOAD SAVE AREA ADDR
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         MVI   TSOSW,C' '
         L     R3,XAL              PARM LIST ADDR
         LA    R3,0(0,R3)
         LTR   R3,R3               ANY PARM
         BZ    PARM2               NO
         MVC   TSOSW(2),0(R3)      SAVE PARM
         CLI   TSOSW,C'T'          TSO DISPLAY
         BE    PARM2               YES, CONTINUE
         CLI   TSOSW,C'I'          *** DISPLAY IN-QUEUE ONLY ***(RLL)
         BE    PARM2               *** YES, CONTINUE ***        (RLL)
         CLI   TSOSW,C'O'          *** DISPLAY OUT-QUEUE ONLY **(RLL)
         BE    PARM2               *** YES, CONTINUE ***        (RLL)
         CLI   TSOSW,C'C'          IS THIS CPU PERCENTAGE           GLA
         BE    PARM2               YES CONTINUE                     GLA
         CLI   TSOSW,C' '          TEST FOR A BLANK                WJB
         BE    PARM1               YES CONTINUE                    WJB
         MVC   DOUBLE(2),=C'00'
         MVZ   DOUBLE(2),TSOSW
         CLC   DOUBLE(2),=C'00'    DOMAIN DISPLAY
         BNE   PARM1
         PACK  DOUBLE(8),TSOSW(2)
         CVB   R1,DOUBLE
         STC   R1,DOMAIN           SAVE DOMAIN
         MVI   TSOSW,C'D'
         B     PARM2
         SPACE 1
PARM1    MVI   TSOSW,C' '
         SPACE 1
PARM2    MVC   WTOLIST(4),=X'00440100'                              GLA
         MVI   SCANRET,C' '        SET FOUND
         SR    R8,R8               CLEAR ASID
         MVI   SCANTYPE,C'I'       SET IN QUEUE SCAN
         L     R11,CPUSAVE         POINT AT FIRST ENTRY IN TAB      GLA
         ST    R11,ACPUSAVE        SAE IT                           GLA
         CLI   TSOSW,C'O'          *** IS THIS OUT-Q DISPLAY ***(RLL)
         BE    JOBOUT5             *** YES - THEN GET OUT    ***(RLL)
         MVC   HDRTMP,HDRI         SAVE IN HDR                      GLA
         MVC   DOUBLE(1),TSOSW     SAVE PARM VALUE                  GLA
         CLI   TSOSW,C'C'          CPU REQUEST                      GLA
         BNE   BK50                                                 GLA
         MVI   TSOSW,0             CLEAR FOR HEADER WTO TO APPEAR   GLA
         MVC   HDRTMP+56(8),=CL8'CPU-PCT'                           GLA
BK50     LA    R1,HDRTMP                                            GLA
         BAL   R11,MSGRTN1                                          GLA
         MVC   TSOSW(1),DOUBLE     RESTORE PARM                     GLA
         EJECT
JOBOUT   MVI   JOBMSG,C' '
         MVC   JOBMSG+1(59),JOBMSG
         LR    R5,R8               LOAD ASID
         LTR   R5,R5               ZERO ASID
         BZ    *+6                 YES, BYPASS ADJUST
         BCTR  R5,0                ADJUST ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,CVTPTR           CVT ADDR                         GLA
         USING CVT,R4                                               GLA
         L     R4,CVTASVT          ASVT ADDR                        GLA
         USING ASVT,R4                                              GLA
         L     R6,ASVTMAXU         GET NUMBER OF ASCBS          GLA JCC
         MH    R6,=H'4'            GET OFFSET TO END OF TABLE       JCC
         LA    R6,ASVTENTY(R6)     POINT AT END OF TABLE        GLA JCC
         ST    R6,JASVTEND         SAVE ADDR OF END OF TABLE        JCC
         LA    R4,ASVTFRST(R5)     ASCB SLOT ADDR                   GLA
         USING ASVTFRST,R4                                          GLA
         B     JOBOUT4                                              GLA
         SPACE 1                                                    GLA
JOBOUT1  L     R5,ASVTFRST         ASCB ADDR                        GLA
         USING ASCB,R5                                              GLA
         L     R6,ASCBCSCB         CSCB ADDR                        GLA
         L     R7,ASCBOUCB         LOAD OUCB ADDR                   GLA
         USING OUCB,R7                                              GLA
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN                    GLA
         BNE   JOBOUT2             NO                               GLA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GLA
*  THIS CHANGE MADE TO HANDLE MVS SE(SU50)         AXC          *   GLA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GLA
*        TM    114(R5),X'80'       ON ASCB DSP QUEUE               WJBA
*        BO    JOBOUT4             NO, OUT QUEUE                   WJBA
         CLI   OUCBSRC,0           DOES IT HAVE A SWAP REASON CODE WJBA
         BNE   JOBOUT6             YES, CHECK SRC                  WJBA
         CLI   ASCBSEQN,X'7F'      MVS SE                          WJBA
         BE    JOBOUT4                                             WJBA
         B     JOBOUT3             CONTINUE                         GLA
         SPACE 1                                                    GLA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GLA
*  THIS CHANGE MADE TO HANDLE MVS SE(SU50)         AXC          *   GLA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   GLA
*JOBOUT2 TM    114(R5),X'80'       ON ASCB DSP QUEUE    MVS/SE     WJBA
*        BE    JOBOUT4             YES, IN QUEUE        MVS/SE     WJBA
JOBOUT2  CLI   ASCBSEQN,X'7F'      MVS/SE                          WJBA
         BE    JOBOUT3        YES GO PROCESS THIS AS ON OUTQUEUE   WJBA
         CLI   OUCBSRC,0           THIS HAVE A SWAP REASON CODE?   WJBA
         BE    JOBOUT4             NO, IT'S IN THE IN QUEUE        WJBA
         CLI   OUCBSRC,X'06'       DETECTED WAIT                    GLA
         BNE   JOBOUT3             NO, OUT QUEUE                    GLA
         TM    OUCBEFL,OUCBMWT     MSO DETECTED WAIT BIT ON         GLA
         BZ    JOBOUT4             NO, SRC IS NO GOOD               GLA
         SPACE 1                                                    GLA
JOBOUT3  CLI   TSOSW,C'I'          *** IN-QUEUE ONLY *** (RLL)
         BE    JOBOUTIO            *** YES, DO IT    *** (RLL)
         CLI   TSOSW,C'O'          *** OUT-QUEUE ONLY*** (RLL)
         BNE   JOBOUTCN            *** NO ,CONTINUE  *** (RLL)
JOBOUTIO EQU   *                   *** WRITE IN/OUT  *** (RLL)
         CLC   SCANTYPE(1),TSOSW   *** IN/OUT=OPTION?*** (RLL)
         BNE   JOBOUT4             *** NO, DONT WRITE*** (RLL)
JOBOUTCN EQU   *                   *** YES, DO IT    *** (RLL)
         L     R6,ASCBOUCB         OUCB ADDR                        GLA
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO              GLA
         L     R3,ASCBTSB          TSB ADDR                         GLA
         ST    R5,ASCBADDR         SAVE ASCBADDR                    GLA
         L     R5,ASCBCSCB         CSCB ADDR                        GLA
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO              GLA
         BAL   R11,OUCBFORM        GO FORMAT OUCB INFO              GLA
         LA    R1,WTOLIST          MSG AREA                         GLA
         BAL   R11,MSGRTN          GO PRINT MSG                     GLA
         BAL   R11,CPURTN          GO SEE IF CPU RTN NEEDED         GLA
         SPACE 1                                                    GLA
JOBOUT4  LA    R4,ASVTFRST+4       INCR INTO ASVT                   GLA
         C     R4,JASVTEND         END OF ASVT                   JCC
         BNL   JOBOUT5             YES, RETURN                   JCC
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT4             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         SPACE 1
JOBOUT5  CLI   SCANTYPE,C'O'       OUT QUEUE SCAN
         BE    RETURN              YES, EXIT
         CLI   TSOSW,C'I'          *** IS THIS IN-Q DISPLAY ***(RLL)
         BE    RETURN              *** YES - THEN GET OUT   ***(RLL)
         MVI   SCANRET,C' '        INIT OUTPUT SWITCH
         MVI   SCANTYPE,C'O'       SET OUT QUEUE SCAN NEXT
         CLI   TSOSW,C'C'          CPU REQUEST                      GLA
         BNE   JOBOUT5A                                             GLA
         CLI   CPUSW,0             PASS 0                           GLA
         BE    JOBOUT              YES NO WTO NOW                   GLA
JOBOUT5A DS    0H                                                   GLA
         MVC   DOUBLE(1),TSOSW     SAVE SCAN TYPE                   GLA
         MVC   HDRTMP,HDRO         SAVE OUT HDR                     GLA
         CLI   TSOSW,C'C'          IS IT CPU REQUEST                GLA
         BNE   JOBOUT5B                                             GLA
         MVI   TSOSW,C' '          CLEAR FOR WTO                    GLA
         MVC   HDRTMP+56(8),=CL8'CPU-PCT'                           GLA
JOBOUT5B DS    0H                                                   GLA
         LA    R1,HDRTMP                                            GLA
         BAL   R11,MSGRTN1                                          GLA
         MVC   TSOSW,DOUBLE        RESTORE REQUEST TYPE             GLA
         B     JOBOUT              NEXT PASS
         SPACE 1
JOBOUT6  CLI   OUCBSRC,X'06'       DETECTED WAIT                    GLA
         BNE   JOBOUT4             NO, OUT QUEUE                    GLA
         TM    OUCBEFL,OUCBMWT     MSO DETECTED WAIT BIT ON         GLA
         BZ    JOBOUT3             NO, SRC IS NO GOOD
         B     JOBOUT4             OUT QUEUE
         DROP  R5,R7                                                GLA
         EJECT
         USING ASCB,R5                                              GLA
         USING OUCB,R6                                              GLA
ASCBFORM UNPK  DOUBLE(5),ASCBASID(3)                                GLA
         NC    DOUBLE(4),=4X'0F'                                    GLA
         TR    DOUBLE(4),=C'0123456789ABCDEF'                       GLA
         MVC   ASID(2),DOUBLE+2      SET ASID IN MSG                GLA
         SR    R9,R9                                                GLA
         UNPK  HEXWORK,ASCBDP(5)       CONVERT                      GLA
         TR    HEXWORK(8),TRBINHEX-X'F0'  DISP PRIORITY             GLA
         MVC   DPRTY(2),HEXWORK  TO EBCDIC                          GLA
         UNPK  HEXWORK,ASCBTCBS(5) READY TCBS FORMAT                GLA
         TR    HEXWORK(8),TRBINHEX-X'F0'                            GLA
         MVC   RT(1),HEXWORK+7                                      GLA
         LH    R1,ASCBSEQN         DISP POSITION                    GLA
         CVD   R1,DOUBLE                                            GLA
         UNPK  SRC(2),DOUBLE+6(2)                                   GLA
         OI    SRC+1,X'F0'                                          GLA
         MVC   EXECTIME(11),=XL11'402021204B40404B404040'           GLA
         LM    R14,R15,ASCBEJST    CPU TIME                         GLA
         SRDL  R14,12         GET INTO MICROSECONDS                 GLA
         D     R14,=F'1000'   GET INTO MILLISECONDS                 GLA
         SR    R14,R14                                              GLA
         D     R14,=F'10'          HUNDREDTHS                       GLA
         SR    R14,R14                                              GLA
         D     R14,=F'100'         SECONDS                          GLA
         CVD   R14,DOUBLE          HUNDREDTHS TO PRINT              GLA
         UNPK  EXECTIME+8(2),DOUBLE+6(2)                            GLA
         OI    EXECTIME+9,X'F0'                                     GLA
         SR    R14,R14                                              GLA
         D     R14,=F'60'          MINUTES                          GLA
         CVD   R14,DOUBLE          SECONDS TO PRINT                 GLA
         UNPK  EXECTIME+5(2),DOUBLE+6(2)                            GLA
         OI    EXECTIME+6,X'F0'                                     GLA
         CVD   R15,DOUBLE          MINUTES TO PRINT                 GLA
         ED    EXECTIME(4),DOUBLE+6                                 GLA
         USING CVT,R1         CVT BASE                              GLA
         L     R1,CVTPTR      A(CVT)                                GLA
         L     R1,CVTOPCTP    A(RMCT)                               GLA
         DROP  R1                                                   GLA
*        L     R15,RMCTTOD    CURRENT TIME                          GLA
         L     R15,124(R1)    CURRENT TIME        ***NO DSECT SE*** GLA
         SL    R15,OUCBTMO    ELAPSED TIME IN 1.024 MILL UNITS      GLA
         SR    R14,R14                                              GLA
         D     R14,=A(1024*60)  ELAPSED TIME IN MINUTE     UNITS    GLA
         C     R15,=F'999'    GT 999 MINUTES?                       GLA
         BH    GT999          YES, DO SPECIAL FORMAT                GLA
         CVD   R15,DOUBLE                                           GLA
         MVC   HEXWORK(8),=X'4020202020202021'                      GLA
         ED    HEXWORK(8),DOUBLE+4                                  GLA
         MVC   ET,HEXWORK+5                                         GLA
         BR    R11                                                  GLA
GT999    EQU   *                                                    GLA
         SPACE 1                                                    GLA
*****                                                               GLA
*        CONVERT TIME GT 999 MIN TO HEX HOURS                       GLA
*****                                                               GLA
         SPACE 1                                                    GLA
         SR    R14,R14        FIX FOR DIVIDE                        GLA
         D     R14,=F'60'     ET IN HOURS                           GLA
         ST    R15,DOUBLE     SAVE HOURS                            GLA
         UNPK  HEXWORK,DOUBLE(5) CONVERT TO                         GLA
         TR    HEXWORK(8),TRBINHEX-X'F0' EBCDIC                     GLA
         MVC   ET(2),HEXWORK+6  MOVE TO PRINT LOCATION              GLA
         MVI   ET+2,C'H'      SAY HOURS                             GLA
         C     R15,=F'255'    GT 255?                               GLA
         BNHR  R11            NO, JUST RETURN                       GLA
         MVC   ET(2),=C'**'   SHOW TOO BIG TO FORMAT                GLA
         BR    R11            AND RETURN TOO                        GLA
         DROP  R5,R6                                                GLA
         EJECT
         USING CHAIN,R5                                             GLA
         USING OUCB,R6                                              GLA
         USING TSB,R3                                               GLA
CSCBFORM CLI   TSOSW,C'T'          TSO USER DISPLAY                 GLA
         BNE   CSCBFRM0            NO                               GLA
         CLI   CHTRKID,CHTSID      TSO USER                         GLA
         BNE   JOBOUT4             NO, BYPASS                       GLA
         B     CSCBFRM6                                             GLA
         SPACE 1                                                    GLA
CSCBFRM0 CLI   CHTRKID,CHTSID      TSO USER                         GLA
         BE    JOBOUT4             YES, DONT PROCESS                GLA
         CLI   CHTRKID,CHINITID    INIT                             GLA
         BNE   CSCBFRM3            NO, GO HANDLE                    GLA
         LA    R9,CHAIN            SAVE CSCB ADDR                   GLA
         SR    R10,R10             INSERT                           GLA
         IC    R10,CHASID                                           GLA
         SLL   R10,8               ASID                             GLA
         IC    R10,CHASID+1                                         GLA
         SPACE 1                                                    GLA
CSCBFRM1 L     R5,CHAIN            NEXT CSCB                        GLA
         LA    R5,CHAIN            CLEAR HIGH ORDER                 GLA
         LTR   R5,R5               END OF CSCBS                     GLA
         BNZ   *+10                NO, CONTINUE                     GLA
         LR    R5,R9               LOAD CSCB ADDR                   GLA
         B     JOBOUT4             NO GOOD                          GLA
         CR    R5,R9               SAME CSCB                        GLA
         BE    JOBOUT4             YES, NO GOOD                     GLA
         CH    R10,CHASID          SAME ASID                        GLA
         BNE   CSCBFRM1            NO, CHECK NEXT                   GLA
         SPACE 1                                                    GLA
CSCBFRM2 MVC   JOBNAME(8),CHKEY                                     GLA
         MVC   STEPNAME(8),CHSTEP                                   GLA
         MVC   PROCNAME(8),CHPROCSN                                 GLA
         B     CSCBFRM4                                             GLA
         SPACE 1                                                    GLA
CSCBFRM3 MVC   JOBNAME(8),CHCLS                                     GLA
         MVC   STEPNAME(8),CHKEY                                    GLA
         MVC   PROCNAME(8),CHPROCSN                                 GLA
         SPACE 1                                                    GLA
CSCBFRM4 CLI   TSOSW,C'D'          DOMAIN DISPLAY                   GLA
         BNE   CSCBFRM5            NO                               GLA
         CLC   DOMAIN(1),OUCBDMN   DOMAIN MATCH    MVS/SE         WJBLA
         BNE   JOBOUT4                                              GLA
         SPACE 1                                                    GLA
CSCBFRM5 CLC   ASID(2),=C'01'                                       GLA
         BCR   7,R11                                                GLA
         MVC   JOBNAME(26),=CL26'MASTER'                            GLA
         BR    R11                                                  GLA
         SPACE 1                                                    GLA
CSCBFRM6 MVC   JOBNAME(8),CHKEY                                     GLA
         MVC   STEPNAME(8),CHCLS                                    GLA
         CLC   TSTSVC35(2),=X'0A23'  IS THIS TSO EXECUTION OF #J    GLA
         BNE   CSCBFRM7              YES, BYPASS 0C4                GLA
*                                                                  BFGA
***      FOR TCAM/TSO USE NEXT 4 LINES                             BFGA
*                                                                  BFGA
*        UNPK  PROCNAME(5),TSBLINE(3) LINE NUMBER                  BFGA
*        NC    PROCNAME(4),=8X'0F'                                 BFGA
*        TR    PROCNAME(4),=C'0123456789ABCDEF'                    BFGA
*        MVC   PROCNAME+4(4),=CL4' '                               BFGA
*                                                                  BFGA
***      FRO VTAM/TSO USE NEXT LINE                                BFGA
*                                                                  BFGA
         MVC   PROCNAME(8),TSBTRMID  GET VTAM TERM NAME            BFGA
         B     CSCBFRM5                                             GLA
CSCBFRM7 MVC   PROCNAME(8),=CL8'*UNAVL*'  INSTEAD OF 0C4 PUT STG    GLA
         B     CSCBFRM5                                             GLA
         DROP  R3,R5,R6                                             GLA
         EJECT
         USING OUCB,R6                                              GLA
         USING ASCB,R5                                              GLA
OUCBFORM DS    0H                                                  WJBA
         CLI   OUCBSRC,X'00'       JOB ON IN QUEUE                 WJBA
         BE    OUCBFRM0            YES, NO SWAP REASON              GLA
         UNPK  SRC(3),OUCBSRC(2)   SWAP REASON             MVS/SE WJBLA
         NC    SRC(2),=8X'0F'                                       GLA
         TR    SRC(2),=C'0123456789ABCDEF'                          GLA
         MVI   SRC+2,C' '                                           GLA
OUCBLOG1 DS    0H                                              BFG WJBA
         SPACE 1                                                    GLA
OUCBFRM0 MVC   FLAGS(2),=CL2'NS'                                    GLA
         UNPK  HEXWORK,OUCBSWC(5) SWAP COUNT                        GLA
         TR    HEXWORK(8),TRBINHEX-X'F0'                            GLA
         MVC   SC(2),HEXWORK+2                                      GLA
*        SR    R1,R1                            NON-SE & SE-1       GLA
*        IC    R1,OUCBNPG     GET PG NUMBER     NON-SE & SE-1       GLA
         LH    R1,OUCBNPG                       SE-2                GLA
         CVD   R1,DOUBLE                                            GLA
         UNPK  PG-1(3),DOUBLE+6(2)                                  GLA
         OI    PG+1,X'F0'                                           GLA
         MVI   PG-1,C' '                                            GLA
         TM    OUCBSFL,OUCBNSW     NON-SWAPPABLE                    GLA
         BO    OUCBFRM1                                             GLA
         MVC   FLAGS(2),=CL2'IN'                                    GLA
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN                    GLA
         BE    OUCBFRM1                                             GLA
         MVC   FLAGS(2),=CL2'OU'                                    GLA
         TM    OUCBQFL,OUCBLSW     ARE WE LOGICAL          MVS/SE   BFG
         BZ    *+10                IF NOT SKIP             MVS/SE   BFG
         MVC   SRC(2),=CL3'LG'     MARK AS LOGICAL SWAP    MVS/SE   BFG
         TM    OUCBQFL,OUCBGOO+OUCBGOI+OUCBGOB                      GLA
         BZ    OUCBFRM1            NO, JUST OUT                     GLA
         MVC   FLAGS(2),=CL2'GO'                                    GLA
         TM    OUCBQFL,OUCBGOO     GOING OUT                        GLA
         BO    OUCBFRM1                                             GLA
         MVC   FLAGS(2),=CL2'GB'                                    GLA
         TM    16(R6),X'20'        TRANSITIONING                    GLA
         BO    OUCBFRM1                                             GLA
         MVC   FLAGS(2),=CL2'GI'                                    GLA
         SPACE 1                                                    GLA
OUCBFRM1 MVC   FLAGS+2(2),=CL2'A'                                   GLA
         TM    OUCBYFL,OUCBAXS     AUX STORAGE SHORTAGE             GLA
         BCR   1,R11                                                GLA
         MVC   FLAGS+2(2),=CL2'S'                                   GLA
         TM    OUCBYFL,OUCBFXS     REAL STORAGE SHORTAGE            GLA
         BCR   1,R11                                                GLA
         MVC   FLAGS+2(2),=CL2'LW'                                  GLA
         TM    OUCBEFL,OUCBLWT     LONG WAIT                        GLA
         BCR   1,R11                                                GLA
         MVC   FLAGS+2(2),=CL2'MW'                                  GLA
         TM    OUCBEFL,OUCBMWT     DETECTED WAIT                    GLA
         BCR   1,R11                                                GLA
         MVC   FLAGS+2(2),=CL2'CP'                                  GLA
         TM    OUCBAFL,OUCBCPL     CPU USER                         GLA
         BCR   1,R11                                                GLA
         MVC   FLAGS+2(2),=CL2' '                                   GLA
         BR    R11                                                  GLA
         DROP  R5,R6                                                GLA
         EJECT                                                      GLA
*                                                                   GLA
****     PROCESS #JC TO ACCUMULATE JOB CPU %                        GLA
*                                                                   GLA
CPURTN   DS    0H                                                   GLA
         CLI   TSOSW,C'C'     CPU % REQUEST ?                       GLA
         BNER  R11            NO, JUST EXIT                         GLA
         L     R5,ASCBADDR    RESTORE ASCB ADDRESS                  GLA
         USING ASCB,R5        RESET BASE                            GLA
         LM    R14,R15,ASCBEJST TCB TOD CPU SECONDS                 GLA
         SRDL  R14,12         MICS                                  GLA
         D     R14,=F'1000'   MILLS                                 GLA
         LR    R9,R15         SAVE TCB MILLS                        GLA
         LM    R14,R15,ASCBSRBT SRB TOD CPU MILLS                   GLA
         SRDL  R14,12         MICS                                  GLA
         D     R14,=F'1000'   MILLS                                 GLA
         ALR   R15,R9         TCB+SRB MILLS                         GLA
         CLI   CPUSW,0        PASS 0 ?                              GLA
         BNE   CPURTN11       NO, DO PASS 1 PROCESSING              GLA
         L     R10,ACPUSAVE   CURRENT CPU TABLE ADDRESS             GLA
         MVC   0(2,R10),ASCBASID                                    GLA
         ST    R15,2(,R10)    SAVE CPU MILLS                        GLA
         LA    R10,6(,R10)    BUMP TABLE POINTER                    GLA
         ST    R10,ACPUSAVE   SAVE UPDATED ADDRESS                  GLA
         BR       R11   AND RETURN                                  GLA
         SPACE 2                                                    GLA
CPURTN11 DS    0H                                                   GLA
         L     R10,CPUSAVE    BEGIN OF CPU TABLE                    GLA
CPURTN12 CLC   ASCBASID,0(R10) ASID FOUND?                          GLA
         BE       CPURTN22             YES, CONTINUE PROCESSING     GLA
         CLC   =XL2'00',0(R10)  END OF ENTRIES?                     GLA
         BER   R11            YES, THIS AS NOT FOUND JUST RETURN    GLA
         LA    R10,6(,R10)    NEXT ENTRY                            GLA
         B     CPURTN12       CONTINUE SCAN                         GLA
         SPACE 2                                                    GLA
CPURTN22 DS    0H                                                   GLA
         S     R15,2(,R10)    GET CPU TIME USED                     GLA
         BNM   CPURTN44       AND FORMAT IF NOT MINUS               GLA
         MVC   EXECTIME(11),=CL11' ' CLEAR FIELD                    BFG
         MVC   EXECTIME+5(4),=C'****' SHOW CANT FORMAT IT           GLA
         B     CPURTN55       AND GO PRINT IT                       GLA
         SPACE 2                                                    GLA
CPURTN44 EQU   *                                                    GLA
         MH    R15,=H'100'    X 100                                 GLA
         SR    R14,R14                                              GLA
         D     R14,=A(2*1000) MILLS IN 2 SECONDS                    GLA
         MVC   EXECTIME(11),=X'4040402020204B21204040'              BFG
         CVD   R15,DOUBLE                                           GLA
         ED    EXECTIME(06),DOUBLE+6 PRINTABEL FORMAT               GLA
         LR    R15,R14        SAVE REMAINDER                        GLA
         MH    R15,=H'100'    X 100                                 GLA
         SR    R14,R14                                              GLA
         D     R14,=A(2*1000) GET % OF A SEC                        GLA
         CVD   R15,DOUBLE                                           GLA
         UNPK  EXECTIME+7(2),DOUBLE+6(2)                            GLA
         OI    EXECTIME+8,X'F0'                                     GLA
CPURTN55 EQU   *                                                    GLA
         MVI   TSOSW,C'N'     SAY CPU REQ NOT ACTIVE                GLA
         LA    R1,WTOLIST     A(MSG)                                GLA
         ST    R11,DOUBLE     SAVE OUR RETURN                       GLA
         BAL   R11,MSGRTN     GO DO WTO NOW                         GLA
         MVI   TSOSW,C'C'     SAY CPU REQ ACTIVE NOW                GLA
         L     R11,DOUBLE     RESTORE RETURN ADDRESS                GLA
         BR    R11            RETURN                                GLA
         DROP  R5                                                   GLA
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESL03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SPACE 1
MSGRTN1  CLI   TSOSW,C'C'          CPU REQUEST ACTIVE               GLA
         BER   R11                                                  GLA
         SR    R0,R0                                                GLA
         IC    R0,XAU              INSERT MCS ID
TSTSVC35 EQU   *
         SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
RETURN   EQU   *
         CLI   TSOSW,C'I'          *** IS THIS IN-Q DISPLAY ***(RLL)
         BE    GOBACK              *** YES - THEN GET OUT   ***(RLL)
         CLI   TSOSW,C'C'          CPU REQUEST?                     GLA
         BNE   RETURN1             NO SO EXIT                       GLA
         CLI   CPUSW,0             PASS 0?                          GLA
         BNE   RETURN1                                              GLA
         MVI   CPUSW,1             SAY PASS 1 NOW IN EFFECT         GLA
         MVI   SCANTYPE,C'I'       RESET FOR FULL SCAN              GLA
         STIMER WAIT,BINTVL=WAITINTV WAIT FOR A WHILE               GLA
         B     JOBOUT              AND DO PASS 1                    GLA
         SPACE 3                                                    GLA
RETURN1  EQU   *                                                    GLA
         CLI   SCANRET,C' '        ANY FOUND                        GLA
         BE    NOTFOUND            NO, TELL OPERATOR                GLA
GOBACK   EQU   *                   *** THIS BYPASS NOTFOUND ***(RLL)
         ESTAE 0                                      ****(RLL)****
         L     R1,CPUSAVE     GET ADDRESS                           GLA
         LTR   R1,R1          ANY AREA                              GLA
         BZ    GOBACK1                                              GLA
         L     R0,CPUSSIZ     GET SIZE                              GLA
         FREEMAIN R,LV=(0),A=(1)                                    GLA
GOBACK1  EQU   *                                                    GLA
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
WAITINTV DC    A(100*2)            WAIT 2 SECONDS                   GLA
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
TRBINHEX DC    C'0123456789ABCDEF'                                  GLA
         SPACE 3                                                    GLA
         DS    0F                                                   GLA
STAEMSG  DC    X'00360100'                                          GLA
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3                                                    GLA
         DS    0F                                                   GLA
NFNDMSG  DC    X'00360100'                                          GLA
         DC    CL50'NO JOBS ON OUT QUEUE'                           GLA
         SPACE 3                                                    GLA
HDRI     DC    Y(HDRIEND-HDRI),X'0100'                              GLA
         DC    CL27'*****   IN  QUEUE   *****'                      GLA
         DC    CL3'ID'                                              GLA
         DC    CL3'DP'                                              GLA
         DC    CL3'QP'                                              GLA
         DC    CL3'PG'                                              GLA
         DC    CL3'RT'                                              GLA
         DC    CL3'SC'                                              GLA
         DC    CL5'FLGS'                                            GLA
         DC    CL11'  TCB TIME'                                     GLA
         DC    CL3' ET'                                             GLA
HDRIEND  EQU   *                                                    GLA
         SPACE 3                                                    GLA
HDRO     DC    Y(HDROEND-HDRO),X'0100'                              GLA
         DC    CL27'*****   OUT  QUEUE   *****'                     GLA
         DC    CL3'ID'                                              GLA
         DC    CL3'DP'                                              GLA
         DC    CL3'SR'                                              GLA
         DC    CL3'PG'                                              GLA
         DC    CL3'RT'                                              GLA
         DC    CL3'SC'                                              GLA
         DC    CL5'FLGS'                                            GLA
         DC    CL11'  TCB TIME'                                     GLA
         DC    CL3' ET'                                             GLA
HDROEND  EQU   *                                                    GLA
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
ASCBADDR DS    F                                                    GLA
XSASAVE  DS    F
JASVTEND DS    F                                                 JCC
SCANRET  DS    C
SCANTYPE DS    C
TSOSW    DS    2C                                                   GLA
CPUSW    DS    X                                                    GLA
DOMAIN   DS    C
HEXWORK  DS    XL9                                                  GLA
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL60
JOBNAME  DS    CL9
STEPNAME DS    CL9
PROCNAME DS    CL09                                                 GLA
ASID     DS    CL3                                                  GLA
DPRTY    DS    CL3                                                  GLA
SRC      DS    CL3                                                  GLA
PG       DS    CL3                                                  GLA
RT       DS    CL3                                                  GLA
SC       DS    CL3                                                  GLA
FLAGS    DS    CL5                                                  GLA
EXECTIME DS    CL11                                                 GLA
ET       DS    CL3                                                  GLA
ACPUSAVE DS    F              ADDR OF CURRENT CPUSAVE ENTRY         GLA
CPUSAVE  DS    F              BEGINNING OF CPU TABLE                GLA
CPUSSIZ  DS    F              SIZE OF CPU TABLE                     GLA
HDRTMP   DS    CL68                                                 GLA
         SPACE 3
ESTAELST DS    5F                                     ****(RLL)****
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         PRINT NOGEN
         IHASDWA
         IRAOUCB
IEECSCB  DSECT
         IEECHAIN
         IKJTSB
         IHAASVT
         CVT   DSECT=YES
         IHAASCB
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESL03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SPACE 1
MSGRTN1  SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
TSTSVC35 DS    0H
         SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
RETURN   DS    0H
         CLI   TSOSW,C'I'          *** IS THIS IN-Q DISPLAY ***(RLL)
         BE    GOBACK              *** YES - THEN GET OUT   ***(RLL)
         CLI   SCANRET,C' '        ANY FOUND
         BE    NOTFOUND            NO, TELL OPERATOR
GOBACK   DS    0H                  *** THIS BYPASS NOTFOUND ***(RLL)
         ESTAE 0                                      ****(RLL)****
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'NO JOBS ON OUT QUEUE'
         SPACE 3
HDRI     DC    X'00400100'
         DC    CL26'*****   IN  QUEUE   *****'
         DC    CL34'   ASID DPRTY QP  FLAGS   CPU TIME'
         SPACE 3
HDRO     DC    X'00400100'
         DC    CL26'*****   OUT  QUEUE   *****'
         DC    CL34'   ASID DPRTY SR  FLAGS   CPU TIME'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
XSASAVE  DS    F
ASVTEND  DS    F                                                 JCC
SCANRET  DS    C
SCANTYPE DS    C
TSOSW    DS    C
DOMAIN   DS    C
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL60
JOBNAME  DS    CL9
STEPNAME DS    CL9
PROCNAME DS    CL11
ASID     DS    CL6
DPRTY    DS    CL5
SRC      DS    CL4
FLAGS    DS    CL6
EXECTIME DS    CL10
         SPACE 3
ESTAELST DS    0F,(ESTAEOVX)X                         ****(RLL)****
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
