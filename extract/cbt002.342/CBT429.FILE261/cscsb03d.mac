         TITLE 'IEESB03D -   #N  DISPLAY ENQUEUE 2ND LOAD'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESB03D -       #N DISPLAY ENQUEUE 2ND LOAD              ***
***                                                                 ***
***       VERSION -        1.2                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   WITHOUT  SE2 OR SU64.     ***
***                                                                 ***
***       UPDATED -        07/22/81  AXC-CBT HANDLE ESTAE           ***
***                                                                 ***
***                        04/21/86  GLA-BFG PASS PARM TO ESTAE OK  ***
***                                                                 ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
IEESB03D CSECT
         LR    R12,R15
         USING IEESB03D,R12
         USING WKDSECT,R13
         USING XSA,R2
         SPACE 2
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(13),MF=(E,(1))                            GLA-BFG
         EJECT
         L     R2,XSASAVE         A(EXTENDED SAVE AREA)
         LH    R7,XAJ             TJID, IF IT EXISTS.
         SLL   R7,16              MOVE TO HIGH ORDER BYTES.
         SR    R10,R10            CLEAR REGISTER
         IC    R10,XAU            R10 = CONSOL ID FOR MCS
         MVI   WTOLIST+2,X'01'    MCSFLAG = QREG0
         LH    R3,MSGCODE         GET MESSAGE ERROR CODE, IF ANY
         LTR   R3,R3              ANY ERRORS ?
         BZ    FORMAT             NO...
         CH    R3,=H'36'          CONTROL BLOCK ERROR
         BE    CLEANUP            YES, EXIT
         L     R5,MSGTABLE(R3)    YES...GET DISPLACEMENT OF MESSAGE
         LA    R5,0(R12,R5)       ADD BASE FOR ABSOLUTE ADDRESS
         LH    R4,0(,R5)          LENGTH OF MESSAGE
         BCTR  R4,0               SET FOR EXECUTE
         EX    R4,GETMSG
         LA    R4,5(,R4)          RESET LENGTH+4 FOR CONTROL BYTES
         STH   R4,WTOLIST         PUT LENGTH IN CONTROL FIELD
         BAL   R11,IOCS           OUTPUT MESSAGE
         CH    R3,=H'32'          "LOST DATA" ERROR CODE ?
         BNE   CLEANUP            NO...ALL FINISHED THEN.
         EJECT
***********************************************************************
*
*        FORMAT DATA AND WRITE IT OUT
*
***********************************************************************
FORMAT   EQU   *
         LA    R3,36              SET MESSAGE CODE
         LA    R9,2               LOOP COUNTER
         TM    SWTCH+1,X'0F'      ONLY MAJOR QCB NAMES?
         BZ    LOOP1              NO..OK AS IS.
         LA    R3,44              YES..SET FOR CORRECT HEADER MSG.
LOOP1    L     R5,MSGTABLE(R3)    DISPLACEMENT OF MESSAGE
         LA    R5,0(R12,R5)       ADD BASE FOR ABSOLUTE ADDRESS
         LH    R4,0(,R5)          LENGTH
         BCTR  R4,0               SET FOR EXECUTE
         EX    R4,GETMSG          MOVE MESSAGE TO BUFFER
         LA    R4,5(,R4)          CORRECT LENGTH
         STH   R4,WTOLIST         SET IN MESSAGE
         BAL   R11,IOCS           DO OUTPUT
         LA    R3,4(,R3)          NEXT MESSAGE CODE
         BCT   R9,LOOP1           DO NEXT MESSAGE
*
         LH    R3,TBLSIZE         NO. OF ENTRIES IN TABLE
         L     R5,CORE            START OF TABLE
         LA    R6,BUFFER          START OF OUTPUT BUFFER
*
         TM    SWTCH+1,X'0F'      ONLY MAJOR QCB NAMES ?
         BO    MAJONLY            YES..
*
LOOP2    MVI   BUFFER,C' '
         MVC   BUFFER+1(64),BUFFER  BLANK-OUT BUFFER
         LA    R4,24              SET NORMAL WTO LENGTH
         SR    R9,R9
         IC    R9,0(,R5)          GET FIRST CHAR IN ENTRY
         CH    R9,=H'91'          LESS THAN X'5B'...CHAR '$' ?
         BL    SETNAME            YES..
GETOWNER MVC   2(8,R6),0(R5)      JOBNAME/USERID
         MVC   11(6,R6),=CL6'- SHR '   ASSUME SHR'D ENQ
         CLI   8(R5),C'S'         IS IT SO ?
         BE    PRINT
         MVC   13(4,R6),=CL4'EXCL'  NO...MUST BE EXCLUSIVE
         CLI   8(R5),C'E'         IS IT SO
         BE    PRINT
         MVC   13(4,R6),=CL4'RSVS'  NO, SHR RESERVE
         CLI   8(R5),C'R'         IS IT SO
         BE    PRINT
         MVC   13(4,R6),=CL4'RSVX'  NO, EXCL RESERVE
PRINT    STH   R4,WTOLIST         SET MESSAGE LENGTH
         BAL   R11,IOCS           OUTPUT BUFFER
         LA    R5,9(,R5)          NEXT ENTRY IN TABLE
         CLC   0(4,R5),=F'-1'     END OF TABLE
         BE    CLEANUP            YES
         BCT   R3,LOOP2           DO NEXT ENTRY, IF ANY
         B     CLEANUP            FINISHED...
*
SETNAME  SR    R11,R11            MUST BE A MINOR QCB ENTRY.
         IC    R11,1(,R5)         LENGTH OF MINOR NAME
         LR    R4,R11
         LA    R4,24(,R4)         TOTAL MESSAGE LENGTH
         BCTR  R11,0              SET FOR EXECUTE INST
         EX    R11,GETNAME        MOVE NAME INTO BUFFER
         SR    R3,R9              DELETE NO. OF TABLE ENTRIES
         SR    R8,R8              (NO. OF ENTRIES) X (SIZE OF ENTRY)
         M     R8,=F'9'           PLUS CURRENT POINTER EQUAL
         AR    R5,R9              NEXT TABLE ENTRY
         B     GETOWNER           GET JOBNAME/USERID, ETC.
         SPACE 2
***********************************************************************
*
*        PRINT ONLY MAJOR QCB NAMES HERE
*
***********************************************************************
LOOP3    EQU   *
MAJONLY  LA    R4,17              SIZE OF MESSAGE
         STH   R4,WTOLIST         PLACE IN CONTROL FIELD
         MVI   BUFFER,C' '
         MVC   BUFFER+1(64),BUFFER BLANK-OUT BUFFER
         MVC   5(8,R6),0(R5)      GET MAJOR NAME FROM TABLE
         BAL   R11,IOCS           WRITE IT OUT
         LA    R5,8(,R5)          NEXT ENTRY IN TABLE,IF ANY
         CLC   0(4,R5),=F'-1'     END OF TABLE
         BE    CLEANUP            YES
         BCT   R3,LOOP3           GET IT, IF IT EXISTS
         B     CLEANUP            FINISHED...
         EJECT
***********************************************************************
*
*        RELEASE ALL CORE AND EXIT
*
***********************************************************************
CLEANUP  EQU   *
         ESTAE 0
         L     R1,CORE            START OF CORE TABLE
         LH    R0,CORESIZE        SIZE OF TABLE
         O     R0,SUBPOOL         RELEASE FROM SAME SUBPOOL
         FREEMAIN R,LV=(0),A=(1)
         SPACE 2
CLEAN2   EQU   *
         LH    R0,WKSIZE          SIZE OF WORK-AREA
         O     R0,SUBPOOL         RELEASE FROM SAME SUBPOOL
         LR    R1,R13             START OF WORK-AREA
         L     R14,SAVA           SET RETURN ADDRESS
         FREEMAIN R,LV=(0),A=(1)
         SPACE 2
         SR    R15,R15
         BR    R14                RETURN
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESB03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     CLEANUP
         EJECT
***********************************************************************
*
*        IOCS -- I/O CONTROL SECTION
*
*        ON ENTRY:
*                 R4  = MESSAGE LENGTH+4 (INCLUDES WTO CONTROL BYTES)
*                 R10 = CONSOL ID FOR MCS
*                 R11 = RETURN ADDRESS
*
*        NOTE: OUTPUT BUFFER IS SETUP PRIOR TO ENTRY
*
***********************************************************************
IOCS     DS    0H
         SPACE 2
OPER     LA    R1,WTOLIST         WRITE MESSAGE TO OPERATOR
         SR    R0,R0
         IC    R0,XAU             R0 = CONSOL ID FOR MCS
         SVC   35
         BR    R11                RETURN
         EJECT
***********************************************************************
*
*        CONSTANTS, TABLES, ETC.
*
***********************************************************************
MSGTABLE DS    0F                 MSGCODE
         DC    A(*)                 0 - NOT USED
         DC    A(MSG1-IEESB03D)     4
         DC    A(MSG2-IEESB03D)     8
         DC    A(MSG3-IEESB03D)     12
         DC    A(MSG4-IEESB03D)     16
         DC    A(MSG5-IEESB03D)     20
         DC    A(MSG6-IEESB03D)     24
         DC    A(MSG7-IEESB03D)     28
         DC    A(MSG8-IEESB03D)     32
         DC    A(MSG9-IEESB03D)     36
         DC    A(MSG10-IEESB03D)    40
         DC    A(MSG11-IEESB03D)    44
         DC    A(MSG12-IEESB03D)    48
*
MSG1     DC    H'32',C'*** MAJOR NAME QCB NOT FOUND ***'
MSG2     DC    H'37',C'*** ERROR IN MINOR QCB CHAIN ***'
MSG3     DC    H'27',C'*** QEL CHAIN ERROR ***'
MSG4     DC    H'46',C'*** NO FREE SQA CORE AVAILABLE...TRY AGAIN ***'
MSG5     DC    H'42',C'*** INVALID MAJOR/MINOR NAME SPECIFIED ***'
MSG6     DC    H'31',C'*** NO MINOR NAME SPECIFIED ***'
MSG7     DC    H'32',C'*** MINOR NAME QCB NOT FOUND ***'
MSG8     DC    H'54',C'*** LOST DATA...MAXIMUM NUMBER OF ENTRIES EXCEEDX
               ED ***'
MSG9     DC    H'30',C'  JOB/USER   MODE   MINOR NAME'
MSG10    DC    H'31',C' ------------------------------'
MSG11    DC    H'16',C'  MAJOR QCB NAME'
MSG12    DC    H'17',C' ----------------'
         SPACE 2
         DS    0F
SUB255   DC    X'FF000000'
GETMSG   MVC   BUFFER(*-*),2(R5)
GETNAME  MVC   BUFFER+20(*-*),2(R5)
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 2
WKDSECT  DSECT
SAVA     DS    18F                SAVE-AREA
SUBPOOL  DS    F                  SUBPOOL MASK
XSASAVE  DS    F                  EXTENDED SAVE-AREA PTR
CORE     DS    F                  POINTER TO FREE CORE
MAJLGTH  DS    H                  MODIFIED LENGTH OF MAJOR NAME
MINLGTH  DS    H                  MODFIED LENGTH OF MINOR NAME
SWTCH    DS    H                  PROGRAM SWITCHES
WKSIZE   DS    H                  SIZE OF WORK-AREA
CORESIZE DS    H                  SIZE OF FREE CORE
MSGCODE  DS    H                  I/O MESSAGE CODE
TBLSIZE  DS    H                  NUMBER OF TABLE ENTRIES
MAJNAM   DS    CL8                MAJOR NAME
MINNAME  DS    CL255              MINOR NAME
WTOLIST  DS    F                  WTO CONTROL BYTES
BUFFER   DS    CL65               WTO MESSAGE BUFFER
XCTLLIST DS    0F                 XCTL CONTROL INFO
XCTLEP   DS    F                  ADDRESS OF EP PARAMETER
XCTLDCB  DS    F                  DCB ADDRESS PARAMETER
XCTLNAME DS    CL8                ENTRY POINT NAME
         DS    0F
MINADDR  DS    F
MINENTRY DS    F
SJOB     DS    CL8
ESTAELST DS    0F,(ESTAEOVX)X
LWKDSECT EQU   *-WKDSECT
         SPACE 2
DSXSA    DSECT
XSA      DS    0D
XAP      DS    F                  PTR TO XCTL NAME
XAD      DS    F                  DCB PTR
XAX      DS    D                  XCTL NAME
XAE      DS    0C                 ERROR CODE
XAR      DS    F                  PTR TO PARM LIST (REG1)
XAN      DS    0C                 VERB INDEX
XAL      DS    F                  PTR TO LIST POSITION
XAV      DS    D                  VERB
XAS      DS    D                  TEMP SAVE-AREA
XAU      DS    C                  UCM ENTRY INDICATOR
         DS    C                  RESERVED
XAJ      DS    H                  TJID ENTRY INDICATOR
         DS    F                  RESERVED
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         END
