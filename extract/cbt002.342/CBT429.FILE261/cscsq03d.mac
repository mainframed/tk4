         TITLE 'IEESQ03D -   #Q  ENQUEUE ANALYZER'
***********************************************************************
***********************************************************************
***                                                                 ***
***                                                                 ***
***                                                                 ***
***                     COMMAND  SUB-SYSTEM                         ***
***                  -------------------------                      ***
***                                                                 ***
***                                                                 ***
***       IEESQ03D -       #Q  ENQUEUE ANALYZER                     ***
***                                                                 ***
***       VERSION -        1.3                                      ***
***                                                                 ***
***       MVS LEVEL -      MVS/SE  3.8.   MVS/SP1.2-MVS/SP1.3       ***
***                                                                 ***
***       UPDATED -  07/21/81  -AXC-CBT HANDLE ESTAE                ***
***       UPDATED -  11/13/81  -DED-HNB MVS/SP 1.3                  ***
***       UPDATED -   9/17/82  -ADDED TOKEN FOR INCREASED           ***
***                             PROCESSING SP1.3 --- CBT            ***
***                            -CHANGED SUBPOOL PROCESSING          ***
***       UPDATED -  10/01/82  -CHGD SO OUTPUT DOESN'T HAVE UNPRINT-***
***                             ABLE CHARS WHEN EXECUTING VIA #     ***
***       UPDATED -  01/26/83  -AXC-CBT CHANGE ESTAE PARM LEN       ***
***       UPDATED -  04/21/86  -GLA-BFG CHANGE GQSCAN TO USE        ***
***                             PARAMETER LIST IN WORK AREA         ***
***                             THIS WILL PRESERVE REENTRANCY       ***
***                  04/26/86  -GLA-BFG FIX ESTAE PARM LIST         ***
***                                                                 ***
***********************************************************************
*********************************************************************
*                                                                   *
*                      H N B  -  NOTES                              *
*                                                                   *
*                                                                   *
* NOTE - THIS CODE HAS NOT BEEN TESTED WITH A GRS RING              *
*        SCOPE=GLOBAL WILL HAVE TO BE SPECIFIED ON THE GQSCAN MACRO *
*        AND THE GQSCAN HAS TO RUN AUTHORIZED KEY ZERO.             *
*                                                                   *
* NOTE - THE 'SYSNAME=' IN IEASYS00 SHOULD SPECIFY YOUR SMFID TO    *
*        GET THE CORRECT SYSTEM NAME IN THE 'SYSTEM' FIELD,         *
*        OTHERWISE (NONA) "NONAME" WILL BE DISPLAYED.               *
*                                                                   *
* NOTE - THE "SCANAREA" MIGHT HAVE TO BE MADE LARGER FOR A SYSTEM   *
*        WITH MANY DATASETS IN USE.  IF IT IS CHANGED, THE 2ND      *
*        OPERAND ON THE "AREA" OPERAND OF THE "GQSCAN" MACRO MUST   *
*        ALSO BE CHANGED.                                           *
*                                                                   *
* NOTE - TOKEN ADDED TO GQSCAN TO ALLOW TO PROCESSING OF LONGER     *
*        ENQUE LISTS                                                *
*                                                                   *
*********************************************************************
***********************************************************************
         EJECT
IEESQ03D CSECT
         LR    R12,R15            SET ADDRESSABILITY
         USING IEESQ03D,R12
**********************************************************************
*  THE FOLLOWING O INSTRUCTION IS USED TO DETERMINE THE SUBPOOL NUMBER
*  IF RUNNING AS A SUBSYSTEM, THEN SUBPOOL 241 IS USED.
*  IF RUNNING UNDER TSO, THEN CMDSBTSO WILL MODIFY THE MASK BIT OF
*  'F1000000' TO A MASK BIT OF '00000000' AND THUS CAUSE SUBPOOL 0
*  TO BE USED. IN ORDER FOR THIS TO TAKE PLACE, THE EXACT CODING
*  CONVENTIONS USED HERE FOR THE GETMAIN MUST BE FOLLOWED:
**********************************************************************
         LA    R0,PARTWORK        SIZE OF SAVE AND WORK AREA
         A     R0,=F'00102400'    ADD IN THE SCANAREA SIZE
         O     R0,SUB241          SUBPOOL MASK
         GETMAIN R,LV=(0)
         LR    R10,R1
         USING WORK,R10
         USING XSA,R2
         B     ESTAEBYP            BYPASS ESTAE LIST
ESTAEOVL ESTAE STAEXIT,CT,MF=L               * ESTAE PARM FIX GLA-BFG*
ESTAEOVX EQU   *-ESTAEOVL                    * ESTAE PARM FIX GLA-BFG*
ESTAEBYP MVC   ESTAELST(ESTAEOVX),ESTAEOVL   * ESTAE PARM FIX GLA-BFG*
         LA    R1,ESTAELST
         ESTAE PARAM=(10),MF=(E,(1))
         ST    R14,SAVRET          PUT RETURN ADDRESS IN UNUSED SLOT
         ST    R2,XSASAVE          SAVE XSA ADDR
         MVC   GQSCANL(GQSCANE-GQSCANP),GQSCANP SETUP LIST FORM GLA-BFG
         MVC   MAJLINE(4),=X'00360100'
         MVC   MINLINE(4),=X'00360100'
         MVC   JOBLINE(4),=X'00360100'
         MVC   MAJLINE+4(8),=CL8'MAJOR='
         MVC   MINLINE+4(8),=CL8'MINOR='
         MVC   MAJOR(44),=CL44' '
         MVC   MINOR(44),=CL44' '
         MVC   TKN,=F'0'               ZERO OUT TOKEN
START    MVI   TKNSW,X'00'             INITIALIZE TOKEN SWITCH
         LA    R8,SCANAREA             ADDR OF RETURNED DATA
         LA    R9,SYSDSN               ADDR OF SYSDSN MAJOR NAME
         LA    R6,SCANSAVE             ADDR GQSCAN SAVE AREA
         EJECT
SCAN     GQSCAN AREA=((R8),102400),  ADDR AND LENGTH OF INFO RETURNED  X
               REQLIM=MAX,             MAX NUM OF OWNERS TO BE RETURNEDX
               SCOPE=ALL,              ALL SYSTEMS IN GRS RING         X
               RESNAME=((R9)),         SCAN SYSDSN                     X
               TOKEN=TKN,              TOKEN FUNCTION           GLA-BFGX
               MF=(E,GQSCANL)          USE PARM LIST IN WORK AR GLA-BFG
         EJECT
         LA    R7,BRTABLE              ADDRESS OF BRANCH TABLE
         B     0(R15,R7)               BRANCH TO APPROPRIATE ROUTINE
BRTABLE  B     CODE00                  ALLS OK
         B     CODE04                  NO RESOURCES MATCHED REQUEST
         B     CODE08                  GQSCAN AREA TOO SMALL
         B     CODE0C                  ENCOUNTERED ERROR DATA AREA NG
         B     CODE10                  INVALID SYSNAME
         SPACE 2
         EJECT
CODE00   ST    R0,RIBLNGTH             STORE RIB AND RIBE LENGTH
         LR    R7,R1                   SAVE NUMBER OF RIBS
         LA    R5,SCANAREA             ADDRESS OF GQSCAN AREA (1ST RIB)
         USING RIB,R5                  RESOURCE INFORMATION BLOCK
RIBLOOP  LR    R11,R5                  SAVE RIB POINTER
         AH    R11,RIBLNGTH            POINT TO RIB VARIABLE SECTION
         USING RIBVAR,R11              RESOURCE INFORMATION BLOCK
         SR    R8,R8                   CLEAR REG
         LH    R8,RIBVLEN              LENGTH OF VARIABLE SECTION
         MVC   MINOR(44),=44C' '       CLEAR BEFORE USING
         BCTR  R8,0                    MINUS ONE FOR EX INSTUCTION
         EX    R8,MVCDSN               MOVE DSN TO PRINT LINE
         B     SKIP                    BYPASS NEXT INSTRUCTION
MVCDSN   MVC   MINOR(1),RIBRNAME       MOVE DSN TO PRINT LINE
         DROP  R11
SKIP     MVC   MAJOR(8),SYSDSN
         LR    R11,R5                  SAVE RIB POINTER
         AH    R11,RIBLNGTH            POINT TO RIB VARIABLE SECTION
         AH    R11,RIBVLEN             POINT TO FIRST RIBE
         USING RIBE,R11                RESOURCE INFORMATION BLOCK EXT
         L     R9,RIBNRIBE             LOAD THE # OF RIBE'S
         CLC   RIBNTWE,ANYENQ          ANY WAITING FOR EXCLUSIVE ?
         BNE   SKIP1                     YES...PROCESS
         CLC   RIBNTWS,ANYENQ          ANY WAITING FOR SHARE ?
         BE    BUMPRIB                   NO....BUMP TO NEXT RIB
         EJECT
SKIP1    LA    R1,MAJLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         LA    R1,MINLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
SEARCH   MVC   JOBLINE+4(52),=CL52' '  BLANK OUT THE OUTPUT AREA
         MVI   SWITCH,C'1'             SET SWITCH THAT THERE WAS ENQ
         MVC   JOBNAME(8),RIBEJBNM     JOBNAME OF REQUESTOR
         MVC   SYSTEM(4),RIBESYSN      SYSTEM NAME OF REQUESTOR
         SPACE
TEST1    TM    RIBERFLG,RIBETYPE       IS THIS EXCL OR SHARED?
         BO    SHARED                     YES..
         MVC   EXCLSHR(4),=C'EXCL'        NO...TELL USER
         B     TEST2                      NEXT TEST
SHARED   MVC   EXCLSHR(4),=C'SHR '        TELL USER
         SPACE
TEST2    TM    RIBESFLG,RIBESTAT       IS THIS GUY THE OWNER?
         BO    OWNER                      YES..
         MVC   WAIT(9),=C'*WAITING*'      TELL USER WAITING FOR DSET'S
         B     TPUTIT                     GO PRINT IT
OWNER    MVC   WAIT(9),=9C' '             TELL USER
         SPACE
TPUTIT   LA    R1,JOBLINE
         SR    R0,R0
         IC    R0,XAU
         SVC   35
         SPACE 2
BUMPRIBE AH    R11,RIBELENG            POINT TO NEXT RIBE
         BCT   R9,SEARCH               AND DO IT FOR NEXT USER
BUMPRIB  SR    R3,R3                   CLEAR THE REG
         L     R4,RIBNRIBE             NUMBER OF RIBE'S
BUMPLOOP AH    R3,RIBELENG             ADD RIBE LENGTH
         BCT   R4,BUMPLOOP             AND ADD TIMES NUMBER OF RIBE'S
         AH    R3,RIBLNGTH             ADD LENGTH OF RIB
         AH    R3,RIBVLEN              ADD LENGTH OF VARIABLE SECTION
         AR    R5,R3                   POINT TO NEXT RIB
         BCT   R7,RIBLOOP              AND LOOP UNTIL NO MORE RIBS
         SPACE
         TM    TKNSW,X'01'             WAS THERE A TOKEN?
         BC    8,FINISH                NO, GO TO EOJ
         B     START                   YES, GO REPROCESS
FINISH   CLI   SWITCH,C'1'             WAS THERE AN ENQ ?
         BE    EXIT                       YES...EXIT
         B     NOTFOUND                         TELL USER
         EJECT
EXIT     EQU   *
         ESTAE 0
         LA    R0,PARTWORK
         A     R0,=F'00102400'      ADD IN SCANAREA WORKSIZE
         O     R0,SUB241
         L     R14,SAVRET
         LR    R1,R10
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         EJECT
NOTFOUND LA    R1,NFNDMSG
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
         SPACE 2
CODE04   LA    R1,CODE04M              DSNAME NOT FOUND
         SR    R0,R0
         IC    R0,XAU                  INSERT MCS ID
         SVC   35                      ISSUE WTO
         B     EXIT
         SPACE 2
CODE08   OI    TKNSW,X'01'             TURN TOKEN SW ON
         B     CODE00                  GO FINISH PROCESSING
         SPACE 2
CODE0C   LA    R1,CODE0CM              DSNAME NOT FOUND
         SR    R0,R0
         IC    R0,XAU                  INSERT MCS ID
         SVC   35                      ISSUE WTO
         B     EXIT
         SPACE
CODE10   LA    R1,CODE10M              DSNAME NOT FOUND
         SR    R0,R0
         IC    R0,XAU                  INSERT MCS ID
         SVC   35                      ISSUE WTO
         B     EXIT
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
************************************************************** GLA-BFG
*  THIS WILL RECORD ANY ABENDS IN LOGREC WITH THE              GLA-BFG
*  OPERANDS, REGISTERS, AND PSW IN IT.                         GLA-BFG
************************************************************** GLA-BFG
         STM   R14,R12,12(R13)     SAVE REGISTER               GLA-BFG
         LR    R14,R13             SAVE ORIG R13               GLA-BFG
         L     R13,0(R1)           GET ESTAE PARM              GLA-BFG
         L     R2,XSASAVE          GET XSA ADDRESS             GLA-BFG
         LR    R13,R14             RESTORE R13                 GLA-BFG
         ICM   R2,15,XAL-XSA(R2)   GET PARM ADDRESS            GLA-BFG
         BZ    ESTNOP              IF NO PARMS THEN SKIP DATA  GLA-BFG
         OI    SDWADPVA-SDWA(1),SDWAVRAM+SDWAEBC SET TO VRA    GLA-BFG
*                                  AND EBCDIC                  GLA-BFG
         MVC   SDWAVRA-SDWA(L'ESTPRFX,1),ESTPRFX MOVE HEADER   GLA-BFG
         MVC   SDWAVRA+11-SDWA(8,1),0(R2) MOVE IN DATA         GLA-BFG
         MVI   SDWAURAL-SDWA(1),19 SET LENGTH OF DATA          GLA-BFG
         B     ESTNOP              SKIP CONSTANTS              GLA-BFG
         ESTMODS ,                                             GLA-BFG
ESTPRFX  DC    0CL11' ',AL1(VRAHID,7),C'OPERAND',AL1(VRARRK,8) GLA-BFG
ESTNOP   L     R2,=A(STAERTRY)     GET RETRY ADDRESS           GLA-BFG
         LA    R3,ESTMODS          POINT AT NAMES              GLA-BFG
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO,           GLA-BFG X
               RECORD=YES,RECPARM=(3),REGS=(14,12)             GLA-BFG
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESQ03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         B     EXIT
         EJECT
         LTORG
         SPACE 3
         DS    0F
GQSCANP  GQSCAN MF=L                                            GLA-BFG
GQSCANE  EQU   *                                                GLA-BFG
SYSDSN   DC    CL8'SYSDSN  '           QNAME FOR GQSCAN
ANYENQ   DC    F'0'                    NO ENQ'S
SUB241   DC    X'F1000000'
* TKN    DC    F'0'                    MOVED FOR REENTRANCY     GLA-BFG
NFNDMSG  DC    X'00300100'
         DC    CL48'NO ENQ CONFLICTS EXIST'
         SPACE 3
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
CODE04M  DC    X'00360100'
         DC    CL50'INVALID DSNAME - RETRY COMMAND'
         SPACE 3
CODE08M  DC    X'00360100'             GQSCAN AREA TOO SMALL
         DC    CL50'GQSCAN AREA TOO SMALL - RETRY COMMAND'
         SPACE 3
CODE0CM  DC    X'00360100'             GQSCAN SCREWED UP
         DC    CL50'GQSCAN ERROR - RETRY COMMAND'
         SPACE 3
CODE10M  DC    X'00360100'             INVALID SYSNAME SPECIFIED
         DC    CL72'INVALID SYSNAME - RETRY COMMAND'
         SPACE
WORK     DSECT
SAVRET   DS    F
XSASAVE  DS    F
SWITCH   DS    C
TKNSW    DS    X
TKN      DC    F'0'                    MOVED FOR REENTRANCY     GLA-BFG
NUMCHK   DS    CL6
         SPACE 1
         DS    0F
MAJLINE  DS    0CL56
         DS    CL12
MAJOR    DS    CL44
         SPACE 1
         DS    0F
MINLINE  DS    0CL56
         DS    CL12
MINOR    DS    CL44
         SPACE 1
         DS    0F
JOBLINE  DS    0CL56
         DS    CL4
JOBNAME  DS    CL8
         DS    CL4
EXCLSHR  DS    CL4
         DS    CL4
WAIT     DS    CL9
         DS    CL4
SYSTEM   DS    CL4
         DS    CL15
         SPACE 3
RIBLNGTH DS    H                       RIB LENGTH
RIBELENG DS    H                       RIBE LENGTH
SCANSAVE DS    18F                     18 WORD SAVEAREA REQ FOR GQSCAN
ESTAELST DS    0F,(ESTAEOVX)X     AXC-CBT
GQSCANL  GQSCAN MF=L              NEEDED FOR REENTRANCY         GLA-BFG
PARTWORK EQU   *-WORK             SIZE OF WORKAREA MINUS SCANAREA
SCANAREA DS    102400X            IF SIZE CHGS, CHG 'ALL' 102400 LINES
WORKSIZE EQU   *-WORK
         EJECT
DSXSA    DSECT
XSA      DS    0D
XAP      DS    F                  PTR TO XCTL NAME
XAD      DS    F                  DCB PTR
XAX      DS    D                  XCTL NAME
XAE      DS    0C                 ERROR CODE
XAR      DS    F                  PTR TO PARM LIST (REG1)
XAN      DS    0C                 VERB INDEX
XAL      DS    F                  PTR TO LIST POSITION
XAV      DS    D                  VERB
XAS      DS    D                  TEMP SAVE-AREA
XAU      DS    C                  UCM ENTRY INDICATOR
         DS    C                  RESERVED
XAJ      DS    H                  TJID ENTRY INDICATOR
         DS    F                  RESERVED
         EJECT
         DS   0F
         SPACE 2
         ISGRIB
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
