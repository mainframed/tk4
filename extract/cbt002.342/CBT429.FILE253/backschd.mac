/* REXX BACKUP STATUS RECORD WRITE    */
/*                                    */
/* SCHEDUEL TABLE                     */
/*                                    W       T                  */
/*                             T      E       H                  */
/*                      M      U      D       U     F     S     S*/
/*                      O      E      N       R     R     A     U*/
/*                      N      S      S       S     I     T     N*/
/*                      =      =      =       =     =     =     =*/
pool_.1  ='ONLBATCH     I      I      I       I     I     I      ';
pool_.2  ='ONLGOLD      I      I      I       I     I     I      ';
pool_.3  ='ONLSALE      I      I      I       I     I     I      ';
pool_.4  ='POOLACIC     I      I      I       I     I     F      ';
pool_.5  ='POOLAPPL     I      I      I       I     I     F      ';
pool_.6  ='POOLART      I      I      I       I     I     F      ';
pool_.7  ='POOLCICS     I      I      I       I     I     F      ';
pool_.8  ='POOLDB2      I      I      I       I     I     F      ';
pool_.9  ='POOLEMC      I      I      I       I     I     F      ';
pool_.10 ='POOLMNT      I      I      I       I     I     F      ';
pool_.11 ='POOLMVS      I      I      I       I     I     F      ';
pool_.12 ='POOLPHYS     I      I      I       I     I     F      ';
pool_.13 ='POOLPLAN     I      I      I       I     I     F      ';
pool_.14 ='POOLPOS      I      I      I       I     I     F      ';
pool_.15 ='POOLQA       I      I      I       I     I     F      ';
pool_.16 ='POOLRAMI     I      I      I       I     I     F      ';
pool_.17 ='POOLSEQ      I      I      I       I     I     F      ';
pool_.18 ='POOLSMS      I      I      I       I     I     F      ';
pool_.19 ='POOLSMSC     I      I      I       I     I     F      ';
pool_.20 ='POOLSYS      I      I      I       I     I     F      ';
pool_.21 ='POOLTSO      I      I      I       I     I     F      ';
pool_.22 ='POOLUSER     I      I      I       I     I     F      ';
pool_.23 ='POOLVSAM     I      I      I       I     I     F      ';
poolmax  = 23;
noincr   ='SYS007 SYS008 SYS011 SYS012 SYS013 SYS014 SYS015'
noincrmax= 7;
/*                                    */
/* GET DAY                            */
/*                                    */
CALL SETUP
weekday = DATE(W)
SELECT;
    WHEN weekday = 'Monday'    THEN ;
         day = 2;
    WHEN weekday = 'Tuesday'   THEN ;
         DO;
           QUEUE 'DELETE FROM BUILD.TABRVOLS;' ;
           QUEUE 'COMMIT;' ;
           day = 3;
         END;
    WHEN weekday = 'Wednesday' THEN ;
         day = 4;
    WHEN weekday = 'Thursday'  THEN ;
         day = 5;
    WHEN weekday = 'Friday'    THEN ;
         day = 6;
    WHEN weekday = 'Saturday'  THEN ;
         day = 7;
    WHEN weekday = 'Sunday'    THEN ;
         day = 8;
OTHERWISE END;
/*                                    */
/* GET VOLS                           */
/*                                    */
DO Q=1 TO pdsot_.0;
   poolfound = 'NO'
   PARSE VAR pdsot_.Q word1 5 5 word2 11 58 word3 65 66 word4 74
   SELECT;
      WHEN word3  ='MEMBER:' THEN;
         member = word4;
      WHEN word1  ='//D$'    THEN;
         DO P=1 TO poolmax UNTIL poolfound='YES'
            SELECT;
               WHEN member = WORD(pool_.P,1) THEN;
                  DO;
                    volser = word2;
                    SELECT;
                      WHEN WORD(pool_.P,DAY) = 'I' × ,
                           WORD(pool_.P,DAY) = 'F' THEN;
                         CALL WTESQL;
                     OTHERWISE END;
                     poolfound = YES;
                  END;
            OTHERWISE END;
         END;
      OTHERWISE END;
END;
/*                                    */
/* ONLINE LOOP                        */
/*                                    */
DO P=1 TO poolmax;
   SELECT;
     WHEN 'ONL' = SUBSTR(pool_.P,1,3) THEN;
        DO;
           volser = SUBSTR(pool_.P,4,5);
           SELECT;
              WHEN WORD(pool_.P,DAY) = 'I' THEN;
                CALL WTESQL;
           OTHERWISE END;
        END;
     OTHERWISE END;
END;
CALL CLOSEUP;
EXIT;
/* *** */
/* *** */
/* *** */
WTESQL:
write='Y';
DO G=1 TO noincrmax;
   SELECT;
     WHEN volser = WORD(noincr,G) THEN;
      DO;
         write='N';
      END;
   OTHERWISE END;
END;
IF write='Y' THEN;
   DO;
      SELECT;
          WHEN WORD(pool_.P,DAY) = 'I' THEN;
              btype = 'INCRVOL';
          WHEN WORD(pool_.P,DAY) = 'F' THEN;
              btype = 'FULLVOL';
      OTHERWISE END;
      QUEUE "INSERT INTO BUILD.TABRVOLS(VOLSER,DUMP_TYPE,DUMP_STATUS)"
      QUEUE "    VALUES('"volser"','"btype"','PENDING');         "
   END;
RETURN;
/* *** */
/* *** */
/* *** */
SETUP:
"NEWSTACK";
"PRINTDS DATASET('SYSS.COMDISCO.DUMPJOBS') ,
         TODATASET('PMBU.N.PDS.WORK')"
IF rc <> 0 THEN;
  DO;
    SAY "RC=" rc "**IO** ERROR ON COMDISCO.DUMPJOBS *PRINTDS*";
    EXIT;
  END;
/* **** */
/* **** */
"ALLOC FILE(PDSOT) DATASET('PMBU.N.PDS.WORK') SHR REUSE";
IF rc <> 0 THEN;
  DO;
    SAY "RC=" rc "**IO** ERROR ON PDS.WORK ALLOCATE";
    EXIT;
  END;
/* **** */
/* **** */
"ALLOC FILE(SQLOT) DATASET('PMBU.N.SQL.WORK') SHR REUSE";
IF rc <> 0 THEN;
  DO;
    SAY "RC=" rc "**IO** ERROR ON SQL.WORK ALLOCATE";
    EXIT;
  END;
/* **** */
/* **** */
X = OUTTRAP('pdsot_.');
"EXECIO * DISKR PDSOT (FINIS STEM pdsot_.";
IF rc <> 0 THEN;
  DO;
    SAY "RC=" rc "**IO** ERROR ON PDSOT READ";
    EXIT;
  END;
X = OUTTRAP('OFF');
RETURN
/* *** */
/* *** */
/* *** */
CLOSEUP:
"EXECIO * DISKW SQLOT (FINIS"
"DELSTACK"
/* *** */
/* *** */
/* *** */
"FREE  DDNAME(PDSOT SQLOT)"
IF rc <> 0 THEN;
  DO;
    SAY "RC=" rc "**IO** ERROR ON DSN FREE";
    EXIT;
  END;
/* *** */
/* *** */
/* *** */
/* *** */
/* *** */
/* *** */
RETURN
