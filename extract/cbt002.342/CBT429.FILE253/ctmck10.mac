PROC 0 DEBUG()
ISPEXEC CONTROL ERRORS CANCEL
CONTROL MAIN NOLIST NOCONLIST NOSYMLIST NOMSG
IF &DEBUG=DEBUG THEN CONTROL MAIN LIST CONLIST SYMLIST MSG
CONTROL ASIS
SET &ACTION = CANCEL

/********************************************************/
/**                                                    **/
/**    CONTROL-M QUICK SCHEDULE DEFINITION             **/
/**                                                    **/
/**    CLIST CTMCK10                                   **/
/**                                                    **/
/**    THIS IS THE FIRST PANEL FOR THE USER            **/
/**                                                    **/
/**    GET LIBRARY, TABLE NAME AND GROUP NAME          **/
/**                                                    **/
/**                                                    **/
/********************************************************/

SET &SCHEDTB =
SET &GRP =
SET &SF  =
SET &ENDED = 0
SET &OLDMEM = N     /* NO OLD VERSION OF TABLE */

ISPEXEC VGET (ZAPPLID)
IF &ZAPPLID = CTMU THEN +
         ISPEXEC VGET (CTMPKLIB  CTMPKSKL USOURCE) PROFILE
  ELSE   ISPEXEC VGET (CTMPKLIB  CTMPKSKL USOURCE)
SET &LIB = &CTMPKLIB
SET &SKELMEM =&CTMPKSKL
IF Z&USOURCE=Z THEN SET &USOURCE=T

/********************************************************/
/**                                                    **/
/**    MAIN LOOP - DISPLAY PANEL AND GET INPUT         **/
/**    UNTIL DATA IS VALID OR USER KILLS IT            **/
/**                                                    **/
/********************************************************/
SET &CURSOR = LIB
IF Q&LIB^= Q THEN SET &CURSOR=SCHEDTB

SET &OPT1 = Y
SET &OPT2 = N
SET &OPT3 = N

SET &OUTMSG=

DO WHILE (&ENDED = 0)

   /********************************************************/
   /**                                                    **/
   /**    DISPLAY PRIMARY PANEL AND GET RESPONSE          **/
   /**                                                    **/
   /********************************************************/

   IF (&OUTMSG^=) THEN ISPEXEC SETMSG MSG(&OUTMSG)

   ISPEXEC DISPLAY PANEL(CTMPK01W)  CURSOR(&CURSOR)
   ISPEXEC VGET (ZVERB)

   SET &CTMPKLIB = &LIB
   SET &CTMPKSKL = &SKELMEM
   IF &ZAPPLID = CTMU THEN +
           ISPEXEC VPUT (CTMPKLIB  CTMPKSKL USOURCE) PROFILE
      ELSE ISPEXEC VPUT (CTMPKLIB  CTMPKSKL)
   ISPEXEC VPUT (USOURCE) /* ALWAYS IN APPLICAYION POOL */

   ISPEXEC VPUT (ENDED)
   SET &RESP = &ZVERB

   /********************************************************/
   /**                                                    **/
   /**    IF USER HIT 'END' OR 'RETURN' JUST EXIT         **/
   /**                                                    **/
   /********************************************************/

   IF ((&RESP = END) OR (&RESP = RETURN)  THEN +
      DO
         SET &ENDED = 1
         SET &LIB=
         SET &SCHEDTB=
         SET &GRP=
         ISPEXEC VPUT (ENDED LIB SCHEDTB GRP SKELMEM)
         EXIT QUIT
      END

   /********************************************************/
   /**                                                    **/
   /**    VALIDATE USER INPUT DATA                        **/
   /**                                                    **/
   /********************************************************/

   /********************************************************/
   /**                                                    **/
   /**    CONVERT OPTION TO A SINGLE NUMBER               **/
   /**                                                    **/
   /********************************************************/

   IF &OPT1 = Y THEN SET &OPT = 1
   IF &OPT2 = Y THEN SET &OPT = 2
   IF &OPT3 = Y THEN SET &OPT = 3

   /********************************************************/
   /**                                                    **/
   /**    VALIDATE SUFFIX - NO EMBEDDED BLANKS            **/
   /**                                                    **/
   /********************************************************/

   SET &SFXOK = 1
   SET &SFXLEN = &LENGTH(&NRSTR(&SF))

   SET &I = 1
   DO WHILE ( (&SFXOK=1) AND (&I<=&SFXLEN) )
     SET &C = &STR(&SUBSTR(&I,&NRSTR(&SF)))
     IF Z&NRSTR(&C) =Z  THEN SET &SFXOK=0
     SET &I = &I + 1
   END  /* OF SUFFIX VALIDATION

   IF &SFXOK = 0 THEN +
      DO
         SET &OUTMSG =CTMK001E
         SET &CURSOR = GRP
      END

   /********************************************************/
   /**                                                    **/
   /**    GROUP NAME VALIDATION :                         **/
   /**      IF INPUT, EMBEDDED BLANKS NOT ALLOWED         **/
   /**                                                    **/
   /**    FOR OPTION 1,                                   **/
   /**      FIRST CHARACTER NOT A DASH                    **/
   /**      SUFFIX + PORTION BEFORE DASH <= 10 CHARACTERS **/
   /**                                                    **/
   /********************************************************/
   SET &GROUPOK = 1
   SET &GRPLEN = &LENGTH(&NRSTR(&GRP))

   SET &I = 1
   SET &DASH = 0

   DO WHILE ((&GROUPOK=1) AND (&I <= &GRPLEN))
     SET &C = &STR(&SUBSTR(&I,&NRSTR(&GRP)))
     IF (&NRSTR(&C) = &STR(-)) THEN +
       IF  &DASH = 0 THEN SET &DASH = &I
     IF Z&NRSTR(&C) =Z  THEN SET &GROUPOK=0
     SET &I = &I + 1
   END /* LOOP OVER CHARACTERS IN GROUPNAME */

   IF &GROUPOK = 0 THEN +
      DO
         SET &OUTMSG =CTMK001E
         SET &CURSOR = GRP
      END

   IF (&OPT=1) AND (&GROUPOK=1) THEN +
     DO
       IF &DASH=0 THEN SET &DASH = &GRPLEN + 1
       SET &SGRP = &SUBSTR(1:&DASH-1,&NRSTR(&GRP))
       IF &DASH + &SFXLEN   > 11 THEN +
         DO
            SET &OUTMSG = CTMK001Q
            SET &CURSOR = GRP
            SET &GROUPOK = 0
         END
     END /* OPTION 1 GROUP + SUFFIX VALIDATION */



   /********************************************************/
   /**                                                    **/
   /**    VALIDATE THAT THE SCHEDULING TBL LIBRARY EXISTS **/
   /**                                                    **/
   /********************************************************/

   SET &LIBVALID = 1
   SET &OLIB = &LIB
   SET &MEMBER = 1
   SET &SKELMOK= 1
   SET &DSORG = PO
   SET &LRECL = 80
   SET &RECFM = FB

   ISPEXEC CONTROL ERRORS RETURN
   ISPEXEC LMINIT DATAID(CTMPKF00) DATASET('&LIB') ENQ(SHR) +
                  ORG(DSORG)
   ISPEXEC LMOPEN DATAID(&CTMPKF00) LRECL(LRECL) RECFM(RECFM) +
                  OPTION(INPUT)
   SET &RC = &LASTCC
   ISPEXEC CONTROL ERRORS &ACTION
   IF &RC ^= 0 THEN +
      DO
        SET &LIBVALID = 0
        SET &OUTMSG = CTMK001A
      END

   IF &LIBVALID  = 1 THEN +
      DO
        IF &DSORG ^= PO  THEN +
         DO
           SET &OUTMSG = CTMK001D
           SET &LIBVALID = 0
         END
        IF &LRECL ^= 80  THEN +
         DO
           SET &OUTMSG = CTMK001C
           SET &LIBVALID = 0
         END
        IF ((&RECFM ^= FB) AND (&RECFM ^= F))  THEN +
         DO
           SET &OUTMSG = CTMK001B
           SET &LIBVALID = 0
         END
      END

   IF &LIBVALID = 0 THEN SET &CURSOR = LIB

   /********************************************************/
   /**                                                    **/
   /**    VALIDATE THAT THE SKELETON SCHEDULE EXISTS      **/
   /**                                                    **/
   /********************************************************/

   IF &LIBVALID = 1 THEN +
     DO
       ISPEXEC CONTROL ERRORS RETURN
       ISPEXEC LMMFIND DATAID(&CTMPKF00)  MEMBER(&SKELMEM)
       SET &RC = &LASTCC
       IF &RC ^= 0 THEN +
          DO
             SET &OUTMSG = CTMK001G
             SET &SKELMOK = 0
          END
       ISPEXEC CONTROL ERRORS &ACTION
     END

   IF &SKELMOK = 0 THEN SET &CURSOR = SKELMEM

   /********************************************************/
   /**                                                    **/
   /**    VALIDATE SYNTAX OF OUTPUT TABLE NAME            **/
   /**                                                    **/
   /********************************************************/
   SET &MEMLEN = &LENGTH(&NRSTR(&SCHEDTB))
   SET &NDX = 1
   DO WHILE ((&MEMBER=1) AND (&NDX <= &MEMLEN))
     IF (&SUBSTR(&NDX,&NRSTR(&SCHEDTB))=&STR( )) THEN +
       DO
         SET &MEMBER=0
         SET &OUTMSG = CTMK001E
         SET &CURSOR = SCHEDTB
       END
     SET &NDX = &NDX + 1
   END

   /********************************************************/
   /**                                                    **/
   /**    DETERMINE WHETHER OR NOT THERE IS AN OLD        **/
   /**    VERSION OF THE OUTPUT TABLE                     **/
   /**                                                    **/
   /********************************************************/

   IF ((&LIBVALID = 1) AND (&GROUPOK = 1) AND (&MEMBER = 1)   +
    AND (&SKELMOK = 1) AND (&SFXOK=1) ) THEN +
     DO
        ISPEXEC CONTROL ERRORS RETURN
        ISPEXEC LMMFIND DATAID(&CTMPKF00)  MEMBER(&SCHEDTB)
        SET &RC = &LASTCC
        IF &RC = 0 THEN +
          DO
             SET &PERMIT=
               /* PERMISSION TO UPDATE */
             ISPEXEC DISPLAY PANEL(CTMPK04W) CURSOR(PERMIT)
             ISPEXEC VGET (ZVERB)
             SET &RESP=&ZVERB
             IF &RESP=RETURN THEN +
               DO
                 SET &ENDED=1
                 ISPEXEC VPUT (ENDED)
                 EXIT
               END
             IF ( (&PERMIT=N) OR (&RESP=END) ) THEN +
               DO
                 SET &MEMBER=0        /* WONT GO ON */
                 SET &SCHEDTB=        /* CLEAR SCREEN FIELD */
               END
             ELSE +
               DO
                        /* REDISPLAY WITH SCREEN LOCKED */
                 ISPEXEC CONTROL DISPLAY LOCK
                 ISPEXEC DISPLAY PANEL(CTMPK01W)
               END
          END
     END

   ISPEXEC CONTROL ERRORS RETURN
   ISPEXEC LMCLOSE DATAID(&CTMPKF00)
   ISPEXEC LMFREE  DATAID(&CTMPKF00)
   ISPEXEC CONTROL ERRORS &ACTION


   IF ((&LIBVALID = 1) AND (&GROUPOK = 1) AND (&MEMBER = 1)   +
    AND (&SKELMOK = 1) AND (&SFXOK=1) ) THEN +
     DO
        ISPEXEC VPUT (ENDED LIB SCHEDTB GRP SGRP SKELMEM OPT SF)
        EXIT
     END

END  /* DATA IS NOW VALID */
EXIT
