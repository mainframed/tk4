/*  REXX EXEC : ( DB2PRDB1 ).
    FUNCTION  : CALLED BY CCF BACKOUT AND PROD COMPILE SERVICES TO
                BUILD THE PACKAGE/BIND/GRANT CONTROL PARM MEMBERS AND
                WRITES THE MEMBERS INTO CORRESPONDING PROD DATASETS.
    INPUT     : SYSS.QA.CCF.DB2.TURNOVER.PARMLIB(@WORKORDR).
    OUTPUT    : SYSS.PROD.CCF.DB2.BIND.CNTLLIB(@MEMBER).
                SYSS.PROD.CCF.DB2.GRANT.CNTLLIB(@MEMBER).
                SYSS.PROD.CCF.DB2.PACKAGE.CNTLLIB(@MEMBER).
    AUTHOR    : DAN BOWEN, TECH SERVICES.
                                                                     */
TRACE O
/*     */
HOUSE_KEEPING:
ADDRESS TSO
ARG MASTER MEMBER WORKORDR
PARMS = 'MASTER MEMBER WORKORDR'
SRC = 0
DO I = 1 TO 3
   IPARM = WORD(PARMS,I)
   XPARM = VALUE(IPARM)
   IF XPARM ^= '' THEN ITERATE
   SAY
   SAY '*** PARM ERROR: MISSING PARM VALUE FOR ('IPARM'). ***'
   SAY '*** DB2PRDB1 EXEC TASK CANCELLED - RC = (024). ***'
   SAY
   EXIT 024
END
X = MSG("OFF")
"FREE FILE(PARMDD)"
"FREE FILE(DB2DD)"
TSOID = SYSVAR(SYSUID)
DB2SYS = 'DSNA'
DB2QUAL = 'BUILD'
DB2ACT = 'ADD'
DSNTPLAN = 'DSNTIA23'
PARMLIB = 'SYSS.TECH.COMMON.PARMLIB'
PARMPDS = 'SYSS.QA.CCF.DB2.TURNOVER.PARMLIB'
BINDPDS = 'SYSS.PROD.CCF.DB2.BIND.CNTLLIB'
PACKPDS = 'SYSS.PROD.CCF.DB2.PACKAGE.CNTLLIB'
GRNTPDS = 'SYSS.PROD.CCF.DB2.GRANT.CNTLLIB'
RUNLIB = 'SYSS.DB2.V2R3M0.RUNLIB.LOAD'
DB2LOAD = 'SYS1.DB2.V2R3M0.LOAD'
LIBNODE = POS('PRODSRCE',MASTER)
IF LIBNODE ^= 0 THEN SIGNAL MAIN_ROUTINE_PROD
SAY
SAY '*** PARM ERROR: INVALID PARM VALUE PASSED: ('MASTER'). ***'
SAY '*** THE SPECIFIED CCF LIBRARIAN MASTER IS NOT SUPPORTED. ***'
SAY '*** DB2PRDB1 EXEC TASK CANCELLED - RC = (024). ***'
SAY
EXIT 024
/*     */
MAIN_ROUTINE_PROD:
CALL GET_DB2_PACKAGE_BIND_PARMS
IF MEMBSW = 'NO' THEN DO
   SAY
   SAY '*** PARM ERROR: ENTRY NOT FOUND ('PARMPDS'('WORKORDR') ('MEMBER'
   SAY '*** DB2 PACKAGE/BIND/GRANT SYSIN MEMBERS CANNOT BE WRITTEN FOR P
   SAY '*** DB2PRDB1 EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   SAY
   EXIT SRC
END
IF DB2SYS = 'DB2Q' × 'DB2P' THEN DO
   RUNLIB = 'SYSS.DB2.V3R1M0.'DB2SYS'.RUNLIB.LOAD'
   DB2LOAD = 'SYS1.DB2.V3R1M0.SDSNLOAD'
END
CALL BUILD_PACKAGE_SYSIN
OUTPDS = PACKPDS
CALL WRITE_DB2_PARMS
CALL BUILD_BIND_SYSIN
OUTPDS = BINDPDS
CALL WRITE_DB2_PARMS
CALL BUILD_GRANT_SYSIN
OUTPDS = GRNTPDS
CALL WRITE_DB2_PARMS
EXIT 0
/*
       S U B R O U T I N E S   S E C T I O N     */
/*     */
GET_DB2_PACKAGE_BIND_PARMS:
SRC = 028
MEMBSW = 'NO'
DB2PARM = SYSDSN("'"PARMPDS"("WORKORDR")'")
IF DB2PARM = 'MEMBER NOT FOUND' THEN RETURN
"ALLOC DA('"PARMPDS"("WORKORDR")') FILE(PARMDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('PARMPDS'('WORKORDR'). ***'
   RETURN
END
"EXECIO * DISKR PARMDD (FINIS STEM QPARM."
SRC = RC
"FREE FILE(PARMDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('PARMPDS'('WORKORDR'). ***'
   RETURN
END
DO I = 1 TO QPARM.0
   PMEMBER = WORD(QPARM.I,1)
   COLLID = WORD(QPARM.I,2)
   PROGTYP = WORD(QPARM.I,3)
   DBSUBSYS = WORD(QPARM.I,5)
   DBTQUAL = WORD(QPARM.I,6)
   IF PMEMBER = MEMBER & PROGTYP = 'BATCH' THEN DO
      MEMBSW = 'YES'
      DB2COLL = COLLID
      DB2PLAN = COLLID
      IF DBSUBSYS ^= '' THEN DB2SYS = DBSUBSYS
      IF DBTQUAL ^= '' THEN DB2QUAL = DBTQUAL
      LEAVE
   END
END
DB2QUAL = 'BUILD'
RETURN
/*     */
BUILD_PACKAGE_SYSIN:
"DELSTACK"
RCDCNT = 15
RCD.1 = " DSN SYSTEM("DB2SYS")"
RCD.2 = " BIND PACKAGE ("DB2COLL") -"
RCD.3 = "      OWNER("TSOID") -"
RCD.4 = "      QUALIFIER("DB2QUAL") -"
RCD.5 = "      MEMBER ("MEMBER") - "
RCD.6 = "      SQLERROR(NOPACKAGE) -"
RCD.7 = "      VALIDATE(BIND) -"
RCD.8 = "      FLAG(I) -"
RCD.9 = "      ISOLATION (CS) -"
RCD.10 = "      RELEASE(COMMIT) -"
RCD.11 = "      EXPLAIN(NO) -"
RCD.12 = "      CURRENTDATA(NO) -"
RCD.13 = "      ACTION ("DB2ACT") -"
RCD.14 = "      ENABLE(*)"
RCD.15 = " END"
DO R = 1 TO RCDCNT
   QUEUE RCD.R
END
RETURN
/*     */
BUILD_BIND_SYSIN:
"DELSTACK"
RCDCNT = 15
REC.1 = " DSN SYSTEM("DB2SYS")"
REC.2 = " BIND PLAN ("DB2PLAN") -"
REC.3 = "      OWNER("TSOID") -"
REC.4 = "      VALIDATE(BIND) -"
REC.5 = "      FLAG(I) -"
REC.6 = "      ACQUIRE(USE) -"
REC.7 = "      ISOLATION(CS) -"
REC.8 = "      RELEASE(COMMIT) -"
REC.9 = "      EXPLAIN(NO) -"
REC.10 = "      ACTION (REPLACE) -"
REC.11 = "      PKLIST("DB2COLL".*) -"
REC.12 = "      ENABLE(*)"
REC.13 = " RUN PROGRAM(DSNTIAD) PLAN("DSNTPLAN") -"
REC.14 = "     LIB('"RUNLIB"')"
REC.15 = " END"
DO R = 1 TO RCDCNT
   QUEUE REC.R
END
RETURN
/*     */
BUILD_GRANT_SYSIN:
"DELSTACK"
PKGCNT = 5
COMRCD = "  COMMIT;"
PKG.1 = "        GRANT"
PKG.2 = "        BIND,"
PKG.3 = "        COPY,"
PKG.4 = "        EXECUTE"
PKG.5 = "  ON PACKAGE "DB2COLL".* TO"
BNDCNT = 4
BND.1 = "        GRANT"
BND.2 = "        BIND,"
BND.3 = "        EXECUTE"
BND.4 = "  ON PLAN "DB2PLAN" TO"
DB2PARM = SYSDSN("'"PARMLIB"(DB2ADMIN)'")
IF DB2PARM = 'MEMBER NOT FOUND' THEN DO
   SAY '*** MEMBER ERROR: MEMBER NOT FOUND ('PARMLIB'(DB2ADMIN). ***'
   SAY '*** DB2PRDB1 EXEC SUBTASK CANCELLED - RETURN CODE: ('028'). ***'
   EXIT 028
END
"ALLOC DA('"PARMLIB"(DB2ADMIN)') FILE(PARMDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('PARMLIB'(DB2ADMIN). ***'
   SAY '*** DB2PRDB1 EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
"EXECIO * DISKR PARMDD (FINIS STEM AUTH."
SRC = RC
"FREE FILE(PARMDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('PARMLIB'(DB2ADMIN). ***'
   SAY '*** DB2PRDB1 EXEC TASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
AUSER = TSOID','
DO P = 1 TO PKGCNT
   QUEUE PKG.P
END
DO I = 1 TO AUTH.0
   AUTHUSR = WORD(AUTH.I,1)
   IF AUSER = AUTHUSR THEN ITERATE
   DB2AUTH = '        '××AUTHUSR
   QUEUE DB2AUTH
END
QUEUE COMRCD
DO B = 1 TO BNDCNT
   QUEUE BND.B
END
DO I = 1 TO AUTH.0
   AUTHUSR = WORD(AUTH.I,1)
   IF AUSER = AUTHUSR THEN ITERATE
   DB2AUTH = '        '××AUTHUSR
   QUEUE DB2AUTH
END
QUEUE COMRCD
RETURN
/*     */
WRITE_DB2_PARMS:
"ALLOC DA('"OUTPDS"("MEMBER")') FILE(DB2DD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('OUTPDS'('MEMBER'). ***'
   SAY '*** DB2PRDB1 EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
NUMRCDS = QUEUED()
"EXECIO" NUMRCDS "DISKW DB2DD (FINIS"
SRC = RC
"FREE FILE(DB2DD)"
IF SRC ^= 0 THEN DO
   SAY '*** WRITE ERROR: ERROR WRITING ('OUTPDS'('MEMBER').  ***'
   SAY '*** DB2PRDB1 EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
RETURN
