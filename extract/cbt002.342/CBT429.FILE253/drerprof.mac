/* REXX **********************************************************/
/*                                                               */
/*     PROGRAM NAME: DRERPROF                                    */
/*                                                               */
/* DESCRIPTIVE NAME: SLR Dialog profile                          */
/*                                                               */
/* Read this before you start editing this profile:              */
/*                                                               */
/* - This is a REXX program and REXX syntax rules must be        */
/*   followed.                                                   */
/* - The format of each profile variable is:                     */
/*   variable = value                                            */
/*   -  Variable is a symbolic name for an option or data set.   */
/*   -  Value is the value to assign to the profile variable. It */
/*      can be one or more words, with or without quotes.        */
/*   -  A value can be continued to the next line by using a     */
/*      comma as the last character. Example:                    */
/*      SLRSAMP = 'SLR.LOCAL.SLRSAMP' , /* Customized tables   */*/
/*                'SLR.V3R3M0.SLRSAMP'  /* SLR delivered tables*/*/
/* - Variables starting with SLRU are output data sets and       */
/*   can only contain one data set name. The other variables     */
/*   beginning with SLR can have up to three data sets specified.*/
/*   Exception to this rule is the SLRFORM data set which is an  */
/*   output data set for GDDM ICU formats.                       */
/* - All data sets, except data base names, must exist before    */
/*   the SLR dialog is started.                                  */
/* - The data set names must be fully qualified.                 */
/* - When you allocate the user data sets, model them after      */
/*   the corresponding SLR data set.                             */
/*                                                               */
/* - Normally, you create one profile for the SLR specialist,    */
/*   who will perform customization, and one for all other       */
/*   users. Each user must use their own SLRUTLIB, it cannot     */
/*   be shared but it can be the same data set as used for the   */
/*   ISPTABL for example.                                        */
/*   The SLR specialist should use a SLR specific SLRUTLIB data  */
/*   set. This data set should be the first data set name set    */
/*   to variable SLRTLIB. In this way, the end users will only   */
/*   see the customized SLR ISPF tables and not the shipped ones.*/
/*                                                        PL79091*/
/* - Before you start the SLR dialog, you must ensure that the   */
/*   SLR LINKLIB is in the system link list or allocated to      */
/*   STEPLIB. The SLR SLREXEC data set must be allcoated to      */
/*   SYSEXEC or SYSPROC. The SLR SLRCLIST data set must be       */
/*   allocated to SYSPROC.                                PL79091*/
/*                                                               */
/* CHANGE ACTIVITY:                                              */
/*    Created 90-07-26 for SLR V3R3M0 by UB                      */
/*    Change 01 91-03-01 Wrong data set for variable ADMCFORM.   */
/*                       ADMCFORM should be SLRFORM target lib.  */
/*                       Some documentation added.               */
/*                       APAR PL79091.                           */
/*    Change 02 91-05-23 Save of GDDM variable was omitted.      */
/*                       APAR PL85043.                           */
/*                                                               */
/*****************************************************************/
Signal on syntax                    /* Trap REXX syntax errors   */
Parse Source . . module .           /* Module name               */

/*AAA*************************************************************/
/* Set data set prefix                                           */
/* usrpre is the prefix for data sets allocated per user.        */
/* syspre is the prefix for data sets allocated per SLR system.  */
/*        Normally the same as usrpre when customizing.          */
/* slrpre is the prefix for the SLR target data sets.            */
/*****************************************************************/
usrpre = 'TECH108.SLR.V3R3M0' /*                                 */
syspre = 'TECH108.SLR.V3R3M0' /*USER DATA SET PREFIX (TSO PREFIX)*/
slrpre = 'SYS1.SLR.V3R3M0'   /* SLR data set prefix              */

/*****************************************************************/
/* Set global options                                            */
/*****************************************************************/
debug = 0                  /* 0 - No debug, 1 - Enable Debug     */
logo  = 0                  /* 0 - No SLR logo, 1 - Show SLR logo */
gddm  = 0                  /* 0 - No GDDM used, 1 - GDDM used    */

/*****************************************************************/
/* Set language                                                  */
/*****************************************************************/
Address "ISPEXEC"  "VGET ZLANG"     /* Get ISPF language         */
If Translate(zlang) = 'JAPANESE' Then
  language = 'JAPANESE'             /* Japanese                  */
Else
  language = 'ENGLISH'              /* English (also default)    */

/*****************************************************************/
/* Output ISPF table data set. SLR will concatenate this         */
/* data set before the SLRTABL data set when reading.            */
/* Must be one per SLR user.                                     */
/*****************************************************************/
slrutlib = 'tech108.user.cntllib1'  /* SLR ISPF tables           */

/*****************************************************************/
/* Data sets containing local modifications to SLR. They will    */
/* be concatenated ahead of the corresponding SLR data sets.     */
/*****************************************************************/
slruslib = syspre'.SLRCNTL'         /* SLR ISPF skeletons        */
slrusamp = 'tech108.slr.v3r3m0.slrsamp'/*                        */
slruasm  = syspre'.SLRASM'          /* User table source         */
slrumacs = syspre'.SLRMACS'         /* User macros               */
slruclist= syspre'.SLRCLIST'        /* User clists               */
slrucntl = syspre'.SLRCNTL'         /* User JCL                  */
slrform  = 'tech108.slr.v3r3m0.slrform'  /*<<<<<<<<<<<<<<<<<<<   */

/*****************************************************************/
/* SLR data bases. You can add your own data bases by adding     */
/* a new unique data base symbolic name to the SLRDBS list and   */
/* by assigning the new variable a name.                         */
/* Note: do may not use MAINFILE as a data base name.            */
/*****************************************************************/
slrdbs   = 'REPORTDB SYSTEMDB WORKFILE',  /* List of data bases  */
           'DEMODB ACCTDB FCASTDB PERFMDB NRDB'
reportdb = slrpre'.REPORTDB.cluster' /*SLR report data base      */
systemdb = slrpre'.SYSTEMDB.cluster' /*SLR system data base      */
workfile = slrpre'.WORKFILE.cluster' /*SLR Work data base        */
acctdb   = slrpre'.ACCTDB.cluster'  /* SLR accounting data base  */
fcastdb  = slrpre'.FCASTDB.cluster' /* SLR forecasting data base */
perfmdb  = slrpre'.PERFMDB.cluster' /* SLR performance data base */
demodb   = slrpre'.DEMODB.cluster'  /* SLR demo data base        */
nrdb     = slrpre'.NRDB.cluster'    /* SLR Network Report db     */

/*****************************************************************/
/* SLR GDDM data sets                                            */
/*****************************************************************/
admgdf   = syspre'.ADMGDF'           /* SLR GDDM ADMGDF          */
admcdata = syspre'.ADMCDATA'         /* SLR GDDM ADMCDATA        */
admcform = 'sysm.slr.v3r3m0.slrform' /* <<<<<<<<<<<<<<<<  PL79091*/
admdefs  = slrpre'.SLRCNTL(DREJGDPR)'  /* GDDM nicknames  PL79091*/
admsymbl = 'SYS1.GDDMSYM'            /* GDDM symbols      PL79091*/

/*****************************************************************/
/* SLR sort data sets                                            */
/*****************************************************************/
sortlib  = 'SYS1.syncsort.v3r4me.linklib'   /* <<<<<<<<<<<<<<<<  */
sortwsz  = 30                       /* Number of workfile cyls   */
sortwu   = 'SYSDA'                  /* Workfile unit             */
sysout   = 'DUMMY'                  /* SORT message output       */

/*****************************************************************/
/* JCL jobcards                                                  */
/*****************************************************************/
jobcard1 = "//"Userid()"S JOB (123456,NOBO),'SLR JCL',            "
jobcard2 = "//  NOTIFY="Userid()",MSGCLASS=Q,CLASS=A,REGION=6500K "
jobcard3 = "//*"
jobcard4 = "//*"
jobcard5 = "//*"

/*****************************************************************/
/* SLR ISPF data sets. Since each user must have their own       */
/* ISPF table data set for SLR outputs, the customized SLR ISPF  */
/* table data set should be concatenated to the SLRTLIB to make  */
/* it available to all SLR users.                                */
/* Up to three data sets can be concatenated.                    */
/*****************************************************************/
slrplib = slrpre'.SLRPANEL'         /* SLR ISPF panels           */
slrmlib = slrpre'.SLRMLIB'          /* SLR ISPF messages         */
slrslib = slrpre'.SLRSLIB'          /* SLR ISPF skeletons        */
slrtlib = 'tech108.user.cntllib1',  /* Customized SLR ISPF tables*/
          slrpre'.SLRTABL'          /* SLR ISPF tables           */

/*****************************************************************/
/* SLR data sets. Up to three data sets may be concatenated.     */
/*                                                        PL79091*/
/*****************************************************************/
slrload = 'sys1.linklib'            /* SLR load modules          */
slrsamp = 'sysm.slr.v3r3m0.slrsamp' /* SLR table & exits (load)  */
slrmacs = slrpre'.SLRMACS'          /* SLR table macros          */
slrasm  = slrpre'.SLRASM'           /* SLR table & exits (source)*/
slrexec = slrpre'.SLREXEC'          /* SLR rexx programs         */
slrcntl = slrpre'.SLRCNTL'          /* SLR cntl programs         */
slrclist= slrpre'.SLRCLIST'         /* SLR clist programs        */
slrdbt  = slrpre'.SLRDBT'           /* SLR data base table ref.  */
slrdump = 'DUMMY'                   /* SLR dump file. Can be:    */
                                    /* DUMMY  -  No output       */
                                    /* *   - Output to terminal  */

/*****************************************************************/
/*                                                               */
/*             END OF CUSTOMIZATION FOR SLR                      */
/*                                                               */
/*   The rest of the code should not be modified.                */
/*BBB ************************************************************/

/*****************************************************************/
/* LIBDEF to table data set                                      */
/*****************************************************************/
Address "ISPEXEC" "CONTROL ERRORS RETURN"
Call libdef 'ISPTLIB' slrutlib slrtlib  /* Keylists, cmd tables  */
Call libdef 'SLRTLIB' slrutlib slrtlib  /* SLR input ISPF tables */
Call libdef 'SLRTABL' slrutlib          /* SLR output tables     */

/*****************************************************************/
/* Open Profile ISPF table. If it doesn't exist, create it.      */
/* The DRETPROF table has one key (PROFVAR) and one data         */
/* column (PROFVAL).                                             */
/*****************************************************************/
Address "ISPEXEC"
"TBOPEN  DRETPROF SHARE WRITE LIBRARY(SLRTLIB)"

/*****************************************************************/
/* Check return code from TBOPEN                                 */
/*****************************************************************/
Select
  /***************************************************************/
  /* Table opened, no action                                     */
  /***************************************************************/
  When rc = 0 Then
    Nop

  /***************************************************************/
  /* Table does not exist. Create it                             */
  /***************************************************************/
  When rc = 8 Then
    Do
      "TBCREATE DRETPROF KEYS(PROFVAR) NAMES(PROFVAL)",
      "  LIBRARY(SLRTABL) SHARE REPLACE"
      If debug > 0 Then
        Call drertrc module' TBCREATE DRETPROF rc = 'rc
      If rc > 8 Then
        Do
          Say 'Cannot create SLR table DRETPROD on data set' slrutlib
          Say 'Program terminates.'
          Say zerrlm
          Exit rc
        End
    End

  /***************************************************************/
  /* Other errors. Issue message                                 */
  /***************************************************************/
  When rc > 8 Then
    Do
      Say 'Cannot open SLR table DRETPROD on data set' slrutlib slrtlib
      Say 'Program terminates with rc = 'rc
      Say zerrlm
      Exit rc
    End
  Otherwise
    Nop
End

/*****************************************************************/
/* For all supported SLR variables, update DRETPROF table        */
/*****************************************************************/
vl = ,                                  /* GDDM added     PL85043*/
  'SLRSAMP  SLRUSAMP SLRMACS   SLRUMACS SLRASM   SLRUASM ',
  'SLRFORM  ADMCFORM ADMCDATA  ADMGDF   ADMDEFS  ADMSYMBL',
  'SLREXEC  SLRCNTL  SLRUCNTL  SLRMLIB  SLRPLIB  SLRSLIB ',
  'SLRTLIB  SLRUTLIB SLRMKLB   SLRPKLB  SLRTKLB  SLRSKLB ',
  'JOBCARD1 JOBCARD2 JOBCARD3  JOBCARD4 JOBCARD5         ',
  'SORTLIB  SYSOUT   SORTWSZ   SORTWU   GDDM             ',
  'DEBUG    LANGUAGE SLRDUMP   LOGO     SLRUSLIB         ',
  'SLRDBT   SLRCLIST SLRUCLIST SLRLOAD  SLRDBS 'slrdbs

Do i = 1 To Words(vl)
  profvar = Word(vl,i)
  profval = Translate(Value(profvar))
  "TBMOD DRETPROF"
End

/*****************************************************************/
/* Save profile                                                  */
/*****************************************************************/
"TBSAVE  DRETPROF LIBRARY(SLRTABL)"

Exit 0

/*****************************************************************/
/* Handle LIBDEF calls                                           */
/*                                                               */
/* Called as:  LIBDEF  dd_name  dsn_names                        */
/*   dd_name   -  Any name allowed by LIBDEF                     */
/*   dsn_names -  Any data set names allowed by LIBDEF DATASET   */
/*                                                               */
/* If any return code from LIBDEF, issue message and terminate   */
/*****************************************************************/
Libdef:
  Arg dd_name dsn_names
  ds_names = ''
  Do i = 1 To Words(dsn_names)
    ds_names = ds_names "'"Word(dsn_names,i)"'"
  End

  Address "ISPEXEC" "LIBDEF "dd_name" DATASET ID("ds_names") UNCOND"
  If rc > 4 Then
    Do
      Say 'ISPF LIBDEF error in SLR DRERPROF exec when trying to'
      Say 'libdef 'dd_name' to 'ds_names'. LIBDEF return code 'rc
      Say 'and message 'zerrlm
      Exit rc
    End

Return

/*****************************************************************/
/* Syntax error discovered                                       */
/*****************************************************************/
Syntax:
  Call drertrc module' Syntax error in 'module' line 'sigl
  Call drertrc module' Error text: 'Errortext(rc)
  Call drertrc module' Error line: 'Space(Sourceline(sigl))
  Say 'Syntax error trapped in: 'module
  Say 'REXX return code 'rc ' in line 'sigl': 'errortext(rc)
  Say 'Lines before error line are:'
  Do i = Max(sigl - 5,1) To sigl
    Say Right(i,5,'0')': 'Space(Sourceline(i))
  End
  Say 'Report problem to your SLR specialist'
  Exit 20

Return
