/* REXX LIBEXPND LAM Support  */
address "ISPEXEC";
true = '1';   /* true and false bits */
false = '0';
continuation = false;
"ISREDIT MACRO"; /* Header */
"ISREDIT (CURLINE,CURCOL) = CURSOR"; /* Access cursor position */
"ISREDIT (LINEDATA) = LINE" curline; /* Access that line */
linedata = strip(substr(linedata,1,72)); /* Truncate */
/* See if proc expansion required */
if substr(linedata,1,2)="//" & substr(linedata,3,1)^="*" & ,
     pos(" EXEC ",linedata)^=0 & pos("PGM=",linedata)=0 then do;
       if substr(linedata,3,1)=" " then ,  /* Get ddname */
         ddname = " ";
       else parse var linedata "//" ddname "EXEC" . ;
       if pos("PROC=",linedata)^=0 then , /* get procname */
         parse var linedata . "PROC=" member "," . ;
        else parse var linedata . "EXEC" member "," . ;
       member = strip(member); /* no blanks */
       dsname = "SYS1.PRODPROC.MASTER"; /* default proclib */
       libdsn = "'"dsname"("member")'"; /* Alloc */
       repline = "//* LIBEXPAND PROCLIB:"dsname";MEMBER:"member;
       "ISREDIT LINE" curline "= '"repline"'";
       repline = "// PEND";
       "ISREDIT LINE_AFTER" curline "= '"repline"'";
       "ISREDIT LINE_AFTER" curline+1 "= (LINEDATA)";
       "ISREDIT LIBFCRSR" libdsn; /* fetch at cursor */
       exit 0;
    end; /* end of EXEC processing */
/* Perform some DD cursory checks */
if substr(linedata,1,2)^="//" × substr(linedata,3,1)="*" × ,
    pos(" DD ",linedata)=0 × ,
    (pos("DSN=",linedata)=0 & pos("DSNAME=",linedata)=0) then do;
         zedsmsg = "DDSTMT?";
         zedlmsg = "Invalid JCL Data Definition statement";
         "SETMSG MSG(ISRZ001)";
         exit 4;
         end;
if substr(linedata,length(linedata),1)="," × , /* Continuation */
      (length(linedata)=72 & substr(linedata,72,1)^=" ") then do;
         continuation = true;
         linedata = strip(substr(linedata,1,71));
         nxtline = curline + 1;
        do while(continuation);
         "ISREDIT (LNXTDATA) = LINE" nxtline; /* Access that line */
         "ISREDIT DELETE" nxtline; /* Delete that line */
         lnxtdata = strip(substr(lnxtdata,1,72));
         continuation = false; /* assume */
         if substr(lnxtdata,length(lnxtdata),1)="," × ,
          (length(lnxtdata)=72 & substr(lnxtdata,72,1)^=" ") then do;
             continuation = true;
             end;
           lnxtdata = strip(substr(lnxtdata,1,71));
           linedata = linedata××strip(substr(lnxtdata,3));
         end; /* do while end */
       end; /* major cont group end */
if pos("DSN=",linedata)^=0 then ,
     parse var linedata . "DSN=" dsname "(" member ")";
  else ,
     parse var linedata . "DSNAME=" dsname "(" member ")";
if dsname = "" × member = "" then do;
         zedsmsg = "DDSTMT?";
         zedlmsg = "Invalid JCL Data Definition statement";
         "SETMSG MSG(ISRZ001)";
         exit 4;
         end;
libdsn = "'"dsname"("member")'"; /* Alloc */
if substr(linedata,3,1)=" " then ,  /* Get ddname */
     ddname = " ";
  else parse var linedata "//" ddname "DD" . ;
repline = "//* LIBEXPAND DSNAME:"dsname";MEMBER:"member;
"ISREDIT LINE" curline "= '"repline"'";
repline = "//"ddname "DD DATA,DCB=BLKSIZE=80";
"ISREDIT LINE_AFTER" curline "= '"repline"'";
"ISREDIT LINE_AFTER" curline+1 "= '/*'";
"ISREDIT SEEK C'DD DATA,DCB=BLKSIZE=80'"; /* down 1 */
"ISREDIT LIBFCRSR" libdsn; /* fetch at cursor */
exit 0;
