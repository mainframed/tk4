 PROC 0 PLANID()               /* PLAN NAME - MANDATORY 1-6 CHR */   +
        SUFFIX()               /* SUFFIX TO PLAN NAME   0-2 CHR */   +
        REPLACE()              /* REPLACE EXISTING UPP? YES/NO  */   +
        CONF1(PPF2CONF)        /* CONFIGURATION TABLE NUMBER 1  */   +
        CONF2()                /* CONFIGURATION TABLE NUMBER 2  */   +
        CONF3()                /* CONFIGURATION TABLE NUMBER 3  */   +
        CONF4()                /* CONFIGURATION TABLE NUMBER 4  */   +
        DATE()                 /* REQUIRED DATE - DEFAULT TODAY */   +
        SCHTBLB(SYSS.CTMO.V410.SCHEDULE)   +
        DAYTBLB(SYSS.CTMO.V410.SCHD)     +
        PRMTBLB(SYSS.CTMO.V410.PLANMSTR) +
        UPPTBLB(SYSS.CTMO.V410.PLAN)     +
        MSTJCLB(SYSS.CTMO.V410.JCLPROMP) +
        DAYJCLB(SYSS.CTMO.V410.JCLP)     +
        OLPREFA(SYSS.IOA)                   +
        OLVERA(V410)                     +
        DATEFMT(USA)                   +
        BATCH(NO)                            +
        DEBUG()
 /*******************************************************************/
 /**                                                               **/
 /**              C  T  M  F  E  T  C  H                           **/
 /**             ========================                          **/
 /**                                                               **/
 /**  PARAMETER PROMPTING FACILITY - TYPE2                         **/
 /**                                                               **/
 /**  THIS CLIST IS THE SECOND PHASE OF THE PARAMETERS PROMPTING   **/
 /**  FACILITY (FIRST PHASE IS THE MASTER PLAN DEFINITION, AND     **/
 /**  THE THIRD PHASE IS EXECUTING THE PLAN).                      **/
 /**  CTMFETCH SHOULD BE ACTIVATED ONCE FOR EVERY PLAN THAT        **/
 /**  SHOULD BE EXECUTED ON A CERTAIN DAY. IT COPIES THE           **/
 /**  SCHEDULING TABLE AND THE PROMPTING PLAN INTO THE DAILY       **/
 /**  LIBRARIES AND FROM THERE IT WILL BE EXECUTED.                **/
 /**                                                               **/
 /**  THIS CLIST PERFORMS THE FOLLOWING OPERATIONS:                **/
 /**  1. GET ALL THE REQUIRED PARAMETERS AND CHECK THEIR VALIDITY. **/
 /**  2. EXECUTES "CTMJOB" ON THE REQUIRED SCHEDULING TABLE        **/
 /**     TO FIND THE NAMES OF THE JOBS THAT WILL RUN ON THE        **/
 /**     REQUESTED DAY.                                            **/
 /**  3. COPY THE REQUIRED PLANID FROM THE "SCHEDULING TABLE LIB"  **/
 /**     TO THE "DAILY SCHEDULING LIB" TO CREATE / REPLACE THE     **/
 /**     DAILY SCHEDULING TABLE.                                   **/
 /**     ONLY JOBS THAT WERE MARKED BY CTMJOB AS JOBS THAT WILL    **/
 /**     RUN ON THE SPECIFIED DAY WILL BE INCLUDED IN THE          **/
 /**     DAILY SCHEDULING TABLE.                                   **/
 /**  4. THE "MASTER PROMPTING PLAN" FOR THAT PLANID IS COPIED     **/
 /**     FROM THE "MASTER PROMPTING LIBRARY" TO THE                **/
 /**     "USER PROMPTING LIBRARY" TO CREATE / REPLACE THE USER     **/
 /**     PROMPTING PLAN (UPP).                                     **/
 /**     ONLY PARAMETERS FOR THE JOBS THAT WILL RUN ON THAT DAY    **/
 /**     ARE COPIED INTO THE "UPP".                                **/
 /**  5. THE "INDEX DAILY TABLE" IN THE "USER PROMPTING LIBRARY"   **/
 /**     IS UPDATED TO CONTAIN AN ENTRY FOR THAT PLANID.           **/
 /**                                                               **/
 /*******************************************************************/
 IF &DEBUG = DEBUG      +
 THEN                   +
    CONTROL MSG LIST SYMLIST CONLIST
 ELSE                   +
    CONTROL NOMSG NOLIST NOSYMLIST NOCONLIST NOFLUSH
 ISPEXEC CONTROL ERRORS RETURN

 /* DISPLAY PANEL TO GET THE REQUIRED PARAMETERS OR UPDATE THEM  */
 IF &PLANID = &STR() +
 THEN +
    DO
       SET &TEMP = &PLANID
       ISPEXEC VGET (PLANID) PROFILE
       SET &RC = &LASTCC
       IF &RC ^= 0 +
       THEN +
          SET &PLANID = &TEMP
    END
 IF &REPLACE = &STR() +
 THEN +
    SET &REPLACE = NO
 SET &TEMP = &SCHTBLB
 ISPEXEC VGET (SCHTBLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &SCHTBLB = &TEMP
 SET &TEMP = &DAYTBLB
 ISPEXEC VGET (DAYTBLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &DAYTBLB = &TEMP
 SET &TEMP = &PRMTBLB
 ISPEXEC VGET (PRMTBLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &PRMTBLB = &TEMP
 SET &TEMP = &UPPTBLB
 ISPEXEC VGET (UPPTBLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &UPPTBLB = &TEMP
 SET &TEMP = &MSTJCLB
 ISPEXEC VGET (MSTJCLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &MSTJCLB = &TEMP
 SET &TEMP = &DAYJCLB
 ISPEXEC VGET (DAYJCLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &DAYJCLB = &TEMP
 IF &DATE = &STR() +
 THEN +
    DO
       ISPEXEC VGET (ZDAY,ZMONTH,ZYEAR)
       IF &DATEFMT = JPN +
       THEN +
          SET &DATE = &STR(&ZYEAR.&ZMONTH.&ZDAY)
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          SET &DATE = &STR(&ZMONTH.&ZDAY.&ZYEAR)
       ELSE +
          SET &DATE = &STR(&ZDAY.&ZMONTH.&ZYEAR)
    END

 IF &BATCH = &STR(NO) +
 THEN +
    DO
       REDISP: +
       IF &BATCH = &STR(YES) +
       THEN +
          GOTO END
       ISPEXEC DISPLAY PANEL(CTMPF20W)
       SET &RC = &LASTCC
       IF &RC ^= 0 -
       THEN -
          IF &RC ^= 8 -
          THEN -
             DO
                ISPEXEC SETMSG MSG(CTMF000Z)
                GOTO END
             END
          ELSE -
             GOTO END
    END

 ISPEXEC VPUT (PLANID SCHTBLB DAYTBLB PRMTBLB UPPTBLB +
               MSTJCLB DAYJCLB) PROFILE

 /* CHECK VALIDITY OF DATE: MUST BE 0(NULL) OR 6 CHARACTERS IN THE */
 /* FORMAT "DDMMYY" OR "MMDDYY" ACCORDING TO THE DATE TYPE         */
 CHKDT: +
 IF &DATE = &STR() +
 THEN +
    DO
       /* THE DEFAULT DATE IS TODAY */
       ISPEXEC VGET (ZDAY,ZMONTH,ZYEAR)
       IF &DATEFMT = JPN +
       THEN +
          SET &DATE = &STR(&ZYEAR.&ZMONTH.&ZDAY)
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          SET &DATE = &STR(&ZMONTH.&ZDAY.&ZYEAR)
       ELSE +
          SET &DATE = &STR(&ZDAY.&ZMONTH.&ZYEAR)
    END
 ELSE +
    DO
       IF &DATEFMT = JPN +
       THEN +
          DO
             SET &ZYEAR = &SUBSTR(1:2,&DATE)
             SET &ZDAY = &SUBSTR(5:6,&DATE)
             SET &ZMONTH = &SUBSTR(3:4,&DATE)
          END
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          DO
             SET &ZYEAR = &SUBSTR(5:6,&DATE)
             SET &ZDAY = &SUBSTR(3:4,&DATE)
             SET &ZMONTH = &SUBSTR(1:2,&DATE)
          END
       ELSE +
          DO
             SET &ZYEAR = &SUBSTR(5:6,&DATE)
             SET &ZDAY = &SUBSTR(1:2,&DATE)
             SET &ZMONTH = &SUBSTR(3:4,&DATE)
          END
       IF &ZDAY < 1 OR &ZDAY > 31 +
       THEN +
          DO
              ISPEXEC SETMSG MSG(CTMF000E)
              GOTO REDISP
          END
       IF &ZMONTH < 1 OR &ZMONTH > 12 +
       THEN +
          DO
              ISPEXEC SETMSG MSG(CTMF000E)
              GOTO REDISP
          END
    END

 SET ORDDATE = &STR(&ZYEAR.&ZMONTH.&ZDAY)
 SET DSNDATE = &STR(&ZMONTH.&ZDAY)
 SET &NEWPLNID = &PLANID.&SUFFIX

 /* CHECK THE EXISTENCE OF THE "SCHEDULING TABLE LIBRARY" AND      */
 /* THE "DAILY SCHEDULING TABLE LIBRARY".                          */
 CHKSCHTB: +
 SET &DSNRC = &SYSDSN('&SCHTBLB(&PLANID)')
 IF &DSNRC ^= OK +
 THEN +
    IF &DSNRC = &STR(MEMBER NOT FOUND) +
    THEN +
       DO
          SET &MSGPLAN = &PLANID
          ISPEXEC SETMSG MSG(CTMF000G)
          GOTO REDISP
       END
    ELSE +
       DO
          SET &ERRDSN = &SCHTBLB
          ISPEXEC SETMSG MSG(CTMF000F)
          GOTO REDISP
       END

 CHKDAYTB: +
 SET &DAYLIB = &DAYTBLB.&DSNDATE
 SET &DSNRC = &SYSDSN('&DAYLIB')
 IF &DSNRC ^= OK  +
 THEN +
    DO
       /* WRITE TRY TO ALLOCATE &DAYLIB AS A NEW DAILY LIBRARY.
       SET &MSGDSN = &DAYLIB
       ISPEXEC CONTROL DISPLAY LOCK
       ISPEXEC DISPLAY MSG(CTMF002I)
       %CTMCALOC MASTLIB(&SCHTBLB) DAYLIB(&DAYLIB)
       SET &RC = &LASTCC
       IF &RC = 0 +
       THEN +
          GOTO CHKPRMTB

       SET &ERRDSN = &DAYLIB
       ISPEXEC SETMSG MSG(CTMF000F)
       GOTO REDISP
    END

 /* CHECK THE EXISTENCE OF THE "MASTER PROMPTING PLAN LIBRARY" AND  */
 /* THE "USER PROMPTING PLANS LIBRARY".                             */
 CHKPRMTB: +
 SET &MSTTBNM = &STR(&PLANID.MS)
 /* SET &MSTTBNM = &STR(&PLANID)
 SET &DSNRC = &SYSDSN('&PRMTBLB(&MSTTBNM)')
 IF &DSNRC ^= OK +
 THEN +
    IF &DSNRC = &STR(MEMBER NOT FOUND) +
    THEN +
       DO
          SET &ERRDSN = &PRMTBLB
          ISPEXEC SETMSG MSG(CTMF002E)
          GOTO REDISP
       END
    ELSE +
       DO
          SET &ERRDSN = &PRMTBLB
          ISPEXEC SETMSG MSG(CTMF000F)
          GOTO REDISP
       END

 ISPEXEC VPUT (PLANID) PROFILE
 CHKUPPTB: +
 SET &UPPLIB = &UPPTBLB.&DSNDATE
 SET &DSNRC = &SYSDSN('&UPPLIB')
 IF &DSNRC ^= OK  +
 THEN +
    DO
       /* WRITE TRY TO ALLOCATE &UPPLIB AS A NEW DAILY LIBRARY.
       SET &MSGDSN = &UPPLIB
       ISPEXEC CONTROL DISPLAY LOCK
       ISPEXEC DISPLAY MSG(CTMF002I)
       %CTMCALOC MASTLIB(&PRMTBLB) DAYLIB(&UPPLIB)
       SET &RC = &LASTCC
       IF &RC = 0 +
       THEN +
          GOTO CHKJCLLB

       SET &ERRDSN = &UPPLIB
       ISPEXEC SETMSG MSG(CTMF000F)
       GOTO REDISP
    END

 CHKJCLLB: +
 SET &JCLLIB = &DAYJCLB.&DSNDATE
 SET &DSNRC = &SYSDSN('&JCLLIB')
 IF &DSNRC ^= OK  +
 THEN +
    DO
       /* WRITE TRY TO ALLOCATE &JCLLIB AS A NEW DAILY LIBRARY.
       SET &MSGDSN = &JCLLIB
       ISPEXEC CONTROL DISPLAY LOCK
       ISPEXEC DISPLAY MSG(CTMF002I)
       %CTMCALOC MASTLIB(&MSTJCLB) DAYLIB(&JCLLIB) JCLLIB(YES)
       SET &RC = &LASTCC
       IF &RC = 0 +
       THEN +
          GOTO AFTJCLLB

       SET &ERRDSN = &JCLLIB
       ISPEXEC SETMSG MSG(CTMF000F)
       GOTO REDISP
    END

 /* CHECK THE REPLACE PARAMETER (YES/NO) AND ACCORDING TO IT CHECK  */
 /* IF THE SCEDULING TABLE OR THE UPP ALREADY EXISTS IN THE DAILY   */
 /* LIBRARIES.                                                      */
 AFTJCLLB: +
 IF &REPLACE = YES +
 THEN +
    GOTO DONTCHK
 SET &DSNRC = &SYSDSN('&DAYLIB(&NEWPLNID)')
 IF &DSNRC = OK  +
 THEN +
    DO
       ISPEXEC SETMSG MSG(CTMF002M)
       GOTO REDISP
    /* WRITE SCHEDULING TABLE &NEWPLNID ALREADY EXISTS IN THE DAILY
    /* WRITE LIBRARY &DAYLIB BUT REPLACE(YES) WAS NOT SPECIFIED
    /* WRITE ENTER YES TO REPLACE OR END TO FINISH
    END
 SET &DSNRC = &SYSDSN('&UPPLIB(&NEWPLNID)')
 IF &DSNRC = OK  +
 THEN +
    DO
       ISPEXEC SETMSG MSG(CTMF002M)
       GOTO REDISP
    /* WRITE USER PROMPTING PLAN &NEWPLNID ALREADY EXISTS IN THE DAILY
    /* WRITE LIBRARY &UPPLIB BUT REPLACE(YES) WAS NOT SPECIFIED
    /* WRITE ENTER YES TO REPLACE OR END TO FINISH
    END

 DONTCHK: +
 ISPEXEC CONTROL DISPLAY LOCK
 ISPEXEC DISPLAY MSG(CTMF002J)
 /* WRITE *** CREATE DAILY USER PROMPTING PLAN          ***

 SET &MSTDDN = MSTDDN
 SET &UPPDDN = UPPDDN
 ISPEXEC SELECT PGM(CTMTIOT) PARM(&MSTDDN)
 ISPEXEC VGET (TIOTDDN,TIOTDSN,TIOTNUM) SHARED
 IF &TIOTDSN ^= &PRMTBLB +
 THEN +
    DO
       SET &TIOTNUM = &TIOTNUM + 101
       SET &TIOTNUM = &SUBSTR(2:3,&TIOTNUM)
       SET &MSTDDN = &STR(&MSTDDN.&TIOTNUM)
       ALLOC FILE(&MSTDDN) DA('&PRMTBLB') SHR
       SET &RC = &LASTCC
       IF &RC ^= 0 +
       THEN +
          DO
             SET &ERRDSN = &PRMTBLB
             ISPEXEC SETMSG MSG(CTMF000F)
             GOTO REDISP
          END
    END
 ELSE +
    SET &MSTDDN = &TIOTDDN
 ISPEXEC SELECT PGM(CTMTIOT) PARM(&UPPDDN)
 ISPEXEC VGET (TIOTDDN,TIOTDSN,TIOTNUM) SHARED
 IF &TIOTDSN ^= &UPPLIB +
 THEN +
    DO
       SET &TIOTNUM = &TIOTNUM + 101
       SET &TIOTNUM = &SUBSTR(2:3,&TIOTNUM)
       SET &UPPDDN = &STR(&UPPDDN.&TIOTNUM)
       ALLOC FILE(&UPPDDN) DA('&UPPLIB') SHR
       SET &RC = &LASTCC
       IF &RC ^= 0 +
       THEN +
          DO
             SET &ERRDSN = &UPPLIB
             ISPEXEC SETMSG MSG(CTMF000F)
             GOTO REDISP
          END
    END
 ELSE +
    SET &UPPDDN = &TIOTDDN
 ISPEXEC TBCREATE &NEWPLNID +
         NAMES(PARMNAME PROCCUR# PRMJOBN PROMPIND PRDEFIND PRDEFVAL +
         PRMDEFST PRVALIND PRMVAL PRMTYPE PROMPMSG ) +
         WRITE REPLACE LIBRARY(&UPPDDN)
 SET &RC=&LASTCC
 IF &RC > 4 +
 THEN +
    DO
      IF &RC = 12 +
      THEN +
         ISPEXEC SETMSG MSG(CTMF005E)
      ELSE +
         ISPEXEC SETMSG MSG(CTMF000A)
      FREE FILE(&MSTDDN)
      FREE FILE(&UPPDDN)
      GOTO REDISP
    END

 /* WRITE *** COPY PARAMETERS FROM MASTER PLAN TO UPP   ***
 ISPEXEC CONTROL DISPLAY LOCK
 ISPEXEC DISPLAY MSG(CTMF002K)
 /* EACH USER PROMPTING PLAN CONTAINS A FEW PARAMETERS WHICH ARE   */
 /* DIFFERENT FOR EACH PLAN.                                       */
 /* PLANID   - CONTAINS THE PLAN NAME.                             */
 /* CONF1-4  - ARE CONFIGURATION TABLES (GENERAL TABLES WHICH MAY  */
 /*            CONTAIN INFORMATION LIKE SPECIAL DATES, NAMES ETC). */
 /*            THOSE TABLES CAN BE INCLUDED IN THE JCL AS %%MEMSYM */
 /*            STATEMENTS WITH %%LIBSYM AS %%CONF1-4.              */

 ISPEXEC TBVCLEAR &NEWPLNID
 SET &RC=&LASTCC
 IF &RC ^= 0 -
 THEN -
    DO
       ISPEXEC SETMSG MSG(CTMF000A)
       ISPEXEC TBEND &NEWPLNID
       GOTO REDISP
    END
 SET PRMJOBN = &STR(********)
 SET PARMNAME = PLANID
 SET PROMPIND = N
 SET PRVALIND = Y
 SET PRMVAL = &NEWPLNID
 ISPEXEC TBADD &NEWPLNID
 IF &RC ^= 0 -
 THEN -
    DO
       ISPEXEC SETMSG MSG(CTMF000A)
       ISPEXEC TBEND &NEWPLNID
       GOTO REDISP
    END
 SET I = 1
 DO WHILE &I < 5
    SET V1 = &&CONF&I
    SET V2 = &SYSNSUB(2,&V1)
    SET PARMNAME = CONF&I
    SET PRMVAL = &V2
    ISPEXEC TBADD &NEWPLNID
    IF &RC ^= 0 -
    THEN -
       DO
          ISPEXEC SETMSG MSG(CTMF000A)
          ISPEXEC TBEND &NEWPLNID
          GOTO REDISP
       END
    SET I = &I + 1
 END
 ISPEXEC TBCLOSE &NEWPLNID LIBRARY(&UPPDDN)

 /* CALL CTMTCOP TO COPY PARAMETERS FROM THE MASTER PROMPTING PLAN   */
 /* TO THE USER PROMPTING PLAN.                                      */
 /* ONLY PARAMETERS THE BELONG TO JOBS THAT WILL RUN TODAY, WILL BE  */
 /* COPIED TO THE "UPP".                                             */
 /* IT CALLS CTMJOB TO FIND OUT THE JOBS THAT WILL RUN TODAY.        */
 /* A LIST OF THE JOBS IS WRITTEN TO A FILE ALLOCATED TO             */
 /* OUTFETCH DD STATEMENT.                                           */

 /* WRITE *** COPY SCHEDULING TABLE TO THE DAILY LIB.   ***
 ISPEXEC CONTROL DISPLAY LOCK
 ISPEXEC DISPLAY MSG(CTMF002L)
 FREE FILE(OUTFETCH)
ALLOC DD(OUTFETCH) NEW TRACKS SP(1 1) RECFM(F B) LRECL(80) BLKSIZE(800)
 LSTDS: LISTDSI DACAL FILE PREALLOC
 SET  &OLDDACAL = &SYSDSNAME
 FREE  DD(DACAL)
 ALLOC DD(DACAL) DA('&OLPREFA..&OLVERA..CAL') SH
 ISPEXEC VPUT ( MSTDDN UPPDDN MSTTBNM PLANID NEWPLNID DAYLIB  +
       REPLACE SCHTBLB ORDDATE JCLLIB ) SHARED
 ISPEXEC SELECT PGM(CTMTCOP)
 IF '&OLDDACAL' = '' THEN GOTO NODEALL
 IF '&OLDDACAL' = '&OLPREFA..&OLVERA..CAL' THEN GOTO NODEALL
 FREE DD(DACAL)
 ALLOC DD(DACAL) DA('&OLDDACAL')
 NODEALL:+
 ISPEXEC VGET (COPTBRC,ERRMSG,ERJCLM) SHARED
 IF &COPTBRC ^= 0 +
 THEN +
    DO
       ISPEXEC SETMSG MSG(&ERRMSG)
       GOTO REDISP
    END
 FREE FILE(OUTFETCH)

 /* AFTER THE UPP WAS CREATED, ADD A ROW TO THE INDEX TABLE      */
 /* THAT KEEPS INFORMATION ABOUT ALL THE UPPS.                   */
 SET &DSNRC = &SYSDSN('&UPPLIB(INDXTBL)')
 IF &DSNRC ^= OK +
 THEN +
    IF &DSNRC = &STR(MEMBER NOT FOUND) +
    THEN +
       DO
           /* CREATE A NEW INDEX TABLE   */
          ISPEXEC TBCREATE INDXTBL KEYS(IXTBNAME) +
                  NAMES(IXTBTIME, IXTBEXEC ) +
                  WRITE LIBRARY(&UPPDDN)
          SET &RC=&LASTCC
          IF &RC ^= 0 -
          THEN -
             DO
                ISPEXEC SETMSG MSG(CTMF000A)
                GOTO REDISP
             END
       END
    ELSE +
       DO
          ISPEXEC SETMSG MSG(CTMF000A)
          GOTO REDISP
       END
 ELSE +
    DO
       ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) WRITE
       SET &RC=&LASTCC
       IF &RC ^= 0 -
       THEN -
          IF &RC = 12 +
          THEN +
             DO
                ISPEXEC SETMSG MSG(CTMF001B)
                GOTO REDISP
             END
          ELSE +
             DO
                ISPEXEC SETMSG MSG(CTMF000A)
                GOTO REDISP
             END
    END
 ISPEXEC TBVCLEAR INDXTBL
 SET IXTBNAME = &NEWPLNID
 ISPEXEC TBADD INDXTBL
 SET &RC=&LASTCC
 IF &RC > 8 -
 THEN -
    DO
       ISPEXEC SETMSG MSG(CTMF000A)
       ISPEXEC TBEND INDXTBL
       GOTO REDISP
    END

 ISPEXEC SETMSG MSG(CTMF002A)
 ISPEXEC TBCLOSE INDXTBL LIBRARY(&UPPDDN)
 SET &RC = &LASTCC

 FREE FILE(&MSTDDN)
 FREE FILE(&UPPDDN)
 ISPEXEC VPUT (PLANID SCHTBLB DAYTBLB PRMTBLB UPPTBLB +
               MSTJCLB DAYJCLB) PROFILE
 ENDFETCH: +
 IF &SCHID ^= &STR() +
 THEN +
    ISPEXEC LMFREE DATAID(&SCHID)
 IF &DAYID ^= &STR() +
 THEN +
    ISPEXEC LMFREE DATAID(&DAYID)
 GOTO REDISP
 END: +
 EXIT
