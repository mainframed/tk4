PROC 0 DEBUG()

ISPEXEC CONTROL ERRORS CANCEL
CONTROL MAIN NOLIST NOCONLIST NOSYMLIST NOMSG
IF &DEBUG=DEBUG THEN CONTROL MAIN LIST CONLIST SYMLIST MSG

/********************************************************/
/**                                                    **/
/**    CONTROL-M QUICK SCHEDULE DEFINITION             **/
/**                                                    **/
/**    CLIST CTMCK20  - GET JOB DATA AND VALIDATE      **/
/**                                                    **/
/********************************************************/

SET &NUL = &STR()    /* ENTERING CLIST 20 */
SET &MINIMUM = 21
SET &SCRSIZ = 21
SET &SCRSZ3 = &SCRSIZ / 3
SET &SCRSZ23 = &SCRSIZ - &SCRSZ3
SET &USERBL = &SCRSZ23
SET &ENDED = 0
SET &RESP = &NUL
SET &VALID = Y
SET &REQUIRE = N
SET &OUTMSG = &NUL
SET &TBLSIZ = 0
SET &HIUSED = 0
SET &LBR=1
SET &DISROW=1

SET &ZTDMSG = CTMK002A /* NO "ROW NN OF NN" */

ISPEXEC VGET (LIB SCHEDTB)


DO WHILE  (&RESP^=XXX) /* A "DO FOREVER" */

 /**************************/
 /* GIVE USER SOME ROOM    */
 /**************************/
  IF   &VALID = Y   THEN +
  DO
     SET &ENDHIT=N
     SET &CUR = &LBR
     SET &CFIELD = JNAM
     ISPEXEC TBBOTTOM CTMPKT00
     ISPEXEC TBVCLEAR CTMPKT00
     SET &NUMCLR = &TBLSIZ - &HIUSED
     SET &NEEDED  = &USERBL  -&NUMCLR
     IF (&TBLSIZ + &NEEDED) < &MINIMUM THEN +
        SET &NEEDED = &MINIMUM - &TBLSIZ
     SET &NDX = 1
     DO WHILE (&NDX <= &NEEDED)
        SET &JNUM = &NUMCLR + &HIUSED + &NDX
        ISPEXEC TBADD    CTMPKT00
        SET &NDX = &NDX + 1
        SET &TBLSIZ = &TBLSIZ + 1
     END
  END


 /**************************/
 /* DISPLAY SCREEN         */
 /**************************/

  IF (&OUTMSG ^= &NUL) THEN ISPEXEC SETMSG MSG(&OUTMSG)
  ISPEXEC VPUT (OUTMSG) SHARED


  ISPEXEC VGET (ZUSER ZTIME)

  IF (&CUR-&DISROW) < &SCRSZ3 THEN SET &DISROW = &CUR - &SCRSZ3
  IF (&DISROW+&SCRSIZ-&CUR) < &SCRSZ3 THEN SET &DISROW = &CUR-&SCRSZ23
  IF (&TBLSIZ-&DISROW) < &SCRSIZ THEN SET &DISROW = &TBLSIZ-&SCRSIZ
  IF &DISROW < 1 THEN SET &DISROW = 1


  ISPEXEC TBTOP   CTMPKT00
  ISPEXEC TBSKIP CTMPKT00 NUMBER(&DISROW)
  ISPEXEC TBDISPL CTMPKT00 PANEL(CTMPK02W) AUTOSEL(NO)  +
                 CURSOR(&CFIELD)  POSITION(MODROW) CSRROW(&CUR)
  SET &NUMCHGD = &ZTDSELS
  IF (&ZCMD=UP) THEN SET &DISROW = &DISROW + &ZSCROLLN
  IF (&ZCMD=DOWN) THEN SET &DISROW = &DISROW - &ZSCROLLN

  ISPEXEC VGET (ZVERB)
  SET &RESP = &ZVERB
  IF Z&RESP = Z THEN  SET &RESP = ENTER
  SET &ENDHIT=N

  IF &RESP=RETURN THEN +
    DO
       SET &ENDED = 1
       ISPEXEC VPUT (ENDED RESP)
       ISPEXEC TBCLOSE  CTMPKT00
       EXIT QUIT
    END /* OF USER KILLED IT */

  IF &RESP=END THEN SET &ENDHIT = Y


 /**************************/
 /* SEE IF JUST ENTER KEY  */
 /**************************/
  IF (&NUMCHGD=0) THEN SET &PROCESS=N
    ELSE SET &PROCESS = Y

 /**************************/
 /* PICK UP CHANGED LINES  */
 /**************************/
  SET &MAXROW = 0

  DO WHILE &NUMCHGD ^= 0

    IF &NRSTR(Q&OPER) = Q THEN SET &POPER = N
       ELSE  SET &POPER = &NRSTR(&OPER)
    SET &WASCHG = 1
    SET &DEPVAL = 1
    ISPEXEC TBPUT CTMPKT00
    SET &NUMCHGD = &NUMCHGD - 1
    SET &MAXROW = &MODROW
    IF &NUMCHGD ^= 0 THEN +
      DO
        ISPEXEC TBDISPL CTMPKT00 POSITION(MODROW)
        ISPEXEC VGET (ZVERB)
        SET &RESP = &ZVERB
        IF Z&RESP = Z THEN  SET &RESP = ENTER
        IF &RESP=RETURN THEN +
          DO
            SET &ENDED = 1
            ISPEXEC VPUT (ENDED RESP)
            ISPEXEC TBCLOSE  CTMPKT00
            EXIT QUIT
          END /* OF USER KILLED IT */
        IF &RESP=END THEN SET &ENDHIT=Y
      END

  END /* OF PICKING UP CHANGED LINES */

  IF (&OUTMSG^=&NUL) THEN SET &REQUIRE=Y

  IF (&REQUIRE = Y) OR (&ENDHIT=Y) THEN +
    DO
      SET &PROCESS=Y
      IF &HIUSED > &MAXROW THEN SET &MAXROW = &HIUSED
    END

  SET &REQUIRE=N
  SET &OUTMSG=&NUL


 /**************************/
 /* FIRST LEVEL VALIDATION */
 /*                        */
 /* SEE THAT BASIC SYNTAX  */
 /* IS CORRECT             */
 /*                        */
 /* PARSE FROM END SO THAT */
 /* FIRST ERROR WILL FLAG  */
 /**************************/

  IF (&PROCESS=Y) THEN +
    DO
      SET &VALID = Y
      SET &MOVEROW = 0
      SET &MOVETGT = 0
      SET &TYPCOPY=N
      SET &CFIELD = JNAM
      SET &OFFSET=0
      SET &NUMCMDS = 0
      SET &MODROW = &MAXROW
      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&MAXROW)
    END

  DO WHILE (&MODROW > 0) AND (&PROCESS=Y)
     SET &OPVAL = 1
     SET &POPER = &NRSTR(&OPER)
     IF (Z&NRSTR(&POPER)= Z) THEN SET &POPER = N
     IF ((&NRSTR(&POPER)<A) OR (&NRSTR(&POPER)>Z) ) THEN SET &OPVAL=0
     IF &OPVAL=1 THEN +
     IF (&POPER^=A) AND (&POPER^=B) AND (&POPER^=C) AND +
        (&POPER^=D) AND (&POPER^=I) AND (&POPER^=M) AND +
        (&POPER^=R) AND (&POPER^=N) AND (&POPER^=P) THEN SET &OPVAL=0
     IF &OPVAL=0 THEN +
          DO
            SET &CUR = &MODROW
            SET &CFIELD = OPER
            SET &VALID = N
            SET &OUTMSG=CTMK002B
            SET &POPER = N
          END /* OPER VALIDATION */

     IF (&MODROW > &HIUSED) THEN  SET &HIUSED = &MODROW

     IF (&POPER^=D) THEN +
       DO

         IF (&POPER=C) OR (&POPER=M) THEN +
             IF &MOVEROW = 0 THEN +
               DO
                 SET &MOVEROW = &MODROW
                 SET &TYPCOPY = &POPER
               END
               ELSE +
               DO
                 SET &CUR = &MODROW
                 SET &CFIELD = OPER
                 SET &VALID = N
                 SET &OUTMSG=CTMK002D
               END /* C/M VALIDATION */

         IF (&POPER=B) OR (&POPER=A) THEN +
             IF &MOVETGT = 0 THEN +
               DO
                 SET &MOVETGT = &MODROW
                 IF (&POPER=B) THEN SET &DIR = BEFORE
                   ELSE SET &DIR = AFTER
               END
               ELSE +
               DO
                 SET &CUR = &MODROW
                 SET &CFIELD = OPER
                 SET &VALID = N
                 SET &OUTMSG=CTMK002E
               END /* A/B VALIDATION */

         IF (Z&NRSTR(&JNAM) = Z) THEN +
            IF (Z&NRSTR(&DESC) ^= Z) OR  (Z&NRSTR(&DEPS) ^= Z) THEN +
               DO
                 SET &CUR = &MODROW
                 SET &CFIELD = JNAM
                 SET &VALID = N
                 SET &OUTMSG=CTMK002H
               END /* JOBNAME WAS BLANK */



         /**************************/
         /*                        */
         /* VALIDATE JOBNAME FIELD */
         /*                        */
         /* ANYTHING IS VALID      */
         /*  EXCEPT EMBEDDED BLANKS*/
         /*                        */
         /**************************/
         SET &NDX = 1
         SET &DEPLEN = &LENGTH(&NRSTR(&JNAM))
         DO WHILE ((&VALID=Y) AND (&NDX <= &DEPLEN)
           SET &C = &SUBSTR(&NDX,&NRSTR(&JNAM))
           IF (&NRSTR(&C)=&STR( )) THEN  +
             DO
               SET &CUR = &MODROW
               SET &CFIELD = JNAM
               SET &VALID = N
               SET &OUTMSG=CTMK001E /* ONLY TRAILING BLANKS */
             END
           SET &NDX = &NDX + 1
         END

         /**************************/
         /*                        */
         /* VALIDATE DEPENDENCY    */
         /* FIELD - SYNTAX         */
         /*                        */
         /* ONLY DO THIS IF THE    */
         /*  FIELD WAS CHANGED     */
         /*                        */
         /**************************/


         SET &NUMDEPS = 0
         SET &DEPNO = 1
         SET &DEPLEN = &LENGTH(&NRSTR(&DEPS))
         SET &FSTART = 1
         IF &WASCHG = 1 THEN +
          DO WHILE ((&FSTART <= &DEPLEN) AND (&DEPVAL=1))
           SET &NDX = &FSTART
           SET &C = &SUBSTR(&NDX,&NRSTR(&DEPS))
           IF (&NRSTR(&C)=&STR(,)) THEN SET &DEPVAL = 0
           IF (&NRSTR(&C)=&STR( )) THEN SET &DEPVAL = 0

           IF (&NRSTR(&C)=&STR(-)) THEN +
             DO
             /**************************/
             /* MINUS SIGN             */
             /**************************/
                SET &NDX = &NDX + 1
                IF &NDX <= &DEPLEN THEN  +
                  DO
                    IF &SUBSTR(&NDX,&NRSTR(&DEPS)) ^=&STR(,) THEN +
                      SET &DEPVAL=0
                  END /* CHECK CHARACTER AFTER MINUS SIGN */
                IF &DEPVAL=1 THEN +
                  DO
                    SET &DJ&DEPNO =&STR(-)
                    SET &T&DEPNO = M
                    SET &DEPNO = &DEPNO + 1
                    SET &FSTART = &FSTART + 2
                  END /* OF VALID MINUS SIGN */
             END /*  MINUS SIGN */
             ELSE +
           IF (&NRSTR(&C)=&STR(*)) THEN +
             DO
             /**************************/
             /* ASTERISK               */
             /**************************/
               DO WHILE (&DEPVAL = 1) AND (&NDX <= &DEPLEN)
                 SET &C = &SUBSTR(&NDX,&NRSTR(&DEPS))
                 IF (&NRSTR(&C)=&NRSTR( ) THEN SET &DEPVAL = 0
                 SET &NDX = &NDX + 1
               END /*CHAR LOOP ON ASTERISK */
               IF (&NDX=&FSTART+1) THEN SET &DEPVAL=0
               IF (&DEPVAL=1) THEN
                 DO
                  SET &DJ&DEPNO = &SUBSTR(&FSTART:&DEPLEN,&NRSTR(&DEPS))
                  SET &XCOND = &SUBSTR(&FSTART:&DEPLEN,&NRSTR(&DEPS))
                  SET &T&DEPNO = C
                  SET &DEPNO = &DEPNO + 1
                 END /* MOVED THE CONDITION */
               SET &FSTART=&NDX
             END /* PROCESSING ASTERISK */
           ELSE +
           IF (&DEPVAL=1) THEN +
             DO
               SET &FEND = &FSTART
               SET &NDX = &FSTART+1
               DO WHILE (&FEND = &FSTART)
                 IF &NDX > &DEPLEN THEN SET &FEND = &NDX
                 ELSE +
                   DO
                     SET &C = &SUBSTR(&NDX,&NRSTR(&DEPS))
                     IF (&NRSTR(&C)=&STR(,)) THEN SET &FEND=&NDX
                     SET &NDX = &NDX + 1
                   END
               END /* FOUND A COMMA IF THERE IS ONE */
               IF (&DATATYPE(&SUBSTR(&FSTART:&FEND-1,&NRSTR(&DEPS))) +
                     = NUM) THEN SET &TY=N
               ELSE SET &TY=A
               IF (&TY=A) THEN +
                 IF &FEND-1-&FSTART > 8 THEN SET &DEPVAL=0
                 ELSE +
                 DO
                   SET &NDX = &FSTART
                   DO WHILE (&NDX < &FEND) AND (&DEPVAL=1)
                     SET &C=&SUBSTR(&NDX,&NRSTR(&DEPS))
                     IF (&NRSTR(&C) = &STR( )) THEN SET &DEPVAL=0
                     SET &NDX = &NDX + 1
                   END /* OF ALF COLUMN CHECK */
                 END /* CHECK AN ALPHA FIELD */
               IF &DEPVAL = 1 THEN
                 DO
                   SET &T&DEPNO = &TY
                   SET &DJ&DEPNO = &SUBSTR( +
                        &FSTART:&FEND-1,&NRSTR(&DEPS))
                   SET &DEPNO = &DEPNO + 1
                 END
               SET &FSTART = &FEND + 1
             END /* LETTER OR NUMBER */

         END /* OF CHARACTER SCAN OF DEPS FIELD */

         IF &POPER = N THEN SET &POPER = &NUL

         IF &WASCHG=1 THEN +
           IF &DEPVAL = 0 THEN +
             DO
                SET &CUR = &MODROW
                SET &CFIELD = DEPS
                SET &VALID = N
                SET &OUTMSG=CTMK002K
                ISPEXEC TBPUT CTMPKT00
             END /* INVALID DEPENDENCY FIELD */
           ELSE +
             DO
               SET &WASCHG = 0
               SET &NUMDEPS = &DEPNO-1
               ISPEXEC TBPUT CTMPKT00
             END

       END  /* ROW IS NOT MARKED DELETE */
     SET &MODROW = &MODROW - 1
     ISPEXEC TBSKIP CTMPKT00 NUMBER(-1)
  END /* OF FIRST LEVEL VALIDATION LOOP */

  /**************************/
  /* SECOND LEVEL VALIDATION*/
  /*                        */
  /* BASIC SYNTAX IS OK     */
  /*                        */
  /* CHECK INTER-LINE       */
  /*  REFERENCES            */
  /**************************/

  IF (&PROCESS=Y) AND (&VALID=Y) THEN +
    DO
      IF (&MOVEROW ^= 0) AND (&MOVETGT = 0)  THEN +
        DO
          SET &CUR = &MOVEROW
          SET &CFIELD = OPER
          SET &VALID = N
          SET &OUTMSG=CTMK002F
        END

      IF (&MOVEROW = 0) AND (&MOVETGT ^= 0)  THEN +
        DO
          SET &CUR = &MOVETGT
          SET &CFIELD = OPER
          SET &VALID = N
          SET &OUTMSG=CTMK002G
        END

      IF &MOVETGT > &HIUSED THEN SET &HIUSED = &MOVETGT

      IF (&DIR=BEFORE) THEN SET &MOVETGT = &MOVETGT-1
        /* MOVETGT NOW POINTS TO ROW AFTER WHICH WILL BE MOVED */

      SET &CURRENT = 1
      SET &LBR=0

    END

  IF (&VALID=Y) AND (&PROCESS=Y) THEN +
    DO WHILE &CURRENT <= &HIUSED

      ISPEXEC TBTOP  CTMPKT00
      ISPEXEC TBSKIP CTMPKT00  NUMBER(&CURRENT)

      SET &NEW&JNUM = &JNUM + &OFFSET
      IF (&POPER=&NUL) THEN SET &POPER=N
      IF (&POPER^=N) THEN SET &NUMCMDS = &NUMCMDS+1
      IF (&POPER=B) THEN +
        DO
          SET &REALTGT = &&NEW&JNUM
          SET &REALTGT = &REALTGT
        END
      IF (&POPER=A) THEN +
        DO
          SET &REALTGT = &&NEW&JNUM
          SET &REALTGT = &REALTGT + 1
        END
      IF (&POPER=B) OR (&POPER=P) THEN +
        DO
          SET &NN = &&NEW&JNUM
          SET &NN = &NN + 1
          SET &NEW&JNUM = &NN
        END
      IF (&POPER=A) OR (&POPER=B) OR (&POPER=I) OR +
         (&POPER=P) OR (&POPER=R) THEN SET &OFFSET = &OFFSET + 1
      IF (&POPER=D) OR (&POPER=M) THEN SET &OFFSET = &OFFSET - 1

      IF (Z&NRSTR(&JNAM) = Z) AND (Z&POPER^=ZD) AND  (&LBR = 0) THEN +
        SET &LBR=&CURRENT
      IF (Z&NRSTR(&JNAM) ^= Z) AND (Z&POPER^=ZD) THEN +
      DO

        /**************************/
        /* DUPLICATE JOB NAMES    */
        /**************************/
        ISPEXEC TBSCAN CTMPKT00 ARGLIST(JNAM) NEXT  CONDLIST(EQ)
        SET &RC=&LASTCC
        IF (&RC=0) AND (Z&POPER ^= ZD) THEN +
          DO
            SET &VALID=N
            SET &CFIELD=JNAM
            SET &CUR=&CURRENT
            SET &OUTMSG=CTMK002L
          END /* WAS A DUPLICATE JOB NAME */

        /**************************/
        /* CHECK THAT ALL JOB     */
        /* DEPENDENCIES EXIST     */
        /**************************/
        SET &NDX = &NUMDEPS
        DO WHILE ((&NDX > 0) AND (&VALID=Y))
          SET &TY = &&T&NDX
          SET &TY = &STR(&TY)

          IF (&TY = M) THEN SET &FINDROW = &CURRENT - 1
          IF (&TY = N) THEN +
            DO
              SET &FINDROW = &SYSNSUB(2,&&DJ&NDX)
            END
          IF (&TY = A) THEN +
            DO

              SET &DEPNDX = &SYSNSUB(2,&&DJ&NDX)
              SET &JNAM = &NRSTR(&DEPNDX)
              ISPEXEC TBTOP CTMPKT00
              ISPEXEC TBSCAN CTMPKT00 +
                    ARGLIST(JNAM) NEXT CONDLIST(EQ) POSITION(FINDROW)
            END /* AN ALPHABETIC */

          IF (&TY^=C) THEN +
              IF (&FINDROW = 0) OR (&FINDROW > &HIUSED)  THEN +
                DO /* DEPENDENCY NOT IN TABLE */
                  SET &VALID=N
                  SET &CFIELD=DEPS
                  SET &CUR=&CURRENT
                  SET &OUTMSG=CTMK002C
                END
      /*                                     */
          IF (&TY=A) OR (&TY=N)  THEN +
            DO

              IF &FINDROW = &CURRENT THEN +
                DO /* DEPENDENCY ON YOURSELF */
                  SET &VALID=N
                  SET &CFIELD=DEPS
                  SET &CUR=&CURRENT
                  SET &OUTMSG=CTMK002J
                END

              IF (&VALID = Y) THEN +
                DO
                  ISPEXEC TBTOP CTMPKT00
                  ISPEXEC TBSKIP CTMPKT00 NUMBER(&FINDROW)

                  IF Z&NRSTR(&JNAM)  =Z THEN +
                    DO  /* REFERENCE TO A LINE WITH BLANK JOB NAME */
                      SET &VALID=N
                      SET &CFIELD=DEPS
                      SET &CUR=&CURRENT
                      SET &OUTMSG=CTMK002C
                    END

                  IF Z&POPER = ZD THEN +
                    DO /* REFER TO A LINE WHICH IS BEING DELETED */
                      SET &VALID=N
                      SET &CFIELD=DEPS
                      SET &CUR=&CURRENT
                      SET &OUTMSG=CTMK002M
                    END

                  IF &VALID=Y     THEN +
                    DO /* GET BACK TO MY ROW  */
                      ISPEXEC TBTOP CTMPKT00
                      ISPEXEC TBSKIP CTMPKT00 NUMBER(&CURRENT)
                    END

                END  /* FINAL CHECK   */

            END /* ALL THE SEPARATE CHECKS FOR THIS DEPENDENCY */

          SET &NDX = &NDX - 1
        END /* LOOP OVER DEPENDENCIES */

      END /* CHECKING A NON-BLANK NON-DELETED LINE */
      SET &CURRENT = &CURRENT + 1

    END /* LOOP LOOKING FOR JOBNAMES AND REFS */

  IF (&VALID=Y) AND (&PROCESS=Y) AND (&LBR=0) THEN SET &LBR = &HIUSED+1

  /**************************/
  /* PROCESS LINE COMMANDS  */
  /**************************/

  /**************************/
  /* DO A 'MOVE'            */
  /*   BEFORE THE LOOP      */
  /**************************/

  IF  (&VALID=Y) AND (&TYPCOPY=M) AND (&PROCESS=Y)  THEN +
    DO
      SET &NEW&MOVEROW = &REALTGT
      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&MOVEROW)
      ISPEXEC TBDELETE CTMPKT00
      SET &NN = &MOVETGT
      IF &NN > &MOVEROW THEN SET &NN = &NN - 1
      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&NN) NOREAD
      SET &OPER = &NUL
      SET &POPER = &NUL
      SET &TYPCOPY = N
      SET &REQUIRE = Y
      ISPEXEC TBADD    CTMPKT00
    END

  SET &CURRENT = 1


  IF (&VALID=Y) AND (&PROCESS=Y) AND (&NUMCMDS>0) THEN +
    DO WHILE &CURRENT <= &HIUSED     /* PROCESS COMMANDS  */

      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&CURRENT)

      SET &LOPER = &POPER
      IF (Z&LOPER=Z) THEN SET &LOPER = N
      SET &POPER = &NUL
      SET &OPER = &NUL

      IF (&LOPER^=D) THEN
        DO                          /* ADJUST DEPENDENCIES */
          SET &NN = &&NEW&JNUM
          SET &JNUM = &NN
          SET &HERE = &JNUM
          SET &NDX  = 1
          SET &DEPS = &NUL
          IF (&NUMDEPS=&NUL) THEN SET &NUMDEPS = 0
          DO WHILE &NDX <= &NUMDEPS  /* LOOP OVER DEPENDENCIES */
            SET &C = &&T&NDX
            SET &C = &STR(&C)
            IF (&C=N) THEN +
              DO
                SET &NN = &&DJ&NDX
                SET &NN = &&NEW&NN
                SET &DJ&NDX = &NN
              END
            SET &TEMP = &SYSNSUB(2,&&DJ&NDX)
            SET &DEPS = &NRSTR(&DEPS)&NRSTR(&TEMP)
            SET &NDX = &NDX + 1
            IF &NDX <=&NUMDEPS THEN SET &DEPS = &NRSTR(&DEPS)&STR(,)
          END  /* LOOP OVER DEPENDENCIES */
        END

      ISPEXEC TBPUT CTMPKT00

      IF (&LOPER=C) THEN +
        DO
          SET &MOVEROW= &HERE
        END

      IF (&LOPER=D) THEN +
        DO
          ISPEXEC TBDELETE CTMPKT00
          SET &CURRENT = &CURRENT - 1
          SET &TBLSIZ = &TBLSIZ - 1
          SET &HIUSED = &HIUSED - 1
          SET &LBR = &LBR - 1
        END

      IF  (&LOPER=I) OR (&LOPER=R) OR +
        (  (&LOPER=A) AND (&TYPCOPY=C) )  THEN  +
        DO
          IF (&LOPER = I) THEN ISPEXEC TBVCLEAR CTMPKT00
          IF (&LOPER = R) THEN SET &REQUIRE = Y
          SET &JNUM = &HERE + 1
          SET &MOVETGT = &JNUM
          ISPEXEC TBADD    CTMPKT00
          SET &CURRENT = &CURRENT + 1
          SET &TBLSIZ = &TBLSIZ + 1
          SET &HIUSED = &HIUSED + 1
          SET &LBR = &HERE + 1
        END

      IF ((&LOPER=B) AND (&TYPCOPY=C)) OR (&LOPER=P) THEN +
        DO
          ISPEXEC TBVCLEAR CTMPKT00
          SET &JNUM = &HERE-1
          SET &MOVETGT = &JNUM
          ISPEXEC TBSKIP CTMPKT00 NUMBER (-1) NOREAD
          ISPEXEC TBADD    CTMPKT00
          SET &CURRENT = &CURRENT + 1
          SET &TBLSIZ = &TBLSIZ + 1
          SET &HIUSED = &HIUSED + 1
          SET &LBR = &LBR + 1
          IF &LOPER = P THEN SET &LBR = &HERE - 1
        END

      SET &CURRENT = &CURRENT + 1

    END                       /* OF COMMAND LOOP */

  IF (&VALID=Y) AND (&PROCESS=Y) AND (&NUMCMDS>0) THEN +
    DO
      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&CURRENT)
      DO WHILE &CURRENT <= &TBLSIZ
        SET &JNUM = &JNUM + &OFFSET
        ISPEXEC TBPUT CTMPKT00
        SET &CURRENT = &CURRENT + 1
        ISPEXEC TBSKIP CTMPKT00
      END
    END

  /**************************/
  /* DO A 'COPY'            */
  /*   AFTER THE LOOP       */
  /**************************/

  IF  (&VALID=Y) AND (&TYPCOPY=C) AND (&PROCESS=Y) THEN +
    DO
      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&MOVEROW)
      SET &JNUM = &MOVETGT
      ISPEXEC TBTOP CTMPKT00
      ISPEXEC TBSKIP CTMPKT00 NUMBER(&JNUM) NOREAD
      SET &OPER = &NUL
      SET &POPER = &NUL
      ISPEXEC TBPUT    CTMPKT00
      SET &TYPCOPY = N
      SET &REQUIRE = Y
    END

  IF  (&VALID=Y) AND (&ENDHIT=Y) AND (&REQUIRE=N) THEN +
    DO
      SET &ENDED = 0
      ISPEXEC VPUT (ENDED RESP HIUSED)
      EXIT QUIT
    END

END /* OF "DO FOREVER" */

EXIT
