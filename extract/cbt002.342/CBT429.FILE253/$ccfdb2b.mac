/*  REXX EXEC : ( $CCFDB2B ).
    FUNCTION  : CALLED BY TSO COMMAND APPLICATION TABLE TASK ( DB2B )
                TO PROVIDE AN ISPF DIALOG PANEL FOR DB2 COBOL2 AND
                DYLAKOR PROGRAM COMPILE SERVICES FROM LIBRARIAN.
                                                                      */

TRACE O
/*     */
HOUSE_KEEPING:
ADDRESS ISPEXEC
PACKG = 'Y'
BIND = 'Y'
EXPLN = 'YES'
QACOMP = 'N'
DB2TYPE = 'BATCH'
DB2COLL = ''
DB2OPT = ''
DB2SYS = 'DSNY'
DB2S = DB2SYS
DB2QUAL = 'BUILD'
DB2NODE = 'DB2Y'
DB2LOC = 'DB2SYSY'
DB2VERS = 'SYSS.DB2.V3R1M0.'
DB2LIB = 'SYS1.DB2.V3R1M0.SDSNLOAD'
X = MSG("OFF")
NOMEMB = 'MEMBER NOT FOUND'
JCL.1 = 'CCFDB2B1'
JCL.2 = 'CCFDB2B2'
JCL.3 = 'CCFDB2B3'
JCL.4 = 'CCFDB2B4'
JCL.5 = 'CCFDB2B5'
JCL.6 = 'CCFDB2B6'
TSOID = SYSVAR(SYSUID)
ACCTCCF = 5200010520000000
COBOPT = 'APOST,LIB,RENT,RES,DYNAM,OFFSET,CMPR2'
PCOBOPT = 'APOST,LIB,RENT,RES,DYNAM,OFFSET,NOCMPR2'
TSTCAOPT = 'DCR,MMA,MOF,MXR,FDC,PAR,SUB,PFL,XCO,XTI,WSI'
PRDCAOPT = 'COPT,NOWSI,NODTE,NOFDC,NOMOF,NOPFL,NOSUB,NOXCO,NOXTI'
CLASS = 'C'
MVS = 'SYSA'
EMERGSW = 'NO'
ACCTSW = 'NO'
ASMLIB = 'SYSS.TESTCCF.DYLDB2.ASMLIB'
DBRMLIB = TSOID'.USER.DBRMLIB'
GRANTPDS = 'SYSS.TESTCCF.GRANT.CNTLLIB'
PARMLIB = 'SYSS.TESTCCF.DB2.TURNOVER.PARMLIB'
DB2CNTL = SYSDSN("'"PARMLIB"'")
IF DB2CNTL = 'DATASET NOT FOUND' THEN DO
   SAY '*** PARMLIB ERROR: DATASET NOT FOUND FOR ('PARMLIB'). ***'
   SAY '*** CCF DB2B EXEC TASK CANCELLED - RC = '028'. ***'
   EXIT 028
END
C1 = 1
C2 = 2
C3 = 4
C4 = 5
D1 = 1
D2 = 2
D3 = 4
D4 = 5
COPYLIB.1 = 'SYS1.TESTCOPY.MASTER'
COPYLIB.2 = 'SYS1.TURNCOPY.MASTER'
COPYLIB.3 = 'SYS1.RJCTCOPY.MASTER'
COPYLIB.4 = 'SYS1.QACOPY.MASTER'
COPYLIB.5 = 'SYS1.PRODCOPY.MASTER'
COPYLIB.6 = 'SYS1.EMRGCOPY.MASTER'
CCFLOAD = 'SYS1.TEST.BATCH.LOADLIB'
EMRGID = SUBSTR(TSOID,1,6)
IF EMRGID = 'TECH29' THEN DO
   EMERGSW = 'YES'
   EXPLN = 'NO'
   CLASS = 'P'
   MVS = 'SYSA'
   C1 = 6
   C2 = 5
   C3 = 4
   C4 = 2
   D1 = 6
   D2 = 5
   D3 = 4
   D4 = 2
   DB2SYS = 'DSNA'
   DB2S = DB2SYS
   MASTER = 'SYS1.EMRGSRCE.MASTER'
   DBRMLIB = 'SYSS.EMRG.BATCH.DBRMLIB'
   CCFLOAD = 'SYS1.EMERGNCY.BATCH.LOADLIB'
END
"CONTROL ERRORS RETURN"
"FTCLOSE"
"VGET (ACCTCDE) PROFILE"
IF RC ^= 0 THEN DO
   ACCTSW = 'YES'
   ACCTCDE = ACCTCCF
END
"VGET (DB2OPT) PROFILE"
IF RC ^= 0 THEN DB2OPT = COBOPT
"VGET (CADOPT) PROFILE"
IF RC ^= 0 THEN CADOPT = TSTCAOPT
/*     */
DISPLAY_MAIN_PANEL:
DO FOREVER
   ADDRESS ISPEXEC "DISPLAY PANEL($CCFBPN2)"
   SRC = RC
   IF SRC = 8 THEN LEAVE
   IF SRC > 8 THEN DO
      SAY '*** ERROR INVOKING ISPF DIALOG PANEL ( $CCFBPN2 ). ***'
      SAY '*** CCF DB2B EXEC TASK CANCELLED - RC = 'SRC'. ***'
      EXIT SRC
   END
   MASTER = LIBPRJ××'.'××LIBGRP××'.'××LIBTYP
   CALL CHECK_MASTER_MEMBER
   IF MODSW = 'NO' THEN ITERATE
   DB2SYS = DB2S
   IF DB2SYS = 'DB2T' × DB2SYS = 'DB2P' THEN DO
      DB2NODE = DB2SYS
      DB2VERS = 'SYSS.DB2.V2R3M0.'
      DB2LIB = 'SYS1.DB2.V2R3M0.DSNLOAD'
   END
   DB2RUNLB = DB2VERS××DB2NODE'.RUNLIB.LOAD'
   IF COMPTYP = 4 THEN DO
      CALL DYLAKOR_COMPILE
      IF QACOMP = 'Y' THEN DO
         RECORD = MEMBER DB2PLAN DB2TYPE TSOID DB2SYS DB2QUAL DB2VERS DB
         CALL BUILD_TURNOVER_PARMS
         IF WOMSG = 'YES' THEN ITERATE
         INTERPRET CALL LABEL
         IF WRITESW = 'ERROR' THEN CALL PARMLIB_WRITE_ERROR
      END
      COMPTYP = ''
      MEMBER = ''
      ITERATE
   END
   CTYP = COMPTYP
   DB2PLAN = DB2COLL
   LOADLIB = CCFLOAD
   MASTER = LIBPRJ××'.'××LIBGRP××'.'××LIBTYP
   CALL CHECK_GRANT_CNTLLIB
   IF CTYP = 1 THEN DO
      CALL CHECK_COBOL2_NATIVE_FLAG
      CALL CHECK_OPTIMIZE_FLAG
      C2P = DB2OPT
      CMPR = POS('NOCMPR2',C2P)
      IF CMPR = 0 & NATIVE_SW = 'YES' THEN C2P = C2P××',NOCMPR2'
      IF QACOMP = 'Y' & NATIVE_SW = 'YES' THEN C2P = PCOBOPT
      IF QACOMP = 'Y' & NATIVE_SW = 'NO' THEN C2P = COBOPT
   END
   IF OPTIMIZE_SW = 'YES' THEN DO
      CTYP = 6
      C2P = CADOPT
      IF QACOMP = 'Y' THEN C2P = PRDCAOPT
   END
   IF EMERGSW = 'YES' THEN QACOMP = 'N'
   IF QACOMP = 'Y' THEN DO
      RECORD = MEMBER DB2COLL DB2TYPE TSOID DB2SYS DB2QUAL DB2VERS DB2NO
      CALL BUILD_TURNOVER_PARMS
      IF WOMSG = 'YES' THEN ITERATE
      INTERPRET CALL LABEL
      IF WRITESW = 'ERROR' THEN CALL PARMLIB_WRITE_ERROR
   END
   CALL BUILD_COPYBOOK_SEARCH_CHAIN
   CALL SELECT_COMPILE_JCL
   IF SKELSW = 'ERROR' THEN ITERATE
   CALL SUBMIT_COMPILE_JCL
   COMPTYP = ''
   MEMBER = ''
   DB2COLL = ''
END
ADDRESS ISPEXEC
"VPUT (DB2OPT) PROFILE"
"VPUT (CADOPT) PROFILE"
IF ACCTSW = 'YES' THEN "VPUT (ACCTCDE) PROFILE"
ADDRESS TSO
"FREE F("LIBDD")"
"FREE F("MASTDD")"
EXIT 0
/*
       S U B R O U T I N E    S E C T I O N     */
/*     */
CHECK_MASTER_MEMBER:
ADDRESS TSO
MODSW = 'NO'
LIBDSN = "'"MASTER"("MEMBER")'"
LIBDD = LIBALLOC(LIBDSN)
IF LIBDD = "ERROR" THEN DO
   SAY '*** ALLOCATION ERROR: ('MASTER'('MEMBER'). ***'
   SAY '*** DYNAMIC ALLOCATION FAILED FOR THE MASTER DATASET - RETRY TAS
   SAY '*** COMPC COMPILE SUBTASK CANCELLED. ***'
   EXIT
END
MASTDD = LIBALLOC("'"MASTER"'")
MASTMEM = XLIBEMEM(MASTDD,MEMBER)
"EXECIO 0 DISKR" MASTDD "(FINIS"
IF MASTMEM = ""  THEN DO
   "FREE F("LIBDD")"
   "FREE F("MASTDD")"
   ADDRESS ISPEXEC
   ZERRMSG = $CCFA007
   "SETMSG MSG($CCFA007)"
   RETURN
END
MODSW = 'YES'
RETURN
/*     */
DYLAKOR_COMPILE:
LOADLIB = CCFLOAD
SKELJCL = 'CCFDYLD1'
COMPMSG = TSOID××'.DYL.DB2.COMP'
CALL GET_DYLAKOR_MODULE_NAMES
IF ASMSW = 'NO' THEN CALL ASSEMBLE_NAME_ERROR
IF RPTSW = 'NO' THEN CALL REPORT_NAME_ERROR
IF LIBGRP = 'RJCTSRCE' THEN LOADLIB = 'SYS1.REJECT.BATCH.LOADLIB'
IF EMERGSW = 'YES' THEN DO
   SKELJCL = 'CCFDYLD2'
   ASMLIB = 'SYSS.EMRG.CCF.DYLDB2.ASMLIB'
END
CALL BUILD_COPYBOOK_SEARCH_CHAIN
CALL SUBMIT_COMPILE_JCL
RETURN
/*     */
GET_DYLAKOR_MODULE_NAMES:
ASMSW = 'NO'
RPTSW = 'NO'
ADDRESS TSO "EXECIO * DISKR" LIBDD "(FINIS STEM PROGDATA."
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** INVALID OR MISSING LIBRARIAN MEMBER NAME. ***'
   SAY '*** CCF DB2B EXEC TASK CANCELLED - RC = '024'. ***'
   EXIT
END
DO I = 1 TO PROGDATA.0
   KEY1 = POS('OPTION FREEZE',PROGDATA.I)
   IF KEY1 ^= 0 THEN DO
      KEY2 = WORDPOS('FREEZE',PROGDATA.I)
      INDEXKEY = KEY2 + 1
      DYLMOD = WORD(PROGDATA.I,INDEXKEY)
      RPTSW = 'YES'
   END
   KEY3 = POS('TSO_ATTACH PLANID',PROGDATA.I)
   IF KEY3 ^= 0 THEN DO
      KEY4 = WORDPOS('PLANID',PROGDATA.I)
      INDEXKEY = KEY4 + 1
      ASMMOD = WORD(PROGDATA.I,INDEXKEY)
      DB2PLAN = WORD(PROGDATA.I,INDEXKEY)
      ASMSW = 'YES'
   END
END
RETURN
/*     */
ASSEMBLE_NAME_ERROR:
ERC = 024
SAY '*** SYNTAX REQUIREMENTS ERROR FOR ('MEMBER') PROGRAM. ***'
SAY '*** ASSEMBLE MODULE NAME NOT FOUND FROM KEY SYNTAX DATA. ***'
SAY '*** DB2B EXEC SUBTASK CANCELLED - RC = ('ERC'). ***'
EXIT ERC
/*     */
REPORT_NAME_ERROR:
ERC = 024
SAY '*** SYNTAX REQUIREMENTS ERROR FOR ('MEMBER') PROGRAM. ***'
SAY '*** REPORTS MODULE NAME NOT FOUND FROM KEY SYNTAX DATA. ***'
SAY '*** DB2B EXEC SUBTASK CANCELLED - RC = ('ERC'). ***'
EXIT ERC
/*     */
CHECK_GRANT_CNTLLIB:
IF EMERGSW = 'YES' THEN RETURN
GRANT = 'Y'
GMEMB = SYSDSN("'"GRANTPDS"("DB2PLAN")'")
IF GMEMB = NOMEMB THEN RETURN
ADDRESS TSO
"ALLOC DA('"GRANTPDS"("DB2PLAN")') F(PARMDD) SHR"
"EXECIO * DISKR PARMDD (FINIS STEM GPARM."
"FREE F(PARMDD)"
DO I = 1 TO GPARM.0
   IF GPARM.I = DB2SYS THEN GRANT = 'N'
END
RETURN
/*     */
CHECK_COBOL2_NATIVE_FLAG:
ADDRESS TSO
NATIVE_SW = 'NO'
"EXECIO * DISKR" LIBDD "(STEM PROGDATA. FINIS"
DO I = 1 TO PROGDATA.0
   NOCMPR2 = POS('NOCMPR2-FLAG',PROGDATA.I)
   IF NOCMPR2 ^=0 THEN DO
      NATIVE_SW = 'YES'
      LEAVE
   END
END
RETURN
/*     */
CHECK_OPTIMIZE_FLAG:
OPTIMIZE_SW = 'NO'
DO I = 1 TO PROGDATA.0
   OPTFLAG = POS('OPT2-FLAG',PROGDATA.I)
   IF OPTFLAG ^= 0 THEN DO
      OPTIMIZE_SW = 'YES'
      LEAVE
   END
END
RETURN
/*     */
BUILD_TURNOVER_PARMS:
IF EMERGSW = 'YES' THEN RETURN
ADDRESS ISPEXEC
WOMSG = 'NO'
WOPRFX = SUBSTR(WORKORDR,1,2)
IF WOPRFX ^= 'WO' THEN DO
   WOMSG = 'YES'
   ZERRMSG = $CCFA008
   "SETMSG MSG($CCFA008)"
   RETURN
END
WOLEN = LENGTH(WORKORDR)
IF WOLEN < 8 THEN DO
   WOMSG = 'YES'
   ZERRMSG = $CCFA009
   "SETMSG MSG($CCFA009)"
   RETURN
END
ADDRESS TSO
X = MSG("OFF")
"FREE F(PARMDD)"
LABEL = 'PARMLIB_DATASET_ERROR'
DSN = SYSDSN("'"PARMLIB"("WORKORDR")'")
IF DSN = 'OK' THEN DO
   "ALLOC DA('"PARMLIB"("WORKORDR")') F(PARMDD) SHR"
   "EXECIO * DISKR PARMDD (FINIS STEM DATA."
   LABEL = 'REWRITE_TURNOVER_PARMS'
END
IF DSN = NOMEMB THEN DO
   "ALLOC DA('"PARMLIB"("WORKORDR")') F(PARMDD) SHR"
   LABEL = 'WRITE_TURNOVER_PARMS'
END
RETURN
/*     */
WRITE_TURNOVER_PARMS:
IF EMERGSW = 'YES' THEN RETURN
ADDRESS TSO
WRITESW = 'OK'
"DELSTACK"
QUEUE RECORD
"EXECIO 1 DISKW PARMDD (FINIS"
SRC = RC
"FREE F(PARMDD)"
IF SRC ^= 0 THEN WRITESW = 'ERROR'
RETURN
/*     */
REWRITE_TURNOVER_PARMS:
IF EMERGSW = 'YES' THEN RETURN
ADDRESS TSO
WRITESW = 'OK'
MATCHSW = 'NO'
"DELSTACK"
DO D = 1 TO DATA.0
   PMEMBER = WORD(DATA.D,1)
   IF PMEMBER = MEMBER THEN DO
      MATCHSW = 'YES'
      QUEUE RECORD
      ITERATE
   END
   QUEUE DATA.D
END
RCDCNT = QUEUED()
IF MATCHSW = 'NO' THEN DO
   RCDCNT = RCDCNT + 1
   QUEUE RECORD
END
"EXECIO" RCDCNT "DISKW PARMDD (FINIS"
SRC = RC
"FREE F(PARMDD)"
IF SRC ^= 0 THEN WRITESW = 'ERROR'
RETURN
/*     */
BUILD_COPYBOOK_SEARCH_CHAIN:
COPYLB1 = COPYLIB.C1
COPYLB2 = COPYLIB.C2
COPYLB3 = COPYLIB.C3
COPYLB4 = COPYLIB.C4
DCLLIB1 = COPYLIB.D1
DCLLIB2 = COPYLIB.D2
DCLLIB3 = COPYLIB.D3
DCLLIB4 = COPYLIB.D4
RETURN
/*     */
SELECT_COMPILE_JCL:
SKELSW = 'OK'
SKELJCL = JCL.CTYP
IF EMERGSW = 'YES' THEN DO
   C2P = 'APOST,LIB,RENT,RES,DYNAM,CMPR2'
   IF NATIVE_SW = 'YES' THEN C2P = 'APOST,LIB,RENT,RES,DYNAM,NOCMPR2'
   SKELJCL = 'CCFDB2E1'
   COMPMSG = TSOID××'.DB2E.PKG.BND'
   IF OPTIMIZE_SW = 'YES' THEN DO
      SKELJCL = 'CCFDB2E3'
      COMPMSG = TSOID××'.DB2E.OPT.BND'
   END
   LOADLIB = 'SYS1.EMERGNCY.BATCH.LOADLIB'
   RETURN
END
IF LOADLIB = 'SYS1.EMERGNCY.BATCH.LOADLIB' THEN DO
   IF MASTER ^= 'SYS1.EMRGSRCE.MASTER' THEN DO
      SKELSW = 'ERROR'
      EMRGMAST = 'SYS1.EMRGSRCE.MASTER'
      ZERRMSG = $CCFA100
      ADDRESS ISPEXEC "SETMSG MSG($CCFA100)"
      RETURN
   END
END
IF LIBGRP = 'RJCTSRCE' THEN DO
   SKELJCL = 'CCFDB2R1'
   QACOMP = 'N'
   LOADLIB = 'SYS1.REJECT.BATCH.LOADLIB'
   C2P = 'APOST,LIB,RENT,RES,DYNAM,CMPR2'
   IF NATIVE_SW = 'YES' THEN C2P = 'APOST,LIB,RENT,RES,DYNAM,NOCMPR2'
   COMPMSG = TSOID××'.DB2.RCMP.LNK'
   RETURN
END
IF CTYP = 1 THEN DO
   IF GRANT = 'N' THEN SKELJCL = 'CCFDB2B4'
   IF QACOMP = 'Y' THEN DO
      C2P = 'APOST,LIB,RENT,RES,DYNAM,CMPR2'
      IF NATIVE_SW = 'YES' THEN C2P = 'APOST,LIB,RENT,RES,DYNAM,NOCMPR2'
   END
END
IF CTYP = 3 & GRANT = 'N' THEN SKELJCL = 'CCFDB2B5'
IF CTYP = 6 & GRANT = 'N' THEN SKELJCL = 'CCFDB2B7'
SELECT
   WHEN SKELJCL = 'CCFDB2B1' THEN COMPMSG = TSOID××'.DB2.LNK.PBND'
   WHEN SKELJCL = 'CCFDB2B2' THEN COMPMSG = TSOID××'.DB2.PACKAGE'
   WHEN SKELJCL = 'CCFDB2B3' THEN COMPMSG = TSOID××'.DB2.BIND'
   WHEN SKELJCL = 'CCFDB2B4' THEN COMPMSG = TSOID××'.DB2.LNK.PBNG'
   WHEN SKELJCL = 'CCFDB2B5' THEN COMPMSG = TSOID××'.DB2.BNDNG'
   WHEN SKELJCL = 'CCFDB2B6' THEN COMPMSG = TSOID××'.DB2.OBNDG'
   WHEN SKELJCL = 'CCFDB2B7' THEN COMPMSG = TSOID××'.DB2.OBNDNG'
  OTHERWISE COMPMSG = TSOID××'.DB2.COMPILE'
END
RETURN
/*     */
SUBMIT_COMPILE_JCL:
ADDRESS ISPEXEC
"FTOPEN TEMP"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA001
   "SETMSG MSG($CCFA001)"
   RETURN
END
"FTINCL $CCFJOBD"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA002
   "SETMSG MSG($CCFA002)"
   RETURN
END
"FTINCL" SKELJCL
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA003
   "SETMSG MSG($CCFA003)"
   RETURN
END
"FTCLOSE"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA005
   RETURN
END
"VGET ZTEMPF"
ADDRESS TSO "SUBMIT '"ZTEMPF"'"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA006
   RETURN
END
ZERRMSG = $CCFA000
ADDRESS ISPEXEC "SETMSG MSG($CCFA000)"
RETURN
/*     */
PARMLIB_DATASET_ERROR:
SAY '*** PARMLIB DATASET ERROR: 'DSN' ('PARMLIB'). ***'
SAY '*** PARMLIB RECORD ENTRIES CANNOT BE WRITTEN. ***'
SAY '*** DB2B EXEC TASK CANCELLED - RETURN CODE ('110'). ***'
EXIT 110
/*     */
PARMLIB_WRITE_ERROR:
SAY '*** PARMLIB WRITE ERROR: ('PARMLIB'('WORKORDR'). ***'
SAY '*** PARMLIB RECORD ENTRIES NOT WRITTEN. ***'
SAY '*** DB2B EXEC TASK CANCELLED - RETURN CODE ('SRC'). ***'
EXIT SRC
