/*  REXX EXEC : ( NWRESTOR ).
    FUNCTION  : LAN SERVER BACKUP PANEL INTERFACE TO FACILITATE FILE
                RESTORES FOR A SERVER VOLUME FROM THE MVS HOST CENTRAL
                ARCHIVE BACKUP.
                BUILDS AND WRITES THE JOB JCL AND INPUT SCRIPT TO
                PERFORM THE LAN SERVER RESTORE AND SUBMITS THE JOB
                FOR EXECUTION ON THE SYSA SYSTEM CLASS=S.
    INPUT     : ( PTECH2.NETCA.&&SERVER.&&VOLUME.H ).
    OUTPUT    : ( PTECH3.NETCA.RESTORE.SCRIPT.CNTLLIB(&MEMBER).
    AUTHOR    : DAN BOWEN.
                                                                    */
TRACE O
/*      */
HOUSE_KEEPING:
ADDRESS TSO
SERVER.1 = 'CS1'
SERVER.2 = 'CS2'
SERVER.3 = 'MIS'
SERVER.4 = 'FIN'
SERVER.5 = 'CS4 C4A'
SERVER.6 = 'CS4 C4B'
SERVER.7 = 'CS5'
SERVER.8 = 'CS6 C6A'
SERVER.9 = 'CS6 C6B'
SERVER.10 = 'COM'
SERVER.11 = 'MAGIC DIRECTORY SYS: CS6'
SERVER.12 = 'POS DIRECTORY VOL1: CS6'
SERVER.13 = 'REA DIRECTORY VOL2: CS1'
SERVER.14 = 'APPL DIRECTORY VOL3: FIN'
RESTYPE.1 = 'FILE'
RESTYPE.2 = 'DRCT'
RESTYPE.3 = 'VOL'
RMODE.1 = 'INCR'
RMODE.2 = 'FULL'
USERACC = 'TCPIP'
AST = '*****'
XDATE = 'XXXX-XX-XX'
XDSN = '--------------------------------------------'
NETEX_CNT = 3
NETEX_SERVERS = 'CS6 C6A C6B'
PARMLIB = 'SYSS.TECH.COMMON.PARMLIB'
SCRIPTLIB = 'PTECH3.NETCA.RESTORE.SCRIPT.PARMLIB'
CNTLLIB = 'PTECH3.NETCA.RESTORE.SCRIPT.CNTLLIB'
TEXTLIB = 'SYSS.NETCA.CONTROL.TEXTLIB'
TSOID = SYSVAR(SYSUID)
CURTIME = TIME()
HH = SUBSTR(CURTIME,1,2)
MM = SUBSTR(CURTIME,4,2)
SS = SUBSTR(CURTIME,7,2)
TIMEP = HH××MM××SS
JSUFFIX = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
X = MSG("OFF")
"FREE FILE(NWDD)"
"FREE FILE(ISPFILE)"
ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
/*
        M A I N   R O U T I N E   S E C T I O N
                                                       */
/*     */
DISPLAY_SERVER_PANEL:
AUTHPARM = 'NWHPDESK'
NWMSG = 'NWLAN002'
DO FOREVER
   ADDRESS ISPEXEC
   "DISPLAY PANEL(NWRSTPN1)"
   SRC = RC
   IF SRC = 8 THEN EXIT 0
   IF SRC > 8 THEN DO
      SAY '*** ERROR INVOKING ISPF DIALOG PANEL ( NWRSTPN1 ). ***'
      SAY '*** NWRESTOR EXEC TASK CANCELLED - RC = 'SRC'. ***'
      EXIT SRC
   END
   IF RESTYPE.RT = 'VOL' THEN DO
      AUTHPARM = 'NWLANGRP'
      NWMSG = 'NWLAN003'
   END
   CALL CHECK_USER_AUTHORIZATION
   IF AUTHSW = 'YES' THEN LEAVE
   "SETMSG MSG("NWMSG")"
END
/*     */
CHECK_DIRECTORY_PARM:
SERVER = WORD(SERVER.LAN,1)
LANSERV = WORD(SERVER.LAN,2)
IF LANSERV = '' THEN LANSERV = SERVER
DIRESTORE = WORD(SERVER.LAN,2)
IF DIRESTORE = 'DIRECTORY' THEN DO
   VOLKEY = WORD(SERVER.LAN,1)××' 'WORD(SERVER.LAN,3)
   RESTVOL = WORD(SERVER.LAN,3)
   VOLUME = WORD(SERVER.LAN,1)
   SERVER = WORD(SERVER.LAN,4)
   LANSERV = WORD(SERVER.LAN,4)
   DO N = 1 TO NETEX_CNT
      NETX = WORD(NETEX_SERVERS,N)
      IF NETX = LANSERV THEN USERACC = 'NETEX'
   END
   RM = 2
   SIGNAL BUILD_CONTAINER_DATASET_PARMS
END
/*     */
DISPLAY_VOLUME_PANEL:
CALL READ_SERVER_VOLUMES_PARMS
ADDRESS ISPEXEC "DISPLAY PANEL(NWRSTPN2)"
SRC = RC
IF SRC = 8 THEN EXIT 0
IF SRC > 8 THEN DO
   SAY '*** ERROR INVOKING ISPF DIALOG PANEL ( NWRSTPN2 ). ***'
   SAY '*** NWRESTOR EXEC TASK CANCELLED - RC = 'SRC'. ***'
   EXIT SRC
END
CALL GET_SELECTED_SERVER_VOLUME
VOLKEY = VOLUME RESTVOL
/*     */
BUILD_CONTAINER_DATASET_PARMS:
CALL GET_HISTORY_CONTAINER_DATASETS
IF DSN = 0 THEN DO
   SAY '*** HISTORY DATASET ERROR: NO VALID CONTAINER DATASET NAMES FOUN
   SAY '*** DSN ('NWHSTLIB') DOES NOT CONTAIN A BACKUP STATUS OF (SSSS).
   SAY '*** NWRESTOR EXEC TASK CANCELLED - RC = (028). ***'
   EXIT 028
END
GDGCNT = 18
NWPANEL = 'NWRSTPN3'
CALL BUILD_PANEL_DATASET_PARMS
/*     */
DISPLAY_DATASET_LIST_PANEL:
DO FOREVER
   ADDRESS ISPEXEC
   "DISPLAY PANEL("NWPANEL")"
   SRC = RC
   IF SRC = 8 THEN EXIT 0
   IF SRC > 8 THEN DO
      SAY '*** ERROR INVOKING ISPF DIALOG PANEL ( 'NWPANEL' ). ***'
      SAY '*** NWRESTOR EXEC TASK CANCELLED - RC = 'SRC'. ***'
      EXIT SRC
   END
   CALL GET_PANEL_INPUT_DATASET
   IF DSNSW = 'YES' THEN LEAVE
   "SETMSG MSG(NWLAN004)"
END
IF RESTYPE.RT = 'DRCT' & RESTFN = '' THEN RESTFN = '*'
IF RESTYPE.RT = 'VOL' THEN DO
   RESTDPN = '*'
   RESTFN = '*'
END
/*     */
DISPLAY_INPUT_PARMS_CONFIRMATION_PANEL:
CALL LISTCAT_CONTAINER_DATASET
CALL BUILD_PANEL_TAPE_VOLSERS
ADDRESS ISPEXEC
"DISPLAY PANEL(NWRSTPN5)"
SRC = RC
IF SRC = 8 THEN EXIT 0
IF SRC > 8 THEN DO
   SAY '*** ERROR INVOKING ISPF DIALOG PANEL ( NWRSTPN5 ). ***'
   SAY '*** NWRESTOR EXEC TASK CANCELLED - RC = 'SRC'. ***'
   EXIT SRC
END
/*     */
CREATE_RESTORE_JOB_PARMS:
ADDRESS TSO
SUBPDS = CNTLLIB
JMEMB = 'J'TIMEP                  /* JOURNAL PARMS MEMBER */
RMEMB = 'R'TIMEP                  /* RESTORE JOB JCL MEMBER */
SMEMB = 'S'TIMEP                  /* SCRIPT INPUT MEMBER */
"DELSTACK"
CALL BUILD_JOBNAME_PARM
OUTPDS = CNTLLIB
OUTMEMB = JOBNAME
QUEUE JOBNAME
CALL WRITE_PDS_MEMBER
DO N = 1 TO NETEX_CNT
   NETX = WORD(NETEX_SERVERS,N)
   IF NETX = LANSERV THEN USERACC = 'NETEX'
END
LABEL = 'BUILD_RESTORE_JOB_'USERACC
INTERPRET CALL LABEL
OUTMEMB = RMEMB
CALL WRITE_PDS_MEMBER
"DELSTACK"
QUEUE SERVER
QUEUE RESTVOL
QUEUE RESTDSN
QUEUE RESTDPN
QUEUE RESTFN
OUTMEMB = JMEMB
CALL WRITE_PDS_MEMBER
LABEL = 'BUILD_RESTORE_PARMS_'USERACC
INTERPRET CALL LABEL
OUTMEMB = SMEMB
OUTPDS = SCRIPTLIB
CALL WRITE_PDS_MEMBER
CALL SUBMIT_RESTORE_JOB
EXIT 0
/*
       S U B R O U T I N E S   S E C T I O N     */
/*     */
CHECK_USER_AUTHORIZATION:
ADDRESS TSO
AUTHSW = 'NO'
"ALLOC DA('"PARMLIB"("AUTHPARM")') FILE(NWDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('PARMLIB'('AUTHPARM'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
"EXECIO * DISKR NWDD (FINIS STEM AUTH."
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('PARMLIB'('AUTHPARM'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
DO I = 1 TO AUTH.0
   LAU = POS(TSOID,AUTH.I)
   IF LAU ^= 0 THEN AUTHSW = 'YES'
END
RETURN
/*     */
READ_SERVER_VOLUMES_PARMS:
ADDRESS TSO
VOLCONFG = LANSERV'IVOLS'
IF RMODE.RM = 'FULL' THEN VOLCONFG = LANSERV'FVOLS'
"ALLOC DA('"TEXTLIB"("VOLCONFG")') FILE(NWDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('TEXTLIB'('VOLCONFG'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
"EXECIO * DISKR NWDD (STEM VOLP. FINIS"
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('TEXTLIB'('VOLCONFG'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
DO V = 1 TO 8
   INTERPRET 'VOL'V '= AST'
END
V = 0
DO I = 1 TO VOLP.0
   UPPER VOLP.I
   SVOL = POS('DAILY',VOLP.I)
   IF SVOL = 0 THEN ITERATE
   V = V + 1
   SERVOL = WORD(VOLP.I,2)
   RSTVOL.V = WORD(VOLP.I,2)
   PANLVOL = LEFT(SERVOL,5,'*')
   INTERPRET 'VOL'V '= PANLVOL'
END
RETURN
/*     */
GET_SELECTED_SERVER_VOLUME:
DO I = 1 TO 8
   SELVOL = VALUE('RV'I)
   IF SELVOL = '' THEN ITERATE
   RESTVOL = RSTVOL.I
   VOLUME = STRIP(RESTVOL,'T',':')
   LEAVE
END
RETURN
/*     */
GET_HISTORY_CONTAINER_DATASETS:
ADDRESS TSO
DSN = 0
NWHSTLIB = 'PTECH2.NETCA.'LANSERV'.'VOLUME'.H'
NWDSN = SYSDSN("'"NWHSTLIB"'")
IF NWDSN = 'DATASET NOT FOUND' THEN DO
   SAY '*** DATASET ERROR: DATASET NOT FOUND FOR ('NWHSTLIB'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: (028). ***'
   EXIT 028
END
"ALLOC DA('"NWHSTLIB"') FILE(NWDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('NWHSTLIB'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
"EXECIO * DISKR NWDD (FINIS STEM HIST."
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('NWHSTLIB'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
DO D = 1 TO 18
   INTERPRET 'BUDATE.'D '= XDATE'
   INTERPRET 'BUDSN.'D '= XDSN'
END
DO I = 1 TO HIST.0
   UPPER HIST.I
   VLOC = POS(VOLKEY,HIST.I)
   IF VLOC ^= 0 THEN DO
      BUSTATUS = WORD(HIST.I,9)
      IF BUSTATUS = 'SSSS' THEN DO
         BUTYPE = WORD(HIST.I,5)
         IF BUTYPE = RMODE.RM THEN DO
            DSN = DSN + 1
            BUDATE.DSN = WORD(HIST.I,1)
            BUTIME.DSN = WORD(HIST.I,2)
            L = I + 1
            UPPER HIST.L
            HSTDSN = WORD(HIST.L,2)
            BUDSN.DSN = STRIP(HSTDSN,"B","'")
         END
      END
   END
END
RETURN
/*     */
BUILD_PANEL_DATASET_PARMS:
DO D = 1 TO GDGCNT
   IF BUDSN.D = '' THEN ITERATE
   P = RIGHT(D,2,'0')
   PNLDATE = BUDATE.D
   PNLDSN = BUDSN.D
   INTERPRET 'BUDATE'P '= PNLDATE'
   INTERPRET 'BUDSN'P '= PNLDSN'
END
RETURN
/*     */
GET_PANEL_INPUT_DATASET:
DSNSW = 'NO'
DO I = 1 TO GDGCNT
   SELDSN = VALUE('RD'I)
   IF SELDSN = '' THEN ITERATE
   IF I < 10 THEN DO
      RESTDAT = VALUE('BUDATE0'I)
      RESTDSN = VALUE('BUDSN0'I)
   END
   IF I >= 10 THEN DO
      RESTDAT = VALUE('BUDATE'I)
      RESTDSN = VALUE('BUDSN'I)
   END
   IF RESTDSN = '' THEN ITERATE
   DSNSW = 'YES'
   LEAVE
END
RETURN
/*     */
LISTCAT_CONTAINER_DATASET:
ADDRESS TSO
T = 0
X = OUTTRAP("LSTCAT.","*","CONCAT")
"LISTCAT ENT('"RESTDSN"') ALL"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** LISTCAT ERROR: 'RESTDSN'. ***'
   SAY '*** DATASET NOT FOUND IN SYSTEM USER CATALOG. ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RC = ('SRC'). ***'
   EXIT SRC
END
DO L = 1 TO LSTCAT.0
   VOLKEY = POS("VOLSER------------",LSTCAT.L)
   IF VOLKEY ^= 0 THEN DO
      STA = VOLKEY + 18
      T = T + 1
      TAPE.T = SUBSTR(LSTCAT.L,STA,6)
   END
END
TAPECNT = T
RETURN
/*     */
BUILD_PANEL_TAPE_VOLSERS:
DO T = 1 TO TAPECNT
   INTERPRET 'TAPE'T '= TAPE.'T
END
RETURN
/*     */
BUILD_JOBNAME_PARM:
JN1 = 'NWR'
JN2 = SUBSTR(TSOID,5,3)
DO N = 1 TO 26
   JN3 = SUBSTR(JSUFFIX,N,1)
   JOBNAME = JN1××JN2××JN3
   JOB = SYSDSN("'"CNTLLIB"("JOBNAME")'")
   IF JOB = 'MEMBER NOT FOUND' THEN LEAVE
END
JN = JOBNAME
RETURN
/*     */
BUILD_RESTORE_JOB_NETEX:
"DELSTACK"
DL = LENGTH(RESTDPN)
SLASH = SUBSTR(RESTDPN,DL)
IF SLASH ^= '/' THEN RESTDPN = RESTDPN'/'
RESTDSN = "'"××RESTDSN××"'"
RESTPRM = RESTDPN××RESTFN '-PDT ON -SUB ON -REP ON"'
RCD.1 = "SET INPUT VERIFY ON"
RCD.2 = "ON ERROR EXIT ERROR"
RCD.3 = "CONNECT RS6000 -SERV "SERVER" "LANID" "LANPW
RCD.4 = "SEND -MODE RESTORE "RESTDSN" -"
RCD.5 = '    "!UARESTORE 'RMODE.RM RESTDSN RESTVOL' -'
RCD.6 = '   '××RESTPRM
JCL.1 = "//"JN"  JOB 5304010530000000,'"SERVER" LAN RESTORE',NOTIFY="TSO
JCL.2 = "//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M"
JCL.3 = "/*JOBPARM SYSAFF=SYSA"
JCL.4 = "//RESTORE  EXEC PGM=NUACLIEN"
JCL.5 = "//NETUADD  DD DSN=PTECH3.NETCA.RESTORE.SCRIPT.PARMLIB,DISP=SHR"
JCL.6 = "//SYSPRINT DD SYSOUT=*"
JCL.7 = "//SYSIN DD *"
JCL.9 = "EXIT"
JCL.10 = "/*"
JCL.11 = "//WRITELOG EXEC PGM=IKJEFT01,DYNAMNBR=30,"
JCL.12 = "//   PARM='%NWRSTLOG "JMEMB"',COND=(0,LT,RESTORE)"
JCL.13 = "//SYSPRINT DD SYSOUT=*"
JCL.14 = "//SYSTSPRT DD SYSOUT=*"
JCL.15 = "//SYSIN    DD DUMMY"
JCL.16 = "//SYSLBC   DD DSN=SYS1.BRODCAST,DISP=SHR"
JCL.17 = "//SYSUADS  DD DSN=SYS1.UADS,DISP=SHR"
JCL.18 = "//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR"
JCL.19 = "//SYSTSIN  DD DUMMY"
JCL.20 = "/*"
JCL.21 = "//DELETE   EXEC PGM=IDCAMS"
JCL.22 = "//CNTLDD   DD DSN="CNTLLIB",DISP=SHR"
JCL.23 = "//SCRIPTDD DD DSN="SCRIPTLIB",DISP=SHR"
JCL.24 = "//SYSPRINT DD SYSOUT=*"
JCL.25 = "//SYSIN    DD *"
JCL.26 = "  DELETE   "SCRIPTLIB"("SMEMB")  FILE(SCRIPTDD)"
JCL.27 = "  DELETE   "CNTLLIB"("JMEMB")  FILE(CNTLDD)"
JCL.28 = "  DELETE   "CNTLLIB"("RMEMB")  FILE(CNTLDD)"
JCL.29 = "  DELETE   "CNTLLIB"("JOBNAME")  FILE(CNTLDD)"
JCL.30 = "/*"
JCL.31 = "//"
DO J = 1 TO 7
   QUEUE JCL.J
END
IF RESTYPE.RT = 'FILE' THEN DO R = 1 TO 6
   QUEUE RCD.R
END
IF RESTYPE.RT = 'DRCT' THEN DO
   RESTPRM = RESTDPN"* -PDT ON -SUB ON -REP ON"
   RCD.6 = '   '××RESTPRM
   DO R = 1 TO 6
      QUEUE RCD.R
   END
END
IF RESTYPE.RT = 'VOL' THEN DO
   RCD.6 = "     /* -PDT ON REP ON"
   DO R = 1 TO 6
      QUEUE RCD.R
   END
END
DO J = 9 TO 31
   QUEUE JCL.J
END
RETURN
/*     */
BUILD_RESTORE_JOB_TCPIP:
"DELSTACK"
DL = LENGTH(RESTDPN)
SLASH = SUBSTR(RESTDPN,DL)
IF SLASH ^= '/' THEN RESTDPN = RESTDPN'/'
RESTDSN = "'"××RESTDSN××"'"
RESTPRM = RESTDPN××RESTFN '-PDT ON -SUB ON -REP ON"'
RCD.1 = "SET INPUT VERIFY ON"
RCD.2 = "ON ERROR EXIT ERROR"
RCD.3 = "CONNECT "SERVER" "LANID" "LANPW
RCD.4 = "SEND -MODE RESTORE "RESTDSN" -"
RCD.5 = '    "!UARESTORE 'RMODE.RM RESTDSN RESTVOL' -'
RCD.6 = '   '××RESTPRM
JCL.1 = "//"JN"  JOB 5304010530000000,'"SERVER" LAN RESTORE',NOTIFY="TSO
JCL.2 = "//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M"
JCL.3 = "//RESTORE  EXEC PGM=NUACLIEN"
JCL.4 = "//STEPLIB  DD DSN=SYS1.NETUA.V2R10M12.LOADLIB,DISP=SHR"
JCL.5 = "//         DD DSN=SYS1.NETCA.V1R1M1.H213CMT.LOADLIB,DISP=SHR"
JCL.6 = "//NETUADD  DD DSN=PTECH3.NETCA.RESTORE.SCRIPT.PARMLIB,DISP=SHR"
JCL.7 = "//SYSPRINT DD SYSOUT=*"
JCL.8 = "//SYSIN DD *"
JCL.9 = "EXIT"
JCL.10 = "/*"
JCL.11 = "//WRITELOG EXEC PGM=IKJEFT01,DYNAMNBR=30,"
JCL.12 = "//   PARM='%NWRSTLOG "JMEMB"',COND=(0,LT,RESTORE)"
JCL.13 = "//SYSPRINT DD SYSOUT=*"
JCL.14 = "//SYSTSPRT DD SYSOUT=*"
JCL.15 = "//SYSIN    DD DUMMY"
JCL.16 = "//SYSLBC   DD DSN=SYS1.BRODCAST,DISP=SHR"
JCL.17 = "//SYSUADS  DD DSN=SYS1.UADS,DISP=SHR"
JCL.18 = "//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR"
JCL.19 = "//SYSTSIN  DD DUMMY"
JCL.20 = "/*"
JCL.21 = "//DELETE   EXEC PGM=IDCAMS"
JCL.22 = "//CNTLDD   DD DSN="CNTLLIB",DISP=SHR"
JCL.23 = "//SCRIPTDD DD DSN="SCRIPTLIB",DISP=SHR"
JCL.24 = "//SYSPRINT DD SYSOUT=*"
JCL.25 = "//SYSIN    DD *"
JCL.26 = "  DELETE   "SCRIPTLIB"("SMEMB")  FILE(SCRIPTDD)"
JCL.27 = "  DELETE   "CNTLLIB"("JMEMB")  FILE(CNTLDD)"
JCL.28 = "  DELETE   "CNTLLIB"("RMEMB")  FILE(CNTLDD)"
JCL.29 = "  DELETE   "CNTLLIB"("JOBNAME")  FILE(CNTLDD)"
JCL.30 = "/*"
JCL.31 = "//"
DO J = 1 TO 8
   QUEUE JCL.J
END
IF RESTYPE.RT = 'FILE' THEN DO R = 1 TO 6
   QUEUE RCD.R
END
IF RESTYPE.RT = 'DRCT' THEN DO
   RESTPRM = RESTDPN"* -PDT ON -SUB ON -REP ON"
   RCD.6 = '   '××RESTPRM
   DO R = 1 TO 6
      QUEUE RCD.R
   END
END
IF RESTYPE.RT = 'VOL' THEN DO
   RCD.6 = "     /* -PDT ON REP ON"
   DO R = 1 TO 6
      QUEUE RCD.R
   END
END
DO J = 9 TO 31
   QUEUE JCL.J
END
RETURN
/*     */
BUILD_RESTORE_PARMS_NETEX:
"DELSTACK"
DL = LENGTH(RESTDPN)
SLASH = SUBSTR(RESTDPN,DL)
IF SLASH ^= '/' THEN RESTDPN = RESTDPN'/'
RESTDSN = "'"××RESTDSN××"'"
RESTPRM = '"'××RESTDPN××RESTFN××' -PDT ON -SUB ON -REP ON"'
IF RESTYPE.RT = 'FILE' THEN DO
   RECORD1 = 'CA_RESTORE 'RMODE.RM' 'RESTDSN' 'RESTVOL' -'
   QUEUE RECORD1
   RECORD2 = '   '××RESTPRM
   QUEUE RECORD2
END
IF RESTYPE.RT = 'DRCT' THEN DO
   RESTPRM = '"'××RESTDPN'* -PDT ON -SUB ON -REP ON"'
   RECORD1 = 'CA_RESTORE 'RMODE.RM' 'RESTDSN' 'RESTVOL' -'
   QUEUE RECORD1
   RECORD2 = '   '××RESTPRM
   QUEUE RECORD2
END
IF RESTYPE.RT = 'VOL' THEN DO
   RECORD = 'CA_RESTORE 'RMODE.RM' 'RESTDSN' 'RESTVOL' -'
   QUEUE RECORD
   RECORD2 = '    "/* -PDT ON REP ON"'
   QUEUE RECORD2
END
RETURN
/*     */
BUILD_RESTORE_PARMS_TCPIP:
"DELSTACK"
RESTPRM = RESTDPN××RESTFN '-PDT ON -SUB ON -REP ON"'
RCD.1 = "SET INPUT VERIFY ON"
RCD.2 = "ON ERROR EXIT ERROR"
RCD.3 = "CONNECT "SERVER" "LANID" "LANPW
RCD.4 = "SEND -MODE RESTORE "RESTDSN" -"
RCD.5 = '"!UARESTORE 'RMODE.RM RESTDSN RESTVOL' -'
RCD.6 = '   '××RESTPRM
RCD.7 = '-LOG RESTORE.LOG  -ERR RESTORE.ERR" {HOST:REMOTE}.{DATE(1)}'
IF RESTYPE.RT = 'FILE' THEN DO R = 1 TO 6
   QUEUE RCD.R
END
IF RESTYPE.RT = 'DRCT' THEN DO
   RESTPRM = RESTDPN"* -PDT ON -SUB ON -REP ON"
   RCD.6 = '   '××RESTPRM
   DO R = 1 TO 6
      QUEUE RCD.R
   END
END
IF RESTYPE.RT = 'VOL' THEN DO
   RCD.6 = "     /* -PDT ON REP ON"
   DO R = 1 TO 6
      QUEUE RCD.R
   END
END
RETURN
/*     */
WRITE_PDS_MEMBER:
ADDRESS TSO
"ALLOC DA('"OUTPDS"("OUTMEMB")') FILE(NWDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('OUTPDS'('OUTMEMB'). ***'
   SAY '*** NWRESTOR EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
NUMRCDS = QUEUED()
"EXECIO" NUMRCDS "DISKW NWDD (FINIS"
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** WRITE ERROR: ERROR WRITING 'OUTPDS'('OUTMEMB'). ***'
   SAY '*** NWRESTOR EXEC TASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
RETURN
/*     */
SUBMIT_RESTORE_JOB:
ADDRESS TSO
"SUBMIT ('"SUBPDS"("RMEMB")')"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** SUBMIT ERROR: MEMBER ( 'SUBPDS'('RMEMB'). ***'
   SAY '*** NWRESTOR EXEC TASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
RETURN
