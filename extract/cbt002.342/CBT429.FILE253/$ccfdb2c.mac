/*  REXX EXEC : ( $CCFDB2C ).
    FUNCTION  : CALLED BY TSO COMMAND APPLICATION TABLE TASK ( DB2C )
                TO PROVIDE AN ISPF DIALOG PANEL FOR DB2 COBOL2 CICS
                PROGRAM COMPILE SERVICES WITH CA-LIBRARIAN INTERFACE.
                                                                      */
TRACE O
/*     */
HOUSE_KEEPING:
ADDRESS TSO
PACKG = 'Y'
BIND = 'Y'
QACOMP = 'N'
INTRTST = 'Y'
EXPLN = 'YES'
DB2SYS = 'DSNY'
DB2S = DB2SYS
DB2LOC = 'DB2SYSY'
DB2TYPE = 'CICS'
DB2QUAL = 'BUILD'
DB2NODE = 'DB2Y'
DB2VERS = 'SYSS.DB2.V3R1M0.'
DB2LIB = 'SYS1.DB2.V3R1M0.SDSNLOAD'
DB2COLL = ''
CLASS = 'C'
MVS = 'SYSA'
ACCTSW = 'NO'
EMERGSW = 'NO'
RJCTSW = 'NO'
X = MSG("OFF")
NOMEMB = 'MEMBER NOT FOUND'
TSOID = SYSVAR(SYSUID)
ACCTCCF = 5200010520000000
GRANTPDS = 'SYSS.TESTCCF.GRANT.CNTLLIB'
PARMLIB = 'SYSS.TESTCCF.DB2.TURNOVER.PARMLIB'
DB2CNTL = SYSDSN("'"PARMLIB"'")
IF DB2CNTL = 'DATASET NOT FOUND' THEN DO
   SAY '*** PARMLIB ERROR: DATASET NOT FOUND FOR ('PARMLIB'). ***'
   SAY '*** CCF DB2C EXEC TASK CANCELLED - RC = '028'. ***'
   EXIT 028
END
C1 = 1
C2 = 2
C3 = 4
C4 = 5
D1 = 1
D2 = 2
D3 = 4
D4 = 5
COPYLIB.1 = 'SYS1.TESTCOPY.MASTER'
COPYLIB.2 = 'SYS1.TURNCOPY.MASTER'
COPYLIB.3 = 'SYS1.RJCTCOPY.MASTER'
COPYLIB.4 = 'SYS1.QACOPY.MASTER'
COPYLIB.5 = 'SYS1.PRODCOPY.MASTER'
COPYLIB.6 = 'SYS1.EMRGCOPY.MASTER'
EMRGID = SUBSTR(TSOID,1,6)
IF EMRGID = 'TECH29' THEN DO
   EMERGSW = 'YES'
   CLASS = 'P'
   MVS = 'SYSA'
   EXPLN = 'NO'
   C1 = 6
   C2 = 5
   C3 = 4
   C4 = 2
   D1 = 6
   D2 = 5
   D3 = 4
   D4 = 2
   DB2SYS = 'DSNA'
   DB2S = DB2SYS
   MASTER = 'SYS1.EMRGSRCE.MASTER'
   CPYMAST = 'SYS1.EMRGCOPY.MASTER'
   CCFLOAD = 'SYS1.EMERGNCY.CICS.LOADLIB'
   LOADLIB = 'SYS1.EMERGNCY.CICS.LOADLIB'
   COMPMSG = TSOID'.EMRG.DB2.CIC'
   SKELJCL = 'CCFDB2E2'
END
ADDRESS ISPEXEC
"CONTROL ERRORS RETURN"
"FTCLOSE"
"VGET (ACCTCDE) PROFILE"
IF RC ^= 0 THEN DO
   ACCTSW = 'YES'
   ACCTCDE = ACCTCCF
END
"VGET (CCFLOAD) PROFILE"
IF RC ^= 0 THEN CCFLOAD = 'SYS1.XXXXX.CICS.LOADLIB'
/*
        M A I N   R O U T I N E   S E C T I O N      */
/*     */
DISPLAY_PANEL:
DO FOREVER
   ADDRESS ISPEXEC "DISPLAY PANEL($CCFCPN2)"
   SRC = RC
   IF SRC = 8 THEN LEAVE
   IF SRC > 8 THEN DO
      SAY '*** ERROR INVOKING ISPF DIALOG PANEL ( $CCFCPN2 ).***'
      SAY '*** DB2C EXEC TASK CANCELLED - RC = 'SRC'.***'
      EXIT SRC
   END
   MASTER = LIBPRJ××'.'××LIBGRP××'.'××LIBTYP
   CALL CHECK_MASTER_MEMBER
   IF MODSW = 'NO' THEN ITERATE
   DB2SYS = DB2S
   IF DB2SYS = 'DB2T' × DB2SYS = 'DB2P' THEN DO
      DB2NODE = DB2SYS
      DB2VERS = 'SYSS.DB2.V3R1M0.'
      DB2LIB = 'SYS1.DB2.V3R1M0.SDSNLOAD'
   END
   DB2RUNLB = DB2VERS××DB2NODE'.RUNLIB.LOAD'
   CALL CHECK_OPTIMIZE_FLAG
   CTYP = COMPTYP
   DB2PLAN = DB2COLL
   IF LIBGRP = 'RJCTSRCE' THEN DO
      RJCTSW = 'YES'
      SKELJCL = 'CCFDB2R2'
      COMPMSG = TSOID'.RJCT.DB2.CIC'
      CPYMAST = 'SYS1.RJCTCOPY.MASTER'
      CCFLOAD = 'SYS1.REJECT.CICS.LOADLIB'
      MASTER = 'SYS1.RJCTSRCE.MASTER'
      LOADLIB = 'SYS1.REJECT.CICS.LOADLIB'
   END
   CALL CHECK_GRANT_CNTLLIB
   IF QACOMP = 'Y' & EMERGSW = 'NO' THEN DO
      RECORD = MEMBER DB2COLL DB2TYPE TSOID DB2SYS DB2QUAL DB2VERS DB2NO
      CALL BUILD_TURNOVER_PARMS
      IF WOMSG = 'YES' THEN ITERATE
      INTERPRET CALL LABEL
      IF WRITESW = 'ERROR' THEN CALL PARMLIB_WRITE_ERROR
   END
   CALL BUILD_COPYBOOK_SEARCH_CHAIN
   CALL SELECT_COMPILE_JCL
   IF SKELSW = 'ERROR' THEN ITERATE
   CALL SUBMIT_COMPILE_JCL
   COMPTYP = ''
   MEMBER = ''
   DB2COLL = ''
END
ADDRESS ISPEXEC
IF ACCTSW = 'YES' THEN "VPUT (ACCTCDE) PROFILE"
IF EMERGSW = 'NO' THEN "VPUT (CCFLOAD) PROFILE"
ADDRESS TSO
"FREE F("LIBDD")"
"FREE F("MASTDD")"
EXIT
/*
          S U B R O U T I N E   S E C T I O N        */
/*     */
CHECK_MASTER_MEMBER:
ADDRESS TSO
MODSW = 'NO'
LIBDSN = "'"MASTER"("MEMBER")'"
LIBDD = LIBALLOC(LIBDSN)
IF LIBDD = "ERROR" THEN DO
   SAY '*** ALLOCATION ERROR: ('MASTER'('MEMBER'). ***'
   SAY '*** DYNAMIC ALLOCATION FAILED FOR THE MASTER DATASET - RETRY TAS
   SAY '*** COMPB COMPILE SUBTASK CANCELLED. ***'
   EXIT
END
MASTDD = LIBALLOC("'"MASTER"'")
MASTMEM = XLIBEMEM(MASTDD,MEMBER)
"EXECIO 0 DISKR" MASTDD "(FINIS"
IF MASTMEM = ""  THEN DO
   "FREE F("LIBDD")"
   "FREE F("MASTDD")"
   ADDRESS ISPEXEC
   ZERRMSG = $CCFA007
   "SETMSG MSG($CCFA007)"
   RETURN
END
MODSW = 'YES'
RETURN
/*     */
CHECK_OPTIMIZE_FLAG:
ADDRESS TSO
OPTIMIZE_SW = 'NO'
"EXECIO * DISKR" LIBDD "(STEM DATA. FINIS"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('MASTER'('MEMBER'). ***'
   SAY '*** UNABLE TO READ/CHECK LIBRARIAN MASTER MEMBER - RETRY TASK. *
   SAY '*** DB2C COMPILE SUBTASK CANCELLED. ***'
   EXIT
END
DO I = 1 TO DATA.0
   OPTFLAG = POS('OPT2-FLAG',DATA.I)
   IF OPTFLAG ^= 0 THEN DO
      OPTIMIZE_SW = 'YES'
      LEAVE
   END
END
RETURN
/*     */
CHECK_GRANT_CNTLLIB:
IF EMERGSW = 'YES' THEN RETURN
GRANT = 'Y'
GMEMB = SYSDSN("'"GRANTPDS"("DB2PLAN")'")
IF GMEMB = NOMEMB THEN RETURN
ADDRESS TSO
"ALLOC DA('"GRANTPDS"("DB2PLAN")') F(PARMDD) SHR"
"EXECIO * DISKR PARMDD (FINIS STEM GPARM."
"FREE F(PARMDD)"
DO I = 1 TO GPARM.0
   IF GPARM.I = DB2SYS THEN GRANT = 'N'
END
RETURN
/*     */
BUILD_TURNOVER_PARMS:
IF EMERGSW = 'YES' THEN RETURN
ADDRESS ISPEXEC
WOMSG = 'NO'
WOPRFX = SUBSTR(WORKORDR,1,2)
IF WOPRFX ^= 'WO' THEN DO
   WOMSG = 'YES'
   ZERRMSG = $CCFA008
   "SETMSG MSG($CCFA008)"
   RETURN
END
WOLEN = LENGTH(WORKORDR)
IF WOLEN < 8 THEN DO
   WOMSG = 'YES'
   ZERRMSG = $CCFA009
   "SETMSG MSG($CCFA009)"
   RETURN
END
ADDRESS TSO
X = MSG("OFF")
"FREE F(PARMDD)"
LABEL = 'PARMLIB_DATASET_ERROR'
DSN = SYSDSN("'"PARMLIB"("WORKORDR")'")
IF DSN = 'OK' THEN DO
   "ALLOC DA('"PARMLIB"("WORKORDR")') F(PARMDD) SHR"
   "EXECIO * DISKR PARMDD (FINIS STEM DATA."
   LABEL = 'REWRITE_TURNOVER_PARMS'
END
IF DSN = NOMEMB THEN DO
   "ALLOC DA('"PARMLIB"("WORKORDR")') F(PARMDD) SHR"
   LABEL = 'WRITE_TURNOVER_PARMS'
END
RETURN
/*     */
WRITE_TURNOVER_PARMS:
IF EMERGSW = 'YES' THEN RETURN
ADDRESS TSO
WRITESW = 'OK'
"DELSTACK"
QUEUE RECORD
"EXECIO 1 DISKW PARMDD (FINIS"
SRC = RC
"FREE F(PARMDD)"
IF SRC ^= 0 THEN WRITESW = 'ERROR'
RETURN
/*     */
REWRITE_TURNOVER_PARMS:
IF EMERGSW = 'YES' THEN RETURN
ADDRESS TSO
WRITESW = 'OK'
MATCHSW = 'NO'
"DELSTACK"
DO D = 1 TO DATA.0
   PMEMBER = WORD(DATA.D,1)
   IF PMEMBER = MEMBER THEN DO
      MATCHSW = 'YES'
      QUEUE RECORD
      ITERATE
   END
   QUEUE DATA.D
END
RCDCNT = QUEUED()
IF MATCHSW = 'NO' THEN DO
   RCDCNT = RCDCNT + 1
   QUEUE RECORD
END
"EXECIO" RCDCNT "DISKW PARMDD (FINIS"
SRC = RC
"FREE F(PARMDD)"
IF SRC ^= 0 THEN WRITESW = 'ERROR'
RETURN
/*     */
BUILD_COPYBOOK_SEARCH_CHAIN:
COPYLB1 = COPYLIB.C1
COPYLB2 = COPYLIB.C2
COPYLB3 = COPYLIB.C3
COPYLB4 = COPYLIB.C4
DCLLIB1 = COPYLIB.D1
DCLLIB2 = COPYLIB.D2
DCLLIB3 = COPYLIB.D3
DCLLIB4 = COPYLIB.D4
RETURN
/*     */
SELECT_COMPILE_JCL:
SKELSW = 'OK'
IF EMERGSW = 'YES' × RJCTSW = 'YES' THEN RETURN
MASTER = LIBPRJ××'.'LIBGRP××'.'LIBTYP
CPYMAST = LIBPRJ××'.TESTCOPY.MASTER'
LOADLIB = CCFLOAD
IF LOADLIB = 'SYS1.EMERGNCY.CICS.LOADLIB' THEN DO
   IF MASTER ^= 'SYS1.EMRGSRCE.MASTER' THEN DO
      SKELSW = 'ERROR'
      EMRGMAST = 'SYS1.EMRGSRCE.MASTER'
      ZERRMSG = $CCFA100
      ADDRESS ISPEXEC "SETMSG MSG($CCFA100)"
      RETURN
   END
END
IF CTYP = 1 & GRANT = 'Y' THEN DO
   IF INTRTST = 'Y' & OPTIMIZE_SW = 'NO' THEN SKELJCL = 'CCFDB2C1'
   IF INTRTST = 'Y' & OPTIMIZE_SW = 'YES' THEN SKELJCL = 'CCFDB2C8'
   IF INTRTST = 'N' & OPTIMIZE_SW = 'NO' THEN SKELJCL = 'CCFDB2C2'
   IF INTRTST = 'N' & OPTIMIZE_SW = 'YES' THEN SKELJCL = 'CCFDB2C9'
END
IF CTYP = 1 & GRANT = 'N' THEN DO
   IF INTRTST = 'Y' & OPTIMIZE_SW = 'NO' THEN SKELJCL = 'CCFDB2C3'
   IF INTRTST = 'Y' & OPTIMIZE_SW = 'YES' THEN SKELJCL = 'CCFDB2CA'
   IF INTRTST = 'N' & OPTIMIZE_SW = 'NO' THEN SKELJCL = 'CCFDB2C4'
   IF INTRTST = 'N' & OPTIMIZE_SW = 'YES' THEN SKELJCL = 'CCFDB2CB'
END
IF CTYP = 2 THEN SKELJCL = 'CCFDB2C5'
IF CTYP = 3 THEN DO
   IF GRANT = 'Y' THEN SKELJCL = 'CCFDB2C6'
   IF GRANT = 'N' THEN SKELJCL = 'CCFDB2C7'
END
SELECT
   WHEN SKELJCL = 'CCFDB2C1' THEN COMPMSG = TSOID××'.DB2.CICS.IGT'
   WHEN SKELJCL = 'CCFDB2C2' THEN COMPMSG = TSOID××'.DB2.CICS.GNI'
   WHEN SKELJCL = 'CCFDB2C3' THEN COMPMSG = TSOID××'.DB2.CICS.ING'
   WHEN SKELJCL = 'CCFDB2C4' THEN COMPMSG = TSOID××'.DB2.CICS.NGI'
   WHEN SKELJCL = 'CCFDB2C5' THEN COMPMSG = TSOID××'.DB2.CICS.PKO'
   WHEN SKELJCL = 'CCFDB2C6' THEN COMPMSG = TSOID××'.DB2.CICS.BGT'
   WHEN SKELJCL = 'CCFDB2C7' THEN COMPMSG = TSOID××'.DB2.CICS.BNG'
  OTHERWISE COMPMSG = TSOID××'.DB2.CICS.LNK'
END
RETURN
/*     */
SUBMIT_COMPILE_JCL:
ADDRESS ISPEXEC
"FTOPEN TEMP"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA001
   "SETMSG MSG($CCFA001)"
   RETURN
END
"FTINCL $CCFJOBD"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA002
   "SETMSG MSG($CCFA002)"
   RETURN
END
"FTINCL" SKELJCL
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA003
   "SETMSG MSG($CCFA003)"
   RETURN
END
"FTCLOSE"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA005
   RETURN
END
"VGET ZTEMPF"
ADDRESS TSO "SUBMIT '"ZTEMPF"'"
SRC = RC
IF SRC ^= 0 THEN DO
   ZERRMSG = $CCFA006
   RETURN
END
ZERRMSG = $CCFA000
ADDRESS ISPEXEC "SETMSG MSG($CCFA000)"
RETURN
/*     */
PARMLIB_DATASET_ERROR:
SAY '*** PARMLIB DATASET ERROR: 'DSN' ('PARMLIB'). ***'
SAY '*** PARMLIB RECORD ENTRIES CANNOT BE WRITTEN. ***'
SAY '*** DB2C EXEC TASK CANCELLED - RETURN CODE ('110'). ***'
EXIT 110
/*     */
PARMLIB_WRITE_ERROR:
SAY '*** PARMLIB WRITE ERROR: ('PARMLIB'('WORKORDR'). ***'
SAY '*** PARMLIB RECORD ENTRIES NOT WRITTEN. ***'
SAY '*** DB2C EXEC TASK CANCELLED - RETURN CODE ('SRC'). ***'
EXIT SRC
