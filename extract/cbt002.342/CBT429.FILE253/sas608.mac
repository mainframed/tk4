/*********************************************************************
/*  PRODUCT: MVS SAS RELEASE 6.08                                  ***
/*  DOCUMENTATION: SAS Companion for the MVS Environment, Version 6***
/*  FROM: SAS INSTITUTE INC., SAS Campus Drive, Cary, NC 27513     ***
/*********************************************************************
PROC 0                                                            +
   ENTRY   (SASXA1)               /* Entry point name          */ +
   CONFIG  ()                     /* User CONFIG file DSN      */ +
   SASUSER ()                     /* SASUSER file DSN          */ +
   AUTOEXEC ()                    /* User AUTOEXEC DSN         */ +
   SASAUTOS ()                    /* User SASAUTOS DSN         */ +
   LOAD     ()                    /* User load library DSN     */ +
   /* --------ALLOW ALTERNATE DDNAMES ------------------------ */ +
   DDCONFIG () DFCONFIG(CONFIG)   /* CONFIG= file DDname       */ +
   DDSASUSR () DFSASUSR(SASUSER)  /* SASUSER= data lib DDname  */ +
   DDAUTOEX () DFAUTOEX(SASEXEC)  /* AUTOEXEC= file DDname     */ +
   DDSASAUT () DFSASAUT(SASAUTOS) /* SASAUTOS= library  DDname */ +
   DDPARMCD () DFPARMCD(SASPARM)  /* PARMCARDS= file DDname    */ +
   DDWORK   () DFWORK  (WORK)     /* WORK= data lib DDname     */ +
   DDSYSIN  () DFSYSIN (SYSIN)    /* SYSIN= file DDname        */ +
   DDLOG    () DFLOG   (SASLOG)   /* LOG= file DDname          */ +
   DDPRINT  () DFPRINT (SASLIST)  /* PRINT= file DDname        */ +
   DDSASMSG () DFSASMSG(SASMSG)   /* SASMSG=  library DDname   */ +
   DDSASHLP () DFSASHLP(SASHELP)  /* SASHELP= data lib DDname  */ +
   OPTIONS ()                     /* SAS options               */ +
   PARMCARD(1)                    /* parmcard file size        */ +
   UNITS   (CYL)                  /* alloc unit for LOG, PARMS */ +
   WORK    ('500,200')          /* WORK data lib size in blks*/ +
   INPUT   (*)                    /* SAS source i/p DSN        */ +
   LOG     (*)                    /* SAS log DSN/size          */ +
   PRINT   (*)                    /* SAS list DSN              */ +
   BLOCK   (264)                  /* PRINT BLOCKSIZE           */ +
   LRECL   (260)                  /* PRINT LRECL               */ +
   SASLOAD ('''SYSS.SAS.V6R8M0.LIBRARY''')+
                                  /* SAS load library DSN      */ +
   SASMSG ('''SYSS.SAS.V6R8M0.SASMSG''')+
                                  /* SAS message library DSN   */ +
   SASHELP ('''SYSS.SAS.V6R8M0.SASHELP''')+
                                  /* SAS catalog library DSN   */ +
   MAUTS   ('''SYSS.SAS.V6R8M0.AUTOLIB''')+
                                  /* SAS macro source DSN      */ +
   SORTLINK(*)                    /* put system sort lib in    */ +
                                  /* STEPLIB?  * => No         */ +
   SORTLDSN('''SYS1.SORTLIB''')                              +
                                  /* system sort library DSN   */ +
   GO                             /* Continue previous session?*/ +
   FLUSH   NOFLUSH                /* Flush stack if error?     */ +
   STAE    NOSTAE                 /* Trap main task abends?    */ +
   STAI    NOSTAI                 /* Trap subtask abends?      */ +
   STAX    NOSTAX                 /* Trap attentions?          */ +
   STACK   NOSTACK                /* Create new i/p stack?     */ +
   SHARE   NOSHARE                /* Share subpool 78          */ +
   TRACE                          /* CLIST debugging           */
/*
/*--------------------------------------------------------------
/* Enable clist debugging options
/*--------------------------------------------------------------
/*
IF &TRACE NE THEN +
   CONTROL LIST CONLIST SYMLIST
CONTROL ASIS
/*
/* -----------------------------------------------------------
/* set DDnames and corresponding options appropriately
/* -----------------------------------------------------------
/*
IF &DDCONFIG NE THEN +
      SET OPTIONS=&STR(&OPTIONS CONFIG=&DDCONFIG)
ELSE +
      SET DDCONFIG=&DFCONFIG

IF &DDSASUSR NE THEN +
      SET OPTIONS=&STR(&OPTIONS SASUSER=&DDSASUSR)
ELSE +
      SET DDSASUSR=&DFSASUSR

IF &DDAUTOEX NE THEN +
      SET OPTIONS=&STR(&OPTIONS AUTOEXEC=&DDAUTOEX)
ELSE +
      SET DDAUTOEX=&DFAUTOEX

IF &DDSASAUT NE THEN +
      SET OPTIONS=&STR(&OPTIONS SASAUTOS=&DDSASAUT)
ELSE +
      SET DDSASAUT=&DFSASAUT

IF &DDPARMCD NE THEN +
      SET OPTIONS=&STR(&OPTIONS PARMCARDS=&DDPARMCD)
ELSE +
      SET DDPARMCD=&DFPARMCD

IF &DDWORK NE THEN +
      SET OPTIONS=&STR(&OPTIONS WORK=&DDWORK)
ELSE +
      SET DDWORK=&DFWORK

IF &DDSYSIN NE THEN +
      SET OPTIONS=&STR(&OPTIONS SYSIN=&DDSYSIN)
ELSE +
      SET DDSYSIN=&DFSYSIN

IF &DDLOG NE THEN +
      SET OPTIONS=&STR(&OPTIONS LOG=&DDLOG)
ELSE +
      SET DDLOG=&DFLOG

IF &DDPRINT NE THEN +
      SET OPTIONS=&STR(&OPTIONS PRINT=&DDPRINT)
ELSE +
      SET DDPRINT=&DFPRINT

IF &DDSASMSG NE THEN +
      SET OPTIONS=&STR(&OPTIONS SASMSG=&DDSASMSG)
ELSE +
      SET DDSASMSG=&DFSASMSG

IF &DDSASHLP NE THEN +
      SET OPTIONS=&STR(&OPTIONS SASHELP=&DDSASHLP)
ELSE +
      SET DDSASHLP=&DFSASHLP
/*
/*--------------------------------------------------------------
/* if SU11 installed then set SU11 to REUSE, else set it to null
/*--------------------------------------------------------------
/*
SET SU11=REUSE
/*
/*--------------------------------------------------------------
/* free files and attribute lists for reuse
/*--------------------------------------------------------------
/*
CONTROL NOMSG
FREE ATTR(SASDCB)
IF &SU11 EQ  THEN DO
  IF &GO EQ THEN DO
     FREE FILE(&DDSYSIN &DDLOG &DDPRINT &DDWORK &DDSASHLP &DDCONFIG  +
               &DDSASUSR &DDPARMCD &DDSASAUT &DDSASMSG SAMPSIO MAPS)
  END
  ELSE +
     FREE FILE(&DDSYSIN &DDLOG)
END
CONTROL MSG
/*
/*--------------------------------------------------------------
/* Allocate SOURCE data set
/*--------------------------------------------------------------
/*
IF &STR(&INPUT) NE &STR(*) THEN DO
   SET OPTIONS=&STR(&OPTIONS SYSIN=&DDSYSIN)
   ALLOC F(&DDSYSIN) DA(&INPUT) SHR &SU11
END
/*
/*--------------------------------------------------------------
/* Allocate LOG file data set
/*--------------------------------------------------------------
/*
IF &STR(&LOG) NE THEN DO
   IF &DATATYPE(&STR(&SUBSTR(1:1,&STR(&LOG)))) EQ CHAR THEN +
      ALLOC FILE(&DDLOG) DA(&LOG) &SU11
   ELSE +
      ALLOC FILE(&DDLOG) &UNITS SP(&LOG) &SU11
END
/*
/*--------------------------------------------------------------
/* Allocate SASEXEC data set
/*--------------------------------------------------------------
/*
IF &STR(&AUTOEXEC) NE THEN +
   ALLOC F(&DDAUTOEX) DA(&AUTOEXEC) SHR &SU11
/*
/*--------------------------------------------------------------
/* If GO, set NOWORKINIT so WORK not initialized
/* Allocate other data sets if no GO option
/*--------------------------------------------------------------
/*
IF &GO NE  THEN DO
  SET &OPTIONS = &STR(&OPTIONS NOWORKINIT)
END
ELSE DO
  /*
  /* Allocate config file    User config concatenated after, since
  /*                         later options supersede prior
  /*
  SET &CONFIGL = &STR('SYSS.SAS.V6R8M0.CNTLLIB(TSOXA)' +
  &CONFIG)
  ALLOC F(&DDCONFIG) DA(&CONFIGL) SHR &SU11
  /*
  /*
  /* Allocate WORK file data set
  /*
  /*
  ALLOC F(&DDWORK) SP(&WORK) DSORG(PS) UNIT(SYSDA) ROUND  +
        RECFM(F S) LRECL(6144) BLKSIZE(6144) &SU11
  /*
  /*
  /* Allocate MSG file data set
  /*
  /*
  ALLOC F(&DDSASMSG) DA(&SASMSG) SHR &SU11
  /*
  /*
  /* Allocate PRINT file data set
  /*
  /*
   IF &STR(&PRINT) NE THEN DO
     ATTRIB SASDCB RECFM(V B A) LRECL(&LRECL) BLKSIZE(&BLOCK) DSORG(PS)
     IF &DATATYPE(&STR(&SUBSTR(1:1,&STR(&PRINT)))) EQ CHAR THEN +
        ALLOC FILE(&DDPRINT) DA(&PRINT) USING(SASDCB) MOD &SU11
     ELSE +
        ALLOC FILE(&DDPRINT) &UNITS SP(&PRINT) USING(SASDCB) &SU11
     FREE ATTR(SASDCB)
   END
  /*
  /*
  /* Allocate HELP library
  /*
  /*
  ALLOC F(&DDSASHLP) DA(&SASHELP) SHR &SU11
  /*
  /*
  /* Allocate SASPARM for parms
  /*
  /*
  IF &STR(&PARMCARD) NE THEN +
     ALLOC FILE(&DDPARMCD) &UNITS SP(&PARMCARD) UNIT(SYSDA) &SU11
  /*
  /*
  /* Allocate SASUSER library   If SASUSER option specifies user file
  /*                            dsn, allocate it. Otherwise check for
  /*                            SASUSER by standard name.  If it does
  /*                            not exist, create it.  If it does, use
  /*                            it.
  /*      NOTE:  To use the &SYSDSN CLIST function as shown,
  /*      you need to have TSO/E Version 1, Release 3, or a
  /*      subsequent release, installed.
  /*
  IF &SYSPREF EQ  THEN +
    SET &USRPREF = &SYSUID
  ELSE +
    SET &USRPREF = &SYSPREF
  IF &STR(&SASUSER) EQ THEN +
      SET &SASUSER = &STR('&USRPREF..SAS608.SASUSER')
  SET STATE = &SYSDSN(&SASUSER)
  IF &STATE = OK  THEN +
     ALLOC F(&DDSASUSR) DA(&SASUSER) OLD &SU11
  ELSE +
  IF &STATE = DATASET NOT FOUND THEN DO
     WRITE Warning: SASUSER file does not exist, will be created.
     ALLOC F(&DDSASUSR) DA(&SASUSER) NEW CATALOG SP(30 5) ROUND +
           DSORG(PS) RECFM(F S) BLKSIZE(6144) &SU11
     END
  ELSE DO
     WRITE Warning: SASUSER file: &STATE
     WRITE          SASUSER file not allocated to this session
     END
  /*
  /*
  /* Allocate SASAUTOS autocall macro libraries
  /*
  /*
  SET SASAUTOS = &STR(&SASAUTOS &MAUTS)
  ALLOC F(&DDSASAUT) DA(&SASAUTOS) SHR &SU11
  /*
  /*
  /* Allocate SAMPSIO sample SAS data library
  /*
  /*
  ALLOC F(SAMPSIO) DA('SAS.SAS608.SAMPSIO') +
        SHR &SU11
 END
/*
/* put system sort link library in STEPLIB if needed
/*
IF &STR(&SORTLINK) NE THEN +
   SET SORTLDSN=&STR()
/*
/*
/* Invoke SAS
/*
/*
SET TASKLIB = &STR(&LOAD &SASLOAD &SORTLDSN)
SET PARM=&STR(T(&TASKLIB) E(&ENTRY) O('&OPTIONS') &FLUSH &NOFLUSH +
              &STAE &NOSTAE &STAI &NOSTAI &STAX &NOSTAX +
              &STACK &NOSTACK &SHARE &NOSHARE)
SASCP &PARM
SET RC=&LASTCC
CONTROL NOMSG
IF &AUTOEXEC NE  THEN +
  FREE F(&DDAUTOEX)
EXIT CODE(&RC)
