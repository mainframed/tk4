/* REXX DASD BUILD ANALYSIS */
TRUE = "1";
CNTCP = 1
FALSE = "0";
CPKCTR = 100;
SUMMCTR=1;
DASD.0885 = "3380DJ";
DASD.1770 = "3380E";
DASD.2655 = "3380K";
DASD.2226 = "33902";
DASD.3339 = "33903";
DASD.6678 = "33906";
CDRS.3380DJ = "100 11F 200 21F";
CDRS.3380E  = "480 49F";
CDRS.3380K  = "C40 C5F F00 F00";
CDRS.33902  = "3C0 3FF FC0 FFF";
CDRS.33903  = "EC0 EFF 1C0 1FF 200 2FF";
/* CDRS.33903  = "EC0 EFF 1C0 1FF"; DUMMY RANGE ADDED 9/23 */
CDRS.33906  = "F00 F00"; /* F00 IS END INDICATOR */
CLASSLIST="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
/* ALPHA LIST */
ABRPOOLS="ACIC APPL ART CICS DB2 EMC EMR MNT MVS PLAN " ×× ,
  "POS PHYS QA RAMI SEQ SMSC SMS SYSDA SYSTA SYS TART TSO " ×× ,
  "UART USER VSAM";
/* LIST BY IMP */
ABRPOOLSR="SYS CICS EMC DB2 SMS VSAM ART ACIC UART APPL EMR " ×× ,
  "MVS PLAN POS QA RAMI SEQ PHYS SMSC TSO USER MNT TART";
TEMP = "";
DO I = 1 TO WORDS(CDRS.3380DJ) BY 2;
  LLIM = X2D(WORD(CDRS.3380DJ,I));
  HLIM = X2D(WORD(CDRS.3380DJ,I+1));
     DO J = LLIM TO HLIM;
        TEMP = TEMP D2X(J);
     END;
END;
CDRS.3380DJ = TEMP;
TEMP = "";
DO I = 1 TO WORDS(CDRS.3380E) BY 2;
  LLIM = X2D(WORD(CDRS.3380E,I));
  HLIM = X2D(WORD(CDRS.3380E,I+1));
     DO J = LLIM TO HLIM;
        TEMP = TEMP D2X(J);
     END;
END;
CDRS.3380E = TEMP;
TEMP = "";
DO I = 1 TO WORDS(CDRS.3380K) BY 2;
  LLIM = X2D(WORD(CDRS.3380K,I));
  HLIM = X2D(WORD(CDRS.3380K,I+1));
     DO J = LLIM TO HLIM;
        TEMP = TEMP D2X(J);
     END;
END;
CDRS.3380K = TEMP;
TEMP = "";
DO I = 1 TO WORDS(CDRS.33902) BY 2;
  LLIM = X2D(WORD(CDRS.33902,I));
  HLIM = X2D(WORD(CDRS.33902,I+1));
     DO J = LLIM TO HLIM;
        TEMP = TEMP D2X(J);
     END;
END;
CDRS.33902 = TEMP;
TEMP = "";
DO I = 1 TO WORDS(CDRS.33903) BY 2;
  LLIM = X2D(WORD(CDRS.33903,I));
  HLIM = X2D(WORD(CDRS.33903,I+1));
     DO J = LLIM TO HLIM;
        TEMP = TEMP D2X(J);
     END;
END;
CDRS.33903 = TEMP;
TEMP = "";
DO I = 1 TO WORDS(CDRS.33906) BY 2;
  LLIM = X2D(WORD(CDRS.33906,I));
  HLIM = X2D(WORD(CDRS.33906,I+1));
     DO J = LLIM TO HLIM;
        TEMP = TEMP D2X(J);
     END;
END;
CDRS.33906 = TEMP;
INIT_REST_UNIT = WORD(CDRS.33902,1);
CDRS.33902 = DELWORD(CDRS.33902,1,1);
"CALL 'SYS1.TECH.COMMON.LOADLIB(DASDSCAN)'";
/* "CALL 'TECH110.USER.LOADLIB(DASDSCAN)'"; */
SAVERC=RC;
IF SAVERC^=0 THEN EXIT SAVERC;
"EXECIO * DISKR WORK (FINIS STEM DASDV.";
CHANGES = TRUE;
DO WHILE(CHANGES); /* BUBBLE SORT DESCENDING BY FRAG INDEX */
     CHANGES = FALSE;
     DO I = 1 TO DASDV.0-1;
          J = I+1;
          PARSE VAR DASDV.I . . . FRAGINDEX1 . ;
          PARSE VAR DASDV.J . . . FRAGINDEX2 . ;
          IF FRAGINDEX1 < FRAGINDEX2 THEN DO;
                 TEMP = DASDV.I;
                 DASDV.I = DASDV.J;
                 DASDV.J = TEMP;
                 CHANGES = TRUE;
                 END;
     END;
END;
FLAG_CNT=1
DO I = 1 TO DASDV.0;
  PARSE VAR DASDV.I VOLSER CYLCOUNT FREECYL FRAGINDEX . ;
  ABR_BACKUP_DSN = "'FDRABR.V"VOLSER"'";
  DUMMY = LISTDSI(ABR_BACKUP_DSN); /* SEE IF DATASET EXISTS */
  IF DUMMY^=0 THEN DO;
       DASDV.I = "DUMMY"; /* IGNORE THIS VOLUME */
       ITERATE I; /* LOOP */
       END;
/*** CPK SELECTION *****/
  TSTVSR = SUBSTR(VOLSER,1,4)
  INTERPRET VOLSER '= "NO"'
  IF TSTVSR = "APPL" ×,
     TSTVSR = "PLAN" ×,
     TSTVSR = "POS0" ×,
     TSTVSR = "TSO0" ×,
     TSTVSR = "USER" ×,
     TSTVSR = "QA00" ×,
     TSTVSR = "PHYS" ×,
     TSTVSR = "VSAM" ×,
     TSTVSR = "CICS" ×,
     TSTVSR = "DB20" ×,
     TSTVSR = "SEQD" ×,
     TSTVSR = "UART" ×,
     TSTVSR = "ARTH" ×,
     TSTVSR = "RAMI" ×,
     TSTVSR = "SMSU" ×,
     TSTVSR = "SMSC" ×,
     TSTVSR = "EMRG" THEN DO
     INTERPRET VOLSER '= "YES"'
     END
/***********************/
  POOLCTR=WORDS(ABRPOOLS);
  DO J=1 TO POOLCTR;
     POOL=WORD(ABRPOOLS,J);
     IF ABBREV(VOLSER,POOL) THEN DO;
           IF SYMBOL('POOLLIST.POOL')="VAR" THEN ,
               POOLLIST.POOL=POOLLIST.POOL VOLSER;
            ELSE POOLLIST.POOL=VOLSER;
          LEAVE J;
         END;
  END;
END;
ABRPOOLS = ABRPOOLSR; /* REORG LIST FOR ORDER TO PROCESS IN */
DO J=1 TO POOLCTR;
     POOL=WORD(ABRPOOLS,J);
     VOLCNT=WORDS(POOLLIST.POOL);
     JOBC=SUBSTR(CLASSLIST,J,1);
SUMM.SUMMCTR="****** POOL" LEFT(POOL,7) "RESTORE JOBCLASS:" JOBC ,
        "VOLCNT:" VOLCNT;
     SUMMCTR=SUMMCTR+1;
END;
JCLD.0 = 40; /* COUNT OF DUMP JOB STATEMENTS */
JCLD.1 = "//D$XXXXXX JOB 530401053000,'SYSTEM.BACKUP',";
JCLD.2 = "// NOTIFY=TECH251,CLASS=S,MSGCLASS=G";
JCLD.3  = "//DUMPIT EXEC PGM=FDRABR,REGION=9000K";
JCLD.4  = "//SYSPRINT DD SYSOUT=*";
JCLD.5  = "//SYSPRIN1 DD SYSOUT=*";
JCLD.6  = "//DISK1 DD UNIT=XXXX,";
JCLD.7  = "// DISP=SHR,";
JCLD.8  = "// VOL=SER=XXXXXX";
JCLD.9 ="//TAPE1 DD DSN=FXXXXXX,DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)";
JCLD.10 = "//SYSUDUMP DD SYSOUT=X";
JCLD.11 = "//SYSIN DD *";
JCLD.12 = " DUMP TYPE=FDR,";
JCLD.13 = "  AUTOUPD=YES,";
JCLD.14 = "  BUFNO=MAX,";
JCLD.15 = "  COMPRESS=ALL,";
JCLD.16 = "  DATA=ALL,";
JCLD.17 = "  DATEP=NONE,";
JCLD.18 = "  DSNENQ=TEST,";
JCLD.19 = "  ENQ=RESERVE,";
JCLD.20 = "  ENQERR=NO,";
JCLD.21 = "  ENQERR=PROCESS,";
JCLD.22 = "  FORMAT=NEW,";
JCLD.23 = "  LBPZERO=INVALID,";
JCLD.24 = "  MAXERR=1,";
JCLD.25 = "  PRINT=ABR,";
JCLD.26 = "  RETPD=9999,";
JCLD.27 = "  SMSCONSTRUCT=NO,";
JCLD.28 = "  SMSMANAGE=NO";
JCLD.29 = "/*";
JCLD.30 = "// IF (DUMPIT.RC>4 × DUMPIT.ABEND=TRUE) THEN";
JCLD.31 = "//DUMPFAIL EXEC WTO";
JCLD.32 = "//SYSIN    DD *";
JCLD.33 = " *** WARNING";
JCLD.34 = " ** ";
JCLD.35 = " ** ERROR DURING FULL VOLUME BACKUP OF VOL > XXXXXX <.";
JCLD.36 = " ** ";
JCLD.37 = " *** WARNING ";
JCLD.38 = "/*";
JCLD.39 = "// ENDIF";
JCLD.40 = "//";
JCLX.0 = 41; /* COUNT OF INCR JOB STATEMENTS */
JCLX.1 = "//I$XXXX JOB 530401053000,'SYSTEM.BACKUP',";
JCLX.2 = "// NOTIFY=TECH251,";
JCLX.3 = "// CLASS=S,MSGCLASS=G";
JCLX.4 = "//DUMPIT EXEC PGM=FDRABR,REGION=9000K";
JCLX.5 = "//SYSPRIN1 DD SYSOUT=*";
JCLX.6 = "//SYSPRIN2 DD SYSOUT=*";
JCLX.7 = "//SYSPRIN3 DD SYSOUT=*";
JCLX.8="//TAPE1 DD DSN=I1XXXX,DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)";
JCLX.9="//TAPE2 DD DSN=I2XXXX,DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)";
JCLX.10="//TAPE3 DD DSN=I3XXXX,DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)";
JCLX.11= "//SYSPRINT DD SYSOUT=*";
JCLX.12 = "//SYSUDUMP DD SYSOUT=X";
JCLX.13 = "//SYSIN DD *";
JCLX.14 = " DUMP TYPE=ABR,";
JCLX.15 = "  AUTOUPD=YES,";
JCLX.16 = "  BUFNO=MAX,";
JCLX.17 = "  COMPRESS=ALL,";
JCLX.18 = "  DATA=USED,";
JCLX.19 = "  DATEP=NONE,";
JCLX.20 = "  DSNENQ=TEST,";
JCLX.21 = "  ENQ=RESERVE,";
JCLX.22 = "  ENQERR=NO,";
JCLX.23 = "  ENQERR=PROCESS,";
JCLX.24 = "  FORMAT=NEW,";
JCLX.25 = "  LBPZERO=INVALID,";
JCLX.26 = "  MAXERR=1,";
JCLX.27 = "  PRINT=ABR,";
JCLX.28 = "  RETPD=9999,";
JCLX.29 = "  SMSCONSTRUCT=NO,";
JCLX.30 = "  SMSMANAGE=NO";
JCLXSTP = 30
JCLY.4  = "//DUMPIT EXEC PGM=FDRABR,REGION=9000K";
/* ********* 30 *********** */
JCLX.31 = "/*";
JCLX.32 = "// IF (DUMPIT.RC>4 × DUMPIT.ABEND=TRUE) THEN";
JCLX.33 = "//DUMPFAIL EXEC WTO";
JCLX.34 = "//SYSIN    DD * ";
JCLX.35 = " *** WARNING";
JCLX.36 = " ** ";
JCLX.37 = " ** ERROR DURING INCREMENTAL BACKUP OF VOL GROUP > XXXX <.";
JCLX.38 = " ** ";
JCLX.39 = " *** WARNING";
JCLX.40 = "/*";
JCLX.41 = "// ENDIF";
JCLR.0 = 47; /* COUNT OF RESTORE JOB STATEMENTS */
JCLR.1 = "//R$XXXXXX JOB 530401053000,'TECH SUPPRT',";
JCLR.2 = "// CLASS=?,MSGCLASS=X,MSGLEVEL=(1,1),REGION=6M";
JCLR.3 = "//JOBLIB DD DSN=IMPORT.LINKLIB1,DISP=SHR";
JCLR.4 = "//ACTIVE EXEC PGM=IKJEFT01,REGION=6M,";
JCLR.5 = "// PARM='ALTER ''FDRABR.COMDISCO.WEEKREST.VXXXXXX'' OWNER(I)'"
JCLR.6 = "//SYSTSPRT DD SYSOUT=*";
JCLR.7 = "//SYSTSIN DD DUMMY";
JCLR.8 = "//*";
JCLR.9 = "//*";
JCLR.10 = "//*";
JCLR.11 = "//*";
JCLR.12 = "//*";
JCLR.13 = "//RESTIT EXEC PGM=FDRABR,REGION=6M";
JCLR.14 = "//SYSPRINT DD SYSOUT=*";
JCLR.15 = "//ABRWORK  DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))";
JCLR.16 = "//DISK1 DD UNIT=XXXX,VOL=SER=XXXXXX,DISP=OLD";
JCLR.17 = "//SYSIN DD *";
JCLR.18 = " RESTORE TYPE=FDR,";
JCLR.19 = "   CONFMESS=NO,";
JCLR.20 = "   COPY=1,";
JCLR.21 = "  CPYVOLID=YES,";
JCLR.22 = "  DYNTAPE,";
JCLR.23 = "  MAXERR=1,";
JCLR.24 = "  SMSPROT=NONE,";
JCLR.25 = "  VOLRESET=NO";
JCLR.26 = " SELECT  VOL=XXXXXX,GEN=CURRENT";
JCLR.27 = "/*";
JCLR.28 = "//IXITIT EXEC PGM=ICKDSF,REGION=6M";
JCLR.29 = "//SYSPRINT DD SYSOUT=*";
JCLR.30 = "//DISK1 DD UNIT=XXXX,VOL=SER=XXXXXX,DISP=OLD";
JCLR.31 = "//SYSIN DD *";
JCLR.32=" BUILDIX DDNAME(DISK1) IXVTOC";
JCLR.33 = "//COMPLETE EXEC PGM=IKJEFT01,COND=(0,NE,RESTIT),";
JCLR.34="// PARM='ALTER ''FDRABR.COMDISCO.WEEKREST.VXXXXXX'' OWNER(C)'"
JCLR.35 = "//SYSTSPRT DD SYSOUT=*";
JCLR.36 = "//SYSTSIN DD DUMMY";
JCLR.37 = "//*";
JCLR.38 = "//*";
JCLR.39 = "//*";
JCLR.40 = "//*";
JCLR.41 = "//*";
JCLR.42 = "//*";
JCLR.43 = "//FAILURE EXEC PGM=IKJEFT01,COND=((0,GE,RESTIT),EVEN),";
JCLR.44="// PARM='ALTER ''FDRABR.COMDISCO.WEEKREST.VXXXXXX'' OWNER(F)'"
JCLR.45 = "//SYSTSPRT DD SYSOUT=*";
JCLR.46 = "//SYSTSIN DD DUMMY";
JCLR.47 = "//";
JCLI.0 = 8; /* COUNT OF INIT JOB STATEMENTS */
JCLI.1 = "//I$XXXXXX JOB 530401053000,'TECH SUPPRT',NOTIFY=$CDRS1,";
JCLI.2 = "// CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)";
JCLI.3 = "//INITIT EXEC PGM=ICKDSF,REGION=6M";
JCLI.4 = "//SYSPRINT DD SYSOUT=*";
JCLI.5 = "//SYSIN DD *";
JCLI.6=" INIT UNIT(XXX) NVFY NCHK INDEX(1,0,15) VTOC(0,1,14) -";
JCLI.7 = "   NOMAP PRG NVAL VOLID(XXXXXX)";
JCLI.8 = "//";
JCLC.0 = 39; /* COMPAKTOR */
JCLC.1 = "// IF (DUMPIT.RC<=4 & ^DUMPIT.ABEND=TRUE) THEN";
JCLC.2 = "//CPKIT  EXEC PGM=FDRCPK,REGION=9000K";
JCLC.3 = "//STEPLIB  DD DSN=SYS1.FDR.V5R2M33.LOADLIB,DISP=SHR";
JCLC.4 = "//SYSPRINT DD SYSOUT=*";
JCLC.5 = "//SYSMAP   DD SYSOUT=*";
JCLC.6 = "//SYSSUMM  DD SYSOUT=*";
JCLC.7 = "//SYSUDUMP DD SYSOUT=X";
JCLC.8 = "//SYSIN DD *";
JCLC.9 = " CPK TYPE=FASTCPK,VOL=(XXXXXX),ACTMESS=NO,CONFMESS=NO,";
JCLC.10= " HI=NO,MAPS=SUMMARY,NOSECOND=NORLSE,ENQ=RESERVE,DSNENQ=USE,";
JCLC.11 = " PSRLSE=ALL,UNABLE=IGNORE,SIZEKEEP=(,,,10000),";
JCLC.12 = " O=MAXFREE,T=KEEP,V=NOCHANGE,CPKFREEX=10";
JCLC.13 = "/*";
JCLC.14 = "// ENDIF";
JCLC.15 = "//*";
JCLC.16 = "// IF (CPKIT.RC>0 × CPKIT.ABEND=TRUE) THEN";
JCLC.17 = "//MAPIT    EXEC PGM=FDRCPK";
JCLC.18 = "//TAPE1    DD DUMMY";
JCLC.19 = "//SYSMAP   DD SYSOUT=*";
JCLC.20 = "//SYSPRINT DD SYSOUT=*";
JCLC.21 = "//SYSUDUMP DD SYSOUT=*";
JCLC.22 = "//SYSIN    DD *";
JCLC.23 = "   MAP VOL=XXXXXX,MAPS=SUMMARY ";
JCLC.24 = "/*";
JCLC.25 = "// ENDIF ";
JCLC.26 = "// IF (MAPIT.RC>0 × MAPIT.ABEND=TRUE) THEN";
JCLC.27 = "//CPKFAIL  EXEC WTO";
JCLC.28 = "//SYSIN    DD * ";
JCLC.29 = " *** WARNING ";
JCLC.30 = " ** ";
JCLC.31 = " ** AN ERROR HAS OCCURRED DURING THE COMPACTION OF";
JCLC.32 = " ** VOLUME > XXXXXX <. THIS PROBLEM MUST BE RESOLVED";
JCLC.33 = " ** BEFORE THE SCHEDULE CONTINUES. CONTACT TECH SUPPORT";
JCLC.34 = " ** PERSON ON CALL.";
JCLC.35 = " ** ";
JCLC.36 = " *** WARNING ";
JCLC.37 = "/* ";
JCLC.38 = "// ENDIF ";
JCLC.39 = "// ";
HEADTAIL = TRUE;
/* ****************** */
CPKC   = " O=MAXFREE,T=KEEP,V=NOCHANGE,CPKFREEX=10";
CPKNC  = " O=MINEXTS,T=KEEP,V=NOCHANGE";
/* ****************** */
SAY "";
SAY "****** INITIAL RESTORE 3390 UNIT:" ,
     INIT_REST_UNIT;
SAY "";
SUMM.SUMMCTR = "****** INITIAL RESTORE 3390 UNIT:" ,
     INIT_REST_UNIT;
SUMMCTR=SUMMCTR+1;
/* LOOP */
POOLCTR=WORDS(ABRPOOLS);
DO ZZ=1 TO POOLCTR;
JOBC = SUBSTR(CLASSLIST,ZZ,1);
POOL=WORD(ABRPOOLS,ZZ);
POOLMEM=STRIP(SUBSTR("POOL"POOL,1,8));
DROP DUMP.;
DROP INCR.;
DROP REST.;
DROP INIT.;
DUMPCTR=1;
INCRCTR=1;
RESTCTR=1;
INITCTR=1;
"FREE F(INIT)";
"FREE F(DUMP)";
"FREE F(INCR)";
"FREE F(REST)";
"ALLOC F(INIT) DA('SYSS.COMDISCO.INITJOBS("POOLMEM")') SHR";
IF RC^=0 THEN EXIT 99;
IF POOLMEM ^="POOLSYSD" & POOLMEM ^="POOLSYST" THEN DO;
"ALLOC F(DUMP) DA('SYSS.COMDISCO.DUMPJOBS("POOLMEM")') SHR";
IF RC^=0 THEN EXIT 99;
END;
IF POOLMEM ^="POOLSYSD" & POOLMEM ^="POOLSYST" THEN DO;
"ALLOC F(INCR) DA('SYSS.COMDISCO.INCRJOBS("POOLMEM")') SHR";
IF RC^=0 THEN EXIT 99;
END;
IF POOLMEM ^="POOLSYSD" & POOLMEM ^="POOLSYST" THEN DO;
"ALLOC F(REST) DA('SYSS.COMDISCO.RESTJOBS("POOLMEM")') SHR";
IF RC^=0 THEN EXIT 99;
END;
T1=OVERLAY(POOL,JCLX.1,POS('XXXX',JCLX.1));
DO J = 1 TO 3;
      IF J=1 THEN INCR.INCRCTR=T1;
      ELSE INCR.INCRCTR=JCLX.J;
      INCRCTR=INCRCTR+1;
END;
XCTR=WORDS(POOLLIST.POOL);
TRUEVOLC=0;
DO I = 1 TO XCTR;
  XVOL=WORD(POOLLIST.POOL,I);
  TEMP_PACK1 = SUBSTR(XVOL,1,5);
  TEMP_PACK2 = SUBSTR(XVOL,1,3);
  IF TEMP_PACK1="SYSDA" × TEMP_PACK1="SYSTA" × TEMP_PACK2="DRV" ,
     × TEMP_PACK2="TEM" × TEMP_PACK2="LAN" THEN ITERATE;
  IF XVOL="SYS015" × XVOL="SYS007" × XVOL="SYS008" × XVOL="SYS011" × ,
     XVOL="SYS012" × XVOL="SYS013" × XVOL="SYS014" THEN ITERATE;
  TRUEVOLC=TRUEVOLC+1;
END;
/* INCRCTR=INCRCTR+1 */;
T2=OVERLAY(POOL,JCLX.8,POS('XXXX',JCLX.8));
T3=OVERLAY(POOL,JCLX.9,POS('XXXX',JCLX.9));
T4=OVERLAY(POOL,JCLX.10,POS('XXXX',JCLX.10));
T5=OVERLAY(POOL,JCLX.37,POS('XXXX',JCLX.37));
IF (POOL="SYS" × POOL="ART") THEN T6=JCLY.4;
ELSE T6=JCLX.4;
DO J = 4 TO JCLXSTP;
      IF J=4 THEN INCR.INCRCTR=T6;
      ELSE IF J=8 THEN INCR.INCRCTR=T2;
      ELSE IF J=9 THEN INCR.INCRCTR=T3;
      ELSE IF J=10 THEN INCR.INCRCTR=T4;
      ELSE INCR.INCRCTR=JCLX.J;
      /* TAPE CTR BY VOL CNT LOGIC */
/*    IF TRUEVOLC>=9 & J=17 THEN ITERATE J;   */
      IF TRUEVOLC>=9 THEN NOP;
      ELSE IF TRUEVOLC>=4 & ,
          (J=7 × J=10) THEN ITERATE J;
      ELSE IF TRUEVOLC<4 & ,
          (J=7 × J=10 × J=6 × J=9) THEN ITERATE J;
      INCRCTR=INCRCTR+1;
      IF TRUEVOLC>=9 & J=7 THEN DO;
         INCR.INCRCTR="//SYSPRIN4 DD SYSOUT=*";
         INCRCTR=INCRCTR+1;
/*       INCR.INCRCTR="//SYSPRIN5 DD SYSOUT=*";
         INCRCTR=INCRCTR+1;
         INCR.INCRCTR="//SYSPRIN6 DD SYSOUT=*";
         INCRCTR=INCRCTR+1;    */
      END;
      IF TRUEVOLC>=9 & J=10 THEN DO;
      POOLX = LEFT(POOL,4,"X"); /* FILL OUT */
INCR.INCRCTR= ,
 "//TAPE4 DD DSN=I4"POOLX",DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)"
         INCRCTR=INCRCTR+1;
/* INCR.INCRCTR= ,
 "//TAPE5 DD DSN=I5"POOLX",DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)"
         INCRCTR=INCRCTR+1;
INCR.INCRCTR= ,
 "//TAPE6 DD DSN=I6"POOLX",DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)"
         INCRCTR=INCRCTR+1;     */
      END;
END;
XCTR=WORDS(POOLLIST.POOL);
DO I = 1 TO XCTR;
  XVOL=WORD(POOLLIST.POOL,I);
  TEMP_PACK1 = SUBSTR(XVOL,1,5);
  TEMP_PACK2 = SUBSTR(XVOL,1,3);
  IF TEMP_PACK1="SYSDA" × TEMP_PACK1="SYSTA" × TEMP_PACK2="DRV" ,
     × TEMP_PACK2="TEM" × TEMP_PACK2="LAN" THEN ITERATE;
  /* SKIP SOME INCR */
  IF XVOL="SYS015" × XVOL="SYS007" × XVOL="SYS008" × XVOL="SYS011" × ,
     XVOL="SYS012" × XVOL="SYS013" × XVOL="SYS014" THEN ITERATE;
  INCR.INCRCTR=" MOUNT VOL="XVOL;
  INCRCTR=INCRCTR+1;
END;
JCLXHLD=JCLXSTP+1;
DO J = JCLXHLD TO JCLX.0;
   IF J=37 THEN INCR.INCRCTR=T5;
   ELSE INCR.INCRCTR=JCLX.J;
   INCRCTR=INCRCTR+1;
END;
INCR.INCRCTR="//";
 DO I = 1 TO DASDV.0;
  CPK=FALSE;
  PARSE VAR DASDV.I VOLSER CYLCOUNT FREECYL FRAGINDEX . ;
  IF VOLSER="DUMMY" THEN ITERATE;
  IF WORDPOS(VOLSER,POOLLIST.POOL)=0 THEN ITERATE;/*DIFFERENT POOL*/
  DEVTYPE = DASD.CYLCOUNT;
  TRUE_DEVTYPE = DASD.CYLCOUNT;
  IF HEADTAIL THEN DO;
         HEADTAIL = FALSE; /* ROTATE CUU SELECTION */
         UNIT = WORD(CDRS.DEVTYPE,1);
         CDRS.DEVTYPE = DELWORD(CDRS.DEVTYPE,1,1);
         END;
  ELSE DO;
         HEADTAIL = TRUE;  /* ROTATE CUU SELECTION */
         IF WORDS(CDRS.DEVTYPE)=0 THEN ,
              UNIT="";
         ELSE DO;
           UNIT = WORD(CDRS.DEVTYPE,WORDS(CDRS.DEVTYPE));
           IF UNIT^="F00" THEN ,
           CDRS.DEVTYPE = DELWORD(CDRS.DEVTYPE,WORDS(CDRS.DEVTYPE),1);
           END;
         END;
  TARGET_TYPE=DEVTYPE;
  IF UNIT="" THEN DO; /* COMDISCO HAS NO MORE */
       SELECT;
         WHEN (DEVTYPE="3380DJ") THEN TARGET_TYPE="3380E";
         WHEN (DEVTYPE="3380E") THEN TARGET_TYPE="3380K";
         WHEN (DEVTYPE="3380K") THEN EXIT 16; /* EMERGENCY */
         WHEN (DEVTYPE="33902") THEN TARGET_TYPE="33903";
         WHEN (DEVTYPE="33903") THEN TARGET_TYPE="33906";
         WHEN (DEVTYPE="33909") THEN TARGET_TYPE="33906";
         WHEN (DEVTYPE="33906") THEN EXIT 20; /* EMERGENCY */
         OTHERWISE EXIT 24;
       END;
       IF TARGET_TYPE="3380E" & WORDS(CDRS.3380E)=0 THEN ,
            TARGET_TYPE="3380K";
       IF WORDS(CDRS.TARGET_TYPE)=0 THEN EXIT 28;
       UNIT = WORD(CDRS.TARGET_TYPE,1);
       IF UNIT^="F00" THEN ,
       CDRS.TARGET_TYPE = DELWORD(CDRS.TARGET_TYPE,1,1);
       END;
  DEVTYPE = SUBSTR(DEVTYPE,1,4);
  TEMP_PACK1 = SUBSTR(VOLSER,1,5);
  TEMP_PACK2 = SUBSTR(VOLSER,1,3);
  IF TEMP_PACK1^="SYSDA" & TEMP_PACK1^="SYSTA" & TEMP_PACK2^="DRV" ,
     & TEMP_PACK2^="TEM" & TEMP_PACK2^="LAN" ,
       THEN DO;
  T1=OVERLAY(DEVTYPE,JCLD.6,POS('XXXX',JCLD.6));
  T2=OVERLAY(VOLSER,JCLD.8,POS('XXXXXX',JCLD.8));
  T3=OVERLAY(VOLSER,JCLD.1,POS('XXXXXX',JCLD.1));
  T5=OVERLAY(VOLSER,JCLD.9,POS('XXXXXX',JCLD.9));
  T10=OVERLAY(VOLSER,JCLD.35,POS('XXXXXX',JCLD.35));
  T11=OVERLAY(VOLSER,JCLC.23,POS('XXXXXX',JCLC.23));
  T12=OVERLAY(VOLSER,JCLC.32,POS('XXXXXX',JCLC.32));
  T13=OVERLAY(VOLSER,JCLC.9,POS('XXXXXX',JCLC.9));
  TSTVSR = SUBSTR(VOLSER,1,4)
  IF TSTVSR = "DB20" THEN
     T14=CPKNC
  ELSE
     T14=CPKC
  CDSR= "'FDRABR.COMDISCO.WEEKREST.V"VOLSER"'";
     "ALTER" CDSR "OWNER(N)";
  IF RC > 0 THEN ,
    "DEFINE NVSAM (NAME("CDSR") DEVT(0000) VOL('******') OWNER(N))";
  DO J = 1 TO JCLD.0;
      IF J=6 THEN DUMP.DUMPCTR=T1;
      ELSE IF J=8 THEN DUMP.DUMPCTR=T2;
      ELSE IF J=1 THEN DUMP.DUMPCTR=T3;
      ELSE IF J=9 THEN DUMP.DUMPCTR=T5;
      ELSE IF J=35 THEN DUMP.DUMPCTR=T10;
      ELSE IF J=18 & VOLSER="SYS015" THEN ,
         DUMP.DUMPCTR="  ENQ=OFF,";
      ELSE DUMP.DUMPCTR=JCLD.J;
      FLAGIT = "NO"
   /* CHANGE  */
      INTERPRET 'IF 'VOLSER '="YES" THEN FLAGIT = "YES"'
      IF J=23 & FLAGIT="YES" THEN CPK=TRUE;
      ELSE IF J=23 THEN CPK=FALSE;
      ELSE NOP;
   /* CHANGE  */
      IF J=40 & (CPK) THEN ITERATE J ;
      ELSE NOP;
      DUMPCTR=DUMPCTR+1;
      IF (J=39) & (CPK) THEN DO;
           DO Z=1 TO JCLC.0;
                DUMP.DUMPCTR=JCLC.Z;
    /* CHANGE */
                IF Z=9  THEN DUMP.DUMPCTR= T13;
                IF Z=12 THEN DUMP.DUMPCTR= T14;
                IF Z=23 THEN DUMP.DUMPCTR= T11;
                IF Z=32 THEN DUMP.DUMPCTR= T12;
                DUMPCTR=DUMPCTR+1;
           END;
       END;
  END;
  T1=OVERLAY(DEVTYPE,JCLR.16,POS('XXXX',JCLR.16));
  T1=OVERLAY(VOLSER,T1,POS('XXXXXX',T1));
  T2=OVERLAY(VOLSER,JCLR.26,POS('XXXXXX',JCLR.26));
  T3=OVERLAY(VOLSER,JCLR.1,POS('XXXXXX',JCLR.1));
  T4=OVERLAY(VOLSER,JCLR.5,POS('XXXXXX',JCLR.5));
  T5=OVERLAY(VOLSER,JCLR.34,POS('XXXXXX',JCLR.34));
  T6=OVERLAY(VOLSER,JCLR.44,POS('XXXXXX',JCLR.44));
  T7=OVERLAY(JOBC,JCLR.2,POS('?',JCLR.2));
  DO J = 1 TO JCLR.0;
      IF J=16 THEN REST.RESTCTR=T1;
      ELSE IF J=26 THEN REST.RESTCTR=T2;
      ELSE IF J=30 THEN REST.RESTCTR=T1;
      ELSE IF J=34 THEN REST.RESTCTR=T5;
      ELSE IF J=44 THEN REST.RESTCTR=T6;
      ELSE IF J=5 THEN REST.RESTCTR=T4;
      ELSE IF J=1 THEN REST.RESTCTR=T3;
      ELSE IF J=2 THEN REST.RESTCTR=T7;
      ELSE REST.RESTCTR=JCLR.J;
      RESTCTR=RESTCTR+1;
  END;
  END;
  T1=OVERLAY(UNIT,JCLI.6,POS('XXX',JCLI.6));
  T2=OVERLAY(VOLSER,JCLI.7,POS('XXXXXX',JCLI.7));
  T3=OVERLAY(VOLSER,JCLI.1,POS('XXXXXX',JCLI.1));
 IF UNIT^="F00" THEN DO;
  DO J = 1 TO JCLI.0;
      IF J=6 THEN INIT.INITCTR=T1;
      ELSE IF J=7 THEN INIT.INITCTR=T2;
      ELSE IF J=1 THEN INIT.INITCTR=T3;
      ELSE INIT.INITCTR=JCLI.J;
      INITCTR=INITCTR+1;
  END;
 END;
 IF UNIT^="F00" THEN ,
  SUMM.SUMMCTR = VOLSER "TYPE" LEFT(TRUE_DEVTYPE,6) "MAPPED TO",
     "CDRS UNIT" UNIT "TYPE" TARGET_TYPE;
 ELSE ,
SUMM.SUMMCTR="****** VOLUME" VOLSER "NOT INITIALIZED AND/OR RESTORED";
  IF VOLSER="SYS006" THEN ,
       SUMM.SUMMCTR=SUMM.SUMMCTR "IPL LOADUNIT" UNIT;
  IF VOLSER="SYS001" × VOLSER="SYS002" THEN ,
       SUMM.SUMMCTR=SUMM.SUMMCTR "LOADPARM" RIGHT(UNIT,4,"0")"CDM";
  SUMMCTR=SUMMCTR+1;
 END I;
IF POOLMEM ^="POOLSYSD" & POOLMEM ^="POOLSYST" THEN DO;
 "EXECIO * DISKW DUMP (FINIS STEM DUMP.";
 "EXECIO * DISKW INCR (FINIS STEM INCR.";
 "EXECIO * DISKW REST (FINIS STEM REST.";
END;
 "EXECIO * DISKW INIT (FINIS STEM INIT.";
END ZZ;
"EXECIO * DISKW SUMM (FINIS STEM SUMM.";
EXIT 0;
