/* REXX SMS Space by record calc - unsophisticated version */
track_bytes=56664;
half_track_bytes=27920; /* approximate */
cyl_bytes=849960;
track_cyl=15;
kilo=1024;
meg=kilo*kilo;
"VMFCLEAR";
say ,
  "Enter the AVGREC value coded ('M', 'K', or 'U')";
pull avgrec;
say ,
  "Enter the SPACE units average record len value coded";
pull reclen;
say ,
  "Enter the SPACE primary count value coded";
pull primquan;
say ,
  "Enter the SPACE secondary count value coded";
pull secquan;
select;
   when (avgrec="M") then mult=meg;
   when (avgrec="K") then mult=kilo;
   when (avgrec="U") then mult=1;
   otherwise nop;
end;
prim_mult=primquan*reclen;
sec_mult=secquan*reclen;
prim_space_in_bytes=prim_mult*mult;
sec_space_in_bytes=sec_mult*mult;
prim_blks=prim_space_in_bytes/half_track_bytes;
sec_blks=sec_space_in_bytes/half_track_bytes;
prim_tracks=prim_blks/2; /* half track blocking */
sec_tracks=sec_blks/2; /* half track blocking */
prim_cyls=format(prim_tracks/track_cyl,6,0);
sec_cyls=format(sec_tracks/track_cyl,6,0);
"VMFCLEAR";
say "This space request is for:";
say "       Primary byte count of:" prim_space_in_bytes;
say "          or about" prim_cyls "cylinders";
say "       Secondary byte count of:" sec_space_in_bytes;
say "          or about" sec_cyls "cylinders";
exit 0;
