/*  REXX EXEC : ( NWABEND2 ).
    ENTRY     : EXECUTED WHENEVER STEP020 OF THE LAN SERVER TO HOST
                BACKUP JOBS TERMINATE WITH A RETURN CODE GREATER THAN 4.
    FUNCTION  : THE SYSOUT LISTING DATASET IS INPUT TO THIS EXEC AND IS
                SCANNED TO FIND ERROR MESSAGE CODES AND TEXT.
              : A SYSIN MEMBER IS CREATED AND WRITTEN TO THE MESSAGE
                CONTROL PDS DATASET AND IS INPUT VIA WTO TO DISPLAY
                THE FORMATTED MESSAGE TEXT TO THE OPERATOR MASTER
                CONSOLE AT THE ABEND030 STEP.
              : A RESTART PARM MEMBER IS WRITTEN TO THE RESTART PDS
                DATASET AND IS INPUT TO THE NWBACKUP ISPF PANEL AND REXX
                RESTART FACILITY.
              : THE CONTAINER AND INDEX GDG DATASETS FROM THE FAILED
                JOB EXECUTION ARE DETERMINED AND DELETED.
    INPUT     : ( PTECH2.NETCA.&&SERVER.SYSPRINT ).
    OUTPUT    : ( SYSS.NETCA.MESSAGE.CNTLLIB(&&SERVER)
                ( SYSS.NETCA.RESTART.PARMLIB(&&SERVER××'RSPRM').
                                                                      */
/*      */
HOUSE_KEEPING:
ADDRESS TSO
ARG SERVER DIRNAME BUTYPE .
ERC = 0
X = MSG("OFF")
"FREE FILE(NWDD)"
DIR = SUBSTR(DIRNAME,1,3)
OUTMEMB = SERVER××DIRNAME
VOLMEMB = SERVER××DIRNAME
NWLIB.1 = 'SYSS.NETCA.MESSAGE.CNTLLIB'
NWLIB.2 = 'SYSS.NETCA.RESTART.PARMLIB'
NWLIB.3 = 'SYSS.NETCA.CONTROL.TEXTLIB'
NWLIB.4 = 'PTECH2.NETCA.'SERVER'.'DIRNAME'.SYSPRINT'
DO I = 1 TO 4
   NWDSN = SYSDSN("'"NWLIB.I"'")
   IF NWDSN = 'OK' THEN ITERATE
   OUTPDS = NWLIB.1
   MCNT = 4
   MSG.1 = '*** LAN BACKUP FOR 'SERVER' FAILED OR IS INCOMPLETE. ***'
   MSG.2 = '*** DATASET ERROR: DATASET NOT FOUND FOR ('NWLIB.I'). ***'
   MSG.3 = '*** NOTIFY THE TECHNICAL SUPPORT CRITICAL CALL LIST PERSON.
   MSG.4 = '*** NWABEND EXEC TASK CANCELLED. ***'
   IF NWLIB.I = 'SYSS.NETCA.MESSAGE.CNTLLIB' THEN DO
      ALLOCATE_MESSAGE_CNTLLIB
      ITERATE
   END
   CALL WRITE_MESSAGE_SYSIN
   EXIT 028
END
DMEM.1 = OUTMEMB
DMEM.2 = SERVER××'RSPRM'
LANID = OUTMEMB
DO I = 1 TO 2
   DMEM = SYSDSN("'"NWLIB.I"("DMEM.I")'")
   IF DMEM = 'OK' THEN DO
      "ALLOC DA('"NWLIB.I"("DMEM.I")') FILE(NWDD) SHR"
      "DELETE ('"NWLIB.I"("DMEM.I")') FILE(NWDD)"
      "FREE FILE(NWDD)"
   END
END
STATUS_TEXT = 'FINAL STATUS :'
CALL READ_SERVER_VOLUMES
CALL READ_SERVER_LISTING
/*     */
/*      M A I N   R O U T I N E   S E C T I O N     */
/*     */
CHECK_SUBCHANNEL_ALLOCATION_FAILURE:
MSGSW = 'NO'
MSGTEXT = 'NETEX-955'
DO L = 1 TO LST.0
   UPPER LST.L
   MTEXT = POS(MSGTEXT,LST.L)
   IF MTEXT ^= 0 THEN DO
      MCNT = 4
      MSGSW = 'YES'
      MSG.1 = 'SUBCHANNEL ALLOCATION FAIURE - EP ADDRESS NOT AVAILABLE.'
      MSG.2 = 'TO DOCUMENT PROBLEM, PLEASE ISSUE COMMAND: D U,,ALLOC,400
      MSG.3 = 'FOR RESTART, SUBMIT JOB VIA COMMAND ===> NWB'
      MSG.4 = 'IF PROBLEM PERSISTS, CONTACT CRITICAL CALL LIST PERSON.'
      LEAVE
   END
END
IF MSGSW = 'YES' THEN DO
   CALL WRITE_MESSAGE_MEMBER
   F = 1
   FMSG.1 = 'ALL FAIL' BUTYPE
   CALL WRITE_RESTART_PARMS
   EXIT ERC
END
/*     */
CHECK_REMOTE_CREATE_FAILURE:
MSGSW = 'NO'
MSGTEXT = 'REMOTE: FAILED TO CREATE FILE'
DO L = 1 TO LST.0
   UPPER LST.L
   MTEXT = POS(MSGTEXT,LST.L)
   IF MTEXT ^= 0 THEN DO
      R = L - 1
      MCNT = 5
      MSGSW = 'YES'
      DO M = 1 TO 4
         R = R + 1
         ETXT = SUBSTR(LST.R,MTEXT,80)
         EMSG = STRIP(ETXT)
         MSG.M = EMSG
      END
      MSG.5 = 'CONTACT THE ON-CALL LAN COMMUNICATIONS PERSON.'
      LEAVE
   END
END
IF MSGSW = 'YES' THEN DO
   CALL WRITE_MESSAGE_MEMBER
   F = 1
   FMSG.1 = 'ALL FAIL' BUTYPE
   CALL WRITE_RESTART_PARMS
   EXIT ERC
END
/*     */
CHECK_CONNECTION_FAILURE:
MSGSW = 'NO'
MSGTEXT = 'CONNECTION TO HOST 'SERVER' FAILED'
DO L = 1 TO LST.0
   UPPER LST.L
   MTEXT = POS(MSGTEXT,LST.L)
   IF MTEXT ^= 0 THEN DO
      MCNT = 4
      MSGSW = 'YES'
      MSG.1 = 'CONNECTION TO HOST ('SERVER') FAILED.'
      MSG.2 = 'SERVICE NOT OFFERED ON HOST ('SERVER').'
      MSG.3 = 'CONTACT THE ON-CALL LAN COMMUNICATIONS PERSON.'
      MSG.4 = 'FOR RESTART, SUBMIT JOB VIA COMMAND ===> NWB'
      LEAVE
   END
END
IF MSGSW = 'YES' THEN DO
   CALL WRITE_MESSAGE_MEMBER
   F = 1
   FMSG.1 = 'ALL FAIL' BUTYPE
   CALL WRITE_RESTART_PARMS
   EXIT ERC
END
/*     */
CHECK_VOLUME_COMPLETION_STATUS:
F = 0
M = 0
MSGSW = 'NO'
FAILSW = 'NO'
S = 3
MSG.1 = '... BACKUP STATUS FOR SERVER: ('LANID') ...'
MSG.2 = 'VOLUME   BACKUP STATUS                      '
MSG.3 = '------   -----------------------            '
DO V = 1 TO VOLCNT
   SERVOL = VOL.V
   CALL CHECK_LOCAL_STATUS
   IF BACKUP_STATUS = 'OK' THEN DO
      CALL CHECK_REMOTE_STATUS
      ITERATE
   END
   IF BACKUP_STATUS = 'FAIL' THEN DO
      FAILSW = 'YES'
      F = F + 1
      FMSG.F = SERVOL 'FAIL' BUTYPE
      ITERATE
   END
END
IF MSGSW = 'YES' THEN DO
   MCNT = S
   CALL WRITE_MESSAGE_MEMBER
END
IF FAILSW = 'YES' THEN DO
   IF F = VOLCNT THEN DO
      F = 1
      FMSG.1 = 'ALL FAIL' BUTYPE
   END
   CALL WRITE_RESTART_PARMS
   EXIT ERC
END
IF MSGSW = 'NO' THEN DO
   MCNT = 4
   MSG.1 = 'BACKUP FOR LAN SERVER ('SERVER') FAILED.'
   MSG.2 = 'BROWSE/CHECK DATASET: ('NWLIB.4').'
   MSG.3 = 'CONTACT THE ON-CALL PRODUCTION CONTROL PERSON.'
   MSG.4 = 'RESTART AFTER PROBLEM IS CORRECTED.'
   CALL WRITE_MESSAGE_MEMBER
   IF FAILSW = 'NO' THEN DO
      F = 1
      FMSG.1 = 'ALL FAIL' BUTYPE
      CALL WRITE_RESTART_PARMS
   END
END
EXIT ERC
/*     */
/*      S U B R O U T I N E S   S E C T I O N     */
/*     */
ALLOCATE_MESSAGE_CNTLLIB:
"ATTRIB MSGLIB DSORG(PO) RECFM(F,B) LRECL(80) BLKSIZE(27920)"
"ALLOC DA('"NWLIB.1"') NEW SPACE(3,1) USING(MSGLIB) DIR(1) DATACLAS(CNTL
MGMTCLAS(NOMIG) STORCLAS(SYSSHARE) DSNTYP(LIBRARY)"
SRC = RC
"FREE DA('SYSS.NETCA.MESSAGE.CNTLLIB')"
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('NWLIB.1'). ***'
   SAY '*** NOTIFY THE TECHNICAL SUPPORT CRITICAL CALL LIST PERSON. ***'
   SAY '*** NWABEND EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT 100
END
RETURN
/*     */
READ_SERVER_LISTING:
"ALLOC DA('"NWLIB.4"') FILE(NWDD) SHR"
"EXECIO * DISKR NWDD (STEM LST. FINIS"
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('NWLIB.4'). ***'
   SAY '*** NWABEND EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
RETURN
/*     */
READ_SERVER_VOLUMES:
V = 0
"ALLOC DA('"NWLIB.3"("VOLMEMB")') FILE(NWDD) SHR"
"EXECIO * DISKR NWDD (STEM VOLDATA. FINIS"
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** EXECIO READ ERROR: ('NWLIB.3'('VOLMEMB'). ***'
   SAY '*** NWABEND EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
DO I = 1 TO VOLDATA.0
   UPPER VOLDATA.I
   SVOL = POS(VOLKEY,VOLDATA.I)
   IF SVOL = 0 THEN ITERATE
   V = V + 1
   VOL.V = WORD(VOLDATA.I,1)
END
VOLCNT = V
RETURN
/*     */
CHECK_LOCAL_STATUS:
ENDSW = 'NO'
LANVOL = LEFT(SERVOL,4)
BACKUP_STATUS = 'FAIL'
END_TEXT = 'BACKUP OF VOLUME 'SERVOL' TERMINATING'
DO L = 1 TO LST.0
   UPPER LST.L
   ENDKEY = POS(END_TEXT,LST.L)
   IF ENDKEY ^= 0 THEN ENDSW = 'YES'
   IF ENDSW = 'YES' THEN DO
      STATKEY = POS(STATUS_TEXT,LST.L)
      IF STATKEY ^= 0 THEN DO
         NUMWORDS = WORDS(LST.L)
         GLOBAL_STATUS = WORD(LST.L,NUMWORDS)
         LEAVE
      END
   END
END
BUSTATUS = SUBSTR(GLOBAL_STATUS,1,4)
IF BUSTATUS = 'SSSS' THEN DO
   BACKUP_STATUS = 'OK'
   RETURN
END
DO E = 1 TO 4
   BACKUP_STATUS = 'OK'
   POSTAT = SUBSTR(GLOBAL_STATUS,E,1)
   IF POSTAT = 'S' × POSTAT = 'W' THEN ITERATE
   BACKUP_STATUS = 'FAIL'
END
IF BACKUP_STATUS = 'FAIL' THEN DO
   MSGSW = 'YES'
   S = S + 1
   MSG.S = LANVOL '*** BACKUP FAILED ***'
END
RETURN
/*     */
CHECK_REMOTE_STATUS:
REMOTE_STATUS = 'OK'
DO E = 5 TO 8
   POSTAT = SUBSTR(GLOBAL_STATUS,E,1)
   IF POSTAT = 'S' × POSTAT = 'W' THEN ITERATE
   REMOTE_STATUS = 'FAIL'
END
S7 = SUBSTR(GLOBAL_STATUS,7,1)
S8 = SUBSTR(GLOBAL_STATUS,8,1)
IF S7 = 'E' × S8 = 'E' THEN REMOTE_STATUS = 'OK'
IF REMOTE_STATUS = 'OK' THEN DO
   MSGSW = 'YES'
   S = S + 1
   MSG.S = LANVOL '+++ BACKUP SUCCESSFUL +++'
   RETURN
END
ERC = 8
MSGSW = 'YES'
S = S + 1
MSG.S = LANVOL '+++ BACKUP SUCCESSFUL +++ >>> REMOTE SERVER ERROR'
S = S + 1
MSG.S = 'NOTIFY THE ON-CALL LAN COMMUNICATIONS PERSON.'
RETURN
/*     */
WRITE_MESSAGE_MEMBER:
"DELSTACK"
OUTPDS = NWLIB.1
"ALLOC DA('"OUTPDS"("OUTMEMB")') FILE(NWDD) SHR"
DO M = 1 TO MCNT
   QUEUE MSG.M
END
"EXECIO" MCNT "DISKW NWDD (FINIS"
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** WRITE ERROR: ERROR WRITING 'OUTPDS'('OUTMEMB'). ***'
   SAY '*** NWABEND EXEC TASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
RETURN
/*     */
WRITE_RESTART_PARMS:
"DELSTACK"
MSGCNT = F
OUTPDS = NWLIB.2
OUTMEMB = DIR××'RSPRM'
"ALLOC DA('"OUTPDS"("OUTMEMB")') FILE(NWDD) SHR"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** DATASET ALLOCATE ERROR: ('OUTPDS'('OUTMEMB'). ***'
   SAY '*** NWABEND EXEC SUBTASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
DO M = 1 TO MSGCNT
   QUEUE FMSG.M
END
"EXECIO" MSGCNT "DISKW NWDD (FINIS"
SRC = RC
"FREE FILE(NWDD)"
IF SRC ^= 0 THEN DO
   SAY '*** WRITE ERROR: ERROR WRITING 'OUTPDS'('OUTMEMB'). ***'
   SAY '*** NWABEND EXEC TASK CANCELLED - RETURN CODE: ('SRC'). ***'
   EXIT SRC
END
RETURN
