/* REXX PROD XREF CC SCANNER */
OUTPTR=1;
"EXECIO * DISKR CCSCAN (STEM CC. FINIS";
TRUE="1";
FALSE="0";
FOUNDMEM=FALSE;
MEMCTR=0;
DO I = 1 TO CC.0;
  IF SUBSTR(CC.I,1,7)="MEMBER=" THEN DO;
       MEMNAME=SUBSTR(CC.I,8,8);
       FOUNDMEM=TRUE;
       MEMCTR=MEMCTR+1;
       MEMDATA.MEMCTR=MEMNAME;
       DROP CC.I;
       ITERATE I;
       END;
   ELSE IF ^FOUNDMEM THEN EXIT 24; /* ERROR */
  MEMDATA.MEMCTR = ,
MEMDATA.MEMCTR STRIP(TRANSLATE(SUBSTR(CC.I,1,71),"     ","=()-,"));
  DROP CC.I;
END;
DROP CC.0;
MEMDATA.0=MEMCTR;
DO I = 1 TO MEMDATA.0;
    PARSE VAR MEMDATA.I MEMNAME MEMDATA.I;
    MEMDATA.I=SPACE(MEMDATA.I);
    SCANCOM = TRUE; /* REMOVE ALL COMMENTS */
    DO WHILE(SCANCOM);
          SCANCOM=FALSE;
          POS1=POS("/*",MEMDATA.I);
          IF POS1^=0 THEN DO;
              POS2=POS("*/",MEMDATA.I,POS1+2);
              IF POS2^=0 THEN DO;
                  DLEN = POS2 - POS1 + 2; /* COMMENT LEN */
                  MEMDATA.I = DELSTR(MEMDATA.I,POS1,DLEN);
                  SCANCOM = TRUE; /* SCAN FOR MORE COMMENTS */
                  END;
             END;
      END;
    ZZ=SUBSTR(MEMDATA.I,1,1);
    IF ZZ="/" × ZZ>="0" THEN ITERATE I;
    IF WORD(MEMDATA.I,1)="SORT" THEN ITERATE I;
    IF WORDPOS("REPRO",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("REPRO",MEMDATA.I)^=0);
         OP=WORDPOS("REPRO",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP);
         KEYW2=WORD(MEMDATA.I,OP+2);
         ACODE="";
         IF KEYW1="IFILE"×KEYW1="INFILE" THEN DO;
              ACODE="D"; ANAME=WORD(MEMDATA.I,OP+1); END;
         ELSE IF KEYW1="OFILE"×KEYW1="OUTFILE" THEN DO;
              ACODE="E"; ANAME=WORD(MEMDATA.I,OP+1); END;
         ELSE IF KEYW1="IDS"×KEYW1="INDATASET" THEN DO;
              ACODE="F"; ANAME=WORD(MEMDATA.I,OP+1); END;
         ELSE IF KEYW1="ODS"×KEYW1="OUTDATASET" THEN DO;
              ACODE="G"; ANAME=WORD(MEMDATA.I,OP+1); END;
         ELSE NOP;
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
  ACODE="";
         IF KEYW2="IFILE"×KEYW2="INFILE" THEN DO;
              ACODE="D"; ANAME=WORD(MEMDATA.I,OP+3); END;
         ELSE IF KEYW2="OFILE"×KEYW2="OUTFILE" THEN DO;
              ACODE="E"; ANAME=WORD(MEMDATA.I,OP+3); END;
         ELSE IF KEYW2="IDS"×KEYW2="INDATASET" THEN DO;
              ACODE="F"; ANAME=WORD(MEMDATA.I,OP+3); END;
         ELSE IF KEYW2="ODS"×KEYW2="OUTDATASET" THEN DO;
              ACODE="G"; ANAME=WORD(MEMDATA.I,OP+3); END;
         ELSE NOP;
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
  ACODE="";
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("PROG",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("PROG",MEMDATA.I)^=0);  /* DB2 */
         OP=WORDPOS("PROG",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP);
         KEYW2=WORD(MEMDATA.I,OP+1);
         ACODE="";
         IF KEYW2="PLAN" THEN DO;
              ACODE="Z";
              ANAME=TRANSLATE(KEYW1," ","'");
              KEYW3=WORD(MEMDATA.I,OP+2); /* GET PLAN NAME */
              PLNAME=TRANSLATE(KEYW3," ","'"); END;
         ELSE NOP;
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1;
     IF ANAME^=PLNAME THEN DO; /* ONLY IF PLAN NAME DIFF THAN PROG*/
       OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(PLNAME,44);
       OUTPTR=OUTPTR+1;
       END;
    END;
  ACODE="";
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("OPTION",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("OPTION",MEMDATA.I)^=0);
         OP=WORDPOS("OPTION",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP); /* = DYL280 OPTION RESTORE PGM */
         KEYW2=WORD(MEMDATA.I,OP+1); /* PGM NAME */
         ACODE="";
         IF KEYW1="RESTORE" THEN DO;
              ACODE="Y";
              ANAME=TRANSLATE(KEYW2," ","'"); END;
         ELSE NOP;
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1;
    END;
  ACODE="";
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("SELECT",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("SELECT",MEMDATA.I)^=0);
         OP=WORDPOS("SELECT",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP);
         KEYW2=WORD(MEMDATA.I,OP+1);
         ACODE="";
         IF KEYW1="DSN" × KEYW1="DSG" THEN DO;
              ACODE="F";
              ANAME=KEYW2; END;
         ELSE NOP;
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
  ACODE="";
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("DUMP",MEMDATA.I)^=0 × ,
       WORDPOS("DUM",MEMDATA.I)^=0 × ,
       WORDPOS("RESTORE",MEMDATA.I)^=0 × ,
       WORDPOS("RESTOR",MEMDATA.I)^=0 × ,
       WORDPOS("RESTO",MEMDATA.I)^=0 × ,
       WORDPOS("REST",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("DUMP",MEMDATA.I)^=0 × ,
                WORDPOS("DUM",MEMDATA.I)^=0 × ,
                WORDPOS("RESTORE",MEMDATA.I)^=0 × ,
                WORDPOS("RESTOR",MEMDATA.I)^=0 × ,
                WORDPOS("RESTO",MEMDATA.I)^=0 × ,
                WORDPOS("REST",MEMDATA.I)^=0);
        DTYPE="DUMP";
        IF WORDPOS("DUMP",MEMDATA.I)^=0 THEN ,
           OP=WORDPOS("DUMP",MEMDATA.I)+1;
        ELSE IF WORDPOS("DUM",MEMDATA.I)^=0 THEN ,
           OP=WORDPOS("DUM",MEMDATA.I)+1;
        ELSE IF WORDPOS("RESTORE",MEMDATA.I)^=0 THEN DO;
           OP=WORDPOS("RESTORE",MEMDATA.I)+1; DTYPE="REST"; END;
        ELSE IF WORDPOS("RESTOR",MEMDATA.I)^=0 THEN DO;
           OP=WORDPOS("RESTOR",MEMDATA.I)+1; DTYPE="REST"; END;
        ELSE IF WORDPOS("RESTO",MEMDATA.I)^=0 THEN DO;
           OP=WORDPOS("RESTO",MEMDATA.I)+1; DTYPE="REST"; END;
        ELSE DO;
           OP=WORDPOS("REST",MEMDATA.I)+1; DTYPE="REST"; END;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         IF WORDPOS("INC",MEMDATA.I,OP)^=0 THEN ,
             OP1=WORDPOS("INC",MEMDATA.I,OP)+1;
         ELSE IF WORDPOS("INCL",MEMDATA.I,OP)^=0 THEN ,
             OP1=WORDPOS("INCL",MEMDATA.I,OP)+1;
         ELSE IF WORDPOS("INCLU",MEMDATA.I,OP)^=0 THEN ,
             OP1=WORDPOS("INCLU",MEMDATA.I,OP)+1;
         ELSE IF WORDPOS("INCLUD",MEMDATA.I,OP)^=0 THEN ,
             OP1=WORDPOS("INCLUD",MEMDATA.I,OP)+1;
         ELSE IF WORDPOS("INCLUDE",MEMDATA.I,OP)^=0 THEN ,
             OP1=WORDPOS("INCLUDE",MEMDATA.I,OP)+1;
         ELSE OP1="";
         ACODE="";
         IF OP1^="" THEN DO;
         KEYW1 = "DSNAME";
         DO WHILE (KEYW1^="");
         KEYW1=WORD(MEMDATA.I,OP1);
         IF POS(".",KEYW1)^=0 THEN DO;
           ANAME=KEYW1;
           OP1=OP1+1;
           IF DTYPE="DUMP" THEN ,
             ACODE="F";
            ELSE ACODE="G";
            OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
            OUTPTR=OUTPTR+1;
          END;
          ELSE KEYW1="";
         END; /* END OF DO WHILE */
         END; /* END OF OP1 NE NULL */
  ACODE="";
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("DELETE",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("DELETE",MEMDATA.I)^=0);
           ACODE="H";
           OP=WORDPOS("DELETE",MEMDATA.I)+1;
           XX=DELWORD(MEMDATA.I,OP-1,1);
           ANAME=WORD(MEMDATA.I,OP);
           OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
           OUTPTR=OUTPTR+1;
           DO WHILE(POS(".",WORD(MEMDATA.I,OP+1))^=0);
              ANAME=WORD(MEMDATA.I,OP+1);
              OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
              OUTPTR=OUTPTR+1;
              OP=OP+1;
           END;
           MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("DEFINE",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("DEFINE",MEMDATA.I)^=0);
         OP=WORDPOS("DEFINE",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         ACODE="";
         KEYW1=WORD(MEMDATA.I,OP);
         KEYW2=WORD(MEMDATA.I,OP+1);
         ANAME=WORD(MEMDATA.I,OP+2);
  IF (KEYW1="ALTERNATEINDEX" × KEYW1="AIX") & KEYW2="NAME" THEN ,
            ACODE="J";
  ELSE IF (KEYW1="CLUSTER" × KEYW1="CL") & KEYW2="NAME" THEN ,
            ACODE="I";
  ELSE IF (KEYW1="NONVSAM" × KEYW1="NVSAM") & KEYW2="NAME" THEN ,
            ACODE="L";
  ELSE IF (KEYW1="PATH") & KEYW2="NAME" THEN ,
            ACODE="K";
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("VERIFY",MEMDATA.I)^=0 THEN DO;
       DO WHILE(WORDPOS("VERIFY",MEMDATA.I)^=0);
         OP=WORDPOS("VERIFY",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP);
         ANAME=WORD(MEMDATA.I,OP+1);
         ACODE="";
         IF KEYW1="FILE" THEN ACODE="M";
         ELSE IF KEYW1="DS"×KEYW1="DATASET" THEN ACODE="N";
         ELSE NOP;
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("EXPORT",MEMDATA.I)^=0 THEN DO;
     FXO = "";
     FXC = WORDS(MEMDATA.I);
     DO FX = 1 TO FXC;
      FXW = WORD(MEMDATA.I,FX);
      IF FXW="EXO" × FXW="ESTOP" × FXW="VSAMAID" THEN ITERATE FX;
      FXO = FXO FXW;
     END;
     MEMDATA.I = FXO;
       DO WHILE(WORDPOS("EXPORT",MEMDATA.I)^=0);
         OP=WORDPOS("EXPORT",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP);
         IF KEYW1="EXO" × KEYW1="ESTOP" × KEYW1="VSAMAID" × ,
            KEYW1="RECLEVEL" × KEYW1="MOUNT" THEN DO;
                OP=OP+1;
                KEYW1=WORD(MEMDATA.I,OP);
                END;
         OP=OP+1;
         IF KEYW1="CLUSTER" THEN DO;
         ACODE="DUMMY";
         DO WHILE(ACODE^="");
         KEYW2=WORD(MEMDATA.I,OP+0);
         ANAME=WORD(MEMDATA.I,OP+1);
         IF KEYW2="CL" × KEYW2="CLUSTER" THEN ACODE="O";
         ELSE ACODE="";
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
         OP=OP+2;
         END;
         END;
  MEMDATA.I=XX;
         END;
         END;
    IF WORDPOS("RESTORE",MEMDATA.I)^=0 THEN DO;
     FXO = "";
     FXC = WORDS(MEMDATA.I);
     DO FX = 1 TO FXC;
      FXW = WORD(MEMDATA.I,FX);
      IF FXW="REMP" × FXW="RVER" × FXW="PURGE" × ,
         FXW="VSAMAID" × FXW="NODELETE" × FXW="ESTOP" × ,
         FXW="NOXTC" THEN ITERATE FX;
      FXO = FXO FXW;
     END;
     MEMDATA.I = FXO;
       DO WHILE(WORDPOS("RESTORE",MEMDATA.I)^=0);
         OP=WORDPOS("RESTORE",MEMDATA.I)+1;
         XX=DELWORD(MEMDATA.I,OP-1,1);
         KEYW1=WORD(MEMDATA.I,OP);
         IF KEYW1="REMP" × KEYW1="RVER" × KEYW1="PURGE" × ,
            KEYW1="VSAMAID" × KEYW1="NODELETE" × ,
            KEYW1="ESTOP" × KEYW1="NOXTC" THEN DO;
                OP=OP+1;
                KEYW1=WORD(MEMDATA.I,OP);
                END;
         OP=OP+1;
         IF KEYW1="CLUSTER" THEN DO;
         ACODE="DUMMY";
         DO WHILE(ACODE^="");
         KEYW2=WORD(MEMDATA.I,OP+0);
         ANAME=WORD(MEMDATA.I,OP+1);
         ACODE="";
         IF KEYW2="CL" × KEYW2="CLUSTER" THEN ACODE="P";
         IF KEYW2="AIX" THEN ACODE="Q";
         IF KEYW2="PATH" THEN ACODE="R";
  IF ACODE^="" THEN DO;
    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);
    OUTPTR=OUTPTR+1; END;
         OP=OP+2;
         END;
         END;
  MEMDATA.I=XX;
         END;
         END;
END;
"EXECIO * DISKW OUTPUT (STEM OUT. FINIS";
EXIT 0;
