/* REXX EXEC : ( CCFQACOB ).
   FUNCTION  : READS SOURCE PROGRAM STATEMENTS TO DETERINE COBOL-II
               COMPILE TYPE FOR QA MOVEMENT COMPILE.                  */
TRACE O
/*     */
HOUSE_KEEPING:
ADDRESS TSO
ARG MASTER MEMBER
PARMS = 'MASTER MEMBER'
DO I = 1 TO 2
   IPARM = WORD(PARMS,I)
   XPARM = VALUE(IPARM)
   IF XPARM ^= '' THEN ITERATE
   SAY '*** PARM ERROR: MISSING PARM VALUE FOR ('IPARM'). ***'
   SAY '*** CCFQACOB EXEC TASK CANCELLED - RC = (024). ***'
   EXIT 024
END
C2P = 'APOST,LIB,CMPR2,RES,RENT,DYNAM'

/*     */
MAIN_ROUTINE:
CALL CHECK_NATIVE_FLAG
CALL CHECK_OPTIMIZE_FLAG
CALL SET_QA_COMPILE_TYPE_RETURN_CODE
EXIT EXITRC

/*     S U B R O U T I N E   S E C T I O N     */
/*     */
CHECK_NATIVE_FLAG:
NATIVE_SW = 'NO'
LIBDSN = "'"MASTER"("MEMBER")'"
LIBDD = LIBALLOC(LIBDSN)  /* DYNALLOC LIBMASTER W/LAM; RET DDNAME*/
IF LIBDD = "ERROR" THEN DO
   ERC = 100
   SAY '*** DYNAMIC ALLOCATION ERROR: ('MASTER'). ***'
   SAY '*** CANNOT READ COBOL2 COMPILE TYPE FLAG FOR ('MEMBER') PROGRAM.
   SAY '*** CCFQACOB EXEC SUBTASK CANCELLED - RC = ('ERC'). ***'
   EXIT ERC
END
"EXECIO * DISKR" LIBDD "(FINIS STEM DATA."
SRC = RC
IF SRC ^= 0 THEN DO
   ERC = 100
   SAY '*** EXECIO READ ERROR: ('MASTER'('MEMBER'). ***'
   SAY '*** CANNOT READ COBOL2 COMPILE TYPE FLAG FOR ('MEMBER') PROGRAM.
   SAY '*** CCFQACOB EXEC SUBTASK CANCELLED - RC = ('ERC'). ***'
   EXIT ERC
END
DO I = 1 TO DATA.0
   NOCMPR2 = POS('NOCMPR2-FLAG',DATA.I)
   IF NOCMPR2 ^= 0 THEN DO
      NATIVE_SW = 'YES'
      C2P = 'APOST,LIB,NOCMPR2,RES,RENT,DYNAM'
      LEAVE
   END
END
RETURN

/*     */
CHECK_OPTIMIZE_FLAG:
OPTIMIZE_SW = 'NO'
DO I = 1 TO DATA.0
   OPTFLAG = POS('OPT2-FLAG',DATA.I)
   IF OPTFLAG ^= 0 THEN DO
      OPTIMIZE_SW = 'YES'
      C2P = 'COPT,APOST,LIB,RES,RENT,DYNAM'
      LEAVE
   END
END
RETURN

/*     */
SET_QA_COMPILE_TYPE_RETURN_CODE:
IF NATIVE_SW = 'YES' & OPTIMIZE_SW = 'NO'  THEN EXITRC = 1
IF NATIVE_SW = 'NO'  & OPTIMIZE_SW = 'NO'  THEN EXITRC = 2
IF NATIVE_SW = 'YES' & OPTIMIZE_SW = 'YES' THEN EXITRC = 3
IF NATIVE_SW = 'NO'  & OPTIMIZE_SW = 'YES' THEN EXITRC = 4
RETURN
