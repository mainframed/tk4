 PROC 0 PLANID()               /* PLAN NAME 1-6 CHARACTERS      */   +
        SUFFIX()               /* SUFFIX TO PLAN NAME   0-2 CHR */   +
        REMAIN()               /* DISPLAY UNASSIGNED VARIABLES  */   +
        DATE()                 /* REQUIRED DATE - DEFAULT TODAY */   +
        TIME()                 /* TIME LIMIT FOR JOBS RUN       */   +
        OLPREFA(SYSS.IOA)                   +
        OLVERA(V410)                     +
        DAYTBLB(SYSS.CTMO.V410.SCHD) +
        UPPTBLB(SYSS.CTMO.V410.PLAN) +
        AELIBNM(SYSS.CTMO.V410.AEDI) +
        DBPREFA(SYSS.IOA) +
        DBPREFM(SYSS.CTMO) +
        DBVERA(V410)   +
        DBVERM(V410)   +
        DATEFMT(USA) +
        DEBUG()
 /*******************************************************************/
 /**                                                               **/
 /**              C  T  M  E  X  E  C                              **/
 /**             =====================                             **/
 /**                                                               **/
 /**  PARAMETER PROMPTING FACILITY - TYPE2                         **/
 /**                                                               **/
 /**  THIS CLIST IS THE THIRD PHASE OF THE PARAMETERS PROMPTING    **/
 /**  FACILITY (FIRST PHASE IS THE MASTER PLAN DEFINITION, AND     **/
 /**  THE SECOND PHASE IS FETCHING THE PLAN).                      **/
 /**  CTMEXEC PERFORMS THE PROMPTING OF THE PARAMETERS AND AFTER   **/
 /**  IT IS COMPLETED, IT ORDERES THE PLAN TO CONTROL-M.           **/
 /**                                                               **/
 /**  THE CLIST PERFORMS THE FOLLOWING OPERATIONS:                 **/
 /**  1. LET THE USER TO SELECT THE REQUIRED UPP FOR UPDTING.      **/
 /**     THE POSSIBILITIES ARE:                                    **/
 /**     - WORK ON SPECIFIC PLANID ( WHEN PLANID NE " " )          **/
 /**     - GET A LIST OF PLANS     ( WHEN PLANID EQ " " )          **/
 /**     - GET ALL THE UPPS WHICH STILL HAS UNASSIGNED VARIABLES   **/
 /**       ONE AFTER THE OTHER     ( WHEN REMAIN EQ YES)           **/
 /**                                                               **/
 /**  2. PROMPT THE REQUIRED VARIABLES FOR THEIR VALUES.           **/
 /**                                                               **/
 /**  3. WHEN ALL THE VARIABLES HAVE VALUES, CALL CTMJOB TO ORDER  **/
 /**     THE PLAN.                                                 **/
 /**                                                               **/
 /*******************************************************************/
 /* WM1286 AM 200992 SUPPORT JAPANESE DATE */
 IF &DEBUG = DEBUG      +
 THEN                   +
    CONTROL CAPS MSG LIST SYMLIST CONLIST
 ELSE                   +
   CONTROL CAPS NOMSG NOLIST NOSYMLIST NOCONLIST NOFLUSH
 ISPEXEC CONTROL ERRORS RETURN

 /* DISPLAY PANEL TO GET THE REQUIRED PARAMETERS OR UPDATE THEM  */
 IF &PLANID = &STR() +
 THEN +
    DO
       SET &TEMP = &PLANID
       ISPEXEC VGET (PLANID) PROFILE
       SET &RC = &LASTCC
       IF &RC ^= 0 +
       THEN +
          SET &PLANID = &TEMP
    END
 IF &REMAIN = &STR() +
 THEN +
    SET &REMAIN = NO
 SET &TEMP = &DAYTBLB
 ISPEXEC VGET (DAYTBLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &DAYTBLB = &TEMP
 SET &TEMP = &UPPTBLB
 ISPEXEC VGET (UPPTBLB) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &UPPTBLB = &TEMP
 SET &TEMP = &AELIBNM
 ISPEXEC VGET (AELIBNM) PROFILE
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    SET &AELIBNM = &TEMP
 IF &DATE = &STR() +
 THEN +
    DO
       ISPEXEC VGET (ZDAY,ZMONTH,ZYEAR)
       IF &DATEFMT = JPN +
       THEN +
          SET &DATE = &STR(&ZYEAR.&ZMONTH.&ZDAY)
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          SET &DATE = &STR(&ZMONTH.&ZDAY.&ZYEAR)
       ELSE +
          SET &DATE = &STR(&ZDAY.&ZMONTH.&ZYEAR)
    END
 DISPPAN: +
 SET &TIME = &STR()
 ISPEXEC DISPLAY PANEL(CTMPF32W)
 SET &RC = &LASTCC
 IF &RC ^= 0 -
 THEN -
    IF &RC ^= 8 -
    THEN -
       DO
          ISPEXEC SETMSG MSG(CTMF000Z)
          GOTO END
       END
    ELSE -
       GOTO END

 ISPEXEC VPUT (DAYTBLB UPPTBLB AELIBNM ) PROFILE

 /* CHECK VALIDITY OF DATE: MUST BE 0(NULL) OR 6 CHARACTERS IN THE */
 /* FORMAT "DDMMYY" OR "MMDDYY" ACCORDING TO THE DATE TYPE         */
 CHKDT: +
 IF &DATE = &STR() +
 THEN +
    DO
       /* THE DEFAULT DATE IS TODAY */
       ISPEXEC VGET (ZDAY,ZMONTH,ZYEAR)
       IF &DATEFMT = JPN +
       THEN +
          SET &DATE = &STR(&ZYEAR.&ZMONTH.&ZDAY)
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          SET &DATE = &STR(&ZMONTH.&ZDAY.&ZYEAR)
       ELSE +
          SET &DATE = &STR(&ZDAY.&ZMONTH.&ZYEAR)
    END
 ELSE +
    DO
       IF &DATEFMT = JPN +
       THEN +
          DO
             SET &ZYEAR = &SUBSTR(1:2,&DATE)
             SET &ZDAY = &SUBSTR(5:6,&DATE)
             SET &ZMONTH = &SUBSTR(3:4,&DATE)
          END
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          DO
             SET &ZDAY = &SUBSTR(3:4,&DATE)
             SET &ZMONTH = &SUBSTR(1:2,&DATE)
             SET &ZYEAR = &SUBSTR(5:6,&DATE)
          END
       ELSE +
          DO
             SET &ZYEAR = &SUBSTR(5:6,&DATE)
             SET &ZDAY = &SUBSTR(1:2,&DATE)
             SET &ZMONTH = &SUBSTR(3:4,&DATE)
          END
       IF &ZDAY < 1 OR &ZDAY > 31 +
       THEN +
          DO
              ISPEXEC SETMSG MSG(CTMF000E)
              GOTO DISPPAN
          END
       IF &ZMONTH < 1 OR &ZMONTH > 12 +
       THEN +
          DO
              ISPEXEC SETMSG MSG(CTMF000E)
              GOTO DISPPAN
          END
    END

 /* SET &ORDDATE = &ZYEAR.&ZMONTH.&ZDAY
 SET &ORDDATE = &STR(&ZMONTH.&ZDAY)

 /* FIND OUT THE OPERATING MODE ACCORDING TO THE INPUT PARMS */
 CHKPARMS: +
 IF &REMAIN ^= YES AND &PLANID ^= &STR() +
 THEN +
    DO
       SET &NEWPLNID = &PLANID.&SUFFIX

       /* CHECK THE EXISTENCE OF THE "USER PROMPTING TABLE" AND  */
       /* THE "DAILY SCHEDULING TABLE".                          */
       PLNDAYTB: +
       SET &DAYLIB = &DAYTBLB.&ORDDATE
       SET &DSNRC = &SYSDSN('&DAYLIB(&NEWPLNID)')
       IF &DSNRC ^= OK +
       THEN +
          IF &DSNRC = &STR(MEMBER NOT FOUND) +
          THEN +
             DO
                SET &SCHTBLB = &DAYLIB
                SET &MSGPLAN = &NEWPLNID
                ISPEXEC SETMSG MSG(CTMF000G)
                GOTO DISPPAN
             END
          ELSE +
             DO
                SET &ERRDSN = &DAYLIB
                ISPEXEC SETMSG MSG(CTMF000F)
                GOTO DISPPAN
             END

       ISPEXEC VPUT (PLANID) PROFILE

       PLNUPPTB: +
       SET &UPPLIB = &UPPTBLB.&ORDDATE
       SET &DSNRC = &SYSDSN('&UPPLIB(&NEWPLNID)')
       IF &DSNRC ^= OK +
       THEN +
          IF &DSNRC = &STR(MEMBER NOT FOUND) +
          THEN +
             DO
                SET &TABNAME = &PLANID
                SET &TBLIB = &UPPLIB
                ISPEXEC SETMSG MSG(CTMF005C)
                GOTO DISPPAN
             END
          ELSE +
             DO
                SET &ERRDSN = &UPPLIB
                ISPEXEC SETMSG MSG(CTMF000F)
                GOTO DISPPAN
             END
       SET &PLANID = &NEWPLNID
       GOTO AELIBCK

    END

 /* CHECK THE EXISTENCE OF THE "USER PROMPTING TABLE" AND          */
 /* THE "DAILY SCHEDULING TABLE".                                  */
 CHKDAYTB: +
 SET &DAYLIB = &DAYTBLB.&ORDDATE
 SET &DSNRC = &SYSDSN('&DAYLIB')
 IF &DSNRC ^= OK +
 THEN +
    DO
       SET &ERRDSN = &DAYLIB
       ISPEXEC SETMSG MSG(CTMF000F)
       GOTO DISPPAN
    END

 CHKUPPTB: +
 SET &UPPLIB = &UPPTBLB.&ORDDATE
 SET &DSNRC = &SYSDSN('&UPPLIB')
 IF &DSNRC ^= OK +
 THEN +
    DO
       SET &ERRDSN = &UPPLIB
       ISPEXEC SETMSG MSG(CTMF000F)
       GOTO DISPPAN
    END

 /* CHECK THE EXISTANCE OF THE DAILY AUTO-EDIT LIBRARY */
 AELIBCK: +
 SET &AELIB = &AELIBNM.&ORDDATE
 SET &DSNRC = &SYSDSN('&AELIB')
 IF &DSNRC ^= OK +
 THEN +
    DO
     /* WRITE TRY TO ALLOCATE &AELIB AS A NEW AUTO-EDIT DAILY LIBRARY.
       SET &MSGDSN = &AELIB
       ISPEXEC CONTROL DISPLAY LOCK
       ISPEXEC DISPLAY MSG(CTMF002I)
       %CTMCALOC MASTLIB(&UPPLIB) DAYLIB(&AELIB)
       SET &RC = &LASTCC
       IF &RC = 0 +
       THEN +
          GOTO CHKIDXTB

       SET &ERRDSN = &AELIB
       ISPEXEC SETMSG MSG(CTMF000F)
       GOTO DISPPAN
    END

 /* CHECK THE EXISTENCE OF THE INDEX TABLE (INDXTBL)    */
 /* THAT KEEPS INFORMATION ABOUT ALL THE UPPS.          */
 CHKIDXTB: +
 SET &UPPDDN = UPPDDN
 ISPEXEC SELECT PGM(CTMTIOT) PARM(&UPPDDN)
 ISPEXEC VGET (TIOTDDN,TIOTDSN,TIOTNUM) SHARED
 IF &TIOTDSN ^= &UPPLIB +
 THEN +
    DO
       SET &TIOTNUM = &TIOTNUM + 101
       SET &TIOTNUM = &SUBSTR(2:3,&TIOTNUM)
       SET &UPPDDN = &STR(&UPPDDN.&TIOTNUM)
       ALLOC FILE(&UPPDDN) DA('&UPPLIB') SHR
       SET &RC = &LASTCC
       IF &RC ^= 0 +
       THEN +
          DO
             SET &ERRDSN = &UPPLIB
             ISPEXEC SETMSG MSG(CTMF000F)
             GOTO DISPPAN
          END
    END
 ELSE +
    SET &UPPDDN = &TIOTDDN

 SET &DSNRC = &SYSDSN('&UPPLIB(INDXTBL)')
 IF &DSNRC ^= OK +
 THEN +
    DO
        ISPEXEC SETMSG MSG(CTMF001H)
        GOTO DISPPAN
    END
 ELSE +
    DO
       ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) NOWRITE
       SET &RC=&LASTCC
       IF &RC ^= 0 -
       THEN +
          IF &RC = 12 +
          THEN +
             DO
                  ISPEXEC SETMSG MSG(CTMF001B)
                  GOTO DISPPAN
             END
          ELSE +
             DO
                ISPEXEC SETMSG MSG(CTMF000A)
                GOTO DISPPAN
             END
    END
 SET &TB1IND = NO
 SET &REMIND = NO
 IF &REMAIN = YES +
 THEN +
    GOTO OPTREM
 IF &PLANID = &STR() +
 THEN +
    GOTO OPTLIST

 /* TREAT A SPECIFIC PLANID  */
 SET &IXTBNAME = &NEWPLNID
 ISPEXEC TBSCAN INDXTBL ARGLIST(IXTBNAME) CONDLIST(EQ)
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    DO
       ISPEXEC TBEND INDXTBL
       ISPEXEC SETMSG MSG(CTMF001I)
       GOTO DISPPAN
    END
 SET &TB1IND = YES
 GOTO PLANSEL
 ENDTB1: +
 ISPEXEC TBEND INDXTBL
 SET &RC = &LASTCC
 GOTO ENDAPEXE

 /* PROCEDURE FOR TREATING REMAIN OPTION - DISPLAY ONE BY ONE ALL   */
 /* THE PLANS THAT HAVE MORE VARIABLES TO PROMPT.                   */
 OPTREM: +
 ISPEXEC TBEND INDXTBL
 ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) WRITE
 SET &RC=&LASTCC
 IF &RC ^= 0 -
 THEN -
    DO
       ISPEXEC SETMSG MSG(CTMF000A)
       GOTO DISPPAN
    END
 SET &REMIND = YES
 ISPEXEC TBTOP INDXTBL
 ISPEXEC TBVCLEAR INDXTBL
 SET &IXTBEXEC = YES
 ISPEXEC TBSARG INDXTBL NEXT NAMECOND(IXTBEXEC,NE)
 SET &RC = &LASTCC
 SCNLOOP: +
 ISPEXEC TBSCAN INDXTBL
   SET &RC = &LASTCC
   IF &RC = 0 +
   THEN +
      DO
         GOTO PLANSEL
         GOTO SCNLOOP
      END
   ELSE +
      IF &RC ^= 8 +
      THEN +
         DO
             ISPEXEC SETMSG MSG(CTMF000A)
             GOTO ENDREM
         END
      ELSE +
         ISPEXEC SETMSG MSG(CTMF001J)
 ENDREM: +
 ISPEXEC TBCLOSE INDXTBL LIBRARY(&UPPDDN)
 SET &RC = &LASTCC
 GOTO ENDAPEXE

 /* PROCEDURE FOR TREATING PLANS LIST OPTION - DISPLAY THE LIST OF  */
 /* THE PLANS IN THE DAILY LIBRARY AND THE USER CHOOSES A PLAN TO   */
 /* WORK ON.                                                        */
 OPTLIST: +
 ISPEXEC TBTOP INDXTBL
DISP01: +
 ISPEXEC TBVCLEAR INDXTBL
 SET &IXTBNAME = &STR(&PREFIX.&STR(*))
 ISPEXEC TBSARG INDXTBL
 SET &RC = &LASTCC
 IF &RC = 0 -
 THEN -
    GOTO REDISP
 ELSE -
    DO
      SET &SPFRC = &RC
      ISPEXEC SETMSG MSG(CTMF000A)
      GOTO REDISP
    END
 SET CURNAME = TCMD
REDISP: +
 IF &REMIND = YES +
 THEN +
    GOTO SCNLOOP
 ELSE +
    IF &TB1IND = YES +
    THEN +
       GOTO ENDTB1
 ISPEXEC TBDISPL INDXTBL PANEL(CTMPF30W)
 SET &RC = &LASTCC
 IF &RC > 4 -
 THEN -
    IF &RC > 8 -
    THEN -
       DO
          SET &PFK3 = PFK3
          ISPEXEC SETMSG MSG(CTMF000Z)
          GOTO ENDLIST
       END
    ELSE -
       DO
          SET &PFK3 = PFK3
          GOTO ENDLIST
       END
 IF &LENGTH(&TCMD) > 2 -
 THEN -
    DO
      SET &CMDPREF = &SUBSTR(1:2,&TCMD)
      IF &CMDPREF = L /* OR &CMDPREF = L (SMALL)   -  */   +
      THEN -
         DO
            SET &LOCARG = &SUBSTR(3:&LENGTH(&TCMD),&TCMD)
            SET &LOCARG = &STR(&LOCARG.&STR(*))
            SET &IXTBNAME = &STR(&LOCARG)
            ISPEXEC TBSCAN INDXTBL ARGLIST(IXTBNAME) NOREAD
            SET &RC = &LASTCC
            IF &RC = 0 -
            THEN +
               GOTO REDISP
            ELSE +
               IF &RC = 8 +
               THEN +
                  DO
                    ISPEXEC SETMSG MSG(CTMF000B)
                    GOTO REDISP
                  END
               ELSE +
                  DO
                    ISPEXEC SETMSG MSG(CTMF000Z)
                    GOTO REDISP
                  END
         END
      ELSE -
         DO
           ISPEXEC SETMSG MSG(CTMF000C)
           GOTO REDISP
         END
    END
 ELSE -
    IF &TCMD ^= &STR() -
    THEN -
       DO
          ISPEXEC SETMSG MSG(CTMF000C)
           GOTO REDISP
       END
 IF &LASTPREF ^= &PREFIX +
 THEN +
    DO
       SET &LASTPREF = &PREFIX
       GOTO DISP01
    END
 IF &ZTDSELS = 0 -
 THEN +
    GOTO REDISP

 /* TAKE A REFRESH COPY OF THE INDEX TABLE */
 SET &KEEPTBNM = &IXTBNAME
 SET &KEEPTBTM = &STR(&IXTBTIME)
 SET &KEEPTBEX = &IXTBEXEC
 ISPEXEC TBEND INDXTBL
 ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) NOWRITE
 SET &RC=&LASTCC
 IF &RC = 0 +
 THEN +
    DO
       SET &IXTBNAME = &KEEPTBNM
       ISPEXEC TBSCAN INDXTBL ARGLIST(IXTBNAME) CONDLIST(EQ)
       SET &RC = &LASTCC
       IF &RC ^= 0 +
       THEN +
          DO
             ISPEXEC TBEND INDXTBL
             ISPEXEC SETMSG MSG(CTMF001I)
             GOTO DISPPAN
          END
       IF &KEEPTBEX ^= &IXTBEXEC +
       THEN +
          DO
             ISPEXEC SETMSG MSG(CTMF001L)
             GOTO DISP01
          END
       SET &IXTBTIME = &STR(&KEEPTBTM)
    END
 ELSE +
    DO
       ISPEXEC SETMSG MSG(CTMF001B)
       GOTO DISPPAN
    END

 /* A GENERAL SECTION FOR TREATING ONE TABLE. WE GET TO THIS SECTION */
 /* FROM ALL THE OPERATING OPTIONS.                                  */
 /* IT CALLS THE PROMPTING PROGRAM WHICH LETS THE USER FILL VALUES.  */
 /* IF ALL THE PARAMETERS HAS VALUES, IT CALLS THE ORDER PROGRAM     */
 /* WHICH BUILD THE AUTO-EDIT MEMBER AND ADDS THE CONDITION.         */
 /* AT LAST, WE OPERATE CTMJOB TO ACTUALY ORDER THE REQUIRED PLAN.   */
 /*                                                                  */
 PLANSEL: +
 IF &TIME ^= &STR() +
 THEN +
    SET &IXTBTIME = &STR(&TIME)
 SET &CANORDER = NO
 SET &AEDIONLY = NO
 IF &IXTBEXEC = YES +
 THEN +
    DO
       SET &AEDIONLY = YES
    END
 ELSE +
    SET &AEDIONLY = NO

 ISPEXEC TBOPEN &IXTBNAME LIBRARY(&UPPDDN) WRITE
 SET &RC=&LASTCC
 IF &RC ^= 0 -
 THEN -
    DO
    /*  ISPEXEC SETMSG MSG(CTMF001C) */
        ISPEXEC SETMSG MSG(CTMF005E)
        GOTO DISP01
    END
 IF &REMIND = YES +
 THEN +
    ISPEXEC SELECT PGM(CTMTPRP) PARM(NULLS,&IXTBNAME)
 ELSE +
    ISPEXEC SELECT PGM(CTMTPRP) PARM(ALLTB,&IXTBNAME)
 ISPEXEC VGET (PROMPTRC) SHARED
 IF &PROMPTRC > 4 +
 THEN +
    DO
       ISPEXEC TBEND &IXTBNAME
  /*   WRITE HIGH RC FROM PROMPT PROGRAM &PROMPTRC  */
  /*   WRITE UNABLE TO CONTINUE WITH THIS TABLE     */
       GOTO REDISP
    END
 ISPEXEC TBCLOSE &IXTBNAME LIBRARY(&UPPDDN)
 IF &PROMPTRC = 0 +
 THEN +
    SET &CANORDER = YES
 ELSE +
    DO
       ISPEXEC SETMSG MSG (CTMF001A)
    END

 /* NOW CHECK IF PLAN SHOULD BE ORDERED */
 IF &CANORDER = YES +
 THEN +
    DO
       ISPEXEC TBOPEN &IXTBNAME LIBRARY(&UPPDDN) NOWRITE
       SET &RC=&LASTCC
       IF &RC ^= 0 -
       THEN -
          DO
             ISPEXEC SETMSG MSG (CTMF001C)
             GOTO REDISP
          END
       IF &AEDIONLY ^= YES +
       THEN +
          DO
             /* CHECK THAT THE PARAMETERS MEMBER DOESNT EXIST YET  */
             /* "MEMBER NOT FOUND" IS THE DESIRED RC FROM SYSDSN   */
             SET &DSNRC = &SYSDSN('&AELIB(&IXTBNAME)')
             IF &DSNRC = OK +
             THEN +
                DO    /* "OK" RETURN CODE IS NOT GOOD HERE */
                      ISPEXEC TBEND &IXTBNAME
                      ISPEXEC SETMSG MSG(CTMF001E)
                      GOTO RETLOOP
                END
             ELSE +
                IF &DSNRC ^= &STR(MEMBER NOT FOUND) +
                THEN +
                   DO
                      ISPEXEC TBEND &IXTBNAME
                      ISPEXEC SETMSG MSG(CTMF001D)
                      GOTO RETLOOP
                   END
          END

       FREE  DD(DARESF,DASINC,DALOG,DAPRINT,DACKPT)
       ALLOC DD(DARESF)   DA('&DBPREFA..&DBVERA..RES') SH
       ALLOC DD(DASINC)   DA('&DBPREFA..&DBVERA..SNC') SH
       ALLOC DD(DALOG)    DA('&DBPREFA..&DBVERA..LOG') SH
       ALLOC DD(DACKPT)   DA('&DBPREFM..&DBVERM..CKP') SH
       ALLOC DD(DAPRINT)  DA(*)
       ALLOC DD(DAOUT)    DA(*)
       ALLOC DD(PRTDBG)   DA(*)
       ALLOC DD(SYSPRINT) DA(*)
       SET YY = &SUBSTR(5:6,&DATE)
       IF &DATEFMT = JPN +
       THEN +
          DO
             SET YY = &SUBSTR(1:2,&DATE)
             SET &DD = &STR(&SUBSTR(5:6,&DATE))
             SET &MM = &STR(&SUBSTR(3:4,&DATE))
          END
       ELSE +
       IF &DATEFMT = USA +
       THEN +
          DO
             SET &DD = &STR(&SUBSTR(3:4,&DATE))
             SET &MM = &STR(&SUBSTR(1:2,&DATE))
          END
       ELSE +
          DO
             SET &DD = &STR(&SUBSTR(1:2,&DATE))
             SET &MM = &STR(&SUBSTR(3:4,&DATE))
          END
  ISPEXEC VPUT (AELIB,DAYLIB,IXTBTIME,DD,MM,YY,DATEFMT,AEDIONLY) +
                    SHARED

       /* OPEN THE INDEX TABLE FOR UPDATE NOW */
       IF &REMIND ^= YES +
       THEN +
          DO
             SET &KEEPTBNM = &IXTBNAME
             SET &KEEPTBTM = &STR(&IXTBTIME)
             SET &MONE = 0
             ISPEXEC TBEND INDXTBL
             WAITOPN1: +
             ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) WRITE
             SET &RC=&LASTCC
             IF &RC ^= 0 -
             THEN -
                DO
                   IF &MONE > 3 +
                   THEN +
                      DO
                         ISPEXEC TBEND &IXTBNAME
                         ISPEXEC SETMSG MSG(CTMF001B)
                         ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) +
                                        NOWRITE
                         SET &RC = &LASTCC
                         IF &RC = 0 +
                         THEN +
                            GOTO DISP01
                         ELSE +
                            GOTO DISPPAN
                      END
                   ELSE +
                      DO
                         SET &MONE = &MONE + 1
                         GOTO WAITOPN1
                      END
                END
          END

       /* NOW, CALL THE ORDER PROGRAM */
   LSTDS: LISTDSI DACAL FILE PREALLOC
       SET &OLDDACAL = &SYSDSNAME
       FREE  DD(DACAL)
       ALLOC DD(DACAL) DA('&OLPREFA..&OLVERA..CAL') SH
       ISPEXEC SELECT PGM(CTMTORD) PARM(&IXTBNAME)
       IF '&OLDDACAL' = '' THEN GOTO NODEALL
       IF '&OLDDACAL' = '&OLPREFA..&OLVERA..CAL' THEN GOTO NODEALL
       FREE  DD(DACAL)
       ALLOC DD(DACAL) DA('&OLDDACAL')
   NODEALL:+
       ISPEXEC TBEND &IXTBNAME
       ISPEXEC VGET (ORDERRC) SHARED
       IF &ORDERRC = 0 +
       THEN +
          DO
             SET &IXTBEXEC = YES
             IF &AEDIONLY = YES +
             THEN +
                ISPEXEC SETMSG MSG(CTMF001K)
             ELSE +
                ISPEXEC SETMSG MSG(CTMF001G)
          END
       IF &REMIND ^= YES +
       THEN +
          DO
             SET &KEEPTBEX = &IXTBEXEC
             SET &IXTBNAME = &KEEPTBNM
             ISPEXEC TBSCAN INDXTBL ARGLIST(IXTBNAME) CONDLIST(EQ)
             SET &RC = &LASTCC
             IF &RC ^= 0 +
             THEN +
                DO
                   ISPEXEC TBEND INDXTBL
                   ISPEXEC SETMSG MSG(CTMF001I)
                   GOTO DISPPAN
                END
             SET &IXTBTIME = &STR(&KEEPTBTM)
             SET &IXTBEXEC = &KEEPTBEX
             ISPEXEC TBPUT INDXTBL
             ISPEXEC TBCLOSE INDXTBL LIBRARY(&UPPDDN)
             ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) NOWRITE
          END
       ELSE +
          DO
              ISPEXEC TBPUT INDXTBL
              GOTO SCNLOOP
          END
       GOTO DISP01
    END
 RETLOOP: +
 IF &REMIND ^= YES +
 THEN +
    DO
       SET &KEEPTBNM = &IXTBNAME
       SET &KEEPTBTM = &STR(&IXTBTIME)
       SET &KEEPTBEX = &IXTBEXEC
       SET &MONE = 0
       ISPEXEC TBEND INDXTBL
       WAITOPN2: +
       ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) WRITE
       SET &RC=&LASTCC
       IF &RC = 0 +
       THEN +
          DO
             SET &IXTBNAME = &KEEPTBNM
             ISPEXEC TBSCAN INDXTBL ARGLIST(IXTBNAME) CONDLIST(EQ)
             SET &RC = &LASTCC
             IF &RC ^= 0 +
             THEN +
                DO
                   ISPEXEC TBEND INDXTBL
                   ISPEXEC SETMSG MSG(CTMF001I)
                   GOTO DISPPAN
                END
             SET &IXTBTIME = &STR(&KEEPTBTM)
             SET &IXTBEXEC = &KEEPTBEX
             ISPEXEC TBPUT INDXTBL
             ISPEXEC TBCLOSE INDXTBL LIBRARY(&UPPDDN)
          END
       ELSE -
          DO
             IF &MONE > 3 +
             THEN +
                DO
                   ISPEXEC SETMSG MSG(CTMF001B)
                   ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) NOWRITE
                   SET &RC = &LASTCC
                   IF &RC = 0 +
                   THEN +
                      GOTO DISP01
                   ELSE +
                      GOTO DISPPAN
                END
             ELSE +
                DO
                   SET &MONE = &MONE + 1
                   GOTO WAITOPN2
                END
          END
       ISPEXEC TBOPEN INDXTBL LIBRARY(&UPPDDN) NOWRITE
    END
 ELSE +
    DO
       ISPEXEC TBPUT INDXTBL
       GOTO SCNLOOP
    END

 GOTO DISP01
 /* GOTO REDISP

 ENDLIST: +
 ISPEXEC TBEND INDXTBL
 SET &RC = &LASTCC
 IF &RC ^= 0 +
 THEN +
    ISPEXEC SETMSG MSG(CTMF000A)

 ENDAPEXE: +
 GOTO DISPPAN
 END: +
 EXIT
