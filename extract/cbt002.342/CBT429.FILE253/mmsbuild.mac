/* REXX EXEC : ( MMSBUILD ).
   FUNCTION  : READS THE INDEX DATASET LISTING OF MEMBERS IN THE MMS
               SOURCE PDS. THE TYPE MEMBER AND LANG CODE IS DETERMINED
               AND THE APPROPRIATE IEBCOPY JCL JOB IS BUILT TO COPY
               THE MEMBERS INTO THE APPROPRIATE TARGET PDS FOR THE
               LIBRARIAN UTILITY MASS ADD FUNCTION.
               THE BATCH AND ONLINE CICS LOAD MODULE MEMBERS ARE ALSO
               SEPARATED AND COPIED INTO A TARGET LOADLIB FOR MERGING
               INTO THE PRODUCTION LOADLIB DATASETS.
   INPUT     : DSN=( APPL307.MMS.MODLIST )
               DSN=( SYSM.MMS.V4R1M1.SRLIB )
               DSN=( SYSM.MMS.V4R1M1.LOADLIB ).
   OUTPUT    : DSN=( SYSS.MMS.TURNOVER.JCLLIB )
               DSN=( SYSS.MMS.TURNOVER.ASSEMBLR.SRCELIB )
               DSN=( SYSS.MMS.TURNOVER.BATCH.COBOL.SRCELIB )
               DSN=( SYSS.MMS.TURNOVER.CICS.COBOL.SRCELIB )
               DSN=( SYSS.MMS.TURNOVER.ASSEMBLR.MACLIB )
               DSN=( SYSS.MMS.TURNOVER.COPYBOOK.COPYLIB )
               DSN=( SYSS.MMS.TURNOVER.XBOOK.COPYLIB )
               DSN=( SYSS.MMS.TURNOVER.BATCH.LOADLIB )
               DSN=( SYSS.MMS.TURNOVER.CICS.LOADLIB ).
   AUTHOR    : DAN BOWEN - 04/19/95.
                                                                      */
TRACE O
/*     */
HOUSE_KEEPING:
ADDRESS TSO
INDSN.1 = 'APPL307.MMS.MODLIST'
INDSN.2 = 'SYSM.MMS.V4R1M1.SRLIB'
INDSN.3 = 'SYSS.MMS.V4R1M1.LOADLIB'
DO D = 1 TO 3
   MDSN = SYSDSN("'"INDSN.D"'")
   IF MDSN = 'OK' THEN ITERATE
   SAY '****************************************************************
   SAY '*** DATASET NOT FOUND FOR: ('INDSN.D'). ***'
   SAY '*** MMSBUILD EXEC TASK CANCELLED - RETURN CODE: (028). ***'
   SAY '****************************************************************
   EXIT 028
END
X = MSG("OFF")
"FREE FILE(MMSDD)"
ACCTCDE = '5304010530000000'
A = 1
B = 1
C = 1
D = 1
E = 0
F = 1
G = 1
L = 1
O = 1
ASMSRCE.A = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
CPYBOOK.B = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
XBOOK.C = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
MACRO.D = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
BATCOBOL.F = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
CICSCOB.G = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
LMODB.L = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
LMODC.O = '  COPY  OUTDD=OUTDD1,INDD=INDD1'
TYPECNT = 10
TYPE.1 = 'MAP ASM'
TYPE.2 = 'BOOK CB2'
TYPE.3 = 'XBOOK CB2'
TYPE.4 = 'VIEW ASM'
TYPE.5 = 'PGM CB2'
TYPE.6 = 'PGM ASM'
TYPE.7 = 'SUB ASM'
TYPE.8 = 'SUB CB2'
TYPE.9 = 'REC ASM'
TYPE.10 = 'BOOK ASM'
TARGCNT = 3
TARG.1 = '-     B'
TARG.2 = 'C     -'
TARG.3 = 'C     B'
PDS.11 = 'ASMSRCE 1'
PDS.12 = 'ASMSRCE 2'
PDS.13 = 'ASMSRCE 1 2'
PDS.21 = 'COPYBOOK'
PDS.22 = 'COPYBOOK'
PDS.23 = 'COPYBOOK'
PDS.31 = 'XBOOK 2'
PDS.32 = 'XBOOK 2'
PDS.33 = 'XBOOK 2'
PDS.41 = 'MACRO'
PDS.42 = 'MACRO'
PDS.43 = 'MACRO'
PDS.51 = 'BATCHCOB 1'
PDS.52 = 'CICSCOB 2'
PDS.53 = 'BATCHCOB 1 2'
PDS.61 = 'ASMSRCE 1'
PDS.62 = 'ASMSRCE 2'
PDS.63 = 'ASMSRCE 1 2'
PDS.71 = 'ASMSRCE 1'
PDS.72 = 'ASMSRCE 2'
PDS.73 = 'ASMSRCE 1 2'
PDS.81 = 'BATCHCOB 1'
PDS.82 = 'CICSCOB 2'
PDS.83 = 'BATCHCOB 1 2'
PDS.91 = 'COPYBOOK'
PDS.92 = 'COPYBOOK'
PDS.93 = 'COPYBOOK'
PDS.101 = 'MACRO'
PDS.102 = 'MACRO'
PDS.103 = 'MACRO'
MMSMEMB = 'MMSASSEM MMSCPYBK MMSXBOOK MMSMACRO MMSERRLG MMSBCOB2 MMSCCOB
 MMSBLMOD MMSCLMOD'
MMSTABLE = 'ASMSRCE. CPYBOOK. XBOOK. MACRO. EMSG. BATCOBOL. CICSCOB. LMO
 LMODC.'
MMSINDEX = 'A B C D E F G L O'
MMSIPDS.1 = 'SYSM.MMS.V4R1M1.SRLIB'
MMSIPDS.2 = 'SYSM.MMS.V4R1M1.SRLIB'
MMSIPDS.3 = 'SYSM.MMS.V4R1M1.SRLIB'
MMSIPDS.4 = 'SYSM.MMS.V4R1M1.SRLIB'
MMSIPDS.5 = 'SYSM.MMS.V4R1M1.SRLIB'
MMSIPDS.6 = 'SYSM.MMS.V4R1M1.SRLIB'
MMSIPDS.7 = 'SYSS.MMS.V4R1M1.LOADLIB'
MMSIPDS.8 = 'SYSS.MMS.V4R1M1.LOADLIB'
MMSOPDS.1 = 'SYSS.MMS.TURNOVER.ASSEMBLR.SRCELIB'
MMSOPDS.2 = 'SYSS.MMS.TURNOVER.COPYBOOK.COPYLIB'
MMSOPDS.3 = 'SYSS.MMS.TURNOVER.XBOOK.COPYLIB'
MMSOPDS.4 = 'SYSS.MMS.TURNOVER.ASSEMBLR.MACLIB'
MMSOPDS.5 = 'SYSS.MMS.TURNOVER.BATCH.COBOL.SRCELIB'
MMSOPDS.6 = 'SYSS.MMS.TURNOVER.CICS.COBOL.SRCELIB'
MMSOPDS.7 = 'SYSS.MMS.TURNOVER.BATCH.LOADLIB'
MMSOPDS.8 = 'SYSS.MMS.TURNOVER.CICS.LOADLIB'
MMSINFO.1 = 'MMS.ASSEMBLER.SOURCE'
MMSINFO.2 = 'MMS.COPYBOOK.MEMBERS'
MMSINFO.3 = 'MMS.XBOOK.MEMBERS'
MMSINFO.4 = 'MMS.ASSEMBLER.MACRO'
MMSINFO.5 = 'MMS.BATCH.COBOL.SRCE'
MMSINFO.6 = 'MMS.CICS.COBOL.SRCE'
MMSINFO.7 = 'MMS.BATCH.LOAD.MODS'
MMSINFO.8 = 'MMS.CICS.LOAD.MODULE'
MMSCPYM = 'MMSASSEM MMSCPYBK MMSXBOOK MMSMACRO MMSBCOB2 MMSCCOB2 MMSBLMO
 MMSCLMOD'
OUTPDS = 'SYSS.MMS.TURNOVER.JCLLIB'
CALL READ_MMS_INDEX
CALL READ_MMS_SOURCELIB
CALL READ_MMS_LOADLIB
/*      M A I N   R O U T I N E   S E C T I O N     */
/*     */
MAIN_ROUTINE:
DO S = 7 TO SRCELST.0
   MEMBER = STRIP(SRCELST.S)
   CALL FIND_INDEX_MEMBER
   IF FINDSW = 'NO' THEN ITERATE
   CALL GET_MEMBER_TARGET_PDS
   IF TARGSW = 'NO' THEN ITERATE
   LABEL = 'BUILD_IEBCOPY_SYSIN_'TARGET
   INTERPRET CALL LABEL
   LOAD = WORD(TARGET,2)
   IF LOAD = '' THEN ITERATE
   MODSW = 'NO'
   LABEL = 'BUILD_LOADLIB_IEBCOPY_SYSIN_'LOAD
   INTERPRET CALL LABEL
   IF MODSW = 'NO' THEN ITERATE
   LOAD = WORD(TARGET,3)
   IF LOAD = '' THEN ITERATE
   LABEL = 'BUILD_LOADLIB_IEBCOPY_SYSIN_'LOAD
   INTERPRET CALL LABEL
END
/*     */
WRITE_PDS_MEMBERS:
DO I = 1 TO 9
   OUTMEMB = WORD(MMSMEMB,I)
   MMS = WORD(MMSTABLE,I)
   S = WORD(MMSINDEX,I)
   CALL WRITE_MMS_MEMBER
END
/*     */
WRITE_MMS_JCLJOB_MEMBERS:
DO I = 1 TO 8
   OUTMEMB = 'MMSCOPY'I
   MMSIN = MMSIPDS.I
   MMSOUT = MMSOPDS.I
   MMSDOC = MMSINFO.I
   CPYSYSIN = WORD(MMSCPYM,I)
   CALL WRITE_MMS_JCL_MEMBER
END
EXIT 0
/*
       S U B R O U T I N E    S E C T I O N     */
/*     */
READ_MMS_INDEX:
"ALLOC DA('"INDSN.1"') FILE(MMSDD) SHR"
"EXECIO * DISKR MMSDD (STEM MMSINDX. FINIS"
SRC = RC
"FREE FILE(MMSDD)"
IF SRC ^= 0 THEN DO
   SAY '****************************************************************
   SAY '*** EXECIO READ ERROR: ('INDSN.1'). ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED - RC = ('SRC'). ***'
   SAY '****************************************************************
   EXIT SRC
END
RETURN
/*     */
READ_MMS_SOURCELIB:
SO = OUTTRAP("SRCELST.","*","CONCAT")
"LISTDS ('"INDSN.2"') MEMBERS"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** LISTDS ERROR FOR: ('INDSN.2'). ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED - RC = ('SRC'). ***'
   EXIT SRC
END
IF SRCELST.0 < 7 THEN DO
   SAY '*** LISTDS ERROR FOR: ('INDSN.2'). ***'
   SAY '*** NO MEMBERS IN THE INPUT PDS FROM LISTDS FUNCTION. ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED - RC = ('SRC'). ***'
   EXIT SRC
END
RETURN
/*     */
READ_MMS_LOADLIB:
LO = OUTTRAP("LOADLST.","*","CONCAT")
"LISTDS ('"INDSN.3"') MEMBERS"
SRC = RC
IF SRC ^= 0 THEN DO
   SAY '*** LISTDS ERROR FOR: ('INDSN.3'). ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED - RC = ('SRC'). ***'
   EXIT SRC
END
IF LOADLST.0 < 7 THEN DO
   SAY '*** LISTDS ERROR FOR: ('INDSN.3'). ***'
   SAY '*** NO MEMBERS IN THE INPUT PDS FROM LISTDS FUNCTION. ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED - RC = ('SRC'). ***'
   EXIT SRC
END
RETURN
/*     */
FIND_INDEX_MEMBER:
FINDSW = 'NO'
TYPESW = 'NO'
DO I = 1 TO MMSINDX.0
   IMEMB = WORD(MMSINDX.I,1)
   IF IMEMB = MEMBER THEN DO
      FINDSW = 'YES'
      T1 = WORD(MMSINDX.I,2)
      T2 = WORD(MMSINDX.I,3)
      LEAVE
   END
END
IF FINDSW = 'NO' THEN DO
   E = E + 1
   EMSG.E = MEMBER '*** NO ENTRY FOUND IN MODULE INDEX LISTING - EXCLUDE
   RETURN
END
ITYPE = T1 T2
DO T = 1 TO TYPECNT
   IF ITYPE = TYPE.T THEN DO
      TYPESW = 'YES'
      LEAVE
   END
END
IF TYPESW = 'NO' THEN DO
   FINDSW = 'NO'
   E = E + 1
   EMSG.E = MEMBER '*** NO TYPE AND LANG ENTRY FOUND IN INDEX LIST - EXC
   RETURN
END
RETURN
/*     */
GET_MEMBER_TARGET_PDS:
TARGSW = 'NO'
DO P = 1 TO TARGCNT
   TOPDS = POS(TARG.P,MMSINDX.I)
   IF TOPDS ^= 0 THEN DO
      TARGSW = 'YES'
      TARGET = VALUE('PDS.'T××P)
      LEAVE
   END
END
IF TARGSW = 'NO' THEN DO
   E = E + 1
   EMSG.E = MEMBER '*** NO ENTRY FOUND - LANG AND TARGET PDS - EXCLUDED
   RETURN
END
RETURN
/*     */
BUILD_IEBCOPY_SYSIN_ASMSRCE:
A = A + 1
ASMSRCE.A = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_IEBCOPY_SYSIN_COPYBOOK:
B = B + 1
CPYBOOK.B = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_IEBCOPY_SYSIN_XBOOK:
C = C + 1
XBOOK.C = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_IEBCOPY_SYSIN_MACRO:
D = D + 1
MACRO.D = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_IEBCOPY_SYSIN_BATCHCOB:
F = F + 1
BATCOBOL.F = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_IEBCOPY_SYSIN_CICSCOB:
G = G + 1
CICSCOB.G = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_LOADLIB_IEBCOPY_SYSIN_1:
DO M = 7 TO LOADLST.0
   LMOD = STRIP(LOADLST.M)
   IF LMOD = MEMBER THEN DO
      MODSW = 'YES'
      LEAVE
   END
END
IF MODSW = 'NO' THEN RETURN
L = L + 1
LMODB.L = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
BUILD_LOADLIB_IEBCOPY_SYSIN_2:
IF MODSW = 'NO' THEN DO M = 7 TO LOADLST.0
   LMOD = STRIP(LOADLST.M)
   IF LMOD = MEMBER THEN DO
      MODSW = 'YES'
      LEAVE
   END
END
IF MODSW = 'NO' THEN RETURN
O = O + 1
LMODC.O = '  SELECT  MEMBER=('MEMBER')'
RETURN
/*     */
WRITE_MMS_MEMBER:
"DELSTACK"
RCDCNT = VALUE(S)
IF RCDCNT = 0 THEN RETURN
"ALLOC DA('"OUTPDS"("OUTMEMB")') FILE(MMSDD) OLD"
DO R = 1 TO RCDCNT
   RECORD = VALUE(MMS××R)
   QUEUE RECORD
END
"EXECIO "RCDCNT" DISKW MMSDD (FINIS"
SRC = RC
"FREE FILE(MMSDD)"
IF SRC ^= 0 THEN DO
   SAY '****************************************************************
   SAY '*** PDS WRITE ERROR: ('OUTPDS'('OUTMEMB'). ***'
   SAY '*** EXECIO WRITE RETURN CODE: (' SRC '). ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED. ***'
   SAY '****************************************************************
   EXIT SRC
END
RETURN
/*     */
WRITE_MMS_JCL_MEMBER:
"DELSTACK"
JN = OUTMEMB
JCL.1 = "//"JN" JOB "ACCTCDE",'"MMSDOC"',NOTIFY=TECH103,"
JCL.2 = "//             CLASS=P,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M"
JCL.3 = "//COPYMEMB EXEC PGM=IEBCOPY"
JCL.4 = "//INDD1    DD DSN="MMSIN",DISP=SHR"
JCL.5 = "//OUTDD1   DD DSN="MMSOUT",DISP=SHR"
JCL.6 = "//SYSPRINT DD SYSOUT=*"
JCL.7 = "//SYSIN    DD DSN=SYSS.MMS.TURNOVER.JCLLIB("CPYSYSIN"),DISP=SHR
JCL.8 = "//"
DO J = 1 TO 8
   QUEUE JCL.J
END
"ALLOC DA('"OUTPDS"("OUTMEMB")') FILE(MMSDD) OLD"
"EXECIO 8 DISKW MMSDD (FINIS"
SRC = RC
"FREE FILE(MMSDD)"
IF SRC ^= 0 THEN DO
   SAY '****************************************************************
   SAY '*** PDS WRITE ERROR: ('OUTPDS'('OUTMEMB'). ***'
   SAY '*** EXECIO WRITE RETURN CODE: (' SRC '). ***'
   SAY '*** MMSBUILD EXEC SUBTASK CANCELLED. ***'
   SAY '****************************************************************
   EXIT SRC
END
RETURN
/* *****   E N D    M M S B U I L D   ***** */
