*********************************************************************
*  THIS PROGRAM WILL LIST THE LINKLIB AND LPA DATASETS OR IF        *
*  SPECIFIED , TELL IF THE MODULE IS IN THE LINKLIST OR LPA         *
*  BOYSEN/AMDAHL   11/06/92                                         *
*                                                                   *
*  ENVIRONMENT:  TSO COMMAND                                        *
*  COMMAND SYNTAX:  LLIST <LOAD MODULE NAME>                        *
*  DEFAULT:  PRINT LINKLIST AND LPA DATASETS                        *
*  SPECILAL ASM/LINK PARMS:  NONE                                   *
*                                                                   *
*********************************************************************
LLIST    CSECT
******************************    LINK LIST TABLE DSECT
LLT      DSECT
LLTHEAD  DS    0CL8                     TABLE HEADER
LLTID    DS    CL4                      TABLE ID 'LLT '
LLTCOUNT DS    F                        NUMBER OF ENTRIES IN TABLE
LLTDSNS  DSECT
LLTENTRY EQU   *                        ENTRIES IN TABLE
LLTDSLTH DS    X                        LENGTH OF DATASET NAME
LLTDSN   DS    CL44                     DATASET NAME
LLTAPFTB DSECT                          LNKLST APF LIBRARIES TABLE
LLTANTRY EQU   *                        LNKLST DATA SET ENTRIES
LLTAFLGS DS    X                        FLAG BYTES
LLTAPFIN EQU   X'80'                    LIBRARY IS IN APF TABLE
LLTARSV1 EQU   X'7F'                    RESERVED
*
******************************    LPALST TABLE DSECT
LPAT     DSECT
LPATHDR  DS    0CL8                     HEADER SECTION
LPATID   DS    CL4                      TABLE ID 'LPAT'
LPATCNT  DS    F                        NUMBER OF ENTRIES IN TABLE
LPATDSNS DSECT
LPATNTRY EQU   *                        TABLE ENTRY
LPATDSLN DS    X                        LENGTH OF DATA SET NAME
LPATDSN  DS    CL44                     DATA SET NAME
*
LLIST    CSECT
R15      EQU   15
R14      EQU   14
R13      EQU   13
R12      EQU   12                       BASE REGISTER
R11      EQU   11
R10      EQU   10                       APF LLT ADDRESS COMPUTATION
R9       EQU   9                        APF LLT ADDRESS COMPUTATION
R8       EQU   8                        COMPUTE LLT ENTRIES LENGTH
R7       EQU   7
R6       EQU   6                        BLDL PDS DIRECTORY ENTRY
R5       EQU   5                        CDE ADDRESSABILITY
R4       EQU   4
R3       EQU   3
R2       EQU   2
R1       EQU   1
R0       EQU   0
LLIST    CSECT
         STM   R14,R12,12(R13)          SAVE CALLERS REGS
         BASR  R12,0                    ESTABLISH ADDRESSABILITY
         USING *,12                     BASE OF EXECUTING PROGRAM
         ST    R13,SAVEAREA+4           CALLERS SAVE AREA
         LA    R15,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
         ST    R15,8(,R13)              EXECUTING PROGRAMS SAVEAREA
         LA    R13,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
         LR    R3,R1                    SAVE CPPL ADDRESS
         ST    R3,CPPLADDR              SAVE CPPL ADDRESS FOR SVC99
         LA    R1,ERASE                 POINT TO ERASE CNTL CHARS
         LA    R0,L'ERASE               GET THE LENGTH
         TPUT  (1),(0),FULLSCR          ERASE THE 3270 SCREEN
*
***************     SEE IF A PARM OF MEMBER NAME PASSSED
*
         USING CPPL,R3
         GETMAIN R,LV=WORKLEN           GET WORK AREA
         LR    R10,R1                   SAVE AREA ADDR IN R10
         USING WORK,R10
         LA    R5,PARSPARM
         USING PPL,R5
         XC    PARSE(PARSELEN),PARSE    INITIALIZE PPL
         MVC   PPLUPT,CPPLUPT           UPT
         MVC   PPLECT,CPPLECT           ECT
         MVC   PPLCBUF,CPPLCBUF         CIB
         DROP  R3
         LA    R1,PARSECB               ECB
         ST    R1,PPLECB
         L     R1,=A(PCL)               PCL
         ST    R1,PPLPCL
         LA    R1,PARSANS               PDL
         ST    R1,PPLANS
         CALLTSSR EP=IKJPARS,MF=(E,(R5))    CALL PARSE
         DROP  R5
         L     R10,PARSANS              OK ?
         USING PDL,R10
         LTR   R10,R10
         BP    CHCKPARM                 YES, CONTINUE
         TPUT  BADPARSE,17              PUT OUT BAD PARSE MSG
         B     GOBACK
*
CHCKPARM DS    0H
         MVC   HOLDFLAG,MEMBFLAG        HOLD ON TO THE FLAG
         TM    MEMBFLAG,MEMFOUND        WAS A MEMEBER PASSED ?
         BZ    NOMEMB                   NO
         L     R3,MEMBPTR               LOAD PTR TO PASSED MEMBER NAME
         LA    R2,MEMBNAME
         LH    R1,MEMBLEN               LOAD LENGTH OF PARM
         BCTR  R1,0
         EX    R1,MVCPARM               MOVE THE PARM
         MVC   STEPMOD(8),MEMBNAME      MOVE MOD NAME FOR STEPLIB
         MVC   LINKMOD(8),MEMBNAME      "               " LINKLIST
         MVC   LPAMOD(8),MEMBNAME       "               " LPALIB
         MVC   NOTFMOD(8),MEMBNAME      "               " NOT FOUND
         MVI   TPUTFLAG,LINKOFF         SET FLAG = X'00'
         MVI   LNKFLAG,NOTINLNK         SET FLAG = X'00'
         SR    R6,R6                    CLEAR R6
         LA    R6,BLDLAREA              LOAD ADDR OF BLDL AREA
         USING PDS2,R6                  ADDRESSABILITY TO DSECT
         MVC   PDS2NAME,MEMBNAME        MOVE PASSED MEMBER NAME
         BLDL  0,BLDL_LIST              LOOK FOR MEMBER
         B     *+4(R15)                 CHECK AND PROCESS RC'S
         B     IN_LINKLST               MODULE FOUND  RC=00
         B     LPAMEM                   MODULE NOT FOUND   RC=04
         B     LPAMEM                   RC=08
         B     GOBACK                   SEVERE ERROR
MVCPARM  MVC   0(*-*,R2),0(R3)          MOVE MEMBER NAME
IN_LINKLST  DS   0H
         MVI   LNKFLAG,INLNK            SAY WE FOUND IT IN LINK
         TM    PDS2LIBF,PDS2LLNK        IS IT LINKLIB  ??
         BO    NOTSTEP                  YES, ELSE IN STEPLIB
         TPUT  STEPMSG,L'STEPMSG        PUT OUT JOB/STEP LIB MSG
NOTSTEP  DS    0H
GETLINK  L     R4,CVTPTR                GET ADDRESS OF CVT
         L     R5,CVTLLTA-CVT(,R4)      LOAD THE LLT ADDRESS
         USING LLT,R5                   ADDRESSABILITY
         L     R7,LLTCOUNT              LOAD NUMBER OF ENTRIES
         LR    R9,R7                    LOAD FOR MULTIPLY
         LA    R10,45                   LOAD LENGTH OF ONE DSN ENTRY
         MR    R8,R10                   NUMBER OF ENTRIES*LENGTH
         LA    R5,8(,R5)                LOAD ADDRESS OF FIRST ENTRY
         LR    R10,R5                   LOAD BEGINING OF DSN TABLE
         AR    R9,R10                   COMPUTE BEGINING ADDR OF APF
         USING LLTDSNS,R5               ADDRESSABILITY
         USING LLTAPFTB,R9              ADDRESSABILITY TO APF AREA
         GTEDASET ABC,CPPLPTR=CPPLADDR  SET POINTERS
LNK_LIST DS    0H
         MVC   ABCDSNAM(44),LLTDSN      MOVE DSN NAME FOR SVC99
         GTEDAALC ABC,VERB=AL           ALLOCATE INDIVIDUAL LINK DSN
         MVI   DBLWORD,X'80'            SET OPEN OPTION INPUT
         OPEN  (LLIST001),MF=(E,DBLWORD)     OPEN PDS FOR BLDL
         SR    R6,R6                    CLEAR R3
         LA    R6,BLDLAREA              LOAD ADDR OF BLDL AREA
         USING PDS2,R6                  ADDRESSABILITY TO DSECT
         MVC   PDS2NAME,MEMBNAME        MOVE PASSED MEMBER NAME
         BLDL  LLIST001,BLDL_LIST       LOOK FOR MEMBER
         B     *+4(R15)                 CHECK AND PROCESS RC'S
         B     LINK_DSNNAME             MODULE FOUND  RC=00
         B     NEXTDSN                  MODULE NOT FOUND   RC=04
         B     NEXTDSN                  RC=08
         B     GOBACK                   SEVERE ERROR
LINK_DSNNAME   DS  0H
         TM    TPUTFLAG,LINKON          DID WE DO HEADER ??
         BO    TPUT_DSN                 YES, PRINT DSN ONLY
         TPUT  LINKMSG,L'LINKMSG        PUT OUT FOUND MSG
         TPUT  APFMSG,L'APFMSG          TPUT APF MSG
         TPUT  BLANKS,4                 TPUT BLANK LINE
         MVI   TPUTFLAG,LINKON          SET FLAG = X'80'
TPUT_DSN MVC   TPUTDSN(44),ABCDSNAM     MOVE LIB NAME FOR TPUT
         TM    LLTAFLGS,LLTAPFIN        APF AUTH LIBRARY ?
         BZ    NOTAPF                   NO
         MVI   APFOUT,C'*'              MOVE APF INDICATOR
NOTAPF   TPUT  TPUTOUT,L'TPUTOUT        DO THE TPUT
NEXTDSN  LA    R5,45(,R5)               BUMP TO NEXT  DSN ENTRY
         LA    R9,1(,R9)                BUMP TO NEXT APF ENTRY
         MVI   APFOUT,C' '              MOVE SPACE TO APF INDICATOR
         CLOSE (LLIST001)               CLOSE THE LINKLIST DSN
         BCT   R7,LNK_LIST              NEXT ENTRY
         TPUT  BLANKS,4                 TPUT BLANK LINE
         B     CHKCDE                   NOW GO CHECK FOR MLPA IN CDE
*
NOMEMB   L     R4,CVTPTR                GET ADDRESS OF CVT
         L     R5,CVTLLTA-CVT(,R4)      LOAD THE LLT ADDRESS
         USING LLT,R5                   ADDRESSABILITY
         L     R7,LLTCOUNT              LOAD NUMBER OF ENTRIES
         LR    R9,R7                    LOAD FOR MULTIPLY
         LA    R10,45                   LOAD LENGTH OF ONE DSN ENTRY
         MR    R8,R10                   NUMBER OF ENTRIES*LENGTH
         LA    R5,8(,R5)                LOAD ADDRESS OF FIRST ENTRY
         LR    R10,R5                   LOAD BEGINING OF DSN TABLE
         AR    R9,R10                   COMPUTE BEGINING ADDR OF APF
         USING LLTDSNS,R5               ADDRESSABILITY
         USING LLTAPFTB,R9              ADDRESSABILITY TO APF AREA
         TPUT  LLISTMSG,L'LLISTMSG      TPUT LINKLIST MSG
         TPUT  APFMSG,L'APFMSG          TPUT APF MSG
         TPUT  BLANKS,4                 BLANK LINE
LISTLINK DS    0H
         TM    LLTAFLGS,LLTAPFIN        APF AUTH LIBRARY ?
         BZ    NOTAPF2                  NO
         MVI   APFOUT,C'*'              MOVE APF INDICATOR
NOTAPF2  MVC   TPUTDSN(44),LLTDSN       MOVE THE DSN NAME TO PRINT
         TPUT  TPUTOUT,L'TPUTOUT        PRINT THE DSN(S)
         LA    R5,45(,R5)               BUMP TO NEXT ENTRY
         LA    R9,1(,R9)                BUMP TO NEXT APF ENTRY
         MVI   APFOUT,C' '              MOVE SPACE TO APF INDICATOR
         BCT   R7,LISTLINK              NEXT ENTRY
**********************************************************************
*** LPDE AND CDE SEARCH/PRINT ROUTINES                             ***
**********************************************************************
LPAMEM   TM    MEMBFLAG,MEMFOUND        WAS A MEMEBER PASSED ?
         BZ    IN31                     NO
CHKCDE   L     R3,CVTPTR                GET THE CVT
         USING CVT,R3                   ADDRESSABILITY
         L     R5,CVTQLPAQ              GET CDE CHAIN POINTER FROM CVT
         ST    R5,HOLDCDE               STORE FOR LATER
         USING CDENTRY,R5               SET UP ADDRESSABILITY
CDELOOP  EQU   *
         CLC   CDNAME,MEMBNAME          IS IT THE ONE WE WANT ??
         BNE   NEXTCDE                  NO
         L     R4,CDXLMJP               GET EXTENT LIST ADDR
         USING XTLST,R4                 ADDRESSABILITY
         L     R1,CDENTPT               GET ADDRESS OF CDE ENTRY POINT
         LA    R2,EPADDR                GET DISPLAY ADDRESS
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         L     R1,HOLDCDE               GET ADDRESS OF MAIN STORAGE
         LA    R2,CDEADDR               GET DISPLAY ADDRESS
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         MVC   LENMOD+1,XTLMSBLN        MOVE TO FULL WORD AREA
         L     R1,LENMOD                LOAD ADDRESS OF MODULE LENGTH
         LA    R2,MODLEN                LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         L     R1,XTLMSBAA              LOAD ADDRESS OF MODULE LOAD ADR
         LA    R2,LOADADDR              LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         TM    CDENTPT,CDEMODE          31 OR 24 BIT MODE
         BO    A31BITA
         MVC   ADDRMODE(2),=C'24'       MOVE 24 TO MODE
         B     CDEMSGS
A31BITA  MVC   ADDRMODE(2),=C'31'       MOVE 31 TO MODE
CDEMSGS  DS    0H
         MVC   HOLDADDR,XTLMSBAA        MOVE FOR ADDRESSABILTY
         BAL   R14,LPA_AREA             SEE WHERE IT IS
         TPUT  LPAMSG2,L'LPAMSG2        TPUT FOUND LPA(CDE) MSG
         TPUT  LPAMSG3,L'LPAMSG3        PUT OUT EP,LA, AND LENGTH
         TPUT  LPACDE,L'LPACDE          TPUT CDE ADDRESS
         B     LOOK_LPA                 WE FOUND IT, NOW MOVE ON
NEXTCDE  EQU   *
         L     R5,CDCHAIN               GET NEXT LPA CDE ENTRY
         ST    R5,HOLDCDE               STORE FOR CDE ADDR
         LA    R5,0(R5)                 CLEAR BYTE JUST IN CASE
         LTR   R5,R5                    END OF CHAIN  ??
         BNZ   CDELOOP                  NO
CHKLPDE  DS    0H                       CHECK FOR LPDE ENTRY
         L     R4,CVTPTR                ACCESS THE CVT
         L     R5,CVTLPDIA-CVT(,R4)     CVT LINK PACK DIRECTORY AREA
         USING LPDE,R5                  ADDRESSABILITY TO LPDE
         ST    R5,HOLDLPDE              STORE FOR LATER
NEXTLPDE MVC   LPANAME(8),LPDENAME      MOVE NAME OF MOD TO SEARCH FOR
         CLC   LPANAME,FFFFFFFF         ARE WE AT END OF LPDE ??
         BE    ENDLPDE                  YES
         CLC   LPANAME,MEMBNAME         SEE IF NAME IS WHAT WE WANT
         BE    LPAFOUND                 FOUND IT
         LA    R5,40(,R5)               NEXT LPDE
         ST    R5,HOLDLPDE              HOLD FOR DISPLAY
         BCT   R7,NEXTLPDE              LOOP UNTIL REACHED END OF LIST
         B     GOBACK                   EXIT TO CALLER
LPAFOUND DS    0H
         TM    LPDENTP,LPDEMODE         31 OR 24 BIT MODE
         BO    A31BIT
         MVC   ADDRMODE(2),=C'24'       MOVE 24 TO MODE
         B     LPDEINFO
A31BIT   MVC   ADDRMODE(2),=C'31'       MOVE 31 TO MODE
LPDEINFO DS    0H
         L     R1,LPDEXTLN              LOAD ADDR OF MOD LENGTH
         LA    R2,MODLEN                LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         L     R1,HOLDLPDE              LOAD ADDR OF LPDE
         LA    R2,LPDEADDR              LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         L     R1,LPDENTP               LOAD ADDRESS OF MODULE EP
         LA    R2,EPADDR                LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         L     R1,LPDEXTAD              LOAD ADDR OF MODULE LOAD ADDR
         LA    R2,LOADADDR              LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         MVC   HOLDADDR,LPDEXTAD        MOVE FOR ADDRESSABILTY
         BAL   R14,LPA_AREA             SEE WHERE IT IS
         TPUT  LPAMSG2,L'LPAMSG2        TPUT FOUND LPA(LPDE) MSG
         TPUT  LPAMSG3,L'LPAMSG3        PUT OUT EP,LA, AND LENGTH
         TPUT  LPALPDE,L'LPALPDE        TPUT CDE ADDRESS
LOOK_LPA DS    0H                       WHERE WAS IT LOADED FROM ?
         TPUT  BLANKS,4                 BLANK LINE
         TPUT  LPALIB,L'LPALIB          TPUT LPA LIB MESSAGE
         TPUT  BLANKS,4                 BLANK LINE
IN31     DS    0H
         BAS   3,A31                    SET ADDRESSING MODE 31
         L     R4,CVTPTR                ACCESS THE CVT
         L     R5,CVTSMEXT-CVT(,R4)     ACCESS THE CVT EXTENSION
         L     R4,CVTEPLPS-CVTVSTGX(,R5)     ACCESS THE CVTEPLPS
         USING LPAT,R4                  ADDRESSABILITY
         L     R7,LPATCNT               LOAD NUMBER OF ENTRIES
         LA    R4,8(,R4)                LOAD ADDRESS OF FIRST ENTRY
         USING LPATDSNS,R4              ADDRESSABILITY
         TM    HOLDFLAG,MEMFOUND        WAS A MEMBER PASSED ?
         BZ    LISTONLY                 NO
LPA_LIST MVC   DEFDSNAM(44),LPATDSN     MOVE DSN NAME FOR SVC99
         GTEDASET DEF,CPPLPTR=CPPLADDR  SET POINTERS
         GTEDAALC DEF,VERB=AL           ALLOCATE INDIVIDUAL LINK DSN
         MVI   DBLWORD,X'80'            SET OPEN OPTION INPUT
         OPEN  (LLIST002),MF=(E,DBLWORD)     OPEN PDS FOR BLDL
         SR    R6,R6                    CLEAR R6
         LA    R6,BLDLAREA              LOAD ADDR OF BLDL AREA
         USING PDS2,R6                  ADDRESSABILITY TO DSECT
         MVC   PDS2NAME,MEMBNAME        MOVE PASSED MEMBER NAME
         BLDL  LLIST002,BLDL_LIST       LOOK FOR MEMBER
         B     *+4(R15)                 CHECK AND PROCESS RC'S
         B     LPA_DSNNAME              MODULE FOUND  RC=00
         B     NEXTLPA                  MODULE NOT FOUND   RC=04
         B     NEXTLPA                  RC=08
         B     GOBACK                   SEVERE ERROR
LPA_DSNNAME    DS  0H
         MVC   TPUTOUT(44),DEFDSNAM     MOVE LIB NAME FOR TPUT
         TPUT  TPUTOUT,L'TPUTOUT        DO THE TPUT
NEXTLPA  LA    R4,45(,R4)               BUMP TO NEXT  DSN ENTRY
         CLOSE (LLIST002)               CLOSE THE LPA DSN
         BCT   R7,LPA_LIST              NEXT ENTRY
         TPUT  BLANKS,4                 TPUT BLANK LINE
         B     GOBACK                   BEAM ME UP SCOTTY
LISTONLY TPUT  BLANKS,4
         TPUT  BLANKS,4
         TPUT  LPAMSG,L'LPAMSG
         TPUT  BLANKS,4
LISTLPA  DS    0H
         MVC   TPUTDSN(44),LPATDSN
         TPUT  TPUTOUT,L'TPUTOUT        PRINT THE DSN(S)
         LA    R4,45(,R4)               BUMP TO NEXT ENTRY
         BCT   R7,LISTLPA               NEXT ENTRY
         B     GOBACK
*
ENDLPDE  DS    0H
         TM    LNKFLAG,INLNK            SEE IF IN LINK AND NOT LPA
         BO    GOBACK
         TPUT  NOTFOUND,L'NOTFOUND
GOBACK   DS    0H
         BAS   3,A24                    SET AMODE 24
         DS    0H
         L     R13,4(,R13)              CALLERS SAVE AREA
         L     R14,12(,R13)             RESTORE R14
         LM    R0,R12,20(R13)           RESTORE REMAINING REGS
         BR    R14                      RETURN TO CALLER, REG 15
*                                       CONTAINS RETURN CODE
*
*        CHANGE ADDRESSING MODES
*
A24      LA    3,0(3)                   CLEAR HIGH ORDER BIT
         BSM   0,3
*
A31      O     3,=X'80000000'           SET HIGH ORDER BIT
         BSM   0,3
*
*        DUMP CONTENTS OF REG IN PRINTABLE FORMAT
*
HEXDUMP  ST    R1,FWORD                 STORE INPUT REG INTO FWORD
         UNPK  DUMMY(9),FWORD(5)        UNPACK TO ADD F ZONE DIGITS
         TR    DUMMY(8),TRANTAB         TRANSLATE TO CORRECT CHARACTERS
         MVC   0(8,R2),DUMMY            MOVE TO CALLER'S AREA
         BR    R10                      EXIT
FWORD    DS    F,CL1                    1 WORD + 1 BYTE OF GARBAGE
DUMMY    DS    CL9
TRANTAB  DS    CL(X'F0')                NEVER USED
         DC    C'0123456789ABCDEF'
*
*        SEARCH TO FIND LOCATION OF LPA MODULE ( I.E. IN FLPA ETC. )
*
LPA_AREA L     R8,CVTPTR                ACCESS THE CVT
         L     R9,CVTSMEXT-CVT(,R8)     ACCESS THE CVT EXTENSION
         USING CVTVSTGX,R9              ADDRESSABILITY TO CVT EXT
         CLC   HOLDADDR,CVTMLPAS        COMPARE TO FLPA START
         BL    NOTMLPA                  SEE IF ITS HIGHER
         CLC   HOLDADDR,CVTMLPAE        COMPARE TO FLPA END
         BH    NOTFLPA                  ITS HIGHER
         MVC   WHATLPA,MLPA             MOVE LITERAL
         B     RTLPA
NOTMLPA  CLC   HOLDADDR,CVTFLPAS        COMPARE TO FLPA START
         BL    NOTFLPA                  SEE IF ITS HIGHER
         CLC   HOLDADDR,CVTFLPAE        COMPARE TO FLPA END
         BH    NOTFLPA                  ITS HIGHER
         MVC   WHATLPA,FLPA             MOVE LITERAL
         B     RTLPA
NOTFLPA  CLC   HOLDADDR,CVTPLPAS        COMPARE TO PLPA START
         BL    NOTPLPA                  SEE IF ITS HIGHER
         CLC   HOLDADDR,CVTPLPAE        COMPARE TO PLPA END
         BH    NOTPLPA                  ITS HIGHER
         MVC   WHATLPA,PLPA             MOVE LITERAL
         B     RTLPA
NOTPLPA  CLC   HOLDADDR,CVTEPLPS        COMPARE TO EPLPA START
         BL    NOTEPLPA                 SEE IF ITS HIGHER
         CLC   HOLDADDR,CVTEPLPE        COMPARE TO EPLPA END
         BH    NOTEPLPA                 ITS HIGHER
         MVC   WHATLPA,EPLPA            MOVE LITERAL
         B     RTLPA
NOTEPLPA CLC   HOLDADDR,CVTEFLPS        COMPARE TO EFLPA START
         BL    NOTEFLPA                 SEE IF ITS HIGHER
         CLC   HOLDADDR,CVTEFLPE        COMPARE TO EFLPA END
         BH    NOTEFLPA                 ITS HIGHER
         MVC   WHATLPA,EFLPA            MOVE LITERAL
         B     RTLPA
NOTEFLPA CLC   HOLDADDR,CVTEMLPS        COMPARE TO EMLPA START
         BL    NOTEMLPA                 SEE IF ITS HIGHER
         CLC   HOLDADDR,CVTEMLPE        COMPARE TO EMLPA END
         BH    NOTEMLPA                 ITS HIGHER
         MVC   WHATLPA,EPLPA            MOVE LITERAL
         B     RTLPA
NOTEMLPA DS    0H
         MVC   WHATLPA,UN_KNOWN         NONE OF THE ABOVE
RTLPA    BR    R14                      RETURN TO CALLER
*
*        STORAGE AREA
*
SAVEAREA DS    18F
HOLDFLAG DC    X'00'
TPUTOUT  DS    0CL46
APFOUT   DC    CL2' '                   ONLY USED FOR LINKLIST
TPUTDSN  DC    CL44' '
LPANAME  DC    CL8' '
MEMBNAME DC    CL8' '
BLANKS   DC    CL4' '
BADPARSE DC    CL17'BAD PARSE OF PARM'
APFMSG   DC    CL26'* INDICATES APF AUTHORIZED'
STEPMSG  DS    0CL33
         DC    CL7'MODULE '
STEPMOD  DC    CL8' '
         DC    CL18' FOUND IN STEPLIB DATASET'
LLISTMSG DC    CL22'     LINKLIST DATASETS'
LINKMSG  DS    0CL33
         DC    CL7'MODULE '
LINKMOD  DC    CL8' '
         DC    CL18' FOUND IN LINKLIST'
LPAMSG   DC    CL17'     LPA DATASETS'
LPAMSG2  DS    0CL26
         DC    CL7'MODULE='
LPAMOD   DC    CL8' '
         DC    CL3'  ('
WHATLPA  DC    CL7'       '
         DC    C')'
MLPA     DC    CL7'  MLPA '
FLPA     DC    CL7'  FLPA '
PLPA     DC    CL7'  PLPA '
EMLPA    DC    CL7' EMLPA '
EFLPA    DC    CL7' EFLPA '
EPLPA    DC    CL7' EPLPA '
UN_KNOWN DC    CL7'UNKNOWN'
LPAMSG3  DS    0CL50
         DC    CL3'LA='
LOADADDR DC    CL8' '
         DC    CL2' '
         DC    CL3'EP='
EPADDR   DC    CL8' '
         DC    CL2' '
         DC    CL7'(AMODE-'
ADDRMODE DC    CL3'XX)'
         DC    CL6'  LEN='
MODLEN   DC    CL8' '
LPACDE   DS    0CL12
         DC    CL4'CDE='
CDEADDR  DC    CL8' '
LPALPDE  DS    0CL13
         DC    CL5'LPDE='
LPDEADDR DC    CL8' '
LPALIB   DC    CL30'FOUND IN ACTIVE LPA DATASET(S)'
NOTFOUND DS    0CL44
         DC    CL7'MODULE '
NOTFMOD  DC    CL8' '
         DC    CL29' NOT FOUND IN LINKLIST OR LPA'
LENMOD   DC    F'0'
HOLDLPDE DS    F
HOLDCDE  DS    F
HOLDADDR DS    F
ERASE    DC    X'27F5401D40'            USED TO CLEAR 3270 TERMINAL
LNKFLAG  DS    X         SAY WE FOUND IT IN LINK
NOTINLNK EQU   00
INLNK    EQU   80
TPUTFLAG DS    X
LINKOFF  EQU   00
LINKON   EQU   80
LLTDSNL  DC    F'45'                    LENGTH OF LLT DSNS ENTRY
PCL      IKJPARM DSECT=PDL
MEMB     IKJIDENT 'MEMBER SEARCH NAME',UPPERCASE,FIRST=ALPHA,          X
               MAXLNTH=8,OTHER=ALPHANUM,HELP='VALID MEMBER NAME'
         IKJENDP
         TITLE 'COMMAND PROCESSOR PARAMETER LIST'
         IKJCPPL
         TITLE 'GETMAIN WORK AREA'
WORK     DSECT
PARSE    EQU   *
PARSPARM DS    7A                       PPL
PARSECB  DS    F                        ECB
PARSANS  DS    A                        PDL
PARSELEN EQU   *-PARSE
WORKLEN  EQU   *-WORK
         TITLE 'PARSE PARAMETER LIST'
         IKJPPL
PDL      DSECT
         ORG   MEMB
MEMBPTR  DS    A                       ADDRESS OF SEARCH MEMBER
MEMBLEN  DS    H                       LENGTH OF MEMBER
MEMBFLAG DS    X                       FLAGS
MEMFOUND EQU   X'80'                   MEMBER PRESENT
*
         TITLE 'BLDL DATA AREA'
LLIST    CSECT
FFFFFFFF DC    XL8'FFFFFFFFFFFFFFFF'   END OF LPDE INDICATOR
CPPLADDR DS    F
ABC      GTEDADAT DSNAM=XX.YYY,DDNAM=LLIST001,                         X
               CLOSE=YES,STATS=SHR,CNVRT=YES
DEF      GTEDADAT DSNAM=XX.YYY,DDNAM=LLIST002,                         X
               CLOSE=YES,STATS=SHR,CNVRT=YES
LLIST001 DCB   DDNAME=LLIST001,                                        X
               DSORG=PO,                                               X
               MACRF=R,                                                X
               EODAD=GOBACK,                                           X
               RECFM=FB,                                               X
               LRECL=0,                                                X
               BLKSIZE=0
LLIST002 DCB   DDNAME=LLIST002,                                        X
               DSORG=PO,                                               X
               MACRF=R,                                                X
               EODAD=GOBACK,                                           X
               RECFM=FB,                                               X
               LRECL=0,                                                X
               BLKSIZE=0
DBLWORD  DS    D
                  DS  0H
BLDL_LIST         DC  H'1'
BLDL_LENGTH       DC  H'76'
BLDLAREA          DS  1CL76
*
         TITLE 'LINK PACK DIRECTORY ENTRY'
         IHALPDE
         TITLE 'LPA CONTENTS DIRECTOR ENTRY (CDE)'
         IHACDE
         TITLE 'CDE EXTENT LIST'
         IHAXTLST
         TITLE 'PARTITIONED DATA SET ENTRY'
         IHAPDS
         TITLE 'SVC-99 CONTROL BLOCKS'
         IEFZB4D0
         TITLE 'IKJEFF18 CONTROL BLOCKS'
         IKJEFFDF DFDSECT=YES,DFDSEC2=YES
         TITLE 'CVT MAPPING'
         CVT   DSECT=YES
         END
