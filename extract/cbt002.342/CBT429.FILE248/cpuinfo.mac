NUMBCHAN CSECT
NUMBCHAN AMODE 31
NUMBCHAN RMODE 24
***********************************************************************
*   !!! NOTE !!! USE BATCH PARM FOR ASSEMBLY OF THESE PROGRAMS        *
*   GET NUMBER OF CHANNELS FOR SYSTEM FROM ICHPT CONTROL BLOCK.       *
*   SUBROUTINE CALLED BY CPUINFO.                                     *
*   BOYSEN/AMDAHL FEDERAL SERVICE CORPORATION                         *
***********************************************************************
R15      EQU   15
R14      EQU   14
R13      EQU   13
R12      EQU   12
R11      EQU   11
R10      EQU   10
R9       EQU   9
R8       EQU   8
R7       EQU   7
R6       EQU   6
R5       EQU   5
R4       EQU   4
R3       EQU   3
R2       EQU   2
R1       EQU   1
R0       EQU   0
CVTPRE   EQU   256                      CVT PREFIX START
NUMBCHAN CSECT
         STM   R14,R12,12(R13)          SAVE CALLERS REGS
         BALR  R12,0                    ESTABLISH ADDRESSABILITY
         USING *,12                     BASE OF EXECUTING PROGRAM
         ST    R13,SAVEAREA+4           CALLERS SAVE AREA
         LA    R15,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
         ST    R15,8(,R13)              EXECUTING PROGRAMS SAVEAREA
         LA    R13,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
*
         L     R2,CVTPTR                GET ADDRESS OF CVT (YES,AGAIN)
         L     R3,CVTICHPT-CVTMAP(,R2)  GET ADDRESS OF CHP TABLE
         LA    R4,256                   MAXIUM NUMBER OF CHANNELS (XA)
         BAS   8,A31                    SET ADDRESSING MODE 31
CHPLOOP  DS    0H                       31-BIT ADDRESSING
         CLI   0(R3),X'80'              IS IT ONE WE DON'T WANT ?
         BE    NEXTCHP                  GET NEXT CHPID
         CLI   0(R3),X'00'              ANOTHER TYPE WE DON'T WANT ?
         BE    NEXTCHP                  GET NEXT CHPID
         CLI   0(R3),X'C0'              ANOTHER TYPE WE DON'T WANT ?
         BE    NEXTCHP                  GET NEXT CHPID
         AP    NOCHANS,=P'1'            ADD 1 TO NUMBER OF CHPIDS
NEXTCHP  LA    R3,1(,R3)                NEXT CHANNEL
         BCT   R4,CHPLOOP               CHECK NEXT CHPID
         UNPK  WRKPACK,NOCHANS          ... UNPACK IT ...
         MVC   NO_CHPID,WRKPACK+4
         OI    NO_CHPID+3,X'F0'         ... SET THE SIGN.
         BAS   8,A24                    SET AMODE 24
         L     R15,NO_CHPID             PUT NUMBER OF CHANNELS IN R15
*
GOHOME   DS    0H
         L     R13,4(,R13)              CALLERS SAVE AREA
         L     R14,12(,R13)             RESTORE R14
         LM    R0,R12,20(R13)           RESTORE REMAINING REGS
         BR    R14                      RETURN TO CALLER, REG 15
*
*        STORAGE AREA
*
SAVEAREA DS    18F
WRKPACK  DS    D
NOCHANS  DC    PL4'0'
NO_CHPID DC    CL4' '
A24      LA    8,0(8)                   CLEAR HIGH ORDER BIT
         BSM   0,8
*
A31      O     8,=X'80000000'           SET HIGH ORDER BIT
         BSM   0,8
         PRINT NOGEN
         TITLE 'CVT MAPPING MACRO WITH PREFIX'
         CVT   DSECT=YES,PREFIX=YES
         END
CPUINFO  CSECT
***********************************************************************
*   !!! NOTE !!! USE BATCH PARM FOR ASSEMBLY OF THESE PROGRAMS        *
*                                                                     *
*   AUTHOR:                                                           *
*   BOYSEN/AMDAHL FEDERAL SERVICE CORPORATION                         *
*                                                                     *
*   FUNCTION:                                                         *
*   DISPLAY VARIOUS INFORMATION FROM SYSTEM CONTROL BLOCKS, ETC.      *
*                                                                     *
*   ENVIRONMENT:                                                      *
*   TSO COMMAND                                                       *
*                                                                     *
*   COMMAND SYNTAX:                                                   *
*   CPUINFO                                                           *
*                                                                     *
*   OUTPUT:                                                           *
*   OUTPUT TO TSO TERMINAL                                            *
*                                                                     *
*   OUTPUT DISPLAYED:                                                 *
*   SMF CPUID, SYSNAME, CPU MODEL, MVS RELEASE, FMID, DFP LEVEL,      *
*   CPU(S) ID(S), LAST IPL DATE AND TIME, CLPA OR NOT,                *
*   SYSRES, IPL ADDRESS, NUCLEUS, I/O GEN, TSO VERSION, VTAM LEVEL,   *
*   NUMBER OF SYSTEM CHANNELS, MASTER CATALOG NAME                    *
*                                                                     *
*   SPECIAL ASM OR LINK PARMS:                                        *
*   BATCH PARM FOR ASSEMBLE                                           *
*                                                                     *
***********************************************************************
R15      EQU   15
R14      EQU   14
R13      EQU   13
R12      EQU   12
R11      EQU   11
R10      EQU   10
R9       EQU   9
R8       EQU   8
R7       EQU   7
R6       EQU   6
R5       EQU   5
R4       EQU   4
R3       EQU   3
R2       EQU   2
R1       EQU   1
R0       EQU   0
CVTPRE   EQU   256                      CVT PREFIX START
CPUINFO  CSECT
         STM   R14,R12,12(R13)          SAVE CALLERS REGS
         BALR  R12,0                    ESTABLISH ADDRESSABILITY
         USING *,12                     BASE OF EXECUTING PROGRAM
         ST    R13,SAVEAREA+4           CALLERS SAVE AREA
         LA    R15,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
         ST    R15,8(,R13)              EXECUTING PROGRAMS SAVEAREA
         LA    R13,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
*
         LA    R1,ERASE                 POINT TO ERASE CNTL CHARS
         LA    R0,L'ERASE               GET THE LENGTH
         TPUT  (1),(0),FULLSCR          ERASE THE 3270 SCREEN
         L     R4,CVTPTR                GET ADDRESS OF CVT
         L     R5,CVTSMCA-CVTMAP(,R4)   LOAD THE SMCA ADDRESS
         MVC   SMFCPUID,SMCASID-SMCABASE(R5)    MOVE THE SMF ID
         MVC   SYSNAME,CVTSNAME-CVTMAP(R4)      SYSNAME IN IEASYSXX
         L     R3,CVTPTR                ADDRESS OF CVT
         LA    R2,CVTPRE                LOAD ADDRESS OF CVT PREFIX
         SR    R3,R2                    GET ADDRESS TO CVT PREFIX
         USING CVTFIX,R3                ADDRESSABILITY
         MVC   HOLDCPU,CVTMDL           ALIGN IT
         L     R1,HOLDCPU               GET CVTMDL TO DISPLAY
         LA    R2,CPUMOD                LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              MAKE IT PRINTABLE
         MVC   CPUMOD+4(4),BLANKS       MOVE SPACES TO GARBAGE
         TPUT  MESG01,L'MESG01          TPUT THE CPU INFO LINE 1
         MVC   MVSID,CVTPRODN           MOVE THE MVS PRODUCT NAME
         MVC   MVSNAME,CVTPRODI         MOVE THE FMID
         L     R2,CVTPTR                GET ADDRESS OF CVT
         L     R3,CVTCKRAS-CVTMAP(,R2)  GET ADDR OF DFA
         USING DFA,R3                   ADDESSABILITY
         MVC   HOLDCPU,DFAREL           ALIGN IT
         L     R1,HOLDCPU               GET CVTMDL TO DISPLAY
         LA    R2,HOLDDFP               LOAD ADDRESS OF DISPLAY AREA
         BAL   R10,HEXDUMP              MAKE IT PRINTABLE
         MVC   DFPVER(1),HOLDDFP        MOVE VERSION
         MVC   DFPREL(1),HOLDDFP+1      MOVE RELEASE
         MVC   DFPMOD(1),HOLDDFP+2      MOVE MOD
         TPUT  MESG02,L'MESG02          PRINT IT OUT
         L     R2,CVTPTR                GET ADDRESS OF CVT
         L     R3,CVTPCCAT-CVTMAP(,R2)  ADDR OF PCCA FOR SERIAL #'S
         LA    R9,15                    NUMBER OF POSSIBLE CPU'S - 1
         LA    R8,CPUNUMS               LOAD ADDRESS OF CPU #'S
CPUCHECK CLC   0(4,R3),ZEROES           IS THERE AN ADDRESS
         BE    NEXTCPU                  MUST NOT BE THERE
         L     R2,0(,R3)                LOAD ADDRESS OF CPU'S PCCA
         USING PCCA,R2                  ADDRESSABILITY
         MVC   SERIAL#,PCCACPID+2       MOVE SERIAL# FOR DISPLAY
         MVC   CPUNUM(1),0(R8)          MOVE CPU NUMBER FOR DISPLAY
         TPUT  MESG03,L'MESG03          PRINT IT OUT
NEXTCPU  LA    R3,4(,R3)                LOAD NEXT CPU PCCA
         LA    R8,1(,R8)                MOVE NEXT CPU NUM
         BCT   R9,CPUCHECK              LOOP THRU CPU'S
*
         L     R2,CVTPTR                GET ADDRESS OF CVT
         L     R5,CVTSYSAD-CVTMAP(,R2)  GET UCB OF SYSRES
         USING UCBOB,R5                 ADDRESSABILITY
         MVC   SYSRES(6),UCBVOLI        GET VOL NAME FOR DISPLAY
         MVC   UNITADDR(3),UCBNAME      GET UNIT ADDR FOR DISPLAY
         DROP  R5                       NO LONGER NEEDED
         L     R2,CVTPTR                GET ADDRESS OF CVT  ( AGAIN )
         L     R5,CVTEXT2-CVTMAP(,R2)   GET ADDRESS OF CVT EXT 2
         USING CVTXTNT2,R5              ADDRESS IT
         MVC   NUCNUM,CVTNUCLS          NUCLEUS MEMBER NAME
         MVC   IOGEN,CVTIOCID           MOVE I/O GEN NUMBER
         L     R3,CVTSMCA-CVTMAP(,R2)   LOAD THE SMCA ADDRESS
         USING SMCABASE,R3              ADDRESSABILITY
         MVC   IPLDATE,SMCAIDTE         MOVE IPL DATE
         MVC   IPLTIME,SMCAITME         MOVE IPL TIME
         BAL   R10,DATETIME             BRANCH TO DATE/TIME CONVERT
         MVC   DISPM(2),SYSMM           MOVE THE MONTH
         MVC   DISPD(2),SYSDD           MOVE THE DAY
         MVC   DISPY(2),SYSYY           MOVE THE YEAR
         L     R3,CVTASMVT-CVTMAP(,R2)  MOVE ASMVT ADDRESS
         TM    1(R3),X'08'              CLPA ?
         BNZ   NOCLPA                   NO CLPA
         MVC   CLPA,=C'(CLPA)'          MOVE CLPA INDICATOR
NOCLPA   DS    0H
         TPUT  MESG04,L'MESG04          PRINT IT OUT
         TPUT  MESG05,L'MESG05          PRINT IT OUT
*
         L     R2,CVTPTR                GET ADDRESS OF CVT  (AGAIN)
         L     R3,CVTTVT-CVTMAP(,R2)    ADDR OF TSVT-TSO VECTOR TABLE
         L     R4,CVTPCCAT-CVTMAP(,R2)  ADDR OF PCCA
         USING TSVT,R3                  ADDRESSABILITY
         USING PCCA,R4                  ADDRESSABILITY
         MVC   TSOVER,TSVTLVER          MOVE TSO VERSION
         MVC   TSOREL,TSVTLREL          MOVE TSO RELEASE
         MVC   TSOMOD,TSVTLMOD          MOVE TSO MOD LEVEL
         L     R5,PCCAPSAR-PCCA(,R4)    GET PSA ADDRESS
         USING PSA,R5                   ADDRESSABILITY
         L     R4,PSAATCVT              LOAD VTAM ATCVT
         MVC   VTAMLEVL(4),0(R4)        MOVE VTAM LEVEL
         MVC   VTAMVER(1),VTAMLEVL+2    MOVE THE VERSION
         MVC   VTAMREL(1),VTAMLEVL+3    MOVE THE RELEASE
         TPUT  MESG06,L'MESG06          PRINT IT OUT
*
         L     R15,NUMBCHAN             LOAD ADDRESS OF ROUTINE
         BAS   3,A31                    SET ADDRESSING MODE 31
         BASR  R14,R15                  CALL ROUTINE
         LR    R7,R15                   SAVE RETURN CODE
         BAS   3,A24                    SET AMODE 24
         ST    R7,NO_CHPID              MOVE NUMBER OF CHANNELS
         TPUT  MESG07,L'MESG07          TPUT NUMBER OF CHPIDS
*
MCAT     DS    0H
         L     R2,CVTPTR                GET ADDRESS OF CVT
         L     R3,CVTCBSP-CVTMAP(,R2)   ADDR OF AMCBS
         L     R2,CBSCAXCN-CBS(,R3)     FIRST CAXWA IN CHAIN
         USING CAXWA,R2                 ADDRESSABILITY
GETCAT   TM    CAXFLGS,CAXMCT           MASTER CATALOG ?
         BZ    GETCAT2                  PICK UP NEXT CAT
         MVC   MCATDSN,CAXCNAM          GET THE CAT DSN
GETCAT2  ICM   R2,B'1111',CAXCHN        GET NEXT CAXWA
         BNZ   GETCAT                   GO UNTIL END OF CHAIN
         TPUT  MESG08,L'MESG08          TPUT MASTER CATALOG
*
GOHOME   DS    0H
         L     R13,4(,R13)              CALLERS SAVE AREA
         L     R14,12(,R13)             RESTORE R14
         LM    R0,R12,20(R13)           RESTORE REMAINING REGS
         BR    R14                      RETURN TO CALLER, REG 15
*
*        CHANGE ADDRESSING MODES
*
A24      LA    3,0(3)                   CLEAR HIGH ORDER BIT
         BSM   0,3
*
A31      O     3,=X'80000000'           SET HIGH ORDER BIT
         BSM   0,3
*
HEXDUMP  ST    R1,FWORD                 STORE INPUT REG INTO FWORD
         UNPK  DUMMY(9),FWORD(5)        UNPACK TO ADD F ZONE DIGITS
         TR    DUMMY(8),TRANTAB         TRANSLATE TO CORRECT CHARACTERS
         MVC   0(8,R2),DUMMY            MOVE TO CALLER'S AREA
         BR    R10                      EXIT
FWORD    DS    F,CL1                    1 WORD + 1 BYTE OF GARBAGE
DUMMY    DS    CL9
TRANTAB  DS    CL(X'F0')                NEVER USED
         DC    C'0123456789ABCDEF'
*
DATETIME DS    0H                       ROUTINE FOR DATE/TIME
         L     R7,IPLTIME               MOVE TO REG FOR CONVERT
         SR    R6,R6                    CLEAR REG
         D     R6,=F'360000'            DIVIDE
         CVD   R7,DWORD                 CONVERT
         OI    DWORD+7,X'0F'            OR FOR SIGN
         UNPK  IPL_TIME(2),DWORD+6(2)   UNPACK
         LR    R7,R6                    DO IT AGAIN  UH UH YOU SAID IT
         SR    R6,R6                    CLEAR REG
         D     R6,=F'6000'              DIVIDE
         CVD   R7,DWORD                 CONVERT
         OI    DWORD+7,X'0F'            OR FOR SIGN
         UNPK  IPL_TIME+3(2),DWORD+6(2)   UNPACK
         LR    R7,R6                    DO IT AGAIN  UH UH YOU SAID IT
         SR    R6,R6                    CLEAR REG
         D     R6,=F'100'               DIVIDE
         CVD   R7,DWORD                 CONVERT
         OI    DWORD+7,X'0F'            OR FOR SIGN
         UNPK  IPL_TIME+6(2),DWORD+6(2)   UNPACK
         L     R3,IPLDATE               LOAD SAVED SMF IPLDATE
         ST    R3,WRKPACK+4             ST FOR UNPACKING
         MVC   WRKYRTAB,YEARTAB         CREATE YEAR TABLE
         TM    WRKPACK+5,X'01'          LEAP YEAR?
         BO    DATE010                  NO ...
         TM    WRKPACK+5,X'12'          REALLY A LEAP YEAR?
         BM    DATE010                  NO ...
         MVI   WRKFEB,29                ELSE FEBRUARY HAS 29 DAYS.
DATE010  DS    0H
         AP    WRKPACK+4(4),=PL4'1900000'  CONVERT 0CYY TO YYYY
         MVC   SYSYEAR,=X'21202020'
         ED    SYSYEAR,WRKPACK+4        MOVE IN THE YEAR
         MVC   WRKPACK(6),=XL6'00'      BLANK OUT THE YEAR
         ZAP   WRKDAYP,WRKPACK          SAVE PACKED DAY-OF-YEAR
         SR    R0,R0
         SR    R14,R14
         CVB   R1,WRKPACK               CONVERT DAYS TO BINARY
         LA    R15,WRKYRTAB-4           AND SCAN THE YEAR TABLE:
DATE020  DS    0H
         SLR   R1,R0                    DECREMENT "DAYS REMAINING"
         LA    R15,4(,R15)              NEXT YEAR TABLE ENTRY (MONTH)
         LA    R14,1(,R14)              KEEP A MONTH COUNTER
         IC    R0,0(,R15)               DAYS IN CURRENT MONTH
         CLR   R0,R1                    PAST END OF MONTH?
         BL    DATE020                  NO - GO TRY NEXT ENTRY.
         CVD   R1,WRKPACK               CONVERT DAYS LEFT
         UNPK  SYSDD,WRKPACK+6(2)       ... UNPACK IT ...
         OI    SYSDD+1,X'F0'            ... SET THE SIGN.
         CVD   R14,WRKPACK              CONVERT MONTH NUMBER
         UNPK  SYSMM,WRKPACK+6(2)       ... UNPACK IT ...
         OI    SYSMM+1,X'F0'            ... SET THE SIGN.
         BR    R10                      EXIT
SYSYEAR  DS    0CL4                     YEAR (YYYY)
         DS    CL2                      CENTURY
SYSYY    DS    CL2                      YEAR
SYSDD    DS    CL2                      DATE
SYSMM    DS    CL2                      MONTH
WRKDAYP  DS    PL2                      WORK DATA NAMES
WRKYRTAB DS    XL(4*12)
WRKFEB   EQU   WRKYRTAB+4
WRKPACK  DS    D
DWORD    DS     D
YEARTAB  DC    AL1(31),C'JAN',AL1(28),C'FEB',AL1(31),C'MAR'
         DC    AL1(30),C'APR',AL1(31),C'MAY',AL1(30),C'JUN'
         DC    AL1(31),C'JUL',AL1(31),C'AUG',AL1(30),C'SEP'
         DC    AL1(31),C'OCT',AL1(30),C'NOV',AL1(255),C'DEC'
*
*        STORAGE AREA
*
SAVEAREA DS    18F
IPLDATE  DS    F
IPLTIME DS     F
BLANKS   DC    CL4' '
ZEROES   DC    F'0'
HOLDCPU  DS    XL8
HOLDDFP  DS    CL8
VTAMLEVL DS    CL4
NUMBCHAN DC    V(NUMBCHAN)
CPUNUMS  DC    CL16'0123456789ABCDEF'   USED TO DISPLAY CPU NUMS
ERASE    DC    X'27F5401D40'            USED TO CLEAR 3270 TERMINAL
MESG01   DS    0CL57
         DC    CL11'SMF CPUID- '
SMFCPUID DC    CL4' '
         DC    CL13'    SYSNAME- '
SYSNAME  DC    CL8' '
         DC    CL2' '
         DC    CL11'CPU MODEL- '
CPUMOD   DC    CL8' '
         DS    D
MESG02   DS    0CL55
         DC    CL13'MVS RELEASE- '
MVSID    DC    CL8' '
         DC    CL8'  FMID- '
MVSNAME  DC    CL8' '
         DC    CL13'  DFP LEVEL- '
DFPVER   DC    CL1' '
         DC    CL1'.'
DFPREL   DC    CL1' '
         DC    CL1'.'
DFPMOD   DC    CL1' '
MESG03   DS    0CL33
         DC    CL4'CPU '
CPUNUM   DC    CL2' '
         DC    CL2' '
         DC    CL15'SERIAL NUMBER- '
SERIAL#  DC    CL10' '
MESG04   DS    0CL47
         DC    CL17'LAST IPL WAS ON  '
IPL_DATE DS    0CL8
DISPM    DC    CL2' '
         DC    C'/'
DISPD    DC    CL2' '
         DC    C'/'
DISPY    DC    CL2' '
         DC    CL6'  AT  '
IPL_TIME DC    CL8'  :  :  '
         DC    CL2' '
CLPA     DC    CL6' '
MESG05   DS    0CL59
         DC    CL8'SYSRES- '
SYSRES   DC    CL6' '
         DC    CL15'  IPL ADDRESS- '
UNITADDR DC    CL3' '
         DC    CL12'   NUCLEUS- '
NUCNUM   DC    CL1' '
         DC    CL12'   I/O GEN- '
IOGEN    DC    CL2' '
MESG06   DS    0CL48
         DC    CL12'TSO VERSION '
TSOVER   DC    C' '
         DC    CL9' RELEASE '
TSOREL   DC    CL2' '
         DC    CL5' MOD '
TSOMOD   DC    C' '
         DC    CL15'   VTAM LEVEL- '
VTAMVER  DC    CL1' '
         DC    CL1'.'
VTAMREL  DC    CL1' '
MESG07   DS    0CL34
         DC    CL28'NUMBER OF SYSTEM CHANNELS - '
NO_CHPID DC    F'0'
         DC    CL2' '
MESG08   DS    0CL61
         DC    CL17'MASTER CATALOG - '
MCATDSN  DC    CL44' '
         PRINT NOGEN
         TITLE 'ACCESS METHOD CB STRUCTURE'
CBS      DSECT
CBSID    DS    C'AM'        AMCBS ID
CBSSIZ   DS    H'144'       LENGTH OF AMCBS
CBSMCSTA DS    C'CCHH'      CCHH OF MASTER CATALOG
CBSACB   DS    V(ACB)       ACB FOR THE MASTER CATALOG
CBSCBP   DS    V(IDC019C1)  CONTROL BLOCK MANIPULATION ROUTINE
CBSCMP   DS    V(IGGOCLA1)  CATALOG MANAGEMENT ROUTINE
CBSCAXCN DS    V(CAXWA)     ADDRESS OF THE CAXWA CHAIN
CBSCRACA DS    V(CAXWA)     ADDRESS OF THE CRA CAXWA CHAIN
         TITLE 'CATALOG WORK AREA'
CAXWA    DSECT              CATALOG WORK AREA
CAXID    DS    X'CA'        CAX ID
CAXFLG4  DS    X,2X         FLAGS (4)
CAXCHN   DS    A(CAXWA)     NEXT CAXWA IN CHAIN
CAXFLGS  DS    X            FLAGS (1)
CAXMCT   EQU   X'04'        MASTER CATALOG
CAXFLG2  DS    X            FLAGS (2)
CAXFLG3  DS    X            FLAGS (3)
CAXFLG5  DS    X,3F         FLAGS (5)
CAXACB   DS    V(IFGACB)    CATALOG'S ACB
CAXUCB   DS    V(UCBOB)     CATALOG'S UCB
         DS    FL3,FL3,FL3,FL3,H,H,A
CAXCNAM  DS    CL44         CATALOG'S DSNAME
CAXVOLID DS    CL6          CATALOG'S VOLUME (CRA ONLY)
         TITLE 'CVT MAPPING MACRO WITH PREFIX'
         CVT   DSECT=YES,PREFIX=YES
         TITLE 'SMCA MAPPING MACRO'
         IEESMCA
         TITLE 'PCCA MAPPING MACRO'
         IHAPCCA
         TITLE 'TSO VECTOR TABLE MAPPING MACRO'
         IKJTSVT
         TITLE 'UCB MAPPING MACRO'
         IEFUCBOB
         TITLE 'DATA FACILITY AREA'
         IHADFA
         TITLE 'PSA MAPPING AREA'
         IHAPSA
         END
