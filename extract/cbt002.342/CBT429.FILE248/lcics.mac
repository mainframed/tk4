*********************************************************************
*  FUNCTION - LIST DATASETS ALLOCATED TO CICS DDNAME DFHRPL         *
*             OR IF LOAD MODULE SPECIFIED, SEARCH THROUGH THE       *
*             DATASETS FOR THE LOAD MODULE AND DISPLAY DATASET(S)   *
*             WHERE FOUND.  CALLS LCICSXM TO OBTAIN TIOT AND DSNS   *
*             FROM SECONDARY ADDRESS SPACE (CICS).                  *
*             USES SVC 235 FOR AUTH, CHANGE FOR ENVIRONMENT         *
*             BOYSEN/AMDAHL   02/94                                 *
*             REMOVE SVC 235 AUTH CALL WHICH IS NO LONGER REQUIRED  *
*             AS LONG AS CMD NAME IS IN IKJTSO00                    *
*             BOYSEN/AMDAHL   10/94                                 *
*                                                                   *
*  SYNTAX   - LCICS CICSTEST PRINT      LIST DFHRPL ALLOCATIONS     *
*             LCICS CICSTEST CICSPROG   SEARCH REGION CICSTEST FOR  *
*                                       MODULE CICSPROG AND REPORT  *
*                                       WHICH DSN(S) WHERE FOUND    *
*                                                                   *
*********************************************************************
LCICS    CSECT
R15      EQU   15
R14      EQU   14
R13      EQU   13
R12      EQU   12                       BASE REGISTER
R11      EQU   11
R10      EQU   10
R9       EQU   9
R8       EQU   8
R7       EQU   7
R6       EQU   6
R5       EQU   5
R4       EQU   4
R3       EQU   3
R2       EQU   2
R1       EQU   1
R0       EQU   0
LCICS    CSECT
         STM   R14,R12,12(R13)          SAVE CALLERS REGS
         BASR  R12,0                    ESTABLISH ADDRESSABILITY
         USING *,12                     BASE OF EXECUTING PROGRAM
         ST    R13,SAVEAREA+4           CALLERS SAVE AREA
         LA    R15,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
         ST    R15,8(,R13)              EXECUTING PROGRAMS SAVEAREA
         LA    R13,SAVEAREA             EXECUTING PROGRAMS SAVEAREA
*
         LR    R3,R1                    SAVE CPPL ADDR
         LA    R1,ERASE                 POINT TO ERASE CNTL CHARS
         LA    R0,L'ERASE               GET THE LENGTH
         TPUT  (1),(0),FULLSCR          ERASE THE 3270 SCREEN
         USING CPPL,R3                  MAP CPPL
         GETMAIN R,LV=WORKLEN           GET WORK AREA
         LR    R10,R1                   SAVE AREA ADDR IN R10
         USING WORK,R10
         LA    R5,PARSPARM
         USING PPL,R5
         XC    PARSE(PARSELEN),PARSE    INITIALIZE PPL
         MVC   PPLUPT,CPPLUPT           UPT
         MVC   PPLECT,CPPLECT           ECT
         MVC   PPLCBUF,CPPLCBUF         CIB
         DROP  R3
         LA    R1,PARSECB               ECB
         ST    R1,PPLECB
         L     R1,=A(PCL)               PCL
         ST    R1,PPLPCL
         LA    R1,PARSANS               PDL
         ST    R1,PPLANS
         CALLTSSR EP=IKJPARS,MF=(E,(R5))    CALL PARSE
         DROP  R5
         L     R10,PARSANS              OK ?
         USING PDL,R10
         LTR   R10,R10
         BP    CHCKPARM                 YES, CONTINUE
         TPUT  BADPARSE,17              PUT OUT BAD PARSE MSG
         B     GOBACK
*
CHCKPARM DS    0H
         GTEDASET ABC,CPPLPTR=CPPLADDR  SET POINTERS
         L     R3,CICSPTR               LOAD PTR TO PASSED CICS NAME
         LA    R2,CICSNAME
         LH    R1,CICSLEN               LOAD LENGTH OF PARM
         BCTR  R1,0
         EX    R1,IKJMVC                MOVE THE PARM
         L     R3,LOADPTR               LOAD PTR TO PASSED MOD NAME
         LA    R2,CICSLOAD
         LH    R1,LOADLEN               LOAD LENGTH OF PARM
         BCTR  R1,0
         EX    R1,IKJMVC                MOVE THE PARM
STARTIT  DS    0H
         BAS   3,A31                    SET ADDRESSING MODE 31
         LA    R5,PARMLIST              LOAD ADDRESS OF PARMLIST
         USING XMPARMS,R5               ADDRESSABILITY
         LOCJOB JOBNAME=CICSNAME,NOFIND=BADLOCAT
         ST    R1,XMASCB                SAVE ADDRESS OF ASCB
         MODESET MODE=SUP               SUP STATE PSW
         LA    R0,1                     GET AX
         AXSET AX=(R0)                  ... OF 1
         ST    R0,HOLDAX                SAVE OLD AX FOR LATER
         LOAD  EP=LCICSXM,              LOAD PRM LCICSXM               X
               GLOBAL=(YES,P),          LOAD INTO PAGEABLE CSA         X
               ERRET=GOBACK,            ERROR ROUTINE                  X
               EOM=NO                   DELETE MODULE AT END-OF-TASK
         ST    R0,XMEMADDR              SAVE ADDRESS OF ROUTINE
         L     R6,XMASCB                ASCB OF TARGET ADDRESS SPACE
         LH    R6,ASCBASID-ASCB(R6)     GET ASID OF JES FROM ASCB
         ESAR  R2                       GET SECONDARY ADDR SPACE
         ST    R2,HOLDSSAR              SAVE FOR LATER
         SSAR  R6                       SET AS SECONDARY
         L     R15,XMEMADDR             ENTRY POINT OF ROUTINE
         LA    R1,DSNLIST               ADDRESS OF DSN LIST
         ST    R1,XMDSNS                STORE IN PARM LIST
         LA    R1,PARMLIST              LOAD ADDR OF PARMLIST
         BASSM R14,R15                  INVOKE THE ROUTINE
         LTR   R15,R15                  RC = 0 ?
         BNZ   BADTIOT                  GET OUT
         B     GOBACK                   RETURN TO CALLER
BADLOCAT DS    0H                       TELL 'EM
         B     BAD_LOC                  ... WE CANT FIND REGION
BADTIOT  DS    0H                       COULD NOT GET TIOT
GOBACK   DS    0H                       RETURN ROUTINE
         L     R2,HOLDSSAR              RESTORE ORIGINAL
         SSAR  R2                       ... ORIGINAL SSN
         L     R0,HOLDAX                RESTORE
         AXSET AX=(R0)                  ... OLD AX
         MODESET MODE=PROB              RETURN TO PROB STATE
         BAS   3,A24                    SET AMODE 24
         DELETE EP=LCICSXM              DELETE FROM CSA
         LA    R6,DSNLIST               LOAD ADDR OF DSN'S
         LA    R5,35                    LOAD MAX INTO R5
         CLC   CICSLOAD,=C'PRINT   '    PRINT DEFAULT ???
         BNE   LOOKFOR                  NO
TPUTLOOP DS    0H
         TPUT  MSG3,L'MSG3              TPUT HEADER
         TPUT  BLANK,L'BLANK            TPUT BLANK LINE
TPUTIT   TPUT  0(R6),44                 TPUT THE DFHRPL NAMES
         LA    R6,44(,R6)               NEXT ENTRY
         CLI   0(R6),C' '               ANY MORE ENTRIES ?
         BE    GETOUT                   NO
         BCT   R5,TPUTIT                GO GET NEXT ENTRY
         B     GETOUT                   LET'S GET OUT
LOOKFOR  DS    0H                       LOOK FOR LOAD NAME IN DSN'S
         MVC   ABCDSNAM(44),0(R6)       MOVE DSN NAME FOR SVC99
         GTEDAALC ABC,VERB=AL           ALLOCATE INDIVIDUAL DD DSN(S)
         CLC   ABCS99RC,=F'0'           DID WE ALLOCATE ?
         BNE   ALLOC_ERROR              NO, PRINT ERROR
         MVI   DBLWORD,X'80'            SET OPEN OPTION INPUT
         OPEN  (LCICS001),MF=(E,DBLWORD)     OPEN PDS FOR BLDL
         SR    R7,R7                    CLEAR R7
         LA    R7,BLDLAREA              LOAD ADDR OF BLDL AREA
         USING PDS2,R7                  ADDRESSABILITY TO DSECT
         MVC   PDS2NAME,CICSLOAD        MOVE PASSED LOAD NAME
         BLDL  LCICS001,BLDL_LIST       LOOK FOR LOAD MOD
         B     *+4(R15)                 CHECK AND PROCESS RC'S
         B     TPUT_DSN                 LOAD FOUND  RC=00
         B     NEXTDSN                  LOAD NOT FOUND   RC=04
         B     NEXTDSN                  RC=08
         B     GOHOME                   SEVERE ERROR
TPUT_DSN CLI   PRNTFLAG,PRINTED         HAVE WE PRINTED HEADER ?
         BE    TPUT_DS2                 YES
         MVC   MEMMSG2,CICSLOAD         MOVE LOAD NAME TO MSG
         TPUT  MSG2,L'MSG2              TELL USER LOAD FOUND
         TPUT  BLANK,L'BLANK            TPUT A BLANK LINE
         MVI   PRNTFLAG,PRINTED         INDICATE HEADER PRINTED
         MVI   FOUNDFLG,FOUNDIT         INDICATE LOAD FOUND
TPUT_DS2 DS    0H
         MVI   CICSDSN,C' '             BLANK OUT ...
         MVC   CICSDSN+1(43),CICSDSN    LOAD LIB NAME
         MVC   CICSDSN(44),0(R6)        MOVE THE LOAD LIB NAME
         MVC   LENMOD+1,PDS2STOR        MOVE TO FULL WORD AREA
         L     R1,LENMOD                LOAD ADDRESS OF MODULE LENGTH
         LA    R2,HOLDSIZE              LOAD ADDRESS OF CHAR DISPLAY
         BAL   R10,HEXDUMP              BRANCH TO HEXDUMP ROUTINE
         MVC   MODSIZE,HOLDSIZE+2       MOVE DISPLAY TO PRINT LINE
         TPUT  MSG4,L'MSG4              TPUT LOAD LIB INFO
         B     NEXTDSN                  GET NEXT DSN
ALLOC_ERROR    DS  0H                   ALLOCATION ERROR MSG
         MVI   ERRORDSN,C' '            MOVE BLANKS
         MVC   ERRORDSN+1(43),ERRORDSN  DITTO
         MVC   ERRORDSN(44),0(R6)       MOVE ERROR DSN
         TPUT  MSG0,L'MSG0              TPUT ERROR MSG
NEXTDSN  LA    R6,44(,R6)               NEXT ENTRY
         CLI   0(R6),C' '               ANY MORE ENTRIES ?
         BE    GOHOME                   NO
         CLOSE (LCICS001)               CLOSE THE DSN
         BCT   R5,LOOKFOR               GO GET NEXT ENTRY
GOHOME   CLI   FOUNDFLG,FOUNDIT         WAS LOAD FOUND ?
         BE    GETOUT                   YES
         MVC   MEMMSG1,CICSLOAD         MOVE LOAD NAME TO MSG
         TPUT  MSG1,L'MSG1              TELL USER LOAD FOUND
         B     GETOUT                   JUMP OVER ERROR MSG
BAD_LOC  TPUT  BADLOC,L'BADLOC          ... WE CAN'T FIND JES
GETOUT   TPUT  BLANK,L'BLANK            TPUT BLANK LINE
         L     R13,4(,R13)              CALLERS SAVE AREA
         L     R14,12(,R13)             RESTORE R14
         LM    R0,R12,20(R13)           RESTORE REMAINING REGS
         BR    R14                      RETURN TO CALLER, REG 15
*
*        HEX TRANSLATE ROUTINE
*
HEXDUMP  ST    R1,FWORD                 STORE INPUT REG INTO FWORD
         UNPK  DUMMY(9),FWORD(5)        UNPACK TO ADD F ZONE DIGITS
         TR    DUMMY(8),TRANTAB         TRANSLATE TO CORRECT CHARACTERS
         MVC   0(8,R2),DUMMY            MOVE TO CALLER'S AREA
         BR    R10                      EXIT
FWORD    DS    F,CL1                    1 WORD + 1 BYTE OF GARBAGE
DUMMY    DS    CL9
HOLDSIZE DS    CL8' '                   HOLD MOD SIZE
TRANTAB  DS    CL(X'F0')                NEVER USED
         DC    C'0123456789ABCDEF'
LENMOD   DS    F
*
*        CHANGE ADDRESSING MODES
*
A24      LA    3,0(3)                   CLEAR HIGH ORDER BIT
         BSM   0,3
*
A31      O     3,=X'80000000'           SET HIGH ORDER BIT
         BSM   0,3
*
*        STORAGE AREA
*
SAVEAREA DS    18F
BADLOC   DC    CL25'BAD LOCATE OF CICS REGION'
ERASE    DC    X'27F5401D40'            USED TO CLEAR 3270 TERMINAL
CICSNAME DC    CL8'        '            ADDRESS SPACE NAME
CICSLOAD DC    CL8' '                   LOAD MOD NAME
XMEMADDR DS    F                        HOLD AREA FOR PGM ADDR
PARMLIST DS    0F,CL(XMPARMSL)          PARMLIST
DSNLIST  DC    36CL44' '                LIST OF DSN'S 35 MAX + 1
HOLDSSAR DS    F                        HOLD AREA FOR SASN
HOLDAX   DS    F                        HOLD AREA FOR AX
IKJMVC   MVC   0(*-*,R2),0(R3)          MOVE FOR EX
MSG0     DS    0CL79
         DC    CL21'*** ALLOCATE ERROR - '
ERRORDSN DC    CL44' '
         DC    CL14' - NOT SEACHED'
MSG1     DS    0CL54
         DC    CL12'LOAD MODULE '
MEMMSG1  DC    CL8' '
         DC    CL14' NOT FOUND IN '
         DC    CL7'DFHRPL '
         DC    CL13'CONCATENATION'
MSG2     DS    0CL61
         DC    CL12'LOAD MODULE '
MEMMSG2  DC    CL8' '
         DC    CL10' FOUND IN '
         DC    CL7'DFHRPL '
         DC    CL13'CONCATENATION'
         DC    CL11' DATASET(S)'
MSG3     DC    CL17'DFHRPL DATASET(S)'
BLANK    DC    CL2' '
MSG4     DS    0CL62
CICSDSN  DC    CL44' '
         DC    CL5' '
         DC    CL7'SIZE = '
MODSIZE  DC    CL6' '
CPPLADDR DS    F
PRNTFLAG DC    X'00'
PRINTED  EQU   X'80'
FOUNDFLG DC    X'00'
FOUNDIT  EQU   X'80'
BADPARSE DC    CL17'BAD PARSE OF PARM'
ABC      GTEDADAT DSNAM=XX.YYY,DDNAM=LCICS001,                         X
               CLOSE=YES,STATS=SHR,CNVRT=YES
LCICS001 DCB   DDNAME=LCICS001,                                        X
               DSORG=PO,                                               X
               MACRF=R,                                                X
               EODAD=GOBACK,                                           X
               RECFM=FB,                                               X
               LRECL=0,                                                X
               BLKSIZE=0
DBLWORD  DS    D
                  DS  0H
BLDL_LIST         DC  H'1'
BLDL_LENGTH       DC  H'76'
BLDLAREA          DC  CL76' '
PCL      IKJPARM DSECT=PDL
CICS     IKJIDENT 'CICS REGION NAME',UPPERCASE,FIRST=ALPHA,            X
               MAXLNTH=8,OTHER=ALPHANUM,PROMPT='CICS REGION NAME',     X
               HELP='VALID CICS REGION NAME'
LOAD     IKJIDENT 'LOAD MODULE NAME',UPPERCASE,FIRST=ALPHA,            X
               MAXLNTH=8,OTHER=ALPHANUM,DEFAULT='PRINT   ',            X
               HELP='VALID LOAD MODULE NAME'
         IKJENDP
         TITLE 'COMMAND PROCESSOR PARAMETER LIST'
         IKJCPPL
         TITLE 'GETMAIN WORK AREA'
WORK     DSECT
PARSE    EQU   *
PARSPARM DS    7A                       PPL
PARSECB  DS    F                        ECB
PARSANS  DS    A                        PDL
PARSELEN EQU   *-PARSE
WORKLEN  EQU   *-WORK
         TITLE 'PARSE PARAMETER LIST'
         IKJPPL
PDL      DSECT
         ORG   CICS
CICSPTR  DS    A                       ADDRESS OF CICS REGION NAME
CICSLEN  DS    H                       LENGTH OF NAME
CICSFLAG DS    X                       FLAGS
CICFOUND EQU   X'80'                   NAME PRESENT
         ORG   LOAD
LOADPTR  DS    A                       ADDRESS OF SEARCH LOAD MOD
LOADLEN  DS    H                       LENGTH OF LOAD MOD NAME
LOADFLAG DS    X                       FLAGS
LOAFOUND EQU   X'80'                   LOAD MOD PRESENT
*----------------------------------- PARM MAPPING FOR CROSS MEM
XMPARMS  DSECT
XMASCB   DS    F                     ASCB
XMDSNS   DS    A                     ADDRESS OF DSNS
XMPARMSL EQU   *-XMPARMS             LENGTH
*----------------------------------- END OF PARM AREA
         PRINT NOGEN
         TITLE 'CVT MAPPING'
         CVT   DSECT=YES
         TITLE 'IKJEFF18 CONTROL BLOCKS'
         IKJEFFDF DFDSECT=YES,DFDSEC2=YES
         TITLE 'ASCB MAPPING MACRO'
         IHAASCB
         TITLE 'PARTITIONED DATA SET ENTRY'
         IHAPDS
         TITLE 'SVC-99 CONTROL BLOCKS'
         IEFZB4D0
         END
