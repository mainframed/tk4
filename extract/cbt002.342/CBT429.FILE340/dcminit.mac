DCMINIT  CSECT
DCMINIT  AMODE 31
DCMINIT  RMODE 24
         $BOX   HDR='DCMINIT - ',TITLE='DSECTS'
         $DAB
         EJECT
         $STATSD
         EJECT
         $SSRD
         EJECT
         $MONREC
         $UCMBS
         $CMB
         EJECT
         $IOB
         EJECT
         $CCW
         EJECT
         $LRD
         EJECT
         $SSSD
         $RCDD
         $SPSD
         EJECT
         $OPEN
         PRINT  NOGEN
         DCBD   DSORG=(XA,XE),DEVD=DA
         IEZDEB
$DEBNMT  EQU  DEBNMTRK-DEBDASD+DEBBASND-DEBBASIC
$DEBSTH  EQU  DEBSTRHH-DEBDASD+DEBBASND-DEBBASIC
$DEBENH  EQU  DEBENDHH-DEBDASD+DEBBASND-DEBBASIC
$DEBSTC  EQU  DEBSTRCC-DEBDASD+DEBBASND-DEBBASIC
$DEBENC  EQU  DEBENDCC-DEBDASD+DEBBASND-DEBBASIC
$DEBUCB  EQU  DEBUCBAD-DEBDASD+DEBBASND-DEBBASIC
         SPACE
JFCB     DSECT
         IEFJFCBN LIST=NO
         $SCREEN
         PRINT  GEN
         $ERRCODE
         $BOX  'INITIALIZATION',TITLE='INITIALIZATION'
DCMINIT  CSECT
         $MODID BR=YES
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING DCMINIT,R12
         USING DAB,R11
                                       SPACE
         LA    R10,72(,R13)
         ST    R13,4(,R10)             Chain
         ST    R10,8(,R13)               those
         LR    R13,R10                     saveareas
                                       SPACE
         $BOX  'BUILD DCM ANCHOR BLOCK',TITLE='DAB BUILD'
         LA    R15,DABLEN(,R11)
         L     R14,MRECLEN
         ST    R15,D_NEW@              New subsystem status area
                                       SPACE
         AR    R15,R14
         ST    R15,D_OLD@              Old subsystem status area
                                       SPACE
         AR    R15,R14
         ST    R15,D_FILE@
                                       SPACE
         AR    R15,R14
         ST    R15,D_UCMBS@            Save UCMB address
                                       SPACE
         LA    R14,$UCMBLEN
         SLL   R14,6
         AR    R15,R14
         ST    R15,D_NMB@              Save new MB area
                                       SPACE
         LA    R15,64*$CMBLEN(,R15)
         ST    R15,D_OMB@              Save old MB area
                                       SPACE
         LA    R15,64*$CMBLEN(,R15)
         ST    R15,D_SCRN@             Save screen address
                                       SPACE
         L     R9,D_NEW@               Use subsys data area
         USING JFCB,R9
                                       SPACE
         $BOX  'OPEN CAPTURE FILE',                                    *
               TITLE='OPEN CAPTURE FIL E'
         MVC   CAPDCB(CAPDCBL),MODELCAP   Move in model DCB
         LA    R10,CAPDCB
         USING IHADCB,R10
                                       SPACE
         LA    R0,D_JFCB@
         ST    R10,D_OPN               Move model open list
         MVI   D_OPN,$LAST
         ST    R0,DCBEXLST
         ST    R9,D_JFCB@
         MVI   D_JFCB@,$JFCB+$LAST
                                       SPACE
         RDJFCB MF=(E,D_OPN)
                                       SPACE
         LTR   R15,R15                 Capture file present?
         BNZ   OPEN_MONITOR            No..
                                       SPACE
         LA    R8,$SCRNLEN             R8 = record length
         LR    R7,R8
         SLL   R8,3                    R8 = blksize
         STH   R7,JFCLRECL             Record length     (in jfcb)
         STH   R8,JFCBLKSI             Save blksize      (in jfcb)
         MVI   JFCRECFM,JFCFIX+JFCRFB  New record format - FB
         MVI   JFCDSRG1,JFCORGPS       New dsorg=ps
         OI    JFCBIND2,JFCMOD         Add to file end
         OI    JFCBMASK+4,X'80'        Ensure jfcb re-written
         MVI   D_OPN,$OUTPUT+$LAST     Open for output
                                       SPACE
         OPEN  MF=(E,D_OPN),TYPE=J
                                       SPACE
         TM    DCBOFLGS,DCBOFOPN       Open ok?
         BZ    OPEN_MONITOR            No.
                                       SPACE
         OI    D_FLG1,$CAPTURE         Indicate capture log present
         $BOX  'OPEN MONITOR FILE',                                    *
               TITLE='OPEN MONITOR FIL E'
OPEN_MONITOR   EQU *
         MVC   MONDCB(MONDCBL),MODELMON   Move in model DCB
         LA    R10,MONDCB
         USING IHADCB,R10
                                       SPACE
         LA    R0,D_JFCB@
         ST    R10,D_OPN               Move model open list
         MVI   D_OPN,$LAST
         ST    R0,DCBEXLST
         ST    R9,D_JFCB@
         MVI   D_JFCB@,$JFCB+$LAST
                                       SPACE
         RDJFCB MF=(E,D_OPN)
                                       SPACE
         L     R8,MRECLEN              R9 = record length
                                       SPACE
         STH   R8,JFCBLKSI             Save blksize      (in jfcb)
         STH   R8,JFCLRECL             New record length (in jfcb)
         STH   R8,DL1                  Save data length  (in ccw)
         OI    JFCBMASK+4,X'80'        Ensure jfcb is re-written
         MVI   JFCRECFM,JFCFIX         New record format - fixed
         MVI   JFCDSRG1,JFCORGPS       New dsorg=ps
         DROP  R9
         LA    R7,IOBAREA
         USING IOB,R7
                                       SPACE
         ST    R7,DCBIOBAD             Save iob addr in dcb
         ST    R10,IOBDCB              Save dcb addr in iob
         LA    R1,ECB
         MVI   IOBFLAG1,$IOBCC+$IOBNRL
         ST    R1,IOBECB
                                       SPACE
         MVI   D_OPN,$OUTIN+$LAST      Open for output/input
                                       SPACE
         OPEN  MF=(E,D_OPN),TYPE=J
                                       SPACE
         TM    DCBOFLGS,DCBOFOPN       Open ok?
         BZ    ERR_OPN                 No..error
                                       SPACE
         XR    R14,R14
         OI    D_FLG1,$OPENOK          Dcb open now
                                       SPACE
         ICM   R14,B'0111',DCBDEBAD+1  R14 -> deb
         LA    R9,LRPARM
         USING LRD,R9
                                       SPACE
         LH    R1,$DEBSTH(,R14)        R1 = track end..offset 0
         LH    R2,$DEBSTC(,R14)        R2 = cyl start
         L     R3,$DEBUCB(,R14)        R3 -> ucb
         N     R3,M0FFF                Sanitize
         STH   R1,LR_HH0               Save trk start address
         STH   R1,LR_HH1               Save trk start address
         STH   R1,HH1                  Save trk start address
         STH   R2,LR_CC0               Save cyl start address
         STH   R2,LR_CC1               Save cyl start address
         STH   R2,CC1                  Save cyl start address
         ST    R3,D_UCB@               Save ucb addr
         MVI   RR1,X'01'               Save record number
         MVI   LR_R,X'01'              Try for record 1
         LH    R15,$UCBDEV(,R3)        R15 = ua
         STCM  R2,B'0011',IOBCC        Save cyl start address
         STCM  R1,B'0011',IOBHH        Save trk start address
         MVI   IOBR,X'00'              Save record number
         N     R15,MCU                 R15 = cu unit addr
         ST    R15,D_CU
         DROP  R10,R9,R7
         $BOX  'BUILD UCB+CMB TABLE',                                  *
               TITLE='BUILD UCB+CMB TABLE'
         L     R9,$CVT
         L     R8,$CVTOPCTP(,R9)       R8 -> RMCT
         L     R15,RMCTC
         CL    R15,0(,R8)
         BNE   ERR_CTLB
                                       SPACE
         L     R8,$RMCTCMCT(,R8)       R8 -> CMCT
         L     R15,CMCTC
         CL    R15,0(,R8)
         BNE   ERR_CTLB
                                       SPACE
         L     R8,$CMCTCMBV(,R8)       R8 -> CMB
         L     R15,CMBC
         CL    R15,0(,R8)
         BNE   ERR_CTLB
                                       SPACE
         ST    R8,D_CMB@               Save cmb address
         L     R2,D_CU                 R2 = first address possible
         LA    R3,64                   R3 = max # devices
         XR    R4,R4                   R4 = first address
         XR    R5,R5                   R5 = last  address
         L     R10,D_UCMBS@
         USING UCMBS,R10
                                       SPACE
         L     R9,D_NEW@               R9 -> ucbscan workarea
         XC    0(128,R9),0(R9)         Clear ucb workarea
                                       SPACE
NEXT_UCB EQU   *
         LA    R8,U_UCB                R8 = ucb copy area
         LA    R7,U_UCBPFX             R7 = ucb prefix copy area
         STH   R2,U_DEV                Save device #
         UCBSCAN COPY,WORKAREA=(R9),   Scan workarea                   *
               UCBAREA=(R8),           UCB common copy                 *
               UCBPAREA=(R7),          UCB prefix copy                 *
               DEVN=U_DEV,             Device #                        *
               DYNAMIC=YES,DEVCLASS=DASD,RANGE=ALL,MF=(E,U_PARM)
                                       SPACE
         LTR   R15,R15                 OK?
         BNZ   BUMP_UCB                No..try next device
                                       SPACE
         LR    R5,R2                   Possible last device
         LTR   R4,R4
         BNZ   *+4+2
         LR    R4,R2                   Definitely first device here
         LA    R15,U_UCB               R15 -> ucb copy
         LA    R0,$UCBMBI              MB index offset
         L     R1,D_CMB@
         ST    R15,U_UCB@              Save ucb address
         SR    R15,R0                  R15 -> mb index
         LH    R15,0(,R15)             R15 =  MB index
         SLL   R15,5                    times 32
         AR    R15,R1                  Add CMB start address
         ST    R15,U_CMB@
                                       SPACE
BUMP_UCB EQU   *
         LA    R2,1(,R2)               Next device #
         LA    R10,$UCMBLEN(,R10)      Next slot
         BCT   R3,NEXT_UCB
                                       SPACE
DONE_UCB EQU   *
         LTR   R5,R5                   Found any ucb's?
         BZ    ERR_UCBS                No, complain and leave
                                       SPACE
         ST    R4,D_DEVF               Save first used device
         ST    R4,D_DEV
         ST    R5,D_DEVL               Save last  used device
         LR    R6,R5                   Last used device
         L     R1,D_CU
         SR    R6,R4                   #devices-1
         SR    R4,R1                   Offset
         LA    R6,1(,R6)               #devices
         ST    R6,D_DEV#
         ST    R4,D_DEVOFF
         MVI   IN_FLGS,$ALL            Report on all devices
         DROP  R10
                                       SPACE
         $BOX  'BUILD CCWS',TITLE='BUI LD CCWS'
BUILDCCW EQU   *
         MVC   P1CCW(PCCWLEN),PCCWS    Move pattern ccws
         LA    R15,LRPARM
         ST    R15,P1LR                Locate record
         MVI   P1LR,$LR
                                       SPACE
         L     R15,D_FILE@             Read into file history table
         ST    R15,P1RD                Read data
         MVI   P1RD,$RD
                                       SPACE
         LA    R15,SSSAREA
         ST    R15,P2SSS               Sense subsystem status
         ST    R15,P2RDC
         MVI   P2RDC,$RDC
         MVI   P2SSS,$SNSSS
                                       SPACE
         LA    R15,SNIDAREA
         ST    R15,P3SNSID             Sense id
         MVI   P3SNSID,$SNSID
                                       SPACE
         L     R15,D_NEW@              Put rcd
         ST    R15,P3RCD                  info here
         MVI   P3RCD,$RCD
                                       SPACE
         LA    R15,LRPARM              Initialize locate record parms
         USING LRD,R15
                                       SPACE
         MVI   LR_OP,$LR_CA+$LR_RD     Count area orient + read data
         MVI   LR_COUNT,X'01'          Only 1 ccw
         DROP  R15
                                       SPACE
         LA    R15,PSFPARM
         ST    R15,P2PSF               Perform subsystem function
         MVI   P2PSF,$PSF
         LM    R0,R2,PPSFPARM
         STM   R0,R2,PSFPARM           Initialize psf parms
                                       SPACE
         $BOX  'ISSUE SENSE ID AND REA D CONFIGURATION DATA'
         LA    R14,IOBAREA             R14 ->  IOB
         USING IOB,R14
                                       SPACE
         LA    R15,P3RCD               R15 -> RCD
         XR    R0,R0
         ST    R15,IOBCCW
         ST    R0,ECB
                                       SPACE
         EXCP  IOBAREA                 Issue read
                                       SPACE
         L     R10,D_NEW@              R10 -> rcd info
         USING RCD,R10
                                       SPACE
         L     R9,FF3990S              Get
         L     R8,FF3990NS                magic words
         L     R7,FF39906                   words
                                       SPACE
         WAIT  ECB=ECB                 Waitttttttttt
                                       SPACE
         DC    H'0'                    Roland
         CL    R9,SNIDAREA             Af controller?
         BE    MOVE_SER                Yes..
                                       SPACE
         CL    R8,SNIDAREA             Af controller?
         BE    MOVE_SER                Yes..
                                       SPACE
         CL    R7,SNIDAREA             Af controller?
         BNE   ERR_CU                  No...
                                       SPACE
MOVE_SER EQU   *
         MVC   D_SERIAL,RCDSER24       Move CU serial#
         DROP  R10
                                       SPACE
         $BOX  'GET SWITCH INFORMATION '
         LA    R14,IOBAREA             R14 ->  IOB
         USING IOB,R14
                                       SPACE
         LA    R15,P2PSF               R15 -> PSF CCW
         ST    R10,P2RSD               R10 -> RSD info
         XR    R0,R0
         ST    R15,IOBCCW
         MVI   P2RSD,$RSD
         ST    R0,PSFPARM+4            Fetch storage path status
         ST    R0,ECB
                                       SPACE
         EXCP  IOBAREA                 Get storage path info
                                       SPACE
         WAIT  ECB=ECB                 Waitttttttttt
                                       SPACE
         USING SPS,R10
                                       SPACE
         ICM   R15,B'1000',SPSSWCH0    Sp0 switches
         ICM   R15,B'0100',SPSSWCH1    Sp1 switches
         ICM   R15,B'0010',SPSSWCH2    Sp2 switches
         ICM   R15,B'0001',SPSSWCH3    Sp3 switches
         LA    R0,X'01FF'
         ST    R15,D_SWITCH            Save switch status
         ST    R0,PSFPARM+4            Restore psfparm
         DROP  R10
         $BOX  'GATHER MEASUREMENT BLO CKS',                           *
               TITLE='GATHER MEASUREMENT BLOCKS'
         L     R1,D_NMB@               Store them here
         L     R15,ACMBG
         BASR  R14,R15
                                       SPACE
         LA    R0,200
         ST    R0,D_WAIT
                                       SPACE
         $BOX  'BUILD SCREEN IMAGE'
         L     R14,D_SCRN@             R14 -> target
         LA    R15,$SCRNLEN            R15 =  length
         L     R2,ASCREEN              R2 ->  screen description
         LA    R3,$SCRNLEN             R3 =   length
         MVCL  R14,R2
                                       SPACE
         $BOX  'READ MONITOR FILE',                                    *
               TITLE='READ MONITOR FILE'
         LA    R14,IOBAREA             R14 ->  IOB
         USING IOB,R14
                                       SPACE
         LA    R15,P1CCW               R15 -> CCWS
         XR    R0,R0
         ST    R15,IOBCCW
         ST    R0,ECB
                                       SPACE
         EXCP  IOBAREA                 Issue read
                                       SPACE
         L     R10,D_FILE@
         USING MONREC,R10
                                       SPACE
         WAIT  ECB=ECB                 Waitttttttttt
                                       SPACE
         TM    ECB,$IOOK               Completed ok?
         BNO   CREAT_MON               No...
                                       SPACE
         L     R0,MON_ID               R0 = monitor record id
         CL    R0,MON_IDC              Compare ok?
         BNE   CREAT_MON
                                       SPACE
         L     R0,MRECLEN
         CL    R0,MON_LEN              Compare ok?
         BNE   CREAT_MON               Re-create if different
                                       SPACE
         ICM   R0,B'1111',MON_DTE
         BZ    CREAT_MON
                                       SPACE
         LR    R14,R10                 R14 -> file area
         L     R15,MRECLEN             R15 -> record length
         L     R2,D_NEW@               R2  -> new area
         LR    R3,R15                  R3  -> length
         MVCL  R2,R14                  Move it
                                       SPACE
         L     R1,MON_DTE
         L     R0,MON_TME
         L     R15,ACONV
         BASR  R14,R15
                                       SPACE
DONE     EQU  *
         L     R13,4(,R13)
         L     R15,D_ERROR
         RETURN (14,12),RC=(15)
                                       SPACE
         $BOX  'CREATE MONITOR FILE',                                  *
               TITLE='CREATE MONITOR FILE'
CREAT_MON      EQU  *
         LA    R14,IOBAREA             R14 ->  IOB
         USING IOB,R14
                                       SPACE
         L     R10,D_NEW@
         USING MONREC,R10
                                       SPACE
         LA    R15,P2PSF               R15 -> CCWS
         LA    R9,MON_SSR              R9  -> SSR AREA
         XR    R0,R0
         ST    R9,P2RSD
         MVI   P2RSD,$RSD
         ST    R15,IOBCCW
         ST    R0,ECB
                                       SPACE
         EXCP  IOBAREA                 Issue read
                                       SPACE
         TIME  BIN
         STCK  MON_TOD
         ST    R1,MON_DTE
         ST    R0,MON_TME
                                       SPACE
         WAIT  ECB=ECB                 Waitttttttttt
                                       SPACE
         TM    ECB,$IOOK               Completed ok?
         BNO   ERR_IO                  No..i/o error on psf
                                       SPACE
         LR    R14,R10                 R14 -> new  area
         L     R15,MRECLEN             R15 -> record length
         L     R2,D_FILE@              R2  -> new area
         LR    R3,R15                  R3  -> length
         MVCL  R2,R14                  Move it
                                       SPACE
         L     R1,MON_DTE
         L     R0,MON_TME
         L     R15,ACONV
         BASR  R14,R15
                                       SPACE
         OI    IN_FLGS,$DELTA          Short term hits%
         OI    D_FLG1,$NEWFILE         Indicate new monitor file
         LA    R0,L'DELAYMSG
         LA    R1,DELAYMSG
         O     R1,TPUTFLG
         TPUT  (1),(0),R
                                       SPACE
         STIMER WAIT,BINTVL=WAIT4      Wait 4 secs
                                       SPACE
         B     DONE                    And finished
                                       SPACE
         $BOX  'ERRORS',TITLE='ERRORS'
ERR_IO   EQU   *
         L     R15,AIOERR
         BASR  R14,R15
                                       SPACE
         B     DONE
                                       SPACE
ERR_OPN  EQU   *
         LA    R0,L'OPENERR
         LA    R1,OPENERR
         O     R1,TPUTFLG
         TPUT  (1),(0),R
                                       SPACE
         LA    R0,$ERR_OPEN
         ST    R0,D_ERROR
         B     DONE
                                       SPACE
ERR_CTLB EQU   *
         LA    R0,L'CTLBERR
         LA    R1,CTLBERR
         O     R1,TPUTFLG
         TPUT  (1),(0),R
                                       SPACE
         LA    R0,$ERR_CTLB
         OI    D_FLG1,$TERMERR         Terminating error
         ST    R0,D_ERROR
         B     DONE
                                       SPACE
ERR_UCBS EQU   *
         LA    R0,L'UCBERR
         LA    R1,UCBERR
         O     R1,TPUTFLG
         TPUT  (1),(0),R
                                       SPACE
         LA    R0,$ERR_CTLB
         OI    D_FLG1,$TERMERR         Terminating error
         ST    R0,D_ERROR
         B     DONE
                                       SPACE
ERR_CU   EQU   *
         LA    R0,CUERRLEN
         LA    R1,CUERR
         O     R1,TPUTFLG
         TPUT  (1),(0),R
                                       SPACE
         LA    R0,$ERR_CU
         OI    D_FLG1,$TERMERR         Terminating error
         ST    R0,D_ERROR
         B     DONE
                                       SPACE
         $BOX  'CONSTANTS',TITLE='CONSTANTS'
         DS    0D
$SRECLEN EQU   64*96                   64 devices; 96 bytes/entry
$MRECLEN EQU   $MONHDLN+$SRECLEN
SRECLEN  DC    A($SRECLEN)
MRECLEN  DC    A($MRECLEN)
WAIT4    DC    F'400'
                                       SPACE
$CVT      EQU   16
$CVTUCBA  EQU   X'4E4'
$CVTOPCTP EQU   X'25C'
$RMCTCMCT EQU   X'118'
$CMCTCMBV EQU   X'14'
$UCBDEV   EQU   4
$UCBNX    EQU   8
$UCBTYP   EQU   18
$UCBVOLI  EQU   28
$UCBCHPS  EQU   24
$UCBMBI   EQU   30
$UCBLPM   EQU   28
$DASD     EQU   X'20'
                                       SPACE
AIOERR   DC    V(DCMIOERR)
ASCREEN  DC    V(DCMSCRN)
ACONV    DC    V(DCMCONVD)
ACMBG    DC    V(DCMCMBG)
MCU      DC    X'0000FFC0'             Cu mask
M0FFF    DC    X'00FFFFFF'             Clear hi-order byte
TPUTFLG  DC    X'10000000'             Tput nowait
RMCTC    DC    CL4'RMCT'
CMCTC    DC    CL4'CMCT'
CMBC     DC    CL4'CMB '
MON_IDC  DC    CL4'*DCM'
FF3990S  DC    XL4'FF3990CC'           3990-3 Sync CU
FF3990NS DC    XL4'FF3990EC'           3990-3 Non Sync CU
FF39906  DC    XL4'FF3990E9'           3990-6 Non Sync CU
         PRINT NOGEN
MODELMON DCB   DSORG=PS,MACRF=E,DEVD=DA,                               *
               DDNAME=MONITOR,IOBAD=*-*,EXLST=*-*
MONDCBL  EQU   *-MODELMON
MODELCAP DCB   DSORG=PS,MACRF=PM,DEVD=DA,RECFM=FB,LRECL=$SCRNLEN,      *
               DDNAME=CAPTURE,EXLST=*-*,BLKSIZE=8*$SCRNLEN
CAPDCBL  EQU   *-MODELCAP
DCBLEN   EQU   *-MODELCAP
PCCWS    DS    0D
         CCW   $LR,*-*,$CC,16          LOCATE RECORD
         CCW   $RD,*-*,$SLI,$MRECLEN   READ/WRITE DATA
         CCW   $WCKD,*-*,0,$MRECLEN    WRITE COUNT KEY DATA (DATA )
         CCW   $WCKD,*-*,$DC,8         WRITE COUNT KEY DATA (COUNT)
*
         CCW   $PSF,*-*,$CC,12         PERFORM SUBSYSTEM FUNCTION
         CCW   $RSD,*-*,$SLI,$SRECLEN  READ SUBSYSTEM DATA
         CCW   $RDC,*-*,$CC+$SKIP,64   READ DEVICE CHARACTERISTICs
         CCW   $SNSSS,*-*,0,40         SENSE SUBSYSTEM STATUS
*
         CCW   $RCD,*-*,$CC+$SLI,256   READ CONFIGURATION DATA
         CCW   $SNSID,*-*,0,12         SENSE ID
PCCWLEN  EQU   *-PCCWS
PPSFPARM DC    X'18000000'
         DC    X'000001FF'
         DC    X'00000000'             Byte8 =x'00' -> 96 bytes stats
OPENERR  DC    C'Could not open MONITOR file'
CTLBERR  DC    C'Control block error. Contact Alfred (403) 424-2006'
UCBERR   DC    C'Could not find UCBs. Contact Alfred (403) 424-2006'
CUERR    DC    C'Sorry...DCM only works on 7980-3 or contemtible '
         DC    C'control units'
CUERRLEN EQU   *-CUERR
DELAYMSG DC    C'Relax, DCM collecting statistics'
         PRINT GEN
         SPACE 3
         $REGS
         END
