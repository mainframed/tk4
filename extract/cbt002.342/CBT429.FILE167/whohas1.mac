*/*
*/*****************************************************************/*
*/** WHOHAS1:                                                    **/*
*/** FUNCTION: FIRST MODULE CALLED BY 'WHOHAS'                   **/*
*/**                                                             **/*
*/**           THE PURPOSE OF THIS UTILITY IS TO DISPLAY UNDER   **/*
*/**           TSO (PFK6) WHO HAS A DATA SET 'ENQUED'            **/*
*/**                                                             **/*
*/**           WILL PROMPT FOR 'GRS' FUNCTION AND PASS THE       **/*
*/**           REQUEST ON TO WHOHAS2 FOR VERIFICATION            **/*
*/*****************************************************************/*
*/*
WHOHAS1  CSECT
         BASER R12                    .SET BASE REG + GET EQUATES
         LA    R11,SAVEHAS1           .R11 POINTS TO SAVEAREA
         ST    R13,4(,R11)            .NOW CHAIN
         ST    R11,8(,R13)            .......... THE SAVEAREAS
         LR    R13,R11                .R13 POINTS TO OUR SAVEAREA
         B     BEGIN                  .AND BRANCH TO CODE
*/*
SAVEHAS1 DS    18F                    .OUR SAVEAREA
BEGIN    EQU   *
BALREG   EQU   2                      .ASSIGN R2 AS BALREG
INPUTLEN EQU   3                      LENGTH OF INPUT FROM TGET
*/*
         STFSMODE ON                  .GO TO FULL SCREEN MODE
*/*
SELECT   MVC   FUNCTION(3),=CL3' '    .CLEAR FUNCTION
         XC    INLEN,INLEN            .ZERO INLEN
         MVC   RNAME(44),=CL44' '
         XC    TGETBUFF,TGETBUFF      .INPUT BUFFER = ALL 0'S
         LA    R1,FIRSTMSG            .POINT R1 TO FIRSTMSG
         L     R0,FIRSTL              .R0 HAS1 FIRSTMSG LENGTH
         BAL   BALREG,TPUT            .WRITE TO TERMINAL
AFTRHELP BAL   BALREG,TGET            .GET TERMINAL INPUT
         LA    R3,TGETBUFF
         CLC   0(2,R3),=C'DA'         .DA UPPER CASE   ?
         BE    DAINQ
         CLC   0(3,R3),=C'CAT'        .CAT UPPER CASE  ?
         BE    CATINQ
         CLC   0(2,R3),=C'LL'         .LL UPPER CASE   ?
         BE    LLINQ
         CLC   0(3,R3),=C'VOL'        .VOL UPPER CASE ?
         BE    VOLINQ
         CLC   0(2,R3),=C'VT'         .VT UPPER CASE ?
         BE    VTINQ
         CLC   0(4,R3),=C'HELP'       .NEED HELP     ?
         BE    HELP
         CLC   0(3,R3),=C'END'        .NEED HELP     ?
         BE    RETURN
BADINPUT LA    R1,INPUTBAD            .ELSE ISSUE ERROR
         L     R0,EIGHTY
         BAL   BALREG,TPUT
         B     AFTRHELP
*/*
DAINQ    EQU   *
         LA    R1,DAMSG               .PRIME R1 WITH MSG
         L     R0,EIGHTY              .LENGTH OF MSGF
         BAL   BALREG,TPUT            .DO A TPUT
         BAL   BALREG,TGET            .GET TERMINAL INPUT
         MVC   FUNCTION(3),=C'DA '    .INDICATE 'DA' FUNCTION
         BAL   BALREG,MOVER           .MOVE DATASET NAME
         B     PASSTO2
*/*
LLINQ    EQU   *
         LA    R1,LLMSG               ....LIKE DAINQ
         L     R0,EIGHTY              ... DITTO
         BAL   BALREG,TPUT            .DITTO
         BAL   BALREG,TGET            .GET TERMINAL INPUT
         MVC   FUNCTION(3),=C'LL '    .INDICATE 'LL' FUNCTION
         BAL   BALREG,MOVER
         B     PASSTO2
*/*
VTINQ    EQU   *
         LA    R1,VMSG
         L     R0,EIGHTY
         BAL   BALREG,TPUT
         BAL   BALREG,TGET            .GET TERMINAL INPUT
         MVC   FUNCTION(3),=C'VT '    .INDICATE 'VT' FUNCTION
         BAL   BALREG,MOVER
         B     PASSTO2
*/*
VOLINQ   EQU   *
         LA    R1,VMSG
         L     R0,EIGHTY
         BAL   BALREG,TPUT
         BAL   BALREG,TGET            .GET TERMINAL INPUT
         MVC   FUNCTION(3),=C'VOL'    .INDICATE 'VOL' FUNCTION
         BAL   BALREG,MOVER
         B     PASSTO2
*/*
CATINQ   EQU   *
         LA    R1,CATMSG
         L     R0,EIGHTY
         BAL   BALREG,TPUT
         BAL   BALREG,TGET            .GET TERMINAL INPUT
         MVC   FUNCTION(3),=C'CAT'    .INDICATE 'CAT' FUNCTION
         BAL   BALREG,MOVER
         B     PASSTO2
*/*
HELP     EQU   *
         LA    R1,HELPMSG
         L     R0,HELPLEN
         BAL   BALREG,TPUT
         B     AFTRHELP
*/*
TPUT     EQU   *
         TPUT  (1),(0)
         BR    BALREG
*/*
TGET     EQU   *
         LA    R1,TGETBUFF            .POINT R1 TO INPUT BUFFER
         L     R0,EIGHTY              .R0 HAS1 INPUT BUFF LENGTH
         TGET  (1),(0)                .GET THE INPUT FROM TERMINAL
         LTR   INPUTLEN,R1
         BZ    BADINPUT
         ST    INPUTLEN,INLEN               .KEEP INPUT LENGTH
         LA    R4,TRTAB               .ADDRESS THE TRANS TABLE
         LA    R3,TGETBUFF            .ADDRESS THE INPUT BUFFER
         BCTR  R1,R0                  .REDUCE LENGTH BY 1 FOR EX
         EX    R1,TRANS               .TRANSLATE IT
         BR    BALREG
*/*
PASSTO2  EQU   *
         LA    R1,WHO2LIST            .PASS PARM LIST
         L     R15,=V(WHOHAS2)        .TO WHOHAS2
         BALR  R14,R15                .NOW
         B     SELECT                 .GO TO SELECT UPON RETURN
*/*
RETURN   L     R13,4(,R13)
         RETURN (14,12),,RC=00
*/*
MOVER    EQU   *
         LA    R4,TGETBUFF
         LA    R3,RNAME
         MVI   0(R3),X'40'
         MVC   1(43,R3),0(R3)
         L     R1,INLEN
         BCTR  R1,R0
         EX    R1,MOVE
         BR    BALREG
*/*
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*++          PROGRAM STORAGE / ETC.        COUNTRY                ++*
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*/*
TRANS    TR    0(*-*,R3),0(R4)
MOVE     MVC   0(*-*,R3),0(R4)
*/*
*/*
TGETBUFF DS    CL80
EIGHTY   DC    F'80'
*/*
WHO2LIST DS    0F
FUNCTION DS    CL3                 .GRSCAN FUNCTION
         DS    CL1                 ....KEEP WORD BOUNDRY
INLEN    DS    F                   .TGET LENGTH
RNAME    DS    CL44                .TGET DATA
*/*
FIRSTMSG DS    0F
         DC    79C'#'
         DC    80C' '
         DC    CL80'               YOU ARE INQUIRING ABOUT?'
         DC    80C' '
         DC    CL80'               A DATASET: <ENTER>  DA'
         DC    CL80'                 CATALOG: <ENTER> CAT'
         DC    CL80'                 LOADLIB: <ENTER>  LL'
         DC    CL80'                 VOLUME : <ENTER> VOL'
         DC    CL80'                 VTOC   : <ENTER>  VT'
         DC    80C' '
         DC    CL80'                 HELP   : <ENTER> HELP'
         DC    CL80'                 TO QUIT: <ENTER>  END'
         DC    80C' '
         DC    79C'#'
FIRSTL   DC    A(*-FIRSTMSG)
*/*
HELPMSG  DS    0F
         DC    CL80'       ALL I KNOW ABOUT <WHOHAS> IS THIS:'
         DC    CL80' '
         DC    CL80' DA  - PROVIDE ENQ INFO ON ORDINARY DATASETS'
         DC    CL80' CAT -   "      "   "   ON USERCATALOGS'
         DC    CL80' LL  -   "      "   "   ON SYSLMOD DSN DURING LINK'
         DC    CL80' VOL -   "      "   "   ON VOLUME  RESERVES'
         DC    CL80' VT  -   "      "   "   ON VTOC FOR THIS VOLUME'
         DC    CL80' '
         DC    CL80' END - EXIT WHOHAS'
HELPLEN  DC    A(*-HELPMSG)
*/*
TRTAB    DC    256C' '
         ORG   TRTAB+X'4B'
         DC    C'.'
         ORG   TRTAB+X'81'
         DC    C'ABCDEFGHI'
         ORG   TRTAB+X'91'
         DC    C'JKLMNOPQR'
         ORG   TRTAB+X'A2'
         DC    C'STUVWXYZ'
         ORG   TRTAB+X'C1'
         DC    C'ABCDEFGHI'
         ORG   TRTAB+X'D1'
         DC    C'JKLMNOPQR'
         ORG   TRTAB+X'E2'
         DC    C'STUVWXYZ'
         ORG   TRTAB+X'F0'
         DC    C'0123456789'
         ORG   ,
*/*
DAMSG    DC    CL80'<ENTER> DATASET NAME - NO QUOTES'
CATMSG   DC    CL80'<ENTER> CATALOG NAME - NO QUOTES'
LLMSG    DC    CL80'<ENTER> LOADLIB NAME - NO QUOTES'
VMSG     DC    CL80'<ENTER> VOLSER - NO QUOTES'
INPUTBAD DC    CL80'UNIDENTIFIED FUNCTION REQUEST, TRY AGAIN'
*/*
         LTORG
*/*
         END
