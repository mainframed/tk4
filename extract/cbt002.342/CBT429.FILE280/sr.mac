.cm SCRIPT REFERENCE SR
.SUBT Purpose
The SET REFERENCE control word allows the user to assign a character
or numeric value to a symbolic
reference name.
.SUBT Format
×                       delimited string
×  .SR          name<=> undelimited string
×                       numeric-expression
.SUBT Usage
The reference name named by the first operand is given the value of
the second operand.  If the reference name does
not exist, it will be created.  The first operand may optionally
be followed by an equal sign "=".
.sp
The .SR control word may be used for a variety of purposes.  For
example:
.sp
.in +2
.of 4
(1) Symbols may be defined as having as their value the number of the
page on which they appear
and can be used to construct a table of contents.
.of 4
(2) Symbols can be assigned to count the number of equations being
used and to number the equations as they
appear on the output.
.sp
.in -2
When the UPPER parm is in effect a reference name may be any
character string of ten or fewer characters where each
character is greater than or equal to lower 'a' (all upper and lower
alphabetics and numerics) or the national characters
('$', '@', '#') or an underscore ('_').
The name is converted to uppercase prior to use.
.sp
When the NOUPPER parm is in effect
a reference name may be any character string of length
ten or fewer which does not contain
a blank or any special characters.
The list of special characters terminating reference
names includes the characters:
.cp 5
         .  period                 =  equal sign
         +  plus sign              -  minus sign
         *  asterisk               /  slash
         (  left parenthesis       )  right parenthesis
         '  quote mark             &  ampersand
.cp 5
.sp
The reference name may optionally be subscripted with an integer,
signed or unsigned.  A subscript may range from -32767 to +32767.
A zero subscript is logically the same as having no subscript.  The
subscript value may be implied by specifying a null subscript in
the form "()".  Thus:
.sp
     .sr symbol()=...
.sp
is a short form of
.sp
     .se symbol=&symbol+1
     .se symbol(&symbol)=...
.sp
or equivalently
.sp
     .ur .sr symbol=&symbol+1
     .ur .sr symbol(&symbol)=...
.sp
If a character string is the assigned value, it must consist
of no more characters than the maximum allowed by the
SRLENGTH= parameter, normally one hundred and fifty,
or the string will be truncated on the right.
A character argument may be a delimited string or an
undelimited string.
In the first case, if the first character is a ' (quote),
" (double quote), / (slash), × (or bar), ! (exclamation mark),
^ (not sign),
or Ö (cent sign) then the character value assigned will
be from the character following  the delimiter up to the character
preceeding a matching delimiter that is followed by a blank.
Blanks are then valid within the operand and the delimiter
character can be entered into the operand if not followed
by a blank.
In the second case, an undelimited string is terminated
by the first blank or end of record.
The single quote and double quote are recommended as delimiters.
.sp
The syntax supported in numeric expressions is like that of
FORTRAN.  Decimal terms and binary, character and hexadecimal
self-defining terms in the ASSEMBLER sense are supported.
Parentheses and unary plus and minus operators are fully
supported.  Blanks between terms and operators are optional.
See Example (1) for sample expressions.
.cp 10
.sp
The following <escape>'s are recognized:
.sp
     (1) "%"   Current page number.
     (2) "&"   Current page number.
     (3) "P_S_"  Current page number, where
               P_S_ is the symbol defined by .PS.
.SUBT Defaults
This command word will not create a break when encountered.  If one
or both operands
are omitted it will be treated as an error.
.SUBT Notes
.of 4
(1) See the description of the .UR control word and the TWOPASS
option for further hints on the use of .SR.
.sp
.of 4
(2) See Appendices for a list of System Reference Names with
their formats and meanings.
.br;.cp 15
.SUBT Examples
.of 4
.tr ^ .
(1) The following demonstrate valid expressions:
.sp
.nf
^sr i=5
^sr i= +5
^sr i=((+5*3-1)*7)+1
^sr i = % + 1
^sr i = ((X'F05'+C'A')* B'1111')/16
^sr i(1+1) = (1+1)
.sp
.of 4
(2) The following demonstrate character assignments:
.sp
^sr c=abcdefg
^sr c = 'ABCDEFG'
^sr c = "don't be silly"
^sr alpha(1) = 'A'
^sr alpha(2) = B
.tr ^ ^
.fo
.of 4
.tr ^ .
.sp
.cp 15
(3) The sequence:
.sp
.nf
^sr equno=0
    .
    .
    .
^ur .sr equno=&equno + 1
^ur .sr xeqn &equno
^ur x = erfc(a - bc)                           (&equno)
^ur .sr equno = &equno +1
^ur y = erfc(a +bc)                            (&equno.)
    .
    .
    .
^ur Using the previous result for x (Equation &xeqn.)...
.tr ^ ^
.sp
.cp 5
 Produces:
.sp
x = erfc(a - bc)                            (1)
y = erfc(a + bc)                            (2)
Using the previous result for x (Equation 1)...
.sp
.cp 14
.of 4
(4) The sequence:
.sp
.tr ^ .
.nf
^sr a 0
^sr b -5
^sr c a
^sr d 'b'
^ur .ur .sr &c &&&d + 1
^ur a = &a..
^ur b = &b..
.tr ^ ^
.sp
Produces:
.sp
a = -4.
.br
b = -5.
.cm End of SR
