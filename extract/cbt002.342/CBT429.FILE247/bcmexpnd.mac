BCMEXPND TITLE 'BCMEXPND - RESTORE BRODCAST DATASET FROM A BCMDUMP'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS A BATCH PROGRAM TO RESTORE A      *
*                   COPY OF SYS1.BRODCAST FROM A BCMDUMP BACKUP.      *
*                   THE SPACE IN THE COPY CAN BE EXPANDED TO THE      *
*                   PRIMARY SPACE ALLOCATION OF THE "RESTORE"         *
*                   DATASET IN THE JCL.                               *
*                                                                     *
*          THIS PROGRAM TRIES TO RESTORE A COPY OF SYS1.BRODCAST      *
*          IN SUCH A WAY, SO IT WILL BE USABLE, IF RENAMED TO         *
*          SYS1.BRODCAST.  THEREFORE, THE PROGRAM ONLY ALLOWS ONE     *
*          EXTENT.  IF YOU ALLOCATE SECONDARY EXTENTS IN YOUR         *
*          CREATION JCL (AS ILLUSTRATED BELOW), THEY WILL BE          *
*          IGNORED.  THIS PROGRAM WILL EXPAND YOUR SYS1.BRODCAST      *
*          COPY TO THE END OF THE FIRST EXTENT THAT YOU HAVE          *
*          ALLOCATED.  ANY SPACE THAT'S EXTRA, IS FILLED IN WITH      *
*          BLANK USER MESSAGE RECORDS.  THIS WAY, YOU CAN EXPAND      *
*          AN EXISTING SYS1.BRODCAST, WITH ALL THE DATA IN IT,        *
*          BY RUNNING BCMDUMP TO GET THE DATA INTO A FLAT FILE,       *
*          AND RUNNING BCMEXPND AGAINST THE FLAT FILE, TO RELOAD      *
*          ALL THE DATA INTO A LARGER DATASET.  THEN IT CAN BE        *
*          RENAMED TO SYS1.BRODCAST, AND YOU CAN IPL, POINTING        *
*          TO IT.  THE "TOTAL NUMBER OF RECORDS" FIELD IN THE         *
*          SYS1.BRODCAST HEADER, IS ADJUSTED TO REFLECT THE NEW       *
*          NUMBER OF RECORDS IN THE DATASET.                          *
*                                                                     *
*                                                                     *
*       FUNCTION:   TO RESTORE A SYS1.BRODCAST DATASET OR A COPY      *
*                   IN THE SAME FORMAT, FROM A BCMDUMP FB-130 FILE,   *
*                   AND EXPAND IT INTO A LARGER SPACE, INCREASING     *
*                   THE NUMBER OF AVAILABLE MESSAGE RECORDS IT HAS.   *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.2            *
*                                                                     *
*            DATE:  MAY 16, 99                                        *
*                                                                     *
*                                                                     *
*       JCL TO INVOKE:                                                *
*                                                                     *
* //BCMEXPND EXEC PGM=BCMEXPND,REGION=3M                              *
* //STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.LOAD                            *
* //BRODCAST DD  DSN=SBGOLOB.BRODCAST.COPY,DISP=(NEW,CATLG,DELETE),   *
* //         DCB=(DSORG=DA,RECFM=FB,BLKSIZE=129,KEYLEN=1,LRECL=129),  *
* //         SPACE=(TRK,(120,30),RLSE),UNIT=SYSDA                     *
* //*                  ==== >  SECONDARY SPACE IS IGNORED.            *
* //BRODDUMP DD  DISP=SHR,DSN=SBGOLOB.BRODCAST.DUMP                   *
* //SYSPRINT DD  SYSOUT=*                                             *
*                                                                     *
*                                                                     *
*         CHANGES:                                                    *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
BCMEXPND CSECT
         USING BCMEXPND,R12,R10
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'BCMEXPND VER 1.2'
         DC    CL16' &SYSDATE &SYSTIME '
         DS    0H
BEGINN   STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD FIRST BASE REG
         LA    R10,4095(,R12)      INITIALIZE SECOND BASE      SG 05/99
         LA    R10,1(,R10)         FINISH LOADING SECOND BASE  SG 05/99
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         SPACE 1
DOBROD   OPEN  (BRODCAST,(OUTPUT))                             SG 05/99
         OPEN  (BRODDUMP,(INPUT))                              SG 05/99
         OPEN  (SYSPRINT,(OUTPUT))                             SG 05/99
         BAL   R9,HEADREAD         READ HEADER RECORD OF BCMDUMP FILE
*                                  AND EXTRACT ESSENTIAL DATASET INFO
*                                  FOR THE RESTORE.................
         L     R11,HIGHVAL         SAVE TOTAL RECORD COUNT     SG 05/99
         CVD   R11,CVDWORK         CONVERT TO DECIMAL          SG 05/99
         MVC   STORNUM1,CVDWORK    STORE AWAY FOR REPORTING    SG 05/99
         BCTR  R11,0               LOWER BY HEADREAD WRITE     SG 05/99
         BAL   R9,OUTHEADR         WRITE SYSPRINT HEADER       SG 05/99
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO LOAD ALL THE BRODCAST RECORDS.             --- *
* ------------------------------------------------------------------ *
LOADBRD  DS    0H                  READ THROUGH USERID RECORDS
         GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP
LOADBRDX L     R7,RECONTRK         INCREMENT                   SG 05/99
         LA    R7,1(,R7)            THE                        SG 05/99
         ST    R7,RECONTRK           COUNT                     SG 05/99
         L     R7,NUMBREC          INCREMENT                   SG 05/99
         LA    R7,1(,R7)            THE                        SG 05/99
         ST    R7,NUMBREC            COUNT                     SG 05/99
*  DELETED USER MESSHAGE RECORDS X'FF' IN THE KEY FIELD, HAVE  SG 05/99
*  TO HAVE THE "R" PART OF THE RECORD'S TTR OR CCHHR INSERTED  SG 05/99
*  INTO THE FIRST DATA BYTE OF THE RECORD.  IF THIS IS NOT     SG 05/99
*  DONE, THE TSO SEND COMMAND GOES HAYWIRE.  FOR THIS REASON,  SG 05/99
*  WHEN COPYING SYS1.BRODCAST BETWEEN TWO DIFFERENT DEVICE     SG 05/99
*  TYPES, THIS VALUE HAS TO BE FILLED IN FOR THE CURRENT       SG 05/99
*  DEVICE TYPE, OTHERWISE IT WILL GO OUT OF SYNCHRONIZATION.   SG 05/99
         CLI   INREC,X'FF'         IS THIS A DELETED RECORD?   SG 05/99
         BNE   GOWRITE             NO, DON'T HAVE TO PUT REC # SG 05/99
         MVC   INREC+1(1),RECONTRK+3   MOVE IN RECORD NUMBER   SG 05/99
GOWRITE  DS    0H                                              SG 05/99
         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E              SG 05/99
         C     R15,=F'8'           CHECK IF END OF EXTENT      SG 05/99
         BNE   GOSKIP1             NO. TRY IF END OF TRACK     SG 05/99
         CLI   EOJFLAG,X'F0'       ARE WE EXTENDING?           SG 05/99
         BE    GOEOJ1              YES. INDICATE EXTENDING.    SG 05/99
         MVI   EOJFLAG,X'FF'       OTHERWISE, PRELIMINARY END  SG 05/99
GOEOJ1   B     EOJ                 FINISH PREMATURELY          SG 05/99
GOSKIP1  C     R15,=F'4'           CHECK IF END OF TRACK       SG 05/99
         BNE   GOCHECK             NO. STILL IN MID OF TRACK   SG 05/99
         CVD   R7,CVDWORK          CONVERT LAST TRACK NUMBER   SG 05/99
         CP    STORNUM2,=P'0'      NONZERO NUMBER?             SG 05/99
         BNE   GOSKIP2             YES. ONLY DO IT ONCE        SG 05/99
         MVC   STORNUM2,CVDWORK    STORE IT AWAY               SG 05/99
GOSKIP2  XR    R7,R7               ZERO REGISTER               SG 05/99
         ST    R7,RECONTRK         RE-INITIALIZE REC/TRK       SG 05/99
GOCHECK  DS    0H                                              SG 05/99
         CHECK MDLDECB                                         SG 05/99
         CLI   EOJFLAG,X'F0'       ARE WE EXTENDING?           SG 05/99
         BE    LOADEXT             YES, SKIP PREVIOUS COUNTING SG 05/99
         BCT   R11,LOADBRD         CYCLE THROUGH ALL RECORDS   SG 05/99
* ------------------------------------------------------------------ *
*    AFTER OLD RECORDS ARE LOADED, FILL SPACE TO END OF EXTENT.      *
* ------------------------------------------------------------------ *
LOADEXT  MVC   INREC(130),ZERMSGR  INSTEAD OF GET, MOVE IN     SG 05/99
*                               NULL MESSAGE RECORD AND GO ON  SG 05/99
*                               WITH PROCESSING UNTIL RC=8.    SG 05/99
         CLI   EOJFLAG,X'F0'       ARE WE EXTENDING?           SG 05/99
         BE    LOADBRDX            YES, SKIP PREVIOUS COUNTING SG 05/99
         MVI   EOJFLAG,X'F0'       SPECIAL FLAG, ON 1ST PASS   SG 05/99
         B     LOADBRDX            GO ON WITH LOADING AS USUAL SG 05/99
* ------------------------------------------------------------------ *
EOJ      DS    0H                  BYE.
         L     R7,NUMBREC          REPORT NUMBER OF RECORDS    SG 05/99
         CVD   R7,CVDWORK            WHICH WERE ACTUALLY       SG 05/99
         MVC   STORNUM3,CVDWORK        LOADED.                 SG 05/99
         BAL   R9,FINALRPT         PRINT THE FINAL REPORT      SG 05/99
         CLI   EOJFLAG,X'FF'       ABNORMAL END ?              SG 05/99
         BNE   EOJGO1              NO. PRINT THAT IT'S NORMAL  SG 05/99
         BAL   R9,EOJPREL          YES. PRINT DIAGNOSTICS,     SG 05/99
         B     EOJGO3              AND SKIP NORMAL.            SG 05/99
EOJGO1   DS    0H                  NORMAL END.                 SG 05/99
         CLI   EOJFLAG,X'F0'       DID WE EXTEND THE DATASET?  SG 05/99
         BNE   EOJGO2              NO. INDICATE NORMAL END.    SG 05/99
         BAL   R9,EOJEXTND         YES. PUT OUT EXTEND MSGS.   SG 05/99
         BAL   R9,HEADUPDT         UPDATE HEADER FOR RECD CNT  SG 05/99
         B     EOJGO3              AND SKIP NORMAL.            SG 05/99
EOJGO2   CLI   EOJFLAG,X'00'       DOUBLE CHECK IT'S NORMAL    SG 05/99
         BAL   R9,EOJNORM          PUT OUT MESSAGE FOR NORMAL  SG 05/99
EOJGO3   CLOSE (BRODCAST)
         CLOSE (BRODDUMP)
         CLOSE (SYSPRINT)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         CLI   EOJFLAG,X'FF'                                   SG 05/99
         BNE   EOJGO4                                          SG 05/99
         LA    R15,4                                           SG 05/99
EOJGO4   ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
EOJN     BR    R14
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
*
HEADREAD GET   BRODDUMP,INREC      GET THE FIRST RECORD OF DUMP
         L     R7,=F'1'            SHOW IT'S THE FIRST         SG 05/99
         ST    R7,RECONTRK           RECORD IN THE TRACK       SG 05/99
         SPACE
         LA    R3,INREC+1          INFO THAT SHOULD BE ON HEADER
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   HIGHVAL(4),R1RECNUM  SAVE NUMBER OF RECDS IN BRODCAST
         L     R7,NUMBREC          INCREMENT                   SG 05/99
         LA    R7,1(,R7)            THE                        SG 05/99
         ST    R7,NUMBREC            COUNT                     SG 05/99
         WRITE MDLDECB,SF,BRODCAST,INREC,'S',MF=E              SG 05/99
         CHECK MDLDECB                                         SG 05/99
         DROP  R3
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   PRINT INSTRUCTIONS AND OTHER INFORMATION AT THE BEGINNING     *
*   OF THE PROGRAM EXECUTION.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
OUTHEADR DS    0H                                              SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),NEWPAGE         PAGE EJECT CHARACTER SG 05/99
         MVC   OUTLINE+10(60),SYSMSG01     PRINT HEADER        SG 05/99
         PUT   SYSPRINT,OUTLINE            DO PRINT            SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE+10(49),SYSMSG02     PRINT UNDERLINES    SG 05/99
         PUT   SYSPRINT,OUTLINE            DO PRINT            SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),THRLINE          SKIP 3              SG 05/99
         PUT   SYSPRINT,OUTLINE            ACTUALLY SKIP 6     SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE+19(49),SYSMSG03     PUT OUT DOC         SG 05/99
         PUT   SYSPRINT,OUTLINE             INSTRUCTIONS.      SG 05/99
         MVC   OUTLINE+19(49),SYSMSG04     (A BUNCH OF LINES)  SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE+19(49),SYSMSG05                         SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE+19(49),SYSMSG06                         SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE+19(49),SYSMSG07                         SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE+19(49),SYSMSG08                         SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE+19(49),SYSMSG09                         SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE+19(49),SYSMSG10                         SG 05/99
         PUT   SYSPRINT,OUTLINE                                SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),THRLINE          SKIP 3 LINES,       SG 05/99
         PUT   SYSPRINT,OUTLINE            PREPARING FOR       SG 05/99
         BR    R9                          FINAL REPORT.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    NORMAL END OF JOB.  ALL RECORDS LOADED PROPERLY.             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EOJNORM  DS    0H                                              SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),TWOLINE          SKIP 2              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG15      PUT OUT NORMAL EOJ  SG 05/99
         PUT   SYSPRINT,OUTLINE            MESSAGE.            SG 05/99
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    ABNORMAL END.  PROBABLY NOT ENOUGH PRIMARY SPACE ALLOCATED   *
*    TO FIT IN ALL THE RECORDS FROM THE COPIED SYS1.BRODCAST,     *
*    INTO THE FIRST EXTENT.  THIS CODE REPORTS ON HOW MANY        *
*    RECORDS WERE ACTUALLY LOADED, AND ON EXACTLY HOW MANY        *
*    TRACKS HAVE TO BE ALLOCATED IN THE FIRST EXTENT, SO THE      *
*    COPY WILL BE ABLE TO FUNCTION AS A NEW SYS1.BRODCAST         *
*    DATASET.                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EOJPREL  DS    0H                     PUT OUT 'SPACE' MESSAGES SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),THRLINE          SKIP 3              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG16    MOVE MESSAGE TEXT     SG 05/99
         PUT   SYSPRINT,OUTLINE          PRINT OUT             SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE+9(49),SYSMSG17    MOVE MESSAGE TEXT     SG 05/99
         OI    STORNUM4+7,X'0F'          MOVE IN REQUIRED      SG 05/99
         UNPK  OUTLINE+40(8),STORNUM4      NUMBER OF TRACKS    SG 05/99
         BAL   R5,STRIPZ1                STRIP LEADING ZEROS   SG 05/99
         PUT   SYSPRINT,OUTLINE          PRINT OUT             SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE+9(49),SYSMSG18    MOVE MESSAGE TEXT     SG 05/99
         PUT   SYSPRINT,OUTLINE          PRINT OUT             SG 05/99
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EOJEXTND DS    0H                     PUT OUT 'SPACE' MESSAGES SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),THRLINE          SKIP 3              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG19    MOVE MESSAGE TEXT     SG 05/99
         PUT   SYSPRINT,OUTLINE          PRINT OUT             SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE+9(49),SYSMSG20    MOVE MESSAGE TEXT     SG 05/99
         OI    STORNUM4+7,X'0F'          MOVE IN REQUIRED      SG 05/99
         UNPK  OUTLINE+42(8),STORNUM4      NUMBER OF TRACKS    SG 05/99
         BAL   R5,STRIPZ2                STRIP LEADING ZEROS   SG 05/99
         OI    STORNUM3+7,X'0F'          MOVE IN REQUIRED      SG 05/99
         UNPK  OUTLINE+19(8),STORNUM6      NUMBER OF RECORDS   SG 05/99
         BAL   R5,STRIPZ3                STRIP LEADING ZEROS   SG 05/99
         PUT   SYSPRINT,OUTLINE          PRINT OUT             SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE+9(49),SYSMSG18    MOVE MESSAGE TEXT     SG 05/99
         PUT   SYSPRINT,OUTLINE          PRINT OUT             SG 05/99
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*    REPORT STATISTICS ON NUMBER OF RECORDS EXPECTED, NUMBER OF   *
*    RECORDS ACTUALLY LOADED, NUMBER OF RECORDS PER TRACK, THAT   *
*    WERE DETERMINED FOR THIS DEVICE TYPE, AND ACTUAL NUMBER OF   *
*    TRACKS ON THIS DEVICE WHICH WERE NEEDED TO ACCOMMODATE ALL   *
*    THE RECORDS FROM THE COPIED SYS1.BRODCAST DATASET.           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FINALRPT DS    0H                                              SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),THRLINE          SKIP 3              SG 05/99
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE        SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),TWOLINE          SKIP 2              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG11      NUMBER OF RECORDS   SG 05/99
         OI    STORNUM1+7,X'0F'              EXPECTED          SG 05/99
         UNPK  OUTLINE+62(8),STORNUM1                          SG 05/99
         BAL   R5,STRIPZ                   REMOVE LEADING ZROS SG 05/99
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE        SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),TWOLINE          SKIP 2              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG12      NUMBER OF RECORDS   SG 05/99
         OI    STORNUM3+7,X'0F'              ACTUALLY LOADED   SG 05/99
         UNPK  OUTLINE+62(8),STORNUM3                          SG 05/99
         BAL   R5,STRIPZ                   STRIP LEADING ZEROS SG 05/99
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE        SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),TWOLINE          SKIP 2              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG13      NUMBER OF RECORDS   SG 05/99
         OI    STORNUM2+7,X'0F'              THAT FIT ONTO ONE SG 05/99
         UNPK  OUTLINE+62(8),STORNUM2          TRACK.          SG 05/99
         BAL   R5,STRIPZ                   STRIP LEADING ZEROS SG 05/99
         PUT   SYSPRINT,OUTLINE            PUT OUT LINE        SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),TWOLINE          SKIP 2              SG 05/99
         MVC   OUTLINE+9(49),SYSMSG14      NUMBER OF TRACKS    SG 05/99
         CLI   EOJFLAG,X'F0'                                   SG 05/99
         BE    FINGO1                                          SG 05/99
         MVC   STORNUM6(8),STORNUM1                            SG 05/99
         DP    STORNUM1+3(5),STORNUM2+5(3)   TO BE ALLOCATED   SG 05/99
         MVC   STORNUM4+3(5),STORNUM1                          SG 05/99
         MVC   STORNUM5+5(3),STORNUM1+5          RECORDS FIT   SG 05/99
         B     FINGO2                                          SG 05/99
FINGO1   MVC   STORNUM6(8),STORNUM3                            SG 05/99
         DP    STORNUM3+3(5),STORNUM2+5(3)   TO BE ALLOCATED   SG 05/99
         MVC   STORNUM4+3(5),STORNUM3          SO THAT ALL     SG 05/99
         MVC   STORNUM5+5(3),STORNUM3+5          RECORDS FIT   SG 05/99
FINGO2   CP    STORNUM5,=P'0'                      EXACTLY.    SG 05/99
         BE    FINOADD                     CALCULATE NUMBER.   SG 05/99
         AP    STORNUM4,=P'1'                                  SG 05/99
FINOADD  MVC   OUTLINE+9(49),SYSMSG14                          SG 05/99
         OI    STORNUM4+7,X'0F'                                SG 05/99
         UNPK  OUTLINE+62(8),STORNUM4      REPORT THE NUMBER.  SG 05/99
         BAL   R5,STRIPZ                   STRIP LEADING ZEROS SG 05/99
         PUT   SYSPRINT,OUTLINE            PUT OUT RECORD      SG 05/99
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*   ROUTINE TO STRIP LEADING ZEROS.  I'M DOING THIS TO AVOID A    *
*   POSSIBLE OCCASION FOR A S0C7, WHICH CAN HAPPEN WHEN YOU DO    *
*   AN ED INSTRUCTION THAT FAILS. UNPK DOESN'T HAVE THIS PROBLEM. *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
STRIPZ2  DS    0H                                              SG 05/99
         LA    R11,7                                           SG 05/99
         LA    R4,OUTLINE+42                                   SG 05/99
         B     STRIPZL                                         SG 05/99
STRIPZ3  DS    0H                                              SG 05/99
         LA    R11,7                                           SG 05/99
         LA    R4,OUTLINE+19                                   SG 05/99
         B     STRIPZL                                         SG 05/99
STRIPZ1  DS    0H                                              SG 05/99
         LA    R11,7                                           SG 05/99
         LA    R4,OUTLINE+40                                   SG 05/99
         B     STRIPZL                                         SG 05/99
STRIPZ   DS    0H                                              SG 05/99
         LA    R11,7                                           SG 05/99
         LA    R4,OUTLINE+62                                   SG 05/99
STRIPZL  CLC   0(1,R4),=C'0'                                   SG 05/99
         BNE   STRIPZE                                         SG 05/99
         MVI   0(R4),X'40'                                     SG 05/99
         LA    R4,1(,R4)                                       SG 05/99
         BCT   R11,STRIPZL                                     SG 05/99
STRIPZE  BR    R5                                              SG 05/99
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ AND UPDATE HEADER RECORD FOR NUMBER OF RECORDS      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEADUPDT DS    0H                                              SG 05/99
         OPEN  (BRODCASI,(UPDAT))
         READ  MDIDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCASI,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDIDECB
         L     R3,MDIDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         CVB   R7,STORNUM6         GET NUMBER OF RECORDS LOADED
         ST    R7,R1RECNUM         MOVE NEW NUMBER INTO HEADER RECORD
         DROP  R3
         WRITE MDIDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCASI,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDIDECB
         FREEDBUF MDIDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCASI            DCB FOR PROCESS DATA SET
         CLOSE (BRODCASI)                                      SG 05/99
         MVC   OUTLINE(133),OUTLINE-1      BLANK OUTPUT LINE   SG 05/99
         MVC   OUTLINE(1),TWOLINE          SKIP 2              SG 05/99
         MVC   OUTLINE+10(60),SYSMSG21     PRINT MESSAGE       SG 05/99
         PUT   SYSPRINT,OUTLINE            DO PRINT            SG 05/99
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   LEVEL(7),BLANKS
         MVI   OUTLINE-1,C' '        INITIALIZE BLANK
         MVC   OUTLINE(133),OUTLINE-1  BLANK SYSPRINT OUTPUT AREA
         MVC   HIGHVAL(4),ZERRECX    ZERO OUT HIGHVAL COUNT    SG 05/99
         MVC   NUMBREC(4),ZERRECX    ZERO OUT RECORD COUNTER   SG 05/99
         MVC   INREC-2(2),ZERRECX    INITIALIZE INPUT AREA    SG 05/99
         MVC   INREC(130),ZERRECX    INITIALIZE INPUT AREA    SG 05/99
         MVC   INHDR(130),ZERRECX    INITIALIZE HEADER AREA   SG 05/99
         MVI   RC15,X'00'            RETURN CODE AREA          SG 05/99
         MVI   EOJFLAG,X'00'                                   SG 05/99
         ZAP   STORNUM1,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM2,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM3,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM4,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM5,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM6,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM7,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         ZAP   STORNUM8,=P'0'        INITIALIZE PACKED FIELDS  SG 05/99
         MVC   RECONTRK(4),ZERRECX   COUNTER FOR RECORD NUMBER SG 05/99
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
ZERRECX  DS    0CL130                                          SG 05/99
         DC    130X'00'                                        SG 05/99
BLANKS   DC    C'        '         8 BLANKS
ZERMSGR  DS    0CL130                                          SG 05/99
ZERMKEY  DC    XL1'FF'                                         SG 05/99
ZERMREC  DC    XL129'00'                                       SG 05/99
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERREC   DS    0CL128
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
         DC    121X'00'
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'
MESTOTAL DC    C'USER         HAD           DEFERRED TSO MESSAGES'
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
NEWPAGE  DC    C'1'
NEXTLIN  DC    C' '
TWOLINE  DC    C'0'
THRLINE  DC    C'-'
NOLINE   DC    C'+'
SYSMSG01 DC    C'            SYS1.BRODCAST RESTORE PROGRAM  -  VERSION X
               1.2   '
SYSMSG02 DC    C'            ------------- ------- -------        '
SYSMSG03 DC    C'THIS PROGRAM CREATES A COPY OF THE SYS1.BRODCAST '
SYSMSG04 DC    C'DATASET, FROM A BCMDUMP FILE, WHICH WAS CREATED  '
SYSMSG05 DC    C'FROM SYS1.BRODCAST, OR ANOTHER COPY OF IT.  THE  '
SYSMSG06 DC    C'RESTORED DATASET SHOULD RESIDE IN ONE EXTENT.    '
SYSMSG07 DC    C'THIS PROGRAM CAN COPY SYS1.BRODCAST ACROSS DEVICE'
SYSMSG08 DC    C'TYPES OF DIFFERENT GEOMETRY, AND WILL REPORT ON  '
SYSMSG09 DC    C'HOW MANY TRACKS, EXACTLY, SHOULD BE USED FOR THE '
SYSMSG10 DC    C'ALLOCATION OF THE OUTPUT DATASET.                '
SYSMSG11 DC    C'EXPECTED NUMBER OF RECORDS IN COPY-FROM HEADER  :'
SYSMSG12 DC    C'NUMBER OF RECORDS ACTUALLY LOADED INTO THE COPY :'
SYSMSG13 DC    C'NUMBER OF RECORDS PER TRACK FOR THIS DEVICE TYPE:'
SYSMSG14 DC    C'EXPECTED NUMBER OF TRACKS TO BE ALLOCATED       :'
SYSMSG15 DC    C'  LOADING ACTION COMPLETED SUCCESSFULLY .        '
SYSMSG16 DC    C'LOADING INTERRUPTED UNEXPECTEDLY....             '
SYSMSG17 DC    C'PLEASE RERUN, AND ALLOCATE                TRACKS '
SYSMSG18 DC    C' IN A SINGLE EXTENT.                             '
SYSMSG19 DC    C'BRODCAST COPY EXPANDED SUCCESSFULLY.  IT NOW     '
SYSMSG20 DC    C'CONTAINS             RECORDS ON           TRACKS '
SYSMSG21 DC    C'  HEADER RECORD UPDATED SUCCESSFULLY.            '
MASK4    DC    XL4'40202120'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL10'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         DS    0F
QNAM     DC    CL8'SYSIKJBC'
RNAME    DC    X'000000'
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=PS,           SEQUENTIAL....                      X
               MACRF=(WL),         LOAD OF BDAM FILE                   X
               RECFM=F,            FIXED LENGTH                        X
               KEYLEN=1            SIZE OF KEY
BRODDUMP DCB   DSORG=PS,DDNAME=BRODDUMP,MACRF=GM,EODAD=EOJ,            X
               RECFM=FB,LRECL=130
BRODCASI DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130            KEYLEN + BLKSIZE
         SPACE 3
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA
         SPACE
         SPACE 3
         LTORG
         SPACE
         DS    0F
ENQUSER  ENQ   (QNAM,RNAME,E,,SYSTEM),MF=L
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
HIGHVAL  DS    F                   NUMBER OF RECORDS IN BRODCAST
NUMBREC  DS    F                   COUNT OF RECORDS LOADED
RECONTRK DS    F                   COUNT RECORDS ON THIS TRACK
RC15     DS    C                   STORE RETURN CODE FROM WRITE
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
OLDID    DC    C'        '         STORE OLD USERID HERE
LEVEL    DS    0CL7                LEVEL OF SYS1.BRODCAST
LEVELLIT DS    CL6                    LITERAL 'LEVEL'
LEVELLEV DS    CL1                       LEVEL NUMBER - CHAR FMT
RNAM     DC    X'000000'           FREE SEARCH RECORD RBA - STORED
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND
FNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
         DS    0F                  ALIGN ON FULLWORD
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
SAVEINF1 DS    CL8                 PLACE TO STORE CCHHR
LINEB    DS    C                   LINE-1
LINE     DS    CL137
LINET    EQU   LINE+7
INHDR    DS    CL130                                           SG 05/99
         DS    XL2                                             SG 05/99
INREC    DS    CL130                                           SG 05/99
         DS    0F
WRTWR    WRITE MDLDECB,SF,MF=L
WRTWREND DS    0F
WRTWRLEN EQU   *-WRTWR
RDWR     READ  MDIDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
EOJFLAG  DS    X
         DS    CL1                                             SG 05/99
OUTLINE  DS    CL133                                           SG 05/99
         DS    CL9                 FILLER                      SG 05/99
         DS    0D                                              SG 05/99
CVDWORK  DS    D                   YOU NEED DBLWORD ALIGNMENT  SG 05/99
STORNUM1 DS    PL8                   HERE, BECAUSE OF THE      SG 05/99
STORNUM2 DS    PL8                     CVB INSTRUCTION NEAR    SG 05/99
STORNUM3 DS    PL8                       LABEL HEADUPDT.       SG 05/99
STORNUM4 DS    PL8                                             SG 05/99
STORNUM5 DS    PL8                                             SG 05/99
STORNUM6 DS    PL8                                             SG 05/99
STORNUM7 DS    PL8                                             SG 05/99
STORNUM8 DS    PL8                                             SG 05/99
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IEZIOB   DSECT=YES
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         CVT  DSECT=YES
         END
