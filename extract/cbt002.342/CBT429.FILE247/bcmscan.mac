         TITLE 'ANALYZE SYS1.BRODCAST DATASET'
*------------------------------------------------------------------*
*
*          B C M S C A N   ( SCAN BROADCAST )   VERSION  2.0
*
*
*        COURTESY:  JIM MARSHALL, CAPT, USAF-RET
*                   U. S. TREASURY / FINANCIAL MANAGEMENT SERVICE
*                   3700 EAST-WEST HIGHWAY
*                   HYATTSVILLE, MD  20782
*                   202-874-8353      FAX: 202-874-8551
*
*        BASED ON THE "BRODSCAN" PROGRAM ORGINALLY WRITTEN BY
*        RICHARD G. NIKULA, 7/83, WASHINGTON STATE DEPARTMENT OF
*        TRANSPORTATION. THERE WERE MODIFICATIONS LATER ADDED TO
*        ANOTHER VERSION OF THE PROGRAM BY P. A. MOINTEL, AMDAHL
*        ITALY (WOW, SPEAK ABOUT "SHARE'NG").
*
*        THIS PROGRAM ANALYZES THE TSO BROADCAST DATASET.  IT
*        DISPLAYS THE NUMBER OF AVAILABLE BLOCKS AND HOW THEY
*        ARE USED.  IT ALSO DISPLAYS THE TSO USERS WHO HAVE
*        MESSAGES WAITING.  IN ADDITION IT ALSO DOES A VALIDITY
*        CHECK ON RECORDS WHICH ARE IN THE MESSAGE POOL TO ASSURE
*        THEY ARE CHAINED OFF OF A USER RECORD.  ACCORDING TO
*        DOCUMENTATION, INSTANCES OCCUR WHICH CAN RESULT IN THESE
*        GARBAGE RECORDS EXISTING.
*
*        SO WHY HAVE I CHOSE TO DO ANOTHER VERSION. GOT INTERESTED
*        IN THE BRODCAST BECAUSE OURS WAS ALWAYS FILLING UP AND WE
*        DID NOT KNOW WHY. SO RATHER THAN REINVENT THE WHEEL, I
*        WENT TO LATEST CBT TAPE AND HERE THESE WERE; AT THE SHOP
*        I AM A HERO!!!
*
*        NOW TO UNDERSTAND THE WHOLE PROCESS, I LOOKED AT THE CODE
*        AND THAT WAS A BIT TOUGH, NO DSECTS OR INSIGHTS INTO HOW
*        THE BRODCAST DATA SET IS BUILT AND MAINTAINED.  UNLESS YOU
*        HAVE A COMPLETE OS/MVT SYSTEM LIVING IN YOUR ATTIC, YOU
*        PROBABLY WOULD NOT HAVE THE LAST OS/MVT PLM VOLUME 3 WHICH
*        HAS THE FORMAT DEFINED.  SO AS A SUMMER PROJECT, I HAVE
*        DECIDED TO TRY TO DECIPHER THE CODE BELOW, ADD DSECTS, AND
*        DECIPHER THE CODE BELOW SO WE WILL ALL HAVE THE INSIGHTS
*        THESE GUYS HAD WHEN THEY DID THE GREAT WORK. WITHOUT
*        RICHARD'S WORK, I WOULD BE LOST. MOINTEL ADDED SOME NEAT
*        THINGS WHICH I WILL TRY TO FOLD INTO THIS PROGRAM. IF
*        ANYONE FINDS THINGS OUT, LET ME KNOW. THANKS.
*
*
*        SOME INFORMATION COMPLIMENTS OF:
*
*        "TSO COMMAND PROCESSOR PLM - VOL. 4 (RELEASE 20.1)
*
*        'SYS1.BRODCAST' CONTAINS 6 BASIC TYPES OF RECORDS, EACH
*        OF WHICH IS 130 CHARACTERS IN LENGTH. EACH RECORD BEGINS
*        WITH A UNIQUE ONE-BYTE KEY FIELD WHICH IDENTIFIES THE
*        RECORD TYPE.  RECORD 1 AND THE 'NOTICES' DIRECTORY AND
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
*        RECORD TYPE.  RECORD 1 AND THE 'NOTICES' DIRECTORY AND
*        'NOTICES' MESSAGE RECORDS ARE LOCATED IN THE FIXED PART
*        OF THE BRODCAST DATA SET AT THE BEGINNING. THE 'MAIL'
*        DIRECTORY AND MESSAGE RECORDS WILL APPEAR RANDOMLY
*        THROUGHOUT THE REMAINDER OF 'SYS1.BRODCAST'.
*        THE SIX RECORD TYPES AND THEIR KEYS ARE:
*
*        X'00'     BRODCAST 'NOTICES' DIRECTORY RECORD.
*
*        X'01'     USER 'MAIL' DIRECTORY RECORD.
*
*        X'02'     BROADCAST 'NOTICES' MESSAGE RECORD.
*
*        X'03'     USER 'MAIL' MESSAGE RECORD.
*
*        X'04'     FIRST RECORD OF 'SYS1.BRODCAST' DATA SET.
*
*        X'05'     RBA ADDRESS OF FIRST DUMMY RECORD AVAILABLE.  JDM1
*
*        X'FF'     DUMMY INACTIVE 'MAIL' MESSAGE RECORD.
*
*        THE 'BDAM' ACCESS METHOD READS THESE RECORDS WITHOUT
*        KEYS, SO THE KEY IDENTIFIER IS NOT READ IN WITH THE
*        REMAINING 129 CHARACTERS OF EACH RECORD.
*
*
*        JCL TO INVOKE:
*
*            //BRODCAST EXEC PGM=BCMSCAN,REGION=2M
*            //STEPLIB  DD  -- NONAUTHORIZED LIBRARY IF YOU CHOOSE --
*            //BRODMAP  DD  SYSOUT=A,DCB=BLKSIZE=133
*            //BRODSNAP DD  SYSOUT=A
*            //BRODCAST DD  DSN=SYS1.BRODCAST,DISP=SHR
*
*        NOTES:
*
*        1)  IF ANYONE KNOWS OF ANY CHANGES FROM OS/MVT TO MVS,
*        LIKE ADDITIONAL RECORD TYPES, ETC, LET ME KNOW.  HAVE
*        BEEN FINDING A LONE TYPE X'05' RECORD ON EVERY SYSTEM
*        I HAVE TRIED THIS ON; MAY BE SOME VALID NEW TYPE?
*
*        2)  I HAVE INCLUDED ALL THE DSECT'S I CAN CODE EVEN IF
*        THEY ARE NOT USED.  THE INTENT IS FOR SOME GENIUS TO GET
*        THE IDEA TO CODE SOME UTILITIES BASED UPON THE FORMAT,
*        TO SAY..... UNLOAD THE BROADCAST SO IT CAN BE MOVED AND
*        RELOADED.  MAYBE YOU CAN THINK OF OTHER USES.
*
*        3)  I HAVE YET TO TRACK THE BROADCAST NOTICES PART OF
*        THE FILE.  SOME TIME IN THE NEAR FUTURE WHEN I DO THAT
*        I WILL DOCUMENT THE CHAINING IN A PICTORIAL.  UNTIL THEN,
*        IF SOMEONE DOES IT, LET ME KNOW.
*
* INSTALLED:  30 MAR 95
*
* CHANGE LOG:
*         HD DEC97 - 02 MAY 99,  FROM HOWARD DEAN, KAISER PERMANENTE.
*         SG MAY99               UPDATES FITTED BY SAM GOLOB, TO
*                                GETMAIN THE KEY STATISTICS TABLE
*                                INSTEAD OF MAKING A FIXED LENGTH
*                                SPACE, ASSEMBLED INTO THE PROGRAM.
*                                THIS IS SO BCMSCAN CAN HANDLE
*                                LARGE SYS1.BRODCAST DATASETS.
*             SBG0 - 29 APR 99,  ENLARGED TABLE FOR BIG SYS1.BRODCAST
*                                NOW 30000 BYTES.  SHOULD BE
*                                DYNAMICALLY FIGURED OUT. NEEDS FIX.
*                                (FIXED BY HD DEC97 CODE.)
*             JDM0 - 10 MAY 95,  FIXED A COMPARE.
*             JDM1 - 20 MAY 95,  SAM GOLOB DISCOVERED THE TYPE "05"
*                    IS ACTUALLY A POINTER TO THE FIRST DUMMY
*                    RECORD AVAILABLE FOR USE.
*
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
*        BELOW IS A PICTORIAL VIEW OF THE BROADCAST WHICH SHOULD
*        HELP ONE TO BE ABLE TO NAVIGATE IT SUCCESSFULLY.
*
*            S Y S 1 . B R O D C A S T
*  ===============================================================
*  =                                                             =
*  =   *--*--------*---------*----------------------------*---*  =
*  =   *04*        * R1USPTR *  'SYS1.BRODCAST DATA SET'  *   *  =
*  =   *--*--------*-----+---*----------------------------*---*  =
*  =                     +                                       =
*  =    ++++++++++++++++++                                       =
*  =    +     1ST USER MAIL DIRECTORY RECORD  (EACH USERID       =
*  =    +       ENTRY CONSISTS OF A 13 BYTE AREA; THE USERID,    =
*  =    +       NEXT RBA POINTER AND ENDING RBA POINTER.         =
*  =    +                                                        =
*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =
*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* RBA *      =
*  =   *--*-------*---*----* /// *------*---*----*--*--+--*      =
*  =                                                   +         =
*  =    +++++++++++++++++++++++++++++++ //// +++++++++++         =
*  =    +                                                        =
*  =    +    LAST USER MAIL DIRECTORY RECORD                     =
*  =    +                                                        =
*  =    +    NOTE: '000' ENDS THE CHAIN OF X'01' RECORDS.        =
*  =   *--*-------*---*----* /// *------*---*----*--*-----*      =
*  =   *01* USERID*RBA*ERBA* /// *USERID*RBA*ERBA*7F* 000 *      =
*  =   *--*-------*---*----* /// *------*-+-*-+--*--*--+--*      =
*  =                                      +   +                  =
*  =    +++++++++++++++++++++++++++++++++++   +++++++++++++++++  =
*  =    +                                                     +  =
*  =    +     1ST MESSAGE RECORD FOR USER                     +  =
*  =   *--*-----------------------------------------*-----*   +  =
*  =   *03*                                         * RBA *   +  =
*  =   *--*-----------------------------------------*--+--*   +  =
*  =                                                   +      +  =
*  =    ++++++++++++++++++++++++++ //// ++++++++++++++++      +  =
*  =    +                                                     +  =
*  =    +++++++++++++++++++++++++++++++++++++++++++++++++++++++  =
*  =    ++    LAST MESSAGE RECORD FOR USER                       =
*  =    ++   NOTE: '000' ENDS THE CHAIN OF X'03' RECORDS.        =
*  =   *--*-----------------------------------------*-----*      =
*  =   *03*                                         * 000 *      =
*  =   *--*-----------------------------------------*-----*      =
*  =                                                             =
*  =             FREE  SPACE                                     =
*  =   *--*-----------------------------------------------*      =
*  =   *FF*                                               *      =
*  =   *--*-----------------------------------------------*      =
*  =                                                             =
*  ===============================================================
*------------------------------------------------------------------*
         EJECT
*------------------------------------------------------------------*
*
*        JUST A FEW WORDS TO PONDER.
*
*        1.  WHEN A USER HAS MESSAGES AWAITING FOR THEM WHEN THEY
*            LOGON ONTO THE SYSTEM, ALL THE X'01' RECORDS ARE
*            CHAINED.  THE SYSTEM WILL READ EVERY RECORD IN ORDER
*            LOOKING FOR THE PARTICULAR USERID.  WHEN A MATCH IS
*            FOUND THE RBA IF FOUND NOT X'000' INDICATES A MESSAGE
*            TO BE RECEIVED.  ONCE RECEIVED, THE RBA IS SET TO 000
*            AND THE MESSAGE AREA IS GIVEN A X'FF'.
*
*        2.  WHEN A USERID IS DELETED, THE ENTRY IN THE TYPE X'01'
*            IS TURNED TO ALL ZEROS AND ALL OF THE MESSAGES AWAITING
*            ARE DELETED.
*
*        3.  THE USERID OF THE SENDER OF A MESSAGE TO ANOTHER USER
*            IS OBTAINED FROM THE 'PCBUSER' IN THE 'PSCB'.  IF
*            YOU THINK ABOUT IT, IF THERE WAS SOME WAY (MUST BE
*            AUTHORIZED THOUGH) TO CHANGE YOUR PCBUSER FIELD
*            PRIOR TO ISSUING THE 'SEND' COMMAND, IT WOULD REALLY
*            CONFUSE PEOPLE;  VVVERRRRY  INTERESTING.
*
*        4.  THE COROLLARY TO THE ABOVE MIGHT SAY THAT IF YOU COULD
*            TEMPORARILY CHANGE YOUR 'PCBUSER' FIELD TO SOME USERID
*            WHICH HAS "MANY MESSAGES AWAITING", THEN ISSUE THE
*            'LISTBC' TSO COMMAND THEN MAYBE YOU COULD CLEAN OUT
*            ALL THE OLD MESSAGES.  INSTEAD OF DOING WHAT I HAVE TO
*            TO PERIODICALLY IS TO "RESYNC" THE BROADCAST (BRUTAL
*            BUT EFFECTIVE).
*------------------------------------------------------------------*
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL84 -         RESERVED
         MEND
         MACRO
         IKJZT302  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT302      RELEASE=OS/VS2.2   LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        NOTICES DIRECTORY RECORD                     *
*                                                                     *
*        THE BROADCAST NOTICES DIRECTORY RECORD (BCDIR) HAS BROADCAST *
*        MESSAGE NUMBERS AND A POINTER TO THE MESSAGE RECORD          *
*        ASSOCIATED WITH EACH MSG. NUMBER.                            *
*                                                                     *
*        NOTE: THIS MACRO USES EQUATES GENERATED BY 'IEZBITS' MACRO.  *
*              THEREFORE, THE IEZBITS MACRO MUST BE CODED             *
*              PREVIOUS TO CALLING THIS MACRO.                        *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCDIR    DSECT , -
         AGO   .SKIP
.NODSECT ANOP
BCDIR    DS    0F
.SKIP    ANOP
BCDNENT  EQU   25             NUMBER OF ENTRIES
BCDENTRY DS    0CL5 -         ENTRY FOR 1 BROADCAST MSG NO.
BCDMFLG  DS    0BL1 -         BROADCAST DIRECTORY MSG. FLAG:
BCDNOMSG EQU   BIT0
*                               '1' = NO NOTICES MSG ASSIGNED
*                                     TO THIS MSG NUMBER
*                               '0' = NOTICES MSG FOR THIS NUMBER
*                                     IS ASSIGNED
BCDMSGNO DS    FL2 -          BROADCAST NOTICES MSG NO. IN HEX
BCDMRBA  DS    AL3 -          RELATIVE BLOCK ADDR OF NOTICE MSG RCD
         DS    24CL5 -        RESERVE SPACE FOR 24 MORE ENTRIES
*                               IDENTICAL IN FORMAT TO 'BCDENTRY'
BCDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
BCDNEXT  DS    AL3 -          CHAIN PTR TO NEXT NOTICE DIRECTORY RCD
*                               (ZERO IF LAST)
         MEND
         MACRO
         IKJZT303   &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT303      RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                         NOTICES MESSAGE RECORD                      *
*                                                                     *
*          THE BRODCAST NOTICES MESSAGE RECORD (BCMSG) IS A           *
*          RECORD IN THE SYS1.BRODCAST DATA SET WHICH CONTAINS A      *
*          NOTICES MESSAGE INTENDED FOR ALL USERS.                    *
*                                           10/1/72     LEVEL=1       *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
BCMSG    DSECT , -            BRODCAST NOTICES MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
BCMSG    DS    0F -           BRODCAST NOTICES MESSAGE RECORD
.SKIP    ANOP
BCMLNG   DS    FL1 -          LENGTH OF BRODCAST NOTICES MSG TEXT
BCMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
         DS    XL3 -          RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         SPACE
R0       EQU   0                  USED BY O.S.
R1       EQU   1                  ADDR OF PARM LIST
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                   PTR TO OUTPUT LINE FOR PUT
R10      EQU   10                  BAL REGISTER
R11      EQU   11
R12      EQU   12                  BASE REGISTER
R13      EQU   13                  SAVE-AREA ADDRESS
R14      EQU   14                  ULTIMATE RETURN ADDRESS
R15      EQU   15                  ENTRY-PT ADDR, WORK REG, RET CODE
         SPACE
BCMSCAN  AMODE 24
BCMSCAN  RMODE 24
BCMSCAN  CSECT
         SAVE  (14,12),,BCMSCAN_&SYSDATE._&SYSTIME
         LR    R12,R15             LOAD ENTRY ADDRESS
         USING BCMSCAN,R12         ESTABLISH ADDRESSABILITY
         LR    R15,R13             SAVE HIS SAVE ADDRESS
         LA    R13,SAVE            GET OUR SAVEAREA ADDRESS
         ST    R15,SAVE+4          SAVE OFF INTO LOW SAVE
         ST    R13,8(,R15)         CHAIN MINE BACK
         XR    R9,R9               FOR POSSIBLE DEBUG PURPOSES
         XR    R10,R10             FOR POSSIBLE DEBUG PURPOSES
         SPACE
         OPEN  (BRODCAST,(INPUT),BRODMAP,(OUTPUT),SNAP,(OUTPUT))
         SPACE
*--------------------------------------------------------------------*
*        GET THE HEADER RECORD.  THIS IS A SPECIAL RECORD 1.
*--------------------------------------------------------------------*
         SPACE
         READ  HDRECB,             ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK HDRECB
         L     R3,HDRECB+12
         USING R1BC,R3             ADDRESSABILITY TO RECORD 1 MAPPING
         SPACE
         AP    REC04,=P'1'         ADD 1 TO TOTAL                JDM0
         MVC   SAVERBA(3),R1USPTR  SAVE RBA 1ST USER'S MAIL DIR REC
         MVC   HIGHVAL(4),R1RECNUM SAVE GET OUT VALUE
         MVC   SAVHDADR(4),R1RECNUM SAVE GET OUT VALUE         SG MAY99
         L     R5,HIGHVAL          GET NUMBER FOR PRINTOUT
         CVD   R5,CVDAREA          CONVERT IT TO PRINTABLE
         MVC   MAXCNT,MASK7        MOVE IN THE MASK
         ED    MAXCNT,CVDAREA+5    MAKE IT PRETTY
         LA    R9,MAXIMUM          POINT TO LINE TO PRINT
         BAL   R10,PRINT           TELL HOW MANY
         SPACE
         LH    R5,R1BCMAX          GET NUMBER OF NOTICES
         XR    R4,R4               CLEAR R4
         D     R4,=F'25'           NUMBER OF BLOCKS REQUIRED
         AH    R5,R1BCMAX          PLUS TOTAL FOR MESSAGES
         DROP  R3
         LTR   R4,R4               REMAINDER?
         BZ    CVDNOT
         LA    R5,1(,R5)           ONE MORE REQUIRED
CVDNOT   EQU   *
         CVD   R5,CVDAREA          CONVERT IT TO PRINTABLE
         MVC   NOTCNT,MASK4
         ED    NOTCNT,CVDAREA+6    MAKE IT PRETTY
         LA    R9,NOTICES          POINT TO LINE TO PRINT
         BAL   R10,PRINT           TELL HOW MANY
         L     R9,HDRECB+20        POINT TO KEY
         BAL   R10,SNAPUNK
         L     R9,HDRECB+12        POINT TO AREA
         BAL   R10,SNAPUNK
         SPACE
         FREEDBUF HDRECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         L     R0,SAVHDADR              GET MAXIMUM RECORDS    SG MAY99
         A     R0,=F'1'                 ONE FOR GOOD LUCK      HD DEC97
TYPEGET  GETMAIN RU,LV=(0),LOC=BELOW    GET STORAGE FOR TABLE  HD DEC97
         ST    R1,TYPETBLA              SAVE ADDRESS           HD DEC97
         LR    R0,R1                    SAVE ADDRESS           HD DEC97
         L     R1,SAVHDADR              GET LENGTH             SG MAY99
         LM    R14,R15,=D'0'            CLEAR FOR ICM          HD DEC97
         ICM   R15,B'1000',=X'99'       PAD WITH X'99'         HD DEC97
         MVCL  R0,R14                   CLEAR AREA             HD DEC97
         L     R7,TYPETBLA                                     HD DEC97
         MVI   1(R7),X'04'                                     HD DEC97
         SPACE
*--------------------------------------------------------------------*
*        THIS IS NOW OUR READ LOOP AS WE DO A SUCESSIVE READ
*        INCREMENTING THE RBA NUMBER UNTIL WE REACH THE BCNUMREC
*        VALUE SAVED IN 'HIGHVAL'.  ONCE WE HAVE READ ALL THE
*        RECORDS WE WILL GO AND ANALYZE THEM.
*--------------------------------------------------------------------*
         SPACE
READLOOP EQU   *
         ICM   R1,7,BLOCKNO        GET PROCESSED RBA
         LA    R1,1(R1)            INCREMENT BY ONE
         STCM  R1,7,BLOCKNO        STORE IT BACK FOR READ
         CLC   BLOCKNO(3),HIGHVAL+1  DID WE REACH MAX?           JDM0
         BE    ANALYZE             IF SO, GO ANALYZE THEM ALL
         SPACE
         READ  RECECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK RECECB
         SPACE
         L     R2,RECECB+20        GET KEY ADDRESS
         MVC   0(1,R7),0(R2)       STORE TYPE INTO TABLE
         LA    R7,1(R7)            INCREMENT IN OUR TABLE.
         SPACE
*--------------------------------------------------------------------*
*        COUNT THE DIFFERENT RECORD TYPES FOR LATER REPORTING.
*--------------------------------------------------------------------*
         SPACE
         CLI   0(R2),X'00'         IS THIS NOTICE DIRECTORY RECORD?
         BNE   CHK1                NO.
         AP    NOTDIR,=P'1'        ADD 1 TO TOTAL
         B     FREEB
         SPACE
CHK1     EQU   *
         CLI   0(R2),X'01'         IS THIS USERID DIRECTORY RECORD?
         BNE   CHK2                NO.
         AP    USRIND,=P'1'        ADD 1 TO TOTAL
         B     FREEB
         SPACE
CHK2     EQU   *
         CLI   0(R2),X'02'         IS THIS NOTICES MSG RECORD?
         BNE   CHK3                NO.
         AP    NOTMSG,=P'1'        ADD 1 TO TOTAL
         B     FREEB
         SPACE
CHK3     EQU   *
         CLI   0(R2),X'03'         IS THIS USER MSG RECORD?
         BNE   CHK4                NO.
         AP    USRMSG,=P'1'        ADD 1 TO TOTAL
         B     FREEB
         SPACE
CHK4     EQU   *                                                 JDM1
         CLI   0(R2),X'05'         IS THIS POINTER RECORD?       JDM1
         BNE   CHKFF               NO.                           JDM1
         AP    PTRMSG,=P'1'        ADD 1 TO TOTAL                JDM1
         B     FREEB                                             JDM1
         SPACE 1                                                 JDM1
CHKFF    EQU   *
         CLI   0(R2),X'FF'         DUMMY INACTIVE MAIL MSG RECORD?
         BNE   UNKNOWN             NO.
         AP    FREEREC,=P'1'       ADD 1 TO TOTAL
         B     FREEB
         SPACE
UNKNOWN  EQU   *
         UNPK  ODDKEY+36(3),0(2,R2)
         TR    ODDKEY+36(2),HEXTAB-X'F0'
         MVI   ODDKEY+38,C' '
         LA    R9,ODDKEY           POINT TO LINE TO PRINT
         BAL   R10,PRINT
         L     R9,RECECB+20        GET KEY ADDRESS
         BAL   R10,SNAPUNK         GO SNAP THIS UNKNOWN RECORD.
         SPACE
FREEB    DS    0H
         FREEDBUF RECECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         B     READLOOP
         SPACE
*--------------------------------------------------------------------*
*        NOW, START TO ANALYZE ALL AND PRINT RESULTS TO THE REPORT.
*--------------------------------------------------------------------*
         SPACE
ANALYZE  EQU   *
         LA    R9,BREAKOUT         POINT TO LINE TO PRINT
         BAL   R10,PRINT           PUT OUT THE SECTION HEADER
         SPACE
         MVC   KEYTYPE,TYPE04      MOVE IN DESCRIPTION           JDM0
         MVC   KEYCNT,MASK7                                      JDM0
         ED    KEYCNT,REC04                                      JDM0
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM0
         BAL   R10,PRINT                                         JDM0
         SPACE 1                                                 JDM0
         MVC   KEYTYPE,TYPE00      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK7
         ED    KEYCNT,NOTDIR
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE02      MOVE IN DESCRITPION
         MVC   KEYCNT,MASK7
         ED    KEYCNT,NOTMSG
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE01      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK7
         ED    KEYCNT,USRIND
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE03      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK7
         ED    KEYCNT,USRMSG
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         MVC   KEYTYPE,TYPE05      MOVE IN DESCRIPTION           JDM1
         MVC   KEYCNT,MASK7                                      JDM1
         ED    KEYCNT,PTRMSG                                     JDM1
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT        JDM1
         BAL   R10,PRINT                                         JDM1
         SPACE 1                                                 JDM1
         MVC   KEYTYPE,TYPEFF      MOVE IN DESCRIPTION
         MVC   KEYCNT,MASK7
         ED    KEYCNT,FREEREC
         LA    R9,KEYCOUNT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
         LA    R9,USERSOUT         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
*--------------------------------------------------------------------*
*        IN MVS, THERE IS A CHANGE FROM HAVING 12 USERID PER BLOCK
*        TO 9 PER BLOCK.
*--------------------------------------------------------------------*
         SPACE
INDEXLP  EQU   *
         LA    R6,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA
         SPACE
         READ  SCNECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO             RBA TO HOLD THE KEY
         SPACE
         CHECK SCNECB
         SPACE
         L     R3,SCNECB+12        ADDRESS OF RECORD
         USING USDIR,R3
         MVC   SAVERBA,USDNEXT     COPY NEXT INDEX RECORD NUMBER
         SPACE
*--------------------------------------------------------------------*
*        YOU WILL GO THROUGH THIS LOOP 9 TIMES, BECAUSE 9 ENTRIES
*        ARE HELD IN EVERY RECORD.
*--------------------------------------------------------------------*
         SPACE
USRLOOP  EQU   *
         MVC   USERID(7),USDID     COPY WHO THIS IS
         CLC   USERID(7),ZEROS     IS THIS A REAL USER?
         BE    NOMSG               NOPE, MUST HAVE BEEN DELETED
         AP    USERS,=P'1'
         XR    R4,R4               CLEAR UPPER BYTE
         ICM   R4,7,USDRBA         GET BLOCK POSITION
         DROP  R3
         BZ    NOMSG               NO.. JUST BUMP
ALTCODE  DS    0H                                              HD DEC97
         SLR   R5,R5                    CLEAR FOR ADD          HD DEC97
         L     R7,TYPETBLA              GET ADDRESS OF TYPETBL HD DEC97
         LA    R5,0(R7,R4)              POINT TO TABLE ENTRY   HD DEC97
         BCTR  R5,0                     ORIGIN ZERO            HD DEC97
         CLI   0(R5),X'03'         JUST VERIFY WERE WE ARE
         BE    TABLOK                   THIS IS A VALID ONE    HD DEC97
         LA    R9,TABLERR          POINT TO LINE TO PRINT
         BAL   R10,PRINT           JUST LET THEM KNOW I'M CONFUSED
         B     BUMPUSR
         SPACE
TABLOK   DS    0H
         MVI   0(R5),X'88'         SET THAT IT WAS A VALID MESSAGE
BUMPUSR  EQU   *
         AP    MSGCOUNT,=P'1'      INCREMENT HOW MANY MESSAGES
         STCM  R4,7,MSGNUM
         SPACE
         READ  MSGECB,             DECB TO USE IN MACRO EXPANSION      X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MSGNUM              RBA TO HOLD THE KEY
         SPACE
         CHECK MSGECB
         SPACE
         L     R4,MSGECB+12        ADDRESS OF RECORD
         USING USMSG,R4
         ICM   R4,7,USMNEXT        RRN OF NEXT MESSAGE
         DROP  R4
         SPACE
         FREEDBUF MSGECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
*--------------------------------------------------------------------*
*        TEST TO SEE IF THERE WILL BE ANOTHER RECORD AFTER THIS ONE
*        IN THE CHAIN.  IF 'USMPTR' IS INDEED ZERO, THEN WE ARE
*        FINISHED PROCESSING THIS CHAIN AND ARE READY TO DETERMINE
*        IF WE SHOULD BUILD ENTRY 1, 2, OR 3 SHOWING HOW MANY MSGS
*        A USER HAS OUTSTANDING.
*--------------------------------------------------------------------*
         SPACE
         LTR   R4,R4
         BNZ   ALTCODE
         AP    RECCNT,=P'1'
         CP    RECCNT,=P'2'        TEST MID RANGE
         BL    LINE1               LOWER
         BH    LINE3               HIGHER
         BE    LINE2               .MIDRANGE
LINE1    EQU   *
         MVC   MSGCNT1,MASK46
         MVC   USERID1,USERID
         ED    MSGCNT1+1,MSGCOUNT
         B     ZAPCNT
         SPACE
LINE2    EQU   *
         MVC   MSGCNT2,MASK46
         MVC   USERID2,USERID
         ED    MSGCNT2+1,MSGCOUNT
         B     ZAPCNT
         SPACE
LINE3    EQU   *
         MVC   MSGCNT3,MASK46
         MVC   USERID3,USERID
         ED    MSGCNT3+1,MSGCOUNT
         LA    R9,USERLINE
         BAL   R10,PRINT
         MVC   MSGCNT1,=CL6' '
         MVC   MSGCNT2,=CL6' '
         MVC   MSGCNT3,=CL6' '
         MVC   USERID2,=CL7' '
         MVC   USERID3,=CL7' '
         ZAP   RECCNT,=P'0'
ZAPCNT   EQU   *
         ZAP   MSGCOUNT,=P'0'
NOMSG    EQU   *
         LA    R3,13(R3)           BUMP TO NEXT ENTRY
         BCT   R6,USRLOOP          REPEAT FOR NINE TIMES
         SPACE
*--------------------------------------------------------------------*
*        END OF INNER LOOP
*--------------------------------------------------------------------*
         SPACE
         FREEDBUF SCNECB,          DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         SPACE
         CLC   SAVERBA,=3X'00'     IS THIS LAST
         BNE   INDEXLP             GO DO NEXT ONE
         CP    RECCNT,=P'0'
         BE    PUTUCNT
         LA    R9,USERLINE         POINT TO LINE TO PRINT
         BAL   R10,PRINT
PUTUCNT  EQU   *
         MVC   USERCNT,MASK7
         ED    USERCNT,USERS       HOW MANY USERS ARE THERE
         LA    R9,UTOTLINE         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         L     R7,TYPETBLA              ONCE MORE THRU TYPETAB HD DEC97
VERFLOOP EQU   *
         CLI   0(R7),X'99'         END YET?
         BE    ENDVERF
         CLI   0(R7),X'03'         IS THIS STILL AN 03
         LA    R7,1(R7)            BUMP EITHER WAY
         BNE   VERFLOOP
         AP    UNUSABL,=P'1'
         B     VERFLOOP
         SPACE
*--------------------------------------------------------------------*
*        END OF OUTER LOOP
*--------------------------------------------------------------------*
         SPACE
ENDVERF  EQU   *
         MVC   UNUSDCNT,MASK4
         ED    UNUSDCNT,UNUSABL
         LA    R9,JUNKLINE         POINT TO LINE TO PRINT
         BAL   R10,PRINT
         SPACE
*--------------------------------------------------------------------*
*        TIME TO CLOSE AND END THE PROGRAM, BYE.
*--------------------------------------------------------------------*
         SPACE
CLOSE    EQU   *
         CLOSE (BRODCAST,,BRODMAP,,SNAP)
FREETYP  DS    0H                                              HD DEC97
         L     R1,TYPETBLA              ADDRESS OF TABLE       HD DEC97
         LH    R0,HIGHVAL               LENGTH OF TABLE        HD DEC97
         AH    R0,=H'1'                 INCREMENT BY ONE       HD DEC97
         FREEMAIN RU,LV=(0),A=(1)       FREE TYPE TABLE        HD DEC97
         L     R13,SAVE+4
         RETURN (14,12),RC=0
         SPACE
*--------------------------------------------------------------------*
*        THIS SUBROUTINE WAS THE IDEA OF THE BELOW AND THE CODE WAS
*        LIFTED AND SLIGHTLY ALTERED TO FIT IN HERE.
*
*        P. A. MOTINL
*        COMPUTING CENTRE
*        J.R.C. - ISPRA ESTABLISHMENT
*        21020 ISPRA (VA), ITALY
*
*        SNAP OUT THE UNKNOWN RECORD TYPE BELOW FOR US TO SEE.
*--------------------------------------------------------------------*
         SPACE
SNAPUNK  EQU   *
         MVC   SNAPBLK(130),0(R9)  MOVE TO AN ALIGNED AREA
         LA    R15,SNAPBLK         GET ADDRESS OF RECORD TO SNAP
         ST    R15,SNAPLST         STORE THE BEGIN ADDRESS
         AL    R15,=F'130'         ADD RECORD LENGTH
         ST    R15,SNAPLST+4       STORE ENDING ADDRESS
         OI    SNAPLST+4,X'80'     INDICATE END OF LIST
         LA    R11,SNAP            GET DCB ADDRESS
         SPACE
         SNAP  DCB=(R11),          DCB ADDRESS TO USE                  X
               ID=1,               ID NUMBER FOR SNAP                  X
               LIST=SNAPLST,       LIST OF ADDRESS TO USE              X
               STRHDR=SNAPHD       HEADER TO PRINT
         SPACE
         LTR   R15,R15             WAS SNAP SUCCESSFUL?
         BZ    SNAPOK
         CVD   R15,CVDAREA         CONVERT ERROR CODE
         MVC   SNERR+17(3),MASK3   MOVE IN A MASK
         ED    SNERR+16(4),CVDAREA+6
         ST    R15,CVDAREA
         UNPK  SNERR+26(9),CVDAREA(5)
         NC    SNERR+26(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    SNERR+26(8),=CL16'0123456789ABCDEF'
         MVI   SNERR+34,C')'
         SPACE
SNAPOK   EQU   *
         BR    R10                 RETURN TO WHENCE WE CAME
         SPACE
*--------------------------------------------------------------------*
*        PRINT OUTPUT SUBROUTINE.
*--------------------------------------------------------------------*
         SPACE
PRINT    EQU   *
         PUT   BRODMAP,(R9)        WRITE FROM AREA ADDRESS IN R9
         BR    R10                 RETURN TO WHENCE WE CAME
         SPACE
*--------------------------------------------------------------------*
*        DATA CONTROL BLOCKS FOLLOW.
*--------------------------------------------------------------------*
         SPACE
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=RISC,         3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130            KEYLEN + BLKSIZE
         SPACE
BRODMAP  DCB   DDNAME=BRODMAP,DSORG=PS,LRECL=133,MACRF=PM,RECFM=FBA
         SPACE
SNAP     DCB   DSORG=PS,RECFM=VBA,MACRF=(W),BLKSIZE=1632,              X
               LRECL=125,DDNAME=BRODSNAP
         LTORG
         SPACE
*--------------------------------------------------------------------*
*        DATA AREAS FOLLOW.
*--------------------------------------------------------------------*
         SPACE
CVDAREA  DS    D
SAVE     DC    18F'0'
SNAPLST  DC    2F'0'               SNAP ADDRESS
TYPETBLA DS    F       ADDRESS OF GETMAINED TYPE TABLE         HD DEC97
HIGHVAL  DS    F
SAVHDADR DS    F                   SAVE HEADER ADDRESS         SG MAY99
ZEROS    DC    XL7'00'             ZEROS
HEXTAB   DC    CL16'0123456789ABCDEF'
         DS    0F
SNAPBLK  DS    0XL130
         DC    130X'77'
         DS    0F
SNAPHD   DC    A(SNAPHDR)
SNAPHDR  DC    AL1(L'SNAPHDT)
SNAPHDT  DC    C'B R O A D C A S T -- DUMP OF A BLOCK READ.'
SNERR    DC    CL79'  ---> SNAP RC =     (R15=        )'
BLOCKNO  DC    X'000000'           BLOCK NUMBERS
SAVERBA  DS    CL3                 SAVE LOCAL OF USER INDEX
MSGNUM   DS    CL3                 SAVE LOCAL OF USER INDEX
MASK3    DC    XL3'202120'
MASK4    DC    XL4'40202120'
MASK46   DC    XL6'402020202120'
MASK7    DC    XL7'4020206B202120'
RECCNT   DC    PL1'0'
MSGCOUNT DC    PL3'0'
NOTDIR   DC    PL3'0'              CT FOR NOTICE DIRECTORY RECS
USRIND   DC    PL3'0'              CT FOR USER MAIL DIRECTORY RECS
NOTMSG   DC    PL3'0'              CT FOR NOTICE MSG RECS
USRMSG   DC    PL3'0'              CT FOR USER MAIL MSG RECS
PTRMSG   DC    PL3'0'              CT FOR POINTER REC (ALWAYS 1) JDM1
REC04    DC    PL3'0'              CT FOR MASTER REC (ALWAYS 1)  JDM0
FREEREC  DC    PL3'0'              CT FOR INACTIVE MAIL MSG RECS
UNUSABL  DC    PL3'0'
USERS    DC    PL3'0'
TYPE00   DC    CL50'NUMBER OF BRODCAST "NOTICES" DIRECTORY RECORDS'
TYPE01   DC    CL50'NUMBER OF USER "MAIL" DIRECTORY RECORDS'
TYPE02   DC    CL50'NUMBER OF BRODCAST "NOTICES" MESSAGE RECORDS'
TYPE03   DC    CL50'NUMBER OF USER "MAIL" MESSAGE RECORDS'
TYPE04   DC    CL50'COUNT OF 1ST REC OF BRODCAST (SHOULD BE 1)'  JDM0
TYPE05   DC    CL50'COUNT OF FREE SEARCH RECORD (SHOULD BE 1)'    JDM1
TYPEFF   DC    CL50'NUMBER OF DUMMY INACTIVE "MAIL" MSG RECORDS'
ODDKEY   DC    CL133'  ** UNKNOWN KEY TYPE ENCOUNTERED :    **'
TABLERR  DC    CL133'  ** TABLE IS OUT OF SYNC WITH MY REALITY **'
BREAKOUT DC    CL133'0< THE FOLLOWING KEY BREAKDOWN WAS FOUND >'
USERSOUT DC    CL133'0< THE FOLLOWING USERS HAVE MESSAGES WAITING >'
USERID   DS    CL7
         SPACE
*--------------------------------------------------------------------*
         SPACE
KEYCOUNT DS    0CL133
         DC    CL10' '
KEYTYPE  DC    CL50'HEADER RECORDS'
KEYCNT   DC    CL7'      1'
         DC    CL66' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
MAXIMUM  DS    0CL133
         DC    CL60'1TOTAL AVAILABLE BLOCKS IN DATASET'
MAXCNT   DS    CL7
         DC    CL66' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
NOTICES  DS    0CL133
         DC    CL63' BLOCKS NECESSARY FOR BROADCST MSGS (DIRECTORY/MESSX
               AGES)'
NOTCNT   DS    CL4
         DC    CL66' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
USERLINE DS    0CL133
         DC    CL10' '
USERID1  DS    CL7
         DC    CL3' '
MSGCNT1  DS    CL6
         DC    CL10' '
USERID2  DS    CL7
         DC    CL3' '
MSGCNT2  DS    CL6
         DC    CL10' '
USERID3  DS    CL7
         DC    CL3' '
MSGCNT3  DS    CL6
         DC    CL55' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
UTOTLINE DS    0CL133
         DC    CL60' NUMBER OF TSO USERS DEFINED IN DATASET'
USERCNT  DS    CL7
         DC    CL66' '
         SPACE
*--------------------------------------------------------------------*
         SPACE
JUNKLINE DS    0CL133
         DC    CL63'0BLOCKS FOUND TO BE GARBAGED'
UNUSDCNT DS    CL4
         DC    CL66' '
         SPACE
*--------------------------------------------------------------------*
*
*--------------------------------------------------------------------*
         SPACE
         EJECT
*----------------------------------------------------------------*
*        THE FOLLOWING IS TAKEN FROM AN OLD MVS MANUAL CALLED
*        "OS/VS2 MVS CONVERSION NOTEBOOK" (GC28-0689-6) AND
*        CONTAINS THE FOLLOWING REFERENCE TO HOW THE BROADCAST
*        HAS CHANGED FROM OS/MVT AND SVS TO MVS:
*
*        'MODIFIED TO INCLUDE A CHANGE LEVEL INDICATOR IN THE
*        HEADER RECORD AND A NEW FIELD FOR EACH USER ID IN THE
*        MAIL DIRECTORY RECORDS. THIS FIELD CONTAINS THE
*        ADDRESS OF THE LAST MESSAGE IN THE CHAIN OF MESSAGES
*        ASSOCIATED WITH EACH NEW USER.'
*
*        NOTE: UNTIL I CAN DUMP RECORDS AND FIGURE OUT WHERE THE
*              ABOVE STATEMENTS FIT INTO THE DSECTS BELOW, WILL
*              LET IT TO THE READER TO HELP AND GET IT FIGURED
*              OUT BEFORE I DO.
*
*----------------------------------------------------------------*
         SPACE
         IEZBITS
         SPACE
         IKJZT301
         SPACE
         IKJZT302
         SPACE
         IKJZT303
         SPACE
         IKJZT304
         SPACE
         IKJZT305
         SPACE
         END
