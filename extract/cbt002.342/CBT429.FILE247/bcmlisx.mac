BCMLIST  TITLE 'BCMLIST - LIST BROADCAST MESSAGES FOR A USERID.'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS A TSO-IN-BATCH *
*                   COMMAND.   NEED NOT BE AUTHORIZED.                *
*                                                                     *
*         SYNTAX:   BCMLIST USERID                                    *
*                                                                     *
*       FUNCTION:   TO LIST BRODCAST MESSAGES FOR A USERID WITHOUT    *
*                   DELETING THEM.  IF YOU INVOKE FOR SPECIAL         *
*                   "USERID" ALL$#@, THEN ALL USERIDS WHICH HAVE      *
*                   MESSAGES ARE DISPLAYED.  THE SPECIAL ID FOR       *
*                   DISPLAYING ALL USERIDS CAN BE CHANGED AT LABEL    *
*                   ALLSET.  THIS VERSION OF THE PROGRAM ALSO         *
*                   DISPLAYS THE RELATIVE RECORD ADDRESS OF EACH      *
*                   MESSAGE IN SYS1.BRODCAST, SO THAT USERID CHAINS   *
*                   CAN BE TRACED.                                    *
*                                                                     *
*          AUTHOR:  SAM GOLOB               VERSION:   1.5            *
*                                                                     *
*            DATE:  APRIL 28, 99                                      *
*                                                                     *
*       EXECUTION:  ALLOC F(BRODCAST) DA('SYS1.BRODCAST') SH REUSE    *
*                                                                     *
*         CHANGES:  99/04/28  -  TOOK OFF RESTRICTIONS OF OPER, ACCT. *
*                                OPEN SYS1.BRODCAST FOR INPUT INSTEAD *
*                                OF UPDAT.  OK FOR GENERAL USERS.     *
*                   95/05/31  -  HAS COUNT OF MSGS AND ID DISPLAY     *
*                                USERID ALL$#@ WILL DISPLAY ALL MSGS  *
*                   95/06/08  -  STRUCTURED SUBROUTINES AND COMMENTS  *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*       I N S T R E A M    M A C R O S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         MACRO
         IKJZT301  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*        UPDATED                          31MAY95 SBG.
*
*        IKJZT301       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                                RECORD 1                             *
*                                                                     *
*        THE FIRST RECORD OF THE SYS1.BRODCAST DATA SET (R1BC) HAS    *
*        POINTERS TO THE NOTICES AND MAIL SECTIONS, AND OTHER INFO    *
*        CONCERNING THE DATA SET.                                     *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
R1BC     DSECT , -            RECORD 1 OF SYS1.BRODCAST DATA SET
         AGO   .SKIP
.NODSECT ANOP
R1BC     DS    0F -           RECORD 1 OF SYS1.BRODCAST DATA SET
.SKIP    ANOP
R1BCPTRP DS    0A -           SAME AS R1BCPTR BELOW
R1BCFLGS DS    B -            NOTICES FLAGS - NOT USED
R1BCPTR  DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               NOTICES DIRECTORY RECORD
R1USPTRP DS    0A -           SAME AS R1USPTR BELOW
R1USFLGS DS    B -            USER MAIL FLAGS - NOT USED
R1USPTR  DS    AL3 -          RBA OF FIRST USER MAIL DIRECTORY RECORD
R1RECNUM DS    F -            TOTAL NO. OF RECORDS IN SYS1.BRODCAST DS
R1BCMAX  DS    H -            MAXIMUM BRODCAST MSG NO. -
*                               FROM MASTER SCHEDULER BASEA, BABCMAX
*                                                                     *
R1DSN    DS    CL24 -         DATA SET NAME IN EBCDIC =
*                               ' SYS1.BRODCAST DATA SET '
R1LEVEL  DS    CL7 -          LEVEL NO. = 'LEVEL N', WHERE 'N' IS
*                               A 1-DIGIT NUMBER
         DS    CL1 -          RESERVED
R1FRESRH DS    CL3 -          RBA OF FREE SEARCH RECORD
R1GENNUM DS    F -            GENERATION NUMBER FOR IN-STORAGE NOTICE
*                               TABLE
         DS    CL76 -         RESERVED
         MEND
         MACRO
         IKJZT304  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT304       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                       USER MAIL DIRECTORY RECORD                    *
*                                                                     *
*        THE USER MAIL DIRECTORY RECORD (USDIR) IS A LOGICAL          *
*        DIRECTORY RECORD IN THE SYS1.BRODCAST DATA SET.              *
*        THE DIRECTORY CONTAINS USERIDS AND PTRS TO THE FIRST AND     *
*        LAST MESSAGE FOR EACH USERID.                                *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USDIR    DSECT , -            USER MAIL DIRECTORY RECORD
         AGO   .SKIP
.NODSECT ANOP
USDIR    DS    0F -           USER MAIL DIRECTORY RECORD
.SKIP    ANOP
USDENTRY DS    0CL13 -        DIRECTORY ENTRY FOR 1 USERID
USDID    DS    CL7 -          USERID (LEFT JUSTIFIED, PADDED W/ BLANKS)
USDRBA   DS    AL3 -          RELATIVE BLOCK ADDRESS (RBA) OF FIRST
*                               MESSAGE FOR THIS USERID (ZERO IF NONE)
USDEND   DS    AL3 -          RBA OF LAST MESSAGE FOR THIS USERID
*                               (ZERO IF NONE)
         DS    8CL13 -        RESERVE SPACE FOR 8 MORE DIRECTORY
*                               ENTRIES IDENTICAL IN FORMAT TO THE
*                               PRECEDING 'USDENTRY'
         DS    XL8 -          RESERVED
USDREND  DS    CL1 -          END-OF-RECORD INDICATOR = X'7F'
USDNEXT  DS    AL3 -          CHAIN PTR TO NEXT USER MAIL DIRECTORY
*                               RECORD (ZERO IF LAST)
         MEND
         MACRO
         IKJZT305  &DSECT=YES
* COPIED FROM OPTIONAL MATERIAL SYM1-1(1) 29MAY80 LDW.  PL/S DELETED.
*
*        IKJZT305       RELEASE=OS/VS2.2  LEVEL=01
***********************************************************************
***********************************************************************
*                                                                     *
*                         SYS1.BRODCAST DATA SET                      *
*                        USER MAIL MESSAGE RECORD                     *
*                                                                     *
*        THE USER MAIL MESSAGE RECORD (USMSG) IS A RECORD IN          *
*        THE SYS1.BRODCAST DATA SET WHICH CONTAINS A MAIL MESSAGE     *
*        INTENDED FOR A PARTICULAR USERID.                            *
*                                           10/1/72    LEVEL=1        *
***********************************************************************
***********************************************************************
         AIF   ('&DSECT' EQ 'NO').NODSECT
USMSG    DSECT , -            USER MAIL MESSAGE RECORD
         AGO   .SKIP
.NODSECT ANOP
USMSG    DS    0F -           USER MAIL MESSAGE RECORD
.SKIP    ANOP
USMLNG   DS    FL1 -          LENGTH OF MAIL MSG TEXT
USMTEXT  DS    CL125 -        MESSAGE TEXT (PADDED WITH BLANKS)
USMNEXT  DS    AL3 -          CHAIN PTR TO NEXT MAIL MESSAGE RECORD
*                               FOR THIS USERID (ZERO IF LAST)
         MEND
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   15,1,HEXSAVE
         LA    1,&FROM
         LA    0,&LEN
         LA    15,&TO
         BAL   4,HEX
         LM    15,1,HEXSAVE
         MEND
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
SP000    EQU   0
         SPACE 1
BCMLIST  CSECT
         USING BCMLIST,R12
         B     BEGINN-*(,R15)
         DC    AL1(16),CL16'BCMLIST VER 1.5'
         DC    CL16' &SYSDATE &SYSTIME '
         DS    0H
BEGINN   STM   R14,R12,12(R13)
         LR    R12,R15
         LR    R11,R1              PRESERVE CPPL POINTER.
         GETMAIN RU,LV=DATALEN,SP=SP000,LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING DATAAREA,R13
         BAL   R9,INITCON          INITIALIZE CONSTANTS IN DATA AREA
         BAL   R9,GETPSCB          GET PSCB IF ANY (IN R2)
         SPACE 1
         LTR   R2,R2               ANY PSCB?
         BZ    EOJ8                GET OUT.  NOT TSO.
         BAL   R9,CPPLPTRS         STORE STUFF OUT OF THE CPPL
         BAL   R9,SETIOPL          SET UP IOPL FOR PUTLINE
*        BAL   R9,CHEKAUTH         ARE WE OPER OR ACCT ?
CONT0    LTR   R11,R11             ANY CPPL?
         BZ    EOJ8                NO.  GET OUT
         L     R1,0(,R11)          PT TO CMD BUFFER.
         LTR   R1,R1               ANY CMD BUFFER?
         BZ    EOJ4                GET OUT IF NONE
         LH    R3,0(,R1)           LOAD LENGTH.
         CH    R3,=H'4'            ANYTHING?
         BNH   EOJ4                NO.  GET OUT.
         LR    R5,R3               LENGTH OF COMMAND + 4
         ICM   R5,14,FULLZERO      CLEAR HI ORDER 3 BYTES
         LH    R3,2(,R1)           LOAD OFFSET.
         SR    R5,R3               SUBTRACT OFFSET FROM FULL LENGTH+4
         SH    R5,=H'4'            CORRECT FOR LENGTH OF CMDBUFR HEADER
         BC    8,WMESS2            ZERO, WRITE MESSAGE ABOUT USERID.
         BC    5,EOJ8              LESS, OR OVERFLOW, OUT.
         BAL   R9,GETIDS           MAKE SURE YOU PULL THE NEWID OUT
*                                  OF THE KEYWORD (AND ITS LENGTH)
*                                  AND ALSO SAVE THE CURRENT ID&LENGTH
ALLSET   CLC   NEWID(6),=C'ALL$#@'
         BNE   ONEID
         MVI   ALLFLAG,X'FF'
ONEID    MVC   TRYID(8),NEWID      RUN USERID SCAN AGAINST NEW ID
DOBROD   OPEN  (BRODCAST,(INPUT))
         TM    BRODCAST+48,X'10'
         BNO   WMESS1
         BAL   R9,HEADREAD         READ HEADER RECORD AND EXTRACT
*                                  RBA OF FIRST USER RECORD TO SEARCH
*                                  FOR THE USERID SLOT FOR OUR USERID.
*                                  THIS VALUE IS STORED IN SAVERBA(3).
* ------------------------------------------------------------------ *
* ---    MAIN LOOP TO READ EACH USERID'S MESSAGES.               --- *
* ------------------------------------------------------------------ *
INDEXUS  DS    0H                  READ THROUGH USERID RECORDS
         CLC   SAVERBA(3),ZEROS    ARE WE AT THE END OF USERID RECORDS
         BE    ENDUSER             NO USERID LIKE THIS. DEAL WITH IT.
         LA    R7,9                COUNT OF USERS PER RECORD
         MVC   BLOCKNO,SAVERBA     GET RBA FOR READ
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING USDIR,R3
         MVC   LASTRBA(3),SAVERBA  SAVE CURRENT RBA
         MVC   SAVERBA(3),USDNEXT  GET NEXT RECORD'S RBA
         LA    R8,0                INITIALIZE USERID SLOT COUNTER
USRLOOP  DS    0H
         MVC   USERID(8),BLANKS    ENSURE BLANK IN 8TH PLACE
         MVC   USERIDI(7),USDID    COPY WHO THIS IS
         CLC   USERIDI(7),ZEROS    IS THIS A REAL USER?
         BE    TRYNEXT             NOPE. JUST GO TO NEXT ENTRY
         CLI   ALLFLAG,X'FF'       ARE WE DOING ALL NONEMPTIES?
         BNE   NOTALL1             NO, JUST DO THIS ONE (EVEN IF EMPTY)
         MVC   TRYID(7),USERIDI    COUNT THIS ID TO BE PROCESSED
NOTALL1  CLC   USERID(7),TRYID     IS THIS THE USERID WE WANT?
         BE    SAVPTRS             YEP. GO DEAL WITH IT
TRYNEXT  LA    R3,13(,R3)          BUMP LOCATION TO NEXT USERID
         LA    R8,1(,R8)           BUMP COUNTER WITHIN RECORD
         ST    R6,SAVER6           SAVE COUNT FOR RETRY (IF "ALL")
         BCT   R7,USRLOOP          TRY FOR ANOTHER USER ENTRY
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         MVC   UMSGCNT(3),PACKZERO   ZERO THE USERID'S MESSAGE COUNTER
         B     INDEXUS             END OF RECORD? GET ANOTHER.
         SPACE 3
SAVPTRS  MVC   MYUSRBA(3),LASTRBA  SAVE RBA OF RECORD WITH MY USERID
         STC   R8,MYUSSLOT         SAVE SLOT IN RECORD
         MVC   SAVEPTRS(6),USDRBA  SAVE POINTERS TO MY MESSAGES
         CLC   SAVEPTRS(6),ZEROS
         BE    SKIPSHOW
MSGX1    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         MVC   LINE+1(7),TRYID
         HEX   LINE+10,3,USDRBA
         HEX   LINE+18,3,USDEND
         MVC   LINE+26(21),=C'      USERID POINTERS'
         BAL   R4,MSG                 TAKE OUT
SKIPSHOW DS    0H
MSGX2    LA    R0,65                  TAKE OUT LATER
         MVC   LINE,LINE-1            TAKE OUT
         HEX   LINE,3,MYUSRBA         TAKE OUT LATER
         HEX   LINE+8,1,MYUSSLOT
         MVC   LINE+13(7),TRYID
         MVC   LINE+24(31),=C'      USERID POINTERS SAVED    ' TAKE OUT
         BAL   R4,MSG                 TAKE OUT
*                           FREE BUFFERS BEFORE GETTING ANOTHER RECORD.
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
GOWRITE  DS    0H
         MVC   MESSRBA(3),SAVEPTRS   GET RBA OF FIRST MESSAGE
         CLI   ALLFLAG,X'FF'       ARE WE PROCESSING ALL NONEMPTIES?
         BE    TRYMORE             YES. KEEP TRYING MORE ID'S
         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID
         BAL   R9,WRITEND          FINISH OFF USERID,
         B     ZEROUT                  AND SCRAM
TRYMORE  CLC   MESSRBA(3),ZEROS    DOES THIS ID HAVE ANY MESSAGES?
         BE    TRYMOREN            NO. GO TO THE NEXT ID.
         BAL   R9,WRITLOOP         LOOP THRU CHAIN FOR THIS USERID
         BAL   R9,WRITEND          FINISH OFF USERID AND CHECK MORE
         MVC   BLOCKNO,MYUSRBA     GET RBA FOR READ TO CONTINUE
         BAL   R9,REFINDUS         FIND USER SLOT AGAIN TO GO FURTHER
TRYMOREN B     TRYNEXT             THEN GO FURTHER
* ------------------------------------------------------------------ *
* ---    END OF MAIN LOOP FOR USERID'S.                          --- *
* ------------------------------------------------------------------ *
BADEND   MVC   LINE,LINE-1                COME HERE IF ID KEY NOT X'01'
         LA    R0,L'MESPREND+7             WRITE MESSAGE THAT
         MVC   LINET(L'MESPREND),MESPREND     THINGS ARE NOT
         BAL   R4,MSG                            SO GOOD.
*                                         GET HERE AT END OF USER RCDS
ENDUSER  CLI   ALLFLAG,X'FF'                 ARE WE DOING ALL IDS ?
         BNE   NOTALL2                       NO. JUST FINISH THIS ONE.
         MVC   LINE,LINE-1                   YES. WE TOTAL 'EM ALL.
         LA    R0,60                           WRITE A BUNCH OF
         BAL   R4,MSG                          LINES AT THE END
         MVC   WK1ALL,MESALL                      WITH THE TOTAL COUNT
         MVC   WK1ALL+46(10),MASK10               AND ENDING MESSAGE
         ED    WK1ALL+45(11),TMSGCNT
         MVC   LINET(L'WK1ALL),WK1ALL
         LA    R0,L'WK1ALL+7
         BAL   R4,MSG                       THEN
         B     EOJ0                           GET THE HECK OUT
NOTALL2  MVC   LINE,LINE-1                  CLEAR LINE
         MVC   WK1NOUSR,MESNOUSR              AND JUST FINISH UP
         MVC   WK1NOUSR+32(7),TRYID             FOR THIS ID THAT
         MVC   LINET(L'WK1NOUSR),WK1NOUSR         YOU'VE BEEN
         LA    R0,L'WK1NOUSR+7                      DEALING WITH
         BAL   R4,MSG
ZEROUT   B     EOJ0                WE'RE DONE.
         SPACE 3
WMESS2   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE2                 YOU HAVE TO ENTER USERID
         LA    R0,L'MESSAGE2+7                  NAME.
         BAL   R4,MSG
         B     EOJ4                                          PARS 06/99
WMESS1   MVC   LINE,LINE-1                  WRITE MESSAGE THAT
         MVC   LINET,MESSAGE1                 SYS1.BRODCAST NOT ALLOC'D
         LA    R0,L'MESSAGE1+7                  TO DDNAME BRODCAST.
         BAL   R4,MSG
EOJ4     LA    R15,4               SET CC = 4.
EOJ      DS    0H                  BYE.
         CLOSE (BRODCAST)
         LR    R1,R13
         L     R13,4(,R13)
         ST    R15,16(,R13)        PUT RC INTO PASSED SAVE AREA
         L     R14,12(,R13)
         FREEMAIN RU,LV=DATALEN,A=(R1),SP=SP000
         LM    R0,R12,20(R13)
         BR    R14
EOJ0     SR    R15,R15             SET CC = 0.
         B     EOJ                 CONT.
EOJ8     LA    R15,8               SET CC = 8.
         B     EOJ                 CONT
         EJECT
*-----------------------------------------------------------------*
*---*                S U B R O U T I N E S                    *---*
*-----------------------------------------------------------------*
         SPACE 2
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GET THE NEW USERID FROM THE PARM, AND SAVE THE OLD ONE.  *
*
         USING PSCB,R2
GETIDS   AR    R1,R3               POINT ...
         LA    R1,4(,R1)           ... TO CHAR.
         LA    R6,7                LOAD REG FOR BCT LOOP
         LR    R7,R1               INITIALIZE POINTER
         LA    R7,0(,R7)                TO FIRST CHARACTER OF ID
         LA    R8,0                INITIALIZE CHARACTER COUNT
CUTIDLEN CLI   0(R7),X'40'         IS THIS CHARACTER A BLANK?
         BE    NOMORCUT            YES, WE ARE AT THE END OF THE ID.
         LA    R7,1(,R7)           BUMP ANOTHER CHARACTER
         LA    R8,1(,R8)           COUNT ANOTHER CHARACTER
         CR    R8,R5               END OF COMMAND BUFFER ?
         BNL   NOMORCUT            YES. GET OUT NOW.
         BCT   R6,CUTIDLEN         TRY FOR BLANK AGAIN
NOMORCUT DS    0H
         MVC   NEWID(8),BLANKS     CLEAR FIELD
         BCTR  R8,0                SUBTRACT 1 FOR EXECUTE
         EX    R8,MOVEID           MAKE SUBCOMMAND INTO NEW ID
         LA    R8,1(,R8)           BUMP REG BACK TO WHERE IT WAS
         STC   R8,NEWPSCBL         SAVE NEW USER'S LENGTH
         OC    NEWID(8),BLANKS     UPPERCASE NEW USERID
         MVC   OLDID(8),BLANKS     CLEAR FIELD
         MVC   OLDID(7),PSCBUSER   SAVE ORIGINAL USERID
         OC    OLDID(8),BLANKS     MAKE SURE ALL 8 CHARS ARE INITLIZED
         MVI   OLDPSCBL,X'00'      INITIALIZE FIELD
         MVC   OLDPSCBL(1),PSCBUSRL  SAVE ORIGINAL USERID LENGTH
         DROP  R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        READ THE SYS1.BRODCAST HEADER RECORD AND COPY FIELDS.    *
*
HEADREAD READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOKZERO,MF=E       RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R3,MDLDECB+12       ADDRESS OF RECORD
         USING R1BC,R3             ADDRESSABILITY TO HEADER RECORD MAP
         MVC   SAVERBA(3),R1USPTR  SAVE RBA OF FIRST USER DIR RECORD
         DROP  R3
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
MSG      LA    R1,LINE             WRITE A LINE USING PUTLINE FACILITY
*        LOAD LENGTH OF MESSAGE INTO R0 BEFORE CALLING THIS ROUTINE.
         BAL   R14,PUTLINE
         MVC   LINE,LINE-1
         BR    R4
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R4                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        DATA AREAS THAT NEED TO BE INITIALIZED AT THE BEGINNING  *
*
INITCON  MVI   LINE-1,C' '         INITIALIZE BLANK
         MVC   UMSGCNT(3),PACKZERO INITIALIZE COUNTER
         MVC   TMSGCNT(5),PACKZER5 INITIALIZE COUNTER
         MVC   WK1TOTAL,MESTOTAL    INIT AREAS
         MVC   WK1NOUSR,MESNOUSR
         MVC   WK1ALL,MESALL
         MVI   ALLFLAG,X'00'
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
GETPSCB  L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB/ASCB WORDS
         L     R1,4(,R1)           POINT TO TCB.
         L     R1,X'B4'(,R1)       POINT TO JSCB.
         L     R1,X'108'(,R1)      POINT TO PSCB.
         LA    R2,0(,R1)           CLEAR HIGH BYTE.  DUMP INTO R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         USING CPPL,R11
CPPLPTRS L     R6,CPPLUPT          SAVE CPPL POINTERS, SUCH AS:
         ST    R6,SAVEUPT             THE UPT
         L     R6,CPPLPSCB
         ST    R6,SAVEPSCB            THE PSCB
         L     R6,CPPLECT
         ST    R6,SAVEECT             THE ECT
         L     R6,CPPLCBUF
         ST    R6,CMBUFAD             THE COMMAND BUFFER ADDRESS
         ST    R11,SAVECPPL           AND THE CPPL ADDRESS ITSELF
         LA    R6,0
         BR    R9
         DROP  R11
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*              TEST IF USER HAS PSCB AUTHORIZATION.               *
*
         USING PSCB,R2
CHEKAUTH TM    PSCBATR1,PSCBACCT   ACCT USER?
         BO    CONT0               YES.  CONTINUE.
         TM    PSCBATR1,PSCBCTRL   OPER USER?
         BZ    EOJ4                NO.  GET OUT.
         DROP  R2
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        GIVEN THE RBA AND THE USERID SLOT NUMBER,                *
*        GO FIND THE SYS1.BRODCAST USERID SLOT.                   *
*
REFINDUS DS    0H                  GET USER SLOT GIVEN RBA AND SLOT #
         READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY                    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               BLOCKNO,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'01'         USERID RECORD?
         BNE   BADEND
         LA    R2,0
         LA    R3,0
         IC    R3,MYUSSLOT         RESET SLOT NUMBER
         LR    R8,R3               LOAD SLOT NUMBER IN R8 FOR RETRY
         M     R2,=F'13'
         L     R5,MDLDECB+12       ADDRESS OF RECORD
         LA    R2,0(R3,R5)         FIND OUR SLOT
         LR    R3,R2               PUT IN R3 TO SET UP RETRY
         L     R6,SAVER6           RESTORE R6 TO COUNT FOR BCT
         MVC   UMSGCNT(3),PACKZERO   ZERO USERID MESSAGE COUNT
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        BUMP THROUGH THE MESSAGES HOOKED TO A USERID             *
*        AND WRITE THEM ALL OUT, USING PUTLINE SERVICE.           *
*
WRITLOOP DS    0H
WRLOOP   READ  MDLDECB,            ECB ADDRESS TO POST                 X
               DI,                 USE DATA AND KEY, EXCLUSIVE CNTL    X
               BRODCAST,           DCB TO USE FOR READ                 X
               'S',                DO DYNAMIC BUFFERING                X
               'S',                GET LENGTH FROM DCB                 X
               'S',                KEY + DATA ARE READ SEQUENTIALLY    X
               MESSRBA,MF=E        RBA OF THE RECORD
         SPACE
         CHECK MDLDECB
         L     R2,MDLDECB+20       ADDRESS OF KEY
         CLI   0(R2),X'03'         IS THIS A GOOD MESSAGE ?
         BNE   WRITLEND            NO. WE HAVE NO BUSINESS BEING HERE
         L     R2,MDLDECB+12       ADDRESS OF RECORD
         USING USMSG,R2
         XR    R0,R0
         IC    R0,USMLNG           LENGTH FOR PUTLINE
         LR    R6,R0
         BCTR  R6,0
         EX    R6,MOVEMSG
         A     R0,=F'7'
         HEX   LINE,3,MESSRBA
         BAL   R4,MSG              WRITE MESSAGE OUT
         AP    UMSGCNT,=P'1'       ADD TO USER MESSAGE COUNT
         AP    TMSGCNT,=P'1'       ADD TO TOTAL MESSAGE COUNT
         CLC   USMNEXT(3),ZEROS
         BE    WRITLEND
         MVC   MESSRBA(3),USMNEXT
         DROP  R2
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         B     WRLOOP
WRITLEND DS    0H
         FREEDBUF MDLDECB,         DECB ADDR USED TO READ              X
               D,                  USED BDAM READ                      X
               BRODCAST            DCB FOR PROCESS DATA SET
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        FINISH WRITING END MESSAGES FOR USERID.                  *
*        IF ALLFLAG IS ON, GO TO THE NEXT ID, AND IF NOT,         *
*        JUST GET OUT.                                            *
*
WRITEND  MVC   LINE,LINE-1
         MVC   WK1TOTAL,MESTOTAL               WRITE
         MVC   WK1TOTAL+5(7),TRYID               TOTALS
         MVC   WK1TOTAL+18(6),MASK6                LINE
         ED    WK1TOTAL+18(6),UMSGCNT
         MVC   LINET(L'WK1TOTAL),WK1TOTAL
         LA    R0,L'WK1TOTAL+7
         BAL   R4,MSG
         MVC   LINE,LINE-1                     WRITE
         MVC   LINET,MESSEND                     END OF USER LINE
         LA    R0,L'MESSEND+7
         BAL   R4,MSG
         CLI   ALLFLAG,X'FF'                   IF NOT ALL USERS
         BNE   NOTALL4                         JUST CLEAR LINE AND OUT
         MVC   LINE,LINE-1
         BAL   R4,MSG                          OTHERWISE SEPARATE
         MVI   LINE-1,C'*'                     USERS WITH A LINE
         MVC   LINE(62),LINE-1                 OF ASTERISKS.
         BAL   R4,MSG
NOTALL4  MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        SET UP IOPL FOR PUTLINE                           *
************************************************************
         SPACE
         USING CPPL,R11
SETIOPL  LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         DROP  R11
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,CVTPTR          POINT TO CVT                  JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY            JDM1
         TM    CVTPUTL,X'80'       IS PUTLINE LOADED? (VS2)      JDM1
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,CVTPUTL         YES - USE CVTPUTL             JDM1
         DROP  R15                                               JDM1
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         BR    R9
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTMSG ROUTINE                                    *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
************************************************************
*        PUTLINE ROUTINE                                   *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
*-----------------------------------------------------------------*
*----         FIXED DATA AREAS THAT DON'T CHANGE.             ----*
*-----------------------------------------------------------------*
PACKZERO DC    PL3'0'
PACKZER5 DC    PL5'0'
FULLZERO DC    F'0'
* - - - - - - - - - - - - - - - - - - - - - - - - *
MOVEID   MVC   NEWID(*-*),0(R1)    EXECUTED
         USING USMSG,R2
MOVEMSG  MVC   LINET(*-*),USMTEXT  EXECUTED
         DROP  R2
* - - - - - - - - - - - - - - - - - - - - - - - - *
BLANKS   DC    C'        '         8 BLANKS
BLOKZERO DC    X'000000'           BLOCK NUMBER OF BROADCAST HEADER
ZEROS    DS    0CL8
ZERENTRY DC    X'000000000000'     SHOW USERID HAS NO MESSAGES WAITING
         DC    X'0000'
MESSAGE1 DC    C'BAD OPEN - ALLOC F(BRODCAST) DA(SYS1.BRODCAST) SH REU'
MESSAGE2 DC    C'PLEASE ENTER THE USERID NAME AFTER COMMAND NAME'
MESSEND  DC    C'* - - - - END OF MESSAGES FOR THIS USER - - - - *'
MESTOTAL DC    C'USER         HAS           DEFERRED TSO MESSAGES'
MESALL DC C'TOTAL DEFERRED TSO MESSAGES IN SYS1.BRODCAST              '
MESNOUSR DC    C'* - - NO USERID RECORD FOR USER          - - *'
MESPREND DC    C'?????  PRELIMINARY END OF USERID RECORDS - - *'
MASK6    DC    XL6'402020202120'
MASK10   DC    XL9'40202020202020202120'
BPARM    DC    AL2(BPARME-BPARM,0),C'NON'
BPARME   EQU   *
         SPACE 3
BRODCAST DCB   DDNAME=BRODCAST,    JCL CONNECTION                      X
               BLKSIZE=129,        LENGTH OF FILES BLOCK               X
               DSORG=DA,           IS DIRECT ACCESS FILE               X
               MACRF=(RISXC,WIC),  3 BYTE RBA, DYNAMIC BUF, READ/CHECK X
               OPTCD=R,            3 BYTE RBA WILL BE USED             X
               RECFM=F,            FIXED LENGTH                        X
               BUFNO=2,            # OF BUFS TO GET DYNAMICALLY        X
               KEYLEN=1,           SIZE OF KEY                         X
               BUFL=130            KEYLEN + BLKSIZE
         SPACE 3
         LTORG
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         DS    0F
         SPACE 3
*-----------------------------------------------------------------*
*----         GETMAINED DATA AREA FIELDS                      ----*
*-----------------------------------------------------------------*
DATAAREA DSECT
SAVE     DS    9D
CMBUFAD  DS    F                   COMMAND BUFFER ADDRESS
NEWID    DC    C'        '         STORE PARM USERID HERE
         DS    CL72                PADDING
ADDADR   DS    0CL12
UMSGCNT  DC    PL3'0'              COUNT OF MESSAGES FOR EACH USER
TMSGCNT  DC    PL5'0'              COUNT OF ALL MESSAGES DISPLAYED
NEXT     DS    F                   FOR IKJIFRIF ADD ADDRESS
OLDID    DC    C'        '         STORE OLD USERID HERE
SAVEPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR NEW USERID
SVMYPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
FINDPTRS DC    X'000000000000'     SAVE MSG POINTERS FOR MY USERID
WRITPTRS DC    X'000000000000'     NEW MSG POINTER TO WRITE
CMPRPTRS DC    X'000000000000'     COMPARE POINTERS FOR FINDUSR RTN
OLDPSCBL DC    X'00'               STORE OLD PSCBUSRL HERE
NEWPSCBL DC    X'00'               STORE NEW PSCBUSRL HERE
BLOCKNO  DC    X'000000'           STORE BLOCK NUMBER FOR READ
LASTRBA  DC    X'000000'           STORE CURRENT RBA
SAVERBA  DC    X'000000'           STORE RBA FOR LATER READ
MYUSRBA  DC    X'000000'           STORE RBA OF MY USERID FOR LATER
NMSGRBA  DC    X'000000'           RBA OF NEXT MESSAGE
MESSRBA  DC    X'000000'           RBA OF CURRENT MESSAGE
MYUSSLOT DC    X'00'               STORE SLOT OF MY USERID IN RECORD
NWUSRBA  DC    X'000000'           STORE RBA OF NEW USERID FOR LATER
NWUSSLOT DC    X'00'               STORE SLOT OF NEW USERID IN RECORD
FNUSRBA  DC    X'000000'           RBA OF USERID TO BE FOUND
FNUSSLOT DC    X'00'               SLOT OF THIS USERID IN RECORD
USERID   DS    0CL8                STORE FOUND USERID HERE
USERIDI  DS    CL7                 STORE FOUND USERID HERE
USERIDF  DS    CL1                 8TH CHARACTER
FINDID   DS    0CL8                USERID NAME TO BE FOUND
FINDIDI  DS    CL7                 FIRST 7 CHARACTERS
FINDIDF  DS    CL1                 8TH CHARACTER
TRYID    DS    0CL8                STORE TEST USERID HERE
TRYIDI   DS    CL7                 STORE TEST USERID HERE
TRYIDF   DS    CL1                 8TH CHARACTER
SCANFLAG DC    X'00'               FLAG FOR USERID SCANS
COMPFLAG DC    X'00'               FLAG FOR USERID SCANS
         DS    0F                  ALIGN ON FULLWORD
SAVECPPL DS    F                   SAVE THE CPPL
SAVEUPT  DS    F                   SAVE FOR IKJIFRIF
SAVEPSCB DS    F                   SAVE FOR IKJIFRIF
SAVEECT  DS    F                   SAVE FOR IKJIFRIF
SAVER6   DS    F                   SAVE COUNT FOR USERID SCAN
HEXSAVE  DS    3F                  SAVE FOR HEX MACRO
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL130            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
LINEB    DS    C                   LINE-1
LINE     DS    CL133
LINET    EQU   LINE+7
         DS    0F
RDWR     READ  MDLDECB,DI,MF=L
RDWREND  DS    0F
RDWRLEN  EQU   *-RDWR
STOR0001 DS    2F
STOR1415 DS    2F
WK1TOTAL DC    C'                                                '
WK1ALL DC C'                                                          '
WK1NOUSR DC    C'                                              '
ALLFLAG  DS    X
         SPACE 1
DATALEN  EQU   *-DATAAREA          LENGTH OF DATA AREA
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJECT
         IKJIOPL
         IKJZT301 DSECT=YES
         IKJZT304 DSECT=YES
         IKJZT305 DSECT=YES
         CVT  DSECT=YES
         END
