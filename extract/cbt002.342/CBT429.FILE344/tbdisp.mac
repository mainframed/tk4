         /*Copyright 10 Mar 1998 by UIS441 REXX TBDISP               */
         /*----------------------------------------------------------*/
         /* Syntax: TBDisp <datasetname(member)>                     */
         /*----------------------------------------------------------*/
         /* May take some time.                                      */
         /* The author can be reached at joerg.berning(at)gmx.net    */
         /*----------------------------------------------------------*/
         trace off
         arg myDSNwithMember
         myDSNwithMember = strip(myDSNwithMember,"B","'")
         myDSNwithMember = translate(myDSNwithMember,,"()")
         myTableDSN = subword(myDSNwithMember,1,1)
         myDSNMember = subword(myDSNwithMember,2,1)
         address ispexec
         "control errors return"
         "LIBDEF IN DATASET ID('"myTableDSN"')"
         "TBCLOSE "myDSNMember
/*       say "TBCloseRC:"rc                                          */
         "TBOPEN "myDSNMember" LIBRARY(IN) NOWRITE"
         "TBQUERY "myDSNMember" KEYS(MYKEYS)",
                      "NAMES(MYNAMES)",
                      "ROWNUM(MYROWNUM)",
                      "KEYNUM(MYKEYNUM)",
                      "NAMENUM(MYNAMENU)",
                      "POSITION(MYPOS)"
/*       say "myKeys:"myKeys                                         */
/*       say "myNames:"myNames                                       */
/*       say "myRowNum:"myRowNum                                     */
/*       say "myKeyNum:"myKeyNum                                     */
/*       say "myNameNu"myNameNu                                      */
/*       say "myPos:"myPos                                           */
         myColumnNames = substr(myNames,2,length(myNames) -2) /*() weg *
         "TBTOP "myDSNMember
         do j = 1 to words(myColumnNames)      /* max. Spaltenbreite */
           do i = 1 to myRowNum
             "TBSKIP "myDSNMember
             myVar = word(myColumnNames,j)            /* feststellen */
             myVarValue = value(myVar)
             myVarLength = length(myVarValue)
                                        /* kein Wert zum Vergleichen */
             if i = 1 then
               myMaxLength.j = myVarLength
             else
               myMaxLength.j = max(myVarLength, myMaxLength.j)
           end /* of do i */
/*         say myVar "max:"myMaxLength.j                             */
         end /* of do j */
         myHeadline = ""
         do j = 1 to words(myColumnNames)                /* Headline */
           myVar = word(myColumnNames,j)
           if length(myVar) <= myMaxLength.j then
             myColumnLength = myMaxLength.j
           else
             myColumnLength = length(myVar)
           myHeadline = myHeadline left(myVar,myColumnLength)
         end /* of do j */
         "TBTOP "myDSNMember
         do i = 1 to myRowNum
           "TBSKIP "myDSNMember
           myRow.i = ""
           do j = 1 to words(myColumnNames)
             myVar = word(myColumnNames,j)
             if length(myVar) <= myMaxLength.j then
               myColumnLength = myMaxLength.j
             else
               myColumnLength = length(myVar)
             myRow.i = myRow.i left(value(myVar),myColumnLength)
           end /* of do j */
         end /* of do i */
         "TBCLOSE "myDSNMember
         queue myHeadline
         address tso
         if sysvar("SYSENV") = "BACK" then
           do
             "alloc f(sysprint) lrecl(1024) sysout(x) reuse"
             do i = 1 to myRowNum
               queue myRow.i
             end
             "execio * diskW sysprint(fini"
             "free f(sysprint)"
           end /* of do */
         else
           do
             do i = 1 to myRowNum
               queue myRow.i
             end
             myFi = "F"××time(s)
             "alloc f("myFi") recfm(v b) lrecl(32754) new unit(vio)",
               "delete cylinders space(1,1) reuse dsorg(PS) "
             queue ""
             "execio * diskW "myFi"(fini"
             address ispexec
             "LMINIT DATAID(MYDATAID) DDNAME("myFi")"
             "EDIT DATAID("myDataID") MACRO(MACRORES)"
             "LMFREE DATAID("myDataID")"
             address tso
             "free f("myFi")"
           end /* of do */
