         /*Copyright 23 Apr 2000 by JBG REXX OMVSSeg                 */
         /*----------------------------------------------------------*/
         /* Syntax: OMVSSEG                                          */
         /*----------------------------------------------------------*/
         /* Output is a listing of all UserIDs & groups and their    */
         /* OMVS-Segment-information.                                */
         /* The author can be reached at joerg.berning(at)gmx.net    */
         /*----------------------------------------------------------*/
         trace off
         rc = outtrap("myLG.")
         "lg * omvs noracf"
         rc = outtrap("OFF")
         "dropbuf"
         queue copies(" ",19),
           left("DfltGrp",8),
           left("GID",10)
         queue "----+----1----+----2----+----3----+----4----+----5",
           "----+----6----+----7"
         do i = 1 to myLG.0
           parse var myLG.i myOMVS myInformation
           if myInformation = "INFORMATION" then
             do
               j = i -2
               myGroupName = subword(myLG.j,4,1)
               j = i +2
               myGID = subword(myLG.j,2,1)
               queue copies(" ",19),
                 left(myGroupName,8),
                 myGID
             end /* of if */
         end /* of do i */
         rc = outtrap("myLU.")
         "lu * omvs noracf"
         rc = outtrap("OFF")
         queue left("UserID",8),
           left("UID",10),
           left("DfltGrp",8),
           left("GID",10),
           left("Home",20),
           left("Program",20)
         queue "----+----1----+----2----+----3----+----4----+----5",
           "----+----6----+----7"
         do i = 1 to myLU.0
           parse var myLU.i myRowID "=" myRowValue
           select
             when myRowID = "USER" then
               do
                 myUserID = myRowValue
                 j = i
/* Bl|der do-loop weil: a) die Anzahl Lines je OMVS-Information ist  */
/* variabel und b) der do-loop nach dem letzten User mit OMVS-       */
/* Information verlassen werden soll(ist geschickter ;>).            */
                 do (myLU.0 - i)
                   j = j +1
                   parse var myLU.j myRowID "=" myRowValue
                   myRowValue = strip(myRowValue)
                   select
                     when myRowID = "UID" then
                       myUID = myRowValue
                     when myRowID = "HOME" then
                       myHomePath = myRowValue
                     when myRowID = "PROGRAM" then
                       myProgramPath = myRowValue
                     when myRowID = "USER" then
                       leave
                     otherwise ;
                   end /* of select */
                 end /* of do */
                 rc = outtrap("myLUSpecific.")
                 "lu "myUserID
                 rc = outtrap("OFF")
                 myDefaultGroup = strip(substr(myLUSpecific.2,16,8))
                 rc = outtrap("myLG.")
                 "lg "myDefaultGroup" omvs noracf"
                 rc = outtrap("OFF")
                 if myLG.3 = "OMVS INFORMATION" then
                   myGID = substr(myLG.5,6,10)
                 else
                   myGID = left("-",10)
                 queue left(myUserID,8),
                   myUID,
                   left(myDefaultGroup,8),
                   myGID,
                   left(myHomePath,20),
                   left(myProgramPath,20)
               end /* of when */
             otherwise ;
           end /* of select */
         end /* of do i */
         queue ""
         myFi = "F"××time(s)
         "alloc f("myFi") recfm(v b) lrecl(255) new unit(vio)",
           "delete tracks space(15,15) reuse dsorg(PS) "
         queue ""
         "execio * diskW "myFi"(fini"
         address ispexec
         "LMINIT DATAID(MYDATAID) DDNAME("myFi")"
         "EDIT DATAID("myDataID") MACRO(MACRORES)"
         "LMFREE DATAID("myDataID")"
         address tso
         "free f("myFi")"
