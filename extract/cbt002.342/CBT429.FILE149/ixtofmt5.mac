//CSYSMAS1  JOB  1,MSGCLASS=A
/*ROUTE PRINT WYLBUR
//  EXEC  ASMHCL,PARM.LKED='LIST,MAP'
//SYSIN DD *
         TITLE 'IXTOFMT5 -- INDEXED VTOC FORMAT-5 INTERFACE'
***********************************************************************
*
IXTOFMT5 CSECT
*
*  THIS ROUTINE USES THE CVAF SERVICE ROUTINES TO CONVERT THE
*  FREE SPACE BIT MAP OF AN INDEXED VTOC INTO PSUEDO FORMAT-5
*  DSCBS.  THIS PROVIDES A COMPATIBILITY INTERFACE FUNCTION FOR
*  PRE-DFDS ROUTINES WHICH EXAMINE FORMAT-5 DSCBS.
*
*  THIS ROUTINE IS CALLED ONCE FOR EACH FORMAT-5 WHICH MUST BE
*  BUILT.  THE INDEX RECORD BUFFER RETURNED BY CVAF IS SAVED SO
*  THAT NO ADDITIONAL I/O NEED BE DONE FOR SUCCEEDING CALLS.  THE
*  BUFFERS ARE FREED WHEN THE LAST FORMAT-5 DSCB IS RETURNED.
*  HENCE, THIS ROUTINE SHOULD BE CALLED UNTIL A FORMAT-5 DSCB WITH
*  DS5PTRDS EQUAL TO ZERO IS RETURNED.  THE NON-ZERO VALUE IN
*  DS5PTRDS WILL ALWAYS BE C'00001'.  NO ENQUEUE ON THE VTOC IS
*  PERFORMED.
*
*  INPUT:    R1 -->  (PARMLIST)
*                    A(WORD) -- ADDR OF A FULLWORD USED BY THIS
*                               ROUTINE.  MUST BE ZEROED FOR FIRST
*                               CALL AND RETURNED UNALTERED THEREAFTER.
*                    A(DCB)  -- ADDR OF A DCB OPENED TO THE DESIRED
*                               VTOC.  NO I/O MAY BE OUTSTANDING TO
*                               THIS DCB.  AN APF-AUTHORIZED CALLER
*                               MAY PASS A COMPLIMENTED UCB ADDRESS
*                               INSTEAD.
*                    A(COUNT1)- ADDR OF FULLWORD WHERE COUNT OF THE
*                               FREE (FMT 0) DSCBS WILL BE RETURNED.
*                    A(COUNT2)- ADDR OF FULLWORD WHERE COUNT OF THE
*                               FREE VIRS WILL BE RETURNED.
*                    A(FMT5) -- ADDR OF 140-BYTE AREA FOR FORMAT-5
*                               DSCB BUILT BY THIS ROUTINE.
*
*  RETURN CODES:
*            R15  = 0   ALL OK.
*            R15  = 4   VTOC IS NOT IN INDEXED FORMAT.
*            R15  = 8   CVAFTST CALL FAILED (OTHER THAN NOT INDEXED
*                       FORMAT VTOC).  CVAFTST RC IN REG 0.
*            R15  = 12  CVAFDSM CALL FAILED (OTHER THAN NON INDEXED
*                       FORMAT VTOC).  CVAFDSM RC IN HIGH ORDER BYTE
*                       OF R0. CVSTAT IN LOW ORDER BYTE OF R0.
*            R15  = 16  (UNUSED)
*            R15  = 20  LOGIC ERROR IN THIS ROUTINE.  R0 = OFFSET.
*
*
*  ATTRIBUTES -  REENTRANT, PROBLEM STATE, PROBLEM KEY.
*                THIS ROUTINE WILL WORK CORRECTLY ON A NON DFDS
*                SYSTEM.  HOWEVER, DFDS MACROS ARE REQUIRED FOR
*                ASSEMBLY.
*
*  WRITTEN BY: CHRIS THOMAS, UCLA/OAC SYSTEMS GROUP, 5/30/81
*
***********************************************************************
         TITLE 'IXTOFMT5 -- MAINLINE ROUTINE'
*
*  INITIALIZATION
*
         SAVE  (14,12),,IXTOFMT5-VERSION_1.0   SAVE REGS
         LR    R12,R15            ESTABLISH BASE
         USING IXTOFMT5,R12
         LR    R9,R13             SAVE CALLER'S R13
         LR    R11,R1             SAVE CALLER'S PARM POINTER
         USING PARMLIST,R11
         L     R1,PARMWORD        POINT TO ANCHOR WORD
         ICM   R13,B'1111',0(R1)  GET MY WORKAREA ANCHOR
         BNZ   SKIPGET            IF NON-ZERO, CALL FOR NEXT FMT5
*
*  GET WORKAREA AT FIRST CALL
*
         GETMAIN  RU,LV=WORKLEN,SP=0
         LR    R13,R1             ESTABLISH WORKAREA
         USING WORKAREA,R13
         L     R1,PARMWORD        ADDR OF ANCHOR
         ST    R13,0(,R1)         SAVE FOR SUBSEQUENT CALLS
         LR    R0,R13             ADDR FOR MVCL
         LA    R1,WORKLEN         LENGTH FOR MVCL
         SR    R3,R3              ZERO FILL BYTE
         MVCL  R0,R2              ZERO WORKAREA
*
*  CHAIN SAVEAREAS
*
SKIPGET  ST    R9,SAVEAREA+4      SAVE CALLER'S R13
         ST    R13,8(,R9)         FORWARD CHAIN
         NC    SAVEEXT,SAVEEXT    CALL FOR FIRST FMT5?
         BNZ   GETNEXT5           NO. RETURN NEXT FMT5
*
*  DETERMINE IF THIS IS A DCB FOR DASD WITH INDEXED VTOC
*
TST      L     R2,PARMDCB         POINT TO PASSED DCB
         LCR   R3,R2              MAYBE UCB INSTEAD
         BNM   UCBPASS            TREAT MINUS AS UCB
         L     R2,DCBDEBAD-IHADCB(,R2)   GET DEB FROM DCB PASSED
         ST    R2,DEBADDR         SAVE FOR LATER (ZERO IF UCB)
         ICM   R3,B'0111',(DEBUCBA-DEBDASD)+(DEBBASND-DEBBASIC)(R2)    *
                                  GET UCB ADDR FROM DEB
         B     TESTIT             LEAVE UCB ZERO IF DEB PASSED
UCBPASS  ST    R3,UCBADDR
TESTIT   CVAFTST  UCB=(R3)
         B     *+4(R15)
         B     UNINDXD            RC = 0   DFDS NOT ON SYSTEM
         B     UNINDXD            RC = 4   VOL IS NOT INDEXED
         B     GOODIX             RC = 8   INDEXED. ALL OK.
         B     TSTERROR           RC = 12  NO VOL MOUNTED, ETC.
         B     TSTERROR           RC = 16  BAD UCB (NOT DASD, ETC)
*
*  CALL CVAFDSM FOR NUMBER OF FREE DSCBS
*
GOODIX   L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDSM  MF=(E,CVPL),    GET COUNT1                           *
               ACCESS=MAPDATA,                                         *
               MAP=VTOC,                                               *
               COUNT=YES,                                              *
               MAPRCDS=YES,                                            *
               DEB=(2),                                                *
               CTAREA=COUNT1
         B     *+4(R15)
         B     GOODCT1            RC = 0   SUCCESSFUL
         B     DSMERROR           RC = 4   END OF DATA, OR ERROR
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
*
*  RETURN COUNT OF FREE DSCBS
*
GOODCT1  L     R1,PARMCT1         @ COUNT1
         MVC   0(4,R1),COUNT1     RETURN COUNT1
*
*  SAVE INDEX BUFFERS FOR SUCCEEDING FUNCTIONS
*
         L     R1,CVMRCDS               GET ADDR OF BUFFERS
         ST    R1,BUFLIST               SAVE FOR LATER
*
*  CALL CVAFDSM FOR NUMBER OF FREE INDEX BLOCKS (VIRS)
*
         L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDSM  MF=(E,CVPL),    GET COUNT1                           *
               ACCESS=MAPDATA,                                         *
               MAP=INDEX,                                              *
               COUNT=YES,                                              *
               MAPRCDS=(YES,(3)),                                      *
               DEB=(2),                                                *
               CTAREA=COUNT2
         B     *+4(R15)
         B     RETCT2             RC = 0   SUCCESSFUL
         B     DSMERROR           RC = 4   END OF DATA, OR ERROR
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
*
*  RETURN COUNT OF FREE VIRS
*
RETCT2   L     R1,PARMCT2         @ COUNT2
         MVC   0(4,R1),COUNT2     RETURN COUNT2
         XC    SAVEEXT,SAVEEXT    BEGIN FMT5S AT THE BEGINNING
*
*  GET 26 FREE EXTENTS.  (ASK FOR 27 TO SIMPLIFY EOD LOGIC).
*
GETNEXT5 MVC   EXTS(L'DS5AVEXT),SAVEEXT  SET UP STARTING POINT
         MVI   NUMEXTS,27
         L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDSM  MF=(E,CVPL),    GET EXTENTS                          *
               ACCESS=MAPDATA,                                         *
               MAP=VOLUME,                                             *
               MAPRCDS=(YES,(3)),                                      *
               DEB=(2),                                                *
               EXTENTS=EXTABL
         B     *+4(R15)
         B     NOERROR            RC = 0   SUCCESSFUL
         B     CHECKEOD           RC = 4   END OF DATA, OR ERROR
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
*
*  IF RC=4, SEE IF ERROR OR END OF EXTENTS
*
CHECKEOD CLI   CVSTAT,STAT032     END OF DATA?
         BNE   DSMERROR           NO, OTHER ERROR
*
*  USE 26 (OR FEWER) EXTENTS RETURNED TO BUILD PSUEDO FORMT-5
*
NOERROR  L     R10,PARMFMT5       ADDR FOR GENERATED FMT5
         USING IECSDSF5,R10
         MVC   DS5KEYID,F5ID      SET KEY
         MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS  MOVE IN EXTS
         MVI   DS5FMTID,C'5'      SET DSCB ID
         MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV MOVE REMAINING
         XC    DS5PTRDS,DS5PTRDS  ZERO CHAIN PTR
         NC    EXT27,EXT27        IS 27TH EXT ZERO? (1ST IN NEXT FMT5)
         BZ    CLEANUP            GO CLEANUP. ALL DONE.
         MVC   DS5PTRDS,NZPTR     MAKE PUSEDO CHAIN POINTER
         MVC   SAVEEXT(5),DS5MAVET+L'DS5MAVET-L'DS5AVEXT  SAVE THE     *
                                  LAST EXTENT FOR NEXT FORMAT 5
         B     RETURN
         DROP  R10
*
*  RELEASE BUFFERS FOR INDEX RECORDS AFTER LAST USE
*
CLEANUP  L     R2,DEBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDIR  MF=(E,CVPL),    FREEMAIN CVAF BUFFERS                *
               ACCESS=RLSE,                                            *
               DEB=(2),                                                *
               MAPRCDS=(NO,(3))
         LTR   R15,R15            ERROR?
         BZ    FREEWORK           GOOD. SHOULD ALWAYS WORK.
         BAL   R14,LOGICERR       BAD. DIE.
*
*  FREE GOTTEN  WORKAREA          OR DFDS NOT INSTALLED ON SYSTEM.
*
FREEWORK LR    R1,R13             ADDR OF WORKAREA TO BE FREED
         L     R13,SAVEAREA+4     RELOAD CALLER'S SAVE PTR
         FREEMAIN  RU,LV=WORKLEN,A=(1),SP=0
         L     R1,PARMWORD        POINT TO WORKAREA ANCHOR
         SR    R15,R15            ZERO RETCODE
         SR    R0,R0              ZERO SUPLIMENTARY RETCODE
         ST    R15,0(,R1)         ZERO ANCHOR WORD
         B     EXIT2              GO LEAVE
         TITLE 'IXTOFMT5 -- TERMINATION ROUTINES'
*
*  VTOC IS NOT IN INDEXED FORMAT, OR DFDS NOT INSTALLED ON SYSTEM.
*
UNINDXD  SR    R0,R0              ZERO SUPLEMENTRY RETURN CODE
         LA    R15,4              INDICATE NOT INDEXED
         B     EXIT               COMMON EXIT
*
*  CVAFTST COMPLETED WITH AN ERROR
*
TSTERROR LR    R0,R15             SAVE CVAFTST RETURN CODE
         LA    R15,8              INDICATE FAILURE
         B     EXIT               COMMON EXIT
*
*  CVAFDSM COMPLETED WITH AN ERROR
*
DSMERROR LR    R0,R15             PUT CVAFDSM RETURN CODE INTO
         SLL   R0,24              ... HIGH ORDER BYTE OF R0
         IC    R0,CVSTAT-CVPL(R1)  ADD CVSTAT VALUE
         LA    R15,12             INDICATE FAILURE
         B     EXIT               COMMON EXIT
*
*  INTERNAL LOGIC ERROR OR INCORRECT CALL
*
LOGICERR LA    R1,IXTOFMT5        ADDR OF ENTRY POINT
         SLR   R14,R1             CONVERT TO OFFSET
         LA    R0,0(,R14)         RETURN OFFSET IN R0
         LA    R15,20             INDICATE FAILURE
         B     EXIT               COMMON EXIT
*
*  NORMAL CONDITIONS
*
RETURN   SR    R0,R0              ZERO SUPLEMENTARY RETURN CODE
         SR    R15,R15            ZERO PRIMARY RETURN CODE
         B     EXIT               COMMON EXIT
         SPACE 4
*
*  COMMON EXIT ROUTINE
*
EXIT     L     R13,SAVEAREA+4     RESTORE CALLER'S SAVE PRT
EXIT2    L     R14,12(,R13)       RESTORE R14
         LM    R1,R12,24(R13)     RESTORE R1 THRU R12 (R15,R0 SET)
         BR    R14                RETURN
         TITLE 'IXTOFMT5 -- CONSTANTS'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 4
*
*  CONSTANTS
*
F5ID     DC    XL4'05050505'      FMT5 KEY
NZPTR    DC    C'00001'           CHAR INSURES INVALID DASD ADDR
CVPLMFL  CVAFDSM  MF=L
LENCVPL  EQU   *-CVPLMFL
         TITLE 'IXTOFMT5 -- WORKAREA DESCT'
WORKAREA DSECT
SAVEAREA DC    18F'0'             YE OLDE SAVEAREA
COUNT1   DC    F'0'               FORMAT 0 DSCBS
COUNT2   DC    F'0'               FREE INDEX RECORDS
BUFLIST  DC    A(0)               ADDR VIX BFRS OBTAINED BY CVAF
DEBADDR  DC    A(0)               ADDR OF DEB PASSED IN CALLER'S DCB
UCBADDR  DC    A(0)               ADDR OF UCB PASSED (PRIV CALLER)
SAVEEXT  DC    XL5'00'            BEGINNING OF NEXT FMT5
EXTABL   DS    0CL(1+(27*5))      FANCY LENGTH
NUMEXTS  DC    AL1(27)            NR OF EXTENTS REQUESTED
EXTS     DC    CL(27*5)' '        27 5-BYTE FREE SPACE EXTENTS
         ORG   *-5
EXT27    DC    CL5' '             GIVE LAST ONE A NAME
         ORG
         SPACE 4
CVPL     ICVAFPL  DSECT=NO
         SPACE 4
WORKLEN  EQU   *-WORKAREA
         EJECT
         DSECT
         IECSDSL1  (5)
         SPACE 4
PARMLIST DSECT
PARMWORD DS    A                  ANCHOR FOR GETMAINED AREA
PARMDCB  DS    A                  ADDR OF DCB FOR VTOC
PARMCT1  DS    A                  ADDR OF #FMT 0S
PARMCT2  DS    A                  ADDR OF #FREE VIRS
PARMFMT5 DS    A                  ADDR OF FMT5 WORKAREA
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         IEZDEB LIST=NO
         PRINT GEN
         END
//*KED.SYSLMOD DD DISP=SHR,DSN=SYS9.MSSLOAD
//LKED.SYSIN DD *
 ENTRY IXTOFMT5
 NAME  IXTOFMT5(R)
