//CSYSMASA JOB PCN,MSGCLASS=A,COND=(0,NE),NOTIFY=CSYSPCN
/*ROUTE PRINT WYLBUR
//ASM83 EXEC ASMHCL,
//  PARM.LKED='RENT,REUS,REFER,LIST,XREF'
//ASM.SYSLIB DD UNIT=3350,VOL=SER=MVSRES
//           DD UNIT=3350,VOL=SER=MVSRES
//           DD DISP=SHR,DSN=SYS5.MSSMAC
//           DD DISP=SHR,DSN=SYS1.ACFMAC,UNIT=3350,VOL=SER=MVSRES
//ASM.SYSIN  DD *
         TITLE 'I E F U 8 3 --- DESCRIPTION'
         LCLB  &TEST
&TEST    SETB  0
IEFU83   CSECT ,
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
* MODULE: IEFU83 - SMF RECORD EXIT (SVC ENTRY)                        *
*                                                                     *
* FUNCTION: PERFORM OAC FUCTIONS FOR SPECIFIC RECORD TYPES            *
*      14 - CLOSE/EOV RECORD (MOUNT ACCOUNTING)                       *
*      15 - CLOSE/EOV RECORD (MOUNT ACCOUNTING)                       *
*      21 - TAPE VOLUME DEMOUNTED (VOLUME ERROR STATISTICS WTO)       *
*                                                                     *
* RELATED ROUTINES:  IEFACTRT (SMF JOB TERMINATION EXIT)              *
*                    IEFUJI   (SMF JOB INITIATION EXIT)               *
*                                                                     *
* EXTERNAL ROUTINES: GETMAIN  (TEMP AREA FOR WTO)                     *
*                    FREEMAIN (TEMP AREA FOR WTO)                     *
*                    WTO      (ERROR MSGS, VOLUME STATISTICS MSGS)    *
*                                                                     *
* ENTRY:  THIS MODULE RECEIVES CONTROL FROM IEEMB830 (SVC83/IGC0008C) *
*       BEFORE IT WRITES EACH SMF RECORD TO THE SMF DATASET.  NOTE    *
*       THAT THIS ROUTINE DOES NOT RECEIVE CONTROL FOR RECORDS        *
*       FOR WHICH WRITING HAS BEEN SUPPRESSED BY THE SYSTEM SMF       *
*       OPTIONS OR RECORDS WHICH ARE WRITTEN VIA THE SMF BRANCH       *
*       ENTRY.                                                        *
*   REGISTERS AT ENTRY:                                               *
*     R1  -  @ OF (@ OF SMF RECORD RDW)                               *
*     R13 -  @ OF 72 BYTE SAVEAREA                                    *
*     R14 -  RETURN ADDRESS (TO IEEMB830)                             *
*     R15 -  @ OF IEFU83                                              *
*                                                                     *
* EXIT:  THIS MODULE MUST RESTORE ALL REGISTERS EXCEPT FOR R15        *
*       AND RETURN A RETURN CODE IN R15.  IN SOME CASES THE           *
*       SMF RECORD IS MODIFIED.                                       *
*   RETURN CODES:                                                     *
*     0   -  WRITE SMF RECORD                                         *
*     4   -  SUPPRESS WRITE OF SMF RECORD                             *
*                                                                     *
* ATTRIBUTES:  REENTRANT, KEY 0, ENABLED                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*  R0  -                                                              *
*  R1  -                                                              *
*  R2  -                                                              *
*  R3  -                                                              *
*  R4  -                                                              *
*  R5  -                                                              *
*  R6  - @ SMF RECORD (IF ANY)                                        *
*  R7  - PRELIMINARY RETURN CODE (0 OR 4)                             *
*  R8  -                                                              *
*  R9  -                                                              *
*  R10 - INTERNAL LINKAGE                                             *
*  R11 - @ W# OR ZERO (IF NONE)                                       *
*  R12 - @ IEFU83 (PROGRAM BASE)                                      *
*  R13 - @ ORIG SAVEAREA OR @ W#SAVE                                  *
*  R14 -                                                              *
*  R15 -                                                              *
*                                                                     *
*---------------------------------------------------------------------*
         TITLE 'I E F U 8 3  ---  SMF TYPE 83 EXIT'
         OACUSING PSA,R0
IEFU83   CSECT
         STM   R14,R12,12(R13)    SAVE CALLERS'S REGS
         LR    R12,R15            SET BASE REGISTER
         OACUSING IEFU83,R12
         SR    R11,R11            NO W# AREA
         SR    R7,R7              ASSUME WRITE RECORD
         SPACE 1
*  ----  EXTRACT/TEST SMF RECORD ADDRESS
         SPACE 1
         ICM   R6,B'1111',0(R1)   GET/TEST SMF RECORD RDW ADDR
         BZ    EXIT               BIF NO ADDR - RETURN TO WRITE RECORD
         OACUSING SMF,R6          (SMF RECORD)
         SPACE 1
*  ----  CHECK FOR AND PROCESS ONLY TYPE 14 AND TYPE 15 RECORDS.
         SPACE 1
         CLI   SMF14RTY,14        TYPE 14 RECORD?
         BE    R14$               BIF TYPE 14 RECORD (MOUNT ACCOUNTING)
         CLI   SMF14RTY,15        TYPE 15 RECORD?
         BE    R15$               BIF TYPE 15 RECORD (MOUNT ACCOUNTING)
         CLI   SMF14RTY,21        TYPE 21 RECORD?
         BE    R21$               BIF TYPE 21 RECORD (TAPE ERR STATS)
         CLI   SMF14RTY,222       TYPE 222 RECORD?
         BE    R222$
EXIT     LTR   R11,R11            ALREADY HAVE W# AREA?
         BZ    EXIT1              RIF NO W# AREA TO FREE
         L     R13,4(,R13)        UNCHAIN SAVE AREAS
         LA    R0,W#L             LENGTH OF W# AREA
         FREEMAIN R,LV=(0),A=(R11) FREE STORAGE FOR W#
EXIT1    LR    R15,R7             RETURN CODE (0 OR 4)
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         LM    R0,R12,12+8(R13)     AND OTHER REGS
         BR    R14                   RETURN TO WRITE/DISCARD RECORD
         TITLE 'I E F U 8 3  ---  TYPE 14/15 - MOUNT ACCOUNTING'
*---------------------------------------------------------------------*
*                                                                     *
*   TYPE 14 / 15 RECORDS (CLOSE / EOV RECORDS)                        *
*                                                                     *
*    - MOUNT ACCOUNTING FOR TAPE                                      *
*    - MOUNT ACCOUNTING FOR 3330 MOD1 (NON PERMANENTLY RESIDENT ONLY) *
*                                                                     *
* OPTIONS:   SUPPRESS VIO AND PERMANENTLY RESIDENT DASD RECORDS       *
*            SUPPRESS NON-MOUNT CHARGED RECORDS                       *
*            SUPPRESS ALL RECORDS (14 OR 15)                          *
*                                                                     *
*   IT IS ASSUMED THAT THE MOUNT COUNTS ARE WRITTEN IN SOME           *
*   OTHER RECORD WHEN THE SUPPRESS ALL OPTIONS IS SELECTED.           *
*                                                                     *
*       FLAGS ARE SET/CLEARED IN THE HIGH BYTE OF 'SMF14NEX'          *
*         (NUMBER OF EXTENTS IN EACH UCB ENTRY)                       *
*         X'80' - PERMANENTLY RESIDENT DRIVE                          *
*         X'40' - THIS UCB ENTRY COUNTED AS A MOUNT (BY IEFU83)       *
*                                                                     *
* 'SMF14UID' USED AS FOOTPRINT FOR ERRORS                             *
*    - CLEARED TO ZEROS AT ENTRY                                      *
*    - CODES/FLAGS SET TO TRACK PROGRAM PATHS                         *
*     +0 - ERROR INDICATOR                                            *
*          X'01' - NO UCB SEGMENTS IN RECORD                          *
*          X'02' - UNABLE TO MAP CUU -> UCB ADDRESS                   *
*          X'03' - UNABLE TO FIND MOUNT WORK AREA                     *
*     +1 - FLAGS                                                      *
*          X'80' - TABLE OVERFLOW                                     *
*          X'01' - MOUNT EXISTS IN RECORD                             *
*                                                                     *
*         (SEP MOUNT COUNTS FOR TAPE/DISK - DIFFERENT CHARGES)        *
*         (MOUNTS ARE ONLY OVER JOB -                                 *
*            SAME VOLUME ON SAME DEVICE IS 1 MOUNT EVEN IN            *
*            DIFFERENT STEPS)                                         *
*                                                                     *
*       FOLLOWING SEQUENCE:                                           *
*         VOLUME A ON UNIT 1   (COUNTS AS 1 MOUNT)                    *
*         VOLUME A ON UNIT 2   (COUNTS AS 1 MOUNT)                    *
*         VOLUME A ON UNIT 1   (DOES THIS COUNT??? - YES)             *
*         (WHEN VOLUME SEEN MUST SEARCH ALL UNITS AND                 *
*          DELETE FROM ANY IT'S ON SO WILL BE MOUNT NEXT TIME)        *
*         (UNLESS ON SAME UNIT AS LAST TIME...)                       *
*                                                                     *
*   ----- SERIALIZATION OF MOUNT WORK AREA:                           *
*      BEFORE AND AFTER THE JOB-STEP STARTS, ONLY THE INITIATOR       *
*      IS RUNNING.                                                    *
*                                                                     *
*      DURING THE JOB-STEP - ALWAYS USE CDS OR CS                     *
*                                                                     *
*                                                                     *
*   ... DON'T SAVE DEVICE ADDRESSES (USE UCB ADDRESSES)               *
*       - DEVICE ADDRESS IS LAST PATH STARTED...                      *
*       - DEVICE ADDRESS WILL CHANGE IF DDR SWAP DONE...              *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*  LOGIC                                                              *
*   - RETURN CODE = SUPPRESS RECORD                                   *
*   - SCAN EXENTS (FOR EACH UCB EXTENT)                               *
*      - CLEAR X'C0' FLAGS IN SMF14NEX                                *
*      - IF UNIT ADDRESS = X'0FFF' (VIO) THEN SKIP                    *
*      - COMPUTE UCB ADDRESS FROM DEVICE ADDRESS                      *
*          - (NOT FOUND? -> SET RETURN CODE = WRITE RECORD??)         *
*      - IF DEVICE TYPE = DASD THEN                                   *
*            SET X'80' FLAG IF PERM RES                               *
*            TO NEXT SLOT (NON-MOUNT)                                 *
*      - FIND MOUNT WORK AREA (OACJSUVT/OACACTWK)                     *
*            (IF NOT FOUND SET RETURN CODE = WRITE RECORD, EXIT)      *
*            (WTO ??? OR DEFINE NEW BITS ???)                         *
*      - SCAN MOUNT TABLE FOR VOLUME MATCH                            *
*         IF MATCH & UNIT MATCHES -> NO MOUNT.                        *
*         ELSE CLEAR VOLUME                                           *
*      - SCAN MOUNT TABLE FOR UNIT MATCH                              *
*         IF MATCH REPLACE VOLUME;                                    *
*            UPDATE MOUNT COUNT (TAPE/DASD);                          *
*            SET UCB ENTRY FLAG FOR MOUNT (X'40');                    *
*            TO NEXT ENTRY.                                           *
*      - SCAN MOUNT TABLE FOR 0 UNIT                                  *
*         IF MATCH SET UCB ADDRESS / VOLUME SER;                      *
*            COUNT MOUNT;                                             *
*            SET UCB ENTRY FLAG FOR MOUNT (X'40');                    *
*            TO NEXT ENTRY;                                           *
*      - SET OVERFLOW; NO MOUNT; (??)                                 *
*      - IF MOUNT THEN SET X'40' FLAG IN ENTRY;                       *
*        SET RETURN CODE = WRITE RECORD                               *
*      - ON TO NEXT ENTRY                                             *
*        (RETURN FROM IEFU83)                                         *
*                                                                     *
* REGISTER USAGE:                                                     *
*  R0  -                                                              *
*  R1  -                                                              *
*  R2  - CDS (1ST 4 CHARS OF VOLSER)                                  *
*  R3  - CDS (LAST 2 CHARS OF VOLSER/UCB ADDRESS)                     *
*  R4  - # OF UCB ENTRIES LEFT TO PROCESS                             *
*  R5  - @ CURRENT UCB ENTRY IN SMF RECORD                            *
*  R6  - @ SMF RECORD (IF ANY)                                        *
*  R7  - PRELIMINARY RETURN CODE (0 OR 4) (OR ERROR CODE?)            *
*  R8  -                                                              *
*  R9  - @ MOUNT AREA IN OACACTWK (OR ZERO)                           *
*  R10 - INTERNAL LINKAGE                                             *
*  R11 - @ W# OR ZERO (IF NONE)                                       *
*  R12 - @ IEFU83 (PROGRAM BASE)                                      *
*  R13 - @ ORIG SAVEAREA OR @ W#SAVE                                  *
*  R14 - WORK (CDS)                                                   *
*  R15 - WORK (CDS)                                                   *
*                                                                     *
*---------------------------------------------------------------------*
         OACINUSE ,
R14$     DC    0H'0'
R15$     DC    0H'0'
         XC    SMF14UID,SMF14UID  CLEAR FOOTPRINT
         SR    R9,R9              NO OACACTWK MOUNT AREA YET
         LA    R7,4               ASSUME SUPPRESS RECORD
         SR    R5,R5              CLEAR FOR IC
         IC    R5,SMF14SDC        LENGTH OF DEB/DCB SECTION (CUR CONST)
         LA    R5,SMFDCBDE(R5)    @ 1ST UCB ENTRY
         SR    R0,R0              CLEAR FOR IC
         IC    R0,SMF14SUC        GET UCB SEGMENT SIZE
         SR    R4,R4              CLEAR FOR ICM
         ICM   R4,B'0001',SMF14NUC NUMBER OF UCB SEGMENTS
         BNZ   R14$ULP            BIF AT LEAST ONE UCB SEGMENT
         MVI   SMF14UID,X'01'     SET SYMPTOM CODE
R14$WRT  SR    R7,R7              FORCE RECORD WRITE
         B     EXIT                AND EXIT IEFU83
         SPACE 1
         OACUSING SMF14UCB,R5
R14$ULP  NI    SMF14NEX,255-X'C0' CLEAR RES, MOUNT FLAGS
         CLC   SMFUCBCH(2),=X'0FFF'  VIO ADDRESS?
         BE    R14$LNXT           BIF VIO, SKIP THIS UCB
         CLI   SMFUCBTY+UCBTBYT3-UCBTYP,UCB3DACC DASD DEVICE?
         BNE   R14$NDA            BIF NOT DASD
         CLI   SMFUCBTY+UCBTBYT4-UCBTYP,X'09' 3330 MOD 1?
         BNE   R14$LNXT           BIF NOT 3330 MOD1, SKIP THIS UCB
         SPACE 1
*---             CONVERT DEVICE ADDRESS INTO UCB ADDRESS           ---*
R14$NDA  L     R14,CVTPTR         GET CVT PNTR
         OACUSING CVTMAP,R14
         L     R15,CVTIXAVL       @ IOS COMMUNICATIONS AREA
         OACUSING IOCOM,R15
         LH    R2,SMFUCBCH        CUU FOR DEVICE
         L     R1,IOCOMEX         @ IOS COMMUNICATIONS EXTENSION
         OACUSING IOX,R1
         CLM   R2,B'0010',IOXHICH VALID CHANNEL?
         BH    R14$UCBB           BIF INVALID CHANNEL, BAD DEV ADDR
         OACDROP R1
         SRDL  R2,3               LOW 3 BITS OF DEVICE ADDR
         SRL   R3,29               TO LOW 3 BITS OF R3
         A     R2,IOCUCBBM        + @ IOS UNIT BIT MAP
         OACDROP R15
         LA    R15,X'80'          BIT FOR TEST
         SRL   R15,0(R3)          GET BIT TO TEST
         IC    R3,0(,R2)          GET BYTE CONTAINING BIT TO TEST
         NR    R15,R3             TEST IF VALID UNIT ADDRESS
         BZ    R14$UCBB           BIF INVALID UNIT ADDRESS
         XR    R2,R2              CLEAR FOR IC
         XR    R3,R3              CLEAR FOR IC
         L     R1,CVTILK1         CHAN/CNTL UNIT LOOKUP TABLE
         IC    R2,SMFUCBCH        GET CHANNEL/THIS DEVICE
         IC    R2,0(R2,R1)        GET CHANNEL INDEX PORTION
         IC    R3,SMFUCBUA        GET CONTROL UNIT/DEVICE NIBBLES
         SRL   R3,4               ISOLATE CONTROL UNIT
         ALR   R2,R3              CHANNEL CONSTANT PLUS CONTROL UNIT
         ALR   R2,R2              2 * (C.U. + CHANNEL CONSTANT)
         ALR   R2,R1              POINT TO C.U. INDEX
         ICM   R2,B'0011',0(R2)   GET CONTROL UNIT INDEX
         IC    R3,SMFUCBUA        UNIT/DEVICE AGAIN
         N     R3,=XL4'0000000F'  ISOLATE DEVICE ADDR
         ALR   R2,R3              C.U. INDEX PLUS DEV. ADDR
         ALR   R2,R2              NOW TIMES TWO
         AL    R2,CVTILK2         PLUS HALFWORD TABLE ADDR
         ICM   R3,B'0011',0(R2)   GET UCB ADDRESS
         BZ    R14$UCBB            BIF CAN'T FIND UCB
         CLM   R3,B'0011',=X'FFFF' NULL UCB PTR
         BE    R14$UCBB            BIF CAN'T FIND UCB
         CLI   UCBID-UCB(R3),X'FF' LOOK LIKE REAL UCB?
         BE    R14$UCBG            BIF GOOD UCB
         OACDROP R14
R14$UCBB MVI   SMF14UID,X'02'      SYMPTOM CODE (BAD UCB)
         B     R14$WRT              FORCE RECORD WRITE, EXIT
R14$UCBG TM    UCBSTAT-UCB(R3),UCBPRES PERMANENTLY RESIDENT?
         BZ    R14$MT             BIF NOT PERM RES, FIND MOUNT AREA
         OI    SMF14NEX,X'80'     SET OAC FLAG/SAY PERM. RES. 3330
         B     R14$LNXT             AND SKIP THIS UCB/ENTRY
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*   FIND THE MOUNT ACCOUNTING AREA --                                 *
*     IF TCBUSER ^= 0 (AND POINTS TO OACJSUVT)                        *
*        IF OACJSUVT (MOUNT SLOT) ^= 0 (AND POINTS TO OACMNTWK)       *
*           THEN AREA FOUND, ELSE TRY NEXT HIGHER TASK. (TCBOTC)      *
*                                                                     *
*    SINCE THE MOUNT ACCOUNTING AREA IS BUILD FROM IEFUJI             *
*    (JOB INITIATION SMF EXIT) THE INITIATOR TASK WILL BE             *
*    THE ONLY TCB WITH A TCBUSER/OACJSUVT WHICH CONTAINS              *
*    A MOUNT AREA.  IF NO MOUNT AREA IS FOUND AFTER ALL               *
*    POSSIBLE TASKS HAVE BEEN SEARCHED THEN EXIT IEFU83.              *
*    (SKIP MOUNT ACCOUNTING SINCE IEFUJI NEVER RAN FOR THIS           *
*     JOB)                                                            *
*                                                                     *
*---------------------------------------------------------------------*
         OACINUSE ,
R14$MT   LTR   R9,R9              ALREADY HAVE OACACTWK MOUNT AREA?
         BNZ   R14$MTFD           BIF ALREADY HAVE AREA
         L     R1,PSATOLD         @ CURRENT TCB
         OACUSING TCB,R1
R14$MTLP DC    0H'0'
         AIF   (&TEST).A1
         ICM   R9,15,TCBUSER      ANY OACJSUVT HERE?
         AGO   .A2
.A1      L     R9,TCBFSA          @ FSA FOR TESTING
         ICM   R9,15,0(R9)        FAKE TCBUSER IN 1ST WORD OF FSA
.A2      BZ    R14$MTNX           BIF NO OACJSUVT, TRY HIGHER TASK
         OACUSING OACJSUVT,R9
         CLC   JSUVTID,=CL8'OACJSUVT' REALLY OACJSUVT?
         BNE   R14$MTNX           BIF NOT OACJSUVT, TRY HIGHER TASK
         CLC   JSUVTLEN,=AL3(JSUVTACT+L'JSUVTACT-OACJSUVT) LENGTH OK?
         BL    R14$MTNX           BIF FIELD MISSING, TRY HIGHER TASK
         ICM   R9,15,JSUVTACT     @ OACACTWK
         OACDROP R9
         BZ    R14$MTNX           BIF NO OACACTWK, TRY HIGHER TASK
         OACUSING OACACTWK,R9
         CLC   ACTPID,=CL8'OACACTWK' REALLY OACACTWK?
         BNE   R14$MTNX           BIF NOT OACACTWK, TRY HIGHER TASK
         ICM   R0,15,ACTPMTL      ANY MOUNT AREA?
         BZ    R14$MTNX           BIF NO MOUNT AREA, TRY HIGHER TASK
         ICM   R9,15,ACTPMTA      @ MOUNT AREA
         OACDROP R9
         BNZ   R14$MTFD           BIF HAVE MOUNT AREA
R14$MTNX ICM   R1,15,TCBOTC       @ PARENT TASK
         BNZ   R14$MTLP           BIF PARENT EXISTS, CONTINUE SEARCH
         MVI   SMF14UID,X'03'     SYMPTOM CODE (NO MOUNT AREA)
         B     R14$WRT             FORCE RECORD WRITE, EXIT
         OACDROP R1
         OACUSING ACTMT,R9
R14$MTFD DC    0H'0'
         EJECT ,
         OACINUSE ,
*--- FORCE WRITE OF ALL RECORDS WHICH ARE TAPE OR NON-RES DASD     ---*
         SR    R7,R7              FORCE WRITE
         SPACE 1
*---       SCAN MOUNT TABLE FOR THIS VOLUME                        ---*
R14$SCVL ICM   R2,B'1111',SMFSRTEV   1ST 4 CHARS OF VOLSER
         ICM   R3,B'1100',SMFSRTEV+4 LAST 2 CHARS (& HAVE UCB ADDR)
         BAL   R10,R14$SCN        SCAN MOUNT TABLE
         BNP   R14$SCUT           BIF VOLUME UNKNOWN, SEARCH FOR UNIT
         OACUSING ACTMTE,R1
         LM    R14,R15,ACTMTE     GET ENTRY FOR COMPARE
         CLR   R2,R14             SAME VOLUME?
         BNE   R14$SCNN           BIF NOT SAME VOLUME, CONTINUE SCAN
         CLR   R3,R15             SAME VOLUME & UNIT?
         BE    R14$LNXT           BIF BOTH SAME VOL & UNIT, NOT MOUNT
         LR    R14,R15            COPY LAST PART OF VOL/UCB ADDR
         XR    R14,R3             COMPARE LAST PARTS OF VOLUMES
         N     R14,=X'FFFF0000'   JUST SAME VOLUME?
         BNE   R14$SCNN           BIF NOT SAME VOLUME, CONTINUE SCAN
         LR    R0,R3              SAVE MY UCB ADDR & PART OF VOLSER
         SR    R14,R14            CLEAR TO CLEAR ENTRY EXCEPT FOR
         N     R15,=X'0000FFFF'     UCB ADDRESS
         N     R3,=X'FFFF0000'    ZERO OUT UCB ADDR HERE
         OR    R3,R15             ADD HIS UCB ADDR TO COMPARAND
         CDS   R2,R14,ACTMTE      DISMOUNT THIS VOLUME
         LR    R3,R0              RESTORE UCB ADDR AND PART OF VOLSER
         BNE   R14$SCVL           BIF CHANGED, RETRY SEARCH
         OACDROP R1
         SPACE 1
*---       SCAN MOUNT TABLE FOR UNIT (UCB ADDRESS)                 ---*
R14$SCUT BAL   R10,R14$SCN        SCAN MOUNT TABLE
         BNP   R14$SCEE           BIF NEW UNIT, SCAN FOR EMPTY ENTRY
         OACUSING ACTMTE,R1
         CLM   R3,B'0011',ACTMTEUA SAME UNIT (UCB ADDRESS)?
         BNE   R14$SCNN           BIF NOT SAME UNIT, CONTINUE SCAN
         LM    R14,R15,ACTMTE     GET CURRENT CONTENTS
         LR    R0,R3              COPY UCB ADDR
         N     R0,=X'0000FFFF'     ONLY WANT UCB ADDRESS
         N     R15,=X'FFFF0000'     AND LAST 2 CHARS OF VOLUME
         OR    R15,R0             CURRENT VOLUME/MY UCB ADDRESS
         CDS   R14,R2,ACTMTE      SET NEW VOLUME & OLD UNIT
         BNE   R14$SCN            BIF CHANGED, RETRY SEARCH
         OACDROP R1
*---       COUNT THIS MOUNT (TAPE/DASD)                            ---*
R14$MNT  LA    R1,ACTMTCTP        ASSUME TAPE
         CLI   SMFUCBTY+UCBTBYT3-UCBTYP,UCB3DACC DASD DEVICE?
         BNE   *+8
         LA    R1,ACTMTCDA        ELSE DASD
         L     R14,0(,R1)         GET CURRENT MOUNT COUNT
R14$MTCT LA    R15,1              INCR COUNT BY 1
         ALR   R15,R14            NEW COUNT
         CS    R14,R15,0(R1)      SWAP NEW FOR OLD
         BNE   R14$MTCT           BIF CHANGED, RETRY COUNT INCR
         OI    SMF14NEX,X'40'     SET MOUNT CHARGED
         OI    SMF14UID+1,X'01'   FLAG RECORD TOO
         SR    R7,R7              FORCE RECORD WRITE
         B     R14$LNXT            AND ON TO NEXT ENTRY
         SPACE 1
*---       FIND EMPTY MOUNT ENTRY (FOR NEW UNIT)                   ---*
R14$SCEE SR    R14,R14            ZERO FOR UNIT COMPARE
         SR    R15,R15             ZERO FOR CDS
         BAL   R10,R14$SCN        SCAN MOUNT TABLE
         BNP   R14$SOV
         OACUSING ACTMTE,R1
         CL    R14,ACTMTE         ZERO ENTRY? (EMPTY ENTRY?)
         BNE   R14$SCNN           BIF NOT SAME UNIT, CONTINUE SCAN
         CL    R15,ACTMTE+4       ZERO ENTRY? (EMPTY ENTRY?)
         BNE   R14$SCNN           BIF NOT SAME UNIT, CONTINUE SCAN
         CDS   R14,R2,ACTMTE      SET NEW VOLUME & OLD UNIT
         BNE   R14$SCN            BIF CHANGED, RETRY SEARCH
         B     R14$MNT            GO COUNT MOUNT
         OACDROP R1
         SPACE 1
*---         TABLE OVERFLOW - SET OVERFLOW FLAG                    ---*
R14$SOV  OI    SMF14UID+1,X'80'   FLAG OVERFLOW IN RECORD
         SR    R7,R7              FORCE RECORD WRITE
         L     R14,ACTMTF
R14$SOV1 LR    R15,R14
         O     R15,=AL1(ACTMTFO,0,0,0) SET OVERFLOW FLAG
         CS    R14,R15,ACTMTF     SET FLAG
         BNE   R14$SOV1           BIF CHANGED, RETRY
         SPACE 1
         OACDROP R5
R14$LNXT SR    R0,R0
         IC    R0,SMF14SUC        SIZE OF UCB SEGMENTS
         ALR   R5,R0              @ NEXT UCB SEGMENT (IF MORE EXIST)
         BCT   R4,R14$ULP         PROCESS ALL UCB SEGMENTS
         B     EXIT                AND THEN EXIT
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
* R14$SCN/R14$SCNN - SCAN MOUNT TABLE ROUTINE                         *
*                                                                     *
* ENTRY/EXIT:  R0   - COUNT OF SLOTS LEFT TO SCAN                     *
*              R1   - @ OF SLOT                                       *
*              R10  - RETURN ADDRESS                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
R14$SCN  LH    R0,ACTMTSLN        # OF SLOTS
         LA    R1,ACTMTE-ACTMTEL  @ 1ST ENTRY - 1 ENTRY LENGTH
R14$SCNN LTR   R0,R0              ANY SLOTS LEFT?
         BZR   R10                RIF NO SLOTS LEFT, CC ZERO
         BCTR  R0,0               DCR ENTRYS LEFT
         LA    R1,ACTMTEL(,R1)    @ OF ENTRY
         BR    R10                RETURN, CC POSITIVE
         OACDROP R9
         TITLE 'I E F U 8 3  ---  TYPE 21 - ERROR STATISTICS BY VOLUME'
*---------------------------------------------------------------------*
*                                                                     *
*  RECORD TYPE 21 - ERROR STATISTICS BY VOLUME                        *
*       TAPE ERROR STATISTICS (FROM TYPE 21 RECORD)                   *
*   (OLD MVT IEC209I MSG)                                             *
*   JJJJJJJ VVVVVV CUU TR=NNN,TW=NNN,EG=NNN,CL=NNN,N=000,SIO=00000    *
*    . GETMAIN WORK AREA (SAVEAREA, WTO AREA)                         *
*      (IF GETMAIN FAILS, EXIT -> WRITE RECORD)                       *
*    . BUILD/ISSUE WTO                                                *
*    . FREE WORK AREA                                                 *
*    . EXIT FROM IEFU83, (WRITE RECORD FOR NOW)                       *
*                                                                     *
*---------------------------------------------------------------------*
         OACINUSE ,
R21$     BAL   R10,G$SAVE         GET W# AREA
         BNZ   EXIT               BIF NO STORAGE, SKIP WTO
         OACUSING W#,R11
         XC    W#WTO(L'W#WTO),W#WTO INIT WTO TO ALL ZEROS
         MVC   W#WTO+WTO#21V(6),SMF21VOL
         UNPK  W#WTO+WTO#21CU(4),SMF21CA(3)
         TR    W#WTO+WTO#21CU(3),HEX
         MVI   W#WTO+WTO#21CU+3,C' '
         SR    R0,R0
         IC    R0,SMF21TR
         CVD   R0,W#DWD
         UNPK  W#WTO+WTO#21TR(3),W#DWD+6(2)
         IC    R0,SMF21TW
         CVD   R0,W#DWD
         UNPK  W#WTO+WTO#21TW(3),W#DWD+6(2)
         IC    R0,SMF21NB
         CVD   R0,W#DWD
         UNPK  W#WTO+WTO#21NB(3),W#DWD+5(3)
         ICM   R0,B'0011',SMF21ERG
         CVD   R0,W#DWD
         UNPK  W#WTO+WTO#21EG(5),W#DWD+5(3)
         ICM   R0,B'0011',SMF21CLN
         CVD   R0,W#DWD
         UNPK  W#WTO+WTO#21CL(5),W#DWD+5(3)
         ICM   R0,B'0011',SMF21SIO
         CVD   R0,W#DWD
         UNPK  W#WTO+WTO#21IO(5),W#DWD+5(3)
         OC    W#WTO(WTO#21L),WTO#21 REST OF WTO + FIX ZONES
         WTO   MF=(E,W#WTO)       ISSUE WTO
         LA    R7,0               WRITE SMF RECORD
         B     EXIT
         OACDROP R11
         TITLE 'I E F U 8 3  ---  TYPE 222 - ACF LID ALTERATION LOG   '
*---------------------------------------------------------------------*
*                                                                     *
*  RECORD TYPE 222 - ACF LID ALTERATION LOG                           *
*       CHECK FOR JOBNAME CSYSPCNF                                    *
*         IF NOT EQUAL EXIT WITH PREMISSION TO WRITE                  *
*         IF FUNCTION IS NOT REPLACE, EXIT WITH PERMISSION TO WRITE   *
*         IF = CHECK KEY TO SEE IF TRYING TO ALTER A CIS OR CSYS      *
*             IF SO EXIT WITH PERMISSION TO WRITE                     *
*             IF NOT, DENY PERMISSION TO WRITE                        *
*                                                                     *
*---------------------------------------------------------------------*
         OACINUSE ,
R222$    CLC   ACLMFJBN-ACFSMFL(8,R6),=CL8'CACPAPG#'
         BNE   R222$WT
         CLI   ACLMFCN-ACFSMFL(R6),ACLMFREP A REPLACE REQUEST?
         BNE   R222$WT            IF NOT, GIVE PERMISSION TO WRITE
         CLC   ACLMFKEY-ACFSMFL(3,R6),=CL3'CIS' IS IT CIS
         BE    R222$WT            IF SO WRITE IT
         CLC   ACLMFKEY-ACFSMFL(4,R6),=CL4'CSYS'
         BE    R222$WT            IF SO WRITE IT
         LA    R7,4               DENY PERMISSION TO WRITE
         B     EXIT1
R222$WT  SR    R7,R7              GIVE PERMISSION TO WRITE
         B     EXIT1
         TITLE 'I E F U 8 3  ---  G$SAVE - WORK AREA GETMAIN RTN'
*---------------------------------------------------------------------*
*                                                                     *
* G$SAVE - GET SAVE / WORK AREA (IF DON'T ALREADY HAVE ONE)           *
*                                                                     *
* ENTRY:  R10 - RETURN ADDRESS                                        *
*         R11 - @ W# OR ZERO IF NONE EXISTS                           *
*         R12 - @ IEFUJI (PROGRAM BASE)                               *
*         R13 - @ OS SAVE AREA (ORIG OR W#)                           *
*                                                                     *
* EXIT:   R15 - RETURN CODE                                           *
*               0 - SUCCESS, ^0 - FAILED (CONDITION CODE SET)         *
*         R11 - @ W#                              (ONLY IF RC = 0)    *
*         R13 - @ W#SAVE (AND SAVE AREAS CHAINED) (ONLY IF RC = 0)    *
*                                                                     *
*---------------------------------------------------------------------*
         OACINUSE ,
G$SAVE   LTR   R11,R11            ALREADY HAVE W# AREA?
         BNZ   G$SAVEZ            RIF HAVE W# AREA, RETURN CODE 0
         LA    R0,W#L             LENGTH OF W# AREA
         GETMAIN RC,LV=(0)        GET STORAGE FOR W#
         LTR   R15,R15            TEST GETMAIN RETURN CODE
         BNZR  R10                RIF GETMAIN FAILED, RETURN NO STORAGE
         LA    R11,0(,R1)         CLEAR HIGH BYTE, SET R11 = @ W#
         ST    R13,4(,R11)        LINK W#SAVE TO ORIG SAVEAREA
         ST    R11,8(,R13)         AND ORIG TO W#SAVE
         LR    R13,R11            USE W#SAVE AS SAVE AREA NOW
G$SAVEZ  SR    R15,R15            RETURN CODE ZERO
         BR    R10                 AND RETURN
         TITLE 'I E F U 8 3  ---  CONSTANTS / MESSAGES / WORKAREA'
*                       VVVVVV CUU
WTO#21   WTO   'OAC209I            TR=000,TW=000,EG=00000,CL=00000,N=00X
               0,SIO=00000',MF=L,ROUTCDE=(11)
WTO#21L  EQU   *-WTO#21
WTO#21V  EQU   4+8
WTO#21CU EQU   4+15
WTO#21TR EQU   4+22
WTO#21TW EQU   4+29
WTO#21EG EQU   4+36
WTO#21CL EQU   4+45
WTO#21NB EQU   4+53
WTO#21IO EQU   4+61
         SPACE 1
HEX      EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 1
         LTORG ,
         SPACE 2
W#       DSECT ,
W#SAVE   DC    9D'0'
W#DWD    DC    D'0'
W#WTO    DC    CL133' '
         DC    0D'0'
W#L      EQU   *-W#
         SPACE 2
         TITLE 'I E F U 8 3  ---  OAC DSECTS'
         OACJSUVT ,
IEFU83   CSECT
         OACACTWK ,
         OACREGS ,
         TITLE 'I E F U 8 3  ---  SYSTEM DSECTS'
         PRINT NOGEN
         IHAPSA ,
         CVT   DSECT=YES
         IKJTCB ,
UCB      DSECT
         IEFUCBOB ,
         IECDIOCM ,
         IECDIOCX ,
         PRINT GEN
         TITLE 'I E F U 8 3  ---  SMF RECORD DSECT'
SMF      DSECT
         IFASMFR 14
         ORG   SMF
         IFASMFR 21
         TITLE 'I E F U 8 3  --- ACF2 DSECTS'
         ACFSMFL
         LIDREC
         END
//*KED.SYSLMOD DD DISP=SHR,DSN=SYS1.AOACDLIB,SPACE=,
//* UNIT=3350,VOL=SER=MVSCAT
//LKED.SYSIN   DD *
    IDENTIFY IEFU83('SM01368')
    ENTRY IEFU83
    NAME IEFU83(R)
//*
//C   EXEC PGM=COMPARE,PARM='IEFU83$,IEFU83'
//STEPLIB  DD DISP=SHR,DSN=SYS5.MSSLOAD
//SYSPRINT DD SYSOUT=*
//I1       DD DISP=(SHR,PASS),DSN=&&GOSET
//I2       DD DISP=SHR,DSN=SYS1.AOACDLIB
//*
//C   EXEC PGM=COMPARE,PARM='IEFU83$(IEFU83),IEFU83(IEFU83)'
//STEPLIB  DD DISP=SHR,DSN=SYS5.MSSLOAD
//SYSPRINT DD SYSOUT=*
//I1       DD DISP=(SHR,PASS),DSN=&&GOSET
//I2       DD DISP=SHR,DSN=SYS1.LPALIB,UNIT=3350,VOL=SER=MVSRES
//
