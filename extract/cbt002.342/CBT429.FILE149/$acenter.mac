1                         EXTERNAL ENTRY MACRO

 NAME     OACENTER  REGEQU= YES,
                    BASE= R10,
                    PARM= (R9,LR)
                    ENTRYS= ,
                    ENTRYR= ,
                    EXIT= ,
                    DSECT= ,
                    WORK=  ,
                    STACK= ,
                    ROUND= NO,
                    SP= 1,
                    PLIX= NO,
                    ID= ,
                    DATE= ,
                    PRINT=

          NAME      Major name, see CSECT= and ENTRY=

          REGEQU = YES or no
                     If YES is coded the standard register equates are
                     generated as part of the macro expansion

          BASE= register
                     The register to be used as the base for this
                     routine.  the default is R10 to allow for PLIX
                     callable subroutines in which R12 must be preserved
                     and for the OAC staking convention in which R12
                     points to the base of the global work area.

          PARM= (REGISTER,LR OR L,DSECT-NAME)
                     The register into which the contents of R1 (if LR o
                     if the second operand is ommited) or the contents o
                     the word pointed to by R1(if L) on entry is to be
                     placed.  If no register is coded R1 is ignored and
                     may be destroyed. If a DSECT-NAME is coded, the
                     macro will do an OACUSING DSECT-NAME,REGISTER.

          ENTRYS= NAME or NAME LIST
                     A list of alternate entry points.  An ID string and
                     label will be generated for each name in the list.
                     If ENTRY=YES was coded, an ENTRY statement will als
                     be generated for each name.

          ENTRYR= register
                     The register which will contain an indication of
                     which entry was used to call this routine:
                    0 for main entry
                    4 for first secondary entry
                    8 for second secondary entry
                    ETC.

1         EXIT= (name,rc)
                    name
                     The name of the exit routine to be generated by thi
                     macro.  If no name is given, no routine
                         will be generated
                    rc   (register) or address
                     The register which will contain the return code on
                     entry to the exit.  or the address of a fullword
                     which will contain the return code on entry to the
                     exit.

          DSECT= name
                     The name of the DSECT which will contain the
                     workarea bought by this macro.  Unless DSECT=name i
                     coded only the length operand of WORK= may be coded
                     and STACK= may not be coded.  See the section at th
                     end of this document for the format of the area
                     bought by this macro.  If a DSECT is generated, the
                     macro will do an OACUSING on R13 if no STACK= was
                     coded and an OACUSING on R12 if a STACK= was coded.

          WORK=(reserved-length,macro-parm,label-name)

                    reserved-length
                         The number of bytes to be reserved in the
                         workarea obtained by this macro. See DSECT=
                         for a discussion of its  position in the workar

                    macro-parm
                         If this argument is coded, the user defined
                         macro OACWORK is expanded with this parm as
                         part of the DSECT generated by OACENTER when
                         DSECT= is coded. See the discussion of workarea
                         format for its position in th workarea. If
                         macro-parm is not coded, the macro is not
                         expanded.

                    label-name
                         The name of a label to be generated immediatly
                         preceeding the reserved area (if any) generated
                         as part of the work DSECT.

          ROUND= YES or NO
                     If no ROUND=YES is coded, and STACK= is coded, the
                     length of the stack obtained is increased to extend
                     the resulting size of the work area obtained by thi
                     macro to the nearest 4K boundary.

          SP= subpool
                     The subpool for the GETMAIN to obtain the workarea
                     requested by this macro.  NOTE:  if PLIX=YES is
                     coded The workarea will be obtained from the DSE an
                     this keyword will be ignored.

1         STACK= (length,name,error-routine-name,ABEND)

                    length
                        The number of bytes to be reserved in the
                        workarea for an OAC internal stack. This
                        length will allways be increased by 72 bytes
                        and rounded to a multible of 8. See the
                        discussion of OAC internal stacks at the end
                        of this document.

                    name
                        The name to be used as a label on the
                        DC 0d'0' that is the begining of the stack area
                        in the generated dsect. If no name is coded,
                        no routine will be generated.

                    error-routine-name
                         The name of the stack overflow routine to be
                         generated by this macro.  This routine will
                         generate a message:  "OAC900 stack overflow in
                         NAME" and terminate as directed by the next
                         parm.

                     ABEND or return code
                        ABEND
                             The generated stack overflow routine
                             will terminate with an OAC stack overflow
                             abend U=900
                        return code
                             The generated stack overflow routine
                             will return to caller with the specified
                             return code.
          PLIX= YES or NO
                     If PLIX=YES is coded, The entry code and the exit
                     routine will be generated in accordance with plix
                     conventions.

1         ID =
                     Tne specified string will be generated as a DC C'&I
                     ' at the begining of the generated entry code,
                     followed immediatly by the date of assembly.  If no
                     name is coded, the name of the entry point is used.

          DATE =
                     Overides the date of assembly in the DC C at the
                     beginning of the generated entry code.  This keywor
                     is intended only for use in generating modules to b
                     run against compare.  If it is coded an MNOTE
                     7,REMOVE DATE= BEFORE FINAL ASSEMBLY is generated.

          PRINT=  ALL, or SHORT, or NONE, or empty
                    ALL-     Full macro expansion (PRINT ON,GEN)
                    SHORT-   Short form of macro. No comments and
                             regequ suppressed.
                    NONE-    Only code will be printed.
                    EMPTY-   The value of &OACPRTG will determine action



          OAC STACK CONVENTIONS:

          R11 points to the "current" stack element.
          R12 points to the base of the workarea obtained by this macro.
          R13 points to the next available byte on the stack.

          Overflow checks are done in such a way that R13 will point
          to at least 72 bytes of workarea.

          a stack element consists of:
          DC 8D'0'    a register save area containing the results of a
                      STM 0,15
          user requested work area: See OACSUB macro.

          The global C-symbol &OACSTMX is assumed to contain the address
          of a universally addressable word containing the address of
          the last valid byte of the stack area -71.

          The global C-symbol &OACSTER is assumed to contain the
          address of a universally addressable STACK overflow routine.

1                    ORGANIZATION OF WORK AREA:

   If no STACK= was coded the workarea will look like:

   name      DSECT                   only if DSECT=name was coded
             DC    9D'0'             standard OS save area
             DC    AL1(&SP)          the subpool of this workarea
             DC    AL3(length)       the length in bytes of this workare
             &WMAC                   only if WORK=(,wmac,) was coded
   wname     DC    0D'0'             only if WORK=(,,wname) was coded
             DC    0D'0',&lenXl1'0'  only if WORK=(len,,) was coded

             R13   will point to the base of the work area

             If STACK= was coded the workarea will look like:

   name     DSECT                    only if DSECT=name was coded
            DC    AL1(&SP)           subpool of this workarea
            DC    AL3(length)        the length in bytes of this workare
            DC    A(0)               R13 back chain
            DC    A(stackmax)        address of the end of the stack -71
            DC    A(stackerr)        address of the stack overflow routi
            L     R15,8(r12)         get address of stack overflow routi
            BR    R15                go to stack overflow routine
            &wmac                    only if WORK=(,wmac,) was coded
   wname    DC    0D'0'              only if WORK=(,,wname) was coded
            DC    0D'0',lenXL1'0'    only if WORK=(len,,) was coded
   sname    DC    0D'0'              only if STACK=(,sname,,) was coded
            DC    0D'0',lenXL1'0'    where len is calculated using the
                                     values of STACK= and ROUND= accordi
                                     to OAC internal stack conventions.

            R13   will point to the next available byte of the stack
            R12   will point to the base of the work area
            R11   will point to the first byte of the stack

            &OACSTMX  will contain  '8(R12)'  the address of stackmax
            &OACSTER  will contain  '16(R12)' the address of the stack
                                               overflow routine.
