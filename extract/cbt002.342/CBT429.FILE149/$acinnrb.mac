              LOAD ADDRESS/LOAD VALUE INNER MACRO

         OACINNRB type, target base, target offset,
                  target length, source,
                  WX=work register

  -- type
   The type operand must be one of the following character strings
   (or a variable symbol which is replaced by one of these):
    A - Address type     (set target to address of source)
    V - Value type       (set target to value in source)
    NI  - Bit            (change bits in byte of flags)
    OI  - Bit
    XI  - Bit
    MVI - Bit
    TM  - Bit

  -- target base
    This operand specifies the target base address.  This may
    be specified as in a register '(R3)' or as an expression
    'FURD+5'.  If this operand is null then the target is
    ???

  -- target offset
    This operand specifies the offset of the target from the
    target base.  This can be specified as null if the offset
    from the target base is zero.

  -- target length
    This operand specifies the length of the target.  This length
    is used to decide which type of store to generate (ST, STLH, STC)
    or what length to use for SS type instructions.  If the
    type is specified as A then only 4 should be specified as
    the target length.

  -- source
    This operand specifies the source.  If this is null then
    no code will be generated.  This may be specified as
    a register (in register notation) as in '(R5)',  as
    an expresion, as a self-defining term, or as a literal.
    Some self-defining terms are specially handled.  0 will
    generate a SR if the target is a register, or an XC if
    it is a storage location.  Self-defining terms less than
    4095 will be generated with a LA.  Others will cause
    a literal to be generated.  Expresions are assumed to
    be less than 4095 from some base register and a LA will
    generated.

  -- WX=work register
   This keyword specifies the work register to be used if required.
   The default for this keyword is R0, any register may be
   specified.


  This macro uses the value in '&OACNAME' to generate
  the name field of the first generated instruction.  Once
  this name has been generated once, '&OACNAME' is set to
  a null string.  Note that if this macro does not generate
  any instructions the value of '&OACNAME' will be unchanged
  from it's value at entry.

  The following are samples of the use of this macro.  A more
  complex example of usage is contained in OACCALL.

         MACRO
&NAME    SAMPLE &PARM,&MF=
         COPY  OACGBLS
&OACNAME SETC  '&NAME'
         . . .
         OACINNRB A,&MF(2),8,4,&PARM
         OACINNRB A,(R1),,4,&MF(2)
&OACNAME BAL  R14,MYRTN
         MEND

  This might generate:

    L1    SAMPLE FURD,MF=(E,X)
   +L1    LA  R0,FURD
   +      ST  R0,X+8
   +      LA  R1,X
   +      BAL R14,MYRTN

    L1    SAMPLE FURD,MF=(E,(R3))
   +L1    LA  R0,FURD
   +      ST  R0,8(R3)
   +      LR  R1,R3
   +      BAL R14,MYRTN

    L1    SAMPLE ,MF=(E,(R3))
   +L1    LR  R1,R3
   +      BAL R14,MYRTN

    L1    SAMPLE ,MF=(E,(R1))
   +L1    BAL R14,MYRTN

