/* REXX */

/*
Exec to test various RXVSAM functions with an ESDS.  Assumes the ESDS
has already been defined by exec RXVSETE
*/

ARG user
IF user = '' THEN user = USERID()

dsn = user ×× '.VSAMESDS'
log# = 1                    /* log record number */

/*
ADDRESS TSO "ALLOCATE FILE(SNAPDBUG) DSNAME('ZMXW009.SNAPDBUG') MOD"
IF rc \= 0 THEN
  DO
    SAY 'Allocate failed for SNAPDBUG with a return code of' rc
    EXIT rc
  END
*/

ADDRESS TSO "ALLOCATE FILE(VSAMFILE) DSNAME('"dsn"') SHR"
IF rc \= 0 THEN
  DO
    SAY 'Allocate failed for VSAMFILE with a return code of' rc
    EXIT rc
  END

rxvsam_result = RXVSAM('OPENOUTPUT','VSAMFILE','ESDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENOUTPUT failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

SAY '   ... working' TIME('N')
/*1*/
chartab = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
recs_written = 0
now = DATE('W') DATE('N') TIME('N')
DO i = 1 to 50
  char = SUBSTR(chartab,i,1)
  id = RIGHT(i,4,'0')
  fillchar = COPIES(char,8)
  MY_REC = 'Record' id '   ' fillchar '   ' now
  rxvsam_result = RXVSAM('WRITE','VSAMFILE',,'MY_REC')
  IF rxvsam_result = 0 THEN
    DO
      recs_written = recs_written + 1
    END
  ELSE
    DO
      log.log# = 'WRITE failed:'
      log# = log# + 1
      CALL log_errors
      SIGNAL close_and_exit
    END
END

log.log# =  recs_written 'records written successfully to' dsn
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after WRITE loop) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

log.log# = 'CLOSE after writing records was successful'
log# = log# + 1
SAY '   ... continuing' TIME('N')

rxvsam_result = RXVSAM('OPENINPUT','VSAMFILE','ESDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENINPUT failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END
/*1*/
rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = '1st record:'
    log# = log# + 1
    log.log# = '    ' my_rec
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'First READNEXT failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 1
DO FOREVER
  rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
  SELECT
    WHEN rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    WHEN rxvsam_result = 4 THEN
      DO
        log.log# = 'Last record:'
        log# = log# + 1
        log.log# = '    ' my_rec
        log# = log# + 1
        LEAVE
      END
    OTHERWISE
      DO
        log.log# = 'READNEXT (within loop) failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
  END  /* end select */
END

log.log# = recs_read 'records read'
log# = log# + 1
SAY '   ... finishing' TIME('N')

/*1*/

close_and_exit: NOP
rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'Final CLOSE failed:'
    log# = log# + 1
    CALL log_errors
  END

write_log_and_exit: NOP
log.log# = '   ... End of LOG'
SAY 'Display log? (Y/N)'
PULL answer
IF answer = 'Y' THEN
  DO i = 1 TO log#
    SAY log.i
  END

ADDRESS TSO "FREE FILE(VSAMFILE)"
/*
ADDRESS TSO "FREE FILE(SNAPDBUG)"
*/

EXIT
/*1*/
log_errors: nop

log.log# =  '  Return msg -->  ' rxvsam_returnmsg
log# = log# + 1
log.log# =  '  Error msg -->   ' rxvsam_vsamerrormsg
log# = log# + 1

RETURN

