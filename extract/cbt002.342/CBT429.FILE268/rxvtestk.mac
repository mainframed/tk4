/* REXX */

/*
Exec to test various RXVSAM functions with a KSDS.  Assumes the KSDS
has already been defined by exec RXVSETR
*/

ARG user
IF user = '' THEN user = USERID()

dsn = user ×× '.VSAMKSDS'
log# = 1                    /* log record number */

/*
ADDRESS TSO "ALLOCATE FILE(SNAPDBUG) DSNAME('ZMXW009.SNAPDBUG') MOD"
IF rc \= 0 THEN
  DO
    SAY 'Allocate failed for SNAPDBUG with a return code of' rc
    EXIT rc
  END
*/

ADDRESS TSO "ALLOCATE FILE(VSAMFILE) DSNAME('"dsn"') SHR"
IF rc \= 0 THEN
  DO
    SAY 'Allocate failed for VSAMFILE with a return code of' rc
    EXIT rc
  END

rxvsam_result = RXVSAM('OPENOUTPUT','VSAMFILE','KSDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENOUTPUT failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

SAY '   ... working' TIME('N')
/*1*/
chartab = 'abcdefghijklmnopqrst'
recs_written = 0
now = DATE('W') DATE('N') TIME('N')
DO i = 1 to 20
  char = SUBSTR(chartab,i,1)
  fillchar = COPIES(char,4)
  key = 'KEY:' ×× fillchar
  rec_body = 'Record#' i 'was created: ' now
  every5 = i // 5
  IF every5 = 0 THEN
    DO
      fillchar = COPIES('+',50)
      rec_body = rec_body 'LONG (100 bytes) RECORD' fillchar
      rec_body = LEFT(rec_body,92)
    END
  ELSE
    DO
      rec_body = LEFT(rec_body,32)
    END
  my_rec = key ×× rec_body
  rxvsam_result = RXVSAM('WRITE','VSAMFILE',,'MY_REC')
  IF rxvsam_result = 0 THEN
    DO
      recs_written = recs_written + 1
    END
  ELSE
    DO
      log.log# = 'WRITE failed attempting to write record #' i ':'
      log# = log# + 1
      CALL log_errors
      SIGNAL close_and_exit
    END
END

log.log# =  recs_written 'records written successfully to' dsn
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after WRITE loop) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

log.log# = 'CLOSE after writing records was successful'
log# = log# + 1
SAY '   ... continuing' TIME('N')

rxvsam_result = RXVSAM('OPENINPUT','VSAMFILE','KSDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENINPUT failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END
/*1*/
rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = '1st record:'
    log# = log# + 1
    log.log# = '    ' my_rec
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'First READNEXT failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 1
DO i = 1 to 5
  rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
    IF rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    ELSE
      DO
        log.log# = 'READNEXT (within loop) failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
END

log.log# = 'Last record read in READNEXT loop:'
log# = log# + 1
log.log# = '    ' my_rec
log# = log# + 1
log.log# = recs_read 'records read for READNEXT test'
log# = log# + 1
SAY '   ... continuing' TIME('N')

/*1*/
rxvsam_result = RXVSAM('READLAST','VSAMFILE',,'MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = 'Last record:'
    log# = log# + 1
    log.log# = '    ' my_rec
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'READLAST failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

rxvsam_result = RXVSAM('STARTBWD','VSAMFILE','KEY:pppp','MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = 'STARTBWD from key "KEY:pppp" was successful'
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'STARTBWD failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 0
DO 3
  rxvsam_result = RXVSAM('READPREV','VSAMFILE',,'MY_REC')
    IF rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    ELSE
      DO
        log.log# = 'READPREV failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
END

log.log# = 'Last record read in READPREV loop:'
log# = log# + 1
log.log# = '    ' my_rec
log# = log# + 1
log.log# = recs_read 'records read for READPREV test'
log# = log# + 1
SAY '   ... continuing' TIME('N')

/*1*/
rxvsam_result = RXVSAM('STARTFWD','VSAMFILE','KEY:cccc','MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = 'STARTFWD from key "KEY:cccc" was successful'
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'STARTFWD failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 0
DO 3
  rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
    IF rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    ELSE
      DO
        log.log# = 'READNEXT (after STARTFWD) failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
END

log.log# = 'Last record read in READNEXT loop:'
log# = log# + 1
log.log# = '    ' my_rec
log# = log# + 1
log.log# = recs_read 'records read for READNEXT (after STARTFWD) test'
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after READ tests) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

log.log# = 'CLOSE after read tests was successful'
log# = log# + 1
SAY '   ... continuing' TIME('N')
/*1*/

rxvsam_result = RXVSAM('OPENIO','VSAMFILE','KSDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENIO failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

rxvsam_result = RXVSAM('READ','VSAMFILE','KEY:mmmm','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'READ for "KEY:mmmm" failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

rxvsam_result = RXVSAM('DELETE','VSAMFILE','KEY:mmmm','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'DELETE for "KEY:mmmm" failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

log.log# = 'Record "KEY:mmmm" successfully erased via READ + DELETE'
log# = log# + 1

SAY '   ... continuing' TIME('N')
/*1*/

rxvsam_result = RXVSAM('READ','VSAMFILE','KEY:bbbb','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'Read of "KEY:bbbb" failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

my_rec = SUBSTR(my_rec,1,55) 'was updated at' TIME('N')
my_rec = LEFT(my_rec,80)
rxvsam_result = RXVSAM('REWRITE','VSAMFILE','KEY:bbbb','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'REWRITE of "KEY:bbbb" failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

log.log# = 'Update of "KEY:bbbb" via READ + REWRITE was successful'
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after I-O tests) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END
SAY '   ... continuing' TIME('N')
/*1*/
rxvsam_result = RXVSAM('OPENOUTPUT','VSAMFILE','KSDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'Final OPENOUTPUT failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

my_rec = 'KEY:ffaa was added via WRITE at' TIME('N')
my_rec = LEFT(my_rec,40)
rxvsam_result = RXVSAM('WRITE','VSAMFILE','KEY:ffaa','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'WRITE of "KEY:ffaa" failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

log.log# = 'WRITE of "KEY:ffaa" was successful'
log# = log# + 1

SAY '   ... finishing' TIME('N')

/*1*/

close_and_exit: NOP
rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'Final CLOSE failed:'
    log# = log# + 1
    CALL log_errors
  END

write_log_and_exit: NOP
log.log# = '   ... End of LOG'
SAY 'Display log? (Y/N)'
PULL answer
IF answer = 'Y' THEN
  DO i = 1 TO log#
    SAY log.i
  END

ADDRESS TSO "FREE FILE(VSAMFILE)"
/*
ADDRESS TSO "FREE FILE(SNAPDBUG)"
*/

EXIT
/*1*/
log_errors: nop

log.log# =  '  Return msg -->  ' rxvsam_returnmsg
log# = log# + 1
log.log# =  '  Error msg -->   ' rxvsam_vsamerrormsg
log# = log# + 1

RETURN

