/* REXX */

/*
Exec to test various RXVSAM functions with an RRDS.  Assumes the RRDS
has already been defined by exec RXVSETR
*/

ARG user
IF user = '' THEN user = USERID()

dsn = user ×× '.VSAMRRDS'
log# = 1                    /* log record number */

/*
ADDRESS TSO "ALLOCATE FILE(SNAPDBUG) DSNAME('ZMXW009.SNAPDBUG') MOD"
IF rc \= 0 THEN
  DO
    SAY 'Allocate failed for SNAPDBUG with a return code of' rc
    EXIT rc
  END
*/

ADDRESS TSO "ALLOCATE FILE(VSAMFILE) DSNAME('"dsn"') SHR"
IF rc \= 0 THEN
  DO
    SAY 'Allocate failed for VSAMFILE with a return code of' rc
    EXIT rc
  END

rxvsam_result = RXVSAM('OPENOUTPUT','VSAMFILE','RRDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENOUTPUT failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

SAY '   ... working' TIME('N')
/*1*/
chartab = 'abcdefghijk'
recs_written = 0
now = DATE('W') DATE('N') TIME('N')
DO i = 1 to 10
  char = SUBSTR(chartab,i,1)
  id = RIGHT(i,4,'0')
  fillchar = COPIES(char,8)
  my_rec = 'Record' id '   ' fillchar '   ' now
  my_rec = LEFT(my_rec,80)
  rxvsam_result = RXVSAM('WRITE','VSAMFILE',,'MY_REC')
  IF rxvsam_result = 0 THEN
    DO
      recs_written = recs_written + 1
    END
  ELSE
    DO
      log.log# = 'WRITE failed:'
      log# = log# + 1
      CALL log_errors
      SIGNAL close_and_exit
    END
END

log.log# =  recs_written 'records written successfully to' dsn
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after WRITE loop) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

log.log# = 'CLOSE after writing records was successful'
log# = log# + 1
SAY '   ... continuing' TIME('N')

rxvsam_result = RXVSAM('OPENINPUT','VSAMFILE','RRDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENINPUT failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END
/*1*/
rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = '1st record:'
    log# = log# + 1
    log.log# = '    ' my_rec
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'First READNEXT failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 1
DO i = 1 to 5
  rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
    IF rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    ELSE
      DO
        log.log# = 'READNEXT (within loop) failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
END

log.log# = 'Last record read in READNEXT loop:'
log# = log# + 1
log.log# = '    ' my_rec
log# = log# + 1
log.log# = recs_read 'records read for READNEXT test'
log# = log# + 1
SAY '   ... continuing' TIME('N')

/*1*/
rxvsam_result = RXVSAM('READLAST','VSAMFILE',,'MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = 'Last record:'
    log# = log# + 1
    log.log# = '    ' my_rec
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'READLAST failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

rxvsam_result = RXVSAM('STARTBWD','VSAMFILE','5','MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = 'STARTBWD from record number 5 was successful'
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'STARTBWD failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 0
DO 3
  rxvsam_result = RXVSAM('READPREV','VSAMFILE',,'MY_REC')
    IF rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    ELSE
      DO
        log.log# = 'READPREV failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
END

log.log# = 'Last record read in READPREV loop:'
log# = log# + 1
log.log# = '    ' my_rec
log# = log# + 1
log.log# = recs_read 'records read for READPREV test'
log# = log# + 1
SAY '   ... continuing' TIME('N')

/*1*/
rxvsam_result = RXVSAM('STARTFWD','VSAMFILE','7','MY_REC')
IF rxvsam_result = 0 THEN
  DO
    log.log# = 'STARTFWD from record number 7 was successful'
    log# = log# + 1
  END
ELSE
  DO
    log.log# = 'STARTFWD failed:'
    log# = log# + 1
    call log_errors
    SIGNAL close_and_exit
  END

recs_read = 0
DO 3
  rxvsam_result = RXVSAM('READNEXT','VSAMFILE',,'MY_REC')
    IF rxvsam_result = 0 THEN
      DO
        recs_read = recs_read + 1
        ITERATE
      END
    ELSE
      DO
        log.log# = 'READNEXT (after STARTFWD) failed:'
        log# = log# + 1
        call log_errors
        SIGNAL close_and_exit
      END
END

log.log# = 'Last record read in READNEXT loop:'
log# = log# + 1
log.log# = '    ' my_rec
log# = log# + 1
log.log# = recs_read 'records read for READNEXT (after STARTFWD) test'
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after READ tests) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

log.log# = 'CLOSE after read tests was successful'
log# = log# + 1
SAY '   ... continuing' TIME('N')
/*1*/

rxvsam_result = RXVSAM('OPENIO','VSAMFILE','RRDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'OPENIO failed: '
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

rxvsam_result = RXVSAM('READ','VSAMFILE','7','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'READ failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

rxvsam_result = RXVSAM('DELETE','VSAMFILE','7','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'DELETE failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

log.log# = 'Record 7 successfully erased via READ + DELETE'
log# = log# + 1

SAY '   ... continuing' TIME('N')
/*1*/

rxvsam_result = RXVSAM('READ','VSAMFILE','2','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'Read of record 2 failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

my_rec = SUBSTR(my_rec,1,55) 'was updated at' TIME('N')
my_rec = LEFT(my_rec,80)
rxvsam_result = RXVSAM('REWRITE','VSAMFILE','2','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'REWRITE of record 2 failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

log.log# = 'Update of record 2 via READ + REWRITE was successful'
log# = log# + 1

rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'CLOSE (after I-O tests) failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END
SAY '   ... continuing' TIME('N')
/*1*/
rxvsam_result = RXVSAM('OPENOUTPUT','VSAMFILE','RRDS')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'Final OPENOUTPUT failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL write_log_and_exit
  END

my_rec = 'Record 12 was added via WRITE at' TIME('N')
my_rec = LEFT(my_rec,80)
rxvsam_result = RXVSAM('WRITE','VSAMFILE','12','MY_REC')
IF rxvsam_result /= 0 THEN
  DO
    log.log# = 'WRITE of record 12 failed:'
    log# = log# + 1
    CALL log_errors
    SIGNAL close_and_exit
  END

log.log# = 'WRITE of record 12 was successful'
log# = log# + 1

SAY '   ... finishing' TIME('N')

/*1*/

close_and_exit: NOP
rxvsam_result = RXVSAM('CLOSE','VSAMFILE')
IF rxvsam_result /= 0 THEN
  DO
    log.log# =  'Final CLOSE failed:'
    log# = log# + 1
    CALL log_errors
  END

write_log_and_exit: NOP
log.log# = '   ... End of LOG'
SAY 'Display log? (Y/N)'
PULL answer
IF answer = 'Y' THEN
  DO i = 1 TO log#
    SAY log.i
  END

ADDRESS TSO "FREE FILE(VSAMFILE)"
/*
ADDRESS TSO "FREE FILE(SNAPDBUG)"
*/

EXIT
/*1*/
log_errors: nop

log.log# =  '  Return msg -->  ' rxvsam_returnmsg
log# = log# + 1
log.log# =  '  Error msg -->   ' rxvsam_vsamerrormsg
log# = log# + 1

RETURN

