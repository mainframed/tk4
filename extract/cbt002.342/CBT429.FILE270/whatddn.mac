WHATDDN TITLE '- RETURN DDNAMES WITH DSNAME ALLOCATED IN CLIST VARS'
***********************************************************************
*                                                                     *
* AUTHOR:                                                             *
*     GORDON SCHILLINGER                                              *
*     WDPSC, (206) 902-3147                                           *
*                                                                     *
*                                                                     *
* ACTIVITY LOG:                                                       *
*     VERSION 1 MODIFICATION 0 - AUGUST 31, 1987                      *
*     VERSION 1 MODIFICATION 1 - NOVEMBEMBER 2, 1987                  *
*        CORRECTED 0C4 PROBLEM WITH INCORRECT CHECK FOR END OF TIOT   *
*     VERSION 1 MODIFICATION 2 - NOVEMBEMBER 23, 1987                 *
*        CORRECTED 0C4 PROBLEM WITH INCORRECT CHECK FOR END OF TIOT   *
*                                                                     *
***********************************************************************
         EJECT
*  -----------------------------------------------------------------
*  SYNTAX:
*      WHATDDN  DSNAME('DSNAME') × ALL ×
*  -----------------------------------------------------------------
*  OPERANDS -
*       REQUIRED -
*           DSNAME('DSNAME') --- 'DSNAME' IS THE DSNAME THAT YOU
*                                 WISH TO HAVE THE DDNAME(S) WHICH
*                                 HAVE THE DSNAME ALLOCATED RETURNED
*       OPTIONAL -
*           ALL              ---  IF ALL IS SPECIFIED, WHATDDN WILL
*                                 RETURN ALL OF THE DDNAMES WHICH
*                                 HAVE THE DSNAME ALLOCATED, IN CLIST
*                                 VARIABLES &DDNAME1 THRU &DDNAMEN,
*                                 WHERE N IS A NUMBER FROM ONE TO NINE.
*                                 (IT IS UNLIKELY THAT THERE WILL BE
*                                 GREATER THAN NINE DDNAMES WITH DSNAME
*                                 ALLOCATED; HOWEVER, IF SO, A RETURN
*                                 CODE WILL REFLECT THIS CONDITION.  )
*
*                                 IF ALL IS NOT GIVEN, THEN ONLY THE
*                                 DDNAME FIRST IN THE CONCATENATION
*                                 IS RETURNED IN &DDNAME1.
*
* RETURN CODES:
*        ×---------×-----------------------------------------------×
*        × &LASTCC × MEANING                                       ×
*        ×---------×-----------------------------------------------×
*        ×    0    × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×    4    × DSNAME NOT ALLOCATED TO ANY DDNAMES           ×
*        ×---------×-----------------------------------------------×
*        ×    8    × MORE THAN 9 DDNAMES HAVE ALLOCATED DSNAME     ×
*        ×---------×-----------------------------------------------×
*        ×   12    × INVALID SYNTAX OF OPERAND(S)                  ×
*        ×---------×-----------------------------------------------×
         EJECT
WHATDDN ENTERR LEVEL=V1M2
         EJECT
********************************************************************
*      MAIN PROGRAM LOGIC                                          *
*           R2  = TIOT PTR                                         *
*           R5  = CURRENT DSNAME VARIABLE                          *
*           R6  = PDE VALUE "ALL" KEYWORD                          *
*           R8  = DD ENTRY LENGTH                                  *
*           R9  = DD ENTRY PTR                                     *
*           R10 = IKJPARMD PTR                                     *
********************************************************************
         LR    R11,R1             SAVE THE PARM POINTER
         BAL   R14,DOPARSE        PERFORM THE PARSE SERVICE ROUTINE
         BXLE  R15,R15,PARSEOK    PARSE SUCCESFUL ?
         LA    R15,12             NO, INVALID SYNTAX; RC(12)
         BNE   EXIT
PARSEOK  L     R10,ANS            YES, GET PTR FROM PARSE
         USING IKJPARMD,R10       ESTABLISH IKJPARMD ADDRESSABILITY
         TM    DSTRING+6,X'80'    IS DSNAME PRESENT ?
         BO    FINDD              YES, SEARCH DD ENTRIES
         LA    R15,12             NO,  INVALID SYNTAX; EXIT RC(12)
         B     EXIT
FINDD    L     R1,540             R1-> TCB CURRENTLY RUNNING
         L     R2,12(,R1)         R2-> TIOT
         LA    R9,24(,R2)         R9-> FIRST DD IN TIOT
         LH    R6,ALL             R6 = "ALL" KEYWORD POSITIONAL FLAG
         BAL   R14,INITLIST       BUILD PARMLIST FOR SETVAR
         MVC   VARNAME,=C'DDNAME' INITILIZE &DSNAME VARIABLE NAME
         LA    R5,1               INITIALIZE &DSNAME VARIABLE INDEX
CHKDSN   BAL   R14,CHKALLOC       ROUTINE TO CHECK DATASET ALLOCATION
         BXH   R15,R15,NEXTDD     IF DSNAME NOT ALLOCATED, GET NEXT DD
         BAL   R14,SETDDN         PUT DDNAME IN CLIST VARIABLE
         BXH   R15,R15,SETCOUNT   IF TOO MANY DDNAMES, RC(8)
CHKALL   CH    R6,=H'1'           "ALL" SPECIFIED?   (1ST KEYWD PARM)
         BE    NEXTDD             YES, PROCESS ANOTHER DD ENTRY
         LA    R15,0              NO,  EXIT RC(0)
         B     SETCOUNT           SET DDNCOUNT=1 & EXIT
NEXTDD   XR    R8,R8              CLEAR REGISTER FOR INDEXING
         XR    R15,R15            RESET RETURN CODE
         IC    R8,0(,R9)          R8 = LENGTH OF CURRENT DD ENTRY
         LA    R9,0(R8,R9)        R9-> NEXT DD ENTRY IN TIOT
*        CLI   0(,R9),X'00'       END OF TIOT?
*        CLC   36(,R9),=F'0'      END OF TIOT?
         CLC   0(4,R9),=F'0'      END OF TIOT?
         BNE   CHKDSN             NO, CHECK DSNAME FOR ALLOCATION
SETCOUNT LR    R8,R15             SAVE RETURN CODE
         BAL   R14,STDDNCNT       SET CLIST VARIABLE &DDNSCNT
         LTR   R15,R15            ANY VARIABLES SET?
         BNZ   EXIT               NO,  EXIT RC(4)
         LR    R15,R8             YES, EXIT PREVIOUS RETURN CODE
EXIT     LEAVER
         EJECT
********************************************************************
*        PARSE INPUT COMMAND BUFFER                                *
*             RETURN CODES:                                        *
*               0 - PARSE SUCCESSFUL                               *
*               4 - PARSE ERROR ENCOUNTERED                        *
********************************************************************
DOPARSE  ST    R14,RETADDR
         KKPARSE ,                PARSE COMMAND
         LTR   R15,R15            PARSE GO OK?
         BZ    EXITPARS           YES, RETURN TO CALLER
         LA    R15,12             NO,  EXIT RC(12)
         B     EXITPARS
EXITPARS L     R14,RETADDR
         BR    R14
         EJECT
********************************************************************
*        CHECK DDNAME FOR DATASET ALLOCATION                       *
*             RETURN CODES:                                        *
*               0 - DATASET ALLOCATED TO CURRENT DDNAME            *
*               4 - DATASET NOT ALLOCATED TO CURRENT DDNAME        *
*             WORK REGISTERS = 3,4,7                               *
********************************************************************
CHKALLOC ST    R14,RETADDR            SAVE RETURN ADDRESS
         LA    R15,0                  INITIALIZE RC(0)
         CLI   4(R9),C' '             DATASET CONCATINATION?
         BE    CMPDSN                 YES, COMPARE FOR DATASET MATCH
         MVC   DDNAME(8),4(R9)        RETAIN DDNAME FOR CONCATINATION
CMPDSN   XR    R7,R7                  CLEAR FOR ICM
         ICM   R7,7,12(R9)            R9-> JFCB
         L     R3,DSTRING             R3-> DATASET NAME PASSED
         LH    R4,DSTRING+4           R4 = DATASET NAME LENGTH
         BCTR  R4,0                   ADJUST LENGTH FOR EXECUTE
         EX    R4,COMPARE             DATASET ALLOCATED TO DDNAME?
         BE    ALLOC                  YES, RC(0)
         AH    R15,=H'4'              NO,  RC(4)
ALLOC    L     R14,RETADDR            R4-> CALLER
         BR    R14                    RETURN TO CALLER
COMPARE  CLC   0(0,R3),16(R7)
         EJECT
********************************************************************
*        BUILD UPDTLIST (SETVAR PARM LIST)                         *
*             WORKING REGISTER = 3                                 *
********************************************************************
INITLIST ST    R14,RETADDR         SAVE RETURN ADDRESS
         MVC   UPDTUPT,CPPLUPT     UPT
         MVC   UPDTECT,CPPLECT     ECT
         LA    R3,ECB
         ST    R3,UPDTECB          ECB
         LA    R3,UPLIST
         ST    R3,UPDTUPL          UPLIST
         L     R14,RETADDR
         BR    14
         EJECT
********************************************************************
*        BUILD UPDATE PARM LIST FOR &DDNAME# AND LINK SETVAR       *
*             RETURN CODES:                                        *
*               0 - &DDNAME# VARIABLE SET                          *
*               4 - VARIABLE NOT SET; LIMIT EXCEEDED               *
*             WORKING REGISTERS = 3,4                              *
********************************************************************
SETDDN   ST    R14,RETADDR        SAVE RETURN ADDRESS
         LA    R15,0              INITIALIZE RC(0)
         CH    R5,=H'9'           DO WE HAVE MORE THAN WE CAN HANDLE?
         BH    TOOMANY
         LA    R3,VARNAME         R3-> VARIABLE NAME FOR DDNAME
         ST    R3,LOCPTR
         IC    R4,INDXTABL(R5)    R4 = INDEX CHARACTER
         STC   R4,6(,R3)          APPEND INDEX TO &DDNAME
         MVC   LOCLEN,=F'7'       LENGTH OF VARIABLE NAME
         LA    R3,DDNAME          R3-> DDNAME
         ST    R3,VALPTR
         MVC   VALLEN,=F'8'       LENGTH OF DDNAME
         LA    R1,UPDTLIST        R1 ==> SETVAR PARM LIST
         LINK  EP=SETVAR          SET VARIABLE
BMPINDX  LA    R5,1(,R5)          R5 = INDEX FOR NEXT &DSNAME
         B     SETDDRET
TOOMANY  LA    R15,4              RC(4)
SETDDRET L     R14,RETADDR
         BR    14                 RETURN TO CALLER
         EJECT
********************************************************************
*        BUILD UPDATE PARM LIST FOR &DDNCOUNT AND LINK SETVAR      *
*             RETURN CODES:                                        *
*               0 - &DDNCOUNT SET TO NUMBER OF &DDNAME VARIABLES   *
*               4 - NO VARIABLES SET; &DDNCOUNT = 0                *
********************************************************************
STDDNCNT ST    R14,RETADDR        SAVE RETURN ADDRESS
         BCTR  R5,0               R5 = NUMBER OF VARIABLES SET
         IC    R4,INDXTABL(R5)    R4 = NUMBER OF VARIABLES (CHAR)
         STC   R4,DDNCOUNT
         LA    R9,=C'DDNCOUNT'    R9-> VARIABLE NAME
         ST    R9,LOCPTR
         MVC   LOCLEN,=F'8'       LENGTH OF VARIABLE NAME
         LA    R9,DDNCOUNT        R9-> VARIABLE DATA (# DDNAMES)
         ST    R9,VALPTR
         MVC   VALLEN,=F'1'       LENGTH OF DATA FIELD
         LA    R1,UPDTLIST        R1-> SETVAR PARM LIST
         LINK  EP=SETVAR          SET THE VARIABLE
         BXH   R5,R5,CNTRET       SET ANY &DDNAME VARIABLES?
         LA    R15,4              NO,  RC(4)
CNTRET   L     R14,RETADDR
         BR    14                 RETURN TO CALLER
         EJECT
********************************************************************
*                    D A T A    A R E A S                          *
********************************************************************
LISTKALL CALL  ,(0,0,0,0),VL,MF=L
INDXTABL DC    CL10'0123456789'
         LTORG
         EJECT
********************************************************************
*        D Y N A M I C   W O R K   A R E A                         *
********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F
PPLA     DS    7F
ANS      DS    F
ECB      DS    F
*
VARNAME  DS    CL7
DDNAME   DS    CL8
DDNCOUNT DS    C
*UNPKCNT  DS    CL3
*CVDOPRND DS    D
RETADDR  DS    F
*
UPDTLIST DS    0F
UPDTUPT  DS    F
UPDTECT  DS    F
UPDTECB  DS    F
UPDTUPL  DS    F
*
UPLIST   DS    0F
LOCPTR   DS    AL4
LOCLEN   DS    FL4
VALPTR   DS    AL4
VALLEN   DS    FL4
WORKLEN  EQU   *-WORKAREA
WHATDDN CSECT
         EJECT
********************************************************************
*                   P A R S E   M A C R O S                        *
********************************************************************
*
PCL      IKJPARM
DSNDWD   IKJKEYWD
         IKJNAME 'DSNAME',SUBFLD=DSNSUB,ALIAS=('DATASET')
ALL      IKJKEYWD
         IKJNAME 'ALL'
DSNSUB   IKJSUBF
DSTRING  IKJPOSIT DSNAME,USID
         IKJENDP
         END
