RTSO     TITLE     'REMEMBER TSO COMMAND FROM ISPF'
*        RTSO IMPLEMENTS A "REMEMBER LAST TSO COMMAND" FUNCTION
*        FOR BOTH THE "TSO" COMMAND ON THE "COMMAND ==>" LINE
*        AND FOR THE TSO COMMAND PANEL, PRIMARY MENU OPTION 6.
*        THE TSO COMMAND PANEL CAN BE BROUGHT UP FROM ANY PANEL
*        BY ENTERING "TSO" WITHOUT AN OPERAND, JUST LIKE THE
*        "KEYS" COMMAND.  THE LAST COMMAND ENTERED IS ALWAYS
*        PRESENTED WHEN THE TSO COMMAND PANEL IS DISPLAYED.
         SPACE     3
*        THIS PROGRAM IS FUNCTIONALLY EQUIVALENT TO THIS CLIST:
*
*        /*RTSO*/ PROC 1 ZPARM
*        CONTROL NOFLUSH
*          IF ('&ZPARM' EQ '') THEN DO
*            ISPEXEC SELECT PGM(ISRPTC)
*            END
*          ELSE DO
*            SET ZRTSO = &STR(&ZPARM)
*            ISPEXEC VPUT (ZRTSO) SHARED
*            ISPEXEC CONTROL ERRORS RETURN
*            ISPEXEC SELECT CMD(&ZRTSO)
*            END
*
*        IT IS A PROGRAM BECAUSE THE CLIST HAS PROBLEMS WITH
*        DOUBLED QUOTES, IE. THE USER WOULD HAVE TO DOUBLE ANY
*        QUOTES ENTERED ON THE COMMAND LINE, AND BECAUSE YOU
*        CAN'T HAVE AN OPTIONAL CLIST POSITIONAL PARAMETER.
         SPACE     3
*        THIS PROGRAM IS INVOKED FROM THE ISP COMMAND TABLE.
*        THE COMMAND TABLE ENTRY FOR THE CURRENT TSO COMMAND IS:
*
*          TSO  0  SELECT CMD(&ZPARM)
*                    EXECUTE A TSO COMMAND
*
*        COMMAND TABLE IS CHANGED (WITH SCREEN 3.9) TO THIS:
*
*          TSO       0  ALIAS RTSO
*                         EXECUTE AND REMEMBER A TSO COMMAND
*
*          RTSO      0  SELECT PGM(RTSO) PARM(&ZPARM)
*                         EXECUTE AND REMEMBER A TSO COMMAND
*
*          OTSO      2  SELECT CMD(&ZPARM)
*                         OLD EXECUTE A TSO COMMAND
*
         SPACE     3
*        THE PARAMETER IS PASSED TO RTSO THE SAME WAY AS THE PARM
*        FIELD FROM A JCL // EXEC STATEMENT.
*
*        THE FUNCTION VARIABLE POOL HAS THE PARAMETER COPIED
*        INTO IT WITH THE VREPLACE SERVICE (WHICH IS BOTH
*        REQUIRED FOR AND RESTRICED TO PROGRAMS).
*
*        ISPLINK, A PROGRAM PROVIDED WITH DIALOGUE MANAGER,
*        IS LINK EDITED WITH RTSO TO INTERFACE WITH ISPF.
*
*        THE TSO COMMAND PANEL, "ISRTSO" MUST BE MODIFIED TO
*        ASSIGN &RTSO TO &ZCMD AND THEN SAVE ANY NEW &ZCMD VALUE.
         EJECT
         MACRO
         IDBLOCK
*        THIS MACRO MAKES &SYSDATE AND &SYSTIME AVAILABLE
         B         28(0,R15EPA)        SKIP OVER ID BLOCK
         DC        AL1(23),CL8'&SYSECT',CL15'-&SYSDATE.@&SYSTIME'
         MEND
         SPACE     3
         PRINT     ON,GEN,NODATA
RTSO     CSECT     ,
         SPACE     1
R0       EQU       0
R1       EQU       1
R1PARM   EQU       1                   PASSED PARAMETER
R2ZPARM  EQU       2                   ADDRESS OF PARAMETER
R3ZPARML EQU       3                   LENGTH OF PARAMETER
R10CODE  EQU       10                  SAVED TSO CMD RETURN CODE
R12BASE  EQU       12                  BASE REGISTER
R13SAVE  EQU       13                  SAVE AREA
R14LINK  EQU       14                  RETURN ADDRESS
R15EPA   EQU       15                  ENTRY POINT ADDRESS
R15RC    EQU       15                  RETURN CODE
         SPACE     3
PARMS    DSECT     ,
ZPARMAD  DS        A(ZPARMLEN)         ONE WORD PARAMETER LIST
         SPACE     1
         ORG       PARMS               REUSE DSECT FOR PARAMETER
ZPARMLEN DC        Y(L'ZPARM)          LENGTH OF STRING
ZPARM    DC        0CL255' '           PASSED STRING KNOWN AS &ZPARM
         SPACE     1
RTSO     CSECT     ,
         EJECT
*        ENTRY CONVENTIONS
*
         IDBLOCK   ,
         SPACE     1
         STM       R14LINK,R12BASE,12(R13SAVE)  SAVE CALLER'S REGISTERS
         LR        R12BASE,R15EPA      COPY BASE REGISTER
         USING     RTSO,R12BASE        ANNOUNCE ADDRESSIBILITY
         SPACE     1
*        SET UP A NEW SAVE AREA
*
         LA        R15EPA,SAVEAREA     POINT AT NEW SAVE AREA
         ST        R13SAVE,4(R15EPA)   CHAIN BACKWARDS
         ST        R15EPA,8(R13SAVE)   CHAIN FORWARDS
         LR        R13SAVE,R15EPA      ESTABLISH NEW SAVE AREA
         SPACE     1
*        POINT AT THE PARAMETER STRING
*
         USING     PARMS,R1PARM        ANNOUNCE ADDRESSIBILITY
         L         R1PARM,ZPARMAD      POINT AT FIRST PARAMETER
         USING     ZPARMLEN,R1PARM     ANNOUNCE ADDRESSIBILITY
         LH        R3ZPARML,ZPARMLEN   PICK UP LENGTH
         LA        R2ZPARM,ZPARM       POINT AT STRING
         USING     ZPARM,R2ZPARM       ANNOUNCE ADDRESSIBILITY
         DROP      R1PARM
         SPACE     1
*        DISPLAY PANEL OR EXECUTE PASSED COMMAND?
*
         LTR       R3ZPARML,R3ZPARML   NULL STRING?
         BP        COMMAND             NO--GO SAVE AND EXECUTE
         SPACE     3
*        PUT UP STANDARD TSO OPTION 6 PANEL
*
PANEL    DS        0H
         LA        R1PARM,=A(SELECT,SELPGML,SELPGM)
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         LR        R10CODE,R15RC       SAVE RETURN CODE
         SPACE     3
*        BACK TO CALLER LEAVING THE LAST ISPEXEC RETURN CODE IN R15
*
FINISHED DS        0H
         LR        R15RC,R10CODE       GET RETURN CODE
         L         R13SAVE,4(R13SAVE)  BACK TO INITIAL SAVE AREA
         L         R14LINK,12(R13SAVE) GET RETURN ADDRESS
         LM        R0,R12BASE,20(R13SAVE)  RESTORE CALLER'S REGISTERS
         BR        R14LINK             BACK TO CALLER
         EJECT
*        SAVE ZPARM IN ZRTSO AND THEN EXECUTE AS TSO COMMAND
*
COMMAND  DS        0H
         SPACE     1
*        CREATE FUNCTION POOL VARAIBLE
*
         ST        R3ZPARML,FWORD      SAVE STRING LENGTH
         LA        R1PARM,=A(VREPLACE,NAMELIST,FWORD,(R2ZPARM))
         ST        R2ZPARM,12(R1PARM)  SAVE STRING POINTER
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         SPACE     1
*        SAVE ZCMD IN PROFILE VARIABLE POOL
*
         LA        R1PARM,=A(VPUT,NAMELIST,PROFILE)
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         SPACE     1
*        DISABLE ISPF ERROR INTERCEPT
*
         LA        R1PARM,=A(CONTROL,ERRORS,RETURN+X'80000000')
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         SPACE     1
*        NOW EXECUTE THE TSO COMMAND
*
         LA        R1PARM,=A(SELECT,SELCMDL,SELCMD)
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         LR        R10CODE,R15RC       SAVE RETURN CODE
         SPACE     1
*        SEE IF EXECUTION GENERATED ANY ERROR MESSAGES
*
         LA        R1PARM,=A(VCOPY,ZERRLIST,ZERRSML,ZERRSMAD,LOCATE)
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         L         R0,ZERRSML          LENGTH SHOULD BE ZERO
         AL        R0,ZERRLML          PLUS ANOTHER ZERO LENGTH
         BZ        FINISHED            NO MESSAGES -- ALL DONE
         SPACE     1
*        MESSAGES FROM TSO COMMAND (BAD SYNTAX, ETC...)
*
         LA        R1PARM,=A(CONTROL,DISPLAY,LINE+X'80000000')
         L         R15EPA,=V(ISPLINK)  INTERFACE ROUTINE
         BALR      R14LINK,R15EPA      OFF TO DIALOG MANAGER
         SPACE     1
TRYSHORT DS        0H
         ICM       R0,15,ZERRSML       PICK UP LENGTH
         BZ        TRYLONG             SKIP--NO MESSAGE
         L         R1,ZERRSMAD         POINT AT TEXT
         TPUT      (1),(0),R           WRITE SHORT MESSAGE
TRYLONG  DS        0H
         ICM       R0,15,ZERRLML       PICK UP LENGTH
         BZ        FINISHED            SKIP--NO MESSAGE
         L         R1,ZERRLMAD         POINT AT TEXT
         TPUT      (1),(0),R           WRITE SHORT MESSAGE
         B         FINISHED            BACK TO CALLER
         EJECT
         DC        CL8'SAVEAREA'
SAVEAREA DC        18A(0)
         SPACE     1
SELECT   DC        CL8'SELECT '
SELPGM   DC        CL40'PGM(ISRPTC) '
SELPGML  DC        A(L'SELPGM)         EXTRA LENGTH FOR ZAPPING
         SPACE     1
VPUT     DC        C'VPUT '
NAMELIST DC        C'(ZRTSO)'
FWORD    DC        A(L'ZPARM)
         SPACE     1
VREPLACE DC        CL8'VREPLACE'
PROFILE  DC        CL8'PROFILE '
         SPACE     1
CONTROL  DC        CL8'CONTROL '
ERRORS   DC        CL8'ERRORS '
RETURN   DC        CL8'RETURN '
         SPACE     1
SELCMD   DC        C'CMD(&&ZRTSO) '
SELCMDL  DC        A(L'SELCMD)
         SPACE     1
VCOPY    DC        CL8'VCOPY '
ZERRLIST DC        C'(ZERRSM ZERRLM) '
ZERRSML  DC        A(L'ZERRSM)
ZERRLML  DC        A(L'ZERRLM)
ZERRSMAD DC        A(ZERRSM)
ZERRLMAD DC        A(ZERRLM)
ZERRSM   DC        CL24' '
ZERRLM   DC        CL79' '
LOCATE   DC        C'LOCATE '
         SPACE     1
DISPLAY  DC        CL8'DISPLAY '
LINE     DC        C'LINE '
         SPACE     3
         LTORG     ,
         SPACE     3
         END       ,
