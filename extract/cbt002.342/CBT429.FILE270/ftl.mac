      TITLE ' THE GREAT, LATE PROGRAM FTL OR FASTER-THAN-LIGHT'
* SEE A. EINSTEIN'S 'THEORY OF RELATIVITY' FOR A BETTER EXPLANATION.
FTL    CSECT
    SPACE 2
*    FTL MAY BE USED UNDER O/S FOR  TRANSFER OF MULTIPLE SEQUENTIAL
* FILES IN ONE STEP. THIS SAVES INITIATION/TERMINATION TIME.AND IS
*    FTL WILL RUN IN 4K (NOT INCLUDING FILE BUFFERS)
*
*    FTL CAN REBLOCK FILES OR CHANGE PHYSICAL RECORD LENGTH OR FORMAT
* BY SPECIFYING APPROPIATE DCB PARAMETERS ON THE OUTPUT DATA DEFINITION
* (DD) STATEMENT.
*
*    THE DD STATEMENTS ARE PAIRED USING NAMES IN AND OUT AS PREFIXES
* FOLLOWED BY A TWO-CHARACTER NUMBER FROM 01 TO 99. THESE PAIRS MUST BE
* SEQUENTIAL STARTING WITH IN01 AND OUT01 AND INCREASING WITHOUT BREAK
* FOR AS MANY FILES AS DESIRED.
*    ANY SEQUENTIALLY ORGANIZED FILE MAY BE INPUT OR OUTPUT. IT MAY
* HAVE ANY RECORD FORMAT, RECORD LENGTH, AND BLOCKSIZE CONSISTENT WITH
* O/S. EXCEPTIONS ARE INDEXED SEQUENTIAL(ISAM) DATA SET ORGANIZATION,
* VARIABLE SPANNED RECORD FORMAT, AND PARTITIONED DATA SETS. THE LATTER
* MAY BE PROCESSED AS INDIVIDUAL MEMBERS.
*
*    WHEN EXPANDING   THE RECORD LENGTH, THE ADDITIONAL FIELD WILL HAVE
* UNPREDICTABLE CONTENTS. OTHER CHANGES OF LENGTH, FORMAT, OR BLOCKSIZE
* DO NOT AFFECT FILE CONTENT.
*
*    FOR EACH TRANSFER PAIR, A MESSAGE IS WRITTEN TO AN OUTPUT DATA SET
* (DD NAME IS MESSAGES) GIVING A RECORD COUNT AND VOLUME SERIAL NUMBER
* OF INPUT AND OUTPUT DATA SETS IF ON DIRECT ACCESS OR TAPE.
*
* FTL IS AN OLD SCIENCE FICTION TERM MEANING "FASTER THAN LIGHT".
*
         EJECT
*  SAMPLE JCL
*//SAVE EXEC PGM=FTL
*//STEPLIB DD DSN=SYSLIBRY,DISP=SHR   PROGRAM LIBRARY
*//SYSUDUMP DD SYSOUT=A
*//MESSAGES DD SYSOUT=A
*//IN01     DD DSN=Y01PR195,DISP=SHR,DCB=BUFNO=1,VOL=(,RETAIN)
*//OUT01    DD DSN=T011PR195,DISP=(NEW,KEEP),UNIT=TAPE16,VOL=(,RETAIN),
*//  DCB=(LRECL=1560,BLKSIZE=1560,BUFNO=1,RECFM=FB)
*//IN02     DD DSN=Y02PR195,DISP=SHR,DCB=(BUFNO=4,OPTCD=C)
*//OUT02    DD DSN=T02PR195,DISP=(NEW,KEEP),UNIT=TAPE16,LABEL=2,
*//  VOL=C,RETAIN,REF=*,OUT01,
*// DCB=(LRECL=492,BLKSIZE=19188,RECFM=FB,BUFNO=3,OPTCD=C)
*//IN03     DD  .  .  .
*//OUT03    DD  .  .  .
*     .
*     .
*     .
*    THIS EXAMPLE SHOWS A DCB GIVEN FOR EVERY DD STATEMENT, THIS IS
* NOT NECESSARY WHEN NO CHANGE OF RECORD LENGTH, RECORD FORMAT, OR
* BLOCKSIZE IS BEING MADE, BECAUSE THE PROGRAM WILL COPY THESE DCB
* PARAMETERS FROM THE INPUT FILE.
*
*
         EJECT
         DS    0H
         STM   R14,R12,12(R13)            SAVE REGISTERS
         LR    R11,R13
         BALR  R12,0                      LOAD BASE REGISTER
         USING *,R12
         LA    R13,SAVE                   SAVE AREA
         ST    R13,8(0,R11)               AND BACK CHAIN
         ST    R11,4(0,R13)
         XR    R4,R4                      ANALYZE PARAMETER
         L     R3,0(,R1)
         USING WRKAREA,R6
         USING PARM,R3
         CH    R4,BCTF                    IF LENGTH IS ZERO
         BE    NOPARM                         NO PARAMETER
         PACK  PDDCT,DDCT                 SET NUMBER OF
         CVB   R3,PDDCT                     DD PAIRS
         ST    R3,DDNUMBER                    FOR LATER USE
NOPARM   EQU   *
         DEVTYPE SYSP,DEVAREA         CHECK FOR DDNAME MESSAGES
         LTR   R15,R15                IS IT PRESENT?
         BZ    OPNPRT                 YES, OPEN MESSAGES
         MVC   SYSP,=C'SYSPRINT'      CHANGE TO    SYSPRINT
         MVC   PRINT+40(8),=C'SYSPRINT'   AND IN DCB
         DEVTYPE SYSP,DEVAREA         CHECK FOR DDNAME SYSPRINT
         LTR   R15,R15                IS IT PRESENT?
         BNZ   FINIT                  NO, FINISH, ELSE OPEN PRINT
         USING IHADCB,R5
OPNPRT   OPEN  (PRINT,OUTPUT)             MESSAGE DATA SET
         TM    PRINT+48,X'10'         DID IT OPEN
         BZ    FINIT
         PUT   PRINT,HEAD                 HEADING
         L     R1,536                     CURRENT TCB ADDRESS
         L     R1,12(,R1) TIOT            TIOT  TO BE USED
         LA    R6,MSG1                       FOR
         MVC   WRKAREA+1(8),0(R1)                JOBNAME
         MVC   WRKAREA+10(8),16(R1)              STEPNAME
         MVC   WRKAREA+19(8),08(R1)              PROCSTEPNAME
         PUT   PRINT,WRKAREA                     SECOND LINE OF HEADING
         MVC   DDNIN,DDI                         DDNAMES TO MESSAGE
         MVC   DDNOU,DDO
         LA    R8,INDCB                   FOR GET  PROCESS
HERWGO   EQU   *
         MVC   OUTDCB+40(8),DDNOU         DDNAME TO DCB
         MVC   INDCB+40(8),DDNIN          DDNAME TO DCB
         DEVTYPE DDNOU,DEVAREA,DEVTAB     CHECK FOR OUTPUT DDNAME
         LTR   R15,R15
         BNZ   FINIT                      FINISH IF NOT PRESENT
         DEVTYPE DDNIN,DEVAREA,DEVTAB     CHECK FOR INPUT DDNAME
         LTR   R15,R15
         BNZ   FINIT                      FINISH IF NOT  PRESENT
         MVC   PDDCT,PDDCT+8              ZERO COUNT FIELD
         OPEN  (INDCB)
         OPEN  (OUTDCB,(OUTPUT))
         LA     R5,OUTDCB                 BASE REGISTER FOR OUTPUT
         TM    DCBOFLGS,X'10'             DID OPEN FAIL
         BZ    FINIT                      YES
         TM    INDCB+48,X'10'             DID OPEN FAIL
         BZ    FINIT                      YES
         L     R11,=F'04'
***********************************************************************
****************  TABLE OF INPUT TO OUTPUT ACTION *********************
* RECORD FORMAT     ACTIONS
* INPUT  OUTPUT     TO BE TAKEN
**     **      *****                         **************************
*  F   *   F     *   WRITE
*  F   *   V     *   ADD 4 TO BEGIN OF RECORD; SET LENGTH IN RDW;
*      *         *       SET LENGTH IN DCB; WRITE
*  F   *   U     *   SET LENGTH IN DCB; WRITE
*  V   *   F     *   REMOVE 4 BYTES; WRITE
*  V   *   V     *   SET LENGTH IN DCB; WRITE
*  V   *   U     *   REMOVE 4 BYTES; SET LENGTH IN DCB; WRITE
*  U   *   F     *   WRITE
*  U   *   V     *   ADD 4 TO BEGIN OF RECORD; SET LENGTH IN RDW;
*      *         *       SET LENGTH IN DCB; WRITE
*  U   *   U     *   SET LENGTH IN DCB; WRITE
*      *         *
***********************************************************************
READING  GET   (R8)                       GET INPUT FILE
         LR    R6,R1
         LH    R7,INDCB+82                RECORD LENGTH
         TM    INDCB+36,DCBRECF           INPUT FIXED OR UNDEFINED
         BO    C100                       YES
         TM    DCBRECFM,DCBRECF           OUTPUT FIXED OR UNDEFINED
         BNO   RITING                    NO
         SH    R7,=H'4'                   VARIABLE TO FIXED OR
         LA    R6,4(,R6)                      UNDEFINED
         TM    DCBRECFM,DCBRECF           OUTPUT FORMAT TYPE
         BO    WRITING                    FIXED
         B     RITING                     UNDEFINED
C100     TM    DCBRECFM,DCBRECV            OUTPUT VARIABLE OR UNDEFINED
         BNO   WRITING                NOPE, MUST BE FIXED
         TM    DCBRECFM,DCBRECF        OUTPUT FIXED OR UNDEFINED
         BZ    C150                   NOPE, MUST BE  VARIABLE
         B     RITING
C150     LA    R7,4(,R7)              ADD 4 TO RECORD LENGTH
         C     R7,OUTSIZE             LENGTH TO OUTPUT SIZE
         BNH   READYMVE               LOW THEN GO
         L     R2,OUTAREA             ANY OUTPUT AREA
         LTR   R2,R2
         BZ    NEWAREA                NO
         L     R7,OUTSIZE
         FREEMAIN R,LV=(R7),A=(R2)    RELEASE OLD
         LH    R7,INDCB+82            INPUT RECORD LENGTH
         LA    R7,4(,R7)              ADD 4 FOR RECORD-CONTROL-WORD
NEWAREA  GETMAIN   R,LV=(R7)          GET NEW AREA
         ST    R7,OUTSIZE             SIZE OF AREA
         ST    R1,OUTAREA             ADDRESS OF AREA
READYMVE L     R2,OUTAREA      MOVE BY MOVE LONG
         LR    R3,R7           SIZE OF MOVE
         LH    R7,INDCB+DCBLRECL-IHADCB
         LA    R2,4(,R2)       WHERE TO MOVE
         MVCL  R2,R6                  DO IT
         L     R6,OUTAREA      REFRESH ADDRESS
         L     R7,OUTSIZE      REFRESH SIZE
         STCM  R7,3,0(R6)      STORE SIZE IN RECORD
RITING   STH   R7,DCBLRECL     RECORD LENGTH INTO OUTPUT DCB
WRITING  EQU   *
         CLC   INDCB+DCBLRECL-IHADCB(2),DCBLRECL  INPUT VS. OUTPIT
         BNL   WRITEON
         BAL   R9,OC4CHECK       THAN OUTPUT
WRITEON  EQU   *
         AP    PDDCT,ONE       ADD TO OUTPUT COUNT (LOGICAL)
         PUT   (R5),(R6)      PUT RECORD AT R6 TO FILE AT R5
         B     READING         START OVER
         SPACE 3
* ESSENTIALLY A REPEAT OF EARIER CODE. THIS CODE PREVENTS 0C4'S
* THAT OCCUR WHEN INPUT IS SHORTER THAN THE OUTPUT
OC4CHECK TM    DCBRECFM,DCBRECV       UNDEFINED OR VARIABLE
         BOR   R9
         LH    R3,DCBLRECL            OUTPUT RECORD LENGTH
         LH    R7,INDCB+82            INPUT  RECORD LENGTH
         C     R3,EXSIZE              EXCESS SIZE AREA
         BNH   MOOVEON                LOW THEN GO
         ICM   R2,15,EXAREA              ANY OUTPUT AREA
         BZ    NEWSTG                 NO
         L     R3,EXSIZE
         FREEMAIN R,LV=(R3),A=(R2)    RELEASE OLD
         LH    R3,DCBLRECL            OUTPUT RECORD LENGTH
         SRL   R3,10
         LA    R3,1(,R3)
         SLL   R3,10
NEWSTG   GETMAIN   R,LV=(R3)          GET NEW AREA
         ST    R3,EXSIZE             SIZE OF AREA
         ST    R1,EXAREA             ADDRESS OF AREA
MOOVEON  L     R2,EXAREA           MOVE BY MOVE LONG
         LH    R3,DCBLRECL            OUTPUT RECORD LENGTH
         MVCL  R2,R6                  DO IT
         L     R6,EXAREA          REFRESH ADDRESS
         L     R7,EXSIZE           REFRESH SIZE
         BR    R9
         SPACE 4
EODADR   EQU   *                  FINISH
         TM    INDCB+26,X'A2'        PHYSICAL SEQUENTIAL
         BM    E100                  NO, THEN NO INFORMATION
         TM    INDCB+17,X'A0'         DISK OR TAPE
         BZ    E100                  NO, AGAIN NO INFORMATION
         L     R3,INDCB+44            DEB ADDRESS FROM DCB
         L     R3,32(,R3)             UCB ADDRESS FROM DEB
         MVC   FROM,28(R3)            VOLUME SERIAL NUMBER
E100     TM    OUTDCB+26,X'A2'        PHYSICAL SEQUENTIAL
         BM    E110
         TM    OUTDCB+17,X'A0'        DISK OR TAPE
         BZ    E110
         L     R3,OUTDCB+44           DEB ADDRESS FROM DCB
         L     R3,32(,R3)             UCB ADDRESS FROM DEB
         MVC   TORM,28(R3)            VOLUME SERIAL NUMBER
E110     EQU   *
         CLOSE (INDCB,,OUTDCB)         CLOSE INXX AND OUTXX
         OI    INDCB+52,X'20'          TURN            ON
         UNPK  CNTRFLD,PDDCT           PREPARE AND
         OI    CNTRFLD+7,X'F0'               PRINT RECORD COUNT
         PUT   PRINT,MSG               THE PRINT
         L     R3,DDNUMBER             ANY MORE PAIRS
         BCT   R3,CLEANUP              YES
         B     FINIT                    NO
CLEANUP  XC    FROM,FROM               CLEAR MESSAGE AREA
         XC    TORM,TORM
         ST    R3,DDNUMBER             DD POSSIBLES
         PACK  PDDCT,CNTFLD            CURRENT DDNAME NUMBER
         AP    PDDCT,ONE               NEW DDNAME NUMBER
         UNPK  CNTFLD,PDDCT            MAKE PRESENTABLE FOR MESSAGE
         OI    CNTFLD+1,X'F0'
         MVC   COTFLD,CNTFLD
         FREEPOOL INDCB                RESET FILE AREAS
         FREEPOOL OUTDCB               RESET FILE AREAS
         B     HERWGO                  START AT OPEN
FINIT    EQU    *                      FINISHED FOR SURE
         CLOSE (PRINT)
         L     R13,SAVE+4
         RETURN  (14,12),T,RC=0       AND LEAVE
SAVE     DS    18F
         DS    0D
PDDCT    DC    2PL8'00000'
TFOUR    DS    CL1
DEVAREA  DC    6F'0'         FOR DEVTYPE MACRO
SYSP     DC    C'MESSAGES'
* SWU  EXIT LIST PROBABLY NOT NEEDED
INDCB    DCB   DSORG=PS,MACRF=GL,EODAD=EODADR,BUFNO=10 EXLST=(SWU)
OUTDCB   DCB   DSORG=PS,MACRF=PM,EXLST=(OUTS),BUFNO=10
DDI      DC    CL8'IN01    '
DDO      DC    CL8'OUT01   '
ONE      DC    PL4'1'
OUTSIZE  DC    F'0'
OUTAREA  DC    F'0'
EXSIZE   DC    F'0'
EXAREA   DC    F'0'
DDNUMBER DC    F'110'
HEAD     DC    C'1LIQUOR CONTROL BOARD UTILITY FTL I-8 DP',20X'40'
         REGISTER
MSG      DS    0CL60
         DC    CL6'0 END '
DDNIN    DS    0CL8
         DS    CL2
CNTFLD   DS    CL2
         DC    4X'40'
CNTRFLD  DC    CL8'        '
         DC    4X'40'
         DC    C'RECORDS FROM '
FROM     DS    CL6
         DC    C'  TO '
TORM     DS    CL6
         DC    C'        '
DDNOU    DS    0CL8
         DS    CL3
COTFLD   DS    CL2
PRINT    DCB   DSORG=PS,DDNAME=MESSAGES,MACRF=(PM),RECFM=FBA,LRECL=60, X
               BLKSIZE=120
         DS    0F
         DROP  R5
         USING IHADCB,R8
*SWU     DC    XL1'85'
*        DC    AL3(ROUTINE)
*OUTINE  TM    INDCB+36,X'C0'
*        BCR   4,R14
*        NI    INDCB+52,X'DF'
*        BR    R14
OUTS     DC    XL1'85'
         DC    AL3(AUTO)
AUTO     CLI   36(R1),X'00'
         BNE   AUTO1
         MVC   36(1,R1),DCBRECFM
AUTO1    CLC   82(2,R1),PDDCT+8
         BNE   AUTO2
         MVC   82(2,R1),DCBLRECL
AUTO2    CLC   62(2,R1),PDDCT+8
         BCR   7,R14
         MVC   62(2,R1),DCBBLKSI
         BR    R14
MSG1     DC    60X'40'
PARM     DSECT
BCTF     DS    1H
DDCT     DS    CL2
         PRINT NOGEN
         DCBD  DSORG=PS
WRKAREA  DSECT         THIS IS DUMMY WORK AREA, LENGTH HERE MEANS
         DS    CL3000     NOTHING, USED AS BASE REGISTER DEFINE ONLY
         END
