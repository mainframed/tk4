*
*  MODIFIED 4/3/86 TO SUPPORT CONCATENATED STEPLIBS AND
*              THE XA PARMLIB MEMBER LPALSTXX - KERMIT KISER
*
*  MODIFIED 4/22/86 TO ALSO SEARCH ISPLLIB CONCATENATION IF PRESENT- KK
*
*  MODIFIED 7/25/86 TO FIX THE PROBLEM OF LOCATE FINDING ONLY
*              A PORTION  OF THE DATASETS WHEN MULTIPLE MEMBERS
*              WERE SPECIFIED. - GORDON SCHILLINGER
*
         TITLE 'LOCATE - TSO COMMAND TO IDENTIFY THE LOCATION OF SPECIF*
               IED MEMBERS IN SYSTEM LIBRARIES'
*
*        LOCATE WILL REPORT THE NAME OF THE DATASET IN WHICH THE
*        SPECIFIED MEMBER(S) EXIST. SYSTEM LIBRARIES ARE SEARCHED IN
*        A MANNER SIMILAR TO THE PROGRAM FETCH MODULE SEARCH ORDER:
*              1) THE STEPLIB      (IF ONE EXISTS)
*              2) SYS1.LPALIB      (SEE NOTE BELOW ABOUT FLPA, MLPA)
*              3) SYS1.LINKLIB
*              4) THE SYSTEM LINK LIST, ALWAYS ASSUMED TO BE LNKLST00
*              5) SYS1.SVCLIB
*        THESE DATASETS ARE ALLOCATED AND CONCATENATED, THEN A BLDL
*        MACRO IS ISSUED AGAINST THE ENTIRE GROUP. THUS, ONLY THE FIRST
*        OCCURRENCE OF A MEMBER WILL BE REPORTED ALTHOUGH IT MAY EXIST
*        IN MORE THAN ONE LIBRARY.
*
*        LOCATED MEMBERS WILL BE IDENTIFIED BY ONE OF THE FOLLOWING:
*              MEMBER-NAME IS A MEMBER IN DATASET-NAME
*              -------------------------- STEPLIB DATASET-NAME
*              ALIAS-NAME IS AN ALIAS OF MEMBER-NAME IN DATASET-NAME
*              ---------------------------------------- STEPLIB DSNAME
*
*  NOTE ****** CONCERNING FIXED AND MODIFIED LINK PACK AREA DATASETS
*              A LOGICAL ERROR CAN OCCUR IN THE STANDARD OPERATION OF
*              LOCATE IF DATASETS OTHER THAN LINKLIB AND SVCLIB ARE
*              USED FOR LPA EXTENSIONS AND ARE APPENDED TO THE LINK
*              LIST, AS IS USUALLY THE CASE WITH SYS1.FLPALIB/MLPALIB.
*              ALTHOUGH THE SYSTEM PROPERLY SEARCHES THE VIRTUAL
*              STORAGE IMAGES OF THESE LIBRARIES, THE BLDL FUNCTION
*              DOES NOT, SO A LOCATION OTHER THAN THAT OF THE MODULE
*              ACTUALLY IN USE MAY BE REPORTED.
*       ****** FOR THIS REASON, A 'LOCATE ALL' FEATURE IS PROVIDED
*              WHICH WILL ISSUE A SEPARATE BLDL AGAINST EACH OF THE
*              DATASETS LISTED ABOVE AND REPORT ALL OCCURRENCES.
*
*        IF ALLOCATION OF ANY LIBRARY OTHER THAN STEPLIB IS REFUSED,
*        LOCATE WILL TERMINATE. IF STEPLIB IS A CONCATENATED GROUP IT
*        WILL BE IGNORED TO PREVENT UNNECESSARY CONFUSION OF THE
*        INTERNAL DATASET NAME TABLES.
*
*        ORIGINAL AUTHOR OF MVT VERSION UNKNOWN.
*        THIS VERSION WRITTEN FOR MVS (OS/VS RELEASE 3) AND USES
*        MVS-ONLY FUNCTIONS SUCH AS 'DYNALLOC' AND 'CALLTSSR'.
*              OCTOBER, 1976       SAM LEPORE       617 890-8460 X-138
*              GTE LABORATORIES, INC., 40 SYLVAN RD., WALTHAM, MASS.
*
*        ATTRIBUTES: RE-ENTRANT AND REUSABLE
*        SYS1.AMODGEN REQUIRED TO RESOLVE CVT MACRO
*
         EJECT
***********************************************************************
*        FOLLOWING AS COMMENTS IS THE HELP ENTRY FOR    LOCATE        *
*        TO USE THIS AS INPUT TO IEBUPDTE,                            *
*        MERELY REMOVE THE ASTERISKS FROM COLUMN 1.                   *
***********************************************************************
         SPACE 2
*./ ADD NAME=LOCATE
*)F FUNCTION -
*   LOCATE WILL REPORT THE NAME OF THE DATASET IN WHICH THE SPECIFIED
*   MEMBER NAME(S) EXIST. SYSTEM LIBRARIES ARE SEARCHED IN A MANNER
*   SIMILAR TO THE PROGRAM FETCH MODULE SEARCH ORDER. IF THE MEMBER
*   NAME SPECIFIED IS AN ALIAS, AND IF THE MODULE WHICH IT NAMES
*   IS REENTERABLE OR REUSABLE, LOCATE WILL ALSO IDENTIFY THE
*   REAL MEMBER NAME.
*)X SYNTAX -
*   LOCATE (MEMBER-NAMES) ALL
*
*REQUIRED - AT LEAST ONE MEMBER-NAME
*DEFAULTS - NONE
*OPTIONAL - ALL
*)O OPERANDS -
*))MEMBER-NAMES - ONE OR MORE MEMBER OR ALIAS NAMES TO BE SEARCHED FOR
*               IN THE SYSTEM LIBRARIES.
*))ALL - REQUEST TO LOOK FOR MEMBER-NAME IN EACH OF THE SYSTEM
*   LIBRARIES. IF ALL IS NOT SPECIFIED, ONLY THE FIRST OCCURRENCE
*   OF EACH MEMBER-NAME WILL BE REPORTED, JUST AS PROGRAM FETCH
*   STOPS AT THE FIRST PROGRAM COPY IT FINDS.
*   LIBRARY SEARCH ORDER IS THE SAME WHETHER ALL IS SPECIFIED OR NOT.
*     1) THE STEP LIBRARY, IF ONE EXISTS
*     2) SYS1.LPALIB
*     3) SYS1.LINKLIB
*     4) THE SYSTEM LINKLIST, AS DEFINED BY LNKLST00
*     5) SYS1.SVCLIB
*./ ENDUP
         EJECT
LOCATE   CSECT
         SAVE  (14,12),,*
         LR    R12,R15             REG 12 IS BASE AT DISPLACEMENT +0
         USING LOCATE,R12
         LR    R11,R1              SAVE CPPL ADDRESS
         USING CPPL,R11
         GETMAIN R,LV=CORENEED
         ST    R1,8(,R13)          FORWARD CHAIN
         ST    R13,4(,R1)          BACKWARD CHAIN
         LR    R13,R1              SAVEAREA/WORKAREA ADDRESSABILITY
         USING WORKAREA,R13
*
***********************************************************************
*        PARSE THE COMMAND OPERANDS                                   *
***********************************************************************
*
         LA    R10,PPLAREA         ADDRESS THE PARSE PARAMETER LIST
         USING PPL,R10
         MVC   PPLUPT,CPPLUPT      INITIALIZE
         MVC   PPLECT,CPPLECT        PARSE
         LA    R1,ECB                  PARAMETER
         ST    R1,PPLECB                 LIST
         MVC   PPLPCL,=A(PARSEPCL)         CONTROL
         LA    R1,PPLANSWR                   FIELDS
         ST    R1,PPLANS
         MVC   PPLCBUF,CPPLCBUF
         SR    R1,R1
         ST    R1,PPLUWA
         ST    R1,ECB
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         CH    R15,=H'4'           SUCCESSFUL ?
         BE    RETURN12            NO- MSG WAS ISSUED, RETURN TO TMP
         BH    PARSFAIL            NO- ISSUE MSG VIA GNRLFAIL ROUTINE
         L     R10,PPLANSWR        YES- ADDRESS PARSE DESCRIPTOR DSECT
         USING IKJPARMD,R10
*
***********************************************************************
*        INITIALIZE TSO MESSAGE ISSUER (IKJEFF02) PARAMETER LIST      *
***********************************************************************
*
         LA    R9,MTPARMS          ADDRESS MESSAGE ISSUER WORKAREA
         USING MTDSECTD,R9
         XC    MTPARMS(MTLENMT),MTPARMS CLEAR THE PARM LIST
         LA    R1,MTCSECTP
         ST    R1,MTPLPTR          POINT TO PARMS
         ST    R11,MTCPPLP         POINT TO CPPL
         LA    R1,ECB
         ST    R1,MTECBP           POINT TO PUTLINE COMMUNICATIONS ECB
         MVI   MTRESV1,X'80'       INDICATE END OF LINKAGE LIST
         MVC   MTCSECTP,=A(MESSAGES) ADDRESS OF MESSAGE TEXT CSECT
         OI    MTSW1,MTNOIDSW+MTPUTLSW ALL MSGS ARE 'PUTLINE INFO'
*
***********************************************************************
*        MOVE THE MEMBER NAMES TO THE WORKAREA                        *
***********************************************************************
*
         LA    R8,BLDAREA          ADDRESS BLDL LIST WORKAREA
         USING PDSBLDL,R8
         LA    R3,1                INITIALIZE BXLE LOOP - TOTAL
         LR    R4,R3                                    - INCREMENT
         LA    R5,MAXMEMS                               - LIMIT
         LA    R6,MEMNAME          ADDRESS FIRST SPECIFIED NAME PDE
MOVELOOP L     R2,0(,R6)           ADDRESS NAME CHARACTER STRING
         LH    R1,4(,R6)           LENGTH OF STRING
         BCTR  R1,0
         MVC   BLDMEM(8),=CL8' '   BLANK-FILL THE FIELD
         EX    R1,MOVEMEM          MOVE MEMBER NAME TO BLDL LIST
         L     R6,8(,R6)           FOLLOW CHAIN OF NAMES
         C     R6,ENDCHAIN         END OF CHAIN ?
         BE    ENDLOOP
         LA    R8,ENTRYLEN(,R8)    POINT TO NEXT ENTRY IN BLDAREA
         BXLE  R3,R4,MOVELOOP      LOOP UNTIL BLDAREA IS FULL
         MVC   MTMSGID(4),=C'OVFL' TABLE OVERFLOW IMMINENT, ISSUE MSG
         CALLTSSR EP=IKJEFF02,MF=(E,MTPARMS)
         LTR   R15,R15
         BNZ   RETURN12
         LR    R3,R5               RESET TOTAL TO MAXMEMS
ENDLOOP  STH   R3,BLDLIST          SET NUMBER OF ENTRIES FOR BLDL
         LA    R1,ENTRYLEN
         STH   R1,BLDELEN          SET LENGTH OF EACH ENTRY
         CR    R3,R4               ONLY ONE ENTRY ?
         BE    STEPLIB             YES- SKIP THE SORT
***********************************************************************
*        SORT THE MEMBERS INTO ASCENDING SEQUENCE                     *
***********************************************************************
         SR    R3,R4               SET OUTER LOOP TO TOTAL MINUS 1
         LA    R8,BLDAREA          ADDRESS FIRST MEMBER NAME
NEWLOW   LA    R1,ENTRYLEN(,R8)    ADDRESS NEXT ENTRY FOR INNER LOOP
         LR    R2,R3               SET INNER LOOP TO MAX OF OUTER VALUE
WHICHLOW CLC   0(8,R8),0(R1)       COMPARE CURRENT 'LOW' TO NEXT ENTRY
         BNH   OLDLOW              NOT HIGH- KEEP 'LOW', NEW 'NEXT'
         MVC   DBLWORD(8),0(R8)    HIGH- SWITCH ENTRIES, SAVE OLD
         MVC   0(8,R8),0(R1)            'NEXT' BECOMES 'LOW'
         MVC   0(8,R1),DBLWORD
OLDLOW   LA    R1,ENTRYLEN(,R1)    INCREMENT NEXT
         BCT   R2,WHICHLOW         COMPLETE INNER LOOP
         LA    R8,ENTRYLEN(,R8)    INCREMENT TO NEXT 'LOW'
         BCT   R3,NEWLOW           COMPLETE OUTER LOOP
*
***********************************************************************
*        BUILD THE LIBRARY SEARCH TABLE OF DATASET NAMES AND ALLOCATE *
*        EACH LIBRARY. BUILD A CORRESPONDING TABLE OF DDNAMES RETURNED*
*        BY DYNALLOC TO BE USED TO CONCATENATE OR OPEN EACH LIBRARY.  *
***********************************************************************
STEPLIB  LA    R8,S99PARMS         ADDRESS S99 REQUEST BLOCK
         USING S99RB,R8
         XC    S99PARMS(S99RBLEN),S99PARMS CLEAR THE BLOCK
         MVI   S99RBLN,S99RBLEN    SET LENGTH
         LA    R1,S99TEXTP
         ST    R1,S99TXTPP
***********************************************************************
*        FIRST SEE IF THERE IS AN ISPLLIB                             *
***********************************************************************
         CALL  DSNTAB,(=CL8'ISPLLIB',DSNTABLE,=H'1000',DSNCNT),VL,    XX
               MF=(E,PLIST)
         LTR   R15,R15                                           WDPSC
         BZ    GOTSUM                                           WDPSC
         CH    R15,=H'4'  OK?
         BNE   RETURN12   OOPS!
         LA    R3,DSNTABLE
         B     CHKSTEP
GOTSUM   LH    R1,DSNCNT                                         WDPSC
         MH    R1,=H'50'                                         WDPSC
         LA    R3,DSNTABLE(R1)                                   WDPSC
***********************************************************************
* CHECK STEPLIB AFTER ISPLLIB
***********************************************************************
CHKSTEP  CALL  DSNTAB,(=CL8'STEPLIB',0(R3),=H'1000',DSNCNT),VL,       XX
               MF=(E,PLIST)
         LTR   R15,R15                                           WDPSC
         BZ    GOTMORE                                          WDPSC
         CH    R15,=H'4'  OK?
         BNE   RETURN12   OOPS!
         B     LPALIB
GOTMORE  LH    R1,DSNCNT                                         WDPSC
         MH    R1,=H'50'                                         WDPSC
         LA    R3,0(R1,R3)                                   WDPSC
***********************************************************************
*        THEN THROW IN LPALIB AND LINKLIB                             *
***********************************************************************
LPALIB   L     R1,16              R1->CVT
         TM    116(R1),X'80'      XA?
         BNO   SKPLPAX            NOPE
         MVC   PARMNAME,LPALST00
         BAL   R14,READPARM                                      WDPSC
SKPLPAX  MVC   0(17,R3),SYS1LPA                                  WDPSC
         LA    R3,50(R3)                                         WDPSC
         MVC   0(18,R3),SYS1LINK                                 WDPSC
         LA    R3,50(R3)                                         WDPSC
         MVC   PARMNAME,LNKLST00
         BAL   R14,READPARM                                      WDPSC
         B     FINISHIT WITH SVCLIB                              WDPSC
***********************************************************************
*                FILL    TABLE WITH CONTENTS OF SYS1.PARMLIB(LNKLST00)*
***********************************************************************
READPARM ST    R14,L1LS                                          WDPSC
         MVI   S99VERB,S99VRBAL    SET DYNALLOC FUNTION TO ALLOCATE
         LA    R1,S99TEXT
         ST    R1,S99TEXTP         FIRST TEXT UNIT POINTER
         MVC   S99TEXT(18),SYS1PARM DSNAME SYS1.PARMLIB
         LA    R1,S99TEXT+18
         ST    R1,S99TEXTP+4       SECOND TEXT UNIT POINTER
         MVC   S99TEXT+18(14),PARMNAME MEMBER NAME LNKLST00
         LA    R1,S99TEXT+32
         ST    R1,S99TEXTP+8       THIRD TEXT UNIT POINTER
         MVC   S99TEXT+32(7),STATSHR STATUS SHARE
         LA    R1,S99TEXT+39
         ST    R1,S99TEXTP+12      FOURTH TEXT UNIT POINTER
         MVC   S99TEXT+39(4),FREECLOS AUTOMATICALLY FREE AT CLOSE
         LA    R1,S99TEXT+43
         ST    R1,S99TEXTP+16      FIFTH TEXT UNIT POINTER
         MVC   S99TEXT+43(14),RTDDN RETURN ALLOCATED DDNAME
         MVI   S99TEXTP+16,S99TUPLN INDICATE END OF POINTER LIST
         ST    R8,DBLWORD          POINT TO REQUEST BLOCK
         MVI   DBLWORD,S99RBPND
         LA    R1,DBLWORD          ADDRESS THE POINTER
         DYNALLOC
         LTR   R15,R15             SUCCESSFUL ?
         BNZ   S99FAIL
         MVC   DCB(96),DCBPARML    INITIALIZE DCB FOR READ PARMLIB
         MVC   DCB+40(8),S99TEXT+49 MOVE IN ALLOCATED DDNAME
         MVI   DBLWORD,X'80'       SET OPEN OPTION INPUT,END OF LIST
         OPEN  (DCB),MF=(E,DBLWORD)
         TM    DCB+48,X'10'        OPEN SUCCESSFUL ?
         BO    GETREC              YES- READ THE CONTROL CARDS
         MVC   MTMSGID(4),=C'NOPN' NO- TELL USER CANNOT OPEN
         LA    R1,ERRPARML
         ST    R1,MTINSRT          POINT TO MESSAGE INSERT
         MVI   MTLEN,L'ERRPARML    LENGTH OF INSERT
         CALLTSSR EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETURN12
GETREC   GET   DCB
         MVI   71(R1),C'*'         FORCE END OF SCAN AT COLUMN 72
FINDNONB CLI   0(R1),C' '          LOOK FOR FIRST NON-BLANK
         BNE   FOUNDNB
         LA    R1,1(,R1)           INCREMENT
         B     FINDNONB
FOUNDNB  CLC   0(12,R1),SYS1LINK+6 SYS1.LINKLIB DSNAME SPECIFIED ?
         BNE   CKLPA               NO- PUT NAME INTO DSNTABLE
         CLI   12(R1),C','         YES- MAKE SURE
         BE    SKIPLINK
         CLI   12(R1),C' '
         BNE   USENAME
SKIPLINK LA    R1,12(,R1)          INCREMENT PAST LINKLIB
         B     CHECKEND            SEE IF END OF CARD
CKLPA    CLC   0(11,R1),SYS1LPA+6  SYS1.LPALIB DSNAME SPECIFIED ?
         BNE   USENAME             NO- PUT NAME INTO DSNTABLE
         CLI   11(R1),C','         YES- MAKE SURE
         BE    SKIPLPA
         CLI   11(R1),C' '
         BNE   USENAME
SKIPLPA  LA    R1,11(,R1)          INCREMENT PAST LINKLIB
         B     CHECKEND            SEE IF END OF CARD
USENAME  LR    R2,R1
FINDEND  LA    R2,1(,R2)           FIND END OF CURRENT NAME
         CLI   0(R2),C','          COMMA
         BE    FOUNDEND
         CLI   0(R2),C' '          OR BLANK
         BNE   FINDEND
FOUNDEND MVC   0(6,R3),SYS1LINK    MOVE IN S99TEXT KEY HEADER
         SR    R2,R1               LENGTH OF DSNAME
         STC   R2,5(,R3)           PUT INTO S99TEXT
         BCTR  R2,0                DECREMENT FOR EXECUTE
         EX    R2,MOVEDSN          MOVE DSNAME INTO DSNTABLE SLOT
         LA    R3,50(,R3)          INCREMENT TO NEXT AVAILABLE SLOT
         LA    R1,1(R2,R1)         POINT TO SEPARATOR CHARACTER
CHECKEND CLI   0(R1),C' '          END OF LINKLIST ?
         BE    DONEPARM            YES- FINISH DSNTABLE
         CLI   1(R1),C' '          NO, NEXT COL BLANK ? (THIS IS COMMA)
         BE    GETREC              YES- LINKLIST CONTINUES
         LA    R1,1(,R1)           POINT TO ASSUMED NEXT DSN ON RECORD
         CLI   0(R1),C'*'          COLUMN 72 ? (FORCED AT 'GETREC')
         BNE   USENAME             NO- PROCESS NEXT DSNAME
         B     GETREC              YES- COMMA IS IN 71, LIST CONTINUES
DONEPARM MVI   DBLWORD,X'80'       SET CLOSE OPTION - END OF LIST
         CLOSE (DCB),MF=(E,DBLWORD)
         L     R14,L1LS                                          WDPSC
         BR    R14                                               WDPSC
***********************************************************************
*        FINISH THE DSNTABLE WITH SVCLIB, THEN ALLOCATE ALL DATASETS  *
***********************************************************************
FINISHIT MVC   0(17,R3),SYS1SVC
*
         SR    R6,R6               ZERO COUNTER
         LR    R5,R3               ADDRESS OF LAST DSN SLOT USED (SVC)
         LA    R4,50               INCREMENTAL VALUE FOR BXLE
         LA    R3,DSNTABLE         ADDRESS FIRST (STEPLIB) DSN TEXT KEY
         LA    R2,DDNTABLE+4       ADDRESS TABLE OF RETURNED DDNAMES
         CLI   1(R3),0             ANY STEPLIB ?
         BNE   SETALLOC            YES- ALLOCATE IT
         AR    R3,R4               NO- SKIP TO NEXT DSNTABLE SLOT
SETALLOC MVI   S99VERB,S99VRBAL
         LA    R1,S99TEXT
         ST    R1,S99TEXTP
         MVC   S99TEXT(7),STATSHR  STATUS SHARE
         LA    R1,S99TEXT+7
         ST    R1,S99TEXTP+4
         MVC   S99TEXT+7(4),FREECLOS AUTOMATIC FREE AT CLOSE
         LA    R1,S99TEXT+11
         ST    R1,S99TEXTP+8
ALLOCATE MVC   S99TEXT+11(14),RTDDN RETURN ALLOCATED DDNAME
         ST    R3,S99TEXTP+12      POINT TO NAME IN DSNTABLE
         MVI   S99TEXTP+12,S99TUPLN END OF POINTERS
         ST    R8,DBLWORD          POINT TO REQUEST BLOCK
         MVI   DBLWORD,S99RBPND
         LA    R1,DBLWORD          ADDRESS THE POINTER
         DYNALLOC
         LTR   R15,R15             SUCCESSFUL ?
         BNZ   S99FAIL
         MVC   0(10,R2),S99TEXT+15 MOVE LENGTH & DDNAME TO DDNTABLE
         MVI   1(R2),8             FORCE LENGTH TO 8
         LA    R2,10(,R2)          INCREMENT TO NEXT DDNTABLE SLOT
         LA    R6,1(,R6)           KEEP COUNT OF DDNAMES ALLOCATED
         BXLE  R3,R4,ALLOCATE
*
***********************************************************************
*        OPEN THE LIBRARIES, BLDL, AND REPORT ON EACH MEMBER. IF 'ALL'*
*        WAS SPECIFIED, LOOP FOR EACH LIBRARY. IF 'ALL' NOT SPECIFIED,*
*        CONCATENATE THE LIBRARIES BEFORE OPEN AND LOOP ONLY ONCE.    *
***********************************************************************
*
         LA    R2,DSNTABLE+50      DSNAMES TO BE USED AS MESSAGE INSERT
         LA    R3,DDNTABLE+4       ADDRESS DDNAMES LENGTH-TEXT UNITS
         CLI   DSNTABLE+1,0        ASSUME STEPLIB (FIRST ENTRY) ABSENT
         BE    CHECKALL            YES- SEE IF 'ALL' SPECIFIED
         LA    R2,DSNTABLE         NO- RESET DSNAME POINTER TO STEPLIB
         CLI   5(R2),36            ROOM TO INCLUDE STEPLIB ID WITH DSN?
         B     ONLYID              GOTTA SKIP THIS CUZA ISPLLIB--KK
         BH    ONLYID              NO- JUST SAY 'STEPLIB', FORGET NAME
         MVC   S99TEXT(36),6(R2)   YES- TEMPORARILY SAVE THE DSN
         MVC   6(8,R2),=C'STEPLIB ' ADD IDENTITY
         MVC   14(36,R2),S99TEXT   RESTORE THE NAME
         LH    R1,4(,R2)           PICK UP DSN LENGTH
         LA    R1,8(,R1)           ADD ID LENGTH
         STH   R1,4(,R2)           RESET
         B     CHECKALL
ONLYID   EQU   *                   I DONT LIKE THIS PART - KERMIT
*        MVC   6(17,R2),=C'YOUR STEP LIBRARY' OVERLAY STEPLIB DSN
*        MVI   5(R2),17            SET LENGTH
CHECKALL CLI   ALL+1,1             'ALL' SPECIFIED ? (TO SEARCH EACH)
         B     BLDLLOOP    BE      YES- SKIP CONCATENATION     5-15-78
         MVI   S99VERB,S99VRBCC    SET CONCATENATION FUNCTION
         LA    R1,DDNTABLE
         ST    R1,S99TEXTP         POINT TO CONCATENATION TEXT UNIT
         ST    R6,DDNTABLE         SET COUNT OF DDNAMES
         MVI   DDNTABLE+1,1        SET TEXT UNIT KEY ID
         MVI   S99TEXTP,S99TUPLN   END OF POINTERS
         ST    R8,DBLWORD          POINT TO REQUEST BLOCK
         MVI   DBLWORD,S99RBPND
         LA    R1,DBLWORD          ADDRESS THE POINTER
         DYNALLOC
         LTR   R15,R15             SUCCESSFUL ?
         BNZ   S99FAIL
         LA    R4,ERRSYSL+1        ADDRESS INSERT FOR 'NOT FOUND' MSG
         ICM   R4,B'1000',ERRSYSL  LENGTH OF INSERT
         LA    R6,1                FORCE ONLY ONE PASS THRU BLDLLOOP
         B     BLDLOPEN
BLDLLOOP LA    R4,6(,R2)           ADDRESS INSERT FOR 'NOT FOUND' MSG
         ICM   R4,B'1000',5(R2)    LENGTH OF INSERT
***********************************************************************
*        OPEN THE DATASET(S) VIA RETURNED DDNAME                      *
***********************************************************************
BLDLOPEN MVC   DCB(96),DCBSYSL     INITIALIZE DCB FOR OPEN FOR BLDL
         MVC   DCB+40(8),2(R3)     MOVE IN ALLOCATED DDNAME
         MVI   DBLWORD,X'80'       SET OPEN OPTION INPUT, END OF LIST
         OPEN  (DCB),MF=(E,DBLWORD)
         TM    DCB+48,X'10'        OPEN SUCCESSFUL ?
         BO    BLDL                YES- ISSUE BLDL
         MVC   MTMSGID(4),=C'NOPN' NO- TELL USER CANNOT OPEN
         ST    R4,MTINSRT          USE INSERT AS IN 'NOT FOUND' MSG
         CALLTSSR EP=IKJEFF02,MF=(E,MTPARMS)
         B     RETURN12
***********************************************************************
*        AT LAST, ISSUE THE BLDL                                      *
***********************************************************************
BLDL     BLDL  DCB,BLDLIST
         CH    R15,=H'4'           SUCCESSFUL ? (AT LEAST SOME FOUND)
         BNH   REPORT              YES- REPORT ON MEMBERS
         MVC   MTMSGID(4),=C'BLDL' NO- TELL USER BLDL FAILED
         ST    R4,MTINSRT          POINT TO INSERT
         STH   R15,DBLWORD         SAVE THE RETURN CODE, USE AS INSERT
         LA    R1,DBLWORD
         ST    R1,MTINSRT+4        POINT TO RETURN CODE INSERT
         MVI   MTINSRT+4,X'02'+X'80' SET LENGTH & 'PRINT AS DEC CHAR'
         CALLTSSR EP=IKJEFF02,MF=(E,MTPARMS)
         B     BLDLCLOS
***********************************************************************
*        REPORT ON EACH MEMBER AS FOUND OR NOT FOUND BY BLDL          *
***********************************************************************
REPORT   LA    R8,BLDAREA          ADDRESS THE FILLED IN MEMBER ENTRIES
         USING PDSBLDL,R8
         LH    R7,BLDLIST          NUMBER OF MEMBER ENTRIES
MEMLOOP  ST    R8,MTINSRT          POINT TO MEMBER NAME INSERT
         MVI   MTINSRT,8           LENGTH
         CLI   BLDR,0              MEMBER FOUND BY BLDL ?
         BNE   OFFSETK             YES- OFFSET TO PROPER DSN INSERT
         B     NXTMEMBR            NO, GET NEXT MEMBER ENTRY
OFFSETK  SR    R1,R1
         IC    R1,BLDK             GET RELATIVE CONCATENATION NUMBER
         MH    R1,=H'50'           TIMES DSNTABLE ENTRY LENGTH
         AR    R1,R2               ADDRESS RELATIVE DSNTABLE ENTRY
         LA    R5,6(,R1)           ADDRESS DSN FOR MSG INSERT
         ICM   R5,B'1000',5(R1)    LENGTH OF INSERT
         TM    BLDTYPE,BLDALIAS    IS BLDMEM ACTUALLY AN ALIAS NAME ?
         BO    ALIAS               YES- PREPARE ALIAS MESSAGE
         MVC   MTMSGID(4),=C'MEMB' USE MEMBER MESSAGE
         ST    R5,MTINSRT+4        POINT TO DSN INSERT
         B     ISSUEMSG
ALIAS    MVC   MTMSGID(4),=C'ALIA' USE ALIAS MESSAGE
         ST    R5,MTINSRT+8        DSN IS THIRD INSERT IN ALIAS MSG
         MVI   MTINSRT+4,0         ASSUME NO SECOND INSERT
         TM    BLDATTR1,BLDRENT+BLDREUS REENTRANT OR REUSABLE MEMBER ?
         BZ    ISSUEMSG            NEITHER- MESSAGE COMPLETE AS IS
         MVC   BLDMEMA-3(3),=C'OF ' PREFIX REAL MEMBER NAME FOR INSERT
         LA    R1,BLDMEMA-3
         ST    R1,MTINSRT+4        POINT TO SECOND INSERT (REAL MEMBER)
         MVI   MTINSRT+4,11        LENGTH OF INSERT
ISSUEMSG EQU *
         CALLTSSR EP=IKJEFF02,MF=(E,MTPARMS)
NXTMEMBR LA    R8,ENTRYLEN(,R8)    INCREMENT TO NEXT MEMBER ENTRY
         BCT   R7,MEMLOOP          LOOP FOR SPECIFIED MEMBERS
***********************************************************************
*        CLOSE THE DATASET(S) AND LOOP IF 'ALL' REQUESTED             *
***********************************************************************
BLDLCLOS MVI   DBLWORD,X'80'       SET CLOSE OPTION - END OF LIST
         CLOSE (DCB),MF=(E,DBLWORD)
         LA    R2,50(,R2)          INCREMENT TO NEXT DSNAME
         LA    R3,10(,R3)          INCREMENT TO NEXT DDNAME
         BCT   R6,BLDLLOOP         LOOP FOR EACH DD (IF 'ALL' SPECIF)
*
***********************************************************************
*        DONE - FREE WORKAREAS (INCLUDING PARSE PDE'S)                *
***********************************************************************
*
         IKJRLSA (10)              RELEASE PARSE STORAGE
         LR    R1,R13              ADDRESS THE SAVEAREA/WORKAREA
         L     R13,4(,R13)
         FREEMAIN R,LV=CORENEED,A=(1)
         RETURN (14,12),RC=0
         EJECT
*
***********************************************************************
*        FAILURE MESSAGE ROUTINES FOR PARSE, AND DYNALLOC             *
***********************************************************************
*
PARSFAIL LA    R1,GFPARAM          ADDRESS GNRLFAIL WORKAREA
         USING GFDSECTD,R1
         XC    GFPARAM(GFLENGF),GFPARAM CLEAR THE PARM LIST
         MVI   GFCALLID,GFPARSE    INDICATE PARSE ERROR
         ST    R15,GFRCODE         ERROR RETURN CODE
         ST    R11,GFCPPLP         POINTER TO CPPL
         LA    R2,ECB
         ST    R2,GFECBP           POINTER TO PUTLINE ECB
         SR    R2,R2
         ST    R2,ECB              CLEAR THE ECB
         ST    R1,DBLWORD          POINT TO THE PARAMETER LIST
         DROP  R1
         LA    R1,DBLWORD          ADDRESS THE POINTER
         LINK  EP=IKJEFF19
         B     RETURN12
*
S99FAIL  LA    R1,DFPARAM          ADDRESS DAIRFAIL WORKAREA
         USING DFDSECTD,R1
         XC    DFPARAM(DFLEN),DFPARAM CLEAR THE PARMLIST
         ST    R8,DFS99RBP         POINT TO REQUEST BLOCK
         ST    R15,DBLWORD         SAVE THE RETURN CODE
         LA    R2,DBLWORD
         ST    R2,DFRCP            POINT TO RETURN CODE
         LA    R2,=F'0'
         ST    R2,DFJEFF02         SHOW IKJEFF02 IS NOT LOADED
         LA    R2,DFSVC99
         STH   R2,DBLWORD+4        SET CALLER ID TO INDICATE SVC99
         LA    R2,DBLWORD+4
         ST    R2,DFIDP            POINT TO CALLER ID
         ST    R11,DFCPPLP         POINTER TO CPPL
         DROP  R1
         LINK  EP=IKJEFF18
*
*        SET 'NOT IN USE' ATTRIBUTE FOR ALL RESOURCES, THEN FLUSH STACK
*
RETURN12 LA    R8,S99PARMS         ADDRESS S99 REQUEST BLOCK
         USING S99RB,R8
         XC    S99PARMS(S99RBLEN),S99PARMS CLEAR THE BLOCK
         MVI   S99RBLN,S99RBLEN    SET LENGTH
         MVI   S99VERB,S99VRBRI    SET FUNCTION TO 'REMOVE IN USE'
         LA    R1,S99TEXTP
         ST    R1,S99TXTPP         POINT TO TEXT POINTERS
         LA    R1,S99TEXT
         ST    R1,S99TEXTP         POINT TO TEXT
         MVC   S99TEXT(6),TCBAD    TEXT UNIT TO ADDRESS THIS TCB
         MVC   S99TEXT+6(4),PSATOLD SUPPLY CURRENT TCB ADDRESS FROM PSA
         MVI   S99TEXTP,S99TUPLN   INDICATE END OF TEXT UNIT POINTERS
         ST    R8,DBLWORD          POINT TO REQUEST BLOCK
         MVI   DBLWORD,S99RBPND    (HIGH BIT MUST BE ON)
         LA    R1,DBLWORD          ADDRESS THE POINTER
         DYNALLOC
         IKJRLSA PPLANSWR          RELEASE ANY STORAGE FOR PARSE
         L     R2,CPPLUPT          ADDRESS THE USER PROFILE TABLE
         L     R3,CPPLECT          ADDRESS  ENVIRONMENT CONTROL TABLE
         STACK DELETE=ALL,PARM=DBLWORD,UPT=(2),ECT=(3),ECB=ECB,        *
               MF=(E,S99TEXT)      (USE S99TEXT AS WORKAREA FOR IOPL)
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN R,LV=CORENEED,A=(1)
         RETURN (14,12),RC=12
         EJECT
***********************************************************************
*                                  REGISTER USAGES                    *
***********************************************************************
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   WORK
R3       EQU   3                   WORK
R4       EQU   4                   WORK
R5       EQU   5                   WORK
R6       EQU   6                   WORK
R7       EQU   7                   WORK
R8       EQU   8    *DUAL USE*     BLDL ARRAY BASE * S99 FUNCTIONS BASE
R9       EQU   9                   TSO MESSAGE ISSUER PARAMETER BASE
R10      EQU   10                  PARSE PPL AND PDL ADDRESSABILITY
R11      EQU   11                  CPPL ADDRESSABILITY
R12      EQU   12                  PROGRAM BASE
R13      EQU   13                  *
R14      EQU   14                  ** STANDARD LINKAGES
R15      EQU   15                  *
         SPACE 2
***********************************************************************
*                                  EQUATES                            *
***********************************************************************
MAXMEMS  EQU   16
ENTRYLEN EQU   46
MAXDSNS  EQU   40
PSATOLD  EQU   540                 ADDRESS OF CURRENT TCB, HEX LOC 21C
         SPACE 2
***********************************************************************
*        EXECUTED INSTRUCTIONS                                        *
***********************************************************************
MOVEMEM  MVC   BLDMEM-PDSBLDL(0,R8),0(R2) MOVE MEMBER NAME TO BLDL AREA
MOVEDSN  MVC   6(0,R3),0(R1)       MOVE DSNAME TO DSNTABLE SLOT
         SPACE 2
***********************************************************************
*        DYNAMIC ALLOCATION TEXT UNITS INITIAL VALUES                 *
***********************************************************************
DDSTEPL  DC    X'0001',X'0001',X'0008',CL8'STEPLIB'    DINDDNAM
RTDSN    DC    X'0005',X'0001',X'002C' PLUS CL44       DINRTDSN
RTATT    DC    X'000C',X'0001',X'0001' PLUS X          DINRTATT
SYS1LPA  DC    X'0002',X'0001',X'000B',C'SYS1.LPALIB'  DALDSNAM
SYS1LINK DC    X'0002',X'0001',X'000C',C'SYS1.LINKLIB'
SYS1SVC  DC    X'0002',X'0001',X'000B',C'SYS1.SVCLIB'
SYS1PARM DC    X'0002',X'0001',X'000C',C'SYS1.PARMLIB'
LNKLST00 DC    X'0003',X'0001',X'0008',C'LNKLST00'     DALMEMBR
LPALST00 DC    X'0003',X'0001',X'0008',C'LPALST00'     DALMEMBR
STATSHR  DC    X'0004',X'0001',X'0001',X'08'           DALSTATS
FREECLOS DC    X'001C',X'0000'                         DALCLOSE
RTDDN    DC    X'0055',X'0001',X'0008',CL8' '          DALRTDDN
TCBAD    DC    X'0001',X'0001',X'0004' PLUS XL4        DRITCBAD
         SPACE 2
***********************************************************************
*        OTHER CONSTANTS                                              *
***********************************************************************
ENDCHAIN DC    0F'0',X'FF000000'   END OF CHAIN OF PARSE PDE LIST
ERRPARML DC    C'PARMLIB LINKLIST MEMBER'
ERRSYSL  DC    AL1(34),C'CONCATENATED SYSTEM LINK LIBRARIES'
         PRINT NOGEN
         DS    0D
DCBPARML DCB   DSORG=PS,MACRF=(GL)
DCBSYSL  DCB   DSORG=PO,MACRF=(R)
         LTORG
         EJECT
***********************************************************************
*        WORKAREAS, DSECTS, AND MAPPING MACROES                       *
***********************************************************************
WORKAREA DSECT
         DS    18F                 STANDARD REGISTER SAVEAREA
DBLWORD  DS    D                   GENERAL PURPOSE DOUBLE WORD
ECB      DS    F                   TSSR COMMUNICATIONS ECB
PPLAREA  DS    7F                  PARSE PARAMETER LIST
PPLANSWR DS    F                   ADDRESS OF PDL (RETURNED BY PARSE)
GFPARAM  DS    11F                 GNRLFAIL/VSAMFAIL ROUTINE PARAMETERS
MTPARMS  DS    15F                 IKJEFF02 MESSAGE ISSUER PARM LIST
S99PARMS DS    5F                  DYNAMIC ALLOCATION REQUEST BLOCK
S99TEXTP DS    5F                  DYNALLOC TEXT UNIT POINTERS
S99TEXT  DS    CL256               DYNALLOC TEXT UNITS (AND WORKAREA)
DFPARAM  DS    5F                  DAIRFAIL ROUTINE PARAMETERS
PARMNAME DS    XL14                                              WDPSC
L1LS     DS    F                                                 WDPSC
PLIST    DS    4F                                                WDPSC
DSNCNT   DS    H                                                 WDPSC
DSNTABLE DS    0XL6                TEXT UNIT KEYS FOR DATASETS TO BE
         DS    0XL44                 ALLOCATED AND SEARCHED.
         DS    (MAXDSNS)CL50         ROOM FOR STEP,LPA,SVC, & 16 LINKS
DCB      DS    0D,CL96             DCB TO READ PARMLIB AND OPEN SYSLIBS
DDNTABLE DS    XL4                 TEXT UNIT KEY TO CONCATENATE DDNAMES
         DS    0XL2                  RETURNED BY DYNALLOC OF DSNTABLE.
         DS    0XL8                  LENGTH OF EACH DDNAME FORCED TO 8
         DS    (MAXDSNS)CL10         (TRAILING BLANKS IN VALUE ARE OK)
BLDLIST  DS    H                   NUMBER OF ENTRIES IN LIST
BLDELEN  DS    H                   LENGTH OF EACH ENTRY
BLDAREA  DS    (MAXMEMS)CL(ENTRYLEN) ARRAY OF MEMBER NAME ENTRIES
CORENEED EQU   *-WORKAREA          ***LENGTH NEEDED FOR GETMAIN***
         SPACE 3
PDSBLDL  DSECT
BLDMEM   DS    CL8                 MEMBER OR ALIAS NAME
BLDTT    DS    XL2                 TTR TRACK OF FIRST BLOCK
BLDR     DS    X                   TTR RECORD
BLDK     DS    X                   CONCATENATED DATASET NUMBER
BLDLIBRY DS    X                   LIBRARY IDENTIFIER WHERE FOUND:
BLDPRIV  EQU   0                     FOUND IN PRIVATE LIBRARY
BLDLINK  EQU   1                     FOUND IN SYSTEM LINK LIST LIBRARY
BLDJSTEP EQU   2                     FOUND IN JOB, STEP, OR TASK LIB
BLDTYPE  DS    X
BLDALIAS EQU   X'80'               BLDMEM FIELD IS AN ALIAS NAME
         DS    XL3                 TTR OF FIRST TEXT BLOCK
         DS    X                   RESERVED
         DS    XL3                 TTR OF NOTE LIST OR SCATTER TABLE
         DS    X                   NUMBER OF NOTE ENTRIES
BLDATTR1 DS    X                   ATTRIBUTE BYTE 1
BLDRENT  EQU   X'80'               REENTERABLE
BLDREUS  EQU   X'40'               REUSABLE
BLDATTR2 DS    X                   ATTRIBUTE BYTE 2
         DS    XL3                 MAIN STORAGE NEEDED FOR MODULE
         DS    XL2                 LENGTH OF FIRST TEXT BLOCK
         DS    XL3                 ENTRY-POINT ADDRESS
         DS    XL3                 FIRST TEXT BLOCK ORIGIN
         DS    XL3                 ENTRY-POINT FOR MEMBER-NAME IF ALIAS
BLDMEMA  DS    CL8                 LOAD MODULE MEMBER NAME IF ALIAS
         SPACE 3
LOCATE   CSECT
PARSEPCL IKJPARM
MEMNAME  IKJIDENT 'MEMBER NAME(S)',LIST,MAXLNTH=8,FIRST=ALPHA,         *
               OTHER=ALPHANUM,PROMPT='MEMBER NAME(S)',HELP=('NAMES OF M*
               EMBERS TO BE SEARCHED FOR IN THE SYSTEM LIBRARIES')
ALL      IKJKEYWD
         IKJNAME 'ALL'
         IKJENDP
         PRINT GEN
         IKJCPPL
         IKJPPL
         IKJEFFGF GFDSECT=YES
         IKJEFFMT MTDSECT=YES
         IEFZB4D0
S99RBLEN EQU   S99RBEND-S99RB
         IKJEFFDF DFDSECT=YES
DFPEND   EQU   *
         CVT   DSECT=YES           (DISTRIBUTED IN SYS1.AMODGEN)
         EJECT
MESSAGES CSECT
         IKJTSMSG ('TOO MANY MEMBER NAMES FOR INTERNAL TABLE -- LIST TR*
               UNCATED'),OVFL
         IKJTSMSG ('STEPLIB FOUND TO BE CONCATENATED GROUP -- NOT SUPPO*
               RTED, IGNORED'),STEP
         IKJTSMSG ('UNABLE TO OPEN ',,' -- LOCATE TERMINATED'),NOPN
         IKJTSMSG ('BLDL FAILED FOR ',,' -- BLDL RETURN CODE ',),BLDL
         IKJTSMSG (,' IS A MEMBER IN ',),MEMB
         IKJTSMSG (,' IS AN ALIAS ',,' IN ',),ALIA
         IKJTSMSG (,' NOT FOUND IN ',),NFND
         IKJTSMSG
         END
