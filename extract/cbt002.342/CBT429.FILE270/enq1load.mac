//DNE00150 JOB (2100,56-D),'DPARS 0682 T',CLASS=H,MSGCLASS=T
//* FROM WIZRD150.DN00150.FILE(ENQ1LOAD)
//L EXEC ASMHCL,OPTION1=TERM,LIBRARY='LOADLIB',LNDSP=SHR
         TITLE 'DISPLAY ENQUEUE ' WDPSC.CMDLIB
* DENQ TEXT ORIGINALLY FROM CBT MVS MODIFICATION TAPE VIA SHARE.
* DO NOT LOSE THIS BECAUSE IT IS NOT ON TAPE ANY MORE.
* 05/24/82 MODIFIED FOR SP 1.3 WHICH MOVED THE ENQ TABLES TO ANOTHER
* ADDRESS SPACE CONNECTION IS NOW MADE WITH THE GQSCAN MACRO
ENQ1LOAD CSECT
***********************************************************************
*
*        OPERATOR COMMAND TO DISPLAY JOBNAMES,USERIDS IN ENQ CHAIN
*
*        ON ENTRY:
*                 R2  = ADDRESS OF DSXSA (EXTENDED SAVE AREA)
*                 R15 = ADDRESS OF ENTRY POINT
*
*        COMMAND FORMAT:
*
*              DENQ  "MAJOR"/"MINOR"
*
*        WHERE:
*              MAJOR = MAJOR QCB NAME, MAX 8 BYTES
*              MINOR = MINOR QCB NAME, MAX 255 BYTES
*
*        MINOR MAY ALSO BE GIVEN AS:
*              1) *   - OBTAIN ALL MINOR NAMES FOR GIVEN MAJOR NAME
*              2) XY* - OBTAIN ALL MINOR NAMES BEGINNING WITH XY;
*                       XY = ANY COMBINATION AND SIZE OF CHARACTERS
*
*        IF MAJOR IS GIVEN AS * , ONLY MAJOR QCB NAMES ARE PRINTED
*
*        CSECT  NAME: ENQ1LOAD
*        MODULE NAME: ENQ1LOAD
*        ATTRIBUTES : REENTRANT,REUSABLE
*
*        AUTHOR      : ALAN M. WOOLF
*        DATE        : NOVEMBER 9, 1971
*        INSTALLATION: SIKORSKY AIRCRAFT, DIV. OF UNITED AIRCRAFT CORP.
*
***********************************************************************
         B     14(0,R15)          BRANCH AROUND ID
         DC    AL1(8)
         DC    CL8'ENQ1LOAD  '    IDENTIFIER
         LR    R12,R15            SET ADDRESSABILITY
         LR    R2,R1
         USING ENQ1LOAD,R12
         LA    R0,LWKDSECT
         GETMAIN R,LV=(0)
         XC    0(256,R1),0(R1)    ZERO-OUT WORK AREA
         XC    256(LWKDSECT-256,R1),256(R1)
         LR    R13,R1
         USING WKDSECT,R13        FIRST 18 WRDS ARE SAVE-AREA
         ST    R14,SAVA           PUT RETURN ADDRESS IN UNUSED SLOT
         STH   R0,WKSIZE          SAVE SIZE
         EJECT
***********************************************************************
*
*        GET CORE FOR WORK TABLE
*
***********************************************************************
         L     R0,CORSIZ
         STH   R0,CORESIZE
         GETMAIN R,LV=9120
         LA    R1,0(R1)
         ST    R1,CORE
         SPACE 1
         L     R0,CORSIZ2
         GETMAIN R,LV=(0)
         ST    R1,GQSTUFF
***********************************************************************
*
*        PARSE INPUT STRING
*
***********************************************************************
         MVI   MAJNAM,C' '
         MVC   MAJNAM+1(256),MAJNAM    CLEAR MAJOR/MINOR NAME FIELDS
         MVC   MAJNAM+257(6),MAJNAM+256
         L     R3,0(,R2)              COMMAND INPUT STRING
         OC    4(20,R3),4(R3)
         LA    R3,4(,R3)              COMMAND TEXT
LOOPC    CLI   0(R3),C' '             END OF COMMAND TEXT
         BE    PARSEIT                YES
         LA    R3,1(,R3)              TRY FOR END
         B     LOOPC
PARSEIT  EQU   *
         CLI   0(R3),C' '           FIRST CHARACTER A BLANK
         BNE   LOOPAEND             NO, PROCEED
         LA    R3,1(,R3)            ADD 1
         B     PARSEIT              TRY AGAIN
LOOPAEND EQU   *
         LR    R8,R3
         CLI   0(R3),C'*'         FIND ONLY MAJOR NAMES ?
         BE    SETMAJNM           YES..
         LA    R4,0               LENGTH COUNTER
         LA    R5,9
LOOP2    CLI   0(R3),C'/'         MAJOR/MINOR DELIMITER ?
         BE    GOTMAJOR           YES...
         CLI   0(R3),C' '         END-OF-STRING ?
         BE    PARMERR            YES...NO MINOR NAME GIVEN.
         LA    R4,1(,R4)          INCREMENT LENGTH
         LA    R3,1(,R3)          INCREMENT PTR
         BCT   R5,LOOP2           TRY NEXT CHAR
         B     BADERR             MAJOR NAME TOO LONG.
GOTMAJOR BCTR  R4,0               SET FOR EXECUTE
         LA    R6,MAJNAM          WHERE TO GO IN EXECUTE
         EX    R4,MVNAM           GET MAJOR NAME
         OC    MAJNAM(8),HEX40S
         STH   R4,MAJLGTH         SAVE MODIFIED LENGTH
         LA    R4,0               RESET LENGTH COUNTER
         LA    R3,1(,R3)          MOVE PAST '/'
         LR    R8,R3              SAVE START OF MINOR NAME
         LA    R5,256             MAX LENGTH OF MINOR NAME
LOOP3    CLI   0(R3),C' '         END-OF-STRING
         BE    GOTMINOR           YES...
         LA    R3,1(,R3)          INCREMENT PTR
         LA    R4,1(,R4)          INCREMENT LENGTH
         BCT   R5,LOOP3
         B     BADERR             MINOR NAME TOO LONG
GOTMINOR BCTR  R4,0
         LA    R6,MINNAME         WHERE TO GO IN EXECUTE
         EX    R4,MVNAM           GET MINOR NAME
         OC    MINNAME(255),HEX40S
         LA    R4,1(,R4)          RESET LENGTH
         STH   R4,MINLGTH         SAVE LENGTH
***********************************************************************
*
*        SCAN FOR '*' IN MINOR NAME
*
***********************************************************************
         LA    R3,MINNAME
         LA    R4,0               COUNT OF CHAR PRIOR TO '*'
         LH    R5,MINLGTH
LOOP4    CLI   0(R3),C'*'         FIND IT ?
         BE    ASK                YES...
         LA    R3,1(,R3)          NO..NEXT CHAR
         LA    R4,1(,R4)          INCREMENT COUNT
         BCT   R5,LOOP4
         B     NOASK              NO '*' IN MINOR NAME
ASK      LTR   R4,R4              ANY CHAR PRIOR TO '*' ?
         BZ    ALLMINOR           NO..GET ALL MINOR NAMES
         MVI   SWTCH,X'0F'        YES..PARTIAL MINOR NAME GIVEN
         STH   R4,MINLGTH         SET NEW LENGTH
         B     NOASK              JOIN COMMON CODE
ALLMINOR MVI   SWTCH,X'F0'        SET FOR ALL MINOR NAMES
         B     NOASK
SETMAJNM XC    MAJNAM,MAJNAM      SET MAJOR NAME
         XC    MAJLGTH(2),MAJLGTH SET MODIFIED LENGTH
         MVI   SWTCH+1,X'0F'      SET FOR ONLY MAJOR NAMES
         MVI   SWTCH,X'0F'      SET FOR ONLY MAJOR NAMES
         EJECT
***********************************************************************
*
*        CHECK POINTER IN CVT FOR EXISTENCE OF QCB/QEL CHAIN.
*        IF ZERO, THE SYSTEM IS MVS/SP1.3 OR HIGHER AND THE GQSCAN
*        MECHANISM MUST BE USED.
*
***********************************************************************
NOASK    EQU   *
         L     R5,X'10'           CVT PTR
         ICM   R2,15,640(R5)      MAJOR QCB POINTER
         BNZ   CHKQCB             IF IT EXISTS THIS IS BEFORE SP 1.3
         LA    R4,MAJNAM          MAJOR NAME ADDRESS
         TM    SWTCH,X'FF'        WAS AN ASTERISK PRESENT IN COMMAND
         BZ    SASTRIK            NO
         SR    R5,R5              ZERO THE MINOR
         SR    R6,R6              ZERO THE MINOR LENGTH
         TM    SWTCH+1,X'0F'      MAJOR ONLY
         BZ    SMINORGO
         SR    R4,R4              ZERO THE MAJOR
         B     SMINORGO
SASTRIK  EQU   *
         LA    R5,MINNAME       MINOR NAME ADDRESS
         LH    R6,MINLGTH       MINOR NAME LENGTH
SMINORGO EQU   *
         STM   R4,R6,GQSTUFF+4
         MVC   GQSTUFF+18(4),CORESIZE
         L     R8,CORE
         ST    R8,GQCORE LOCATION OF MESSAGE TABLE
         SR    R8,R8
         ST    R8,GQENTCT NUMBER OF USED ENTRIES IN TABLE
         XC    GQTOKEN,GQTOKEN
         SPACE 4
***********************************************************************
*
*      TOKEN IS A ZEROED FIELD ON FIRST ENTRY, AND IS USED AS START
*      POINT IF NECESSARY.
*      REGISTER  ARE ZERO FOR NON-SPECIFIC SCANS. R5 AND R6 ARE ZERO
*      IF EITHER MAJOR ONLY OR GENERAL MINOR. R4 IS ZERO FOR MAJOR
*      ONLY.
*
*
*
***********************************************************************
SGUN     EQU   *
         LM    R3,R7,GQSTUFF
         LA    R2,GQTOKEN
         SPACE 1
         MVC   BUFFER(GQSCANLL),GQSCANL
         GQSCAN AREA=((R3),(R7)),SCOPE=ALL,RESNAME=((R4),(R5),(R6)),  XX
               TOKEN=(R2),MF=(E,BUFFER)
         B     STABLE(R15)
STABLE   B     SSCANQ
         B     NOOUTPUT
         B     SSCANQ
         B     QELERR
         B     QELERR
         SPACE 4
***********************************************************************
*
*      ITEMS HAVE BEEN FOUND
* THE STARTING POINT IS THE RIB CONTROL BLOCK.
*
***********************************************************************
SSCANQ   EQU   *
         L     R3,GQSTUFF
         STM   R15,R1,GQRETURN      STORE RETURN CODES
         L     R2,GQENTCT           CURRENT NUMBER OF TABLE ENTRIES
         L     R4,GQCORE            TABLE FOR RESOURCES
SRIBALL  LR    R7,R3                 ADDRESS OF RIB
         AH    R7,GQRIBLN           LENGTH OF RIB FIXED AREA
         USING RIB,R3
         USING RIBVAR,R7
         USING RIBE,R10
         SR    R9,R9
         IC    R9,RIBRNMLN          LENGTH OF RNAME
         TM    SWTCH+1,X'0F'        MAJOR NAMES ONLY
         BNZ   SRIBMAJR NO
         TM    SWTCH,X'F0'          ALL MINOR NAMES
         BO    SCMPNAME
         TM    SWTCH,X'0F'          MINOR NAMES BEGINNING WITH
         BO    SCKLGTH
         CH    R9,MINLGTH           ARE LENGTHS EQUAL
         BNE   SNXTRIB
SCKLGTH  LH    R8,MINLGTH           COMPARISON LENGTH
         BCTR  R8,0
         EX    R8,CLCRNAME          CLC MINNAME(0),RIBRNAME
         BNE   SNXTRIB
SCMPNAME EQU   *
         STC   R9,1(,R4)            PUT NAME LENGTH IN TABLE
         LA    R9,2(,R9)            INCREASE FOR CONTROL BYTES
         SR    R8,R8
         D     R8,=F'9'
         LTR   R8,R8                ANY REMAINDER?
         BZ    SFILLOUT      L9     NO...
         LA    R9,1(,R9)            YES,   ROUND UP
SFILLOUT STC   R9,0(,R4)            PUT NO. OF TABLE ENTRIES IN TABLE
         AR    R2,R9                INCREMENT NO. OF ENTRIES
         C     R2,=F'1000'          OVERFLOW TABLE
         BH    STBOFL2
         IC    R9,RIBRNMLN          RETURN LENGTH TO ORIGINAL - 1
         BCTR  R9,0
         EX    R9,MVCRNAME          MOVE MINOR NAME TO TABLE
         LH    R9,RIBVLEN
         LA    R10,0(R9,R7)         LOCATION OF RIBE
         SR    R8,R8
         IC    R9,0(,R4)            NUMBER OF ENTRIES
         M     R8,=F'9'
         AR    R4,R9                POINT TO NEXT SLOT
         L     R8,RIBNRIBE          NUMBER OF RIBE'S RETURNED
***********************************************************************
*
*      THE RIBE CONTROL BLOCK IS SCANNED. RIBE IS LOCATED BY
*      A(RIBRNAME) PLUS C(RIBVLEN). ADDRESS OF RNAME (MINOR) AND LENGTH
*      OF VARIABLE SECTION.
*
***********************************************************************
SRIBE    EQU   *
         MVC   0(8,R4),RIBEJBNM     JOBNAME OF RESOURCE USER
         MVI   8(R4),C'S'           ASSUME SHARED ENQUEUE
         TM    RIBERFLG,RIBERESV    RESERVE  REQUEST
         BZ    SRIBECK1 NO
         MVI   8(R4),C'R'           INDICATE RESERVE
SRIBECK1 TM    RIBERFLG,RIBETYPE    SHARED  REQUEST?
         BO    SRIBECK2
         MVI   8(R4),C'E'
         TM    RIBERFLG,RIBERESV    RESERVE REQUEST
         BZ    SRIBECK2
         MVI   8(R4),C'X'           EXCLUSIVE RESERVE
SRIBECK2 EQU   *
         MVI   SWTCH+1,X'F0'        FLAG MINORS FOUND
         LA    R2,1(,R2)            INCREMENT ENTRY NUMBER
         LA    R4,9(,R4)            INCREMENT TABLE LOCATION
         C     R2,=F'1000'          TOO MANY ENTRIES
         BH    STBOVFL
         AH    R10,GQRIBELN         ADD LENGTH OF RIBE
         BCT   R8,SRIBE             BRANCH WHEN RESULT IS ZERO
         SPACE 3
***********************************************************************
*
*      ADVANCE TO NEXT RIB CONTROL BLOCK BY CALCULATING BASED ON
*      NUMBER OF RIBE CONTROL BLOCKS FOR THE RIB AND THE APPROPIATE
*      LENGTHS.
*
***********************************************************************
SNXTRIB  L     R8,GQRIBNUM          NUMBER OF RIB'S RETURNED
         S     R8,=F'1'      REDUCE BY ONE
         BZ    SNXTSCAN      BRANCH WHEN RESULT IS ZERO
         ST    R8,GQRIBNUM
         L     R8,RIBNRIBE      NUMBER OF RIBE'S
         MH    R8,GQRIBELN      LENGTH OF RIBE FIXED
         AH    R3,RIBVLEN       LENGTH OF RIBE VARIABLE (MULT OF 4)
         AH    R3,GQRIBLN       LENGTH OF RIB  FIXED
         AR    R3,R8            NEXT RIB
         B     SRIBALL
         EJECT
**********************************************************************
*
*   SCAN MAJOR NAMES ONLY.              THE OUTPUT TABLE IS SCANNED
*   AND THE UNIQUE ONES ARE KEPT. THE TABLE IS IN ASCENDING SEQUENCE.
*   ONCE NAME IS IN THE TABLE PROCEED TO THE NEXT RIB RETURNED BY
*   GQSCAN.
*
**********************************************************************
SRIBMAJR EQU   *
         CLC   MAJNAM,RIBQNAME    CHECK MAJOR NAME TO LAST ONE
         BE    SNXTRIB            GET NEXT IF EQUAL
         MVC   MAJNAM,RIBQNAME    KEEP FOR CHECK
         LTR   R2,R2               HAS IT BEGUN
         BZ    SRIBMAJU NO
         L     R7,CORE            BEGINNING OF OUTPUT TABLE
         LA    R8,8               SIZE OF ENTRY
         LR    R9,R4              EMPTY ENTRY IN TABLE
         SR    R9,R8              POINT TO LAST USED ENTRY IN TABLE
SRIBMAJS CLC   RIBQNAME,0(R7)
         BE    SNXTRIB
         BL    SRIBMAJT
         BXH   R7,R8,SRIBMAJU
         B     SRIBMAJS
SRIBMAJT EQU   *
         MVC   8(8,R9),0(R9)
         SR    R9,R8
         CR    R9,R7
         BNL   SRIBMAJT
         MVC   0(8,R7),RIBQNAME
         B     SRIBMAJV
SRIBMAJU EQU   *
         MVC   0(8,R4),RIBQNAME   MOVE TO TABLE
SRIBMAJV EQU   *
         LA    R2,1(,R2)          INCREMENT TABLE COUNTER
         LA    R4,8(,R4)          NEXT TABLE ENTRY
         C     R2,=F'1000'        OVERFLOW TABLE YET
         BH    STBOFL2            YEP
         B     SNXTRIB            GET NEXT RIB AND PROCEED
         SPACE 4
*********************************************************************
*
*   CHECK FOR MORE RIB POSSIBILITIES AND RETURN TO GQSCAN IF
*   NECESSARY
*
*********************************************************************
SNXTSCAN EQU   *
         ICM   R3,15,GQTOKEN
         BZ    SLEAVE
         ST    R4,GQCORE          CURRENT LOCATION IN MESSAGE TABLE
         ST    R2,GQENTCT         COUNT OF ENTRIES USED
         B     SGUN
         SPACE 1
STBOFL2  SR    R2,R9              REDUCE NUMBER OF USED ENTRIES
STBOVFL  LA    R1,32              SET RETURN CODE VALUE
         LR    R3,R2              PLACE NUMBER OF ENTRIES
         B     SETSIZE
         SPACE 2
SLEAVE   LR    R3,R2   AGREE TO PRE SP1.3 CODE
         TM    SWTCH+1,X'0F'      MAJOR NAMES ONLY
         BO    EXITOK1
         B     EXITOK
         TITLE 'PRE SP 1.3 CODE'
         PRINT OFF
CHKQCB   EQU   *
         BZ    NOMAJNAM           NO...
         SPIE  SPIEXIT,(4)        SPIE 0C4'S
         EJECT
***********************************************************************
*
*        SSM   *+1                DISABLE ALL INTERRUPTS
*
***********************************************************************
         LA    R3,0               CURRENT NUMBER OF TABLE ENTRIES
         LA    R5,1000            MAX NUMBER OF ENTRIES
         L     R4,CORE            START OF FREE CORE TABLE
         TM    SWTCH+1,X'0F'      OBTAIN ONLY MAJOR NAMES ?
         BZ    LOOP5              NO...CONTINUE NORMALLY
***********************************************************************
*
*        OBTAIN ONLY MAJOR QCB NAMES HERE
*
***********************************************************************
MAJLOOP  MVC   0(8,R4),16(R2)     GET MAJOR QCB NAME
         LA    R3,1(,R3)          INCREMENT COUNTER
         LA    R4,8(,R4)          NEXT TABLE ENTRY
         CR    R3,R5              OVERFLOW TABLE ?
         BH    TABLOVFL           YES...
         L     R2,0(,R2)          NEXT MAJOR QCB
         LTR   R2,R2              EXIST ?
         BNZ   MAJLOOP            YES...GO GET IT
         B     EXITOK1            ALL FINISHED.
***********************************************************************
*
*        FIND REQUESTED MAJOR NAME QCB
*
***********************************************************************
LOOP5    CLC   16(8,R2),MAJNAM    MAJOR NAMES MATCH ?
         BE    LOOKMIN            YES...FIND MINOR NAMES
         L     R2,0(,R2)          NEXT MAJOR QCB
         LTR   R2,R2              END-OF-LIST ?
         BNZ   LOOP5              NO...TRY NEXT QCB
         B     NOMAJNAM           SET ERROR CODE
         EJECT
***********************************************************************
*
*        MAJOR QCB FOUND, LOOK FOR MINOR QCB(S)
*
***********************************************************************
LOOKMIN  L     R7,8(,R2)          FIRST MINOR QCB
         LTR   R7,R7              EXIST ?
         BNZ   MINOROK            YES...SHOULDN'T FALL THRU
         B     QCBERR             SET ERROR CODE
MINOROK  TM    SWTCH,X'F0'        ALL MINOR NAMES ?
         BZ    CHKMIN             NO...
CHKQEL   SR    R9,R9
         IC    R9,16(R7)          LENGTH OF MINOR QCB NAME
         CH    R9,=H'44'          GTR 44 BYTES ?
         BNH   LGTHOK             NO...USE AS IS
         LA    R9,44              YES..RESET TO 44 AND TRUNCATE NAME
LGTHOK   STC   R9,1(,R4)          PUT NAME LENGTH IN TABLE
         LA    R9,2(,R9)          INCREASE FOR FOLLOWING COMPUTATIONS
         SR    R10,R10
         LR    R11,R9             LENGTH OF MINOR NAME+CONTROL BYTES
         D     R10,=F'9'          MULTIPLE OF 9 ?
         LTR   R10,R10            ANY REMAINDER ?
         BZ    L9                 NO...
         LA    R11,1(,R11)        YES...ROUND UP
L9       STC   R11,0(,R4)         PUT NO. OF TABLE ENTRIES IN TABLE
         CLI   20(R7),C'$'        VALID MINOR NAME
         BL    UNKNOWN            NO, UNKNOWN
         CLI   20(R7),C'9'        VALID MINOR NAME
         BH    UNKNOWN            NO, UNKNOWN
         AR    R3,R11             INCREMENT NO. OF ENTRIES
         CR    R3,R5              OVERFLOW TABLE ?
         BH    TABLOFL2           HOPEFULLY NOT.
         BCTR  R9,0               REDUCE LENGTH
         BCTR  R9,0               TO ORIGINAL AND THEN
         BCTR  R9,0               SET FOR EXECUTE INST
         EX    R9,QCBNAME         GET MINOR QCB NAME
*                                 NO. OF TABLE SLOTS TAKEN BY NAME
UNKBACK  SR    R10,R10            MULTIPLIED BY 9 BYTES/SLOT
         M     R10,=F'9'          EQUALS TOTAL LENGTH TAKEN
         AR    R4,R11             ADDED TO SLOT POINTER
         L     R8,8(,R7)          FIRST QEL
         LTR   R8,R8              EXIST ?
         BNZ   QELOK              YES...SHOULDN'T FALL THRU
         B     QELERR             SET ERROR CODE
         EJECT
QELOK    SR    R14,R14            INSERT
         IC    R14,14(0,R8)          ASID
         SLL   R14,8                    INTO REG 14
         IC    R14,15(0,R8)                AND MULTIPLY
         SLL   R14,2                          BY FOUR
         L     R15,16             CVT ADDR
         L     R15,556(0,R15)     ASVT ADDR
         L     R15,524(R14,R15)   ASCB ADDR
         L     R14,56(0,R15)      CSCB ADDR
         CLI   28(R14),X'03'      INIT CSCB
         BE    QELOKJOB           YES, GO HANDLE
QELOKBAK LA    R14,0(0,R14)       CLEAR HIGH ORDER
         LTR   R14,R14            CSCB ZERO
         BZ    QELOKAS            YES, GO PRINT ASID
         MVC   0(8,R4),8(R14)     JOBNAME
         B     QELOKBK
QELOKAS  MVC   0(4,R4),=CL4'AS= ' ADDRESS SPACE
         UNPK  4(5,R4),14(3,R8)   UNPK ASID
         MVI   8(R4),C' '         BLANK EXTRA CHAR
         NC    4(4,R4),=4X'0F'    TRANSLATE TO PRINT
         TR    4(4,R4),=C'0123456789ABCDEF'
QELOKBK  MVI   8(R4),C'S'         ASSUME SHR'D ENQ
         TM    12(R8),X'10'       RESERVE
         BZ    QELOKBKX           NO, BR AROUND
         MVI   8(R4),C'R'         IND SHR RESERVE
QELOKBKX TM    12(R8),X'80'       IS IT SHR'D ?
         BO    NEXTONE            YES...
         MVI   8(R4),C'E'         NO...MUST BE EXCLUSIVE
         TM    12(R8),X'10'       RESERVE
         BZ    NEXTONE
         MVI   8(R4),C'X'         IND EXCL RESERVE
NEXTONE  LA    R3,1(,R3)          INCREMENT ENTRY NUMBER
         LA    R4,9(,R4)          INCREMENT TABLE LOCATION
         CR    R3,R5              TOO MANY ENTRIES IN TABLE ?
         BH    TABLOVFL           YES...IGNORE REMAINDER
         MVI   SWTCH+1,X'F0'      FLAG MINORS FOUND
NEXTQEL  L     R8,0(,R8)          NEXT QEL
         LA    R8,0(,R8)          CLEAR HI-BYTE
         LTR   R8,R8              QEL EXIST ?
         BNZ   QELOK              YES.
         B     NEXTMIN            NO...GET NEXT MINOR QCB
CHKMIN   SR    R8,R8
         IC    R8,16(,R7)         LENGTH OF MINOR NAME
         TM    SWTCH,X'0F'        ALL NAMES STARTING WITH GIVEN ?
         BO    ALL                YES.
         CH    R8,MINLGTH         MINOR NAME LENGTHS AGREE ?
         BNE   NEXTMIN            NO...TRY ANOTHER MINOR QCB
COMP     BCTR  R8,0               LENGTHS AGREE..BUT DO NAMES ?
         EX    R8,COMPMINR        FIND OUT.
         BE    CHKQEL             YES..GET OWNER'S JOBNAME/USERID
NEXTMIN  L     R7,0(,R7)          NEXT MINOR QCB
         LTR   R7,R7              EXIST ?
         BZ    EXITOK             NO..OUTPUT DATA
         TM    SWTCH,X'F0'        DOING ALL MINOR QCB'S ?
         BO    CHKQEL             YES...
         B     CHKMIN             NO..TRY THIS MINOR QCB.
ALL      LH    R8,MINLGTH         LENGTH OF MINOR NAME TO START WITH
         B     COMP               JOIN COMMON CODE
        EJECT
QELOKJOB LR    R15,R14            CSCB ADDR
         SR    R1,R1              INSERT
         IC    R1,14(0,R8)           ASID
         SLL   R1,8                     INTO REG 1
         IC    R1,15(0,R8)
QELOKJB1 L     R14,0(0,R14)       NEXT CSCB
         CR    R14,R15            SAME CSCB
         BE    QELOKBAK           YES, INIT
         CH    R1,30(0,R14)       ASID MATCH
         BNE   QELOKJB1           NO, CHECK NEXT
         B     QELOKBAK           GO USE CSCB
         EJECT
         PRINT ON
***********************************************************************
*
*        TABLE COMPLETE, READY FOR EXIT
*
***********************************************************************
EXITOK   DS    0H
         TM    SWTCH+1,X'F0'      MINOR NAMES FOUND ?
         BZ    NOOUTPUT           NO...
EXITOK1  LA    R1,0               MESSAGE CODE=0, ALL SUCCESSFUL
SETSIZE  STH   R3,TBLSIZE         SET TABLE SIZE FOR I/O MODULE
         TITLE 'DISPLAY ENQUEUE '
         SPACE 5
***********************************************************************
*
*        XCTL TO SECOND LOAD OF MODULE FOR ALL I/O
*
***********************************************************************
XCTL     STH   R1,MSGCODE         SET CODE FOR ENQ2LOAD
*        SSM   ENABLE             ENABLE ALL INTERRUPTS
         MVC   XCTLNAME(8),=CL8'ENQ2LOAD' NAME OF ENTRY POINT
         XCTL  EPLOC=XCTLNAME,SF=(E,XCTLLIST)  GO TO I/O MODULE
         SPACE 3
SPIEXIT  MVC   8(4,R1),=A(SPIERTRY)  RETRY RTN ADDR
         BR    R14                RETURN
         SPACE 2
SPIERTRY SPIE  SPIEXIT,(4)        SPIE 0C4'S
         B     QELOK              GO PRINT ASID
         SPACE 3
UNKNOWN  MVC   2(7,R4),=CL7'UNKNOWN'
         MVI   1(R4),X'07'        SET MINOR NAME LENGTH
         MVI   0(R4),X'09'        SET NO. OF TABLE ENTRIES
         LA    R11,9              LOAD ADJUSTED LENGTH
         AR    R3,R11             INCREMENT NO. OF ENTRIES
         CR    R3,R5              OVERFLOW TABLE ?
         BH    TABLOFL2           HOPEFULLY NOT.
         BCTR  R9,0               REDUCE LENGTH
         BCTR  R9,0               TO ORIGINAL AND THEN
         BCTR  R9,0               SET FOR EXECUTE INST
         B     UNKBACK
         EJECT
***********************************************************************
*
*        ERROR MESSAGE CODES SET HERE
*
***********************************************************************
NOMAJNAM LA    R1,4               MAJOR NAME QCB NOT FOUND
         B     XCTL
         SPACE 2
QCBERR   LA    R1,8               MINOR QCB CHAIN ERROR
         B     XCTL
         SPACE 2
QELERR   LA    R1,12              QEL CHAIN ERROR
         B     XCTL
         SPACE 2
GETERR   LA    R1,16              NO FREE CORE AVAILABLE FROM GETMAIN
         B     XCTL
         SPACE 2
BADERR   LA    R1,20              INVALID MAJOR/MINOR NAME
         B     XCTL
         SPACE 2
PARMERR  LA    R1,24              NO MINOR NAME SPECIFIED
         B     XCTL
         SPACE 2
NOOUTPUT LA    R1,28              MINOR NAME QCB NOT FOUND
         B     XCTL
         SPACE 2
TABLOVFL LA    R1,32              LOST DATA--TABLE SIZE EXCEEDED
         B     SETSIZE
         SPACE 2
TABLOFL2 SR    R3,R11             TABLE OVERFLOW ON MINOR QCB NAME
         B     TABLOVFL           OMIT IT FROM TABLE
         EJECT
***********************************************************************
*
*        CONSTANTS, DSECTS, ETC HERE
*
***********************************************************************
CLCRNAME CLC   MINNAME(0),RIBRNAME
MVCRNAME MVC   2(0,R4),RIBRNAME
MVNAM    MVC   0(*-*,R6),0(R8)
COMPMINR CLC   MINNAME(*-*),20(R7)
QCBNAME  MVC   2(*-*,R4),20(R7)
         DS    0D
*DOUBLE   DC    2F'0'
*TSMSK    DC    X'00007FFF'
*SUB255   DC    X'FF000000'
*ENABLE   DC    X'FF'
HEX40S   DC    255X'40'
CORSIZ   DC    F'9120'
CORSIZ2  DC    F'12288'
GQSCANL  GQSCAN SCOPE=ALL,MF=L
GQSCANLL EQU   *-GQSCANL
*
WKDSECT  DSECT
SAVA     DS    18F                SAVE-AREA
XSASAVE  DS    F                  EXTENDED SAVE-AREA PTR
CORE     DS    F                  POINTER TO FREE CORE TABLE
MAJLGTH  DS    H                  MODIFIED LENGTH OF MAJOR NAME
MINLGTH  DS    H                  MODIFIED LENGTH OF MINOR NAME
SWTCH    DS    H                  PROGRAM SWITCHES
WKSIZE   DS    H                  SIZE OF WORK-AREA
CORESIZE DS    H                  SIZE OF FREE-CORE TABLE
MSGCODE  DS    H                  I/O MESSAGE CODE
TBLSIZE  DS    H                  NUMBER OF TABLE ENTRIES
MAJNAM   DS    CL8                MAJOR NAME
MINNAME  DS    CL255              MINOR NAME
WTOLIST  DS    F                  WTO CONTROL BYTES
BUFFER   DS    CL65               WTO MESSAGE BUFFER
XCTLLIST DS    0F                 XCTL CONTROL INFO
XCTLEP   DS    F                  ADDRESS OF EP PARAMETER
XCTLDCB  DS    F                  DCB ADDRESS PARAMETER
XCTLNAME DS    CL8                ENTRY POINT NAME
GQSTUFF  DS    5F                 SETUP FOR GQSCAN MACRO
*        WORD 1  - ADDRESS OF AREA FOR RIB'S AND RIBE'S
*        WORD 2  - ADDRESS OF QNAME
*        WORD 3  - ADDRESS OF RNAME
*        WORD 4  - LENGTH  OF RNAME
*        WORD 5  - LENGTH  OF AREA
GQRETURN DS   3F           RETURN INFORMATION FROM GQSCAN
GQRIBLN  EQU  GQRETURN+4,2
GQRIBELN EQU  GQRETURN+6,2
GQRIBNUM EQU  GQRETURN+8,4
GQTOKEN  DS   F          GQSCAN TOKEN VALUE
*        WORD 1  - RETURN CODE FROM GQSCAN EXECUTION
*        WORD 2  - FIRST HALF  -  LENGTH FIXED PORTION OF RIB
*                - SECOND HALF -  LENGTH OF EACH RIBE RETURNED
*        WORD 3  - NUMBER OF RIB'S RETURNED
*        WORD 4  - TOKEN
*        WORD 5  - LOCATION OF PROGRAM'S MESSAGE TABLE
*        WORD 6  - NUMBER OF ENTRIES REMAINING IN TABLE
GQCORE   DS   F
GQENTCT  DS   F
LWKDSECT EQU   *-WKDSECT
***********************************************************************
*
*              SWTCH -- BIT DEFINITIONS
*
*        OFFSET   VALUE   MEANING
*       -------  ------- ---------
*          +0     X'00'   FULLLY QUALIFIED MINOR NAME GIVEN
*
*          +0     X'F0'   OBTAIN ALL MINOR NAMES
*
*          +0     X'0F'   OBTAIN ALL MINOR NAMES STARTING WITH GIVEN
*
*          +1     X'F0'   FOUND MINOR NAME, OUTPUT EXISTS
*
*          +1     X'0F'   OBTAIN ONLY MAJOR QCB NAMES
*
***********************************************************************
         REGISTER *
         ISGRIB
         END
//LKED.SYSIN DD *
   NAME DENQ(R)
