SETVAR   TITLE ' - SUBROUTINE TO SET A CLIST VARIABLE'
* WRITTEN BY KERMIT KISER - WASHINGTON STATE DP SERVICE CENTER (WDPSC)
*
*              V1M0 - WRITTEN  DEC 1983 TO REPLACE IKJCT433 SUPERZAP
*
*              V2M0 - CHANGED  SEP 1985 TO HANDLE TSO/E IKJCT441 CALL
*                     CODE SYSPARM(TSOE) IN ASSEMBLER PARM
*             IGNORE ALL COMMENTS BELOW UNLESS RUNNING BOTH
*
*              V2M1 - CHANGED  APR 1986 TO ELIMINATE RENT ERROR WITH
*                     SYSPARM(TSOE) IN ASSEMBLER PARM
*                     NOTE THAT IT CAN STILL BE LINKED WITH IKJCT433
*                     TO RUN ON BOTH TSOE AND NON-TSOE SYSTEMS
*
*
*    V2M2 - CHANGED  AUG 14,1989 TO MAKE TSOE (R1.2+) THE DEFAULT
*           TARGET FOR ASSEMBLY. USE SYSPARM(TSO) TO ASSEMBLE FOR
*           PRIOR TSO VERSIONS OR SYSPARM(BOTH) TO ASSEMBLE/LINK FOR
*           BOTH NEW AND OLD SYSTEMS IN ONE LOAD MODULE.
*           EXTERNAL REFERENCES TO IKJCT433 ARE NOW WEAK. THIS MAY
*           ELIMINATE ALL THE CALLS I GET ABOUT UNRESOLVED LINK REFS.
*           THE COMMENTS BELOW APPLY ONLY FOR VANILLA TSO OR TSOE R1.
*
*        SETVAR USES THE IKJUPDT INTERFACE TO IKJCT433
*              TO PUT A VALUE INTO A CLIST VARIABLE.
*              IKJUPDT IS AN ENTRY TO CLIST PHASE 2 PROCESSING USED
*              BY GETLINE TO SET SYSDLM AND SYSDVAL.
*              IT DOES NOT HAVE CAPABILITY TO CREATE VARIABLES,
*              HENCE SETVAR ENHANCES IT FOR GENERAL USAGE BY MODIFYING
*              IT TO INTERCEPT THE LOCATE ROUTINE AND FORCE VARIABLE
*              CREATION IF NOT ALREADY EXISTING. THIS ROUTINE CAN BE
*              MADE REENTRANT VERY SIMPLY IF YOU HAVE FICHE HANDY
*              FOR YOUR LEVEL OF THE IKJCT433 MODULE. (SEE BELOW)
*
*
*        NOTE: UNLESS SYSPARM(RELINK) IS CODED IN THE ASSEMBLER PARMS
*              FOR THIS MODULE, IT WILL PUNCH LINK EDITOR CONTROL CARDS
*              TO EXTRACT AND LINK IN CSECT IKJCT433 FROM IBM MODULE
*              IKJPTGT (VIA DD CARD LPALIB) WHICH IS USED TO LOAD
*              VALUES INTO CLIST VARIABLES. IN ORDER TO RUN THIS MODULE
*              AS A REENTRANT SUBROUTINE, USE RENT ON LINKEDIT AND ZAP
*              THE LOCATE SUBROUTINE IN IKJCT433 TO CREATE VARIABLES
*              WHICH HAVE NOT YET BEEN DEFINED BY THE CLIST.  IF A ZAP
*              HAS NOT BEEN APPLIED, THE PROGRAM WILL ONLY BE ABLE TO
*              UPDATE VARIABLES, NOT CREATE THEM, WHEN USED AS
*              REENTRANT.
*
*        TO ZAP FOR REENTRANT USE:
*           1) REPLACE INSTRUCTION AT LABEL SAVEMVC IN THIS MODULE WITH
*              INSTRUCTION AT LOCATE +4 (MVC) IN IKJCT433
*           2) REPLACE INSTRUCTION AT LOCATE +4 IN IKJCT433 WITH
*              INSTRUCTIONS AT LABEL OURCODE IN THIS MODULE
         EJECT
*
*//*
*//* A TSO COMMAND USES SETVAR AS FOLLOWS:
*//*
*//*     CALL  SETVAR,(UPT,ECT,ECB,UPLIST)
*//*
*//*          UPT = USER PROFILE TABLE       (FROM CPPL)
*//*          ECT = ENVIRONMENT CONTROL TABLE   "   "
*//*          ECB = COMMAND PROCESSOR ECB
*//*          UPLIST = A FOUR WORD BLOCK AS BELOW:
*//*
UPLIST  DSECT
LOCPTR  DS  AL4         PTR TO VARIABLE NAME
LOCLEN  DS  F           LENGTH OF VARIABLE NAME
VALPTR  DS  A           PTR TO DATA VALUE
VALLEN  DS  F           LENGTH OF DATA VALUE
*//*
*//* EXAMPLE : SET &VAR = &STR(MYDATA)
*//*    WOULD NEED THE FOLLOWING CONTROL BLOCK PASSED TO SETVAR:
*//*
*//*  UPLIST  DS  0XL16
*//*  LOCPTR  DC  A(=C'VAR')    PTR TO VARIABLE NAME
*//*  LOCLEN  DC  F'3'          LENGTH OF VARIABLE NAME
*//*  VALPTR  DC  A(=C'MYDATA') PTR TO DATA VALUE
*//*  VALLEN  DC  F'6'          LENGTH OF DATA VALUE
*//*
         LCLC  &TSOPARM
&TSOPARM SETC  'TSOE'
         AIF   ('&SYSPARM' EQ '').CHKTYP
&TSOPARM SETC  '&SYSPARM'
.CHKTYP  AIF   ('&TSOPARM' EQ 'RELINK').RELINK
         AIF   ('&TSOPARM' EQ 'TSOE').RELINK
         PUNCH ' REPLACE IKJEFT30              '
         PUNCH ' REPLACE IKJEFT35              '
         PUNCH ' REPLACE IKJEFT40              '
         PUNCH ' REPLACE IKJEFT45              '
         PUNCH ' REPLACE IKJEFT52              '
         PUNCH ' REPLACE IKJEFT53              '
         PUNCH ' REPLACE IKJEFT54              '
         PUNCH ' REPLACE IKJEFT55              '
         PUNCH ' REPLACE IKJEFT56              '
         PUNCH ' REPLACE IKJRBBMC              '
         PUNCH ' REPLACE IKJCT434              '
         PUNCH ' REPLACE IKJCT436              '
         PUNCH ' INCLUDE LPALIB(IKJPTGT)       '
         PUNCH ' ORDER SETVAR                  '
.RELINK  AIF   ('&TSOPARM' NE 'BOTH').CKTSOE
&TSOPARM SETC  'TSOE'
.CKTSOE  AIF   ('&TSOPARM' NE 'TSOE').NTSOE
         IKJTSVT
CVTPTR   EQU   16
CVTTVT   EQU   X'9C'
.NTSOE   ANOP
         EJECT
SETVAR   ENTERR LEVEL=V2M2
         LR    R11,R1                   R11->IKJUPDT PARM LIST
         EJECT
*
*              SETVAR CONTROL ROUTINE:
*
SA       BAL   R14,MODIFY               ZAP IKJCT433 LOCATE TO CALL US
*
SB       BAL   R14,CALLUPDT             SET THE VARIABLE VIA IKJUPDT
*
         EJECT
         LEAVER
         EJECT
MODIFY   ST    R14,L1LS
         SPACE 1
         L     R10,=V(ROUTINES)   R10->IKJCT433 SUBROUTINE TABLE
         WXTRN ROUTINES
         LTR   R10,R10            PRESENT?
         BZR   R14                NOPE
         AIF   ('&TSOPARM' NE 'TSOE').NTSOEL
         L     R15,CVTPTR         R15->CVT
         ICM   R15,15,CVTTVT(R15) R15->TSVT?
         BZ    GETLOC             NO
         ICM   R15,15,TSVTVACC-TSVT(R15) R15->IKJCT441?
         BNZR  R14                YES->TSO/E R2+
.NTSOEL  ANOP
LOCATE   EQU   16                 MUST EQUAL OFFSET TO LOCATE ADDR
GETLOC   L     R10,LOCATE(,R10)   R10->LOCATE SUBRTN
         CLI   0(R10),X'90'       STM?
         BNE   CANTZAP            NOPE
         CLC   4(6,R10),OURCODE   IS ZAP ALREADY ON?
         BE    SWAPPTR            YUP=SKIP IT
         CLI   4(R10),X'D2'       MVC?
         BNE   CANTZAP            NOPE
         AIF   ('&TSOPARM' NE 'TSOE').NTMVC
         LA    R14,SAVEMVC                       V2M1
         MVC   0(6,R14),4(R10)  SAVE THE MVC     V2M1
.NTMVC   AIF   ('&TSOPARM' EQ 'TSOE').TSKIP1
         MVC   SAVEMVC(6),4(R10)  SAVE THE MVC
.TSKIP1  ANOP
         MVC   4(6,R10),OURCODE  ZAP LOCATE TO CALL US FIRST
         B     SWAPPTR
*
OURCODE  L     R15,0(,R1)        R15->INTERCEPT ADDRESS
         BALR  R14,R15             CALL INTERCEPT CODE
         SPACE 1
SWAPPTR  L     R9,12(,R11)        R9->IKJUPDT PARM BLOCK
         MVC   SAVEAD(4),0(R9)    SAVE THE NAME PTR
         MVC   0(4,R9),=A(INTRCPT) PASS OUR INTERCEPT ADDRESS INSTEAD
         SPACE 1
CANTZAP  L     R14,L1LS
         BR    R14
         EJECT
*
* THE INTRCPT ROUTINE TO FORCE CREATION OF A VARIABLE:
*
INTRCPT  LR    R0,R14                  SAVE RETURN ADDR IN R0
         USING INTRCPT,R15             TELL ASSEMBLER ABOUT R15
         L     R14,4(,R13)             R14->HIGH SAVE=WORKAREA
         USING WORKAREA,R14            TELL ASSMEBLER
         MVC   0(4,R1),SAVEAD     RESTORE NAME ADDRESS
         MVC   8(4,R1),=A(F8)     SET CREATE CODE WE NEEDED!
SAVEMVC  MVC   0(0,R13),0(R13)    OVERLAID WITH ZAPPED INSTR
         LR    R14,R0
         BR    R14
F8       DC    F'8'
         DROP  R14,R15
         EJECT
CALLUPDT ST    R14,L1LS
         SPACE 1
         LR    R1,R11             R1->IKJUPDT PARM LIST
         AIF   ('&TSOPARM' NE 'TSOE').NTSOE2
         L     R15,CVTPTR         R15->CVT
         ICM   R15,15,CVTTVT(R15) R15->TSVT?
         BZ    CALLUP             NO
         ICM   R15,15,TSVTVACC-TSVT(R15) R15->IKJCT441?
         BZ    CALLUP             NO
         L     R14,12(R1)         R14->UPLIST
         USING UPLIST,R14
         CALL  (15),(ECODE,LOCPTR,LOCLEN,VALPTR,VALLEN,TOKEN),       XXX
               VL,MF=(E,PARM441)
         SPACE 1
         L     R14,L1LS
         BR    R14
ECODE    DC    A(TSVEUPDT)
.NTSOE2  ANOP
         SPACE 1
CALLUP   CALL  IKJUPDT            GIVE HIM CONTROL FOR A WHILE
         WXTRN IKJUPDT
         SPACE 1
         L     R14,L1LS
         BR    R14
         EJECT
         LTORG
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F
L1LS     DS    F
L2LS     DS    F
L3LS     DS    F
*
SAVEAD   DS    F
*
PARM441  DS    7F
TOKEN    DS    F
         SPACE 2
WORKLEN  EQU   *-WORKAREA
         END
