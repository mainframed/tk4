./ ADD NAME=BLKPANEL 0103-86246-86246-0943-00019-00017-00000-LL02150
)ATTR DEFAULT(%+_)
      + TYPE(TEXT) INTENS(LOW) SKIP(ON)
      % TYPE(TEXT) INTENS(HIGH) SKIP(ON)
)BODY
+wdpsc%BLKING+utility+
+&BLKMSG
+Enter record length ==>_LRECL   +
+
+Enter # of records  ==>_FILESIZE+
+
+
+
)INIT
)PROC
VER (&LRECL,NONBLANK)
VER (&FILESIZE,NONBLANK)
VER (&LRECL,NUM)
VER (&FILESIZE,NUM)
)END
./ ADD NAME=CUTHELP  0110-86252-86253-1107-00025-00001-00000-GS00150
%TUTORIAL ---------------  CUT EDIT MACRO INFORMATION  ----------------
%COMMAND ===>_zcmd

+
  ISPF/PDF EDIT MACRO TO WRITE LINES FROM A FILE TO THE USER
  PROFILE POOL FOR LATER INCLUSION BY THE%PASTE+MACRO.

  TO RUN:
    ENTER%CUT+ON THE COMMAND LINE AND USE THE%C+OR%M+LINE COMMANDS
    (IN ANY FORM) TO SELECT THE LINES TO BE CUT.
+
    IF THE%M+LINE COMMAND IS USED, THE LINES WILL BE DELETED.
+
    A PARAMETER OF%R+OR%REPLACE+CAN BE SPECIFIED TO REPLACE ANY
    PREVIOUSLY CUT LINES (THAT HAVE NOT YET BEEN PASTED) WITH THE
    NEWLY SELECTED LINES.  OTHERWISE, THE SELECTED LINES WILL BE
    ADDED TO ANY PREVIOUSLY CUT LINES.
+
    AN ARBITRARY LIMIT OF 500 LINES IS SET IN THE MACRO BUT THIS
    CAN BE CHANGED BY PROVIDING A NEW LIMIT ON THE MACRO CALL.
    FOR EXAMPLE,%TO PROCESS UP TO 1000 LINES+ENTER%CUT 1000+ON THE
    COMMAND LINE.  BE AWARE THAT EACH LINE GETS STORED IN YOUR
    PROFILE.
+
)END
./ ADD NAME=DOCADDH  0101-86171-86171-1814-00027-00026-00000-KX00150
%TUTORIAL -------------  DOCSYS Add an Entry Help     -----------------
%NEXT SELECTION ===>_ZCMD                               %(OR PRESS PF1 F
%
+ 1. Enter a description of the new document or index. This will be
+    added to the current index. These entries are usually indented by
+    about four spaces. There may be 1, 2 or 3 lines for the description
%
+ 2. Enter the dataset name where the document is to be located. It may
+    be a member of a document system library or another library or even
+    a sequential file. The document system users must have read access
+    to the document you specify. If you wish to add a new index level
+    to the system, simply change the type field to "INDEXES" and enter
+    a name for the new index in the member field. Also specify if the
+    new index is to have 1, 2, or 3 lines per entry. If the document or
+    index you specify does not exist, a sample document or index will
+    be used to create the document or index and you will be transferred
+    to ISPF EDIT to finish it. When you are satisfied with the new
+    document, use the "END" key to save it, and it will be added to the
+    current index. If the document already exists, you will be asked to
+    change the member name or press ENTER to add it anyway. In this cas
+    the document will not be edited.
+
+ 3. IF your document already exists in another library, you may change
+    the SAMPLE name to create the new document from the original.
)PROC
   &ZUP = TWSD
)END
./ ADD NAME=DOCADD1  0105-86163-86174-1811-00043-00040-00000-KX00150
)ATTR
# TYPE(INPUT) INTENS(LOW) CAPS(OFF) JUST(ASIS)
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
% TYPE(TEXT) INTENS(LOW)
+ TYPE(TEXT) INTENS(HIGH)
)BODY
%----------------------    Request to Add a Document  ------------------
%COMMAND ===>_ZCMD
%
% Enter 1 line description for the new index entry:
%
+==>#descl1
%
+Index being updated is '&DOCSLVL1..&DOCSLVL2..INDEXES(&DOCSMEM)'
%
% Verify the following and press+ENTER%to add the new entry:
%
%New document or index to add is:
%   PROJECT+===>_lvl1    %
%   LIBRARY+===>_lvl2    +
%   TYPE   +===>_lib     % (If INDEXES, enter lines per item ==>_Z%)
%   MEMBER +===>_MEMBER  %
%
%OTHER PARTITIONED OR SEQUENTIAL DATASET:
%   DATASET NAME +===>_DOCDSN
%
+Sample Document?==>_sampdoc
% (If a sample is specified, it will be used to initialize the document.
)INIT
 .HELP = docaddh
 .ZVARS = '(LCNT)'
)PROC
 IF (&LIB = INDEXES)
   VER (&LCNT,LIST,1,2,3)
   VER (&LCNT,NB)
 VER (&DOCDSN,DSNAME)
 VER (&SAMPDOC,DSNAME)
 VER (&LVL1,DSNAME)
 VER (&LVL2,DSNAME)
 VER (&LIB,DSNAME)
 VER (&MEMBER,NAME)
 VPUT DESCL1 SHARED
)END
./ ADD NAME=DOCADD2  0105-86163-86174-1819-00044-00041-00000-KX00150
)ATTR
# TYPE(INPUT) INTENS(LOW) CAPS(OFF) JUST(ASIS)
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
% TYPE(TEXT) INTENS(LOW)
+ TYPE(TEXT) INTENS(HIGH)
)BODY
%----------------    DOCADD Dialog to add a document  ------------------
%COMMAND ===>_ZCMD
%
% Enter 2 lines of description for the new index entry:
%
+==>#descl1
+==>#descl2
%
+Index being updated is '&DOCSLVL1..&DOCSLVL2..INDEXES(&DOCSMEM)'
%
% Verify the following and press+ENTER%to add the new entry:
%
%New document or index to add is:
%   PROJECT+===>_lvl1    %
%   LIBRARY+===>_lvl2    +
%   TYPE   +===>_lib     % (If INDEXES, enter lines per item ==>_Z%)
%   MEMBER +===>_MEMBER  %
%
%OTHER PARTITIONED OR SEQUENTIAL DATASET:
%   DATASET NAME +===>_DOCDSN
%
+Sample Document?==>_sampdoc
% (If a sample is specified, it will be used to initialize the document.
)INIT
 .HELP = DOCADDH
 .ZVARS = '(LCNT)'
)PROC
 IF (&LIB = INDEXES)
   VER (&LCNT,LIST,1,2,3)
   VER (&LCNT,NB)
 VER (&DOCDSN,DSNAME)
 VER (&SAMPDOC,DSNAME)
 VER (&LVL1,DSNAME)
 VER (&LVL2,DSNAME)
 VER (&LIB,DSNAME)
 VER (&MEMBER,NAME)
 VPUT (DESCL1 DESCL2) SHARED
)END
./ ADD NAME=DOCADD3  0105-86163-86174-1820-00045-00042-00000-KX00150
)ATTR
# TYPE(INPUT) INTENS(LOW) CAPS(OFF) JUST(ASIS)
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
% TYPE(TEXT) INTENS(LOW)
+ TYPE(TEXT) INTENS(HIGH)
)BODY
%----------------    DOCADD Dialog to add a document  ------------------
%COMMAND ===>_ZCMD
%
% Enter 3 lines of description for the new index entry:
%
+==>#descl1
+==>#descl2
+==>#descl3
%
+Index being updated is '&DOCSLVL1..&DOCSLVL2..INDEXES(&DOCSMEM)'
%
% Verify the following and press+ENTER%to add the new entry:
%
%New document or index to add is:
%   PROJECT+===>_lvl1    %
%   LIBRARY+===>_lvl2    +
%   TYPE   +===>_lib     % (If INDEXES, enter lines per item ==>_Z%)
%   MEMBER +===>_MEMBER  %
%
%OTHER PARTITIONED OR SEQUENTIAL DATASET:
%   DATASET NAME +===>_DOCDSN
%
+Sample Document?==>_sampdoc
% (If a sample is specified, it will be used to initialize the document.
)INIT
 .HELP = DOCADDH
 .ZVARS = '(LCNT)'
)PROC
 IF (&LIB = INDEXES)
   VER (&LCNT,LIST,1,2,3)
   VER (&LCNT,NB)
 VER (&DOCDSN,DSNAME)
 VER (&SAMPDOC,DSNAME)
 VER (&LVL1,DSNAME)
 VER (&LVL2,DSNAME)
 VER (&LIB,DSNAME)
 VER (&MEMBER,NAME)
 VPUT (DESCL1 DESCL2 DESCL3) SHARED
)END
./ ADD NAME=DOCEDIT  0104-86162-86190-1752-00052-00045-00000-KK00150
)ATTR
  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH) FORMAT(&MIXED)
  × AREA(DYNAMIC) EXTEND(ON) SCROLL(ON) USERMOD(20)
  ! TYPE(OUTPUT) INTENS(HIGH) PAD(-)
 01 TYPE(DATAOUT) INTENS(LOW)
 02 TYPE(DATAOUT) INTENS(HIGH)
 03 TYPE(DATAOUT) SKIP(ON) /* FOR TEXT ENTER CMD. FIELD */
 04 TYPE(DATAIN)  INTENS(LOW)  CAPS(OFF)
 05 TYPE(DATAIN)  INTENS(HIGH) CAPS(OFF)
 06 TYPE(DATAIN)  INTENS(LOW)  CAPS(IN)
 07 TYPE(DATAIN)  INTENS(HIGH) CAPS(IN)
 08 TYPE(DATAIN)  INTENS(LOW)  FORMAT(DBCS)
 09 TYPE(DATAIN)  INTENS(LOW)  FORMAT(EBCDIC)
 0A TYPE(DATAIN)  INTENS(LOW)  FORMAT(&MIXED)
 20 TYPE(DATAIN)  INTENS(LOW) CAPS(IN) FORMAT(&MIXED)
)BODY WIDTH(&ZWIDTH) EXPAND(//)
%EDIT -----!ZTITLE -------------------/-/---------------------%COLUMNS!Z
%COMMAND ===>_ZCMD                    / /                     %SCROLL ==
×ZDATA -------------------------------/-/-------------------------------
×                                     / /
× ------------------------------------/-/-------------------------------
)INIT
  .HELP = ISR20000         /* DEFAULT TUTORIAL NAME     */
  .ZVARS = 'ZSCED'         /* SCROLL AMT VARIABLE NAME  */
  &MIXED = MIX             /* SET FROMAT MIX            */
  IF (&ZPDMIX = N)         /* IF EBCDIC MODE REQUESTED  */
    &MIXED = EBCDIC        /*  SET FORMAT EBCDIC        */

  IF (&FADSN ^= &Z)
    &ZCMD = COPY
    .RESP = ENTER

  IF (&FADSN = &Z)
   IF (&FACMD ^= &Z)
    &ZCMD = &FACMD
    &FACMD = &Z
    VPUT FACMD SHARED
    .RESP = ENTER

)REINIT
  REFRESH(ZCMD,ZSCED,ZDATA,ZTITLE,ZCL,ZCR)
  .HELP = ISR20000         /* DEFAULT TUTORIAL NAME     */

)PROC
  &ZCURSOR = .CURSOR
  &ZCSROFF = .CSRPOS
  &ZLVLINE = LVLINE(ZDATA)

)END

/*  DYNAMIC AREA SCREEN WIDTH FROM PQUERY. (80,132,160)
/*  DYNAMIC AREA SCREEN DEPTH FROM PQUERY. (24,32,43,27,60)
./ ADD NAME=DOCPM1   0100-86188-86188-1731-00037-00037-00000-KK00150
%----------------    &DOCSTITL PRINT REQUEST ---------------------------
%SELECT OPTION ===>_OPT                    +
% VERIFY APPROPRIATE PARAMETERS BEFORE PRESSING ENTER.
%
% 1+-%SUBMIT JOB TO PRINT ON 3800 AT WDPSC VIA ROTATE 90
+       ACCOUNT AND BIN ==>_PACCT    +
+       JOB CLASS       ==>_Z+
+       NAME FIELD      ==>_PPROG               +
+       COPIES          ==>_Z+ (1-9)
+       Print Size      ==>_Z+ (S,M,L)
%
% 2+-%COPY PRINT TO SYSOUT:
+       SYSOUT CLASS    ==>_Z+
+       DESTINATION     ==>_PDEST   +
%
% 3+-%PRINT ON CLUSTER PRINTER:
+       LOCAL PRINTER ID==>_HPID    +
+       DSPRINT OPTIONS ==>_DSPRTOPT
+
% YOU HAVE SELECTED TO PRINT THE FOLLOWING:
+ &ENTRYDS1
+ &ENTRYDS2
+ &ENTRYDS3
)INIT
 .ZVARS = '(PJOBC PCOPIES PSIZE PSOC)'
  .HELP = DOCS1HLP
  IF (&PSIZE = &Z)
      &PSIZE = 'S'
)PROC
  VER(&PSIZE,LIST,S,M,L)
  &SEL = TRANS( TRUNC (&OPT,'.')
                1,'CMD(%DOCR90)'
                2,'CMD(%DOCSOP)'
                3,'CMD(%DOCLCL)'
                *,'?'
                )
)END
./ ADD NAME=DOCPM2   0100-86188-86188-1802-00033-00033-00000-KX00150
%----------------    &DOCSTITL PRINT REQUEST ---------------------------
%SELECT OPTION ===>_OPT                    +
% VERIFY APPROPRIATE PARAMETERS BEFORE PRESSING ENTER:
%
% 1+-%SUBMIT JOB TO PRINT ON 3800 AT WDPSC VIA ROTATE 90
+       ACCOUNT AND BIN ==>_PACCT    +
+       JOB CLASS       ==>_Z+
+       NAME FIELD      ==>_PPROG               +
+       COPIES          ==>_Z+ (1-9)
+       Print Size      ==>_Z+ (S,M,L)
%
% 2+-%COPY PRINT TO SYSOUT:
+       SYSOUT CLASS    ==>_Z+
+       DESTINATION     ==>_PDEST   +
%
+
% YOU HAVE SELECTED TO PRINT THE FOLLOWING:
+ &ENTRYDS1
+ &ENTRYDS2
+ &ENTRYDS3
)INIT
 .ZVARS = '(PJOBC PCOPIES PSIZE PSOC)'
  IF (&PSIZE = &Z)
      &PSIZE = 'S'
  .HELP = DOCS2HLP
)PROC
  VER(&PSIZE,LIST,S,M,L)
  &SEL = TRANS( TRUNC (&OPT,'.')
                1,'CMD(%DOCR90)'
                2,'CMD(%DOCSOP)'
                *,'?'
                )
)END
./ ADD NAME=DOCPM3   0100-86188-86188-1805-00030-00030-00000-KX00150
%----------------    &DOCSTITL PRINT REQUEST ---------------------------
%COMMAND ===>_OPT                                                      +
% VERIFY APPROPRIATE PARAMETERS BEFORE PRESSING ENTER
%  TO SUBMIT JOB TO PRINT ON 3800 AT WDPSC VIA ROTATE 90:
%
+       ACCOUNT AND BIN ==>_PACCT    +
+       JOB CLASS       ==>_Z+
+       NAME FIELD      ==>_PPROG               +
+       COPIES          ==>_Z+ (1-9)
+       Print Size      ==>_Z+ (S,M,L)
%
+
% YOU HAVE SELECTED TO PRINT THE FOLLOWING:
+ &ENTRYDS1
+ &ENTRYDS2
+ &ENTRYDS3
)INIT
 .ZVARS = '(PJOBC PCOPIES PSIZE)'
  IF (&PSIZE = &Z)
      &PSIZE = 'S'
  .HELP = DOCS3HLP
)PROC
  VER(&PSIZE,LIST,S,M,L)
  IF (&OPT = &Z)
      &OPT = '2'
  &SEL = TRANS( TRUNC (&OPT,'.')
                2,'CMD(%DOCR90)'
                *,'?'
                )
)END
./ ADD NAME=DOCS0HLP 0100-84017-84017-1636-00017-00017-00000-JS02150
%TUTORIAL  --------------   &DOCSTITL --------------------------------%T

%                    -------------------------------------
                     ×          Selection Menus          ×
                     -------------------------------------
+
      The selection menus of the documentation system display a list of
  items which you may request further information about or for which you
  may request hardcopy listings of detailed information. If more items
  are available than can be displayed on one screen, use your scroll
  forward%(DOWN)+key to display the other items. To obtain more detailed
  information for an item, enter an%"S"+in the field to the left of the
  item. To obtain a hardcopy listing of the information, enter a%"P"+to
  the left of the item and answer the questions which will be displayed
  on the print request panel concerning print format and routing for
  that document.
)END
./ ADD NAME=DOCS1HLP 0106-84017-84018-1041-00025-00017-00000-JS02150
%TUTORIAL  --------------   &DOCSTITL --------------------------------%T

%                    -------------------------------------
                     ×    HELP FOR PRINT REQUEST PANEL   ×
                     -------------------------------------
+
+ Opposite%SELECT OPTION ===>+, enter one of the following:
+        %1+ for printing the document rotated 90 degrees on 3800 Page P
+        %2+ for printing the document on an RJE printer
+        %3+ for printing the document on a cluster printer
+
+ If you have selected option%1+, then provide the following information
+        ACCOUNT AND BIN ==>  Enter%nnnn,bb-s+(nnnn=ACCT, bb=bin, s=sub
+        JOB CLASS       ==>  Enter a valid job class%(H,A,C,D,E, or S)+
+        NAME FIELD      ==>  Enter programmer name field
+        COPIES (1-9)    ==>  Enter numeric value%1-9+
+
+ If you have selected option%2+, then provide the following information
+        SYSOUT CLASS    ==>  Enter%A+or%T+
+        DESTINATION     ==>  Enter%LOCAL+or%RMTxx+where%xx+is remote nu
+
+ If you have selected option%3+, then provide the following information
+        LOCAL PRINTER ID==>  Enter the 5 character printer id
+        DSPRINT OPTIONS ==>  Enter DSPRINT options
)END
./ ADD NAME=DOCS2HLP 0104-84017-84018-1041-00021-00007-00000-JS02150
%TUTORIAL  --------------   &DOCSTITL --------------------------------%T

%                    -------------------------------------
                     ×    HELP FOR PRINT REQUEST PANEL   ×
                     -------------------------------------
+
+ Opposite%SELECT OPTION ===>+, enter one of the following:
+        %1+ for printing the document rotated 90 degrees on 3800 Page P
+        %2+ for printing the document on an RJE printer
+
+ If you have selected option%1+, then provide the following information
+        ACCOUNT AND BIN ==>  Enter%nnnn,bb-s+(nnnn=ACCT, bb=bin, s=sub
+        JOB CLASS       ==>  Enter a valid job class%(H,A,C,D,E, or S)+
+        NAME FIELD      ==>  Enter programmer name field
+        COPIES (1-9)    ==>  Enter numeric value%1-9+
+
+ If you have selected option%2+, then provide the following information
+        SYSOUT CLASS    ==>  Enter%A+or%T+
+        DESTINATION     ==>  Enter%LOCAL+or%RMTxx+where%xx+is remote nu
+
)END
./ ADD NAME=DOCS3HLP 0104-84017-84018-0929-00014-00007-00000-JS02150
%TUTORIAL  --------------   &DOCSTITL --------------------------------%T

%                    -------------------------------------
                     ×    HELP FOR PRINT REQUEST PANEL   ×
                     -------------------------------------
+
+
+
+   Verify that the following information is correct and press ENTER:
+        ACCOUNT AND BIN ==> %nnnn,bb-s+(nnnn=ACCT, bb=bin, s=sub agency
+        JOB CLASS       ==>  valid job class%(H,A,C,D,E, or S)+
+        NAME FIELD      ==>  programmer name field
+        COPIES (1-9)    ==>  numeric value%1-9+
)END
./ ADD NAME=EDITAPP  0104-84107-84335-1653-00080-00062-00000-HJ00150
)ATTR
  @  TYPE(INPUT) INTENS(LOW) CAPS(ON) JUST(LEFT)
)BODY
+
%----------------------- APPLICATION SELECTION PANEL -------------------
+COMMAND%==>@ZCMD
+
+_Z+ 1%==>@W88APP01                                    %<===+
+_Z+ 2%==>@W88APP02                                    %<===+
+_Z+ 3%==>@W88APP03                                    %<===+
+_Z+ 4%==>@W88APP04                                    %<===+
+_Z+ 5%==>@W88APP05                                    %<===+
+_Z+ 6%==>@W88APP06                                    %<===+
+_Z+ 7%==>@W88APP07                                    %<===+
+_Z+ 8%==>@W88APP08                                    %<===+
+_Z+ 9%==>@W88APP09                                    %<===+
+_Z+10%==>@W88APP10                                    %<===+
+_Z+11%==>@W88APP11                                    %<===+
+_Z+12%==>@W88APP12                                    %<===+
+_Z+13%==>@W88APP13                                    %<===+
+_Z+14%==>@W88APP14                                    %<===+
+_Z+15%==>@W88APP15                                    %<===+
+_Z+16%==>@W88APP16                                    %<===+
+_Z+17%==>@W88APP17                                    %<===+
)INIT
 .HELP = 'TEDITAPP'
 .ZVARS='(S01 S02 S03 S04 S05 S06 S07 S08 S09 S10 S11 S12 S13 S14 S15 S1
 IF (&S01 ^= ' ','-',&Z)  .CURSOR = S01
 IF (&S02 ^= ' ','-',&Z)  .CURSOR = S02
 IF (&S03 ^= ' ','-',&Z)  .CURSOR = S03
 IF (&S04 ^= ' ','-',&Z)  .CURSOR = S04
 IF (&S05 ^= ' ','-',&Z)  .CURSOR = S05
 IF (&S06 ^= ' ','-',&Z)  .CURSOR = S06
 IF (&S07 ^= ' ','-',&Z)  .CURSOR = S07
 IF (&S08 ^= ' ','-',&Z)  .CURSOR = S08
 IF (&S09 ^= ' ','-',&Z)  .CURSOR = S09
 IF (&S10 ^= ' ','-',&Z)  .CURSOR = S10
 IF (&S11 ^= ' ','-',&Z)  .CURSOR = S11
 IF (&S12 ^= ' ','-',&Z)  .CURSOR = S12
 IF (&S13 ^= ' ','-',&Z)  .CURSOR = S13
 IF (&S14 ^= ' ','-',&Z)  .CURSOR = S14
 IF (&S15 ^= ' ','-',&Z)  .CURSOR = S15
 IF (&S16 ^= ' ','-',&Z)  .CURSOR = S16
 IF (&S17 ^= ' ','-',&Z)  .CURSOR = S17
 &S01 = '-'
 &S02 = '-'
 &S03 = '-'
 &S04 = '-'
 &S05 = '-'
 &S06 = '-'
 &S07 = '-'
 &S08 = '-'
 &S09 = '-'
 &S10 = '-'
 &S11 = '-'
 &S12 = '-'
 &S13 = '-'
 &S14 = '-'
 &S15 = '-'
 &S16 = '-'
 &S17 = '-'
)PROC
 VER (&S01,LIST,'S','L','-')
 VER (&S02,LIST,'S','L','-')
 VER (&S03,LIST,'S','L','-')
 VER (&S04,LIST,'S','L','-')
 VER (&S05,LIST,'S','L','-')
 VER (&S06,LIST,'S','L','-')
 VER (&S07,LIST,'S','L','-')
 VER (&S08,LIST,'S','L','-')
 VER (&S09,LIST,'S','L','-')
 VER (&S10,LIST,'S','L','-')
 VER (&S11,LIST,'S','L','-')
 VER (&S12,LIST,'S','L','-')
 VER (&S13,LIST,'S','L','-')
 VER (&S14,LIST,'S','L','-')
 VER (&S15,LIST,'S','L','-')
 VER (&S16,LIST,'S','L','-')
 VER (&S17,LIST,'S','L','-')
)END
./ ADD NAME=EXPANDIR 0100-86293-86293-1422-00027-00027-00000-JS02150
)BODY
%-------------------------- EXPAND PDS DIRECTORY -----------------------
+
+
+
+ISPF LIBRARY:
+   Project%===>_PROJECT +
+   Library%===>_LIBRARY +
+   Type   %===>_TYPE    +
+
+OTHER PARTITIONED DATASET:
+   Data set Name%===>_OTHERDSN                                    +
+
+
+
+Number of directory blocks
+    to add to the directory%===>_ADR+
+
+
)PROC
 VER (&PROJECT,NAME,MSG=XDIR101)
 VER (&LIBRARY,NAME,MSG=XDIR101)
 VER (&TYPE,NAME,MSG=XDIR101)
 VER (&OTHERDSN,DSNAME)
 VER (&ADR,NUM)
 VER (&ADR,NONBLANK)
)END
./ ADD NAME=FNDSMEM  0119-84237-86049-0840-00016-00008-00000-JS02150
)ATTR
# TYPE(OUTPUT) INTENS(LOW)
)BODY
%EDIT/BROWSE --- &PANULMSG----------------------------------------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
+
% S+OR%E+FOR EDIT      %B+FOR BROWSE+
+
)MODEL
 _Z+#MBRNAME +
)INIT
  .ZVARS = '(TYPCODE)'
  &ZSCR = 'PAGE'
  &ZSCKEY = 'ZSCML'
  .HELP = ISR2D000
)END
./ ADD NAME=FULLUT1  0120-80058-82075-1012-00058-00041-00000-KK00150
$ ----------------------   &FULL SCREEN GENERATOR   $-------------------
&SELECT OPTION ===>%*FSOPT  $
&
&  G$- GENERATE SCREEN,&A$- ASSEMBLE SCREEN,&GA$- GENERATE AND ASSEMBLE
&
$SCREEN NAME         &===>%SCREEN  $
&
&
$SCREEN FORMAT LIB   &===>%FORLIB
$
$ASSEMBLER SOURCE LIB&===>%ASMSRC
$
$SCREEN LOAD LIBRARY &===>%ASMLOD
$
$      ATTRIBUTE CODES ARE:           DEFAULT:      REPLACEMENT:
<FIELDS>!%×&*#"
*              PROTECTED HIGH INTENSITY   ==>&+*            ==>%U*
*              PROTECTED LOW  INTENSITY   ==>&^*            ==>%V*
*              UNPROTECTED HIGH INTENSITY ==>&$*            ==>%W*
*              UNPROTECTED LOW  INTENSITY ==>&Ö*            ==>%X*
*
*              INITIAL CURSOR LOCATION    ==>&_*            ==>%Z*
*
<ACTION>
1 *FSOPT CHAR(3)   CURSOR INIT(' ') GENHELP(TSAN05)
         LIST(G,A,GA,*)
         RETURN(G,A,GA,?);
2 SCREEN CHAR(8)  NOCURSOR INIT($PARM2)
         LIST(' ',*)
         RETURN(?);
3 FORLIB CHAR(46) NOCURSOR INIT($PARM3)
         LIST(' ',*)
         RETURN(ÖÖÖ);
4 ASMSRC CHAR(46) NOCURSOR INIT($PARM4)
         LIST(' ',*)
         RETURN(ÖÖÖ);
5 ASMLOD CHAR(46) NOCURSOR INIT($PARM5)
         LIST(' ',*)
         RETURN(ÖÖÖ);
6 U      CHAR(1)  NOCURSOR INIT($PARM6)  KEY(ATTR1)
         LIST(' ','?',^,'''',*)
         RETURN('+',Q,N,A);
7 V      CHAR(1)  NOCURSOR INIT($PARM7)  KEY(ATTR2)
         LIST(' ','?',^,'''',*)
         RETURN('N',Q,N,A);
8 W      CHAR(1)  NOCURSOR INIT($PARM8)  KEY(ATTR3)
         LIST(' ','?',^,'''',*)
         RETURN('$',Q,N,A);
9 X      CHAR(1)  NOCURSOR INIT($PARM9)  KEY(ATTR4)
         LIST(' ','?',^,'''',*)
         RETURN('Ö',Q,N,A);
10 Y     CHAR(1)  NOCURSOR INIT($PARM10) KEY(ATTR5)
         LIST(' ','?',^,'''',*)
         RETURN('@',Q,N,A);
11 Z     CHAR(1)  NOCURSOR INIT($PARM11) KEY(ATTR6)
         LIST(' ','?',^,'''',*)
         RETURN('_',Q,N,A);
<END>
./ ADD NAME=FULLUT2  0121-79307-82075-1013-00040-00026-00000-KK00150
$ ----------------------   &FULL SCREEN ANALYZER    $-------------------
&
&
& TO DISPLAY A SCREEN, ENTER THE FOLLOWING:
&
$ SCREEN NAME        &===>%SCREEN  $
$ SCREEN LOAD LIBRARY&===>%ASMLOD
&
&
&
& TO PRINT SCREEN DATA FOR ANALYSIS ENTER COPIES DESIRED BELOW:
&
&
$               PRINT&=>%*A$   COPIES OF SCRUFF.
&
$               PRINT&=>%*B$   COPIES OF I/O BUFFERS.
$
$               PRINT&=>%*C$   COPIES OF SCREEN. (SUBMITS A BATCH JOB.)
$
$               DEST &=>%D       $(TO OVERRIDE DEFAULT FOR SCRUFF AND I/
<ACTION>
1 SCREEN CHAR(8) CURSOR INIT($PARM1) GENHELP(TSAN05)
         LIST(' ',*)
         RETURN(?);
2 ASMLOD CHAR(46) NOCURSOR INIT($PARM2)
         LIST(' ',*)
         RETURN( ? );
3 *A     CHAR(3) NOCURSOR INIT(' ')
         LIST(' ',*)
         RETURN('^');
4 *B     CHAR(3) NOCURSOR INIT(' ')
         LIST(' ',*)
         RETURN('^');
5 *C     CHAR(3) NOCURSOR INIT(' ')
         LIST(' ',*)
         RETURN('^');
6 D      CHAR(5) NOCURSOR INIT($PARM6) KEY(FU2DEST)
         LIST(' ',*)
         RETURN('^');
<END>
./ ADD NAME=GDDM     0100-85280-85280-1444-00066-00066-00000-KX00150
)ATTR
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
)BODY
%-----------------------    GRAPHICS   UTILITIES    --------------------
%SELECT OPTION ===>_OPT
%
%        C+ CHART  - INTERACTIVE CHART UTILITY
%       CG+ CHART  - INTERACTIVE CHART UTILITY WITH 3270PC/G OR GX (LI M
%       CI+ IMPORT - CHART IMPORT GRAPHICS-DATA UTILITY
%        V+ VSSE   - VECTOR SYMBOL SET EDITOR
%        I+ ISSE   - INTERACTIVE SYMBOL SET EDITOR
%        M+ IMD    - INTERACTIVE MAP DEFINITION UTILITY
%
%  NOTE: MANY OF THE FUNCTIONS OF THESE UTILITIES REQUIRE THE USE OF
%      A TERMINAL WITH GRAPHICS CAPABILITIES(3279,3278-3,3290,ETC.).
%
%     CHART AND CHART IMPORT LIBRARIES ARE:
+DATA LIB  ==>_DL
+FORMAT LIB==>_FL
+IMPORT LIB==>_IL
%
%     VSSE AND ISSE LIBRARY AND INITIAL SYMBOL SET ARE:
+SYMBOL LIB==>_SL
+              SYMBOL SET NAME ==>_SSN
)INIT
   .HELP = GDDMR3H
   IF (&SL = '''USER.SYMBOL.SETS''')
       &SL = '''USER.TSO.GDDM.SYMBOLS'''
   IF (&SL = 'USER.SYMBOL.SETS')
       &SL = '''USER.TSO.GDDM.SYMBOLS'''
   IF (&SL = '''USER.TSO.GDDMR3.SYMBOLS''')
       &SL = '''USER.TSO.GDDM.SYMBOLS'''
   IF (&SL = '''USER.TSO.GDDMR4.SYMBOLS''')
       &SL = '''USER.TSO.GDDM.SYMBOLS'''
)PROC
 IF (&OPT = C,CI)
   IF (&DL = &Z)
       &DL = 'CHART.DATA'
   IF (&FL = &Z)
       &FL = 'CHART.FORMAT'
 IF (&OPT = CI)
   IF (&IL = &Z)
       &IL = 'CHART.IMPORT'
 IF (&OPT = V,I)
   IF (&SL = &Z)
       &SL = '''USER.TSO.GDDM.SYMBOLS'''
   &SSN1 = ' '
   IF (&SSN ^= &Z)
       &SSN1 = 'SSN(&SSN)'
 VER (&DL,DSNAME)
 VER (&FL,DSNAME)
 VER (&IL,DSNAME)
 VER (&SL,DSNAME)
 VER (&SSN,NAME)
   &SEL = TRANS( TRUNC (&OPT,'.')
                C,'CMD(%CHART DL(&DL) FL(&FL))'
               CG,'CMD(%CHART DL(&DL) FL(&FL) PCG)'
               CI,'CMD(%CHART IPNP DL(&DL) FL(&FL) IL(&IL))'
                V,'CMD(%VSSE SS(&SL) &SSN1)'
                I,'CMD(%ISSE SS(&SL) &SSN1)'
                M,'CMD(%IMD)                       '
                L,'CMD(%LPQ)                       '
                *,'?'
                )
 VPUT (DL,FL,IL,SL,SSN) PROFILE
)END
./ ADD NAME=GDDMR3H  0100-85197-85197-1807-00016-00016-00000-KX00150
%TUTORIAL -------------     WDPSC SPECIAL OPTIONS     -----------------
%NEXT SELECTION ===>_ZCMD                               %(OR PRESS PF1 F
%
%                     -------------------------------
%                     ×     GRAPHICS UTILITIES      ×
%                     -------------------------------
+
+
+     This panel%(W.G)+can be used to invoke the GDDM/PGF/IMD graphics
+ utilities. You may specify your graphics libraries or, if you leave
+ the fields blank, default names will be used. The CHART data and
+ format libaries will be allocated for you if needed. You may enter an
+ initial symbol set to be edited if invoking a symbol set editor.
)PROC
   &ZUP = TWSD
)END
./ ADD NAME=GPM      0103-85120-85178-1434-00016-00015-00000-KX00150
)ATTR
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
)BODY
%
%                   _ZCMD
%
%
%
%
%                   &GPM
%
%&GPML
%
)INIT
)PROC
)END
./ ADD NAME=HOTMENU  0103-87082-87093-1655-00030-00016-00000-KX00150
%-----------------------------  hotkey menu   --------------------------
%OPTION  ===>_ZCMD
%
+DSNAME %===>_DSN
%
%   1+     - Browse the dataset
%   2+     - Edit   the dataset
% 3.1+     - Display Library member list
% 3.2+     - Display dataset info
% PDS+     - Display PDS command MEMLIST
% &CO+&COT
%           +&REPT                 _R  +
%&ZAP+&ZAPT
+
)INIT
  .CURSOR = ZCMD
  IF (&HOTFROM ^= ' ')
    &R = TRANS(&R ' ',NO R,YES Y,YES *,NO)
)PROC
  &R = TRUNC(&R,1)
  &R = TRANS(&R R,R Y,R N,' ')
  &FTN = TRANS( &ZCMD
                1,BROWSE
                2,EDIT
              3.1,LIB
              3.2,INFO
                F,FROM
                T,TO
                *,* )
)END
./ ADD NAME=ISR@PRIF 0103-85255-86114-1618-00106-00105-00000-KX00150
%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ----------------
%OPTION  ===>_ZCMD
%                                                           +USERID   -
%   0 +ISPF PARMS  - Specify terminal and user parameters   +PREFIX   -
%   1 +BROWSE      - Display source data or output listings +DATE     -
%   2 +EDIT        - Create or change source data           +JULIAN   -
%   3 +UTILITIES   - Perform utility functions              +TIME     -
%   4 +FOREGROUND  - Invoke language processors - foreground+TERMINAL -
%   5 +BATCH       - Submit job for language processing     +PF KEYS  -
%   6 +COMMAND     - Enter TSO command or CLIST (remembered)+PROC     -
%   7 +DIALOG TEST - Perform dialog testing                  &DISPSID
%   C +CHANGES     - Display summary of changes for this release
%   D +DOCSYS      - WDPSC Documentation System
%   F +FILE-AID    - Dataset BROWSE, EDIT, UTILITIES (VSAM or NVSAM)
%  IC  INFO-CENTER - Information Center Packages
%   P +PAN/SPF     - Panvalet/SPF system
%   T +TUTORIAL    - Display information about ISPF/PDF
%   U +USERDIAL    - To access your private dialogs from PDF
%   W +WDPSC       - WDPSC miscellaneous options
% X,XL+EXIT(LOGOFF)- Terminate ISPF using log/list defaults,(LOGOFF if X
%
+Enter%END+command to terminate ISPF.
%
)INIT
  .HELP = ISR00003
  &ZPRIM = no         /* never  A PRIMARY OPTION MENU      */
  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */
  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */
  VPUT (ZHTOP,ZHINDEX) PROFILE
  &OPSHUN2 = 'PGM(ISREDIT) PARM(P,ISREDM01)' /* NORMAL edit CALL */
  IF (&OPTION2 ^= '','STD')
     &OPSHUN2 = 'CMD(%EDIT&OPTION2) NOCHECK'
  IF (&SPFXF ^= '')
    IF (&ZCMD = &Z)
      &ZCMD = &SPFXF
      &SPFXF = ''
      .RESP = ENTER
  IF (&PREPO = 'YES')
    IF (&PPAIF = '')
      &SPFXF = &ZCMD
      &ZCMD = 'PRE'
      &PPAIF = '1'
      .RESP = ENTER
  IF (&SYSID ^= &Z)
    &DISPSID = 'SYSTEMID - &SYSID'
  IF (&ZCMD = &Z)
    .RESP = END
)PROC
  &PCMD = &ZCMD
  IF (&ZCMD = XL,XC,ZL)
      &SPFXF = 'X'
  &ZSEL = TRANS( TRUNC (&ZCMD,'.')
                0,'PANEL(ISPOPTA)'
                1,'PGM(ISRBRO) PARM(ISRBRO01)'
                2,'&OPSHUN2'
                E,'PGM(ISREDIT) PARM(P,ISREDM01)' /* ORIGINAL */
            ABEND,'PGM(ABEND0C1) '
                3,'PANEL(ISRUTIL)'
                4,'PANEL(ISRFPA)'
                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'
                6,'PGM(ISRPTC)'
                7,'PGM(ISRYXDR) NOCHECK'
      /*        8,'PGM(ISRLPRIM)'  */
                C,'PGM(ISPTUTOR) PARM(ISR00005)'
                T,'PGM(ISPTUTOR) PARM(ISR00000)'
              ' ',' '
                X,'EXIT'
                Z,'EXIT'
                P,'PANEL(PAN@PRIM)'
               PS,'PANEL(PAN@PRIM)'
               IC,'PANEL(INFOCTR)'
                K,'PANEL(KMENU)'
                S,'PANEL(SANA)'
                W,'PANEL(WSDIDX)'
                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'
                XL,'CMD(%SPFXL)'
                ZL,'CMD(%SPFXL)'
                XC,'PGM(WDPSCXS) PARM(&XC)'
               PRE,'CMD(%PREDIAL)'
                A,'CMD(%EDITAPP) NOCHECK'
                U,'CMD(%USERDIAL) NOCHECK'
                D,'CMD(%DOCSYS)'
                I,'PGM(IOFSPF)  PARM(&ZCMD) NEWAPPL(IOF) NOCHECK'
                *,'?' )
  &ZTRAIL = .TRAIL
  IF (&ZLOGON = 'INFOCTR')
    IF (.RESP = 'END')
        .RESP = 'ENTER'
        &ZSEL = 'PANEL(INFOCTR)'
  IF (&PREPO = 'YES')
   IF (&ZCMD = XL,XC,ZL)
      &PDXF = &ZCMD
   IF (&ZSEL = 'EXIT')
    IF (&PPAIF ^= '2')
      &SPFXF = &ZCMD
      &ZSEL = 'CMD(%POSTDIAL)'
      &PPAIF = '2'
   IF (.RESP = 'END')
    IF (&PPAIF ^= '2')
      &SPFXF = 'END'
      &ZSEL = 'CMD(%POSTDIAL)'
      &PPAIF = '2'
      .RESP = 'ENTER'
  IF (&ZCMD = 'END')
      .RESP = 'END'
)END
./ ADD NAME=ISR@PRIM 0134-85297-89285-1403-00144-00102-00000-D200155
%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ----------------
%OPTION  ===>_ZCMD
%                                                           +USERID   -
%   0 +ISPF PARMS  - Specify terminal and user parameters   +PREFIX   -
%   1 +BROWSE      - Display source data or output listings +DATE     -
%   2 +EDIT        - Create or change source data           +JULIAN   -
%   3 +UTILITIES   - Perform utility functions              +TIME     -
%   4 +FOREGROUND  - Invoke language processors - foreground+TERMINAL -
%   5 +BATCH       - Submit job for language processing     +PF KEYS  -
%   6 +COMMAND     - Enter TSO command or CLIST (remembered)+PROC     -
%   7 +DIALOG TEST - Perform dialog testing                  &DISPSID
%   C +CHANGES     - Display summary of changes for this release
%   D +DOCSYS      - WDPSC Documentation System
%   F +FILE-AID    - Dataset BROWSE, EDIT, UTILITIES (VSAM or NVSAM)
%  IC  INFO-CENTER - Information Center Packages
%   P +PAN/SPF     - Panvalet/SPF system
%   T +TUTORIAL    - Display information about ISPF/PDF
%   U +USERDIAL    - To access your private dialogs from PDF
%   V +VMCF        - To monitor and control local VPS printers
%   W +WDPSC       - WDPSC miscellaneous options
% X,XL+EXIT(LOGOFF)- Terminate ISPF using log/list defaults,(LOGOFF if X
%
+Enter%END+command to terminate ISPF.
%
)INIT
  .HELP = ISR00003
  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */
  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */
  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */
  VPUT (ZHTOP,ZHINDEX) PROFILE
  &OPSHUN2 = 'PGM(ISREDIT) PARM(P,ISREDM01)' /* NORMAL edit CALL */
  IF (&OPTION2 ^= '','STD')
     &OPSHUN2 = 'CMD(%EDIT&OPTION2) NOCHECK'
  IF (&SPFXF ^= '')
    IF (&ZCMD = &Z)
      &ZCMD = &SPFXF
      &SPFXF = ''
      .RESP = ENTER
  IF (&PREPO = 'YES')
    IF (&PPAIF = '')
      &SPFXF = &ZCMD
      &ZCMD = 'PRE'
      &PPAIF = '1'
      .RESP = ENTER
  IF (&SYSID ^= &Z)
    &DISPSID = 'SYSTEMID - &SYSID'

  &P = PM                             /* ===> set MVS/PM option code. */
  &RTM = RTM                          /* ===> set REALTIME fastpath.  */
  &RES = RES                          /* ===> set RESOLVE fastpath.   */
  &JRN = JRN                          /* ===> set JOURNAL fastpath.   */
  &PMGNAME = 'PERFORMANCE'            /* ===> set MVS/PM name.        */
  &PMGDESC = 'MVS/PERFORMANCE MANAGER'/* ===> set MVS/PM description. */
  IF (&PMGTERM = ENTER) &ZCMD = X     /* Restore original X command.  */
  &PMGTERM = &Z                       /* Set termination flag null    */
)PROC                    /*------------- REPLACED PROC STATEMENT      */
  IF (&PMGINIT ^= &Z)                 /* If we have initialized,      */
   IF (&ZVERB ^= RETURN)              /* but not jump function,       */
    IF (&ZCMD = X  ) &PMGTERM = ENTER /* and "X" entered set "ENTER", */
    IF (.RESP = END) &PMGTERM = END   /*  or "END" entered set "END". */
    IF (&PMGTERM ^= &Z)               /*   If we're terminating,      */
      .RESP = ENTER                   /*     simulate ENTER.          */
      &ZCMD = '&P'                    /*     and invoke PMGLTERM.     */
   IF (&ZVERB = RETURN)               /* If RETURN function,          */
      &ZCMD = &Z                      /*  set ZCMD to null            */
      .RESP = ENTER                   /*  simulate ENTER              */
      .MSG  = PMGI013                 /*  and issue message.          */
  &PMGTRL = TRUNC(&ZCMD,'.')          /* Set trail variable ...       */
  &PMGTRL = .TRAIL                    /* ... to .TRAIL.               */

  &PCMD = &ZCMD
  IF (&ZCMD = XL,XC,ZL)
      &SPFXF = 'X'
  &ZQ = &Z
    IF (&ZCMD ^= ' ')
      &ZQ = TRUNC(&ZCMD,'.')
      IF (&ZQ = ' ')
        .MSG = ISRU000
    &ZSEL = TRANS( &ZQ
                0,'PANEL(ISPOPTA)'
                1,'PGM(ISRBRO) PARM(ISRBRO01)'
                2,'&OPSHUN2'
                E,'PGM(ISREDIT) PARM(P,ISREDM01)' /* ORIGINAL */
            ABEND,'PGM(ABEND0C1) '
                3,'PANEL(ISRUTIL)'
                4,'PANEL(ISRFPA)'
                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'
                6,'PGM(ISRPTC)'
                7,'PGM(ISRYXDR) NOCHECK'
      /*        8,'PGM(ISRLPRIM)'  */
                C,'PGM(ISPTUTOR) PARM(ISR00005)'
                T,'PGM(ISPTUTOR) PARM(ISR00000)'
              ' ',' '
                X,'EXIT'
                Z,'EXIT'
                P,'PANEL(PAN@PRIM)'
               PS,'PANEL(PAN@PRIM)'
               IC,'PANEL(INFOCTR)'
                K,'PANEL(KMENU)'
                S,'PANEL(SANA)'
                W,'PANEL(WSDIDX)'
                F,'PANEL(IFAMU01) NEWAPPL(FAXE)'
                XL,'CMD(%SPFXL)'
                ZL,'CMD(%SPFXL)'
                XC,'PGM(WDPSCXS) PARM(&XC)'
               PRE,'CMD(%PREDIAL)'
                A,'CMD(%EDITAPP) NOCHECK'
                U,'CMD(%USERDIAL) NOCHECK'
                D,'CMD(%DCSYSUSR)'
                I,'PGM(IOFSPF)  PARM(&ZCMD) NEWAPPL(IOF) NOCHECK'
               IS,'PGM(DGTFMD01)  NEWAPPL(DGT) NOCHECK'
              DCK,'PANEL(DCR@PRIM) NEWAPPL(DCR)'
               EN,'PGM(C1SM1000) NEWAPPL(CTLI) NOCHECK'
                V,'PGM(VM50ISPF) NEWAPPL(VMCF) NOCHECK PARM(&VMCOPT)'
               MC,'PGM(MCTISPF) NEWAPPL(MCAT)'

             '&P','PGM(PMGLMAIN) NOCHECK PARM(NOTEST)'
           '&RTM','PGM(PMGLMAIN) NOCHECK PARM(NOTEST,/1.1.&PMGTRL)'
           '&RES','PGM(PMGLMAIN) NOCHECK PARM(NOTEST,/2.1.&PMGTRL)'
           '&JRN','PGM(PMGLMAIN) NOCHECK PARM(NOTEST,/J.B)'

                *,'?' )
  &ZTRAIL = .TRAIL
  IF (&ZLOGON = 'INFOCTR')
    IF (.RESP = 'END')
        .RESP = 'ENTER'
        &ZSEL = 'PANEL(INFOCTR)'
  IF (&PREPO = 'YES')
   IF (&ZCMD = XL,XC,ZL)
      &PDXF = &ZCMD
   IF (&ZSEL = 'EXIT')
    IF (&PPAIF ^= '2')
      &SPFXF = &ZCMD
      &ZSEL = 'CMD(%POSTDIAL)'
      &PPAIF = '2'
   IF (.RESP = 'END')
    IF (&PPAIF ^= '2')
      &SPFXF = 'END'
      &ZSEL = 'CMD(%POSTDIAL)'
      &PPAIF = '2'
      .RESP = 'ENTER'
  IF (&ZCMD = 'END')
      .RESP = 'END'
)END
./ ADD NAME=ISRTSO   0107-84258-87016-1557-00042-00049-00000-KX00150
)ATTR
  \ TYPE(OUTPUT) INTENS(LOW)
  { TYPE(OUTPUT) INTENS(HIGH)
  } TYPE(INPUT) INTENS(&QQI)
  # TYPE(INPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT)
)BODY CMD(ZCMD)
%-------------------------  TSO COMMAND PROCESSOR  ---------------------
%ENTER TSO COMMAND OR CLIST BELOW:
%
\QQ1                       {QQ2 }ZSM  \QQ3
%===>#ZCMD


+
+
)INIT
  &ZCMD = &PTCBTEXT
  IF (&SAVETSO = YES)
    IF (&Z = &ZCMD)   &ZCMD = &ZRTSO                        /*JARED*/
  .HELP = ISR60010
  .CURSOR = ZCMD
  &ZSM = TRANS(&ZSMMODE Y,YES *,NO)
&QQ1 = ''
&QQ2 = ''
&QQ3 = ''
&QQI = 'NON'
&QQF = TRUNC (&ZLOGON,2)
IF (&QQF = 'SM')
    &QQ1 = 'ENTER SESSION MANAGER MODE'
    &QQ2 = '===>'
    &QQ3 = '  (YES or NO)'
    &QQI = 'HIGH'
)PROC
  IF (&Z ^= &ZCMD)  &ZRTSO = &ZCMD                        /*JARED*/
    VPUT (ZRTSO) PROFILE                                  /*JARED*/
  &PTCBTEXT = &ZCMD
  &PTCLOG  = 'Y'       /* Y = Yes, log commands. N = No logging */
  &ZSMMODE = TRANS(&ZSM YES,Y YE,Y Y,Y YO,Y *,N)
  VPUT (ZSMMODE) PROFILE
  IF(.RESP = END)
    &ZSM = NO
)END
./ ADD NAME=ISRUDA1  0101-88012-88012-1248-00114-00094-00000-KX00155
)ATTR
  ^ TYPE(INPUT) INTENS(NON)
)BODY
%----------------------------  LIBRARY UTILITY  ------------------------
%OPTION  ===>_ZCMD
%
%   blank+- Display member list          %B+- Browse member
%   C+- Compress data set                %P+- Print member
%   X+- Print index listing              %R+- Rename member
%   L+- Print entire data set            %D+- Delete member
%   I+- Data set information             %S+- Data set information (shor
+
+ISPF LIBRARY:
+   PROJECT%===>_PRJ1    +
+   GROUP  %===>_LIB1    % ===>_LIB2    % ===>_LIB3    % ===>_LIB4    +
+   TYPE   %===>_TYP1    +
+   MEMBER %===>_MEMB    +       (If "P", "R", "D", "B", or blank select
+   NEWNAME%===>_NEWNAME +       (If "R" selected)
+
+OTHER PARTITIONED OR SEQUENTIAL DATA SET:
+   DATA SET NAME %===>_DSN
+   VOLUME SERIAL %===>_VOL   +  (If not cataloged)
+
+DATA SET PASSWORD%===>^PSWD    +(If password protected)
)INIT
  IF ( &PASSDS = 'YES' )
    IF ( &PRIF ^= 'YES' )
       &DSN = &PASSDSN
       &VOL = &PASSVOL

  &ZMLCSR = '        '                  /*                       @M1A*/
  .HELP = ISR31000
  &ZCMD = TRANS(&OPT Z,C M,' ' *,*)
  /*&MEMB = &Z                                                    @MND*/
  &NEWNAME = &Z
  IF ( &DSN = ' ' )
    &VOL = &Z
  IF ( &DSN ^= ' ' )
    &MEMB = ' '                         /*                       @M1A*/
    .CURSOR = DSN
  IF ( .CURSOR = ' ' )
    .CURSOR = ZCMD
  &ZUTILREN = 'RRENAMED'
  &ZUTILDEL = 'DDELETED'
  &ZUTILPRT = 'PPRINTED'
  &ZUTILBRO = 'B       '

  IF (&NEXTTIME = 'END')
    .MSG = &Z
    .RESP = END
  IF (&FADSN ^= ' ')
    IF (&PRIF ^= 'YES')
      &DSN = &FADSN
      &VOL = &FAVOL
      IF (&FAOPT ^= WAIT)
        &NEXTTIME = 'END'
        &ZCMD = &FAOPT
        .RESP = ENTER

)REINIT                                 /*                       @M1A*/
  IF (&ZMLCSR ^= ' ')                   /*                       @M1A*/
    .CURSOR = &ZMLCSR                   /*                       @M1A*/
)PROC
  &PRIF = 'YES'
  IF ( &PASSDS = 'YES' )
    IF (&DSN ^= &PASSDSN,&Z)
      VPUT (DSN VOL) PROFILE

  &OPT = TRANS (&ZCMD M,# Z,# C,Z ' ',M *,*)
  VER(&OPT,LIST,Z,L,X,P,R,D,B,M,I,S)

  IF (&OPT = Z )
    &GPM = 'Not Allowed'
    &GPML = 'Compress not allowed for &DSN'
    IF (&DSN = '''SYS1.LINKLIB''')
      .MSG = GPM001A
    IF (&DSN = '''USER.PROCLIB''')
      .MSG = GPM001A
    IF (&DSN = '''USER.TEST''')
      .MSG = GPM001A

  IF (&OPT = R )
    VER(&NEWNAME,NB)
    IF (&DSN = ' ')
      VER(&MEMB,NB)
  IF (&OPT ^= R , D , M , P , B )
    IF (&MEMB ^= ' ' )
      .MSG = ISRU008
  IF (&DSN = ' ')
    VER(&PRJ1,NB)
    VER(&LIB1,NB)
    VER(&TYP1,NB)
    IF (&VOL ^= ' ' )
      .MSG = ISRU232
    IF (&ZCMD = D , P , B )
      VER(&MEMB,NB)
  IF (&DSN ^= ' ')                      /*                        @M1A*/
    &ZMLCSR = '********'                /*                        @M1A*/
    &ZSPLAT = Y                         /*                        @MPA*/
    PANEXIT((DSN,ZMLCSR,ZSPLAT),PGM,&ZMLVEXIT,&ZMLVDATA,MSG=ISRM040)
                                        /*                        @MPA*/
  VPUT ( PRJ1 LIB1 LIB2 LIB3 LIB4 TYP1 ) PROFILE
)END
 /*                                                                   */
 /* $SEG(ISRUDA1) COMP(DATASET) PROD(MVS)                             */
 /*                                                                   */
 /* CHANGE ACTIVITY                                                   */
 /*  $L0= UNFLAGED PRE230                    :                        */
 /*  $MN= MEMLIST   M230     860820   158590 :                        */
 /*  $M1= MEMLIST   M230     860819   158590 : Function test          */
 /*   PTM00000126                                                     */
 /*  $MP= DCR30     M230     861201   158590 : Member list            */
 /*   filter exit                                                     */
 /*  $H1= MEMLIST   M230     8612×@   397010 : PTM 867                */
./ ADD NAME=ISRUDA2  0114-85323-86216-1408-00077-00049-00000-KK00150
)ATTR
  ^ TYPE(INPUT) INTENS(NON)
)BODY
%----------------------------  DATA SET UTILITY  -----------------------
%OPTION  ===>_ZCMD
%
%   A+- Allocate new data set                %C+- Catalog data set
%   R+- Rename entire data set               %U+- Uncatalog data set
%   D+- Delete entire data set               %S+- Data set information (
%   blank+- Data set information             %M+- Library Member list
+
+ISPF LIBRARY:
+   PROJECT%===>_PRJ0    +
+   GROUP  %===>_LIB0    +
+   TYPE   %===>_TYP0    +
+
+OTHER PARTITIONED OR SEQUENTIAL DATA SET:
+   DATA SET NAME %===>_DSN
+   VOLUME SERIAL %===>_VOL   +  (If not cataloged, required for option
+
+DATA SET PASSWORD%===>^PSWD    +(If password protected)
)INIT
  .HELP = ISR32000
  &ZCMD = TRANS(&OPT N,R E,D I,' ' V,U *,*)
  IF ( &PASSDS = 'YES' )
       &DOWN = PASSTHRU
       &UP = PASSTHRU
    IF ( &PRIF ^= 'YES' )
       &DSN = &PASSDSN
       &VOL = &PASSVOL
  IF (&FADSN ^= ' ')
     &DSN = &FADSN
  IF ( &DSN = ' ' )
    &VOL = &Z
  IF ( &DSN ^= ' ' )
    .CURSOR = ZCMD
  IF ( .CURSOR = ' ' )
    .CURSOR = ZCMD
)REINIT
    IF ( &PASSDS = 'YES' )
       &DOWN = PASSTHRU
       &UP = PASSTHRU
       REFRESH (ZCMD DSN VOL)
)PROC
  &PRIF = 'YES'
  IF ( &PASSDS = 'YES' )
       &DOWN = &Z
       &UP = &Z
    IF (&DSN ^= &PASSDSN,&Z)
      VPUT (DSN VOL) PROFILE
      &PVOL = TRANS (&VOL ' ',NONE *,*)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &DSN &PVOL)'
    IF (&ZCMD = DOWN,UP)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &ZCMD 1)'
      &DSN = &PANLEXIT
      &VOL = &PASSVOL
      &ZCMD = &Z
      &GPM = 'Prev DSN'
      &GPML = 'Previous DSNAME Selected for reuse'
      .MSG = GPM001
  &OPT = TRANS(&ZCMD N,# E,# I,# V,# R,N D,E ' ',I U,V *,*)
  VER(&OPT,LIST,A,N,E,I,C,V,S,M)
  IF ( &OPT = C )
    VER(&VOL,NB)
  IF ( &OPT = V )
    IF (&VOL ^= ' ' )
      .MSG = ISRU230
  IF ( &DSN = ' ' )
    VER(&PRJ0,NB)
    VER(&LIB0,NB)
    VER(&TYP0,NB)
    IF ( &OPT ^= C )
      IF (&VOL ^= ' ' )
        .MSG = ISRU232
  VER (&DSN,DSNAME)
  VPUT ( PRJ0 LIB0 TYP0 ) PROFILE
)END
./ ADD NAME=ISRUDLP  0102-89254-89254-2210-00061-00056-00000-KK00155
%--------------------------- DATA SET LIST UTILITY ---------------------
%OPTION  ===>_ZCMD
%
%  blank+- Display data set list%*         %P+ - Print data set list
%  V    +- Display VTOC information only   %PV+- Print VTOC information
%
+Enter one or both of the parameters below:
+  DSNAME LEVEL %===>_ZDLDSNLV                                    +
+  VOLUME       %===>_ZDLPVL+
%
%
+  INITIAL DISPLAY VIEW    %===>_ZUPIV   +(VOLUME,SPACE,ATTRIB,TOTAL)
+  CONFIRM DELETE REQUEST  %===>_ZUPCD+   (YES or NO)
%
%*+The following line commands will be available when the list is displa
%
%B+- Browse data set     %C+- Catalog data set     %F+- Free unused spac
%E+- Edit data set       %U+- Uncatalog data set   %=+- Repeat last comm
%D+- Delete data set     %P+- Print data set
%R+- Rename data set     %X+- Print index listing
%I+- Data set information%M+- Display member list
%S+- Information (short) %Z+- Compress data set    %TSO command or CLIST
)INIT
  .HELP = ISR34000
  IF (.MSG = &Z)
    .CURSOR = ZCMD
  &ZCMD = &ZUOPT
  &ZUPIV = TRANS (&ZUVIEW 0,VOLUME 1,SPACE 2,ATTRIB 3,TOTAL *,VOLUME)
  IF (&ZUCDR = &Z)
    &ZUCDR = Y
  &ZUPCD = TRANS (&ZUCDR Y,YES N,NO *,*)

  IF (&NEXTTIME = 'END')
    .MSG = &Z
    .RESP = END
  IF (&FADSN ^= ' ')
      &ZDLDSNLV = &FADSN
      IF (&FAOPT ^= WAIT)
        &NEXTTIME = 'END'
        &ZCMD = &FAOPT
        .RESP = ENTER

)PROC
  IF (&ZCMD ^= ' ')
    VER (&ZCMD,LIST,P,V,PV)
  &ZUOPT = TRUNC (&ZCMD,2)
  IF (&ZUOPT = 'V ','PV')
    VER (&ZDLPVL,NONBLANK)
  IF (&ZUOPT = '  ','P ')
    IF (&ZDLPVL = ' ')
      VER (&ZDLDSNLV,NONBLANK,MSG=ISRU187)
  &ZUCDR = TRUNC (&ZUPCD,1)
  VER (&ZUCDR,NB,LIST,Y,N)
  &ZVIEW = TRUNC (&ZUPIV,1)
  VER (&ZVIEW,NB,LIST,V,S,A,T)
  &ZUPIV = TRANS (&ZVIEW V,VOLUME S,SPACE A,ATTRIB T,TOTAL *,*)
  &ZUVIEW = TRANS (&ZVIEW V,0 S,1 A,2 T,3 *,*)
)END
/* $SEG(ISRUDLP) COMP(DSLIST)  PROD(MVS):                            */
/* $M0= ENHANC34 M230   860717  641747 :                             */
/* $H0= DSLIST   M230   861016  040100 : FT PTM 294                  */
./ ADD NAME=ISRUMC1  0111-85324-87093-1613-00083-00049-00000-KX00150
)ATTR
  ^ TYPE(INPUT) INTENS(NON)
)BODY
%---------------------------  MOVE/COPY UTILITY  -----------------------
%OPTION  ===>_ZCMD
%
%   C+- Copy data set or member(s)             %CP+- Copy and print
%   M+- Move data set or member(s)             %MP+- Move and print
%   P+- Promote data set or member(s)          %PP+- Promote and print
+
+SPECIFY%"FROM"+DATA SET BELOW, THEN PRESS%ENTER+KEY
+
+FROM ISPF LIBRARY:
+   PROJECT%===>_PRJ0    +
+   GROUP  %===>_LIB0    +
+   TYPE   %===>_TYP0    +
+   MEMBER %===>_MEMB    +       (Blank for member list, * for all membe
+
+FROM OTHER PARTITIONED OR SEQUENTIAL DATA SET:
+   DATA SET NAME %===>_DSN1
+   VOLUME SERIAL %===>_VOL1  +  (If not cataloged)
+
+DATA SET PASSWORD%===>^PSWD    +(If password protected)
)INIT
  IF (&PASSDS = 'YES')
       &DOWN = PASSTHRU
       &UP = PASSTHRU
    IF (&PRIF  ^= YES)
      &DSN1 = &DSN
      &VOL1 = &VOL
  .HELP=ISR33020
  &ZCMD = &ZOPT
  &MEMB = &Z
  &ZUMCSEL  = 'S'
  &ZUMCCOPY = 'COPIED '
  &ZUMCMOVE = 'MOVED  '
  &ZUMCNREP = 'NO-REPL'
  IF (&XXX = 'E')
    .MSG = &Z
    .RESP = END
  IF (&HOTFROM ^= ' ')
      &DSN1 = &HOTFROM
      IF (&FAOPT ^= WAIT)
        &XXX = 'E'
        &ZCMD = TRUNC (&FAOPT,1)
        &ZUREP = .TRAIL
        .RESP = ENTER
  IF ( &DSN1 ^= ' ' )
    .CURSOR = DSN1
  IF ( .CURSOR = ' ')
    .CURSOR = ZCMD
)REINIT
    IF (&PASSDS = 'YES')
       &DOWN = PASSTHRU
       &UP = PASSTHRU
       REFRESH (ZCMD DSN1 VOL1)
)PROC
  &PRIF = 'YES'
  IF ( &PASSDS = 'YES' )
       &DOWN = &Z
       &UP = &Z
    IF (&DSN1 ^= &PASSDSN,&Z)
      &DSN = &DSN1
      &VOL = &VOL1
      VPUT (DSN VOL) PROFILE
      &PVOL = TRANS (&VOL ' ',NONE *,*)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &DSN &PVOL)'
    IF (&ZCMD = DOWN,UP)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &ZCMD 1)'
      &DSN1 = &PANLEXIT
      &VOL1 = &PASSVOL
      &ZCMD = &Z
      &GPM = 'Prev DSN'
      &GPML = 'Previous DSNAME Selected for reuse'
      .MSG = GPM001
  VER(&ZCMD,NB,LIST,M,C,MP,CP,P,PP)
  &ZOPT = &ZCMD
  IF (&DSN1 = ' ')
    VER (&PRJ0,NB)
    VER (&LIB0,NB)
    VER (&TYP0,NB)
  VPUT ( PRJ0 LIB0 TYP0 ) PROFILE
)END
./ ADD NAME=ISRUMC2A 0111-85312-87093-1536-00086-00048-00000-KX00150
)ATTR
  ^ TYPE(INPUT) INTENS(NON)
  @ TYPE(OUTPUT) INTENS(LOW)
)BODY
%&ZUMODE --- FROM &DSNI&ZUPMEMB ----------------------------------------
%COMMAND ===>_ZCMD
+
+SPECIFY%"TO"+DATA SET BELOW.
%
+TO ISPF LIBRARY:
+   PROJECT%===>_PROJ2   +
+   GROUP  %===>_LIBR2   +
+   TYPE   %===>_TYPE2   +
+   MEMBER %===>_MEMB2   + @PRMPT                                   +
+
+TO OTHER PARTITIONED OR SEQUENTIAL DATA SET:
+   DATA SET NAME %===>_DSN2
+   VOLUME SERIAL %===>_VOL2  +  (If not cataloged)
+
+DATA SET PASSWORD%===>^PSWD2   +(If password protected)
+
+"TO" DATA SET OPTIONS:
+   IF PARTITIONED, REPLACE LIKE-NAMED MEMBERS%===>_ZURPL+ (YES or NO)
+   IF SEQUENTIAL, "TO" DATA SET DISPOSITION  %===>_ZUOM + (OLD or MOD)
+   SPECIFY PACK OPTION FOR "TO" DATA SET     %===>_ZUPO + (YES, NO or b
)INIT
  &ZCMD = &Z
  .HELP = ISR33021
  &ZUOM = TRANS (&ZUSD M,'MOD' O,'OLD')                     /* OZ93212 *
  &ZURPL = TRANS (&ZUREP Y,'YES' N,'NO' *,*)
  &ZUPO = TRANS (&ZUPK Y,'YES' N,'NO' *,*)
  &PRMPT = TRANS (&PROMPT S,' ' P,'(BLANK UNLESS MEMBER IS TO BE RENAMED
  IF (&PASSDS = 'YES')
       &DOWN = PASSTHRU
       &UP = PASSTHRU
    IF (&PRIF2 ^= YES)
      &DSN2 = &DSN
      &VOL2= &VOL
  IF (&HOTTO ^= ' ')
      &DSN2 = &HOTTO
      IF (&FAOPT ^= WAIT)
        .RESP = ENTER
  IF (&ZURPL = ' ')
    &ZURPL = NO
  IF (&ZUOM = ' ')
    &ZUOM = OLD
)REINIT
    IF (&PASSDS = 'YES')
       &DOWN = PASSTHRU
       &UP = PASSTHRU
       REFRESH (ZCMD DSN2 VOL2)
)PROC
  &PRIF2 = 'YES'
  IF ( &PASSDS = 'YES' )
       &DOWN = &Z
       &UP = &Z
    IF (&DSN2 ^= &PASSDSN,&Z)
      &DSN = &DSN2
      &VOL = &VOL2
      VPUT (DSN VOL) PROFILE
      &PVOL = TRANS (&VOL ' ',NONE *,*)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &DSN &PVOL)'
    IF (&ZCMD = DOWN,UP)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &ZCMD 1)'
      &DSN2 = &PANLEXIT
      &VOL2 = &PASSVOL
      &ZCMD = &Z
      &GPM = 'Prev DSN'
      &GPML = 'Previous DSNAME Selected for reuse'
      .MSG = GPM001
  IF (&DSN2 = ' ')
    VER (&PROJ2,NB)
    VER (&LIBR2,NB)
    VER (&TYPE2,NB)
  VER (&DSN2,DSNAME)
  &ZUREP = TRUNC (&ZURPL,1)
  &ZURPL = TRANS (&ZUREP Y,'YES' N,'NO' *,*)
  VER (&ZURPL,LIST,YES,NO)
  &ZUSD = TRUNC (&ZUOM,1)
  &ZUOM = TRANS (&ZUSD M,'MOD' O,'OLD')                     /* OZ93212 *
  VER (&ZUOM,LIST,MOD,OLD)
  &ZUPK = TRUNC (&ZUPO,1)
  VER (&ZUPK,LIST,Y,N)
  &PROMPT = TRANS (&PRMPT ' ',S '(BLANK UNLESS MEMBER IS TO BE RENAMED)'
  VPUT ( PROJ2 LIBR2 TYPE2 ZUREP ZUSD ) PROFILE
)END
./ ADD NAME=ISRUMC2B 0109-85310-87093-1536-00081-00045-00000-KX00150
)ATTR
  ^ TYPE(INPUT) INTENS(NON)
  # TYPE(OUTPUT) INTENS(HIGH)
)BODY
%&ZUMODE --- FROM &DSNI&ZUPMEMB ----------------------------------------
%COMMAND ===>_ZCMD
+
+SPECIFY%"TO"+DATA SET BELOW.
+
+TO ISPF LIBRARY:
+   PROJECT%===>_PROJ2   +
+   GROUP  %===>_LIBR2   +
+   TYPE   %===>_TYPE2   +
+
+TO OTHER PARTITIONED OR SEQUENTIAL DATA SET:
+   DATA SET NAME %===>_DSN2
+   VOLUME SERIAL %===>_VOL2  +  (If not cataloged)
+
+DATA SET PASSWORD%===>^PSWD2   +(If password protected)
+
+"TO" DATA SET OPTIONS:
+   IF PARTITIONED, REPLACE LIKE-NAMED MEMBERS%===>_ZURPL+ (YES or NO)
+   IF SEQUENTIAL, "TO" DATA SET DISPOSITION  %===>_ZUOM + (OLD or MOD)
+   SPECIFY PACK OPTION FOR "TO" DATA SET     %===>_ZUPO + (YES, NO or b
)INIT
  &ZCMD = &Z
  .HELP = ISR33021
  &ZUOM = TRANS (&ZUSD M,'MOD' O,'OLD')                        /* OZ9321
  &ZURPL = TRANS (&ZUREP Y,'YES' N,'NO' *,*)
  &ZUPO = TRANS (&ZUPK Y,'YES' N,'NO' *,*)
  IF (&PASSDS = 'YES')
       &DOWN = PASSTHRU
       &UP = PASSTHRU
    IF (&PRIF2 ^= YES)
      &DSN2 = &DSN
      &VOL2 = &VOL
  IF (&HOTTO ^= ' ')
      &DSN2 = &HOTTO
      IF (&FAOPT ^= WAIT)
        .RESP = ENTER
  IF (&ZURPL = ' ')
    &ZURPL = NO
  IF (&ZUOM = ' ')
    &ZUOM = OLD
)REINIT
    IF (&PASSDS = 'YES')
       &DOWN = PASSTHRU
       &UP = PASSTHRU
       REFRESH (ZCMD DSN2 VOL2)
)PROC
  &PRIF2 = 'YES'
  IF ( &PASSDS = 'YES' )
       &DOWN = &Z
       &UP = &Z
    IF (&DSN2 ^= &PASSDSN,&Z)
      &DSN = &DSN2
      &VOL = &VOL2
      VPUT (DSN VOL) PROFILE
      &PVOL = TRANS (&VOL ' ',NONE *,*)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &DSN &PVOL)'
    IF (&ZCMD = DOWN,UP)
      &PANLEXIT = 'SELECT CMD(%PASSDSN &ZCMD 1)'
      &DSN2 = &PANLEXIT
      &VOL2 = &PASSVOL
      &ZCMD = &Z
      &GPM = 'Prev DSN'
      &GPML = 'Previous DSNAME Selected for reuse'
      .MSG = GPM001
  IF (&DSN2 = ' ')
    VER (&PROJ2,NB)
    VER (&LIBR2,NB)
    VER (&TYPE2,NB)
  VER (&DSN2,DSNAME)
  &ZUREP = TRUNC (&ZURPL,1)
  &ZURPL = TRANS (&ZUREP Y,'YES' N,'NO' *,*)
  &ZUSD = TRUNC (&ZUOM,1)
  &ZUOM = TRANS (&ZUSD M,'MOD' O,'OLD')                        /* OZ9321
  &ZUPK = TRUNC (&ZUPO,1)
  VER (&ZUPK,LIST,Y,N)
  VPUT ( PROJ2 LIBR2 TYPE2 ZUREP ZUSD ) PROFILE
)END
./ ADD NAME=KMENU    0149-82357-86100-1811-00060-00038-00000-KK00150
%----------------    TECHNICAL SERVICES UTILITIES   --------------------
%SELECT OPTION ===>_OPT                    +
%
% C+- SOURCE PROGRAM COMPARE UTILITY
% D%- Technical Services Documentation System
%DS+- DASD SEARCH UTILITY
% E+- INVOKE INFO/MANAGEMENT (ERROR TRACKING SYSTEM)
% I+- INVOKE INFO/SYS DATABASE SELECTION PANEL
%IO+- IPCS Option Menu (IPCS dialog system)
% K+- KERMIT TEST PANELS
% M+- SEND/RECEIVE MESSAGES
% N+- NVSAM CATALOG UTILITY DIALOG
% O+- OPTIONS- Local SPF options - EDIT type,PASSDSN,SAVETSO,etc.
% P+- PDSGAS - Member Recovery Utility
% R+- INVOKE RESOLVE
% S+- INTERACTIVE SMP4 UTILITY
%SE+- SMP/E Dialog System
%SL%- SYSLOG - Display list of archived SYSLOG datasets for browseing
% T+- EDIT TSO COMMAND OUTPUT
%TL+- TECHNICAL LIBRARY SERVICE
% U+- SYSTEM PROGRAMMER UTILITIES
%
)INIT
  IF (&OXF = 'END')
     &OXF = 'NORETRY'
    .RESP = 'END'
  &LBCCMD = 'CMD(&ZUSER.B)'
)PROC
   IF (&OPT = SL)
      &DSLIST = 'DPSCD150.SYSLOG'
  &SEL = TRANS( TRUNC (&OPT,'.')
                A,'PANEL(ACFOPTS)'
               SL,'CMD(%FLIST)'
                D,'CMD(%DOCTECH)'
                N,'CMD(%SPFCATNV)'
               IM,'CMD(%SPFOZD I)'
               IP,'CMD(%SPFOZD I PO(Y))'
               TI,'CMD(%SPFOZD T)'
                I,'PANEL(SPFOZSEL)'
             IPCS,'CMD(%IOINIT)'
               IO,'CMD(%IOINIT)'
                E,'CMD(%SPFINFO)'
                R,'CMD(%SPFPEEK)'
               SH,'CMD(%SPFSH)'
                C,'CMD(%SPFCOMPN)'
                H,'CMD(%SPFHOLD)'
                K,'PANEL(KKMENU)'
                M,'CMD(%SPFMESSB)'
                O,'PANEL(SPFEOPT)'
                P,'CMD(%PDSGAS)'
                S,'CMD(%SPFSMP4)'
               SE,'CMD(%SMPE ZCMD(&ZCMD)) NOCHECK NEWAPPL(SMPE)'
                T,'CMD(%SPFTSO)'
               TL,'CMD(%SLSS)'
                U,'CMD(%SPFBATU)'
               DS,'CMD(%VTOCCMD1)'
              LBC,'&LBCCMD'
                *,'?'
                )
)END
./ ADD NAME=MULTEDIT 0108-84335-85024-1551-00193-00176-00000-GD02150
)ATTR
  @  TYPE(INPUT) INTENS(LOW) CAPS(ON) JUST(LEFT)
  #  TYPE(OUTPUT) INTENS(LOW) CAPS(ON) JUST(LEFT)
  ^  TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
  $  TYPE(TEXT) INTENS(LOW) SKIP(ON)
)BODY
%----------------------- A BETTER EDIT/BROWSE PANEL ------&SAVEDMSG-----
+COMMAND/DSN NO.%==>_ZCMD
+
+MEMBER NAME or
+   FIND STRING %==>_MEMBER                                  +VOLUME%==>
+DSN  %==>_OTHERDSN                                        % +OPTION%==>
^KKMEAPP
_B+  1%==>@W88DSN01                                    %%%%%Option Codes
_C+  2%==>@W88DSN02                                    %%%%% E+Edit
_D+  3%==>@W88DSN03                                    %%%%% B+Browse
_E+  4%==>@W88DSN04                                    %%%%% F+Find stri
_F+  5%==>@W88DSN05                                    %%%%%  +the data
_G+  6%==>@W88DSN06                                    %%%%% X+Find stri
_H+  7%==>@W88DSN07                                    %%%%%  +the membe
_I+  8%==>@W88DSN08                                    %%%%%  +or SPF St
_J+  9%==>@W88DSN09                                    %%%%%
_K+ 10%==>@W88DSN10                                    %%%%%ÖÖÖÖÖÖÖÖÖÖÖÖ
_L+ 11%==>@W88DSN11                                    %%%%%Ö+
_M+ 12%==>@W88DSN12                                    %%%%%Ö+     Does
_N+ 13%==>@W88DSN13                                    %%%%%Ö+     this
_O+ 14%==>@W88DSN14                                    %%%%%Ö+     make
_P+ 15%==>@W88DSN15                                    %%%%%Ö+     cents
_Q+ 16%==>@W88DSN16                                    %%%%%Ö+
_R+ 17%==>@W88DSN17                                    %%%%%ÖÖÖÖÖÖÖÖÖÖÖÖ
)INIT
 IF (&OPTION2 = APP,KK)
   &UP = PASSTHRU
   &DOWN = PASSTHRU
 .HELP = EDIT2HLP
 .CURSOR = ZCMD
 &A = ' '
 &B = '-'
 &C = '-'
 &D = '-'
 &E = '-'
 &F = '-'
 &G = '-'
 &H = '-'
 &I = '-'
 &J = '-'
 &K = '-'
 &L = '-'
 &M = '-'
 &N = '-'
 &O = '-'
 &P = '-'
 &Q = '-'
 &R = '-'
 IF (&ZTRAIL ^= &Z)
    &ZCMD = &ZTRAIL
    &ZTRAIL = &Z
    VPUT ZTRAIL SHARED
   .RESP = 'ENTER'
   .MSG = &Z
)PROC
 IF (&OPTION2 = APP,KK)
   &UP = &Z
   &DOWN = &Z
   IF (&ZCMD = UP,DOWN)
      &KCMD = &ZCMD
      VPUT (KCMD) SHARED
      .RESP = 'END'
 VER (&ZCMD,RANGE,1,17)
 VER (&OTHVOL,PICT,'CCCCCC')
 VER (&A,LIST,'S','E','B','F','X','-')
 VER (&B,LIST,'S','E','B','F','X','-')
 VER (&C,LIST,'S','E','B','F','X','-')
 VER (&D,LIST,'S','E','B','F','X','-')
 VER (&E,LIST,'S','E','B','F','X','-')
 VER (&F,LIST,'S','E','B','F','X','-')
 VER (&G,LIST,'S','E','B','F','X','-')
 VER (&H,LIST,'S','E','B','F','X','-')
 VER (&I,LIST,'S','E','B','F','X','-')
 VER (&J,LIST,'S','E','B','F','X','-')
 VER (&K,LIST,'S','E','B','F','X','-')
 VER (&L,LIST,'S','E','B','F','X','-')
 VER (&M,LIST,'S','E','B','F','X','-')
 VER (&N,LIST,'S','E','B','F','X','-')
 VER (&O,LIST,'S','E','B','F','X','-')
 VER (&P,LIST,'S','E','B','F','X','-')
 VER (&Q,LIST,'S','E','B','F','X','-')
 VER (&R,LIST,'S','E','B','F','X','-')
 &A00 = &A
 &A01 = &B
 &A02 = &C
 &A03 = &D
 &A04 = &E
 &A05 = &F
 &A06 = &G
 &A07 = &H
 &A08 = &I
 &A09 = &J
 &A10 = &K
 &A11 = &L
 &A12 = &M
 &A13 = &N
 &A14 = &O
 &A15 = &P
 &A16 = &Q
 &A17 = &R
 &A00 = TRANS (&A00 S,E *,*)
 &A01 = TRANS (&A01 S,E *,*)
 &A02 = TRANS (&A02 S,E *,*)
 &A03 = TRANS (&A03 S,E *,*)
 &A04 = TRANS (&A04 S,E *,*)
 &A05 = TRANS (&A05 S,E *,*)
 &A06 = TRANS (&A06 S,E *,*)
 &A07 = TRANS (&A07 S,E *,*)
 &A08 = TRANS (&A08 S,E *,*)
 &A09 = TRANS (&A09 S,E *,*)
 &A10 = TRANS (&A10 S,E *,*)
 &A11 = TRANS (&A11 S,E *,*)
 &A12 = TRANS (&A12 S,E *,*)
 &A13 = TRANS (&A13 S,E *,*)
 &A14 = TRANS (&A14 S,E *,*)
 &A15 = TRANS (&A15 S,E *,*)
 &A16 = TRANS (&A16 S,E *,*)
 &A17 = TRANS (&A17 S,E *,*)
 IF (&ZCMD = 1)
   &A01 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 2)
   &A02 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 3)
   &A03 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 4)
   &A04 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 5)
   &A05 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 6)
   &A06 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 7)
   &A07 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 8)
   &A08 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 9)
   &A09 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 10)
   &A10 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 11)
   &A11 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 12)
   &A12 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 13)
   &A13 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 14)
   &A14 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 15)
   &A15 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 16)
   &A16 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
 IF (&ZCMD = 17)
   &A17 = E
   &OTHERDSN = &Z
   &ZCMD = &Z
)END
./ ADD NAME=MULTSOFT 0103-85018-88021-1246-00329-00321-00000-KK00155
)ATTR
  @  TYPE(INPUT) INTENS(LOW) CAPS(ON) JUST(LEFT)
  #  TYPE(OUTPUT) INTENS(LOW) CAPS(ON) JUST(LEFT)
  ^  TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT)
  $  TYPE(TEXT) INTENS(LOW) SKIP(ON)
)BODY
%----------------------- A BETTER EDIT/BROWSE PANEL ------&SAVEDMSG-----
+COMMAND/DSN NO.%==>_ZCMD
+
+    MEMBER NAME%==>_MEMBER                                    +(or FIND
+      OTHER DSN%==>_OTHERDSN                                          +
+        +VOLUME%==>_OTHVOL+
^KKMEAPP
_B+  1%==>@W88DSN01                                    %    Option Codes
_C+  2%==>@W88DSN02                                    %     E+Edit
_D+  3%==>@W88DSN03                                    %     B+Browse
_E+  4%==>@W88DSN04                                    %     F+Find stri
_F+  5%==>@W88DSN05                                    %      +the data
_G+  6%==>@W88DSN06                                    %     X+Find stri
_H+  7%==>@W88DSN07                                    %      +the membe
_I+  8%==>@W88DSN08                                    %      +or SPF St
_J+  9%==>@W88DSN09                                    %
_K+ 10%==>@W88DSN10                                    %    ÖÖÖÖÖÖÖÖÖÖÖÖ
_L+ 11%==>@W88DSN11                                    %    Ö+
_M+ 12%==>@W88DSN12                                    %    Ö+     Does
_N+ 13%==>@W88DSN13                                    %    Ö+     this
_O+ 14%==>@W88DSN14                                    %    Ö+     make
_P+ 15%==>@W88DSN15                                    %    Ö+     cents
_Q+ 16%==>@W88DSN16                                    %    Ö+
_R+ 17%==>@W88DSN17                                    %    ÖÖÖÖÖÖÖÖÖÖÖÖ
)INIT
 IF (&OPTION2 = APP,KK)
   &UP = PASSTHRU
   &DOWN = PASSTHRU
 .HELP = EDIT2HLP
 .CURSOR = ZCMD
 &A = ' '
 &B = '-'
 &C = '-'
 &D = '-'
 &E = '-'
 &F = '-'
 &G = '-'
 &H = '-'
 &I = '-'
 &J = '-'
 &K = '-'
 &L = '-'
 &M = '-'
 &N = '-'
 &O = '-'
 &P = '-'
 &Q = '-'
 &R = '-'
 IF (&ZTRAIL ^= &Z)
    &ZCMD = TRUNC (&ZTRAIL, '.')
    &MEMBER = .TRAIL
    &ZTRAIL = &Z
    VPUT ZTRAIL SHARED
   .RESP = 'ENTER'
   .MSG = &Z
 IF (&V00 ^= &Z)
   &OTHERDSN = '&OTHERDSN,&V00'
   &OTHVOL = &Z
   &V00 = &Z
 IF (&V01 ^= &Z)
   &W88DSN01 = '&W88DSN01,&V01'
   &V01 = &Z
   &OTHVOL = &Z
 IF (&V02 ^= &Z)
   &W88DSN02 = '&W88DSN02,&V02'
   &V02 = &Z
   &OTHVOL = &Z
 IF (&V03 ^= &Z)
   &W88DSN03 = '&W88DSN03,&V03'
   &V03 = &Z
   &OTHVOL = &Z
 IF (&V04 ^= &Z)
   &W88DSN04 = '&W88DSN04,&V04'
   &V04 = &Z
   &OTHVOL = &Z
 IF (&V05 ^= &Z)
   &W88DSN05 = '&W88DSN05,&V05'
   &V05 = &Z
   &OTHVOL = &Z
 IF (&V06 ^= &Z)
   &W88DSN06 = '&W88DSN06,&V06'
   &V06 = &Z
   &OTHVOL = &Z
 IF (&V07 ^= &Z)
   &W88DSN07 = '&W88DSN07,&V07'
   &V07 = &Z
   &OTHVOL = &Z
 IF (&V08 ^= &Z)
   &W88DSN08 = '&W88DSN08,&V08'
   &V08 = &Z
   &OTHVOL = &Z
 IF (&V09 ^= &Z)
   &W88DSN09 = '&W88DSN09,&V09'
   &V09 = &Z
   &OTHVOL = &Z
 IF (&V10 ^= &Z)
   &W88DSN10 = '&W88DSN10,&V10'
   &V10 = &Z
   &OTHVOL = &Z
 IF (&V11 ^= &Z)
   &W88DSN11 = '&W88DSN11,&V11'
   &V11 = &Z
   &OTHVOL = &Z
 IF (&V12 ^= &Z)
   &W88DSN12 = '&W88DSN12,&V12'
   &V12 = &Z
   &OTHVOL = &Z
 IF (&V13 ^= &Z)
   &W88DSN13 = '&W88DSN13,&V13'
   &V13 = &Z
   &OTHVOL = &Z
 IF (&V14 ^= &Z)
   &W88DSN14 = '&W88DSN14,&V14'
   &V14 = &Z
   &OTHVOL = &Z
 IF (&V15 ^= &Z)
   &W88DSN15 = '&W88DSN15,&V15'
   &V15 = &Z
   &OTHVOL = &Z
 IF (&V16 ^= &Z)
   &W88DSN16 = '&W88DSN16,&V16'
   &V16 = &Z
   &OTHVOL = &Z
 IF (&V17 ^= &Z)
   &W88DSN17 = '&W88DSN17,&V17'
   &V17 = &Z
   &OTHVOL = &Z
 IF (&X00 ^= &Z)
   &OTHVOL = &X00
   &X00 = &Z
 IF (&ODSN ^= &Z)
   &OTHERDSN = &ODSN
   &ODSN = &Z
)REINIT
 IF (&OPTION2 = APP,KK)
   &UP = PASSTHRU
   &DOWN = PASSTHRU
)PROC
 IF (&OPTION2 = APP,KK)
   &UP = &Z
   &DOWN = &Z
   IF (&ZCMD = UP,DOWN)
      &KCMD = &ZCMD
      VPUT (KCMD) SHARED
      .RESP = 'END'
 &ZCMD = TRUNC(&ZCMD,'.')
 VER (&ZCMD,RANGE,1,17)
 IF (&MEMBER = &Z)
   &MEMBER = .TRAIL
 VER (&OTHVOL,PICT,'CCCCCC')
 VER (&A,LIST,'S','E','B','F','X','-')
 VER (&B,LIST,'S','E','B','F','X','-')
 VER (&C,LIST,'S','E','B','F','X','-')
 VER (&D,LIST,'S','E','B','F','X','-')
 VER (&E,LIST,'S','E','B','F','X','-')
 VER (&F,LIST,'S','E','B','F','X','-')
 VER (&G,LIST,'S','E','B','F','X','-')
 VER (&H,LIST,'S','E','B','F','X','-')
 VER (&I,LIST,'S','E','B','F','X','-')
 VER (&J,LIST,'S','E','B','F','X','-')
 VER (&K,LIST,'S','E','B','F','X','-')
 VER (&L,LIST,'S','E','B','F','X','-')
 VER (&M,LIST,'S','E','B','F','X','-')
 VER (&N,LIST,'S','E','B','F','X','-')
 VER (&O,LIST,'S','E','B','F','X','-')
 VER (&P,LIST,'S','E','B','F','X','-')
 VER (&Q,LIST,'S','E','B','F','X','-')
 VER (&R,LIST,'S','E','B','F','X','-')
 &A00 = &A
 &A01 = &B
 &A02 = &C
 &A03 = &D
 &A04 = &E
 &A05 = &F
 &A06 = &G
 &A07 = &H
 &A08 = &I
 &A09 = &J
 &A10 = &K
 &A11 = &L
 &A12 = &M
 &A13 = &N
 &A14 = &O
 &A15 = &P
 &A16 = &Q
 &A17 = &R
 &A00 = TRANS (&A00 S,E *,*)
 &A01 = TRANS (&A01 S,E *,*)
 &A02 = TRANS (&A02 S,E *,*)
 &A03 = TRANS (&A03 S,E *,*)
 &A04 = TRANS (&A04 S,E *,*)
 &A05 = TRANS (&A05 S,E *,*)
 &A06 = TRANS (&A06 S,E *,*)
 &A07 = TRANS (&A07 S,E *,*)
 &A08 = TRANS (&A08 S,E *,*)
 &A09 = TRANS (&A09 S,E *,*)
 &A10 = TRANS (&A10 S,E *,*)
 &A11 = TRANS (&A11 S,E *,*)
 &A12 = TRANS (&A12 S,E *,*)
 &A13 = TRANS (&A13 S,E *,*)
 &A14 = TRANS (&A14 S,E *,*)
 &A15 = TRANS (&A15 S,E *,*)
 &A16 = TRANS (&A16 S,E *,*)
 &A17 = TRANS (&A17 S,E *,*)
 &ODSN = &OTHERDSN
 IF (&ZCMD = 1)   &A01 = E
 IF (&ZCMD = 2)   &A02 = E
 IF (&ZCMD = 3)   &A03 = E
 IF (&ZCMD = 4)   &A04 = E
 IF (&ZCMD = 5)   &A05 = E
 IF (&ZCMD = 6)   &A06 = E
 IF (&ZCMD = 7)   &A07 = E
 IF (&ZCMD = 8)   &A08 = E
 IF (&ZCMD = 9)   &A09 = E
 IF (&ZCMD = 10)  &A10 = E
 IF (&ZCMD = 11)  &A11 = E
 IF (&ZCMD = 12)  &A12 = E
 IF (&ZCMD = 13)  &A13 = E
 IF (&ZCMD = 14)  &A14 = E
 IF (&ZCMD = 15)  &A15 = E
 IF (&ZCMD = 16)  &A16 = E
 IF (&ZCMD = 17)  &A17 = E
 &ZCMD = &Z
 &X00 = &OTHVOL
 IF (&OTHERDSN ^= &Z)
   &OTHERDSN = TRUNC(&OTHERDSN,',')
   &OTHVOL = .TRAIL
   &V00 = &OTHVOL
 IF (.RESP = 'ENTER')
   &W88DSN01 = TRUNC(&W88DSN01,',')
   &V01 = .TRAIL
  IF (&OTHERDSN = &Z)
   &OTHVOL = &V01
 IF (&A01 ^= '-',' ')
   &OTHERDSN = &Z
   &OTHVOL = &V01
 IF (&A02 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN02 = TRUNC(&W88DSN02,',')
   &OTHVOL = .TRAIL
   &V02 = &OTHVOL
 IF (&A03 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN03 = TRUNC(&W88DSN03,',')
   &OTHVOL = .TRAIL
   &V03 = &OTHVOL
 IF (&A04 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN04 = TRUNC(&W88DSN04,',')
   &OTHVOL = .TRAIL
   &V04 = &OTHVOL
 IF (&A05 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN05 = TRUNC(&W88DSN05,',')
   &OTHVOL = .TRAIL
   &V05 = &OTHVOL
 IF (&A06 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN06 = TRUNC(&W88DSN06,',')
   &OTHVOL = .TRAIL
   &V06 = &OTHVOL
 IF (&A07 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN07 = TRUNC(&W88DSN07,',')
   &OTHVOL = .TRAIL
   &V07 = &OTHVOL
 IF (&A08 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN08 = TRUNC(&W88DSN08,',')
   &OTHVOL = .TRAIL
   &V08 = &OTHVOL
 IF (&A09 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN09 = TRUNC(&W88DSN09,',')
   &OTHVOL = .TRAIL
   &V09 = &OTHVOL
 IF (&A10 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN10 = TRUNC(&W88DSN10,',')
   &OTHVOL = .TRAIL
   &V10 = &OTHVOL
 IF (&A11 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN11 = TRUNC(&W88DSN11,',')
   &OTHVOL = .TRAIL
   &V11 = &OTHVOL
 IF (&A12 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN12 = TRUNC(&W88DSN12,',')
   &OTHVOL = .TRAIL
   &V12 = &OTHVOL
 IF (&A13 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN13 = TRUNC(&W88DSN13,',')
   &OTHVOL = .TRAIL
   &V13 = &OTHVOL
 IF (&A14 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN14 = TRUNC(&W88DSN14,',')
   &OTHVOL = .TRAIL
   &V14 = &OTHVOL
 IF (&A15 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN15 = TRUNC(&W88DSN15,',')
   &OTHVOL = .TRAIL
   &V15 = &OTHVOL
 IF (&A16 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN16 = TRUNC(&W88DSN16,',')
   &OTHVOL = .TRAIL
   &V16 = &OTHVOL
 IF (&A17 ^= '-',' ')
   &OTHERDSN = &Z
   &W88DSN17 = TRUNC(&W88DSN17,',')
   &OTHVOL = .TRAIL
   &V17 = &OTHVOL
 IF (&X00 ^= &Z)
   &OTHVOL = &X00
 IF (&PASSDS = 'YES')
    &DSN = &OTHERDSN
    &VOL = &OTHVOL
   VPUT (DSN VOL) PROFILE
)END
./ ADD NAME=PASTEHLP 0104-86254-86304-1327-00022-00022-00000-GS00150
%TUTORIAL --------------  PASTE EDIT MACRO INFORMATION  ---------------
%COMMAND ===>_ZCMD                                                    +

+
  ISPF/PDF EDIT MACRO TO WRITE LINES FROM THE USER PROFILE POOL
  INTO THE CURRENT FILE.  THIS MACRO IS USED IN CONJUNCTION WITH
  THE%CUT+MACRO.
+
  TO RUN:
    ENTER%PASTE+ON THE COMMAND LINE AND USE LINE COMMAND%A+(AFTER)
    OR%B+(BEFORE) TO SELECT LOCATION TO%PASTE+THE%CUT+LINES.
+
    A PARAMETER OF%K+OR%KEEP+MAY BE SPECIFIED TO PREVENT THE CUT
    LINES FROM BEING DELETED FROM THE USER PROFILE POOL.
    OTHERWISE, THE CUT LINES WILL BE DELETED AFTER THEY ARE PASTED.
+
    IF LINES ARE CUT FROM A DATA SET WITH A LARGER LRECL THAN THE
    DATA SET WHERE THE LINES ARE TO BE PASTED, THE LINES WILL BE
    PASTED BUT WILL BE%TRUNCATED+BEYOND THE LRECL OF THE RECEIVING
    DATA SET.
+
)END
./ ADD NAME=SAN05    0102-81078-83251-1730-00027-00027-00000-KK00150
%-----------------------    FULLSCREEN UTILITIES    --------------------
%SELECT OPTION ===>_OPT     +
%
%        1+- FULLSCREEN GENERATOR
%        2+- FULLSCREEN ANALYZER
%
%
%
%
%
%
%
)INIT
   .HELP = TSAN05
)PROC
   &SEL = TRANS( TRUNC (&OPT,'.')
                1,'PGM(ISRFOR) PARM(FULLUT1)'
                2,'PGM(ISRFOR) PARM(FULLUT2)'
                3,'PGM(ISRFOR) PARM(FULLUT3)'
                4,'PGM(ISRFOR) PARM(FULLUT4)'
                5,'PGM(ISRFOR) PARM(FULLUT5)'
                6,'PGM(ISRFOR) PARM(FULLUT6)'
                7,'PGM(ISRFOR) PARM(FULLUT7)'
                8,'PGM(ISRFOR) PARM(FULLUT8)'
                *,'?'
                )
)END
./ ADD NAME=SPFBATU  0112-83063-83272-1726-00034-00030-00000-KK00150
)ATTR
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
@ TYPE(TEXT)
# TYPE(OUTPUT) INTENS(HIGH)
)BODY
%-----------------   SYSTEM PROGRAMMER UTILITIES FOR MODULE INFO  ------
%SELECT OPTION ===>_OPT     +
%  #EMSG
% B+- AMBLIST UTILITY XREF LISTING
% Z+- AMASPZAP UTILITY (TERMINAL INPUT)
% I+- IDRLIST XREF LISTING
% D+- ZAP DUMP (ENTER LMOD,CSECT)
% U+- UCLA INTERACTIVE ZAP UTILITY
%
%SPF LIBRARY:
%   PROJECT@===>_PRJ0    %
%   LIBRARY@===>_LIB0    @
%   TYPE   @===>_TYP0    %
%   MEMBER @===>_MEMBER  %          CSECT @===>_CSECT   %(FOR D)
%
%OTHER PARTITIONED OR SEQUENTIAL DATASET:
%   DATASET NAME @===>_DSN
%   VOLUME SERIAL@===>_VOL   %  (IF NOT CATALOGED)
)INIT
)PROC
 VER (&OPT,NONBLANK)
 VER (&OPT,LIST,Z,I,B,D,U)
 VER (&DSN,DSNAME)
 VER (&PRJ0,DSNAME)
 VER (&LIB0,DSNAME)
 VER (&TYP0,DSNAME)
 VER (&MEMBER,NAME)
 VER (&CSECT,NAME)
)END
./ ADD NAME=SPFCATH1 0102-85197-86065-1602-00028-00028-00000-KK00150
%TUTORIAL ------------- TECHNICAL SERVICES CATALOG UTILITY ----(CONTINUE
%NEXT SELECTION ===>_ZCMD                               %(OR PRESS PF1 F
+
+      THIS IS A SPECIAL CATALOG MAINTENENCE FACILITY FOR WDPSC. SELECT
+  THE FUNCTION DESIRED BY PLACING THE OPTION NEXT TO THE CATALOG YOU
+  WISH TO USE AND ENTERING THE INFORMATION NEEDED. MORE THAN ONE CATALO
+  MAY BE SPECIFIED. A 'Y' IN THE LISTCAT PARM FOR OPTIONAL CATALOGS WIL
+  CAUSE A PROMPT FOR A CATALOG PASSWORD. ("Y,PASSWORD" IS ALSO ACCEPTAB
+
%      C+= CATALOG A DATASET - ENTER DATASET NAME AND VOLUME (UNLESS AVA
+          VIA NORMAL CATALOG SEARCH). ENTER DEVICE TYPE IF VOLUME NOT M
%      U+= UNCATALOG A DATASET - ENTER THE DATASET NAME.
%      R+= RECATALOG A DATASET (UNCATALOG THEN CATALOG) -
+          ENTER DATASET NAME AND VOLUME.
%      D+= DELETE A DATASET - ENTER DATASET NAME.
%     LL+= LIST CATALOG ENTRIES BY LEVEL - ENTER INDEX LEVEL DESIRED.
%     RN+= RENAME A DATASET - ENTER DATASET NAME AND NEW DATASET NAME.
%      L+= LIST CATALOG ENTRY - ENTER DATASET DESIRED.
%      A+= DEFINE AN ALIAS - ENTER REAL DATASET NAME AND ALIAS NAME.
%      G+= DEFINE A GENERATION DATA GROUP - ENTER GDG BASE NAME AND
+          NUMBER OF GENERATIONS (IN VOL FIELD). DEFAULTS ARE SCRATCH
+          AND NOEMPTY HOWEVER OPTIONS FIELD CAN OVERRIDE.
%      F+= OBTAIN VOLUME INFO FROM THIS CATALOG.
%     MF+= OBTAIN VOLUME INFO FROM THIS CATALOG, THEN UNCATALOG IT.
)PROC
   &ZCONT = SPFCATH2
   &ZUP = TSANA
)END
./ ADD NAME=SPFCATH2 0104-85197-86065-1603-00028-00027-00000-KK00150
%TUTORIAL ------------- TECHNICAL SERVICES CATALOG UTILITY ----(CONTINUE
%NEXT SELECTION ===>_ZCMD                               %(OR PRESS PF1 F
+
+      THE CATALOG UTILITY CAN COPY OR MOVE MULTIPLE DATASETS FROM ONE
+  CATALOG TO ANOTHER. THE FOLLOWING ARE THE OPTIONS WHICH MUST BE USED
+  TO DO THIS. NOTE THAT YOU MUST SPECIFY CL AND ONE OTHER OPTION TO
+  SPECIFY THE FROM CATALOG. WHILE OTHER OPTIONS MAY BE SPECIFIED, DO NO
+  SPECIFY INVALID COMBINATIONS OR RESULTS ARE UNPREDICTABLE (IE MF WITH
+
%     CL+ = CATALOG A LIST OF DATASETS. THE LIST MUST BE CREATED BY THE
+           USE OF THE FL,FLL,ML OR MLL OPTIONS ALONG WITH THE CL OPTION
%     FL+ = CREATE A LIST OF DATASETS WITH VOLUME INFORMATION FROM THIS
+           CATALOG FOR USE BY THE CL OPTION. USE THIS OPTION IF YOUR
+           DATASET NAME CONTAINS AN * LEVEL.
%     ML+ = CREATE A LIST OF DATASETS WITH VOLUME INFORMATION FROM THIS
+           CATALOG FOR USE BY THE CL OPTION. USE THIS OPTION IF YOUR
+           DATASET NAME CONTAINS AN * LEVEL. ENTRIES WILL BE UNCATALOGE
%     FLL+= CREATE A LIST OF DATASETS WITH VOLUME INFORMATION FROM THIS
+           CATALOG FOR USE BY THE CL OPTION. USE THIS OPTION IF YOUR
            DATASET NAME IS A HIGH LEVEL QUALIFIER.
%     MLL+= CREATE A LIST OF DATASETS WITH VOLUME INFORMATION FROM THIS
+           CATALOG FOR USE BY THE CL OPTION. USE THIS OPTION IF YOUR
+           DATASET NAME IS A HIGH LEVEL QUALIFIER. ENTRIES WILL BE
+           UNCATALOGED.
)PROC
   &ZCONT = SPFCATH3
   &ZUP = TSANA
)END
./ ADD NAME=SPFCATH3 0103-85273-86065-1558-00027-00021-00000-KK00150
%TUTORIAL ------------- TECHNICAL SERVICES CATALOG UTILITY ------------
%NEXT SELECTION ===>_ZCMD                               %(OR PRESS PF1 F
+
   The CATALOG utility VIEW field may contain a "Y" if you wish to view
   the command and response regardless of success. If left blank, only i
   the case of an error will the IDCAMS response be displayed. You may a
   enter an "E" if you wish to edit the IDCAMS output or generated comma
   list for transfer operations. An "L" may be entered to trace the dial
   The "PARMS" field may be used to specify special IDCAMS options (eg.
+
%  More catalog utility options:
%     M  += Modify or ALTER the catalog entry for a dataset. For example
+           use FOR(7) in the PARM field to set EXPIRATION DATE to 7 day
+           after CREATION DATE.
%     ULL+= Uncatalog all datasets having a given high-level qualifier.
+           This option can also be used if you need to delete datasets
            with a common qualifier: Set the view flag to "E" and the
+           uncatalog command list will be presented for editing before
+           execution. Use the CHANGE ALL command to remove the NSCR
+           parm and press the END key to execute the commands.
%     K  += Invoke the FLIST utility to create a selectable list of
+           datasets with the given qualifier from the catalog selected.
            The list can be used to perform maintenence functions such
+           as BROWSE, EDIT, DELETE, UNCATALOG, COMPRESS, etc.
)PROC
   &ZUP = TSANA
)END
./ ADD NAME=SPFCATNV 0103-84299-85274-1053-00079-00078-00000-KK00150
)ATTR
_ TYPE(INPUT) INTENS(LOW) CAPS(ON)
^ TYPE(INPUT) INTENS(&PATTR) CAPS(ON)
@ TYPE(OUTPUT) INTENS(LOW) CAPS(ON)
$ TYPE(TEXT) INTENS(LOW)
% TYPE(TEXT) INTENS(HIGH)
)BODY
%---------------------   WDPSC NONVSAM CATALOG UTILITY   ---------------
$COMMAND ===>_ZCMD                                       $VIEW?>_LF
$%&EMSG
%   DSNAME %===>_DSN                                                $
$   VOLSER  ===>_VOL     $        DEVT  ===>_DEVT    $ (OPTIONAL)
$
$C = CATALOG DATASET, U = UNCATALOG DATASET, L = LISTCAT ENTRY, LL = LIS
$        (PRESS HELP KEY FOR MORE INFORMATION ON AVAILABLE OPTIONS.)
$   PLACE OPTION DESIRED (C,D,L,U,LL,A,R,RN,G) BY CATALOG(S) YOU WISH:
$
$ OPTION FOR CATALOG:                          LISTCAT PARMS:
$ ===>_CO1  @CN1                   @CD1           $===>^CP1
$ ===>_CO2  @CN2                   @CD2           $===>^CP2
$ ===>_CO3  @CN3                   @CD3           $===>^CP3
$ ===>_CO4  @CN4                   @CD4           $===>^CP4
$ ===>_CO5  @CN5                   @CD5           $===>^CP5
$ ===>_CO6  @CN6                   @CD6           $===>^CP6
$ ===>_CO7  _CN7                   @CD7           $===>^CP7
$ ===>_CO8  _CN8                   @CD8           $===>^CP8
$
$ IF DEFINE ALIAS OR RENAME, PUT THE ALIAS OR NEW NAME HERE:
$          %===>_ALIAS                                              $
)INIT
 &CO1 = TRANS (&CO1 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO2 = TRANS (&CO2 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO3 = TRANS (&CO3 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO4 = TRANS (&CO4 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO5 = TRANS (&CO5 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO6 = TRANS (&CO6 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO7 = TRANS (&CO7 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO8 = TRANS (&CO8 8,FL 9,FLL 10,ML 12,MLL 14,CL 15,ULL 18,K 20,M *,*)
 &CO1 = TRANS (&CO1 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO2 = TRANS (&CO2 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO3 = TRANS (&CO3 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO4 = TRANS (&CO4 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO5 = TRANS (&CO5 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO6 = TRANS (&CO6 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO7 = TRANS (&CO7 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 &CO8 = TRANS (&CO8 2,L 3,LL 4,U 5,A 6,D 7,C 11,R 13,RN 17,G 19,F 23,MF
 .HELP = SPFCATH1
 IF (&PATTR = '')
    &PATTR = 'LOW'
)PROC
 VER (&DSN,NONBLANK)
 VER (&CO1,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 &COT = '&CO1&CO2&CO3&CO4&CO5&CO6&CO7&CO8'
 VER (&COT,NONBLANK,MSG=SPFNV001)
 VER (&CO2,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 VER (&CO3,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 VER (&CO4,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 VER (&CO5,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 VER (&CO6,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 VER (&CO7,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 VER (&CO8,LIST,L,LL,U,A,D,C,R,RN,G,F,MF,CL,FL,FLL,ML,MLL,ULL,K,M)
 &CO1 = TRANS (&CO1 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO2 = TRANS (&CO2 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO3 = TRANS (&CO3 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO4 = TRANS (&CO4 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO5 = TRANS (&CO5 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO6 = TRANS (&CO6 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO7 = TRANS (&CO7 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO8 = TRANS (&CO8 FL,8 FLL,9 ML,10 MLL,12 CL,14 ULL,15 K,18 M,20 *,*)
 &CO1 = TRANS (&CO1 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO2 = TRANS (&CO2 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO3 = TRANS (&CO3 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO4 = TRANS (&CO4 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO5 = TRANS (&CO5 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO6 = TRANS (&CO6 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO7 = TRANS (&CO7 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 &CO8 = TRANS (&CO8 L,2 LL,3 U,4 A,5 D,6 C,7 R,11 RN,13 G,17 F,19 MF,23
 VPUT (DSN VOL) PROFILE
)END
./ ADD NAME=SPFEOH   0100-86141-86141-1304-00027-00027-00000-KK00150
%TUTORIAL -------------     WDPSC LOCAL PARAMETERS    -----------------
%NEXT SELECTION ===>_ZCMD                               %(OR PRESS PF1 F
%
+     This panel%(W.0)+can be used to request special ISPF processing or
+ modifications developed locally. For example, special EDIT dialogs can
+ be requested to replace the standard option 2 of ISPF. You can even
+ create your own EDIT dialog by creating a CLIST named EDITxxxx and
+ specifying xxxx on this panel for your EDIT version. Option 2 on the
+ primary panel then calls your EDIT dialog. Some locally used EDITs are
+
+ NEW  - A list of 17 datasets is maintained for your selection.
+ APP  - A set of 17 applications each with 17 datasets is maintained.
+ CTS  - A multi-screen list of datasets with many options (EDIT WORKBEN
+
+     If YES is entered for the "PASS DSNAME" option, ISPF will attempt
+ to remember the last dataset you entered in an "other" data set field.
+ This is effective on many though not all ISPF panels and can save much
+ retyping of dataset names.
+
+     If YES is entered for the "SAVE TSO" option, ISPF will remember
+ the last TSO command entered from option 6.
+
+     If YES is entered for the "PRE AND POST" option, ISPF will call
+ dialogs named PREDIAL and POSTDIAL at start of an ISPF screen.
)PROC
   &ZUP = TWSD
)END
./ ADD NAME=SPFEOPT  0158-88272-89244-1051-00067-00107-00000-LL02155
)ATTR
 # AREA(DYNAMIC)
)BODY
%ISPF+Environmental Options+
%TSO command   ==>_ZCMD                                                +
%
+EDIT systems  ==>_OPTION2 +CTS=edit workbench, STD=IBM standard edit,
+                          +NEW=better edit, APP=better edit with mult p
+Updt%PROFILE+ ==>_A+      +Enter%Y+and press%ENTER+
+Pass DSNAME?  ==>_PASSDS  +YES=pass DSNAME field if possible.
+Save cmds?    ==>_SAVETSO +YES=save last TSO command in option 6.
+PRE/POST?     ==>_PREPO   +YES=do PREDIAL and POSTDIAL processing.
%SUPERKEY+    +==>_SUPER   +Enter%YES+and press%ENTER+to invoke SUPERKEY
+                           environmental options panel
%HOTKEYS +    +==>_HOT     +Enter%YES+and press%ENTER+to invoke HOTKEYS
%                          +Enter%NO +and press%ENTER+to de-activate HOT
+
+
+
+
+
+
+
+
+
+Press%ENTER+to save changes   +Press%END+to cancel
)INIT
.CURSOR = ZCMD
.HELP = SPFEOH
&SUPER = &Z
IF (&PREPO = &Z)
    &PREPO = 'NO'
IF (&PASSDS = &Z)
    &PASSDS = 'NO'
IF (&SAVETSO = &Z)
    &SAVETSO = 'NO'

)REINIT
&SUPER = &Z
REFRESH *

)PROC
&ZSEL = TRANS( TRUNC (&ZCMD,'.')
            ' ','CMD(%SPFEOPT &PREPO)'
              *,'?'
              )
VPUT (OPTION2 PREPO PASSDS SAVETSO) PROFILE
IF (&SUPER = YES)
   IF (.MSG = ' ')
      IF (.RESP = ENTER)
         &PANLEXIT = 'SELECT CMD(%SUPERKEY)'
IF (&HOT = YES)
   IF (.MSG = ' ')
      IF (.RESP = ENTER)
         &PANLEXIT = 'SELECT CMD(%HOTKEYS)'
IF (&HOT = NO)
   IF (.MSG = ' ')
      IF (.RESP = ENTER)
         &PANLEXIT = 'SELECT CMD(%HOTKEYS OFF)'
IF (&A = Y)
   IF (.MSG = ' ')
      IF (.RESP = ENTER)
         &PANLEXIT = 'SELECT CMD(%PROF)'
         &A = &Z
&GPML = 'modification of standard environment complete'
.MSG = GPM001A
)END
./ ADD NAME=SPFTSO   0103-82250-83314-1819-00013-00016-00000-KK00150
)ATTR
_ TYPE(INPUT) INTENS(LOW) CAPS(OFF)
)BODY
%------------------------  EDIT TSO COMMAND OUTPUT  --------------------
%ENTER TSO COMMAND (NO CLISTS):
%
%===>_ZCMD


%
)INIT
)PROC
)END
./ ADD NAME=SPFYFND2 0103-84335-84335-1346-00018-00016-00000-JS02150
)ATTR
# TYPE(OUTPUT) INTENS(LOW)
)BODY
%EDIT/BROWSE --- &FNDSDSN-----------------------------------------------
%COMMAND ===>_ZCMD                                            %SCROLL ==
+
% S+OR%E+FOR EDIT      %B+FOR BROWSE+
+
+                VER.MOD  CREATED   LAST MODIFIED  SIZE  INIT   MOD   ID
+
)MODEL
 _Z+#SPFSTATS
)INIT
  .ZVARS = '(TYPCODE)'
  &ZSCR = 'PAGE'
  &ZSCKEY = 'ZSCML'
  .HELP = ISR2D000
)END
./ ADD NAME=TBLHDLR1 0118-85021-86345-1347-00041-00017-00000-JS02150
)ATTR
# TYPE(OUTPUT) INTENS(HIGH)
\ area(dynamic)
Ö type(dataout) intens(LOW)
" type(dataout) intens(HIGH)
)BODY
+
%&PANTITLE
+
+ COMMAND INPUT ===>_ZCMD                                 + SCROLL AMT =
\thda1
\thda2
+
%&PANCOLH1
%&PANCOLH2
)MODEL
 _Z+#ENTRYDS1
)INIT
  .ZVARS = '(ACTCODE)'
  &FNSC = CSR
  .HELP = DOCS0HLP
  IF (&THDA1 = &Z)
      &THDA1 = 'Ö                                 "PF3Öto EXIT '
  IF (&THDA2 = &Z)
      &THDA2 = 'Ö               To left of item, put"SÖfor Select,"PÖfor
  IF (&DOCUPDT ^= NO)
    &RCHANGE = PASSTHRU
    &RFIND = PASSTHRU
)PROC
IF (&ZCMD = RCHANGE)
 &PANLEXIT = 'SELECT CMD(%DOCADD 1)'
 &DOCRSHOW = YES
 VPUT DOCRSHOW SHARED
 .RESP = END
IF (&ZCMD = RFIND)
 &DOC = '''&DOCSLVL1..&DOCSLVL2..INDEXES(&DOCSMEM)'''
 &PANLXSAV = 'EDIT DATASET(&DOC) MACRO(DOCEDUP)'
 &DOCRSHOW = YES
 VPUT DOCRSHOW SHARED
 .RESP = END
)END
./ ADD NAME=TBLHDLR2 0108-84264-86345-1347-00043-00019-00000-JS02150
)ATTR
# TYPE(OUTPUT) INTENS(LOW)
\ area(dynamic)
Ö type(dataout) intens(LOW)
" type(dataout) intens(HIGH)
)BODY
+
%&PANTITLE
+
+ COMMAND INPUT ===>_ZCMD                                 + SCROLL AMT =
\thda1
\thda2
+
%&PANCOLH1
%&PANCOLH2
)MODEL
 _Z+#ENTRYDS1
    #ENTRYDS2
 %   -------------------------------------------------------------------
)INIT
  .ZVARS = '(ACTCODE)'
  IF (&FNSC = &Z)  &FNSC = CSR
  .HELP = DOCS0HLP
  IF (&THDA1 = &Z)
      &THDA1 = 'Ö                                 "PF3Öto EXIT '
  IF (&THDA2 = &Z)
      &THDA2 = 'Ö               To left of item, put"SÖfor Select,"PÖfor
  IF (&DOCUPDT ^= NO)
    &RCHANGE = PASSTHRU
    &RFIND = PASSTHRU
)PROC
IF (&ZCMD = RCHANGE)
 &PANLEXIT = 'SELECT CMD(%DOCADD 2)'
 &DOCRSHOW = YES
 VPUT DOCRSHOW SHARED
 .RESP = END
IF (&ZCMD = RFIND)
 &DOC = '''&DOCSLVL1..&DOCSLVL2..INDEXES(&DOCSMEM)'''
 &PANLXSAV = 'EDIT DATASET(&DOC) MACRO(DOCEDUP)'
 &DOCRSHOW = YES
 VPUT DOCRSHOW SHARED
 .RESP = END
)END
./ ADD NAME=TBLHDLR3 0108-84264-86345-1347-00044-00020-00000-JS02150
)ATTR
# TYPE(OUTPUT) INTENS(LOW)
\ area(dynamic)
Ö type(dataout) intens(LOW)
" type(dataout) intens(HIGH)
)BODY
+
%&PANTITLE
+
+ COMMAND INPUT ===>_ZCMD                                 + SCROLL AMT =
\thda1
\thda2
+
%&PANCOLH1
%&PANCOLH2
)MODEL
 _Z+#ENTRYDS1
    #ENTRYDS2
    #ENTRYDS3
 %   -------------------------------------------------------------------
)INIT
  .ZVARS = '(ACTCODE)'
  IF (&FNSC = &Z)  &FNSC = CSR
  .HELP = DOCS0HLP
  IF (&THDA1 = &Z)
      &THDA1 = 'Ö                                 "PF3Öto EXIT '
  IF (&THDA2 = &Z)
      &THDA2 = 'Ö               To left of item, put"SÖfor Select,"PÖfor
  IF (&DOCUPDT ^= NO)
    &RCHANGE = PASSTHRU
    &RFIND = PASSTHRU
)PROC
IF (&ZCMD = RCHANGE)
 &PANLEXIT = 'SELECT CMD(%DOCADD 3)'
 &DOCRSHOW = YES
 VPUT DOCRSHOW SHARED
 .RESP = END
IF (&ZCMD = RFIND)
 &DOC = '''&DOCSLVL1..&DOCSLVL2..INDEXES(&DOCSMEM)'''
 &PANLXSAV = 'EDIT DATASET(&DOC) MACRO(DOCEDUP)'
 &DOCRSHOW = YES
 VPUT DOCRSHOW SHARED
 .RESP = END
)END
./ ADD NAME=WHOISI   0111-81237-82334-1904-00025-00022-00000-JS02150
)BODY
%...................................  W H O I S I  .....................
+
+MY ACCOUNT IS ==============>% &ACCT
+MY SYSTEM NUMBER IS ========>% &SYS
+MY PROGRAMMER NAME FIELD ===>% &PROG
+MY TERMINAL ID IS ==========>% &TERMID
+MY DEFAULT PRINT DESTINATION>% &DEFDEST
+
+MY PRIMARY USER CATALOG IS =>% &CAT
+
+MY STEPLIB DATASETS ARE ====>% &SLIBDSN1
+                        ====>% &SLIBDSN2
+                        ====>% &SLIBDSN3
+
+MY USERID IS ===============>% &ZUSER
+MY PROFILE PREFIX IS =======>% &ZPREFIX
+NAME OF MY LOGON PROCEDURE =>% &ZLOGON
+
+MY TERMINAL TYPE IS ========>% &ZTERM
+NUMBER OF PF KEYS IS =======>% &ZKEYS
+
+
+                                %THAT'S WHO I AM !!!
)END
