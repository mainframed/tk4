//DNC00150 JOB  (2100,56-D),'DPARS 0682 T',CLASS=H,MSGCLASS=T
//A EXEC ASMHCL,LIBRARY='WDPSC.TSAEXAM',OPTION2='AC=1',
//   LNDSP=SHR,OPTION1=TERM
*
* THIS PROGRAM READS A CATALOG AND CREATES AN IDCAMS CONTROL CARD TO
* DELETE THE ENTRY. OTHER PROGRAMS PROCESS THE CONTROL CARD TO
* DETERMINE VALIDITY.
*
* OUTPUT FORMAT
* COLUMN 2    -  DEL
* COLUMN 6    -  'DATA SET NAME FROM NONVSAM CATALOG ENTRY'
* COLUMN      -  NSCR
* COLUMN 70   -  'FILESEQUENCE NUMBER'
* COLUMN 73   -  'LAST TWO BYTES OF THE DEVICETYPE VALUE'
* COLUMN 75   -  'VOLUME SERIAL'
*
* A CARD IS PRODUCED FOR EACH NON-VSAM ENTRY IN THE CATALOG
         SPACE 1
VSAMSCAN CSECT
         REGISTER
         USING *,R15                     USE R15 AS BASE-REGISTER
         B     START                     BRANCH AROUND DATE
         DC    C'VSAMSCAN  82/07/30'     MODULE ID AND DATE
         CNOP  0,4                       START ON FW BOUNDARY
START    STM   R14,R12,12(R13)           STORE ALL REGISTERS
         ST    R13,SAVE+4                STORE R13 TO SAVE AREA
         LA    R12,SAVE                  LOAD ADDR OF SAVE-AREA TO R12
         ST    R12,8(,R13)               STORE R12
         CNOP  0,4                       SET NEXT INSTR TO FW-BOUNDARY
         BAL   R13,SAVE+18*4             BRANCH AROUND SAVE AREA
         USING SAVE,R13,R12              DEFINE BASE REGISTERS
         DROP  R15                       STOP USING R15 AS BASE-REG
SAVE     DC    18F'0'                    SAVE AREA
         LA    R12,2048(,R13)            LOAD BASE-REGISTER
         LA    R12,2048(,R12)            LOAD BASE-REGISTER
         L     R1,0(,R1)                 LOAD ADDR OF EXEC PARM-FIELD
         LH    14,0(,R1)                 LOAD LENGTH OF PARM-FLD
         LTR   R14,R14                   PARM IN EXEC CARD ?
         BZ    OPEN                      NO PARMS PASSED, OPEN
         LA    R3,2(,R1)                 POINT R3 TO PARMLIST
MOVEPW   C     R14,=F'8'                 PW NOT OVER 8 BYTES?
         BNH   *+8                       IF SO, MOVE ONLY 8
         LA    R14,8                     8 MAX
         BCTR  R14,0                     DECREMENT FOR MVC
         EX    R14,MOVE                  MOVE PW
         B     OPEN                      DO OPEN
MOVE     MVC   PW+1(0),2(R1)             OBJECT FOR EXEC
OPEN     EQU   *
         OPEN  (PRINT,(OUTPUT),AMSOUT,(OUTPUT))
         LTR   R15,R15
         BNZ   ABEND                     ABEND U0999
         OPEN  (ACBCAT,INPUT)
         LTR   R15,R15
         BZ    A000
         CLI   ACBCAT+49,X'74'           NEED VERIFY?
         BNE   ABEND
A000     VERIFY RPL=RPLDIR
         LTR   R15,R15                  DID THE VERIFY WORK?
         BNZ   ABEND
         MVI   RPLDIR+40,X'42'          PUT DIR,GEN BACK
         MVI   RPLDIR+41,X'81'          PUT KEY,NSP BACK
         EJECT
*        GET INFORMATION FROM THE CATALOG'S SELF DEFINING RECORDS
         SPACE 1
         MVC   KEY(4),=X'00000002'       SET KEY TO CAT-CLUSTER ENTRY
         GET   RPL=RPLDIR                GET CATALOG RECORD
         LTR   R15,R15
         BZ    A011
         LA    R1,998
         B     ABEND+4                   ABEND U0998
A011     MVC   Z0(36),CATREC+49          SAVE CAT NAME
         TRT   CATREC+49(44),TAB3        TEST LENGTH OF CATALOG-NAME
         BZ    A015
         LA    R2,CATREC+49               LOAD START ADDR OS DSN
         SR    R1,R2                       GET LENGTH OF DSN + 2
         AH    R1,=H'5'                   ADD 2 TO CURRENT LENGTH
A015     EQU   *
         MVC   KEY(4),=X'00000003'       SET KEY TO CCR-ENTRY
         SPACE 1
*        GET CATALOG CONTROL-RECORD
         GET   RPL=RPLDIR                GET CCR-RECORD
         LTR   R15,R15
         BZ    A021
         LA    R1,997
         B     ABEND+4                   ABEND U0997
A021     CLI   CATREC+44,C'L'            L-RECORD ?
         BNE   Z010                      NO, END THE PROGRAM
A025     EQU   *
         MVC   CCR(256),CATREC           SAVE CCR RECORD
         MVC   CCR+256(256),CATREC+256   SAVE CCR RECORD
         SPACE 1
         CLC   CCR+48(3),CCR+45          COMPARE HU AND NF CI'S
         BNL   A031                      BRANCH TO USE HU
         MVC   KEY+1(3),CCR+48           SET KEY TO FIRST UNFORM REC
         L     R6,KEY                    LOAD KEY
         BCTR  R6,0                      REDUCE CI-NR BY 1
         B     A032
A031     MVC   KEY+1(3),CCR+45           USE HIGH USED KEY
         L     R6,KEY                    LOAD KEY TO R8
A032     ST    R6,KEY                    STORE KEY
         GET   RPL=RPLSEQ                GET LAST FORMATTED RECORD
         LTR   R15,R15
         BNZ   LERAD
         CLI   HKRREC,X'00'              LOW KEY RANGE RECORD ?
         BE    A035                      YES,GET THE NEXT RECORD
         MVC   CATREC(256),HKRREC        STORE RECORD
         MVC   CATREC+256(256),HKRREC+256 STORE RECORD
         MVC   SNAPID(4),=C'A030'        SET SNAP ID
         MVI   CCR,C'*'                  MARK BUFFER FOR OUTPUT
         MVI   CATREC,C'*'               MARK BUFFER FOR OUTPUT
         B     Z010                      NO,TRY TO FIND OUT WHAT IS WR
A035     EQU   *
         MODCB RPL=RPLSEQ,OPTCD=SEQ      MODIFY ACCESS MODE TO SEQ
         GET   RPL=RPLSEQ                GET NEXT SEQ RECORD
         LTR   R15,R15
         BNZ   LERAD
         CLI   HKRREC,X'40'              FIRST HKRREC ?
         BNL   A040                      YES,GO FORWARD
         MVC   SNAPID(4),=C'A035'        SET SNAP IDENTIFICATION
         B     Z010                      NO,TRY TO FIND OUT WHATS WRONG
A040     EQU   *
         MVC   KEY+1(3),CCR+48           SET KEY TO MAX NR OF LKR-CIS
         B     C020                      BRANCH FORW TO TEST FREE-CHAIN
         EJECT
*        READ HKR SEQUENTALLY TO GET ENTRIES CI-NUMBER
         SPACE 1
C010     EQU   *
         GET   RPL=RPLSEQ                GET NEXT HKR RECORD
         LTR   R15,R15
         BZ    C020
         LA    R1,993
         B     ABEND+4                   ABEND U0993
C020     EQU   *
         MVC   KEY+1(3),HKRREC+44        USE CI-NR OF HKR-REC AS S-ARG
         GET   RPL=RPLDIR                GET THIS LKR-RECORD
         LTR   R15,R15
         BZ    C021
         LA    R1,992
         B     ABEND+4                   ABEND U0992
C021     EQU   *
         CLI   CATREC+44,C'A'            NON-VSAM RECORD  ?
         BNE   C010                      GET NEXT CATALOG RECORD
         EJECT
*        READ NON-VSAM ENTRIES AND VERIFY THEIR POINTERS
         SPACE 1
G010     EQU   *
         CLC   HKRREC(44),CATREC+49      COMPARE DSN IN HKR AND LKR
         BNE   C010                      READ NEXT IN SEQUENCE
G020     EQU   *
         MVC   RX(256),CATREC            SAVE NON-VSAM RECORD
         MVC   RX+256(256),CATREC+256    SAVE NON-VSAM RECORD
         MVC   CINUM(4),CATREC           SAVE CI-NUMBER OF A-RECORD
         SR    R9,R9                       CLEAR R9
         IC    R9,RX+48                  GET DISP TO HORIZ PTR
         LA    R10,RX                    POINT TO CAT REC
         AR    R9,R10                    POINT TO HORIZ PTR
         LA    R10,5(R9)                 POINT TO # SOF PTRS
         SR    R9,R9                     CLEAR R9
         IC    R9,0(,R10)                 GET # SOF PTRS
         LA    R10,1(,R10)                POINT TO FIRST SOF PTR
         LR    R6,R9                     SAVE PTR
         MH    R6,=H'5'                  CALC DISP TO FIRST SOF
         AR    R6,R10                    POINT TO FIRST SOF
         B     G030
G025     EQU   *
         MVC   RX(256),CATREC            SAVE E-RECORD
         MVC   RX+256(256),CATREC+256    SAVE E-RECORD
         SR    R9,R9                       CLEAR R9
         IC    R9,RX+48                  GET DISP TO HORIZ PTR
         LA    R10,RX                    POINT TO CAT REC
         AR    R9,R10                    POINT TO HORIZ PTR
         LA    R10,5(,R9)                 POINT TO # SOF PTRS
         SR    R9,R9                     CLEAR R9
         IC    R9,0(,R10)                 GET # SOF PTRS
         LA    R10,1(,R10)                POINT TO FIRST SOF PTR
         LR    R6,R9                     SAVE PTR
         MH    R6,=H'5'                  CALC DISP TO FIRST SOF
         AR    R6,R10                    POINT TO FIRST SOF
         B     G030
G030     EQU   *
         TM    3(R10),X'40'               DELETED SOF-POINTER ?
         BO    G120                      YES,GET NEXT SOF-POINTER
         TM    3(R10),X'03'               VOLUME INFORMATION SOF ?
         BO    G040                      YES
         B     G120                      NO,GET NEXT SOF-POINTER
G040     EQU   *
         TM    3(R10),X'80'               SET OF FIELD IN EXT-RECORD ?
         BO    G120                      YES, SKIP THIS SET OF FIELDS
         SPACE 1
*        GET ASSOCIATED RECORD,DESCRIBED IN THIS NON-VSAM RECORD
G080     EQU   *
         TM    3(R10),X'03'               VOLUME-INFORMATION SOF ?
         BNO   C010                      GET NEXT SOF-POINTER IN A-REC
G085     SR    R4,R4
         ICM   R4,3,1(R10)               DISPLACEMENT TO SOF
         LA    R4,0(R4,R6)               ADDRESS OF VOLUME SOF
         MVC   AMSCARD+72(8),4(R4)       MOVE VOLUME AND DEVICETYPE
         MVC   AMSDSN(44),HKRREC         MOVE DATA SET NAME
         LH    R9,12(,R4)                FILESEQUENCE NUMBER
         CVD   R9,DOUBLWRK
         UNPK  DOUBLWRK(5),DOUBLWRK+5(3)
         MVC   AMSCARD+68(3),DOUBLWRK+2
         OI    AMSCARD+70,C'0'
         PUT   AMSOUT,AMSCARD
         B     C010
G120     EQU   *
         LA    R10,5(,R10)               LOAD ADDRESS OF NEXT SOF-PTR
         BCT   R9,G030                   IN THIS NONVSAM-RECORD
*        DETERMINE IF IN THIS RECORD IS A POINTER TO HORIZ EXT-RECORD
         SR    R9,R9                     CLEAR R9
         IC    R9,RX+48                  GET DISPL TO HORIZ PTR
         LA    R10,RX                    POINT TO RECORD
         AR    R9,R10                    POINT TO HORIZ PTR
         CLC   0(5,R9),=X'0000000000'    IS THERE A HORIZ PTR ?
         BE    C010                      NO
         MVC   KEY+1(3),0(R9)            SET KEY TO HORIZ EXT REC
G135     EQU   *
         GET   RPL=RPLDIR                GET THIS RECORD
         LTR   R15,R15
         BNZ   LERAD1                    BRANCH TO LERAD-ROUTINE
         CLI   CATREC+44,C'E'            EXTEMSION RECORD ?
         BE    G025                      YES
         MVC   SNAPID(4),=C'G135'        SET SNAP IDENTIFICATION
         B     C010                      GET NEXT KKR-RECORD
         SPACE 3
         EJECT
*        LOGICAL-ERROR IN GET-REQUEST,DISPLAY ALL AVAILABLE INFO
         SPACE 1
LERAD1   EQU   *
         LA    R1,496                    SET RETURN CODE
         B     ABEND+4                   TRY TO GET NEXT HKR-RECORD
         SPACE 3
LERAD    EQU   *
         LA    R1,867                    SET RETURN CODE
         B     ABEND+4
Z010     EQU   *
         CLOSE (ACBCAT)                  CLOSE CATALOG
         L     R15,RETURN                SET RETURN-CODE
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)          RESET REGISTERS
         BR    14
ABEND    EQU   *
         ABEND 999,DUMP
PATCH    DC    10F'0'                    ADD A PATCH AREA
         EJECT
*        D E F I N I T I O N S
         SPACE 1
PW       DS    0F                        PASSWORD,IF CATALOG PROTECTED
         DC    XL1'08'                   MAX LENGTH OF PASSWORD
         DC    CL8'        '
         DS    0F                        START ON WORD BOUNDARY
KEYNAME  DS    0D
         DC    CL4'KEY '                 MARK KEY FIELD
KEY      DS    0D                        KEY USED FOR DIRECT ACCESS
         DC    XL4'00000000'             KEY FIELD
XKEY     DC    XL4'00000000'             EXTERNAL KEY
CCR      DS    CL512                     SAVE AREA FOR CCR-RECORD
CCRE     DS    0C
HKRREC   DS    CL512                     BUFFER FOR HKR-RECORD
HKRRECE  DS    0C
RX       DS    CL512                     SAVE-AREA FOR CATALOG RECORD
RXE      DS    0C
CATREC   DS    CL512                     BUFFER FOR CATALOG RECORD
CATRECE  DS    0C                        END OF CATALOG RECORD
EXTREC   DS    CL512                     BUFFER FOR ASS-EXT RECORD
EXTRECE  DS    0C
R2BRANCH DC    F'0'                      REGISTER SAVE-AREA
R2SAVE   DC    F'0'                      REGISTER SAVE-AREA
R3SAVE   DC    F'0'                      REGISTER SAVE AREA
R4SAVE   DC    F'0'                      REGISTER SAVE AREA
R5SAVE   DC    F'0'                      REGISTER SAVE AREA
R6SAVE   DC    F'0'                      REGISTER SAVE-AREA
R7SAVE   DC    F'0'                      REGISTER SAVE-AREA
R9SAVE   DC    F'0'                      REGISTER SAVE-AREA
R10SAVE  DC    F'0'                      REGISTER SAVE-AREA
Z0       DC    CL44' '
         ORG
TAB3     DC    XL256'00'                 TABLE USED BY TRT
         ORG   TAB3+X'40'                SET TEST-BYTE POSITION
         DC    X'FF'                     BYTE TO BE TESTED
         ORG
         DC    CL1' '
         DS    0D
MASK     DC    X'402020202020212160'
SKIPCTR  DC    PL4'0'                    COUNTER USED TO SKIP PAGE
DUMPCTR  DC    PL4'0'                    COUNTER USED TO DUMP RECORDS
RETURN   DC    F'0'                      PGM RETURN-CODE
ADDR     DC    F'0'                      FIELD USED BY GETMAIN MACRO
CHECK    DC    CL1' '                    CHECK BYTE TO MARK READ RECS
SEQNR    DC    CL1' '                    SAVE-AREA FOR SEQ-NR
SID      DC    CL1' '                    SEQ-NR FOR PTR BACK TO CLUSTER
RCHECK   DC    CL1' '                    CHECK-BYTE FOR REGISTER RELOAD
FOUND    DC    CL1' '                    CHECK-BYTE IF BACKW-PTR FOUND
HKRBYTE  DC    CL1' '                    SAVE AREA FOR FIRST HKR-BYTE
CINUM    DC    CL4' '                    SAVE AREA FOR CI-NUMBER
BADKEY   DC    CL1' '                    CHECKBYTE FOR INVALID KEYS
GDGNAME  DC    CL44' '                   SAVE AREA FOR GDG BASE NAME
SNAPID   DC    CL4' '                    SNAP-IDENTIFICATION
LINE     DC    CL133' '                  LINE USED FOR PRINT-OUTPUT
AMSCARD  DC    C' DEL '
AMSDSN   DC    44C' '
         DC    C' NSCR'
         DC    26C' '
         SPACE 4
*        CONTROL-BLOCK AREA
         SPACE 1
ACBCAT   ACB   DDNAME=VSAMCAT,AM=VSAM,EXLST=EOD,                       *
               MACRF=(CNV,KEY,DIR,SEQ,IN),PASSWD=PW
EOD      EXLST EODAD=Z010
EOF      EXLST EODAD=Z010
DOUBLWRK DC    D'0'
RPL1     DC    CL8'RPLDIR  '             IDENTIFIER FOR RPL
RPLDIR   RPL   ACB=ACBCAT,AM=VSAM,AREA=CATREC,AREALEN=512,             *
               OPTCD=(CNV,DIR,GEN),ARG=KEY,KEYLEN=4
RPLDIRE  DS    0C
         DS    0D
RPL2     DC    CL8'RPLSEQ  '             IDENTIFIER FOR RPL
RPLSEQ   RPL   ACB=ACBCAT,AM=VSAM,AREA=HKRREC,AREALEN=512,             *
               OPTCD=(KEY,DIR,GEN,NSP,MVE),ARG=KEY,KEYLEN=4
RPLSEQE  DS    0C
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      *
               RECFM=FBM,LRECL=133,BLKSIZE=133
AMSOUT   DCB   DSORG=PS,MACRF=PM,DDNAME=AMSCARD,                       *
               RECFM=FB,LRECL=80
         LTORG
         END
//LKED.SYSIN DD *
    NAME VSAMSCAN(R)
