*          DATA SET 761KKFTTR  AT LEVEL 001 AS OF 10/13/80
         TITLE 'FINDTTR - SEARCHES PDS  FOR STRING (GAS MEMS INCL) '
* WRITTEN BY KERMIT KISER - WASHINGTON STATE DP SERVICE CENTER (WDPSC)
*
FINDTTR  ENTERR
         EJECT
         L     R11,0(,R1)               R11->PARM FIELD
         LH    R10,0(,R11)              R10=PARM LENGTH
         BCTR  R10,R0                   R10=R10-1 FOR EX
*
         L     R0,=A(BUFLEN)
         GETMAIN R,LV=(0)
         LR    R6,R1                    R6->I/O BUFF
         USING MYBUF,R6
*
         BAL   R14,OPEN                 THE FILES
         LTR   R15,R15                  OK?
         BNZ   ERREX                    NO
*
PILOOP   BAL   R14,PROCIT               CHECK A BLOCK
         LTR   R15,R15                  DONE?
         BZ    PILOOP                   NO
*
         BAL   R14,CLOSE                THE FILES
*
OKEX     SLR   R15,R15                  RC=0
*
ERREX    LEAVER
         EJECT
OPEN     EQU   *
         ST    R14,L1LS
*
         MVI   OPENL,X'80'
         MVC   PDS(96),PDSL
         OPEN  (PDS,INPUT),MF=(E,OPENL)
         LTR   R15,R15
         BNZ   OPENX
*
         MVC   PRINT(96),PRINTL
         OPEN  (PRINT,OUTPUT),MF=(E,OPENL)
*
OPENX    L     R14,L1LS
         BR    R14
         EJECT
PROCIT   EQU   *
         ST    R14,L1LS
*
READBLK  READ  DECB,SF,PDS,MYBUF,32760,MF=E GET BLK
*
         CHECK DECB                     GOT IT?
         TM    SF,X'80'                 SYNAD FLAG?
         BO    MBEODS                   MUST BE END OF DATASET
*
         L     R7,BC                    R7=BLKS READ COUNT
         LA    R7,1(,R7)                R7=R7+1
         ST    R7,BC                    SAVE
*
         NOTE  PDS                      GET TTR OF BLOCK
         ST    R1,TTR                   SAVE
*
         BAL   R14,SCANIT               STRING MATCH?
         LTR   R15,R15
         BNZ   PROCX
*
         TM    MF,X'80'                 SCAN MATCH?
         BNO   PROCX                    NO
         BAL   R14,NOTEIT               YES->TELL SOMEONE!
*
PROCX    L     R14,L1LS
         BR    R14
*
MBEODS   LA    R15,99                   RC=99
         B     PROCX
         EJECT
SCANIT   EQU   *
         ST    R14,L2LS
*
         NI    MF,X'7F'                 RESET MATCH FLAG
         LH    R9,DCBLRECL              R9 = BLK LEN
         BCTR  R9,R0                    -1 TO SKIP FIRST
*
*              CHECK START OF BLOCK FIRST:
         LA    R8,MYBUF                 R8->START OF BLOCK
         EX    R10,CLC                  BLOCK STARTS WITH STRING?
         BE    GOTONE                   YES ->TELL EM NOW!
*
*              THEN LOOP SCANNING REST:
SRCHLOOP LA    R8,MYBUF(R9)             R8->SRCH LOC
         EX    R10,CLC                  STRING THERE?
         BE    GOTONE                   YES!
         BCT   R9,SRCHLOOP              NO->KEEP LOOKING
*
SCANX    L     R14,L2LS
         BR    R14
*
GOTONE   OI    MF,X'80'                 SAY WE FOUND ONE!
         L     R7,MC                    R7=MATCH COUNT
         LA    R7,1(,R7)                +1
         ST    R7,MC
         B     SCANX
*
CLC      CLC   2(0,R11),0(R8)           EXECUTED STRING COMPARE
         EJECT
NOTEIT   EQU   *
         ST    R14,L2LS
*
         MVC   PUTLINE,=CL133' '        CLEAR PRINT LINE
*
         UNPK  TTRCHAR,TTR              GET TTR IN CHAR
         TR    TTRCHAR(6),FIXTAB        MAKE READABLE
*
         MVC   PUTLINE(20),=CL20' SCAN MATCH AT TTR='
         MVC   PUTLINE+20(6),TTRCHAR    INSERT TTR
*
         PUT   PRINT,PUTLINE            WRITE IT
*
         L     R14,L2LS
         BR    R14
         EJECT
CLOSE    EQU   *
         ST    R14,L1LS
*
         CLOSE (PDS),MF=(E,OPENL)       CLOSE PDS
*
         CLOSE (PRINT),MF=(E,OPENL)     CLOSE PRINT FILE
*
         L     R14,L1LS
         BR    R14
         EJECT
EODAD    EQU   *
         NOTE  PDS                      WHERE ARE WE?
         C     R1,LASTEOF               SAME AS LAST ONE?
         BE    MBEODS                   YES -> TERMINATE
         ST    R1,LASTEOF               SAVE EOF ADDR
         ST    R1,TTR                   SAVE
         MVI   TTR+3,X'01'              SAY READ NEXT
         POINT PDS,TTR                  POINT TO IT (PAST EOF)
*
         L     R7,EC                    GET EOF COUNT
         LA    R7,1(,R7)                +1
         ST    R7,EC                    SAVE
*
         B     READBLK
*
SYNAD    OI    SF,X'80'                 SAY DONE
         BR    R14                      GET OUT
         EJECT
STATWORK EQU   *
*
FIXTAB   EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
         DS    0F
PDSL     DCB   DSORG=PO,DDNAME=PDS,EODAD=EODAD,SYNAD=SYNAD,            X
               RECFM=U,MACRF=R
*
PRINTL   DCB   DSORG=PS,DDNAME=PRINT,MACRF=PM,                         X
               RECFM=FBA,BLKSIZE=133,LRECL=133
*
         LTORG
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F
L1LS     DS    F
L2LS     DS    F
TTR      DS    F                        TTR POINTER
LASTEOF  DS    F                        EOF POINTER
TTRCHAR  DS    XL7                      TTR REFORMAT AREA
*              FLAGS AND COUNTERS:
MC       DS    F
BC       DS    F
EC       DS    F
SF       DS    X
MF       DS    X
         EJECT
PUTLINE  DS    XL133
OPENL    DS    F
DECB     READ  XECB,SF,MF=L
PDS      DCB   DSORG=PO,DDNAME=PDS,EODAD=EODAD,SYNAD=SYNAD,            X
               RECFM=U,MACRF=R
DCBLRECL EQU   PDS+82
         EJECT
*
PRINT    DCB   DSORG=PS,DDNAME=PRINT,MACRF=PM,                         X
               RECFM=FBA,BLKSIZE=133,LRECL=133
WORKLEN  EQU   *-WORKAREA
         EJECT
MYBUF    DSECT
         DS    XL32760                  I/O BUFF
         DS    256X                     OVERRUN
BUFLEN   EQU   *-MYBUF
         END
