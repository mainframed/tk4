1                                                        JTOSCONV.1
                                                         03/16/83


  PROGRAM:       JTOSCONV
  AUTHOR:        Jeff Sprehn
  AGENCY:        WDPSC
  LANGUAGE:      COBOL
  LOCATION:      WDPSC.SHARED.LOAD
  FUNCTION:      Convert Julian dates of the form YYDDD to standard
                 (MMDDYY) after date validation.

  RUN MODE:      N/A ... this is a subroutine

  This is  a subroutine  which accepts  a Julian  date of  the form
  YYDDD and converts  it to a standard  date of the form  MMDDYY if
  and only if the input date is a  valid date.  A Julian date is of
  the form YYDDD where YY is the  year of the twentieth century and
  DDD is  a three digit  number representing the  displacement from
  the beginning of that year.

  This program  is also  an interface to  the CONVDATE  entry point
  JTOSDATE.  JTOSDATE will  abend if you supply it  with an invalid
  date  such as  81366 (there  are only  365 days  in 198l).   This
  subroutine (JTOSCONV) will completely edit your date first before
  calling JTOSDATE to obtain your standard date.  A switch is to be
  interrogated to determine the success of that edit.




1                                                        JTOSCONV.2
                                                         03/16/83


  HOW TO USE THIS PROGRAM:

  Place the following 01 level into your WORKING STORAGE SECTION:

       01   JTOSCONV-I-O-AREA.
            05   FILLER                   PIC X(8).
            05   OUT-STANDARD-DATE        PIC 9(6).
            05   IN-JULIAN-DATE           PIC X(5).
            05   UNSUCCESSFUL-EDIT        PIC X(3).

  Do the following in your PROCEDURE DIVISION:

       MOVE your date to be converted to IN-JULIAN-DATE of
            JTOSCONV-I-O-AREA.
       CALL 'JTOSCONV' USING JTOSCONV-I-O-AREA.
       IF UNSUCCESSFUL-EDIT = 'YES'
            do your error routine

       ELSE
            your date is now in standard date format and is contained
            in OUT-STANDARD-DATE.




