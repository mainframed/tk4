*
*   @OK - ADJUSTED TO INVOKE REGISTER EQUATE MACRO SUPPLIED IN
*          FILE270 .MACLIB                       10/26/98
*
*   V1M4- MODIFIED 4/1/86 TO CHECK FOR ZERO LENGTH OPERANDS
*          DUE TO A PROBLEM WITH SMPE AND OUR NEW SUBMIT FRONTEND
*
*              DOCUMENTATION FOR KMDPARS AND OPERSCAN SUBRTNS:
*
*
*
*               PARAMETER LIST PASSED TO KMDPARS:
*
*         KPPL     DS 10F :
*         CBUFPTR  DS    F              CMDBUF TO BE PARSED
*         OPLSTPTR DS    F              LIST OF OPERANDS TO FLAG
*         FLAGPTR  DS    F              WHERE TO FLAG THEM
*         UNKNEXIT DS    F              EXIT TO CALL IF UNKNOWN OPER
*         EXITPARM DS    F              PARAMETER TO PASS EXITS (ADDR)
*                                       (R1 POINTS HERE AT EXIT ENTRY)
*         BPPLPASS DS    F              BPPL PTR WHEN EXIT GETS CONTROL
*         WORKPASS DS    F              OPTIONAL WORKAREA (512 BYTES)
*         KEYLPASS DS    F              LIST OF KEYWORD OPERANDS
*         KEYWPASS DS    F              WORKAREA FOR KEYWORD PROCESSO
*         REEXPASS DS    F              ADDRESS OF REAL UNKNOWN EXIT
*
*
*               PARAMETER LIST PASSED TO OPERSCAN SUBROUTINE:
*
*         BPPL     DS    10F :
*         BUFFPTR  DS    F              BUFFER PTR (CBUF)
*         LENPTR   DS    F              LENGTH PTR (CBUF LEN)
*         STARTPTR DS    F              START SEARCH PTR
*         OPERPTR  DS    F              NEXT OPER LOC
*         OPLENPTR DS    F              NEXT OPER LEN PTR
*         SUBPTR   DS    F              SUBFIELD PTR
*         SUBLENPT DS    F              SUBFIELD LEN PTR
*         WORKPTR  DS    F              OPTIONAL WORKAREA (350 BYTES)
*         OPDESCP  DS    F              PTR TO OPERAND DESCRIPTOR
*                  DS    F              RESERVED (ZERO)
*
*         OPLEN    DS    H              POINTED TO BY OPLENPTR
*         SUBLEN   DS    H              POINTED TO BY SUBLENPT
*
         TITLE 'KMDPARS - GENERAL PURPOSE COMMAND BUFF PARSE SUBRTN'
KMDPARS  CSECT
         SAVE  (14,12),,KMDPARS-V1M4
         LR    R12,R15
         USING KMDPARS,R12
         LR    R11,R1                   R11 -> PARM LIST
         USING KPPL,R11
         SLR   R15,R15                  R15 = 0
         LR    R10,R13                  SAVE SAVE
         L     R13,WORKPASS             SEE IF A FREE ONE THERE
         LTR   R13,R13                  ANY?
         BNZ   FASTCALL                 YES -> SMART CALLER
         LA    R0,WORKLEN               NO -> GET SOME
         GETMAIN R,LV=(0)
         LR    R13,R1                   SAVE IT
         USING WORKAREA,R13
FASTCALL ST    R10,SAVEAREA+4           SAVE HIS SAVE PTR
         LA    R13,SAVEAREA             MAKE SURE MINE IS OK
         USING SAVEAREA,R13
         ST    R13,8(,R10)              GIVE HIM MY SAVE AREA
         EJECT
**********************************************************************
*       MAINLINE PROCESSING CONTROL ROUTINE:                         *
**********************************************************************
*
*              FIRST STEP IS EXTRACT OUR OPERANDS FROM COMMAND:
*
B4       BAL   R14,PB                   FIX BUFFER
*
SETRC    SLR   R15,R15                  R15=0
         CLI   OPFLAG,X'FF'             ANY OPS FOUND?
         BE    KMDEX                    YES -> EXIT
         LA    R15,8                    SAY NONE THERE
*
**********************************************************************
         EJECT
**********************************************************************
*       KMDPARS EXIT ROUTINE:                                        *
**********************************************************************
*
KMDEX    LR    R1,R13                   R1 -> WORKAREA
         LA    R0,WORKLEN               R0 = LENGTH OF AREA
         L     R13,4(,R13)              R13 -> OLD SAVE AREA
         C     R1,WORKPASS              IS WORKAREA MINE?
         BE    FASTEX                   NO -> DONT FREE
         LR    R11,R15                  SAVE RC
         FREEMAIN R,LV=(0),A=(1)        FREE
         LR    R15,R11                  GET RC BACK
FASTEX   RETURN (14,12),RC=(15)         EXIT
         REGEQU                                                     @OK
         EJECT
**********************************************************************
*        PB -  PROCESS BUFFER TO REMOVE AND FLAG OUR OPERANDS
**********************************************************************
PB       ST    R14,L2LS
*
*       FIRST BUILD BUFFER-PROCESSING PARAMETER LIST:
*
BPI      XC    BPPL(40),BPPL            CLEAR BUFFER PROC PARMLIST
         L     R10,CBUFPTR              R10 -> CBUF
         ST    R10,BUFFPTR              BUFFER PTR
         ST    R10,LENPTR               LENGTH PTR
         LH    R9,2(R10)                R9 = OPERAND OFFSET
         LA    R8,4(R9,R10)             R8 -> OPERAND START
         ST    R8,STARTPTR              SEARCH PTR
         LA    R7,OPLEN                 R7 -> OPLEN AREA
         ST    R7,OPLENPTR              LENGTH PTR RETURN AREA
         LA    R6,SUBLEN                R6 -> SUBLEN AREA
         ST    R6,SUBLENPT              LENGTH PTR RETURN AREA
         LA    R5,OPSCNWK               GET HIM A WORKAREA
         ST    R5,WORKPTR               PASS IT TO HIM
         XC    OPFLAG,OPFLAG            CLEAR OPERANDS PRESENT FLAG
*
*       THEN CHECK EACH OPERAND IN THE INPUT BUFFER:
*
DOPO     BAL   R14,PO                   PROCESS AN OPERAND
         LTR   R15,R15                  MORE OPERANDS?
         BZ    DOPO                     YES
*
*       SAY DONE AND EXIT:
*
BPT      SLR   R15,R15                  RC=0
         L     R14,L2LS
         BR    R14
         EJECT
**********************************************************************
*              PO - PROCESS AN OPERAND:
**********************************************************************
PO       ST    R14,L3LS
*
*       FIRST WE OBTAIN AN OPERAND FROM THE BUFFER:
*
         BAL   R14,OO                   OBTAIN AN OPERAND
         LTR   R15,R15                  ANY FOUND?
         BNZ   POX                NO -> NOTHING TO PROCESS
         OI    OPFLAG,X'FF'             SAY WE HAVE OPERANDS
*
*       GET READY TO CHECK THE OPERAND AGAINST OUR LIST:
*
         L     R10,OPERPTR              R10 -> OPERAND IN BUFFER
         LH    R9,OPLEN                 R9  = OPLENGTH IN BUFFER
         L     R8,OPLSTPTR              R8 -> OPLIST (-4)
         LTR   R6,R9                    R6 = R9  = OPLEN         V1M4
         BZ    UNKN                     OPERAND MAY BE IN PARENS V1M4
         BCTR  R6,R0                    R6 = R6-1 FOR EX
         EX    R6,FOLD                  MAKE OPERAND UPPER CASE
*
*       NOW SCAN THE LIST TO SEE IF ANY MATCH BUFFER OPERAND:
*
FOOP     LA    R8,4(R8)                 R8 -> NEXT OP DESC PTR
         L     R7,0(R8)                 R7 -> OPERAND DESCRIPTOR
         LTR   R7,R7                    R7 = 0? ANY MORE TO CHECK?
         BZ    UNKN                     NO
*
         CH    R9,8(,R7)                OPLEN > DESCRIPTOR OPER LEN?
         BH    FOOP                     YES -> TOO LONG TO BE THIS ONE
*
         SLR   R1,R1                    R1=0                      WDPSC
         ICM   R1,1,3(R7)               R1=MINIMUM OPER LEN       WDPSC
         BZ    ANYLEN                   SKIP IF 0                 WDPSC
         CR    R9,R1                    OPLEN>MIN?                WDPSC
         BL    FOOP                     NO->TOO SHORT TO BE THIS  WDPSC
*
ANYLEN   EX    R6,OPCLC                 DOES OPERAND MATCH THIS ONE?
         BNE   FOOP                     NO -> NOT THIS ONE
         EJECT
**********************************************************************
*    WE HAVE AN OPERAND MATCH - SET FLAG AND DO OTHER OPTIONS:
**********************************************************************
FO       SLR   R5,R5
         IC    R5,1(,R7)
         A     R5,FLAGPTR
         OC    0(1,R5),0(R7)            SET FLAG FOR OPERAND FOUND
*
         SLR   R10,R10                  R10=0                     WDPSC
         ICM   R10,7,SUBPTR+1           R10->SUBFIELD?            WDPSC
         BZ    XCHK                     NONE PRESENT              WDPSC
         LH    R2,SUBLEN                R2=SUBFLD LEN             WDPSC
         BCTR  R2,R0                    R2=R2-1 FOR EX            WDPSC
         EX    R2,FOLD                  MAKE UPPER CASE           WDPSC
*
XCHK     TM    2(R7),X'80'              EXIT PRESENT?
         BNO   DO                       NO
         LA    R1,BPPL
         ST    R1,BPPLPASS              GIVE HIM THE BPPL
         ST    R7,OPDESCP               GIVE HIM THE OPER DESCRIPTOR
         LA    R1,EXITPARM              YES -> PASS PARMS
         L     R15,4(,R7)               R15->EXIT
         TM    2(R7),X'10'              SUBEX BEING CALLED?
         BNO   GCX                      NO
         L     R15,0(,R15)
GCX      BALR  R14,R15                  CALL IT
*
DO       TM    2(R7),X'40'              DELETE OPERAND DESIRED?
         BNO   POX                      NO -> EXIT PO
         L     R10,OPERPTR              R10->OPERAND IN BUFFER    WDPSC
         EX    R6,DOMVC                 COVER OPERAND WITH BLANKS
         ICM   R10,7,SUBPTR+1           R10->SUBFIELD             WDPSC
         BZ    POX                      NONE THERE                WDPSC
         EX    R2,DOMVC                 ERASE SUBFIELD            WDPSC
         B     POX
         SPACE 3
**********************************************************************
*    WE HAVE NO OPERAND MATCH - INVOKE EXIT IF PRESENT:
**********************************************************************
UNKN     L     R15,UNKNEXIT             UNKNOWN OPERAND EXIT ADDRESS
         LTR   R15,R15                  EXIT PRESENT?
         BZ    POX                      NO
         LA    R1,BPPL
         ST    R1,BPPLPASS              GIVE HIM THE BPPL
         LA    R1,EXITPARM              YES -> PASS PARMS
         BALR  R14,R15                  CALL IT
         SPACE 3
*
POX      L     R14,L3LS                 EXIT PO
         BR    R14
         SPACE
*
*       OPERATIONS EXECUTED AGAINST THE OPERAND IN THE BUFFER:
*
FOLD     OC    0(0,R10),=CL256' '       FOLD TO UPPER CASE
OPCLC    CLC   0(0,R10),10(R7)          BUFFOP = DESCOP?
DOMVC    MVC   0(0,R10),=CL256' '       MOVE BLANKS ON TOP OF OPERAND
         EJECT
**********************************************************************
*       THE PARSE SUBROUTINE IS IN A SEPARATE MODULE
*   IN ORDER TO MAKE IT GENERAL PURPOSE IN CASE WE NEED OTHER
*   FRONTENDS TO IBM COMMANDS.
**********************************************************************
OO       ST    R14,L4LS
*
         LA    R1,BPPL                  R1 -> BUFFER PROC PARMLIST
         CALL  OPERSCAN                 CALL PARSE ROUTINE
*
         L     R14,L4LS
         BR    R14
         EJECT
STATWORK EQU   *
*
         LTORG
         DC    40X'00'                  ZAP AREA
         TITLE 'WORKAREA FOR KMDPARS'
WORKAREA DSECT
*
SAVEAREA DS    18F
L1LS     DS    F
L2LS     DS    F
L3LS     DS    F
L4LS     DS    F
*
OPFLAG   DS    X
*
         TITLE 'PARAMETER LIST PASSED TO OPERSCAN SUBROUTINE'
*
         BPPL
*
OPSCNWK  DS    XL350                    WORK AREA TO PASS TO OPERSCAN
*
WORKLEN  EQU   *-WORKAREA
         TITLE 'PARAMETER LIST PASSED TO KMDPARS'
*
         KPPL  DSECT
*
         END
