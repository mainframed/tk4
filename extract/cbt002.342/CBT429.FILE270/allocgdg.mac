         TITLE 'ALLOCGDG -- DYNAMIC ALLOC OF GDG GIVEN REL GENERATION'
         PRINT ON,NOGEN
         SPACE 3
*        THIS PROGRAM IS A SUBROUTINE WHICH DYNAMICALLY ALLOCATES
*        A GENERATION DATA GROUP MEMBER EXPRESSED WITH THE RELATIVE
*        GENERATION NUMBER TO THE DDNAME AND DSN PROVIDED.
*
*        TO CALL THIS PROGRAM FROM A CLIST, DO THE FOLLOWING:
*
*            CALL 'CTS150.CSLOAD(ALLOCGDG)' 'DDNAME,DSN×'
*
*        (E.G. CALL 'CTS150.CSLOAD(ALLOCGDG)' 'MASTIN,CTS150.GDG(+0)×'
*
*        AFTER THE CALL, &LASTCC WILL CONTAIN EITHER 0 OR 4
*
*            IF &LASTCC = 0, THEN THE FILE WAS SUCCESSFULLY ALLOCATED
*            IF &LASTCC = 4, THEN THE FILE WAS NOT SUCCESSFULLY
*                ALLOCATED FOR ONE OF THE FOLLOWING REASONS:
*
*                     A.  INVALID DDNAME PASSED TO THIS PROGRAM
*                     B.  MISSING COMMA BETWEEN DDNAME AND DSN
*                     C.  DATASET DSN NOT CATALOGUED
*                     D.  DATASET DSN NOT ON ON-LINE DISK
*                     E.  MISSING × AFTER THE DSN IN PARM
*
*
*        ASSIGNMENT OF REGISTERS
*        -----------------------
*
*        REGISTER      USAGE
*        --------      -------------------------------------------
*
*           1          ADDRESS OF PARAMETER LIST
*           2          NOT USED
*           3          NOT USED
*           4          WORK REGISTER
*           5          RETURN REG USED IN ALL BR AND LINK INSTRUCTIONS
*           6          INDEX REGISTER
*           7          INDEX REGISTER
*           8          LENGTH OF DDNAME
*           9          INDEX REGISTER
*           10         NOT USED
*           11         SAVE REGISTER 1
*           12         BASE REGISTER
*           13         ADDRESS OF SAVE AREA
*           14         RETURN ADDRESS
*           15         ENTRY POINT ADDRESS
         EJECT
         SPACE 3
*
**********************************************
*                                            *
*        I N I T I A L I Z A T I O N         *
*                                            *
**********************************************
*
ALLOCGDG CSECT
         SAVE  (14,12)
         BALR  12,0
         USING *,12
         ST    13,SAVEAREA+4
         LA    13,SAVEAREA
         B     STARTIT
         SPACE
SAVEAREA DC    18F'0'
         SPACE 3
********************************************************************
*        EQUATE RESISTERS 0 THRU 15 TO MORE MEANINGFUL NAMES       *
********************************************************************
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        SAVE REGISTER 1 CONTENTS IN REGISTER 11 AND PLACE         *
*        PARAMETER AREA INTO PASSREC                               *
*                                                                  *
********************************************************************
         SPACE 3
STARTIT  DS    0D
         LR    R11,R1                 SAVE REG 1 CONTENTS IN REG 11
         L     R9,0(R11)
         MVC   IOAREA,0(R9)
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        M A I N   L I N E   L O G I C                             *
*                                                                  *
********************************************************************
         SPACE 3
         MVC   VALIDSW(3),YESS        MOVE 'YES' TO VALIDSW
         SPACE 2
         BAL   R5,PRELIM              PERFORM PRELIM ROUTINE
         SPACE 2
         CLC   VALIDSW,YESS           IS VALIDSW = 'YES'
         BE    LOKAYT                 IF YES, BRANCH TO LOKAYT
         B     SHUTDOWN               BRANCH TO SHUTDOWN
LOKAYT   LOCATE CAMLIST1
         SPACE 2
         C     R15,=F'0'              COMPARE REG 15 TO BE = 0
         BE    DOCALC                 IF REG 15=0, BRANCH TO DOCALC
         MVC   VALIDSW(3),NOPE        MOVE 'NO ' TO VALIDSW
         B     SHUTDOWN               BRANCH TO SHUTDOWN
DOCALC   BAL   R5,CALCDLEN            PERFORM CALC LENGTH OF DSN
         BAL   R5,DYNAMALC            PERFORM DYNAMIC ALLOCATION
         B     SHUTDOWN               BRANCH TO SHUTDOWN
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR GENERATING THE FOLLOWING  *
*        DATA FIELDS:                                              *
*                                                                  *
*           INDDNAME ===> DDNAME PASSED TO THIS PROGRAM VIA REG 1  *
*           INDSN    ===> DSN PASSED TO THIS PROGRAM VIA REG 1     *
*           FREEUT1A ===> BINARY LENGTH OF DDNAME                  *
*           FREEUT1B ===> DDNAME PASSED TO THIS PROGRAM            *
*           DD1UNT1A ===> BINARY LENGTH OF DDNAME                  *
*           DD1UNT1B ===> DDNAME PASSED TO THIS PROGRAM            *
*                                                                  *
********************************************************************
*
PRELIM   ST    R5,SAVEIT1            SAVE REG 5 IN SAVEIT1
         MVC   INDDNAME,=CL8' '
         MVC   INDSN,=CL44' '
         LA    R6,OKCHARS1
TEST1    CLI   0(R6),C'#'
         BNE   TEST2
         MVC   VALIDSW,NOPE
         B     EXITPRLM
TEST2    CLC   PASSREC(1),0(R6)
         BE    MOVE1ST
         A     R6,=F'1'
         B     TEST1
MOVE1ST  MVC   INDDNAME(1),PASSREC
         LA    R8,1
         LA    R7,PASSREC+1
         LA    R9,INDDNAME+1
LOOP1    LA    R6,OKCHARS2
         C     R8,=F'8'
         BNH   TEST3
         MVC   VALIDSW,NOPE
         B     EXITPRLM
TEST3    CLI   0(R7),C','
         BE    LOADFLDS
TEST4    CLI   0(R6),C'#'
         BNE   TEST5
         MVC   VALIDSW,NOPE
         B     EXITPRLM
TEST5    CLC   0(1,R7),0(R6)
         BNE   BUMPIT
         MVC   0(1,R9),0(R7)
         A     R7,=F'1'
         A     R9,=F'1'
         A     R8,=F'1'
         B     LOOP1
BUMPIT   A     R6,=F'1'
         B     TEST4
LOADFLDS MVC   FREEUT1B,INDDNAME
         MVC   DD1UNT1B,INDDNAME
         LA    R4,INDSN+52
         A     R7,=F'1'
         LA    R9,INDSN
TEST6    CR    R9,R4
         BNH   TEST7
         MVC   VALIDSW,NOPE
         B     EXITPRLM
TEST7    CLI   0(R7),C'×'
         BE    CALCLENS
         MVC   0(1,R9),0(R7)
         A     R7,=F'1'
         A     R9,=F'1'
         B     TEST6
CALCLENS ST    R8,DDNAMLEN
         MVC   FREEUT1A(2),DDNAMLEN+2
         MVC   DD1UNT1A(2),DDNAMLEN+2
EXITPRLM L     R5,SAVEIT1            RESTORE REGISTER 5
         BR    R5                    RETURN
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*               D Y N A M I C   A L L O C A T I O N                *
*               -----------------------------------                *
*                                                                  *
*        THIS ROUTINE FIRST ATTEMPTS TO FREE THE DDNAME GIVEN.     *
*        IF THE DDNAME WAS SUCCESSFULLY FREED, THEN THIS ROUTINE   *
*        BRANCHES TO THE DYNAMIC ALLOCATION MACRO DYNALLOC.        *
*        HOWEVER, IF THE DDNAME  WAS NOT SUCCESSFULLY FREED,       *
*        THEN THIS ROUTINE CHECKS FOR ERROR REASON CODE 0438       *
*        (DDNAME NOT FOUND).  IF THE ERROR REASON CODE IS 0438,    *
*        THEN THIS ROUTINE BRANCHES TO THE DYNAMIC ALLOCATION      *
*        MACRO DYNALLOC, ELSE IT MOVES 'NO ' TO VALIDSW.           *
*                                                                  *
********************************************************************
*
DYNAMALC ST    R5,SAVEIT2
         LA    R1,FREEPARM
         DYNALLOC                      FREE DDNAME
         LTR   R15,R15                 TEST REGISTER 15 FOR ZERO
         BZ    DODYNAM                 IF ZERO, BRANCH TO DODYNAM
         CLC   ERCODE,HEX0438          COMPARE ERROR REASON CODE
*                                         AGAINST HEXADECIMAL 0438
         BE    DODYNAM                 IF EQUAL, BRANCH TO DODYNAM
         MVC   VALIDSW,NOPE            MOVE 'NO ' TO VALIDSW
         BR    R5                      RETURN
DODYNAM  LA    R1,DD1PARM
         DYNALLOC                      ALLOC F(DDNAME) DA(DSN) SHR
         L     R5,SAVEIT2
         LTR   R15,R15                 TEST REGISTER 15 FOR ZERO
         BZR   R5                      IF ZERO, RETURN
         MVC   VALIDSW,NOPE            MOVE 'NO ' TO VALIDSW
         BR    R5                      RETURN
         EJECT
*
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR GENERATING THE            *
*        FOLLOWING TWO DATA FIELDS:                                *
*                                                                  *
*             DSNLEN ===> LENGTH OF DSN WITH ABSOLUTE GEN NUMBER   *
*             DSNAME ===> DSN WITH ABSOLUTE GENERATION NUMBER      *
*                                                                  *
********************************************************************
*
CALCDLEN ST    R5,SAVEIT3            SAVE REG 5 IN SAVEIT3
         MVC   DSNAME,INDSN
         LA    R7,0
         LA    R9,INDSN
COMPR    CLI   0(R9),C' '
         BE    CONVRT
         A     R7,=F'1'
         A     R9,=F'1'
         B     COMPR
CONVRT   ST    R7,DSNAMLEN
         MVC   DSNLEN(2),DSNAMLEN+2
         L     R5,SAVEIT3            RESTORE REGISTER 5
         BR    R5                    RETURN
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        E N D   O F   J O B   P R O C E S S I N G                 *
*                                                                  *
********************************************************************
         SPACE 3
SHUTDOWN CLC   VALIDSW,YESS           IS VALIDSW = 'YES'
         BE    AOK                    IF YES, BRANCH TO AOK
         LA    R15,4
         B     GOBACK
AOK      LA    R15,0
GOBACK   L     R13,4(R13)
         RETURN (14,12),RC=(15)
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        DATA STRUCTURE FOR FREEING OF DDNAME                      *
*                                                                  *
********************************************************************
*
         SPACE 3
         DS    0F
FREEPARM DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(FREERB)   ADDRESS OF REQUEST BLOCK
FREERB   DC    X'14'         S99RBLN (LENGTH OF REQUEST BLOCK)
         DC    X'02'         S99VERB (REQUEST FOR UNALLOCATION)
         DC    X'2000'       S99FLAG1 (DO NOT MOUNT VOLUMES)
ERCODE   DC    X'0000'       S99ERROR (ERROR REASON CODE)
         DC    X'0000'       S99INFO (INFORMATION REASON CODE)
         DC    A(FREETUPL)   S99TXTPP (ADDR OF POINTER TO TEXT UNIT)
         DC    X'00000000'   RESERVED
         DC    X'00000000'   S99FLAG2
FREETUPL DC    A(FREEUNT1)   ADDRESS OF TEXT UNIT #1
         DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(FREEUNT2) ADDRESS OF TEXT UNIT#2
FREEUNT1 DC    X'0001'
         DC    X'0001'
FREEUT1A DS    BL2
FREEUT1B DS    CL8
FREEUNT2 DC    X'0007'
         DC    X'0000'
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        DATA STRUCTURE FOR DYNAMIC ALLOCATION                     *
*                                                                  *
********************************************************************
*
         SPACE 3
         DS    0F
DD1PARM  DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(DD1RB)    ADDRESS OF REQUEST BLOCK
DD1RB    DC    X'14'         S99RBLN (LENGTH OF REQUEST BLOCK)
         DC    X'01'         S99VERB (REQUEST FOR DSNAME ALLOC)
         DC    X'2000'       S99FLAG1 (DO NOT MOUNT VOLUMES)
         DC    X'0000'       S99ERROR (ERROR REASON CODE)
         DC    X'0000'       S99INFO (INFORMATION REASON CODE)
         DC    A(DD1TUPL)    S99TXTPP (ADDR OF POINTERS TO TEXT UNITS
         DC    X'00000000'   RESERVED
         DC    X'00000000'   S99FLAG2
DD1TUPL  DC    A(DD1UNIT1)   ADDRESS OF TEXT UNIT #1
         DC    A(DD1UNIT2)   ADDRESS OF TEXT UNIT #2
         DC    A(DD1UNIT3)   ADDRESS OF TEXT UNIT #3
         DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(DD1UNIT4) ADDRESS OF TEXT UNIT #4
DD1UNIT1 DC    X'0001'
         DC    X'0001'
DD1UNT1A DS    BL2
DD1UNT1B DS    CL8
DD1UNIT2 DC    X'0002'
         DC    X'0001'
DSNLEN   DS    BL2
DSNAME   DS    CL44
DD1UNIT3 DC    X'0004',X'0001',X'0001',X'08'
DD1UNIT4 DC    X'0052'
         DC    X'0000'
         EJECT
         SPACE 3
********************************************************************
*        DATA AREAS                                                *
********************************************************************
         SPACE 3
         DS    0F
SAVEIT1  DS    F
SAVEIT2  DS    F
SAVEIT3  DS    F
DDNAMLEN DS    F
DSNAMLEN DS    F
IOAREA   DS    0CL55
         DS    CL2
PASSREC  DS    CL53
INDDNAME DS    CL8
INDSN    DS    CL44
CAMLIST1 CAMLST NAME,INDSN,,LOCAREA
LOCAREA  DS    0D
         DS    265C
         DS    0D
VALIDSW  DS    CL3
HEX0438  DC    X'0438'
YESS     DC    C'YES'
NOPE     DC    C'NO '
OKCHARS1 DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ#'
OKCHARS2 DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789#'
         END
