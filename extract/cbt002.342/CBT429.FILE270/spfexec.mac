PANLEXIT TITLE 'ISPF DISPLAY PANEL EXIT ROUTINE  '
**********************************************************************
*  THIS PROGRAM CREATES AN EXIT FROM PANELS DISPLAYED BY THE         *
*   ISPF DISPLAY SERVICE.                                            *
**********************************************************************
*
*  NOTE: THIS PROGRAM IS ACTUALLY TWO PROGRAMS SEPARATED WITH AN 'END'
*        CARD. USE ASM H WITH 'BATCH' PARM OR SEPARATE THE PROGRAMS.
*
*  MODIFIED 11/02/87 TO LOAD ISRPCP RATHER THAN CALL.
*   (V1M8)  AVOID SHIPPING ISRPCP TO CBT TAPE.
*
*  MODIFIED 6/25/87 TO FIX A PROBLEM WITH FOCUS CALLS VIA FOCUS
*   (V1M7)  VARIABLE. COMMAND BUFF END WAS NOT DETECTED PROPERLY.
*
*  MODIFIED 5/11/87 TO CALL ISRPCP OR NEWISPF IF AVAILABLE. THIS
*   (V1M6)  WILL RESTORE THE OLD RB STRUCTURE BY ELIMINATING THE
*           LINK TO ISPF AND MAKE ACF2 EXEC ACCESS MUCH HAPPIER!
*
*  MODIFIED 2/05/87 TO INVOKE ISPF IF NOT ACTIVE. THIS WILL ALLOW
*   (V1M5)  CURRENT FOCUS, SAS, MEGACALC, ETC APPLICATIONS TO CALL
*           ISPF FACILITIES AND TSO CLISTS WITHOUT REGARD FOR
*           WHETHER ISPF IS ALREADY ACTIVE. ALSO ACCEPT IMPLICIT
*           REQUESTS FOR ISPEXEC SELECT/DISPLAY. ELIMINATE LINKS TO
*           ISPEXEC SINCE HE IS LINKED IN ALREADY.            - V1M5
*           THIS FEATURE REQUIRES AN ALIAS OF PXP FOR ISR@PRIM AND
*           ALLOWS SPFEXEC TO SUBSTITUTE FOR THE 'SPF' CMD (NOT ISPF!)
*
*  MODIFIED 7/16/86 TO SET REQUESTED VARIABLE FROM SHARED POOL AND
*           TO ALLOW ALTERNATE EXIT VARIABLE NAMES (UP TO TEN).
*           USE &PANLXVN= '(VAR1,VAR2...)' BEFORE CALLING PANLEXIT
*           TO DEFINE THE ALTERNATE NAMES WHICH THE
*           EXIT IS TO PROCESS. CONTROL SAVE WILL BE
*           DONE FOR ALTERNATE EXITS                          - V1M4
*
*  MODIFIED 6/12/86 TO SAVE ENVIVRONMENT IF ALTERNATE VARIABLE IS
*           REQUESTED. NOT SURE WHEN NEEDED! &PANLXSAV WILL
*           CAUSE SAVE/RESTORE OF DISPLAY ENVIRONMENT         - V1M3
*
*  MODIFIED 6/09/86 TO SAVE ENVIVRONMENT IF DISPLAY SERVICE REQUESTED
*           WARNING: IF CALLING A DIALOG WHICH WILL DISPLAY PANELS,
*           YOU MUST USE ISPEXEC CONTROL DISPLAY SAVE/RESTORE!- V1M2
*
*  MODIFIED 6/05/86 TO CALL EXIT PGMS WITH SAME FUNCTION POOL - V1M1
*
*  WRITTEN 5/29/86 BY KERMIT KISER - INST CODE WSD (WDPSC) -    V1M0
*
**********************************************************************
         EJECT
**********************************************************************
*
* PANLEXIT IS CALLED FROM A CLIST LIKE THIS:
*
*        ISPEXEC SELECT PGM(PANLEXIT) PARM(REALPGM,REALPARM)
*
*    YOU CAN ALSO DO ISPEXEC CALLS WITH THE EXIT FACILITY:
*
*        ISPEXEC SELECT PGM(PANLEXIT) PARM(ISPEXEC DISPLAY ....)
*
*    YOU CAN ALSO INVOKE TSO COMMANDS WITH THE EXIT FACILITY:
*
*        PANLEXIT REALCMD OPERANDS
*
* IT IS CALLED FROM A SELECT MENU LIKE THIS:
*        SELECT PGM(PANLEXIT) PARM(REALPGM,REALPARM)
*
**********************************************************************
*
* PROGRAM 'REALPGM' IS LINKED TO WITH A PARM VALUE OF 'REALPARM'
*
**********************************************************************
*
**********************************************************************
*
* ANY PANEL DISPLAYED BY THE DIALOG CAN INCLUDE THE FOLLOWING
*
*   &PANLEXIT = 'ISPEXEC SELECT CMD(.....)'
*   &PANLEXIT = 'SELECT CMD(.....)'
*   &PANLEXIT = 'DISPLAY PANEL(..)'
*
*        OR SIMILIAR STRING REQUESTING AN ISPEXEC SERVICE...
*
*  THE VARIABLE EXIT DVAREXIT DEFINED HERE FOR VARIABLE PANLEXIT
*  WILL PASS THE STRING TO ISPEXEC TO EXECUTE AS A DIALOG REQUEST.
*
* THIS CREATES AN EXIT FROM THE PANEL TO A DIALOG IF YOU NEED IT!
* I AM USING IT TO LOG THE DESCRIPTOR STRING IN SMPE MAINT DIALOGS
* AND TO REROUTE 3.7 VTOC DISPLAY REQUESTS TO FILEAID 3.7 ...
**********************************************************************
         EJECT
**********************************************************************
*
* AN ALTERNATE WAY TO CALL AN EXIT IS TO SPECIFY A PROGRAM,PARM COMBO:
*
*   &PANLEXIT = 'REALEXIT,EXITPARM........'
*
* THE VARIABLE EXIT DVAREXIT WILL LINK TO THE PROGRAM PASSING THE
* PARM. THIS ALLOWS THE PROGRAM TO USE THE SAME FUNCTION POOL AS THE
* DIALOG WHICH DISPLAYED THE PANEL...
*
*
*
*
***** WARNING ********************************************************
***** WARNING ********************************************************
* ISPF USES NON STANDARD LINKAGE TO PROGRAMS NAMED                   *
*            ISR..... OR ISP.....                                    *
* TO INTERCEPT PANELS FOR THESE PROGRAMS, THIS PROGRAM MUST BE       *
*   CALLED WITH AN ISP OR ISR NAME. I GAVE IT AN ALIAS OF ISPDPX.    *
*                                                                    *
* ALSO ISPF PADS SHORT PARMS WITH BLANKS, BUT TRUNCATES LONG PARMS   *
* AT THE FIRST TRAILING                                              *
* BLANK, WHICH MAY CAUSE PROBLEMS. HERE IS HOW I HAD TO              *
* CALL ISRUDA (OPTION 3.1): SELECT PGM(ISPDPX) PARM(ISRUDA,ISRUDA1 $)*
*                                                                    *
**********************************************************************
**********************************************************************
*
*
*
*
         EJECT
         MACRO
         PANLWORK
WORKAREA DSECT
SAVEAREA DS    18F
XADDRESS DS    F
XSAVE    DS    18F
SAVESAVE DS    F
TRSAV    DS    3F
FLAG     DS    F
*                                 X'80'  NON-STD PGM LINKAGE
*                                 X'40'  TSO CMD LINKAGE
*                                 X'20'  ISP SELECT LINKAGE
FLAG1    EQU   FLAG+1
*                                 X'80'  SAVED DISPLAY ENVIRONMENT
*                                 X'40'  WRITE REQUEST
*                                 X'20'  VARIABLE REWRITE IN PROCESS
FLAG2    EQU   FLAG+2                                              V1M5
*                                 X'80'  ISPEXEC SERVICE REQUEST   V1M5
*                                 X'40'  IMPLICIT ISPEXEC REQUEST  V1M5
*                                 X'20'  ISPF WAS NOT ACTIVE       V1M5
*                                 X'10'  FOCUS CMD() TYPE CALL     V1M5
*                                 X'08'  SPF OPTION  TYPE CALL     V1M5
SAVEPP   DS    F
SAVEOFF  DS    H                                                   V1M5
XCPPL    DS    4F                                                  V1M5
SPREFIX  DC    H'0',H'0'                                           V1M5
SPSTART  DC    C'SPF PGM(SPFEXEC) PARM('                           V1M5
SPTEXT   DS    CL200                                               V1M5
SPEND    DS    C')'                                                V1M5
REALPGM  DS    CL8
EXITPGM  DS    CL8
REALPARM DS    F
DELIM    DS    C
VNLEN    DS    F                  VNAME LEN
DEFS     DS    CL24               DEFAULT EXIT VARIABLE NAMES
VNAMES   DS    CL256              REQUESTED EXIT NAMES
CVNAME   DS    CL8                CURRENT REQUESTED VAR NAME
VL1      DS    F                  LENGTH
VA1      DS    XL256              DATA
VL2      DS    F                  LENGTH
VA2      DS    XL256              DATA
CL       CALL  ,(0,0,0,0,0,0,0),MF=L
LL       LINK  SF=L               LINK PARM LIST
LL2      LOAD  SF=L               LOAD PARM LIST
EXECLIST DS    2A                 PARM LIST FOR ISPEXEC CALL
EXECLST2 DS    2A                 PARM LIST FOR ISPEXEC CALL
EXLEN    DS    F                  BUFF LEN FOR ISPEXEC
VAREA    DS    10XL260            REQUESTED VARIABLES
WORKLEN  EQU   *-WORKAREA
         MEND
         EJECT
PANLEXIT ENTERR LEVEL=V1M8,CLEAR=YES
         EJECT
*
*  FIRST THING TO DO IS TO ANALYZE THE PARM STRING
*     FOR NAME OF REAL DIALOG PROGRAM.
*
         LR    R11,R1             SAVE PARM PTR
         L     R1,0(R11)          R1->1ST PARM
         MVC   REALPGM,=CL256' '  CLEAR EPLOC
*
         TM    0(R11),X'80'       ONE PARM?
         BO    STDPARM            YES->STANDARD LINKAGE WE HOPE
         OI    FLAG,X'80'         NOT STANDARD PGM LINKAGE
         CLC   0(2,R1),=C'TLD'    TLD?
         BE    ISPTYPE
* ONLY THING LEFT IS TSO COMMAND LINKAGE?
         OI    FLAG,X'40'         SAY TSO COMMAND  LINKAGE
         LH    R4,0(R1)           R4=CMD LENGTH
         SH    R4,=H'4'           R4-4 FOR COMMAND DESCRIPTOR WORD
         LH    R2,2(R1)           R2=OFFSET TO REAL CMD NAME
         SR    R4,R2              R4-OFFSET = REMAINING BUFFER LENGTH?
         BZ    NAMEANAL                                            V1M5
         LR    R7,R4
         LA    R3,4(R1,R2)        R3->START SCAN AREA FOR PGM NAME
         B     SSCAN1
ISPTYPE  OI    FLAG,X'20'         SAY ISP SELECT LINKAGE
         L     R3,4(R11)          R3->PARM STR
         LR    R1,R3              R1-> "    "
         LA    R4,8               R4=8  PSUEDO LENGTH
         LR    R7,R4              R7="
         B     SSCAN
STDPARM  L     R3,0(R11)          R3-> PARM STRING
         LH    R4,0(R3)           R4=PARM LENGTH
         LR    R7,R4              SAVE LEN
         LA    R3,2(R3)           R3->PARM STRING START
SSCAN1   CH    R4,=H'8'           BIG?
         BNH   SSCAN              START SCAN FOR PGM NAME
         LA    R4,8               MAX IS 8
SSCAN    SLR   R5,R5              INDEX=0
         ST    R3,SAVEPP          SAVE NAME START                  V1M5
PL       CLI   0(R3),C','         REAL PARM?
         BE    FNPARM             YUP -> GO FIND NEXT PARM
         CLI   0(R3),C' '         REAL PARM?
         BE    FNPARM             YUP ->GO FIND NEXT PARM
         IC    R6,0(R3)           GET THE CHAR
         STC   R6,REALPGM(R5)     SAVE IT
         LA    R5,1(R5)           NEXT SLOT
         LA    R3,1(R3)           NEXT CHAR
         BCTR  R7,R0              ADJUST LENGTH
         BCT   R4,PL              MORE?
         LTR   R7,R7              MORE MORE?                       V1M7
         BZ    NAMEANAL           NOPE NOPE.                       V1M7
FNPARM   CLI   0(R3),C','         COMMA?                           V1M5
         BE    SKIPSEP            YUP                              V1M5
         CLI   0(R3),C' '         BLANK?                           V1M5
         BNE   NAMEANAL                                            V1M5
SKIPSEP  LA    R3,1(R3)           R3->NEXT CHAR                    V1M5
         BCT   R7,FNPARM          CNT SEPS                         V1M5
         EJECT
*
*  WE HAVE NOW COPIED THE REAL PROGRAM NAME.
*
*  FIRST SET FLAGS BY WHAT WE FOUND:                               V1M5
*                                                                  V1M5
NAMEANAL OC    REALPGM,=CL256' '     MAKE SURE UPPER CASE NAME     V1M5
         CLC   REALPGM(4),=C'CMD('   FOCUS TYPE SPF CALL?          V1M5
         BE    FFLG                                                V1M5
         CLC   REALPGM(4),=C'PGM('   FOCUS TYPE SPF CALL?          V1M5
         BE    FFLG                                                V1M5
         CLC   REALPGM(6),=C'PANEL(' FOCUS TYPE SPF CALL?          V1M5
         BE    FFLG                                                V1M5
         CLC   REALPGM,=CL8' '       FOCUS TYPE SPF CALL?          V1M5
         BNE   OCHK                                                V1M5
FFLG     OI    FLAG2,X'10'                                         V1M5
OCHK     CLI   REALPGM,C'0'          SPF OPTION TYPE CALL?         V1M5
         BNL   FFLG1                                               V1M5
         CLI   REALPGM+1,C'.'        SPF OPTION TYPE CALL?         V1M5
         BE    FFLG1                                               V1M5
         CLI   REALPGM+1,C' '        SPF OPTION TYPE CALL?         V1M5
         BE    FFLG1                                               V1M5
         CLI   REALPGM+2,C' '        SPF OPTION TYPE CALL?         V1M5
         BE    FFLG1                                               V1M5
         CLI   REALPGM+2,C'.'        SPF OPTION TYPE CALL?         V1M5
         BNE   XCHK                                                V1M5
FFLG1    OI    FLAG2,X'08'                                         V1M5
XCHK     CLC   REALPGM,=CL8'ISPEXEC'          ISPEXEC?             V1M5
         BNE   RECHK                                               V1M5
         OI    FLAG2,X'80'                                         V1M5
RECHK    CLC   REALPGM,=CL8'SPFEXEC'          ISPEXEC?             V1M5
         BNE   IMPCHK                                              V1M5
         OI    FLAG2,X'80'                                         V1M5
IMPCHK   CLC   REALPGM,=CL8'SELECT'  IMPLICIT ISPEXEC?             V1M5
         BE    IMPFLG                                              V1M5
         CLC   REALPGM,=CL8'DISPLAY' IMPLICIT ISPEXEC?             V1M5
         BNE   PARMFIX                                             V1M5
IMPFLG   OI    FLAG2,X'C0'                                         V1M5
         L     R2,SAVEPP          R2->START OF NAME                V1M5
         SR    R3,R2              R3=SAFE LENGTH                   V1M5
         BCTR  R3,R0              -1 FOR EX                        V1M5
FOLD     OC    0(0,R2),=CL256' '                                   V1M5
         EX    R3,FOLD            THESE NEED TO BE UPPER CASE!     V1M5
*
PARMFIX  TM    0(R11),X'80'       ONE PARM?
         BO    STDPARM2           YUP
         TM    FLAG,X'40'         TSO?
         BNO   ISPCHK             NOPE
         EJECT
*
*  PATCH UP THE PARM OR BUFFER PASSED:
*
*
* HANDLE TSO CBUF UPDATE HERE
*
         TM    FLAG2,X'58'        IMPLICIT ISPEXEC OR FOCUS?       V1M5
         BNZ   VDEF                                                V1M5
         LA    R2,0(R2,R5)        R2=NEW OFFSET TO OPERANDS
         MVC   SAVEOFF,2(R1)      SAVE OFFSET                      V1M5
         STH   R2,2(R1)           SET IT
         B     VDEF
*
* HANDLE NON-STANDARD ISPF LINKAGE CALLS HERE
*
* NOTE - WE SHOULD BE ABLE TO DO THIS BECAUSE THERE IS NO LENGTH
*  FIELD HERE TO CAUSE 0C6 ABEND DUE TO ALIGNMENT LIKE WE GET WITH
*  A STANDARD PARM IF WE MOVE THE LENGTH INSTEAD OF THE DATA STRING.
*
ISPCHK   MVC   SAVEPP,4(R11)      SAVE ORIGINAL PARM
         ST    R3,4(R11)          CHANGE ISPF PARM LIST
         B     VDEF               ALL OK
*
* HANDLE STANDARD PARM LINKAGE CALLS HERE
*
STDPARM2 TM    FLAG2,X'58'        IMPLICIT ISPEXEC?                V1M5
         BNZ   VDEF               DONT SQUEEZE PARM                V1M5
         STH   R7,0(,R1)          SAVE NEW LENGTH
         LTR   R7,R7              ANY PARM LEFT?
         BZ    VDEF               NO->DON'T MOVE IT THEN
MVC      MVC   2(0,R1),0(R3)      EXECUTED
         BCTR  R7,R0              FUDGE FOR EX
         EX    R7,MVC             SHIFT THE PARM
         EJECT
VDEF     EQU   *
*
*     DEFINE THE REQUESTED PANEL EXIT ROUTINES:
*
         MVC   XADDRESS,=V(DVAREXIT)
         MVC   VNAMES,=CL256' '         BLANKS
         MVC   VNLEN,=F'256'      INIT NAME LIST LENGTH
         CALL  ISPLINK,(=C'VCOPY',=CL8'PANLXVN',VNLEN,VNAMES,=C'MOVE'),X
               VL,MF=(E,CL)
         CH    R15,=H'20'         ISPF ACTIVE?                     V1M5
         BE    NOSPF                                               V1M5
         CH    R15,=H'8'          FOUND IT?
         BNL   SETDEFS            NOPE
*
         CALL  ISPLINK,(=CL8'VDEFINE',VNAMES,VAREA,=CL8'USER',         X
               =F'260',=CL8' ',XADDRESS),VL,MF=(E,CL)
         EJECT
*
*     DEFINE THE DEFAULT PANEL EXIT ROUTINES:
*      VARIABLES ARE PANLEXIT AND PANLXSAV
*       PANLEXIT IS THE ONLY VARIABLE WHICH DOES NOT CAUSE
*       AN AUTOMATIC CONTROL SAVE (UNLESS FUNCTION = DISPLAY)
*
SETDEFS  MVI   VA1,C' '           A BLANK
         MVC   VA1+1(255),VA1     SMEAR
         MVI   VA2,C' '           A BLANK
         MVC   VA2+1(255),VA2     SMEAR
*
         MVC   DEFS,=CL24'(PANLEXIT,PANLXSAV)'
         CALL  ISPLINK,(=CL8'VDEFINE',DEFS,VL1,=CL8'USER',             X
               =F'260',=CL8' ',XADDRESS),VL,MF=(E,CL)
         B     REALCALL                                            V1M5
         EJECT
*
*     NEED TO INVOKE ISPF IF NOT ACTIVE:
*
NOSPF    OI    FLAG2,X'20'        SAY ISPF CALLED FROM THIS COPY   V1M5
         MVC   REALPGM,=CL8'ISPF'                                  V1M5
         MVC   SPTEXT,=CL256' '                                    V1M5
         MVC   SPREFIX(2),=H'227' MUST HAVE CBUF                   V1M5
         MVC   SPREFIX+2(2),=H'4' TO START ISPF                    V1M5
         MVC   SPSTART,=C'SPF PGM(SPFEXEC) PARM('                  V1M5
         MVC   SPEND,=C')'                                         V1M5
         TM    FLAG,X'40'         TSO CMD?                         V1M5
         BNO   NOTCMD                                              V1M5
         TM    FLAG2,X'18'        FOCUS TYPE?                      V1M5
         BNZ   REALCALL           CBUF WAS OK                      V1M5
         L     R1,0(R11)          R1->CBUF                         V1M5
         LH    R15,0(R1)          R15=CBUF LEN                     V1M5
         SH    R15,=H'4'          -4                               V1M5
         LA    R1,2(R1)           +2                               V1M5
         B     MBUF                                                V1M5
NOTCMD   L     R1,0(R11)          R1->PARM FIELD                   V1M5
         LH    R15,0(R1)          R15=PARM LEN                     V1M5
*  NEED SOME CODE HERE TO BUILD A CPPL- CHECK PDS COMMAND          V1M5
         LA    R11,XCPPL                                           V1M5
         L     R14,16             CVT                              V1M5
         L     R14,0(R14)         CVTTCB                           V1M5
         L     R14,4(R14)         TCB                              V1M5
         L     R5,180(R14)        JSCB                             V1M5
         L     R5,264(R14)        PSCB                             V1M5
         ST    R14,XCPPL+8                                         V1M5
         L     R14,52(R14)        UPT                              V1M5
         ST    R14,XCPPL+4                                         V1M5
         L     R14,X'21C'         TCB                              V1M5
         L     R14,X'7C'(R14)     JSTCB                            V1M5
         L     R14,X'88'(R14)     DAUGHTER                         V1M5
         L     R14,X'50'(R14)     IKJEFT01 R8                      V1M5
         L     R14,X'2C'(R14)     ECT                              V1M5
         ST    R14,XCPPL+12                                        V1M5
MBUF     MVC   SPTEXT(0),2(R1)                                     V1M5
         BCTR  R15,R0             -1                               V1M5
         EX    R15,MBUF           COPY THE PARM TEXT               V1M5
         LA    R1,SPREFIX                                          V1M5
         ST    R1,0(R11)          PASS NEW CBUF                    V1M5
         LR    R1,R11             CPPL                             V1M5
         WXTRN NEWISPF,ISRPCP,ISPICP   V1M6
CALLISPF ICM   R15,15,=A(NEWISPF) V1M6
         BNZ   CALLIT             V1M6
         ICM   R15,15,=A(ISRPCP)  V1M6
         BNZ   CALLIT             V1M6
         ICM   R15,15,=A(ISPICP)  V1M6
         BNZ   CALLIT             V1M8
         LR    R14,R1             V1M8
         LOAD  EP=ISPF,SF=(E,LL2) V1M8
         LR    R15,R0             V1M8
         LR    R1,R14             V1M8
*V1M8    BZ    LINK               V1M6
CALLIT   BALR  R14,R15            V1M6 START ISPF
         B     CALLDONE           V1M6
*V1M6    B     LINK                                                V1M5
         EJECT
*
*     LINK TO DIALOG TO BE INTERCEPTED OR ISPEXEC
*
REALCALL L     R15,4(R13)         R15->OLD SAVE AREA
         LM    R14,R11,12(R15)    RESTORE ALL REGS EXCEPT 12,13
*                                 (THIS IS ULTRA PROTECTION)
         TM    FLAG2,X'20'        ISPF ACTIVE YET?                 V1M5
*V1M6    BO    LINK               NO-> LINK TO ISPF FIRST THEN     V1M5
         BO    CALLISPF           NO-> CALL    ISPF FIRST THEN     V1M6
         TM    FLAG2,X'98'        ISPEXEC OR FOCUS TYPE?           V1M5
         BZ    LINK               NO-> CALL REAL DIALOG            V1M5
         L     R15,0(R1)          R15->PARM STRING
         LH    R1,0(R15)          R1=PARM LEN
         TM    FLAG2,X'18'        FOCUS TYPE SPF REQUEST?          V1M5
         BNZ   FOCFUDGE           YUP->BUILD A GOOD EXEC BUF       V1M5
         TM    FLAG,X'40'         TSO CMD?                         V1M5
         BNO   NOTCMD2                                             V1M5
GETBUF   SH    R1,=H'4'           LEN-4                            V1M5
         SH    R1,2(R15)          -OFFSET                          V1M5
         ST    R1,EXLEN           NEWLEN                           V1M5
         LA    R1,4(R15)          R1->CMD STR                      V1M5
         AH    R1,2(R15)          R1->TRUE REQUEST                 V1M5
         ST    R1,EXECLST2+4      PASS                             V1M5
         B     CALLEX                                              V1M5
NOTCMD2  ST    R1,EXLEN           SAVE IT IN A FULLWORD
         LA    R1,2(R15)          R1->PARM WITHOUT LENGTH FIELD
         ST    R1,EXECLST2+4      PASS
CALLEX   OI    EXECLST2+4,X'80'   FLAG
         LA    R1,EXLEN           R1->NEW LENGTH FIELD
         ST    R1,EXECLST2        PASS
         LA    R1,EXECLST2        R1->NEW PARM LIST FOR ISPEXEC
         CALL  ISPEXEC
         C     R15,=F'4'          END KEY?                         V1M5
         BNE   CALLDONE           NOOP                             V1M5
         TM    FLAG2,X'18'        FOCUS?                           V1M5
         BZ    CALLDONE           NO                               V1M5
         SLR   R15,R15            RC=0                             V1M5
         B     CALLDONE                                            V1M5
         EJECT
*
*   FUDGE THE SELECT OPERAND ETC. , IF MISSING:                    V1M5
*
FOCFUDGE EQU   *                                                   V1M5
         MVC   SPSTART,=CL22'SELECT'                               V1M5
         MVC   SPTEXT,=CL256' '                                    V1M5
         MVI   SPEND,C' '                                          V1M5
         TM    FLAG2,X'08'        OPTION CALL?                     V1M5
         BNO   NOPT                                                V1M5
         STM   R15,R1,TRSAV                                        V1M5
         CALL  ISPLINK,(=C'CONTROL',=CL8'DISPLAY',                 V1M5X
               =CL8'REFRESH'),VL,MF=(E,CL)                         V1M5
         LM    R15,R1,TRSAV                                        V1M5
         MVC   SPSTART,=CL22'SELECT PANEL(PXP) OPT('               V1M5
         MVI   SPEND,C')'                                          V1M5
NOPT     TM    FLAG,X'40'         TSO CMD?                         V1M5
         BO    FOCCMD                                              V1M5
         BCTR  R1,R0                                               V1M5
         LA    R2,2(R15)          R2->CMD TEXT                     V1M5
         B     MCMD                                                V1M5
FOCCMD   SH    R1,=H'5'           -PREF LEN                        V1M5
         SH    R1,2(R15)          -OFFSET                          V1M5
         LA    R2,4(R15)          SKIP PREFIX                      V1M5
         AH    R2,2(R15)          R2->TRUE CMD TEXT                V1M5
MCMD     MVC   SPTEXT(0),0(R2)                                     V1M5
         EX    R1,MCMD            MOVE CMD                         V1M5
         LA    R1,SPSTART                                          V1M5
         ST    R1,EXECLST2+4                                       V1M5
         MVC   EXLEN,=F'223'                                       V1M5
         B     CALLEX                                              V1M5
         EJECT
*
*        LINK TO REAL DIALOG/PROGRAM IF NEEDED:
*
LINK     LINK  EPLOC=REALPGM,SF=(E,LL) CALL REAL DIALOG
CALLDONE TM    0(R1),X'80'        ONE PARM?
         BO    RETURN             OK
         TM    FLAG,X'40'         TSO COMMAND?
         BO    RETURN             OK
         MVC   4(4,R1),SAVEPP     RESTORE PARM LIST
         EJECT
*
*        RETURN TO WHOEVER CALLED US:
*
RETURN   DS    0H
RET      LEAVER
         TITLE 'WORKAREAS'
         LTORG
         EJECT
*
*              DYNAMIC WORKAREAS:
*
         PANLWORK
         END
DVAREXIT TITLE 'DISPLAY PANEL VARIABLE EXIT ROUTER'
*
         MACRO
         PANLWORK
WORKAREA DSECT
SAVEAREA DS    18F
XADDRESS DS    F
XSAVE    DS    18F
SAVESAVE DS    F
TRSAV    DS    3F
FLAG     DS    F
*                                 X'80'  NON-STD PGM LINKAGE
*                                 X'40'  TSO CMD LINKAGE
*                                 X'20'  ISP SELECT LINKAGE
FLAG1    EQU   FLAG+1
*                                 X'80'  SAVED DISPLAY ENVIRONMENT
*                                 X'40'  WRITE REQUEST
*                                 X'20'  VARIABLE REWRITE IN PROCESS
FLAG2    EQU   FLAG+2                                              V1M5
*                                 X'80'  ISPEXEC SERVICE REQUEST   V1M5
*                                 X'40'  IMPLICIT ISPEXEC REQUEST  V1M5
*                                 X'20'  ISPF WAS NOT ACTIVE       V1M5
*                                 X'10'  FOCUS CMD() TYPE CALL     V1M5
*                                 X'08'  SPF OPTION  TYPE CALL     V1M5
SAVEPP   DS    F
SAVEOFF  DS    H                                                   V1M5
XCPPL    DS    4F                                                  V1M5
SPREFIX  DC    H'0',H'0'                                           V1M5
SPSTART  DC    C'SPF PGM(SPFEXEC) PARM('                           V1M5
SPTEXT   DS    CL200                                               V1M5
SPEND    DS    C')'                                                V1M5
REALPGM  DS    CL8
EXITPGM  DS    CL8
REALPARM DS    F
DELIM    DS    C
VNLEN    DS    F                  VNAME LEN
DEFS     DS    CL24               DEFAULT EXIT VARIABLE NAMES
VNAMES   DS    CL256              REQUESTED EXIT NAMES
CVNAME   DS    CL8                CURRENT REQUESTED VAR NAME
VL1      DS    F                  LENGTH
VA1      DS    XL256              DATA
VL2      DS    F                  LENGTH
VA2      DS    XL256              DATA
CL       CALL  ,(0,0,0,0,0,0,0),MF=L
LL       LINK  SF=L               LINK PARM LIST
EXECLIST DS    2A                 PARM LIST FOR ISPEXEC CALL
EXECLST2 DS    2A                 PARM LIST FOR ISPEXEC CALL
EXLEN    DS    F                  BUFF LEN FOR ISPEXEC
VAREA    DS    10XL260            REQUESTED VARIABLES
WORKLEN  EQU   *-WORKAREA
         MEND
         EJECT
DVAREXIT ENTERWW 1,SA=XSAVE,WA=XSAVE,LEVEL=V1M4
         LR    R11,R1             SAVE PARM PTR
         EJECT
         L     R9,16(R11)         R9->LENGTH OF VARIABLE REQUESTED
         LA    R10,4(R9)          R10->VARIABLE DATA AREA REQUESTED
*
         L     R3,4(,R11)         R3->SRVCODE
         CLC   0(4,R3),=F'0'      READ?
         BE    READ
*
         MVC   CVNAME,=CL8' '     INIT CURRENT VAR NAME
         L     R1,8(R11)          R1->VAR NAME REQUESTED
         SLR   R2,R2              R2=0
         IC    R2,0(R1)           R2=VAR NAME LEN
         BCTR  R2,R0              R2-1
NMVC     MVC   CVNAME(0),1(R1)    EXED
         EX    R2,NMVC            COPY THE CURRENT VARIABLE NAME
*
         CLC   0(4,R3),=F'1'      WRITE?
         BE    WRITE              NO CAN DO ELSE
         EJECT
*
*        RETURN TO WHOEVER CALLED US:
*
RETURN   EQU   *
         TM    FLAG+1,X'40'       WRITE REQUEST?
         BNO   RESRET             NUP
         OI    FLAG+1,X'20'       SAY REWRITE PROCESS
         LR    R8,R10             R8->CURRENT VARIABLE
         SH    R8,=H'12'          R8->VARIABLE NAME
         MVC   SAVESAVE,XSAVE+4  VGET WILL CAUSE RECURSION
         CALL  ISPLINK,(=C'VGET',CVNAME,=C'SHARED'),VL,MF=(E,CL)
         MVC   XSAVE+4(4),SAVESAVE  VGET WILL CAUSE RECURSION
         TM    FLAG+1,X'80'       SAVED ENVIRONMENT?
         BNO   RESRET             NUP
         CALL  ISPLINK,(=C'CONTROL',=C'DISPLAY',=C'RESTORE'),MF=(E,CL)
RESRET   NI    FLAG+1,X'00'       RESET FLAGS
RET0     SLR   R15,R15            RC=0
RET      LEAVEWW
         EJECT
*
*  READ VARIABLE REQUEST:
*
READ     EQU   *
         L     R1,20(R11)         R1->SPFDLEN
         MVC   0(4,R1),0(R9)      SET LEN
         L     R1,24(R11)         R1->SPFDATAP
         LA    R2,0(R10)          R2->DATA
         ST    R2,0(R1)           PASS DATA BACK
         B     RET0               ALL DONE
         EJECT
*
*   WRITE ROUTINE:
*
WRITE    EQU   *
         OI    FLAG+1,X'40'       SAY WRITE
         LA    R1,VA1             R1->PRIMARY VARIABLE
         CR    R1,R10             SAVE REQUEST?
         BE    REALRITE           NOOP.
         TM    FLAG+1,X'20'       REWRITE?
         BO    REALRITE           YUP
         CALL  ISPLINK,(=C'CONTROL',=C'DISPLAY',=C'SAVE'),MF=(E,CL)
         OI    FLAG+1,X'80'       SAY SAVED
REALRITE L     R1,20(R11)         R1->DATA LENGTH  (SPFDLEN)
         L     R4,0(R1)           R4=DATA LENGTH
         ST    R4,0(R9)           SAVE LENGTH
         L     R1,24(R11)         R1->SPFDATAP             (DATA PTR)
         L     R3,0(R1)           R3->REAL FUNCTION REQUEST  (DATA)
         LA    R1,0(R9)           R1->NEW PARM LENGTH
         ST    R1,EXECLIST        PASS IT
         LA    R1,0(R10)          R1->NEW PARM AREA
         ST    R1,EXECLIST+4      PASS IT
         OI    EXECLIST+4,X'80'   SET END FLAG JUST IN CASE
         LR    R2,R4              R2=DATA LENGTH
         BCTR  R2,R0              R2-1 FOR EX
MVC2     MVC   0(0,R10),0(R3)     EXECUTED
         EX    R2,MVC2            SAVE THE DATA
         TM    FLAG+1,X'20'       REWRITE?
         BO    RET0               YUP
         MVI   DELIM,C','         SAY COMMA DEFAULT DELIMITER
         EJECT
*
*  NEXT THING TO DO IS TO ANALYZE THE PARM STRING
*     FOR NAME OF REAL DIALOG PROGRAM.
*
         MVC   EXITPGM,=CL8' '    CLEAR EPLOC
         LR    R7,R4              SAVE LEN
         CH    R4,=H'8'           BIG?
         BNH   SSCAN              START SCAN FOR PGM NAME
         LA    R4,8               MAX IS 8
SSCAN    SLR   R5,R5              INDEX=0
PL       CLI   0(R3),C','         REAL PARM?
         BE    REAL               YUP
         CLI   0(R3),C' '         REAL PARM?
         BE    REAL               YUP
         IC    R6,0(R3)           GET THE CHAR
         STC   R6,EXITPGM(R5)     SAVE IT
         LA    R5,1(R5)           NEXT SLOT
         LA    R3,1(R3)           NEXT CHAR
         BCTR  R7,R0              ADJUST LENGTH
         BCT   R4,PL              MORE?
         EJECT
*
*  WE HAVE NOW COPIED THE REAL PROGRAM NAME. PATCH UP THE PARM LIST:
*
STDPARM2 LTR   R7,R7              ANYTHING LEFT?
         BZ    SETPARM
SMORE    CLI   0(R3),C','         COMMA?
         BE    REAL               YUP
         CLI   0(R3),C' '         BLANK?
         BNE   SETPARM
REAL     EQU   *
         MVC   DELIM,0(R3)        SAVE DELIMITER
         LA    R3,1(R3)           R3->REAL PARM
         BCTR  R7,R0              SKIP COMMA
SETPARM  EQU   *
         CLC   EXITPGM,=CL8'ISPEXEC'  ISPEXEC CALL?
         BE    SHIFTIT            YUP
         CLC   EXITPGM,=CL8'DISPLAY'  ISPEXEC DISPLAY CALL?
         BE    SAVEDISP           YUP
         CLI   DELIM,C','         COMMA DELIM?
         BNE   CALLEXEC           NOPE->ASSUME ISPEXEC WANTED
SHIFTIT  ST    R7,0(R9)           SAVE NEW LENGTH
         LTR   R7,R7              ANY PARM LEFT?
         BZ    XCHK               NO->DON'T MOVE IT THEN
MVC      MVC   0(0,R10),0(R3)     EXECUTED
         BCTR  R7,R0              FUDGE FOR EX
         EX    R7,MVC             SHIFT THE PARM
         EJECT
*
*        CALL ANY NON ISPF SUBROUTINE REQUESTED:
*
XCHK     EQU   *
         CLC   EXITPGM,=CL8'ISPEXEC' SERVICE REQUEST?
         BE    CALLEXEC           NOPE
         LA    R1,2(R9)           R1->PGM PARM STRING
         ST    R1,EXECLIST        SAVE ADDR
         OI    EXECLIST,X'80'     FLAG IT
         LA    R1,EXECLIST        R1->NEW PARM LIST
         LINK  EPLOC=EXITPGM,SF=(E,LL)
         B     RETURN             ALL DONE!
         EJECT
*
*  SAVE THE DISPLAY ENVIRONMENT IF NEEDED, THEN CALL ISPF SUBRTN
*
SAVEDISP EQU   *
         TM    FLAG+1,X'80'       SAVED ALREADY?
         BO    CALLEXEC           YUP
         CALL  ISPLINK,(=C'CONTROL',=C'DISPLAY',=C'SAVE'),MF=(E,CL)
         OI    FLAG+1,X'80'       SAY SAVED
         SPACE 3
CALLEXEC LA    R1,EXECLIST
         CALL  ISPEXEC            TELL ISPF
         B     RETURN             ALL DONE!
         TITLE 'WORKAREAS'
         LTORG
         EJECT
*
*              DYNAMIC WORKAREAS:
*
         PANLWORK
         END
