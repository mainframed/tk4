***********************************************************************
*                                                                     *
* MODIFIED 12/20/83 BY KERMIT KISER - WASHINGTON STATE DP CENTER      *
*  TO SUPPORT MORE QABS - MAY NEED HIGHER BUFNO TO WORK               *
*                                                                     *
*                                                                     *
* FUNCTION - DISPLAY THE DSPRINT LOCAL PRINTER QUEUE                  *
*                                                                     *
* ENTRY POINT - LPQ                                                   *
*                                                                     *
* INPUT - DATA SET 'DSPRINT.REQUEST.QUEUE.                            *
*                                                                     *
* RESTRICTIONS - THIS PROGRAM ASSUMES THE INITQUE DEFAULTS OF 1 QAB   *
*                AND TWO QEB'S.                                       *
*                                                                     *
* AUTHOR -        LESLIE F. ALNAS                                     *
* INSTALLATION -  INTERNATIONAL GEOPHYSICAL COMPUTER SERVICES         *
*                 LOS ANGELES, CALIFORNIA 90017                       *
* DATE -          JANUARY 20, 1982                                    *
*                                                                     *
***********************************************************************
LPQ      CSECT
         SAVE  (14,12),,*               SAVE THE REGISTERS
         LR    R12,R15                  LOAD EPA INTO 1ST BASE REGISTER
         USING LPQ,R12                  ESTABLISH ADDRESSABILITY
         ST    R13,SAVEAREA+4           SAVE CALLERS SAVEAREA PTR
         LA    R3,SAVEAREA              ADDR OF MY SAVEAREA
         ST    R3,8(13)                 SAVE MY SAVEAREA PTR
         LR    R13,R3                   SAVEAREA ADDR IN REG 13
         EJECT
         OPEN  (DRQ,(INPUT))            OPEN DSPRINT.REQUEST.QUEUE
         BAL   R7,INIT                  PUT OUT HEADER LINE
         LA    R9,QABBUFA           R9->BUF PTR LIST AREA
         SPACE
*        LOOP TO READ ALL QUEUE DATASET BLOCKS AND SAVE PTRS TO THEM
QRLOOP   GET   DRQ                      GET QUEUE ANCHOR BLOCK
         ST    R1,0(R9)                 STORE QAB BUFFER ADDRESS
         LA    R9,4(,R9)            R9 -> NEXT PTR SLOT
         B     QRLOOP               READ NEXT BLOCK
         SPACE
START    L     R3,QABBUFA               LOAD ADDRESS OF QAB BUFFER
         LA    R3,8(R3)                 POINT TO 1ST PRINTER QAB
         USING DQAB,R3                  QUEUE ANCHOR BLOCK DSECT
         USING DPQE,R4                  PRINT QUEUE ELEMENT DSECT
         B     CHKNAME                  CHECK FOR VALID PRINTER NAME
         SPACE
*              LOOP THROUGH ALL PRINTER ELEMENTS:
NEXTQAB  EQU   *
         LA    R3,24(R3)                NEXT PRINTER QAB
         L     R1,QABIX             R1=INDEX TO CURRENT BUF PTR
         L     R2,QABBUFA(R1)       R2->CURRENT BUFFER
         LA    R15,2480(,R2)        R15->END OF "
         CR    R3,R15               PAST END?
         BL    CHKNAME              NOPE.->GO CHECK IT OUT.
         TM    0(R2),X'80'          LAST QAB BUF?
         BO    PQETOTAL             MUST BE DONE
         LA    R1,4(,R1)            R1=INDEX TO NEXT QAB BUF PTR
         ST    R1,QABIX             SAVE NEW INDEX
         L     R2,QABBUFA(R1)       R2->NEXT QAB BUF
         LTR   R2,R2                ANY BLOCK THERE?
         BNP   QEBERROR             OOPS!
         LA    R3,8(,R2)            R3->NEXT PRINTER ANCHOR
CHKNAME  EQU   *
         XR    R10,R10                  CLEAR PQE COUNT REGISTER
         CLI   QABPTRNM,X'00'           PRINTER NAME DEFINED?
         BE    PQETOTAL                 GO DISPLAY THE PQE TOTALS
CHKQAB   EQU   *
         CLC   QABORQEA,=F'0'           ANYTHING QUEUED?
         BE    NEXTQAB                  NO...GET NEXT QAB ANCHOR
GETQEB   EQU   *
         MVC   MSGAREA(8),QABPTRNM      MOVE PRINTER NAME TO MSG AREA
         LH    R1,QABORQEB          R1= INDEX TO QEB BUF PTR
         LTR   R1,R1                GOOD ONE?
         BNP   QEBERROR             NOPE!
         SLL   R1,2                 MAKE INDEX INTO OFFSET INDEX
         L     R4,QABBUFA(R1)       R4->QEB BUF
         LTR   R4,R4                GOOD ONE?
         BNP   QEBERROR             OOPS!
MOVEPQE  EQU   *
         AH    R4,QABORQEO              ADD OFFSET FOR PQE
         EJECT
*              LOOP THROUGH ALL REQUESTS FOR THE PRINTER:
NEXTPQE  EQU   *
         MVC   MSGAREA+9(7),PQETSOID    MOVE TSO USERID
         TM    PQEDSTYP,X'02'           IS IT AN INTERIM DATA SET?
         BO    MOVEDSN                  DON'T MOVE REQUEST NUMBER
         LH    R5,PQEREQ#               GET REQUEST NUMBER
         CVD   R5,WORK                  CONVERT TO IT TO DECIMAL
         UNPK  MSGAREA+18(5),WORK+5(3)  MOVE REQUEST # TO MSGAREA
         OI    MSGAREA+22,X'F0'         MAKE IT NUMERIC
MOVEDSN  EQU   *
         LR    R5,R4                    START OF PQE
         LA    R5,4(R5)                 LOCATION OF DSNAME
         LA    R6,MSGAREA+25            OUTPUT AREA FOR DSNAME
         LA    R8,43                    MAX DSN LENGTH -1
         TRT   0(44,R5),TABLE           FIND END OF DSN X'40'
         BZ    EXMVCDSN                 MOVE ALL 44 CHARACTERS
         SR    R1,R5                    GET LENGTH OF DSNAME
         BCTR  R1,R0                    LENGTH MINUS 1
         LR    R8,R1                    SAVE LENGTH OF MOVE
         LR    R5,R4                    START OF PQE
         LA    R5,4(R5)                 LOCATION OF DSNAME
EXMVCDSN EQU   *
         EX    R8,EXMVC                 EXECUTE MOVE FOR DSNAME
         B     CHKMEMBR                 CHECK MEMBER NAME
EXMVC    MVC   0(1,R6),0(R5)            >>>>>>  EXECUTE MOVE  <<<<<<
CHKMEMBR EQU   *
         CLI   PQEMEMBR,X'00'           IS THERE A MEMBER NAME?
         BE    DOTPUT                   NO...GO PUT THE MSGAREA NOW
         AR    R6,R8                    END OF DSNAME
         MVI   1(R6),C'('               MOVE LEFT PARANTHESIS
         LA    R6,2(R6)                 OUT AREA FOR MEMBER NAME
         LR    R5,R4                    START OF PQE
         LA    R5,48(R5)                LOCATION OF MEMBER NAME
         LA    R8,7                     MAX MEMBER NAME LENGTH -1
         TRT   0(8,R5),TABLE            FIND END OF MEMBER NAME X'40'
         BZ    EXMVCMBR                 MEMBER NAME IS 8 BYTES LONG
         SR    R1,R5                    GET LENGTH OF MEMBER NAME
         BCTR  R1,R0                    LENGTH MINUS 1
         LR    R8,R1                    SAVE LENGTH OF MOVE
         LR    R5,R4                    START OF PQE
         LA    R5,48(R5)                LOCATION OF MEMBER NAME
EXMVCMBR EQU   *
         EX    R8,EXMVC                 EXECUTE MOVE INSTRUCTION
         AR    R6,R8                    END OF MEMBER NAME
         MVI   1(R6),C')'               CLOSE PARANTHESIS
         B     DOTPUT                   DO TPUT NOW
DOTPUT   EQU   *
         LA    R10,1(R10)               ADD 1 TO PQE COUNT
         ST    R10,PQECOUNT             STORE THE COUNT FOR THAT QAB
         BAL   R6,TPUTMSG               GO DISPLAY THE MESSAGE
         CLC   PQENEXTA,=F'0'           IS THERE ANOTHER PQE CHAINED
         BE    NEXTQAB                  NO...GET NEXT QAB
         LH    R7,PQENEXTO              SAVE THE NEXT PQE OFFSET
         LH    R1,PQENEXTB          R1= INDEX TO QEB BUF PTR
         LTR   R1,R1                GOOD ONE?
         BNP   QEBERROR             NOPE!
         SLL   R1,2                 MAKE INDEX INTO OFFSET INDEX
         L     R4,QABBUFA(R1)       R4->QEB BUF
         LTR   R4,R4                GOOD ONE?
         BNP   QEBERROR             OOPS!
         AR    R4,R7                    GET OFFSET OF PQE
         B     NEXTPQE                  GO MOVE NEXT PQE DATA
         EJECT
*              LPQ SUBROUTINES AND TERMINATION CODE:
QEBERROR MVC   MSGAREA(38),=C'QEB ERROR...NOTIFY SYSTEMS PROGRAMMING'
         BAL   R6,TPUTMSG              GO DISPLAY THE MESSAGE
         B     DONE
TPUTMSG  EQU   *
         LA    R0,LMSG                  LENGTH OF MESSAGE
         LA    R1,MSGAREA               POINT TO MESSAGE AREA
         TPUT  (R1),(R0)                DISPLAY THE MESSAGE LINE
         BAL   R8,CLRMSG                GO CLEAR THE MESSAGE AREA
         BR    R6                       RETURN BRANCH
INIT     EQU   *
         BAL   R8,CLRMSG                GO CLEAR THE MESSAGE AREA
         MVC   MSGAREA(22),=C'PRINTER  USERID   REQ#'
         MVC   MSGAREA+27(22),=C'DATA SET NAME (MEMBER)'
         BAL   R6,TPUTMSG              PUT OUT HEADER LINE
         BAL   R8,CLRMSG                GO CLEAR THE MESSAGE AREA
         BAL   R6,TPUTMSG               PUT OUT A BLANK LINE
         BR    R7                       GO BACK
CLRMSG   EQU   *
         MVI   MSGAREA,C' '             CLEAR THE MESSAGE AREA
         MVC   MSGAREA+1(LMSG-1),MSGAREA
         BR    R8                       RETURN
         EJECT
*              START OF TERMINATION CODE: WHEN PRINTER LOOP ENDS:
PQETOTAL EQU   *
         BAL   R8,CLRMSG                GO CLEAR THE MESSAGE AREA
         BAL   R6,TPUTMSG               PUT OUT A BLANK LINE
         XC    QABIX,QABIX          RESET BUF INDEX TO ZERO
         L     R3,QABBUFA               RELOAD ADDRESS OF QAB
         LA    R3,8(R3)                 LOCATION OF 1ST PRINTER QAB
         XR    R9,R9                    CLEAR TOTAL PQE'S REGISTER
*              LOOP THRU PRINTERS TO DISPLAY REQUEST COUNTS:
NEXTOTAL EQU   *
         CLI   QABPTRNM,X'00'           VALID PRINTER NAME?
         BE    PQEAVAIL                 NO...GO DISPLAY PQE'S AVAILABLE
         CLI   PQECOUNT+3,X'00'         WAS ANYTHING TOTALED?
         BE    BUMPQAB                  NO...THEN BUMP THE POINTER
         L     R5,PQECOUNT              GET THE COUNT TOTAL
         AR    R9,R5                    GET TOTAL FOR ALL QAB'S
         CVD   R5,WORK                  CONVERT TO IT TO DECIMAL
         UNPK  MSGAREA(2),WORK+6(2)     MOVE COUNT TO MSGAREA
         CLI   MSGAREA,X'F0'            IS TENS POSITION A ZERO?
         BNE   SKIPX40                  SKIP THE NEXT INSTRUCTION
         MVI   MSGAREA,X'40'            DON'T PRINT THE ZERO
SKIPX40  EQU   *
         OI    MSGAREA+1,X'F0'          MAKE IT NUMERIC
         MVC   MSGAREA+4(22),=C'DATA SET(S) QUEUED FOR'
         MVC   MSGAREA+27(8),QABPTRNM   MOVE PRINTER NAME
         BAL   R6,TPUTMSG               GO DISPLAY THE MESSAGE
BUMPQAB  EQU   *
         LA    R3,24(R3)                BUMP THE QAB POINTER
         L     R1,QABIX             R1=INDEX TO CURRENT BUF PTR
         L     R2,QABBUFA(R1)       R2->CURRENT BUFFER
         LA    R15,2480(,R2)        R15->END OF "
         CR    R3,R15               PAST END?
         BL    NEXTOTAL             NOPE.->GO CHECK IT OUT.
         TM    0(R2),X'80'          LAST QAB BUF?
         BO    PQEAVAIL             MUST BE DONE
         LA    R1,4(,R1)            R1=INDEX TO NEXT QAB BUF PTR
         ST    R1,QABIX             SAVE NEW INDEX
         L     R2,QABBUFA(R1)       R2->NEXT QAB BUF
         LTR   R2,R2                ANY BLOCK THERE?
         BNP   QEBERROR             OOPS!
         LA    R3,8(,R2)            R3->NEXT PRINTER ANCHOR
         B     NEXTOTAL                 GO DO THE NEXT QAB TOTAL
PQEAVAIL EQU   *
         LTR   R9,R9                    ANYTHING THERE?
         BNZ   MAXPQES                  YES...GET THE MAXIMUM PQE'S
         MVC   MSGAREA+4(34),=C'ALL LOCAL PRINTER QUEUES ARE EMPTY'
         BAL   R6,TPUTMSG               PUT OUT THE MESSAGE
MAXPQES  EQU   *
         B     DONE                 SKIP STUPID CODE:
         LA    R5,62                    MAXIMUM PQE'S POSSIBLE
         SR    R5,R9                    SUBTRACT NUMBER PQE'S USED
         CVD   R5,WORK                  CONVERT IT TO DECIMAL
         UNPK  MSGAREA(2),WORK+6(2)     MOVE TO MSGAREA
         OI    MSGAREA+1,X'F0'          MAKE IT NUMERIC
         MVC   MSGAREA+4(30),=C'PRINT QUEUE ELEMENTS AVAILABLE'
         BAL   R6,TPUTMSG               GO DISPLAY THE MESSAGE
DONE     EQU   *
         L     R3,QABBUFA               ADDRESS OF QAB BUFFER
         CLC   0(4,R3),=F'0'            ANY FREE PQE'S AVAILABLE
         BNE   RETURN                   YES...RETURN NOW
         BAL   R8,CLRMSG                CLEAR MESSAGE AREA
         BAL   R6,TPUTMSG               PUT OUT A BLANK LINE
         MVC   MSGAREA,=C'***** DSPRINT QUEUES ARE FULL *****'
         BAL   R6,TPUTMSG               SEND QUEUE FULL MESSAGE
RETURN   EQU   *
         CLOSE (DRQ)                    CLOSE THE FILE
         L     R13,4(0,R13)             RESTORE CALLERS SAVEAREA PTR
         RETURN (14,12),RC=0            RETURN
         PRINT NOGEN
DRQ      DCB   MACRF=GL,DSORG=PS,DDNAME=DRQ,EODAD=START
SAVEAREA DS    18F                      SAVEAREA
TABLE    DC    256X'00'                 TRANSLATE TABLE
         ORG   TABLE+X'40'
         DC    X'FF'                    FUNCTION STOPPER
         ORG   TABLE+256
WORK     DS    D                        WORK AREA FOR CVD
QABIX    DS    F                    INDEX TO BUF PTR TABLE:
QABBUFA  DS    20F                      ADDRESS OF QAB BUFFER AREAS
MSGAREA  DS    CL79                     MSG TO PUT
         LTORG
DQAB     DSECT                          QUEUE ANCHOR BLOCK DSECT
QABPTRNM DS    CL8                      PRINTER NAME
QABORQEA DS    0F                       OLDEST REQUEST ELEMENT
QABORQEB DS    H                        REL. BLK. ADDR OF REQ. ELEMENT
QABORQEO DS    H                        OFFSET WITHIN QEB FOR PQE
PQECOUNT DS    0F                       FIELD ALSO USED TO COUNT PQE'S
QABLRQEA DS    F                        LATEST REQUEST ELEMENT
         DS    CL8                      REMAINING QAB BYTES
DPQE     DSECT                          PRINT QUEUE ELEMENT DSECT
PQENEXTA DS    0F                       POINTER TO NEXT PQE
PQENEXTB DS    H                        REL. BLK. ADDR OF NEXT PQE
PQENEXTO DS    H                        OFFSET OF NEXT PQE
PQEDSN   DS    CL44                     PRINT DATA SET NAME
PQEMEMBR DS    CL8                      PDS MEMBER NAME
PQEREQ#  DS    H                        REQUEST NUMBER
         DS    CL6                      RESERVED
         DS    CL8                      PQE TIME STAMP
PQETSOID DS    CL7                      TSO USER ID
PQEDSTYP DS    X                        PQE DATA SET TYPE
LMSG     EQU   L'MSGAREA                LENGTH OF MESSAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
