FJM      TITLE     'FORMAT JQE MESSAGE'
***********************************************************************
*                                                                     *
* UPDATED FOR JES 2.1.5 ON 06/05/87 - KERMIT KISER                    *
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.4  LEVEL 8310                       *
*                      JES2 FOR SP 1.3.4                              *
*                                                                     *
*        ENTRY:  R1->  WORKAREA PTR;                                  *
*                      JQE PTR;                                       *
*                      QSE PTR;                                       *
*                      NODE TAB PTR                                   *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         MACRO
&L1      $CFCVE &VALUE=
         CVD   R0,PDW
         MVC   DDW,=X'4020202020202020'
         ED    DDW,PDW+4
         MEND
         MACRO
&L1      $CFRTC &VALUE=
         LR    R1,R0
         LA    R1,1(R1)              LEAVE A BLANK               WDPSC
         LH    R0,2(R15)
         MVC   0(8,R1),=CL8'LOCAL'
         LTR   R0,R0                       LOCAL?
         BZ    X&SYSNDX
         MVC   0(8,R1),=CL8'R'
         LA    R1,1(R1)
         CVD   R0,PDW
         MVC   DDW,=X'4020202020202020'
         ED    DDW,PDW+4
         LA    R15,DDW
         LA    R0,7
L&SYSNDX LA    R15,1(R15)
         CLI  0(R15),C' '
         BNE   M&SYSNDX
N&SYSNDX BCT   R0,L&SYSNDX
         B     X&SYSNDX
M&SYSNDX MVC   0(1,R1),0(R15)
         LA    R1,1(R1)
         B     N&SYSNDX
X&SYSNDX DS    0H
         MEND
JIDMSG   DSECT
         SPACE 1
JIDTYPE  DS    CL3                 'JOB', 'STC', OR 'TSU'          @133
JIDJNO   DS    CL5                 JOBNUMBER WITH LEADING BLANK    @133
         DS    CL1                 BLANK                           @133
JIDJNAME DS    CL8                 JOB NAME                        @133
JIDMSGLN EQU   *-JIDMSG            LENGTH OF DSECT                 @133
***********************************************************************
QSEDSECT DSECT
         SPACE 1
QSESID   DS    CL4
QSESIBSY DS    X
QSESIAFF DS    X
QSELEN   EQU   *-QSEDSECT
***********************************************************************
WORKAREA DSECT
         SPACE 1
SAVEAREA DS    18F
JQEPTR   DS    F
$QSE1    DS    F
NODEPTR  DS    F
PDW      DS    D
DDW      DS    D
COMDWORK EQU   DDW+3
COMMAND  DS    XL256
DASVOLID DS    CL6
WORKLEN  EQU   *-WORKAREA
***********************************************************************
FF       EQU   X'FF'
         $JQE
CATTSUCL EQU   X'E0'
CATTSUID EQU   X'7C'
         EJECT
FJM      ENTERWW (1),LEVEL=V1M0
         EJECT
         L     R0,8(,R1)
         ST    R0,$QSE1           SAVE QSE TAB PTR
         L     R0,12(,R1)
         ST    R0,NODEPTR         SAVE QSE TAB PTR
         L     R1,4(,R1)
         ST    R1,JQEPTR          SAVE JQE PTR
*    R1 CONTAINS A POINTER TO THE JQE
CHECK10  EQU   *
         SPACE     1
*
*        INITIALIZE FROM THE COMMAND WORK AREA  ( PCE+A0 )
*
         LA        R3,COMMAND+4        ADDRESS FOR JOBID & JOBNAME
*                                                                     *
***********************************************************************
*                                                                     *
*        COFJMSG - JOB INFORMATION OUTPUT ROUTINE                     *
*                                                                     *
*        THE PURPOSE IS TO ISSUE THE HASP608 MESSAGE. IT MIGHT        *
*        ISSUE THE HASP611 MESSAGE IF 608 CAN NOT BE COMPLETED.       *
*                                                                     *
*        ROUTINE COLLECTS JOB INFORMATION INTO THE 'COMMAND' AREA     *
*        AND INITIATES AN OUTPUT RESPONSE.                            *
*        $WAIT MAY BE ISSUED.                                         *
*                                                                     *
*        REGISTER    ENTRY                 EXIT                       *
*        R1          JQE ADDRESSABILITY    UNCHANGED                  *
*        R8          UNKNOWN               LOCAL ADDRESSABILITY       *
*        R14         RETURN ADDRESS        UNCHANGED                  *
*        R15         ENTRY ADDRESS         RETURN CODE                *
*                                          0 - DISPLAY ISSUED         *
*                                          4 - DISPLAY NOT ISSUED     *
*                                                                     *
***********************************************************************
*                                                                     *
*        DEFINITIONS FOR JOB INFORMATION MESSAGE (&OPT)               *
*                                                                     *
***********************************************************************
         SPACE 1
COFN     EQU   X'01'               DISPLAY NORMAL JOBS
COFS     EQU   X'02'               DISPLAY SYSTEM JOBS
COFT     EQU   X'04'               DISPLAY LOGON JOBS
COFJ     EQU   COFN+COFS+COFT      DISPLAY ALL JOBS
COFX     EQU   X'08'               DISPLAY JOBS IN EXECUTION
COFD     EQU   X'10'               DISPLAY JOBS ON DEVICES
COFA     EQU   COFJ+COFX+COFD      DISPLAY ACTIVE JOBS
COFI     EQU   X'20'               DISPLAY PRE-XEQ QUEUED JOBS
COFO     EQU   X'40'               DISPLAY POST-XEQ QUEUED JOBS
COFP     EQU   X'80'               DISPLAY QUEUED FOR PRT/PUN
COFQ     EQU   COFJ+COFI+COFO+COFP DISPLAY QUEUED JOBS
COFU     EQU   COFJ+COFI+COFO+COFX+COFP+COFD DISPLAY UNCONDITIONAL
         EJECT                                                     @133
***********************************************************************
*                                                                     *
*        DEFINITIONS FOR 2ND OPTION FLAG (&OPT2)                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                   @133
COFSPLAG EQU   B'00000001'         SPOOL OPERAND SPECIFIED FLAG    @133
         SPACE 2                                                   @133
***********************************************************************
*                                                                     *
*        DEFINITIONS FOR MESSAGE DEFINED IN COMMAND AREA              *
*                                                                     *
***********************************************************************
         SPACE 1                                                   @133
COFJOB   EQU   COMMAND+4,3           TEXT 'JOB', 'STC', OR 'TSU'
COFJNO   EQU   COFJOB+3,5          JOB NUMBER WITH LEADING BLANK
COFJNAME EQU   COFJNO+6,8          JOB NAME
COFQUE   EQU   COFJNAME+9,8        TEXT 'AWAITING'
COFQUEC  EQU   COFJNAME+9,9        TEXT 'AWAITING '                SPR2
COFQX    EQU   COFQUE+9,9          TEXT 'EXECUTION'
COFQXC   EQU   COFQX+10,1          CLASS
COFQXU   EQU   COFQX,11            TEXT 'EXECUTION *'
COFQXCT  EQU   COFQX,12            TEXT 'CONVERSION *'             SPR2
COFQXCTC EQU   COFQXCT+11,1        CLASS IN 'CONVERSION *'         SPR2
COFQDUMP EQU   COFQUE+9,4          TEXT 'DUMP'                     SPR2
COFQT    EQU   COFQUE+9,7          TEXT 'XMITTER'                  SPR2
COFXMT   EQU   COFQT+8,11          EXECUTION NODE (EBCDIC)         SPR2
COFPRT   EQU   COFQUE,3            TEXT 'PRT'                      SPR2
COFPRTR  EQU   COFPRT+3,12         PRINT NODE/UNIT/REMOTE ROUTING  SPR2
COFPUN   EQU   COFPRT+15,3         TEXT 'PUN'                      SPR2
COFPUNR  EQU   COFPUN+3,12         PUNCH NODE/UNIT/REMOTE ROUTING  SPR2
COFQOUT  EQU   COFQX,6             TEXT 'OUTPUT'                   SPR2
COFPURGE EQU   COFQX,5             TEXT 'PURGE'
COFPRIO  EQU   COFPUNR+12,4        TEXT 'PRIO'                     SPR2
COFPRI   EQU   COFPRIO+5,2         PRIORITY
COFFLAGS EQU   COFPRI+3,9          'HOLD', 'PURGE', 'DUPLICATE'
COFSID   EQU   COFFLAGS+10,4       FIRST SID NAME
COFSIDX  EQU   COFSID+5,24         REST OF SID'S
COFINDP  EQU   COFSIDX+25,3        DESIGNATOR FOR INDEPENDENT MODE
COFSPMSG EQU   COFINDP+3,18        TEXT ' SPOOL(S) INACTIVE'       @133
COFSPHLT EQU   COFINDP+3,17        TEXT ' SPOOL(S) HALTING'        @133
COFONPAR EQU   COFSPMSG+18,5       TEXT ' ON ('                    @133
COFSPNON EQU   COFONPAR+4,4        TEXT 'NONE'                     @133
COFSPLID EQU   COFONPAR+5,L'DASVOLID  VOLSER ID, 6 CHARS           @133
COFCOMMA EQU   COFSPLID+L'DASVOLID,1  TEXT ','                     @133
COFSPLX  EQU   COFCOMMA+1,218      TEXT FOR THE REST 31 SPOOLS     @133
COFOPT   EQU   COFSPLX+218,1       OPTION SPECIFIED                @133
COFAFF   EQU   COFOPT+1,1          ACTIVE SID WHEN SPECIFIED       @133
COFOPT2  EQU   COFAFF+1,1          2ND OPTION FLAG                 @133
COFSEC   EQU   COFOPT2+1,2         SECURITY FIELD FOR $WTO'S       @133
COFLNGTH EQU   COFSEC+2,2          LENGTH OF MSG                   @133
COFAX    EQU   COFQUE,9            TEXT 'EXECUTING'
COFAXC   EQU   COFAX+10,1          CLASS WHEN EXECUTING
COFAXCT  EQU   COFAX,12            TEXT 'CONVERTING *'             SPR2
COFAXCTC EQU   COFAXCT+11,1        CLASS WHEN CONVERTING           SPR2
COFON    EQU   COFAX,2             TEXT 'ON'
COFDEV   EQU   COFAX+3,8           TEXT DEVICE NAME
COFAXT   EQU   COFDEV+9,COFSPMSG-COFPRIO ACTIVE JOB MSG TRAILER    @133
COFQOT   EQU   COFQOUT+7,L'COFAXT  QUEUED FOR OUTPUT TRAILER       @133
COFQPT   EQU   COFPURGE+6,L'COFAXT QUEUED FOR PURGE TRAILER        @133
COFAXL   EQU   COFPRIO-(COFDEV+9) LENGTH TO SUBTRACT FOR ACTIVE MSG
COFQOL   EQU   COFPRIO-(COFQOUT+7) LNG TO SUBTRACT FOR Q'S FOR OUT
COFQPL   EQU   COFPRIO-(COFPURGE+6) LNG TO SUBTRACT FOR Q'S FOR PG
         EJECT
***********************************************************************
*                                                                     *
*        CHECK FOR JOB TYPE AND SPOOL RESIDENCY                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                   @133
         USING JQE,R5              PROVIDE JQE ADDRESSABILITY       N30
         SPACE 1                                                   SPR2
COFJMSG  EQU   *
         SPACE 1                                                   SPR2
*        LA    R4,1                CLEAR WARNING INDICATOR          N30
         LR    R5,R1               RELOAD JQE ADDRESS             @SPR2
         LA    R15,COFN            ASSUME BATCH JOB                SPR2
         TM    JQEFLAG3,JQE3JOB    BATCH JOB...                    SPR2
         BZ    COFFTYP             BR IF YES                       SPR2
         LA    R15,COFT            MUST BE A TSU                   SPR2
         SPACE 1                                                   SPR2
COFFTYP  EQU   *
         SPACE 1                                                   @133
COFALLVO TM    JQETYPE,$XEQ        EXECUTION OR CONVERT QUEUE      @133
         BZ    COFJMT              BRANCH IF NOT
         CLI   JQETYPE,$XEQ        TEST FOR CONVERTER
         BNE   COFJMX              NO--TRY FOR EXECUTION
         EJECT                                                     @133
***********************************************************************
*                                                                     *
*        JOB IN CONVERSION QUEUE                                      *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
         BAL   R6,COFJMB           CREATE BASIC MESSAGE             N30
         BAL   R6,COFJMAFQ         ADD QUEUED SYSTEM NAMES TO MSG   N30
         MVC   COFAXCT,=C'CONVERTING *'  ASSUMING JOB BUSY SETUP   SPR2
         MVC   COFAXCTC,JQEJCLAS   ASSUME THIS IS NOT TSU OR STC       C
                                     AND SET CLASS                 SPR2
         SPACE 1                                                   @133
COFTSUT  CLI   JQEJCLAS,CATTSUCL   IS THIS A TSU...                SPR2
         BNE   COFBUSY             IF NO - GO TEST BUSY ASSUMPTION SPR2
         MVI   COFAXCTC,CATTSUID   CHANGE CLASS FOR TSU            SPR2
COFBUSY  TM    JQEFLAG1,JQE1BUSY   TEST BUSY ASSUMPTION...         SPR2
         BNZ   COFQMADS            DISPLAY AND EXIT IF BUSY            C
                                   OTHERWISE                       SPR2
         MVC   COFQUEC,=C'AWAITING '    SETUP NOT BUSY             SPR2
         MVC   COFQXCT,=C'CONVERSION *' FIXED TEXT                 SPR2
         MVC   COFQXCTC,JQEJCLAS   ASSUME THIS IS NOT A TSU OR STC     C
                                     AND SET CLASS                 SPR2
         SPACE 1                                                   @133
COFTSUT1 CLI   JQEJCLAS,CATTSUCL   IS THIS A TSU...                SPR2
         BNE   COFQMADS            IF NO - DISPLAY AND EXIT        SPR2
         MVI   COFQXCTC,CATTSUID   CHANGE CLASS FOR TSU            SPR2
         B     COFQMADS            DISPLAY AND EXIT
         SPACE 1                                                   SPR2
         EJECT                                                     @133
***********************************************************************
*                                                                     *
*        JOB IN EXECUTION QUEUE - COULD HAVE SOME SPINS IN OUTPUT     *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMX   TM    JQEFLAG1,JQE1BUSY   TEST FOR ACTIVE
         BZ    COFJMQX             BR IF NOT
         BAL   R6,COFJMB           CREATE BASIC MESSAGE             N30
         IC    R15,JQEFLAG1        PICK-UP ACTIVE BIT
         BAL   R6,COFJMAFA         ADD ACTIVE SYSTEM NAME TO MSG    N30
         MVC   COFAXT,COFPRIO      MOVE MSG FOR ACTIVE IN XEQ
         MVC   COFAX,=C'EXECUTING' SET FIXED TEXT                  SPR2
         MVC   COFAXC,JQEJCLAS     ASSUME THIS IS NOT TSU OR STC       C
                                     AND SET CLASS                 SPR2
COFTSUT2 CLI   JQEJCLAS,CATTSUCL   IS THIS A TSU...                SPR2
         BNE   COFJMDAX            IF NO - GO PICK UP CURRENT LEN  SPR2
         MVI   COFAXC,CATTSUID     CHANGE CLASS FOR TSU            SPR2
         SPACE 1                                                   SPR2
COFJMDAX DS    0H                                                   N30
         LH    R15,COFLNGTH        PICK UP CURRENT LENGTH          SPR2
         LA    R0,COFAXL           GET CHANGE IN LENGTH            SPR2
         SLR   R15,R0              REDUCE LENGTH                   SPR2
         STH   R15,COFLNGTH        SET NEW LENGTH                  SPR2
         BAL   R6,COFJWTO          ISSUE MESSAGE TO OPERATOR        N30
         SPACE 1                                                    N30
COFJMDXC DS    0H
         B     COFJMOK             UNCONDITIONAL RETURN            SPR2
         EJECT                                                     @133
***********************************************************************
*                                                                     *
*        JOB AWAITING EXECUTION                                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMQX  EQU   *                   CALLER WANT PRE-EXECUTION
         BAL   R6,COFJMB           CREATE BASIC MESSAGE             N30
         BAL   R6,COFJMAFQ         ADD QUEUED SYSTEM NAMES TO MSG   N30
         MVC   COFQUE,=C'AWAITING' SET
         MVC   COFQX,=C'EXECUTION *' TEXT
         MVC   COFQXC,JQEJCLAS     ASSUME THIS IS NOT TSU OR STC       C
                                     AND SET CLASS                 SPR2
COFTSUT3 CLI   JQEJCLAS,CATTSUCL   IS THIS A TSU...                SPR2
         BNE   COFJMDQX            IF NO - GO ISSUE MESSAGE TO OP  SPR2
         MVI   COFQXC,CATTSUID     CHANGE CLASS FOR TSU            SPR2
COFJMDQX DS    0H                  ISSUE QUEUED FOR XEQ MESSAGE
         BAL   R6,COFJWTO          ISSUE MESSAGE TO OPERATOR        N30
         B     COFJMDXC            CONTINUE DEVICE SCAN
         SPACE 1                                                   SPR2
COFJMT   CLI   JQETYPE,$XMIT       JOB ON TRANSMISSION QUEUE       SPR2
         BNE   COFJMD              BRANCH IF NOT ON TRANSMISSION QUEUE
         TM    JQEFLAG1,JQE1BUSY   IS JOB BUSY                     SPR2
         BNZ   COFJMD              TRY DEVICE IF YES               SPR2
         BAL   R6,COFJMB           CREATE BASIC MESSAGE             N30
         BAL   R6,COFJMAFQ         ADD QUEUED SYSTEM NAMES       @133RY
         MVC   COFQUE,=C'AWAITING' SET                             SPR2
         MVC   COFQT(L'JQEXEQND),JQEXEQND  SEPARATE NODE ID        SPR2
         MVC   COFQT+2(2),$ZEROES  ZERO 'REMOTE' FIELD             SPR2
         LA    R15,COFQT           POINT TO ROUTE CODE             SPR2
         LA    R0,COFXMT-1         POINT TO TEXT AREA              SPR2
        $CFRTC ,                   CONVERT TO EBCDIC               SPR2
         MVC   COFQT,=C'XMITTER'   TEXT                            SPR2
         B     COFJMDQX            DISPLAY AND THEN DO ANY SYSOUTS SPR2
         EJECT
***********************************************************************
*                                                                     *
*        SEARCH FOR DEVICE ACTIVITY                                   *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMD   EQU   *                                                  @SPR2
         B     COFJMQO             UNCONDITONAL SKIP IT           @SPR2
***********************************************************************
*        JOB QUEUED FOR OUTPUT                                        *
***********************************************************************
         SPACE 1
COFJMQO  EQU   *                   TEST FOR OUTPUT QUEUED           N30
         CLI   JQETYPE,$OUTPUT     TEST FOR IN OUTPUT PHASE        SPR2
         BNE   COFJMQPP            NO--PRT/PUN                     SPR2
         BAL   R6,COFJMB           CREATE BASIC MESSAGE             N30
         BAL   R6,COFJMAFQ         ADD QUEUED SYSTEM NAMES TO MSG   N30
         MVC   COFQUE,=C'      IN'  SET 'IN' IN MSG TEXT           @133
         TM    JQEFLAG1,JQE1BUSY   TEST FOR BUSY                   @133
         BNZ   COFJNOP             DISPLAY IN OUTPUT MSG IF YES    @133
         MVC   COFQUE,=C'AWAITING' SET AWAITING IN TEXT
COFJNOP  MVC   COFQOUT,=C'OUTPUT'  SET QUEUED FOR 'OUTPUT'         @133
         MVC   COFQOT,COFPRIO      MOVE MESSAGE FOR Q'D FOR OUTPUT
         LH    R15,COFLNGTH        PICK UP CURRENT LENGTH          SPR2
         LA    R0,COFQOL           GET CHANGE IN LENGTH            SPR2
         SLR   R15,R0              REDUCE LENGTH                   SPR2
         STH   R15,COFLNGTH        SET NEW LENGTH                  SPR2
         B     COFQMADS            AND SEND MESSAGE
         SPACE 2
***********************************************************************
*        TEST FOR JOB ON PRINT/PUNCH QUEUE                            *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMQPP CLI   JQETYPE,$HARDCPY    TEST FOR QUEUED FOR HARD COPY   SPR2
         BNE   COFJMQPG            NO--TRY QUEUED FOR PURGE        SPR2
         BAL   R6,COFJMB           CREATE BASIC MESSAGE             N30
         MVC   COFPRT,=CL3'PRT'    SET PRINT AND PUNCH             SPR2
         MVC   COFPUN,=CL3'PUN'     QUEUE IDENTIFIERS              SPR2
         SPACE 1                                                   SPR2
         LA    R0,COFPRTR          POINT TO RECEIVE AREA
         LA    R15,JQEPRTRT        POINT TO PRINT ROUTE FIELD
        $CFRTC ,                     CONVERT TO PRINTABLE          @133
         LA    R0,COFPUNR          POINT TO RECEIVE AREA
         LA    R15,JQEPUNRT        POINT TO PUNCH ROUTE FIELD
        $CFRTC ,                     CONVERT TO PRINTABLE          @133
         SPACE 1                                                   SPR2
         LH    R15,COFLNGTH        PICK UP LENGTH OF MESSAGE       SPR2
         LA    R14,COFJOB(R15)     POINT TO NEXT AVAILABLE BYTE    SPR2
         MVC   0(3,R14),=CL3'ANY'  SET AFFINITY TO DEFAULT         SPR2
         LA    R15,3(,R15)         INCREMENT LENGTH                SPR2
         STH   R15,COFLNGTH        SET NEW LENGTH                  SPR2
         B     COFQMADS            AND SEND COMPLETED MESSAGE
         EJECT
***********************************************************************
*                                                                     *
*        TEST FOR JOB ON PURGE QUEUE                                  *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMQPG CLI   JQETYPE,$PURGE      ON PURGE QUEUE
         BNE   COFJMQD             NO--TRY QUEUED FOR DUMP         SPR2
         BAL   R6,COFJMB           CREATE BASIC MESSAGE            SPR2
         BAL   R6,COFJMAFQ         ADD QUEUED SYSTEM NAMES TO MSG   N30
         MVC   COFQUE,=C'AWAITING' SET 'AWAITING' FOR PURGE
         MVC   COFPURGE,=C'PURGE'  SET FOR 'PURGE' PROCESSOR
         MVC   COFQPT,COFPRIO      ADJUST MESSAGE FOR PURGE
         LH    R15,COFLNGTH        PICK UP LENGTH OF MESSAGE       SPR2
         LA    R0,COFQPL           GET CHANGE IN LENGTH            SPR2
         SLR   R15,R0              SET NEW LENGTH                  SPR2
         STH   R15,COFLNGTH        SET NEW LENGTH                  SPR2
         B     COFQMADS            AND SEND MESSAGE                SPR2
         SPACE 1                                                   SPR2
***********************************************************************
*                                                                     *
*        TEST FOR JOB ON DUMP QUEUE                                   *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMQD  CLI   JQETYPE,X'03'       ON OFFLOAD QUEUE...             SPR2
         BNE   COFJMNOK            EXIT IF NO (NO DISPLAY)         SPR2
         BAL   R6,COFJMB           CREATE BASIC MESSAGE            SPR2
         BAL   R6,COFJMAFQ         ADD QUEUED SYSTEM NAMES       @133RY
         MVC   COFQUE,=C'AWAITING'   INSERT                        SPR2
         MVC   COFQDUMP,=C'DUMP'      STATUS                       SPR2
         LH    R15,COFLNGTH        PICK UP LENGTH OF MESSAGE       SPR2
         SPACE 3                                                   SPR2
COFQMADS BAL   R6,COFJWTO          ISSUE FINAL MESSAGE TO OPERATOR  N30
         SPACE 1                                                    N30
COFJMOK  EQU   *                                                    N30
COFJMNOK EQU   *
         XC    COMMAND(4),COMMAND CLEAR PREFIX
         MVC   COMMAND(2),COFLNGTH SET LEN
         LEAVEWW
         EJECT                                                      N30
***********************************************************************
*                                                                     *
*        SUBROUTINE TO CONTINUE DCT SCAN BEGUN BY COFJDCT             *
*                                                                     *
***********************************************************************
         SPACE 1                                                    N30
***********************************************************************
*                                                                     *
*        ADD ACTIVE SYSTEM NAME                                       *
*                                                                     *
***********************************************************************
         SPACE 1
COFJMAFA DS    0H                  PICK-UP AFFINITY IN R15 FOR NAME
         N     R15,=A(JQE1BUSY)    TURN OFF NON-BUSY BITS
         BCTR  R15,0               LESS ONE FOR DISPLACEMENT
         MH    R15,=AL2(QSELEN)    TIMES ELEMENT SIZE             @SPR2
         AL    R15,$QSE1           PLUS TABLE START ADDR
         SPACE 1                                                   SPR2
         USING QSEDSECT,R15        QSE ADDRESSABILITY
         SPACE 1                                                   SPR2
         LH    R14,COFLNGTH        PICK UP LENGTH                  SPR2
         LA    R14,COFJOB(R14)     PT TO CURRENT MSG END
         MVC   0(L'QSESID,R14),QSESID PUT SYSTEM NAME IN MESSAGE
         LA    R15,COFJOB          PT TO MSG BEGINNING
         LA    R14,L'QSESID(,R14)  PT TO MSG ENDING
         SLR   R14,R15             COMPUTE NEW LENGTH
         STH   R14,COFLNGTH        SET MESSAGE LENGTH              SPR2
         BR    R6                   AND RETURN                      N30
         SPACE 1                                                    N30
         DROP  R15                 DROP QSE ADDRESSABILITY
         EJECT
***********************************************************************
*                                                                     *
*        SUBROUTINE TO BUILD BASIC JOB INFORMATION MESSAGE            *
*                                                                     *
***********************************************************************
         SPACE 1                                                   SPR2
COFJMB   EQU   *
         LR    R1,R5               SET JQE ADDRESS FOR SUBROUTINE  @133
         LA    R0,COMMAND+4        SET MESSAGE AREA ADDRESS        @133
***********************************************************************
*                                                                     *
*        COFJID  --  INSERTS THE FOLLOWING STANDARD JOB INFORMATION   *
*                    INTO A MESSAGE AREA.                             *
*                                                                     *
*        JOB TYPE   - JOB,STC,TSU                                     *
*        JOB NUMBER - JOB NUMBER WITH LEADING BLANK                   *
*        JOB NAME   - JOBNAME PADDED TO 8 CHARACTERS                  *
*                                                                     *
*     REGISTER      ENTRY                   EXIT                      *
*        R3      ADDRESS OF               ADDRESS OF NEXT             *
*                  MESSAGE AREA             AVAILABLE BYTE            *
*        R1      JQE ADDRESS              UNCHANGED                   *
*                                                                     *
*     NOTE                                                            *
*        COMDWORK WILL CONTAIN THE EBCDIC JOB NUMBER                  *
*                                                                     *
***********************************************************************
         SPACE 1
         USING JIDMSG,R3           PROVIDE MESSAGE ADDRESSABILITY  @133
         SPACE 1
COFJID   EQU   *   $SAVE  ,         SAVE CALLER'S REGISTERS
*      WE NEED TO SAVE SOME REGS HERE (I DON'T KNOW WHERE)
*        LR    R8,R15              RELOAD BASE ADDRESS             @133
         LR    R3,R0               POINT TO MESSAGE BUILD AREA     @133
         MVI   JIDMSG,C' '         INSERT BLANK AND                @133
         MVC   JIDMSG+1(JIDMSGLN-1),JIDMSG  CLEAR FIELD            @133
         SPACE 1
         MVC   JIDTYPE,=C'JOB'     ASSUME BATCH JOB                @133
         TM    JQEFLAG3,JQE3JOB    IS THIS A BATCH JOB...          @133
         BZ    COFJIDC               YES - CONTINUE MESSAGE        @133
         MVC   JIDTYPE,=C'STC'     ASSUME STARTED TASK             @133
         TM    JQEFLAG3,JQE3STC    IS THIS A STC...                @133
         BO    COFJIDC               YES - CONTINUE MESSAGE        @133
         MVC   JIDTYPE,=C'TSU'     NO - MUST BE A TSU              @133
         EJECT
COFJIDC  LH    R0,JQEJOBNO         PICK UP JOB NUMBER              @133
COFJIDE $CFCVE  VALUE=(R0)         CONVERT JOB NBR TO EBCDIC       @133
         MVC   JIDJNO,COMDWORK     MOVE JOB NUMBER TO MSG          @133
         SPACE 1
         MVC   JIDJNAME,JQEJNAME   INSERT THE JOB NAME             @133
         LA    R0,JIDMSGLN(,R3)    POINT TO NEXT AVAIL MSG BYTE    @133
*
*     END OF COFJID ROUTINE
*
         MVI   COFQUE-1,C' '       BLANK OUT REST OF               @133
         MVC   COFQUE(COFSPMSG-COFQUE),COFQUE-1  MESSAGE AREA      @133
         MVC   COFPRIO,=C'PRIO'    SET 'PRIO'
         SLR   R0,R0               ZERO PRIORITY
         IC    R0,JQEPRIO          PICK UP PRIORITY * 16
         SRA   R0,4                DIVIDE BY 16
        $CFCVE ,                   CONVERT TO EBCDIC
         MVC   COFPRI,COMDWORK+5-L'COFPRI MOVE PRIORITY
         LA    R15,COFFLAGS        SET ADDRESS OF NEXT MESSAGE AREA
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2+JQE1PURG+JQE1OCAN
*                                  TEST FOR ANY JOB FLAGS
         BZ    COFJMBB             NONE--FILL IN THE AFFINITIES
         MVC   COFFLAGS(4),=C'HOLD'  ASSUME JOB IS HELD
         LA    R15,5(,R15)         PT TO NEXT AVAILABLE MSG AREA
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1  TEST FOR 'HELD'
         BNZ   COFJMBB             IF HELD--GO TO AFFINITIES FILL-IN
         MVC   COFFLAGS(5),=C'PURGE'  ASSUME PURGE
         LA    R15,1(,R15)         PT TO NEXT AVAILABLE MSG AREA
         TM    JQEFLAG1,JQE1PURG   TEST FOR SAME
         BO    COFJMBB             YES--FILL-IN AFFINITIES
         MVC   COFFLAGS(6),=C'CANCEL'  ASSUME 'CANCELLED'
         LA    R15,1(,R15)         PT TO NEXT AVAILABLE MSG AREA
         TM    JQEFLAG1,JQE1OCAN   TEST FOR CANCELLED
         BO    COFJMBB             YES--FILL-IN AFFINITIES
         MVC   COFFLAGS,=C'DUPLICATE'  MUST BE DUPLICATE JOB NAME
         LA    R15,3(,R15)         PT TO NEXT AVAILABLE MSG BYTE
         SPACE 1                                                   @133
COFJMBB  DS    0H                  COMPLETE MESSAGE BODY AND SVAE LN
         LA    R14,COFJOB          GET ADDRESS OF MSG BEGINNING
         SLR   R15,R14             COMPUTE MESSAGE LENGTH
         STH   R15,COFLNGTH        SET LENGTH                      SPR2
         BR    R6                   AND RETURN                      N30
         EJECT
***********************************************************************
*                                                                     *
*        ADD QUEUED SYSTEM NAMES TO MESSAGE                           *
*                                                                     *
***********************************************************************
         SPACE 1
COFJMAFQ LH    R15,COFLNGTH        ADD QUEUED NAMES, GET LENGTH    @133
         LA    R15,COFJOB(R15)     PT TO CURRENT MSG END
         TM    JQEFLAG2,JQE2SAF    TEST FOR QUEUED TO 'ANY'
         BNO   COFJMAF1            NO--PLACE ALL NAMES IN MSG
         MVC   0(3,R15),=C'ANY'    SET AFFINITY SYS NAMES TO 'ANY'
         LA    R15,3(,R15)         PT TO NEW END OF MSG
         B     COFJMAF2            AND EXIT
         SPACE 1                                                   SPR2
COFJMAF1 DS    0H                  ADD SPECIFIC SYS NAMES
         L     R14,$QSE1           POINT TO 1ST QSE
         USING QSEDSECT,R14        QSE ADDRESSABILITY
COFJMAF3 IC    R2,QSESIAFF         PICK UP SYSTEM AFFINITY BIT    @SPR2
         EX    R2,COFJMAFF         TEST FOR JOB QUEUED TO THIS SYS
         BZ    COFJMAF4            NO--SEARCH ALL ELEMENTS
         MVC   0(L'QSESID,R15),QSESID YES--PUT NAME IN MSG
         LA    R15,L'QSESID+1(,R15) COMPUTE NEXT NAME LOCATION
COFJMAF4 DS    0H                  CYCLE THROUGH ALL ELEMENTS
*KK      TM    QSESTAT,QSELAST     TEST FOR LAST ELEMENT           SPR2
         LA    R14,QSELEN(,R14)    BUMP TO NEXT QSE               @SPR2
         CLC   QSESID,=CL4' '        BLANK                       WDPSC
         BE    COFKK               NOT LAST LOOP
         CLC   QSESID,=XL4'00'       ZERO                        WDPSC
         BZ    COFJMAF3            NOT LAST LOOP
COFKK    BCTR  R15,0               REDUCE MSG FOR XTR BLANK
COFJMAF2 DS    0H                  TEST FOR 'IND' MODE OF OPERATION
         TM    JQEFLAG2,JQE2IND    TEST FOR 'IND' MODE
         BZ    COFJMAF5            NO--SEND MESSAGE AS IS
         MVC   1(3,R15),=C'IND'    SET 'IND ' MODE IN MESSAGE
         LA    R15,4(,R15)         PT TO END OF MESSAGE
COFJMAF5 DS    0H                  COMPUTE MESSAGE LENGTH
         LA    R14,COFJOB          PT TO MSG BEGINNING
         SLR   R15,R14             COMPUTE NEW LENGTH
         STH   R15,COFLNGTH        SET NEW LENGTH                  SPR2
         BR    R6                   AND RETURN                      N30
         SPACE 1
COFJMAFF TM    JQEFLAG2,*-*        **** EXECUTE ONLY ****
         SPACE 1                                                   @133
         DROP  R14                 DROP QSE ADDRESSABILITY
         EJECT
***********************************************************************
*                                                                     *
*        SEND MESSAGE FOR JOB ACTIVITY                                *
*                                                                     *
***********************************************************************
         SPACE 1
COFJWTO  DS    0H                  CREATE MESSAGE OUTPUT
         BR    R6                 NOP
$ZEROES  DC    XL2'00'
         LTORG     ,
         END       ,
