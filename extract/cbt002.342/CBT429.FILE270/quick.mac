*          DATA SET 761KKQUICK AT LEVEL 001 AS OF 08/30/82
       IDENTIFICATION DIVISION.
       PROGRAM-ID. QUICK.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT FILEOUT ASSIGN UT-S-FILEOUT.
           SELECT SCREEN  ASSIGN UT-S-SCREEN.
           SELECT CRSADDR ASSIGN UT-S-CRSADDR.

       DATA DIVISION.
       FILE SECTION.
       FD  FILEOUT
           BLOCK 0
           LABEL STANDARD.
       01  FILEOUT-REC PIC X(80).

       FD  SCREEN
           BLOCK 0
           LABEL STANDARD.
       01  SCREEN-REC  PIC X(80).

       FD  CRSADDR
           BLOCK 0
           LABEL STANDARD.
       01  CRSADDR-REC.
           05  FILLER        PIC XX.
           05  CRSADDR-LOAD  PIC X(50).
           05  FILLER        PIC X(28).

       WORKING-STORAGE SECTION.
       77  WS-SCRUFF         PIC S9(7) COMP-3 VALUE +0.
       77  WS-SCRUFF2        PIC S9(7) COMP-3 VALUE +0.
       77  WS-BUILD          PIC S9(7) COMP-3 VALUE +0.
       77  WS-SCREEN         PIC S9(7) COMP-3 VALUE +0.
       77  SAVE-ATTR         PIC XX    VALUE SPACE.
       77  SAVE-SCRUFF2      PIC XX    VALUE SPACE.
       77  END-OF-LINE       PIC XXX   VALUE SPACE.
       77  DATA-FLAG         PIC X     VALUE SPACE.
       77  WS-EOF            PIC X     VALUE SPACE.

       01  SCREEN-VALUES.
           05  VALUE-1.
               10  V-1A PIC X(13) VALUE '         LIT1'.
               10  V-1B PIC X     VALUE SPACE.
               10  V-1C OCCURS 8 TIMES PIC X.
           05  VALUE-2.
               10  V-2A PIC X(15) VALUE '         DC   X'.
               10  V-2B PIC X     VALUE QUOTE.
               10  V-2C PIC XX    VALUE 'C3'.
               10  V-2D PIC X     VALUE QUOTE.
           05  VALUE-3.
               10  V-3A PIC X(15) VALUE '         DC   X'.
               10  V-3B PIC X     VALUE QUOTE.
               10  V-3C PIC X(20) VALUE '115D7E1140403C404000'.
               10  V-3D PIC X     VALUE QUOTE.
           05  VALUE-4.
               10  V-4A PIC X(15) VALUE '         DC   X'.
               10  V-4B PIC X     VALUE QUOTE.
               10  V-4C PIC XX    VALUE '1D'.
               10  V-4D PIC XX    VALUE 'F8'.
               10  V-4E PIC X     VALUE QUOTE.
           05  VALUE-5.
               10  V-5A PIC X(15) VALUE '         DC   C'.
               10  V-5B PIC X     VALUE QUOTE.
           05  VALUE-6.
               10  V-6A PIC X(13) VALUE '         LIT2'.
           05  CURSOR-DATA-1.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC XX    VALUE '13'.
               10  FILLER PIC X     VALUE QUOTE.
           05  CURSOR-DATA-2.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC XX    VALUE '11'.
               10  CURSOR-ADDRESS   PIC XXXX        VALUE '4040'.
               10  FILLER PIC XX    VALUE '13'.
               10  FILLER PIC X     VALUE QUOTE.
           05  ADDRESS-TABLE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '114040'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C150'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C260'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C3F0'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C540'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C650'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C760'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11C8F0'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '114A40'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '114B50'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '114C60'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '114DF0'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '114F40'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '115050'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D160'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D2F0'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D440'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D550'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D660'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D7F0'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '11D940'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '115A50'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '115B60'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(15) VALUE '         DC   X'.
               10  FILLER PIC X     VALUE QUOTE.
               10  FILLER PIC X(6)  VALUE '115CF0'.
               10  FILLER PIC X     VALUE QUOTE.
           05  START-ADDRESS REDEFINES ADDRESS-TABLE.
               10  STARTING-ADDRESS OCCURS 24 TIMES PIC X(23).

       01  CRSADDR-TAB.
           05  CRSADDR-TABLE OCCURS 24 TIMES.
               10  CRSADDR-COLUMNS.
                   15  CRSADDR-80 OCCURS 80 TIMES.
                       20  FILLER        PIC X.
                       20  CRSADDR-ENTRY PIC XXXX.
               10  CRSADDR-LOAD-COLUMNS
                   REDEFINES CRSADDR-COLUMNS.
                   15  CRSADDR-LOAD-BLOCK OCCURS 8 TIMES.
                       20  CRSADDR-LOAD-ENTRY PIC X(50).

       01  BUILD-LINE.
           05  BUILD-DATA.
               10  FILLER PIC X(24).
               10  BUILD-DATA-ATTR PIC XX.
               10  FILLER PIC X(54).
           05  BUILD-TABLE REDEFINES BUILD-DATA.
               10  FILLER PIC X(16).
               10  BUILD-DATA-TABLE OCCURS 64 TIMES PIC X.

       01  MENU PIC X(2028).

       01  PASSREC.
           05  IOPARM     VALUE SPACES    PIC X(8).
           05  OUTLEN PIC S9(4) COMP.
           05  OUTBUFF.
               10  FILLER                 PIC X(12).
               10  OUTBUFF-TABLE OCCURS 24 TIMES.
                   15  FILLER             PIC X(5).
                   15  OUTBUFF-ENTRY      PIC X(79).
           05  INLEN  PIC S9(4) COMP SYNC.
           05  INBUFF.
               10  AID-BYTE    PIC X.
               10  FILLER      PIC X(2027).
           05  RETLEN                               PIC S9(4) COMP.
           05  SCRUF.
               10 SCRUFF OCCURS 24 TIMES.
                   15  SCRUFF2 OCCURS 80 TIMES PIC X.
           05  SCRUFF3 REDEFINES SCRUF.
               10  SCRUFF4 OCCURS 24 TIMES.
                   15  FILLER PIC X.
                   15  SCRUFF4-SPACE PIC X(79).

       LINKAGE SECTION.

       01  ARG.
           05  ARG-LENGTH        PIC S9(4) COMP.
           05  HIGH-PROTECT      PIC X.
           05  LOW-PROTECT       PIC X.
           05  HIGH-UNPROTCT     PIC X.
           05  LOW-UNPROTCT      PIC X.
           05  FILLER            PIC X.
           05  CURSOR            PIC X.
           05  SCREEN-NAME       OCCURS 8 TIMES PIC X.

       PROCEDURE DIVISION USING ARG.

      ***** LOGIC CONTROL *****

       INIT.
           PERFORM 050-INITIAL-PROCEDURES.

       SCREEN-INPUT.
           PERFORM 060-WRITE-SCREEN.
           CALL 'TRNEOF' USING SCRUF.
           IF AID-BYTE = '3' OR 'C'
           MOVE 5 TO RETURN-CODE
           CLOSE FILEOUT
           STOP RUN.

       PROCESS-SCRUFF.
           MOVE +0 TO WS-SCRUFF.
           PERFORM 070-SCAN-SCRUFF UNTIL WS-SCRUFF > +24.
           MOVE SPACES TO BUILD-LINE.
           PERFORM 156-SET-CURSOR-2.
           MOVE SPACES TO BUILD-LINE.
           MOVE VALUE-6 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.

       EOJ.
           OPEN OUTPUT SCREEN.
           PERFORM 041-UNLOAD-SCREEN.
           CLOSE FILEOUT SCREEN.
           STOP RUN.

      ***** MODULES *****

       041-UNLOAD-SCREEN SECTION.
           MOVE +0 TO WS-SCRUFF.
       041-PROCESS.
           ADD +1 TO WS-SCRUFF.
           IF WS-SCRUFF > +24
                GO TO 041-EXIT.
           MOVE SCRUFF4-SPACE (WS-SCRUFF) TO SCREEN-REC.
           WRITE SCREEN-REC.
           GO TO 041-PROCESS.
       041-EXIT.

       050-INITIAL-PROCEDURES SECTION.
           OPEN OUTPUT FILEOUT INPUT SCREEN CRSADDR.
           CALL 'SCGEN1' USING MENU.
           MOVE MENU TO OUTBUFF.
           PERFORM 051-LOAD-OUTBUFF.
           MOVE +0 TO WS-SCRUFF.
           PERFORM 053-LOAD-CRSADDR-TABLE 8 TIMES.
           MOVE ' ' TO WS-EOF.
           CLOSE SCREEN CRSADDR.
       050-INITIALIZE-IOPARM.
           MOVE 'SBXXXXXB' TO IOPARM.
       050-INITIALIZE-LENGTH.
           MOVE +2028 TO OUTLEN INLEN.
       050-INITIALIZE-SCREEN.
           MOVE SPACES TO BUILD-LINE.
           PERFORM 180-LOAD-SCREEN-NAME 8 TIMES.
           MOVE VALUE-1 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.
           MOVE SPACES TO BUILD-LINE.
           MOVE VALUE-2 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.
           MOVE SPACES TO BUILD-LINE.
           MOVE VALUE-3 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.

       051-LOAD-OUTBUFF SECTION.
           MOVE +0 TO WS-SCRUFF.
       051-PROCESS.
           ADD +1 TO WS-SCRUFF.
           IF WS-SCRUFF > +24
                GO TO 051-EXIT.
           READ SCREEN AT END GO TO 051-EXIT.
           MOVE SCREEN-REC TO OUTBUFF-ENTRY (WS-SCRUFF).
           GO TO 051-PROCESS.
       051-EXIT.

       053-LOAD-CRSADDR-TABLE SECTION.
           ADD +1 TO WS-SCRUFF2.
           MOVE +1 TO WS-SCRUFF.
           PERFORM 053-LOAD-LINE 24 TIMES.
           GO 053-EXIT.
       053-LOAD-LINE.
           READ CRSADDR AT END
           GO TO 053-EXIT.
           MOVE CRSADDR-LOAD
           TO CRSADDR-LOAD-ENTRY (WS-SCRUFF, WS-SCRUFF2).
           ADD +1 TO WS-SCRUFF.
       053-EXIT.

       060-WRITE-SCREEN SECTION.
           MOVE SPACES TO INBUFF.
           CALL 'FULLSCR3'
           USING IOPARM OUTLEN OUTBUFF INLEN INBUFF RETLEN SCRUF.

       070-SCAN-SCRUFF SECTION.
           ADD +1 TO WS-SCRUFF.
           IF WS-SCRUFF > +24
           GO TO 070-EXIT.
           IF SCRUFF4-SPACE (WS-SCRUFF) = SPACES
           GO TO 070-EXIT.
           PERFORM 130-SET-ADDRESS.
           MOVE +1 TO WS-SCRUFF2.
           MOVE +0 TO WS-BUILD.
           PERFORM 100-LOCATE-VALUE UNTIL
           WS-SCRUFF2 > +80 OR END-OF-LINE = 'EOL'.
           MOVE SPACE TO END-OF-LINE.
       070-EXIT.

       100-LOCATE-VALUE SECTION.
           ADD +1 TO WS-SCRUFF2.
       100-PROCESS.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = HIGH-PROTECT
                MOVE 'F8' TO SAVE-ATTR
                PERFORM 120-GENERATE-LINE
                GO TO 100-EXIT.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = LOW-PROTECT
                MOVE 'F0' TO SAVE-ATTR
                PERFORM 120-GENERATE-LINE
                GO TO 100-EXIT.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = HIGH-UNPROTCT
                MOVE 'C8' TO SAVE-ATTR
                PERFORM 120-GENERATE-LINE
                GO TO 100-EXIT.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = LOW-UNPROTCT
                MOVE '40' TO SAVE-ATTR
                PERFORM 120-GENERATE-LINE
                GO TO 100-EXIT.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = '@'
                MOVE SPACE TO DATA-FLAG
                ADD +1 TO WS-BUILD
                MOVE 'EOL' TO END-OF-LINE
                MOVE QUOTE TO BUILD-DATA-TABLE (WS-BUILD)
                PERFORM 140-WRITE-BUILD
                MOVE 'F8' TO V-4D
                MOVE VALUE-4 TO BUILD-DATA
                PERFORM 140-WRITE-BUILD
                GO TO 100-EXIT.
           IF WS-SCRUFF2 > +80 AND DATA-FLAG = '1'
                MOVE SPACE TO DATA-FLAG
                ADD +1 TO WS-BUILD
                MOVE QUOTE TO BUILD-DATA-TABLE (WS-BUILD)
                PERFORM 140-WRITE-BUILD
                GO TO 100-EXIT.
           IF WS-SCRUFF2 > +80
                GO TO 100-EXIT.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = CURSOR
                PERFORM 125-CURSOR-MOD
                MOVE SPACE TO SAVE-SCRUFF2
                GO TO 100-EXIT.
           MOVE SPACE TO SAVE-SCRUFF2.
           ADD +1 TO WS-BUILD.
           IF WS-BUILD > +52
                PERFORM 160-TABLE-OVERFLOW.
           MOVE SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) TO
           BUILD-DATA-TABLE (WS-BUILD).
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) NOT = SPACE
           MOVE '1' TO DATA-FLAG.
           IF SAVE-ATTR = 'C8' OR '40'
           MOVE '1' TO DATA-FLAG.
       100-EXIT.

       125-CURSOR-MOD SECTION.
           ADD +1 TO WS-SCRUFF2 WS-BUILD.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = '-' OR ' ' OR '_'
           OR '.' OR '$' OR 'X'
           MOVE SCRUFF2 (WS-SCRUFF, WS-SCRUFF2)
           TO BUILD-DATA-TABLE (WS-BUILD)
           ELSE
           MOVE ' ' TO BUILD-DATA-TABLE (WS-BUILD).
           SUBTRACT +1 FROM WS-SCRUFF2.

       120-GENERATE-LINE SECTION.
           MOVE SPACE TO DATA-FLAG.
           IF SAVE-SCRUFF2 = '1'
                PERFORM 170-DOUBLE-ATTRIBUTE
                GO TO 120-EXIT.
           PERFORM 150-NEW-ATTRIBUTE.
           MOVE '1' TO SAVE-SCRUFF2.
           MOVE VALUE-5 TO BUILD-DATA.
       120-EXIT.

       130-SET-ADDRESS SECTION.
           MOVE STARTING-ADDRESS (WS-SCRUFF) TO BUILD-DATA.
           PERFORM 140-WRITE-BUILD.
           MOVE VALUE-5 TO BUILD-DATA.

       140-WRITE-BUILD SECTION.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.

       150-NEW-ATTRIBUTE SECTION.
           IF WS-SCRUFF2 > +2
              ADD +1 TO WS-BUILD
              MOVE QUOTE TO BUILD-DATA-TABLE (WS-BUILD)
              PERFORM 140-WRITE-BUILD.
           MOVE +0 TO WS-BUILD.
           MOVE SAVE-ATTR TO V-4D.
           MOVE VALUE-4 TO FILEOUT-REC.
           WRITE FILEOUT-REC.
           ADD +1 TO WS-SCRUFF2.
           IF SCRUFF2 (WS-SCRUFF, WS-SCRUFF2) = CURSOR
               PERFORM 155-SET-CURSOR-1
               SUBTRACT +1 FROM WS-SCRUFF2
               PERFORM 200-SEARCH-CRSADDR-TABLE
               GO TO 150-EXIT.
           SUBTRACT +1 FROM WS-SCRUFF2.
       150-EXIT.

       155-SET-CURSOR-1 SECTION.
           MOVE CURSOR-DATA-1 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.

       156-SET-CURSOR-2 SECTION.
           MOVE CURSOR-DATA-2 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.

       160-TABLE-OVERFLOW SECTION.
           MOVE QUOTE TO BUILD-DATA-TABLE (WS-BUILD).
           PERFORM 140-WRITE-BUILD.
           MOVE +1 TO WS-BUILD.
           MOVE VALUE-5 TO BUILD-DATA.

       170-DOUBLE-ATTRIBUTE SECTION.
           MOVE '1' TO SAVE-SCRUFF2.
           MOVE +0 TO WS-BUILD.
           MOVE SAVE-ATTR TO V-4D.
           MOVE VALUE-4 TO BUILD-DATA.
           MOVE BUILD-LINE TO FILEOUT-REC.
           WRITE FILEOUT-REC.
           MOVE VALUE-5 TO BUILD-DATA.

       180-LOAD-SCREEN-NAME SECTION.
           ADD +1 TO WS-SCREEN.
           IF SCREEN-NAME (WS-SCREEN) NUMERIC
                MOVE SCREEN-NAME (WS-SCREEN) TO V-1C (WS-SCREEN)
                GO TO 100-EXIT.
           IF SCREEN-NAME (WS-SCREEN) ALPHABETIC
                MOVE SCREEN-NAME (WS-SCREEN) TO V-1C (WS-SCREEN)
                GO TO 100-EXIT.
           MOVE SPACES TO V-1C (WS-SCREEN).
       100-EXIT.

       200-SEARCH-CRSADDR-TABLE SECTION.
           MOVE CRSADDR-ENTRY (WS-SCRUFF, WS-SCRUFF2)
           TO CURSOR-ADDRESS.
