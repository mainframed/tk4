TRANSLAT TITLE '- TSO COMMAND TO TRANSLATE CLIST STRINGS'
***********************************************************************
*  TRANSLAT WILL TRANSLATE CHARACTERS IN A STRING TO OTHER            *
*  CHARACTERS, OR MAY BE USED TO REORDER CHARACTERS IN A STRING.  IF  *
*  AN OPTIONAL PAD CHARACTER IS NOT SPECIFIED, THE DEFAULT PAD SPACE  *
*  WILL BE USED TO PAD THE RETURNED CHARACTER STRING.  THE OPERATION  *
*  OF TRANSLATE IS THE SAME AS THE REXX FUNCTION TRANSLATE, WITH TWO  *
*  EXCEPTIONS:                                                        *
*                                                                     *
*    (1)  TRANSLAT IS NOT SET UP AS A FUNCTION, AND MUST BE INVOLKED  *
*    AS A COMMAND, WITH A VARIABLE INITIALIZED WITH THE STRING TO BE  *
*    TRANSLATED.  THE VARIABLE MUST NOT BE ALLOWED TO SUBSTITUTE ANY  *
*    VALUE ON INVOCATION; THEREFORE, AN AMPERSAND MUST BE OMITTED.    *
*    (2)  TRANSLAT DOES NOT PERFORM AN UPPERCASE TRANSLATION IF THE   *
*    TO AND FROM OPERANDS ARE OMITTED.  THERE IS A TSO/E BUILT-IN     *
*    FUNCTION &SYSCAPS THAT WILL PERFORM UPPERCASE TRANSLATION.       *
*                                                                     *
*  SYNTAX:                                                            *
*    TRANSLAT STRINGVAR '&TO' '&FROM' '.'   QUOTED STRING             *
*                   OR                                                *
*    TRANSLAT STRINGVAR /&TO/&FROM/./       DELIMITED STRING          *
***********************************************************************
         EJECT
         REGS
TRANSLAT CSECT
         SAVE  (14,12),,*
         LR    R12,R15            R12 = BASE REGISTER
         USING TRANSLAT,R12
         LR    R11,R1             SAVE CPPL ADDRESS
         USING CPPL,R11
         LA    R0,WORKLEN         LENGTH OF WORK AREA TO GETMAIN
         GETMAIN R,LV=(0)
         ST    R1,8(,R13)         FORWARD CHAIN
         ST    R13,4(,R1)         BACKWARD CHAIN
         LR    R13,R1             SAVEAREA/WORKAREA ADDRESSABILITY
         USING WORKAREA,R13
***********************************************************************
*        PARSE COMMAND PARAMETERS                                     *
***********************************************************************
         LA    R10,PPLAREA        ADDRESS THE PARSE PARAMETER LIST
         USING PPL,R10
         MVC   PPLUPT,CPPLUPT     INITIALIZE
         MVC   PPLECT,CPPLECT       PARSE
         LA    R1,ECB                 PARAMETER
         ST    R1,PPLECB                LIST
         MVC   PPLPCL,=A(PARSEPCL)        CONTROL
         LA    R1,PPLANSR                   FIELDS
         ST    R1,PPLANS
         MVC   PPLCBUF,CPPLCBUF
         SR    R1,R1
         ST    R1,PPLUWA
         ST    R1,ECB
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         CH    R15,=H'0'          SUCCESSFUL ?
         BNE   EXIT16             NO,  PARSE ERROR; RETURN TO TMP
         L     R10,PPLANSR        YES, ADDRESS PARSE DESCRIPTOR DSECT
         USING IKJPARMD,R10
***********************************************************************
*        MAKE SURE WE HAVE NECESSARY PARAMETERS                       *
***********************************************************************
CHKPARMS TM    VARPARM+6,X'80'    "VARIABLE" PARM PRESENT?
         BZ    EXIT12             NO, EXIT RC(12)
         TM    TOPARM+6,X'80'     "TO" PARM PRESENT?
         BZ    EXIT12             NO, EXIT RC(12)
         TM    FROMPARM+6,X'80'   "FROM" PARM PRESENT?
         BZ    EXIT12             NO, EXIT RC(12)
         CLC   TOPARM+4,=X'00000000'  "TO" PARM NULL?  (0 LENGTH)
         BE    EXIT12             NO, EXIT RC(12)
         TM    PADPARM+6,X'80'    "PAD" PARM PRESENT?  (OPTIONAL)
         BZ    DEFPAD             NO, INITIALIZE WITH DEFAULT PAD
***********************************************************************
*        INITIALIZE PAD CHARACTER                                     *
***********************************************************************
         L     R4,PADPARM         R4-> PAD CHARACTER
         MVC   PADCHAR(1),0(R4)   INITIALIZE WITH SPECIFIED PAD CHAR
         B     GETSTR             GET STRING FROM VARIABLE
DEFPAD   MVI   PADCHAR,C' '       INITIALIZE WITH DEFAULT PAD CHARACTER
***********************************************************************
*        ACCESS STRING FROM CLIST VARIABLE                            *
***********************************************************************
GETSTR   L     R4,VARPARM         R4-> VARIABLE NAME CONTAINING STRING
         LA    R5,VARPARM+4       R5 = LENGTH OF VARIABLE NAME
         MVC   VARLEN+2(2),0(R5)  LENGTH MUST BE A FULLWORD
         MVC   TOKEN,=X'00000000' ZERO OUT TOKEN; NOT USED
         L     R15,CVTPTR
         L     R15,CVTTVT-CVTMAP(,R15)  ADDRESS VARIABLE ACCESS ROUTINE
         L     R15,TSVTVACC-TSVT(,R15)
         ST    R15,CALLADR        SAVE CALL ADDRESS FOR UPDATE
         LTR   R15,R15            IS TSVT ADDRESS PRESENT?
         BNZ   CALL441            YES, CALL IKJCT441
LINK441  LINK  EP=IKJCT441,                                            X
               PARAM=(=A(TSVERETR),VARPARM,VARLEN,STRPTR,STRLEN,TOKEN),X
               VL=1,MF=(E,RPPL)
         B     CHKRCODE           SKIP CALL & CHECK ACCESS RETURN CODE
CALL441  CALL  (15),                                                   X
               (=A(TSVERETR),VARPARM,VARLEN,STRPTR,STRLEN,TOKEN),      X
               VL,MF=(E,RPPL)
CHKRCODE BXLE  R15,R15,DOTRANS    DO TRANSLATE IF ACCESS SUCCESSFUL
         C     R15,=F'80'         ARE WE IN A CLIST ENVIRONMENT?
         BE    EXIT20             NO,  INDICATE ENVIRONMENT ERROR
         B     EXIT4              YES, INDICATE VARIABLE SCAN ERROR
***********************************************************************
*        BUILD TABLE AND PERFORM STRING TRANSLATION                   *
***********************************************************************
TABLINIT TRANTAB ,                BUILD NORMAL 256 BYTE CODE TABLE
DOTRANS  MVC   TRANTABL(256),TABLINIT
         L     R4,TOPARM          R4-> CHARS TO OVERLAY TABLE WITH
         LH    R5,TOPARM+4        R5 = NUMBER OF OVERLAY CHARACTERS
         L     R6,FROMPARM        R6-> CHARS TO OVERLAY IN TABLE
         LH    R7,FROMPARM+4      R7 = NUMBER OF CHARACTERS TO OVERLAY
         LA    R9,0               CLEAR R9 FOR TABLE INDEX
INSRTLP  IC    R8,0(,R4)          R8 = CHAR TO OVERLAY TABLE WITH
         IC    R9,0(,R6)          R9 = CHAR TO OVERLAY IN TABLE
         STC   R8,TRANTABL(R9)    OVERLAY CHAR IN TABLE
         LA    R6,1(,R6)          R6-> NEXT CHAR TO OVERLAY IN TABLE
         BCT   R5,INSRTCHR        OVERLAY WITH "TO" UNTIL EXAUSTED
INSRTPAD LA    R4,PADCHAR         R4-> PAD CHARACTER TO OVERLAY WITH
         B     EXCHECK            CHECK FOR EXAUSTED "FROM" STRING
INSRTCHR LA    R4,1(,R4)          R4-> NEXT CHAR TO OVERLAY TABLE WITH
EXCHECK  BCT   R7,INSRTLP         OVERLAY FOR LENGTH OF "FROM" STRING
TRANS    L     R4,STRPTR          R4-> STRING TO BE TRANSLATED
         L     R5,STRLEN          R5 = LENGTH OF STRING TO TRANSLATE
         LA    R6,TRANTABL        R6-> TRANSLATION TABLE
         EX    R5,EXTRANS         PERFORM STRING TRANSLATION
***********************************************************************
*        SET CLIST VARIABLE TO NEW STRING                             *
***********************************************************************
SETVAR   L     R4,VARPARM         R4-> VARIABLE NAME CONTAINING STRING
         LA    R5,VARPARM+4       R5 = LENGTH OF VARIABLE NAME
         L     R15,CALLADR        GET ADDRESS OF TSVT
         MVC   TOKEN,=X'00000000' ZERO OUT TOKEN; NOT USED
         LTR   R15,R15            DOES IT CONTAIN AN ACTUAL ADDRESS?
         BNZ   CALL4412           YES, CALL IKJCT441
LINK4412 LINK  EP=IKJCT441,                                            X
               PARAM=(=A(TSVEUPDT),VARPARM,VARLEN,STRPTR,STRLEN,TOKEN),X
               VL=1,MF=(E,RPPL)
         B     CHKRC              SKIP CALL & CHECK UPDATE RETURN CODE
CALL4412 CALL  (15),                                                   X
               (=A(TSVEUPDT),VARPARM,VARLEN,STRPTR,STRLEN,TOKEN),      X
               VL,MF=(E,RPPL)
CHKRC    BXLE  R15,R15,EXIT0      INDICATE SUCCESSFUL STRING TRANSLATE
         B     EXIT8              INDICATE VARIABLE UPDATE ERROR
***********************************************************************
*        SET RETURN CODE AND RETURN TO TMP                            *
***********************************************************************
EXIT0    LA    R15,0              SET RC(0); SUCCESSFUL
         B     RETURN
EXIT4    LA    R15,4              SET RC(4); VARIABLE SCAN ERROR
         B     RETURN
EXIT8    LA    R15,8              SET RC(8); VARIABLE MODIFY ERROR
         B     RETURN
EXIT12   LA    R15,12             SET RC(12); MISSING OR INVALID OPERS
         B     RETURN
EXIT16   LA    R15,16             SET RC(16); SEVERE PARSE ERROR
         B     RETURN
EXIT20   LA    R15,20             SET RC(20); NOT IN CLIST ENVIRONMENT
RETURN   LEAVER ,                 RETURN TO TMP
***********************************************************************
*        PARAMETER CONTROL LIST                                       *
***********************************************************************
PARSEPCL IKJPARM ,                ESTABLISH PDL REFERENCE
VARPARM  IKJIDENT 'STRING VARIABLE',FIRST=ALPHA,OTHER=ALPHANUM
DELMTR   IKJPOSIT DELIMITER       DELIMITER BEFORE QSTRINGS
TOPARM   IKJPOSIT STRING,SQSTRING,ASIS  REPLACEMENT CHARS FOR TRANSLATE
FROMPARM IKJPOSIT STRING,SQSTRING,ASIS  CHARS TO TRANSLATE IN STRING
PADPARM  IKJPOSIT STRING,SQSTRING,ASIS  CHARACTER FOR PADDING STRING
         IKJENDP ,                END OF PCL
         IKJCPPL ,                CPPL MAPPING
         IKJPPL ,                 PPL MAPPING
***********************************************************************
*        MAP CVT FOR CALLTSSR AND IKJCT441 REFERENCE                  *
***********************************************************************
         IKJCVT ,                 GENERATE CVT MAP DSECT
***********************************************************************
*        MAP TSO VECTOR TABLE FOR IKJCT441                            *
***********************************************************************
         IKJTSVT ,                MAP TSVT
***********************************************************************
*        STATIC WORK AREA                                             *
***********************************************************************
TRANSLAT CSECT                    PLACE LITERALS IN MAIN CSECT
         LTORG
EXTRANS  TR    0(0,R4),0(R6)      EXECUTE STRING TRANSLATION
***********************************************************************
*        DYNAMIC WORKAREA                                             *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F                STANDARD REGISTER SAVEAREA
ECB      DS    F                  TSSR COMMUNICATIONS ECB
PPLAREA  DS    7F                 PARSE PARAMETER LIST
PPLANSR  DS    F                  ADDRESS OF PDL (RETURNED BY PARSE)
PADCHAR  DS    CL1                CHARACTER USED TO PAD
TRANTABL DS    CL256              TRANSLATION TABLE
VARLEN   DS    F                  LENGTH OF VARIABLE NAME
STRPTR   DS    F                  LOCATION OF VARIABLE CONTENTS
STRLEN   DS    F                  LENGTH OF VARIABLE CONTENTS (STRING)
TOKEN    DS    F                  UNUSED, BUT REQUIRED!!!
CALLADR  DS    F                  TSVT ADDRESS USED FOR IKJCT331 CALL
RPPL     CALL  ,(0,0,0,0,0,0),MF=L
WORKLEN  EQU   *-WORKAREA         LENGTH OF AREA TO GETMAIN
         END
