SMF74ALL CSECT
*
*        THE PURPOSE OF THIS PROGRAM IS TO MODIFY TYPE 74 SMF (DEVICE
*        ACTIVITY) RECORDS.  THE IDEA IS TO LOOK AT ACTIVITY FROM THE
*        VIEWPOINT OF THE DEVICE.  THE DEVICE ACTIVITY REPORT IS GIVEN
*        FROM THE POINT OF VIEW OF THE CPU DRIVING THE DEVICE (IE:
*        SEPERATE DASD REPORTS ARE PROCUCED FOR EACH SYSTEM).
*
*        WHEN MORE THAN ONE CPU IS ACCESSING THE DASD, IT IS BUSIER
*        THAN THE INDIVIDUAL REPORTS SAY.  THIS PROGRAM CHANGES THE
*        CPU NAME TO "COMB" SO THAT THE RMF REPORTER PROGRAM THINKS
*        IT IS DEALING WITH ONE CPU.  SINCE THE WASHINGTON STATE
*        DEPARTMENT OF INFORMATION SERVICES (DIS) IS TAKING MEASURE-
*        MENTS FROM 3 CPUS, MOST FIELDS ARE MULTIPLIED BY 3 (*) TO
*        GIVE ACCURACY WHEN THE SAMPLE COUNT IS USED IN CALCULATING
*        PERCENT BUSY, CONNECT TIME, AND DISCONNECT TIME.  THIS PROGRAM
*        HANDLES SP AND XA TYPE-74 SMF RECORDS, SINCE THE (ERBRMFPP)
*        REPORT PROGRAM IS CLEVER ENOUGH TO BLEND BOTH TYPE 74 SMF
*        RECORDS WHEN THE CPU ID IS THE SAME.
*
*        * THIS PROCESS IS MODIFIED TO ACCEPT A PARM THAT INDICATES
*        THE NUMBER OF CPUS SHARING THE DASD.  THIS PREVENTS HAVING
*        TO MODIFY THE PROGRAM EVERY TIME THERE IS ONE MORE OR ONE
*        LESS CPU SHARING THE DASD.  AS OF 12-20-90 WE HAVE 4 LOCICAL
*        PARTITIONS SHARING COMMON DASD.  WITH AMDAHL MDF AND IBM
*        PRSM, THIS PARM IS MORE USEFUL THAN ORIGINALLY THOUGHT.
*
*        WRITTEN 08-28-86 BY HOWARD H. GLASTETTER
*
*        MODIFIED 12-20-90 (HHG) TO ALSO HANDLE ESA RMF TYPE 74.
*        LITTLE CODE NEEDED TO BE ADDED TO HANDLE ESA.  XA AND ESA
*        ALSO WILL BE BLENDED BY ERBRMFPP IN A MIXED ENVIRONMENT.
*        NOT SURE IF SP WILL BE BLENDED WITH ESA, HOWEVER.  I'D
*        BE INTERESTED IN KNOWING IF ANYONE OUT THERE DOES IT.
*
R0       EQU   0
R1       EQU   1         POINTER TO LATEST INPUT RECORD
R2       EQU   2         PARM COMMUNICATION
R3       EQU   3         WORK - INCREMENT THRU
R4       EQU   4         *    - DEVICE CONTROL DATA SECTION
R5       EQU   5         *    - VIA BXLE LOGIC
R6       EQU   6         WORK POINTER TO INPUT RECORD
R7       EQU   7         *    LENGTH OF INPUT RECORD (EXEC MOVE)
R8       EQU   8         *    DITTO - AND MULTIPLY FIELDS BY 3
R9       EQU   9                          * - AND WRITE OUTPUT
R10      EQU   10        SUBROUTINE LINKAGE
R11      EQU   11        WORK
R12      EQU   12        BASE
R13      EQU   13        SYSTEM LINKAGE
R14      EQU   14
R15      EQU   15
         EJECT
BEGIN    SAVE  (14,12)       PROGRAM LINKAGE AND INITIATION
         BALR  12,0
         USING *,12
         ST    R13,REGSAVE+4
         LA    R11,REGSAVE
         ST    R11,8(R13)
         LR    R13,R11
*
         L     R2,0(R1)            CPU COUNT PARM ADDRESS
         PACK  PACKNUM,2(1,R2)     PACK IT
         CVB   R2,PACKNUM          CONVERT IT TO BINARY
         ST    R2,CPUCOUNT         READY TO USE
*
         PRINT ON,NOGEN
         OPEN  (FILEIN,,FILEOUT,(OUTPUT),PRINTOUT,(OUTPUT))
RMFLOOP  EQU   *
         GET   FILEIN
         AP    INCOUNT,=X'1C'
         LR    R6,R1               POINT R6 TO THE INPUT RECORD
         USING SMFRECRD,R6         *--> DOCUMEMTATON ONLY - FOR NOW
         MVC   14(4,R6),=C'COMB'   GIVE ALL SMF THE SAME (SMF74SID)
         CLI   5(R6),X'4A'         CHECK (SMF74RTY) FOR TYPE 74
         BE    LOOP74
         AP    NONRMF74,=X'1C'
         LA    R3,RMF70            WHAT OTHER DATA IS COMING IN
         LA    R4,13
         LA    R5,RMF245
WHATISIT EQU   *
         CLC   4(1,R3),5(R6)
         BE    ITSTHIS
         BXLE  R3,R4,WHATISIT
ITSTHIS  EQU   *
         AP    0(4,R3),=X'1C'      ADD IT TO THE TABLE
         B     WRITE30             WRITE IT OUT
         EJECT
LOOP74   EQU   *
         AP    RMF74,=X'1C'
         TM    4(R6),X'1C'   (SMF74FLG) IS THIS XA OR ESA 4.2? HG 10/93
         BZ    LOOP20              IF NOT, GO TO SP PROCESS
         CLC   22(2,R6),=H'2'      IS THIS 74 SUBTYPE 2 - 4.2? HG 10/93
         BE    WRITE30             SKIP, NOT -DASD- TYPE 74    HG 10/93
*
**                                 XA OR ESA AT THIS POINT
*
         LR    R3,R6               POINT TO DEVICE CONTROL DATA SECTION
         A     R3,44(R6)           * (SMF74DDS) OFFSET-DEVICE DATA SEC
         LH    R4,48(R6)           LOAD THE INCREMENT (LENGTH OF DDS)
*                                  END ADDR CALCULATED BELOW
         LH    R5,0(R6)            LRECL OF THIS RECORD
         S     R5,44(R6)    -      * (SMF74DDS) OFFSET-DEVICE DATA SEC
         SR    R5,R4        -      POINT TO BEGINNING OF LAST ENTRY
         AR    R5,R3        +  =   END ADDR - BXLE LOGIC NOW PRIMED
LOOP10   EQU   *
         STM   R3,R5,BXLESAVE      SETUP BXLE W/I A BXLE
         LH    R11,0(R3)           HG - 2-11-86  BEGIN CHANGE  ***
         SRL   R11,4               CREATE LCU FROM DEV ADDR ***
         STH   R11,2(R3)           HG - 2-11-86  END CHANGE ***
         LA    R5,68(R3)           PREPARE TO
         LA    R4,4                MULTIPLY SMF74SSC THRU SMF74NRD
         LA    R3,20(R3)           BY THREE
LOOP10A  EQU   *
         SR    R8,R8
         L     R9,0(R3)
         M     R8,CPUCOUNT         MULTIPLY THE FIELD BY THE NUMBER
         ST    R9,0(R3)            OF CPUS CREATING SMF DATA
         BXLE  R3,R4,LOOP10A       ANY MORE DEVICES?
         TM    4(R6),X'0C'         (SMF74FLG) IS THIS XA OR ESA?
         BO    LOOP10B             IT'S ESA (BITS 4 N 5 ON IF ESA)
         AP    XAVOLS,=X'1C'       COUNT XA ENTRY MODIFIED
         B     LOOP10C
LOOP10B  EQU   *
         AP    ESAVOLS,=X'1C'      COUNT ESA ENTRY MODIFIED
LOOP10C  EQU   *
         LM    R3,R5,BXLESAVE      RESET MAJOR BXLE
         BXLE  R3,R4,LOOP10        ANY MORE DEVICE ENTRIES?
         B     WRITE30             NOPE
         EJECT
*                                  SP ROUTINE
LOOP20   EQU   *
         LA    R3,64(R6)           POINT TO DEVICE DATA SECTION
         LH    R5,0(R6)            * LRECL OF THIS RECORD
         SH    R5,=H'52'           * SUBTRACT HEADER LENGTH
         SH    R5,52(R6)           * SUBTRACT DCDS LENGTH (SMF74SDC)
         LH    R4,56(R6)           (SMF74SDD) DDS SIZE - BXLE INCRI
         SR    R5,R4               POINT TO BEGINNING OF LAST ENTRY
         AR    R5,R3               END ADDR - BXLE LOGIC NOW PRIMED
LOOP20A  EQU   *
         STM   R3,R5,BXLESAVE      SETUP BXLE W/I A BXLE
         LA    R5,0(R4,R3)         POINT TO LAST FIELD OF SEGMENT
         SH    R5,=H'4'            POINT TO BEGINING OF LAST FIELD
         LA    R4,4                MULTIPLY SMF74CNT -> (SMF74RDR?)
         LA    R3,16(R3)           BY THREE
LOOP20B  EQU   *
         SR    R8,R8
         L     R9,0(R3)
         M     R8,CPUCOUNT         MULTIPLY THE FIELD BY THE NUMBER
         ST    R9,0(R3)            OF CPUS CREATING SMF DATA
         BXLE  R3,R4,LOOP20B       ANY MORE FIELD FOR THE DEVICE?
         AP    SPVOLS,=X'1C'       NO, COUNT ENTRIES MODIFIED
         LM    R3,R5,BXLESAVE      RESET MAJOR BXLE
         BXLE  R3,R4,LOOP20A       ANY MORE DEVICE ENTRIES?
*                                  NOPE, FALL THRU AND WRITE THE RECORD
WRITE30  EQU   *
         MVC   FILEOUT+82(2),FILEIN+82  MOVE INLRECL TO OUT LRECL
         LH    R7,FILEIN+82        SAVE INLRECL FOR OUTPUT MOVE LOGIC
         PUT   FILEOUT
         LR    R9,R1               POINT TO OUT ADDR
         LH    R8,=H'256'          LONGEST MVC LENGTH
         BAL   R10,MOVIT35         PUT RECORD IN OUTPUT AREA PROVIDED
         AP    OUTCOUNT,=X'1C'
         B     RMFLOOP             GET ANOTHER RMF RECORD
*
MOVIT35  EQU   *
         CR    R7,R8               LRECL PORTION GREATER THAN 256?
         BH    MOVIT35A            YEP
         CH    R7,=H'0'            IS IT ALL DONE?
         BE    0(R10)              YEP - IF IT CAN HAPPEN IT WILL
         BCT   R7,*+4              NOPE, REDUCE LENGTH FOR EXEC MOVE
         EX    R7,MOVIT35B         MOVE WHAT EVER IS LEFT
         BR    R10                 OUTPUT RECORD IS IN BUFFER - BYE
MOVIT35A EQU   *
         BCT   R8,*+4              REDUCE LENGTH FOR EXEC MOVE
         EX    R8,MOVIT35B
         LA    R8,1(R8)            BRING IT BACK TO 256
         AR    R6,R8               BUMP INPUT POINTER UP 256 BYTES
         AR    R9,R8               BUMP OUTPUT POINTER UP 256 BYTES
         SR    R7,R8               RUDUCE AMT LEFT TO MOVE 256 BYTES
         B     MOVIT35             MOVE ANOTHER CHUNK
MOVIT35B EQU   *
         MVC   0(0,R9),0(R6)       R9=OUTPUT, R6=INPUT, L IN R7 OR R8
         EJECT
EOF40    EQU   *
         MVC   PRINTREC,PRINTREC-1     BLANK PRINTLINE
         BAL   R10,PRINT50
         LA    R3,INCOUNT
         LA    R4,52
         LA    R5,DONTKNOW
EOF40A   EQU   *                      DUMP A TABLE OF COUNTS
         ED    EDITWD1,0(R3)
         ED    EDITWD2,13(R3)
         ED    EDITWD3,26(R3)
         ED    EDITWD4,39(R3)
         MVC   LABEL1,5(R3)           FIELD EXPLANATION FROM TABLE
         MVC   LABEL2,18(R3)
         MVC   LABEL3,31(R3)
         MVC   LABEL4,44(R3)
         MVC   PRINTREC,ENDLINE
         BAL   R10,PRINT50
         BAL   R10,PRINT50
         BAL   R10,REDOED60
         BXLE  R3,R4,EOF40A           IS THE COUNT TABLE PROCESSED?
         BAL   R10,PRINT50            YEP, PRINT RMF74 COUNTS
         MVC   PRINTREC+23(32),=C'RMF TYPE 74 VOLUME DATA MODIFIED'
         BAL   R10,PRINT50
         BAL   R10,PRINT50
         BAL   R10,REDOED60
         MVC   LABEL1,=C' ESA    '
         MVC   LABEL2,=C' XA     '
         MVC   LABEL3,=C' SP     '
         MVC   LABEL4,=C' TOTAL  '
         ED    EDITWD1,ESAVOLS
         ED    EDITWD2,XAVOLS
         ED    EDITWD3,SPVOLS
         AP    ESAVOLS,XAVOLS
         AP    ESAVOLS,SPVOLS
         ED    EDITWD4,ESAVOLS
         MVC   PRINTREC,ENDLINE
         BAL   R10,PRINT50
         CLOSE (FILEIN,,FILEOUT,,PRINTOUT)
         L     R13,REGSAVE+4
         RETURN (14,12),RC=0
*
PRINT50  EQU   *
         PUT   PRINTOUT,PRINTREC
         MVC   PRINTREC,PRINTREC-1     BLANK PRINTLINE
         BR    R10
*
REDOED60 EQU   *
         MVC   EDITWD1,EDITWORD
         MVC   EDITWD2,EDITWORD
         MVC   EDITWD3,EDITWORD
         MVC   EDITWD4,EDITWORD
         BR    R10
         EJECT
REGSAVE  DS    9D
PACKNUM  DS    D
CPUCOUNT DC    F'0'
BXLESAVE DS    3F
INCOUNT  DC    PL4'0',X'00',CL8' INPUT  '
OUTCOUNT DC    PL4'0',X'00',CL8' OUTPUT '
RMF74    DC    PL4'0',X'00',CL8' RMF74  '
NONRMF74 DC    PL4'0',X'00',CL8' OTHER  '
RMF70    DC    PL4'0',X'46',CL8' RMF70  '
RMF71    DC    PL4'0',X'47',CL8' RMF71  '
RMF72    DC    PL4'0',X'48',CL8' RMF72  '
RMF73    DC    PL4'0',X'49',CL8' RMF73  '
RMF75    DC    PL4'0',X'4B',CL8' RMF75  '
RMF76    DC    PL4'0',X'4C',CL8' RMF76  '
RMF77    DC    PL4'0',X'4D',CL8' RMF77  '
RMF78    DC    PL4'0',X'4E',CL8' RMF78  '
RMF79    DC    PL4'0',X'4F',CL8' RMF79  '
RMF244   DC    PL4'0',X'F4',CL8' RMF244 '
RMF245   DC    PL4'0',X'F5',CL8' RMF245 '
DONTKNOW DC    PL4'0',X'00',CL8' UNKNOWN'
SPVOLS   DC    PL4'0'
XAVOLS   DC    PL4'0'
ESAVOLS  DC    PL4'0'
*
FILEIN   DCB   DDNAME=FILEIN,MACRF=(GL),EODAD=EOF40,DSORG=PS,BFTEK=A
FILEOUT  DCB   DSORG=PS,LRECL=32756,DDNAME=FILEOUT,MACRF=(PL),BFTEK=A
PRINTOUT DCB   DSORG=PS,LRECL=80,DDNAME=PRINTOUT,MACRF=(PM)
         DC    CL1' '
PRINTREC DS    CL80    OUTPUT RECORD AREA
ENDLINE  DC    CL2'  '                     TOTALS PRINT RECORD
EDITWD1  DC    XL10'40206B2020206B202120'
LABEL1   DC    CL8' INPUT  '
EDITWD2  DC    XL10'40206B2020206B202120'
LABEL2   DC    CL8' OUTPUT '
EDITWD3  DC    XL10'40206B2020206B202120'
LABEL3   DC    CL8' RMF74  '
EDITWD4  DC    XL10'40206B2020206B202120'
LABEL4   DC    CL8' OTHER  '
         DC    CL6'      '
EDITWORD DC    XL10'40206B2020206B202120'
*
         EJECT
         DS    0F
SMFRECRD DSECT
***********************************************************************
*                                                                     *
*             S M F   R E C O R D   T Y P E   7 4                     *
*                                                                     *
*                       DEVICE ACTIVITY                               *
*                                                                     *
***********************************************************************
*
         PRINT ON,GEN
         ERBSMFR 74
         EJECT
         END
