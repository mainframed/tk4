         PRINT ON,NOGEN
         SPACE 3
*        THIS PROGRAM IS A SUBROUTINE WHICH DYNAMICALLY ALLOCATES
*        THE FOLLOWING TYPES OF DATASETS TO THE DDNAME GIVEN:
*
*            .  GOOD OLE OS SEQUENTIAL DATASET
*            .  A PARTITIONED DATASET WITH OR WITHOUT MEMBER NAME
*            .  A GDG EXPRESSED WITH ABSOLUTE OR RELATIVE GEN NUMBER
*            .  A VSAM FILE
*
*        ALSO ALIASES OF THESE TYPES OF DATASETS ARE ACCEPTABLE
*
*        TO CALL THIS PROGRAM FROM COBOL, DO THE FOLLOWING:
*
*           1.  PLACE THE FOLLOWING AREA IN WORKING STORAGE:
*
*                  01  DYNALLOC-I-O-AREA.
*                      05  DDNAME                    PIC X(8).
*                      05  DSNAME                    PIC X(44).
*
*           2.  PLACE THE FOLLOWING IN THE PROCEDURE DIVISION:
*
*                  MOVE YOUR DDNAME
*                    TO DDNAME OF DYNALLOC-I-O-AREA.
*                  MOVE YOUR DATASET NAME
*                    TO DSNAME OF DYNALLOC-I-O-AREA.
*
*                 CALL 'DYNALLOC' USING DYNALLOC-I-O-AREA.
*
*           3.  AFTER THE CALL, EXAMINE RETURN-CODE
*
*                 RETURN CODE VALUE      MEANING
*                 _________________      _____________________________
*
*                       0                DYNAMIC ALLOC WAS SUCCESSFUL
*
*                       4                UNABLE TO FREE THE DDNAME
*
*                       8                UNSUCCESSFUL DYNAMIC ALLOC
*
*                      12                DATASET NOT CATALOGUED
*
*                      16                INVALID DSNAME GIVEN
*
*
*
*
         EJECT
         SPACE 3
*
**********************************************
*                                            *
*        I N I T I A L I Z A T I O N         *
*                                            *
**********************************************
*
DYNALLOC CSECT
         SAVE  (14,12)
         BALR  12,0
         USING *,12
         ST    13,SAVEAREA+4
         LA    13,SAVEAREA
         B     STARTIT
         SPACE
SAVEAREA DC    18F'0'
         SPACE 3
********************************************************************
*        EQUATE RESISTERS 0 THRU 15 TO MORE MEANINGFUL NAMES       *
********************************************************************
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        SAVE REGISTER 1 CONTENTS IN REGISTER 11 AND PLACE         *
*        PARAMETER AREA INTO PASSAREA                              *
*                                                                  *
********************************************************************
         SPACE 3
STARTIT  DS    0D
         LR    R11,R1                 SAVE REG 1 CONTENTS IN REG 11
         L     R9,0(R11)
         MVC   PASSAREA,0(R9)
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        M A I N   L I N E   L O G I C                             *
*                                                                  *
********************************************************************
         SPACE 3
*
         LA    R10,0                  R10===> 0
*
         MVC   BRKINDSN,INDSNAME
         CALL  BREAKDSN,(BRKDSNIO),VL
         CLC   BRKVALID,=CL3'YES'     DID ALL GO WELL ?
         BE    LOKAYT                 IF SO, BRANCH TO LOKAYT
         LA    R10,16                 R10===> 16
         B     SHUTDOWN               BRANCH TO SHUTDOWN
LOKAYT   LOCATE CAMLIST1              SEARCH ZEE CATALOG
         C     R15,=F'0'              IS THE DSNAME IN THE CATALOG?
         BE    DOCALC                 IF SO, BRANCH TO DOCALC
         LA    R10,12                 R10===> 12
         B     SHUTDOWN               BRANCH TO SHUTDOWN
DOCALC   BAL   R5,CALCLENS            PERFORM ROUTINE TO CALCULATE
*                                       DSNAME AND DDNAME LENGTHS
         BAL   R5,DYNAMALC            PERFORM DYNAMIC ALLOCATION
         B     SHUTDOWN               BRANCH TO SHUTDOWN
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*  THIS ROUTINE IS RESPONSIBLE FOR GENERATING THE FOLLOWING        *
*  DATA FIELDS:                                                    *
*                                                                  *
*     DDNLEN  ===> BINARY LENGTH OF DDNAME                         *
*     DSNLEN  ===> BINARY LENGTH OF DSNAME                         *
*     MEMLEN  ===> BINARY LENGTH OF MEMBER NAME (IF PROVIDED)      *
*                                                                  *
********************************************************************
*
CALCLENS ST    R5,SAVEIT1
         LA    R6,8
         LA    R7,INDDNAME+7
LOOP1    CLI   0(R7),C' '
         BNE   MOVEIT1
         S     R6,=F'1'
         S     R7,=F'1'
         B     LOOP1
MOVEIT1  STH   R6,DDNLEN
         LA    R6,44
         LA    R7,BRKOTDSN+43
LOOP2    CLI   0(R7),C' '
         BNE   MOVEIT2
         S     R6,=F'1'
         S     R7,=F'1'
         B     LOOP2
MOVEIT2  STH   R6,DSNLEN
         CLC   BRKMEMPR,=CL3'YES'
         BNE   EXITCALC
         LA    R6,8
         LA    R7,BRKOTMEM+7
LOOP3    CLI   0(R7),C' '
         BNE   MOVEIT3
         S     R6,=F'1'
         S     R7,=F'1'
         B     LOOP3
MOVEIT3  STH   R6,MEMLEN
EXITCALC L     R5,SAVEIT1            RESTORE REGISTER 5
         BR    R5                    RETURN
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*               D Y N A M I C   A L L O C A T I O N                *
*               -----------------------------------                *
*                                                                  *
*        THIS ROUTINE FIRST ATTEMPTS TO FREE THE DDNAME GIVEN.     *
*        IF THE DDNAME WAS SUCCESSFULLY FREED, THEN THIS ROUTINE   *
*        BRANCHES TO THE DYNAMIC ALLOCATION MACRO DYNALLOC.        *
*        HOWEVER, IF THE DDNAME  WAS NOT SUCCESSFULLY FREED,       *
*        THEN THIS ROUTINE CHECKS FOR ERROR REASON CODE 0438       *
*        (DDNAME NOT FOUND).  IF THE ERROR REASON CODE IS 0438,    *
*        THEN THIS ROUTINE BRANCHES TO THE DYNAMIC ALLOCATION      *
*        MACRO DYNALLOC, ELSE IT LOADS R10 WITH A 4.               *
*                                                                  *
********************************************************************
*
DYNAMALC ST    R5,SAVEIT2
*
         MVC   FREEUT1A,DDNLEN
         MVC   FREEUT1B,INDDNAME
         MVC   DD1UNT1A,DDNLEN
         MVC   DD1UNT1B,INDDNAME
         MVC   DD1UNT2A,DSNLEN
         MVC   DD1UNT2B,BRKOTDSN
         MVC   DD1UNIT3,=XL2'0000'
         CLC   BRKMEMPR,=CL3'YES'
         BNE   FREEIT
         MVC   DD1UNIT3,=XL2'0003'
         MVC   DD1UNT3A,=XL2'0001'
         MVC   DD1UNT3B,MEMLEN
         MVC   DD1UNT3C,BRKOTMEM
*
FREEIT   LA    R1,FREEPARM
         DYNALLOC                      FREE DDNAME
         LTR   R15,R15                 TEST REGISTER 15 FOR ZERO
         BZ    DODYNAM                 IF ZERO, BRANCH TO DODYNAM
         CLC   ERCODE,HEX0438          COMPARE ERROR REASON CODE
*                                         AGAINST HEXADECIMAL 0438
         BE    DODYNAM                 IF EQUAL, BRANCH TO DODYNAM
         LA    R10,4                   R10===> 4
         L     R5,SAVEIT2
         BR    R5                      RETURN
DODYNAM  LA    R1,DD1PARM
         DYNALLOC                      ALLOC F(DDNAME) DA(DSN) SHR
         L     R5,SAVEIT2
         LTR   R15,R15                 TEST REGISTER 15 FOR ZERO
         BZR   R5                      IF ZERO, RETURN
         LA    R10,8                   R10===> 8
         BR    R5                      RETURN
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        E N D   O F   J O B   P R O C E S S I N G                 *
*                                                                  *
********************************************************************
         SPACE 3
SHUTDOWN LR    R15,R10
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        DATA STRUCTURE FOR FREEING OF DDNAME                      *
*                                                                  *
********************************************************************
*
         SPACE 3
         DS    0F
FREEPARM DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(FREERB)   ADDRESS OF REQUEST BLOCK
FREERB   DC    X'14'         S99RBLN (LENGTH OF REQUEST BLOCK)
         DC    X'02'         S99VERB (REQUEST FOR UNALLOCATION)
         DC    X'2000'       S99FLAG1 (DO NOT MOUNT VOLUMES)
ERCODE   DC    X'0000'       S99ERROR (ERROR REASON CODE)
         DC    X'0000'       S99INFO (INFORMATION REASON CODE)
         DC    A(FREETUPL)   S99TXTPP (ADDR OF POINTER TO TEXT UNIT)
         DC    X'00000000'   RESERVED
         DC    X'00000000'   S99FLAG2
FREETUPL DC    A(FREEUNT1)   ADDRESS OF TEXT UNIT #1
         DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(FREEUNT2) ADDRESS OF TEXT UNIT#2
FREEUNT1 DC    X'0001'
         DC    X'0001'
FREEUT1A DS    BL2
FREEUT1B DS    CL8
FREEUNT2 DC    X'0007'
         DC    X'0000'
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        DATA STRUCTURE FOR DYNAMIC ALLOCATION                     *
*                                                                  *
********************************************************************
*
         SPACE 3
         DS    0F
DD1PARM  DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(DD1RB)    ADDRESS OF REQUEST BLOCK
DD1RB    DC    X'14'         S99RBLN (LENGTH OF REQUEST BLOCK)
         DC    X'01'         S99VERB (REQUEST FOR DSNAME ALLOC)
         DC    X'2000'       S99FLAG1 (DO NOT MOUNT VOLUMES)
         DC    X'0000'       S99ERROR (ERROR REASON CODE)
         DC    X'0000'       S99INFO (INFORMATION REASON CODE)
         DC    A(DD1TUPL)    S99TXTPP (ADDR OF POINTERS TO TEXT UNITS
         DC    X'00000000'   RESERVED
         DC    X'00000000'   S99FLAG2
DD1TUPL  DC    A(DD1UNIT1)   ADDRESS OF TEXT UNIT #1
         DC    A(DD1UNIT2)   ADDRESS OF TEXT UNIT #2
         DC    A(DD1UNIT3)   ADDRESS OF TEXT UNIT #3
         DC    A(DD1UNIT4)   ADDRESS OF TEXT UNIT #4
         DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(DD1UNIT5) ADDRESS OF TEXT UNIT #5
DD1UNIT1 DC    X'0001'       DDNAME TEXT UNIT
         DC    X'0001'
DD1UNT1A DS    BL2
DD1UNT1B DS    CL8
DD1UNIT2 DC    X'0002'       DSNAME TEXT UNIT
         DC    X'0001'
DD1UNT2A DS    BL2
DD1UNT2B DS    CL44
DD1UNIT3 DS    XL2           MEMBER NAME TEXT UNIT
DD1UNT3A DS    XL2
DD1UNT3B DS    BL2
DD1UNT3C DS    CL8
DD1UNIT4 DC    X'0004',X'0001',X'0001',X'08'
DD1UNIT5 DC    X'0052'
         DC    X'0000'
         EJECT
         SPACE 3
********************************************************************
*        DATA AREAS                                                *
********************************************************************
         SPACE 3
         DS    0F
SAVEIT1  DS    F
SAVEIT2  DS    F
DDNLEN   DS    H
DSNLEN   DS    H
MEMLEN   DS    H
*
PASSAREA DS    0CL52
INDDNAME DS    CL8
INDSNAME DS    CL44
*
*   B R E A K D S N   P A R A M E T E R S
*
BRKDSNIO DS    0CL135
BRKINDSN DS    CL44
BRKOTDSN DS    CL44
BRKOTMEM DS    CL8
BRKMEMPR DS    CL3
BRKGDG   DS    CL3
BRKVALID DS    CL3
BRKERROR DS    CL30
*
CAMLIST1 CAMLST NAME,BRKOTDSN,,LOCAREA
LOCAREA  DS    0D
         DS    265C
HEX0438  DC    X'0438'
         END
