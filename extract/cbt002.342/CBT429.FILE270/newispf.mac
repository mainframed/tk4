NEWISPF  TITLE 'ISPF AND PDF FRONTEND MODULE'
NEWISPF  ENTERR LEVEL=V1M3
         EJECT
*
* V1M3 - SWITCH TO STACK MACRO TO FIX PROBLEM WITH TSOE STACK FORMAT,
*         ALLOW LOAD,CALL TO ISRPCP TO ELIMINATE LINK REQUIREMENT
*
* V1M2 - ALLOWED SPFMVS/ISPF SWITCHING BY CHECKING ISPTLIB AND ISPPARM
*
* V1M1 - ALLOC USER PROFILE, CALL NEWSPF CLIST IF NEW
*
* V1M0 - HAD SAVE ECT ONLY
*
*        THIS MODULE IS THE FRONTEND FOR ISPF AND/OR PDF.
*         IT HAS THE FOLLOWING FUNCTIONS:
*            1. SAVE THE INPUT ECT BECAUSE ISPF MODIFIES THE
*               ECT PTR TO THE IOWA WHICH IS NEEDED BY THE XS MODULE.
*            2. ALLOCATE THE USER PROFILE LIB TO DDNAME ISPPROF.
*            3. INVOKE THE NEWSPF CLIST IF PROFILE LIB DOESN'T EXIST.
*            4. CALL THE REAL ISPF OR PDF COMMAND MODULE.
         EJECT
*
* NEWISPF MAINLINE ROUTINE CALLS EACH FUNCTION OF THIS MODULE
*
         BAL   R14,SAVEECT        1ST SAVE ECT
*
         BAL   R14,ALOCPROF       2ND ALLOC HIS PROFILE
*
         BAL   R14,XCLIST         3RD STACK NEWSPF CLIST IF NEEDED
         BXH   R15,R15,EXIT       IF NEWSPF STACKED, SKIP ISPF
*
         BAL   R14,CALLISPF     4TH FINALLY READY TO CALL REAL ISPF/PDF
         EJECT
*
*
*    DONE HERE -> RETURN TO TERMINAL MONITOR OR WHOEVER CALLED:
*
EXIT     LEAVER
         EJECT
*
*        1ST:  COPY THE CPPL AND THE ECT:
*        (BECAUSE NASTY ISPF MODIFIES THE ECT IOWA PTR)
*
SAVEECT  ST    R14,L1LS
         LR    R11,R1             SAVE PARM PTR
         MVC   NEWCPPL(16),0(R11) COPY THE CPPL
         LA    R10,NEWCPPL        R10->OUR COPY OF THE CPPL
         USING CPPL,R10           MENTION TO ASSEMBLER
         L     R8,CPPLECT         R8->ORIGINAL ECT
         MVC   NEWECT(56),0(R8)   COPY THE ECT
         LA    R9,NEWECT          R9->OUR COPY OF THE ECT
         ST    R9,CPPLECT         POINT NEW CPPL TO NEW ECT!
         MVC   CHEKWORD,=CL8'NEWISPF' THIS TELLS WDPSCXS WE ARE HERE
         L     R14,L1LS
         BR    R14
         EJECT
*
*        2ND:  SEE IF DDNAME ISPPROF IS PRESENT AND TRY TO ALLOCATE
*              IT IF IT IS NOT.
ALOCPROF ST    R14,L1LS
         DEVTYPE =CL8'ISPPROF',DEVTAREA
         BXLE  R15,R15,AX0        GO TO ISPF IF ISPPROF ALREADY HERE
         OI    WASPROF,X'FF'      FLAG ISPPROF ABSENT
         SPACE
*        ISPPROF NOT ALLOCATED:BUILD DSN FOR DYNALLOC:
         L     R9,CPPLUPT         R9->UPT
         USING UPT,R9
         L     R8,CPPLPSCB        R8->PSCB
         USING PSCB,R8
         LA    R1,PRODSN          R1->PROFILE DSN AREA
         MVI   0(R1),C' '         A BLANK
         MVC   1(43,R1),0(R1)     SPREAD IT AROUND
         MVC   PRODSN(7),UPTPREFX MOVE DSN PREFIX
         BAL   R14,FINDBLNK       FIND FIRST BLANK
         MVI   0(R1),C'.'         PERIOD
         LA    R1,1(,R1)          R1+1
         CLC   UPTPREFL,PSCBUSRL PREFIX LEN=USERID LEN?
         BNE   ADDUID             NOPE.
         SLR   R2,R2              R2=0
         IC    R2,UPTPREFL        R2=PREFIX LEN
         BCTR  R2,R0              R2-1 FOR EX
PUIDCLC  CLC   PSCBUSER(0),UPTPREFX FOR EX
         EX    R2,PUIDCLC         UID=PREF?
         BE    ATRAIL             YEP.
ADDUID   MVC   0(7,R1),PSCBUSER   ADD THE USERID
         BAL   R14,FINDBLNK       POINT PAST
         MVI   0(R1),C'.'         DOT
         LA    R1,1(,R1)          R1+1
ATRAIL   MVC   0(12,R1),=C'ISPF.ISPPROF' TRAILING QUALIFIERS
         BAL   R14,FINDBLNK       R1->END+1 OF DSN
         LA    R2,PRODSN          R2->START OF DSN
         SR    R1,R2              R1=DSN LEN
         STH   R1,PRODSNL         SAVE THE LEN
         B     TRYALLOC           GO ALLOC IT
         SPACE
FINDBLNK CLI   0(R1),C' '         BLANK?
         BER   R14                YEP.
         LA    R1,1(,R1)          R1+1
         B     FINDBLNK           TRY NEXT
         EJECT
*        ISPPROF DSN BUILD, NOW ISSUE DYNALLOC REQUEST
*
TRYALLOC DYNABLK 3,MF=(E,DYNAPARM)   INIT DYNALLOC PARMLIST
         DDNTU ISPPROF,7,MF=(E,DYNATU1)  INIT DDN TEXT UNIT
         DSNTU PRODSN,PRODSNL,MF=(E,DYNATU2) INIT DSN TEXT UNIT
         DSPTU SHR,MF=(E,DYNATU3) INIT DISP TEXT UNIT
         LA    R1,DYNAPARM        R1->DYNALLOC PARM LIST
         DYNALLOC                 ALLOC HIS PROFILE LIB IF IT EXISTS
         SPACE
AX0      L     R14,L1LS
         BR    R14
         EJECT
*
*        3RD:  IF THE USER DOES NOT HAVE A PROFILE LIBRARY,
*              WE WILL TRANSFER CONTROL TO A CLIST NAMED 'NEWSPF'
*
*    OBTAIN THE COMMAND AREA AND COPY THE COMMAND IN:
*
XCLIST   ST    R14,L1LS
         DEVTYPE =CL8'ISPPROF',DEVTAREA
         BXH   R15,R15,DONEW      DO NEWSPF IF ISPPROF NOT HERE:
         DEVTYPE =CL8'ISPTLIB',DEVTAREA
         BXH   R15,R15,DONEW      DO NEWSPF IF ISPTLIB NOT HERE:
         DEVTYPE =CL8'ISPPARM',DEVTAREA
         BXH   R15,R15,SX0        SKIP IF ISPPARM NOT HERE:
         TM    WASPROF,X'FF'      WAS ISPPROF ALREADY ALLOCATED
         BZ    XX0                NEWSPF DONE IF ISPPROF WAS THERE
         SPACE
DONEW    LA    R3,CMDAREA0        R3->SP=0 CMD BLD AREA
         LA    R2,SETCMD          R2->NEWSPF SETUP CMD
         BAL   R14,GETCMD         MOVE THE CMD
         L     R2,CPPLCBUF        R2->USERS CMD
         XC    2(2,R2),2(R2)      RESET OFFSET TO 0
         BAL   R14,GETCMD         MOVE THE CMD
         DEVTYPE =CL8'ISPPARM',DEVTAREA
         BXH   R15,R15,GET78      SKIP CLEANUP IF SPFMVS NOT PRODUCTION
         LA    R2,CLEANCMD        R2->NEWSPF CLEANUP CMD
         BAL   R14,GETCMD         MOVE THE CMD
         B     GET78              GO GET 78 AREA
         SPACE
GETCMD   LH    R15,0(,R2)         R15=CMD LENGTH
         BCTR  R15,R0             R15-1 FOR EXEC
         EX    R15,MCMD1          MOVE THE CMD BUF
MCMD1    MVC   0(0,R3),0(R2)      FOR EXEC
         AH    R3,0(,R2)          R3->NEXT FREE AREA
         BR    R14
         SPACE
SETCMD   DC    H'16',H'0',CL12'NEWSPF SETUP'   CMD BUF
         SPACE
CLEANCMD DC    H'18',H'0',CL14'NEWSPF CLEANUP'   CMD BUF
         SPACE
GET78    LA    R1,CMDAREA0        R1->1ST CMD
         SR    R3,R1              R3=LENGTH OF ALL CMDS
         LA    R0,16(,R3)         R0=CMD LENGTHS+LSD LEN
         O     R0,=X'4E000000'    SUBPOOL=78
         GETMAIN R,LV=(0)         ASK SYSTEM FOR IT
         LR    R5,R1              R5 -> LSD AREA
         USING LSD,R5             TELL ASSEMBLER WE HAVE IT
         SPACE
         MOVE  COMMANDS,0(R3),CMDAREA0  MOVE CMDS TO SP=78 AREA
         STH   R3,LSDTOTLN        PASS THE CMD AREA LENGTH
         EJECT
*
*    BUILD THE LSD DESCRIBING THE COMMAND:
*
LSDINIT  LA    R4,COMMANDS        R4 -> COMMANDS
         ST    R4,LSDADATA        SAVE IT
         ST    R4,LSDANEXT        "
         MVC   LSDRCLEN,=H'0'     RECLEN=0->FORMAT V RECORDS
*
*    NOW THAT  WE HAVE BUILT IT,LETS PUT IT ON THE STACK
*
         L     R7,CPPLECT         R7->ECT!
         LA    R6,ECB             R6 -> ECB        BLOCK.
*
         STACK PARM=STACKL,UPT=(R9),ECT=(R7),ECB=(R6),             XXXXX
               STORAGE=LSD,MF=(E,IOPL)
         SPACE
         LA    R15,4              RC=4->SKIP ISPF/PDF CALL
         B     XX0
SX0      SLR   R15,R15            RC=0
XX0      L     R14,L1LS
         BR    R14
         EJECT
*        4TH:  NOW FIND THE REAL  ISPF OR PDF GUY AND CALL HIM:
*
CALLISPF ST    R14,L1LS
         WXTRN ISRPCP,ISPICP
         L     R15,=A(ISRPCP)
         LTR   R15,R15            PDF?
         BNZ   CALLHIM            YEP
         L     R15,=A(ISPICP)     ISPF?
         LTR   R15,R15            ISPF?
*V1M3    BZ    EXIT               NOPE...?!
         BNZ   CALLHIM                                  V1M3
         LOAD  EP=ISRPCP,SF=(E,LL)                      V1M3
         LR    R15,R0             R15->ISPF/PDF         V1M3
CALLHIM  LR    R1,R11             R1->ORIGINAL PARM LIST
         BALR  R14,R15            CALL ISPF GUY
         L     R14,L1LS
         BR    R14
         EJECT
*
*    CONSTANTS AND WORKAREAS
*
         LTORG
         SPACE 3
WORKAREA DSECT
SAVEAREA DS    18F                SAVEAREA
CHEKWORD DS    CL8                COMPARE STRING
NEWCPPL  DS    4F                 SAVE CPPL
NEWECT   DS    0D                 SAVE ECT
         DS    XL64
L1LS     DS    F
L2LS     DS    F
L3LS     DS    F
         SPACE
DEVTAREA DS    6F
WASPROF  DS    H
PRODSN   DS    CL44
PRODSNL  DS    H
LL       LOAD  SF=L               V1M3
         SPACE
DYNAPARM DYNABLK 3,MF=L
DYNATU1  DDNTU ISPPROF,7,MF=L     DDN TEXT UNIT
DYNATU2  DSNTU PRODSN,44,MF=L     DSN TEXT UNIT
DYNATU3  DSPTU SHR,MF=L           DISP TEXT UNIT
         SPACE
CMDAREA0 DS    CL500              COMMANDS
         SPACE
IOPL     DS    4F                 IOPL
ECB      DS    F                  ECB
STACKL   STACK MF=L               STACK LIST
WORKLEN  EQU   *-WORKAREA
         EJECT
         IKJCPPL
         IKJECT
         IKJUPT
         IKJPSCB
         EJECT
LSD      IKJLSD                   LSD
COMMANDS DS    0H                 COMMAND AREA SP=78
         END
