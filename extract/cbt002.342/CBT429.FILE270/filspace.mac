*        THIS PROGRAM IS A SUBROUTINE THAT ACCEPTS A DATASET NAME
*        AND THE VOLUME SERIAL NUMBER THAT IS PASSED TO IT AND
*        RETURNS TO THE INVOKER THE NUMBER OF USED EXTENTS AND THE
*        NUMBER OF USED TRACKS.
*
*        TO USE THIS SUBROUTINE, DO THE FOLLOWING:
*
*           1.  PLACE THE FOLLOWING DATA AREA IN THE WORKING-STORAGE:
*
*               01  FILSPACE-I-O-AREA.
*                   05  FILLER                    PIC X(02).
*                   05  IN-DSN                    PIC X(44).
*                   05  IN-VOL-SER                PIC X(06).
*                   05  OUT-NO-OF-USED-EXTENTS    PIC 9(2).
*                   05  OUT-NO-OF-USED-TRACKS     PIC 9(5).
*
*           2.  PLACE THE FOLLOWING CODE IN THE PROCEDURE DIVISION:
*
*               MOVE DATASET NAME
*                 TO IN-DSN OF FILSPACE-I-O-AREA.
*
*               MOVE VOLUME SERIAL NUMBER
*                 TO IN-VOL-SER OF FILSPACE-I-O-AREA.
*
*               CALL 'FILSPACE' USING FILSPACE-I-O-AREA.
*
*
*        POSSIBLE RETURN CODES
*        _____________________
*
*           RETURN CODE        MEANING
*           ___________        ______________________________________
*
*               0              SUCCESSFUL COMPLETION
*               4              REQUIRED VOLUME IS NOT MOUNTED
*               8              DATASET IS NOT FOUND ON VOLUME
*                                  INDICATED
*               12             OBTAIN MACRO RETURNED WITH
*                                  RC = 12, 16, OR 20
*               16             ERROR IN VOL2DEVT WAS ENCOUNTERED
*
*
*---------------------------------------------------------------------
*
*  ACTIVITY LOG:
*     VERSION 2.0  -  GORDON SCHILLINGER  DIS/CSD             9/9/88
*                     MODIFIED CODE TO BE RE-ENTERANT
*
*---------------------------------------------------------------------
         EJECT
**********************************************
*                                            *
*        I N I T I A L I Z A T I O N         *
*                                            *
**********************************************
*
FILSPACE ENTERR LEVEL=V_2.0
         LR    R11,R1
         L     R9,0(R11)
         MVC   PASSAREA,0(R9)
********************************************************************
*                                                                  *
*        M A I N   L I N E   L O G I C                             *
*                                                                  *
********************************************************************
*
         MVC   PROCESSW,=CL3'YES'  MOVE 'YES' TO PROCESSW
         LA    R10,0               R10 ==> 0
*
***      INITIALIZE DYNAMIC AREAS
         MVI   CAMLIST2,193
         LA    R1,INDSN
         LA    R2,INVOL
         LA    R3,OBTAREA
         STM   R1,R3,CAMLIST2+4
         MVI   CAMLIST3,192
         MVI   CAMLIST3+1,128
         LA    R1,CCHHR
         LA    R2,INVOL
         LA    R3,DCB3AREA
         STM   R1,R3,CAMLIST3+4
         MVC   PACKED0(PACKILEN),PACKINIT
*
         BAL   R14,OBTANE          PERFORM ROUTINE TO DO OBTAIN
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   GETOUT              IF SO, BRANCH TO GETOUT
         BAL   R14,EYEDSCB1        PERFORM ROUTINE TO PROCESS THE DSCB1
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   GETOUT              IF SO, BRANCH TO GETOUT
         CLC   PROCDCB3,=CL3'YES'  DO WE NEED TO PROCESS THE DSCB3 ?
         BNE   GETOUT              IF NOT, BRANCH TO GETOUT
         BAL   R14,EYEDSCB3        PERFORM ROUTINE TO PROCESS THE DSCB3
GETOUT   B     SHUTDOWN            BRANCH TO SHUTDOWN
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR DOING AN OBTAIN ON THE    *
*        DATASET NAME                                              *
*                                                                  *
*        IF THE OBTAIN MACRO ISSUES A RETURN CODE OF 0, THEN       *
*        THIS ROUTINE MOVES 'YES' TO PROCESSW ELSE IT MOVES        *
*        'NO ' TO PROCESSW                                         *
*                                                                  *
********************************************************************
*
OBTANE   ST    R14,SAVEIT1
OBTAAN   OBTAIN CAMLIST2
         SPACE 2
         C     R15,=F'0'              COMPARE REG 15 TO BE = 0
         BE    EXITOBT                IF REG 15=0, BRANCH TO EXITOBT
         C     R15,=F'4'              COMPARE REG 15 TO BE = 4
         BE    RCODE4                 IF REG 15=4, BRANCH TO RCODE4
         C     R15,=F'8'              COMPARE REG 15 TO BE = 8
         BE    RCODE8                 IF REG 15=8, BRANCH TO RCODE8
         LA    R10,12                 R10==> 12
         B     MOVENOPE               BRANCH TO MOVENOPE
RCODE4   LA    R10,4                  R10==> 4
         B     MOVENOPE               BRANCH TO MOVENOPE
RCODE8   LA    R10,8                  R10==> 8
MOVENOPE MVC   PROCESSW,=CL3'NO '     MOVE 'NO ' TO PROCESSW
EXITOBT  L     R14,SAVEIT1
         BR    14                     RETURN
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR PROCESSING THE DSCB1.     *
*                                                                  *
*        IF AN ERROR IS ENCOUNTERED, THIS ROUTINE DOES THE         *
*        FOLLOWING:                                                *
*                                                                  *
*             .  MOVES 'NO ' TO PROCESSW                           *
*             .  MOVES APPROPRIATE VALUE TO REGISTER 10            *
*                   WHICH IDENTIFIES THE REASON FOR THE ERROR      *
*                                                                  *
*        IF NO ERROR IS ENCOUNTERED AND THIS ROUTINE CALCULATES    *
*        THAT THE USED EXTENTS DOES NOT EXCEED 3 (HENCE THERE      *
*        IS NO DSCB3), THEN THIS ROUTINE DOES THE FOLLOWING:       *
*                                                                  *
*             .  MOVES 'NO ' TO PROCDCB3                           *
*             .  MOVES APPROPRIATE VALUE TO OUTTRKNO               *
*             .  MOVES APPROPRIATE VALUE TO OUTEXTNO               *
*                   (I.E 1, 2 OR 3)                                *
*                                                                  *
*        IF NO ERROR IS ENCOUNTERED AND THIS ROUTINE CALCULATES    *
*        THAT THE USED EXTENTS DOES EXCEED 3 AND THAT IT NEEDS TO  *
*        PROCESS THE DSCB3, THEN THIS ROUTINE DOES THE FOLLOWING:  *
*                                                                  *
*             .  MOVES 'YES' TO PROCDCB3                           *
*             .  MOVES APPROPRIATE VALUE TO OUTTRKNO               *
*                                                                  *
********************************************************************
EYEDSCB1 ST    R14,SAVEIT2
         MVC   PROCDCB3,=CL3'NO '  MOVE 'NO ' TO PROCDCB3
         ZAP   RUNTOT,PACKED0      RUNTOT = 0
*
         MVC   DS1LSTAR,OBTAREA+54
         CLC   DS1LSTAR,=XL3'000000'
         BNE   NOTEMPTY
         MVC   OUTEXTNO,=CL2'00'
         MVC   OUTTRKNO,=CL5'00000'
         B     EXITDCB1
NOTEMPTY MVC   HALFWORD(2),DS1LSTAR
         LH    R5,HALFWORD
         AH    R5,=H'1'
         CVD   R5,CVDOPRND
         MVC   LSTRTRKS(3),CVDOPRND+5
         UNPK  OUTTRKNO(5),LSTRTRKS(3)
         OI    OUTTRKNO+4,X'F0'
*
         CLI   OBTAREA+61,X'00'    IS 1ST EXTENT DESC INSIGNIFICANT ?
         BE    EXITDCB1            IF SO, BRANCH TO EXITDCB1
         MVC   OUTEXTNO,=CL2'01'   MOVE 01 TO OUTEXTNO
         MVC   BGNCCHH(4),OBTAREA+63
         MVC   ENDCCHH(4),OBTAREA+67
         BAL   R14,CALCTRKS        CALC # TRACKS USED IN THIS EXTENT
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   EXITDCB1            IF SO, BRANCH TO EXITDCB1
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL USED TRACKS SO FAR
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT EXCEED DS1LSTAR?
         BNH   EXITDCB1            IF SO, BRANCH TO EXITDCB1
         CLI   OBTAREA+71,X'00'    IS 2ND EXTENT DESC INSIGNIFICANT ?
         BE    EXITDCB1            IF SO, BRANCH TO EXITDCB1
         MVC   OUTEXTNO,=CL2'02'   MOVE 02 TO OUTEXTNO
         MVC   BGNCCHH(4),OBTAREA+73
         MVC   ENDCCHH(4),OBTAREA+77
         BAL   R14,CALCTRKS        CALC # TRACKS USED IN THIS EXTENT
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   EXITDCB1            IF SO, BRANCH TO EXITDCB1
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL # USED TRACKS SO FAR
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT EXCEED DS1LSTAR
         BNH   EXITDCB1            IF SO, BRANCH TO EXITDCB1
         CLI   OBTAREA+81,X'00'    IS 3RD EXTENT DESC INSIGNIFICANT ?
         BE    EXITDCB1            IF SO, BRANCH TO EXITDCB1
         MVC   OUTEXTNO,=CL2'03'   MOVE 03 TO OUTEXTNO
         MVC   BGNCCHH(4),OBTAREA+83
         MVC   ENDCCHH(4),OBTAREA+87
         BAL   R14,CALCTRKS        CALC # TRACK USED THIS EXTENT
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   EXITDCB1            IF SO, BRANCH TO EXITDCB1
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL # USED TRACKS SO FAR
         CP    LSTRTRKS,RUNTOT     DOES EXTENT EXCEED DS1LSTAR?
         BNH   EXITDCB1            IF SO, BRANCH TO EXITDCB1
         MVC   PROCDCB3,=CL3'YES'  MOVE 'YES' TO PROCDCB3
         MVC   CCHHR,OBTAREA+91    MOVE CCHHR PTR FOR DSCB3 TO CCHHR
EXITDCB1 L     R14,SAVEIT2
         BR    14                  RETURN
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR PROCESSING THE DSCB3      *
*        AND THEN GENERATING THE EXTENT NUMBER                     *
*                                                                  *
********************************************************************
EYEDSCB3 ST    R14,SAVEIT3
DODSCB3  OBTAIN CAMLIST3
         SPACE 2
         C     R15,=F'0'              COMPARE REG 15 TO BE = 0
         BE    COUNTEM                IF REG 15=0, BRANCH TO COUNTEM
         C     R15,=F'4'              COMPARE REG 15 TO BE = 4
         BE    DSCB3RC4               IF REG 15=4, BRANCH TO DSCB3RC4
         C     R15,=F'8'              COMPARE REG 15 TO BE = 8
         BE    DSCB3RC8               IF REG 15=8, BRANCH TO DSCB3RC8
         LA    R10,12                 R10==> 12
         B     EXITDCB3               BRANCH TO EXITDCB3
DSCB3RC4 LA    R10,4                  R10==> 4
         B     EXITDCB3               BRANCH TO EXITDCB3
DSCB3RC8 LA    R10,8                  R10==> 8
         B     EXITDCB3               BRANCH TO EXITDCB3
COUNTEM  ZAP   PACKEXT#,PACKED3
         LA    R5,DCB3AREA            R5 ==> ADDRESS OF DSCB3
         A     R5,=F'4'               OFFSET TO DS3EXTNT
         LA    R6,1
LOOP3A   C     R6,=F'4'
         BH    NXTGROUP
         CLI   0(R5),X'00'
         BE    UNPKEXT#
         AP    PACKEXT#,PACKED1
         MVC   BGNCCHH(4),2(R5)
         MVC   ENDCCHH(4),6(R5)
         BAL   R14,CALCTRKS        CALC # TRACKS USED THIS EXTENT
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   EXITDCB3            IF SO, BRANCH TO EXITDCB3
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL USED TRACKS SO FAR
         CP    LSTRTRKS,RUNTOT     DOES EXTENT EXCEED DS1LSTAR
         BNH   UNPKEXT#            IF SO, BRANCH TO UNPKEXT#
         A     R6,=F'1'
         A     R5,=F'10'
         B     LOOP3A
NXTGROUP A     R5,=F'1'            OFFSET TO DS3ADEXT
         LA    R6,1
LOOP3B   C     R6,=F'9'
         BH    UNPKEXT#
         CLI   0(R5),X'00'
         BE    UNPKEXT#
         AP    PACKEXT#,PACKED1
         MVC   BGNCCHH(4),2(R5)
         MVC   ENDCCHH(4),6(R5)
         BAL   R14,CALCTRKS        CALC # TRACKS USED THIS EXTENT
         CLC   PROCESSW,=CL3'YES'  WERE ANY ERRORS ENCOUNTERED ?
         BNE   EXITDCB3            IF SO, BRANCH TO EXITDCB3
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL USED TRACKS SO FAR
         CP    LSTRTRKS,RUNTOT     DOES EXTENT EXCEED DS1LSTAR?
         BNH   UNPKEXT#            IF SO, BRANCH TO UNPKEXT#
         A     R6,=F'1'
         A     R5,=F'10'
         B     LOOP3B
UNPKEXT# UNPK  OUTEXTNO(2),PACKEXT#(3)
         OI    OUTEXTNO+1,X'F0'
EXITDCB3 L     R14,SAVEIT3
         BR    14                  RETURN
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE CALCULATES THE NUMBER OF TRACKS GIVEN           *
*        A BEGINNING CCHH AND AN ENDING CCHH                          *
*                                                                     *
*        BEFORE PERFORMING THIS ROUTINE, DO THE FOLLOWING:            *
*                   MOVE THE BEGINNING CCHH TO BGNCCHH                *
*                   MOVE THE ENDING CCHH TO ENDCCHH                   *
*                                                                     *
*        AFTER PERFORMING THIS ROUTINE, THE NUMBER OF USED            *
*        TRACKS WILL BE IN TOTRACKS                                   *
*                                                                     *
***********************************************************************
CALCTRKS ST    R14,SAVEIT4        STORE R14 CONTENTS IN SAVEIT4
         LH    R7,BGNCCHH              ----
         CVD   R7,CVDOPRND               ----- PACK BEGINNING CYL
         MVC   BEGINCYL(3),CVDOPRND+5  ----
         LH    R7,ENDCCHH              ----
         CVD   R7,CVDOPRND               ----- PACK ENDING CYL
         MVC   ENDCYL(3),CVDOPRND+5    ----
         LH    R7,BGNCCHH+2            ----
         CVD   R7,CVDOPRND               ----- PACK BEGINNING TRK
         MVC   BEGINTRK(3),CVDOPRND+5  ----
         LH    R7,ENDCCHH+2            ----
         CVD   R7,CVDOPRND               ----- PACK ENDING TRK
         MVC   ENDTRK(3),CVDOPRND+5    ----
         ZAP   CYLDIFF,ENDCYL          CYLDIFF = ENDING CYL #
         SP    CYLDIFF,BEGINCYL        CYLDIFF = ENDING CYL - BEGIN CYL
         BAL   14,DETRKCYL             GET # TRACK/CYL
         CP    ENDTRK,BEGINTRK         IF ENDING TRK # > BEGINNING TRK
         BH    ENDISGT                    # THEN BRANCH TO ENDISGT
         ZAP   TRKDIFF,ENDTRK          TRKDIFF = ENDING TRACK #
         SP    TRKDIFF,BEGINTRK        TRKDIFF = ENDING TRK - BEGIN TRK
         AP    TRKDIFF,PACKED1         ADD 1 TO TRKDIFF
         B     DOCALC                  BRANCH TO DOCALC
ENDISGT  SP    CYLDIFF,PACKED1         SUBTRACT 1 FROM CYLDIFF
         ZAP   REMANTRK,TRKPRCYL       REMANTRK = TRKPRCYL
         SP    REMANTRK,BEGINTRK       REMANTRK = TRKPRCYL - BEGINTRK
         ZAP   TRKDIFF,REMANTRK        TRKDIFF = REMANTRK
         AP    TRKDIFF,ENDTRK          TRKDIFF = REMANTRK + ENDTRK
         AP    TRKDIFF,PACKED1         ADD 1 TO TRKDIFF
DOCALC   ZAP   TOTRACKS,TRKPRCYL       TOTRACKS = TRKPRCYL
         MP    TOTRACKS,CYLDIFF        TOTRACKS = TRKPRCYL X CYLDIFF
         AP    TOTRACKS,TRKDIFF        ADD TRKDIFF TO TOTRACKS
         L     R14,SAVEIT4
         BR    R14                     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE EXAMINES VOL SER TO DETERMINE THE DEVICE TYPE   *
*        IN ORDER TO DETERMINE THE NUMBER OF TRACKS PER CYLINDER      *
*                                                                     *
*        AFTER PERFORMING THIS ROUTINE, THE NUMBER OF TRACKS PER      *
*        CYLINDER IS IN TRKPRCYL                                      *
*                                                                     *
*        IF AN ERROR IS ENCOUNTERED IN THIS ROUTINE, IT WILL          *
*        MOVE 'NO ' TO PROCESSW AND LOAD REGISTER 10 WITH 16          *
*                                                                     *
***********************************************************************
DETRKCYL ST    R14,SAVEIT5
         MVC   VOL2DVOL,INVOL     MOVE VOL SER TO VOL2DVOL
         CALL  VOL2DEVT,(DEVTAREA),MF=(E,CPPL)
         C     R15,=F'0'          WAS VOL2DEVT SUCCESSFUL ?
         BE    EYEDEVT            IF SO, BRANCH TO EYEDEVT
         MVC   PROCESSW,=CL3'NO ' MOVE 'NO ' TO PROCESSW
         LA    R10,16             R10 ==> 16
         B     EXITDETR           BRANCH TO EXITDETR
EYEDEVT  CLC   OUTDEVT(4),=CL4'3330'
         BE    D3330
         CLC   OUTDEVT(4),=CL4'3350'
         BE    D3350
         CLC   OUTDEVT(4),=CL4'3380'
         BE    D3380
         MVC   PROCESSW,=CL3'NO ' MOVE 'NO ' TO PROCESSW
         LA    R10,16             R10 ==> 16
         B     EXITDETR           BRANCH TO EXITDETR
D3330    ZAP   TRKPRCYL,PACKED19  MOVE 19 TO TRKPRCYL
         B     EXITDETR           BRANCH TO EXITDETR
D3350    ZAP   TRKPRCYL,PACKED30  MOVE 30 TO TRKPRCYL
         B     EXITDETR           BRANCH TO EXITDETR
D3380    ZAP   TRKPRCYL,PACKED15  MOVE 15 TO TRKPRCYL
EXITDETR L     R14,SAVEIT5
         BR    R14                RETURN
         EJECT
********************************************************************
*                                                                  *
*        E N D  O F   J O B   P R O C E S S I N G                  *
*                                                                  *
********************************************************************
SHUTDOWN LR    R15,R10
         L     R9,0(R11)
         MVC   0(59,R9),PASSAREA
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
         EJECT
********************************************************************
*                                                                  *
*        D A T A   A R E A    (STATIC)                             *
*                                                                  *
********************************************************************
PACKINIT DS    0F
         DC    PL2'0'
         DC    PL2'1'
         DC    PL2'3'
         DC    PL2'15'
         DC    PL2'19'
         DC    PL2'30'
PACKILEN EQU   *-PACKINIT
         LTORG
         EJECT
********************************************************************
*                                                                  *
*        D A T A   A R E A S  (DYNAMIC)                            *
*                                                                  *
********************************************************************
WORKAREA DSECT
SAVEAREA DS    18F
SAVEIT1  DS    F
SAVEIT2  DS    F
SAVEIT3  DS    F
SAVEIT4  DS    F
SAVEIT5  DS    F
CPPL     CALL  ,(0),MF=L
         DS    0D
CAMLIST2 CAMLST SEARCH,INDSN,INVOL,OBTAREA
OBTAREA  DS    0D
         DS    140C
         DS    0D
CAMLIST3 CAMLST SEEK,CCHHR,INVOL,DCB3AREA
DCB3AREA DS    0D
         DS    140C
PROCESSW DS    CL3
PROCDCB3 DS    CL3
CCHHR    DS    CL5
BEGINCYL DS    PL3
BEGINTRK DS    PL3
BGNCCHH  DS    F
CVDOPRND DS    D
CYLDIFF  DS    PL3
DS1LSTAR DS    CL3
ENDCCHH  DS    F
ENDCYL   DS    PL3
ENDTRK   DS    PL3
HALFWORD DS    H
LSTRTRKS DS    PL3
*
PACKED0  DC    PL2'0'
PACKED1  DC    PL2'1'
PACKED3  DC    PL2'3'
PACKED15 DC    PL2'15'
PACKED19 DC    PL2'19'
PACKED30 DC    PL2'30'
*
PACKEXT# DS    PL3
REMANTRK DS    PL3
RUNTOT   DS    PL6
TOTRACKS DS    PL6
TRKDIFF  DS    PL3
TRKPRCYL DS    PL3
*
PASSAREA DS    0CL59
         DS    CL2
INDSN    DS    CL44
INVOL    DS    CL6
OUTEXTNO DS    CL2
OUTTRKNO DS    CL5
*
DEVTAREA DS    0CL16
VOL2DVOL DS    CL6
OUTDEVT  DS    CL8
OUTLEN   DS    CL2
*
WORKLEN  EQU   *-WORKAREA
         END
