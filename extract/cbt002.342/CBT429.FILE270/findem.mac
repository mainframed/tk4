*
****************************************************
*                                                  *
*   FINDEM                                         *
*   ------                                         *
*         MODIFIED SEPT 1984 TO FOLD EACH INPUT    *
*         RECORD BYTE TO UPPER CASE SO THAT THIS   *
*         PROGRAM IS NO LONGER CASE SENSITIVE.     *
*                                                  *
*         MODIFIED SEPT (LATER THAT MONTH) TO      *
*         LOAD R15 (RETURN CODE REGISTER) WITH     *
*         16 IF ATTEMPTING TO SEARCH A LIBRARY     *
*         WITH MORE THAN 2500 MEMBERS RATHER       *
*         THAN GETTING AN OC4.                     *
*                                                  *
****************************************************
*
FINDEM   ENTER (14,12),(3,4,12),(,WORKLEN)
         USING WORKAREA,13
         USING MEMBERDS,7
         BAL   R5,PARMPTR  GET PARM
         OPEN  (DIRDCB,(INPUT))
         BAL   R5,BLDTBL
         CLOSE (DIRDCB)
         OPEN  (PDSDCB,(INPUT))
         OPEN  (PRINT,(OUTPUT))
         LA    R7,TABLE            SET ADDR POINTER TO 1ST MEM IN TABLE
ENDCOMP  EQU   *
         MVI   FLAG,X'FF'      SET FLAG OFF
         CLC   0(8,R7),FFFF        HAVE ALL MEMBERS BEEN PROCESSED?
         BE    ALLDONE             YES, GETOUT OF THIS MESS
         BAL   R5,FINDMEM          NO, GO FIND THIS MEMBER  R7 POINTS
         BAL   R5,PRNTMEM       TELL US WHICH MEMBER WE ARE CHECKING
         XR    R6,R6             CLEAR POINTER REG
READBAL  EQU   *                   TO THE MEMBER TO BE FOUND
         BAL   R5,GETRCD           GO GET A RECORD FROM THIS MEMBER.
*                                  COME BACK WITH R6 POINTING TO THE
*                                  RECORD TO BE PROCESSED
         BAL   R5,SCANRCD          GO SCAN THE RECORD POINTED TO BY R6
*                                  IF YOU FIND A (+1), POINT R8 TO THE
*                                  BEGENNING OF THE DSN , PUT THE LEN
*                                  IN R10 AND PUT A NON-ZERO IN R15.
*                                  DON'T CHANGE R6.
         LTR   R15,R15             DID WE FIND ONE?
         BZ    READBAL             NO, GO FIND US ANOTHER RCD
*
*    WE FINALLY HAVE WHAT WE ARE LOOKING FOR SO LET'S PRINT IT
*
         BAL   R5,PRTRCD
         BCR   0,0
         BCR   0,0
         BCR   0,0
         BCR   0,0
         BCR   0,0
         BCR   0,0
         B     READBAL             GO GET ANOTHER RECORD
ALLDONE  EQU   *
         CLOSE (PDSDCB)
LEAVE    EQU   *
         CLOSE (PRINT)
         CLC   ALLOK,=CL3'YES'
         BE    GOODEXIT
         LEAVE EQ,CC=16
GOODEXIT LEAVE CC=0
GETRCD   EQU   *
         XR    R10,R10
         LTR   R6,R6               1ST TIME THRU?
         BZ    GETBLK              YES, GO READ A BLOCK OF DATA
         TM    PDSDCB+36,X'40'
         BNZ   BELOW
         LH    R10,PDSDCB+82       POINT TO NEXT RECORD
         AR    R6,R10
         CLC   0(8,R6),FFFF        WAS LAST RCD END OF BLOCK?
         BE    GETBLK              YES, GO GET ANOTHER
GETOUT2  BR    R5
BELOW    EQU   *
         IC    R10,1(R6)           POINT TO NEXT RECORD
         AR    R6,R10
         CLC   0(8,R6),FFFF        WAS LAST RCD END OF BLOCK?
         BE    GETBLK              YES, GO GET ANOTHER
         B     GETOUT2
GETBLK   EQU   *
         CLI  FLAG,X'00'    FLAG BEEN SET???
         BNE   NOTSET       NOT END OF FILE PROBABLY
         CLOSE (PDSDCB)     I THINK THIS IS STUPID
         OPEN  (PDSDCB,(INPUT))  BUT IT HAS TO BE DONE TO MAKE IT WORK
         MVI   FLAG,X'FF'        RESET FLAG
         B     NXTMEM            AND GET ANOTHER MEMBER
NOTSET   LA    R14,INAREA               CLEAR INPUT
         L     R15,=A(L'INAREA)         LENGTH TO CLEAR
         LA    R0,0                     SHOW CLEAR ONLY
         LA    R1,0
         ICM   R1,8,=X'FF'               FILL CAHRACTER
         MVCL  R14,R0                 CLEAR IT
         READ  PDSECB,SF,PDSDCB,INAREA,'S'   READ A DATA BLOCK
         CHECK PDSECB              WAIT FOR THE READ TO COMPLETE
SYN      EQU   *
         CLI  PDSECB,X'7F'   ALL GOOD
         BE   NOSET
         MVI  FLAG,X'00'      NOPE SET FLAG TO TELL US
NOSET    LA    R6,INAREA           POINT TO 1ST RCD OF BLOCK
         TM    PDSDCB+36,X'40'
         BZ    GETOUT2
         LA    R6,4(R6)
         B     GETOUT2
PRNTMEM  EQU   *
         BR    R5
         EJECT
SCANRCD  EQU   *
*
*   TRANSLATE RECORD TO UPPER CASE
*
         ST    R7,SAVEREG7         SAVE REG 7 IN SAVEREG7
         ST    R9,SAVEREG9         SAVE REG 9 IN SAVEREG9
         TM    PDSDCB+36,X'40'     RECFM = F ?
         BNZ   TRNVAR              IF NOT, BRANCH TO TRNVAR
         LH    R7,PDSDCB+82        R7==> LRECL OF DCB
         LR    R9,R6               R9==> POINTS TO BEGINNING OF RECORD
*                                      TO BE TRANSLATED
         B     DOTRNSL             BRANCH TO DOTRNSL
TRNVAR   MVC   VLRECL,0(R6)
         LH    R7,VLRECL           R7==> LRECL OF THIS RECORD
         S     R7,=F'4'            R7==> LRECL - 4 (CUZ OF RDW)
         LR    R9,R6
         A     R9,=F'4'            R9==> POINTS TO BEGINNING OF RECORD
*                                      TO BE TRANSLATED OFFSET BY RDW
DOTRNSL  S     R7,=F'1'            SUBTRACT 1 FOR THE EX
         EX    R7,TRPARM           DO THE TRANSLATION
         L     R7,SAVEREG7         RESTORE REGISTER 7
         L     R9,SAVEREG9         RESTORE REGISTER 9
*
*   END OF TRANSLATION
*
         LR    R8,R6               GET BEGINNING ADDR (LEAVE R6 ALONE)
         XR    R9,R9               CLEAR R9
         XR    R15,R15             CLEAR R15
         TM    PDSDCB+36,X'40'
         BNZ   VSCAN
         LH    R9,PDSDCB+82        GET LRECL
*
*   START SCANNING RCD
*
OL       EQU   *
         LA    R1,PARMTBLE
IL       EQU   *
         L     R10,4(R1)
         L     R11,0(R1)
         EX    R10,CLCPARM
         BE    FOUNDIT
         LA    R1,8(,R1)           BUMP OVER EIGHT BYTES
         CLC   0(8,R1),=X'FFFFFFFFFFFFFFFF'
         BNE   IL
         LA    R8,1(,R8)           NO, BUMP OVER ONE BYTE
         BCT   R9,OL               DO N(LRECL) TIMES
         B     GETOUT3
VSCAN    EQU   *
         IC    R9,1(R6)
         LA    R8,4(R8)
         B     OL
FOUNDIT  EQU   *
         LA    R15,1               SAY WE FOUND ONE
GETOUT3  EQU   *
         BR    R5
         EJECT
NXTMEM   EQU   *
         LA    R7,8(R7)            SET ADDR TO NEXT MEMBER IN PDS
         SR    R6,R6               CLEAR R6
         B     ENDCOMP             GO DO IT ALL AGAIN
FINDMEM  EQU   *
         SR    R15,R15
*
         FIND  PDSDCB,MEMBER,D
         LTR   R15,R15
         BNZ   BLUP1
         BR    R5
BLUP1    EQU   *
         B     *+4
         DC    C'MEMBER NOT FOUND'
         DS    0H
         EJECT
BLDTBL   EQU   *
         LA    R7,TABLE            GET ADDR OF MEMBER TABLE
         LA    R8,2500             SET MAXIMUM NUMBER OF ENTRIES
READBLK  EQU   *
         READ  DIRECB,SF,DIRDCB,DIRECTRY,'S'
         CHECK DIRECB
         LA    R6,DIRECTRY+10      GET ADDR OF FIRST ENTRY
TABLLOOP EQU   *
         CP    PACKCTR,PACK2500    HAVE WE EXHAUSTED TABLE ?
         BL    MOVEITIN            IT NOT, BRANCH TO MOVEITIN
         MVC   ALLOK,=CL3'NO '     MOVE NO TO ALLOK WHICH WILL RESULT
         B     LEAVE               IN THE RETURN CODE TO BE SET TO 16
MOVEITIN MVC   0(8,R7),0(R6)       MOVE MEMBER NAME TO TABLE
         AP    PACKCTR,PACK1
         LA    R7,8(R7)            GET ADDR OF NEXT TABLE ENTRY
         CLC   0(8,R6),DIRECTRY    IS THIS THE LAST GUY IN THIS BLOCK?
         BNE   CONTINUE            NO GO AHEAD WITH THIS BLOCK
         CLC   DIRECTRY(8),FFFF   YES,IS THIS LAST DIRECTORY BLOCK?
         BNE   READBLK             NO, GO GET ANOTHER BLOCK
         BR    R5                  YES GO BACK TO MAIN RTN
CONTINUE EQU   *
*  GET NEXT ENTRY IN DIRECTORY BLOCK
         NI    11(R6),X'1F'        GET RID OF TOP 3 BITS OF INFO
         XR    R2,R2               CLEAR R2
         IC    R2,11(R6)           GET LENGTH OF VARIABLE PORTION IN
*                                  HALF WORDS
         SLA   R2,1                CHANGE TO NUMBER OF BYTES
         AR    R6,R2               ADD TO BASE ADDRESS
         LA    R6,12(R6)           ADD LENGTH OF FIXED PORTION
         BCT   R8,TABLLOOP         GO PROCESS THIS ENTRY (2500 MAX)
         B     *+4                 BLOW-UP IF TOO MANY
         DC    C'TOO MANY ENTRIES IN DIRECTORY FOR TABLE'
         DS    0H
NOPARM   EQU   *
         OPEN  (PRINT,OUTPUT)
         PUT   PRINT,NOPARMSG
         B     LEAVE
PARMPTR  EQU   *
         L     R1,0(R1)
         CLI   1(R1),X'00' IS THERE A PARM THERE?
         BE    NOPARM      BRANCH IF NO
         XR    R2,R2
         IC    R2,1(R1)
         STH   R2,PARMLEN
         BCTR  R2,0
         EX    R2,MVPARM
         XR    R6,R6
         LA    R8,PARMTBLE
         LA    R1,PARM
         XR    R2,R2
         ST    R1,0(R8)
COMP     EQU   *
         CLI   0(R1),C','       IS THERE A COMMA?
         BE    COMMA            YES GOTO COMMA
         LA    R1,1(R1)
         LA    R2,1(R2)
CHPARM   EQU   *
         LA    R6,1(R6)
         CH    R6,PARMLEN
         BNE   COMP
         BCTR  R2,0
         ST    R2,4(R8)
         MVC   8(8,R8),=X'FFFFFFFFFFFFFFFF'
         BR    R5
COMMA    EQU   *
         BCTR  R2,0
         ST    R2,4(R8)
         LA    R8,8(R8)
         LA    R1,1(R1)
         ST    R1,0(R8)
         XR   R2,R2
         B     CHPARM
PRTRCD   EQU   *         PRINT THIS RECORD AND THE SEQ # OF THE JCL
         LR    R8,R6
         TM    PDSDCB+36,X'40'
         BNZ   VPRINT
         XR    R9,R9               CLEAR R9
         LH    R9,PDSDCB+82        GET LRECL
         B     PCHECK
VPRINT   EQU   *
         IC    R9,1(R6)
         LA    R8,4(R8)
PCHECK   EQU   *
         MVC   MEMNAM,MEMBER       MOVE MEMBER NAME OF PROC TO PRINT
         CLC   MEMNAM,LASTMEM
         BE    GETOUT
         PUT   PRINT,PRTLINE       PRINT IT
         MVC   LASTMEM,MEMNAM
GETOUT   BR    R5
MVPARM   MVC   PARM(0),2(R1)
TRPARM   TR    0(0,R9),TRTABLE
CLCPARM  CLC   0(0,R11),0(R8)
NOPARMSG DC    CL78' NO STRING GIVEN FOR PROGRAM TO FIND.... '
         EJECT
DIRDCB   DCB   DDNAME=PROCLIB,BLKSIZE=256,KEYLEN=8,LRECL=256,DSORG=PS, X
               MACRF=R,RECFM=F
PDSDCB DCB DDNAME=PROCLIB,DSORG=PO,MACRF=R,EODAD=NXTMEM,SYNAD=SYN,     X
               KEYLEN=0
PRINT    DCB   DDNAME=PRINT,DSORG=PS,MACRF=(PM),BLKSIZE=78,LRECL=78,   X
               RECFM=FBA
         LTORG
PRTLINE  DS    0CL78
         DC    CL1' '
         DC    CL24' FOUND IN MEMBER NAME = '
MEMNAM   DC    CL8' '
         DC    CL45' '
HOLDREC  DC    CL80' '
LASTMEM  DC    CL8'        '
ALLOK    DC    CL3'YES'
PACK2500 DC    PL4'2500'
PACK1    DC    PL1'1'
PACKCTR  DC    PL4'1'
FFFF     DC    8X'FF'
FLAG     DC    X'FF'
DSLEN    DC    F'10399'
DIRECTRY DS    CL264
PARM     DC    CL124' '
PARMLEN  DC    XL2'0'
PARMTBLE DC    120F'0'
VLRECL   DS    H
SAVEREG7 DS    F
SAVEREG9 DS    F
TRTABLE  DC    X'00'
         DC    X'01'
         DC    X'02'
         DC    X'03'
         DC    X'04'
         DC    X'05'
         DC    X'06'
         DC    X'07'
         DC    X'08'
         DC    X'09'
         DC    X'0A'
         DC    X'0B'
         DC    X'0C'
         DC    X'0D'
         DC    X'0E'
         DC    X'0F'
         DC    X'10'
         DC    X'11'
         DC    X'12'
         DC    X'13'
         DC    X'14'
         DC    X'15'
         DC    X'16'
         DC    X'17'
         DC    X'18'
         DC    X'19'
         DC    X'1A'
         DC    X'1B'
         DC    X'1C'
         DC    X'1D'
         DC    X'1E'
         DC    X'1F'
         DC    X'20'
         DC    X'21'
         DC    X'22'
         DC    X'23'
         DC    X'24'
         DC    X'25'
         DC    X'26'
         DC    X'27'
         DC    X'28'
         DC    X'29'
         DC    X'2A'
         DC    X'2B'
         DC    X'2C'
         DC    X'2D'
         DC    X'2E'
         DC    X'2F'
         DC    X'30'
         DC    X'31'
         DC    X'32'
         DC    X'33'
         DC    X'34'
         DC    X'35'
         DC    X'36'
         DC    X'37'
         DC    X'38'
         DC    X'39'
         DC    X'3A'
         DC    X'3B'
         DC    X'3C'
         DC    X'3D'
         DC    X'3E'
         DC    X'3F'
         DC    X'40'
         DC    X'41'
         DC    X'42'
         DC    X'43'
         DC    X'44'
         DC    X'45'
         DC    X'46'
         DC    X'47'
         DC    X'48'
         DC    X'49'
         DC    X'4A'
         DC    X'4B'
         DC    X'4C'
         DC    X'4D'
         DC    X'4E'
         DC    X'4F'
         DC    X'50'
         DC    X'51'
         DC    X'52'
         DC    X'53'
         DC    X'54'
         DC    X'55'
         DC    X'56'
         DC    X'57'
         DC    X'58'
         DC    X'59'
         DC    X'5A'
         DC    X'5B'
         DC    X'5C'
         DC    X'5D'
         DC    X'5E'
         DC    X'5F'
         DC    X'60'
         DC    X'61'
         DC    X'62'
         DC    X'63'
         DC    X'64'
         DC    X'65'
         DC    X'66'
         DC    X'67'
         DC    X'68'
         DC    X'69'
         DC    X'6A'
         DC    X'6B'
         DC    X'6C'
         DC    X'6D'
         DC    X'6E'
         DC    X'6F'
         DC    X'70'
         DC    X'71'
         DC    X'72'
         DC    X'73'
         DC    X'74'
         DC    X'75'
         DC    X'76'
         DC    X'77'
         DC    X'78'
         DC    X'79'
         DC    X'7A'
         DC    X'7B'
         DC    X'7C'
         DC    X'7D'
         DC    X'7E'
         DC    X'7F'
         DC    X'80'
         DC    C'A'
         DC    C'B'
         DC    C'C'
         DC    C'D'
         DC    C'E'
         DC    C'F'
         DC    C'G'
         DC    C'H'
         DC    C'I'
         DC    X'8A'
         DC    X'8B'
         DC    X'8C'
         DC    X'8D'
         DC    X'8E'
         DC    X'8F'
         DC    X'90'
         DC    C'J'
         DC    C'K'
         DC    C'L'
         DC    C'M'
         DC    C'N'
         DC    C'O'
         DC    C'P'
         DC    C'Q'
         DC    C'R'
         DC    X'9A'
         DC    X'9B'
         DC    X'9C'
         DC    X'9D'
         DC    X'9E'
         DC    X'9F'
         DC    X'A0'
         DC    X'A1'
         DC    C'S'
         DC    C'T'
         DC    C'U'
         DC    C'V'
         DC    C'W'
         DC    C'X'
         DC    C'Y'
         DC    C'Z'
         DC    X'AA'
         DC    X'AB'
         DC    X'AC'
         DC    X'AD'
         DC    X'AE'
         DC    X'AF'
         DC    X'B0'
         DC    X'B1'
         DC    X'B2'
         DC    X'B3'
         DC    X'B4'
         DC    X'B5'
         DC    X'B6'
         DC    X'B7'
         DC    X'B8'
         DC    X'B9'
         DC    X'BA'
         DC    X'BB'
         DC    X'BC'
         DC    X'BD'
         DC    X'BE'
         DC    X'BF'
         DC    X'C0'
         DC    X'C1'
         DC    X'C2'
         DC    X'C3'
         DC    X'C4'
         DC    X'C5'
         DC    X'C6'
         DC    X'C7'
         DC    X'C8'
         DC    X'C9'
         DC    X'CA'
         DC    X'CB'
         DC    X'CC'
         DC    X'CD'
         DC    X'CE'
         DC    X'CF'
         DC    X'D0'
         DC    X'D1'
         DC    X'D2'
         DC    X'D3'
         DC    X'D4'
         DC    X'D5'
         DC    X'D6'
         DC    X'D7'
         DC    X'D8'
         DC    X'D9'
         DC    X'DA'
         DC    X'DB'
         DC    X'DC'
         DC    X'DD'
         DC    X'DE'
         DC    X'DF'
         DC    X'E0'
         DC    X'E1'
         DC    X'E2'
         DC    X'E3'
         DC    X'E4'
         DC    X'E5'
         DC    X'E6'
         DC    X'E7'
         DC    X'E8'
         DC    X'E9'
         DC    X'EA'
         DC    X'EB'
         DC    X'EC'
         DC    X'ED'
         DC    X'EE'
         DC    X'EF'
         DC    X'F0'
         DC    X'F1'
         DC    X'F2'
         DC    X'F3'
         DC    X'F4'
         DC    X'F5'
         DC    X'F6'
         DC    X'F7'
         DC    X'F8'
         DC    X'F9'
         DC    X'FA'
         DC    X'FB'
         DC    X'FC'
         DC    X'FD'
         DC    X'FE'
         DC    X'FF'
INAREA   DS    CL24000
WORKAREA DSECT
         DS    18F
TABLE    DS    2501CL8
WORKLEN  EQU   *-WORKAREA
MEMBERDS DSECT
MEMBER   DS    CL8
         END
