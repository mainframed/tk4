         PRINT ON,NOGEN
         SPACE 3
*        THIS PROGRAM IS A SUBROUTINE WHICH DYNAMICALLY ALLOCATES
*        A PARTITIONED DATASET AND ITS MEMBER TO THE DDNAME PROVIDED
*
*        TO CALL THIS SUBROUTINE FROM A COBOL PROGRAM, DO THE
*        FOLLOWING:
*
*            .  PLACE THE FOLLOWING DATA AREA IN WORKING STORAGE:
*
*                    01  ALLOCMEM-I-O-AREA.
*                        05  DDNAME                      PIC X(8).
*                        05  DSNAME                      PIC X(44).
*                        05  MEMBER-NAME                 PIC X(8).
*                        05  SUCCESS-INDICATOR           PIC 9(2).
*
*            .  PLACE THE FOLLOWING CODE IN PROCEDURE DIVISION:
*
*                    MOVE YOUR DDNAME
*                      TO DDNAME OF ALLOCMEM-I-O-AREA.
*                    MOVE YOUR DSNAME OF YOUR PARTITIONED DATASET
*                      TO DSNAME OF ALLOCMEM-I-O-AREA.
*                    MOVE YOUR MEMBER NAME
*                      TO MEMBER-NAME OF ALLOCMEM-I-O-AREA.
*
*                    CALL 'ALLOCMEM' USING ALLOCMEM-I-O-AREA.
*
*
*            .  MAKE SURE THAT DDNAME, DSNAME, AND MEMBER-NAME
*               ARE PADDED WITH SPACES IF LESS THAN MAXIMUM SIZE
*
*
*        SUCCESS-INDICATOR
*        -----------------
*
*                  00     ALLOCATION WAS SUCCESSFUL
*                  04     INVALID OR MISSING DDNAME
*                  08     INVALID OR MISSING DSNAME
*                  12     INVALID OR MISSING MEMBER NAME
*                  16     DATASET NOT CATALOGUED
*                  20     UNSUCCESSFUL FREE OF DDNAME
*                  24     UNSUCCESSFUL DYNAMIC ALLOCATION
*
*
         EJECT
         SPACE 3
*
**********************************************
*                                            *
*        I N I T I A L I Z A T I O N         *
*                                            *
**********************************************
*
ALLOCMEM CSECT
         SAVE  (14,12)
         BALR  12,0
         USING *,12
         ST    13,SAVEAREA+4
         LA    13,SAVEAREA
         B     STARTIT
         SPACE
SAVEAREA DC    18F'0'
         SPACE 3
********************************************************************
*        EQUATE RESISTERS 0 THRU 15 TO MORE MEANINGFUL NAMES       *
********************************************************************
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        SAVE REGISTER 1 CONTENTS IN REGISTER 11 AND PLACE         *
*        PARAMETER AREA INTO IOAREA                                *
*                                                                  *
********************************************************************
         SPACE 3
STARTIT  DS    0D
         LR    R11,R1                 SAVE REG 1 CONTENTS IN REG 11
         L     R9,0(R11)
         MVC   IOAREA,0(R9)
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        M A I N   L I N E   L O G I C                             *
*                                                                  *
********************************************************************
         SPACE 3
         MVC   SUCCESSW,=CL2'00'      MOVE '00' TO SUCCESSW
         LA    R10,0                  R10 ===> 0
         BAL   R14,GENLENS            PERFORM ROUTINE TO DETERMINE
*                                       THE SIGNIFICANT LENGTHS OF
*                                       DDNAME, DSNAME, AND MEM NAME
         CLC   SUCCESSW,=CL2'00'      IS SUCCESSW STILL EQUAL '00' ?
         BNE   SHUTDOWN               IF NOT, BRANCH TO SHUTDOWN
         MVC   CMLSTDSN,INDSNAME
         LOCATE CAMLIST1
         C     R15,=F'0'              DID LOCATE RETURN RC = 0 ?
         BE    DYNAMALL               IF SO, BRANCH TO DYNAMALL
         MVC   SUCCESSW,=CL2'16'      MOVE '16' TO SUCCESSW
         LA    R10,16                 R10 ===> 16
         B     SHUTDOWN               BRANCH TO SHUTDOWN
DYNAMALL BAL   R14,DYNAMALC           PERFORM DYNAMIC ALLOCATION
         B     SHUTDOWN               BRANCH TO SHUTDOWN
         EJECT
         SPACE 2
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR VALIDATING THE DDNAME,    *
*        DSNAME, AND MEMBER NAME PASSED TO THIS PROGRAM AND THEN   *
*        GENERATING THE FOLLOWING FIELDS:                          *
*                                                                  *
*           DDNAMLEN ===> LENGTH OF DDNAME (BINARY HALFWORD)       *
*           DSNAMLEN ===> LENGTH OF DSNAME (BINARY HALFWORD)       *
*           MEMBRLEN ===> LENGTH OF MEMBER (BINARY HALFWORD)       *
*                                                                  *
********************************************************************
*
GENLENS  ST    R14,SAVEIT1           SAVE REG 14 IN SAVEIT1
         LA    R5,8                  R5 ==> 8
         LA    R6,INDDNAME+7         POINT TO LAST BYTE OF DDNAME
LOOP1    CLI   0(R6),C' '            IS THIS BYTE = SPACE ?
         BNE   STDDNLEN              IF NOT, BRANCH TO STDDNLEN
         SH    R5,=H'1'              DECREMENT REG 5 BY 1
         SH    R6,=H'1'              DECREMENT REG 6 BY 1
         CH    R5,=H'1'
         BNL   LOOP1
         MVC   SUCCESSW,=CL2'04'     MOVE '04' TO SUCCESSW
         LA    R10,04                R10 ===> 04
         B     EXITGENS              BRANCH TO EXITGENS
STDDNLEN STH   R5,DDNAMLEN           DDNAMLEN = LENGTH OF DDNAME
         LA    R5,44                 R5 ==> 44
         LA    R6,INDSNAME+43        POINT TO LAST BYTE OF DSNAME
LOOP2    CLI   0(R6),C' '            IS THIS BYTE = SPACE ?
         BNE   STDSNLEN              IF NOT, BRANCH TO STDSNLEN
         SH    R5,=H'1'              DECREMENT REG 5 BY 1
         SH    R6,=H'1'              DECREMENT REG 6 BY 1
         CH    R5,=H'1'
         BNL   LOOP2
         MVC   SUCCESSW,=CL2'08'     MOVE '08' TO SUCCESSW
         LA    R10,08                R10 ===> 08
         B     EXITGENS              BRANCH TO EXITGENS
STDSNLEN STH   R5,DSNAMLEN           DSNAMLEN = LENGTH OF DSNAME
         LA    R5,8                  R5 ==> 8
         LA    R6,INMEMBER+7         POINT TO LAST BYTE OF MEMBER
LOOP3    CLI   0(R6),C' '            IS THIS BYTE = SPACE ?
         BNE   STMEMLEN              IF NOT, BRANCH TO STMEMLEN
         SH    R5,=H'1'              DECREMENT REG 5 BY 1
         SH    R6,=H'1'              DECREMENT REG 6 BY 1
         CH    R5,=H'1'
         BNL   LOOP3
         MVC   SUCCESSW,=CL2'12'     MOVE '12' TO SUCCESSW
         LA    R10,12                R10 ===> 12
         B     EXITGENS              BRANCH TO EXITGENS
STMEMLEN STH   R5,MEMBRLEN           MEMBRLEN = LENGTH OF MEMBER
EXITGENS L     R14,SAVEIT1           RESTORE REGISTER 14
         BR    R14                   RETURN
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*               D Y N A M I C   A L L O C A T I O N                *
*               -----------------------------------                *
*                                                                  *
*        THIS ROUTINE FIRST ATTEMPTS TO FREE THE DDNAME GIVEN.     *
*        IF THE DDNAME WAS SUCCESSFULLY FREED, THEN THIS ROUTINE   *
*        BRANCHES TO THE DYNAMIC ALLOCATION MACRO DYNALLOC.        *
*        HOWEVER, IF THE DDNAME  WAS NOT SUCCESSFULLY FREED,       *
*        THEN THIS ROUTINE CHECKS FOR ERROR REASON CODE 0438       *
*        (DDNAME NOT FOUND).  IF THE ERROR REASON CODE IS 0438,    *
*        THEN THIS ROUTINE BRANCHES TO THE DYNAMIC ALLOCATION      *
*        MACRO DYNALLOC, ELSE IT MOVES '20' TO SUCCESSW            *
*                                                                  *
********************************************************************
*
DYNAMALC ST    R14,SAVEIT2
         MVC   FREEUT1A,DDNAMLEN
         MVC   FREEUT1B,INDDNAME
         LA    R1,FREEPARM
         DYNALLOC                      FREE DDNAME
         LTR   R15,R15                 TEST REGISTER 15 FOR ZERO
         BZ    DODYNAM                 IF ZERO, BRANCH TO DODYNAM
         CLC   ERCODE,HEX0438          COMPARE ERROR REASON CODE
*                                         AGAINST HEXADECIMAL 0438
         BE    DODYNAM                 IF EQUAL, BRANCH TO DODYNAM
         MVC   SUCCESSW,=CL2'20'       MOVE '20' TO SUCCESSW
         LA    R10,20                  R10 ===> 20
         BR    R14                     RETURN
DODYNAM  MVC   DD1UNT1A,DDNAMLEN
         MVC   DD1UNT1B,INDDNAME
         MVC   DSNLEN,DSNAMLEN
         MVC   DSNAME,INDSNAME
         MVC   MEMLEN,MEMBRLEN
         MVC   MEMBER,INMEMBER
         LA    R1,DD1PARM
         DYNALLOC                      ALLOC F(DDNAME) DA(DSN) SHR
         L     R14,SAVEIT2
         LTR   R15,R15                 TEST REGISTER 15 FOR ZERO
         BZR   R14                     IF ZERO, RETURN
         MVC   SUCCESSW,=CL2'24'       MOVE '24' TO SUCCESSW
         LA    R10,24                  R10 ===> 24
         BR    R14                     RETURN
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        E N D   O F   J O B   P R O C E S S I N G                 *
*                                                                  *
********************************************************************
         SPACE 3
SHUTDOWN L     R9,0(R11)
         MVC   0(62,R9),IOAREA
         LR    R15,R10
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        DATA STRUCTURE FOR FREEING OF DDNAME                      *
*                                                                  *
********************************************************************
*
         SPACE 3
         DS    0F
FREEPARM DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(FREERB)   ADDRESS OF REQUEST BLOCK
FREERB   DC    X'14'         S99RBLN (LENGTH OF REQUEST BLOCK)
         DC    X'02'         S99VERB (REQUEST FOR UNALLOCATION)
         DC    X'2000'       S99FLAG1 (DO NOT MOUNT VOLUMES)
ERCODE   DC    X'0000'       S99ERROR (ERROR REASON CODE)
         DC    X'0000'       S99INFO (INFORMATION REASON CODE)
         DC    A(FREETUPL)   S99TXTPP (ADDR OF POINTER TO TEXT UNIT)
         DC    X'00000000'   RESERVED
         DC    X'00000000'   S99FLAG2
FREETUPL DC    A(FREEUNT1)   ADDRESS OF TEXT UNIT #1
         DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(FREEUNT2) ADDRESS OF TEXT UNIT #2
FREEUNT1 DC    X'0001'
         DC    X'0001'
FREEUT1A DS    BL2
FREEUT1B DS    CL8
FREEUNT2 DC    X'0007'       REMOVE PERM ALLOC ATTR
         DC    X'0000'
         EJECT
         SPACE 3
*
********************************************************************
*                                                                  *
*        DATA STRUCTURE FOR DYNAMIC ALLOCATION                     *
*                                                                  *
********************************************************************
*
         SPACE 3
         DS    0F
DD1PARM  DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(DD1RB)    ADDRESS OF REQUEST BLOCK
DD1RB    DC    X'14'         S99RBLN (LENGTH OF REQUEST BLOCK)
         DC    X'01'         S99VERB (REQUEST FOR DSNAME ALLOC)
         DC    X'2000'       S99FLAG1 (DO NOT MOUNT VOLUMES)
         DC    X'0000'       S99ERROR (ERROR REASON CODE)
         DC    X'0000'       S99INFO (INFORMATION REASON CODE)
         DC    A(DD1TUPL)    S99TXTPP (ADDR OF POINTERS TO TEXT UNITS
         DC    X'00000000'   RESERVED
         DC    X'00000000'   S99FLAG2
DD1TUPL  DC    A(DD1UNIT1)   ADDRESS OF TEXT UNIT #1
         DC    A(DD1UNIT2)   ADDRESS OF TEXT UNIT #2
         DC    A(DD1UNIT3)   ADDRESS OF TEXT UNIT #3
         DC    A(DD1UNIT4)   ADDRESS OF TEXT UNIT #4
         DC    X'80'         TURN ON HIGH ORDER BIT
         DC    AL3(DD1UNIT5) ADDRESS OF TEXT UNIT #5
DD1UNIT1 DC    X'0001'
         DC    X'0001'
DD1UNT1A DS    BL2
DD1UNT1B DS    CL8
DD1UNIT2 DC    X'0002'
         DC    X'0001'
DSNLEN   DS    BL2
DSNAME   DS    CL44
DD1UNIT3 DC    X'0003'
         DC    X'0001'
MEMLEN   DS    BL2
MEMBER   DS    CL8
DD1UNIT4 DC    X'0004',X'0001',X'0001',X'08'
DD1UNIT5 DC    X'0052'
         DC    X'0000'
         EJECT
         SPACE 3
********************************************************************
*        DATA AREAS                                                *
********************************************************************
         SPACE 3
         DS    0F
SAVEIT1  DS    F
SAVEIT2  DS    F
DDNAMLEN DS    H
DSNAMLEN DS    H
MEMBRLEN DS    H
IOAREA   DS    0CL62
INDDNAME DS    CL8
INDSNAME DS    CL44
INMEMBER DS    CL8
SUCCESSW DS    CL2
CMLSTDSN DS    CL44
CAMLIST1 CAMLST NAME,CMLSTDSN,,LOCAREA
LOCAREA  DS    0D
         DS    265C
         DS    0D
HEX0438  DC    X'0438'
         END
