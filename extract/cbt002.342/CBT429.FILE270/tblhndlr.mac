       ID DIVISION.
       PROGRAM-ID.  TBLHNDLR.
      *************************************************************
      *                                                           *
      * 04/06/84 -                                                *
      * Written by Jeff Sprehn - WDPSC.                           *
      *                                                           *
      * 05/20/85 -                                                *
      * Modified by Kermit Kiser to use a table of select codes   *
      *  and alternate table display panels:                      *
      *                                                           *
      *  Here is sequence to add new "Z" select code to accepted  *
      *  list of select codes:                                    *
      *                                                           *
      *  SET ACTTAB = &STR(S,SEL P,PRT Z,ZIP)                     *
      *  ISPEXEC VPUT ACTTAB SHARED                               *
      *                                                           *
      *  Here is sequence to use alternate table display panels:  *
      *    (names THPNAME1,THPNAME2,THPNAME3 - must be 8 chars)  *
      *                                                           *
      *  SET PANAME = &STR(THPNAME)                               *
      *  ISPEXEC VPUT PANAME SHARED                               *
      *                                                           *
      *************************************************************
           EJECT
      *************************************************************
      *                                                           *
      *     THIS IS A GENERAL PURPOSE DIALOG MANAGER TABLING      *
      *     SERVICES PROGRAM.  THIS PROGRAM ACCEPTS AN INPUT      *
      *     FILE WHICH CONTAINS THE TABLE DATA AND THEN BUILDS    *
      *     AND DISPLAYS A TEMPORARY VIRTUAL STORAGE TABLE.       *
      *                                                           *
      *     THE PROGRAM PROCESS TWO (2) ACTION CODES WHICH ARE    *
      *     AS FOLLOWS:                                           *
      *                                                           *
      *          S    DISPLAY DOCUMENTATION MEMBER                *
      *          P    PRINT DOCUMENTATION MEMBER                  *
      *                                                           *
      *     EACH RECORD ON THE INPUT FILE (WHICH BECOMES AN       *
      *     ENTRY IN THE TABLE) INSTRUCTS THIS PROGRAM WHICH      *
      *     ISPF SELECT CMD TO INVOKE FOR THE ABOVE TWO           *
      *     ACTION CODES.                                         *
      *                                                           *
      *                                                           *
      *     INPUT FILE FORMAT                                     *
      *     .................                                     *
      *                                                           *
      *       COLS         CONTENTS                               *
      *       ---------    ------------------------------------   *
      *                                                           *
      *       001 - 002    'D1' FOR FIRST DESCRIPTION LINE        *
      *                    'D2' FOR 2ND DESCRIPTION LINE IF ANY   *
      *                    'D3' FOR 3RD DESCRIPTION LINE IF ANY   *
      *       003 - 003    FILLER                                 *
      *       004 - 073    DESCRIPTION OF ENTRY (COULD BE 1 - N   *
      *                      COLUMNS OF DATA REPRESENTED HERE)    *
      *                      THIS FIELD IS PROTECTED OUTPUT.      *
      *       074 - 074    FILLER                                 *
      *       075 - 079    FIRST 5 BYTES OF COMMAND NAME TO BE    *
      *                      INVOKED IF THIS ENTRY IS SELECTED    *
      *                      (SPACES IF THIS IS NOT A 'D1' REC)   *
      *       080 - 080    FILLER                                 *
      *       081 - 200    PARAMETERS TO PASS TO COMMAND IF THIS  *
      *                      FIELD IS SELECTED.  THREE PARAMETERS *
      *                      MUST BE SUPPLIED.                    *
      *                      (SPACES IF THIS IS NOT A 'D1' REC)   *
      *                                                           *
      *   FOR EXAMPLE;                                            *
      *      IF A RECORD ON THE INPUT FILE HAS 'DOC01' IN         *
      *      RECORD POSITIONS 75-79:                              *
      *        THEN                                               *
      *          THE CLIST DOC01SEL WILL BE INVOKED IF THE USER   *
      *                             SELECTED ACTION CODE = 'S'    *
      *                    DOC01PRT WILL BE INVOKED IF THE USER   *
      *                             SELECTED ACTION CODE = 'P'    *
      *                                                           *
      *************************************************************
           EJECT
      *************************************************************
      *                                                           *
      *                                                           *
      *                                                           *
      *     THE FIRST THREE (3) RECORDS ON THE INPUT FILE         *
      *     HOWEVER MUST CONTAIN PANEL TITLE AND COLUMN HEADING   *
      *     INFORMATION AS FOLLOWS:                               *
      *                                                           *
      *        COLUMNS       CONTENTS                             *
      *        -------       --------------------------------     *
      *                                                           *
      *        001-002       'T1'  FOR THE PANEL TITLE            *
      *                      'T2'  FOR PANEL COLUMN HEADING #1    *
      *                      'T3'  FOR PANEL COLUMN HEADING #2    *
      *        003-003       FILLER                               *
      *        004-082       TITLE OR COLUMN HEADING              *
      *        083-200       FILLER                               *
      *                                                           *
      *                                                           *
      *     A PARM MUST BE PASSED TO THIS PROGRAM AS FOLLOWS:     *
      *                                                           *
      *        ISPEXEC SELECT PGM(TBLHNDLR) PARM(N,TTTTTTTT)      *
      *                                                           *
      *             WHERE:                                        *
      *                                                           *
      *                   N = '1' FOR USING PANEL TBLHDLR1        *
      *                             (SINGLE SPACED ENTRIES)       *
      *                       '2' FOR USING PANEL TBLHDLR2        *
      *                             (DOUBLE SPACED ENTRIES)       *
      *                       '3' FOR USING PANEL TBLHDLR3        *
      *                             (TRIPLE SPACED ENTRIES)       *
      *                                                           *
      *                   TTTTTTTT =  5 - 8 BYTE TABLE NAME       *
      *                                                           *
      *                                                           *
      *                                                           *
      *     RETURN CODES                                          *
      *     ............                                          *
      *                                                           *
      *         RC         MEANING                                *
      *         ----       ------------------------------------   *
      *                                                           *
      *          0         SUCCESSFUL COMPLETION                  *
      *          4         T1, T2, T3 RECORD(S) MISSING           *
      *          8         TBCREATE FAILED                        *
      *          12        TBADD FAILED                           *
      *          16        INVALID OR MISSING PARM                *
      *          20        INVALID INPUT TABLE ENTRY RECORD       *
      *                                                           *
      *************************************************************
           EJECT
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.

       FILE-CONTROL.

           SELECT  INPUT-TABLE-FILE        ASSIGN UT-S-TABLEIDX.

           EJECT
       DATA DIVISION.

       FILE SECTION.

       FD  INPUT-TABLE-FILE
           LABEL RECORDS ARE   STANDARD
           RECORDING MODE IS   F
           RECORD CONTAINS     200 CHARACTERS
           BLOCK CONTAINS      0 RECORDS
           DATA RECORDS ARE    TITLES-INPUT-REC
                               DETAIL-INPUT-REC.

       01  TITLES-INPUT-REC.
           05  RECORD-ID                          PIC X(02).
           05  FILLER                             PIC X(01).
           05  THE-TITLE                          PIC X(79).
           05  FILLER                             PIC X(118).

       01  DETAIL-INPUT-REC.
           05  RECORD-ID                          PIC X(02).
           05  FILLER                             PIC X(01).
           05  TABLE-ENTRY-DESCRIPTION            PIC X(70).
           05  FILLER                             PIC X(01).
           05  SELECT-CMD-NAME-1ST-5BYTES         PIC X(05).
           05  FILLER                             PIC X(01).
           05  SELECT-CMD-PARAMETERS              PIC X(120).
           EJECT
       WORKING-STORAGE SECTION.

       77  RETURN-CODE-WORK      VALUE 0000       PIC 9(4).
       77  TBCREATE-RETURN-CODE                   PIC 9(4).
       77  TBADD-RETURN-CODE                      PIC 9(4).
       77  TBDISPL-RETURN-CODE                    PIC 9(4).
       77  CONTINUE-PROCESSING                    PIC X(3).
       77  TIME-TO-QUIT                           PIC X(3).
       77  FILE-AT-EOF                            PIC X(3).
       77  PARAMETER-SUB                          PIC S9(8) COMP.
       77  FIND-CMD-SUB                           PIC S9(8) COMP.
       77  SUB1                                   PIC S9(8) COMP.
       77  SUB2                                   PIC S9(8) COMP.
       77  PREVIOUS-RECORD-ID                     PIC X(2).
       77  RECORD-WAS-ADDED                       PIC X(3).
       77  FIND-ALL                               PIC X(3).
       77  DOCSYS-3RD-LEVEL-QUAL VALUE 'INDEXES ' PIC X(8).
       77  RETURN-TO-0010-BEGIN                   PIC X(3).

       01  NO-FIND-A-HIT-MSG.
           05  FILLER                             PIC X(44)  VALUE
               '    <<<<!>>>>      No hit was found         '.
           05  FILLER     VALUE SPACES            PIC X(26).

       01  PARAMETER-TABLE.
           05  PARAMETER-BYTE OCCURS 121 TIMES    PIC X.

       01  ACTTAB.
           05  ACTENT         OCCURS 40  TIMES.
             07  AC                  PIC X.
             07  FILLER              PIC X.
             07  ACT                 PIC X(3).
             07  FILLER              PIC X.

       01  BREAKDOWN-THE-COMMAND.
           05  BYTE-1                             PIC X(01).
           05  BYTE-2                             PIC X(01).
           05  BYTES-3-37.
               10  BYTES-3-5                      PIC X(03).
               10  FILLER                         PIC X(32).

       01  FIND-CMD-ARRAY.
           05  FIND-CMD-BYTE  OCCURS  35 TIMES    PIC X.

       01  ALLOCMEM-DSN-ARRAY.
           05  ALLOCMEM-DSN-BYTE OCCURS 44 TIMES  PIC X.

       01  GIVEN-QUALIFIER-ARRAY.
           05  GIVEN-QUALIFIER-BYTE OCCURS 8 TIMES PIC X.

           EJECT

      *
      *    I S P L I N K   P A R A M E T E R S
      *
       01  TBADD                 VALUE 'TBADD'     PIC X(5).
       01  TBPUT                 VALUE 'TBPUT'     PIC X(5).
       01  TBTOP                 VALUE 'TBTOP'     PIC X(5).
       01  TBEND                 VALUE 'TBEND'     PIC X(5).
       01  TBDISPL-CURSOR-LOC                      PIC X(8).
       01  TBDISPL               VALUE 'TBDISPL'   PIC X(7).
       01  TBCREATE              VALUE 'TBCREATE'  PIC X(8).
       01  TBCREATE-KEYS-LIST    VALUE SPACES      PIC X(8).
       01  TBCREATE-NAME-LIST-1                    PIC X(36) VALUE
           '(ACTCODE ENTRYDS1 CMDBUF15 CMDBUFPR)'.
       01  TBCREATE-NAME-LIST-2                    PIC X(45) VALUE
           '(ACTCODE ENTRYDS1 ENTRYDS2 CMDBUF15 CMDBUFPR)'.
       01  TBCREATE-NAME-LIST-3                    PIC X(54) VALUE
           '(ACTCODE ENTRYDS1 ENTRYDS2 ENTRYDS3 CMDBUF15 CMDBUFPR)'.
       01  NOWRITE               VALUE 'NOWRITE'   PIC X(7).
       01  TABLE-NAME            VALUE SPACES      PIC X(8).
       01  PANEL-NAME.
           05 THPNAME                              PIC X(7).
           05 PLINES                               PIC X.
       01  MESSAGE-ID                              PIC X(8).
       01  VDEFINE               VALUE 'VDEFINE'   PIC X(7).
       01  CHAR                  VALUE 'CHAR'      PIC X(4).
       01  LENGTH-FIELD                            PIC S9(8) COMP.
       01  KONTROL               VALUE 'CONTROL'   PIC X(7).
       01  KANCEL                VALUE 'CANCEL'    PIC X(6).
       01  ERRORS                VALUE 'ERRORS'    PIC X(6).
       01  RETERN                VALUE 'RETURN'    PIC X(6).
       01  SELEKT                VALUE 'SELECT'    PIC X(6).
       01  VGET                  VALUE 'VGET'      PIC X(4).
       01  VPUT                  VALUE 'VPUT'      PIC X(4).
       01  PROFYLE               VALUE 'PROFILE'   PIC X(7).
       01  SHARED                VALUE 'SHARED'    PIC X(6).
       01  BUFFER.
           05  FILLER            VALUE 'CMD(%'     PIC X(5).
           05  SELECT-CMD-NAME.
               10  SELECT-CMD-NAME-1ST-5BYTES      PIC X(5).
               10  SELECT-CMD-NAME-LAST-3BYTES     PIC X(3).
           05  FILLER            VALUE SPACE       PIC X(1).
           05  REMAINING-SELECT-CMD-BUFFER         PIC X(121).
           EJECT
      *
      *    S P F   S Y M B O L I C   N A M E S
      *
       01  SPF-SYMBOLIC-NAMES.
           05  ZCMD     VALUE '(ZCMD)'             PIC X(6).
           05  ACTCODE  VALUE '(ACTCODE)'          PIC X(9).
           05  ENTRYDS1 VALUE '(ENTRYDS1)'         PIC X(10).
           05  ENTRYDS2 VALUE '(ENTRYDS2)'         PIC X(10).
           05  ENTRYDS3 VALUE '(ENTRYDS3)'         PIC X(10).
           05  CMDBUF15 VALUE '(CMDBUF15)'         PIC X(10).
           05  CMDBUFPR VALUE '(CMDBUFPR)'         PIC X(10).
           05  PANTITLE VALUE '(PANTITLE)'         PIC X(10).
           05  PANCOLH1 VALUE '(PANCOLH1)'         PIC X(10).
           05  PANCOLH2 VALUE '(PANCOLH2)'         PIC X(10).
           05  DOCSLVL1 VALUE '(DOCSLVL1)'         PIC X(10).
           05  DOCSLVL2 VALUE '(DOCSLVL2)'         PIC X(10).
           05  DOCSMEM  VALUE '(DOCSMEM)'          PIC X(9).
           05  DOCSEXIT VALUE '(DOCSEXIT)'         PIC X(10).
           05  ZVERB    VALUE '(ZVERB)'            PIC X(7).
           05  ACTTABLE VALUE '(ACTTAB)'           PIC X(8).
           05  THPVAR   VALUE '(THPNAME)'          PIC X(9).
           EJECT
      *
      *    C O B O L   V A R I A B L E   N A M E S
      *

       01  COBOL-VARIABLE-NAMES.
           05  THE-COMMAND                        PIC X(37).
           05  ACTION-CODE                        PIC X(1).
           05  TABLE-ENTRY-DESCRIPTION-1          PIC X(70).
           05  TABLE-ENTRY-DESCRIPTION-2          PIC X(70).
           05  TABLE-ENTRY-DESCRIPTION-3          PIC X(70).
           05  SELECT-CMD-NAME-1ST-5BYTES         PIC X(05).
           05  SELECT-CMD-PARAMETERS              PIC X(120).
           05  PANEL-TITLE                        PIC X(79).
           05  PANEL-COL-HEAD-1                   PIC X(79).
           05  PANEL-COL-HEAD-2                   PIC X(79).
           05  DOCSYS-1ST-LEVEL-QUAL              PIC X(8).
           05  DOCSYS-2ND-LEVEL-QUAL              PIC X(8).
           05  DOCSYS-INDEXES-MEM-NAME            PIC X(8).
           05  DOCSYS-EXIT-SWITCH                 PIC X(3).
           05  END-OR-RETURN-SWITCH               PIC X(6).
           EJECT
      *
      *    S C A N 4 H I T    P A R A M E T E R   A R E A
      *

       01  SCAN4HIT-I-O-AREA.
           05  ARGUMENT                            PIC X(80).
           05  ARGUMENT-LENGTH                     PIC S9(4) COMP.
           05  TABLE-ELEMENT                       PIC X(80).
           05  TABLE-ELEMENT-LENGTH                PIC S9(4) COMP.
           05  HIT-SWITCH                          PIC X(3).
           EJECT
      *
      *    A L L O C M E M    P A R A M E T E R   A R E A
      *

       01  ALLOCMEM-I-O-AREA.
           05  DDNAME     VALUE 'TABLEIDX'         PIC X(8).
           05  DSNAME                              PIC X(44).
           05  MEMBER-NAME                         PIC X(8).
           05  SUCCESS-INDICATOR                   PIC 9(2).

           EJECT
       LINKAGE SECTION.

       01  PARM-AREA.
           05  PARM-COUNT                             PIC S9(4) COMP.
           05  PANEL-DESC-LINE-COUNT                  PIC X.
           05  BYTE-2                                 PIC X.
           05  PARM-TABLE-NAME.
               10  BYTES-1-8.
                   15  BYTES-1-7.
                       20  BYTES-1-6.
                           25  BYTES-1-5              PIC X(5).
                           25  FILLER                 PIC X.
                       20  FILLER                     PIC X.
                   15  FILLER                         PIC X.
           EJECT
       PROCEDURE DIVISION USING PARM-AREA.

           PERFORM 1000-INITIALIZATION
              THRU 1499-EXIT-INITIALIZATION.

           IF CONTINUE-PROCESSING NOT EQUAL 'YES'
                GO TO 0090-QUIT.

           MOVE 'YES' TO FIND-ALL.

       0010-BEGIN.

           CALL 'ISPLINK' USING VGET DOCSEXIT.

           IF DOCSYS-EXIT-SWITCH OF COBOL-VARIABLE-NAMES = 'YES'
             GO TO 0090-QUIT.

           MOVE 'NO ' TO TIME-TO-QUIT.

           PERFORM 1500-DO-THE-TBCREATE
              THRU 1599-EXIT-TBCREATE.

           IF CONTINUE-PROCESSING NOT EQUAL 'YES'
                GO TO 0090-QUIT.

           MOVE 'NO ' TO RECORD-WAS-ADDED.

           PERFORM 2000-LOAD-TABLE
              THRU 2999-EXIT-LOAD-TABLE
                    UNTIL
                       TIME-TO-QUIT = 'YES'
                    OR
                       CONTINUE-PROCESSING NOT EQUAL 'YES'.

           CLOSE INPUT-TABLE-FILE.

           IF RECORD-WAS-ADDED = 'YES'
              NEXT SENTENCE
           ELSE
              MOVE SPACE TO ACTION-CODE
              MOVE NO-FIND-A-HIT-MSG
                TO TABLE-ENTRY-DESCRIPTION-1 OF COBOL-VARIABLE-NAMES
              MOVE SPACES
                TO SELECT-CMD-NAME-1ST-5BYTES OF COBOL-VARIABLE-NAMES
              MOVE SPACES
                TO SELECT-CMD-PARAMETERS OF COBOL-VARIABLE-NAMES
              PERFORM 2500-DO-THE-TBADD
                 THRU 2599-EXIT-DO-THE-TBADD.

           IF CONTINUE-PROCESSING NOT EQUAL 'YES'
              GO TO 0090-QUIT.

           CALL 'ISPLINK' USING TBTOP TABLE-NAME.
           MOVE 'TBLH100 '  TO MESSAGE-ID.
           MOVE 'ZCMD    ' TO TBDISPL-CURSOR-LOC.

       0050-DISPLAY-TABLE.

           PERFORM 4000-DO-THE-TBDISPL
              THRU 4999-EXIT-DO-THE-TBDISPL.

           IF CONTINUE-PROCESSING NOT EQUAL 'YES'
              GO TO 0090-QUIT.

           PERFORM 5000-PROCESS-TABLE
              THRU 5999-EXIT-PROCESS-TABLE.

           IF RETURN-TO-0010-BEGIN = 'YES'
               GO TO 0010-BEGIN.

           CALL 'ISPLINK' USING VGET DOCSEXIT.

           IF DOCSYS-EXIT-SWITCH OF COBOL-VARIABLE-NAMES = 'YES'
               GO TO 0090-QUIT
           ELSE
               GO TO 0050-DISPLAY-TABLE.

       0090-QUIT.

           MOVE RETURN-CODE-WORK TO RETURN-CODE.

           STOP RUN.
           EJECT
       1000-INITIALIZATION.

           MOVE 'YES' TO CONTINUE-PROCESSING.

      *    START CASE STATEMENT

               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '1'
                    MOVE '1' TO PLINES
           ELSE
               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '2'
                    MOVE '2' TO PLINES
           ELSE
               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '3'
                    MOVE '3' TO PLINES
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0016 TO RETURN-CODE-WORK
               GO TO 1499-EXIT-INITIALIZATION.

      *    END CASE STATEMENT

           IF BYTE-2 OF PARM-AREA = ','
               NEXT SENTENCE
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0016 TO RETURN-CODE-WORK
               GO TO 1499-EXIT-INITIALIZATION.

      *    START CASE STATEMENT

               IF  PARM-COUNT = +7
                   MOVE BYTES-1-5 OF PARM-AREA TO TABLE-NAME
           ELSE
               IF  PARM-COUNT = +8
                   MOVE BYTES-1-6 OF PARM-AREA TO TABLE-NAME
           ELSE
               IF  PARM-COUNT = +9
                   MOVE BYTES-1-7 OF PARM-AREA TO TABLE-NAME
           ELSE
               IF  PARM-COUNT = +10
                   MOVE BYTES-1-8 OF PARM-AREA TO TABLE-NAME
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0016 TO RETURN-CODE-WORK
               GO TO 1499-EXIT-INITIALIZATION.

      *    END CASE STATEMENT

           MOVE +37 TO LENGTH-FIELD.
           CALL 'ISPLINK'
                 USING
                    VDEFINE
                    ZCMD
                    THE-COMMAND OF COBOL-VARIABLE-NAMES
                    CHAR
                    LENGTH-FIELD.

           MOVE +01 TO LENGTH-FIELD.
           CALL 'ISPLINK'
                 USING
                    VDEFINE
                    ACTCODE
                    ACTION-CODE OF COBOL-VARIABLE-NAMES
                    CHAR
                    LENGTH-FIELD.

           MOVE +70 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  ENTRYDS1
                  TABLE-ENTRY-DESCRIPTION-1 OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +70 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  ENTRYDS2
                  TABLE-ENTRY-DESCRIPTION-2 OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +70 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  ENTRYDS3
                  TABLE-ENTRY-DESCRIPTION-3 OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +5 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  CMDBUF15
                  SELECT-CMD-NAME-1ST-5BYTES OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +120 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  CMDBUFPR
                  SELECT-CMD-PARAMETERS OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +79 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  PANTITLE
                  PANEL-TITLE OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +79 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  PANCOLH1
                  PANEL-COL-HEAD-1 OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +79 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  PANCOLH2
                  PANEL-COL-HEAD-2 OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +8 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  DOCSLVL1
                  DOCSYS-1ST-LEVEL-QUAL OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +8 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  DOCSLVL2
                  DOCSYS-2ND-LEVEL-QUAL OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +8 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  DOCSMEM
                  DOCSYS-INDEXES-MEM-NAME OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +3 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  DOCSEXIT
                  DOCSYS-EXIT-SWITCH OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +6 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  ZVERB
                  END-OR-RETURN-SWITCH OF COBOL-VARIABLE-NAMES
                  CHAR
                  LENGTH-FIELD.

           MOVE +200 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  ACTTABLE
                  ACTTAB
                  CHAR
                  LENGTH-FIELD.

           CALL 'ISPLINK'
               USING
                  VGET
                  ACTTABLE
                  SHARED .
           IF RETURN-CODE = 8
              MOVE 'S' TO AC(1)
              MOVE 'P' TO AC(2)
              MOVE ' ' TO AC(3)
              MOVE 'SEL' TO ACT (1)
              MOVE 'PRT' TO ACT (2) .


           MOVE +7 TO LENGTH-FIELD.
           CALL 'ISPLINK'
               USING
                  VDEFINE
                  THPVAR
                  THPNAME
                  CHAR
                  LENGTH-FIELD.

           CALL 'ISPLINK'
               USING
                  VGET
                  THPVAR
                  SHARED .
           IF RETURN-CODE = 8
              MOVE 'TBLHDLR' TO THPNAME.


           PERFORM 1800-GEN-ALLOCMEM-FIELDS
              THRU 1899-EXIT-GEN-FIELDS.

           PERFORM 7000-CALL-ALLOCMEM
              THRU 7999-EXIT-CALL-ALLOCMEM.

           OPEN INPUT INPUT-TABLE-FILE.

           PERFORM 3000-READ
              THRU 3999-EXIT-READ.

           IF RECORD-ID OF TITLES-INPUT-REC = 'T1'
               MOVE THE-TITLE OF TITLES-INPUT-REC
                 TO PANEL-TITLE
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0004 TO RETURN-CODE-WORK
               GO TO 1499-EXIT-INITIALIZATION.

           PERFORM 3000-READ
              THRU 3999-EXIT-READ.

           IF RECORD-ID OF TITLES-INPUT-REC = 'T2'
               MOVE THE-TITLE OF TITLES-INPUT-REC
                 TO PANEL-COL-HEAD-1
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0004 TO RETURN-CODE-WORK
               GO TO 1499-EXIT-INITIALIZATION.

           PERFORM 3000-READ
              THRU 3999-EXIT-READ.

           IF RECORD-ID OF TITLES-INPUT-REC = 'T3'
               MOVE THE-TITLE OF TITLES-INPUT-REC
                 TO PANEL-COL-HEAD-2
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0004 TO RETURN-CODE-WORK
               GO TO 1499-EXIT-INITIALIZATION.

           CLOSE INPUT-TABLE-FILE.

       1499-EXIT-INITIALIZATION.
           EXIT.
           EJECT
       1500-DO-THE-TBCREATE.

           CALL 'ISPLINK'
                USING KONTROL ERRORS RETERN.

           CALL 'ISPLINK' USING TBEND TABLE-NAME.

           CALL 'ISPLINK'
                USING KONTROL ERRORS KANCEL.

      *    START CASE STATEMENT

               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '1'
                   CALL 'ISPLINK'
                        USING TBCREATE
                              TABLE-NAME
                              TBCREATE-KEYS-LIST
                              TBCREATE-NAME-LIST-1
                              NOWRITE
           ELSE
               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '2'
                   CALL 'ISPLINK'
                        USING TBCREATE
                              TABLE-NAME
                              TBCREATE-KEYS-LIST
                              TBCREATE-NAME-LIST-2
                              NOWRITE
           ELSE
               CALL 'ISPLINK'
                    USING TBCREATE
                          TABLE-NAME
                          TBCREATE-KEYS-LIST
                          TBCREATE-NAME-LIST-3
                          NOWRITE.

      *    END CASE STATEMENT

           MOVE RETURN-CODE TO TBCREATE-RETURN-CODE.

           IF TBCREATE-RETURN-CODE GREATER THAN 0
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0008 TO RETURN-CODE-WORK
               GO TO 1599-EXIT-TBCREATE.

           PERFORM 7000-CALL-ALLOCMEM
              THRU 7999-EXIT-CALL-ALLOCMEM.

           OPEN INPUT INPUT-TABLE-FILE.

           MOVE 'NO ' TO FILE-AT-EOF.

           PERFORM 3000-READ
              THRU 3999-EXIT-READ
                   4 TIMES.

           MOVE 'D0' TO  PREVIOUS-RECORD-ID.

       1599-EXIT-TBCREATE.
           EXIT.
           EJECT
       1800-GEN-ALLOCMEM-FIELDS.

           CALL 'ISPLINK' USING VGET DOCSMEM

           MOVE DOCSYS-INDEXES-MEM-NAME
             TO MEMBER-NAME OF ALLOCMEM-I-O-AREA.

           TRANSFORM MEMBER-NAME OF ALLOCMEM-I-O-AREA
             FROM LOW-VALUES TO SPACES.

           CALL 'ISPLINK' USING VGET DOCSLVL1.
           CALL 'ISPLINK' USING VGET DOCSLVL2.

           TRANSFORM DOCSYS-1ST-LEVEL-QUAL OF COBOL-VARIABLE-NAMES
             FROM LOW-VALUES TO SPACES.
           TRANSFORM DOCSYS-2ND-LEVEL-QUAL OF COBOL-VARIABLE-NAMES
             FROM LOW-VALUES TO SPACES.

           MOVE SPACES TO ALLOCMEM-DSN-ARRAY.

           MOVE DOCSYS-1ST-LEVEL-QUAL OF COBOL-VARIABLE-NAMES
             TO GIVEN-QUALIFIER-ARRAY.

           MOVE +0 TO SUB1.

       1810-BUMP-SUB1.

           ADD +1 TO SUB1.

           IF  (SUB1 GREATER THAN +8)
             OR
               (GIVEN-QUALIFIER-BYTE (SUB1) = SPACE)
                   NEXT SENTENCE
           ELSE
                   MOVE GIVEN-QUALIFIER-BYTE (SUB1)
                     TO ALLOCMEM-DSN-BYTE (SUB1)
                   GO TO 1810-BUMP-SUB1.

           MOVE SUB1 TO SUB2.

           MOVE '.' TO ALLOCMEM-DSN-BYTE (SUB2).

           MOVE DOCSYS-2ND-LEVEL-QUAL OF COBOL-VARIABLE-NAMES
             TO GIVEN-QUALIFIER-ARRAY.

           MOVE +0 TO SUB1.

       1820-BUMP-EM-BOTH.

           ADD +1 TO SUB1.
           ADD +1 TO SUB2.

           IF  (SUB1 GREATER THAN +8)
             OR
               (GIVEN-QUALIFIER-BYTE (SUB1) = SPACE)
                   NEXT SENTENCE
           ELSE
                   MOVE GIVEN-QUALIFIER-BYTE (SUB1)
                     TO ALLOCMEM-DSN-BYTE (SUB2)
                   GO TO 1820-BUMP-EM-BOTH.

           MOVE '.' TO ALLOCMEM-DSN-BYTE (SUB2).

           MOVE DOCSYS-3RD-LEVEL-QUAL
             TO GIVEN-QUALIFIER-ARRAY.

           MOVE +0 TO SUB1.

       1850-BUMP-EM-BOTH-ALSO.

           ADD +1 TO SUB1.
           ADD +1 TO SUB2.

           IF  (SUB1 GREATER THAN +8)
             OR
               (GIVEN-QUALIFIER-BYTE (SUB1) = SPACE)
                   NEXT SENTENCE
           ELSE
                   MOVE GIVEN-QUALIFIER-BYTE (SUB1)
                     TO ALLOCMEM-DSN-BYTE (SUB2)
                   GO TO 1850-BUMP-EM-BOTH-ALSO.

           MOVE ALLOCMEM-DSN-ARRAY
             TO DSNAME OF ALLOCMEM-I-O-AREA.

       1899-EXIT-GEN-FIELDS.
           EXIT.
           EJECT
       2000-LOAD-TABLE.

      *    START CASE STATEMENT

               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '1'
                   PERFORM 2100-PANEL-TYPE-TBLHDLR1
                      THRU 2199-EXIT-TYPE-TBLHDLR1
                   GO TO 2999-EXIT-LOAD-TABLE
           ELSE
               IF PANEL-DESC-LINE-COUNT OF PARM-AREA = '2'
                   PERFORM 2200-PANEL-TYPE-TBLHDLR2
                      THRU 2299-EXIT-TYPE-TBLHDLR2
                   GO TO 2999-EXIT-LOAD-TABLE
           ELSE
               PERFORM 2300-PANEL-TYPE-TBLHDLR3
                  THRU 2399-EXIT-TYPE-TBLHDLR3
               GO TO 2999-EXIT-LOAD-TABLE.

      *    END CASE STATEMENT

           EJECT
       2100-PANEL-TYPE-TBLHDLR1.

           IF FILE-AT-EOF = 'YES'
                MOVE 'YES' TO TIME-TO-QUIT
                GO TO 2199-EXIT-TYPE-TBLHDLR1.

           IF RECORD-ID OF DETAIL-INPUT-REC = 'D1'
               NEXT SENTENCE
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0020 TO RETURN-CODE-WORK
               GO TO 2199-EXIT-TYPE-TBLHDLR1.

           IF FIND-ALL = 'YES'
               GO TO 2150-LOAD-TABLE-ELEMENT.

           MOVE TABLE-ENTRY-DESCRIPTION OF DETAIL-INPUT-REC
             TO TABLE-ELEMENT OF SCAN4HIT-I-O-AREA.

           TRANSFORM TABLE-ELEMENT OF SCAN4HIT-I-O-AREA
               FROM
                'abcdefghijklmnopqrstuvwxyz'
               TO
                'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.

           MOVE +70
             TO TABLE-ELEMENT-LENGTH OF SCAN4HIT-I-O-AREA.

           CALL 'SCAN4HIT' USING SCAN4HIT-I-O-AREA.

           IF HIT-SWITCH OF SCAN4HIT-I-O-AREA = 'YES'
               GO TO 2150-LOAD-TABLE-ELEMENT
           ELSE
               GO TO 2180-TAKE-ZEE-NEXT-READ.

       2150-LOAD-TABLE-ELEMENT.

           MOVE '_' TO ACTION-CODE.
           MOVE TABLE-ENTRY-DESCRIPTION
                    OF DETAIL-INPUT-REC
             TO TABLE-ENTRY-DESCRIPTION-1
                    OF COBOL-VARIABLE-NAMES.
           MOVE SELECT-CMD-NAME-1ST-5BYTES
                    OF DETAIL-INPUT-REC
             TO SELECT-CMD-NAME-1ST-5BYTES
                    OF COBOL-VARIABLE-NAMES.
           MOVE SELECT-CMD-PARAMETERS
                    OF DETAIL-INPUT-REC
             TO SELECT-CMD-PARAMETERS
                    OF COBOL-VARIABLE-NAMES.
           PERFORM 2500-DO-THE-TBADD
              THRU 2599-EXIT-DO-THE-TBADD.

           IF TBADD-RETURN-CODE GREATER THAN 0
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0012 TO RETURN-CODE-WORK
               GO TO 2199-EXIT-TYPE-TBLHDLR1.

       2180-TAKE-ZEE-NEXT-READ.

           PERFORM 3000-READ
              THRU 3999-EXIT-READ.

       2199-EXIT-TYPE-TBLHDLR1.
           EXIT.
           EJECT
       2200-PANEL-TYPE-TBLHDLR2.

           IF FILE-AT-EOF = 'YES'
               MOVE 'YES' TO TIME-TO-QUIT
               PERFORM 2500-DO-THE-TBADD
                  THRU 2599-EXIT-DO-THE-TBADD
               IF TBADD-RETURN-CODE GREATER THAN 0
                   MOVE 'NO ' TO CONTINUE-PROCESSING
                   MOVE 0012 TO RETURN-CODE-WORK
                   GO TO 2299-EXIT-TYPE-TBLHDLR2
               ELSE
                   GO TO 2299-EXIT-TYPE-TBLHDLR2
           ELSE
               NEXT SENTENCE.

           IF (RECORD-ID OF DETAIL-INPUT-REC = 'D1')
             AND
              (PREVIOUS-RECORD-ID NOT = 'D0')
                   PERFORM 2500-DO-THE-TBADD
                      THRU 2599-EXIT-DO-THE-TBADD
                   IF TBADD-RETURN-CODE GREATER THAN 0
                       MOVE 'NO ' TO CONTINUE-PROCESSING
                       MOVE 0012 TO RETURN-CODE-WORK
                       GO TO 2299-EXIT-TYPE-TBLHDLR2
                   ELSE
                       NEXT SENTENCE
           ELSE
                   NEXT SENTENCE.

           IF RECORD-ID OF DETAIL-INPUT-REC = 'D1'
               MOVE 'D1' TO PREVIOUS-RECORD-ID
               MOVE '_' TO ACTION-CODE
               MOVE TABLE-ENTRY-DESCRIPTION
                        OF DETAIL-INPUT-REC
                 TO TABLE-ENTRY-DESCRIPTION-1
                        OF COBOL-VARIABLE-NAMES
               MOVE SPACES
                 TO TABLE-ENTRY-DESCRIPTION-2
                        OF COBOL-VARIABLE-NAMES
               MOVE SELECT-CMD-NAME-1ST-5BYTES
                        OF DETAIL-INPUT-REC
                 TO SELECT-CMD-NAME-1ST-5BYTES
                        OF COBOL-VARIABLE-NAMES
               MOVE SELECT-CMD-PARAMETERS
                        OF DETAIL-INPUT-REC
                 TO SELECT-CMD-PARAMETERS
                        OF COBOL-VARIABLE-NAMES
               PERFORM 3000-READ
                  THRU 3999-EXIT-READ
               GO TO 2299-EXIT-TYPE-TBLHDLR2
           ELSE
               NEXT SENTENCE.

           IF RECORD-ID OF DETAIL-INPUT-REC = 'D2'
               NEXT SENTENCE
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0020 TO RETURN-CODE-WORK
               GO TO 2299-EXIT-TYPE-TBLHDLR2.

           IF PREVIOUS-RECORD-ID = 'D1'
               MOVE 'D2' TO PREVIOUS-RECORD-ID
               MOVE TABLE-ENTRY-DESCRIPTION
                        OF DETAIL-INPUT-REC
                 TO TABLE-ENTRY-DESCRIPTION-2
                        OF COBOL-VARIABLE-NAMES
               PERFORM 3000-READ
                  THRU 3999-EXIT-READ
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0020 TO RETURN-CODE-WORK.

       2299-EXIT-TYPE-TBLHDLR2.
           EXIT.
           EJECT
       2300-PANEL-TYPE-TBLHDLR3.

           IF FILE-AT-EOF = 'YES'
               MOVE 'YES' TO TIME-TO-QUIT
               PERFORM 2500-DO-THE-TBADD
                  THRU 2599-EXIT-DO-THE-TBADD
               IF TBADD-RETURN-CODE GREATER THAN 0
                   MOVE 'NO ' TO CONTINUE-PROCESSING
                   MOVE 0012 TO RETURN-CODE-WORK
                   GO TO 2399-EXIT-TYPE-TBLHDLR3
               ELSE
                   GO TO 2399-EXIT-TYPE-TBLHDLR3
           ELSE
               NEXT SENTENCE.

           IF (RECORD-ID OF DETAIL-INPUT-REC = 'D1')
             AND
              (PREVIOUS-RECORD-ID NOT = 'D0')
                   PERFORM 2500-DO-THE-TBADD
                      THRU 2599-EXIT-DO-THE-TBADD
                   IF TBADD-RETURN-CODE GREATER THAN 0
                       MOVE 'NO ' TO CONTINUE-PROCESSING
                       MOVE 0012 TO RETURN-CODE-WORK
                       GO TO 2399-EXIT-TYPE-TBLHDLR3
                   ELSE
                       NEXT SENTENCE
           ELSE
                   NEXT SENTENCE.

           IF RECORD-ID OF DETAIL-INPUT-REC = 'D1'
               MOVE 'D1' TO PREVIOUS-RECORD-ID
               MOVE '_' TO ACTION-CODE
               MOVE TABLE-ENTRY-DESCRIPTION
                        OF DETAIL-INPUT-REC
                 TO TABLE-ENTRY-DESCRIPTION-1
                        OF COBOL-VARIABLE-NAMES
               MOVE SPACES
                 TO TABLE-ENTRY-DESCRIPTION-2
                        OF COBOL-VARIABLE-NAMES
               MOVE SPACES
                 TO TABLE-ENTRY-DESCRIPTION-3
                        OF COBOL-VARIABLE-NAMES
               MOVE SELECT-CMD-NAME-1ST-5BYTES
                        OF DETAIL-INPUT-REC
                 TO SELECT-CMD-NAME-1ST-5BYTES
                        OF COBOL-VARIABLE-NAMES
               MOVE SELECT-CMD-PARAMETERS
                        OF DETAIL-INPUT-REC
                 TO SELECT-CMD-PARAMETERS
                        OF COBOL-VARIABLE-NAMES
               PERFORM 3000-READ
                  THRU 3999-EXIT-READ
               GO TO 2399-EXIT-TYPE-TBLHDLR3
           ELSE
               NEXT SENTENCE.

           IF RECORD-ID OF DETAIL-INPUT-REC = 'D2' OR 'D3'
               NEXT SENTENCE
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0020 TO RETURN-CODE-WORK
               GO TO 2399-EXIT-TYPE-TBLHDLR3.

           IF RECORD-ID OF DETAIL-INPUT-REC = 'D2'
               IF PREVIOUS-RECORD-ID = 'D1'
                   MOVE 'D2' TO PREVIOUS-RECORD-ID
                   MOVE TABLE-ENTRY-DESCRIPTION
                            OF DETAIL-INPUT-REC
                     TO TABLE-ENTRY-DESCRIPTION-2
                            OF COBOL-VARIABLE-NAMES
                   PERFORM 3000-READ
                      THRU 3999-EXIT-READ
                   GO TO 2399-EXIT-TYPE-TBLHDLR3
               ELSE
                   MOVE 'NO ' TO CONTINUE-PROCESSING
                   MOVE 0020 TO RETURN-CODE-WORK
                   GO TO 2399-EXIT-TYPE-TBLHDLR3
           ELSE
               NEXT SENTENCE.

           IF PREVIOUS-RECORD-ID = 'D2'
               MOVE 'D3' TO PREVIOUS-RECORD-ID
               MOVE TABLE-ENTRY-DESCRIPTION
                        OF DETAIL-INPUT-REC
                 TO TABLE-ENTRY-DESCRIPTION-3
                        OF COBOL-VARIABLE-NAMES
               PERFORM 3000-READ
                  THRU 3999-EXIT-READ
           ELSE
               MOVE 'NO ' TO CONTINUE-PROCESSING
               MOVE 0020 TO RETURN-CODE-WORK.

       2399-EXIT-TYPE-TBLHDLR3.
           EXIT.
           EJECT
       2500-DO-THE-TBADD.

           CALL 'ISPLINK' USING TBADD TABLE-NAME.

           MOVE RETURN-CODE TO TBADD-RETURN-CODE.

           MOVE 'YES' TO RECORD-WAS-ADDED.

       2599-EXIT-DO-THE-TBADD.
           EXIT.


       2999-EXIT-LOAD-TABLE.
           EXIT.
           EJECT
       3000-READ.

           READ INPUT-TABLE-FILE
                AT END
                    MOVE 'YES' TO FILE-AT-EOF.

       3999-EXIT-READ.
           EXIT.
           EJECT
       4000-DO-THE-TBDISPL.

           IF BYTES-1-5 OF PARM-TABLE-NAME OF PARM-AREA = 'PRIME'
               CALL 'ISPLINK' USING TBTOP TABLE-NAME.

           CALL 'ISPLINK'
              USING
                 TBDISPL
                 TABLE-NAME
                 PANEL-NAME
                 MESSAGE-ID
                 TBDISPL-CURSOR-LOC.

           MOVE RETURN-CODE TO TBDISPL-RETURN-CODE.

           IF TBDISPL-RETURN-CODE GREATER THAN 0004
               NEXT SENTENCE
           ELSE
               GO TO 4999-EXIT-DO-THE-TBDISPL.

           MOVE 'NO ' TO CONTINUE-PROCESSING.

           CALL 'ISPLINK' USING VGET ZVERB SHARED.

           IF END-OR-RETURN-SWITCH = 'RETURN'
               MOVE 'YES' TO DOCSYS-EXIT-SWITCH
               CALL 'ISPLINK' USING VPUT DOCSEXIT.

       4999-EXIT-DO-THE-TBDISPL.
           EXIT.
           EJECT
       5000-PROCESS-TABLE.

           MOVE 'TBLH100 '  TO MESSAGE-ID.
           MOVE 'ZCMD    ' TO TBDISPL-CURSOR-LOC.

           TRANSFORM ACTION-CODE
               FROM
                'abcdefghijklmnopqrstuvwxyz'
               TO
                'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.

           IF   (PANEL-DESC-LINE-COUNT OF PARM-AREA = '1')
             AND
                (THE-COMMAND NOT EQUAL SPACES)
                    PERFORM 6000-EYEBALL-ZCMD
                       THRU 6999-EXIT-EYEBALL-ZCMD
                    GO TO 5999-EXIT-PROCESS-TABLE.


      *    START SELECT CODE SCAN:

           MOVE +1 TO PARAMETER-SUB.

       5100-SCAN-ACTTAB.
           IF AC (PARAMETER-SUB) = ' '
               GO TO 5100-SCAN-X.
           IF ACTION-CODE = AC (PARAMETER-SUB)
                   MOVE ACT (PARAMETER-SUB)
                              TO SELECT-CMD-NAME-LAST-3BYTES
                   CALL 'ISPLINK' USING VPUT ENTRYDS1 PROFYLE
                   TRANSFORM TABLE-ENTRY-DESCRIPTION-2
                      FROM LOW-VALUES TO SPACES
                   CALL 'ISPLINK' USING VPUT ENTRYDS2 PROFYLE
                   TRANSFORM TABLE-ENTRY-DESCRIPTION-3
                      FROM LOW-VALUES TO SPACES
                   CALL 'ISPLINK' USING VPUT ENTRYDS3 PROFYLE
                   PERFORM 5500-INVOKE-SELECT-CMD
                      THRU 5599-EXIT-INVOKE-SELECT-CMD
                   MOVE '_' TO ACTION-CODE
                   CALL 'ISPLINK' USING TBPUT TABLE-NAME
                   MOVE 'NO ' TO RETURN-TO-0010-BEGIN
                   GO TO 5999-EXIT-PROCESS-TABLE
           ELSE
                   ADD +1 TO PARAMETER-SUB
                   GO TO 5100-SCAN-ACTTAB.
       5100-SCAN-X.

           IF ACTION-CODE = ' ' OR '-' OR '_'
               MOVE '_' TO ACTION-CODE
               CALL 'ISPLINK' USING TBPUT TABLE-NAME
               MOVE 'NO ' TO RETURN-TO-0010-BEGIN
           ELSE
               CALL 'ISPLINK' USING TBPUT TABLE-NAME
               MOVE 'ACTCODE ' TO TBDISPL-CURSOR-LOC
               MOVE 'TBLH101 '  TO MESSAGE-ID
               MOVE 'NO ' TO RETURN-TO-0010-BEGIN
               GO TO 5999-EXIT-PROCESS-TABLE.


           IF TBDISPL-RETURN-CODE EQUAL ZEROS
               GO TO 5999-EXIT-PROCESS-TABLE.

           CALL 'ISPLINK'
              USING
                 TBDISPL
                 TABLE-NAME.

           MOVE RETURN-CODE TO TBDISPL-RETURN-CODE.

           IF TBDISPL-RETURN-CODE GREATER THAN 0004
               MOVE 'NO ' TO CONTINUE-PROCESSING
               GO TO 5999-EXIT-PROCESS-TABLE.

           GO TO 5000-PROCESS-TABLE.

           EJECT
       5500-INVOKE-SELECT-CMD.

           MOVE SELECT-CMD-NAME-1ST-5BYTES OF COBOL-VARIABLE-NAMES
             TO SELECT-CMD-NAME-1ST-5BYTES OF BUFFER.

           PERFORM 5600-CALCULATE-BUFFER-LENGTH
              THRU 5699-EXIT-CALC-BUFFER-LENGTH.

           CALL 'ISPLINK'
              USING
                 SELEKT
                 LENGTH-FIELD
                 BUFFER.

       5599-EXIT-INVOKE-SELECT-CMD.
           EXIT.
           EJECT
       5600-CALCULATE-BUFFER-LENGTH.

           MOVE SPACES TO PARAMETER-TABLE.

           MOVE +15 TO LENGTH-FIELD.

           MOVE SELECT-CMD-PARAMETERS OF COBOL-VARIABLE-NAMES
             TO PARAMETER-TABLE.

           MOVE +121 TO PARAMETER-SUB.

       5650-DECREMENT-SUBSCRIPT.

           SUBTRACT +1 FROM PARAMETER-SUB.

           IF  (PARAMETER-SUB LESS THAN +1)
             OR
               (PARAMETER-BYTE (PARAMETER-SUB) NOT = SPACE)
                    NEXT SENTENCE
           ELSE
                    GO TO 5650-DECREMENT-SUBSCRIPT.

           ADD PARAMETER-SUB TO LENGTH-FIELD.

           ADD +1 TO PARAMETER-SUB.
           MOVE ')' TO PARAMETER-BYTE (PARAMETER-SUB).

           MOVE PARAMETER-TABLE
             TO REMAINING-SELECT-CMD-BUFFER OF BUFFER.

       5699-EXIT-CALC-BUFFER-LENGTH.
           EXIT.


       5999-EXIT-PROCESS-TABLE.
           EXIT.
           EJECT
       6000-EYEBALL-ZCMD.

           MOVE 'NO ' TO RETURN-TO-0010-BEGIN.

           MOVE THE-COMMAND TO BREAKDOWN-THE-COMMAND.

           TRANSFORM BREAKDOWN-THE-COMMAND
               FROM
                'abcdefghijklmnopqrstuvwxyz'
               TO
                'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.

           TRANSFORM BREAKDOWN-THE-COMMAND
               FROM
                LOW-VALUES
               TO
                SPACES.

           IF   (PANEL-DESC-LINE-COUNT OF PARM-AREA = '1')
             AND
                (BYTE-1 OF BREAKDOWN-THE-COMMAND = 'F')
             AND
                (BYTE-2 OF BREAKDOWN-THE-COMMAND = SPACE)
             AND
                (BYTES-3-37 OF BREAKDOWN-THE-COMMAND NOT = SPACES)
                    NEXT SENTENCE
           ELSE
                    GO TO 6999-EXIT-EYEBALL-ZCMD.

           MOVE 'YES' TO RETURN-TO-0010-BEGIN.

           IF BYTES-3-5 OF BREAKDOWN-THE-COMMAND = 'ALL'
               MOVE 'YES' TO FIND-ALL
               GO TO 6999-EXIT-EYEBALL-ZCMD.

           MOVE BYTES-3-37 OF BREAKDOWN-THE-COMMAND
             TO FIND-CMD-ARRAY.

           MOVE +0 TO FIND-CMD-SUB.

       6100-BUMP-FIND-CMD-SUBSCRIPT.

           ADD +1 TO FIND-CMD-SUB.

           IF  (FIND-CMD-SUB GREATER THAN +35)
             OR
               (FIND-CMD-BYTE (FIND-CMD-SUB) = SPACE)
                    SUBTRACT +1 FROM FIND-CMD-SUB
           ELSE
                    GO TO 6100-BUMP-FIND-CMD-SUBSCRIPT.

           MOVE FIND-CMD-SUB
             TO ARGUMENT-LENGTH OF SCAN4HIT-I-O-AREA.

           MOVE BYTES-3-37 OF BREAKDOWN-THE-COMMAND
             TO ARGUMENT OF SCAN4HIT-I-O-AREA.

           MOVE 'NO ' TO FIND-ALL.

       6999-EXIT-EYEBALL-ZCMD.
           EXIT.
           EJECT
       7000-CALL-ALLOCMEM.

           CALL 'ALLOCMEM' USING ALLOCMEM-I-O-AREA.

           IF SUCCESS-INDICATOR = 00
               NEXT SENTENCE
           ELSE
               DISPLAY '************  ERROR  *****************'
               DISPLAY '  '
               DISPLAY '**** ERROR IN SUBROUTINE ALLOCMEM ****'
               DISPLAY '  '
               DISPLAY 'FAILURE TO DYNAMICALLY ALLOCATE THE '
               DISPLAY 'FOLLOWING DATASET:'
               DISPLAY '  '
               DISPLAY '     DSN= ' DSNAME OF ALLOCMEM-I-O-AREA
               DISPLAY '     MEM= ' MEMBER-NAME
                  OF ALLOCMEM-I-O-AREA
               GO TO 0090-QUIT.

       7999-EXIT-CALL-ALLOCMEM.
           EXIT.
