)ATTR
 _ TYPE(INPUT)  INTENS(HIGH) CAPS(ON)  JUST(LEFT)  COLOR(TURQ)
 ! TYPE(INPUT)  INTENS(HIGH) CAPS(ON)  JUST(LEFT)  COLOR(TURQ) PAD(_)
 $ TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) JUST(LEFT)
 @ TYPE(OUTPUT) INTENS(LOW)  CAPS(OFF) JUST(LEFT)
 ~ TYPE(OUTPUT) INTENS(LOW)  CAPS(OFF) JUST(RIGHT)
 × TYPE(OUTPUT) INTENS(LOW)  CAPS(OFF) JUST(LEFT)  COLOR(GREEN)
 } TYPE(TEXT)   INTENS(LOW)  CAPS(OFF) JUST(LEFT)  COLOR(GREEN)
 * TYPE(OUTPUT) INTENS(LOW)  CAPS(OFF) JUST(RIGHT) COLOR(RED)
 # TYPE(OUTPUT) INTENS(LOW)  CAPS(OFF) JUST(RIGHT) COLOR(TURQ)
 ` TYPE(TEXT)   INTENS(LOW)  CAPS(OFF) JUST(LEFT)  COLOR(YELLOW)
 % TYPE(TEXT)   INTENS(HIGH)
 + TYPE(TEXT)   INTENS(LOW)
 { TYPE(TEXT)   INTENS(LOW)  CAPS(OFF) JUST(LEFT)  COLOR(TURQ)
)BODY EXPAND(\\)
                              +LPALNK Primary Menu
}Command ===>_ZCMD
+
}Function . ._Z+ %1 {Dataset Attributes
                 %2 {Modules
                 %3 {Products
                 %4 {Duplicate Modules
                 %5 {Post CLPA Modules
+
}Mode . . . ._Z       %LPA    {Link Pack Area
                      %LPALST {Link Pack Area Library List
                      %LNKLST {Link Library List
                      %ALL    {LPA, LPALST and LNKLST
+
}Sort . . . ._Z       %LOC    {Location
                      %NAME   {Module or product name
                      %SIZE   {Module or product size
+
}Exclude  . ._Z                                           +
}         . ._Z                                           +
}         . ._Z                                           +
}         . ._Z                                           +
             %Dataset names to exclude from LPALST and LNKLST processing
+
+
+Enter}END+command to terminate LPALNK
)INIT
 .ZVARS  = '(LLFUNC,LLMODE,LLSORT,LLEXCL1,LLEXCL2,LLEXCL3,LLEXCL4)'
 .CURSOR = LLFUNC
 &ZCMD   = ' '
)REINIT
)PROC
 VER(&LLFUNC,LIST,1,2,3,4,5)
 VER(&LLMODE,LIST,LPA,LPALST,LNKLST,ALL)
 VER(&LLSORT,LIST,LOC,NAME,SIZE)
)END
