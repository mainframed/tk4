//&SYSUID.LL JOB (SZTECH),'LPALNK',
//             CLASS=U,MSGCLASS=X,NOTIFY=&SYSUID.
//JESDS OUTPUT PAGEDEF=LDUP,FORMDEF=LDUP,JESDS=ALL,FORMS=3H25
//ASM     EXEC PGM=ASMA90,PARM='NODECK,OBJ'
//STEPLIB   DD DISP=SHR,DSN=SYS1.SASMMOD1
//SYSLIB    DD DISP=SHR,DSN=SYS1.MACLIB
//          DD DISP=SHR,DSN=SYS1.MODGEN
//          DD DISP=SHR,DSN=ZTGP01.MJCUTIL.MACLIB    <=== $COMMON
//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSPRINT  DD SYSOUT=*,OUTPUT=*.JESDS
//SYSLIN    DD DSN=&&OBJECT,SPACE=(CYL,(9,9)),UNIT=SYSDA,
//             DISP=(NEW,PASS),
//             DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS)
//SYSIN     DD *
         TITLE 'LPALNK - LPALNK ISPF Interface'
LPALNK   START 0
**********************************************************************
*                                                                    *
* Name:            LPALNK                                            *
*                                                                    *
* Description:     LPALNK ISPF Interface                             *
*                                                                    *
* Function:        Provides interactive analysis of the Link Pack    *
*                  Area (LPA), Link Pack Area Library List (LPALST), *
*                  Link Library List (LNKLST). Major functions       *
*                  include Dataset Attributes, Modules, Duplicate    *
*                  Modules and Products.                             *
*                                                                    *
* Installation:    1) Inventory LPALNK                               *
*                     The LPALNK PDS contains the following.         *
*                     Member    Type      Contents                   *
*                     ======    ====      ========                   *
*                     $COMMON   ASM/MACRO Common Macros              *
*                     $UDP      ASM/MACRO User Defined Products      *
*                     LPALNK    ASM/JCL   LPALNK ISPF Interface      *
*                     LL@PRIM   ISPPLIB   LPALNK ISPF Panel          *
*                     LLDA      ISPPLIB   LPALNK ISPF Panel          *
*                     LLDM      ISPPLIB   LPALNK ISPF Panel          *
*                     LLMO      ISPPLIB   LPALNK ISPF Panel          *
*                     LLPCM     ISPPLIB   LPALNK ISPF Panel          *
*                     LLPR      ISPPLIB   LPALNK ISPF Panel          *
*                     LLPRS     ISPPLIB   LPALNK ISPF Panel          *
*                                                                    *
*                  2) Assemble and link-edit LPALNK                  *
*                  The assembly and linkedit of LPALNK must both     *
*                  get a return code zero.                           *
*                                                                    *
*                  3) Make LPALNK Available                          *
*                  The load module and panels need to be available   *
*                  on ISPLLIB and ISPPLIB allocations respectively.  *
*                  The most straightforward way to accomplish this   *
*                  is with LIBDEF's in a CLIST or REXX EXEC.         *
*                                                                    *
*                  PROC 0                                            *
*                  CONTROL NOMSG                                     *
*                  ISPEXEC LIBDEF ISPPLIB DATASET ID('?.ISPPLIB')    *
*                  ISPEXEC LIBDEF ISPLLIB DATASET ID('?.ISPLLIB')    *
*                  ISPEXEC SELECT PGM(LPALNK)                        *
*                  ISPEXEC LIBDEF ISPPLIB                            *
*                  ISPEXEC LIBDEF ISPLLIB                            *
*                  EXIT                                              *
*                                                                    *
*                  4) Add Unknown Modules to LPALNK                  *
*                  Modules that are not in the product table will    *
*                  show up under a product called Unknown.  If       *
*                  you can identify what products these modules      *
*                  belong to, add them to either the product         *
*                  table or to the $UDP macro as a User Defined      *
*                  Product.  The default $UDP macro contains         *
*                  entries for an installation written File          *
*                  Transfer System (FTS).  Actual vendor products    *
*                  should be added to the product table and          *
*                  installation specific modules should be added     *
*                  to the $UDP macro.  The $UDP macro was            *
*                  designed to be customized and carried forward     *
*                  when LPALNK is upgraded.  Please send me          *
*                  information about vendor products that you have   *
*                  added so that they can be incorporated into       *
*                  the base LPALNK product table.                    *
*                                                                    *
*                  5) Remove previous levels of LPALNK               *
*                  If a previous level of LPA, LPAISPF or LPALNK was *
*                  installed on your system, delete all load modules *
*                  and panels associated with that previous level.   *
*                                                                    *
* Contact:         Michael J. Cleary                                 *
*                  Mainframe Technical Services                      *
*                  Bergen Brunswig                                   *
*                  4000 Metropolitan Drive                           *
*                  Orange, California  92868                         *
*                  Voice:  714.385.4052                              *
*                  Fax     714.704.7052                              *
*                  Email:  mike.cleary@bergenbrunswig.com            *
*                                                                    *
* Abend codes:     None                                              *
*                                                                    *
* Addressing mode: 31                                                *
*                                                                    *
* ASC mode:        Primary                                           *
*                                                                    *
* Change Log:      06/20/97 - Version 1 Release 0 Modification 0     *
*                  07/23/97 - Version 1 Release 0 Modification 1     *
*                  09/29/97 - Version 1 Release 0 Modification 2     *
*                  02/17/98 - Version 1 Release 0 Modification 3     *
*                                                                    *
* Copyright:       None                                              *
*                                                                    *
* Control blocks:  Contents module information (MODI)                *
*                  Communications Vector Table (CVT)                 *
*                  Global Data Area (GDA)                            *
*                  LNKLST Table (LLT)                                *
*                  LPALST Table (LPAT)                               *
*                  PDS Directory Entry (PDSE)                        *
*                                                                    *
* CSECTs:          Yes, quite a few actually!                        *
*                                                                    *
* Dependencies:    None                                              *
*                                                                    *
* Disclaimer:                                                        *
*                                                                    *
*   Bergen Brunswig neither expresses nor implies any warranty as    *
*   to the fitness of these computer programs for any function.      *
*   The use of these programs or the results therefrom is            *
*   entirely at the risk of the user.  Consequently, the user may    *
*   modify these programs in any way they think fit.  These          *
*   programs are Freeware and may be freely copied.  They may be     *
*   freely distributed to any other party on condition that no       *
*   inducement beyond reasonable handling costs is offered or        *
*   accepted by either side for such distribution.                   *
*                                                                    *
* DSECTs:          Contents module information (MODI)                *
*                  Communications Vector Table (CVT)                 *
*                  Global Data Area (GDA)                            *
*                  LNKLST Table (LLT)                                *
*                  LPALNK Dynamic Work Area (LLDWA)                  *
*                  LPALST Table (LPAT)                               *
*                  PDS Directory Entry (PDSE)                        *
*                                                                    *
* Entry points:    LPALNK                                            *
*                                                                    *
* Environment:     MVS/ESA, TSO, ISPF                                *
*                                                                    *
* Input:           None                                              *
*                                                                    *
* Key:             8                                                 *
*                                                                    *
* Language:        MVS 370 assembler                                 *
*                                                                    *
* Linkage:         Standard linkage for entry/exit                   *
*                                                                    *
* Location:        Private                                           *
*                                                                    *
* Macros:                                                            *
*   Name     Usage Description                                       *
*   ======== ===== ===========                                       *
*   $COMMON  1 2   Common Macros                                     *
*   $UDP       2   User Defined Products                             *
*   CALL     1 2   Pass Control to a Control Section                 *
*   CSVINFO    2   Obtain Information about Loaded Modules           *
*   DELETE   1     Relinquish Control of a Load Module               *
*   LOAD     1     Bring a Load Module into Virtual Storage          *
*   RETURN   1     Return Control                                    *
*   SAVE     1     Save Register Contents                            *
*   SPLEVEL  1     Set Macro Level                                   *
*   STORAGE  1 2   Obtain and Release Storage                        *
*                  Usage:    1 = Common Macros, 2 = LPALNK           *
*                                                                    *
* Messages:        None                                              *
*                                                                    *
* Mode:            Task                                              *
*                                                                    *
* Module type:     Procedure                                         *
*                                                                    *
* Output:          LPALNK information                                *
*                                                                    *
* Parameter list:  None                                              *
*                                                                    *
* Patch label:     None                                              *
*                                                                    *
* Reason codes:    None                                              *
*                                                                    *
* Recovery:        None                                              *
*                                                                    *
* Reentrancy:      Reentrant                                         *
*                                                                    *
* Registers:       Saved:         0-12,14-15 via SAVE(14,12)         *
*                  Restored:      0-12,14 via RETURN(14,12),RC=(15)  *
*                  Base:          11/12                              *
*                  Dynamic work:  10                                 *
*                  Static work:   9                                  *
*                                                                    *
* Return codes:    Zero - Normal completion                          *
*                                                                    *
* Residence mode:  24                                                *
*                                                                    *
* Savearea:        Dynamically obtained storage                      *
*                                                                    *
* Serialization:   None                                              *
*                                                                    *
* Size:            Approximately 55KB                                *
*                                                                    *
* State:           Problem                                           *
*                                                                    *
* Status:          Version 1 Release 0 Modification 3                *
*                                                                    *
* Tables:          Product table - Module/Product relationship       *
*                                                                    *
* User Exits:      None                                              *
*                                                                    *
* Virtual Storage: Dynamic Work Area, 3KB, Below                     *
*                  Product Table, 21KB, Any                          *
*                                                                    *
* Wait states:     None                                              *
*                                                                    *
* X-memory mode:   HASID=PASID=SASID                                 *
*                                                                    *
**********************************************************************
         TITLE '$COMMON - Common Macros'
**********************************************************************
         PRINT OFF                 Stop source and object printing
         COPY  $COMMON             Common Macros
         PRINT ON                  Resume source and object printing
**********************************************************************
         TITLE 'LPALNK - Mainline'
**********************************************************************
LPALNK   $ENTRY DWA=(LLDWA,R10,LLDWA#),   Entry                        X
               DWALOC=BELOW,                                           X
               SWA=(LLSWA,R9)
         GBLA  &COMMON             Common Macros Level
         AIF   (&COMMON GE 3).COMMON
         MNOTE 8,'Wrong level of $COMMON, Required=3, Found=&COMMON'
         AGO   .COMMON
.COMMON  ANOP
         CALL  LLINIT              Initialization
         CALL  LLPROC              Process
         CALL  LLTERM              Termination
LPALNK   $EXIT                     Exit
**********************************************************************
         TITLE 'LLBRIF - LPALNK Browse Interface'
**********************************************************************
LLBRIF   $ENTRY                    Entry
*        R4 - Fullword pointer to record read (output)
*        R5 - Fullword fixed binary record length (output - V,VA,VM,U)
*        R6 - Fullword relative record number
*             a) Record requested (input)
*             b) Record provided (output if RC=4/8)
*        R7 - Fullword dialog data area address
         LM    R4,R7,0(R1)         BRIF parameters
         L     R10,0(,R7)          LPALNK dynamic workarea
         L     R3,0(,R6)           Requested record number
         C     R3,BRIFCNT          Requested record status ?
         BH    BRIFEOF             . EOF
         BE    BRIFLAST            . Last record
*
**       Normal Module Record
*
BRIFNORM EQU   *                   . Normal record
         BCTR  R3,0                Relative to zero
         M     R2,=F'80'           Calculate offset
         A     R3,BRIFADR          Determine address
         ST    R3,0(,R4)           Pass record address to BRIF
         B     LLBRIF0             Exit - RC=0
*
**       Last Module Record
*
BRIFLAST EQU   *
         L     R15,BRIFREM         Remainder
         LTR   R15,R15             Any remainder ?
         BZ    BRIFNORM            No, process normally
         BCTR  R3,0                Relative to zero
         M     R2,=F'80'           Calculate offset
         A     R3,BRIFADR          Determine address
         $FILL LLMODLN,C' '        Clear module line
         L     R15,BRIFREM         Remaining length
         $VLM  LLMODLN,0(,R3),(R15) Move remaining module line
         LA    R15,LLMODLN         LPALNK module line address
         ST    R15,0(,R4)          Pass record address to BRIF
         B     LLBRIF0             Exit - RC=0
*
**       No More Module Records
*
BRIFEOF  MVC   0(4,R6),BRIFCNT     Maximum record number
         B     LLBRIF8             Exit - RC=8
LLBRIF   $EXIT                     Exit
**********************************************************************
         TITLE 'LLDA - Dataset Attributes'
**********************************************************************
LLDA     $ENTRY                    Entry
         CLC   LLMODE,=CL6'LPA'    LPA Mode ?
         BNE   DAMODEOK           . No
         MVC   ZEDSMSG,=CL24'Invalid Parameters'
         MVC   ZEDLMSG,=CL80'Specified mode of LPA is invalid with funcX
               tion of Dataset Attributes'
         SETMSG MESSAGE=ISRZ001    Set next message
         B     LLDA0               Exit
DAMODEOK EQU   *
         CALL  LLGDSN              Get Dataset Names
         TBQUERY TABLE=XXXLST,ROWNUM=LLDACRP
         CLC   LLDACRP,=CL8'00000000' Any Datasets ?
         BNE   DADSNOK             . Yes
         MVC   ZEDSMSG,=CL24'No Datasets'
         MVC   ZEDLMSG,=CL80'Specified mode resulted in no datasets beiX
               ng selected'
         SETMSG MESSAGE=ISRZ001    Set next message
         B     LLDA0               Exit
DADSNOK  EQU   *
         MVC   LLDA1,LLDA1D        Message 1 default
         MVC   LLDA2,LLDA2D        Message 2 default
         TBCREATE TABLE=LLDA,      Create a New Table                  X
               NAMES=(LLDSN,ZDLVOL,LLMEM,ZDLBLKSZ,ZDLEXT,ZDLSIZE,ZDLUSEX
               D,LLLOC)
         TBTOP TABLE=XXXLST        Set the Row Pointer to the Top
*
**       Next Dataset
*
DANXTDSN EQU   *
         TBSKIP TABLE=XXXLST,END=DAENDTBL Move the Row Pointer
         MVC   LLDSN,LSTDSN        Dataset name
         MVC   LLLOC,LSTLOC        Dataset location
         $FILL TEMPDSN,C' '        Clear dataset name
         MVI   TEMPDSN+00,X'7D'    Open Quote
         MVC   TEMPDSN+01(44),LLDSN Move dataset name
         $FIND TEMPDSN,C' '        Find first blank
         MVI   0(R14),X'7D'        Close Quote
         LMDINIT LEVEL=LLDSN       Initialize a Data Set List ID
         LMDLIST OPTION=LIST,      List Data Sets                      X
               DATASET=LLDSN,                                          X
               STATS=YES
*
**       Check for Optimized Blocksize
*
         CLC   ZDLBLKSZ,=CL5'32760' Optimized blocksize ?
         BE    DABLKSOK            . Yes
         MVC   LLDA1,LLDA1W        Message 1 warning
DABLKSOK EQU   *
         LMDLIST OPTION=FREE       List Data Sets
         LMDFREE                   Free a Data Set List ID
         LMINIT DATASET=TEMPDSN,   Generate a Data ID for a Data Set   X
               ENQ=SHR
         LMOPEN OPTION=INPUT       Open a Data Set
         XC    LLMEM,LLMEM         Clear member count
         $FILL MEMBER,C' '         Clear member name
*
**       Next Member
*
DANXTMEM EQU   *
         LMMLIST OPTION=LIST,      List a Library's Members            X
               MEMBER=MEMBER,                                          X
               STATS=NO
         C     R15,=F'0'           OK ?
         BNE   DAENDMEM            . No - End of members
         $INCR LLMEM               Increment member count
         B     DANXTMEM            Process next member
*
**       End of Members
*
DAENDMEM EQU   *
*
**       Check for Empty Dataset
*
         CLC   LLMEM,=F'0'         Dataset empty ?
         BNE   DAMEMOK             . No
         MVC   LLDA2,LLDA2W        Message 2 warning
DAMEMOK  EQU   *
         LMMLIST OPTION=FREE       List a Library's Members
         LMCLOSE                   Close a Data Set
         LMFREE                    Free Data Set from its Data ID
         TBADD TABLE=LLDA          Update a row from table
         B     DANXTDSN            Process next dataset, if any
DAENDTBL EQU   *
*
**       Sort Dataset Attributes
*
DASORT   EQU   *
         CLC   LLSORT,=CL8'LOC'    Location ?
         BE    DALOC               . Yes
         CLC   LLSORT,=CL8'NAME'   Name ?
         BE    DANAME              . Yes
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BE    DASIZE              . Yes
DALOC    EQU   *
         TBSORT TABLE=LLDA,        Sort a Table                        X
               FIELDS=(LLLOC,C,A)
         B     DASORTX             Continue
DANAME   EQU   *
         TBSORT TABLE=LLDA,        Sort a Table                        X
               FIELDS=(LLDSN,C,A)
         B     DASORTX             Continue
DASIZE   EQU   *
         TBSORT TABLE=LLDA,        Sort a Table                        X
               FIELDS=(ZDLSIZE,C,D)
         B     DASORTX             Continue
DASORTX  EQU   *
*
**       Display Dataset Attributes
*
         TBTOP TABLE=LLDA          Set the Row Pointer to the Top
         TBDISPL TABLE=LLDA,       Display Table Information           X
               PANEL=LLDA,                                             X
               PCLOC=LLPCLOC,                                          X
               LC=(LLDALC,S,LLDAS)
*
**       Termination
*
         TBEND TABLE=LLDA          Close a Table without Saving
LLDA     $EXIT                     Exit
**********************************************************************
         TITLE 'LLDAS - Dataset Attributes Select'
**********************************************************************
LLDAS    $ENTRY                    Entry
*
**       Build DSN
*
         CLC   LLMEM,=F'0'         Dataset empty ?
         BNE   DASMEMOK            . No
         MVC   ZEDSMSG,=CL24'Empty Dataset'
         MVC   ZEDLMSG,=CL80'Specified dataset cannot be selected becauX
               se it is empty'
         SETMSG MESSAGE=ISRZ001    Set next message
         B     LLDAS0              Exit
DASMEMOK EQU   *
         $FILL TEMPDSN,C' '        Clear dataset name
         MVI   TEMPDSN+00,X'7D'    Open Quote
         $FIND LLDSN,C' '          Find first blank
         $VLM  TEMPDSN+01,LLDSN,(R15),DECREMENT=NO Move DSN
         $FIND TEMPDSN,C' '        Find first blank
         MVI   0(R14),X'7D'        Close Quote
         BROWSE DATASET=TEMPDSN    Browse
LLDAS    $EXIT                     Exit
**********************************************************************
         TITLE 'LLDM - Duplicate Modules'
**********************************************************************
LLDM     $ENTRY                    Entry
*
**       Initialization
*
         TBCREATE TABLE=LLDM,      Create a New Table                  X
               NAMES=(LLMNAME,LLEPA,LLAM,LLAL,LLAC,LLATTR,LLRM,LLALIAS,X
               LLSIZE,LLLEN,LLLOC,LLPROD,LLDSN,LLEPAC)
*
**       Get Modules
*
         CALL  LLGMODS             Get modules
*
**       Top of Table
*
DMTOPTBL EQU   *
         $FILL LLMATCH,C' '        Clear member match
         TBTOP TABLE=LLMOD         Set the Row Pointer to the Top
         TBSKIP TABLE=LLMOD        Move the Row Pointer
*
**       Next Table Entry
*
DMNXTTBL EQU   *
         MVC   LLMEMO,LLMNAME      Save current member name
         TBSKIP TABLE=LLMOD,END=DMENDTBL Move the Row Pointer
         CLC   LLMNAME,LLMEMO       Match ?
         BE    DMMATCH             . Yes
         $FILL LLMATCH,C' '        Clear member match
         B     DMNXTTBL            Next table entry
*
**       Identify Duplicates
*
DMMATCH  EQU   *
         CLC   LLMATCH,LLMNAME     Previous match ?
         BE    DMMATCHP            . Yes
         TBSKIP TABLE=LLMOD,NUMBER=-1 Move the Row Pointer
         TBADD TABLE=LLDM          Add a Row to a Table
         TBSKIP TABLE=LLMOD        Move the Row Pointer
         TBADD TABLE=LLDM          Add a Row to a Table
         MVC   LLMATCH,LLMNAME     Indicate member match
         B     DMNXTTBL            Next table entry
DMMATCHP EQU   *
         TBADD TABLE=LLDM          Add a Row to a Table
         MVC   LLMATCH,LLMNAME     Indicate member match
         B     DMNXTTBL            Next table entry
*
**       End of Table
*
DMENDTBL EQU   *
*
**       Display Module Duplication
*
         TBEND TABLE=LLMOD         Close a Table without Saving
         TBTOP TABLE=LLDM          Set the Row Pointer to the Top
*        TBVCLEAR TABLE=LLDM       Clear table variables
*        MVC   LLMNAME,=CL8'*'     All members
*       TBSARG TABLE=LLDM,        Define a Search Argument            X
*              NAMECOND=(LLMNAME,EQ)
         TBDISPL TABLE=LLDM,       Display Table Information           X
               PANEL=LLDM,                                             X
               PCLOC=LLPCLOC,                                          X
               LC=(LLDMLC,S,LLMOS)
*
**       Termination
*
         TBEND TABLE=LLDM          Close a Table without Saving
LLDM     $EXIT                     Exit
**********************************************************************
         TITLE 'LLGDSN - Get Dataset Names'
**********************************************************************
LLGDSN   $ENTRY                    Entry
*
**       Dataset Names
*
         TBCREATE TABLE=XXXLST,    Create a New Table                  X
               NAMES=(LSTDSN,LSTLOC)
         CLC   LLMODE,=CL6'LPALST' LPALST mode ?
         BE    GDSNLPA             . Yes
         CLC   LLMODE,=CL6'ALL'    ALL mode ?
         BE    GDSNLPA             . Yes
         B     GDSNLPAX            . No
GDSNLPA  EQU   *
         L     R15,CVTPTR          CVT address
         USING CVT,R15             CVT reference
         L     R15,CVTSMEXT        VSE address
         DROP  R15                 CVT dereference
         USING CVTVSTGX,R15        VSE reference
         L     R15,CVTEPLPS        LPAT address
         DROP  R15                 VSE dereference
         USING LPAT,R15            LPAT reference
         LA    R4,LPATNTRY         Beginning address
         L     R5,LPATCNT          Dataset count
         DROP  R15                 LPAT dereference
         XC    LLDSNUM,LLDSNUM     Clear dataset number
INITLPAN EQU   *
         CLC   LLEXCL1,1(R4)       Exclude ?
         BE    GDSNLPAI            . Yes
         CLC   LLEXCL2,1(R4)       Exclude ?
         BE    GDSNLPAI            . Yes
         CLC   LLEXCL3,1(R4)       Exclude ?
         BE    GDSNLPAI            . Yes
         CLC   LLEXCL4,1(R4)       Exclude ?
         BE    GDSNLPAI            . Yes
         MVC   LSTLOC,=CL10'LPALST+000'
         L     R15,LLDSNUM         Insert dataset number
         CVD   R15,DOUBLE          Convert dataset number
         OI    DOUBLE+7,X'0F'      Force sign
         UNPK  LSTLOC+7(3),DOUBLE+6(2) Unpack dataset number
         MVC   LSTDSN,1(R4)        Move dataset name
         TBADD TABLE=XXXLST        Add a Row to a Table
GDSNLPAI EQU   *
         LA    R4,45(R4)           Next entry
         $INCR LLDSNUM             Dataset number
         BCT   R5,INITLPAN         Process next dataset, if any
GDSNLPAX EQU   *
*
**       LNKLST Datasets
*
         CLC   LLMODE,=CL6'LNKLST' LNKLST mode ?
         BE    GDSNLNK             . Yes
         CLC   LLMODE,=CL6'ALL'    ALL mode ?
         BE    GDSNLNK             . Yes
         B     GDSNLNKX            . No
GDSNLNK  EQU   *
         L     R15,CVTPTR          CVT address
         USING CVT,R15             CVT reference
         L     R15,CVTLLTA         LLT address
         DROP  R15                 CVT dereference
         USING LLT,R15             LLT reference
         LA    R4,LLTENTRY         Beginning address
         L     R5,LLTCOUNT         Dataset count
         DROP  R15                 LLT dereference
         XC    LLDSNUM,LLDSNUM     Clear dataset number
INITLNKN EQU   *
         CLC   LLEXCL1,1(R4)       Exclude ?
         BE    GDSNLNKI            . Yes
         CLC   LLEXCL2,1(R4)       Exclude ?
         BE    GDSNLNKI            . Yes
         CLC   LLEXCL3,1(R4)       Exclude ?
         BE    GDSNLNKI            . Yes
         CLC   LLEXCL4,1(R4)       Exclude ?
         BE    GDSNLNKI            . Yes
         MVC   LSTLOC,=CL10'LNKLST+000'
         L     R15,LLDSNUM         Insert dataset number
         CVD   R15,DOUBLE          Convert dataset number
         OI    DOUBLE+7,X'0F'      Force sign
         UNPK  LSTLOC+7(3),DOUBLE+6(2) Unpack dataset number
         MVC   LSTDSN,1(R4)        Move dataset name
         TBADD TABLE=XXXLST        Add a Row to a Table
GDSNLNKI EQU   *
         LA    R4,45(R4)           Next entry
         $INCR LLDSNUM             Dataset number
         BCT   R5,INITLNKN         Process next dataset, if any
GDSNLNKX EQU   *
LLGDSN   $EXIT                     Exit
**********************************************************************
         TITLE 'LLG24 - Perform QSAM IO'
**********************************************************************
LLG24    $ENTRY RMODE=24,AMODE=24  Entry
         GET   XXXLST,LLDIRBLK
LLG24    $EXIT                     Exit
**********************************************************************
         TITLE 'LLGLPA - Get LPA Modules'
**********************************************************************
LLGLPA   $ENTRY                    Entry
         L     R3,=A(LLMIPR)       MIPR address
         STM   R9,R10,LLMIPRUD     LLDWA/LLSWA for MIPR
         CSVINFO ENV=MVS,                                              X
               FUNC=LPA,                                               X
               MIPR=(3),                                               X
               USERDATA=LLMIPRUD,                                      X
               MF=(E,CSVINFO)
LLGLPA   $EXIT                     Exit
**********************************************************************
         TITLE 'LLGLST - Get XXXLST Modules'
**********************************************************************
LLGLST   $ENTRY                    Entry
         CALL  LLGDSN              Get Dataset Names
         TBTOP TABLE=XXXLST        Set the Row Pointer to the Top
*
**       Next Dataset
*
GLNXTDS  EQU   *
         TBVCLEAR TABLE=LLMOD      Clear table variables
         TBSKIP TABLE=XXXLST,END=GLLNKX Move the Row Pointer
         MVC   LLDSN,LSTDSN        Dataset name
         MVC   LLLOC,LSTLOC        Dataset location
         $FILL TEMPDSN,C' '        Clear dataset name
         MVI   TEMPDSN+00,X'7D'    Open Quote
         MVC   TEMPDSN+01(44),LLDSN Move dataset name
         $FIND TEMPDSN,C' '        Find first blank
         MVI   0(R14),X'7D'        Close Quote
*
**       Allocate LNKLST dataset
*
         MVC   TSRBUF,LLALLOC      Copy alloc command
         MVC   TSRBUF+22(44),TEMPDSN Copy dsn command
         IKJEFTSR                  TSO/E Service Facility Routine
*
**       Open LNKLST dataset
*
         MVC   XXXLST(L_XXXLST),T_XXXLST Copy DCB template
         MVC   W_OPENI(L_OPENI),T_OPENI Copy open parameter list
         OPEN  XXXLST,MF=(E,W_OPENI) Open LNKLST
*
**       Next Directory block
*
GLNXTDB  EQU   *
         L     R15,=A(LLG24)
         BASSM 14,15
         LH    R5,LLDIRBLK         Used bytes in this db
         LA    R6,LLDIRBLK         Current entry
         AR    R5,R6               End
         LA    R6,2(R6)            Current entry
         USING PDS2,R6             PDSE Basic reference
GLNXTDE  EQU   *
         CLC   0(8,R6),=8XL1'FF'   Logical end of directory ?
         BE    GLENDMEM            . Yes
         XR    R7,R7               Clear
         IC    R7,PDS2INDC         Load indicator byte
         N     R7,=F'31'           Isolate 5 bit user data length
         SLL   R7,1                Convert halfwords to bytes
         $INCR LLMEM               Increment member count
         MVC   LLMNAME,PDS2NAME    Member
         $FILL LLALIAS,C' '        Alias
         MVC   LLEPA,PDS2EPA       EPA
         $HEX  LLEPAC,LLEPA,LEN=8  Entry point address
         XR    R15,R15             Clear SMF record type
         ICM   R15,B'0111',PDS2STOR Size
         ST    R15,LLSIZE          Size
         MVC   LLLEN,LLSIZE        Length
         TM    PDS2INDC,PDS2ALIS   Alias ?
         BNO   GLNOALIAS           . No
         LA    R15,PDSBCEND        Basic end
         TM    PDS2ATR1,PDS2SCTR   Scatter ?
         BNO   GLNOSCTR            . No
         LA    R15,PDSS01LN(R15) Alias
         DROP  R6                  PDSE Basic dereference
GLNOSCTR EQU   *
         USING PDSS02,R15          PDSE Alias reference
         MVC   LLALIAS,PDS2MNM     Major name
         MVC   LLSIZE,=F'0'        Size
         DROP  R15                 PDSE Alias dereference
         USING PDS2,R6             PDSE Basic reference
GLNOALIAS EQU  *
*
**       Authorization Code
*
GLSTAC   EQU   *
         MVC   LLAC,=CL2'00'       Authorization code 00
*        TM    MODI_ATTR3,MODI_AUTH_MOD Authorized program ?
*        BNO   GLSTACX             . No
*        MVC   LLAC,=CL2'01'       Authorization code 01
         B     GLSTACX             Continue
GLSTACX  EQU   *
*
**       Addressing Mode
*
GLSTAM   EQU   *
         MVC   LLAM,=CL2'24'       A24
*        TM    MODI_ENT@,MODI_AMODE A31 ?
*        BNO   GLSTAMX             . No
*        MVC   LLAM,=CL2'31'       A31
GLSTAMX  EQU   *
*
**       Residence Mode
*
         TM    PDS2FTB2,PDSLRMOD   Residence mode ANY ?
         BNO   GLSTRM24            . No
         MVC   LLRM,=CL3'ANY'      Residence mode ANY
         B     GLSTRMX             Continue
GLSTRM24 EQU   *
         MVC   LLRM,=CL3' 24'      Residence mode 24
         B     GLSTRMX             Continue
GLSTRMX  EQU   *
         CALL  LLSTATT             Statistics
         CALL  LLGPROD             Get product
         TBADD TABLE=LLMOD         Add a Row to a Table
         LA    R6,12(R7,R6)        Next directory entry address
         CR    R6,R5               End of directory block ?
         BL    GLNXTDE             . No, process next directory entry
         B     GLNXTDB             . Yes, process next directory block
*
**       End of Members
*
GLENDMEM EQU   *
         MVC   W_CLOSE(L_CLOSE),T_CLOSE Copy CLOSE parameter list
         CLOSE XXXLST,MF=(E,W_CLOSE) Close LNKLST
*
**       Free XXXLST dataset
*
         MVC   TSRBUF,LLFREE       Copy free command
         IKJEFTSR                  TSO/E Service Facility Routine
         B     GLNXTDS             Next
GLLNKX   EQU     *
         DROP  R6                  PDSE Basic dereference
LLGLST   $EXIT                     Exit
**********************************************************************
         TITLE 'LLGMODS - Get Modules'
**********************************************************************
LLGMODS  $ENTRY                    Entry
*
**       Create Module Table
*
         TBCREATE TABLE=LLMOD,     Create a New Table                  X
               NAMES=(LLMNAME,LLEPA,LLAM,LLAL,LLAC,LLATTR,LLRM,LLALIAS,X
               LLSIZE,LLLEN,LLLOC,LLPROD,LLDSN,LLEPAC)
         XC    T1ALC,T1ALC         Clear LPA total alias count
         XC    T1ANC,T1ANC         Clear LPA total RANY count
         XC    T1ANS,T1ANS         Clear LPA total RANY size
         XC    T1MOC,T1MOC         Clear LPA total module count
         XC    T1MOS,T1MOS         Clear LPA total module size
         XC    T124C,T124C         Clear LPA total R24 count
         XC    T124S,T124S         Clear LPA total R24 size
         XC    T2ALC,T2ALC         Clear LPALST total alias count
         XC    T2ANC,T2ANC         Clear LPALST total RANY count
         XC    T2ANS,T2ANS         Clear LPALST total RANY size
         XC    T2MOC,T2MOC         Clear LPALST total module count
         XC    T2MOS,T2MOS         Clear LPALST total module size
         XC    T224C,T224C         Clear LPALST total R24 count
         XC    T224S,T224S         Clear LPALST total R24 size
         XC    T3ALC,T3ALC         Clear LNKLST total alias count
         XC    T3ANC,T3ANC         Clear LNKLST total RANY count
         XC    T3ANS,T3ANS         Clear LNKLST total RANY size
         XC    T3MOC,T3MOC         Clear LNKLST total module count
         XC    T3MOS,T3MOS         Clear LNKLST total module size
         XC    T324C,T324C         Clear LNKLST total R24 count
         XC    T324S,T324S         Clear LNKLST total R24 size
         XC    T4ALC,T4ALC         Total total alias count
         XC    T4ANC,T4ANC         Total total RANY count
         XC    T4ANS,T4ANS         Total total RANY size
         XC    T4MOC,T4MOC         Total total module count
         XC    T4MOS,T4MOS         Total total module size
         XC    T424C,T424C         Total total R24 count
         XC    T424S,T424S         Total total R24 size
*
**       Get LPA Modules
*
         CLC   LLMODE,=CL6'LPA'    LPA mode ?
         BE    GMLPA               . Yes
         CLC   LLMODE,=CL6'ALL'    ALL mode ?
         BE    GMLPA               . Yes
         B     GMLPAX              . No
GMLPA    EQU   *
         CALL  LLGLPA              Get LPA modules
GMLPAX   EQU   *
*
**       Get XXXLST Modules
*
         CLC   LLMODE,=CL6'LPALST' LPALST mode ?
         BE    GMLST               . Yes
         CLC   LLMODE,=CL6'LNKLST' LNKLST mode ?
         BE    GMLST               . Yes
         CLC   LLMODE,=CL6'ALL'    ALL mode ?
         BE    GMLST               . Yes
         B     GMLSTX              . No
GMLST    EQU   *
         CALL  LLGLST              Get XXXLST modules
GMLSTX   EQU   *
*
**       Sort Module Table
*
GMSORT   EQU   *
         CLC   LLSORT,=CL8'LOC'    Location ?
         BE    GMLOC               . Yes
         CLC   LLSORT,=CL8'NAME'   Name ?
         BE    GMNAME              . Yes
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BE    GMSIZE              . Yes
GMLOC    EQU   *
         TBSORT TABLE=LLMOD,       Sort a Table                        X
               FIELDS=(LLLOC,C,A)
         B     GMSORTX             Continue
GMNAME   EQU   *
         TBSORT TABLE=LLMOD,       Sort a Table                        X
               FIELDS=(LLMNAME,C,A)
         B     GMSORTX             Continue
GMSIZE   EQU   *
         TBSORT TABLE=LLMOD,       Sort a Table                        X
               FIELDS=(LLSIZE,N,D)
         B     GMSORTX             Continue
GMSORTX  EQU   *
LLGMODS  $EXIT                     Exit
**********************************************************************
         TITLE 'LLGPROD - Get Product'
**********************************************************************
LLGPROD  $ENTRY                    Entry
*
**       Check Major Name
*
         LA    R4,TBLPRODC         Product table count
         L     R5,LLPTA            Product table address
GPNEXT1  EQU   *
         $FIND (0(R5),8),C' '      Find first blank
         $VLC  LLALIAS,0(R5),(R15),DECREMENT=NO Major match ?
         BE    GPMATCH             . Yes
         LA    R5,TBLPRODE(R5)     Next product table entry
         BCT   R4,GPNEXT1          Process next product, if any
*
**       Check Minor Name
*
         LA    R4,TBLPRODC         Product table count
         L     R5,LLPTA            Product table address
GPNEXT2  EQU   *
         $FIND (0(R5),8),C' '      Find first blank
         $VLC  LLMNAME,0(R5),(R15),DECREMENT=NO Alias match ?
         BE    GPMATCH             . Yes
         LA    R5,TBLPRODE(R5)     Next product table entry
         BCT   R4,GPNEXT2          Process next product, if any
*
**       Termination
*
GPMATCH  EQU   *
         MVC   LLPROD,8(R5)        Product
         CLC   LLMNAME,LLEPAC      Is this DFSMS ?
         BNE   LLGPROD0            . No, exit
         MVC   LLPROD,=CL12'DFSMS' DFSMS
LLGPROD  $EXIT                     Exit
**********************************************************************
         TITLE 'LLINIT - Initialization'
**********************************************************************
LLINIT   $ENTRY                    Entry
*
**       Initialize ISPF Environment
*
         ISPFINIT                  Initialize ISPF environment
*
**       Statistics Definition
*
         CALL    LLSTATD           Statistics Definition
*
**       Define ISPF Variables
*
         VDEFINE NAMES=(LLAC),FORMAT=CHAR,LENGTH=2
         VDEFINE NAMES=(LLAL),FORMAT=CHAR,LENGTH=2
         VDEFINE NAMES=(LLALIAS),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLAM),FORMAT=CHAR,LENGTH=2
         VDEFINE NAMES=(LLATTR),FORMAT=CHAR,LENGTH=15
         VDEFINE NAMES=(LLDACRP),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLDALC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLDA1),FORMAT=CHAR,LENGTH=80
         VDEFINE NAMES=(LLDA2),FORMAT=CHAR,LENGTH=80
         VDEFINE NAMES=(LLDMCRP),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLDMLC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLDSN),FORMAT=CHAR,LENGTH=44
         VDEFINE NAMES=(LLDSNUM),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(LLEPA),FORMAT=CHAR,LENGTH=4
         VDEFINE NAMES=(LLEPAC),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLEXCL1),FORMAT=CHAR,LENGTH=44
         VDEFINE NAMES=(LLEXCL2),FORMAT=CHAR,LENGTH=44
         VDEFINE NAMES=(LLEXCL3),FORMAT=CHAR,LENGTH=44
         VDEFINE NAMES=(LLEXCL4),FORMAT=CHAR,LENGTH=44
         VDEFINE NAMES=(LLFUNC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLLEN),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(LLLOC),FORMAT=CHAR,LENGTH=10
         VDEFINE NAMES=(LLMEM),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(LLMNAME),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLMODCRP),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLMODE),FORMAT=CHAR,LENGTH=6
         VDEFINE NAMES=(LLMOLC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLPCMCRP),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLPCMLC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLPNAME),FORMAT=CHAR,LENGTH=12
         VDEFINE NAMES=(LLPRCRP),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLPREF),FORMAT=CHAR,LENGTH=08
         VDEFINE NAMES=(LLPRLC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLPROD),FORMAT=CHAR,LENGTH=12
         VDEFINE NAMES=(LLPRSCRP),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LLPRSLC),FORMAT=CHAR,LENGTH=1
         VDEFINE NAMES=(LLRM),FORMAT=CHAR,LENGTH=3
         VDEFINE NAMES=(LLSIZE),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(LLSORT),FORMAT=CHAR,LENGTH=8
         VDEFINE NAMES=(LSTDSN),FORMAT=CHAR,LENGTH=44
         VDEFINE NAMES=(LSTLOC),FORMAT=CHAR,LENGTH=10
         VDEFINE NAMES=(TEMPDSN),FORMAT=CHAR,LENGTH=56
*
**       Initialize Product Table
*
         TBCREATE TABLE=LLTMP,     Create a New Table                  X
               NAMES=(LLPREF,LLPROD)
         STORAGE OBTAIN,LENGTH=TBLPRODL,LOC=ANY,BNDRY=PAGE
         ST    R1,LLPTA            Product table address
         LA    R4,TBLPRODC         Product table count
         L     R5,=A(TBLPROD)      Product table address
INITANXT EQU   *
         MVC   LLPREF,0(R5)        Move module prefix
         MVC   LLPROD,8(R5)        Move product name
         TBADD TABLE=LLTMP         Add a Row to a Table
         LA    R5,TBLPRODE(R5)     Next product table entry
         BCT   R4,INITANXT         Process next product, if any
         TBSORT TABLE=LLTMP,       Sort a Table                        X
               FIELDS=(LLPREF,C,D)
         TBTOP TABLE=LLTMP         Set the Row Pointer to the Top
         LA    R4,TBLPRODC         Product table count
         L     R5,LLPTA            Product table address
INITGNXT EQU   *
         TBSKIP TABLE=LLTMP        Move the Row Pointer
         MVC   0(8,R5),LLPREF      Move module prefix
         MVC   8(12,R5),LLPROD     Move product name
         LA    R5,TBLPRODE(R5)     Next product table entry
         BCT   R4,INITGNXT         Process next product, if any
         MVC   0(8,R5),=CL8'????????' Unknown
         MVC   8(12,R5),=CL12'Unknown' Unknown
         TBEND TABLE=LLTMP         Close a Table without Saving
*
**       Initialize Virtual Storage Table
*
         L     R15,CVTPTR          CVT address
         USING CVT,R15             CVT reference
         L     R4,CVTSMEXT         VSE address
         USING CVTVSTGX,R4         VSE reference
         L     R5,CVTGDA           GDA address
         USING GDA,R5              GDA reference
         DROP  R15                 CVT dereference
         MVC   LLEPVT,GDAEPVT
         MVC   LLEPVT+4(5),=CL5'EPVT'
         MVC   LLECSA,GDAECSA
         MVC   LLECSA+4(5),=CL5'ECSA'
         MVC   LLEMLPA,CVTEMLPS
         MVC   LLEMLPA+4(5),=CL5'EMLPA'
         MVC   LLEFLPA,CVTEFLPS
         MVC   LLEFLPA+4(5),=CL5'EFLPA'
         MVC   LLEPLPA,CVTEPLPS
         MVC   LLEPLPA+4(5),=CL5'EPLPA'
         MVC   LLESQA,GDAESQA
         MVC   LLESQA+4(5),=CL5'ESQA'
         MVC   LLENUC,CVTERWNS
         MVC   LLENUC+4(5),=CL5'ENUC'
         MVC   LLNUC,CVTRONS
         MVC   LLNUC+4(5),=CL5'NUC'
         MVC   LLSQA,GDASQA
         MVC   LLSQA+4(5),=CL5'SQA'
         MVC   LLPLPA,CVTPLPAS
         MVC   LLPLPA+4(5),=CL5'PLPA'
         MVC   LLFLPA,CVTFLPAS
         MVC   LLFLPA+4(5),=CL5'FLPA'
         MVC   LLMLPA,CVTMLPAS
         MVC   LLMLPA+4(5),=CL5'MLPA'
         MVC   LLCSA,GDACSA
         MVC   LLCSA+4(5),=CL5'CSA'
         MVC   LLPVT,GDAVR
         MVC   LLPVT+4(5),=CL5'PVT'
         XC    LLPSA,LLPSA
         MVC   LLPSA+4(5),=CL5'PSA'
         DROP  R4                  VSE dereference
         DROP  R5                  GDA dereference
LLINIT   $EXIT                     Exit
**********************************************************************
         TITLE 'LLLOC - Locate'
**********************************************************************
LLPCLOC  $ENTRY                    Entry
*
**       Determine Locate Operand
*
         $FILL LLLOCATE,C' '       Clear locate operand
         LA    R1,LLLOCATE         Locate address
         LA    R14,ZCMD            Primary command address
LOCCMD1  EQU   *
         CLC   0(2,R14),=C'L '     Locate ?
         BNE   LOCCMD2             . No
         LA    R14,ZCMD+1          Primary command address
         LA    R15,79              Primary command length
         B     LOCCMD4             Continue
LOCCMD2  EQU   *
         CLC   0(4,R14),=C'LOC '   Locate ?
         BNE   LOCCMD3             . No
         LA    R14,ZCMD+3          Primary command address
         LA    R15,77              Primary command length
         B     LOCCMD4             Continue
LOCCMD3  EQU   *
         CLC   0(7,R14),=C'LOCATE ' Locate ?
         BNE   LOCCMDE             . No
         LA    R14,ZCMD+6          Primary command address
         LA    R15,74              Primary command length
         B     LOCCMD4             Continue
LOCCMD4  EQU   *
CMDLOC1  CLC   0(1,R14),=C' '      Blank ?
         BNE   CMDLOC2             . No
         LA    R14,1(R14)          Increment primary command address
         BCT   R15,CMDLOC1         Next
         B     LOCCMDE             Error
CMDLOC2  MVC   0(1,R1),0(R14)      Move it
         CLC   1(1,R14),=C' '      Blank ?
         BE    CMDLOC3             . Yes
         LA    R1,1(R1)            Increment locate address
         LA    R14,1(R14)          Increment command address
         BCT   R15,CMDLOC2         Next
         B     LOCCMDE             Error
LOCCMDE  EQU   *
         MVC   ZEDSMSG,=CL24'Locate Invalid'
         MVC   ZEDLMSG,=CL80'Specified locate primary command invalid sX
               yntax'
         SETMSG MESSAGE=ISRZ001    Set next message
         B     LLPCLOC0
CMDLOC3  MVI   1(R1),C'*'          Generic
*
**       Determine Table
*
         CLC   TABLE,=CL8'LLDA'    LLDA ?
         BE    LOCLLDA             . Yes
         CLC   TABLE,=CL8'LLDM'    LLDM ?
         BE    LOCLLDM             . Yes
         CLC   TABLE,=CL8'LLMOD'   LLMOD ?
         BE    LOCLLMOD            . Yes
         CLC   TABLE,=CL8'LLPCM'   LLPCM ?
         BE    LOCLLPCM            . Yes
         CLC   TABLE,=CL8'LLPR'    LLPR ?
         BE    LOCLLPR             . Yes
         CLC   TABLE,=CL8'LLPRS'   LLPRS ?
         BE    LOCLLPRS            . Yes
         MVC   ZEDSMSG,=CL24'Unknown Table'
         MVC   ZEDLMSG,=CL80'Specified locate primary command issued agX
               ainst an unknown table'
         SETMSG MESSAGE=ISRZ001    Set next message
         B     LLPCLOC0
*
**       LLDA Table
*
LOCLLDA  EQU   *
         TBTOP TABLE=LLDA          Top of table
         TBVCLEAR TABLE=LLDA       Clear table variables
LOCDAL   EQU   *
         CLC   LLSORT,=CL8'LOC'    Name ?
         BNE   LOCDALX             . No
         MVC   LLLOC,LLLOCATE      Locate operand
         TBSARG TABLE=LLDA,        Define search argument              *
               NAMECOND=(LLLOC,EQ)
         B     LOCDASC             Continue
LOCDALX  EQU   *
LOCDAN   EQU   *
         CLC   LLSORT,=CL8'NAME'   Name ?
         BNE   LOCDANX             . No
         MVC   LLDSN,LLLOCATE      Locate operand
         TBSARG TABLE=LLDA,        Define search argument              *
               NAMECOND=(LLDSN,EQ)
         B     LOCDASC             Continue
LOCDANX  EQU   *
LOCDAS   EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BNE   LOCDASX             . No
         MVC   ZDLSIZE,LLLOCATE    Locate operand
         TBSARG TABLE=LLDA,        Define search argument              *
               NAMECOND=(ZDLSIZE,EQ)
         B     LOCDASC             Continue
LOCDASX  EQU   *
LOCDASC  EQU   *
         TBSCAN TABLE=LLDA,        Scan table                          *
               NOREAD=NOREAD
LOCDAX   EQU   *
         B     LLPCLOC0            Exit
*
**       LLDM Table
*
LOCLLDM  EQU   *
         TBTOP TABLE=LLDM          Top of table
         TBVCLEAR TABLE=LLDM       Clear table variables
LOCDML   EQU   *
         CLC   LLSORT,=CL8'LOC'    Name ?
         BNE   LOCDMLX             . No
         MVC   LLLOC,LLLOCATE      Locate operand
         TBSARG TABLE=LLDM,        Define search argument              *
               NAMECOND=(LLLOC,EQ)
         B     LOCDMSC             Continue
LOCDMLX  EQU   *
LOCDMN   EQU   *
         CLC   LLSORT,=CL8'NAME'   Name ?
         BNE   LOCDMNX             . No
         MVC   LLMNAME,LLLOCATE    Locate operand
         TBSARG TABLE=LLDM,        Define search argument              *
               NAMECOND=(LLMNAME,EQ)
         B     LOCDMSC             Continue
LOCDMNX  EQU   *
LOCDMS   EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BNE   LOCDMSX             . No
         MVC   LLSIZE,LLLOCATE     Locate operand
         TBSARG TABLE=LLDM,        Define search argument              *
               NAMECOND=(LLSIZE,EQ)
         B     LOCDMSC             Continue
LOCDMSX  EQU   *
LOCDMSC  EQU   *
         TBSCAN TABLE=LLDM,        Scan table                          *
               NOREAD=NOREAD
LOCDMX   EQU   *
         B     LLPCLOC0            Exit
*
**       LLMOD Table
*
LOCLLMOD EQU   *
         TBTOP TABLE=LLMOD         Top of table
         TBVCLEAR TABLE=LLMOD      Clear table variables
LOCMODL  EQU   *
         CLC   LLSORT,=CL8'LOC'    Name ?
         BNE   LOCMODLX            . No
         MVC   LLLOC,LLLOCATE      Locate operand
         TBSARG TABLE=LLMOD,       Define search argument              *
               NAMECOND=(LLLOC,EQ)
         B     LOCMODSC            Continue
LOCMODLX EQU   *
LOCMODN  EQU   *
         CLC   LLSORT,=CL8'NAME'   Name ?
         BNE   LOCMODNX            . No
         MVC   LLMNAME,LLLOCATE    Locate operand
         TBSARG TABLE=LLMOD,       Define search argument              *
               NAMECOND=(LLMNAME,EQ)
         B     LOCMODSC            Continue
LOCMODNX EQU   *
LOCMODS  EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BNE   LOCMODSX            . No
         MVC   LLSIZE,LLLOCATE     Locate operand
         TBSARG TABLE=LLMOD,       Define search argument              *
               NAMECOND=(LLSIZE,EQ)
         B     LOCMODSC            Continue
LOCMODSX EQU   *
LOCMODSC EQU   *
         TBSCAN TABLE=LLMOD,       Scan table                          *
               NOREAD=NOREAD
LOCMODX  EQU   *
         B     LLPCLOC0            Exit
*
**       LLPCM Table
*
LOCLLPCM EQU   *
         TBTOP TABLE=LLPCM         Top of table
         TBVCLEAR TABLE=LLPCM      Clear table variables
LOCPCML  EQU   *
         CLC   LLSORT,=CL8'LOC'    Name ?
         BNE   LOCPCMLX            . No
         MVC   LLLOC,LLLOCATE      Locate operand
         TBSARG TABLE=LLPCM,       Define search argument              *
               NAMECOND=(LLLOC,EQ)
         B     LOCPCMSC            Continue
LOCPCMLX EQU   *
LOCPCMN  EQU   *
         CLC   LLSORT,=CL8'NAME'   Name ?
         BNE   LOCPCMNX            . No
         MVC   LLMNAME,LLLOCATE    Locate operand
         TBSARG TABLE=LLPCM,       Define search argument              *
               NAMECOND=(LLMNAME,EQ)
         B     LOCPCMSC            Continue
LOCPCMNX EQU   *
LOCPCMS  EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BNE   LOCPCMSX            . No
         MVC   LLSIZE,LLLOCATE     Locate operand
         TBSARG TABLE=LLPCM,       Define search argument              *
               NAMECOND=(LLSIZE,EQ)
         B     LOCPCMSC            Continue
LOCPCMSX EQU   *
LOCPCMSC EQU   *
         TBSCAN TABLE=LLPCM,       Scan table                          *
               NOREAD=NOREAD
LOCPCMX  EQU   *
         B     LLPCLOC0            Exit
*
**       LLPR Table
*
LOCLLPR  EQU   *
         TBTOP TABLE=LLPR          Top of table
         TBVCLEAR TABLE=LLPR       Clear table variables
LOCPRL   EQU   *
         CLC   LLSORT,=CL8'LOC'    Name ?
         BNE   LOCPRLX             . No
         MVC   LLLOC,LLLOCATE      Locate operand
         TBSARG TABLE=LLPR,        Define search argument              *
               NAMECOND=(LLLOC,EQ)
         B     LOCPRSC             Continue
LOCPRLX  EQU   *
LOCPRN   EQU   *
         CLC   LLSORT,=CL8'NAME'   Name ?
         BNE   LOCPRNX             . No
         MVC   LLPROD,LLLOCATE     Locate operand
         TBSARG TABLE=LLPR,        Define search argument              *
               NAMECOND=(LLPROD,EQ)
         B     LOCPRSC             Continue
LOCPRNX  EQU   *
LOCPRS   EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BNE   LOCPRS9             . No
         MVC   LLSIZE,LLLOCATE     Locate operand
         TBSARG TABLE=LLPR,        Define search argument              *
               NAMECOND=(LLSIZE,EQ)
         B     LOCPRSC             Continue
LOCPRS9  EQU   *
LOCPRSC  EQU   *
         TBSCAN TABLE=LLPR,        Scan table                          *
               NOREAD=NOREAD
LOCPRX   EQU   *
         B     LLPCLOC0            Exit
*
**       LLPRS Table
*
LOCLLPRS EQU   *
         TBTOP TABLE=LLPRS         Top of table
         TBVCLEAR TABLE=LLPRS      Clear table variables
LOCPRSL  EQU   *
         CLC   LLSORT,=CL8'LOC'    Name ?
         BNE   LOCPRSLX            . No
         MVC   LLLOC,LLLOCATE      Locate operand
         TBSARG TABLE=LLPRS,       Define search argument              *
               NAMECOND=(LLLOC,EQ)
         B     LOCPRSSC            Continue
LOCPRSLX EQU   *
LOCPRSN  EQU   *
         CLC   LLSORT,=CL8'NAME'   Name ?
         BNE   LOCPRSNX            . No
         MVC   LLMNAME,LLLOCATE    Locate operand
         TBSARG TABLE=LLPRS,       Define search argument              *
               NAMECOND=(LLMNAME,EQ)
         B     LOCPRSSC            Continue
LOCPRSNX EQU   *
LOCPRSS  EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BNE   LOCPRSSX            . No
         MVC   LLSIZE,LLLOCATE     Locate operand
         TBSARG TABLE=LLPRS,       Define search argument              *
               NAMECOND=(LLSIZE,EQ)
         B     LOCPRSSC            Continue
LOCPRSSX EQU   *
LOCPRSSC EQU   *
         TBSCAN TABLE=LLPRS,       Scan table                          *
               NOREAD=NOREAD
LOCPRSX  EQU   *
         B     LLPCLOC0            Exit
LLPCLOC  $EXIT                     Exit
**********************************************************************
         TITLE 'LLMIPR - Module Information Processing Routine (MIPR)'
**********************************************************************
LLMIPR   $ENTRY                    Entry
*
**       Build DSN
*
         LR    R4,R1               MODI_HEADER address
         USING MODI_HEADER,R4      MODI_HEADER reference
         LA    R15,MODI_USERDATA   Get address of My user data
         LM    R9,R10,0(R15)       Re-establish data register
         TBVCLEAR TABLE=LLMOD      Clear table variables
         L     R5,MODI_1_PTR       MODI_1 address
         USING MODI_1,R5           MODI_1 reference
         MVC   LLMNAME,MODI_8_BYTE_NAME
         MVC   LLEPA,MODI_ENT@     Entry point
         NI    LLEPA,X'7F'         Turn off high order bit of EPA
         $HEX  LLEPAC,LLEPA,LEN=8  Entry point address
*
**       Addressing Mode
*
MIPRAM   EQU   *
         MVC   LLAM,=CL2'24'       A24
         TM    MODI_ENT@,MODI_AMODE A31 ?
         BNO   MIPRAMX             . No
         MVC   LLAM,=CL2'31'       A31
MIPRAMX  EQU   *
*
**       Reenterant
*
MIPRRN   EQU   *
         MVC   LLATTR+3(2),=CL2'  ' Non reenterant
         TM    MODI_ATTR2,MODI_REENT Reenterant ?
         BNO   MIPRRNX             . No
         MVC   LLATTR+3(2),=CL2'RN' Reenterant
MIPRRNX  EQU   *
*
**       Reusable
*
MIPRRU   EQU   *
         MVC   LLATTR+6(2),=CL2'  ' Non reusable
         TM    MODI_ATTR2,MODI_SER_REUS Reusable ?
         BNO   MIPRRUX             . No
         MVC   LLATTR+6(2),=CL2'RU' Reusable
MIPRRUX  EQU   *
         $FILL LLAL,C' '           Non authorized library
         TM    MODI_ATTR3,MODI_AUTH_LIB Authorized library ?
         BNO   MIPRALX             . No
         MVC   LLAL,=CL2'Y'        Authorized library
         B     MIPRALX             Continue
MIPRALX  EQU   *
*
**       Authorization Code
*
MIPRAC   EQU   *
         MVC   LLAC,=CL2'00'       Authorization code 00
         TM    MODI_ATTR3,MODI_AUTH_MOD Authorized program ?
         BNO   MIPRACX             . No
         MVC   LLAC,=CL2'01'       Authorization code 01
         B     MIPRACX             Continue
MIPRACX  EQU   *
         L     R15,MODI_2_PTR      MODI_2 address
         USING MODI_2,R15          MODI_2 reference
         MVC   LLSIZE,MODI_MOD_LEN Size
         MVC   LLLEN,LLSIZE        Length
         DROP  R15                 MODI_2 dereference
*
**       Alias
*
         TM    MODI_ATTR2,MODI_MINOR Alias ?
         BNO   MIPRALI             . No
         L     R15,MODI_5_PTR      MODI_5 address
         USING MODI_5,R15          MODI_5 reference
         MVC   LLALIAS,MODI_8_BYTE_MAJOR_NAME Major name
         MVC   LLSIZE,=F'0'        Size
         DROP  R15                 MODI_5 dereference
         B     MIPRALIX
MIPRALI  EQU   *
         B     MIPRALIX
MIPRALIX EQU   *
*
**       Residence Mode
*
         CLC   LLEPA,=XL4'00FFFFFF' Residence mode ?
         BNH   MIPRRM24
         MVC   LLRM,=CL3'ANY'      Residence mode ANY
         B     MIPRRMX             Continue
MIPRRM24 EQU   *
         MVC   LLRM,=CL3' 24'      Residence mode 24
         B     MIPRRMX             Continue
MIPRRMX  EQU   *
*
**       Location
*
         LA    R6,VSNUM            Virtual storage table size
         LA    R7,VSTBL            Virtual storage table address
MIPVSCHK EQU   *
         CLC   0(4,R7),=F'0'       Zeroes ?
         BE    MIPVSINC            . Yes
         CLC   LLEPA,0(R7)         Found ?
         BNL   MIPVSMTC            . Yes
MIPVSINC EQU   *
         LA    R7,VSLEN(R7)        Next virtual storage table entry
         BCT   R6,MIPVSCHK         Process next virtual stor, if any
MIPVSMTC EQU   *
         $FILL LLLOC,C' '          Clear dataset type
         MVC   LLLOC(4),=CL4'LPA:' LPA
         MVC   LLLOC+4(5),4(R7)    Virtual storage location
         $FILL LLDSN,C' '          Clear dataset name
         CALL  LLSTATT             Statistics
         CALL  LLGPROD             Get product
         TBADD TABLE=LLMOD         Add a Row to a Table
         DROP  R4                  MODI_HEADER dereference
         DROP  R5                  MODI_1 dereference
LLMIPR   $EXIT                     Exit
**********************************************************************
         TITLE 'LLMO - Modules'
**********************************************************************
LLMO     $ENTRY                    Entry
*
**       Get Modules
*
         CALL  LLGMODS             Get modules
*
**       Display Module Table
*
         TBTOP TABLE=LLMOD         Set the Row Pointer to the Top
         TBDISPL TABLE=LLMOD,      Display Table Information           X
               PANEL=LLMO,                                             X
               PCLOC=LLPCLOC,                                          X
               LC=(LLMOLC,S,LLMOS)
*
**       Termination
*
         TBEND TABLE=LLMOD         Close a Table without Saving
LLMO     $EXIT                     Exit
**********************************************************************
         TITLE 'LLMOS - Module Select'
**********************************************************************
LLMOS    $ENTRY                    Entry
*
**       Build DSN
*
         CLI   LLDSN,C' '          Dataset name ?
         BNE   LLMOSDSN            . Yes
         CALL  LLVIEW              . No
         B     LLMOS0              Exit
LLMOSDSN EQU   *
*
**       Build DSN
*
         $FILL TEMPDSN,C' '        Clear dataset name
         MVI   TEMPDSN+00,X'7D'    Open Quote
         $FIND LLDSN,C' '          Find first blank
         $VLM  TEMPDSN+01,LLDSN,(R15),DECREMENT=NO Move DSN
         $FIND TEMPDSN,C' '        Find first blank
         MVI   0(R14),C'('         Move opening paran
         $FIND TEMPDSN,C' '        Find first blank
         MVC   0(8,R14),LLMNAME    Move member name
         $FIND TEMPDSN,C' '        Find first blank
         MVI   0(R14),C')'         Move closing paran
         $FIND TEMPDSN,C' '        Find first blank
         MVI   0(R14),X'7D'        Close Quote
         BROWSE DATASET=TEMPDSN    Browse
LLMOS    $EXIT                     Exit
**********************************************************************
         TITLE 'LLPCM - Post CLPA Modules'
**********************************************************************
LLPCM    $ENTRY                    Entry
*
**       Initialization
*
         TBCREATE TABLE=LLPCM,     Create a New Table                  X
               NAMES=(LLMNAME,LLEPA,LLAM,LLAL,LLAC,LLATTR,LLRM,LLALIAS,X
               LLSIZE,LLLEN,LLLOC,LLPROD,LLDSN,LLEPAC)
*
**       Get Modules
*
         MVC   LLMODE,=CL6'LPA'    LPA mode
         CALL  LLGMODS             Get modules
*
**       Top of Table
*
PCMTOP   EQU   *
         TBTOP TABLE=LLMOD         Set the Row Pointer to the Top
*
**       Next Table Entry
*
PCMNEXT  EQU   *
         TBSKIP TABLE=LLMOD,END=PCMEND Move the Row Pointer
         CLC   LLLOC,=CL10'LPA:EFLPA' EFLPA ?
         BE    PCMNEXT             . Yes, skip
         CLC   LLLOC,=CL10'LPA:EMLPA' EMLPA ?
         BE    PCMNEXT             . Yes, skip
         CLC   LLLOC,=CL10'LPA:EPLPA' EPLPA ?
         BE    PCMNEXT             . Yes, skip
         CLC   LLLOC,=CL10'LPA:FLPA' FLPA ?
         BE    PCMNEXT             . Yes, skip
         CLC   LLLOC,=CL10'LPA:MLPA' MLPA ?
         BE    PCMNEXT             . Yes, skip
         CLC   LLLOC,=CL10'LPA:PLPA' PLPA ?
         BE    PCMNEXT             . Yes, skip
*
**       Identify Post CLPA Modules
*
         TBADD TABLE=LLPCM         Add a Row to a Table
         B     PCMNEXT             Next table entry
*
**       End of Table
*
PCMEND   EQU   *
*
**       Display Post CLPA Modules
*
         TBEND TABLE=LLMOD         Close a Table without Saving
         TBTOP TABLE=LLPCM         Set the Row Pointer to the Top
         TBDISPL TABLE=LLPCM,      Display Table Information           X
               PANEL=LLPCM,                                            X
               PCLOC=LLPCLOC,                                          X
               LC=(LLPCMLC,S,LLMOS)
*
**       Termination
*
         TBEND TABLE=LLPCM         Close a Table without Saving
LLPCM    $EXIT                     Exit
**********************************************************************
         TITLE 'LLPR - Products'
**********************************************************************
LLPR     $ENTRY                    Entry
*
**       Initialization
*
         TBCREATE TABLE=LLPR,      Create a New Table                  X
               NAMES=(LLPROD,P1ALC,P1ANC,P1ANS,P1MOC,P1MOS,P124C,P124S,X
               P2ALC,P2ANC,P2ANS,P2MOC,P2MOS,P224C,P224S,P3ALC,P3ANC,P3X
               ANS,P3MOC,P3MOS,P324C,P324S,P4ALC,P4ANC,P4ANS,P4MOC,P4MOX
               S,P424C,P424S)
*
**       Get Modules
*
         CALL  LLGMODS             Get modules
*
**       Top of Table
*
PRTOPTBL EQU   *
         TBTOP TABLE=LLMOD         Set the Row Pointer to the Top
*
**       Next Table Entry
*
PRNXTTBL EQU   *
         TBVCLEAR TABLE=LLPR       Clear table variables
         TBSKIP TABLE=LLMOD,END=PRENDTBL Move the Row Pointer
         TBTOP TABLE=LLPR          Set the Row Pointer to the Top
         TBSARG TABLE=LLPR,        Define a Search Argument            X
               NAMECOND=(LLPROD,EQ)
         TBSCAN TABLE=LLPR         Search a Table
         LTR   R15,R15             Scan OK ?
         BZ    PRFOUN              . Yes
*
**       Clear Product Statistics
*
         XC    P1ALC,P1ALC         Clear LPA product alias count
         XC    P1ANC,P1ANC         Clear LPA product RANY count
         XC    P1ANS,P1ANS         Clear LPA product RANY size
         XC    P1MOC,P1MOC         Clear LPA product module count
         XC    P1MOS,P1MOS         Clear LPA product module size
         XC    P124C,P124C         Clear LPA product R24 count
         XC    P124S,P124S         Clear LPA product R24 size
         XC    P2ALC,P2ALC         Clear LPALST product alias count
         XC    P2ANC,P2ANC         Clear LPALST product RANY count
         XC    P2ANS,P2ANS         Clear LPALST product RANY size
         XC    P2MOC,P2MOC         Clear LPALST product module count
         XC    P2MOS,P2MOS         Clear LPALST product module size
         XC    P224C,P224C         Clear LPALST product R24 count
         XC    P224S,P224S         Clear LPALST product R24 size
         XC    P3ALC,P3ALC         Clear LNKLST product alias count
         XC    P3ANC,P3ANC         Clear LNKLST product RANY count
         XC    P3ANS,P3ANS         Clear LNKLST product RANY size
         XC    P3MOC,P3MOC         Clear LNKLST product module count
         XC    P3MOS,P3MOS         Clear LNKLST product module size
         XC    P324C,P324C         Clear LNKLST product R24 count
         XC    P324S,P324S         Clear LNKLST product R24 size
         XC    P4ALC,P4ALC         Total product alias count
         XC    P4ANC,P4ANC         Total product RANY count
         XC    P4ANS,P4ANS         Total product RANY size
         XC    P4MOC,P4MOC         Total product module count
         XC    P4MOS,P4MOS         Total product module size
         XC    P424C,P424C         Total product R24 count
         XC    P424S,P424S         Total product R24 size
         CALL  LLSTATP             Product statistics
         TBADD TABLE=LLPR          Add a Row to a Table
         B     PRNXTTBL            Next table entry
PRFOUN   EQU   *
         CALL  LLSTATP             Product statistics
         TBPUT TABLE=LLPR          Update a Row in a Table
         B     PRNXTTBL            Next table entry
*
**       End of Table
*
PRENDTBL EQU   *
*
**       Sort Product Table
*
PRSORT   EQU   *
         CLC   LLSORT,=CL8'SIZE'   Size ?
         BE    PRSIZE              . Yes
         CLC   LLSORT,=CL8'NAME'   Name ?
         BE    PRNAME              . Yes
PRNAME   EQU   *
         TBSORT TABLE=LLPR,        Sort a Table                        X
               FIELDS=(LLPROD,C,A)
         B     PRSORTX             Continue
PRSIZE   EQU   *
         TBSORT TABLE=LLPR,        Sort a Table                        X
               FIELDS=(P124S,N,D)
         B     PRSORTX             Continue
PRSORTX  EQU   *
*
**       Display Module Table
*
         TBTOP TABLE=LLPR          Set the Row Pointer to the Top
         TBDISPL TABLE=LLPR,       Display Table Information           X
               PANEL=LLPR,                                             X
               PCLOC=LLPCLOC,                                          X
               LC=(LLPRLC,S,LLPRS)
*
**       Termination
*
         TBEND TABLE=LLMOD         Close a Table without Saving
         TBEND TABLE=LLPR          Close a Table without Saving
LLPR     $EXIT                     Exit
**********************************************************************
         TITLE 'LLPROC - Process'
**********************************************************************
LLPROC   $ENTRY                    Entry
         MVC   LLFUNC,=CL1'2'      Default Function
         MVC   LLMODE,=CL6'LPA'    Default Mode
         MVC   LLSORT,=CL8'NAME'   Default Sort
*
**       Display Primary Menu
*
LL@PRIM  DISPLAY PANEL=LL@PRIM,     Display Panels and Messages        X
               END=LLPROC0,                                            X
               PC=(LLFUNC,1,LLDA,2,LLMO,3,LLPR,4,LLDM,5,LLPCM)
LLPROC   $EXIT                     Exit
**********************************************************************
         TITLE 'LLPRS - Product Select'
**********************************************************************
LLPRS    $ENTRY                    Entry
*
**       Build Module Table
*
         MVC   LLPNAME,LLPROD      Save product
         TBCREATE TABLE=LLPRS,     Create a New Table                  X
               NAMES=(LLMNAME,LLEPA,LLAM,LLAL,LLAC,LLATTR,LLRM,LLALIAS,X
               LLSIZE,LLLEN,LLLOC,LLPROD,LLDSN,LLEPAC)
         TBTOP TABLE=LLMOD         Set the Row Pointer to the Top
*
**       Next Table Entry
*
PRSNEXT  EQU   *
         TBSKIP TABLE=LLMOD,END=PRSEND Move the Row Pointer
         CLC   LLPNAME,LLPROD      Match ?
         BE    PRSMATCH            . Yes
         B     PRSNEXT             Next table entry
*
**       Identify Duplicates
*
PRSMATCH EQU   *
         TBADD TABLE=LLPRS         Add a Row to a Table
         B     PRSNEXT             Next table entry
PRSEND   EQU   *
         TBTOP TABLE=LLPRS         Set the Row Pointer to the Top
         TBDISPL TABLE=LLPRS,      Display Table Information           X
               PANEL=LLPRS,                                            X
               PCLOC=LLPCLOC,                                          X
               LC=(LLPRSLC,S,LLMOS)
         TBEND TABLE=LLPRS         Close a Table without Saving
LLPRS    $EXIT                     Exit
**********************************************************************
         TITLE 'LLSTATD - Statistics Definition'
**********************************************************************
LLSTATD  $ENTRY                    Entry
         VDEFINE NAMES=(P1ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P1ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P1ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P1MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P1MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P124C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P124S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P2ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P2ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P2ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P2MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P2MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P224C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P224S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P3ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P3ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P3ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P3MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P3MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P324C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P324S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P4ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P4ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P4ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P4MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P4MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P424C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(P424S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T1ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T1ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T1ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T1MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T1MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T124C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T124S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T2ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T2ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T2ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T2MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T2MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T224C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T224S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T3ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T3ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T3ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T3MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T3MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T324C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T324S),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T4ALC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T4ANC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T4ANS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T4MOC),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T4MOS),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T424C),FORMAT=FIXED,LENGTH=4
         VDEFINE NAMES=(T424S),FORMAT=FIXED,LENGTH=4
LLSTATD  $EXIT                     Exit
**********************************************************************
         TITLE 'LLSTATP - Product Statistics'
**********************************************************************
LLSTATP  $ENTRY                    Entry
*
**       Determine Location
*
         CLC   LLLOC(4),=CL4'LPA:' LPA ?
         BE    STATP1              . Yes
         CLC   LLLOC(4),=CL4'LPAL' LPALST ?
         BE    STATP2              . Yes
         CLC   LLLOC(4),=CL4'LNKL' LNKLST ?
         BE    STATP3              . Yes
         B     LLSTATP0            Exit
*
**       LPA Statistics
*
STATP1   EQU   *
         $INCR P1MOC               LPA product module count
         $ADD  P1MOS,LLSIZE        LPA product module size
         $INCR P4MOC               Total product module count
         $ADD  P4MOS,LLSIZE        Total product module size
         CLC   LLRM,=CL3' 24'      RMODE=24 ?
         BNE   STATP1RA            . No
         $INCR P124C               LPA product R24 count
         $ADD  P124S,LLSIZE        LPA product R24 size
         $INCR P424C               Total product R24 count
         $ADD  P424S,LLSIZE        Total product R24 size
         B     STATP1RX
STATP1RA EQU   *                   RMODE=ANY
         $INCR P1ANC               LPA product RANY count
         $ADD  P1ANS,LLSIZE        LPA product RANY size
         $INCR P4ANC               Total product RANY count
         $ADD  P4ANS,LLSIZE        Total product RANY size
         B     STATP1RX
STATP1RX EQU   *
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    STATP1NA            . No
         $INCR P1ALC               LPA product alias count
         $INCR P4ALC               Total product alias count
STATP1NA EQU   *
         B     LLSTATP0            Exit
*
**       LPALST Statistics
*
STATP2   EQU   *
         $INCR P2MOC               LPALST product module count
         $ADD  P2MOS,LLSIZE        LPALST product module size
         $INCR P4MOC               Total product module count
         $ADD  P4MOS,LLSIZE        Total product module size
         CLC   LLRM,=CL3' 24'      RMODE=24 ?
         BNE   STATP2RA            . No
         $INCR P224C               LPALST product R24 count
         $ADD  P224S,LLSIZE        LPALST product R24 size
         $INCR P424C               Total product R24 count
         $ADD  P424S,LLSIZE        Total product R24 size
         B     STATP2RX
STATP2RA EQU   *                   RMODE=ANY
         $INCR P2ANC               LPALST product RANY count
         $ADD  P2ANS,LLSIZE        LPALST product RANY size
         $INCR P4ANC               Total product RANY count
         $ADD  P4ANS,LLSIZE        Total product RANY size
         B     STATP2RX
STATP2RX EQU   *
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    STATP2NA            . No
         $INCR P2ALC               LPALST product alias count
         $INCR P4ALC               Total product alias count
STATP2NA EQU   *
         B     LLSTATP0            Exit
*
**       LNKLST Statistics
*
STATP3   EQU   *
         $INCR P3MOC               LNKLST product module count
         $ADD  P3MOS,LLSIZE        LNKLST product module size
         $INCR P4MOC               Total product module count
         $ADD  P4MOS,LLSIZE        Total product module size
         CLC   LLRM,=CL3' 24'      RMODE=24 ?
         BNE   STATP3RA            . No
         $INCR P324C               LNKLST product R24 count
         $ADD  P324S,LLSIZE        LNKLST product R24 size
         $INCR P424C               Total product R24 count
         $ADD  P424S,LLSIZE        Total product R24 size
         B     STATP3RX
STATP3RA EQU   *                   RMODE=ANY
         $INCR P3ANC               LNKLST product RANY count
         $ADD  P3ANS,LLSIZE        LNKLST product RANY size
         $INCR P4ANC               Total product RANY count
         $ADD  P4ANS,LLSIZE        Total product RANY size
         B     STATP3RX
STATP3RX EQU   *
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    STATP3NA            . No
         $INCR P3ALC               LNKLST product alias count
         $INCR P4ALC               Total product alias count
STATP3NA EQU   *
         B     LLSTATP0            Exit
LLSTATP  $EXIT                     Exit
**********************************************************************
         TITLE 'LLSTATT - Statistics Total'
**********************************************************************
LLSTATT  $ENTRY                    Entry
*
**       Determine Location
*
         CLC   LLLOC(4),=CL4'LPA:' LPA ?
         BE    STATT1              . Yes
         CLC   LLLOC(4),=CL4'LPAL' LPALST ?
         BE    STATT2              . Yes
         CLC   LLLOC(4),=CL4'LNKL' LNKLST ?
         BE    STATT3              . Yes
         B     LLSTATT0            Exit
*
**       LPA Statistics
*
STATT1   EQU   *
         $INCR T1MOC               LPA total module count
         $ADD  T1MOS,LLSIZE        LPA total module size
         $INCR T4MOC               Total total module count
         $ADD  T4MOS,LLSIZE        Total total module size
         CLC   LLRM,=CL3' 24'      RMODE=24 ?
         BNE   STATT1RA            . No
         $INCR T124C               LPA total R24 count
         $ADD  T124S,LLSIZE        LPA total R24 size
         $INCR T424C               Total total R24 count
         $ADD  T424S,LLSIZE        Total total R24 size
         B     STATT1RX
STATT1RA EQU   *                   RMODE=ANY
         $INCR T1ANC               LPA total RANY count
         $ADD  T1ANS,LLSIZE        LPA total RANY size
         $INCR T4ANC               Total total RANY count
         $ADD  T4ANS,LLSIZE        Total total RANY size
         B     STATT1RX
STATT1RX EQU   *
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    STATT1NA            . No
         $INCR T1ALC               LPA total alias count
         $INCR T4ALC               Total total alias count
STATT1NA EQU   *
         B     LLSTATT0            Exit
*
**       LPALST Statistics
*
STATT2   EQU   *
         $INCR T2MOC               LPALST total module count
         $ADD  T2MOS,LLSIZE        LPALST total module size
         $INCR T4MOC               Total total module count
         $ADD  T4MOS,LLSIZE        Total total module size
         CLC   LLRM,=CL3' 24'      RMODE=24 ?
         BNE   STATT2RA            . No
         $INCR T224C               LPALST total R24 count
         $ADD  T224S,LLSIZE        LPALST total R24 size
         $INCR T424C               Total total R24 count
         $ADD  T424S,LLSIZE        Total total R24 size
         B     STATT2RX
STATT2RA EQU   *                   RMODE=ANY
         $INCR T2ANC               LPALST total RANY count
         $ADD  T2ANS,LLSIZE        LPALST total RANY size
         $INCR T4ANC               Total total RANY count
         $ADD  T4ANS,LLSIZE        Total total RANY size
         B     STATT2RX
STATT2RX EQU   *
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    STATT2NA            . No
         $INCR T2ALC               LPALST total alias count
         $INCR T4ALC               Total total alias count
STATT2NA EQU   *
         B     LLSTATT0            Exit
*
**       LNKLST Statistics
*
STATT3   EQU   *
         $INCR T3MOC               LNKLST total module count
         $ADD  T3MOS,LLSIZE        LNKLST total module size
         $INCR T4MOC               Total total module count
         $ADD  T4MOS,LLSIZE        Total total module size
         CLC   LLRM,=CL3' 24'      RMODE=24 ?
         BNE   STATT3RA            . No
         $INCR T324C               LNKLST total R24 count
         $ADD  T324S,LLSIZE        LNKLST total R24 size
         $INCR T424C               Total total R24 count
         $ADD  T424S,LLSIZE        Total total R24 size
         B     STATT3RX
STATT3RA EQU   *                   RMODE=ANY
         $INCR T3ANC               LNKLST total RANY count
         $ADD  T3ANS,LLSIZE        LNKLST total RANY size
         $INCR T4ANC               Total total RANY count
         $ADD  T4ANS,LLSIZE        Total total RANY size
         B     STATT3RX
STATT3RX EQU   *
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    STATT3NA            . No
         $INCR T3ALC               LNKLST total alias count
         $INCR T4ALC               Total total alias count
STATT3NA EQU   *
         B     LLSTATT0            Exit
LLSTATT  $EXIT                     Exit
**********************************************************************
         TITLE 'LLTERM - Termination'
**********************************************************************
LLTERM   $ENTRY                    Entry
*
**       Terminate ISPF environment
*
         ISPFTERM                  Terminate ISPF environment
*
**       Free Product Table
*
         STORAGE RELEASE,ADDR=LLPTA,LENGTH=TBLPRODL
LLTERM   $EXIT                     Exit
**********************************************************************
         TITLE 'LLVIEW - View'
**********************************************************************
LLVIEW   $ENTRY                    Entry
*
**       Build BRIF DSN
*
         $FILL LLBDSN,X'00'        Clear dataset name
         $FIND LLLOC,C' '          Find first blank
         $VLM  LLBDSN+00,LLLOC,(R15),DECREMENT=NO Module location
         $FIND LLMNAME,C' '        Find first blank
         $VLM  LLBDSN+11,LLMNAME,(R15),DECREMENT=NO Module name
         CLC   LLALIAS,=CL8' '     Alias ?
         BE    VIEWNOAL            . No - continue
         MVC   LLBDSN+20(06),=C'(Alias'
         MVC   LLBDSN+27(02),=C'of'
         $FIND LLALIAS,C' '        Find first blank
         $VLM  LLBDSN+30,LLALIAS,(R15),DECREMENT=NO Major module name
         MVC   LLBDSN+38(01),=C')'
*
**       Determine Number of Records
*
VIEWNOAL EQU   *
         XR    R0,R0               Clear LPALNK module length
         L     R1,LLLEN            Module length
         LTR   R1,R1               Module length zero ?
         BNZ   VIEWLNOK            . No
         L     R1,=F'51200'        . Yes (50k default for browse)
VIEWLNOK EQU   *
         D     R0,=F'80'           Determine number of records
         ST    R0,BRIFREM          LPALNK records remainder
         LTR   R0,R0               Remainder ?
         BZ    VIEWNREM            . No - continue
         LA    R1,1(,R1)           . Yes - round up number of records
VIEWNREM EQU   *
*
**       Invoke Browse Interface
*
         ST    R1,BRIFCNT          LPALNK maximum number of records
         ST    R10,LLBDWA          LPALNK dynamic workarea address
         MVC   BRIFADR,LLEPA       LPALNK entry point
         BRIF  DATA=LLBDSN,        Browse Interface                    X
               RECFM=F,                                                X
               LRECL=80,                                               X
               READ=LLBRIF,                                            X
               DIALOG=LLBDWA
LLVIEW   $EXIT                     Exit
**********************************************************************
         TITLE 'LLDWA - Dynamic Workarea'
**********************************************************************
LLDWA    DSECT                     Dynamic Workarea
         DS    0F                  Fullword alignment
         CSVINFO MF=(L,CSVINFO)    CSVINFO parameter list
BRIFADR  DS    F                   LPALNK BRIF address
BRIFCNT  DS    F                   LPALNK BRIF count
BRIFREM  DS    F                   LPALNK BRIF remainder
DOUBLE   DS    D                   Double work area
LLAC     DS    CL002               Authorization code
LLAL     DS    CL002               Authorized library
LLALIAS  DS    CL008               LPALNK module major name of alias
LLAM     DS    CL002               Addressing mode
LLATTR   DS    CL015               Attributes
LLATTR3  DS    CL001               ISPF Attribute
LLBDSN   DS    CL044               LPALNK BRIF dataset name
LLBDWA   DS    F                   LPALNK BRIF dynamic workarea address
LLDACNT  DS    F                   Dataset count
LLDACRP  DS    CL008               ISPF Current Row Pointer
LLDALC   DS    CL001               ISPF Line Command
LLDASEL  DS    CL004               ISPF Selections
LLDA1    DS    CL080               LPALNK message 1
LLDA2    DS    CL080               LPALNK message 2
LLDIRBLK DS    0F,CL256            User area
LLDMCRP  DS    CL008               ISPF Current Row Pointer
LLDMLC   DS    CL001               ISPF Line Command
LLDMSEL  DS    CL004               ISPF Selections
LLDSN    DS    CL044               Dataset Name
LLDSNUM  DS    F                   Dataset number
LLEPA    DS    CL004               Entry point address
LLEPAC   DS    CL008               Entry point address character
LLEXCL1  DS    CL044               Exclude
LLEXCL2  DS    CL044               Exclude
LLEXCL3  DS    CL044               Exclude
LLEXCL4  DS    CL044               Exclude
LLFUNC   DS    CL001               Function
LLLEN    DS    F                   LPALNK module length
LLLOC    DS    CL010               Dataset Number
LLLOCATE DS    CL080               Locate operand
LLMATCH  DS    CL008               LPALNK module match
LLMEM    DS    F                   LPALNK Library List Member count
LLMEMO   DS    CL008               LPALNK module old name
LLMIPRUD DS    CL16                User area
LLMNAME  DS    CL008               LPALNK module name
LLMODCRP DS    CL008               ISPF Current Row Pointer
LLMODE   DS    CL006               Mode (LPA/LNK/LPALNK)
LLMODLN  DS    CL080               LPALNK module line
LLMODSEL DS    CL004               ISPF Selections
LLMOLC   DS    CL001               ISPF Line Command
LLNPLL   DS    F                   LPALNK address
LLPCMCRP DS    CL008               ISPF Current Row Pointer
LLPCMLC  DS    CL001               ISPF Line Command
LLPCMSEL DS    CL004               ISPF Selections
LLPNAME  DS    CL012               Product name
LLPRCRP  DS    CL008               ISPF Current Row Pointer
LLPREF   DS    CL008               LPALNK prefix
LLPRLC   DS    CL001               ISPF Line Command
LLPROD   DS    CL012               LPALNK product
LLPRSCRP DS    CL008               ISPF Current Row Pointer
LLPRSEL  DS    CL004               ISPF Selections
LLPRSLC  DS    CL001               ISPF Line Command
LLPRSSEL DS    CL004               ISPF Selections
LLRM     DS    CL003               Residence mode (24/ANY)
LLSAVET  DS    CL140               LPALNK total save
LLSIZE   DS    F                   LPALNK module size
LLSORT   DS    CL008               Sort field name
LSTDSN   DS    CL044               Dataset Name
LSTLOC   DS    CL010               Dataset Location
P1ALC    DS    F                   LPA product alias count
P1ANC    DS    F                   LPA product RMODE=ANY count
P1ANS    DS    F                   LPA product RMODE=ANY size
P1MOC    DS    F                   LPA product module count
P1MOS    DS    F                   LPA product module size
P124C    DS    F                   LPA product RMODE=24 count
P124S    DS    F                   LPA product RMODE=24 size
P2ALC    DS    F                   LPALST product alias count
P2ANC    DS    F                   LPALST product RMODE=ANY count
P2ANS    DS    F                   LPALST product RMODE=ANY size
P2MOC    DS    F                   LPALST product module count
P2MOS    DS    F                   LPALST product module size
P224C    DS    F                   LPALST product RMODE=24 count
P224S    DS    F                   LPALST product RMODE=24 size
P3ALC    DS    F                   LNKLST product alias count
P3ANC    DS    F                   LNKLST product RMODE=ANY count
P3ANS    DS    F                   LNKLST product RMODE=ANY size
P3MOC    DS    F                   LNKLST product module count
P3MOS    DS    F                   LNKLST product module size
P324C    DS    F                   LNKLST product RMODE=24 count
P324S    DS    F                   LNKLST product RMODE=24 size
P4ALC    DS    F                   Total product alias count
P4ANC    DS    F                   Total product RMODE=ANY count
P4ANS    DS    F                   Total product RMODE=ANY size
P4MOC    DS    F                   Total product module count
P4MOS    DS    F                   Total product module size
P424C    DS    F                   Total product RMODE=24 count
P424S    DS    F                   Total product RMODE=24 size
TEMPDSN  DS    CL056               ISPF Dataset name
T1ALC    DS    F                   LPA total alias count
T1ANC    DS    F                   LPA total RMODE=ANY count
T1ANS    DS    F                   LPA total RMODE=ANY size
T1MOC    DS    F                   LPA total module count
T1MOS    DS    F                   LPA total module size
T124C    DS    F                   LPA total RMODE=24 count
T124S    DS    F                   LPA total RMODE=24 size
T2ALC    DS    F                   LPALST total alias count
T2ANC    DS    F                   LPALST total RMODE=ANY count
T2ANS    DS    F                   LPALST total RMODE=ANY size
T2MOC    DS    F                   LPALST total module count
T2MOS    DS    F                   LPALST total module size
T224C    DS    F                   LPALST total RMODE=24 count
T224S    DS    F                   LPALST total RMODE=24 size
T3ALC    DS    F                   LNKLST total alias count
T3ANC    DS    F                   LNKLST total RMODE=ANY count
T3ANS    DS    F                   LNKLST total RMODE=ANY size
T3MOC    DS    F                   LNKLST total module count
T3MOS    DS    F                   LNKLST total module size
T324C    DS    F                   LNKLST total RMODE=24 count
T324S    DS    F                   LNKLST total RMODE=24 size
T4ALC    DS    F                   Total total alias count
T4ANC    DS    F                   Total total RMODE=ANY count
T4ANS    DS    F                   Total total RMODE=ANY size
T4MOC    DS    F                   Total total module count
T4MOS    DS    F                   Total total module size
T424C    DS    F                   Total total RMODE=24 count
T424S    DS    F                   Total total RMODE=24 size
         CNOP  0,4                 Fullword alignment
VSTBL    EQU   *                   VS table entry length
LLEPVT   DS    F                   EPVT
         DS    CL008
VSLEN    EQU   *-VSTBL             VS table entry length
LLECSA   DS    F                   ECSA
         DS    CL008
LLEMLPA  DS    F                   EMLPA
         DS    CL008
LLEFLPA  DS    F                   EFLPA
         DS    CL008
LLEPLPA  DS    F                   EPLPA
         DS    CL008
LLESQA   DS    F                   ESQA
         DS    CL008
LLENUC   DS    F                   ENUC
         DS    CL008
LLNUC    DS    F                   NUC
         DS    CL008
LLSQA    DS    F                   SQA
         DS    CL008
LLPLPA   DS    F                   PLPA
         DS    CL008
LLFLPA   DS    F                   FLPA
         DS    CL008
LLMLPA   DS    F                   MLPA
         DS    CL008
LLCSA    DS    F                   CSA
         DS    CL008
LLPVT    DS    F                   PVT
         DS    CL008
VSNUM    EQU   (*-VSTBL)/VSLEN     VS table entry count
LLPSA    DS    F                   PSA
         DS    CL008
         DS    0F                  Fullword alignment
XXXLST   EQU   *                   LNKLST DCB
         ORG   *+L_XXXLST          LNKLST DCB length
         DS    0F                  Fullword alignment
W_OPENI  EQU   *                   OPEN parameter list (Input)
         ORG   *+L_OPENI           OPEN parameter list length (Input)
         DS    0F                  Fullword alignment
W_CLOSE  EQU   *                   CLOSE parameter list
         ORG   *+L_CLOSE           CLOSE parameter list length
         ISPFVARS                  Define ISPF variables
LLDWA#   EQU   *-LLDWA             Dynamic workarea length
**********************************************************************
         TITLE 'LLSWA - Static Work Area'
**********************************************************************
LLSWA    $ENTRY BASE=,DWA=,MODID=NO,SAVE=NO,SAVEAREA=NO,SWA=
T_OPENI  OPEN  (,INPUT),MF=L OPEN parameter list (Input)
L_OPENI  EQU   *-T_OPENI           OPEN parameter list length (Input)
T_CLOSE  CLOSE (),MF=L CLOSE parameter list
L_CLOSE  EQU   *-T_CLOSE           CLOSE parameter list length
T_XXXLST DCB   DDNAME=XXXLST,      LNKLST DCB                          X
               BLKSIZE=256,                                            X
               BUFNO=100,                                              X
               DSORG=PS,                                               X
               EODAD=GLENDMEM,                                         X
               LRECL=256,                                              X
               MACRF=GM,                                               X
               RECFM=F
L_XXXLST EQU   *-T_XXXLST          LNKLST DCB Length
LLPTA    DS    F                   Product table address
LLDA1D   DC    CL80'  ** All datasets are blocked efficiently **'
LLDA1W   DC    CL80'  ** To improve performance, all datasets should beX
                blocked at 32760 **'
LLDA2D   DC    CL80'  ** All datasets contain members **'
LLDA2W   DC    CL80'  ** To reduce system complexity, all datasets shouX
               ld contain members **'
LLALLOC  DC    CL133' '            Allocate command
         ORG   LLALLOC
         DC    C'ALLOC '
         DC    C'FILE(XXXLST) '
         DC    C'DA(12345678901234567890123456789012345678901234) '
         DC    C'SHR '
         DC    C'REUSE '
         ORG   LLALLOC+133
LLFREE   DC    CL133' '            Free command
         ORG   LLFREE
         DC    C'FREE '
         DC    C'FILE(XXXLST) '
         ORG   LLFREE+133
LLSWAL   EQU   *-LLSWA             Static workarea length
**********************************************************************
         TITLE 'TBLHEX - HEX Table'
**********************************************************************
TBLHEX   $ENTRY BASE=,DWA=,MODID=NO,SAVE=NO,SAVEAREA=NO,SWA=
         DC    256X'00'            Assume all characters are invalid
         ORG   TBLHEX+X'F0'        0 is valid
         DC    1X'F0'              0 is valid
         ORG   TBLHEX+X'F1'        1 is valid
         DC    1X'F1'              1 is valid
         ORG   TBLHEX+X'F2'        2 is valid
         DC    1X'F2'              2 is valid
         ORG   TBLHEX+X'F3'        3 is valid
         DC    1X'F3'              3 is valid
         ORG   TBLHEX+X'F4'        4 is valid
         DC    1X'F4'              4 is valid
         ORG   TBLHEX+X'F5'        5 is valid
         DC    1X'F5'              5 is valid
         ORG   TBLHEX+X'F6'        6 is valid
         DC    1X'F6'              6 is valid
         ORG   TBLHEX+X'F7'        7 is valid
         DC    1X'F7'              7 is valid
         ORG   TBLHEX+X'F8'        8 is valid
         DC    1X'F8'              8 is valid
         ORG   TBLHEX+X'F9'        9 is valid
         DC    1X'F9'              9 is valid
         ORG   TBLHEX+X'FA'        A is valid
         DC    1X'C1'              A is valid
         ORG   TBLHEX+X'FB'        B is valid
         DC    1X'C2'              B is valid
         ORG   TBLHEX+X'FC'        C is valid
         DC    1X'C3'              C is valid
         ORG   TBLHEX+X'FD'        D is valid
         DC    1X'C4'              D is valid
         ORG   TBLHEX+X'FE'        E is valid
         DC    1X'C5'              E is valid
         ORG   TBLHEX+X'FF'        F is valid
         DC    1X'C6'              F is valid
**********************************************************************
         TITLE 'TBLPROD - Product Table'
**********************************************************************
TBLPROD  $ENTRY BASE=,DWA=,MODID=NO,SAVE=NO,SAVEAREA=NO,SWA=
         DC    CL008'#AU     ',CL012'VSAMANAL'
TBLPRODE EQU   *-TBLPROD           Product table entry length
         DC    CL008'$$$COIBM',CL012'MVS/IPO'
         DC    CL008'$$$COPYR',CL012'SAS-C'
         DC    CL008'$#S     ',CL012'Nomad'
         DC    CL008'$AD     ',CL012'Nomad'
         DC    CL008'$CC     ',CL012'CA-Librarian'
         DC    CL008'$CH     ',CL012'CA-Librarian'
         DC    CL008'$DB     ',CL012'Nomad'
         DC    CL008'$FA     ',CL012'FastVSAM'
         DC    CL008'$FG     ',CL012'SEA-FastGenr'
         DC    CL008'$LS     ',CL012'Nomad'
         DC    CL008'$NI     ',CL012'Nomad'
         DC    CL008'$NO     ',CL012'Nomad'
         DC    CL008'$NU     ',CL012'Nomad'
         DC    CL008'$N2     ',CL012'Nomad'
         DC    CL008'$PD     ',CL012'SEA-PDSFast'
         DC    CL008'$SS     ',CL012'TMON'
         DC    CL008'$TR     ',CL012'Nomad'
         DC    CL008'$VD     ',CL012'Nomad'
         DC    CL008'##Z     ',CL012'SAS-C'
         DC    CL008'#TM     ',CL012'CW-AbendAid'
         DC    CL008'#XA     ',CL012'CW-AbendAid'
         DC    CL008'AAM     ',CL012'CW-AbendAid'
         DC    CL008'AAU     ',CL012'Netview'
         DC    CL008'ABENDAID',CL012'CW-AbendAid'
         DC    CL008'ABENDPGM',CL012'Freeware'
         DC    CL008'ACCOUNT ',CL012'TSOE'
         DC    CL008'ACF     ',CL012'ACF2'
         DC    CL008'ACR     ',CL012'UACR'
         DC    CL008'ACY     ',CL012'VTAM'
         DC    CL008'ADDSUB  ',CL012'MVS/IPO'
         DC    CL008'ADF     ',CL012'TSOE'
         DC    CL008'ADM     ',CL012'GDDM'
         DC    CL008'ADR     ',CL012'DFDSS'
         DC    CL008'ADY     ',CL012'MVS/DAE'
         DC    CL008'AED     ',CL012'Nomad'
         DC    CL008'AEM     ',CL012'GDDM'
         DC    CL008'AFH     ',CL012'LE'
         DC    CL008'AHL     ',CL012'MVS/GTF'
         DC    CL008'AIO     ',CL012'PSF'
         DC    CL008'AKJ     ',CL012'DFSMS'
         DC    CL008'AKQ     ',CL012'PPFA'
         DC    CL008'ALLOCATE',CL012'TSOE'
         DC    CL008'AMA     ',CL012'MVS/Superzap'
         DC    CL008'AMB     ',CL012'DFSMS'
         DC    CL008'AMD     ',CL012'MVS/SADMP'
         DC    CL008'AMS     ',CL012'RMF'
         DC    CL008'ANA     ',CL012'CW-AbendAid'
         DC    CL008'ANF     ',CL012'PSF/IPPW'
         DC    CL008'ANR     ',CL012'ADSM'
         DC    CL008'ANS     ',CL012'ADSM'
         DC    CL008'ANT     ',CL012'DFSMS'
         DC    CL008'AOM     ',CL012'DFSMS/AOM'
         DC    CL008'APA     ',CL012'SW-APA'
         DC    CL008'APILOAD ',CL012'ISPF'
         DC    CL008'APL     ',CL012'VSAPL'
         DC    CL008'APP     ',CL012'C/C++'
         DC    CL008'APQ     ',CL012'AFP'
         DC    CL008'APR     ',CL012'PSF'
         DC    CL008'APS     ',CL012'PSF'
         DC    CL008'ARB     ',CL012'Arbiter'
         DC    CL008'ARC     ',CL012'DFHSM'
         DC    CL008'ASA     ',CL012'MVS/Reuse'
         DC    CL008'ASB     ',CL012'MVS/APPC'
         DC    CL008'ASC     ',CL012'C/C++'
         DC    CL008'ASE     ',CL012'MVS/ASE'
         DC    CL008'ASM     ',CL012'ASM/HighLvl'
         DC    CL008'ASR     ',CL012'MVS/SYMREC'
         DC    CL008'ATA     ',CL012'Nomad'
         DC    CL008'ATB     ',CL012'MVS/APPC'
         DC    CL008'ATC     ',CL012'Nomad'
         DC    CL008'ATM     ',CL012'CW-AbendAid'
         DC    CL008'ATP     ',CL012'Nomad'
         DC    CL008'ATR     ',CL012'MVS/RRS'
         DC    CL008'ATS     ',CL012'Nomad'
         DC    CL008'ATTRIB  ',CL012'TSOE'
         DC    CL008'ATV     ',CL012'Nomad'
         DC    CL008'AVF     ',CL012'MVS'
         DC    CL008'AVR     ',CL012'MVS'
         DC    CL008'AWB     ',CL012'CW-AbendAid'
         DC    CL008'AWC     ',CL012'CW-AbendAid'
         DC    CL008'AWM     ',CL012'CW-AbendAid'
         DC    CL008'AWN     ',CL012'CW-AbendAid'
         DC    CL008'AWT     ',CL012'CW-AbendAid'
         DC    CL008'AXA     ',CL012'CW-AbendAid'
         DC    CL008'BCO     ',CL012'Nomad'
         DC    CL008'BDF     ',CL012'Freeware'
         DC    CL008'BDT     ',CL012'BDT'
         DC    CL008'BEX     ',CL012'Nomad'
         DC    CL008'BFL     ',CL012'SLM'
         DC    CL008'BFS     ',CL012'MVS/LFS'
         DC    CL008'BLG     ',CL012'Info'
         DC    CL008'BLH     ',CL012'Info'
         DC    CL008'BLM     ',CL012'Info'
         DC    CL008'BLR     ',CL012'MVS/IPCS'
         DC    CL008'BLS     ',CL012'MVS/IPCS'
         DC    CL008'BLW     ',CL012'MVS'
         DC    CL008'BLX     ',CL012'Info'
         DC    CL008'BMA     ',CL012'Nomad'
         DC    CL008'BNI     ',CL012'Netview'
         DC    CL008'BNJ     ',CL012'Netview'
         DC    CL008'BOP     ',CL012'MVS/OE'
         DC    CL008'BOY     ',CL012'MVS'
         DC    CL008'BPX     ',CL012'MVS/OE'
         DC    CL008'BTE     ',CL012'Nomad'
         DC    CL008'BTN     ',CL012'Info'
         DC    CL008'CA$     ',CL012'CA-PLNK'
         DC    CL008'CAC     ',CL012'CA-Optimizer'
         DC    CL008'CAD     ',CL012'CA-Docview'
         DC    CL008'CAE     ',CL012'CA-Universe'
         DC    CL008'CAI     ',CL012'CA-90s'
         DC    CL008'CAL0    ',CL012'CA-1'
         DC    CL008'CAL2    ',CL012'CA-7'
         DC    CL008'CAL7    ',CL012'CA-11'
         DC    CL008'CANCEL  ',CL012'TSOE'
         DC    CL008'CAO     ',CL012'CA-Optimizer'
         DC    CL008'CAS     ',CL012'CA-90s'
         DC    CL008'CA11    ',CL012'CA-11'
         DC    CL008'CA4     ',CL012'CA-PLNK'
         DC    CL008'CA5FLUX0',CL012'CA-PMA/Look'
         DC    CL008'CA7     ',CL012'CA-7'
         DC    CL008'CBA     ',CL012'CA-PLNK'
         DC    CL008'CBC     ',CL012'C/C++'
         DC    CL008'CBD     ',CL012'MVS/HCD'
         DC    CL008'CBD     ',CL012'PSF'
         DC    CL008'CBE     ',CL012'Phoenix'
         DC    CL008'CBP     ',CL012'MVS/MVSCP'
         DC    CL008'CBPUS   ',CL012'MVS/IOS'
         DC    CL008'CBR     ',CL012'DFSMS/OAM'
         DC    CL008'CBT973  ',CL012'Freeware'
         DC    CL008'CCF     ',CL012'CA-Librarian'
         DC    CL008'CCI     ',CL012'CA-PLNK'
         DC    CL008'CDF     ',CL012'CA-Librarian'
         DC    CL008'CDR     ',CL012'DFSMS/CDRA'
         DC    CL008'CDSCB   ',CL012'Freeware'
         DC    CL008'CEE     ',CL012'LE'
         DC    CL008'CHF     ',CL012'HCF'
         DC    CL008'CHR     ',CL012'Nomad'
         DC    CL008'CHS     ',CL012'TSOE'
         DC    CL008'CID     ',CL012'SMPE'
         DC    CL008'CIP     ',CL012'DFSMS/3800'
         DC    CL008'CLB     ',CL012'C/C++'
         DC    CL008'CMP     ',CL012'DFSMS'
         DC    CL008'CND     ',CL012'Omegamon'
         DC    CL008'CNF     ',CL012'SAS'
         DC    CL008'CNG     ',CL012'Consul-RACF'
         DC    CL008'CNL     ',CL012'MVS/MMS'
         DC    CL008'CNM     ',CL012'Netview'
         DC    CL008'COD     ',CL012'TMON'
         DC    CL008'COF     ',CL012'MVS/VLF'
         DC    CL008'COL     ',CL012'C/C++'
         DC    CL008'COM     ',CL012'C/C++'
         DC    CL008'COMMAND ',CL012'Freeware'
         DC    CL008'CONSOLE ',CL012'TSOE'
         DC    CL008'CONSPROF',CL012'TSOE'
         DC    CL008'CONVERT ',CL012'LRS-VPS'
         DC    CL008'CONVXLAT',CL012'TCP/IP'
         DC    CL008'COPY    ',CL012'Nomad'
         DC    CL008'COS     ',CL012'CA-TLMS'
         DC    CL008'COUNT   ',CL012'Freeware'
         DC    CL008'CPP     ',CL012'TCP/IP'
         DC    CL008'CPYBLDL ',CL012'MVS/CSV'
         DC    CL008'CPYRITE ',CL012'SAS'
         DC    CL008'CRG     ',CL012'MVS'
         DC    CL008'CR8     ',CL012'CA-PLNK'
         DC    CL008'CSA     ',CL012'Omegamon'
         DC    CL008'CSAMPLE ',CL012'TCP/IP'
         DC    CL008'CSL     ',CL012'ISPF'
         DC    CL008'CSM     ',CL012'CW-AbendAid'
         DC    CL008'CSQ     ',CL012'MQSeries'
         DC    CL008'CSR     ',CL012'MVS/CSR'
         DC    CL008'CSV     ',CL012'MVS/CSV'
         DC    CL008'CT      ',CL012'Freeware'
         DC    CL008'CTS     ',CL012'CA-CmnTape'
         DC    CL008'CTX     ',CL012'MVS'
         DC    CL008'CUS     ',CL012'CW-FileAid'
         DC    CL008'CVA     ',CL012'DFSMS/CVAF'
         DC    CL008'CVR     ',CL012'Vision'
         DC    CL008'CVS     ',CL012'Vision'
         DC    CL008'CVW     ',CL012'Vision'
         DC    CL008'CWA     ',CL012'CW-AbendAid'
         DC    CL008'CWB     ',CL012'CW-AbendAid'
         DC    CL008'CWC     ',CL012'CW-AbendAid'
         DC    CL008'CWD     ',CL012'Compuware'
         DC    CL008'CWG     ',CL012'CW-AbendAid'
         DC    CL008'CWI     ',CL012'CW-AbendAid'
         DC    CL008'CWJ     ',CL012'CW-AbendAid'
         DC    CL008'CWM     ',CL012'CW-AbendAid'
         DC    CL008'CWN     ',CL012'CW-AbendAid'
         DC    CL008'CWP     ',CL012'Compuware'
         DC    CL008'CWT     ',CL012'CW-AbendAid'
         DC    CL008'CWU     ',CL012'CW-AbendAid'
         DC    CL008'CWV     ',CL012'CW-AbendAid'
         DC    CL008'CWY     ',CL012'CW-AbendAid'
         DC    CL008'CXX     ',CL012'C/C++'
         DC    CL008'CYR     ',CL012'Nomad'
         DC    CL008'C11     ',CL012'CA-11'
         DC    CL008'D$L     ',CL012'Vision'
         DC    CL008'DAD     ',CL012'CA-DADS'
         DC    CL008'DAF     ',CL012'Freeware'
         DC    CL008'DBC     ',CL012'Nomad'
         DC    CL008'DBN     ',CL012'RMDS'
         DC    CL008'DBO     ',CL012'LRS-VPS'
         DC    CL008'DB2     ',CL012'Nomad'
         DC    CL008'DCK     ',CL012'PSF'
         DC    CL008'DEU     ',CL012'Nomad'
         DC    CL008'DFH     ',CL012'CICS'
         DC    CL008'DFS     ',CL012'IMS'
         DC    CL008'DGN     ',CL012'Jobscan'
         DC    CL008'DGT     ',CL012'DFSMS/ISMF'
         DC    CL008'DIG     ',CL012'TCP/IP'
         DC    CL008'DIO     ',CL012'Nomad'
         DC    CL008'DLE     ',CL012'LRS-VPS'
         DC    CL008'DL7     ',CL012'CA-11'
         DC    CL008'DMS     ',CL012'DFSMS'
         DC    CL008'DPS     ',CL012'LRS-VPS'
         DC    CL008'DRE     ',CL012'SLR'
         DC    CL008'DRIVER  ',CL012'SEA-PDSFast'
         DC    CL008'DSI     ',CL012'Netview'
         DC    CL008'DSM     ',CL012'DCF'
         DC    CL008'DSN     ',CL012'DB2'
         DC    CL008'DST     ',CL012'LRS-VPS'
         DC    CL008'DSX     ',CL012'NDM'
         DC    CL008'DUI     ',CL012'Netview'
         DC    CL008'DUT     ',CL012'Nomad'
         DC    CL008'DXR     ',CL012'ILRM'
         DC    CL008'DYA     ',CL012'Vision'
         DC    CL008'DYD     ',CL012'Vision'
         DC    CL008'DYF     ',CL012'Vision'
         DC    CL008'DYI     ',CL012'Vision'
         DC    CL008'DYL     ',CL012'Vision'
         DC    CL008'DYN     ',CL012'CA-1'
         DC    CL008'DY2     ',CL012'Vision'
         DC    CL008'DZI     ',CL012'OGL'
         DC    CL008'D00     ',CL012'Jobscan'
         DC    CL008'D08     ',CL012'Jobscan'
         DC    CL008'D13     ',CL012'LRS-VPS'
         DC    CL008'EAG     ',CL012'REXX'
         DC    CL008'EAR     ',CL012'CA-EARL'
         DC    CL008'EBC     ',CL012'CA-View'
         DC    CL008'EDC     ',CL012'LE'
         DC    CL008'EDG     ',CL012'DFRMM'
         DC    CL008'EDIT    ',CL012'TSOE'
         DC    CL008'EGI     ',CL012'DSM'
         DC    CL008'EGS     ',CL012'DSM'
         DC    CL008'EHO     ',CL012'ISPF'
         DC    CL008'EIRMF   ',CL012'Omegamon/IMS'
         DC    CL008'ELI     ',CL012'CA-Librarian'
         DC    CL008'ELM     ',CL012'VTAM'
         DC    CL008'EMODVOL1',CL012'DFSMS'
         DC    CL008'EMRMF   ',CL012'Omegamon/MVS'
         DC    CL008'END     ',CL012'TSOE'
         DC    CL008'ENQ     ',CL012'Freeware'
         DC    CL008'EOX     ',CL012'BookMgr'
         DC    CL008'EOY     ',CL012'BookMgr'
         DC    CL008'EPP     ',CL012'Omegamon'
         DC    CL008'EPW     ',CL012'FFST'
         DC    CL008'ERA     ',CL012'CA-SRAM'
         DC    CL008'ERB     ',CL012'RMF'
         DC    CL008'ERX     ',CL012'GDDM'
         DC    CL008'ESP     ',CL012'Nomad'
         DC    CL008'EUV     ',CL012'MVS/OE'
         DC    CL008'EWX     ',CL012'MVS/LANRES'
         DC    CL008'EXEC    ',CL012'TSOE'
         DC    CL008'EXITSM  ',CL012'Jobscan'
         DC    CL008'EXR     ',CL012'DSM'
         DC    CL008'EXS     ',CL012'DSM'
         DC    CL008'EXT     ',CL012'TCP/IP'
         DC    CL008'EZA     ',CL012'TCP/IP'
         DC    CL008'E12     ',CL012'CA-View'
         DC    CL008'E14     ',CL012'CA-View'
         DC    CL008'E20     ',CL012'CA-View'
         DC    CL008'F$      ',CL012'FDR'
         DC    CL008'FAA     ',CL012'CW-FileAid'
         DC    CL008'FAC     ',CL012'CW-FileAid'
         DC    CL008'FAI     ',CL012'CW-FileAid'
         DC    CL008'FAM     ',CL012'FastVSAM'
         DC    CL008'FAS     ',CL012'CW-FileAid'
         DC    CL008'FASTGENR',CL012'SEA-FastGenr'
         DC    CL008'FASTISPF',CL012'SEA-PDSFast'
         DC    CL008'FASTUTIL',CL012'FastUTIL'
         DC    CL008'FASTVSAM',CL012'FastVSAM'
         DC    CL008'FAU     ',CL012'CW-FileAid'
         DC    CL008'FAX     ',CL012'CW-FileAid'
         DC    CL008'FBC     ',CL012'CW-FileAid'
         DC    CL008'FCBLIST ',CL012'Freeware'
         DC    CL008'FD$     ',CL012'FDR'
         DC    CL008'FDBX    ',CL012'MVS/OE'
         DC    CL008'FDR     ',CL012'FDR'
         DC    CL008'FDS     ',CL012'SEA-FastGenr'
         DC    CL008'FILEAID ',CL012'CW-FileAid'
         DC    CL008'FIN     ',CL012'Nomad'
         DC    CL008'FLM     ',CL012'ISPF/SCLM'
         DC    CL008'FL7     ',CL012'CA-11'
         DC    CL008'FMH     ',CL012'DSM'
         DC    CL008'FNM     ',CL012'NPM'
         DC    CL008'FOM     ',CL012'MVS/OE'
         DC    CL008'FPS     ',CL012'LRS-VPS'
         DC    CL008'FRA     ',CL012'Nomad'
         DC    CL008'FREE    ',CL012'TSOE'
         DC    CL008'FRENCH  ',CL012'Nomad'
         DC    CL008'FRO     ',CL012'Vision'
         DC    CL008'FSI     ',CL012'GDDM'
         DC    CL008'FSO     ',CL012'Flasher'
         DC    CL008'FSP     ',CL012'CW-FileAid'
         DC    CL008'FSU     ',CL012'MVS/OE'
         DC    CL008'FTI     ',CL012'Nomad'
         DC    CL008'FTP     ',CL012'TCP/IP'
         DC    CL008'FVS     ',CL012'Vision'
         DC    CL008'FZD     ',CL012'NDM'
         DC    CL008'F33     ',CL012'CA-PLNK'
         DC    CL008'GDE     ',CL012'DFSMS/DFM'
         DC    CL008'GDM     ',CL012'GDDM'
         DC    CL008'GDXADML1',CL012'GDDM'
         DC    CL008'GDXLIOX0',CL012'TCP/IP'
         DC    CL008'GENRMT  ',CL012'MVS'
         DC    CL008'GER     ',CL012'Nomad'
         DC    CL008'GETCPUID',CL012'SuperTracs'
         DC    CL008'GFSA    ',CL012'DFSMS/NFSS'
         DC    CL008'GFU     ',CL012'MVS/OE'
         DC    CL008'GIM     ',CL012'SMPE'
         DC    CL008'GOALSYS ',CL012'Phoenix'
         DC    CL008'GOS     ',CL012'SOM'
         DC    CL008'GOT     ',CL012'SOM'
         DC    CL008'GQF     ',CL012'GDDM'
         DC    CL008'GRAF    ',CL012'DFSMS/3800'
         DC    CL008'GREEK   ',CL012'Nomad'
         DC    CL008'GRF     ',CL012'DFSMS/3800'
         DC    CL008'GRS     ',CL012'Freeware'
         DC    CL008'GSV     ',CL012'CA-Sysview'
         DC    CL008'G8L     ',CL012'CA-OSI'
         DC    CL008'G8M     ',CL012'CA-OSI'
         DC    CL008'G8P     ',CL012'CA-OSI'
         DC    CL008'G8S     ',CL012'CA-OSI'
         DC    CL008'G8U     ',CL012'CA-OSI'
         DC    CL008'G8X     ',CL012'CA-OSI'
         DC    CL008'G8Z     ',CL012'CA-OSI'
         DC    CL008'HAS     ',CL012'JES2'
         DC    CL008'HELP    ',CL012'TSOE'
         DC    CL008'HELVETIC',CL012'Nomad'
         DC    CL008'HEW     ',CL012'DFSMS'
         DC    CL008'HIR     ',CL012'Nomad'
         DC    CL008'HLP     ',CL012'SW-VIOPlus'
         DC    CL008'HMA     ',CL012'SMPE'
         DC    CL008'HMD     ',CL012'DFSMS'
         DC    CL008'HOMETEST',CL012'TCP/IP'
         DC    CL008'HP7     ',CL012'Nomad'
         DC    CL008'IAD     ',CL012'Nomad'
         DC    CL008'IAR     ',CL012'MVS/RSM'
         DC    CL008'IAS     ',CL012'JES2'
         DC    CL008'IASX    ',CL012'JES2/XWTR'
         DC    CL008'IAT     ',CL012'JES3'
         DC    CL008'IAZ     ',CL012'JES2/FSI'
         DC    CL008'IBM     ',CL012'LE'
         DC    CL008'ICB     ',CL012'C/C++'
         DC    CL008'ICE     ',CL012'DFSORT'
         DC    CL008'ICH     ',CL012'RACF'
         DC    CL008'ICK     ',CL012'DSF'
         DC    CL008'ICL     ',CL012'SADSF'
         DC    CL008'ICMDSECT',CL012'CA-7'
         DC    CL008'ICP     ',CL012'MVS/IOCP'
         DC    CL008'ICQ     ',CL012'TSOE/ICF'
         DC    CL008'ICV     ',CL012'DFSMS/CVAF'
         DC    CL008'ICY     ',CL012'DFSMS'
         DC    CL008'IDA     ',CL012'DFSMS'
         DC    CL008'IDC     ',CL012'DFSMS/AMS'
         DC    CL008'IDD     ',CL012'DFSMS'
         DC    CL008'IDMS    ',CL012'CA-IDMS'
         DC    CL008'IDY     ',CL012'TSOE'
         DC    CL008'IEA     ',CL012'MVS'
         DC    CL008'IEAAL   ',CL012'MVS/PCAuth'
         DC    CL008'IEAAS   ',CL012'MVS/SupCtl'
         DC    CL008'IEABS   ',CL012'MVS/SupCtl'
         DC    CL008'IEACS   ',CL012'MVS/SupCtl'
         DC    CL008'IEAE    ',CL012'MVS/PCAuth'
         DC    CL008'IEAFI   ',CL012'MVS/SupCtl'
         DC    CL008'IEAFT   ',CL012'MVS/RTM'
         DC    CL008'IEAIH   ',CL012'MVS/SupCtl'
         DC    CL008'IEAIP   ',CL012'MVS/IPL'
         DC    CL008'IEAIPCSP',CL012'MVS/CommTask'
         DC    CL008'IEAIPL  ',CL012'MVS'
         DC    CL008'IEALC   ',CL012'MVS/SupCtl'
         DC    CL008'IEALI   ',CL012'MVS/VSM'
         DC    CL008'IEALS   ',CL012'MVS/SupCtl'
         DC    CL008'IEAML   ',CL012'MVS/IOS'
         DC    CL008'IEAMSD  ',CL012'MVS/RTM'
         DC    CL008'IEAMSW  ',CL012'MVS/SupCtl'
         DC    CL008'IEAMTL  ',CL012'MVS/IOS'
         DC    CL008'IEAPS   ',CL012'MVS/SupCtl'
         DC    CL008'IEAR    ',CL012'MVS/Task'
         DC    CL008'IEASCF  ',CL012'MVS/SupCtl'
         DC    CL008'IEASM   ',CL012'MVS/SMF'
         DC    CL008'IEASR   ',CL012'MVS/SupCtl'
         DC    CL008'IEASSA  ',CL012'MVS/Task'
         DC    CL008'IEASSR  ',CL012'MVS/SupCtl'
         DC    CL008'IEASTC  ',CL012'MVS/Task'
         DC    CL008'IEASTK  ',CL012'MVS/PCAuth'
         DC    CL008'IEASV   ',CL012'MVS/SupCtl'
         DC    CL008'IEASY   ',CL012'MVS/NIP'
         DC    CL008'IEATC   ',CL012'MVS/Task'
         DC    CL008'IEATD   ',CL012'MVS/Timer'
         DC    CL008'IEATE   ',CL012'MVS/Timer'
         DC    CL008'IEATL   ',CL012'MVS/SMF'
         DC    CL008'IEATP   ',CL012'MVS/Timer'
         DC    CL008'IEATS   ',CL012'MVS/Timer'
         DC    CL008'IEATT   ',CL012'MVS/Timer'
         DC    CL008'IEAVAD  ',CL012'MVS/Dump'
         DC    CL008'IEAVAL  ',CL012'MVS/PCAuth'
         DC    CL008'IEAVAP  ',CL012'MVS/IPL'
         DC    CL008'IEAVAR  ',CL012'MVS/RCT'
         DC    CL008'IEAVAS  ',CL012'MVS/RCT'
         DC    CL008'IEAVAT  ',CL012'MVS/RCT'
         DC    CL008'IEAVAU  ',CL012'MVS/RCT'
         DC    CL008'IEAVAV  ',CL012'MVS/RCT'
         DC    CL008'IEAVAW  ',CL012'MVS/RCT'
         DC    CL008'IEAVAX  ',CL012'MVS/RCT'
         DC    CL008'IEAVBL  ',CL012'MVS/VSM'
         DC    CL008'IEAVBT  ',CL012'MVS/Task'
         DC    CL008'IEAVBW  ',CL012'MVS/CommTask'
         DC    CL008'IEAVC   ',CL012'MVS/SupCtl'
         DC    CL008'IEAVC7  ',CL012'MVS/CommTask'
         DC    CL008'IEAVDE  ',CL012'MVS/VSM'
         DC    CL008'IEAVD2  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVD3  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEAC ',CL012'MVS/Task'
         DC    CL008'IEAVEAD ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEB  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVECB ',CL012'MVS/SupCtl'
         DC    CL008'IEAVECM ',CL012'MVS/SupCtl'
         DC    CL008'IEAVECM ',CL012'MVS/SupCtl'
         DC    CL008'IEAVED  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVED  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEED ',CL012'MVS/Task'
         DC    CL008'IEAVEEE ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEF  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEMI ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEMP ',CL012'MVS/Task'
         DC    CL008'IEAVEMR ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEMS ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEN  ',CL012'MVS/NIP'
         DC    CL008'IEAVEO  ',CL012'MVS/Task'
         DC    CL008'IEAVEPC ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEPD ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEQ  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEST ',CL012'MVS/SupCtl'
         DC    CL008'IEAVESU ',CL012'MVS/SupCtl'
         DC    CL008'IEAVESV ',CL012'MVS/SupCtl'
         DC    CL008'IEAVETA ',CL012'MVS/Trace'
         DC    CL008'IEAVETV ',CL012'MVS/Trace'
         DC    CL008'IEAVEVA ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEVS ',CL012'MVS/SupCtl'
         DC    CL008'IEAVEW  ',CL012'MVS/Task'
         DC    CL008'IEAVEX  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVFRC ',CL012'MVS/VSM'
         DC    CL008'IEAVFRL ',CL012'MVS/SupCtl'
         DC    CL008'IEAVG   ',CL012'MVS/CommTask'
         DC    CL008'IEAVGS  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVGT  ',CL012'MVS/VSM'
         DC    CL008'IEAVH   ',CL012'MVS/CommTask'
         DC    CL008'IEAVID  ',CL012'MVS/CSV'
         DC    CL008'IEAVIN  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVL   ',CL012'MVS/SupCtl'
         DC    CL008'IEAVMA  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMB  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMC  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMD  ',CL012'MVS/CommTask'
         DC    CL008'IEAVME  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMN  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMO  ',CL012'MVS/Task'
         DC    CL008'IEAVMQ  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMQ  ',CL012'MVS/CommTask'
         DC    CL008'IEAVMSF ',CL012'MVS/SPI'
         DC    CL008'IEAVMSG ',CL012'MVS/VSM'
         DC    CL008'IEAVMV  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVMW  ',CL012'MVS/CommTask'
         DC    CL008'IEAVNI  ',CL012'MVS/NIP'
         DC    CL008'IEAVNPA6',CL012'MVS/RTM'
         DC    CL008'IEAVNPD1',CL012'MVS/Dump'
         DC    CL008'IEAVNPD2',CL012'MVS/Dump'
         DC    CL008'IEAVNPD6',CL012'MVS/RTM'
         DC    CL008'IEAVNPE ',CL012'MVS/NIP'
         DC    CL008'IEAVNPF ',CL012'MVS/NIP'
         DC    CL008'IEAVNPM ',CL012'MVS/NIP'
         DC    CL008'IEAVNPX ',CL012'MVS/NIP'
         DC    CL008'IEAVNP57',CL012'MVS/Dump'
         DC    CL008'IEAVNS  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVN1  ',CL012'MVS/CommTask'
         DC    CL008'IEAVN6  ',CL012'MVS/CommTask'
         DC    CL008'IEAVN7  ',CL012'MVS/CommTask'
         DC    CL008'IEAVQ   ',CL012'MVS/CommTask'
         DC    CL008'IEAVR   ',CL012'MVS/Timer'
         DC    CL008'IEAVSE  ',CL012'MVS/Task'
         DC    CL008'IEAVSS  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVST  ',CL012'MVS/RTM'
         DC    CL008'IEAVSV  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVSW  ',CL012'MVS/CommTask'
         DC    CL008'IEAVT   ',CL012'MVS/RTM'
         DC    CL008'IEAVTAB ',CL012'MVS/Dump'
         DC    CL008'IEAVTACR',CL012'MVS/ACR'
         DC    CL008'IEAVTB  ',CL012'MVS/Task'
         DC    CL008'IEAVTC  ',CL012'MVS/RTM'
         DC    CL008'IEAVTEST',CL012'MVS/Task'
         DC    CL008'IEAVTEX ',CL012'MVS/RTM'
         DC    CL008'IEAVTFMT',CL012'MVS/RTM'
         DC    CL008'IEAVTJBN',CL012'MVS'
         DC    CL008'IEAVTPE ',CL012'MVS/RTM'
         DC    CL008'IEAVTPM ',CL012'MVS/VSM'
         DC    CL008'IEAVTR  ',CL012'MVS/RTM'
         DC    CL008'IEAVTS  ',CL012'MVS/RTM'
         DC    CL008'IEAVTT  ',CL012'MVS/Task'
         DC    CL008'IEAVTV  ',CL012'MVS/Dump'
         DC    CL008'IEAVVC  ',CL012'MVS/CommTask'
         DC    CL008'IEAVVJ  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVVK  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVVL  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVVM  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVVR  ',CL012'MVS/CommTask'
         DC    CL008'IEAVVS  ',CL012'MVS/SupCtl'
         DC    CL008'IEAVVT  ',CL012'MVS/Timer'
         DC    CL008'IEAVVW  ',CL012'MVS/CommTask'
         DC    CL008'IEAVW   ',CL012'MVS/SupCtl'
         DC    CL008'IEAVXA  ',CL012'MVS/PCAuth'
         DC    CL008'IEAVXT  ',CL012'MVS/PCAuth'
         DC    CL008'IEAVX6  ',CL012'MVS/CommTask'
         DC    CL008'IEAV2   ',CL012'MVS/CommTask'
         DC    CL008'IEAXP   ',CL012'MVS/EFP'
         DC    CL008'IEAXS   ',CL012'MVS/SupCtl'
         DC    CL008'IEB     ',CL012'DFSMS/Utils'
         DC    CL008'IEC     ',CL012'DFSMS'
         DC    CL008'IECDA   ',CL012'MVS/Dump'
         DC    CL008'IECI    ',CL012'MVS/IOS'
         DC    CL008'IECL    ',CL012'MVS/IOS'
         DC    CL008'IECT    ',CL012'MVS/IOS'
         DC    CL008'IECVAFP1',CL012'PSF'
         DC    CL008'IECVDA  ',CL012'MVS/EXCP'
         DC    CL008'IECVDD  ',CL012'MVS/IOS'
         DC    CL008'IECVER  ',CL012'MVS/IOS'
         DC    CL008'IECVEX  ',CL012'MVS/EXCP'
         DC    CL008'IECVF   ',CL012'MVS/IOS'
         DC    CL008'IECVIOPM',CL012'MVS/IOS'
         DC    CL008'IECVOI  ',CL012'MVS/IOS'
         DC    CL008'IECVOP  ',CL012'MVS/EXCP'
         DC    CL008'IECVP   ',CL012'MVS/IOS'
         DC    CL008'IECVQ   ',CL012'MVS/IOS'
         DC    CL008'IECVR   ',CL012'MVS/IOS'
         DC    CL008'IECVS   ',CL012'MVS/IOS'
         DC    CL008'IECVT   ',CL012'MVS/EXCP'
         DC    CL008'IECVX   ',CL012'MVS/IOS'
         DC    CL008'IED     ',CL012'TSOE'
         DC    CL008'IEE     ',CL012'MVS'
         DC    CL008'IEECB867',CL012'MVS/Dump'
         DC    CL008'IEECB913',CL012'MVS/SMF'
         DC    CL008'IEECB916',CL012'MVS/SMF'
         DC    CL008'IEECB933',CL012'DFSMS'
         DC    CL008'IEECB934',CL012'DFSMS'
         DC    CL008'IEECB935',CL012'DFSMS'
         DC    CL008'IEECB936',CL012'DFSMS'
         DC    CL008'IEECB938',CL012'MVS/IOS'
         DC    CL008'IEECB939',CL012'MVS/IOS'
         DC    CL008'IEECB950',CL012'MVS/IOS'
         DC    CL008'IEECB951',CL012'MVS/IOS'
         DC    CL008'IEECB953',CL012'MVS/IOS'
         DC    CL008'IEECVET ',CL012'MVS/CommTask'
         DC    CL008'IEECVFT ',CL012'MVS/CommTask'
         DC    CL008'IEEC2   ',CL012'MVS/CommTask'
         DC    CL008'IEEDI   ',CL012'MVS/SRM'
         DC    CL008'IEED3   ',CL012'MVS/DIDOCS'
         DC    CL008'IEEMB82 ',CL012'MVS/SMF'
         DC    CL008'IEEMB83 ',CL012'MVS/SMF'
         DC    CL008'IEEMB84 ',CL012'MVS/SMF'
         DC    CL008'IEEVDC  ',CL012'MVS/CommTask'
         DC    CL008'IEE70110',CL012'MVS/SMF'
         DC    CL008'IEF     ',CL012'MVS'
         DC    CL008'IEFA    ',CL012'MVS/Alloc'
         DC    CL008'IEFB    ',CL012'MVS/Alloc'
         DC    CL008'IEFDB   ',CL012'MVS/Alloc'
         DC    CL008'IEFEB   ',CL012'MVS/Alloc'
         DC    CL008'IEFEN   ',CL012'MVS/ENF'
         DC    CL008'IEFGB400',CL012'MVS/Alloc'
         DC    CL008'IEFN    ',CL012'MVS/CI'
         DC    CL008'IEFQ    ',CL012'MVS/SWA'
         DC    CL008'IEFQB551',CL012'MVS/SJF'
         DC    CL008'IEFSJ   ',CL012'MVS/SJF'
         DC    CL008'IEFSM   ',CL012'MVS/SMF'
         DC    CL008'IEFTA   ',CL012'MVS/SJF'
         DC    CL008'IEFTB72 ',CL012'MVS/SMF'
         DC    CL008'IEFTB73 ',CL012'MVS/SJF'
         DC    CL008'IEFTZ   ',CL012'MVS/SJF'
         DC    CL008'IEFU    ',CL012'MVS/SMF'
         DC    CL008'IEFV    ',CL012'MVS/CI'
         DC    CL008'IEFW21SD',CL012'MVS/Alloc'
         DC    CL008'IEFX    ',CL012'MVS/SJF'
         DC    CL008'IEH     ',CL012'DFSMS/Utils'
         DC    CL008'IES     ',CL012'MVS/VisulLft'
         DC    CL008'IEV     ',CL012'ASM/H'
         DC    CL008'IEW     ',CL012'DFSMS'
         DC    CL008'IEZ     ',CL012'MVS'
         DC    CL008'IFA     ',CL012'MVS/SMF'
         DC    CL008'IFAUMQM#',CL012'MQSeries'
         DC    CL008'IFB     ',CL012'EREP'
         DC    CL008'IFC     ',CL012'EREP'
         DC    CL008'IFD     ',CL012'MVS/OLTEP'
         DC    CL008'IFF     ',CL012'DFSMS/GSP'
         DC    CL008'IFG     ',CL012'DFSMS'
         DC    CL008'IFG0192F',CL012'VTAM'
         DC    CL008'IFH     ',CL012'DFSMS'
         DC    CL008'IFO     ',CL012'ASM/F'
         DC    CL008'IGB     ',CL012'DFSMS'
         DC    CL008'IGC     ',CL012'DFSMS'
         DC    CL008'IGCS    ',CL012'CA-7'
         DC    CL008'IGC0001C',CL012'MVS/RTM'
         DC    CL008'IGC0001G',CL012'MVS/IOS'
         DC    CL008'IGC0003C',CL012'MVS/IOS'
         DC    CL008'IGC0003D',CL012'MVS'
         DC    CL008'IGC0004A',CL012'MVS/CSV'
         DC    CL008'IGC0005A',CL012'MVS/RTM'
         DC    CL008'IGC0005I',CL012'MVS/OLTEP'
         DC    CL008'IGC0006A',CL012'TSOE'
         DC    CL008'IGC0008C',CL012'MVS/SMF'
         DC    CL008'IGC0009G',CL012'TSOE'
         DC    CL008'IGC0013{',CL012'RACF'
         DC    CL008'IGC0013I',CL012'DFSMS/CVAF'
         DC    CL008'IGC0203E',CL012'MVS'
         DC    CL008'IGC0403D',CL012'MVS'
         DC    CL008'IGC047  ',CL012'MVS'
         DC    CL008'IGC0805A',CL012'MVS/RTM'
         DC    CL008'IGC116  ',CL012'MVS'
         DC    CL008'IGD     ',CL012'DFSMS'
         DC    CL008'IGE     ',CL012'DFSMS'
         DC    CL008'IGE00   ',CL012'MVS/IOS'
         DC    CL008'IGE0000E',CL012'PSF'
         DC    CL008'IGE0010F',CL012'VTAM'
         DC    CL008'IGF     ',CL012'MVS'
         DC    CL008'IGFD    ',CL012'MVS/DDR'
         DC    CL008'IGFPB   ',CL012'MVS/IPL'
         DC    CL008'IGFPM   ',CL012'MVS/MCH'
         DC    CL008'IGFPT   ',CL012'MVS/MCH'
         DC    CL008'IGFPX   ',CL012'MVS/MCH'
         DC    CL008'IGG     ',CL012'DFSMS'
         DC    CL008'IGGUCC00',CL012'CA'
         DC    CL008'IGGU0100',CL012'CA-1'
         DC    CL008'IGR     ',CL012'Nomad'
         DC    CL008'IGU     ',CL012'DFSMS'
         DC    CL008'IGV     ',CL012'MVS'
         DC    CL008'IGVA    ',CL012'MVS/VSM'
         DC    CL008'IGVB    ',CL012'MVS/VSM'
         DC    CL008'IGVC    ',CL012'MVS/VSM'
         DC    CL008'IGVD    ',CL012'MVS/VSM'
         DC    CL008'IGVE    ',CL012'MVS/IPL'
         DC    CL008'IGVF    ',CL012'MVS/VSM'
         DC    CL008'IGVG    ',CL012'MVS/VSM'
         DC    CL008'IGVH    ',CL012'MVS/VSM'
         DC    CL008'IGVI    ',CL012'MVS/VSM'
         DC    CL008'IGVJ    ',CL012'MVS/VSM'
         DC    CL008'IGVK    ',CL012'MVS/VSM'
         DC    CL008'IGVL    ',CL012'MVS/VSM'
         DC    CL008'IGVN    ',CL012'MVS/IPL'
         DC    CL008'IGVR    ',CL012'MVS/VSM'
         DC    CL008'IGVS    ',CL012'MVS/VSM'
         DC    CL008'IGVT    ',CL012'MVS/VSM'
         DC    CL008'IGVU    ',CL012'MVS/VSM'
         DC    CL008'IGVV    ',CL012'MVS/VSM'
         DC    CL008'IGW     ',CL012'DFSMS'
         DC    CL008'IGX     ',CL012'MVS'
         DC    CL008'IGX0    ',CL012'TSOE'
         DC    CL008'IGX00011',CL012'SDSF'
         DC    CL008'IGX00017',CL012'DFSORT'
         DC    CL008'IGX00036',CL012'ISPF'
         DC    CL008'IGX00039',CL012'DFSMS/AOM'
         DC    CL008'IGY     ',CL012'COBOL/II'
         DC    CL008'IGZ     ',CL012'COBOL/II'
         DC    CL008'IHA     ',CL012'TSOE'
         DC    CL008'IHC     ',CL012'DFSMS/GSP'
         DC    CL008'IHD     ',CL012'DFSMS/GSP'
         DC    CL008'IHE     ',CL012'DFSMS/GSP'
         DC    CL008'IHJ     ',CL012'DFSMS'
         DC    CL008'IHV     ',CL012'EsconMgr'
         DC    CL008'IKF     ',CL012'COBOL/VS'
         DC    CL008'IKJ     ',CL012'TSOE'
         DC    CL008'IKT     ',CL012'VTAM'
         DC    CL008'ILB     ',CL012'COBOL/VS'
         DC    CL008'ILN     ',CL012'RPG'
         DC    CL008'ILR     ',CL012'MVS/ASM'
         DC    CL008'IL7     ',CL012'CA-11'
         DC    CL008'IMD     ',CL012'DFSMS'
         DC    CL008'IND$FILE',CL012'TSOE'
         DC    CL008'INM     ',CL012'TSOE/IDTF'
         DC    CL008'IOA     ',CL012'TCP/IP'
         DC    CL008'IOF     ',CL012'IOF'
         DC    CL008'IOP     ',CL012'IOCP'
         DC    CL008'IOS     ',CL012'MVS/IOS'
         DC    CL008'IOU     ',CL012'CA-Librarian'
         DC    CL008'IPC     ',CL012'VTAM'
         DC    CL008'IPO     ',CL012'MVS/IPO'
         DC    CL008'IPV     ',CL012'FFST'
         DC    CL008'IPX     ',CL012'MVS/IPL'
         DC    CL008'IRA     ',CL012'MVS/SRM'
         DC    CL008'IRD     ',CL012'MVS/HCD'
         DC    CL008'IRR     ',CL012'RACF'
         DC    CL008'IRX     ',CL012'TSOE/REXX'
         DC    CL008'ISC800  ',CL012'Nomad'
         DC    CL008'ISF     ',CL012'SDSF'
         DC    CL008'ISG     ',CL012'MVS/GRS'
         DC    CL008'ISN     ',CL012'MVS/SPI'
         DC    CL008'ISP     ',CL012'ISPF'
         DC    CL008'ISR     ',CL012'ISPF'
         DC    CL008'IST     ',CL012'VTAM'
         DC    CL008'ITA     ',CL012'Nomad'
         DC    CL008'ITR     ',CL012'MVS/Trace'
         DC    CL008'ITT     ',CL012'MVS/Trace'
         DC    CL008'ITV     ',CL012'MVS/DIV'
         DC    CL008'IUT     ',CL012'VTAM'
         DC    CL008'IVPCHK  ',CL012'MVS/IPO'
         DC    CL008'IVT     ',CL012'VTAM'
         DC    CL008'IWM     ',CL012'MVS/WLM'
         DC    CL008'IXC     ',CL012'MVS/XCF'
         DC    CL008'IXG     ',CL012'MVS/Logger'
         DC    CL008'IXL     ',CL012'MVS/XES'
         DC    CL008'IXP     ',CL012'MVS/IOCP'
         DC    CL008'IXZ     ',CL012'MVS/JESXCF'
         DC    CL008'IZP     ',CL012'IOCP'
         DC    CL008'JAP     ',CL012'Nomad'
         DC    CL008'JAR     ',CL012'CA-JARS'
         DC    CL008'JLY     ',CL012'Jobscan'
         DC    CL008'JSI     ',CL012'CA-JARS'
         DC    CL008'JSM     ',CL012'CA-JARS'
         DC    CL008'JSQ     ',CL012'CA-JARS'
         DC    CL008'JSS     ',CL012'CA-JARS'
         DC    CL008'JSV     ',CL012'CA-JARS'
         DC    CL008'JSY     ',CL012'CA-JARS'
         DC    CL008'J00     ',CL012'Jobscan'
         DC    CL008'KAD     ',CL012'TCP/IP'
         DC    CL008'KAN     ',CL012'Nomad'
         DC    CL008'KAT     ',CL012'Nomad'
         DC    CL008'KCA     ',CL012'Omegamon'
         DC    CL008'KDB     ',CL012'TCP/IP'
         DC    CL008'KDE     ',CL012'TCP/IP'
         DC    CL008'KERMIT  ',CL012'Kermit'
         DC    CL008'KEYCODE ',CL012'TCP/IP'
         DC    CL008'KIN     ',CL012'TCP/IP'
         DC    CL008'KLI     ',CL012'TCP/IP'
         DC    CL008'KPA     ',CL012'TCP/IP'
         DC    CL008'KST     ',CL012'TCP/IP'
         DC    CL008'L$C     ',CL012'SAS-C'
         DC    CL008'L$D     ',CL012'SAS-C'
         DC    CL008'L$F     ',CL012'SAS-C'
         DC    CL008'L$U     ',CL012'SAS-C'
         DC    CL008'LASTIPL ',CL012'Freeware'
         DC    CL008'LB@     ',CL012'TCP/IP'
         DC    CL008'LCA     ',CL012'Nomad'
         DC    CL008'LCM     ',CL012'STK-LCM'
         DC    CL008'LEA     ',CL012'CW-AbendAid'
         DC    CL008'LEQ     ',CL012'Nomad'
         DC    CL008'LES     ',CL012'CA-PMA/Look'
         DC    CL008'LGD     ',CL012'Nomad'
         DC    CL008'LIB     ',CL012'CA-Librarian'
         DC    CL008'LINK    ',CL012'TSOE'
         DC    CL008'LISTBC  ',CL012'TSOE'
         DC    CL008'LISTPDS ',CL012'Freeware'
         DC    CL008'LISTSPC ',CL012'Freeware'
         DC    CL008'LISTVOL ',CL012'Freeware'
         DC    CL008'LJ3     ',CL012'CA-Librarian'
         DC    CL008'LMRK    ',CL012'TMON'
         DC    CL008'LOADGO  ',CL012'TSOE'
         DC    CL008'LOGOFF  ',CL012'TSOE'
         DC    CL008'LOGON   ',CL012'TSOE'
         DC    CL008'LOW     ',CL012'Nomad'
         DC    CL008'LPALNK  ',CL012'Freeware'
         DC    CL008'LPQ     ',CL012'TCP/IP'
         DC    CL008'LPR     ',CL012'TCP/IP'
         DC    CL008'LPRM    ',CL012'TCP/IP'
         DC    CL008'LPRSET  ',CL012'TCP/IP'
         DC    CL008'LPSCB   ',CL012'Freeware'
         DC    CL008'LRS     ',CL012'LRS-VPS'
         DC    CL008'LR1     ',CL012'LRS-VPS'
         DC    CL008'LSC     ',CL012'SAS-C'
         DC    CL008'LSPACE  ',CL012'Freeware'
         DC    CL008'LUK     ',CL012'CA-PMA/Look'
         DC    CL008'LVS     ',CL012'CA-Librarian'
         DC    CL008'L05     ',CL012'CA-1'
         DC    CL008'L1B     ',CL012'LRS-VPS'
         DC    CL008'L1G     ',CL012'LRS-VPS'
         DC    CL008'L1S     ',CL012'LRS-VPS'
         DC    CL008'L13     ',CL012'LRS-VPS'
         DC    CL008'L2A     ',CL012'CA-7'
         DC    CL008'L2D     ',CL012'CA-7'
         DC    CL008'L2I     ',CL012'CA-7'
         DC    CL008'L2L     ',CL012'CA-7'
         DC    CL008'L2S     ',CL012'CA-7'
         DC    CL008'L2V     ',CL012'CA-7'
         DC    CL008'L22     ',CL012'CA-7'
         DC    CL008'L23     ',CL012'CA-7'
         DC    CL008'L72     ',CL012'CA-11'
         DC    CL008'MAKESITE',CL012'TCP/IP'
         DC    CL008'MCNVTCAT',CL012'MVS/IPO'
         DC    CL008'MET     ',CL012'Metaphor'
         DC    CL008'MLTAFP1 ',CL012'PSF'
         DC    CL008'MSGBUILD',CL012'TCP/IP'
         DC    CL008'MSGTABLE',CL012'TSOE'
         DC    CL008'MSTJCLEX',CL012'MVS/IPO'
         DC    CL008'MVP     ',CL012'TCP/IP'
         DC    CL008'MVSDSN  ',CL012'Nomad'
         DC    CL008'MVSSERV ',CL012'TSOE'
         DC    CL008'MVSSTATE',CL012'Nomad'
         DC    CL008'MVSUSER ',CL012'Nomad'
         DC    CL008'M4V     ',CL012'VSAM-Tune'
         DC    CL008'NAM     ',CL012'Nomad'
         DC    CL008'NCF     ',CL012'CA-7'
         DC    CL008'NDBCLNT ',CL012'TCP/IP'
         DC    CL008'NDM     ',CL012'NDM'
         DC    CL008'NED     ',CL012'Nomad'
         DC    CL008'NETSOL  ',CL012'Freeware'
         DC    CL008'NETSTAT ',CL012'TCP/IP'
         DC    CL008'NEWS    ',CL012'Freeware'
         DC    CL008'NIDL    ',CL012'TCP/IP'
         DC    CL008'NIH     ',CL012'Nomad'
         DC    CL008'NOM     ',CL012'Nomad'
         DC    CL008'NPI     ',CL012'Nomad'
         DC    CL008'NSDBLOAD',CL012'TCP/IP'
         DC    CL008'NSLOOKUP',CL012'TCP/IP'
         DC    CL008'NXI     ',CL012'CW-AbendAid'
         DC    CL008'N2N     ',CL012'Nomad'
         DC    CL008'OBA     ',CL012'Omegamon'
         DC    CL008'OBD     ',CL012'Omegamon'
         DC    CL008'OBEYFILE',CL012'TCP/IP'
         DC    CL008'OBR     ',CL012'Omegamon'
         DC    CL008'OBS     ',CL012'Omegamon'
         DC    CL008'OBV     ',CL012'Omegamon'
         DC    CL008'OM      ',CL012'Omegamon'
         DC    CL008'OMODVOL1',CL012'DFSMS'
         DC    CL008'OP      ',CL012'CA-OPSMVS'
         DC    CL008'OPERATOR',CL012'TSOE'
         DC    CL008'OSI     ',CL012'CA-DADS'
         DC    CL008'OUTDES  ',CL012'TSOE'
         DC    CL008'OUTPUT  ',CL012'TSOE'
         DC    CL008'PASTE   ',CL012'QuickRef'
         DC    CL008'PCM     ',CL012'Nomad'
         DC    CL008'PDFCOPY ',CL012'SEA-PDSFast'
         DC    CL008'PDSFAST ',CL012'SEA-PDSFast'
         DC    CL008'PDSFST  ',CL012'SEA-PDSFast'
         DC    CL008'PERFCLNT',CL012'TCP/IP'
         DC    CL008'PERFSERV',CL012'TCP/IP'
         DC    CL008'PGR     ',CL012'LRS-VPS'
         DC    CL008'PHOENIX ',CL012'Phoenix'
         DC    CL008'PING    ',CL012'TCP/IP'
         DC    CL008'PLO     ',CL012'Nomad'
         DC    CL008'POST    ',CL012'STK-POST'
         DC    CL008'PRINTO  ',CL012'MVS/IPO'
         DC    CL008'PRINTOFF',CL012'MVS/IPO'
         DC    CL008'PROFILE ',CL012'TSOE'
         DC    CL008'PRT     ',CL012'Vision'
         DC    CL008'PSAMPLE ',CL012'TCP/IP'
         DC    CL008'PSB     ',CL012'LRS-VPS'
         DC    CL008'PSI     ',CL012'SW-VIOPlus'
         DC    CL008'PSP     ',CL012'SW-VIOPlus'
         DC    CL008'PSS     ',CL012'LRS-VPS'
         DC    CL008'PST     ',CL012'STK-POST'
         DC    CL008'P25     ',CL012'STK-POST'
         DC    CL008'P32     ',CL012'LRS-VPS'
         DC    CL008'P33     ',CL012'STK-POST'
         DC    CL008'P34     ',CL012'STK-POST'
         DC    CL008'P38     ',CL012'STK-POST'
         DC    CL008'P40     ',CL012'STK-POST'
         DC    CL008'P42     ',CL012'STK-POST'
         DC    CL008'QIN     ',CL012'SW-QI'
         DC    CL008'QIO     ',CL012'SW-QI'
         DC    CL008'QUE     ',CL012'Nomad'
         DC    CL008'QWC     ',CL012'QuickRef'
         DC    CL008'QWI     ',CL012'QuickRef'
         DC    CL008'QWP     ',CL012'QuickRef'
         DC    CL008'RACFRW  ',CL012'RACF'
         DC    CL008'RACONVRT',CL012'TSOE'
         DC    CL008'RDB     ',CL012'Nomad'
         DC    CL008'READPSWD',CL012'DFSMS'
         DC    CL008'RECEIVE ',CL012'TSOE/IDTF'
         DC    CL008'RELAYTSO',CL012'RelayTSO'
         DC    CL008'RELEASE ',CL012'Freeware'
         DC    CL008'REMOTGEN',CL012'MVS'
         DC    CL008'REXEC   ',CL012'TCP/IP'
         DC    CL008'RFC1006 ',CL012'TCP/IP'
         DC    CL008'RHDC    ',CL012'CA-IDMS'
         DC    CL008'RMF     ',CL012'RMF'
         DC    CL008'RMO     ',CL012'CA-Deliver'
         DC    CL008'ROM     ',CL012'Nomad'
         DC    CL008'RPCGEN  ',CL012'TCP/IP'
         DC    CL008'RPCINFO ',CL012'TCP/IP'
         DC    CL008'RPG     ',CL012'RPG'
         DC    CL008'RPS     ',CL012'Omegamon'
         DC    CL008'RSH     ',CL012'TCP/IP'
         DC    CL008'RSP     ',CL012'Omegamon'
         DC    CL008'RTC     ',CL012'Omegamon'
         DC    CL008'RTH     ',CL012'Omegamon'
         DC    CL008'RTZ     ',CL012'Omegamon'
         DC    CL008'RUN     ',CL012'TSOE'
         DC    CL008'RXSOCKET',CL012'TCP/IP'
         DC    CL008'RXT     ',CL012'RexxTools'
         DC    CL008'RX1     ',CL012'CA-Optimizer'
         DC    CL008'SAB     ',CL012'SAS'
         DC    CL008'SAF     ',CL012'ACF2'
         DC    CL008'SAF1    ',CL012'Jobscan'
         DC    CL008'SAF2    ',CL012'Jobscan'
         DC    CL008'SAM     ',CL012'CA-View'
         DC    CL008'SAR     ',CL012'CA-View'
         DC    CL008'SAS     ',CL012'SAS'
         DC    CL008'SASS    ',CL012'CA-7'
         DC    CL008'SAX     ',CL012'SAS'
         DC    CL008'SBO     ',CL012'LRS-VPS'
         DC    CL008'SCA     ',CL012'CA-7'
         DC    CL008'SCRIPT  ',CL012'DCF'
         DC    CL008'SEA     ',CL012'SEA-PDSFast'
         DC    CL008'SECLOADA',CL012'DFSMS'
         DC    CL008'SEND    ',CL012'TSOE'
         DC    CL008'SFM     ',CL012'CA-7'
         DC    CL008'SGI     ',CL012'TSOE'
         DC    CL008'SGS     ',CL012'MVS/SADMP'
         DC    CL008'SGW     ',CL012'SAS'
         DC    CL008'SH      ',CL012'MVS/OE'
         DC    CL008'SIB     ',CL012'STK-IXFP'
         DC    CL008'SJE     ',CL012'CA-JARS'
         DC    CL008'SJU     ',CL012'CA-JARS'
         DC    CL008'SKP     ',CL012'STK-IXFP'
         DC    CL008'SLE     ',CL012'LRS-VPS'
         DC    CL008'SLI     ',CL012'STK-HSC'
         DC    CL008'SLO     ',CL012'STK-HSC'
         DC    CL008'SLS     ',CL012'STK-HSC'
         DC    CL008'SLU     ',CL012'STK-HSC'
         DC    CL008'SL7     ',CL012'CA-11'
         DC    CL008'SMC     ',CL012'TSOE'
         DC    CL008'SMF     ',CL012'MVS/SMF'
         DC    CL008'SMP     ',CL012'SMPE'
         DC    CL008'SMTPNJE ',CL012'TCP/IP'
         DC    CL008'SNA     ',CL012'CW-AbendAid'
         DC    CL008'SNP     ',CL012'CW-AbendAid'
         DC    CL008'SOM     ',CL012'SOM'
         DC    CL008'SOS     ',CL012'SAS'
         DC    CL008'SOU     ',CL012'Nomad'
         DC    CL008'SPA     ',CL012'Nomad'
         DC    CL008'SQU     ',CL012'CW-FileAid'
         DC    CL008'SRV     ',CL012'STK-LCM'
         DC    CL008'SR7     ',CL012'CA-Sort'
         DC    CL008'SSA     ',CL012'CA-7'
         DC    CL008'SSD     ',CL012'CA-7'
         DC    CL008'SSH     ',CL012'CA-7'
         DC    CL008'SSM     ',CL012'CA-7'
         DC    CL008'SSP     ',CL012'CA-7'
         DC    CL008'SSQ     ',CL012'CA-7'
         DC    CL008'SSR     ',CL012'CA-7'
         DC    CL008'SST     ',CL012'LRS-VPS'
         DC    CL008'SSU     ',CL012'CA-7'
         DC    CL008'SS3     ',CL012'Syncsort'
         DC    CL008'STA     ',CL012'SuperTracs'
         DC    CL008'STEPLIB ',CL012'Freeware'
         DC    CL008'STI     ',CL012'SuperTracs'
         DC    CL008'STM     ',CL012'SuperTracs'
         DC    CL008'STO     ',CL012'SuperTracs'
         DC    CL008'STP     ',CL012'SuperTracs'
         DC    CL008'STR     ',CL012'Strobe'
         DC    CL008'STS     ',CL012'SuperTracs'
         DC    CL008'SUBMIT  ',CL012'TSOE'
         DC    CL008'SVCSECT ',CL012'Nomad'
         DC    CL008'SVC0MVS ',CL012'SAS'
         DC    CL008'SVM     ',CL012'DFSMS'
         DC    CL008'SW$     ',CL012'SW-VIOPlus'
         DC    CL008'SWS     ',CL012'SW-VIOPlus'
         DC    CL008'SYNC    ',CL012'TSOE'
         DC    CL008'SYNX    ',CL012'Nomad'
         DC    CL008'SYSTEM  ',CL012'Freeware'
         DC    CL008'S13     ',CL012'LRS-VPS'
         DC    CL008'S91     ',CL012'CA-90s'
         DC    CL008'T$$     ',CL012'Arbiter'
         DC    CL008'TAM     ',CL012'Arbiter'
         DC    CL008'TAPEMAP ',CL012'Freeware'
         DC    CL008'TASID   ',CL012'Freeware'
         DC    CL008'TCN     ',CL012'Arbiter'
         DC    CL008'TELNET  ',CL012'TCP/IP'
         DC    CL008'TERMINAL',CL012'TSOE'
         DC    CL008'TEST    ',CL012'TSOE'
         DC    CL008'TESTSITE',CL012'TCP/IP'
         DC    CL008'TIM     ',CL012'Vision'
         DC    CL008'TLB     ',CL012'Vision'
         DC    CL008'TLMS    ',CL012'CA-TLMS'
         DC    CL008'TL0     ',CL012'CA-1'
         DC    CL008'TL2     ',CL012'CA-7'
         DC    CL008'TL7     ',CL012'CA-11'
         DC    CL008'TMS     ',CL012'CA-1'
         DC    CL008'TN      ',CL012'Nomad'
         DC    CL008'TNDBCSTM',CL012'TCP/IP'
         DC    CL008'TPS     ',CL012'Arbiter'
         DC    CL008'TRACERTE',CL012'TCP/IP'
         DC    CL008'TRANSMIT',CL012'TSOE/IDTF'
         DC    CL008'TRB     ',CL012'Arbiter'
         DC    CL008'TRC     ',CL012'Arbiter'
         DC    CL008'TRE     ',CL012'Arbiter'
         DC    CL008'TRF     ',CL012'Arbiter'
         DC    CL008'TRI     ',CL012'Arbiter'
         DC    CL008'TRJ     ',CL012'Arbiter'
         DC    CL008'TRN     ',CL012'Arbiter'
         DC    CL008'TRP     ',CL012'Arbiter'
         DC    CL008'TRQ     ',CL012'Arbiter'
         DC    CL008'TRR     ',CL012'Arbiter'
         DC    CL008'TRS     ',CL012'Arbiter'
         DC    CL008'TRT     ',CL012'Arbiter'
         DC    CL008'TRU     ',CL012'Arbiter'
         DC    CL008'TRV     ',CL012'Arbiter'
         DC    CL008'TRY     ',CL012'Arbiter'
         DC    CL008'TSOEXEC ',CL012'TSOE'
         DC    CL008'TSOFAIR ',CL012'CA-Librarian'
         DC    CL008'TSOLIB  ',CL012'TSOE'
         DC    CL008'TSS     ',CL012'CA-TopSecret'
         DC    CL008'TSX     ',CL012'Arbiter'
         DC    CL008'TVI     ',CL012'Nomad'
         DC    CL008'TXA     ',CL012'Arbiter'
         DC    CL008'TX4     ',CL012'Nomad'
         DC    CL008'T34     ',CL012'STK-POST'
         DC    CL008'T40     ',CL012'STK-POST'
         DC    CL008'T50     ',CL012'CA-1'
         DC    CL008'U#1     ',CL012'UACR'
         DC    CL008'UAB     ',CL012'UACR'
         DC    CL008'UAC     ',CL012'UACR'
         DC    CL008'UAN     ',CL012'UACR'
         DC    CL008'UAR     ',CL012'UACR'
         DC    CL008'UCBMAP  ',CL012'Freeware'
         DC    CL008'UCBSCAN ',CL012'Freeware'
         DC    CL008'UCC     ',CL012'CA'
         DC    CL008'UDC     ',CL012'UACR'
         DC    CL008'UDR     ',CL012'UACR'
         DC    CL008'UDS     ',CL012'UACR'
         DC    CL008'UDX     ',CL012'UACR'
         DC    CL008'UER     ',CL012'UACR'
         DC    CL008'UL7     ',CL012'CA-11'
         DC    CL008'UMR     ',CL012'UACR'
         DC    CL008'UNI     ',CL012'UACR'
         DC    CL008'UNP     ',CL012'Nomad'
         DC    CL008'UPF     ',CL012'Omegamon'
         DC    CL008'UTI     ',CL012'CA-Librarian'
         DC    CL008'UTL     ',CL012'UACR'
         DC    CL008'UUID@GEN',CL012'TCP/IP'
         DC    CL008'UWF     ',CL012'SAS'
         DC    CL008'UWI     ',CL012'SAS'
         DC    CL008'UWU     ',CL012'SAS'
         DC    CL008'UXA     ',CL012'Nomad'
         DC    CL008'UXD     ',CL012'Nomad'
         DC    CL008'UXP     ',CL012'Nomad'
         DC    CL008'U01     ',CL012'CA-1'
         DC    CL008'U1#     ',CL012'UACR'
         DC    CL008'U11     ',CL012'CA-11'
         DC    CL008'U7      ',CL012'CA-7'
         DC    CL008'V$      ',CL012'SW-VIOPlus'
         DC    CL008'VA      ',CL012'SW-VA'
         DC    CL008'VA7     ',CL012'LRS-VPS'
         DC    CL008'VDC     ',CL012'SW-VA'
         DC    CL008'VDS     ',CL012'Nomad'
         DC    CL008'VHL     ',CL012'SW-VIOPlus'
         DC    CL008'VIA     ',CL012'VIACenter'
         DC    CL008'VIO     ',CL012'SW-VIOPlus'
         DC    CL008'VLE     ',CL012'CA-View'
         DC    CL008'VL7     ',CL012'LRS-VPS'
         DC    CL008'VMC     ',CL012'LRS-VPS'
         DC    CL008'VM7     ',CL012'LRS-VPS'
         DC    CL008'VPS     ',CL012'LRS-VPS'
         DC    CL008'VP7     ',CL012'LRS-VPS'
         DC    CL008'VSAMMOD ',CL012'SW-QI'
         DC    CL008'VSAPL   ',CL012'VSAPL'
         DC    CL008'VSP     ',CL012'CA-JARS'
         DC    CL008'VS7     ',CL012'LRS-VPS'
         DC    CL008'VTOC    ',CL012'Freeware'
         DC    CL008'VTP     ',CL012'LRS-VPS'
         DC    CL008'WAITABIT',CL012'Freeware'
         DC    CL008'XIO     ',CL012'SW-VIOPlus'
         DC    CL008'XMS     ',CL012'CA-View'
         DC    CL008'XSAMP   ',CL012'TCP/IP'
         DC    CL008'XSP     ',CL012'Nomad'
         DC    CL008'XTB     ',CL012'DFSMS/3800'
         DC    CL008'XXX     ',CL012'CA-1'
         DC    CL008'X11     ',CL012'CA-View'
         DC    CL008'X20     ',CL012'CA-View'
         DC    CL008'ZAP     ',CL012'Freeware'
         DC    CL008'ZZZ     ',CL012'LRS-VPS'
         $UDP                      User defined products
TBLPRODC EQU   (*-TBLPROD)/TBLPRODE Product table entry count
         DC    CL008'????????',CL012'Unknown'
TBLPRODL EQU   (*-TBLPROD)         Product table length
**********************************************************************
         TITLE 'Dummy Control Section (DSECT)'
**********************************************************************
         PRINT OFF                 Stop source and object printing
         CSVMODI                   Contents module information (MODI)
         CVT   DSECT=YES,LIST=YES  Communications Vector Table (CVT)
         IHAGDA                    Global Data Area (GDA)
         IHALLT                    LNKLST Table (LLT)
         IHALPAT                   LPALST Table (LPAT)
         IHAPDS PDSBLDL=NO         PDS Directory Entry (PDSE)
         PRINT ON                  Resume source and object printing
         END
//LINK    EXEC PGM=HEWL,PARM='MAP,LET,LIST',COND=(0,NE)
//SYSLIN    DD DSN=&&OBJECT,DISP=(OLD,DELETE)
//SYSLMOD   DD DISP=SHR,DSN=ZTGP01.MJCUTIL.LINKLIB(LPALNK) <=== DEST
//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSPRINT  DD SYSOUT=*,OUTPUT=*.JESDS
