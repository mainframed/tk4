DEL2     TITLE 'ARCHIVER --- DELETE FUNCTION'
*---------------------------------------------------------------------*
*---     THIS SUBROUTINE OF ARCHDEL WILL DELETE 'BACK LEVEL'       ---*
*---     ITEMS IF ALIASES EXIST.  WHAT IT ACTUALLY DOES IS TO      ---*
*---     'HIDE' THE ITEM TO BE DELETED BEHIND ITS FIRST ALIAS      ---*
*---     THEN DELETE THE SELECTED BACK-LEVEL ITEM.  THE NET        ---*
*---     RESULT IS THAT ONLY THE ITEM KEY DISAPPEARS FROM THE      ---*
*---     INDEX LISTING.  THE DATA AND NOTES ARE STILL PRESENT BUT  ---*
*---     ARE UNDER A DIFFERENT SET OF QUALIFIERS. IF NO ALIASES    ---*
*---     EXIST FOR THE SELECTED ITEM, A MESSAGE IS PRODUCED AND    ---*
*---     NO ACTION IS TAKEN.                                       ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDEL2 CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY #ARCBITS
         USING ARCHDEL2,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             DEL2 ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDEL2,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             DEL2 NEW SAVE AREA POINTER
         L     R14,4(,R13)         RESTORE BACK POINTER
         L     R14,12(,R14)        RESTORE ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         XC    FCOUNT,FCOUNT       CLEAR FUNCTION RECORD COUNT
         XC    MCNT,MCNT           AND MEMBER COUNT
         XC    ACNT,ACNT           AND ALIAS COUNT
         MVC   VS1MODE,=CL8'OUTPUT' SET THE I/O MODE
         LA    R1,VSAM1DD          LOAD THE PARM POINTER
         LA    R0,0                AND THE 'OPEN' FLAG
         CALL  ARCHVSOP            CALL THE 'OPEN' FUNCTION
         LTR   R15,R15             OPEN OK ??
         BNZ   ENDITALL            NOPE; CAN'T WORK
         L     @RPL1,RPL1
         L     @RPL2,RPL2
         L     @RPL3,RPL3
         L     @BUF1,VS1BUF1
         L     @BUF2,VS1BUF2
         L     @BUF3,VS1BUF3
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE JOB. THESE ARE THE BASIC STEPS     ---*
*---     INVOLVED.  DETAILS TO FOLLOW.                             ---*
*---                                                               ---*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD THAT IS     ---*
*---        NOT AN ALIAS RECORD.                                   ---*
*---                                                               ---*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---                                                               ---*
*---     3. SAVE THE KEY, INCLUDING THE SEQUENCE NUMBER TO THE     ---*
*---        VALUE IN BLDLAREA. DECREMENT THE VERSION NUMBER BY     ---*
*---        ONE AND SEARCH FOR A HEADER THAT MATCHES FOR THE       ---*
*---        LENGTH SPECIFIED BY 'RECPKEY'. THIS IS A BACK LEVEL    ---*
*---        AND SHOULD BE DELETED.                                 ---*
*---                                                               ---*
*---     4. LOOK FOR AN ALIAS FOR THIS 'BACK-LEVEL' ITEM. IF FOUND,---*
*---        DELETE THE ALIAS AND COPY THE ITEM, RENAMING TO THE    ---*
*---        KEY VALUES FROM THE ALIAS.                             ---*
*---                                                               ---*
*---     5. CALL ARCHERAS TO ERASE THE 'BACK-LEVEL' ITEM WE'VE     ---*
*---        FOUND, THEN GO BACK AND CHECK FOR ANOTHER              ---*
*---        'BACK-LEVEL' COPY OF THIS ITEM.  REPEAT STEPS 4 AND 5  ---*
*---        UNTIL NO FURTHER 'BACK-LEVEL' COPIES OF THIS ITEM ARE  ---*
*---        FOUND.                                                 ---*
*---------------------------------------------------------------------*
MEMBERS  DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        SET TO HEADER TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),AREA=(@BUF1),AREALEN=(*,VS1LIM),            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
*---------------------------------------------------------------------*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD.            ---*
*---------------------------------------------------------------------*
NEXTHDR  DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,NEXTHDR SKIP ALIAS RECORDS ---
*---------------------------------------------------------------------*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---------------------------------------------------------------------*
NEWHDR   DS    0H
         LA    R1,RECN             POINT TO THE HEADER
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            GO CHECK: DO WE PROCESS THIS ITEM ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   NEXTHDR             NOPE ---
*---------------------------------------------------------------------*
*---     3. SAVE THE KEY, INCLUDING THE SEQUENCE NUMBER TO THE     ---*
*---        VALUE IN BLDLAREA. READ THE NEXT HEADER AND CHECK FOR  ---*
*---        A MATCHING KEY, UP TO BUT NOT INCLUDING THE VERSION    ---*
*---        NUMBER. IGNORE ALIAS RECORDS.                          ---*
*---------------------------------------------------------------------*
         MVC   BLDLAREA(RECKLEN),RECTT SAVE THAT KEY ---
DELA     DS    0H
         GET   RPL=(@RPL1)         READ ANOTHER HEADER
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE
         #IF   RSRALIAS,ON,DELA    SKIP ALIAS RECORDS ---
         CLC   RECTT(RECPKEY),BLDLAREA SAME ITEM DIF. VERSION ??
         BNE   NEWHDR              NOPE ---
*---------------------------------------------------------------------*
*---     ITEM TO BE DELETED HAS BEEN FOUND. START BY CHECKING FOR  ---*
*---     AN ALIAS TO 'ALTER' IT TO.  ALSO SAVE ITS KEY IN BUF3.    ---*
*---------------------------------------------------------------------*
         #IF   RSRHALS,OFF,NOALIAS    NO ALIASES FOR THIS ITEM
         XC    0(49,@BUF2),0(@BUF2)   START AT THE BEGINNING
         POINT RPL=(@RPL2)
         DROP  @BUF1
         USING REC,@BUF2
ASRCH    DS    0H
         GET   RPL=(@RPL2)         READ A RECORD
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   DELA                NOPE; NO ALIAS FOR THIS ITEM
         #IF   RSRALIAS,OFF,ASRCH  SKIP NON-ALIAS HEADERS
         CLC   RECN-REC(44,@BUF1),RECAN ALIAS FOR THIS ITEM ??
         BNE   ASRCH               NOPE ---
*---------------------------------------------------------------------*
*---     WE FOUND AN ALIAS. NOW DELETE THE ALIAS RECORD AND ALTER  ---*
*---     THE ITEM WE ARE DELETING SUCH THE THE ALIAS IS REPLACED   ---*
*---     BY THE ITEM.                                              ---*
*---------------------------------------------------------------------*
         MODCB RPL=(@RPL2),        RESET RPL2 FOR UPDATE/INSERT        X
               OPTCD=(DIR,FKS,KGE,SYN,UPD),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         GET   RPL=(@RPL2)         RE-READ THE RECORD, FOR UPDATE
         ERASE RPL=(@RPL2)
         ENDREQ RPL=(@RPL2)
         CALL  ARCHALT,(1(,@BUF1),1(,@BUF2)),MF=(E,CALLIST)
*---------------------------------------------------------------------*
*---     POINT ALL ALIASES FOR THE OLD ITEM AT THE NEW ITEM       ----*
*---     CREATED BY ARCHALT.                                      ----*
*---------------------------------------------------------------------*
         DROP  @BUF2
         USING REC,@BUF3           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF3),0(@BUF3) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF3),                                            X
               AREA=(@BUF3),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL3)         GET TO IT
AA1      DS    0H
         GET   RPL=(@RPL3)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   AA2                 NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   AA2                 NOPE; ALL DONE ---
         #IF   RSRALIAS,OFF,AA1    NOT AN ALIAS RECORD
         CLC   RECAN(44),1(@BUF1)  ALTER THIS ONE ??
         BNE   AA1                 NOPE ---
         MVC   RECAN(44),1(@BUF2)  REPLACE ALIAS FIELDS
         PUT   RPL=(@RPL3)         WRITE THE UPDATED RECORD
         LTR   R15,R15             ANYTHING ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         B     AA1                 LOOP FOR MORE ---
AA2      DS    0H
         ENDREQ RPL=(@RPL3)
         DROP  @BUF3
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)
*---------------------------------------------------------------------*
*---     NOW WE'RE READY TO DELETE THE ITEM'S ORIGINAL RECORDS.    ---*
*---     USE THE ARCHERAS ROUTINE TO DO THE ACTUAL DELETE.         ---*
*---------------------------------------------------------------------*
         USING REC,@BUF1
         LA    R1,RECTT            POINT TO THE DELETABLE ITEM'S KEY
         CALL  ARCHERAS            GO ERASE THE ITEM
         #FORMAT RECTT,,DELMBR
         #PUT  LINE                AND OUTPUT THE MESSAGE
         DROP  @BUF1
         USING REC,@BUF2
         #FORMAT RECTT,,DELMOV,OUT=LINE+10
         #PUT  LINE                AND OUTPUT THE MESSAGE
         DROP  @BUF2
         L     R15,MCNT            LOAD THE MEMBER COUNT
         LA    R15,1(,R15)
         ST    R15,MCNT            SAVE UPDATED COUNT
         B     DELA                AND TRY FOR ANOTHER ITEM
NOALIAS  DS    0H
         USING REC,@BUF1
         #FORMAT RECTT,,DELNOA
         #PUT  LINE                AND OUTPUT THE MESSAGE
         B     DELA                LOOK FOR ANOTHER ---
DELNOA   DC    AL1(DELNOAE-DELNOAS)
DELNOAS  DC    C' NO ALIASES EXIST. NO ACTION TAKEN.'
DELNOAE  EQU   *
         DROP  @BUF1               DISCARD RECORD DSECT
ENDITALL DS    0H
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,MCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END2     DS    0H
         CLC   ACB1,=F'0'          WAS ACB EVER OPENED ??
         BE    NOACB               NOPE ---
         LA    R1,VSAM1DD          POINT TO THE DDNAME
         LA    R0,4                SET 'CLOSE' REQUEST
         CALL  ARCHVSOP            CALL THE VSAM 'CLOSE' ROUTINE
NOACB    DS    0H
         XC    CHAIN,CHAIN         CLEAR THE CHAIN POINTER
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
DELMBR   DC    AL1(DELMSGE-DELMSG)
DELMSG   DC    C' DELETE REQUEST COMPLETE.'
DELMSGE  EQU   *
DELMOV   DC    AL1(DELMOVE-DELMOVM)
DELMOVM  DC    C' NOW CONTAINS THE COMPLETE ITEM.'
DELMOVE  EQU   *
MCMSG    DC    CL133' '
         ORG   MCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ITEMS(S) PROCESSED.'
         ORG
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
