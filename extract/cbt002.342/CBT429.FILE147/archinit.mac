INIT     TITLE 'ARCHIVER --- WORK AREA/TIME/DATE SETUP '
*---------------------------------------------------------------------*
*---     (C) COPYRIGHT 1989, RICHARD A. FOCHTMAN JR., WOODRIDGE,   ---*
*---           ILLINOIS                                            ---*
*---                                                               ---*
*---     THIS SUBROUTINE HAS ONLY ONE PURPOSE IN THE ARCHIVER:     ---*
*---     SETUP THE CONSTANTS, ETC. NECESSARY TO THE BASIC          ---*
*---     FUNCTIONS IN GENERAL.  THAT IS, THE TIME, DATE, SYSIN     ---*
*---     AND SYSPRINT DCB'S, BLANK OUT THE VARIOUS PRINT LINE      ---*
*---     AREAS, ETC.  THIS IS PERFORMED ONCE FOR EACH RUN OF       ---*
*---     THE ARCHIVER.  FOR THAT REASON, THIS IS A SEPARATE        ---*
*---     LOAD MODULE OF THE ARCHIVER, USED AND THEN DELETED        ---*
*---     AT THE BEGINNING OF EACH ARCHIVER EXECUTION.              ---*
*---                                                               ---*
*---     PROGRAM ATTRIBUTES: NON-REENTRANT, NON-REUSABLE,          ---*
*---           NON-REFRESHABLE.                                    ---*
*---------------------------------------------------------------------*
ARCHINIT CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         USING ARCHINIT,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             LOAD ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHINIT,R11        DEFINE THE NEW BASE REGISTER
         GETMAIN R,LV=72           GRAB STORAGE FOR SAVE AREA
         LA    R14,0(,R1)          KLUDGE FOR STD HDR
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             LOAD NEW SAVE AREA POINTER
         L     R14,4(,R13)         RELOAD BACK POINTER
         L     R14,12(,R14)        RELOAD ORIG. REG 14
         COPY  #ARCBITS            COPY THE BIT-DEFINES
         LA    R3,WALEN            LOAD SIZE OF WORK AREA
         GETMAIN R,LV=(3)          GRAB ANOTHER CHUNK OF STORAGE
         LR    R2,R1               COPY ITS ADDRESS
         LR    R4,R2
         SR    R5,R5
         MVCL  R2,R4               AND CLEAR IT OUT
         LR    R12,R1              AND LOAD WORK-AREA DSECT BASE
         USING MAINWK,R12          BASE THE WORK-AREA DSECT
         MVC   IOSEP,=X'47F0E000'  NO SEPARATOR ROUTINES
         MVC   ENDSEP,=X'47F0E000'   DEFINED YET ---
         MVC   MAINSIZE,WALEN      COPY SIZE INTO WORD 1
         ST    R12,ARCHWK          SAVE MAIN WORK-AREA POINTER
         MVC   EYEBALL,=CL4'ARCW'
         #SET  REPL,ON              REPLACE DUPS. DURING RELOAD   DFLT
         #SET  RETA,ON              RETAIN ALIAS INFORMATION      DFLT
         #SET  SHHDR,ON             PROCESS HEADERS               DFLT
         #SET  ULMODS,ON            RECFM=U MEANS LMODS           DFLT
         MVI   TITLE1,C' '         START WITH A BLANK
         MVC   TITLE1+1(120),TITLE1 CLEAR THE AREA
         MVC   TITLE2,TITLE1       ALSO SECOND AND
         MVC   TITLE3,INIT14       COPY IN THE USUAL SUBTITLE
         MVC   LINE,TITLE1         ALSO OUTPUT LINE AREA
         MVC   GENWK(LTIMEL),LTIME MOVE IN PARM LIST
         XC    TODVAL(16),TODVAL   CLEAR THE RETURN AREA
         TIME  DEC,TODVAL,LINKAGE=SYSTEM,                          Y2K X
               MF=(E,GENWK),DATETYPE=MMDDYYYY                      Y2K
         EXTRACT TIOTA,'S',FIELDS=TIOT,MF=(E,CALLIST) LOCATE THE TIOT
         L     R1,TIOTA            LOAD THE TIOT POINTER
         LA    R1,24(,R1)          POINT TO THE FIRST TIOE
         ST    R1,TIOTA            SAVE UPDATED ADDRESS
*---------------------------------------------------------------------*
*---     FIND OUT IF SYSPUNCH IS PRESENT                           ---*
*---------------------------------------------------------------------*
LOCPNCH  DS    0H
         CLI   0(R1),0             END OF TIOT ??
         BE    NOPNCH              YES ---
         CLC   4(8,R1),=CL8'SYSPUNCH'  IS DDNAME SYSPUNCH ??
         BE    GOTPNCH             YES ---
         LA    R15,0               CLEAR A WORK REGISTER
         IC    R15,0(,R1)          INSERT TIOT LENGTH
         AR    R1,R15              POINT TO NEXT TIOE
         B     LOCPNCH
GOTPNCH  DS    0H
         #SET  PUNCH,ON
NOPNCH   DS    0H
         LA    R0,INIT7            LOAD THE LENGTH OF A QSAM DCB
         AH    R0,=H'4'            ADD A WORD
         GETMAIN R,LV=(0)          AND GRAB IT'S CORE
         ST    R0,0(,R1)           STORE AREA LENGTH
         LA    R1,4(,R1)
         MVC   0(INIT7,R1),INIT6   MOVE IN THE DCB
         ST    R1,PRTDCB           STORE IN THE WORK AREA
         LR    R3,R1               AND COPY IT'S ADDRESS
         MVI   PRTDCB,X'80'        LAST-ENTRY FLAG FOR OPEN PARMLIST
         OPEN  ((3),OUTPUT),MF=(E,PRTDCB)      OPEN THE LISTING DCB
         TM    48(R3),X'10'        DID SYSPRINT OPEN ??
         BO    INIT1               YES, NOW CHECK SYSIN FLAG
         WTO   'SYSPRINT DCB DID NOT OPEN. CHECK DD STATEMENT'
         LA    R3,0
         ABEND 1
INIT1    DS    0H
         LA    R0,INIT9            LOAD DCB LENGTH
         AH    R0,=H'4'            ADD A WORD
         GETMAIN R,LV=(0)          GRAB STORAGE FOR DCB
         ST    R0,0(,R1)           STORE AREA LENGTH
         LA    R1,4(,R1)
         ST    R1,CTLIN            SAVE ITS ADDRESS
         MVC   0(INIT9,R1),INIT8 MOVE IN THE DCB
         MVI   CTLIN,X'80'         FLAG END OF OPEN LIST
         OPEN  (,INPUT),MF=(E,CTLIN) AND OPEN THE DCB
         ZAP   PAGENO,=P'0'        INIT THE PAGE COUNTER
         ZAP   LSTLIN#,=P'99'      FORCE NEW-PAGE CONTROL
         ZAP   LINECNT,=P'60'      MOVE IN THE DEFAULT
         LM    R0,R1,TODVAL        LOAD THE TIME VALUE             Y2K
         SRDL  R0,40               DROP OFF THE FRACTIONS          Y2K
         SLL   R1,4                MAKE FROM FOR DEC. SIGN VALUE   Y2K
         O     R1,=A(X'0F')        MAKE A POSITIVE SIGN            Y2K
         STM   R0,R1,TIME          SAVE IN CLOCK VALUE             Y2K
         L     R1,TODVAL+8         LOAD THE DATE VALUE             Y2K
         LA    R0,R0               CLEAR HIGH-ORDER PART           Y2K
         SLDL  R0,4                MAKE ROOM FOR A SIGN            Y2K
         O     R1,=A(X'0F')        INSERT POSITIVE SIGN            Y2K
         STM   R0,R1,DATE          AND SAVE THE VALUE FOR LATER    Y2K
         LR    R15,R12             COPY THE WORK AREA ADDRESS
         LR    R1,R13              COPY THE SAVE AREA ADDRESS
         L     R13,4(,R13)         POINT TO PREVIOUS S.A.
         ST    R15,16(,R13)        PASS W.A. ADDR AS RETURN CODE
         FREEMAIN R,LV=72,A=(1)    FREE THE SAVE AREA
         LM    R14,R12,12(R13)     RESTORE ENTRY REGISTERS
         MVI   12(R13),255
         BR    R14                 AND RETURN TO ARCHCTL
         LTORG ,                   DISPLAY THE LITERALS SO FAR
         SPACE 3
INIT6    DCB   DSORG=PS,                                               X
               MACRF=PM,                                               X
               EXLST=INIT10,                                           X
               DDNAME=SYSPRINT,                                        X
               RECFM=FBA,                                              X
               LRECL=133,                                              X
               EROPT=ABE
INIT7    EQU   *-INIT6
INIT8    DCB   DSORG=PS,                                               X
               MACRF=GM,                                               X
               EXLST=INIT10,                                           X
               DDNAME=SYSIN,                                           X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EROPT=ABE
INIT9    EQU   *-INIT8
INIT10   DC    0F'0'
         DC    X'85',AL3(INIT11)
         PUSH  USING
         USING INIT11,R15
INIT11   DS    0H
         LH    R6,62(,R1)          LOAD DCB BLKSIZE ??
         LTR   R6,R6               IS BLKSIZE STILL ZERO ??
         BNZ   INIT12              NO; SEE IF MULTIPLE OF LRECL
         MVC   62(2,R1),82(R1)     COPY LRECL TO BLKSIZE
         BR    R14                 RETURN TO OPEN/CLOSE/EOV
INIT12   DS    0H
         SRDA  R6,32               SHIFT BLKSIZE TO DIVIDEND REGISTER
         LH    R5,82(,R1)          LOAD LRECL VALUE
         DR    R6,R5               COMPUTE BLOCKING FACTOR
         LTR   R7,R7               QUOTIENT ZERO ??
         BNZ   INIT13              NOPE ---
         LA    R7,1                ASSUME 1 RECORD/BLOCK
INIT13   DS    0H
         MH    R7,82(,R1)          TIMES LRECL
         STH   R7,62(,R1)          STORE COMPUTED BLOCK SIZE
         BR    R14                 RETURN TO OPEN/CLOSE/EOV
         DROP  R15
         POP   USING
LTIME    TIME  LINKAGE=SYSTEM,MF=L
LTIMEL   EQU   *-LTIME
*
INIT14   DC    CL2' '
         DC    CL10'  MEMBER '                                     HEAD
         DC    CL1'-'
         DC    CL10'  GROUP  '                                     HEAD
         DC    CL1'-'
         DC    CL10'  SUBGRP '                                     HEAD
         DC    CL1'-'
         DC    CL10'   TYPE  '                                     HEAD
         DC    CL1'-'
         DC    CL12'       VRSN '                                  HEAD
         DC    CL8' ACTION '
         DC    CL70' '
DTIME    DS    F
DDATE    DS    F
WALEN    DC    A(ENDMAIN-MAINWK)
         COPY  ##ARCHWK
         DCBD  DSORG=(PS,PO)
         END
