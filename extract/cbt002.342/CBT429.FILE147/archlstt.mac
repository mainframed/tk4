LISTT    TITLE 'ARCHIVER --- LISTT FUNCTION'
*---------------------------------------------------------------------*
*---     ALL LISTT REQUESTS ARE ROUTED HERE FOR FURTHER            ---*
*---     PROCESSING.  OPTIONS INCLUDE LISTING JUST THE HEADERS,    ---*
*---     HEADERS AND NOTES, HEADERS AND DATA, OR HEADERS, NOTES    ---*
*---     AND DATA.  ALTHOUGH A SUBTITLE IS PRESENT GIVING COLUMN   ---*
*---     HEADINGS, THESE ARE MEANINGFUL ONLY FOR ITEM HEADER       ---*
*---     DATA.  THE NOTE LISTING IS A BASIC LINE-FOR-LINE LISTING  ---*
*---     OF THE NOTE DATA ORIGINALLY ADDED TO THE ITEM, WITH A     ---*
*---     LEADING LINE NUMBER AND FLAG CHARACTER.  THE DATA         ---*
*---     LISTING MAY TAKE ON EITHER OF TWO FORMATS.  EITHER A HEX  ---*
*---     LIST, WITH RECORD NUMBER AND OFFSET WITHIN THE RECORD,    ---*
*---     OR A CHARACTER LISTING, EXTENDED ACROSS MULTIPLE LINES    ---*
*---     AS NEEDED FOR LONG RECORDS.  A FUTURE ENHANCEMENT WILL    ---*
*---     ALLOW ANY PDS DIRECTORY INFORMATION STORED IN THE HEADER  ---*
*---     RECORD TO BE LISTED AS PART OF THE HEADER LISTING.        ---*
*---     (INCLUDING ALIAS DATA.)                                   ---*
*---------------------------------------------------------------------*
         SPACE 3
ARCHLSTT CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         USING ARCHLSTT,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             LOAD ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHLSTT,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             LOAD NEW SAVE AREA POINTER
         L     R14,4(,R13)         RELOAD BACK POINTER
         L     R14,12(,R14)        RELOAD ORIG. REG 14
         LA    R10,0(,R11)         COPY ORIGINAL BASE REGISTER
         AH    R10,PASSIT-2        BUMP BY A BASE'S WORTH
         USING ARCHLSTT+4096,R10   AND DECLARE IT
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         COPY #ARCBITS
         XC    MCNT,MCNT           INIT. THE ITEM COUNT
         ZAP   LSTLIN#,=P'99'      START ON A NEW PAGE
         L     R0,=F'32768'        CMPWRK LENGTH
         LR    R3,R0               AND COPY IT
         ICM   R0,8,=AL1(10)       SET THE SUBPOOL NUMBER
         GETMAIN R,LV=(0)          GRAB A EXPAND WORK AREA
         STM   R0,R1,CMPWRKL       SAVE ADDRESS AND LENGTH
         LR    R2,R1               COPY ITS ADDRESS
         LA    R15,0               PAD/SOURCE LENGTH = ZERO
         MVCL  R2,R14              CLEAR THE AREA !!
         BAL   R14,NVSOPEN         GO OPEN THE ARCHIVER-EXPORT TAPE
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE PROCESSING. THE BASIC PROCESS IS   ---*
*---           THIS:                                               ---*
*---                                                               ---*
*---     1. USING THE CONTROL INFORMATION WE WERE GIVEN AND THE    ---*
*---        INFORMATION WE'VE DEVELOPED, LOCATE THE HEADER RECORD  ---*
*---        FOR THE FIRST MEMBER. WE'LL USE THE VS1BUF2 AREA FOR   ---*
*---        HEADER/KEY CONSTRUCTION.                               ---*
*---                                                               ---*
*---     2. LOOP THROUGH THE MEMBER, READING THE RECORDS AND       ---*
*---        EXPLODING THEM INTO THE COMPRK AREA, WRITING EACH      ---*
*---        'LOGICAL' RECORD AS IT BECOMES AVAILABLE.              ---*
*---------------------------------------------------------------------*
         MVC   TITLE3,SH10         REPORT SUBTITLE LINE
MEMBERS  DS    0H
NEXTHDR  DS    0H
         L     R1,NDCBA            POINT TO THE DCB
         GET   (1)                 READ A RECORD
         LH    R3,0(,R1)           LOAD ITS LENGTH
         LA    R3,0(R3,R1)         POINT TO RECORD END
         BCTR  R3,R0               BACK UP TO LAST BYTE
         LA    R2,4(,R1)           POINT TO RECORD START
RCHKHDR  DS    0H
         L     R1,CALLIST
         CLC   0(4,R2),=C'SIZE'    IS THIS A SIZE MARKER ??
         BNE   NOTSIZE             NOPE ---
         MVC   LINE,DASHES
         #PUT  LINE
         L     R0,4(,R2)           LOAD THE SIZE VALUE
         CVD   R0,DWORK            DECIMALIZE IT
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE,MSGL           COPY MESSAGE DATA TO LINE
         ED    LINE+38(8),DWORK+4  INSERT SIZE IN LINE
         #PUT  LINE                OUTPUT THE MESSAGE
         MVC   LINE,DASHES         ANOTHER LINE OF DASHES
         #PUT  LINE
         B     NEXTHDR             GO FOR ANOTHER RECORD
DASHES   DC    C' '
         DC    132C'-'
MSGL     DC    CL133' '
         ORG   MSGL+1
         DC    C'NEW CLUSTER INPUT. MAXIMUM LRECL WAS '
         DC    X'4020202020202020'
         DC    C' BYTES.'
         ORG
NOTSIZE  DS    0H
         CLI   0(R2),#RTHDR        HEADER RECORD ??
         BNE   CHKNOTE             NOPE; POSSIBLE NOTE RECORD
         LA    R1,1(,R2)           POINT TO THE HEADER
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            GO CHECK: DO WE PROCESS THIS ITEM ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   NEXTHDR             NOPE ---
         MVC   BLDLAREA(RECKLEN),0(R2) COPY TO BLDL AREA
         LA    R1,0(,R2)           POINT TO THE HEADER RECORD
         BAL   R9,LISTHDR          CHECK/LIST HEADER RECORD
         B     NEXTHDR             GO GET THE NEXT RECORD
CHKNOTE  DS    0H
         CLI   0(R2),#RTNOTE       IS THIS A 'NOTE' RECORD ??
         BNE   CHKDATA             NOPE; MAYBE A DATA TYPE
         #IF   PRCCM,OFF,NEXTHDR
         CLC   1(RECKLEN-5,R2),BLDLAREA+1 STILL THE SAME ITEM ??
         BNE   RCHKHDR             NOPE ---
         LA    R6,RECKLEN(,R2)     POINT TO ITEM DATA
         LR    R8,R3               COPY END POINTER
NOTE2    DS    0H
         L     R4,CMPWRK           POINT TO EXPAND OUTPUT AREA
         LA    R2,0
         ICM   R2,3,3(R6)          LOAD EXPANDED RECORD LENGTH
         ST    R2,CALLIST+12       SAVE NEW RECORD LENGTH
         LA    R3,5(,R6)           POINT TO ACTUAL RECORD DATA
         CALL  EXPAND,((4),CALLIST+12,(3)),MF=(E,CALLIST)
         LR    R0,R2               COPY THE RECORD LENGTH
         LR    R1,R4               AND ITS ADDRESS
         BAL   R9,LSTCHAR          CHARACTER LIST OF RECORD
         ICM   R2,7,0(R6)          INSERT SEGMENT LENGTH
         LA    R6,3(R2,R6)         GO TO NEXT SEGMENT
         CR    R6,R8               ANOTHER SEGMENT TO PROCESS ??
         BL    NOTE2               YES ---
         B     NEXTHDR             NOPE ---
CHKDATA  DS    0H
         CLI   0(R2),#RTDATA       IS THIS A 'DATA' TYPE ??
         BNE   BADREC
         #IF   SHITEM,OFF,NEXTHDR
         CLC   1(RECKLEN-5,R2),BLDLAREA+1 STILL THE SAME ITEM ??
         BNE   RCHKHDR             NOPE ---
         LR    R8,R3               COPY LAST-BYTE-POINTER
         LA    R6,RECKLEN(,R2)     POINT TO DATA START
DATA2    DS    0H
         L     R4,CMPWRK           POINT TO EXPAND OUTPUT AREA
         LA    R2,0
         ICM   R2,3,3(R6)          LOAD EXPANDED RECORD LENGTH
         ST    R2,CALLIST+12       SAVE NEW RECORD LENGTH
         LA    R3,5(,R6)           POINT TO ACTUAL RECORD DATA
         CALL  EXPAND,((4),CALLIST+12,(3)),MF=(E,CALLIST)
         LR    R0,R2               COPY THE RECORD LENGTH
         LR    R1,R4               AND ITS ADDRESS
         #IF   SHHEX,ON,DATAH
         BAL   R9,LSTCHAR          CHARACTER LIST OF RECORD
         B     DATAL               AND CONTINUE
DATAH    DS    0H
         BAL   R9,LSTHEX           HEX LIST OF RECORD(S)
DATAL    DS    0H
         ICM   R2,7,0(R6)          INSERT SEGMENT LENGTH
         LA    R6,3(R2,R6)         GO TO NEXT SEGMENT
         CR    R6,R8               ANOTHER SEGMENT TO PROCESS ??
         BL    DATA2               YES ---
         B     NEXTHDR             NOPE ---
BADREC   DS    0H
         #ERR  MSG=13
         B     NEXTHDR
ENDITALL DS    0H
         #ERR  MSG=11
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END1                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,TCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END1     DS    0H
         CLC   NDCBA,=F'0'         WAS DCB EVER OPENED ??
         BE    NOACB               NOPE ---
         BAL   R14,NVSCLOSE        CLOSE THE IMPORT TAPE
NOACB    DS    0H
         FREEMAIN R,SP=10          RELEASE ALL MY STORAGE
         XC    CMPWRKL(8),CMPWRKL  FORGET THOSE VALUES, TOO
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
         TITLE 'VSAM CLOSE AND CONTROL-BLOCK FREEMAINS'
*---------------------------------------------------------------------*
*---     THIS LITTLE LOCAL SUBROUTINE IS THE COUNTERPART TO THE    ---*
*---     NVSOPEN ROUTINE. HERE, THE NONVSAM DATASET IS CLOSED      ---*
*---     AND ALL RELATED STORAGE, WORK AREAS, ETC. ARE FREE'D.     ---*
*---     ALL RELATED VALUES IN THE ##ARCHWK AREA ARE ALSO RESET.   ---*
*---------------------------------------------------------------------*
NVSCLOSE DS    0H
         STM   R14,R12,IOSAVE      SAVE ENTRY REGISTERS
         OI    NDCBA,X'80'         MARK AS LAST FOR CLOSE
         CLOSE ,MF=(E,NDCBA)       CLOSE THE DATASET
         L     R2,NDCBA            LOAD THE DCB ADDRESS
         FREEPOOL (2)              RELEASE THE BUFFER POOL
         XC    NDCBA,NDCBA         AND CLOBBER THAT POINTER
         LM    R14,R12,IOSAVE      RESTORE THE REGISTERS
         BR    R14                 RETURN TO (LOCAL) CALLER
         TITLE 'OPEN NONVSAM INPUT DATASET '
         SPACE 3
NVSOPEN  DS    0H
         STM   R14,R12,IOSAVE      SAVE THE ENTRY REGISTERS
*---
*---     BUILD A DCB, TO START, FOR DSORG CHECKING
*---
         GETMAIN R,LV=QSDCBL,SP=10 GRAB STORAGE FOR BPAM DCB
         ST    R1,NDCBA            AND STORE ADDRESS IN ARCHIVWA
         MVI   NDCBA,X'80'         BUILD OPEN PARM LIST
         MVC   0(QSDCBL,R1),QSDCB  COPY DCB TO DYNAMIC AREA
         USING IHADCB,R1           BASE THE DCB DSECT
         MVC   DCBDDNAM,EXPTPDD    MOVE IN THE DDNAME
         DROP  R1
         OPEN  (,INPUT),MF=(E,NDCBA) OPEN THE DCB
         LM    R14,R12,IOSAVE      RELOAD ENTRY REGISTERS
         BR    R14                 AND RETURN TO LOCAL CALLER
         SPACE 3
         DS    0F
E1       DC    X'85',AL3(E1+4)
         USING IHADCB,R1
         CLC   DCBBLKSI,=H'0'      BLKSIZE MISSING ??
         BNER  R14                 NOPE ---
         MVC   DCBBLKSI,=H'32000'  YES; INSERT A DEFAULT
         BR    R14
         DROP  R1
QSDCB    DCB   DSORG=PS,MACRF=GL,BFTEK=A,EODAD=ENDITALL,EXLST=E1
QSDCBL   EQU   *-QSDCB
         TITLE 'LOCAL SUBROUTINE TO LIST A HEADER RECORD '
*---------------------------------------------------------------------*
*---     THIS LITTLE LOCAL SUBROUTINE FORMATS AND LISTS THE        ---*
*---     CONTENTS OF THE HEADER RECORD, INCLUDING SUCH MUNDANE     ---*
*---     DATA AS THE ORIGINAL RECORD FORMAT, LOGICAL RECORD        ---*
*---     LENGTH, DATASET ORGANIZATION AND BLOCKSIZE.  ALSO THE     ---*
*---     TIME AND DATE THE ITEM WAS ADDED TO THE ARCHIVE AND THE   ---*
*---     ITEM'S LOGICAL RECORD COUNT.                              ---*
*---------------------------------------------------------------------*
         SPACE 3
LISTHDR  DS    0H
         STM   R14,R12,IOSAVE      SAVE ENTRY REGISTERS
         L     R15,MCNT            LOAD THE MEMBER COUNTER
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,MCNT            AND SAVE UPDATED COUNT
         LR    R6,R1               COPY THE INPUT POINTER
         USING REC,R6              AND BASE HIS DSECT
         MVC   @BYTEC,@RSRFLG1     SAVE VERSION NUMBER
         MVC   TITLE3,SH10         REPORT SUBTITLE LINE
         #FORMAT RECTT
         LR    R2,R0               COPY NEXT-AVAILABLE-BYTE POINTER
         LA    R2,1(,R2)           INCREMENT BY ONE
         #IF   RSRALIAS,OFF,SH1    ALIAS RECORD ??
         MVC   0(11,R2),=CL11' ALIAS FOR '
         #FORMAT RECAN-1,OUT=11(R2),CLEAR=NO
         B     SH5
SH1      DS    0H
         $CVDSORG 0(,2),RSRDSO
         LA    R2,6(,R2)           INCREMENT BY ONE
         $CVRECFM 0(,2),RSRREC
         CLI   0(R2),C'U'          RECFM = U ??
         LA    R2,6(,R2)
         BE    SH4                 YES; SKIP LRECL
         LA    R15,0               CLEAR A WORK REG
         ICM   R15,3,RSRLRE        INSERT THE LRECL VALUE
         CVD   R15,DWORK           DECIMALIZE IT
         OI    DWORK+7,X'0F'       FORST LAST SIGN NUMERIC
         MVC   0(7,R2),SH8         MOVE IN THE EDIT MASK
         ED    0(7,R2),DWORK+5     EDIT IN THE LRECL
SH4      DS    0H
         LA    R15,0               RE-CLEAR R15
         LA    R2,9(,R2)
         ICM   R15,3,RSRBLK        INSERT THE BLKSIZE VALUE
         CVD   R15,DWORK           DECIMALIZE IT
         OI    DWORK+7,X'0F'       FORST LAST SIGN NUMERIC
         MVC   0(7,R2),SH8         MOVE IN THE EDIT MASK
         ED    0(7,R2),DWORK+5     EDIT IN THE BLKSIZE
         LA    R2,9(,R2)
         CLC   NUMTTR,=A(RSRT1LEN) ANY MORE IN HEADER ??
         BE    SH5                 NO TIME/DATE FIELDS
         CLI   RSRDATE,0           NEW FORMAT DATE ??              Y2K
         BE    DATENEW             YES ---                         Y2K
         MVC   2(8,R2),RSRDATE     COPY THE DATE
         MVC   0(6,R2),2(R2)       MAKE ROOM FOR CENTURY
         MVC   6(2,R2),=C'19'      INSERT CENTURY
         LA    R2,11(,R2)          POINT TO CLOCK FIELD
         MVC   0(8,R2),RSRTIME     MOVE THE CLOCK FIELD
         B     DOCOUNT             GO FORMAT THE RECORD COUNT
DATENEW  DS    0H                                                  Y2K
         UNPK  2(8,R2),RSRDATE     UNPK DATE INTO LINE             Y2K
         MVC   0(2,R2),2(R2)       MAKE ROOM                       Y2K
         MVC   3(2,R2),4(R2)         FOR SLASHES                   Y2K
         MVI   2(R2),C'/'                                          Y2K
         MVI   5(R2),C'/'                                          Y2K
         LA    R2,11(,R2)          POINT TO TIME FIELD             Y2K
         UNPK  2(6,R2),RSRTIME     UNPACK TIME INTO THE FIELD      Y2K
         MVC   0(2,R2),2(R2)       MAKE ROOM                       Y2K
         MVC   3(2,R2),4(R2)          FOR COLONS                   Y2K
         MVI   2(R2),C':'                                          Y2K
         MVI   5(R2),C':'                                          Y2K
DOCOUNT  DS    0H
         CLC   NUMTTR,=A(RSRT2LEN) ANY MORE IN HEADER ??
         BE    SH5                 NO TIME/DATE FIELDS
         LA    R2,9(,R2)           POINT TO COUNT FIELD
         ICM   R0,15,RSRRCNT       INSERT THE RECORD COUNT
         CVD   R0,DWORK            AND DECIMALIZE IT
         OI    DWORK+7,X'0F'       FORCE LAST SIGN NUMERIC
         MVC   1(12,R2),SH11       MOVE IN THE EDIT MASK
         ED    1(12,R2),DWORK+3    EDIT IN THE COUNT
SH5      DS    0H
         #PUT  LINE                PRINT IT OUT
         MVI   LINE,C' '           SEED IN A BLANK
         MVC   LINE+1(120),LINE    AND PROPOGATE ---
         LM    R14,R12,IOSAVE      RESTORE ENTRY REGISTERS
         BR    R9                  AND RETURN TO LOCAL CALLER
         DROP  R6
SH10     DC    CL2'  '
         DC    CL10'  MEMBER  '                                    HEAD
         DC    CL1'-'
         DC    CL10'  GROUP  '                                     HEAD
         DC    CL1'-'
         DC    CL10'  SUBGRP '                                     HEAD
         DC    CL1'-'
         DC    CL10'  TYPE  '                                      HEAD
         DC    CL1'-'
         DC    CL12'   VERSION '                                   HEAD
         DC    CL2' '
         DC    CL3'DS'                                             HEAD
         DC    CL3'    '
         DC    CL5'RFM  '                                          HEAD
         DC    CL3'   '
         DC    CL5'LRECL'                                          HEAD
         DC    CL3' '
         DC    CL5' BLKL'                                          HEAD
         DC    CL5'   '
         DC    CL4'DATE'                                           HEAD
         DC    CL5' '
         DC    CL6'  TIME'                                         HEAD
         DC    CL5' '
         DC    CL12'    RECORDS '                                  HEAD
         DC    CL10' '
SH11     DC    C' ',X'202020',C',',X'202020',C',',X'202020'
TCMSG    DC    CL133' '
         ORG   TCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ITEMS LISTED. '
         ORG
SH8      DC    C' ',X'2020',C',',X'202020'
         TITLE 'LOCAL SUBROUTINE TO LIST A CHARACTER-FORMAT RECORD'
*---------------------------------------------------------------------*
*---     THIS ROUTINE LISTS A RECORD IN CHARACTER FORMAT.  ANY     ---*
*---     LENGTH RECORD, FROM ANY TYPE OF ITEM, MAY BE LISTED.      ---*
*---     (USEFULNESS OF THAT LISTING IS PROBLEMATICAL.  PRINTED    ---*
*---     LOAD MODULES ANYONE ??)  THOSE RECORDS THAT COULD SPAN    ---*
*---     MULTIPLE LINES ARE BROKEN INTO SEGMENTS AND PRINTED AS    ---*
*---     MULTIPLE LINES.  THE RECORD START IS ALWAYS ON THE LINE   ---*
*---     THAT HAS THE LINE NUMBER PREFIXING THE DATA FIELD.  THE   ---*
*---     USER IS CAUTIONED THAT CONTROL INFORMATION FOR RECORDS    ---*
*---     THAT WERE ORIGINALLY VARIABLE LENGTH IS NOT PRESENT,      ---*
*---     SINCE THE ARCHIVER MAINTAINS ALL THAT SORT OF CONTROL IN  ---*
*---     A SOMEWHAT DIFFERENT FASHION.                             ---*
*---------------------------------------------------------------------*
         SPACE 3
LSTCHAR  DS    0H
         STM   R14,R12,IOSAVE      SAVE ENTRY REGISTERS
         LR    R3,R1               COPY RECORD ADDRESS
         LR    R5,R0               AND LENGTH
         MVC   LINE+1(13),R#MSK    COPY THE EDIT MASK TO THE LINE
         AR    R5,R3               POINT PAST RECORD END
LC1      DS    0H
         LR    R4,R5               COPY RECORD END ADDRESS
         SR    R4,R3               MINUS CURRENT POSITION
         CH    R4,=H'100'          LONGER THAN A LINE SEGMENT ??
         BNH   *+8                 NOPE ---
         LA    R4,100              YES; USE ONE SEGMENT
         BCTR  R4,R0               DECREMENT BY ONE
         EX    R4,MOVELIN          COPY TO LINE AREA
         #PUT  LINE                OUTPUT THE DATA LINE
         MVI   LINE,C' '           SEED IN A BLANK
         MVC   LINE+1(120),LINE    CLEAR THE LINE AREA
         LA    R3,1(R4,R3)         POINT TO NEXT PIECE
         CR    R3,R5               STILL GOING ??
         BL    LC1                 AND CONTINUE ---
         LM    R14,R12,IOSAVE      RESTORE REGISTERS
         BR    R9                  AND RETURN TO CALLER
R#MSK    DC    CL8' '
         DC    C' --> '
MOVELIN  MVC   LINE+15(*-*),0(R3)  'EX'ED COPY OF DATA
         TITLE 'LOCAL SUBROUTINE TO LIST A HEXADECIMAL-FORMAT RECORD'
*---------------------------------------------------------------------*
*---     THIS ROUTINE LISTS A RECORD IN CHARACTER FORMAT.  ANY     ---*
*---     LENGTH RECORD, FROM ANY TYPE OF ITEM, MAY BE LISTED.      ---*
*---     AGAIN, THE USEFULNESS IS LIMITED ONLY TO THE INGENUITY    ---*
*---     OF THE USER.  THE RECORD NUMBER APPEARS ON THE FIRST      ---*
*---     LINE OF MULTI-LINE RECORDS.  ONE ADDITIONAL FEATURE: THE  ---*
*---     FIRST HEXADECIMAL FIELD IS THE OFFSET OF THIS SEGMENT     ---*
*---     FROM THE BEGINNING OF THE RECORD.                         ---*
*---                                                               ---*
*---     THE USER IS CAUTIONED THAT CONTROL INFORMATION FOR        ---*
*---     RECORDS THAT WERE ORIGINALLY VARIABLE LENGTH IS NOT       ---*
*---     PRESENT, SINCE THE ARCHIVER MAINTAINS ALL THAT SORT OF    ---*
*---     CONTROL IN A SOMEWHAT DIFFERENT FASHION.                  ---*
*---                                                               ---*
*---     THE METHOD OF USING MULTIPLE TRANSLATE INSTRUCTIONS TO    ---*
*---     FORMAT THE RECORD WAS CHOSEN OVER THE 'UNPACK AND         ---*
*---     TRANSLATE' METHOD FOR SPEED, PURE AND SIMPLE.  I          ---*
*---     STRONGLY SUGGEST YOU LEARN IT WELL BEFORE YOU TRY TO      ---*
*---     MAKE ANY CHANGES.  IT TAKES A LITTLE ACCLIMATING.         ---*
*---------------------------------------------------------------------*
         SPACE 3
LSTHEX   DS    0H
         STM   R14,R12,IOSAVE      SAVE ENTRY REGISTERS
         LR    R3,R1               COPY RECORD ADDRESS
         LR    R5,R0               AND LENGTH
         LA    R7,0                RESET OFFSET COUNTER
         MVC   LINE+1(8),RNUM      COPY THE EDIT MASK TO THE LINE
         AR    R5,R3               POINT PAST RECORD END
LH1      DS    0H
         MVI   GENWK,X'40'         STARTING VALUE
         MVC   GENWK+1(68),GENWK   AND PROPOGATE IT
         LR    R4,R5               COPY RECORD END ADDRESS
         SR    R4,R3               MINUS CURRENT POSITION
         CH    R4,=H'32'           LONGER THAN A LINE SEGMENT ??
         BNH   *+8                 NOPE ---
         LA    R4,32               YES; USE ONE SEGMENT
         STH   R7,GENWK            SAVE THE OFFSET
         BCTR  R4,R0               DECREMENT COUNT BY ONE
         EX    R4,COPY1            CREATE THE FIRST COPY
         MVC   GENWK+34(34),GENWK  AND THE SECOND COPY
         LA    R4,2(,R4)           RESET THAT LENGTH
         EX    R4,TR1              TRANSLATE THE FIRST HALF
         EX    R4,TR2              AND THE SECOND HALF
         MVC   LINE+14(78),PRMSK   MOVE TABLE TO OUTPUT LINE
         TR    LINE+14(78),GENWK   TRANSLATE DATA INTO THE LINE
         BCTR  R4,R0               DECREMENT COUNT BY ONE
         #PUT  LINE                OUTPUT THE DATA LINE
         MVI   LINE,C' '           SEED IN A BLANK
         MVC   LINE+1(120),LINE    CLEAR THE LINE AREA
         LA    R7,0(R4,R7)         INCREMENT THE OFFSET COUNTER
         LA    R3,0(R4,R3)         POINT TO NEXT PIECE
         CR    R3,R5               STILL GOING ??
         BL    LH1                 AND CONTINUE ---
         LM    R14,R12,IOSAVE      RESTORE REGISTERS
         BR    R9                  AND RETURN TO CALLER
RNUM     DC    CL8' '
MOVEHEX  MVC   LINE+93(*-*),0(R3)  'EX'ED COPY OF DATA
TRHEX    TR    LINE+93(*-*),VISABLE
VISABLE  DC    16CL16'................'
         ORG   VISABLE+C'A'
         DC    C'ABCDEFGHI'
         ORG   VISABLE+C'J'
         DC    C'JKLMNOPQR'
         ORG   VISABLE+C'S'
         DC    C'STUVWXYZ'
         ORG   VISABLE+C'0'
         DC    C'0123456789'
         ORG
COPY1    MVC   GENWK+2(*-*),0(R3)  COPY TO GENWK AREA
TR1      TR    GENWK(*-*),ZONES
TR2      TR    GENWK+34(*-*),DIGITS
ZONES    DC    16C'0',16C'1',16C'2',16C'3'
         DC    16C'4',16C'5',16C'6',16C'7'
         DC    16C'8',16C'9',16C'A',16C'B'
         DC    16C'C',16C'D',16C'E',16C'F'
DIGITS   DC    16C'0123456789ABCDEF'
PRMSK    DC    AL1(0,34,1,35,68)
         DC    AL1(2,36,3,37,4,38,5,39,68)
         DC    AL1(6,40,7,41,8,42,9,43,68)
         DC    AL1(10,44,11,45,12,46,13,47,68)
         DC    AL1(14,48,15,49,16,50,17,51,68,68)
         DC    AL1(18,52,19,53,20,54,21,55,68)
         DC    AL1(22,56,23,57,24,58,25,59,68)
         DC    AL1(26,60,27,61,28,62,29,63,68)
         DC    AL1(30,64,31,65,32,66,33,67,68)
         LTORG
MINREC   DC    A(RECSIZE)
         COPY  #RECS
         COPY  ##ARCHWK
         DCBD  DSORG=QS
         END
