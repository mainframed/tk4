DEL7     TITLE 'ARCHIVER --- DELETE FUNCTION'
*---------------------------------------------------------------------*
*---    THIS SUBROUTINE OF ARCHDELE IS A FAIRLY COMPLEX ROUTINE.   ---*
*---    IT WILL PERFORM THE 'DELETE BACK LEVELS NOTE DATA AND      ---*
*---    ALIASES' FUNCTION.  THE ACTUAL STEPS INVOLVED ARE THESE:   ---*
*---                                                               ---*
*---    1.  LOCATE A NON-ALIAS HEADER RECORD OF AN ITEM TO BE      ---*
*---        DELETED.  THE QUALIFIERS IN THE RECORD KEY MUST MATCH  ---*
*---        THOSE SUPPLIED BY THE USER AND THE VERSION NUMBER      ---*
*---        MUST BE LOWER THAT A PREVIOUSLY-ENCOUNTERED ITEM OF    ---*
*---        THE SAME MEMBER, GROUP, SUBGROUP AND TYPE VALUES.      ---*
*---        (WHAT A MOUTHFUL!)                                     ---*
*---                                                               ---*
*---    2.  LOCATE ALL NOTE DATA RECORDS FOR THE SELECTED ITEM     ---*
*---        AND ERASE THEM                                         ---*
*---                                                               ---*
*---    3.  LOCATE ALL ALIASES FOR THE SELECTED ITEM AND ERASE     ---*
*---        THEM.                                                  ---*
*---                                                               ---*
*---    4.  LOOP BACK TO STEP 1 AND CONTINUE                       ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDEL7 CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY #ARCBITS
         USING ARCHDEL7,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             DEL7 ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDEL7,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             DEL7 NEW SAVE AREA POINTER
         L     R14,4(,R13)         RESTORE BACK POINTER
         L     R14,12(,R14)        RESTORE ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         XC    FCOUNT,FCOUNT       CLEAR FUNCTION RECORD COUNT
         XC    MCNT,MCNT           AND MEMBER COUNT
         XC    ACNT,ACNT           AND ALIAS COUNT
         MVC   VS1MODE,=CL8'OUTPUT' SET THE I/O MODE
         LA    R1,VSAM1DD          LOAD THE PARM POINTER
         LA    R0,0                AND THE 'OPEN' FLAG
         CALL  ARCHVSOP            CALL THE 'OPEN' FUNCTION
         LTR   R15,R15             OPEN OK ??
         BNZ   ENDITALL            NOPE; CAN'T WORK
         L     @RPL1,RPL1
         L     @RPL2,RPL2
         L     @RPL3,RPL3
         L     @BUF1,VS1BUF1
         L     @BUF2,VS1BUF2
         L     @BUF3,VS1BUF3
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF2),                                            X
               AREA=(@BUF2),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE JOB. THESE ARE THE BASIC STEPS     ---*
*---     INVOLVED.  DETAILS TO FOLLOW.                             ---*
*---                                                               ---*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD THAT IS     ---*
*---        NOT AN ALIAS RECORD.                                   ---*
*---                                                               ---*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---                                                               ---*
*---     3. SAVE THE KEY, INCLUDING THE SEQUENCE NUMBER TO THE     ---*
*---        VALUE IN BLDLAREA. DECREMENT THE VERSION NUMBER BY     ---*
*---        ONE AND SEARCH FOR A HEADER THAT MATCHES FOR THE       ---*
*---        LENGTH SPECIFIED BY 'RECPKEY'. THIS IS A BACK LEVEL    ---*
*---        AND SHOULD BE PROCESSED.                               ---*
*---                                                               ---*
*---     5. CHECK FOR AND DELETE ANY NOTE RECORDS FOR THE ITEM     ---*
*---        SELECTED IN STEP 3.                                    ---*
*---------------------------------------------------------------------*
MEMBERS  DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        SET TO HEADER TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),                                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
*---------------------------------------------------------------------*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD.            ---*
*---------------------------------------------------------------------*
NEXTHDR  DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
NEWHDR   DS    0H
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,NEXTHDR SKIP ALIAS RECORDS ---
*---------------------------------------------------------------------*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---------------------------------------------------------------------*
         LA    R1,RECN             POINT TO THE HEADER
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            GO CHECK: DO WE PROCESS THIS ITEM ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   NEXTHDR             NOPE ---
*---------------------------------------------------------------------*
*---     3. SAVE THE KEY, INCLUDING THE SEQUENCE NUMBER TO THE     ---*
*---        VALUE IN BLDLAREA. READ THE NEXT HEADER AND CHECK FOR  ---*
*---        A MATCHING KEY, UP TO BUT NOT INCLUDING THE VERSION    ---*
*---        NUMBER. IGNORE ALIAS RECORDS.                          ---*
*---------------------------------------------------------------------*
         MVC   BLDLAREA(RECKLEN),RECTT SAVE THAT KEY ---
DELA     DS    0H
         GET   RPL=(@RPL1)         READ ANOTHER HEADER
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE
         #IF   RSRALIAS,ON,DELA    SKIP ALIAS RECORDS ---
         CLC   RECTT(RECPKEY),BLDLAREA SAME ITEM DIF. VERSION ??
         BNE   NEWHDR              NOPE ---
*---------------------------------------------------------------------*
*---     ITEM TO BE PROCESSED HAS BEEN FOUND. LOCATE ANY NOTE      ---*
*---     RECORDS AND DELETE THEM.                                  ---*
*---------------------------------------------------------------------*
         MVC   0(49,@BUF2),0(@BUF1) COPY ITEM KEY
         MVI   0(@BUF2),#RTNOTE     SET FOR NOTE DATA
         POINT RPL=(@RPL2)
         DROP  @BUF1
         USING REC,@BUF2
NSRCH    DS    0H
         GET   RPL=(@RPL2)         READ A RECORD
         CLI   RECTT,#RTNOTE       NOTE RECORD ??
         BNE   NONOTE              NOPE; ALL DONE
         CLC   1(44,@BUF2),1(@BUF1) SAME ITEM ??
         BNE   NONOTE              NOPE ---
         ERASE RPL=(@RPL2)         ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         L     R15,FCOUNT          LOAD THE COUNT
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,FCOUNT          SAVE UPDATED COUNT
         B     NSRCH               AND CONTINUE
NONOTE   DS    0H
         MVC   0(49,@BUF2),0(@BUF1) RE-READ THE HEADER RECORD
         GET   RPL=(@RPL2)
         XC    RSRNOT#,RSRNOT#
         #SET  RSRHALS,OFF         SHOW NO ALIASES
         PUT   RPL=(@RPL2)
         ENDREQ RPL=(@RPL2)
DOALIAS  DS    0H
         XC    RECTT(49),RECTT     CLEAR OUT THE KEY AREA
         POINT RPL=(@RPL2)         RESET TO CLUSTER START
ASRCH    DS    0H
         GET   RPL=(@RPL2)         READ A RECORD
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   NOALIAS             NOPE; ALL DONE
         #IF   RSRALIAS,OFF,ASRCH  NOT AN ALIAS RECORD
         CLC   RECAN(44),1(@BUF1)  FOR THE SELECTED ITEM ??
         BNE   ASRCH               NOPE ---
         ERASE RPL=(@RPL2)         YES; ERASE IT
         L     R15,ACNT            LOAD ALIAS COUNT
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,ACNT            SAVE UPDATED VALUE
         B     ASRCH               AND KEEP SEARCHING
         DROP  @BUF2
         USING REC,@BUF1
NOALIAS  DS    0H
         #FORMAT RECTT,,DELNOT
         #PUT  LINE
         B     DELA
         DROP  @BUF1
ENDITALL DS    0H
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END1                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,MCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END1     DS    0H
         L     R0,ACNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,ACMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END2     DS    0H
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END3                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,FCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END3     DS    0H
         CLC   ACB1,=F'0'          WAS ACB EVER OPENED ??
         BE    NOACB               NOPE ---
         LA    R1,VSAM1DD          POINT TO THE DDNAME
         LA    R0,4                SET 'CLOSE' REQUEST
         CALL  ARCHVSOP            CALL THE VSAM 'CLOSE' ROUTINE
NOACB    DS    0H
         XC    CHAIN,CHAIN         CLEAR THE CHAIN POINTER
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
DELNOT   DC    AL1(DELMSGE-DELMSG)
DELMSG   DC    C' NOTE DATA AND ALIASES DELETED.'
DELMSGE  EQU   *
MCMSG    DC    CL133' '
         ORG   MCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ITEMS(S) PROCESSED.'
         ORG
ACMSG    DC    CL133' '
         ORG   ACMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ALIAS RECORDS DELETED.'
         ORG
FCMSG    DC    CL133' '
         ORG   FCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL NOTE RECORDS DELETED.'
         ORG
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
