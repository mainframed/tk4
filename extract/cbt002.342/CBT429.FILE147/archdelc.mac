DELC     TITLE 'ARCHIVER --- DELETE FUNCTION'
*---------------------------------------------------------------------*
*---    THIS SUBROUTINE OF ARCHDELE IS A FAIRLY COMPLEX ROUTINE.   ---*
*---    IT WILL PERFORM THE 'DELETE CURRENT LEVELS WITHOUT         ---*
*---    ALIASES' FUNCTION.  THE ACTUAL STEPS INVOLVED ARE THESE:   ---*
*---                                                               ---*
*---    1.  LOCATE A NON-ALIAS HEADER RECORD OF AN ITEM TO BE      ---*
*---        DELETED.  THE QUALIFIERS IN THE RECORD KEY MUST MATCH  ---*
*---        THOSE SUPPLIED BY THE USER.                            ---*
*---                                                               ---*
*---    2.  IF ALIASES ARE PRESENT FOR THE ITEM, CONVERT THE       ---*
*---        FIRST ALIAS TO A 'REAL' ITEM AND COPY THE ITEM TO IT.  ---*
*---        THIS IS BASICALLY A REWRITE OF THE ITEM DATA WITH A    ---*
*---        NEW KEY.                                               ---*
*---                                                               ---*
*---    3.  LOCATE ANY OTHER ALIASES FOR THE ITEM AND ALTER THEM   ---*
*---        TO POINT TO THE NEWLY-COPIED ITEM.                     ---*
*---                                                               ---*
*---    4.  LOCATE ALL RECORDS FOR THE SELECTED (ORIGINAL-NAMED)   ---*
*---        ITEM AND ERASE THEM, USING THE ARCHERAS SUBROUTINE.    ---*
*---                                                               ---*
*---    5.  POINT PAST ANY 'BACK LEVELS' OF THIS ITEM BY ADDING    ---*
*---        A BINARY '1' TO THE LAST BYTE OF THE TYPE AND DO A     ---*
*---        VSAM 'POINT'. (KGE LOGIC IN USE HERE)                  ---*
*---                                                               ---*
*---    6.  LOOP BACK TO STATEMENT 1 AND CONTINUE                  ---*
*---                                                               ---*
*---    NOTE THAT THIS ONLY DELETES A SINGLE ITEM AT A TIME. IF    ---*
*---    ALIASES EXIST, PROCESSING IS SUCH THAT THE ITEM NAMED ON   ---*
*---    THE DELETE CONTROL STATEMENT IS RENAMED AND REPLACES THE   ---*
*---    FIRST ALIAS FOR THAT ITEM.                                 ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDELC CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY #ARCBITS
         USING ARCHDELC,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             DELC ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDELC,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             DELC NEW SAVE AREA POINTER
         L     R14,4(,R13)         RESTORE BACK POINTER
         L     R14,12(,R14)        RESTORE ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         XC    FCOUNT,FCOUNT       CLEAR FUNCTION RECORD COUNT
         XC    MCNT,MCNT           AND MEMBER COUNT
         XC    ACNT,ACNT           AND ALIAS COUNT
         MVC   VS1MODE,=CL8'OUTPUT' SET THE I/O MODE
         LA    R1,VSAM1DD          LOAD THE PARM POINTER
         LA    R0,0                AND THE 'OPEN' FLAG
         CALL  ARCHVSOP            CALL THE 'OPEN' FUNCTION
         LTR   R15,R15             OPEN OK ??
         BNZ   ENDITALL            NOPE; CAN'T WORK
         L     @RPL1,RPL1
         L     @RPL2,RPL2
         L     @RPL3,RPL3
         L     @BUF1,VS1BUF1
         L     @BUF2,VS1BUF2
         L     @BUF3,VS1BUF3
         BAL   R14,CLEAN           GO CLEAN UP ANY ORPHAN ALIASES
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE JOB. THESE ARE THE BASIC STEPS     ---*
*---     INVOLVED.  DETAILS TO FOLLOW.                             ---*
*---                                                               ---*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD THAT IS     ---*
*---        NOT AN ALIAS RECORD.                                   ---*
*---                                                               ---*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---                                                               ---*
*---     4. LOOK FOR AN ALIAS FOR THIS ITEM. IF FOUND, DELETE THE  ---*
*---        ALIAS AND USE THE ARCHALT ROUTINE TO COPY THE ITEM     ---*
*---        INTO THE 'ALIAS' MEMBER.                               ---*
*---                                                               ---*
*---     5. CALL ARCHERAS TO ERASE THE ITEM WE'VE FOUND. THEN ADD  ---*
*---        A BINARY '1' TO THE LAST BYTE OF THE 'TYPE'            ---*
*---        QUALIFIER, TO POINT VSAM PAST ANY 'BACK LEVEL' COPIES  ---*
*---        OF THIS ITEM AND GO BACK TO NEXTHDR AND CONTINUE       ---*
*---------------------------------------------------------------------*
MEMBERS  DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        SET TO HEADER TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),                                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
*---------------------------------------------------------------------*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD.            ---*
*---------------------------------------------------------------------*
NEXTHDR  DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,NEXTHDR SKIP ALIAS RECORDS ---
*---------------------------------------------------------------------*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---------------------------------------------------------------------*
NEWHDR   DS    0H
         LA    R1,RECN             POINT TO THE HEADER
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            GO CHECK: DO WE PROCESS THIS ITEM ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   NEXTHDR             NOPE ---
*---------------------------------------------------------------------*
*---     ITEM TO BE DELETED HAS BEEN FOUND. START BY CHECKING FOR  ---*
*---     AN ALIAS TO 'ALTER' IT TO.  ALSO SAVE ITS KEY IN BUF3.    ---*
*---------------------------------------------------------------------*
         #IF   RSRHALS,OFF,NOALIAS    NO ALIASES FOR THIS ITEM
         XC    0(49,@BUF2),0(@BUF2)   START AT THE BEGINNING
         POINT RPL=(@RPL2)
         DROP  @BUF1
         USING REC,@BUF2
ASRCH    DS    0H
         GET   RPL=(@RPL2)         READ A RECORD
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   NOALIAS             NOPE; ALL DONE
         #IF   RSRALIAS,OFF,ASRCH  SKIP NON-ALIAS HEADERS
         CLC   RECN-REC(44,@BUF1),RECAN ALIAS FOR THIS ITEM ??
         BNE   ASRCH               NOPE ---
*---------------------------------------------------------------------*
*---     ALIAS IS FOUND. DELETE THE ALIAS RECORD AND USE ARCHALT   ---*
*---     TO 'REQUALIFY' THE ITEM TO BE DELETED.                    ---*
*---------------------------------------------------------------------*
         MODCB RPL=(@RPL2),        RESET RPL2 FOR UPDATE/INSERT        X
               OPTCD=(DIR,FKS,KGE,SYN,UPD),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         GET   RPL=(@RPL2)         RE-READ THE RECORD, FOR UPDATE
         ERASE RPL=(@RPL2)
         CALL  ARCHALT,(1(,@BUF1),1(,@BUF2)),MF=(E,CALLIST)
         SPACE 3
*---------------------------------------------------------------------*
*---     POINT ALL ALIASES FOR THE OLD ITEM AT THE NEW ITEM       ----*
*---     CREATED BY ARCHALT.                                      ----*
*---------------------------------------------------------------------*
         SPACE 3
         PUSH  USING
         USING REC,@BUF3           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF3),0(@BUF3) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF3),                                            X
               AREA=(@BUF3),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL3)         GET TO IT
AA1      DS    0H
         GET   RPL=(@RPL3)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   AA2                 NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   AA2                 NOPE; ALL DONE ---
         #IF   RSRALIAS,OFF,AA1    NOT AN ALIAS RECORD
         CLC   RECAN(44),1(@BUF1)  ALTER THIS ONE ??
         BNE   AA1                 NOPE ---
         MVC   RECAN(44),1(@BUF2)  REPLACE ALIAS FIELDS
         PUT   RPL=(@RPL3)         WRITE THE UPDATED RECORD
         LTR   R15,R15             ANYTHING ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         B     AA1                 LOOP FOR MORE ---
AA2      DS    0H
         ENDREQ RPL=(@RPL3)
         POP   USING
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
NOALIAS  DS    0H
*---------------------------------------------------------------------*
*---     NOW WE'RE READY TO DELETE THE ITEM'S ORIGINAL RECORDS.    ---*
*---     NOTE THAT IN OUR VARIOUS MEANDERINGS TO PRESERVE THE      ---*
*---     ALIAS NAME AND RELATED DATA, WE'VE PRESERVED THE          ---*
*---     ORIGINAL HEADER'S KEY IN BUF3. THIS MAKES THE ACTUAL      ---*
*---     DELETION PROCESS MUCH EASIER.                             ---*
*---------------------------------------------------------------------*
         LA    R1,0(,@BUF1)        POINT TO THE DELETABLE ITEM'S KEY
         CALL  ARCHERAS            GO ERASE THE ITEM
         DROP  @BUF2
         USING REC,@BUF1
         #FORMAT RECTT,,DELMBR
         #PUT  LINE                AND OUTPUT THE MESSAGE
         L     R15,MCNT            LOAD THE MEMBER COUNT
         LA    R15,1(,R15)
         ST    R15,MCNT            SAVE UPDATED COUNT
         LA    R1,0                CLEAR A WORK REGISTER
         IC    R1,RECT+9           INSERT LAST BYTE OF TYPE
         LA    R1,1(,R1)           ADD ONE
         STC   R1,RECT+9           SAVE UPDATED VALUE
         POINT RPL=(@RPL1)         POINT TO IT
         B     NEXTHDR             AND CONTINUE ---
         DROP  @BUF1               DISCARD RECORD DSECT
ENDITALL DS    0H
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,MCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END2     DS    0H
         CLC   ACB1,=F'0'          WAS ACB EVER OPENED ??
         BE    NOACB               NOPE ---
         LA    R1,VSAM1DD          POINT TO THE DDNAME
         LA    R0,4                SET 'CLOSE' REQUEST
         CALL  ARCHVSOP            CALL THE VSAM 'CLOSE' ROUTINE
NOACB    DS    0H
         XC    CHAIN,CHAIN         CLEAR THE CHAIN POINTER
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
DELMBR   DC    AL1(DELMSGE-DELMSG)
DELMSG   DC    C' DELETE REQUEST COMPLETE.'
DELMSGE  EQU   *
MCMSG    DC    CL133' '
         ORG   MCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ITEMS(S) PROCESSED.'
         ORG
         TITLE 'CLEAN UP THE ALIAS FLAGS, ETC.'
*---------------------------------------------------------------------*
*---     WE LOOP THROUGH THE HEADER RECORDS TWICE FOR THIS        ----*
*---     PROCESS.  THE FIRST LOOP CONCENTRATES ON THE 'TRUE NAME' ----*
*---     RECORDS, TURNING OFF THE FLAG BIT THAT INDICATES THE     ----*
*---     PRESENCE OF ALIASES.  THE SECOND PASS LOCATES ALL THE    ----*
*---     ALIAS RECORDS AND SETS THE 'ALIASES PRESENT' BIT ON IN   ----*
*---     THE 'TRUE NAME' RECORD THEY REFER TO.  IF THE 'TRUE      ----*
*---     NAME' IS NOT PRESENT, THE ALIAS RECORD IS DELETED.       ----*
*---------------------------------------------------------------------*
CLEAN    DS    0H
         STM   R14,R12,IOSAVE      SAVE THE ENTRY REGISTERS
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ACB=(*,ACB1),                                           X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ACB=(*,ACB1),                                           X
               ARG=(@BUF2),                                            X
               AREA=(@BUF2),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(DIR,FKS,KEQ,SYN,UPD),                            X
               ACB=(*,ACB1),                                           X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) CLEAR THE KEY
         POINT RPL=(@RPL1)         GET TO IT
CL1      DS    0H
         GET   RPL=(@RPL1)         GO READ A RECORD
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   CL2                 NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,CL1     DON'T TOUCH ALIASES, YET
         #SET  RSRHALS,OFF         INDICATE NO ALIASES
         PUT   RPL=(@RPL1)         AND OUTPUT THE RECORD
         B     CL1                 AND LOOP FOR MORE
CL2      DS    0H
         XC    0(RECKLEN,@BUF1),0(@BUF1) RESET TO STARTING KEY
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(NUP),                                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
CL3      DS    0H
         MVI   RECSEQ#+3,1         INCREMENT THE KEY VALUE
         POINT RPL=(@RPL1)         RESET TO DATASET START
         GET   RPL=(@RPL1)         READ A RECORD
         ENDREQ RPL=(@RPL1)
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   CL5                 NOPE; ALL DONE
         #IF   RSRALIAS,OFF,CL3    NOT AN ALIAS ---
         XC    0(RECKLEN,@BUF2),0(@BUF2) CLEAR THE KEY AREA
         MVI   0(@BUF2),#RTHDR     SHOW A HEADER RECORD
         MVC   1(44,@BUF2),RECAN   MOVE IN THE 'TRUE NAME'
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(DIR,FKS,KEQ,SYN,UPD),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         GET   RPL=(@RPL2)         AND FETCH THE RECORD (MAYBE)
         LTR   R15,R15             WAS IT FOUND ??
         BNZ   CL4                 NOPE; DELETE THE ALIAS RECORD
         PUSH  USING
         USING REC,@BUF2
         #SET  RSRHALS,ON          SAY IT HAS ALIASES
         POP   USING
         PUT   RPL=(@RPL2)         UPDATE THE RECORD
         B     CL3                 AND CONTINUE ---
CL4      DS    0H
         GET   RPL=(@RPL3)         RE-FETCH THE RECORD
         ERASE RPL=(@RPL3)         DELETE IT
         B     CL3                 AND CONTINUE ---
CL5      DS    0H
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         LM    R14,R12,IOSAVE      RESTORE REGS
         BR    R14                 AND RETURN TO LOCAL CALLER
         DROP  @BUF1
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
