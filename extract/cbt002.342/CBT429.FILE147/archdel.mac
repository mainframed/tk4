DELE     TITLE 'ARCHIVER --- DELETE FUNCTION'
*---------------------------------------------------------------------*
*---    THIS ROUTINE IS THE MAIN DRIVER FOR THE DELETE FUNCTION.   ---*
*---    WE HAVE A SPECIAL CASE IN THE DELETE FUNCTION TO ALLOW     ---*
*---    FOR THE VARIATIONS THAT MAY BE REQUESTED BY THE USER.      ---*
*---    THIS IS PRIMARILY DUE TO THE WAYS THAT ALIASES MAY BE      ---*
*---    PROCESSED.                                                 ---*
*---                                                               ---*
*---    TO FURTHER EXAMINE HOW THE DELETE PROCESSING IS ACTUALLY   ---*
*---    DONE AND WHAT ARCHIVE RECORDS ARE PROCESSED, REFER TO      ---*
*---    THE MODULE HEADER IN EACH OF THE ARCHDELX MODULES.         ---*
*---    WHILE SOME OF THE DIFFERENCES MAY SEEM RELATIVELY          ---*
*---    SUBTLE, THE LOGIC PROBLEMS RELATED TO EACH FUNCTION WERE   ---*
*---    COMPLEX ENOUGH, TO ME, TO JUSTIFY SEPARATE ROUTINES FOR    ---*
*---    EACH FORM.                                                 ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDEL  CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         COPY #ARCBITS
         USING ARCHDEL,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             DELE ROUTINE BASE REGISTER
         LH    R10,PASSIT-2
         LA    R10,0(R10,R11)
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDEL,R11,R10     DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             DELE NEW SAVE AREA POINTER
         L     R14,4(,R13)         REDELE BACK POINTER
         L     R14,12(,R14)        REDELE ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
*---------------------------------------------------------------------*
*---     NOW DECIDE WHICH ARCHDELX ROUTINE TO CALL, AND CALL IT    ---*
*---                                                               ---*
*---     THE OPERANDS ARE CHECKED ACCORDING TO A DISTINCT          ---*
*---     HIERARCHY, PARTLY BECAUSE OF THE CODING INVOLVED IN       ---*
*---     CHECKING THINGS.  THE SELECTION IS DONE BY SETTING SOME   ---*
*---     BITS IN R2 AND USING THAT VALUE AS AN INDEX INTO A TABLE  ---*
*---     OF V-CONS FOR THE VARIOUS DELETE ROUTINES.                ---*
*---                                                               ---*
*---------------------------------------------------------------------*
         LA    R2,0                CLEAR THE INDEX REG, TO START
         #IF   RETA,OFF,NO1        ALIASES NOT SPECIFIED
         O     R2,=A(X'01')        INSERT THE VALUE
NO1      DS    0H
         #IF   PRCB,OFF,NO2        BACK LEVELS ??
         O     R2,=A(X'02')        YES ---
NO2      DS    0H
         #IF   PRCCM,OFF,NO3       NOTE DATA ??
         O     R2,=A(X'04')        YES ---
NO3      DS    0H
         #IF   SHITEM,OFF,NO4      ITEM DATA ??
         O     R2,=A(X'08')        YES ---
NO4      DS    0H
         SLL   R2,2                RESULT TIMES 4
         L     R15,VCONS(R2)       POINT TO THE DELETE ROUTINE
         BALR  R14,R15             CALL THE APPROPRIATE DELETER
DELEND   DS    0H
         XC    CHAIN,CHAIN         CLEAR THE CHAIN POINTER
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
DELB1    DS    0H
         #PUT  DELB1M              INVALID OPERAND COMBINATION
         #PUT  DELB2M              INVALID OPERAND COMBINATION
         B     DELEND              AND QUIT ---
DELB1M   DC    CL133' *** ERROR *** OPERAND MISSING. STATEMENT IS IGNORX
               ED.'
DELB2M   DC    CL133'               YOU MUST SPECIFY SOME COMBINATION OX
               F ALIASES, NOTE, DATA AND/OR BACK ON A DELETE.'
DELBX    DS    0H
         #PUT  DELBXA              INVALID OPERAND COMBINATION
         #PUT  DELBXB              INVALID OPERAND COMBINATION
         B     DELEND              AND QUIT ---
DELBXA   DC    CL133' *** ERROR *** YOU CAN''T DELETE THE DATA UNLESS YX
               ALSO SPECIFY THAT NOTE DATA IS TO BE DELETED.'
DELBXB   DC    CL133'               THIS REQUEST HAS BEEN IGNORED.'
VCONS    DC    A(DELB1)            NO OPERANDS; INVALID
         DC    V(ARCHDEL1)         ALIASES ONLY
         DC    V(ARCHDEL2)         BACK LEVELS BUT NOT ALIASES
         DC    V(ARCHDEL3)         ALIASES FOR BACK VERSIONS
         DC    V(ARCHDEL4)         ALL NOTE DATA (CURRENT ONLY)
         DC    V(ARCHDEL5)         NOTES & ALIASES (CURRENT ONLY)
         DC    V(ARCHDEL6)         NOTE DATA FROM BACK LEVELS
         DC    V(ARCHDEL7)         DEL. NOTES & ALIAS FROM BACKLVLS
         DC    A(DELBX)            DATA WITHOUT NOTES INVALID
         DC    A(DELBX)            DATA WITHOUT NOTES INVALID
         DC    A(DELBX)            DATA WITHOUT NOTES INVALID
         DC    A(DELBX)            DATA WITHOUT NOTES INVALID
         DC    V(ARCHDELC)         DELETE SELECTED ITEM(S)
         DC    V(ARCHDELD)         SELECTED ITEM(S) & ITS ALIASES
         DC    V(ARCHDELE)         BACK LEVELS IF ALIASES EXIST
         DC    V(ARCHDELF)         ITEM, BACKUPS & ALIASES
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
