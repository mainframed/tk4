MAIN     TITLE 'ARCHIVER V6.R1 MAIN CONTROL '
ARCHMAIN CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         USING ARCHMAIN,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             LOAD ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHMAIN,R11        DEFINE THE NEW BASE REGISTER
SAVE#    LA    R3,12               LOAD NUMBER OF SAVE AREAS
         MH    R3,=H'72'           TIMES SIZE
         GETMAIN R,LV=(3)          GET SOME SAVE AREAS
         LR    R2,R1               COPY ITS ADDRESS
         LA    R14,0               CLEAR SOURCE ADDRESS
         LA    R15,0               AND LENGTH/PAD
         MVCL  R2,R14              AND CLEAR THE AREA
         ST    R1,8(,R13)          STORE FORWARD AND
         ST    R13,4(,R1)            BACKWARD POINTERS
         LR    R13,R1              BUMP DOWN THE SAVE AREA CHAIN
         L     R14,4(,R13)         RELOAD BACK POINTER
         L     R14,12(,R14)        RELOAD ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         COPY  #ARCBITS
         LOAD  EP=ARCHINIT         GO INIT. THE WORK AREA
         LR    R15,R0              COPY ITS ADDRESS
         BALR  R14,R15             CALL IT
         LR    R12,R15             COPY ADDRESS TO MY REGISTER
         DELETE EP=ARCHINIT        ALL DONE WITH THAT ROUTINE
         USING MAINWK,R12          AND BASE WORK AREA DSECT
         L     R0,=V(PRTSEP1)      LOAD SPECIAL PRINT EPA
         ST    R0,PRTRTN           AND SAVE FOR ARCHPARS
         LOAD  EP=ARCHPARS         LOAD CONTROL STATEMENT PARSER
         ST    R0,PARSADDR         SAVE ADDRESS IN WORK AREA
MAIN2    DS    0H
         L     R15,PARSADDR        POINT TO PARSE ROUTINE
         BALR  R14,R15             AND CALL IT ---
         XC    TCOUNT,TCOUNT    CLEAR TOTAL-RECORD COUNT
         XC    MCNT,MCNT        CLEAR MEMBER COUNT
         XC    ACNT,ACNT        CLEAR ALIAS COUNT
         #IF   EODIN,ON,MAIN11
         C     R15,=F'4'           EODAD ON SYSIN FILE ??
         LA    R3,FUNTAB           POINT TO FUNCTION TABLE
         LA    R4,FUNLEN           LOAD TABLE ENTRY LENGTH
         LA    R5,LASTFUN          POINT TO LAST FUNCTION
MAIN2A   DS    0H
         CLC   VERB,0(R3)          IS THIS THE FUNCTION ??
         BNE   MAIN2B              NOPE ---
         ICM   R14,15,12(R3)       POINT TO DEFAULT SETTER
         BZ    MAIN2X              NOT INSTALLED YET ---
         BALR  R9,R14              GO SET THE DEFAULTS
MAIN2X   DS    0H
         ICM   R15,15,16(R3)       INSERT ROUTINE ADDRESS, IF ANY
         BZ    MAIN2F              NOT INSTALLED YET ---
         BALR  R14,R15             CALL THE ROUTINE
         FREEMAIN R,SP=10          RELEASE STORAGE SCRAPS
         B     MAIN2               GO FOR ANOTHER CONTROL STMT
MAIN2B   DS    0H
         BXLE  R3,R4,MAIN2A        LOOP, TESTINGLY
         #PUT  MAIN14              OUTPUT AN ERROR MESSAGE
         B     MAIN2               AND GO FOR ANOTHER CTL STATEMENT
MAIN2F   DS    0H
         #PUT  MAIN14A            OUTPUT AN ERROR MESSAGE
         B     MAIN2               AND GO FOR ANOTHER CTL STATEMENT
MAIN11   DS    0H
         L     R2,CTLIN            POINT TO SYSIN DCB
         LTR   R2,R2               IS IT THERE ??
         BZ    MAIN12              NOPE ---
         TM    48(R2),X'10'        IS IT OPEN ??
         BZ    MAIN12              NOPE ---
         CLOSE MF=(E,CTLIN)        YES; CLOSE IT
         FREEPOOL (2)              RELEASE ITS BUFFER POOL
         SH    R2,=H'4'            BACK UP A WORD
         L     R0,0(,R2)           LOAD AREA LENGTH
         FREEMAIN R,LV=(0),A=(2)   RELEASE THE STORAGE
         XC    CTLIN,CTLIN         AND CLEAR THE POINTER
MAIN12   DS    0H
         L     R2,PRTDCB           LOAD PRINT DCB ADDRESS
         LTR   R2,R2               IS IT THERE ??
         BZ    MAIN12A             NOPE ---
         TM    48(R2),X'10'        IS IT OPEN ??
         BZ    MAIN13              NOPE ---
         CLOSE MF=(E,PRTDCB)       YES; CLOSE IT
         FREEPOOL (2)              RELEASE ITS BUFFER POOL
         SH    R2,=H'4'            BACK UP A WORD
         L     R0,0(,R2)           LOAD AREA LENGTH
         FREEMAIN R,LV=(0),A=(2)   RELEASE THE STORAGE
         XC    PRTDCB,PRTDCB       AND CLEAR THE POINTER
MAIN12A  DS    0H
         L     R2,SYSPUNCH         LOAD PUNCH DCB ADDRESS
         LTR   R2,R2               IS IT THERE ??
         BZ    MAIN13              NOPE ---
         TM    48(R2),X'10'        IS IT OPEN ??
         BZ    MAIN13              NOPE ---
         CLOSE MF=(E,SYSPUNCH)     YES; CLOSE IT
         FREEPOOL (2)              RELEASE ITS BUFFER POOL
         SH    R2,=H'4'            BACK UP A WORD
         L     R0,0(,R2)           LOAD AREA LENGTH
         FREEMAIN R,LV=(0),A=(2)   RELEASE THE STORAGE
         XC    SYSPUNCH,SYSPUNCH   AND CLEAR THE POINTER
MAIN13   DS    0H
         L     R0,MAINSIZE         LOAD WORK AREA SIZE
         LR    R1,R12              COPY ITS ADDRESS
         FREEMAIN R,LV=(0),A=(1)   RELEASE THE STORAGE
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         L     R1,8(,R13)          LOAD STAK POINTER
         L     R0,MAIN15           AND SIZE
         FREEMAIN R,LV=(0),A=(1)
         LM    R14,R12,12(R13)     RELOAD ENTRY REGISTERS
         LA    R15,0               ZERO RETURN CODE
         MVI   12(R13),255
         BR    R14
*---------------------------------------------------------------------*
*---     THE FOLLOWING VCON SERVES ONLY ONE PURPOSE: FORCE THE     ---*
*---     LINKAGE EDITOR TO INCLUDE THE CELLMAN ROUTINE, SO THAT    ---*
*---     ENTRY POINTS WITHIN CELLMAN CAN BE RESOLVED WITHOUT A     ---*
*---     LOT OF GAME-PLAYING WITH ALIASES.                         ---*
*---------------------------------------------------------------------*
         DC    V(CELLMAN)
MAIN14   DC    CL133' ARCHMAIN --- UNKNOWN FUNCTION REQUEST. IGNORED.'
MAIN14A  DC    CL133' ARCHMAIN --- UNINSTALLED FUNCTION. IGNORED.'
MAIN15   DC    A(72*12)             SAVE AREA STACK SIZE
DEFCONV  DS    0H
         #SETDEF   BIT=REPL,KWG=GREPL,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         BR    R9
DEFCOPY  DS    0H
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         #SETDEF   BIT=REPL,KWG=GREPL,DFLT=OFF
         BR    R9
DEFDELE  DS    0H
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=OFF
         #SETDEF   BIT=SHITEM,KWG=GSHITEM,DFLT=OFF
         #SETDEF   BIT=PRCB,KWG=GPRCB,DFLT=OFF
         #SETDEF   BIT=PRCCM,KWG=GPRCCM,DFLT=OFF
         BR    R9
DEFEXPR  DS    0H
         #SETDEF   BIT=PRCB,KWG=GPRCB,DFLT=ON
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         BR    R9
DEFIMPR  DS    0H
         #SETDEF   BIT=REPL,KWG=GREPL,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         BR    R9
DEFLIST  DS    0H
         #SETDEF   BIT=SHHDR,KWG=GSHHDR,DFLT=ON
         #SETDEF   BIT=SHHEX,KWG=GSHHEX,DFLT=OFF
         #SETDEF   BIT=SHITEM,KWG=GSHITEM,DFLT=OFF
         #SETDEF   BIT=PRCCM,KWG=GPRCCM,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         BR    R9
DEFLSTT  DS    0H
         #SETDEF   BIT=SHHDR,KWG=GSHHDR,DFLT=ON
         #SETDEF   BIT=SHHEX,KWG=GSHHEX,DFLT=OFF
         #SETDEF   BIT=SHITEM,KWG=GSHITEM,DFLT=OFF
         #SETDEF   BIT=PRCCM,KWG=GPRCCM,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         BR    R9
DEFLOAD  DS    0H
         #SETDEF   BIT=REPL,KWG=GREPL,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         #SETDEF   BIT=ULMODS,KWG=GULMODS,DFLT=ON
         BR    R9
DEFRSPC  DS    0H
         #SETDEF   BIT=REPL,KWG=GREPL,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         BR    R9
DEFUNLD  DS    0H
         #SETDEF   BIT=REPL,KWG=GREPL,DFLT=OFF
         #SETDEF   BIT=RETA,KWG=GRETA,DFLT=ON
         #SETDEF   BIT=ULMODS,KWG=GULMODS,DFLT=ON
         BR    R9
*---------------------------------------------------------------------*
*---     THE FOLLOWING TABLES, DOWN TO THE LTORG STATEMENT, ARE    ---*
*---     ORDER DEPENDANT AND MUST NOT BE CHANGED.  THE FIRST       ---*
*---     TABLE CONTAINS THE AVAILABLE FUNCTION CODES, AS THEY      ---*
*---     APPEAR ON THE CONTROL STATEMENTS FOR THE ARCHIVER. THE    ---*
*---     SECOND TABLE CONSISTS OF THE EXTERNAL ADDRESSES FOR THE   ---*
*---     CORRESPONDING PROCESSING ROUTINES, IN THE SAME ORDER.     ---*
*---     THE THIRD TABLE POINTS TO THE LOCAL SUBROUTINE THAT WILL  ---*
*---     RESET ALL THE FLAG BIT SETTINGS TO THEIR DEFAULTS IF      ---*
*---     SPECIFIC KEYWORDS WERE NOT SPECIFIED.                     ---*
*---                                                               ---*
*---     NOTE THAT WXTRN'S ARE USED TO REFER TO THOSE FUNCTIONS    ---*
*---     THAT ARE NOT FULLY IMPLEMENTED.                           ---*
*---------------------------------------------------------------------*
FUNTAB   DS    0F
         DC    CL12'ADDALIAS  ',A(0),V(ARCHALIS)
FUNLEN   EQU   *-FUNTAB
         DC    CL12'ADDNOTE   ',A(0),V(ARCHNOTE)
         DC    CL12'ALTALIAS  ',A(0),V(ARCHALIS)
         DC    CL12'ALTER     ',A(DEFRSPC),V(ARCHRSPC)
         DC    CL12'CLEAN     ',A(0),V(ARCHALIS)
         DC    CL12'COMPARE   ',A(0),V(ARCHCOMP)
         DC    CL12'CONVERT   ',A(DEFCONV),V(ARCHCONV)
         DC    CL12'COPY      ',A(DEFCOPY),V(ARCHCOPY)
         DC    CL12'DELALIAS  ',A(0),V(ARCHALIS)
         DC    CL12'DELETE    ',A(DEFDELE),V(ARCHDEL)
         DC    CL12'EXPORT    ',A(DEFEXPR),V(ARCHEXPR)
         DC    CL12'IMPORT    ',A(DEFIMPR),V(ARCHIMPR)
         DC    CL12'LFILE     ',A(0),V(ARCHLFVS)
         DC    CL12'LFILET    ',A(0),V(ARCHLFTP)
         DC    CL12'LIST      ',A(DEFLIST),V(ARCHLIST)
         DC    CL12'LISTT     ',A(DEFLSTT),V(ARCHLSTT)
         DC    CL12'LOAD      ',A(DEFLOAD),V(ARCHLOAD)
         DC    CL12'LOADT     ',A(DEFLOAD),V(ARCHLDT)
         DC    CL12'RESPECIFY ',A(DEFRSPC),V(ARCHRSPC)
LASTFUN  EQU   *
         DC    CL12'UNLOAD    ',A(DEFUNLD),V(ARCHUNLD)
         LTORG
         DROP  R11,R12
         TITLE 'ARCHPRNT --- ARCHIVER FUNCTION SUPPORT SUBROUTINE'
*---------------------------------------------------------------------*
*---     FUNCTION: PERFORM ALL PRINTING OPERATIONS FOR THE         ---*
*---           ARCHIVER. PAGES ARE 60 LINES LONG, WITH TITLES      ---*
*---           AND TIME & DATE OF ARCHIVER RUN.                    ---*
*---                                                               ---*
*---     THIS ROUTINE IS INVOKED EXCLUSIVELY VIA THE #PUT MACRO.   ---*
*---                                                               ---*
*---     ONE SPECIAL NOTE: THE SECOND ENTRY POINT, PRTSEP1,        ---*
*---     REQUIRES THAT R13 POINT TO AN AREA OF 36 WORDS OF         ---*
*---     STORAGE.  THIS TO MAINTAIN THE SAVE-AREA STACKING         ---*
*---     MECHANISM SET UP BY ARCHMAIN, EVEN THOUGH PRTSEP1         ---*
*---     IS ACTUALLY INVOKED BY ARCHPARS.                          ---*
*---------------------------------------------------------------------*
         EJECT
ARCHPRNT CSECT
         USING ARCHPRNT,R15
         B     12(,R15)            BRANCH AROUND CSECT ID
         DC    AL1(7),CL7'ARCHPRT'
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LA    R14,72(,R13)        BUMP DOWN SAVE AREA STACK
         ST    R14,8(,R13)         FORWARD POINTER
         ST    R13,4(,R14)         BACK POINTER
         LR    R13,R14             ADD TO CHAIN
         B     PRT1
         DROP  R15
PRTSEP1  DS    0H
         ENTRY PRTSEP1
         B     12(,R15)
         DC    AL1(7),CL7'PRTSEP1'
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LA    R14,72(,R13)        BUMP DOWN SAVE AREA STACK
         ST    R14,8(,R13)         FORWARD POINTER
         ST    R13,4(,R14)         BACK POINTER
         LR    R13,R14             ADD TO CHAIN
         LR    R12,R0               COPY MAINWK POINTER FROM R0
PRT1     DS    0H
         BALR  R11,R0              LOAD NEW BASE REGISTER
         USING *,R11               AND DEFINE MY BASE REGISTER
         USING MAINWK,R12          AND BASE MY WORK AREA
         MVC   LINE,0(R1)          COPY THE LINE
         CLI   LINE,C'1'           NEW-PAGE REQUEST ??
         BE    PRT6                YES ---
         CLI   LINE,C'+'           NO-SKIP CNTL ??
         BE    PRT5                YES ---
         CLI   LINE,C'-'           TRIPLE SPACE ??
         BE    PRT2                YES ---
         CLI   LINE,C'0'           DOUBLE SPACE ??
         BE    PRT3                YES ---
         CLI   LINE,C' '           SINGLE SPACE ??
         BE    PRT4                YES
         MVI   LINE,C' '           INVALID; BLANK IT OUT
         B     PRT4                AND ASSUME SINGLE SPACE
PRT2     DS    0H
         AP    LSTLIN#,=P'1'
PRT3     DS    0H
         AP    LSTLIN#,=P'1'
PRT4     DS    0H
         AP    LSTLIN#,=P'1'
PRT5     DS    0H
         CP    LSTLIN#,LINECNT     OFF THE END OF THE PAGE ??
         BL    PRT8                NOPE ---
PRT6     DS    0H
         ZAP   LSTLIN#,=P'4'       SET NEW LINECNT
         AP    PAGENO,=P'1'        INCREMENT THE PAGE COUNT
         MVC   TITLE1(133),=CL133'1     ARCHIVER V6.1 --- PDS/VSAM ARCHX
               IVE MANAGEMENT SYSTEM '
         UNPK  TITLE1+74(6),TIME
         MVC   TITLE1+72(2),TITLE1+74
         MVC   TITLE1+75(2),TITLE1+76
         MVI   TITLE1+74,C':'
         MVI   TITLE1+77,C':'
         UNPK  TITLE1+62(8),DATE
         MVC   TITLE1+60(2),TITLE1+62
         MVC   TITLE1+63(2),TITLE1+64
         MVI   TITLE1+62,C'/'
         MVI   TITLE1+65,C'/'
         MVC   TITLE1+84(5),=C'PAGE '
         MVC   TITLE1+90(7),=X'20202020202020'
         ED    TITLE1+89(8),PAGENO
         L     R2,PRTDCB           LOAD OUTPUT DCB ADDRESS
         PUT   (2),TITLE1          AND PUT OUT THE PAGE-SKIP
         PUT   (2),PRT11           AND COPYRIGHT NOTICE
         PUT   (2),PRT10
         CLC   TITLE3,PRT10        WAS TITLE3 SUPPLIED ??
         BE    PRT7                NOPE ---
         PUT   (2),TITLE3          YES; LIST IT OUT
         PUT   (2),PRT10
         AP    LSTLIN#,=P'2'       ACCOUNT FOR SUBTITLES
         MVI   LINE,C' '
PRT7     DS    0H
         PUT   (2),LINE
         B     PRT9                AND RETURN
PRT8     DS    0H
         L     R2,PRTDCB           LOAD LISTING DCB ADDRESS
         PUT   (2),LINE            OUTPUT THE LINE
PRT9     DS    0H
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         L     R13,4(,R13)
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         MVI   12(R13),X'FF'       SET 'UNUSED' FLAG
         LA    R15,0               SET THE RETURN CODE
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
         EJECT
PRT10    DC    CL133' '
PRT11    DC    CL133'      (C) 1999, RICHARD A. FOCHTMAN JR., WOODRIDGEX
               , ILLINOIS'
         LTORG
         DROP  R11,R12
         COPY  ##ARCHWK
         END
