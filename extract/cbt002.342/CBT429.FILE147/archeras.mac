ERAS     TITLE 'ERASE --- ARCHIVER FUNCTION SUPPORT SUBROUTINE'
*---------------------------------------------------------------------*
*---     FUNCTION: REMOVE ALL RECORDS OF A GIVEN KEY FROM THE      ---*
*---           VSAM ARCHIVE CLUSTER.  R1 POINTS TO THE KEY OF      ---*
*---           THE FIRST RECORD.  ALL RECORDS WITH MATCHING        ---*
*---           NAME, GROUP, SUBGROUP, TYPE AND VERSION NUMBER      ---*
*---           ARE ERASED.  THE LARGEST CHANGE IN THIS VERSION     ---*
*---           IS TO ERASE THE HEADER RECORD LAST INSTEAD OF       ---*
*---           FIRST.  THUS, THE ITEM WILL APPEAR IN ALL LISTS     ---*
*---           OF HEADERS UNTIL ITS DELETION IS COMPLETE.          ---*
*---           ALSO, THE PRESENCE OF ACCURATE SEQ# VALUES IS NO    ---*
*---           LONGER REQUIRED FOR CORRECT OPERATION. THE KEY      ---*
*---           VALUE, UP TO BUT NOT INCLUDING SEQ#, IS USED        ---*
*---           AS A GENERIC KEY FOR ALL SEARCHES AND COMPARES.     ---*
*---                                                               ---*
*---     ALL ALIAS ENTRIES THAT REFER TO THE ITEM BEING DELETED    ---*
*---     ARE ALSO REMOVED. THIS FUNCTION ADDED IN V4.1             ---*
*---                                                               ---*
*---     THIS ROUTINE MAY DELETE FROM CLUSTER-2 BY REPLACING THE   ---*
*---           ACB ADDRESS IN RPL3 VIA MODCB.                      ---*
*---                                                               ---*
*---     IT IS ASSUMED HEREIN THAT VS1BUF3 IS AVAILABLE FOR USE.   ---*
*---     DITTO FOR RPL3.                                           ---*
*---------------------------------------------------------------------*
         SPACE 3
ARCHERAS CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY  #ARCBITS
         USING ARCHERAS,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             LOAD ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHERAS,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             LOAD NEW SAVE AREA POINTER
         L     R14,4(,R13)         RELOAD BACK POINTER
         L     R14,12(,R14)        RELOAD ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         L     @RPL3,RPL3          POINT TO THE RPL
         L     @BUF3,VS1BUF3         AND THE BUFFER
         LR    R8,R1               COPY THE INPUT RECORD-KEY POINTER
         USING REC,R8
         MODCB RPL=(@RPL3),                                            X
               AREA=(@BUF3),                                           X
               ARG=(8),                                                X
               AREALEN=(*,VS1LIM),                                     X
               OPTCD=(MVE,KEQ,DIR,UPD,GEN),                            X
               KEYLEN=45,                                              X
               MF=(G,GENWK)
         MVC   RECSEQ#,=F'0'       CLOBBER SEQ#
         MVI   RECTT,#RTDATA       START WITH DATA RECORDS
         DROP  R8
         USING REC,@BUF3
ER1      DS    0H
         GET   RPL=(@RPL3)         READ A RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNZ   ER2                 NOPE ---
         CLC   RECTT(45),0(R8)     KEY MATCH UP TO SEQ# ??
         BNE   ER2                 NOPE ---
         ERASE RPL=(@RPL3)         YES; ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         B     ER1                 AND CONTINUE ---
ER2      DS    0H
         MVI   0(R8),#RTNOTE       CONTINUE WITH NOTE RECORDS
ER5      DS    0H
         GET   RPL=(@RPL3)         READ A RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNZ   ER6                 NOPE ---
         CLC   RECTT(45),0(R8)     KEY MATCH UP TO SEQ# ??
         BNE   ER6                 NOPE ---
         ERASE RPL=(@RPL3)         YES; ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         B     ER5                 AND CONTINUE ---
ER6      DS    0H
         MODCB RPL=(@RPL3),                                            X
               ARG=(@BUF3),                                            X
               OPTCD=(MVE,KGE,SEQ,UPD),                                X
               MF=(G,GENWK)
         XC    RECTT(49),RECTT     CLEAR OUT THAT KEY
         MVI   RECTT,#RTHDR        NOW DO THE ALIASES
         POINT RPL=(@RPL3)
ER7      DS    0H
         GET   RPL=(@RPL3)         READ A RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNZ   ER8                 NOPE ---
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ER8                 NOPE ---
         #IF   RSRALIAS,OFF,ER7    NOT AN ALIAS
         CLC   RECAN(44),1(R8)
         BNE   ER7                 NOPE; KEEP SEARCHING
         ERASE RPL=(@RPL3)         YES; ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         B     ER7                 AND CONTINUE ---
ER8      DS    0H
         MODCB RPL=(@RPL3),                                            X
               ARG=(8),                                                X
               OPTCD=(MVE,KEQ,DIR,UPD,GEN),                            X
               KEYLEN=45,                                              X
               MF=(G,GENWK)
         MVI   0(R8),#RTHDR        SET FOR HEADER RECORD
ER9      DS    0H
         GET   RPL=(@RPL3)         READ A RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNZ   ER10                NOPE ---
         ERASE RPL=(@RPL3)         YES; ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         B     ER9                 AND CONTINUE ---
ER10     DS    0H
         ENDREQ RPL=(@RPL3)
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(MVE,KEQ,DIR,NUP,FKS),                            X
               MF=(G,GENWK)
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RETURN CODE OF ZERO
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         DROP  @BUF3,R11,R12
         END
