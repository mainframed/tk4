ALIS     TITLE 'ARCHIVER --- ALIAS ADD/DELETE/ALTER FUNCTIONS '
*---------------------------------------------------------------------*
*---     THIS ROUTINE PERFORMS THE ADDALIAS/DELALIAS/ALTALIAS      ---*
*---          FUNCTIONS OF THE ARCHIVER. WHILE THE ADD ALIAS       ---*
*---          FUNCTION IS FAIRLY STRAIGHTFORWARD, THE DELALIAS IS  ---*
*---          SLIGHTLY MORE COMPLICATED, DUE TO THE ABILITY TO     ---*
*---          DELETE ALL ALIASES FOR A PARTICULAR ARCHIVE ITEM.    ---*
*---          EVEN MORE COMPLEX IS THE ALTALIAS FUNCTION.  HERE'S  ---*
*---          A BRIEF DESCRIPTION OF HOW EACH MECHANISM WORKS.     ---*
*---                                                               ---*
*---     ADDALIAS: THIS FUNCTION WILL LOCATE THE HEADER(S)         ---*
*---          DESCRIBED IN THE ITEM= OPERAND.  EACH ITEM SO        ---*
*---          LOCATED WILL HAVE THE ALIAS VALUES FROM THE          ---*
*---          'ALIAS=' OPERAND ASSIGNED.  IN THIS CASE, IF THE     ---*
*---          ALIAS OPERAND CONTAINS A GENERIC, THE CORRESPONDING  ---*
*---          QUALIFIER FROM THE ORIGINAL ITEM IS DUPLICATED INTO  ---*
*---          THE ALIAS.  ALSO NOTE: YOU MAY NOT ADD AN ALIAS TO   ---*
*---          AN ALIAS. IF THE ITEM SELECTED IS AN ALIAS, RATHER   ---*
*---          THAN A REAL MEMBER, THE ALIAS FOUND IS LISTED,       ---*
*---          ALONG WITH A WARNING MESSAGE.                        ---*
*---                                                               ---*
*---     DELALIAS: THIS FUNCTION HAS TWO FLAVORS: DELETE A SINGLE  ---*
*---          ALIAS OR DELETE ALL THE ALIASES FOR A PARTICULAR     ---*
*---          REAL MEMBER.  IF THE USER SUPPLIES THE 'ALIAS='      ---*
*---          OPERAND, A SINGLE ALIAS IS DELETED.  IF THE USER     ---*
*---          SUPPLIES THE 'ITEM=' OPERAND, ALL ALIASES THAT       ---*
*---          RELATE TO THAT ITEM, OR GROUP OF ITEMS, ARE          ---*
*---          DELETED.                                             ---*
*---                                                               ---*
*---     CLEAN: THIS FUNCTION WILL RESET THE ALIAS FLAGS           ---*
*---           THROUGHOUT THE HEADER RECORD KEYRANGE.  IN SO       ---*
*---           DOING, ITEMS THAT HAVE HAD ALIASES DELETED WILL BE  ---*
*---           RESET TO SHOW THAT NO ALIASES EXIST, ITEMS THAT     ---*
*---           HAVE BEEN DELETED WILL HAVE OLD 'ORPHAN' ALIASES    ---*
*---           DELETED, ETC.  BASICALLY, IT'S A CLEAN UP OF ALL    ---*
*---           THE SCRAPS LEFT BEHIND BY OTHER ALIAS PROCESSING,   ---*
*---           OR NON-PROCESSING.                                  ---*
*---                                                               ---*
*---------------------------------------------------------------------*
ARCHALIS CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY #ARCBITS
         USING ARCHALIS,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             ALIS ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHALIS,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             ALIS NEW SAVE AREA POINTER
         L     R14,4(,R13)         RECOPY BACK POINTER
         L     R14,12(,R14)        RECOPY ORIG. REG 14
         LA    R10,0(,R11)         COPY ORIGINAL BASE REGISTER
         AH    R10,PASSIT-2        BUMP BY A BASE'S WORTH
         USING ARCHALIS+4096,R10   AND DECLARE IT
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         XC    FCOUNT,FCOUNT       CLEAR FUNCTION RECORD COUNT
         XC    MCNT,MCNT           AND MEMBER COUNT
         XC    ACNT,ACNT           AND MIS-MATCH COUNT
         MVC   VS1MODE,=CL8'OUTPUT' SET THE I/O MODE
         LA    R1,VSAM1DD          LOAD THE PARM POINTER
         LA    R0,0                AND THE 'OPEN' FLAG
         CALL  ARCHVSOP            CALL THE 'OPEN' FUNCTION
         LTR   R15,R15             OPEN OK ??
         BNZ   ENDITALL            NOPE; CAN'T WORK
         L     @RPL1,RPL1          LOAD RPL
         L     @RPL2,RPL2
         L     @RPL3,RPL3
         L     @BUF1,VS1BUF1       AND BUFFER
         L     @BUF2,VS1BUF2
         L     @BUF3,VS1BUF3       REGISTERS
         EJECT
*---------------------------------------------------------------------*
*---     DETERMINE JUST WHICH ALIAS-RELATED FUNCTION WE'RE         ---*
*---           PERFORMING AND CALL THE APPROPRIATE LOCAL           ---*
*---           SUBROUTINE.                                         ---*
*---------------------------------------------------------------------*
         CLC   VERB,=CL12'ADDALIAS' ADDING ALIAS(ES) ??
         BE    ADDER               YES ---
         CLC   VERB,=CL12'DELALIAS' DELETING ALIAS(ES) ??
         BE    DELLER              YES
         CLC   VERB,=CL12'CLEAN'   RECHECKING AND CLEANING ??
         BE    CLEANER             YES
         TITLE 'ALTER --- POINT AN ALIAS AT A DIFFERENT ''REAL'' ITEM'
*---------------------------------------------------------------------*
*---     ALTALIAS IS PERFORMED INLINE.                            ----*
*---------------------------------------------------------------------*
         SPACE 3
ALTER    DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
AA1      DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   ENDITALL            NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,OFF,AA1    NOT AN ALIAS RECORD
         LA    R1,RECAN            POINT TO THE REAL NAME
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            THIS THE ONE WE CHANGE ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   AA1                 NOPE ---
         SPACE 3
*---------------------------------------------------------------------*
*---     WE'VE FOUND AN ALIAS TO ALTER.  NOW CHECK THE FIELDS,     ---*
*---     ALTERING AS WE GO, AND REWRITE THE RECORD.                ---*
*---------------------------------------------------------------------*
         SPACE 3
         CLC   QC1,GENQUAL         SAME MEMBER NAME ??
         BE    *+10                YES ---
         MVC   RECAN,QC1           NOPE; REPLACE MEMBER NAME
         CLC   QC2,GENQUAL         SAME GROUP ??
         BE    *+10                YES ---
         MVC   RECAG,QC2           NOPE; USE DIFFERENT GROUP
         CLC   QC3,GENQUAL         SAME SUBGROUP ??
         BE    *+10                YES ---
         MVC   RECASG,QC3          NOPE; USE A DIFFERENT ONE
         CLC   QC4,GENQUAL         SAME TYPE ??
         BE    *+10                YES ---
         MVC   RECAT,QC4           NOPE; USE A DIFFERENT ONE
         NC    QC5,QC5             WAS A VERSION SUPPLIED ??
         BZ    *+10                NOPE; HIGHEST VERSION NUMBER
         MVC   RECAVER,QC5         YES; USE IT
         PUT   RPL=(@RPL1)         WRITE THE UPDATED RECORD
         LTR   R15,R15             ANYTHING ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         L     R15,MCNT            LOAD THE COUNTER
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,MCNT            AND SAVE UPDATED COUNT
         #FORMAT RECTT,,AA2        OUTPUT THE 'ALIAS IS ALTERED.' MSG
         #PUT  LINE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+1(L'AA3),AA3
         #FORMAT RECAN,OUT=LINE+L'AA3,CLEAR=NO
         #PUT  LINE
         B     AA1                 LOOP FOR MORE ---
AA2      DC    AL1(19)
         DC    CL19'ALIAS IS ALTERED.'
AA3      DC    CL36'          NOW REFERS TO REAL ITEM: '
         DROP  @BUF1
         TITLE 'ADDALIAS --- ADD AN ALIAS FOR REAL ITEM(S)'
*---------------------------------------------------------------------*
*---     ADDALIAS IS MUCH SIMPLER THAN THE ALTALIAS FUNCTION,      ---*
*---     IT MAY SEEM INFINITELY WORSE, AT FIRST GLANCE.  WE MARK   ---*
*---     THE 'REAL ITEM' HEADER TO SHOW THAT IT HAS AT LEAST ONE   ---*
*---     ALIAS AND REWRITE IT.  THEN, USING A SEPARATE RPL AND     ---*
*---     BUFFER, WE BUILD AND WRITE THE ALIAS RECORD. BY USING     ---*
*---     MULTIPLE VSAM STRINGS, WE MAINTAIN POSITIONING AND        ---*
*---     NEVER HAVE TO 'SAVE' A KEY FOR LATER REPOSITIONING.       ---*
*---------------------------------------------------------------------*
         SPACE 3
**********************+++++++++++++++++++++++++++++++++++++++++
ADDER    DS    0H
*        MODCB ACB=(*,ACB1),STRNO=1,MF=(E,GENWK)
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
AD1      DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   ENDITALL            NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,AD1     NOT AN ALIAS RECORD
         LA    R1,RECN             POINT TO THE REAL NAME
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            ALIAS FOR THIS ONE ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   AD1                 NOPE ---
         SPACE 3
*---------------------------------------------------------------------*
*---     WE'VE FOUND AN ITEM TO ADD THE ALIAS FOR. NOW BUILD THE   ---*
*---     ALIAS RECORD AND ADD TO THE CLUSTER.  ALSO, SET THE       ---*
*---     'HAS ALIASES' FLAG IN THE REAL ITEM'S HEADER.             ---*
*---------------------------------------------------------------------*
         SPACE 3
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(DIR,FKS,KEQ,SYN,UPD),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   ENDITALL            NOPE; ALL DONE
         #SET  RSRHALS,ON          TURN ON THE 'HAS ALIAS(ES)' FLAG
         PUT   RPL=(@RPL1)         WRITE THE UPDATED RECORD
         LTR   R15,R15             ANYTHING ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         ENDREQ RPL=(@RPL1)
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         XC    0(256,@BUF2),0(@BUF2) CLEAR THE AREA
         MVC   RECAN-RECTT(44,@BUF2),RECN COPY THE 'REAL' ITEM KEYS
         DROP  @BUF1
         USING REC,@BUF2
         #SET  RSRALIAS,ON         TURN ON THE ALIAS FLAG
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MVC   RECN(RECKLEN-5),QC1 COPY NEW QUALIFIERS
         CLC   QC1,GENQUAL         SAME MEMBER NAME ??
         BNE   *+10                NO ---
         MVC   RECN,RECAN          YES; REPLACE MEMBER NAME
         CLC   QC2,GENQUAL         SAME GROUP ??
         BNE   *+10                NO ---
         MVC   RECG,RECAG          YES; USE DIFFERENT GROUP
         CLC   QC3,GENQUAL         SAME SUBGROUP ??
         BNE   *+10                NO ---
         MVC   RECSG,RECASG        YES; USE A DIFFERENT ONE
         CLC   QC4,GENQUAL         SAME TYPE ??
         BNE   *+10                NO ---
         MVC   RECT,RECAT          YES; USE A DIFFERENT ONE
         NC    QC5,QC5             WAS A VERSION SUPPLIED ??
         BNZ   *+10                NOPE; HIGHEST VERSION NUMBER
         MVC   RECVER,RECAVER      YES; USE IT
         MODCB RPL=(@RPL2),AREA=(@BUF2),                               X
               RECLEN=RECAVER+4-REC,                                   X
               OPTCD=(DIR,FKS,KGE,SYN,NUP),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         PUT   RPL=(@RPL2)         WRITE THE UPDATED RECORD
         LTR   R15,R15             ANYTHING ??
         BZ    AOK                 ALL IS OKAY
         TESTCB RPL=(@RPL2),FDBK=8,MF=(E,GENWK)
         BNE   1(,R15)             NOT DUPLICATE RCD. DIE !!
         #FORMAT RECAN-1,,ADDUP
         #PUT  LINE                OUTPUT THE 'DUPLICATE ALIAS' MESSAGE
         B     ADZZ                GO TRY FOR NEXT ALIAS
AOK      DS    0H
         L     R15,MCNT            LOAD THE COUNTER
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,MCNT            AND SAVE UPDATED COUNT
         #FORMAT RECTT,,AD2        OUTPUT THE 'ALIAS IS ADDED.' MSG
         #PUT  LINE
         MVC   LINE+1(L'AD3),AD3
         #FORMAT RECAN-1,OUT=LINE+L'AD3,CLEAR=NO
         #PUT  LINE
         DROP  @BUF2
         USING REC,@BUF1
ADZZ     DS    0H
         #IF   VRS,ON,ADX
         LA    R0,0                CLEAR A WORK REGISTER
         IC    R0,RECT+9           INSERT LAST OF TYPE FIELD
         AL    R0,=F'1'            INCREMENT IT BY ONE
         STC   R0,RECT+9           SAVE THE RESULT
         POINT RPL=(@RPL1)         RESET THE VSAM POINTER
         B     AD1                 LOOP FOR MORE ---
ADX      DS    0H
         LA    R0,0                CLEAR A WORK REGISTER
         IC    R0,RECVER+3         INSERT LAST OF VERSION FIELD
         AL    R0,=F'1'            INCREMENT IT BY ONE
         STC   R0,RECVER+3         SAVE THE RESULT
         POINT RPL=(@RPL1)         RESET THE VSAM POINTER
         B     AD1                 LOOP FOR MORE ---
AD2      DC    AL1(19)
         DC    CL19'ALIAS IS ADDED.'
AD3      DC    CL32'          REFERS TO REAL ITEM: '
ADDUP    DC    AL1(35)
         DC    CL35'ALIAS NOT ADDED. DUPLICATE ALIAS.'
         DROP  @BUF1
         TITLE 'DELALIAS --- DELETE ALIAS(ES) FOR REAL ITEM(S)'
*---------------------------------------------------------------------*
*---     DELALIAS GETS A LITTLE TRICKY.  WE HAVE TWO OPTIONS FOR   ---*
*---     THIS FUNCTION. WE CAN EITHER DELETE A STRING OF ALIASES,  ---*
*---     IF NO 'ITEM=' PARAMETER WAS SUPPLIED, OR DELETE ALL       ---*
*---     ALIASES THAT REFER TO A PARTICULAR ITEM, IF 'ITEM=' WAS   ---*
*---     SUPPLIED.  OUR TRIGGER IS WHETHER OR NOT THE FIRST        ---*
*---     CHARACTER OF Q1 IS A BLANK, THE INITIAL VALUE.  USING     ---*
*---     THIS COMPARE AS A SWITCH, WE WILL EITHER USE THE DEL1     ---*
*---     ROUTINE OR THE DEL2 ROUTINE.                              ---*
*---------------------------------------------------------------------*
         SPACE 3
DELLER   DS    0H
         CLI   Q1,C' '             ALL ALIASES FOR AN ITEM ??
         BNE   DEL2                YES ---
         SPACE 3
*---------------------------------------------------------------------*
*---     DELETE A STRING OF ALIASES ONLY.                         ----*
*---------------------------------------------------------------------*
         SPACE 3
DEL1     DS    0H
         MVC   Q1(44),QC1          COPY ALIAS VALUES FOR THE CHECKER
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
DA1      DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   ENDITALL            NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,OFF,DA1    NOT AN ALIAS RECORD
         LA    R1,RECN             POINT TO THE ALIAS NAME
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            ALIAS FOR THIS ONE ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   DA1                 NOPE ---
         ERASE RPL=(@RPL1)         ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         L     R15,MCNT            LOAD THE ITEM COUNTER
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,MCNT            AND SAVE UPDATED COUNT
         #FORMAT RECTT,,DELD       OUTPUT THE 'ALIAS DELETED' MESSAGE
         #PUT  LINE
         B     DA1                 YES; CONTINUE
DELD     DC    AL1(L'DELD1)
DELD1    DC    CL30' ALIAS IS DELETED.'
         DROP  @BUF1
         SPACE 3
*---------------------------------------------------------------------*
*---     DELETE ALL THE ALIASES FOR A SPECIFIC ITEM, OR GROUP OF   ---*
*---     ITEMS.  WE ARE BOUND TO A MECHANISM WHICH MAKES UP IN     ---*
*---     BRUTE FORCE WHAT IT LACKS IN ELEGANCE.  SEARCH THROUGH    ---*
*---     ALL THE HEADER RECORDS FOR ANY ALIAS THAT REFERS TO THE   ---*
*---     SELECTED ITEM AND DELETE THEM ALL.                        ---*
*---------------------------------------------------------------------*
         SPACE 3
DEL2     DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,R6),0(R6)    START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
DA2      DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   ENDITALL            NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,OFF,DA2    NOT AN ALIAS RECORD
         LA    R1,RECAN            POINT TO THE 'REAL' NAME
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            DELETE IT ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   DA2                 NOPE ---
         ERASE RPL=(@RPL1)         ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         L     R15,MCNT            LOAD THE ITEM COUNTER
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,MCNT            AND SAVE UPDATED COUNT
         #FORMAT RECTT,,DELD       OUTPUT THE 'ALIAS DELETED' MESSAGE
         #PUT  LINE
         B     DA2                 YES; CONTINUE
         DROP  @BUF1
         TITLE 'CLEAN UP THE ALIAS FLAGS, ETC.'
*---------------------------------------------------------------------*
*---     WE LOOP THROUGH THE HEADER RECORDS TWICE FOR THIS        ----*
*---     PROCESS.  THE FIRST LOOP CONCENTRATES ON THE 'TRUE NAME' ----*
*---     RECORDS, TURNING OFF THE FLAG BIT THAT INDICATES THE     ----*
*---     PRESENCE OF ALIASES.  THE SECOND PASS LOCATES ALL THE    ----*
*---     ALIAS RECORDS AND SETS THE 'ALIASES PRESENT' BIT ON IN   ----*
*---     THE 'TRUE NAME' RECORD THEY REFER TO.  IF THE 'TRUE      ----*
*---     NAME' IS NOT PRESENT, THE ALIAS RECORD IS DELETED.       ----*
*---------------------------------------------------------------------*
CLEANER  DS    0H
         L     @RPL1,RPL1          POINT TO THE
         L     @RPL2,RPL2            VSAM RPLS
         L     @RPL3,RPL3            VSAM RPLS
         L     @BUF1,VS1BUF1       LOAD THE BUFFER ADDRESS
         L     @BUF2,VS1BUF2       LOAD THE BUFFER ADDRESS
         L     @BUF3,VS1BUF3       LOAD THE BUFFER ADDRESS
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ARG=(@BUF2),                                            X
               AREA=(@BUF2),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(DIR,FKS,KEQ,SYN,UPD),                            X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) CLEAR THE KEY
         POINT RPL=(@RPL1)         GET TO IT
CL1      DS    0H
         GET   RPL=(@RPL1)         GO READ A RECORD
CL1A     DS    0H
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   CL2                 NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,CL1     DON'T TOUCH ALIASES, YET
         #SET  RSRHALS,OFF         INDICATE NO ALIASES
         PUT   RPL=(@RPL1)         AND OUTPUT THE RECORD
CL1B     DS    0H
         B     CL1                 AND LOOP FOR MORE
CL2      DS    0H
         XC    0(RECKLEN,@BUF1),0(@BUF1) RESET TO STARTING KEY
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(NUP),                                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
CL3      DS    0H
         MVI   RECSEQ#+3,1         INCREMENT THE KEY VALUE
         POINT RPL=(@RPL1)         RESET TO DATASET START
         GET   RPL=(@RPL1)         READ A RECORD
CL3A     DS    0H
         ENDREQ RPL=(@RPL1)
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE
         #IF   RSRALIAS,OFF,CL3    NOT AN ALIAS ---
         XC    0(RECKLEN,@BUF2),0(@BUF2) CLEAR THE KEY AREA
         MVI   0(@BUF2),#RTHDR     SHOW A HEADER RECORD
         MVC   1(44,@BUF2),RECAN   MOVE IN THE 'TRUE NAME'
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(DIR,FKS,KEQ,SYN,UPD),                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         GET   RPL=(@RPL2)         AND FETCH THE RECORD (MAYBE)
CL3B     DS    0H
         LTR   R15,R15             WAS IT FOUND ??
         BNZ   CL4                 NOPE; DELETE THE ALIAS RECORD
         PUSH  USING
         USING REC,@BUF2
         #SET  RSRHALS,ON          SAY IT HAS ALIASES
         POP   USING
         PUT   RPL=(@RPL2)         UPDATE THE RECORD
CL3C     DS    0H
         B     CL3                 AND CONTINUE ---
CL4      DS    0H
         GET   RPL=(@RPL3)         RE-FETCH THE RECORD
CL4A     DS    0H
         ERASE RPL=(@RPL3)         DELETE IT
CL4B     DS    0H
         B     CL3                 AND CONTINUE ---
         TITLE 'TERMINATION LINKAGE, ETC. '
*---------------------------------------------------------------------*
*---     WRAP UP, CLOSE THE VSAM FILES, FREE THE STORAGE AND       ---*
*---           RETURN TO ARCHMAIN FOR ANOTHER FUNCTION.            ---*
*---------------------------------------------------------------------*
ENDITALL DS    0H
         LA    R1,VSAM1DD          POINT TO THE DDNAME
         LA    R0,4                SET 'CLOSE' REQUEST
         CALL  ARCHVSOP            CALL THE VSAM 'CLOSE' ROUTINE
         #PUT  ERR12
         L     R0,MCNT             COPY MEMBER COUNT
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,MCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
         L     R13,4(,R13)         COPY BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
         LTORG
* ERROR MESSAGES, ETC.
ERR12    DC    CL133'0         ALIAS MANIPULATIONS COMPLETED.  TOTALS FX
               OLLOW: '
MCMSG    DC    CL133' '
         ORG   MCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202120'
         DC    C' ALIAS(ES) PROCESSED.'
         ORG
GENQUAL  DC    CL10'%%%%%%%%%%'
         LTORG
MINREC   DC    A(RECSIZE)
         COPY  #RECS
         COPY  ##ARCHWK
         END
