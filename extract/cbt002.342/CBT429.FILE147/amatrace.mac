         MACRO
         ENTER
         LCLA  &A
.LOOP    AIF   (&A EQ 6).END
TRACE&A  DS    0H
         STM   R14,R12,12(R13)     .SAVE ALL REGISTERS.
         BALR  R10,0               .SET TEMP BASE REGISTER.
         USING *,R10               .TELL ASSEMBLER.
         B     AMA&A               .BRANCH AROUND ENTRY ID.
         DC    CL8'TRACE&A'        .ENTRY IDENTIFIER.
AMA&A    LA    R12,&A              .SET ENTRY OPTION.
         L     R11,=V(AMATRACE)    .SET PERMANENT PGM BASE.
         B     AMA10               .BR TO LINK SAVE AREAS.
         SPACE 2
&A       SETA  &A+1
         AGO   .LOOP
.END     ANOP
         DROP  R10                 .TEMP ADDRESSABILITY NOT NEEDED.
         USING AMATRACE,R11
AMA10    DS    0H
         STM   R0,R15,REGAREA      .GET REGISTERS AT ENTRY TO TRACE.
         MVC   REGAREA+40(12),60(R13) .GET TRUE VALUES FOR 10-12.
         ST    R13,SA+4            .LINK SAVE AREAS.
         LA    R10,SA
         ST    R10,8(R13)
         LR    R13,R10
         MEND
         TITLE 'AMA - BAL STATEMENT LABEL TRACE PROGRAM.'
***********************************************************************
*AMATRACE
*
*        BAL STATEMENT LABEL TRACE PROGRAM
*
*ENTRY FROM:   A BAL APPLICATION PROGRAM USING THE MACRO 'LAB'.
*
*INPUT:        GENL REG 14 = PARAMETER LIST ADDRESS.
*
*            AMATRACE HAS A SEPARATE ENTRY POINT FOR EACH USER OPTION.
*
*        ENTRY POINT         FUNCTION
*           TRACE0 - USE SAME TRACE LEVEL.
*           TRACE1 - TRACE STATEMENT LABELS ONLY.
*           TRACE2 - TRACE STATEMENT LABELS AND GENL REGISTERS.
*           TRACE3 - TRACE STATEMENT LABELS AND SNAP DUMP.
*           TRACE4 - ABEND DUMP.
*
*PROCESS:      THIS ROUTINE PRINTS TRACE INFORMATION ON THE LEVEL
*              REQUESTED BY THE CALLER.
*
*OUTPUT:       TRACE 0-3 FILE 'TRACEOUT'
*              TRACE 4   FILE 'SYSUDUMP'
*
*EXT REFS:     NONE.
*
*OS/VS MACROS: ABEND,CHECK,GETMAIN,OPEN,SNAP,WRITE,WTO.
*PVT MACROS:   REGISTER.
*
*ATTRIBUTES:   NON-REENTRANT,NON-REFRESHABLE.
*SIZE:         APPR. 1800 BYTES.
*
*              S/370-145 OS/VS1 2.6
***********************************************************************
         EJECT
***********************************************************************
*
*        TRACE PARAMETER LIST FORMAT
*
*ON ENTRY:     GENL REG 14 CONTAINS THE PARAM LIST ADDRESS.
*
*        --------------------------------+
*PREFIX: DS AL1(0) AREA TRACE INDICATOR  ×
*        DS AL1    NUMBER OF AREAS       ×
*                                        ×
*        --------------------+           +--> OPTIONAL
*ENTRY:  DS CL10   AREA NAME ×           ×
*        DS AL4    AREA ADDR +-->REPEATED×
*        DS AL2    AREA SIZE ×           ×
*        --------------------+           ×
*        --------------------------------+
*
*SUFFIX: DS CL8    TRACE IDENTIFIER
*
*  - OR -
*
*        DS AL4    MESSAGE ADDRESS
*
***********************************************************************
         EJECT
         PRINT NOGEN
AMATRACE CSECT                     MODULE IDENTIFIER.
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         DC    CL8'AMATRACE'       SAME.
         ENTRY TRACE0,TRACE1,TRACE2,TRACE3,TRACE4,TRACE5
         ENTER                     SET UP ENTRY CONVENTIONS FOR ALL ENT
         SPACE 1
*        GENL REG 11 = PROGRAM BASE.
*        GENL REG 12 = OPTION TYPE.
*        GENL REG 13 = REGISTER SAVE AREA ADDRESS.
*        GENL REG 14 = PARAMETER LIST ADDRESS.
*        REGAREA = REGISTERS AT ENTRY TO TRACE.
         SPACE 1
AMA20    DS    0H
         SPACE 1
*        OPEN OUTPUT FILE IF REQUIRED
         SPACE 1
         L     R2,16               SET CVT ADDRESS.
         L     R2,0(R2)            SET TCB POINTER ADDRESS.
         L     R2,4(R2)            SET CURRENT TCB ADDRESS.
         L     R2,112(R2)          SET TCB FSA ADDRESS.
         LA    R2,4(R2)            USE FSA BACK CHAIN ADDRESS.
         L     R3,0(R2)            CHECK IF ALREADY IN USE.
         OC    1(3,R2),1(R2)       TRACE ALREADY IN USE ?
         BNZ   AMA26               BR IF YES.
         GETMAIN R,LV=88           GET DCB SPACE.
         MVC   0(88,R1),TRACEOUT   SET UP DCB.
         LR    R3,R1               SAVE DCB ADDRESS.
         OPEN  ((R3),OUTPUT)       OPEN TRACE OUTPUT FILE.
         TM    48(R3),X'10'        DID FILE OPEN OK ?
         BO    AMA25               BR IF YES.
         WTO   'AMA001I TRACEOUT DD CARD REQUIRED FOR TRACE OUTPUT',   X
               ROUTCDE=11          TELL PGMMER HE BLEW IT.
         SVC   3                   EXIT TO OS/VS.
         SPACE 1
AMA25    DS    0H
         N     R3,=X'00FFFFFF'     CLEAR HI ORDER BYTE.
         O     R3,0(R2)            SAVE TRACE PRT ENABLE/DISABLE STATUS
         ST    R3,0(R2)            SAVE OPEN DCB ADDRESS IN FSA.
         SPACE 1
AMA26    DS    0H
         STC   R12,LEVEL           SET NEW TRACE LEVEL.
         CLI   LEVEL,5             IS THIS A TRACE MESSAGE CALL ?
         BNE   AMA30               BR IF NOT.
         TM    0(R2),X'80'         TRACE PRINTING DISABLED ?
         BO    AMA29               BR IF YES.
         L     R1,0(R14)           GET MESSAGE ADDRESS.
         LH    R4,0(R1)            GET MESSAGE LENGTH.
         LA    R1,2(R1)            SET TEXT ADDRESS.
         LTR   R4,R4               MESSAGE TOO LARGE ?
         BP    AMA27               BR IF OK.
         MVC   LINE(30),=C'AMA002I INVALID MESSAGE LENGTH'
         BAL   R9,PRINT            PRINT THE ERROR MESSAGE.
         B     AMA29
         SPACE 1
AMA27    DS    0H
         C     R4,=F'120'          MESSAGE TOO LARGE ?
         BNH   AMA28               BR IF NOT.
         LA    R4,120              TRUNCATE MESSAGE LENGTH.
         SPACE 1
AMA28    DS    0H
         BCTR  R4,0                SET LENGTH FOR EX.
         EX    R4,MVC              MOVE USER MESSAGE TO PRINT LINE.
         BAL   R9,PRINT            PRINT USER MESSAGE.
         SPACE 1
AMA29    DS    0H
         L     R13,4(R13)          GET PREVIOUS SAVE AREA ADDRESS.
         LM    R14,R12,12(R13)     RESTORE ALL REGISTERS.
         B     4(R14)              RETURN TO APPLICATION PROGRAM.
         SPACE 1
AMA30    DS    0H                  MESSAGE BYPASS.
         SR    R8,R8               SET UP AREAS INDICATOR.
         CLI   0(R14),0            TRACE MAIN STORAGE OPTION SPECIFIED?
         BNE   AMA35               BR IF NOT.
         LR    R8,R14              SAVE AREAS PARAM LIST ADDRESS.
         LH    R1,0(R14)           PICK NUMBER OF AREAS.
         SLL   R1,4                SET AREAS PARAM LIST LENGTH.
         LA    R14,2(R1,R14)       SET TRACE IDENTIFIER ADDRESS.
         L     R1,4(R13)           GET USER SAVE AREA ADDRESS.
         ST    R14,12(R1)          SET RETURN ADDRESS.
         SPACE 1
AMA35    DS    0H
         TM    0(R2),X'80'         TRACE PRINTING DISABLED ?
         BO    AMA900              BR IF YES.
         MVC   LINE(8),0(R14)      PUT STATEMENT LABEL IN PRINT LINE.
         SPACE 1
*        PRINT TRACE INFORMATION
         SPACE 1
AMA40    DS    0H
         CLI   LEVEL,1             LABELS ONLY ?
         BNE   AMA50               BR IF NOT.
         BAL   R9,PRINT            PRINT LABEL.
         B     AMA80               CHECK FOR STORAGE AREA TRACE.
         SPACE 1
AMA50    DS    0H
         BAL   R10,PRINTREG        PRINT CURRENT REGISTERS.
         CLI   LEVEL,2             LABELS AND REGS ONLY ?
         BE    AMA80               BR IF YES.
         CLI   LEVEL,3             LABELS AND SNAP ?
         BNE   AMA60               BR IF NOT.
         SNAP  DCB=(R3),ID=7,PDATA=ALL PRINT PARTITION STORAGE.
         B     AMA80               CHECK FOR STORAGE AREA TRACE.
         SPACE 1
AMA60    DS    0H
         LTR   R8,R8               AREA TRACE REQD ?
         BZ    AMA70               BR IF NOT.
         BAL   R10,PRINTA          PRINT STORAGE AREAS.
         SPACE 1
AMA70    DS    0H
         ABEND 7,DUMP              TAKE A DUMP...
         SPACE 1
*        PRINT STORAGE AREAS IF REQD
         SPACE 1
AMA80    DS    0H
         LTR   R8,R8               STORAGE AREA TRACE ?
         BZ    AMA900              BR IF NOT.
         BAL   R10,PRINTA          PRINT ALL STORAGE AREAS.
         SPACE 1
*        RESTORE REGISTERS AND RETURN
         SPACE 1
AMA900   DS    0H
         L     R13,4(R13)          GET PREVIOUS SAVE AREA ADDRESS.
         LM    R14,R12,12(R13)     RESTORE ALL REGISTERS.
         B     8(R14)              RETURN TO APPLICATION PROGRAM.
         EJECT
***********************************************************************
*PRINT
*        PRINT LINE ROUTINE
*
*INPUT:  R9 = RETURN ADDRESS.
*        LINE = LINE TO BE PRINTED.
*
PRINT    DS    0H
         WRITE DECB,SF,(R3),VBRECORD,'S' PRINT A LINE.
         CHECK DECB                WAIT FOR COMPLETION.
         MVC   LINE,LINE-1         CLEAR PRINT BUFFER.
         BR    R9                  RETURN TO CALLER.
         EJECT
***********************************************************************
*PRINTREG
*
*        PRINT GENERAL REGISTERS ROUTINE
*
*INPUT:  R10 = RETURN ADDRESS.
*        REGAREA = REGISTERS AT ENTRY TO TRACE.
*
PRINTREG DS    0H
         LA    R2,REGAREA          SET POINTER TO CURRENT REGS.
         ZAP   REG,=P'0'
         LA    R4,LINE+16          SET PRINT LINE POS FOR REGS.
         MVC   0(8,R4),=C'REGS 0-7' PRINT REGISTER HEADER.
         SPACE 1
AMA500   DS    0H
         AP    REG,=P'1'           INCREMENT REGISTER COUNTER.
         UNPK  13(9,R4),0(5,R2)    PRINT REGISTER CONTENTS.
         MVI   21(R4),C' '         BLAST GARBAGE BYTE.
         TR    13(8,R4),TRT1       TRANSLATE TO EBCDIC.
         LA    R4,10(R4)           BUMP PRINT LINE OFFSET.
         CP    REG,=P'4'           BUMP AN EXTRA TWO AT FOUR REGISTER
         BNE   AMA502              INTERVALS.
         LA    R4,2(R4)
AMA502   DS    0H
         CP    REG,=P'12'
         BNE   AMA505
         LA    R4,2(R4)
AMA505   DS    0H
         LA    R2,4(R2)            BUMP REGISTER POINTER.
         CP    REG,=P'16'          END OF SECOND LINE ?
         BE    AMA510              BR IF YES.
         CP    REG,=P'8'           END OF FIRST LINE ?
         BNE   AMA500              BR IF NOT.
         BAL   R9,PRINT            PRINT FIRST LINE.
         LA    R4,LINE+16          SET PRINT LINE POS FOR REGS.
         MVC   0(9,R4),=C'REGS 8-15' PRINT REGISTER HEADER.
         B     AMA500
         SPACE 1
AMA510   DS    0H
         BAL   R9,PRINT            PRINT SECOND LINE.
         BAL   R9,PRINT            PRINT SPACER.
         BR    R10                 RETURN TO CALLER.
         EJECT
***********************************************************************
*PRINTA
*
*        PRINT STORAGE AREA ROUTINE
*
*INPUT:  R8 - AREA PARAMETER LIST ADDRESS.
*        R10- RETURN ADDRESS.
*WORK REGS:    R1,R2,R4,R5,R6,R7,R8,R12.
*
PRINTA   DS    0H
         LH    R2,0(R8)            SET NUMBER OF AREAS TO TRACE.
         LA    R8,2(R8)            SKIP PAST PREFIX.
         SPACE 1
AMA600   DS    0H
         MVC   LINE+16(4),=C'AREA' FORMAT AREA NAME.
         MVC   LINE+21(10),0(R8)
         MVC   LINE+34(7),=C'ADDRESS' FORMAT AREA ADDRESS.
         UNPK  LINE+42(9),10(5,R8)
         TR    LINE+42(8),TRT1
         MVI   LINE+50,C' '
         MVC   LINE+52(11),=C'LENGTH(DEC)' FORMAT AREA LENGTH.
         LH    R12,14(R8)
         MVC   LINE+64(5),=C'INVAL'
         LTR   R12,R12
         BM    AMA610
         BZ    AMA610
         CVD   R12,D
         MVC   LINE+63(6),=X'402020202120'
         ED    LINE+63(6),D+5
         SPACE 1
AMA610   DS    0H
         BAL   R9,PRINT            PRINT AREA HEADER.
         BAL   R9,PRINT            PRINT SPACER LINE.
         LTR   R12,R12             AREA TRACE POAMABLE ?
         BNP   AMA690              BR IF NOT.
         L     R5,10(R8)           SET AREA STARTING ADDRESS.
         LA    R6,0                SET STARTING OFFSET.
         SPACE 1
AMA620   DS    0H
         LA    R4,LINE+2           FORMAT AREA OFFSET.
         ST    R6,D
         UNPK  0(5,R4),D+2(3)
         TR    0(4,R4),TRT1
         MVI   4(R4),C' '
         LA    R6,32(R6)           BUMP OFFSET.
         LA    R7,8                PRINT 8 WORDS PER LINE.
         MVI   84(R4),C'*'         FORMAT LITERAL BOUNDS.
         MVI   117(R4),C'*'
         LA    R1,LINE+87
         LA    R4,7(R4)            BUMP PRINT POSITION.
         SPACE 1
AMA630   DS    0H
         MVC   0(4,R1),0(R5)       FORMAT LITERAL INTERPRETATION.
         TR    0(4,R1),TRT
         UNPK  0(9,R4),0(5,R5)     FORMAT STORAGE 4 BYTES AT A TIME.
         TR    0(8,R4),TRT1
         MVI   8(R4),C' '
         S     R12,=F'4'           DECREMENT BYTE COUNT.
         BNP   AMA680              BR TO PRINT LAST LINE.
         LA    R1,4(R1)
         LA    R4,9(R4)            ONE SPACE BETWEEN WORDS.
         C     R7,=F'5'            EXCEPT AT QUAD WORDS.
         BNE   AMA640
         LA    R4,3(R4)
         SPACE 1
AMA640   DS    0H
         LA    R5,4(R5)            BUMP STORAGE ADDRESS.
         BCT   R7,AMA630           FORMAT ANOTHER WORD.
         BAL   R9,PRINT            PRINT 32 BYTES.
         B     AMA620
         SPACE 1
AMA680   DS    0H
         BZ    AMA685              BR IF EXACT WORD BOUNDARY.
         LPR   R6,R12              GET EXCESS BYTES PROCESSED.
         SLL   R6,1                GET DOUBLE FOR HEX.
         BCTR  R6,0                SET LENGTH FOR EX.
         A     R12,=F'4'           GET RID OF EXCESS BYTES.
         SLL   R12,1               GET HEX OFFSET.
         LA    R4,0(R12,R4)        GET EXCESS HEX ADDRESS.
         EX    R6,MVC1             CLEAR EXCESS HEX.
         SRL   R6,1                SET LENGTH FOR LITERAL CLEAR.
         SRL   R12,1               GET LITERAL OFFSET.
         LA    R4,0(R12,R1)        GET EXCESS LITERAL ADDRESS.
         EX    R6,MVC1             CLEAR EXCESS LITERAL.
         SPACE 1
AMA685   DS    0H
         BAL   R9,PRINT            PRINT LAST LINE.
         BAL   R9,PRINT            PRINT A SPACER LINE.
         BAL   R9,PRINT
         SPACE 1
AMA690   DS    0H
         LA    R8,16(R8)           POINT TO NEXT AREA ENTRY.
         BCT   R2,AMA600           PRINT NEXT AREA.
         BR    R10                 RETURN TO CALLER.
         EJECT
*        AMATRACE DATA AREA
         SPACE 1
MVC      MVC   LINE(0),0(R1)       MOVE USER MESSAGE TO PRINT LINE.
MVC1     MVC   0(0,R4),=CL6' '     CLEAR EXCESS BYTES.
LEVEL    DC    AL1(1)              CURRENT TRACE LEVEL.
D        DS    D                   SCRATCH AREA.
SA       DS    18F                 PGM SAVE AREA.
REGAREA  DS    16F                 REGISTERS AT ENTRY TO TRACE.
REG      DC    PL2'0'              REGISTER COUNTER.
         SPACE 1
VBRECORD DC    H'129'              BLOCK DESCRIPTOR WORD.
         DC    H'0'                SYSTEM RESERVED.
RDW      DC    H'125'              RECORD DESCRIPTOR WORD.
         DC    H'0'                SYSTEM RESERVED.
LINEM1   DC    CL121' '            PRINT LINE BUFFER.
LINE     EQU   LINEM1+1            LINE START ADDRESS.
         SPACE 1
TRACEOUT DCB   DDNAME=TRACEOUT,DSORG=PS,MACRF=(W),RECFM=VBA,           X
               LRECL=125,BLKSIZE=882
TRT      DS    0D
         DC    64X'4B'
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F'
         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F'
         DC    X'4B4B4B4B4B4B4B4B4B4B7A7B7C7D7E7F'
         DC    64X'4B'
         DC    X'4BC1C2C3C4C5C6C7C8C94B4B4B4B4B4B'
         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B'
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B'
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'
TRT1     EQU   *-240
         DC    C'0123456789ABCDEF'
         LTORG
         END   AMATRACE            END OF TRACE MODULE.
