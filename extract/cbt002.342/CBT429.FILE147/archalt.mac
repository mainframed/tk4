ALT      TITLE 'ARCHIVER --- ALTER SUBROUTINE'
*---------------------------------------------------------------------*
*---     THIS SUBROUTINE IS CALLED BY THE ALTER FUNCTION AND THE   ---*
*---     DELETE FUNCTION.  ITS PURPOSE IS TO MAKE A SPECIFIC KEY   ---*
*---     CHANGE FOR ALL THE RECORDS OF A SPECIFIED ITEM.  THE      ---*
*---     PARAMETER LIST CONSISTS OF THE OLD QUALIFIER DATA AND     ---*
*---     THE NEW QUALIFIER DATA, FROM ITEM NAME THROUGH VERSION    ---*
*---     NUMBER. EACH RECORD OF THE OLD-QUALIFIER ITEM IS READ,    ---*
*---     THE KEY VALUES ARE REPLACED AND THE NEW-QUALIFIED RECORD  ---*
*---     IS WRITTEN.  NO CHECKS ARE MADE TO ASSESS THE VALIDITY    ---*
*---     OF ANY QUALIFIER DATA, SINCE THE CALLER SHOULD BE MAKING  ---*
*---     THESE DETERMINATIONS, BASED ON THE FUNCTION.              ---*
*---                                                               ---*
*---     PLEASE NOTE: RPL2 AND RPL3 ARE USED AND REPOSITIONED      ---*
*---     WITHOUT ANY ATTEMPT TO SAVE A PREVIOUS POSITIONING        ---*
*---     VALUE.  ALSO, VS1BUF3 IS USED FREELY.  THE ASSUMPTION IS  ---*
*---     THAT THE CALLER HAS OPENED THE APPROPRIATE VSAM CLUSTER   ---*
*---     AND MADE ALLOWANCES FOR THIS.                             ---*
*---------------------------------------------------------------------*
ARCHALT  CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME SPECIAL EQUATES, FOR ME
@RPL2    EQU   R3                  SOME SPECIAL EQUATES, FOR ME
@RPL3    EQU   R4                  SOME SPECIAL EQUATES, FOR ME
@BUF3    EQU   R7
         COPY #ARCBITS
         USING ARCHALT,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             COPY ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHALT,R11         DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             COPY NEW SAVE AREA POINTER
         L     R14,4(,R13)         RECOPY BACK POINTER
         L     R14,12(,R14)        RECOPY ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         LM    R8,R9,0(R1)         LOAD THE QUALIFIER POINTERS
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE PROCESSING. THE BASIC PROCESS IS   ---*
*---           THIS:                                               ---*
*---                                                               ---*
*---     1. USING THE CONTROL INFORMATION WE WERE GIVEN, LOCATE    ---*
*---        THE HEADER RECORD FOR THE ITEM. WE'LL USE THE VS1BUF3  ---*
*---        AREA FOR HEADER/KEY CONSTRUCTION.                      ---*
*---                                                               ---*
*---     2. UPDATE THE KEY AND OUTPUT THE 'NEW' HEADER RECORD. IF  ---*
*---        IT'S A DUPLICATE, SET A '4' RETURN CODE AND RETURN TO  ---*
*---        THE CALLER, SINCE WE CANNOT CONTINUE.                  ---*
*---                                                               ---*
*---     3. LOOP THROUGH THE MEMBER, READING THE RECORDS AND       ---*
*---        COPYING THEM WITH THE UPDATED KEY. WE DO NOT UPDATE    ---*
*---        ANY SEQUENCE NUMBERS, SINCE THIS IS ITEM-DEPENDANT.    ---*
*---------------------------------------------------------------------*
         L     @RPL2,RPL2          LOAD THE SPECIAL
         L     @RPL3,RPL3            REGISTERS
         L     @BUF3,VS1BUF3
         USING REC,@BUF3           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF3),0(@BUF3) START AT THE BEGINNING !!
         MVC   RECN(44),0(R8)      MOVE IN THE OLD QUALIFIER
         MVI   RECTT,#RTHDR        START WITH HEADER RECORDS
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF3),                                            X
               AREA=(@BUF3),                                           X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL2)         GET TO IT
         GET   RPL=(@RPL2)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   ALT5                NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ALT5                NOPE; ALL DONE ---
         CLC   RECN(44),0(R8)      IS THIS THE HEADER WE WANT ??
         BNE   ALT5                NOPE ---
         SHOWCB RPL=(@RPL2),                                           X
               FIELDS=RECLEN,                                          X
               AREA=(S,VS1LEN3),                                       X
               LENGTH=4,                                               X
               MF=(G,GENWK)        FETCH THE RECORD LENGTH
         MVC   RECN(44),0(R9)      BUILD THE NEW KEY
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(DIR,NUP,MVE),                                    X
               AREA=(@BUF3),                                           X
               RECLEN=(*,VS1LEN3),                                     X
               MF=(G,GENWK)
         PUT   RPL=(@RPL3)         OUTPUT THE RECORD, MAYBE
         LTR   R15,R15             PUT OK ??
         BZ    ALT1                YES ---
         B     ALT6                CAN'T DO IT ---
ALT1     DS    0H
         XC    0(RECKLEN,@BUF3),0(@BUF3) START AT THE BEGINNING !!
         MVC   RECN(44),0(R8)      COPY THAT OLD KEY
         MVI   RECTT,#RTNOTE       RESET TO NOTE TYPE
         POINT RPL=(@RPL2)         GET TO IT
ALT2     DS    0H
         GET   RPL=(@RPL2)         GO READ A MEMBER NOTE RECORD
         LTR   R15,R15             DID IT COMPLETE OK ??
         BNZ   ALT3                NOPE; ASSUME WE'RE DONE WITH NOTES
         SHOWCB RPL=(@RPL2),                                           X
               FIELDS=RECLEN,                                          X
               AREA=(S,VS1LEN3),                                       X
               LENGTH=4,                                               X
               MF=(G,GENWK)        FETCH THE RECORD LENGTH
         CLI   RECTT,#RTNOTE       DATA RECORD ??
         BNE   ALT3
         CLC   RECN(44),0(R8)      STILL IN THE RIGHT ITEM ??
         BNE   ALT3                NOPE; GO DO THE DATA RECORDS
         MODCB RPL=(@RPL3),RECLEN=(*,VS1LEN3),MF=(G,GENWK)
         MVC   RECN(44),0(R9)      BUILD NEW KEY
         PUT   RPL=(@RPL3)         OUTPUT THE NEW RECORD
         LTR   R15,R15             WRITE OK ??
         BZ    ALT2                YES; CONTINUE
         ABEND 100,DUMP            AND DIE HORRIBLY
ALT3     DS    0H
         XC    0(RECKLEN,@BUF3),0(@BUF3) START AT THE BEGINNING !!
         MVC   RECN(44),0(R8)      COPY THAT OLD KEY
         MVI   RECTT,#RTDATA       RESET TO DATA TYPE
         POINT RPL=(@RPL2)         GET TO IT
ALT4     DS    0H
         GET   RPL=(@RPL2)         GO READ A MEMBER DATA RECORD
         LTR   R15,R15             DID IT COMPLETE OK ??
         BNZ   ALT5                NOPE; ASSUME WE'RE DONE WITH DATA
         SHOWCB RPL=(@RPL2),                                           X
               FIELDS=RECLEN,                                          X
               AREA=(S,VS1LEN3),                                       X
               LENGTH=4,                                               X
               MF=(G,GENWK)        FETCH THE RECORD LENGTH
         CLI   RECTT,#RTDATA       DATA RECORD ??
         BNE   ALT5
         CLC   RECN(44),0(R8)      STILL IN THE RIGHT ITEM ??
         BNE   ALT5                NOPE; GO DO THE DATA RECORDS
         MVC   RECN(44),0(R9)      BUILD NEW KEY
         MODCB RPL=(@RPL3),RECLEN=(*,VS1LEN3),MF=(G,GENWK)
         PUT   RPL=(@RPL3)         AND WRITE IT
         LTR   R15,R15             WRITE OK ??
         BZ    ALT4                YES ---
         ABEND 101,DUMP            AND DIE HORRIBLY
         SPACE 3
ALT5     DS    0H
         MODCB RPL=(@RPL2),AREA=(*,VS1BUF2),MF=(G,GENWK),              X
               ARG=(*,VS1BUF2)
         L     R13,4(,R13)         COPY BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
ALT6     DS    0H
         MODCB RPL=(@RPL2),AREA=(*,VS1BUF2),MF=(G,GENWK),              X
               ARG=(*,VS1BUF2)
         L     R13,4(,R13)         COPY BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,4               RC = 4
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
