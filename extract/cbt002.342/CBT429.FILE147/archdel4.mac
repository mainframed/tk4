DEL4     TITLE 'ARCHIVER --- DELETE FUNCTION'
*---------------------------------------------------------------------*
*---    THIS SUBROUTINE OF ARCHDELE DELETES ALL NOTE DATA FROM     ---*
*---    THE SELECTED ITEM(S).  IT'S A FAIRLY SIMPLE ROUTINE AND    ---*
*---    CAN BE UNDERSTOOD FROM THE IMBEDDED COMMENTS IN THE CODE.  ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDEL4 CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY #ARCBITS
         USING ARCHDEL4,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             DEL4 ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDEL4,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             DEL4 NEW SAVE AREA POINTER
         L     R14,4(,R13)         RESTORE BACK POINTER
         L     R14,12(,R14)        RESTORE ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         XC    FCOUNT,FCOUNT       CLEAR FUNCTION RECORD COUNT
         XC    MCNT,MCNT           AND MEMBER COUNT
         XC    ACNT,ACNT           AND ALIAS COUNT
         MVC   VS1MODE,=CL8'OUTPUT' SET THE I/O MODE
         LA    R1,VSAM1DD          LOAD THE PARM POINTER
         LA    R0,0                AND THE 'OPEN' FLAG
         CALL  ARCHVSOP            CALL THE 'OPEN' FUNCTION
         LTR   R15,R15             OPEN OK ??
         BNZ   ENDITALL            NOPE; CAN'T WORK
         L     @RPL1,RPL1
         L     @RPL2,RPL2
         L     @RPL3,RPL3
         L     @BUF1,VS1BUF1
         L     @BUF2,VS1BUF2
         L     @BUF3,VS1BUF3
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ACB=(*,ACB1),                                           X
               ARG=(@BUF1),                                            X
               AREA=(@BUF1),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         MODCB RPL=(@RPL2),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               ACB=(*,ACB1),                                           X
               ARG=(@BUF2),                                            X
               AREA=(@BUF2),                                           X
               AREALEN=(*,VS1LIM),                                     X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE JOB. THESE ARE THE BASIC STEPS     ---*
*---     INVOLVED.  DETAILS TO FOLLOW.                             ---*
*---                                                               ---*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD THAT IS     ---*
*---        NOT AN ALIAS RECORD.                                   ---*
*---                                                               ---*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---                                                               ---*
*---     3. USING RPL2/BUF2, LOCATE AND ERASE ANY NOTE RECORDS     ---*
*---        THAT MATCH IN NAME, GROUP, SUBGROUP, TYPE AND VERSION  ---*
*---        NUMBER.                                                ---*
*---                                                               ---*
*---     4. RETURN TO STEP1 AND CONTINUE                           ---*
*---------------------------------------------------------------------*
MEMBERS  DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        SET TO HEADER TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),                                            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
*---------------------------------------------------------------------*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD.            ---*
*---------------------------------------------------------------------*
NEXTHDR  DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,NEXTHDR SKIP ALIAS RECORDS ---
*---------------------------------------------------------------------*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---------------------------------------------------------------------*
         LA    R1,RECN             POINT TO THE HEADER
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            GO CHECK: DO WE PROCESS THIS ITEM ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   NEXTHDR             NOPE ---
*---------------------------------------------------------------------*
*---     3. USING RPL2/BUF2, LOCATE AND DELETE ANY NOTE RECORDS    ---*
*---        OF A MATCHING KEY.                                     ---*
*---------------------------------------------------------------------*
         XC    0(49,@BUF2),0(@BUF2) CLEAR THE KEY AREA
         MVC   0(45,@BUF2),0(@BUF1) COPY THAT KEY ---
         MVI   0(@BUF2),#RTNOTE    SET FOR NOTE DATA
         POINT RPL=(@RPL2)
DELA     DS    0H
         GET   RPL=(@RPL2)         READ ANOTHER HEADER
         CLI   0(@BUF2),#RTNOTE       NOTE RECORD ??
         BNE   NODEL               NOPE; ALL DONE
         CLC   1(44,@BUF2),1(@BUF1) FOR THIS ITEM ??
         BNE   NODEL               NOPE; ALL DONE
         ERASE RPL=(@RPL2)         ERASE THE RECORD
         L     R15,ACNT            LOAD TOTAL VALUE
         LA    R15,1(,R15)         INCREMENT
         ST    R15,ACNT            SAVE UPDATED VALUE
         B     DELA                AND LOOP, SEARCHINGLY
NODEL    DS    0H
         ENDREQ RPL=(@RPL2)
         MVC   0(49,@BUF2),0(@BUF1) COPY THE KEY AGAIN
         POINT RPL=(@RPL2)
         GET   RPL=(@RPL2)         READ THE HEADER AGAIN
         XC    RSRNOT#-REC(4,@BUF2),RSRNOT#-REC(@BUF2)
         PUT   RPL=(@RPL2)         SHOW NO NOTE DATA
         #FORMAT RECTT,,DELNOTE
         #PUT  LINE                OUTPUT THE 'NOTE DATA DELETED' MSG
         L     R15,MCNT            LOAD TOTAL VALUE
         LA    R15,1(,R15)         INCREMENT
         ST    R15,MCNT            SAVE UPDATED VALUE
         B     NEXTHDR             AND LOOP FOR ANOTHER HEADER
ENDITALL DS    0H
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,MCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
         L     R0,ACNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,ACMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END2     DS    0H
         CLC   ACB1,=F'0'          WAS ACB EVER OPENED ??
         BE    NOACB               NOPE ---
         LA    R1,VSAM1DD          POINT TO THE DDNAME
         LA    R0,4                SET 'CLOSE' REQUEST
         CALL  ARCHVSOP            CALL THE VSAM 'CLOSE' ROUTINE
NOACB    DS    0H
         XC    CHAIN,CHAIN         CLEAR THE CHAIN POINTER
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
DELNOTE  DC    AL1(DELMSGE-DELMSG)
DELMSG   DC    C' NOTEDATA DELETED.'
DELMSGE  EQU   *
MCMSG    DC    CL133' '
         ORG   MCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ITEMS(S) PROCESSED.'
         ORG
ACMSG    DC    CL133' '
         ORG   ACMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' NOTE DATA RECORDS ERASED.'
         ORG
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
