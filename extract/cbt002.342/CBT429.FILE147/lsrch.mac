         MACRO
&LABEL   LSRCH &LINK,                                                  X
               &KEY,                                                   X
               &ST=NORD,                                               X
               &RAL=RAL,                                               X
               &RAN=RAN,                                               X
               &$LINK=0,                                               X
               &$KEY=4,                                                X
               &CIR=NO
.*********************************************************************.
.*                                                                   *.
.*--> MACRO: LSRCH     LINKED LIST SEARCH MACRO...........           *.
.*     SEARCHES A LINKED LIST FOR A NODE HAVING A GIVEN KEY,RETURNS  *.
.*  ADDRESS OF IT IF PRESENT, OR ADDRESS OF LINK WHICH WOULD CHANGE  *.
.*  IF NODE WERE INSERTED. SETS CONDITION CODE = 0 IF NODE EXISTS    *.
.*                                                                   *.
.*  &LINK     GIVES THE ADDRESS OF A LINK FIELD (OR LIST HEAD WHICH  *.
.*     ADDRESSES THE LIST OR PART OF LIST TO BE SEARCHED). CAN BE AN *.
.*     RX ADDRESS FOR THE LINK, A REGISTER NAME IN PARENS WHICH      *.
.*     ALREADY CONTAINS THE ADDRESS OF THE LINK. IF OMITTED, IT      *.
.*     ASSUMES THAT THE REGISTER SPECIFIED BY &RAN ALREADY HAS THE   *.
.*     ADDRESS IN IT.                                                *.
.*  &KEY     SPECIFIES THAT A NODE HAVING THE GIVEN KEY IS TO BE     *.
.*     SEARCHED FOR IN THE LIST, STARTING AT THE NODE POINTED TO BY  *.
.*     THE WORD AT LOCATION GIVEN BY ADDR IN &LINK. CAN BE SPECIFIED *.
.*     BY ANY ARGUMENT LEGAL AS THE FIRST OPERAND OF A CLC           *.
.*     INSTRUCTION SO CAN BE A LITERAL, A COMPLETE D(L,B) OPERAND    *.
.*     OR A SYMBOLIC EXPRESSION (EITHER HAVING THE CORRECT LENGTH    *.
.*     ATTRIBUTE FOR IMPLIED LENGTH, OR HAVING IT SPECIFIED)         *.
.*  &ST=    GIVES THE TYPE OF SEARCH TO BE USED: MAY BE:             *.
.*     =NORD    (NO ORDER)- THE LIST IS UNORDERED,AND IT SHOULD      *.
.*     BE SEARCHED UNTIL THE GIVEN KEY IS FOUND.                     *.
.*     =ASC    (ASCENDING ORDER)--THE LIST IF ORDERED BY LOGICAL     *.
.*     ASCENDING ORDER BY KEY FIELD.  THE LIST SHOULD BE SEARCHED    *.
.*     ONLY TO THE POSITION AT WHICH THE REQUIRED NODE SHOULD BE.    *.
.*     =DES    (DESCENDING ORDER)- SAME AS ASC, EXCEPT THE NODES     *.
.*     ARE IN DESCENDING ORDER BY KEY.                               *.
.*  &RAL=    NAME OF A REGISTER WHICH WILL BE USED TO CONTAIN THE    *.
.*     ADDRESS OF THE LINK FIELD WHICH POINTS TO THE CURRENT NODE. ON*.
.*     THE COMPLETION OF THE MACRO CODE, WILL POINT TO THE LINK FIELD*.
.*     WHICH POINTS TO THE REQUIRED NODE, OR TO THE LINK FIELD TO BE *.
.*     CHANGED TO INSERT A NODE IN THE PROPER SEQUENCE.              *.
.*  &RAN=    NAME OF A REGISTER WHICH WILL POINT TO THE NODE IF      *.
.*     IT IS IN THE LIST. IF A NODE WITH REQUIRED KEY IS NOT IN THE  *.
.*     LIST, IT IS SET TO THE VALUE OF THE LINK FIELD WHICH SHOULD   *.
.*     BE CHANGED IF THE NEW NODE IS INSERTED (WILL =0 IF A NORD     *.
.*     SEARCH IS DONE AND IT IS NOT PRESENT, OR IF THE NEW NODE      *.
.*     WOULD BE ADDED TO THE END OF AN ASC OR DES TYPE LIST).        *.
.*     ***NOTE*** REGISTERS &RAL AND &RAN ARE DEFINATELY CHANGED.    *.
.*  &$KEY=     GIVES THE DISPLACEMENT OF THE KEY FROM THE            *.
.*             BEGINING OF THE NODE.                                 *.
.*  &$LINK=    GIVES THE DISPLACEMENT OF THE LINK FIELD FROM         *.
.*             THE BEGINING OF THE NODE.                             *.
.*  &CIR=      YES IF THE LIST IS CIRCULARLY LINKED,                 *.
.*             NO IF IT IS NOT.                                      *.
.*                                                                   *.
.*  THE CONDITION CODE IS SET BY THIS MACRO AS FOLLOWS:              *.
.*  CC=0    NODE EXISTS IN THE LIST WITH GIVEN &KEY. &RAN HAS        *.
.*     ADDRESS OF THIS NODE, &RAL HAS ADDRESS OF THE LINK FIELD      *.
.*     IN THE PRECEDING NODE (WHICH HAS VALUE IN &RAL).              *.
.*  CC= ANYTHING ELSE.    THE NODE WITH GIVEN KEY WAS NOT FOUND.     *.
.*     &RAL HAS ADDRESS OF NODE TO BE CHANGED FOR INSERTION.         *.
.*     &RAN HAS VALUE OF LINK FIELD POINTED TO BY &RAL.              *.
.*  MODIFIES ONLY REGISTERS &RAL AND &RAN.                           *.
.*                                                                   *.
.*********************************************************************.
         AIF   ('&CIR' EQ 'NO').CONT
         B     LL&SYSNDX.C+4       BRANCH AROUND FULLWORD
LL&SYSNDX.C DS   F                 PLACE TO SAVE FIRST LINK FIELD
.CONT    ANOP
&LABEL   DS    0H
         AIF   (K'&LINK EQ 0).SKIP
         AIF   ('&LINK'(1,1) NE '(').BUMP
         LR    &RAN,&LINK(1)
         AGO   .SKIP
.BUMP    LA    &RAN,&LINK
.SKIP    ANOP
         AIF   ('&CIR' EQ 'NO').CONTA
         ST    &RAN,LL&SYSNDX.C    SAVE FIRST LINK FIELD
.CONTA   ANOP
LL&SYSNDX.A LR &RAL,&RAN           SAVE CURRENT LINK FIELD IN &RAL
         L     &RAN,&$LINK.(,&RAN) LOAD CONTENTS OF LINK FIELD IN &RAN
         AIF   ('&CIR' EQ 'NO').CONTB
         C     &RAN,LL&SYSNDX.C    CHECK FOR CIR. LINKED LIST.
         BNE   *+10
         AGO  .CONTC
.CONTB   LTR   &RAN,&RAN           CHECK IF NODES ARE DEPLETED.
         BNZ   *+10                IF NOT BRANCH TO CLC.
.CONTC   LTR   &RAL,&RAL           SETS CC NOT= 0.
         B     LL&SYSNDX.B         BRANCH TO END OF MACRO CODE.
         CLC   &KEY,&$KEY.(&RAN)   COMPARE GIVEN KEY WITH NODE.
         AIF   ('&ST' EQ 'ASC').HIGH
         AIF   ('&ST' EQ 'DES').LOW
         BNE   LL&SYSNDX.A         IF NOT = CHECK NXT NODE OF LIST.
LL&SYSNDX.B EQU *                  IF =,CC=0 AND CONTINUE.
         MEXIT
.HIGH    BH    LL&SYSNDX.A         IF HI CHECK NXT NODE OF ASC LIST.
LL&SYSNDX.B EQU *                  IF =,CC=0 AND CONTINUE.
         MEXIT
.LOW     BL    LL&SYSNDX.A         IF LOW CHECH NXT NODE IN DES LIST.
LL&SYSNDX.B EQU *                  IF =,CC=0 AND CONTINUE.
         MEND
