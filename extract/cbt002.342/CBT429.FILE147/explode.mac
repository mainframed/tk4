EXPL     TITLE 'EXPLODE --- ARCHIVER FUNCTION SUPPORT SUBROUTINE'
*---------------------------------------------------------------------*
*---     THIS IS THE 'EXPLODE' ROUTINE, TO RE-EXPAND THE DATA      ---*
*---     COMPRESSED BY THE COMPRESS ROUTINE IN VERSION 3 OF THE    ---*
*---     ARCHIVER PROGRAM.  THE INPUT PARAMETER LIST IS THREE      ---*
*---     WORDS, CONTAINING THE ADDRESS AND LENGTH OF THE INPUT     ---*
*---     STRING AND THE ADDRESS OF THE OUTPUT STRING. THE FINAL    ---*
*---     LENGTH OF THE OUTPUT STRING IS RETURNED IN REGISTER 0.    ---*
*---------------------------------------------------------------------*
         SPACE 3
EXPLODE  CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         USING EXPLODE,R15         AND DEFINE THE BASE REGISTER
         LM    R2,R4,0(R1)         LOAD PARAMETER POINTERS
         LA    R5,0(R3,R2)         POINT JUST PAST INPUT STRING
         LA    R7,0                CLEAR TWO
EXP01    DS    0H
         IC    R7,0(,R2)           INSERT FIRST COUNT/FLAG BYTE
         TM    0(R2),X'80'         DUPLICATED STRING ??
         BO    EXP03               NOPE ---
         N     R7,=A(X'3F')        TRIM DOWN TO BARE COUNTER
         TM    0(R2),X'40'         DUPLICATED BLANKS ??
         BZ    EXP02               NOPE ---
         LA    R9,0                CLEAR SOURCE COUNTER
         ICM   R9,8,=C' '          INSERT A BLANK PAD
         LA    R6,0(,R4)           POINT TO OUTPUT AREA
         LA    R4,0(R7,R4)         INCREMENT THE OUTPUT CURSOR ADDRESS
         LA    R8,0                CLEAR SOURCE ADDRESS
         MVCL  R6,R8               INSERT THE BLANKS
         LA    R2,1(,R2)           AND INPUT CURSOR
         CR    R2,R5               FAR ENOUGH YET ??
         BL    EXP01               NOPE --- CONTINUE
         B     EXP04               YES; COMPUTE LENGTH AND RETURN
EXP02    DS    0H
         LA    R9,0                CLEAR SOURCE COUNTER
         ICM   R9,8,1(R2)          INSERT THE DUPL'D CHAR
         LA    R6,0(,R4)           POINT TO OUTPUT AREA
         LA    R4,0(R7,R4)         INCREMENT THE OUTPUT CURSOR ADDRESS
         LA    R8,0                CLEAR SOURCE ADDRESS
         MVCL  R6,R8               INSERT THE BLANKS
         LA    R2,2(,R2)           BUMP INPUT LENGTH
         CR    R2,R5               FAR ENOUGH YET ??
         BL    EXP01               NOPE ---
         B     EXP04               YES; COMPUTE LENGTH AND RETURN
EXP03    DS    0H
         N     R7,=A(X'7F')        TRIM NON-REPEAT FLAG BIT OFF
         LA    R6,0(,R4)           POINT TO OUTPUT AREA
         LA    R8,1(,R2)           POINT TO INPUT AREA
         LA    R2,1(R7,R2)         BUMP INPUT POINTER
         LA    R4,0(R7,R4)         AND OUTPUT POINTER
         LR    R9,R7               COPY FOR SOURCE LENGTH
         MVCL  R6,R8               COPY DATA TO OUTPUT AREA
         CR    R2,R5               FAR ENOUGH YET ??
         BL    EXP01               NOPE; CONTINUE
EXP04    DS    0H
         L     R2,8(,R1)           LOAD OUTAREA POINTER
         LA    R2,0(,R2)           CLEAR GARBAGE BITS
         LA    R0,0(,R4)           COPY END POINTER
         SR    R0,R2               COMPUTE ACTUAL STRING LENGTH
         LA    R15,0               RETURN CODE ZERO
         L     R14,12(,R13)        LOAD RETURN ADDRESS
         LM    R1,R12,24(R13)      RESTORE REGISTERS
         BR    R14                 AND RETURN TO CALLER
         LTORG
         END
