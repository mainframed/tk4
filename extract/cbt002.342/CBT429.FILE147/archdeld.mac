DELD     TITLE 'ARCHIVER --- DELETE FUNCTION'
*---------------------------------------------------------------------*
*---    THIS SUBROUTINE OF ARCHDEL WILL DELETE THE 'CURRENT'       ---*
*---    VERSION OF THE SELECTED ITEM(S), AND ALL ITS ALIASES,      ---*
*---    FROM THE ARCHIVE CLUSTER.  BY 'CURRENT' VERSION, WE        ---*
*---    MEAN THAT VERSION WITH THE HIGHEST VERSION NUMBER.         ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDELD CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
@RPL1    EQU   R2                  SOME
@RPL2    EQU   R3                    SPECIAL
@RPL3    EQU   R4                      EQUATES
@BUF1    EQU   R5                        FOR
@BUF2    EQU   R6                          VSAM
@BUF3    EQU   R7                            I/O MGMT
         COPY #ARCBITS
         USING ARCHDELD,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             DELD ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDELD,R11        DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             DELD NEW SAVE AREA POINTER
         L     R14,4(,R13)         RESTORE BACK POINTER
         L     R14,12(,R14)        RESTORE ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
         XC    FCOUNT,FCOUNT       CLEAR FUNCTION RECORD COUNT
         XC    MCNT,MCNT           AND MEMBER COUNT
         XC    ACNT,ACNT           AND ALIAS COUNT
         MVC   VS1MODE,=CL8'OUTPUT' SET THE I/O MODE
         LA    R1,VSAM1DD          LOAD THE PARM POINTER
         LA    R0,0                AND THE 'OPEN' FLAG
         CALL  ARCHVSOP            CALL THE 'OPEN' FUNCTION
         LTR   R15,R15             OPEN OK ??
         BNZ   ENDITALL            NOPE; CAN'T WORK
         L     @RPL1,RPL1
         L     @RPL2,RPL2
         L     @RPL3,RPL3
         L     @BUF1,VS1BUF1
         L     @BUF2,VS1BUF2
         L     @BUF3,VS1BUF3
         EJECT
*---------------------------------------------------------------------*
*---     HERE'S THE MEAT OF THE JOB. THESE ARE THE BASIC STEPS     ---*
*---     INVOLVED.  DETAILS TO FOLLOW.                             ---*
*---                                                               ---*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD THAT IS     ---*
*---        NOT AN ALIAS RECORD.                                   ---*
*---                                                               ---*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---                                                               ---*
*---     4. LOOK FOR AN ALIAS FOR THIS ITEM. IF FOUND, DELETE THE  ---*
*---        ALIAS AND LOOK FOR ANOTHER ALIAS.                      ---*
*---                                                               ---*
*---     5. CALL ARCHERAS TO ERASE THE ITEM WE'VE FOUND. THEN ADD  ---*
*---        A BINARY '1' TO THE LAST BYTE OF THE 'TYPE'            ---*
*---        QUALIFIER, TO POINT VSAM PAST ANY 'BACK LEVEL' COPIES  ---*
*---        OF THIS ITEM AND GO BACK TO NEXTHDR AND CONTINUE       ---*
*---------------------------------------------------------------------*
MEMBERS  DS    0H
         USING REC,@BUF1           BASE THE RECORD DSECT
         XC    0(RECKLEN,@BUF1),0(@BUF1) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        SET TO HEADER TYPE
         MODCB RPL=(@RPL1),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,NUP),                            X
               ARG=(@BUF1),AREA=(@BUF1),AREALEN=(*,VS1LIM),            X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL1)         GET TO IT
*---------------------------------------------------------------------*
*---     1. USING RPL1/VS1BUF1, LOCATE A HEADER RECORD.            ---*
*---------------------------------------------------------------------*
NEXTHDR  DS    0H
         GET   RPL=(@RPL1)         AND READ A HEADER RECORD
         LTR   R15,R15             DID WE GET A RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   ENDITALL            NOPE; ALL DONE ---
         #IF   RSRALIAS,ON,NEXTHDR SKIP ALIAS RECORDS ---
*---------------------------------------------------------------------*
*---     2. CALL ARCHKNAM TO DETERMINE WHETHER OR NOT THIS KEY     ---*
*---        FITS THE CRITERIA SPECIFIED BY THE USER.               ---*
*---------------------------------------------------------------------*
NEWHDR   DS    0H
         LA    R1,RECN             POINT TO THE HEADER
         LA    R0,0                USE DEFAULT QUALIFIER DATA
         CALL  ARCHKNAM            GO CHECK: DO WE PROCESS THIS ITEM ??
         LTR   R15,R15             PASS THE CHECK ??
         BNZ   NEXTHDR             NOPE ---
*---------------------------------------------------------------------*
*---     ITEM TO BE DELETED HAS BEEN FOUND. START BY CHECKING FOR  ---*
*---     AN ALIAS TO 'ALTER' IT TO.  ALSO SAVE ITS KEY IN BUF3.    ---*
*---------------------------------------------------------------------*
         #IF   RSRHALS,OFF,NOALIAS    NO ALIASES FOR THIS ITEM
         SPACE 3
*---------------------------------------------------------------------*
*---     DELETE ALL THE ALIASES FOR THIS ITEM                      ---*
*---------------------------------------------------------------------*
         SPACE 3
DELA     DS    0H
         DROP  @BUF1
         USING REC,@BUF3
         XC    0(RECKLEN,@BUF3),0(@BUF3) START AT THE BEGINNING !!
         MVI   RECTT,#RTHDR        INITIAL RECORD TYPE
         MODCB RPL=(@RPL3),                                            X
               OPTCD=(SEQ,FKS,KGE,SYN,UPD),                            X
               AREA=(@BUF3),ARG=(@BUF3),                               X
               MF=(G,GENWK)        POSITION TO CLUSTER START
         POINT RPL=(@RPL3)         GET TO IT
DELB     DS    0H
         GET   RPL=(@RPL3)         AND READ A HEADER RECORD
         LTR   R15,R15             ANYTHING LEFT ??
         BNZ   DELC                NOPE; ALL DONE
         CLI   RECTT,#RTHDR        HEADER RECORD ??
         BNE   DELC                NOPE; ALL DONE ---
         #IF   RSRALIAS,OFF,DELB   NOT AN ALIAS RECORD
         CLC   RECAN(44),1(@BUF1)  DELETE IT ??
         BNE   DELB                NOPE ---
         ERASE RPL=(@RPL3)         ERASE THE RECORD
         LTR   R15,R15             ERASE OK ??
         BNZ   1(,R15)             NOPE; DIE HORRIBLY
         #FORMAT RECTT,,DELALIAS
         #PUT  LINE
         L     R15,ACNT            LOAD THE ALIAS COUNT
         LA    R15,1(,R15)         INCREMENT BY ONE
         ST    R15,ACNT            STORE UPDATED COUNT
         B     DELB                AND CONTINUE
DELALIAS DC    AL1(DELASGE-DELASG)
DELASG   DC    C' ALIAS IS DELETED.'
DELASGE  EQU   *
DELC     DS    0H
         ENDREQ RPL=(@RPL3)
NOALIAS  DS    0H
*---------------------------------------------------------------------*
*---     NOW WE'RE READY TO DELETE THE ITEM'S ORIGINAL RECORDS.    ---*
*---------------------------------------------------------------------*
         DROP  @BUF3
         USING REC,@BUF1
         LA    R1,0(,@BUF1)        POINT TO THE DELETABLE ITEM'S KEY
         CALL  ARCHERAS            GO ERASE THE ITEM
         #FORMAT RECTT,,DELMBR
         #PUT  LINE                AND OUTPUT THE MESSAGE
         L     R15,MCNT            LOAD THE MEMBER COUNT
         LA    R15,1(,R15)
         ST    R15,MCNT            SAVE UPDATED COUNT
         LA    R1,0                CLEAR A WORK REGISTER
         IC    R1,RECT+9           INSERT LAST BYTE OF TYPE
         LA    R1,1(,R1)           ADD ONE
         STC   R1,RECT+9           SAVE UPDATED VALUE
         POINT RPL=(@RPL1)         POINT TO IT
         DROP  @BUF1
         B     NEXTHDR             AND CONTINUE ---
ENDITALL DS    0H
         L     R0,MCNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,MCMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
         L     R0,ACNT             LOAD MEMBER COUNT
         LTR   R0,R0               ZERO COUNT ??
         BZ    END2                YES ---
         CVD   R0,DWORK            DECIMALIZE IT
         MVC   LINE,ACMSG          COPY IN THE MESSAGE SKELETON
         ED    LINE+2(20),DWORK    ADD IN THE ACTUALS
         #PUT  LINE                AND OUTPUT THE RESULTS
END2     DS    0H
         CLC   ACB1,=F'0'          WAS ACB EVER OPENED ??
         BE    NOACB               NOPE ---
         LA    R1,VSAM1DD          POINT TO THE DDNAME
         LA    R0,4                SET 'CLOSE' REQUEST
         CALL  ARCHVSOP            CALL THE VSAM 'CLOSE' ROUTINE
NOACB    DS    0H
         XC    CHAIN,CHAIN         CLEAR THE CHAIN POINTER
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               ALWAYS RC = 0
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
DELMBR   DC    AL1(DELMSGE-DELMSG)
DELMSG   DC    C' DELETE REQUEST COMPLETE.'
DELMSGE  EQU   *
MCMSG    DC    CL133' '
         ORG   MCMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ITEMS(S) PROCESSED.'
         ORG
ACMSG    DC    CL133' '
         ORG   ACMSG+2
         DC    X'40202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    X'6B202020'
         DC    C' TOTAL ALIAS(ES) PROCESSED.'
         ORG
         LTORG
         COPY  #RECS
         COPY  ##ARCHWK
         END
