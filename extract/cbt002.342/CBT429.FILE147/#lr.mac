         MACRO
&L       #LR   &A,&B
.*********************************************************************
.*       #LR
.*
.*       A   --DESTINATION REGISTER.
.*       B   --INPUT VALUE.
.*
.*             THE INPUT VALUE MAY HAVE TWO FORMATS:
.*
.*       1)    IT CAN BE SPECIFIED AS A SIGNED NUMBER, CHARACTERS
.*             ENCLOSED IN QUOTES, A SYMBOL, OR AN EXPRESSION.
.*
.*       2)    THE 2ND FORMATS ASSUMES THE USER IS LOADING SOMETHING
.*             INTO A REGISTER.  THE SUPPORTED OPERATIONS ARE:
.*             IC, ICM, L, LH, LA, LR.  THEY ARE CODED AS THE DESIRED
.*             CODE FOLLOWED BY A SEMI-COLON(:) AND THEN THE VALUE.
.*             IN THE CASE OF THE ICM, THE 2ND FIELD IS THE MASK;
.*             FOLLOWED BY A SEMI-COLON AND THE VALUE EXPRESSION.
.*             EG.  LA:3    IC:JUNK(1)     ICM:B'0101':FIELD     LR:8
.*
.*********************************************************************
         LCLA  &I                  INDEX PTR.
         LCLA  &K                  COUNT 1.
         LCLA  &K2                 COUNT 2.
         LCLA  &K3                 COUNT 3.
         LCLA  &K4                 COUNTER 4.
         LCLA  &N                  STRING COUNT.
         LCLB  &ADDR               ADDRESS VALUE FLAG.
         LCLB  &EXPR               EXPRESSION INDICATOR.
         LCLB  &QUIT               SCANNING SWITCH.
         LCLB  &SIGN               NUMERIC SIGN FLAG.
         LCLC  &D1,&D2             LITERAL DELIMETERS.
         LCLC  &M(8)               MASK/INDEX STRING.
         LCLC  &OP                 OPERATION CODE.
         LCLC  &S(8)               SOURCE OPERAND.
         LCLC  &R                  REGISTER SYMBOL.
         LCLC  &TYPE               FULLWORD LITERAL TYPE(A OR F).
&D1      SETC  ''''                DEFAULT DELIMETERS ARE QUOTES(').
&D2      SETC  ''''                +
&OP      SETC  'LA'                DEFAULT OPERATION CODE.
&TYPE    SETC  'F'                 SET DEFAULT LITERAL TYPE.
         AIF   (T'&A NE 'O').OKA
         MNOTE 8,'LRM100E DESTINATION REGISTER NOT SPECIFIED'
         MEXIT
.OKA     ANOP
         AIF   (T'&B NE 'O').OKB
         MNOTE 8,'LRM110E VALUE/STRING/REGISTER NOT SPECIFIED'
         MEXIT
.OKB     ANOP
&N       SETA  K'&B                GET NO. OF CHARS. IN STRING.
         AIF   ('&B'(1,1) EQ '''').STR
         AIF   ('&B'(1,1) EQ '(').REG
&I       SETA  1                   INITIALIZE INDEX.
         AIF   ('&B'(1,1) EQ '+').PSGN
         AIF   ('&B'(1,1) EQ '-').MSGN
.CKLP    ANOP
         AIF   (&I GT &N).ENDSCN
         AIF   ('&B'(&I,1) EQ ':').CODE
         AIF   ('&B'(&I,1) GE '0').NXT
         AIF   ('&B'(&I,1) EQ ',' OR '&B'(&I,1) EQ '''').ADR
         AIF   ('&B'(&I,1) EQ '=').CKEQ
         AIF   ('&B'(&I,1) EQ '+' OR '&B'(&I,1) EQ '-' OR              X
               '&B'(&I,1) EQ '*' OR '&B'(&I,1) EQ '/' OR               X
               '&B'(&I,1) EQ '(' OR '&B'(&I,1) EQ ')').EXPR
         AIF   ('&B'(&I,1) GE 'A').ADR
         MNOTE 8,'LRM120E INVALID CHARACTER IN EXPRESSION'
         MEXIT
.NXT     ANOP
&I       SETA  &I+1                INCREMENT TO NEXT CHARACTER.
         AGO   .CKLP
.PSGN    ANOP
&SIGN    SETB  0                   FLAG SIGN AS POSITIVE.
         AGO   .NXT
.MSGN    ANOP
&SIGN    SETB  1                   FLAG SIGN AS NEGATIVE.
         AGO   .NXT
.ADR     ANOP
&ADDR    SETB  1                   FLAG EXPRESSION AS ADDRESS EVAL.
         AGO   .NXT
.EXPR    ANOP
&EXPR    SETB  1                   FLAG AS EXPRESSION.
         AGO   .NXT
.CKEQ    ANOP
         AIF   ('&B'(&I,3) EQ '=A(').CKEQL
         AIF   ('&B'(&I,3) EQ '=F''').CKEQL
         AIF   ('&B'(&I,3) EQ '=V''').CKEQL
         AIF   ('&B'(&I,3) EQ '=H''').CKEQLH
         AIF   ('&B'(&I,3) EQ '=X''').CKEQIC
         AGO   .VALA
.CKEQL   ANOP
&OP      SETC  'L'                 USE LOAD INSTRUCTION.
         AGO   .VALA
.CKEQLH  ANOP
&OP      SETC  'LH'                USE LOAD HALF INSTRUCTION.
         AGO   .VALA
.CKEQIC  ANOP
         SLR   &A,&A               CLEAR REGISTER FOR LOAD.
&OP      SETC  'IC'                USE INSERT CHARACTER INSTR.
         AGO   .VALA
.ENDSCN  ANOP
         AIF   ( NOT (&ADDR AND &SIGN)).CKLA
         MNOTE 8,'LRM130E NEGATIVE NO. AS DISPLACEMENT'
         MEXIT
.CKLA    ANOP
         AIF   (&ADDR).VALA
         AIF   (&SIGN).CKLH
         AIF   (&EXPR).VAL
         AIF   (&B EQ 0).CLREG
         AIF   (&B GT 0 AND &B LT 4096).VALA
         AIF   (&B LT 32768).CKLH
         AGO   .VAL
.CKLH    ANOP
         AIF   (NOT &SIGN).VALH
&R       SETC  '&B'(2,&N-1)        REDUCE SIGNED NUMBER TO UNSIGNED.
         AIF   ('&R' LT '32768').VALH CK LOWER BOUND FOR HALFWORDS.
.VAL     ANOP
         AIF   (NOT &EXPR).VAL10
&TYPE    SETC  'A'                 ADDRESS LITERAL.
&D1      SETC  '('                 RESET DELIMETERS FOR A-CON.
&D2      SETC  ')'                 +
.VAL10   ANOP
&L       L     &A,=&TYPE&D1&B&D2   LOAD FULL WORD VALUE.
         MEXIT
.VALH    ANOP
&L       LH    &A,=H'&B'           LOAD HALF WORD VALUE.
         MEXIT
.VALA    ANOP
&L       &OP   &A,&B               LOAD VALUE OF EXPRESSION.
         MEXIT
.CLREG   ANOP
&L       SLR   &A,&A               VALUE = 0.
         MEXIT
.REG     ANOP
&N       SETA  K'&B-2              COMPUTE NO. OF CHARS. IN STR.
&R       SETC  '&B'(2,&N)          MOVE REGISTER SYMBOL TO VARIABLE.
         AIF   ('&R' EQ '&A').EXIT
&L       LR    &A,&R               MOVE REGISTER TO DESTINATION.
         MEXIT
.STR     ANOP
&L       LA    &A,=C&B             LOAD ADDRESS OF  LITERAL.
         MEXIT
.CODE    ANOP
&K       SETA  &I-1                COMPUTE SIZE OF CODE.
&K2      SETA  &N-&K-1             COMPUTE SIZE OF VALUE.
         AIF   (&K2 GT 0).CD10
         MNOTE 8,'LRM140E MISSING SOURCE OPERAND'
         MEXIT
.CD10    ANOP
&I       SETA  &I+1                MOVE INDEX PAST ':'
&K2      SETA  &I                  SAVE CURRENT POINTER.
.CD20    ANOP
         AIF   ('&B'(&K2,1) EQ ':').CD30
&K2      SETA  &K2+1               NEXT POSITION.
         AIF   (&K2 LE &N).CD20
&QUIT    SETB  1                   SET THE QUIT SWITCH.
.CD30    ANOP
&K4      SETA  &K2                 SAVE CURRENT POINTER.
&K2      SETA  &K2-&I              COMPUTE SIZE OF SOURCE OPERAND.
&K3      SETA  1                   INITIALIZE SOURCE OPERAND INDEX.
.CD31    AIF   (&K2 LT 8).CD32
&S(&K3)  SETC  '&B'(&I,8)          MOVE SOURCE OPERAND.
&I       SETA  &I+8                INCREMENT STRING PTR.
&K2      SETA  &K2-8               DECREMENT CHARACTER COUNT.
         AIF   (&K2 EQ 0).CD33
&K3      SETA  &K3+1               INCREMENT INDEX.
         AIF   (&K3 LE 8).CD31
         MNOTE 8,'LRM150E FIRST STRING OPERAND EXCEEDS WORK SPACE'
         MEXIT
.CD32    ANOP
&S(&K3)  SETC  '&B'(&I,&K2)        MOVE LAST SEGMENT.
.CD33    ANOP
         AIF   (&QUIT).CD40
.CD35    ANOP
&K4      SETA  &K4+1               POINT PAST 2ND COLON.
         AIF   (&K4 GT &N).CD40
&K2      SETA  &N+1-&K4            COMPUTE SIZE OF REMAINING CHARS.
&K3      SETA  1                   INITIALIZE MASK INDEX.
.CD36    ANOP
         AIF   (&K2 LT 8).CD37
&M(&K3)  SETC  '&B'(&K4,8)         MOVE MASK/INDEX TO ARRAY.
&K4      SETA  &K4+8               INCREMENT POINTER.
&K2      SETA  &K2-8               DECREMENT COUNT.
         AIF   (&K2 EQ 0).CD40
&K3      SETA  &K3+1               INCREMENT INDEX.
         AIF   (&K3 LE 8).CD36
         MNOTE 8,'LRM160E SECOND STRING OPERAND EXCEEDS WORK SPACE'
         MEXIT
.CD37    ANOP
&M(&K3)  SETC  '&B'(&K4,&K2)       MOVE LAST SEGMENT.
.CD40    ANOP
         AIF   ('&B'(1,&K) EQ 'IC').IC
         AIF   ('&B'(1,&K) EQ 'ICM').ICM
         AIF   ('&B'(1,&K) EQ 'LH').LH
         AIF   ('&B'(1,&K) EQ 'L').L
         AIF   ('&B'(1,&K) EQ 'LA').LA
         AIF   ('&B'(1,&K) EQ 'LR').LR
         MNOTE 8,'LRM170E INVALID CODE SPECIFIED'
         MEXIT
.IC      ANOP
&L       #OP    IC,&A,&S(1)&S(2)&S(3)&S(4)&S(5)&S(6)&S(7)&S(8)
         MEXIT
.ICM     ANOP
         AIF   ('&M(1)' NE '').ICM05
         MNOTE 8,'LRM180E MISSING MASK/INDEX OPERAND'
         MEXIT
.ICM05   ANOP
&L       #OP   ICM,&A,&M(1)&M(2)&M(3)&M(4)&M(5)&M(6)&M(7)&M(8),        X
               &S(1)&S(2)&S(3)&S(4)&S(5)&S(6)&S(7)&S(8)
         MEXIT
.LH      ANOP
&L       #OP    LH,&A,&S(1)&S(2)&S(3)&S(4)&S(5)&S(6)&S(7)&S(8)
         MEXIT
.L       ANOP
&L       #OP     L,&A,&S(1)&S(2)&S(3)&S(4)&S(5)&S(6)&S(7)&S(8)
         MEXIT
.LA      ANOP
&L       #OP    LA,&A,&S(1)&S(2)&S(3)&S(4)&S(5)&S(6)&S(7)&S(8)
         MEXIT
.LR      ANOP
&L       #OP    LR,&A,&S(1)&S(2)&S(3)&S(4)&S(5)&S(6)&S(7)&S(8)
.EXIT    ANOP
         MEND
