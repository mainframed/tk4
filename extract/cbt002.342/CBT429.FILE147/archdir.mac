DIR      TITLE 'ARCHDIR --- ARCHIVER FUNCTION SUPPORT ROUTINE'
*---------------------------------------------------------------------*
*---     ARCHDIR --- READ A COMPLETE PDS DIRECTORY AND BUILD A     ---*
*---           LIST OF NAMES AND ALIASES. ALSO DO ANY GENERIC      ---*
*---           NAME CHECKING DURING CHAIN CONSTRUCTION AND         ---*
*---           REMOVE THE ELEMENTS THAT DON'T FIT.                 ---*
*---                                                               ---*
*---     PARAMETERS: NONE                                          ---*
*---                                                               ---*
*---     INPUT DCB IS POINTED TO BY THE NDCBB FIELD                ---*
*---                                                               ---*
*---     RESULTING CHAIN IS POINTED TO BY THE FULLWORD ADDRESS     ---*
*---              'CHAIN'                                          ---*
*---                                                               ---*
*---     CHAIN FORMAT:                                             ---*
*---           DS  A  ADDRESS OF NEXT CHAIN LINK, OR ZERO.         ---*
*---           DS  A  ADDRESS OF FIRST ALIAS, OR ZERO              ---*
*---           DS  CL80 COMPLETE DIRECTORY ENTRY, MINUS BLDL       ---*
*---                    BYTES.                                     ---*
*---                                                               ---*
*---     ALL ALIASES ARE CHAINED IN EXACTLY THE SAME FASHION,      ---*
*---           INCLUDING THE COMPLETE DIRECTORY ENTRY.             ---*
*---                                                               ---*
*---     ALIAS CHAIN FORMAT:                                       ---*
*---           DS  A  ADDRESS OF NON-ALIAS MEMBER NAME ENTRY       ---*
*---           DS  A  ADDRESS OF NEXT ALIAS, OR ZERO               ---*
*---           DS  CL80 COMPLETE DIRECTORY ENTRY, MINUS BLDL       ---*
*---                    BYTES.                                     ---*
*---                                                               ---*
*---------------------------------------------------------------------*
         EJECT
ARCHDIR  CSECT
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         USING ARCHDIR,R15
         #STAMP
         STM   R14,R12,12(R13)     STORE ENTRY REGISTERS
         LR    R11,R15             LOAD ROUTINE BASE REGISTER
         DROP  R15                 DROP THE OLD BASE
         USING ARCHDIR,R11         DEFINE THE NEW BASE REGISTER
         LA    R14,72(,R13)        POINT DOWN THE SAVE AREA STACK
         ST    R14,8(,R13)         STORE FORWARD POINTER
         ST    R13,4(,R14)         AND BACK POINTER
         LR    R13,R14             LOAD NEW SAVE AREA POINTER
         L     R14,4(,R13)         RELOAD BACK POINTER
         L     R14,12(,R14)        RELOAD ORIG. REG 14
         USING MAINWK,R12          BASE THE MAIN WORK AREA
*---------------------------------------------------------------------*
*---     INIT THE PARM LIST                                        ---*
*---------------------------------------------------------------------*
         XC    CHAIN,CHAIN         START WITH EMPTY CHAIN
         L     R8,NDCBB            POINT TO INPUT DCB
         USING IHADCB,R8           AND BASE THE DCB DSECT
         TM    DCBOFLGS,DCBOFOPN   IS DCB OPEN ??
         BZ    DR18                NOPE; 8 RETURN CODE AND QUIT
*---------------------------------------------------------------------*
*---     LOOP THROUGH THE DIRECTORY, PICKING OUT THE NON-ALIAS     ---*
*---     MEMBER NAMES AND CHAINING THEM.                           ---*
*---------------------------------------------------------------------*
DR1      DS    0H
         GET   (R8)                READ A DIRECTORY BLOCK
         LA    R4,2(,R1)           POINT TO DATA START
         LH    R5,0(,R1)           LOAD BYTES-USED VALUE
         BCTR  R5,R0               DECREMENT BY ONE
         LA    R5,0(R5,R1)         POINT TO LAST VALID BYTE
         USING PDS2,R4             BASE THE DIRECTORY ENTRY DSECT
DR2      CLC   PDS2NAME,DR19       END-OF-DIRECTORY MARKER ??
         BE    DR7                 YES; DO THE ALIASES NOW
         IC    R6,PDS2INDC         INSERT ALIAS/LENGTH BITS
         N     R6,=A(PDS2LUSR)     ISOLATE LENGTH
         LA    R6,11(R6,R6)        COMPUTE FULL ENTRY LENGTH
         TM    PDS2INDC,PDS2ALIS   IS THIS AN ALIAS ??
         BO    DR5                 YES; SKIP IT THIS TIME
         GETMAIN R,LV=88,SP=84     GRAB SOME STORAGE
         XC    0(88,R1),0(R1)      CLEAR IT OUT
         EX    R6,DR6              COPY IN THE DIRECTORY DATA
         LA    R7,CHAIN            POINT TO CHAIN START
DR3      NC    0(4,R7),0(R7)       NULL POINTER ??
         BZ    DR4                 YES; STORE NEW LINK POINTER
         L     R7,0(,R7)           BUMP DOWN THE CHAIN
         B     DR3                 CONTINUE LOOPING AND SEARCHING
DR4      DS    0H
         ST    R1,0(,R7)           STORE NEW LINK POINTER
DR5      DS    0H
         LA    R4,1(R6,R4)         POINT DOWN THE BLOCK
         CR    R4,R5               PAST END OF BLOCK
         BL    DR2                 NOPE; JUST CONTINUE DEBLOCKING
         B     DR1                 YES; GET A FRESH BLOCK
DR6      MVC   8(1,R1),PDS2NAME    COPY OF DIRECTORY ENTRY
*---------------------------------------------------------------------*
*---     RE-READ THE DIRECTORY, LOOKING FOR ALIASES.               ---*
*---------------------------------------------------------------------*
DR7      DS    0H
         OI    NDCBB,X'80'
         CLOSE (,REREAD),MF=(E,NDCBB)    CLOSE DIRECTORY FOR RE-READ
         MVC   DCBEODA,=AL3(DR16)
         OPEN  MF=(E,NDCBB)        AND RE-OPEN
         NI    NDCBB,255-X'80'
DR8      DS    0H
         GET   (R8)                READ A DIRECTORY BLOCK
         LA    R4,2(,R1)           POINT TO DATA START
         LH    R5,0(,R1)           LOAD BYTES-USED VALUE
         BCTR  R5,R0               DECREMENT BY ONE
         LA    R5,0(R5,R1)         POINT TO LAST VALID BYTE
DR9      CLC   DR19,0(R4)          END-OF-DIRECTORY MARKER ??
         BE    DR16                YES; DO THE ALIASES NOW
         IC    R6,11(,R4)          INSERT ALIAS/LENGTH BITS
         N     R6,=A(X'1F')        ISOLATE LENGTH
         LA    R6,11(R6,R6)        COMPUTE FULL ENTRY LENGTH
         TM    PDS2INDC,PDS2ALIS   IS THIS AN ALIAS ??
         BZ    DR15                NO; SKIP IT THIS TIME
         GETMAIN R,LV=88,SP=84     GRAB SOME STORAGE
         XC    0(88,R1),0(R1)      CLEAR IT OUT
         EX    R6,DR6              COPY IN THE DIRECTORY DATA
         LA    R3,CHAIN            COPY THE CHAIN START POINTER
         L     R7,0(,R3)           LOAD FIRST LINK POINTER
DR10     DS    0H
         LTR   R7,R7               NULL POINTER ??
         BZ    DR11                YES; STORE NEW LINK POINTER
         CLC   16(3,R1),16(R7)     DO TTR'S MATCH ??
         BE    DR12                YES; INSERT KNOWN ALIAS
         LR    R3,R7               DOUWN THE CHAIN ---
         L     R7,0(,R7)           BUMP DOWN THE CHAIN
         B     DR10                CONTINUE LOOPING AND SEARCHING
DR11     DS    0H
         BAL   R9,UNALIAS          GO CONVERT TO NON-ALIAS MEMBER TYPE
         MVC   LINE,DELMSG         COPY MESSAGE SKELETON TO OUTPUT LINE
         MVC   LINE+18(8),8(R1)    INSERT ORPHAN ALIAS NAME
         #PUT  LINE                AND OUTPUT THE MESSAGE
         B     DR15                AND GO DEBLOCK SOME MORE
DR12     DS    0H
         ST    R7,0(,R1)           STORE POINTER TO NON-ALIAS NAME
DR13     DS    0H
         NC    4(4,R7),4(R7)       ALIAS CHAIN EMPTY ??
         BZ    DR14                YES; INSERT NEW ALIAS
         L     R7,4(,R7)           BUMP DOWN THE CHAIN
         B     DR13                AND KEEP SEARCHING
DR14     DS    0H
         ST    R1,4(,R7)
DR15     DS    0H
         LA    R4,1(R6,R4)         POINT DOWN THE BLOCK
         CR    R4,R5               PAST END OF BLOCK
         BL    DR9                 NOPE; JUST CONTINUE DEBLOCKING
         B     DR8                 YES; GET A FRESH BLOCK
         DROP  R4
*---------------------------------------------------------------------*
*---     ALL DONE; NOW LOOP THROUGH, CHECKING ANY MASKS.           ---*
*---                                                               ---*
*---     A MASK-MATCH ON A MEMBER NAME OR ANY OF ITS ALIASES       ---*
*---     IS CONSIDERED SUFFICIENT FOR RETENTION.  IF THE MEMBER    ---*
*---     NAME IN Q1 HAS NO '%' CHARACTERS, DELETE ALL EXCEPT THAT  ---*
*---     MEMBER/ALIAS AND RELATED INFORMATION.  IF THE MEMBER      ---*
*---     NAME IN Q1 HAS NO NON-GENERIC CHARACTERS, RETAIN THE      ---*
*---     ENTIRE CHAIN.  THE GENWK AREA OF THE MAIN ARCHIVER        ---*
*---     WORK AREA IS USED AS A 'SCRATCH PAD'                      ---*
*---------------------------------------------------------------------*
DR16     DS    0H
         MVC   GENWK(8),Q1         COPY THE MEMBER NAME
         MVC   GENWK+8(8),GENWK    AND DUPLICATE IT
         CLC   Q1,=CL10'*'         ALL MEMBERS ??
         BE    ENDDIR              YES; NOTHING TO FILTER
         LA    R5,GENWK+7          POINT TO STRING END
         LA    R3,GENWK            AND STRING START
         LA    R4,1                AND BXLE INCREMENT
F1       DS    0H
         CLI   0(R3),C'%'          GENERIC CHARACTER ??
         BNE   F2                  NOPE ---
         MVI   0(R3),C' '          YES; REPLACE WITH A BLANK
         MVI   8(R3),C' '          YES; REPLACE WITH A BLANK
         B     F3                  DO OTHER MASK
F2       DS    0H
         MVI   0(R3),X'FF'         ANYTHING GOES HERE
F3       DS    0H
         BXLE  R3,R4,F1            LOOP FOR MASKS
*
*        SEARCH MASKS ARE BUILT. NOW SEARCH THE CHAIN(S)
*
         LA    R2,CHAIN            POINT TO CHANGEABLE LINK AREA
TSTX     DS    0H
         L     R3,0(,R2)           LOAD STARTING POINTER
         LTR   R3,R3               ANYTHING HERE ??
         BZ    ENDDIR              NOPE; ALL DONE
         L     R4,4(,R3)           POINT TO FIRST 'SUBCHAIN'
TSTY     DS    0H
         LTR   R4,R4               ANYTHING HERE ??
         BZ    NOSUB               NOPE
         MVC   GENWK+16(8),8(R4)   COPY THE MEMBER NAME
         NC    GENWK+16(8),GENWK   MASK OUT THE GENERIC CHARS
         CLC   GENWK+16(8),GENWK+8 REMAINDER MATCH ??
         BE    MATCH               YES; RETAIN MAINLINK AND SUBCHAIN
         L     R4,4(,R4)           NEXT SUBCHAIN LINK
         B     TSTY                AND LOOP, CHECKING
NOSUB    DS    0H
         MVC   GENWK+16(8),8(R3)   COPY THE MEMBER NAME
         NC    GENWK+16(8),GENWK   MASK OUT THE GENERIC CHARS
         CLC   GENWK+16(8),GENWK+8 REMAINDER MATCH ??
         BE    MATCH               YES; RETAIN MAINLINK AND SUBCHAIN
FRE1     DS    0H
         L     R4,4(,R3)           POINT TO A SUBLINK
         LTR   R4,R4               ANY LINK PRESENT ??
         BZ    NOSUB1              NOPE ---
         MVC   4(4,R3),4(R4)       UNCHAIN THIS LINK
         FREEMAIN R,LV=88,A=(4),SP=84 RELEASE THIS LINK
         B     FRE1                AND LOOP, SEARCHINGLY
NOSUB1   DS    0H
         MVC   0(4,R2),0(R3)       UNCHAIN MAIN LINK
         FREEMAIN R,LV=88,A=(3),SP=84 RELEASE ITS STORAGE
         B     TSTX                AND LOOP, SEARCHINGLY
MATCH    DS    0H
         LR    R2,R3               BUMP DOWN THE CHAIN
         B     TSTX                AND RE-TEST
*
*        ALL DONE. PASS BACK THE FILTERED CHAIN AND RETURN
*
ENDDIR   DS    0H
         L     R1,4(,R13)          LOAD BACK S.A. POINTER
         MVC   16(4,R1),=F'0'      SET THE RETURN CODE
DR17     DS    0H
         L     R13,4(,R13)         LOAD BACK S.A. POINTER
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         MVI   12(R13),255
         BR    R14                 AND RETURN TO CALLER
*
*        THIS RETURN CODE SET WHEN THE NDCBB DCB IS NOT OPEN
*
DR18     DS    0H
         L     R1,4(,R13)          LOAD BACK S.A. POINTER
         MVC   16(4,R1),=F'4'      SET THE RETURN CODE
         B     DR17                AND RETURN
         EJECT
*---------------------------------------------------------------------*
*---     THIS DIDDLY LITTLE LOCAL SUBROUTINE CONVERTS A 'ORPHAN'   ---*
*---     ALIAS ENTRY TO A 'REAL' MEMBER AND INSERTS IT IN THE      ---*
*---     CHAIN OF 'REAL' MEMBERS IN THE PROPER SEQUENCE.           ---*
*---------------------------------------------------------------------*
         SPACE 3
UNALIAS  DS    0H
         LA    R2,8(,R1)           POINT TO ACTUAL DIRECTORY STUFF
         USING PDS2,R2             AND BASE THE DSECT
         NI    PDS2INDC,255-PDS2ALIS DROP THE ALIAS BIT ---
*
*        BECAUSE OF THE WAY THAT ALIAS LOAD MODULE ENTRIES ARE
*        BUILT, WE NEED TO CONCERN OURSELVES WITH THE ACTUAL
*        DIRECTORY ENTRY CONTENT, AS WELL AS THE ALIAS FLAG.  WE
*        WILL USE THE LENGTH OF THE DIRECTORY ENTRY AS OUR
*        'SIGNAL' THAT THIS IS A LOAD MODULE ENTRY.  WE ALSO
*        KNOW THAT A LOAD MODULE ENTRY CONTAINS AT LEAST ONE TTR
*        VALUE IN THE USER DATA FIELD AND THIS IS REFLECTED IN
*        THE PDS2INDC FIELD.
*
         TM    PDS2INDC,X'60'      ANY TTR'S IN USER DATA ??
         BZ    UNAADD              NOPE; ALL DONE ---
         IC    R15,PDS2INDC        INSERT THE LENGTH/TTR COUNT FIELD
         N     R15,=A(X'1F')       TRIM TO BARE LENGTH
         CH    R15,=H'17'          IS IT THIS FORMAT ??
         BNE   UNA1                NOPE ---
         MVC   33(2,R2),44(R2)     COPY AUTH BYTES DOWN
         LA    R15,12              NEW DIR ENTRY LENGTH
         IC    R14,PDS2INDC        LOAD ORIGINAL VALUE
         N     R14,=A(X'60')       KEEP ONLY TTR COUNT
         OR    R15,R14             ADD TO LENGTH
         STC   R15,PDS2INDC        STORE UPDATED VALUE
         B     UNAADD              AND RETURN TO CALLER
UNA1     DS    0H
         CH    R15,=H'23'          IS IT THIS FORMAT ??
         BNE   UNA2                NOPE ---
         MVC   42(6,R2),52(R2)     COPY AUTH BYTES DOWN
         LA    R15,18              NEW DIR ENTRY LENGTH
         IC    R14,PDS2INDC        LOAD ORIGINAL VALUE
         N     R14,=A(X'60')       KEEP ONLY TTR COUNT
         OR    R15,R14             ADD TO LENGTH
         STC   R15,PDS2INDC        STORE UPDATED VALUE
         B     UNAADD              AND RETURN TO CALLER
UNA2     DS    0H
         CH    R15,=H'19'          IS IT THIS FORMAT ??
         BNE   UNA3                NOPE ---
         MVC   34(6,R2),44(R2)     COPY AUTH BYTES DOWN
         LA    R15,14              NEW DIR ENTRY LENGTH
         IC    R14,PDS2INDC        LOAD ORIGINAL VALUE
         N     R14,=A(X'60')       KEEP ONLY TTR COUNT
         OR    R15,R14             ADD TO LENGTH
         STC   R15,PDS2INDC        STORE UPDATED VALUE
         B     UNAADD              AND RETURN TO CALLER
UNA3     DS    0H
         CH    R15,=H'21'          IS IT THIS FORMAT ??
         BNE   UNAADD              NOPE ---
         MVC   41(2,R2),52(R2)     COPY AUTH BYTES DOWN
         LA    R15,16              NEW DIR ENTRY LENGTH
         IC    R14,PDS2INDC        LOAD ORIGINAL VALUE
         N     R14,=A(X'60')       KEEP ONLY TTR COUNT
         OR    R15,R14             ADD TO LENGTH
         STC   R15,PDS2INDC        STORE UPDATED VALUE
         B     UNAADD              AND RETURN TO CALLER
UNAADD   DS    0H
         LA    R3,CHAIN            LOAD CHAIN ROOT ADDRESS
UNA4     DS    0H
         L     R7,0(,R3)           LOAD LINK POINTER
         LTR   R7,R7               NO MORE ??
         BZ    UNA5                ADD NEW NAME TO END
         CLC   8(8,R7),8(R1)       DOES NAME FIT HERE ??
         BH    UNA5                YES ---
         LR    R3,R7               COPY LINK ADDRESS
         B     UNA4                AND CONTINUE
UNA5     DS    0H
         MVC   0(4,R1),0(R3)       COPY NEXT-LINK POINTER
         ST    R1,0(,R3)           INSERT NEW LINK
         BR    R9                  AND RETURN TO CALLER
         DROP  R2
         EJECT
*---------------------------------------------------------------------*
*---     MISC CONSTANTS AND DATA AREAS                             ---*
*---------------------------------------------------------------------*
DR19     DC    8X'FF'
DELMSG   DC    CL133' *** ORPHAN ALIAS XXXXXXXX CONVERTED TO REAL MEMBEX
               R FOR UNLOAD PURPOSES. *** '
         LTORG
         DROP  R8
         COPY  ##ARCHWK            MAIN WORK AREA
         IHAPDS PDSBLDL=NO
         PRINT NOGEN
         DCBD  DSORG=QS
         END
