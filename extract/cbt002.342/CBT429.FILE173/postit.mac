POSTIT   TITLE '** TSO DATASET ATTRIBUTE COMMAND'
***********************************************************************
*                                                                     *
*    NAME - POSTIT                                                    *
*                                                                     *
*    AUTHOR - TED BESTANI                                             *
*                                                                     *
*    PURPOSE - PASS ALONG A STICKY MESSAGE TO THE CONSOLE OPERATOR    *
*                                                                     *
*    ATTRIBUTES - NON-REUSABLE                                        *
*                                                                     *
*    MACROS USED - WTO                                                *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,GEN,NODATA
POSTIT   CSECT
         STM   R14,R12,12(R13)         SAVE CALLERS REGISTERS
         BALR  R9,0                    WHERE ARE WE?
         USING *,R9                    TEMPORARY BASE REGISTER
         ST    R13,SAVEAREA+4          SAVE BACKWARD SA PTR
         LA    R8,SAVEAREA             GET SA ADDR
         ST    R8,8(R13)               SAVE FORWARD SA PTR
         LR    R13,R8                  COPY SA ADDR
         LA    R12,4095(R13)           BASE2 = BASE1 + 4095 +
         LA    R12,1(R12)                                     1
         LA    R11,4095(R12)           BASE3 = BASE2 + 4095 +
         LA    R11,1(R11)                                     1
         LA    R10,4095(R11)           BASE4 = BASE3 + 4095 +
         LA    R10,1(R10)                                     1
         USING SAVEAREA,R13,R12,R11,R10    PERMANENT BASE REGISTERS
         DROP  R9                      DROP TEMPORARY BASE REGISTER
         MVC   SAVECPPL(16),0(R1)      SAVE CP PARM LIST
         SPACE 1
         BAL   R9,DRIVER               CALL MAIN DRIVER ROUTINE
         SPACE 1
         L     R13,SAVEAREA+4          GET BACKWARD SA PTR
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,0                   SET RC=0
         BR    R14                     GO HOME......
         SPACE 1
SAVEAREA DS    18F    PROGRAM MAIN SAVE AREA
SAVECPPL DS    0F     ** TSO COMMAND PROCESSOR PARAMETER LIST **
CPPLCBUF DS    A      ADDRESS OF COMMAND INPUT BUFFER
CPPLUPT  DS    A                 USER PROFILE TABLE
CPPLPSCB DS    A                 PROTECTED STEP CONTROL BLOCK
CPPLECT  DS    A                 ENVIRONMENT CONTROL TABLE
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*     THIS IS THE HIGHEST LEVEL WORK ROUTINE IN THE PROGRAM.  IT      *
*   DIRECTS THE FLOW OF CONTROL TO THE WORK ROUTINES.                 *
*     THE PROGRAM FOLLOWS BLOCK CODING CONVENTIONS.  FLOW             *
*   BETWEEN ROUTINES IS ACCOMPLISHED VIA REGISTER 9, WHICH IS ALWAYS  *
*   SAVED UPON ENTRY AND RESTORED BEFORE EXIT.                        *
***********************************************************************
         SPACE 2
DRIVER   DS    0H
         ST    R9,SAVE1
         B     BSAVE1
SAVE1    DC    F'-1'
         DC    CL8'DRIVER  '
BSAVE1   EQU   *
         SPACE 1
*------> MOVE THE INPUT TO THE WTO AREA AND SEND IT
         BAL   R9,GETMSG              PROCESS MESSAGE
         SPACE 1
EXIT1    EQU   *
         L     R9,SAVE1
         BR    R9
         EJECT
***********************************************************************
*  MOVE THE INPUT TO THE OUTPUT AREA AND SEND IT                      *
***********************************************************************
         SPACE 1
GETMSG   DS    0H
         ST    R9,SAVE2
         B     BSAVE2
SAVE2    DC    F'-1'
         DC    CL8'GETDSN  '
BSAVE2   EQU   *
         SPACE 1
         L     R4,CPPLCBUF         GET CBUF ADDR
         LH    R2,0(R4)            GET TOTAL LENGTH
         LH    R3,2(R4)            GET RELATIVE OFFSET OF OPERAND
         LA    R3,4(R3)            BUMP BY BDW LENGTH
         CR    R2,R3               IF EQUAL, MEANS NO OPERAND
         BE    NOMSG1                GO GET MESSAGE
         SR    R2,R3               GET OPERAND LENGTH
         BCTR  R2,0                DEC BY 1 FOR EXECUTE
         AR    R4,R3               POINT R4 TO OPERAND
         CH    R2,=H'59'           CHECK FOR MAX LENGTH
         BNH   OKFOREX             GO DO IT
         LH    R2,=H'59'           ARTIFICIAL MAX
         TPUT  MSG1,L'MSG1         CHASTISE USER
OKFOREX  EQU   *
         EX    R2,EXMVC1           MOVE MESSAGE
         B     PROCMSG             GO PROCESS DSNAME
EXMVC1   MVC   MSG(0),0(R4)        DUMMY MVC
NOMSG1   EQU   *
         TPUT  MSG2,L'MSG2         PUT OUT MSG REQUEST
         TGET  MSG,L'MSG           GO GET IT
         CH    R1,=H'1'            MUST BE AT LEAST 1 BYTE LONG
         BL    NOMSG1
PROCMSG  EQU   *
         LA    R2,MSG              GET START ADDRESS
         LA    R3,L'MSG            GET LENGTH
         BAL   R1,BYPMSG               GET PARM ADDR & BYPASS
         DC    AL2(76)                 LENGTH OF WTO
         DC    X'8000'                 ROUTING & DESC FOLLOW TEXT
         DC    CL12'TSO/POSTIT: '      MESSAGE PREFIX
MSG      DC    CL60' '
         DC    X'4000'                 DESC: IMM ACTION REQ
         DC    X'8000'                 ROUT: MASTER CONSOLE
BYPMSG   EQU   *
         SVC   35                      ISSUE WTO
         SPACE 1
EXIT2    EQU   *
         L     R9,SAVE2
         BR    R9
         SPACE 1
MSG1     DC    CL46'TSO/POSTIT: MAX MESSAGE OF 60 CHARACTERS SENT '
MSG2     DC    CL46'TSO/POSTIT: PLEASE ENTER MESSAGE FOR OPERATOR '
         SPACE 1
         END   POSTIT
