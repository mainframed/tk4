FINDPTF  TITLE '**** EXTRACT PTF FROM CBPDO *****'
***********************************************************************
*                                                                     *
*    NAME - FINDPTF                                                   *
*                                                                     *
*    AUTHOR - TED BESTANI                                             *
*                                                                     *
*    PURPOSE - THIS PROGRAM EXTRACTS A NAMED PTF FROM A CBPDO TAPE    *
*                                                                     *
*    ATTRIBUTES - NON-REUSABLE                                        *
*                                                                     *
*    DDNAMES - INPUT    - INPUT CBPDO TAPE                            *
*              OUTPUT   - OUTPUT PTF MEMBER                           *
*                                                                     *
*    PARMS - SEVEN CHARACTER NAME OF A PTF                            *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,NOGEN,NODATA
FINDPTF  CSECT
         STM   R14,R12,12(R13)         SAVE CALLERS REGISTERS
         BALR  R9,0                    WHERE ARE WE?
         USING *,R9                    TEMPORARY BASE REGISTER
         ST    R13,SAVEAREA+4          SAVE BACKWARD SA PTR
         LA    R8,SAVEAREA             GET SA ADDR
         ST    R8,8(R13)               SAVE FORWARD SA PTR
         LR    R13,R8                  COPY SA ADDR
         LA    R12,4095(R13)           BASE2 = BASE1 + 4095 +
         LA    R12,1(R12)                                     1
         LA    R11,4095(R12)           BASE3 = BASE2 + 4095 +
         LA    R11,1(R11)                                     1
         LA    R10,4095(R11)           BASE4 = BASE3 + 4095 +
         LA    R10,1(R10)                                     1
         USING SAVEAREA,R13,R12,R11,R10    PERMANENT BASE REGISTERS
         DROP  R9                      DROP TEMPORARY BASE REGISTER
         SPACE 1
         BAL   R9,DRIVER               CALL MAIN DRIVER ROUTINE
         SPACE 1
         L     R13,SAVEAREA+4          GET BACKWARD SA PTR
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,0                   SET RC=0
         BR    R14                     GO HOME......
         SPACE 1
SAVEAREA DS    18F    PROGRAM MAIN SAVE AREA
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*     THIS IS THE HIGHEST LEVEL WORK ROUTINE IN THE PROGRAM.  IT      *
*   DIRECTS THE FLOW OF CONTROL TO THE WORK ROUTINES.                 *
*     THE PROGRAM IS WRITTEN USING BASIC STRUCTURED PROGRAMMING. FLOW *
*   BETWEEN ROUTINES IS ACCOMPLISHED VIA REGISTER 9, WHICH IS ALWAYS  *
*   SAVED UPON ENTRY AND RESTORED BEFORE EXIT.                        *
***********************************************************************
         SPACE 2
DRIVER   DS    0H
         ST    R9,SAVE10
         B     BSAVE10
SAVE10   DC    F'-1'
         DC    CL8'DRIVER  '
BSAVE10  EQU   *
         SPACE 1
         BAL   R9,OPTIONS              CHECK PARMS FOR VALID OPTIONS
         BAL   R9,GETPTF               READ CBPDO AND EXTRACT PTF
         SPACE 1
EXIT10   EQU   *
         L     R9,SAVE10
         BR    R9
         EJECT
***********************************************************************
*     THIS ROUTINE SCANS THE INPUT PARM FOR THE PTF NAME              *
***********************************************************************
         SPACE 2
OPTIONS  DS    0H
         ST    R9,SAVE15
         B     BSAVE15
SAVE15   DC    F'-1'
         DC    CL8'OPTIONS '
BSAVE15  EQU   *
         SPACE 1
*------> INITIALIZE FOR PARM SCAN
         L     R1,0(R1)                ADDR OF PARM LIST
         LH    R2,0(R1)                LENGTH OF PARM
         CH    R2,=H'6'                IS IT THE MINIMUM LENGTH?
         BNL   BYPASS1                 YES, GO PROCESS PARM
         WTO   'FINDPTF - NO PARM SUPPLIED '
         B     EXIT10
BYPASS1  EQU   *
         LA    R3,2(R1)                BUMP TO START OF PARM
         LR    R4,R3                   COPY START ADDR
         AR    R4,R2                   ADD LENGTH
*------> CHECK FOR PRESENCE OF OPTIONS IN PARAMETER STRING
CHKOPT   EQU   *
         CR    R3,R4                   SCAN OVER?
         BNL   EXIT15                  YES, EXIT ROUTINE
         MVC   PTFNAME,0(R3)           MOVE PTF NAME
         SPACE 1
EXIT15   EQU   *
         L     R9,SAVE15
         BR    R9
         EJECT
***********************************************************************
*  THIS ROUTINE READS THE CBPDO TAPE AND WRITES THE PTF TO OUTPUT     *
***********************************************************************
         SPACE 2
GETPTF   DS    0H
         ST    R9,SAVE20
         B     BSAVE20
SAVE20   DC    F'-1'
         DC    CL8'GETPTF  '
BSAVE20  EQU   *
         SPACE 1
         OPEN  (INPUT,INPUT,OUTPUT,OUTPUT,REPORT,OUTPUT)
READLOOP EQU   *
         GET   INPUT,WORKREC           GET RECORD
         AP    RECCNT1,=PL1'1'         ADD ONE TO COUNTER
         CLC   WORKREC(7),=CL8'++ PTF ('  IS THIS A PTF
         BNE   READLOOP                GO READ NEXT RECORD
         CLC   WORKREC+8(7),PTFNAME    IS THIS OUR PTF?
         BNE   READLOOP                GO READ NEXT RECORD
PUTLOOP  EQU   *
         PUT   OUTPUT,WORKREC          WRITE RECORD
         GET   INPUT,WORKREC           GET RECORD
         AP    RECCNT2,=PL1'1'         ADD ONE TO COUNTER
         CLC   WORKREC(7),=CL8'++ PTF ('  IS THIS A PTF
         BNE   PUTLOOP                 GO READ NEXT RECORD
EOFINPUT EQU   *
         CLOSE (INPUT,,OUTPUT)         CLOSE WORKING FILES
         UNPK  PRTCNT1,RECCNT1         SHOW FIRST COUNTER
         OI    PRTCNT1+6,X'F0'         NORMALIZE SIGN
         UNPK  PRTCNT2,RECCNT2         SHOW SECOND COUNTER
         OI    PRTCNT2+6,X'F0'         NORMALIZE SIGN
         PUT   REPORT,PRTREC           PRINT RECORD
         CLOSE (REPORT)                CLOSE OUTPUT REPORT
         SPACE 1
EXIT20   EQU   *
         L     R9,SAVE20
         BR    R9
         EJECT
***********************************************************************
*              W O R K I N G   S T O R A G E   S E C T I O N          *
***********************************************************************
         SPACE 3
INPUT    DCB   DSORG=PS,               DCB FOR READING INPUT           X
               RECFM=FB,                                               X
               MACRF=GM,                                               X
               EODAD=EOFINPUT,                                         X
               LRECL=80,                                               X
               DDNAME=INPUT
OUTPUT   DCB   DSORG=PS,               DCB FOR PRINTING DIRECTORY      X
               RECFM=FB,                                               X
               MACRF=PM,                                               X
               DDNAME=OUTPUT,                                          X
               LRECL=80
REPORT   DCB   DSORG=PS,               DCB FOR PRINTING PDS            X
               RECFM=FBA,                                              X
               MACRF=PM,                                               X
               DDNAME=REPORT,                                          X
               BLKSIZE=0,                                              X
               LRECL=133
*------> THIS AREA IS USED FOR MISCELLANEOUS STUFF
WORKREC  DC    CL80' '                 I/O AREA
RECCNT1  DC    PL4'0'                  NUMBER OF RECORDS READ
RECCNT2  DC    PL4'0'                  NUMBER OF RECORDS IN PTF
PTFNAME  DC    CL7' '                  NAME OF THE PTF WE WANT
*------>
PRTREC   DC    CL133' '                CURRENT PRINT RECORD
         ORG   PRTREC
         DC    C'1RECORDS READ PRIOR TO FIRST PTF = '
PRTCNT1  DC    C'XXXXXXX'
         DC    C'RECORDS IN CURRENT PTF = '
PRTCNT2  DC    C'XXXXXXX'
*------>
         LTORG
*------>
         SPACE 3
         END   FINDPTF
