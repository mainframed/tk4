FINDFMID TITLE '**** EXTRACT ALL PTFS FOR FMID FROM CBPDO ****'
***********************************************************************
*                                                                     *
*    NAME - FINDFMID                                                  *
*                                                                     *
*    AUTHOR - TED BESTANI                                             *
*                                                                     *
*    PURPOSE - THIS PROGRAM EXTRACTS ALL PTF'S FOR A GIVEN FMID       *
*                                                                     *
*    ATTRIBUTES - NON-REUSABLE                                        *
*                                                                     *
*    DDNAMES - INPUT    - INPUT CBPDO TAPE                            *
*              OUTPUT   - OUTPUT PTF MEMBER                           *
*              REPORT   - OUTPUT REPORT                               *
*                                                                     *
*    PARMS - SEVEN CHARACTER NAME OF AN FMID                          *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,NOGEN,NODATA
FINDFMID CSECT
         STM   R14,R12,12(R13)         SAVE CALLERS REGISTERS
         BALR  R9,0                    WHERE ARE WE?
         USING *,R9                    TEMPORARY BASE REGISTER
         ST    R13,SAVEAREA+4          SAVE BACKWARD SA PTR
         LA    R8,SAVEAREA             GET SA ADDR
         ST    R8,8(R13)               SAVE FORWARD SA PTR
         LR    R13,R8                  COPY SA ADDR
         LA    R12,4095(R13)           BASE2 = BASE1 + 4095 +
         LA    R12,1(R12)                                     1
         LA    R11,4095(R12)           BASE3 = BASE2 + 4095 +
         LA    R11,1(R11)                                     1
         LA    R10,4095(R11)           BASE4 = BASE3 + 4095 +
         LA    R10,1(R10)                                     1
         USING SAVEAREA,R13,R12,R11,R10    PERMANENT BASE REGISTERS
         DROP  R9                      DROP TEMPORARY BASE REGISTER
         SPACE 1
         BAL   R9,DRIVER               CALL MAIN DRIVER ROUTINE
         SPACE 1
         L     R13,SAVEAREA+4          GET BACKWARD SA PTR
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,0                   SET RC=0
         BR    R14                     GO HOME......
         SPACE 1
SAVEAREA DS    18F    PROGRAM MAIN SAVE AREA
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*     THIS IS THE HIGHEST LEVEL WORK ROUTINE IN THE PROGRAM.  IT      *
*   DIRECTS THE FLOW OF CONTROL TO THE WORK ROUTINES.                 *
*     THE PROGRAM IS WRITTEN USING BASIC STRUCTURED PROGRAMMING. FLOW *
*   BETWEEN ROUTINES IS ACCOMPLISHED VIA REGISTER 9, WHICH IS ALWAYS  *
*   SAVED UPON ENTRY AND RESTORED BEFORE EXIT.                        *
***********************************************************************
         SPACE 2
DRIVER   DS    0H
         ST    R9,SAVE10
         B     BSAVE10
SAVE10   DC    F'-1'
         DC    CL8'DRIVER  '
BSAVE10  EQU   *
         SPACE 1
         BAL   R9,PARMS                CHECK PARMS FOR VALID PARMS
         BAL   R9,GETHOLD              COPY HOLD DATA TO TAPE
         BAL   R9,GETPTF               READ CBPDO AND EXTRACT PTF
         SPACE 1
EXIT10   EQU   *
         L     R9,SAVE10
         BR    R9
         EJECT
***********************************************************************
*     THIS ROUTINE SCANS THE INPUT PARM FOR THE FMID NAME             *
***********************************************************************
         SPACE 2
PARMS    DS    0H
         ST    R9,SAVE15
         B     BSAVE15
SAVE15   DC    F'-1'
         DC    CL8'PARMS '
BSAVE15  EQU   *
         SPACE 1
*------> INITIALIZE FOR PARM SCAN
         L     R1,0(R1)                ADDR OF PARM LIST
         LH    R2,0(R1)                LENGTH OF PARM
         CH    R2,=H'6'                IS IT THE MINIMUM LENGTH?
         BNL   BYPASS1                 YES, GO PROCESS PARM
         WTO   'FINDFMID - NO PARM SUPPLIED '
         B     EXIT10
BYPASS1  EQU   *
         LA    R3,2(R1)                BUMP TO START OF PARM
         LR    R4,R3                   COPY START ADDR
         AR    R4,R2                   ADD LENGTH
         LA    R5,7                    MAX ENTRIES IN TABLE
         XR    R2,R2                   CLEAR FMID COUNT
         LA    R6,FMIDNAME             LOAD START OF TABLE
*------> CHECK FOR PRESENCE OF PARMS IN PARAMETER STRING
CHKOPT   EQU   *
         CR    R3,R4                   SCAN OVER?
         BNL   ENDPARMS                YES, GO STORE FMID COUNT
         MVC   0(7,R6),0(R3)           MOVE FMID NAME
         LA    R3,8(R3)                BUMP TO NEXT PARM ENTRY
         LA    R2,1(R2)                BUMP FMID COUNT
         LA    R6,7(R6)                BUMP FMID TABLE INDEX
         BCT   R5,CHKOPT               ITERATE
ENDPARMS EQU   *
         ST    R2,FMIDCNT              STORE COUNT
         SPACE 1
EXIT15   EQU   *
         L     R9,SAVE15
         BR    R9
         EJECT
***********************************************************************
*     THIS ROUTINE COPIES THE HOLDDATA TO THE OUTPUT TAPE             *
***********************************************************************
         SPACE 2
GETHOLD  DS    0H
         ST    R9,SAVE17
         B     BSAVE17
SAVE17   DC    F'-1'
         DC    CL8'GETHOLD'
BSAVE17  EQU   *
         SPACE 1
*------> COPY THE HOLD DATA TO THE OUTPUT TAPE
         OPEN  (HOLDIN,INPUT,HOLDOUT,OUTPUT)
READHOLD EQU   *
         GET   HOLDIN,WORKREC          GET RECORD
         PUT   HOLDOUT,WORKREC         PUT RECORD
         B     READHOLD
EOFHOLD  EQU   *
         CLOSE (HOLDIN,,HOLDOUT)
         SPACE 1
EXIT17   EQU   *
         L     R9,SAVE17
         BR    R9
         EJECT
***********************************************************************
*  THIS ROUTINE READS THE CBPDO TAPE AND WRITES THE PTFS TO OUTPUT    *
***********************************************************************
         SPACE 2
GETPTF   DS    0H
         ST    R9,SAVE20
         B     BSAVE20
SAVE20   DC    F'-1'
         DC    CL8'GETPTF  '
BSAVE20  EQU   *
         SPACE 1
         OPEN  (INPUT,INPUT,OUTPUT,OUTPUT,REPORT,OUTPUT)
READLOOP EQU   *
         GET   INPUT,WORKREC           GET RECORD
         AP    RECCNT1,=PL1'1'         ADD ONE TO COUNTER
         CLC   WORKREC(7),=CL8'++ PTF ('  IS THIS A PTF
         BNE   READLOOP                GO READ NEXT RECORD
BLDTABLE EQU   *
         LA    R2,TABLE                GET PTR TO START OF TABLE
         L     R3,=F'50000'            NUMBER OF LINES IN TABLE
GETLOOP  EQU   *
         MVC   0(80,R2),WORKREC        MOVE RECORD TO STORAGE
         GET   INPUT,WORKREC           GET RECORD
         AP    RECCNT1,=PL1'1'         ADD ONE TO COUNTER
         CLC   WORKREC(7),=CL8'++ PTF ('  IS THIS A PTF
         BE    CHKFMID1                END OF PTF, CHECK FMID
         LA    R2,80(R2)               BUMP INDEX
         BCT   R3,GETLOOP              ITERATE
         WTO   'FINDFMID - INSUFFICIENT STORAGE, TERMINATING'
         B     EXIT10                  GO TO DRIVER'S EXIT
CHKFMID1 EQU   *
         MVC   PRT2PTF(7),PTFHOLD      MOVE NAME OF PTF FOR REPORT
         MVC   PTFHOLD,WORKREC+8       MOVE CURRENT NAME OF PTF
         LA    R3,TABLE                GET ORIGIN OF TABLE
CHKFMID2 EQU   *
         CLC   0(4,R3),=CL4'FMID'      HAVE WE FOUND AN FMID?
         BE    FNDFMID1                YES, WRITE THIS ONE OUT
         LA    R3,1(R3)                BUMP
         CR    R3,R2                   END?
         BL    CHKFMID2                ITERATE
         WTO   'FINDFMID - FMID NOT FOUND, ABENDING'
         DC    H'0'
FNDFMID1 EQU   *
         LA    R3,4(R3)                POINT PAST FMID
         CLI   0(R3),C'('              FOUND LEFT PAREN?
         BE    FNDFMID2                YES, BRANCH AROUND
         LA    R3,1(R3)                ALLOW FOR ONE SPACE
FNDFMID2 EQU   *
         LA    R4,FMIDNAME             GET TABLE ORIGIN
         L     R5,FMIDCNT              GET FMID COUNT
FNDFMID3 EQU   *
         CLC   1(7,R3),0(R4)           IS FMID IN OUR TABLE?
         BE    WTRPREP                 YES, PREPARE TO WRITE
         LA    R4,7(R4)                BUMP INDEX
         BCT   R5,FNDFMID3             ITERATE
         B     BLDTABLE                NO, FLUSH TABLE
WTRPREP  EQU   *
         MVC   PRT2FMID(7),0(R4)       MOVE FMID NAME
         PUT   REPORT,PRTREC2          PRINT REPORT LINE
         LA    R3,TABLE                GET TABLE ORIGIN
WRITER   EQU   *
         MVC   WORKREC2,0(R3)          MOVE RECORD
         AP    RECCNT2,=PL1'1'         ADD ONE TO COUNTER
         PUT   OUTPUT,WORKREC2         WRITE RECORD
         LA    R3,80(R3)               BUMP
         CR    R3,R2                   END?
         BNH   WRITER                  GO WRITE NEXT RECORD
         B     BLDTABLE                GO BUILD NEXT TABLE ENTRY
EOFINPUT EQU   *
         CLOSE (INPUT,,OUTPUT)         CLOSE WORKING FILES
         UNPK  PRTCNT1,RECCNT1         SHOW FIRST COUNTER
         OI    PRTCNT1+6,X'F0'         NORMALIZE SIGN
         UNPK  PRTCNT2,RECCNT2         SHOW SECOND COUNTER
         OI    PRTCNT2+6,X'F0'         NORMALIZE SIGN
         PUT   REPORT,PRTREC           PRINT RECORD
         CLOSE (REPORT)                CLOSE OUTPUT REPORT
         SPACE 1
EXIT20   EQU   *
         L     R9,SAVE20
         BR    R9
         EJECT
***********************************************************************
*              W O R K I N G   S T O R A G E   S E C T I O N          *
***********************************************************************
         SPACE 3
INPUT    DCB   DSORG=PS,               DCB FOR READING INPUT PTFS      X
               RECFM=FB,                                               X
               MACRF=GM,                                               X
               EODAD=EOFINPUT,                                         X
               LRECL=80,                                               X
               DDNAME=INPUT
OUTPUT   DCB   DSORG=PS,               DCB FOR WRITING OUTPUT PTFS     X
               RECFM=FB,                                               X
               MACRF=PM,                                               X
               DDNAME=OUTPUT,                                          X
               LRECL=80
HOLDIN   DCB   DSORG=PS,               DCB FOR READING HOLDDATA        X
               RECFM=FB,                                               X
               MACRF=GM,                                               X
               EODAD=EOFHOLD,                                          X
               LRECL=80,                                               X
               DDNAME=HOLDIN
HOLDOUT  DCB   DSORG=PS,               DCB FOR WRITING HOLDDATA        X
               RECFM=FB,                                               X
               MACRF=PM,                                               X
               DDNAME=HOLDOUT,                                         X
               LRECL=80
REPORT   DCB   DSORG=PS,               DCB FOR PRINTING REPORT         X
               RECFM=FBA,                                              X
               MACRF=PM,                                               X
               DDNAME=REPORT,                                          X
               BLKSIZE=0,                                              X
               LRECL=133
*------> THIS AREA IS USED FOR MISCELLANEOUS STUFF
WORKREC  DC    CL80' '                 INPUT AREA
WORKREC2 DC    CL80' '                 OUTPUT AREA
RECCNT1  DC    PL4'0'                  NUMBER OF RECORDS READ
RECCNT2  DC    PL4'0'                  NUMBER OF RECORDS IN PTF
FMIDCNT  DC    F'0'                    NUMBER OF FMIDS REQUESTED
FMIDNAME DC    7XL7'00'                NAMES OF THE PTF WE WANT
PTFHOLD  DC    CL7' '                  HOLD AREA FOR PTF NAME
*------>
PRTREC   DC    CL133' '                TOTALS PRINT RECORD
         ORG   PRTREC
         DC    C'1RECORDS READ = '
PRTCNT1  DC    C'XXXXXXX'
         DC    C' RECORDS WRITTEN = '
PRTCNT2  DC    C'XXXXXXX'
         ORG
*------>
PRTREC2  DC    CL133' '                SELECT PRINT RECORD
         ORG   PRTREC2
         DC    C' PTF NAME = '
PRT2PTF  DC    C'XXXXXXX'
         DC    C' FOR FMID = '
PRT2FMID DC    C'XXXXXXX'
         ORG
*------>
         LTORG
*------>
         SPACE 3
TABLE    DS    50000CL80
         END   FINDFMID
