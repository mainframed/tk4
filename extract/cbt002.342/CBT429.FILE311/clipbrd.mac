./ ADD NAME=$$README 1100-98162-98162-1817-00047-00047-00000-DALCOCK
Readme file for the ClipBoard/PasteIt! ISPF app v1.1 - 27-MAY-1998

This ISPF application enhances the IBM-supplied ISRCUT and ISRPASTE
edit macros:

- Provides a Paste Area for when the input area of the screen is
  too small to fit the current paste value

- View, Print, Edit the current cut lines - known as the Clip Board.

=====================================================================

Friendly disclaimer:
-------------------

   The contents of this file are FREEWARE.  Use at your own risk.  It
   is provided for your enjoyment and neither David Alcock or his
   employer provides any warranty for their use.  I'd like to hear
   feedback on how they work on your system:

       David Alcock
       dalcock@csw.com ...... Internet email (work)
       davea@ticnet.com ..... Internet email (home)

Legal disclaimer:
----------------

   The ClipBoard/PasteIt! application IS PROVIDED "AS IS" AND
   WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, WITHOUT
   LIMITATION, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND
   FITNESS FOR A PARTICULAR PURPOSE.

=====================================================================

To install:

- Put members CLIPBRD and PASTEIT in your //SYSPROC or //SYSEXEC
  concatenation

- Put members CLIPBRDE, CLIPBRDI, CLIPBRD2, CLIPBRD3, CLIPBRD4 and
  CLIPBRD5 into your //ISPPLIB concatenation

  Please note that the panel name CLIPBRDI is not suffixed with the
  number 1 but the letter I.

=====================================================================
End of member $$README - ClipBoard/PasteIt! application
./ ADD NAME=CLIPBRD  1100-98162-98162-1817-00196-00196-00000-DALCOCK
/* REXX
 ×
 × Name: CLIPBRD
 ×
 × Application: ClipBoard/PasteIt!
 ×
 × Author: David Alcock
 ×         dalcock@csw.com
 ×         davea@ticnet.com
 ×
 × Purpose: This exec shows the current "clip board" as used by the IBM
 ×          ISRCUT and ISRPASTE edit macros.  You can then print the
 ×          clip board, edit it, delete it, etc.
 ×
 × Requirements: This exec uses the specs from the IBM-supplied
 ×               ISRCUT and ISRPASTE edit macros that are shipped
 ×               with ISPF.  On my OS/390 1.2 system, these edit macros
 ×               are found in DSN=ISP.SISPSAMP.  At many shops, this
 ×               dataset is renamed to SYS1.ISP.SISPSAMP.
 ×
 ×               Typically, your systems programmer will copy the
 ×               ISRCUT and ISRPASTE members from the sample library
 ×               and put them into your installation's //SYSPROC or
 ×               //SYSEXEC concatenation as names "CUT" and "PASTE".
 ×
 × Panels: CLIPBRDE
 ×
 × Terms: Only on IBM mainframes is the "COPY" function termed "CUT"
 ×        (in my experience).
 ×
 × Obsolete: IBM is planning very big enhancements in ISPF clipboards
 ×           as heard at the February 1998 SHARE.  This EXEC will
 ×           probably continue to work but the new clipboard sounds very
 ×           nice.
 ×
 */
/* ================================================================= *
 ×
 ×           M o d i f i c a t i o n   H i s t o r y
 ×
 × Person     Date        Description
 × ---------- ----------- --------------------------------------------
 × DGAlcock   11-JUN-1998 v1.0:
 ×                        - Initial Rexx exec created;
 * ================================================================= */

/*
 × Installation fields to change
 */

i_dsn       = sysvar(sysuid)".SPFTEMP1.CLIP.BOARD"
i_unitname  = 'VIO'                   /* Temp file unit name */

/*
 × Validate clipboard option: browse, edit or view
 */
address ISPEXEC

arg option
option = translate(strip(option))
select
    when option == ''       then option = 'BROWSE'
    when option == 'BROWSE' then nop
    when option == 'BR'     then option = 'BROWSE'
    when option == 'EDIT'   then nop
    when option == 'ED'     then option = 'EDIT'
    when option == 'VIEW'   then do
         'vget (ZENVIR)'
         if substr(zenvir,6,1) < '4' then do /* 'ISPF x.x' */
            zedsmsg = 'Browse used'
            zedlmsg = 'Browse substituted for View for pre-ISPF v4'
            'SETMSG MSG(ISRZ001)'
            option = 'BROWSE'
            end
         end
    otherwise
        zedsmsg = 'Invalid option'
        zedlmsg = 'Must be BR, BROWSE, ED, EDIT or VIEW'
        'SETMSG MSG(ISRZ001)'
        exit
        end

/*
 × Get the current number of lines that have been cut and exit if it
 × is empty
 */

'VGET (CUTCNT) PROFILE'

if cutcnt == 0 then do
   zedsmsg = ''
   zedlmsg = 'The ISRCUT/ISRPASTE Clipbord is empty'
   'SETMSG MSG(ISRZ001)'
   exit
   end

/*
 × Create a new dataset that the user can edit
 */

address TSO
'newstack'
address ISPEXEC

lrecl = 0
do i = 1 to cutcnt
   'VGET (CL'i')'
   interpret 't = CL'i
   if t == '' then t = ' '  /* Null lines means end-of-file */
   queue t
   lrecl = max(lrecl,length(t))
   end

address TSO

clipbrd_dsn = "'"i_dsn"'"

x = outtrap("XMSG.","*")
'DELETE 'clipbrd_dsn
x = outtrap("off")

clipbrd_dd = 'clpb'random()
'ALLOCATE FILE('clipbrd_dd') DA('clipbrd_dsn')',
         'UNIT('i_unitname') NEW REUSE SPACE(30 30) TRACKS',
         'LRECL('lrecl') BLKSIZE(32760) RECFM(V B)'


queue ''      /* add null line to indicate End-Of-File */
'EXECIO * DISKW 'clipbrd_dd' (FINIS'
'DELSTACK'

/*
 × Let the user perform an edit on the "clip board"
 */

address ISPEXEC
'CONTROL ERRORS RETURN'
option ' DATASET('clipbrd_dsn')' /* Browse, Edit or View */
erc = rc
'CONTROL ERRORS CANCEL'

/*
 × If the user modified the contents of the clip board, let him
 × decide whether to save the modified clip board
 */

if option <> 'EDIT' then signal theend

if erc == 0 then do
   'ADDPOP'
   'DISPLAY PANEL(CLIPBRDE)'
   orc = rc
   'REMPOP'
   if orc <> 0 then do
      zedsmsg = 'Cancelled'
      zedlmsg = 'Did not replace the clip board as requested'
      'SETMSG MSG(ISRZ001)'
      end
   else do
        address TSO
        "EXECIO * DISKR "clipbrd_dd" (FINIS STEM mclip."
        address ISPEXEC
        do i = 1 to mclip.0
           interpret 'CL'i '= mclip.'i
           'VPUT (CL'i') PROFILE'
           end

        if mclip.0 > cutcnt then ,
           do i = (mclip.0 + 1)  to cutcnt
              'VERASE (CL'i') PROFILE'
              end

        cutcnt = mclip.0
        'VPUT (CUTCNT) PROFILE' /* Save new count of cut lines */

        end
   end

/*
 × Delete the temporary clip board viewing dataset
 */

theend:
address TSO
x = outtrap("XMSG.","*")
'DELETE 'clipbrd_dsn
'FREE FILE('clipbrd_dd')'
x = outtrap("off")

exit 0

/* × ---------EEEEEEEE---------NN-----NN---------DDDDDDD--------- ×
   × ---------EE---------------NNNN---NN---------DD----DD-------- ×
   × ---------EEEEE------------NN-NN--NN---------DD----DD-------- ×
   × ---------EE---------------NN---NNNN---------DD----DD-------- ×
   × ---------EEEEEEEE---------NN----NNN---------DDDDDDD--------- × */
./ ADD NAME=CLIPBRDE 1100-98162-98162-1817-00020-00020-00000-DALCOCK
)attr default(%+_)
 /********************************************************************/
 /* Name: CLIPBRDE                                                   */
 /* Author: David Alcock                                             */
 /* Application: ClipBoard/PasteIt!                                  */
 /* Purpose: Startup display                                         */
 /********************************************************************/
 ` type(text) intens(high) color(yellow)
 ~ type(text) intens(low)  color(turq)
 # type(text) intens(low)  color(green)
)body window(65,6)

~You have changed the contents of the#Clip Board~while you were
~editing it.  You have the choice to save the changes you made.

_Z~Hit`ENTER~to replace the#Clip Board~or`END~to cancel.
)init
  .ZVARS = '(CURSOR)'
)proc
)end
./ ADD NAME=CLIPBRDI 1100-98162-98162-1817-00022-00022-00000-DALCOCK
)attr default(%+_)
 /********************************************************************/
 /* Name: CLIPBRDI                                                   */
 /* Author: David Alcock                                             */
 /* Application: ClipBoard/PasteIt!                                  */
 /* Purpose: Startup display from the PASTEIT Rexx exec              */
 /********************************************************************/
 ` type(text) intens(high) color(yellow)
 ~ type(text) intens(low)  color(turq)
 # type(text) intens(low)  color(red)
)body window(65,7)

~A completely blank screen will appear that you can paste data
~into.  The data will be available via the IBM PASTE command.
#Please note that the screen width is one less than shown.

_Z~Hit`ENTER~to get the blank paste screen or`END~to cancel.

)init
  .ZVARS = '(CURSOR)'
)proc
)end
./ ADD NAME=CLIPBRD2 1100-98162-98162-1817-00036-00036-00000-DALCOCK
)attr
 /********************************************************************/
 /* Name: CLIPBRD2                                                   */
 /* Author: David Alcock                                             */
 /* Application: ClipBoard/PasteIt!                                  */
 /* Purpose: Put up a screen to get pasted data for model 2          */
 /********************************************************************/
 $ type(input) intens(high) color(white) just(asis) caps(off)
)body
$line1
$line2
$line3
$line4
$line5
$line6
$line7
$line8
$line9
$line10
$line11
$line12
$line13
$line14
$line15
$line16
$line17
$line18
$line19
$line20
$line21
$line22
$line23
$line24
)init
)proc
)end
./ ADD NAME=CLIPBRD3 1100-98162-98162-1817-00044-00044-00000-DALCOCK
)attr
 /********************************************************************/
 /* Name: CLIPBRD3                                                   */
 /* Author: David Alcock                                             */
 /* Application: ClipBoard/PasteIt!                                  */
 /* Purpose: Put up a screen to get pasted data for model 3          */
 /********************************************************************/
 $ type(input) intens(high) color(white) just(asis) caps(off)
)body
$line1
$line2
$line3
$line4
$line5
$line6
$line7
$line8
$line9
$line10
$line11
$line12
$line13
$line14
$line15
$line16
$line17
$line18
$line19
$line20
$line21
$line22
$line23
$line24
$line25
$line26
$line27
$line28
$line29
$line30
$line31
$line32
)init
)proc
)end
./ ADD NAME=CLIPBRD4 1100-98162-98162-1817-00056-00056-00000-DALCOCK
)attr
 /********************************************************************/
 /* Name: CLIPBRD4                                                   */
 /* Author: David Alcock                                             */
 /* Application: ClipBoard/PasteIt!                                  */
 /* Purpose: Put up a screen to get pasted data for model 4          */
 /********************************************************************/
 $ type(input) intens(high) color(white) just(asis) caps(off)
)body
$line1
$line2
$line3
$line4
$line5
$line6
$line7
$line8
$line9
$line10
$line11
$line12
$line13
$line14
$line15
$line16
$line17
$line18
$line19
$line20
$line21
$line22
$line23
$line24
$line25
$line26
$line27
$line28
$line29
$line30
$line31
$line32
$line32
$line33
$line34
$line35
$line36
$line37
$line38
$line39
$line40
$line41
$line42
$line43
)init
)proc
)end
./ ADD NAME=CLIPBRD5 1100-98162-98162-1817-00039-00039-00000-DALCOCK
)attr
 /********************************************************************/
 /* Name: CLIPBRD5                                                   */
 /* Author: David Alcock                                             */
 /* Application: ClipBoard/PasteIt!                                  */
 /* Purpose: Put up a screen to get pasted data for model 5 terms    */
 /********************************************************************/
 $ type(input) intens(high) color(white) just(asis) caps(off)
)body
$line1
$line2
$line3
$line4
$line5
$line6
$line7
$line8
$line9
$line10
$line11
$line12
$line13
$line14
$line15
$line16
$line17
$line18
$line19
$line20
$line21
$line22
$line23
$line24
$line25
$line26
$line27
)init
)proc
)end
./ ADD NAME=PASTEIT  1100-98162-98162-1817-00204-00204-00000-DALCOCK
/* REXX
 ×
 × Name: PASTEIT
 ×
 × Application: ClipBoard/PasteIt!
 ×
 × Author: David Alcock
 ×         dalcock@csw.com
 ×         davea@ticnet.com
 ×
 × Purpose: Provide a Paste area for those times the area on the screen
 ×          is just a tad too small for text to get pasted into.
 ×
 ×          You could use this with your 3270 terminal emulator and
 ×          your dumb terminal (with multi-session manager that provides
 ×          a CUT and PASTE function).
 ×
 × Requirements: This exec uses the specs from the IBM-supplied
 ×               ISRCUT and ISRPASTE edit macros that are shipped
 ×               with ISPF.  On my OS/390 1.2 system, these edit macros
 ×               are found in DSN=ISP.SISPSAMP.  At many shops, this
 ×               dataset is renamed to SYS1.ISP.SISPSAMP.
 ×
 ×               Typically, your systems programmer will copy the
 ×               ISRCUT and ISRPASTE members from the sample library
 ×               and put them into your installation's //SYSPROC or
 ×               //SYSEXEC concatenation as names "CUT" and "PASTE".
 ×
 × Terms: Only on IBM mainframes is the "COPY" function termed "CUT"
 ×        (in my experience).
 ×
 × Multi-Session-Managers:
 × - CA-TPX (formerly from Legent): has CUT and PASTE functions
 ×   available for dumb terminals.
 × - Candle?
 × - NetMaster?
 ×
 × Obsolete: IBM is planning very big enhancements in ISPF clipboards
 ×           as heard at the February 1998 SHARE.  This EXEC will
 ×           probably continue to work but the new clipboard sounds very
 ×           nice.
 ×
 */
/* ================================================================= *
 ×
 ×           M o d i f i c a t i o n   H i s t o r y
 ×
 × Person     Date        Description
 × ---------- ----------- --------------------------------------------
 × DGAlcock   11-JUN-1998 v1.1:
 ×                        - This exec was renamed from CLIPBRD to
 ×                          PASTEIT to better reflect what it does;
 ×                        - Don't include blank lines from the paste
 ×                          screen (from the bottom up);
 ×                        - Be a better ISPF application and use ISPF
 ×                          messages instead of REXX says;
 ×                        - Misc code cleanup and better comments;
 ×
 × DGAlcock   20-MAY-1997 V1.0:
 ×                        - Initial application created; This was a
 ×                          quick and dirty, fast implementation and not
 ×                          very elegant - but it works.
 ×
 * ================================================================= */

address ISPEXEC

/*
 × Display the popup screen informing the user what to do when the
 × blank screen appears. Allow him to exit application if he doesn't
 × want to do it now.
 */

'ADDPOP'
'DISPLAY PANEL(CLIPBRDI)'
orc = rc
'REMPOP'
if orc <> 0 then do
   zedsmsg = 'Cancelled'
   zedlmsg = 'Cancelling PasteIt! application as requested'
   'SETMSG MSG(ISRZ001)'
   exit
   end

/*
 × Hurray! He wants to go thru with it.  Figure out the max number of
 × lines the terminal allows and set our panel to match it.
 */

'vget (ZSCRMAXD)'
select
  when zscrmaxd == '0027' then do
       panelid = 'CLIPBRD5'
       new_cutcnt = 27
       end
  when zscrmaxd == '0032' then do
       panelid = 'CLIPBRD3'
       new_cutcnt = 32
       end
  when zscrmaxd == '0043' then do
       panelid = 'CLIPBRD4'
       new_cutcnt = 43
       end
  otherwise
       panelid = 'CLIPBRD2'
       new_cutcnt = 24
       end

line1  = ''; line2  = ''; line3  = ''; line4  = ''; line5  = ''
line6  = ''; line7  = ''; line8  = ''; line9  = ''; line10 = ''
line11 = ''; line12 = ''; line13 = ''; line14 = ''; line15 = ''
line16 = ''; line17 = ''; line18 = ''; line19 = ''; line20 = ''
line21 = ''; line22 = ''; line23 = ''; line24 = ''; line25 = ''
line26 = ''; line27 = ''; line28 = ''; line29 = ''; line30 = ''
line31 = ''; line32 = ''; line33 = ''; line34 = ''; line35 = ''
line36 = ''; line37 = ''; line38 = ''; line39 = ''; line40 = ''
line41 = ''; line42 = ''; line43 = ''

/*
 × Display the blank 'paste area' screen
 */

'DISPLAY PANEL ('panelid')'
drc = rc
if drc <> 0 then do
   zedsmsg = 'Cancelled'
   zedlmsg = 'Cancelling save of paste area as requested'
   'SETMSG MSG(ISRZ001)'
   exit
   end

/* Save our new cut lines */
CL1  = line1;  cl2 =  line2 ;  cl3  = line3 ;  cl4 = line4;
CL5  = line5;  cl6 =  line6 ;  cl7  = line7 ;  cl8 = line8;
CL9  = line9;  cl10 = line10
CL11 = line11; cl12 = line12 ; cl13 = line13 ; cl14 = line14;
CL15 = line15; cl16 = line16 ; cl17 = line17 ; cl18 = line18;
CL19 = line19; cl20 = line20
CL21 = line21; cl22 = line22 ; cl23 = line23 ; cl24 = line24;
CL25 = line25; cl26 = line26 ; cl27 = line27 ; cl28 = line28;
CL29 = line29; cl30 = line30
CL31 = line31; cl32 = line32 ; cl33 = line33 ; cl34 = line34;
CL35 = line35; cl36 = line36 ; cl37 = line37 ; cl38 = line38;
CL39 = line39; cl40 = line40
CL41 = line41; cl42 = line42 ; cl43 = line43

/*
 × Before we continue, let's get the previous number of cut lines.
 × We may need to delete old vars out of the profile later
 */

'VGET (CUTCNT) PROFILE'
old_cutcnt = cutcnt

/*
 × Eliminate blank lines from our paste screen (from the bottom up)
 */

do i = new_cutcnt to 1 by -1
   interpret 't = CL'i
   if strip(t) <> '' then leave
   new_cutcnt = new_cutcnt - 1
   end

/*
 × Update the count of cut lines in the user's ISPF profile
 */

cutcnt = new_cutcnt  /* Set new profile value */
'VPUT (CUTCNT) PROFILE' /* Save new count of cut lines in profile */

/*
 × Did we end up with any lines
 */

if new_cutcnt == 0 then do
   zedsmsg = ''
   zedlmsg = 'The paste area was completely blank, terminating'
   'SETMSG MSG(ISRZ001)'
   exit
   end

/*
 × Insert cut lines into the ISPF profile
 */

do i = 1 to cutcnt
   'VPUT (CL'i') PROFILE'
   end

zedsmsg = ''
zedlmsg = 'You are now ready to use the PASTE EDIT macro'
'SETMSG MSG(ISRZ001)'

/*
 × If the previous cut lines are more than our paste area, delete
 × them from the users profile: Don't leave junk in the profile.
 */

if old_cutcnt > new_cutcnt then ,
   do i = (new_cutcnt + 1)  to old_cutcnt
      'VERASE (CL'i') PROFILE'
      end
exit
./ ENDUP       "REVIEW" PDS MEMBER OFFLOAD AT 14:09 ON 99/03/01
