./ ADD NAME=$$README 1000-97140-97140-1745-00011-00011-00000-DALCOCK
"Spell Check" ISPF application v1.0

Requirements: SAS

To install:

1) Copy member SPELLCHK into your //SYSPROC or //SYSEXEC concatenation

2) Copy the other SPELLCKS members into your //ISPPLIB concatenation

Invoke in ISPF edit as primary command SPELLCHK
./ ADD NAME=SPELLCHK 1000-97140-97140-1745-00332-00332-00000-DALCOCK
/* REXX
 ×
 × Name: SpellChk - ISPF Edit Macro
 ×
 × Author: David Alcock
 ×         dalcock@csw.com
 ×         davea@ticnet.com
 ×
 × Purpose: Perform a Spell Check on the current dataset or selected
 ×          lines using SAS. It puts the unrecognized and suggested
 ×          words (if any) into the edit dataset as NOTE lines.
 ×
 × Needs: ISPF panel "SPELLCKS"
 ×
 */

seqid = random()
address ISREDIT
'MACRO (PARM1) NOPROCESS'
parm1 = translate(parm1)
if parm1 = '?' then do
   msg1 = "The SPELLCHK edit macro can be use to perform a spell check"
   msg2 = "on all or part of the dataset being edited (via S/SS on the"
   msg3 = "line).  Saving the file first is suggested"
   address ISPEXEC
   "ADDPOP"
   "DISPLAY PANEL(SPELLCKS)"
   "REMPOP"
   exit
   end

/*********************************************************************
* Process line commands, check if S or SS was specified
*********************************************************************/

'PROCESS RANGE S'
select
  when rc = 0 then do
       '(CMD) = RANGE_CMD'          /* Get the command    */
       '(LINE1) = LINENUM .ZFRANGE' /* Get first in range */
       '(LINE2) = LINENUM .ZLRANGE' /* Get last in range  */
       typesel = "slines"
       msg2 = time() "Processing lines "line1" through "line2
       end
  when rc <= 4 then do /* No S or SS entered, use entire file     */
       '(CMD) = RANGE_CMD'          /* Get the command    */
       '(LINE1) = LINENUM .ZFIRST'  /* Get first in range */
       '(LINE2) = LINENUM .ZLAST'   /* Get last in range  */
       typesel = "file"
       msg2 = time() "Processing the whole file"
       end
  otherwise  /* Line command conflict - Edit will create message  */
       exit 12
end /* of "select" */

msg1 = time() "Spelling checking started"
msg3 = " "
address ISPEXEC
"CONTROL DISPLAY LOCK"
"ADDPOP"
"DISPLAY PANEL(SPELLCKS)"
"REMPOP"

/*********************************************************************
* Copy the lines selected to a temporary dataset
*
* We use the maximum lrecl of ISPF edit of 255, we might need a larger
* output space parameter by multiplying the number of lines selected
* by the input record size and using a block allocation.
*********************************************************************/

if typesel == "slines" then do
   spellin_dsn = "spftemp1.spellchk.#"seqid"i"
   address TSO
   x = outtrap("XMSG.","*")
   "DELETE "spellin_dsn
   x = outtrap("off")
   "ALLOCATE FILE(spellin) DA("spellin_dsn")",
   "UNIT(SYSDA) NEW REUSE SPACE(15 15) TRACKS",
   "LRECL(255) BLKSIZE(2550) RECFM(F B)"
   newstack

   address ISREDIT
   do i = line2 to line1 by -1
      '(LINEVAL) = LINE' i
      push lineval
      end
   queue '' /* indicate end of file */
   address TSO "EXECIO * DISKW spellin (FINIS"
   address TSO "delstack"

   /* Note: the LMINIT/BROWSE/LMFREE here is just for debugging */
   /*       to see which lines were selected         */
   /*      address ISPEXEC                           */
   /*      'LMINIT DATAID(BROWSE) DDNAME(SPELLIN)'   */
   /*      'BROWSE DATAID('BROWSE')'                 */
   /*      'LMFREE DATAID('BROWSE')'                 */

   end
else do /* We are doing the whole thing */
     address ISREDIT
     "(TDSN) = DATASET"
     "(TMEM) = MEMBER"
     if member <> '' then spellin_dsn = tdsn××"("××tmem××")"
     else spellin_dsn = tdsn
     address TSO "ALLOC F(SPELLIN) DA('"spellin_dsn"') SHR REUSE"
     end

/*********************************************************************
* Create the output and log datasets
*********************************************************************/

msg3 = time() "Creating temporary I/O datasets"
address ISPEXEC
"CONTROL DISPLAY LOCK"
"ADDPOP"
"DISPLAY PANEL(SPELLCKS)"
"REMPOP"

spellout_dsn = "spftemp1.spellchk.#"seqid"o"
address TSO
x = outtrap("XMSG.","*")
"DELETE "spellout_dsn
x = outtrap("off")
"ALLOCATE FILE(SPELLOUT) DA("spellout_dsn")",
"         UNIT(SYSDA) NEW REUSE SPACE(5 5) TRACKS",
"         LRECL(255) BLKSIZE(2550) RECFM(F B)"

spelllog_dsn = "spftemp1.spellchk.#"seqid"l"
x = outtrap("XMSG.","*")
"DELETE "spelllog_dsn
x = outtrap("off")
"ALLOCATE FILE(SPELLlog) DA("spelllog_dsn")",
"         UNIT(SYSDA) NEW REUSE SPACE(5 5) TRACKS",
"         LRECL(255) BLKSIZE(2550) RECFM(F B)"

/*********************************************************************
* Create the SAS program datasets.  We create them instream to allow
* (future) selection of user-defined SAS word files and to keep this
* program self-contained.   The member name is randomly generated to
* reduce the potential of a duplicated member with base SAS.
*********************************************************************/

msg1 = msg2
msg2 = msg3
msg3 = time() "Creating SAS program files"
address ISPEXEC
"CONTROL DISPLAY LOCK"
"ADDPOP"
"DISPLAY PANEL(SPELLCKS)"
"REMPOP"

spellsas1_dsn = "spftemp1.spellchk.#"seqid"s1"
spellsas2_dsn = "spftemp1.spellchk.#"seqid"s2"

address TSO
x = outtrap("XMSG.","*")
"DELETE "spellsas2_dsn
x = outtrap("off")
"ALLOCATE FILE(SPEL"seqid"2) DA("spellsas2_dsn"(spel"seqid"))",
"         UNIT(SYSDA) NEW REUSE SPACE(1 1) TRACKS DIR(1)",
"         LRECL(80) BLKSIZE(8800) RECFM(F B)"

x = outtrap("XMSG.","*")
"DELETE "spellsas1_dsn
x = outtrap("off")
"ALLOCATE FILE(SPEL"seqid"1) DA("spellsas1_dsn")",
"         UNIT(SYSDA) NEW REUSE SPACE(1 1) TRACKS",
"         LRECL(80) BLKSIZE(8800) RECFM(F B)"

newstack
push "%include sasautos(spel"seqid"); "
push "options nosource nosource2 ;"
queue '' /* indicate end of file */
address TSO "EXECIO * DISKW SPEL"seqid"1 (FINIS"
address TSO "delstack"

newstack
push "        RUN ;"
push "                          SASHELP.BASE.CNTRIES) ;"
push "                          SASHELP.BASE.CITIES"
push "                          SASHELP.BASE.STATES"
push "              DICTIONARY=(SASHELP.BASE.NAMES"
push " PROC   SPELL IN=SPELLIN  VERIFY SUGGEST"
queue '' /* indicate end of file */
address TSO "EXECIO * DISKW SPEL"seqid"2 (FINIS"
address TSO "delstack"

/*********************************************************************
* Invoke SAS to perform the Spell check
*********************************************************************/

msg1 = msg2
msg2 = msg3
msg3 = time() "Invoking SAS to perform Spell check"
address ISPEXEC
"CONTROL DISPLAY LOCK"
"ADDPOP"
"DISPLAY PANEL(SPELLCKS)"
"REMPOP"

address TSO
"%SAS INPUT('"spellsas1_dsn"')" ,
"     SASAUTOS('"spellsas2_dsn"')" ,
"     OPTIONS ('NOSOURCE NOSOURCE2 PRINT=SPELLOUT LOG=SPELLLOG')"
sasrc = rc

if sasrc <> 0 then do
   address ISPEXEC
   zedsmsg = ""
   zedlmsg = "SAS Spell Check RC="sasrc ,
             "review this log and hit PF3"
   'SETMSG MSG(ISRZ001)'
   'LMINIT DATAID(BROWSE) DDNAME(SPELLLOG)'
   'BROWSE DATAID('BROWSE')'
   'LMFREE DATAID('BROWSE')'
   msg2 = msg3
   msg3 = time() "SAS Spell check RC="sasrc
   signal cleanup
   end

msg1 = msg2
msg2 = msg3
msg3 = time() "SAS Spell check RC="sasrc" processing output"
address ISPEXEC
"CONTROL DISPLAY LOCK"
"ADDPOP"
"DISPLAY PANEL(SPELLCKS)"
"REMPOP"

/*********************************************************************
* Process the SAS output from the Spell check and save words & sug.
*********************************************************************/

address TSO
spellco_dd = "SPELC"seqid
"ALLOCATE FILE("spellco_dd") " ,
"         DA("spellout_dsn") SHR REUSE"
"EXECIO * DISKR "spellco_dd" (FINIS STEM spellco."
"FREE FILE("spellco_dd")"

w = 0                              /* Current word number */
right_part = 0                     /* In the right part?  */

do i = 1 to spellco.0
   if right_part then do
      if word(spellco.i,1) == "The" then do /* heading line */
         right_part = 0
         iterate
         end
      if substr(spellco.i,4,1) <> " " then do
         parse value spellco.i with mword freq lines
         w = w + 1
         wordline.w = translate(lines," ",",")
         wordline.w = translate(wordline.w," ","(")
         wordline.w = translate(wordline.w," ",")")
         wordval.w  = strip(mword)
         wordsug.w = ""
         iterate
         end
      if word(spellco.i,1) == "Suggestions:" then do
         wordsug.w = strip(spellco.i)
         iterate
         end
      if substr(spellco.i,23,1) <> " " then do
         wordsug.w = wordsug.w ×× strip(spellco.i)
         iterate
         end
      contlines = substr(spellco.i,45,1)
      if contlines <> " " then do
         if datatype(contlines,'N') then do /* looks like a number? */
            wordline.w = wordline.w ×× strip(spellco.i)
            wordline.w = translate(wordline.w," ",",")
            wordline.w = translate(wordline.w," ","(")
            wordline.w = translate(wordline.w," ",")")
            wordval.w  = strip(mword)
            end
         end
      end
   else do
        if word(spellco.i,1) == "Unrecognized" then right_part = 1
        end

   end /* of "do i = 1 to spellco.0" */

/*********************************************************************
* Insert the words and suggestions into the EDIT session as note lines
*********************************************************************/

address ISPEXEC
do i = 1 to w
   do j = 1 to words(wordline.i)
      k = line1 + word(wordline.i,j) - 1
      /* Could try to intelligently split the suggestions here */
      if wordsug.i <> "" then do
         text = left(wordsug.i,65)
         "ISREDIT LINE_AFTER "k" = NOTELINE '"text"'"
         end
      text = "Unrecognized word: "wordval.i
      "ISREDIT LINE_AFTER "k" = NOTELINE '"text"'"
      end
   end

/*********************************************************************
* Clean up and leave
*********************************************************************/

cleanup:
msg1 = msg2
msg2 = msg3
msg3 = time() "Cleaning up work datasets"
address ISPEXEC
"CONTROL DISPLAY LOCK"
"ADDPOP"
"DISPLAY PANEL(SPELLCKS)"
"REMPOP"

x = outtrap("XMSG.","*")
address TSO
if typesel == "slines" then "DELETE "spellin_dsn
else "FREE FILE(SPELLIN)"
"DELETE "spellout_dsn
"DELETE "spelllog_dsn
"DELETE "spellsas1_dsn
"DELETE "spellsas2_dsn
x = outtrap("off")

if sasrc == 0 then do
   zedsmsg = w "found"
   zedlmsg = "There were "w" words that were unrecognized"
   address ISPEXEC "SETMSG MSG(ISRZ001)"
   end

exit
./ ADD NAME=SPELLCKS 1000-97140-97140-1745-00021-00021-00000-DALCOCK
)attr default(%+_)
 /********************************************************************/
 /* Name: SPELLCKS                                                   */
 /* Author: David Alcock                                             */
 /* Application: SPELLCHK                                            */
 /* Purpose: status of spelling check                                */
 /********************************************************************/
 # type(text) intens(high) color(yellow)
 Ö type(text) intens(low)  color(green)
 ^ type(text) intens(low)  color(green) hilite(reverse)
 ` type(text) intens(high) color(yellow)
 ~ type(text) intens(low)  color(turq)
 { type(output) intens(high) color(yellow) caps(off)
 } type(output) intens(high) color(turq)   caps(off)
)body window(65,3) expand(!!)
+&MSG1
+&MSG2
+&MSG3
)init
)proc
)end
./ ENDUP       "REVIEW" PDS MEMBER OFFLOAD AT 14:40 ON 98/01/16
