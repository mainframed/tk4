++USERMOD(AJSW040)     /*
     SYSLOG EXTERNAL WTR EXECUTIVE TO STORE 14 DAYS OF SYSLOG
     DATASETS ON MSSLG1 AND COPY DAILY SYSLOG DATASETS TO MICROFICHE
                                                    */.
++VER(Z038) FMID(HJS2215).
++JCLIN.
//GEN11 JOB WC07Z0044,'531-0 C SINGER'
//SG21 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,AC=1',
//    UNIT='3350',SER=IPLXXX,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
  INCLUDE INCLUDE(JESLOGX)
 NAME JESLOGX(R)
++SRC(JESLOGX) DISTLIB(ASRCLIB) .
         TITLE 'JESLOGX  -  SYSLOG / EXTERNAL WRITER EXECUTIVE'
***********************************************************************
*                                                                     *
* MODULE NAME = JESLOGX                                               *
*                                                                     *
* FUNCTION = THIS MODULE HANDLES SYSLOG (SYSTEM HARDCOPY) CLOSE       *
*            COMMANDS,  EXTERNAL WRITER START COMMANDS, ALLOCATION    *
*            OF THE JESLOG DATASET, DEALLOCATION OF JESLOG DATA       *
*            SET FROM 14 DAYS PRIOR, AND COPIES THE JESLOG DATA       *
*            SET TO MICROFICHE AT END OF DAY.                         *
*                                                                     *
* NOTES = NONE                                                        *
*                                                                     *
* ATTRIBUTES = NONE                                                   *
*                                                                     *
* ENTRY POINT = JESLOGX                                               *
*                                                                     *
* LINKAGE = VIA PGM=JESLOGX,PARM='WAD'                                *
*             IF A PARM IS BLANK, THAT FUNCTION WILL NOT BE           *
*             EXECUTED; OTHERWISE:                                    *
*             W - SPACE PARMETER TO CLOSE DATA SET AND RLSE SPACE.    *
*                 R = RELEASE SPACE.                                  *
*             A - DATE USED FOR DSN FOR ALLOC/CATLG OF DATA SET.      *
*                 T = TODAY.                                          *
*                 Y = YESTERDAY.                                      *
*             D - DATE USED FOR EXTERNAL WRITER DATASET.              *
*                 T = TODAY.                                          *
*                 Y = YESTERDAY.                                      *
*                                                                     *
* REGISTER USAGE = R11 - BASE                                         *
*                                                                     *
* LAST                                                                *
* UPDATE  =                                                           *
*                                                                     *
* PROGRAM                                                             *
* HISTORY =                                                           *
*                                                                     *
* DATE    = SEE MODID MACRO IN HOUSEKEEPING SECTION.                  *
*                                                                     *
***********************************************************************
         EJECT
*---------------------------------------------------------------------*
*                      MVS HOUSEKEEPING                               *
*---------------------------------------------------------------------*
JESLOGX  CSECT
         STM   R14,R12,12(R13)    *SAVE REGS
         LR    R11,R15            *SET BASE REG
         USING JESLOGX,R11
         L     R4,0(R1)           *GET PLIST ADDR
         SPACE 2
         MODID
         ST    R13,JESLSAV+4      *SAVE HSA
         LA    R1,JESLSAV         *GET SAVE AREA...
         ST    R1,8(R13)           ...CHAINED
         LA    R13,JESLSAV        *R13 --> SAVE AREA
         SPACE 2
*---------------------------------------------------------------------*
*                       GET DAY OF YEAR                               *
*---------------------------------------------------------------------*
         TIME  DEC                *R1 - 00YYDDD+  R0 - HHMMSSTH
         ST    R1,YYDDD           *PREPARE FOR UNPACK
         UNPK  TODAY(3),YYDDD+2(2) *GET TODAYS DATE
         OI    TODAY+2,X'F0'      *MAKE IT READABLE
         SP    YYDDD+2(2),=P'1'   *GET YESTERDAYS DATE...
         UNPK  YSTRDAY(3),YYDDD+2(2) ...AND MOVE IT
         OI    YSTRDAY+2,X'F0'    *ENSURE ITS 'FX' NOT 'CX'
         EJECT
*---------------------------------------------------------------------*
*                     CHECK PARMS 'WAD'                               *
*---------------------------------------------------------------------*
         CLC   0(2,R4),=H'3'      *Q. ARE THERE 3 PARMS?
         BE    PARM100            *A. YES
JLX000   WTO  'IAT0007 JLX PARMS MISSING OR INVALID',ROUTCDE=11,       X
               MCSFLAG=HRDCPY
         B     ABEND              *EXIT
PARM100  DS    0H                 *CHECK 'W  '
         MVC   PARMS,2(R4)        *MOVE PARMS SO WE CAN USE R4
         SPACE
         CLI   W,X'40'            *Q. IS IT BLANK?
         BE    PARM200            *A. YES
         CLI   W,C'R'             *Q. IS RLSE REQUESTED
         BNE   JLX000             *A. NO, ERROR
         SPACE
PARM200  DS    0H                 *CHECK ' A '
         CLI   A,X'40'            *Q. IS IT BLANK?
         BE    PARM300            *A. YES
         CLI   A,C'T'             *Q. IS IT TODAY?
         BE    PARM300            *A. YES
         CLI   A,C'Y'             *Q. IS IT YESTERDAY?
         BNE   JLX000             *A. NO, BAD
         SPACE
PARM300  DS    0H                 *CHECK '  D'
         CLI   D,X'40'            *Q. IS IT BLANK?
         BE    ALOC100            *A. YES
         CLI   D,C'T'             *Q. IS IT TODAY?
         BE    ALOC100            *A. YES
         CLI   D,C'Y'             *Q. IS IT YESTERDAY?
         BNE   JLX000             *A. NO, BAD
         EJECT
*---------------------------------------------------------------------*
*                    PROCESS ALLOCATION REQUEST                       *
*---------------------------------------------------------------------*
ALOC100  DS    0H
         CLI   A,X'40'            *Q. IS ALLOCATION REQUESTED?
         BE    XWTR100            *A. NO
         LA    R1,TODAY           *ASSUME TODAY
         CLI   D,C'T'             *Q. USE TODAY'S DATE?
         BE    ALOC110            *A. YES
         LA    R1,YSTRDAY         *POINT TO DAY MINUS ONE
*---------------------------------------------------------------------*
*         DYNAMICALLY ALLOCATE DATASET FROM 14 DAYS PREVIOUS          *
*---------------------------------------------------------------------*
ALOC110  DS    0H
         CLI   A,X'40'            *WAS A DATASET ALLOCATED?
         BE    ALOC190            *NO,THEN DO NOT DEALLOCATE ONE
         CP    YYDDD+2(2),=PL2'14' *FAR ENOUGH INTO THIS YEAR?
         BH    ALOC120            *YES, THEN THE DATE IS OK
         AP    YYDDD,=P'365'      *ADD TO GET YEAR
ALOC120  DS    0H
         SP    YYDDD,=P'14'        *SUBTRACT TO GET DAY
         UNPK  ALOCDAY(3),YYDDD+2(2)
         OI    ALOCDAY+2,X'F0'    *MAKE NUMBER READABLE
         LA    R2,ALOCDSN         *GET DATASET NAME
         ICM   R2,8,ALOCDE        *GET LENGTH OF NAME
         MODESET KEY=ZERO,MODE=SUP *GET INTO SUPERVISOR STATE
         ALLOCATE TYPE=DSNALLOC,MF=S,                                  X
               DYNERR=(WTP,,ALOC140),FLAGS1=NOCNV,                     X
               FLAGS2A=(WTVOL,WTDSN,WTUNT,OFFLN,MOUNT),                X
               DDNAME='UJSLOG',DSNAME=2,SUFFIX=UJL,                    X
               DISP=('OLD','DELETE')
ALOC130  DS    0H
         MODESET KEY=NZERO,MODE=PROB *RESET TO PROB PGM KEY
JLX399   WTO  'IAT0107 JLX ERROR ALLOCATING DATASET TO BE DELETED',    X
               ROUTCDE=11,MCSFLAG=HRDCPY
         B     ALOC190            *CONT PROCESSING
         EJECT
*---------------------------------------------------------------------*
*           THIS DELETES DATASET FROM 14 DAYS PREVIOUS                *
*---------------------------------------------------------------------*
ALOC140  DS    0H
         MODESET KEY=ZERO,MODE=SUP *GET INTO SUPERVISOR STATE
         ALLOCATE TYPE=UNALLOC,MF=S,                                   X
               DYNERR=(WTP,,ALOC160),FLAGS1=NOCNV,                     X
               FLAGS2A=(WTVOL,WTDSN,WTUNT,OFFLN,MOUNT),                X
               DDNAME='UJSLOG',DSNAME=2
ALOC150  DS    0H
         MODESET KEY=NZERO,MODE=PROB *RESET TO PROB PGM KEY
JLX499   WTO  'IAT0207 JLX ERROR DELETING JESLOG DATASET',ROUTCDE=11,  X
               MCSFLAG=HRDCPY
         B     ABEND
ALOC160  DS    0H
         MODESET KEY=NZERO,MODE=PROB *RESET TO PROB PGM KEY
         EJECT
*---------------------------------------------------------------------*
*                  GET NEW DATA SET FOR TODAY                         *
*---------------------------------------------------------------------*
ALOC190  DS    0H
         LA    R1,TODAY           *ASSUME TODAY
         CLI   D,C'T'             *USE TODAY'S DATE?
         BE    ALOC195            *YES, BRANCH
         LA    R1,YSTRDAY         *POINT TO DAY MINUS ONE
ALOC195  DS    0H
         MVC   ALOCDAY(3),0(R1)   *MOVE IN DATE
         MVC   JLX201+45(3),0(R1) *MOVE DATE INTO MSG ALSO
         LA    R2,ALOCDSN         *POINT TO DSN
         ICM   R2,8,ALOCDE        *GET LENGTH OF DATA SET NAME
         MODESET KEY=ZERO,MODE=SUP *GET INTO SUPERVISOR STATE
         SPACE
         L     R3,PSAAOLD-PSA     *LOAD ASCB OLD POINTER
         MVC    ASCBSWTL-ASCB(4,R3),=XL4'00007080'  SET TIMER FOR 8 HRS
         SPACE
         EJECT
*---------------------------------------------------------------------*
*                        ALLOCATE MACRO                               *
*---------------------------------------------------------------------*
         ALLOCATE TYPE=DSNALLOC,MF=S,                                  X
               SUFFIX=JLX,DYNERR=(WTP,,ALOC300),FLAGS1=NOCNV,          X
               FLAGS2A=(WTVOL,WTDSN,WTUNT,OFFLN,MOUNT),                X
               DDNAME='JESLOG',                                        X
               DSNAME=2,          *DSN IN R2                           X
               DISP=('NEW','CATLG','DELETE'),                          X
               FREE=CLOSE,                                             X
               UNIT='3380',                                            X
               SPACE=(CYL,'50','10'),                                  X
               VOLSER='MSSLG1'
         EJECT
*---------------------------------------------------------------------*
*                          DYNALLOC ERROR                             *
*---------------------------------------------------------------------*
ALOC200  DS    0H
         MODESET KEY=NZERO,MODE=PROB *RESET TO PROB PGM KEY
JLX299   WTO  'IAT0307 JLX ERROR ALLOCATING JESLOG DATASET',ROUTCDE=11,X
               MCSFLAG=HRDCPY
         B     ABEND              *SINCE NO DYNALLOC, GO BYEBYE
         EJECT
*---------------------------------------------------------------------*
*                          DYNALLOC OK                                *
*---------------------------------------------------------------------*
ALOC300  DS    0H
         MODESET KEY=NZERO,MODE=PROB *RESET TO PROB PGM KEY
         OPEN  (JESLOG,(OUTPUT))  *OPEN IT
         PUT   JESLOG,JLXDUMMY    *PUT OUT ONE RECORD
         CLOSE (JESLOG)           *CLOSE, FREE, AND CATALOG IT
JLX201   WTO  'IAT0407 JLX JESLOG ALLOCATED FOR DAY=XXX',ROUTCDE=11,   X
               MCSFLAG=HRDCPY
         EJECT
*---------------------------------------------------------------------*
*                 PROCESS XWTRPROC START REQUEST                      *
*---------------------------------------------------------------------*
XWTR100  DS    0H
         CLI   D,X'40'            *Q. IS XWTRPROC REQUESTED?
         BE    EXIT100            *A. NO, JESLOG IS DONE.
         LA    R1,TODAY           *ASSUME TODAY
         CLI   D,C'T'             *USE TODAY'S DATE?
         BE    XWTR110            *YES, BRANCH
         LA    R1,YSTRDAY         *POINT TO DAY MINUS ONE
XWTR110  DS    0H
         MVC   JLX301+41(3),0(R1) *MOVE IN DATE
         MVI   JLX301+53,C'L'     *MOVE IN CLASS
         MVC   WTRDATE(3),0(R1)   *MOVE IN DATE
         MVI   WTRCLASS,C'L'      *MOVE IN CLASS
         CLI   W,X'40'            *WAS SPACE RELEASE REQUESTED?
         BNE   XWTR120            *YES
         MVC   WTRCLASS+1(33),=CL33' ' *BLANK OUT SPACE
         B     XWTR130            *ISSUE WTO
XWTR120  DS    0H
         MVC   WTRSPACE(29),=CL29''',SPACE=(CYL,(50,10),RLSE)'''
XWTR130  DS    0H
JLX301   WTO  'IAT0507 JLX START XWTRPROC - DAY=XXX - CLASS=X',        X
               ROUTCDE=11,MCSFLAG=HRDCPY
         MODESET KEY=ZERO,MODE=SUP *GET INTO SUPERVISOR STATE
         SR    R0,R0              *CLEAR
         LA    R1,STARTWTR        *POINT TO COMMAND
         SVC   34                 *ISSUE COMMAND
         MODESET KEY=NZERO,MODE=PROB *RESET TO PROB PGM KEY
         CLC   PARMS(3),=C'R Y'   *IS THIS CLOSE OF DAY?
         BC    EQ,XWTR140         *IF YES, GENER DATA TO MICROFICHE
         CLC   PARMS(3),=C'R T'   *IS THIS CLOSE OF DAY?
         BC    NE,EXIT100         *IF NOT, END
*---------------------------------------------------------------------*
*               GENER THE JESLOG DATASET TO MICROFICHE                *
*---------------------------------------------------------------------*
XWTR140  DS    0H
         OPEN  (IRDCB,(OUTPUT))   *OPEN INTRDR FILE
         L     R3,=A(INTJCL)      -> FIRST CARD IMAGE           $WC3JBD
         USING INTJCL,R3          -> FIRST CARD IMAGE           $WC3JBD
         MVC   GENERDAY(3),WTRDATE *MOVE DATE TO DS NAME IN SYSUT1
         MVC   RLSDAY1(3),WTRDATE *MOVE DATE TO DS NAME IN SYSUT1
         MVC   RLSDAY2(3),WTRDATE *MOVE DATE TO DS NAME IN SYSUT2
         LA    R2,CARD#           NUMBER OF CARD IMAGES         $WC3JBD
         USING INTJCL,R3          -> FIRST CARD IMAGE           $WC3JBD
XWTR140A DS    0H                                               $WC3JBD
         PUT   IRDCB,(R3)         CARD IMAGE TO INTRDR          $WC3JBD
         LA    R3,80(,R3)         -> NEXT CARDIMAGE             $WC3JBD
         BCT   R2,XWTR140A        LOOP BACK TILL DONE           $WC3JBD
         DROP  R3                                               $WC3JBD
         CLOSE (IRDCB)
         EJECT
*---------------------------------------------------------------------*
*                    EOJ, ISSUE MSG AND LEAVE                         *
*---------------------------------------------------------------------*
EXIT100  DS    0H
JLX900   WTO  'IAT0607 JESLOGX COMPLETE',ROUTCDE=11,MCSFLAG=HRDCPY
         L     R13,JESLSAV+4      *GET HSA
         RETURN (14,12),,RC=0
         SPACE 3
*---------------------------------------------------------------------*
*                  ABEND BECAUSE OF SEVERE ERROR(S)                   *
*---------------------------------------------------------------------*
ABEND    DS    0H
         ABEND 16,DUMP,STEP
         EJECT
*---------------------------------------------------------------------*
*                    CAMLIST FOR LOCATE                               *
*---------------------------------------------------------------------*
CAML     CAMLST NAME,LOCDSN,,LOCAREA
LOCDSN   DS    0CL40              *CAMLST DSN
         DC    C'MVS3.JESLOG.DAY' *FIRST PART OF DSN
LOCDAY   DC    C'XXX'             *DAY PART OF DSN
         DC    (40-*+LOCDSN)C' '  *BLANK OUT FOR 40 CHARS
LOCAREA  DS    0D
         DS    255C               *SPACE FOR LOCATE BLOCK
LOCDATE  DS    F                  *WORK FLD TO FIGURE LOC DAY TO USE
         EJECT
*---------------------------------------------------------------------*
*                       STORAGE AREAS                                 *
*---------------------------------------------------------------------*
JESLSAV  DS    18F                *SAVE AREA
         SPACE
YYDDD    DS    F                  *UNPACKED 00YYDDD+ FROM TIME MACRO
TODAY    DC    CL3' '             *TODAYS DAY OF YEAR
YSTRDAY  DC    CL3' '             *YESTERDAYS DAY OF YEAR
         SPACE
PARMS    DS    0CL3               *PARMS 'WAD'
W        DC    C' '               *W - SPACE RLSE
A        DC    C' '               *A - DATE PARAMETER
D        DC    C' '               *D - XWTRPROC DSN DAY
         SPACE
STARTWTR DC    H'85',H'0',CL19'START XWTRPROC,DAY=' *COMMAND TO...
WTRDATE  DC    CL3' '                   ... START EXTERNAL WRITER
         DC    CL9',TYPE=JES'
         DC    CL7',CLASS='
WTRCLASS DC    CL1' '
         DC    CL4',SP='
WTRSPACE DC    CL29' '            *SPACE PARAMETER
         DC    CL9'  JESLOGX'     *COMMAND ORIGIN
         SPACE
ALOCDSN  DC    C'MVS3.JESLOG.DAY' *DSN
ALOCDAY  DC    CL3' '             *DATE
ALOCDE   DC    AL1(*-ALOCDSN)     *LENGTH OF DATA SET NAME
JLXDUMMY DC    H'18',H'0',C' JESLOGX DUMMY' *DUMMY RECORD
         SPACE
WRITELOG DC    H'23',H'0',C'WRITELOG ' *COMMAND TO CLOSE SYSLOG
CLOSCLAS DC    C' '               *SYSLOG CLASS
         DC    C'  JESLOGX'       *COMMAND ORIGIN
         SPACE
*---------------------------------------------------------------------*
*        JCL TO GENER JESLOG DATASET TO MICROFICHE                    *
*---------------------------------------------------------------------*
INTJCL   CSECT ,                                                $WC3JBD
JOBREC   DC    CL80'//$JESDALY JOB WC07N0323,''W1-5311 R.C. CREWS'',MSGX
               CLASS=Q,USER=ACFDMP'
MAINREC  DC    CL80'//*MAIN    LINES=(500,W),CLASS=TP'
         DC    CL80'//TITLE   EXEC DXSETUP'                     $WC3JBD
         DC    CL80'//SYSIN    DD  *'                           $WC3JBD
         DC    CL80'CONTROL FNSH'                               $WC3JBD
         DC    CL80'TITLE W1-5432 COMPUTER OPERATIONS'          $WC3JBD
         DC    CL80'/*'                                         $WC3JBD
PROCREC  DC    CL80'//IEFPROC  EXEC PGM=IEBGENER'
PRNTDD   DC    CL80'//SYSPRINT DD  SYSOUT=*'
SYSUT2DD DC    CL80'//SYSUT2   DD  SYSOUT=M'
SYSUT1DD DS    0CL80
         DC    C'//SYSUT1   DD  DSN=MVS3.JESLOG.DAY'
GENERDAY DC    CL46'XXX,DISP=SHR'
SYSINDD  DC    CL80'//SYSIN    DD  DUMMY'
RLSSEPR  DC    CL80'//*'
RLSEXEC  DC    CL80'//IEFRLSE  EXEC PGM=IEBGENER'
RLSPRNT  DC    CL80'//SYSPRINT DD  SYSOUT=*'
RLSSUT1  DS    0CL80
         DC    C'//SYSUT1   DD  DUMMY,DCB=MVS3.JESLOG.DAY'
RLSDAY1  DC    CL40'XXX,DISP=SHR'
RLSSUT2  DS    0CL80
         DC    C'//SYSUT2   DD  DSN=MVS3.JESLOG.DAY'
RLSDAY2  DC    CL46'XXX,DISP=MOD,SPACE=(CYL,(50,10),RLSE)'
RLSSYIN  DC    CL80'//SYSIN    DD  DUMMY'
ENDFILE  DC    CL80'/* '
CARD#    EQU   (*-JOBREC)/80                                    $WC3JBD
JESLOGX  CSECT ,                                                $WC3JBD
*---------------------------------------------------------------------*
*        LITERALS                                                     *
*---------------------------------------------------------------------*
         LTORG
         SPACE
*---------------------------------------------------------------------*
*        DCB TO OPEN INTRDR FILE                                      *
*---------------------------------------------------------------------*
IRDCB    DCB   MACRF=(PM),DDNAME=IRDCB,LRECL=80,RECFM=FB,BUFNO=1,      X
               DSORG=PS,BLKSIZE=3200
         EJECT
*---------------------------------------------------------------------*
*              DCB TO OPEN/CLOSE JESLOG SO IT GETS CATALOGED          *
*---------------------------------------------------------------------*
         PRINT NOGEN
JESLOG   DCB   MACRF=(PM),DDNAME=JESLOG,LRECL=137,RECFM=VB,BUFNO=1,    X
               DSORG=PS,BLKSIZE=13030
         PRINT GEN
         EJECT
*---------------------------------------------------------------------*
*                           DSECTS                                    *
*---------------------------------------------------------------------*
         IHAASCB                  *DSECT FOR MAPPING OF ASCB
         EJECT
         IHAPSA                   *DSECT FOR MAPPING LOW CORE
         EJECT
         IATYEQU
         EJECT
         IATYREG
UMODNUM  DC    CL7'AJSW040'
         END
