++ USERMOD(AJSW021) /* NJE ACCOUNT MODIFICATIONS:

                  IATUX43  - 'OR' BIT TO INDICATE MORE NJE SECTIONS
                  IATOSNT  - CALLS GDACCTWR TO BUILD NJE SECTION
                  IATNTJS  - CALLS GDACCTRD WHEN USER SECTION FOUND
                  GDACCTRD - MOVE ACCT NUMBER TO SMF26JAF IN JMR
                  GDACCTWR - MOVE ACCT NUMBER TO USER DEFINED SECTION

   THIS MOD REQS ****** ACFW010 ****** THE NJE ACF2 MOD WHICH SETS THE
   NJE TRANSMISSION SEQUENCE FOR THE NJE SECTIONS.
   THIS MOD TO NJE PASSES THE ACCOUNTING INFORMATION IN A USER DEFINED
   SECTION.

                                                                 */ .
++ VER(Z038) FMID(HJS2215) REQ(ACFW010) /*                 */ .
++ JCLIN .
//GEN11 JOB WC07N0044,'531-0 C SINGER'
//SG21 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,RENT,REUS',
//    UNIT='3350',SER=IPLXXX,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
   INCLUDE INCLUDE(GDACCTRD)
   NAME GDACCTRD(R)
/*
//SG22 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,RENT,REUS',
//    UNIT='3350',SER=IPLXXX,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
  INCLUDE INCLUDE(GDACCTWR)
  NAME GDACCTWR(R)
/*
++ SRCUPD(IATOSNT) .
./ CHANGE NAME=IATOSNT
         IATXCUE EP=GDACCTWR,ALOAD=YES  *CALL GD PRG. WRITE OUT AJSW021
*                                  ACCT NMBR IN SEPARATE RECORD AJSW021
         ACLOSE FDB=WRXDSFDB       CLOSE OUTPUT FILE            AJSW021
*                                  DELETED BY 2.1.5 CONVERSION  AJSW021
*                                  DELETED BY 2.1.5 CONVERSION  AJSW021
UMODNUM  DC     CL7'AJSW021'
++ SRCUPD(IATNTJS) .
./ CHANGE NAME=IATNTJS
          CLI   9(R7),X'F0'       *GD'S HEADER?                 AJSW021
          BNE   NOTGD             *NO..CONTINUE ON              AJSW021
          IATXCUE EP=GDACCTRD,ALOAD=YES *CALL GD PRG. READ...   AJSW021
*                                 ..INCOMING HEADER & FIND ACCT AJSW021
NOTGD     DS    0H                                              AJSW021
UMODNUM   DC    CL7'AJSW021'
++ SRCUPD(IATUX43) .
./ CHANGE NAME=IATUX43
         USING NJHSTART,R1                                      AJSW021
         USING WRDATA,R13                                       AJSW021
*        LA    R15,4               SET FOR DUMMY USER EXIT      AJSW021
*        CLM   R0,8,=X'00'        *FIRST SEGMENT OF HEADER?     AJSW021
*        BNE   RETURN             *NO, BRANCH                   AJSW021
*        MVC   NJHGPRGN,WRPROGNM  *MOVE IN PROGRAMMER NAME FLD  AJSW021
RETURN   DS    0H                                               AJSW021
         OI    3(R1),X'80'        *SPECIFY MORE SECTIONS FOLLOW AJSW021
         SLR   R15,R15            *RETURN                       AJSW021
UMODNUM  DC    CL7'AJSW021'                                     AJSW021
++ SRC(GDACCTRD) DISTLIB(ASRCLIB) .
GDACCTRD TITLE '*** NJE ACCOUNT HEADER MODULE *** GDACCTRD'
GDACCTRD CSECT
GDACCTRD AMODE 31
GDACCTRD RMODE ANY
         IATYREG
         EJECT
         IATYEQU
         EJECT
         IATYFCT
         EJECT
         IATYNWR
         EJECT
         IATYJCT
         EJECT
         IATYRSQ
         EJECT
         IATYJMR
         EJECT
         IATYTVT
         EJECT
         IATYJDS
         EJECT
         IATYNDT
         EJECT
         IATYNJH
         EJECT
         IATYCNS TYPE=INPUT
         EJECT
         IECDIOSB IOSIOSBE=YES
         EJECT
         IHAPSA
         EJECT
GDACCTRD CSECT
         USING NJEDATA,R13         IATNTJS WORKSPACE ADDRBLTY
         USING *,R15               TEMP CSECT ADDRESSABILITY
         IATYMOD BR=YES
         LR    R10,R15             EP ADDRESS FOR USE AS BASE
         DROP  R15                 VOLATILE BASE REGISTER
         USING GDACCTRD,R10        PERM CSECT ADDRESSABILITY
         L     R7,DPRSSBFR         -> DECOMPRESSION WORK AREA
         CLC   GDRECORD,6(R7)      INTERESTED IN THIS RECORD?
         BNE   RETURN              NO, EXIT NOW
         USING GDWORK,R7           YES, MAP AREA
         L     R4,AOPJMR           -> SMF JMR
         USING JMR,R4              JMR ADDRESSABILITY
         LA    R3,DPRSSWRK         -> DECOMPRESSED RECORD
         USING NJHSTART,R3         HEADER ADDRESSABILITY
         MVC   SMF26DEV,NJHGORGN   MOVE ORIGIN NODE TO DEVICE
         MVC   SMF26NJI,NJHGORGR   MOVE SECONDARY ORGIN IN
         AH    R4,SMF26LN1         ALLOW FOR DESC SECTION
         AH    R4,SMF26LN2         ALLOW FOR EVENT SECTION
         MVC   SMF26JAF,ACCTDATA   MOVE ACCOUNTING DATA IN
         DROP  R3                  NJE HEADER ADDRBLTY
         DROP  R7                  GD ACCT HEADER ADDRBLTY
RETURN   DS    0H
         SLR   R15,R15             SET RETURN CODE REGISTER
         ARETURN                   RETURN TO IATNTJS
         LTORG
         EJECT
DDNAME   DC    16C' ',C'*NJEJBHD'
GDRECORD DC    X'F001',C'ACCT'     USER TYPE F0 MOD 1 AND 'ACCT'
         LTORG
GDWORK   DSECT
GDACCT   DS    0D
         GDACCT1 ,                 USER NJE ACCT MACRO
GDWORKLN EQU   *-GDWORK            LENGTH OF WORK AREA
GDACCTRD CSECT
UMODNUM  DC    CL7'AJSW021'
APARNUM  DC    CL7' '
PTFNUM   DC    CL7'SP215'
         END   GDACCTRD
++ SRC(GDACCTWR) DISTLIB(ASRCLIB) .
GDACCTWR TITLE '*** NJE ACCOUNT HEADER MODULE *** GDACCTWR'
GDACCTWR CSECT
GDACCTWR AMODE 31
GDACCTWR RMODE ANY
         SPACE 2
         IATYREG
         EJECT
         IATYEQU
         EJECT
         IATYFCT
         EJECT
         IATYNWR
         EJECT
         IATYJCT
         EJECT
         IATYRSQ
         EJECT
         IATYJMR
         EJECT
         IATYTVT
         EJECT
         IATYDAT                                                AJSF062
         EJECT
         IATYFDB                                                AJSF062
GDACCTWR CSECT
         USING *,R15
         IATYMOD BR=YES
         DROP  R15
         USING GDACCTWR,R10
         USING WRDATA,R13
         LR    R10,R15            *SET UP BASE ADDR
GETMAIN  DS    0H
         LA    R0,ACCTBLEN        *OUR SEG. SIZE
         AGETMAIN SIZE=(R0),                                           X
               LOC=(ANY,ANY)
WAIT     DS    0H
*        AWAIT TYPE=ON,ECFMASK=FCTAGET,
*              ECFADD=FCTFLAG1
*        B     GETMAIN
CONTINUE DS    0H
         LR    R9,R1              *SAVE ADDR
         USING GDDATA,R9          *MAKE ADDRESSABLE
         XC    0(ACCTBLEN,R9),0(R9) *CLEAR TO ZEROES
         LA    R0,ACCTBLEN        *LENGTH OF BUFFER
         STH   R0,ACCTBSIZ        *STORE IN BUFFER
*---------------------------------------------------------------------*
* CDSC MODIFICATIONS TO WDSC NJE ACCOUNTING ROUTINE START HERE        *
*---------------------------------------------------------------------*
******** MVI   ACCTBSIZ+3,X'02'   *TRANMISSION SEQ NUMBER       AJSF062
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*     CODE TO MAKE WDSCE HEADER MODE COMPATABLE WITH CESWAL NJE NODE. *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         LA    R0,2               SET DEFAULT XMISSION SEQ VAL  AJSF062
         BC    0,SKIP00           SWITCH FOR CHECKOUT           AJSF062
         L     R15,CMPFDB         GET CURRENT FDB POINTER       AJSF062
         USING FDBSTART,R15                                     AJSF062
         USING DATSTART,R5                                      AJSF062
         ICM   R14,15,FDBBPTR     GET CURRENT BUFF POINTER      AJSF062
         TM    FDBFLAG2,FDBLOCAT  HAS ALOCATE BEEN ISSUED       AJSF062
         BC    ALLOFF,SKIP00      BIN. IGNORE CHECK             AJSF062
         CLC   4(6,R14),CMPBLKHD  HAVE THE HEADER PREFIX        AJSF062
         BC    NE,SKIP00          BIN. IGNORE CHECK             AJSF062
         LR    R5,R14             CURRENT BUFFER POINTER TO R5  AJSF062
         TM    FDBFLAG1,FDBSPLIT  IS THE DATA SPLIT (2 BUFFERS) AJSF062
         BC    ALLON,SPLT00       BIY. CONTINUE                 AJSF062
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*   PATH IF 'ABLOCKED' DATA AND 'ALOCATE' AREA ARE IN SAME BUFFER.    *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         SH    R14,BUFSZ          CURRENT - BUFSIZE             AJSF062
         AH    R14,FDBRL          + ROOM LEFT = TOP OF BUFFER   AJSF062
         LA    R15,DATFSIZE       GET LENGTH OF PREFIX          AJSF062
         SR    R14,R15            POINT TO TOP OF DAT           AJSF062
         BC    15,SPLT05          CONTINUE                      AJSF062
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*   PATH IF 'ABLOCKED' DATA AND 'ALOCATE' AREA NOT IN SAME BUFFER.    *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
SPLT00   EQU   *                                                AJSF062
         LA    R14,DATCC-DATID(R0) LENGTH OF DAT PREFIX (FIXED) AJSF062
         SR    R5,R14             POINT TO TOP OF DAT           AJSF062
         L     R14,DATPREV        GET PREV BUFFER POINTER       AJSF062
         DROP  R5                                               AJSF062
         LTR   R14,R14            HAVE ONE                      AJSF062
         BC    ZERO,SKIP00        BIN. IGNORE CHECK             AJSF062
         USING DATSTART,R14                                     AJSF062
         SH    R14,BUFSZ          CURRENT - BUFSIZE             AJSF062
         AH    R14,FDBRL          + ROOM LEFT = TOP OF BUFFER   AJSF062
         DROP  R15                + ROOM LEFT = TOP OF BUFFER   AJSF062
         LA    R15,DATFSIZE       GET LENGTH OF PREFIX          AJSF062
         SR    R14,R15            POINT TO TOP OF DAT           AJSF062
         LA    R5,DATFSIZE(R5)    BUMP TO PAST PREFIX           AJSF062
         CLM   R5,15,DATNEXT      'NEXT' IN PREV = COMPUTED     AJSF062
         BC    NE,SKIP00          BIN. IGNORE CHECK             AJSF062
SPLT05   EQU   *                                                AJSF062
         CLC   0(4,R14),=C'DAT '  IS IT A DAT EYECATCHER        AJSF062
         BC    NE,SKIP00          BIN. IGNORE CHECK             AJSF062
         SLR   R15,R15            PREP WORK REG                 AJSF062
         SLR   R5,R5              PREP WORK REG                 AJSF062
LOOP00   EQU   *                                                AJSF062
         ICM   R15,7,DATCC+1      GET CC TO R15  (JES 1.3.4)    AJSF062
         LTR   R15,R15            HAVE ONE                      AJSF062
         BC    ZERO,SKIP00        BIN. IGNORE CHECK             AJSF062
         CLC   DATMRFDT(2),=X'1002' IS IT A XMISSION RECORD     AJSF062
         BC    NE,SKIP00          BIN. IGNORE CHECK             AJSF062
         CLI   DATMRFDT+6,X'C0'   IS IT A HEADER RECORD         AJSF062
         BC    NE,SKIP00          BIN. IGNORE CHECK             AJSF062
         TM    DATMRFDT+11,X'80'  ARE SEGMENTS TO FOLLOW        AJSF062
         BC    ALLOFF,SKIP00      BIN. IGNORE CHECK             AJSF062
         LA    R0,1(R5)           SET NEXT SEQ NO.              AJSF062
         IC    R5,DATMRFDT+11     GET XMISSION SEQ NO.          AJSF062
         N     R5,=X'0000007F'    RESET FLAG BIT                AJSF062
         LA    R5,1(R5)           BUMP FOR NEXT SEQ             AJSF062
         CR    R0,R5              CORRECT SEQ                   AJSF062
         BC    NE,SKIP00          BIN. IGNORE CHECK             AJSF062
         AR    R14,R15            BUMP TO NEXT RECORD IN BUFF   AJSF062
         DROP  R14                                              AJSF062
         BC    15,LOOP00          LOOP THRU                     AJSF062
SKIP00   EQU   *                                                AJSF062
         STC   R0,ACCTBSIZ+3      * XMISSION SEQ NO.            AJSF062
*---------------------------------------------------------------------*
* CDSC MODIFICATIONS TO WDSC NJE ACCOUNTING ROUTINE END HERE          *
*---------------------------------------------------------------------*
         LA    R0,ACCTBLEN-4      *LENGTH OF RECORD
         STH   R0,ACCTRSIZ        *SAVE IN RECORD
         MVI   ACCTUTYP,X'F0'     *OUR SEG. TYPE
         MVI   ACCTUTYP+1,X'01'   *OUR MOD. TYPE
         MVC   GDACCTID,=CL4'ACCT' *EYE-CATCHER
         MVC   GDCENTER(8),HOMENODE *HOME (LOCAL) NODE
         L     R5,FCTRQAD         *GET RSQ ADDR
         USING RQSTART,R5
         JESREAD FDB=RQJMRFDB,    *GET JMR                             X
               ID=JMR
         L     R6,RQJMRFDB
         USING JMR,R6
         LA    R6,SMF26LN1
         USING SMF26LN1,R6
         AH    R6,SMF26LN1        *PAST DESC SECTION
         USING SMF26LN2,R6
         AH    R6,SMF26LN2        *PAST EVENTS SECTION
         USING SMF26LN3,R6        *WE WANT ACTUAL SECTION
         MVC   ACCTDATA,SMF26JAF  *GET ACCOUNTING DATA
         ARELEASE FDB=RQJMRFDB    *RELEASE JMR
         DROP  R6,R5
         SPACE 1
*-----            WE MUST NOW COMPRESS THE DATA                  -----*
*----- ONLY CHANGE PARMS WHICH CHANGED FROM IATOSNT'S COMPRESS   -----*
         SPACE 1
         ST    R9,CMPFIRST        *PTR TO FIRST CHAR TO BE COMPRESSED
         LA    R0,ACCTBLEN        *OUR SEG. LENGTH
         AR    R0,R9
         BCTR  R0,0               *PTR TO LAST CHAR TO BE COMPRESSED
         ST    R0,CMPLAST
         LA    R1,CMPRSPRM        *COMPRESSION PARMS NEEDED FOR CALL
         L     R15,WRCMPRSA       *ADDRESS OF COMPRESSION ROUTINE
         BALR  R14,R15            *GO DO IT
         LA    R0,ACCTBLEN        *LENGTH OF WORK AREA
         LR    R1,R9              *ADDRESS OF WORK AREA
         APUTMAIN SIZE=(0),AREA=(R1) *FREE WORK AREA
         SLR   R15,R15
         ARETURN                  *RETURN TO IATOSNT
         LTORG
         EJECT
GDDATA   DSECT
         GDACCT1 ,                *USER NJE ACCOUNT MACRO
GDACCTWR CSECT
UMODNUM  DC    CL7'AJSW021'
APARNUM  DC    CL5' '
PTFNUM   DC    CL5'SP215'
         END   GDACCTWR
++ MAC(GDACCT1)  DISTLIB(AJES3MAC) SYSLIB(JES3MAC) .
         MACRO ,                                                AJSW021
         GDACCT1 ,                                              AJSW021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * AJSW021
*                                                             * AJSW021
*    GD NJE HEADER RECORD                                     * AJSW021
*                                                             * AJSW021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * AJSW021
ACCTBSIZ DS    H                  *BUFFER BLKSIZE               AJSW021
         DS    H                  *FLAGS AND TRANS SEQ NUMBER   AJSW021
ACCTRSIZ DS    H                  *RECORD LENGTH OF SEGMENT     AJSW021
ACCTUTYP DS    X'F0'              *SEGMENT TYPE                 AJSW021
         DS    X'01'              *MODIFICATION NUMBER          AJSW021
GDACCTID DS    CL4'ACCT'          *EYE CATCHER                  AJSW021
GDCENTER DS    CL8'  '            *HOME NODE NAME               AJSW021
ACCTDATA DS    CL42               *ACCOUNTING DATA              AJSW021
         DS    CL18               *RESERVED FOR/BY USER         AJSW021
ACCTBLEN EQU   *-ACCTBSIZ         *LENGTH OF ENTIRE BLOCK       AJSW021
         MEND
