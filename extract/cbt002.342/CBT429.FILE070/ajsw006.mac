++ USERMOD(AJSW006) /*

  UPDATE GDG BASE LVL AT STEP END.
  BYPASS TSO LOGON SETUP.
                                         */.
++ VER(Z038) FMID(HJS2215) PRE(AJSW013).
++ SRCUPD(IATUX06) DISTLIB(AJES3SRC) .
./ CHANGE NAME=IATUX06
* USER MODS:                                                          *
*      UPDATE GDG BASE LVL AT STEP END, BYPASS TSO LOGON SETUP. AJSW006
*                                                               AJSW006
*-------------------------------------------------------------* AJSW006
*                                                             * AJSW006
*        IATUX06 - STEP LEVEL GDG & TSO SETUP BYPASS          * AJSW006
*                                                             * AJSW006
*-------------------------------------------------------------* AJSW006
JFCB     DSECT                                                  AJSW006
         IEFJFCBN LIST=YES                                      AJSW006
         SPACE 2                                                AJSW006
SIOT     DSECT                                                  AJSW006
         IEFASIOT ,                                             AJSW006
         SPACE 2                                                AJSW006
         IATYVAT ,                                              AJSW006
         SPACE 2                                                AJSW006
         IATYVSR ,                                              AJSW006
         SPACE 2                                                AJSW006
         IATYPAS ,                                              AJSW006
         SPACE 2                                                AJSW006
         IATYTVT ,                                              AJSW006
         SPACE 2                                                AJSW006
         IATYDNT ,                                              AJSW006
         SPACE 2                                                AJSW006
         DROP  R15                                              AJSW006
         LR    R10,R15                                          AJSW006
         USING IATUX06,R10        *ESTABLISH BASE               AJSW006
         USING IATYIDD,R13        *INTERPRETER DATA AREA        AJSW006
*-------------------------------------------------------------* AJSW006
* BYPASS SETUP FOR TSO LOGON DATASETS THAT ARE IN THE RESDSN  * AJSW006
* LIST AND ARE VOLUME SPECIFIC.  COMPARE DATASET NAME TO      * AJSW006
* RESDSN TABLE AND STRIKE IT OUT IF FOUND.                    * AJSW006
*-------------------------------------------------------------* AJSW006
         TM    IDDGTRC1,IDDGTSOL  *TSO LOGON?                   AJSW006
         BC    ALLOFF,GDGMOD      *NO, BYPASS THIS PART OF MOD  AJSW006
         TM    DDLFLG3,DDLVLRDD+DDLVLRDS *VOL=REF SPECIFIED?    AJSW006
         BC    NALLOFF,DISPCHK    *YES - GO CHECK DISP          AJSW006
         CLI   DDLNOVLS,0         *VOLSER SPECIFIED?            AJSW006
         BC    EQ,GDGMOD          *NO - SKIP THIS PART OF MOD   AJSW006
DISPCHK  TM    DDLFLG2,DDLNEW     *DISP=NEW?                    AJSW006
         BC    ALLON,GDGMOD       *YES - SKIP THIS PART OF MOD  AJSW006
         TM    DDLFLG2,DDLMOD     *DISP=MOD?                    AJSW006
         BC    ALLON,GDGMOD       *YES - SKIP THIS PART OF MOD  AJSW006
         ICM   R6,15,DDLUNIT      *UNIT PARM SPECIFIED?         AJSW006
         BC    ZERO,GDGMOD        *NO - SKIP THIS PART OF MOD   AJSW006
         CLI   0(R6),C' '         *IS THERE ONE THERE?          AJSW006
         BC    EQ,GDGMOD          *NO - SKIP THIS PART OF MOD   AJSW006
         CLI   0(R6),X'00'        *IS THERE ONE THERE?          AJSW006
         BC    EQ,GDGMOD          *NO - SKIP THIS PART OF MOD   AJSW006
         TM    DDLFLG5,DDLCAT     *CONCATENATED DD STATEMENT?   AJSW006
         BC    ALLOFF,GETDDNM     *NO - CONTINUE                AJSW006
         LA    R4,IDDCONNM        *PTR TO DDNAME                AJSW006
         B     *+8                *GO CHECK DDNAME BYPASS       AJSW006
GETDDNM  L     R4,DDLDDNAM        *PTR TO DDNAME                AJSW006
         CLC   =CL8'JOBCAT',0(R4) *IS IT JOBCAT?                AJSW006
         BC    EQ,GDGMOD          *YES - SKIP THIS PART OF MOD  AJSW006
         CLC   =CL8'STEPCAT',0(R4) *IS IT STEPCAT?              AJSW006
         BC    EQ,GDGMOD          *YES - SKIP THIS PART OF MOD  AJSW006
RESDSN   ICM   R1,15,DDLDSN       *DSNAME SPECIFIED?            AJSW006
         BC    ZERO,GDGMOD        *NO - SKIP THIS PART OF MOD   AJSW006
         L     R7,TIDSNT          *PTR TO RESDSN TABLE          AJSW006
         USING DNTHDR,R7                                        AJSW006
         OC    DNTNUM,DNTNUM      *ANY TABLE ENTRIES?           AJSW006
         BC    ZERO,GDGMOD        *NO - SKIP THIS PART OF MOD   AJSW006
         LH    R6,DNTNUM          *PICK UP NUMBER OF ENTRIES    AJSW006
         LH    R4,DNTELGH         *PICK UP SIZE OF EACH ENTRY   AJSW006
         AH    R7,DNTHLGH         *PTR TO FIRST ENTRY           AJSW006
         USING DNTENT,R7                                        AJSW006
RESDLP   CLC   DNTDSN,0(R1)       *SAME DSN?                    AJSW006
         BC    EQ,RESFAKE         *YES - GO FAKE RESDSN         AJSW006
         BC    GT,GDGMOD          *NO - AND PAST IT IN TABLE    AJSW006
         AR    R7,R4              *BUMP BY LENGTH               AJSW006
         BCT   R6,RESDLP          *LOOP UNTIL  END OF TABLE     AJSW006
         DROP  R7                                               AJSW006
RESFAKE  TM    DDLFLG5,DDLCAT     *CONCATENATED DD STATEMENT?   AJSW006
         BC    ALLOFF,RESFAKE1    *NO - GO STRIKE OUT ENTRY     AJSW006
         OI    DDLFLG4,DDLDUM     *SET DUMMY STRIKE OUT         AJSW006
         B     GDGMOD             *AND CONTINUE                 AJSW006
RESFAKE1 OI    DDLFLG4,DDLSYS     *SET TO STRIKE OUT            AJSW006
         SPACE 1                                                AJSW006
*-------------------------------------------------------------* AJSW006
*        BEGINNING OF GDG BIAS MODIFICATION                   * AJSW006
*-------------------------------------------------------------* AJSW006
GDGMOD   DS    0H                                               AJSW006
*************************************************************** AJSW006
* USE ESTABLISHED PTRS TO GET AT JFCB VIA SIOT. FOR SIOT,IICM * AJSW006
* HAS ALREADY CONVERTED SWA POINTER TO BE A REAL ADDRESS, BUT * AJSW006
* THE JFCB PTR STILL NEEDS TO GO THRU COMPATIBILITY INTERFACE * AJSW006
* TO POINT TO REAL BEGINNING. NOTE THAT FOR RI, DDLUNIQ IS A  * AJSW006
* LTTR POINTER SO WE MAY NEED TO FURTHER MANIPULATE THIS PTR  * AJSW006
*************************************************************** AJSW006
         L     R5,DDLUNIQ         *GET SIOT SWA                 AJSW006
         LTR   R5,R5              *IF IT IS ZERO                AJSW006
MESELF1  BC    ZERO,WDNOGDG       *RI CALLED, NOT CI, EXIT      AJSW006
         LA    R6,16(R5)          *POINT TO BEGIN OF SIOT       AJSW006
         LR    R8,R6              *USE R8 FOR IT                AJSW006
         USING SIOT,R8                                          AJSW006
         L     R5,SCTPJFCB        *PT TO JFCB                   AJSW006
         BAL   R7,CMGET0          *MUST GET COMPATIBLE JFCB     AJSW006
         LR    R4,R6              *USE R4 FOR JFCB              AJSW006
         USING JFCB,R4                                          AJSW006
*************************************************************** AJSW006
*     WARDS GDG MODIFICATION                                  * AJSW006
*  BAIS COUNT IS MAINTAINED FOR EACH GDG DATA SET PROCESSED   * AJSW006
*  IT'S INCREMENTED ONCE FOR EACH STEP WITH A NEW GENERATION  * AJSW006
*        R8 - SIOT                                            * AJSW006
*        R4 - JFCB                                            * AJSW006
* IT CREATES AND USES A DUMMY ENTRY IN THE JES3 PASS/CTLG     * AJSW006
* TABLE TO SAVE GDG DSNAMES AND THE CURRENT LEVEL NUMBER.     * AJSW006
* IT POINTS IATIIPR AT THIS DUMMY ENTRY FOR ALL REFERENCES    * AJSW006
* TO THE GDG LEVEL NUMBER. IN THIS WAY IT WILL USE STEPEND    * AJSW006
* CATALOG LOGIC FOR DECIDING WHAT TAPE FETCHS TO ISSUE        * AJSW006
* WITHOUT ACTUALLY CHANGING THE JFCB. HENCE STEP COND CODES   * AJSW006
* WILL NOT PRODUCE INCORRECT GDG REFERENCES.                  * AJSW006
* -NOTE-IF PASS/CATLG TABLE CREATION LOGIC CHANGED IN IICM    * AJSW006
* OR IIPR,THE CORRESPONDING CHANGES MUST BE MADE TO PRTBUILD, * AJSW006
* PRTPSCN AND CMGET0 IN UX28.                                 * AJSW006
*                                                             * AJSW006
*        PURPOSE OF THIS MOD IS TO OBTAIN ASP COMPATABILITY   * AJSW006
*        WITH WARD'S VS SYSTEM WHICH EFFECTIVELY TREATS       * AJSW006
*        'DISP=(XXX,CATLG)' AS AN END-OF-STEP FUNCTION FOR    * AJSW006
*        GDG'S RATHER THAN END-OF-JOB.                        * AJSW006
*************************************************************** AJSW006
WDLP0    DS    0H                                               AJSW006
         TM    JFCBIND1,JFCGDG    *IS THIS DATA SET A GDG?      AJSW006
         BC    ZERO,WDNOGDG       *NO - FORGET IT               AJSW006
*-------------------------------------------------------------* AJSW006
*        IS THIS GDG ALREADY IN THE PASS/CATLG TABLE?         * AJSW006
*-------------------------------------------------------------* AJSW006
         LA    R2,IDDPCAT         *PASS/CATLG TAB START         AJSW006
WDLP1    DS    0H                                               AJSW006
         BAL   R14,PRTPSCN        *GET NEXT ENTRY               AJSW006
         B     WDNFND             *EOF - NO MORE                AJSW006
*-------------------------------------------------------------* AJSW006
*  IF PASSDSN+43 = '+' THEN IT IS ONE OF OUR SPECIAL ENTRIES  * AJSW006
*-------------------------------------------------------------* AJSW006
         USING PASSCTLG,R2                                      AJSW006
         CLI   PASSDSN+43,C'+'    *OUR KEY IN DSN FIELD         AJSW006
         BC    NE,WDLP1           *NO GET NEXT ENTRY            AJSW006
         CLC   PASSDSN(43),JFCBDSNM *SAME DSNAME                AJSW006
         BC    NE,WDLP1           *NO - GET NEXT ENTRY          AJSW006
*-------------------------------------------------------------* AJSW006
*        PACK THE EXISTING GDG NUMBER                         * AJSW006
*-------------------------------------------------------------* AJSW006
         LA    R15,0              *COUNT SIGNIFICANT DIGITS     AJSW006
         LA    R3,L'JFCBELNM      *LEN OF GDG NO FIELD          AJSW006
         LA    R1,JFCBELNM        *START OF GDG NUMBER          AJSW006
         CLI   0(R1),C'0'         *CHECK FOR '-' OR '+'         AJSW006
         BC    LT,WDPKLP2         *YES - BR ON '+' OR '-'       AJSW006
WDPKLP1  DS    0H                 *SEARCH FOR LAST DIGIT        AJSW006
         CLI   0(R1),C'0'         *STOP IF LESS THAN ZERO       AJSW006
         BC    LT,WDPCK           *NOW BR TO PACK IT            AJSW006
         LA    R15,1(R15)         *COUNT SIGNIFICANT DIGIT      AJSW006
WDPKLP2  DS    0H                 *GET NEXT CHAR IN GDG FIELD   AJSW006
         LA    R1,1(R1)                                         AJSW006
         BCT   R3,WDPKLP1         *LOOP ON SEARCH               AJSW006
WDPCK    DS    0H                 *R15=LEN OF SIGNIF. DIGITS    AJSW006
         LTR   R15,R15            *ANY SIGNIFICANT DIGITS       AJSW006
         BC    NZERO,WDPCK2       *YES  - BR AND CONTINUE       AJSW006
         MVC   IDDUWORK+4(2),=PL2'0' *SET GDG COUNT TO 0        AJSW006
         B     WDSIGN                                           AJSW006
WDPACK   PACK  IDDUWORK+4(2),0(,R1) *EXECUTE TO PACK GDG NUMBER AJSW006
WDPCK2   DS    0H                                               AJSW006
         BCTR  R15,0              *REDUCE LEN BY 1 FOR EX       AJSW006
         LA    R1,JFCBELNM        *ADDR OF UNPK'D GDG NUMBER    AJSW006
         CLI   JFCBELNM,C'0'      *START WITH '-' OR '+'?       AJSW006
         BC    GE,WDPCK3          *NO - BRANCH                  AJSW006
         LA    R1,1(R1)           *YES - SKIP '-' OR '+'        AJSW006
WDPCK3   DS    0H                                               AJSW006
         EX    R15,WDPACK         *PACK GDG N(R1) TO WDGEN      AJSW006
WDSIGN   DS    0H                 *DETERMINE SIGN OF GDG NUMBR  AJSW006
         CLI   JFCBELNM,C'-'      *IS SIGN MINUS?               AJSW006
         BC    NE,WDPOS           *NO - BRANCH                  AJSW006
         NI    IDDUWORK+5,X'F0'   *SET SIGN...                  AJSW006
         OI    IDDUWORK+5,X'0B'          ...NEGATIVE            AJSW006
WDPOS    DS    0H                                               AJSW006
         AP    IDDUWORK+4(2),PASSID *INCR BY BIAS COUNT         AJSW006
         CLC   PASSSTPN,IDDCSTPN  *CURRENT STEP ALREADY HIT?    AJSW006
         BC    NE,WDNEWSTP        *NO - THIS IS A NEW STEP      AJSW006
         SP    IDDUWORK+4(2),=PL1'1' *DONE FOR SAME STEP        AJSW006
         B     WDUNPKR                                          AJSW006
WDNEWSTP DS    0H                 *LOOK FOR NEW ONE             AJSW006
         TM    SCTSDISP,X'02'     *IS NEW DSN TO BE CATLGED?    AJSW006
         BC    ZERO,WDNOPLUS      *NO - FORGET IT               AJSW006
         AP    PASSID,=PL1'1'     *INCREMENT BIAS COUNT         AJSW006
         MVC   PASSSTPN,IDDCSTPN  *REPLACE STEP NUMBER          AJSW006
WDNOPLUS DS    0H                                               AJSW006
*-------------------------------------------------------------* AJSW006
*        UNPACK NEW GDG NUMBER TO REPLACE IN DUMMY P/C ENTRY  * AJSW006
*-------------------------------------------------------------* AJSW006
WDUNPKR  DS    0H                                               AJSW006
         MVI   PASSELNM,C' '      *CLEAR GDG LEVEL              AJSW006
         MVC   PASSELNM+1(L'PASSELNM-1),PASSELNM *WITH BLANKS   AJSW006
         CP    IDDUWORK+4(2),=PL2'0' *CHK FOR 0 GENERATION      AJSW006
         BC    NE,WDUN1           *NO, BRANCH                   AJSW006
         MVI   PASSELNM,C'0'      *SET GDG NUMBER TO ZERO       AJSW006
         B     MW017A             *ALL DONE                     AJSW006
WDUN1    DS    0H                 *INSERT SIGN FIRST            AJSW006
         UNPK  IDDUWORK(4),IDDUWORK+4(2) *UNPK NEW GDG NUMBER   AJSW006
         OI    IDDUWORK+3,X'F0'   *MAKE SURE OF NUMERIC         AJSW006
         MVI   PASSELNM,C'+'      *ASSUME '+'                   AJSW006
         CP    IDDUWORK+4(2),=PL2'0' *CHK FOR MINUS             AJSW006
         BC    GE,WDUNPOS         *NO - ASSUME POSITIVE         AJSW006
         MVI   PASSELNM,C'-'      *SET WITH MINUS SIGN          AJSW006
WDUNPOS  DS    0H                 *REMOVE LEADING ZEROS         AJSW006
         LA    R3,IDDUWORK        *R3 IS SEARCH REG             AJSW006
         LA    R1,4               *R1 IS LOOP REG               AJSW006
WDUNLP1  DS    0H                 *LOOP ON LEADING ZEROS        AJSW006
         CLI   0(R3),C'0'         *CHECK FOR ZERO               AJSW006
         BC    NE,WDUNMOV         *BR ON END OF LEADING ZEROS   AJSW006
         LA    R3,1(R3)           *NEXT CHAR IN WDUNPK          AJSW006
         BCT   R1,WDUNLP1         *LOOP THRU WDUNPK             AJSW006
         LA    R3,IDDUWORK+3      *RESET TO END OF WDUNPK       AJSW006
WDUNMOV  DS    0H                 *MOVE SIGNF. DIGITS           AJSW006
         LA    R1,IDDUWORK+3      *ADDR OF LAST CHAR WDUNPK     AJSW006
         SR    R1,R3              *CALC NUM OF CHARS TO MOVE    AJSW006
         CH    R1,=H'2'           *CHECK FOR MAX                AJSW006
         BC    LE,WDLNOK          *BR IF LEN OK                 AJSW006
         LA    R1,2               *JUST IN CASE                 AJSW006
WDLNOK   DS    0H                 *ALMOST DONE                  AJSW006
         EX    R1,WDMVC           *NEW GDG TO PASSELNM+1        AJSW006
MW017A   LA    R1,PASSELNM        *POINT IIPR TO DUMMY          AJSW006
         ST    R1,DDLDSNQ         *P/C ENTRY                    AJSW006
         B     WDNOGDG            *NOW ALL DONE                 AJSW006
WDMVC    MVC   PASSELNM+1(0),0(R3) *GDG NUMBER TO PASSELNM+1    AJSW006
*-------------------------------------------------------------* AJSW006
*      BUILD A NEW DUMMY ENTRY, IF NECESSARY                  * AJSW006
*-------------------------------------------------------------* AJSW006
WDNFND   DS    0H                                               AJSW006
         TM    SCTSDISP,X'02'     *TO BE CATALOGED              AJSW006
         BC    ZERO,WDNOGDG       *NO - FORGET IT               AJSW006
         CLI   JFCBELNM,C'0'      *CATALOG ZERO?                AJSW006
         BC    EQ,WDNOGDG         *YES - FORGET IT              AJSW006
         CLC   JFCBELNM(2),=C'+0' *CATALOG ZERO?                AJSW006
         BC    EQ,WDNOGDG         *YES - FORGET IT              AJSW006
         LA    R3,L'PASSSIZ       *GET PASS/CATLG ENTRY SIZE    AJSW006
         LA    R2,IDDPCAT                                       AJSW006
         BAL   R14,PRTBUILD       *GET A NEW ENTRY              AJSW006
         MVC   PASSDSN(43),JFCBDSNM *COPY THE DSN               AJSW006
         MVI   PASSDSN+43,C'+'    *SET OUT INDICATOR            AJSW006
         MVC   PASSSTPN,IDDCSTPN  *COPY STEP NUMBER             AJSW006
         MVC   PASSID,=PL2'1'     *SET INITIAL BIAS COUNT       AJSW006
         XC    PASSFLG1,PASSFLG1  *CLEAR PASSFLAG               AJSW006
         XC    PASSFLG2,PASSFLG2  *CLEAR PASSFLAG               AJSW006
         XC    PASSFLG3,PASSFLG3  *CLEAR PASSFLAG               AJSW006
         XC    PASSLID,PASSLID    *CLEAR NEXT ALLOC (?)         AJSW006
         B     WDNOGDG            *RETURN TO IIPR               AJSW006
*-------------------------------------------------------------* AJSW006
*              SCAN THE PASS CATALOG TABLE                    * AJSW006
*-------------------------------------------------------------* AJSW006
PRTPSCN  DS     0H                                              AJSW006
         L      R2,0(,R2)         *GET PTR TO NEXT ENTRY        AJSW006
         LTR    R2,R2             *ANY MORE ENTRIES?            AJSW006
         BCR    ZERO,R14          *NO, PERFORM AT END RETURN    AJSW006
         B      4(R14)            *YES, RETURN NEXT ENTRY       AJSW006
         SPACE  2                                               AJSW006
*-------------------------------------------------------------* AJSW006
*               TABLE ENTRY BUILD SUBROUTINE                  * AJSW006
*-------------------------------------------------------------* AJSW006
PRTBUILD DS    0H                                               AJSW006
         LH    R15,IDDCURD        *GET THE CURRENT DISPLACEMENT AJSW006
         LTR   R15,R15            *ANY DISPLACEMENT AS YET?     AJSW006
         BC    ZERO,PRTB03        *NO, MUST BE FIRST REQUEST    AJSW006
         AR    R15,R3             *ADD REQUESTOR'S DISPLACEMENT AJSW006
         CH    R15,=H'2048'       *PAST THE BUFFER?             AJSW006
         BC    GT,PRTB03          *YES, GETMAIN A NEW WORK AREA AJSW006
         LH    R3,IDDCURD         *SAVE CURRENT DISPLACEMENT    AJSW006
         STH   R15,IDDCURD        *SET NEW DISPLACEMENT         AJSW006
         A     R3,IDDCURWA        *ADD CURRENT AREA ADDR        AJSW006
PRTB01   DS    0H                                               AJSW006
         CLC   0(4,R2),TVTZERO    *POSITIONED AT LAST ENTRY     AJSW006
         BC    EQ,PRTB02          *YES, UPDATE LAST ENTRY PTR   AJSW006
         L     R2,0(,R2)          *GET NEXT ENTRY               AJSW006
         B     PRTB01             *SEARCH TILL AT END           AJSW006
PRTB02   DS    0H                                               AJSW006
         ST    R3,0(,R2)          *CHAIN THE ENTRY              AJSW006
         LR    R2,R3              *SET NEW ENTRY PTR            AJSW006
         XC    0(L'PASSSIZ,R2),0(R2) *CLEAR NEW CHAIN PTR       AJSW006
         BR    R14                *RETURN TO CALLER             AJSW006
PRTB03   DS    0H                                               AJSW006
         LR    R9,R14             *SAVE RETURN                  AJSW006
PRTB04   DS    0H                                               AJSW006
         LA    R0,2048            *SET GETMAIN SIZE             AJSW006
         AGETMAIN SIZE=(R0),LOC=(ANY,ANY)                       AJSW006
PRTB05   DS    0H                                               AJSW006
*        AWAIT TYPE=ON,ECFADD=FCTFLAG1,ECFMASK=FCTAGET          AJSW006
PRTB06   DS    0H                                               AJSW006
         OI    IDDCTRCE,IDDCPCAT  *SET PCAT AGETMAINED NOW      AJSW006
         XC    0(4,R1),0(R1)      *CLEAR NEXT CHAIN             AJSW006
         MVC   IDDCURD,=H'4'      *SET INITIAL WORKAREA DISP    AJSW006
         CLC   IDDWORKA,TVTZERO   *DO WE HAVE AN AREA YET?      AJSW006
         BC    NE,PRTB08          *YES, PERFORM THE CHAINING    AJSW006
         ST    R0,IDDWORKA        *SET THE FIRST WORK AREA      AJSW006
PRTB07   DS    0H                                               AJSW006
         ST    R0,IDDCURWA        *SET CURRENT WORK AREA        AJSW006
         LR    R14,R9             *RESET THE RETURN             AJSW006
         B     PRTBUILD           *NOW TRY AGAIN                AJSW006
PRTB08   DS    0H                                               AJSW006
         L     R1,IDDCURWA        *GET CURRENT WORK AREA        AJSW006
         ST    R0,0(,R1)          *SET THE CHAIN                AJSW006
         B     PRTB07             *FINISH WORK AREA ALLOC       AJSW006
*-------------------------------------------------------------* AJSW006
*               GET A SCHEDULER CONTROL BLOCK                 * AJSW006
*-------------------------------------------------------------* AJSW006
CMGET0   DS    0H                                               AJSW006
         SRL   R5,8               *SHIFT TO LOW ORDER           AJSW006
CMGET    DS    0H                                               AJSW006
         USING IATYVSR,R5         *PTR TO THE CONTROL BLOCK     AJSW006
         LA    R6,VSRCB                                         AJSW006
         BR    R7                 *RETURN TO CALLER             AJSW006
*-------------------------------------------------------------* AJSW006
*               RETURN FROM UX06                              * AJSW006
*-------------------------------------------------------------* AJSW006
WDNOGDG  DS    0H                                               AJSW006
         IATXPTCH PSTRT=PRTBUILD                                AJSW006
UMODNUM  DC    CL7'AJSW006'
