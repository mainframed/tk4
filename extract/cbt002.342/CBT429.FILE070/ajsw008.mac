++ USERMOD(AJSW008) /*

    THIS MODIFICATION CONTAINS THE FOLLOWING:
     1. IATUX04 - ACCT VALIDATION CODE (TSO LOGONS)
                - RESTRICTED CLASS VERIFICATION + AJSW208
     2. ACCT    - ACCT DSP
     3. ACCTSAVE- ACCT DSP SAVEAREA

 CHANGE HISTORY:

 05/15/88 J. DAILEY           TURN WARN MODE OFF FOR CVER. RE-WORKED
                              CODE TO ALLOW MORE SEQUENCE NUMBER SPACE.
 05/29/88 J. DAILEY           FIX BUG IN CVER CHECKING FOR PROD CLASS.

                                      */.
++ VER(Z038) FMID(HJS2215) PRE(AJSW003).
++ JCLIN .
//GEN11 JOB WC07Z0044,'531-1  CR SINGER'
//SG21 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,RENT,REUS',
//    UNIT='3350',SER=IPLYYY,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
    INCLUDE INCLUDE(ACCT)
 NAME ACCT(R)
/*
//SG22 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET',
//    UNIT='3350',SER=IPLYYY,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
    INCLUDE INCLUDE(ACCTSAVE)
 NAME ACCTSAVE(R)
/*
++ SRCUPD(IATUX04) .
./ CHANGE NAME=IATUX04
* USER MODS:                                                    AJSW008
*                                                               AJSW008
*      - ACCT VALIDATION CODE FOR TSO LOGONS                    AJSW008
*      - JOBCLASS RESTRICTION ENFORCEMENT                       AJSW208
*                                                               AJSW008
         IATYTVT ,                                              AJSW008
         EJECT                                                  AJSW008
         IATYJDA ,                                              AJSW008
         EJECT                                                  AJSW008
         IATYRSQ ,                                              AJSW008
         EJECT                                                  AJSW008
         IATYJMR ,                                              AJSW008
         EJECT                                                  AJSW008
         IATYMPC ,                                              AJSW008
         EJECT                                                  AJSW008
         IATYDST ,                                              AJSW008
         EJECT                                                  AJSW008
         CVERTAB ,                 CLASS VERIFICATION TABLE     AJSW208
         EJECT                                                  AJSW208
         B     GDUX04             BRANCH TO DSD USER MOD CODE   AJSW008
         EJECT                                                  AJSW008
****************************************************************AJSW008
*                                                              *AJSW008
*               START OF DSD/WC USERMOD CODE                   *AJSW008
*                                                              *AJSW008
****************************************************************AJSW008
*                                                               AJSW008
*                                                               AJSW008
GDUX04   DS    0H                                               AJSW008
         USING IATYIDD,R13        *INTERPRETER DSP WORK AREA    AJSW008
         DROP  R15                *RE-ESTABLISH MY BASE         AJSW008
         LR    R10,R15            *GET BASE REGISTER            AJSW008
         USING IATUX04,R10        *ADDRESS IT                   AJSW008
         L     R3,RQTOP           *GET RQ CHAIN                 AJSW008
         USING RQSTART,R3         *ADDRESS IT                   AJSW008
FINDRQ   DS    0H                                               AJSW008
         CLC   RQJNUM,IDDJOBNO    *FIND RQ BY JOB NUMBER?       AJSW008
         BC    EQ,READJDAB        *..YES, PROCESS IT            AJSW008
         ICM   R3,15,RQNEXT       *SEARCH CHAIN                 AJSW008
         BC    NZERO,FINDRQ       *LOOP BACK                    AJSW008
         TM    IDDGTRC1,IDDGTSOL  *NO RQ ENTRY - IS IT TSO ?    AJSW008
         BC    ALLOFF,RETURN4A    *..NO - DON'T FAIL JOB        AJSW008
         B     RETURN8A           *..YES - CANCEL JOB           AJSW008
READJDAB DS    0H                                               AJSW008
         JESREAD FDB=RQJDBFDB,ID=JDAB READ JDAB                 AJSW008
         L     R4,RQJDBFDB        *SET JDAB BASE                AJSW008
         USING JDABSTRT,R4        *ADDRESS IT                   AJSW008
         TM    IDDGTRC1,IDDGTSOL  *IS IT TSO?                   AJSW008
         BC    ALLOFF,STOREJMR    *..NO, DON'T FAIL THE JOB     AJSW008
         TM    JDABUFLG,JDABFTSO  *IS JOB TO BE CANCELLED?      AJSW008
         BC    ALLOFF,STOREJMR    *..NO, DON'T FAIL THE JOB     AJSW008
         LA    R0,70              *BAD ACCT - TELL THE WORLD    AJSW008
         B     RETURN8        ************** RETURN *********** AJSW008
         AGETMAIN SIZE=(R0),      *GET WORKING STORAGE          AJSW008X
               LOC=(ANY,ANY),BUSY=RETURN8                       AJSW008
         LR    R5,R1              *SAVE ADDRESS                 AJSW008
         MVC   0(70,R1),TSOMSG    *SET UP SEND MESSAGE          AJSW008
         LA    R5,50(R1)          *POINT TO END                 AJSW008
         MVC   0(7,R5),IDDTSOID   *MOVE IN TSO USERID           AJSW008
         LA    R2,MAINDATA        *ADDR OF ADDR OF 1ST MAIN     AJSW008
         USING MPCSTART,R2        *ADDRESS IT                   AJSW008
         SL    R2,=A(MPNEXT-MPCSTART) *MINUS CHAIN FIELD OFFSET AJSW008
         SPACE 2                                                AJSW008
SRCHSYS  DS    0H                                               AJSW008
         CLC   MPSEQNO,RQMPSEQ    *RIGHT ONE?                   AJSW008
         BC    EQ,SRCHSYS1        *..YES, GO PROCESS            AJSW008
         ICM   R2,X'F',MPNEXT     *GET NEXT MAIN                AJSW008
         BC    ZERO,RETURN8       *NONE FOUND, RETURN           AJSW008
         B     SRCHSYS            *CHECK NEXT MAIN              AJSW008
SRCHSYS1 DS    0H                                               AJSW008
         LR    R5,R1              *POINT AT MESSAGE             AJSW008
         JSERV TEXT=(R5),MOD=MODSVC34, *WRITE OUT MESSAGE       AJSW008X
               MPC=(R2),DEST=DSTC34                             AJSW008
         SPACE 2                                                AJSW008
         MVC   0(70,R5),BADACCT   *MOVE IN MESSAGE              AJSW008
         MVC   16(8,R5),IDDJOBNM  *MOVE IN JOB NAME             AJSW008
         MVC   25(4,R5),IDDJOBNO  *MOVE IN JOB NUMBER           AJSW008
         LR    R1,R5              *SET UP REG                   AJSW008
         IATXIWT TYPE=MOPER,      *SEND MESSAGE                 AJSW008X
               MSG=(R1)                                         AJSW008
         LR    R1,R5              *POINT TO AREA                AJSW008
         LA    R0,70              *SETUP SIZE                   AJSW008
         APUTMAIN SIZE=(R0),      *THEN FREE STORAGE            AJSW008X
               AREA=(R1)                                        AJSW008
         B     RETURN8            *GO REJECT THE JOB            AJSW008
         SPACE 3                                                AJSW008
STOREJMR DS    0H                                               AJSW008
         LA    R6,JDABJBCD        *R6=JOB CARD POINTER          AJSW008
         LA    R7,3(R6)           *R7=CURRENT SEARCH POSITION   AJSW008
         LA    R8,61(R6)          *R8=END SEARCH POSITION       AJSW008
JOBSCAN  DS    0H                                               AJSW008
         CLC   =C' JOB ',0(R7)    *LOOKING FOR ' JOB ' ?        AJSW008
         BC    EQ,JOBFOUND        *..YES, GO FIND ACCT NUMBER   AJSW008
         CR    R7,R8              *POSSIBILITY OF JOB EXCEEDED  AJSW008
         BH    RETURN4            *..YES, IGNORE IT             AJSW008
         LA    R7,1(R7)           *TRY NEXT POSITION            AJSW008
         B     JOBSCAN            *GO TRY AGAIN                 AJSW008
JOBFOUND DS    0H                                               AJSW008
         LA    R7,5(R7)           *SKIP PAST ' JOB '            AJSW008
JCLSCAN  DS    0H                                               AJSW008
         CLI   0(R7),X'4D'        *OPEN PAREN?                  AJSW008
         BC    EQ,ACCTNEXT        *..YES, ACCT SHOULD BE NEXT   AJSW008
         CLI   0(R7),X'7D'        *QUOTE?                       AJSW008
         BC    EQ,ACCTNEXT        *..YES, ACCT SHOULD BE NEXT   AJSW008
         CLI   0(R7),X'40'        *BLANK?                       AJSW008
         BC    NE,ACCTNXT1        *..NO, ACCT HAS TO BE NEXT    AJSW008
         LA    R7,1(R7)           *GET NEXT POSITION            AJSW008
         CR    R7,R8              *POSSIBILITY ACCT EXCEEDED?   AJSW008
         BC    GT,RETURN4         *..YES, SKIP IT               AJSW008
         B     JCLSCAN            *GO TRY AGAIN                 AJSW008
ACCTNEXT DS    0H                                               AJSW008
         LA    R7,1(R7)           *BUMP TO ACCT NUMBER          AJSW008
ACCTNXT1 DS    0H                                               AJSW008
         ICM   R8,15,IDDJMR       *GET JMR ADDRESS              AJSW008
         BC    ZERO,RETURN4       *SKIP IF NONE                 AJSW008
         USING JMR,R8             *ADDRESS IT                   AJSW008
         MVC   JMRUSEID(7),0(R7)  *MOVE 7 BYTES TO JMR USERID   AJSW008
         B     RETURN4            *ALL DONE                     AJSW008
RELRET8  DC    0H'0'                                            AJSW208
RETURN8  ARELEASE FDB=RQJDBFDB    *RELEASE THE JDAB             AJSW008
RETURN8A LA    R15,8              *RC='REJECT THE JOB'          AJSW008
         ARETURN                  *RETURN TO CALLER             AJSW008
RETURN4  DC    0H'0'                                            AJSW208
         TM    IDDGTRC2,IDDGDSEL   DEMAND SELECT JOB?           AJSW208
         BC    ALLOFF,CVERBGN      NO, DO RESTRICTED CLASS CHEK AJSW208
RELRET4  DC    0H'0'                                            AJSW208
         ARELEASE FDB=RQJDBFDB    *RELEASE THE JDAB             AJSW008
RETURN4A LA    R15,4              *RC='ACCEPT THE JOB'          AJSW008
*        GIVE RETURN CODE OF 4    *HONOR STAGING DRIVE GROUPS   AJSW008
         ARETURN                  *RETURN TO CALLER.            AJSW008
*************************************************************** AJSW208
*                                                               AJSW208
*        A BATCH JOB IS BEING PROCESSED,                        AJSW208
*              CHECK FOR SUBMISSION TO A RESTRICTED JOB CLASS   AJSW208
*              IF RESTRICTED JOB CLASS CHECK IF USER IS ALLOWED AJSW208
*              TO USE THE RESTRICTED CLASS. IF NOT, THE JOB     AJSW208
*              CLASS IS SET TO THE DEFAULT WHICH AT THIS TIME   AJSW208
*              IS JS3BATCH.                                     AJSW208
*                                                               AJSW208
*              THERE IS EXCEPTION PROCESSING FOR THE FOLLOWING  AJSW208
*              CLASSES:                                         AJSW208
*                      PROD                                     AJSW208
*                      BMP                                      AJSW208
*                                                               AJSW208
*              IF A USER SUBMITS A JOB TO EITHER OF THESE       AJSW208
*              CLASSES AND, THE USER ID IS NOT IN THE TABLE     AJSW208
*              AND THE USER ID DOES NOT BEGIN WITH '$', THE     AJSW208
*              JOB IS ALLOWED TO RUN IN THE RESTRICTED JOB      AJSW208
*              CLASS.                                           AJSW208
*                                                               AJSW208
****************************************************************AJSW208
*                                                               AJSW208
*                                                               AJSW208
CVERBGN  DC    0H'0'                                            AJSW208
         ICM   R8,B'1111',IDDJMR   -> JOB MANAGEMENT RECORD     AJSW208
         BC    ZERO,RELRET4        NO JMR? EXIT                 AJSW208
         USING JMR,R8              JMR ADDRESSABILITY           AJSW208
         CLC   SMF26CLN,TVTBLANK   CLASS PRESENT?               AJSW208
         BC    EQ,RELRET4          NO CLASS NAME, EXIT          AJSW208
*                                                               AJSW208
CVER0100 DS    0H                                               AJSW208
         ICM   R6,B'1111',TVTUVER  -> 1ST RESTRICTED CLASS BLK  AJSW208
         BC    NZERO,CVER0120       TABLE PRESENT, LOCK IT.     AJSW208
         TM    TVTUFLG2,TVTUCVLD    INITIAL LOAD BEEN DONE      AJSW208
         BC    ALLON,RELRET4        YES, OPERATOR DISABLED      AJSW208
*                                                               AJSW208
         INTERCOM CONS=DUMMY,     INVOKE CVER DSP TO LOAD THE   AJSW208$
               TEXT=CALLCVER         RESTRICTED CLASS TABLE     AJSW208
*                                                               AJSW208
         AWAIT TYPE=ON,              WAIT FOR CVER TO LOAD THE  AJSW208$
               ECFMASK=TVTUCVLD,     RESTRICTED CLASS TABLE     AJSW208$
               ECFADD=TVTUFLG2                                  AJSW208
*                                                               AJSW208
         B     CVER0100              GIVE IT ANOTHER TRY        AJSW208
*                                                               AJSW208
CVER0120 DS    0H                                               AJSW208
         N     R6,CLEARBIT         ENSURE BUSY BIT IS OFF       AJSW208
         LR    R15,R6              COPY -> TO UPDATE REG        AJSW208
         O     R15,BUSYBIT         SET BUSY BIT FOR UPDATE      AJSW208
         CS    R6,R15,TVTUVER      ATTEMPT TO LOCK CLASS TABLE  AJSW208
         BC    EQ,CVER0200         GOT IT, CONTINUE             AJSW208
*                                                               AJSW208
         AWAIT TYPE=OFF,           WAIT FOR TABLE TO BE FREE    AJSW208$
               ECFMASK=X'80',                                   AJSW208$
               ECFADD=TVTUVER                                   AJSW208
*                                                               AJSW208
         B     CVER0100            GO BACK AND TRY AGAIN        AJSW208
*                                                               AJSW208
         USING CVERTABH,R6         CLASS VERIFY BLOCK ADDRBLTY  AJSW208
*                                                               AJSW208
CVER0200 DS    0H                                               AJSW208
         LA    R6,CVERTCTB         -> FIRST CLASS TABLE         AJSW208
         DROP  R6                                               AJSW208
         USING CVERCTAB,R6         CLASS ENTRY ADDRESSABILITY   AJSW208
*                                                               AJSW208
CVER0300 DS    0H                                               AJSW208
         CLC   SMF26CLN,CVERCNAM   USER'S CLASS RESTRICTED?     AJSW208
         BC    EQ,CVER0400         YES, CHECK IF USER ALLOWED   AJSW208
         ICM   R1,B'1111',CVERCNXT NO,OFFSET TO NEXT TABLE      AJSW208
         BC    ZERO,CVER0600       NO MORE, ALLOW JOB TO RUN    AJSW208
         LA    R6,0(R1,R6)         -> NEXT CLASS TABLE          AJSW208
         B     CVER0300            CHECK FOR THIS CLASS         AJSW208
*                                                               AJSW208
CVER0400 DS    0H                                               AJSW208
         SLR   R0,R0               CLEAR LOOP CONTROL REG       AJSW208
         ICM   R0,B'0011',CVERCEN# GET NUMBER OF ENTRIES IN TAB AJSW208
         BC    ZERO,CVER0700       NO,ENTRIES - REJECT JOB      AJSW208
         LA    R2,CVERCUSR         -> FIRST USER ENTRY          AJSW208
         USING CVERUTAB,R2         USER ENTRY ADDRESSABILITY    AJSW208
*                                                               AJSW208
CVER0500 DS    0H                                               AJSW208
         SLR   R1,R1               CLEAR LENGTH REGISTER        AJSW208
         IC    R1,CVERULNG         LENGTH OF USERNAME-1         AJSW208
         EX    R1,CVERCLC          USERID FOUND                 AJSW208
         BC    EQ,CVER0600         YES, ALLOW THE JOB TO RUN    AJSW208
         LA    R2,2(R1,R2)         NO, GET NEXT USER ID         AJSW208
         BCT   R0,CVER0500         LOOP BACK TILL DONE          AJSW208
         B     CVER0700            CHECK FOR CLASS OF PROD      AJSW208
*                                                               AJSW208
CVERCLC  CLC   CVERUNAM(0),JDABRACU   *** E X E C U T E D ***   AJSW208
*                                                               AJSW208
CVER0600 DS    0H                                               AJSW208
         NI    TVTUVER,TURNOFF-HIBIT UNLOCK THE TABLE           AJSW208
         B     RELRET4             EXIT, ALLOW THE JOB TO RUN   AJSW208
*                                                               AJSW208
CVER0700 DS    0H                                               AJSW208
         CLC   =C'BMP ',SMF26CLN   IS THIS CLASS BMP            AJSW008
         BC    EQ,CVER0750         YES,CHECK SPECIAL USERID     AJSW008
         CLC   =C'PROD ',SMF26CLN  IS THIS CLASS PROD           AJSW208
         BC    NE,CVER0800        NO,FAIL THE JOB               AJSW208
CVER0750 DS    0H                                               AJSW008
         CLI   JDABRACU,C'$'      YES, TSO USER ID              AJSW208
         BC    EQ,CVER0800        YES, FAIL THE JOB             AJSW208
         CLI   JDABRACU,X'00'     USER ID MISSING               AJSW208
         BC    EQ,CVER0800        YES, FAIL THE JOB             AJSW208
         CLC   =C'INTRDR',JDABRACU NO, INTRDR USER ID           AJSW208
         BC    NE,CVER0600        NO, ALLOW THE JOB TO RUN      AJSW208
*                                                               AJSW208
CVER0800 DS    0H                                               AJSW208
         LA    R0,WC013A#          SIZE OF WORK AREA            AJSW208
*                                                               AJSW208
         AGETMAIN SIZE=(R0),       ALLOCATE MESSAGE WORK AREA   AJSW208$
               LOC=(ANY,ANY),                                   AJSW208$
               BUSY=CVER9900                                    AJSW208
*                                                               AJSW208
         LR    R5,R1               -> POINTER TO MSG AREA       AJSW208
         MVC   0(WC013A#,R5),WC013A     COPY MSG SKELETON       AJSW208
         MVC   WC013AI1(L'WC013AI1,R5),CVERCNAM  RESTRICTED CLS AJSW208
*                                                               AJSW208
         IATXIWT TYPE=MOPER,       SEND MESSAGE TO CONSOLE AND  AJSW208$
               MSG=(R1)            TO THE JESMSG DATA SET       AJSW208
*                                                               AJSW208
         MVI   0(R5),C' '          INITIALIZE ENTIRE BUFFER     AJSW208
         MVC   1(WC013A#-1,R5),0(R5)                            AJSW208
         MVC   0(WC013#,R5),IATWC013    COPY MSG SKELETON       AJSW208
         MVC   WC013I1(L'WC013I1,R5),JDABRACU    SET USERID     AJSW208
         MVC   WC013I2(L'WC013I2,R5),JDABJNAM    JOB NAME       AJSW208
         MVC   WC013I3(L'WC013I3,R5),JDABJNUM    JOB NUMBER     AJSW208
         LR    R1,R5              -> MESSAGE AREA               AJSW208
*                                                               AJSW208
         IATXIWT TYPE=MOPER,       SEND MESSAGE TO CONSOLE AND  AJSW208$
               MSG=(R1)            TO THE JESMSG DATA SET       AJSW208
*                                                               AJSW208
         MVI   0(R5),C' '          INITIALIZE ENTIRE BUFFER     AJSW208
         MVC   1(WC013B#-1,R5),0(R5)                            AJSW208
         MVC   0(WC013B#,R5),WC013B     COPY MSG SKELETON       AJSW208
         MVC   WC013BI1(L'WC013BI1,R5),JOBCLS NEW JOB CLASS     AJSW208
         LR    R1,R5              -> MESSAGE AREA               AJSW208
*                                                               AJSW208
         IATXIWT TYPE=TITLE,       SEND MESSAGE TO CONSOLE AND  AJSW208$
               MSG=(R1)            TO THE JESMSG DATA SET       AJSW208
*                                                               AJSW208
         LR    R1,R5              -> AREA TO RELEASE            AJSW208
         LA    R0,WC013A#         SIZE OF AREA TO RELEASE       AJSW208
*                                                               AJSW208
         APUTMAIN SIZE=(R0),      RELEASE THE MESSAGE AREA      AJSW208$
               AREA=(R1)                                        AJSW208
*                                                               AJSW208
CVER9900 DS    0H                                               AJSW208
         NI    TVTUVER,TURNOFF-HIBIT UNLOCK THE CLASS TABLE     AJSW208
         MVC   SMF26CLN,JOBCLS     SET DEFAULT JOBCLASS         AJSW208
         B     RELRET4             NORMAL RETURN                AJSW208
*                                                               AJSW208
CLEARBIT DC    0F'0',X'7FFFFFFF'   MASK TO CLEAR HIGH WORD BIT  AJSW208
BUSYBIT  DC    0F'0',X'80000000'   MASK TO SET HIGH WORD BIT    AJSW208
*                                                               AJSW208
HIBIT    EQU   X'80'               HI BIT FLAG                  AJSW208
TURNOFF  EQU   255                 MASK TO TURN OFF BITS        AJSW208
*                                                               AJSW208
BADACCT  DS    0F                                               AJSW008
         DC    AL1(69)                                          AJSW008
         DC    CL35'IAT0404 *****          (    ) REJEC'        AJSW008
         DC    CL34'TED --- INVALID ACCT NUMBER ***** '         AJSW008
TSOMSG   DS    0F                                               AJSW008
         DC    AL2(MSGLEN)                                      AJSW008
         DC    CL35'SE '' IAT0504 *** INVALID ACCT NUMBE'       AJSW008
         DC    CL21'R ***'',USER=(       )'                     AJSW008
         DC    CL11' '            *FILLER                       AJSW008
         DC    XL2'00'            *PLACE FOR CONS ID            AJSW008
MSGLEN   EQU   (*-TSOMSG)         *LENGTH OF MESSAGE            AJSW008
*                                                               AJSW208
CALLCVER DS    0H                                               AJSW208
         DC    AL1(CCVER#-1)      COMMAND LENGTH                AJSW208
         DC    C'*X CVER T CVERGEN '                            AJSW208
CCVER#   EQU   *-CALLCVER                                       AJSW208
*                                                               AJSW208
IATWC013 DS    0C                                               AJSW208
         DC    AL1(WC013#-1)       MESSAGE LENGTH               AJSW208
         DC    C'IATWC013E (UX04) USERID='                      AJSW208
WC013I1  EQU   *-IATWC013,8,C'C'                                AJSW208
         DC    CL(L'WC013I1)' '    USERID INSERT                AJSW208
         DC    C' JOB='                                         AJSW208
WC013I2  EQU   *-IATWC013,8,C'C'                                AJSW208
         DC    CL(L'WC013I2)' '    JOB NAME INSERT              AJSW208
         DC    C' ('                                            AJSW208
WC013I3  EQU   *-IATWC013,4,C'C'                                AJSW208
         DC    CL(L'WC013I3)' '                                 AJSW208
         DC    C')'                                             AJSW208
WC013#   EQU   *-IATWC013                                       AJSW208
*                                                               AJSW208
WC013A   DS    0C                                               AJSW208
         DC    AL1(WC013A#-1)      MESSAGE LENGTH               AJSW208
         DC    C'IATWC013E (UX04) UNAUTHORIZED USE OF RESTRICT' AJSW208
         DC    C'ED JOB CLASS '                                 AJSW208
WC013AI1 EQU   *-WC013A,8,C'C'                                  AJSW208
         DC    CL(L'WC013AI1)' '   JOB CLASS INSERT             AJSW208
         DC    C' '                                             AJSW208
WC013A#  EQU   *-WC013A                                         AJSW208
*                                                               AJSW208
WC013B   DS    0C                                               AJSW208
         DC    AL1(WC013B#-1)      MESSAGE LENGTH               AJSW208
         DC    C'IATWC013E (UX04) JES3 JOB CLASS CHANGED TO '   AJSW208
WC013BI1 EQU   *-WC013B,8,C'C'                                  AJSW208
         DC    CL(L'WC013BI1)' '   JOB CLASS INSERT             AJSW208
         DC    C' '                                             AJSW208
WC013B#  EQU   *-WC013B                                         AJSW208
*                                                               AJSW208
         LTORG ,                                                AJSW208
*                                                               AJSW208
*                                                               AJSW208
*  E N D   O F   D S D   U S E R M O D                          AJSW208
*                                                               AJSW208
****************************************************************AJSW208
UMODNUM  DC    CL7'AJSW008'       *USER NUMBER                  AJSW008
++ SRC(ACCT) DISTLIB(ASRCLIB) .
ACCT     TITLE 'ACCT VALIDATION DSP'
***********************************************************************
*                                                                     *
* MODULE NAME:                                                        *
*              ACCT                                                   *
*                                                                     *
* NON-COPYRIGHT:                                                      *
*              GENERAL DYNAMICS (DSD) - MODIFICATION CODE 'AJSW008'   *
*                                                                     *
* LEVEL:                                                              *
*              JES3 RELEASE 1.3.4                                     *
*                                                                     *
* PATCH LABEL:                                                        *
*              PTCHP                                                  *
*                                                                     *
* FUNCTION:                                                           *
*              THIS ROUTINE SETS USER FLAG TVTUFLG1 IN FLD TVTRSVU6   *
*              FOR USE BY IATUX04 'JOB CARD VALIDATION EXIT'.         *
*                                                                     *
* OPERATION:                                                          *
*              ACCT DSP IS INVOKED BY AN OPERATOR CALL COMMAND.       *
*              VALID CALLING SEQUENCES ARE:                           *
*                                                                     *
*                    *X,ACCT,STOP   (STOP)                            *
*                    *X,ACCT,P      (STOP)                            *
*                    *X,ACCT,START  (START)                           *
*                    *X,ACCT,S      (START)                           *
*                    *X,ACCT,STATUS (STATUS)                          *
*                    *X,ACCT,I      (STATUS)                          *
*                                                                     *
* DEPENDENCIES:                                                       *
*              NONE                                                   *
*                                                                     *
* RESTRICTIONS:                                                       *
*              NONE                                                   *
*                                                                     *
* PROCESSOR:                                                          *
*              VS ASSEMBLER                                           *
*                                                                     *
* ATTRIBUTES:                                                         *
*              REENTERABLE                                            *
*                                                                     *
* ENTRY POINTS:                                                       *
*              ACCT                                                   *
*                                                                     *
* ENTRY PURPOSE:                                                      *
*              SEE FUNCTION.                                          *
*                                                                     *
* ENTRY LINKAGE:                                                      *
*              IATGRJR (JSSDRIVER) LOADS AND CALLS ACCT               *
*                                                                     *
* REGISTER CONVENTIONS:                                               *
*              R11->FCT                                               *
*              R12->TVT                                               *
*              R13->ACCTSAVE 'REGISTER SAVE AREA'                     *
*              R14->JSSRTN                                            *
*              R15->ACCT                                              *
*                                                                     *
* INPUT:                                                              *
*              ACCT COMMAND WITH PARAMETERS (SEE OPERATION)           *
*                                                                     *
* EXIT-NORMAL:                                                        *
*              ARETURN RC=0                                           *
*                                                                     *
* EXIT-ERROR:                                                         *
*              NONE                                                   *
*                                                                     *
* EXIT-USER:                                                          *
*              NONE                                                   *
*                                                                     *
* OUTPUT:                                                             *
*              FLAGS SET IN TVTUFLG1 (TVTRSVU6)    (SEE FUNCTION)     *
*                                                                     *
* EXTERNAL ROUTINES:                                                  *
*              ACCTSAVE - DATA CSECT                                  *
*                                                                     *
* CONTROL BLOCKS:                                                     *
*              IATYTVT             R/O                                *
*              IATYFCT             R/O                                *
*              IATYCNS             R/O                                *
*                                                                     *
* EXECUTABLE MACROS:                                                  *
*              JESREAD                                                *
*              ARELEASE                                               *
*              MESSAGE                                                *
*              IATXCNS                                                *
*              IATXSCN1                                               *
*                                                                     *
* ENQUEUE RESOURCES:                                                  *
*              NONE                                                   *
*                                                                     *
* MP LOCKS USED:                                                      *
*              NONE                                                   *
*                                                                     *
* MESSAGES:                                                           *
*              IAT0X06                                                *
*                                                                     *
* ABEND CODES:                                                        *
*              NONE                                                   *
*                                                                     *
***********************************************************************
ACCT     START 0
         IATYEQU  ,                                             AJSW008
         IATYREG  ,                                             AJSW008
         IATYTVT  TYPE=DSECT                                    AJSW008
         IATYFCT  ,                                             AJSW008
         IATYCNS  TYPE=INPUT,CODES=NO                           AJSW008
ACCT     CSECT                                                  AJSW008
         STM   R0,R15,8(R13)      *SAVE REGISTERS               AJSW008
         LR    R10,R15            *ESTABLISH BASE REGISTER      AJSW008
         USING ACCT,R10                                         AJSW008
         MODID BR=YES                                           AJSW008
         IATXCNS TYPE=GET         *EXTRACT IATYCNS FROM SPOOL   AJSW008
         USING CONSMESS,R9                                      AJSW008
         LR    R9,R1              *SAVE ADDR OF IATYCNS         AJSW008
         LH    R8,CONSNUM         *SAVE CALLING CONSOLE ID      AJSW008
         IATXSCN1 PFX=(R9),EOD=ACCTERR,ERROR=ACCTERR            AJSW008
         LTR   R1,R1              *IS THIS A KEYWORD PARM?      AJSW008
         BC    NZERO,ACCTERR      *YES, ERROR                   AJSW008
         LR    R1,R0              *POINT TO PARM                AJSW008
         LR    R0,R8              *COPY CALLING CONSOLE ID      AJSW008
         CLC   0(5,R1),=CL5'START' *WAS START SPECIFIED?        AJSW008
         BC    EQ,STARTIT          *YES GO PROCESS              AJSW008
         CLC   0(2,R1),=C'S '     *WAS START SPECIFIED?         AJSW008
         BC    EQ,STARTIT         *YES GO PROCESS               AJSW008
         CLC   0(4,R1),=CL4'STOP' *WAS STOP SPECIFIED?          AJSW008
         BC    EQ,STOPIT          *YES GO PROCESS               AJSW008
         CLC   0(2,R1),=C'P '     *WAS STOP SPECIFIED?          AJSW008
         BC    EQ,STOPIT          *YES GO PROCESS               AJSW008
         CLC   0(6,R1),=CL6'STATUS' *WAS STATUS SPECIFIED?      AJSW008
         BC    EQ,STATUS          *YES GO PROCESS               AJSW008
         CLC   0(2,R1),=C'I '     *WAS STATUS SPECIFIED?        AJSW008
         BC    EQ,STATUS          *YES GO PROCESS               AJSW008
ACCTERR  DS    0H                                               AJSW008
         LR    R0,R8              *COPY CALLING CONSOLE ID      AJSW008
         MESSAGE TEXT=ERROR,CONS=(R0),MLG=YES,PRTY=7            AJSW008
         B     RELEASE                                          AJSW008
STOPIT   DS    0H                 *PROCESS STOP COMMAND         AJSW008
         MVI   TVTUFLG1,TVTUCLOS  *SET FLAG FOR CLOSE FILE      AJSW008
         MESSAGE TEXT=STOPOK,CONS=(R0),MLG=YES,PRTY=7           AJSW008
         B     RELEASE                                          AJSW008
STARTIT  DS    0H                 *PROCESS START COMMAND        AJSW008
         MVI   TVTUFLG1,TVTUSTRT  *SET FLAG FOR START VALIDATE  AJSW008
         MESSAGE TEXT=STARTOK,CONS=(R0),MLG=YES,PRTY=7          AJSW008
         B     RELEASE                                          AJSW008
STATUS   DS    0H                 *PROCESS STATUS COMMAND       AJSW008
         TM    TVTUFLG1,TVTUOPEN  *SET FLAG FOR FILE OPEN       AJSW008
         BC    ALLON,OPENST                                     AJSW008
         MESSAGE TEXT=STCLOS,CONS=(R0),MLG=YES,PRTY=7           AJSW008
         B     RELEASE                                          AJSW008
OPENST   DS    0H                                               AJSW008
         MESSAGE TEXT=STOPEN,CONS=(R0),MLG=YES,PRTY=7           AJSW008
RELEASE  DS    0H                                               AJSW008
         IATXCNS TYPE=RELEASE,BUFFER=(R9) *RELEASE IATYCNS      AJSW008
         LM    R0,R15,8(R13)      *RESTORE CALLERS REGISTERS    AJSW008
         SR    R15,R15            *SET RETURN CODE              AJSW008
         BR    R14                *RETURN TO CALLER             AJSW008
         EJECT                                                  AJSW008
*-------------------------------------------------------------* AJSW008
*                  M E S S A G E S                            * AJSW008
*-------------------------------------------------------------* AJSW008
         SPACE 1                                                AJSW008
ERROR    DS    0F                                               AJSW008
         DC    AL1(69)                                          AJSW008
         DC    CL35'IAT0006 ***** INVALID PARM FIELD - '        AJSW008
         DC    CL34'RETRY COMMAND *****               '         AJSW008
         SPACE 2                                                AJSW008
STOPOK   DS    0F                                               AJSW008
         DC    AL1(69)                                          AJSW008
         DC    CL35'IAT0106 ***** ACCOUNT VALIDATION SU'        AJSW008
         DC    CL34'CCESSFULLY STOPPED *****          '         AJSW008
         SPACE 2                                                AJSW008
STARTOK  DS    0F                                               AJSW008
         DC    AL1(69)                                          AJSW008
         DC    CL35'IAT0206 ***** ACCOUNT VALIDATION SU'        AJSW008
         DC    CL34'CCESSFULLY STARTED *****          '         AJSW008
         SPACE 2                                                AJSW008
STCLOS   DS    0F                                               AJSW008
         DC    AL1(69)                                          AJSW008
         DC    CL35'IAT0306 ***** ACCOUNT VALIDATION IS'        AJSW008
         DC    CL34' INACTIVE *****                   '         AJSW008
         SPACE 2                                                AJSW008
STOPEN   DS    0F                                               AJSW008
         DC    AL1(69)                                          AJSW008
         DC    CL35'IAT0406 ***** ACCOUNT VALIDATION IS'        AJSW008
         DC    CL34' ACTIVE *****                     '         AJSW008
         SPACE 2                                                AJSW008
         IATXPTCH LT                                            AJSW008
UMODNUM  DC    CL7'AJSW008'        USER NUMBER                  AJSW008
APARNUM  DC    CL5' '              APAR NUMBER                  AJSW008
PTFNUM   DC    CL5'SP215'          PTF NUMBER                   AJSW008
         END   ACCT                                             AJSW008
++ SRC(ACCTSAVE) DISTLIB(ASRCLIB) .
 TITLE '''ACCTSAVE'' - REGISTER SAVE AREA FOR ''ACCT'' DSP.'    AJSW008
ACCTSAVE CSECT                                                  AJSW008
* USER MODS:                                                    AJSW008
*                                                               AJSW008
*      - REGISTER SAVE AREA FOR ACCT DSP.                       AJSW008
*        *** THIS MODULE MUST BE LINKEDIT'D NOT RENT/REUS ***   AJSW008
*                                                               AJSW008
         USING *,15                                             AJSW008
         DC    CL8'ACCTSAVE'      *REGS ARE SAVED/RESTORED BY.. AJSW008
         DC    16F'0'               ..STM R0,R15,8(R13) AND     AJSW008
*                                     ..LM  R0,R15,8(R13)       AJSW008
UMODNUM  DC    CL7'AJSW008'        USER NUMBER                  AJSW008
APARNUM  DC    CL5' '              APAR NUMBER                  AJSW008
PTFNUM   DC    CL5'SP215'          PTF  NUMBER                  AJSW008
         END   ACCTSAVE                                         AJSW008
