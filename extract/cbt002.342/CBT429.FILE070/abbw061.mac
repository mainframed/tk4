++ USERMOD(ABBW061) /* INSTALL OUR IEFU84 SMF EXIT:

       THIS MODIFICATION INSTALLS THE IEFU84 SMF EXIT WHICH WILL:

       WHEN A TYPE 40 RECORD IS ENCOUNTERED THEN IF IT IS A DYNAMIC
       UNALLOCATION THEN THE I/O COUNT IS ACCUMULATED IN THE FIRST
       FOUR BYTES IN THE USER SMF WORK AREA.  THIS WORKAREA IS POINT-
       ED TO BY THE JMRUCOM FIELD AND IS ALSO USED BY THE IEFACTRT
       SMF EXIT TO ACCUMULATE DATA FOR JOBS BETWEEN EXITS. THIS AREA
       IS GETMAINED BY THE FIRST EXIT TO NEED IT (IEFU83, IEFU84 OR
       IEFACTRT) AND FREEMAINED (ONLY) BY IEFACTRT WHEN PROCESSING
       A TYPE 05 OR TYPE 35 SMF RECORD.  WHENEVER A TYPE 04 OR 34
       RECORD IS ENCOUNTERED THEN THE TYPE 40 I/O COUNT ACCUMULATION
       IS ADDED TO THE FIRST DISK DEVICE ENTRY IN THAT RECORD. ALL
       TYPE40 RECORDS ARE SUPPRESSED FROM BEING PHYSICALLY WRITTEN
       TO THE SMF DATASETS (THEY ARE STOPPED BY THIS ROUTINE RETURN-
       ING WITH RC=4 BUT THEY MUST BE ENABLED IN THE SMFPRM00 MEMBER
       OF PARMLIB FOR THIS ROUTINE TO EVER SEE THEM).

       THE BASIC REASON FOR DOING ALL THIS IS TO ALLOW FOR THE
       ACCOUNTING ROUTINES TO CORRECTLY CHARGE FOR ALL I/O WITHOUT
       COLLECTING MILLIONS OF TYPE40 RECORDS.

       TAPE I/O IS ADJUSTED TO DISK I/O BY K03/K02 AND THAT CODE
       MUST BE CHANGED IF THE ALGORITHM VALUES CHANGE.  THERE IS
       NO ATTEMPT TO COMPENSATE FOR THE (SLIGHT) DIFFERENCE IN
       I/O TIME USED IN COMPUTING STORAGE OCCUPANCY.

       THIS CODE MUST BE IN BOTH IEFU83 AND IEFU84 TO WORK.

       JCLIN IS REQUIRED ONLY IF UCC7 IS INSTALLED.
                                                                 */ .
++ VER(Z038) FMID(HBB2102) PRE(ABBW013) /*   MVSXA VER 2  */ .
++ JCLIN .
//GEN11 JOB WC07N0322,'531-1 RC CREWS'
//SG21 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,REUS,RENT',
//    UNIT='3380',SER=IPLXXX,N=SYS1,NAME=LPALIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE  DD  DSN=VS2.NPM.LPALIB,DISP=SHR
//SYSLIN DD *
  CHANGE USERU841(SASSU84)
  INCLUDE INCLUDE(UCCU84)
  INCLUDE INCLUDE(SASSU84)
  INCLUDE INCLUDE(ICMDSECT)
  CHANGE IEFU84(USERU842)
  INCLUDE SYSPUNCH(IEFU84)
  CHANGE IEFU84(USERU843)
  INCLUDE INCLUDE(FNMU83)
  ENTRY UCCU84
  NAME IEFU84(R)
/*
++ MOD(UCCU84)   LKLIB(INCLUDE) .
++ MOD(SASSU84)  LKLIB(INCLUDE) .
++ SRC(IEFU84) DISTLIB(ASRCLIB) .
         MACRO
         REGS
         LCLA  &R
.R       AIF   (&R EQ 16).END
R&R      EQU   &R
&R       SETA  &R+1
         AGO   .R
.END     MEND
         TITLE 'LAST CHANCE SMF RECORD EXAMINATION ROUTINE - IEFU84'
IEFU84   CSECT
         REGS
         STM   R14,R12,12(R13)     SAVE REGS
         BALR  R10,R0              SET UP BASE REG
         USING *,R10               USING
         L     R12,0(R1)           GET SMF RDW ADDRESS
         LH    R14,0(R12)          GET SMF RECORD LENGTH
         C     R14,=F'6'           CHECK IF LONG ENOUGH
         BL    EXIT                NO - DONT LOOK AT IT
         SPACE 2
*
*        THIS PART OF CODE SAVES IO COUNTS FROM TYPE40 RECORDS
*        AND ADDS THEM IN TO THE IO COUNTS IN THE 04/34 RECORDS.
*
         SPACE 1
CHECK40  CLI   5(R12),40           TYPE 40 RECORD ?
         BNE   CHECK04             NO - CHECK FOR TYPE 04
         USING SMFTYP40,R12        ESTABLISH ADDRESSING
*
         CLI   TDDFLG,X'02'        DYNAMIC UNALLOCATION (ONLY)
         BNE   SUPRESS             NO - DON'T TOUCH ANYTHING
         SR    R6,R6               CLEAR FOR DIVIDE
         LH    R7,TDDVAR           GET LENGTH OF DEVICE ENTRY SECTION
         D     R6,=F'8'            GET COUNT OF DEVICES
         LTR   R7,R7               ANY THERE ?
         BZ    SUPRESS             NO - GET OUT
         L     R3,16               CVT POINTER
         L     R3,0(R3)            GET TCB WORDS
         L     R3,4(R3)            GET CURRENT TCB
         L     R3,X'A4'(R3)        GET TCT POINTER
         LTR   R3,R3               IS THERE ONE ?
         BZ    SUPRESS             NO - GET OUT
         L     R3,X'1C'(R3)        GET JMR POINTER
         USING JMR,R3              ESTABLISH ADDRESSING
*
         SR    R9,R9               CLEAR REG 9
         ICM   R9,7,JMRUCOM+1      PICK UP USER COMMUNICATION FIELD
         LTR   R9,R9               ANY THERE NOW ?
         BNZ   T40HAVE             YES BYPASS GETMAIN & INIT
         LA    R4,SMFWSIZ          GET SIZE OF WORKAREA
         A     R4,=F'7'            ROUND UP TO
         N     R4,=X'FFFFFFF8'     A DOUBLE WORD
       GETMAIN R,LV=(R4),SP=255    GETMAIN WORK AREA
         LR    R9,R1               SAVE POINTER
         USING SMFWORK,R9          SET UP ADDRESSING
         MVI   0(R9),X'0'          ZERO ONE
         MVC   1(SMFWSIZ-1,R9),0(R9)  ZERO IT ALL OUT
         STCM  R9,7,JMRUCOM+1      SAVE POINTER
*
T40HAVE  L     R6,T40SAVE          PICK UP ACCUMULATOR
         LA    R8,TDDEXCP          POINT TO FIRST DEVICE SECTION
T40LOOP  CLI   0(R8),X'20'         DISK UNIT ?
         BNE   *+12                NO - LOOK FOR TAPE
         A     R6,4(R8)            ADD EXCP COUNT TO BUCKET
         B     T40NEXT             AND GO GET NEXT DEVICE
         CLI   0(R8),X'80'         TAPE UNIT ?
         BNE   T40NEXT             NO - SKIP
         L     R1,4(R8)            GET TAPE EXCP COUNT
*
*        1984  ALGORITHM :
*
*        M     R0,=F'12272'        MULTIPLY BY K03 * BLKSTAPE * 10E5
*        D     R0,=F'12052'        DIVIDE BY K02 * BLKSDISK * 10E5
*
*        1985  ALGORITHM :
*
         M     R0,=F'95070'        MULTIPLY BY K03 * BLKSTAPE * 10E6
         D     R0,=F'18416'        DIVIDE BY K02 * BLKSDISK * 10E6
*
         AR    R6,R1               AND ADD TO ACCUMULATOR
T40NEXT  LA    R8,8(R8)            POINT TO NEXT DEVICE SECTION
         BCT   R7,T40LOOP          DO ALL DEVICES
         ST    R6,T40SAVE          SAVE ACCUMULATED VALUE
         B     SUPRESS             THEN END
         DROP  R3,R9,R12
*
CHECK04  CLI   5(R12),04           TYPE 04 RECORD ?
         BE    *+12                YES - GO UNLOAD I/O COUNTS
         CLI   5(R12),34           TYPE 34 RECORD ?
         BNE   EXIT                NO - END
         USING SMFTYP04,R12        ESTABLISH ADDRESSING
*
         L     R3,16               CVT POINTER
         L     R3,0(R3)            GET TCB WORDS
         L     R3,4(R3)            GET CURRENT TCB
         L     R3,X'A4'(R3)        GET TCT POINTER
         LTR   R3,R3               IS THERE ONE ?
         BZ    EXIT                NO - GET OUT
         L     R3,X'1C'(R3)        GET JMR POINTER
         USING JMR,R3              ESTABLISH ADDRESSING
         SR    R9,R9               CLEAR REG 9
         ICM   R9,7,JMRUCOM+1      PICK UP USER COMMUNICATION FIELD
         LTR   R9,R9               ANY THERE NOW ?
         BZ    EXIT                NO - NOTHING TO REPORT
         USING SMFWORK,R9          SET UP ADDRESSING
         CLC   T40SAVE(4),=F'0'    ANYTHING TO REPORT ?
         BE    EXIT                NO - SKIP REST
*
         SR    R6,R6               CLEAR FOR DIVIDE
         LH    R7,SMF4LENN         GET LENGTH OF DEVICE ENTRY SECTION
         D     R6,=F'8'            GET COUNT OF DEVICES
         LTR   R7,R7               ANY THERE ?
         BZ    EXIT                NO - GET OUT
         LA    R8,SMF4DEVC         POINT TO FIRST DEVICE SECTION
T04LOOP  CLI   0(R8),X'20'         DISK UNIT ?
         BE    T04HIT              YES - UNLOAD HERE
         LA    R8,8(R8)            POINT TO NEXT DEVICE SECTION
         BCT   R7,T04LOOP          DO ALL DEVICES
         B     EXIT                NONE FOUND .....
T04HIT   A     R6,T40SAVE          ADD EXISTING TYPE 04 COUNT
*
         ST    R6,4(R8)            UPDATE TYPE04×34 EXCP COUNT
         MVC   T40SAVE(4),=F'0'    RESET T40SAVE FIELD
*
         B     EXIT                THEN END
         DROP  R3,R9,R12
*
*        COMMON EXIT CODE
*
         SPACE 1
EXIT     LM    R14,R12,12(R13)     RESTORE REGS
         SR    R15,R15             CLEAR REG TO WRITE RECORD
         BR    R14                 RETURN
         SPACE 1
SUPRESS  LM    R14,R12,12(R13)     RESTORE REGS
         LA    R15,4               DON'T WRITE THIS RECORD
         BR    R14                 RETURN
         SPACE 1
         LTORG
         SPACE 1
TOTWORK  DSECT
SMFWORK  EQU   *
T40SAVE  DS    F                  TYPE 40 I/O COUNTER (FROM IEFU83)
         DS    F                  EXTRA WORD FOR FUTURE USE
C1ASAVE  DS    F                  TOTAL JOB TCB MILLISECONDS (C1A)
C1CSAVE  DS    F                  TOTAL JOB TAPE MOUNTS (C1C)
         DS    F                  EXTRA WORD FOR FUTURE USE
         DS    F                  EXTRA WORD FOR FUTURE USE
C1BSAVE  DS    D                  TOTAL JOB VMEM OCCUPANCY (C1B)
C1FSAVE  DS    D                  TOTAL JOB COMM (C1F) (TPUT,TGET)
C1JSAVE  DS    D                  TOTAL JOB I/O TIME (C1J) (DISK,TAPE)
         DS    D                  EXTRA DOUBLE WORD FOR FUTURE USE
         DS    D                  EXTRA DOUBLE WORD FOR FUTURE USE
SMFWSIZ  EQU   *-SMFWORK          LENGTH OF WORK AREA
         EJECT
        IEFJMR
         EJECT
SMFTYP04 DSECT
       IFASMFR 04
         EJECT
SMFTYP40 DSECT
       IFASMFR 40
         END
