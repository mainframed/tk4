++ USERMOD(ABBW058) /* ADD IEFUJI SMF EXIT ROUTINE

         THE FUNCTION OF THIS PROGRAM IS TO TAKE THE ACCOUNT NUMBER
         FROM THE FIRST ACCOUNTING FIELD AND STORE IT IN THE ACCT
         FIELD OF THE ACF2 LOGONID.

                                                                 */ .
++ VER(Z038) FMID(HBB2102) PRE(ACF5000) .
++ JCLIN .
//GEN49 JOB WC07N0044,'531-1 CM SINGER'
//SG21  EXEC LINKS,
// PARM='XREF,LET,LIST,RENT',
//    UNIT='3350',SER=IPLXXX,N=SYS1,NAME=LPALIB,P1=' ',
//    MOD=,P2=' ',CLASS=T
//LK.SYSPUNCH DD DUMMY
//INCLUDE DD DSN=MVS3.INCLUDE,DISP=SHR
//SYSLIN DD *
 INCLUDE INCLUDE(IEFUJI)
 ENTRY IEFUJI
 NAME IEFUJI(R)
/*
++ SRC(IEFUJI) DISTLIB(ASRCLIB) .
IEFUJI TITLE '*** SMF JOB INITIATION EXIT *** IEFUJI'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  ROUTINE NAME - IEFUJI                                              *
*          DATE - 15 NOV 1983                                         *
*          BRUCE R. MINTON                                            *
*          GENERAL DYNAMICS - DATA SYSTEMS DIVISION                   *
*          P.O. BOX 85808                                             *
*          SAN DIEGO, CALIFORNIA 92138                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 4
         ACFREGS
IEFUJI CSECT
         SAVE  (14,12),,*              SAVE REGS
         LR    R10,R15                 BASE REGISTER
         USING IEFUJI,R10              SET UP ADDRESSABILITY
         LR    R8,R1                   SAVE PARM INFO
         GETMAIN RU,LV=WORKLEN         GET WORKING STORAGE
         LR    R9,R1                   SAVE POINTER
         USING WORKAREA,R9             SET UP ADDRESSABILITY
         ST    R1,8(R13)               <= CHAIN THE
         ST    R13,4(R1)               <= SAVE
         LR    R13,R1                  <= AREAS
         MVI   TSOFLAG,X'00'           TURN TSO FLAG OFF
         L     R3,16                   GET CVT POINTER
         L     R4,0(R3)                GET TCB WORDS
         L     R5,12(R4)               GET CURRENT ASCB POINTER
         L     R6,172(R5)              GET POINTER TO JOBNAME FIELD
         LTR   R6,R6                   IS IT A BATCH JOB?
         BZ    CHKTSO                  ..NO, SEE IF IS TSO
         B     ACF2CVT                 ..YES, PROCESS ACCT NUMBER
CHKTSO   DS    0H
         L     R7,144(R5)              GET POINTER TO OUCB
         L     R15,=A(X'80000000'+CKTASK) SET UP FOR 31 BIT MODE
         BSM   R0,R15                  SWITCH TO 31 BIT MODE
CKTASK   DS    0H
         TM    18(R7),X'20'            IS IT A TSO TASK?
         BO    OFF31BIT                ..YES, PROCESS ACCT NUMBER
         B     A24BIT                  ..NO, DONT DO ANYTHING
OFF31BIT DS    0H
         MVI   TSOFLAG,X'01'           TURN TSO FLAG ON
         L     R15,=A(X'00000000'+ACF2CVT) SET UP FOR 24 BIT MODE
         BSM   R0,R15                  SWITCH TO 24 BIT MODE
ACF2CVT  DS    0H
         ACFINCVT R11,NONE=RETURN      FIND ACF2 CVT
         USING ACCVT,R11               ADDRESS IT
         ACFGUCB R7,NONE=RETURN,       GET ACF2 ACUCB                  X
               INLINE=YES,SYS=AOS2
         USING ACUCB,R7                ADDRESS ACUCB
         MVC   ACCNUMBR(2),INIT        INITIALIZE ACCOUNT FIELD
         MVC   ACCNUMBR+2(38),BLANKS   CLEAR ACCOUNT FIELD
         L     R6,12(R8)               GET ACCOUNT FIELD ADDR
         CLI   0(R6),0                 WAS IT SPECIFIED?
         BE    MOVEACCT                ..NO, GO PUT DEFAULT
         SR    R15,R15                 CLEAR R15
         ICM   R15,1,1(R6)             GET LENGTH OF FIELD
         BZ    MOVEACCT                NULL FIELD, GO PUT DEFAULT
         EX    R15,MVCACCT             MOVE ACCT FIELD TO ACF2 LOGONID
MOVEACCT DS    0H
         L     R3,ACULRECP             POINT AT LOGONID RECORD
         USING LIDREC,R3               ADDRESS LOGONID
         MVC   LIDACCT,ACCNUMBR        MOVE ACCOUNT NUMBER
         MVI   0(R6),X'04'             SET UP FOUR ACCT FIELDS
         LA    R4,2(R6,R15)            BUMP TO SECOND ACCT FIELD
         TM    TSOFLAG,X'01'           IS IT TSO?
         BO    MOVBADGE                ..YES, SKIP VTAM NODE NAME
         MVC   0(2,R4),INIT            PUT DUMMY 2ND ACCOUNT FIELD
MOVBADGE DS    0H
         SR    R5,R5                   CLEAR R5
         ICM   R5,1,0(R4)              GET LENGTH OF 2ND ACCT FIELD
         LA    R4,1(R5,R4)             BUMP TO THIRD ACCT FIELD
         LA    R14,8              *MAXIMUM LENGTH OF LOGONID    ACFW009
         LA    R15,LIDLID         *POINT TO LOGONID             ACFW009
LIDLOOP  CLI   0(R15),C' '        *BLANK YET                    ACFW009
         BE    LIDBLNK            *YES - STOP SCAN              ACFW009
         LA    R15,1(R15)         *POINT TO NEXT CHARACTER      ACFW009
         BCT   R14,LIDLOOP        *AND AROUND AGAIN             ACFW009
LIDBLNK  LA    R14,LIDLID         *POINT TO LOGONID             ACFW009
         SR    R15,R14            *COMPUTE LENGTH OF LOGONID    ACFW009
         LTR   R15,R15            *TEST FOR ZERO                ACFW009
         BZ    LIDNULL            *YES - IT WAS ZERO            ACFW009
         STC   R15,0(R4)          *MOVE IN LOGONID LENGTH       ACFW009
         BCTR  R15,R0             *SUBTRACT ONE FOR EX INST     ACFW009
         EX    R15,LIDMOVE        *MOVE IN LOGONID              ACFW009
         B     *+10               *SKIP MOVE FOR DUMMY LOGONID  ACFW009
LIDNULL  MVC   0(2,R4),INIT       *MOVE IN DUMMY 3ND ACCT FLD   ACFW009
         LA    R4,2(R15,R4)       *POINT TO DIVISION FIELD      ACFW009
         MVI   0(R4),X'02'        *MOVE IN LENGTH OF DIVISON    ACFW009
         MVC   1(2,R4),LIDDIV     *MOVE IN DIVISION CODE        ACFW009
         B     RETURN             *ALL DONE                     ACFW009
LIDMOVE  MVC   1(0,R4),LIDLID     *MOVE IN LOGONID              ACFW009
         B     RETURN                  ALL DONE
A24BIT   DS    0H
         L     R15,=A(X'00000000'+RETURN) SET UP FOR 24 BIT MODE
         BSM   R0,R15                  SWITCH TO 24 BIT MODE
RETURN   DS    0H
         LR    R1,R9                   COPY WORKAREA ADDR
         L     R13,SAVEAREA+4          POINT AT SAVE AREA
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE
         RETURN (14,12),RC=0           ALL DONE
         EJECT
         LTORG
INIT     DC    XL2'01F0'               LENGTH=1, ACCT=0
BLANKS   DC    CL38' '                 BLANKS
MVCACCT  MVC   ACCNUMBR(0),1(R6)       COPY ACCOUNT FIELD
WORKAREA DSECT
SAVEAREA DS    9D
TSOFLAG  DS    CL1
ACCNUMBR DS    CL40
WORKLEN  EQU   *-WORKAREA
         LIDREC
         ACUCB
         ACFASVT
         ACCVT
         IHAPSA
         IHAASCB
         END IEFUJI
