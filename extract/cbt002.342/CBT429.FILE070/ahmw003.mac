++ USERMOD(AHMW003) /* HSM - ACF2 SUPPORT:

       THIS MODIFICATION IS A FRONT END FOR IGX00024 ( THE HSM
       COMMUNICATIONS SVC).  ALL USER HSM COMMANDS ARE PASSED ONE
       AT A TIME THROUGH THIS INTERFACE.  NOTE THAT THE VOLUME
       FUNCTIONS AND THE HSEND COMMAND ARE NOT CHECKED IN THIS EXIT,
       THEIR USE IS LIMITED BY THE HSM AUTH COMMAND.
                                                                 */ .
++ VER(Z038) FMID(HHM2302) .
++ JCLIN .
//GEN11 JOB WC07N0323,'W15311 C SINGER'
//SG17 EXEC LINKS,
// PARM='RENT,LIST,XREF,LET',
//    UNIT='3380',SER=IPLXXX,N=SYS1,NAME=LPALIB,P1=' ',
//    MOD=,P2=' ',CLASS=T
//SYSPUNCH DD DUMMY
//AOS28 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS28
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//ACFMOD DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.ACFMOD
//SYSLIN DD *
 INCLUDE AOS28(IGX00024)
 INCLUDE INCLUDE(ACX00024)
 INCLUDE ACFMOD(ACF$GCVT)
 ENTRY ACX00024
 NAME IGX00024(R)
/*
++ SRC (ACX00024) DISTLIB(ASRCLIB) .
         TITLE 'ACF2 FRONT END FOR HSM SVC INTERFACE'
         ACDSV
         ACCVT
         ACFREGS
ACX00024 CSECT
         BALR  R15,0                  LOCATE ENTRY POINT
         USING *,R15                  ADDRESS IT
         SAVE  (14,12),,*             SAVE CALLERS REGISTERS
         DROP  R15                    DROP IT
         BALR  R12,0                  LOCATE ENTRY POINT
         USING *,R12                  ADDRESS IT
         LR    R11,R1                 INIT BASE FOR MWE
         USING MWE,R11                SET UP ADDRESSABLITY
         SR    R9,R9                  CLEAR ACDSV BASE REGISTER
* * * * * * * * * * * * * * * * * * * * * * * *
*   EXAMINE FUNCTION CODE PASSED TO THE SVC   *
*   IF APPROPRIATE, PASS CONTROL ON TO THE    *
*   HSM SVC WITH A MINIMUM AMOUNT OF FUSS     *
* * * * * * * * * * * * * * * * * * * * * * * *
         LTR   R10,R0                 IS CHECK FUNCTION CODE > 0?
         BNP   HSMSVC                 ..NO, GO TO HSM SVC
         C     R10,=F'12'             IS FUNCTION CODE OUT OF RANGE?
         BH    HSMSVC                 ..YES, GO TO HSM SVC
         MH    R10,=H'04'             MULTIPLY BY 4 FOR BRANCH INDEX
FUNCTION B     FUNCTION(10)           CHOSE THE PROPER FUNCTION
F1       B     HSMSVC                 START UP HSM
F2       B     HSMSVC                 SHUT DOWN HSM
F3       B     RECALL                 RECALL DATASET
F4       B     HSMSVC                 UNUSED
F5       B     RECOVER                RECOVER DATASET
F6       B     MIGRATE                MIGRATE DATASET
F7       B     BACKDS                 BACKUP DATASET
F8       B     HSMSVC                 RETURN CDS RECORD
F9       B     HSMSVC                 SEND COMMAND TO HSM
F10      B     HSMSVC                 POST REQUEST COMPLETE
F11      B     HSMSVC                 MWE PURGE REQUEST
F12      B     DELETE                 DELETE MIGRATED
         EJECT
RECALL   DS    0H
         B     HSMSVC                 IMPLICIT OR EXPLICIT RECALL OK
         SPACE 3
RECOVER  DS    0H                     RECOVER DATASET
         LA    R6,MWEDSN              GET DSNAME ADDRESS
         LA    R7,MWEVSN              GET VOLSER ADDRESS
         BAL   R8,VALIDATE            VALIDATE AND RETURN HERE IF OK
         CLC   MWENDSN,=44C' '        WAS A NEW NAME SPECIFIED?
         BE    HSMSVC                 ..NO, GO TO HSM SVC
         CLC   MWENDSN,MWEDSN         IS NEW NAME SAME AS OLD NAME?
         BE    HSMSVC                 ..YES, GO TO HSM SVC
         LA    R6,MWENDSN             GET RENAME ADDRESS
         XR    R7,R7                  SET A ZERO VOLSER ADDRESS
         BAL   R8,VALIDATE            VALIDATE AND RETURN HERE IF OK
         B     HSMSVC                 ALL DONE, GO DO HSM SVC
         SPACE 3
MIGRATE  DS    0H                     MIGRATE DATASET
         LA    R6,MWEDSN              GET DSNAME ADDRESS
         LA    R7,MWEVSN              GET VOLSER ADDRESS
         BAL   R8,VALIDATE            VALIDATE AND RETURN HERE IF OK
         B     HSMSVC                 ALL DONE, GO DO HSM SVC
         SPACE 3
BACKDS   DS    0H                     BACKUP DATASET
         LA    R6,MWEDSN              GET DSNAME ADDRESS
         LA    R7,MWEVSN              GET VOLSER ADDRESS
         BAL   R8,VALIDATE            VALIDATE AND RETURN HERE IF OK
         B     HSMSVC                 ALL DONE, GO DO HSM SVC
         SPACE 3
DELETE   DS    0H                     DELETE DATASET
         LA    R6,MWEDSN              GET DSNAME ADDRESS
         XR    R7,R7                  SET VOLSER ADDRESS TO ZERO
         BAL   R8,VALIDATE            VALIDATE AND RETURN HERE IF OK
         B     HSMSVC                 ALL DONE, GO DO HSM SVC
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   R5 ==> RETURN CODE FROM ACCESS REQUEST                      *
*   R6 ==> ADDRESS OF 44 CHARACTER DATASET NAME FOR ACCESS RULE *
*   R7 ==> ADDRESS OF 6 BYTE VOLSER                             *
*   R8 ==> RETURN ADDRESS IF REQUEST IS VALID                   *
*   R9 ==> ADDRESS OF ACDSV                                     *
*   IF ACCESS IS AUTHORIZED, CONTROL IS RETURNED TO CALLER      *
*   IF ACF2 IS NOT ACTIVE, CONTROL IS RETURNED TO CALLER        *
*   IF ACCESS IS NOT AUTHORIZED, ALL FURTHER PROCESSING ABORTED *
*   IF ACF2 PARMS ARE INVALID, ALL FURTHER PROCESSING ABORTED   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
VALIDATE DS    0H                     DELETE DATASET
         LTR   R9,R9                  DOES ACDSV EXIST?
         BNZ   INITDSV                ..YES, GO FILL IN THE VALUES
         GETMAIN RU,LV=ACFSPRML       GET WORK AREA FOR ACDSV
         LR    R9,R1                  SET POINTER TO GETMAINED AREA
         USING ACDSV,R9               SET UP ADDRESSABILITY
         SPACE 3
INITDSV  DS    0H
         MVI   ACFSPARM,X'00'         INIT 1ST BYTE OF ACDSV TO ZERO
         MVC   1(ACFSPRML-2,R9),ACFSPARM  ZERO OUT THE REST OF ACDSV
         MVI   ACFSPREQ,ACFSPRAC      VALIDATE DSN/VOL/DDN
         MVI   ACFSPID1,ACFSPIUR      SECURITY REQUESTOR ID = USER REQ
         MVI   ACFSPAC1,ACFSPAOT      ACCESS TYPE RENAME/SCRATCH/ALLOC
         ST    R6,ACFSPDSN            INIT DSN ADDRESS
         LTR   R7,R7                  SHOULD VOLSER BE USED?
         BZ    USERSVC                ..NO, GO ISSUE SVC
         CLC   0(6,R7),=C'      '     IS VOLSER BLANK?
         BE    USERSVC                ..YES, DONT USE VOLSER
         CLI   0(R7),C'*'             IS THIS GLOBAL VOLUME FUNCTION?
         BE    USERSVC                ..YES, DONT USE VOLSER
         ST    R7,ACFSPVOL            INIT VOLSER INFORMATION
         SPACE 3
USERSVC  ACFSVC ACDSV,TYPE=S,NONE=NOACF2  ISSUE ACF2 SVC
         LTR   R15,R15                TEST SVC RETURN CODE
         BZR   R8                     EVERTHING OK, RETURN TO CALLER
         CH    R15,=H'12'             IS REQUEST A VIOLATION?
         BE    ABORT                  ..YES, DO NOT ALLOW REQUEST
         B     BADPARM                MUST BE INVALID SVC INPUT PARM
         SPACE 3
NOACF2   DS    0H
         BR    R8                     RETURN TO COMMAND IF ACF2 INACT
         SPACE 3
ABORT    DS    0H
         LA    R5,24                  INDICATE HSM SECURITY VIOLATION
         B     TESTFREE               GO FREE STORAGE IF NEEDED
         SPACE 3
BADPARM  DS    0H
         LA    R5,100                 INDICATE BAD HSM PARM LIST
         B     TESTFREE               GO FREE STORAGE IF NEEDED
         SPACE 3
TESTFREE DS    0H
         LTR   R9,R9                  IS FREEMAIN NEEDED?
         BZ    RETURN                 ..NO, SKIP FREEMAIN
         FREEMAIN RU,LV=ACFSPRML,A=(R9)  FREE STORAGE
         SPACE 3
RETURN   DS    0H
         L     R14,12(,R13)           RESTORE R14
         LR    R15,R5                 MOVE RETURN CODE TO R15
         LM    R0,R12,20(R13)         RESTORE CALLERS REGISTERS
         BR    R14                    RETURN TO CALLER
         SPACE 3
HSMSVC   DS    0H
         LTR   R9,R9                  IS FREEMAIN NEEDED?
         BZ    PROCEED                ..NO, SKIP FREEMAIN
         FREEMAIN RU,LV=ACFSPRML,A=(R9)  FREE STORAGE
         SPACE 3
PROCEED  DS    0H
         L     R14,12(,R13)           RESTORE R14
         L     R15,IGX00024           POINT AT IGX00024
         LM    R0,R12,20(R13)         RESTORE CALLERS REGISTERS
         BR    R15                    BRANCH TO HSM SVC
         LTORG
IGX00024 DC    V(IGX00024)            CSECT ADDRESS FOR REAL HSM SVC
MWE      DSECT                        HSM MANAGEMENT WORK ELEMENT
         DS    CL148
MWEDSN   DS    CL44                   MWE DATASET NAME
         DS    CL20
MWEVSN   DS    CL6                    MWE VOLSER
         DS    CL70
MWERETR  DS    0CL1                   MWE RECOVER EXTENTION (MWE+256)
MWENDSN  DS    CL44                   MWE NEW DATASET NAME
MWEFRVOL DS    CL6                    MWE VOLSER
         END   ACX00024
