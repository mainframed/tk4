++USERMOD(AJSW038)     /*
                                WRITE-TO-PROGRAMMER DSP (WTP) */.
++VER(Z038) FMID(HJS2215).
++JCLIN.
//GEN11 JOB WC07Z0044,'531-0 C SINGER'
//SG21 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,RENT,REUS',
//    UNIT='3350',SER=IPLXXX,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
  INCLUDE INCLUDE(IATUTWTP)
 NAME IATUTWTP(R)
++SRC(IATUTWTP) DISTLIB(ASRCLIB) .
WTP      TITLE 'WRITE-TO-PROGRAMMER DSP'
IATUTWTP CSECT
IATUTWTP AMODE 31
IATUTWTP RMODE ANY
         IATYASM
***********************************************************************
*                                                                     *
*        MODULE NAME = IATUTWTP                                       *
*                                                                     *
*        DESCRIPTIVE NAME = NYL OPERATOR WRITE TO PROGRAMMER          *
*                                                                     *
*        COPYRIGHT = NONE                                             *
*                                                                     *
*        STATUS = USER WRITTEN JES3 DSP FOR HJS2215                   *
*                                                                     *
*        FUNCTION = THE JESMSG DATASET WILL BE UPDATED BY THE TEXT OF *
*                   THE CALL COMMAND FOR WTP, AND THE TEXT WILL ALSO  *
*                   BE SENT TO THE TSO OWNER OF THE JOB, IF ANY.      *
*                                                                     *
*        OPERATION =                                                  *
*                   -WRITE TO PROGRAMMER DSP (WTP) IS INVOKED BY AN   *
*                    OPERATOR CALL COMMAND:                           *
*                           *X WTP,J=XXXX,'MESSAGE TEXT'              *
*                    WTP WILL PUT 'TEXT' INTO JOB XXXX'S JESMSG       *
*                    DATASET WHERE XXXX IS A 1 TO 4 DIGIT JOB NUM.    *
*                                                                     *
*                   -REGISTER CONVENTIONS:                            *
*                          R8  - WTP RESQ POINTER                     *
*                          R10 - BASE REGISTER                        *
*                          R11 - POINTER TO FCT                       *
*                          R12 - POINTER TO TVT                       *
*                                                                     *
*        NOTES = NONE                                                 *
*                                                                     *
*        MODULE TYPE = CALLABLE DSP                                   *
*                                                                     *
*        ENTRY POINT = IATUTWTP                                       *
*                                                                     *
*        INPUT = OPERATOR COMMAND - SEE OPERATION SECTION             *
*                                                                     *
*        OUTPUT = OPERATOR MSG PLACED INTO JOB'S JESMSG DATASET AND   *
*                 MESSAGE TEXT SENT TO TSO OWNER OF JOB               *
*                                                                     *
*        EXIT =  NORMAL RETURN TO JSS                                 *
*                                                                     *
*        MESSAGES = IAT0X02 IAT0X03                                   *
*                                                                     *
*        ABEND CODES = NONE                                           *
*                                                                     *
***********************************************************************
         TITLE 'IATYFCT - FUNCTION CONTROL TABLE'
         IATYFCT
         EJECT
         TITLE 'IATYEQU - STANDARD EQUATES'
         IATYEQU
         EJECT
         TITLE 'IATYREG - REGISTER EQUATES'
         IATYREG
         EJECT
         TITLE 'IATYTVT - TRANSFER VECTOR TABLE'
         IATYTVT TYPE=DSECT
         EJECT
         TITLE 'IATYRSQ - RESIDENT JOB QUEUE TABLE'
         IATYRSQ
         EJECT
         TITLE 'IATYJDA - JOB DATA ACCOUNTING BLOCK'
         IATYJDA
         EJECT
         TITLE 'IATYCND - CONSOLE STATUS TABLE'
         IATYCND
         EJECT
         TITLE 'IATYCNS - CONSOLE BUFFER MAP'
         IATYCNS TYPE=(FCTQ,MLOG,INPUT)
         EJECT
         TITLE 'IATYDST - JES3 DESTINATION CODES'
         IATYDST
         EJECT
         TITLE 'IATYCNC - CONSOLE SERVICE CONSTANTS'
         IATYCNC TYPE=DSECT
         EJECT
         TITLE 'IATYMPC - MAIN PROCESSOR CONTROL TABLE'
         IATYMPC
         EJECT
         TITLE 'IATYDSP - DSP DICTIONARY ENTRY'
         IATYDSP
         EJECT
         TITLE 'IATYJQE - JOB QUEUE ELEMENT'
         IATYJQE
         EJECT
         TITLE 'IATYJCT - JOB CONTROL TABLE'
         IATYJCT
         EJECT
         TITLE 'WRITE TO PROGRAMMER UTILITY'
***********************************************************************
*             I N I T I A L I Z E    W T P    D S P                   *
***********************************************************************
IATUTWTP CSECT
         USING IATUTWTP,R10
         LR    R10,R15
         IATYMOD BR=YES
         SPACE 1
*---------------------------------------------------------------------*
* READ JOB DESCRIPTION BLOCK                                          *
*---------------------------------------------------------------------*
         SPACE 1
*DEBUG  -  NEXT TWO LINES INSURE FRESH COPY EACH TIME FOR TESTING     *
*        L     R1,FCTDSPDC
*        OI    DSPFLAG1-DSPSTART(R1),DSPNUDRV
*DEBUG                                                                *
         MVI   WTPFLG1,X'00'       *CLEAR WTP FLAG BYTE
         L     R8,FCTRQAD          *R8 = A(RQ ENTRY)
         USING RQSTART,R8          *ESTABLISH ADDRESSIBILITY
         LA    R9,RQJDBFDB         *R9 = A(JDAB FDB)
         JESREAD FDB=(R9),ID=JDAB,ERROR=WTP028  *READ IN JDAB
         L     R9,RQJDBFDB         *R9 = A(JDAB)
         USING JDABSTRT,R9
         MVC   LLCONS(2),JDABCNID  *SAVE CONSOLE ID
         LR    R6,R9
         AH    R6,JDABFIXL         *PT TO 1ST SE ENTRY
         USING JDABNTRY,R6
WTP001   DS    0H
         CLC   JDABSENO,FCTSESEQ   *Q. CORRECT SE #
         BE    WTP003              *A. YES, CONTINUE
         CLC   JDABVEND,TVTRMFF    *Q. END OF JDAB?
         BE    WTP002              *A. YES, ERROR
         AH    R6,JDABVARL         *POINT TO NEXT ENTRY
         B     WTP001              *CONTINUE
WTP002   DS    0H
         LA    R3,MSG3             *WTP ERROR MESSAGE
         BAL   R2,WTP030           *GO SEND MESSAGE
WTP002A  DS    0H
         ARELEASE FDB=RQJDBFDB     *RELEASE JDAB
         B     JSSRTN              *RETURN TO JSS
WTP003   DS    0H
         MVC   WTPPRFDB,JDABPFDB   *SAVE ADDR OF PARAM BUFFER
         ARELEASE FDB=RQJDBFDB     *RELEASE JDAB
         OC    WTPPRFDB(L'FDBDATA),WTPPRFDB *Q. ANY PARM BUFFER
         BC    NZERO,WTP003A       *A. YES, CONTINUE
         LA    R3,MSG6             *NO PARM MESSAGE
         BAL   R2,WTP030           *GO SEND MESSAGE
         B     JSSRTN              *RETURN TO JSS
         DROP  R8                  *YRSQ
WTP003A  DS    0H
         LA    R1,WTPPRFDB
         DROP  R6,R9              *YJDA
         IATXCNS TYPE=GET         *GET PARAMETER BUFFER
         ST    R1,UWTPXCNS        *SAVE FOR XCNS TYPE=RELEASE
         LR    R6,R1              *ADDR OF PARM BUFFER
         USING CONSMESS,R6
         SLR   R7,R7              *CLEAR R7
         IC    R7,CONSCAN         *GET SCAN COUNT
         LA    R6,CONMESSG        *POINT TO INPUT MESSAGE
         LA    R6,0(R7,R6)        *POINT TO 1ST CHAR TO TEST
         LA    R7,10              *COUNT FOR JOB # SEARCH
         DROP  R6                 *YCNS
WTP004   DS    0H
         CLC   0(2,R6),=C'J='      *Q. J= PARAMETER
         BC    EQ,WTP005           *A. YES, CONTINUE
         LA    R6,1(R6)            *POINT TO NEXT BYTE
         BCT   R7,WTP004           *CONTINUE
         B     WTP021              *JOB # NOT FOUND
WTP005   DS    0H
         LA    R6,2(0,R6)          *BUMP PAST J=
         L     R5,ZEROJBNO         *INITIALIZE REG TO C'0'
         LA    R7,4                *JOB NUM MAX 4 DIGITS
WTP006   DS    0H
         TM    0(R6),X'F0'         *Q. VALID DIGIT?
         BC    NALLON,WTP021       *A. NO, ERROR
         SLL   R5,8                *SHIFT NUMBER LEFT ONE BYTE
         IC    R5,0(R6)            *INSERT LEFTMOST JOB NUM DIGIT
         LA    R6,1(R6)            *POINT TO NEXT CHARACTER
         CLI   0(R6),C','          *Q. END OF JOB NUM?
         BE    WTP007              *A. YES, GO CONVERT NUM TO BINARY
         CLI   0(R6),C' '          *Q. ANY MORE DIGITS?
         BE    WTP007              *A. NO, BRANCH
         BCT   R7,WTP006           *KEEP SEARCHING FOR 4 DIGITS MAX
         B     WTP021              *ERROR
WTP007   DS    0H
         ST    R5,FULLWORD         *GET JOB NUM IN FIELD
         MVC   MSG1NUM(4),FULLWORD *MOVE JOB NUM TO MSG
         PACK  FCTWORK(8),FULLWORD
         CVB   R4,FCTWORK          *PUT JOB NUM IN BINARY
         STH   R4,LLJOB#           *STORE BINARY JOB NUMBER
         LA    R7,50               *COUNT 50 CHARS FOR MSG
WTP007A  DS    0H
         CLI   1(R6),C''''         *Q. BEGINING OF TEXT
         BC    EQ,WTP007B          *A. YES, CONTINUE
         LA    R6,1(R6)            *INCREMENT INTO COMMAND
         BCT   R7,WTP007A          *CONTINUE
         B     WTP025              *ERROR
WTP007B  DS    0H
         LA    R5,2(R6)            *POINTER TO POSSIBLE END OF TEXT
WTP008   DS    0H
         CLI   0(R5),C''''         *Q. END OF TEXT
         BC    EQ,WTP009           *A. YES, CONTINUE
         CLI   0(R5),X'40'         *Q. ANY TEXT YET?
         BC    EQ,WTP008A          *A. NO, CONTINUE
         OI    WTPFLG1,TEXTFND     *INDICATE TEXT WAS FOUND
WTP008A  DS    0H
         LA    R5,1(0,R5)          *MOVE TO NEXT SLOT
         BCT   R7,WTP008           *SEARCH REMAINDER OF 50 SLOTS
         TM    WTPFLG1,TEXTFND     *Q. ANY TEXT FOUND?
         BC    ALLOFF,WTP025       *A. NO, CONTINUE
         LA    R3,MSG5             *R3 = A(ONLY 1ST 50 CHARS MSG)
         BAL   R2,WTP030           *GO ISSUE TOO MANY CHARS MSG
WTP009   DS    0H
         TM    WTPFLG1,TEXTFND     *Q. TEXT EVER FOUND?
         BC    ALLOFF,WTP025       *A. NO, CONTINUE
         LA    R7,2(R6)            *SET BEGINING OF MSG
         SR    R5,R7               *GET LENGTH OF MSG
         BC    MINUS+ZEROS,WTP025  *ERROR
         CL    R5,=F'51'           *Q. LONGER THAN 50 CHARS?
         BL    WTP010              *A. NO, CONTINUE
         LA    R5,50               *SEND ONLY 1ST 50 CHARS
WTP010   DS    0H
         XC    MSGTEXT,MSGTEXT     *CLEAR MESSAGE FIELD
         MVC   MSGSTART(50),CLFLD  *CLEAR MESSAGE FIELD
         BCTR  R5,0                *DECREMENT LENGTH FOR MOVE
         LA    R3,MSGSTART         *PT TO  MSG
         EX    R5,MOVE             *MOVE MSG IN
         LA    R3,1(R5,R3)         *R3 = A(END OF MSG)
         LA    R2,MSGTEXT          *GET ADDR OF MESSAGE AREA
         EX    R5,MOVE1            *MOVE IN MESSAGE TEXT
         LA    R2,1(R5,R2)         *POINT R2 TO END OF MSG
         ST    R2,FULLWORD         *SAVE END OF MSG ADDRESS
         MVI   0(R3),C''''         *MOVE IN END QUOTE
         LA    R5,30(R5)           *UPDTE LENGTH OF MESSAGE
         STC   R5,MSG              *PUT LENGTH IN MESSAGE
         LA    R5,52(R5)           *GET TOTAL MESSAGE LENGTH
         STC   R5,OPERMSG+1        *PUT LENGTH IN MESSAGE
         IATXCNS TYPE=RELEASE,BUFFER=UWTPXCNS *REL PARM FDB
         LH    R1,LLJOB#           *GET JOB NUMBER
         SPACE 1
***********************************************************************
*                PREPARE MESSAGE FOR JESMSG DATASET                   *
***********************************************************************
         SPACE 1
         IATXJQE JOBNUM=(R1),ERROR=WTP026
         LR    R5,R1               *JQE ADDRESS
         USING JQESTART,R5
*        LR    R1,R0               *JOB NAME ADDR AND LENGTH
         LR    R7,R0               *ADDR OF JOB NAME FOR MOVE
*        SRL   R1,24               *LENGTH ONLY
*        BCTR  R1,0                *REDUCE LENGTH FOR MOVE
*        XC    MSG1NAM,MSG1NAM     *CLEAR NAME FIELD
         MVC   MSG1NAM,0(R7)       *MOVE JOB NAME INTO MESSAGE
         L     R7,JQERESQ          *RESQUEUE FOR JOB
WTP011   DS    0H
         LTR   R7,R7
         BC    NZERO,WTP011A       *RESQ FOUND, GO INSERT MESSAGE
         LA    R3,MSG11            *GET NO JESMSG DATASET MESSAGE
         MVC   JOB#203,MSG1NUM     *PUT JOB NUMBER INTO MESSAGE
         BAL   R2,WTP030           *TELL OPER CAN'T ACCESS DATASET
         B     WTP012              *GO SEND MESSAGE TO TSO USER
WTP011A  DS    0H
         JESMSG RQ=(R7),TEXT=MSG,TYPE=STD,ERROR=WTP027
         LA    R3,MSG1             *ACCEPTED MSG
         BAL   R2,WTP030           *GO SEND MESSAGE
         USING RQSTART,R7          *ESTABLISH ADDRESSIBILITY
         SPACE 1
***********************************************************************
*              PREPARE MESSAGE FOR TSO USER IF THERE IS ONE           *
***********************************************************************
         SPACE 1
WTP012   DS    0H
         CLC   JQETUSID,TVTZERO    *Q. TSO ID?
         BC    EQ,WTP020           *A. NO, INFORM OPERATOR
         MVC   TSUID(7),JQETUSID   *MOVE TSO USER INTO MESSAGE
         MVC   TSOID(7),TSUID      *MOVE TSO USER INTO MESSAGE
         MVC   JOBNAME(8),MSG1NAM  *PUT JOB NAME IN TSO MSG
         MVC   JOBNUM(4),MSG1NUM   *PUT JOB NUMBER IN TSO MSG
         MVC   TSOID+7(7),CLFLD    *CLEAR END OF MESSAGE
         LA    R1,TSOID+7          *GET END OF USER ID FLD
WTP013   DS    0H
         BCTR  R1,0                *BACK UP ONE BYTE
         CLI   0(R1),C' '          *Q. IS IT BLANK
         BC    EQ,WTP013           *A. YES, CONTINUE
         MVC   1(7,R1),MSGEND      *MOVE IN END OF SEND MESSAGE
         L     R2,FULLWORD         *GET ADD OF END OF MESSAGE
         MVC   0(25,R2),USEREND    *MOVE IN END OF SEND MESSAGE
         SLR   R3,R3               *CLEAR R3
         LTR   R7,R7               *Q. IS THERE A RESQUEUE?
         BC    ZERO,WTP014         *A. NO, BRANCH
         TM    RQFLG5,RQDSEL       *Q. POSSIBLE TSO LOGON?
         BC    ALLOFF,WTP014       *A. NO, CONTINUE
         TM    RQFLG5,RQMVSTSO     *Q. TSO LOGON?
         BC    ALLOFF,WTP014       *A. NO, CONTINUE
*****       LOCATE TSO SYSTEM WHEN MSG IS SENT TO A LOGON         *****
         LA    R2,MAINDATA         *ADDR OF ADDR OF FIRST MAIN
         USING MPCSTART,R2
         SL    R2,=A(MPNEXT-MPCSTART) *MINUS CHAIN FIELD OFFSET
SRCHSYS  DS    0H
         ICM   R2,X'F',MPNEXT      *GET NEXT MAIN
         BC    ZERO,WTP028         *NONE FOUND, EXIT WITH ERR MSG
         CLC   MPSEQNO,RQMPSEQ     *Q. RIGHT ONE?
         BC    NE,SRCHSYS          *A. NO, KEEP LOOKING
         LR    R3,R2               *MOVE MPC TO R3 FOR JSERV
         B     WTP019A             *GO JSERV MSG TO TSO USER
         DROP  R5,R2               *YJQE,YMPC
*****                   READ IN THE JDAB                          *****
WTP014   DS    0H
         IATXJCT TYPE=RW,JQE=(R5),ERROR=WTP020
         OI    WTPFLG1,JCTRD       *INDICATE XJCT WAS DONE
         LR    R6,R1
         USING JCTSTART,R6
         JESREAD FDB=JCTJDFDB,ERROR=WTP020,ID=JDAB
         OI    WTPFLG1,JDABRD      *INDICATE JESREAD FOR JDAB WAS DONE
         OI    JCTFL8,JCTNCHNG     *INDICATE JCT NOT CHANGED
         L     R1,JCTJDFDB
         USING JDABSTRT,R1
WTP015   DS    0H
         L     R3,MAINDATA         *POINT TO FIRST MPCTABLE
         USING MPCSTART,R3
***   LOCATE SYSTEM FROM WHICH JOB WAS SUBMITTED FOR JSERV OF MSG  ***
WTP016   DS    0H
         LTR   R3,R3               *Q. ANY MORE MAINS?
         BC    ZERO,WTP017         *A. NO, CONTINUE
         CLC   JDABACMN,MPNAME     *Q. IS THIS THE MAIN?
         BC    EQ,WTP018           *A. YES, CONTINUE
         L     R3,MPNEXT           *POINT TO NEXT MAIN
         B     WTP016              *CONTINUE SEARCH
WTP017   DS    0H
         L     R3,MAINACT          *GET ACTIVE MAIN PROC TABLE
WTP018   DS    0H
         TM    WTPFLG1,JDABRD      *Q. JESREAD DONE FOR JDAB?
         BC    ALLOFF,WTP019       *A. NO, CONTINUE
         ARELEASE FDB=JCTJDFDB
WTP019   DS    0H
         IATXJCT TYPE=REL,JQE=(R5),ERROR=WTP028
         NI    WTPFLG1,FF-JCTRD    *INDICATE JCT RELEASED
         DROP  R1                  *JDAB
*****           JSERV MESSAGE TO TSO USER WHO OWNS THE JOB        *****
WTP019A  DS    0H
         JSERV TEXT=OPERMSG,DEST=DSTC34,MPC=(R3),MOD=MODSVC34
         DROP  R3                  *YMPC
         LA    R3,MSG9             *GET ADDR OF SENT TO USER MSG
         BAL   R2,WTP030           *INFORM OPER MSG SENT TO USER
         B     JSSRTN
WTP020   DS    0H
         TM    WTPFLG1,JCTRD       *NEED RELEASE OF JCT?
         BC    ALLOFF,WTP020A      *NO, BRANCH
         IATXJCT TYPE=REL,JQE=(R5),ERROR=WTP028
WTP020A  DS    0H
         LA    R3,MSG8             *GET ADDR OF NO TSOUSER MSG
         BAL   R2,WTP030           *INFORM OPER NO TSO USER FOR JOB
         B     JSSRTN
WTP021   DS    0H
         LA    R3,MSG2             *GET ADDR OF J= MESSAGE
         BAL   R2,WTP030           *SEND JOB NUM MISSING OR INVALID MSG
WTP022   DS    0H
         IATXCNS TYPE=RELEASE,BUFFER=UWTPXCNS *REL PARM FDB
         B     JSSRTN             *RETURN TO JSS
         SPACE 1
WTP025   LA    R3,MSG4             *R3 = A(NO MSG TEXT MSG)
         BAL   R2,WTP030           *GO ISSUE NO TEXT FOUND MSG
         B     WTP022              *BR TO RETURN
WTP026   DS    0H
         LA    R3,MSG7             *ADDR OF JOB NOT IN SYS MSG
         MVC   NOJOB#(4),MSG1NUM   *TELL OPER JOB NOT FOUND IN SYSTEM
         BAL   R2,WTP030
         B     JSSRTN              *RETURN TO JSS
WTP027   DS    0H
         LA    R3,MSG10            *ADDR OF CAN'T SEND MSG
         BAL   R2,WTP030           *TELL OPER CAN'T SEND TO THIS JOB
         B     JSSRTN
WTP028   DS    0H
         LA    R3,MSG3             *WTP ERROR MESSAGE
         BAL   R2,WTP030           *GO SEND WTP PROCESSING ERROR
JSSRTN   DS    0H
         SR    R15,R15
         L     R14,JSSRETRN
         BR    R14                 *RETURN TO JSS
WTP030   DS    0H                  *MESSAGE SEND ROUTINE
         SR    R0,R0               *CLEAR REG
         LH    R0,LLCONS           *GET CALLING CONSOLE ID
         MESSAGE TEXT=(R3),CONS=(R0)
         BR    R2                  *MSG SENT - RETURN TO PROCESSING
         EJECT
***********************************************************************
*                       M E S S A G E S                               *
***********************************************************************
         SPACE 1
OPERMSG  DC    AL2(MSGLEN)
SE       DC    CL4'SE '''          *SEND COMMAND TO TSO
         DC    C'IAT0002 MSG FROM OPERATOR FOR JOB '
JOBNAME  DC    CL8' '              *INSERT JOB NAME
         DC    C'('
JOBNUM   DC    CL4' '              *INSERT JOB NUMBER
         DC    C') : '
MSGTEXT  DC    CL50' '             *OPERATOR MESSAGE
         DC    C''',USER=('        *USER KEYWORD
         DC    CL7' '              *USER ID
         DC    C'),LOGON'          *END OF MESSAGE
         DC    XL2'00'             *PLACE FOR CONS ID
MSGLEN   EQU   (*-OPERMSG)         *LENGTH OF COMMAND
*
USEREND  DC    C''',USER=('        *USER KEYWORD
TSOID    DC    CL7' '              *USER ID
         DC    C'),LOGON'          *END OF MESSAGE
         DC    XL2'0'              *CONS ID
*
MSG      DC    AL1(MSGLN)
MSG002   DC    C'IAT0002 MSG FROM OPERATOR '''
MSGSTART DC    50CL1' '
         DC    CL3' '              *SPACE FOR CLOSING QUOTE
MSGEND   DC    C'),LOGON'          *END OF MESSAGE
MSGLN    EQU   *-MSG002
*
MSG1     DC    AL1(MSG1E)
MSG102   DC    C'IAT0102 MESSAGE ACCEPTED FOR '
MSG1NAM  DC    CL8' '
         DC    C'('
MSG1NUM  DC    CL4' '
         DC    C')'
MSG1E    EQU   *-MSG102
*
MSG2     DC    AL1(MSG2E)
MSG202   DC    C'IAT0202 J= MISSING OR INVALID'
MSG2E    EQU   *-MSG202
*
MSG3     DC    AL1(MSG3E)
MSG302   DC    C'IAT0302 ERROR IN PROCESSING WTP - CANNOT SEND MESSAGE'
MSG3E    EQU   *-MSG302
*
MSG4     DC    AL1(MSG402E)
MSG402   DC    C'IAT0402 MESSAGE TEXT MISSING OR INVALID'
MSG402E  EQU   *-MSG402
*
MSG5     DC    AL1(MSG5E)
MSG502   DC    C'IAT0502 ONLY FIRST 50 CHARS OF TEXT TO BE INSERTED'
MSG5E    EQU   *-MSG502
*
MSG6     DC    AL1(MSG6E)
MSG602   DC    C'IAT0602 NO PARAMETER SPECIFIED'
MSG6E    EQU   *-MSG602
*
MSG7     DC    AL1(MSG7E)
MSG702   DC    C'IAT0702 JOB '
NOJOB#   DC    CL4' '
         DC    C' NOT IN SYSTEM'
MSG7E    EQU   *-MSG702
*
MSG8     DC    AL1(MSG8E)
MSG802   DC    C'IAT0802 MESSAGE NOT SENT TO TSO USER, JOB HAS NO USER X
               ID'
MSG8E    EQU   *-MSG802
*
MSG9     DC    AL1(MSG003E)
MSG0003  DC    C'IAT0003 MESSAGE SENT TO USER ('
TSUID    DC    C'$WC    )'
MSG003E  EQU   *-MSG0003
*
MSG10    DC    AL1(MSG10E)
MSG103   DC    C'IAT0103 MESSAGE CANNOT BE SENT TO SPECIFIED JOB'
MSG10E   EQU   *-MSG103
*
MSG11    DC    AL1(MSG11E)
MSG203   DC    C'IAT0203 CANNOT ACCESS JESMSG DATASET FOR JOB '
JOB#203  DC    CL4' '
MSG11E   EQU   *-MSG203
         SPACE 2
*****    E X E C U T E D    I N S T R U C T I O N S               *****
         SPACE 1
MOVE     MVC   0(0,R3),2(R6)       *OBJECT OF EX INSTRUCTION
MOVE1    MVC   0(0,R2),2(R6)       *PUT MSG TEXT IN TSO MSG
NAMEMOVE MVC   MSG1NAM(0),0(R7)    *MOVE IN JOB NAME
         EJECT
***********************************************************************
*             D A T A   A N D   W O R K   A R E A S                   *
***********************************************************************
         SPACE 1
FULLWORD DS    F                   *FULLWORD FOR MESSAGE PREPARATION
ZEROJBNO DC    C'0000'             *INITIAL JOB NO
LLCONS   DC    H'0'                *CALLING CONSOLE ID SAVE AREA
LLJOB#   DC    H'0'                *BINARY JOB NUMBER
WTPPRFDB DC    XL(FDBSRFL)'00'
UWTPXCNS DC    F'0'
CLFLD    DC    50CL1' '
         SPACE 1
WTPFLG1  DC    X'00'
*****                   DEFINITIONS OF WTPFLG1                    *****
TEXTFND  EQU   X'01'               *INDICATE MESSAGE TEXT WAS FOUND
JCTRD    EQU   X'02'               *INDICATE JCT READ WAS DONE
JDABRD   EQU   X'04'               *INDICATE JDAB READ WAS DONE
         SPACE 2
         LTORG
UMODNUM  DC    CL7'AJSW038'
APARNUM  DC    CL5' '
PTFNUM   DC    CL5'SP215'
         END
