++ USERMOD(AJSW046) /* JESCMD PROGRAM:

       THIS IS A PROGRAM THAT WILL PASS JES3 COMMANDS TO JES3.
                                                                 */ .
++ VER(Z038) FMID(HJS2215).
++ JCLIN .
//GEN11 JOB Y51024508,'531-0  SINGER '
//SG22 EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,AC=1',
//    UNIT='3350',SER=IPLXXX,N=GEN1,NAME=JES3LIB,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//INCLUDE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=MVS3.INCLUDE
//SYSLIN DD *
 INCLUDE INCLUDE(JESCMD)
 NAME JESCMD(R)
/*
++ SRC(JESCMD) DISTLIB(ASRCLIB) .
JESCMD   TITLE '-- ISSUE JES3 COMMANDS VIA SSI'
         MACRO
         $REGS
         GBLB  &PRORG
         AIF   (&PRORG).MEX2
&PRORG   SETB  1
 SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
 SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
 SPACE
.MEX2    ANOP
       MEND
         MACRO
&LABEL   $PROLOG &LV=0,&GM=Y
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
         GBLC  &PROGM
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         AIF   ('&GM' EQ 'N').NOGM
&PROGM   SETC  'GETMAIN'
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
         AGO   .STORE
.NOGM    ANOP
         CNOP  0,4
         LA    R1,SAVE&SYSNDX
         B     *+76
SAVE&SYSNDX DC 18F'0'
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
         $REGS
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
         MACRO
&LABEL   $EPILOG &RC
         GBLC  &PROGM
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         AIF   ('&PROGM' NE 'GETMAIN').NOFREE
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         AGO   .LM
.NOFREE  ANOP
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
.LM      ANOP
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
**********************************************************************
*                                                                    *
*         THIS PROGRAM IS DESIGNED TO ACCEPT FROM PARM               *
*         JES COMMAND  AND TO THEN ISSUE IT                          *
*         TO RELEIVE THE OPERATOR FROM THE BURDEN OF                 *
*         ISSUEING THESE COMMAND.                                    *
*                                                                    *
*         THE JCL TO EXECUTE THIS PROGRAM ARE :                      *
*                                                                    *
*             //CMD     EXEC PGM=JESCMD,PARM='COMMAND TEXT'          *
*             //STEPLIB  DD  DSN='ACF2 PROTECTED APF LIBRARY'        *
*             //                                                     *
*                                                                    *
**********************************************************************
         EJECT
         PRINT NOGEN
         IHAPSA ,
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IATYDST ,
         EJECT
         IATYSEL ,
         EJECT
         IATYSVT ,
         EJECT
         IEFJESCT ,
         EJECT
         IEFJSCVT ,
         EJECT
         IEFJSSOB CM
         EJECT
X07WORK  DSECT ,
JESDATA  DS    0D
JESLNGTH DS    AL2
JESCOM   DS    CL100
JESTEXT  DS    0XL(*-JESCOM)
JESSIZE  DS    0XL(*-JESDATA)
         DS    0F
SELAREA  DS    XL(L'SELSIZE)
         SPACE 1
         DS    0D
X07LGTH  EQU   *-X07WORK
         EJECT
JESCMD   $PROLOG R12
JESCMD   AMODE ANY
JESCMD   RMODE ANY
         PRINT GEN
**********************************************************************
         L     R3,0(,R1)           LOAD ADDRESS OF PARM INFO
         SLR   R2,R2               CLEAR R2
         ICM   R2,3,0(R3)          GET LENGTH OF PARM INFO
         BNP   ABEND               IF NO PARM ABEND
         MODESET KEY=ZERO,MODE=SUP GET INTO KEY ZERO SUP FOR SSI
         USING X07WORK,R9          ALLOCATE R9  TO THE LABEL WORK AREA
         L     R0,WORKAREA         GET LENGTH OF WORKAREA
         GETMAIN R,LV=(0)          GET STORAGE
         LR    R9,R1               LOAD BASE REGISTER
         LA    R1,2(,R2)           ADJUST LENGTH
         STH   R1,JESLNGTH         STORE LENGTH
         MVI   JESCOM,C' '         BLANK OUT MESSAGE
         MVC   JESCOM+1(L'JESTEXT-1),JESCOM
         XC    SELAREA(L'SELSIZE),SELAREA  CLEAR SEL
         BCTR  R2,0                DECREMENT LENGTH
         EX    R2,MVC              EXECUTE MOVE
         LA    R10,SELAREA         POINT TO SEL FOR SSISERV
         USING SELSTART,R10
         LA    R3,JESDATA          POINT TO DATA
         ST    R3,SELDATA          STORE ADDRESS OF DATA
         USING PSA,0               SET PSA ADDRESSABILITY
         L     R11,FLCCVT          POINT TO CVT
         USING CVTMAP,R11
         L     R11,CVTJESCT        POINT TO JES CONTROL TABLE
         USING JESCT,R11
         L     R11,JESSSCT         POINT TO SUBSYSTEM CVT
         USING SSCT,R11
         L     R11,SSCTSSVT        POINT TO SUBSYS VECTOR TABLE
         USING SSVT,R11
*-------------------------------------------------------------------*
*        ISSUE JES COMMAND THROUGH SUBSYSTEM INTERFACE              *
*-------------------------------------------------------------------*
         LR    R1,R10              SET PARM REGISTER
         SSISERV FUNC=SSOBCMND,PARM=(R1),MOD=MODINTCM
         DROP  R11,R10
         L     R0,WORKAREA         GET WORK AREA PARAMETER
         FREEMAIN R,LV=(0),A=(R9)  FREE THE WORK AREA
         MODESET KEY=NZERO,MODE=PROB   LEAVE KEY ZERO FOR EXIT
         SPACE
         $EPILOG 0                 RETURN
         SPACE
ABEND    ABEND 004                 ABEND IF NO PARM
         SPACE
MVC      MVC   JESCOM(0),2(R3)     MOVE INSTRUCTION
WORKAREA DC    0F'0',X'FD',AL3(X07LGTH)
*
*
*
         LTORG ,
*
UMODNUM  DC    CL7'AJSW046'
APARNUM  DC    CL7' '
PTFNUM   DC    CL7'SP2.1.5'
         END
