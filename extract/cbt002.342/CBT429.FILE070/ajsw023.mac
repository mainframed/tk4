++ USERMOD(AJSW023) /* MAKE TSO STATUS RETURN JOBNAMES WITH IATUX30.

       THIS MODIFICATION WILL MAKE TSO STATUS RETURN THE JOBNAME
       IN THE FIRST LINE OF MESSAGE EVEN IF IATUX30 IS IN USE,
       PROVIDED THAT THE JOBNAME BEGINS WITH THE USERID.
       WILL ALSO PROVIDE OUR OWN SECOND LEVEL MESSAGE FOR ALL
       JOBS WHICH INCLUDES THE ACTIVE SCHEDULER ELEMENT AND ITS
       STATUS (SIMILAR TO RESPONSE TO AN *I J=JOBNAME COMMAND) .
                                                                 */ .
++ VER(Z038) FMID(HJS2215).
++ SRCUPD(IATGRWQ) DISTLIB(AJES3SRC) .
./ CHANGE NAME=IATGRWQ
* USER MODS =                                                   AJSW023
*                                                               AJSW023
*      - RETURN NEW SECOND LEVEL MESSAGE TO STATUS              AJSW023
*                                                               AJSW023
         IATYRSQ                                                AJSW023
         EJECT                                                  AJSW023
         IATYOSS                                                AJSW023
         EJECT                                                  AJSW023
         EJECT                                                  AJSW023
*-------------------------------------------------------------* AJSW023
*        NOW .... AFTER ALL THE ABOVE IBM CODE WE WILL        * AJSW023
*        PUT THE FULL JOBNAME IN THE FIRST LEVEL MESSAGE      * AJSW023
*        IF IT IS POSSIBLE (JOBNAME BEGINS WITH USERID)       * AJSW023
*        AND BUILD OUR OWN SECOND LEVEL MESSAGE FOR ALL       * AJSW023
*        JOBS (NOT JUST "TSO" JOBS).                          * AJSW023
*-------------------------------------------------------------* AJSW023
         SPACE 1                                                AJSW023
*-------------------------------------------------------------* AJSW023
*        FIX UP FIRST LEVEL MESSAGE                           * AJSW023
*-------------------------------------------------------------* AJSW023
         SR    R1,R1               CLEAR REG                    AJSW023
         IC    R1,SSCSULEN         GET USERID LENGTH            AJSW023
         BCTR  R1,0                MINUS 1 FOR EX               AJSW023
         EX    R1,CMPRUID          JOBNAME BEGIN WITH UID       AJSW023
         BNE   GDWLEV2             NO - SKIP MOVE OF JOBNAME    AJSW023
         LA    R1,1(R1,R5)         POINT TO LAST CHARACTER      AJSW023
         CLI   0(R1),C' '          ANY LAST CHARACTER?          AJSW023
         BE    GDWLEV2             NO - GO DO 2ND LEVEL MSG     AJSW023
         MVC   SSCSUJOB,0(R1)      MOVE IN JOBNAME CHARACTER    AJSW023
         SPACE 1                                                AJSW023
*-------------------------------------------------------------* AJSW023
*        REPLACE/GENERATE SECOND LEVEL MESSAGE FOR ALL        * AJSW023
*-------------------------------------------------------------* AJSW023
GDWLEV2  TM    SSCSFLG1,SSCSSECL   SECOND LEVEL ALREADY THERE?  AJSW023
         BO    GDWBLNKS            YES, JUST BLANK IT OUT       AJSW023
         TM    TSFLAG1,TSOOVFL     NO, IS THERE ROOM FOR SECOND AJSW023
         BC    ALLON,WTQ0745       NO, USE FAST PATH THRU       AJSW023
         SH    R3,OLDSIZE          POINT TO NEW AREA            AJSW023
         MVC   OLDNOTHR(IAT8969S),OLDMODEL MOVE MSG MODEL       AJSW023
         OI    SSCSFLG1,SSCSSECL   INDICATE SECOND LEVEL MSG    AJSW023
GDWBLNKS MVI   IAT8969,C' '        INSURE ALL BLANKS            AJSW023
         MVC   IAT8969+1(LIAT8969-1),IAT8969 MOVE IN BLANKS     AJSW023
         SPACE 1                                                AJSW023
         MVC   IAT8969(4),=CL4'JOB ' BEGINNING OF NEW MESSAGE   AJSW023
         SPACE 1                                                AJSW023
         LH    R1,JQEJNO           GET JOB NUMBER               AJSW023
         CVD   R1,FCTWORK          MAKE DECIMAL                 AJSW023
         UNPK  FCTWORK(4),FCTWORK+5(3) MAKE PRINTABLE           AJSW023
         OI    FCTWORK+3,X'F0'     INSURE CORRECT SIGN          AJSW023
         MVC   IAT8969+4(4),FCTWORK PUT JOB NUMBER IN MESSAGE   AJSW023
         SPACE 1                                                AJSW023
         MVC   IAT8969+9(L'JCTJBNAM),0(R5) PUT JOBNAME IN MSG   AJSW023
         SPACE 1                                                AJSW023
*-------------------------------------------------------------* AJSW023
*        FIND JOBS OWNER OR IF NONE THEN ORIGIN               * AJSW023
*-------------------------------------------------------------* AJSW023
         LA    R5,IAT8969+18       POINT TO CURRENT OFFSET MSG  AJSW023
         LA    R6,7                NUMBER OF CHARACTERS         AJSW023
         CLC   JQETUSID,=CL8' '    ANY OWNING USERID?           AJSW023
         BE    GDWORGID            NO, USE ORIGIN INSTEAD       AJSW023
         CLC   JQETUSID(4),=F'0'   ANY OWNING USERID?           AJSW023
         BE    GDWORGID            NO, USE ORIGIN INSTEAD       AJSW023
         MVC   0(6,R5),=C'OWNER('  MOVE IN BEGINNING OF MSG     AJSW023
         LA    R15,JQETUSID        ADDRESS OF USERID            AJSW023
         B     UIDLOOP             AND GO GET IT                AJSW023
GDWORGID MVC   0(6,R5),=C'ORGIN('  MOVE IN BEGINNING OF MSG     AJSW023
         CLC   JQEORG,=CL8' '      IS ORIGIN BLANK ALSO?        AJSW023
         BE    NOORGN              YES, G                       AJSW023
         CLC   JQEORG(4),=F'0'     IS ORIGIN ZEROS?             AJSW023
         BE    NOORGN              YES, GO USE NONE             AJSW023
         LA    R15,JQEORG          ADDRESS OF ORIGIN            AJSW023
         B     UIDLOOP             GO FIND LENGTH               AJSW023
NOORGN   LA    R15,=CL8'UNKNOWN'   NO OWNER/ORIGIN              AJSW023
         LA    R6,6                LENGTH MINUS ONE             AJSW023
         B     GOTIT               AND GO PUT IN MESSAGE        AJSW023
UIDLOOP  LA    R1,0(R15,R6)        ADDRESS OF CHAR IN UID/ORG   AJSW023
         CLI   0(R1),C' '          BLANK?                       AJSW023
         BNE   GOTIT               NO, GOT LENGTH               AJSW023
         BCT   R6,UIDLOOP          ANY MORE?                    AJSW023
GOTIT    EX    R6,UIDMOVE          MOVE USERID.ORG TO MSG       AJSW023
         LA    R5,7(R5,R6)         GET ADDRESS OF END OF MSG    AJSW023
         MVC   0(2,R5),=C'),'      MOVE IN CLOSING PAREN,       AJSW023
         LA    R5,2(R5)            POINTER TO NEXT FIELD        AJSW023
         EJECT                                                  AJSW023
*-------------------------------------------------------------* AJSW023
*        FIND THE JOB'S ACTIVE SE IN DSP DICTIONARY           * AJSW023
*-------------------------------------------------------------* AJSW023
         L     R6,DSPDIC                                        AJSW023
         USING DSPSTART,R6                                      AJSW023
         IC    R2,JQESTAT1         CURRENT DSP NUMBER           AJSW023
GDW0010  CLI   DSPNAME,X'FF'       ANY LEFT?                    AJSW023
         BC    EQ,GDW0011          NO, ERROR                    AJSW023
         CLM   R2,B'0001',DSPNO    THIS DSP DICT ENTRY MATCH?   AJSW023
         BC    EQ,GDW0012          YES, BRANCH                  AJSW023
         LA    R6,DSPEND           NO, GET NEXT ENTRY           AJSW023
         B     GDW0010             AND LOOP                     AJSW023
GDW0011  MVC   0(8,R5),=CL8'UNKNOWN'  NO SE'S --- DON'T KNOW    AJSW023
         B     GDW0100             ISSUE MSG                    AJSW023
GDW0012  LA    R1,8                SET MAX LGTH                 AJSW023
         LA    R15,DSPNAME+7       POINT TO LAST CHAR           AJSW023
GDW0013  CLI   0(R15),C' '         IS IT BLANK?                 AJSW023
         BC    NE,GDW0014          NO, GOT LAST CHARACTER       AJSW023
         BCTR  R15,R0              YES, BACK UP ONE CHARACTER   AJSW023
         BCT   R1,GDW0013          LOOP FOR LENGTH OF DSPNAME   AJSW023
GDW0014  BCTR  R1,0                                             AJSW023
         EX    R1,MVEDSPNM         FROM DSPDC TO MSG (R5)       AJSW023
         CLM   R2,B'0001',DNMMAIN  IS IT ON MAIN?               AJSW023
*                                  REPLACED                     AJSW023
         BC    NE,GDW0015          NO, BRANCH                   AJSW023
         TM    JQESTAT2,SEACTIVE   IS IT ACTIVE?                AJSW023
         BC    ALLON,GDWMAIN       YES, BRANCH                  AJSW023
GDW0015  TM    JQESTAT2,SEACTIVE+SERESCH ACTIVE OR RESCHDUL?    AJSW023
         BC    NALLOFF,GDW0030     YES, BRANCH                  AJSW023
         TM    JQEFLG1,JQEDEL      MARKED DELETE ONLY           AJSW023
         BC    ALLOFF,GDW0100      PRINT DSP NAME ONLY          AJSW023
         MVC   0(8,R5),=CL8'DELETE'  SHOW DELETE ONLY           AJSW023
         B     GDW0100             AND CONTINUE                 AJSW023
         SPACE 1                                                AJSW023
*-------------------------------------------------------------* AJSW023
*        EXAMINE DSP AND SHOW STATUS IF OBTAINABLE            * AJSW023
*-------------------------------------------------------------* AJSW023
GDW0030  LA    R5,1(R1,R5)         POINT TO NEXT FIELD          AJSW023
         MVC   0(2,R5),=CL2'(*'    SHOW DSP FAILED              AJSW023
         LA    R5,1(R5)            POINT AT STATUS CHAR         AJSW023
         TM    JQESTAT2,SEDSPAB    DID IT FAIL?                 AJSW023
         BC    ALLON,GDW0090       YES                          AJSW023
         MVI   0(R5),C'S'          ASSUME SPEC RESCHEDULE       AJSW023
         ICM   R1,B'1111',JQERESQ  -> RESQ                      AJSW023
         BC    ZERO,GDW0032        NO RESQ, INDICATE 'A' OR 'R' AJSW023
         USING RQSTART,R1                                       AJSW023
         TM    RQFLG7,RQJSSPR      SPEC RESCHED?                AJSW023
         BC    ALLON,GDW0090       YES, GO PRINT                AJSW023
GDW0031  CLM   R2,B'0001',DNMOUTPT OUTPUT SERV?                 AJSW023
         BC    NE,GDW0032          NO, NORM PROCESSING          AJSW023
         CLI   RQINDEX,RQOUTQUE    WAITING?                     AJSW023
         BC    NE,GDW0032          NO, NORMAL PROCESSING        AJSW023
         MVI   0(R5),C'P'          MARK PENDING A WRITER        AJSW023
         USING OSSSTART,R15                                     AJSW023
         ICM   R15,B'1111',RQOSSTOP -> FIRST OSS                AJSW023
         BC    ZERO,GDW0090        PENDING IF NO OSS            AJSW023
GDW0031A CLC   OSSSCHED,TVTZERO    SCHED COUNT ZERO?            AJSW023
         BC    EQ,GDW0031B         YES, CHECK NEXT ENTRY        AJSW023
         TM    OSSFLAG1,OSSHOLD    DATASET HELD?                AJSW023
         BC    ALLOFF,GDW0031C     NO, GO SHOW ON WRITER        AJSW023
GDW0031B ICM   R15,15,OSSCHAIN     GET NEXT OSS                 AJSW023
         BC    NZERO,GDW0031A      GO CHECK SCHED COUNT         AJSW023
         B     GDW0090             NO, GO PRINT MSG             AJSW023
         DROP  R15                                              AJSW023
GDW0031C MVI   0(R5),C'W'          MARK ACTIVE ON WRITER        AJSW023
         B     GDW0090             GO PRINT MSG                 AJSW023
GDW0032  MVI   0(R5),C'A'          SET TO ACTIVE                AJSW023
         TM    JQESTAT2,SEACTIVE   IS IT ACTIVE?                AJSW023
         BC    ALLON,GDW0090       YES, BRANCH                  AJSW023
         MVI   0(R5),C'R'          SET TO RESCHEDULE            AJSW023
         B     GDW0090                                          AJSW023
         EJECT                                                  AJSW023
*-------------------------------------------------------------* AJSW023
*        DSP IS MAIN - USE RESQ TO FIND ACTIVE ENTRY          * AJSW023
*-------------------------------------------------------------* AJSW023
GDWMAIN  LA    R5,1(R1,R5)         POINT TO NEXT FIELD          AJSW023
         MVI   0(R5),C'('          INSERT IT                    AJSW023
         LA    R5,1(R5)            POINT PAST '('               AJSW023
         L     R1,JQERESQ          GET RESQ ADDR                AJSW023
         MVI   0(R5),C'C'          SET COMPLETE                 AJSW023
         LTR   R1,R1               DOES RES Q STILL EXIST?      AJSW023
         BC    ZERO,GDW0090        NO, BRANCH                   AJSW023
         SR    R6,R6                                            AJSW023
         IC    R6,RQINDEX          GET RES Q INDEX              AJSW023
         SRL   R6,2                DIVIDE BY FOUR               AJSW023
         LA    R6,RNDXTYPE(R6)     POINT TO PROPER CHARACTER    AJSW023
         MVC   0(1,R5),0(R6)       INSERT RES Q TYPE            AJSW023
         DROP  R1                                               AJSW023
         SPACE 1                                                AJSW023
GDW0090  MVI   1(R5),C')'          PUT IN CLOSING PAREN         AJSW023
         B     GDW0100             RETURN WITH MESSAGE          AJSW023
         EJECT                                                  AJSW023
*-------------------------------------------------------------* AJSW023
*        EXECUTED INSTRUCTIONS AND TABLES                     * AJSW023
*-------------------------------------------------------------* AJSW023
LIAT8969 EQU   IAT8969E-IAT8969                                 AJSW023
CMPRUID  CLC   0(0,R5),TSUSERID                                 AJSW023
UIDMOVE  MVC   6(0,R5),0(R15)                                   AJSW023
MVEDSPNM MVC   0(0,R5),DSPNAME                                  AJSW023
         SPACE 1                                                AJSW023
         DROP  R6                                               AJSW023
         SPACE 2                                                AJSW023
RNDXTYPE DC    ((RQMAXNDX-0)/4)C'?'                             AJSW023
         ORG   RNDXTYPE                                         AJSW023
         DC    C'NN'                                            AJSW023
         ORG   RNDXTYPE+(RQFETCH/4)                             AJSW023
         DC    C'F'                                             AJSW023
         ORG   RNDXTYPE+(RQVOLWT/4)                             AJSW023
         DC    C'W'                                             AJSW023
         ORG   RNDXTYPE+(RQALLOC/4)                             AJSW023
         DC    C'A'                                             AJSW023
         ORG   RNDXTYPE+(RQVOLUAV/4)                            AJSW023
         DC    C'U'                                             AJSW023
         ORG   RNDXTYPE+(RQVERIFY/4)                            AJSW023
         DC    C'V'                                             AJSW023
         ORG   RNDXTYPE+(RQERROR/4)                             AJSW023
         DC    C'E'                                             AJSW023
         ORG   RNDXTYPE+(RQSELECT/4)                            AJSW023
         DC    C'Q'                                             AJSW023
         ORG   RNDXTYPE+(RQONMAIN/4)                            AJSW023
         DC    C'O'                                             AJSW023
         ORG   RNDXTYPE+(RQWTR/4)                               AJSW023
         DC    C'O'                                             AJSW023
         ORG   RNDXTYPE+(RQTERM/4)                              AJSW023
         DC    C'O'                                             AJSW023
         ORG   RNDXTYPE+(RQBRKDWN/4)                            AJSW023
         DC    C'B'                                             AJSW023
         ORG   RNDXTYPE+(RQRESTRT/4)                            AJSW023
         DC    C'R'                                             AJSW023
         ORG   RNDXTYPE+(RQDONE/4)                              AJSW023
         DC    C'C'                                             AJSW023
         ORG   RNDXTYPE+(RQOSWAIT/4)                            AJSW023
         DC    C'S'                                             AJSW023
         ORG   RNDXTYPE+(RQDEMSEL/4)                            AJSW023
         DC    C'D'                                             AJSW023
         ORG   RNDXTYPE+(RQEFWAIT/4)                            AJSW023
         DC    C'I'                                             AJSW023
         ORG   RNDXTYPE+(RQEFBAD/4)                             AJSW023
         DC    C'N'                                             AJSW023
         ORG   RNDXTYPE+(RQMAXNDX/4)                            AJSW023
         SPACE 2                                                AJSW023
*-------------------------------------------------------------* AJSW023
*        CONTINUE WITH IBM'S CODING                           * AJSW023
*-------------------------------------------------------------* AJSW023
GDW0100  DS    0H                                               AJSW023
         EJECT                                                  AJSW023
UMODNUM  DC    CL7'AJSW023'       *USER NUMBER
