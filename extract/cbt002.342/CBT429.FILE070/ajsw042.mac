++ USERMOD(AJSW042) /*
  TSO COST ESTIMATE INFO.. PICK UP IEFSSCS MACRO CHANGE FROM ABBW064
                       */ .
++ VER(Z038) FMID(HJS2215) PRE(ABBW064 AJSW023) .
++ SRCUPD(IATGRWQ) DISTLIB(AJES3SRC) .
./ CHANGE NAME=IATGRWQ
* USER MODS =                                                   AJSW042
*                                                               AJSW042
*      - FILL IN SSOB WITH COST ESTIMATE INFO UPON REQUEST      AJSW042
*                                                               AJSW042
         IATYSCT                                                AJSW042
         IATYOSD TYPE=DSECT                                     AJSW042
         IATYJDS                                                AJSW042
         IATYJST                                                AJSW042
         TM    SSCSFLGS,SSCS$CST  *COST ESTIMATE INFO REQUEST?  AJSW042
         BC    ALLON,UMOD001      *YES, SKIP CLEAR OF ARRAY     AJSW042
UMOD001  DS    0H                                               AJSW042
*-------------------------------------------------------------* AJSW042
*   CALL TO OUR EXTENDED STATUS PROCESSOR FOR JOB OUTPUT      * AJSW042
*-------------------------------------------------------------* AJSW042
         TM    SSCSFLGS,SSCS$CST  *COST ESTIMATE INFO REQUEST?  AJSW042
         BC    ALLOFF,WTQ0180     *NO, SKIP IT                  AJSW042
         L     R15,=A(UMOD000)    *ADDRESS OF COST EST RTN      AJSW042
         ACALL ENTER=(R15)        *GO TO ROUTINE AND SAVE REGS  AJSW042
         L     R3,TSSSOB+SSOBRETN-SSOBEGIN *GET RETURN CODE     AJSW042
         EJECT                                                  AJSW042
*************************************************************** AJSW042
*   THIS ROUTINE SCANS EACH JDS ENTRY FOR THE SELECTED JOB    * AJSW042
*   AND PUTS THE INFO NEEDED IN AN ARRAY TO SEND BACK TO      * AJSW042
*   THE REQUESTOR.                                            * AJSW042
*************************************************************** AJSW042
UMOD000  DS    0H                                               AJSW042
         USING UMOD000,R8                                       AJSW042
         USING SSCSBGN,R3                                       AJSW042
         USING RQSTART,R7         *ADDRESSIBILITY               AJSW042
         LR    R8,R15                                           AJSW042
         L     R7,RQTOP           *FIRST RSQ ENTRY              AJSW042
         LA    R3,TSSSOB          *SET BASE FOR SSOB EXTENSION  AJSW042
         AH    R3,SSOBLEN-SSOB(,R3)                             AJSW042
UMOD010  DS    0H                                               AJSW042
         LA    R7,0(,R7)          *CLEAR HIGH BIT               AJSW042
         LTR   R7,R7              *IS THERE ONE?                AJSW042
         BC    ZERO,UMODEND1      *NO, GET OUT                  AJSW042
         CLC   RQJNUM,SSCSJOBI+4  *CORRECT JOB NUMBER?          AJSW042
         BC    EQ,UMOD020         *YES, GO PROCESS              AJSW042
         L     R7,RQNEXT          *GET NEXT RSQ                 AJSW042
         B     UMOD010            *GO CHECK FOR CORRECT JOB     AJSW042
UMOD020  DS    0H                                               AJSW042
         LR    R6,R7              *SAVE RQ                      AJSW042
         DROP  R7                 *DROP REG 7 (DONE WITH RQ)    AJSW042
         SLR   R4,R4              *CLEAR REGISTER               AJSW042
         LH    R5,SSCSDIMP        *GET ARRAY SIZE               AJSW042
         D     R4,=AL4(SSCS$ASZ)  *CALC NUM OF ARRAYS TO FIT    AJSW042
******** LR    R9,R5              *SAVE NUM OF ARRAYS           AJSW042
         S     R5,=F'6'           *LEAVE ROOM FOR JUNK AT END   AJSW042
         LA    R7,SSCS$FIL        *POINTER TO PREFIX            AJSW042
         USING SSCS$FIL,R7        *ADDRESSIBILITY               AJSW042
         LA    R3,SSCS$PSZ(R7)    *POINT TO FIRST ARRAY ELEMENT AJSW042
         USING SSCS$CAE,R3        *ADDRESSIBILITY               AJSW042
         CLC   SSCS$JDS,TVTZERO   *IS A JDS POINTER THERE NOW?  AJSW042
         BE    UMODJST0           *NO, JUST START FILLING IN    AJSW042
         L     R1,SSCS$JDS        *GET POINTER TO LAST JDS      AJSW042
         JDSPOINT RQ=(R6),POINTER=(R1),ERROR=UMODEND1           AJSW042
         B     UMOD040            *GET ON WITH IT               AJSW042
UMODJST0 DC    0H'0'                                            AJSW042
         USING RQSTART,R6          RESQUEUE ADDRESSABILITY      AJSW042
         L     R1,RQJSTFDB         GET -> JST                   AJSW042
         LA    R1,0(,R1)           STRIP HIGH ORDER BIT         AJSW042
         TM    RQJSTFDB+(FDBSPFL1-FDBSTART),FDBONSP JST ON SPOOLAJSW042
         BC    NALLON,UMODJST1     NO, IN MEMORY                AJSW042
         JESREAD FDB=RQJSTFDB,ID=JST READ JST INTO MEMORY       AJSW042
         L     R1,RQJSTFDB         GET -> JST                   AJSW042
         O     R1,=X'80000000'     SET READ-IN FLAG             AJSW042
*                                  DELETED 7/8/87               AJSW042
*                                  DELETED 7/8/87               AJSW042
*                                  DELETED 7/8/87               AJSW042
*                                  DELETED 7/8/87               AJSW042
         USING JSTSTART,R1         TEMP. JST MAP ADDRBLTY       AJSW042
UMODJST1 ICM   R0,B'1111',JST25NTM COUNT OF TAPE MOUNTS         AJSW042
         STCM  R0,B'0011',SSCS$NTM SET INTO SSOB FOR CALLER     AJSW042
         LTR   R1,R1               DID WE READ IN JST?          AJSW042
         BC    NMINUS,UMOD030      NO, ALREADY IN STORAGE       AJSW042
         ARELEASE FDB=RQJSTFDB     RELEASE JST                  AJSW042
         DROP  R6                  RESQUEUE ADDRESSABILITY      AJSW042
UMOD030  DS    0H                                               AJSW042
         JDSGET RQ=(R6),EOF=UMOD080                             AJSW042
         ST    R0,SSCS$JDS        *SAVE JDS POINTER             AJSW042
UMOD040  LR    R2,R1              *POINT TO JDS ENTRY           AJSW042
         USING JDSENTRY,R2                                      AJSW042
         CLC   JDSLINES,TVTZERO   *ANY LINE COUNT?              AJSW042
         BC    NE,UMOD050         *YES, CONTINUE                AJSW042
         CLC   JDSDDNAM,=CL8'SYSMSG' *THIS THE SYSMSG DATASET?  AJSW042
         BC    EQ,UMOD050         *YES, CONTINUE ANYWAY         AJSW042
         B     UMOD030            *NO, GET NEXT ENTRY           AJSW042
UMOD050  DS    0H                                               AJSW042
         TM    JDSFLG2,JDSYSIN    *IS THIS A SYSIN JDS?         AJSW042
         BC    ALLON,UMOD030      *YES, SKIP THIS ONE           AJSW042
         BCT   R5,UMOD055         *CAN WE FIT THIS ONE IN?      AJSW042
         B     UMODEND            *NO, END AND LEAVE JDS POINT  AJSW042
*-------------------------------------------------------------* AJSW042
*                SET ALL FIELDS TO DEFAULTS                   * AJSW042
*-------------------------------------------------------------* AJSW042
UMOD055  DS    0H                                               AJSW042
         L     R1,TVTYOSD         *GET OUTSERV RES DATA AREA    AJSW042
         USING OSDSTART,R1                                      AJSW042
         MVC   SSCS$STP,JDSSTEPN  *PUT STEP NAME IN ARRAY       AJSW042
         MVC   SSCS$DDN,JDSDDNAM  *PUT DDNAME IN ARRAY          AJSW042
         MVC   SSCS$DST,=CL8'ANYLOCAL' *DEFAULT DESTINATION     AJSW042
         TM    JDSCTYPE,JDSPUNCH  *IS THIS A PUNCH JDS?         AJSW042
         BC    ALLOFF,SETPRNT     *NO, MUST BE PRINT            AJSW042
         MVC   SSCS$TYP,=CL8'PUN     ' *DEFAULT TYPE            AJSW042
         MVC   SSCS$FRM,OSDCARDS  *DEFAULT CARDS                AJSW042
         B     UMOD060            *CONTINUE WITH DEFAULTS       AJSW042
SETPRNT  DS    0H                                               AJSW042
         MVC   SSCS$TYP,=CL8'PRT     ' *SET PRINT TYPE          AJSW042
UMOD060  DS    0H                                               AJSW042
         MVC   SSCS$FRM,OSDFORMS  *DEFAULT FORMS                AJSW042
         MVC   SSCS$CAR,OSDCARR   *DEFAULT FCB                  AJSW042
         MVC   SSCS$UCS,OSDTRAIN  *DEFAULT UCS                  AJSW042
         MVC   SSCS$LNC,JDSLINES  *GET LINE COUNT               AJSW042
         MVC   SSCS$PGS,JDSPAGES  *GET PAGE COUNT               AJSW042
         MVI   SSCS$CLS,C'A'      *DEFAULT SYSOUT CLASS         AJSW042
         MVI   SSCS$CPY,X'01'     *DEFAULT COPY COUNT           AJSW042
         DROP  R1                                               AJSW042
*-------------------------------------------------------------* AJSW042
*               SEE WHAT JDS HAS IN IT                        * AJSW042
*-------------------------------------------------------------* AJSW042
         CLI   JDSCLASS,X'00'     *SYSOUT CLASS THERE?          AJSW042
         BC    EQ,CHKCOPY         *NO, LET DEFAULT STAND        AJSW042
         CLI   JDSCLASS,X'40'     *SYSOUT CLASS THERE?          AJSW042
         BC    EQ,CHKCOPY         *NO, LET DEFAULT STAND        AJSW042
         MVC   SSCS$CLS,JDSCLASS  *SYSOUT CLASS                 AJSW042
         TM    JDSFLG3,JDSDCOPY   *IS COPY FIELD VALID?         AJSW042
         BC    ALLON,PUTCOPY      *YES, GO USE IT               AJSW042
*-----          SCAN SYSOUT CLASS TABLE                  -----* AJSW042
         L     R1,SCTAB           *GET SYSOUT CLASS TABLE       AJSW042
         USING SCSTART,R1         *SET UP ADDRESSABILITY        AJSW042
SCTLOOP  DS    0H                                               AJSW042
         CLI   SCTCLASS,X'FF'     *IS THIS THE END OF TABLE?    AJSW042
         BC    EQ,CHKDEST         *YES, LET DEFAULT STAND       AJSW042
         CLC   SCTCLASS,JDSCLASS  *IS THIS OUR SYSOUT CLASS?    AJSW042
         BC    NE,SCTNEXT         *NO, GET NEXT ONE             AJSW042
         TM    SCTFLAG1,SCTCPY    *IS SCTCOPY FIELD VALID?      AJSW042
         BC    ALLOFF,CHKDEST     *NO, GO TEST DEST             AJSW042
         MVC   SSCS$CPY,SCTCOPY   *OUTPUT COPY COUNT            AJSW042
         B     CHKDEST            *GO TEST DEST                 AJSW042
SCTNEXT  DS    0H                                               AJSW042
         LA    R1,L'SCTSIZE(R1)   *GET NEXT CLASS TABLE ENTRY   AJSW042
         B     SCTLOOP            *GO TEST                      AJSW042
         DROP  R1                                               AJSW042
CHKCOPY  DS    0H                                               AJSW042
         TM    JDSFLG3,JDSDCOPY   *IS COPY FIELD VALID?         AJSW042
         BC    ALLOFF,CHKDEST     *NO, LET DEFAULT STAND        AJSW042
PUTCOPY  DS    0H                                               AJSW042
         MVC   SSCS$CPY,JDSCOPY   *OUTPUT COPY COUNT            AJSW042
CHKDEST  DS    0H                                               AJSW042
         TM    JDSFLG3,JDSDDEST   *IS DESTINATION FIELD VALID?  AJSW042
         BC    ALLOFF,CHKTYPE     *NO, LET DEFAULT STAND        AJSW042
         MVC   SSCS$DST,JDSDEST   *SYSOUT DESTINATION           AJSW042
CHKTYPE  DS    0H                                               AJSW042
         LA    R1,JDSTYPE         *INITIALIZE VARIABLE POINTER  AJSW042
         TM    JDSFLG3,JDSDTYPE   *IS TYPE THERE?               AJSW042
         BC    ALLOFF,CHKFORM     *NO, LET DEFAULT STAND        AJSW042
         MVC   SSCS$TYP,0(R1)     *OUTPUT TYPE REQUIRED         AJSW042
         LA    R1,8(R1)           *POINT PAST TYPE FIELD        AJSW042
CHKFORM  DS    0H                                               AJSW042
         TM    JDSFLG3,JDSDFORM   *IS FORM THERE?               AJSW042
         BC    ALLOFF,CHKFCB      *NO, LET DEFAULT STAND        AJSW042
         MVC   SSCS$FRM,0(R1)     *OUTPUT FORMS                 AJSW042
         LA    R1,8(R1)           *POINT PAST FORM FIELD        AJSW042
CHKFCB   DS    0H                                               AJSW042
         TM    JDSFLG3,JDSDFCB    *IS FCB THERE?                AJSW042
         BC    ALLOFF,CHKUCS      *NO, LET DEFAULT STAND        AJSW042
         MVC   SSCS$CAR,0(R1)     *OUTPUT CARRIAGE TAPE (FCB)   AJSW042
         LA    R1,8(R1)           *POINT PAST FCB FIELD         AJSW042
CHKUCS   DS    0H                                               AJSW042
         TM    JDSFLG3,JDSDUCS    *IS UCS THERE?                AJSW042
         BC    ALLOFF,UMOD070     *NO, LET DEFAULT STAND        AJSW042
         MVC   SSCS$UCS,0(R1)     *OUTPUT TRAIN                 AJSW042
UMOD070  DS    0H                                               AJSW042
         LA    R3,SSCS$ASZ(R3)    *POINT TO NEXT ARRAY ELEMENT  AJSW042
         B     UMOD030            *AND GET NEXT JDS             AJSW042
UMOD080  DS    0H                                               AJSW042
         MVC   SSCS$JDS,TVTZERO   *INDICATE NORMAL END          AJSW042
UMODEND  DS    0H                                               AJSW042
         JDSREL RQ=(R6)                                         AJSW042
         LA    R15,0              *SET GOOD RETURN CODE         AJSW042
         ST    R15,TSSSOB+SSOBRETN-SSOBEGIN *SAVE IT            AJSW042
         ARETURN RC=(R15)           *RETURN TO CALLER           AJSW042
UMODEND1 DS    0H                                               AJSW042
         LA    R15,SSCSBADI       *GET BAD STATUS RETURN CODE   AJSW042
         ST    R15,TSSSOB+SSOBRETN-SSOBEGIN *SAVE IT            AJSW042
         ARETURN RC=0               *RETURN TO CALLER           AJSW042
         LTORG                                                  AJSW042
UMODNUM  DC    CL7'AJSW042'       *USER NUMBER                  AJSW042
