++USERMOD (A$$W012)   /*
      THIS USERMOD IS TO INSTALL THE
      WC DASD PCS STAMP
      SVC = 238 - TYPE 4  'HSSLPA' DDNAME = SYS2.LPALIB

                                                     07/27/88 BRM  */.
++VER (Z038) FMID(A$$SVCS) .
++JCLIN .
//A$$W012 JOB WC07N0322,'W1-5311 RC CREWS'
//LPASVC  EXEC LINKS,
// PARM='NCAL,LIST,XREF,LET,REUS,RENT',
//    UNIT='3380',SER=IPLXXX,N=SYS2,NAME=HSSLPA,P1=' ',
//    MOD=,P2=' ',OBJ=OBJPDS01,CLASS=T
//SYSLIN   DD  *
   INCLUDE SYSPUNCH(WCSVC238)
   NAME WCSVC238(R)
/*
++SRC (WCSVC238) DISTLIB(ASRCLIB)  .
         TITLE 'WCSVC238 - OWNERSHIP STAMPER FOR DATA SETS'
WCSVC238 CSECT
         SPACE
***********************************************************************
*                                                                     *
*      THIS ROUTINE IS INVOKED BY A SVC 238 INSTRUCTION INSERTED      *
*      INTO EACH SVC 32 MODULE WHICH WRITES A NEW FORMAT 1 DSCB.      *
*      ITS FUNCTION IS TO STORE THE FIRST 12 BYTES OF THE FIRST       *
*      JOBCARD ACCOUNTING FIELD (PCS NUMBER) AND THE THIRD JOBCARD    *
*      ACCOUNTING FIELD (LOGONID).  THIS IS TO ENHANCE OUR DASD       *
*      ACCOUNTING. PARAMETERS TO THIS SVC ARE: THE ADDRESS OF THE     *
*      DSCB TO BE WRITTEN IN REG 1, AND THE UCB ADDRESS IN REG 0.     *
*      THE ACCOUNTING FIELD IS PICKED UP FROM THE JOB TYPE 30 SMF     *
*      RECORD POINTED TO BY THE TCT. IF A STARTED TASK IS ALLOC-      *
*      ATING THE DATASET THAN THE STC NAME AND A FIXED PCS NUMBER     *
*      (WC07N0998) IS PUT INTO THE DS1SYSCD FIELD.                    *
*                                                                     *
***********************************************************************
         SPACE
         REGS
         USING TCB,R4             STANDARD REGS FOR SVC
         USING RBSECT,R5
         USING WCSVC238,R6        SET UP BY SLIH
*
         L     R7,RBLINK          LOOK AT CALLER'S RB
         TM    RBOPSW+1-RBSECT(R7),X'81'    KEY<8, SUPER STATE?
         BNZR  R14                NO, IGNORE CALL
         LR    R8,R0              COPY UCB ADDR FOR CONVENIENCE
         USING UCB,R8             ESTABLISH UCB ADDRESSABILITY
         USING DSCBF1,R1          ESTABLISH FORMAT 1 ADDRESSABILITY
         CLI   DS1FMTID,X'F1'     CHECK IF FORMAT 1 DSCB
         BNER  R14                IF NOT WE WANT OUT
*
***********************************************************************
*                                                                     *
*        OTHER THINGS THAT WE COULD DO IN THIS EXIT (BUT DONT).       *
*                                                                     *
***********************************************************************
*
*        MVC   DS1REFD,DS1CREDT   COPY CREATION DATE TO REF DATE
*
*        TM    UCBSTAB,UCBBSTR    STORAGE VOLUME?
*        BZR   R14                NO, DO NOTHING
*
*        STCK  DS1SYSCD           GET TOD CLOCK VALUE
*        LM    R2,R3,DS1SYSCD     PICK UP TOD CLOCK
*        SRDL  R2,12              GET NUMBER OF MICROSECONDS
*        D     R2,=F'60000000'    GET NUMBER OF MINUTES
*        C     R2,=F'30000000'    MORE THAN 1/2
*        BNH   *+8                NO - SKIP ADDING
*        A     R3,=F'1'           ADD ONE
*        SR    R2,R2              CLEAR REG ZERO
*        D     R2,=F'1440'        GET NUMBER OF MINUTES + DAYS
*        SRDL  R2,32              GET NUMBER OF MINUTES TODAY
*        D     R2,=F'60'          GET NUMBER OF MINUTES + HOURS TODAY
*        CVD   R3,DS1SYSCD        CONVERT HOURS TO DECIMAL
*        UNPK  DS1SYSCD(3),DS1SYSCD+6(2) UNPACK NUMBER OF HOURS
*        OI    DS1SYSCD+2,X'F0'   CONVERT TO CHARACTER
*        MVC   DS1REFD+3(2),DS1SYSCD+1 MOVE TO TIME STAMP
*        CVD   R2,DS1SYSCD        CONVERT MINUTES TO DECIMAL
*        UNPK  DS1SYSCD(3),DS1SYSCD+6(2) UNPACK NUMBER OF MINUTES
*        OI    DS1SYSCD+2,X'F0'   CONVERT TO CHARACTER
*        MVC   DS1REFD+5(2),DS1SYSCD+1 MOVE TO TIME STAMP
*
***********************************************************************
*
         ICM   R10,07,DS1SYSCD+13  SAVE FOR WORK AREA
         ICM   R11,15,DS1SYSCD+16  SAVE FOR WORK AREA
         MVC   DS1SYSCD(20),=CL20' '  CLEAR ACCOUNT TO BLANKS
         L     R2,TCBTCT          FIND THE TCT
         LA    R2,0(,R2)          CLEAR HIGH BYTE
         LTR   R2,R2              GOT ONE?
         BZ    COMPACT            LEAVE ACCOUNT BLANK IF NONE
         L     R2,TCTT30J-SMFTCT(R2)  FIND JOB TYPE30 RECORD
         LTR   R2,R2              ONE THERE ?
         BZ    COMPACT            NO ACCOUNT IF NOT
         LA    R2,8(,R2)          POINT TO BEGINNING OF RECORD
         USING SMFRCD30,R2        ADDRESSABILITY
         CLC   SMF30WID,=C'STC '  STARTED TASK ?
         BNE   GETACCT            NO - GO GET ACCOUNTING FIELD
         LH    R3,SMF30ION        GET NUMBER OF IDENTIFICATION SECTIONS
         LTR   R3,R3              ANY THERE ?
         BZ    COMPACT            NO - SKIP IT
         L     R3,SMF30IOF        OFFSET TO IDENTIFICATION SECTION
         LA    R3,0(R2,R3)        POINT TO IT
         MVC   DS1SYSCD(8),0(R3)  MOVE STC NAME TO DSCB
         MVC   DS1SYSCD+8(12),=C'WC07N0998   ' MOVE OVERHEAD PCS NUMBER
         B     COMPACT            AND GO COMPACT IT
GETACCT  LH    R3,SMF30AON        GET NUMBER OF ACCOUNTING SECTIONS
         LTR   R3,R3              ANY THERE ?
         BZ    COMPACT            NO - SKIP IT
         L     R3,SMF30AOF        OFFSET TO ACCOUNTING SECTION
         LA    R3,0(R2,R3)        POINT TO IT
         SR    R2,R2              CLEAR REG
         IC    R2,0(R3)           LENGTH OF FIRST ACCOUNTING SECTION
         LTR   R2,R2              ANYTHING THERE ?
         BZ    COMPACT            NO - SKIP IT
         C     R2,=F'12'          LONGER THAN 12 ?
         BNH   *+8                NO - SKIP DEFAULT
         LA    R2,12              ONLY USE FIRST 12
         BCTR  R2,R0              DECREMENT BY ONE
         EX    R2,MOVEPCS         AND MOVE IN PCS NUMBER
         LA    R3,2(R2,R3)        POINT TO 2ND ACCOUNTING FIELD
         IC    R2,0(R3)           LENGTH OF 2ND ACCOUNTING SECTION
         LTR   R2,R2              ANYTHING THERE ?
         BZ    COMPACT            NO - SKIP IT
         LA    R3,1(R2,R3)        POINT TO 3RD ACCOUNTING FIELD
         IC    R2,0(R3)           LENGTH OF 3RD ACCOUNTING SECTION
         LTR   R2,R2              ANYTHING THERE ?
         BZ    COMPACT            NO - SKIP IT
         C     R2,=F'8'           LONGER THAN 8 ?
         BNH   *+8                NO - SKIP DEFAULT
         LA    R2,8               ONLY USE FIRST 8
         BCTR  R2,R0              DECREMENT BY ONE
         EX    R2,MOVELID         AND MOVE IN LID
*
COMPACT  TR    DS1SYSCD(20),TABLE01 TRANSLATE TO OUR CHAR SET
         LA    R2,DS1SYSCD        POINT TO INPUT
         LR    R12,R2             POINT TO OUTPUT
         LA    R3,6               NUMBER OF TRIPLETS
         SR    R8,R8              CLEAR REG
COMLOOP  SR    R9,R9              CLEAR REG
         IC    R9,0(R2)           FIRST CHARACTER
         M     R8,=F'40'          PRODUCT
         IC    R8,1(R2)           SECOND CHARACTER
         AR    R9,R8              ADD IT IN
         M     R8,=F'40'          PRODUCT
         AR    R0,R9              ADD TO FIRST
         IC    R8,2(R2)           THIRD CHARACTER
         AR    R9,R8              ADD IT IN
         STCM  R9,3,0(R12)        SAVE
         LA    R2,3(R2)           NEXT GROUP IN
         LA    R12,2(R12)         NEXT GROUP OUT
         BCT   R3,COMLOOP         AND DO IT AGAIN
         SR    R9,R9              CLEAR REG
         IC    R8,0(R2)           19TH CHARACTER
         IC    R9,1(R2)           20TH CHARACTER
         SLL   R8,4               SHIFT TO HIGH BITS
         OR    R9,R8              AND MOVE IT ONTO 20TH CHAR
         LA    R9,80(R9)          MAKE SURE > X'40'
         STC   R9,0(R12)          SAVE
*
         STCM  R10,07,DS1SYSCD+13 RESTORE WORK AREA
         STCM  R11,15,DS1SYSCD+16 RESTORE WORK AREA
         BR    R14                AND RETURN TO DADSM
*
MOVELID  MVC   DS1SYSCD(0),1(R3)  MOVE LID TO DSCB
MOVEPCS  MVC   DS1SYSCD+8(0),1(R3)  MOVE PCS NUMBER TO DSCB
*
*                   .0.1.2.3.4.5.6.7.8.9.A.B.C.D.E.F
*
TABLE01  DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  0.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  1.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  2.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  3.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  4.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A250A0A0A0A'  5.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  6.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A26270A0A0A'  7.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  8.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  9.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  A.
         DC    XL16'0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A'  B.
         DC    XL16'0A0B0C0D0E0F101112130A0A0A0A0A0A'  C.
         DC    XL16'0A1415161718191A1B1C0A0A0A0A0A0A'  D.
         DC    XL16'0A0A1D1E1F20212223240A0A0A0A0A0A'  E.
         DC    XL16'000102030405060708090A0A0A0A0A0A'  F.
*
         LTORG
         EJECT
DSCBF1   DSECT
         IECSDSL1 (1)             MAP FORMAT 1 DSCB
         EJECT
         PRINT NOGEN
         IKJTCB
         SPACE
         IKJRB
         SPACE
UCB      DSECT
         IEFUCBOB
         SPACE
         IEFTCT
         SPACE
         IFASMFR 30
         SPACE
         END   WCSVC238
