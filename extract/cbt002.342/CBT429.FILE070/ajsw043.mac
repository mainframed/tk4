++USERMOD(AJSW043)     /*
                    ENHANCEMENTS TO THE *I,B COMMAND  */ .
++VER(Z038) FMID(HJS2215).
++SRCUPD(IATGRWJ).
./ CHANGE NAME=IATGRWJ
*        USER MODS =                                            AJSW043
*                                                               AJSW043
*             - CHANGE IAT8688 TO INCLUDE :                     AJSW043
*               1) NUMBER OF JOBS WAITING TO BE QUEUED          AJSW043
*               2) NUMBER OF JOBS QUEUED                        AJSW043
*               3) NUMBER OF ACTIVE JOBS                        AJSW043
*             - ADD THREE KEYWORDS :                            AJSW043
*               1) D=DSPNAME - TO RECEIVE MESSAGE               AJSW043
*                  IAT8688 FOR THE DSP SPECIFIED                AJSW043
*               2) C=CLASSNAME - TO RECEIVE MESSAGE             AJSW043
*                  IAT8688 FOR THE CLASS SPECIFIED              AJSW043
*               3) G=GROUPNAME - TO RECEIVE MESSAGE             AJSW043
*                  IAT8688 FOR THE GROUP SPECIFIED              AJSW043
*                                                               AJSW043
         MVI   BZFLAG,X'0'        *CLEAR FLAG                   AJSW043
*        LA    R4,DSPCNTS  ADDR OF AREA TO CLEAR   5465@ZA26081 AJSW043
         L     R4,=A(DSPCNTS)      ADDR OF AREA TO CLEAR        AJSW043
*        LA    R5,MAXDSPSQ*4       LENGTH TO CLEAR  5465@ZA26081AJSW043
         LA    R5,MAXDSPSQ*BZLGTH *LENGTH TO CLEAR              AJSW043
         ST    R4,SAVER4          *SAVE JQE ADDRESS             AJSW043
         CLI   WTDRSVDU,X'FF'     *WAS *I B,D=  COMMAND ISSUED? AJSW043
         BC    EQ,SKIPMOVE        *YES, BRANCH                  AJSW043
SKIPMOVE DS    0H                                               AJSW043
*        BC    ALLOFF,IB055       BIN                   @Z40LB00AJSW043
         BC    ALLOFF,IB052                                     AJSW043
*        BC    ALLOFF,IB055                                 @LJAAJSW043
         BC    ALLOFF,IB052                                     AJSW043
*        LA    R4,2               SET OFFSET AS 2           @LJCAJSW043
         L     R9,=A(USER000)     *ADDR OF ROUTINE              AJSW043
         B     0(R9)              *GO TO ROUTINE                AJSW043
SAVER4   DS    F                  *REG 4 SAVE AREA              AJSW043
*        MH    R1,=H'4'           DSP SEQ * COUNTER LNTH@Z40LB00AJSW043
         MH    R1,BZLGN           *GET OFFSET                   AJSW043
*        LA    R1,DSPCNTS(R1) ADDR SPECIFIC COUNTER    @Z40LB00 AJSW043
         A     R1,=A(DSPCNTS)      ADDR SPECIFIC COUNTER        AJSW043
*        LA    R5,DSPCNTS  ADDR DSP COUNTS             @Z40LB00 AJSW043
         L     R5,=A(DSPCNTS)      ADDR DSP COUNTS              AJSW043
*        L     R1,0(,R5)          GET BOTH COUNTS       @Z40LB00AJSW043
*        LTR   R1,R1              ANY COUNT(S)          @Z40LB00AJSW043
*        BC    NPLUS,FMTBK500     BIN                   @Z40LB00AJSW043
         CLC   0(6,R5),=XL6'0'    *ANY COUNTS?                  AJSW043
         BC    EQ,FMTBK500        *BIN                          AJSW043
         MVC   BKJOBS1,UNPKAREA+4 *GET NUMBER                   AJSW043
         LH    R1,4(,R5)          *GET AREA FOR COUNT           AJSW043
         BAL   R9,CVTDD           *GO GET PRINTABLE NUMBER      AJSW043
*        AH    R5,=H'4'           ADDR NEXT DSP COUNT  @Z40LB00 AJSW043
         AH    R5,BZLGN           *GET DISPLACEMENT OF DSP      AJSW043
BKJOBS1  DC    CL4' ',C'(Q) '                                   AJSW043
*DSPCNTS DC    (MAXDSPSQ)F'0'  DSP COUNTS FOR *I B  5465@Z40LB00AJSW043
* ABOVE MOVED PAST LITERAL POOL - ADDRESSABILITY PROBLEMS       AJSW043
BZOFFST2 DC    H'2'               *LENGTH OF OFFSET             AJSW043
BZOFFST4 DC    H'4'               *LENGTH OF OFFSET             AJSW043
BZLGN    DC    H'6'               *LENGTH OF CELL               AJSW043
BZLGTH   EQU   X'6'               *LENGTH OF CELL               AJSW043
BZFLAG   DC    X'0'               *FLAG BYTE                    AJSW043
BZCLS    EQU   X'80'              *CLASS WANTED                 AJSW043
BZGRP    EQU   X'40'              *GROUP WANTED                 AJSW043
DSPCNTS  DC    (MAXDSPSQ)XL6'0'   *DSP COUNTS FOR *I B          AJSW043
         SPACE 3                                                AJSW043
         USING USER000,R9                                       AJSW043
         USING JCTSTART,R3                                      AJSW043
         USING WTDSTART,R2                                      AJSW043
         USING IATGRWJ,R10                                      AJSW043
USER000  DS    0H                                               AJSW043
         L     R10,=A(IATGRWJ)                                  AJSW043
         L     R6,SAVER4          *GET JQE ADDRESS              AJSW043
         CLI   WTDUSER,X'00'      *IS THERE A CLASS WANTED?     AJSW043
         BC    EQ,USERG0G         *NO, CHECK OTHER PARMS        AJSW043
         OI    BZFLAG,BZCLS       *SET FLAG FOR CLASS           AJSW043
         B     USERG0             *CHECK OTHER PARMS            AJSW043
USERG0G  DS    0H                                               AJSW043
         CLI   WTDIJNAM,X'00'     *IS THERE A GROUP WANTED?     AJSW043
         BC    EQ,USERG0          *NO, CONTINUE                 AJSW043
         OI    BZFLAG,BZGRP       *SET FLAG FOR GROUP           AJSW043
USERG0   DS    0H                                               AJSW043
         LR    R1,R3              *JCT ADDRESS                  AJSW043
         AH    R1,JCTFIXL         *ADDRESS OF SE                AJSW043
         USING SESTART,R1                                       AJSW043
         XR    R4,R4              *SET OFFSET FOR COUNTER       AJSW043
         TM    WTDSPNO,X'FF'      *IS THERE A DSP WANTED?       AJSW043
         BC    ALLON,USERG01      *NO, CHECK OTHER PARMS        AJSW043
         BC    ALLOFF,USERG01     *NO, CHECK OTHER PARMS        AJSW043
         SR    R7,R7              *CLEAR FOR SE COUNT           AJSW043
         IC    R7,JCTNOSES        *GET NUMBER OF SE'S           AJSW043
USERG00  DS    0H                                               AJSW043
         CLC   WTDSPNO,SEDSPNO    *IS THIS THE DSP?             AJSW043
         BC    EQ,USERG01         *YES, GET INFORMATION         AJSW043
         AH    R1,SVSESIZE        *POINT TO NEXT SE             AJSW043
         BCT   R7,USERG00         *GO THRU CHAIN                AJSW043
         B     FUNCRET            *DSP DOES NOT MATCH           AJSW043
USERG01  DS    0H                                               AJSW043
         TM    BZFLAG,BZCLS+BZGRP *WERE EITHER OF THESE WANTED? AJSW043
         BC    ALLOFF,USERG03     *GO WITH CHECKS               AJSW043
         TM    BZFLAG,BZCLS       *WAS CLASS WANTED?            AJSW043
         BC    ALLOFF,USERG02     *NO, MUST BE GROUP            AJSW043
         CLC   JCTSCHCL,WTDUSER   *IS THIS THE SAME CLASS?      AJSW043
         BC    NE,FUNCRET         *NO, GET ANOTHER              AJSW043
         B     USERG03            *CONTINUE                     AJSW043
USERG02  DS    0H                                               AJSW043
         USING JQESTART,R6        *R6 IS POINTING TO JQE        AJSW043
         SLR   R5,R5              *CLEAR FOR GROUP              AJSW043
         IC    R5,JQEGRP          *GET GROUP NUMBER             AJSW043
         BCTR  R5,0               *MINUS 1 FOR INDEX            AJSW043
         L     R7,MGROUP          *GET FIRST GROUP TABLE        AJSW043
         MH    R5,MGLNG-MGSTART(,R7) *OFFSET TO GROUP TABLE     AJSW043
         AR    R7,R5              *ADDR OF ENTRY                AJSW043
         CLC   WTDIJNAM,MGNAME-MGSTART(R7) *ARE THESE THE SAME? AJSW043
         BC    NE,FUNCRET         *NO, GET ANTOHER              AJSW043
         DROP  R6                                               AJSW043
USERG03  DS    0H                                               AJSW043
         MVC   SAVJNUM,JCTJOB     *GET JOB NUMBER FOR RQ        AJSW043
         ST    R9,SAVE9           *SAVE BASE                    AJSW043
         BAL   R9,FINDRQ          *GO GET THE RQ FOR DSP        AJSW043
         L     R9,SAVE9           *RESTORE BASE                 AJSW043
         LR    R5,R1              *GET RESQUEUE ADDRESS         AJSW043
         XR    R4,R4              *CLEAR FOR DISPLACEMENT       AJSW043
         USING RQSTART,R5                                       AJSW043
         LTR   R5,R5              *IS THERE A RESQUEUE?         AJSW043
         BC    ZERO,USERNOR       *GO DECIDE WHICH QUEUE        AJSW043
         CLI   RQINDEX,RQNOSUB    *IS THIS A DSP?               AJSW043
         BC    EQ,USER055A        *YES, GO DO IT                AJSW043
         CLC   SEDSPNO,DSPOUTPT   *OUTPUT SERVICE?              AJSW043
         BC    EQ,USER055O        *YES, GO DO IT                AJSW043
         CLI   RQINDEX,RQSELECT   *IS THIS DSP QUEUED?          AJSW043
         BC    LT,IB055           *NO, NOT YET                  AJSW043
         BC    GT,USER055         *IT IS ALREADY ACTIVE?        AJSW043
         TM    RQFLG7,RQJSSPR     *SPEC RESCHED                 AJSW043
         BC    ALLON,IB055        *YES, W QUEUE                 AJSW043
         AH    R4,BZOFFST2        *SET THE OFFSET               AJSW043
         B     IB055              *GO SET COUNT                 AJSW043
USER055O DS    0H                                               AJSW043
         CLC   SEDSPNO,DSPOUTPT   *OUTPUT SERVICE?              AJSW043
         BC    NE,USER055         *A QUEUE                      AJSW043
         CLI   RQINDEX,RQOUTQUE   *WAITING FOR WRITER?          AJSW043
         BC    NE,USER055         *A QUEUE                      AJSW043
         USING OSSSTART,R7                                      AJSW043
         L     R7,RQOSSTOP        *GET OSS CHAIN                AJSW043
         LTR   R7,R7              *IS THERE ONE?                AJSW043
         BC    ZERO,IB055         *W QUEUE                      AJSW043
USER0551 DS    0H                                               AJSW043
         CLC   OSSSCHED,TVTZERO   *SCHED COUNT ZERO?            AJSW043
         BC    EQ,USER0552        *GET NEXT OSS                 AJSW043
         TM    OSSFLAG1,OSSHOLD   *DATA SET HELD?               AJSW043
         BC    ALLOFF,USER055     *A QUEUE                      AJSW043
USER0552 DS    0H                                               AJSW043
         ICM   R7,15,OSSCHAIN     *GET NEXT OSS                 AJSW043
         BC    NZERO,USER0551     *GO CHECK SCHED COUNT         AJSW043
         AH    R4,BZOFFST2        *SAY PENDING                  AJSW043
         B     IB055                                            AJSW043
USER055A DS    0H                                               AJSW043
         TM    RQFLG7,RQJSSPR     *RESCHDULE?                   AJSW043
         BC    ALLON,IB055        *YES, W QUEUE                 AJSW043
         TM    SEFLAGS,SEACTIVE   *ACTIVE?                      AJSW043
         BC    ALLON,USER055      *YES, SET OFFSET              AJSW043
         B     IB055              *W QUEUE                      AJSW043
         DROP  R5                                               AJSW043
USER055  DS    0H                                               AJSW043
         AH    R4,BZOFFST4        *SET THE OFFSET               AJSW043
         B     IB055              *GO UPDATE THE COUNT          AJSW043
USERNOR  DS    0H                                               AJSW043
         CLC   SEDSPNO,DSPMAIN    *IS THE JOB ON MAIN?          AJSW043
         BC    EQ,IB055           *YES, W QUEUE                 AJSW043
         CLC   SEDSPNO,DSPOUTPT   *IS THE JOB ON OUTSERV?       AJSW043
         BC    EQ,IB055           *YES, W QUEUE                 AJSW043
         TM    JCTFL1,JCTOPHLD+JCTTHOLD *IS THE JOB IN HOLD?    AJSW043
         BC    NALLOFF,IB055      *YES, W QUEUE                 AJSW043
         TM    JCTDJFL1,JCTDJCOH+JCTDJHLD *DJC HOLD?            AJSW043
         BC    NALLOFF,IB055      *YES, W QUEUE                 AJSW043
         CLI   0(R1),X'00'        *IS THIS DSP STARTED?         AJSW043
         BC    NE,IB055           *NO, W QUEUE                  AJSW043
         AH    R4,BZOFFST2        *Q QUEUE                      AJSW043
         B     IB055              *RETURN                       AJSW043
         DROP  R9                                               AJSW043
UMODNUM  DC    CL7'AJSW043'
++SRCUPD(IATIQBK).
./ CHANGE NAME=IATIQBK
* USER MODS:                                                    AJSW043
*             - ADD THREE NEW KEYWORDS:                         AJSW043
*               1) D=DSPNAME TO RECEIVE MSG IAT8688 FOR         AJSW043
*                  THE DSP SPECIFIED.                           AJSW043
*               2) C=CLASSNAME TO RECEIVE MSG IAT8688 FOR       AJSW043
*                  THE CLASS SPECIFIED.                         AJSW043
*               3) G=GROUPNAME TO RECEIVE MSG IAT8688 FOR       AJSW043
*                  THE GROUP SPECIFIED.                         AJSW043
*                                                               AJSW043
         IATYDSP                                                AJSW043
         IATYMCL                                                AJSW043
         IATYMGP                                                AJSW043
         CLC   =C'D=',REQUEST2    *WAS A DSP SPECIFIED?         AJSW043
         BC    EQ,BACKDSP         *YES, GO TO THAT ROUTINE      AJSW043
*              THIS SECTION HANDLES I,B + I,B,T=GROUPNAME      *AJSW043
*BK010   BAL   R9,ENQWTD                                        AJSW043
BK010    DS    0H                                               AJSW043
*--------------------------------------------------------------*AJSW043
*              THIS SECTION HANDLES I,B,D=DSPNAME              *AJSW043
*--------------------------------------------------------------*AJSW043
BACKDSP  DS    0H                                               AJSW043
         BAL   R9,BLDWTD          *GET WTD                      AJSW043
         USING WTDSTART,R4                                      AJSW043
         MVI   WTDRSVDU,X'FF'     *INDICATE *I B,D= COMMAND     AJSW043
         CLC   =C'ALL',REQUEST3   *WERE ALL DSP'S WANTED?       AJSW043
         BC    NE,GETDSP          *NO, BRANCH                   AJSW043
         MVI   WTDSPNO,X'FF'      *SET DSP FOR ALL              AJSW043
         MVI   WTDFUNCT,WTINQBK   *SET FUNCTION                 AJSW043
         B     SPLIT              *RETURN                       AJSW043
GETDSP   DS    0H                                               AJSW043
         L     R7,DSPDIC          *GET DSP                      AJSW043
         USING DSPSTART,R7                                      AJSW043
FINDDSP  DS    0H                                               AJSW043
         CLC   DSPNAME,REQUEST3   *IS THIS THE DSP WANTED?      AJSW043
         BC    NE,NEXTDSP         *NO, GO GET THE NEXT DSP      AJSW043
         MVC   WTDSPNO,DSPNO      *SAVE THE NUMBER              AJSW043
         MVI   WTDFUNCT,WTINQBK   *SET FUNCTION                 AJSW043
         B     SPLIT              *RETURN                       AJSW043
NEXTDSP  DS    0H                                               AJSW043
         LA    R7,DSPEND          *POINT TO NEXT DSP            AJSW043
         CLI   DSPSTART,X'FF'     *IS THIS THE END?             AJSW043
         BC    NE,FINDDSP         *NO, CHECK DSP                AJSW043
         MVC   USDSPNM,REQUEST3   *MOVE IN DSP REQUESTED        AJSW043
         LA    R1,USNODSP         *LOAD MSG ID                  AJSW043
         BAL   R9,PRINT           *ISSUE MSG                    AJSW043
         B     SPLIT                                            AJSW043
         SPACE 3                                                AJSW043
USNODSP  DC    AL1(USEND-USST)                                  AJSW043
USST     DC    C'IAT0009 '                                      AJSW043
USDSPNM  DS    CL8                                              AJSW043
         DC    C' IS NOT A VALID DSP NAME'                      AJSW043
USEND    EQU   *                                                AJSW043
         EJECT                                                  AJSW043
         OI    BACKFLAG,USPOST    *WTD CANNOT BE POSTED         AJSW043
*SPLIT   ARETURN                                                AJSW043
SPLIT    DS    0H                                               AJSW043
         CLI   REQUEST5,C' '      *IS THERE A CLASS OR GROUP?   AJSW043
         BC    EQ,SPLIT1          *NO, RETURN                   AJSW043
         CLC   REQUEST4(2),=CL2'G=' *WAS GROUP SPECIFIED?       AJSW043
         BC    EQ,USGROUP         *YES, DO IT                   AJSW043
         EJECT                                                  AJSW043
*--------------------------------------------------------------*AJSW043
*           THIS SECTION HANDLES C=CLASS AND G=GROUP           *AJSW043
*--------------------------------------------------------------*AJSW043
USCLASS  DS    0H                                               AJSW043
         L     R1,MCLASS          *POINT TO CLASS TABLE         AJSW043
         USING MCSTART,R1                                       AJSW043
USC100   DS    0H                                               AJSW043
         CLC   MCNAME,REQUEST5    *IS THIS IT?                  AJSW043
         BC    EQ,USC200          *YES, BRANCH                  AJSW043
         AH    R1,MCLNG           *ADDR OF NEXT CLASS TABLE     AJSW043
         CLC   TVTRMFF,MCNAME     *END OF CLASS TABLES?         AJSW043
         BC    NE,USC100          *NO, CHECK IT                 AJSW043
         MVC   USREQNM,REQUEST5   *MOVE NAME TO MESSAGE         AJSW043
         MVC   USREQWD,=C'CLASS'  *MOVE NAME TO MESSAGE         AJSW043
         LA    R1,USNONM          *GET MESSAGE ADDRESS          AJSW043
         BAL   R9,PRINT           *PUT OUT MESSAGE              AJSW043
         B     SPLIT1             *RETURN                       AJSW043
USC200   DS    0H                                               AJSW043
         MVC   WTDUSER,REQUEST5   *INSERT CLASS OR GROUP        AJSW043
         B     SPLIT1             *RETURN                       AJSW043
         SPACE 5                                                AJSW043
USGROUP  DS    0H                                               AJSW043
         L     R1,MGROUP          *POINT TO GROUP TABLE         AJSW043
         USING MGSTART,R1                                       AJSW043
USG100   DS    0H                                               AJSW043
         CLC   MGNAME,REQUEST5    *IS THIS IT?                  AJSW043
         BC    EQ,USG200          *YES, BRANCH                  AJSW043
         TM    MGFLAG,MGLAST      *IS THIS THE LAST ENTRY?      AJSW043
         BC    ALLON,USG300       *YES, ERROR                   AJSW043
         AH    R1,MGLNG           *NO, GET NEXT ENTRY           AJSW043
         B     USG100                                           AJSW043
USG200   DS    0H                                               AJSW043
         MVC   WTDIJNAM,REQUEST5  *SAVE GROUP                   AJSW043
         B     SPLIT1             *RETURN                       AJSW043
USG300   DS    0H                                               AJSW043
         MVC   USREQNM,REQUEST5   *MOVE NAME TO MESSAGE         AJSW043
         MVC   USREQWD,=C'GROUP'  *MOVE NAME TO MESSAGE         AJSW043
         LA    R1,USNONM          *GET MESSAGE ADDRESS          AJSW043
         BAL   R9,PRINT           *PUT OUT MESSAGE              AJSW043
         B     SPLIT1             *RETURN                       AJSW043
         SPACE 3                                                AJSW043
USNONM   DC    AL1(USEND1-USST1)                                AJSW043
USST1    DC    C'IAT0109 '                                      AJSW043
USREQNM  DS    CL8                                              AJSW043
         DC    C' IS NOT A VALID '                              AJSW043
USREQWD  DS    CL5                                              AJSW043
         DC    C' NAME'                                         AJSW043
USEND1   EQU   *                                                AJSW043
         EJECT                                                  AJSW043
SPLIT1   DS    0H                                               AJSW043
         TM    BACKFLAG,USPOST    *CAN WTD BE POSTED?           AJSW043
         BC    ALLON,USSPLIT      *NO, RETURN                   AJSW043
         BAL   R9,ENQWTD                                        AJSW043
USSPLIT  DS    0H                                               AJSW043
         ARETURN                                                AJSW043
USPOST   EQU   X'01'              *WTD CAN NOT BE POSTED        AJSW043
UMODNUM  DC    CL7'AJSW043'
++SRCUPD(IATIQDV).
./ CHANGE NAME=IATIQDV
*        USER MODS =                                            AJSW043
*                                                               AJSW043
*             - ADD THREE NEW KEYWORDS TO *I,B COMMAND:         AJSW043
*               D=DSPNAME    C=CLASSNAME    G=GROUPNAME         AJSW043
*                                                               AJSW043
         CLC   REQUEST2(2),=C'D=' *IS A DSP WANTED?             AJSW043
         BC    EQ,CHKBCKRJ        *YES, CHECK FOR MORE INPUT    AJSW043
         CLC   REQUEST2(2),=C'C=' *IS JUST A CLASS WANTED?      AJSW043
         BC    NE,USCHKG          *NO, CHECK FOR MORE INPUT     AJSW043
         MVC   REQUEST4,REQUEST2  *MOVE CLASS KEYWORD           AJSW043
         MVC   REQUEST5,REQUEST3  *MOVE CLASS                   AJSW043
         MVC   REQUEST3,=CL8'ALL' *SET D=ALL                    AJSW043
         MVC   REQUEST2,=CL8'D='  *SET D=ALL                    AJSW043
         B     CHKBCKRJ           *CHECK FOR MORE INPUT         AJSW043
USCHKG   DS    0H                                               AJSW043
         CLC   REQUEST2(2),=C'G=' *IS JUST A GROUP WANTED?      AJSW043
         BC    NE,CHEKBACK        *YES, CHECK FOR MORE INPUT    AJSW043
         MVC   REQUEST4,REQUEST2  *MOVE GROUP KEYWORD           AJSW043
         MVC   REQUEST5,REQUEST3  *MOVE GROUP                   AJSW043
         MVC   REQUEST3,=CL8'ALL' *SET D=ALL                    AJSW043
         MVC   REQUEST2,=CL8'D='  *SET D=ALL                    AJSW043
         B     CHKBCKRJ           *CHECK INPUT                  AJSW043
*        BC    NE,LOADBACK         OK. LOAD MODULE              AJSW043
         BC    EQ,REQ3ERR         *YES, ERROR                   AJSW043
         CLI   REQUEST4,C' '      *IS THERE A KEYWORD?          AJSW043
         BC    EQ,LOADBACK        *NO, GET LOAD MOD             AJSW043
         CLC   REQUEST4(2),=C'G=' *IS A GROUP WANTED?           AJSW043
         BC    EQ,CHKBCKR5        *YES, CHECK FOR MORE INPUT    AJSW043
         CLC   REQUEST4(2),=C'C=' *IS A CLASS WANTED?           AJSW043
         BC    NE,REQ3ERR         *NO, ERROR                    AJSW043
CHKBCKR5 DS    0H                                               AJSW043
         CLI   REQUEST5,C' '      *IS IT A BLANK?               AJSW043
         BC    NE,LOADBACK        *NO, LOAD MODULE              AJSW043
UMODNUM  DC    CL7'AJSW043'
