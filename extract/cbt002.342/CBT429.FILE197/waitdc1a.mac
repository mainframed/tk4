//AIMS31DC JOB 'IMSGROUP  SH28205610*110A044990R2    999  9999997   ', *
// REGION=1024K,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016,
// TIME=1
//*MAIN ORG=LOCAL,CLASS=L5
//WAITDC10 EXEC IMSUPDTE,MEMBER=WAITDC10,
// P=,SP=IMS,MP=IMA,LP=IMA,
// SYSLMOD=PERM,
//*PGMC=IEV90,
//*CONDL=0,
// LOAD=LOAD,
// SOUT='*',
// ACCT=0
//C.SYSIN DD *
          MACRO
&N        XCXC
          LCLA &I
          LCLC &NN
.LOOP     ANOP
&I        SETA &I+1
&NN       SETC  ''
          AIF  (&I GT 1).OVNN
&NN       SETC  '&N'
.OVNN     ANOP
&NN       XC    &SYSLIST(&I),&SYSLIST(&I)
          AIF  (&I LT N'&SYSLIST).LOOP
          MEND
***********************************************************************
   EJECT
***********************************************************************
WAITDC10 CSECT
         PROLOGUE SAVE=INLINE,DATE=&SYSDATE-&SYSTIME
         PRINT NOGEN
         REQUATE
         CEQUATE
E#M      EQU   R1
P#P      EQU   R2
R#BALC   EQU   R9
L##      EQU   R14
R#W      EQU   R15
NOTONES  EQU   14
         ST    R1,R1@ENTRY
         WTPASSEM
         LOAD  EP=KEYFLAGS
         ST    R0,EPKEYFGS
         L      R15,EPKEYFGS
         CALL  (15),(R1@ENTRY,KEYWORDS)
         BAL   L##,EVAL
*        ********
LOOP     #
         BAL   L##,LOOK                  LOOK AT THE TARGET.
         OC    LOOKFLAG,LOOKFLAG         Q.  IS  THE TARGET READY.
         BNZ   GOTIT                       YES, HOORAY.
         BAL   L##,WAIT                    NO; WAIT A WHILE; TRY AGAIN.
         SP    P1,=P'1'                  Q.  HAVE WE BEEN TOO LONG.
         BP    LOOP                        NO; LOOP.
EXHAUST  DLLINK (M,4),'RIIMSWT99 ',*JOBNAME,',',*DATETIME,',  ',       *
               ' DESIRED RESOURCE STILL NOT READY; TRY AGAIN LATER.',  *
               *WTO
         ABEND 12,DUMP
**************************
GOTIT    #
         DLLINK (M,4),'RIIMSWT08 ',*JOBNAME,',',*DATETIME,',  ',       *
               ' DESIRED RESOURCE AND CONDITION FOUND; CONTINUING. ',  *
               *WTO
         L     R15,BIGRC15
         TM    PMABEND,X'80'
         BALC  ALLON,ABEND
         EPILOGUE RETURN=(R15)
ABEND    ABEND 11,DUMP
         PRINT NOGEN
P1       DC    PL4'200'
***************************************************************
    TITLE ' WAITDC10  --  S/R TO WAIT FOR A WHILE.'
***************************************************************
WAIT     BENT
         STIMER WAIT,BINTVL=WAITHUND
         L     R#W,WAITTRIP
         LA    R#W,1(R#W)
         ST    R#W,WAITTRIP
         C     R#W,WAITMSG
         BC    LT,WAITQ
         XCXC  WAITTRIP
         DLLINK (M,4),'RIIMSWT01 ',*JOBNAME,',',*DATETIME,',  ',       *
               ' WAITING FOR IMS NUC; CTL REG SSID=',(LOOKSSID,4),'.', *
               *WTO
WAITQ    #
         BEXIT
WAITHUND DC    A(0)
WAITTRIP DC    A(0)
WAITMSG  DC    A(0)
***************************************************************
    TITLE ' WAITDC10  --  S/R TO LOOK FOR SUBJECT.'
***************************************************************
LOOK     BENT
         LA    L##,LOOKRET SET RETURN ADDR FROM FOLLOWING PSEUDO BAL'S.
*        ********
         CLC   =C'DBRC',LOOKTYPE
         BC    EQ,DBRC
*        ****
         CLC   =C'DLS ',LOOKTYPE
         BC    EQ,DLISAS
*        ********
         BALC  ABEND              IF NONE OTHER.
*************************
LOOKRET  #
         BEXIT
LOOKFLAG DC    A(0)
LOOKTYPE DC    CL8' '
LOOKSSID DC    CL4' '
***************************************************************
    TITLE ' WAITDC10  --  S/R TO LOOK IF  DBRC.'
***************************************************************
B#DS     EQU   R3
B#DA     EQU   R4
B#DB     EQU   R5
DBRC     BENT
         BAL   L##,NUC00               GO CHECK ON THE NUC.
         ICM   B#DS,7,NUCPSCDI+1       Q. WAS THE NUC THERE.
         BZ    DBEXIT                    NO; SKIP OUT.
         USING SCD,B#DS
**       **************
**  CODE TO TEST FOR APPEARANCE THAT THE NUC HAS ISSUED THE START
**      FOR DBRC TASK/JOB.
*         THIS CODED LIKE DFSXRIC0 WHERE IT STARTS DBRC VIA SVC-34.
DBRWAB   CLI   PMSTART,0               Q. TEST FOR DBRC STARTED.
         BE    DBRWAB9                   NO; SKIP OVER
         XCXC  DBRCFLAG                CLEAR IT.
         AP    DBRTRC1,=P'1'           TRACE MARKER.
         MVC   DBRWWA,SCDDBRWA         COPY POINTER.
         MVC   DBRWWB,SCDDBRWB         COPY POINTER.
         ICM   B#DA,7,SCDDBRWA+1       Q. DBRWA PRESENT.
         BZ    DBEXIT                    NO; SKIP OUT.
         AP    DBRTRC2,=P'1'           TRACE MARKER.
         ICM   B#DB,7,SCDDBRWB+1       Q. DBRWB PRESENT.
         BZ    DBEXIT                    NO; SKIP OUT.
         USING DFSRCWKA,B#DA
         USING DFSRCWKB,B#DB
         AP    DBRTRC3,=P'1'           TRACE MARKER.
         CLC   =A(0),RCWACQRE          Q. POINTER REAL.
         BE    DBEXIT                    NO; SKIP OUT
         AP    DBRTRC4,=P'1'           TRACE MARKER.
         CLC   =A(0),RCWBCHAN          Q. POINTER REAL.
         BE    DBEXIT                    NO; SKIP OUT
         AP    DBRTRC5,=P'1'           TRACE MARKER.
         MVC   DBRWCQRE,RCWACQRE       COPY POINTER.
         MVC   DBRWCHAN,RCWBCHAN       COPY POINTER.
         CLC   RCWACQRE,RCWBCHAN       Q. HAS DFSXRIC0 STARTED DBRC.
         BNE   DBEXIT                    NO; SKIP OUT.
         AP    DBRTRC6,=P'1'           TRACE MARKER.
         MVC   DBRCFLAG,RCWBCHAN         YES; SET NUC FLAG NONZERO.
DBRWAB9  #
**       **************
**  CODE TO TEST FOR THE NUC'S BEING IN WAIT FOR THE DBRC TO CONNECT.
*         THIS CODED LIKE DFSXCIC0 WHERE IT TESTS ECB FOR DBRC STARTED.
DBWT     CLI   PMWAIT,0                Q. TEST FOR WAITING FOR DBRC.
         BE    DBWT9                     NO; SKIP OVER
         AP    DBRTRC7,=P'1'           TRACE MARKER.
         XCXC  DBRCFLAG                CLEAR IT.
         MVC   DBWTWA,SCDDBRWA         COPY POINTER.
         ICM   B#DA,7,SCDDBRWA+1       Q. DBRWA PRESENT.
         BZ    DBEXIT                    NO; SKIP OUT.
         AP    DBRTRC8,=P'1'           TRACE MARKER.
         USING DFSRCWKA,B#DA
         MVC   DBWTECB,RCWAIECB        COPY ECB.
         TM    RCWAIECB,X'80'          Q. WAITING FOR DBRC.
         BZ    DBEXIT                    NO; SKIP OUT.
         AP    DBRTRC9,=P'1'           TRACE MARKER.
         MVC   DBRCFLAG,RCWAIECB         YES; SET FLAG NONZERO.
DBWT9    #
**       **************
DBEXIT   #
         MVC   LOOKFLAG,DBRCFLAG
         BEXIT
         DC    C'DBRC DEBUG DATA'
DBRWWA   DC    A(0)
DBRWWB   DC    A(0)
DBRWCQRE DC    A(0)
DBRWCHAN DC    A(0)
DBWTWA   DC    A(0)
DBWTECB  DC    A(0)
DBRCFLAG DC    A(0)
DBRTRC1  DC    PL4'0'
DBRTRC2  DC    PL4'0'
DBRTRC3  DC    PL4'0'
DBRTRC4  DC    PL4'0'
DBRTRC5  DC    PL4'0'
DBRTRC6  DC    PL4'0'
DBRTRC7  DC    PL4'0'
DBRTRC8  DC    PL4'0'
DBRTRC9  DC    PL4'0'
         DROP  B#DS,B#DA,B#DB
***************************************************************
    TITLE ' WAITDC10  --  S/R TO LOOK IF  DLISAS'
***************************************************************
B#LS     EQU   R3
B#LA     EQU   R4
B#LB     EQU   R5
DLISAS   BENT
         BAL   L##,NUC00
         ICM   B#LS,X'7',NUCPSCDI+1
         BZ    DLIEXIT
         USING SCD,B#LS
         TM    SCDSMMS1,SCDSDLIS       Q. RUNNING W/ DLI-SAS.
         BALC  ZERO,ABEND                NO; ABEND; USELESS.
**       **************
**  CODE TO TEST FOR APPEARANCE THAT THE NUC HAS ISSUED THE START
**      FOR DLI  TASK/JOB.
*         THIS CODED LIKE DFSXLIC0 WHERE IT STARTS DLI  VIA SVC-34.
DLIWAB   CLI   PMSTART,0               Q. TEST FOR DLI  STARTED.
         BE    DLIWAB9                   NO; SKIP OVER
         XCXC  DLIFLAG                 CLEAR IT.
         AP    DLITRC1,=P'1'           TRACE MARKER.
         TM    SCDLICT1,SCDL1RDR       Q. HAS THE START BEEN ISSUED?
         BZ    DLIEXIT                   NO; SKIP OUT.
         AP    DLITRC6,=P'1'                       TRACE MARKER.
         MVC   DLIFLAG,SCDLICTL          YES; SET NUC FLAG NONZERO.
DLIWAB9  #
**       **************
**  CODE/TO TEST FOR THE NUC'S BEING IN WAIT FOR THE DLI  TO CONNECT.
*         THIS CODED LIKE DFSXCIC0 WHERE IT TESTS ECB FOR DLI  STARTED.
DLIWT    CLI   PMWAIT,0                Q. TEST FOR WAITING FOR DLI.
         BE    DLIWT9                    NO; SKIP OVER
         AP    DLITRC7,=P'1'           TRACE MARKER.
         XCXC  DLIFLAG                 CLEAR IT.
         BZ    DLIEXIT                   NO; SKIP OUT.
         AP    DLITRC8,=P'1'           TRACE MARKER.
         MVC   DLITECB,SCDRSEIA        COPY ECB.
         TM    SCDRSEIA,X'80'          Q. WAITING FOR DLI SAS.
         BZ    DLIEXIT                   NO; SKIP OUT.
         AP    DLITRC9,=P'1'           TRACE MARKER.
         MVC   DLIFLAG,SCDRSEIA          YES; SET FLAG NONZERO.
DLIWT9   #
**       **************
DLIEXIT  #
         MVC   LOOKFLAG,DLIFLAG
         BEXIT
         DC    C'DLI  DEBUG DATA'
DLIWWA   DC    A(0)
DLIWWB   DC    A(0)
DLIWCQRE DC    A(0)
DLIWCHAN DC    A(0)
DLITWA   DC    A(0)
DLITECB  DC    A(0)
DLIFLAG  DC    A(0)
DLITRC1  DC    PL4'0'
DLITRC2  DC    PL4'0'
DLITRC3  DC    PL4'0'
DLITRC4  DC    PL4'0'
DLITRC5  DC    PL4'0'
DLITRC6  DC    PL4'0'
DLITRC7  DC    PL4'0'
DLITRC8  DC    PL4'0'
DLITRC9  DC    PL4'0'
         DROP  B#LS,B#LA,B#LB
DLEXIT   #
         MVC   LOOKFLAG,DLIFLAG
         BEXIT
***************************************************************
    TITLE ' WAITDC10  --  S/R TO LOOK FOR NUC'
***************************************************************
         PUSH PRINT
         PRINT GEN
NUC00    BENT
****************************
* CODE TO FIND SCD POINTER.
B#PT     EQU   R1          BASE FOR SSCT = SSCVT
B#PO     EQU   R3          BASE FOR SSOB
B#PI     EQU   R4          BASE FOR SSIB
B#PC     EQU   R5          BASE FOR CVT
B#PV     EQU   R6          BASE FOR JES'S CT
B#PS     EQU   R7          BASE FOR SCD
B#PM     EQU   R9          BASE FOR NUCPARMS
B#PE     EQU   R10         BASE FOR SSCT EXTENTION
B#PD     EQU   R11         BASE FOR SSCD
*        *****
         STM   R0,R15,NUCPSAV1          STO ALL.
         L     B#PC,CVTPTR              PTR TO CVT.
*&%$     USIN- CVT,B#PC
         L     B#PV,CVTJESCT-CVT(B#PC)  PTR TO SSCT'S.
*&%$     USIN- JESCT,B#PV
         L     B#PT,JESSSCT-JESCT(B#PV) PTR TO FIRST SSCT.
         USING SSCT,B#PT
NUCSCTLP CLC   SSCTSNAM+2(2),=C'DC'    Q. IS THIS A 'DC' SSCT.
         BNE   NUCSCTNO                  NO; FORGET IT.
*
         MVC   NUCPSAV7(SSCTSIZE+SSCDLEN),SSCT    SAVE SSCT FOR DEBUG.
         L     B#PE,SSCTSUSE           GET A POSSIBL USER ADDRESS.
         LTR   B#PE,B#PE               Q. IS THERE A USER ADDRESS.
         BZ    NUCSCTNO                  NO; SKIP.
         CLC   0(8,B#PE),=CL8'SSCTEXT '  YES; Q. USERAREA AN EXTENTION.
         BNE   NUCSCTNO                         NO; SKIP.
*******************                             YES; DIG DEEPER.
         LA    B#PD,ESSCTLEN(B#PE)              BUMP TO SSCD.
         CLC   LOOKSSID,SSCDIMID-SSCD(B#PD)         Q. IS IT OURS.
         BNE   NUCSCTNO                               NO;  FORGET IT.
         CLI   SCDRGTYP-SSCD(B#PD),SCDRGCTL         Q. IS IT CTL.
         BNE   NUCSCTNO                               NO;  FORGET IT.
*                                                     YES; USE IT.
         L     B#PS,SSCDTCTN-SSCD(B#PD)            GET THE SCD ADDR.
         ST    B#PS,NUCPSCDI                       STO SCD ADDR.
         B     NUCSCTOK
*************************
NUCSCTNO ICM   B#PT,X'F',SSCTSCTA      GET NEXT; Q. IS THERE A NEXT.
         BNZ   NUCSCTLP                            YES; LOOP.
**    *************
         B     NUCNOGOT                            NO; SKIP.
*
**************************************************
NUCSCTOK STM   R0,R15,NUCPSAV2         STORE ALL REGISTERS IN SPOT #2.
         MVC   NUCPSAV9(SSCTSIZE+SSCDLEN),SSCT    SAVE SSCT FOR DEBUG.
         DROP  B#PT
         ICM   B#PS,7,NUCPSCDI+1       Q. IS THERE AN SCD ADDR.
         BZ    NUCNOGOT                  NO; THEN SKIP OUT.
*****************************************
* FIND NUCSCD.
         TM    PMNONAR,X'80'           Q. REQUEST TO SKIP.
         BO    NUCOVNAR                  YES; SKIP.
         NARSCDF B#PS,NARSCD10,KNOWN=SCD,FAILX=NUCOVNAR
         ST      B#PS,NUCPSCDN         STORE THE NARSCD ADDRESS.
NUCOVNAR #
**********************************
NUCNOGOT #
         STM   R0,R15,NUCPSAV2         STORE ALL REGISTERS IN SPOT #2.
         LM    R0,R15,NUCPSAV1         RELOD ALL REGIST  FROM SPOT #1.
*        ******
NUCRET   #
         BEXIT
***********************************************************
         POP   PRINT
         DC    C'NUC-FIND DEBUG DATA'
NUCPSCDI DC      A(0)
NUCPSCDN DC      A(0)
NUCFLAG  DC      A(0)
NUCPSAV1 DC    24A(0)
NUCPSAV2 DC    24A(0)
NUCPSAV7 DC    24A(0)
NUCPSAV9 DC    24A(0)
***************************************************************
    TITLE ' WAITDC10  --  MISC SUB ROUTINES.'
***************************************************************
* S/R TO EVLUATE THE PARM FIELD.
EVAL     BENT
         LH   R#W,PMT1+2
         MH   R#W,=H'100'
         ST   R#W,WAITHUND
*        ****
         LH   R#W,PMT2+2
         ST   R#W,WAITMSG
*        *******
         LA   P#P,PMSUBSYS
         BAL  L##,LAYIN
         BALC NOTONES,ABEND
         MVC  LOOKTYPE,L+4
*        *******
         LA   P#P,PMSSID
         BAL  L##,LAYIN
         BALC NOTONES,ABEND
         MVC  LOOKSSID,L+4
*     **************
         BEXIT
***************************************************************
         EJECT
***************************************************************
* SUB-ROTINE TO LAY INTO 'L' AREA THE PARM POINTED TO BY P#P.
*        LA    P#P,PARMFIELDNAME
*        BAL   L#L,LAYIN
LAYIN    BENT
         TM    0(P#P),X'C0'
         BNO   EXITLAY
         MVI   L+4,X'40'
         MVC   L+5(80),L+4
         XR    E#M,E#M
         IC    E#M,0(P#P)
         N     E#M,=A(63)
         ST    E#M,E#MLGTH
         S     E#M,=A(01)
         BALC  LT,ABEND
         L     R#W,0(P#P)
         EX    E#M,MVCPARM
         LA    R1,5(E#M)
         STH   R1,L
         TM    *,1                 SET TO BRANCH IF USE "BO" INSTR.
EXITLAY  BEXIT
*        ******
MVCPARM  MVC   L+4(0),0(R#W)
E#MLGTH  DC    A(0)
L        DC    Y(4,0),CL120'*PARAMETER-IS-MISSING*'
***************************************************************
    TITLE ' WAITDC10  --  CONSTANTS AND STUFF LIKE THAT.'
***************************************************************
R1@ENTRY DC    A(0)
BIGRC15  DC    A(0)
EPKEYFGS DC    A(0)
DBL      DC   2D'0'
UNPK     DC   2D'0'
*        *****
*        *****
**************************************************
     EJECT
**************************************************
**************************************************
*
**************************************************
**************************************************
     EJECT
**************************************************
         PRINT NOGEN
QWER     DLPARM ,KEYWORDS
A        DLPARM  A
PMT1     DLPARM  T1
PMT2     DLPARM  T2
PMT3     DLPARM  T3
PMSUBSYS DLPARM SUBSYS
PMSTART  DLPARM START
PMWAIT   DLPARM WAIT
PMSSID   DLPARM SSID
PMABEND  DLPARM ABEND
PMDEBUG  DLPARM DEBUG
PMNONAR  DLPARM NONAR
         DC    4Y(0)
*        *****
M        DC    XL200'0'
*************************
*
*************************
DCL80BBB DC    CL80' '
*************************
**************************************************
    TITLE ' WAITDC10 - DSECTS  ETC.. '
**************************************************
         PRINT   GEN
         DSECT
         ISCD SCDBASE=0
SSCD     EQU  SSCDORG
         PRINT   GEN
         DFSSSOB (IEFJSSIB,IEFJSSOB,IEFJESCT,IEFJSCVT,IEFJSSVT)
         PRINT   GEN
         DFSSSOB DFSESSCT
ASDFQWER DSECT
         DFSRCWKA DSECT=NO
         DFSRCWKB
         CVT   DSECT=YES
         NARSCD
         END
//L.IMSLOAD DD DISP=SHR,DSN=IMS.LOAD
//L.SYSIN   DD  *
 INCLUDE IMSLOAD(DLLINK)
 SETCODE AC(1)
//*******************************************************************
//SYSNUSED DD DATA
//** NULL NEXT
//** NULL NEXT
//** NULL NEXT
//
//*******************************************************************
//TEST    EXEC  PGM=WAITDC10,COND=(4,LT),PARM=(A,
//  'T1=10','T2=3',
//  'SUBSYS=DLISAS','SSID=IMY7',
//   ABEND,
//   DEBUG,
//   Z)
//STEPLIB  DD DISP=MOD,DSN=&&T,SPACE=(CYL,(1,,1)),UNIT=SYSDA
//         DD DISP=SHR,DSN=IMS.TEST
//         DD DISP=SHR,DSN=IMS.LOAD
//ABNLDUMP DD DUMMY
//SYSUDUMP DD SYSOUT=*
/*
