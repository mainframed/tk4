//AIMS31SE JOB 'HOSKINS   SH28205610*110A044         015  1000007   ', *
// MSGLEVEL=1,MSGCLASS=H,TIME=3,REGION=999K,NOTIFY=$A1016
//*MAIN ORG=LOCAL,CLASS=L
//NARSTAE0 EXEC  IMSUPDTE,SMEMBER=NARSTAE0,
//     LMEMBER=NARSTAE0,
//*CONDL=0,
// LOAD='PVT.MODS',
// DECK='NODECK,SYSPARM(S)',
// PRELIB='SYS1.MACLIB',
//             P=IMA,SYMI=SOURCETM,SYMO=SOURCETM,RECORD=NO,DISPR=SHR,
// SOUT='*'
//*.RECORD DD DSN=IMS.EMTLIB
//*.SYSINR DD DSN=IMS.EMTLIB
//C.SYSIN  DD  *
         TITLE 'NARSTAE0    ---   MACROS.'
         MACRO
&NAME    SNAP1LST &N1,&N2,&VERBAGE,&MODE=,&ORG=
         GBLC  &VERBNAM(20),&VERBTXT(20)
         GBLA  &I
         LCLA  &L,&J
         AIF   ('&MODE' EQ 'MESSAGES').DOMSGS
.*************************************************************
         AIF   ('&VERBAGE'(1,1) EQ '').OVVERB
.*    *********************
&L       SETA  K'&VERBAGE-2         -2 FOR QUOTES.
&I       SETA  &I+1
&VERBNAM(&I) SETC 'SPL&SYSNDX.A'
&VERBTXT(&I) SETC '&VERBAGE'
         DC    A(SPL&SYSNDX.A)
         DC    A(SPL&SYSNDX.A+&L-1)
.OVVERB  ANOP
.***********************************************
         AIF   ('&MODE' EQ 'ADCONS').ADCONS
         AIF   ('&N1'(1,1) EQ '0').OVDCANM
.*    *********************
&N1      DC    A(SPL0000Y)
&N2      DC    A(SPL0000Z-1)
         AGO  .OVDCANM
.*    *********************
.ADCONS  DC    A(&N1,&N2)
.OVDCANM ANOP
.**************************
         AIF   ('&MODE' NE 'ENDLIST').OVEND
         ORG   *-4
         DC    X'80'
         ORG
.OVEND   ANOP
         MEXIT
.**************************************************************
.DOMSGS  ANOP
         AIF   ('&ORG' EQ '').OVADJ
         CNOPBIGR ORG=&ORG
.OVADJ   ANOP
.*******************************
.LOPMSG  ANOP
&J       SETA  &J+1
         AIF   (&J GT &I).DUNMSG
&VERBNAM(&J) DC   0D'0',CL32&VERBTXT(&J)
         AGO   .LOPMSG
.DUNMSG  ANOP
SPL0000Y DC    0D'0',CL32'NOT AVAILABLE IN THIS DUMP.'
SPL0000Z EQU   *
         MEND
****************************************************************
         TITLE 'NARSTAE0    ---   INITIALIZATION.'
****************************************************************
         LCLC  &DDN
&DDN     SETC  'SYSUSNAP'
NARSTAE0 CSECT
ORG      EQU   *
         PROLOGUE SAVE=INLINE,DATE=&SYSDATE-&SYSTIME
         PRINT NOGEN
         REQUATE
         CEQUATE
B#P      EQU   R2                  PXPARMS
B#N      EQU   R3                  NARSTAE
B#S      EQU   R10                 SDWA
R#W      EQU   R15                 A WORK REG
         PRINT GEN
         LR    B#S,R5              COPY FROM PCC20
         USING SDWA,B#S            PER    DFSPCC20
         USING PXPARMS,B#P         SET IN DFSPCC20
         CLI   PXXCTLNM+4,C'*'
         BNE   EPIL               QUIT RAT NOW.
         L     R15,PXXCTLNM
         USING     NARPRM00,R15
         L     R15,NARPCC2P
         USING     NARPCC2D,R15
         DROP  R15
**************************************************************
* ACQUIRE  S.D.W.A.  AND MASSAGE  PARTS OF IT FOR SNAP AND TITLES.
         MVC   RAPART2,SDWAGRSV    R0---R15   @ TIME OF ABEND.
*                                    + PROG-NAME & EP.
         MVC   RAPART1,SDWAPARM    OTHER DATA.
******************************
         UNPK  CCBCD(3),RACC+1(2)
         NC    CCBCD(3),=8X'0F'
         TR    CCBCD(3),=C'0123456789ABCDEF'
         L     R0,RACC
         N     R0,=A(4095)
         CVD   R0,DBL
         UNPK  CCBCD+4(4),DBL
         OI    CCBCD+7,X'F0'
********************
         CLC   =H'0001',RAABPSW+2  Q. WERE WE IN WAIT.
         BE    OVCCAND               YES, DONT MESS WITH THE CC.
         MVC   CCAND,=A(X'FFFFFF')
OVCCAND  EQU   *
         MVC   CCOR,=A(0)
********************
         MVC   PGM,RCPGM           MOVE NAME OF SCHEDULED PROGRAM.
         CLI   PGM,X'00'           Q. IS IT ZEROES.
         BE    STAENAME              YES, USE OTHER-ONE.
         CLI   PGM,C' '            Q. IS IT BLANK.
         BNE   GOTPGMNM              NO,  USE IT.
STAENAME MVC   PGM,PGMNAME           YES, USE THE ONE FROM STAE'S WKAR.
GOTPGMNM EQU   *
         TM    CC,X'01'       Q. IS BIT SET FOR NO SNAPS.
         BO    OVSNAPS          YES, SKIP.
***********************************************************
         TITLE 'NARSTAE0    ---   MODULE LOADING AS REQUIRED.'
***********************************************************
* FIND  OR LOAD THE  DUMP ROUTING DESTINATION MODULE AND CALL IT.
         L     R15,PXXCTLNM
         USING NARPRM00,R15
         L     B#N,NARPSTAE
         DROP  R15
         USING NARPSUAE,B#N
         LOAD  EP=IMSROUTE
         ST    R0,NARPSROT
         LR    R15,R0
         LA    R1,PGM
         BALR  R14,R15
         USING MSGDS,R1
         MVC   DEST,DESTI
         MVC   MSO,MSI
         DROP  R1
***********************************************************
   SPACE  3
***********************************************************
* FIND  OR LOAD THE  BIG PRINT MODULE AND CALL IT.
         LOAD  EP=LTRBLOCK
         ST    R0,NARPSLTR
         LR    R15,R0
         LA    R1,LTRPARMS
         BALR  R14,R15
***********************************************************
         TITLE 'NARSTAE0    ---   TCB LIST DETERMINATION.'
***********************************************************
         L     R1,16               CVT.
         L     R1,0(R1)            DBL WRD.
         L     R1,0(R1)            CURR TCB.
         LA    R1,0(R1)            ONLY THE ADDR.
         ST    R1,TCBCURR          SAVE CURR TCB ADDR.
         L     R1,124(R1)          JOBSTEP TCB.
         LA    R#W,TCBLIST         TOP OF LIST.
         LA    R0,TCBLISTZ         END OF LIST.
         B     LOOPTCBC            START IN THE MIDDLE OF THE LOOP.
***********************
LOOPTCB  LA    R#W,4(R#W)          BUMP.
         CR    R#W,R0              Q. ANY SPACE LEFT.
         BC    GE,DUNTCB             NO, QUIT.
LOOPTCBB L     R1,136(R1)          N-TH SUBTASK.
         LA    R1,0(R1)            ONLY THE ADDR.
LOOPTCBC LTR   R1,R1               Q. IS THIS A TCB.
         BZ    DUNTCB                NO, DONE.
         C     R1,TCBCURR          Q. IS THIS MY ORIG TASK.
         BNE   STOTCB                NO,  STO AS NEXT IN LIST.
         O     R1,=XL4'80000000'     YES, FLAG IT AS SUCH.
STOTCB   ST    R1,0(R#W)           STO TCB PTR.
         B     LOOPTCB
DUNTCB   XC    0(4,R#W),0(R#W)     CLEAR ENTRY AFTER LAST.
***********************************************************
         TITLE 'NARSTAE0    ---   STORAGE LIST FILL-IN''S.'
***********************************************************
*  FIND PST.
         L     R1,RCPST
         LA    R1,0(R1)
         LTR   R1,R1
         BZ    OVBUF
         ST    R1,PSTADD
         USING PST,R1
         LA    R4,PSTLEN-1(,R1)
         ST    R4,PSTEADD
****************************
*  FIND PSB.
         L     R4,PSTPSB
         USING PDIR,R4
         L     R4,PDIRADDR
         USING PSB,R4
         LA    R4,0(,R4)
         ST    R4,PSBADD
         AH    R4,PSBSIZE
         SH    R4,=H'1'
         ST    R4,PSBEADD   IN CASE NO DB PCB'S
         L     R4,PSBADD
         CLC   PSBDBOFF,=XL2'FFFF'
         B     OVBUF                        *&‰%
         BNE   GOTPCB
         B     OVBUF
GOTPCB   LA    R5,PSBLIST
         AH    R5,PSBDBOFF
         S     R5,=F'4'
NEXTPCB  LA    R5,4(,R5)
         TM    0(R5),X'80'
         BNO   NEXTPCB
         L     R4,0(,R5)
         USING DBPCB,R4
         USING JCB,R5
         L     R5,DBPCBJCB
         L     R6,JCBSDBND
         SH    R6,=H'1'
         ST    R6,PSBEADD
****************************
*  NOW FIND DMB
         L     R4,PSTDBPCB
         L     R5,DBPCBJCB
         L     R4,JCBSDB1
         USING SDB,R4
         L     R4,SDBDDIR
         USING DDIR,R4
         L     R4,DDIRADDR
         USING DMB,R4
         LA    R4,0(,R4)
         ST    R4,DMBADD
         A     R4,DMBSIZE
         SH    R4,=H'1'
         ST    R4,DMBEADD
         L     R4,PSTBUFFA
         LA    R4,0(,R4)
         LTR   R4,R4
*****   HUGH UN-DID SOME   WORK HERE AND AT 02390005 DUE TO NO MACRO.
*#,$.@%  BNZ   GOTBUF
         B     OVBUF
****************************
*#,$.@%  USING BFFRDS,R4
GOTBUF   ST    R4,BUFFADD
*#,$.@%  A     R4,BFFRSZE
         SH    R4,=H'1'
         ST    R4,BUFFEADD
OVBUF    EQU   *
****************************
         DROP  R4
         DROP  R1
***********************************************************
         TITLE 'NARSTAE0   ---  TAKE THE NEEDED SNAPS.'
***********************************************************
         OPEN  (SYSOUT,(OUTPUT))
****************************
* SNAP THE CURRENT TCB AND CONTROL BLOCKS. (ONE WAY OR ANOTHER)
         B     SNAP12
SNAP11   SNAP  DCB=SYSOUT,SDATA=(LSQA,SWA,CB,Q),PDATA=ALL,             *
               LIST=SNAPLST0
         B     SNAP19
*     *************
SNAP12   SNAP  DCB=SYSOUT,SDATA=(CB,Q),                                *
               LIST=SNAPLST0,PDATA=(PSW,REGS,SA,JPA,SPLS)
SNAP19   #
****************************
* SNAP THE OTHER   TCB'S.                  (ONE WAY OR ANOTHER)
         LA    R4,TCBLIST          GET PTR TO LIST OF TCB'S.
         S     R4,=A(4)            PRE-DECREMENT.
NEXTTCB  LA    R4,4(R4)            BUMP.
         L     R15,0(R4)           GET PTR TO         TCB.
         LTR   R15,R15             Q. DONE, SKIP, OR USE.
         BZ    DUNTCBS                DONE.
         BM    NEXTTCB                      SKIP.
************************
         B     SNAP22
SNAP21   SNAP  DCB=SYSOUT,SDATA=(SWA,CB,Q),PDATA=ALL,ID=3,TCB=(15)
         B     SNAP29
*     *************
SNAP22   SNAP  DCB=SYSOUT,SDATA=(CB,Q),ID=3,TCB=(15),                  *
               PDATA=(PSW,REGS,SA,JPA,SPLS)
SNAP29   #
         ST    R15,SNAPRC15        SAVE RETURN CODE.
         LTR   R15,R15             Q. RC=0.
         BZ    NEXTTCB               YES, LOOP FOR NEXT.
*                                    NO; QUIT THE TCB'S.
DUNTCBS  EQU   *
***********************************************************
         TITLE 'NARSTAE0   ---  RIG FOR CORRECT SPINNING.'
***********************************************************
* AT -8 DICK KEPT PTR-> 18F'0',A(LTRBLOCK,STAEXIT,STAEXITA,IMSROUTE)
* AT -4 DICK KEPT F'2' FOR DOING THIS FOR TWO DATASETS.
* NOW NOTHING IS AT SPINDATA-NEGOFFSET.
*
* THIS LOGIC SETS-UP A SORTA APE OF THE SPIN TEXT-UNIT PTRS IN THE
*  NARPARMS STAE WORKAREA WITH THE ADDITION OF DESTINATION TEXT UNIT
*  AND A SPARE/RVSD/FUTURE TU. THEN THE PTRS TO THE FIRST 2 IBM TEXT
*  UNITS ARE COPIED TO OUR AREA AND THEIR TU-LIST-PTR CHANGED TO
*  POINT TO OUR LIST (THE FIRST TWO ENTRIES IN WHICH POINT BACK TO
*  THEIR TU'S).
         L     R6,RCSPNDAT      PTR TO SPIN DATA
         LA    R6,0(,R6)        CLEAR HIGH ORDER
         LTR   R6,R6            ANY SPIN DATA?
         BZ    OVSNAPS          NO
         USING SPINDATA,R6
         MVC   NARTUNP3,=CL6'LOCAL'   JUST IN CASE...
         CLC   SPNTUNP1,=CL8'SYSUDUMP'
         BE    FOUNDDD
         CLC   SPNTUNP1,=CL8'&DDN'
         BE    FOUNDDD
         B     OVSNAPS          NO GOOD  DD IN SPIN LIST
FOUNDDD  #
         MVC   SPNTUNP1,=CL8'&DDN'           SET   1-ST TXT UNIT=DDN.
         MVC   NARTUPL1+1(3),SPNTUPL1+1      COPY  1-ST TXT PTR=DDNAME.
*        ***
         MVC   NARTUPL2+1(3),SPNTUPL2+1      COPY  2-ND TXT PTR=CLASS.
*        ***
         MVC   NARTUNP3,DEST                 SET   3-RD TXT UNIT=DEST.
         MVC   NARPSPIN(NARTULTH),NARTUP00   COPY PTRS + OUR TXTUNITS.
*     *********
         LA       R#W,NARTUN3-NARTUP00+NARPSPIN
         STCM  R#W,7,NARTUPL3-NARTUP00+NARPSPIN+1
*        ***
         LA    R#W,NARPSPIN
         ST    R#W,SPNTXTPP
*    *****************
OVSNAPS  EQU   *
         CLOSE (SYSOUT)
******************************
EPIL     EPILOGUE RC=0
***********************************************************
         TITLE 'NARSTAE0   ---  CONSTANTS.'
***********************************************************
         DC   2C'RRRR'
AREAR    DC    104X'00'
AREARZ1  EQU   *
         ORG   AREAR
RAPARMPT DC    A(0)
RACC     DC    A(0)
RAABPSW  DC   2A(0)
RAPPPSW  DC   2A(0)
RAPART1  EQU   RAPARMPT,*-RAPARMPT
RAR0     DC  16A(0)
RAPGMNAM DC    CL8' '
RAPGMEP  DC    A(0)
RAWORD26 DC    A(0)
RAPART2  EQU   RAR0,*-RAR0
AREARZ2  EQU   *
         ORG
AREARZ3  EQU   *
CC       EQU   RACC
PGMNAME  EQU   RAPGMNAM
*        ***********
         DC   2C'QQQQ'
AREAQ    DC    012X'00'
AREAQZ1  EQU   *
         ORG   AREAQ
QS15     DC    A(0)
QS00     DC    A(0)
QS01     DC    A(0)
AREAQZ2  EQU   *
         ORG
AREAQZ3  EQU   *
******************************
         DC    D'0'
DBL      DC   2D'0'
SNAPRC15 DC    A(0)
CCOR     DC    A(0)
CCAND    DC    F'-1'
*****************
LTRPARMS DC   A(LIST)
         DC   A(DDNAME)
*       ****
LIST     DC    CL4'*LOC'
         DC    A(MSG)
         DC    CL8'*JOBNAME'
PGM      DC    CL8'IMSTESTR'
CCBCD    DC    CL8'0C5,4095'
         DC    A(0)
*       ****
DDNAME   DC    CL8'&DDN'
*       ****
MSG      DC    AL2(MSE-MSG)
         DC    XL2'0000'
         DC    CL1'2'
MSO      DC    CL40' THIS WILL BE THE DEST MSG.'
MSE      EQU   *
********************
TCBCURR  DC     A(0)
TCBLIST  DC    6A(0)
TCBLISTZ DC     A(0)
SNAPLST0 DC    0D'0'
  SNAP1LST RAPARMPT,RAPPPSW+8-1,'PSW AT TIME OF ABEND',MODE=ADCONS
  SNAP1LST RAR0,RAR0+16*4-1,'THE 16 GPRS AT TIME OF ABEND',MODE=ADCONS
  SNAP1LST TCBLIST,TCBLISTZ-1,'THE TCB STRING',MODE=ADCONS
  SNAP1LST SNAPLST0,SNAPLSTZ-1,'THE SNAP MACRO LIST',MODE=ADCONS
  SNAP1LST PSTADD,PSTEADD,'PST AREA FOLLOWS'
  SNAP1LST PSBADD,PSBEADD,'PSB AREA FOLLOWS'
  SNAP1LST DMBADD,DMBEADD,'DMB AREA FOLLOWS'
  SNAP1LST BUFFADD,BUFFEADD,'DB BUFFER AREA FOLLOWS'
  SNAP1LST 0,0,'END OF DUMPED STORAGE AREAS',MODE=ENDLIST
         DC    A(0),X'80',AL3(0)
SNAPLSTZ EQU   *
         SNAP1LST MODE=MESSAGES,ORG=ORG
****************************************
         PRINT NOGEN
SYSOUT   DCB   DDNAME=&DDN,DSORG=PS,RECFM=VBA,MACRF=W,EXLST=EXLST,     *
               BUFNO=0, SNAP USES HIS OWN; DONT LET OPEN GET ANY.      *
               LRECL=125,BLKSIZE=882
EXLST    DC    0A(0),XL1'87',AL3(JFCB)
JFCB     DC    CL176' '
         PRINT   GEN
****************************************
DEST     DC    CL6'LOCAL '
***********************************************************
         TITLE 'NARSTAE0   ---  CONSTANTS FOR DYNALLOC SPIN.'
***********************************************************
NARTUP00 DC   0A(0)
NARTUPL1 DC    A(NARTUN1) ENTRY FOR TEXT UNIT 1            DDNAME
NARTUPL2 DC    X'00',AL3(NARTUN2) ENTRY FOR TEXT UNIT 2    CLASS
NARTUPL3 DC    X'80',AL3(NARTUN3) ENTRY FOR TEXT UNIT 3    DEST
NARTUPL4 DC    X'80',AL3(NARTUN4) ENTRY FOR TEXT UNIT 4   *FUTURE*
****************************
NARTUN1  DS    0H  TEXT UNIT 1: DDNAME
NARTUNK1 DS    AL2(1)  KEY: DDNAME
NARTUNN1 DC    AL2(1)  NUMBER OF PARMS
NARTUNL1 DC    AL2(8)  LENGTH OF 1ST PARM
NARTUNP1 DC    CL8'XXXUDUMP' PARM: DDNAME
NARTUN1L EQU   *-NARTUN1 LENGTH OF TEXT UNIT 1
*********************
NARTUN2  DS    0F  TEXT UNIT 2: SYSOUT CLASS/REALLY UNALLOCATE
NARTUNK2 DC    XL2'18' KEY: SYSOUT CLASS/REALLY UNALLOCATE
*&‰*&ALO EQU   X'07'   KEY: REALLY UNALLOCATE
*&‰*&SOU EQU   X'18'   KEY: SYSOUT CLASS
NARTUNN2 DC    AL2(1)  NUMBER OF PARMS: 1 FOR SYSOUT CLASS
*                      NUMBER OF PARMS: 0 FOR REALLY UNALLOCATE
NARTUNL2 DC    AL2(1)  LENGTH OF THIS PARM
NARTUNP2 DC    CL1'A'  PARM=SYSOUT CLASS 'A'
NARTUN2L EQU   *-NARTUN2  LENGTH OF TEXT UNIT 2
*********************
NARTUN3  DS    0F  TEXT UNIT 3: OPTIONAL DESTINATION
NARTUNK3 DC    XL2'58' KEY: WORK STATION ROUTING
NARTUNN3 DC    AL2(1)  NUMBER OF PARMS: 1 FOR ROUTING
NARTUNL3 DC    AL2(6)  LENGTH OF THIS PARM
NARTUNP3 DC    CL6'LOCAL'  DESTINATION
NARTUN3L EQU   *-NARTUN3  LENGTH OF TEXT UNIT 3
*********************
NARTUN4  DS    0F  TEXT UNIT 4: OPTIONAL DESTINATION
NARTUNK4 DC    XL2'58' KEY: WORK STATION ROUTING
NARTUNN4 DC    AL2(1)  NUMBER OF PARMS: 1 FOR ROUTING
NARTUNL4 DC    AL2(6)  LENGTH OF THIS PARM
NARTUNP4 DC    CL6'LOCAL'  DESTINATION
NARTUN4L EQU   *-NARTUN4  LENGTH OF TEXT UNIT 4
*
*&‰*&SAV DS    F       REG 15 AFTER SVC 99
NARTULTH EQU   *-NARTUP00          SPIN DATA AREA LENGTH
         LTORG
         CNOPBIGR ORG=ORG
***********************************************************
         TITLE 'NARSTAE0   ---  DSECTS.'
***********************************************************
MSGDS    DSECT
DESTI    DS    CL6
MSI      DS    CL40
         NARPRM
         NARCPY
         ZNOGEN
         IDLI  PSTBASE=0
         IDLI  PSBBASE=0
         IDLI  DMBBASE=0
         IDLI  PDRBASE=0
         IDLI  JCBBASE=0
         IDLI  DDRBASE=0
         IDLI  DPCBASE=0
         IDLI  SDBBASE=0
*#,$<@%  BFFRDS
         PARMBLK DSECT
         IHASDWA
         COPY SPINDATA
         END
