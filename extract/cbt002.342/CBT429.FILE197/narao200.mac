//AIMS31A2 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',
//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016
//*MAIN CLASS=L,ORG=LOCAL
//NARAO200  EXEC IMSUPDTE,MEMBER=NARAO200,
//             P=IMA,LOAD='PVT.MODS',DISPR=SHR,
//  SYMI=SOURCETM,SYMO=SOURCETM,SOUT='*'
//C.SYSIN  DD *
 TITLE 'LOCAL ROCKWELL SUB-ROUTINES LINKED-TO FROM THE  A. O. I. EXIT.'
NARAO200 CSECT
**   R1 POINTS TO A LIST OF ADCONS
*        DC    A(SCD)
*        DC    A(ACTION_PARMS) E.G.,  A(=C'B1')
         PRINT NOGEN
         PROLOGUE SAVE=*PRECHN,DATE=&SYSDATE..&SYSTIME
         REQUATE
         CEQUATE
         PRINT GEN
         ST    R1,R1@NTRY
         L     R2,0(R1)        COPY THE
         ST    R2,P1@NTRY               SCD ADDRESS
         L     R2,4(R1)        COPY THE
         ST    R2,P2@NTRY               ACTION PARM POINTER.
****************************************
COPYPARM EQU   *
B#E      EQU   R4
         L     R2,P2@NTRY
         MVC   PARM2,0(R2)     COPY THE ACTION PARMS.
****************************************
VECTOR   CLI   PARM2,C'A'
         BC    EQ,ACTA
         CLI   PARM2,C'B'
         BC    EQ,ACTB
         CLI   PARM2,C'C'
         BC    EQ,ACTC
         B     RETACT
RETACT   EQU   *
         CLC   =C'AB',PARM2+6
         BE    AB00
EPILOGUE EPILOGUE
R1@NTRY  DC    A(0)
P1@NTRY  DC    A(0)
P0SCDAD  EQU   R1@NTRY
P2@NTRY  DC    A(0)
PARM2    DC    D'0'
AB00     EX    0,*
******************************
**********************************************************************
   EJECT
**********************************************************************
*
*  ACTION TO SET CLASSES AS FUNCTION OF PRESENCE IN "STEPMSGP" LIBRARY.
*
ACTA     EQU   *
P#S      EQU   R3
P#C      EQU   R4
P#T      EQU   R5
P#P      EQU   R6
P#L      EQU   R7
         B     RETACT                 *&‰%$#@
         AGO   .OVRACTA               *&‰%$#@
         USING PDIR,P#P
         USING  SMB,P#T
         USING  SCD,P#S
         LR    P#S,R1              PTR TO SCD.
         TIME  DEC
         STM   R0,R1,TIME1
         RDJFCB STEPMSGP
         LTR   R15,R15             Q. DD STMT PRESENT.
         BNZ   STQUIT                NO, SKIP OUT.
         OPEN  (STEPMSGP,(INPUT))
         LH    P#L,SCDSMBN         QUANT OF   SMB.
         L     P#T,SCDSMBEP        PTR TO 1ST SMB.
         SH    P#T,SCDSMBL         PTR TO 0TH SMB.     (PRE-DECRMT)
STLOOP   AH    P#T,SCDSMBL         PTR TO 1ST/NEXT SMB.
         TM    PARM2,X'04'         Q. ALL ALIKE.
         BO    STLOODD               YES, TREAT ALL ALIKE.
         L     P#P,SMBPDIR         OFF TO PDIR.
         N     P#P,=A(X'FFFFFF')
         CLI   PDIRSYM,C'I'        Q. SYSTEM STUF.
         BE    STLOODD               YES, TREAT AS WHITE-HAT.
         MVC   STBLDLNM,PDIRSYM    MEMBER NAME.
         BLDL  STEPMSGP,STBLDL     LOOK     IN PREFERENTIAL LIST.
         LTR   R15,R15             Q. FOUND IN PREFERENTIAL LIST.
         BNZ   STHIEVEN              NO,  GIVE LOWER-QUALITY SERVICE.
**  CLASS CODE PAIRS -  (1,2) ... (9,10)       (LO,HI)=(ODD,EVEN)
*                                           (FIRST,TOURIST)=(TOP,BOTT)
STLOODD  XR    P#C,P#C
         IC    P#C,SMBCLASS        ORIG CLASS =   1 2       9 10
         BCTR  P#C,0                              0 1       8  9
         O     P#C,=F'+1'                         1 1       9  9
         B     STDUN
STHIEVEN XR    P#C,P#C
         IC    P#C,SMBCLASS        ORIG CLASS =   1 2       9 10
         LA    P#C,1(P#C)                         2 3      10 11
         N     P#C,=F'-2'                         2 2      10 10
         B     STDUN
STDUN    STC   P#C,SMBCLASS        STORE ADJUSTED CLASS VALUE.
         BCT   P#L,STLOOP          LOOP IF NOT DONE
STQUIT   EQU   *
         CLC   =C'AB',PARM2+6      Q. ABEND REQUESTED.
         BE    AB00                  YES, GO TO IT
STQUITTT EQU   *
         CLOSE (STEPMSGP)
         TIME  DEC
         STM   R0,R1,TIME2
         B     RETACT
TIME1    DC    2A(0)
TIME2    DC    2A(0)
STBLDL   DC    H'1,76'
STBLDLNM DC    CL8' ',XL76'0'
         PRINT NOGEN
STEPMSGP DCB   DDNAME=STEPMSGP,DSORG=PO,MACRF=R,EXLST=STEPEX
         PRINT GEN
STEPEX   DC    0A(0),XL1'87',AL3(STEPJFCB)
STEPJFCB DC    XL176'0'
.OVRACTA ANOP
**********************************************************************
   EJECT
**********************************************************************
*
*  ACTION TO SET/RESET TCBTCT PTR TO AVOID SOME GETMAIN+I/O OVRHD.
*
*  PARM2 =B0 TO SET TO ZERO AND AVOID  OVERHEAD
*  PARM2 =B1 TO SET TO REAL AND SUFFER OVERHEAD
ACTB     EQU   *
         L     R1,16               CVT.
         L     R1,000(R1)          DBL.
         L     R1,000(R1)          TCB.
         LA    R0,164(R1)          TCBTCT.
         ST    R0,SUPWD1           PTR TO "TCBTCT" SPOT IN NUCLEUS TCB.
*        ***********
         CLI   PARM2+1,C'0'        Q. SMF OFF OR ON.
         BE    NARTCT00                   OFF,          CLEAR TCBTCT.
         CLI   PARM2+1,C'1'
         BE    NARTCTNN                          ON,  RESTORE TCBTCT.
         B     NARTCTZZ
*        ***********
* HERE TO RIG TO ZERO-OUT                  OUR TCBTCT PTR. (SMF OFF)
NARTCT00 XR    R0,R0                           "ZERO"  =  NEW TCBTCT
         ST    R0,SUPWD2
         B     NARTCTXX
*        ******
* HERE TO RIG TO STO JST'S TCBTCT PTR FOR  OUR TCBTCT PTR. (SMF ON)
NARTCTNN L     R1,124(R1)          JSTCB
         L     R0,164(R1)          TCBTCT.
         ST    R0,SUPWD2           ADDR OF TCT FOR JST =  NEW TCBTCT
********************
* HERE TO DO WHICHEVER.
NARTCTXX LA    R1,SUPVRTCT
         NOPR  0
         SVC   243
NARTCTZZ EQU   *
         B     RETACT
****************************************
SUPVRTCT L     R1,SUPWD1
         MVC   0(4,R1),SUPWD2
         BR    R14
******************************
SUPWD1   DC    A(0)
SUPWD2   DC    A(0)
**********************************************************************
   EJECT
**********************************************************************
*
*  ACTION TO RUN AS SUPVR/PROB STATE TO ALLOW/NOT WAITING IN PK=0.
*
R#J      EQU   R3
R#K      EQU   R4
R#L      EQU   R5
X#R      EQU   R6
E#I      EQU   R7
R#W      EQU   R15
         SPACE 3
ACTC     #
         B     RETACT                 *&‰%$#@
         AGO   .OVRACTC               *&‰%$#@
         CLI   PARM2+1,C'0'
         BE    NARPK0
         CLI   PARM2+1,C'1'
         BE    NARPK1
         B     RETACT
******************************
NARPK0   L     R#J,16              CVT.
         L     R#J,0(R#J)          DBL.
         L     R#J,0(R#J)          TCB.
         L     R#K,0(R#J)          RB. (NEWEST)
         LA    R#J,0(R#J)          TCB.
         LA    X#R,6          LOOP CTR.      (RANDOM)
RBLOOP   L     R#L,28(R#K)    NEXT RB.
         LA    R#L,00(R#L)    PTR ONLY.
         CR    R#L,R#J        Q. IS NEXT RB THE TCB.
         BE    RBTOP            YES, THEN THIS IS TOP RB.
         LR    R#K,R#L          NO, IS REAL RB.
         BCT   X#R,RBLOOP           LOOP.  (FOR A WHILE)
         B     RETACT
*        ***********
RBTOP    L       R#W,P0SCDAD
         NARSCDF R#W,NARSCD10,NARSCDFA,KNOWN=SCD
         LR   R0,R#W          PTR TO FLAG $A0.
         L       R#W,P0SCDAD
         NARSCDF R#W,NARSCD10,NARSCDPK,KNOWN=SCD
         LA    R#L,16(R#K)    PTR TO PSW IN RB.
         ST     R0,04(R#W)    PTR TO FLAG $A0.
         MVI   04(R#W),C'S'   SHOW SUPVR STATE.
         ST    R#L,08(R#W)    PTR TO PSW IN RB.
         ST    R#K,12(R#W)    PTR TO        RB.
         ST    R#J,16(R#W)    PTR TO        TCB.
         MVC   24(8,R#W),00(R#L)     PSW IN RB.
         MVZ   03(1,R#W),25(R#W)   COPY PK FOR USE BY "SPKA" INSTR.
*              AABBCCDD            LEFT HALF OF LEAST
*              07152331                SIGNIFICANT BYTE IS USED.
         LA    E#I,STATSUNI        CHANGE STATE  TO SUPVR VIA "NI".
         B    NARPKX
****************************************
NARPK1   L     R#W,P0SCDAD
         NARSCDF R#W,NARSCD10,NARSCDPK,KNOWN=SCD
         L     R#L,08(R#W)
         LA    R#L,00(R#L)
         LTR   R#L,R#L
         BZ    RETACT
         MVI   04(R#W),C'P'        SHOW PROB  STATE.
         LA    E#I,STATPROR        CHANGE STATE  TO PROB  VIA "OI".
****************************************
NARPKX   EQU   *
         L     R#J,20(R#W)         GET ADDR OF DATAAREA IN DISPATCHER.
         LA    R#J,0(R#J)          IF ADDR
         LTR   R#J,R#J                     IS ZERO,
         BZ    RETACT                               THEN SKIP THE COPY.
         MVC   00(08,R#J),0(R#W)   COPY TO DISPATCHER.
         MVC   16(05,R#J),24(R#W)  COPY ORIG PSW EXCEPT FOR ADDRESS.
         NI    16+01(R#J),X'FE'    MAKE SPVR PSW.
         MVC   08(05,R#J),16(R#J)  COPY SPVR PSW EXCEPT FOR ADDRESS.
         NI    08+01(R#J),X'0F'    MAKE SPVR PSW WITH PK#0.
         LA    R1,STATCHNG         PTR TO WHERE TO GO IN SUPVR STATE.
         SVC   243
         B     RETACT
         BALR  R14,R1
**************************************************
STATCHNG EX    0,0(E#I)
         BR    R14
STATSUNI NI    01(R#L),X'FE'       CHANGE STATE  TO SUPVR VIA "NI".
STATPROR OI    01(R#L),X'01'       CHANGE STATE  TO PROB  VIA "OI".
.OVRACTC ANOP
**********************************************************************
   EJECT
**********************************************************************
         NARSCD
         PRINT NOGEN
         ISCD  SCDBASE=0
         IAPS  SMBBASE=0
         IDLI  PDRBASE=0
         END
