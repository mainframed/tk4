//AIMS31P2 JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',
//  REGION=996K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016
//*MAIN ORG=LOCAL,CLASS=L5
//PCC20     EXEC IMSUPDTE,SMEMBER=DFSPCC20,LMEMBER=DFSPCC2H,
//             P=IMA,LOAD='PVT.MODS',RE=RENT,DISPR=SHR,
//  DECK='NODECK,SYSPARM(S)',
//*CONDL=0,
//  SYMI=SOURCESV,SYMO=SOURCESV,RECORD=NO,ACCT=1,SOUT='*'
//SYSIN  DD *
./DFSPCC20 CHANGE NAME=DFSPCC20
./ NUMBER INSERT=YES,SEQ1=06352000,NEW1=06352005,INCR=001 06352000 ---
*/ NUMBER INSERT=YES,SEQ1=06352000,NEW1=06352005,INCR=001 06352000 BGN
     SPACE 3
************************************************************
*
***   ROCKWELL MODS ON THE TOP 'RB' (OUTER SHELL)        ***
***     FOR MODULE LOADING AND RIGGING FOR               ***
***     OUR STAEXIT/SNAPPING/SPINOFF MODS.               ***
***     INSIDE  OF THE ABEND / RE-ATTACH-LOOP.           ***
***     OUTSIDE OF THE APPLICATION LINK--LOOP.           ***
*
************************************************************
         TM    RCTYPE,RCMSG           Q. TYPE-1=MSG_REGION
         BZ    OVNAR11                  NO; SKIP OVER.
         CLI   PXXCTLNM+4,C'*'
         BNE   OVNAR11
****************************
* CODE TO FIND SCD POINTER.
B#PT     EQU   R1          BASE FOR SSCT = SSCVT
**HOLD   EQU   R2
B#PO     EQU   R3          BASE FOR SSOB
B#PI     EQU   R4          BASE FOR SSIB
B#PC     EQU   R5          BASE FOR CVT
B#PV     EQU   R6          BASE FOR JES'S CT
B#PS     EQU   R7          BASE FOR SCD
**HOLD   EQU   R8
B#PM     EQU   R9          BASE FOR NARPARMS
B#PE     EQU   R10         BASE FOR SSCT EXTENTION
B#PD     EQU   R11         BASE FOR SSCD
         L     B#PM,PXXCTLNM
         USING NARPRM00,B#PM
         STM   R0,R15,NARPSAV1          STORE ALL REGISTERS IN SPOT #1.
         L     B#PO,RCSSOB              PTR TO SSOB.
*&%$     USIN- SSOB,B#PO
         L     B#PI,SSOBSSIB-SSOB(B#PO) PTR TO SSIB.
*&%$     USIN- SSIB,B#PI
         MVC   NARPSSNM,SSIBSSNM-SSIB(B#PI) COPY   SUB-SYSTEM NAME.
*        *****
         L     B#PC,CVTPTR              PTR TO CVT.
*&%$     USIN- CVT,B#PC
         L     B#PV,CVTJESCT-CVT(B#PC)  PTR TO SSCT'S.
*&%$     USIN- JESCT,B#PV
         L     B#PT,JESSSCT-JESCT(B#PV) PTR TO FIRST SSCT.
         USING SSCT,B#PT
NARSCTLP CLC   SSCTSNAM+2(2),=C'DC'    Q. IS THIS A 'DC' SSCT.
         BNE   NARSCTNO                  NO; FORGET IT.
*
         L     B#PE,SSCTSUSE           GET A POSSIBL USER ADDRESS.
         LTR   B#PE,B#PE               Q. IS THERE A USER ADDRESS.
         BZ    NARSCTNO                  NO; SKIP.
         CLC   0(8,B#PE),=CL8'SSCTEXT '  YES; Q. USERAREA AN EXTENTION.
         BNE   NARSCTNO                         NO; SKIP.
*******************                             YES; DIG DEEPER.
         LA    B#PD,ESSCTLEN(B#PE)              BUMP TO SSCD.
         CLC   NARPSSNM,SSCDIMID-SSCD(B#PD)         Q. IS IT OURS.
         BNE   NARSCTNO                               NO;  FORGET IT.
         CLI   SCDRGTYP-SSCD(B#PD),SCDRGCTL         Q. IS IT CTL.
         BNE   NARSCTNO                               NO;  FORGET IT.
*                                                     YES; USE IT.
         L     B#PS,SSCDTCTN-SSCD(B#PD)            GET THE SCD ADDR.
         ST    B#PS,NARPSCDI                       STO SCD ADDR.
         B     NARSCTOK
*************************
NARSCTNO ICM   B#PT,X'F',SSCTSCTA      GET NEXT; Q. IS THERE A NEXT.
         BNZ   NARSCTLP                            YES; LOOP.
**    *************
         ABEND 1114,DUMP                           NO; ABEND.
*
**********************************
NARSCTOK STM   R0,R15,NARPSAV2         STORE ALL REGISTERS IN SPOT #2.
         MVC   NARPSAV9(SSCTSIZE+SSCDLEN),SSCT    SAVE SSCT FOR DEBUG.
         DROP  B#PT
* FIND NARSCD.
         NARSCDF B#PS,NARSCD10,KNOWN=SCD,FAILX=NARSCTX2
         ST      B#PS,NARPSCDN         STORE THE NARSCD ADDRESS.
NARSCTX2 #
         STM   R0,R15,NARPSAV2         STORE ALL REGISTERS IN SPOT #2.
         LM    R0,R15,NARPSAV1         RELOD ALL REGIST  FROM SPOT #1.
*        ******
**************************
* RESET BLDL TIME TO NOW.
         L     R15,NARPCC2P                   PTR TO NAR PCC20 STUF.
*&%$     USIN-     NARPCC2D,R15
         STCK  NARPCBLT-NARPCC2D(R15)         RESET BLDL TIME.
         DROP  B#PM
************************************************************
OVNAR11  #
     SPACE 3
*/ NUMBER INSERT=YES,SEQ1=06352000,NEW1=06352005,INCR=001 06352000 END
./ NUMBER INSERT=YES,SEQ1=09160000,NEW1=09160006,INCR=001 09160000 ---
*/ NUMBER INSERT=YES,SEQ1=09160000,NEW1=09160006,INCR=001 09160000 BGN
     SPACE 3
************************************************************
*
***   ROCKWELL MODS ON THE 2ND 'RB' (INNER SHELL)        ***
***     INSIDE  OF THE ABEND / RE-ATTACH-LOOP.           ***
***     OUTSIDE OF THE APPLICATION LINK--LOOP.           ***
***                                                      ***
*
************************************************************
B#SA     EQU   R7        BASE FOR PCC20 W/A IN NARPARMS
B#D      EQU   R15       BASE FOR   MISC       NARPARMS
         CLI   PXXCTLNM+4,C'*'
         BNE   NAROV2O
*******************
         L     B#SA,PXXCTLNM
         USING      NARPRM00,B#SA
         L      B#D,NARPMOVS
         USING      NARPMOV1,B#D
         L     B#SA,NARPCC2P
         USING      NARPCC2D,B#SA
*        **********
         AGO   .SKP10
         ST    B#C,NARPCPST              STO ORIGINAL PST ADDR.
         NARPSTF B#C,FAILX=NAROV1O
         ST    B#C,NARPCPSR
         USING     NARPST#0,B#C
*        **********
         MVC   NARPMOV1+00(04),NARPSTW0+00   PUT
         MVC   NARPMOV2+00(04),NARPSTW0+04      CSA PTRS
         MVC   NARPMOV3+00(04),NARPSTW0+08              INTO
         MVC   NARPMOV4+00(04),NARPSTW0+12                  NARPARMS.
*        ***
         MVC   NARPMOV1+09(01),NARPSTW0+00   PUT
         MVC   NARPMOV2+09(01),NARPSTW0+04      CSA LENGTHS
         MVC   NARPMOV3+09(01),NARPSTW0+08              INTO
         MVC   NARPMOV4+09(01),NARPSTW0+12                  NARPARMS.
NAROV1O  #
.SKP10   ANOP
****************************************
* CODE ADDED BY NAR TO FIND TCB, REGION TOP, AND OTHER STUF.
         L     1,16           CVT
         L     1,0(1)         DBL
         L     1,0(1)         TCB
         ST    1,NARPCTCB
         B     NAROV2O *&%$  SKIP THE NEXT STUFF WHICH IS NON-XA'ABLE.
*        ***
         L     1,X'098'(1)    PTR TO L.D.A. == DPQE-8.
         L     0,X'5CC'(1)    REGION SIZE LIMIT.
         L     1,X'008'(1)    PTR TO PQE.
         A     0,X'018'(1)    REG BASE ADDR + REGION SIZE LIMIT =
         ST    0,NARPCTOP         =  ABSOLUTE/UNCONDITIONAL REGN TOP.
*********************
NAROV2O  #
         DROP B#SA
         DROP B#D
************************************************************
     SPACE 3
*/ NUMBER INSERT=YES,SEQ1=09160000,NEW1=09160006,INCR=001 09160000 END
./ NUMBER INSERT=YES,SEQ1=13502000,NEW1=13502005,INCR=001 13502000 ---
*/ NUMBER INSERT=YES,SEQ1=13502000,NEW1=13502005,INCR=001 13502000 BGN
 SPACE 3
***********************************************************
***   ROCKWELL MODS ON 2ND 'RB'  (INNER SHELL)          ***
***    INSIDE THE APPLICATION LINK--LOOP.               ***
***                                                     ***
***********************************************************
* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-1A  - SCHED)
         CLI   PXXCTLNM+4,C'*'
         BNE   NAROV2I
B#TA     EQU   R7
*  OTHER REGS IN USE R0,R1,R15
         L     B#TA,PXXCTLNM
         L     B#TA,NARPTIMP-NARPRM00(B#TA)
         USING NARPTIMS,B#TA
         XC    NARPTIMA(NARPTIM#-NARPTIMA),NARPTIMA
         STCK  NARPTIMA           TOD  OF  START-UP.
*        *********
         L     R1,RCETIME         26 USEC TU FROM -IASI0.  (REAL)
         ST    R1,NARPTIM2        26 USEC TU.
         M     R0,=F'26'           1 USEC
         D     R0,=F'16'          16 USEC TU.
         ST    R1,NARPTIM1        16 USEC TU.
         ST    R1,NARPTIMD+2      16 USEC TU.
         NI    NARPTIMD+5,X'FE'               FORCE EVEN.
         LH    R15,NARPTIMA                       LEFT 2BYTES OF STCK.
         AL    R1,NARPTIMA+2      16 USEC TU.
         BC    4+8,STOLPART                       Q. OVRFLO/CARRY.
         LA    R15,1(R15)                           YES, BUMP NEXT HWD.
STOLPART STH   R15,NARPTIMZ                       LEFT 2BYTES OF STCK.
         ST    R1,NARPTIMZ+2         TOD  OF  KICK-OFF.
         L     R1,RCETIME         26 USEC TU FROM -IASI0.  (REAL)
*%@#./   M     R0,=F'                 NO CHANGE YET.
*%@#./   D     R0,=F'
         ST    R1,RCETIME         26 USEC TU FOR STIMER. (WHICHEVER)
         NI    RCETIME+3,X'FE'     FORCE EVEN TO SHOW ORIG VALUE.
         DROP  B#TA
**************************************************
 SPACE 3
**************************************************
**  PROCEED ONLY IF TYPE#1=MSG
         TM    RCTYPE,RCMSG        Q. IS ONLINE TYPE-1.
         BZ    NAROV2IB              NO, GETOUT.
**************************
***  TEST FOR RESETTING THE BLDL TABLE.
B#BP     EQU   R3
B#BC     EQU   R4
B#BS     EQU   R5
X#B      EQU   R3
B#B      EQU   R4
         CLI   PXXCTLNM+4,C'*'
         BNE   NAROVR3
         L     B#BP,PXXCTLNM                   PTR TO NARPARMS.
         USING      NARPRM00,B#BP
         L     B#BC,NARPCC2P                   PTR TO NAR PCC20 STUF.
         USING      NARPCC2D,B#BC
*&%$#    L     B#BS,NARPSCDN                   PTR TO NAR'S SCD.
         ICM   B#BS,X'F',NARPSCDN              PTR TO NAR'S SCD.
         BZ    NAROVR3                             IF NONE; SKIP OUT.
         NARSCDF B#BS,NARSTIM0,KNOWN=NARSCD
         USING        NARSTIM0,B#BS
*                                      CLC   MSG-REG : NUCLEUS
*                                      BC            >=
         CLC   NARPCBLT,NARSTBLD       Q. IS BLDL RESET REQUEST TIMELY.
         BNL   NAROVR3                   NO; SKIP OVER.
*********************************
**      RESET THE BLDL TABLE..
*                           ... FIRST TALK ABOUT IT.
         MVC   NARPCBLT,NARSTBLD              RESET THE TIME.
         AP    NARPCBLC,=P'1'                 COUNT THE TRIP.
         DROP  B#BC
         DROP  B#BP
         DROP  B#BS
*                                .... THEN  DO   IT.
         USING MODTBL,B#B
         L     X#B,PXMODDYN                  SIZE OF TABLE.
         LTR   X#B,X#B                       Q. IS THERE A TABLE.
         BZ    NAROVR3                         NO, LGTH IS ZERO; SKIP.
         L     B#B,MTXDYNNM                  TOP OF TABLE.
NARLOP3  MVI   MTNAME,X'F1'                  CLOBBER NAME.
         XC    MTREFCNT,MTREFCNT                    & COUNT.
         LA    B#B,MTLEN(B#B)                BUMP.
         BCT   X#B,NARLOP3                   LOOP IF NOT EXHAUSTED.
         DROP  B#B
****************************************
 SPACE 3
NAROVR3  #
NAROV2IB #
NAROV2I  #
************************************************************
 SPACE 2
*/ NUMBER INSERT=YES,SEQ1=13502000,NEW1=13502005,INCR=001 13502000 END
./ NUMBER INSERT=YES,SEQ1=15350000,NEW1=15350555,INCR=001 15350000 ---
*/ NUMBER INSERT=YES,SEQ1=15350000,NEW1=15350555,INCR=001 15350000 BGN
 SPACE 2
************************************************************
* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-1B  - LINK )
B#TB     EQU   R15
         CLI   PXXCTLNM+4,C'*'
         BNE   OVNART1
         L     B#TB,PXXCTLNM       PTR TO TIMING AREA.
         L     B#TB,NARPTIMP-NARPRM00(B#TB)
         STCK  NARPTIMJ-NARPTIMS(B#TB)
         STCK  NARPTIMK-NARPTIMS(B#TB)
OVNART1  #
************************************************************
 SPACE 2
*/ NUMBER INSERT=YES,SEQ1=15350000,NEW1=15350555,INCR=001 15350000 END
./ NUMBER INSERT=YES,SEQ1=17251000,NEW1=17251155,INCR=001 17251000 ---
*/ NUMBER INSERT=YES,SEQ1=17251000,NEW1=17251155,INCR=001 17251000 BGN
 EJECT
**************************************************
***   ROCKWELL MODS TO  VERIFY CERTAIN        ****
***   POINTS OF CORRECTNESS AFTER RETURNING   ****
***   FROM TYPE#1=MSG APPLICATION PROGRAMS..  ****
**************************************************
         TM    RCTYPE,RCMSG        Q. IS ONLINE TYPE-1.
         BZ    OVAFTER               NO, GETOUT.
 SPACE 1
****************************************
* VERIFY CORRECT PICA.
B#SM     EQU   R7
         L     B#SM,PXXCTLNM
         USING      NARPRM00,B#SM
         L     B#SM,NARPCC2P
         USING      NARPCC2D,B#SM
         L     1,NARPCTCB          PTR TO TCB.
         CLC   =AL3(0),5(1)        Q. DOES PIE POINT EXIST.
         BE    SPIEOK                NO;  NO PIE NO PICA; OK/GOOD.
         L     1,4(1)                YES, GET PTR TO TOP OF PIE-BLOCK.
         CLC   =AL3(SPIEZERO),1(1) Q. DOES PIE POINT TO OUR PICA.
         BE    SPIEOK                YES, CORR PICA; OK/GOOD/CONTINUE.
         MVC   NARPCWHO,RCPGM        NO, SAVE HIS NAME.
         MVC   NARPCWHR,0(1)             AND ADDR OF HIS PICA.
         SPIE  MF=(E,SPIEZERO)            & CORRECT THE PIE-PICA PTR.
         AP    NARPCSNG,=P'1'
SPIEOK   EQU   *
***************************************
         SPACE 3
****************************************
* VERIFY CORE LEFT.
         B     COREOK     *&%$     NOT COMPATABLE WITH MVS/XA.
         AGO   .OVCOR1
         BAL   R14,CORETEST
         B     COREOK              +0 => OK
         BAL   R14,CORENAME        +4 => NG
         AP    NARPCOR1,=P'1'
COREABTS EQU   *
*&%$     TM    NARPCFGA+4,X'04'    Q. ABEND IF NOT GOOD ENUF.
         BZ    OVCORE                NO, EXIT.
         CLI   RCCLAS,X'03'        Q. JEFF'S DARN GETMAIN IN CLASS 3.
         BE    OVCORE                YES,EXIT.
         BAL   R14,CORENAMF
         L     1,=X'86000458'             YES,  DO NOT FREE/FLUSH
         SVC   13                                WHEN ABENDING.
******************************
*
******************************
DPQE     EQU   152
FPQE     EQU   8
FFBQ     EQU   0
LFBQ     EQU   4
NFBQ     EQU   0
CORETEST EQU   *
         L     1,NARPCTCB               TCB
         L     1,DPQE(1)          DUMMY PQE
         L     1,FPQE(1)          FIRST PQE     (PROBABLY ONLY)
         LR    0,1                              (SAVE IT.)
         XR    15,15              CLEAR TO REMEMBER JOBPACK FBQE.
         XR     5,5               CLEAR TO COUNT TRIPS THRU LOOP.
CORLOPFQ LA     5,1(5)                     COUNT TRIP.
         L     1,0(1)             FIRST/NEXT FBQE
         CR    0,1                Q. BACK TO THE PQE.
         BE    FBQEXHAS             YES, DONE WITH ALL FBQE'S.
         CLC   13(3,1),NARPCTOP+1 Q. THIS FBQE FOR JOBPACK AREA.
         BNL   CORLOPFQ             NO, LOOP.
         LTR   15,15                YES, JOBPACK; Q. FIRST IN JOBPACK.
         BNZ   FBQTOMNY                             NO, PITY.
         LR    15,1                                 YES, REMEMBER IT.
         B     CORLOPFQ
*        ***
FBQEXHAS LTR   1,15               Q. ANY JOBPACK FBQE'S.
         BZ    CHUNKNON             NO; BOY, ARE WE EVER IN TROUBLE.
         CLC   13(3,1),NARPCBOT+1 Q. FREEBLOCK LOW ENOUGH.
         BH    CHUNKBOT             NO, PITY.
         L     15,08(1)           SIZE OF FREEBLOCK
         A     15,12(1)             + LOW END  = TOP OF FREEBLOCK.
         C     15,NARPCTOP        Q. IS BLOCK TOP PAST REGION TOP.
         BL    CHUNKTOP             NO, PITY.
CHUNKOK  MVC   NARPCBOT,12(1)       YES, GOOD; SAVE LOW END.
         BR    R14
*        ***********
CHUNKTOP EQU   *                  JOBPACK FBQE TOP NOT HIGH ENOUGH.
         O     0,=X'08000000'
CHUNKBOT EQU   *                  JOBPACK FBQE BOT NOT LOW  ENOUGH.
         O     0,=X'04000000'
CHUNKNON EQU   *                   NO   JOBPACK FBQE AT ALL.
         O     0,=X'02000000'
FBQTOMNY EQU   *                   TOOMANY JOBPACK FBQE'S.
         O     0,=X'01000000'
         LA    R14,4(R14)          BUMP RETURN ADDR IF BADNEWS.
         BR    R14
******************************
*
******************************
CORENAME EQU   *
         CLI   NARPCWHC,C' '
         BCR   7,R14
*        ******
CORENAMF EQU   *
         MVC   NARPCWHR,RCPGM
         LR    1,0                 PQE PTR STILL HERE HOPEFULLY.
         L     1,FFBQ(1)
         ST    1,NARPCFFB
         MVC   NARPCFFB+4(12),0(1)
         LR    1,0
         L     1,LFBQ(1)
         ST    1,NARPCLFB
         MVC   NARPCLFB+4(12),0(1)
         BR    R14
******************************
.OVCOR1  ANOP
OVCORE   EQU   *
COREOK   EQU   *
****************************************
*&%$     TM    NARPCFGA+4,X'01'   IF FLAG IS OFF,
         BZ    OVSIMTST           DON'T DO THIS NEXT TEST
         B     OVSIMTST           DON'T DO THIS IN 1.3 FOR NOW.
*
         L     R14,4(,R13)        PICK UP PREVIOUS SAVE AREA
         L     R14,12(,R14)       GET R14 FROM THAT SAVE AREA
         LA    R14,0(,R14)        CLEAR HY-BYTE
         LA    R15,PCSTART        POINT TO BEGINNING OF THIS MODULE
         CR    R14,R15            IS PREVIOUS R14 < OUR E.P.?
         BL    OVSIMTST           YES, EVERYTHING IS COOL.
*
         ABEND 1113,DUMP
         SPACE 2
OVSIMTST EQU   *
         DROP  B#SM
 SPACE 3
**************************************************
 SPACE 3
OVAFTER  EQU   *
 SPACE 3
*/ NUMBER INSERT=YES,SEQ1=17251000,NEW1=17251155,INCR=001 17251000 END
./ NUMBER INSERT=YES,SEQ1=18200000,NEW1=18200155,INCR=001 18200000 ---
*/ NUMBER INSERT=YES,SEQ1=18200000,NEW1=18200155,INCR=001 18200000 BGN
 SPACE 3
**************************************************
***   ROCKWELL MODS TO  MAKE CERTAIN          ****
***   TIME MEASUREMENT ADJ. AFTER RETURNING   ****
***   FROM TYPE#1&2   APPLICATION PROGRAMS..  ****
**************************************************
         OI    RCETIME+3,X'01'     FORCE ODD TO SHOW THAT TIME IS VALD.
         XC    RCTCTR,RCTCTR  CLEAR CTR BECAUSE  OF SUCCESSFUL EXEC.
 SPACE 3
****************************************
* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-2  --- TERMIN)
T#S      EQU   R1                  TIMER STOP REG.
B#TC     EQU   R7                  BASE FOR TIMES.
B#MC     EQU   R15
         CLI   PXXCTLNM+4,C'*'
         BNE   OVNART2
         L     B#TC,PXXCTLNM
         L     B#MC,NARPMOP2-NARPRM00(B#TC)
         L     B#TC,NARPTIMP-NARPRM00(B#TC)
         USING NARPTIMS,B#TC
         STCK      NARPTIMT        TERMINATE TIME,
         L     T#S,NARPTIMT+2
         S     T#S,NARPTIMA+2       - START TIME,
         ST    T#S,NARPTIMD+2       = DELTA TIME.
         OI        NARPTIMD+5,X'01'   FORCE ODD.
         USING NARCMOV2,B#MC
         MVC   NARCTIMD,NARPTIMD
         DROP  B#MC
         DROP  B#TC
OVNART2  DC    0Y(0)
************************************************************
 SPACE 3
*/ NUMBER INSERT=YES,SEQ1=18200000,NEW1=18200155,INCR=001 18200000 END
SPIEZERO SPIE  0,MF=L                                              HUGH
MINTIME  DC    A(X'F1')    MINIMUM TIME TO BE RETURNED.            HUGH
         BP    STA220    (IBM=BNZ) USE ONLY IF POS-NON-ZERO    HUGH+RDH
./ NUMBER INSERT=YES,SEQ1=25136000,NEW1=25136001,INCR=001 25136000 ---
*/ NUMBER INSERT=YES,SEQ1=25136000,NEW1=25136001,INCR=001 25136000 BGN
 SPACE 3
**************************************************************
***   ROCKWELL MODS IN THE STAE EXIT FOR TIMING  AND      ****
***    DUMP SPIN PROCESSING.                              ****
**************************************************************
* NAR MODS FOR STIMER(REAL/TASK) AND STCK LOGIC. (PART-3  - ABEND)
B#TD     EQU   R7
B#MD     EQU   R15
         OI    RCETIME+3,X'01'     FORCE ODD TO SHOW TRULY DONE.
         CLI   PXXCTLNM+4,C'*'
         BNE   OVNART3
         L     B#TD,PXXCTLNM
         L     B#MD,NARPMOP2-NARPRM00(B#TD)
         L     B#TD,NARPTIMP-NARPRM00(B#TD)
         USING NARPTIMS,B#TD
         STCK      NARPTIMT        TERMINATE TIME,
         L     T#S,NARPTIMT+2
         S     T#S,NARPTIMA+2       - START TIME,
         ST    T#S,NARPTIMD+2       = DELTA TIME.
         OI        NARPTIMD+5,X'01'   FORCE ODD.
         USING NARCMOV2,B#MD
         MVC   NARCTIMD,NARPTIMD
OVNART3  EQU   *
         DROP  B#MD
         DROP  B#TD
*****************************************
     SPACE 3
*****************************************
         DELETE EP=NARSPC10  FREE THE SPACE FOR STAE/SNAP/SPIN CODE.
B#E      EQU   R7
         TM    RCTYPE,RCMSG
         BZ    SKASTAE
**
         CLI   PXXCTLNM+4,C'*'
         BNE   SKASTAE
         L     B#E,PXXCTLNM                   PTR TO NARPARMS.
         USING     NARPRM00,B#E
*&%$#    L     B#E,NARPSCDN                   PTR TO NAR'S SCD.
         ICM   B#E,X'F',NARPSCDN              PTR TO NAR'S SCD.
         BZ    SKASTAE                             IF NONE; SKIP OUT.
         NARSCDF B#E,NARSCFB0,KNOWN=NARSCD
         TM    022*8(B#E),X'80'                Q. FEATURE 22 ON.
         BZ    SKASTAE                           NO; SKIP NARSTAE0.
**
         L     B#E,PXXCTLNM
         USING NARPRM00,B#E
         L     B#E,NARPSTAE
         USING NARPSUAE,B#E
         L     R1,RCECOMP      GET COMPLETION CODE
         LA    R1,0(,R1)       ZERO HIGH ORDER BYTE
         C     R1,=F'777'      IS IT PSEUDO ABEND
         BE    SKASTAE         YES, DONT WANT A DUMP
         C     R1,=F'778'      IS IT ROLL CALL.                     JB
         BE    SKASTAE         YES, DONT WANT A DUMP                JB
         C     R1,=F'3303'     IS IT A SUSPENSION
         BE    SKASTAE         YES, DONT WANT A DUMP
**********************************
         LOAD  EP=NARSTAE0
         ST    R0,NARPSTA1
         LR    R15,R0
         ST    R13,NARPSAVE+4
         LA    R13,NARPSAVE
         LR    R9,R14
         BALR  R14,R15
         LR    R14,R9
         L     R13,NARPSAVE+4
SKASTAE  EQU   *
         DROP  B#E
********************************************************
 SPACE 3
*/ NUMBER INSERT=YES,SEQ1=25136000,NEW1=25136001,INCR=001 25136000 END
./ NUMBER INSERT=YES,SEQ1=34160410,NEW1=34160411,INCR=001 34160410 ---
*/ NUMBER INSERT=YES,SEQ1=34160410,NEW1=34160411,INCR=001 34160410 BGN
 SPACE 3
********************************************************
         LTR   R5,R5
         BZ    SKSETRP
         TM    RCTYPE,RCBMP    IF IT IS A BMP DON'T KILL SYSUDUMP
         BO    SKSETRP
**
         CLI   PXXCTLNM+4,C'*'
         BNE   SKSETRP
B#F      EQU   R15
         L     B#F,PXXCTLNM                   PTR TO NARPARMS.
         USING     NARPRM00,B#F
*&%$#    L     B#F,NARPSCDN                   PTR TO NAR'S SCD.
         ICM   B#F,X'F',NARPSCDN              PTR TO NAR'S SCD.
         BZ    SKSETRP                             IF NONE; SKIP OUT.
         NARSCDF B#F,NARSCFB0,KNOWN=NARSCD
         TM    023*8(B#F),X'80'                Q. FEATURE 23 ON.
         BZ    SKSETRP                           NO; SKIP DUMP KILL.
**
KILLDMP  SETRP WKAREA=(5),DUMP=NO    KILL SYSUDUMP
SKSETRP  EQU   *
         DROP  B#F
********************************************************
 SPACE 3
*/ NUMBER INSERT=YES,SEQ1=34160410,NEW1=34160411,INCR=001 34160410 END
MINTIME1 DC    A(X'F1')    MINIMUM TIME TO BE RETURNED.            HUGH
./ NUMBER INSERT=YES,SEQ1=34450000,NEW1=34451111,INCR=001 34450000 ---
*/ NUMBER INSERT=YES,SEQ1=34450000,NEW1=34451111,INCR=001 34450000 BGN
***********************************************************
   EJECT
********************************************************
         DC    C'&SYSDATE  &SYSTIME'
         NARPRM
********************************************************
    EJECT
********************************************************
         NARCPY
********************************************************
    EJECT
********************************************************
         NARSCD
    EJECT
********************************************************
   SPACE 3
         ZNOGEN
   SPACE 3
         IDLI PSTBASE=0
         ISCD SCDBASE=0
SSCD     EQU  SSCDORG
         DFSSSOB DFSESSCT
********************************************************
    SPACE 3
*/ NUMBER INSERT=YES,SEQ1=34450000,NEW1=34451111,INCR=001 34450000 END
*&%$SSCD  DSECT
*&%$      SSCD
