//AIMS31IR JOB 'IMSGROUP  SH28205610*110A044         999  3000009037',
//  NOTIFY=$A1016,
//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H
//*MAIN ORG=LOCAL,CLASS=L
//PRSCEXIT EXEC IMSUPDTE,DISPR=SHR,
//  MEMBER=PRSCEXIT,
//             P=IMS,LOAD=TEST,
// AUXLIB='IMS.VBNB260.TARGET.SAMPLIB',
//* CONDL=0,
//* XREFC='XREF(FULL)',
//  SOUT='*'
//C.SYSIN  DD *    SEE IMS.VBNB260.TARGET.SAMPLIB(PRSCEXIT)
         TITLE 'PRSCEXIT .DEFAULT ASSEMBLER EXIT ROUTINE TO IRUF DATA'
PRSCEXIT CSECT
*---------------------------------------------------------------------*
*                                                                     *
*  PRSCEXIT - DEFAULT ASSEMBLER EXIT ROUTINE TO IRUF DATA             *
*          ======>>         I M F             <<======                *
*                                                                     *
******* I M P O R T A N T *********************************************
*                                                                     *
*  THIS IS A REWRITE OF THE OLD PRSCEXIT (COBOL) ROUTINE USING        *
*  ASSEMBLER TO IMPROVE IMFLEDIT PERFORMANCE.  IF CUSTOMERS DECIDE    *
*  TO WRITE THEIR OWN EXIT,  WE STRONG RECOMMEND CUSTOMERS TO WRITE   *
*  THE EXIT USING ASSEMBLER AND USE THIS EXIT AS SAMPLE.              *
*  CUSTOMERS DO NOT NEED TO ASSEMBLE AND LINK-EDIT THIS MODULE IF     *
*  CUSTOMERS DECIDE TO USE THE DEFAULT EXIT ROUTINE.                  *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*   MODULE NAME:  PRSCEXIT                                            *
*                                                                     *
*   TITLE:   EXIT ROUTINE TO IRUF DATA                                *
*            -----EXECUTES IN BATCH                                   *
*                                                                     *
*                                                                     *
*   ENTRY POINTS:                                                     *
*         CEXITEP1 - INITIALZATION ENTRY POINT (NO PARAMETERS)        *
*         CEXITEOF - ENTRY POINT FOR EXIT TERMINATION                 *
*         CEXITTER - ENTRY POINT FOR TERMINAL ACCOUNTING RECORD       *
*                    PROCESSING.  R1 POINTS TO POINTER TO THE RECORD. *
*         CEXITPSB - ENTRY POINT FOR PROGRAM ACCOUNTING RECORD        *
*                    PROCESSING.  R1 POINTS TO POINTER TO THE RECORD. *
*         CEXITTRN - ENTRY POINT FOR TRANSACTION ACCOUNTING RECORD    *
*                    PROCESSING.  R1 POINTS TO POINTER TO THE RECORD. *
*   FUNCTION:                                                         *
*                THE PURPOSE OF THIS SUB-ROUTINE IS TO PROVIDE THE    *
*                USER WITH A DEFAULT EXIT ROUTINE TO ESTABLISH THE    *
*                CUSTOMER IDENTIFICATION IN THE IMS RESOURCE UTILI-   *
*                ZATION FILE.  THE USER IS ABLE TO ENTER THEIR OWN    *
*                CUSTOMER FIELD (UP TO 18 CHARACTERS IN LENGTH AND    *
*                HAVING UP TO FIVE CONTROL FIELDS).                   *
*                                                                     *
*                THIS ROUTINE ESTABLISHES ONE FIELD (LOGICAL          *
*                TERMINAL NAME) AS THE CUSTOMER FIELD.  FURTHERMORE   *
*                FOR BMP TRANSACTIONS NOT ASSOCIATED TO A TRANSACTION *
*                CODE, THE PROGRAM NAME WILL BE MOVED TO THE          *
*                TRANSACTION CODE.                                    *
*                                                                     *
*                                                                     *
*   REGISTERS AT ENTRY:                                               *
*            R1  - PARM LIST
*            R13 - SAVE AREA ADDRESS                                  *
*            R15 - ENTRY POINT ADDRESS                                *
*                                                                     *
*   REGISTERS AT EXIT:                                                *
*            ALL REGISTERS RESTORED EXCEPT R15                        *
*            R15 - RETURN CODE                                        *
*                  00  ... ONLY 0 IS VALID                            *
*                                                                     *
*   MODULE CALLED BY:                                                 *
*            PR3TAR                                              IMF21*
*            PR3PAR
*            PR3LAR
*                                                                     *
*   EXTERNAL ROUTINES CALLED:                                         *
*            NONE                                                     *
*                                                                     *
*   MESSAGES:                                                         *
*            NONE                                                     *
*                                                                     *
*   ABENDS:                                                           *
*            NONE                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
         REQUATE
*---------------------------------------------------------------------*
*                                                                     *
*        ENTRY POINT. THIS ENTRY IS CALLED ONLY ONCE.            *
*                                                                     *
*---------------------------------------------------------------------*
*
         ENTRY CEXITEP1
CEXITEP1 DS    0H
         DROP  ,                   DROP ALL BASE REGS
         USING CEXITEP1,R12
         B     20(0,R15)           BRANCH OVER NAME AND DATE
         DC    CL8'CEXITEP1'       MODULE NAME
         DC    CL8'&SYSDATE'       CURRENT DATE
         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA
         LR    R12,R15             ESTABLISH A BASE REGISTER
         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA
         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.
         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.
         LR    R13,R14             R13 -> NEW SAVE AREA
*
*
         B     RETURN
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        CEXITEOF.  CALLED WHEN EOF OF IRUF
*                                                                     *
*---------------------------------------------------------------------*
*
         ENTRY CEXITEOF
CEXITEOF DS    0H
         DROP  ,                   DROP ALL BASE REGS
         USING CEXITEOF,R12
         B     20(0,R15)           BRANCH OVER NAME AND DATE
         DC    CL8'CEXITEOF'       MODULE NAME
         DC    CL8'&SYSDATE'       CURRENT DATE
         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA
         LR    R12,R15             ESTABLISH A BASE REGISTER
         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA
         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.
         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.
         LR    R13,R14             R13 -> NEW SAVE AREA
*
         B     RETURN
*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        CEXITTER.  CALLED FOR EVERY TERMINAL ACCOUNTING RECORD.      *
*        R1 POINTS TO POINTER TO THE RECORD AND THE NEGATE-RECORD-SW  *
*                                                                     *
*---------------------------------------------------------------------*
         ENTRY CEXITTER
CEXITTER DS    0H
         USING CEXITTER,R12
         B     20(0,R15)           BRANCH OVER NAME AND DATE
         DC    CL8'CEXITTER'       MODULE NAME
         DC    CL8'&SYSDATE'       CURRENT DATE
         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA
         LR    R12,R15             ESTABLISH A BASE REGISTER
         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA
         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.
         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.
         LR    R13,R14             R13 -> NEW SAVE AREA
*
*
         L     R4,0(R1)            LOAD THE POINTER TO THE RECORD
         L     R5,4(R1)          LOAD THE POINTER TO NEGATE-RECORD-SW
         USING TLTERM,R4         SET ADDRESSABILITY FOR RECORD
         USING TLRECID,R4  *** CORRECTION OF ABOVE ERROR *** HH 5/29/91
         MVC   TLCUST(8),TLLTERM   SET CUSTOMER ID TO LTERM
         NI    TLCUST,X'BF'        SET CUSTOMER ID TO LOWERCASE HH 5/29
         MVI   0(R5),C'0'         MOVE 0 TO NEGATE-RECORD-SW
*                               MOVE 1 IF THIS RECORD IS NOT BE WRITTEN
         B     RETURN
*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        CEXITPSB.  CALLED FOR EVERY PROGRAM  ACCOUNTING RECORD.      *
*        R1 POINTS TO POINTER TO THE RECORD AND THE NEGATE-RECORD-SW  *
*                                                                     *
*---------------------------------------------------------------------*
         ENTRY CEXITPSB
CEXITPSB DS    0H
         USING CEXITPSB,R12
         B     20(0,R15)           BRANCH OVER NAME AND DATE
         DC    CL8'CEXITPSB'       MODULE NAME
         DC    CL8'&SYSDATE'       CURRENT DATE
         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA
         LR    R12,R15             ESTABLISH A BASE REGISTER
         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA
         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.
         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.
         LR    R13,R14             R13 -> NEW SAVE AREA
*
*
         L     R4,0(R1)            LOAD THE POINTER TO THE RECORD
         S     R4,=F'4'          GO BACK 4 FOR LLZZ
         L     R5,4(R1)          LOAD THE POINTER TO NEGATE-RECORD-SW
         USING PAPSB,R4         SET ADDRESSABILITY FOR RECORD
         MVI   0(R5),C'0'         MOVE 0 TO NEGATE-RECORD-SW
*                               MOVE 1 IF THIS RECORD IS NOT BE WRITTEN
*
         B     RETURN
*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        CEXITTRN.  CALLED FOR EVERY TRANSACTION ACCOUNTING RECORD.   *
*        R1 POINTS TO POINTER TO THE RECORD AND THE NEGATE-RECORD-SW  *
*                                                                     *
*---------------------------------------------------------------------*
         ENTRY CEXITTRN
CEXITTRN DS    0H
         USING CEXITTRN,R12
         B     20(0,R15)           BRANCH OVER NAME AND DATE
         DC    CL8'CEXITTRN'       MODULE NAME
         DC    CL8'&SYSDATE'       CURRENT DATE
         STM   R14,R12,12(R13)     SAVE REGISTERS IN OLD SAVE AREA
         LR    R12,R15             ESTABLISH A BASE REGISTER
         LA    R14,SAVEAREA        R14 -> NEW SAVE AREA
         ST    R14,8(,R13)         KEEP A(NEW SA) IN OLD SA.
         ST    R13,4(,R14)         KEEP A(OLD SA) IN NEW SA.
         LR    R13,R14             R13 -> NEW SAVE AREA
*
*
         L     R4,0(R1)            LOAD THE POINTER TO THE RECORD
         S     R4,=F'4'          GO BACK 4 FOR LLZZ
         L     R5,4(R1)          LOAD THE POINTER TO NEGATE-RECORD-SW
         USING TATRANS,R4       SET ADDRESSABILITY FOR RECORD
*
         ZAP   TADTRCAT(2),=PL2'999'
*      CHECK IF TRAN-INPUT-CLASS IS COMPOSED OF NUMERIC DIGIT
         CLI   TACLASS,C'0'      CLASS - FIRST DIGIT
         BL    PUT999               IF < 0,  NO GOOD
         CLI   TACLASS,C'9'      CLASS- FIRST DIGIT
         BH    PUT999               IF > 9,  NO GOOD
         CLI   TACLASS+1,C'0'      CLASS - SECOND DIGIT
         BL    PUT999               IF < 0,  NO GOOD
         CLI   TACLASS+1,C'9'      CLASS- SECOND DIGIT
         BH    PUT999               IF > 9,  NO GOOD
         CLI   TACLASS+2,C'0'      CLASS - THIRD DIGIT
         BL    PUT999               IF < 0,  NO GOOD
         CLI   TACLASS+2,C'9'      CLASS- THIRD DIGIT
         BH    PUT999               IF > 9,  NO GOOD
*                     OK,  WE CAN PACK NOW
         PACK  TADTRCAT(2),TACLASS(3)
PUT999   DS    0H
         CLI   TATRANT,TATRABMP    IS A BMP?
         BE    CHECKTRN            YES,  CHECK TRAN NAME
         CLI   TATRANT,TANDP       IS A FP-NDP?
         BE    CHECKTRN            YES,  CHECK TRAN NAME
         CLI   TATRANT,TAFPU       IS A FP-FPU?
         BE    CHECKTRN            YES,  CHECK TRAN NAME
         B     SKIPTRNN            NOT BMP,NDP,FPU, SKIP CHECK
CHECKTRN DS    0H
         CLC   TATRAN,=CL8' '       IS TRAN NAME BLANKS?
         BE    MOVETRNN            YES, MOVE PSB NAME OVER
         CLC   TATRAN,=8X'00'      IS TRAN NAME ALL HEX ZERO?
         BE    MOVETRNN            YES, MOVE PSB NAME OVER
         B     SKIPTRNN
MOVETRNN DS    0H
         MVC   TATRAN,TAPSBNAM     MOVE PSB NAME OVER TO TRAN NAME
SKIPTRNN DS    0H
         MVC   TACUST(8),TALGTRNM  MOVE LTERM NAME TO CUSTID
         MVC   TACUST(8),TAPSBNAM  MOVE P.S.B.NAME TO CUSTID
         MVI   0(R5),C'0'         MOVE 0 TO NEGATE-RECORD-SW
*                               MOVE 1 IF THIS RECORD IS NOT BE WRITTEN
*
         B     RETURN
*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*     RETURN. ALL ENTRIES RETURN THROUGH HERE.                        *
*                                                                     *
*---------------------------------------------------------------------*
*
RETURN   L      R13,4(,R13)
         RETURN (14,12),T,RC=0
*
         EJECT
*---------------------------------------------------------------------*
*          C O N S T A N T S .                                        *
*---------------------------------------------------------------------*
*
SAVEAREA DS     18F
*
         CIRUFR01
         EJECT
         END
//L.SYSIN   DD *
  INCLUDE IMFLOAD(PRSCEXTB)
  ENTRY           PRSCEXTB
  NAME            PRSCEXTB(R)
//L.IMFLOAD DD DISP=SHR,DSN=IMS.VBNB260.TARGET.LOAD
