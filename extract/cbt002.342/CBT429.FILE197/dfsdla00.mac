//AIMS31DA JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',
//  MSGLEVEL=1,MSGCLASS=H,
//  REGION=1024K,TIME=010,
//  NOTIFY=$A1016
//*MAIN ORG=RMY24,CLASS=L
//******************************* (       IMA.RECORD(DFSDLA00)) ******
//DFSDLA00 EXEC IMSUPDTE,P=IMA,DISPR=SHR,
//   SYMI=SOURCESV,SYMO=SOURCESV,
//   SMEMBER=DFSDLA00,LMEMBER=DFSDLA0G,
//** CONDL=0,
//   RE='RENT,REFR',
//   LOAD='PVT.MODS',
//   SOUT='*',
//   OSLIBS=AMVSXA,
//   ACCT=0
//U.SYSIN1 DD  *    RW0028H   PROCESS "SETC" (PARTIAL) CALL.
./ CHANGE   NAME=DFSDLA00
**************************************************             #28/SETC
         SPACE 1                                               #28/SETC
         L     R4,=A(NARCDTST)     GO TEST FOR NAR CODES       #28/SETC
         BR    R4                                              #28/SETC
*                                                              #28/SETC
OVNARTST DS    0H                  RETURN HERE IF NOT NAR CODE #28/SETC
         SPACE 3                                               #28/SETC
./ NUMBER INSERT=YES,SEQ1=34230080,NEW1=34230081,INCR=001      #28/SETC
*/ NUMBER INSERT=YES,SEQ1=34230080,NEW1=34230081,INCR=001  BGN #28/SETC
         SPACE 2                                               #28/SETC
************************************************************** #28/SETC
         L     R4,=A(SETCSET)      GET ADDR OF SETC ROUTINE    #28/SETC
         BR    R4                  GO TO IT                    #28/SETC
*                                                              #28/SETC
NOTSETC  EQU   *                                               #28/SETC
************************************************************** #28/SETC
         SPACE 2                                               #28/SETC
*/ NUMBER INSERT=YES,SEQ1=34230080,NEW1=34230081,INCR=001  END #28/SETC
./ NUMBER INSERT=YES,SEQ1=62220000,NEW1=62220025,INCR=001      #28/SETC
*/ NUMBER INSERT=YES,SEQ1=62220000,NEW1=62220025,INCR=001  BGN #28/SETC
         SPACE 2                                               #28/SETC
*************************************************************  #28/SETC
         TITLE 'ROCKWELL MODIFICATIONS  '                      #28/SETC
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  #28/SETC
* * *                                                   * * *  #28/SETC
* * *    R O C K W E L L   M O D I F I C A T I O N S    * * *  #28/SETC
* * *                                                   * * *  #28/SETC
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  #28/SETC
         SPACE 2                                               #28/SETC
*                                                              #28/SETC
NARCDTST DS    0H                                              #28/SETC
         USING *,R4                TELL THE ASSEMBLER          #28/SETC
         SR    R15,R15             CLEAR R15                   #28/SETC
         LA    R2,SETCCODE         POINT TO SETC CODE          #28/SETC
         CL    R5,SETCCODE         IS FUNCTION = 'SETC'?       #28/SETC
         BE    RFUNCFND            YES, BRANCH                 #28/SETC
         L     R14,=A(OVNARTST)    GET ADDR OF OVNARTST        #28/SETC
         L     R4,SECBASE          RESTORE 2ND BASE REG        #28/SETC
         BR    R14                 RETURN TO OVNARTST          #28/SETC
RFUNCFND DS    0H                                              #28/SETC
         L     R14,=A(FUNCFND)     GET ADDR OF FUNCFND         #28/SETC
         L     R4,SECBASE          RESTORE 2ND BASE REG        #28/SETC
         BR    R14                 RETURN TO FUNCFND           #28/SETC
******************************                                 #28/SETC
         DS    0F                                              #28/SETC
*        ******                                                #28/SETC
SETCCODE DC    CL4'SETC'                                       #28/SETC
         DC    X'C3'                                           #28/SETC
         DC    X'000000'                                       #28/SETC
         SPACE 2                                               #28/SETC
************************************************************** #28/SETC
         LTORG                                                 #28/SETC
************************************************************** #28/SETC
         EJECT                                                 #28/SETC
*                                                              #28/SETC
SETCSET  DS    0H                                              #28/SETC
         USING *,R4                TELL THE ASSEMBLER          #28/SETC
         CLI   PSTFUNCT,X'C3'      SPECIAL 'SETC' CALL?        #28/SETC
         BNE   NOTSETCS            NO,  BRANCH                 #28/SETC
         TM    PSTCODE1,PSTP3RGN   IS THIS A BATCH REGION?     #28/SETC
         BO    GOTORET6            YES, IGNORE THE SETC CALL   #28/SETC
         TM    PSTVSFLG,PSTVS1     IS THIS A VS ANALYZE CALL?  #28/SETC
         BZ    GOTORET2            NO, EXIT WITHOUT TRACE      #28/SETC
*                                                              #28/SETC
*        LR    R15,R1              A(PST) TO R15               #28/SETC
*        NARPSTF R15               FIND OUR EXTENDED PST       #28/SETC
*        L     R15,NARPSTJ0-NARPST#0(,R15) PTR TO ACCTNG AREA  #28/SETC
*        USING NARPSTK0,R15                                    #28/SETC
*        L     R14,8(,R9)          POINT TO USER'S I/O AREA    #28/SETC
*        MVC   NARPCHG0(11),0(R14) MVE 11 BYTES TO ACCTNG AREA #28/SETC
*        OI    PSTVSFLG,PSTVS3     MARK PSEUDO CALL COMPLETED  #28/SETC
*        DROP  R15                                             #28/SETC
*                                                              #28/SETC
GOTORET6 EQU   *                                               #28/SETC
         L     R15,=A(RETURN6)     GET ADDR OF RETURN6         #28/SETC
         L     R4,SECBASE          RESTORE 2ND BASE REGISTER   #28/SETC
         BR    R15                 GO TO RETURN6               #28/SETC
GOTORET2 EQU   *                                               #28/SETC
         L     R15,=A(RETURN2)     GET ADDR OF RETURN2         #28/SETC
         L     R4,SECBASE          RESTORE 2ND BASE REGISTER   #28/SETC
         BR    R15                 GO TO RETURN2               #28/SETC
NOTSETCS EQU   *                                               #28/SETC
         L     R15,=A(NOTSETC)     GET ADDR OF NOTSETC         #28/SETC
         L     R4,SECBASE          RESTORE 2ND BASE REGISTER   #28/SETC
         BR    R15                 GO TO NOTSETC               #28/SETC
         SPACE 2                                               #28/SETC
************************************************************** #28/SETC
         LTORG                                                 #28/SETC
************************************************************** #28/SETC
**                                                             #28/SETC
**                                                             #28/SETC
************************************************************** #28/SETC
         SPACE 2                                               #28/SETC
*/ NUMBER INSERT=YES,SEQ1=62220000,NEW1=62220025,INCR=001  END #28/SETC
**       HANG ANOTHER GRUNCH HERE  MUST BE 62220100            #28/SETC
//U.SYSIN2 DD  *    RW0029A   PROCESS "LOG" CALL.
./ CHANGE   NAME=DFSDLA00
         NARSCD                                                #29/WLOG
         CLI   XLOGCODE,X'A0'      Q. IS THIS A NONUSER CALL.  #29/WLOG
         BL    OVNAR29H              YES; SKIP NAR SIZE TESTS. #29/WLOG
         CLC   0(2,R10),=AL2(PSTLOGWS-(NARLR+48)) IF TOOO BIG, #29/WLOG
         BH    BADLENG             RETURN 'AT' STATUS CODE     #29/WLOG
         SRL   R5,2                ONLY 1/4 OF MAX LENGTH      #29/WLOG
OVNAR29H #                                                     #29/WLOG
         L     R4,=A(NARSLOG)      GO TO NAR'S ROUTINE TO MAKE #29/WLOG
         BR    R4                   A LOG RECORD.              #29/WLOG
*                                                              #29/WLOG
NARRET2X EQU   *                                               #29/WLOG
./ NUMBER INSERT=YES,SEQ1=62220100,NEW1=62220110,INCR=001      #29/WLOG
*/ NUMBER INSERT=YES,SEQ1=62220100,NEW1=62220110,INCR=001  BGN #29/WLOG
         EJECT                                                 #29/WLOG
*                                                              #29/WLOG
NARSLOG  DS    0H                                              #29/WLOG
         USING *,R4                TELL THE ASSEMBLER          #29/WLOG
***********************************************************    #29/WLOG
*        EQU   R0                  MUST RELOAD THESE W/ SCD ADDR.   #29
P#P      EQU   R1  ** IDENTITY **  BASED ON IBM'S PST PTR NOW. #29/WLOG
R#P      EQU   R3  ** IDENTITY **  AREA POINTER LOADED HERE.   #29/WLOG
R#A      EQU   R5                  FREE REG BECOMES SAVE PTR.  #29/WLOG
*        EQU   R6                  MUST RELOAD THESE W/ SCD ADDR.   #29
R#C      EQU   R7                  PTR TO ACCTG AREA IN NARPST #29/WLOG
R#F      EQU   R8                  CONTAINS SETC FLAG.         #29/WLOG
R#L      EQU   R9                  CONTAINS SETC LENGTH.       #29/WLOG
*        EQU   R10 ** IDENTITY **  PTR TO THE SEGMENT TO LOG.  #29/WLOG
R#W      EQU   R15                                             #29/WLOG
***************************************                        #29/WLOG
         CLI   4(R10),X'A0'        Q. IS IT NON-USER TYPE.     #29/WLOG
         BL    NARORIG               YES; USE IBM FORM OF CALL.#29/WLOG
         LR    R#A,P#P             A(PST) TO R(R#A).           #29/WLOG
         NARPSTF R#A,FAILX=NARORIG PTR TO EXTRA/AUXILARY PST.  #29/WLOG
         L     R#A,(NARPSTV0-NARPST#0)(R#A)  PTR TO S/A.       #29/WLOG
*&‰%     LR    R0,R6               RESTORE SCD ADDR.           #29/WLOG
         STM   R0,R15,0(R#A)       SAVE EM AND RELAX.          #29/WLOG
******************************                                 #29/WLOG
*&‰%     L     R4,(4*(4+0))(R#A)   RESTORE OUR CURRENT BASE REG.    #29
         L     R#P,PSTLOGWA        PTR TO LOG WORK AREA.       #29/WLOG
******************************                                 #29/WLOG
         CLC   =C'SETC',4(R10)     Q. IS THIS A "SETC" LOG.    #28/SETC
         BNE   NARSTACK              NO; SKIP OVER.            #28/SETC
         LR    R#C,P#P             A(PST) TO R#C               #28/SETC
         NARPSTF R#C,FAILX=NARSTACK     FIND OUR EXTENDED PST  #28/SETC
         L     R#C,NARPSTJ0-NARPST#0(,R#C) PTR TO ACCTNG AREA  #28/SETC
         USING NARPSTK0,R#C                                    #28/SETC
         XR    R#L,R#L             CLEAR REGISTER.             #28/SETC
         IC    R#L,1(,R10)         GET LENTH OF REC.(0000000L) #28/SETC
         XC    NARPCHF0(02),NARPCHF0 CLEAR L-HALF OF FLAG WORD.#28/SETC
         LR    R#F,R#L               SAVE ORIG LEN  (0000000L) #28/SETC
         C     R#L,=A(NARPCHM0)      Q. IS LEN TOO LONG.       #28/SETC
         BNH   NARLENOK                NO, GOOD; CONTINUE.     #28/SETC
         O     R#F,=A(X'80')           YES; FLAG IT (0000008L) #28/SETC
         LA    R#L,NARPCHM0                  & SET MAX.        #28/SETC
NARLENOK LR    R#W,R#L               COPY LENGTH  (000000LL)   #28/SETC
         SLL   R#W,16                SHIFT IT TO  (00LL0000)   #28/SETC
         ST    R#W,NARPCHL0          STORE IT.    (00LL0000)   #28/SETC
         S     R#L,=A(5)             MACH CODE LEN OF DATA.    #28/SETC
         EX    R#L,NARSCMVC          MOVE THE DATA.            #28/SETC
         SLL   R#F,8                 SHIFT THE FLAG (0000XL00) #28/SETC
         STH   R#F,NARPCHF0          STO R-H OF REG            #28/SETC
*                                     AS L-H OF FLAG(XL00UUUU) #28/SETC
*                                                              #28/SETC
******************************                                 #29/WLOG
***  STACK THE COMBINED PIECES IN THE NEW CORE.                #29/WLOG
NARSTACK #                                                     #29/WLOG
         USING NARRDW,R#P                                      #29/WLOG
         XC    NARRDWLR,NARRDWLR   CLEAR PRFIX.                #29/WLOG
         MVC   NARRDW(16),NARRDW00 MOVE PREFIX W/RDW ATTACHED. #29/WLOG
         LH    R#W,0(R10)          USERS LENGTH                #29/WLOG
         STH   R#W,NARUSRLL            (COPIED)                #29/WLOG
         AH    R#W,NARRDW00         + SYSTEM OVHD  =  TOTAL LENGTH. #29
         STH   R#W,NARRDW          SET LENGTH INTO RDW.        #29/WLOG
*        ***                                                   #29/WLOG
         TIME  DEC                 GET                         #29/WLOG
         ST    R0,NARTIME             TIME                     #29/WLOG
         ST    R1,NARDATE           & DATE.                    #29/WLOG
         LM    R0,R1,0(R#A)        RESTORE REGS FROM SAVE AREA #29/WLOG
         L     R#W,PSTPSB          GET A(PSB) FROM THE PST.    #29/WLOG
         LA    R#W,0(R#W)                                      #29/WLOG
         LTR   R#W,R#W                                         #29/WLOG
         BZ    *+4+6                                           #29/WLOG
         MVC   NARLPSBN,PDIRSYM-PDIR(R#W) MOVE PSBNAME TO REC. #29/WLOG
         L     R#W,PSTSMB          GET A(SMB) FROM THE PST.    #29/WLOG
         LA    R#W,0(R#W)                                      #29/WLOG
         LTR   R#W,R#W                                         #29/WLOG
         BZ    *+4+6                                           #29/WLOG
         MVC   NARLTRAN,SMBTRNCD-SMB(R#W) MOVE SMBNAME TO REC. #29/WLOG
*        ******                                                #29/WLOG
         LA    R#W,L'NARRDWLR(R#P) PTR TO WHERE TO STO USER DATA.   #29
         ST    R#W,NARTOOOA        STO FOR MVCL.               #29/WLOG
*        ***                                                   #29/WLOG
         ST    R10,NARFROMA        USERS PTR.     STO FOR MVCL.#29/WLOG
*        ***                                                   #29/WLOG
         LH    R#W,0(R10)          USERS LENGTH.               #29/WLOG
         ST    R#W,NARFROML        STO FOR MVCL.               #29/WLOG
*                                                              #29/WLOG
         ST    R#W,NARTOOOL        STO FOR MVCL.               #29/WLOG
*        ******                                                #29/WLOG
         LM    R6,R9,NARTOOOA                                  #29/WLOG
         STM   R6,R9,(4*(016))(R#A)                            #29/WLOG
         MVCL  R6,R8               MOVE THE USERS HUGE GRUNCH..#29/WLOG
*        ***********                                           #29/WLOG
         L     R6,(4*(6+0))(R#A)   RESTORE SCD ADDR.           #29/WLOG
************************************************************** #29/WLOG
***  WRITE THE COMBINED PIECES TO THE LOG.                     #29/WLOG
*                                                              #29/WLOG
         ILOG  FUNC=WRT,SCD=(R6),WAITYPE=IWAIT,RCD=(R#P)       #29/WLOG
*                                                              #29/WLOG
************************************************************** #29/WLOG
***  CLEAN UP & RETURN TO INSTR AFTER IBM'S ILOG CALL.         #29/WLOG
         LM    R0,R15,0(R#A)                                   #29/WLOG
         L     R15,=A(NARRET2X)                                #29/WLOG
         BR    R15                                             #29/WLOG
******************************                                 #29/WLOG
*                                                              #29/WLOG
************************************************************** #29/WLOG
***  COME HERE TO GO BACK TO IBM'S ILOG CALL.                  #29/WLOG
NARORIG  DS    0H                                              #29/WLOG
         L     R15,=A(CODEOK)                                  #29/WLOG
         BR    R15                                             #29/WLOG
**************************************************             #29/WLOG
         EJECT                                                 #29/WLOG
         DC    0A(0)                                           #29/WLOG
NARRDW00 DC    Y(NARLR,0)                                      #29/WLOG
         DC    CL8'NARLOG  '                                   #29/WLOG
         DC    Y(NARLP,0)                                      #29/WLOG
**********************                                         #29/WLOG
         DC    C'&SYSDATE-&SYSTIME'                            #29/WLOG
NARSCMVC MVC   NARPCHI0(00),4(R10) MVE NN BYTES TO ACCTNG AREA #28/SETC
**************************************************             #29/WLOG
         SPACE 2                                               #29/WLOG
**************************************************             #29/WLOG
         LTORG                                                 #29/WLOG
**************************************************             #29/WLOG
         SPACE 2                                               #29/WLOG
*/ NUMBER INSERT=YES,SEQ1=62220100,NEW1=62220110,INCR=001  END #29/WLOG
./ NUMBER INSERT=YES,SEQ1=90300000,NEW1=90300010,INCR=010      #29/WLOG
*/ NUMBER INSERT=YES,SEQ1=90300000,NEW1=90300010,INCR=010  BGN #29/WLOG
         EJECT                                                 #29/WLOG
***********************************************************    #29/WLOG
NARRDW   DSECT                                                 #29/WLOG
         DC    Y(0,0)         LENGTH, ZEROS.                   #29/WLOG
         DC    CL8' '         CONSTANT 'NARLOG  '              #29/WLOG
NARPRE   DC    Y(0,0)         LENGTH OF NARLP.                 #29/WLOG
NARUSRLL DC    Y(0,0)         USER DATA LENGTH.                #29/WLOG
NARDATE  DC    A(0)           DATE THIS RECORD LOGGED.         #29/WLOG
NARTIME  DC    A(0)           TIME THIS RECORD LOGGED.         #29/WLOG
NARLPSBN DC    CL8' '         PSB NAME.                        #29/WLOG
NARLTRAN DC    CL8' '         TRAN CODE NAME.                  #29/WLOG
         DC    A(0)           (RESERVED).                      #29/WLOG
         DC    A(0)           (RESERVED).                      #29/WLOG
NARLP    EQU   *-NARPRE                                        #29/WLOG
NARLR    EQU   *-NARRDW                                        #29/WLOG
NARRDWLR EQU   NARRDW,NARLR   START OF USER LOG DATA.          #29/WLOG
NARTOOOA DC    A(0)           WORK AREA OVERLAID BY USER DATA. #29/WLOG
NARTOOOL DC    A(0)             "    "      "     "   "    "   #29/WLOG
NARFROMA DC    A(0)             "    "      "     "   "    "   #29/WLOG
NARFROML DC    A(0)             "    "      "     "   "    "   #29/WLOG
***********************************************************    #29/WLOG
         SPACE 2                                               #29/WLOG
*/ NUMBER INSERT=YES,SEQ1=90300000,NEW1=90300010,INCR=010  END #29/WLOG
/*
