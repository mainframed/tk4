//YA332431 JOB 'EACARBONE*SH28205610*110A044    2    015  1000007   ',
// MSGCLASS=H,TIME=10,REGION=3072K,NOTIFY=YA3324,MSGLEVEL=(1,1)
//*MAIN CLASS=L
//*MAIN ORG=LOCAL
//*********************************************************************
//*********************************************************************
//*********************************  (YA3324.IMA.RECORD(DFSIDSP0))  ***
//DFSIDSP0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,
//   SYMI=SOURCESV,SYMO=SOURCESV,
//   SMEMBER=DFSIDSP0,LMEMBER=DFSIDSPH,
//   RE='RENT,REFR',
//   LOAD='PVT.MODS',
//   SOUT='*',
//   OSLIBS=AMVSXA,
//   ACCT=0
//U.SYSIN  DD  *
./  CHANGE  NAME=DFSIDSP0
         EJECT                                                      #28
*        ZDOCMOD DFSIDSP0      MOD #28J                             #28
*        ZDOCMOD DFSIDSP0      MOD #27G                             #27
./ NUMBER INSERT=YES,SEQ1=17750000,NEW1=17750010,INCR=010           #28
         SPACE 1                                                    #28
******************************************************************  #28
         SPACE 1                                                    #28
         L     R15,=A(NARIWAIT)    GET E.P. OF NARIWAIT ROUTINE.    #28
         BALR  R14,R15             GO TO IT.                        #28
         SPACE 1                                                    #28
******************************************************************  #28
         SPACE 1                                                    #28
./ NUMBER INSERT=YES,SEQ1=18090000,NEW1=18090010,INCR=010           #28
         TITLE 'DFSIDSP0 - ROCKWELL IWAIT COUNTING ROUTINE.'        #28
******************************************************************  #28
*                                                                   #28
*   THIS ROUTINE HAS BEEN ADDED BY ROCKWELL TO COUNT IWAITS FOR     #28
*   DL/I I/O ACTIVITY. THE COUNT IS KEPT IN AN EXTENDED PST THAT    #28
*   EXISTS FOR EACH REAL PST IN THE SYSTEM.                         #28
*                                                                   #28
*   CODE HAS BEEN ADDED TO COUNT OCCURANCES OF SPECIFIC PLACES      #27
*   WITHIN THE ROUTINE SO ANALYSIS OF THE COUNTS CAN BE USED FOR    #27
*   A VARIETY OF PURPOSES, SUCH AS: DETERMINING THE MAKE-UP OF THE  #27
*   IWAITS USED FOR ACCOUNTING, WHAT PERCENTAGE EACH PART IS OF THE #27
*   TOTAL, ETC.;  A BENCH MARK AT NEW RELEASE INSTALLATION TIME TO  #27
*   SEE IF THE SAME THINGS ARE COUNTED IN THE SAME WAY;             #27
*   THE COUNTS ARE KEPT IN A ROCKWELL EXTENTION TO THE SCD.         #27
*                                                                   #28
******************************************************************  #28
         SPACE 1                                                    #28
NARIWAIT DS    0H                                                   #28
         PUSH  USING                SAVE USING STATUS.              #28
         USING DSPWRK2,R5           REESTABLISH CERTAIN             #28
         USING SAP,R10                USING STATEMENTS JUST         #28
         USING SCD,R11                  TO BE SAFE.                 #28
         USING NARIWAIT,R12         SET BASE FOR THIS ROUTINE.      #28
*                                                                   #28
         STM   R14,R12,DSPWKSA2+12  SAVE REGS SO WE CAN USE 'EM.    #28
         LR    R12,R15              LOAD BASE FOR THIS ROUTINE.     #28
         LR    R9,R11               PUT A(SCD) INTO R9.             #28
         NARSCDF R9,NARSWAT0,KNOWN=SCD,FAILX=OVBMPCTR  A(IWATCTRS). #27
         ADCTRDSP 30                # TIMES ENTERED THIS ROUTINE.   #27
         L     R13,SAPIWAIT         GET SAVE AREA AT ENTRY TO IWAIT.#28
         L     R2,68(,R13)          GET CALLING MODULE'S BASE ADDR. #28
         CLM   R2,B'0111',SCDDWAIT+1  USE IT IF NOT = TO IWAIT E.P. #28
         BNE   OVBACKSA             IF = IWAIT E.P., S.A. IS B&B'S. #28
         L     R13,4(,R13)          BACK UP ONE SAVE AREA SET.      #28
         ADCTRDSP 31                # OF TIMES B&B INTERVENED.      #27
*                         ******************************************#27
         CH    R7,=H'100' * CODING THAT CAN BE ZAPPED TO FORM A    *#27
         BNH   OVBACKSA   * TRAP IN CASE B&B HAS CHANGED SOMETHING *#27
         NOPR  R0         * AND HASN'T TOLD US ABOUT IT.           *#27
*                         ******************************************#27
OVBACKSA EQU   *                                                    #28
         L     R6,24(,R13)          GET A(PST) FROM REG1 IN S.A.    #28
         LA    R6,0(,R6)            CLEAR HIGH BYTE.                #28
         LR    R15,R11              PUT A(SCD) INTO R15.            #28
*                                                                   #28
         NARSCDF R15,NARPSTSL,KNOWN=SCD,FAILX=EXITCTR               #28
*                                                                   #28
CHEKPSTA EQU   *                                                    #28
         C     R6,4(,R15)           IS THE A(PST) IN OUR LIST?      #28
         BE    GOODPSTA             YES, GOOD PST ADR. USE IT.      #28
         LA    R15,08(,R15)         BUMP TO NEXT ENTRY IN LIST.     #28
         CLI   0(R15),X'FF'         AT THE END OF THE LIST?         #28
         BE    PSTADRNG             YES, ADDRESS IS NOT TO A PST.   #28
         B     CHEKPSTA             CONTINUE VALIDATION LOOP.       #28
*                                                                   #28
PSTADRNG EQU   *                                                    #28
         ADCTRDSP 32                # OF TIMES BAD PST ADDRESS.     #27
         B     EXITCTR                                              #28
*                                                                   #28
GOODPSTA EQU   *                                                    #28
         L     R2,68(,R13)          GET CALLING MODULE'S BASE ADDR. #28
         SR    R3,R3                SET R3 TO ZERO.                 #28
         SR    R4,R4                SET R4 TO ZERO.                 #27
*                                                                   #28
         CLM   R2,B'0111',SCDOOPEN+1 OSAM OPEN INTERFACE? (DFSAOS10)#28
         BNE   NOTOPEN              NO, BRANCH.                     #28
         ADCTRDSP 01                YES, # OF AOS10 IWAITS.         #27
         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28
*                                                                   #28
NOTOPEN  EQU   *                                                    #28
*****    CLM   R2,B'0111',SCDISAM+1 ISAM SIMULATOR?       (DFSDISM0)#28
*****    BNE   NOTISAM              NO, BRANCH.                     #28
         B     NOTISAM              NO, BRANCH.                     #28
*****    ADCTRDSP 02                YES, # OF DISM0 IWAITS.         #27
*****    B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28
*                                                                   #28
NOTISAM  EQU   *                                                    #28
         TPROT 0(R2),X'70'          CAN WE ACCESS THE ADDRESS?      #28
         BNZ   NO0C4AB              NO, AVOID A S/0C4 ABEND.        #28
*                                                                   #28
         CLC    5(8,R2),=C'DFSAOS80' Q. MIGHT THIS BE THE MIDDLEMAN #28
         BNE   NOTAOS8                  NO; KEEP LOOKING.           #28
         ADCTRDSP 36                    YES; COUNT AOS80.           #28
         L     R15,4(,R13)          BACK UP ONE SAVE AREA SET.      #28
         L     R2,68(,R15)          GET CALLING MODULE'S BASE ADDR. #28
         CLC   26(7,R2),=C'FLG@DBH0' IWAIT FROM FLAGGED PARTS OF    #28
*                                    THE BUFFER HANDLER?  (DFSDBH00)#28
         BNE   NOT8DBH              NO, BRANCH.                     #28
         ADCTRDSP 37                    YES; DBH- VIA AOS80         #28
         B     OBUFHAND             GO MAKE FURTHER TESTS.          #28
NOT8DBH  EQU   *                                                    #28
         CLM   R2,B'0111',SCDOOPEN+1 OSAM OPEN INTERFACE? (DFSAOS10)#28
         BNE   NOT8AOS1             NO, BRANCH.                     #28
         ADCTRDSP 38                    YES; AOS10 VIA AOS80        #28
         B     OBUFHAND             GO MAKE FURTHER TESTS.          #28
*                                                                   #28
NOTAOS8  EQU   *                                                    #28
         CLC   26(7,R2),=C'FLG@DBH0' IWAIT FROM FLAGGED PARTS OF    #28
*                                    THE BUFFER HANDLER?  (DFSDBH00)#28
         BNE   NOTDBH               NO, BRANCH.                     #28
         ADCTRDSP 03                YES, # OF DBH00 IWAITS.         #27
         B     OBUFHAND             GO MAKE FURTHER TESTS.          #28
*                                                                   #28
NO0C4AB  EQU   *                                                    #28
         ADCTRDSP 35                # TIMES AVOIDED S/0C4 ABEND.    #27
*                                                                   #28
NOT8AOS1 EQU   *                                                    #28
NOTDBH   EQU   *                                                    #28
NOTOBUF  EQU   *                                                    #28
         ADCTRDSP 33                # OF TIMES NOTHING WE WANTED.   #27
         B     EXITCTR              NOTHING WE WANT. SKIP ON OUT.   #28
         SPACE 1                                                    #28
OBUFHAND EQU   *                                                    #28
         L     R3,PSTBUFFA-PST(,R6) GET ADDR OF BUFFER PREFIX.      #28
         LA    R3,0(,R3)            CLEAR HI-BYTE.                  #28
         LTR   R3,R3                IS ADDRESS ZERO?                #28
         BNZ   RDORWRT              IF NOT ZERO, A READ OR WRITE.   #28
*                                                                   #28
         ADCTRDSP 04                # OF RELEASE OWNERSHIPS.        #27
         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28
*                                                                   #28
RDORWRT  EQU   *                                                    #28
         ADCTRDSP 05                # OF READS AND WRITES.          #27
         L     R3,IBFALTR-IBFPRF(,R3)    GET BQEL PREFIX ANCHOR.    #28
         LTR   R3,R3                IS IT ZERO?                     #28
         BNZ   PSTWRTS              IF NOT 0, BUF HAS BEEN ALTERED. #28
*                                     BUMP THE IWAIT COUNTER OF     #28
*                                     THOSE PST'S THAT HAVE         #28
*                                     MODIFIED THE BUFFER.          #28
*                                   IF ZERO, IWAIT IS FOR A READ.   #28
*                                     BUMP THE IWAIT COUNTER OF     #28
*                                     THE PST WE ALREADY HAVE THE   #28
*                                     ADDRESS OF.                   #28
         ADCTRDSP 06                # OF IWAITS FOR A READ.         #27
         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28
*                                                                   #28
PSTWRTS  EQU   *                                                    #28
         ADCTRDSP 07                # OF IWAITS FOR A WRITE.        #27
         USING DFSBQEL,R3                                           #28
*                                                                   #28
PSTLOOP  EQU   *                                                    #28
         LA    R3,0(,R3)            CLEAR HI BYTE.                  #28
         LTR   R3,R3                LAST BQEL ON BUFFER CHAIN?      #28
         BZ    NAR8IWT              YES.                            #28
         L     R6,BQELPSTA          GET A(PST) THAT ALTERED BUFFER. #28
         LA    R4,1(,R4)            KEEP COUNT OF TRIPS THRU HERE.  #27
         B     BUMPCTR              GO BUMP ACCTNG IWAIT COUNTER.   #28
*                                                                   #28
NEXTPST  EQU   *                                                    #28
         L     R3,BQELNBUF          NEXT BQEL ON BUFFER CHAIN.      #28
         B     PSTLOOP              CHECK NEXT.                     #28
*                                                                   #28
BUMPCTR  EQU   *                                                    #28
         LR    R15,R6               PUT A(PST) IN R15.              #28
*                                                                   #28
         NARPSTF R15,FAILX=PSTADRNG FIND OUR EXTENDED PST.          #28
*                                                                   #28
         L     R15,NARPSTJ0-NARPST#0(,R15)  POINT TO ACCTNG AREA.   #28
         USING NARPSTK0,R15                                         #28
         LA    R7,1                 BUMP COUNT OF I/O               #28
         A     R7,NARPIWT0             IWAIT'S CAUSED BY            #28
         ST    R7,NARPIWT0                THIS PST.                 #28
*                                                                   #28
         ADCTRDSP 09                # TIMES IDSP0 BUMPED NARPIWT0.  #27
         LTR   R3,R3                IF R3 IS ZERO, ALL PST'S        #28
         BZ    EXITCTR                HAVE BEEN CONSIDERED.         #28
         B     NEXTPST              ELSE, GO CHK FOR ANOTHER PST.   #28
*                                                                   #28
NAR8IWT  EQU   *                                                    #28
         LA    R7,1                 DID MORE THAN ONE PST           #27
         CR    R4,R7                  MODIFY THE SAME DL/I BUFFER?  #27
         BNH   EXITCTR              NO, BRANCH.                     #27
         ADCTRDSP 08                # TIMES > 1 PST MODED SAME BUF. #27
*                                                                   #28
EXITCTR  EQU   *                                                    #28
         ADCTRDSP 34                # TIMES WE LEFT THIS ROUTINE.   #27
*                                                                   #28
OVBMPCTR EQU   *                                                    #28
         LM    R14,R12,DSPWKSA2+12  RESTORE REGS.                   #28
         LA    R13,DSPWKSA1         RESTORE REG 13                  #28
         BR    R14                  RETURN TO MAINLINE CODE.        #28
         POP   USING                RESTORE PRIOR USING STATUS.     #28
******************************************************************  #28
         LTORG ,                                                    #28
******************************************************************  #28
         EJECT                                                      #28
         DFSBQEL                                                    #28
         EJECT                                                      #28
         IBFPRF                                                     #28
         EJECT                                                      #28
         NARSCD                                                     #28
         SPACE 1                                                    #28
/*
