//AIMS31FA JOB 'IMSGROUP  SH28205610*110A044         999  3000009037',
//  NOTIFY=$A1016,
//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H
//*MAIN ORG=LOCAL,CLASS=L
//IMRUTRN6 EXEC IMSUPDTE,DISPR=SHR,
//  MEMBER=IMRUTRN6,
//             P=IMA,LOAD='PVT.MODS',
// AUXLIB='IMS.VBNB260.TARGET.SAMPLIB',
//* CONDL=0,
//* XREFC='XREF(FULL)',
//  SYMI=SOURCETM,SYMO=SOURCETM,ACCT=1,SOUT='*'
//C.SYSIN  DD *    SEE IMS.VBNB260.TARGET.SAMPLIB(IMRUTRN6)
         TITLE 'IMRUTRN6        - IMF COMMON TRANS.  RECORD EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*          ======>>         I M F             <<======                *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*   TITLE:        TRANSACTION RECORD USER EXIT                        *
*   MODULE NAME:  IMRUTRN6                                            *
*   ENTRY POINTS: IMRUTRN6                                            *
*   FUNCTION:                                                         *
*        - THIS PROGRAM IS A SKELETON FOR USER TO BUILD ON.           *
*          IT IS MAINLY FOR IMF 220/IMS 1.3 AND UP.                   *
*        - THIS ROUTINE RECEIVES CONTROL FROM IMF/EC JUST BEFORE      *
*          IT WRITES THE TRAN RECORD (X'FA').                         *
*        - NORMALLY THIS IS ONCE PER SYNC POINT (MGU), AND PGM        *
*          TERM (TERM THREAD).                                        *
*          FOR BMP, WITH TRNSYNC=YES, ADD ONCE PER 'CHKP' CALL.       *
*        - USER MAY EVALUATE AND CHANGE TRAN RECORD.                  *
*        - A USER FIELD "TRNUSER" OF 16 BYTES IS PROVIDED IN          *
*          EACH TRAN RECORD.  IT IS CLEARED AFTER LOGGED.             *
*        - WHEN RETURNING CONTROL TO IMF/EC, R15 MUST BE ZERO.        *
*          IF NOT, THE TRAN RECORD WILL NOT BE LOGGED.                *
*        - THIS PROGRAM MUST BE LOGICALLY RE-ENTRANT.                 *
*        - FOR IMF 220 AND LATER, IMS 1.3 AND LATER, THIS             *
*          PROGRAM ALWAYS RECEIVE CONTROL IN IMS CONTROL REGION.      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*   ==>  IN ORDER TO ACTIVATE THIS USER EXIT, ASSEMBLE AND LINK THE   *
*        USER WRITTEN EXIT AS FOLLOWS:                                *
*                                                                     *
*      - FOR IMS/VS 1.3 USER, NAME IMRUTRN3 WITH ENTRY POINT IMRUTRN3 *
*      - FOR IMS/VS 2.1 USER, NAME IMRUTRN4 WITH ENTRY POINT IMRUTRN4 *
*      - FOR IMS/VS 2.2 USER, NAME IMRUTRN5 WITH ENTRY POINT IMRUTRN5 *
*      - FOR IMS/VS 3.1 USER, NAME IMRUTRN6 WITH ENTRY POINT IMRUTRN6 *
*                                                                     *
*      - AND COPY IT INTO THE IMS AUTHORIZED LIBRARY                  *
*        (CONTROL REGION STEPLIB)                                     *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*   REGISTERS AT ENTRY:                                               *
*            R5 -  PST ADDRESS - REF IMS/VS DSECT IPST                *
*            R7 -  TRN ADDRESS - REF IMF DSECT IMETRN                 *
*            R11-  SCD ADDRESS - REF IMS/VS DSECT ISCD                *
*            R13 - SAVE AREA ADDRESS                                  *
*            R14 - RETURN POINT ADDRESS                               *
*            R15 - ENTRY POINT ADDRESS                                *
*                                                                     *
*   REGISTERS AT EXIT:                                                *
*            ALL REGISTERS RESTORED EXCEPT R15                        *
*            R15 - RETURN CODE                                        *
*                  00  ... RECORD ACCEPTED, WRITE TO LOG              *
*                  04  ... RECORD REJECTED, DO NOT WRITE TO LOG       *
*                                                                     *
*   MODULE CALLED BY:                                                 *
*            IMELTRN3                                                 *
*                                                                     *
*   EXTERNAL ROUTINES CALLED:                                         *
*            NONE                                                     *
*                                                                     *
*   MESSAGES:                                                         *
*            NONE                                                     *
*                                                                     *
*   ABENDS:                                                           *
*            NONE                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
IMRUTRN6 CSECT ,
         CHANGEID NAME=IMRUTRN6-&SYSDATE,BASE=R12
         CHANGEID IDEND=YES
*
         USING PST,R5
         USING TRN,R7
         USING SCD,R11
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*        MAINLINE LOGIC                                               *
*                                                                     *
*---------------------------------------------------------------------*
MAIN100  DS    0H
*
*
* USER CODE HERE.  EXECUTE IN CONTROL REGION.
*
*
B#P      EQU   R2
         LA    B#P,PST
*******************************************************************
*
*   COPY  "SETC" DATA, IWAIT COUNTS, TO  X'FA' LOG REC.
*
*               (THIS IS AN APE OF THE SALIENT PARTS OF SIMILAR CODE )
*               (FROM THE LOCAL MODS TO  DFSSABN0.                   )
*
*
         NARPSTF B#P,FAILX=OVSETC  FIND OUR EXTENDED PST.
         L     B#P,NARPSTJ0-NARPST#0(,B#P) POINT TO ACCTNG AREA.
         USING NARPSTK0,B#P
         MVC   TRNUSER(12),NARPCHG0 MOVE "SETC" DATA TO LOG RECORD.
*&%$#    MVC   RIXTRAX,NARPCHI0    MOVE  SOURCE I.D. TO RECORD.
         MVC   TRNUSER+11(1),NARPCHI0    SOURCE I.D. TO RECORD.
         OI    TRNUSER+11,X'02'          ENSURE NON-ZERO. NON-BLANK.
*&%$#    MVC   RIXTRAY,NARPCHF0    MOVE  SOURCE FLAGS.
*&%$#    MVC   RIXTRA5,NARPIWT0    MOVE "IWAIT COUNTS" TO RECORD.
*&%$#    MVC   TRNUSER+12(4),NARPIWT0   "IWAIT COUNTS" TO RECORD.
         L     R0,NARPIWT0       "IWAIT COUNTS" FOR THIS SCHED.
         S     R0,NARPIWX0+0*4              -   FOR PRIOR TRAN(S)
         ST    R0,TRNOSPAC                   =  FOR THIS TRAN TO X'FA'
         MVC   NARPIWX0+0*4(4),NARPIWT0    PRIOR TRANS <== THIS SCHED
*
         L     R0,PSTMGU         "MSGGU COUNTS" FOR THIS SCHED.
         S     R0,NARPIWX0+1*4              -   FOR PRIOR TRAN(S)
         ST    R0,TRNATCHR                   =  FOR THIS TRAN TO X'FA'
         MVC   NARPIWX0+1*4(4),PSTMGU      PRIOR TRANS <== THIS SCHED
*
         L     R0,PSTMGN         "MSGGN COUNTS" FOR THIS SCHED.
         S     R0,NARPIWX0+2*4              -   FOR PRIOR TRAN(S)
         ST    R0,TRNALCHR                   =  FOR THIS TRAN TO X'FA'
         MVC   NARPIWX0+2*4(4),PSTMGN      PRIOR TRANS <== THIS SCHED
*
         L     R0,PSTMGU        "MSCALL COUNTS" FOR THIS SCHED.
         A     R0,PSTMGN
         A     R0,PSTMISRT
         A     R0,PSTMPURG
         LR    R3,R0                            FOR THIS SCHED.
         S     R0,NARPIWX0+3*4              -   FOR PRIOR TRAN(S)
         ST    R0,TRNIMCHR                   =  FOR THIS TRAN TO X'FA'
         ST    R3,NARPIWX0+3*4             PRIOR TRANS <== THIS SCHED
*
         L     R0,PSTCLCNT      "DBCALL COUNTS" FOR THIS SCHED.
         LR    R4,0                             FOR THIS SCHED.
         S     R0,NARPIWX0+4*4              -   FOR PRIOR TRAN(S)
         ST    R0,TRNISPAC                   =  FOR THIS TRAN TO X'FA'
         ST    R4,NARPIWX0+4*4             PRIOR TRANS <== THIS SCHED
*
         LR    R3,R3           "ALLCALL COUNTS" FOR THIS SCHED: MSG.
         AR    R3,R4                            FOR THIS SCHED: DB.
         LR    R0,R3                            FOR THIS SCHED: ALL.
         S     R0,NARPIWX0+5*4              -   FOR PRIOR TRAN(S)
         ST    R0,TRNOMCHR                   =  FOR THIS TRAN TO X'FA'
         ST    R3,NARPIWX0+5*4             PRIOR TRANS <== THIS SCHED
*
OVSETC   EQU   *
         B     EXIT000
         EJECT ,
*---------------------------------------------------------------------*
*        EXIT                                                         *
*---------------------------------------------------------------------*
EXIT000  DS    0H
         LA    R15,0               ACCEPT RECORD
         B     EXIT900              AND RETURN
*
EXIT004  DS    0H
         LA    R15,4               REJECT RECORD
*
EXIT900  DS    0H
         LEAVE LINKAGE=IMS,RC=(15),RESTORE=(14,,2,12)
         EJECT ,
         LTORG ,
         DC    CL8'---PATCH'
PATCH    DC    16F'0'              PATCH AREA
         PRINT   GEN
         REQUATE SAVE=YES
**********************************************************************
  TITLE 'IMRUTRN6 --- D-S-E-C-T-S'
**********************************************************************
         PRINT   GEN
         IMETRN ,
         PRINT NOGEN
         ISCD  ,
         IPST  ,
         ISAP  ,
         IEPF  ,
         IDSPWRK ,
**********************
         PRINT   GEN
         NARPST
         NARCPY
         PRINT NOGEN
         NARSCD  PST=NO
         END
//L.IMSLOAD DD DISP=SHR,DSN=IMS.LOAD
