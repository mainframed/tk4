//AIMS31MP JOB 'IMSGROUP  SH28205610*110A044         999  3000007037',
//  REGION=999K,TIME=5,MSGLEVEL=1,MSGCLASS=H,NOTIFY=$A1016
//*MAIN ORG=LOCAL,CLASS=L5
//UPDTE EXEC IMSUPDTE,P=IMA,MEMBER=NARPRM,DISPR=SHR,
//    SYMI=GENLIB,SYMO=MACLIB,USYSUT2=PERM,
//    SOUT='*',CONDL=0
//SYSIN  DD *
./ ADD NAME=NARPRM
         MACRO
&N       NARPRM  &SECT=DSECT,&P=N,&L=1536
         GBLC  &NARGBPS
&NARGBPS SETC  '&SECT'
         NARSEPAR
&N       DC    0D'0'
&P.ARPRM00 DC  ((&L-8)/8)D'0'
         DC    2F'-1'
           ORG  &P.ARPRM00
&P.ARP     DC  2A(0)
&P.ARPSCDN DC   A(0)           NAR          SCD PTR.
&P.ARPPSTN DC   A(0)           NAR          PST PTR.
&P.ARPPXPM DC   A(0)           ORIGINAL IBM PXP PTR.
&P.ARPCMP  DC   A(0)           COMP CODE.
&P.ARPSCDI DC   A(0)           ORIGINAL IBM SCD PTR.
&P.ARPPSTI DC   A(0)           ORIGINAL IBM PST PTR.
&P.ARPCC2P DC   A(&P.ARPCC2D)  PTR TO DATA FOR PCC20.
&P.ARPSTAE DC   A(&P.ARPSUAE)  PTR TO DATA FOR STAE PROCESSING.
           DC   A(0)
&P.ARPTIMP DC   A(&P.ARPTIMS)  PTR TO DATA FOR TIMING.
           DC  7A(0)
&P.ARPSSNM DC   CL4' '         THIS SUBSYSTEM NAME.
&P.ARPPCPY DC   A(0)
           DC  3A(0)
&P.ARPMOVS DC  A(&P.ARPMOV1)
&P.ARPMOP2 DC  A(&P.ARPART2)
&P.ARPMOP3 DC  A(&P.ARPART3)
&P.ARPMOP4 DC  A(&P.ARPART4)
           DC  16A(0)         FREE SPACE.
&P.ARPSAV1 DC  24A(0)          S/A USED IN PCC20
&P.ARPSAV2 DC  24A(0)          S/A USED IN PCC20
&P.ARPSAV3 DC  24A(0)
&P.ARPSAV4 DC  24A(0)
&P.ARPSAV9 DC  XL128'0'
*****************************************
*** STUFF FOR PCC20
         NARSEPAR
&P.ARPCC2D DC   00D'0'
           DC   10D'0'
&P.ARPCBLT DC  D'0'
&P.ARPCBLC DC  PL4'0'
           DC  A(0)
           DC  24A(0)
*****************
**  MEMORY CLEARNESS DATA.
           DC  A(0)
&P.ARPCTCB DC  A(0)
           DC  A(0)
&P.ARPCTOP DC  A(0)
*        ******
           DC  A(0)
&P.ARPCWHO DC  CL8' '
&P.ARPCWHR DC  A(0)
*        ******
&P.ARPCWHC DC  CL8' '
*        ***
&P.ARPCBOT DC  A(X'FEDCBA')
&P.ARPCFFB DC  4A(0)
&P.ARPCLFB DC  4A(0)
*        ***
&P.ARPCMMX DC 0D'0'
           DC  A(X'10')
           DC  X'007FFFFF'
&P.ARPCMCH DC  D'0'
*****************
**  COUNTERS BY THE BUNCH.
&P.ARPCTY1 DC PL4'0'
&P.ARPCBLD DC PL4'0'
&P.ARPCLDE DC PL4'0'
&P.ARPCOR1 DC PL4'0'
&P.ARPCOR2 DC PL4'0'
&P.ARPCLNK DC PL4'0'
&P.ARPCSNG DC PL4'0'
*****************************************
*    TIMING DATA --- DELTA STCK TYPE STUFF.
         NARSEPAR
&P.ARPTIMS DC    0D'0',Y(0)
&P.ARPTIMA DC    XL8'0'
&P.ARPTIMD DC    XL8'0'
&P.ARPTIMN DC    XL8'0'
&P.ARPTIMT DC    XL8'0'
&P.ARPTIMZ DC    XL8'0'
&P.ARPTIM1 DC    F'0'              16 USEC TU.
&P.ARPTIM2 DC    F'0'              26 USEC TU.
           DC    Y(0)
&P.ARPTIMJ DC    XL8'0'
&P.ARPTIMK DC    XL8'0'
&P.ARPTIM# EQU   *
*****************************************
*** MOVE INSTR & ADDR.
         NARSEPAR
&P.ARPMOV1 DC   A(0),A(&P.ARP)     CTL(R14),MSG(R15)
         MVC   0(0,R14),0(R15)     CTL  <--  MSG           1
&P.ARPMOV2 DC   A(0),A(&P.ARPART2) CTL(R14),MSG(R15)
         MVC   0(0,R14),0(R15)     CTL  <--  MSG           2
&P.ARPMOV3 DC   A(0),A(&P.ARPART3) CTL(R14),MSG(R15)
         MVC   0(0,R15),0(R14)     MSG  <--  CTL
&P.ARPMOV4 DC   A(0),A(&P.ARPART4) CTL(R14),MSG(R15)  CTL(R15),MSG(R14)
         MVC   0(0,R15),0(R14)     MSG  <--  CTL      CTL  <--  MSG
         CNOP  0,4
*****************************
*     MOVE AREAS.
         NARSEPAR
&P.ARPART2 DC  CL100'0'
         NARSEPAR
&P.ARPART3 DC  CL100'0'
         NARSEPAR
&P.ARPART4 DC  CL100'0'
         AIF   ('&SECT' EQ 'DSECT').OVLTST
&P.ARPRMZZ ORG
&P.ARPRMZL EQU &L-(&P.ARPRMZZ-&P.ARPRM00)    AMOUNT LEFT BEFORE ERROR.
&P.ARPRMZX DC  0XL(&P.ARPRMZL)'0'            IF NEGATIVE THEN   ERROR.
.OVLTST  ANOP
*****************************************
***  STAE EXIT DATA.
         NARSEPAR
&P.ARPSUAE DC  0D'0'
&P.ARPSROT DC  A(0)
&P.ARPSLTR DC  A(0)
&P.ARPSTA1 DC  A(0)
&P.ARPSTA2 DC  A(0)
           DC 4A(0)
&P.ARPSLGT EQU  *-&P.ARPSUAE
&P.ARPSPFX EQU  &P.ARPSUAE,&P.ARPSLGT
&P.ARPSAVE DC  18F'0'
&P.ARPSPLG EQU 256
&P.ARPSPIN DC  XL(&P.ARPSPLG)'0'
         MEND
