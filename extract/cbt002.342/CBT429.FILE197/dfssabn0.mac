//AIMS31AB JOB 'IMSGROUP  SH28205610*110A044         015  1001007037',
//  MSGLEVEL=1,MSGCLASS=H,
//  REGION=1024K,TIME=010,
//  NOTIFY=$A1016
//*MAIN ORG=LOCAL,CLASS=L
//*********************************  (       IMA.RECORD(DFSSABN0))  ***
//DFSSABN0 EXEC IMSUPDTE,P=IMA,DISPR=SHR,
//   SYMI=SOURCESV,SYMO=SOURCESV,
//   SMEMBER=DFSSABN0,LMEMBER=DFSSABNH,
//   RE='RENT,REFR',
//** CONDL=0,
//   LOAD='PVT.MODS',
//   SOUT='*',
//   LINEC=54,
//   OSLIBS=AMVSXA,
//   ACCT=0
//U.SYSIN  DD  * RW0001A, 28L, 33A, 151B
./    CHANGE   NAME=DFSSABN0
         XC    RIXC,RIXC           CLEAR THE RIXTRA AREA.           #28
         MVC   RIXTRA4+2(2),PDIRCODE    COPY PDIR STATS/FLAG/CODE.  #28
         MVC   RIXTRA4+0(2),SMBSTATS    COPY SMB  STATS/FLAG/CODE.  #28
./ NUMBER INSERT=YES,SEQ1=01029400,NEW1=01029455,INCR=001 01029400 ---
*/ NUMBER INSERT=YES,SEQ1=01029400,NEW1=01029455,INCR=001          BGN
         SPACE 3
****************************************
* CODE ADDED BY NAR TO PROCESS THE BULK OF THE LOCAL MODS.
*
         BREAKOUT NARSABNA
*
***************************************
 SPACE 3
*/ NUMBER INSERT=YES,SEQ1=01029400,NEW1=01029455,INCR=001          END
./ NUMBER INSERT=YES,SEQ1=02500000,NEW1=02500100,INCR=0100  02500000
 TITLE ' ROCKWELL LOCAL MODIFICATIONS                                 '
*/ NUMBER INSERT=YES,SEQ1=02500000,NEW1=02500100,INCR=0100   BGN
         SPACE 3
         LTORG
*******************************************************************
*******************************************************************
******                             ********************************
******   ROCKWELL MODS FOLLOW      ********************************
******                             ********************************
*******************************************************************
*******************************************************************
         SPACE 3
*******************************************************************
         CEQUATE
         PRINT GEN
         BREAKOUT *CSECT
NARSABNA #
         EJECT
*PDIRBASE EQU   R3
*SMBBASE  EQU   R4
*PSTBASE  EQU   R9
*LOG7BASE EQU   R10
*SCDBASE  EQU   R11
ABTERM   EQU   DLRINT+DLRLOG+DLRAB
         USING     PDIR,R3
         USING      SMB,R4
         USING      PST,R9
         USING DTRMPOOL,R10
         USING      SCD,R11
         SPACE 2
         STCK  RISTCKST            STO TOD NOW.
         SPACE 2
*******************************************************************  #1
*                                                                    #1
*   CHANGE THE CLASS OF A TRANSACTION FROM CLASS=1 TO CLASS=2 IF     #1
*   THE RATIO OF DATABASE DL/I CALLS PLUS MSG Q CALLS PER ONE        #1
*   MESSAGE GU EXCEEDS 40.  THE VALUE OF 40 WAS CHOSEN SOMEWHAT      #1
*   ARBITRARILY AND COULD BE CHANGED IF IT BECOMES NECESSARY.        #1
*                                                                    #1
         TM    PSTTERM,PSTMSG      IS THIS AN ON-LINE MSG REGION?    #1
         BZ    DONTDOIT            NO, DON'T CHANGE CLASS            #1
         TM    PDIRCODE,PDIRTYP1   IS THE PROGRAM A TYPE 1?          #1
         BZ    DONTDOIT            NO, CUT OUT                       #1
         CLI   PDIRSYM,C'I'        DOES PROG NAME BEGIN WITH 'I'?    #1
         BE    DONTDOIT            YES, DON'T CHANGE CLASS           #1
         CLC   =AL3(0),PSTSMB+1    IS THERE AN SMB POINTER?          #1
         BE    DONTDOIT            NO, CUT OUT                       #1
         L     R15,PSTSMB          GET THE SMB POINTER               #1
         CLI   SMBCLASS-SMB(R15),1 HAVE WE CHANGED CLASS ALREADY?    #1
         BNE   DONTDOIT            YES, CUT OUT                      #1
         TM    SMBFLAG1-SMB(R15),SMBENQ  IS THE TRAN ENQUEUED NOW?   #1
         BO    DONTDOIT            YES, CUT OUT. WE'LL GET HIM LATER.#1
         CLC   =F'0',PSTMGU        HAS A 'GU' BEEN ISSUED?           #1
         BE    DONTDOIT            NO, CUT OUT                       #1
         SR    R14,R14             CLEAR WORK REGISTER               #1
         L     R15,PSTDGU          GET DATABASE 'GU' COUNT           #1
         A     R15,PSTDGN          ADD    "     'GN'   "             #1
         A     R15,PSTDGNP          "     "     'GNP'  "             #1
         A     R15,PSTDGHU          "     "     'GHU'  "             #1
         A     R15,PSTDGHN          "     "     'GHN'  "             #1
         A     R15,PSTDGHNP         "     "     'GHNP' "             #1
         A     R15,PSTDISRT         "     "     'ISRT' "             #1
         A     R15,PSTDDLET         "     "     'DLET' "             #1
         A     R15,PSTDREPL         "     "     'REPL' "             #1
         A     R15,PSTMGU           "  MESSAGE  'GU'   "             #1
         A     R15,PSTMGN           "     "     'GN'   "             #1
         A     R15,PSTMISRT         "     "     'ISRT' "             #1
         D     R14,PSTMGU          DIVIDE BY COUNT OF MSG 'GU'S      #1
         C     R15,=F'40'          COMPARE WITH HARD CODED CONSTANT  #1
         BL    DONTDOIT            IF LESS THAN CONSTANT, CUT OUT    #1
         L     R15,PSTSMB          ELSE, GET A(SMB) AND              #1
         MVI   SMBCLASS-SMB(R15),2    CHANGE ITS CLASS TO '2'        #1
DONTDOIT EQU   *                                                     #1
*******************************************************************  #1
         SPACE 3
******************************************************************* #28
*                                                                   #28
*   COPY  "SETC" DATA, IWAIT COUNTS, AND MACHINE I.D. TO LOG REC.   #28
*                                                                   #28
         LR    R15,R9              PUT A(PST) IN R15.               #28
         NARPSTF R15,FAILX=OVSETC  FIND OUR EXTENDED PST.           #28
         L     R15,NARPSTJ0-NARPST#0(,R15) POINT TO ACCTNG AREA.    #28
         USING NARPSTK0,R15                                         #28
         MVC   RIXTRA1(12),NARPCHG0 MOVE "SETC" DATA TO LOG RECORD. #28
         MVC   RIXTRA5,NARPIWT0    MOVE "IWAIT COUNTS" TO RECORD.   #28
         L     R2,16               GET A(CVT).                      #28
         L     R2,196(,R2)         GET A(SMCA).                     #28
         MVC   RIXTRA6,16(R2)      MOVE MACHINE I.D. TO RECORD.     #28
         MVC   RIXTRAX,NARPCHI0    MOVE  SOURCE I.D. TO RECORD.     #28
         MVC   RIXTRAY,NARPCHF0    MOVE  SOURCE FLAGS.              #28
*                                                                   #28
         XC    NARPCHG0(12),NARPCHG0   SET "SETC" AREA TO ZEROS.    #28
         XC    NARPCHI0,NARPCHI0   SET SOURCE I.D. TO ZEROS.        #28
         XC    NARPCHF0,NARPCHF0   SET SOURCE FLAG TO ZEROS.        #28
OVSETC   EQU   *                                                    #28
******************************************************************* #28
         SPACE 3
****************************************************************** #151
*   ADD  IBM'S PST STATS  INTO  NAR'S XPST STATS.                  #151
P#X      EQU   R14                                                 #151
R#P      EQU   R15                                                 #151
R#W      EQU   R2                                                  #151
         LR    P#X,R9              A(PST) TO R(P#X)                #151
         NARPSTF P#X,FAILX=OVSTAT  PTR TO THE NAR PARALLEL PST.    #151
         USING NARPST#0,P#X                                        #151
         L     P#X,NARPSTY0                                        #151
         USING     NARPSTX0,P#X                                    #151
         L     R#W,NARPSTI0        BUMP                            #151
         A     R#W,NARPIWT0          NBR OF                        #151
         ST    R#W,NARPSTI0            I/O IWAITS.                 #151
         XC    NARPIWT0,NARPIWT0   SET IWAIT COUNTER TO ZEROS.     #151
         DROP  R15                                                 #151
         L     R#W,NARPSTL0        BUMP                            #151
         A     R#W,=A(1)             NBR                           #151
         ST    R#W,NARPSTL0            OF LOADS.                   #151
         L     R#W,NARPSTM0        BUMP                            #151
         AH    R#W,PSTDQCNT          NBR                           #151
         ST    R#W,NARPSTM0            OF MESSAGES.                #151
         LA    R#P,0                                               #151
LOOPSTX  LA    R#P,4(R#P)                                          #151
         L     R#W,PSTACCT-04(R#P)                                 #151
         A     R#W,NARPSTN0-4(R#P)                                 #151
         LPR   R#W,R#W                                             #151
         ST    R#W,NARPSTN0-4(R#P)                                 #151
         C     R#P,NARPSTX0                                        #151
         BL    LOOPSTX                                             #151
         DROP  P#X                                                 #151
OVSTAT   EQU   *                                                   #151
****************************************************************** #151
         SPACE 3
******************************************************************* #33
*                                                                   #33
*   THIS CODE WILL SET ALL TP-PST'S TO MAXCLASS WHEN ONE OF THE     #33
*   MESSAGE REGIONS IS GOING TO BE ABENDED WITH A USER 775.         #33
*   THOSE PST'S THAT DO NOT GET CHANGED ARE TP-PST'S THAT HAVE      #33
*   A CLASS OF 3 OR 9, ALL BMP-PST'S, AND ALL INACTIVE PST'S.       #33
*   THIS ACTION WILL PREVENT THE ONLINE NUCLEUS FROM EVENTUALLY     #33
*   ABENDING AND ALLOW THE SITUATION TO BE CLEARED UP GRACEFULLY.   #33
*   THE MASTER TERMINAL OPERATOR MUST RESET THE REGION CLASSES TO   #33
*   ALLOW IMS TO CONTINUE NORMAL PROCESSING.                        #33
*                                                                   #33
         LR    R15,R11             PUT A(SCD) IN R15.               #33
*                                                                   #33
         NARSCDF R15,NARSCFB0,KNOWN=SCD,FAILX=OVNAR775              #33
*                                                                   #33
         TM    026*8(R15),X'80'   Q. FEAT #26 ON?                   #33
         BZ    OVNAR775             NO, SKIP ALL THIS.              #33
*                                                                   #33
         TM    DLRFLAG2,ABTERM    Q. DID PROG ABEND?                #33
         BZ    OVNAR775             NO, SKIP ALL THIS.              #33
         CLC   =H'775',DLRCOMP+2    YES; Q. WITH USER CODE 775?     #33
         BNE   OVNAR775                    NO. STILL SKIP.          #33
*                                                                   #33
         PUSH  USING               SAVE USING STATUS.               #33
         USING PST,R14             TELL THE ASSEMBLER.              #33
         SR    R2,R2               CLEAR R2.                        #33
         ICM   R2,B'1000',SCDTCTN+1   SET MAXCLASS IN R2.           #33
         LR    R15,R11             PUT A(SCD) IN R15.               #33
*                                                                   #33
         NARSCDF R15,NARPSTSL,KNOWN=SCD,FAILX=OVNAR775              #33
*                                                                   #33
LOOPPST  EQU   *                                                    #33
         L     R14,4(,R15)         GET A(PST) FROM OUR TABLE.       #33
         LTR   R14,R14             IS THIS AN ACTIVE PST?           #33
         BZ    PSTNEXT             NO, GO LOOK FOR ANOTHER PST.     #33
         CLI   PSTCLASS,3          IS PST = CLASS 3 ?               #33
         BE    PSTNEXT             YES, IGNORE (SYSTEMS PST).       #33
         CLI   PSTCLASS,9          IS PST = CLASS 9 ?               #33
         BE    PSTNEXT             YES, IGNORE (ANOTHER SYSTEMS PST)#33
         TM    PSTTERM,PSTMSG      IS PST AN ONLINE MSG TYPE ?      #33
         BNO   PSTNEXT             NO, IGNORE (NO BMP'S).           #33
         ST    R2,PSTCLASS         SET PST TO MAXCLASS.             #33
PSTNEXT  EQU   *                                                    #33
         LA    R15,08(,R15)        BUMP TO NEXT TABLE POSITION.     #33
         CLI   0(R15),X'FF'        AT END OF TABLE?                 #33
         BNE   LOOPPST             NO, CONTINUE PST LOOP.           #33
         POP   USING               RESTORE OLD USING STATUS.        #33
OVNAR775 EQU *                                                      #33
*                                                                   #33
*******************************************************************
         SPACE 3
         B     NARSABN$
*******************************************************************
         EJECT
*******************************************************************
         LTORG
*******************************************************************
         PRINT NOGEN
         NARSCD
         SPACE 2
*/ NUMBER INSERT=YES,SEQ1=02500000,NEW1=02500100,INCR=0100   END
         SPACE 2
/*
