         TITLE 'JULIAN/GREGOR CONVERSION ROUTINES'
*        *         *         *         *         *         *          *
* THIS ROUTINE CONVERTS A SIX CHARACTER ALPHAMERIC GREGORIAN DATE OF  *
* THE FORM 'YYMMDD' TO A THREE BYTE PACKED DECIMAL FIELD OF THE FORM  *
* YYDDDC, IF A JULIAN DATE IS DESIRED. THE JULIAN DATE IS C SIGNED.   *
* EXAMPLE:                                                            *
*                                                                     *
*     R1 ==> A(GDATE)==>GDATE    DS    CL6                            *
*            A(JDATE)==>JDATE    DS    F                              *
*                                                                     *
*  ON ENTRY R1......> ×>GREGDATE×>JULDATE ×                           *
*                         P1        P2                                *
*                                                                     *
* HOWARD M. DEAN                                                      *
* SYNTEX U.S.A.                                                       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
JULGRE   CSECT
         ENTRY JULIAN,GREGOR
JULIAN   SAVE  (14,12)
         BALR  10,0
         USING *,10
         USING DSA,13                   TELL ASSEMBLER      *HMD 03/85*
         LR    2,1                      SAVE PARMS          *HMD 03/85*
         GETMAIN R,LV=STORLEN           GET DYNAMIC STORAGE *HMD 03/85*
         MVC   0(STORLEN,1),BEGOSTOR    INITIALIZE DYNAMIC  *HMD 03/85*
         ST    13,4(1)                  SAVE REGISTERS      *HMD 03/85*
         ST    1,8(13)                   CHAIN BACK         *HMD 03/85*
         LR    13,1                     ADDRESS DYNASTOR    *HMD 03/85*
         LR    3,2                      RETORE PARM REG     *HMD 03/85*
         ZAP   JULDATE,=P'0'
         ZAP   YEAR,=P'0'               INITIALIZE <YEAR>
         ZAP   DAYS,=P'0'               INITIALIZE JULIAN DAYS
         ZAP   LYEAR,=P'64'             INITIALIZE LEAP YEAR TO 1964
         L     4,0(0,3)                 GPR-4 <- ADDR OF GREGORIAN VAR.
         CLC   0(6,4),=C'000000'        ZERO GREGORIAN DATE?
         BE    ZDATE
         MVC   YEAR(6),0(4)             MOVE GREGOR DATE TO YEAR,MO,DAY
         MVZ   YEAR+1(1),=X'C0'         SET UP <YEAR> FOR PACKING
         MVZ   MO+1(1),=X'C0'           SET UP <MO> FOR PACKING
         MVZ   DAY+1(1),=X'C0'          SET UP <DAY> FOR PACKING
         PACK  YEAR,YEAR                PACK <YEAR>
         PACK  MO,MO                    PACK <MO>
         PACK  DAY,DAY                  PACK <DAY>
         CLC   DAY,=X'001C'
         BL    ERROR
         CLC   DAY,=X'031C'
         BH    ERROR
         CLC   MO,=X'001C'
         BL    ERROR
         CLC   MO,=X'012C'
         BH    ERROR
         CLC   YEAR,=X'000C'
         BL    ERROR
         CLC   YEAR,=X'099C'
         BH    ERROR
         ZAP   DBLWRK,YEAR         MOVE YEAR TO DOUBLEWORD
         STM   6,7,STORM           SAVE THESE 2 REGS
         CVB   6,DBLWRK            CONVERT YEAR TO BINARY
         LTR   6,6                 CHECK FOR YEAR 0
         BZ    LEAPYEAR            IF YEAR IS 0-ITS A LEAPYEAR
         SRDA  6,32                SHIFT TO ODD # REG
         D     6,=F'4'              DIVIDE BY 4  (ALL LEAPYEARS ARE
*                                  EVENLY DIVISIBLE BY 4)
         LTR   6,6                 CHECK FOR REMAINDER
         LM    6,7,STORM           (RELOAD REGS REGARDLESS OF CC)
         BNZ   NOTLYEAR            IF THERE WAS REMAINDER-
*                                  THIS WASN'T A LEAPYEAR
LEAPYEAR ZAP   FEBDAYS,=P'29'           MOVE 29 DAYS INTO # OF FEB DAYS
         B     ADDDAYS                  GO ADD UP # OF DAYS
NOTLYEAR ZAP   FEBDAYS,=P'28'           MOVE 28 DAYS INTO # OF FEB DAYS
ADDDAYS  LA    5,DAYSINMO               GPR-5 <- ADDR OF <DAYSINMO>
         CP    DAY,=P'0'                IS DAY GREATER THAN 0 ?
         BNH   ERROR                    NO, GO RETURN ERROR DATE
         CP    MO,=P'0'                 IS MONTH GREATER THAN 0 ?
         BNH   ERROR                    NO, GO RETURN ERROR DATE
         CP    MO,=P'12'                IS MONTH GREATER THAN 12 ?
         BH    ERROR                    YES, GO RETURN ERROR DATE
NEXTMO   CP    MO,0(2,5)                COMPARE MONTH WITH TABLE MONTH
         BZ    GOTMONTH                 IF EQUAL ADD DAYS IN MONTH
         AP    DAYS,2(2,5)              OTHERWISE, ADD # OF DAYS IN MO
         LA    5,4(0,5)                 SKIP TO NEXT MO IN TABLE
         B     NEXTMO                   GO COMPARE AGAIN
ERROR    L     4,4(0,3)                 GPR-4 <- ADDR OF JULIAN DATE
* OUTPUT IS FOUR BYTE FIELD                                 *HMD 03/85*
         ZAP   0(4,4),=P'99999'         MOVE ERROR DATA     *HMD 03/85*
         OI    3(4),X'0F'               CHANGE SIGN TO X'F' *HMD 03/85*
         B     BADGOUT                  GO RETURN
GOTMONTH CP    DAY,2(2,5)               IS DAY > # OF DAYS IN MONTH ?
         BH    ERROR                    YES, GO RETURN ERROR DATE
         AP    DAYS,DAY                 ADD # OF DAYS IN THIS MONTH
ZDATE    EQU   *
         ZAP   JULDATE,YEAR             MOVE YEAR TO JULIAN VARIABLE
         MP    JULDATE,=P'1000'         MULTIPLY BY 1000
         AP    JULDATE,DAYS             ADD # OF JULIAN DAYS
         L     4,4(3)                   GPR-4 <- ADDR OF JULIAN VAR.
* OUTPUT IS FOUR BYTE FIELD                                 *HMD 03/85*
         ZAP   0(4,4),JULDATE+5(3)      MOVE JUL DATE TO CALLING PGM
         OI    3(4),X'0F'               CHANGE SIGN TO X'F' *HMD 03/85*
BADGOUT  EQU   *
         LR    1,13                     SAVE OUR STORAGE    *HMD 03/85*
         L     13,4(0,13)               GET BACK POINTER    *HMD 03/85*
         LA    0,STORLEN                LENGTH TO FREE      *HMD 03/85*
         FREEMAIN R,LV=(0),A=(1)        FREE IT UP          *HMD 03/85*
         RETURN (14,12),T,RC=0          RETURN TO CALLER    *HMD 03/85*
         SPACE 2                                            *HMD 03/85*
MOE      LTORG                          LITERALS FOLLOW
         TITLE 'JULIAN TO GREGORIAN CONVERSION'
*---------------------------------------------------------------------*
* THIS ROUTINE CONVERTS A FOUR BYTE PACKED DECIMAL JULIAN DATE TO A   *
* SIX BYTE GREGORIAN 'YYMMDD' DATE.                                   *
* EXAMPLE:                                                            *
*   R1==> A(GDATE)      GDATE   DS     CL6      GREGORIAN YYMMDD      *
*         A(JDATE)      JDATE   DS     F        JULIAN    00YYDDDF    *
*                                                                     *
*  ON ENTRY R1......> ×>GREGDATE×>JULDATE ×                           *
*                         P1        P2                                *
* HOWARD M. DEAN                                                      *
* SYNTEX U.S.A.                                                       *
*---------------------------------------------------------------------*
GREGOR   SAVE (14,12)
         BALR  10,0
         USING *,10
         USING DSA,13                   TELL ASSEMBLER      *HMD 03/85*
         LR    2,1                      SAVE PARMS          *HMD 03/85*
         GETMAIN R,LV=STORLEN           GET DYNAMIC STORAGE *HMD 03/85*
         MVC   0(STORLEN,1),BEGOSTOR    INITIALIZE DYNAMIC  *HMD 03/85*
         ST    13,4(1)                  SAVE REGISTERS      *HMD 03/85*
         ST    1,8(13)                   CHAIN BACK         *HMD 03/85*
         LR    13,1                     ADDRESS DYNASTOR    *HMD 03/85*
         LR    3,2                      RETORE PARM REG     *HMD 03/85*
         ZAP   YEAR,=P'0'
         ZAP   MO,=P'0'
         ZAP   DAY,=P'0'
         L     4,4(0,3)                 GPR-4 <- ADDR OF JULIAN VAR.
*  DATE PRESENTED AS FULLWORD SIGNED 00YYDDDF               *HMD 03/85*
         ZAP   JDATE,0(4,4)             MOVE JULIAN DATE TO <JDATE>
         CLI   JDATE+2,X'0C'         M/B SIGNED
         BL    BADJDATE
         CLI   JDATE+2,X'9C'
         BH    BADJDATE
         CP    JDATE,=P'0'             ZERO DATE ENTERED"?
         BE    GOTGDATE                YES   ---   RETURN ZEROS
         CP    JDATE+1(2),=P'366'      # OF DAYS > 366?
         BH    BADJDATE                YES---RETURN ERROR DATE
         ZAP   DAYS,JDATE+1(2)          MOVE JULIAN DAYS TO <DAYS>
         SP    JDATE,DAYS               SUBTRACT TO ZERO JULIAN DAYS
         ZAP   JULDATE,JDATE            MOVE YEAR TIMES 100 TO <JULDATE
         DP    JULDATE,=P'1000'         DIVIDE BY 100 TO GET YEAR
         ZAP   YEAR,JULDATE+3(2)        MOVE YEAR TO <YEAR>
         ZAP   LYEAR,=P'64'             INITIALIZE LEAP YEAR TO 1964
         ZAP   DBLWRK,YEAR         MOVE YEAR TO DOUBLEWORD
         STM   6,7,STORM           SAVE THESE TWO REGS
         CVB   6,DBLWRK            CONVERT YEAR TO BINARY
         LTR   6,6                 CHECK FOR YEAR 0
         BZ    LEAPYR              IF YEAR IS 0-ITS A LEAPYEAR
         SRDA  6,32                SHIFT TO ODD # REG
         D     6,=F'4'             DIVIDE BY 4-ALL LEAP YEARS ARE
*                                  EVENLY DIVISIBLE BY 4
         LTR   6,6                 CHECK FOR REMAINDER
         LM    6,7,STORM           (RELOAD REGS REGARDLESS OF CC)
         BNZ   NOTLYR              IF THERE WAS REMAINDER-THIS WASNT A
*                                  LEAPYEAR
LEAPYR   ZAP   FEBDAYS,=P'29'           SET FEB DAYS IN TABLE TO 29
         B     GETMODAY                 GO ADD DAYS IN EACH MONTH
NOTLYR   ZAP   FEBDAYS,=P'28'           SET FEB DAYS IN TABLE TO 28
GETMODAY LA    5,DAYSINMO               GPR-5 <- ADDR OF MO/DAY TABLE
NEXTGMO  CP    DAYS,2(2,5)              COMPARE # DAYS WITH DAYS IN MO
         BP    NOTGMON                  IF HIGH, SUBTRACT DAYS IN MO
         ZAP   DAY,DAYS                 IF NOT HIGH,MOVE DAYS TO <DAY>
         ZAP   MO,0(2,5)                MOVE MONTH TO <MO>
         B     GOTGDATE                 GO CONVERT TO ZONED DECIMAL
NOTGMON  SP    DAYS,2(2,5)              SUBTRACT DAYS IN MO FROM JULIAN
         LA    5,4(0,5)                 GPR-5 <- ADDR OF NEXT TABLE ENT
         B     NEXTGMO                  GO COMPARE JULIAN DAYS AGAIN
BADJDATE L     4,0(0,3)                 GPR-4 <- ADDR OF GREGORIAN VAR.
         MVC   0(6,4),=C'999999'        SET GREG ERROR DATE
         B     BADJOUT                  GO RETURN
GOTGDATE L     4,0(0,3)                 GPR-4 <- ADDR OF GREGORIAN VAR.
         UNPK  0(2,4),YEAR              CONVERT YEAR TO ZONED DECIMAL
         MVZ   1(1,4),=X'F0'            CHANGE SIGN TO PRINT CHAR
         UNPK  2(2,4),MO                CONVERT MONTH TO ZONED DECIMAL
         MVZ   3(1,4),=X'F0'            CHANGE SIGN TO PRINT CHAR
         UNPK  4(2,4),DAY               CONVERT DAY TO ZONED DECIMAL
         MVZ   5(1,4),=X'F0'            CHANGE SIGN TO PRINT CHAR
BADJOUT  EQU   *
         LR    1,13                     RESTORE AREA PTR    *HMD 03/85*
         L     13,4(0,13)               LOAD BACK CHAIN     *HMD 03/85*
         LA    0,STORLEN                LENGTH TO FREE      *HMD 03/85*
         FREEMAIN R,LV=(0),A=(1)        FREE IT UP          *HMD 03/85*
         RETURN (14,12),T,RC=0          RETURN TO CALLER    *HMD 03/85*
         SPACE 2                                            *HMD 03/85*
IRVING   LTORG                          LITERALS FOLLOW
BEGOSTOR DC    20F'0'
         DS    PL8
         DS    PL3
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'1'
         DC    PL2'31'
         DC    PL2'2'
         DC    PL2'0'
         DC    PL2'3'
         DC    PL2'31'
         DC    PL2'4'
         DC    PL2'30'
         DC    PL2'5'
         DC    PL2'31'
         DC    PL2'6'
         DC    PL2'30'
         DC    PL2'7'
         DC    PL2'31'
         DC    PL2'8'
         DC    PL2'31'
         DC    PL2'9'
         DC    PL2'30'
         DC    PL2'10'
         DC    PL2'31'
         DC    PL2'11'
         DC    PL2'30'
         DC    PL2'12'
         DC    PL2'31'
         DC    PL2'99'
         DC    PL2'99'
         SPACE 3
         DS    D
         DS    2F
ENDOSTOR EQU   *                                            *HMD 03/85*
STORLEN  EQU   ENDOSTOR-BEGOSTOR        END MINUS BEGINNING *HMD 03/85*
         TITLE 'DYNAMIC SAVE AREA'                          *HMD 03/85*
DSA      DSECT                          DYNAMIC SAVE AREA   *HMD 03/85*
SAVE     DC    20F'0'
JULDATE  DS    PL8                      JULIAN DATE WORK WORD
JDATE    DS    PL3                      JULIAN DATE
LYEAR    DC    PL2'0'                   LEAP YEAR
DAYS     DC    PL2'0'                   JULIAN DAYS
YEAR     DC    PL2'0'                   YEAR
MO       DC    PL2'0'                   MONTH
DAY      DC    PL2'0'                   DAY
DAYSINMO EQU   *
         DC    PL2'0'
         DC    PL2'0'
         DC    PL2'1'                   JANUARY
         DC    PL2'31'                  31 DAYS
         DC    PL2'2'                   FEBRUARY
FEBDAYS  DC    PL2'0'                   INITIALIZED TO 0 DAYS
         DC    PL2'3'                   MARCH
         DC    PL2'31'                  31 DAYS
         DC    PL2'4'                   APRIL
         DC    PL2'30'                  30 DAYS
         DC    PL2'5'                   MAY
         DC    PL2'31'                  31 DAYS
         DC    PL2'6'                   JUNE
         DC    PL2'30'                  30 DAYS
         DC    PL2'7'                   JULY
         DC    PL2'31'                  31 DAYS
         DC    PL2'8'                   AUGUST
         DC    PL2'31'                  31 DAYS
         DC    PL2'9'                   SEPTEMBER
         DC    PL2'30'                  30 DAYS
         DC    PL2'10'                  OCTOBER
         DC    PL2'31'                  31 DAYS
         DC    PL2'11'                  NOVEMBER
         DC    PL2'30'                  30 DAYS
         DC    PL2'12'                  DECEMBER
         DC    PL2'31'                  31 DAYS
         DC    PL2'99'
         DC    PL2'99'
         SPACE 3
DBLWRK   DS    D
STORM    DS    2F
         END
