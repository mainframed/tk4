         MACRO
&NAME    SETREG  &R1,&R2,&R3,&R4,&R5,&R6,&R7,&R8,&R9,&R10,&R11,&R12,&COC
               DE=NORENT,&PARM=,&EQU=YES,&ID=NO,&SD=YES,               C
               &SP=0,&LVA=0,&CLEAR=(NO,00),&CPR=NO,&VER=YES,           C
               &BASE=
         GBLA  &SIDX
         GBLB  &SREG
         GBLB  &SDMAP             GLOBAL TO TURN OF S/A MAP
         GBLB  &IDS(255)          GLOBAL FOR ID LOGOFF FOR EOJ
         GBLB  &CRENT(255)        GLOBAL TO TELL EOJ CODE=RENT
         GBLC  &IDP(255)          GLOBAL WHICH CONTAINS ID
         GBLC  &POOL(255),&LV(255) GLOBAL FOR SUBPOOL & LENGTH
         LCLA  &A1,&A2,&A3
         LCLB  &REG,&MAP           EQUATE SWITCH
         LCLC  &C(10),&SID,&CDE,&RA,&RB
         LCLC  &SECT
         LCLC  &CPYR,&CRX,&CBX    COPYRIGHT STATEMENT       *HMD 04/85*
&SECT    SETC  '&SYSECT'          SET DEFAULT CSECT NAME
         AIF   ('&CPR' EQ 'NO').NOCPR                       *HMD 04/85*
&CPYR    SETC  '&SECT. - COPYRIGHT (C) 1986 HOWARD M. DEAN' *HMD 12/85*
&CRX     SETC  'CR'.'&SYSNDX'                               *HMD 12/85*
&CBX     SETC  'CB'.'&SYSNDX'                               *HMD 12/85*
.NOCPR   ANOP
         AIF   (T'&BASE EQ 'O').NBASE
&SECT    SETC  '&BASE(1)'
.NBASE   ANOP
&REG     SETB  (&SREG)             SET WHETHER TO MAKE EQUATES
&MAP     SETB  (&SDMAP)            SET FOR SAVE AREA MAP
&SIDX    SETA  &SIDX+1             INCREMENT INDEX LEVEL
&SID     SETC  '&SIDX'
&A1      SETA  1                   SET COUNTER TO INITIAL VALUE
&A2      SETA  2                   SET POINTER TO INITIAL VALUE
&IDS(&SIDX) SETB  ('&ID' EQ 'YES')   SET INDICATOR FOR LOGON,OFF
&IDP(&SIDX) SETC '&SECT'.' (VERSION '.'&SYSDATE'.' '.'&SYSTIME'.')'
&CRENT(&SIDX) SETB ('&CODE' EQ 'RENT') SET INDICATOR FOR EOJ
         AIF   (T'&R1 EQ 'O').DEF  SET DEFAULT AND NO ADDITIONAL REGS
         AIF   ('&R1' GE '2' AND '&R1' LE '12').ROK1 1ST OK
         AIF   ('&R1'(1,1) EQ 'R').ROK1
         MNOTE 4,'&R1 INVALID FIRST OPERAND. 12 ASSUMED'
.DEF     ANOP                      ENTRY FOR DEFAULT OF 12
&RA      SETC  '12'               SET DEFAULT BASE REGISTER
&A1      SETA  0                   NO ADDITIONAL BASES
         AGO   .CONT1              GO ASSMB. MACRO
.ROK1    ANOP
&RA      SETC  '&R1'
.ROK     AIF   (T'&SYSLIST(&A2) EQ 'O').CONTA  IF NO MORE CONTINUE
         AIF   ('&SYSLIST(&A2)' GE '2' AND '&SYSLIST(&A2)' LE '12').S1
         AIF   ('&SYSLIST(&A2)'(1,1) EQ 'R').S1
         MNOTE 4,'OPERAND &A2 INVALID. GENERATION STOPPED HERE'
.CONTA   ANOP
&A1      SETA  &A1-1               ONE LESS FOR ADDITIONAL REG
         AGO   .CONT1
.S1      ANOP
&C(&A1)  SETC  ','.'&SYSLIST(&A2)'   SET ONE REGISTER
&A1      SETA  &A1+1               POINT TO NEXT POSITION
&A2      SETA  &A2+1               POINT TO NEXT POSITION
         AIF   (&A1 NE 11).ROK    ALLOW ONLY 10 BASE REGISTERS
         MNOTE 4,'TOO MANY REGISTERS SPECIFIED. 10 ASSUMED'
&A1      SETA  10                  NUMBER OF ADDITIONAL REGISTERS
.CONT1   ANOP
&A3      SETA  &A1                 SET POSITION OF LAST REGISTER
         AIF   ('&CODE' EQ 'RENT' OR '&CODE' EQ 'NORENT').CODE1
         MNOTE 0,'INVALID CODE PARAMETER. NORENT ASSUMED'
&CDE     SETC  'NORENT'            DEFAULT
         AGO   .CODE2
.CODE1   ANOP
&CDE     SETC  '&CODE'             SET CODE SPECIFICATION
.CODE2   ANOP
         AIF   ('&CDE' EQ 'RENT' OR '&LVA' EQ '0').CODE3    *HMD 12/85*
         MNOTE 0,'ADDITIONAL STORAGE SPECIFIED - REENTRANCY FORCED'
&CDE     SETC  'RENT'                                       *HMD 12/85*
.CODE3   ANOP                                               *HMD 12/85*
         LUSE  &SECT,15           TEMP ADDRESSING
&NAME    SAVE  (14,12),,&IDP(&SIDX) SAVE REGS AND POST ID
         AIF   ('&CPR' EQ 'NO').NOCPR1                      *HMD 04/85*
         ENTRY &CRX                                         *HMD 12/85*
         B     &CBX                                         *HMD 12/85*
&CRX     DC    C'&CPYR'           COPYRIGHT NOTICE          *HMD 12/85*
&CBX     DS 0H                    COPYRIGHT BRANCH POINT    *HMD 04/85*
.NOCPR1  ANOP                                               *HMD 04/85*
         LDROP 15 .                LDROP TEMP ADDRESSING
         LR    &RA,15             SET FIRST BASE
         LUSE  &SECT,&RA&C(1)&C(2)&C(3)&C(4)&C(5)&C(6)&C(7)&C(8)&C(9)&CC
               (10)   SET UP LUSE
         AIF   (&A3 EQ 0).CKRENT1
         LA    &SYSLIST(&A3+1),2048 .     GET HALF THE DISPLACEMENT
         SLL   &SYSLIST(&A3+1),1 .      DOUBLE TO GET 4096
&A2      SETA  1                   POINT TO FIRST OPERAND
.S3      ANOP
         LA    &SYSLIST(&A2+1),0(&SYSLIST(&A3+1),&SYSLIST(&A2)) .     LC
               OAD ADDITIONAL BASE REGISTER
&A1      SETA  &A1-1               SUB FROM COUNTER
&A2      SETA  &A2+1               ADD TO POINTER
         AIF   (&A1 NE 0).S3       IF MORE KEEP ON TRUCKIN
.CKRENT1 AIF   ('&CDE' EQ 'NORENT').NORENT1
&POOL(&SIDX) SETC '&SP'           SET THE SUBPOOL NUMBER
&LV(&SIDX) SETC '&LVA'            SET LENGTH FOR GETMAIN
         CNOP  0,4            FOR ALIGNMENT
         BAL   1,*+8          BRANCH AROUND SP+LV
$SPLV&SID DS    0F             USED BY LOAD
         DC    AL1(&POOL(&SIDX)) SUBPOOL
         AIF   (&MAP OR '&SD' EQ 'NO').ABS
         DC    AL3((((USERWORK-SAVEAREA)+(&LV(&SIDX))+7)/8)*8) LENGTH
         AGO   .RND
.ABS     ANOP
         DC    AL3(((72+&LV(&SIDX)+7)/8)*8)                  LENGTH
.RND     ANOP
         L     0,$SPLV&SID    GET SP+LV
         SVC   10             DO GETMAIN
         AIF   (T'&CLEAR EQ 'O').LMSAVE GO IF NO CLEAR
         AIF   ('&CLEAR(1)' EQ 'NO').LMSAVE DO NOT CLEAR
         XC    0(72,1),0(1) .      CLEAR REGISTER SAVE AREA
&RB      SETC  '00'                DEFAULT BINARY ZERO
         AIF   (N'&CLEAR EQ 1).BIN0 DEFAULT TO BINARY ZERO
&RB      SETC  '&CLEAR(2)'         SET CLEAR CHARACTER
.BIN0    LA    2,72(1)             POINT TO 'TO' ADDRESS
         L     3,$SPLV&SID         GET 'TO' LENGTH          *HMD 12/85*
         N     3,$CLR&SID          CLEAR HI-ORDER BITS      *HMD 12/85*
         S     3,$LEN&SID          SUBTRACT SAVE AREA       *HMD 12/85*
         BNP   $DES&SID            IF ONLY A SAVE AREA      *HMD 12/85*
         LA    4,0                 GET 'FROM' ADDRESS (DUMMY)
         LA    5,X'&RB.'           GET FILL CHARACTER
         SLL   5,24                PUT IN HIGH BYTE AND CLEAR LENGTH
         MVCL  2,4                 CLEAR STORAGE FAST       *HMD 12/85*
         CNOP  0,4                 ALIGNMENT                *HMD 12/85*
         B     $DES&SID            BRANCH AROUND CONSTANTS  *HMD 12/85*
$CLR&SID DC    F'16777215'         CLEAR HIGH ORDER BITS    *HMD 12/85*
$LEN&SID DC    F'72'               LENGTH CONSTANT -        *HMD 12/85*
$DES&SID EQU   *                   END OF CONSTANT AREA
         AGO   .LMSAVE
.NORENT1 ANOP
         LA    1,SAVE&SYSNDX .     POINT TO SAVE AREA
.LMSAVE  ST    13,4(1) .           SAVE OLD SAVE AREA ADDRESS
         ST    1,8(13) .           SAVE NEW SAVE AREA ADDRESS
         LR    13,1 .              GET NEW SAVE AREA ADDRESS
         AIF   ('&CDE' EQ 'RENT').NOSAV
         B     SEND&SYSNDX .      BRANCH AROUND NON-EXECUTABLE CODE
SAVE&SYSNDX  DC    18F'0' .        NON-REENTRANT PROGRAM SAVE AREA
SEND&SYSNDX    DC  0H'0' .         END OF SAVE AREA TO BRANCH AROUND
.NOSAV   ANOP
         AIF   (NOT &IDS(&SIDX)).DOEQU NO ID LOG TO PROGRAMMER
&RA      SETC  'BEGIN '.'&IDP(&SIDX)' SET LOGON MESSAGE
         WTO   '&RA',ROUTCDE=11 . LOG THE PROGRAM ON
.DOEQU   AIF   (&REG OR '&EQU' EQ 'NO').NOEQU
         SPACE 2
*****    REGISTER EQUATES    *****
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         SPACE 2
*****    MISC EQUATES    *****
         SPACE 2
BRANCH   EQU   240
NOP      EQU   15
ON       EQU   255
OFF      EQU   0
         SPACE 2
.NOEQU   AIF   (&MAP OR '&SD' EQ 'NO').NOMAP
*****    SAVE AREA DSECT    *****
         SPACE 2
SAVEAREA DSECT ,                  SAVE AREA DUMMY SECTION
PL1      DC    F'0' .             AREA USED BY PL/I
LASTSAVE DC    F'0' .             ADDRESS OF LAST SAVE AREA
NEXTSAVE DC    F'0' .             ADDRESS OF NEXT SAVE AREA
REGE     DC    F'0' .             SAVE AREA FOR REGISTER 14
REGF     DC    F'0' .             SAVE AREA FOR REGISTER 15
REG0     DC    F'0' .             SAVE AREA FOR REGISTER 0
REG1     DC    F'0' .             SAVE AREA FOR REGISTER 1
REG2     DC    F'0' .             SAVE AREA FOR REGISTER 2
REG3     DC    F'0' .             SAVE AREA FOR REGISTER 3
REG4     DC    F'0' .             SAVE AREA FOR REGISTER 4
REG5     DC    F'0' .             SAVE AREA FOR REGISTER 5
REG6     DC    F'0' .             SAVE AREA FOR REGISTER 6
REG7     DC    F'0' .             SAVE AREA FOR REGISTER 7
REG8     DC    F'0' .             SAVE AREA FOR REGISTER 8
REG9     DC    F'0' .             SAVE AREA FOR REGISTER 9
REGA     DC    F'0' .             SAVE AREA FOR REGISTER 10
REGB     DC    F'0' .             SAVE AREA FOR REGISTER 11
REGC     DC    F'0' .             SAVE AREA FOR REGISTER 12
USERWORK DS    0C
&SYSECT  CSECT .                  RESTORE PROGRAM ADDRESSING
         LUSE  SAVEAREA,13        SET DSECT ADDRESSING
         AGO   .YMAP
.NOMAP   ANOP
&SYSECT  CSECT  .
.YMAP    ANOP
         SPACE 3
         AIF   (T'&PARM EQ 'O').EXIT  PARM NOT WANTED
         AIF   ('&PARM'(1,1) EQ '(').PREG REGISTER NOTATION
         L     15,4(13) .         GET OLD SAVEAREA ADDRESS
&RA      SETC  '&PARM(1)'         GET PARM DATA
         MVC   &RA.(4),24(15) .   MOVE PARM POINTER TO USER
         AGO   .EXIT
.PREG    ANOP
         L     15,4(13) .         GET OLD SAVE AREA ADDRESS
&RA      SETC  '&PARM(1)'         GET PARM DATA
         L     &RA,24(15) .       PASS OLD REG 1 (PARM POINTER) TO USER
.EXIT    ANOP
&SREG    SETB  1
&SDMAP   SETB  1
         MEND
