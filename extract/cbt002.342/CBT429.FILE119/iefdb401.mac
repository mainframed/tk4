B401     TITLE 'IEFDB401 DYNAMIC ALLOCATION VALIDATION EXIT'
IEFDB401 CSECT
IEFDB401 RMODE ANY                                             HD JUL86
IEFDB401 AMODE 31                                              HD JUL86
***********************************************************************
*                                                                     *
* MODULE NAME = IEFDB401 (OS/VS2) VERSION 2, RELEASE 1, LEVEL 0       *
*               2.1.0 - 26JUN86                                  @HMD1A
*                                                                     *
* DESCRIPTIVE NAME = DYNAMIC ALLOCATION EXIT                          *
*                                                                     *
* COPYRIGHT = COPYRIGHT (C) HOWARD M. DEAN 1985                       *
*                                                                     *
* AUTHOR    = HOWARD M. DEAN                                          *
*             SR. SYSTEMS PROGRAMMER                                  *
*   ×H×       SYNTEX(USA)                                             *
*   ×M×       3401 HILLVIEW AVENUE                                    *
*   ×D×       PALO ALTO, CA 94303                                     *
*             (415) 852-1792                                          *
*                                                                     *
* STATUS = VERSION 2, RELEASE 1, LEVEL 0                              *
*                                                                     *
* FUNCTION = THE FUNCTIONAL FLOW OF THIS MODULE FOLLOWS:              *
*                                                                     *
*    1. CHECK FOR A TSO TIMESHARING USER AND SET FLAGS                *
*                                                                     *
*    2. IF A TSO USER, OBTAIN PSCB ADDRESS AND CHECK FOR              *
*       INSTALLATION DATA (PSCBATR2). SET FLAG INDICATING             *
*       'TSOUSER' VOLUME MUST BE USED.                                *
*                                                                     *
*    3. CHECK DYNAMIC ALLOCATION PARAMETER LIST FOR SPECIFIC          *
*       VOLUME REQUEST. IF THERE IS A SPECIFIC VOLUME REQUEST         *
*       CHECK THE FOLLOWING:                                          *
*                                                                     *
*        * IF A TSO USER, CHECK FOR A 'UNIT=' TEXT UNIT               *
*          AND ADD 'UNIT=SYSALLDA' TEXT UNIT IF NOT FOUND             *
*                                                                     *
*        * IF A TSO USER, CHECK FOR A 'UNIT=' TEXT UNIT               *
*          AND IF SUPPLIED, THEN LET THE REQUEST THROUGH ASIS         *
*                                                                     *
*    4. IF UNSPECIFIC VOLUME REQUST PREFORM THE FOLLOWING:            *
*                                                                     *
*        * IF NAME OF DATASET MATCHES THE MASK TABLE,                 *
*          SUBSTITUTE 'UNIT=WORK' OR ADD TO TEXT UNIT CHAIN           *
*          IF NO UNIT SUPPLIED.                                       *
*                                                                     *
*        * IF NO MATCH OF DATASET NAME, THEN SUBSTITUTE               *
*          UNIT NAME FROM THE PSCB THAT WAS SAVED ABOVE.              *
*                                                                     *
*    5. FOR NON-TSO DYNAMIC ALLOCATION USERS, TAKE THE FOLLOWING      *
*       ACTIONS:                                                      *
*                                                                     *
*        * IF   'UNIT=SYSDA'                                          *
*               'UNIT=DISK'                                           *
*               'UNIT=SYSSQ'                                          *
*               'UNIT=SYSALLDA'                                       *
*               'UNIT=(ANY DASD GENERIC NAME)                         *
*                                                                     *
*          AND NON-SPECIFIC REQUEST, SUBSTITUTE 'UNIT=WORK'           *
*                                                                     *
*        * IF AND ESOTERIC UNIT NAME OTHER THAN ABOVE,                *
*          ALLOW REQUEST TO PROCEED.                                  *
*                                                                     *
*     6 CHECK FOR CERTAIN EXCEPTIONS AND EXIT IF CONDITIONS MET:      *
*                                                                     *
*        * APF AUTHORIZED FUNCTION REQUEST                            *
*        * ALLOCATION OF "OLD" OR "MOD" DATASET                       *
*        * ALLOCATION OF SYSOUT DATASET                               *
*        * ALLOCATION OF VIO OR TAPE DATASET                          *
*        * SUBSYSTEM REQUEST                                          *
*        * ALLOCATION OF "DUMMY" OR "TERMINAL" DATASET                *
*        * SPECIFIC VOLUME PROCESSING                                 *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES =                                                   *
*                                                                     *
*            CLASS ONE CHARACTER CODE.  THE EBCDIC CHARACTER CODE     *
*            WAS USED FOR ASSEMBLY.  THE MODULE MUST BE REASSEMBLED   *
*            IF A DIFFERENT CHARACTER SET IS USED FOR EXECUTION.      *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS =                                           *
*                                                                     *
*            R1 - INPUT PARAMETER REGISTER                            *
*            R2 - SAVE OF INPUT PARAMETER ADDRESS LIST                *
*            R3 - POINTER TO COMMUNICATION VECTOR TABLE (CVT)         *
*            R4 - POINTS TO TEXT UNITS; S99TUPL                       *
*            R5 - POINTS TO PROTECTED STEP CONTROL BLOCK              *
*            R6 - POINTS TO SVC99 TEXT UNITS ADDRESS VECTOR           *
*            R7 - WORK REGISTER   - W1                                *
*            R8 - WORK REGESTER   - W2                                *
*            R9 - POINTS TO ADDRESS OF SVC99 REQUEST BLOCK            *
*            R10- POINTS TO A 500 BYTE SUPPLIED WORKAREA              *
*            R11- 2ND BASE REGISTER                                   *
*            R12- 1ST BASE REGISTER                                   *
*            R13- POINTS TO A 72 BYTE SAVE AREA                       *
*            R14- POINTS TO THE RETURN ADDRESS                        *
*            R15- WORK REGISTER AND RETURN CODE REGISTER              *
*                                                                     *
*    PATCH LABEL = NO PATCH AREA PROVIDED                             *
*                                                                     *
*    PROCESSOR = ASSEMBLER H                                          *
*                                                                     *
*    MODULE SIZE = SEE EXTERNAL SYMBOL DICTIONARY                     *
*                                                                     *
*    ATTRIBUTES = REENTRANT, REFRESHABLE, ENABLED, READ ONLY,         *
*                 PRIVILEGED, SUPERVISOR STATE, SCHEDULER KEY         *
*                 RMODE=ANY, AMODE=31                                 *
*                                                                     *
* ENTRY POINT = IEFDB401                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
* INPUT = STANDARD REGISTERS                                          *
*                                                                     *
*    REG 1  - INPUT PARAMETER LIST                                    *
*                                                                     *
*        * ADDRESS OF A COPY OF THE SVC99 INPUT REQUEST BLOCK         *
*        * ADDRESS OF THE ADDRESS OF A WORK AREA (500 BYTES)          *
*        * FULLWORD CONTAINING THE LENGTH OF THE WORK AREA (500 BYTES)*
*        * ADDRESS OF THE EIGHT CHARACTER JOBNAME                     *
*        * ADDRESS OF ACCOUNTING INFORMATION FROM THE JOB CARD        *
*        * ADDRESS OF THE EIGHT CHARACTER STEPNAME                    *
*        * ADDRESS OF THE EIGHT CHARACTER PROGRAM NAME                *
*        * ADDRESS OF ACCOUNTING INFORMATION FROM THE EXEC CARD       *
*                                                                     *
*    REG 13 - => CALLER'S SAVE AREA                                   *
*    REG 14 - RETURN TO IEFW21SD                                      *
*                                                                     *
* OUTPUT = STANDARD REGISTERS AND/OR OPERATOR MESSAGE                 *
*                                                                     *
* EXIT-NORMAL = IEFDB400 - RETURN TO DYNAMIC ALLOCATION               *
*                                                                     *
*    REG 15 =  0 CONTINUE WITH REQUEST                                *
*    REG 15 = ^0 TERMINATE PROCESSING                                 *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = NONE                                          *
*                                                                     *
*    CONTROL BLOCK = CVT, TCB, JSCB, PSCB, IEFZB4D0, IEFZB4D2, UCB    *
*                                                                     *
*    EQUATES       = SEE BELOW                                        *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = WTO, CALL, EXTRACT, FREEMAIN, SAVE, RETURN                 *
*                                                                     *
* CHANGE ACTIVITY = SEE BELOW                                         *
*                                                                     *
* 06/25/86 - RE-WRITTEN FOR UNIT NAME PROJECT:                   @HMD1A
*            INITIAL - VERSION 2.1.0                             @HMD1A
*                                                                @HMD1A
***********************************************************************
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*      IEFDB401 DECISION MATRIX (DYNAMIC ALLOCATION CONTROL EXIT)     *
*                                                                     *
*---------------------------------------------------------------------*
* ×                            ×                ×                     ×
* ×   UNITNAME SPECIFICATION   × VOLSER REQUEST ×    EXIT ACTION      ×
* ×_____________________________________________×_____________________×
* ×                            ×                ×                     ×
* ×                            ×                ×                     ×
* × NONE - IMPLIES THAT THE    × SPECIFIC       × SUBSTITUTE UNIT=DISK×
* × DEFAULT UNITNAME FROM      ×________________×_____________________×
* ×                            ×                ×                     ×
* × SYS1.UADS WILL BE USED     ×                ×                     ×
* ×                            × NON-SPECIFIC   × SUBSTITUTE UNIT=WORK×
* ×                            ×                × OR UNIT=TSOUSER     ×
* ×                            ×                × (REFER TO NOTE BELOW×
* ×____________________________×________________×_____________________×
* ×                            ×                ×                     ×
* ×                            ×                ×                     ×
* × UNIT=SYSDA OR UNIT=DISK OR × SPECIFIC       × NONE REQUIRED       ×
* × UNIT=SYSSQ OR UNIT=SYSALLDA×________________×_____________________×
* ×                            ×                ×                     ×
* ×                            ×                ×                     ×
* ×                            × NON-SPECIFIC   × SUBSTITUTE UNIT=WORK×
* ×____________________________×________________×_____________________×
* ×                            ×                ×                     ×
* ×                            ×                ×                     ×
* × ANY GENERIC DASD UNITNAME  × SPECIFIC       × NONE REQUIRED       ×
* ×                            ×________________×_____________________×
* ×                            ×                ×                     ×
* ×                            ×                ×                     ×
* ×                            × NON-SPECIFIC   × SUBSTITUTE UNIT=WORK×
* ×___________________________________________________________________×
* ×                            ×                ×                     ×
* ×                            ×                ×                     ×
* × ANY ESOTERIC DASD UNITNAME × SPECIFIC       × NONE REQUIRED       ×
* × EXCEPT: SYSDA, DISK, SYSSQ,×______________________________________×
* ×                            ×                ×                     ×
* × OR SYSALLDA                ×                ×                     ×
* ×                            × NON-SPECIFIC   × NONE REQUIRED       ×
* ×___________________________________________________________________×
* ---------------------------------------------------------------------
*
*
*NOTE:  FOR NON-SPECIFIC ALLOCATIONS USING THE DEFAULT UNITNAME FROM
*       SYS1.UADS, THE UNITNAME SUBSTITUTED WILL DEPEND UPON THE
*       DATASET NAME. UNIT=TSOUSER WILL BE USED, UNLESS THE DATASET
*       NAME MATCHES ONE FROM THE FOLLOWING EXCEPTION LIST:
*
*              USERID.ADMPRINT.REQUEST.#NNNNN
*              USERID.GDDM.REQUEST.#NNNNN
*              USERID.IDTFLOG.LIST
*              USERID.JCLCHECK.XXXXXXXX
*              USERID.IDTFLOG.LIST
*              USERID.SPFLOGN.LIST
*              USERID.WORK.SELJOB
*              USERID.WORK.JLSCRN
*              USERID.WORK.DOCOUT
*
*IF THE DATASET NAME SPECIFIED MATCHES ONE OF THE ABOVE, IEFDB401 WILL
*SUBSTITUTE UNIT=WORK.
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
IEFDB401 CSECT                    DYNAMIC ALLOCATION EXIT
         ENTRY  COHMD             COPYRIGHT NOTICE             HD JUL86
         ENTRY  EXCEPT            DATASET EXCEPTION TABLE      HD JUL86
         ENTRY  BYPASS            BYPASS PROCESSING            HD JUL86
         SAVE   (14,12),T,IEFDB401_VERSION_2.1.0_&SYSDATE._&SYSTIME
         SPACE 1
         USING  IEFDB401,R12,R11  ESTABLISH BASE(S)
         USING  CVTMAP,R3         ADDRESS THE CVT
         USING  S99TUNIT,R4       TEXT UNITS
         USING  PSCB,R5           PROTECTED STEP CNTL BLOCK
         USING  S99TUPL,R6        TEXT UNIT VECTOR TABLE
         USING  S99RB,R9          SVC99 REQUEST BLOCK
         USING  IEFWORK,R10       BASE FOR WORK AREA
         SPACE  1
         LR     R12,R15           ENTRY POINT IEFDB401
         SPACE  1                                              HD JUL86
         B      IEFDB40A          BRANCH AROUND ID             HD JUL86
COHMD    DC     C'IEFDB401 COPYRIGHT (C) 1986 HOWARD M. DEAN'  HD JUL86
         SPACE  1                                              HD JUL86
IEFDB40A LA     R11,2048          POINT HALF WAY UP
         SLL    R11,1             MULITPLY BY 2 FOR 4096
         LA     R11,0(R11,R12)    LOAD SECOND BASE START ADDRESS
         L      R3,CVTPTR         LOAD POINTER TO CVT
         L      R9,D0(,R1)        POINT TO REQUEST BLOCK
         L      R10,D4(,R1)       ADDR OF ADDR OF WORK AREA
         L      R10,D0(,R10)      ACTUAL ADDRESS OF SUPPLIED WORK AREA
         LR     R2,R1             SAVE INPUT PARAMTER LIST POINTER
*                                                              HD JUL86
         MVI    DYNAFLAG,DYNAZERO       CLEAR DYNAMIC FLAGS    HD JUL86
         XC     SAVEAREA(18*4),SAVEAREA CLEAR TO ZERO          HD JUL86
*                                                              HD JUL86
         LA     R1,SAVEAREA       FETCH ADDRESS OF S/A
         ST     R13,D4(,R1)       CHAIN
         ST     R1,D8(,R13)            SAVE
         LR     R13,R1                       AREAS
BYPASS   NOP    IEFEXITN                                       HD JUL86
*
         SPACE  2
*
*  VALIDATE THE REQUEST BLOCK AND SET UP POINTERS
*
VALIDRB  CLI    S99VERB,S99VRBAL  DSNAME ALLOCATION?           HD JUL86
         BNE    IEFEXITN          NO, EXIT
         L      R6,S99TXTPP       GET ADDRESS OF TEXT POINTERS HD JUL86
         N      R6,HIBIT          CHECK FOR TEXT POINTERS      HD JUL86
         BZ     IEFEXITN          STRANGE, NO TEXT POINTERS    HD JUL86
         ST     R6,TUPLPTR        SAVE POINTER TO TABLE
*
* R6 NOW CONTAINS A POINTER TO THE TEXT UNIT VECTOR TABLE (TUVT)
*
         TITLE  'IEFDB401 - EXTRACT TSO USERID (IF ANY) AND SET FLAGS'
*                                                              HD JUL86
* CHECK FOR TSO USER - SET FLAG SO A DIFFERENT PROCESS         HD JUL86
* CAN BE USED FURTHER ON DOWN IN THE CODE                      HD JUL86
*                                                              HD JUL86
         SPACE  2
         XC     EXTRA(EXTRALEN),EXTRA   CLEAR EXTRACT LIST FORM
         SPACE  1
VANILLA  EXTRACT  EXTRACTA,'S',FIELDS=(TJID,PSB),MF=(E,EXTRA)
         SPACE  1
         L      R5,TJID           GET TSO ASID                 HD JUL86
         LTR    R5,R5             WAS AN ASID RETURNED?        HD JUL86
         BZ     SCANTXT           NO, NOT A TSO USER           HD JUL86
         OI     DYNAFLAG,DYNATSO  INDICATE THIS IS A TSO USER  HD JUL86
*
*  INDICATE WE MUST SUBSTITUTE 'UNIT=TSOUSER' IF USERDATA FOUND
*
SCANPSB  L      R5,PSCBAD         GET RETURNED PSCB ADDRESS    HD JUL86
         IC     W1,PSCBATR2+1     CHECK FOR INSTALLATION DATA  HD JUL86
         N      W1,LOBYTE         WAS THERE ANYTHING THERE?    HD JUL86
         BNZ    SCANTXT           YES, NOT A PRIVILEGED USER   HD JUL86
         OI     DYNAFLAG,DYNAPRIV A PRIVILEDGED TSO USER       HD JUL86
         TITLE  'IEFDB401 - SCAN TEXT UNIT BLOCKS'
*
*  SCAN FOR DATASET NAME, VOLUME, UNIT TEXT UNITS AND SAVE
*  POINTERS IN THE WORK AREA
*
SCANTXT  DS     0H                                             HD JUL86
         XC     TUPVSTA(TUPVEND-TUPVSTA),TUPVSTA               HD JUL86
*                                    CLEAR VECTOR SAVE AREA    HD JUL86
         SPACE 1                                               HD JUL86
SCAN00   L      R4,S99TUPTR          R4 ==> TEXT UNIT          HD JUL86
         N      R4,HIBIT             TEST FOR NULL UNIT        HD JUL86
         BZ     NEXTUNIT             NULL UNIT, GET NEXT ONE
*
* CHECK FOR ONES WE CAN LET THROUGH
*
         CLI    S99TUKEY+1,DALSSREQ  SUBSYSTEM REQUEST?
         BE     IEFEXITN             YES, BYPASS
         CLI    S99TUKEY+1,DALSYSOU  IS THIS SYSOUT?
         BE     IEFEXITN             YES, BYPASS
         CLI    S99TUKEY+1,DALDUMMY  DUMMY DATASET?
         BE     IEFEXITN             YES, BYPASS
         CLI    S99TUKEY+1,DALTERM   IS THIS THE TERMINAL?
         BE     IEFEXITN             YES, BYPASS
         SPACE  2
*
* NOW COMES THE REAL FUN
*
         SPACE  2
SCAN01   CLI    S99TUKEY+1,DALUNIT   IS THIS A UNIT KEY?
         BNE    SCAN02               NOPE, CHECK ANOTHER
         SLR    W1,W1                CLEAR WORK REGISTER       HD JUL86
         ICM    W1,M3,S99TULNG       LOAD LENGTH OF UNIT       HD JUL86
         BZ     NEXTUNIT             ZERO LENGTH IS INVALID    HD JUL86
         BCTR   W1,R0                DECREMENT FOR 'EXECUTE'   HD JUL86
         ST     R4,TUUNITP           SAVE POINTER TO TEXT UNIT
         ST     R6,TUUNITX           SAVE POINTER TO VECTOR
         OI     DYNAFLAG,DYNAUNIT    INDICATE WE GOT UNIT      HD JUL86
         LA     W2,SYSDTAB           LOAD 'SYSDA' TABLE ADDR   HD JUL86
         SPACE  1                                              HD JUL86
**                                                             HD JUL86
* SCAN 'SYSDA' UNIT NAME TABLE FOR MATCH'                      HD JUL86
**                                                             HD JUL86
SCAN01A  CLC    D0(L'SYSDTAB,W2),ENDOTAB                       HD JUL86
*                                    CHECK FO END'O TABLE      HD JUL86
         BE     NEXTUNIT             GET NEXT TEXT UNIT        HD JUL86
         CLC    S99TUPAR,D0(W2)      CHECK FOR MATCH           HD JUL86
         EX     W1,*-6               CHECK FOR LENGTH OF UNIT  HD JUL86
         LA     W2,L'SYSDTAB(W2)                               HD JUL86
         BNE    SCAN01A              IF NO MATCH, LOOP         HD JUL86
         OI     DYNAFLAG,DYNANIL     INDICATE NAME IN LIST     HD JUL86
         B      NEXTUNIT                                       HD JUL86
         SPACE  1                                              HD JUL86
SCAN02   CLI    S99TUKEY+1,DALVLSER  IS THIS A VOLSER KEY?
         BNE    SCAN03               NOPE, CHECK ANOTHER
         ST     R4,TUPVOLUM          SAVE POINTER TO TEXT UNIT
         ST     R6,TUPVOLUX          SAVE ADDRESS FOR LATER
         CLC    S99TULNG(2),ZERO     LENGTH OF ZERO?           HD JUL86
         BE     NEXTUNIT             YES, SCAN NEXT UNIT       HD JUL86
         CLC    S99TUPAR(6),BLANKS   IS VOLSER BLANKS          HD JUL86
         BE     *+8                  YES, INVAID VOLUME        HD JUL86
         OI     DYNAFLAG,DYNAVOLU    INDICATE SPECIFIC VOLUME  HD JUL86
         B      NEXTUNIT             GET NEXT TEXT UNIT        HD JUL86
         SPACE  1                                              HD JUL86
SCAN03   CLI    S99TUKEY+1,DALDSNAM  DSNAME TEXT UNIT?
         BNE    SCAN04               NOPE, CHECK ANOTHER
         SLR    W1,W1                CLEAR WORK REGISTER       HD JUL86
         ICM    W1,M3,S99TULNG       LENGTH OF TEXT UNIT       HD JUL86
         BZ     NEXTUNIT             INVALID LENGTH, FORGET IT HD JUL86
         BCTR   W1,0                 DECREMENT FOR 'EX'        HD JUL86
         CLI    S99TUPAR,C'&&'       TEMPORARY DATASET NAME?   HD JUL86
         BE     NEXTUNIT             AS IF ITS NOT EVEN THERE  HD JUL86
         ST     R4,TUPDSN            SAVE POINTER TO TEXT UNIT HD JUL86
         ST     R6,TUPDSNX           SAVE "DSNAME" UNIT PTR    HD JUL86
         OI     DYNAFLAG,DYNADSN     INDICATE DSNAME FOUND     HD JUL86
         SPACE  1
         MVC    UWORK(44),UPPERC     CLEAR WORK AREA           HD JUL86
         EX     W1,DSNMOV            MOVE NAME TO WORK AREA    HD JUL86
         SPACE  1                                              HD JUL86
         LA     R14,EXCEPT           LOAD EXCEPTION TABLE ADDR HD JUL86
         LA     R15,UWORK            LOAD DSNAME ADDRESS       HD JUL86
         BAL    W2,MATCHIT           BRANCH TO MATCH ROUTINE   HD JUL86
         SPACE  1                                              HD JUL86
         LTR    R15,R15              DID WE FIND A MATCH?      HD JUL86
         BZ     *+8                  NO, CONTINUE              HD JUL86
         OI     DYNAFLAG,DYNAMDSN    WE FOUND A MATCH          HD JUL86
         B      NEXTUNIT             CONTINUE WITH NEXT TU     HD JUL86
         SPACE  1
SCAN04   CLI    S99TUKEY+1,DALSTATS  D/S STATUS TEXT UNIT?
         BNE    SCAN05               NOPE, CHECK ANOTHER
         ST     R4,TUPSTATS          SAVE POINTER TO TEXT UNIT
         B      NEXTUNIT             GET NEXT TEXT UNIT
SCAN05   DS     0H
         B      NEXTUNIT             FOR ADDING MORE CHECKS
*
* ADD ADDITIONAL CHECKS HERE..NO WHERE TO GO FOR NOW
*
NEXTUNIT TM     S99TUPL,S99TUPLN     LAST TEXT UNIT?
         BO     ENDSCAN              YES, END SCAN
         LA     R6,D4(,R6)           GET NEXT POINTER
         B      SCAN00               CONTINUE WITH SCAN
*
ENDSCAN  ST     R6,TUPLAST           SAVE LAST UNIT POINTER
         B      PROCESS              CONTINUE PROCESSING
         TITLE  'IEFDB401 - MAIN PROCESSING ROUTINE'
PROCESS  DS     0H
**
** PROCESS THE TEXT UNITS
**
CKDISP   L      R4,TUPSTATS      POINTER TO 'DISP' UNIT        HD JUL86
         N      R4,HIBIT         TEST FOR NULL ENTRY           HD JUL86
         BZ     CKUNIT           DISP(NEW,...) DEFAULT         HD JUL86
         CLI    S99TUPAR,S99NEW  IS IT NEW?
         BNE    IEFEXITN         NO, BYPASS CHECK              HD JUL86
         SPACE  1
***************************************************************HD JUL86
*  THIS COULD INTRODUCE AN ERROR. IF 'DISP=MOD' AND DATASET    HD JUL86
*  DOES NOT EXIST, THEN WE REALLY SHOULD SUBSTITUTE THE        HD JUL86
*  CORRECT UNIT TYPE.  HOWEVER, IF THE DATASET DOES EXIST      HD JUL86
*  THEN THE SUBSTITUTION MAY FAIL THE REQUEST. THERE IS NO     HD JUL86
*  WAY FOR US TO KNOW IF IT EXISTS WITHOUT GOING THROUGH A     HD JUL86
*  LOT OF UNNECESSARY OVERHEAD. SO THEREFORE, WE'LL TAKE THE   HD JUL86
*  EASY WAY OUT AND IGNORE ANYTHING BUT A 'NEW' REQUEST.       HD JUL86
***************************************************************HD JUL86
         SPACE  1                                              HD JUL86
         TITLE  'IEFDB401 - PERFORM DATA SET NAME CHECKING'
**
**  CHECK UNIT (IF PRESENT) FOR NON-DASD
**
CKUNIT   DS     0H               CONTINUE PROCESSING           HD JUL86
         TM     DYNAFLAG,DYNAUNIT                              HD JUL86
*                                WAS UNIT SUPPLIED?            HD JUL86
         BZ     PROCTUTU         CONTINUE                      HD JUL86
         L      R4,TUUNITP       GET POINTER TO UNIT TEXT      HD JUL86
         SLR    W1,W1            CLEAR WORK REGISTER           HD JUL86
         ICM    W1,M3,S99TULNG   LOAD LENGTH IN WORK REG       HD JUL86
         BZ     PROCTUTU         JUST TO BE SURE               HD JUL86
         BCTR   W1,0             LENGTH OF UNIT NAME           HD JUL86
         CLC    S99TUPAR(0),TA   TAPE GETS LEFT ALONE          HD JUL86
         EX     W1,*-6           CHECK FOR TAPE                HD JUL86
         BE     IEFEXITN         ONLY DASD                     HD JUL86
         CLC    S99TUPAR(0),CA   LEAVE CARTRIDGE ALONE         HD JUL86
         EX     W1,*-6           CHECK FOR CARTRIDGE           HD JUL86
         BE     IEFEXITN         ONLY DASD                     HD JUL86
         CLC    S99TUPAR(0),VI   VIO GETS LEFT ALONE           HD JUL86
         EX     W1,*-6           CHECK FOR VIO                 HD JUL86
         BE     IEFEXITN         DO NOT PROCESS 'VIO'          HD JUL86
         B      PROCTUTU         PROCESS THE TEXT UNITS        HD JUL86
         TITLE  'IEFDB401 - PROCESS THE TEXT UNITS - NON-TSO'  HD JUL86
*-------------------------------------------------------------*HD JUL86
**  PROCESS THE SPECIFIC CASES OF ACTION AS OUTLINED IN THE  **HD JUL86
**  DECISION MATRIX AT THE BEGINNING OF THE PROGRAM          **HD JUL86
*-------------------------------------------------------------*HD JUL86
PROCTUTU DS     0H                                             HD JUL86
         TM     DYNAFLAG,DYNATSO IS THIS A TSO USER?           HD JUL86
         BO     PROCTSO          YES, PROCESS THE TSO CASE     HD JUL86
         TM     DYNAFLAG,DYNAVOLU                              HD JUL86
         BO     VOLSUP           BRANCH IF VOLSER SUPPLIED     HD JUL86
         TM     DYNAFLAG,DYNAUNIT                              HD JUL86
         BZ     GO2WORK          NO UNIT SUPPLIED, 'UNIT=WORK' HD JUL86
         SPACE  1                                              HD JUL86
UNITSUP  DS     0H               UNIT NAME SUPPLIED            HD JUL86
         TM     DYNAFLAG,DYNANIL                               HD JUL86
         BZ     IEFEXITN         UNIT NAME NOT IN LIST         HD JUL86
         SPACE  1                                              HD JUL86
GO2WORK  DS     0H                                             HD JUL86
         MVC    TUPARM00(UNITWKL),UNITWK                       HD JUL86
*                                MOVE IN UNIT=WORK             HD JUL86
         B      ENDUP            AND CHAIN IT IN               HD JUL86
         SPACE  1                                              HD JUL86
VOLSUP   DS     0H               NON-TSO SPECIFIC VOLUME       HD JUL86
         TM     DYNAFLAG,DYNAUNIT    WAS UNIT SUPPLIED         HD JUL86
         BO     IEFEXITN         VOLUME/UNIT SUPPLIED          HD JUL86
         SPACE  1                                              HD JUL86
         MVC    TUPARM00(UNITSAL),UNITSA                       HD JUL86
*                                MOVE IN 'SYSALLDA'            HD JUL86
         B      ENDUP            AND CHAIN IT IN               HD JUL86
         TITLE  'IEFDB401 - PROCESS THE TEXT UNITS - TSO'      HD JUL86
PROCTSO  DS     0H                                             HD JUL86
         TM     DYNAFLAG,DYNAVOLU                              HD JUL86
         BO     TSOVSUP          TSO AND SPECIFIC VOLUME       HD JUL86
         TM     DYNAFLAG,DYNAUNIT                              HD JUL86
         BO     TSOUNIT          TSO AND SPECIFIC UNIT         HD JUL86
         SPACE  1
* NO UNIT OR VOLUME SERIAL SPECIFIED                           HD JUL86
         SPACE  1
TSOG2D   TM     DYNAFLAG,DYNADSN FOUND A DSNAME?               HD JUL86
         BZ     TSOG2W           NO, TEMPORARY - GO TO WORK    HD JUL86
         TM     DYNAFLAG,DYNAPRIV                              HD JUL86
         BO     TSOG2W           PRIVILEGED, GO TO WORK PACK   HD JUL86
         TM     DYNAFLAG,DYNAMDSN                              HD JUL86
         BZ     TSOG2S           NO MATCH ==> 'UNIT=TSOUSER'   HD JUL86
         SPACE  1                                              HD JUL86
TSOG2W   DS     0H               INSERT 'UNIT=WORK'            HD JUL86
         MVC    TUPARM00(UNITWKL),UNITWK                       HD JUL86
*                                MOVE IN UNIT=WORK             HD JUL86
         B      ENDUP            AND CHAIN IT IN               HD JUL86
         SPACE  1                                              HD JUL86
TSOG2S   DS     0H               INSERT 'UNIT=TSOUSER'         HD JUL86
         MVC    TUPARM00(UNITTSL),UNITTS                       HD JUL86
*                                MOVE IN 'UNIT=TSOUSER'        HD JUL86
         B      ENDUP            AND CHAIN IT IN               HD JUL86
         SPACE  1                                              HD JUL86
TSOVSUP  DS     0H               TSO SPECIFIC VOLUME           HD JUL86
         TM     DYNAFLAG,DYNAUNIT    WAS UNIT SUPPLIED         HD JUL86
         BO     IEFEXITN         UNIT + VOLSER IS WHAT YOU GET HD JUL86
         SPACE  1                                              HD JUL86
         MVC    TUPARM00(UNITSAL),UNITSA                       HD JUL86
*                                MOVE IN 'SYSALLDA'            HD JUL86
         B      ENDUP            AND CHAIN IT IN               HD JUL86
         SPACE  1                                              HD JUL86
TSOUNIT  DS     0H               UNIT SUPPLIED + NO VOLSER     HD JUL86
         TM     DYNAFLAG,DYNANIL NAME IN 'SYSDA' LIST          HD JUL86
         BZ     IEFEXITN         NO, RETURN TO CALLER          HD JUL86
         B      TSOG2D           CHECK FOR DSNAME SUPPLIED     HD JUL86
         SPACE  1                                              HD JUL86
         TITLE  'IEFDB401 - CHAIN IN NEW TEXT UNIT POINTER'    HD JUL86
ENDUP    DS     0H               CHAIN IN NEW POINTER AND EXIT HD JUL86
         SPACE  1                                              HD JUL86
         L      R6,TUUNITX       GET VECTOR TABLE POINTER      HD JUL86
         N      R6,HIBIT         POINTER SUPPLIED?             HD JUL86
         BZ     *+10             DON'T ZERO OUT LOCATION ZERO! HD JUL86
         MVC    S99TUPTR,ZERO    ZERO OUT OLD UNIT POINTER     HD JUL86
         SPACE  1                                              HD JUL86
         LA     R4,TUPARM00      GET PARM ADDRESS              HD JUL86
         L      R6,TUPLAST       GET LAST UNIT POINTER         HD JUL86
         NI     S99TUPTR,DYNAHEXF-S99TUPLN                     HD JUL86
         SPACE  1                                              HD JUL86
         LA     R6,D4(R6)        INCREMENT TO NEXT POINTER     HD JUL86
         ST     R4,S99TUPTR      SAVE UNIT PARM                HD JUL86
         OI     S99TUPTR,S99TUPLN                              HD JUL86
         B      IEFEXITN         IN CASE WE ADD SOMETHING      HD JUL86
         TITLE  'IEFDB401 - EXIT ROUTINES'
**
**  EXIT ROUTINES - EXIT TO IEFDB400
**
IEFEXITN L      R13,SAVEAREA+4    NORMAL EXIT ROUTINE
         LA     R15,0             NORMAL RETURN CODE
         RETURN (14,12),T,RC=(15)
         SPACE  2
IEFEXITA L      R13,SAVEAREA+4    ABNORMAL EXIT ROUTINE
         LA     R15,4             ABNORMAL RETURN CODE
         RETURN (14,12),T,RC=(15)
         TITLE  'IEFDB401 - SUBROUTINES '
*--------------------------------------------------------------------*
**               MATCHIT - TABLE MATCH ROUTINE                      **
**                                                                  **
**  BAL  R7,MATCHIT                                                 **
**                                                                  **
**  R14 = POINTS TO 1ST DSNAME IN MASK TABLE                        **
**  R15 = POINTS TO DSNAME IN TEXT UNIT                             **
**                                                                  **
**  THIS ROUTINE DOES FIXED LENGTH MATCHING OF DATASETS.  A         **
**  TABLE ENTRY OF '$USYS.DATA033*.G****V**' WILL MATCH             **
**  '$USYS.DATA033D.G0001V00' BUT '$USYS.DATA033*.G0001V' WILL      **
**  NOT.  AN ASTERISK ('*') MEANS ANY * CHARACTER IN THAT           **
**  POSITION. MUST HAVE AS MANY ASTERISKS/CHARS AS NEEDED TO        **
**  COMPLETE THE FULL DATASET NAME.                                 **
**                                                                  **
*--------------------------------------------------------------------*
         SPACE  2
MATCHIT  DS     0H
         MVC    MTCHMASK,0(R14)   COPY TABLE DATASET NAME MASK
         OC     MTCHMASK,UPPERC   UPPERCASE THE DSNAME
         CLC    MTCHMASK,UPPERC   TEST FOR BLANK MASK
         BE     MATRET0           YES - BYPASS
         TR     MTCHMASK,MTCHTRAN ZERO ANY "I-DON'T CARE" CHARACTER
         MVC    MTCHWORK,MTCHMASK COPY TRANSLATED MASK
         NC     MTCHMASK,0(R14)   COPY TABLE DATASET NAME MASK
         BZ     MATRET0           EXIT
         NC     MTCHWORK,0(R15)   COPY DATASET NAME TO BE MATCHED
         CLC    MTCHMASK,MTCHWORK TEST IF MASK MATCHES
         BE     MATRET0           YES! IT MATCHES
MATCH10  DS     0H
         LA     R14,44(,R14)      POINT TO NEXT NAME
         CLI    0(R14),DYNAHEXF   END OF TABLE?
         BNE    MATCHIT           RETURN AND TRY AGAIN
         SPACE  1
MATRET4  DS     0H                NO MATCH
         LA     R15,D4            LOAD BAD RETURN CODE
         BR     W2                RETURN TO SENDER
         SPACE  1
MATRET0  DS     0H                RETURN AS FOUND
         LA     R15,D0            LOAD GOOD RETURN CODE
         BR     W2                RETURN TO SENDER
         TITLE  'IEFDB401 - CONSTANTS  AND EQUATES'
*---------------------------------------------------------------*
**                        EQUATES                              **
*---------------------------------------------------------------*
D0       EQU    0                 DISPLACEMENT OF ZERO
D2       EQU    2                 DISPLACEMENT OF TWO
D4       EQU    4                 DISPLACEMENT OF FOUR
D8       EQU    8                 DISPLACEMENT OF EIGHT
D10      EQU    10                DISPLACEMENT OF TEN
D12      EQU    12                DISPLACEMENT OF TWELVE
D16      EQU    16                DISPLACEMENT OF SIXTEEN
         SPACE  1                                              HD JUL86
M15      EQU    15                MASK BYTE OF B'1111'         HD JUL86
M7       EQU    7                 MASK BYTE OF B'0111'         HD JUL86
M3       EQU    3                 MASK BYTE OF B'0011'         HD JUL86
*
*  DYNAMIC ALLOCATION REQUESTS EQUATES                      *HMD 01/85*
*                                                           *HMD 01/85*
S99OLD   EQU    X'01'             INDICATE DISP=OLD         *HMD 01/85*
S99MOD   EQU    X'02'             INDICATE DISP=MOD         *HMD 01/85*
S99NEW   EQU    X'04'             INDICATE DISP=NEW         *HMD 01/85*
S99SHR   EQU    X'08'             INDICATE DISP=SHR         *HMD 01/85*
*                                                           *HMD 01/85*
*
W1       EQU    8                 WORK REGISTER
W2       EQU    7                 WORK REGISTER
*
*---------------------------------------------------------------*
**                        CONSTANTS                            **
*---------------------------------------------------------------*
ZERO     DC     F'0'              FULLWORD OF ZERO
C31      DC     F'-2147483648'    CHANGE TO 31 BIT MODE        HD JUL86
C24      DC     F'2147483647'     CHANGE TO 24 BIT MODE        HD JUL86
HIBIT    EQU    C24,4,X'C6'       CLEAR THE HIGH BIT           HD JUL86
LOBYTE   DC     F'255'            CLEAR ALL BUT LOW BYTE       HD JUL86
BLANKS   DC     CL8' '            BLANKS
UPPERC   DC     CL44' '           UPPERCASE IT
TA       DC     C'TAPE'           'UNIT=TAPE'                  HD JUL86
CA       DC     C'CART'           'UNIT=CART' (3480)           HD JUL86
VI       DC     C'SYSVIO'         'UNIT=VIO'                   HD JUL86
**
** TEXT UNIT MODELS
**
UNITTS   DC     0H'0',AL2(DALUNIT),H'1',H'7',C'TSOUSER'        HD JUL86
UNITTSL  EQU    *-UNITTS                                       HD JUL86
UNITWK   DC     0H'0',AL2(DALUNIT),H'1',H'4',C'WORK'           HD JUL86
UNITWKL  EQU    *-UNITWK                                       HD JUL86
UNITSA   DC     0H'0',AL2(DALUNIT),H'1',H'8',C'SYSALLDA'       HD JUL86
UNITSAL  EQU    *-UNITSA                                       HD JUL86
*
         SPACE  2                                              HD JUL86
**                                                             HD JUL86
**         "SYSDA" VOLUME LIST                                 HD JUL86
**                                                             HD JUL86
SYSDTAB  DC     0D'0'           ALIGN TO DOUBLEWORD            HD JUL86
         DC     CL8'DISK    '      UNIT=DISK                   HD JUL86
         DC     CL8'SYSALLDA'      UNIT=SYSALLDA               HD JUL86
         DC     CL8'SYSDA   '      UNIT=SYSDA                  HD JUL86
         DC     CL8'SYSSQ   '      UNIT=SYSSQ                  HD JUL86
         DC     CL8'3330    '      UNIT=3330                   HD JUL86
         DC     CL8'3330-1  '      UNIT=3330-1                 HD JUL86
         DC     CL8'3350    '      UNIT=3350                   HD JUL86
         DC     CL8'3380    '      UNIT=3380                   HD JUL86
ENDOTAB  DC     XL8'FFFFFFFF'      END OF TABLE INDICATOR      HD JUL86
         SPACE  2                                              HD JUL86
**  MATCHING TABLE AREA - THESE DSNAMES ARE EXCEPTIONS
**
*   LENGTH OF EACH ENTRY MUST BE 44 CHARACTERS
         SPACE  1
EXCEPT   DS     0D
         DC     CL44'*****.ADMPRINT.REQUEST.#*****               '
         DC     CL44'*****.GDDM.REQUEST.#*****                   '
         DC     CL44'*****.IDTFLOG.LIST                          '
         DC     CL44'*****.JCLCHECK.*****************************'
         DC     CL44'*****.IDTFLOG.LIST                          '
         DC     CL44'*****.SPFLOG*.LIST                          '
         DC     CL44'*****.WORK.SELJOB                           '
         DC     CL44'*****.WORK.JLSCRN                           '
         DC     CL44'*****.WORK.DOCOUT                           '
         DC     CL44'*****.XXXXX.XXXXXXXX************************'
* ABOVE IS DUMMY ENTRY FOR ZAPPING
         DC     44X'FF'             END OF TABLE
         SPACE  2
**
** TRANSLATE TABLE
**
MTCHTRAN DC     256X'FF'            ANY CHARACTER
         ORG    MTCHTRAN+C'*'       C'*' IS I-DON'T-CARE
         DC     X'00'
         ORG    ,                   END OF TABLE
         SPACE  2
**
** EXECUTED INSTRUCTIONS
**
DSNMOV   OC     UWORK(0),S99TUPAR   MOVE THE DSNAME            HD JUL86
**
         TITLE  'WORK AREA DUMMY SECTION'
IEFWORK  DSECT
*---------------------------------------------------------------
* THIS AREA IS CONTIGUOUS TO TEXT UNIT POINTERS AND SERVES AS
* AN EXTENTION. DO NOT REMVOVE THE FIRST TWO ENTRIES OR ADD    HD JUL86
* ANYTHING AHEAD OF THEM.
*---------------------------------------------------------------
UNITVECT DS    F                  ROOM FOR AN ADDITIONAL UNIT  HD JUL86
TUPARM00 DS    CL16               FOR SUBSTITUTING UNIT NAME   HD JUL86
*
SAVEAREA DS    18F                REGISTER SAVE AREA
         SPACE 2                                               HD JUL86
*---------------------------------------------------------------*
*                     FLAGS AND SWITCHES
*---------------------------------------------------------------*
DYNAFLAG DS    X                  DYNAMIC ALLOCATION FLAG
*
DYNAMDSN EQU   X'80' 1... ....    DSNAME IS A MATCH INTABLE    HD JUL86
DYNATSO  EQU   X'40' .1.. ....    USER IS A TSO TERMINAL USER  HD JUL86
DYNAPRIV EQU   X'20' ..1. ....    USER IS A PRIVILEGED USER    HD JUL86
DYNARES1 EQU   X'10' ...1 ....    RESERVED                     HD JUL86
DYNAVOLU EQU   X'08' .... 1...    WE FOUND A VOLUME SERIAL     HD JUL86
DYNAUNIT EQU   X'04' .... .1..    WE FOUND A UNIT NAME         HD JUL86
DYNADSN  EQU   X'02' .... ..1.    WE FOUND A DATASET NAME      HD JUL86
DYNANIL  EQU   X'01' .... ...1    UNIT NAME IS IN LIST         HD JUL86
DYNAHEXF EQU   X'FF' 1111 1111    ALL BITS ARE SET             HD JUL86
DYNAZERO EQU   X'00' .... ....    ALL BITS ARE OFF             HD JUL86
*
         SPACE 2                                               HD JUL86
*---------------------------------------------------------------*
*                     EXECUTED INSTRUCTIONS
*---------------------------------------------------------------*
*
*---------------------------------------------------------------*
** SAVED TEXT UNIT POINTER ADDRESSES FOR SVC99 REQUESTS
*---------------------------------------------------------------*
TUPVSTA  DS    0F                  START OF POINTER VECTOR
TUPLPTR  DS    F                   POINTER TO TU ADDRESS VECTOR TABLE
TUPDSN   DS    F                   POINTER TO DSNAME TEXT UNIT
TUPDSNX  DS    F                   POINTER TO "DSNAME" IN VECTOR TBL
TUPVOLUM DS    F                   POINTER TO VOLSER TEXT UNIT
TUPVOLUX DS    F                   POINTER TO "VOLUME" IN VECTOR TABLE
TUUNITP  DS    F                   POINTER TO UNIT   TEXT UNIT
TUUNITX  DS    F                   POINTER TO "UNIT" IN TU VECTOR TABLE
TUPSTATS DS    F                   POINTER TO NORMAL DISP TEXT UNIT
TUPLAST  DS    F                   LAST TEXT UNIT POINTER ADDRESS
TUPVEND  DS    0F                  END OF POINTER VECTOR
         SPACE 2
*---------------------------------------------------------------*
**
** LIST FORM MACRO INSTRUCTIONS
**
*---------------------------------------------------------------*
EXTRA    EXTRACT MF=L             EXTRACT LIST FORM
EXTRALEN EQU   *-EXTRA            LENGTH OF PARM LIST
         SPACE 2
*---------------------------------------------------------------*
**
** PARAMETER LISTS
**
*---------------------------------------------------------------*
EXTRACTA DS    0F                 EXTRACT PARM LIST
PSCBAD   DS    F                  ADDRESS OF TSO PSCB
TJID     DS    F                  ASID FOR TSO; ZERO FOR NON-TSO
*---------------------------------------------------------------*
** NOTE: THE ABOVE FIELDS ARE RETURNED FROM EXTRACT IN THE ORDER
**       GIVEN ABOVE, NOT THEY WAY THEY ARE LISTED IN THE EXECUTE
**       FORM OF THE MACRO. DO NOT CHANGE THE ORDER OF THE ABOVE
**       TWO FIELDS.
*---------------------------------------------------------------*
         SPACE 2
*---------------------------------------------------------------*
*   MATCHING TABLE WORK AREA
*---------------------------------------------------------------*
UWORK    DS    CL44                                            HD JUL86
MTCHMASK DS    CL44
MTCHWORK DS    CL44
*---------------------------------------------------------------*
IEFWORKL EQU   *-IEFWORK          TOTAL LENGTH OF USED WORK AREA
*---------------------------------------------------------------*
         TITLE  'MVS CONTROL BLOCK MAPPING DSECTS'
         CVT      DSECT=YES,LIST=YES
         EJECT
         IKJPSCB                  PROTECTED STEP CONTROL BLOCK
         EJECT
         IEFZB4D0                 DYNALLOC PARAMETER LIST
         EJECT
         IEFZB4D2                 DYNALLOC KEY EQUATES
         END   IEFDB401
