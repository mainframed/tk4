X006     TITLE 'JES2 USER EXIT 6:  INTERNAL TEXT SCAN'
***********************************************************************
*                                                                     *
*                    INTERNAL TEXT SCAN                               *
*                                                                     *
*   AUTHOR:                                                           *
*          HOWARD M. DEAN                                             *
*          SYNTEX U.S.A.                                              *
*          TECHNICAL SUPPORT DEPARTMENT                               *
*          3401 HILLVIEW AVENUE                                       *
*          MAIL STOP A5-CIS-5                                         *
*          PALO ALTO, CALIFORNIA 94303                                *
*          (415) 852-1792                                             *
*                                                                     *
*   PURPOSE:                                                          *
*                                                                     *
*        ALLOWS ONE TO SCAN THE INTERNAL TEXT CREATED BY THE JES2     *
*        CONVERTER SUBTASK.  AT SYNTEX, WE WILL USE THIS EXIT TO      *
*        MODIFY THE INTERNAL TEXT, FOR 'NEW' DATASETS, TO ALTER       *
*        NON-SPECIFIC GENERIC UNIT NAMES AND THE NON-SPECIFIC         *
*        ESOTERIC UNIT NAMES OF 'SYSDA','SYSSQ','SYSALLDA',AND        *
*        'DISK' TO AN ESOTERIC UNIT NAME OF 'WORK'.                   *
*                                                                     *
*        THIS WILL ALLOW ALL VOLUMES TO BE MOUNTED STORAGE.  THUS,    *
*        'NEW' DATASETS CAN BE ALLOCATED BY SIMPLY USING AN ESOTERIC  *
*        UNIT NAME AND BE DIRECTED TO A SPECIFIC DASD 'POOL' RATHER   *
*        THAN HAVING TO MENTION SPECIFIC VOLUME SERIALS.              *
*                                                                     *
*        NOTE: THIS EXIT IS ENTERED IN 'SUBTASK' MODE                 *
*                                                                     *
*  ENTRY POINT JESUX006                                               *
*                                                                     *
*  INPUT (REGISTERS):                                                 *
*        R0    A CODE INDICATING THE STATUS OF JCL CONVERSION         *
*              PROCESSING:                                            *
*                                                                     *
*              0  -  INDICATES THAT A JCL STATEMENT HAS BEEN          *
*                    CONVERTED TO AN INTERNAL TEXT IMAGE              *
*                                                                     *
*              4  -  INDICATES THAT ALL THE JCL FOR A PARTICULAR      *
*                    JOB HAS BEEN CONVERTED                           *
*                                                                     *
*        R1    ADDRESS OF A 2-WORD PARAMETER LIST                     *
*                                                                     *
*              WORD 1 (+0) ADDRESS OF A 16-BYTE WORK AREA             *
*                          AVAILABLE TO THE USER                      *
*                                                                     *
*              WORD 2 (+4) IF THE CODE PASSED IN R0 IS 0, THIS        *
*                          WORD POINTS TO THE ADDRESS OF THE LAST     *
*                          SINGLE INTERNAL TEXT IMAGE CONVERTED       *
*                          FROM A JCL STATEMENT. IF THE CODE PASSED   *
*                          IN R0 IS 4, THIS WORD POINTS TO THE        *
*                          ADDRESS OF THE CONVERTER'S RETURN CODE.    *
*                                                                     *
*        R2-R7 N/A         USED AS WORK REGISTERS IN THIS ROUTINE     *
*                                                                     *
*        R8    ADDRESS OF THE PCE                                     *
*                                                                     *
*        R9    N/A         USED AS WORK REGISTER IN THIS ROUTINE      *
*                                                                     *
*        R10   ADDRESS OF THE JCT                                     *
*                                                                     *
*        R11   ADDRESS OF THE HCT                                     *
*                                                                     *
*        R12   N/A         USED AT EXIT PROGRAM BASE REGISTER         *
*                                                                     *
*        R13   ON ENTRY - ADDRESS OF O/S STYLE SAVE AREA              *
*                                                                     *
*        R14   RETURN ADDRESS                                         *
*                                                                     *
*        R15   ENTRY ADDRESS                                          *
*                                                                     *
*   RETURN (REGISTERS):                                               *
*                                                                     *
*        R0-R1 N/A                                                    *
*                                                                     *
*        R15   RETURN CODE TO DIRECT FURTHER JES2 PROCESSING          *
*              =0  TELLS JES2 THAT IF THERE ARE ANY ADDITIONAL EXIT   *
*                  ROUTINES, EXECUTE THE NEXT CONSECUTIVE ROUTINE.    *
*                  IF THE ENTRY CODE IN R0 WAS 0, PASS THE NEXT       *
*                  INTERNAL TEXT IMAGE TO THE EXIT. IF THE ENTRY      *
*                  CODE WAS 4, THEN QUEUE THE JOB FOR PROCESSING      *
*                                                                     *
*              =4  IGNORE ANY ADDITIONAL EXIT ROUTINES ASSOCIATED     *
*                  WITH THIS EXIT; CONTINUE WITH CONVERSION OF THE    *
*                  JOB.                                               *
*                                                                     *
*              =8  BYPASS EXECUTION AND CANCEL THE JOB. THE JOB IS    *
*                  QUEUED FOR OUTPUT RATHER THAN EXECUTION.           *
*                                                                     *
* MACROS = JES2 - $BUFFER, $CAT, $CB, $DECODE, $ENTRY, $HASPEQU,      *
*                 $HASPGBL, $HCT, $JCT, $JQE, $MID, $MIT, $MODEND,    *
*                 $MODULE, $PATCHSP, $PCE, $$WTO, $XIT                *
*                                                                     *
*                                                                     *
* MACROS = MVS  - SPLEVEL, SAVE, RETURN, IEFTXTFT, IEFVKEYS, IHASU1,  *
*                 IEZWPL, WTO                                         *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL                COPY HASP GLOBALS
JESUXIT6 $MODULE NOTICE=(SP134),SYSP=(GEN,GEN,NODATA,GEN,GEN),         C
               ENVIRON=SUBTASK,        CALLED IN SUBTASK ENVIRONMENT   C
               TEXT,                   MVS INTERNAL TEXT FORMAT        C
               KEYS,                   MVS TEXT UNIT KEY VALUES        C
               WPL,                    MVS WTO PARAMETER LIST          C
               $HASPEQU,               GENERATE HASP EQUATES           C
               $BUFFER,                GENERATE HASP BUFFER DSECT      C
               $CAT,                   GENERATE HASP CAT DSECT         C
               $HCT,                   GENERATE HASP HCT DSECT         C
               $JCT,                   GENERATE HASP JCT DSECT         C
               $JQE,                   GENERATE HASP JQE DSECT         C
               $MIT,                   GENERATE HASP MIT DSECT         C
               $PCE,                   GENERATE HASP PCE DSECT         C
               $XIT                    GENERATE HASP XIT DSECT
JESUX006 $ENTRY BASE=R12               ESTABLISH ENTRY POINT
         DROP  R13                     PCE IS REALLY IN R8
         USING WORKAREA,R2             ADDRESS OF THE WORK AREA
         USING PARMLIST,R3             ADDRESS THE PARM LIST
         USING TEXT,R4                 ADDRESS THE TEXT UNIT
         USING PCEDSECT,R8             ADDRESS THE PCE
         USING JCTDSECT,R10            ADDRESS THE JCT
         USING HCTDSECT,R11            ADDRESS THE HCT
         TITLE 'JES2 USER EXIT 6: INTERNAL TEXT SCAN'
         SPACE 1
         STM   R14,R12,12(R13)         SAVE IN CALLER'S AREA
         LR    R12,R15                 ESTABLISH ADDRESSIBILITY
         LR    R3,R1                   LOAD PARMAMETER REGISTER
         L     R2,USERWORK             LOAD ADDRESS OF WORK AREA
         MVC   JESFLAG,$ZEROS          CLEAR JES2 FLAG
         MVC   SAVEPOS,$ZEROS          CLEAR SAVED POSITION
         SPACE 1
**
**  CHECK FOR END OF CONVERSION - RETURN IF SO
**
         C     R0,$F4                  ENTRY CODE FOUR?
         BE    RC0                     RETURN TO CALLER
         SPACE 1
         EJECT
**********************************************************************
**                                                                  **
**  PROCESS TEXT UNIT STRINGS AND REJECT ANY STRING THAT IS NOT     **
**  A 'DD' CARD. SET FLAGS IF A NON-EMPTY 'SER=' IS FOUND AND/OR    **
**  A NON-EMPTY UNIT NAME IS FOUND THAT IS IN OUR TABLE.            **
**                                                                  **
**                                                                  **
**  REGISTER USAGE:                                                 **
**                                                                  **
**       R2    -ADDRESS OF 16 BYTE WORK AREA                        **
**       R3    -ADDRESS OF INPUT PARAMETER LIST                     **
**       R4    -POINTER TO BEGINNING OF TEXT UNIT                   **
**       R5-R7 -WORK REGISTERS                                      **
**       R8    ---> $PCE                                            **
**       R9    -WORK REGISTER                                       **
**       R10   ---> $JCT                                            **
**       R10   ---> $HCT                                            **
**       R12   -PROGRAM BASE                                        **
**       R13   -SAVE AREA AND WORK AREA POINTER                     **
**                                                                  **
**********************************************************************
PROCESS  DS    0H                      PROCESS TEXT UNITS
         MVC   WTX900(MSG900L),MSG900  MOVE $HASP900 MSG TO WORK AREA
         L     R4,TEXTUNIT             GET TEXT UNIT ADDRESS
         TM    STRINDCS,JOBSTR         START OF JOB STMT?
         BZ    XXSTMT                  MUST BE ANOTHER STATEMENT
         MVC   SCTR,$H1                INDICATE STATEMENT #1
         B     RC0                     DON'T PROCESS JOB STATEMENT
XXSTMT   LH    R1,SCTR                 LOAD STATEMENT NUMBER
         AH    R1,$H1                  INCREMENT COUNTER
         STH   R1,SCTR                 SAVE IN AREA
         SPACE 1
         TM    STRINDCS,DDSTR          IS THIS A DD CARD?
         BZ    RC0                     RETURN WITH NEXT STATEMENT
         SPACE 1
* WE'VE GOT A DD STATEMENT
         TM    STRDINDC,DTXDUMMY+DTXDDNM+DTXDYNAM
         SPACE 1
* IS IT DUMMY, DDNAME, OR DYNAM?
         BNZ   RC0                     FORGET IT
         TM    STRDINDC,DTXSYSIN+DTXSYOUT+DTXSUBSK
         SPACE 1
* IS IT SYSIN, SYSOUT, OR SUBSYS?
         BNZ   RC0
         SLR   R5,R5                   CLEAR WORK REGISTER
         LA    R4,STRDKEY              POINT TO THE KEY
         IC    R5,2(R4)                INSERT LENGTH OF KEY
         LA    R4,2(R4,R5)             POINT PAST THE DDNAME
         SPACE 1
* LOOK FOR 'UNIT=', 'SER=' KEYWORDS
         SPACE 1
SLIDE    CLI   0(R4),ENDK              END OF FIELD?
         BE    ENDOTXT                 WE'VE HIT THE END
         SPACE 1
         CLI   0(R4),DSNAMEK           CHECK FOR 'DSNAME' KEYWORD
         BE    DSNAME                  WE'VE GOT A DSNAME
         CLI   0(R4),VOLUMEK           CHECK FOR "VOL" KEYWORD
         BE    VOLUME                  TURN OFF "DSNAME" FLAG
         CLI   0(R4),SERMK             IS THIS A 'SER=' KEYWORD?
         BE    VOLSER                  WE'VE GOT A SPECIFIC VOLSER
         CLI   0(R4),REFMK             CHECK FOR "REF="
         BE    VOLREF                  PROCESS THE UNIT
         CLI   0(R4),UNITK             IS THIS A UNIT DDNAME?
         BE    UNIT                    THIS IS A 'UNIT=' KEYWORD
         CLI   0(R4),DISPK             IS THIS A 'DISP' KEYWORD?
         BE    DISP                    BI GEORGE, EYE TINK WIVE GOTIT
NEXT     LA    R4,1(R4)                INCREMENT POINTER
         B     SLIDE                   SLIDE ACROSS
         SPACE 1
DSNAME   DS    0H                      CHECK FOR "&" DSNAME
         OI    JESFLAG,JGOTDSN         TURN ON DSNAME IN PROGRESS FLAG
         B     NEXT
         SPACE 1
VOLUME   DS    0H                      PROCESS "VOLUME=" KEYWORD
         NI    JESFLAG,JFF-JGOTDSN     TURN OF "DSNAME" FLAG
         B     NEXT                    AND KEEP ON TRUCKING
         SPACE 1
VOLREF   DS    0H
         TM    JESFLAG,JGOTDSN         ARE WE PROCESSING AN && NAME?
         BO    NEXT                    NO, A REAL "REF=" STMT
         SPACE 1
VOLSER   DS    0H                      WE'VE FOUND A 'VOL=SER=' KEYWORD
         CLI   1(R4),0                 ANY SUBPARMS?
         BE    NEXT                    NO, INVALID "SER" OR "REF"
         CLI   2(R4),0                 ZERO LENGTH "SER" OR "REF"?
         BE    *+8                     YES, INVALID
         OI    JESFLAG,JGOTVOL         WE'VE GOT A VOLUME SERIAL
         B     NEXT                    CHECK NEXT BYTE
         SPACE 1
DISP     DS    0H
         OI    JESFLAG,JGOTDISP        INDICATE 'DISP' FOUND
         CLI   2(R4),0                 IS IT DISP=(,CATLG)?
         BE    DISPNEW                 YES, INDICATE 'NEW'
         IC    R5,2(R4)                GET LENGTH OF FIELD
         BCTR  R5,0                    DECREMENT
         CLC   3(0,R4),NEWORD          COMPARE TO CONSTANT
         EX    R5,*-6
         BNE   *+8                     DISP IS NOT 'NEW'
DISPNEW  OI    JESFLAG,JDISPNEW        DISP INCLUDED AND IS 'NEW'
         B     NEXT                    GET NEXT BYTE
         SPACE 1
UNIT     DS    0H
         CLI   2(R4),0                 LENGTH OF ZERO?
         BE    NEXT                    YES, CHECK NEXT FIELD
         LA    R5,DDTAB                LOAD THE TABLE ADDRESS
         LA    R6,L'DDTAB              LENGTH OF TABLE
         LA    R7,ENDOTAB              END OF TABLE
         SLR   R9,R9                   CLEAR FOR INSERT
         IC    R9,2(R4)                LOAD LENGTH OF UNIT NAME
         BCTR  R9,0                    DECREMENT FOR 'EX'
         SPACE 1
UNITLOOP CLC   3(0,R4),0(R5)           COMPARE AGAINST TABLE
         EX    R9,*-6
         BE    UNITGOT                 WE'VE GOT IT
         BXLE  R5,R6,UNITLOOP          LOOP TILL IT MATCHES
         B     NEXT                    CHECK NEXT BYTE
         SPACE 1
UNITGOT  OI    JESFLAG,JGOTSYSD        WE FOUND A 'SYSDA' NAME
         MVC   WTXTUN(0),3(R4)         MOVE IN THE NAME
         EX    R9,*-6
         ST    R4,SAVEPOS              SAVE ORIGINAL POSITION
         B     NEXT                    RETURN TO LOOP BEGINNING
         SPACE 2
ENDOTXT  DS    0H
         TM    JESFLAG,JGOTDISP        DID WE FIND A 'DISP' KEY?
         BZ    CHKWORK                 NO, IS DEFINITELY NEW
         TM    JESFLAG,JDISPNEW        IS SUBPARM NULL OR 'NEW'?
         BZ    RC0                     NO, THEN JUST RETURN
CHKWORK  TM    JESFLAG,JGOTSYSD        DID WE GET A 'SYSDA' FIELD?
         BZ    RC0                     NO, DO NOT PROCESS
         TM    JESFLAG,JGOTVOL         SPECIFIC VOLUME?
         BO    RC0                     YES, LEAVE TEXT UNIT ALONE
         EJECT
********************************************************************
**                                                                **
** WE'VE GOT A TEXT UNIT WE CAN WORK WITH. LOAD POSITION IN TEXT  **
** UNIT AND SQUEEZE IN YOUR NEW DDNAME 'WORK'. ADJUST LENGTH SO   **
** THAT TEXT UNIT SIZE NEED NOT BE CHANGED. THIS WILL SCREW UP    **
** WITH UNIT NAMES LESS THAN THE SIZE OF 'WORKDD', BUT A THREE    **
** CHARACTER UNIT NAME IS UNLIKELY.                               **
**                                                                **
********************************************************************
         L     R4,SAVEPOS              POINT TO THE ORIGINAL UNIT
         IC    R5,2(R4)                INSERT LENGTH OF UNIT
         BCTR  R5,0                    MACHINE LENGTH
         SPACE 1
         MVC   3(1,R4),WORKDD          MOVE IN WORK UNIT
         EX    R5,*-6                  ADJUST TO CORRECT LENGTH
         SPACE 2
ENDWTO   DS    0H                      END WRITE TO OPERATOR
         LH    R1,SCTR                 GET STATEMENT NUMBER
         CVD   R1,DBLWORD2             CONVERT TO DECIMAL
         ED    WTXSTMT,DBLWORD2+6      EDIT THE DATA
         SPACE 1
         $$WTO WTX900                  WRITE TO THE OPERATOR
         SPACE 1
         B     RC0                     IN CASE WE ADD SOMETHING
         EJECT
**********************************************************************
**                                                                  **
**       RETURN CODE VECTOR BRANCH TABLE                            **
**                                                                  **
**********************************************************************
RC0      L     R15,$ZEROS              RETURN CODE ZERO
         B     EXIT
         SPACE 1
RC4      L     R15,$F4                 LOAD RETURN CODE
         B     EXIT
         SPACE 1
RC8      L     R15,$F8                 LOAD RETURN CODE
         B     EXIT
         SPACE 1
EXIT     L     R14,4*3(R13)
         LM    R0,R12,4*5(R13)         RESTORE REGISTERS
         BR    R14                     RETURN BACK TO EXIT EFFECTOR
         SPACE 1
         $MODEND ,                     END OF MODULE
         TITLE 'JES2 USER EXIT 6:  INTERNAL TEXT SCAN'
********************************************************************
**                                                                **
**                INTERMODULE CONSTANTS                           **
**                                                                **
********************************************************************
         SPACE  1
********************************************************************
**                                                                **
**        WARNING WRITE-TO-OPERATOR MESSAGE CONSTANTS             **
**                                                                **
********************************************************************
         $MID 900
         SPACE 1
MSG900   WTO   '&MID.STMT     UNIT=         REPLACED WITH UNIT=WORK',  +
               MF=L
MSG900L  EQU   *-MSG900           TOTAL LENGTH OF WTO
         SPACE 2
         ORG   MSG900+17          ORG OVER TEXT
         DC    X'40202120'        EDIT PATTERN FOR STMT NUMBER
         ORG   ,
NEWORD   DC    CL3'NEW'           THE CHARS 'NEW'
WORKDD   DC    CL8'WORK'          NAME OF WORK UNIT
         SPACE 2
********************************************************************
**                                                                **
**        DDNAME TABLE - SCAN FOR "SYSDA" TYPE UNIT NAME          **
**                                                                **
********************************************************************
DDTAB    DS     0D                 DDNAME TABLE
A3330    DC     CL8'3330    '      UNIT=3330
A3331    DC     CL8'3330-1  '      UNIT=3330-1
A3350    DC     CL8'3350    '      UNIT=3350
A3380    DC     CL8'3380    '      UNIT=3380
SYSDA    DC     CL8'SYSDA   '      UNIT=SYSDA
SYSSQ    DC     CL8'SYSSQ   '      UNIT=SYSSQ
SYSALLDA DC     CL8'SYSALLDA'      UNIT=SYSALLDA
DISK     DC     CL8'DISK    '      UNIT=DISK
ENDOTAB  DC     8X'FF'             END OF TABLE INDICATOR
         SPACE  2
         TITLE 'JES2 USER EXIT 6:  INTERNAL TEXT SCAN'
********************************************************************
**                                                                **
**            INTERNAL EQUATES AND DUMMY SECTIONS                 **
**                                                                **
********************************************************************
JCTDSECT DSECT                         RESUME JCT DSECT
         ORG   JCTWORK
WTX900   DS    0F                      START OF MESSAGE 900
         ORG   WTX900+17
WTXSTMT  DS    CL4                     TEXT UNIT DDNAME
         ORG   WTX900+27
WTXTUN   DS    CL8                     TEXT UNIT UNIT NAME
         ORG   ,                       BACK TO REALITY
         SPACE 2
PARMLIST DSECT                         R1 --> PARMLIST
USERWORK DS    A                       POINTER TO 16 BYTE WORK AREA
TEXTUNIT DS    A                       POINTER TO ASSEMBLED TEXT UNIT
         SPACE 2
WORKAREA DSECT
DBLWORD1 DS    D                       1ST DOUBLE WORD OF WORK AREA
DBLWORD2 DS    D                       2ND DOUBLE WORD OF WORK AREA
         ORG   DBLWORD1
JESFLAG  DS    X                       FLAG SWITCH FOR PROCESSING
JGOTSYSD EQU   X'80'  1... ....        WE FOUND UNIT=SYSDA
JGOTVOL  EQU   X'40'  .1.. ....        WE FOUND A SPECIFIC VOLUME
JGOTDISP EQU   X'20'  ..1. ....        WE FOUND A 'DISP' SUBPARM
JDISPNEW EQU   X'10'  ...1 ....        THE 'DISP' PARM IS 'NEW'
JGOTDSN  EQU   X'08'  .... 1...        LAST TEXT UNIT WAS FOR "DSN"
JFF      EQU   X'FF'  1111 1111        FOR "ANDING' OFF BITS
         ORG   DBLWORD1+2
SCTR     DS    H                       HALFWORD STATEMENT COUNTER
         ORG   DBLWORD2                POINT TO THE SECOND DOUBLEWORD
SAVEPOS  DS    F                       SAVE POSITION OF 'UNIT' PARM
         ORG   ,
WL       EQU   *-WORKAREA              LENGTH OF AREA (16 BYTES)
         END
