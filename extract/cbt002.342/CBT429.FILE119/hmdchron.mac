HMDC     TITLE 'HMDCHRONO - SUPER TIME-N-DATE ROUTINE'      *HMD 03/85*
HMDCHRON CSECT                    TIME/DATE SUBROUTINE
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
**  S U P E R    T I M E  -  A N D  -  D A T E   S U B R O U T I N E **
**                                                                   **
**  ON ENTRY TO THIS SUBROUTINE:                            *HMD 03/85*
**                                                          *HMD 03/85*
**                                                          *HMD 03/85*
**  R1 ========> A(DATE) - JULIAN FOUR BYTES 00YYDDDF       *HMD 03/85*
**                       - GREG   EIGHT BYTES MM/YY/DD      *HMD 03/85*
**                       - GREG   EIGHT BYTES MM-YY-DD      *HMD 03/85*
**                       - ZERO   GET DATE FROM SYSTEM      *HMD 03/85*
**                                                          *HMD 03/85*
**               A(WORK) - 72 BYTE UNINITIALIZED WORK AREA  *HMD 03/85*
**                       - FILLED IN BY THIS PROGRAM AND    *HMD 03/85*
**                         MAPPED BY 'HMDTIME' MACRO        *HMD 03/85*
**                                                          *HMD 03/85*
*   UPON EXIT, THE FIELDS DESCRIBED BY THE MACRO 'HMDTIME'  *HMD 03/85*
*   WILL BE FILLED IN. BASICALLY, THIS IS THE TIME OF DAY   *HMD 03/85*
*   AND DATE IN VARIOUS FORMATS. YOU CAN ADDRESS THE WORK   *HMD 03/85*
*   AREA AND ACCESS THE FORMATTED VALUES FOR USE IN YOUR    *HMD 03/85*
*   PROGRAM.                                                *HMD 03/85*
*                                                           *HMD 03/85*
*   THE TIME RETURNED BY THIS PROGRAM IS THE TIME THE       *HMD 03/85*
*   PROGRAM WAS CALLED AND IS OBTAINED VIA THE 'TIME'       *HMD 03/85*
*   MACRO.                                                  *HMD 03/85*
*---------------------------------------------------------------------*
*---------------------------------------------------------------------*
         EJECT
         REGS
         SPACE 2                                            *HMD 03/85*
RNULL    EQU   0                   FOR BALR, ETC
NULL     EQU   0                   VALUE OF ZERO
ZERO     EQU   0                   ZERO - ZORRO
ONE      EQU   1                   VALUE OF 1
RPARM    EQU   1                   PARAMETER REGISTER
RWORK2   EQU   2                   WORK REGISTER
RWORK3   EQU   3                   WORK REGISTER
PPARM    EQU   3                   POINTS TO PASSED PARM AREA
RW4      EQU   4                   WORK REGISTER
RW5      EQU   5                   WORK REGISTER
X        EQU   7
RMNDR    EQU   8
DVDND    EQU   RMNDR
BINMTH   EQU   9
BINYR    EQU   9
QOT      EQU   9
NINE     EQU   9                   DISPLACEMENT OF NINE       @HMD78265
CORR     EQU   11
RBASE    EQU   12                  BASE REGISTER
RSAVE    EQU   13                  BASE REGISTER FOR WORKING STORAGE
*                                                           *HMD 03/85*
D0       EQU   ZERO                DISPLACEMENT OF ZERO     *HMD 03/85*
D4       EQU   4                   DISPLACEMENT OF FOUR     *HMD 03/85*
D8       EQU   8                   DISPLACEMENT OF EIGHT    *HMD 03/85*
D12      EQU   12                  DISPLACEMENT OF TWELVE   *HMD 03/85*
*                                                           *HMD 03/85*
MASK     EQU   15                  ICM MASK                 *HMD 03/85*
*                                                           *HMD 03/85*
FXIG     EQU   X'0F'               FOR FIXING SIGN
GIXF     EQU   X'F0'               FOR FIXING SIGN
LEAPTM   EQU   X'12'               FOR TESTING LEAP YEAR
COLON    EQU   C':'                SEPERATOR
SPACE    EQU   C' '                SEPERATOR
DOT      EQU   C'.'                SEPERATOR
SLASH    EQU   C'/'                SEPERATOR
DASH     EQU   C'-'                SEPERATOR
COMMA    EQU   C','                SEPERATOR
         EJECT
         SAVE  (14,12),T,HMDCHRON_&SYSDATE_&SYSTIME_HOWARD_M_DEAN
         BALR  RBASE,RNULL          ESTABLISH ADDRESSIBILITY
         USING *,RBASE
         USING TIMESTOR,RSAVE       ADDRESS WORKING STORAGE
         USING HMDTIME,PPARM        ADDRESS THE PARAMETER AREA
         LR    PPARM,RPARM          SAVE PARM ADDRESS       *HMD 03/85*
         GETMAIN R,LV=HMDLV,SP=NINE GET STORAGE IN SUBPOOL NINE
         ST    RSAVE,4(,RPARM)      SAVE R13
         ST    RPARM,8(,RSAVE)      CHAIN BACKWARDS TOO
         LR    RSAVE,RPARM          GET SAVE AREA ADDRESS
         MVC   PARMAP(PARMLEN),D0(PPARM)                    *HMD 03/85*
*                                   SAVE PASSED PARMS       *HMD 03/85*
         L     PPARM,AWORK          ADDRESS THE WORK AREA   *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         TIME  DEC                  GET DATE/TOD            *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         ST    R0,TIME              SAVE TIME VALUE         *HMD 03/85*
         ST    R1,DATE              SAVE DATE VALUE         *HMD 03/85*
         EJECT                                              *HMD 03/85*
*************************************************************HMD 03/85*
*  CHECK THE FORMAT OF THE DATE AND CALL JULIAN OR GREGOR   *HMD 03/85*
*                                                           *HMD 03/85*
*  IF DATE IS 00YYDDDF THEN LEAVE AS IS                     *HMD 03/85*
*  OTHERWISE IF DATE IS MM/DD/YY THEN                       *HMD 03/85*
*  CONVERT TO 6 BYTE YYMMDD FORMAT AND PASS TO JULIAN       *HMD 03/85*
*                                                           *HMD 03/85*
*  WORKING DATE WILL ALWAYS BE JULIAN                       *HMD 03/85*
*************************************************************HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         L     RWORK2,ADATE       GET THE DATE ADDRESS      *HMD 03/85*
         CLC   KF0,D0(RWORK2)     NULL WORD?                *HMD 03/85*
         BE    FORMDTIM           YES, USE TODAY'S DATE     *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         MVC   DATE,0(RWORK2)     ASSUME JULIAN DATE        *HMD 03/85*
         CLI   2(RWORK2),DASH     IS THIS A JULIAN DATE?    *HMD 03/85*
         BE    CALLER             NO, MUST BE GREGORIAN     *HMD 03/85*
         CLI   2(RWORK2),SLASH    TRY THE SLASH             *HMD 03/85*
         BNE   FORMDTIM           NOPE, MUST BE JULIAN NOW  *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
CALLER   DS    0H                                           *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         MVC   DATEG,0(RWORK2)    MOVE IN THE GREG DATE     *HMD 03/85*
         MVC   DATEWORK,FABTAB    MOVE IN SNEEKY TABLE      *HMD 03/85*
         TR    DATEWORK,DATEG-1   SNEEKY, AREN'T I?         *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         MVC   GDATE,DATEWORK     EASE IN THE DATE          *HMD 03/85*
         XC    JDATE,JDATE        CLEAR JULIAN DATE         *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
REACHOUT CALL  JULIAN,(GDATE,JDATE),VL,MF=(E,CALLMAC)       *HMD 03/85*
         SPACE 1                                            *HMD 03/85*
         MVC   DATE,JDATE         GET JULIAN DATE           *HMD 03/85*
         EJECT                                              *HMD 03/85*
*                                                           *HMD 03/85*
* FORMAT THE TIME OF DAY                                    *HMD 03/85*
*                                                           *HMD 03/85*
FORMDTIM EQU   *
         SPACE 1                                            *HMD 03/85*
         TIME  BIN                GET THE SYSTEM TIME       *HMD 03/85*
         LR    R9,R0              GET THE CURRENT TIME
         SPACE 1                                            *HMD 03/85*
         SR    R8,R8              CLEAR FOR DIVIDE
         D     R8,KF100           GET THE TIME IN SECONDS
         CVD   R8,DBLWORK         PACK IT IN
         OI    DBLWORK+7,FXIG     FIX SIGN
         UNPK  TIMEHUNS(2),DBLWORK(8)  MAKE IT READABLE
         OI    TIMEHUNS+1,GIXF    FIX SIGN
         MVI   COLON1,COLON       MOVE IN SEPARATOR
         SR    R8,R8              CLEAR FOR DIVIDE
         D     R8,KF60            SECONDS
         CVD   R8,DBLWORK         PACK IT IN
         OI    DBLWORK+7,FXIG     FIX SIGN
         UNPK  TIMESECS(2),DBLWORK(8)  MAKE IT READABLE
         OI    TIMESECS+1,GIXF    FIX SIGN
         MVI   COLON2,COLON       INSERT SEPARATOR
         SR    R8,R8              CLEAR FOR DIVIDE
         D     R8,KF60            MINUTES
         CVD   R8,DBLWORK         PACK IT IN
         OI    DBLWORK+7,FXIG     FIX SIGN
         UNPK  TIMEMINS(2),DBLWORK(8)  MAKE IT READABLE
         OI    TIMEMINS+1,GIXF     FIX SIGN
         MVI   COLON3,COLON       INSERT SEPARATOR
         CVD   R9,DBLWORK         GET HOURS
         OI    DBLWORK+7,FXIG     FIX SIGN
         UNPK  TIMEHRS(2),DBLWORK(8) MAKE IT READABLE
         OI    TIMEHRS+1,GIXF     FIX SIGN
         MVC   HMDTIMER,BIGTIME   MOVE TIME TO PARM AREA
         EJECT
*
*   GET TIME IN FORM HH.MM.SS  PM/AM
*
TIMEDEC  DS    0H
         MVC   PATTERN,PATURN     MOVE EDIT PATTERN
         LA    X,INDIC            LOAD AM/PM ADDRESS
         OI    TIME+3,FXIG        FIX SIGN
         CP    TIME,PTERM         IS IT AM OR PM?
         BC    4,AM               IF LT NOON INDICATE AM
         CP    TIME,PTERM+4(4)    COMPARE TO 1:00 PM
         BC    11,*+10            IF HIGH OR = SUB 12 FROM TIME
NOON     AP    TIME,PTERM(4)      ADD 12 TO HOUR
PM       SP    TIME,PTERM(4)      SUBTRACT 12 FROM HOUR
         LA    X,3(X)             INDICATE PM
AM       CLI   TIME,ZERO          IS IS BETWEEN MIDNITE AND 1 AM?
         BNE   EDIT               NO, LEAVE TIME ALONE
         MVI   TIME,X'12'         OTHERWISE INDICATE 12:00 AM
EDIT     ED    PATTERN,TIME       MAKE IT READABLE
         MVC   PATTERN+9(3),NULL(X)  MOVE IN AM/PM INDICATOR
         MVC   HMDTIMED(11),PATTERN+1  MOVE LINE TO OUTPUT BUFFER
         EJECT
*
*  FORMAT THE DATE IN VARIOUS WAYS
*
FORMDAT  EQU   *
         L     R1,DATE        GET TODAYS DATE
         MVC   TEMP2(2),DATE+2  SAVE DAYS DIGITS
         MVC   WORKWORD,DATE    MOVE DATE TO WORKAREA
         MVO   WORKWORD+1(3),WORKWORD(2)  MAKE 00YYDDDS INTO 00000YYS
         UNPK  YEAR(2),WORKWORD+2(2)  MAKE YEAR READABLE
         OI    YEAR+1,GIXF        FIX SIGN
         SR    X,X            CLEAR MONTH REG.
         ST    X,DBLWORK      CNVT YEAR TO BINARY
         MVC   DBLWORK+4(4),WORKWORD
         CVB   R0,DBLWORK     CONVERT IT
         L     R9,MONMSK+8    GET MASK
         LA    R14,3          SET OUTER LOOP
         TM    DATE+1,ONE     IF ODD, NOT LEAP YEAR
         BO    MON1X                                        *HMD 02/80*
         TM    DATE+1,LEAPTM  VALID TILL 1999               *HMD 02/80*
         BM    MON1X          NOT A LEAP YEAR               *HMD 02/80*
         O     R9,FEBFIX
MON1X    ST    X,DBLWORK+4    CLEAR FOR CVB
         MVC   DBLWORK+6(2),TEMP2
         CVB   R0,DBLWORK
         LA    X,ONE
         B     MON2X
MON1     SLL   R14,2
         L     R9,MONMSK-4(R14)   SUBTRACT CODE
         SRL   R14,2          BACK TO ORIGINAL
MON2X    LA    R15,4          SET INNER LOOP
MON2     SR    R8,R8          CLEAR SUBTRACT REG
         SLDL  R8,8           GET NEXT MONTHS LENGTH
         SR    R0,R8          SUB MON LENGTH FROM DATA
         BC    12,MONOVR      OVERDRAW
         LA    X,ONE(X)       INCR MONTH NUMBER
         BCT   R15,MON2       CLOSE INNER LOOP
         BCT   R14,MON1       CLOSE OUTER LOOP
         B     MONOUT
MONOVR   AR    R0,R8
MONOUT   CVD   R0,DBLWORK
         UNPK  DAY(2),DBLWORK+6(2)  GET DAY OF WEEK
         OI    DAY+1,GIXF     FIX SIGN
         LR    R14,X          GET MONTH NUMBER
         MH    R14,KH9        MULTIPLY BY NINE
         LA    R15,MONTAB-9   SET FOR INDEX INTO TABLE
         AR    R14,R15        INDEX MONTH NAME
         MVC   HMDDAYYR(3),NULL(R14) MOVE IN SHORT MONTH NAME
         MVC   HMDMONTH,NULL(R14)  MOVE IN MONTH NAME
         MVI   HMDDAYYR+3,SPACE    MOVE IN SPACE
         MVC   HMDDAYYR+4(2),DAY   MOVE IN DAY
         MVI   HMDDAYYR+6,COMMA    MOVE IN COMMA
         MVC   HMDDAYYR+7(2),CENTURY  MOVE IN YEAR
         MVC   HMDDAYYR+9(2),YEAR  FINISH MOVING IN YEAR
         CVD   X,DBLWORK           PREPARE TO GET MONTH
         UNPK  MONTH(2),DBLWORK+6(2) MAKE IT READABLE
         OI    MONTH+1,GIXF       FIX SIGN
         MVC   HMDENGDT(2),MONTH  MOVE IN MONTH VALUE
         MVI   HMDENGDT+2,SLASH   SEPERATOR
         MVC   HMDENGDT+3(2),DAY  MOVE IN DAY VALUE
         MVI   HMDENGDT+5,SLASH   SEPERATOR
         MVC   HMDENGDT+6(2),YEAR  MOVE IN YEAR VALUE
         EJECT
*
*  THIS WILL GET YOU THE DAY OF THE WEEK
*
DAYOWK   DS    0H
         LR    R14,R0
         XC    DECDATE(4),DECDATE
         MVC   INMY(4),HMDDAYYR+7
         MVC   INMTH,MONTH
         MVC   INDAY,DAY
         PACK  DECMY,INDAY
         CVB   CORR,DECDATE
         PACK  DECMTH,INMTH
         CVB   BINMTH,DECDATE
         IC    BINMTH,FFTBL-1(BINMTH)
         AR    CORR,BINMTH
         PACK  DECMY,INMY
         SP    DECMY,P3
         OI    YRSIGN,FXIG
         ZAP   DECMY,DECYR
         CVB   BINYR,DECDATE
         SR    DVDND,DVDND
         LA    X,3
         D     DVDND,KF100
* CENTURY MOD 4
         NR    QOT,X
         NR    X,RMNDR
         SRA   RMNDR,2
         AR    QOT,RMNDR
         MH    QOT,KH5
         AR    CORR,QOT
         AR    CORR,X
         SR    CORR-1,CORR-1
         D     CORR-1,KF7
         LR    R14,CORR-1
         STH   R14,HMDDAYNO       SAVE ORGIN ZERO DAY NMBR  *HMD 03/85*
         LA    R15,DAYTAB         INDEX                     *HMD 03/85*
         MH    R14,KH9               INTO                   *HMD 03/85*
         AR    R14,R15                  THE TABLE           *HMD 03/85*
         MVC   HMDDAYNM,0(R14)
         LH    R14,HMDDAYNO       MAKE IT ORIGIN ONE        *HMD 03/85*
         AH    R14,KH1                                      *HMD 03/85*
         STH   R14,HMDDAYNO       SAVE ORIGIN ONE DAY NMBR  *HMD 03/85*
         MVC   HMDJULDT(2),YEAR
         MVI   HMDJULDT+2,DOT
         UNPK  HMDJULDT+3(3),TEMP2(2)
         OI    HMDJULDT+5,GIXF
         EJECT
*
*  ALL DONE...GO BACK
*
EXIT     DS    0H                 WE'RE DONE FINALLY
         LR    RPARM,RSAVE
         L     RSAVE,4(,RSAVE)
         FREEMAIN R,LV=HMDLV,A=(RPARM),SP=NINE
         RETURN (14,12),T,RC=0
         EJECT
*
*  CONSTANTS
*
KF100    DC    F'100'             CONSTANT OF 100
KF60     DC    F'60'              CONSTANT OF 60
KF7      DC    F'7'               CONSTANT OF 7
KF0      DC    F'0'               CONSTANT OF ZERO          *HMD 03/85*
KH1      DC    H'1'               CONSTANT OF ONE           *HMD 03/85*
KH5      DC    H'5'               CONSTANT OF 5
KH9      DC    H'9'               CONSTANT OF 9
P3       DC    P'3'               PACKED CONSTANT OF 3
PATURN   DC    X'4020217A20207A2020'   TO EDIT TIME
INDIC    DC    C' AM'             MORNING
         DC    C' PM'             NOON OR NIGHT
CENTURY  DC    C'19'              CENTURY (GOOD TILL YEAR 2000)
         DS    0F                 ALIGN TO FULLWORD
PTERM    DC    X'1200000F'        SUBTRACTED FROM TIME IF AFTERNOON
         DC    X'1300000F'        1300 O'CLOCK
MONMSK   DC    X'1E1F1E1F1F1E1F1F1F1C1F1E'
FFTBL    DC    AL1(0,3,2,5,0,3,5,1,4,6,2,4)  FUDGE FACTOR TABLE
FEBFIX   DC    A(X'00010000') TO FIX LEAP YEARS
* TRICKY TRANSLATE TABLE                                    *HMD 03/85*
FABTAB   DC    X'0708010204050303'                          *HMD 03/85*
         EJECT
*
*   DAY TABLE
*
DAYTAB   DC    CL9'SUNDAY'
         DC    CL9'MONDAY'
         DC    CL9'TUESDAY'
         DC    CL9'WEDNESDAY'
         DC    CL9'THURSDAY'
         DC    CL9'FRIDAY'
         DC    CL9'SATURDAY'
         EJECT
*
*  MONTH TABLE
*
MONTAB   DC    CL9'JANUARY'
         DC    CL9'FEBRUARY'
         DC    CL9'MARCH'
         DC    CL9'APRIL'
         DC    CL9'MAY'
         DC    CL9'JUNE'
         DC    CL9'JULY'
         DC    CL9'AUGUST'
         DC    CL9'SEPTEMBER'
         DC    CL9'OCTOBER'
         DC    CL9'NOVEMBER'
         DC    CL9'DECEMBER'
         TITLE 'STORAGE MAPS FOR HMDCHRON'
TIMESTOR DSECT                    WORKING STORAGE FOR HMDCHRON
SAVEAREA DS    18F                OS/VS STANDARD SAVE AREA
TIME     DS    F                  TIME OF DAY
DATE     DS    F                  DATE (JULIAN PACKED)
DATEG    DS    CL8                DATE (GREGORIAN MM/DD/YY) *HMD 03/85*
*                                                           *HMD 03/85*
DATEWORK DS    CL8                WORK AREA FOR GREG DATE   *HMD 03/85*
*                                                           *HMD 03/85*
* PASSED PARM SAVE AREA                                     *HMD 03/85*
*                                                           *HMD 03/85*
PARMAP   DS    0A                 PASSED PARMS              *HMD 03/85*
ADATE    DS    A                  ADDRESS OF DATE VALUE     *HMD 03/85*
AWORK    DS    A                  ADDRESS OF 'HMDTIME' AREA *HMD 03/85*
PARMLEN  EQU   *-PARMAP           TOTAL PARM LENGTH         *HMD 03/85*
*                                                           *HMD 03/85*
*  PARAMETER LIST FOR JULGREG SUBROUTINE                    *HMD 03/85*
*                                                           *HMD 03/85*
CALLMAC  CALL  ,(NULL,NULL),MF=L                            *HMD 03/85*
*                                                           *HMD 03/85*
*                                                           *HMD 03/85*
JDATE    DS    F                  JULIAN DATE WORK AREA     *HMD 03/85*
GDATE    DS    CL6                YYMMDD - GREGORIAN DATE   *HMD 03/85*
*                                                           *HMD 03/85*
WORKWORD DS    F                  A WORD TO WORK WITH
DBLWORK  DS    D                  A DOUBLE-WORD TO WORK WITH
*                                                           *HMD 03/85*
BIGTIME  DS    0CL11              HH.MM.SS.TH - TIME OF DAY
TIMEHRS  DS    CL2                HH PART OF ABOVE
COLON1   DS    C                  COLON
TIMEMINS DS    CL2                MM PART OF ABOVE
COLON2   DS    C                  COLON
TIMESECS DS    CL2                SS PART OF ABOVE
COLON3   DS    C                  COLON
TIMEHUNS DS    CL2                HH PART OF ABOVE
*                                                           *HMD 03/85*
PATTERN  DS    CL9                FOR EDITING TIME
AMPM     DS    CL3                AM/PM INDICATOR
TEMP2    DS    XL4                TEMPORARY STORAGE AREA
YEAR     DS    CL2                CURRENT YEAR
MONTH    DS    CL2                MONTH NUMBER
DAY      DS    CL2                DAY NUMBER
ALIGN    DS    0D                 ALIGN TO DOUBLEWORD
DECDATE  DS    0PL8               WORK AREA
         DS    4XL1
DECMY    DS    0PL4               WORK AREA
DECYR    DS    PL3
         ORG   DECYR+2            OVERLAY STRUCTURE
DECMTH   DS    0PL2
YRSIGN   DS    PL1
         DS    PL1
INPUT    DS    0F             DSECT FOR CRAZY DAY OF WEEK CODE
DAYY     DS    0ZL1
DATEE    DS    0ZL8
INMY     DS    0ZL6
         DS    ZL4
INMTH    DS    ZL2
INDAY    DS    ZL2
HMDLV    EQU   ((*-TIMESTOR+7)/8)*8  ROUND LENGTH TO DOUBLEWORD
         EJECT
         HMDTIME  ,               RETURN AREA FOR TIME OF DAY
         END
