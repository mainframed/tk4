         TITLE '   T S S O S S S M  '
***********************************************************************
*                                                                     *
*        'TSSOSSSM'                                                   *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA
*        DATE WRITTEN. SEPTEMBER 2 1976.
*        DATE UPDATED. JULY 24 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*            THIS IS THE SUBSYSTEM SUPPORT MODULE FOR TSSO.
*            IT RESIDES IN THE LINK PACK AREA OR IS COPIED TO CSA.
*            NOTE - THERE ARE NO ADDRESS CONSTANTS IN
*            THIS CODE THAT NEED RELOCATION. THEREFORE
*            THE MODULE CAN BE LOADED, THEN COPIED INTO CSA
*            WITHOUT HAVING TO RELOCATE ANY ADDRESS CONSTANTS.
*
*            C A U T I O N
*
*            TSSO REFERENCES SPECIFIC OFFSETS IN THE FIRST
*            50 BYTES OF THIS MODULE. DO NOT CHANGE THE LENGTHS
*            OF ANY FIELDS IN THIS AREA UNLESS TSSO IS ALSO CHANGED.
*
*        LOG OF CHANGES.
*         24JUL81 - INSTEAD OF PLACING EACH COMMAND IN THE SSVT
*            AND REJECTING FURTHER COMMANDS UNTIL TSSO FINISHES
*            PROCESSING THE COMMAND, WE NOW PLACE EACH COMMAND IN
*            A CIRCULAR QUEUE, AND LET TSSO PROCESS THE QUEUE.
*            IF THE QUEUE FILLS UP, WE REJECT THE COMMAND.
*            INSTEAD OF POSTING TSSO FOR EACH COMMAND, WE ONLY
*            ISSUE POST IF THE QUEUE COUNT WAS NEGATIVE BEFORE
*            WE INCREMENTED IT, MEANING TSSO WAS IDLE.
         SPACE
TSSOSSSM START
@ORIGIN  EQU   *
         B     @PROLOG-*(,R15)
         DC    AL1(29),CL13'TSSOSSSM 1.0 '
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  SR    15,15
         BR    14
         DC    AL2(@END-@ORIGIN) LENGTH OF MODULE
*              LENGTH USED BY TSSO TO GETMAIN CSA AND COPY SSSM.
         SPACE
************************************************************
*                                                          *
*        SUBSYSTEM INITIALIZATION CONSTANTS                *
*                                                          *
************************************************************
         SPACE
*              THE FOLLOWING CONSTANTS MUST BEGIN AT
*              OFFSET 40 INTO SSSM. THE INITIALIZATION
*              ROUTINE THAT LOADS SSSM DEPENDS ON IT.
         SPACE
         ORG   @ORIGIN+40
         DC    AL2(VTFCODX-VTFCOD) NUMBER OF FCOD'S
         DC    AL2(VTFCOD-@ORIGIN) OFFSET TO 1ST FCOD
         DC    AL2((VTFRTNX-VTFRTN)/4) NUMBER OF FRTN'S
         DC    AL2(VTFRTN-@ORIGIN) OFFSET TO 1ST FRTN
         DC    AL2(1)              NUMBER OF FUNCTIONS
         SPACE
************************************************************
*                                                          *
*        SUBSYSTEM REQUEST FUNCTION CODE TABLE             *
*                                                          *
************************************************************
         SPACE
VTFCOD   DC    AL1(0)                  1 PROCESS SYSOUT
         DC    AL1(0)                  2 TSO CANCEL
         DC    AL1(0)                  3 TSO STATUS
         DC    AL1(0)                  4 END OF TASK
         DC    AL1(0)                  5 JOB SELECTION
         DC    AL1(0)                  6 ALLOCATION
         DC    AL1(0)                  7 UNALLOCATION
         DC    AL1(0)                  8 END OF MEMORY
         DC    AL1(0)                  9 WTO
         DC    AL1((VTR10-VTR00)/4)   10 COMMAND PROCESSING
         DC    AL1(0)                 11 USERID VALIDITY CHECK
         DC    AL1(0)                 12 JOB DELETION
         DC    AL1(0)                 13 RE-ENQUEUE JOB
         DC    AL1(0)                 14 DOM
         DC    AL1(0)                 15
         DC    AL1(0)                 16 OPEN
         DC    AL1(0)                 17 CLOSE
         DC    AL1(0)                 18 CHECKPOINT
         DC    AL1(0)                 19 RESTART
         DC    AL1(0)                 20 REQUEST JOB ID
         DC    AL1(0)                 21 RETURN JOB ID
VTFCODX  EQU   *
         SPACE
************************************************************
*                                                          *
*        SUPPORT ROUTINE POINTERS MOVED TO SSVT            *
*                                                          *
************************************************************
         SPACE
VTFRTN   DC    0F'0'
VTR00    EQU   *-4
VTR10    DC    A(TSSCMND-@ORIGIN)
VTFRTNX  EQU   *
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        SVC 34 EXIT - COMMANDS                            *
*                                                          *
************************************************************
         SPACE
TSSCMND  DC    0D'0'
         USING *,R12
         B     12(,R15)
         DC    CL8'TSSCMND'
         STM   14,12,12(R13)
         LR    R12,R15             BASE REGISTER
         LR    R8,R0               POINT TO SSCVT
         USING SSCT,R8
         L     R11,SSCTSSVT        POINT TO SSVT
         DROP  R8                  SSCT
         USING SSVT,R11
         LR    R10,R1              POINT TO SSOB
         USING SSOB,R10
         L     R9,SSOBINDV         POINT TO FUNCTION AREA
         L     R4,SSCMBUFF-SSCMBGN(,R9) COMMAND BUFFER
         SPACE
         LH    R5,0(,R4)           GET LENGTH
         CH    R5,=H'140'          OUTRAGEOUS LENGTH?
         BH    S34OEXIT            YES - IGNORE IT
         LTR   R5,R5               NON-POSITIVE LENGTH
         BNP   S34OEXIT            YES - IGNORE
         CLC   4(1,R4),$SVCHAR     MINE?
         BNE   S34OEXIT            NO - IGNORE
         TM    $SVSTUS,$SVSTUST    TERMINATING?
         BO    S34OEXIT            YES - IGNORE
         L     R0,SSCMSCID         GET CONSOLE UCMID
         LR    R1,R0               COPY CONSOLE ID
         SRL   R1,8                SHIFT CONSOLE ID OUT
         LTR   R1,R1               ARE ALL OTHER BYTES ZERO
         BNZ   S34OEXIT            NO, ITS NOT A CONSOLE ID
*        TM    $SVFLAG,X'80'       BUSY WITH PREVIOUS CMD?
*        BO    S34BUSY             YES - BRANCH
*        OI    $SVFLAG,X'80'       CLOSE DOOR ON SUBSEQUENT CMD
         LM    R0,R1,$SVQUEUE      GET NUMBER OF COMMANDS QUEUED
CSLOOP   C     R0,$SVQMAXQ         IS QUEUE FILLED UP
         BNL   S34BUSY             YES, REJECT THE COMMAND
         LR    R2,R0               GET QUEUE NUMBER
         LA    R2,1(,R2)           ADD 1 TO THE QUEUE NUMBER
         L     R3,0(,R1)           POINT TO THE NEXT QUEUE ENTRY
         CDS   R0,R2,$SVQUEUE      INCREMENT $SVQUEUE
         BNZ   CSLOOP              TRY AGAIN IF SOMETHING SNUCK IN
         LR    R8,R1               GET ADDRESS OF CURRENT QUEUE ENTRY
         USING $QENTRY,R8
         MVI   $QECMND,X'40'
         MVC   $QECMND+1(139),$QECMND  BLANK THE COMMAND AREA
         BCTR  R5,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND MVC
         MVC   $QECMND(0),4(R4)    (EXECUTED)
         EX    R5,*-6              COPY THE COMMAND
         MVC   $QECMNDL(4),0(R4)   COPY THE LENGTH
         L     R0,SSCMSCID         GET CONSOLE UCMID
         ST    R0,$QEUCMID         SAVE IT
         TM    $SVFLAG,X'40'       IS 'OK' TO BE SUPPRESSED?
         BO    S34NOACK            YES - BRANCH
         SPACE
         WTO   ,MF=(E,$SVOKWTO)    $ OK
         SPACE
S34NOACK EQU   *
         LTR   R2,R2               WAS $SVQUEUE NEGATIVE BEFORE
         BP    S34MEXIT            NO, BYPASS POST
         LA    R5,$SVPOSTE
         L     R6,$SVPASCB
         LA    R7,S34ERRET
         LA    R1,$SVPOSTL
         SPACE
         POST  (R5),X'111',ASCB=(R6),ERRET=(R7),MF=(E,(1))
         SPACE
S34MEXIT LA    R15,SSCMSUBC        MINE
         B     S34EXIT
S34OEXIT LA    R15,SSCMSCMD        NOT MINE
S34EXIT  ST    R15,SSOBRETN
         LM    14,12,12(R13)
         LA    R15,SSRTOK
         BR    R14
S34BUSY  LA    R15,SSCMIMSG        COULD NOT EXECUTE
         B     S34EXIT             ISSUE IEE707I 'TEXT' NOT EXECUTED
S34ERRET BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
POSTL    POST  5,ASCB=6,ERRET=7,MF=L
         LTORG
@END     DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
CVTPTR   EQU   16
CVT      DSECT
CVTMAP   EQU   *
         ORG   CVTMAP+X'0C4'
CVTSMCA  DS    A
         SPACE 3
         IEFJSSVT
         ORG   SSVTFRTN+(32*4)     ROOM FOR 32 RTN PTRS
$SVSTUS  DS    F
$SVSTUSP EQU   X'80'
$SVSTUST EQU   X'40'
$SVSTUSR EQU   X'20'
$SVCHAR  DS    CL1
$SVCHAT  DS    CL1
$SVFLAG  DS    BL1
         DS    BL1
$SVPOSTP DS    F
$SVPOSTE DS    F
$SVPASCB DS    F
$SVPOSTL DS    3F
$SVACTIV DS    F
$SVOKWTO DS    3F
$SVQMAXQ DS    F
$SVQUEUE DS    2F
$SVQADDR DS    F
$SVSSIB  DS    9F
$SVSSOBA DS    F
$SVSSOB  DS    5F,7F
$SVRRECB DS    F
$SVTSIZE EQU   *-SSVTFRTN          MUST NOT EXCEED 1024
$SVTSIZR EQU   1024-$SVTSIZE       HOW CLOSE TO 1024 ARE WE
         SPACE
$QENTRY  DSECT
$QENEXT  DS    F
$QEUCMID DS    F
$QECMNDL DS    F
$QECMND  DS    CL140
         DS    0F
$QESIZE  EQU   *-$QENTRY
         SPACE 3
         IEFJSCVT
         EJECT
         IEFJSSOB (CM),CONTIG=YES
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
