         TITLE '   T S S O U P S S   '
*$DOC@*****************************************************************
*                                                                     *
*        'TSSOUPSS' - SET SSCTUPSS BIT ON AND START TSSO              *
*                                                                     *
***********************************************************************
         SPACE
*  WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION, MCLEAN VA.
*  INSTALLATION. PRC, MCLEAN VA.
*  DATE WRITTEN. JUNE 10 1982.
*  DATE UPDATED. JUNE 11 1982.
*  ATTRIBUTES. RE-ENTRANT.
*   MUST BE LINK-EDITED WITH AC=1 IN AUTHORIZED LIBRARY.
*  DESCRIPTION.
*   THIS PROGRAM SETS ON THE SSCTUPSS BIT IN THE TSSO SSCT,
*   THEN ISSUES A START COMMAND TO START TSSO.
*
*   THIS ALLOWS TSSO TO BE REGOGNIZED BY JES2 UNDER ITS REAL
*   IDENTITY.  SYSOUT SEPARATOR PAGES WILL HAVE THE JOBNAME 'TSSO'
*   INSTEAD OF 'SYSLOG'.
*
*   AFTER INSTALLING THIS PROGRAM AND THE 'SSSO' PROC BELOW,
*   THE NORMAL WAY TO START TSSO WHEN JES IS RUNNING WILL BE
*       S SSSO
*   INSTEAD OF
*       S TSSO
*
*   THE PARM FIELD SPECIFIES THE NAME OF THE SUBSYSTEM WHOSE
*   SSCT IS TO BE MODIFIED. IF THE PARM FIELD HAS NO SUBSYSTEM
*   NAME THEN AN ERROR MESSAGE WILL BE ISSUED.
*
*   THE FIRST 2 CHARACTERS OF THE PARM ARE OPTION FLAGS.
*   THE FIRST SHOULD BE A '1' IF SSCTUPSS IS TO BE SET ON
*   OR A '0' IF SSCTUPSS IS TO BE SET OFF.
*   THE SECOND SHOULD BE A '1' IF A START COMMAND IS TO BE
*   AUTOMATICALLY ISSUED BY THIS PROGRAM, OR A '0' IF NOT.
*
*   THE NAME OF THE SUBSYSTEM STARTS AT THE THIRD CHARACTER
*   OF THE PARM.
*
*   NOTES ABOUT THE SSCTUPSS BIT. IT STANDS FOR 'USE PRMARY SUBSYSTEM
*    SERVICES' AND TELLS MVS SUBSYSTEM INITIALIZATION ROUTINES THAT
*    THE SUBSYSTEM BEING STARTED IS DEPENDENT ON THE PRIMARY SUBSYSTEM
*    (JES2 OR JES3) FOR ITS SYSOUT. IF THE BIT IS ON, THE SUBSYSTEM IS
*    SUBMITTED TO JES ON THE STCINRDR INSTEAD OF STARTING INDEPENDENTLY
*    OF JES. JES TREATS IT LIKE ANY OTHER STARTED TASK.
*    IF THE SSCTUPSS BIT IS ON AND THE PRIMARY JES IS NOT RUNNING,
*    STARTED TASK CONTROL WILL WAIT FOR JES TO START.
*
*   SUGGESTED PROC NAMED SSSO.
*    //SSSO    PROC BIT=1,S=1,NAME=TSSO
*    //SSSO    EXEC PGM=TSSOUPSS,PARM='&BIT.&START.&NAME'
*
*   SUGGEST YOU ADD SSSO TO THE SUBSYSTEM NAME TABLE, FOR
*    THE FOLLOWING REASON.
*
*    YOU WANT TO BE ABLE TO START TSSO IF JES IS DOWN AND THE
*    SSCTUPSS BIT IS ON. YOU HAVE TO SET THE SSCTUPSS BIT OFF SOMEHOW
*    BEFORE YOU CAN START TSSO INDEPENDENTLY OF JES.
*    IF SSSO IS IN YOUR SUBSYSTEM NAME TABLE, YOU CAN START IT WITH
*              S SSSO,BIT=0,S=0
*    THAT WILL SET THE BIT OFF.  THEN TYPE IN
*              S TSSO,JES=NO
*    NOTE THAT IF SSSO HAS NOT BEEN RUN SINCE IPL, THE SSCTUPSS
*    BIT WILL BE OFF IN THE TSSO SSCT, AND YOU COULD JUST TYPE IN
*              S TSSO,JES=NO
*
*    ANOTHER METHOD WOULD BE TO HAVE AN ALTERNATE TSSO PROC
*    THAT LOOKS EXACTLY LIKE THE TSSO PROC BUT IS NAMED TSSX.
*    TSSX WOULD BE IN THE SUBSYSTEM NAME TABLE TOO. THE
*    SSCTUPSS BIT IN THE TSSX SSCT WOULD NEVER BE SET ON,
*    SO YOU WOULD ALWAYS BE ABLE TO START IT WHEN JES IS DOWN.
*    THE ONLY DISADVANTAGE OF THIS IS IF YOU HAVE SOME SECURITY
*    EXITS THAT GIVE PRIVILEGES TO TSSO THEY WOULD ALSO HAVE
*    TO GIVE PRIVILEGES TO TSSX.
*
*  LOG OF CHANGES.
*   NONE.
*
*$DOC$*****************************************************************
         SPACE
TSSOUPSS START
         USING *,R10
         B     @PROLOG-*(,R15)
         DC    AL1(26),CL10'TSSOUPSS'
         DC    CL16' &SYSDATE &SYSTIME '
SUBPOOL  DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R10,R15
         LR    R2,R1
         SPACE
         L     R0,SUBPOOL
         GETMAIN R,LV=(0)
         SPACE
         LR    R9,R1
         USING @DATA,R9
         SPACE
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9              NEW SAVEAREA POINTER
         SPACE
         MVI   OPTION,C'1'         DEFAULT TO SET BIT ON
         SPACE
         MODESET KEY=ZERO
         SPACE
************************************************************
*                                                          *
*        GET NAME OF SUBSYSTEM FROM PARM FIELD             *
*                                                          *
************************************************************
         SPACE
         L     R1,0(,R2)           POINT TO PARM
         LH    R15,0(,R1)          GET LENGTH OF PARM
         LTR   R15,R15             IS THERE A PARM
         BZ    MISSING             NO, ERROR
         MVC   OPTION(1),2(R1)
         BCT   R15,*+8
         B     MISSING
         MVC   AUTOCMD(1),3(R1)
         BCT   R15,*+8
         B     MISSING
         MVC   JBID,=CL4' '        FILL WITH BLANKS
         CH    R15,=H'4'
         BNH   *+8
         LH    R15,=H'4'           SET LENGTH TO 4
         BCTR  R15,0
         B     *+10
         MVC   JBID(0),4(R1)
         EX    R15,*-6
         SPACE
************************************************************
*                                                          *
*        FIND THE SUBSYSTEM CVT (SSCT) FOR TSSO            *
*                                                          *
************************************************************
         SPACE
         L     R3,16               CVTPTR
         USING CVT,R3
         L     R4,CVTJESCT         JES CONTROL TABLE
         USING JESCT,R4
         SPACE
         CLC   JBID,JESPJESN       IS SOMEBODY PLAYING DANGEROUS GAMES
         BE    EXIT0               YES, WE DONT WANT TO DO THAT
         SPACE
         LA    R4,JESSSCT-(SSCTSCTA-SSCT) POINT TO SSCT HEAD
         USING SSCT,R4
ISSCTL   ICM   R4,15,SSCTSCTA      POINT TO NEXT SSCT
         BZ    NOTFOUND            IF END, EXIT
         CLC   SSCTSNAM,JBID       IS THIS OURS?
         BE    UPSS                YES - BRANCH
         B     ISSCTL              NO - LOOP
         SPACE
NOTFOUND MVC   WTOW(IM01L),IM01
         MVC   WTOW+4(4),JBID
         WTO   MF=(E,WTOW)
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*        SET THE SSCTUPSS BIT ON OR OFF                    *
*                                                          *
************************************************************
         SPACE
UPSS     CLI   OPTION,C'0'
         BE    UPSS0
UPSS1    OI    SSCTFLG1,SSCTUPSS
         B     STSSO
UPSS0    NI    SSCTFLG1,255-SSCTUPSS
         SPACE
************************************************************
*                                                          *
*         ISSUE START COMMAND                              *
*                                                          *
************************************************************
         SPACE
STSSO    EQU   *
         CLI   AUTOCMD,C'0'
         BE    EXIT0
         SPACE
         MVC   COMMANDW(COMMANDL),COMMAND
         MVC   COMMANDW+6(4),JBID
         SPACE
         MODESET MODE=SUP
         SPACE
         LA    R0,0                CONSOLE ID
         LA    R1,COMMANDW
         SVC   34
         SPACE
         MODESET MODE=PROB
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*         TERMINATE                                        *
*                                                          *
************************************************************
         SPACE
MISSING  WTO   MF=(E,IM02)
         LA    R15,12
         B     *+6
EXIT0    SR    R15,R15
         LR    R2,R13              SAVE R13 FOR FREEMAIN
         L     13,4(,13)           POINT TO PREVIOUS SAVE AREA
         ST    15,16(,13)          SAVE R15 FOR LM
         SPACE
         MODESET KEY=NZERO
         SPACE
         LR    R1,R2               AREA TO BE FREEMAINED
         L     R0,SUBPOOL
         FREEMAIN R,LV=(0),A=(1)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
IM01     WTO   'XXXX SUBSYSTEM NAME NOT DEFINED',ROUTCDE=(2),MF=L
IM01L    EQU   *-IM01
         SPACE
IM02     WTO   'SUBSYSTEM NAME NOT IN PARM FIELD',ROUTCDE=(2),MF=L
IM02L    EQU   *-IM02
         SPACE
COMMAND  DC    0H'0',AL2(COMMANDL,0)
         DC    C'S XXXX'
COMMANDL EQU   *-COMMAND
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
OPTION   DS    C
AUTOCMD  DS    C
JBID     DS    CL4                 SUBSYSTEM NAME
COMMANDW DS    0F,XL80             SUBSYSTEM NAME
WTOW     DS    0F,XL128
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
************************************************************
*                                                          *
*         MAP OF CVT                                       *
*                                                          *
************************************************************
         SPACE
CVTPTR   EQU   16
CVT      DSECT
CVTMAP   EQU   *
         ORG   CVT+X'128'
CVTJESCT DS    A
         SPACE
         IEFJESCT
         SPACE 3
         IEFJSCVT
         SPACE 3
         IEFJSSVT
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
