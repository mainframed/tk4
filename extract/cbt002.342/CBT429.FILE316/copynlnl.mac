         TITLE ' C O P Y N L N L  '                           10/97 SBG
*------------------------------------------------------------------*
*                                                                  *
*        THIS IS COPYNLNL, A PGM USED TO COPY SELECTED FILES  10/97 SBG
*        FROM A NL TO AN NL TAPE, ALL CONTROL IS VIA SYSIN    10/97 SBG
*        CARDS.                                                    *
*                                                             01/93 SBG
*   THIS PROGRAM IS NOT-REENTRANT AND NOT-REUSABLE, ETC.      01/93 SBG
*   BECAUSE IT MODIFIES ITSELF QUITE EXTENSIVELY (SBG).       01/93 SBG
*                                                                  *
* COURTESY:  JIM MARSHALL, CAPT, USAF-RET                          *
*                                                                  *
* ADAPTED FOR NL TO NL COPYING BY:   SAM GOLOB                     *
*                                                                  *
* ORIGINAL PROGRAM WAS COPYFILE, OR COPYSLSL, WHICH WAS WRITTEN    *
*        BY MR FRANK YATES, AEROSPACE CORP WHILE AT MULTIPURPOSE   *
*        FACILITY, LOWRY AFB, CO FOR USE IN OS/MVT.                *
*                                                                  *
* NOTES:    1. LKED AC=1                                           *
*           2. NEEDS APPENDAGE IGG019WE                            *
*           3. NEEDS SUBROUTINE MSGWRITE                           *
*                                                                  *
* CHANGE LOG:   (CONTROL CARDS ARE THE SAME AS FOR COPYFILE)       *
*                                                                  *
*    12 MAR 74 - ADDED WORD 'ALL' AS A VALID OPTION ON THE         *
*                CONTROL CARDS.                                    *
*    22 AUG 81 - INSTALLED AIR FORCE DATA SERVICES CENTER,         *
*                PENTAGON, WASHINGTON D.C. WITH FOLLOWING CHANGES  *
*                1. CLEANED UP CODE AND DOCUMENTED CODE ( WILL     *
*                   CONTINUE AS THE CODE IS SLICK AND FRANK        *
*                   WROTE IT FOR HIMSELF).                         *
*                2. CHANGED CONTROL CARD SCAN TO ONLY LOOK AT      *
*                   72 COLUMNS VERSUS 80. MPF HAD NO TSO.          *
*                3. INSTALLED AND YOU MUST MARK IT AUTHORIZED      *
*                   TO RUN IM MVS.                                 *
*                4. CHANGED SOME UNIQUE SAVE AND RETURN MACROS     *
*                   TO STANDARD IBM MACROS.                        *
*                5. IN MVS YOU MUST SUPPLY DSNAMES ON THE JCL      *
*                   FOR BOTH INPUT AND OUTPUT DD CARDS. THEY ARE   *
*                   NOT USED BUT MUST BE THERE  ( WITH MVT YOU     *
*                   YOU CAN LEAVE THOSE OUT ).                     *
*                6. CREATED DOCUMENTATION IN A SEPARATE MEMBER.    *
*                   LOOK AT COPYFIL#. THIS WAS TAKEN FROM MY BOOK  *
*                   'KING JAMES VERSION OF THE HOLY YATES'.        *
*    10 OCT 81 - PRINTOUT TELLING YOU WHAT FILE WAS COPIED TO      *
*                WHAT FILE WAS ONLY SETUP FOR LESS THAN 99 FILES   *
*                NOW WILL HANDLE UP TO 999 FILES.                  *
*    27 JAN 93 - ADDED SUPPORT TO COPY MULTIPLE CONSECUTIVE FILES  *
*                BUT NOT TO THE END OF THE TAPE.  LAST INPUT FILE  *
*                IS CODED AFTER A DASH.  E.G.  101/101 -200        *
*                WHICH COPIES FILES 101 THRU 200 FROM ONE TAPE     *
*                TO THE OTHER.                                     *
*    26 MAR 00 - WROTE COPYNLNL PROGRAM, LEAVING ALL THE      03/00 SBG
*                CONTROL CARD LOGIC INTACT AND UNCHANGED.          *
*                THIS PROGRAM ASSUMES AN NL INPUT TAPE,            *
*                AND DOESN'T HAVE SPECIFIC KNOWLEDGE               *
*                ABOUT STANDARD LABELS AS YET.  OUTPUT IS          *
*                AN NL TAPE AS WELL.                               *
*    27 MAR 00 - ADDED EYECATCHER.                            03/00 SBG
*    29 MAR 00 - FIXED LOOPING THROUGH GETMAIN - TESTED BY    03/00 SBG
*                TOM BRENNAN.  THANKS, TOM.                        *
*                                                                  *
*      THE JCL USED TO EXECUTE THE UTILITY FOLLOWS:                *
*                                                                  *
*          //COPY     EXEC PGM=COPYNLNL,REGION=2000K          03/00 SBG
*          //MSG      DD SYSOUT=A                                  *
*          //IN       DD DSN=INPUT.FILES,UNIT=TAPE,                *
*          //            DISP=OLD,VOL=SER=XXXXXX                   *
*          //TAPELIN  DD DSN=OUTPUT.FILES,UNIT=TAPE,               *
*          //            DISP=(,KEEP),VOL=SER=YYYYYY               *
*          //SYSIN    DD *                                         *
*            ----  CONTROL  CARDS  ----                            *
*          /*                                                      *
*-$DOC$------------------------------------------------------------*
         SPACE
         SPACE
COPYNLNL AMODE 24                                             10/97 SBG
COPYNLNL RMODE 24                                             10/97 SBG
COPYNLNL CSECT
         USING *,R15                                          SBG 03/00
         B     EYECATCH                                       SBG 03/00
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00
         DC    C'COPYNLNL - NL TO NL TAPE FILE COPY PROGRAM - '   03/00
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'---'          SBG 03/00
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00
         STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R11,4095(,R12)                                 10/97 SBG
         LA    R11,1(,R11)
         DROP  R15                                            SBG 03/00
         USING COPYNLNL,R12,R11                               10/97 SBG
         LR    R15,R13                OLD SAVE AREA ADDRESS
         LA    R13,SAVEAREA           NEW SAVE AREA ADDRESS
         ST    R15,4(R13)             LINK SAVE AREAS
         ST    R13,8(R13)             LINK SAVE AREAS
         B     INITS                  BRANCH AROUND SAVEAREA
SAVEAREA DC    18F'0'                 YE OLDE SAVE AREA       10/97 SBG
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
INITS    MVI   TMFLAG,X'00'        MAKE SURE FLAG IS INITTED
OPEN     OPEN  SYSIN
         TM    SYSIN+48,X'12'      TEST FOR SUCCESSFUL OPEN.
         BNO   RETURN
         RDJFCB IN
         MVI   INJFCB+66,X'10'     BYPASS LABEL PROCESSING.
         LOAD  EP=IGG019WE         GET CHANNEL END APPENDAGE.
         OPEN  IN,TYPE=J
         RDJFCB OUT
         MVI   OUTJFCB+66,X'10'    BYPASS LABEL PROCESSING.
EXCP1    EXCP  STARTS              REWIND INPUT TAPE          03/00 SBG
         WAIT  ECB=ECB1
         TM    ECB1,X'7F'
         BO    SW1
         DC    H'0'                ABEND.
SW1      DS    0H                                             10/97 SBG
         MVC   INVOL1+4(6),INJFCB+118    GET INPUT VOLSER FROM JCL
Q1       OPEN  (OUT,OUTPUT),TYPE=J
         EXCP  STARTN                                         10/97 SBG
         WAIT  ECB=ECB8                                       10/97 SBG
         TM    ECB8,X'7F'                                     10/97 SBG
         BO    Q4                                             10/97 SBG
         DC    H'0'                ABEND.                     10/97 SBG
Q4       EQU   *
         TM    OUTJFCB+118,X'FF'   TEST FOR SCRATCH OUTPUT.
         BNO   NOTSCRT                                        10/97 SBG
         MVC   OUTVOL1+4(6),=C'SCRTCH'    USE OVOL OF SCRTCH  10/97 SBG
         B     Q4A                        START WRITING MSGS  10/97 SBG
NOTSCRT  MVC   OUTVOL1+4(6),OUTJFCB+118   TRUST JCL TO SUPPLY 10/97 SBG
*                                      NAME OF OUTPUT VOLSER  10/97 SBG
* ----------------------------------  NOW START WRITING MSGS  03/00 SBG
Q4A      EQU   *
         MSG '***NL TO NL FILES ARE BEING COPIED FROM VOL=SER=',C'1',  X
               (C,INVOL1,6,4),' TO VOL=SER=',(C,OUTVOL1,6,4)
         MVI   MSGCC,C'0'          DOUBLE SPACE THE NEXT MESSAGE.
         LA    R7,1                REG 7 = CURRENT INPUT FILE NO.
         LA    R8,1                REG 8 = CURRENT OUTPUT FILE NO.
         SPACE 2
LOOP     BAL   R10,CONTROL          GET FILE NUMBERS.
LEP1     BAL   R10,COPY             COPY A FILE.
         MSG 'FILE ',(D,INFILE,3),' WAS COPIED TO FILE ',(D,OUTFILE,3)
         MVI   MSGCC,C' '          SINGLE SPACE SUBSEQUENT LINES.
ALLSW    B     LOOP
*   THIS STUFF IS EXECUTED WHEN ALLSW IS NOP'ED.              01/93 SBG
LEP2     ST    7,INFILE            DO THE NEXT FILE.
         ST    8,OUTFILE
         L     R1,LINFILE     GET LAST INPUT FILE IF THERE    01/93 SBG
         LTR   R1,R1               IS A POSTIV NUMBER THERE?  01/93 SBG
         BZ    LEND                NO. COPY ALL FILES TO EOT  01/93 SBG
         CR    R7,R1               HAVE WE EXCEEDED THE LIMIT 01/93 SBG
         BNH   LEND                NO. KEEP ON COPYING        01/93 SBG
         B     STOP                YES. WRITE FINAL TAPE MARK 01/93 SBG
*                                    AND END THE OPERATION.   01/93 SBG
LEND     B     LEP1
         SPACE 2
STOP     EXCP  TAPEMARK            WRITE A 2ND. TAPE MARK.
         WAIT  ECB=ECB7
         CLOSE (IN,,OUT)
TAPELSW  B     RETURN
RETURN   EQU   *
         L     R13,4(R13)
         RETURN (14,12),RC=0
         SPACE 2
CONTROL  BC    0,OLDCARD
GETCARD  GET   SYSIN,CARD          READ A CONTROL CARD.
         OI    CONTROL+1,X'F0'
         MVC   COLUMN,=A(CARD-1)   RESET COLUMN.
OLDCARD  L     R1,COLUMN           REG 1 = CARD COLUMN
         LA    R14,CARD+71         REG 14 = END OF CARD ADDRESS
FINDWORD LA    R1,1(R1)
         CR    R1,R14              TEST FOR END OF CARD.
         BH    GETCARD
         CLI   0(1),C' '           TEST FOR BLANK.
         BE    FINDWORD            IF BLANK, LOOK AGAIN.
         CLI   0(1),C'-'           IS IT A DASH ?             01/93 SBG
         BE    CQ3                 YES. COPY A BUNCH OF FILES 01/93 SBG
         CLC   =C'ALL',0(R1)       REG 1 = ADDRESS OF NEXT WORD
         BNE   CQ1
         NI    ALLSW+1,15          COPY ALL THE REST OF THE FILES.
         B     LEP2
         SPACE 3                                              01/93 SBG
* --------   CODE TO HANDLE MULTIPLE FILES, NOT TO LAST ONE.  01/93 SBG
CQ3      LR    R15,R1              USE R15 TO SEARCH          01/93 SBG
         LA    R15,1(,R15)         BUMP PAST DASH             01/93 SBG
         LR    R1,R15              TELL R1 YOU'RE THERE TOO   01/93 SBG
         CR    R15,R14             IS DASH LAST COLUMN?       01/93 SBG
         BH    GETCARD             YES. BASICALLY IGNORE IT.  01/93 SBG
FINDLIN  CLI   0(R15),C' '         IS BLANK AFTER DASH?       01/93 SBG
         BNE   GETLIN              NO. GET LAST INFILE NUMBER 01/93 SBG
         LR    R1,R15      REDUNDANT, BUT MAKE SURE R1 PROPER 01/93 SBG
         B     FINDWORD    TREAT ISOLATED DASH AS A BLANK     01/93 SBG
GETLIN   LA    R15,1(,R15)         BUMP PAST NON-BLANK        01/93 SBG
         CR    R15,R14             END OF CARD?               01/93 SBG
         BNH   GETCONT             NO. KEEP SEARCHING FOR #   01/93 SBG
         B     GETLLEN             YES. GET NUMBER NOW        01/93 SBG
GETCONT  CLI   0(R15),C' '         DELIMITING BLANK?          01/93 SBG
         BNE   GETLIN              NO, LOOK FURTHER.          01/93 SBG
GETLLEN  SR    R15,R1              GET LENGTH OF NUMBER       01/93 SBG
         BCTR  R15,0               SUBTRACT 1 FOR EXECUTE     01/93 SBG
         EX    R15,PACK            PACK THE NUMBER            01/93 SBG
         CVB   R0,WORK             CONVERT TO BINARY          01/93 SBG
         ST    R0,LINFILE          GET LAST INPUT FILE NUMBER 01/93 SBG
         NI    ALLSW+1,15          BLAST AWAY COPYING FILES   01/93 SBG
         B     LEP2        BRANCH. DISCONNECTS FROM NEXT CODE 01/93 SBG
* --------   CODE TO HANDLE MULTIPLE FILES, NOT TO LAST ONE.  01/93 SBG
         SPACE 3                                              01/93 SBG
CQ1      LR    R15,R1              REG 15 = ADDRESS OF FIRST FILE NO.
FINDSL   LA    R15,1(R15)          LOOK FOR THE /.
         CR    15,14               TEST FOR END OF CARD.
         BH    MOD1                OUTPUT FILE IS NOT SPECIFIED.
         CLI   0(15),C' '          TEST FOR BLANK.
         BE    MOD1                OUTPUT FILE IS NOT SPECIFIED.
         CLI   0(15),C'/'          TEST FOR /.
         BNE   FINDSL
         LA    2,1(15)             REG 2 = ADDRESS OF SECOND FILE NO.
         SR    R15,R1              REG 15 = LENGTH OF FIRST FILE NO.
         BCTR  15,0
         EX    15,PACK
         CVB   0,WORK
         ST    0,INFILE
         LR    R1,R2               REG 1 = ADDRESS OF SECOND FILE
FINDEND  LA    R2,1(R2)
         CR    2,14                TEST FOR END OF CARD.
         BNH   Q2
         NI    CONTROL+1,15        ENABLE GETCARD.
         B     FOUNDIT
Q2       CLI   0(2),C' '           TEST FOR BLANK.
         BNE   FINDEND
FOUNDIT  ST    2,COLUMN            RESET COLUMN FOR NEXT SEARCH.
         SR    R2,R1               REG 2 = LENGTH OF SECOND FILE NO.
         BCTR  2,0
         EX    2,PACK
         CVB   0,WORK
         ST    0,OUTFILE
         BR    R10
MOD1     EQU   *                  MOD #1.  AUTOMATIC OUTPUT FILE NO.
         ST    15,COLUMN          RESET COLUMN FOR NEXT SEARCH.
         SR    R15,R1             REG 15 = LANGTH OF FILE NO.
         BCTR  15,0               REG 15 = LENGTH CODE
         EX    15,PACK
         CVB   0,WORK
         ST    0,INFILE
         L     1,OUTFILE
         LA    1,1(1)             ADVANCE OUTPUT FILE NO.
         ST    1,OUTFILE
         BR    R10
         SPACE 2
COPY     BC    0,LOADFLES         SKIP AFTER GETTING BUFFERS  SBG 03/00
GETBUFRS DS    0H                 GETMAIN FOR BUFFERS ONCE    SBG 03/00
         L     R2,=F'65535'       FORCE LARGEST BLOCKSIZE
         ST    R2,BLKSIZE         SAVE IT AS THE BLKSIZE
         STH   R2,CCW5+6          SET READ BLKSIZE - GOOD TO 64K
         SLL   R2,1               REG 2 = POOLSIZE (BLKSIZE * 2)
         ST    R2,POOLSIZE        MULTIPLIED BY 2
         LR    R0,R2              LOAD REG 0 FOR GETMAIN
         GETMAIN R,LV=(0)
         ST    R1,POOLAD          SAVE POOL ADDRESS.
         OI    COPY+1,X'F0'       BRANCH AROUND - NEXT PASS   SBG 03/00
LOADFLES L     R2,INFILE   \  ELIMINATES DEPENDENCY OF THEIR  01/93 SBG
         L     R3,OUTFILE  /   BEING NEXT TO EACH OTHER.      01/93 SBG
*        LM    2,3,INFILE         GET DESIRED FILE NUMBERS.
SKIPOUT  DS    0H                                             10/97 SBG
Q5       CR    R3,R8
         BE    SKIPIN
         LA    R8,1(,R8)           ADVANCE OUTPUT FILE NO.
         EXCP  SKIPN                                          10/97 SBG
         WAIT  ECB=ECB9                                       10/97 SBG
         TM    ECB9,X'7F'                                     10/97 SBG
         BO    Q5
         B     ABEND100
SKIPIN   DS    0H                                             10/97 SBG
Q5A      CR    R2,R7                TEST INPUT FILE NO.
         BE    Q7A                TAPES POSITIONED - DO COPY
         LA    R7,1(,R7)             ADVANCE INPUT FILE NO.
         EXCP  SKIPS                                          10/97 SBG
         WAIT  ECB=ECB4
         TM    ECB4,X'7F'
         BO    Q5A
         DC    H'0'
Q7A      L     R1,POOLAD          LOAD POOL ADDRESS.
         ST    R1,CCW5            PUT BUFFER ADDRESS INTO CCW5.
         L     R2,BLKSIZE         GET MAXIMUM BLOCKSIZE       SBG 03/00
         STH   R2,CCW5+6          SET READ BLKSIZE - GOOD TO 64K
         MVI   CCW5,2             RESTORE COMMAND CODE IN HIGH ORDER
         A     R1,BLKSIZE         POINT TO SECOND BUFFER
         ST    R1,CCW6            PUT BUFFER ADDRESS INTO CCW6.
         MVI   CCW6,1             RESTORE COMMAND CODE IN HIGH ORDER
         SPACE 2
COPYDATA EQU   *
         MVI   ECB6,X'7F'         POST WRITE ECB FOR STARTERS
*                                 BECAUSE YOU'RE STARTING WITH JUST
*                                 A READ, AND WAITING ON BOTH ECB'S
COPYLOOP EXCP  RDATA              READ A DATA BLOCK.
         WAIT 2,ECBLIST=ECBLIST   WAIT FOR READ AND WRITE TO COMPLETE.
         TM    ECB5,X'7F'
         BO    TESTTM
         B     ABEND300
TESTTM   TM    RDATA+12,X'01'     TAPE MARK DETECTED?
         BNO   RNOTMK             NO, REAL READ. TURN OFF TMFLAGS.
         TM    TMFLAG,X'01'       ALREADY READ A TAPE MARK?
         BNO   FLAGTM1            YES. THIS IS SECOND ONE.
         OI    TMFLAG,X'02'       SHOW TWO IN A ROW.
         B     STOP               GO FINISH PROCESSING
FLAGTM1  OI    TMFLAG,X'01'       MARK THAT A TAPE MARK WAS READ
         B     EODAD              GO WRITE THE OUTPUT TM AND BUMP
RNOTMK   MVI   TMFLAG,X'00'       CLEAR TAPE MARK FLAGS IF REAL
*                                 DATA HAS BEEN READ.
ROK      TM    ECB6,X'7F'         WAS THE READ OK?
         BO    WOK                YES, GO WRITE.
         B     ABEND400
WOK      L     R0,CCW5            SWITCH BUFFERS.
         L     R1,CCW6
         ST    R0,CCW6
         MVI   CCW6,1             RESTORE COMMAND CODE.
         ST    R1,CCW5
         MVI   CCW5,2             RESTORE COMMAND CODE.
*        LH    R1,CCW5+6          GET INPUT BLKSIZE.
*  -----    CHANGE HALFWORD ARITHMETIC TO FULLWORD.
         XC    FULLWRK1,FULLWRK1  CLEAR FULLWORK WORKAREA
         MVC   HALFWRK1(2),CCW5+6   INPUT BLKSIZE
         L     R1,FULLWRK1        PROPERLY LOAD REGISTER, TO 64K
*        SH    R1,RDATA+14        SUBTRACT UNUSED BYTES.
*  -----    CHANGE HALFWORD ARITHMETIC TO FULLWORD.
         XC    FULLWRK2,FULLWRK2  CLEAR FULLWORK WORKAREA
         MVC   HALFWRK2(2),RDATA+14   UNUSED BYTES
         S     R1,FULLWRK2        FULLWORD SUBTRACTION
         BZ    COPYLOOP           END OF DATA FILE, BUT WE TRY
*                                 ANOTHER READ, WHICH WILL DETECT
*                                 THE TAPEMARK, AND THEN WE WILL
*                                 END THE FILE AND WRITE A TAPEMARK
*                                 TO THE OUTPUT TAPE.
         STH   R1,CCW6+6          SET OUTPUT BLKSIZE.
*  -----    THIS IS RIGHT, BECAUSE STH STORES THE ENTIRE HALFWORD.
         EXCP  WDATA              WRITE A DATA BLOCK.
         B     COPYLOOP
         SPACE 2
EODAD    EXCP  TAPEMARK           WRITE THE END-OF-DATA TAPEMARK.
         WAIT  ECB=ECB7
         TM    ECB7,X'7F'
         BO    BUMPFILE
         B     ABEND500
         SPACE 2
BUMPFILE LA    R7,1(,R7)             ADVANCE FILE NUMBERS.
         LA    R8,1(,R8)
         BR    10                 RETURN.
         SPACE 2
ABEND100 ABEND 100
ABEND200 ABEND 200
ABEND300 ABEND 300
ABEND400 ABEND 400
ABEND500 ABEND 500
ABEND600 ABEND 600
         SPACE 2
***DATA AREA
         DS    0D               START ON DWORD BOUNDARY
FULLWRK1 DS    0F               FULLWORD WORK AREA
         DC    H'0'
HALFWRK1 DC    H'0'             HALFWORD WORK AREA
FULLWRK2 DS    0F               FULLWORD WORK AREA
         DC    H'0'
HALFWRK2 DC    H'0'             HALFWORD WORK AREA
BLKSIZE  DC    F'0'
CARD     DC    CL80' '          CONTROL CARD
COLUMN   DC    F'0'             STARTING COLUMN FOR WORD SEARCH
TMFLAG   DC    X'00'            ALREADY READ ONE TAPEMARK?
DSN      DC    CL17' '
INFILE   DC    F'0'
OUTFILE  DC    F'0'
LINFILE  DC    F'0'             LAST INPUT FILE IF DASH USED  01/93 SBG
LABEL1   DC    CL80' '
LABEL2   DC    CL80' '
INVOL1   DC    CL80' '
OUTVOL1  DC    CL80' '
PACK     PACK  WORK,0(0,1)
MINMAX   DC    A(160,131070)     MIN AND MAX USEFUL POOL SIZES
POOLAD   DC    F'0'             ADDRESS OF BUFFER POOL
POOLSIZE DC    F'0'
POOL2    DC    F'0'             ADDRESS OF LABEL POOL
WORK     DC    D'0'
SYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=STOP,DDNAME=SYSIN
         DC    D'0'
IN       DCB   MACRF=E,EXLST=INEXLST,CENDA=WE,DDNAME=IN
         DC    D'0'
OUT      DCB   MACRF=E,EXLST=OUTEXLST,DDNAME=TAPELIN
INEXLST  DC    X'87',AL3(INJFCB)
OUTEXLST DC    X'87',AL3(OUTJFCB)
INJFCB   DC    44F'0'
OUTJFCB  DC    44F'0'
         SPACE 2
ECBLIST  DC    A(ECB5),X'80',AL3(ECB6)
ECB1     DC    F'0'
ECB2     DC    F'0'
ECB3     DC    F'0'
ECB4     DC    F'0'
ECB5     DC    F'0'
ECB6     DC    F'0'
ECB7     DC    F'0'
ECB8     DC    F'0'                                           10/97 SBG
ECB9     DC    F'0'                                           10/97 SBG
STARTS   DC    X'40000000',A(ECB1,0,0,CCW8,IN,0,0)            10/97 SBG
STARTN   DC    X'40000000',A(ECB8,0,0,CCW8,OUT,0,0)           10/97 SBG
RSKIPTM  DC    X'40000000',A(ECB2,0,0,CCW2,IN,0,0)
WSKIPTM  DC    X'40000000',A(ECB3,0,0,CCW3,OUT,0,0)
SKIPS    DC    X'40000000',A(ECB4,0,0,CCW9,IN,0,0)            10/97 SBG
SKIPN    DC    X'40000000',A(ECB9,0,0,CCW9,OUT,0,0)           10/97 SBG
RDATA    DC    X'40000000',A(ECB5,0,0,CCW5,IN,0,0)
WDATA    DC    X'40000000',A(ECB6,0,0,CCW6,OUT,0,0)
TAPEMARK DC    X'40000000',A(ECB7,0,0,CCW7,OUT,0,0)
CCW1     CCW   7,0,X'60',1     REWIND.
         CCW   2,INVOL1,X'20',80      READ A VOLUME LABEL.
CCW2     CCW   X'3F',0,X'20',1        SKIP A TAPE MARK.
CCW3     EQU   *
CCW7     CCW   X'1F',0,X'60',1        WRITE A TAPE MARK.
         CCW   X'C3',0,X'20',1        NO OP
CCW4     CCW   X'3F',0,X'60',1        SKIP A FILE.  3 CCW'S   10/97 SBG
         CCW   X'3F',0,X'60',1
CCW9     CCW   X'3F',0,X'20',1        SKIP AN NL FILE         10/97 SBG
CCW5     CCW   2,0,X'20',0            READ A DATA BLOCK.
CCW6     CCW   1,0,X'20',0            WRITE A DATA BLOCK.
CCW8     CCW   7,0,X'20',1            REWIND.
         LTORG
         END
