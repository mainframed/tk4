*----------------------------------------------------------------------
*
*        FIND PTF'S THAT HAVE BEEN APPLIED THAT ARE IN ERROR
*
*        ORGINAL AUTHOR - MICHAEL GEARING
*                         SOFTWARE CONSULTANT
*                         FIRST INTERSTATE SERVICES
*                         PORTLAND, OREGON
*
*        PUBLISHED - TECHNICAL SUPPORT
*                    THE OFFICIAL MAGAZINE OF THE NATIONAL
*                    SYSTEMS PROGRAMMERS ASSOCIATION
*                    VOL. 2, NO. 5, MAY 1988
*
*        AUTHOR - RICH VIPOND
*                 BALCOR/AMERICAN EXPRESS
*                 SKOKIE, ILLINOIS
*
*        MODIFIED BY - CAPTAIN PAUL J. WALDOWSKI
*                      UNITED STATES AIR FORCE
*
*----------------------------------------------------------------------
PELIST   CSECT
         SAVE  (14,12)
         LR    12,15                   STANDARD LINKAGE CONVENTIONS
         USING PELIST,12
         ST    13,SAVE+4
         LA    14,SAVE
         ST    14,8(13)
         LR    13,14
*----------------------------------------------------------------------
*        PROCESS INPUT PARM
*----------------------------------------------------------------------
         L     3,0(,1)                 LOAD REG 3 WITH POINTER TO PARM
         LH    4,0(,3)                 LOAD REG 4 WITH LENGTH OF PARM
         BCTR  4,0                     SUBTRACT 1 FOR EXEC MVC LENGTH
         B     EXECWTO                 BRANCH AROUND EXECUTE TARGET
EXMVC1   MVC   WTOPARM+15(0),2(3)      EXECUTE TARGET
EXECWTO  EX    4,EXMVC1                MOVE PARM TO WTO
WTOPARM  WTO   'PARM =                    '
         B     EXCPARM                 BRANCH AROUND EXECUTE TARGET
EXMVC2   MVC   ZONENAME(0),2(3)        EXECUTE TARGET
EXCPARM  EX    4,EXMVC2                MOVE ZONE NAME TO KEY
         OPEN  (GLBLCSI,(INPUT))
         TM    GLBLCSI+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (TARGCSI,(INPUT))
         TM    TARGCSI+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (DISTCSI,(INPUT))
         TM    DISTCSI+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (WRKDISK,(OUTPUT))
         TM    WRKDISK+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
*----------------------------------------------------------------------
*        SEPARATE TARGET ZONE AND DISTRIBUTION ZONE NAMES
*----------------------------------------------------------------------
SEPZONE  DS    0H
         LA    5,7                     POSSIBLE 7 POSITION NAME
         LA    15,TZONAME              FIRST POSITION OF TZONE NAME
         LA    2,ZONENAME              FIRST POSITION OF PARAMETER AREA
CHKTNAM  DS    0H
         CLI   0(2),C','               END OF NAME ?
         BE    ENDNAM                      YES
         MVC   0(1,15),0(2)            MOVE ONE POSITION OF TZONE NAME
         LA    15,1(15)                ADD ONE
         LA    2,1(2)                  ADD ONE
         BCT   5,CHKTNAM               IF NOT END GO MOVE NEXT POS
ENDNAM   DS    0H
         LA    2,1(2)                  ADD ONE
         MVC   DZONAME,0(2)            MOVE DZONE NAME
*----------------------------------------------------------------------
*        FIND THE TARGET ZONE RECORD THAT HAS A HEX NUMBER IN IT THAT
*        IS USED AS PART OF THE KEY TO THAT TARGET ZONE.
*----------------------------------------------------------------------
FINDTZ   GET   RPL=TARGSEQ             GET RECORD
         LTR   15,15                   TEST FOR GOOD RETURN CODE
         BNZ   ERROR                   IF BAD RETURN CODE, ABEND
         CLC   TARGETZ,=X'000002'      TEST IF WE'RE PAST ZONE RECORDS
         BNH   FINDTZ2                 IF WE ARE, TELL US
         WTO   'THERE IS NO TARGET ZONE TO MATCH THE INPUT PARM',      +
               ROUTCDE=(11)
         B     STOP2                   GO FINISH UP
FINDTZ2  EQU   *
         CLC   TZONAME,TARGETS         COMPARE THE ZONE NAMES
         BNE   FINDTZ                  NOT THE ONE WE WANT
         MVC   TZONKEY,TARGETH         SAVE THE ZONE KEY
         MVC   TARGHEX,TZONKEY         MOVE ZONE HEX NUMBER TO TARGET
         EJECT
*----------------------------------------------------------------------
*        FIND THE DISTRIBUTION ZONE RECORD THAT HAS A HEX NUMBER IN IT
*        THAT IS USED AS PART OF THE KEY TO THAT DISTRIBUTION ZONE.
*----------------------------------------------------------------------
FINDDZ   GET   RPL=DISTSEQ             GET RECORD
         LTR   15,15                   TEST FOR GOOD RETURN CODE
         BNZ   ERROR                   IF BAD RETURN CODE, ABEND
         CLC   TARGETZ,=X'000002'      TEST IF WE'RE PAST ZONE RECORDS
         BNH   FINDDZ2                 IF WE ARE, TELL US
         WTO   'THERE IS NO DIST   ZONE TO MATCH THE INPUT PARM',      +
               ROUTCDE=(11)
         B     STOP2                   GO FINISH UP
FINDDZ2  EQU   *
         CLC   DZONAME,DISTS           COMPARE THE ZONE NAMES
         BNE   FINDDZ                  NOT THE ONE WE WANT
         MVC   DZONKEY,DISTH           SAVE THE ZONE KEY
         MVC   DISTHEX,DZONKEY         MOVE ZONE HEX NUMBER TO DIST
         EJECT
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT
*        THE FIRST GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
SETUP    DS    0H
         POINT RPL=GLBLSEQ             POSITION TO GLOBAL ZONE START
         LTR   15,15                   TEST FOR GOOD RETURN CODE
         BNZ   ERROR                   IF BAD RETURN CODE, ABEND
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT
*        IS A HOLD TYPE SYSMOD.
*----------------------------------------------------------------------
READGLB  DS    0H
         GET   RPL=GLBLSEQ             GET RECORD
         LTR   15,15                   TEST FOR GOOD RETURN CODE
         BNZ   ERROR                   IF BAD RETURN CODE, ABEND
         CLC   GLOBALK,ZONE26          LAST GLOBAL SYSMOD RECORD?
         BNE   SETEOF                  IF LAST SYSMOD RECORD, END
         CLI   GLOBALF,X'F4'           HOLD TYPE SYSMOD?
         BNE   READGLB                 IF NOT, KEEP LOOKING
*----------------------------------------------------------------------
*        ONCE WE HAVE A HOLD TYPE SYSMOD, SEE IF IT APPLIED
*        IN OUR TARGET ZONE.
*----------------------------------------------------------------------
         MVC   TARGSYS,GLOBALP         MOVE HOLD PTF
         GET   RPL=TARGDIR             FIND OUT IF THE HELD PTF IS IN
         LTR   15,15                     THE TARGET ZONE
         BNZ   READGLB                 IF IT'S ON, FALL THRU
*----------------------------------------------------------------------
*        JUST BECAUSE THE HELD PTF IS APPLIED DOESN'T MEAN IT IS
*        ON IN ERROR.  THE APAR NUMBER THAT THE PTF IS BEING HELD FOR
*        MAY HAVE BEEN VALIDLY SUPERCEDED BY ANOTHER PTF.
*        TO CHECK THIS OUT, SEE IF THE APAR IN ERROR IS APPLIED
*        IN OUR TARGET ZONE.  IF IT IS, THEN WE KNOW THAT THE HELD
*        PTF IS ON IN ERROR.
*----------------------------------------------------------------------
         MVC   TARGSYS,GLOBALE         MOVE ERROR APAR
         GET   RPL=TARGDIR             FIND OUT IF THE ERROR APAR IS IN
         LTR   15,15                     THE TARGET ZONE
         BZ    READGLB                 YES - THEN IT IS SUPERCEDED
*----------------------------------------------------------------------
*        CREATE WORK DISK FILE
*----------------------------------------------------------------------
         MVC   WDISKS,GLOBALP          PTF IN ERROR
         MVC   WDISKE,GLOBALE          FIXING APAR
         PUT   WRKDISK,WDISK           WRITE WORK DISK RECORD
         B     READGLB                 GET NEXT RECORD
*----------------------------------------------------------------------
*        ROUTINE TO DETERMINE ACTION TO BE TAKEN...
*----------------------------------------------------------------------
SETEOF   DS    0H
         MVI   EOFSW,C'Y'              VALID EOF REACHED
CHKWORK  DS    0H
         CLOSE (GLBLCSI,,TARGCSI,,WRKDISK,,DISTCSI)
         LTR   15,15                   GOOD CLOSE?
         BNZ   ERROR                   NO - ABEND
         OPEN  (GLBLCSI,(INPUT))
         TM    GLBLCSI+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (TARGCSI,(INPUT))
         TM    TARGCSI+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (REPORT,(OUTPUT))
         TM    REPORT+48,X'10'         GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (DISTCSI,(INPUT))
         TM    DISTCSI+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (DISKIN,(INPUT))
         TM    DISKIN+48,X'10'         GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
*----------------------------------------------------------------------
         MVC   REPRTS,=C' P E   '
         MVC   REPRTE,=C'A P A R'
         MVC   REPRTF,=C' F I X '
         MVC   REPRTM,=C'ACTION TO BE TAKEN                      '
         PUT   REPORT,REPRT            WRITE A RECORD
*----------------------------------------------------------------------
         MVC   TARGHEX,TZONKEY
         MVI   TARGHEX-1,X'00'
         MVI   TARGHEX+1,X'26'
         MVC   SUPDHEX,DZONKEY
         MVI   SUPDHEX-1,X'00'
         MVI   SUPDHEX+1,X'26'
         MVI   SUPDPE+7,C' '
         MVC   SUPDPE+8,=X'26010000'
         MVC   SUPDPE+12,=C'UNKNOWN'
         MVC   DISTHEX,DZONKEY
         MVI   DISTHEX-1,X'00'
         MVI   DISTHEX+1,X'26'
         EJECT
*----------------------------------------------------------------------
*        READ WORK FILE...
*----------------------------------------------------------------------
READWRK  DS    0H
         MVI   FIXFND,C'N'             RESET FIX FOUND SWITCH
         CLI   EOFSW,C'N'              VALID EOF REACHED ?
         BE    ENDRPT                        NO
*----------------------------------------------------------------------
         GET   DISKIN,WDISK            READ RECORD
         MVC   REPRTS,WDISKS           PTF IN ERROR
         MVC   REPRTE,WDISKE           FIXING APAR
*----------------------------------------------------------------------
*        POSITION OURSELVES INTO THE GLOBAL ZONE AT THE FIRST
*        GLOBAL ZONE SYSMOD RECORD.
*----------------------------------------------------------------------
CHKFIX   DS    0H
         POINT RPL=GLBLSEQ             POSITION TO GLOBAL ZONE START
         LTR   15,15                   OK ?
         BNZ   ERROR                   NO - ABEND
*----------------------------------------------------------------------
*        LOOK AT EACH GLOBAL ZONE SYSMOD RECORD TO SEE IF IT IS THE
*        CORRECTING PTF FOR THIS APAR FIX...
*----------------------------------------------------------------------
APARFIX  DS    0H
         GET   RPL=GLBLSEQ             GET RECORD
         LTR   15,15                   TEST FOR GOOD RETURN CODE
         BNZ   ERROR                   IF BAD RETURN CODE, ABEND
         CLC   GLOBALK,ZONE26          LAST GLOBAL SYSMOD RECORD?
         BNE   NOFIX                       YES
         CLI   GLOBAL,X'A5'            SUPING APAR ?
         BNE   APARFIX                 NO - KEEP LOOKING
         CLC   GLOBALE,WDISKE          PTF FIX FOR APAR ?
         BNE   APARFIX                 NO - KEEP LOOKING
         MVC   REPRTF,GLOBALP          FIXING PTF
         MVI   FIXFND,C'Y'             FIX FOUND !
         B     CHKSUPD                 CHECK TO SEE IF IT IS SUPD
NOFIX    DS    0H
         MVC   REPRTF,=C'       '
         MVI   FIXFND,C'N'             FIX NOT FOUND
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING SYSMOD, BEGIN CHECK FOR SUPERCEDED
*        PE IN OUR TARGET ZONE.
*----------------------------------------------------------------------
CHKSUPD  DS    0H
         MVC   SUPDPE,WDISKS           PE PTF
         GET   RPL=TARGSUP             SEE IF IT IS IN THE TZONE
         LTR   15,15                   FIND IT?
         BNZ   CHKACC                  NO - OKAY
         CLI   FIXFND,C'Y'             WAS A FIX FOUND?
         BNE   FIXNFND                       NO
         MVC   REPRTM,MESS4            PE SUPD IGNORE FIX
         B     READWRK                 GET NEXT RECORD
*        B     PRTRPT                  USE TO PRINT SUPERCEDED PE
FIXNFND  DS    0H
         MVC   REPRTM,MESS5            PE SUPD
         B     READWRK                 GET NEXT RECORD
*        B     PRTRPT                  USE TO PRINT SUPERCEDED PE
*----------------------------------------------------------------------
*        ONCE WE HAVE A FIXING PTF THAT HAS NOT BEEN SUPERCEDED,
*        SEE IF PE IS ACCEPTED INTO OUR DISTRIBUTION ZONE...
*----------------------------------------------------------------------
CHKACC   DS    0H
         CLI   FIXFND,C'Y'             WAS A FIX FOUND ?
         BE    CONTCHK                      YES
         MVC   REPRTM,MESS3            FIX NOT ON SYSTEM
         B     PRTRPT
CONTCHK  DS    0H
         MVC   DISTSYS,WDISKS          MOVE HOLD PTF
         GET   RPL=DISTDIR             SEE IF IT IS IN THE DIST ZONE
         LTR   15,15                   FIND IT ?
         BNZ   NOACC                   NO - OKAY
         MVC   REPRTM,MESS1            APPLY FIX
         B     PRTRPT
NOACC    DS    0H
         MVC   REPRTM,MESS2            RESTORE PE OR APPLY FIX
         B     PRTRPT
*----------------------------------------------------------------------
*        PRINT REPORT
*----------------------------------------------------------------------
PRTRPT   DS    0H
         CLC   REPRTS,LASTPTF          ANOTHER APAR AFFECTS THIS PE?
         MVC   LASTPTF,REPRTS          PREPARE FOR NEXT PTF IN ERROR
         BNE   COUNTER                 NO, INCREMENT PE COUNTER
         MVC   REPRTS,=C'.......'      BLANK PTF IN ERROR FIELD
         MVC   REPRTM,BLANKS40         BLANK MESSAGE FIELD
         PUT   REPORT,REPRT            WRITE A RECORD
         B     READWRK                 GET NEXT RECORD
COUNTER  EQU   *
         PUT   REPORT,REPRT            WRITE A RECORD
         AP    COUNT,=P'1'             ADD ONE
         B     READWRK                 GET NEXT RECORD
         EJECT
*----------------------------------------------------------------------
*        END OF REPORT ROUTINE
*----------------------------------------------------------------------
ENDRPT   DS    0H
         MVC   REPRTS,=C'_______'
         MVC   REPRTE,=C'_______'
         MVC   REPRTF,=C'_______'
         MVC   REPRTM,=C'________________________________________'
         PUT   REPORT,REPRT            WRITE A RECORD
         MVC   REPRTS,=C'*ZONES*'
         MVC   REPRTE,TZONAME
         MVC   REPRTF,DZONAME
         MVC   REPRTM,=C'PRINT AND READ MCS FOR ALL FIXES        '
         PUT   REPORT,REPRT            WRITE A RECORD
*----------------------------------------------------------------------
         UNPK  WTO+23(7),COUNT         UNPACK COUNT INTO WTO
         OI    WTO+29,X'F0'            SET SIGN
WTO      WTO   'RECORD COUNT = NNNNNNN'
         CLOSE (GLBLCSI,,TARGCSI,,DISKIN)
         CLOSE (DISTCSI,,REPORT)
         EJECT
*----------------------------------------------------------------------
*        BUILD SMPE TARGET ZONE SMPCNTL FILE
*----------------------------------------------------------------------
SMPET    DS    0H
         OPEN  (SMPEIN,(INPUT))
         TM    SMPEIN+48,X'10'         GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
         OPEN  (SMPCNTL,(OUTPUT))
         TM    SMPCNTL+48,X'10'        GOOD OPEN ?
         BNO   BADOPEN                 NO - ABEND
*----------------------------------------------------------------------
         MVC   SETBDYZ,TZONAME         TARGET ZONE NAME
         PUT   SMPCNTL,SETBDY          WRITE SET BOUNDARY STATEMENT
*----------------------------------------------------------------------
         MVC   LASTPTF,=C'       '     RESET LASTPTF VARIABLE TO BLANKS
LISTSYSM EQU   *
         GET   SMPEIN,WDISK            READ RECORD
         CLC   WDISKS,LASTPTF          ANOTHER APAR AFFECTS THIS PE?
         MVC   LASTPTF,WDISKS          PREPARE FOR NEXT PTF IN ERROR
         BNE   LISTSTMT                NO, WRITE A LIST SYSMOD STMT.
         B     LISTSYSM                GET THE NEXT RECORD
LISTSTMT EQU   *
         MVC   SMPEPE,WDISKS           PTF IN ERROR
         PUT   SMPCNTL,LISTSYS         WRITE A LIST SYSMOD STATEMENT
         B     LISTSYSM                GET THE NEXT RECORD
ENDSMPE  EQU   *
         CLOSE (SMPEIN,,SMPCNTL)
         EJECT
*----------------------------------------------------------------------
*        RETURN CONTROL TO MVS/XA
*----------------------------------------------------------------------
STOP2    EQU   *
         L     13,SAVE+4
         RETURN (14,12),RC=0           DONE
*----------------------------------------------------------------------
*        ERROR ROUTINES
*----------------------------------------------------------------------
ERROR    EQU   *
         ABEND 16,DUMP                 DUMP WITH USER CODE 16
BADOPEN  EQU   *
         ABEND 20,DUMP                 DUMP WITH USER CODE 20
*
*----------------------------------------------------------------------
ZONE26   DC    XL3'000026'
*----------------------------------------------------------------------
*
GLOBAL   DS    0CL142
GLOBALK  DC    CL3' '
GLOBALP  DC    CL7' '
         DC    CL2' '
*
GLOBALF  DC    CL1' '                  X'F4' = HOLD ERROR
*                                      X'F5' = SYSTEM HOLD
*                                      X'F7' = SOURCE ID
*                                      X'A5' = SUPS THIS APAR
         DC    CL2' '
GLOBALE  DC    CL7' '
         DC    CL120' '
*----------------------------------------------------------------------
ZONENAME DC    CL15' '
TZONAME  DC    CL7' '
DZONAME  DC    CL7' '
LASTPTF  DC    CL7' '
BLANKS40 DC    CL40' '
*----------------------------------------------------------------------
SUPDKEY  DS    0CL23
         DC    XL1'00'
SUPDHEX  DC    XL1'00'
         DC    XL1'26'
SUPDPE   DC    CL7' '
         DC    CL1' '
         DC    XL1'26'
         DC    XL1'01'
         DC    XL2'0000'
         DC    CL8'UNKNOWN'
*----------------------------------------------------------------------
TARGKEY  DS    0CL10
         DC    XL1'00'
TARGHEX  DS    XL1
         DC    XL1'26'
TARGSYS  DC    CL7' '
*----------------------------------------------------------------------
TARGET   DS    0CL142
TARGETZ  DC    CL3' '
TARGETE  DC    CL7' '
         DC    CL2' '
TARGETF  DC    CL1' '                  X'01' = SUPD IF TARGETS=UNKNOWN
*                                      X'12' = SUPD BY TARGETS
         DC    CL2' '
TARGETS  DC    CL7' '
         DC    CL120' '
*----------------------------------------------------------------------
         ORG   TARGET
         DS    CL4
TARGETH  DS    CL1
         ORG
*----------------------------------------------------------------------
DISTKEY  DS    0CL10
         DC    XL1'00'
DISTHEX  DC    XL1'00'
         DC    XL1'26'
DISTSYS  DC    CL7' '
*----------------------------------------------------------------------
DISTRIB  DS    0CL142
DISTZ    DC    CL3' '
DISTE    DC    CL7' '
         DC    CL2' '
DISTF    DC    CL1' '
         DC    CL2' '
DISTS    DC    CL7' '
         DC    CL120' '
*----------------------------------------------------------------------
         ORG   DISTRIB
         DS    CL4
DISTH    DS    CL1
         ORG
*----------------------------------------------------------------------
WDISK    DS    0CL80
WDISKS   DC    CL7' '                  PTF IN ERROR
WDISKE   DC    CL7' '                  APAR FIX
         DS    CL66' '
*----------------------------------------------------------------------
SETBDY   DS    0CL80
         DC    CL9' SET BDY('
SETBDYZ  DC    CL7' '
         DC    CL2').'
         DC    CL62' '
*----------------------------------------------------------------------
LISTSYS  DS    0CL80
         DC    CL14' LIST SYSMOD ('
SMPEPE   DC    CL7' '
         DC    CL2').'
         DC    CL57' '
*----------------------------------------------------------------------
REPRT    DS    0CL80
         DC    CL2' '
REPRTS   DC    CL7' '                  PTF IN ERROR
         DC    CL2' '
REPRTE   DC    CL7' '                  APAR FIX
         DC    CL2' '
REPRTF   DC    CL7' '                  FIXING PTF
         DC    CL2' '
REPRTM   DC    CL40' '                 ACTION TO BE TAKEN
         DC    CL11' '
*----------------------------------------------------------------------
MESS1    DC    CL40'APPLY FIXING PTF'
MESS2    DC    CL40'RESTORE PTF IN ERROR OR APPLY FIXING PTF'
MESS3    DC    CL40'FIXING PTF NOT ON SYSTEM * CALL SUPPORT'
MESS4    DC    CL40'PE HAS BEEN SUPD * FIX CAN BE IGNORED'
MESS5    DC    CL40'PE HAS BEEN SUPD'
*----------------------------------------------------------------------
SAVE     DS    18F'0'                  STANDARD SAVE AREA
COUNT    DC    PL4'0'                  RECORD COUNTER
EOFSW    DC    CL1'N'                  END OF FILE SWITCH
FIXFND   DC    CL1'N'                  FIXING PTF FOUND SWITCH
TZONKEY  DC    XL1'00'                 TARGET ZONE KEY
DZONKEY  DC    XL1'00'                 DISTRIBUTION ZONE KEY
*----------------------------------------------------------------------
GLBLCSI  ACB   AM=VSAM,                                                +
               MACRF=(KEY,SEQ,DIR,IN),                                 +
               STRNO=1,                                                +
               BUFNI=4,                                                +
               BUFND=11,                                               +
               DDNAME=GLBLCSI,                                         +
               EXLST=CSIEXIT
*
TARGCSI  ACB   AM=VSAM,                                                +
               MACRF=(KEY,SEQ,DIR,IN),                                 +
               STRNO=1,                                                +
               BUFNI=4,                                                +
               BUFND=2,                                                +
               DDNAME=TARGCSI,                                         +
               EXLST=CSIEXIT
*
DISTCSI  ACB   AM=VSAM,                                                +
               MACRF=(KEY,SEQ,DIR,IN),                                 +
               STRNO=1,                                                +
               BUFNI=4,                                                +
               BUFND=2,                                                +
               DDNAME=DISTCSI,                                         +
               EXLST=CSIEXIT
*
GLBLSEQ  RPL   ACB=GLBLCSI,                                            +
               AM=VSAM,                                                +
               OPTCD=(KEY,SEQ,KEQ,GEN,MVE),                            +
               KEYLEN=3,                                               +
               ARG=ZONE26,                                             +
               AREA=GLOBAL,                                            +
               AREALEN=142
*
TARGDIR  RPL   ACB=TARGCSI,                                            +
               AM=VSAM,                                                +
               OPTCD=(KEY,DIR,NSP,KEQ,GEN,MVE),                        +
               KEYLEN=10,                                              +
               ARG=TARGKEY,                                            +
               AREA=TARGET,                                            +
               AREALEN=142
*
TARGSEQ  RPL   ACB=TARGCSI,                                            +
               AM=VSAM,                                                +
               OPTCD=(KEY,SEQ,MVE),                                    +
               AREA=TARGET,                                            +
               AREALEN=142
*
TARGSUP  RPL   ACB=TARGCSI,                                            +
               AM=VSAM,                                                +
               OPTCD=(KEY,DIR,NSP,KEQ,GEN,MVE),                        +
               KEYLEN=23,                                              +
               ARG=SUPDKEY,                                            +
               AREA=TARGET,                                            +
               AREALEN=142
*
DISTDIR  RPL   ACB=DISTCSI,                                            +
               AM=VSAM,                                                +
               OPTCD=(KEY,DIR,NSP,KEQ,GEN,MVE),                        +
               KEYLEN=10,                                              +
               ARG=DISTKEY,                                            +
               AREA=DISTRIB,                                           +
               AREALEN=142
*
DISTSEQ  RPL   ACB=DISTCSI,                                            +
               AM=VSAM,                                                +
               OPTCD=(KEY,SEQ,MVE),                                    +
               AREA=DISTRIB,                                           +
               AREALEN=142
*
CSIEXIT EXLST  AM=VSAM,                                                +
               EODAD=READWRK
*
WRKDISK  DCB   DDNAME=WRKDISK,                                         +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=6160,                                           +
               MACRF=PM
*
DISKIN   DCB   DDNAME=WRKDISK,                                         +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=6160,                                           +
               EODAD=ENDRPT,                                           +
               MACRF=GM
*
SMPEIN   DCB   DDNAME=WRKDISK,                                         +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=6160,                                           +
               EODAD=ENDSMPE,                                          +
               MACRF=GM
*
SMPCNTL  DCB   DDNAME=SMPCNTL,                                         +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=6160,                                           +
               EODAD=STOP2,                                            +
               MACRF=PM
*
REPORT   DCB   DDNAME=REPORT,                                          +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=6160,                                           +
               MACRF=PM
*
         END   PELIST
