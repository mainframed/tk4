         TITLE   'U A D S O R T'
*--------------------------------------------------------------------*
*
*        U A D S O R T
*
*        UADSORT IS DESIGNED TO READ SYS1.UADS AND PRINT THE
*        FOLLOWING:
*        USERID, ACCT INFO, LOGON PROCS, PCF DATA, AND
*        ATTRIBUTES SUCH AS OPER, ACCT, JCL, AND MOUNT.
*
*        UADSORT HANDLES 6 OR 7 CHARACTER USERIDS
*        UADSORT HANDLES MULTIPLE LOGON PROCS
*        UADSORT DOES NOT PRINT THE PASSWORD
*
*        IT PREVENTS UNAUTHORIZED USE.
*
*        WRITTEN BY CAPT PAUL E. SCHAFER
*        AIR FORCE DATA SERVICES CENTER, PENTAGON, WASHINGTON, D.C.
*
*        LAST UPDATE BY AUTHOR  APRIL 1982 TO DOCUMENT AND ADD
*        CODE TO PRINT ATTRIBUTES.
*        RUNS ON MVS/SP VERSION 1 RELEASE 1
*
*        JCL FOR USE:
*
*        //UADSORT  EXEC  PGM=UADSORT
*        //UADS     DD  DISP=SHR,DSN=SYS1.UADS
*        //SYSPRINT DD DSN=&&CARD1,UNIT=SYSDA,SPACE=(CYL,(1,1)),
*        //  DISP=(,PASS),DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)
*
*        THE FOLLOWING ARE THE UADS POINTER ARRANGEMENTS AS CAN BE
*        FOUND IN GY28-6771-1, IBM S/360 OS TSO COMMAND PROCESSOR
*        PLM  VOLUME 1  ACCOUNT IF YOU CARE TO DIG.
*
*     HEADER BLOCK
*     --------------------------------
* +4  USERID                         ×
* +16 USER ATTRIBUTES (SYS)          ×
* +18 USER ATTRIBUTES (INSTALLATION) ×
* +24 PTR PASSWORD OFFSET BLOCK      ×
*     --------------------------------
*
*     PASSWORD OFFSET BLOCK
*     --------------------------------
*  +0 PTR NEXT PASSWORD OFFSET BLOCK ×
*  +4 PTR ACCOUNT NUMBER OFFSET BLOCK×
*  +8 PTR PASSWORD DATA BLOCK        ×
*     --------------------------------
*
*                           PASSWORD DATA BLOCK
*                           ----------------------------
*                        +0 # OF REF                   ×
*                        +4 PASSWORD  (8 BYTES)        ×
*                           ----------------------------
*
*     ACCOUNT OFFSET BLOCK
*     --------------------------------
*  +0 PTR NEXT ACCT OFFSET BLOCK     ×
*  +4 PTR PROC NAME OFFSET BLOCK     ×
*  +8 PTR ACCT DATA BLOCK            ×
*     --------------------------------
*
*                           ACCOUNT NUMBER DATA BLOCK
*                           ----------------------------
*                        +0 # OF REF                   ×
*                                                      ×
*                       +44 LENGTH OF ACCOUNT NUMBER   ×
*                       +45 ACCOUNT NUMBER             ×
*                           ----------------------------
*
*     PROCEDURE NAME OFFSET BLOCK
*     --------------------------------
*  +0 PTR NEXT PROC OFFSET BLOCK     ×
*                                    ×
*  +8 PTR PROC DATA BLOCK            ×
*     --------------------------------
*
*                           PROCEDURE DATA BLOCK
*                           ----------------------------
*                        +0 # OF REF                   ×
*                        +4 LOGON PROC NAME (8 BYTES)  ×
*                                                      ×
*                       +16 UNIT NAME (8 BYTES)        ×
*                           ----------------------------
*
*------------------------------------------------------------------*
         SPACE
         MACRO
         SETR
         LCLA  &A
&A       SETA  0
.S       ANOP
R&A      EQU   &A
&A       SETA  &A+1
         AIF   (&A NE 16).S
         MEND
         SPACE
UADSSORT CSECT
         PRINT NOGEN
         SETR
         SPACE
         STM   R14,R12,12(R13)  .
         BALR  R12,R0            .
         USING *,R12              .
         ST    R13,SAVE+4          .    SAVE LOGIC
         LA    R8,SAVE            .
         ST    R8,8(R13)         .
         LR    R13,R8           .
         SPACE
         LA    R4,JOBNADDR              SECURITY CHECK
         EXTRACT (R4),'S',FIELDS=TIOT      FOR
         L     R5,JOBNADDR                   UNAUTHORIZED USERS
         MVC   LCBUSRJB,0(R5)
         CLC   LCBUSRJB(5),=C'SS02J'
         BE    OKTOREAD
         ABEND 69              NO DUMP, UNAUTHORIZED USER
         SPACE
OKTOREAD EQU   *
         L     R10,=A(UADSPO)
         USING IHADCB,R10
*
*        O P E N   D A T A   S E T S
         OPEN  (UADSPS,,UADSPO,,SYSPRINT,(OUTPUT))
         SPACE
         LH    R0,DCBBLKSI             LOAD UADS BLOCKSIZE
         GETMAIN  R,LV=(0)       GET STORAGE FOR INPUT AREA
         LR    R3,R1       SAVE ADDR OF STORAGE AREA
         SPACE
*
*        R E A D   T H E   D I R E C T O R Y
READDIR  EQU   *
         READ  DECB,SF,UADSPS,DIR,256
         CHECK DECB
         LA    R8,DIR          PT TO DIRECTORY
         LH    R7,0(R8)        LENGTH OF DIRECTORY USED
         BCTR  R7,0            SUBTRACT 1
         BCTR  R7,0            SUBTRACT 1 MORE FOR REAL LENGTH
         LA    R8,2(R8)        POINT TO A REAL PART OF DIR
         XR    R9,R9
         SPACE
DIRLOOP  EQU   *
         CLC   0(4,R8),=XL8'FFFFFFFFFFFFFFFF'   END OF DIRECTORY?
         BE    EOJ
         MVC   TTRC(4),8(R8)    SAVE TTR OF MEMBER
         MVI   TTRC+3,X'00'
         POINT UADSPO,TTRC
*
*        R E A D   T H E   M E M B E R
         READ  PDSECB,SF,UADSPO,(3)
         CHECK PDSECB
         CLI   11(R3),C'1'   8TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
         CLI   11(R3),C' '   8TH CHAR OF MEMBER END IN ' '?
         BNE   CONT
         CLI   10(R3),C'1'   7TH CHAR OF MEMBER END IN '1'?
         BNL   CONTDIR
CONT     EQU   *
         MVC   ACCT(9),HEX40     BLANK OUT ACCT FIELD
         SPACE
*
*        S T A R T   B Y   G E T T I N G   U S E R I D
         MVC   USID(7),4(R3)    SAVE USERID
         CLI   11(R3),X'40'    IS THIS A SHORT USERID (6 CHAR)?
         BNE   ATTRIBS
         MVI   USID+6,X'40'    FOR 6 CHAR USERIDS
ATTRIBS  EQU   *
*
*        U S E R   A T T R I B U T E S   (SYS)
         MVC   AUTHB(4),16(R3)        SAVE AUTHORIZATIONS
         TM    AUTHB,X'80'            OPER?
         BZ    TESTACCT
         MVC   OPER(4),=CL4'OPER'
TESTACCT EQU   *
         TM    AUTHB,X'40'            ACCT?
         BZ    TESTJCL
         MVC   ACCOUNT(4),=CL4'ACCT'
TESTJCL  EQU   *
         TM    AUTHB,X'20'            JCL?
         BZ    TESTMOUN
         MVC   JCL(3),=CL3'JCL'
TESTMOUN EQU   *
         TM    AUTHB,X'10'            MOUNT?
         BZ    DOPCF
         MVC   MOUNT(5),=CL5'MOUNT'
*
*        U S E R   A T T R I B U T E S   (INSTALLATION)
*        P R O C E S S   P C F   D A T A
DOPCF    EQU   *
         MVN   DATA(1),18(R3)     .
         PACK  18(1,R3),18(1,R3)   .
         MVN   COMMON(1),18(R3)     .  FOR PCF DATA
         MVN   VOL2(1),19(R3)       .
         PACK  19(1,R3),19(1,R3)   .
         MVN   VOL1(1),19(R3)     .
*
*        GET PASSWORD, ACCT, & LOGON PROC
         L     R4,24(R3)        OFFSET TO PSWD OFFSET BLOCK
         LR    R6,R3            XTRA COPY OF ENTRY
         AR    R6,R4            ABS ADDR - PASSWORD OFFSET BLOCK
         L     R1,8(R6)         GET OFFSET OF PASSWORD
         AR    R1,R3
         MVC   PASSWORD(8),4(R1)
         L     R5,4(R6)         POINTER TO ACCT OFFSET BLOCK
         AR    R5,R3            ABS ADDR - ACCT OFFSET BLOCK
         ST    R5,SAVER5        SAVE REG 5
         L     R11,8(R5)        OFFSET TO ACCT DATA BLOCK
         AR    R11,R3           ABS ADDR - ACCT DATA BLOCK
         LA    R11,0(R11)
         L     R5,44(R11)       LENGTH IN HIGH ORDER
         SRL   R5,24      GET LENGTH OF ACCT FIELD
         S     R5,=F'1'         SUB 1 PRIOR TO EXECUTE
         EX    R5,MOVE     GET PROGRAMMER NAME FROM ACCT FIELD
         L     R5,SAVER5        RESTORE REG 5
         L     R11,4(R5)        OFFSET TO PROC NAME OFFSET BLOCK
         AR    R11,R3
         LA    R11,0(R11)
NEXTPROC EQU   *
         L     R5,8(R11)        PTR TO PROC DATA BLOCK
         AR    R5,R3             ABS ADDR - PROC DATA BLOCK
         MVC   PROC(8),4(R5)     SAVE LOGON PROC
         PUT   SYSPRINT,OUTRECD   PUT OUT RECORD NOW
         L     R6,0(R11)
         SLL   R6,4             GET RID OF HIGH ORDER BIT &
         SRL   R6,4                 BRING BACK
         C     R6,=F'0'         ANOTHER LOGON PROC?
         BE    CONTDIR          ZERO IN CHAIN FLAGS?
         AR    R6,R3
         LR    R11,R6
         B     NEXTPROC
*
*        CONTINUE DIRECTORY SEARCH
CONTDIR  EQU   *
         MVC   OUTRECD+43(36),HEX40
         IC    R9,11(R8)      PICK UP INDICATORS
         LA    R8,12(R8)       POINT TO USER DATA
         SH    R7,=H'12'       DECREMENT AMT USABLE DIR LEFT
         SLL   R9,27           KILL HI ORDER BIT OF IND
         SRL   R9,26           MOVE BACK AND *2 FOR HALFWORDS
         AR    R8,R9           UPDATE DIRECTORY POINTER
         SR    R7,R9           DECREMENT AMT LEFT COUNTER
         BNP   READDIR
         B     DIRLOOP
*
*        LETS CLOSE UP AND GO HOME
EOJ      EQU   *
         CLOSE (UADSPS,,UADSPO,,SYSPRINT)
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         LA    R15,0
         BR    R14
*
*        S Y N A D   E X I T
ERROREND EQU   *
         LA    R15,2008
         ABEND (15),DUMP
         SPACE
MOVE     MVC   ACCT(*-*),45(R11)      MOVE ACCOUNT FIELD
           EJECT
*
*        S T O R A G E   A N D   C O N S T A N T S
TTRC     DS    F
SAVE     DS    18F      SAVE AREA
DIR      DS    0D,256X
JOBNADDR DS    F        JOB NAME ADDRESS
LCBUSRJB DS    CL8      SUBMITTER
SAVER5   DS    F        FOR SAVING REG 5
HEX40    DC    CL36' '  BLANKS
AUTHB    DS    F        BITS FOR AUTHORIZATIONS
         SPACE
OUTRECD  DS    0CL80    OUTPUT RECORD
USID     DC    CL7' '
         DC    CL3' '
PASSWORD DC    CL8' '
         DC    CL2' '
ACCT     DC    CL16' '
         DC    CL1' '
PROC     DC    CL8' '
         DC    CL1' '
COMMON   DC    B'11110000'
DATA     DC    B'11110000'
VOL1     DC    B'11110000'
VOL2     DC    B'11110000'
         DC    CL1' '
OPER     DC    CL4' '
         DC    CL1' '
ACCOUNT  DC    CL4' '
         DC    CL1' '
JCL      DC    CL3' '
         DC    CL1' '
MOUNT    DC    CL5' '
         DC    CL10' '
*
*        D C B   D E F I N I T I O N S
UADSPS   DCB   MACRF=R,DSORG=PS,DDNAME=UADS,EODAD=EOJ,RECFM=U
         SPACE
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,BLKSIZE=80,         X
               DDNAME=SYSPRINT
         SPACE
UADSPO   DCB   MACRF=R,DSORG=PO,DDNAME=UADS,SYNAD=ERROREND
         SPACE
         LTORG
         DCBD  DSORG=PO,DEVD=DA
         END
