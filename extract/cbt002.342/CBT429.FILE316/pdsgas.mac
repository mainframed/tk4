         TITLE '   P D S G A S  '
***********************************************************************
*                                                                     *
*         WRITTEN BY. BILL GODFREY, PRC COMPUTER CENTER INC.          *
*                                   MCLEAN, VIRGINIA                  *
*                                                                     *
*          MOST OF THE CODE IS TAKEN FROM THE 'STATS' PROGRAM         *
*          BY A. BRUCE LELAND, FOUND ON THE CBT MODS TAPE.            *
*                                                                     *
*         DATE WRITTEN: MARCH 11 1981.  VERSION 1.0                   *
*                                                                     *
*         DATE UPDATED:                                               *
*                                                                     *
*         DESCRIPTION:  THIS PROGRAM READS A PDS AND FINDS "GAS"      *
*          MEMBERS, I.E. MEMBERS THAT HAVE BEEN DELETED BUT HAVE      *
*          NOT BEEN COMPRESSED OUT YET.                               *
*                                                                     *
*          DDNAMES REQUIRED:                                          *
*            SYSLIB    -  INPUT PDS                                   *
*            SYSPRINT  -  OUTPUT MESSAGES                             *
*                                                                     *
*          IF PARM=ADD IS SPECIFIED, THE PROGRAM WILL ADD A MEMBER    *
*          NAME TO THE DIRECTORY FOR EACH "GAS" MEMBER.               *
*                                                                     *
*          THE ADDED MEMBER NAMES ALL BEGIN WITH '$GAS', FOLLOWED     *
*          BY A 4 DIGIT SEQUENCE NUMBER.                              *
*                                                                     *
*          IF PARM=TTR(TT.TT.RR) IS SPECIFIED, THE PROGRAM WILL ADD   *
*          A MEMBER NAME TO THE DIRECTORY FOR THE "GAS" MEMBER        *
*          HAVING THE SPECIFIED TTR LOCATION (IN HEX, OBTAINED FROM   *
*          A PREVIOUS RUN). THIS IS USEFUL IF PARM=ADD CAUSES THE     *
*          DIRECTORY TO FILL UP, OR IF YOU KNOW WHICH ONE YOU WANT.   *
*                                                                     *
*          FOR VERY LARGE PDS'S YOU MAY WANT TO SPECIFY PARM=ADD      *
*          THE FIRST TIME, BECAUSE THIS PROGRAM READS EVERY BLOCK     *
*          IN THE PDS.  IT MAY BE QUICKER TO DELETE ALL THE           *
*          GENERATED MEMBER NAMES THAN TO RUN IT A SECOND TIME.       *
*                                                                     *
*          ANY USER DATA THAT WAS IN THE DIRECTORY ENTRY OF           *
*          A DELETED OR REPLACED MEMBER CANNOT BE RECOVERED.          *
*                                                                     *
*          A NOTE ABOUT LOAD MODULES.  THIS PROGRAM CANNOT RECOVER    *
*          A "GAS" LOAD MODULE.  IT WILL GIVE IT A MEMBER NAME SO     *
*          IT WONT BE COMPRESSED OUT, BUT THE DIRECTORY ENTRY WILL    *
*          NOT BE A LOAD MODULE TYPE.  TO RECONSTRUCT THE PROPER      *
*          LOAD MODULE DIRECTORY WOULD REQUIRE INFORMATION THAT       *
*          IS NO LONGER IN THE PDS.                                   *
*                                                                     *
*        CHANGE LOG:                                                  *
*                                                                     *
*           JDM1 - CODE NOW WORKS ON 3380S WITH MVS/XA 2.2.0          *
*                                    (JIM MARSHALL)                   *
*                                                                     *
*$DOC$*****************************************************************
         EJECT
***********************************************************************
*                                                                     *
*         HOW CODE FROM 'STATS' WAS MODIFIED.                         *
*          CODE FOR NON-PDS DATA SETS WAS REMOVED.                    *
*          CODE FOR MOST INFO AND STATISTICS WAS REMOVED.             *
*          CODE TO SAVE GAS TTR'S FOR STOW WAS ADDED.                 *
*          STOW ROUTINE WAS ADDED, TO RECOVER GAS MEMBERS.            *
*          THE BUFFER AND VERY LARGE TABLES HAVE BEEN MOVED           *
*          TO A GETMAINED AREA SO THE LOAD MODULE DOESNT TAKE         *
*          UP SO MUCH SPACE. ITS NOW ABOUT 7K INSTEAD OF 72K.         *
*          PARM FIELD IS TOTALLY DIFFERENT. CBUF SUPPORTED.           *
*          DDNAMES ARE DIFFERENT.  THE PRINT FILE IS FBA 121.         *
*                                                                     *
*         WHAT THIS PROGRAM NEEDS.                                    *
*          IF PARM = TTR(TT.TT.RR) IS SPECIFIED, THE PROGRAM          *
*          SHOULD JUST BLINDLY ADD THE MEMBER INSTEAD OF READING      *
*          THE WHOLE PDS AGAIN.                                       *
*          THE PROGRAM SHOULD HAVE A PARM=DELETE OPTION WHICH         *
*          WOULD DELETE ALL $GAS MEMBER NAMES (AFTER YOU'VE           *
*          RENAMED THE ONE YOU WANT TO KEEP).                         *
*                                                                     *
*$DOC$*****************************************************************
         SPACE 3
         MACRO
&LBL     OUTPT   &R0,&R1,&LN=50     OUTPUT MACRO
&LBL     LA      R15,&LN       LENGTH OF STRING
         AIF     ('&R0' EQ 'R0').NOR0
         L       R0,&R0        NUMBER TO BE OUTPUT
.NOR0    LA      R1,&R1        STRING TO FOLLOW
         BAL     R14,OUTRTN    OUTPUT ROUTINE
         AIF     ('&R1' NE 'WORK').MEND
         MVC     WORK(80),BLANKS
.MEND    MEND
         SPACE 2
         MACRO
&LBL     TTRMBB  &TTR,&MBB=DOUBLE  TTR TO MBBCCHHR CONVERSION MACRO
&LBL     STM     R14,R12,12(R13)
         L       R1,&TTR           TTRN ACTUALLY
         SLDL    R0,24             SHIFT TTR INTO R0
         SLL     R0,8              ADJUST
         L       R1,DCBDEBAD       DEB ADDRESS
         LA      R2,&MBB           RESULT ADDRESS
         LR      R3,R13            SAVE SAVEAREA REGISTER
         L       R15,16            CVT POINTER
         L       R15,28(,R15)      TTRN->MBBCCHHR ROUTINE ADDRESS
         BALR    R14,R15
         LR      R13,R3
         LM      R14,R12,12(R13)
         MEND
         SPACE 2
         MACRO
&LBL     MBBTTR  &MBB,&TTR=TEMP    MBBCCHHR TO TTR CONVERSION MACRO
&LBL     L       R0,TRACKNUM       CURRENT TRACK NUMBER (RELATIVE 1)
         BCTR    R0,0              CURRENT TRACK NUMBER (RELATIVE 0)
         L       R1,LASTR          CURRENT RECORD NUMBER
         LA      R1,1(,R1)         NEXT RECORD NUMBER (R OF TTR)
         CLC     CURMBB(7),&MBB    SWITCHED TRACKS?
         BE      *+10              NO, BRANCH
         LA      R1,1              RECORD ONE
         AR      R0,R1             NEXT RELATIVE TRACK
         STH     R0,&TTR           SAVE RELATIVE TRACK NUMBER
         STC     R1,&TTR+2         SAVE RECORD NUMBER
         MEND
         SPACE 2
         MACRO
&LBL     HEXES   &SRC,&NUM,&OUT     OUTPUT LOOKS LIKE C1.C2.C3 . . .
         LCLC    &ONE                    FOR NUM SOURCE CHARACTERS
&ONE     SETC    'HX'.'&SYSNDX'
&LBL     SR      R15,R15
         LA      R14,&NUM
         LR      R1,R14
         BCTR    R1,0
         LA      R1,&NUM.(R1,R1)    LAST PERIOD AT (N-1)*3+1
         LA      R1,&OUT.(R1)
         S       R1,=F'3'           OUTPUT START LOCATION
&ONE     LA      R15,&SRC           SOURCE BASE ADDRESS
         SR      R0,R0
         BCTR    R15,0
         IC      R0,0(R14,R15)      INPUT CHARACTER
         LR      R15,R0
         N       R15,=F'15'
         IC      R15,HEXTBL(R15)
         STC     R15,2(,R1)         LOW NIBBLE
         LR      R15,R0
         SRL     R15,4
         IC      R15,HEXTBL(R15)
         STC     R15,1(,R1)         HIGH NIBBLE
         MVI     0(R1),C'.'         SEPARATOR
         S       R1,=F'3'           BACK UP 3 IN OUTPUT ADDRESS
         BCT     R14,&ONE           DO PREVIOUS INPUT CHARACTER
         MVI     3(R1),X'40'        BLANK THE LEADING PERIOD
         MEND
         EJECT
PDSGAS   CSECT
         USING *,R10,R11,R12
         B     @PROLOG-*(,R15)
         DC    AL1(27),CL11'PDSGAS 1.0'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(13)
         LR    R10,R15             BASE REGISTER
         LA    R15,4095
         LA    R11,1(R15,R10)      BASE REGISTER
         LA    R12,1(R15,R11)      BASE REGISTER
         LR    R2,R1               SAVE PARM POINTER
         LA    R1,SAVE
         ST    R13,4(,R1)          PUT OLD SAVE AREA ADDRESS IN NEW
         ST    R1,8(,R13)          PUT NEW SAVE AREA ADDRESS IN OLD
         LR    R13,R1              SET NEW SAVE AREA BASE
         SPACE
         L     R2,0(,R2)
         CLI   1(R2),0             IS PARM LENGTH ZERO
         BE    PARMX               YES, BRANCH
         CLI   2(R2),0             DOES THIS LOOK LIKE A TSO CP CBUF
         BE    CBUF                YES, BRANCH
         CLI   1(R2),1             IS PARM LENGTH 1
         BNE   PARM3
         CLI   2(R2),C'U'          PARM=U SAME AS NO PARM
         BNE   PARMAB
         B     PARMX
PARM3    CLI   1(R2),3             IS PARM LENGTH 3
         BNE   PARM6
         CLC   2(3,R2),=C'ADD'     PARM=ADD
         BNE   PARMAB
         OI    FLAGS,GASADD
         B     PARMX
PARM6    CLI   1(R2),6             IS PARM LENGTH 6
         BNE   PARM13
         CLC   2(6,R2),=C'DELETE'  PARM=DELETE (FUTURE OPTION)
         BNE   PARMAB
         OI    FLAGS,GASDEL        DELETE ALL $GASNNNN NAMES
         B     PARMAB              CHANGE TO PARMX
PARM13   CLI   1(R2),13            IS PARM LENGTH 12
         BNE   PARMAB
         CLC   2(4,R2),=C'TTR('    PARM=TTR(NN.NN.NN)
         BNE   PARMAB
         CLI   14(R2),C')'
         BNE   PARMAB
         MVC   GASTTR,6(R2)        SAVE NN.NN.NN
         OI    FLAGS,GASADD
         B     PARMX
         EJECT
CBUF     CLI   3(R2),0             IS OFFSET ZERO
         BE    PARMX               YES, NO OPERAND
         LA    R0,4                GET A 4
         LH    R1,0(,R2)           GET LENGTH+4 OF CBUF
         SH    R1,2(,R2)           LESS OFFSET
         SR    R1,R0               LESS 4
         BNP   PARMX
         AH    R2,2(,R2)           ADDRESS PLUS OFFSET
         AR    R2,R0               PLUS 4
         CH    R1,=H'1'            IS OPERAND LENGTH 1
         BNE   CBUF1X
CBUF1C   OI    0(R2),X'40' '
         CLI   0(R2),C'U'
         BNE   PARMAB
         B     PARMX
CBUF1X   BL    PARMAB
         CLI   1(R2),C' '          IS IT LENGTH 1 PLUS A BLANK
         BE    CBUF1C
CBUF3    CH    R1,=H'3'            IS OPERAND LENGTH 3
         BNE   CBUF3X
CBUF3C   OC    0(3,R2),=8X'40'
         CLC   0(3,R2),=C'ADD'
         BNE   PARMAB
         OI    FLAGS,GASADD
         B     PARMX
CBUF3X   BL    PARMAB
         CLI   3(R2),C' '          IS IT LENGTH 3 PLUS A BLANK
         BE    CBUF3C
CBUF06   CH    R1,=H'6'            IS OPERAND LENGTH 6
         BNE   CBUF06X
CBUF06C  OC    0(6,R2),=8X'40'
         CLC   0(6,R2),=C'DELETE'  IS OPERAND DELETE (FUTURE OPTION)
         BNE   PARMAB
         OI    FLAGS,GASDEL
         B     PARMAB              CHANGE TO PARMX
CBUF06X  BL    PARMAB
         CLI   6(R2),C' '          IS IT LENGTH 6 PLUS A BLANK
         BE    CBUF06C
CBUF13   CH    R1,=H'13'           IS OPERAND LENGTH 13
         BNE   CBUF13X
CBUF13C  OC    0(3,R2),=8X'40'
         CLC   0(4,R2),=C'TTR('
         BNE   PARMAB
         CLI   12(R2),C')'
         BNE   PARMAB
         MVC   GASTTR,4(R2)
         OC    GASTTR,=8X'40'
         OI    FLAGS,GASADD
         B     PARMX               NO, BRANCH
CBUF13X  BL    PARMAB
         CLI   13(R2),C' '         IS IT LENGTH 13 PLUS A BLANK
         BE    CBUF13C
PARMAB   ABEND 1
PARMX    EQU   *
         EJECT
         GETMAIN R,LV=@SPACEL
         LR    R7,R1
         USING BUFFERP,R7
         LA    R0,BUFFER
         O     R0,CCW3
         ST    R0,CCW3
         LR    R8,R7
         A     R8,=A(SAVETBP-BUFFERP)
         USING SAVETBP,R8
         LA    R15,SAVETBL
         LA    R0,3
SAVETBB1 LA    R1,64
SAVETBB2 MVC   0(250,R15),BLANKS
         LA    R15,250(,R15)
         BCT   R1,SAVETBB2
         MVC   0(16,R15),BLANKS
         LA    R15,16(,R15)
         BCT   R0,SAVETBB1
         SPACE
         EJECT
         OPEN  (PRT,OUTPUT)
         TM    DCBOFLGS-IHADCB+PRT,X'10'  OPEN SUCCESSFUL
         BNO   OUTERR                     NO, BRANCH
         PUT   PRT,OUTHEAD
         PUT   PRT,BLANKS
         SPACE
         LA    R9,LIB
         USING IHADCB,R9
         BAL   R14,OPENIN           OPEN THE INPUT FILE
         SPACE
         MVC   TEMP(4),DS1LSTAR
         TTRMBB TEMP,MBB=LASTMBB  SAVE THE LAST USED MBBCCHHR
         TM    DS1DSORG,X'02'     PARTITIONED DATA SET ORGANIZATION?
         BO    PO                 YES, BRANCH
         OUTPT MINUS1,NOTPDS
         ABEND 4
PO       SR    R5,R5                CLEAR R5 FOR LATER
         OI    FLAGS,DIRECTOR       TURN ON THE "IN DIRECTORY" FLAG
         SPACE
NEXTMBR  BAL   R14,MEMBERS          GET THE NEXT MEMBER
         B     *+4(R15)             BRANCH TABLE
         B     GOODMBR              SUCCESSFUL
         B     MBREOF               EOF IN DIRECTORY
         B     LASTUSED             LAST USED ENTRY FOUND
         B     NOTDIREC             NOT A DIRECTORY RECORD
         SPACE
GOODMBR  LA    R2,ALIASES
         TM    11(R1),X'80'          ALIAS ENTRY?
         BO    GOODALS               YES, BRANCH
         LA    R2,REALMBR            NO, A REAL ENTRY
         NI    0(R1),X'7F'           TURN OFF THE TOP BIT IN THE NAME
GOODALS  L     R14,0(,R2)            LOAD COUNTER
         LA    R14,1(,R14)           INCREMENT ALIASES OR REALMBR
         ST    R14,0(,R2)            STORE COUNTER
         LR    R2,R1
         TTRMBB 8(R1),MBB=DOUBLE     CONVERT TTR TO MBBCCHHR
*        L     R1,=A(SAVETBL-16)
         LA    R1,SAVETBL-16
TBLINC   LA    R1,16(,R1)
         CLI   0(R1),X'40'           EMPTY TABLE ENTRY?
         BE    INSERT                YES, BRANCH
         CLC   8(8,R1),DOUBLE        IS IT THIS ENTRY?
         BNE   TBLINC                NO, CHECK NEXT ENTRY
         TM    11(R2),X'80'          ALIAS?
         BO    NEXTMBR               YES, BRANCH
         MVC   0(8,R1),0(R2)         NO, USE THE REAL MEMBER NAME
         B     NEXTMBR
INSERT   MVC   0(8,R1),0(R2)        INSERT THE NAME
         MVC   8(8,R1),DOUBLE       INSERT THE MBBCCHHR
         LR    R5,R1                SAVE THE "HIGH-WATER" MARK
         L     R1,REALENT
         LA    R1,1(,R1)            COUNT THE NUMBER OF TABLE ENTRIES
         ST    R1,REALENT
         C     R1,=F'3000'
         BL    NEXTMBR
         OUTPT MINUS1,MANYENT
         ABEND 99              ** TOO MANY MEMBER ENTRIES IN THE TABLE
ALIAS    L     R1,ALIASES
         LA    R1,1(,R1)             INCREMENT ALIAS MEMBER COUNT
         ST    R1,ALIASES
         B     NEXTMBR
NOTDIREC SR    R15,R15               SIMULATED END OF FILE (GOOD READ)
         B     MBREOF                END OF FILE IN DIRECTORY
         SPACE
LASTUSED EQU   *                     END OF USED ENTRIES IN DIRECTORY
RPTEXCP  BAL   R14,EXCPSTAT          READ AND COLLECT STATISTICS
         LTR   R15,R15
         BZ    RPTEXCP               LOOP IF NOT EOF
MBREOF   EQU   *
PRESORT  SR    R0,R0
         XI    FLAGS,DIRECTOR        TURN OFF THE "IN DIRECTORY" FLAG
         ST    R15,TEMP              SAVE FOR LATER
         ST    R0,READTOT            REINITIALIZE READTOT
         ST    R0,MAXBLK                                 MAXBLK
         ST    R0,BYTECNT                                      BYTECNT
         MVC   MINBLK(4),=F'33000'   REINITIALIZE MINBLK
*
*     SORT THE MEMBER ARRAY BY MBBCCHHR  (USES A SHELLSORT)
*
         L     R2,REALENT           NUMBER OF ELEMENTS TO SORT
         SLA   R2,4                 GAP IS  16 * ELEMENTS
*        L     R3,=A(SAVETBL-16)    TABLE BASE ADDRESS
         LA    R3,SAVETBL-16        TABLE BASE ADDRESS
         LR    R0,R2                N=GAP
SHELLG   SRL   R2,5                 GAP=GAP/2  (DROP FRACTION BITS)
         SLA   R2,4                 GAP LESS THAN ONE?
         BZ    SORTED               YES, DONE
         LR    R4,R2                I=GAP
SHELLI   LA    R4,16(,R4)           I=I+1   (TABLE WIDTH IS 16)
         CR    R4,R0                I<=N?
         BH    SHELLG               NO, HALVE THE GAP
         LR    R1,R4                YES, J=I
SHELLJ   SR    R1,R2                J=J-GAP
         BNP   SHELLI               IF J<=0, INCREMENT I
         LA    R15,0(R3,R1)         ADDRESS OF SAVETBL(J)
         LA    R14,0(R2,R1)         JG=J+GAP
         LA    R14,0(R3,R14)        ADDRESS OF SAVETBL(JG)
         CLC   8(8,R15),8(R14)      MBBCCHHR(J) <= MBBCCHHR(JG)
         BNH   SHELLI               YES, INCREMENT I
         XC    0(16,R14),0(R15)     INTERCHANGE
         XC    0(16,R15),0(R14)                SAVETBL ENTRIES
         XC    0(16,R14),0(R15)                               J AND JG
         B     SHELLJ               INCREMENT J
         SPACE
SORTED   EQU   *
*        L     R2,=A(SAVETBL-16)
         LA    R2,SAVETBL-16
         LTR   R5,R5                ANY MEMBERS?
         BZ    NULLPDS              NO, BRANCH
NULLPDS  L     R15,TEMP             RESTORE THE RETURN CODE
*
NXTREAL  LA    R2,16(,R2)           LAST MEMBER WAS REAL
NXTONE   L     R0,BYTECNT            LAST MEMBER WAS GAS
         ST    R0,SAVETOT            SAVE FOR LATER
         C     R15,=F'8'             END OF DATA SET?
         BE    LASTMTCH              YES, BRANCH
         OI    FLAGS,REALONE         SET FLAG FOR ACTUAL MEMBER
         MVC   CURRMBR(8),0(R2)      SAVE THE CURRENT MEMBER NAME
         CLC   8(8,R2),IOBSEEK       NEXT MBBCCHHR IN THE TABLE?
         BE    REAL                  YES, BRANCH TO READ LOOP
         BH    GAS                   NO, HIGHER -- A "GAS" MEMBER
         OUTPT MINUS1,TTRTOLOW
         ABEND 13            **  TABLED TTR < CURRENT TTR  **
         SPACE
GAS      XI    FLAGS,REALONE         TURN OFF THE ACTUAL MEMBER FLAG
         MBBTTR IOBSEEK,TEMP         CONVERT MBBCCHHR TO TTRN
         L     R1,GASCNT             NO, HIGHER -- A "GAS" MEMBER
         LA    R1,1(,R1)
         ST    R1,GASCNT             ADD ONE TO THE GAS MEMBER COUNT
         HEXES TEMP,3,GASMEM+21
         CLI   GASTTR,0              DID USER WANT A SPECIFIC TTR
         BE    GASSAVE               NO, SAVE THEM ALL
         CLC   GASTTR,GASMEM+20      IS THIS THE ONE
         BNE   GASSAVEX              NO, BRANCH
GASSAVE  LA    R1,1                  COUNT
         A     R1,ADDCNT              SAVED
         ST    R1,ADDCNT               GAS TTR'S
         BCTR  R1,0                  OFFSET = (NUMBER-1)*3
         MH    R1,=H'3'              GET OFFSET INTO TTR TABLE
         LA    R1,SAVEGAS(R1)        POINT TO NEXT SLOT IN TTR TABLE
         MVC   0(3,R1),TEMP          SAVE TTR FOR STOW
GASSAVEX EQU   *
         TM    DS1RECFM,X'C0'        RECFM=U?
         BNO   GASDATA               NO, BRANCH
         OUTPT MINUS1,GASMEM,LN=28   YES, DO NOT DO A DATA LINE
         B     GASRD
*
GASDATA  EQU   *
         OUTPT MINUS1,GASMEM
         BAL   R14,EXCPSTAT          INPUT THE NEXT REAL BLOCK
         ST    R15,TEMP              SAVE THE RETURN CODE
         L     R15,LS
         C     R15,=F'72'
         BNH   *+8
         L     R15,=F'72'            LIMIT OUTPUT LENGTH TO 72 BYTES
         LTR   R15,R15
         BNZ   *+12
         LA    R15,1                 IF NULL LENGTH, USE ONE BYTE AND
         MVI   BUFFER,X'40'             BLANK THE FIRST BYTE OF BUFFER
         OUTPT MINUS1,BUFFER,LN=0(R15)
         L     R15,TEMP              RESTORE THE RETURN CODE
         B     GASRDF                SKIP THE FIRST READ (ALREADY DONE)
         SPACE
GASRD    BAL   R14,EXCPSTAT          "GAS" MEMBER
         L     R1,GASRDS
         LA    R1,1(,R1)             ADD ONE TO THE GAS RECORD COUNT
         ST    R1,GASRDS
GASRDF   LTR   R15,R15               (DON'T COUNT THE FIRST ONE)
         BZ    GASRD                 BRANCH IF NOT EOF
         L     R0,BYTECNT
         S     R0,SAVETOT            GAS BYTES THIS MEMBER
         B     NXTONE
         SPACE
REAL     EQU   *
REALRD   BAL   R14,EXCPSTAT          "REAL" MEMBER
REALRDF  LTR   R15,R15               END OF FILE?
         BZ    REALRD                NO, CONTINUE LOOPING
         B     NXTREAL
         SPACE
LASTMTCH CLI   0(R2),X'40'
         BE    ENDPSPO
         OUTPT MINUS1,NOTFOUND
         ABEND 19            **  ALL MEMBERS IN THE TABLE NOT FOUND  **
ENDPSPO  L     R1,GASCNT
         LTR   R1,R1
         BNZ   GASCOUNT
         OUTPT MINUS1,NOGAS
         B     GASCOUNX
GASCOUNT OUTPT GASCNT,GASMBR
GASCOUNX EQU   *
         CLOSE LIB
         TM    FLAGS,GASADD
         BZ    *+8
         BAL   R14,STOW
         CLOSE PRT
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
STOW     L     R1,ADDCNT           GET NUMBER OF TTR'S TO STOW
         LTR   R1,R1               ARE THERE ANY
         BZ    0(,R14)             NO, RETURN
         ST    R14,STOWR
         BCTR  R1,0                OFFSET = (NUMBER-1)*3
         MH    R1,=H'3'            GET OFFSET TO LAST TTR
         LA    R3,SAVEGAS(R1)      POINT TO LAST GAS TTR
         LA    R2,SAVEGAS          POINT TO FIRST GAS TTR
         LA    R4,1                MEMBER NAME SEQUENCE NUMBER
         OPEN  (PDS,UPDAT)
STOWLOOP CR    R2,R3               ARE WE PAST THE LAST GAS TTR
         BH    STOWEXIT            YES, STOP
         CVD   R4,STOWCVD
         OI    STOWCVD+7,X'0F'
         UNPK  STOWMEM+4(4),STOWCVD+5(3)
         MVC   STOWTTR(3),0(R2)    MOVE TTR FROM TABLE
         STOW  PDS,STOWMEM,A
         MVC   OUTLINE,OUTLINE-1
         MVC   OUTLINE+1(6),=C'MEMBER'
         MVC   OUTLINE+8(8),STOWMEM
         MVC   OUTLINE+17(L'STOWMSGA),STOWMSGA
         LTR   R15,R15
         BNZ   STOWERR
         MVC   TEMP(3),STOWTTR
         HEXES TEMP,3,OUTLINE+17+L'STOWMSGA+1
STOWMSG  PUT   PRT,OUTLINE
         LA    R4,1(,R4)           NEXT SEQUENCE NUMBER
         LA    R2,3(,R2)           NEXT TTR
         B     STOWLOOP
STOWERR  CH    R15,=H'4'           NAME ALREADY IN DIRECTORY
         BNE   STOWER12
         MVC   OUTLINE+17(L'STOWMSGB),STOWMSGB
         SH    R2,=H'3'            TRY SAME TTR AGAIN
         B     STOWMSG
STOWER12 CH    R15,=H'12'          DIRECTORY FULL
         BNE   STOWER16
         MVC   OUTLINE+17(L'STOWMSGC),STOWMSGC
         B     STOWERRX
STOWER16 MVC   OUTLINE+17(L'STOWMSGD),STOWMSGD
STOWERRX PUT   PRT,OUTLINE
STOWEXIT CLOSE (PDS)
         L     R14,STOWR
         BR    R14
STOWR    DC    F'0'
STOWCVD  DC    D'0'
STOWMEM  DC    CL8'$GAS0000'
STOWTTR  DC    XL3'00',X'80'       TTR, ALIAS FLAG
STOWMSGA DC    C'ADDED TO DIRECTORY FOR TTR '
STOWMSGB DC    C'NOT ADDED TO DIRECTORY - ALREADY EXISTS'
STOWMSGC DC    C'NOT ADDED TO DIRECTORY - DIRECTORY FULL'
STOWMSGD DC    C'NOT ADDED TO DIRECTORY - UNKNOWN ERROR'
         PRINT NOGEN
PDS      DCB   DDNAME=SYSLIB,DSORG=PO,MACRF=(R)
         PRINT GEN
         EJECT
EXCPSTAT ST    R14,STATR14    ISSUES EXCP'S AND GATHERS STATISTICS
         BAL   R14,EXCP
         B     *+4(R15)
         B     R15IS0             GOOD READ
         B     R15IS4             END OF FILE OR END OF MEMBER
         B     R15IS8             END OF DATA SET
R15IS12  OUTPT MINUS1,BLANKS      I/O OR OTHER DISK ERROR
         L     R14,INAROW
         LA    R14,1(,R14)        UPDATE NUMBER OF CONSECUTIVE ERRORS
         ST    R14,INAROW
         C     R14,=F'10'         ALLOW ONLY 10 CONSECUTIVE ERRORS
         BL    CONTINUE
         OUTPT MINUS1,TOOMANY     TOO MANY CONSECUTIVE ERRORS
         ABEND 999
CONTINUE HEXES SAVECB,1,IOERROR+17    ECB ERROR CODE
         HEXES CURMBB+3,5,IOERROR+27  CURRENT DISK CCHHR
         OUTPT MINUS1,IOERROR
         TM    DS1DSORG,X'02'     PDS?
         BNO   BLKNUM             NO, BRANCH
         TM    FLAGS,DIRECTOR     ERROR IN THE DIRECTORY?
         BO    DIRERR             YES, BRANCH
         TM    FLAGS,REALONE      ACTUAL MEMBER?
         BNO   GASERR             NO, BRANCH
         OI    CURRMBR,X'80'      MAKE PRINTABLE
         OUTPT MINUS1,CURRMBR     OUTPUT THE CURRENT MEMBER NAME
         B     R15IS4$
GASERR   OUTPT MINUS1,GASERRS     ERROR IN READING GAS DATA
         B     R15IS4$
DIRERR   OUTPT MINUS1,DIRERRS     DIRECTORY I/O ERROR (IGNORE BLOCK)
BLKNUM   OUTPT READTOT,BLKNUMS    READ ERROR MESSAGE
         B     EXCPSTAT+4         CONTINUE--USING THE NEXT BLOCK
*
R15IS8   DS    0H                 END OF DATA SET
         B     TRKNOINC           FINISH UP PROCESSING
*
R15IS4   MVC   INAROW,=F'0'       END OF MEMBER
R15IS4$  LA    R15,4              TREAT AS AN END OF MEMBER CONDITION
         L     R1,EOFS
         LA    R1,1(,R1)          END OF MEMBER COUNTER
         ST    R1,EOFS
         CLC   MBBCCHH(7),CURMBB  NEW TRACK
         BNE   RETURNS
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR           UPDATE THE RECORD COUNT
         B     RETURNS
*
R15IS0   MVC   INAROW,=F'0'       GOOD READ
R15IS0$  L     R1,READTOT
         LA    R1,1(,R1)
         ST    R1,READTOT         COUNT OF BLOCKS READ
         L     R1,LS              CURRENT BLKSIZE
         LR    R0,R1              SAVE FOR LATER
         A     R1,BYTECNT
         ST    R1,BYTECNT         TOTAL NUMBER OF BYTES READ
NOFILSUM CLC   MBBCCHH(7),CURMBB  SAME MBBCCHH?
         BNE   NEWTRACK           NO, BRANCH
         A     R0,CURBYTE
         ST    R0,CURBYTE         ACCUMULATE TRACK BYTE COUNT
         L     R1,LASTR
         LA    R1,1(,R1)
         ST    R1,LASTR           ACCUMULATE RECORD COUNT/TRACK
         B     RETURNS
*
NEWTRACK L     R1,TRACKNUM        SWITCH TRACKS --
         LA    R1,1(,R1)
         ST    R1,TRACKNUM        ACTUAL TRACKS USED
TRKNOINC MVC   MBBCCHH(7),CURMBB  SAVE CURRENT TRACK NUMBER
         L     R0,CURBYTE
         L     R1,LS
         ST    R1,CURBYTE
         L     R1,LASTR
         LA    R14,1
         ST    R14,LASTR
*
RETURNS  L     R14,STATR14
         BR    R14
         EJECT
*
*   MEMBER INPUT ROUTINE
*
*
MEMBERS  ST    R14,MEMBR14
         LM    R15,R1,DIRPTRS     PICK UP ADDR, INCR, LIMIT
         LTR   R1,R1              INITIALIZED?
         BNZ   DEBLOCK            YES, BRANCH
         BAL   R14,REREAD         OPEN IN FOR INPUT OF THE DIRECTORY
GETBLK   BAL   R14,EXCPSTAT       GET A DIRECTORY BLOCK
         LTR   R15,R15            END OF FILE?
         BP    MBRDONE            YES, END OF FILE INDICATION
         CLC   LS+2(2),=H'256'    GOOD DIRECTORY BLOCK?
         BNE   NODIRBLK           NO, BRANCH
         LA    R0,2               INCREMENT IS 2 FIRST
         LH    R1,BUFFER          LENGTH HALFWORD
         LA    R1,BUFFER-1(R1)    LIMIT
         LA    R15,BUFFER         START
DEBLOCK  BXH   R15,R0,GETBLK
         IC    R0,11(,R15)
         N     R0,=F'31'          GET LENGTH BITS
         AR    R0,R0              LENGTH * 2
         A     R0,=F'12'          LENGTH * 2  +  12
         STM   R15,R1,DIRPTRS     SAVE FOR LATER
         CLI   0(R15),X'FF'       LAST MEMBER
         BNE   *+12               NO, BRANCH
         LA    R15,8              LAST MEMBER USED INDICATION
         B     MBRDONE
         LR    R1,R15             ADDRESS OF MEMBER NAME (RETURNED)
         SR    R15,R15            GOOD READ INDICATION
         B     MBRDONE
NODIRBLK OUTPT MINUS1,EOFSIMS     RECORD LENGTH IS NOT 256
         OUTPT LS,BLOCKLEN        OUTPUT CURRENT LRECL
         LA    R15,12             ERROR INDICATION
MBRDONE  L     R14,MEMBR14        RETURN ADDRESS
         BR    R14
DIRPTRS  DC    3A(0)              SAVEAREA FOR R15, R0 AND R1
MEMBR14  DC    A(0)               SAVEAREA FOR RETURN ADDRESS
         EJECT
*
*   EXCP SUBROUTINES  (OPENIN, REREAD AND EXCP)
*
*
*   OPENS THE FILE WITH DDNAME IN
*
OPENIN   ST    R14,EXCPR14                  ENTRY TO OPEN THE IN FILE
         RDJFCB (LIB)                       GET DSN AND VOLUME SERIAL
         LTR   R15,R15                      SUCCESSFUL?
         BZ    NOABE40                      YES, BRANCH
ABE40    OUTPT MINUS1,NOTOPEN
         ABEND 40                  ** RDJFCB, OBTAIN OR OPEN FAILED **
NOABE40  OBTAIN MYLABEL                     READ IN THE FORMAT 1 DSCB
         LTR   R15,R15                      SUCCESSFUL?
         BNZ   ABE40                        NO, STOP THE PROGRAM
         OPEN  (LIB,INPUT)
         TM    DCBOFLGS,X'10'               IN OPEN?
         BZ    ABE40                        NO, STOP THE PROGRAM
         B     REREAD+4
*
*
*   ENTRY TO REREAD THE OPEN DATA SET (DDNAME IS IN)
*
REREAD   ST    R14,EXCPR14
         L     R1,DCBDEBAD
         SR    R14,R14
         IC    R14,16(R1)                   NUMBER OF EXTENTS
         ST    R14,NUMEXT                   SAVE FOR LATER
         LA    R14,16(R1)                   CURRENT EXTENT POINTER - 16
         ST    R14,CUREXT                   SAVE FOR LATER
         MVI   IOBSEEK,X'00'                RESET THE EXTENT NUMBER
         LA    R15,4                        EARLY EXIT FLAG
         B     FIRSTONE                     DO THE INITIAL EXTENT
*
*
*
*    FOR EACH EXTENT, INITIALIZE CCHHR, SECTOR NUMBER AND READ IN THE
*        LENGTH OF THE FIRST RECORD.
*
EACHXTNT SR    R1,R1              AFTER THE FIRST EXTENT --
         IC    R1,IOBSEEK
         LA    R1,1(,R1)
         STC   R1,IOBSEEK         INCREMENT THE EXTENT NUMBER
         C     R1,NUMEXT          PAST LAST EXTENT?
         BNL   EOF$DS             YES, NO END OF DATA SET RECORDED
*
FIRSTONE ST    R15,EXCPR15                  SAVE ENTRY CODE FOR LATER
         L     R1,CUREXT
         LA    R1,16(R1)                    CURRENT EXTENT ENTRY
         MVC   IOBSEEK+3(4),6(R1)           INITIAL CCHH
         ST    R1,CUREXT                    UPDATE FOR LATER
         MVI   IOBSEEK+7,0
         MVI   SNO,0                        SET SECTOR NUMBER=ZERO
         LA    1,CCW1A
         ST    1,CPADDR
         EXCP  IOB
         WAIT  ECB=ECB
         CLI   ECB,X'7F'                    GOOD READ?
         BE    NOABE30                      YES, BRANCH
         OUTPT MINUS1,FIRSTRD
         ABEND 30          **  FIRST READ OF EXTENT DID NOT WORK  **
NOABE30  LA    R1,CCW1
         ST    R1,CPADDR
         MVC   CCW3+6(2),DATALN             GET LENGTH FOR NEXT READ
         MVI   IOBSEEK+7,1                  SET R=1
         L     R15,EXCPR15
         LTR   R15,R15                      EARLY EXIT DESIRED?
         BZ    EXCP+4                       NO, ISSUE THE EXCP AGAIN
         L     R14,EXCPR14          RETURN FROM OPENIN, REREAD OR
         BR    R14                      AFTER EOF AND EXTENT VIOLATION
*
*   ENTRY FOR EACH EXCP TO BE PERFORMED
*
EXCP     ST    R14,EXCPR14
         CLI   ECB,X'42'                    EXTENT VIOLATION LAST TIME?
         BE    EACHXTNT                     YES, DO THE NEXT EXTENT
         MVC   CURMBB(8),IOBSEEK  SAVE THE DISK ADDRESS OF THIS RECORD
         MVC   LS+2(2),DATALN     SAVE THE BLOCK LENGTH FOR THIS READ
         EXCP  IOB
         WAIT  ECB=ECB
         SR    R15,R15            GOOD READ FLAG
         CLI   ECB,X'42'          EXTENT VIOLATION (NEXT TIME)?
         BE    ENDEXCP            YES, QUIT
         TM    DS1DSORG,X'80'     ISAM DATA SET?
         BO    *+14               YES, IGNORE DS1LSTAR CHECK FOR ISAM
         CLC   LASTMBB(8),CURMBB  PAST THE DS1LSTAR MARKER?
         BNH   EOF$DS             YES, END OF FILE AND DATA SET
         CLI   ECB,X'7F'          GOOD READ?
         BE    ENDEXCP            YES, QUIT
*
         CLI   ECB,X'41'          PERMANENT ERROR?
         BE    NOABE10            YES, BRANCH
         OUTPT MINUS1,BADERROR
         B     SOMERR         **  BAD ERROR; ECB NOT HEX 41, 42 OR 7F
NOABE10  TM    CSW+4,X'01'        ACTUALLY EOF?
         BO    EOF
         CLC   CSW+4(4),=X'00200000'  NULL MEMBER OR DATA SET?
         BE    EOF                    YES, BRANCH
         OUTPT MINUS1,PERMERR
SOMERR   LA    R15,12         **  PERMANENT ERROR--NOT END OF FILE  **
         MVC   SAVECB(1),ECB      SAVE ECB CODE FOR LATER
         B     REISSUE
*
EOF      TM    DS1DSORG,X'60'     DSORG=PS OR DA?
         BNZ   EOF$DS             YES, END OF FILE AND DATA SET
         LA    R15,4              END OF MEMBER FLAG
         CLC   =H'0',DATALN       NEXT BLOCK LENGTH = 0?
         BNE   ENDEXCP            NO, BRANCH
REISSUE  ST    R15,EXCPR15
         LA    R1,CCW1A           NEED TO REISSUE THE INITIALIZATION
         ST    R1,CPADDR                EXCP TO GET LENGTH AND ADDRESS
         EXCP  IOB                      OF THE NEXT DATA BLOCK
         WAIT  ECB=ECB
         L     R15,EXCPR15        READ ERROR (12) OR END OF MEMBER (4)
         LA    R1,CCW1
         ST    R1,CPADDR
         MVC   CCW3+6(2),DATALN   DATALENGTH FOR NEXT EXCP
         CLI   ECB,X'42'          EXTENT VIOLATION?
         BE    EACHXTNT           YES, DO THE NEXT EXTENT -- EARLY EXIT
         CLI   ECB,X'7F'          GOOD READ?
         BE    ENDEXCP            YES, QUIT
         CLI   ECB,X'41'          PERMANENT ERROR?
         BE    NOABE70            YES, CHECK EOF
ABE70    OUTPT MINUS1,BADERROR
         ABEND 70             **  SOME OTHER BAD ERROR  **
NOABE70  TM    CSW+4,X'01'        NULL MEMBER (ANOTHER EOF)?
         BO    ENDEXCP
ABE80    OUTPT MINUS1,PERMERR
         ABEND 80             **  PERMANENT ERROR AFTER EOF  **
EOF$DS   LA    R15,8              END OF FILE AND DATA SET FLAG
ENDEXCP  L     R14,EXCPR14        RETURN ADDRESS
         BR    R14
         EJECT
*
*   OUTPUT ROUTINE
*      NOTE: R0 NEGATIVE IF NO NUMERIC OUTPUT; OTHERWISE OUTPUT NUMERIC
*            R1 CONTAINS THE ADDRESS OF THE STRING TO OUTPUT
*            R14 CONTAINS THE RETURN ADDRESS
*            R15 CONTAINS THE LENGTH OF THE STRING
*
OUTRTN   ST    R14,RETOUT
         BCTR  R15,0                  MACHINE LENGTH
         MVC   OUTLINE+10(*-*),0(R1)   <<EXECUTED>>
         EX    R15,*-6                MOVE IN THE STRING
         LTR   R0,R0                  ANY LEADING NUMERICS?
         LA    R1,OUTLINE+10
         BM    OUTSTMT                NO, BRANCH
         CVD   R0,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  OUTLINE(9),DOUBLE+3(5) ASSUME NO MORE THAN 9 DIGITS
         LA    R1,OUTLINE-1
OUTSUP   LA    R1,1(,R1)              SCAN FOR
         CLI   0(R1),C'0'                     FIRST
         BE    OUTSUP                              NON-ZERO
OUTSTMT  BCTR  R1,0
         MVI   0(R1),C' '             CARRIAGE CONTROL
         LR    R0,R1
         PUT   PRT,(0)                OUTPUT THE LINE
         MVC   OUTLINE,OUTLINE-1      BLANK IT
         L     R14,RETOUT             RETURN
         BR    R14
OUTERR   WTO   MF=(E,OUTERRW)
         ABEND 69            ** OUTPUT FILE DID NOT OPEN  **
RETOUT   DC    A(0)                   SAVEAREA FOR RETURN ADDRESS
         DC    C' '
OUTLINE  DC    CL121' '
         DC    CL10' '
OUTHEAD  DC    CL121'1--- PDSGAS --- LOST MEMBER FINDER ---'
OUTERRW  WTO   'DDNAME SYSPRINT COULD NOT BE OPENED',ROUTCDE=(11),MF=L
         EJECT
BUFFRE   EQU   0
CCW1A    CCW   X'31',IOBSEEK+3,X'60',5      SEARCH ID EQUAL (CCHHR)
CCW2A    CCW   X'08',*-8,X'60',1            TIC
CCW3A    CCW   X'92',IOBSEEK+3,X'20',8      MT READ NEXT COUNT
*
CCW0     CCW   X'23',SNO,X'60',1            SET SECTOR
CCW1     CCW   X'31',IOBSEEK+3,X'60',5      SEARCH ID EQUAL (CCHHR)
CCW2     CCW   X'08',*-8,X'60',1            TIC
CCW3     CCW   X'06',BUFFRE,X'60',47476     READ DATA            JDM1
CCW4     CCW   X'92',IOBSEEK+3,X'60',8      MT READ NEXT COUNT
CCW5     CCW   X'22',SNO,X'20',1            READ SECTOR NUMBER
*
         DS    0F
IOB      DC    X'C2000000'
         DC    A(ECB)
CSW      DC    2A(0)
CPADDR   DC    A(CCW1)
         DC    A(LIB)
         DC    2A(0)
IOBSEEK  DC    2A(0)          NEXT MBBCCHHR ADDRESS
KEYLN    DS    X              NEXT KEYLENGTH
DATALN   DS    2X             NEXT RECORD LENGTH
SNO      DC    X'00'          NEXT SECTOR NUMBER
*
CURMBB   DC    CL8' '         CURRENT MBBCCHHR ADDRESS
MBBCCHH  DC    CL7' '         SAVE AREA FOR MBBCCHH
*
ECB      DC    F'0'           ECB
LS       DC    F'0'           LENGTH OF THE CURRENT RECORD
SAVE     DC    18F'0'                     SAVE AREA
GASTTR   DC    XL8'00'
FLAGS    DC    X'00'                      FLAG BYTE
GASADD   EQU   X'01'                      GAS RECORDS TO BE RECOVERED
GASDEL   EQU   X'02'                      GAS NAMES TO BE DELETED
REALONE  EQU   X'40'                      ERROR IN ACTUAL MEMBER FLAG
DIRECTOR EQU   X'80'                      ERROR IN DIRECTORY RECORDS
SAVECB   DC    X'00'                      SAVE AREA FOR ECB
LASTR    DC    F'0'                       CURRENT NUMBER OF RECORDS/TRK
EXCPR14  DC    F'0'                       RETURN REGISTER FOR EXCP
EXCPR15  DC    F'0'                       EXIT FLAG REGISTER SAVEAREA
STATR14  DC    F'0'                       RETURN REGISTER FOR EXCPSTAT
CUREXT   DC    F'0'                       ADDRESS OF THE CURRENT EXTENT
NUMEXT   DC    F'0'                       TOTAL EXTENTS IN THE DATA SET
READTOT  DC    F'0'                       TOTAL RECORDS READ
MINBLK   DC    F'33000'                   MINIMUM LENGTH BLOCK
MAXBLK   DC    F'0'                       MAXIMUM LENGTH BLOCK
BYTECNT  DC    F'0'                       TOTAL BYTES READ
TEMP     DC    F'0'                       WORK STORAGE
GASBYTE  DC    F'0'                       TOTAL BYTES IN GAS MEMBERS
RELBYTE  DC    F'0'                       TOTAL BYTES IN REAL MEMBERS
SAVETOT  DC    F'0'                       STARTING BYTE COUNT HOLD
TRKBYTE  DC    F'0'                       SUM OF ALL BLOCKSIZES
INAROW   DC    F'0'                       NUMBER OF CONSECUTIVE ERRORS
CURBYTE  DC    F'0'                       CURRENT TRACK BYTE COUNT
TRACKNUM DC    F'0'                       ACTUAL COUNT OF TRACKS USED
MINUS1   DC    F'-1'                      NO NUMERIC OUTPUT FLAG
EOFS     DC    F'0'                       COUNT OF END OF FILES
GASCNT   DC    F'0'                       NUMBER OF "GAS" MEMBERS
ADDCNT   DC    F'0'                       NUMBER OF "GAS" TTR'S SAVED
GASRDS   DC    F'0'                       NUMBER OF "GAS" RECORDS
ALIASES  DC    F'0'                       ALIASES IN THE DIRECTORY
REALMBR  DC    F'0'                       REAL ENTRIES (DIRECTORY)
REALENT  DC    F'0'                       MEMBER TABLE ENTRIES
*
ENDMBR   DC    CL50'END OF MEMBER (FILE MARKS) ARE RECORDED           '
GASMBR   DC    CL50'"GAS" MEMBERS FOUND                               '
NOGAS    DC    CL50'NO "GAS" MEMBERS FOUND                            '
IOERROR  DC    CL50'READ ERROR--ECB=12; CCHHR=12.45.78.01.34          '
TOOMANY  DC    CL50'TOO MANY CONSECUTIVE I/O ERRORS (10)              '
MANYENT  DC    CL50'MORE THAN 3000 ENTRIES IN THE MEMBER TABLE        '
NOTOPEN  DC    CL50'RDJFCB, OBTAIN OR OPEN FOR DDNAME SYSLIB FAILED   '
FIRSTRD  DC    CL50'FIRST READ OF AN EXTENT WAS NOT SUCCESSFUL        '
TTRTOLOW DC    CL50'TTR IN MEMBER TABLE IS LESS THAN THE CURRENT TTR  '
NOTFOUND DC    CL50'SOME MEMBERS IN THE MEMBER TABLE WERE NOT FOUND   '
BADERROR DC    CL50'UNDEFINED READ ERROR                              '
PERMERR  DC    CL50'UNDEFINED PERMANENT ERROR                         '
EOFSIMS  DC    CL50'BAD DIRECTORY RECORD -- RECORD LENGTH IS NOT 256  '
BLOCKLEN DC    CL50'IS THE BLOCK LENGTH  (END OF DIRECTORY SIMULATED) '
DIRERRS  DC    CL50'READ ERROR IN THE DIRECTORY                       '
BLKNUMS  DC    CL50'IS THE BLOCK NUMBER  (BLOCK IGNORED)              '
GASERRS  DC    CL50'ERROR IN A GAS MEMBER  (END OF MEMBER SIMULATED)  '
CURRMBR  DC    CL50'12345678 IS THE MEMBER  (END OF MEMBER SIMULATED) '
GASMEM   DC    CL50'"GAS" MEMBER AT TTR TT.TT.RR, DATA:               '
NOTPDS   DC    CL50'SYSLIB DATA SET IS NOT PARTITIONED                '
BLANKS   DC    CL256' '                                               '
HEXTBL   DC    CL16'0123456789ABCDEF'
*
WORK     DC    CL80' '
DOUBLE   DS    D
LASTMBB  DS    D
JFCBXIT  DC    X'87',AL3(JFCB)            JFCB BLOCK
JFCB     DS    0D
*        IEFJFCBN                         JFCB MAPPING MACRO
JFCBDSNM DS    CL44,CL8
JFCBTSDM DS    B,CL65
JFCBVOLS DS    CL30,CL28                  TOTAL LENGTH 176
         PRINT NOGEN
*
PRT      DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,                      *
               RECFM=FBA,LRECL=121,BLKSIZE=121
         PRINT GEN
*
LIB      DCB   DDNAME=SYSLIB,DSORG=PS,MACRF=E,EXLST=JFCBXIT
*
MYLABEL  CAMLST SEARCH,JFCBDSNM,JFCBVOLS,WORKAREA
WORKAREA DS    0D,148C
DS1NOBDB EQU   WORKAREA+16    BYTES USED IN LAST DIRECTORY BLOCK
DS1DSORG EQU   WORKAREA+38    DSORG
DS1RECFM EQU   WORKAREA+40    RECFM
DS1BLKSI EQU   WORKAREA+42    BLKSIZE
DS1LRECL EQU   WORKAREA+44    LRECL
DS1KEYL  EQU   WORKAREA+46    KEYLEN
DS1RKP   EQU   WORKAREA+47    RELATIVE KEY POSITION
DS1SCALO EQU   WORKAREA+50    ALLOCATION TYPE
DS1SAQU  EQU   WORKAREA+51    SECONDARY ALLOCATION QUANTITY
DS1LSTAR EQU   WORKAREA+54    LAST USED TTR
DS1TRBAL EQU   WORKAREA+57    BYTES REMAINING IN LAST USED TRACK
DS1PTRDS EQU   WORKAREA+91    CCHHR POINTER TO FORMAT 2 DSCB IF ISAM
*
         LTORG
         SPACE
         DS    0D
SAVEGAS  DS    400XL3               ROOM FOR 400 ENTRIES
         DS    0D
         SPACE
@SPACE   DSECT
BUFFERP  DS    D                  ALLOW REFERENCE TO BUFFER-1
BUFFER   DS    19072X
DS2NOLEV EQU   BUFFER+1  (1)      INDEX LEVELS
DS2DVIND EQU   BUFFER+2  (1)      TRACKS FOR MASTER LEVEL
DS2CYLOV EQU   BUFFER+8  (1)      TRACKS OF CYLINDER OVERFLOW/CYLINDER
DS2TAGDT EQU   BUFFER+15 (2)      RECORDS TAGGED FOR DELETION
DS2RORG3 EQU   BUFFER+17 (3)      OVERFLOW ACCESSES
DS2NOBYT EQU   BUFFER+20 (2)      BYTES TO HOLD THE HIGHEST INDEX
DS2NOTRK EQU   BUFFER+22 (1)      TRACKS OCCUPPIED BY THE HIGHEST INDEX
DS2PRCTR EQU   BUFFER+23 (4)      RECORDS IN THE PRIME AREA
DS2BYOVL EQU   BUFFER+80 (2)      BYTES LEFT ON THE CURR. IND. OVR. TRK
DS2RORG2 EQU   BUFFER+82 (2)      TRACKS LEFT IN THE IND. OVERFLOW AREA
DS2OVRCT EQU   BUFFER+84 (2)      RECORDS IN THE OVERFLOW AREA
DS2RORG1 EQU   BUFFER+86 (2)      CYLINDER AREAS THAT ARE FULL
*
SAVETBP  DS    2D                   ALLOW REFERENCE TO SAVETBL-16
SAVETBL  DC    64CL250' ',CL16' '   ROOM FOR 1000 ENTRIES
         DC    64CL250' ',CL16' '   ROOM FOR 1000 ENTRIES
         DC    64CL250' ',CL16' '   ROOM FOR 1000 ENTRIES
         DS    0D
@SPACEL  EQU   *-@SPACE
         SPACE
         PRINT NOGEN
*        DCBD  DSORG=PS,DEVD=DA
IHADCB   DSECT
         ORG   IHADCB+44
DCBDEBAD DS    A
DCBOFLGS DS    X
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
