***********************************************************************
*                             B L O K P D S                           *
*                                                                     *
*        JIM MARSHALL, CAPT, USAF-RET                                 *
*                                                                     *
*        THIS IS ANOTHER PROGRAM I HAVE HAD FOR A WHILE. THIS WAS     *
*        WRITTEN BY CHRIS MARKLE WHEN HE WAS A COLLEGE STUDENT AND    *
*        WAS A CO-OP'ER. HE HAS SINCE MOVED ON TO AMDAHL, NETWORK     *
*        SOLUTIONS, ETC.                                              *
*                                                                     *
*        THE INTENT OF THE CODE WAS TO CREATE A SEQUENTIAL FILE OF    *
*        PDS MEMBERS AND PRECEDE EACH MEMBER WITH A 12X12 BLOCK       *
*        LETTER OF THE MEMBER NAME. THIS WOULD ALLOW FOR A QUICK      *
*        EYE-BALLING OF THE FILE, ESPICALLY IF YOU PUT THE LISTING    *
*        ONTO MICROFICHE (WHICH WE DID).                              *
*                                                                     *
*        THE INPUT DATA SET (SYSUT1) MUST CONTAIN THE 80-BYTE         *
*        RECORDS (LRECL=80) OF ONE OR MORE PDS MEMBERS. EACH MEMBER   *
*        MUST BE PRECEDED BY AN IEBUPDTE CONTROL CARD IMAGE IN ONE    *
*        OF THE FOLLOWING FORMATS; THIS CAN EASILY BE ACCOMPLISHED    *
*        BY CREATING THE INPUT DATA SET USING PGM=LISTPDS WITH THE    *
*        PARM='UPDTE' OPTION (LISTPDS IS ON THIS TAPE IN THIS FILE):  *
*                                                                     *
*        COLUMN=1  4   8                                              *
*               ./ ADD SSI=XXXXXXXX,NAME=XXXXXXXX                     *
*         (OR)  ./ ADD NAME=XXXXXXXX                                  *
*                                                                     *
*        THE OUTPUT DATA SET (SYSUT2) WILL BE LRECL=80 WITH CARRIAGE  *
*        CONTROL IN THE FIRST BYTE OF EACH RECORD (RECFM=FBA).        *
*                                                                     *
*                          * * * NOTE * * *                           *
*                                                                     *
*        THE DATA SET (SYSPRINT) WHERE BLOKHD (THE BLOCK-LETTER       *
*        ROUTINE) WILL STORE THE BLOCK-LETTERS MUST BE BLKSIZE=1596,  *
*        LRECL=133, AND RECFM=FBA. THIS IS BECAUSE A READ IS USED TO  *
*        GET THIS DATA AND MUST GET ALL OF IT IN ONE SHOT (12 BLOCK-  *
*        LETTER RECORDS WITH LRECL=133 GIVES BLKSIZE=1596).           *
*                                                                     *
*        TO EXECUTE CREATE, CODE THE FOLLOWING JCL TO INCLUDE         *
*        LISTPDS                                                      *
*                                                                     *
*        //MAKESEQ  EXEC PGM=LISTPDS,PARM='UPDTE,DECK,NOLIST'         *
*        //STEPLIB  DD -- YOUR LIB --                                 *
*        //SYSPRINT DD SYSOUT=A                                       *
*        //SYSLIST  DD SYSOUT=A                                       *
*        //SYSLIB   DD -- INPUT FILE PDS --                           *
*        //SYSPUNCH DD DSN=&&SEQ,UNIT=VIO,DISP=(NEW,PASS),            *
*        //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),          *
*        //            SPACE=(CYL,10)                                 *
*        //*--------------------------------------------------*       *
*        //BLOCKIT  EXEC PGM=BLOKPDS,COND=(0,NE)                      *
*        //STEPLIB  DD -- YOUR LIB --                                 *
*        //SYSUT1   DD DSN=&&SEQ,DISP=(OLD,DELETE)                    *
*        //SYSPRINT DD UNIT=SYSDA,SPACE=(TRK,1),                      *
*        //            DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1596)         *
*        //SYSUT2   DD SYSOUT=A,DCB=BLKSIZE=133                       *
*                                                                     *
*                                  CHRIS MARKLE                       *
*                                  7TH COM GROUP                      *
*                                  PENTAGON                           *
*                                  WASHINGTON, D. C. 20330            *
***********************************************************************
         EJECT
         PRINT NOGEN
BLOKPDS  AMODE 24
BLOKPDS  RMODE 24
BLOKPDS  CSECT
*
*        INITIALIZE...
*        (1) DO SOME EQUATES
*        (2) SAVE THE ENVIRONMENT, SET-UP THE BASE REGISTER, AND
*            ESTABLISH AND LINK SAVE AREAS
*        (3) INITIALIZE LINE LIMIT
*        (4) OPEN THE INPUT AND OUTPUT FILES
*        (5) BLANK OUT THE OUTPUT AREA
*
*        REGS                          DO THE REG EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
LINECNT  EQU   R5                      LINE COUNTER
MAX      EQU   R6                      MAX NO. OF LINES/PAGE
         SPACE
         SAVE  (14,12),,BLOKPDS_&SYSDATE
         LR    R12,R15                 LOAD BASE REG, AND...
         USING BLOKPDS,R12             TELL THE ASSEMBLER
         LR    R15,R13                 SAVE ADDR OF OLD SA
         CNOP  0,4                     ALIGN TO FULLWORD SO WE CAN...
         BAL   R13,SAVE+72             LOAD ADDR OF NEW SA, AND SKIP IT
SAVE     DS    18F                     THIS IS THE NEW SA
         ST    R15,4(R13)              OLD SA IS LSA IN NEW SA
         ST    R13,8(R15)              NEW SA IS HSA IN OLD SA
         LA    MAX,60                  SET LINE LIMIT TO 60
         LA    R2,133                  INITIALIZE INCR FOR BXLE
         LA    R3,BUFFER+12*133-1      INITIALIZE COMPARAND FOR BXLE
         OPEN  (INDCB,(INPUT),OUTDCB,(OUTPUT))
         MVI   OUTAREA,C' '            BLANK OUT...
         MVC   OUTAREA+1(132),OUTAREA  THE OUTPUT LINE
         SPACE
*-------------------------------------------------------------------*
*        HERE GOES...
*        (6) GET A RECORD FROM THE INPUT FILE; ON EOF, GO TO (10A)
*        (7) DETERMINE WHETHER TO MAKE A BLOCK-LETTER HEADING (GO TO
*            (9A)), OR TO COPY A MEMBER RECORD (CONTINUE)
*-------------------------------------------------------------------*
         SPACE
GET      GET   INDCB,INAREA            GET AN INPUT RECORD
         CLC   INAREA(6),=CL6'./ ADD'  IS THIS AN IEBUPDTE RECORD?
         BE    DOTSLASH                YES? GO DO BIG LETTER STUFF
         SPACE
*-------------------------------------------------------------------*
*        COPY A MEMBER RECORD...
*        (8A) CHECK TO SEE IF THE CURRENT LINE COUNT IS LESS THAN THE
*             LIMIT; IF NECESSARY, PROVIDE THE CARRIAGE CONTROL TO SKIP
*             TO THE TOP OF A NEW PAGE, AND RESEST THE LINE COUNTER
*        (8B) PUT THE RECORD TO THE OUTPUT TAPE, RESET THE CARRIAGE
*             CONTROL TO SINGLE SPACE, AND INCREMENT THE LINE COUNTER
*        (8C) GO TO (7)
*-------------------------------------------------------------------*
         SPACE
         CR    LINECNT,MAX             HAVE 60 LINES BEEN PRINTED?
         BL    PUT2                    NO? NO NEED TO START NEW PAGE
         MVI   CARRIAGE,C'1'           SET CONTROL FOR NEW PAGE
         LA    LINECNT,0               RESET LINE COUNTER
PUT2     PUT   OUTDCB,OUTAREA          PUT AN OUTPUT RECORD
         MVI   CARRIAGE,C' '           SET CONTROL FOR SINGLE SPACE
         LA    LINECNT,1(LINECNT)      INCREMENT LINE COUNTER
         B     GET                     GO GET ANOTHER INPUT RECORD
         SPACE
*-------------------------------------------------------------------*
*        MAKE A BLOCK LETTER HEADING...
*        (9A) FIND THE MEMBER NAME FROM THE RECORD, AND USE THAT NAME
*             AS INPUT TO THE BLOKHD ROUTINE
*        (9B) BLOKHD WILL CREATE A FILE OF 1 BLOCK OF 12 RECORDS
*             FORMING BLOCK-LETTERS OF THE MEMBER NAME
*        (9C) OPEN THIS FILE, READ THAT BLOCK, PUT THE 12 RECORDS TO
*             THE OUTPUT TAPE; THEN, CLOSE THE FILE
*        (9D) SET THE CARRIAGE CONTROL TO TRIPLE SPACE, AND RESET THE
*             LINE COUNTER
*        (9E) GO TO (6)
*-------------------------------------------------------------------*
         SPACE
DOTSLASH CLC   INAREA+7(4),=CL4'SSI='  DOES RECORD CONTAIN SSI INFO?
         BNE   NOSSI                   NO? NAME MUST BE FIRST
         MVC   MEMBER(8),INAREA+25     GET MEMBER NAME FROM HERE
         B     SKIP                    OR...
NOSSI    MVC   MEMBER(8),INAREA+12     GET MEMBER NAME FROM HERE
SKIP     CALL  BLOKHD,(PARM),VL        GO MAKE BIG LETTERS
         OPEN  (TEMPDCB,(INPUT))       OPEN FILE CREATED BY BLOKHD
         READ  DECB,SF,TEMPDCB,BUFFER  READ ONE BLOCK OF 12 RECORDS
         CHECK DECB                    MAKE SURE EVERYTHING IS COOL
         LA    R0,BUFFER               INITIALIZE ADDR FOR PUT
PUT1     PUT   OUTDCB                  PUT BLOCK LETTER RECORDS...
         BXLE  R0,R2,PUT1              UNTIL ALL 12 HAVE BEEN DONE
         CLOSE (TEMPDCB)               CLOSE THE FILE
         MVI   CARRIAGE,C'-'           SET CONTROL FOR TRIPLE SPACE
         LA    LINECNT,14              RESET LINE COUNTER
         B     GET                     GO GET ANOTHER INPUT RECORD
         SPACE
*-------------------------------------------------------------------*
*        ON END-OF-FILE...
*        (10A) CLOSE REMAINING FILES
*        (10B) RESTORE THE REGISTERS, SET A NICE CONDITION CODE, AND
*              RETURN TO THE CALLING PROGRAM
*-------------------------------------------------------------------*
         SPACE
EOF      CLOSE (INDCB,,OUTDCB)         CLOSE REMAINING FILES
         L     R13,4(R13)              LOAD ADDR OF OLD SA
         LM    R14,R12,12(R13)         RESTORE THE REGS
         XR    R15,R15                 SET A NICE CONDITION CODE
         BR    R14                     RETURN VIA THE RETURN ADDR
         SPACE
         LTORG
INDCB    DCB   DSORG=PS,MACRF=(GM),EODAD=EOF,LRECL=80,DDNAME=SYSUT1
TEMPDCB  DCB   DSORG=PS,MACRF=(R),DDNAME=SYSPRINT
OUTDCB   DCB   DSORG=PS,RECFM=FBA,MACRF=(PM),LRECL=133,DDNAME=SYSUT2
PARM     DS    0H
LENGTH   DC    H'9'
DELIMIT  DC    C'/'
MEMBER   DS    CL8
OUTAREA  DS    CL133
         ORG   OUTAREA
CARRIAGE DS    C
         ORG   OUTAREA+12
INAREA   DS    CL80
         ORG
BUFFER   DS    CL1596
         END
