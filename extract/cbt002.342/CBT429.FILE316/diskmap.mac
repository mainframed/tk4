MAP      TITLE 'MAP DIRECT ACCESS DEVICE ALLOCATION'
* *$DOC@* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        PRODUCED AT TRIANGLE UNIVERSITIES COMPUTATION CENTER, RESEARCH
*              TRIANGLE PARK, NORTH CAROLINA, 27709
*              SYSTEMS PROGRAMMER - H. L. JACKSON
         SPACE
*        EXTENSIONS AT GODDARD SPACE FLIGHT CENTER, GREENBELT,
*              MARYLAND, 20771
*              HANK HOOVER
         SPACE
*        MODIFIED AT USAF COMMAND POST, PENTAGON, WASHINGTON, DC, 20330
*              SYSTEMS PROGRAMMER - V. R. RODRIGUEZ
*
*        MODIFIED AT AFDSC/SFI, PENTAGON, WASHINGTON,D.C. 20330
*                  SYSTEMS PROGRAMMER - P E SCHAFER  JUN 1978 & FEB82
*                  TOOK OUT 2321 SUPPORT AND PARM OF ALL WHICH DID
*                  NOT WORK.  ADDED CHECK FOR RACF BIT AND CHECK TO
*                  SEE IF AUTHORIZED TO LIST MSS VOLUMES.
*                  RUNS ON MVS/SP 1.1.0
         SPACE 2
* FUNCTION:
*  TO MAP THE ALLOCATION OF DATA SETS ON DASD'S
* INPUT: NONE
* UTILITY: SYSUT1 - A FULLY DD DESCRIBED DATA SET
* VOLUMES TO BE MAPPED: ALL VOLUMES TO BE MAPPED MUST HAVE A DD CONTROL
*                  CARD, THE DDNAME MAY BE ANYTHING, IT IS PREFFERED
*                  IF THEY WERE DD1, DD2, ETC.  DISP=OLD,VOLUME=SER AND
*                  UNIT=  MUST BE GIVEN. NO OTHER PARAMETERS ARE NEEDED
*                  THESE DD CARDS MUST FOLLOW THE SYSUT1 DD CARD.
         SPACE 3
* OUTPUT: SYSPRINT
* METHOD:
*   1.  FIND TIOT BY USING EXTRACT
*   2.  READ TIOT TO FIND NEW DDNAMES
*   3.  PUT DDNAME IN DCB OF 'TEST' AND 'UTILITY'
*   4.  READ JFCB FOR 'TEST'  THIS GIVES VOLUME NUMBER OF DISK
*       DESIRED TO BE MAPPED.
*   5.  FETCH VOLUME NUMBER FROM JFCB.
*   6.  SEARCH UCB'S FOR THIS DISK.
*   7.  LOCATE POSITION OF VTOC.
*   8.  READ VTOC USING OBTAIN ABSOLUTE TRACK.
*   9.  CONVERT DATA TO READABLE FORMAT FOR PRINT LINE.
*  10.  ACCUMULATE ALL EXTENTS AND SORT IN ORDER OF FIRST TRACK.
*  11.  IF THE DATA SET IS A PARTITIONED DATA SET THEN THE FOLLOWING
*       TASKS ARE PERFORMED TO CHECK THE DIRECTORY SIZE.  IF NOT
*       THEN THE NEXT DATA SET IS FETCHED AND CONVERTED.
*  12.  READ THE JFCB FOR THE 'UTILITY' DCB.  IT HAS THE DDNAME
*       INSERTED FROM ITEM 3.
*  13.  CHANGE THE NAME OF THE DATA SET TO CORRESPOND TO THE PARTITION-
*       ED ONE DESIRED.
*  14.  OPEN TYPE J THE DATA SET USING THE MODIFIED JFCB.
*  15.  GET BLOCKS FROM THE DIRECTORY UNTIL END OF FILE.  RECORD THE
*       NUMBER OF TOTAL DIRECTORY BLOCKS AND THE NUMBER USED.
*  16.  AFTER ALL THE DATA SETS ARE LISTED, THEN A DISK STORAGE SPACE
*       MAP IS MADE.  THE MAP SHOWS ALL EXTENTS IN ASCENDING TRACK
*       ORDER.  A CROSS REFERENCE IS MADE TO THE DSNAME.
*$DOC$****************************************************************
MAPDISK  CSECT
R0       EQU   0                  SYSTEMS
R1       EQU   1                  SYSTEMS
R2       EQU   2                  WORK & TEMP
R3       EQU   3                  WORK & TEMP
R4       EQU   4                  WORK & TEMP
R5       EQU   5                  WORK & TEMP
R6       EQU   6                  BASE REGISTER FOR PROGRAM
R7       EQU   7                  BASE TABLE
R8       EQU   8                  BASE THIS CSECT
R9       EQU   9                  BASE UCB DSECT
R10      EQU   10                 BASE DSCB DSECT
R11      EQU   11                 BASE UCB TABLE DSECT
R12      EQU   12                 BASE CVT DSECT
R13      EQU   13                 SAVE & WORKSCTN DSECT
R14      EQU   14                 RETURN
R15      EQU   15                 REGISTER ASSIGNMENTS
         SAVE (14,12)                                           PES0678
         LR    R8,R15                                           PES0678
         LA    R6,2048(R8)                                      PES0678
         LA    R6,2048(R6)                                      PES0678
         USING MAPDISK,R8,R6                                    PES0678
         GETMAIN R,LV=WRKLNGTH         GET WORKING STORAGE AREA PES0678
         USING WORKSCTN,R1                                      PES0678
         ST    R1,8(R13)                                        PES0678
         ST    R13,SAVEAREA+4                                   PES0678
         LR    R13,R1                                           PES0678
         USING DSCB4,R10          SETTING UP ADDRESSES
         USING UCB,R11
         USING CVT,R12
         USING WORKSCTN,R13                                     PES0678
         OPEN  (PRINT,(OUTPUT))
         MVC   APPEN,CVTXAPG+1    MOVE ADDRESS ONCE
         EXTRACT TIOT,'S',FIELDS=(TIOT)   GET ADDRESS OF TIOT IN WORK
         L     R2,TIOT            BRING ADDRESS OF TIOT IN
         MVC   JOBNAME,0(R2)      SAVE JOBNAME FOR LATER CHECK
         LA    R2,24(R2)          BUILD UP TO FIRST DDNAME
         SR    R3,R3              CLEAR A REGISTER
FNDSYSUT CLC   4(7,R2),NOUTIL+4
         BE    SVSYSUTA
         IC    R3,0(R2)
         LTR   R3,R3                   CHECK FOR END LIST
         BZ    ERROR
         IC    R3,0(R2)
         LA    R2,0(R2,R3)
         B     FNDSYSUT
ERROR    BAL   R14,HEADING
         MVC   EXTOUT+3(29),NOUTIL
         BAL   R14,LINE0OUT            PRINT ABOVE
         B     GOBCK                   LEAVE
SVSYSUTA EQU   *
         MVC   SVUCBADR,17(R2)  SAVE UCB ADDRESS FROM SYSUT1 TIOT ENTRY
         LA    R2,0(R2,R3)         READY FOR NEXT
         ST    R2,TIOT             STORE VALUE FOR NEXT TIME AROUND
*        INITIAL HEADING
         SPACE
DISKLOOP LA    R7,F356TBL    ADDRESS OF 3-5-6 DSCB POINTERS     PES0678
         LA    R10,WORK           ADDRESS FOR DSCB FORMAT 4
         L     R12,CVTPTR              ADDRESS FOR CVT
         MVC   NTRKNT,=F'1'       START DSCB'S AT BOTTOM OF TABLE
         MVC   SRTKNT,=F'1'       START SORT COUNT AT BOTTOM
         OC    BIN(2),BIN              CLEAR BIN FOR CNVT
         MVC   SUBCEL,SAVESER+6        BLANK SUB CELL IN HEADING
         L     R11,CVTILK2   ADDRESS OF UCB POINTER
SWT1     NOP   MANY               SWITCH FOR MORE THAN ONE VOL IN DD
         SR    R3,R3              CLEAR COUNT REGISTER
         L     R2,TIOT            CHECK FOR END OF WORK
         IC    R3,0(R2)
         LTR   R3,R3
         BZ    ALLDONE
         CLC   4(8,R2),=CL8'SYSPRINT'                           PES0678
         BE    SKIPDD
         CLC   4(8,R2),=CL8'SYSABEND'
         BE    SKIPDD
         CLC   4(8,R2),=CL8'SYSIN'
         BE    SKIPDD
         MVC   DCBDDNM(8),4(R2)   MOVE THIS NAME TO DCB
         MVC   DCBDDNM2(8),4(R2)  MOVE NAME TO UTILITY DATA BLOCK
         LA    R2,0(R2,R3)        READY FOR NEXT DDNAME
         ST    R2,TIOT            REPLACE
         RDJFCB    (TEST)         GET VOLUME NO. FOR THIS DD
MANY     SR    R3,R3
         IC    R3,JFCBNVOL        CHECK NUMBER OF VOLS LISTED
         BCT   R3,OVER            LAST ONE DOES NOT JUMP
         NI    SWT1+1,X'0F'       TURN OFF SWITCH
SLIPIN   LA    R3,JFCBVOLS(R3)    ADDRESS OF VOLUME NUMBER
         MVC   SAVESER,0(R3)      MOVE IT TO TITLE
UCBLOOP  ST    R11,UCBPTRAD   SAVE R11
         LH    R11,0(R11)              LOAD UCB ADDR
         LTR   R11,R11
         BZ    NEXTADDR                B IF DUMMY ENTRY
         BM    NOTHERE                 B END OF LIST
         CLI   UCBTYP+2,X'20'          CHECK FOR DIRECT ACCESS
         BE    ONOFF              DA JUMPS
NEXTADDR L     11,UCBPTRAD             RESTORE 11
         LA    11,2(11)                NEXT ENTRY IN TABLE
         B     UCBLOOP            NEXT UCB ADDRESS
ONOFF    TM    UCBSTAT,X'80'   CHECK FOR ON-LINE                PES0678
         BZ    NEXTADDR           UNIT IS OFFLINE
         CLC   UCBVOLI,=6X'0'         TEST FOR NO VOL SER       PES0678
         BE    NEXTADDR
         CLC   JOBNAME+1(3),=C'SMI'                             PES0282
         BE    PASSVIRT            LET UP MAP VIRTUAL VOLS      PES0282
         TM    UCBTBYT2,UCBRVDEV   CHECK FOR VIRTUAL VOL        PES0282
         BO    NEXTADDR           NO MAP                        PES0282
PASSVIRT EQU   *
         CLC   SAVESER,UCBVOLI    CHECK FOR VOLUME HERE         PES0678
         BNE   NEXTADDR           IF NOT HERE, TRY NEXT ONE
         MVC   TTRVTOC,UCBVTOC    SAVE TTR OF VTOC              PES0678
         MVC   UNIT,UCBNAME            PUT IN UNIT NAME
         BAL   R14,HEADING   PUT OUT TITLE
         MVC   EXTOUT+20(42),HEAD2  PUT IN HEADING
         SPACE 2
*        HEADER 2
         SPACE
         BAL   R14,LINE0OUT
         SPACE 2
*        HEADER 3
         SPACE
         LA    R0,HEAD3   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         SPACE 2
*        HEADER 4
         SPACE
         LA    R0,HEAD4   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         AP    LINEKNT,=P'3'      BOOST LINE COUNT
         MVI   SEEK,0
         MVC   SEEK+1(7),SEEK     CLEAR CONVERT BIN
         STH   R11,UCBXREF+2      STORE UCB ADDRESS INDEX
         L     R15,CVTPCNVT       LOAD ADDRESS OF CONVERT ROUTINE
         L     R0,TTRVTOC              TTR OF VTOC
         LA    R1,DEB             ADDRESS OF PSEUDO DEB
         LA    R2,SEEK            ADDRESS TO STORE
         STM   R9,R13,HOLD        SAVE REGS
         BALR  R14,R15
         LM    R9,R13,HOLD        RETURN REGS
         SPACE 2
*        READ FORMAT 4 DSCB
         SPACE
GETDSCB  OBTAIN LIST              LOOK FOR DSCB'S
         LTR   R15,R15            SEE IF OK
         BE    NEXTCHK            OK
         CH    R15,=H'8'   MIDDLE OF TEST AREA
         BL    GETDSCB            VOLUME NOT MOUNTED
         BE    FETCHNXT           NOT THERE ANY MORE, GET NEXT DSCB
IOER     MVC   SERMSG,SAVESER     PUT SERIAL NUMBER IN PRINT
IOER3    LA    R0,MSSAGE+4   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVC   DATANAME(132),OUTBIN    CLEAR LINE
         B     DISKLOOP           GO GET NEXT VTOC
IOER1    MVC   EXTOUT(60),=C'0FORMAT 5 DSCB NOT FOUND BUT POINTED TO BY*
                THE FORMAT 4 DSCB'
         BAL   R14,LINE0OUT
IOER4    MVC   SERMSG,SAVESER     PUT SER NUMBER IN PRINT OUT
         B     IOER3              NEXT LINE ON PRINT NOT CONSOLE
IOER2    MVC   EXTOUT(55),=C'0SEARCH FOR A FORMAT 3 OR FORMAT 5 DSCB IS*
                UNSUCCESSFUL'
         BAL   R14,LINE0OUT
         B     IOER4
SKIPDD   LA    R2,0(R2,R3)   BUMP TO NEXT ENTRY
         ST    R2,TIOT
         B     SWT1
OVER     STC   R3,JFCBNVOL        STORE COUNT BACK
         OI    SWT1+1,X'F0'       TURN SWITCH ON
         MH    R3,=H'6'           FOR NUMBER OF VOL SERIALS
         B     SLIPIN             PICK UP VOL SERIAL
CHECKIT1 CH    R15,=H'8'   MIDDLE OF TEST AREA
         BL    F1DSCBS
         B     IOER-4
NOTHERE  EQU   *
         MVC   EXTOUT+20(42),HEAD2  PUT IN HEADING
         BAL   R14,LINE1OUT
         MVC   EXTOUT+1(31),WARNING   VOLUME NOT MOUNTED
         BAL   R14,LINE1OUT
         B     DISKLOOP           GET NEXT VOLUME
HEADING  ST    R14,SV14HOLD       SAVE RETURN
         TIME  DEC   SECURE DATE/TIME FROM THE INTEGRAL TIMER
         SRL   0,12   SHIFT TO SECONDS/DECADE DIGIT
         ST    0,WORD   SAVE THE DECIMAL TIME IN (HHMMS)
         OI    WORD+3,X'0F'   CHANGE SECONDS/DECADE TO (NO-SIGN)
         UNPK  TIME,WORD   DISPLAY THE TIME OF DAY
         ST    1,WORD   SAVE THE DECIMAL DATE IN JULIAN
         UNPK  FIVE,WORD   CONVERT THE DATE TO DISPLAY FORM
         MVC   YEAR,FIVE   DISPLAY THE YEAR
         ZAP   DOUBLE,=P'0'   CLEAR THE YEAR CONVERSION AREA
         MVO   DOUBLE,WORD+1(1)   LOAD THE YEAR AS PACKED DECIMAL
         MVI   WORD+1,X'00'   CLEAR YEAR FROM THE JULIAN DATE
         CVB   1,DOUBLE   LOAD YEAR AS THE DIVIDEND
         SR    0,0   & CLEAR THE DIVIDEND HIGH-ORDER REGISTER
         D     0,=F'4'   YEAR / 4
         LTR   0,0   IS THIS A LEAP YEAR
         BNZ   LOOKSET   IF NO, BYPASS LEAP YEAR ADJUSTMENT
         AP    MONTHS+5(2),=P'1'   SET FEBRUARY DAYS TO '29', LEAP YEAR
LOOKSET  LA    1,MONTHS   SET THE MONTH TABLE BASE
LOOKAT   SP    WORD,0(2,1)   IS THE DAY WITHIN THIS MONTH
         BNP   GETMONTH   IF YES, GO TO EXTRACT THE MONTH ABBREVIATION
         LA    1,5(1)   SET THE TABLE BASE TO THE NEXT MONTH
         B     LOOKAT   & GO TO CHECK THE NEXT MONTH
GETMONTH AP    WORD,0(2,1)   RESET THE DAY OF THE MONTH
         MVC   MONTH,2(1)   EXTRACT THE PROPER MONTH ABBREVIATION
         OI    WORD+3,X'0F'   UN-SIGN THE DAY OF THE MONTH
         UNPK  DAY,WORD   DISPLAY THE DAY OF THE MONTH
         AP    PAGEKNT,=P'1'      ADD ONE TO PAGE COUNT
         MVC   PAGEPLC,PATTERN    PUT IN EDIT MASK
         ED    PAGEPLC,PAGEKNT    NUMBER FOR PAGE
         LA    R0,HEAD1   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVI   EXTOUT,C'0'             SKIP 1
         LA    R0,EXTOUT   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVI   EXTOUT,C' '
         ZAP   LINEKNT,=P'3'      THREE LINES PRINTED
         L     R14,SV14HOLD       RESTORE
         BR    R14                CONTINUE
NEWPAGE  ST    14,SV14
         MVC   EXTOUT+20(42),HEAD2  PUT IN HEADING
         LA    R0,EXTOUT   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVC   EXTOUT+1(61),EXTOUT     CLEAR LINE
         LA    R0,HEAD3   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         LA    R0,HEAD4   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVC   CRDATE(85),CRDATE-2  CLEAR REST OF LINE
         BAL   R14,PRINTSUB-4   & GO TO PRINT A LINE
         AP    LINEKNT,=P'3'
         L     14,SV14
         BR    14
NEXTCHK  CLI   DS4IDFMT,C'4'   CHECK FOR FORMAT 4
         BNE   IOER               FIRST BLOCK MUST BE
         MVC   SAVEF4,DSCB4       SAVE ALL OF FORMAT 4
         MVC   SVCOUNT,DS4DEVDT   SAVE NUMBER OF DSCBS PER TRACK
         MVC   TRKPRCYL(2),DS4DEVSZ+2  SAVE NUMBER OF TRACKS PER CYL
         SPACE 2
*        READ ALL DSCB'S EXCEPT FORMAT 4
         SPACE
FETCHNXT SR    R2,R2              CLEAR WORKING REG
         LA    R10,SAVEF4         SET UP ADDRESS FOR IT
         IC    R2,ADDRS+4         RECORD COUNT IN
         LA    R2,1(R2)           BOOST BY ONE
         CH    R2,TRKCNT          CHECK NUMBER OF RECORDS ON THE TRACK
         BNH   FETCHSQ            GO FETCH NEXT
         MVC   WORK(4),ADDRS      MOVE TO TAKE CARE OF BOUNDRY
         LH    R2,WORK+2          LOAD ABSOLUTE TRACK ADDRESS
         LA    R2,1(R2)   BOOST BY ONE
         STH   R2,WORK+2          RESTORE ALL THE WAY
* CHECK FOR CYLINDER OVERFLOW
         CH    R2,TRKPRCYL
         BL    RTORCCHH
         SR    R2,R2                   RESET HEAD CNT
         STH   R2,WORK+2                  AND STORE
         LH    R2,WORK                    THEN
         LA    R2,1(R2)                INCR CYL CNT
         STH   R2,WORK                    AND STORE IT
RTORCCHH MVC   ADDRS(4),WORK   PLACE BACK (CYL + 1)
         LA    R2,1               RECORD = 1
FETCHSQ  STC   R2,ADDRS+4         STORE RECORD COUNT
FETCHRND CLC   DS4HPCHR(5),ADDRS       SEE IF VTOC FINISHED
         BL    CK356TBL                SEE IF ANY DSCB'S AFTER LAST F1
F1DSCBS  OBTAIN    LIST           NEXT DSCB
         LTR   R15,R15            CHECK FOR SUCCESS
         BNE   CHECKIT1           JUMP IF BAD
         LA    R10,WORK           RE INSTATE FOR NEXT TWO CHECKS
         CLI   DS4IDFMT,X'0'      CHECK FOR FORMAT 3-5-6
         BE    FETCHNXT           MUST BE ZERO SO GO GET NEXT
         CLC   DS1PTRDS(5),=6X'0'   CK CCHHR PTR
         BE    NOPTR
         LA    R1,30                   SET COUNTER
         LA    R2,EXTNTBL    LOAD ADDR OF EXTENT TABLE          PES0678
         LA    R2,2(R2)                BUMP PAST TABLE COUNT
FINDHOLE CLC   0(5,R2),=6X'0'   IS THIS ENTRY USED
         BE    SAVE356P                NO - USE IT
         LA    R2,5(R2)                BUMP TO NEXT ENTRY
         BCT   R1,FINDHOLE
         MVC   EXTOUT(50),=C'0EXTNTBL OVERFLOW, UNPREDICTABLE RESULTS M*
               AY OCCUR'
         BAL   R14,LINE1OUT
         B     CK356TBL                FINISH THIS VOLUME
SAVE356P MVC   0(5,R2),DS1PTRDS        SAVE PTR
         LA    R2,EXTNTBL    GET BEG AGAIN                      PES0678
         LH    R1,0(R2)                LOAD COUNT
         LA    R1,1(R1)                  INCR
         STH   R1,0(R2)                  AND SAVE
NOPTR    CLI   DS4IDFMT,C'1'   CHECK FOR FORMAT 1
         BE    FORMAT1            GO PROCESS
         MVC   0(8,R7),SEEK       PUT CCHHR IN POINTER TABLE
         GETMAIN   R,LV=160       FETCH 160 BYTES TO STORE DSCB
         ST    R1,8(R7)           STORE ADDRESS OF WHERE DSCB STORED
         LA    R7,12(R7)          BOOST
         MVC   0(140,R1),WORK     MOVE DSCB
         LA    R2,EXTNTBL                                       PES0678
         LH    R1,0(R2)                LOAD COUNT
         LTR   R1,R1                   TEST ZERO ENTRIES
         BZ    FETCHNXT                IF NONE GO READ NEXT DSCB
         LA    R1,30                   SET COUNT
         LA    R2,2(R2)                BUMP PAST COUNT
FIND356P CLC   ADDRS(5),0(R2)          IS THIS DSCB IN TBL
         BE    CLEAR356                YES - GO CLEAR TBL ENTRY
         LA    R2,5(R2)                NO - INCR TO NEXT ENTRY
         BCT   R1,FIND356P             SEARCH ENTIRE TABLE
         B     FETCHNXT           GO GET NEXT DSCB
CLEAR356 XC    0(5,R2),0(R2)           CLEAR ENTRY FOR THIS DSCB
         LA    R2,EXTNTBL                                       PES0678
         LH    R1,0(R2)                LOAD COUNTER
         BCTR  R1,0                      DECR
         STH   R1,0(R2)                  AND STORE
         B     FETCHNXT                READ NEXT DSCB
CK356TBL MVI   FETCHRND+7,X'40'   RESET BRANCH
         LA    R2,EXTNTBL    LOAD TBL ADDR                      PES0678
         LH    R1,0(R2)                LOAD TABLE COUNT
         LTR   R1,R1                   TEST EMPTY TBL
         BZ    PRMAP                   NOTHING PAST LAST F1
         MVI   FETCHRND+7,X'F0'        MAKE UNCONDITIONAL BRANCH
         LA    R1,30                   SET COUNT
         LA    R2,2(R2)                BUMP TO CCHHR ENTRIES
SRCHF356 CLC   0(5,R2),=6X'0'   IS THIS SLOT EMPTY
         BNE   FOUND356                NO - SET UP TO READ IT
         LA    R2,5(R2)                YES - BUMP TO NEXT ENTRY
         BCT   R1,SRCHF356
         B     PRMAP                   END OF TBL GO PRINT MAP
FOUND356 MVC   ADDRS(5),0(R2)          MOVE IN ADDRESS OF DSCB
         B     F1DSCBS                 GO READ IT
FORMAT1  GETMAIN   R,LV=160       FETCH 160 BYTES TO STORE DSCB
         MVC   0(140,R1),WORK     STORE DSCB
         MVC   140(8,R1),SEEK     MBBCCHHR STORED ALSO
         LA    R3,DSTBL-4         FETCH ADDRESS OF STARTING POINT
         L     R4,NTRKNT          NO. OF ENTRIES
SORTF12  BCT   R4,SORTF11
         ST    R1,4(R3)           PUT ADDRESS AWAY
SORTF14  L     R4,NTRKNT          BRING IN COUNT
         LA    R4,1(R4)           TO BOOST BY ONE
         ST    R4,NTRKNT
         B     FETCHNXT           GO GET NEXT DSCB
SORTF11  LA    R3,4(R3)           BOOST TABLE ADDRESS TO NEXT
         L     R5,0(R3)           POINTER TO DSCB
         CLC   WORK(44),0(R5)     LOOK AT DSNAME
         BH    SORTF12            JUMP AROUND IF IT DOES NOT FIT
SORTF13  ST    R1,0(R3)           PUT ADDRESS IN TABLE
         LR    R1,R5              LAST ADDRESS MOVED AROUND
         L     5,4(3)
         LA    R3,4(R3)           BOOST TO NEXT
         BCT   R4,SORTF13         MOVE ALL UP
         ST    R1,0(R3)           PUT OUT LAST ADDRESS
         B     SORTF14            FINISH UP THIS DSCB
         SPACE 2
*        PRINT 'VTOC'
         SPACE
PRMAP    MVC   DATANAME(4),=C'VTOC'
         LA    R1,DS4VTOCE        PUT OUT EXTENT SIZE
         BAL   R14,ABTOREL        CONVERT TO RELATIVE TRACKS R2 BACK
         LA    R3,1               PSEUDO EXTENT NO. 1
         BAL   R14,STORMAP        STORE EXTENT FOR MAP R1,R2,DATANAME
         BAL   R14,LENGTH         FIND LENGTH OF DATA SET R2-R3 BACK
         LA    R1,SPALLOC
         BAL   R14,EDIT           PREPARE TO PRINT R3,R1
         LR    R9,R2              SAVE TOTAL FOR AWHILE
         MVC   HOLD+4(4),DS4HPCHR   GET END MARKER
         SRL   R2,16
         BAL   R14,ABTOREL1       DO ONLY USED
         BAL   R14,LENGTH
         LA    R1,SPUSED
         BAL   R14,EDIT
         SPACE 2
*        PRINT VTOC VALUES
         SPACE
         BAL   R14,PRINTSUB-4   & GO TO PRINT A LINE
         MVC   EXTOUT+11(24),HEAD5  EXT-FIRST--LAST-LENGTH
         SPACE 2
*        HEAD 5
         SPACE
         BAL   R14,LINE0OUT
         AP    LINEKNT,=P'2'      LINE COUNT UP ONE
         LR    R2,R9              OUT OF ICE
         LA    R3,1               EXTENT NUMBER
         SPACE 2
*        COMPUTE FREE SPACE VALUES
         SPACE
         BAL   R14,FULLEDIT       DO FULL EDIT
         MVC   EXTOUT+12(23),ZEXT   VALUES OF EXT-FIRST--LAST-LENGTH
         SPACE 2
*        PRINT 'FREE SPACE'
         SPACE
         BAL   R14,LINE1OUT
         TM    DS4VTOCI,X'80'     TEST FOR DSCB 5
         BO    DOF1S              NO DSCB 5 JUMPS
         MVC   DATANAME(10),=CL10'FREE SPACE'
         MVC   SPUSED,SPUSED-1    CLEAR USED SPACE
         LA    R10,F356TBL   FETCH ADDRESS OF FIRST FORMAT      PES0678
         L     R10,8(R10)                FIVE DSCB
         CLI   DS5FMTID,C'5'      CHECK FOR 5
         BNE   IOER1              BAD, GO TO NEXT VOL
         LA    R9,ACCTABLE        LOAD ADDRESS OF ACCUMULATION TABLE
         SR    R1,R1              CLEAR ACCUM REG.
NEXTDS   LA    R5,8                    8 FIELDS FIRST
         LA    R4,DS5AVEXT        AREA OF EXTENTS
         BAL   R14,NOTHER         DO FIRST 8 EXTENTS
         LA    R5,18              LAST IN DSCB
         LA    R4,DS5MAVET
         BAL   R14,NOTHER         DO LAST 18 EXTENTS
         C     R5,DS5PTRDS+1      CHECK IF ONE MORE DSCB5 AROUND
         BE    ENDDSCB5           NO, QUIT
         MVC   FIVE,DS1PTRDS   SET F5 KEY
         BAL   R14,SRCHDSCB       GO SEARCH FOR DSCB 5
         B     NEXTDS             KEEP GOING TILL END
ENDDSCB5 MVC   0(4,R9),=F'0'      INDICATE END OF LIST BY ZERO
         LR    R3,R1              COUNT IN PARM AREA
         LA    R1,SPALLOC         OUTPUT AREA
         BAL   R14,EDIT           READY FOR PRINT
         SPACE 2
*        PRINT FREE SPACE VALUES
         SPACE
         BAL   R14,PRINTSUB-4   & GO TO PRINT A LINE
         AP    LINEKNT,=P'1'      COUNT IS CORRECT
         MVC   DATANAME+11(5),=C'* * *'  SIGNAL AFTER FREE SPACE
         BAL   R14,PRNTEXTS       PRINT AND SORT ALL EXTENTS
         SPACE 2
* START REAL DATA SET PRINT OUTS HERE, THRU WITH 4 AND 5
         SPACE
DOF1S    L     R4,NTRKNT   CHECK FOR NO FORMAT 1'S
         BCT   R4,FINEST
         B     MAPZ               NO F1'S SO DO MAP
FINEST   ST    R4,NTRKNT          STORE CORRECT VALUE FOR COUNT
         LA    R12,DSTBL          PLACE OF FIRST DSCB F1
DONXTF1  L     R10,0(R12)         ADDRESS OF DSCB IS IN
         NI    SPUSEDSW+1,X'00'   RESET 'SPACED USED' BYPASS SWITCH
         OI    SWPDS+1,X'F0'   SET 'DIRECTORY LOOK-UP' BYPASS SWITCH
         MVC   DATANAME,DS1DSNAM  BRING IN NAME OF DATA SET
         LA    R1,DS1CREDT        LOAD ADDRESS OF DATE
         LA    R2,CRDATE          PLACE TO STORE
         BAL   R14,CALEN          GO DO CALENDER
         LA    R1,DS1EXPDT        PICKUP
         LA    R2,PURGDATE        STORE
         BAL   R14,CALEN
         TM    DS1DSORG,X'80'          CHECK FOR ISAM
         BZ    TYPX04
         MVC   TYPESET,=C'INDX'
         OI    SPUSEDSW+1,X'F0'   SET 'SPACE USED' BYPASS SWITCH
         B     TYPON
TYPX04   TM    DS1DSORG,X'20'          CHECK FOR DIRECT
         BZ    TYPX06
         MVC   TYPESET,=C'DIR.'
         B     TYPON
TYPX06   TM    DS1DSORG,X'40'   CHECK FOR PHYSICAL SEQUENTIAL
         BZ    TYPX1
         MVC   TYPESET,SEQ        SEQUENTIAL DATA SET
         B     TYPON
TYPX2    NI    SWPDS+1,X'0F'      SET TO GO THRU PDS
         MVC   TYPESET,=C'PART'   PARTITIONED
         B     TYPON
TYPX1    TM    DS1DSORG,X'02'     CHECK FOR PARTITIONED
         BO    TYPX2
         MVC   TYPESET,WARNING+7   NOT DEFINED
TYPON    SR    R3,R3
         IC    R3,DS1NOEPV        GET EXTENT NO.
         ST    R3,EXTKNT          STORE EXTENT VALUE FOR REST OF CALCUL
         CVD   R3,WORK
         UNPK  EXTENTS,WORK+6(2)  TAKE OUT EXTENTS
         OI    EXTENTS+1,X'F0'    MAKE GOOD ZONE
         MVC   SERIALNO,DS1DSSN   MOVE SERIAL NUMBER
         MVC   WORK(2),DS1VOLSQ   SEQUENCE NO IN HALF WORD
         LH    R3,WORK
         CVD   R3,WORK
         UNPK  SEQNO,WORK+6(2)    VOLUME SEQUENCE NUMBER
         OI    SEQNO+1,X'F0'      PUT IN SEQ WITH ZONE
*                                 CHECK SECURITY
         MVC   SECURITY(3),=C'NO '    PUT NO IN           PES0282
         TM    DS1DSIND,DS1IND40   TEST FOR RACF          PES0282
         BZ    RACFOFF                                    PES0282
         MVC   SECURITY(3),=C'YES'                        PES0282
RACFOFF  EQU   *                                          PES0282
         LA    R1,DS1EXT1   LOAD 1ST EXTENT ADDRESS
         BAL   R4,CONV   & GO TO CONVERT TO TRACKS
         STH   R3,EXTS   SAVE 1ST EXTENT BASE
         LA    R1,10(R1)   LOAD 2ND EXTENT ADDRESS
         BAL   R4,CONV   & GO TO CONVERT TO TRACKS
         STH   R3,EXTS+2   SAVE 2ND EXTENT BASE
         CLI   0(R1),X'00'   IS THERE ONLY 1 EXTENT
         BNE   *+10   IF NO, BYPASS DUMMYING OVERFLOW TO 1 CYLINDER
         MVC   DS1EXT3+2(2),DS1EXT1+6   SET LAST PRIME CYLINDER AS THE X
               OVERFLOW AREA BASE
         LA    R1,10(R1)   LOAD 3RD EXTENT ADDRESS
         BAL   R4,CONV   & GO TO CONVERT TO TRACKS
         STH   R3,EXTS+4   SAVE 3RD EXTENT BASE
         MVC   FIVE,DS1PTRDS   SET F2 OR F3 KEY
         LA    R9,ACCTABLE        NOW READY TO FIND PRIMARY ALLOCATION
         MVC   SPUSED,BLANK23
SPUSEDSW NOP   SEC3
         CLC   DS1LSTAR(5),=6X'0'   ARE FIELDS VALID
         BE    SEC3                    NO
         LH    R3,DS1LSTAR        RELATIVE NUMBER OF TRACKS USED
         CLI   DS1LSTAR+2,0            ANY RECORDS USED ON TRK
         BE    *+8                     NO
         LA    R3,1(R3)                YES - UP TRK COUNT
         LA    R1,SPUSED          OUT AREA
         BAL   R14,EDIT           PUT OUT USED VALUE
SEC3     SR    R11,R11   CLEAR ACCUM REG
         LA    R1,DS1EXT1         F1 FIRST EXTENT
         L     R5,EXTKNT          NUMBER OF EXTENTS
         LTR   R5,R5              TEST FOR AN EMPTY DATA SET
         BZ    EXTSS3             JUMP IF EMPTY
         C     R5,=F'4'           CHECK FOR ALL EXTENTS IN F1
         BL    EXTSS1
         LA    R5,3               SET FOR LAST 3
EXTSS1   BAL   R14,ALLSUM         SUM UP ALLOCATION
         CLI   DS1NOEPV,4         CHECK FOR F3 TO BE CHECKED
         BL    EXTSS3             THRU
SRCHF3   BAL   R14,SRCHDSCB   GET NEW FORMAT 3 DSCB
         CLI   DS3FMTID,C'3'           IS THIS A FORMAT 3 DSCB
         BE    FOUNDF3                 YES - GO COMPUTE EXTENTS
         MVC   FIVE,DS3PTRDS   SET F3 KEY
         B     SRCHF3
CALC     LTR   R0,R0   IS THE ENTRY BLANK
         BCR   8,R4   IF YES, EXIT
         LA    R3,EXTS+4   LOAD EXTENTS END ADDRESS
CALC1    CH    R0,0(R3)   IS THE ENTRY IN THIS EXTENT
         BNL   CALC2   IF NO, GO TO CALCULATE USAGE IN TRACKS
         SH    R3,=H'2'   SHIFT TO LOWER EXTENT
         B     CALC1   & RETURN TO THE CHECK
CALC2    SH    R0,0(R3)   ENTRY - BASE = USAGE
         A     R0,WORK   ACCUMULATE
         ST    R0,WORK   & STORE
         BR    R4   EXIT
FOUNDF3  LA    R1,DS3EXTNT   START OF GROUP
         L     R5,EXTKNT          EXTENT COUNT BACK
         SH    R5,=H'3'   REDUCE BY THOSE ALREADY DONE
         CH    R5,=H'5'   FOUR MORE FIELDS
         BL    EXTSS2
         LA    R5,4               SET TO 4
EXTSS2   BAL   R14,ALLSUM         SUM UP SOME MORE
         L     R5,EXTKNT          LOAD IN COUNT
         SH    R5,=H'7'   SET TO DO LAST NINE
         BNP   EXTSS3             THRU
         LA    R1,DS3ADEXT
         BAL   R14,ALLSUM         DO LAST OF THEM
EXTSS3   LR    R3,R11             PUT IN OUTPUT AREA
         LA    R1,SPALLOC         TOTAL ALLOCATION
         BAL   R14,EDIT           PUT OUT TOTAL
         MVC   0(4,R9),=F'0'      INDICATE END OF LIST BY ZERO
         L     R10,0(R12)         POINT BACK TO F1
         CLI   TYPESET,C'I'   IS THIS AN ISAM FILE
         BNE   SWPDS   IF NO, BYPASS USED SPACE CALCULATION
         MVI   EXTS+6,X'00'   CLEAR ISAM
         MVC   EXTS+7(5),EXTS+6   CALCULATION AREA
SHIFT    CLC   EXTS(2),EXTS+2   IS 2ND EXTENT OUT OF SEQUENCE
         BH    SHIFT1   IF YES, GO TO RE-SEQUENCE
         CLC   EXTS+2(2),EXTS+4   IS 3RD EXTENT OUT OF SEQUENCE
         BH    SHIFT2   IF YES, GO TO RE-SEQUENCE
         MVC   FIVE,DS1PTRDS   SET F2 KEY
         CLC   FIVE(4),FIVE+1   IS THE KEY BLANK
         BE    *+16   IS YES, GO TO SET THE NO FORMAT 2 INDICATORS
         BAL   R14,SRCHDSCB   GET NEW FORMAT 2 DSCB
         CLI   DS3FMTID,C'2'   IS THIS A FORMAT 2 DSCB
         BE    FOUND2   IF YES, GO TO LOCATE LAST RECORDS
         SR    R3,R3   CLEAR SPACE USED COUNT
         B     SRCHF2N   & BYPASS
SHIFT1   MVC   EXTS+6(2),EXTS   SAVE A
         MVC   EXTS(2),EXTS+2   SHIFT B
         MVC   EXTS+2(2),EXTS+6   SHIFT A
         B     SHIFT   & RETURN TO SEQUENCE CHECK
SHIFT2   MVC   EXTS+6(2),EXTS+2   SAVE B
         MVC   EXTS+2(2),EXTS+4   SHIFT C
         MVC   EXTS+4(2),EXTS+6   SHIFT B
         B     SHIFT   & RETURN TO SEQUENCE CHECK
FOUND2   LA    R1,DS3FMTID+50   LOAD ADDRESS OF LAST PRIME RECORD
         BAL   R4,CONV   & GO TO CONVERT TO TRACKS
         STH   R3,EXTS+6   SAVE LAST PRIME
         LA    R1,DS3FMTID+60   LOAD ADDRESS OF LAST INDEX RECORD
         BAL   R4,CONV   & GO TO CONVERT TO TRACKS
         STH   R3,EXTS+8   SAVE LAST INDEX
         LA    R1,DS3FMTID+73   LOAD ADDRESS OF LAST OVERFLOW RECORD
         BAL   R4,CONV   & GO TO CONVERT TO TRACKS
         STH   R3,EXTS+10   SAVE LAST OVERFLOW
         SR    R0,R0   CLEAR USED SPACE CALCULATOR
         CLI   DS3FMTID+56,X'00'   IS THIS THE PRIME TRACK BASE
         BE    *+8   IF YES, GO TO INDEX CHECK
         A     R0,=F'1'   AUGMENT NUMBER OF TRACKS USED
         CLI   DS3FMTID+71,X'00'   IS THIS THE INDEX TRACK BASE
         BE    *+8   IF YES, GO TO OVERFLOW CHECK
         A     R0,=F'1'   AUGMENT NUMBER OF TRACKS USED
         CLI   DS3FMTID+79,X'00'   IS THIS THE OVERFLOW TRACK BASE
         BE    *+8   IF YES, GO TO SAVE TRACKS USED
         A     R0,=F'1'   AUGMENT NUMBER OF TRACKS USED
         ST    R0,WORK   SAVE NUMBER OF TRACKS USED
         LH    R0,EXTS+6   LOAD LAST PRIME TTTT
         BAL   R4,CALC   & GO TO FIGURE USAGE
         LH    R0,EXTS+8   LOAD LAST INDEX TTTT
         BAL   R4,CALC   & GO TO FIGURE USAGE
         LH    R0,EXTS+10   LOAD LAST OVERFLOW TTTT
         BAL   R4,CALC   & GO TO FIGURE USAGE
         LR    R3,R0   SET-UP EDIT NUMBER
SRCHF2N  LA    R1,SPUSED   & OUTPUT AREA
         BAL   R14,EDIT   THEN GO TO DISPLAY SPACE USED
         L     R10,0(R12)   POINT BACK TO F1
SWPDS    B     NOPDS   SWITCH FOR DIRECTORY SEARCH
         SPACE 2
*        READ PDS DIRECTORY
         SPACE
         RDJFCB    (UTILITY)      READ IN PARMS
         MVC   JFCBDSNM(44),DS1DSNAM
         MVC   JFCBCRDT(6),DS1CREDT  MOVE IN BOTH DATES
         MVI   JFCBNV0L,1         ONE VOLUME
         MVC   JFCBV0LS(6),SAVESER   PUT IN VOLUME SERIAL NUMBER
         OI    JFCBTSDM,X'08'   SET AS PER INSTRUCTIONS IN SYS PROG
*                          GUIDE TO NOT UPDATE LAST REFERENCE DATE
         L     R5,SV5
         OPEN  (UTILITY,(INPUT)),TYPE=J
         SR    R3,R3              CLEAR NO. USED REG
         SR    R4,R4              CLEAR TOTAL SIZE REG
         SR    R2,R2              JUST ZERO FOR TEST
PDSLOOP  GET   UTILITY,WORK
         CH    R2,WORK            SEE IF BLOCK IS USED
         BZ    PDSLOP             IF ZERO, AVAILABLE
         LA    R3,1(R3)   BOOST BY ONE
PDSLOP   LA    R4,1(R4)   BOOST BY ONE
         B     PDSLOOP            MERRY GO ROUND TILL EOV (DS END)
PDSEND   LA    R1,DRBLUSED
         BAL   R14,EDIT           BLOCKS USED
         LR    R3,R4
         LA    R1,DRBLOCKS
         BAL   R14,EDIT           TOTAL NUMBER OF BLOCKS
         CLOSE (UTILITY)          READY FOR NEXT ROUND
NOPDS    LA    R12,4(R12)         READY FOR NEXT F1
         BAL   R14,PRINTSUB-4   & GO TO PRINT A LINE
         MVC   DRBLOCKS(11),DRBLOCKS-2  CLEAR LAST PART OF LINE
         AP    LINEKNT,=P'1'      CHECK PAGE LENGTH
         CP    LINEKNT,=P'57'     56 LINES PER PAGE
         BL    TOE
         BAL   R14,HEADING        NEW PAGE
         BAL   14,NEWPAGE              PRINT HEAD3 AND HEAD4
TOE      LA    R5,DSORG
         MVC   0(5,R5),BLANK23   CLEAR AREA FOR 'DSORG'
         TM    DS1DSORG,X'80'          TEST ISAM
         BZ    CHBIT0
         MVC   0(2,R5),=C'IS'
         LA    R5,2(R5)
CHBIT0   TM    DS1DSORG,X'40'   SEE IF BIT IS THERE
         BZ    CHBIT1
         MVC   0(2,R5),=C'PS'     PUT IN TYPE
         LA    R5,2(R5)
CHBIT1   TM    DS1DSORG,X'20'     PUT CHECK ON NEXT BIT
         BZ    CHBIT2
         MVC   0(2,R5),DA         DIRECT ACCESS
         LA    R5,2(R5)
CHBIT2   TM    DS1DSORG,X'02'     CHECK MORE BITS
         BZ    CHBIT3
         MVC   0(2,R5),=C'PO'     PARTITIONED
         LA    R5,2(R5)
CHBIT3   TM    DS1DSORG,X'01'
         BZ    CHBIT4
         MVI   0(R5),C'U'         UNMOVABLE
CHBIT4   LA    R5,RECFM
         MVC   0(5,R5),BLANK23   CLEAR AREA FOR 'RECFM'
         TM    DS1RECFM,X'C0'
         BZ    CHBIT8             NOTHING AT ALL - GO OUT
         BM    CHBIT5
         MVI   0(R5),C'U'         PUT IN UNDEFINED
CHBIT6   LA    R5,1(R5)
         B     CHBIT8
CHBIT5   TM    DS1RECFM,X'80'     CHECK FIXED
         BZ    CHBIT7
         MVI   0(R5),C'F'         FIXED FORMAT
         B     CHBIT6
CHBIT7   MVI   0(R5),C'V'         VARIABLE FORMAT
         B     CHBIT6
CHBIT8   TM    DS1RECFM,X'20'     CHECK TRACK OVERFLOW
         BZ    CHBIT9
         MVI   0(R5),C'T'         TRACK OVERFLOW
         LA    R5,1(R5)
CHBIT9   TM    DS1RECFM,X'10'     CHECK
         BZ    CHBIT10
         MVI   0(R5),C'B'         BLOCKED
         LA    R5,1(R5)
CHBIT10  TM    DS1RECFM,X'08'     CHECK NEXT BIT
         BZ    CHBIT11
         MVI   0(R5),C'S'         STANDARD BLOCKS
         LA    R5,1(R5)
CHBIT11  TM    DS1RECFM,X'04'
         BZ    CHBIT12
         MVI   0(R5),C'A'         ASA CONTROL CHARACTER
         B     CHBIT13
CHBIT14  LH    R3,DS1SCALO+2   GET 2ND ALLOCATION
         MH    R3,TRKPRCYL             MAKE TRACKS
         B     CHBIT15            GO IN
CHBIT12  TM    DS1RECFM,X'02'
         BZ    CHBIT13
         MVI   0(R5),C'M'         MACHINE CONTROL CHARACTER
CHBIT13  LH    R3,DS1LRECL        BRING IN RECORD LENGTH
         LA    R2,LRECL           ADDRESS TO STORE
         BAL   R14,LFTJXT         PUT IN SYMBOLS LEFT JUSTIFIED
         MVC   EXTOUT+6(33),TYPESORG  DSORG OF F1
         BAL   R14,LINE1OUT
         LH    R3,DS1BLKL         BLOCK SIZE
         LA    R2,BLKSIZE
         BAL   R14,LFTJXT         SYMBOLS IN
         TM    DS1SCALO,X'C0'     CHECK FOR CYLINDER
         BO    CHBIT14            IT IS IF JUMPS
         LH    R3,DS1SCALO+2      GET 2ND ALLOCATION
CHBIT15  LA    R2,ALL2ND
         BAL   R14,LFTJXT
         MVC   EXTOUT+6(33),TYPESIZE  SIZES OF RECORDS OF F1
         BAL   R14,LINE1OUT
         LR    R1,R10             LOCATION IN PARM
         FREEMAIN  R,LV=160,A=(1)   FREE UP SPACE USED
         BAL   R14,PRNTEXTS       PRINT AND SORT ALL EXTEXTS
         L     R4,NTRKNT          LOAD COUNT OF F1'S
         S     R4,=F'1'
         ST    R4,NTRKNT
         BP    DONXTF1            GO BACK FOR NEXT F1
         SPACE 2
* START OF ALLOCATION MAP
         SPACE
MAPZ     MVC   DATANAME(132),OUTBIN   CLEAR FULL LINE
         L     R5,SRTKNT          LOAD UP NO OF EXTENTS
         BCTR  R5,0               CORRECT COUNT
         LA    R9,SRTBL      START OF SORT BIN                  PES0678
MAP3     BAL   R14,HEADING        TITLE
         MVC   EXTOUT+20(42),HEAD2  PUT IN HEADING
         BAL   R14,LINE0OUT
         LA    R0,TEXTT   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         AP    LINEKNT,=P'2'
MAP2     L     R10,0(R9)          BRING IN ADDRESS STORED IN TABLE
         L     R2,44(R10)         BRING IN SIZE
         BAL   R14,LENGTH         LENGTH
         CVD   R3,WORK
         UNPK  LNGTH,WORK+5(3)    PUT OUT LENGTH
         LH    R3,HOLD            FIRST TRACK
         CVD   R3,WORK
         UNPK  STRTT,WORK+5(3)    START TRACK
         LH    R3,HOLD+2          LAST TRACK
         CVD   R3,WORK            CONVERT TO DECIMAL
         UNPK  LSTT,WORK+5(3)     LAST TRACK
         SR    R3,R3
         IC    R3,48(R10)         EXTENT VALUE
         CVD   R3,WORK
         UNPK  EXTT,WORK+6(2)     PUT OUT EXTENT VALUE
         OI    LNGTH+4,X'F0'      MAKE TO PROPER ZONE
         OI    STRTT+4,X'F0'      MAKE TO PROPER ZONE
         OI    LSTT+4,X'F0'       ZONE IT
         OI    EXTT+1,X'F0'
         MVC   SHLINE,0(R10)      BRING IN DATA SET NAME
         LA    R0,MAPS   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         LR    R1,R10             LOCATION IN PARM REG
         FREEMAIN  R,LV=56,A=(1)   FREE SORT STORE
         AP    LINEKNT,=P'1'
         LA    R9,4(R9)           READY FOR NEXT LINE
         BCT   R5,MAP1
         SPACE 2
*  THROUGH WITH THIS VOLUME, PREPARE TO GO TO NEXT
         SPACE
         LA    R5,F356TBL    LOAD ADDRESS OF TABLE              PES0678
FREE2356 L     R1,8(R5)                ADDR OF 1ST DSCB
         FREEMAIN R,LV=160,A=(1)       FREE IT
         LA    R5,12(R5)               BUMP TO NEXT TBL ENTRY
         CR    R5,R7                   TEST TABLE END
         BL    FREE2356                NOT YET
         B     DISKLOOP           GO LOOK FOR NEXT VOL
MAP1     CP    LINEKNT,=P'57'     CHECK FOR END OF PAGE
         BL    MAP2               GO DO NEXT LINE
         B     MAP3               DO HEADING
         SPACE 2
*        PRINT TERMINATION MESSAGE
         SPACE
ALLDONE  CLOSE (PRINT)
         SR    15,15
GOBCK    EQU   *
         L     R5,SV5
         LR    R2,R13                                           PES0678
         L     R13,SAVEAREA+4                                   PES0678
         FREEMAIN R,LV=WRKLNGTH,A=(R2)                          PES0678
         RETURN (14,12),RC=(15)                                 PES0678
         SPACE 2
PDSERR   MVC   ERRNAME(44),DS1DSNAM
         LA    R0,IOERROR   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVC   EXTOUT(57),=C'0THEREFORE THE NUMBER OF BLOCKS SHOWN WILL*
                NOT BE CORRECT'
         BAL   R14,LINE0OUT
         B     PDSEND                  GO FINISH MAP
ABTOREL  MVC   HOLD(8),2(R1)      MOVE FOR BOUNDRIES
         LH    R2,HOLD            CC
         MH    R2,TRKPRCYL
         AH    R2,HOLD+2          HH
ABTOREL1 LH    R3,HOLD+4          CC
         MH    R3,TRKPRCYL
         AH    R3,HOLD+6          HH
         SLL   R2,16              MOVE TO TOP
         ALR   R2,R3              PUT TOGETHER
         BR    R14                EXIT
ALLSUM   ST    R14,HOLD+8         TAKE CARE OF FETCHING ALLOCATIONS
ALLSUM1  EQU   *
         BAL   R14,ABTOREL
         ST    R2,0(R9)           PUT IN TABLE
         LA    R9,4(R9)           NEXT READY
         BAL   R14,LENGTH         GET LENGTH IN R3
         AR    R11,R3             TOTAL UP ALL LENGTHS FOR DS
         LA    R1,10(R1)          SET FOR NEXT
         BCT   R5,ALLSUM1         LOOP
         L     R14,HOLD+8         RESTORE
         BR    R14                BACK OUT
CALEN    SR    R3,R3              COMPUTE YEARS AND DAYS
         IC    R3,0(R1)           PICK UP YEAR
         CVD   R3,WORK
         UNPK  0(2,R2),WORK+6(2)  YEAR
         OI    1(R2),X'F0'        ZONE
         MVC   WORK(2),1(R1)      FETCH LAST TWO BYTES
         LH    R3,WORK
         CVD   R3,WORK            TO DECIMAL
         UNPK  2(3,R2),WORK+6(2)  DAYS
         OI    4(R2),X'F0'        ZONE
         BR    R14                RETURN
EDIT     CVD   R3,WORK            MAKE IT DECIMAL
         SH    R1,=H'2'   SET-UP CORRECT ADDRESS
         MVC   0(L'PAT,R1),PAT    MOVE PATTERN
         ED    0(L'PAT,R1),WORK+5 PUT IT IN SHAPE
         BR    R14                EXIT
FULLEDIT CVD   R3,WORK            CONVERT TO DECIMAL
         UNPK  ZEXT,WORK+6(2)     EXTENT NUMBER
         ST    R14,HOLD+4         SAVE RETURN ADDRESS
         BAL   R14,LENGTH         DETERMINE LENGTH
         CVD   R3,WORK
         UNPK  ZLNGTH,WORK+5(3)   ENTER TRACK LENGTH OR SIZE
         LH    R3,HOLD            FIRST TRACK
         CVD   R3,WORK
         UNPK  ZFIRST,WORK+5(3)   FIRST TRACK VALUE
         LH    R3,HOLD+2          LAST
         CVD   R3,WORK
         UNPK  ZLAST,WORK+5(3)    ENTER LAST TRACK VALUE
         OI    ZEXT+1,X'F0'       PUT IN PROPER ZONE
         OI    ZLNGTH+4,X'F0'
         OI    ZFIRST+4,X'F0'     ZONE IN ALL
         OI    ZLAST+4,X'F0'
         L     R14,HOLD+4         RESTORE RETURN ADDRESS
         BR    R14
LENGTH   ST    R2,HOLD            SAVE VALUE FOR TEMP
         LH    R3,HOLD+2          BRING IN LAST POSITION
         LA    R3,1(R3)   UPDATE
         SH    R3,HOLD            TAKE OFF START TRACK VALUE
         BR    R14                GO ON BACK
LFTJXT   ST    R14,HOLD           SAVE EXIT
         LA    R1,CALCU+2         TEMP WORK AREA
         BAL   R14,EDIT           EDIT INTO TEMP
LOOPBIT  CLI   0(R1),C' '         FIND FIRST NONSPACE
         BNE   FOUNDX
         LA    R1,1(R1)           CHECK NEXT CHARACTER
         B     LOOPBIT
FOUNDX   MVC   0(5,R2),0(R1)      LEFT JUSTIFY NUMERALS
         L     R14,HOLD           EXIT BACK
         BR    R14
LINE0OUT MVI   SWIT,0             SET SWITCH TO NOT CHECK END OF PAGE
LINE1OUT ST    R14,HOLD+16        STORE RETURN ADDRESS
         LA    R0,EXTOUT   LOAD ADDRESS OF OUTPUT AREA
         BAL   R14,PRINTSUB   & GO TO PRINT A LINE
         MVI   EXTOUT,C' '
         MVC   EXTOUT+1(70),EXTOUT   CLEAR LINE
         TS    SWIT
         BC    8,LINEOUT
         AP    LINEKNT,=P'1'
         CP    LINEKNT,=P'57'
         BL    LINEOUT
         BAL   R14,HEADING        PUT OUT HEADING
         BAL   14,NEWPAGE              PRINT HEAD3 AND HEAD4
LINEOUT  L     R14,HOLD+16   RESTORE
         BR    R14
NOTHER   MVC   WORK(5),0(R4)      LOAD UP EXTENT VALUE
         LH    R3,WORK+2
         MH    R3,TRKPRCYL
         SR    R2,R2
         IC    R2,WORK+4
         AR    R3,R2              FIRST TRACK PLUS CYLINDER
         BZ    ENDDSCB5           DONE IF NOTHING THERE
         AR    R1,R3              ACCUMULATE TOTAL
         LH    R2,WORK
         AR    R3,R2              STOP ADDRESS PLUS ONE
         SLL   R2,16              MOVE TO LEFT
         ALR   R2,R3              ALL TOGETHER
         BCTR  R2,0               LESS ONE
         ST    R2,0(R9)           PUT IT AWAY IN ACCUM
         LA    R9,4(R9)
         LA    R4,5(R4)           GO TO NEXT ONE
         BCT   R5,NOTHER          GO DO FOR NEXT
         BR    R14
PRNTEXTS LA    R9,ACCTABLE        SET UP TABLE OF STORED EXTENTS
         MVC   EXTKNT,=F'0'       SET EXTENT COUNT TO 1
         ST    R14,HOLD+8
         MVC   EXTOUT+11(24),HEAD5  EXT-FIRST----
         BAL   R14,LINE0OUT
         AP    LINEKNT,=P'1'      LINE COUNT UP ONE
PRNTXT1  L     R2,0(R9)           LOAD IN EXTENT SIZE
         LTR   R2,R2              CHEKC FOR END OF LIST
         BZ    JUMPS1             NO MORE LINES OUT
         L     R3,EXTKNT          BRING EXTENT COUNT IN
         LA    R3,1(R3)           BOOST
         ST    R3,EXTKNT          RESTORE
         BAL   R14,STORMAP        STORE EXTENT FOR MAP OUTPUT
         L     R3,EXTKNT          COUNT BACK IN
         BAL   R14,FULLEDIT       CONVERT AND DISPLAY IN EBCDIC
         LA    R9,4(R9)           SET UP TABLE FOR NEXT LINE
         MVC   EXTOUT+12(23),ZEXT   VALUES OF EXT-FIRST--LAST-LENGTH
         BAL   R14,LINE0OUT
         AP    LINEKNT,=P'1'      BOOST LINE COUNT BY ONE
         CP    LINEKNT,=P'57'     PRINT 56 LINES A PAGE
         BL    PRNTXT1            JUMPT TO NEXT LINE
         L     R2,0(R9)           LOAD NEXT POINTER
         LTR   R2,R2              SEE IF NO MORE
         BNE   JUMPS0             IF NO MORE THEN CLEAR TITLE
         MVC   DATANAME,OUTBIN    CLEAR LINE
JUMPS0   BAL   R14,HEADING        JUMP TO NEW PAGE
         BAL   14,NEWPAGE
         B     PRNTXT1
JUMPS1   L     R14,HOLD+8         RESTORE RETURN ADDRESS
         BR    R14
SRCHDSCB LA    R5,F356TBL    BRING IN START OF TABLE            PES0678
         LA    R5,12(R5)                 AFTER F5 DSCB
NEXTETRY CLC   3(5,R5),FIVE   COMPARE CCHHR TO TABLE
         BE    SETITUP            THERE
         LA    R5,12(R5)          READY FOR NEXT ONE
         CR    R5,R7              TOP
         BL    NEXTETRY           CHECK FOR END
         B     IOER2   NOT THERE, SO, ERROR
SETITUP  L     R10,8(R5)          LOAD DSCB ADDRESS
         BR    R14                EXIT
STORMAP  MVC   WORK(44),DATANAME  FETCH NAME
         ST    R2,WORK+44         STORE TRACKS
         STC   R3,WORK+48         STORE EXTENT NUMBER
         GETMAIN   R,LV=56        FETCH STORE FOR EXTENT
         MVC   0(49,R1),WORK      STORE EXTENT TRACKS AND NAME
         LA    R3,SRTBL-4    ADDRESS OF TABLE                   PES0678
         L     R4,SRTKNT          NO. OF ENTRIES
SORTE12  BCT   R4,SORTE11
         ST    R1,4(R3)           PUT ADDRESS AWAY
SORTE14  L     R4,SRTKNT
         LA    R4,1(R4)           BOOST FOR NEXT ENTRY
         ST    R4,SRTKNT
         BR    R14                EXIT
SORTE11  LA    R3,4(R3)           BOOST TO NEXT
         L     R5,0(R3)           POINTER TP SORT MATERIAL
         CL    R2,44(R5)          LOOK AT REL TRACK
         BH    SORTE12            JUMP AROUND IF TOO BIG
SORTE13  ST    R1,0(R3)           STORE ADDRESS IN TABLE
         LR    R1,R5              LAST ADDRESS
         L     R5,4(R3)           NEXT ADDRESS
         LA    R3,4(R3)           BOOST
         BCT   R4,SORTE13         MOVE ALL REST POINTERS UP
         ST    R1,0(R3)           CATCH LAST ONE
         B     SORTE14            GO FINISH
* SUB-ROUTINE FOR CONVERTING CCHH TO TTTT.
CONV     MVC   WORK(4),2(R1)   SHIFT CCHH TO REGISTER BOUNDARY
         LH    R3,WORK   COMPUTE NUMBER OF CYLINDERS
         MH    R3,=H'20'   X TRACKS PER CYLINDER
         AH    R3,WORK+2   & ADD REMAINING TRACKS
         BR    R4   EXIT
* SUB-ROUTINE FOR PRINTING ALL TEXTUAL DATA.
         LA    R0,OUTBIN   LOAD ADDRESS OF OUTPUT AREA
PRINTSUB ST    R14,WORD   SAVE THE RETURN ADDRESS
         LA    R1,PRINT   LOAD THE AREA DCB ADDRESS
         L     R15,48(0,1)   LOAD THE PUT ROUTINE ADDRESS
         BALR  R14,R15   & LINK TO THE PUT ROUTINE
         L     R14,WORD   RESET THE RETURN ADDRESS
         BR    R14   & RETURN TO THE MAIN ROUTINE
PRNTEXIT CLC   62(2,R1),=6X'0'   IS BLKSIZE FILLED IN
         BCR   7,R14   IF YES, RETURN
         MVI   63(R1),133              NO - SET TO 133
         BR    R14
         EJECT                                                  PES0678
         LTORG
         PRINT NOGEN
PRINT    DCB   DSORG=PS,MACRF=PMC,DDNAME=SYSPRINT,BFTEK=S,RECFM=FBA,   *
               LRECL=133,EXLST=PRINTLST
         SPACE
UTILITY  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT1,BFTEK=S,RECFM=F,        1
               SYNAD=PDSERR,                                           *
               BLKSIZE=256,LRECL=256,BUFNO=4,EODAD=PDSEND,EXLST=PDSJFCB
DCBDDNM2 EQU   UTILITY+40         WHERE DDNAME GOES
         SPACE
TEST     DCB   DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=140,BFTEK=S,          1
               EXLST=STRJFCB
TRKCNT   DC    AL1(0)             HALF WORD CHECK FOR NUMBER OF
SVCOUNT  DC    AL1(0)             DSCB'S PER TRACK
LINEKNT  DC    PL2'0'             KEEP TRACK OF LINES PER PAGE
PAGEKNT  DC    PL2'0'
PAT      DC    X'402020202120'    EDITING PATTERN - FOUR COLUMNS
PATTERN  DC    X'40202120'
SWIT     DC    X'FF'
         DS    0D
SAVEF4   DS    CL140              STORE F4 DSCB FOR MORE REFS
SV5      DS    F
SV14     DS    F
SV14HOLD DS    F
UCBPTRAD DS    F
PRINTLST DC    X'85'                   DCB EXIT
         DC    AL3(PRNTEXIT)
EXTKNT   DC    F'0'               SAVE EXTENT COUNT OF F1
TTRVTOC  DC    1F'0'              SAVE TTR0 OF VTOC
HOLD     DS    5F                 SAVE RETURN ADDRESS
SRTKNT   DC    F'1'               ENTRIES IN SORT TABLE
NTRKNT   DC    F'1'               NEXT ENTRY POSITION FOR DSCB F1
TIOT     DS    1F  SAVE TIOT   ADDRESS
TRKPRCYL DS    H
SVUCBADR DS    XL3
         DS    0F
PDSJFCB  DC    X'87'              READ JFCB
         DC    AL3(PDSAREA)
PDSAREA  DS    CL176
JFCBDSNM EQU   PDSAREA
JFCBTSDM EQU   PDSAREA+52                                    PES0282
JFCBCRDT EQU   PDSAREA+80
JFCBNV0L EQU   PDSAREA+117
JFCBV0LS EQU   PDSAREA+118
STRJFCB  DC    X'87'              ONE ENTRY ONLY
         DC    AL3(JFCBAREA)
JFCBAREA DS    CL176
JFCBNVOL EQU   JFCBAREA+117
JFCBVOLS EQU   JFCBAREA+118
LIST     CAMLST    SEEK,ADDRS,SAVESER,WORK
         DS    0D
SEEK     DC    AL3(0)             DUMMY PART
ADDRS    DC    XL5'0'             ADDRESS PART
DEB      DC    4F'0'              FAKE UP A DEB FOR TRACK CONVERSION
         DC    AL1(1)             ONE EXTENT
         DC    AL3(0)
         DC    1F'0'              NO PURGE
         DC    X'0F'              ID
         DC    AL3(0)
         DC    X'04'              EXTENT SCALE
APPEN    DC    AL3(0)   APPENDAGE TABLE ADDRESS
UCBXREF  DC    XL4'C0000000'      UCB ADDRESS - PLACED BY PROGRAM
BIN      EQU   *                       BIN NO. STORED BY PROG
         DC    3AL2(0)            STARTING ADDRESS
         DC    X'FFFFFFFF7FFF'    LAST CCHH NUMBER POSSIBLE
WORK     DS    CL350              WORKING STORAGE FOR OBTAIN
         DS    0F                 ALIGN FOR SPS
MSSAGE   DC    AL2(MSEND-*)
         DC    AL2(0)
         DC    C' SER='
SERMSG   DC    CL6' '
         DC    C' PERMANENT I/O ERROR ON DASD. NO RECOVERY.'
MSEND    DC    CL80' '
         DS    0C
         DC    C'0'               ONE SPACE PLUS LINE
OUTBIN   DC    C' '               OUT PUT BIN - NO SPACE
DATANAME DC    CL44'WHO'          DATASET NAME
         DC    CL3' '             BLANK
CRDATE   DC    CL5' '             CREATED DATE
         DC    CL3' '
PURGDATE DC    CL5' '             PURGE DATE
         DC    CL4' '
TYPESET  DC    CL4' '             TYPE OF DATA SET (NOT,PART,SEQ)
         DC    CL5' '
EXTENTS  DC    CL2' '             NUMBER OF EXTENTS
         DC    CL5' '
SERIALNO DC    CL6' '             SERIAL NUMBER
         DC    CL5' '
SEQNO    DC    CL2' '             SEQUENCE NUMBER
         DC    CL5' '
SECURITY DC    CL3' '             RACF BIT                PES0282
         DC    CL4' '
SPALLOC  DC    CL4'2000'          SPACE ALLOCATED TRACKS TOTAL
         DC    CL4' '
SPUSED   DC    CL4'1000'          SPACE USED - TOTAL TRACKS
         DC    CL4' '
DRBLOCKS DC    CL4' '             BLOCKS IN DIRECTORY
         DC    CL3' '
DRBLUSED DC    CL4' '             NUMBER OF DIRECTORY BLOCKS USED
TYPESORG DC    CL6'DSORG='
DSORG    DC    CL11'     RECFM='
RECFM    DC    CL11'     LRECL='
LRECL    DC    CL5' '
TYPESIZE DC    CL8'BLKSIZE='
BLKSIZE  DC    CL21'      2ND ALLOCATION='
ALL2ND   DC    CL4' '
CALCU    DC    CL10' '
EXTOUT   DC    CL133' '           SPACE FOR OUTPUT LINES
ZEXT     DC    CL2' '             EXTENT NUMBER
         DC    CL2' '
ZFIRST   DC    CL5' '                  FIRST TRACK HERE
         DC    CL2' '
ZLAST    DC    CL5' '                  LAST TRACK NEXT
         DC    CL2' '
ZLNGTH   DC    CL5' '                  LENGTH OF EXTENT
MAPS     DC    CL3' '
STRTT    DC    CL5' '                  START TRACK
         DC    CL9' '
LSTT     DC    CL5' '                  LAST TRACK
         DC    CL9' '
LNGTH    DC    CL5' '                  LENGTH OF EXTENT
         DC    CL7' '
EXTT     DC    CL2' '             EXTENT NUMBER
         DC    CL7' '
SHLINE   DC    CL44' '            DATA SET NAME
         DC    CL37' '            REST ARE BLANK
HEAD1    DC    C'1'   SKIP TO TOP OF PAGE
DAY      DS    CL2   AS OF DAY
         DC    C' '
MONTH    DS    CL3   AS OF MONTH
         DC    C' '
YEAR     DS    CL2   AS OF YEAR
         DC    C' / '
TIME     DS    CL4   AS OF TIME OF DAY
         DC    CL7' '
         DC    CL52'AFDSC/CMI UTILITY - DASD ALLOCATION MAP'
         DC    CL16'UPDATED FEB 82  '
BLANK23  DC    CL23' '
         DC    CL5'PAGE'
PAGEPLC  DC    CL4' '             PAGE COUNT HERE
         DC    CL9' '
HEAD2    DC    CL23'CONTENTS ON VOLUME=SER='
SAVESER  DC    CL6'SYSRES'
         DC    C'   UNIT='
UNIT     DC    CL3' '
SUBCEL   DC    CL2' '
HEAD3    DC    CL49' '                                          PES0678
DA       DC    CL7'DATE'                                        PES0678
         DC    CL9'DATE'
         DC    CL17'FILE'
         DC    CL9'FILE'
         DC    CL15'VOL.'
         DC    CL7'TOTAL'
         DC    CL8'TRACKS'
         DC    CL8'DIREC.'
         DC    CL4'BLKS'
HEAD4    DC    CL16' '
         DC    CL31'DATA SET NAME'
         DC    CL9'CREATED'
         DC    CL9'PURGE'
         DC    CL7'TYPE'
         DC    CL9'EXTENTS'
         DC    CL10'SERIAL'
SEQ      DC    CL5'SEQ.'
         DC    CL10'SECURITY'
         DC    CL8'ALLOC'
         DC    CL7'USED'
         DC    CL8'BLOCKS'
         DC    CL4'USED'
HEAD5    DC    CL24'EXT--FIRST---LAST-LENGTH'
WARNING  DC    CL31'VOLUME NOT MOUNTED OR AVAILABLE'
TEXTT    DC    CL133' FIRST TRACK   LAST TRACK      LENGTH    EXTENT   1
                     DATA SET NAME'
IOERROR  DC    CL133' I/O ERROR ENCOUNTERED IN READING DIRECTORY FOR'
ERRNAME  EQU   IOERROR+48
DCBDDNM  EQU   TEST+40
WORD     DS    F   DATE/TIME WORK AREA
DOUBLE   DS    D   DATE/TIME WORK AREA
EXTS     DS    6H   ISAM EXTENT COMPUTATION AREA
FIVE     DS    CL5    DATE/TIME WORK AREA
NOUTIL   DC    C'-NO SYSUT1 DD, JOB TERMINATED'
MONTHS   DC    P'31',C'JAN',P'28',C'FEB',P'31',C'MAR',P'30',C'APR'
         DC    P'31',C'MAY',P'30',C'JUN',P'31',C'JUL',P'31',C'AUG'
         DC    P'30',C'SEP',P'31',C'OCT',P'30',C'NOV',P'31',C'DEC'
EXTNTBL  DC    H'0'                    TOTAL OF 30 CCHHR ALLOWED
         DC    30X'0000000000'
JOBNAME  DS    F
ACCTABLE DS    200F          SAVE EXTENTS FOR ACCUMULATION      PES0282
         SPACE 3
WORKSCTN DSECT                                                  PES0678
SAVEAREA DS    18F                                              PES0678
DSTBL    DS    756F               TOTAL OF 756 DSCB F1 ALLOWED  PES0678
F356TBL  DS    249F     TOTAL OF 83 DSCB'S F3-F5-F6 ALLOWED     PES0282
SRTBL    DS    1023F             1023 ENTRIES ON ONE DISK       PES0282
         DS    0D
WRKLNGTH EQU   *-WORKSCTN
         SPACE 3                                                PES0678
DSCB4    DSECT
         DC    44X'04'                                          PES0678
         IECSDSL1 (4)                                           PES0678
         ORG   DSCB4                                            PES0678
         IECSDSL1 (1)                                           PES0678
         ORG   DSCB4                                            PES0678
         IECSDSL1 (3)                                           PES0678
         ORG   DSCB4                                            PES0678
         IECSDSL1 (5)                                           PES0678
         SPACE 3
UCB      DSECT
         IEFUCBOB LIST=YES                                      PES0678
         SPACE 3
CVT      DSECT
         CVT LIST=YES                                           PES0678
       END
