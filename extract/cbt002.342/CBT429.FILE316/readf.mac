         TITLE 'ROUTINES TO READ/WRITE FB RECORDS'
*--------------------------------------------------------------------*
*        R   E   A   D   F   (W R I T E F   &   R E S E T F)
*
*        COURTESY:   JIM MARSHALL, CAPT, USAF-RET
*
*        AUTHOR: UNKNOWN  (HAVE CLEANED UP CODE, DOCUMENTED, SCRUBBED,
*                          AND IT RUNS IN ALL FORTRANS; OS/360 FORT-G
*                          THROUGH VS/FORTRAN (FORTRAN77).
*
*        FORTRAN UNFORMATTED I/O REQUIRES THE CODING OF RECFM=VBS FOR
*        ALL I/O (DISCOVER WHAT REAL CPU OVERHEAD IS). THE OBJECTIVE
*        HERE IS TO USE QSAM WITH RECFM=FB AND BLOCK BIG GETTING A
*        QUANTUM PERFORMANCE GAIN !!  ALSO IF YOU "DD DUMMY" THE
*        FILE, THE I/O IS NEVER EVEN ATTEMPTED.
*
*        NOTE: IF YOU NEED TO RUN IT NON-AMODE(31) FORTRANS, THEN
*              YOU CAN REMOVE THE "MODE" MACRO.
*
*
*PURPOSE :
*---------
*        THESE SUBROUTINES WILL READ AND WRITE ARRAYS OF DATA WHERE
*        THE LOGICAL RECORDS ARE OF FIXED LENGTH (AS IS IN DOING
*        UNFORMATTED I/O IN FORTRAN. LENGTH MUST BE GREATER THAN 18
*        BYTES. THIS IS THE RESTRICTION FOR ALL TAPE ANYWAY.
*
*USAGE :
*-------
*    A.  RESETF
*        ------
*        POSITION A DATASET TO READ OR WRITE THE 1ST LOGICAL
*        RECORD; THE FOLLOWING CALLING SEQUEUNCE IS USED:
*
*           CALL RESETF(DSN0)
*
*        WHERE DSN0 IS AN INTEGER CONSTANT OF LENGTH 4 OR AN
*        INTEGER VARIABLE OF LENGTH 4, THAT DENOTES A DATASET
*        ( SEE SECTION ON DD CARDS ).
*
*    B.  WRITEF
*        ------
*        WRITE A LOGICAL RECORD; FOLLOWING CALLING SEQUENCE IS USED:
*
*           CALL WRITEF(DSN0,X)
*
*        DSN0 IS A DATASET NUMBER AND X IS THE NAME OF THE 1ST
*        VARIABLE IN THE LOGICAL RECORD. THE NUMBER OF BYTES TO BE
*        WRITTEN IS DETERMINED BY THE LRECL IN THE DD CARD.
*
*    C.  READF
*        -----
*        READ A LOGICAL RECORD; FOLLOWING CALLING SEQUENCE IS USED:
*
*         CALL READF(DSN0,X,*N,L)
*
*        NOTE: IF "L" IS CODED AND *N (PRE-FORTRAN77 YOU USE &N),
*              THEN A POSTIONAL "," MUST BE CODED.
*
*
*        DSN0 AND X ARE AS PREVIOUSLY DEFINED AND N IS THE FORTRAN
*        STATEMENT NUMBER TO PROCEED TO IF AN END-OF-DATASET
*        CONDITION IS ENCOUNTERED (LIKE EOD ROUTINE CONCEPT). THE
*        NUMBER OF BYTES TO BE READ WILL BE THE SAME AS THE NUMBER
*        WRITTEN BY THE PROGRAM THAT CREATED THE DATASET. YOU MUST
*        HAVE ENOUGH REGION SIZE FOR YOUR PROGRAM FOR THIS NUMBER
*        OF BYTES; EVEN IF YOU IGNORE SOME PORTION OF EACH LOGICAL
*        RECORD. "L" IS OPTIONAL, BUT IF SUPPLIED, IT WILL BE
*        CHECKED AGAINST THE LRECL VALUE TO ENSURE YOU ARE NOT
*        INADVERTENTLY READING A RECORD OF A SIZE OTHER THAN
*        ANTICIPATED. "L" MUST BE AN INTEGER CONSTANT OF LENGTH 4
*        OR AN INTEGER VARIABLE OF LENGTH 4.
*
*
*EXAMPLE:
*-------
*         COMMON/RECORD/X(10),Y(10)
*         CALL RESETF(1)
*           ....
*           ....
*           ....
*         CALL WRITEF(1,X)
*           ....
*           ....
*           ....
*         CALL RESETF(1)
*           ....
*           ....
*     20  CONTINUE
*         CALL READF(1,X,*27,80)
*         GOTO 20
*           ....
*           ....
*     27  CALL RESETF(1)
*         RETURN
*         END
*
*         IN THE ABOVE EXAMPLE, FORTRAN COMMON BLOCK/RECORD/ CONSISTS
*         OF 20 WORDS OR 80 BYTES.  "X" DENOTES THE FIRST VARIABLE
*         (ADDRESS OF THE FIRST BYTE) OF THE COMMON BLOCK.
*
*DD CARDS:
*
*        A MAXIMUM OF 15 DATASETS MAY BE USED. THE DATASETS ARE
*        IDENTIFIED WITH THE DDNAMES OF FORT0000 TO FORT0014
*        INCLUSIVE. IN THE CALLING PROGRAM, THESE DATASETS ARE
*        REFERENCED AS 0,1,2,...13,14 RESPECTIVELY. FOR EACH
*        DATASET REFERENCED IN THE CALLING PROGRAM, A 'DD' CARD
*        SPECIFING THE FOLLOWING DCB PARAMETERS MUST BE SUPPLIED:
*
*        RECFM=FB
*        LRECL= LOGICAL RECORD LENGTH IN BYTES (80 IN EXAMPLE)
*        BLKSIZE= MULTIPLE OF LRECL
*
*        FOLLOWING IS AN EXAMPLE:
*
*
*      //GO.FORT0001 DD UNIT=TAPE,DISP=(NEW,DELETE),
*      //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
*
*ABEND USER COMPLETION CODES:
*
*    3000  -   DD CARD NOT SUPPLIED OR IN ERROR
*    3004  -   DATASET NOT POSITIONED TO THE FIRST RECORD
*    3008  -   'DSN0' NOT IN RANGE OF 0-15
*    3012  -   ATTEMPTED TO READ PAST END OF DATA
*    3016  -   "L" IN READF CALLING SEQUENCE DOES NOT MATCH LRECL
*              IN THE LABEL OR DD CARD, AS APPROPRIATE
*
* CHNGE LOG: 28JUN91 - CODE CONVERTED TO AMODE=31 EXCEPT FOR "GET" &
*            "PUT" IN PREP FOR ESA. PUT IN DSECTS, ETC AS ONE SHOULD.
*            THE FORTRAN LOAD MODULE MUST STILL RUN BELOW THE 16 MEG
*            LINE (BE SURE TO LKED WITH "MODE RMODE(24)"). CHANGES
*            WERE TOO MANY TO MARK.   JIM MARSHALL
*--------------------------------------------------------------------*
         PRINT ON,NOGEN
         SPACE
         MACRO
&NAME    MODE   &AMODE=31
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
.*  SET ADDRESSING MODE.  EITHER 'MODE AMODE=31' OR 'MODE AMODE=24'  *
.*                                                                   *
.* NOTES: EXAMPLE - '    MODE AMODE=31  SET ADDREESSING MODE TO 31   *
.*                  ' -MORE CODE -                                   *
.*                  '    MODE AMODE=24  SET ADDREESSING MODE TO 24   *
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
         SPACE
         LCLC   &I
         GBLA   &B
&I       SETC   '&SYSNDX'
         AIF    (&AMODE EQ 31).MOD31
&NAME    LA     15,RMOD&I
         BSM    0,15
RMOD&I   DS     0H
         AGO    .MEND
.MOD31   ANOP
&NAME    L      15,AMOD&I
         BSM    0,15
AMOD&I   DC     A(CON&I+X'80000000')
CON&I    DS     0H
.MEND    MEND
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                       ADDRESSABILITY TO DCB
R10      EQU   10
R11      EQU   11
R12      EQU   12                      BASE REG
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
*--------------------------------------------------------------------*
*        ROUTINES ALLOW THE READING AND WRITING OF UNFORMATTED DATA  *
*        SETS  OF FIXED LENGTH LOGICAL RECORDS. I.E. QSAM            *
*--------------------------------------------------------------------*
         SPACE
*--------------------------------------------------------------------*
*        READ ROUTINE                                                *
*--------------------------------------------------------------------*
         PRINT ON,NOGEN
         SPACE
READF    AMODE 31
READF    RMODE 24
READF    CSECT
         SAVE  (14,12),,READF_&SYSDATE
         LR    R12,R15
         USING READF,R12                SET UP STANDARD LINKAGE AND
         BAL   R14,GETDCB               GET DCB ADDR IN REG. 9.
         USING IHADCB,R9
         TM    DCBOFLGS,DCBOFTM         Q. IS TRYING TO READ PASSED EOF
         BO    EOFPASS                  A. YES. MUST RESETF FIRST
         TM    DCBOFLGS,DCBOFIOD+DCBOFOPN   TEST FOR DS OPEN PROPERLY
         BO    NORESET
         TM    DCBOFLGS,DCBOFOPN        Q. IS IT ALREADY OPEN
         BO    GET                      A. YES, SO SKIP THE OPEN
         OPEN  ((R9),(INPUT))           OPEN DS FOR INPUT.
         TM    DCBOFLGS,DCBOFOPN        Q. WAS IT SUCCESSUFL
         BZ    DDERROR                  A. IF NOT, HAVE ERROR
GET      EQU   *
         CLI   4(R2),X'80'              Q. IS 3RD & LAST ARGUMENT
         BE    DOWN                    LRECL PARM NOT PASSED
         SR    R8,R8                    CLEAR 8
         L     R7,8(0,R2)               GET ADDR OF 3RD  PARAMETER
         L     R8,0(0,R7)               GET PASSED LRECL LENGTH
         CH    R8,DCBLRECL              Q. SAME AS DCBLRECL LENGTH
         BNE   LRECLERR                 A. NO
DOWN     EQU   *
         L     R2,4(0,R2)               GET ADDR TO MOVE RECORD INTO
         MODE  AMODE=24
         LA    R2,0(R2)                 CLEAR HIGH ORDER BYTE
         GET   (R9),(R2)                MOVE NEXT RECORD TO CALLER.
         MODE  AMODE=31
         SPACE
         B     RETURN                   RETURN TO CALLER
         EJECT
*--------------------------------------------------------------------*
*        WRITE ROUTINE                                               *
*--------------------------------------------------------------------*
         SPACE
         ENTRY WRITEF
WRITEF   SAVE  (14,12),,WRITEF_&SYSDATE
         LR    R12,R15
         USING WRITEF,R12               SET UP STANDARD LINKAGE AND
         BAL   R14,GETDCB               GET DCB ADDR IN REG. 9.
         SPACE
         TM    DCBOFLGS,DCBOFIOD+DCBOFOPN   TEST FOR DS OPEN PROPERLY
         BO    PUT
         TM    DCBOFLGS,DCBOFOPN        Q. IS IT ALREADY OPEN
         BNO   OPEN                     IF NOT OPEN,OPEN IT.
*--------------------------------------------------------------------*
*        NEED TO CHECK IF USER HAS THE FILE WITH "DD DUMMY", IF      *
*        SO TO SAVE TIME, WE WILL JUST CHECK FIRST AND SKIP OUT.     *
*--------------------------------------------------------------------*
         SPACE
         L     R1,CVTPTR                GET ADDR OF CVT
         USING CVTMAP,R1                GET ADDRESSABILITY
         L     R3,CVTTCBP               R3 = ADDR OF DOUBLEWORD
         DROP  R1
         L     R1,4(,R3)                R1 = ADDR OF TCB
         USING TCB,R1
         L     R3,TCBTIO                R3 = ADDR OF TIOT
         DROP  R1
         LH    R4,DCBTIOT               LOAD TIOT OFFSET
         L     R1,16(R4,R3)             LOAD A(UCB)
         LA    R1,0(R1)                 CLEAR HIGH ORDER BYTE
         LTR   R1,R1                    TEST FOR ZERO
         BZ    RETURN                   IF ZERO, RETURN WITHOUT PUT
         B     NORESET                  ELSE, ABEND
         SPACE
OPEN     EQU   *
         OPEN  ((R9),(OUTPUT))          OPEN DS FOR OUTPUT
         TM    DCBOFLGS,DCBOFOPN        Q. WAS IT SUCCESSUFL
         BNO   DDERROR                  A. IF NOT, HAVE ERROR
PUT      EQU   *
         L     R2,4(0,R2)               GET ADDR TO WRITE FROM
         MODE  AMODE=24
         LA    R2,0(R2)
         PUT   (R9),(R2)                WRITE THE RECORD AND RETURN.
         MODE  AMODE=31
         B     RETURN
         EJECT
*--------------------------------------------------------------------*
*        RESET ROUTINE                                               *
*--------------------------------------------------------------------*
         SPACE
         ENTRY RESETF
RESETF   SAVE  (14,12),,RESETF_&SYSDATE
         LR    R12,R15
         USING RESETF,R12               SETUP STANDARD LINKAGE AND
         BAL   R14,GETDCB               GET DCB ADDR IN REG. 9.
         SPACE
         CLOSE ((R9),REREAD)            CLOSE THE DS AND RETURN
         B     RETURN
         SPACE
*--------------------------------------------------------------------*
*        END OF DATA SET ROUTINE                                     *
*--------------------------------------------------------------------*
         SPACE
         PRINT ON,GEN
EODS     BALR  R12,0                    RETURN WITH RC = 4.
         USING *,R12
         L     R13,4(0,R13)
         RETURN (14,12),T,RC=4
         PRINT ON,NOGEN
         SPACE
*--------------------------------------------------------------------*
*        RETURN ROUTINE                                              *
*--------------------------------------------------------------------*
         SPACE
RETURN   BALR  R12,0                    RETURN WITH RC = 0.
         USING *,R12
         L     R13,4(0,R13)
         RETURN (14,12),T,RC=0
         SPACE
*--------------------------------------------------------------------*
*        ESTABLISH STANDARD LINKAGE AND GET DCB ADDR IN R9           *
*--------------------------------------------------------------------*
         SPACE
GETDCB   BALR  R10,0                    TRY IT
         USING *,R10                    TRY IT
         LA    R15,SAVEAREA
         ST    R13,SAVEAREA+4
         ST    R15,8(R13)
         LR    R13,R15
         LR    R2,R1
         L     R9,0(0,R2)               GET VALUE PASSED
         L     R9,0(0,R9)
         C     R9,=F'0'                 Q. DDNAME IN RANGE (0-14)
         BL    RANGERR                  A. NO. OUT OF RANGE
         C     R9,=F'14'                X
         BH    RANGERR                  A. NO. OUT OF RANGE
         SLL   R9,2
         L     R9,DCBADDRS(R9)          GET DCB ADDR.
         BR    R14
         SPACE
SAVEAREA DS    18F
DCBADDRS DC    A(DCB0)
         DC    A(DCB1)
         DC    A(DCB2)
         DC    A(DCB3)
         DC    A(DCB4)
         DC    A(DCB5)
         DC    A(DCB6)
         DC    A(DCB7)
         DC    A(DCB8)
         DC    A(DCB9)
         DC    A(DCB10)
         DC    A(DCB11)
         DC    A(DCB12)
         DC    A(DCB13)
         DC    A(DCB14)
         SPACE
DDERROR  ABEND 3000,DUMP
NORESET  ABEND 3004,DUMP
RANGERR  ABEND 3008,DUMP                DDNAME NOT WITHIN SET0000(0-14)
EOFPASS  ABEND 3012,DUMP                ATTEMPTED TO READ PASSED EOF
*                                       WITHOUT A RESET(DCB)
LRECLERR ABEND 3016,DUMP                RECORD LENGTH WRONG
ERRARGS  ABEND 3020,DUMP
         SPACE
         LTORG
         DS    0F
DCB0     DCB   DDNAME=FORT0000,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB1     DCB   DDNAME=FORT0001,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB2     DCB   DDNAME=FORT0002,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB3     DCB   DDNAME=FORT0003,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB4     DCB   DDNAME=FORT0004,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB5     DCB   DDNAME=FORT0005,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB6     DCB   DDNAME=FORT0006,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB7     DCB   DDNAME=FORT0007,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB8     DCB   DDNAME=FORT0008,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB9     DCB   DDNAME=FORT0009,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB10    DCB   DDNAME=FORT0010,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB11    DCB   DDNAME=FORT0011,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB12    DCB   DDNAME=FORT0012,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB13    DCB   DDNAME=FORT0013,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
DCB14    DCB   DDNAME=FORT0014,DSORG=PS,MACRF=(GM,PM),EODAD=EODS
         EJECT
         PRINT ON,NOGEN
         DCBD  DSORG=(QS)
         EJECT
         CVT   DSECT=YES,LIST=NO
         EJECT
         IEFTIOT1
         EJECT
         IKJTCB DSECT=YES,LIST=NO
         END
