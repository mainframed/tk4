/*JOBPARM LINES=9999
//*******************************************************************
//*                                                                 *
//*  SP.MODS(VSAMVER4)                                              *
//*                                                                 *
//*******************************************************************
//PELIST   EXEC SASTEST,REGION.SAS=4096K
//WORK      DD UNIT=WORKS,SPACE=(CYL,(50,20))
//GLOBAL    DD DSN=SMPE87D.GLOBAL.CSI,DISP=SHR
//TARGET    DD DSN=S87DTZN.CSI,DISP=SHR
//SYSIN     DD    *
OPTIONS GEN=0 SOURCE NOSOURCE2 NOMACROGEN DQUOTE VSAMREAD;
*********************************************************************;
*                                                                   *;
* SMP/E VERSION 4 - EXCEPTION SYSMOD REPORTING PROGRAM              *;
*                                                                   *;
* CAPTAIN PAUL J. WALDOWSKI, UNITED STATES AIR FORCE                *;
*                                                                   *;
*********************************************************************;

*********************************************************************;
*                                                                   *;
* SEARCH VERSION 4 SMP/E GLOBAL ZONE RECORDS FOR HOLD TYPE SYSMODS  *;
*                                                                   *;
*********************************************************************;

DATA HOLDTYPE (KEEP=RECORD);
  INFILE GLOBAL VSAM END=EOF LENGTH=LONG;
  IF EOF THEN STOP;
  /* READ THE ENTIRE RECORD INTO THE INPUT BUFFER. */
  INPUT RECORD $VARYING142. LONG;
  GLOBALF  = SUBSTR(RECORD,13,1);
  IF GLOBALF = '4' THEN LIST;
                   ELSE DELETE;

*********************************************************************;
*                                                                   *;
* SEARCH VERSION 4 SMP/E TARGET ZONE RECORDS SEQUENTIALLY FOR       *;
* RECORDS BEGINNING WITH THE HEX DIGITS 000002.  THIS IS DONE       *;
* PRIMARILY BECAUSE THESE RECORDS ARE IN THE BEGINNING OF THE       *;
* TARGET CSI AND CREATING A GENERIC KEY FOR DIRECT PROCESSING INTO  *;
* THE TARGET CSI IS NOT THE BEST METHOD.  THE PROGRAM ASSUMES THAT  *;
* THE TARGET CSI HAS ONLY ONE TARGET ZONE NAME.  FOR A TARGET CSI   *;
* WITH MORE THAN ONE TARGET ZONE NAME, SIMPLY SUPPLY THE TARGET     *;
* NAME TO THE GLOBAL VARIABLE CALLED TGTNAME.  IF THIS DATA STEP    *;
* FAILS TO FIND THE TARGET ZONE SUPPLIED, IT WILL LIST AVAILABLE    *;
* TARGET ZONE NAME RECORDS AND HALT PROCESSING!  OTHERWISE, THE     *;
* PROGRAM OBTAINS THE PROGRAM BYTE USED AS PART OF THE KEY TO THIS  *;
* TARGET ZONE AND THE NAME OF THE TARGET ZONE.  THE TARGET ZONE     *;
* NAME IS KEPT IN THE GLOBAL VARIABLE TGTZONE.                      *;
*                                                                   *;
*********************************************************************;

%GLOBAL TGTZONE;
%GLOBAL TGTNAME;
* THE DEFAULT FOR GLOBAL VARIABLE TGTNAME IS 'ONLYONE'              *;
%LET TGTNAME = 'ONLYONE';
DATA ZONEDATA (KEEP=TGT_RECD);
  INFILE TARGET VSAM END=EOF LENGTH=LONG;
  IF EOF THEN STOP;
  /* READ THE ENTIRE RECORD INTO THE VARIABLE RECORD. */
  INPUT TGT_RECD $VARYING142. LONG;
  /* OBTAIN TARGET ZONE RECORD WHICH CONTAINS THE ONE BYTE   */
  /* USED AS PART OF THE KEY FOR THIS TARGET ZONE, THE NAME  */
  /* OF THIS TARGET ZONE, AND HALT PROCESSING                */
  IF &TGTNAME = 'ONLYONE'
     THEN DO;
        IF SUBSTR(TGT_RECD,1,3) = '000002'X
           THEN DO;
              OUTPUT;
              LIST;
              CALL SYMPUT('TGTZONE',SUBSTR(TGT_RECD,16,7));
              STOP;
           END;
           ELSE DELETE;
     END;
  /* TARGET ZONE NAME SUPPLIED                               */
     ELSE DO;
        IF SUBSTR(TGT_RECD,1,3) = '000002'X AND
           &TGTNAME = SUBSTR(TGT_RECD,16,7)
           THEN DO;
              OUTPUT;
              LIST;
              CALL SYMPUT('TGTZONE',SUBSTR(TGT_RECD,16,7));
              STOP;
           END;
           ELSE DO;
              IF SUBSTR(TGT_RECD,1,3) > '000002'X
                 THEN STOP;  /* INVALID TARGET ZONE NAME         */
              LIST;          /* LIST AVAILABLE TARGET ZONE NAMES */
           END;
     END;

*********************************************************************;
*                                                                   *;
* SEARCH VERSION 4 SMP/E TARGET ZONE RECORDS FOR APPLIED HOLD TYPE  *;
* SYSMODS USING A GENERIC KEY BUILT WITH INFORMATION FROM THE DATA  *;
* STEPS HOLDTYPE AND ZONEDATA.                                      *;
*                                                                   *;
*********************************************************************;

DATA TARGET (KEEP=RECORD);
  IF _N_ = 1 THEN SET ZONEDATA;
  SET HOLDTYPE;
  KEYVAR = SUBSTR(RECORD,1,1) ×× SUBSTR(TGT_RECD,5,1) ××
           SUBSTR(RECORD,3,8);
  KEYLNGTH = 10;
  INFILE TARGET VSAM KEY=KEYVAR GENKEY FEEDBACK=FDBK KEYLEN=KEYLNGTH;
  /* READ THE ENTIRE RECORD INTO THE INPUT BUFFER. */
  INPUT @;
  /* DUMP APPLIED PTFS */
  IF FDBK=0 THEN LIST;

  /* STOP IF END-OF-FILE */
  IF FDBK=4 OR FDBK=16 THEN DO;
     _ERROR_=0;
     IF FDBK=4 THEN STOP;
  /* IF THERE IS NO RECORD WITH THIS GENERIC KEY, DELETE THE     */
  /* OBSERVATION AND GO ON TO THE NEXT OBSERVATION.              */
  ELSE DO;
     FDBK=0;
     DELETE;
     RETURN;
     END; /* ELSE: FDBK=16 */
  END; /* IF FDBK=4 OR FDBK=16 */

*********************************************************************;
*                                                                   *;
* SEARCH VERSION 4 SMP/E TARGET ZONE RECORDS FOR APPLIED HOLD TYPE  *;
* APARS USING A GENERIC KEY BUILT WITH INFORMATION FROM THE DATA    *;
* STEPS TARGET AND ZONEDATA.                                        *;
*                                                                   *;
*********************************************************************;

DATA APARS (KEEP=RECORD);
  IF _N_ = 1 THEN SET ZONEDATA;
  SET TARGET;
  KEYVAR = SUBSTR(RECORD,1,1) ×× SUBSTR(TGT_RECD,5,1) ××
           SUBSTR(RECORD,3,1) ×× SUBSTR(RECORD,16,7);
  KEYLNGTH = 10;
  INFILE TARGET VSAM KEY=KEYVAR GENKEY FEEDBACK=FDBK KEYLEN=KEYLNGTH;
  /* READ THE ENTIRE RECORD INTO THE INPUT BUFFER. */
  INPUT @;
  /* DELETE SUPERCEDED APPLIED APARS */
  IF FDBK=0 THEN DELETE;

  /* STOP IF END-OF-FILE */
  IF FDBK=4 OR FDBK=16 THEN DO;
     _ERROR_=0;
     IF FDBK=4 THEN STOP;
  /* IF THERE IS NO RECORD WITH THIS GENERIC KEY, KEEP THE       */
  /* OBSERVATION AND GO ON TO THE NEXT OBSERVATION.              */
  ELSE DO;
     FDBK=0;
     RETURN;
     END; /* ELSE: FDBK=16 */
  END; /* IF FDBK=4 OR FDBK=16 */

*********************************************************************;
*                                                                   *;
* SEARCH VERSION 4 SMP/E TARGET ZONE RECORDS                        *;
* FOR SUPERCEDED HOLD TYPE PTFS                                     *;
*                                                                   *;
*********************************************************************;

DATA SUPERPTF (KEEP=RECORD);
  IF _N_ = 1 THEN SET ZONEDATA;
  SET APARS;
  KEYVAR = SUBSTR(RECORD,1,1) ×× SUBSTR(TGT_RECD,5,1) ××
           SUBSTR(RECORD,3,10) ×× '12'X;
  KEYLNGTH = 13;
  INFILE TARGET VSAM KEY=KEYVAR GENKEY FEEDBACK=FDBK KEYLEN=KEYLNGTH;
  /* READ THE ENTIRE RECORD INTO THE INPUT BUFFER. */
  INPUT @;
  /* DELETE SUPERCEDED APPLIED PTFS */
  IF FDBK=0 THEN DELETE;

  /* STOP IF END-OF-FILE */
  IF FDBK=4 OR FDBK=16 THEN DO;
     _ERROR_=0;
     IF FDBK=4 THEN STOP;
  /* IF THERE IS NO RECORD WITH THIS GENERIC KEY, KEEP THE       */
  /* OBSERVATION AND GO ON TO THE NEXT OBSERVATION.              */
  ELSE DO;
     FDBK=0;
     RETURN;
     END; /* ELSE: FDBK=16 */
  END; /* IF FDBK=4 OR FDBK=16 */

*********************************************************************;
*                                                                   *;
* SEARCH VERSION 4 SMP/E GLOBAL ZONE RECORDS FOR ++HOLD ERROR DATA  *;
*                                                                   *;
*********************************************************************;

DATA HOLDDATA (KEEP=HOLDDATA);
  SET SUPERPTF;
  KEYVAR = '000032'X ×× SUBSTR(RECORD,4,7) ××
           '4032100001'X ×× SUBSTR(RECORD,16,7);
  KEYLNGTH = 22;
  INFILE GLOBAL VSAM KEY=KEYVAR GENKEY FEEDBACK=FDBK KEYLEN=KEYLNGTH
  LENGTH=LONG;
  /* READ THE ENTIRE RECORD INTO THE VARIABLE HOLDDATA. */
  INPUT HOLDDATA $VARYING142. LONG;
  /* DUMP ++HOLD ERROR DATA */
  IF FDBK=0 THEN LIST;

  /* STOP IF END-OF-FILE */
  IF FDBK=4 OR FDBK=16 THEN DO;
     _ERROR_=0;
     IF FDBK=4 THEN STOP;
  /* IF THERE IS NO RECORD WITH THIS GENERIC KEY, KEEP THE       */
  /* OBSERVATION AND GO ON TO THE NEXT OBSERVATION.              */
  ELSE DO;
     FDBK=0;
     RETURN;
     END; /* ELSE: FDBK=16 */
  END; /* IF FDBK=4 OR FDBK=16 */

*********************************************************************;
*                                                                   *;
* PRINT EXCEPTION SYSMOD REPORT                                     *;
*                                                                   *;
*********************************************************************;

 DATA _NULL_;
 SET HOLDDATA;
 FILE PRINT HEADER=H NOTITLES;
 SYSMOD   = SUBSTR(HOLDDATA,4,7);  /* EXCEPTION SYSMOD NAME */
 APAR     = SUBSTR(HOLDDATA,16,7); /* REASON ID NAME        */
 ERRORDTA = SUBSTR(HOLDDATA,24,(LENGTH(HOLDDATA)-23));
                                   /* ++HOLD ERROR DATA     */
 PUT @4 SYSMOD @16 APAR @28 ERRORDTA;
 RETURN;

 H: PUT / @4 'EXCEPTION SYSMOD REPORT FOR ZONE ' "&TGTZONE"//;
    PUT / @4 'P E' @16 'A P A R' @28 '++HOLD ERROR DATA'/;
 RETURN;
//
