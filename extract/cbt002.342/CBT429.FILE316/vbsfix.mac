         TITLE 'FIX VBS TYPE RECORDS'
*---------------------------------------------------------------------*
*                                                                     *
*                V B S F I X                                          *
*                                                                     *
*        FIX VBS TYPE FILES BY DOING A VALIDATION ON THE RECORD       *
*        TO SEE IF ALL THE PARTS ARE THERE. IF SO YOU WILL WRITE      *
*        THE RECORD TO AN OUTPUT FILE. IF NOT THEN WRITE THE BAD      *
*        TO AN ERROR FILE (SAVE IT IF YOU WANT). THIS PGM COMES IN    *
*        HANDY TO CLEANSE SMF DATA WHEN A SEGMENT IS LOST IN THE      *
*        SMF BUFFER AT CRASH TIME.                                    *
*                                                                     *
* COURTESY -   JIM MARSHALL, CAPT, USAFR-RET                          *
*                                                                     *
* AUTHOR   -   UNKNOWN                                                *
*                                                                     *
* JCL REQUIRED -    //FIX    EXEC PGM=VBSFIX,REGION=800K              *
*                   //STEPLIB DD -IF APPROPRIATE-                     *
*                   //SYSPRINT DD SYSOUT=A                            *
*                   //VBSIN    DD -INPUT FILE-                        *
*                   //VBSOUT   DD -OUTPUT FILE-                       *
*                   //VBSERR   DD -ERR FILE (I DUMMY)-                *
*                                                                     *
*                                                                     *
* CHNGE LOG: - ADDED DOCUMENTATION, CLEANED UP THE CODE, REPACKAGED,  *
*              SHAMPOO'D, ETC.       JIM MARSHALL                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
VBSFIX   CSECT
         SAVE  (14,12),,VBSFIX_&SYSDATE_&SYSTIME
         LR    10,15
         USING VBSFIX,R10
         LA    R1,SAVE
         ST    13,4(R1)
         ST    R1,8(13)
         LR    13,R1
         SPACE
         GETMAIN R,LV=32768               - GET CORE FOR INPUT
         LR    R9,R1                      - AND GET SOME
         USING A1,R9                      - ADDRESSABILITY
         SPACE
         GETMAIN R,LV=32768               - GET CORE FOR INPUT
         LR    R8,R1                      - AND GET SOME
         USING B1,R8                      - ADDRESSABILITY
         SPACE
         OPEN  (ADCB,,DDCB,OUTPUT)
L        EQU   *
         BAL   R6,GETREC
         B     EOF
S        EQU   *
         BC    0,S2
         OPEN  (BDCB,OUTPUT,CDCB,OUTPUT)
         OI    S+1,X'F0'
S2       EQU   *
         PUT   BDCB,B1
         PUT   CDCB,B1
         SR    R15,15
         IC    R15,B1+5
         AR    R15,R15
         LH    1,COUNTS(R15)
         LA    R1,1(,R1)
         STH   1,COUNTS(R15)
         B     L
EOF      EQU   *
         TM    S+1,X'F0'
         BZ    ERROR
         CLOSE (BDCB,,CDCB)
DONE     EQU   *
         CLOSE (ADCB)
         MVC   ELNOTE+13(L'BLANKS),BLANKS
         SR    R12,R12
REPON    EQU   *
         LH    R0,COUNTS(R12)
         LTR   R0,R0
         BZ    REPXT
         CVD   0,DWORD
         UNPK  ELNOTE,DWORD+5(3)
         OI    ELNOTE+4,C'0'
         LR    R0,R12
         SRL   R0,1
         CVD   R0,DWORD
         UNPK  ELNOTE+8(3),DWORD+6(2)
         OI    ELNOTE+10,C'0'
         PUT   DDCB,ELINE
REPXT    EQU   *
         LA    R12,2(,R12)
         C     R12,=F'512'
         BL    REPON
         CLOSE (DDCB)
         L     R13,4(R13)
         TM    S+1,X'F0'
         BZ    ERC
         RETURN (14,12),RC=0
ERC      EQU   *
         RETURN (14,12),RC=16
         SPACE
E        UNPK  ELNOTE,EBLOCK
         OI    ELNOTE+4,C'0'
         PUT   DDCB,ELINE
         BR    5
         SPACE
ERROR    EQU   *
         WTO   'VBSFIX  * INPUT OR OUTPUT FILE MAY BE EMPTY??',        X
               ROUTCDE=(11)
         B     DONE
         SPACE
COUNTS   DC    256H'0'
DWORD    DC    D'0'
FULL     DC    F'0'
SAVE     DC    18F'0'
         SPACE
         PRINT NOGEN
*--------------------------------------------------------------------*
*        READ THE INPUT FILE WITH RECFM=U, THUS IF WE HAVE AN REC    *
*        MESSED UP WE WILL NOT ABEND GETTING IT.                     *
*--------------------------------------------------------------------*
         SPACE
ADCB     DCB   DSORG=PS,RECFM=U,BLKSIZE=32760,MACRF=GM,                X
               DDNAME=VBSIN,EODAD=EA
BDCB     DCB   DSORG=PS,MACRF=PM,DDNAME=VBSOUT
CDCB     DCB   DSORG=PS,LRECL=6412,BLKSIZE=1200,MACRF=PM,RECFM=VBS,    X
               DDNAME=VBSERR
DDCB     DCB   DSORG=PS,LRECL=121,BLKSIZE=121,RECFM=FA,                X
               DDNAME=SYSPRINT,MACRF=PM
EBLOCK   DC    PL3'0'
ELINE    DS    0CL121
         DC    C'-******  '
ELNOTE   DC    CL5'00000'
         DC    C'  ****** INPUT BLOCK DROPPED *** BAD RECORD ***'
BLANKS   DC    CL60' '
ANYIN    DC    X'00'
ANYOUT   DC    X'00'
         SPACE
GETREC   CLI   ANYIN,X'00'
         BNE   YESIN
         GET   ADCB,A1
         AP    EBLOCK,=P'1'
         MVI   ANYIN,X'10'
         LA    R4,A1
         LH    R3,A1
         AR    R3,R4
         LA    R4,4(,R4)
YESIN    CLI   ANYOUT,X'00'
         BNE   YESOUT
         MVI   ANYOUT,X'10'
         LA    R2,4
         STH   R2,B1
         LA    R2,B1+4
         XC    B1+2(2),B1+2
YESOUT   CLI   2(4),X'00'
         BE    ANYLEFT0
         CLI   2(4),X'01'
         BE    ANYLEFT1
         CLI   ANYOUT,X'11'
         BNE   DROPIT
         CLI   2(4),X'03'
         BH    SPANERR
YESMOVE  MVC   FULL+2(2),0(4)
         L     1,FULL
         S     1,=F'5'
         BM    SPANERR
         LA    0,1
         AH    0,B1
         AR    0,1
         STH   0,B1
         CLI   2(4),X'02'
         BNE   CFOR255
         MVI   ANYOUT,X'12'
CFOR255  C     1,=F'255'
         BH    MOVE256
         STC   1,*+5
         MVC   0(*-*,2),4(4)
         LA    2,1(1,2)
         LA    4,5(1,4)
TRY4MORE CR    4,3
         BL    *+8
         MVI   ANYIN,X'00'
         CLI   ANYOUT,X'12'
         BE    GIVEBAC
         B     GETREC
MOVE256  MVC   0(256,2),4(4)
         LA    2,256(,2)
         LA    4,256(,4)
         S     1,=F'256'
         B     CFOR255
GIVEBAC  MVI   ANYOUT,X'00'
         B     4(,6)
DROPIT   BAL   5,E
         MVC   FULL+2(2),0(4)
         A     4,FULL
         B     TRY4MORE
SPANERR  BAL   5,E
         MVI   ANYIN,X'00'
         MVI   ANYOUT,X'00'
         B     GETREC
ANYLEFT0 CLI   ANYOUT,X'11'
         BE    SPANINC
         MVI   ANYOUT,X'12'
         B     YESMOVE
ANYLEFT1 CLI   ANYOUT,X'11'
         BE    SPANINC
         MVI   ANYOUT,X'11'
         B     YESMOVE
SPANINC  BAL   5,E
         MVI   ANYOUT,X'00'
         B     YESIN
EA       CLI   ANYOUT,X'00'
         BE    0(,6)
         BAL   5,E
         B     0(,6)
         LTORG
         DS    0D
A1       DSECT
         DS    4096D
B1       DSECT
         DS    4096D
         END
