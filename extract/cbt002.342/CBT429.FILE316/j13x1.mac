         TITLE 'JES2/SP1.3 USER EXIT #1'
*---------------------------------------------------------------------*
*            JES2/SP1.3  USER EXIT #1
*
*  COURTESY:  JIM MARSHALL, CAPT, USAF (RET)
*
*     A. THIS IS THE 2ISG  USER EXIT #1. IT IS USED TO PRINT A
*        SEPARATOR PAGE ON THE BEGINNING AND END OF A LISTING. IT IS
*        ALSO USED FOR PUNCH. THIS IS BASED ON THE USER EXIT 1
*        CONTAINED IN THIS FILE FROM THE 1ST ISG (WHERE I CAME FROM).
*        EXCEPT THIS ONE IS RE-ENTRANT AND 1ISG'S WAS NOT.
*
*     B. JES2PARMS FOR THIS EXIT ARE AS FOLLOWS:
*        . . .
*        >LOAD J13X1
*        >EXIT001  (J13X1BAN,J13X1PUN),ENABLE,TRACE=YES
*        . . .
*        'J13X1' IS THE LOAD MODULE NAME,  'J13X1BAN' & 'J13X1PUN'
*        ARE USER CSECTS GENERATED IN THIS CODE. THE ENTRY POINT TO
*        THE LOAD MODULE HAS AN ADDITIONAL CSECT BUILT BY THE
*        $MODULE MACRO CALLED THE 'MODULE INTERFACE TABLE.
*
*        FOR THE USERS WHO ARE USING THE IDEA OF THE RECEIPT PRTER
*        ON AN MCS CONSOLE SHOULD ALSO ADD:
*        . . .
*        >LOAD J13X255
*        >EXIT255  (J13X255),ENABLE,TRACE=YES
*        . . .
*
*     C. THE 'LTORG' STATEMENT MUST APPEAR IN EACH SECTION OF CODE
*        AND THE $MODEND MACRO MUST APPEAR AFTER THE LAST USER
*        ROUTINE BEFORE THE ASSEMBLER 'END' STATEMENT.
*
*     D. THE ORDER OF DSECTS IN THE PREAMBLE ASSEMBLY CAN BE
*        SIGNIFICANT (UNDERSTATEMENT). ALSO THE REGISTER CONTENTS
*        ARE AS FOLLOWS UPON ENTRY TO THIS EXIT:
*
*        R0    - CODE INDICATING WHETHER YOU ARE CREATING:
*                0 - START-OF-JOB SEPARATOR.
*                4 - CONTINUATION SEPARATOR.
*                8 - END-OF-JOB SEPARATOR.
*        R1    - ADDR OF THE PRT OR PUN DCT.
*        R2    - N/A
*        R3    - ADDR OF FIXED BUFFER WE GET.
*        R4    - SAVED R1, ADDRESSABILITY TO DCT.                JDM2
*        R5    - 2ISG  USES AS 'BAL' REGISTER.
*        R6    - 2ISG  USES AS WORK REGISTER.
*        R7    - 2ISG  USES AS ADDRESSABILITY TO JOE.
*        R8    - 2ISG  USES AS WORK REGISTER.
*        R9    - 2ISG  USES TO SAVE CONTENTS OF R0.
*        R10   - ADDR OF THE JOB'S JCT
*        R11   - ADDR OF THE JES2 HCT
*        R12   - BASE REGISTER.
*        R13   - ADDR OF THE PRT OR PUN PCE
*        R14   - RETURN ADDR
*        R15   - ENTRY ADDR
*
*     E. REGISTERS UPON RETURN TO WHENCE YOU CAME:
*
*        R0-14 - RESTORED TO THE SAME UPON ENTRY.
*        R15   - CONTAINS A RETURN CODE AS FOLLOWS:
*
*                0  - JES2 WILL PRODUCE A STANDARD SEPARATOR.
*                4  - JES2 WILL PRODUCE A STANDARD SEPARATOR,
*                     BUT WILL CALL NO OTHER EXIT ROUTINES.
*                8  - JES2 WILL UNCONDITIONALLY NOT PRINT A
*                     SEPARATOR (USED NATURALLY WHEN WE PRINT
*                     OUR OWN).
*               12  - JES2 WILL UNCONDITIONALLY PRINT A SEPARATOR
*                     (SEEMS DUMB ESPICALLY IF YOU PRINT YOUR OWN
*                     BUT IBM GIVES YOU FLEXIBILITY).
*
* INSTALLED: 26 AUG 84
* CHANGE LOG:
*   18SEP84 CHANGE USERS OF JCTUSER FIELDS TO USING PCEUSER FIELDS.
*           SHARE 63 TAUGHT ME THAT JCTUSER COULD BE UPDATED AT THE
*           AT THE SAME TIME IF ON 2 PRTS ON THE SAME TIME (UNLIKELY
*           BUT POSSIBLE). BUT PCEUSER0 IS NOT ON A DBLEWORD BOUNDARY,
*           SO WE MUST USE OUR BUFFER FOR A WORK AREA AT TIMES. JDM1
*   18FEB85 PLACED FORM NAME ON THE SEPARATOR. IT WILL BE BENEFICALTO
*           SEE IT. ALSO CLEANED UP SOME OF THE SCR REG USAGE.  JDM2
*   12MAY85-ADDED THE RECEIPT PRTER CODE FOR EXIT 255.          JDM3
*   15JUN85-ADDED IBM 3525 CODE TO ENSURE THAT NO MATTER WHAT
*           A USER CODES, THE PUNCHED DECK WILL ALWAYS BE
*           INTERPRETED (I.E.  SYSOUT=B,DCB=FUNC=I). ALSO THE
*           HEADER AND TRAILER CARD WILL BE PRINTED BUT NOT
*           PUNCHED.                                            JDM4
*   16JUN85-ADDED SOME CODE TO COMPENSATE FOR NJE PRINT. OURS
*           WILL BE COMING IN FROM VM/RSCS.                     JDM5
*   26JUN85-ADDED X8700 SUPPORT TO PROPERLY SETUP THE PRINTER
*           IF IT GOES TO 'PRINTER3' (X8700). SEE COMMENTS IN
*           CODE FOR EXPLANATION.                               JDM6
*    5NOV85-FIX X8700 BUG IN SEPARATOR PAGE CAUSING IMPROPER
*           SPACING ON AN OCR FORM.                             JDM7
*    5NOV85-REQUIRED TO CONVERT THE CODE FOR JES2 SP1.3.4 . SO
*           I WILL CODE A MECHANISM FOR EASIER MAINTENACE OF
*           THE CODE (THE OLE CONDITIONAL ASSEMBLY).            JDM8
*   15APR86-CHANGED FORMAT OF X8700 TABLE TO INCLUDE COSTING
*           INFO FOR PAPER. THIS IS REALLY NOT USED IN THIS CODE
*           BUT BY AN EXTERNAL PGM. WE ASSIGN AN ALIAS OF J13X1XF
*           TO THIS LOAD MODULE TO ALLOW AN APPLICATIONS PGM OF
*           MINE TO ACCESS THE TABLE. NO SENSE IN HAVING TWO
*           COPIES OF TABLE AROUND.                             JDM9
*
*   15OCT86-XEROX 8700 HAS THE CAPABILITY OF PUTTING 2 OR 4 PAGES OF
*           PRINT ONTO 1 PHYSCIAL PAGE. WHEN YOU REQUEST MULTIPLE
*           COPIES, YOU CAN GET THE INFO ONTO WRONG PAGES, SINCE THE
*           XEROX IS DEFINED AS IBM 3211 (THUS SAY YOU HAD 3 PAGES
*           PRINTED FRONT AND BACK - COPY 2 WOULD START ON A BACK
*           PAGE). MY SOLUTION FOR A LONG TIME WAS TO TELL USERS TO
*           ONLY USE /*JOBPARM COPIES. RON DIETES OF H.E.B OF SAN
*           ANTONIO, TX (512-270-8432) SUGGESTED THAT YOU WRITE
*           A JES2 EXIT015 THAT GIVES YOU THE CHANCE TO WRITE A
*           DATASET HEADER AND SIMPLY IN THE EXIT SEND THE X8700
*           COMMAND TO FORCE A NEW PAGE AND THEN TELL JES2 TO
*           SUPPRESS THE IBM SUPPLIED HEADER. TRY IT AND SEE IF IT
*           SOLVES THE PROBLEMS OR CALL DAVE AND SEE IF IT HELPED
*           HIM.
*---------------------------------------------------------------------*
         SPACE
         GBLB  &SP134              1-SP1.3.4 / 0 - SP1.3.2       JDM8
&SP134   SETB  1                                                 JDM8
         AIF   (NOT &SP134).SKIP10                               JDM8
         COPY  $HASPGBL                                          JDM8
USREXIT $MODULE $BUFFER,                                         JDM8  X
               $JCT,                                             JDM8  X
               $JQE,                                             JDM8  X
               $HASPEQU,                                         JDM8  X
               $PCE,                                             JDM8  X
               $CAT,                                             JDM8  X
               $DCT,                                             JDM8  X
               $HCT,                                             JDM8  X
               $PDDB,                                            JDM8  X
               $MIT,                                             JDM8  X
               $JOE,                                             JDM8  X
               $XIT,                                             JDM8  X
               $EXITPL,                                          JDM8  X
               $PPPWORK,                                         JDM8  X
               $CMB                                              JDM8
.SKIP10  ANOP                                                    JDM8
         AIF   (&SP134).SKIP16                                   JDM8
         PRINT ON,NOGEN
        $SYSPARM (ON,GEN,DATA,NO,NO)  DOC OPTIONS
         COPY  $HASPGEN
         PRINT ON,NOGEN
USREXIT $MODULE                       CREATE THE MIT
        $SYSPARM (ON,GEN,DATA,YES,YES)  DOC OPTIONS
        $BUFFER  DOC=YES              REQUIRE BY $GETBUF, $FREEBUF
*                                          MUST PRECEDE  $JCT
        $JCT     DOC=YES              MUST PRECEDE $CAT
        $JQE     DOC=YES              MUST PRECEDE $HCT
        $PCE     DOC=YES              MUST PRECEDE $HCT
        $CAT     DOC=YES              MUST PRECEDE $HCT
        $DCT     DOC=YES              WE NEED IN EXIT1
        $HCT     DOC=YES              REQ'D BY $SAVE, $RETURN
        $PDDB    DOC=YES              MUST PRECEDE $IOT
        $TAB     DOC=YES              MUST PRECEDE $IOT
        $IOT     DOC=YES
        $JOE     DOC=YES              NEED TO GET SYSOUT CLASS
        $XIT     DOC=YES              REQ'D TO GET EXIT
        $EXITPL  DOC=YES              REQ'D TO GET EXIT
        $MIT     DOC=YES              REQ'D BY $MODEND
         PRINT ON,NOGEN
        $PPPWORK DOC=YES              REQ'D TO FIND JOE
         PRINT ON,GEN
.SKIP16  ANOP                                                    JDM8
         AIF   (NOT &SP134).SKIP20                               JDM8
J13X1BAN $ENTRY BASE=R12                                         JDM8
.SKIP20  ANOP                                                    JDM8
         AIF   (&SP134).SKIP25                                   JDM8
J13X1BAN $ENTRY BASE=R12,CSECT=YES
.SKIP25  ANOP                                                    JDM8
        $SAVE
         LR    R12,R15             LOAD BASE REGISTER
         XR    R15,R15             CLEAR R15 IN CASE OF PUNCH
         TM    PCEID,PCEPUSID      IS DEVICE A PUNCH
         BO    RETURN              RETURN IF IT IS.
         LR    R4,R1               SAVE ADDR OF DCT              JDM2
         USING DCTDSECT,R4         GET ADDRESSABILITY            JDM2
         LR    R9,R0               SAVE INPUT PARAMTERS
         L     R7,PWKJOE           GET ADDR OF WORK JOE
         USING JOEDSECT,R7         GET ADDRESSABILITY TO JOE
         SPACE
*--------------------------------------------------------------------*
*        NOW WE NEED TO GET A WORK BUFFER. WE FIX IT IN STORAGE.
*        ALSO BECAUSE OF THE LENGTH OF THE CODE WE NEED DOUBLE
*        BASE REGISTERS.
*--------------------------------------------------------------------*
         SPACE
        $GETBUF TYPE=HASP,FIX=YES,WAIT=YES
         LR    R3,R1               SAVE THE ADDRESS
         USING BUFDSECT,R3         GET ADDRESSABILITY
         SPACE
*--------------------------------------------------------------------*
*        NOW WE MUST SEND A PDIR IN CASE WE ARE DEALING WITH A
*        SNA REMOTE. IF IT IS NOT AN SNA REMOTE THE REQUEST IS
*        IGNORED.
*--------------------------------------------------------------------*
         SPACE
        $SEPPDIR (R3)              SEND A PDIR FOR SNA RMT
         B    ENDDJDE              SKIP SUBROUTINE AREA           JDM6
         SPACE
*---------------------------------------------------------------------*
*        SUBROUTINES ARE DEFINED HERE,  R5 IS THE RETURN REGISTER.
*        I PLACED THESE ROUTINES AT THE END OF THE CSECT AND
*        ENCOUNTERED ADDRESSABILITY ERRORS WITH BUFSTART. SO MOVING
*        IT HERE SOLVED MY PROBLEM.
*
*        1ST SUBROUTINE PUTS OUT A LINE ON THE BANNER. IF YOU ATTEMPT
*        TO CODE MANY $PRPUT MACROS YOU WILL FIND THAT THE PGM WILL
*        GENERATE ALOT OF INSTRUCTIONS ( 16 BYTES PER $PRPUT ).
*        SO I WILL TRADE A LITTLE EFFICIENCY FOR STORAGE LOCATIONS
*        AND ALSO LATER ADDRESSABILITY PROBLEMS.
*---------------------------------------------------------------------*
         SPACE
PRTLINE  EQU   *
         LA    R1,BUFSTART         GET ADDR OF BUFFER
         L     R0,=F'132'          GET LENGTH TO PRINT
        $PRPUT DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES
         MVI   BUFSTART,C' '       MOVE IN A BLANK
         MVC   BUFSTART+1(131),BUFSTART    ROLL THE BLANKS
         BR    R5
         SPACE
PUTAST   EQU   *
         MVC   BUFSTART(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST MOVE IN ASTERICK
         BR    R5
*---------------------------------------------------------------------*
*        SUBROUTINE TO CONVERT THE TIME TO   HH.MM.SS
*---------------------------------------------------------------------*
         SPACE
PUTTIME  EQU   *
         SRDL  R0,32               SHIFT RIGHT 32 BITS
         D     R0,=F'+100'         CONVERT TO WHOLE SECS
         XR    R0,R0               CLEAR R0
         D     R0,=F'+3600'        GET HRS
         CVD   R1,BUFSTART         CONVERT HRS TO                JDM1
         UNPK  BUFSTART+57(2),BUFSTART+6(2)    PRINTABLE FORMAT  JDM1
         OI    BUFSTART+58,240     FIX THE ZONE
         SRDL  R0,32               SHIFT RIGHT 32 BITS
         D     R0,=F'+60'          CONVERT TO WHOLE MIN
         CVD   R1,BUFSTART         CONVERT HRS TO                JDM1
         MVI   BUFSTART+59,C'.'    MOVE IN PERIOD
         UNPK  BUFSTART+60(2),BUFSTART+6(2)   PRINTABLE FORMAT   JDM1
         OI    BUFSTART+61,240     FIX THE ZONE
         CVD   R0,BUFSTART         CONVERT HRS TO                JDM1
         MVI   BUFSTART+62,C'.'    MOVE IN PERIOD
         UNPK  BUFSTART+63(2),BUFSTART+6(2)   PRINTABLE FORMAT   JDM1
         OI    BUFSTART+64,240     FIX THE ZONE
         MVC   BUFSTART+66(L'TIMEZONE),TIMEZONE
         BR    R5                  RETURN WHEN WE CAME
         SPACE
*---------------------------------------------------------------------*
*        SUBROUTINE TO CONVERT DATE TO  YY.DDD  WHERE DD IS JULIAN
*---------------------------------------------------------------------*
         SPACE
PUTDATE  EQU   *
         STCM  R1,15,PCEUSER0      STORE THE DATE
         UNPK  BUFSTART+58(5),PCEUSER0+1(3)
         OI    BUFSTART+62,240     FIX THE ZONE
         MVC   BUFSTART+57(2),BUFSTART+58  MOVE DAY BACK ONE
         MVI   BUFSTART+59,C'.'    MOVE IN PERIOD
         BR    R5
*--------------------------------------------------------------------*
*        THIS SUBROUTINES DETERMINES THE CAVEAT FOR THE BANNER PAGE
*--------------------------------------------------------------------*
         SPACE
CAVEAT   EQU   *
         MVI   BUFSTART,C' '       BLANK OUT BUFFER
         MVC   BUFSTART+1(131),BUFSTART
         MVC   BUFSTART+39(L'CLASINFO),CLASINFO
         CLI   JCTPNAME+10,C'P'    PRIVACY ACT DATA ?????
         BE    DOPRIV
         CLI   JCTPNAME+10,C'O'    FOR OFFICIAL USE ONLY ????
         BE    DOFOUO
         MVC   BUFSTART(L'UNCL),UNCL   DEFAULT
         MVC   BUFSTART+112(L'UNCL),UNCL
         BR    R5
         SPACE
DOFOUO   EQU   *
         MVC   BUFSTART(L'FOUO),FOUO
         MVC   BUFSTART+104(L'FOUO),FOUO
         BR    R5
         SPACE
DOPRIV   EQU   *
         MVC   BUFSTART(L'PRIV),PRIV
         MVC   BUFSTART+109(L'PRIV),PRIV
         BR    R5
         SPACE
*----------------------------------------------------------------JDM6*
*        IF WE HAVE END SEPARATOR, MOVE 'END' DJDE TO OUTPUT     JDM6*
*        AND SKIP TO CHNL 1 SO PRINTER (XEROX 8700) WILL BE      JDM6*
*        RESET FOR BANNER PRINTING.  END DJDE LOOKS LIKE:        JDM6*
*                                                                JDM6*
*        0        1         2         3                          JDM6*
*       012345678901234567890123456789012                        JDM6*
*       P DJDE FORMAT=FMT1,END;                                  JDM6*
*       C                                                        JDM6*
*       C                                                        JDM6*
*            PCC - MACHINE CODE X'89', WRITE AND SKIP TO CHNL 1  JDM6*
*            FMT1 - INTERNAL TO XEROX 8700                       JDM6*
*----------------------------------------------------------------JDM6*
         SPACE
ENDDJDE  EQU   *                                                 JDM6
         C     R9,FULL8            CHECK FOR END SEPARATOR       JDM6
         BNE   L1T3                NO, NORMAL BANNER PROCESSING  JDM6
         CLC   DCTDEVN(8),X8700PRT X8700 PRINTER???              JDM6
         BNE   L1T3                BYPASS DJDE PROCESSING        JDM6
         MVI   BUFSTART,C' '       BLANK OUT                     JDM6
         MVC   BUFSTART+1(131),BUFSTART   THE BUFFER AREA        JDM6
         MVC   BUFSTART(24),DJDEEND  MOVE IN 'END' DJDE          JDM6
         LA    R1,BUFSTART             GET ADDR OF BUFFER        JDM6
         L     R0,=F'133'              GET LENGTH TO PRINT       JDM6
        $PRPUT DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES,CC=M         JDM6
         SPACE
*--------------------------------------------------------------------*
*        NOW WE ARE GOING TO START TO BUILD THE BANNER. THE COMMENTS
*        WILL BE LENGTHY AT TIMES. IT IS ONE WAY FOR ME TO DOCUMENT
*        AND ALSO MAKE SURE I DID NOT MISS ANYTHING. I WILL BE BUILD-
*        ING A 63 LINE BANNER (START ON LINE 4) AND WILL HAVE LABELS
*        TO TELL YOU WHAT LINES I AM ON.
*--------------------------------------------------------------------*
         SPACE
L1T3     EQU   *
         BAL   R5,CAVEAT           DO CAVEAT
         BAL   R5,PRTLINE          PRINT CAVEAT LINE
         BAL   R5,PRTLINE          PRINT A LINE
         BAL   R5,PRTLINE          PRINT A LINE
L4T15    EQU   *
         CLC   JCTJNAME(4),RSCS    FROM VM ????                  JDM5
         BNE   L4T15A                                            JDM5
         LA    R0,JCTPNAME         POINT TO VM JOBNAME           JDM5
         B     L4T15B                                            JDM5
L4T15A   EQU   *                                                 JDM5
         LA    R0,JCTJNAME         POINT TO THE JOBNAME
L4T15B   EQU   *                                                 JDM5
        $PBLOCK BUFFER=(R3),DATA=(R0),SLANT=YES
         SPACE
L16      EQU   *
         MVI   BUFSTART,C' '       BLANK OUT
         MVC   BUFSTART+1(131),BUFSTART   THE BUFFER AREA
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L17T28   EQU   *
         MVC   PCEUSER0(8),$BLANKS BLANK PROVIDE WORK AREA
         MVC   PCEUSER0(1),JCTJOBID    GET JOB TYPE
         MVC   PCEUSER0+1(4),JCTJOBID+4    AND THE NUMBER
         MVC   PCEUSER0+6(1),JOECURCL  GET SYSOUT CLASS
         LA    R0,PCEUSER0         POINT TO FIELD
        $PBLOCK BUFFER=(R3),DATA=(R0)
         SPACE
L29      EQU   *
         MVI   BUFSTART,C' '       BLANK OUT
         MVC   BUFSTART+1(131),BUFSTART   THE BUFFER AREA
         BAL   R5,PRTLINE          PRINT A LINE
L30T31   EQU   *
         BAL   R5,CAVEAT           DO CAVEAT
         BAL   R5,PRTLINE          PRINT A LINE
         BAL   R5,PRTLINE
         SPACE
L32T33   EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         MVI   BUFSTART+1,C'-'     MOVE IN A DASH
         MVC   BUFSTART+2(129),BUFSTART+1   ROLL THE DASH
         BAL   R5,PRTLINE          PRINT A LINE
         MVC   BUFSTART(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST MOVE IN ASTERICK
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L34      EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         MVC   BUFSTART+31(L'USAF),USAF
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L35T36   EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         BAL   R5,PRTLINE          PRINT A LINE
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L37      EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         MVC   BUFSTART+20(L'SADAFCC),SADAFCC
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L38      EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L39      EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L40      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+5(L'RUNCLASS),RUNCLASS
         MVC   BUFSTART+18(1),JCTCLASS    MOVE IN RUN CLASS
         MVC   BUFSTART+42(L'SUBDATE),SUBDATE
         L     R1,JCTCDTON         COMPUTE THE
         BAL   R5,PUTDATE          SUBMIT DATE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L41      EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L42      EQU   *
         MVC   BUFSTART+131(1),AST MOVE IN ASTERICK
         MVC   BUFSTART+42(L'SUBTIME),SUBTIME   MOVE IN SUB TIME
         L     R0,JCTCNVON         COMPUTE SUBMIT TIME
         BAL   R5,PUTTIME
         MVC   BUFSTART(8),$BLANKS BLANK AREA WE SCREWDUP        JDM1
         MVC   BUFSTART(1),AST     MOVE IN ASTERICK              JDM1
         MVC   BUFSTART+2(L'NETACCT),NETACCT                     JDM1
         MVC   BUFSTART+89(SA),SAD1 MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L43      EQU   *
         BAL   R5,PUTAST           PUT  ASTERICKS IN
         MVC   BUFSTART+89(SA),SAD2 MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L44      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+5(L'PROJCODE),PROJCODE MOVE IN VALUE
         MVC   BUFSTART+18(8),JCTACCTN MOVE IN 1ST 8 ACCT FIELD  JDM2
         MVC   BUFSTART+43(L'STARTDTE),STARTDTE
         L     R1,JCTXDTON         COMPUTE THE
         BAL   R5,PUTDATE          START DATE
         MVC   BUFSTART+89(SA),SAD3 MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L45      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+89(SA),SAD4    MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L46      EQU   *
         MVC   BUFSTART+131(1),AST MOVE IN ASTERICK
         MVC   BUFSTART+43(L'STARTTME),STARTTME
         L     R0,JCTXEQON         COMPUTE THE
         BAL   R5,PUTTIME          START TIME
         MVC   BUFSTART(8),$BLANKS BLANK AREA WE SCREWDUP        JDM1
         MVC   BUFSTART(1),AST     MOVE IN ASTERICK              JDM1
         MVC   BUFSTART+6(L'FORMNME),FORMNME MOVE IN VALUE       JDM2
         MVC   BUFSTART+18(4),DCTFORMS MOVE IN FORM NAME USED    JDM2
         MVC   BUFSTART+89(SA),SAD5    MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L47      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L48      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+3(L'PGMFLD),PGMFLD MOVE IN VALUE
         MVI   BUFSTART+18,C''''   MOVE IN 1ST  QUOTE
         CLC   JCTJNAME(4),RSCS    FROM VM ??????                JDM5
         BE    L48A                                              JDM5
         MVC   BUFSTART+19(20),JCTPNAME MOVE JOBNAME FLD         JDM5
         B     L48B                                              JDM5
L48A     EQU   *                                                 JDM5
         MVC   BUFSTART+19(8),JCTJNAME MOVE IN VM PGMNAME FLD    JDM5
L48B     EQU   *                                                 JDM5
         MVI   BUFSTART+39,C''''   MOVE IN LAST QUOTE
         MVC   BUFSTART+45(L'ENDDATE),ENDDATE
         L     R1,JCTXDTOF         COMPUTE THE
         BAL   R5,PUTDATE           -OFF EXECUTION
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L49      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+83(AC),AFCC1   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L50      EQU   *
         MVC   BUFSTART+131(1),AST MOVE IN ASTERICK
         MVC   BUFSTART+18(1),JCTCPUID MOVE IN CPUID 1ST LETTER A/B
         MVC   BUFSTART+45(L'ENDTIME),ENDTIME
         L     R0,JCTXEQOF         COMPUTE THE
         BAL   R5,PUTTIME           -OFF EXECUTION
         MVC   BUFSTART(8),$BLANKS     BLANK AREA WE SCREWDUP    JDM1
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK          JDM1
         MVC   BUFSTART+4(L'RUNONCPU),RUNONCPU MOVE IN VALUE     JDM1
         MVC   BUFSTART+83(AC),AFCC2   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L51      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+83(AC),AFCC3   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L52      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+4(L'PRTEDON),PRTEDON MOVE IN VALUE
         MVC   BUFSTART+45(L'PRTDATE),PRTDATE
         AIF   (NOT &SP134).SKIP40                               JDM8
         TIME  BIN                                               JDM8
.SKIP40  ANOP                                                    JDM8
         AIF   (&SP134).SKIP45                                   JDM8
        $TIME
.SKIP45  ANOP                                                    JDM8
         LR    R6,R0               SAVE TIME FOR LATER
         BAL   R5,PUTDATE          R1 HAS DATE IN IT
         MVC   BUFSTART+83(AC),AFCC4   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L53      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+83(AC),AFCC5   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L54      EQU   *
         MVC   BUFSTART+131(1),AST MOVE IN ASTERICK
         MVC   BUFSTART+18(1),JCTCPUID MOVE IN CPU ID 1ST LETTER A/B
         MVI   BUFSTART+19,C'/'    MOVE IN SLASH
         MVC   BUFSTART+20(8),DCTDEVN  MOVE IN THE DEVICE NAME
         MVC   BUFSTART+45(L'PRTTIME),PRTTIME
         LR    R0,R6               RESTORE THE TIME
         BAL   R5,PUTTIME
         MVC   BUFSTART(8),$BLANKS BLANK AREA WE SCREWDUP        JDM1
         MVC   BUFSTART(1),AST     MOVE IN ASTERICK              JDM1
         MVC   BUFSTART+5(L'CPUPRT),CPUPRT MOVE IN VALUE         JDM1
         MVC   BUFSTART+83(AC),AFCC6   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L55      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+83(AC),AFCC7   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L56      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+4(L'MAILCDE),MAILCDE MOVE IN VALUE
         SPACE
*---------------------------------------------------------------------*
*        THIS IS WHERE WE DETERMINE THE 'MAIL CODE' THAT THE USERS    *
*        JOB WILL BE SENT TO IF IT IS PRINTED LOCALLY. LOOK AT THE    *
*        'MAIL CODE' TABLE LATER IN THE PROGRAM FOR A DETAILED        *
*        DESCRIPTION OF THE LOGIC.                                    *
*---------------------------------------------------------------------*
         SPACE
         CLC   JOEREMOT,=H'0'      ARE WE PRINTING REMOTE
         BNE   RMTMSG              IF SO PUT IN MSG
         CLC   JCTPNAME(2),=C'D='  USER DESIRE TO USE MAIL CODE???
         BNE   FNDEFALT            IF NOT FIND THE DEFAULT
         L     R1,=V(MAILBOX)      GET ADDR OF MAIL CODE TABLE
         SPACE
*-------------------------------------------------------------------*
*        VALIDATE THE MAIL CODE ENTRY IN PGMNAME FLD. BUT IT MAY
*        BE INVALID, SO WE MUST VALIDATE IT FOR CORRECTNESS
*-------------------------------------------------------------------*
         SPACE
MAILLOOP EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE
         BE    FNDEFALT            YES WE NEED TO GET DEFAULT
         CLC   0(5,R1),JCTPNAME+2  IT IS THE VALUE ???
         BE    GOTCODE             WE FOUND IT
         A     R1,FIVE             BUMP THE POINTER
         B     MAILLOOP            GO LOOP
         SPACE
*---------------------------------------------------------------------*
*        NOW WE MUST FIND THE DEFAULT IF IT EXISTS, BASED ON
*        1ST 4 CHARS OF THE JOBNAME.
*---------------------------------------------------------------------*
         SPACE
FNDEFALT EQU   *
         CLC   JCTJNAME(4),RSCS    NJE PRINT ??                  JDM5
         BE    L56C1               YES                           JDM5
         MVC   PCEUSER0(8),JCTJNAME  MOVE IN JOBNAME             JDM5
         B     L56C2                                             JDM5
L56C1    EQU   *                                                 JDM5
         MVC   PCEUSER0(8),JCTPNAME  MOVE IN VM USERID           JDM5
L56C2    EQU   *                                                 JDM5
         L     R1,=V(MAILCODE)     GET THE ADDRESS
         SPACE
STOPLOOP EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE
         BE    TRY2                NO MATCH
         CLC   PCEUSER0(4),0(R1)   SEARCH ON CC OF JOBNAME       JDM5
         BE    GOTDEFLT            FOUND DEFAULT
         A     R1,FIVE             BUMP POINTER
         B     STOPLOOP            GO LOOP
         SPACE
*---------------------------------------------------------------------*
*        NOW WE MUST FIND THE DEFAULT IF IT EXISTS
*---------------------------------------------------------------------*
         SPACE
TRY2     EQU   *
         L     R1,=V(MAILCODE)     GET THE ADDRESS
         SPACE
TRY2LOOP EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE
         BE    STOPERR
         CLI   1(R1),C'#'          ARE WE GENERIC TESTING
         BE    TSTGENL1
         CLI   2(R1),C'#'          ARE WE GENERIC TESTING
         BE    TSTGENL2
         CLI   3(R1),C'#'          ARE WE GENERIC TESTING
         BE    TSTGENL3
         B     TSTGENL2            TEST FOR LENGTH OF 2
         SPACE
TSTGENL1 EQU   *
         CLC   PCEUSER0(1),0(R1)   DOES 1ST CHAR MATCH           JDM5
         BE    GOTDEFLT            YES WE HAVE IT
         B     INCRSTOP
         SPACE
TSTGENL2 EQU   *
         CLC   PCEUSER0(2),0(R1)   DOES 1ST CHAR MATCH           JDM5
         BE    GOTDEFLT            YES WE HAVE IT
         B     INCRSTOP
         SPACE
TSTGENL3 EQU   *
         CLC   PCEUSER0(3),0(R1)   DOES  1ST CHAR MATCH          JDM5
         BE    GOTDEFLT            YES WE HAVE IT
INCRSTOP EQU   *
         A     R1,FIVE             BUMP POINTER
         B     TRY2LOOP
         SPACE
*---------------------------------------------------------------------*
*        THIS IS WHERE WE MOVE SOME MAIL CODE
*---------------------------------------------------------------------*
         SPACE
GOTDEFLT EQU   *
         SR    R2,R2               CLEAR R2
         IC    R2,4(R1)            GET THE INDEX
         MH    R2,HFIVE            MULT BY 5
         L     R1,=V(MAILBOX)      GET ADDR OF TABLE
         AR    R1,R2               ADD INTO TABLE
         MVC   BUFSTART+18(5),0(R1)    MOVE IN THE MAIL CODE
         MVC   BUFSTART+26(L'DEFLMSG),DEFLMSG
         B     LOGO56              JUMP ERR MSG
         SPACE
STOPERR  EQU   *
         MVC   BUFSTART+18(L'STPERMSG),STPERMSG
         B     LOGO56              JUMP ERR MSG
         SPACE
GOTCODE  EQU   *
         MVC   BUFSTART+18(5),0(R1) MOVE IN THE MAILCODE
         B     LOGO56              JUMP ERR MSG
         SPACE
RMTMSG   EQU   *
         MVC   BUFSTART+18(L'RMTPRT),RMTPRT  TELL RMT PRINTED
         SPACE
LOGO56   EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+83(AC),AFCC8   MOVE IN LOGO LINE
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L57      EQU   *
         BAL   R5,PUTAST           PUT ASTERICKS IN
         MVC   BUFSTART+1(1),DASH  MOVE IN DASH
         MVC   BUFSTART+2(129),BUFSTART+1 ROLL DASHES
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L58      EQU   *
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L59      EQU   *
         BAL   R5,CAVEAT           GIVE ME CAVEAT
         BAL   R5,PRTLINE          PRINT THE LINE
         SPACE
L60      EQU   *
         BAL   R5,PRTLINE          PRINT THE LINE
L61      EQU   *
         C     R9,ZERO             IS IT THE START
         BH    CHKFOR4
         MVC   BUFSTART+19(L'START),START
         MVC   BUFSTART+39(L'START),START
         MVC   BUFSTART+59(L'START),START
         MVC   BUFSTART+79(L'START),START
         MVC   BUFSTART+99(L'START),START
         B     L61DONE
CHKFOR4  EQU   *
         C     R9,FOUR             IS IT CONT
         BH    MUSTBE8
         MVC   BUFSTART+19(L'CONT),CONT
         MVC   BUFSTART+39(L'CONT),CONT
         MVC   BUFSTART+59(L'CONT),CONT
         MVC   BUFSTART+79(L'CONT),CONT
         MVC   BUFSTART+99(L'CONT),CONT
         B     L61DONE
MUSTBE8  EQU   *
         MVC   BUFSTART+19(L'END),END
         MVC   BUFSTART+39(L'END),END
         MVC   BUFSTART+59(L'END),END
         MVC   BUFSTART+79(L'END),END
         MVC   BUFSTART+99(L'END),END
L61DONE  EQU   *
         BAL   R5,PRTLINE          PRINT A LINE
L62      EQU   *
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
L63T64   EQU   *
         MVI   BUFSTART,C'$'       MOVE IN SEPARATOR CHARACTER
         MVC   BUFSTART+1(131),BUFSTART ROLL THE DOLLAR SIG
         BAL   R5,PRTLINE          PRINT A LINE
         MVI   BUFSTART,C'$'       MOVE IN SEPARATOR CHARACTER
         MVC   BUFSTART+1(131),BUFSTART ROLL THE DOLLAR SIG
         BAL   R5,PRTLINE          PRINT A LINE
         SPACE
*--------------------------------------------------------------------*
*        NOW WE NEED TO CHECK IF THIS IS THE TRAILER PAGE. IF SO,
*        WE NEED TO SCHEDULE EXIT 255 TO PRINT THE RECEIPT.
*--------------------------------------------------------------------*
         SPACE
         C     R9,FULL8            CHECK IF TRAILER (CODE=8)
         BL    SKPEX255            SKIP IF NOT TRAILER
         LR    R1,R4               RESTORE CONTENTS
         LR    R0,R9               RESTORE CONTENTS
        $EXIT 255,JOBMASK=JCTXMASK CALL EXIT 255
SKPEX255 EQU   *
         SPACE
*--------------------------------------------------------------------*
*        NOW WE ARE SET TO PRINT THE 'JESNEWS' FILE
*--------------------------------------------------------------------*
         SPACE
JESNEWS  EQU   *
         ICM   R1,15,$NEWSTTR      GET TTR OF THE NEWS
         LTR   R1,R1               IS NEWS REALLY THERE?
         BZ    EXIT                IF NOT, QUIT
        $RESTORE R0                RESTORE ENTRY TYPE
         LTR   R0,R0               IS IT FRONT BANNER
         BNZ   EXIT                QUIT
         OI    PPFLAG,PPNEWS       SET NEWS FLAG
         ST    R1,PCEJMTTR         SET NEWS MTTR
         MVC   PCEEJRCB,=Y(HDBSTART-BUFDSECT)  SET INITIAL OFFSET
         MVC   PPKEY,=C'$$NEWS'    SET SPECIAL JOB/DS KEY
         MVC   PRLINECT,MINUSONE   SET LARGE PAGE SIZE
EXIT     EQU   *
         SPACE
*----------------------------------------------------------------JDM6*
*        X8700 CODE. IF SO WE MUST VALIDATE THE FORM TYPE (YOU   JDM6
*        WILL SEE HOW IN THE CODE). AS A SIDE ISSUE, IF THE      JDM6
*        JOBNAME IS 'RSCSNNNN', WE KNOW IT CAME FROM NJE; A      JDM6
*        VM/RSCS SYSTEM. THUS WE MUST CHECK THE VM USERID FIELD  JDM6
*        TO SEE IF IT CONTAINS ACCOUNTING INFO. IF NOT, WE       JDM6
*        CHECK A TABLE (EXTERNAL CSECT) TO GET THE ACCTNO TO     JDM6
*        PUMP TO THE X8700 IN THE "DJDE".                        JDM6
*----------------------------------------------------------------JDM6*
         SPACE
X87PRT   EQU   *                                                 JDM6
         CLC   DCTDEVN(8),X8700PRT X8700 PRINTER???              JDM6
         BNE   X87SKIP             BYPASS DJDE PROCESSING        JDM6
         C     R9,FULL8            CHECK FOR 'END' SEP           JDM6
         BE    X87SKIP             IT IS, DJDE COMPLETED         JDM6
         MVC   BUFSTART(32),DJDE   MOVE IN SKELETON DJDE         JDM6
         CLC   JCTJNAME(4),RSCS    IS IT FROM RSCS               JDM6
         BNE   X87ACCT4                                          JDM6
         CLC   JCTPNAME+2(2),C00   VM USERID BELOW CHAR 00       JDM6
         BL    X87ACCT0            NOT OK                        JDM6
         CLC   JCTPNAME+2(2),C99   VM USERID ABOVE CHAR 99       JDM6
         BH    X87ACCT0            NOT OK                        JDM6
         B     X87ACCT3            IS OK                         JDM6
         SPACE
*----------------------------------------------------------------JDM6*
*        NEED TO CHECK THE ACCT TABLE TO MATCH UP THE ACCT CODE  JDM6
*        WILL THE 1ST TWO CHARACTERS OF USERID. THIS IS CAUSED   JDM6
*        BY NJE NOT SENDING US ACCT INFO FROM VM/RSCS. THUS WE   JDM6
*        HAVE A LOCAL STANDARD ON VM OF 1ST FOUR CHARACTERS WILL JDM6
*        BE ACCT INFO (LIKE FX01). AS WITH ALL STANDARDS IT WAS  JDM6
*        STARTED LATE AND SOME DO NOT HAVE BUT THE 1ST TWO. SO   JDM6
*        FOR AN ID OF 'TUDAVE', WE NEED TO CHECK THE 3RD DIGIT   JDM6
*        FOR A NUMBER (AS ABOVE), AND IF NOT, THEN GO TO THE     JDM6
*        FOLLOWING TABLE AND MATCH 'TU' AND THEN GET THE PROPER  JDM6
*        4 CHARACTER ACCT CODE.                                  JDM6
*----------------------------------------------------------------JDM6*
         SPACE
X87ACCT0 EQU   *                                                 JDM6
         L     R1,=V(X87ACCT)      GET ADDRESS OF CSECT          JDM6
         SPACE
X87ACCT1 EQU   *                                                 JDM6
         CLI   0(R1),X'FF'         AT END OF TABLE               JDM6
         BE    X87ACCT3            1ST 4 OF JOBNAME ANYWAY (ERR) JDM6
         CLC   JCTPNAME(2),0(R1)   DO WE MATCH                   JDM6
         BE    X87ACCT2            GOT A MATCH                   JDM6
         A     R1,SIX              MOVE POINTER                  JDM6
         B     X87ACCT1                                          JDM6
         SPACE
X87ACCT2 EQU   *                                                 JDM6
         MVC   BUFSTART+12(4),2(R1)  MOVE IN CHARGE CODE         JDM6
         B     X87FORM             DO FORMS NEXT                 JDM6
         SPACE
X87ACCT3 EQU   *                                                 JDM6
         MVC   BUFSTART+12(4),JCTPNAME    MOVE IN ACCT CODE      JDM6
         B     X87FORM             DO FORMS NEXT                 JDM6
         SPACE
*----------------------------------------------------------------JDM6*
*        SINCE IT IS NOT A VM/RSCS NJE TRANSFER, THEN WE CAN     JDM6
*        USE THE REGULAR ACCT INFO FROM JOB CARD.                JDM6
*----------------------------------------------------------------JDM6*
         SPACE
X87ACCT4 EQU   *                                                 JDM6
         MVC   BUFSTART+12(4),JCTACCTN MOVE IN ACCT CODE         JDM6
         SPACE
*----------------------------------------------------------------JDM6*
*        ONE WAY OR ANOTHER, VM/RSCS OR NOT, WE NEED TO CHECK    JDM6
*        THE 'FORMS'. WE WANT ONLY TO SEND TO THE X8700 FORMS    JDM6
*        WE HAVE REGISTERED. IF IT IS NOT VALID WE WILL SEND     JDM6
*        A FORMS NAME OF 'UNKN' (IS A 2ISG FORM SAYING 'UNKNOWN' JDM6
*        ON THE FORM. WE HAVE A TABLE BUILT AS AN EXTERNAL       JDM6
*        CSECT.                                                  JDM6
*----------------------------------------------------------------JDM6*
         SPACE
X87FORM  EQU   *                                                 JDM6
         CLC   DCTFORMS(4),STD     DO WE FORM=STAN               JDM6
         BNE   X87FORM0            GUESS WE NEED TO VALIDATE     JDM6
         MVC   BUFSTART+22(4),XF01 X87 EQUIVALENT OF 'STAN'      JDM6
         B     X87FORMP            GO SEND TO X8700              JDM6
X87FORM0 EQU   *                                                 JDM6
         L     R1,=V(J13X1XF)      GET ADDRESS OF CSECT          JDM9
         SPACE
X87FORM1 EQU   *                                                 JDM6
         CLI   0(R1),X'FF'         AT END OF TABLE               JDM6
         BE    X87FORM3            BAD CODE                      JDM6
         CLC   DCTFORMS(4),0(R1)   DO WE MATCH                   JDM6
         BE    X87FORM2            GOT A MATCH                   JDM6
         A     R1,F12              MOVE POINTER                  JDM9
         B     X87FORM1                                          JDM6
         SPACE
X87FORM2 EQU   *                                                 JDM6
         MVC   BUFSTART+22(4),0(R1)  MOVE IN FORM NAME           JDM6
         B     X87FORMP                                          JDM6
         SPACE
X87FORM3 EQU   *                                                 JDM6
         MVC   BUFSTART+22(4),UNKN MOVE IN BOGUS FORM NAME       JDM6
         B     X87FORMP                                          JDM6
         SPACE
*----------------------------------------------------------------JDM6*
*        NOW WE ARE READY TO SHIP THE X8700 A RECORD. IN X8700   JDM6*
*        LANGUAGE THEY CALL IT A 'DJDE'. IT IS A 36 BYTE REC:    JDM6*
*                                                                JDM6*
*        0        1         2         3                          JDM6*
*        12345678901234567890123456789012                        JDM6*
*         DJDE DEPT='AAAA',JDE=FFFF,END; NNNN                    JDM6*
*                                                                JDM6*
*        AAAA - 4 CHAR BILLING ACCTNO                            JDM6*
*        FFFF - 4 CHAR FORMNAME                                  JDM6*
*        NNNN - JES2 NUMBER                                      JDM6*
*----------------------------------------------------------------JDM6*
         SPACE
X87FORMP EQU   *                                                 JDM6
         MVC   BUFSTART+32(4),JCTJOBID+4   JES2 CODE NO          JDM6
         LA    R1,BUFSTART             GET ADDR OF BUFFER        JDM6
         L     R0,=F'132'              GET LENGTH TO PRINT       JDM6
        $PRPUT DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES              JDM6
X87SKIP  EQU   *                                                 JDM6
         SPACE
        $FREEBUF (R3)              FREE WORK BUFFER
         DROP  R3
         DROP  R4
         SPACE
*---------------------------------------------------------------------*
*        SINCE WE HAVE PRINTED OUR OWN BANNER, WE WANT TO RETURN
*        BACK TO JES2 AN EIGHT SO HE WILL NOT PRINT THE DEFAULT
*        BANNER AFTER OURS.
*---------------------------------------------------------------------*
         SPACE
         L     R15,FULL8           SET RC=8
         SPACE
RETURN   EQU   *
        $RETURN RC=(R15)           RETURN TO HASPPRPU
         EJECT
*---------------------------------------------------------------------*
*        CONSTANTS ARE DEFINED BELOW
*---------------------------------------------------------------------*
         SPACE
STOPLEN  EQU   7                   LENGTH OF CC+MAILCODE
PPNEWS   EQU   X'01'
         DS    0F
MINUSONE DC    F'-1'
ZERO     DC    F'0'
FOUR     DC    F'4'
FIVE     DC    F'5'                                              JDM6
SIX      DC    F'6'                                              JDM6
FULL8    DC    F'8'
F12      DC    F'12'                                             JDM9
HFIVE    DC    H'5'
USAF     DC    C'U  N  I  T  E  D      S  T  A  T  E  S      A  I  R   +
                  F  O  R  C  E'
         SPACE
SADAFCC  DC    C'2ND    INFORMATION    SYSTEMS    GROUP    /      AIR  +
                 FORCE    COMMUNICATIONS    COMMAND'
         SPACE
SUBDATE  DC    C'SUBMIT DATE -'
SUBTIME  DC    C'SUBMIT TIME -'
STARTDTE DC    C'START DATE -'
STARTTME DC    C'START TIME -'
ENDDATE  DC    C'END DATE -'
ENDTIME  DC    C'END TIME -'
PRTDATE  DC    C'PRT DATE -'
PRTTIME  DC    C'PRT TIME -'
RUNCLASS DC    C'RUN CLASS  -'
TIMEZONE DC    C'(CST)'
PROJCODE DC    C'PROJ + DSD -'
FORMNME  DC    C'    FORM  -'
PGMFLD   DC    C'PGMNAME FLD  - '''
RUNONCPU DC    C'RUN ON CPU  -'
PRTEDON  DC    C'PRINTED ON'
CPUPRT   DC    C'CPU/PRTER  -'
MAILCDE  DC    C'MAIL  CODE  -'
START    DC    C'*- START -*'
CONT     DC    C'*- CONT -*'
END      DC    C'**- END -**'
AST      DC    C'*'
DASH     DC    C'-'
RSCS     DC    C'RSCS'                                           JDM5
RMTPRT   DC    C'PRINTED AT RMT LOCATION'
DEFLMSG  DC    C'DEFAULT MAIL CODE USED'
STPERMSG DC    C'UNDETERMINABLE'
NETACCT  DC    C'NETWORK ACCT  - NONE'
PRIV     DC    C'* - PRIVACY ACT DATA - *'
UNCL     DC    C'* - UNCLASSIFIED - *'
FOUO     DC    C'* - FOR OFFICIAL USE ONLY - *'
CLASINFO DC    C'HIGHEST LEVEL CLASSIFICATION CONTAINED IN THIS DOCUMENX
               T'
         SPACE
X8700PRT DC    CL8'PRINTER3'       X8700 PRINTER NAME            JDM6
STD      DC    CL4'STAN'           2ISG JES2 DEFAULT FORM        JDM6
XF01     DC    CL4'XF01'           X87 EQUIVALENT OF STD.        JDM6
UNKN     DC    CL4'UNKN'           OUR BOGUS FORM NAME           JDM6
C00      DC    CL2'00'             CHARACTER 00                  JDM6
C99      DC    CL2'99'             CHARACTER 99                  JDM6
         SPACE
*----------------------------------------------------------------JDM6*
*        X8700 DJDE RECORD TO PASS TO X8700                      JDM6*
*----------------------------------------------------------------JDM6*
         SPACE
DJDE     DS    0CL36                                             JDM6
         DC    CL12' DJDE DEPT='''                               JDM6
DDJACCTN EQU   *-DJDE                                            JDM6
         DC    CL4'????'           ACCT NUMBER TO PASS           JDM6
         DC    CL6''',JDE='                                      JDM6
DDJFORM  EQU   *-DJDE                                            JDM6
         DC    CL4'????'           FORM NAME TO PASS             JDM6
         DC    CL6',END; '                                       JDM6
         DC    CL4'XXXX'           JES2 NUMBER                   JDM6
LDJDE    EQU   *-DJDE              LENGTH OF DJDE                JDM6
         SPACE
DJDEEND  DS    0CL26                                             JDM6
         DC    X'89'               MACH CODE PRINT/SKIP CHN 1    JDM6
         DC    CL6' DJDE '         ENDING DJDE FOR X8700         JDM6
         DC    CL12'FORMAT=FMT1,'    TO FORCE END BANNER         JDM6
         DC    CL7'END;   '         BACK TO NORMAL               JDM6
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        WE HAVE A LOGO WE WANT IN THE LOWER RIGHT HAND CORNER
*        OF THE PAGE.
*---------------------------------------------------------------------*
         SPACE
*              0        1         2         3         4         5
*              1234567890123456789012345678901234567890123456789012345
SAD1     DC  C'****       *****     ***      *** '
SAD2     DC  C'    *        *      *        *    '
SAD3     DC  C'****         *       ***     *  **'
SAD4     DC  C'*            *          *    *   *'
SAD5     DC  C'*****      *****     ***      *** '
SA       EQU SAD2-SAD1             COMPUTE LENGTH OF LOGO LINE
         SPACE
AFCC1    DC  C' ******      ********     ********     ********'
AFCC2    DC  C'***  ***     *******      *******      ******* '
AFCC3    DC  C'**    **     **           **           **      '
AFCC4    DC  C'********     *******      **           **      '
AFCC5    DC  C'********     *******      **           **      '
AFCC6    DC  C'**    **     **           **           **      '
AFCC7    DC  C'**    **     **           *******      ******* '
AFCC8    DC  C'**    **     **           ********     ********'
AC       EQU AFCC2-AFCC1           COMPUTE LENGTH OF LOGO LINE
         EJECT
         TITLE 'PUNCH PORTION OF EXIT #1'
*---------------------------------------------------------------------*
*        NOW WE HAVE THE PUNCH EXIT. WE HAVE A DYNAMIC MOD INTO
*        JES2, NAMELY HASPPRPU TO FORCE ALL CARDS COMING OUT OF
*        AN IBM 3525 PUNCH TO BE INTERPRETED NO  MATTER IF  THE
*        USER CODES   DCB=FUNC=I OR NOT. ALSO WE INTERPRET THE
*        BEGINNING AND ENDING BANNER CARDS.
*
*        TO FIND THE MOD YOU NEED TO LOOK INTO HASPPRPU  SOURCE
*        TO FIND A SECTION (WOULD GIVE YOU THE CODE BUT WITH
*        IBM RESTRICTIONS ON GIVING OUT SOURCE CODE!!!)
*
*---------------------------------------------------------------------*
         AIF   (NOT &SP134).SKIP50                               JDM8
J13X1PUN $ENTRY BASE=R12                                         JDM8
.SKIP50  ANOP                                                    JDM8
         AIF   (&SP134).SKIP55                                   JDM8
J13X1PUN $ENTRY BASE=R12,CSECT=YES
.SKIP55  ANOP                                                    JDM8
        $SAVE
         LR    R12,R15             LOAD THE BASE REGISTER
         SR    R15,R15             CLEAR R15 FOR RC=0
         LR    R9,R0               SAVE INPUT PARMATERS
         LR    R4,R1               SAVE INPUT PARMATERS
         SPACE
*---------------------------------------------------------------------*
*        WE TEST TO SEE IF IT IS HEADER CARD FOR START OR CONT.
*---------------------------------------------------------------------*
         SPACE
         L     R7,PWKJOE           ADDR OF WORK JOE
         USING JOEDSECT,R7         GET ADDRESSABILITY
         SPACE
         C     R9,EIGHT            TRAILER CARD???
         BE    RECPLSE             IF SO, THIS CODE
         SPACE
        $GETBUF TYPE=HASP,FIX=YES,WAIT=YES   GET A WORK BUFFER   JDM4
         LR    R3,R1               SAVE ADDR OF THE BUFFER       JDM4
         USING BUFDSECT,R3         EST ADDRESSABILITY
         MVI   BUFSTART,C' '       PUT IN A BLANK                JDM4
         MVC   BUFSTART+1(79),BUFSTART   ROLL THE BLANKS         JDM4
         MVC   BUFSTART+1(1),JCTJOBID    MOVE IN TYPE            JDM4
         MVC   BUFSTART+3(4),JCTJOBID+4  MOVE IN JOB NUMBER      JDM4
         CLC   JCTJNAME(4),VMRSCS  NJE PRINT ??                  JDM5
         BE    PCONT1              YES                           JDM5
         MVC   PCEUSER0(8),JCTJNAME  MOVE IN JOBNAME             JDM5
         B     PCONT2                                            JDM5
PCONT1   EQU   *                                                 JDM5
         MVC   PCEUSER0(8),JCTPNAME  MOVE IN VM USERID           JDM5
PCONT2   EQU   *                                                 JDM5
         MVC   BUFSTART+8(8),PCEUSER0    MOVE IN JOBNAME         JDM5
VM2      EQU   *                                                 JDM5
         CLI   JCTPNAME+10,C'P'    PRIVACY ACT DATA?
         BE    PUNPRIV
         CLI   JCTPNAME+10,C'O'    F.O.U.O. ?
         BNE   PUNUNCL
         MVC   BUFSTART+17(L'FOUOMSG),FOUOMSG
         B     PUNRMT
PUNUNCL  EQU   *
         MVC   BUFSTART+17(L'UNCLMSG),UNCLMSG
         B     PUNRMT
PUNPRIV  EQU   *
         MVC   BUFSTART+17(L'PRIVMSG),PRIVMSG
PUNRMT   EQU   *
         CLC   JOEREMOT,=H'0'      IS IT A REMOTE??
         BNE   PUNHEAD
         SPACE
*--------------------------------------------------------------------*
*        NO WE FIND THE MAIL CODE FOR LOCAL PUNCHING.
*--------------------------------------------------------------------*
         SPACE
         CLC   JCTPNAME(2),=C'D='  DID USER SUPPLY
         BNE   FINDEF              IF NOT, FIND DEFAULT
         L     R1,=V(MAILBOX)      MUST VALIDATE THE CODE
         SPACE
LOOP1    EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE?
         BE    FINDEF              YES, SO FIND DEFAULT
         CLC   0(5,R1),JCTPNAME+2  DO WE MATCH?
         BE    GOTDEF
         A     R1,=F'5'            BUMP
         B     LOOP1
         SPACE
FINDEF   EQU   *
         L     R1,=V(MAILCODE)     GET ADDR OF CODES
         SPACE
LOOP2    EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE?
         BE    PMAIL               YES, SO FIND DEFAULT
         CLC   0(4,R1),PCEUSER0    DO WE MATCH?                  JDM5
         BE    GOTDEF
         A     R1,=F'5'            BUMP
         B     LOOP2
         SPACE
PMAIL    EQU   *
         L     R1,=V(MAILCODE)     GET ADDR OF CODES
         SPACE
LOOP3    EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE?
         BE    LOOPERR             YES, SO FIND DEFAULT
         CLI   1(R1),C'#'
         BE    PGENL1
         CLI   2(R1),C'#'
         BE    PGENL2
         CLI   3(R1),C'#'
         BE    PGENL3
         B     PGENL2
         SPACE
PGENL1   EQU   *
         CLC   PCEUSER0(1),0(R1)                                 JDM5
         BE    GOTDEF
         B     LOOP3END
         SPACE
PGENL2   EQU   *
         CLC   PCEUSER0(2),0(R1)                                 JDM5
         BE    GOTDEF
         B     LOOP3END
         SPACE
PGENL3   EQU   *
         CLC   PCEUSER0(3),0(R1)                                 JDM5
         BE    GOTDEF
         B     LOOP3END
         SPACE
LOOP3END EQU   *
         A     R1,=F'5'            BUMP POINTER
         B     LOOP3               DO IT AGAIN
         SPACE
GOTDEF   EQU   *
         SR    R2,R2               ZERO R2
         IC    R2,4(R1)            GET OFFSET
         MH    R2,=H'5'            MULTIPLY BY 5
         L     R1,=V(MAILBOX)      GET BASE OF TABLE
         AR    R1,R2               ADD THE OFFSET
         MVC   BUFSTART+55(5),0(R1) MOVE IN MAILCODE
         B     PUNHEAD
         SPACE
LOOPERR  EQU   *
         MVC   BUFSTART+55(5),=C'?????'
         SPACE
PUNHEAD  EQU   *
         MVC   BUFSTART+48(6),=C'>>-->>'
         LA    R1,BUFSTART         GET THE ADDRESS               JDM4
         L     R0,EIGHTY           GET THE LENGTH                JDM4
        $PRPUT DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES              JDM4
        $FREEBUF (R3)                                            JDM4
         DROP  R3                                                JDM4
         B     SKPRECPT            SKIP OVER RECEIPT TASK
         SPACE
RECPLSE  EQU   *
         CLC   JOEREMOT(2),=H'0'   IS IT A REMOTE??
         BH    SKPRECPT
         LR    R0,R9               RESTORE THE VALUE
         LR    R1,R4               RESTORE THE VALUE
        $EXIT  255,JOBMASK=JCTXMASK
         SPACE
SKPRECPT EQU   *
         L     R15,EIGHT           SET RC=8
        $RETURN RC=(R15)
         SPACE
*---------------------------------------------------------------------*
*        SUBROUTINE AREA
*---------------------------------------------------------------------*
         SPACE
         EJECT
*---------------------------------------------------------------------*
*        DEFINE OUR CONSTANTS HERE
*---------------------------------------------------------------------*
         SPACE
EIGHT    DC    F'8'
EIGHTY   DC    F'80'
VMRSCS   DC    C'RSCS'
UNCLMSG  DC    C'*- UNCLASSIFIED -*'
PRIVMSG  DC    C'*- PRIVACY ACT DATA -*'
FOUOMSG  DC    C'*- FOR OFFICAL USE ONLY -*'
EMSG     DC    C' '
         DC    C'*---------  END  OF  '
DETYPE   EQU   *-EMSG
ETYPE    DC    C'X '
DEJNUM   EQU   *-EMSG
EJNUM    DC    C'NNNN     '
DEJNAME  EQU   *-EMSG
EJNAME   DC    C'XXXXXXXX  '
         DC    C'---------*'
EMSGL    EQU   *-EMSG
         SPACE
         LTORG
         $MODEND
         END
