         TITLE '   P 3 8 B O X 1   '
*$DOC@*****************************************************************
*                                                                     *
*         'P38BOX1' - PRINT AN ASSEMBLY LISTING WITH A BORDER         *
*                                                                     *
***********************************************************************
*
*  WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*  INSTALLATION. AIR FORCE DATA SERVICES CENTER, THE PENTAGON.
*  DATE WRITTEN. DECEMBER 10 1981.
*  DATE UPDATED.
*  ATTRIBUTES. NOT RE-ENTRANT. SERIALLY REUSABLE.
*  DESCRIPTION.
*   THIS PROGRAM READS A SYSPRINT FILE FROM AN ASSEMBLY
*   (OR ANY FILE THAT IS RECFM=FBA OR RECFM=FBM WITH LRECL=121)
*   AND PRINTS THE LISTING ON A 3800 PRINTER WITH A BORDER
*   AROUND EACH PAGE.
*
*  LOG OF CHANGES.
*   09DEC81 - MACHINE CARRIAGE CONTROLS NOW SUPPORTED.
*   10DEC81 - PARM=D10 TO WRITE 10 BLANK LINES AT TOP OF PAGE,
*             TO CENTER A BOX OF 60 LINES AT 8 LINES PER INCH.
*
***********************************************************************
         EJECT
***********************************************************************
*
*   A 3800 PAGE AT 6 LINES PER INCH HOLDS 60 LINES, BUT SINCE
*   THIS PROGRAM USES THE TOP AND BOTTOM LINES FOR THE BORDER
*   THERE ARE ONLY 58 LINES LEFT FOR THE DATA.
*
*   YOU MUST SPECIFY PROPER LINECOUNT PARAMETERS TO THE ASSEMBLER
*   OR TO WHATEVER PROGRAM IS DOING THE PRINTING, SO IT DOES NOT
*   WRITE MORE THAN 58 LINES PER PAGE.
*   FOR ASSEMBLER H (IEV90), SPECIFY LINECNT=53.
*   FOR ASSEMBLER XF (IFOX00), SPECIFY LINECOUNT(53).
*
*   DDNAMES REQUIRED.
*     SYSUT1   - THE ASSEMBLER SYSPRINT DATA SET, INPUT.
*     SYSUT2   - //SYSUT2   DD SYSOUT=S,CHARS=(FM10,GF10)
*
*   THE ONLY CARRIAGE CHANNEL SUPPORTED IS CHANNEL 1 (TOP OF PAGE).
*   ALL OTHER CHANNELS ARE TREATED AS SINGLE SPACE.
*
*   THE FM10 CHARACTER SET CONTAINS THE LINES USED TO MAKE THE BORDER.
*   THE SECOND CHARACTER SET CAN BE ANY OF THE 10-PITCH SETS USED
*   TO PRINT NORMAL DATA SUCH AS ASSEMBLER LISTINGS.
*
*   OPTCD=J MEANS THAT THE FIRST DATA POSITION IN EACH PRINT LINE
*   (THE CHARACTER AFTER THE CARRIAGE CONTROL) IS A
*   TABLE REFERENCE CHARACTER, OR TRC.  THIS CAN HAVE A VALUE OF
*   0, 1, 2, OR 3.  THE LEFT 4 BITS ARE IGNORED, SO A TRC CAN
*   BE EITHER AN EBCDIC NUMBER (HEX F0 TO F3) OR BINARY (HEX 00 TO 03).
*   THE TRC CORRESPONDS TO THE RELATIVE POSITION OF THE CHARACTER
*   TABLE NAME IN THE CHARS= KEYWORD.
*
*$DOC$*****************************************************************
         SPACE
P38BOX1  CSECT
         USING *,R10
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'P38BOX1'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             BASE REGISTER
         LR    R2,R1               SAVE PARM REG
         LA    R1,SAVE             POINT TO NEW SAVE AREA
         ST    R13,4(,R1)          PUT OLD ADDRESS IN NEW SAVE AREA
         ST    R1,8(,R13)          PUT NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R1              SWITCH TO NEW SAVE AREA
         SPACE
         MVI   DOWNSW,0            REUSABILITY
         MVI   LINETOP,C'1'        REUSABILITY
         L     R1,0(,R2)
         LH    R0,0(,R1)           LENGTH OF PARM
         CH    R0,=H'3'
         BNE   NOPARM
         CLC   2(3,R1),=C'D10'     DOWN 10 LINES
         BNE   NOPARM
         MVI   DOWNSW,10
         MVI   LINETOP,C' '        CHANGE CC IN LINETOP
NOPARM   EQU   *
         MVC   SYSUT1+DDNAM(8),=CL8'SYSUT1' REUSABILITY
         MVC   SYSUT2+DDNAM(8),=CL8'SYSUT2' REUSABILITY
         TM    0(R2),X'80'         IS THERE AN ALTERNATE DDNAME LIST
         BO    DDEXIT              NO, BRANCH
         L     R1,4(,R2)           POINT TO DDNAME LIST
         LH    R0,0(,R1)           GET LENGTH OF DDNAME LIST
         LA    R1,2(,R1)           POINT PAST LENGTH
         SPACE
         CH    R0,=H'64'           LONG ENOUGH FOR SYSUT1
         BL    DDEXIT              NO, BRANCH
         CLI   56(R1),0            SYSUT1 OVERRIDE
         BE    *+8                 NO, SKIP MVC
         MVC   SYSUT1+DDNAM(8),56(R1)
         SPACE
         CH    R0,=H'72'           LONG ENOUGH FOR SYSUT2
         BL    DDEXIT              NO, BRANCH
         CLI   64(R1),0            SYSUT2 OVERRIDE
         BE    *+8                 NO, SKIP MVC
         MVC   SYSUT2+DDNAM(8),64(R1)
DDEXIT   EQU   *
         SPACE
         OPEN  (SYSUT1,INPUT,SYSUT2,OUTPUT)
         TM    SYSUT1+OFLGS,X'10'  WAS OPEN SUCCESSFUL
         BNO   EMPTY               NO, BRANCH
         TM    SYSUT2+OFLGS,X'10'  WAS OPEN SUCCESSFUL
         BNO   EMPTY               NO, BRANCH
         LA    R3,1                VALUE 1
         SR    R4,R4               CLEAR THE RECORD COUNTER
         MVI   PREV,0              REUSABILITY
LOOP     EQU   *
         GET   SYSUT1              READ A RECORD
         LR    R8,R1               LOAD POINTER TO RECORD
         BAL   R14,CONVERT         CONVERT CARRIAGE CONTROL
         LTR   R15,R15             ANYTHING TO WRITE
         BNZ   LOOP                NO, BRANCH
         AR    R4,R3               ADD 1 TO RECORDS TO PRINT
         MVC   LINEB+4(120),1(R8)  COPY RECORD TO PRINT LINE
         CR    R4,R3               FIRST RECORD IN
         BE    TOP                 YES, PRINT TOP LINE
         CLI   0(R8),C' '          SINGLE SPACE
         BE    SING
         CLI   0(R8),C'1'          SKIP TO CHANNEL 1
         BE    TOP
         CLI   0(R8),C'0'          DOUBLE SPACE
         BE    DOUB
         CLI   0(R8),C'-'          TRIPLE SPACE
         BE    TRIP
         CLI   0(R8),C'+'          SUPPRESS SPACE
         BE    OVER
         B     SING                NONE OF THE ABOVE
TOP      EQU   *
         CR    R4,R3               IS THIS FIRST PAGE
         BE    TOP1                YES, BRANCH
         PUT   SYSUT2,LINEBOT      PRINT BOTTOM LINE ON PREVIOUS PAGE
TOP1     EQU   *
         CLI   DOWNSW,10           DOWN 10 LINES
         BNE   TOP2                NO, BRANCH
         PUT   SYSUT2,LINESK1
         PUT   SYSUT2,LINESP3
         PUT   SYSUT2,LINESP3
         PUT   SYSUT2,LINESP3
TOP2     EQU   *
         PUT   SYSUT2,LINETOP
         B     SING
TRIP     EQU   *
         PUT   SYSUT2,LINEA        BLANK LINE, EXCEPT FOR BORDER
DOUB     EQU   *
         PUT   SYSUT2,LINEA        BLANK LINE, EXCEPT FOR BORDER
SING     EQU   *
         PUT   SYSUT2,LINEA        BARS THAT WILL GO ALONGSIDE DATA
OVER     EQU   *
         PUT   SYSUT2,LINEB        PUT DATA ON SAME LINE AS BARS
         B     LOOP
UT1EOD   EQU   *
         LTR   R4,R4               WAS THERE ANY OUTPUT
         BZ    EMPTY               NO, SKIP BOTTOM LINE
         PUT   SYSUT2,LINEBOT
EMPTY    EQU   *
         CLOSE (SYSUT1,,SYSUT2)
         FREEPOOL SYSUT1
         FREEPOOL SYSUT2
         L     R13,4(,R13)
         LM    14,12,12(R13)
         SR    15,15
         BR    14
         EJECT
***********************************************************************
*                                                                     *
*         CONVERT CARRIAGE CONTROLS TO ASA                            *
*                                                                     *
***********************************************************************
*
*               ANY RECORD NOT CONTAINING A MACHINE CC WILL BE
*               COPIED WITH ITS OWN CC, EXCEPT:
*                   IF IT IS THE FIRST RECORD OF ITS TYPE
*                   AND IS A SINGLE-SPACE IT WILL BE CHANGED TO
*                   SKIP-TO-CHANNEL 1.
*
*               A RECORD CONTAINING A MACHINE CC (WRITE) WILL BE
*               COPIED WITH AN ASA BASED ON THE PREVIOUS MACHINE CC.
*               IF THE RECORD WAS NOT PRECEDED WITH A MACHINE CC
*               RECORD, IT IS WRITTEN WITH SKIP-TO-CHANNEL 1.
*
*               A RECORD CONTAINING A MACHINE CC (IMMEDIATE) WILL
*               NOT BE COPIED, BUT ITS CC WILL DETERMINE THE CC
*               OF THE NEXT RECORD (UNLESS NEXT IS ASA OR IMM).
*
*               IF A MACHINE WRTSP1 OR IMMSP1 IS FOLLOWED BY
*               A MACHINE IMMEDIATE SKIP, THE SPACE 1 WILL BE
*               DROPPED.  THIS IS BECAUSE A BLANK LINE WOULD
*               HAVE TO BE WRITTEN, AND IT IS PROBABLY UNNECESSARY.
*               IF THIS EVER CAUSES A PROBLEM, IT IS EASY TO REMOVE
*               THIS LOGIC AND WRITE THE BLANK LINE.  JUST REMOVE
*               THE GROUP OF INSTRUCTIONS MARKED '-OPT-'
*
*               CONDITIONS NOT PROPERLY HANDLED (BUT INSIGNIFICANT).
*                  IMMEDIATE FOLLOWED BY ASA OR EOF.
*                     (IGNORED)
*                  WRITE FOLLOWED BY ASA OR EOF.
*                     (SP/SK IGNORED)
*
CONVERT  MVC   HPREV,PREV
         TRT   0(1,R8),TABMACH     MACHINE CC
         BZ    ASA                 NO, BRANCH
*
*               MACHINE CC
*
         STC   R2,PREV             STORE ASA FOR NEXT RECORD
         TM    0(R8),X'02'         IS IT IMMEDIATE
         BZ    PUTP                NO, ITS A WRITE
         CLI   HPREV,0             IS THERE AN OUTSTANDING ACTION
         BE    NOPUT               NO, BRANCH
         CLI   HPREV,C'+'          WAS PREV WRTSP0 OR IMMSP0
         BE    NOPUT               YES, BRANCH
         CLI   HPREV,C' '   -OPT-  WAS PREV WRTSP1 OR IMMSP1
         BNE   PREVSIG      -OPT-  NO, ITS PROBABLY SIGNIFICANT
         TM    0(R8),X'80'  -OPT-  IS THIS A SKIP, NOT A SPACE
         BO    NOPUT        -OPT-  ITS A SKIP, SO PREV CAN BE IGNORED
PREVSIG  MVC   BLINE(1),HPREV      WRITE A BLANK LINE WITH HPREV
         LA    R8,BLINE
         SR    R15,R15             WRITE THE LINE POINTED TO BY R8
         BR    R14
NOPUT    LA    R15,4               DO NOT WRITE A LINE
         BR    R14
         SPACE
PUTP     MVC   0(1,R8),HPREV
         CLI   0(R8),0             IS THERE A CC BASED ON PREV RECORD
         BNE   PUT                 YES, GO USE IT
*
*               WE'VE HIT A MACHINE WRT CC NOT PRECEDED BY
*               A MACHINE CC.
*               MAKE IT SKIP TO CHANNEL 1.
*
         MVI   0(R8),C'1'
         B     PUT
*
*               ASA CC
*
ASA      CLI   PREV,0              WAS PREVIOUS RECORD MACHINE
         BE    PUT                 NO, BRANCH
         MVI   PREV,0
*
*               WE'VE HIT AN ASA RECORD NOT PRECEDED BY AN ASA RECORD.
*
*               IF IT'S A SINGLE SPACE, CHANGE IT TO SKIP TO CH 1.
*
         CLI   0(R8),C' '
         BNE   PUT
         MVI   0(R8),C'1'
PUT      SR    R15,R15
         BR    R14
         SPACE
         DC    0D'0'
TABMACH  DC    256X'00'
         ORG   TABMACH+X'01'       WRT SP0
         DC    C'+'
         ORG   TABMACH+X'09'       WRT SP1
         DC    C' '
         ORG   TABMACH+X'11'       WRT SP2
         DC    C'0'
         ORG   TABMACH+X'19'       WRT SP3
         DC    C'-'
         ORG   TABMACH+X'89'       WRT SK1
         DC    C'1'
         ORG   TABMACH+X'91'       WRT SK2
         DC    C'2'
         ORG   TABMACH+X'99'       WRT SK3
         DC    C'3'
         ORG   TABMACH+X'A1'       WRT SK4
         DC    C'4'
         ORG   TABMACH+X'A9'       WRT SK5
         DC    C'5'
         ORG   TABMACH+X'B1'       WRT SK6
         DC    C'6'
         ORG   TABMACH+X'B9'       WRT SK7
         DC    C'7'
         ORG   TABMACH+X'C1'       WRT SK8
         DC    C'8'
         ORG   TABMACH+X'C9'       WRT SK9
         DC    C'9'
         ORG   TABMACH+X'D1'       WRT SK10
         DC    C'A'
         ORG   TABMACH+X'D9'       WRT SK11
         DC    C'B'
         ORG   TABMACH+X'E1'       WRT SK12
         DC    C'C'
         ORG   TABMACH+X'03'       IMM SP0 (NO-OP)
         DC    C'+'
         ORG   TABMACH+X'0B'       IMM SP1
         DC    C' '
         ORG   TABMACH+X'13'       IMM SP2
         DC    C'0'
         ORG   TABMACH+X'1B'       IMM SP3
         DC    C'-'
         ORG   TABMACH+X'8B'       IMM SK1
         DC    C'1'
         ORG   TABMACH+X'93'       IMM SK2
         DC    C'2'
         ORG   TABMACH+X'9B'       IMM SK3
         DC    C'3'
         ORG   TABMACH+X'A3'       IMM SK4
         DC    C'4'
         ORG   TABMACH+X'AB'       IMM SK5
         DC    C'5'
         ORG   TABMACH+X'B3'       IMM SK6
         DC    C'6'
         ORG   TABMACH+X'BB'       IMM SK7
         DC    C'7'
         ORG   TABMACH+X'C3'       IMM SK8
         DC    C'8'
         ORG   TABMACH+X'CB'       IMM SK9
         DC    C'9'
         ORG   TABMACH+X'D3'       IMM SK10
         DC    C'A'
         ORG   TABMACH+X'DB'       IMM SK11
         DC    C'B'
         ORG   TABMACH+X'E3'       IMM SK12
         DC    C'C'
         ORG
CC       DC    X'00'
PREV     DC    X'00'
HPREV    DC    X'00'
BLINE    DC    CL133' '
         EJECT
***********************************************************************
*                                                                     *
*         WORK SPACE AND CONSTANTS                                    *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
SAVE     DC    18F'0'
DDNAM    EQU   40
OFLGS    EQU   48
         PRINT NOGEN
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,                        +
               EODAD=UT1EOD
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,                        +
               RECFM=FBA,LRECL=134,BLKSIZE=134,                        +
               OPTCD=J
         PRINT GEN
DOWNSW   DC    AL1(0)
LINESK1  DC    CL134'10 '
LINESP3  DC    CL134'-0 '
LINETOP  DC    CL2'10'             CC AND TRC
         DC    AL1(NW1)
         DC    122AL1(HZ1)
         DC    AL1(NE1)
         DC    CL8' '
LINEBOT  DC    CL2' 0'             CC AND TRC
         DC    AL1(SW1)
         DC    122AL1(HZ1)
         DC    AL1(SE1)
         DC    CL8' '
LINEA    DC    CL2' 0'
         DC    AL1(VT1)
         DC    CL122' '
         DC    AL1(VT1)
         DC    CL8' '
LINEB    DC    CL134'+1 '
WORD     DC    F'0'
DOUBLE   DC    D'0'
HEXTAB   DC    C'0123456789ABCDEF'
         SPACE
*              EQUATES FOR CHARS=FM10
         SPACE
*              SMALL
         SPACE
NW0      EQU   X'C1'               NORTHWEST CORNER
NE0      EQU   X'C2'               NORTHEAST CORNER
SE0      EQU   X'C3'               SOUTHEAST CORNER
SW0      EQU   X'C4'               SOUTHWEST CORNER
HZ0      EQU   X'D1'               HORIZONTAL BAR
VT0      EQU   X'D2'               VERTICAL BAR
         SPACE
*              MEDIUM
         SPACE
NW1      EQU   X'D3'
NE1      EQU   X'D4'
SE1      EQU   X'D5'
SW1      EQU   X'D6'
HZ1      EQU   X'E4'
VT1      EQU   X'E5'
         SPACE
*              LARGE
         SPACE
NW2      EQU   X'E6'
NE2      EQU   X'E7'
SE2      EQU   X'E8'
SW2      EQU   X'E9'
HZ2      EQU   X'F6'
VT2      EQU   X'F7'
         SPACE
R0       EQU   0                   <>
R1       EQU   1                 <<  >>
R2       EQU   2               <<      >>
R3       EQU   3             <<          >>
R4       EQU   4           <<              >>
R5       EQU   5         <<                  >>
R6       EQU   6       <<                      >>
R7       EQU   7     <<    SYMBOLIC REGISTERS    >>
R8       EQU   8       <<                      >>
R9       EQU   9         <<                  >>
R10      EQU   10          <<              >>
R11      EQU   11            <<          >>
R12      EQU   12              <<      >>
R13      EQU   13                <<  >>
R14      EQU   14                  <>
R15      EQU   15
         END
