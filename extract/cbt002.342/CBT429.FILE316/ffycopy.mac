         TITLE 'F F Y C O P Y - COPY A FILE USING BSAM'
*--------------------------------------------------------------------*
*                                                                    *
*        THIS IS A PROGRAM USED TO COPY FILES WITH BSAM. IT IS       *
*        MUCH FASTER THAN QSAM OR IEBGENER.                          *
*                                                                    *
* COURTESY:  JIM MARSHALL, CAPT, USAF-RET                            *
*                                                                    *
* WRITTEN: MR FRANK YATES, AEROSPACE CORP WHILE AT MULTIPURPOSE      *
*          FACILITY, LOWRY AFB,CO FOR USE UNDER OS/MVT               *
*                                                                    *
* CHANGE                                                             *
*     LOG: MAY 1978-INSTALLED OS/MVS, AIR FORCE DATA SVCS CENTER,    *
*                   WASHINGTON DC,  J. MARSHALL                      *
*          DEC 1981-CLEANED UP CODE.  J.MARSHALL                     *
*          JUN 1991-ADDED DSECTS, ETC  JIM MARSHALL                  *
*--------------------------------------------------------------------*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                  ADDRESSABILITY TO DCB=IN
R11      EQU   11                  ADDRESSABILITY TO DCB=OUT
R12      EQU   12                  BASE REG
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
FFYCOPY  AMODE 24
FFYCOPY  RMODE 24
FFYCOPY  CSECT
         STM    R14,R12,12(R13)
         LR     R12,R15
         USING  FFYCOPY,R12
         LR     R15,R13            OLD SAVE AREA ADDRESS
         LA     R13,SAVEAREA       NEW SAVE AREA ADDRESS
         ST     R15,4(R13)         LINK SAVE AREAS
         ST     R13,8(R15)         LINK SAVE AREAS
         SPACE
         OPEN   IN                 OPEN INPUT FILE
         GETBUF IN,R6              REG 6 = BUFFER A ADDRESS
         GETBUF IN,R7              REG 7 = BUFFER B ADDRESS
         SPACE
         LA     R10,IN             GET ADDR OF IN
         USING  IHADCB,R10         ESTABLISH ADDRESSABILITY
         MVC    RECFM(1),DCBRECFM  SAVE RECFM
         MVC    BLKSIZE(2),DCBBLKSI  SAVE BLKSIZE
         MVC    LRECL(2),DCBLRECL  SAVE LRECL
         DROP   R10
         LA     R11,OUT            GET ADDR OF OUT
         USING  IHADCB,R11         ESTABLISH ADDRESSABILITY
         MVC    DCBRECFM,RECFM     COPY RECFM
         MVC    DCBBLKSI,BLKSIZE   COPY BLOCK SIZE
         MVC    DCBLRECL,LRECL     COPY LRECL
         DROP   R11
         OPEN   (OUT,OUTPUT)       NOW OPEN OUTPUT FILE
         MVI    W,X'7F'            SIMULATE FIRST SUCCESSFUL WRITE.
         B      READ               JUMP INTO LOOP
         SPACE
WRITE    WRITE  W,SF,OUT,(R6)
READ     READ   R,SF,IN,(R7)
         CHECK  W
         CHECK  R
         LA     R10,IN             GET ADDR OF IN
         USING  IHADCB,R10         ESTABLISH ADDRESSABILITY
         LH     R0,DCBBLKSI        REG 0 = INPUT BLKSIZE
         DROP   R10
         L      R1,R+16            REG 1 = IOB ADDRESS
         SH     R0,14(1)           REG 0 = LENGTH OF RECORD
         LA     R11,OUT            GET ADDR OF OUT
         USING  IHADCB,R11         ESTABLISH ADDRESSABILITY
         STH    R0,DCBBLKSI        SET OUTPUT BLKSIZE.
         DROP   R11
         STH    R0,W+6             SET OUTPUT RECORD LENGTH.
         LR     R0,R6              SWITCH BUFFERS.
         LR     R6,R7
         LR     R7,R0
         B      WRITE              LOOP
         SPACE
EODAD    EQU    *
         LA     R10,IN             GET ADDR OF IN
         USING  IHADCB,R10         ESTABLISH ADDRESSABILITY
         MVC    BLKSIZE(2),DCBBLKSI  SAVE BLKSIZE
         DROP   R10
         LA     R11,OUT            GET ADDR OF IN
         USING  IHADCB,R11         ESTABLISH ADDRESSABILITY
         MVC    DCBBLKSI,BLKSIZE   RESTORE BLOCKSIZE
         DROP   R11
         CLOSE  (OUT,,IN)
         L      R13,4(R13)         POINT TO PREVIOUS SAVE AREA
         RETURN (14,12),RC=0
         SPACE
*--------------------------------------------------------------------*
*        DATA AREA FOLLOWS
*--------------------------------------------------------------------*
IN       DCB   DSORG=PS,MACRF=R,BUFNO=2,EODAD=EODAD,DDNAME=COPYIN
OUT      DCB   DSORG=PS,MACRF=W,DDNAME=COPYOUT
SAVEAREA DC    18F'0'
RECFM    DS    X                   RECORD FORMAT
LRECL    DS    XL2                 LOGICAL RECORD LENGTH
BLKSIZE  DS    XL2                 BLOCKSIZE
         LTORG
         DCBD  DSORG=(PS)
         END
