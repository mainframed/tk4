         TITLE 'DENVER  COPYTAPE PROGRAM'
*---------------------------------------------------------------------*
*        COPYTAPE PROGRAM DEVELOPED FOR 2ND COMM SQ., DENVER, CO BY   *
*        FRANK YATES OF THE AEROSPACE CORPORATION. THANKS FRANK.      *
*        THIS PROGRAM USES EXCP CODE AND IS VERY FAST. IT WILL COPY   *
*        ANY TYPE TAPE, LABELED OR NON-LABELED, AND VERIFY THE COPY   *
*        BYTE BY BYTE. ALSO IT WILL COPY MULTI-REEL DATASETS BUT      *
*        DOES NOT HAVE OPTIONS OF VERIFYING THE COPY.                 *
*                                                                     *
*        THE BEST WAY TO LEARN HOW TO USE THIS BEAST IS TO PUT        *
*        IT INTO YOUR SYSTEM, START IT UP AND JUST DO WHAT THE        *
*        REPLIES TELL YOU TO DO.                                      *
*                                                                     *
*                            JIM MARSHALL                             *
*                                                                     *
*  WARNING - THIS IS REALLY NOT A WARNING, JUST THOUGHT I WOULD GET   *
*  -------   YOUR ATTENTION FOR SOME SUBTLE THINGS ABOUT THIS PGM.    *
*            1. IF YOU HAVE A INPUT TAPE, LET US SAY THAT IT IS       *
*               6250 BPI AND YOU PUT YOUR OUTPUT TAPE ON A            *
*               DUAL DENSITY 6250/1600 TAPE DRIVE. CT WILL MAKE       *
*               THE OUTPUT TAPE THE DENSITY OF THE TAPE YOU USE.      *
*               SO IF THERE IS A 1600 BPI LABEL, THE RESULT WILL      *
*               BE A 1600 BPI TAPE (POSSIBLY MANY OF THEM!)           *
*            2. BECAUSE THE PGM WAS WRITTEN WHEN I HAD 1600 BPI       *
*               ONLY AND FRANK CODED THIS FOR ME, THE FOLLOWING       *
*               BUG IS HERE. IF YOU SAY CONVERT A 1600 BPI TAPE       *
*               TO 6250 (OR ANYTHING ELSE) THAT LABEL THE TAPE        *
*               (IN HDR2) WILL HAVE THE CHARACTER 3 (1600 BPI).       *
*               TRUE THIS IS IN ERROR NOW THAT THE NEW TAPE IS        *
*               6250, BUT IT REALLY DOES HURT ANYTHING. I WILL TRY    *
*               TO FIX THIS ERROR, WHEN I HAVE THE TIME. MY GOD       *
*               LOOK AT THIS CODE, IT IS GREAT, AND COMPLEX !!!!      *
*                       JIM MARSHALL                                  *
*                                                                     *
* REQUIREMENTS: TLPRINT  - SUBROUTINE TO PRINT THE LABEL              *
*               IGG019WD - APPENDAGE FOR RECOVERY OF WRONG-DENSITY    *
*                          TAPE VOLUMES                               *
*               IGG019WE - APPENDAGE TO PREVENT ERROR AT EOF          *
*               MACROS   - CAPS,                                      *
*                                                                     *
*                                                                     *
* INSTALLED : JUNE 1976, AIR FORCE DATA SVCS CENTER, WASH D.C         *
*             FOR USE ON OS/MVT                                       *
*             JUNE 1978, INSTALLED ASIS ON OS/MVS                     *
*                                                                     *
* CHANGE LOG: JUNE 1981, CLEANED UP CODE, JIM MARSHALL                *
*             APR  1982, CHANGED  SOME MACROS TO IBM STANDARD,        *
*                        AND ADDED WARNING ABOVE.                     *
*             MAR  2000, FIXED PROGRAM TO COPY UP TO 64K BLOCKS.  SBG *
*                                                                     *
*---------------------------------------------------------------------*
***THIS IS CT, A PROGRAM TO COPY TAPES UNDER OPERATOR CONTROL.
*  REVISED 4 OCTOBER 74.
         SPACE 2
         MACRO
&NAME    ASK &WHAT
&NAME    LA 1,&WHAT          REG 1 = ADDRESS OF MESSAGE
         BAL 9,WTOR          WRITE TO OPERATOR WITH REPLY.
         MEND
         SPACE 2
         MACRO
&NAME    DO &CCW,&DCB
&NAME    MVC IOB+17(3),=AL3(&CCW) SELECT CCW.
         AIF ('&DCB' EQ '').NODCB
         MVC IOB+20,=A(&DCB)    SELECT DCB.
.NODCB   BAL 9,EXCP          LINK TO EXCP ROUTINE.
         MEND
         SPACE 2
         MACRO
&NAME    IF &LETTER,&EXIT
&NAME    CLI REPLY,C'&LETTER'     TEST REPLY COMMAND.
         BE &EXIT
         MEND
         SPACE 2
         MACRO
&NAME    SAVELAB &WHICH
&NAME    C 8,POOL2END        TEST FOR END OF LABEL POOL.
         BH *+14
         MVC 0(60,8),&WHICH  COPY LABEL TO POOL.
         LA 8,60(8)          ADVANCE LABEL POINTER.
         MEND
         SPACE 2
         MACRO
&NAME    TELL &ID
&NAME    LA 1,&ID
         MVC &ID+6(3),INJFCB+118  COPY ID TO MESSAGE.
         SVC 35              WRITE TO OPERATOR.
         MEND
         SPACE 2
         MACRO
&ID      WTOMSG
&ID      DC 0F'0',AL2(&ID.E-*,0),CL8'CT'
         MEND
         SPACE 2
         MACRO
&ID      WTORMSG &RLEN
&ID      DC 0F'0',AL1(&RLEN),AL3(REPLY),A(WTORECB),AL2(&ID.E-*,0)
         DC CL8'CT'
         MEND
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
***INITIALIZATION
         SPACE
COPYTAPE AMODE 24
COPYTAPE RMODE 24
COPYTAPE CSECT
         USING *,R15                                          SBG 03/00
         B     EYECATCH                                       SBG 03/00
         DC    C'--- CT --- '     MAKE EYECATCHER VISIBLE     SBG 03/00
         DC    C'COPYTAPE - SYSTEM CONSOLE TAPE COPY PROGRAM - '  03/00
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'---'          SBG 03/00
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00
         SAVE  (14,12),,COPYTAPE_AFDSC_&SYSDATE &SYSTIME
         LR    R12,R15
         LA    R11,4095(R12)
         LA    R11,1(R11)
         DROP  R15                                            SBG 03/00
         USING COPYTAPE,R12,R11    USE DOUBLE BASE
         LR    R15,R13
         LA    R13,SAVE0001
         ST    R15,4(R13)
         ST    R13,8(R15)
         RDJFCB (IN,,OUT)
         MVI   INJFCB+66,X'10'     BYPASS LABEL PROCESSING.
         MVI   OUTJFCB+66,X'10'
         L     R0,BLKSIZE          REG 0 = BUFFER SIZE
         STH   R0,RCCW+6
         SLL   R0,1                REG 0 = SIZE OF BUFFER POOL
         GETMAIN R,LV=(0)          GET BUFFER POOL.
         ST    R1,POOL1
         ST    R1,RCCW
         MVI   RCCW,2
         A     R1,BLKSIZE
         ST    1,WCCW
         MVI   WCCW,1
         GETMAIN EU,LV=158064,A=POOL2 GET LABEL POOL.
         L     R1,POOL2
         A     R1,=F'158000'
         ST    R1,POOL2END
         MVI   POOL2,X'F0'         KEEP TLPRINT DCB OPEN.
         LOAD  EP=IGG019WE         GET CHANNEL END APPENDAGE.
         LOAD  EP=IGG019WD         GET ABNORMAL END APPENDAGE.
         MVC   WTO1+10(3),INJFCB+118 COPY ID TO MESSAGE.
         MVC   WTO1+53(4),=X'95819485' WRITE NAME IN SMALL LETTERS
WTO1     WTO   'CT      TO PRINT PROGRAMMER NAME, REPLY NEXT,NAME'
         B     ASK11
         EJECT
RESTART  EQU   *                   DO ANOTHER TAPE.
         ZAP   FILENO,=P'1'        RESET FILE NO.
         MVI   FLAGS,0             RESET FLAGS.
         OI    LABELSW+1,X'F0'     ENABLE LABEL PROCESSING.
         MVC   LABCOM,=A(LAHDR1)   SET LABEL COMMUTATOR.
         MVC   MVOLAD,=A(MINVOLS)  RESET MVOLAD.
         BAL   R10,OPENIN          OPEN INPUT TAPE AND READ LABEL.
         BAL   R10,OPENOUT         OPEN OUTPUT TAPE AND READ LABEL.
         MVI   OUTECB,X'7F'        POST OUTECB.
         NI    WRITE+12,X'FE'      RESET UNIT EXCEPTION BIT.
         SPACE 2
***MAIN PROCESSING LOOP
         SPACE
LOOP     EXCP  READ                READ A DATA BLOCK, LABEL, OR TM
         WAIT  2,ECBLIST=ECBLIST
LEP1     TM    OUTECB,X'7F'        TEST FOR WRITE ERROR.
         BC    12,OUTERROR
LEP2     TM    WRITE+12,1          TEST FOR END OF OUTPUT VOLUME.
         BO    OUTEOV
LEP3     TM    INECB,X'7F'         TEST FOR READ ERROR.
         BC    12,INERROR
LEP5     L     R1,BLKSIZE
*        SH    R1,READ+14          REG 1 = LENGTH OF INPUT RECORD
*  -----    CHANGE HALFWORD ARITHMETIC TO FULLWORD.
         XC    FULLWRK2,FULLWRK2  CLEAR FULLWORK WORKAREA
         MVC   HALFWRK2(2),READ+14    UNUSED BYTES
         S     R1,FULLWRK2        FULLWORD SUBTRACTION
         BZ    INMARK
         NI    FLAGS,X'F7'         RESET TAPE MARK FLAG.
         STH   R1,WCCW+6           SET OUTPUT RECORD LENGTH.
LABELSW  BC    0,LABELS            EXIT TO LABEL ROUTINES
         LA    R7,1(R7)            COUNT AN OUTPUT DATA BLOCK.
LEP6     L     R0,RCCW             SWITCH BUFFERS.
         L     R1,WCCW
         ST    R0,WCCW
         ST    R1,RCCW
         MVI   RCCW,2
         MVI   WCCW,1
         EXCP  WRITE               WRITE THE DATA BLOCK OR LABEL.
         B     LOOP
         EJECT
***EXIT ROUTINES FOR MAIN LOOP
         SPACE
INMARK   EQU   *                   INPUT TAPE MARK ROUTINE
         TM    FLAGS,12            TEST FOR TRUNCATE OR TM FLAG
         BC    5,IMSTOP            STOP IF EITHER IS SET.
         TM    FLAGS,32            TEST BLP FLAG.
         BZ    IMQ1
         TM    READ,X'40'          TEST FOR INITIAL BLP TAPE MARK.
         BZ    IMQ1
         DO    MARK1,OUT           REWIND AND WRITE TAPE MARK.
         OI    FLAGS,8             SET TAPE-MARK FLAG.
         MVI   READ,0              RESTORE READ IOB.
         MVC   READ+17(3),=AL3(RCCW)
         NI    LABELSW+1,15        OPEN LABEL SWITCH.
         B     LOOP
IMQ1     EXCP  READ                TRY TO READ A DATA BLOCK.
         WAIT  ECB=INECB
         TM    INECB,X'7F'         TEST FOR ERROR.
         BC    12,INERROR
         L     R1,BLKSIZE
*        SH    R1,READ+14          REG 1 = LENGTH OF INPUT BLOCK
*  -----    CHANGE HALFWORD ARITHMETIC TO FULLWORD.
         XC    FULLWRK2,FULLWRK2  CLEAR FULLWORK WORKAREA
         MVC   HALFWRK2(2),READ+14    UNUSED BYTES
         S     R1,FULLWRK2        FULLWORD SUBTRACTION
         BZ    IMSTOP              EXIT FOR TWO CONSECUTIVE TM'S
         STH   R1,WCCW+6           SET OUTPUT WRITE LENGTH.
         L     R2,RCCW             REG 2 = ADDRESS OF BLOCK
         CLC   =C'EOV1',0(2)       TEST FOR END OF VOLUME.
         BE    INEOV               DO INPUT END-OF-VOLUME PROCESSING
IMQ2     DO    MARK,OUT            WRITE A TAPE MARK.
         TM    FLAGS,2             TEST LABELS-OFF FLAG.
         BO    LABELSW             RETURN TO MAIN LOOP.
         OI    LABELSW+1,X'F0'     ENABLE LABEL PROCESSING.
         B     LABELSW             RETURN TO MAIN LOOP.
         SPACE
IMSTOP   DO    MARK,OUT            WRITE A TAPE MARK.
         DO    MARK                WRITE A SECOND TAPE MARK.
         BAL   R10,CLOSE           DEMOUNT THE TAPES.
         BAL   R10,PRINTLAB        PRINT LABEL INFORMATION.
         TM    FLAGS,4             TEST TRUNCATE FLAG.
         BO    IMMSG6
         TM    FLAGS,1             TEST FOR MULTI-VOLUME DATA SET.
         BO    IMMSG10
         TM    FLAGS,32            TEST BLP FLAG.
         BO    IMMSG16
         MVC   INSER1,INVOL1+4
         MVC   OUTSER1,OUTVOL1+4
         SPACE
IMMSG1   ASK   MSG1                LOG COMPLETION OF STANDARD COPY.
         IF    V,VERIFY            VERIFY
         IF    N,NEXT              NEXT
         IF    Q,STOP              QUIT
         B     IMMSG1
         SPACE
IMMSG6   MVC   DSN6,HDR1+4
         ASK   MSG6
         B     NEXTSTOP
         SPACE
IMMSG10  MVC   DSN10,HDR1+4
         ASK   MSG10
         B     NEXTSTOP
         SPACE
IMMSG16  MVC   OUTSER16,OUTVOL1+4  COMPLETE MSG16.
IMQ3     ASK   MSG16               LOG COMPLETION OF NO-LABEL COPY
         IF    V,VERIFY            VERIFY
         IF    N,NEXT              NEXT
         IF    Q,STOP              QUIT
         B     IMQ3
         SPACE 2
INEOV    EQU   *                   INPUT END-OF-VOLUME ROUTINE
         TM    FLAGS,34            TEST FOR LABELS-OFF OR BLP FLAG.
         BZ    IEQ1
         OI    FLAGS,8             STOP AFTER NEXT TAPE MARK.
         B     IMQ2                OMIT END-OF-VOLUME PROCESSING.
IEQ1     OI    FLAGS,1             SET MULTI-VOLUME FLAG.
         MVC   DSN4,HDR1+4
         MVC   INSER4,INVOL1+4
         MVC   OUTSER4,OUTVOL1+4
         TELL  MSG4                LOG VOLUMES COPIED SO FAR.
         MVC   DSN5,HDR1+4         COPY DSN TO MSG5.
         PACK  WORK(3),HDR1+27(4)  PACK VOLUME SEQUENCE NO.
         AP    WORK(3),=P'1'       ADD 1.
         UNPK  VOLSEQ5,WORK(3)
         OI    VOLSEQ5+3,X'F0'
         MVC   CRDATE5,HDR1+42
         SPACE
IEMSG5   ASK   MSG5                ASK OPERATOR FOR NEXT VOLUME
         IF    O,IEGO              OK
         IF    T,IETRUN            TRUNCATE
         B     IEMSG5
         SPACE
IEGO     CLOSE IN
         BAL   R10,OPENIN          GET THE NEW VOLUME.
         DO    READLAB             READ HDR1.
         CLC   DSN5,LABEL+4        TEST DSN.
         BNE   IEMSG5
         CLC   VOLSEQ5,LABEL+27    TEST VOL. SEQ. NO.
         BNE   IEMSG5
         CLC   CRDATE5,LABEL+42    TEST CREATION DATE.
         BNE   IEMSG5
         MVC   HDR1,LABEL          UPDATE HDR1.
         DO    SKIP                SKIP TO DATA.
         MVC   INSER7,INVOL1+4
         MVC   VOLSEQ7,VOLSEQ5
         MVC   DSN7,DSN5
         TELL  MSG7                LOG NEW INPUT VOLUME.
         B     LOOP
         SPACE
IETRUN   MVC   LABCOM,=A(LAEOV1)   SELECT NEXT LABEL ROUTINE
         OI    LABELSW+1,X'F0'     ENABLE LABEL EXIT.
         DO    MARK,OUT            WRITE A TAPE MARK.
         OI    FLAGS,4             SET TRUNCATE FLAG.
         B     LEP5                RETURN TO MAIN LOOP.
         SPACE 2
OUTEOV   EQU *                     OUTPUT END-OF-VOLUME ROUTINE
         NI    WRITE+12,X'FE'      RESET UNIT EXCEPTION BIT.
         OI    FLAGS,1             SET MULTI-VOLUME FLAG.
         DO    MARK,OUT            WRITE TAPE MARK.
         TM    FLAGS,34            TEST FOR LABELS-OFF OR BLP FLAG.
         BZ    OEQ1
         MVC   WTO2+10(3),INJFCB+118 COPY ID TO MESSAGE.
WTO2     WTO 'CT      UNLABELED DATA SET TRUNCATED AT END OF VOLUME.'
         DO    MARK                WRITE 2ND. TAPE MARK.
         BAL   R10,CLOSE           DEMOUNT VOLUMES.
         B     ASK11
OEQ1     MVC   SAVE,HDR1           SAVE HDR1.
         MVC   HDR1(3),=C'EOV'     MAKE EOV1 LABEL.
         UNPK  HDR1+27(4),VOLSEQNO SET VOLUME SEQUENCE NO.
         OI    HDR1+30,X'F0'
         LA    R1,HDR1+54
         BAL   R10,BLKCNT          PUT BLOCK COUNT INTO IT.
         DO    WRITHDR1            WRITE IT.
         SAVELAB HDR1              WRITE TO POOL.
         MVC   HDR2(3),=C'EOV'     MAKE EOV2 LABEL.
         DO    WRITHDR2            WRITE IT.
         CLOSE OUT
         BAL   R10,PRINTLAB        PRINT LABEL INFO FOR THIS VOLUME.
         BAL   R10,OPENOUT         GET A NEW OUTPUT VOLUME.
         MVC   OUTSER8,OUTVOL1+4
         AP    VOLSEQNO,=P'1'
         UNPK  VOLSEQ8,VOLSEQNO
         OI    VOLSEQ8+3,X'F0'
         MVC   DSN8,HDR1+4
         TELL  MSG8                LOG NEW OUTPUT VOLUME.
         MVC   HDR1(3),=C'HDR'     MAKE NEW HDR1.
         MVC   HDR1+27(4),VOLSEQ8  VOL. SEQ. NO.
         MVC   HDR1+31(4),=C'0001' FILE NO.
         ZAP   FILENO,=P'2'
         MVC   HDR1+54(6),=6C'0'   BLOCK COUNT
         DO    WRITHDR1            WRITE HDR1.
         SAVELAB HDR1              COPY IT TO POOL.
         MVC   HDR1,SAVE           RESTORE HDR1.
         MVC   HDR2(3),=C'HDR'     MAKE HDR2.
         DO    WRITHDR2            WRITE IT.
         SAVELAB HDR2              COPY IT TO POOL.
         DO    MARK                WRITE A TAPE MARK.
         SR    R7,R7               RESET OUTPUT BLOCK COUNT.
         B     LEP3                RETURN TO MAIN LOOP.
         SPACE 2
LABELS   EQU   *                   LABEL PROCESSING ROUTINES
         L     R2,RCCW             REG 2 = ADDRESS OF LABEL
         L     R15,LABCOM          REG 15 = ADDRESS OF NEXT LABEL RTN
         BR    R15
         SPACE
LAHDR1   CLC   =C'HDR1',0(2)
         BNE   LASTOP
         PACK  VOLSEQNO,27(4,2)   SET OUT VOLSEQ = IN VOLSEQ.
         CLC   =C'0001',27(2)     TEST VOLUME SEQUENCE NO.
         BNE   LANOTV1
LAEP1    UNPK  31(4,2),FILENO     PUT FILE NO. INTO HDR1.
         OI    34(2),X'F0'
         AP    FILENO,=P'1'
         MVC   HDR1,0(2)          SAVE HDR1.
         MVC   LABCOM,=A(LAHDR2)  ADVANCE COMMUTATOR.
         B     LASAVE             SAVE LABEL.
         SPACE
LAHDR2   CLC   =C'HDR2',0(2)
         BNE   LASTOP
         MVC   HDR2,0(2)          SAVE HDR2.
         MVC   LABCOM,=A(LADATA)  DATA FOLLOWS NEXT TAPE MARK.
         B     LASAVOFF           SAVE LABEL, OPEN LABEL SWITCH.
         SPACE
LADATA   MVC   LABCOM,=A(LAEOF1)  ADVANCE COMMUTATOR.
         NI    LABELSW+1,15
         LA    R7,1               RESET OUTPUT BLOCK COUNT.
         B     LEP6               RETURN TO MAIN LOOP.
         SPACE
LAEOF1   CLC   =C'EOF1',0(2)
         BNE   LASTOP
         MVC   LABCOM,=A(LAHDR1)  ADVANCE COMMUTATOR.
         UNPK  27(4,2),VOLSEQNO   PUT VOL. SEQ. NO. INTO LABEL
         OI    30(2),X'F0'        FIX LAST ZONE.
         LA    R1,54(2)
         BAL   R10,BLKCNT         PUT BLOCK COUNT INTO LABEL.
         SPACE
LASAVOFF NI    LABELSW+1,15       OPEN LABEL SWITCH.
LASAVE   SAVELAB 0(2)             COPY LABEL TO POOL.
         B     LEP6               RETURN TO MAIN LOOP.
         SPACE
LASTOP   OI    FLAGS,2            SET LABELS-OFF FLAG.
         NI    LABELSW+1,15       OPEN LABEL SWITCH.
         B     LEP6               RETURN TO MAIN LOOP.
         SPACE
LANOTV1  MVC   INSER9,INVOL1+4
         MVC   DSN9,4(2)
LAMSG9   ASK   MSG9               INPUT VOLUME IS NOT SEQ. NO. 1.
         IF    R,LAREMO           REMOUNT
         IF    C,LAEP1            COPY
         IF    N,NEXT             NEXT
         IF    Q,STOP             QUIT
         B     LAMSG9
LAREMO   CLOSE IN
         BAL   R10,OPENIN
         B     LOOP
         SPACE
LAEOV1   CLC   =C'EOV1',0(2)
         BNE   LASTOP
         MVI   2(2),C'F'          CHANGE EOV1 TO EOF1.
         MVC   LABCOM,=A(LAEOV2)  SELECT NEXT LABEL ROUTINE.
         B     LASAVE             SAVE LABEL.
         SPACE
LAEOV2   CLC   =C'EOV2',0(2)
         BNE   LASTOP
         MVI   2(2),C'F'          CHANGE EOV2 TO EOF2.
         NI    LABELSW+1,15       OPEN LABEL SWITCH.
         B     LEP6               RETURN TO MAIN LOOP.
         SPACE
LABLP1   MVI   READ,0             RESTORE READ IOB.
         MVC   READ+17(3),=AL3(RCCW)
         MVI   WRITE,X'40'        MODIFY WRITE IOB TO REWIND.
         MVC   WRITE+17(3),=AL3(REWOUT)
         MVC   LABCOM,=A(LABLP2)  SELECT NEXT LABEL EXIT RTN
         B     LEP6               RETURN TO MAIN LOOP.
         SPACE
LABLP2   MVI   WRITE,0            RESTORE WRITE IOB.
         MVC   WRITE+17(3),=AL3(WCCW)
         NI    LABELSW+1,15       OPEN LABEL SWITCH.
         B     LEP6               RETURN TO MAIN LOOP.
         SPACE 2
INERROR  CLI   INECB,X'41'        TEST FOR PERMANENT ERROR.
         BNE   ABEND1
         TM    READ+12,2          TEST FOR UNIT CHECK.
         BZ    ABEND1
         TM    READ+3,X'80'       TEST NOISE FLAG.
         BZ    ABEND1
         ASK   MSG17
         B     NEXTSTOP
ABEND1   ABEND 1,DUMP             OTHER INPUT ERRORS
OUTERROR ABEND 2,DUMP
         SPACE 2
VERIFY   EQU   *                  VERIFY THE COPY.
         MVC   FTTR,OUTJFCB+118   SAVE FTTR.
         MVC   OUTJFCB+118(6),OUTVOL1+4  SPECIFY OUTPUT SERIAL NO
         TM    FLAGS,32           TEST THE BLP FLAG.
         BO    VOPEN
         MVC   INJFCB+118(6),INVOL1+4 SPECIFY INPUT SERIAL NO.
VOPEN    OPEN  (IN,,OUT),TYPE=J
         MVC   INJFCB+118(6),WTO1+10 RESTORE DUMMY INPUT SERIAL NO.
         MVC   OUTJFCB+118(6),FTTR RESTORE FTTR.
         MVI   READ,X'40'          COMMAND CHAINING
         MVI   WRITE,X'40'
         MVC   READ+17(3),=AL3(REWIN)  MODIFY IOBS TO REWIND.
         MVC   WRITE+17(3),=AL3(REWOUT)
         MVI   WCCW,2              CHANGE WRITE COMMAND TO READ.
         MVC   WCCW+6(2),RCCW+6    SET READ LENGTH FOR OUTPUT TAPE
         MVI   VSTART+1,0          SET STARTUP SWITCH.
         NI    FLAGS,X'F7'         RESET TAPE-MARK FLAG.
         SPACE
VREAD    EXCP  READ                READ INPUT TAPE.
         EXCP  WRITE               READ OUTPUT TAPE.
         WAIT  2,ECBLIST=ECBLIST
         TM    INECB,X'7F'
         BC    12,INERROR
         TM    OUTECB,X'7F'
         BC    12,OUTERROR
         CLC   READ+14(2),WRITE+14 COMPARE RECORD LENGTHS.
         BNE   VFAIL
VSTART   B     VRUN                STARTUP SWITCH
         MVI   READ,0              NO MORE COMMAND CHAINING.
         MVI   WRITE,0
         MVC   READ+17(3),=AL3(RCCW) RESTORE CCWS.
         MVC   WRITE+17(3),=AL3(WCCW)
         MVI   VSTART+1,X'F0'
         TM    FLAGS,32            TEST BLP FLAG.
         BZ    VREAD               IGNORE STANDARD VOLUME LABEL.
         SPACE
VRUN     L     R2,BLKSIZE
*        SH    R2,READ+14          REG 2 = RECORD LENGTH
*  -----    CHANGE HALFWORD ARITHMETIC TO FULLWORD.
         XC    FULLWRK2,FULLWRK2  CLEAR FULLWORK WORKAREA
         MVC   HALFWRK2(2),READ+14    UNUSED BYTES
         S     R2,FULLWRK2        FULLWORD SUBTRACTION
         BNZ   VDATA
         TM    FLAGS,8             TEST TAPE-MARK FLAG.
         BO    VERIFIED            EXIT ON 2ND. TAPE MARK.
         OI    FLAGS,8             SET TAPE-MARK FLAG.
         B     VREAD
VDATA    NI    FLAGS,X'F7'         CLEAR TAPE-MARK FLAG.
         L     3,RCCW              A BLOCK WAS READ.
         LA    3,0(3)              REG 3 = IN BLOCK POINTER
         L     4,WCCW
         LA    4,0(4)              REG 4 = OUT BLOCK POINTER
         SPACE
VCOMPARE C     2,=F'256'           REG 2 = BYTES REMAINING TO BE CHKED
         BNH   VLAST
         CLC   0(256,3),0(4)       COMPARE 256 BYTES.
         BNE   VFAIL
         S     R2,=F'256'
         LA    R3,256(R3)
         LA    R4,256(R4)
         B     VCOMPARE
         SPACE
VLAST    BCTR  R2,0                REG 2 = LENGTH CODE FOR LAST COMPARE
         EX    2,LASTCOMP
         BNE   VFAIL
         B     VREAD               GO READ THE NEXT BLOCK.
         SPACE 2
VERIFIED BAL   R10,CLOSE           DEMOUNT TAPES.
         MVI   WCCW,1              RESTORE WCCW.
         TM    FLAGS,32            TEST BLP FLAG.
         BZ    VQ1
         MVC   WTO3+10(3),INJFCB+118
WTO3     WTO   'CT      UNLABELED COPY IS IDENTICAL.'
         B     ASK11
VQ1      MVC   OUTSER2,OUTVOL1+4
         MVC   INSER2,INVOL1+4
         ASK   MSG2                LOG SUCCESSFUL COMPARISON.
         L     R2,TAPELDCB
         PUT   (2),VLINE           PRINT VERIFICATION MESSAGE.
         B     NEXTSTOP
         SPACE
VFAIL    BAL   R10,CLOSE           DEMOUNT TAPES.
         ASK   MSG3                LOG NON-COMPARISON.
         MVI   READ,0              RESTORE IOBS.
         MVI   WRITE,0
         MVC   READ+17(3),=AL3(RCCW)
         MVC   WRITE+17(3),=AL3(WCCW)
         MVI   WCCW,1              RESTORE WCCW.
         B     NEXTSTOP
         SPACE 2
NEXTSTOP IF    N,NEXT
         IF    Q,STOP              QUIT
ASK11    ASK   MSG11
         B     NEXTSTOP
         SPACE 2
NEXT     EQU   *                   START A NEW COPY OPERATION.
         BAL   R10,CLOSE           DEMOUNT TAPES.
         MVC   INSERTL+7(35),INSERTL+6   ERASE PREVIOUS NAME
         MVC   MLINE1+29(35),MLINE1+28
         MVC   MINVOLS(96),MINVOLS-1
         LA    R1,REPLY
         LA    R2,26               MAX NAME LENGTH IS 26 BYTES.
NLOOP    LA    R1,1(R1)            FIND PROGRAMMER NAME.
         CLI   0(1),C','
         BE    FOUNDNAM
         BCT   R2,NLOOP
         B     RESTART             NO NAME WAS FOUND.
FOUNDNAM S     R2,=F'1'            REG 2 = LENGTH CODE FOR NAME.
         BM    RESTART
         EX    2,MOVENAME          COPY NAME TO LINE.
         MVC   INSERTL+7(8),=C'MADE FOR'
         MVC   MLINE1+29(35),INSERTL+7
         B     RESTART
         SPACE 2
STOP     EQU   *                   TERMINATE PROCESSING.
         L     R2,TAPELDCB
         LTR   R2,R2               TEST FOR VALID DCB ADDRESS
         BZ    SQ1
         CLOSE ((2))               CLOSE TLPRINT OUTPUT DCB.
SQ1      BAL   R10,CLOSE           DEMOUNT TAPES.
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
***FIRST LEVEL SUBROUTINES  (DIRECT CALL. RETURN VIA REG 10.)
         SPACE
OPENIN   OPEN  IN,TYPE=J
         TM    IN+48,X'10'         TEST FOR SUCCESSFUL OPEN.
         BZ    OPMSG12
         MVC   LABEL(4),=CL4' '
         DO    READVOL1,IN         READ VOLUME LABEL.
OPIN1    CLC   =H'0',IOB+14        TEST LENGTH = 80 BYTES.
         BNE   OPNOVOL1
         CLC   =C'VOL1',LABEL      TEST LABEL.
         BNE   OPNOVOL1
         MVC   INVOL1,LABEL        COPY LABEL TO INVOL1.
         MVC   INSERTL,LABEL+4     COPY SERIAL NO. TO TAPEL MSG
         L     R1,MVOLAD
         MVC   0(6,1),LABEL+4
         C     R1,=A(MINVOLS+87)
         BH    OPQ1
         LA    1,7(1)
OPQ1     ST    1,MVOLAD
         OI    FLAGS,16            SET FIRST-OPEN FLAG.
         BR    R10
OPNOVOL1 TM    FLAGS,16            TEST 1ST-OPEN FLAG.
         BZ    OPMSG15             BRANCH ON FIRST OPEN ONLY.
         SPACE
OPMSG12  ASK   MSG12               ASK OPERATOR WHAT TO DO.
         IF    R,OPREMO            REMOUNT
         IF    N,NEXT              NEXT
         IF    Q,STOP              QUIT
         B     OPMSG12
         SPACE
OPMSG15  ASK   MSG15               ASK OPERATOR WHAT TO DO.
         IF    C,OPCOPY            COPY  (BLP)
         IF    R,OPREMO            REMOUNT
         IF    N,NEXT              NEXT
         IF    Q,STOP              QUIT
         B     OPMSG15
         SPACE
OPCOPY   OI    FLAGS,50            SET OPEN, LABELS-OFF, AND BLP FLAGS.
         MVI   READ,X'40'          MODIFY READ TO REWIND.
         MVC   READ+17(3),=AL3(REWIN)
         MVC   LABCOM,=A(LABLP1)   TAKE LABEL EXIT TO FIX IOBS.
         BR    R10                 RETURN TO RESTART.
         SPACE
OPREMO   CLOSE IN                  REMOUNT INPUT TAPE.
         B     OPENIN
         SPACE 2
OPENOUT  OPEN  (OUT,OUTPUT),TYPE=J
         TM    OUT+48,X'10'        TEST FOR SUCCESSFUL OPEN.
         BZ    OPMSG14
         MVC   LABEL(4),=CL4' '
         DO    READVOL1,OUT        READ VOLUME LABEL.
OPOUT1   CLC   IOB+14(2),READLAB+6 TEST FOR TAPE MARK.
         BE    OPMSG13
         CLC   =C'VOL1',LABEL      TEST LABEL.
         BNE   OPMSG13
         SPACE
OPQ7     MVC   OUTVOL1,LABEL       COPY LABEL TO OUTVOL1.
         L     R8,POOL2            REG 8 = LABEL ADDRESS IN POOL
         SAVELAB LABEL             COPY LABEL TO POOL.
         BR    R10                 RETURN.
         SPACE
OPMSG13  ASK   MSG13               ASK OPERATOR FOR SERIAL NO.
         CLI   REPLY,C' '          TEST FOR NUMBER.
         BE    OPMSG13
         MVC   LABEL(4),=C'VOL1'
         MVC   LABEL+4(6),REPLY
         MVI   LABEL+10,C' '
         MVC   LABEL+11(69),LABEL+10
         TM    FLAGS,32            TEST BLP FLAG.
         BO    OPQ7
         DO    WRITVOL1            WRITE A NEW VOLUME LABEL.
         B     OPQ7
         SPACE
OPMSG14  ASK   MSG14               ASK OPERATOR WHAT TO DO.
         IF    R,OPREMO2
         IF    N,NEXT
         IF    Q,STOP              QUIT
         B     OPMSG14
         SPACE
OPREMO2  CLOSE OUT
         B     OPENOUT
         SPACE 2
CLOSE    TM    IN+48,X'10'         CLOSE OPEN DCBS.
         BZ    CL1
         CLOSE IN
CL1      TM    OUT+48,X'10'
         BCR   12,10
         CLOSE OUT
         BR    R10
         SPACE 2
PRINTLAB EQU   *             PRINT LABEL INFORMATION FOR AN OUTPUT TAPE
         MVI   0(8),0              MARK END OF DATA.
         LA    R1,POOL2
         CALL  TLPRINT
         ST    R1,TAPELDCB         SAVE TLPRINT DCB ADDRESS.
         TM    FLAGS,1             TEST MULTI-VOL FLAG.
         BO    PLQ1
         PUT   (1),LINE            ADD LINE TO TAPEL LISTING.
         BR    R10                 RETURN.
PLQ1     PUT   (1),MLINE1          ADD MULTI-VOL LINE 1.
         L     R1,TAPELDCB
         PUT   (1),MLINE2          ADD MULTI-VOL LINE 2.
         BR    R10
         SPACE 2
BLKCNT   CVD   R7,WORK             ROUTINE TO EDIT BLOCK COUNT.
         UNPK  0(6,1),WORK+4(4)
         OI    5(1),X'F0'
         BR    R10                 RETURN.
         SPACE 4
***SECOND LEVEL SUBROUTINES  (CALLED VIA MACRO. RETURN VIA REG 9.)
         SPACE
WTOR     MVI   REPLY,C' '          ERASE PREVIOUS OPERATOR REPLY.
         MVC   REPLY+1(27),REPLY
         MVC   14(3,1),INJFCB+118  COPY ID TO MESSAGE.
         SVC   35                  WRITE MESSAGE TO OPERATOR.
         WAIT  ECB=WTORECB
         MVI   WTORECB,0
         TR    REPLY,CAPS          TRANSLATE REPLY TO CAPITALS.
         CLC   =C'ABEND',REPLY
         BCR   7,9
         ABEND 73,DUMP             OPTIONAL ABEND EXIT
         SPACE 2
EXCP     EXCP  IOB                 GENERAL PURPOSE EXCP ROUTINE
         WAIT  ECB=ECB
         TM    ECB,X'7F'
         BCR   1,9                 RETURN IF 7F.
         CLI   ECB,X'41'           TEST FOR RETURN CODE = 41.
         BNE   ABEND4
         TM    IOB+12,2            TEST FOR UNIT CHECK.
         BZ    ABEND4
         TM    IOB+3,1             TEST FOR WRONG DENSITY.
         BZ    ABEND4
         L     R15,IOB+20          DCB ADDRESS
         NI    44(15),X'3F'        RESET DCB ERROR FLAGS.
         LA    R9,0(R9)
         C     R9,=A(OPIN1)        SEE IF OPENIN CALLED.
         BNE   EXQ2
         MVC   WTO4+10(3),INJFCB+118
WTO4     WTO   'CT    INPUT NOT CORRECT DENSITY FOR UNIT'
         B     ASK11
EXQ2     C     R9,=A(OPOUT1)       SEE IF OPENOUT CALLED.
         BE    OPMSG13             WRITE A NEW LABEL.
ABEND4   ABEND 4,DUMP
         EJECT
***CONSOLE COMMUNICATIONS AREA
WTORECB  DC    F'0'                ECB FOR OPERATOR MESSAGES
REPLY    DC    CL28' '             OPERATOR REPLIES
***********************************************************************
MSG1     WTORMSG 28
         DC    C'VOLUME '
INSER1   DC    CL6' ',C' HAS BEEN COPIED TO VOLUME '
OUTSER1  DC    CL6' ',C'. REPLY NEXT, VERIFY, OR QUIT.'
MSG1E    EQU   *
***********************************************************************
MSG2     WTORMSG 28
         DC    C'VOLUME '
OUTSER2  DC    CL6' ',C' IS IDENTICAL TO VOLUME '
INSER2   DC    CL6' ',C'. REPLY NEXT OR QUIT.'
MSG2E    EQU   *
***********************************************************************
MSG3     WTORMSG 28
         DC    C'VERIFICATION FAILED. REPLY NEXT OR QUIT.'
MSG3E    EQU   *
***********************************************************************
MSG4     WTOMSG
         DC    C'VOLUME '
INSER4   DC    CL6' ',C' HAS BEEN COPIED TO VOLUME '
OUTSER4  DC    CL6' ',C'. DATA SET '
DSN4     DC    CL17' ',C' IS INCOMPLETE.'
MSG4E    EQU   *
***********************************************************************
MSG5     WTORMSG 8
         DC    C'NEED NEXT VOLUME (SEQ NO. '
VOLSEQ5  DC    CL4' ',C') OF DATA SET '
DSN5     DC    CL17' ',C' CREATED '
CRDATE5  DC    CL5' ',C'. REPLY OK OR TRUNCATE.'
MSG5E    EQU   *
***********************************************************************
MSG6     WTORMSG 28
         DC    C'DATA SET '
DSN6     DC    CL17' ',C' HAS BEEN TRUNCATED. REPLY NEXT OR QUIT.'
MSG6E    EQU   *
***********************************************************************
MSG7     WTOMSG
         DC    C'INPUT VOLUME '
INSER7   DC    CL6' ',C' IS SEQUENCE NO. '
VOLSEQ7  DC    CL4' ',C' OF DATA SET '
DSN7     DC    CL17' '
MSG7E    EQU   *
***********************************************************************
MSG8     WTOMSG
         DC    C'OUTPUT VOLUME '
OUTSER8  DC    CL6' ',C' IS SEQUENCE NO. '
VOLSEQ8  DC    CL4' ',C' OF DATA SET '
DSN8     DC    CL17' '
MSG8E    EQU   *
***********************************************************************
MSG9     WTORMSG 28
         DC    C'INPUT VOLUME '
INSER9   DC    CL6' ',C' IS NOT THE BEGINNING OF DATA SET '
DSN9     DC    CL17' ',C' REPLY REMOUNT, COPY, NEXT, OR QUIT.'
MSG9E    EQU   *
***********************************************************************
MSG10    WTORMSG 28
         DC    C'MULTI-VOLUME DATA SET '
DSN10    DC    CL17' ',C' HAS BEEN COPIED. REPLY NEXT OR QUIT.'
MSG10E   EQU   *
***********************************************************************
MSG11    WTORMSG 28
         DC    C'REPLY NEXT OR QUIT.'
MSG11E   EQU   *
***********************************************************************
MSG12    WTORMSG 28
         DC    C'UNABLE TO OPEN INPUT TAPE.'
         DC    C'REPLY REMOUNT, NEXT, OR QUIT.'
MSG12E   EQU   *
***********************************************************************
MSG13    WTORMSG 6
         DC    C'WHAT IS THE SERIAL NO. OF THE OUTPUT VOLUME?'
MSG13E   EQU   *
***********************************************************************
MSG14    WTORMSG 28
         DC    C'UNABLE TO OPEN OUTPUT TAPE. '
         DC    C'REPLY REMOUNT, NEXT, OR QUIT.'
MSG14E   EQU *
***********************************************************************
MSG15    WTORMSG 28
         DC    C'INPUT TAPE HAS NO VOLUME LABEL. '
         DC    C'REPLY COPY, REMOUNT, NEXT, OR QUIT.'
MSG15E   EQU *
***********************************************************************
MSG16    WTORMSG 28
         DC    C'UNLABELED INPUT TAPE HAS BEEN COPIED TO VOLUME '
OUTSER16 DC    CL6' ',C'. REPLY NEXT, VERIFY, OR QUIT.'
MSG16E   EQU   *
***********************************************************************
MSG17    WTORMSG 28
         DC    C'UNABLE TO READ NOISY INPUT TAPE. YOU MAY TRY AGAIN.'
         DC    C' REPLY NEXT OR QUIT.'
MSG17E   EQU   *
***********************************************************************
         SPACE 2
***MESSAGES ADDED TO TAPEL LISTING
***********************************************************************
LINE     DC    C'-THIS IS A COPY OF TAPE NO. '
INSERTL  DC    CL6' ',C' MADE FOR '
NAME     DC    CL26' ',CL50' '
***********************************************************************
VLINE    DC    CL120'0THE COPY HAS BEEN VERIFIED.'
***********************************************************************
MLINE1   DC    C'-THIS IS A MULTI-VOLUME COPY MADE FOR '
MNAME    DC    CL26' ',CL56' '
***********************************************************************
MLINE2   DC    C'0THE INPUT VOLUMES WERE '
MINVOLS  DC    CL96' '
***********************************************************************
         SPACE 4
***TAPE I/O AREA
FTTR     DC    XL6'0'           TTR OF OUT JFCB
IN       DCB   MACRF=E,CENDA=WE,XENDA=WD,EXLST=INEXLST,DDNAME=IN
INEXLST  DC    X'87',AL3(INJFCB)
SAVE0001 DC    18F'0'           SAVE AREA
INJFCB   DC    44F'0'
INECB    DC    F'0'
READ     DC    A(0,INECB,0,0,RCCW,IN,0,0)      MAIN READ IOB
REWIN    CCW   7,0,X'60',1     REWIND.
RCCW     CCW   2,0,X'20',0     READ A DATA BLOCK.
OUT      DCB   MACRF=E,CENDA=WE,XENDA=WD,EXLST=OUTEXLST,DDNAME=OUT
OUTEXLST DC    X'87',AL3(OUTJFCB)
OUTJFCB  DC    44F'0'
OUTECB   DC    F'0'
WRITE    DC    A(0,OUTECB,0,0,WCCW,OUT,0,0)    MAIN WRITE IOB
REWOUT   CCW   7,0,X'60',1     REWIND.
WCCW     CCW   1,0,0,0         WRITE A DATA BLOCK.
ECBLIST  DC    A(INECB),X'80',AL3(OUTECB)
ECB      DC    F'0'             ECB FOR EXCP SUBROUTINE
IOB      DC    X'42000000',A(ECB),6F'0'   IOB FOR EXCP ROUTINE
MARK1    CCW   7,0,X'60',1     REWIND
MARK     CCW   X'1F',0,X'60',1      WRITE A TAPE MARK.
         CCW   X'C3',0,X'20',1      NO-OP TO ENABLE ERROR RECOVERY
READVOL1 CCW   7,0,X'60',1          REWIND.
READLAB  CCW   2,LABEL,X'20',80     READ A LABEL.
SKIP     CCW   X'3F',0,X'20',1 SKIP A TAPE MARK.
WRITHDR1 CCW   1,HDR1,0,80     WRITE HDR1.
WRITHDR2 CCW   1,HDR2,0,80     WRITE HDR2.
WRITVOL1 CCW   7,0,X'60',1     REWIND.
WRITELAB CCW   1,LABEL,0,80    WRITE A LABEL.
        SPACE 2
***LABELS
INVOL1   DC    CL80' '          INPUT VOLUME LABEL
OUTVOL1  DC    CL80' '          OUTPUT VOLUME LABEL
HDR1     DC    CL80' '          CURRENT FIRST HEADER LABEL
HDR2     DC    CL80' '          CURRENT SECOND HEADER LABEL
LABEL    DC    CL80' '          WORK AREA FOR LABELS
SAVE     DC    CL80' '          SAVE AREA FOR LABELS
        SPACE 2
***MISCELLANEOUS DATA
         DS    0D               START ON DWORD BOUNDARY
FULLWRK1 DS    0F               FULLWORD WORK AREA
         DC    H'0'
HALFWRK1 DC    H'0'             HALFWORD WORK AREA
FULLWRK2 DS    0F               FULLWORD WORK AREA
         DC    H'0'
HALFWRK2 DC    H'0'             HALFWORD WORK AREA
BLKSIZE  DC    F'65535'         MAX BLOCK SIZE                SBG 03/00
         CAPS                TRANSLATE TABLE TO MAKE CAPITALS
FILENO   DC    PL3'1'           PHYSICAL OUTPUT FILE NO.
FLAGS    DC    X'0'             1 = MULTI-VOL       2 = LABELS-OFF
*                            4 = TRUNCATE        8 = TAPE-MARK
*                            16 = OPEN           32 = BLP
LABCOM   DC    F'0'             ADDRESS OF NEXT LABEL ROUTINE
LASTCOMP CLC   0(0,3),0(4)
MOVENAME MVC   NAME(0),1(1)
MVOLAD   DC    F'0'             ADDRESS FOR NEXT MULTI-VOL SERIAL NO
POOL1    DC    F'0'             ADDRESS OF BUFFER POOL
POOL2    DC    F'0'             ADDRESS OF LABEL POOL
POOL2END DC    F'0'             ADDRESS OF LAST LABEL SLOT IN POOL2
TAPELDCB DC    F'0'             ADDRESS OF TLPRINT OUTPUT DCB
VOLSEQNO DC    PL3'1'           OUTPUT VOLUME SEQUENCE NO.
WORK     DC    D'0'
         LTORG
         END
