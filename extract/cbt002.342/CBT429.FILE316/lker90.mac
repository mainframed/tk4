         TITLE '   L K E R 9 0      '
*$DOC@*****************************************************************
*                                                                     *
*  LKER90/LKER90S - INVOKE LINKAGE EDITOR, ROTATE THE LISTING         *
*                                                                     *
***********************************************************************
*
*  WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*  INSTALLATION. AIR FORCE DATA SERVICES CENTER, THE PENTAGON.
*  DATE WRITTEN. JUNE 9 1980.
*  DATE UPDATED. MAY 25 1982.
*  ATTRIBUTES. RE-ENTRANT.
*
*  THIS PROGRAM INVOKES THE LINKAGE EDITOR, AND THEN INVOKES A
*  PROGRAM WHICH MODIFIES THE LISTING FOR A 90-DEGREE ROTATION
*  CHARACTER SET, 12 LINES PER INCH, ON A 3800 PRINTER.
*  TWO PAGES WILL FIT ON ONE PHYSICAL PAGE.
*
*  THE LINKAGE EDITOR PRINT OUTPUT IS DIRECTED TO AN INTERMEDIATE
*  SYSUT9 FILE.  AFTER THE LINKEDIT ENDS, THAT FILE IS READ
*  BY THE ROTATE PROGRAM, ROTATED, AND WRITTEN TO DDNAME 'ROTATE'.
*
*  BEFORE CALLING THE ROTATE PROGRAM, A CHECK IS MADE TO SEE IF
*  DDNAME 'ROTATE' IS ABSENT OR DUMMY, AND IF SO, THEN THE ROTATE
*  PROGRAM IS NOT CALLED AND THIS PROGRAM COPIES SYSUT9 TO SYSPRINT.
*
*  THERE ARE 2 ENTRY POINTS,
*  LKER90 - FOR THE P38R90B PROGRAM (2 PAGES PER SHEET)
*  LKER90S - FOR THE P38R90 PROGRAM (SQUISHED PAGES)
*
*  DDNAMES REQUIRED:
*     SAME DDNAMES AS LINKAGE EDITOR REQUIRES, EXCEPT SYSPRINT.
*        NAMELY - SYSLIN, SYSLMOD, SYSUT1
*        AND OPTIONALLY SYSLIB.
*     PLUS 2 NEW DDNAMES -
*     SYSUT9 - WORKSPACE WHERE LINKAGE EDITOR WILL WRITE SYSPRINT
*              AND THE ROTATE PROGRAM WILL READ IT BACK IN.
*     ROTATE - ROTATED PRINT OUTPUT, USUALLY ALLOCATED TO SYSOUT
*              FOR A 3800 PRINTER WITH SPECIAL FCB AND CHARS.
*     IF ROTATE DD IS DUMMY OR ABSENT, THEN SYSPRINT IS REQUIRED.
*
*  CHANGES -
*     01OCT80 - TEST FOR ROTATE DD ABSENT OR DUMMY, AND
*               COPY TO SYSPRINT IF SO.
*     25MAY82 - INVOKE A DIFFERENT ROTATER PROGRAM, NAMED
*               'ROTATER', INSTEAD OF 'P38R90'. THE SQUISH OPTION
*               FOR 'ROTATER' IS INDICATED IN THE PARM FIELD
*               RATHER THAN ENTRY POINT.
*
*  PRIOR TO THE EXISTENCE OF THIS PROGRAM, THE FOLLOWING JCL
*  WAS USED:
*   //ASM EXEC PGM=IEWL
*   //SYSPRINT DD  UNIT=SYSDA,SPACE=(TRK,100),
*   //             DSN=&&PRINT,DISP=(NEW,PASS)
*   //SYSLMOD  DD  DSN=SYS1.LOADLIB,DISP=SHR
*   //SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,100)
*   //SYSLIN   DD  DSN=OBJ,DISP=SHR
*   //ROTATE  EXEC PGM=ROTATER
*   //SYSUT1   DD  DSN=&&PRINT,DISP=(OLD,DELETE)
*   //SYSUT2   DD  SYSOUT=S,CHARS=TURN,FCB=LN12
*
*  WITH THIS PROGRAM, THE 2 STEPS CAN BE COMBINED INTO THE FOLLOWING:
*   //ASM EXEC PGM=LKER90
*   //SYSUT9   DD  UNIT=SYSDA,SPACE=(TRK,100)
*   //SYSLMOD  DD  DSN=SYS1.LOADLIB,DISP=SHR
*   //SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,100)
*   //SYSLIN   DD  DSN=OBJ,DISP=SHR
*   //ROTATE   DD  SYSOUT=S,CHARS=TURN,FCB=LN12
*
*$DOC$*****************************************************************
         EJECT
LKER90   START
         USING *,R15
         B     @PROLOG
         DC    AL1(11),CL11'LKER90'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
         SPACE
         ENTRY LKER90S
         USING *,R15
LKER90S  STM   14,12,12(R13)       SAVE REGISTERS
         LA    R3,1                INDICATE ALTERNATE ENTRY
         SH    R15,@ENTRYB         ADJUST BASE ADDRESS
         USING LKER90,R15          ADJUST ASSEMBLER TO NEW BASE
         B     @PROLOGE            JUMP IN
@ENTRYB  DC    AL2(LKER90S-LKER90) OFFSET FROM TOP
         SPACE
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         SLR   R3,R3               INDICATE PRIMARY ENTRY
@PROLOGE LR    R12,R15             LOAD BASE REGISTER
         USING LKER90,R12
         DROP  R15
         LR    R2,R1               PARM POINTER
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         XC    0(256,R1),0(R1)
         XC    256(@DATAL-256,R1),256(R1)
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREAS
         ST    R9,8(,R13)          CHAIN SAVEAREAS
         LR    R13,R9              UPDATE SAVEAREA POINTER
         EJECT
************************************************************
*                                                          *
*        DETERMINE SQUISH OPTION                           *
*                                                          *
************************************************************
         SPACE
         MVC   LKENAME,=CL8'IEWL'
         MVC   PGMNAME,=CL8'ROTATER'
         MVI   SQV,SQY             SET SQUISH ON
         LTR   R3,R3               PRIMARY ENTRY
         BNZ   *+8                 NO, SKIP NEXT INSTR
         MVI   SQV,SQN             YES, SET SQUISH OFF
         SPACE
************************************************************
*                                                          *
*        SET UP PARM LISTS                                 *
*                                                          *
************************************************************
         SPACE
         L     R2,0(,R2)           POINT TO PARM
         LA    R2,0(,R2)           SET OFF HIGH ORDER BIT
         ST    R2,PARM1PTR         STORE ADDRESS OF PARM
         LA    R0,DDNL1            POINT TO DDNAME LIST
         ST    R0,PARM1PTR+4       STORE ADDRESS OF DD LIST
         OI    PARM1PTR+4,X'80'    INDICATE END OF ADDRESS LIST
         LA    R0,PARM2LEN         POINT TO ROTATE PARM
         ST    R0,PARM2PTR         STORE ADDRESS OF PARM
         OI    PARM2PTR+0,X'80'    INDICATE END OF ADDRESS LIST
         EJECT
************************************************************
*                                                          *
*        DDNAME LIST                                       *
*                                                          *
************************************************************
         SPACE
*                      LINKAGE EDITOR
*                      --------------
*                   1  SYSLIN
*                   2  TEMPNAME
*                   3  SYSLMOD
*                   4  SYSLIB
*                   5  .
*                   6  SYSPRINT
*                   7  .
*                   8  SYSUT1
*                   9  .
*                  10  .
*                  11  .
*                  12  SYSTERM
         SPACE
************************************************************
*                                                          *
*        CHANGE LINKAGE EDITOR DDNAMES                     *
*                                                          *
************************************************************
         SPACE
         MVC   DDNL1(2),=AL2(09*8) LENGTH OF DDNAMES
         LA    R1,DDNL1+2
         XC    0(09*8,R1),0(R1)
         MVC   (6-1)*8(8,R1),=CL8'SYSUT9' SYSPRINT NOW SYSUT9
         SPACE
************************************************************
*                                                          *
*        CHANGE ROTATE DDNAMES                             *
*                                                          *
************************************************************
         SPACE
         LA    R0,17               LENGTH OF PARM
         STH   R0,PARM2LEN
         MVC   PARM2+0(8),=CL8'SYSUT9' INPUT DDNAME
         MVC   PARM2+8(8),ROTATEDD     OUTPUT DDNAME
         EJECT
************************************************************
*                                                          *
*        CALL THE LINKAGE EDITOR                           *
*                                                          *
************************************************************
         SPACE
         LA    R1,PARM1PTR
         SPACE
         LINK  EPLOC=LKENAME,SF=(E,LINKAREA)
         SPACE
         LR    R2,R15              SAVE LINKEDIT RETURN CODE
         SPACE
************************************************************
*                                                          *
*        IF ROTATE IS DUMMY, COPY SYSUT9 TO SYSPRINT       *
*                                                          *
************************************************************
         SPACE
         DEVTYPE ROTATEDD,DEVDATA
         LTR   R15,R15             IS ROTATE DD PRESENT
         BNZ   COPY                NO, BRANCH TO COPY
         NC    DEVDATA(8),DEVDATA  IS ROTATE DD DUMMY
         BNZ   ROTATE              NO, BRANCH TO ROTATE
COPY     EQU   *
         LA    R3,UT9W
         LA    R4,PRTW
UT9R     EQU   3                   REGISTER CONTAINING DCB ADDRESS
PRTR     EQU   4                   REGISTER CONTAINING DCB ADDRESS
         MVC   0(UT9L,UT9R),UT9    COPY DCB TO KEEP CODE RE-ENTRANT
         MVC   0(PRTL,PRTR),PRT    COPY DCB TO KEEP CODE RE-ENTRANT
         MVI   OPENW,X'80'         ONLY ONE DCB IN OPEN/CLOSE LIST
         OPEN  ((UT9R),INPUT),MF=(E,OPENW)
         OPEN  ((PRTR),OUTPUT),MF=(E,OPENW)
COPYREAD EQU   *
         GET   (UT9R)
         LR    R0,R1               GET RECORD ADDRESS INTO R0
         PUT   (PRTR),(0)
         B     COPYREAD
COPYEOD  EQU   *
         CLOSE ((PRTR)),MF=(E,CLOSEW)
         CLOSE ((UT9R)),MF=(E,CLOSEW)
         B     EXIT
         SPACE
PRTEXIT  CLI   RECFM(R4),0             IS RECFM SPECIFIED
         BNE   *+10                    YES, SKIP NEXT INST
         MVC   RECFM(1,R4),RECFM(R3)   NO, USE INPUT RECFM
         NC    LRECL(2,R4),LRECL(R4)   IS LRECL SPECIFIED
         BNZ   *+10
         MVC   LRECL(2,R4),LRECL(R3)   NO, USE INPUT LRECL
         NC    BLKSI(2,R4),BLKSI(R4)   IS BLKSI SPECIFIED
         BNZ   *+10
         MVC   BLKSI(2,R4),BLKSI(R3)   NO, USE INPUT BLKSI
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CALL THE ROTATER                                  *
*                                                          *
************************************************************
         SPACE
ROTATE   LA    R1,PARM2PTR
         SPACE
         LINK  EPLOC=PGMNAME,SF=(E,LINKAREA)
         SPACE
EXIT     LR    R15,R2              RESTORE LINKEDIT RETURN CODE
         LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         LR    R2,R15              SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(R13)        RESTORE REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    14                  RETURN
         EJECT
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
ROTATEDD DC    CL8'ROTATE'
         PRINT NOGEN
UT9      DCB   DDNAME=SYSUT9,DSORG=PS,MACRF=(GL),EODAD=COPYEOD
UT9L     EQU   *-UT9
PRT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),EXLST=EXLST
PRTL     EQU   *-PRT
         PRINT GEN
EXLST    DC    0F'0',X'85',AL3(PRTEXIT)
RECFM    EQU   36                  OFFSET INTO DCB
BLKSI    EQU   62                  OFFSET INTO DCB
LRECL    EQU   82                  OFFSET INTO DCB
         DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*        MAP OF GETMAINED WORKAREA                         *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
LINKAREA DS    2F
LKENAME  DS    CL8
PGMNAME  DS    CL8
PARM1PTR DS    2F
         DS    0D
         DS    3H
DDNL1    DS    H
         DS    09CL8               DDNAMES
PARM2PTR DS    2F
PARM2LEN DS    H
PARM2    DS    02CL8               DDNAMES
SQV      DS    C
SQY      EQU   C'S'
SQN      EQU   C' '
DEVDATA  DS    2F
OPENW    DS    0F                  OPEN MF=L
CLOSEW   DS    F                   CLOSE MF=L
UT9W     DS    0F,(UT9L)X          DCB
PRTW     DS    0F,(PRTL)X          DCB
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
