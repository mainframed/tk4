         TITLE 'JOBCARD - BUILD A 2ISG JOB CARD'
*---------------------------------------------------------------------*
*        THIS PROGRAM BUILDS A "2ISG"  JOBCARD FROM THE ACCOUNTING    *
*        INFORMATION IN THE JCT AND ACT. THE JOBCARD IS OUTPUT TO     *
*        THE DDCARD "FILEOUT".                                        *
*                                   JIM MARSHALL                      *
*                                                                     *
*        NOTE: THIS CAN SERVE AS AN EXAMPLE OF HOW TO RUN CONTROL     *
*              BLOCKS TO GET TO THE 'ACT' (ACCOUNTING INFO).          *
*---------------------------------------------------------------------*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
JOBCARD  AMODE 24
JOBCARD  RMODE 24
JOBCARD  CSECT
         SAVE  (14,12),,JOBCARD_2ISG_&SYSDATE &SYSTIME
         LR    R12,R15
         USING JOBCARD,R12
         LA    R11,SAVE
         ST    R13,SAVE+4
         ST    R11,8(R13)
         LR    R13,R11
         SPACE
*-------------------------------------------------------------------*
*        DIG WAY DOWN DEEP IN MEMORY TO GET ADDR OF CVT AT X'10'
*-------------------------------------------------------------------*
         SPACE
         L     R4,CVTPTR               R4 = ADDRESS OF CVT
         USING CVT,R4                  ADDR TO CVT
         SPACE
*------------------------------------------------------------------*
*        NOW WE GET THE ADDRESS OF THE DOUBLE WORD THAT HAS THE
*        ADDRESSES OF NEW TCB & CURRENT TCB (1ST-WORD&2ND-WORD)
*------------------------------------------------------------------*
         SPACE
         L     R4,CVTTCBP              R4 = ADDRESS OF DOUBLEWORD
         DROP  R4
*------------------------------------------------------------------*
*        POINT TO THE 2ND WORD (CURRENT TCB)
*------------------------------------------------------------------*
         SPACE
         L     R4,4(,R4)               R4 = ADDRESS OF CURRENT TCB
         L     R5,12(,R4)              R5 = ADDRESS OF TIOT
         SPACE
*------------------------------------------------------------------*
*        NOW WE GO GET THE CURENT JOBSTEP TCB
*------------------------------------------------------------------*
         SPACE
         USING TCB,R4                  ADDR TO TCB
         L     R4,TCBJSTCB             R4 = ADDRESS OF TCB(JOBSTEP)
         DROP  R4
         SPACE
*------------------------------------------------------------------*
*        NOW IN THIS TCB WE WANT TO GET THE ADDRESS OF THE JSCB
*------------------------------------------------------------------*
         SPACE
         USING TCB,R4                  ADDR TO TCB
         L     R4,TCBJSCB              R4 = ADDRESS OF JSCB
         DROP  R4
         SPACE
*-----------------------------------------------------------------*
*        NOW FROM THE JSCB WE NEED THE ADDRESS OF THE JCT
*-----------------------------------------------------------------*
         SPACE
         USING IEZJSCB,R4              ADDR TO JSCB
         L     R4,JSCBJCT              R4 = ADDRESS OF JCT-16
         DROP  R4
         SPACE
*----------------------------------------------------------------*
*        HERE IS WHERE I NEED TO DO SOME RESEARCH IN MIRROR USE.
*        SO I WILL LEAVE THE CODE AS IS FOR THE PRESENT.
*----------------------------------------------------------------*
         SPACE
         LA    R4,X'10'(0,R4)          R4 = ADDRESS OF JCT
         USING JCTDSKAD,R4             ADDR TO JCT
         L     R5,JCTACTAD             R5 = ADDRESS OF ACT-16
         SPACE
*----------------------------------------------------------------*
*        THE ADDRESS WE GOT IN R5 ABOVE IS LEFT JUSTIFIED, SO
*        WE MUST MOVE THE ADDRESS OVER IN THE REGISTER 8 BITS
*----------------------------------------------------------------*
         SPACE
         SRL   R5,8                    RIGHT JUSTIFY ADDR
         LA    R5,X'10'(0,R5)          R5 = ADDRESS OF ACT
         USING ACTDSKAD,R5             ADDR TO ACT
         SPACE
*----------------------------------------------------------------*
*        NOW THAT WE HAVE ADDRESSABILITY TO EVERYTHING, BUILD
*        JOB CARDS
*----------------------------------------------------------------*
         SPACE
         MVC   JOBNAME(8),JCTJNAME     SET UP JOBNAME
         MVI   JOBNAME+7,C'$'
         MVC   NOTIFY(8),JCTJNAME      SET UP WHO TO NOTIFY
         SPACE
*----------------------------------------------------------------*
*       NOW WE NEED TO MOVE IN THE VARIABLE LENGTH ACCT INFO
*----------------------------------------------------------------*
         SPACE
         LA    R3,ACCT#               GET POINTER TO OUTPUT AREA
         SR    R2,R2                  CLEAR R2
         IC    R2,ACTACCNT            GET LENGTH FIELD
         LR    R1,R2                  SAVE R2
         BCTR  R2,0                   SET UP FOR 'EX'
         EX    R2,MOVE                MOVE THE INFO
         A     R3,=F'1'               ACCOUNT FOR LENGTH FIELD
         AR    R3,R2                  POINT TO LAST ACCT BYTE
         SPACE
*----------------------------------------------------------------*
*        HAVE BLANKS AT THE END OF THE ACCT DATA AND WE NEED TO
*        FILTER THOSE OUT.
*----------------------------------------------------------------*
         SPACE
ACLOOP1  EQU   *
         CLI   0(R3),C' '             IS IT A BLANK
         BNE   OK1                    FOUND END
         S     R3,=F'1'               BACK UP ONE BYTE
         B     ACLOOP1                LOOP
         SPACE
OK1      EQU   *
         A     R3,=F'1'               POINT TO NEXT AREA
         MVC   0(8,R3),=CL8',,,''U'','''
         A     R3,=F'8'               MOVE ALONG 7 BYTES
         MVC   0(7,R3),NJESYST        MOVE IN USERID
         A     R3,=F'7'               MOVE ALONG 7 BYTES
         MVC   0(4,R3),=CL4'''),'''
         A     R3,=F'4'               MOVE ALONG 4 BYTES
         MVC   0(7,R3),JCTJNAME       MOVE IN USERID
         A     R3,=F'7'               MOVE ALONG 7 BYTES
         MVC   0(10,R3),=CL10''',CLASS=A,'
         SPACE
*----------------------------------------------------------------*
*        NOW PUT OUT THE CARDS TO A FILE
*----------------------------------------------------------------*
         SPACE
JOBDONE  DS    0H
         OPEN  (OUTDCB,OUTPUT)
         PUT   OUTDCB,JCARD1
         PUT   OUTDCB,JCARD1A
         PUT   OUTDCB,JCARD2
         CLOSE (OUTDCB)
         L     R13,SAVE+4
         RETURN (14,12),RC=0
SAVE     DC    18F'0'                  SAVE AREA
MOVE     MVC   0(0,R3),ACTACCNT+1
NJESYST  DC    CL8'$NJESY$'
         SPACE
JCARD1   DS    0CL80
         DC    CL2'//'
JOBNAME  DC    CL8'JOBNAMEZ'
         DC    CL6' JOB ('
ACCT#    DC    CL19' '
         DC    CL45' '
         SPACE
JCARD1A  DS    0CL80
         DC    CL80'//     MSGCLASS=S,MSGLEVEL=(0,0),TIME=1'
         SPACE
JCARD2   DS    0CL80
         DC    CL10'/*NOTIFY  '
NOTIFY   DC    CL8'USERIDXX'
         DC    CL62' '
         DC    CL8'ACCTHERE'
THEACCT  DC    CL50' '
OUTDCB   DCB   DDNAME=FILEOUT,MACRF=PM,RECFM=FB,LRECL=80,DSORG=PS
         SPACE
         LTORG
         EJECT
         CVT   LIST=YES,DSECT=YES
         EJECT
         IKJTCB LIST=YES,DSECT=YES
         EJECT
         IEZJSCB
         EJECT
         IEFAJCTB
         SPACE 2
         END   JOBCARD
