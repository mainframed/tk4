EXIT006  TITLE 'JES2/SP3 EXIT #6 - COMMENTS'
* * * * * * * * * *  NOTES ON THE NEW JES2  * * ** * * * * * ** * * *
* 1.  THE JESPARMS THAT CORRESPOND TO THIS EXIT ARE:                  *
*       . . .                                                         *
*       >LOAD EXIT006                                                 *
*       >EXIT006 (INTTEXT),ENABLE,TRACE=NO                            *
*                                                                     *
* 2.  THE ORDER OF THE DSECTS IN THE PREAMBLE ASSEMBLY  CAN BE        *
*     SIGNIFICANT.  ALSO THE REGISTER CONTENTS ARE AS FOLLOWS UPON    *
*     ENTRY TO THIS EXIT:                                             *
*         R0 = CODE INDICATING STATUS OF CONVERSION PROCESSING.       *
*              0 => JCL HAS BEEN CONVERTED TO INTERNAL TEXT.          *
*              4 => ALL JCL HAS BEEN CONVERTED.                       *
*         R1 = ADDRESS OF 2 WORD PARAMETER LIST.                      *
*              WORD 1 => 16 BYTE 'CNVWORK' AREA, ALWAYS BINARY ZEROS. *
*              WORD 2 => SINGLE INTERNAL TEXT IMAGE IF R0=0.          *
*                        CONVERTER'S RETURN CODE IF R0=4.             *
*        R2-R7 = N/A                                                  *
*        R8  = @PCE                                                   *
*        R9  = N/A                                                    *
*        R10 = @JCT                                                   *
*        R11 = @HCT                                                   *
*        R12 = N/A                                                    *
*        R13 = OS SAVE AREA                                           *
*        R14 = RETURN ADDRESS                                         *
*        R15 = ENTRY ADDRESS                                          *
*                                                                     *
*  3.  THIS EXIT RUNS AS A JES2 SUBTASK.  THEREFORE USE OS MACROS!    *
*                                                                     *
*  4.  JES2 INTERNAL TEXT CAN BE PRINTED EASILY THROUGH THE TRACE     *
*      FACILITY BUILT INTO THIS LEVEL OF JES2.  TO DISPLAY THE        *
*      BEFORE AND AFTER IMAGES OF THE CONVERTED TEXT, SIMPLY ENTER    *
*      THE FOLLOWING FROM THE CONSOLE:                                *
*               A.  $TEXIT006,ENABLE,TRACE=YES                        *
*               B.  $TRACE,ON,P=Y,C=A,ID=13                           *
*                                                                     *
*  5.  TO ADD ANOTHER CLASS TO THIS EXIT, SIMPLY DO THE FOLLOWING:    *
*                                                                     *
*      ==>  ADD AN 'ORG' STATEMENT AND 'DC' STATEMENT TO              *
*           THE CLASSES TABLE.                                        *
*                                                                     *
*           EXAMPLE:  TO ADD A JOB CLASS 'N' WITH TIME=1  ==>         *
*                       CLASSES . . .                                 *
*                                  ORG    CLASSES+C'N'                *
*                                  DC     AL1(ONEMIN-TIMES)           *
*                                                                     *
*                                                                     *
*                    *   *   *   *   *                                *
*                    CAPT JIM CARTER                                  *
*                    AIR FORCE DATA SERVICES CENTER                   *
*                    IBM OPERATING SYSTEMS SUPPORT BRANCH             *
*                    PENTAGON, CMIS, ROOM 1C1039                      *
*                    WASHINGTON  D.C.      20330                      *
*                    CALL: 202/695-1274                               *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         TITLE 'JES2/SP3 EXIT #6 - MIT CSECT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                  P R E A M B L E  -  E X I T 6                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT OFF
         $SYSPARM (OFF,NOGEN,NODATA,NO,NO)   DOCUMENTATION OPTIONS
         COPY  $HASPGEN                 COPY HASPGEN PARAMETERS
         PRINT ON,NOGEN
         $SYSPARM (ON,GEN,DATA,YES,YES)    DOCUMENTATION OPTIONS
MITABLE  $MODULE                        CREATE THE MIT CSECT
         $BUFFER  DOC=YES               REQ'D BY $GETBUF, $FREEBUF,
*                                       AND MUST PRECEDE $JCT
         $JCT     DOC=YES               MUST PRECEDE $CAT
         $JQE     DOC=YES               MUST PRECEDE $HCT
         $PCE     DOC=YES               MUST PRECEDE $HCT
         $CAT     DOC=YES               MUST PRECEDE $HCT
         $DCT     DOC=YES               NORMALLY REQUIRED FOR EXIT #1
         $HCT     DOC=YES               REQ'D BY $SAVE, $RETURN...
         $XIT     DOC=YES               REQ'D BY
         $TEXT    DOC=YES               REQ'D BY
         $KEYS    DOC=YES               REQ'D BY
         $PDDB    DOC=YES               MUST PRECEDE $IOT
         $TAB     DOC=YES               MUST PRECEDE $IOT
         $IOT     DOC=YES
         $JOE     DOC=YES               REQ'D TO GET SYSOUT CLASS
         $MIT     DOC=YES               REQ'D BY $MODEND
         $PPPWORK DOC=YES               REQ'D TO FIND JOE
         PRINT ON,NOGEN
         TITLE 'JES2/SP3 EXIT #6 - INTTEXT CSECT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*         BEGIN INT TEXT  CSECT                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
INTTEXT  $ENTRY CSECT=YES,BASE=R12      EXIT ROUTINE ENTRY POINT
         SAVE   (14,12)
         LR     R12,R15                 LOAD BASE REGISTER
         USING  INTTEXT,R12
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   WHAT IS THE STATUS OF CONVERSION PROCESSING ?                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LTR    R0,R0
         BNZ    RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   IS THIS THE JOB CARD IMAGE ?  BYTE 2 MUST = X'01' !             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         L      R9,4(R1)
         L      R6,4(R1)
         CLI    2(R9),X'01'
         BNE    RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   FIND 'END KEY' SO THAT TIME CAN BE ADDED TO END OF TEXT         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LA     R7,1
         CLI    12(R9),X'FE'            X'FE' = END KEY
         BE     *+10
         AR     R9,R7
         B      *-10
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   MATCH JOB CLASS WITH RESPECTIVE TIME FROM TABLE AND MOVE        *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LA     R2,0                    INITIALIZE R2
         LA     R4,TIMES                R4 = BEGINNING @ OF TIMES
         TRT    JCTJCLAS,CLASSES        R2 = TIMES TABLE DISPL'T
         BZ     STCORTSU                CHECK FOR STC OR TSU JOB
         AR     R4,R2                   ADD DISP'T TO BEGINNING @
NOTBATCH MVC    TIME+3(4),0(R4)         MOVE TIME VALUE TO LITERAL
         MVC    12(8,R9),TIME           MOVE LITERAL TO TEXT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   INCREASE THE LENGTH OF THE CONVERTED TEXT BY 7 FOR TIME         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         ICM    R2,B'0011',0(R6)        LOAD R2 WITH LENGTH OF TEXT
         LA     R2,7(R2)                ADD 7 TO LENGTH OF TEXT
         STCM   R2,B'0011',0(R6)        STORE INCREASED LENGTH BACK
RETURN   RETURN (14,12),RC=0
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   'JCLJCLAS' BLANK, SO CHECK FOR STC OR TSU IN 'JCTJOBFL'         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
STCORTSU TM     JCTJOBFL,JCTTSUJB       TSO JOB ?
         BNO    *+12                    NO, CHECK FOR STC JOB
         LA     R4,FIVMIN               GIVE TSO FIVE MINUTES
         B      NOTBATCH                ADD TO JOB CARD
         TM     JCTJOBFL,JCTSTCJB       STC JOB ?
         BNO    RETURN                  NO, DO NOT ADD 'TIME='
         LA     R4,MAXMIN               GIVE STC 1439 MINUTES
         B      NOTBATCH                ADD TO JOB CARD
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                  C O N S T A N T S                                *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TIME     DC       X'A90104'
         DC       C'????'
         DC       X'FE'
TIMES    DS       0D
ONEMIN   DC       C'0001'
TWOMIN   DC       C'0002'
FIVMIN   DC       C'0005'
TENMIN   DC       C'0010'
THRMIN   DC       C'0030'
MAXMIN   DC       C'1439'
NOTIME   DC       C'1440'
CLASSES  DC       XL256'00'
         ORG      CLASSES+C'A'              CLASS A = 2
         DC       AL1(TWOMIN-TIMES)
         ORG      CLASSES+C'B'              CLASS B = 2
         DC       AL1(TWOMIN-TIMES)
         ORG      CLASSES+C'C'              CLASS C = 10
         DC       AL1(TENMIN-TIMES)
         ORG      CLASSES+C'D'              CLASS D = 30
         DC       AL1(THRMIN-TIMES)
         ORG      CLASSES+C'E'              CLASS E = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'J'              CLASS J = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'K'              CLASS K = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'L'              CLASS L = 1440
         DC       AL1(NOTIME-TIMES)
         ORG      CLASSES+C'P'              CLASS P = 2
         DC       AL1(TWOMIN-TIMES)
         ORG      CLASSES+C'Q'              CLASS Q = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'S'              CLASS S = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'U'              CLASS U = 2
         DC       AL1(TWOMIN-TIMES)
         ORG      CLASSES+C'V'              CLASS V = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'X'              CLASS X = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'Y'              CLASS Y = 1439
         DC       AL1(MAXMIN-TIMES)
         ORG      CLASSES+C'Z'              CLASS Z = 1440
         DC       AL1(NOTIME-TIMES)
         ORG
         LTORG
         $MODEND
         END
