         TITLE ' T A N A L '
*---------------------------------------------------------------------*
*        THIS IS TANAL, A PROGRAM TO ANALYSE TAPE VOLUMES.            *
*                                                                     *
* UTILITIES - IGG019WE - APPENDAGE TO PREVENT ERROR AT EOF            *
*             MSGWRITE - SUBROUTINE CALLED FROM MSG MACRO             *
*             MACROS   - MSG,COMMENT                             JDM1 *
*                                                                     *
*                                                                     *
* WRITTEN: MR FRANK YATES, AEROSPACE CORPORATION WHILE ASSIGNED TO    *
*          MULTIPURPOSE FACILITY, LOWRY AFB, CO FOR USE ON OS/MVT     *
*                                                                     *
* INSTALLED : JUNE 1976, AIR FORCE DATA SVCS CENTER, WASHINTON D.C.   *
*                                                                     *
* CHANGE LOG: JUNE 1978, INSTALLED ASIS ON OS/MVS                     *
*             JUNE 1981, CLEANED UP CODE, JIM MARSHALL, AFDSC         *
*             FEB  1982, ADDED NUMBER TO TAPE MARK, SO IT WILL        *
*                        WILL BE EASIER TO LOOK AT OUTPUT. JDM/AFDSC  *
*             FEB  1986, MACRO 'TESTOPEN' DOES NOT WANT TO COMPILE    *
*                        WITH MVS/SP1.3.3 MACLIB'S. SO AS FIX I WILL  *
*                        CODE THE FUNCTIONS.               JDM1/2ISG  *
*             OCT  1986  CHECKED OUT TANAL WITH IBM 3480'S IN FULL    *
*                        FUNCTION MODE. WORKS LIKE A CHAMP !!!!       *
*                                 JIM MARSHALL                        *
*---------------------------------------------------------------------*
         SPACE
         PRINT ON,NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
TANAL    AMODE 24
TANAL    RMODE 24
TANAL    CSECT
         SAVE  (14,12),,TANAL_&SYSDATE &SYSTIME
         LR    R12,R15             GET THE BASE ADDR
         USING TANAL,R12           ESTABLISH THE BASE
         LR    R15,R13
         LA    R13,SAVE
         ST    R15,4(R13)
         ST    R13,8(R15)
         LA    R4,1                TAPE MARK COUNT REGISTER
         GETMAIN R,LV=32760
         LR    R8,R1               REG 8 = BUFFER ADDRESS
         MVI   0(8),0              ERASE FIRST 80 BYTES.
         MVC   1(79,8),0(8)
         ST    R8,RCCW
         MVI   RCCW,2
         LOAD  EP=IGG019WE
         RDJFCB IN
         MVI   JFCB+66,X'10'
         OPEN  IN,TYPE=J
****     TESTOPEN IN               REFER TO CHNGE LOG            JDM1
         LA    R1,IN               GET ADDR OF DCB               JDM1
         TM    48(R1),X'10'        WAS OPEN SUCCESSFUL ?         JDM1
         BO    OPENOK              YES, GREAT                    JDM1
         COMMENT 'OPEN TEST FAILED.'  SO TELL THE USER           JDM1
         SVC   3                   YE OLE EXIT                   JDM1
OPENOK   EQU   *                                                 JDM1
         SR    R7,R7               REG 7 = BLOCK COUNT
         LH    R6,RCCW+6           REG 6 = MIN BLOCK LENGTH READ
         SR    R5,R5               REG 5 = MAX BLOCK LENGTH READ
         BAL   R10,READ            READ VOLUME LABEL.
         MVI   IOB,0               NO MORE COMMAND CHAINING
         MVC   IOB+17(3),=AL3(RCCW) CHANGE CCW.
         CLC   =C'VOL1',0(8)
         BNE   NOVOL1
         SR    R7,R7               RESET BLOCK COUNT.
         LH    R6,RCCW+6           RESET MIN LENGTH.
         SR    R5,R5               RESET MAX LENGTH.
         MSG   C'1','CMI800I ANALYSIS OF TAPE. ',(CR,8,6,4)
         MVI   MSGCC,C'0'
         SPACE 2
LOOP     BAL   R10,READ
         C     R7,=F'2'            TEST ONLY THE FIRST TWO RECORDS.
         BH    LOOP
LEP1     CLC   =C'HDR',0(8)
         BE    PRINT
         CLC   =C'EOF',0(8)
         BE    PRINT
         CLC   =C'EOV',0(8)
         BNE   LOOP
         OI    FLAGS,1            SET TAPE-MARK FLAG.
         SPACE 2
PRINT    MSG   (CR,8,80)          PRINT A STANDARD LABEL.
         B     LOOP
         SPACE 2
NOVOL1   MSG   C'1','CMI800I TAPE BEING READ IS UNLABELED.'
         MVI   MSGCC,C'0'
         B     LEP1               GO TEST FOR DATA SET LABELS.
         EJECT
READ     EXCP  IOB
         WAIT  ECB=ECB
         TM    ECB,X'7F'
         BO    EQ1
         COMMENT 'CMI801I TAPE BEING READ ENCOUNTERED I/O ERROR.'
         COMMENT '        TANAL IS TERMINATED.'
         B     EOJ
EQ1      LH    R2,RCCW+6
         SH    R2,IOB+14          REG 2 = BLOCK LENGTH
         BZ    TAPEMARK
         LA    R7,1(R7)           COUNT A BLOCK.
         NI    FLAGS,X'FE'        RESET TAPE MARK FLAG.
         CR    R2,R6              TEST MINIMUM.
         BNL   EQ2
         LR    R6,R2
EQ2      CR    R2,R5              TEST MAXIMUM.
         BCR   13,10              RETURN IF NOT HIGH.
         LR    R5,R2
         BR    R10
         SPACE 2
TAPEMARK TM    FLAGS,1            TEST TAPE-MARK FLAG.
         BO    STOP
         OI    FLAGS,1            SET TAPE-MARK FLAG.
         MSG   (DR,7,6),' BLOCKS.   MIN LENGTH = ',(DR,6,5),           X
               ' BYTES.   MAX LENGTH = ',(DR,5,5),' BYTES'
         SR    R7,R7
         LH    R6,RCCW+6
         SR    R5,R5
         MSG   C' ','   '              PUT IN A BLANK
         LA    R4,1(R4)                UP THE COUNT BY ONE
         MSG   C' ','**TAPE MARK**  PHYSCIAL FILE ',(DR,4,4),' FOLLOWS'
         B     READ
         SPACE 2
STOP     LA    R4,1(R4)                UP THE COUNT BY ONE
         MSG   C' ','**TAPE MARK**  PHYSCIAL FILE ',(DR,4,4),' FOLLOWS'
EOJ      EQU   *
         L     R13,4(R13)
         RETURN (14,12),RC=0
         SPACE 2
***DATA AREA
FLAGS    DC    X'0'                1 = TAPE-MARK
IN       DCB   MACRF=E,CENDA=WE,EXLST=EXLST,DDNAME=IN
EXLST    DC    X'87',AL3(JFCB)
JFCB     DC    44F'0'
ECB      DC    F'0'
SAVE     DC    18F'0'              SAVE AREA
IOB      DC    X'40000000',A(ECB,0,0,CCW1,IN,0,0)
CCW1     CCW   7,0,X'60',1         REWIND.
RCCW     CCW   2,0,X'20',32760     READ A BLOCK.
         LTORG
         END
