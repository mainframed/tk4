         TITLE 'S A D S C  -   IEFUTL TIME LIMIT EXIT '
*-$DOC@---------------------------------------------------------------*
*                      I  E  F  U  T  L                               *
*                                                                     *
* COURTESY =  JIM MARSHALL, CAPT, USAF (RET)                          *
*                                                                     *
*             DESCRIPTIVE NAME =  SADSC MODIFICATION OF THE IBM       *
*                                 MVS/SP SYSTEM IPO SUPPLIED          *
*                                 'IEFUTL' CPU TIME EXCESSION OR      *
*                                 WAIT TIME EXCESSION EXIT.           *
*                                                                     *
*             COPYRIGHT = NONE   (IPO BASED LOGIC THOUGH PLUS .. )    *
*                                                                     *
*             FUNCTION =                                              *
*              1 BATCH JOBS ARE CANCELLED FOR CPU TIME EXCESSION      *
*              2 TSO USERS ARE CANCELLED FOR CPU TIME EXCESSION       *
*                WITH APPROPRIATE MSGS SENT TO THEIR TERMINALS AND    *
*                PLACED IN THERE MAILBOX FOR NEXT LOGON.              *
*              3 BATCH JOBS IN WAITSTATE CAN BE OPTIONALLY CANCELLED  *
*                BY THE OPERATOR OR EXTENDED IN THE WAIT STATE.       *
*              4 TSO USERS IN WAITSTATE BEYOND LIMIT ARE CANCELLED    *
*                WITH APPROPRIATE MSGS SENT TO THEIR TERMINALS AND    *
*                PLACED IN THEIR MAILBOXES FOR NEXT LOGON. THIS       *
*                IS IN CASE THEY HAVE LEFT THE TERMINAL UNATTENDED    *
*                AND FORGET TO RETURN. ( THEY, OF COURSE, NEVER       *
*                DO THIS BECAUSE IT IS A SECURITY VIOLATION. )        *
*                                                                     *
*                DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE  *
*                   IF A DIFFERENT CHARACTER SET IS NEEDED.           *
*                                                                     *
*                RESTRICTIONS = NONE                                  *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                  'ZAP*'S)   MAY YOU NEVER NEED IT !!!!!             *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = NOT TOO BIG ( ASSEMBLE TO SEE )        *
*                                                                     *
*                ATTRIBUTES = SCHEDULER KEY 0, REENTRANT,             *
*                   SUPERVISOR STATE, ENABLED                         *
*                                                                     *
*             ENTRY POINTS = IEFUTL (ONLY ENTRY POINT)                *
*                                                                     *
*                LINKAGE =                                            *
*                   FROM INITIATOR VIA MODULE IEATLEXT                *
*                                                                     *
*             INPUT = REGISTER 1 POINTS TO A LIST OF FULL WORDS       *
*                THE FIRST OF WHICH POINTS TO THE SMF COMMON          *
*                EXIT PARAMETER AREA MAPPED BY SMFCEPA DSECT          *
*                                                                     *
*             OUTPUT = REGISTER 15 - RETURN CODE                      *
*                REGISTER 1 - TIME LIMIT EXTENSION                    *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = SEE FUNCTION ABOVE                     *
*                                                                     *
*             EXIT - ERROR = NONE                                     *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = 0  TO CANCEL THE JOB                   *
*                              8  TO EXTEND THE JOB ( TIME IS IN      *
*                                    R1 IN SECONDS )                  *
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =                                              *
*                                                                     *
*                THE MESSAGES ISSUED BY IEFUTL ARE FOUND IN THE       *
*                   DATA CONSTANT DEFINITION AREA.                    *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
*  NOTES: CHANGED THE LOGIC TO CHECK FOR THE LENGTH OF THE            *
*         USERID. IF IT IS 4-7 CHARACTERS I WILL PUMP THE MSGS        *
*         TO THE USERS. IF ANYONE IS FOOL ENOUGH TO HAVE 3 OR LESS    *
*         CHARACTERS FOR USERIDS YOU JUST GET BLOWN OFF, NO MSGS.     *
*                                                                     *
*         IF YOU ARE EXPECTING SLICK CODE YOU WILL BE SUPRISED.       *
*         THIS IS NOT THE MOST EFFICIENT CODE GOING BUT HOPEFULLY     *
*         STRAIGHT FORWARD. REDUNDANT AT TIMES TOO. BUT ABLE TO       *
*         BE FOLLOWED BY MORTAL MAN OR WOMAN.   J.MARSHALL            *
*                                                                     *
*  CHNGE LOG: 15 MARCH 1984.  J. MARSHALL                             *
*             MSG4 WAS BEING CONSTRUCTED INCORRECTLY FOR I.D.'S       *
*             OF LENGTH LESS THAN 7 CHARS.                            *
*---------------------------------------------------------------------*
         SPACE
R0       EQU   0                       ENTRY CONDITION, THEN SPEC USE
R1       EQU   1                       ENTRY PARM PTER, THEN SPEC USE
R2       EQU   2                       TIMER EXT IF RC=8
R3       EQU   3                       UNUSED
R4       EQU   4                       WORK REGISTER
R5       EQU   5                       LINKAGE REGISTER (BAL)
R6       EQU   6                       POINTER TO WTOAREA
R7       EQU   7                       UNUSED
R8       EQU   8                       ENTRY CONDITION SAVED
R9       EQU   9                       ENTRY PARM POINTER SAVED, THEN
*                                      UNUSED
R10      EQU   10                      ADDR TO SMF PARM AREA DSECT
R11      EQU   11                      SPARE (POSSIBLE 2ND BASE)
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      ADDR TO GETMAINED AREA
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
         EJECT
IEFUTL   CSECT
         SAVE  (14,12),,IEFUTL_SADSC_&SYSTIME_&SYSDATE SAVE REG
         LR    R12,R15                 LOAD REGISTER 12 FROM 15
         USING IEFUTL,R12              ESTABLISH ADDRESSABILITY TO
*                                      PROGRAM CSECT
         LR    R9,R1                   SAVE PARM POINTER
         LR    R8,R0                   SAVE ENTRY CONDITION
         LA    R0,ENDDSA-DSA           LENGTH FOR GOTTEN AREA
         O     R0,SUBPOOL              INDICATE SUBPOOL 241
         GETMAIN R,LV=(0)              GO DO IT
         USING DSA,R1                  TEMPORARY ADDRESSABILITY
         XC    SAVEAREA,SAVEAREA       CLEAR SAVE AREA
         ST    R13,SAVEAREA+4          PLUG IN LOW SAVE
         ST    R1,8(R13)               PLUG IN HIGH SAVE
         LR    R13,R1                  POINT TO GETMAIN AREA
         DROP  R1                      RID OURSELVES OF R1
         USING DSA,R13                 RE-ESTABLISH R13 AS BASE
         SPACE
*---------------------------------------------------------------------*
*        ESTABLISH ADDRESSABILITY TO SMF PARAMETER AREA DSECT         *
*        EVALUATE REGISTER 0 = 0 - JOB CPU TIME EXCEEDED              *
*                            = 4 - STEP CPU TIME EXCEEDED             *
*                            = 8 - JOB WAIT TIME EXCEEDED             *
*---------------------------------------------------------------------*
         SPACE
         L     R10,D0(R9)              LOAD POINTER TO PARAMETER AREA
         USING SMFEPLA,R10             ESTABLISH ADDRESSABILITY TO SMF
         LR    R3,R10
         USING JMR,R3                  ESTABLISH ADDRESSABILITY TO JMR
*                                      PARAMETER AREA DSECT
         C     R8,FULL8                SEE IF JOB/STEP TIME EXCEEDED
         BE    WAITTIME                NO.....GO DO ANALYSIS FOR WAIT
*                                      TIME EXCEEDED
         SPACE
*---------------------------------------------------------------------*
*        CPU TIME EXCEEDED. BATCH JOBS WILL GET A CANCEL ONLY.        *
*        TSO USERS WILL GET A MSG BACK AT THERE TERMINAL AND          *
*        ALSO ONE MSG IN THERE BRODCAST SLOT FOR THE NEXT LOGON       *
*        THIS IS FOR THE PEOPLE WITH 3270 TYPE TERMINAL AND USE       *
*        VTAM. HARDCPY TERMINALS ARE NO PROBLEM.                      *
*---------------------------------------------------------------------*
         SPACE
BCPU00   EQU   *
         TM    SMFOPT,SMFTSO           SEE IF TSO SESSION
         BNO   CHECKIT                 NO, GO CHECK FOR SADSC UNIQUE
*                                      EXCESSIONS
         LA    R6,MSGWTO               SETUP R6 FOR OUR WORK
         SPACE
*---------------------------------------------------------------------*
*        FIRST LET US DETERMINE THE LENGTH OF THE USERID TO PLUG      *
*        INTO TSO SEND COMMANDS LATER DOWN THE PIKE.                  *
*---------------------------------------------------------------------*
         SPACE
         CLI   SMFJOBN+6,C' '          IS IT 7 CHARACTERS ?
         BNE   LEN7                    MUST 7 CHARACTERS
         CLI   SMFJOBN+5,C' '          IS IT 6 CHARACTERS ?
         BNE   LEN6                    MUST 6 CHARACTERS
         CLI   SMFJOBN+4,C' '          IS IT 5 CHARACTERS ?
         BNE   LEN5                    MUST 5 CHARACTERS
         CLI   SMFJOBN+3,C' '          IS IT 4 CHARACTERS ?
         BNE   LEN4                    MUST 4 CHARACTERS
         B     CANCEL                  IF 3 CHARACTERS, TOUGH
         SPACE
*---------------------------------------------------------------------*
*        ISSUE 1ST MSG TO TSO PERSON TO SEE NOW.                      *
*        SE 'SESSION CANCELLED FOR MAX CPUTIME.     ',                *
*               USER=(XXXXXXX),LOGON                                  *
*        SE 'LAST SESSION CANCELLED FOR MAX CPUTIME.',                *
*               USER=(XXXXXX),SAVE                                    *
*---------------------------------------------------------------------*
         SPACE
LEN7     EQU   *
         MVC   0(MSG4L,R6),MSG4        MOVE IN MSG
         MVC   MSG4J(7,R6),SMFJOBN     MOVE IN USERID TO MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         MVC   0(MSG5L,R6),MSG5        MOVE IN MSG
         MVC   MSG5J(7,R6),SMFJOBN     MOVE IN USERID TO MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         B     WAITABIT
         SPACE
LEN6     EQU   *
         MVC   0(MSG4L,R6),MSG4        MOVE IN MSG
         MVC   MSG4J(6,R6),SMFJOBN     MOVE IN USERID TO MSG
         MVC   MSG4J6(8,R6),LOGON      FILL IN REST OF MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         MVC   0(MSG5L,R6),MSG5        MOVE IN MSG
         MVC   MSG5J(6,R6),SMFJOBN     MOVE IN USERID TO MSG
         MVC   MSG5J6(8,R6),SAVE       FILL IN REST OF MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         B     WAITABIT
         SPACE
LEN5     EQU   *
         MVC   0(MSG4L,R6),MSG4        MOVE IN MSG
         MVC   MSG4J(5,R6),SMFJOBN     MOVE IN USERID TO MSG
         MVC   MSG4J5(8,R6),LOGON      FILL IN REST OF MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         MVC   0(MSG5L,R6),MSG5        MOVE IN MSG
         MVC   MSG5J(5,R6),SMFJOBN     MOVE IN USERID TO MSG
         MVC   MSG5J5(8,R6),SAVE       FILL IN REST OF MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         B     WAITABIT
         SPACE
LEN4     EQU   *
         MVC   0(MSG4L,R6),MSG4        MOVE IN MSG
         MVC   MSG4J(4,R6),SMFJOBN     MOVE IN USERID TO MSG
         MVC   MSG4J4(8,R6),LOGON      FILL IN REST OF MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         MVC   0(MSG5L,R6),MSG5        MOVE IN MSG
         MVC   MSG5J(4,R6),SMFJOBN     MOVE IN USERID TO MSG
         MVC   MSG5J4(8,R6),SAVE       FILL IN REST OF MSG
         BAL   R5,SVC34                ISSUE THIS COMMAND
         B     WAITABIT
         EJECT
*---------------------------------------------------------------------*
*        BATCH EXCESSION OF CPU TIME, CHECK FOR A CLASS X JOB         *
*        AND SEE IF IT IS ALLOWED.                                    *
*---------------------------------------------------------------------*
         SPACE
CHECKIT  EQU   *
         CLI   JMRCLASS,C'X'           IS IT CLASS=X ???
         BNE   CANCEL
         LA    R6,RPLYADDR             POINT TO AREA
         MVC   0(CPUEXCSL,R6),CPUEXCS  MOVE IN THE MSG
         MVC   CPUEXCSJ(8,R6),SMFJOBN  MOVE IN THE JOB NAME
         LA    R4,WTORRPLY             COMPLETE WTOR
         ST    R4,RPLYADDR             PLUG IN 1 BYTE
         LA    R4,L'WTORRPLY           GET ITS LENGTH
         STC   R4,RPLYADDR             PLUG IN 1 BYTE
         LA    R4,WTORECB              SETUP ECB
         ST    R4,ECBADDR              NOW WE HAVE ADDR
         SPACE
CPRETRY  EQU   *
         XC    WTORECB,WTORECB         CLEAR THE ECB
         WTOR  ,,,,MF=(E,WTORLIST)     ISSUE WTOR
         WAIT  R1,ECB=WTORECB,LONG=YES WAIT FOR THE OPERATOR
         OI    WTORRPLY,X'40'          FORCE UPPER CASE
         CLI   WTORRPLY,C'C'           DO WE CANCEL JOB   ??
         BE    CANCEL                  GO DO IT
         CLI   WTORRPLY,C'E'           DO WE EXTEND CPU TIME
         BE    EXTEND                  GO EXTEND
         BAL   R5,ERRMSG               GO TELL ERROR MSG
         B     CPRETRY                 DO IT AGAIN
         SPACE
*---------------------------------------------------------------------*
*        WAIT TIME EXCEEDED                                           *
*           - ALLOW TSO SESSION TO BE CANCELLED                       *
*           - ASK THE OPERATOR IF THE JOB IS TO BE EXTENDED ( WE      *
*             FORCE 15 MINUTES MAX ) OR SHOULD IT BE CANCELLED.       *
*---------------------------------------------------------------------*
         SPACE
WAITTIME DS    0H
         TM    SMFOPT,SMFTSO           SEE IF TSO SESSION
         BNO   TWAIT50                 NO..SO MUST BE BACKGROUND
         SPACE
*---------------------------------------------------------------------*
*        THIS IS A TSO USER, SO WE MUST KILL HIM.                     *
*---------------------------------------------------------------------*
         SPACE
         LA    R6,MSGWTO               SETUP R6 FOR OUR MSGS
         SPACE
*---------------------------------------------------------------------*
*        FIRST WE MUST TELL THE OPERATOR OF OUR INTENT.   I.E.        *
*        WTO   'TSO USER XXXXXXX CANCELLED: INACTIVITY'               *
*---------------------------------------------------------------------*
         SPACE
         MVC   0(MSG1L,R6),MSG1        MOVE IN MSG
         MVC   MSG1J(7,R6),SMFJOBN     MOVE IN USERID
         BAL   R5,SVC35                GO ISSUE WTO
         SPACE
*---------------------------------------------------------------------*
*        FIRST LET US DETERMINE THE LENGTH OF THE USERID TO PLUG      *
*        INTO TSO SEND COMMANDS LATER DOWN THE PIKE.                  *
*---------------------------------------------------------------------*
         SPACE
         CLI   SMFJOBN+6,C' '          IS IT 7 CHARACTERS ?
         BNE   TWLEN7                  MUST 7 CHARACTERS
         CLI   SMFJOBN+5,C' '          IS IT 6 CHARACTERS ?
         BNE   TWLEN6                  MUST 6 CHARACTERS
         CLI   SMFJOBN+4,C' '          IS IT 5 CHARACTERS ?
         BNE   TWLEN5                  MUST 5 CHARACTERS
         CLI   SMFJOBN+3,C' '          IS IT 4 CHARACTERS ?
         BNE   TWLEN4                  MUST 4 CHARACTERS
         B     CANCEL                  IF 3 CHARACTERS, TOUGH
         SPACE
*--------------------------------------------------------------------*
*        SECOND, WE SEND MSG TO USER TO SEE NOW.    I.E.             *
*        SE   'CANCELLED FOR INACTIVITY     ',USER=(XXXXXX),LOGON    *
*        SE   'CANCELLED FOR INACTIVITY     ',USER=(XXXXXX),SAVE     *
*--------------------------------------------------------------------*
         SPACE
TWLEN7   EQU   *
         MVC   0(MSG2L,R6),MSG2        MOVE IN THE MSG
         MVC   MSG2J(7,R6),SMFJOBN     MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         MVC   0(MSG3L,R6),MSG3        MOVE IN THE MSG
         MVC   MSG3J(7,R6),SMFJOBN     MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         B     WAITABIT
         SPACE
TWLEN6   EQU   *
         MVC   0(MSG2L,R6),MSG2        MOVE IN THE MSG
         MVC   MSG2J(6,R6),SMFJOBN     MOVE IN USERID
         MVC   MSG2J6(8,R6),LOGON      MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         MVC   0(MSG3L,R6),MSG3        MOVE IN THE MSG
         MVC   MSG3J(6,R6),SMFJOBN     MOVE IN USERID
         MVC   MSG3J6(8,R6),SAVE       MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         B     WAITABIT
         SPACE
TWLEN5   EQU   *
         MVC   0(MSG2L,R6),MSG2        MOVE IN THE MSG
         MVC   MSG2J(5,R6),SMFJOBN     MOVE IN USERID
         MVC   MSG2J5(8,R6),LOGON      MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         MVC   0(MSG3L,R6),MSG3        MOVE IN THE MSG
         MVC   MSG3J(5,R6),SMFJOBN     MOVE IN USERID
         MVC   MSG3J5(8,R6),SAVE       MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         B     WAITABIT
         SPACE
TWLEN4   EQU   *
         MVC   0(MSG2L,R6),MSG2        MOVE IN THE MSG
         MVC   MSG2J(4,R6),SMFJOBN     MOVE IN USERID
         MVC   MSG2J4(8,R6),LOGON      MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         MVC   0(MSG3L,R6),MSG3        MOVE IN THE MSG
         MVC   MSG3J(4,R6),SMFJOBN     MOVE IN USERID
         MVC   MSG3J4(8,R6),SAVE       MOVE IN USERID
         BAL   R5,SVC34                GO ISSUE THE MSG
         B     WAITABIT
         SPACE
*---------------------------------------------------------------------*
*        THIS AREA IS FOR THE BATCH CANCEL. BUT WE DO NOT JUST WANT   *
*        JOBS TO BE BLANKETLY CANCELLED BECAUSE THE OPERATORS         *
*        FORGOT TO MOUNT A TAPE. THUS WE WILL TELL THEM OF THE        *
*        WAITSTATE AND LET THEM HAVE THE OPTION.                      *
*---------------------------------------------------------------------*
         SPACE
TWAIT50  EQU   *
         LA    R6,RPLYADDR             POINT TO AREA
         MVC   0(MSGWAITL,R6),MSGWAIT  MOVE IN THE MSG
         MVC   MSGWAITJ(8,R6),SMFJOBN  MOVE IN THE JOB NAME
         LA    R4,WTORRPLY             COMPLETE WTOR
         ST    R4,RPLYADDR             PLUG IN 1 BYTE
         LA    R4,L'WTORRPLY           GET ITS LENGTH
         STC   R4,RPLYADDR             PLUG IN 1 BYTE
         LA    R4,WTORECB              SETUP ECB
         ST    R4,ECBADDR              NOW WE HAVE ADDR
         SPACE
BWRETRY  EQU   *
         XC    WTORECB,WTORECB         CLEAR THE ECB
         WTOR  ,,,,MF=(E,WTORLIST)     ISSUE WTOR
         WAIT  R1,ECB=WTORECB,LONG=YES WAIT FOR THE OPERATOR
         OI    WTORRPLY,X'40'          FORCE UPPER CASE
         CLI   WTORRPLY,C'C'           DO WE CANCEL JOB   ??
         BE    CANCEL                  GO DO IT
         CLI   WTORRPLY,C'E'           DO WE EXTEND WAITSTATE
         BE    EXTEND                  OPERATOR GOOFED, HELP THEM
         BAL   R5,ERRMSG               GO GIVE ERROR MSG
         B     BWRETRY                 TRY AGAIN
         SPACE
*---------------------------------------------------------------------*
*        THIS AREA IS FOR THE EXTENSION WHEN YOU RETURN TO SYSTEM.    *
*        IT IS USED FOR WAITSTATE OR CPU EXCESSION.
*---------------------------------------------------------------------*
         SPACE
EXTEND   EQU   *
         L     R2,LIMIT                GET MAX WAIT STATE
         LA    R0,ENDDSA-DSA          GET LENGTH OF AREA WE GOT
         O     R0,SUBPOOL             GET SUBPOOL NUMBER
         LR    R1,R13                 GET ADDRESS OF GOTTEN AREA
         L     R13,SAVEAREA+4         GET LOW SAVE ADDRESS
         FREEMAIN R,A=(1),LV=(0)      RETURN WHAT WE GO
         ST    R2,24(R13)             TIME EXT IN R1 IN SECONDS
         RETURN (14,12),RC=8          CONTINUE WITH NEW TIME
         SPACE
*---------------------------------------------------------------------*
*        THIS AREA IS FOR THE CANCEL WHEN YOU RETURN TO SYSTEM.       *
*        IF WE ARE GOING TO CANCEL FOR INACTIVITY OR TSO CPUTIME      *
*        EXCESSION WE WANT TO GIVE THE USERS A MESSAGE.               *
*        SORT OF A SINKING FEELING IF YOU KNOW YOU ARE GOING          *
*        DOWN THE TUBES AND THERE IS NOTHING YOU CAN DO ABOUT IT.     *
*---------------------------------------------------------------------*
         SPACE
WAITABIT EQU   *
         STIMER WAIT,BINTVL=SNOOZE
         SPACE
CANCEL   EQU   *
         LA    R0,ENDDSA-DSA           GET LENGTH OF AREA WE GOT
         O     R0,SUBPOOL              GET SUBPOOL NUMBER
         LR    R1,R13                  GET ADDRESS OF GOTTEN AREA
         L     R13,SAVEAREA+4          GET LOW SAVE ADDRESS
         FREEMAIN R,A=(1),LV=(0)       GIVETH BACK AREA
         RETURN (14,12),RC=0           GO BACK WITH CANCEL
         SPACE
*---------------------------------------------------------------------*
*        AREA FOR SOME SUBROUTINES                                    *
*---------------------------------------------------------------------*
         SPACE
SVC34    EQU   *
         XR    R0,R0                   SETUP FOR SVC 34
         LA    R1,MSGWTO               POINT TO COMMAND
         SVC   OPSVC                   GO DO IT
         BR    R5                      RETURN WHENCE WE CAME
         SPACE
SVC35    EQU   *
         LA    R1,MSGWTO               POINT TO COMMAND
         SVC   WTOSVC                  DO THE SVC
         BR    R5                      RETURN WHENCE WE CAME
         SPACE
ERRMSG   EQU   *
         LA    R1,MSGERR               POINT TO MSG
         SVC   WTOSVC                  DO THE SVC
         BR    R5                      RETURN WHENCE WE CAME
         EJECT
*---------------------------------------------------------------------*
*        THE MSGS THAT CAN BE SENT TO THE OPERATOR OR TSO USER        *
*        ARE DEFINED BELOW. THESE ARE REALLY IN THE FORM OF THE       *
*        LIST VERSION OF 'WTO'. BUT SINCE WE MUST BUILD SOME OF       *
*        THE MSGS, IT IS MORE EFFICIENT TO CODE THEM IN THE           *
*        EXPANDED FORM. THUS HOPEFULLY IF YOU HAVE TO ADD SOME-       *
*        THING, THE EXPANDED FORM WILL TAKE CARE OF YOU               *
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSG1     WTO   'ISG0070I U=XXX     CANCELLED, INACTIVITY',ROUTCDE=(2), X
               MF=L
MSG1L    EQU   *-MSG1
MSG1J    EQU   15
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSG2     WTO   'SE ''SESSION CANCELLED: INACTIVITY'',USER=(XXXXXXX),LOGX
               ON        IEFUTL',ROUTCDE=(2),MF=L
MSG2L    EQU   *-MSG2
MSG2J    EQU   45
MSG2J6   EQU   51
MSG2J5   EQU   50
MSG2J4   EQU   49
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSG3     WTO   'SE ''LAST SESSION CANCELLED: INACTIVITY'',USER=(YYYYYYYX
               ),SAVE    IEFUTL',ROUTCDE=(2),MF=L
MSG3L    EQU   *-MSG3
MSG3J    EQU   50
MSG3J6   EQU   56
MSG3J5   EQU   55
MSG3J4   EQU   54
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSG4     WTO   'SE ''SESSION CANCELLED EXCEEDED MAX CPUTIME.'',USER=(YYX
               YYYYY),LOGON      IEFUTL',ROUTCDE=(2),MF=L
MSG4L    EQU   *-MSG4
MSG4J    EQU   55
MSG4J6   EQU   61
MSG4J5   EQU   60
MSG4J4   EQU   59
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSG5     WTO   'SE ''LAST SESSION CANCELLED FOR MAX CPUTIME.'',USER=(YYX
               YYYYY),SAVE       IEFUTL',ROUTCDE=(2),MF=L
MSG5L    EQU   *-MSG5
MSG5J    EQU   55
MSG5J6   EQU   61
MSG5J5   EQU   60
MSG5J4   EQU   59
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSGWAIT  WTOR  'ISG0071A J=XXXXXXXX IN WAITSTATE. REPLY ''C'' TO CANCELX
                THE JOB OR ''E'' TO EXTEND THE WAITSTATE',MF=L
MSGWAITL EQU   *-MSGWAIT
MSGWAITJ EQU   23
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
CPUEXCS  WTOR  'ISG0073A J=XXXXXXXX EXCEEDED CPUTIME, ENTER ''C'' TO CAX
               NCEL THE JOB OR ''E'' TO EXTEND',MF=L
CPUEXCSL EQU   *-CPUEXCS
CPUEXCSJ EQU   23
         SPACE
*---------------------------------------------------------------------*
         SPACE
         DS    0F
MSGERR   WTO   'ISG0072I REPLY NOT ''C'' OR ''E''  ',MF=L
         SPACE
*---------------------------------------------------------------------*
*        LITERAL POOL NEXT AND CONSTANTS
*---------------------------------------------------------------------*
         SPACE
FULL8    DC    F'8'                    DEFINE 8
LIMIT    DC    F'900'                  15 MINUTES ( 900 SECS )
SNOOZE   DC    F'500'                  500*0.01=5 SEC
SAVE     DC    CL12'),SAVE'
LOGON    DC    CL12'),LOGON'
         DS    0F
SUBPOOL  DC    X'F1000000'   F1        SUBPOOL 241
         SPACE
         LTORG
         SPACE
*---------------------------------------------------------------------*
*        PATCH AREA ( PRAY WE NEVER NEED IT ).                        *
*---------------------------------------------------------------------*
         DS    0F
PATCH    DC    8CL4'ZAP*'
         EJECT
*---------------------------------------------------------------------*
*        DSECTS DEFINED HERE
*---------------------------------------------------------------------*
         SPACE 2
SMFEPLA  DSECT
SMFJOBN  DS    CL8
SMFTIME  DS    CL4
SMFDATE  DS    CL4
SMFSID   DS    CL4
SMFUSID  DS    CL8
SMFSTEP  DS    CL1
SMFOPT   DS    CL1
SMFTSO   EQU   X'01'
SMFVS1   DS    CL1
SMFRESV  DS    CL1
SMFUSER  DS    CL4
         ORG   SMFUSER
SMFUSERC DS    CL1
SMFUSERW DS    CL1
         ORG
         SPACE
         DS    0D
DSA      DSECT
SAVEAREA DS    18F                     SAVE AREA
WTORECB  DS    F
WTORLIST DS    0F
RPLYADDR DS    A
ECBADDR  DS    A
MSGWTO   DS    0F
MSGLN    DS    H                       TEXT LENGTH
MSGFLGS  DS    H                       MCS FLAGS
MSG      DS    CL122                   TEXT
WTORRPLY DS    CL3
ENDDSA   DS    0D
         SPACE
         IEFJMR
         ORG   JMRUSEID
JMRCHRG  DS    PL4
JMRRCODE DS    C
JMRUJICD DS    C
JMRHCLAS DS    C
JMRHPRTY DS    C
         SPACE
*---------------------------------------------------------------------*
*        EQUATES                                                      *
*---------------------------------------------------------------------*
D0       EQU   0
WTOSVC   EQU   35                      SVC 35     ( WTO )
OPSVC    EQU   34                      SVC 34     ( MSGR )
         SPACE
         END   IEFUTL
