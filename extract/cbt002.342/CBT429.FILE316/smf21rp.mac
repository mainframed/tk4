         TITLE '   S M F 2 1 R P'
*--------------------------------------------------------------------*
*        WRITTEN BY.   JIM MARSHALL                                  *
*        DATE WRITTEN. MAY  15 1991.                                 *
*        DATE UPDATED. NONE                                          *
*        ATTRIBUTES. NON-RENTRANT.                                   *
*                                                                    *
*        COMMENTS.                                                   *
*        PROGRAM WAS CODED TO ANALYZE SMF TYPE 21 RECORDS AND PUT    *
*        THE INFORMATION IN A MORE USER FRIENDLY FORMAT THAN THE     *
*        THE IBM UTILITY 'IFHSTATR' (CODE IS BASED ON 'SMFPGACT'     *
*        WRITTEN BY BILL GODFREY OF PRC).                            *
*                                                                    *
*        JIM MARSHALL, CAPT, USAF (RET)                              *
*                                                                    *
*        REPORTS:                                                    *
*                                                                    *
*        SMF21PR  - # OF PERMANENT READ ERRORS                       *
*        SMF21NB  - # OF NOISE BLOCKS (NON-BUFFERED LOG)             *
*        SMF21ERG - # OF ERASE GAPS                                  *
*        SMF21CLN - # OF CLEANER ACTIONS                             *
*        SMF21TRF + SMF21TRB =                                       *
*                   # OF TEMPORARY READ FORWARD ERRORS               *
*        SMF21TWF - # OF TEMPORARY WRITE ERRORS                      *
*                                                                    *
*        PROGRAM REPORTS ON TAPE ACTIVITY FROM SMF TYPE 21 RECORDS.  *
*        EVERY TYPE 21 FOUND IN THE INPUT DATA SET IS USED UNLESS    *
*        THE PARM FIELD SPECIFIES A RESTRICTED RANGE OF JULIAN       *
*        DATES, E.G., PARM='90232,90233'. PGM IS SMART ENOUGH TO     *
*        SELECT TYPE 21 RECORDS FROM THE INPUT FILE.                 *
*                                                                    *
*   JCL:     //REPORT   EXEC PGM=SMF21RP,PARM=' - OPTIONAL - '       *
*            //SYSPRINT DD SYSOUT=*                                  *
*            //SYSOUT   DD SYSOUT=*                                  *
*            //SYSUT1   DD -- INPUT SMF FILE  --                     *
*            //SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR                 *
*            //SORTIN   DD UNIT=VIO                                  *
*            //SORTOUT  DD UNIT=VIO                                  *
*                                                                    *
* CHNGE LOG: 05/06/92 - JDM1 - FIXED S001 ABEND                      *
*            07/18/92 - JDM2 - UCB ADDR NOT BINARY, UNSIGNED PACKED  *
*--------------------------------------------------------------------*
         SPACE
         MACRO
&NAME    LOAD1 &R,&L
         MVC   FULL(4),=XL4'0'
         MVC   FULL+3(1),&L
         L     &R,FULL
         MEND
         SPACE
         MACRO
&NAME    LOAD2 &R,&L
         MVC   FULL(4),=XL4'0'
         MVC   FULL+2(2),&L
         L     &R,FULL
         MEND
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
SMF21RP  AMODE 24
SMF21RP  RMODE 24
SMF21RP  CSECT
         USING *,R12
         B     @START-*(,15)
         DC    AL1(11),CL11'SMF21RP '
         DC    CL16' &SYSDATE &SYSTIME '
         DS    0H
@START   STM   14,12,12(13)
         LR    R12,15
         LR    R2,R1
         GETMAIN R,LV=@DATAL
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         LR    R9,R1
         USING @DATA,R9
         SPACE 1
         SLR   R15,R15
         ST    R15,SWITCH
         ST    R15,RC
         ST    R15,JULIANI
         MVC   CTRPAG,=P'00000'
         MVC   CTRLIN,=P'000'
         MVC   CTRMAX,=P'050'
         MVI   LINE-1,C' '
         MVI   PRINTA-1,C' '
         MVI   OPT,0
         XC    PREVIOUS,PREVIOUS
         SPACE
         L     R2,0(,R2)           POINT TO PARM
         LH    R3,0(,R2)           GET LENGTH
         MVC   PARMLO,=P'00000'
         MVC   PARMHI,=P'99999'
         LTR   R3,R3               LENGTH ZERO?
         BZ    NOPARM              YES - BRANCH
         CH    R3,=H'11'           IS PARM LENGTH 11
         BNE   EXIT12              NO, QUIT
         PACK  PARMLO,2(5,R2)      GET LO DATE YYDDD
         PACK  PARMHI,8(5,R2)      GET HI DATE YYDDD
NOPARM   EQU   *
         SPACE
         LA    R4,MYDCBP
         MVC   0(DCBPL,R4),DCBP
         SPACE
         MVI   MYOPEN,X'80'
         LA    R1,MYOPEN
         SPACE
         OPEN  ((R4),OUTPUT),MF=(E,(1))
         SPACE
         TM    OFLGS(R4),X'10'
         BO    OKDCBP
         LA    R1,MSG01
         WTO   MF=(E,(1))
         B     EXIT12
OKDCBP   EQU   *
         OI    SWITCH,X'80'        SET CLOSE SWITCH ON
         SPACE
         LA    R5,MYDCBS
         MVC   0(DCBSL,R5),DCBS
         LA    R15,S21EOD
         IC    R14,EODAD(,R5)
         ST    R15,EODAD(,R5)      EODAD=S21EOD
         STC   R14,EODAD(,R5)
         SPACE
         MVI   MYOPEN,X'80'
         LA    R1,MYOPEN
         OPEN  ((R5),INPUT),MF=(E,(1))
         SPACE
         TM    OFLGS(R5),X'10'
         BO    OKDCBS
         LA    R1,MSG02
         LA    R0,L'MSG02
         BAL   R14,PRINT
         B     EXIT12
OKDCBS   EQU   *
         OI    SWITCH,X'40'        SET CLOSE SWITCH ON
         OPEN  (SORTIN,(OUTPUT))
         SPACE
READ     EQU   *
         LA    R5,MYDCBS
         GET   (R5)
         LR    R6,R1
         USING SMF21HDR,R6         GET ADDRESSABILITY
         CLI   SMF21RTY,21         TAPE ESV RECORD ???
         BNE   READ
         CP    SMF21DTE,PARMLO
         BL    READ
         CP    SMF21DTE,PARMHI
         BH    READ
         SPACE
*---------------------------------------------------------------------*
*        START EXTRACTING THE RAW DATA TO BUILD A RECORD.  FILTER     *
*        RECORDS OUT WITH ALL ZEROS IN THE FIELDS.                    *
*---------------------------------------------------------------------*
         SPACE
OK       EQU   *
         MVC   LINE,LINE-1
         SPACE
         LA    R1,SMF21DTE
         BAL   R14,JULIAN
         MVC   LINDTE,JULIANO
         SPACE
         LA    R15,LINTME
         LA    R1,SMF21TME
         BAL   R14,TIMEX
         SPACE
         CLI   SMF21TR,X'00'       ANY TEMP READ ERRS ??
         BNE   OKGO
         CLI   SMF21TW,X'00'       ANY TEMP WRITE ERRS ??
         BNE   OKGO
         CLI   SMF21PR,X'00'       ANY PERM READ  ERRS ??
         BNE   OKGO
         CLI   SMF21NB,X'00'       ANY NOISE BLOCKS ??
         BNE   OKGO
         CLC   SMF21ERG(2),=X'0000'  ANY ERASE GAPS   ??
         BNE   OKGO
         CLI   SMF21CLN,X'00'      ANY CLEANER ACTIONS ??
         BNE   OKGO
         CLC   SMF21TRF(2),=X'0000'  TEMP READ FORWARD ERRS ?
         BNE   OKGO
         CLC   SMF21TRB(2),=X'0000'  TEMP READ BACKWARD ERRS ?
         BNE   OKGO
         CLC   SMF21TWF(2),=X'0000'  TEMP WRITE ERRS  ??
         BNE   OKGO
         B     READ
         SPACE
OKGO     EQU   *
         UNPK  DOUBLE(5),SMF21CA(3)   GET DEVICE ADDRESS         JDM2
         TR    DOUBLE(4),S21TAB    CONVERT ADDR TO HEX           JDM2
         MVC   LINCAT(3),DOUBLE+1      MOVE IN EDITED CUA        JDM2
         MVI   LINCAT+3,C'/'           MOVE IN SLASH
         LA    R1,DEVTAB               GET DEVICE TABLE ADDR
DEVLOOP  EQU   *
         CLI   0(R1),X'FF'             END OF TABLE
         BE    DEVUNK
         CLC   SMF21UCB,0(R1)          DO WE MATCH
         BE    DEVSTOR
         LA    R1,10(R1)               BUMP POINTER
         B     DEVLOOP
DEVUNK   EQU   *
         MVC   LINCAT+4(6),=CL6' ????' MOVE IN QUESTION
         B     DEVCONT
DEVSTOR  EQU   *
         MVC   LINCAT+4(6),4(R1)       MOVE IN DEVTYPE
DEVCONT  EQU   *
         SPACE
         MVC   LINVOL(6),SMF21VOL      MOVE IN VOLSER INFO
         LOAD1 R1,SMF21PR
         CVD   R1,DOUBLE
         LA    R15,LINPR
         MVC   0(4,R15),PATL1
         ED    0(4,R15),DOUBLE+6
         SPACE
         LOAD1 R1,SMF21NB
         CVD   R1,DOUBLE
         LA    R15,LINNB
         MVC   0(4,R15),PATL1
         ED    0(4,R15),DOUBLE+6
         SPACE
         LOAD2 R1,SMF21ERG
         CVD   R1,DOUBLE
         LA    R15,LINERG
         MVC   0(6,R15),PATL2
         ED    0(6,R15),DOUBLE+5
         SPACE
         LOAD2 R1,SMF21CLN
         CVD   R1,DOUBLE
         LA    R15,LINCLN
         MVC   0(6,R15),PATL2
         ED    0(6,R15),DOUBLE+5
         SPACE 1
         LOAD2 R0,SMF21TRF         TEMP READ FORWARD ERRORS
         LOAD2 R1,SMF21TRB         TEMP READ BACKWARD ERRORS
         AR    R1,R0               ADD THEM
         CVD   R1,DOUBLE
         LA    R15,LINTR
         MVC   0(6,R15),PATL2
         ED    0(6,R15),DOUBLE+5
         SPACE 1
         LOAD2 R1,SMF21TWF
         CVD   R1,DOUBLE
         LA    R15,LINTWF
         MVC   0(6,R15),PATL2
         ED    0(6,R15),DOUBLE+5
         SPACE 1
         PUT   SORTIN,LINE
         B     READ
         SPACE
*---------------------------------------------------------------------*
*        HAVE BUILT ALL THE RECORDS AND WROTE THEM OUT TO DDNAME      *
*        SORTIN. NOW WE GO OFF TO SORT THE RECORDS                    *
*---------------------------------------------------------------------*
         SPACE
S21EOD   EQU   *
         CLOSE (SORTIN)
         LINK  EP=SORT,PARAM=(SORTDEF),VL=1
         LTR   R15,R15             GOOD SORT ?
         BNZ   ABORT1              COMPLAIN
         OPEN  (SORTOUT,INPUT)
PLOOP    EQU   *
         GET   SORTOUT,LINE        GET SORTED RECORD
         BAL   R14,PRINTL
         B     PLOOP               LOOP
SMFEOD   EQU   *
         B     EXIT0
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXT-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXT     DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
NUMBER   MVC   FULL,0(R1)
         L     R1,FULL
         CVD   R1,DOUBLE
         MVC   0(9,R15),=X'40202020206B202120'
         ED    0(9,R15),DOUBLE+4
         MVC   0(8,R15),1(R15)
         MVI   8(R15),C' '
         BR    R14
         SPACE
JULIAN   CLC   0(4,R1),JULIANI
         BER   R14
         MVC   JULIANI(4),0(R1)
         MVC   DOUBLE(4),0(R1)
         LH    R0,DOUBLE           GET 00YY
         SLL   R0,4                SHIFT TO 00000YY0
         STH   R0,DOUBLE+6
         OI    DOUBLE+7,X'0F'      SET SIGN
         XC    DOUBLE(6),DOUBLE
         CVB   R0,DOUBLE
         UNPK  JULIANO+6(2),DOUBLE+6(2)
         ST    R0,DOUBLE
         MVC   JULIANW(26),JULIAND SET DAYS PER MONTH
         TM    DOUBLE+3,X'03'      IS YEAR DIVISIBLE BY 4
         BNZ   JULIAN1             NO
         MVI   JULIANW+3,29        YES, CHANGE FEB TO 29
JULIAN1  MVC   DOUBLE+4(4),0(R1)   GET 00YYDDDF
         XC    DOUBLE(6),DOUBLE    GET DDDF
         CVB   R1,DOUBLE           GET DDD IN BINARY
         LA    R15,2               INDEX FOR TABLE
         LR    R0,R15              INDEX INCREMENT
JULIAN2  CH    R1,JULIANW-2(R15)   DAY .LT. OR .EQ. ENTRY
         BNH   JULIAN3             YES, BRANCH
         SH    R1,JULIANW-2(R15)   NO, SUBTRACT ENTRY FROM DDD
         ALR   R15,R0              ADD 2 TO INDEX
         B     JULIAN2             LOOP
JULIAN3  SRL   R15,1               HALVE INDEX TO GET MM
         CVD   R1,DOUBLE           CONVERT DD TO PACKED
         OI    DOUBLE+7,X'0F'      SET SIGN OF DD
         UNPK  JULIANO+3(2),DOUBLE+6(2) UNPACK DD
         CVD   R15,DOUBLE          CONVERT MM TO PACKED
         OI    DOUBLE+7,X'0F'      SET SIGN OF MM
         UNPK  JULIANO+0(2),DOUBLE+6(2) UNPACK MM
         MVI   JULIANO+2,C'/'
         MVI   JULIANO+5,C'/'
         BR    R14
         SPACE
JULIAND  DC    H'31,28,31,30,31,30,31,31,30,31,30,31,999'
         SPACE
TIMEX    MVC   DOUBLE(4),0(R1)
         L     R1,DOUBLE
         SLR   R0,R0
         D     R0,=F'360000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R15),DOUBLE+6(2)
         MVI   2(R15),C'.'
         SRDL  R0,32
         D     R0,=F'6000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  3(2,R15),DOUBLE+6(2)
         MVI   5(R15),C'.'
         SRDL  R0,32
         D     R0,=F'100'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  6(2,R15),DOUBLE+6(2)
         BR    R14
         SPACE
PRINTL   LA    R1,LINE
         LA    R0,133
PRINT    STM   R14,R2,PRINTS
         LA    R2,MYDCBP
         CP    CTRLIN,CTRMAX
         BNH   *+10
         ZAP   CTRLIN,=P'0'
         CP    CTRLIN,=P'0'
         BE    PRINTH
PRINTD   EQU   *
         MVC   PRINTA,PRINTA-1
         L     R14,PRINTS+8        GET LENGTH FROM R0
         L     R1,PRINTS+12        RELOAD R1
         LTR   R14,R14             LENGTH IN R0 = ZERO?
         BNP   PRINTD1             YES - PRINT BLANK LINE
         CH    R14,=H'133'         TOO LONG?
         BNH   *+8                 NO - BRANCH AROUND NEXT INS
         LH    R14,=H'133'         YES - TRUNCATE IT
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   PRINTA+0(0),0(R1)   MOVE DATA
         EX    R14,*-6
PRINTD1  EQU   *
         LA    R1,MYDCBP
         PUT   (1),PRINTA
         AP    CTRLIN,=P'1'
         LM    R14,R2,PRINTS
         BR    R14
PRINTH   EQU   *
         AP    CTRPAG,=P'1'
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVI   PRINTA,C'1'         CARRIAGE CONTROL
         MVC   PRINTA+44(L'HEAD1A),HEAD1A
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         LA    R15,PRINTA+121-9
         MVC   3(6,R15),=X'402020202020'
         ED    3(6,R15),CTRPAG
         MVC   0(4,R15),=C'PAGE'
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD2A),HEAD2A
         MVC   PRINTA+1+L'HEAD2A(L'HEAD2B),HEAD2B
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD3A),HEAD3A
         MVC   PRINTA+1+L'HEAD3A(L'HEAD3B),HEAD3B
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD4A),HEAD4A
         MVC   PRINTA+1+L'HEAD4A(L'HEAD4B),HEAD4B
         PUT   (R2),PRINTA
         SPACE
         B     PRINTD
         SPACE
EXIT12   LA    R15,12
         B     EXITR
EXIT0    SLR   R15,R15
EXITR    ST    R15,RC
         TM    SWITCH,X'80'        IS SYSUT1 OPEN?
         BZ    NOCS                NO - BRANCH
         LA    R1,MYCLOSE
         MVI   0(R1),X'80'
         LA    R5,MYDCBS
         CLOSE ((R5)),MF=(E,(1))
NOCS     EQU   *
         TM    SWITCH,X'40'        IS SYSPRINT OPEN?
         BZ    NOCP                NO - BRANCH
         LA    R1,MYCLOSE
         MVI   0(R1),X'80'
         LA    R4,MYDCBP
         CLOSE ((R4)),MF=(E,(1))
NOCP     EQU   *
         L     R15,RC
         SPACE 1
EXIT     LR    1,13
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=@DATAL
         LM    14,12,12(13)
         BR    14
         SPACE
*----------------------------------------------------------*
*        CONSTANTS                                         *
*----------------------------------------------------------*
         SPACE
MSG01    WTO   'SMF21RP  UNABLE TO OPEN SYSPRINT',                     +
               ROUTCDE=(11),MF=L
         SPACE
MSG02    DC    C'*** ERROR ***  UNABLE TO OPEN SYSUT1'
         SPACE
         PRINT NOGEN
         SPACE
DCBP     DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    +
               RECFM=FBA,LRECL=133,BLKSIZE=133
DCBPL    EQU   *-DCBP
         SPACE
DCBS     DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL),BFTEK=A,              X
               LRECL=32756,BLKSIZE=32760
DCBSL    EQU   *-DCBS
         SPACE
SORTIN   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=133,   X
               BLKSIZE=3990
         SPACE
SORTOUT  DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=133,  X
               EODAD=SMFEOD                                      JDM1
         SPACE
HEAD1A   DC    C'T Y P E  2 1  TAPE  E S V  REPORT (SORTED BY DEVICE)'
HEAD2A   DC    C'  DATE      TIME     ADR/UNIT   VOLSER  '
HEAD2B   DC    C'  PERM   NOISE    ERASE    CLEANER     TEMP      TEMP X
                   '
HEAD3A   DC    C'                                        '
HEAD3B   DC    C' RDERRS   BLKS     GAPS    ACTIONS    RDERRS    WRTERRQ
                   '
HEAD4A   DC    C'--------  --------  ----------  ------ '
HEAD4B   DC    C' -------  ------  --------  --------   -------  ------X
               --  '
PATL1    DC    XL4'40202120'       EDIT PATTERN 1 BYTE
PATL2    DC    XL6'402020202120'   EDIT PATTERN 2 BYTES
DEVTAB   DC    XL4'78008080',CL6' 3480 '
         DC    XL4'32108003',CL6'3400-6'
         DC    XL4'32008003',CL6'3400-5'
         DC    XL4'34208003',CL6'3400-4'
         DC    XL4'34008003',CL6'3400-3'
         DC    XL4'30C08003',CL6'3400-2'
         DC    XL4'30008001',CL6' 2400 '
         DC    XL4'30808001',CL6'2400-1'
         DC    XL4'30C08001',CL6'2400-2'
         DC    XL4'34008001',CL6'2400-3'
         DC    XL4'34208001',CL6'2400-4'
         DC    10X'FF'             FENCE TO BUMP
         CNOP  2,4                 FORCE HALFWORD NOT FULLWORD
SORTDEF  DC    H'24'
         DC    A(SORTC)            ADDR OF SORT CARD
         DC    A(SORTCE)           ADDR OF END OF SORT CARD
         DC    A(SORTR)            ADDR OF RECORD CARD
         DC    A(SORTRE)           ADDR OF END OF RECORD CARD
         DC    2F'0'               NO USED HERE
SORTC    DC    C' SORT FIELDS=(22,4,A,2,18,A),FORMAT=CH '
SORTCE   DC    C' '
SORTR    DC    C' RECORD LENGTH=133,TYPE=F '
SORTRE   DC    C' '
ABORT1   ABEND 1
S21TAB   DC   240C'/',C'0123456789ABCDEF'                        JDM2
         LTORG
OFLGS    EQU   48
RECFM    EQU   36
LRECL    EQU   82
BLKSI    EQU   62
EODAD    EQU   32
EXLST    EQU   36
         SPACE
*----------------------------------------------------------*
*        DSECTS                                            *
*----------------------------------------------------------*
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
MYOPEN   DS    F
MYCLOSE  DS    F
MYDCBP   DS    0F,(DCBPL)X
MYDCBS   DS    0F,(DCBSL)X
SWITCH   DS    F
OPT      DS    F
PARMLO   DS    PL3
PARMHI   DS    PL3
CUA      DS    CL6
RC       DS    F
SMFVL    DS    F
UT2EXL   DS    F
JULIANI  DS    F
JULIANO  DS    CL8
JULIANW  DS    13H
DOUBLE   DS    D
HALF     EQU   DOUBLE,2
FULL     EQU   DOUBLE,4
PREVIOUS DS    CL8
WORK     DS    CL10
PRINTS   DS    5F
CTRPAG   DS    PL3
CTRLIN   DS    PL2
CTRMAX   DS    PL2
         DS    C                   PRINTA-1
PRINTA   DS    CL133
         DS    C                   LINE-1
LINE     DS    CL133
         ORG   LINE
         DS    C
LINDTE   DS    CL8
         DS    CL2
LINTME   DS    CL8
         DS    CL2
LINCAT   DS    CL10                CUA/DEVT
         DS    CL2
LINVOL   DS    CL6                 VOLSER
         DS    CL4
LINPR    DS    CL6                 PERMANENT READ ERRORS
         DS    CL2
LINNB    DS    CL6                 NOISE BLOCKS
         DS    CL2
LINERG   DS    CL8                 ERASE GAPS
         DS    CL2
LINCLN   DS    CL8                 CLEANER ACTIONS
         DS    CL2
LINTR    DS    CL8                 TEMPORARY READ ERRORS
         DS    CL2
LINTWF   DS    CL8                 TEMPORARY WRITE ERRORS
         ORG   LINE+133
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         PRINT ON,GEN
         IFASMFR 21
         END
