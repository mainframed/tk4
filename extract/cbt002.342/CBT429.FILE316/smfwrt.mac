         TITLE '   S M F W R T   '
*$DOC@*****************************************************************
*                                                                     *
*         'SMFWRT' SUBPROGRAM                                         *
*                                                                     *
***********************************************************************
*
*         WRITTEN BY. BILL GODFREY, PRC COMPUTER CENTER INC.
*         INSTALLATION. AIR FORCE DATA SERVICES CENTER, PENTAGON.
*         DATE WRITTEN. APRIL 8 1980.
*         DATE UPDATED. APRIL 7 1981. .
*         ATTRIBUTES. AUTHORIZED, NOT RE-ENTRANT.
*
*             THIS SUBPROGRAM WRITES A USER SMF RECORD.
*             THE CALLING PROGRAM MUST BE APF-AUTHORIZED.
*             THE CALLING PROGRAM PASSES THREE (3) PARAMETERS,
*                1) THE SMF RECORD NUMBER,
*                    AS A 1-BYTE NUMBER (OR, IF BYTE 1 IS A ZERO,
*                    A 2-BYTE NUMBER.)
*                2) THE LENGTH OF THE TEXT TO BE PLACED IN THE RECORD
*                   (IN FIXED POINT BINARY HALFWORD),
*                3) THE TEXT TO BE PLACED IN THE RECORD
*
*             IF THE CALLING PROGRAM IS COMPILED BY THE PL1 OPTIMIZING
*             COMPILER, THE SUBPROGRAM SHOULD BE DECLARED WITH THE
*             'ASSEMBLER' OPTION , WHICH WILL CAUSE THE 3 PARAMETERS
*             TO BE PASSED IN THE MANNER EXPECTED BY THE SUBPROGRAM.
*             EXAMPLE:
*              DECLARE SMFWRT ENTRY OPTIONS(ASSEMBLER);
*              CALL SMFWRT (TYPE,LEN,TEXT);
*
*             REGISTER 12 IS NOT USED BY THIS PROGRAM, TO CONFORM TO
*             THE PL1 OPTIMIZER CONVENTION.  THEREFORE IF THIS
*             SUBPROGRAM ABENDS, THE PL1 ERROR HANDLER WILL BE ABLE
*             TO ISSUE AN APPROPRIATE MESSAGE.
*
*             THE RETURN CODE IN REGISTER 15 AT THE
*             END OF THE SUBPROGRAM WILL BE THE RETURN CODE
*             FROM THE 'SMFWTM' MACRO, WHICH COULD BE
*             0, 4, 8, 16, OR 20.  IF THE MACRO IS NOT
*             EXECUTED, THE RETURN CODE WILL BE 12.
*             SEE THE MVS SMF MANUAL (GC28-0706)
*             FOR A DESCRIPTION OF THE MACRO.
*
*             THE RETURN CODE WILL BE 12 FOR ANY OF THE FOLLOWING
*             REASONS.
*                -  THE SMF RECORD NUMBER IS NOT VALID (128 TO 255),
*                -  THE LENGTH IS NEGATIVE.
*
*             THE SMF RECORD CONSISTS OF A 4-BYTE RECORD DESCRIPTOR
*             WORD (RDW), FOLLOWED BY A 14-BYTE STANDARD SMF HEADER,
*             FOLLOWED BY THE TEXT PASSED IN THE THIRD PARAMETER.
*
*$DOC$*****************************************************************
         SPACE
SMFWRT   CSECT
         SAVE  (14,11),,SMFWRT_&SYSDATE_&SYSTIME
         LR    R11,R15             BASE REGISTER
         USING SMFWRT,R11
         LR    R2,R1               SAVE PARAMETER LIST ADDRESS
         LA    R15,SAVE            POINT TO NEW SAVEAREA
         ST    R13,4(,R15)         CHAIN SAVEAREAS
         ST    R15,8(,R13)         CHAIN SAVEAREAS
         LR    R13,R15             ESTABLISH NEW SAVEAREA
         SPACE
         LA    R15,12              DEFAULT RC=12 IF SMFWTM NOT ISSUED
         LM    R3,R5,0(R2)         ADDRESS THE 3 PARAMETERS
         CLI   0(R3),0             IS NUMBER 1 OR 2 BYTES
         BNE   *+8                 BRANCH IF 1 BYTE
         LA    R3,1(,R3)           2 BYTES. POINT TO SECOND BYTE
         CLI   0(R3),128           USER RECORD TYPE 128-255
         BL    EXIT                EXIT IF NOT VALID TYPE
         LH    R8,0(,R4)           GET TEXT LENGTH
         LTR   R8,R8               IS LENGTH VALID?
         BM    EXIT                EXIT IF LENGTH NOT VALID
         SPACE
*         GETMAIN AN AREA 18 BYTES LONGER THAN THE TEXT.
*         THE SMF RECORD WILL BE CONSTRUCTED IN THIS AREA.
         SPACE
         LA    R0,HDRLEN
         AR    R0,R8
         O     R0,SUBPOOL
         GETMAIN R,LV=(0)
         LR    R9,R1               ADDRESS THE RECORD AREA
         SPACE
*         CONSTRUCT THE RDW AND STANDARD SMF HEADER
         SPACE
         LA    R0,HDRLEN
         AR    R0,R8
         STH   R0,0(,R9)           SET RECORD LENGTH IN RDW
         XC    2(3,R9),2(R9)       ZERO OTHER 2 BYTES OF RDW
         MVI   4(R9),0             CHANGED TO X'02' BY SVC 83
         MVC   5(1,R9),0(R3)       SET RECORD NUMBER
         TIME  BIN
         STM   R0,R1,8(R9)         STORE TIME AND DATE ON FULLWORDS
         MVC   6(8,R9),8(R9)       SHIFT LEFT 2 BYTES
         L     R1,16               CVTPTR
         L     R1,196(,R1)         CVTSMCA
         MVC   14(4,R9),16(R1)     SMCASID, SYSTEM ID
         SPACE
         AGO   .JOBX               BYPASS JOB ID LOGIC
*         BUILD 56 BYTE JOB-IDENTITY INFO AREA.
*         TO USE THIS, HDRLEN MUST BE CHANGED FROM 18 TO 72.
         SPACE
         XC    18(56,R9),18(R9)    FILL AREA WITH ZEROES
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R15,164(,R1)        TCT
         LA    R15,0(,R15)         CLEAR HI ORDER BYTE
         LTR   R15,R15             IS THERE A TCT
         BZ    NOJMR               NO, BRANCH
         L     R15,28(,R15)        JMR
         MVC   18(8,R9),0(R15)     JOBNAME
         MVC   26(8,R9),8(R15)     READER START TIME, DATE
         MVC   34(8,R9),20(R15)    USER DATA
         MVC   42(1,R9),28(R15)    STEP NUMBER
         L     R15,12(,R1)         TIOT
         B     NOJMRX
NOJMR    L     R15,12(,R1)         TIOT
         MVC   18(8,R9),0(R15)     JOBNAME
         MVC   26(8,R9),6(R9)      CURRENT TIME, DATE
NOJMRX   MVC   66(8,R9),8(R15)     STEP NAME
.JOBX    ANOP
         SPACE
*         COPY THE TEXT INTO THE RECORD
         SPACE
         LTR   R8,R8               IS THERE ANY TEXT
         BZ    MOVEX               NO, BRANCH
         SPACE
         LA    R15,HDRLEN(,R9)     GET 'TO' ADDRESS
         LA    R0,0(,R8)           GET LENGTH
         LA    R14,0(,R5)          GET 'FROM' ADDRESS
         SRDL  R0,8                DIVIDE BY 256
         SRL   R1,24               ISOLATE REMAINDER
         LTR   R0,R0               IS QUOTIENT ZERO
         BZ    MOVER               YES, GO MOVE REMAINDER
MOVEQ    MVC   0(256,R15),0(R14)   MOVE 256 BYTES
         LA    R15,256(,R15)
         LA    R14,256(,R14)
         BCT   R0,MOVEQ            DECREMENT QUOTIENT, BRANCH
MOVER    LTR   R1,R1               IS REMAINDER ZERO
         BZ    MOVEX               YES, BRANCH
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED INSTR
         MVC   0(0,R15),0(R14)     (EXECUTED)
         EX    R1,*-6              DO THE ABOVE MVC
MOVEX    EQU   *
         SPACE
*         WRITE THE SMF RECORD USING SVC 83
         SPACE
         SMFWTM (R9)
         SPACE
*         FREE THE GETMAINED AREA
         SPACE
         LA    R0,HDRLEN
         AR    R0,R8
         O     R0,SUBPOOL
         LR    R1,R9
         LR    R6,R15              SAVE R15
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R6              RESTORE R15
         SPACE
EXIT     L     R13,4(,R13)         POINT TO OLD SAVEAREA
         RETURN (14,11),RC=(15)
         SPACE
         LTORG
SUBPOOL  DC    0F'0',AL1(000),AL3(0)
HDRLEN   EQU   18                  LENGTH OF RDW AND HEADER
         DC    0D'0'
SAVE     DC    18F'0'
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2                   PARAMETER LIST
R3       EQU   3                   1ST PARAM, RECORD TYPE (128-25)
R4       EQU   4                   2ND PARAM, DATA LENGTH
R5       EQU   5                   3RD PARAM, DATA
R6       EQU   6                   SAVE RETURN CODE
R7       EQU   7
R8       EQU   8                   LENGTH OF DATA
R9       EQU   9                   GETMAINED RECORD AREA
R10      EQU   10
R11      EQU   11                  BASE
R12      EQU   12                  REMAINS UNCHANGED (FOR PLI)
R13      EQU   13                  REGISTER SAVEAREA
R14      EQU   14
R15      EQU   15
         END
