         TITLE '   S M F 4 8 R P'
*--------------------------------------------------------------------*
*        DATE WRITTEN. 21 MARCH 1991                                 *
*        ATTRIBUTES. RE-ENTRANT.                                     *
*                                                                    *
*        COMMENTS.                                                   *
*        PROGRAM WAS UPDATED TO USE SMF TYPE 48 RECORDS AND TO       *
*        REPORT MORE INFORMATION THAN BEFORE. IT WAS BASED UPON      *
*        THE 'SMFPGACT' PROGRAM BILL GODFREY OF PRC CORPORATION      *
*        WROTE BACK IN 1979. HE IS A GENIUS.                         *
*                                                                    *
*        THERE ARE STILL BSC RJES AROUND AND THEY CAN BE TROUBLE-    *
*        SOME WHEN THEY ARE HAVING PROBLEMS. LINE HITS, NAKS, AND    *
*        TIMEOUTS CAN CAUSE ALOT OF GRIEF.  THIS SHOULD HELP.        *
*                                                                    *
*        JIM MARSHALL, CAPT, USAF (RET)                              *
*                                                                    *
*        REPORTS:                                                    *
*                                                                    *
*        SMF48RMT - REMOTE TERMINAL NAME                             *
*        SMF48LIN - LINE NAME                                        *
*        SMF48IO  - EXCP COUNT                                       *
*        SMF48NAK - # OF NEGATIVE ACKS TO WRITE TEXT                 *
*        SMF48DCK - # OF READ DATA CHECKS TO READ TEXT               *
*        SMF48ERR - SUM OF ALL OTHER LINE ERRORS                     *
*        SMF48LAA - LINE ADAPTER NUMBER (UCBNAME)                    *
*                                                                    *
*        CODE WAS ADDED TO HAVE THRESHOLDS FOR REPORTING OF          *
*        ERRORS. FOR INSTALLATIONS WITH ALOT OF THESE RJES,          *
*        IT WILL CUT DOWN THE VOLUME OF PRINT.                       *
*                                                                    *
*        PRINT RECORD IF ANY OF THE FOLLOWING CONDITIONS ARE TRUE:   *
*                                                                    *
*        SMF48IO  >  100       SET THESE AS YOU WISH, BSC RJE        *
*        SMF48NAK >  000       WILL HAVE A FEW ERRORS WORKING        *
*        SMF48DCK >  000       NORMALLY, ESPICALLY IF DIAL-UP        *
*        SMF48OUT >  005                                             *
*        SMF48ERR >  005                                             *
*                                                                    *
*        PROGRAM ANALYZES SMF TYPE 48 RJE ACTIVITY. ALL 48S ARE      *
*        USED, UNLESS THE PARM FIELD SPECIFIES A RESTRICTED          *
*        RANGE OF JULIAN DATES, E.G., PARM='78240,78240'. PGM        *
*        IS SMART ENOUGH TO SELECT TYPE 48 RECORDS FROM THE          *
*        INPUT FILE.                                                 *
*                                                                    *
*   JCL:     //REPORT   EXEC PGM=SMF48RP,PARM=' - OPTIONAL - '       *
*            //SYSPRINT DD SYSOUT=*                                  *
*            //SYSUT1   DD -- INPUT SMF FILE  --                     *
*                                                                    *
* CHNGE LOG: NONE                                                    *
*--------------------------------------------------------------------*
         SPACE
         MACRO
&NAME    LOADF &R,&L
&NAME    MVC   FULL,&L
         L     &R,FULL
         MEND
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
SMF48RP  AMODE 24
SMF48RP  RMODE 24
SMF48RP  CSECT
         USING *,R12
         B     @START-*(,15)
         DC    AL1(11),CL11'SMF48RP '
         DC    CL16' &SYSDATE &SYSTIME '
         DS    0H
@START   STM   14,12,12(13)
         LR    R12,15
         LR    R2,R1
         GETMAIN R,LV=@DATAL
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         LR    R9,R1
         USING @DATA,R9
         SPACE 1
         SLR   R15,R15
         ST    R15,SWITCH
         ST    R15,RC
         ST    R15,JULIANI
         MVC   CTRPAG,=P'00000'
         MVC   CTRLIN,=P'000'
         MVC   CTRMAX,=P'050'
         MVI   LINE-1,C' '
         MVI   PRINTA-1,C' '
         MVI   OPT,0
         XC    PREVIOUS,PREVIOUS
         SPACE
         L     R2,0(,R2)           POINT TO PARM
         LH    R3,0(,R2)           GET LENGTH
         MVC   PARMLO,=P'00000'
         MVC   PARMHI,=P'99999'
         LTR   R3,R3               LENGTH ZERO?
         BZ    NOPARM              YES - BRANCH
         CH    R3,=H'11'           IS PARM LENGTH 11
         BNE   EXIT12              NO, QUIT
         PACK  PARMLO,2(5,R2)      GET LO DATE YYDDD
         PACK  PARMHI,8(5,R2)      GET HI DATE YYDDD
NOPARM   EQU   *
         SPACE
         LA    R4,MYDCBP
         MVC   0(DCBPL,R4),DCBP
         SPACE
         MVI   MYOPEN,X'80'
         LA    R1,MYOPEN
         SPACE
         OPEN  ((R4),OUTPUT),MF=(E,(1))
         SPACE
         TM    OFLGS(R4),X'10'
         BO    OKDCBP
         LA    R1,MSG01
         WTO   MF=(E,(1))
         B     EXIT12
OKDCBP   EQU   *
         OI    SWITCH,X'80'        SET CLOSE SWITCH ON
         SPACE
         LA    R5,MYDCBS
         MVC   0(DCBSL,R5),DCBS
         LA    R15,SMFEOD
         IC    R14,EODAD(,R5)
         ST    R15,EODAD(,R5)      EODAD=SMFEOD
         STC   R14,EODAD(,R5)
         SPACE
         MVI   MYOPEN,X'80'
         LA    R1,MYOPEN
         OPEN  ((R5),INPUT),MF=(E,(1))
         SPACE
         TM    OFLGS(R5),X'10'
         BO    OKDCBS
         LA    R1,MSG02
         LA    R0,L'MSG02
         BAL   R14,PRINT
         B     EXIT12
OKDCBS   EQU   *
         OI    SWITCH,X'40'        SET CLOSE SWITCH ON
         SPACE
READ     EQU   *
         LA    R5,MYDCBS
         GET   (R5)
         LR    R6,R1
         USING SMFRCD48,R6         GET ADDRESSABILITY
         CLI   SMF48RTY,X'30'      IS IT AN RJE RECORD ?
         BNE   READ
         LR    R10,R6              GET ADDRESS PASSED
         CLC   SMF48SBS(2),=X'0002'  IS IT A JES2 SYSTEM
         BNE   READ
         CP    SMF48DTE,PARMLO
         BL    READ
         CP    SMF48DTE,PARMHI
         BH    READ
         SPACE
*--------------------------------------------------------------------*
*        FILTER THE RECORD ACCORDING TO COUNTS                       *
*--------------------------------------------------------------------*
         SPACE
OK       EQU   *
         L     R15,SMF48IO
         S     R15,=F'100'         GREATER THAN 10 ???
         BP    CONT
         L     R15,SMF48NAK
         S     R15,=F'0'           GREATER THEN  0 ???
         BP    CONT
         L     R15,SMF48DCK
         S     R15,=F'0'           GREATER THAN  0 ???
         BP    CONT
         L     R15,SMF48OUT
         S     R15,=F'5'           GREATER THAN  5 ???
         BP    CONT
         L     R15,SMF48ERR
         S     R15,=F'5'           GREATER THAN  5 ???
         BP    CONT
         B     READ
CONT     EQU   *
         MVC   LINE,LINE-1
         SPACE
         LA    R1,SMF48DTE
         BAL   R14,JULIAN
         MVC   LINDTE,JULIANO
         SPACE
         LA    R15,LINTME
         LA    R1,SMF48TME
         BAL   R14,TIMEX
         SPACE
         MVC   LINRMT(8),SMF48RMT  MOVE IN REMOTE NAME
         SPACE
         MVC   LINLIN(8),SMF48LIN  MOVE IN DCTDEVN
         SPACE
         LOADF R1,SMF48IO
         CVD   R1,DOUBLE
         LA    R15,LINIO
         MVC   0(12,R15),=X'402020206B2020206B212020'
         ED    0(12,R15),DOUBLE+3
         SPACE
         LOADF R1,SMF48NAK
         CVD   R1,DOUBLE
         LA    R15,LINNAK
         MVC   0(12,R15),=X'402020206B2020206B212020'
         ED    0(12,R15),DOUBLE+3
         SPACE
         LOADF R1,SMF48DCK
         CVD   R1,DOUBLE
         LA    R15,LINDCK
         MVC   0(12,R15),=X'402020206B2020206B212020'
         ED    0(12,R15),DOUBLE+3
         SPACE 1
         LOADF R1,SMF48OUT
         CVD   R1,DOUBLE
         LA    R15,LINOUT
         MVC   0(12,R15),=X'402020206B2020206B212020'
         ED    0(12,R15),DOUBLE+3
         SPACE 1
         LOADF R1,SMF48ERR
         CVD   R1,DOUBLE
         LA    R15,LINERR
         MVC   0(12,R15),=X'402020206B2020206B212020'
         ED    0(12,R15),DOUBLE+3
         SPACE 1
         MVC   LINLAA(3),SMF48LAA
         BAL   R14,PRINTL
         B     READ
         SPACE
SMFEOD   EQU   *
         B     EXIT0
         SPACE
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXT-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         BR    R14                 RETURN TO CALLER
HEXT     DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
NUMBER   MVC   FULL,0(R1)
         L     R1,FULL
         CVD   R1,DOUBLE
         MVC   0(9,R15),=X'40202020206B202120'
         ED    0(9,R15),DOUBLE+4
         MVC   0(8,R15),1(R15)
         MVI   8(R15),C' '
         BR    R14
         SPACE
JULIAN   CLC   0(4,R1),JULIANI
         BER   R14
         MVC   JULIANI(4),0(R1)
         MVC   DOUBLE(4),0(R1)
         LH    R0,DOUBLE           GET 00YY
         SLL   R0,4                SHIFT TO 00000YY0
         STH   R0,DOUBLE+6
         OI    DOUBLE+7,X'0F'      SET SIGN
         XC    DOUBLE(6),DOUBLE
         CVB   R0,DOUBLE
         UNPK  JULIANO+6(2),DOUBLE+6(2)
         ST    R0,DOUBLE
         MVC   JULIANW(26),JULIAND SET DAYS PER MONTH
         TM    DOUBLE+3,X'03'      IS YEAR DIVISIBLE BY 4
         BNZ   JULIAN1             NO
         MVI   JULIANW+3,29        YES, CHANGE FEB TO 29
JULIAN1  MVC   DOUBLE+4(4),0(R1)   GET 00YYDDDF
         XC    DOUBLE(6),DOUBLE    GET DDDF
         CVB   R1,DOUBLE           GET DDD IN BINARY
         LA    R15,2               INDEX FOR TABLE
         LR    R0,R15              INDEX INCREMENT
JULIAN2  CH    R1,JULIANW-2(R15)   DAY .LT. OR .EQ. ENTRY
         BNH   JULIAN3             YES, BRANCH
         SH    R1,JULIANW-2(R15)   NO, SUBTRACT ENTRY FROM DDD
         ALR   R15,R0              ADD 2 TO INDEX
         B     JULIAN2             LOOP
JULIAN3  SRL   R15,1               HALVE INDEX TO GET MM
         CVD   R1,DOUBLE           CONVERT DD TO PACKED
         OI    DOUBLE+7,X'0F'      SET SIGN OF DD
         UNPK  JULIANO+3(2),DOUBLE+6(2) UNPACK DD
         CVD   R15,DOUBLE          CONVERT MM TO PACKED
         OI    DOUBLE+7,X'0F'      SET SIGN OF MM
         UNPK  JULIANO+0(2),DOUBLE+6(2) UNPACK MM
         MVI   JULIANO+2,C'/'
         MVI   JULIANO+5,C'/'
         BR    R14
         SPACE
JULIAND  DC    H'31,28,31,30,31,30,31,31,30,31,30,31,999'
         SPACE
TIMEX    MVC   DOUBLE(4),0(R1)
         L     R1,DOUBLE
         SLR   R0,R0
         D     R0,=F'360000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R15),DOUBLE+6(2)
         MVI   2(R15),C'.'
         SRDL  R0,32
         D     R0,=F'6000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  3(2,R15),DOUBLE+6(2)
         MVI   5(R15),C'.'
         SRDL  R0,32
         D     R0,=F'100'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  6(2,R15),DOUBLE+6(2)
         BR    R14
         SPACE
PRINTL   LA    R1,LINE
         LA    R0,133
PRINT    STM   R14,R2,PRINTS
         LA    R2,MYDCBP
         CP    CTRLIN,CTRMAX
         BNH   *+10
         ZAP   CTRLIN,=P'0'
         CP    CTRLIN,=P'0'
         BE    PRINTH
PRINTD   EQU   *
         MVC   PRINTA,PRINTA-1
         L     R14,PRINTS+8        GET LENGTH FROM R0
         L     R1,PRINTS+12        RELOAD R1
         LTR   R14,R14             LENGTH IN R0 = ZERO?
         BNP   PRINTD1             YES - PRINT BLANK LINE
         CH    R14,=H'133'         TOO LONG?
         BNH   *+8                 NO - BRANCH AROUND NEXT INS
         LH    R14,=H'133'         YES - TRUNCATE IT
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   PRINTA+0(0),0(R1)   MOVE DATA
         EX    R14,*-6
PRINTD1  EQU   *
         LA    R1,MYDCBP
         PUT   (1),PRINTA
         AP    CTRLIN,=P'1'
         LM    R14,R2,PRINTS
         BR    R14
PRINTH   EQU   *
         AP    CTRPAG,=P'1'
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVI   PRINTA,C'1'         CARRIAGE CONTROL
         MVC   PRINTA+44(L'HEAD1A),HEAD1A
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         LA    R15,PRINTA+121-9
         MVC   3(6,R15),=X'402020202020'
         ED    3(6,R15),CTRPAG
         MVC   0(4,R15),=C'PAGE'
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD2A),HEAD2A
         MVC   PRINTA+1+L'HEAD2A(L'HEAD2B),HEAD2B
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD3A),HEAD3A
         MVC   PRINTA+1+L'HEAD3A(L'HEAD3B),HEAD3B
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD4A),HEAD4A
         MVC   PRINTA+1+L'HEAD4A(L'HEAD4B),HEAD4B
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         MVC   PRINTA+1(L'HEAD5A),HEAD5A
         MVC   PRINTA+1+L'HEAD5A(L'HEAD5B),HEAD5B
         PUT   (R2),PRINTA
         SPACE
         MVI   PRINTA,C' '         ONE BLANK
         MVC   PRINTA+1(132),PRINTA  ROLL IT
         PUT   (R2),PRINTA
         B     PRINTD
         SPACE
EXIT12   LA    R15,12
         B     EXITR
EXIT0    SLR   R15,R15
EXITR    ST    R15,RC
         TM    SWITCH,X'80'        IS SYSUT1 OPEN?
         BZ    NOCS                NO - BRANCH
         LA    R1,MYCLOSE
         MVI   0(R1),X'80'
         LA    R5,MYDCBS
         CLOSE ((R5)),MF=(E,(1))
NOCS     EQU   *
         TM    SWITCH,X'40'        IS SYSPRINT OPEN?
         BZ    NOCP                NO - BRANCH
         LA    R1,MYCLOSE
         MVI   0(R1),X'80'
         LA    R4,MYDCBP
         CLOSE ((R4)),MF=(E,(1))
NOCP     EQU   *
         L     R15,RC
         SPACE 1
EXIT     LR    1,13
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=@DATAL
         LM    14,12,12(13)
         BR    14
         SPACE
*----------------------------------------------------------*
*        CONSTANTS                                         *
*----------------------------------------------------------*
         SPACE
MSG01    WTO   'SMF48PN  UNABLE TO OPEN SYSPRINT',                     +
               ROUTCDE=(11),MF=L
         SPACE
MSG02    DC    C'*** ERROR ***  UNABLE TO OPEN SYSUT1'
MSG03    DC    C'*** ERROR ***  UNABLE TO OPEN SYSUT2'
         SPACE
         PRINT NOGEN
         SPACE
DCBP     DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    +
               RECFM=FBA,LRECL=133,BLKSIZE=133
DCBPL    EQU   *-DCBP
         SPACE
DCBS     DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL),BFTEK=A,              X
               LRECL=32756,BLKSIZE=32760
DCBSL    EQU   *-DCBS
         SPACE
HEAD1A   DC    C'    R E M O T E   J O B   E N T R Y   ( BSC ONLY)'
HEAD2A   DC    C'  DATE      TIME    '
HEAD2B   DC    C'  REMOTE NAME   LINE NAME        EXCP        # NAKS TOX
                   # DCKS TO     # TIMEOUTS    SUM OTHER     LINE ADPT X
               #'
HEAD3A   DC    C'                    '
HEAD3B   DC    C'                                 COUNT      WRITE TEXTX
               S  READ TEXTS     READ TEXT     LINE ERRS      (UCBNAME)X
               '
HEAD4A   DC    C'                    '
HEAD4B   DC    C'   SMF48RMT      SMF48LIN      SMF48IO       SMF48NAK X
                    SMF48DCK      SMF48OUT      SMF48ERR      SMF48LAA'
HEAD5A   DC    C'--------  --------  '
HEAD5B   DC    C' ------------  ------------  ------------  -----------X
               -  ------------  ------------  ------------  -----------X
               - '
         LTORG
OFLGS    EQU   48
RECFM    EQU   36
LRECL    EQU   82
BLKSI    EQU   62
EODAD    EQU   32
EXLST    EQU   36
         SPACE
*----------------------------------------------------------*
*        DSECTS                                            *
*----------------------------------------------------------*
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
MYOPEN   DS    F
MYCLOSE  DS    F
MYDCBP   DS    0F,(DCBPL)X
MYDCBS   DS    0F,(DCBSL)X
SWITCH   DS    F
OPT      DS    F
PARMLO   DS    PL3
PARMHI   DS    PL3
RC       DS    F
SMFVL    DS    F
UT2EXL   DS    F
JULIANI  DS    F
JULIANO  DS    CL8
JULIANW  DS    13H
DOUBLE   DS    D
HALF     EQU   DOUBLE,2
FULL     EQU   DOUBLE,4
PREVIOUS DS    CL8
WORK     DS    CL10
SNRRATE  DS    F
SNIRATE  DS    F
SNORATE  DS    F
PRINTS   DS    5F
CTRPAG   DS    PL3
CTRLIN   DS    PL2
CTRMAX   DS    PL2
         DS    C                   PRINTA-1
PRINTA   DS    CL133
         DS    C                   LINE-1
LINE     DS    CL133
         ORG   LINE
         DS    C
LINDTE   DS    CL8
         DS    CL2
LINTME   DS    CL8
         DS    CL5
LINRMT   DS    CL8
         DS    CL7
LINLIN   DS    CL9
         DS    CL2
LINIO    DS    CL12
         DS    CL2
LINNAK   DS    CL12
         DS    CL2
LINDCK   DS    CL12
         DS    CL2
LINOUT   DS    CL12
         DS    CL2
LINERR   DS    CL12
         DS    CL7
LINLAA   DS    CL7
         ORG   LINE+133
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         PRINT ON,GEN
         IFASMFR 48
         END
