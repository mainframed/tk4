         TITLE '   P D S M A T C H   '
*$DOC@*****************************************************************
*         'PDSMATCH'                                                  *
***********************************************************************
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER, MCLEAN VA
*        DATE WRITTEN. APRIL 20 1982.
*        DATE UPDATED. APRIL 29 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*          THIS PROGRAM COMPARES THE DIRECTORIES OF TWO PARTITIONED
*          DATA SETS AND PRINTS A REPORT SHOWING WHICH MEMBERS
*          MATCH AND WHICH MEMBERS DO NOT MATCH OR ARE NOT PRESENT
*          IN BOTH DIRECTORIES.
*
*          MEMBERS ARE SAID TO MATCH IF THEIR NAMES ARE THE SAME,
*          AND (IF PARM=USER) IF ALL THE OTHER DATA IN THEIR
*          DIRECTORY ENTRIES ARE EQUAL (EXCEPT FIELDS CONTAINING
*          TTR TRACK ADDRESSES).
*
*          DATA RECORDS FOR THE MEMBERS ARE NOT COMPARED.
*          ONLY THE INFORMATION IN THE DIRECTORY IS COMPARED.
*
*          DDNAMES.
*           SYSPRINT - REPORT OUTPUT
*           SYSLIB1  - PDS 1 INPUT
*           SYSLIB2  - PDS 2 INPUT
*
*          IF PARM=USER
*             MEMBERS THAT ARE PRESENT IN BOTH LIBRARIES
*             WILL BE COMPARED FOR MATCHING USERDATA.
*             USERDATA CONSISTS OF UP TO 64 BYTES OF DATA
*             IN THE DIRECTORY ENTRY WHICH IS PUT THERE BY
*             THE LINKAGE EDITOR, SPF EDIT, AND OTHERS.
*             NOTE. WITH PARM=USER,
*             IF TWO MEMBERS HAVE THE SAME NAME AND NEITHER
*             HAS ANY USERDATA, THEY ARE TREATED AS UNEQUAL,
*             WITH A UNIQUE MESSAGE FOR THIS CASE.
*          IF PARM=EQO
*             ONLY MEMBERS THAT MATCH WILL BE LISTED.
*          IF PARM=NEO (OR PARM=SHORT)
*             ONLY MEMBERS THAT DONT MATCH WILL BE LISTED.
*          IF NEITHER OF THE ABOVE,
*             ALL MEMBERS WILL BE LISTED FOR BOTH LIBRARIES.
*
*        FEATURES TO BE ADDED IN THE FUTURE.
*
*          IF PARM=COPYNEW
*          A DECK OF IEBCOPY CONTROL CARDS WILL BE PUNCHED
*          WHICH CAN BE USED TO COPY MEMBERS FROM SYSLIB1 TO SYSLIB2
*          IF THE MEMBERS
*             A) ARE PRESENT IN SYSLIB1 BUT NOT IN SYSLIB2.
*
*          IF PARM=COPYUPD
*          A DECK OF IEBCOPY CONTROL CARDS WILL BE PUNCHED
*          WHICH CAN BE USED TO COPY MEMBERS FROM SYSLIB1 TO SYSLIB2
*          IF THE MEMBERS
*             B) ARE PRESENT IN BOTH LIBRARIES BUT THE ONE IN SYSLIB2
*                HAS AN OLDER SPF DATE-OF-LAST-UPDATE.
*
*        LOG OF CHANGES.
*          27APR82.  WARN IF MEMBERS ARE EQUAL BUT NO USERDATA.
*                    FORMAT OF REPORT CHANGED.
*          28APR82.  ADD RDJFCB AND PRINT THE DSNAMES.
*                    MAKE THE DDNAMES SYSLIB1 AND SYSLIB2.
*                    ZERO ANY TTR'S IN THE USER DATA SO THAT THEY
*                    WILL NOT BE USED WHEN COMPARING LOAD MODULES.
*                    ADD PARM OPTIONS.
*          28APR82.  SHOW CRITERIA.
*$DOC$*****************************************************************
         SPACE
PDSMATCH START
         USING *,R10,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'PDSMATCH'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)
         LR    R10,15
         LA    R15,1
         LA    R11,4095(R15,R10)
         LR    R4,R1               SAVE PARM POINTER
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING @DATA,R13
         SR    R15,R15
         STH   R15,RC
         STC   R15,STATUS
         STC   R15,OPTIONS
         MVC   DDNAMEP,=CL8'SYSPRINT'
         MVC   DDNAME1,=CL8'SYSLIB1'
         MVC   DDNAME2,=CL8'SYSLIB2'
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1
         MVI   MESG-1,C' '
         ZAP   REPORTPG,=P'0'
         ZAP   REPORTLN,=P'0'
         ZAP   REPORTMX,=P'60'
         MVI   REPORTO-1,C' '
         MVI   JFCB1,C' '
         MVC   JFCB1+1(175),JFCB1
         MVC   JFCB2(176),JFCB1
         SPACE
************************************************************
*         OPEN THE PRINT FILE                              *
************************************************************
         SPACE
         MVC   PRTDCBW(PRTDCBL),PRTDCB
         LA    R2,PRTDCBW
         MVC   DDNAM(8,R2),DDNAMEP
         MVI   OPEN,X'80'
         OPEN  ((R2),OUTPUT),MF=(E,OPEN)
         TM    OFLGS(R2),X'10'
         BNO   EXIT12
         OI    STATUS,PRTOPEN
         B     PRTX
PRTEXITO CLC   62(2,R1),=H'0'      IS BLKSIZE ZERO
         BNE   0(R14)              NO
         MVC   62(2,R1),82(R1)     YES - MAKE IT SAME AS LRECL
         BR    R14
PRTX     EQU   *
         SPACE
************************************************************
*         SCAN THE PARM FIELD                              *
************************************************************
         SPACE
*
*               REGISTERS USED
*                R14 - RETURN FROM PARSE
*                R15 - ADDRESS OF REMAINING PARM DATA
*                R0  - WORK
*                R1  - USED BY TRT INSTRUCTION
*                R2  - USED BY TRT INSTRUCTION
*                R3  - LENGTH OF REMAINING PARM DATA MINUS 1
*
*               PARSE MUST NOT ALTER R0, R1, OR R3
*
         L     R15,0(,R4)          POINT TO PARM
         LH    R3,0(,R15)          GET LENGTH OF PARM
         LTR   R3,R3               IS THERE A PARM
         BZ    PARMX               NO, BRANCH
         LA    R15,2(,R15)         POINT TO PARM DATA
         SPACE
         SR    R1,R1               INSURE HI ORDER BYTE ZERO
         BCTR  R3,0                LENGTH CODE OF PARM DATA
         B     *+16                SKIP EXECUTED INSTRUCTIONS
TRTNONBL TRT   0(0,R15),TABNONBL   (EXECUTED)
TRTBLANK TRT   0(0,R15),TABBLANK   (EXECUTED)
*              NOTE: TRT CAN CHANGE 8 BITS OF R2 AND 24 BITS OF R1
PARMLOOP EX    R3,TRTNONBL         FIND A NONBLANK
         BZ    PARMX               BRANCH IF ALL BLANKS
         LR    R0,R1               GET ADDRESS OF STRING
         SR    R0,R15              GET LENGTH OF PRECEDING BLANKS
         SR    R3,R0               GET LENGTH OF REMAINING TEXT
         LR    R15,R1              GET ADDRESS OF NONBLANK
         EX    R3,TRTBLANK         FIND A BLANK
         BZ    PARMLAST            BRANCH IF NOT FOUND
         LR    R0,R1               GET ADDRESS OF BLANK
         SR    R0,R15              GET LENGTH OF FIELD
         BAL   R14,PARSE
         SR    R3,R0               GET LENGTH CODE OF REMAINING TEXT
         BZ    PARMX               BRANCH IF ONE TRAILING BLANK
         LR    R15,R1              POINT TO BLANK
         B     PARMLOOP
PARMLAST LA    R0,1(,R3)           GET LENGTH
         BAL   R14,PARSE
         B     PARMX
         SPACE
************************************************************
*         PROCESS EACH PARM KEYWORD                        *
************************************************************
         SPACE
PARSE    STM   R14,R1,PARSES       SAVE REGS
         CH    R0,=H'5'            IS KEYWORD LENGTH 5
         BNE   PARSL5X             NO, BRANCH
         CLC   0(5,R15),=C'SHORT'
         BNE   *+8
         OI    OPTIONS,OPTNEO      SHORT SAME AS NEO
         B     PARSX
PARSL5X  EQU   *
         CH    R0,=H'4'            IS KEYWORD LENGTH 4
         BNE   PARSL4X             NO, BRANCH
         CLC   0(4,R15),=C'USER'
         BNE   *+8
         OI    OPTIONS,OPTUSER
         B     PARSX
PARSL4X  EQU   *
         CH    R0,=H'3'            IS KEYWORD LENGTH 3
         BNE   PARSL3X             NO, BRANCH
         CLC   0(3,R15),=C'EQO'    EQONLY
         BNE   *+8
         OI    OPTIONS,OPTEQO
         CLC   0(3,R15),=C'NEO'    NEONLY
         BNE   *+8
         OI    OPTIONS,OPTNEO
         B     PARSX
PARSL3X  EQU   *
PARSX    LM    R14,R1,PARSES
         BR    R14
         SPACE
PARMX    EQU   *
         SPACE
************************************************************
*         SHOW CRITERIA                                    *
************************************************************
         SPACE
         TM    OPTIONS,OPTUSER
         BO    PRTCRI2
         LA    R1,MSGCRI1A
         LA    R0,L'MSGCRI1A
         BAL   R14,PRTMSG
         LA    R1,MSGCRI1B
         LA    R0,L'MSGCRI1B
         BAL   R14,PRTMSG
         B     PRTCRIX
PRTCRI2  LA    R1,MSGCRI2A
         LA    R0,L'MSGCRI2A
         BAL   R14,PRTMSG
         LA    R1,MSGCRI2B
         LA    R0,L'MSGCRI2B
         BAL   R14,PRTMSG
PRTCRIX  LA    R1,=C' '
         LA    R0,1
         BAL   R14,PRTMSG
         SPACE
************************************************************
*         OPEN THE FIRST PDS                               *
************************************************************
         SPACE
         MVC   DIRDCBW(DIRDCBL),DIRDCB
         LA    R2,DIRDCBW          ADDRESS OF DCB
         MVC   DDNAM(8,R2),DDNAME1 CHANGE THE DDNAME
         LA    R3,DDNAM(,R2)       POINT TO DDNAME FOR DEVTYPE
         DEVTYPE (R3),DEVAREA
         LTR   R15,R15             IS DDNAME ALLOCATED
         BNZ   EXIT12              NO, BRANCH
         SPACE
         LA    R1,DIREXLST         PUT EXLST
         IC    R0,EXLST(,R2)        ADDRESS
         ST    R1,EXLST(,R2)         IN
         STC   R0,EXLST(,R2)          DCB
         LA    R0,JFCB1            PUT JFCB ADDRESS
         ST    R0,0(,R1)            IN EXLST
         MVI   0(R1),X'87'           AND INDICATE EXLST ENTRY TYPE
         MVI   RDJFCB,X'80'
         RDJFCB ((R2)),MF=(E,RDJFCB)
         SPACE
         MVI   OPEN,X'80'
         OPEN  ((R2),INPUT),MF=(E,OPEN)
         TM    OFLGS(R2),X'10'
         BNO   EXIT12
         OI    STATUS,DIROPEN
         SPACE
         MVC   LINE,LINE-1         BLANK LINE
         MVC   LINE+1(10),=C'LIBRARY1 -'
         LA    R15,LINE+12
         MVC   0(44,R15),JFCB1
         LA    R15,44(,R15)
APPENDV1 CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,APPENDV1
         MVC   2(2,R15),=C'ON'
         MVC   5(6,R15),JFCB1+118  VOLUME SERIAL
         BAL   R14,REPORTL         PUT HEADING LIBRARY1 DSN
         SPACE
         L     R0,DIRSIZE
         GETMAIN R,LV=(0)
         ST    R1,DIRFREE          SAVE FOR FREEMAIN
         LR    R3,R1
         ST    R3,DIRPTR1          SAVE FOR WALKING THRU DIR 1
         OI    STATUS,GOTMAIN
         MVC   DIRDECBW(DIRDECBL),DIRDECB
         MVI   DIRSW,0
         BAL   R8,DIRIN
         CLOSE ((R2)),MF=(E,OPEN)
         NI    STATUS,255-DIROPEN
         TM    DIRSW,1             WAS DIRECTORY VALID
         BZ    EXIT12              NO, QUIT
         LA    R3,256(,R3)         SET START OF SECOND DIRECTORY
         ST    R3,DIRPTR2          SAVE FOR WALKING THRU DIR 2
         SPACE
************************************************************
*         OPEN THE SECOND PDS                              *
************************************************************
         SPACE
         MVC   DIRDCBW(DIRDCBL),DIRDCB
         LA    R2,DIRDCBW          ADDRESS OF DCB
         MVC   DDNAM(8,R2),DDNAME2 CHANGE THE DDNAME
         LA    R3,DDNAM(,R2)       POINT TO DDNAME FOR DEVTYPE
         DEVTYPE (R3),DEVAREA
         LTR   R15,R15             IS DDNAME ALLOCATED
         BNZ   EXIT12              NO, BRANCH
         SPACE
         LA    R1,DIREXLST         PUT EXLST
         IC    R0,EXLST(,R2)        ADDRESS
         ST    R1,EXLST(,R2)         IN
         STC   R0,EXLST(,R2)          DCB
         LA    R0,JFCB2            PUT JFCB ADDRESS
         ST    R0,0(,R1)            IN EXLST
         MVI   0(R1),X'87'           AND INDICATE EXLST ENTRY TYPE
         MVI   RDJFCB,X'80'
         RDJFCB ((R2)),MF=(E,RDJFCB)
         SPACE
         MVI   OPEN,X'80'
         OPEN  ((R2),INPUT),MF=(E,OPEN)
         TM    OFLGS(R2),X'10'
         BNO   EXIT12
         OI    STATUS,DIROPEN
         SPACE
         MVC   LINE,LINE-1         BLANK LINE
         MVC   LINE+1(10),=C'LIBRARY2 -'
         LA    R15,LINE+12
         MVC   0(44,R15),JFCB2
         LA    R15,44(,R15)
APPENDV2 CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,APPENDV2
         MVC   2(2,R15),=C'ON'
         MVC   5(6,R15),JFCB2+118  VOLUME SERIAL
         BAL   R14,REPORTL         PUT HEADING LIBRARY2 DSN
         MVC   LINE,LINE-1         BLANK LINE
         BAL   R14,REPORTL         PUT HEADING BLANK LINE
         SPACE
         L     R3,DIRPTR2
         MVC   DIRDECBW(DIRDECBL),DIRDECB
         MVI   DIRSW,0
         BAL   R8,DIRIN
         CLOSE ((R2)),MF=(E,OPEN)
         NI    STATUS,255-DIROPEN
         TM    DIRSW,1             WAS DIRECTORY VALID
         BZ    EXIT12              NO, QUIT
         B     COMPARE
         SPACE
************************************************************
*         READ THE DIRECTORY INTO STORAGE                  *
************************************************************
         SPACE
DIRIN    XC    DIRBLKS,DIRBLKS
         XC    DIRBLKSU,DIRBLKSU
         XC    MEMBERS,MEMBERS
         XC    ALIASES,ALIASES
         SPACE
         B     *+8
DIRREAD  LA    R3,256(,R3)
         READ  DIRDECBW,SF,(R2),(R3),256,MF=E
         CHECK DIRDECBW
         TM    DIRSW,2             I/O ERROR
         BO    DIRERR              YES, BRANCH
         LA    R1,1
         A     R1,DIRBLKS
         ST    R1,DIRBLKS
*        TM    DIRSW,1             ARE WE PAST USED BLOCKS
*        BO    DIRREAD             YES, BRANCH
         LR    R1,R3               POINT TO DATA JUST READ
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         LTR   R0,R0               IS THIS NEGATIVE
         BM    DIRINV              YES, NOT A DIRECTORY BLOCK
         CH    R0,=H'256'          IS THIS TOO LARGE
         BH    DIRINV              YES, NOT A DIRECTORY BLOCK
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
DIRENTRY CLC   0(8,R1),=8X'FF'     END OF MEMBERS
         BE    DIRUSED
         TM    11(R1),X'80'        ALIAS
         BO    DIRALIAS
         LA    R15,1               COUNT NON-ALIAS MEMBERS
         A     R15,MEMBERS
         ST    R15,MEMBERS
         B     DIRNEXT
DIRALIAS LA    R15,1               COUNT ALIAS MEMBERS
         A     R15,ALIASES
         ST    R15,ALIASES
DIRNEXT  SLR   R15,R15
         IC    R15,11(,R1)
         N     R15,=F'31'          SET OFF ALL BUT LAST 5 BITS
         SLL   R15,1               CHANGE HALFWORDS TO BYTES
         LA    R1,12(R15,R1)       POINT PAST USER DATA
         CR    R1,R0               END OF BLOCK
         BL    DIRENTRY            NO, BRANCH
         B     DIRREAD             YES, READ NEXT BLOCK
DIRUSED  EQU   *
         OI    DIRSW,1             STOP COUNTING MEMBERS
         MVC   DIRBLKSU,DIRBLKS    SAVE NUMBER OF USED BLOCKS
*        B     DIRREAD             GO COUNT UNUSED BLOCKS
         B     DIREND
         SPACE
DIRSYN   EQU   *
         SYNADAF ACSMETH=BSAM
         MVC   MESSAGE(72),50(R1)
         OI    DIRSW,2
         SYNADRLS
         BR    R14
DIRINV   LA    R1,MSGINV
         LA    R0,L'MSGINV
         BAL   R14,PRTMSG
         OI    DIRSW,4
         B     DIREND
DIRERR   LA    R1,MESSAGE
         LA    R0,72
         BAL   R14,PRTMSG
         OI    DIRSW,4
         B     DIREND
DIREOF   LA    R1,MSGEOF
         LA    R0,L'MSGEOF
         BAL   R14,PRTMSG
         OI    DIRSW,4
DIREND   EQU   *
         BR    R8
         SPACE
************************************************************
*         COMPARE ROUTINE                                  *
************************************************************
         SPACE
COMPARE  EQU   *
         L     R1,DIRPTR1          POINT TO FIRST BLOCK OF PDS1
         ST    R1,PDSWORK1+8
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
         LA    R2,PDSWORK1
         BAL   R8,GETMEM1          GET FIRST MEMBER
         SPACE
         L     R1,DIRPTR2          POINT TO FIRST BLOCK OF PDS2
         ST    R1,PDSWORK2+8
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
         LA    R2,PDSWORK2
         BAL   R8,GETMEM1          GET FIRST MEMBER
         SPACE
************************************************************
*         READY TO COMPARE                                 *
************************************************************
         SPACE
         LA    R3,PDSWORK1
         LA    R4,PDSWORK2
READY    CLC   20(8,R3),20(R4)
         BL    SHOW1
         BH    SHOW2
         CLC   20(8,R3),=8X'FF'
         BE    DONE
         SPACE
************************************************************
*         MEMBER EXISTS IN BOTH LIBRARIES                  *
************************************************************
         SPACE
         MVC   LINE,LINE-1
         MVC   LINE+01(8),20(R3)
         MVC   LINE+22(8),20(R4)
         TM    OPTIONS,OPTUSER    ARE WE COMPARING USERDATA
         BZ    MATCHP             NO, OMIT MESSAGE
         CLC   19(73,R3),19(R4)   IS USERDATA THE SAME
         BE    SAME               YES, BRANCH
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(25),=C'NON-SPF USER DATA UNEQUAL'
*              SEE IF BOTH ARE SPF STATS.
*              IF BOTH ARE SPF STATS, SHOW WHICH IS MORE RECENT
         TM    12(R3),SPFFLAG      IS USERDATA SPF
         BNO   DIFF1               NO, BRANCH
         TM    12(R4),SPFFLAG      IS USERDATA SPF
         BNO   DIFF2               NO, BRANCH
         CLC   28+8(6,R3),28+8(R4) COMPARE YY.DDD HH.MM LAST UPDATED
         BH    RECENT1
         BL    RECENT2
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(32),=C'SPF STATS DIFFER BUT NOT IN DATE'
         B     MATCHP
DIFF1    TM    12(R4),SPFFLAG      IS USERDATA SPF
         BNO   MATCHP              NO - NEITHER MEMBER IS SPF
         MVC   LINE+32(27),=C'ONLY LIBRARY2 HAS SPF STATS'
         B     MATCHP
DIFF2    MVC   LINE+32(27),=C'ONLY LIBRARY1 HAS SPF STATS'
         B     MATCHP
RECENT1  MVC   LINE+10(11),=C' <-- NEWER '
         MVC   LINE+32(25),=C'LIBRARY1 IS MORE RECENT  '
         B     MATCHP
RECENT2  MVC   LINE+10(11),=C' NEWER --> '
         MVC   LINE+32(25),=C'LIBRARY2 IS MORE RECENT  '
         B     MATCHP
         SPACE
************************************************************
*         DIRECTORY DATA MATCHES                           *
************************************************************
         SPACE
SAME     CLI   15(R3),0           ZERO USERDATA IN BOTH
         BNE   SAME2              NO, BRANCH
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(27),=C'NEITHER MEMBER HAS USERDATA'
         B     MATCHP
SAME2    TM    12(R3),SPFFLAG     SPF STATS IN BOTH
         BO    MATCHP             YES - OMIT MESSAGE
         MVC   LINE+10(11),=C' ********* '
         MVC   LINE+32(23),=C'NON-SPF USER DATA EQUAL'
MATCHP   CLI   LINE+32,C' '        IS THIS A MATCH
         BNE   MATCHNE             NO, BRANCH
         TM    OPTIONS,OPTNEO     ARE WE PRINTING .NE. ONLY
         BO    MATCHX             YES, DONT PRINT THESE
         B     MATCHPR
MATCHNE  TM    OPTIONS,OPTEQO     ARE WE PRINTING .EQ. ONLY
         BO    MATCHX             YES, DONT PRINT THESE
MATCHPR  BAL   R14,REPORTL
MATCHX   LR    R2,R3
         BAL   R8,GETMEM
         LR    R2,R4
         BAL   R8,GETMEM
         B     READY
         SPACE
************************************************************
*         MEMBER EXISTS ONLY IN LIBRARY 1                  *
************************************************************
         SPACE
SHOW1    TM    OPTIONS,OPTEQO     ARE WE PRINTING .EQ. ONLY
         BO    SHOW1X             YES, DONT PRINT THESE
         MVC   LINE,LINE-1
         MVC   LINE+01(8),20(R3)
         MVC   LINE+32(23),=C'MEMBER IN LIBRARY1 ONLY'
         BAL   R14,REPORTL
SHOW1X   LR    R2,R3
         BAL   R8,GETMEM
         B     READY
         SPACE
************************************************************
*         MEMBER EXISTS ONLY IN LIBRARY 2                  *
************************************************************
         SPACE
SHOW2    TM    OPTIONS,OPTEQO     ARE WE PRINTING .EQ. ONLY
         BO    SHOW2X             YES, DONT PRINT THESE
         MVC   LINE,LINE-1
         MVC   LINE+22(8),20(R4)
         MVC   LINE+32(23),=C'MEMBER IN LIBRARY2 ONLY'
         BAL   R14,REPORTL
SHOW2X   LR    R2,R4
         BAL   R8,GETMEM
         B     READY
         SPACE
************************************************************
*         END OF BOTH DIRECTORIES                          *
************************************************************
         SPACE
DONE     B     EXIT
         SPACE
************************************************************
*         SUBROUTINE TO GET NEXT MEMBER FROM DIRECTORY     *
************************************************************
         SPACE
GETMEM   LM    R0,R1,0(R2)
         CLC   0(8,R1),=8X'FF'     END OF MEMBERS
         BE    GETEOF
GET1R    SLR   R15,R15
         IC    R15,11(,R1)
         N     R15,=F'31'          SET OFF ALL BUT LAST 5 BITS
         SLL   R15,1               CHANGE HALFWORDS TO BYTES
         LA    R1,12(R15,R1)       POINT PAST USER DATA
         CR    R1,R0               END OF BLOCK
         BL    GETMEM1             NO, BRANCH
         LA    R1,256              YES, READ NEXT BLOCK
         A     R1,8(,R2)           YES, READ NEXT BLOCK
         ST    R1,8(,R2)           YES, READ NEXT BLOCK
         LH    R0,0(,R1)           GET NUMBER OF BYTES IN USE
         AR    R0,R1               POINT PAST LAST BYTE
         LA    R1,2(,R1)           POINT TO FIRST MEMBER
*        B     GET1R
GETMEM1  STM   R0,R1,0(R2)
         MVC   20(8,R2),0(R1)      SAVE MEMBER NAME
         CLC   0(8,R1),=8X'FF'     END OF MEMBERS
         BE    GETEOF
         MVC   16(4,R2),8(R1)      SAVE TTR, ALIAS BIT, ETC
         XC    28(64,R2),28(R2)    ZERO USER DATA AREA
*              COPY USER DATA
         SLR   R15,R15
         IC    R15,11(,R1)
         N     R15,=F'31'          SET OFF ALL BUT LAST 5 BITS
         SLL   R15,1               CHANGE HALFWORDS TO BYTES
         ST    R15,12(,R2)         SAVE LENGTH OF USER DATA
         LTR   R15,R15
         BZ    GETZERO
         TM    OPTIONS,OPTUSER     IS USERDATA TO BE COMPARED
         BZ    GETZERO             NO, BRANCH
         CLI   15(R2),30           IS LENGTH 30
         BNE   *+8                 NO
         OI    12(R2),SPFFLAG      YES, INDICATE IT MAY BE SPF STATS
         BCTR  R15,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   28(0,R2),12(R1)     EXECUTED
         EX    R15,*-6             MOVE THE USER DATA
         TM    11(R1),B'01100000'  ANY TTR'S IN THE USER DATA
         BZ    GETZERO             NO, BRANCH
         NI    12(R2),255-SPFFLAG  YES, CAN'T BE SPF
         IC    R15,11(,R1)         YES, PREPARE TO ZERO THEM
         N     R15,=A(X'0000007F') SET OFF ALIAS BIT
         SRL   R15,5               SHIFT OUT RIGHT 5 BITS
         LA    R14,28(,R2)         POINT TO FIRST TTR IN USER DATA
GETUTTR  XC    0(3,R14),0(R14)     ZERO THE TTR IN THE USER DATA
         LA    R14,4(,R14)         POINT TO NEXT TTR IN THE USER DATA
         BCT   R15,GETUTTR         REPEAT UNTIL R15 ZERO
GETZERO  EQU   *
GETEOF   BR    R8
         SPACE
************************************************************
*         MESSAGE ROUTINE                                  *
************************************************************
         SPACE
PRTMSG   STM   R14,R1,PRTMSGS
         MVC   MESG,MESG-1
         LR    R15,R0
         BCTR  R15,0
         B     *+10
         MVC   MESG+1(0),0(R1)
         EX    R15,*-6
         LA    R1,MESG
         LA    R0,L'MESG
         BAL   R14,REPORT
         LM    R14,R1,PRTMSGS
         BR    R14
         SPACE
************************************************************
*         REPORT WRITER                                    *
************************************************************
         SPACE
REPORTL  LA    R1,LINE
         LA    R0,121
REPORT   STM   R14,R3,REPORTS
         LA    R3,PRTDCBW          POINT R3 TO DCB
         CP    REPORTLN,REPORTMX   IS LINECOUNT LIMIT REACHED
         BL    *+10                NO
         ZAP   REPORTLN,=P'0'      YES, FORCE NEW PAGE
         CP    REPORTLN,=P'0'      IS NEW PAGE REQUESTED?
         BE    REPORTH             YES, GO PRINT HEADING
REPORTD  CH    R0,=H'121'          IS OUTPUT LINE LENGTH OK?
         BNL   REPORTP             YES, BRANCH
         MVC   REPORTO,REPORTO-1   BLANK THE WORK AREA
         LTR   R14,R0              COPY LENGTH
         BNP   REPORTB             BLANK LINE IF < 1
         BCTR  R14,0               LENGTH MINUS 1
         B     *+10
         MVC   REPORTO(0),0(R1)    COPY OUTPUT LINE
         EX    R14,*-6             EXECUTE MVC
REPORTB  LA    R1,REPORTO          POINT TO NEW OUTPUT LINE
REPORTP  LR    R2,R1               POINT R2 TO OUTPUT LINE
         PUT   (R3),(R2)           WRITE OUTPUT LINE
         AP    REPORTLN,=P'1'      INCREMENT LINE COUNTER
REPORTX  LM    R14,R3,REPORTS      RESTORE REGS
         BR    R14                 RETURN
REPORTH  AP    REPORTPG,=P'1'      INCREMENT PAGE COUNTER
         MVC   REPORTO,REPORTO-1   BLANK HEADING
         MVI   REPORTO,C'1'        CC = NEW PAGE
         MVC   REPORTO+1(L'HEAD1),HEAD1
         LA    R1,REPORTO+79-9     RIGHT EDGE PAGE NO
         MVC   3(6,R1),=X'402020202020' EDIT MASK
         ED    3(6,R1),REPORTPG    UNPACK PAGE NO
         MVC   0(4,R1),=C'PAGE'    INSERT 'PAGE'
         PUT   (R3),REPORTO        PUT HEADING LINE 1
         MVC   REPORTO,REPORTO-1   BLANK LINE
         PUT   (R3),REPORTO        PUT HEADING BLANK LINE
         AP    REPORTLN,=P'2'      COUNT HEADING LINES
REPORTHX LM    R0,R1,REPORTS+8     RESTORE R0 AND R1
         B     REPORTD             GO PRINT DETAIL LINE
         EJECT
************************************************************
*         TERMINATION                                      *
************************************************************
         SPACE 1
EXIT12   MVI   RC+1,12
EXIT     EQU   *
         TM    STATUS,GOTMAIN      IS DIRECTORY AREA GOTTEN
         BZ    EXITGOTX            NO, BYPASS FREEMAIN
         L     R0,DIRSIZE
         L     R1,DIRFREE
         FREEMAIN R,LV=(0),A=(1)
EXITGOTX EQU   *
         TM    STATUS,PRTOPEN      IS SYSPRINT OPEN
         BZ    EXITPRTX            NO - BYPASS CLOSE
         LA    R2,PRTDCBW
         MVI   CLOSE,X'80'
         CLOSE ((R2)),MF=(E,CLOSE)
         FREEPOOL (R2)
EXITPRTX EQU   *
         LH    R15,RC
         LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         LR    R2,R15
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
************************************************************
*        CONSTANTS                                         *
************************************************************
         SPACE
         LTORG
HEAD1    DC    C'--- PDSMATCH --- PDS DIRECTORY COMPARE UTILITY ---'
DIRSIZE  DC    0F'0',AL1(1),AL3(128*1024)  128K FOR 2 DIRECTORIES
YMDNY    DC    AL2(334,304,273,243)
         DC    AL2(212,181,151,120)
         DC    AL2(90,59,31,0)
YMDLY    DC    AL2(335,305,274,244)
         DC    AL2(213,182,152,121)
         DC    AL2(91,60,31,0)
         PRINT NOGEN
PRTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      +
               RECFM=FBA,LRECL=121,EXLST=PRTEXLST
PRTDCBL  EQU   *-PRTDCB
         SPACE
DIRDCB   DCB   DDNAME=DYNAM,DSORG=PO,MACRF=R,EODAD=DIREOF,SYNAD=DIRSYN,X
               RECFM=U,BLKSIZE=256
DIRDCBL  EQU   *-DIRDCB
         SPACE
         PRINT GEN
PRTEXLST DC    0F'0',X'85',AL3(PRTEXITO)
DIRREADM READ  DIRDECB,SF,MF=L
DIRDECBL EQU   *-DIRDECB
         PRINT GEN
HEXTAB   DC    C'0123456789ABCDEF'
MSGINV   DC    C'INVALID DIRECTORY BLOCK'
MSGEOF   DC    C'NO END-OF-DIRECTORY INDICATOR FOUND'
MSGCRI1A DC    C'CRITERIA FOR MATCHING IS MEMBER NAME ONLY.  USERDATA I+
               N THE DIRECTORY'
MSGCRI1B DC    C'(SUCH AS SPF STATISTICS, LOAD ATTRIBUTES) IS NOT COMPA+
               RED.'
MSGCRI2A DC    C'CRITERIA FOR MATCHING IS MEMBER NAME AND ALL USERDATA +
               IN THE DIRECTORY'
MSGCRI2B DC    C'(SUCH AS SPF STATISTICS, LOAD ATTRIBUTES) EXCEPT TTR F+
               IELDS.'
         DC    0D'0'
TABNONBL DC    64X'FF'
         DC    X'00'               BLANK
         DC    42X'FF'
         DC    X'00'               COMMA
         DC    148X'FF'
TABBLANK DC    64X'00'
         DC    X'40'               BLANK
         DC    42X'00'
         DC    X'6B'               COMMA
         DC    148X'00'
         DC    0D'0'
EODAD    EQU   32
RECFM    EQU   36
EXLST    EQU   36
DDNAM    EQU   40
OFLGS    EQU   48
SYNAD    EQU   56
BLKSI    EQU   62
LRECL    EQU   82
         DC    0D'0'
         SPACE
************************************************************
*        DSECTS                                            *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
HALF     EQU   DOUBLE,2
FULL     EQU   DOUBLE,4
DDNAMEP  DS    CL8
DDNAME1  DS    CL8
DDNAME2  DS    CL8
RC       DS    H
STATUS   DS    X
PRTOPEN  EQU   X'80'
DIROPEN  EQU   X'40'
GOTMAIN  EQU   X'20'
OPTIONS  DS    X
OPTUSER  EQU   X'80'
OPTEQO   EQU   X'40'
OPTNEO   EQU   X'20'
DIRFREE  DS    F
DIRPTR1  DS    F
DIRPTR2  DS    F
DIRSW    DS    F
DIRBLKS  DS    F
DIRBLKSU DS    F
MEMBERS  DS    F
ALIASES  DS    F
PRTDCBW  DS    0F,(PRTDCBL)X
DIRDCBW  DS    0F,(DIRDCBL)X
DIRDECBW DS    0F,(DIRDECBL)X
DIREXLST DS    F
DEVAREA  DS    2F
CLOSE    DS    0F
OPEN     DS    F
RDJFCB   DS    F
PARSES   DS    6F
REPORTS  DS    6F
REPORTPG DS    PL3
REPORTLN DS    PL2
REPORTMX DS    PL2
PRTMSGS  DS    4F
PDSWORK1 DS    3F
         DS    F                   USER DATA LENGTH
SPFFLAG  EQU   X'80'               USER DATA CONTAINS SPF STATISTICS
         DS    XL3                 TTR
         DS    X                   ALIAS BIT AND USER DATA LENGTH
         DS    CL8                 MEMBER NAME
         DS    CL64                USER DATA
PDSWORK2 DS    3F
         DS    F                   USER DATA LENGTH
         DS    XL3                 TTR
         DS    X                   ALIAS BIT AND USER DATA LENGTH
         DS    CL8                 MEMBER NAME
         DS    CL64                USER DATA
LINEB    DS    C  (LINE-1)
LINE     DS    CL133
MESGB    DS    C  (MESG-1)
MESG     DS    CL133
MESSAGE  DS    CL72
REPORTOB DS    C (REPORTO-1)
REPORTO  DS    CL133
JFCB1    DS    0D,CL176
JFCB2    DS    0D,CL176
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
