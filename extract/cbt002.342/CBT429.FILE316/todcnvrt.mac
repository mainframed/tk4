         TITLE '   T O D C N V R T  '
*---------------------------------------------------------------------*
*                                                                     *
*        'TODCNVRT'                                                   *
*                                                                     *
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.    *
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.            *
*        DATE WRITTEN. DECEMBER 7 1976.                               *
*        DATE UPDATED. JANUARY 31 1977.                               *
*        ATTRIBUTES. RE-ENTRANT.                                      *
*                                                                     *
*        DESCRIPTION.                                                 *
*         THIS SUBPROGRAM CONVERTS THE RESULTS OF A                   *
*         'STORE CLOCK' INSTRUCTION TO EBCDIC. THE LOGIC              *
*         IS TAKEN STRAIGHT OUT OF MODULE 'AMDPRSEG' IN               *
*         AMDPRDMP (5752-SC113), VS2 RELEASE 3.0                      *
*         WITH A FEW MODIFICATIONS TO MAKE THE PASSING                *
*         OF PARAMETERS MORE CONVENTIONAL.                            *
*                                                                     *
*            INPUT - LIST OF 5 ADDRESSES POINTED TO BY REG 1          *
*                       1) PTR TO CVTTZ VALUE                         *
*                       2) PTR TO 8-BYTE TOD CLOCK VALUE              *
*                       3) PTR TO OUTPUT AREA                         *
*                       4) PTR TO OPTION BYTE X'01' OR X'02'          *
*                       5) PTR TO 80-BYTE WORKAREA                    *
*                    REG 15 = ENTRY ADDRESS  REG 14 = RETURN ADDRES   *
*                    REG 13 = 72 BYTE REGISTER SAVEAREA ADDRESS       *
*                                                                     *
*            OUTPUT - EBCDIC TIME IN OUTPUT AREA                      *
*                     REG 15 = 4 IF INPUT CLOCK TIME ALL ZEROES       *
*                     REG 15 = 0 ALL OTHER CASES.                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
TODCNVRT CSECT
         SAVE  (14,12),,&SYSDATE
         LR    R12,15
         USING TODCNVRT,R12
         L     R1,16(,R1)              SAVEPTR
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R14,R13
         LR    R13,R1
         L     R1,24(,R14)             RESTORE R1
         USING MYDSECT,R13
         USING PARAMS,R1
         SPACE 1
         L     R7,TODPTR
         MVC   CVRTAREA(8),0(R7)
         SPACE
*---------------------------------------------------------------------*
*        CHANGE TOD TO LOCAL TIME
*---------------------------------------------------------------------*
         SPACE
         L     R7,CVTTZPTR         GET ADDR OF TZ FIELD
         L     R7,0(,R7)           R7 = TZ VALUE
         L     R15,MINUS1
         CLR   R7,R15              IS TZ = MINUS 1?
         BNE   TZADD               NO - USE TZ FROM CALLER
         L     R7,16               YES - USE TZ FROM CVT
         L     R7,X'130'(,R7)      GET CVTTZ
TZADD    EQU   *
         AL    R7,CVRTAREA         ADD TZ TO FIRST WORD
         ST    R7,CVRTAREA
         SPACE
         LM    R4,R5,CVRTAREA
         SRDL  R4,12               REMOVE INSIGNIFICANT BITS
         D     R4,SIXTYMIL         DIVIDE BY 60,000,000
         SPACE
         L     R7,OPTION
         CLI   0(R7),2
         BE    RELTVTME
         B     FULLDATE
         SPACE
*---------------------------------------------------------------------*
*        RELATIVE TIME CONVERSION -- THIS ROUTINE CONVERTS THE TOD
*        VALUE TO RELATIVE SECONDS.MICROSECONDS FROM 0 A.M. OF THE
*        CURRENT DAY REFLECTED BY THE TOD VALUE. THE CONVERTED TIME
*        IS PLACED LEFT JUSTIFIED IN THE OUTPUT AREA IN THE FORM
*        SSSSS.MMMMMM (EBCDIC).   UPON ENTRY TO THIS ROUTINE THE TOD
*        VALUE HAS ALREADY BEEN CHANGED TO TOTAL MINUTES (IN R5) AND
*        NUMBER OF MICROSECONDS INTO CURRENT MINUTE (IN R4).
*---------------------------------------------------------------------*
         SPACE
RELTVTME EQU   *
         L     R7,TODPTR
         CLC   0(8,R7),=XL8'00'
         BNE   RNOTZERO
         L     R7,OUTAREA
         MVI   12(R7),C' '
         MVC   13(11,R7),12(R7)
         MVC   0(12,R7),=C'00000.000000'
         LA    R15,4
         B     EXIT
         SPACE
RNOTZERO EQU   *
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF SECONDS INTO CURRENT MINUTE
*---------------------------------------------------------------------*
         SPACE
         LR    R15,R4
         SLR   R14,R14
         D     R14,MILLION
         ST    R15,TIMELEFT
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF MICROSEC INTO CURRENT SECOND
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14              REMAINDER IN R4
         SPACE
         L     R2,OUTAREA
         LA    R2,6(,R2)           OUT LOC FOR MICROSEC
         SPACE
*---------------------------------------------------------------------*
*        CONVERT MICROSEC TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         CVD   R4,CVRTAREA
         UNPK  0(6,R2),CVRTAREA+4(4)
         OI    5(R2),X'F0'
         SPACE
         L     R7,OUTAREA
         MVI   5(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF SECONDS INTO CURRENT DAY
*        AND CONVERT TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         LR    R14,R5              R4=((R5//1440)*60)+SECONDS
         SRDA  R14,32
         D     R14,=F'1440'
         MH    R14,=H'60'
         LA    R15,TIMELEFT
         LA    R14,0(,R15)         ADD SECONDS
         LR    R4,R14
         SPACE
         LR    R2,R7               POINT TO OUTPUT AREA
         CVD   R4,CVRTAREA
         UNPK  0(5,R2),CVRTAREA+5(3)  UNPACK SECONDS
         OI    4(R2),X'F0'
         SPACE
         B     EXIT0
         SPACE
*---------------------------------------------------------------------*
*        FULL DATE AND TIME CONVERSION -- THIS ROUTINE
*        CONVERTS THE TOD VALUE TO YEAR, JULIAN DAY, HOURS
*        MINUTES, SECONDS, AND MICROSECONDS. THE CONVERTED
*        TIME IS PLACED LEFT-JUSTIFIED IN THE OUTPUT AREA
*        IN THE FORM YYYYDDDHH.MM.SS.MMMMMM (EBCDIC). UPON
*        ENTRY TO THIS ROUTINE, THE TOD VALUE HAS ALREADY
*        BEEN CHANGED TO TOTAL MINUTES SINCE EPOCH (IN R5)
*        AND NUMBER OF MICROSECS INTO CURRENT MINUTE (R4).
*---------------------------------------------------------------------*
         SPACE
FULLDATE EQU   *
         L     R7,TODPTR
         CLC   0(8,R7),=XL8'00'
         BNE   FNOTZERO
         L     R7,OUTAREA
         MVI   22(R7),C' '
         MVI   23(R7),C' '
         MVC   0(22,R7),=C'000000000.00.00.000000'
         LA    R15,4
         B     EXIT
         SPACE
FNOTZERO EQU   *
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NUMBER OF SECONDS (R4/1,000,000)
*---------------------------------------------------------------------*
         SPACE
         LA    R7,TIMELEFT
         LR    R15,R4
         SLR   R14,R14
         D     R14,MILLION
         ST    R15,0(,R7)
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF MICROSECONDS (R4//1,000,000)
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
*---------------------------------------------------------------------*
*        CONVERT MICROSEC TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         L     R7,OUTAREA
         LA    R2,16(,R7)
         SPACE
         CVD   R4,CVRTAREA
         UNPK  0(6,R2),CVRTAREA+4(4)
         OI    5(R2),X'F0'
         SPACE
         MVI   15(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CONVERT SECONDS TO EBCDIC
*---------------------------------------------------------------------*
         SPACE
         L     R4,TIMELEFT
         LA    R2,13(,R7)
         SPACE
         CVD   R4,CVRTAREA
         UNPK  0(2,R2),CVRTAREA+6(2)
         OI    1(R2),X'F0'
         SPACE
         MVI   12(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF MINUTES INTO CURRENT HOUR.
*        R5 CONTAINS TOTAL NO. OF MINUTES FROM THE EPOCH.
*---------------------------------------------------------------------*
         SPACE
         LR    R15,R5
         SLR   R14,R14
         D     R14,=F'60'
         ST    R15,TIMELEFT
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE MINUTES INTO CURRENT HOUR
*        R4 = R5//60
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
         LA    R2,10(,R7)
         CVD   R4,CVRTAREA
         UNPK  0(2,R2),CVRTAREA+6(2)
         OI    1(R2),X'F0'
         SPACE
         MVI   9(R7),C'.'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF HOURS INTO CURRENT DAY.
*        TIMELEFT CONTAINS TOTAL NO. OF HOURS SINCE EPOCH.
*---------------------------------------------------------------------*
         SPACE
         L     R5,TIMELEFT
         LR    R15,R5
         SLR   R14,R14
         D     R14,=F'24'
         ST    R15,TIMELEFT        TOTAL DAYS SINCE EPOCH
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE NO. OF HOURS INTO CURRENT DAY.
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
         LA    R2,7(,R7)
         CVD   R4,CVRTAREA
         UNPK  0(2,R2),CVRTAREA+6(2)
         OI    1(R2),X'F0'
         SPACE
*---------------------------------------------------------------------*
*        CALCULATE THE CURRENT YEAR AND JULIAN DAY
*        USING 'TIMELEFT' WHICH CONTAINS THE TOTAL NUMBER
*        OF ELAPSED DAYS SINCE 1900. FIRST CHECK WHETHER
*        THE TIME IS IN THE 1900 THRU 1903 ERA (I.E. LESS
*        THAN 1460 ELAPSED DAYS). IF SO, THE TIME MUST BE
*        HANDLED IN A SPECIAL WAY SINCE 1900 IS NOT A LEAP
*        YEAR AND EACH YEAR IN THAT 4 YEAR SPAN THUS CON-
*        TAINS 365 DAYS. IF THE ELAPSED TIME HOWEVER IS
*        GREATER THAN 1459 DAYS, THEN EVERY 4 YEARS CON-
*        TAIN 1461 DAYS RATHER THAN 1460 AND THE FIRST
*        YEAR OF EACH GROUP IS A LEAP YEAR. THESE FOUR
*        YEAR GROUPS ARE REFERRED TO AS LEAP YEAR GROUPS.
*        THE YEAR AND THE DAY WHEN THE ELAPSED TIME FALLS
*        INTO ONE OF THESE GROUPS MUST BE CALCULATED USING
*        STANDARD FORMULAS DIFFERENT FROM THE FORMULAS
*        USED WHEN THE TIME IS WITHIN 1900 TO 1903.
*---------------------------------------------------------------------*
         SPACE
         L     R7,TIMELEFT
         CH    R7,=H'1460'
         BNL   POST1903
         SPACE
NOLEAPYR EQU   *
         SPACE
*---------------------------------------------------------------------*
*        R3 = (TIMELEFT//365)+1   CURRENT DAY
*---------------------------------------------------------------------*
         SPACE
         LR    R14,R7
         SRDA  R14,32
         D     R14,=F'365'
         AH    R14,=H'1'
         LR    R3,R14
         SPACE
*---------------------------------------------------------------------*
*        R6 = (TIMELEFT/365)     CURRENT YEAR
*---------------------------------------------------------------------*
         SPACE
         AH    R15,=H'1900'
         LR    R6,R15
         B     DATECOM
         SPACE
*---------------------------------------------------------------------*
*        THE TIME ELAPSED IS 1460 OR MORE DAYS.
*        CALCULATE R5, THE RELATIVE LEAP YEAR GROUP SINCE
*        1904, AND R4, THE NUMBER OF DAYS ELAPSED IN THE
*        CURRENT LEAP YEAR GROUP. USE THESE VALUES IN THE
*        FORMULAS.  IN THE FORMULA USED TO CALCULATE THE
*        JULIAN DAY, THE EXPRESSION IN PARENTHESES IS THE
*        NUMBER OF WHOLE DAYS THAT HAVE PAST IN THE
*        CURRENT YEAR. BECAUSE THE CURRENT DAY HAS NOT YET
*        ELAPSED, IT IS NOT INCLUDED IN THE RESULT PRO-
*        DUCED BY THE EXPRESSION AND THEREFORE 1 MUST BE
*        ADDED TO GET THE ACTUAL JULIAN DAY.
*        WITHIN THE EXPRESSION THE FIRST TERM, R, MUST BE
*        ADJUSTED BY 1 (I.E, L/731) IF THE TOTAL DAYS INTO
*        THE LEAP YEAR GROUP IS GREATER THAN OR EQUAL TO
*        2 YEARS, AND AGAIN BY 1 (I.E, L/1096) IF THE
*        TOTAL DAYS IS EQUAL TO OR GREATER THAN 3 YEARS.
*        THE AFFECT OF THIS IS THAT THE 2ND AND 3RD YEARS
*        ARE FORCED TO 366 DAYS ONCE THE TOTAL DAYS INTO
*        THE GROUP EXCEEDS EACH OF THESE YEARS. THIS IS
*        NECESSARY BECAUSE A DIVISOR OF 366 IS USED.
*        THE SECOND TERM (W * 4) YIELDS THE RELATIVE
*        NUMBER OF YEARS SINCE 1904 UP TO AND INCLUDING
*        THE LEAP YEAR IN THE CURRENT GROUP. THE THIRD
*        TERM ( (L-1)/365 ) YIELDS THE RELATIVE YEAR
*        WITHIN THE CURRENT LEAP YEAR GROUP. THUS IF THE
*        CURRENT YEAR IS A LEAP YEAR THE RELATIVE YEAR IS
*        ZERO AND THE THIRD TERM WILL RESULT IN ZERO.
*---------------------------------------------------------------------*
         SPACE
POST1903 EQU   *
LEAPYR   EQU   *
         SPACE
*---------------------------------------------------------------------*
*        TIMELEFT=TIMELEFT-1460  1904 BASE
*---------------------------------------------------------------------*
         SPACE
         L     R7,TIMELEFT
         SH    R7,=H'1460'
         STH   R7,TIMELEFT
         SPACE
*---------------------------------------------------------------------*
*        R5 = TIMELEFT/1461
*---------------------------------------------------------------------*
         SPACE
         LR    R14,R7
         SRDA  R14,32
         D     R14,=F'1461'
         LR    R5,R15
         SPACE
*---------------------------------------------------------------------*
*        R4 = TIMELEFT//1461
*---------------------------------------------------------------------*
         SPACE
         LR    R4,R14
         SPACE
*---------------------------------------------------------------------*
*        R3 = ((L+L/731+L/1096)//336)+1  JULIAN DAY
*---------------------------------------------------------------------*
         SPACE
         LR    R15,R4
         SLR   R14,R14
         D     R14,=F'731'
         LR    R14,R15
         ALR   R14,R4
         LR    R3,R14
         LR    R15,R4
         SLR   R14,R14
         D     R14,=F'1096'
         LR    R14,R15
         ALR   R14,R3
         SRDA  R14,32
         D     R14,=F'366'
         AH    R14,=H'1'
         LR    R3,R14
         SPACE
*---------------------------------------------------------------------*
*        R6 = 1904+(W*4)+(L-1)/365       YEAR
*---------------------------------------------------------------------*
         SPACE
         LR    R6,R5
         SLA   R6,2
         AH    R6,=H'1904'
         LR    R14,R4
         BCTR  R14,0
         SRDA  R14,32
         D     R14,=F'365'
         ALR   R6,R15
         SPACE
DATECOM  EQU   *
         L     R7,OUTAREA
         LA    R2,4(,R7)
         CVD   R3,CVRTAREA
         UNPK  0(3,R2),CVRTAREA+6(2)
         OI    2(R2),X'F0'
         SPACE
         LA    R2,0(,R7)
         CVD   R6,CVRTAREA
         UNPK  0(4,R2),CVRTAREA+5(3)
         OI    3(R2),X'F0'
         SPACE
EXIT0    SR    15,15
EXIT     LR    1,13
         L     13,4(,13)
         ST    15,16(,13)
         LM    14,12,12(13)
         BR    14
         SPACE
*---------------------------------------------------------------------*
*        CONSTANTS
*---------------------------------------------------------------------*
         SPACE
MILLION  DC    F'1000000'
SIXTYMIL DC    F'60000000'
MINUS1   DC    F'-1'
         LTORG
         SPACE
*---------------------------------------------------------------------*
*        DSECTS
*---------------------------------------------------------------------*
         SPACE
MYDSECT  DSECT
TIMELEFT DS    0F                  1ST FULLWORD OF SAVEAREA
         DS    18F                 REGISTER SAVEAREA
CVRTAREA DS    D
MYDSECTL EQU   *-MYDSECT
         SPACE
PARAMS   DSECT
CVTTZPTR DS    A                   ADDR OF CVTTZ VALUE
TODPTR   DS    A                   ADDR OF TOD CLOCK VALUE
OUTAREA  DS    A                   ADDR OF OUTPUT AREA
OPTION   DS    A                   ADDR OF OPTION BYTE
SAVEPTR  DS    A                   ADDR OF SAVEAREA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
