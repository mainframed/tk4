BLOK TITLE '  "BLOKHEAD" -- BLOCK PAGE HEADER ROUTINE -- BY BARTH'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* *                                                               * *
* *                      " B L O K H E A D "                      * *
* *                                                               * *
* *                  BLOCK PAGE HEADER ROUTINE                    * *
* *                     BY C. WRANDLE BARTH                       * *
* *                 GODDARD SPACE FLIGHT CENTER                   * *
* *                         2 APRIL 1971                          * *
* *                                                               * *
* *      JIM MARSHALL, CAPT, USAF (RET)                           * *
* *                                                               * *
* *      HAVE HAD THIS CODE FOR A WHILE AND FINALLY GOT AROUND    * *
* *      TO PUTTING IT ON THE TAPE. IT IS REAL USEFUL FOR         * *
* *      PUTTING BLOCK LETTERS (12X12) INTO A FILE OF SOME KIND.  * *
* *                                                               * *
* *      THERE ARE SOME THINGS TO NOTE, THAT IS NOT TOLD TO       * *
* *      YOU. ALWAYS PUT A 'DCB' DEFINITION ON THE PRINT DD       * *
* *      STATEMENT OR YOU WILL S013. ALSO IF YOU WANT THIS TO     * *
* *      GO INTO A FILE PRECEDING SOME DATA, REMEMBER TO PUT      * *
* *      DISP OF 'MOD' ON THE JCL STATEMEMNT.                     * *
* *                                                               * *
* *      USED THE ROUTINE OF EALSD095 FROM EASTERN AIRLINES       * *
* *      OF LONG AGO FOR THE BLOCK LETTERS. THAT CODE IS ALSO     * *
* *      IN THIS FILE.                                            * *
* *                                                               * *
* *      REMEMBER TO COMPILE WITH THE BATCH OPTION WHEN YOU       * *
* *      ASSEMBLE 'BLOKHD' AND 'EALSO095' TOGETHER.               * *
* *                                                               * *
* *      HAVE FUN.                                                * *
* *                                                               * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        "BLOKHEAD" IS A SHORT PROGRAM WHICH WILL PROVIDE BLOCK     *
*  LETTER HEADINGS ON A DATA SET USING THE MODIFIED "IEFSD095"*     *
*  ROUTINE TO GENERATE THE LETTERS.  IT IS PARTICULARLY USEFUL FOR  *
*  HEADING MICROFILM WITH IDENTIFYING FRAMES WHICH ARE READABLE     *
*  WITHOUT INSERTION INTO A VIEWER.                                 *
*                                                                   *
*        "BLOKHEAD" MAY BE INVOKED EITHER BY EXECUTE CARD OR IT     *
*  MAY BE LINKED TO DIRECTLY.  THE INFORMATION TO BE PRINTED IS     *
*  PASSED IN THE PARAMETER OF THE EXECUTE CARD IN THE FORM:         *
*                                                                   *
*        PARM='(DDNAME),AAA...AA,BBB...BB,CCC...CC,'                *
*                                                                   *
*  THE FIRST PARAMETER IS THE DDNAME OF THE DATA SET TO RECEIVE     *
*  THE HEADING.  IF PRESENT, IT MUST BE INCLOSED IN PARENTHESES.    *
*  IF OMITTED, "SYSPRINT" WILL BE ASSUMED.  THE REMAINING PARAMETERS*
*  ARE THE LINES TO BE PRINTED.  "BLOKHEAD" WILL ATTEMPT TO PUT     *
*  EACH PARAMETER ON A LINE BY ITSELF, BUT IF THE LINE WILL NOT     *
*  HOLD THE FULL PARAMETER, IT WILL BE SPLIT UP.  EACH LINE WILL    *
*  BE CENTERED ON THE PAGE.  THE PARAMETERS MAY CONTAIN ANY VALID   *
*  PN/QN CHAIN CHARACTER PLUS THE EXCLAMATION POINT AND CENT SIGN.  *
*  SINCE THE COMMA WAS USED ABOVE TO DELIMIT THE PARAMETERS, IT     *
*  MAY NOT BE A PART OF A PARAMETER;  HOWEVER, ANY CHARACTER (EXCEPT*
*  AN OPEN PARENTHESIS) MAY BE USED TO DELIMIT THE PARAMETER STRING.*
*  FOR EXAMPLE:                                                     *
*                                                                   *
*        PARM='(SYSUT1)/A,B,C/D,E,F/'                               *
*                                                                   *
*  COULD BE USED TO PRINT THE TWO LINES "A,B,C" AND "D,E,F".        *
*  TWO CONSECUTIVE DELIMITERS WILL CAUSE A PAGE EJECT.  IF A LINE   *
*  CONSISTS ONLY OF THE CENT SIGN CHARACTER, A FULL PAGE OF         *
*  ASTERISKS WILL BE PRINTED.  THE FINAL DELIMITER IS OPTIONAL.     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        IF "BLOKHEAD" IS LINKED TO, THE SAME PARAMETER SHOULD BE   *
*  PROVIDED IN A FORMAT COMPATABLE TO THE EXEC CARD---THAT IS,      *
*  REGISTER 1 SHOULD POINT TO A HALF-WORD CHARACTER COUNT FOLLOWED  *
*  BY THE PARAMETER PROPER.                                         *
*                                                                   *
*        EXAMPLES:                                                  *
*                                                                   *
*        PARM='(DD1),NOW,IS,THE TIME,,FOR,ALL,GOOD,MEN...'          *
*                                                                   *
*  WOULD GIVE ON DD1...           NOW            FOR                *
*                                  IS            ALL                *
*                              THE TIME         GOOD                *
*                                               MEN...              *
*                                                                   *
*        PARM='/1234567890/0987654321/C/'                           *
*                                     ×                             *
*                                     CENT SIGN                     *
*                                                                   *
*  WOULD GIVE ON SYSPRINT...   1234567890      **********           *
*                              0987654321      **********           *
*                                              **********           *
*                                              **********           *
*                                                                   *
*  FOR REGULAR PRINTOUT, THE MAXIMUM NUMBER OF CHARACTERS PER LINE  *
*  IS 9 (132 CHARACTER LINE).  THE MAXIMUM NUMBER OF LINES PER      *
*  PAGE IS 4 (66 LINE PAGE).                                        *
*                                                                   *
*        "BLOKHEAD" IS REUSABLE.                                    *
*                                                           -CWB-   *
*                                                                   *
*  _______________                                                  *
*  *THE UNMODIFIED "IEFSD095" MAY BE USED, BUT IT ONLY HANDLES      *
*        LETTERS AND NUMBERS;  THE GODDARD MODIFIED VERSION ALSO    *
*        OUTPUTS ALL PN/QN CHARACTERS AND THE EXCLAMATION POINT     *
*        AND CENT SIGN.                                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         PRINT ON,NOGEN
BLOKHD   AMODE 24
BLOKHD   RMODE 24
BLOKHD   CSECT
         USING *,#15               PROVIDE TEMPORARY ADDRESSABILITY.
         SAVE  (14,12),,*          SAVE REGISTERS.
         L     #PARM,0(#1)         GET ADDRESS OF PARAMETER.
         CNOP  0,4                 ADVANCE TO FULLWORD.
         BAL   #1,LINKUP           GET ADDRESS OF SAVE AREA.
SAVE     DC    18F'0'              REGISTER SAVE AREA.
LINKUP   ST    #13,SAVE+4          CROSS-LINK SAVE AREAS.
         ST    #1,8(#13)
         LR    #13,#1              POINT TO NEW SAVE AREA.
         DROP  #15                 USE #13 AS NEW BASE
         USING SAVE,#13                 REGISTER.
         LH    #COUNT,0(#PARM)     PICK UP LENGTH OF PARM.
         LA    #PARM,2(#PARM)      ADVANCE TO BEGINNING OF PARM.
         MVC   DCB+40(8),=C'SYSPRINT'
*                                  SET DEFAULT DDNAME.
         CLI   0(#PARM),C'('       DOES PARM BEGIN WITH "("?
         BNE   OPENIT              IF NOT, GO OPEN DCB.
         BCTR  #COUNT,0            COUNT OFF "(".
         LA    #DDNAME,DCB+40      POINT TO RECEIVING FIELD FOR DDNAME.
         MVI   DCB+40,C' '         CLEAR OUT OLD DDNAME.
         MVC   DCB+41(7),DCB+40    CLEAR IT ALL OUT.
         LA    #LIMIT,8(#PARM)     POINT TO 8 CHARACTERS FROM NOW.
         SPACE
NEXTONE  LA    #PARM,1(#PARM)      ADVANCE TO NEXT CHARACTER.
         CLI   0(#PARM),C')'       IS THIS THE ")"?
         BE    STEP1               IF SO, BRANCH.
         CR    #PARM,#LIMIT        HAVE WE PASSED 8 CHARACTERS?
         BH    ZILTCH              IF SO, OOPS;  BRANCH.
         IC    #1,0(#PARM)         PICK UP CHARACTER AND
         STC   #1,0(#DDNAME)            PUT IT INTO DCB.
         LA    #DDNAME,1(#DDNAME)  POINT TO NEXT DDNAME CHARACTER.
         BCT   #COUNT,NEXTONE      LOWER PARM COUNT AND CONTINUE.
         B     ZILTCH              RUNNING OUT OF PARM HERE IS A GOOF.
         SPACE
STEP1    LA    #PARM,1(#PARM)      ADVANCE PAST ")".
         BCT   #COUNT,OPENIT       DOWN COUNT AND GO OPEN DCB.
         B     ZILTCH              IF #COUNT GOES ZERO HERE, BRANCH.
         SPACE
OPENIT   OPEN  (DCB,OUTPUT)        OPEN THE DCB.
         TM    DCB+36,B'00000010'  DOES THE DATA SET USE MACHINE
         BO    BADRECFM                 CONTROL?  IF SO, BRANCH.
         PUT   DCB                 FIRST PUT TO GET FIRST BUFFER.
         LR    #OUTAREA,#1         GET ADDRESS OF FIRST BUFFER.
         SR    #DELIMTR,#DELIMTR   CLEAR REGISTER FOR IC INSTRUCTIONS.
         SR    #CHAR,#CHAR         DITTO.
         IC    #DELIMTR,0(#PARM)   GET DELIMITER.
         LH    #LENGTH,DCB+82      GET DCB'S LRECL.
         TM    DCB+36,B'10000000'  IS THE RECFM V?
         BO    CALCMAX             IF NOT, BRANCH.
         STH   #LENGTH,LENGCNTR    PUT TRUE MAX LRECL INTO FULL WORD'S
*                                       HIGH END FOR USE AS VARIABLE
*                                       LENGTH RECORD CONTROL WORD.
         MVC   0(4,#OUTAREA),LENGCNTR
*                                  STORE IT INTO RECORD BUFFER.
*                                       NOTE THAT ALL RECFM=V IN
*                                       "BLOKHEAD" ARE OUTPUT AT
*                                       MAXIMUM LENGTH.
         LA    #1,4                GET A 4.
         AR    #OUTAREA,#1         ADVANCE PAST CONTROL WORD.
         SR    #LENGTH,#1          DECREASE #LENGTH BY 4.
*                                  NOW CONTINUE PROCESSING AS FOR
*                                       RECFM F OR U.
CALCMAX  LA    #LINEMAX,1(#LENGTH) LRECL INCLUDES CONTROL CHARACTER;
*                                       PUT LRECL - 1 (CONTROL CH.)
*                                       + 2 INTO #LINEMAX.
*                                       (THE +2 IS FOR THE TWO SEPARA-
*                                       TING BLANKS BETWEEN CHARACTERS
*                                       WHICH NEED NOT FOLLOW LAST
*                                       CHARACTER.)
         SR    #DIVIDND,#DIVIDND   CLEAR PRECEDING EVEN REGISTER FOR
*                                       DIVISION.
         D     #DIVIDND,=F'14'     DIVIDE BY 14 TO GET NUMBER PER LINE
*                                       IN #LINEMAX.
         LTR   #LINEMAX,#LINEMAX   IS THERE ENOUGH ROOM FOR AT LEAST
*                                       ONE?
         BZ    KABOOM              IF NOT, BRANCH.
         C     #LINEMAX,=F'20'     IS THE LINE LONGER THAN 20 BLOCK
*                                       CHARACTERS LONG?
         BNH   SETLENG             IF NOT, BRANCH.
         L     #LINEMAX,=F'20'     ELSE, LIMIT LINES TO 20 CHARACTERS.
SETLENG  BCTR  #LENGTH,0           DECREASE 1 FOR CARRIAGE CONTROL.
         LR    #MVLENG,#LENGTH     COPY INTO #MVLENG.
         BCTR  #MVLENG,0           DECREASE 1 SINCE "RIPPLE" DOESN'T
*                                       MOVE TO FIRST CHARACTER OF
*                                       RECORD.
         BCTR  #MVLENG,0           DECREASE 1 FOR EX INSTRUCTIONS.
         B     NEXTPAGE            GO SET PAGE EJECTION.
         SPACE
NXSTRING SR    #CHARCNT,#CHARCNT   NOTE THAT 0 CHARACTERS ARE ON THIS
*                                       LINE SO FAR.
         IC    #CHAR,0(#PARM)      PICK UP NEXT PARM CHARACTER.
         CR    #CHAR,#DELIMTR      IS THIS LINE OF LENGTH ZERO?
         BNE   BLACKCHK            IF NOT, BRANCH.
NEXTPAGE MVI   0(#OUTAREA),C'1'    SET TO EJECT PAGE.
         B     BUMPER              GO ADVANCE TO NEXT CHARACTER.
         SPACE
BLACKCHK C     #CHAR,BLACKIND      IS THIS CHARACTER A CENT SIGN?
         BNE   GATHER              IF NOT, GO COLLECT LINE.
         LA    #1,1                PICK UP A 1.
         CR    #COUNT,#1           IS THAT WHAT #COUNT IS (IS THE
*                                       CENT SIGN THE LAST CHARACTER)?
         BE    ALLSTAR             IF SO, BRANCH.
         EX    #DELIMTR,NEXTCHK    IS IT FOLLOWED BY A DELIMITER?
*                                       NOTE THAT:
*                                       NEXTCHK CLI 1(#PARM),0
         BNE   GATHER              IF NOT, BRANCH.
ALLSTAR  LA    #LINECNT,60         WE WILL MAKE 60 LINES.
         MVI   0(#OUTAREA),C'1'    START ON NEW PAGE.
FILLPAGE MVI   1(#OUTAREA),C'*'    INSERT STAR INTO BUFFER.
         EX    #MVLENG,RIPPLE      FILL LINE WITH STARS.
*                                       NOTE THAT:
*                                       RIPPLE MVC 2(,#OUTAREA),
*                                                    1(#OUTAREA)
         PUT   DCB                 OUTPUT LINE OF STARS.
         LR    #OUTAREA,#1         POINT TO NEXT BUFFER.
         TM    DCB+36,B'10000000'  IS THIS A VARIABLE LENGTH RECORD?
         BO    SNGLSPCE            IF NOT, BRANCH.
         MVC   0(4,#OUTAREA),LENGCNTR
*                                 SET CONTROL WORD INTO BUFFER.
         LA    #OUTAREA,4(#OUTAREA)
*                                  ADVANCE PAST CONTROL WORD.
SNGLSPCE MVI   0(#OUTAREA),C' '    SINGLE SPACE THIS LINE.
         BCT   #LINECNT,FILLPAGE   LOOP TILL PAGE FULL.
         LA    #PARM,1(#PARM)      ADVANCE TO DELIMITER AFTER
         BCT   #COUNT,NEXTPAGE          CENT SIGN, DOWN COUNT, AND
*                                       BRANCH.
         B     GOODOUT             IF THAT'S ALL THE PARM, BRANCH OUT.
         SPACE
NEXTSYM  IC    #CHAR,0(#PARM)      ADD ANOTHER CHARACTER TO THIS
*                                       LINE AS FOLLOWS:  GET
*                                       NEXT PARM CHARACTER.
         CR    #CHAR,#DELIMTR      IS IT A DELIMITER?
         BE    OUTLINE             IF SO, GO OUTPUT LINE.
GATHER   STC   #CHAR,LINESPOT(#CHARCNT)
*                                  STORE THIS CHARACTER INTO LINE'S
*                                       ACCUMULATION AREA.
         LA    #CHARCNT,1(#CHARCNT)
*                                  INCREASE CHARACTER COUNT.
         CR    #CHARCNT,#LINEMAX   IS THE LINE FULL?
         BNL   DELCHK              IF SO, BRANCH.
         LA    #PARM,1(#PARM)      ELSE ADVANCE TO NEXT CHARACTER.
         BCT   #COUNT,NEXTSYM      DOWN COUNT AND GO GET NEXT SYMBOL
*                                       (CHARACTER).  IF PARM IS ALL
*                                       DONE, FALL THROUGH TO:
JIMMY    LA    #COUNT,1            RESET COUNT TO 1 SO THAT
*                                       BCT INSTRUCTION AT "BUMPER"
*                                       WILL ALSO FALL THROUGH.
         B     OUTLINE             GO OUTPUT LAST LINE.
         SPACE
DELCHK   EX    #DELIMTR,NEXTCHK    IS THE NEXT CHARACTER A DELIMITER?
         BNE   OUTLINE             IF NOT, BRANCH.
         LA    #PARM,1(#PARM)      ELSE, IGNORE DELIMITER.
         BCT   #COUNT,OUTLINE      DOWN COUNT AND GO OUTPUT.
         B     JIMMY               PARM SHOULDN'T END HERE (IF IT DOES
*                                       THAT DELIMITER WE SAW WAS
*                                       GARBAGE);  BUT BRANCH TO
*                                       KEEP THINGS SAFE.
         SPACE
OUTLINE  LR    #OFFSET,#LENGTH     GET LENGTH OF LINE (EXCLUDING
*                                       CARRIAGE CONTROL).
         LR    #0,#CHARCNT         GET NUMBER OF BLOCKS TO BE PRINTED.
         MH    #0,=H'14'           MULTIPLY BY 14--NUMBER OF CHARACTERS
*                                       IN EACH BLOCK (12) PLUS NUMBER
*                                       OF SPACES BETWEEN BLOCKS (2).
*                                       NOTE THAT THIS PRODUCT IS TOO
*                                       BIG BY 2--THE SPACES AFTER THE
*                                       LAST BLOCK.
         SR    #OFFSET,#0          SUBTRACT PRODUCT FROM LINE LENGTH
*                                       GIVING NUMBER OF BYTES NOT
*                                       USED MINUS 2.
         SRA   #OFFSET,1           DIVIDE BY 2 FOR HALF PAGE.
         A     #OFFSET,=F'2'       ADD 2;  1 FOR THE EXCESS MENTIONED
*                                       ABOVE AND 1 SINCE WE START AT
*                                       AN OFFSET OF 1 NOT ZERO IN
*                                       THE BUFFER.
         ST    #CHARCNT,STRINGLN   STORE LENGTH OF DATA STRING FOR
*                                       "IEFSD095".
         SR    #LINECNT,#LINECNT   CLEAR #LINECNT FOR LOOP.
         SPACE
LOOP095  LA    #1,PARM095          POINT TO "IEFSD095" PARMS.
         LA    #LINECNT,1(#LINECNT)
*                                  ADVANCE TO NEXT LINE IN BLOCK.
         ST    #LINECNT,LINENO     STORE LINE NUMBER FOR "IEFSD095".
         LR    #0,#OFFSET          COPY OFFSET INTO #0.
         AR    #0,#OUTAREA         ADD ADDRESS OF START OF BUFFER.
         ST    #0,STRINGAD         STORE INTO "IEFSD095" PARM AS
*                                       ADDRESS TO RECEIVE STRING.
         MVI   1(#OUTAREA),C' '    CLEAR OUT OUTPUT BUFFER.
         EX    #MVLENG,RIPPLE      CLEAR IT ALL THE WAY OUT.
*                                       NOTE:  RIPPLE MVC
*                                            2(,#OUTAREA),1(#OUTAREA)
         CALL  EALSD095
         PUT   DCB                 OUTPUT LINE.
         LR    #OUTAREA,#1         POINT TO NEXT BUFFER.
         TM    DCB+36,B'10000000'  IS THIS A VARIABLE LENGTH RECORD?
         BO    READYNXT            IF NOT, BRANCH.
         MVC   0(4,#OUTAREA),LENGCNTR
*                                 SET CONTROL WORD INTO BUFFER.
         LA    #OUTAREA,4(#OUTAREA)
*                                  ADVANCE PAST CONTROL WORD.
READYNXT MVI   0(#OUTAREA),C' '    SINGLE SPACE NEXT LINE.
         C     #LINECNT,=F'12'     HAS THE LAST LINE BEEN OUTPUT?
         BNE   LOOP095             IF NOT, BRANCH.
         MVI   0(#OUTAREA),C'-'    DOUBLE SPACE NEXT LINE.
         SPACE
BUMPER   LA    #PARM,1(#PARM)      POINT TO NEXT CHARACTER.
         BCT   #COUNT,NXSTRING     DOWN COUNT AND BRANCH IF MORE
*                                       TO DO.
GOODOUT  SR    #RC,#RC             NORMAL EXIT;  CLEAR RETURN CODE.
         SPACE
CLOSEUP  MVI   0(#OUTAREA),C' '    CLEAR OUT LAST BUFFER SO THAT
         MVI   1(#OUTAREA),C' '         CLOSE WILL PRINT ONLY
         EX    #MVLENG,RIPPLE           A BLANK LINE.
         CLOSE DCB                 CLOSE DCB.
         SPACE
LEAVE    L     #13,SAVE+4          RESTORE SAVE POINTER.
         LR    #15,#RC             PUT RETURN CODE INTO #15.
         LM    2,12,28(13)             RESTORE 2 - 12
         L     14,12(13)               RESTORE 14
         MVI   12(13),X'FF'            SET FLAG FOR FORTRAN TYPES
         BR    14                      ADIOS AMIGOS
         SPACE
ZILTCH   LA    #RC,4               ERROR EXIT;  DDNAME INVALID.
         B     LEAVE               RETURN.
         SPACE
KABOOM   LA    #RC,8               ERROR EXIT;  LRECL TOO SHORT.
         SR    #MVLENG,#MVLENG     CLEAR #MVLENG TO LIMIT RIPPLE.
         B     CLOSEUP             RETURN (AND CLOSE DCB).
         SPACE
BADRECFM LA    #RC,12              ERROR EXIT;  SET RETURN CODE.
         B     CLOSEUP             RETURN (AND CLOSE DCB).
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*              SYMBOLIC REGISTER DESIGNATIONS                       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
#0       EQU   0                   WORK REGISTER.
#1       EQU   1                   WORK REGISTER.
#PARM    EQU   2                   POINTER TO CHARACTER OF "BLOKHEAD"
*                                       PARAMETER CURRENTLY BEING
*                                       PROCESSED.
#COUNT   EQU   3                   LENGTH OF PARM FIELD YET TO BE
*                                       PROCESSED.
#OFFSET  EQU   4                   OFFSET IN BUFFER AT WHICH
*                                       BLOCK LETTERS SHOULD BE
*                                       GENERATED TO BE CENTERED.
#RC      EQU   4                   RETURN CODE FROM "BLOKHEAD".
#DIVIDND EQU   4                   HIGH HALF OF DIVIDEND IN DIVISION
*                                       OF #LINEMAX;  MUST BE AN
*                                       EVEN-NUMBERED REGISTER.
#LINEMAX EQU   #DIVIDND+1          CONTAINS MAXIMUM NUMBER OF
*                                       CHARACTERS WHICH MAY BE
*                                       OUTPUT BLOCK-FASHION ON A
*                                       LINE.
#DDNAME  EQU   6                   POINTER TO DDNAME CHARACTER IN
*                                       DCB BEING FILLED IN.
#MVLENG  EQU   6                   LRECL OF DCB MINUS 3.
#LIMIT   EQU   7                   POINTS TO LAST PARM CHARACTER
*                                       WHICH COULD CONTAIN A DDNAME
*                                       CHARACTER.
#LINECNT EQU   7                   CONTAINS NUMBER OF LINE: (1) FOR
*                                       PAGE OF STARS, NUMBER OF LINES
*                                       YET TO BE PRINTED.  (2) FOR
*                                       BLOCK LETTERS, NUMBER OF LINE
*                                       (1 THROUGH 12) BEING PRINTED.
#OUTAREA EQU   8                   POINTER TO OUTPUT BUFFER.
#DELIMTR EQU   9                   CONTAINS USER'S DELIMITER CHARACTER.
#CHAR    EQU   10                  CONTAINS CHARACTER FROM PARAMETER
*                                       CURRENTLY BEING PROCESSED.
#LENGTH  EQU   11                  LRECL OF DCB MINUS 1.
#CHARCNT EQU   12                  NUMBER OF CHARACTERS IN LINE AT
*                                       THIS TIME.
#13      EQU   13                  SAVE AREA POINTER/BASE REGISTER.
#15      EQU   15                  ENTRY POINT ADDRESS.
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*              DATA AREA                                            *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
BLACKIND DS    0F                  FULLWORD CONTAINING
         DC    AL3(0),C'Ö'              THE CENT SIGN CHARACTER IN THE
*                                       LOW-ORDER BYTE.
LENGCNTR DC    F'0'                FULL WORD WHOSE TOP HALF CONTAINS
*                                       MAX LRECL FOR RECFM=V RECORDS
*                                       AND WITH LOWER HALF OF ZERO.
*                                       NOTE THAT ALL RECFM=V IN
*                                       "BLOKHEAD" ARE OUTPUT AT
*                                       MAXIMUM LENGTH.
STRINGLN DC    F'0'                LENGTH OF STRING INPUT TO
*                                       "IEFSD095".
LINENO   DC    F'0'                LINE NUMBER OF BLOCK LETTERS TO BE
*                                       GENERATED BY "IEFSD095".
PARM095  DS    0F                  PARAMETERS FOR "IEFSD095".
         DC    A(LINESPOT)              STRING TO BE TRANSLATED.
         DC    A(LINENO)                LINE NUMBER REQUIRED.
STRINGAD DC    A(0)                     RECEIVING AREA FOR OUTPUT.
         DC    A(STRINGLN)              LENGTH OF INPUT STRING.
         SPACE
LINESPOT DC    CL20'           '   AREA TO HOLD STRING FOR TRANSLATION.
         SPACE
         LTORG
         SPACE
NEXTCHK  CLI   1(#PARM),0          EXECUTED INSTRUCTION;  COMPARES THE
*                                       NEXT CHARACTER IN THE PARAMETER
*                                       WITH THE CHARACTER IN THE
*                                       EX REGISTER.
RIPPLE   MVC   2(,#OUTAREA),1(#OUTAREA)
*                                  EXECUTED INSTRUCTION;  FILLS THE
*                                       OUTPUT BUFFER WITH WHATEVER
*                                       CHARACTER IS IN THE FIRST
*                                       POSITION.
         SPACE
DCB      DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=(PL)
*                                  DCB TO BE HEADED.
         SPACE
         END
