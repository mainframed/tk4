         TITLE 'JES2/SP1.3 USER EXIT #255'
*---------------------------------------------------------------------*
*                                                                     *
*        THIS EXIT IS BASED UPON THE CODE I RECEIVED FROM PAUL        *
*        FINDLEY AT THE AIR FORCE DATA SERVICES CENTER, PENTAGON,     *
*        WASHINGTON D.C.  WE WANT TO PRODUCE A RECEIPT FOR ANY        *
*        JOB PRINTED LOCALLY. THIS RECEIPT WILL BE PLACED ON          *
*        SOME 3287 OR FASTER MCS PRINTER. OPERATORS MUST BREAK        *
*        DOWN LISTINGS AND CAN DO IT INCORRECTLY (UNDERSTATEMENT).    *
*        WE NATURALLY WANT TO IGNORE FOR REMOTELY PRINTED JOBS.       *
*        PAUL HAD PRE-PRINTED FORMS TO FILL OUT. MINE ARE BLANK       *
*        PAPER 80 COLUMNS BY 22 LINES DEEP. THEREFORE I MUST          *
*        PRINT THE FORM WITH INFORMATION INSIDE OF IT.                *
*                                                                     *
* COURTESY: JIM MARSHALL, CAPT, USAF (RET)                            *
*                                                                     *
*    1. THESE CARDS MUST IN YOUR JES2PARMS. SINCE YOUR EXIT IS        *
*       CALLED FROM JES2  EXIT001, THEN WE NEED OTHER PLACES TO       *
*       PUT 'J13X255'. THE WHOLE LIST OF JES2 CONTROL CARDS IS AS     *
*       FOLLOWS:                                                      *
*                                                                     *
*       >LOAD J13X1                                                   *
*       >EXIT001 (J13XBAN,J13X1PUN),ENABLE,TRACE=YES                  *
*       >LOAD J13X255                                                 *
*       >EXIT255 (J13X255),ENABLE,TRACE=YES                           *
*                                                                     *
*    2. THE ORDER OF THE DSECTS IN THE PREAMBLE ASSEMBY CAN BE        *
*       SIGNIFICANT.  ALSO THE REGISTER CONTENTS ARE AS FOLLOWS UPON  *
*       ENTRY TO THIS EXIT:                                           *
*         R0 = CODE INDICATING WHETHER START, CONT., OR TRAILER       *
*              PAGE IS BEING PRINTED.                                 *
*         R1 = ADDRESS OF THE DCT UPON ENTRY.                         *
*         R2 = UNUSED.                                                *
*         R3 = ADDRESSABILITY TO GOTTEN BUFFER.                       *
*         R4 = ADDRESSABILITY TO DCT.                                 *
*         R5 = BAL REGISTER.                                          *
*         R6 = WORK REGISTER.                                         *
*         R7 = ADDRESSABILITY TO JOE.                                 *
*         R8 = UNUSED.                                                *
*         R9 = UNUSED.                                                *
*        R10 = ADDRESS OF THE JCT.                                    *
*        R11 = ADDRESS OF THE HCT.                                    *
*        R12 = ADDRESSABILITY FOR THIS CODE.                          *
*        R13 = ADDRESS OF THE PCE.                                    *
*        R14 = YE OLE RETURN ADDRESS.                                 *
*                                                                     *
* INSTALLED: IN TESTING                                               *
*                                                                     *
* CHNGE LOG: ADDED SUPPORT FOR VM/RSCS TO JES2/NJE PRINT. THE PRT     *
*            COMES TO MVS WITH JOBNAME OF 'RSCSNNNN'. SO WE CHECK     *
*            FOR IT AND SWAP THE VM USERID IN THE PGMER NAME FIELD    *
*            WITH THE RSCSNNNN NAME.                JDM1              *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
         TITLE 'JES2/SP3 EXIT #255 - MIT CSECT'
*---------------------------------------------------------------------*
*        P R E A M B L E  -  E X I T  255                             *
*---------------------------------------------------------------------*
         SPACE
         GBLB  &SP134                                            JDM2
&SP134   SETB  1                   1 - SP1.3.4 / 0 - SP1.3.2     JDM2
         AIF   (NOT &SP134).SKIP10                               JDM2
         COPY  $HASPGBL
ISG255  $MODULE $BUFFER,                                               X
               $JCT,                                                   X
               $JQE,                                                   X
               $HASPEQU,                                               X
               $PCE,                                                   X
               $CAT,                                                   X
               $DCT,                                                   X
               $HCT,                                                   X
               $PDDB,                                                  X
               $MIT,                                                   X
               $JOE,                                                   X
               $PPPWORK,                                               X
               $CMB
.SKIP10  ANOP                                                    JDM2
         AIF   (&SP134).SKIP15                                   JDM2
         PRINT OFF
        $SYSPARM (OFF,NOGEN,NODATA,NO,NO)  DOCUMENTATION OPTIONS
         COPY $HASPGEN              COPY HASPGEN PARAMETERS
         PRINT ON
        $SYSPARM (ON,GEN,DATA,YES,YES)   DOCUMENTATION OPTIONS
ISG255  $MODULE                     CREATE THE MIT CSECT
        $BUFFER DOC=YES             REQ'D BY $GETBUF, $FREEBUF,
*                                      AND MUST PRECEDE $JCT
        $JCT  DOC=YES               MUST PRECEDE $CAT
        $JQE  DOC=YES               MUST PRECEDE $HCT
        $PCE  DOC=YES               MUST PRECEDE $HCT
        $CAT  DOC=YES               MUST PRECEDE $HCT
        $DCT  DOC=YES               NORMALLY REQUIRED FOR EXIT #1
        $HCT  DOC=YES               REQ'D BY $SAVE, $RETURN...
        $PDDB DOC=YES               MUST PRECEDE $IOT
        $TAB  DOC=YES               MUST PRECEDE $IOT
        $IOT  DOC=YES
        $JOE  DOC=YES               REQ'D TO GET SYSOUT CLASS
        $MIT  DOC=YES               REQ'D BY $MODEND
        $PPPWORK DOC=YES            REQ'D TO FIND JOE
         PRINT GEN
.SKIP15  ANOP                                                    JDM2
         SPACE
         AIF   (NOT &SP134).SKIP20                               JDM2
J13X255 $ENTRY BASE=R12            EXIT ROUTINE ENTRY POINT      JDM2
.SKIP20  ANOP                                                    JDM2
         AIF   (&SP134).SKIP25                                   JDM2
J13X255 $ENTRY BASE=R12,CSECT=YES  EXIT ROUTINE ENTRY POINT
.SKIP25  ANOP                                                    JDM2
        $SAVE
         LR   R12,R15              LOAD BASE REGISTER
         XR   R15,R15              CLEAR R15 IN CASE PUNCH
         LR   R9,R0                SAVE INPUT PARAMETERS
         LR   R4,R1                SAVE INPUT PARAMETERS
         USING DCTDSECT,R4         SETUP ADDRESSABILITY
         USING JCTDSECT,R10        SETUP ADDRESSABILITY
         SPACE
*-------------------------------------------------------------------*
*        THIS PART OF THE CODE IS JUST AN ADDITIONAL CHECK TO MAKE
*        SURE THAT WE DO NOT GENERATE A RECEIPT FOR A RMT JOB.
*-------------------------------------------------------------------*
         SPACE
CONT     EQU  *
         L    R7,PWKJOE            SET UP ADDRESS OF JOE
         USING JOEDSECT,R7         SET UP ADDRESSABLITY
         CLC  JOEREMOT,=H'1'       CHECK FOR REMOTE IDS
         BL   START                IF NO IDS THEN CREATE RECEIPT
         B    EOJ0                 ELSE DONT CREATE RECEIPT
         SPACE
*-------------------------------------------------------------------*
*        FINALLY WE GET TO BUSINESS, NOW GET A BUFFER.
*-------------------------------------------------------------------*
         SPACE
START   $GETBUF  TYPE=HASP,FIX=YES,WAIT=YES   GET A WORK BUFFER
         LR   R3,R1                SAVE ADDRESS OF BUFFER
         USING BUFDSECT,R3
         SPACE
*-------------------------------------------------------------------*
*        NOW WE START TO PUT OUT THE FORM. REMEMBER EXIT 10
*        WILL STRIP THE HASP066 MSG OFF THE $WTO FOR US AND
*        PUT THE ROUTE CODE 14 ON THE MSG
*-------------------------------------------------------------------*
         SPACE
         MVI  BUFSTART,C' '
         MVC  BUFSTART+1(79),BUFSTART
         SPACE
L1       EQU  *
         MVC  0(DASHL,R3),DASH     MOVE IN THE LINE
         LA   R0,DASHL             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L2       EQU  *
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L3       EQU  *
         MVC  0(LOGOL,R3),LOGO
         LA   R0,LOGOL             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L4       EQU  *
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L5       EQU  *
         MVC  0(JNAMEL,R3),JNAME
         CLC  JCTJNAME(4),RSCS     IS IT VM/RSCS PRT?            JDM1
         BNE  L5A                                                JDM1
         MVC  DJNAME(8,R3),JCTPNAME   MOVE IN VM USERID          JDM1
         B    L5B                                                JDM1
L5A      EQU  *                                                  JDM1
         MVC  DJNAME(8,R3),JCTJNAME
L5B      EQU  *                                                  JDM1
         LA   R0,JNAMEL            GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L6       EQU  *
         MVC  0(JNUML,R3),JNUM
         MVC  DJTYP(1,R3),JCTJOBID
         MVC  DJNUM(4,R3),JCTJOBID+4
         LA   R0,JNUML             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L7       EQU  *
         MVC  0(PRTCLSL,R3),PRTCLS
         MVC  DPRTCLS(1,R3),JOECURCL
         CLC  DCTDEVN(5),=C'PRINT' IS IT A PRT??
         BE   L7A
         MVC  DWHCLS(3,R3),PUN     CHANGE WORD TO PUN
         SPACE
L7A      EQU  *
         LA   R0,PRTCLSL           GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L8       EQU  *
         MVC  0(FORML,R3),FORM
         MVC  DFORM(4,R3),DCTFORMS
         CLC  DCTDEVN(5),=C'PRINT' IS IT A PRT??
         BE   L8A
         MVC  DWHFORM(3,R3),PUN   CHANGE WORD TO PUN
L8A      EQU  *
         LA   R0,FORML             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L9       EQU  *
         ICM  R6,B'1111',JOERECCT  GET NUM LINES PRTED
         CVD  R6,BUFSTART          CONVERT TO PACKED
         MVC  PCEUSER0(8),BUFSTART MOVE IT TO USER AREA
         MVC  0(LNESPRTL,R3),LNESPRT  MOVE IN MSG LINE
         MVC  DPRTNO(10,R3),MASK
         ED   DPRTNO(10,R3),PCEUSER0+4
         CLC  DCTDEVN(5),=C'PRINT' IS IT A PRT??
         BE   L9A
         MVC  DWHPNO(3,R3),PUN     CHANGE WORD TO PUN
L9A      EQU  *
         MVC  DDVNAME(8,R3),DCTDEVN  MOVE IN DEVICE NAME
         LA   R0,LNESPRTL          GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L10      EQU  *
         TIME BIN
         LR   R6,R0
         STCM R1,15,PCEUSER0
         UNPK BUFSTART+1(5),PCEUSER0+1(3)
         OI   BUFSTART+5,240
         MVC  BUFSTART(2),BUFSTART+1
         MVI  BUFSTART+2,C'.'
         MVC  PCEUSER0(6),BUFSTART
         MVC  0(DATEL,R3),DATE
         MVC  DDATE(6,R3),PCEUSER0
         LA   R0,DATEL             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L11      EQU  *
         LR   R0,R6
         SRDL R0,32
         D    R0,=F'100'
         SR   R0,R0
         D    R0,=F'3600'
         CVD  R1,BUFSTART
         UNPK BUFSTART+17(2),BUFSTART+6(2)
         OI   BUFSTART+18,240
         SRDL R0,32
         D    R0,=F'60'
         CVD  R1,BUFSTART
         MVI  BUFSTART+19,C'.'
         UNPK BUFSTART+20(2),BUFSTART+6(2)
         OI   BUFSTART+21,240
         CVD  R0,BUFSTART
         MVI  BUFSTART+22,C'.'
         UNPK BUFSTART+23(2),BUFSTART+6(2)
         OI   BUFSTART+24,240
         MVC  PCEUSER0(8),BUFSTART+17
         MVC  0(TIMEL,R3),TIME
         MVC  DTIME(8,R3),PCEUSER0
         LA   R0,TIMEL             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L12      EQU  *
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L13      EQU  *
         MVC  0(OPERL,R3),OPER
         LA   R0,OPERL             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L14      EQU  *
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG
         SPACE
L15      EQU  *
         MVC  0(DASHL,R3),DASH
         LA   R0,DASHL             GET THE LENGTH
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
L16T22   EQU  *
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         MVC  0(BLANKSL,R3),BLANKS
         BAL  R5,PUTMSG            GO PUT THE MSG
         SPACE
*-------------------------------------------------------------------*
*        MUST NOT FORGET TO TIDY UP !!!!!!
*-------------------------------------------------------------------*
FINI    $FREEBUF (R3)              FREE WORK BUFFER
         DROP  R3
         SPACE
EOJ0     EQU   *
         LR   R0,R9                RESTORE VALUES
         LR   R1,R4                RESTORE VALUES
         SR    R15,R15             SET RC=0
RETURN  $RETURN RC=(R15)           RETURN TO HASPPRPU
         SPACE
*-------------------------------------------------------------------*
*        THIS IS WHERE WE PUT SUBROUTINES
*-------------------------------------------------------------------*
PUTMSG   EQU   *
         LR    R1,R3
         $WTO  (R1),(R0),CMB=NO,,MF=(E,WTOLIST)
         MVI   0(R3),C' '          BLANK
         MVC   1(49,R3),0(R3)      ROLL IT
         LA    R0,BLANKSL          GET THE LENGTH FOR DEFAULT
         BR    R5                  RETURN WHENCE WE CAME
         EJECT
*-------------------------------------------------------------------*
*        THIS IS THE RECEIPT THAT WAS DESIGNED TO BE USED.
*
*        THE PAPER IS 22 LINES DOWN USING 6 LINES PER INCH. IT
*        IS BLANK, THEREFORE I WILL NEED TO PRINT THE ENTIRE
*        FORM. THE FORM WILL BE 50 LINES WIDE.
*
*  LINE  0        1         2         3         4         5
*   NO.  12345678901234567890123456789012345678901234567890
*
*    1   *------------------------------------------------*
*    2   .
*    3   *        2   I S G  /  A F C C
*    4   .
*    5   *      JOBNAME - XXXXXXXX
*    6   .  JES2 NUMBER - X NNNN
*    7   *    PRT CLASS - X
*    8   .     PRT FORM - XXXX
*    9   *  LINES PRTED - 9,999,9999 ON DEVNAME
*   10   .         DATE - YY.DDD
*   11   *         TIME - HH.MM.SS  (CDT)
*   12   .
*   13   *     OPERATOR - _________________
*   14   .
*   15   *------------------------------------------------*
*   16   .
*   17   .
*   18   .
*   19   .
*   21   .
*   22   .
*
*   NOTE: LINES 16-22 ARE BLANK LINES TO GET TO THE NEXT FORM.
*         WELL REALLY NOT TOTALLY BLANK, YOU MUST HAVE SOME CHAR
*         IN THE FIELD OR ELSE JES2 DOES NOT PRODUCE THE LINE, SO
*         I CHOSE A PERIOD.
*-------------------------------------------------------------------*
         SPACE
         DS    0F
WTOLIST $WTO   ,,JOB=NO,WAIT=YES,ROUTE=$ALL,TYPE=SVC35,                X
               CLASS=$ALWAYS,PRI=$ST,MF=L
         SPACE
SEVEN    DC    F'7'
RSCS     DC    CL4'RSCS'                                         JDM1
MASK     DC    XL10'40206B2020206B202120'
PUN      DC    C'PUN'
         SPACE
DASH    $MSG   066,'*'
         DC    48C'-'
         DC    C'*'
DASHL    EQU   *-DASH
         SPACE
*-------------------------------------------------------------------*
         SPACE
LOGO    $MSG   066,'*'
         DC    CL8' '
         DC    C'2   I S G  /  A F C C'
LOGOL    EQU   *-LOGO
         SPACE
*-------------------------------------------------------------------*
         SPACE
OPER    $MSG   066,'*'
         DC    CL5' '
         DC    C'OPERATOR - ________'
OPERL    EQU   *-OPER
         SPACE
*-------------------------------------------------------------------*
         SPACE
JNAME   $MSG   066,'*'
         DC    CL6' '
         DC    C'JOBNAME - '
DJNAME   EQU   *-JNAME
         DC    CL8'XXXXXXXX'
JNAMEL   EQU   *-JNAME
         SPACE
*-------------------------------------------------------------------*
         SPACE
JNUM    $MSG   066,'.'
         DC    CL2' '
         DC    C'JES2 NUMBER - '
DJTYP    EQU   *-JNUM
         DC    C'X'
         DC    C' '
DJNUM    EQU   *-JNUM
         DC    C'NNNN'
JNUML    EQU   *-JNUM
         SPACE
*-------------------------------------------------------------------*
         SPACE
LNESPRT $MSG   066,'.'
         DC    CL2' '
         DC    C'LINES '
DWHPNO   EQU   *-LNESPRT
         DC    C'PRTED - '
DPRTNO   EQU   *-LNESPRT
         DC    CL11' '
         DC    CL3'ON '
DDVNAME  EQU   *-LNESPRT
         DC    CL8'PPPPPPPP'
LNESPRTL EQU   *-LNESPRT
         SPACE
*-------------------------------------------------------------------*
         SPACE
DATE    $MSG   066,'.'
         DC    CL2' '
         DC    C'       DATE - '
DDATE    EQU   *-DATE
         DC    C'YY.DDD'
DATEL    EQU   *-DATE
         SPACE
*-------------------------------------------------------------------*
         SPACE
TIME    $MSG   066,'*'
         DC    CL2' '
         DC    C'       TIME - '
DTIME    EQU   *-TIME
         DC    C'HH.MM.SS  (CDT)'
TIMEL    EQU   *-TIME
         SPACE
*-------------------------------------------------------------------*
         SPACE
BLANKS   $MSG  066,'.'
BLANKSL  EQU   *-BLANKS
         SPACE
*-------------------------------------------------------------------*
         SPACE
FORM    $MSG   066,'*'
         DC    CL4' '
DWHFORM  EQU   *-FORM
         DC    C'PRT  FORM - '
DFORM    EQU   *-FORM
         DC    CL4'XXXX'
FORML    EQU   *-FORM
         SPACE
*-------------------------------------------------------------------*
         SPACE
PRTCLS   $MSG  066,'*'
         DC    CL4' '
DWHCLS   EQU   *-PRTCLS
         DC    C'PRT CLASS - '
DPRTCLS  EQU   *-PRTCLS
         DC    C'?'
PRTCLSL  EQU   *-PRTCLS
*-------------------------------------------------------------------*
         LTORG
        $MODEND
         END
