TWA      TITLE 'COMPARE - DATASET PROCESSOR'
***********************************************************************
*                                                                     *
*        COMPDS                                                       *
*        ------                                                       *
*                                                                     *
*        PERFORMS PDS RELATED FUNCTIONS WITHIN COMPARE SYSTEM         *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        PARAMETERS...                                                *
*           1.  MEMBER DCB ADDRESS      R11                           *
*           2.  DIRECTORY DCB ADDRESS   R10                           *
*           3.  PARAMETER LIST POINTER  R8                            *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        RETURN CODE VALUES                                           *
*          CODE         MEANING                                       *
*              0     NO ERRORS ENCOUNTERED                            *
*              8     SPECIFIED MODULE NOT IN DATASET                  *
*             16     CANNOT SUCCESFULLY LOAD MODULE                   *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        ABENDS                                                       *
*         USER CODE     MEANING                                       *
*          U0029     MODULE NOT CREATED BY LINKAGE EDITOR             *
*          U0027     ESD TABLES CAPACITY EXCEEDED                     *
*          U0002     NON-ZERO RETURN FROM RDJFCB MACRO                *
*          U0005     CANNOT OPEN PDS DCB'S                            *
*          U0029     MODULE NOT CREATED BY LINKAGE EDITOR             *
*          U0028     PARAMTER TABLE  MAXSIZE EXCEEDED                 *
*                                                                     *
***********************************************************************
         EJECT
COMPDS   CENTER TYPE=C
         SYMREGS
RW0      EQU   7     *
RW1      EQU   5       *   TEMPORARY  FOR NOW
RW2      EQU   9     *
SPC1     EQU   C' '
SPC2     EQU   C'0'
SPC3     EQU   C'-'
SPCP     EQU   C'1'
         PRINT ON,NOGEN
         EJECT
         MVI   RC,0                CLEAR RETURN CODE
         LM    R9,R11,0(R1)        GET VARIOUS PARAMETERS
         LR    R8,R11              SET UP PER OUR NEEDS
         ST    R8,PLISTA           FOR LATER ASYNCH USAGE
         LR    R11,R10             GET THE MEMBER DCB ADDRESS INTO
*                                  CORRECT REGISTER
         LR    R10,R9              GET THE DIRECTORY DCB ADDRESS INTO
*                                  CORRECT REGISTER
         USING PLIST,R8            ADDRESS THE DSECT
         LA    R9,PREC
         ST    R9,PLISTCA
         XC    PRECCT,PRECCT
         MVI   RPTSW,0             CLEAR ERROR SWITCH
         RDJFCB ((R11))            READ THE JFCB FOR THE PDS
         LTR   R15,R15             DID IT DO THAT O.K.  ?
         BNZ   ERROR2              NO - BRANCH
         SPACE 1
*        OPEN THE DCBS FOR THE DIRECTORY AND THE MEMBERS  -
         OPEN  ((R10),,(R11))      ISSUE THE OPEN
         TM    48(R10),X'10'       DID THE DIRECTORY DCB OPEN O.K. ?
         BZ    ERROR5              NO - BRANCH
         TM    48(R11),X'10'       DID THE MEMBER DCB OPEN O.K. ?
         BZ    ERROR5              NO - BRANCH
         SPACE 1
*        GET A BUFFER TO READ THE MEMBERS INTO  -
         MVC   BUFFLEN,62(R11)     GET BLOCKSIZE FROM THE DCB
         L     R0,BUFFER           LENGTH + SP I.D. FOR GETMAIN
         GETMAIN R,LV=(0)          ISSUE GETMAIN
         ST    R1,DECB+12          PUT POINTER TO BUFFER IN DECB
         SPACE 1
*        INITIALISE  THE BUFFER TO ZEROS (EASIER DEBUGGING)  -
         LH    R2,BUFFLEN          GET LENGTH OF THE BUFFER
ZEROLOOP MVI   0(R1),0             MOVE A ZERO INTO THE BUFFER
         LA    R1,1(,R1)           INDEX THROUGH THE BUFFER
         BCT   R2,ZEROLOOP         ZERO THE ENTIRE BUFFER
         SPACE 1
         B     GET                 GET THE FIRST PDS DIRECTORY BLOCK
         SPACE 2
*
*        GET NEXT MEMBER IN THE PDS  -
*
*        FIRST  LOOK FOR A MEMBER IN THE CURRENT DIRECTORY BLOCK -
LOOPDS1  L     R2,DIRPOINT         POINT TO THE NEXT MEMBER
         IC    R3,11(,R2)          GET LENGTH OF USER DATA
         N     R3,MASK2            LENGTH IS 5 BITS
         SLL   R3,1                X 2 BECAUSE LENGTH IN HALF-WORDS
         LA    R3,12(,R3)          ADD LENGTH OF MEMBER NAME + TTRC
         AR    R3,R2               POINT TO NEXT MEMBER
         SPACE 1
*        FIND  THE END OF THE DIRECTORY BLOCK  -
         LA    R4,DIRBLOCK         POINT TO THE CURRENT DIRECTORY BLK
         LH    RW1,0(,R4)          GET LENGTH USED
         AR    RW1,R4              POINT TO END OF THE BLOCK
         CR    RW1,R3              HAS THIS BLOCK BEEN EXAUSTED ?
*              RW1 NO LONGER UTILIZED
         BH    GOTNEXT             NO - BRANCH
         SPACE 1
*        READ THE NEXT DIRECTORY BLOCK  -
GET      GET   (R10),DIRBLOCK      READ THE NEXT DIRECTORY BLOCK
         LA    R3,DIRBLOCK+2       POINT TO THE FIRST MEMBER IN BLOCK
GOTNEXT  ST    R3,DIRPOINT         SAVE POINTER TO NEXT MEMBER
         SPACE 1
         CLC   0(8,R3),CNAME       IS THIS THE ONE WE WANT ?
         BL    LOOPDS1             NO - BRANCH (NOT THERE YET)
         BE    HITIT               YES - GOT THE ONE
*        ( OTHERWISE THE NAMED MEMBER ISN'T IN THE LIBRARY )
         MVI   CNTL,SPC3           SPACE 3 IMMED.
         MVI   LINE,C' '           BLANK THE PRINT LINE
         MVC   LINE+1(131),LINE    -
         BAL   R14,WRITE
         MVC   LINE+40(16),=CL16'NOT IN LIBRARY'
         MVC   LINE+30(8),CNAME    PUT MEMBER NAME INTO MESSAGE
         MVC   LINE+22(6),=CL6'MEMBER'
         MVI   CNTL,SPC1
         BAL   R14,WRITE
         MVI   RC,8                SET ERROR RETURN
         B     ENDPDS              END WITH ERRORS
         SPACE 1
HITIT    L     R2,DIRPOINT         POINT TO DIRECTORY ENTRY
         MVC   TTRZ(3),8(R2)       SAVE TTR OF MEMBER
         POINT (R11),TTRZ          POINT TO THIS MEMBER
         SPACE 1
         EJECT
***********************************************************************
*                                                                     *
*        LOAD THE MEMBER, AND LOOK FOR COBOL TYPE ATTRIBUTES.         *
*        TABLE THE INFORMATION FOR THE COMPARE PROCESS                *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 1
*
*        BUILD A PRINT LINE  -
*
BUILD    MVI   LINE,C' '           BLANK THE PRINT LINE
         MVC   LINE+1(131),LINE    -
         SPACE 1
         SPACE 1
         L     R3,DIRPOINT         POINT TO DIRECTORY ENTRY
         SPACE 1
*        DETERMINE IF THE MEMBER WAS CREATED BY THE LINKAGE-EDITOR  -
         IC    R4,11(,R3)          GET LENGTH OF USER DATA
         N     R4,MASK2            -
         C     R4,=F'11'           MUST BE AT LEAST 11 HALF-WORDS
         BNL   LOADIT              IT WAS LINKED - BRANCH
         SPACE 1
         ABEND 29,DUMP - MODULE NOT CREATED BY LINKAGE-EDITOR  -
         SPACE 2
LOADIT   EQU   *
         LOAD  EPLOC=(R3),ERRET=CANTRD,DCB=(R11)
         LR    R4,R0               SAVE LOAD MODULE ADDRESS
*        MODULE ENTRY POINT  -
         MVC   MODEP+1(3),27(R3)   CAPTURE EP OFFSET FOR LATER USE
         S     R4,MODEP            ADJUST IF MODULE E.P. NOT 0
         UNPK  DWA(7),27(4,R3)     UNPACK IT
         MVC   DETEP-DETLINE+LINE,DWA MOVE THE 6 SIGNIFICANT CHARS
         TR    DETEP-DETLINE+LINE,TABLE1 AND MAKE INTO PRINTABLE HEX
         SPACE 1
*        MODULE SIZE  -
         UNPK  DWA(7),22(4,R3)
         MVC   DETSIZE-DETLINE+LINE,DWA
         TR    DETSIZE-DETLINE+LINE,TABLE1
         SPACE 1
*        MODULE ATTRIBUTES  -
         UNPK  DWA(5),20(3,R3)
         MVC   DETATTR-DETLINE+LINE,DWA
         TR    DETATTR-DETLINE+LINE,TABLE1
         SPACE 1
*        TTRC  -
PUTTTRC  DS    0H
         UNPK  DWA(9),8(5,R3)
         MVC   DETTTRC-DETLINE+LINE,DWA
         TR    DETTTRC-DETLINE+LINE,TABLE1
         SPACE 1
*        MEMBER NAME  -
PUTMEM   DS    0H
         MVC   DETMEM-DETLINE+LINE,0(R3)
         SPACE 2
*
*        READ THE MODULE, TO GET THE DATE-LINKED FROM THE IDRDATA  -
*                            AND READ THE CESD RECORDS
*
DLINK    DS    0H
         LA    RW0,CESDT     GET ADDRESS OF CESD TABLE
         SR    RW2,RW2       COUNT OF ENTRIES IN USE
         ST    RW2,NRESD           STORE NUMBER CURRENTLY IN USE
         USING ESD,RW0       ADDRESS ESD DSECT
         ST    RW0,CURESD    STORE IN CURRENT RECORD
         ZAP   SKDTL,=P'0'         INITIALISE DATE-LINKED TO ZEROS
GETLOOP  L     R6,DECB+12          POINT TO INPUT AREA
         READ  DECB,SF,(R11),MF=E  READ THE NEXT RECORD
         CHECK DECB
         CLI   0(R6),X'20'         IS THIS A CESD RECORD
         BNE   NOTCESD              NO, LOOK FOR OTHER INTERESTING RECS
*        WE NOW HAVE A CESD RECORD, PULL SD SUBRECORDS
GOTCESD  LA    RW1,8(,R6)          POINT TO ESD DATA AREA IN CESD REC
         LH    RW2,6(,R6)          COUNT OF BYTES OF ESD DATA
         USING CESD,RW1            ADDRESS CESD SUBREC DESCRIPTION
NEXTSRL  TM    CESDTY,X'0F'        IS IT A SD TYPE
         BNZ   NEXTSR               IF ANY BITS ON, IT ISNT
         MVC   ESDNAME,CESDNM      PUT NAME IN TABLE
         MVC   ESDLENG,CESDIDL     PUT LENGTH IN TABLE
         MVC   ESDAD,CESDAD        PUT LINKEDITOR ADDRESS IN TABLE
         LA    RW0,ESDLAST-ESD(,RW0) TO THE NEXT SLOT
         L     R1,NRESD            GET CURRENT IN USE COUNT
         LA    R1,1(,R1)           INCREMENT
         ST    R1,NRESD            PUT IT BACK
         C     R1,=F'512'      SEE IF TABLE OVERFLOW
         BNE   NEXTSR              NO, ITS OK
         ABEND 27,DUMP             TIME TO QUIT POST HASTE
NEXTSR   DS    0H                  TO NEXT SUBRECORD
         LA    RW1,16(,RW1)        POINT TO NEXT SR SLOT
         S     RW2,=F'16'          SEE IF ANY DATA IS REALLY LEFT
         BP    NEXTSRL
*                                  WE NOW HAVE ALL S/R FROM THIS CESD
NOTCESD  TM    0(R6),1             DOES THIS RECORD PRECEED A TEXT REC.
         BO    EODAD               YES - BRANCH (NO IDRDATA RECORDS)
         CLI   0(R6),X'80'         IS THIS AN IDRDATA RECORD ?
         BNE   GETLOOP             NO - BRANCH
         TM    2(R6),2             IS THIS IDRDATA FROM LINK-EDITOR ?
         BNO   GETLOOP             NO - BRANCH
         ZAP   SKDTL,15(3,R6)      SAVE DATE LINKED
         EJECT
         SPACE 1
*
*        NOW CALL CSECT REPORTER WITH CSECT TABLE
*
EODAD    DS    0H                   FOR NOW TO HANDLE NON-IDR MODS
         MVC   DETDTL-DETLINE+LINE-1(7),PAT01
         ED    DETDTL-DETLINE+LINE-1(7),SKDTL
         MVI   CNTL,SPC1
         BAL   R14,WRITE           PUT A LINE TO THE PRINTER
         CLI   RPTSW,1              DID MODULE FAIL TO LOAD
         BE    DONEREP              YES, WE CANNOT REPORT IT
         LA    RW0,CESDT            GET ADDRESS OF CESD TABLE
         L     RW2,NRESD            GET COUNT OF ENTRIES
         LTR   RW2,RW2              ANY MORE LEFT
         BZ    DONEREP               NO, DONE WITH REPORTING
REPLOOP  DS    0H
*        FIND A CSECT TO PASS, RELOCATE THE LOAD POINT
*        BY THE CSECT ADDRESS
         L     R1,ESDAD             GET THE LINKEDIT ADDRESS
         SRL   R1,8                 MAKE 3 BYTE INTO 4
         LA    R1,0(R1,R4)          RELOCATE THE LOAD ADDRESS
         ST    R1,POINTER           PUT IT IN THE PARAMETER
         MVC   LENGTH+1(3),ESDLENG  PICK UP 3 BYTE LENGTH CODE
         MVC   NAME,ESDNAME         PICK UP 8 BYTE CSECT NAME
         CLI   ALLSW,1              ARE WE PRINTING ALL CSECTS
         BE    POINTP               IF SO, DONT SUPPRESS LIB CODES
         CLC   NAME(3),=CL3'ILB'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               COBOL V2, V3, V4, VS LIBRARY
         CLC   NAME(3),=CL3'IHO'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               FORTRAN MOD II LIBRARY
         CLC   NAME(3),=CL3'IHC'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               FORTRAN FREEBIE LIBRARY
         CLC   NAME(3),=CL3'IHN'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               FORTRAN MOD I LIBRARY
         CLC   NAME(3),=CL3'IBM'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               PL/I OPTIMIZER LIBRARY
         CLC   NAME(3),=CL3'IHE'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               PL/I FREEBIE LIBRARY
POINTP   LA    R1,PARMLIST          POINT TO PARAMETER LIST
         L     R15,=V(COBFMT)       GET ADDRESS OF REPORT ROUTINE
         BALR  R14,R15             CALL THE CSECT REPORT ROUTINE
NEXTONE  LA    RW0,ESDLAST-ESD(,RW0) TO NEXT ENTRY IF PRESENT
         BCT   RW2,REPLOOP         ANY MORE LEFT?
*              RW2 NOW USABLE
DONEREP  DS    0H                  DONE WITH PRINT
         MVI   RPTSW,0             CLEAR ERROR SWITCH
*
*        DELETE MODULE
*
DONETHIS DELETE EPLOC=(R3)
         EJECT
***********************************************************************
*                                                                     *
*        END OF THE PROCESS - CLEAN UP AND EXIT                       *
*                                                                     *
***********************************************************************
         SPACE 1
*        CLOSE DCBS FOR THE PDS  -
ENDPDS   CLOSE ((R11),,(R10))      ISSUE CLOSE
         SPACE 1
*        FREE THE BUFFER USED TO READ THE MEMBERS  -
         L     R0,BUFFER           GET LENGTH AND S.P.
         L     R1,DECB+12          POINT TO BUFFER
         FREEMAIN R,LV=(0),A=(1)   ISSUE FREEMAIN
         SPACE 1
*        FREE  THE BUFFERS USED BY THE DIRECTORY DCB  -
         FREEPOOL (R10)
         SPACE 1
         L      R15,RETRNC
         RETRN  RC=(R15)           DO RETURN, BUT DONT RELOAD R15
         EJECT
***********************************************************************
*                                                                     *
*        ERROR TRYING TO LOAD THIS MODULE  -                          *
*                                                                     *
***********************************************************************
CANTRD   STC   R15,WORK+6          SAVE RETURN CODE FROM LOAD MACRO
         MVC   DETMSG-DETLINE+LINE(16),=CL16'CANT LOAD OK -'
         UNPK  WORK(3),WORK+6(2)   MAKE RETURN CODE PRINTABLE
         TR    WORK(2),TABLE1
         MVC   DETMSG-DETLINE+LINE+15(2),WORK PUT RETURN CODE INTO MSG.
         MVI   RC,16               SET RETURN CODE TO CALLER
         OI    RPTSW,X'80'
         B     DLINK
         EJECT
***********************************************************************
*                                                                     *
*        PRINT A LINE SUBROUTINE                                      *
*                                                                     *
***********************************************************************
WRITE    LA    R2,CNTL             POINT TO DETAIL PRINT LINE
         ST    R14,SAVE14
         ST    R2,PRTPARM          POINT TO LINE TO PRINT
         LA    R1,PRTPARM          POINT TO PARAMETER LIST
         L     R15,=V(PRINTR)      POINT TO PRINTER ROUTINEINTED
         BALR  R14,R15              GO AND DO THE PRINT OPERATION
         MVI   0(R2),C' '          BLANK OUT THE LINE
         MVC   1(131,R2),0(R2)      BLANK OUT REST OF LINE
         L     R14,SAVE14
         BR    R14                 RETURN
         EJECT
***********************************************************************
*                                                                     *
*        ERROR CONDITIONS                                             *
*                                                                     *
***********************************************************************
         SPACE 1
*        ERROR IN RDJFCB  -
ERROR2   LA    R2,(R11)            POINT TO DCB
         ABEND 2,DUMP
         SPACE 1
*        CANNOT OPEN PDS DCBS  -
ERROR5   LA    R2,(R10)            POINT TO DIRECTORY DCB
         LA    R3,(R11)            POINT TO MEMBER DCB
         ABEND 5,DUMP
         EJECT
         DROP  R8,RW0,RW1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*        PRINT INTERFACE ROUTINE                                      *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
PRINTR   CENTER TYPE=E
         L     R2,0(,R1)       GET THE RECORD ADDRESS
         L     R3,PLISTA       GET THE WORK AREA ADDRESS
         USING PLIST,R3        ADDRESS THE DSECT
         L     R4,PLISTCA      GET ADDRESS OF CURRENT SLOT
         MVC   0(133,R4),0(R2) COPY THE RECORD
         LA    R4,133(,R4)     INCREMENT THE RECORD POINTER
         ST    R4,PLISTCA      AND STORE IT BACK
         L     R4,PRECCT       GET CURRENT COUNT
         LA    R4,1(,R4)       INCREMENT IT
         C     R4,PRECMX       CHECK AGAINST MAX
         BL    PRINT1          OK TO CONTINUE
         ABEND 28,DUMP         WHO KNOWS WHAT HIT US
PRINT1   DS    0H
         ST    R4,PRECCT
         RETRN RC=0
         EJECT
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*        C O N S T A N T S                                            *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
WORK     DC    D'0'
SAVE14   DC    F'0'
PLISTA   DC    F'0'
RETRNC   DC    F'0'
         ORG   RETRNC
         DS    XL3
RC       DS    X
         ORG   ,
PRTPARM  DC    F'0'                ADDRESS OF RECORD TO PRINT
         SPACE 1
MASK2    DC    F'31'               MASK FOR 5 BITS   3 - 7
MASKFF   DC    0F'0',X'FF000000'   MASK FOR 1 BYTE, HIGH ORDER OF WORD
*        FLAGS  -
         SPACE 1
*        FIELDS RELATING TO THE PDS  -
TTRZ     DC    F'0'                TTR OF MEMBER I AM PROCESSING
         READ  DECB,SF,*,0,'S',MF=L       BUILD A DECB CALLED DECB
         SPACE 1
BUFFER   DC    0F'0',X'0200'       LENGTH + SP FOR GETMAIN
BUFFLEN  DC    H'0'                -
         SPACE 1
DIRPOINT DC    F'0'                POINTER TO CURRENT MEMBER
LASTMEM  DC    8X'FF'              NAME OF LAST MEMBER IN PDS
         SPACE 1
*        TRANSLATE TABLE TO CONVERT TO PRINTABLE HEX  -
         ORG   *-240
TABLE1   EQU   *
         ORG
         DC    C'0123456789ABCDEF'
         SPACE 1
         DC    0D'0'
         LTORG
         SPACE 1
DIRBLOCK DC    32D'0'              CURRENT DIRECTORY BLOCK
         SPACE
*        DETAIL PRINT LINE  _
CNTL     DC    C' '
LINE     DC    132C' '
PAT01    DC    XL7'4021204B202020'
         SPACE 1
SKDTL    DC    PL3'0'              DATE-LINKED FOR CURRENT MEMBER
         SPACE 1
DWA      DC    2D'0'               WORK SPACE
         SPACE 1
         PRINT GEN
         LTORG
PARMLIST DC    F'0'      FORMERLY  DCB ADDRESS
         DC    X'80',AL3(POINTER)
POINTER  DC    F'0'                CURRENT CSECT ADDRESS
LENGTH   DC    F'0'                CURRENT CSECT LENGTH
NAME     DC    CL8' '              CURRENT CSECT NAME
MODEP    DC    F'0'                RELATIVE EP OF CURRENT MODULE
         SPACE 1
RPTSW    DC    X'00'               IF NON-ZERO DONT REPORT CSECTS
ALLSW    DC    X'00'               IF NON-ZERO REPORT ALL CSECTS
*                                  ELSE SUPPRESS ILB, IBM, IHO
MAXCESD  EQU   0512          MAXIMUM ENTRIES IN ESD TABLE
CURESD   DC    A(CESDT)      POINTS TO CURRENT SLOT
NRESD    DC    F'0'          CURRENT IN USE COUNT
CESDT    DC    512XL16'00'   CESD ENTRIES
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE PARAMETER AREA 1.02                            *
*                                                                     *
***********************************************************************
PLIST    DSECT
CNAME    DS    CL8       MEMBER NAME TO PROCESS
JFCB     DC    0D'0',176X'00'      AREA TO READ THE JFCB INTO
PLISTCA  DS    A         ADDR OF CURRENT SLOT
PRECCT   DS    F         NUMBER OF RECORDS IN USE
PRECMX   DS    F         MAX NUMBER OF RECORDS AVAILABLE
PLISTC   EQU   255       COUNT IN THE NEXT DS
PREC     DS    255CL133  SPACE FOR RECORDS
PLISTL   EQU   *-PLIST
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE DETAIL PRINT LINE                              *
*                                                                     *
***********************************************************************
DETLINE  DSECT
         DS    CL1 -
DETMEM   DS    CL8 -               MEMBER NAME
         DS    CL1 -
DETTTRC  DS    XL8 -               TTRC
         DS    CL1 -
DETATTR  DS    XL4 -               MODULE ATTRIBUTES
         DS    CL1 -
DETSIZE  DS    CL6 -               MODULE SIZE
         DS    CL1 -
DETEP    DS    CL6 -               MODULE ENTRY POINT
         DS    CL1 -
DETDTL   DS    CL6 -               DATE LINKED
         DS    CL1 -
DETMSG   EQU   *
         DS    CL8 -               SYMDUMP
         DS    CL8 -               FLOW
         DS    CL8 -               STATE
         DS    CL8 -               TESTM
         DS    CL8 -               RES
         DS    CL8 -               ENDJOB
         DS    CL8 -               OBJ370
         DS    CL8 -               CAPEX
         DS    CL2 -               VS OR V4
         DS    C
         DS    CL5 -               COUNT FOR VS
         DS    C
         DS    CL5 -               TRACE FOR VS
         DS    C
         DS    CL5 -               DTECT FOR CAPEX
LNLGTH   EQU   *-DETLINE
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE AN CESD SUBRECORD                              *
*                                                                     *
***********************************************************************
CESD     DSECT
CESDNM   DS    CL8 -               CSECT NAME
CESDTY   DS    XL1 -               TYPE OF SYMBOL
CESDAD   DS    CL3 -               ADDRESS ASSIGNED TO SYMBOL
CESDSN   DS    CL1 -               SEGMENT NUMBER
CESDIDL  DS    CL3 -               ID FOR LR (2 BYTES)
*                                  LENGTH OF SD, PC, CM, PR (3 BYTES)
*                                  ZERO FOR WX, NULL, ER    (3 BYTES)
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE AN ESD TABLE ENTRY                             *
*                                                                     *
***********************************************************************
ESD      DSECT
ESDNAME  DS    CL8 -               CSECT NAME
ESDAD    DS    XL3 -               LINKEDITOR ASSIGNED ADDRESS
ESDLENG  DS    CL3 -               CSECT LENGTH
         DS    CL1 -               FILLER
ESDLAST  EQU   *
         PRINT NOGEN
         DCBD  DEVD=DA,DSORG=QS
         END
