TWA      TITLE 'COBOL TOTAL ATTRIBUTE READER'
***********************************************************************
*                                                                     *
*        COBREAD                                                      *
*        -------                                                      *
*                                                             SBG 03/00
*        YOU HAVE TO BE CAREFUL TO LINKEDIT THIS MODULE WITH  SBG 03/00
*        AMODE 31 OR ANY, AND RMODE 24, AND NOT RENT.         SBG 03/00
*                                                                     *
*        SEARCH A PDS AND REPORT ON THE ATTRIBUTES                    *
*        OF EACH LOAD MODULE CREATED BY COBOL.                        *
*                                                                     *
*        OPTIONALLY READ AND REPORT ON A SINGLE MEMBER OF             *
*        A PDS, TRIGGERED BY PRESENCE OF A PARM (MEMBER NAME)         *
*                                                                     *
*        THIS VERSION SUPPORTS THE FOLLOWING COBOL COMPILERS          *
*             VERSION 4, COBOL VS.                                    *
*                                                                     *
*        FOR EACH MEMBER, THE FOLLOWING IS LISTED                     *
*            BY THE FORMATTER SUBROUTINE COBRPT                       *
*                                                                     *
*               IS PROGRAM MARKED EXECUTABLE                          *
*               IS IT COBOL?                                          *
*               IS IT OBJ360 OR OBJ370                                *
*               IS COBOL /TEST/ OPTION SPECIFIED                      *
*               IS COBOL /FLOW/ OPTION SPECIFIED                      *
*               IS COBOL /STATE/ OPTION SPECIFIED                     *
*               IS COBOL /SYMDUMP/ OPTION SPECIFIED                   *
*               IS COBOL /RESIDENT/ OPTION SPECIFIED    3/79          *
*               IS COBOL /ENDJOB/ OPTION SPECIFIED                    *
*               WAS COBOL /OPTIMIZE/ OPTION SPECIFIED - V4 ONLY       *
*               WAS CAPEX OPTIMIZE SPECIFIED                          *
*               WAS CAPEX DTECT SPECIFIED             - CAPEX ONLY    *
*               WAS COBOL V4 OR COBOL VS UTILIZED FOR COMPILE         *
*               WAS COBOL /COUNT/ OPTION SPECIFIED    - VS ONLY       *
*               WAS COBOL /TRACE/ VERB SPECIFIED      - VS ONLY       *
*               DATE LINKEDITED                                       *
*                                                                     *
*        MODIFIED 3/10/80                                             *
*        -     ADDED ADDITIONAL CHECK FOR NON-EXECUTABLE, NOW         *
*              SEPERATES NON-EXEC FROM OTHER LOAD FAILURES            *
*        -     ADDED ADDITIONAL SUMMARY INFORMATION PRINT FROM        *
*              COBFMT                                                 *
*        -     CORRECTED MINOR BUGGIES                                *
*                                                                     *
*        WRITTEN BY REX WIDMER                                        *
*                                                                     *
*        TRANS WORLD AIRLINES INC.                                    *
*        KANSAS CITY ADMINISTRATIVE CENTER                            *
*        11500 AMBASSADOR DRIVE                                       *
*        KANSAS CITY, MO 64153                                        *
*                                                                     *
*        816-464-6671                                                 *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        JCL / DD-CARD REQUIREMENTS                                   *
*                                                                     *
*        SAMPLE JOBSTREAM                                             *
*                                                                     *
*          //S1 EXEC PGM=COBREAD                                      *
*          //* PARM='MEMNAME'                                         *
*          //*  OPTIONAL PARM OF MEMBER NAME TO PROCESS               *
*          //SYSPRINT  DD  SYSOUT=A      FOR THE REPORT               *
*          //PDS   DD  DSN=SYPP.PGMLIB,DISP=SHR                       *
*          //*         THE PDS TO ANALYZE                             *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        ABENDS WITHIN THIS MODULE                                    *
*          USER CODE    MEANING                                       *
*           U0027       TABLE OVERFLOW, TOO MANY ESDS IN LOAD MODULE  *
*           U0002       RDJFCB FAILED                                 *
*           U0003       OBTAIN FAILED                                 *
*           U0004       DATASET TO BE PROCESSED NOT A PDS             *
*           U0005       OPEN FAILED FOR PDS DCBS                      *
*           U0006       OPEN FAILED FOR SYSPRINT                      *
*                                                                     *
***********************************************************************
         EJECT
COBREAD  CENTER TYPE=C
         SYMREGS
         EJECT
         L     R2,0(R1)            GET THE PARM POINTER
         LH    R1,0(R2)            GET PARM LENGTH
         LTR   R1,R1               SEE IF ZERO
         BZ    ALLMEM              YES, DO ALL MEMBERS
         BCTR  R1,0                DECREMENT FOR MVC
         EX    R1,MVCNAME          MOVE THE NAME
         OI    MSW,ONEMEM          SET THE 1 - MEMBER SWITCH
*        READ THE JFCB TO PREPARE FOR AN OBTAIN  -
ALLMEM   RDJFCB (MEMDCB)           READ THE JFCB FOR THE PDS
         LTR   R15,R15             DID IT DO THAT O.K.  ?
         BNZ   ERROR2              NO - BRANCH
         SPACE 1
*        ISSUE  AN OBTAIN, TO SEE IF THE PDS EXISTS -
         OBTAIN CAMLIST            ISSUE OBTAIN
         LTR   R15,R15             DID THE OBTAIN OBTAIN ANYTHING ?
         BNZ   ERROR3              NO - BRANCH
         SPACE 1
*        TEST TO ENSURE THAT THIS DATASET IS A PDS  -
         TM    AREA+38,X'02'       TEST FOR 'DSORG=PO' IN FORMAT 1
         BZ    ERROR4              NOT A PDS - BRANCH
         SPACE 1
*        OPEN THE DCBS FOR THE DIRECTORY AND THE MEMBERS  -
         OPEN  (DIRDCB,,MEMDCB)    ISSUE THE OPEN
         TM    DIRDCB+48,X'10'     DID THE DIRECTORY DCB OPEN O.K. ?
         BZ    ERROR5              NO - BRANCH
         TM    MEMDCB+48,X'10'     DID THE MEMBER DCB OPEN O.K. ?
         BZ    ERROR5              NO - BRANCH
         SPACE 1
*        GET A BUFFER TO READ THE MEMBERS INTO  -
         MVC   BUFFLEN,MEMDCB+62   GET BLOCKSIZE FROM THE DCB
         L     R0,BUFFER           LENGTH + SP I.D. FOR GETMAIN
         GETMAIN R,LV=(0)          ISSUE GETMAIN
         ST    R1,DECB+12          PUT POINTER TO BUFFER IN DECB
         SPACE 1
*        INITIALISE  THE BUFFER TO ZEROS (EASIER DEBUGGING)  -
         LH    R2,BUFFLEN          GET LENGTH OF THE BUFFER
ZEROLOOP MVI   0(R1),0             MOVE A ZERO INTO THE BUFFER
         LA    R1,1(,R1)           INDEX THROUGH THE BUFFER
         BCT   R2,ZEROLOOP         ZERO THE ENTIRE BUFFER
         SPACE 1
         OPEN  (SYSPRINT,(OUTPUT)) OPEN SYSPRINT
         TM    SYSPRINT+48,X'10'   DID IT OPEN O.K.  ?
         BZ    ERROR6              NO - BRANCH
         SPACE 1
*        GET TIME AND DATE  -
         TIME  DEC
         ST    R0,TIME             SAVE TIME
         ST    R1,DATE             SAVE DATE
         MVO   TIM,TIME(2)         SAVE TIME
         SPACE 1
*        GET JOBNAME OF JOB, AND SAVE IT  -
         EXTRACT FIELD1,FIELDS=(TIOT)
         L     R1,FIELD1           POINT TO TIOT
         MVC   JNAME,0(R1)         SAVE JOBNAME
         B     GET                 GET THE FIRST PDS DIRECTORY BLOCK
         SPACE 2
*
*        GET NEXT MEMBER IN THE PDS  -
*
*        FIRST  LOOK FOR A MEMBER IN THE CURRENT DIRECTORY BLOCK -
LOOPDS1  L     R2,DIRPOINT         POINT TO THE NEXT MEMBER
         IC    R3,11(,R2)          GET LENGTH OF USER DATA
         N     R3,MASK2            LENGTH IS 5 BITS
         SLL   R3,1                X 2 BECAUSE LENGTH IN HALF-WORDS
         LA    R3,12(,R3)          ADD LENGTH OF MEMBER NAME + TTRC
         AR    R3,R2               POINT TO NEXT MEMBER
         SPACE 1
*        FIND  THE END OF THE DIRECTORY BLOCK  -
         LA    R4,DIRBLOCK         POINT TO THE CURRENT DIRECTORY BLK
         LH    R5,0(,R4)           GET LENGTH USED
         AR    R5,R4               POINT TO END OF THE BLOCK
         CR    R5,R3               HAS THIS BLOCK BEEN EXAUSTED ?
         BH    GOTNEXT             NO - BRANCH
         SPACE 1
*        READ THE NEXT DIRECTORY BLOCK  -
GET      GET   DIRDCB,DIRBLOCK     READ THE NEXT DIRECTORY BLOCK
         LA    R3,DIRBLOCK+2       POINT TO THE FIRST MEMBER IN BLOCK
GOTNEXT  ST    R3,DIRPOINT         SAVE POINTER TO NEXT MEMBER
         SPACE 1
*        TEST TO SEE IF WE HAVE GOT TO THE END OF THE PDS  -
PROCALL  CLC   0(8,R3),LASTMEM     LOOK FOR A MEMBER NAME OF FOXES
         BE    ENDPDS              GOT TO END - BRANCH
         TM    MSW,ONEMEM          ARE WE IN 1 MEMBER ONLY MODE
         BZ    COUNT               NO, CONTINUE
         CLC   0(8,R3),CNAME       COMPARE FOR DESIRED NAME
         BE    COUNT               WE FOUND DESIRED NAME
         BH    ENDPDS              WE ARE PAST THE DESIRED ONE
         B     LOOPDS1             GO AND TRY THE NEXT MEMBER
         SPACE 1
*        COUNT # OF MEMBERS READ  -
COUNT    L     R1,CPMEM            GET # OF MEMBERS READ
         AL    R1,=F'1'            INCREMENT BY 1
         ST    R1,CPMEM            AND SAVE IT
         SPACE 2
HITIT    L     R2,DIRPOINT         POINT TO DIRECTORY ENTRY
         MVC   TTRZ(3),8(R2)       SAVE TTR OF MEMBER
         POINT MEMDCB,TTRZ         POINT TO THIS MEMBER
         SPACE 1
*
*        TEST FOR ALIAS  -
*
         L     R2,DIRPOINT         POINT TO DIRECTORY ENTRY
         TM    11(R2),X'80'        IS THIS ENTRY AN ALIAS  ?
*        PROCESS ALIAS THE SAME AS OTHER MEMBERS  -
         EJECT
***********************************************************************
*                                                                     *
*        LOAD THE MEMBER, THEN READ THE LOAD MODULE RECORDS TO        *
*        LOCATE CSECTS WITHIN THE MODULE.                             *
*                                                                     *
***********************************************************************
         SPACE 1
*
*        BUILD A PRINT LINE  -
*
BUILD    LA    R7,LINE             R7 WILL POINT TO DETAIL PRINT LINE
         USING DETLINE,R7          -
         MVI   LINE,C' '           BLANK THE PRINT LINE
         MVC   LINE+1(131),LINE    -
         SPACE 1
         AP    CTMEM,=P'1'         COUNT NUMBER OF MEMBERS IN PDS
         SPACE 1
         L     R3,DIRPOINT         POINT TO DIRECTORY ENTRY
         SPACE 1
*        DETERMINE IF THE MEMBER WAS CREATED BY THE LINKAGE-EDITOR  -
         IC    R4,11(,R3)          GET LENGTH OF USER DATA
         N     R4,MASK2            -
         C     R4,=F'11'           MUST BE AT LEAST 11 HALF-WORDS
         BNL   CHEKEXEC            IT WAS LINKED - BRANCH
         SPACE 1
*        ISSUE MESSAGE - MODULE NOT CREATED BY LINKAGE-EDITOR  -
         MVC   DETMSG(16),=CL16'NOT LINKED'
         AP    CTNLE,=P'1'         COUNT NUMBER NOT LINKED
         MVI   RPTSW,1             SHOW DO NOT PRODUCE CSECT REPORT
         B     PUTTTRC
CHEKEXEC DS    0H                  DETERMINE IF MEMBER IS EXECUATBLE
         TM    20(R3),X'02'        DID L/E MARK IT EXEC
         BO    LOADIT              YES, TRY TO LOAD IT
*        ISSUE MESSAGE, MODULE NON EXECUTABLE
         MVC   DETMSG(16),=CL16'NOT EXECUTABLE'
         AP    CTNXE,=P'1'         COUNT NUMBER NOT EXECUTABLE
         MVI   RPTSW,1             SHOW DO NOT PRODUCE CSECT REPORT
         B     PUTTTRC
         EJECT
***********************************************************************
*                                                                     *
*        LOAD THE MODULE INTO STORAGE                                 *
*                                                                     *
***********************************************************************
         SPACE 1
LOADIT   DS    0H
         LOAD  EPLOC=(R3),ERRET=CANTRD,DCB=MEMDCB
         LR    R4,R0               SAVE LOAD MODULE ADDRESS
         EJECT
*
*        READ THE MODULE, TO GET THE DATE-LINKED FROM THE IDRDATA  -
*                            AND READ THE CESD RECORDS
DLINK    DS    0H
RX       EQU   8     *
RY       EQU   10      *   TEMPORARY FOR NOW
RZ       EQU   11    *
         L     RX,=A(CESDT)  GET ADDRESS OF CESD TABLE
         SR    RZ,RZ         COUNT OF ENTRIES IN USE
         ST    RZ,NRESD            STORE NUMBER CURRENTLY IN USE
         USING ESD,RX        ADDRESS ESD DSECT
         ST    RX,CURESD     STORE IN CURRENT RECORD
         ZAP   SKDTL,=P'0'         INITIALISE DATE-LINKED TO ZEROS
GETLOOP  L     R6,DECB+12          POINT TO INPUT AREA
         READ  DECB,SF,MF=E        READ THE NEXT RECORD
         CHECK DECB
         CLI   0(R6),X'20'         IS THIS A CESD RECORD
         BNE   NOTCESD              NO, LOOK FOR OTHER INTERESTING RECS
*        WE NOW HAVE A CESD RECORD, PULL SD SUBRECORDS
GOTCESD  LA    RY,8(,R6)           POINT TO ESD DATA AREA IN CESD REC
         LH    RZ,6(,R6)           COUNT OF BYTES OF ESD DATA
         USING CESD,RY             ADDRESS CESD SUBREC DESCRIPTION
NEXTSRL  TM    CESDTY,X'0F'        IS IT A SD TYPE
         BNZ   NEXTSR               IF ANY BITS ON, IT ISNT
         MVC   ESDNAME,CESDNM      PUT NAME IN TABLE
         MVC   ESDLENG,CESDIDL     PUT LENGTH IN TABLE
         MVC   ESDAD,CESDAD        PUT LINKEDITOR ADDRESS IN TABLE
         LA    RX,ESDLAST-ESD(,RX) TO THE NEXT SLOT
         L     R1,NRESD            GET CURRENT IN USE COUNT
         LA    R1,1(,R1)           INCREMENT
         ST    R1,NRESD            PUT IT BACK
         C     R1,=F'512'      SEE IF TABLE OVERFLOW
         BNE   NEXTSR              NO, ITS OK
         ABEND 27,DUMP             TIME TO QUIT POST HASTE
NEXTSR   DS    0H                  TO NEXT SUBRECORD
         LA    RY,16(,RY)          POINT TO NEXT SR SLOT
         S     RZ,=F'16'           SEE IF ANY DATA IS REALLY LEFT
         BP    NEXTSRL
*                                  WE NOW HAVE ALL S/R FROM THIS CESD
NOTCESD  TM    0(R6),1             DOES THIS RECORD PRECEED A TEXT REC.
         BO    EODAD               YES - BRANCH (NO IDRDATA RECORDS)
         CLI   0(R6),X'80'         IS THIS AN IDRDATA RECORD ?
         BNE   GETLOOP             NO - BRANCH
         TM    2(R6),2             IS THIS IDRDATA FROM LINK-EDITOR ?
         BNO   GETLOOP             NO - BRANCH
         ZAP   SKDTL,15(3,R6)      SAVE DATE LINKED
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT AND PRINT GENERAL ITEMS ABOUT LOAD MODULE             *
*                                                                     *
***********************************************************************
         SPACE 1
EODAD    DS    0H
         MVC   DETDTL-1(7),PAT01
         ED    DETDTL-1(7),SKDTL   PUT DATE LINKED INTO PRINT LINE
*        OI    DETDTL,C'0'         FIX HIGH ORDER BYTE        SBG 03/00
         MVI   DETDTL-1,X'40'      0 FILL BYTE NOW-NEED BLANK SBG 03/00
         SPACE 1
*        MODULE ENTRY POINT  -
         MVC   MODEP+1(3),27(R3)   CAPTURE EP OFFSET FOR LATER USE
         S     R4,MODEP            ADJUST IF MODULE E.P. NOT 0
         UNPK  DWA(7),27(4,R3)     UNPACK IT
         MVC   DETEP,DWA           MOVE THE 6 SIGNIFICANT CHARS
         TR    DETEP,TABLE1        AND MAKE INTO PRINTABLE HEX
         SPACE 1
*        MODULE SIZE  -
         UNPK  DWA(7),22(4,R3)
         MVC   DETSIZE,DWA
         TR    DETSIZE,TABLE1
         SPACE 1
*        MODULE ATTRIBUTES  -
         UNPK  DWA(5),20(3,R3)
         MVC   DETATTR,DWA
         TR    DETATTR,TABLE1
         SPACE 1
*        TTRC  -
PUTTTRC  DS    0H
         UNPK  DWA(9),8(5,R3)
         MVC   DETTTRC,DWA
         TR    DETTTRC,TABLE1
         SPACE 1
*        MEMBER NAME  -
PUTMEM   DS    0H
         MVC   DETMEM,0(R3)
         SPACE 2
SPC1     EQU   C' '
SPC3     EQU   C'-'
PAGEE    EQU   C'1'
         MVI   CNTL,SPC1
         BAL   R9,WRITE            PUT A LINE TO THE PRINTER
         EJECT
*
*        NOW CALL CSECT REPORTER WITH CSECT TABLE
*
         CLI   RPTSW,1              DID MODULE FAIL TO LOAD
         BE    DONEREP              YES, WE CANNOT REPORT IT
         L     RX,=A(CESDT)         GET ADDRESS OF CESD TABLE
         L     RZ,NRESD             GET COUNT OF ENTRIES
         LTR   RZ,RZ                ANY MORE LEFT
         BZ    DONEREP               NO, DONE WITH REPORTING
REPLOOP  DS    0H
*        FIND A CSECT TO PASS, RELOCATE THE LOAD POINT
*        BY THE CSECT ADDRESS
         L     R1,ESDAD             GET THE LINKEDIT ADDRESS
         SRL   R1,8                 MAKE 3 BYTE INTO 4
         LA    R1,0(R1,R4)          RELOCATE THE LOAD ADDRESS
         ST    R1,POINTER           PUT IT IN THE PARAMETER
         MVC   LENGTH+1(3),ESDLENG  PICK UP 3 BYTE LENGTH CODE
         MVC   NAME,ESDNAME         PICK UP 8 BYTE CSECT NAME
         CLI   ALLSW,1              ARE WE PRINTING ALL CSECTS
         BE    POINTP               IF SO, DONT SUPPRESS LIB CODES
         CLC   NAME(3),=CL3'ILB'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               COBOL V2, V3, V4, VS LIBRARY
         CLC   NAME(3),=CL3'IHO'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               FORTRAN MOD II LIBRARY
         CLC   NAME(3),=CL3'IHC'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               FORTRAN FREEBIE LIBRARY
         CLC   NAME(3),=CL3'IHN'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               FORTRAN MOD I LIBRARY
         CLC   NAME(3),=CL3'IBM'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               PL/I OPTIMIZER LIBRARY
         CLC   NAME(3),=CL3'IHE'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               PL/I FREEBIE LIBRARY
         CLC   NAME(3),=CL3'IHD'    IS IT A SUPPRESSED NAME
         BE    NEXTONE               COBOL F LIBRARY (ANCIENT)
POINTP   LA    R1,PARMLIST          POINT TO PARAMETER LIST
         L     R15,=V(COBFMT)       GET ADDRESS OF REPORT ROUTINE
         BALR  R14,R15             CALL THE CSECT REPORT ROUTINE
NEXTONE  LA    RX,ESDLAST-ESD(,RX) TO NEXT ENTRY IF PRESENT
         BCT   RZ,REPLOOP          ANY MORE LEFT?
DONEREP  DS    0H                  DONE WITH PRINT
         MVI   RPTSW,0             CLEAR ERROR SWITCH
*
*        DELETE MODULE - AND GO TO NEXT ONE  -
*
DONETHIS DELETE EPLOC=(R3)
         TM    MSW,ONEMEM
         BO    ENDPDS              QUIT AFTER FORMATTING SINGLE REQ
         B     LOOPDS1             GO AND WORK ON NEXT MEMBER
         SPACE 1
*
*        ERROR TRYING TO LOAD THIS MODULE  -
*
CANTRD   STC   R15,WORK+6          SAVE RETURN CODE FROM LOAD MACRO
         MVC   DETMSG(16),=CL16'CANT LOAD OK -'
         UNPK  WORK(3),WORK+6(2)   MAKE RETURN CODE PRINTABLE
         TR    WORK(2),TABLE1
         MVC   DETMSG+15(2),WORK   PUT RETURN CODE INTO MSG.
         AP    CTWNL,=P'1'         COUNT NUMBER UNABLE TO LOAD
         MVI   RPTSW,1             SHOW DO NOT PREPARE CSECT REPORT
         B     DLINK
         EJECT
***********************************************************************
*                                                                     *
*        END OF THE PDS - CLEAN UP AND EOJ                            *
*                                                                     *
***********************************************************************
         SPACE 1
*        CLOSE DCBS FOR THE PDS  -
ENDPDS   CLOSE (MEMDCB,,DIRDCB)    ISSUE CLOSE
         SPACE 1
*        FREE THE BUFFER USED TO READ THE MEMBERS  -
         L     R0,BUFFER           GET LENGTH AND S.P.
         L     R1,DECB+12          POINT TO BUFFER
         FREEMAIN R,LV=(0),A=(1)   ISSUE FREEMAIN
         SPACE 1
*        FREE  THE BUFFERS USED BY THE DIRECTORY DCB  -
         FREEPOOL DIRDCB
         SPACE 1
*        ISSUE THE END MESSAGES  -
         TM    MSW,ONEMEM          ARE WE PROCESSING ONE MEMBER ONLY ?
         BO    CLOSPRNT            YES - BRANCH
         SPACE 1
         OI    MSW,MSW40           SET 'NO SECONDARY HEADINGS'
         ZAP   LINENO,MAXLINE      FORCE PAGE SKIP
         MVI   CNTL,SPC3           SPACE 3 IMMED.
         BAL   R9,WRITE
         MVI   CNTL,SPC3           SPACE 3 IMMED.
         BAL   R9,WRITE
         SPACE 1
*        PUT SUMMARY LINE - TOTAL MEMBERS IN LIBRARY  -
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTMEM
         MVC   LINE+5(40),HDMEM
         BAL   R9,WRITE
         SPACE 1
*        PUT SUMMARY LINE - NOT CREATED BY LINKAGE-EDITOR  -
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTNLE
         MVC   LINE+5(40),HDNLE
         BAL   R9,WRITE
         SPACE 1
*        PUT SUMMARY LINE - NON EXECUTABLE
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTNXE
         MVC   LINE+5(40),HDNXE
         BAL   R9,WRITE
         SPACE 1
*        PUT SUMMARY LINE - TOTAL MEMBERS THAT WILL NOT LOAD  -
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04
         ED    LINE+50(10),CTWNL
         MVC   LINE+5(40),HDWNL
         BAL   R9,WRITE
*        PUT SUMMARY FROM COBFMT -
         MVI   CNTL,SPC3           SPACE 3 IMMED.
         BAL   R9,WRITE
         MVI   CNTL,SPC3           SPACE 3 IMMED.
         BAL   R9,WRITE
         L     R3,PARMLIST         GET ADDRESS OF COUNT TABLE
PRNTCNTS DS    0H
         LTR   R3,R3               IS THE COUNT TABLE PRESENT    RS0300
         BZ    CLOSPRNT            NO - LEAVE                    RS0300
         CLI   0(R3),X'FF'         IS THIS THE END OF COUNT TABLE
         BE    CLOSPRNT            YES - BRANCH
         MVI   CNTL,SPC1
         MVC   LINE+50(10),PAT04   PATTERN FOR COUNT FORMATTING
         ED    LINE+50(10),0(R3)   COUNT
         MVC   LINE+5(40),4(R3)    TEXT OF MESSAGE
         BAL   R9,WRITE            OUT WITH THE MESSAGE
         LA    R3,44(,R3)          TO THE NEXT ENTRY IN COUNT TABLE
         B     PRNTCNTS            AND LOOP
         SPACE 1
CLOSPRNT CLOSE (SYSPRINT)          CLOSE SYSPRINT
         SPACE 1
         FREEPOOL SYSPRINT         FREE THE SYSPRINT BUFFER POOL
         SPACE 1
GOBACK   RETRN  RC=0
         LTORG
         EJECT
         DS    0H                  FORCE ALIGNMENT
PRINTR   CENTER TYPE=E,BASE=11    FOR EXTERNAL CALLS ONLY
         L     R12,=A(COBREAD)    RESET BASE AS NEEDED
         L     R1,0(,R1)          POINT TO THE PASSED RECORD
         MVC   CNTL(133),0(R1)
         BAL   R9,WRITE           ISSUE THE PUT
         RETRN RC=0
         LTORG
         DROP  R11
         EJECT
***********************************************************************
*                                                                     *
*        WRITE A LINE TO THE PRINTER                                  *
*                                                                     *
***********************************************************************
         SPACE 1
WRITE    ST    R9,SAVE9
*
*        TEST  FOR HEADINGS REQUIRED  -
*
         CP    LINENO,MAXLINE      IS IT BOTTOM OF PAGE YET  ?
         BL    NOHEAD              NO - BRANCH
         SPACE 1
         ZAP   LINENO,=P'0'        RESET LINE COUNTER
         AP    PAGE,=P'1'          INCREMENT PAGE #
         SPACE 1
         MVI   HCNTL,PAGEE         SKIP TO 01
         MVI   HLINE,C' '          BLANK HEADING PRINT LINE
         MVC   HLINE+1(131),HLINE  -
         LA    R2,HCNTL            POINT TO PRINT LINE
         BAL   R9,PRINT            GO PRINT
         SPACE 1
         MVC   HLINE+110(6),PAT02
         ED    HLINE+110(6),PAGE   EDIT PAGE #
         MVC   HLINE+106(4),=C'PAGE'
         MVC   HLINE+90(7),PAT01
         ED    HLINE+90(7),DATE+1  EDIT DATE  YY.DDD
         MVI   HLINE+90,X'40'   ZERO FILL BYTE NOW-NEED BLANK SBG 03/00
         MVC   HLINE+83(5),=C'DATE:'
         MVC   HLINE+30(L'HEAD01),HEAD01
         MVC   HLINE(8),JNAME
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 1
         MVC   HLINE+90(7),PAT03
         ED    HLINE+90(7),TIM     EDIT TIME  HH.MM
         MVC   HLINE+83(5),=C'TIME:'
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 2
*        PUT DSNAME = AND VOLSER =  -
         LA    R1,JFCB             POINT TO JFCB
         MVC   HLINE+25(44),0(R1)  MOVE DSNAME
         MVC   HLINE+16(8),=C'DSNAME ='
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 1
         LA    R1,JFCB             POINT TO JFCB
         MVC   HLINE+25(6),118(R1) MOVE VOLSER
         MVC   HLINE+16(8),=C'VOLUME ='
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 1
         TM    MSW,MSW40
         BO    NOHEAD
         SPACE 1
         MVC   HLINE(132),HEAD02
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 1
         MVC   HLINE(132),HEAD03
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 1
         MVC   HLINE(132),HEAD04
         MVI   HCNTL,SPC1
         LA    R2,HCNTL
         BAL   R9,PRINT
         SPACE 2
NOHEAD   AP    LINENO,=P'1'        INCREMENT LINE #
         LA    R2,CNTL             POINT TO DETAIL PRINT LINE
         BAL   R9,PRINT            PRINT IT
         L     R9,SAVE9            RESTORE RETUTN REGISTER
         BR    R9                  RETURN
         EJECT
***********************************************************************
*                                                                     *
*        PRINT A LINE SUBROUTINE                                      *
*                                                                     *
***********************************************************************
PRINT    LR    R0,R2               POINT TO LINE TO PRINT
         PUT   SYSPRINT            PUT IT
         MVI   0(R2),C' '          BLANK OUT THE LINE WE PRINTED
         MVC   1(131,R2),0(R2)     -
         BR    R9                  RETURN
         EJECT
***********************************************************************
*                                                                     *
*        ERROR CONDITIONS                                             *
*                                                                     *
***********************************************************************
         SPACE 1
*        ERROR IN RDJFCB  -
ERROR2   LA    R2,MEMDCB           POINT TO DCB
         ABEND 2,DUMP
         SPACE 1
*        ERROR IN OBTAIN  -
ERROR3   LA    R2,CAMLIST          POINT TO CAMLST
         ABEND 3,DUMP
         SPACE 1
*        DATASET TO BE PROCESSED IS NOT A PDS  -
ERROR4   LA    R2,AREA             POINT TO FORMAT 1 LABEL
         ABEND 4,DUMP
         SPACE 1
*        CANNOT OPEN PDS DCBS  -
ERROR5   LA    R2,DIRDCB           POINT TO DIRECTORY DCB
         LA    R3,MEMDCB           POINT TO MEMBER DCB
         ABEND 5,DUMP
         SPACE 1
*        UNABLE TO OPEN SYSPRINT  -
ERROR6   LA    R2,SYSPRINT         POINT TO SYSPRINT DCB
         ABEND 6,DUMP              ABEND
         EJECT
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*                                                                     *
*        C O N S T A N T S                                            *
*                                                                     *
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
WORK     DC    D'0'                WORK AREA
SAVE9    DC    F'0'                REG. 9 SAVE AREA
         SPACE 1
PARMLIST DC    A(0)                ADDRESS OF COUNT TABLE
         DC    X'80',AL3(POINTER)
POINTER  DC    F'0'                CURRENT CSECT ADDRESS
LENGTH   DC    F'0'                CURRENT CSECT LENGTH
NAME     DC    CL8' '              CURRENT CSECT NAME
MODEP    DC    F'0'                RELATIVE EP OF CURRENT MODULE
         SPACE 1
MASK     DC    F'63'               MASK FOR 6 BITS   2 - 7
MASK2    DC    F'31'               MASK FOR 5 BITS   3 - 7
         DC    0H'0'
MVCNAME  MVC   CNAME(0),2(R2)      MOVE PARM FIELD
CNAME    DC    CL8' '              NAME PASSED IN PARM FIELD
         SPACE 1
*        FLAGS  -
MSW      DC    X'00'               FLAGS
ONEMEM EQU     X'80'               ONLY ONE MEMBER TO BE PROCESSED
MSW40 EQU      X'40'               BYPASS SECONDARY HEADINGS
RPTSW    DC    X'00'               IF NON-ZERO DONT REPORT CSECTS
ALLSW    DC    X'00'               IF NON-ZERO REPORT ALL CSECTS
*                                  ELSE SUPPRESS ILB, IBM, IHO
         SPACE 1
*        FIELDS RELATING TO THE PDS  -
TTRZ     DC    F'0'                TTR OF MEMBER I AM PROCESSING
         READ  DECB,SF,MEMDCB,0,'S',MF=L                       DECB
         SPACE 1
BUFFER   DC    0F'0',X'0200'       LENGTH + SP FOR GETMAIN
BUFFLEN  DC    H'0'                -
         SPACE 1
CPMEM    DC    F'0'                # OF MEMBERS PROCESSED FROM PDS
         SPACE 1
DIRPOINT DC    F'0'                POINTER TO CURRENT MEMBER
LASTMEM  DC    8X'FF'              NAME OF LAST MEMBER IN PDS
EXLST    DC    0F'0',X'87',AL3(JFCB)
TGTPTR   DC    F'0'                POINTER TO CURRENT TGT
INIT1PTR DC    F'0'                POINTER TO CURRENT INIT1 CODE
         SPACE 1
*        TRANSLATE TABLE TO CONVERT TO PRINTABLE HEX  -
         ORG   *-240
TABLE1   EQU   *
         ORG
         DC    C'0123456789ABCDEF'
         SPACE 1
         DC    0D'0'
         LTORG
         DC    0D'0'
         SPACE 1
CAMLIST  CAMLST SEARCH,JFCB,JFCB+118,AREA
         SPACE 1
JFCB     DC    0D'0',176X'00'      AREA TO READ THE JFCB INTO
AREA     DC    0D'0',148X'00'      AREA TO CONTAIN THE FORMAT 1 LABEL
DIRBLOCK DC    32D'0'              CURRENT DIRECTORY BLOCK
         SPACE 1
JNAME    DC    CL8' '              JOBNAME OF THIS JOB
FIELD1   DC    F'0'                POINTER TO TIOT
         SPACE
*        DETAIL PRINT LINE  _
CNTL     DC    C' '
LINE     DC    132C' '
         SPACE 1
*        HEADING PRINT LINE  -
HCNTL    DC    C'1'
HLINE    DC    132C' '
         SPACE 1
PAT01    DC    XL7'F021204B202020'
PAT02    DC    XL6'402020202120'
PAT03    DC    XL7'402120204B2020'
PAT04    DC    XL10'40206B2020206B202120'
         SPACE 1
SKDTL    DC    PL3'0'              DATE-LINKED FOR CURRENT MEMBER
         SPACE 1
PAGE     DC    PL3'0'              CURRENT PAGE #
LINENO   DC    PL2'99'             CURRENT LINE #
MAXLINE  DC    PL2'45'             MAX # OF LINES/PAGE
         SPACE 1
DWA      DC    2D'0'               WORK SPACE
TIME     DC    F'0'
TIM      DC    X'00000F'
DATE     DC    F'0'
         SPACE 1
         SPACE 1
*        COUNTERS FOR EOJ STATISTICS  -
HDMEM    DC    CL40'TOTAL MEMBERS IN LIBRARY'
HDNLE    DC    CL40'NUMBER NOT CREATED BY LINK-EDITOR'
HDNXE    DC    CL40'NUMBER NOT EXECUTABLE'
HDWNL    DC    CL40'MEMBERS WOULD NOT LOAD'
         SPACE 1
*        COUNTERS FOR EOJ STATISTICS  -
CTMEM    DC    PL4'0'              TOTAL MEMBERS IN LIBRARY
CTNLE    DC    PL4'0'              NUMBER NOT CREATED BY LINK-EDITOR
CTNXE    DC    PL4'0'              NUMBER NOT EXECUTABLE
CTWNL    DC    PL4'0'              NUMBER FOR WHICH WILL NOT LOAD
CTCOB    DC    PL4'0'              TOTAL MEMBERS CREATED BY COBOL
*        POINTERS AND COUNTERS FOR ESD TABLE
CURESD   DC    A(CESDT)            POINTS TO CURRENT SLOT
NRESD    DC    F'0'                CURRENT IN USE COUNT
*        D C B S  -
         PRINT NOGEN
*        MEMBER DCB - USED TO READ EACH MEMBER OF THE PDS  -
MEMDCB   DCB   DDNAME=PDS,DSORG=PO,MACRF=R,RECFM=U,EXLST=EXLST,        X
               EODAD=EODAD
         SPACE 1
*        DIRECTORY DCB - USED TO READ THE DIRECTORY OF THE PDS  -
DIRDCB   DCB   DDNAME=PDS,DSORG=PS,MACRF=GM,RECFM=F,BLKSIZE=256,       X
               LRECL=256,BUFNO=100
         SPACE 1
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA,  X
               BLKSIZE=1995
HEAD01   DC    C'T W A - PDS - CSECT ATTRIBUTES REPORT 01/80 VERSION'
HEAD02   DC    CL132' MOD-NAME    TTRC  L-ATTR LGTH  E.P.   L-DATE ----X
               ----------------------- ATTRIBUTE FLAGS ----------------X
               ---------------------'
HEAD03   DC    CL132'   CSECT-NM    LENGTH    DATE COMPILED        SYMDX
                  FLOW    STATE   TEST    RES     ENDJOB  OBJECT  OPT  X
                 VER COUNT TRACE DET'
         EJECT
HEAD04   DC    CL132'  ------------------------------------------------X
               --------------------------------------------------------X
               ---------------------'
         PRINT GEN
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*        CESD STORAGE TABLE                                           *
*         THIS TABLE STORES THE CESD INFORMATION FOR A SINGLE         *
*         LOAD MODULE                                                 *
*                                                                     *
*         TABLE ENTRIES ARE DESCRIBED BY THE DSECT CALLED ESD         *
*                                                                     *
***********************************************************************
         DC    D'0'
MAXCESD  EQU   0512          MAXIMUM ENTRIES IN ESD TABLE
*
*
CESDT    DC    512XL16'00'   CESD ENTRIES
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE AN CESD SUBRECORD                              *
*                                                                     *
***********************************************************************
CESD     DSECT
CESDNM   DS    CL8 -               CSECT NAME
CESDTY   DS    XL1 -               TYPE OF SYMBOL
CESDAD   DS    CL3 -               ADDRESS ASSIGNED TO SYMBOL
CESDSN   DS    CL1 -               SEGMENT NUMBER
CESDIDL  DS    CL3 -               ID FOR LR (2 BYTES)
*                                  LENGTH OF SD, PC, CM, PR (3 BYTES)
*                                  ZERO FOR WX, NULL, ER    (3 BYTES)
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OF THE AN ESD TABLE ENTRY                             *
*                                                                     *
***********************************************************************
ESD      DSECT
ESDNAME  DS    CL8 -               CSECT NAME
ESDAD    DS    XL3 -               LINKEDITOR ASSIGNED ADDRESS
ESDLENG  DS    CL3 -               CSECT LENGTH
         DS    CL2 -               FILLER
ESDLAST  EQU   *
***********************************************************************
*                                                                     *
*        FORMAT OF THE DETAIL PRINT LINE                              *
*                                                                     *
***********************************************************************
DETLINE  DSECT
         DS    CL1 -
DETMEM   DS    CL8 -               MEMBER NAME
         DS    CL1 -
DETTTRC  DS    XL8 -               TTRC
         DS    CL1 -
DETATTR  DS    XL4 -               MODULE ATTRIBUTES
         DS    CL1 -
DETSIZE  DS    CL6 -               MODULE SIZE
         DS    CL1 -
DETEP    DS    CL6 -               MODULE ENTRY POINT
         DS    CL1 -
DETDTL   DS    CL6 -               DATE LINKED
         DS    CL1 -
DETMSG   EQU   *
LNLGTH   EQU   *-DETLINE
         END
