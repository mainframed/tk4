//HPZ$Q   JOB ,ZBIEGIEN,MSGCLASS=W,CLASS=D
/*JOBPARM ROOM=3426
//* BUILD OVERLAYS
//* BUT THIS IS AN UP VERSION OF THE SET
//A EXEC SAS@
//OUT DD SYSOUT=W
//XYZ OUTPUT PRMODE=PAGE,DATACK=BLKCHAR
//NEWCHAR DD DSN=&&TEMP,DISP=(,PASS,DELETE),UNIT=DISK,
// DCB=(RECFM=VBA,BLKSIZE=8209,LRECL=8205),SPACE=(TRK,(5,5),RLSE)
//* TO SEE YOUR RESULTS YOU CAN SEND THE NEWCHAR DD FILE DIRRECTLY
//* TO THE PRINTER
//ABC DD *
BPG HPZ1
NOP
BAG
MCF X1GT10 X1GB10 X2GT18 X2AG0002 X1GT20 X1GT18 ENDMCF
PGD 11.005 IN 7.005 IN
CTC
CTD
EAG
IPS S1SIGNAT 1 IN 1 IN
IPS S1PALM2  3 IN 1 IN
IPS S1ROSE   1 IN 5 IN
BCT
CTX
MATRIX .5 IN .5 IN
ENDCTX
CTX
AMB 3.2 IN
AMI 3.1 IN
BOX 1 IN 1 IN 5
RMB 1.1 IN
RMI 1.1 IN
DIR .3 IN 8
DBR .1 IN 8
RMB -0.9 IN
RMI -0.5 IN
SCFL 2
TRN 5 ABCDEF
RMB .25 IN
SCFL 1
RPS 3 1 X
ENDCTX
CTX
STO DOWN
AMB 3.2 IN
AMI 3.1 IN
SIM .5 IN
SBI .1 IN
SCFL 4
RPS 20 1 ~
RMI -2 IN
SCFL 3
TRN 20 THIS IS A SAMPLE 1
BLN
SCFL 4
RPS 20 1 ~
RMI -2 IN
SCFL 3
TRN 20 THIS IS A SAMPLE 2
BLN
SCFL 4
RPS 20 1 ~
RMI -2 IN
SCFL 3
TRN 20 THIS IS A SAMPLE 3
BLN
SCFL 4
RPS 20 1 ~
RMI -2 IN
SCFL 3
TRN 20 THIS IS A SAMPLE 4
BLN
STO ACROSS
SIM 1.1 IN
BLN
SCFL 5
SVI .2 IN
TRN 25 SAMPLE AT .1 INCH APART1
BLN
SCFL 6
SII 20 PELS
TRN 25 SAMPLE AT .1 INCH APART2
BLN
DIR 1 IN 3
DBR 1 IN 3
RMB 1 IN
RMI .5 IN
DIR .5 IN 6
DBR .5 IN 6
SIM 0 PELS
ENDCTX
ECT
EPG
//SYSIN DD *
OPTIONS GEN=0;
DATA  _NULL_;
FILE NEWCHAR LINESIZE=8201 NOPRINT COLUMN=COLOUT;
INFILE ABC STOPOVER;
 LENGTH CRD $ 80;
 INPUT CRD $CHAR80. @;
 FILE OUT;
 PUT '  ' CRD $CHAR80.;
 FILE NEWCHAR LINESIZE=8201 NOPRINT COLUMN=COLOUT;
LENGTH OPCODE $ 6;
INPUT @1 OPCODE $       @;
IF OPCODE ='BMO' THEN DO; /* BEGIN MEDIUM OVERLAY */;
 LENGTH OVERNAME $ 8;
 RETAIN OVERNAME  ;
 INPUT OVERNAME $ ;
 PUT '5A0016D3A8DF000001'X OVERNAME $CHAR8. '000000000000'X;
 RETURN;
END;
IF OPCODE ='NOP' THEN DO; /* WRITE A DUMMY COMMENT */;
 T1=TIME();
 T2=DATE();
 PUT '5A003FD3EEEE000001'X 'CREATED BY HPZ' T1 TIME8.
      T2 MMDDYY8. @64 'X';
 RETURN;
END;
IF OPCODE='BAG' THEN DO; /* BEGIN ACTIVE ENVIRONMENT */;
 PUT '5A0016D3A8C9000002'X 'HPZTOKEN' '000000000000'X;
 RETURN;
END;
RETAIN X Y ;
IF OPCODE='PGD' THEN DO; /* PAGE DESCRIPTOR */;
 INPUT X XTYPE $ Y YTYPE $ ; /* READ PAGE SIZE */
 LINK CHKX;
 LINK CHKY;
 PUT '5A0017D3A6AF000002000009600960'X X IB3. Y IB3.
     '000400'X;
 RETAIN XSIZE YSIZE;
 XSIZE=X;
 YSIZE=Y;
 RETURN;
END;
IF OPCODE='CTC' THEN DO; /* COMPOSED TEXT CONTROL */;
 PUT '5A0012D3A79B00000300000000000000002D00'X;
 RETURN;
END;
IF OPCODE='CTD' THEN DO; /* COMPOSED TEXT DESCRIPTOR */;
 PUT '5A0019D3A69B000004000009600960'X  XSIZE IB2. YSIZE IB2.
     '00000000000000'X;
 RETURN;
END;
IF OPCODE='EAG' THEN DO; /* END ACTIVE ENVIRONMET GROUP */;
 PUT '5A0010D3A9C9000002'X 'HPZTOKEN' ;
 RETURN;
END;
IF OPCODE='IPS' THEN DO; /* INCLUDE PAGE SEGMENT */;
 INPUT SEGNAME $ @;
 INPUT X XTYPE $ Y YTYPE $ ; /* READ PAGE SIZE */
 LINK CHKX;
 LINK CHKY;
 PUT '5A0018D3AF5F000005'X SEGNAME $CHAR8.
     X IB3. Y IB3. '0000'X;
 RETURN;
END;
IF OPCODE='EMO' THEN DO; /* END MEDIUM OVERLAY */;
 PUT '5A0010D3A9DF000001'X OVERNAME $CHAR8.;
 RETURN;
END;
  /* IF BEGIN/END PAGE INSTEAD OF OVERLAY THEN CAN WRITE TO SYSOUT*/;
IF OPCODE ='BPG' THEN DO; /* BEGIN PAGE */;
 INPUT OVERNAME $ ;
 PUT '5A0016D3A8AF000001'X OVERNAME $CHAR8. '000000000000'X;
 RETURN;
END;
IF OPCODE='EPG' THEN DO; /* END PAGE */;
 PUT '5A0010D3A9AF000001'X OVERNAME $CHAR8.;
 RETURN;
END;
IF OPCODE ='BCT' THEN DO; /* BEGIN TEXT BLOCK */;
 PUT '5A0016D3A89B000001'X 'TEXTTOK '  '000000000000'X;
 RETURN;
END;
IF OPCODE='ECT' THEN DO; /* END TEXT BLOCK */;
 PUT '5A0010D3A99B000001'X 'TEXTTOK ' ;
 RETURN;
END;
 RETAIN XPOS YPOS;
IF OPCODE='MCF' THEN DO; /* MAP CODED FONT */;
 RETAIN FNTNO;
 FNTNAME='        ';
 FNTNO=1;
 DO UNTIL (FNTNAME='ENDMCF');
  INPUT FNTNAME $ @;
  IF FNTNAME NE 'ENDMCF' THEN DO;
   PT=28*(FNTNO-1)+14;
   PUT @PT FNTNO PIB1. '000000'X FNTNAME $CHAR8.
      'FFFF000000000000'X 'FFFF000000000000'X @;
   FNTNO=FNTNO+1;
  END;
  ELSE DO;
   PUT @1 '5A'X @4 'D3B18A0000011C000000'X @;
   FNTNO=FNTNO-1;
   WORK=FNTNO*28+12;
   PUT @2 WORK IB2.;
  END;
 END;
 RETURN;
END;
IF OPCODE='CTX' THEN DO; /* START COMPOSED TEXT */;
 PUT @1 '5A0000D3EE9B0000012BD3'X @;
 RETURN;
END;
IF OPCODE='AMB' THEN DO; /* ABSOLUTE MOVE BASELINE */;
 INPUT Y YTYPE $ ;
 LINK CHKY;
 IF Y>YSIZE THEN DO;
  FILE OUT;
  PUT 'Y POSITION TOO LARGE ON ' OPCODE ' CARD';
  ABORT;
 END;
 PUT '04D3'X Y IB2. @;
 YPOS=Y;
 RETURN;
END;
IF OPCODE='AMI' THEN DO; /* ABSOLUTE MOVE INLINE */;
 INPUT X XTYPE $ ;
 LINK CHKX;
 IF X>XSIZE THEN DO;
  FILE OUT;
  PUT 'X POSITION TOO LARGE ON ' OPCODE ' CARD';
  ABORT;
 END;
 PUT '04C7'X X IB2. @;
 XPOS=X;
 RETURN;
END;
IF OPCODE='RMB' THEN DO; /* RELATIVE MOVE BASELINE */;
 INPUT Y YTYPE $ ;
 LINK CHKY;
 IF Y+YPOS>YSIZE THEN DO;
  FILE OUT;
  PUT 'Y POSITION TOO LARGE ON ' OPCODE ' CARD';
  ABORT;
 END;
 PUT '04D5'X Y IB2. @;
 YPOS=Y+YPOS;
 RETURN;
END;
IF OPCODE='RMI' THEN DO; /* RELATIVE MOVE INLINE */;
 INPUT X XTYPE $ ;
 LINK CHKX;
 IF X+XPOS>XSIZE THEN DO;
  FILE OUT;
  PUT 'X POSITION TOO LARGE ON ' OPCODE ' CARD';
  ABORT;
 END;
 PUT '04C9'X X IB2. @;
 XPOS=X+XPOS;
 RETURN;
END;
IF OPCODE='DBR' THEN DO; /* DRAW BASELINE RULE */;
 INPUT Y YTYPE $ THICK;
 LINK CHKTHICK;
 LINK CHKY;
 IF YPOS+Y>YSIZE THEN DO;
  FILE OUT;
  PUT 'Y LENGTH TOO LARGE ON ' OPCODE ' CARD';
  ABORT;
 END;
 PUT '07E7'X Y IB2. THICK IB3. @;
 RETURN;
END;
IF OPCODE='DIR' THEN DO; /* DRAW INLINE RULE */;
 INPUT X XTYPE $ THICK;
 LINK CHKTHICK;
 LINK CHKX;
 IF XPOS+X>XSIZE THEN DO;
  FILE OUT;
  PUT 'X LENGTH TOO LARGE ON ' OPCODE ' CARD';
  ABORT;
 END;
 PUT '07E5'X X IB2. THICK IB3. @;
 RETURN;
END;
IF OPCODE='ENDCTX' THEN DO; /* PSEUDO OP CODE, WRITE CTX RECORD */;
 PUT '02F8'X @; /* NOOP CTX */;
 WORK=COLOUT-2;
 PUT @2 WORK IB2.;
 RETURN;
END;
IF OPCODE='SCFL' THEN DO; /* SET CODED FONT LOCAL */;
 INPUT FONT;
 IF FONT<0 OR FONT>FNTNO THEN DO;
  FILE OUT;
  PUT 'FONT NUMBER INVALID ON SCFL CARD';
  ABORT;
 END;
 PUT '03F1'X FONT IB1. @;
 RETURN;
END;
IF OPCODE='TRN' THEN DO; /* TRANSPARENT DATA */;
 INPUT TEXTLEN @;
 IF TEXTLEN <1 OR TEXTLEN>69 THEN DO;
  FILE OUT;
  PUT 'TEXT LENGTH IS INVALID ON ' OPCODE ' CARD';
  ABORT;
 END;
 INPUT TEXT $VARYING69. TEXTLEN;
 WORK=TEXTLEN+2;
 PUT WORK PIB1. 'DB'X TEXT $VARYING69. TEXTLEN @;
 RETURN;
END;
IF OPCODE='RPS' THEN DO; /* REPEAT STRING */;
 INPUT OLEN @;
 IF OLEN <1 OR OLEN> 4096 THEN DO;
  FILE OUT;
  PUT 'OUTPUT LENGTH INVALID ON RPS CARD';
  ABORT;
 END;
 INPUT TEXTLEN @;
 IF TEXTLEN <1 OR TEXTLEN>69 THEN DO;
  FILE OUT;
  PUT 'TEXT LENGTH IS INVALID ON ' OPCODE ' CARD';
  ABORT;
 END;
 INPUT TEXT $VARYING69. TEXTLEN;
 WORK=TEXTLEN+4;
 PUT WORK PIB1. 'EF'X OLEN IB2. TEXT $VARYING69. TEXTLEN @;
 RETURN;
END;
IF OPCODE='BOX' THEN DO; /* PSEUDO OP TO DRAW BOX */;
 INPUT X XTYPE $ Y YTYPE $ THICK ;
 LINK CHKX;
 LINK CHKY;
 LINK CHKTHICK;
 TH=THICK/256;
 IF X+XPOS+TH >XSIZE THEN DO;
  FILE OUT;
  PUT 'BOX EXCEEDS X PAGESIZE';
  ABORT;
 END;
 IF Y+YPOS+TH >YSIZE THEN DO;
  FILE OUT;
  PUT 'BOX EXCEEDS Y PAGESIZE';
  ABORT;
 END;
 /* NOTE THE COORDINATES ARE THE OUTSIDE CORNERS OF THE BOX */
 /* THE THICKNESS STARTS ON THE PEL COORDINATE AND EXTENDS   */
 /* TOWARD THE CENTER OF THE BOX */;
 WLEN=-X;
 HLEN=-Y;
 THICK=-THICK;
 PUT '04D5'X Y IB2. /*RMB*/ '04C9'X X IB2. /*RMI*/
     '07E7'X HLEN IB2. THICK IB3. @ /* DBR */;
 PUT '07E5'X WLEN IB2. THICK IB3. @ /* DIR */;
 X=-X;
 Y=-Y;
 WLEN=-WLEN;
 HLEN=-HLEN;
 THICK=-THICK;
 PUT '04D5'X Y IB2. /*RMB*/ '04C9'X X IB2. /*RMI*/
     '07E5'X WLEN IB2. THICK IB3. /* DIR */
     '07E7'X HLEN IB2. THICK IB3. @ /* DBR */;
 RETURN;
END;
IF OPCODE='MATRIX' THEN DO; /* PSEUDO OP CODE TO DRAW GRID */;
 INPUT X XTYPE $ Y YTYPE $ ;
 LINK CHKX;
 LINK CHKY;
 XTMP=0;
 YTMP=0;
 PUT '04D3000004C70000'X @;/* AMB, AMI TO ORIGIN */;
 DO UNTIL (YTMP>YSIZE);
  PUT '07E5'X XSIZE IB2. '000100'X @; /* DIR */;
  YTMP=YTMP+Y;
  IF YTMP+1<=YSIZE THEN PUT '04D5'X Y IB2. @;/* RMB */;
 END;
 PUT '04D30000'X @;/* AMB TO ORIGIN */;
 DO UNTIL (XTMP>XSIZE);
  PUT '07E7'X YSIZE IB2. '000100'X @; /* DBR */;
  XTMP=XTMP+X;
  IF XTMP+1<=XSIZE THEN PUT '04C9'X X IB2. @;/* RMI */;
 END;
 YPOS=0;
 XPOS=0;
 PUT '04D3'X YPOS IB2. '04C7'X XPOS IB2. @;/* AMB AMI */;
 RETURN;
END;
IF OPCODE='BLN' THEN DO; /* BEGIN LINE */;
 PUT '02D9'X @;
 RETURN;
END;
IF OPCODE='SBI' THEN DO; /* SET BASELINE INCR */;
 INPUT X XTYPE;
 LINK CHKX;
 IF X<5 OR X>240 THEN DO;
  PUT 'SET BASELINE INCR VALUE LT 5 OR GT 240 ' X;
  ABORT;
 END;
 PUT '04D1'X X PIB2. @;
 RETURN;
END;
IF OPCODE='SIM' THEN DO; /* SET INLINE MARGIN */;
 INPUT X XTYPE;
 LINK CHKX;
 IF X<0 OR X>2000 THEN DO;
  PUT 'SET INLINE MARGIN VALUE LT 0 OR GT 2000 ' X;
  ABORT;
 END;
 PUT '04C1'X X PIB2. @;
 RETURN;
END;
IF OPCODE='SVI' THEN DO; /* SET VARIABLE SPACE INCREMENT */;
 INPUT X XTYPE;
 LINK CHKX;
 IF X<1 OR X>240 THEN DO;
  PUT 'SET VARIABLE SPACE INCREMENT LT 1 OR GT 240 ' X;
  ABORT;
 END;
 PUT '04C5'X X PIB2. @;
 RETURN;
END;
IF OPCODE='STO' THEN DO; /* SET TEXT ORIENTATION */;
 INPUT DIR $;
 IF NOT (DIR='ACROSS' OR DIR='UP' OR DIR='DOWN') THEN DO;
  PUT 'SET TEXT ORIENTATION DIRECTION INVALID ' DIR;
  ABORT;
 END;
 LENGTH DIRX $ 4;
 IF DIR='ACROSS'    THEN DIRX='00002D00'X;
 ELSE IF DIR='DOWN' THEN DIRX='2D005A00'X;
 ELSE                    DIRX='87000000'X;
 PUT '06F7'X DIRX $CHAR4. @;
 RETURN;
END;
IF OPCODE='SII' THEN DO; /* SET INTERCHARACTER INCREMENT */;
 INPUT X XTYPE;
 LINK CHKX;
 IF X < 0 OR X>240 THEN DO;
  PUT 'SET INTERCHARACTER INCREMENT INVALID ' X;
  ABORT;
 END;
 PUT '04C3'X X PIB2. @;
 RETURN;
END;

FILE OUT;
PUT 'UNKNOWN OPCODE TYPE:' OPCODE;
ABORT;
RETURN;
CHKY:
 IF NOT (YTYPE='IN' OR YTYPE='PELS') THEN DO;
  FILE OUT;
  PUT 'INVALID TYPE OF INCREMENT ON ' OPCODE ' CARD:' YTYPE;
  ABORT;
 END;
 IF YTYPE='IN' THEN Y=Y*240;
 Y=INT(Y);
 RETURN;
CHKX:
 IF NOT (XTYPE='IN' OR XTYPE='PELS') THEN DO;
  FILE OUT;
  PUT 'INVALID TYPE OF INCREMENT ON ' OPCODE ' CARD:' XTYPE;
  ABORT;
 END;
 IF XTYPE='IN' THEN X=X*240;
 X=INT(X);
 RETURN;
CHKTHICK:
 IF THICK>10 OR THICK<-10 THEN DO;
  FILE OUT;
  PUT 'THICKNESS VALUE INVALID ON ' OPCODE ' CARD:' THICK;
  ABORT;
 END;
 THICK=THICK*256; /* MOVE OVER 8 BITS FOR LATER OUTPUT */;
 RETURN;
//A EXEC AGRPRINT,REPO=W  A FILE PRINT UTILITY
PRTBV
//INPUT DD DSN=&&TEMP,DISP=(OLD,DELETE,DELETE)
