//HPZ$FOR JOB ,ZBIEGIEN,MSGCLASS=W,CLASS=3
/*JOBPARM ROOM=3426
//A EXEC AGASMCL,OUT=W,LIBRARY='HPZ.TESTLIB(NCZ93205)'
//ASM.SYSIN DD *
* I PUT ALL THE MACROS INSTREAM
         MACRO
&NAME    MCLEAR &RC=0,&RE=NO,&LDSA=YES
.*       SII MCEVOY RETURN MACRO
.* CHANGE HISTORY:
.* 28/10/81 RH : CREATED WITHOUT MODIFICATIONS FROM LOLA 'CLEAR'
.*
         AIF   ('&RE' EQ 'NO').LOAD13
         AIF   ('&RE' EQ 'YES').RESET13
         MNOTE 4,'INVALID SPECIFICATION FOR ''RE'' ''NO'' ASSUMED'
         AGO   .LOAD13
.RESET13 ANOP
&NAME    LA    1,8
         LA    13,0(13)
         SR    13,1
         L     0,0(13)
         L     1,4(13)
         LA    1,0(1)
         L     13,12(13)
         FREEMAIN R,LV=(0),A=(1)
         AGO   .TESTRC
.LOAD13  AIF   ('&LDSA' EQ 'YES').SET13
         AIF   ('&LDSA' EQ 'NO').NOLDSA
         MNOTE 4,'INVALID LDSA SPECIFIED ''NO'' ASSUMED'
.NOLDSA  ANOP
&NAME    LA    13,0(13)
         AGO   .TESTRC
.SET13   ANOP
&NAME    L     13,4(13)
.TESTRC  AIF   ('&RC' EQ '(15)').STR15
         AIF   (T'&RC NE 'N').INVLCD
         AIF   (&RC EQ 0).RC0
         AIF   (&RC GE 1 AND &RC LE 4095).SETRC
.INVLCD  ANOP
         MNOTE 4,'RETURN CODE SPECIFICATION INVALID - IGNORED'
         AGO   .RELOAD
.STR15   ST    15,16(13)
         AGO   .RELOAD
.SETRC   LA    15,&RC
         ST    15,16(13)
         AGO   .RELOAD
.RC0     SR    15,15
         ST    15,16(13)
.RELOAD  LM    14,12,12(13)
         BR    14
         MEND
         MACRO
&CSECTNM MSETUP &R1,&R2,&LDSA=72,&RE=NO,&EQUATE=YES,&BITEQU=NO,        *
               &VERSN=,                                                *
               &SP=0
.*       SII MCEVOY PROGRAM SETUP MACRO
.* CHANGE HISTORY:
.* 28/10/81 RH : CREATED FROM LOLA SETUP MACRO - SEE <=== FOR CHANGES
.*
         LCLA  &BASE1,&BASE2,&L,&L1,&L2,&LVN,&LDT,&LID,&S
         LCLA  &SUBPOOL
         LCLB  &B1,&B2,&B3,&B4,&B5
         LCLC  &LBL(9),&VLBL,&AMP,&DATE,&ID          <==== RH
&DATE    SETC  '&SYSDATE-&SYSTIME'                   <==== RH
&AMP     SETC  '&&'
&B1      SETB  ('&SYSECT' NE '')
&B2      SETB  ('&CSECTNM' NE '')
         AIF   (&B2).SETNM
         AIF   (&B1).TSTBASE
         MNOTE 4,'NO CSECT NAME GIVEN - CSECT IS UNAMED'
.SETNM   ANOP
&CSECTNM CSECT
&ID      SETC  '&CSECTNM'                            <==== RH
.TSTBASE ANOP
         AIF   (T'&R1 EQ 'O' OR T'&R1 NE 'N').DEFLT
&BASE1   SETA  &R1
         AIF   (&BASE1 GT 1 AND &BASE1 LE 12).TSTBAS2
         AIF   (&BASE1 EQ 13 AND '&RE' EQ 'NO').TSTBAS2
.DEFLT   ANOP
         MNOTE 4,'FIRST BASE REGISTER NOT SPECIFIED OR INVALID 12 SUBST*
               ITUTED'
&BASE1   SETA  12
.TSTBAS2 ANOP
         AIF   (T'&R2 EQ 'O').TSTVDAT
         AIF   (T'&R2 NE 'N').MNOTE2
&BASE2   SETA  &R2
         AIF   (&BASE2 GT 1 AND &BASE2 LE 12 AND &BASE2 NE &BASE1).SETB*
               2
.MNOTE2  MNOTE 4,'SECOND BASE REGISTER INVALID / IGNORED'
         AGO   .TSTVDAT
.SETB2   ANOP
&B3      SETB  (1)
.TSTVDAT USING *,15
         AIF   ('&VERSN' EQ '' AND '&DATE' EQ '' AND '&ID' EQ '').NONME
         AIF   ('&VERSN' EQ '').TSTDTE
&LVN     SETA  K'&VERSN
         AIF   (&LVN LE 8).SETVSN
&LVN     SETA  8
.SETVSN  ANOP
&S       SETA  &S+1
&LBL(&S) SETC  '&VERSN'(1,&LVN)
&VLBL    SETC  '&LBL(&S)'
.TSTDTE  AIF   ('&DATE' EQ '').TSTID
&LDT     SETA  K'&DATE
         AIF   ('&DATE'(1,1) EQ '''' AND '&DATE'(&LDT,1) EQ '''').STL1A
&L1      SETA  1
&L2      SETA  0
         AGO   .TSLOOP1
.STL1A   AIF   (&LDT LE 2).DTER1
&L1      SETA  2
&L2      SETA  0
&B5      SETB  (1)
&LDT     SETA  &LDT-2
.TSLOOP1 AIF   (&B5).TSCNTR1
         AIF   (&L1 GT &LDT).EXLOOP1
         AGO   .TB41
.TSCNTR1 AIF   (&L1-1 GT &LDT).EXLOOP1
.TB41    AIF   (&B4).TLSTCH1
         AIF   ('&DATE'(&L1,1) EQ '''' OR '&DATE'(&L1,1) EQ '&AMP'(1,1)*
               ).STB41
.SETL2B  ANOP
&L2      SETA  &L2+1
.SETL1B  ANOP
&L1      SETA  &L1+1
         AIF   (&L2 EQ 20).EXLOOP1
         AGO   .TSLOOP1
.STB41   ANOP
&B4      SETB  (1)
         AGO   .SETL1B
.TLSTCH1 AIF   ('&DATE'(&L1,1) NE '&DATE'(&L1-1,1)).DTER2
&B4      SETB  (0)
         AGO   .SETL2B
.DTER1   MNOTE 4,'INVALID SPEC. FOR DATE KEYWORD - IGNORED'
&LDT     SETA  0
         AGO   .TSTID
.DTER2   MNOTE 4,'UNPAIRED QUOTE  OR AMPERSAND IN DATE SPEC. IGNORED'
&LDT     SETA  0
         AGO   .TSTID
.EXLOOP1 AIF   (&B4).DTER2
&L1      SETA  &L1-1
         AIF   (NOT &B5).STLDT1
&L1      SETA  &L1-1
.STLDT1  ANOP
&LDT     SETA  &L2
         AIF   (&LVN EQ 0).NOVN
&S       SETA  &S+1
&LBL(&S) SETC  ' '
&LVN     SETA  &LVN+1
.NOVN    ANOP
&L2      SETA  0
         AIF   (NOT &B5).DTECNT
&L2      SETA  1
.DTECNT  ANOP
         AIF   (&L1 EQ 0).TSTID
&S       SETA  &S+1
         AIF   (&L1 GT 8).SPLT1
&LBL(&S) SETC  '&DATE'(&L2+1,&L1)
         AGO   .TSTID
.SPLT1   ANOP
&LBL(&S) SETC  '&DATE'(&L2+1,8)
&L1      SETA  &L1-8
&L2      SETA  &L2+8
         AGO   .DTECNT
.TSTID   AIF   ('&ID' EQ '').SETBRD1
         AIF   ('&ID' EQ '*').DEFID
&LID     SETA  K'&ID
&B4      SETB  (0)
&B5      SETB  (0)
         AIF   ('&ID'(1,1) EQ '''' AND '&ID'(&LID,1) EQ '''').STL1C
&L1      SETA  1
&L2      SETA  0
         AGO   .TSLOOP2
.STL1C   AIF   (&LID LE 2).IDER1
&L1      SETA  2
&L2      SETA  0
&B5      SETB  (1)
&LID     SETA  &LID-2
.TSLOOP2 AIF   (&B5).TSCNTR2
         AIF   (&L1 GT &LID).EXLOOP2
         AGO   .TB42
.TSCNTR2 AIF   (&L1-1 GT &LID).EXLOOP2
.TB42    AIF   (&B4).TLSTCH2
         AIF   ('&ID'(&L1,1) EQ '''' OR '&ID'(&L1,1) EQ '&AMP'(1,1)).ST*
               B42
.SETL2C  ANOP
&L2      SETA  &L2+1
.SETL1D  ANOP
&L1      SETA  &L1+1
         AIF   (&L2 EQ 20).EXLOOP2
         AGO   .TSLOOP2
.STB42   ANOP
&B4      SETB  (1)
         AGO   .SETL1D
.TLSTCH2 AIF   ('&ID'(&L1,1) NE '&ID'(&L1-1,1)).IDER2
&B4      SETB  0
         AGO   .SETL2C
.IDER1   MNOTE 4,'INVALID SPEC FOR ID KEYWORD - IGNORED'
&LID     SETA  0
         AGO   .SETBRD1
.IDER2   MNOTE 4,'UNPAIRED QUOTE  OR AMPERSAND IN ID SPEC. IGNORED'
&LID     SETA  0
         AGO   .SETBRD1
.EXLOOP2 AIF   (&B4).IDER2
&L1      SETA  &L1-1
         AIF   (NOT &B5).STLID1
&L1      SETA  &L1-1
.STLID1  ANOP
&LID     SETA  &L2
         AIF   (&LVN EQ 0 AND &LDT EQ 0).SETL1
&S       SETA  &S+1
&LBL(&S) SETC  ' '
&LDT     SETA  &LDT+1
         AGO   .SETL1
.DEFID   AIF   (&B1 OR &B2).TLDT
&LID     SETA  0
         AGO   .SETBRD1
.TLDT    AIF   (&LVN EQ 0 AND &LDT EQ 0).NODT
&S       SETA  &S+1
&LBL(&S) SETC  ' '
&LDT     SETA  &LDT+1
.NODT    ANOP
&S       SETA  &S+1
         AIF   (&B2).SETID1
&LBL(&S) SETC  '&SYSECT'
         AGO   .KNAME
.SETID1  ANOP
&LBL(&S) SETC  '&CSECTNM'
.KNAME   ANOP
&LID     SETA  1
.KNAME2  AIF   ('&LBL(&S)'(1,&LID) EQ '&LBL(&S)').SETBRD1
&LID     SETA  &LID+1
         AGO   .KNAME2
.SETL1   ANOP
&L2      SETA  0
         AIF   (NOT &B5).IDCNT
&L2      SETA  1
.IDCNT   ANOP
         AIF   (&L1 EQ 0).SETBRD1
&S       SETA  &S+1
         AIF   (&L1 GT 8).SPLT2
&LBL(&S) SETC  '&ID'(&L2+1,&L1)
         AGO   .SETBRD1
.SPLT2   ANOP
&LBL(&S) SETC  '&ID'(&L2+1,8)
&L1      SETA  &L1-8
&L2      SETA  &L2+8
         AGO   .IDCNT
.SETBRD1 ANOP
&L1      SETA  4+2*((&LVN+&LDT+&LID+1)/2)
         AIF   (&L1 EQ 4).SETSTM
         B     *+&L1
         DC    C'&LBL(1).&LBL(2).&LBL(3).&LBL(4).&LBL(5).&LBL(6).&LBL(7*
               ).&LBL(8).&LBL(9)'
         AGO   .NOCONST
.NONME   AIF   (&B2 EQ 0).NOCONST
         B     12(0,15)
         DC    CL8'&CSECTNM'
.NOCONST ANOP
         AIF   ('&VLBL' EQ '').SETSTM
         ENTRY &VLBL
.SETSTM  ANOP
&VLBL    STM   14,12,12(13)
         AIF   (T'&LDSA EQ 'N').TSTZR0
         MNOTE 4,'LSDA NOT SPECIFIED OR INVALID 72 SUBSTITUTED'
         AGO   .L72
.TSTZR0  AIF   (&LDSA NE 0).TESTL
         AIF   (&BASE1 EQ 13).TESTL
&L       SETA  0
         AGO   .NORENT
.TESTL   AIF    (&LDSA LE 71).SET72
         AIF   (&LDSA GT 4064).SET4064
&L       SETA  &LDSA
         AGO   .TSTRENT
.SET72   ANOP
         MNOTE 4,'LDSA SPECIFIED IS LESS THAN 72 - 72 PROVIDED'
.L72     ANOP
&L       SETA  72
         AGO   .TSTRENT
.SET4064 ANOP
         MNOTE 4,'LDSA GIVEN IS GREATER THAN 4064 - 4064 PROVIDED'
&L       SETA  4064
.TSTRENT ANOP
         AIF   ('&RE' EQ 'NO').NORENT
         AIF   ('&RE' EQ 'YES').RENT
         MNOTE 4,'RE SPECIFICATION INVALID - RE=NO ASSUMED'
         AGO   .NORENT
.RENT    MNOTE 0,'RE-ENTRANT FORM OF MACRO SPECIFIED'
         AIF   (&SP LE 255).SPOK
         MNOTE 4,'SUBPOOL SPECIFIED GREATER THAN 255 - 0 ASSUMED'
&SUBPOOL SETA  0
         AGO   .SPSET
.SPOK    ANOP
&SUBPOOL SETA  &SP
.SPSET   ANOP
         LA    2,&L
         LA    2,7(2)
         LA    0,4088
         NR    2,0
         LA    2,8(2)
         LR    0,2
         LA    2,&SUBPOOL
         SLL   2,24
         OR    0,2
         LR    2,0
         GETMAIN R,LV=(0)
         ST    2,0(1)
         ST    1,4(1)
         XC    8(4,1),8(1)
         ST    13,12(1)
         LA    1,8(1)
         ST    1,8(13)
         LR    13,1
         L     1,4(13)
         LM    0,2,20(1)
         AGO   .SETBASE
.NORENT  ANOP
         MNOTE 0,'NON-RE-ENTRANT FORM OF MACRO USED'
         AIF   (&L EQ 0).SETBASE
&L1      SETA  4+2*((&L+1)/2)
&L2      SETA  &L1+20
         CNOP  4,8
         BAL   1,*+&L1
         DS    CL&L
         XC    0(4,1),0(1)
         ST    13,4(1)
         ST    1,8(13)
         LR    13,1
         L     1,4(13)
         LM    1,2,24(1)
.SETBSES ANOP
         AIF   (&BASE1 NE 13).SETBASE
         AIF   (&B3).TWOBSES
         USING *-&L2,&BASE1
         AGO   .TSTEQU
.TWOBSES USING *-&L2,&BASE1,&BASE2
         LA    &BASE2,4095(&BASE1)
         LA    &BASE2,1(&BASE2)
         AGO   .TSTEQU
.SETBASE BALR  &BASE1,0
         AIF   (&B3).TWOREGS
         USING *,&BASE1
         AGO   .TSTEQU
.TWOREGS USING *,&BASE1,&BASE2
         LA    &BASE2,4095(&BASE1)
         LA    &BASE2,1(&BASE2)
.TSTEQU  ANOP
         DROP  15
         AIF   ('&EQUATE' EQ 'NO').TSTBIT
         AIF   ('&EQUATE' EQ 'YES').EQU
         MNOTE 4,'EQUATE SPECIFICATION INVALID - YES ASSUMED'
.EQU     ANOP
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.TSTBIT  AIF   ('&BITEQU' EQ 'NO').EXIT
         AIF   ('&BITEQU' EQ 'YES').EQUBIT
         MNOTE 4,'BIT EQUATE SPEC. INVALID - YES ASSUMED'
.EQUBIT  ANOP
BIT0     EQU   128
BIT1     EQU    64
BIT2     EQU    32
BIT3     EQU    16
BIT4     EQU     8
BIT5     EQU     4
BIT6     EQU     2
BIT7     EQU     1
.EXIT    MEND
NCZ93205 TITLE 'SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         *
               - PROGRAM DOCUMENTATION'
*****                                                             *****
*                                                                     *
* ID:          NCZ93205 - SUBROUTINE TO READ PDS MEMBERS              *
*                                                                     *
* NCZ93205.1 PROGRAM DESCRIPTION                                      *
*                                                                     *
* THIS PROGRAM CAN BE CALLED AS A SUBROUTINE FROM AN ASSEMBLER OR     *
* COBOL PROGRAM TO PROVIDE READ ACCESS TO MEMBER(S) OF A PDS. THE     *
* MEMBER NAME(S) MAY BE SPECIFIED DYNAMICALLY VIA THE PARAMETERS.     *
* THUS THIS PROGRAM ENABLES A COBOL PROGRAM TO ACCESS MANY MEMBERS    *
* OF A PDS WHEN THE NAMES OF THE MEMBERS ARE NOT KNOWN UNTIL EXECUTION*
* TIME.                                                               *
*                                                                     *
* ONLY COMBINATIONS OF RECFM = F/B/A ARE SUPPORTED.                   *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCZ93205.2 USER INSTRUCTIONS                                        *
*                                                                     *
* PARAMETERS:                                                         *
* ----------                                                          *
* THE PROGRAM OBSERVES A STANDARD OS LINKAGE. IT SHOULD ALWAYS BE     *
* CALLED WITH 4 PARAMETERS WHICH ARE:                                 *
*                                                                     *
* P1 - REQUEST CODE      FULLWORD BINARY  COBOL PIC S9(8) COMP.       *
*      VALUES:                                                        *
*      0   -  OPEN DDNAME 'PDS'                                       *
*      4   -  LOCATE MEMBER (DOES NOT READ MEMBER)                    *
*      8   -  READ NEXT RECORD IN CURRENT MEMBER                      *
*      12  -  CLOSE DDNAME 'PDS'                                      *
*                                                                     *
* P2 - MEMBER NAME      CHARACTER STRING COBOL PIC X(8).              *
*      CONTAINS NAME OF MEMBER WHEN P1 = 4                            *
*                                                                     *
* P3 - INPUT AREA       CHARACTER STRING. IT IS THE RESPONSIBLITY OF  *
*      WHEN P1 = 8                        THE CALLING PROGRAM TO      *
*                                         ENSURE THAT THIS AREA WILL  *
*                                         ACCOMMODATE THE LONGEST     *
*                                         RECORD TO BE READ.          *
*                                                                     *
* P4 - DD NAME          CHARACTER STRING                              *
*      WHEN P1 = 0                                                    *
*                                                                     *
* RETURN CODE -                                                       *
*      VALUES:                                                        *
*      0   - REQUESTED FUNCTION COMPLETED WITHOUT ERROR               *
*      4   - REQUESTED FUNCTION DID NOT COMPLETE FOR REASON:          *
*            WHEN P1 = 0  FILE COULD NOT BE OPENED                    *
*                      4  MEMBER WAS NOT FOUND                        *
*                      8  END OF FILE ON CURRENT MEMBER               *
*      8   - SERIOUS ERROR. PROCESSING SHOULD BE TERMINATED.          *
*                                                                     *
* EXAMPLE CALL FROM COBOL:                                            *
*                                                                     *
*      CALL 'NCZ93205' USING FUNC, MEMBER, INPUT-AREA DD-NAME         *
*      IF RETURN-CODE = ZERO GO TO .....                              *
*                                                                     *
* THE SPECIAL REGISTER 'RETURN-CODE' SHOULD BE CLEARED TO ZERO BY     *
* THE APPLICATION PROGRAM BEFORE PROGRAM TERMINATION OTHERWISE        *
* IT MAY BE PROPAGATED UPWARDS TO OS WITH A NON ZERO VALUE.           *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCZ93205.3 MESSAGES                                                 *
*                                                                     *
* NONE.                                                               *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ93205.4 ABEND CODES                                              *
*                                                                     *
* NONE. IT IS THE RESPOSIBILITY OF THE CALLING PROGRAM TO TERMINATE   *
* AFTER A SERIOUS ERROR CONDITION.                                    *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ93205.5 IMPLEMENTATION METHOD                                    *
*                                                                     *
* MOVE TO MAC1.ASM AND PASMAL.                                        *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ93205.6 AMENDMENT HISTORY                                        *
*                                                                     *
* MAINTAIN THE RECORD BELOW.                                          *
*                                                                     *
* CHANGE HISTORY:                                                     *
* DATE      INITS VERSION COMMENTS                                    *
*                                                                     *
* 17 NOV 82 RH    V01     CREATED                                     *
*                                                                     *
* SUGGESTED ENHANCEMENTS:                                             *
*                                                                     *
* NONE YET.                                                           *
*                                                                     *
* DD MMM YY WHO : COMMENTS                                            *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCZ93205.7 MODULARISATION DETAILS                                   *
*                                                                     *
* SIMPLE LINEAR STRUCTURE.                                            *
* USES OPEN, FIND, CLOSE, READ, CHECK (BSAM).                         *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ93205.8 PROGRAM LOGIC OVERVIEW                                   *
*                                                                     *
* OMITTED. IT SHOULD BE NOTED THAT THIS PROGRAM HAS TO BE PRETTY      *
* RUGGED. DO NOT ASSUME THAT ALL CALLS ARE IN LOGICAL SEQUENCE.       *
*                                                                     *
*****                                                             *****
*                                                                     *
* NCZ93205.9 MODIFICATION,  H. ZBIEGIEN 1/90                          *
*  PASS DDNAME ON OPEN CALL                                           *
*  FIX BUG, PGM USED TO PASS BACK 1 BYTE TOO MUCH                     *
*                                                                     *
*****                                                             *****
         TITLE 'SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         *
               - PROGRAM PROLOGUE'
*****                                                             *****
*                                                                     *
* ID:          NCZ93205 - SUBROUTINE TO READ PDS MEMBERS              *
*                                                                     *
* ENTRY INTFCE: STANDARD OS - SEE ABOVE.                              *
*                                                                     *
* EXIT  INTFCE: STANDARD OS - SEE ABOVE.                              *
*                                                                     *
* RETURN CODES:RC = 0       - OK                                      *
*                                                                     *
*              RC = 4       - REQUESTED FUNCTION DID NOT COMPLETE     *
*                                                                     *
*              RC = 8       - SERIOUS ERROR - TERMINATION ADVISED     *
*                                                                     *
* REG USAGE:   R0 -                                                   *
*              R1 -                                                   *
*              R2 -      -> P1  (FUNCTION)                            *
*              R3 -      -> P2  (MEMBER)                              *
*              R4 -      -> P3  (INPUT AREA)                          *
*              R5 -      WORK: -> BUFFER                              *
*              R6 -      WORK: -> RECORD                              *
*              R7 -                                                   *
*              R8 -                                                   *
*              R9                                                     *
*              R10 -                                                  *
*              R11 -                                                  *
*              R12 -     -> DCB                                       *
*              R13 -     SAVE AREA + BASE                             *
*              R14 -                                                  *
*              R15 -                                                  *
*                                                                     *
*****                                                             *****
         TITLE 'SUBROUTINE TO READ PARTITIONED DATASET MEMBERS         *
               - PROGRAM CODE'
NCZ93205 MSETUP 13
         LA    R12,PDS
         USING IHADCB,R12
         LM    R2,R4,0(R1)
         SPACE
         L     R15,0(R2)               GET FUNCTION CODE
         CH    R15,=H'0'               Q - OPEN ?
         BE    P01                     Y
         CH    R15,=H'4'               Q - FIND ?
         BE    P02                     Y
         CH    R15,=H'8'               Q - READ ?
         BE    P03                     Y
         CH    R15,=H'12'              Q - CLOSE ?
         BE    P04                     Y
         B     P99                     BAD FUNCTION CODE
         SPACE
*        OPEN DATASET
P01      DS    0H
         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
         BO    P99                      Y BOMB OUT
         L     R5,12(R1)                GET DD NAME
         MVC   DCBDDNAM,0(R5)           COPY DD NAME
         OPEN  (PDS,INPUT)              OPEN IT
         TM    DCBOFLGS,DCBOFOPN        Q - OK ?
         BZ    P98                      N EXIT RC=4
         CLI   DCBDSORG,DCBDSGPO        Q - IS THIS A PDS ?
         BNE   P0105                    N GO CLOSE
         TM    DCBRECFM,X'FF'-(DCBRECF+DCBRECBR+DCBRECCA) Q - RECFM ?
         BZ    P0110                    OK
         SPACE
P0105    EQU   *
         CLOSE PDS
         B     P99
         SPACE
P0110    LH    R0,DCBBLKSI
         GETMAIN R,LV=(0)               GET A BUFFER
         ST    R1,BUFA
         B     P97                      EXIT OK
         SPACE
*        FIND MEMBER
P02      DS    0H
         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
         BZ    P99                      N BOMB OUT
         FIND  (12),(3),D               LOCATE MEMBER
         LTR   R15,R15                  Q - OK ?
         BNZ   P98                      N EXIT RC=4
         NI    FLAGS,X'FF'-EOM          Y CLEAR END OF MEMBER FLAG
         OI    FLAGS,DOREAD             SET FLAG TO DO READ
         B     P97                      EXIT RC=0
         EJECT
*        GET NEXT RECORD FOR THIS MEMBER
P03      DS    0H
         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
         BZ    P99                      N - BOMB OUT
         SPACE
         TM    FLAGS,EOM                Q - EOM ALREADY ?
         BO    P99                      Y BOMB OUT
         SPACE
P0305    L     R5,BUFA                  R5 -> INPUT BUFFER
         L     R6,RECA                  R6 -> NEXT RECORD IN BUFFER
         TM    FLAGS,DOREAD             Q - SHOULD WE READ NEXT BLOCK ?
         BZ    P0310                    N
         SPACE
         READ  DECB1,                   READ A BLOCK OF RECORDS        *
               SF,                                                     *
               (12),                                                   *
               (5),                                                    *
               'S'
         CHECK DECB1                    WAIT FOR IO TO COMPLETE
         SPACE
         LH    R10,DCBBLKSI             # OF BYTES WE COULD HAVE READ
         L     R1,DCBIOBA
         SH    R10,22(R1)               LESS # OF BYTES WE DID'NT READ
         BZ    P03EOM                   NOTHING READ - MUST BE EOM
         AR    R10,R5
         ST    R10,BLOCKEND             SAVE ADDRESS END OF THIS BLOCK
         NI    FLAGS,X'FF'-DOREAD       SET FLAG OFF - WE DID A READ
         LR    R6,R5                    R6 -> FIRST RECORD IN BLOCK
         SPACE
P0310    LH    R15,DCBLRECL             GET RECORD LENGTH
         BCTR  R15,0                    DECREMENT COUNT HPZ
         EX    R15,EXMVC                MOVE RECORD TO INPUT AREA
         LA    R15,1(R15)               ADD 1 BACK      HPZ
         AR    R6,R15                   R6 -> NEXT RECORD IN BUFFER
         C     R6,BLOCKEND              Q - END OF THIS BLOCK ?
         BNL   P0320                    Y GO SET FLAG TO DO READ
         SPACE
         ST    R6,RECA                  SAVE CURRENT RECORD POINTER
         B     P97                      EXIT RC=0
         SPACE
P0320    OI    FLAGS,DOREAD             DO READ FOR NEXT RECORD
         B     P97                      EXIT RC=0
         SPACE
P03EOM   DS    0H
         OI    FLAGS,EOM                INDICATE END OF MEMBER
         B     P98                      EXIT RC = 4
         EJECT
*        CLOSE PDS
P04      DS    0H
         TM    DCBOFLGS,DCBOFOPN        Q - DATASET OPEN ?
         BZ    P99                      N BOMB OUT
         LH    R0,DCBBLKSI
         L     R5,BUFA
         FREEMAIN R,LV=(0),A=(5)
         CLOSE PDS
         SPACE
P97      MCLEAR RC=0
P98      MCLEAR RC=4
P99      MCLEAR RC=8
         SPACE
PDS      DCB   DDNAME=PDS,DSORG=PO,MACRF=(R),EODAD=P03EOM
FLAGS    DC    X'00'
EOM      EQU   X'80'                    REACHED END OF CURRENT MEMBER
DOREAD   EQU   X'40'                    INDICATES CURRENT BLOCK IS     *
                                        EXHAUSTED
EXMVC    MVC   0(0,R4),0(R6)            MOVE RECORD TO INPUT AREA
BUFA     DS    F                        -> BUFFER
RECA     DS    F                        -> CURRENT RECORD IN BUFFER
BLOCKEND DS    F                        -> END OF CURRENT BLOCK
         PRINT NOGEN
         DCBD  DSORG=BS,DEVD=DA
         END
