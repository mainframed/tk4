//TECHMNAR JOB  ,'MURRAY NICHOLAS',CLASS=A,MSGCLASS=X,NOTIFY=TECHMN
//*
//*  SOURCE:    TECHMN.MPFEXIT.COMMANDS($$INSTAL)
//*  PURPOSE:   ASSEMBLE AND LINKEDIT THE MPFXTALL PROGRAM
//*  ASSEMBLY:  BEFORE ASSEMBLING THIS PROGRAM:
//*             1)  CHANGE ALL OCCURRENCES OF THE HARDCODED DSNAME
//*                 "TECHMN.MPFEXIT.COMMANDS" TO A NAME SUITABLE FOR
//*                 STORING THE COMMANDS YOU WISH TO EXECUTE UNDER MPF
//*                 CONTROL.  THE NAME OF THE FILE SHOULD FIT WITH YOUR
//*                 SECURITY STANDARDS TO ALLOW UPDATE ACCESS TO THOSE
//*                 WITH RESPONSIBLITY FOR OPERATIONS AUTOMATION.
//*             2)  PLACE THE $SW24, $SW31 & $BSM MACROS IN A LIBRARY
//*                 IN THE ASSEMBLY SYSLIB DD CONCATENATION.
//*             3)  POINT THE SYSLMOD DD STATEMENT TO AN APPROPRIATE
//*                 LINK LISTED AND APF AUTHORISED LIBRARY.
//*  GUIDANCE:  THIS JOB BUILDS THE MPFXTALL PROGRAM AND STORES IT IN
//*             AN APF AUTHORISED LIBRARY.  AFTER SUCCESSFUL LINKEDIT
//*             THE OPERATOR MUST ISSUE THE "F LLA,REFRESH" COMMAND TO
//*             REFRESH THE SYSTEM LIBRARY LOOKASIDE AREA TO OBTAIN A
//*             FRESH COPY OF THIS PROGRAM.  WHEN THE REFRESH IS
//*             COMPLETE, ISSUE THE "T MPF=XX" COMMAND TO ACTIVATE AN
//*             MPFLST MEMBER OF PARMLIB WHICH USES THIS EXIT FOR SOME
//*             MESSAGE NUMBERS.
//*
//*
//*
//AANDL    EXEC ASMHCL,REGION=5M,
//             PARM.C='OBJECT,NODECK,TEST',
//             PARM.L='XREF,TEST,RENT,REUS,REFR'
//C.SYSLIB DD
//         DD   DSN=SYS1.MACLIB,DISP=SHR
//         DD   DSN=SYS1.MODGEN,DISP=SHR
//         DD   DSN CONTAINING $SW24 AND $SW31 MACROS
//C.SYSIN  DD   *
MPFXTALL TITLE 'MPF EXIT TO ISSUE COMMAND LISTS BASED ON MESSAGE ID.'
*
*RECORD OF CHANGES:
*
*  001   MPN INITIAL RELEASE
*
*
*IDENTIFICATION: CSECT NAME:     MPFXTALL
*                SOURCE LIBRARY: TECHMN.MPFEXIT.COMMANDS($$INSTAL)
*                LOAD LIBRARY:   SYS1.LOCAL.LINKLIB(MPFXTALL) - LNKLST
*
*REFERENCE:      GC28-1637: MVS/ESA INSTALLATION EXITS
*
*AUTHOR:         MURRAY NICHOLAS
*                IT SYSTEMS CONSULTANT
*                GALEFORCE INFORMATION SERVICES PTY LTD
*                EMAIL:  MURRAY@GALEFORCE.BU.AUST.COM  (LOWER CASE!)
*
*DOCUMENTATION NOTE: IN COMMENTS, THE CHARACTER '@' SHOULD BE READ AS
*                    'ADDRESS OF'.
*
*PURPOSE:        READS A FILE OF COMMANDS BASED ON THE MESSAGE NUMBER
*                AND EXECUTES THEM IN SEQUENCE.
*
         EJECT
*
*REGISTER USAGE:
*     R0      WORK.
*     R1      STANDARD LINKAGE, WORK.
*     R2      WORK.
*     R3      WORK.
*     R4      SPARE.
*     R5      SPARE.
*     R6      LOCAL WORK AREA ADDRESSABILITY
*     R7      CTXT PARAMETER AREA ADDRESSABILITY
*     R8      SPARE
*     R9      CTXT PARAMETER AREA ADDRESSABILITY
*     R10     CTXT PARAMETER AREA ADDRESSABILITY
*     R11     SPARE.
*     R12     PROGRAM ADDRESSABILITY
*     R13     STANDARD LINKAGE
*     R14     STANDARD LINKAGE
*     R15     STANDARD LINKAGE, RETURN CODE.
*
*ROUTINES CALLED:   MGCR
*                   DYNALLOC, OPEN, GET, CLOSE
*
*PARAMETERS PASSED: REFER TO REFERENCE DOCUMENTATION
*
*RETURN CODES:      NONE
*
         EJECT
*
*OVERVIEW: THIS EXIT IS RESTRICTED TO HANDLING MESSAGE IDS NO LONGER
*          THAN EIGHT BYTES (THE LENGTH OF A PDS MEMBER NAME).
*          COMMANDS ISSUED MUST BE CONTAINED WITHIN A SINGLE LINE.
*          NO TEXT SUBSTITUTION IS SUPPORTED.
*
*LOGIC:  EXTRACT MESSAGE ID
*        DYNALLOC DD=CMDS, DSN=TECHMN.MPFEXIT.COMMANDS(MESSAGEID), SHR
*        OPEN CMDS
*        DO UNTIL EOF
*          GET COMMAND TEXT FROM CMDS
*          MOVE TEXT TO MGCR BUFFER AND ISSUE IT
*        END DO
*        CLOSE CMDS
*        FREE DD=CMDS
*        EXIT
*
         EJECT
         AMODE 31
         RMODE 24
MPFXTALL BAKR  R14,0               INITIALISATION
         LR    R12,R15
         USING MPFXTALL,R12
         L     R10,0(R1)           POINT TO CTXT PARAMETER BLOCK
         USING CTXT,R10            ESTABLISH ADDRESSABILITY
         L     R9,CTXTTXPJ         POINT TO MESSAGE ATTRIBUTES
         USING CTXTATTR,R9         ESTABLISH ADDRESSABILITY
         LA    R0,WORKSIZE
*
*  INITIALISE WORKAREA
*
         GETMAIN RU,LV=(R0),LOC=BELOW     GET SOME WORKING STORAGE
         LR    R2,R1               POINT TO REENTRANT WORK AREA
         LA    R3,PSETSIZE         STORE LENGTH OF PRESET CONSTANTS
         LR    R5,R3               COPY TO R4 FOR MVCL
         LA    R4,PSETAREA         POINT TO PRESET DATA AREA
         MVCL  R2,R4               PRIME WORK AREA WITH PRESET DATA
         LR    R5,R1               SAVE ADDRESS OF GETMAINED STORAGE
         USING WORKAREA,R5         ESTABLISH ADDRESSABILITY
         EJECT
*
*  DETERMINE CASE TO PROCESS
*
MPFXT100 EQU   *
         LA    R2,CTXTTMSG         CALCULATE LENGTH OF MSGID
         LA    R3,CTXTTMSG+8
MPFXT105 CLI   0(R2),C' '          MESSAGE ID IS DELIMITED BY BLANK
         BE    MPFXT110
         CR    R2,R3
         BE    MPFXT110            REACHED THE MAX LENGTH
         LA    R2,1(,R2)
         B     MPFXT105
MPFXT110 LA    R3,CTXTTMSG         @ START OF MSGID
         SR    R2,R3               R2=L'(MSGID)-1
         STH   R2,CMDSMBR-2        STORE THE LENGTH
         BCTR  R2,0                DECREMENT FOR EXECUTED MOVE
         EX    R2,MVMBR            MOVE MEMBER NAME TO DYNALLOC TU
*
*  DYNALLOC ROUTINE
*
         $SW24
         LA    R6,DYNALCBS
         USING S99RBP,R6           ADDRESSABILITY TO RBP DSECT
         LA    R7,S99RBPTR+4       POINT PAST POINTER TO S99RB AREA.
         USING S99RB,R7            ADDRESSABILITY TO RB DSECT
         ST    R7,S99RBPTR         MAKE RBPTR POINT TO RB
         OI    S99RBPTR,S99RBPND   SET HIGH ORDER BIT IN POINTER
         XC    S99RB(RBLEN),S99RB  CLEAR REQUEST BLOCK
         MVI   S99RBLN,RBLEN       PUT LENGTH IN THE LENGTH FIELD
         MVI   S99VERB,S99VRBAL    SELECT ALLOCATION VERB
         LA    R8,S99RB+RBLEN+RBXLEN POINT PAST RB AND RBX TO TUPL
         USING S99TUPL,R8          ADDRESSABLITY TO TU POINTER LIST
         ST    R8,S99TXTPP         STORE TUPL ADDRESS IN RB
         LA    R9,DYNCDD           @ DDNAME TU
         ST    R9,S99TUPTR         STORE IN TU POINTER LIST
         LA    R8,4(R8)            POINT TO NEXT ENTRY IN TUPL
         LA    R9,DYNCDSN          @ DSNAME TU
         ST    R9,S99TUPTR         STORE IN CURRENT TUPL ENTRY
         LA    R8,4(R8)            POINT TO NEXT ENTRY IN TUPL
         LA    R9,DYNCMBR          @ MEMBER NAME TU
         ST    R9,S99TUPTR         STORE IN CURRENT TUPL ENTRY
         LA    R8,4(R8)            POINT TO NEXT ENTRY IN TUPL
         LA    R9,DYNCSTS          @ DISP TU
         ST    R9,S99TUPTR         STORE IN CURRENT TUPL ENTRY
         OI    S99TUPTR,S99TUPLN   TURN ON HIGH ORDER BIT - END OF LIST
         LR    R1,R6               PUT ADDRESS OF S99RB POINTER IN R1
         DYNALLOC                  ALLOCATE REQUESTED
         LTR   R15,R15             TEST RETURN CODE
         BNZ   QUIT
*
*  OPEN COMMAND FILE
*
         LA    R3,CMDS
         OPEN  ((R3),INPUT),MODE=24,MF=(E,RENTOPEN)
         USING IHADCB,R3
         TM    DCBOFLGS,X'10'
         BZ    RETURN
         DROP  R3
*
*  COMMAND ISSUE ROUTINE
*
MPFXT200 CNOP  0,4
         GET   CMDS,CMDTEXT        DCB MOVES INPUT RECORD TO CMDTEXT
         CLI   CMDTEXT,C'*'        SKIP COMMENTS
         BE    MPFXT200
         XR    R0,R0               CLEAR FOR MGCR/SVC 34
         MGCR  CMDHDR              POINT TO COMMAND
         B     MPFXT200
*
*     END OF COMMANDS - TIDY UP AND GO HOME
*
MPFXT300 LA    R3,CMDS
         CLOSE ((R3)),MF=(E,RENTCLOS),MODE=24
RETURN   LA    R6,DYNALCBS
         USING S99RBP,R6           ADDRESSABILITY TO RBP DSECT
         LA    R7,S99RBPTR+4       POINT PAST POINTER TO S99RB AREA.
         USING S99RB,R7            ADDRESSABILITY TO RB DSECT
         ST    R7,S99RBPTR         MAKE RBPTR POINT TO RB
         OI    S99RBPTR,S99RBPND   SET HIGH ORDER BIT IN POINTER
         XC    S99RB(RBLEN),S99RB  CLEAR REQUEST BLOCK
         MVI   S99RBLN,RBLEN       PUT LENGTH IN THE LENGTH FIELD
         MVI   S99VERB,S99VRBUN    SELECT DEALLOCATION VERB
         LA    R8,S99RB+RBLEN+RBXLEN POINT PAST RB AND RBX TO TUPL
         USING S99TUPL,R8          ADDRESSABLITY TO TU POINTER LIST
         ST    R8,S99TXTPP         STORE TUPL ADDRESS IN RB
         LA    R9,DYNCDD           @ DDNAME TU
         ST    R9,S99TUPTR         STORE IN TU POINTER LIST
         OI    S99TUPTR,S99TUPLN   TURN ON HIGH ORDER BIT - END OF LIST
         LR    R1,R6               PUT ADDRESS OF S99RB POINTER IN R1
         DYNALLOC                  ALLOCATE REQUESTED
QUIT     CNOP  0,4
         $SW31
         LA    R2,WORKAREA
         LA    R1,WORKSIZE
         FREEMAIN R,LV=(R1),A=(R2)
         EJECT
*
*     END OF PROCESSING.
*
         PR
MVMBR    MVC  CMDSMBR(0),CTXTTMSG  MOVE MESSAGE ID TO MEMBER NAME
         EJECT
*
*        CONSTANT DATA.
*
         SPACE 2
         LTORG
         EJECT
*
*     VARIABLE DATA. NOTE THAT THIS DATA IS COPIED TO A WORK AREA
*     AND UPDATED THERE.
*
         SPACE 2
PSETAREA DS    0D                  PRESET MGCR WORK AREA
SSCMD    DC    AL2(SCMDLN)
         DC    XL2'00'
         DC    CL80' '
         DC    C'  /* ISSUED BY MPFXTALL */ '
SCMDLN   EQU   *-SSCMD
         DS    0F                  PRESET DYNALLOC WORK AREA
         DS    F                   SVC99 RB POINTER
         DC    XL(RBLEN+RBXLEN)'00' SVC99 RB
         DS    4F                  SVC99 TU POINTER LIST
         DC    AL2(0001),AL2(0001),AL2(0008),CL8'CMDS    ' DDNAME
         DC    AL2(0002),AL2(0001),XL2'002C' /*CL44' '*/   DSNAME
         DC    CL44'TECHMN.MPFEXIT.COMMANDS ' COMMAND FILE DSNAME
         DC    AL2(0003),AL2(0001),AL2(0008)               MEMBER
         DC    CL8'########'                  COMMAND FILE MEMBER
         DC    AL2(0004),AL2(0001),AL2(0001),XL1'08'       DISP=SHR
CMDSDCB  DCB   DSORG=PS,DDNAME=CMDS,EODAD=MPFXT300,MACRF=(GM)
         OPEN  (CMDSDCB,INPUT),MODE=24,MF=L
         CLOSE (CMDSDCB),MODE=24,MF=L
PSETSIZE EQU   *-PSETAREA          SIZE OF THE VARIABLE WORK AREA
         EJECT
*
*     MAP PARAMETER LIST TO MPFXTALL.
*
         EJECT
         DCBD  DSORG=(QS),DEVD=DA
WORKAREA DSECT                     PRESET WORK AREA
         DS    0D                  PRESET WORK AREA
CMDHDR   DC    XL2'20'
         DC    XL2'00'
CMDTEXT  DC    CL80' '
         DC    C'  /* ISSUED BY MPFXTALL */ '
         DS    0F
DYNALCBS EQU   *
DYNRBPTR DS    F                   SVC99 RB POINTER
DYNRB    DC    XL(RBLEN+RBXLEN)'00' SVC99 RB
DYNTUPL  DS    4F                  SVC99 TU POINTER LIST
DYNCDD   DC    AL2(0001),AL2(0001),AL2(0008),CL8'CMDS    ' DDNAME
DYNCDSN  DC    AL2(0002),AL2(0001),XL2'002C' /*CL44' '*/   DSNAME
CMDSDSN  DC    CL44'TECHMN.MPFEXIT.COMMANDS ' COMMAND FILE DSNAME
DYNCMBR  DC    AL2(0003),AL2(0001),AL2(0008)               MEMBER
CMDSMBR  DC    CL8'        '                  COMMAND FILE MEMBER
DYNCSTS  DC    AL2(0004),AL2(0001),AL2(0001),XL1'08'       DISP=SHR
DYNALCBL EQU   *-DYNALCBS
CMDS     DCB   DSORG=PS,DDNAME=CMDS,EODAD=MPFXT300,MACRF=(GM)
RENTOPEN OPEN  (CMDS,INPUT),MODE=24,MF=L
RENTCLOS CLOSE (CMDS),MODE=24,MF=L
WORKSIZE EQU   *-WORKAREA          SIZE OF THE VARIABLE WORK AREA
RBLEN    EQU   (S99RBEND-S99RB)
RBXLEN   EQU   (S99XEND-S99RBX)
         IEFZB4D0                  SVC99 DSECTS
S99XEND  EQU   *
         IEFZB4D2                  SVC99 DSECTS
         IEZVX100
*
*     REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
//L.SYSLMOD DD  DSN=SYS1.LOCAL.LINKLIB(MPFXTALL),DISP=SHR
//L.SYSIN  DD   *
  SETCODE AC(1)
  NAME MPFXTALL(R)
