*          DATA SET IEFUJV     AT LEVEL 013 AS OF 12/22/87
IEFUJV   TITLE 'IEFUJV -- IEFUJV SMF EXIT'
*
*  SMF EXIT TO CHANGE JCL TO MEET COMPANY STANDARDS.  IT SUPPORTS THE
*  MSVGP= PARAMETER FOR A NON-3850 ENVIRONMENT, CONTROLS VIO SPACE
*  ALLOCATION AND SEVERAL OTHER MISCELLANEOUS FUNCTIONS.  SUPPORTS THE
*  FOLLOWING FUNCTIONS:
*
*   I. JOB CARD -- NO ACTION
*
*  II. EXEC CARD
*     1) WRITE AN SMF TYPE 131 RECORD IF A PROC IS EXECUTED.  THIS IS
*         TO ALLOW DETERMINATION WHICH PROCS ARE USED AND WHICH ARE NOT
*
* III. DD CARD
*     1) CONTROL VIO ALLOCATION SIZE.  THIS REQUIRES THE USER TO
*         SPECIFY UNIT=VIOALLOC.  UNIT=VIOALLOC IS NOT VALID IN THE
*         SYSGEN PARAMETERS.  IF THE SPACE= SPECIFIES A VALID AMOUNT
*         OF DISK SPACE, THE UNIT= IS CHANGED TO UNIT=VIODA WHICH IS
*         A 3340.  IF UNIT=VIODA IS CODED IN THE JCL OR THE SPACE= IS
*         TOO LARGE, THE UNIT= IS CHANGED TO UNIT=SYSDA.  THIS JOB HAS
*         THE NAME OF TWO BATCH JOBS THAT ARE ALLOWED TO USE VIO,
*         OTHERWISE VIO IS RESTRICTED TO TSO USERS ONLY.  BOTH UNIT=
*         AND SPACE= MUST BE ON THE SAME CARD FOR THIS TO WORK.  UNIT=
*         MUST ALSO BE THE LAST PARAMETER ON THE LAST CARD OF A DD
*         CARD CONCATENATION.
*     2) FORCE TSO TEMPORARY DATASETS TO A DEDICATED "PUBLIC" VOLUME.
*         UNIT=VIOALLOC IS SPECIFIED TO INVOKE THIS SERVICE.  IF THE
*         SPACE= IS MET IN 1) ABOVE, THE DATASET GOES TO VIO; OTHERWISE
*         A CHECK IS MADE TO VERIFY THAT THE DYNAMIC ALLOCATION IS MADE
*         BY A TSO USER.  IF IT IS A TSO USER, UNIT=TSODA IS USED TO
*         FORCE TSO DATASETS TO DEDICATED TSO "PUBLIC" VOLUMES.  ANY
*         ATTEMPT TO CODE UNIT(TSODA) IS REPLACED BY UNIT(SYSDA).  BOTH
*         UNIT= AND SPACE= MUST BE ON THE SAME CARD FOR THIS TO WORK.
*     3) MSVGP=GDGDAn IS OUR INSTALLATION SPECIFICATION FOR DISK GDG
*         DATASETS (CURRENTLY 2 3380-BE4 UNITS WORTH).  THE CODE TO
*         IMPLEMENT THIS IS IN THIS EXIT.  MSVGP= MUST BE THE ONLY
*         USEFUL INFORMATION ON THE LAST CARD OF A DD CARD CONTINUATION
*         FOR THIS TO WORK BECAUSE THE ENTIRE CARD IS REPLACED.
*     4) THE ARCHAIC FORM OF THE INTERNAL READER IS CHANGED TO THE
*         CURRENTLY SUPPORTED VERSION.
*
*
* IEFUJV -THIS WAS THE PROGRAM WHICH WAS RECOVERD FROM THE OBJECT DECK
*         THRU DELINK/DISASSEMPLE.THE PROGRAM WAS WRITTEN ORIGINALLY
*         BY WADE FRANKLIN.
* 03-23-79 : COMMENTS ADDED TO THE DISASSEMBLED DECK.  T.Y.
* 04-05-79 : (C1) SUPPORT MSVGP=GDGDA1 FOR "GDGCYL" DASD'S. T.Y
* 09-07-79 : (C2) SUPPORT MSVGP=GDGDA2 (SAME TARGET DASD AS GDGDA1) AJP
* 02-19-82 : (C3) ADDED SOME COMMENTS.   R.S.
* 09-25-82 : (C4) ADD HANDLING FOR VIO DATASETS ON VIRTUAL 3340. JFC
* 02-16-83 : (C5) CHANGED ALLOCATION FROM CYL TO TRK AND REMOVED
*                 ROUND FROM 19069 BLOCK ALLOCATION.  CFH
* 01-27-84 : (C6) REMOVED TIME=1439 OVERRIDE FROM EXEC CARD. JFC
* 08-16-84 : (C7) CONVERTED PROGRAM TO 31-BIT ADDRESSING. JFC
* 06-26-87 : (C8) ALLOW VIO FOR CORPORATE FINANCIAL CONSOLIDATION  JFC
*
*********************************************************************C3
*                                                                    C3
*  NAME - IEFUJV                                                     C3
*                                                                    C3
*  FUNCTION -                                                        C3
*     THIS ROUTINE RECEIVES CONTROL FROM THE CONVERTER BEFORE EACH   C3
*     JCL STATEMENT IS CONVERTED, FROM THE CONVERTER AFTER ALL JCL   C3
*     HAS BEEN CONVERTED, AND FROM THE INTERPRETER AFTER ALL JCL HAS C3
*     BEEN INTERPRETED.  (NOTE THAT JES2 ALSO HAS AN EXIT, HASPRSCN, C3
*     BETWEEN THE FINAL CONVERTER EXIT AND THE INTERPRETER EXIT.)    C3
*                                                                    C3
*     AS MENTIONED ABOVE, THE ORIGINAL SOURCE WAS LOST, AND I FOR    C3
*     ONE AM NOT CERTAIN WHAT ALL IS DONE HERE, MUCH LESS WHY.       C3
*     WE SEEM TO DO THE FOLLOWING:                                   C3
*        JOB CARD:                                                   C3
*             NO ACTION.                                             C7
*        EXEC CARD:                                                  C3
*             "TIME=1440", IF CODED, IS CHANGED TO 1439. **DELETED** C6
*             AN SMF TYPE 131 (USER) RECORD IS WRITTEN IF A PROC IS  C3
*                BEING EXECUTED.  (WE USE THESE TO RUN OCCASIONAL    C3
*                REPORTS ON WHICH PROCS IN PROCLIB ARE GETTING USED.)C3
*        DD CARD:                                                    C3
*             "UNIT=INTRDR" IS CHANGED TO "SYSOUT=(A,INTRDR)".       C3
*             "MSVGP" IS CHANGED TO UNIT AND SPACE PARAMETERS FOR    C3
*                GDGCYL.  THE UNIT PARAMETER IS "UNIT=(GDGCYL,1)";   C3
*                SPACE IS "(19069,240,RLSE,,ROUND)" FOR MSVGP=GDGDA1,C3
*                OR "(CYL,(10,1),RLSE)" FOR GDGDA2.  IF THE JOBNAME  C3
*                BEGINS WITH "Q" OR "R" (AQUA-CHEM), "UNIT=(AQGDG,1),C3
*                SPACE=(TRK,(30,30),RLSE)" IS USED INSTEAD.  ANY     C3
*                MSVGP OPERAND OTHER THAN GDGDA1 OR GDGDA2 IS        C3
*                INVALID, AND THE DD CARD IS LEFT ALONE (AND WILL    C3
*                GIVE A JCL ERROR).  NOTE THAT THE ENTIRE CARD       C3
*                CONTAINING MSVGP IS REPLACED BY A CARD CONTAINING   C3
*                UNIT AND SPACE; THIS IMPLIES THAT (1) MSVGP MUST BE C3
*                ON A CONTINUATION CARD, (2) IT MUST BE THE LAST     C3
*                CONTINUATION CARD FOR THAT DD, (3) ANY OTHER        C3
*                PARAMETERS ON THE SAME CARD WITH MSVGP WILL BE      C3
*                DELETED, AND (4) THERE MUST NOT BE UNIT OR SPACE    C3
*                PARAMETERS ON ONE OF THE OTHER CARDS OF THAT DD.    C3
*        PROC CARD:                                                  C3
*             NO ACTION.  (THIS ENTRY WAS NEW WITH SE/2).            C3
*        FINAL CONVERTER CALL:                                       C3
*             NO ACTION.  (THE OLD SOURCE USED TO PUT THE CURRENT    C3
*                TIME OF DAY INTO THE USER COMMUNICATION FIELD IN    C3
*                THE CEPA.  NO ONE KNOWS WHY.)                       C3
*        FINAL INTERPRETER CALL:                                     C3
*             NO ACTION.  (ALSO NEW WITH SE/2.)                      C3
*  INPUT -                                                           C3
*     R1 POINTS TO A LIST OF FOUR ADDRESSES:                         C3
*        1.  ADDRESS OF THE COMMON EXIT PARAMETER AREA               C3
*        2.  ADDRESS OF THE 80-BYTE JCL STATEMENT                    C3
*        3.  ADDRESS OF A ONE-BYTE INDICATOR SHOWING WHICH TYPE OF   C3
*                ENTRY                                               C3
*        4.  ADDRESS OF A ONE-BYTE INDICATOR DESCRIBING CERTAIN JES  C3
*                CONVERTER PARM VALUES.  (NEW WITH SE/2; WE DON'T    C3
*                USE IT.)                                            C3
*  OUTPUT -                                                          C3
*     R15 = 0 TO CONTINUE, 4 TO CANCEL THE JOB.                      C3
*  REGISTER USAGE -                                                  C3
*     R0 - WORK REGISTER                                             C3
*     R1 - GETMAIN/TRT WORK REGISTER                                 C3
*     R2 - TRT WORK REGISTER                                         C3
*     R3 - POINTER TO COMMON EXIT PARAMETER DSECT                    C3
*     R4 - POINTER TO JCL STATEMENT DSECT                            C3
*     R5 - POINTER TO RECORD DESCRIPTOR BYTE                         C3
*     R6 - POINTER TO WORK AREA DSECT (SET BY GETMAIN)               C3
*     R7 - SET TO COL 1  OF JCL STATEMENT                            C3
*     R8 - SET TO COL 71 OF JCL STATEMENT                            C3
*     R9 - WORK REG                                                  C3
*     R10- WORK REG                                                  C3
*     R11- WORK REG                                                  C3
*     R12- BASE REGISTER                                             C3
*     R13- SAVE AREA POINTER                                         C3
*     R14- RETURN REGISTER                                           C3
*     R15- RETURN CODE REGISTER (0=CONTINUE,4=CANCEL JOB)            C3
*  PROGRAMMING NOTES -                                               C3
*     IEFUJV IS A SINGLE LOAD MODULE IN LPA.  MUST BE REENTRANT.     C3
*********************************************************************C3
USERUJV1 CSECT
USERUJV1 AMODE 31             CSECT NAME CHANGED TO SUPPORT ASM2'S IXR
USERUJV1 RMODE ANY              LINKEDITS
         USING *,R12
         STM   R14,R12,12(R13)
         LR    R12,R15
         B     START
         DC    C'IEFUJV  '
         DC    C'&SYSDATE',C' &SYSTIME'
START    LM    R3,R5,0(R1)         PICK UP FIRST 3 PARAMETERS
         LA    R7,0(0,R4)          ADDRESS OF COL 1 OF JCL STMT
         LA    R8,71(0,R4)         ADDRESS OF COL 72 OF JCL STMT
         CLI   0(R5),X'04'         IS A DD STMT ENTRY?
         BE    DDCARDP             BR IF YES
         CLI   0(R5),X'02'         IS THIS AN EXEC STMT ENTRY?
         BE    EXECP               BR IF YES
         B     RETURNOK            DON'T DO ANYTHING FOR OTHER ENTRIES
         SPACE 3
DDCARDP  LR    R1,R7               SET POINTER TO COL.1 OF JCL
DDCP1    LR    R9,R8               GET COL1.73 IN REG 9
         LA    R1,1(R1)            ADVANCE POINTER
         SR    R9,R1               SET RANGE FOR SCAN
         BNP   CHKMSVGP            AT THE END OF A CARD?            C1
         EX    R9,TRT6             IS THERE A 'U' IN A CARD?
         BZ    CHKMSVGP            RETURN IF NO                     C1
         CLC   UNITVIO,0(R1)       UNIT=VIO?                        C4
         BE    VIOCHECK             YES, HANDLE IT                  C4
         CLC   UNITVIO1,0(R1)      UNIT=(VIO?                       C4
         BE    VI0CHECK             YES, HANDLE IT                  C4
         CLC   UNITINTR,0(R1)      UNIT=INTRDR?
         BNE   DDCP1                BR IF NO
         LR    R9,R8               SET POINTER BACK TO COL.1
         SR    R9,R1               SET UP # OF CHARACTERS TO MOV
         EX    R9,MVCINTR          MOVE "SYSOUT=(A,INTRDR),...."
         B     RETURNOK            GO BACK
CHKMSVGP CLI   2(R7),C' '          IS COL.3 BLANK?                  C1
         BNE   RETURNOK            RETURN IF NOT CONTINUATION STMT  C1
         LA    R1,3(R7)            START SCAN AT COL.4              C1
         LA    R9,15(R7)           STOP AT COL.60                   C1
         SR    R9,R1               SET SCAN RANGE                   C1
         EX    R9,RTRM             LOOKING FOR A 'M'                C1
         LR    R10,R1              SAVE POSITION OF A 'M'           C1
         BZ    RETURNOK            RETURN IF NO 'M'                 C1
         CLC   0(L'MSVGP,R1),MSVGP IS IT A 'MSVGP='?                C1
         BNE   RETURNOK            RETURN IF NO                     C1
         CLI   6(R1),C'('          IS C'(' AFTER MSVGP= ?           C1
         BNE   CHKGDGDA            BR IF YES                        C1
         LA    R1,1(R1)            ADJUST POINTER                   C1
CHKGDGDA CLC   6(6,R1),GDGDA1      IS IT A 'GDGDA1'?                C1
         BE    GOTGDGD1            BR IF YES                        C2
         CLC   6(6,R1),GDGDA2      IS IT A 'GDGDA2' ?               C2
         BNE   RETURNOK            BR IF NO                         C2
         MVC   0(L'CGDGDA2,R10),CGDGDA2                             C2
         B     RETURNOK                                             C3
GOTGDGD1 MVC   0(L'CGDGDA1,R10),CGDGDA1    REPLACE MSVGP WITH UNIT& C2
         B     RETURNOK            RETURN                 SPACE     C1
*                                                                   C1
RTRM     TRT   0(*-*,R1),TRTBM     TO BE EXECUTED                   C1
         SPACE 3
VIOCHECK CLC   VIOALLOC,0(R1)      ONLY ALLOW THIS TO PASS          C4
         BE    VIOCK00                                              C4
         NOP   RETURNON                                             C4
         B     VIOCK0                                               C4
VIOCK00  MVC   0(13,R1),=C'UNIT=VIODA   '                           C4
VIOCK0   CLC   =C'UNIT=VIODA ',0(R1) GUARANTEE VIO IS CORRECT       C4
         BE    VIOCK2                                               C4
VIOCK1   MVC   5(3,R1),=C'SYS'     MOVE DATASET TO "SYSDA"          C4
         B     RETURNOK                                             C4
VIOCK2   CLC   =C'O3800A',0(R3)    IS THIS FOR CFC?                 C8
         BE    VIOCK2A              YES, CHECK IT FURTHER           C8
         CLC   =C'O3800B',0(R3)    IS THIS FOR CFC?                 C8
         BE    VIOCK2A              YES, CHECK IT FURTHER           C8
         TM    29(R3),X'01'        IS IT A TSO USERID?              C4
         BNO   VIOCK1               NO, KILL IT                     C4
VIOCK2A  LA    R9,5(R1)            HANG ON TO ADDRESS OF "VIODA "   C4
         LR    R11,R7              SAVE THE START OF THE CARD       C4
         L     R10,=F'-1'          LOAD THE INCREMENT VALUE         C4
VIOCK3   CLC   =C'SPACE=',0(R1)    FIND THE "SPACE="                C4
         BE    VIOCK4                                               C4
         BXH   R1,R10,VIOCK3       LOOP UNTIL THE START OF THE CARD C4
         B     RETURNOK            END OF CARD                      C4
VIOCK4   LH    R11,=H'1'           INITIALIZE TO 1                  C4
         LA    R1,7(R1)            POINT TO SPACE TYPE              C4
         CLC   =C'CYL',0(R1)       CYLINDER ALLOCATION              C4
         BNE   VIOCK5              TRY AGAIN                        C4
         LH    R11,=H'12'          TRACK/CYLINDER ON 3340           C4
         B     VIOCK6                                               C4
VIOCK5   CLC   =C'TRK',0(R1)       TRACK ALLOCATION                 C4
         BNE   VIOCK7              MUST BE BLOCKS                   C4
VIOCK6   LH    R0,=H'8368'         BYTES/TRACK ON 3340              C4
         MR    R10,R0              BYTES/UNIT IN R11                C4
         LA    R1,4(R1)            SKIP TO SIZE                     C4
         B     VIOCK8                                               C4
VIOCK7   LR    R10,R1              SAVE ADDRESS OF START            C4
         LR    R11,R9              CALCULATE LENGTH OF TRT          C4
         SR    R11,R10                                              C4
         EX    R11,TRT7            FIND THE CLOSEST COMMA           C4
         BCTR  R1,0                                                 C4
         SR    R1,R10
         EX    R1,PACKINST         PACK THE BLOCK SIZE              C4
         CVB   R11,1(R8)           BYTES/UNIT IN R11                C4
         LA    R1,2(R1,R10)        SKIP TO SIZE                     C4
VIOCK8   CLI   0(R1),C'('          OPEN PAREN?                      C4
         BNE   VIOCK9                                               C4
         LA    R1,1(R1)            SKIP (                           C4
         TM    0(R1),C'0'                                           C4
         BNO   RETURNON                                             C4
VIOCK9   LR    R2,R1               SAVE POINTER TO PRIMARY SPACE    C4
         LR    R0,R11              SAVE THE VALUE FOR CALCULATIONS  C4
         LR    R11,R9              SAVE POINTER TO END OF CARD      C4
         LA    R10,1                                                C4
VIOCK10  CLI   0(R1),C','          IS THIS THE END OF THE FIELD?    C4
         BE    VIOCK11                                              C4
         CLI   0(R1),C')'                                           C4
         BE    VIOCK11              YES, HANDLE IT                  C4
         BXLE  R1,R10,VIOCK10       NO, TRY AGAIN                   C4
         B     RETURNOK             OOPS, JCL ERROR                 C4
VIOCK11  BCTR  R1,0                NOW CONVERT IT TO NUMERIC        C4
         SR    R1,R2                                                C4
         LR    R10,R2                                               C4
         EX    R1,PACKINST                                          C4
         CVB   R11,1(R8)           PRIMARY SPACE IN R11             C4
         LA    R1,1(R1,R10)        POINTER TO NEXT SEPARATOR        C4
         CLI   0(R1),C')'          IS THERE A SECONDARY ALLOCATION  C4
         BE    VIOCK14              NO, FORGET IT                   C4
         LA    R1,1(R1)            NEXT POSITION                    C4
         CLI   0(R1),C','          SKIPPED SECONDARY                C4
         BE    VIOCK14                                              C4
         CLI   0(R1),C'&&'         IS IT SYMBOLIC?                  C4
         BE    RETURNON                                             C4
         TM    0(R1),C'0'          IS IT NUMERIC                    C4
         BNO   RETURNOK                                             C4
         ST    R11,1(R8)           SAVE NUMBER OF PRIMARY EXTENTS   C4
         LR    R2,R1               SAVE START OF SECONDARY FIELD    C4
         LR    R11,R9                                               C4
         LA    R10,1                                                C4
VIOCK12  CLI   0(R1),C','          END OF SECONDARY ALLOCATION?     C4
         BE    VIOCK13                                              C4
         CLI   0(R1),C')'                                           C4
         BE    VIOCK13              YES                             C4
         BXLE  R1,R10,VIOCK12      LOOP UNTIL I FIND SOMETHING      C4
         B     RETURNOK            OOPS, JCL ERROR                  C4
VIOCK13  SR    R1,R2               LENGTH OF FIELD                  C4
         LR    R10,R2                                               C4
         BCTR  R1,0                                                 C4
         L     R2,1(R8)            LOAD NUMBER OF SECONDARY EXTENTS C4
         EX    R1,PACKINST         CONVERT VALUE INTO BINARY        C4
         CVB   R11,1(R8)                                            C4
         MH    R11,=H'15'          NUMBER OF SECONDARY EXTENTS      C4
         AR    R11,R2              TOTAL NUMBER OF EXTENTS          C4
VIOCK14  MR    R10,R0              TOTAL SIZE OF ALLOCATION         C4
         C     R11,=F'2097153'     MAXIMUM SIZE OF THE VIO ALLOC    C4
         BNH   RETURNOK             OK, GET OUT                     C4
         TM    29(R3),X'01'        IS IT A TSO USERID?              C8
         BNO   VIOCK15              NO, KILL IT                     C8
         MVC   0(8,R9),=C'SYSTSODA' ALLOW TSO TO RUN ON SPECIAL PACKC4
         B     RETURNOK                                             C4
VIOCK15  MVC   0(3,R9),=C'SYS'      MOVE BATCH BACK TO "SYSDA"      C8
         B     RETURNOK                                             C8
VI0CHECK MVC   6(3,R1),=C'SYS'     MOVE DATASET TO "SYSDA"          C4
         B     RETURNOK                                             C4
         SPACE 1                                                    C4
PACKINST PACK  1(8,R8),0(*-*,R10)                                   C4
         EJECT
EXECP    LR    R1,R7               CHECK TIME PARAMETERS
         LR    R9,R8               SET REG9 TO COL.73
         SR    R9,R1               SET SEARCH RANGE
         BNP   EXECP9              BR IF AT THE END OF A CARD
         EX    R9,TRT2             IS THERE A ' '?
         BZ    EXECP9              BR IF NO BLANKS
         LA    R1,1(R1)            GO TO NEXT SEARCH
         LR    R9,R8
         SR    R9,R1
         EX    R9,TRT3              IS THERE A 'E'?
         BE    EXECP9               BR IF NO E'S
         BCTR  R1,0                                8.13    650.43
         CLC   =C' EXEC ',0(R1)     IS IT ' EXEC '?
         BNE   EXECP9                BR IF NO
         LA    R1,5(R1)             ADVANCE POINTER AFTER ' EXEC '
         LR    R10,R1
         LR    R9,R8
         SR    R9,R1
         EX    R9,TRT4              IS THERE A 'P'?
         BZ    EXECP2               BR IF NO
         CLC   =C'PGM=',0(R1)       IS IT A 'PGM='?
         BE    EXECP9                BR IF YES
         CLC   =C'PROC=',0(R1)      IS IT A 'PROC='?
         BNE   EXECP2                BR IF NO
         LA    R1,5(R1)             ADVANCE BEYOND 'PROC='
         B     EXECP4               GO TO THE SMFWTR
EXECP2   LR    R1,R10
         BCTR  R1,0
EXECP3   CLI   1(R1),C' '           FOLLOWED BY A BLANK?
         LA    R1,1(R1)
         BE    EXECP3               BR IF YES
EXECP4   LR    R10,R1
         LR    R9,R8
         SR    R9,R1
         EX    R9,TRT7              IS THERE A ' '?
         BZ    EXECP9               BR IF NO
         SR    R1,R10
         BNH   EXECP9               BR IF AT THE END OF A CARD?
         C     R1,=F'8'             IS A REMAINDER LESS THAN 8?
         BH    EXECP9               BR IF YES
         LR    R9,R1
         PRINT NOGEN
         GETMAIN RU,LV=56,SP=241,LOC=(BELOW,ANY)
         LR    R11,R1
         MVC   0(L'SMFHDR,R11),SMFHDR MOVE SMF HEADER TO BUFFER
         MVC   14(4,R11),16(R3)          SYSTEM ID
         MVC   18(16,R11),0(R3)          JOBNAME & TIMESTAMP
         MVC   34(8,R11),20(R3)          USER ID
         MVC   42(8,R11),=CL8' '         BLANKS
         EX    R9,MVCPROC                PROC NAME
         TIME  BIN
         STM   R0,R1,6(R11)
         SMFWTM (R11)
         FREEMAIN RU,LV=56,A=(R11),SP=241
EXECP9   LR    R1,R7
         B     RETURNOK            GO BACK
         SPACE 3
MVCINTR  MVC   0(*-*,R1),INTRDR
MVCPROC  MVC   42(*-*,R11),0(R10)
TRT2     TRT   0(*-*,R1),TRTB2
TRT3     TRT   0(*-*,R1),TRTB3
TRT4     TRT   0(*-*,R1),TRTB4
TRT6     TRT   0(*-*,R1),TRTB6
TRT7     TRT   0(*-*,R1),TRTB7
         SPACE 2
RETURNOK XR    R15,R15                 CLEAR R15 TO CONTINUE PROCESS
         B     RETURN                  RETURN
         SPACE 1
RETURNON LA    R15,4                     SET 4 IN REG15
RETURN   L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
         SPACE 1
         LTORG
         EJECT
*    TRANSLATE TABLES
TRTB2    DC    32X'0000'
         DC    C' '
TRTB4    DC    X'000000'
         DC    53X'00000000'
         DC    C'P'              C'P' = X'D7'
TRTB5    DC    X'000000'
         DC    56X'00000000'
         DC    C'T'                  C 'T' = X'E3'
TRTB6    DC    X'000000'
         DC    56X'00000000'
         DC    X'00'
         DC    C'U'                  C 'U' = X'E4'
TRTB3    DC    X'0000'
         DC    48X'00000000'
         DC    X'000000'
         DC    C'E'                  C'E' = X'C5'
TRTB7    DC    16X'00000000'
         DC    C' '                  C' ' = X'4-'
         DC    X'000000'
         DC    9X'00000000'
         DC    X'000000'
         DC    C','                  C',' = X'6B'
         DC    37X'00000000'
*
         DC    64X'00'                                              C1
TRTBM    EQU   *-212                                                C1
         DC    C'M'                                                 C1
         DC    43X'00'                                              C1
INTRDR   DC    CL72'SYSOUT=(A,INTRDR),DCB=(RECFM=F,BLKSIZE=80)'
SMFHDR   DC    X'003200000283'
UNITINTR DC    C'UNIT=INTRDR'
UNITVIO  DC    C'UNIT=VIO'
UNITVIO1 DC    C'UNIT=(VIO'
VIOALLOC DC    C'UNIT=VIOALLOC'
*                                                                    C1
MSVGP    DC    C'MSVGP='                                             C1
GDGDA1   DC    C'GDGDA1'                                             C1
GDGDA2   DC    C'GDGDA2'                                             C2
*   NOTE: ENSURE THAT THE REPLACEMENT CARDS WILL NOT BE IN CC 72...  C2
*         ...IF THE REPLACEMENT OPERAND STARTS IN CC 16.             C2
CGDGDA1  DC  C'UNIT=(GDGCYL,1),SPACE=(23476,240,RLSE)        **REPLD**'
CGDGDA2  DC  C'UNIT=(GDGCYL,1),SPACE=(TRK,(300,15),RLSE) *REPLACED*' C5
         PRINT NOGEN
         REGEQU
         END   USERUJV1
