*          DATA SET IEFDB401   AT LEVEL 006 AS OF 12/22/87
IEFDB401 TITLE 'IEFDB401--SVC 99 EXIT TO CONTROL DYNAMIC ALLOCATION'
         PRINT NOGEN
IEFDB401 CSECT
IEFDB401 AMODE ANY
IEFDB401 RMODE ANY
*
*  SVC99 EXIT TO ALLOCATE TSO TEMPORARY DATASETS TO A TSO ONLY SCRATCH
*  PACK AND CONTROL THE SIZE OF VIO DATA SETS FROM TSO.  THIS EXIT
*  CHANGES THE UNIT NAME FOR ALL DYNAMIC ALLOCATIONS TO SUPPORT THE
*  FOLLOWING FUNCTIONS:
*     1) CONTROL VIO ALLOCATION SIZE.  THIS REQUIRES THE USER TO
*         SPECIFY UNIT(VIOALLOC).  UNIT=VIOALLOC IS NOT VALID IN THE
*         SYSGEN PARAMETERS.  IF THE SPACE= SPECIFIES A VALID AMOUNT
*         OF DISK SPACE, THE UNIT= IS CHANGED TO UNIT=VIODA WHICH IS
*         A 3340.  IF UNIT=VIODA IS CODED IN THE JCL OR THE SPACE= IS
*         TOO LARGE, THE UNIT= IS CHANGED TO UNIT=SYSDA.
*     2) FORCE TSO TEMPORARY DATASETS TO A DEDICATED "PUBLIC" VOLUME.
*         UNIT(VIOALLOC) IS SPECIFIED TO INVOKE THIS SERVICE.  IF THE
*         SPACE= IS MET IN 1) ABOVE, THE DATASET GOES TO VIO; OTHERWISE
*         A CHECK IS MADE TO VERIFY THAT THE DYNAMIC ALLOCATION IS MADE
*         BY A TSO USER.  IF IT IS A TSO USER, UNIT=TSODA IS USED TO
*         FORCE TSO DATASETS TO DEDICATED TSO "PUBLIC" VOLUMES.  ANY
*         ATTEMPT TO CODE UNIT(TSODA) IS REPLACED BY UNIT(SYSDA).
*     3) VERIFY THAT ALL IMS ALLOCATION OF AN INTERNAL READER COMES
*         FROM PROGRAM O9061S75.  THIS IS TO ENSURE THAT ACF2 HAS THE
*         CORRECT SYSTEM ID FOR JOBS SUBMITTED BY IMS TRANSACTIONS.  AN
*         ATTEMPT TO VIOLATE ACF2 REQUIREMENTS GETS THE USER A S0C3.
*     4) UNIT=DISK IS SUBSTITUTED FOR ALL UNIT=XXXX WHERE XXXX IS
*         EXACTLY FOUR CHARACTERS LONG.
*
*  TSO IS VERY DEPENDENT ON TEMPORARY DATASETS TO PERFORM SOME OF ITS
*  FUNCTIONS (COMPILE, ETC.).  PERFORMANCE IMPROVEMENTS ARE AVAILABLE
*  BY SEPARATING TEMPORARY, WORK DATASETS FROM THE PERMANENT DATASETS
*  THAT ALL TSO USERS KEEP ON THEIR PRIMARY PACKS.  SINCE THE UNITNAME
*  FOR ALL NEW TSO DATASETS MUST BE SPECIFIED IN SYS1.UADS,  IT IS
*  DIFFICULT TO SEPARATE THESE DATASETS.  THIS EXIT WILL CHANGE THE
*  UNITNAME FOR TEMPORARY DATASETS FROM THAT SPECIFIED IN SYS1.UADS TO
*  A UNITNAME OF YOUR CHOICE (SPECIFIED IN THE "UNITTEXT" DC BELOW).
*  THIS ALLOWS MOVING TEMPORARIES TO ANY WORK PACKS YOU LIKE OR
*  DEDICATING WORK/SCRATCH PACKS TO TSO USERS.
*
*  CODE IS INCLUDED TO CONTROL THE SIZE OF VIO DATA SETS FROM TSO.
*
*  CODE IS INCLUDED TO CONTROL THE USE OF DYNAMIC "INTRDR" ALLOCATION
*  FROM IMS MPP REGIONS.
*
         REGEQU
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING IEFDB401,R12
         B     AROUNDC
         DC    CL8'IEFDB401'
         DC    CL9' &SYSDATE.'
         DC    CL7' &SYSTIME.'
AROUNDC  LR    R11,R1
         USING PARMFLD,R11       IEFDB401 PARAMETERS
         L     R6,WORKAA          A(A(WORK AREA))
         L     R6,0(R6)           A(WORK AREA)
         L     R7,WORKLENA        A(LENGTH)
         L     R7,0(R7)           LENGTH OF WORK AREA
         SRL   R7,1
         LA    R5,LENGTH
         CR    R7,R5              IS THERE ENOUGH WORK AREA??
         BL    GETOUTQU
         LA    R5,0(R7,R6)
         ST    R13,4(R5)
         ST    R5,8(R13)
         LR    R13,R5
         USING WORKAREA,R13
         MVC   EYECATCH,=CL24'   IEFDB401 WORK AREA'
         NI    FLAG,X'00'         INITIALIZE FLAG
         SR    R8,R8
         ST    R8,THREEPLS
         ST    R8,PRIMESPC
         ST    R8,SECNDSPC
         ST    R8,BLKLNSPC
         L     R9,PGMNAMEA
         MVC   PGMNAME,0(R9)  SAVE PROGRAM NAME FOR LATER CHECKING
         CLC   =C'ADFMDF03',PGMNAME IS THIS THE SESSION MANAGER?
         BNE   SESSMGR         NO, LET IT GO
         MVC   PGMNAME,=C'IKJEFT01'
         SPACE 1
SESSMGR  L     R9,SV99IRBA        A(REQ BLK)
         USING S99RB,R9
         CLI   S99VERB,S99VRBAL   IS THIS AN ALLOCATE BY DSN
         BNE   ZERORC              NO
         L     R3,S99TXTPP
         USING S99TUPL,R3
         SPACE 1
LOOP     L     R4,S99TUPTR
         USING S99TUNIT,R4
         LTR   R4,R4
         BZ    CHECK
         CLC   S99TUKEY,=AL2(DALDSNAM)  CHECK FOR SPECIFIC FUNCTIONS
         BE    DSNAMEP
         CLC   S99TUKEY,=AL2(DALTRK)
         BE    TRACKS
         CLC   S99TUKEY,=AL2(DALCYL)
         BE    CYLINDER
         CLC   S99TUKEY,=AL2(DALBLKLN)
         BE    ALLOCBLK
         CLC   S99TUKEY,=AL2(DALPRIME)
         BE    ALLOCPRM
         CLC   S99TUKEY,=AL2(DALSECND)
         BE    ALLOCSEC
         CLC   S99TUKEY,=AL2(DALROUND)
         BE    CYLINDER
         CLC   S99TUKEY,=AL2(DALSTATS)
         BE    STATP
         CLC   S99TUKEY,=AL2(DALUNIT)
         BE    UNITP
         CLC   S99TUKEY,=AL2(DALDUMMY)
         BE    ZERORC
         CLC   S99TUKEY,=AL2(DALTERM)
         BE    ZERORC
         CLC   S99TUKEY,=AL2(DALSSNM)
         BE    ZERORC
         CLC   S99TUKEY,=AL2(DALSPGNM)
         BE    IMSINTRD
CHECK    TM    S99TUPTR,S99TUPLN  LAST ONE?
         BO    END
         LA    R3,4(R3)
         B     LOOP
         SPACE 1
DSNAMEP  CLI   S99TUPAR,C'&&'      TEMP DSN?
         BNE   ZERORC
         OI    FLAG,FLAGDSN
         B     CHECK
         SPACE 1
UNITP    OI    FLAG,FLAGUNIT
         CLC   =C'VIO',S99TUPAR
         BNE   ZERORC
         OI    FLAG,FLAGVIO
         ST    R3,UNITS99B
         ST    R4,UNITS99A
         CLC   S99TULNG,=H'4'
         BNE   CHECK
         MVC   S99TUPAR(4),=C'DISK'
         B     CHECK
         SPACE 1
STATP    TM    S99TUPAR,X'09'     DISP=OLD × DISP=SHR
         BM    ZERORC
         TM    S99TUPAR,X'04'     DISP=NEW
         BO    CHECK
         OI    FLAG,FLAGSTAT
         B     CHECK
         SPACE 1
CYLINDER OI    FLAG,FLAGCYL
         B     CHECK
TRACKS   OI    FLAG,FLAGTRK
         B     CHECK
         SPACE 1
ALLOCPRM MVC   THREEBYT,S99TUPAR
         MVC   PRIMESPC,THREEPLS
         B     CHECK
         SPACE 1
ALLOCSEC MVC   THREEBYT,S99TUPAR
         MVC   SECNDSPC,THREEPLS
         B     CHECK
         SPACE 1
ALLOCBLK MVC   THREEBYT,S99TUPAR
         MVC   BLKLNSPC,THREEPLS
         B     CHECK
         SPACE 1
END      TM    FLAG,FLAGUNIT
         BO    VIOCHECK
         CLC   =C'IKJEFT01',PGMNAME
         BNE   VIOCHECK
         NI    S99TUPTR,X'FF'-S99TUPLN     TURN OFF LAST ONE BIT
         AH    R3,=H'4'           ADD TO POINTERS
         LA    R8,UNITTEXT
         ST    R8,S99TUPTR        STORE NEW POINTER ADDRESS
         OI    S99TUPTR,S99TUPLN  TURN ON LAST ONE BIT
         B     ZERORC
         SPACE 1
VIOCHECK TM    FLAG,FLAGVIO
         BZ    ZERORC
         CLC   =C'IKJEFT01',PGMNAME
         BNE   MVCSYS
         L     R1,SECNDSPC
         LA    R8,15          MULTIPLY BY 15 MAXIMUM EXTENTS
         MR    R0,R8
         LR    R8,R1
         A     R8,PRIMESPC
         TM    FLAG,FLAGTRK   ALLOCATION IN TRACKS?
         BO    CALCTRK
         TM    FLAG,FLAGCYL   ALLOCATION IN CYLINDERS?
         BNO   CALCBLK
         L     R1,=F'12'      3340 TRACKS/CYLINDER
         MR    R0,R8
         LR    R8,R1
CALCTRK  L     R1,=F'8368'    3340 BYTES/TRACK
FINALCAL MR    R0,R8
         C     R1,=F'2097153' ALLOW 2M TO USE VIO
         BL    ZERORC
         B     MVCSYS
CALCBLK  L     R1,BLKLNSPC
         B     FINALCAL
MVCSYS   L     R4,UNITS99A    REPLACE THE UNIT NAME
         CLC   =C'VIO',S99TUPAR
         BNE   ZERORC
         CLC   =C'IKJEFT01',PGMNAME IS THIS TSO?
         BNE   MVCSYS1
         L     R3,UNITS99B    LOAD ADDRESS OF POINTER
         LA    R8,UNITTEXT    LOAD NEW ADDRESS FOR POINTER
         TM    S99TUPTR,S99TUPLN
         BNO   STNEWPTR
         O     R8,=X'80000000' SET END OF TEXT INDICATOR
STNEWPTR ST    R8,S99TUPTR       STORE POINTER TO UNITTEXT
MVCSYS1  MVC   S99TUPAR(3),=C'SYS'
         SPACE 1
IMSINTRD L     R8,JOBNAMEA    CHECK FOR IMS MPP REGION NAME
         CLC   =C'O9600',0(R8)
         BNE   ZERORC           NOT IMS, FORGET IT
         CLC   =CL2' ',6(R8)
         BNE   ZERORC           NOT IMS, FORGET IT
         CLC   =H'6',S99TULNG IS THE LENGTH OF THE OPERAND = 6?
         BNE   ZERORC
         CLC   =C'INTRDR',S99TUPAR IS THE SYSOUT PGM NAME CORRECT?
         BNE   ZERORC           NO, FORGET IT
         DROP  R3,R4,R9
         USING PSA,0          POINT TO PSA
         L     R3,PSAAOLD     LOAD CURRENT ASCB POINTER
         USING ASCB,R3        POINT TO ASCB
         L     R4,ASCBASXB    LOAD POINTER TO ASXB
         DROP  0,R3
         USING ASXB,R4
         L     R4,ASXBFTCB    LOAD POINTER TO TCB FOR IEAVAR30
         DROP  R4
         USING TCB,R4
         L     R4,TCBLTC      LOAD POINTER TO TCB FOR IEFSB605
         LTR   R4,R4           IS THIS TCB ZERO?
         BZ    NOTZERO          YES, KILL IT
         L     R4,TCBLTC      LOAD POINTER TO TCB FOR IEFIIC
         LTR   R4,R4           IS THIS TCB ZERO?
         BZ    NOTZERO          YES, KILL IT
         L     R4,TCBLTC      LOAD POINTER TO TCB FOR A9590A07
         LTR   R4,R4           IS THIS TCB ZERO?
         BZ    NOTZERO          YES, KILL IT
         L     R4,TCBLTC      LOAD POINTER TO TCB FOR DFSPCC20
         LTR   R4,R4           IS THIS TCB ZERO?
         BZ    NOTZERO          YES, KILL IT
         L     R4,TCBLTC      LOAD POINTER TO TCB FOR O9061S75
         LA    R4,0(R4)        DROP ANY HIGH ORDER BIT(S)
         LTR   R4,R4           IS THIS TCB ZERO?
         BZ    NOTZERO          YES, KILL IT
         L     R5,TCBRBP      POINTER TO CURRENT REQUEST BLOCK
         DROP  R4
         USING RBBASIC,R5
IMSLOOP  L     R6,RBLINK      POINTER TO OLDER REQUEST BLOCK
         LA    R6,0(R6)       CHECK FOR THE OLDEST REQUEST BLOCK
         CR    R6,R4          IS THIS THE OLDEST REQUEST BLOCK?
         BE    IMSLOOP1        YES, CHECK THE CDE
         LR    R5,R6          USE THE OLDER RB ADDRESS
         B     IMSLOOP
IMSLOOP1 L     R6,RBCDE       POINTER TO CDE FOR PROGRAM
         DROP  R5
         USING CDENTRY,R6
         CLC   =C'O9061S75',CDNAME CHECK THE PROGRAM NAME
         BNE   NOTZERO         WRONG, KILL IT
         TM    CDATTR2,CDSYSLIB CHECK FOR AUTHORIZED LIBRARY
         BO    ZERORC           YES, LET IT GO
         DROP  R6
         EX    R5,*           BLOW BECAUSE NOT AUTHORIZED LIBRARY
*                               EVENTUALLY THE IMS SYSTEM PROGRAMMER
*                               WILL GET IT CORRECT.
NOTZERO  EX    R6,*           BLOW THE PROGRAM FOR A VALID ERROR.
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         LA    R15,4
         BR    R14
         SPACE 2
ZERORC   L     R13,4(R13)
GETOUTQU LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         SPACE 1
UNITTEXT DC    X'0015'
         DC    X'0001'
         DC    X'0008'
         DC    C'SYSTSODA'
         SPACE 1
         LTORG
         SPACE 2
PARMFLD  DSECT
SV99IRBA DS    F              ADDRESS OF SVC99 INPUT REQUEST BLOCK, ETC
WORKAA   DS    F              ADDRESS OF THE WORK AREA ADDRESS
WORKLENA DS    F              ADDRESS OF THE LENGTH OF THE WORK AREA
JOBNAMEA DS    F              ADDRESS OF THE JOB NAME
PGMRNAMA DS    F              ADDRESS OF THE PROGRAMMER NAME
JOBACCTA DS    F              ADDRESS OF THE JOB ACCOUNT INFO
STEPNAMA DS    F              ADDRESS OF THE STEP NAME
PGMNAMEA DS    F              ADDRESS OF THE PROGRAM NAME
STPACCTA DS    F              ADDRESS OF THE STEP ACCOUNT INFO
         SPACE 1
WORKAREA DSECT
         DS    18F
THREEPLS DS    0F
         DS    X
THREEBYT DS    XL3
PRIMESPC DS    F              SPACE ALLOCATION PRIMARY VALUE
SECNDSPC DS    F              SPACE ALLOCATION SECONDARY VALUE
BLKLNSPC DS    F              AVERAGE BLOCK LENGTH
UNITS99A DS    F              POINTER TO THE UNIT=  S99TUNIT
UNITS99B DS    F              ADDRESS OF POINTER TO THE UNIT=
FLAG     DS    XL1
FLAGDSN  EQU   X'80'          DSNAME FOUND
FLAGUNIT EQU   X'40'          UNIT FOUND
FLAGCYL  EQU   X'20'          CYLINDER ALLOCATION
FLAGTRK  EQU   X'10'          TRACK ALLOCATION
FLAGVIO  EQU   X'08'          VIO UNIT NAME
FLAGSTAT EQU   X'01'          DISP=MOD
PGMNAME  DS    CL8            PROGRAM NAME FOR LATER CHECKING
EYECATCH DC    CL24'   IEFDB401 WORK AREA'
LENGTH   EQU   *-WORKAREA
         SPACE 1
         IHAPSA DSECT=YES     REQUIRES SYS1.AMODGEN
         IHAASCB
         IHAASXB
         IKJTCB
         IHACDE
         IHARB
         EJECT
         PRINT GEN
         IEFZB4D0
         EJECT
         IEFZB4D2
         END   IEFDB401
