GE2      CSECT
         MACRO
&NAME    DCS
.**********************************************************************
.*                                                                    *
.*        DCS  -  DEFINE CONSTANT FOR SCREEN                          *
.*                                                                    *
.*        WRITTEN BY BILL GODFREY                                     *
.*        PLANNING RESEARCH CORPORATION                               *
.*        PRC COMPUTER CENTER, MCLEAN VA 22101                        *
.*        DATE WRITTEN. JANUARY 8 1981.                               *
.*        DATE UPDATED. MARCH 18 1982. (ROW AND COL IN PARENS)        *
.*        GP@SCP         JULY 25 1986. (EXTENDED ATTRS, MEDIUM INTENS)*
.*        GP@SCP    SEPTEMBER 23 1986. (ESCAPES, WRITES, RA, MFA, MF) *
.*                                                                    *
.*        THIS MACRO IS USED FOR CODING A FULLSCREEN 3270 DISPLAY.    *
.*                                                                    *
.*        SAMPLE                                                      *
.*           DCS    AL1(WCC),SBA,(1,1),RTA,(7,1),X'00',IC             *
.*                                                                    *
.*        IT SIMPLIFIES THE CODING OF A SCREEN IN THE FOLLOWING WAYS. *
.*        .  BUFFER ADDRESSES ARE SPECIFIED AS ROW AND COLUMN NUM-    *
.*           BER.  THE MACRO TRANSLATES THEM INTO THE 3270 CODE.      *
.*        .  ORDERS ARE SPECIFIED BY NAME, SUCH AS 'SBA' AND 'SF',    *
.*           SO YOU DONT HAVE TO KNOW THE HEX CODES FOR THEM,         *
.*        .  COMMONLY USED ATTRIBUTE BYTES ARE SPECIFIED BY NAME      *
.*           (A SET OF RESERVED NAMES) SO YOU DONT HAVE TO KNOW       *
.*           THE HEX CODES FOR THEM.                                  *
.*        .  IT SAVES A LOT OF DOCUMENTATION WORK, AND MAKES          *
.*           THE CODE EASIER FOR OTHERS TO UNDERSTAND.                *
.*                                                                    *
.*        THE USER OF THE MACRO MUST STILL UNDERSTAND HOW A SCREEN    *
.*        IS CONSTRUCTED BEFORE USING IT. THE MACRO MERELY MAKES IT   *
.*        EASIER TO SPECIFY THE VALUES.  IT DOES VERY LITTLE ERROR    *
.*        CHECKING.  FOR INSTANCE, IT DOES NOT CHECK TO SEE IF        *
.*        YOU FOLLOW AN 'SBA' WITH A BUFFER ADDRESS.  IT IS POSSIBLE  *
.*        TO CODE A THOROUGHLY INVALID SCREEN.                        *
.*                                                                    *
.*        THE MACRO MAY HAVE ANY NUMBER OF OPERANDS, CONSISTING OF    *
.*        ANY COMBINATION OF THE FOLLOWING.                           *
.*                                                                    *
.*        .  AN ESCAPE CHARACTER.                                     *
.*           VALID ESCAPE CHARACTERS ARE:                             *
.*           ESC - ESCAPE                                             *
.*           GE  - GRAPHICS ESCAPE                                    *
.*        .  A WRITE COMMAND.                                         *
.*           VALID WRITE COMMANDS ARE:                                *
.*           WRT - WRITE                                              *
.*           EW  - ERASE/WRITE                                        *
.*           EWA - ERASE/WRITE ALTERNATE                              *
.*        .  AN ORDER.                                                *
.*           VALID ORDERS ARE:                                        *
.*           SBA, SF, RTA (RA), IC, PT, EUA, SA, SFE, MFA (MF).       *
.*        .  A BUFFER ADDRESS IN PARENTHESES.                         *
.*           IF AN OPERAND IS IN PARENTHESES, IT IS ASSUMED THAT      *
.*           THE ROW AND COLUMN NUMBER ARE BETWEEN THE PARENS,        *
.*           SEPARATED BY A COMMA.  EXAMPLE: (1,1)                    *
.*           THIS FORM OF BUFFER ADDRESS IS NEW AS OF MARCH 18 1982.  *
.*        .  A ROW OR COLUMN NUMBER OF A BUFFER ADDRESS (OLD FORMAT). *
.*           IF AN OPERAND IS NUMERIC, IT IS ASSUMED TO BE            *
.*           A ROW OR COLUMN NUMBER.  IT TAKES 2 OPERANDS TO          *
.*           SPECIFY THE BUFFER ADDRESS (ROW AND COLUMN) SO NUMERIC   *
.*           OPERANDS MUST ALWAYS BE SPECIFIED IN PAIRS, THE          *
.*           FIRST BEING THE ROW AND THE SECOND BEING THE COLUMN.     *
.*           THIS FORMAT IS SUPPORTED ONLY FOR COMPATIBILITY WITH     *
.*           THE ORIGINAL VERSION OF THIS MACRO.                      *
.*        .  AN ATTRIBUTE BYTE.                                       *
.*           VALID ATTRIBUTE BYTES ARE:                               *
.*           UNPLO  - UNPROTECTED NORMAL INTENSITY                    *
.*           UNPMD  - UNPROTECTED MEDIUM INTENSITY                    *
.*           UNPHI  - UNPROTECTED HIGH INTENSITY                      *
.*           UNPNP  - UNPROTECTED NO-DISPLAY                          *
.*           PROLO  - PROTECTED NORMAL INTENSITY                      *
.*           PROLOS - PROTECTED NORMAL INTENSITY AUTO-SKIP            *
.*           PROMD  - PROTECTED MEDIUM INTENSITY                      *
.*           PROMDS - PROTECTED MEDIUM INTENSITY AUTO-SKIP            *
.*           PROHI  - PROTECTED HIGH INTENSITY                        *
.*           PROHIS - PROTECTED HIGH INTENSITY AUTO-SKIP              *
.*        .  AN EXTENDED ATTRIBUTE TYPE.                              *
.*           VALID ATTRIBUTE TYPES ARE:                               *
.*           FIELD, HILITE, COLOUR AND PGMSYM.                        *
.*        .  AN EXTENDED HIGHLIGHTING SPECIFICATION.                  *
.*           VALID HIGHLIGHTINGS ARE:                                 *
.*           NORMAL, BLINK, REVERSE AND USCORE.                       *
.*        .  AN EXTENDED COLOUR SPECIFICATION.                        *
.*           VALID COLOURS ARE:                                       *
.*           BLUE, RED, PINK, GREEN, TURQ, YELLOW, WHITE AND NORMAL.  *
.*        .  A HEX, CHARACTER, OR ADDRESS CONSTANT.                   *
.*           FOR EXAMPLE, X'00', OR C'ENTER SIGNON'                   *
.*           THIS CAN BE USED FOR DATA WITHIN FIELDS OR FOR           *
.*           ATTRIBUTE BYTES, ORDERS, THE 'WCC', OR BUFFER            *
.*           ADDRESSES (IF YOU WANT TO FIGURE THEM OUT).              *
.*                                                                    *
.*        IF THE OPERANDS DO NOT ALL FIT ON ONE LINE, YOU CAN         *
.*        EITHER CONTINUE THE LINE IN THE STANDARD ASSEMBLER WAY      *
.*        OR CODE THE MACRO AGAIN ON THE NEXT LINE WITH THE           *
.*        REMAINING OPERANDS.  THE RESULT IS THE SAME EITHER WAY.     *
.*                                                                    *
.*        THE BUFFER ADDRESS CONVERSIONS ARE FOR A                    *
.*        SCREEN SIZE OF 24 ROWS BY 80 COLUMNS. FOR SCREENS           *
.*        OF OTHER DIMENSIONS (43 BY 80, 12 BY 40) THE MACRO          *
.*        NEEDS ONLY A FEW CHANGES.                                   *
.*                                                                    *
.*        WARNING: IF YOU CODE THE MACRO WITH A LABEL IN COLUMN 1,    *
.*        AND YOU LIKE USING LENGTH ATTRIBUTES, BEWARE THAT THE       *
.*        LENGTH ATTRIBUTE OF THE LABEL IS NOT NECESSARILY THE        *
.*        TOTAL LENGTH OF THE DATA GENERATED BY THE MACRO.            *
.*                                                                    *
.*        PROGRAMMING NOTE:                                           *
.*        SA,NORMAL,NORMAL     WILL DO IN THREE BYTES WHAT            *
.*        SA,HILITE,NORMAL,SA,COLOUR,NORMAL,SA,PGMSYM,NORMAL          *
.*                             WILL DO IN NINE BYTES.                 *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &R,&C,&P,&Q
         LCLA  &AN,&AS,&AL
         LCLB  &B,&NUMERIC,&INTEGER
         LCLC  &T(64)
         LCLC  &N,&ROW,&COL
         LCLC  &CS,&STRING
&T(1)    SETC  '40'
&T(2)    SETC  'C1'
&T(3)    SETC  'C2'
&T(4)    SETC  'C3'
&T(5)    SETC  'C4'
&T(6)    SETC  'C5'
&T(7)    SETC  'C6'
&T(8)    SETC  'C7'
&T(9)    SETC  'C8'
&T(10)   SETC  'C9'
&T(11)   SETC  '4A'
&T(12)   SETC  '4B'
&T(13)   SETC  '4C'
&T(14)   SETC  '4D'
&T(15)   SETC  '4E'
&T(16)   SETC  '4F'
.*
&T(17)   SETC  '50'
&T(18)   SETC  'D1'
&T(19)   SETC  'D2'
&T(20)   SETC  'D3'
&T(21)   SETC  'D4'
&T(22)   SETC  'D5'
&T(23)   SETC  'D6'
&T(24)   SETC  'D7'
&T(25)   SETC  'D8'
&T(26)   SETC  'D9'
&T(27)   SETC  '5A'
&T(28)   SETC  '5B'
&T(29)   SETC  '5C'
&T(30)   SETC  '5D'
&T(31)   SETC  '5E'
&T(32)   SETC  '5F'
.*
&T(33)   SETC  '60'
&T(34)   SETC  '61'
&T(35)   SETC  'E2'
&T(36)   SETC  'E3'
&T(37)   SETC  'E4'
&T(38)   SETC  'E5'
&T(39)   SETC  'E6'
&T(40)   SETC  'E7'
&T(41)   SETC  'E8'
&T(42)   SETC  'E9'
&T(43)   SETC  '6A'
&T(44)   SETC  '6B'
&T(45)   SETC  '6C'
&T(46)   SETC  '6D'
&T(47)   SETC  '6E'
&T(48)   SETC  '6F'
.*
&T(49)   SETC  'F0'
&T(50)   SETC  'F1'
&T(51)   SETC  'F2'
&T(52)   SETC  'F3'
&T(53)   SETC  'F4'
&T(54)   SETC  'F5'
&T(55)   SETC  'F6'
&T(56)   SETC  'F7'
&T(57)   SETC  'F8'
&T(58)   SETC  'F9'
&T(59)   SETC  '7A'
&T(60)   SETC  '7B'
&T(61)   SETC  '7C'
&T(62)   SETC  '7D'
&T(63)   SETC  '7E'
&T(64)   SETC  '7F'
.*
&N       SETC  '&NAME'
&AN      SETA  N'&SYSLIST          NUMBER OF OPERANDS
&AS      SETA  0
&B       SETB  0 FALSE
.EACH    AIF   (&AN EQ 0).EPILOG
&AS      SETA  &AS+1
&CS      SETC  '&AS'
&AL      SETA  K'&SYSLIST(&AS)
         AIF   (T'&SYSLIST(&AS) EQ 'O').NEXT
         AIF   ('&SYSLIST(&AS)'(1,1) EQ '(').PAIR
&NUMERIC SETB  (T'&SYSLIST(&AS) EQ 'N')
&INTEGER SETB  ('&SYSLIST(&AS)'(1,1) GE '0')
         AIF   (&NUMERIC AND &INTEGER).ROWCOL
         AIF   (NOT &B).ROWCOLX
         MNOTE 4,'             &CS.) MISSING COLUMN NUMBER'
&B       SETB  0 FALSE
.ROWCOLX ANOP
&STRING  SETC  '&SYSLIST(&AS)'
.*             ESCAPES
         AIF   ('&STRING' EQ 'ESC').ESC
         AIF   ('&STRING' EQ 'GE').GE
.*             WRITES
         AIF   ('&STRING' EQ 'WRT').WRT
         AIF   ('&STRING' EQ 'EW').EW
         AIF   ('&STRING' EQ 'EWA').EWA
.*             ORDERS
         AIF   ('&STRING' EQ 'SBA').SBA
         AIF   ('&STRING' EQ 'SF').SF
         AIF   ('&STRING' EQ 'RTA').RTA
         AIF   ('&STRING' EQ 'RA').RTA
         AIF   ('&STRING' EQ 'IC').IC
         AIF   ('&STRING' EQ 'PT').PT
         AIF   ('&STRING' EQ 'EUA').EUA
         AIF   ('&STRING' EQ 'SA').SA
         AIF   ('&STRING' EQ 'MFA').MFA
         AIF   ('&STRING' EQ 'MF').MFA
.*             ATTRIBUTES
         AIF   ('&STRING' EQ 'UNPLO').UNPLO
         AIF   ('&STRING' EQ 'UNPMD').UNPMD
         AIF   ('&STRING' EQ 'UNPHI').UNPHI
         AIF   ('&STRING' EQ 'UNPNP').UNPNP
         AIF   ('&STRING' EQ 'PROLO').PROLO
         AIF   ('&STRING' EQ 'PROLOS').PROLOS
         AIF   ('&STRING' EQ 'PROMD').PROMD
         AIF   ('&STRING' EQ 'PROMDS').PROMDS
         AIF   ('&STRING' EQ 'PROHI').PROHI
         AIF   ('&STRING' EQ 'PROHIS').PROHIS
.*             EXTENDED ATTRIBUTE TYPES
         AIF   ('&STRING' EQ 'FIELD').FIELD
         AIF   ('&STRING' EQ 'HILITE').HILITE
         AIF   ('&STRING' EQ 'COLOUR').COLOUR
         AIF   ('&STRING' EQ 'PGMSYM').PGMSYM
.*             HIGHLIGHTING
         AIF   ('&STRING' EQ 'NORMAL').NORMAL
         AIF   ('&STRING' EQ 'BLINK').BLINK
         AIF   ('&STRING' EQ 'REVERSE').REVERSE
         AIF   ('&STRING' EQ 'USCORE').USCORE
.*             COLOURS
         AIF   ('&STRING' EQ 'BLUE').BLUE
         AIF   ('&STRING' EQ 'RED').RED
         AIF   ('&STRING' EQ 'PINK').PINK
         AIF   ('&STRING' EQ 'GREEN').GREEN
         AIF   ('&STRING' EQ 'TURQ').TURQ
         AIF   ('&STRING' EQ 'YELLOW').YELLOW
         AIF   ('&STRING' EQ 'WHITE').WHITE
.*             CONSTANTS
.*             IF THE OPERAND IS NONE OF THE ABOVE, IT IS
.*             PRESUMED TO BE ANY VALID 'DC' CONSTANT.
.DC      ANOP
&N       DC    &STRING
         AGO   .NEXT
.ESC     ANOP
&N       DC    X'27'               ESCAPE
         AGO   .NEXT
.GE      ANOP
&N       DC    X'08'               GRAPHICS ESCAPE
         AGO   .NEXT
.WRT     ANOP
&N       DC    X'F1'               WRITE
         AGO   .NEXT
.EW      ANOP
&N       DC    X'F5'               ERASE/WRITE
         AGO   .NEXT
.EWA     ANOP
&N       DC    X'7E'               ERASE/WRITE ALTERNATE
         AGO   .NEXT
.SBA     ANOP
&N       DC    X'11'               SET BUFFER ADDRESS
         AGO   .NEXT
.SF      ANOP
&N       DC    X'1D'               START FIELD
         AGO   .NEXT
.RTA     ANOP
&N       DC    X'3C'               REPEAT TO ADDRESS
         AGO   .NEXT
.IC      ANOP
&N       DC    X'13'               INSERT CURSOR
         AGO   .NEXT
.PT      ANOP
&N       DC    X'05'               PROGRAM TAB
         AGO   .NEXT
.EUA     ANOP
&N       DC    X'12'               ERASE UNPROTECTED TO ADDRESS
         AGO   .NEXT
.SA      ANOP
&N       DC    X'28'               SET ATTRIBUTE
         AGO   .NEXT
.SFE     ANOP
&N       DC    X'29'               START FIELD EXTENDED
         AGO   .NEXT
.MFA     ANOP
&N       DC    X'2C'               MODIFY FIELD ATTRIBUTES
         AGO   .NEXT
.UNPLO   ANOP
&N       DC    X'40'               UNPROTECTED NORMAL INTENSITY
         AGO   .NEXT
.UNPMD   ANOP
&N       DC    X'C4'               UNPROTECTED MEDIUM INTENSITY
         AGO   .NEXT
.UNPHI   ANOP
&N       DC    X'C8'               UNPROTECTED HIGH INTENSITY
         AGO   .NEXT
.UNPNP   ANOP
&N       DC    X'4C'               UNPROTECTED NO-DISPLAY
         AGO   .NEXT
.PROLO   ANOP
&N       DC    X'60'               PROTECTED NORMAL INTENSITY
         AGO   .NEXT
.PROLOS  ANOP
&N       DC    X'F0'               PROTECTED NORMAL INTENSITY SKIP
         AGO   .NEXT
.PROMD   ANOP
&N       DC    X'E4'               PROTECTED MEDIUM INTENSITY
         AGO   .NEXT
.PROMDS  ANOP
&N       DC    X'F4'               PROTECTED MEDIUM INTENSITY SKIP
         AGO   .NEXT
.PROHI   ANOP
&N       DC    X'E8'               PROTECTED HIGH INTENSITY
         AGO   .NEXT
.PROHIS  ANOP
&N       DC    X'F8'               PROTECTED HIGH INTENSITY SKIP
         AGO   .NEXT
.FIELD   ANOP
&N       DC    X'C0'               FIELD ATTRIBUTE
         AGO   .NEXT
.HILITE  ANOP
&N       DC    X'41'               EXTENDED HIGHLIGHTING
         AGO   .NEXT
.COLOUR  ANOP
&N       DC    X'42'               EXTENDED COLOUR
         AGO   .NEXT
.PGMSYM  ANOP
&N       DC    X'43'               PROGRAMMED SYMBOLS
         AGO   .NEXT
.NORMAL  ANOP
&N       DC    X'00'               CHARACTER ATTRIBUTE RESET (DEFAULT)
         AGO   .NEXT
.BLINK   ANOP
&N       DC    X'F1'               BLINK HIGHLIGHTING
         AGO   .NEXT
.REVERSE ANOP
&N       DC    X'F2'               REVERSE VIDEO HIGHLIGHTING
         AGO   .NEXT
.USCORE  ANOP
&N       DC    X'F4'               UNDERSCORE HIGHLIGHTING
         AGO   .NEXT
.BLUE    ANOP
&N       DC    X'F1'               BLUE COLOUR
         AGO   .NEXT
.RED     ANOP
&N       DC    X'F2'               RED COLOUR
         AGO   .NEXT
.PINK    ANOP
&N       DC    X'F3'               PINK COLOUR
         AGO   .NEXT
.GREEN   ANOP
&N       DC    X'F4'               GREEN COLOUR
         AGO   .NEXT
.TURQ    ANOP
&N       DC    X'F5'               TURQ COLOUR
         AGO   .NEXT
.YELLOW  ANOP
&N       DC    X'F6'               YELLOW COLOUR
         AGO   .NEXT
.WHITE   ANOP
&N       DC    X'F7'               WHITE COLOUR
         AGO   .NEXT
.**********************************************************************
.PAIR    ANOP
         AIF   (N'&SYSLIST(&AS) NE 2).PERR1
&NUMERIC SETB  (T'&SYSLIST(&AS,1) EQ 'N')
&INTEGER SETB  ('&SYSLIST(&AS,1)'(1,1) GE '0')
         AIF   (NOT &NUMERIC OR NOT &INTEGER).PERR2
&R       SETA  &SYSLIST(&AS,1)
&NUMERIC SETB  (T'&SYSLIST(&AS,2) EQ 'N')
&INTEGER SETB  ('&SYSLIST(&AS,2)'(1,1) GE '0')
         AIF   (NOT &NUMERIC OR NOT &INTEGER).PERR2
&C       SETA  &SYSLIST(&AS,2)
         AIF   (&R LT 1 OR &R GT 24).ROWERR
         AIF   (&C LT 1 OR &C GT 80).COLERR
&P       SETA  (&R-1)*80+&C-1
&Q       SETA  &P/64               QUOTIENT
&R       SETA  &P-&Q*64+1          REMAINDER+1
&Q       SETA  &Q+1                QUOTIENT+1
&N       DC    X'&T(&Q)&T(&R)'     ROW AND COLUMN
         AGO   .NEXT
.PERR1   MNOTE 4,'             &CS.) PARENS FOUND BUT NOT 2 NUMBERS'
         MEXIT
.PERR2   MNOTE 4,'             &CS.) NON NUMERIC ROW/COLUMN'
         MEXIT
.**********************************************************************
.ROWCOL  ANOP
         AIF   (&B).COL            BRANCH IF ROW HAS BEEN CAPTURED
&R       SETA  &SYSLIST(&AS)
&B       SETB  1 TRUE              SET ROW-HAS-BEEN-CAPTURED
         AGO   .NEXTR
.COL     ANOP
&C       SETA  &SYSLIST(&AS)
&B       SETB  0 FALSE             RESET SWITCH
         AIF   (&R LT 1 OR &R GT 24).ROWERR
         AIF   (&C LT 1 OR &C GT 80).COLERR
&P       SETA  (&R-1)*80+&C-1
&Q       SETA  &P/64               QUOTIENT
&R       SETA  &P-&Q*64+1          REMAINDER+1
&Q       SETA  &Q+1                QUOTIENT+1
&N       DC    X'&T(&Q)&T(&R)'     ROW AND COLUMN
         AGO   .NEXT
.ROWERR  MNOTE 4,'             &CS.) VALUE &R INVALID, MUST BE 1 TO 24'
         AGO   .NEXT
.COLERR  MNOTE 4,'             &CS.) VALUE &C INVALID, MUST BE 1 TO 80'
.NEXT    ANOP
&N       SETC  ''                  TURN OFF NAME
.NEXTR   ANOP
&AN      SETA  &AN-1
         AGO   .EACH
.EPILOG  ANOP
         MEND
**********************************************************************
         SAVE  (14,12)
         LR    11,15
         USING GE2,11
TPUTSCRN EQU   *
         TPUT  TMSG,TMSGLEN,NOEDIT
         TGET  BUFFER,80
*********MVC   READDATA(20),BUFFER
         CLC   BUFFER(8),=CL8'HEART'
         BNE   TESTDIAM
         MVC   FIVECOL(1),HEARTCOL
         MVI   FIVSUIT1,C'H'
         MVI   FIVSUIT2,C'H'
         B     NEWSCRN
TESTDIAM CLC   BUFFER(8),=CL8'DIAMOND'
         BNE   TESTCLUB
         MVC   FIVECOL(1),DIAMCOL
         MVI   FIVSUIT1,C'D'
         MVI   FIVSUIT2,C'D'
         B     NEWSCRN
TESTCLUB CLC   BUFFER(8),=CL8'CLUB'
         BNE   TESTSPDE
         MVC   FIVECOL(1),CLUBCOL
         MVI   FIVSUIT1,C'C'
         MVI   FIVSUIT2,C'C'
         B     NEWSCRN
TESTSPDE CLC   BUFFER(8),=CL8'SPADE'
         BNE   TESTEND
         MVC   FIVECOL(1),SPADECOL
         MVI   FIVSUIT1,C'S'
         MVI   FIVSUIT2,C'S'
         B     NEWSCRN
TESTEND  CLC   BUFFER(8),=CL8'END'
         BE    EXIT
NEWSCRN  EQU   *
         MVC   BUFFER(20),SPACES
         B     TPUTSCRN
         TPUT  TMSG2,TMSG2LEN,NOEDIT
         TGET  BUFFER,80
EXIT     RETURN (14,12),RC=(15)
TMSG     DC    X'F5'                 ERASE/WRITE
         DC    X'C7'                 WCC
* ACE
         DCS   SBA,(1,2)
         DC    X'2841F2',X'2842'
ACECOL   DC    X'F1'
         DC    CL7'A H    '
         DCS   SBA,(2,2)
         DC    CL7'       '
         DCS   SBA,(3,2)
         DC    CL7'  ACE  '
         DCS   SBA,(4,2)
         DC    CL7'       '
         DCS   SBA,(5,2)
         DC    CL7'       '
         DCS   SBA,(6,2)
         DC    CL7'    A H'
* FOUR
         DCS   SBA,(1,10)
         DC    X'2841F2',X'2842'
FOURCOL  DC    X'F2'
         DC    CL7'4 H    '
         DCS   SBA,(2,10)
         DC    CL7'       '
         DCS   SBA,(3,10)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(4,10)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(5,10)
         DC    CL7'       '
         DCS   SBA,(6,10)
         DC    CL7'    4 H'
* FIVE
         DCS   SBA,(1,18)
         DC    X'2841F2',X'2842'
FIVECOL  DC    X'F3'
         DC    CL2'5 '
FIVSUIT1 DC    CL1'H'
         DC    CL4' '
         DCS   SBA,(2,18)
         DC    CL7' '
         DCS   SBA,(3,18)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(4,18)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(5,18)
         DC    CL7' '
         DCS   SBA,(6,18)
         DC    CL6'    5 '
FIVSUIT2 DC    CL1'H'
         DC    X'284100',X'284200'
* SIX
         DCS   SBA,(1,26)
         DC    X'2841F2',X'2842'
SIXCOL   DC    X'F4'
         DC    CL7'6 H    '
         DCS   SBA,(2,26)
         DC    CL7'       '
         DCS   SBA,(3,26)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(4,26)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(5,26)
         DC    CL7'       '
         DCS   SBA,(6,26)
         DC    CL7'    6 H'
         DC    X'284100',X'284200'
* SEVEN
         DCS   SBA,(1,34)
         DC    X'2841F2',X'2842'
SEVENCOL DC    X'F5'
         DC    CL7'7 H    '
         DCS   SBA,(2,34)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(3,34)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(4,34)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(5,34)
         DC    CL7'       '
         DCS   SBA,(6,34)
         DC    CL7'    7 H'
         DC    X'284100',X'284200'
* EIGHT
         DCS   SBA,(1,42)
         DC    X'2841F2',X'2842'
EIGHTCOL DC    X'F6'
         DC    CL7'8 H    '
         DCS   SBA,(2,42)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(3,42)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(4,42)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(5,42)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(6,42)
         DC    CL7'    8 H'
         DC    X'284100',X'284200'
* NINE
         DCS   SBA,(1,50)
         DC    X'2841F2',X'2842'
NINECOL  DC    X'F7'
         DC    CL7'9 H    '
         DCS   SBA,(2,50)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(3,50)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(4,50)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(5,50)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(6,50)
         DC    CL7'    9 H'
         DC    X'284100',X'284200'
* TEN
         DCS   SBA,(1,58)
         DC    X'2841F2',X'2842'
TENCOL   DC    X'F1'
         DC    CL7'10 H   '
         DCS   SBA,(2,58)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(3,58)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(4,58)
         DC    C' ',X'08A3',C' ',X'08A3',C' ',X'08A3',C' '
         DCS   SBA,(5,58)
         DC    C' ',X'08A3',CL3' ',X'08A3',C' '
         DCS   SBA,(6,58)
         DC    CL7'   10 H'
         DC    X'284100',X'284200'
* JACK
         DCS   SBA,(1,66)
         DC    X'2841F2',X'2842'
JACKCOL  DC    X'F2'
         DC    CL7'J H    '
         DCS   SBA,(2,66)
         DC    CL7'       '
         DCS   SBA,(3,66)
         DC    CL7' KNAVE '
         DCS   SBA,(4,66)
         DC    CL7'       '
         DCS   SBA,(5,66)
         DC    CL7'       '
         DCS   SBA,(6,66)
         DC    CL7'    J H'
         DC    X'284100',X'284200'
* QUEEN
         DCS   SBA,(1,74)
         DC    X'2841F2',X'2842'
QUEENCOL DC    X'F3'
         DC    CL7'Q H    '
         DCS   SBA,(2,74)
         DC    CL7'       '
         DCS   SBA,(3,74)
         DC    CL7' QUEEN '
         DCS   SBA,(4,74)
         DC    CL7'       '
         DCS   SBA,(5,74)
         DC    CL7'       '
         DCS   SBA,(6,74)
         DC    CL7'    Q H'
         DC    X'284100',X'284200'
* KING
         DCS   SBA,(8,2)
         DC    X'2841F2',X'2842'
KINGCOL  DC    X'F4'
         DC    CL7'K H    '
         DCS   SBA,(9,2)
         DC    CL7'       '
         DCS   SBA,(10,2)
         DC    CL7' KING  '
         DCS   SBA,(11,2)
         DC    CL7'       '
         DCS   SBA,(12,2)
         DC    CL7'       '
         DCS   SBA,(13,2)
         DC    CL7'    K H'
         DC    X'284100',X'284200'
* JOKER
         DCS   SBA,(8,10)
         DC    X'2841F2'
         DC    X'2842F1',C' ',X'2842F2',C' ',X'2842F3',C' '
         DC    X'2842F4',C' ',X'2842F5',C' ',X'2842F6',C' '
         DC    X'2842F7',C' '
         DCS   SBA,(9,10)
         DC    X'2842F7',C' ',X'2842F1',C' ',X'2842F2',C' '
         DC    X'2842F3',C' ',X'2842F4',C' ',X'2842F5',C' '
         DC    X'2842F6',C' '
         DCS   SBA,(10,10)
         DC    X'2842F4'
         DC    X'284100'
         DC    X'0891',X'2842F7',CL5'JOKER',X'2842F4',X'0892'
         DC    X'2841F2'
         DCS   SBA,(11,10)
         DC    X'2842F6',C' ',X'2842F7',C' ',X'2842F1',C' '
         DC    X'2842F2',C' ',X'2842F3',C' ',X'2842F4',C' '
         DC    X'2842F5',C' '
         DCS   SBA,(12,10)
         DC    X'2842F5',C' ',X'2842F6',C' ',X'2842F7',C' '
         DC    X'2842F1',C' ',X'2842F2',C' ',X'2842F3',C' '
         DC    X'2842F4',C' '
         DCS   SBA,(13,10)
         DC    X'2842F4',C' ',X'2842F5',C' ',X'2842F6',C' '
         DC    X'2842F7',C' ',X'2842F1',C' ',X'2842F2',C' '
         DC    X'2842F3',C' '
         DC    X'284200'
         DC    X'284100'
*
         DC    X'2903C0C541F242F4'
         DCS   IC
         DC    CL20' '
         DC    X'1DE4'
*
TMSGLEN  EQU   *-TMSG
*
TMSG2    DC    X'F5'                 ERASE/WRITE
         DC    X'C7'                 WCC
READDATA DC    CL20' '               DATA
TMSG2LEN EQU   *-TMSG2
*
BUFFER   DC    CL150' '
SPACES   DC    CL150' '
*
HEARTCOL DC    X'F1'
DIAMCOL  DC    X'F2'
CLUBCOL  DC    X'F3'
SPADECOL DC    X'F4'
*
         END
