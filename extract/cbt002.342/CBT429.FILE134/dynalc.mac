***********************************************************************
*        USAGE -THIS MACRO MADE BE USED  MULTIPLE TIMES IN ONE        *
*              PROGRAM AND GENERATE UNIQUE LABELS VIA THE 'SUFFIX'    *
*              PARAMETER.  PRIOR TO ISSUING SVC 99 REGISTER 1 MUST    *
*              CONTAIN THE ADDRESS OF   THIS PARAMETER LIST.          *
*              EX. -      PARMLIB   DYNALC DSNAME=SYS1.PARMLIB        *
*                                   ... ANY OTHER CODE                *
*                                   LA  R1,PARMLIB                    *
*                                   SVC 99                            *
*                                   ... ANY OTHER CODE                *
*        DEFAULTS -THERE ARE NO DEFAULTS FOR ANY PARM.  THE ONLY      *
*              PARMETERS THAT WILL BE GENERATED FOR DYNAMIC           *
*              ALLOCATION ARE THE ONES THAT ARE SPECIFICALLY CODED.   *
*              THE TYPE OF CALL TO DYNAMIC ALLOCATION DEFAULTS TO     *
*              ALLOCATION.  BY CODING IN A VALUE FOR DEALLOC, THE     *
*              PARAMETERS WILL DEALLOCATE THE RESOURCE INSTEAD OF     *
*              ALLOCATING IT.                                         *
*                                                                     *
*        LABELS - LABELS HAVE BEEN PROVIDED FOR OFTEN USED FIELDS.    *
*              FOR SVC 99 RB POINTER, THE LABELS GENERATED ARE THE    *
*              IEFZB4D0 MACRO LABEL MINUS THE S99 PREFIX AND SUFFIXED *
*              BY A UNIQUE 3 BYTE VALUE (AUTOMATICALLY SUPPLIED OR AS *
*              SPECIFIED BY 'SUFFIX=XXX'.  FOR EACH TEXT UNIT FIELD,  *
*              THE LABELS GENERATED ARE THE IEFZB4D2 MACRO LABEL      *
*              MINUS THE DAL PREFIX AND SUFFIXED AS SPECIFIED ABOVE.  *
***********************************************************************
         MACRO
&NAME    DYNALC                                                        X
               &DSNAME=,       DATASET NAME               (1-44 BYTES) X
               &DDNAME=,       DDNAME                      (1-8 BYTES) X
               &MEMBER=,       MEMBER NAME/GDG NUMBER        "    "    X
               &STATUS=,       DATASET STATUS        (OLD/MOD/NEW/SHR) X
               &NDISP=,        DATASET NORMAL DISP   (KEEP/DELETE/ETC) X
               &CDISP=,        DATASET COND. DISP      "     "     "   X
               &TYPSP=,        TYPE SPACE            (CYL/TRK/BLKSIZE) X
               &PRIME=,        PRIMARY SPACE REQUIREMENT (ANY NUMERIC) X
               &SECND=,        SECONDARY SPACE REQUIREMENT      "      X
               &DIR=,          DIRECTORY BLOCKS OR INDEX SPACE  "      X
               &RLSE=,         RELEASE UNUSED SPACE        (ANY VALUE) X
               &SPFRM=,        SPACE FORM            (ALX/MXIG/CONTIG) X
               &ROUND=,        ROUND BLOCKS TO CYLINDERS   (ANY VALUE) X
               &VOLSER=,       VOLUME SERIAL               (1-6 BYTES) X
               &VOLCNT=,       VOLUME COUNT                    (1-255) X
               &UNIT=,         UNIT TYPE                   (1-8 BYTES) X
               &MSVGP=,        MSVGP GROUP                   "    "    X
               &SYSOUT=,       SYSOUT CLASS              (A-Z/0-9/ETC) X
               &SPGNM=,        SYSOUT PGM NAME             (1-8 BYTES) X
               &FORM=,         SYSOUT FORM NAME              "    "    X
               &OUTLIM=,       SYSOUT OUTPUT LIMIT       (ANY NUMERIC) X
               &FREE=,         FREE AT CLOSE                   (CLOSE) X
               &COPIES=,       SYSOUT NUMBER OF COPIES         (1-255) X
               &LABEL=,        LABEL TYPE           (SL/NL/AL/BLP/ETC) X
               &DSSEQ=,        DATASET SEQUENCE NUMBER   (TAPE FILE #) X
               &PASPR=,        PASSWORD PROTECTION               (R/W) X
               &EXPDT=,        EXPIRATION DATE                 (YYDDD) X
               &RETPD=,        RETENTION PERIOD          (ANY NUMERIC) X
               &DUMMY=,        DUMMY DATASET               (ANY VALUE) X
               &DCBDS=,        DSNAME OF MODEL DSCB           (DSNAME) X
               &DCBDD=,        DDNAME OF MODEL DSCB           (DDNAME) X
               &BLKSIZE=,      BLOCKSIZE                 (ANY NUMERIC) X
               &DEN=,          TAPE DENSITY                  (1/2/3/4) X
               &DSORG=,        DATASET ORG.         (PO/PS/DA/POU/ETC) X
               &EROPT=,        ERROR OPTIONS             (ABE/SKP/ACC) X
               &KEYLEN=,       KEY LENGTH                (ANY NUMERIC) X
               &LRECL=,        LOGICAL RECORD LENGTH          "        X
               &OPTCD=,        OPTION CODE                   (B/W/C/Z) X
               &RECFM=,        RECORD FORMAT       (F/FB/VB/VBA/U/ETC) X
               &PASSWRD=,      PASSWORD                    (1-8 BYTES) X
               &PERM=,         PERM ALLOC                  (ANY VALUE) X
               &RETDD=,        RETURN DDNAME                    "      X
               &RETDS=,        RETURN DSNAME                    "      X
               &RETVOL=,       RETURN VOLSER                    "      X
               &FUNC=,         FOR PUNCH OUTPUT INTERPRETING       (I) X
               &SUFFIX=,       UNIQUE SUFFIX FOR LABELS    (MAX LEN=3) X
               &DEALLOC=       FOR DEALLOCATION            (ANY VALUE)
         LCLA  &A1,&A2,&A3
         LCLC  &X,&NM
         AIF   (T'&SUFFIX EQ 'O').SETSFX
         AIF   (K'&SUFFIX GT 3).SFXERR
&X       SETC  '&SUFFIX'
         AGO   .CONT
.SFXERR  MNOTE 8,'SUFFIX=&SUFFIX LONGER THAN 3 BYTES, FIRST THREE USED'
&X       SETC  '&SUFFIX'(1,3)
         AGO   .CONT
.SETSFX  ANOP
&X       SETC  '&SYSNDX'(2,3)
.CONT    ANOP
         AIF   (T'&NAME NE 'O').SETRB
         MNOTE 8,'REQUIRED LABEL MISSING ON MACRO CALL'
.SETRB   ANOP
&NAME    DC    A(DYNRB&X+X'80000000') POINTER TO REQUEST BLOCK
         AIF   (T'&DEALLOC EQ 'O').ALOCCHK
DYNRB&X  DC    AL1(20,2,0,0)       LENGTH, DEALLOC VERB, FLAGS1
         AGO   .ERINCHK
.ALOCCHK ANOP
DYNRB&X  DC    AL1(20,1,0,0)       LENGTH, ALLOC VERB, FLAGS1
.ERINCHK ANOP
ERROR&X  DC    AL2(0)              ERROR CODE
INFO&X   DC    AL2(0)              INFORMATION CODE
TUPTR&X  DC    A(TXTPP&X),AL4(0,0) TEXT UNIT POINTER, RSVD, FLAGS2
&A1      SETA  1
         AIF   (T'&DDNAME EQ 'O').DSNCHK
         AIF   (K'&DDNAME GT 8).DDNERR
TS&X&A1  DC    XL2'01',AL2(1,8)    DDNAME KEY, NUM, PARMLEN
DDNAM&X  DC    CL8'&DDNAME'        DDNAME FIELD
&A1      SETA  &A1+1
         AGO   .DSNCHK
.DDNERR  MNOTE 8,'DDNAME=&DDNAME GREATER THAN 8 BYTES'
.DSNCHK  AIF   (T'&DSNAME EQ 'O').MEMCHK
         AIF   (K'&DSNAME GT 44).DSNERR
TS&X&A1  DC    XL2'02',AL2(1,44)   DSNAME KEY, NUM, PARMLEN
DSNAM&X  DC    CL44'&DSNAME'       DSNAME FIELD
&A1      SETA  &A1+1
         AGO   .MEMCHK
.DSNERR  MNOTE 8,'DSNAME=&DSNAME GREATER THAN 44 BYTES'
.MEMCHK  AIF   (T'&MEMBER EQ 'O').STATCHK
         AIF   (K'&MEMBER GT 8).MEMERR
TS&X&A1  DC    XL2'03',AL2(1,8)    MEMBER/GDG KEY, NUM, PARMLEN
MEMBR&X  DC    CL8'&MEMBER'        MEMBER NAME/GDG LEVEL FIELD
&A1      SETA  &A1+1
         AGO   .STATCHK
.MEMERR  MNOTE 8,'MEMBER=&MEMBER GREATER THAN 8 BYTES'
.STATCHK AIF   (T'&STATUS EQ 'O').NDSPCHK
TS&X&A1  DC    XL2'04',AL2(1,1)    DATASET STATUS KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&STATUS' NE 'OLD').STA1CHK  OLD = X'01'
STATS&X  DC    XL1'01'             CONSTANT FOR DISP=OLD
         AGO   .NDSPCHK
.STA1CHK AIF   ('&STATUS' NE 'MOD').STA2CHK  MOD = X'02'
STATS&X  DC    XL1'02'             CONSTANT FOR DISP=MOD
         AGO   .NDSPCHK
.STA2CHK AIF   ('&STATUS' NE 'NEW').STA3CHK  NEW = X'04'
STATS&X  DC    XL1'04'             CONSTANT FOR DISP=NEW
         AGO   .NDSPCHK
.STA3CHK AIF   ('&STATUS' NE 'SHR').STAERR   SHR = X'08'
STATS&X  DC    XL1'08'             CONSTANT FOR DISP=SHR
         AGO   .NDSPCHK
.STAERR  MNOTE 8,'STATUS=&STATUS INVALID'
.NDSPCHK AIF   (T'&NDISP EQ 'O').CDSPCHK
TS&X&A1  DC    XL2'05',AL2(1,1)    NORMAL DISP KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&NDISP' NE 'UNCATLG').NDS1CHK UNCATLG = X'01'
NDISP&X  DC    XL1'01'             CONSTANT FOR NORMAL DISP=UNCATLG
         AGO   .CDSPCHK
.NDS1CHK AIF   ('&NDISP' NE 'CATLG').NDS2CHK CATLG   = X'02'
NDISP&X  DC    XL1'02'             CONSTANT FOR NORMAL DISP=CATLG
         AGO   .CDSPCHK
.NDS2CHK AIF   ('&NDISP' NE 'DELETE').NDS3CHK DELETE = X'04'
NDISP&X  DC    XL1'04'             CONSTANT FOR NORMAL DISP=DELETE
         AGO   .CDSPCHK
.NDS3CHK AIF   ('&NDISP' NE 'KEEP').NDSERR   KEEP    = X'08'
NDISP&X  DC    XL1'08'             CONSTANT FOR NORMAL DISP=KEEP
         AGO   .CDSPCHK
.NDSERR  MNOTE 8,'NDISP=&NDISP INVALID'
.CDSPCHK AIF   (T'&CDISP EQ 'O').TSPCCHK
TS&X&A1  DC    XL2'06',AL2(1,1)    COND DISP KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&CDISP' NE 'UNCATLG').CDS1CHK UNCATLG = X'01'
CDISP&X  DC    XL1'01'             CONSTANT FOR COND DISP=UNCALTG
         AGO   .TSPCCHK
.CDS1CHK AIF   ('&CDISP' NE 'CATLG').CDS2CHK   CATLG   = X'02'
CDISP&X  DC    XL1'02'             CONSTANT FOR COND DISP=CATLG
         AGO   .TSPCCHK
.CDS2CHK AIF   ('&CDISP' NE 'DELETE').CDS3CHK  DELETE  = X'04'
CDISP&X  DC    XL1'04'             CONSTANT FOR COND DISP=DELETE
         AGO   .TSPCCHK
.CDS3CHK AIF   ('&CDISP' NE 'KEEP').CDSERR     KEEP    = X'08'
CDISP&X  DC    XL1'08'             CONSTANT FOR COND DISP=KEEP
         AGO   .TSPCCHK
.CDSERR  MNOTE 8,'CDISP=&CDISP INVALID'
.TSPCCHK AIF   (T'&TYPSP EQ 'O').PSPCCHK
         AIF   ('&TYPSP' NE 'TRK').TSP1CHK  IF TYPE SPACE SPECIFICATION
TS&X&A1  DC    XL2'07',AL2(0)      TRACK SPACE KEY, NUM
&A1      SETA  &A1+1
         AGO   .PSPCCHK
.TSP1CHK AIF   ('&TYPSP' NE 'CYL').TSP2CHK  NOT TRK OR CYL THEN
TS&X&A1  DC    XL2'08',AL2(0)      CYLINDER SPACE KEY, NUM
&A1      SETA  &A1+1
         AGO   .PSPCCHK
.TSP2CHK AIF   (T'&TYPSP NE 'N').TYPERR
&A3      SETA  &TYPSP
         AIF   (&A3 GT 32768).TYPERR
TS&X&A1  DC    XL2'09',AL2(1,3)    BLOCK SPACE KEY, NUM, PARMLEN
BLKLN&X  DC    AL3(&TYPSP)         AVG BLOCK LENGTH FIELD
&A1      SETA  &A1+1
         AGO   .PSPCCHK
.TYPERR  MNOTE 8,'TYPSP=&TYPSP INVALID OR GREATER THAN 32768'
.PSPCCHK AIF   (T'&PRIME EQ 'O').DIRCCHK
         AIF   (T'&PRIME NE 'N').PSPCERR
TS&X&A1  DC    XL2'0A',AL2(1,3)    PRIME SPACE KEY, NUM, PARMLEN
PRIME&X  DC    AL3(&PRIME)         PRIMARY SPACE FIELD
&A1      SETA  &A1+1
         AGO   .SSPCCHK
.PSPCERR MNOTE 8,'PRIME=&PRIME INVALID'
.SSPCCHK AIF   (T'&SECND EQ 'O').DIRCCHK
         AIF   (T'&SECND NE 'N').SSPCERR
TS&X&A1  DC    XL2'0B',AL2(1,3)    SECONDARY SPACE, NUM, PARMLEN
SECND&X  DC    AL3(&SECND)         SECONDARY SPACE FIELD
&A1      SETA  &A1+1
         AGO   .DIRCCHK
.SSPCERR MNOTE 8,'SECND=&SECND INVALID'
.DIRCCHK AIF   (T'&DIR EQ 'O').RLSECHK
         AIF   (T'&DIR NE 'N').DIRCERR
TS&X&A1  DC    XL2'0C',AL2(1,3)    DIR SPACE KEY, NUM, PARMLEN
DIR&X    DC    AL3(&DIR)           DIR SPACE FIELD
&A1      SETA  &A1+1
         AGO   .RLSECHK
.DIRCERR MNOTE 8,'DIR=&DIR INVALID'
.RLSECHK AIF   (T'&RLSE EQ 'O').FMSPCHK
TS&X&A1  DC    XL2'0D',AL2(0)      RELEASE SPACE KEY, NUM
&A1      SETA  &A1+1
.FMSPCHK AIF   (T'&SPFRM EQ 'O').RNDCHK
TS&X&A1  DC    XL2'0E',AL2(1,1)    SPACE FORM KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&SPFRM' NE 'ALX').FMS1CHK
SPFRM&X  DC    XL1'02'             ALX SPACE FORM FIELD
         AGO   .RNDCHK
.FMS1CHK AIF   ('&SPFRM' NE 'MXIG').FMS2CHK
SPFRM&X  DC    XL1'04'             MXIG SPACE FORM FIELD
         AGO   .RNDCHK
.FMS2CHK AIF   ('&SPFRM' NE 'CONTIG').FMSERR
SPFRM&X  DC    XL1'02'             CONTIG SPACE FORM FIELD
         AGO   .RNDCHK
.FMSERR  ANOP
         MNOTE 8,'SPFRM=&SPFRM INVALID'
.RNDCHK  AIF   (T'&ROUND EQ 'O').VSERCHK
TS&X&A1  DC    XL2'0F',AL2(0)      ROUND KEY, NUM
&A1      SETA  &A1+1
.VSERCHK AIF   (T'&VOLSER EQ 'O').VLCNCHK
         AIF   (K'&VOLSER GT 6).VLSRERR
TS&X&A1  DC    XL2'10',AL2(1,6)    VOLSER KEY, NUM, PARMLEN
VLSER&X  DC    CL6'&VOLSER'        VOLUME SERIAL FIELD
&A1      SETA  &A1+1
         AGO   .VLCNCHK
.VLSRERR MNOTE 8,'VOLSER=&VOLSER GREATER THAN 6 BYTES'
.VLCNCHK AIF   (T'&VOLCNT EQ 'O').UNITCHK
         AIF   (T'&VOLCNT NE 'N').VLCERR
&A3      SETA  &VOLCNT
         AIF   (&A3 GT 255).VLCERR
TS&X&A1  DC    XL2'13',AL2(1,1)    VOLUME COUNT KEY, NUM, PARMLEN
VLCNT&X  DC    AL1(&VOLCNT)        VOLUME COUNT FIELD
&A1      SETA  &A1+1
         AGO   .UNITCHK
.VLCERR  MNOTE 8,'VOLCNT=&VOLCNT IS INVALID OR GREATER THAN 255'
.UNITCHK AIF   (T'&UNIT EQ 'O').SCLSCHK
TS&X&A1  DC    XL2'15',AL2(1,8)    UNIT TYPE KEY, NUM, PARMLEN
UNIT&X   DC    CL8'&UNIT'          UNIT TYPE FIELD
&A1      SETA  &A1+1
.SCLSCHK AIF   (T'&SYSOUT EQ 'O').SYSPCHK
TS&X&A1  DC    XL2'18',AL2(1,1)    SYSOUT CLASS KEY, NUM, PARMLEN
SYSOU&X  DC    CL1'&SYSOUT'        SYSOUT CLASS FIELD
&A1      SETA  &A1+1
.SYSPCHK AIF   (T'&SPGNM EQ 'O').FORMCHK
         AIF   (K'&SPGNM GT 8).SYSPERR
TS&X&A1  DC    XL2'19',AL2(1,8)    SYSOUT PGM KEY, NUM, PARMLEN
SPGNM&X  DC    CL8'&SPGNM'         SYSOUT PGM FIELD
&A1      SETA  &A1+1
         AGO   .FORMCHK
.SYSPERR MNOTE 8,'SPGNM=&SPGNM IS GREATER THAN 8 BYTES'
.FORMCHK AIF   (T'&FORM EQ 'O').OUTLCHK
         AIF   (K'&FORM GT 4).FORMERR
TS&X&A1  DC    XL2'1A',AL2(1,4)    SYSOUT FORM KEY, NUM, PARMLEN
FMNO&X   DC    CL4'&FORM'          SYSOUT FORM NUMBER FIELD
&A1      SETA  &A1+1
         AGO   .OUTLCHK
.FORMERR MNOTE 8,'FORM=&FORM IS GREATER THAN 4 BYTES'
.OUTLCHK AIF   (T'&OUTLIM EQ 'O').FREECHK
TS&X&A1  DC    XL2'1B',AL2(1,3)    OUTLIM KEY, NUM, PARMLEN
OUTLM&X  DC    AL3(&OUTLIM)        OUTLIM PGM FIELD
&A1      SETA  &A1+1
.FREECHK AIF   (T'&FREE EQ 'O').COPYCHK
         AIF   ('&FREE' NE 'CLOSE').FREERR
TS&X&A1  DC    XL2'1C',AL2(0)      FREE=CLOSE KEY, NUM
&A1      SETA  &A1+1               ALL ELSE WILL GENERATE MNOTE
         AGO   .COPYCHK
.FREERR  MNOTE 8,'FREE=&FREE INVALID'
.COPYCHK AIF   (T'&COPIES EQ 'O').LABLCHK
&A3      SETA  &COPIES
         AIF   (&A3 GT 255).COPYERR
TS&X&A1  DC    XL2'1D',AL2(1,1)    SYSOUT COPIES KEY, NUM, PARMLEN
COPYS&X  DC    AL1(&COPIES)        SYSOUT COPIES FIELD
&A1      SETA  &A1+1
         AGO   .LABLCHK
.COPYERR MNOTE 8,'COPIES=&COPIES GREATER THAN 255'
.LABLCHK AIF   (T'&LABEL EQ 'O').DSSQCHK
TS&X&A1  DC    XL2'1E',AL2(1,1)    LABEL TYPE KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&LABEL' NE 'NL').LAB1CHK NL  = X'01'
LABEL&X  DC    XL1'01'             LABEL = NL
         AGO   .DSSQCHK
.LAB1CHK AIF   ('&LABEL' NE 'SL').LAB2CHK SL  = X'02'
LABEL&X  DC    XL1'2'              LABEL = SL
         AGO   .DSSQCHK
.LAB2CHK AIF   ('&LABEL' NE 'NSL').LAB3CHK NSL = X'04'
LABEL&X  DC    XL1'04'             LABEL = NSL
         AGO   .DSSQCHK
.LAB3CHK AIF   ('&LABEL' NE 'SUL').LAB4CHK SUL = X'0A'
LABEL&X  DC    XL1'0A'             LABEL = SUL
         AGO   .DSSQCHK
.LAB4CHK AIF   ('&LABEL' NE 'BLP').LAB5CHK BLP = X'10'
LABEL&X  DC    XL1'10'             LABEL = BLP
         AGO   .DSSQCHK
.LAB5CHK AIF   ('&LABEL' NE 'LTM').LAB6CHK LTM = X'21'
LABEL&X  DC    XL1'21'             LABEL = LTM
         AGO   .DSSQCHK
.LAB6CHK AIF   ('&LABEL' NE 'AL').LAB7CHK AL  = X'40'
LABEL&X  DC    XL1'40'             LABEL = AL
         AGO   .DSSQCHK
.LAB7CHK AIF   ('&LABEL' NE 'AUL').LABERR  AUL = X'48'
LABEL&X  DC    XL1'48'             LABEL = AUL
         AGO   .DSSQCHK
.LABERR  MNOTE 8,'LABEL=&LABEL INVALID'
.DSSQCHK AIF   (T'&DSSEQ EQ 'O').PASSCHK
         AIF   (T'&DSSEQ NE 'N').DSSQERR
         AIF   (&DSSEQ GT 9999).DSSQERR
TS&X&A1  DC    XL2'1F',AL2(1,2)    DSN SEQUNECE KEY, NUM, PARMLEN
DSSEQ&X  DC    AL2(&DSSEQ)         DSN SEQUENCE FIELD
&A1      SETA  &A1+1
         AGO   .PASSCHK
.DSSQERR MNOTE 8,'DSSEQ=&DSSEQ INVALID OR OUT OF RANGE'
.PASSCHK AIF   (T'&PASPR EQ 'O').EXPDCHK
         AIF   ('&PASPR' NE 'R' AND 'PASPR' NE 'W').PASPERR
TS&X&A1  DC    XL2'20',AL2(1,1)    PASSWORD PROTECT KEY, NUM, PARMLEN
         AIF   ('&PASPR' EQ 'R').PASSRD
PASPR&X  DC    X'30'               WRITE PROTECTION
&A1      SETA  &A1+1
         AGO   .EXPDCHK
.PASSRD  ANOP
PASPR&X  DC    X'10'               READ/WRITE PROTECTION
&A1      SETA  &A1+1
         AGO   .EXPDCHK
.PASPERR MNOTE 8,'PASPR=&PASPR INVALID-SHOULD BE "R" OR "W"'
.EXPDCHK AIF   (T'&EXPDT EQ 'O').RETPCHK
         AIF   (K'&EXPDT GT 5).EXPDERR
TS&X&A1  DC    XL2'22',AL2(1,5)    EXPIRATION DATE KEY, NUM, PARMLEN
EXPDT&X  DC    CL5'&EXPDT'         EXPIRATION DATE FIELD
&A1      SETA  &A1+1
         AGO   .RETPCHK
.EXPDERR MNOTE 8,'EXPDT=&EXPDT GREATER THAN 5 BYTES'
.RETPCHK AIF   (T'&RETPD EQ 'O').DUMMCHK
         AIF   (T'&RETPD NE 'N').RETPERR
&A3      SETA  &RETPD
         AIF   (&RETPD GT 9999).RETPERR
TS&X&A1  DC    XL2'23',AL2(1,2)    RETENTION PERIOD KEY, NUM, PARMLEN
RETPD&X  DC    AL2(&RETPD)         RETENTION PERIOD FIELD
&A1      SETA  &A1+1
         AGO   .DUMMCHK
.RETPERR MNOTE 8,'RETPD=&RETPD NOT NUMERIC OR GREATER THAN 9999'
.DUMMCHK AIF   (T'&DUMMY EQ 'O').DCBSCHK
TS&X&A1  DC    XL2'24',AL2(0)      DUMMY DATASET KEY, NUM
&A1      SETA  &A1+1
.DCBSCHK AIF   (T'&DCBDS EQ 'O').DCBDCHK
         AIF   (K'&DCBDS GT 44).DCBSERR
TS&X&A1  DC    XL2'2C',AL2(1,44)   DCB REFERENCE DSN KEY, NUM, PARMLEN
DCBDS&X  DC    CL44'&DCBDS'        DCB REFERENCE DSNAME FIELD
&A1      SETA  &A1+1
         AGO   .DCBDCHK
.DCBSERR MNOTE 8,'DCBDS=&DCBDS GREATER THAN 44 BYTES'
.DCBDCHK AIF   (T'&DCBDD EQ 'O').BLKSCHK
         AIF   (K'&DCBDS GT 8).DCBDERR
TS&X&A1  DC    XL2'2D',AL2(1,8)    DCB REFERENCE DDN KEY, NUM, PARMLEN
DCBDS&X  DC    CL8'&DCBDD'         DCB REFERENCE DDNAME FIELD
&A1      SETA  &A1+1
         AGO   .BLKSCHK
.DCBDERR MNOTE 8,'DCBDD=&DCBDD GREATER THAN 8 BYTES'
.BLKSCHK AIF   (T'&BLKSIZE EQ 'O').DENSCHK
         AIF   (T'&BLKSIZE NE 'N').BLKSERR
&A3      SETA  &BLKSIZE
         AIF   (&A3 GT 32768).BLKSERR
TS&X&A1  DC    XL2'30',AL2(1,2)    BLOCKSIZE KEY, NUM, PARMLEN
BLKSZ&X  DC    AL2(&BLKSIZE)       BLOCKSIZE FIELD
&A1      SETA  &A1+1
         AGO   .DENSCHK
.BLKSERR MNOTE 8,'BLKSIZE=&BLKSIZE INVALID OR GREATER THAN 32768'
.DENSCHK AIF   (T'&DEN EQ 'O').DSORCHK
TS&X&A1  DC    XL2'3B',AL2(1,1)    DENSITY KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&DEN' NE '4').DEN1CHK DEN4 = X'D3'
DEN&X    DC    XL1'D3'             DEN = 4
         AGO   .DSORCHK
.DEN1CHK AIF   ('&DEN' NE '3').DEN2CHK DEN3 = X'C3'
DEN&X    DC    XL1'C3'             DEN = 3
         AGO   .DSORCHK
.DEN2CHK AIF   ('&DEN' NE '2').DEN3CHK DEN2 = X'83'
DEN&X    DC    XL1'83'             DEN = 2
         AGO   .DSORCHK
.DEN3CHK AIF   ('&DEN' NE '1').DENERR  DEN1 = X'43'
DEN&X    DC    XL1'43'             DEN = 1
         AGO   .DSORCHK
.DENERR  MNOTE 8,'DEN=&DEN INVALID'
.DSORCHK AIF   (T'&DSORG EQ 'O').EROPCHK
TS&X&A1  DC    XL2'3C',AL2(1,2)    DSORG KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&DSORG' NE 'PO').DSO1CHK DSORG PO = X'0200'
DSORG&X  DC    XL2'0200'           DSORG = PO
         AGO   .EROPCHK
.DSO1CHK AIF   ('&DSORG' NE 'PS').DSO2CHK DSORG PS = X'4000'
DSORG&X  DC    XL2'4000'           DSORG = PS
         AGO   .EROPCHK
.DSO2CHK AIF   ('&DSORG' NE 'DA').DSO3CHK DSORG DA = X'2000'
DSORG&X  DC    XL2'2000'           DSORG = DA
         AGO   .EROPCHK
.DSO3CHK AIF   ('&DSORG' NE 'VS').DSO4CHK DSORG VS = X'0008'
DSORG&X  DC    XL2'0008'           DSORG = VS
         AGO   .EROPCHK
.DSO4CHK AIF   ('&DSORG' NE 'POU').DSO5CHK DSORG POU = X'0300'
DSORG&X  DC    XL2'0300'           DSORG = POU
         AGO   .EROPCHK
.DSO5CHK AIF   ('&DSORG' NE 'PSU').DSO6CHK DSORG PSU = X'4100'
DSORG&X  DC    XL2'4100'           DSORG = PSU
         AGO   .EROPCHK
.DSO6CHK AIF   ('&DSORG' NE 'DAU').DSOERR  DSORG DAU = X'2100'
DSORG&X  DC    XL2'2100'           DSORG = DAU
         AGO   .EROPCHK
.DSOERR  MNOTE 8,'DSORG=&DSORG INVALID'
.EROPCHK AIF   (T'&EROPT EQ 'O').KEYLCHK
TS&X&A1  DC    XL2'3D',AL2(1,1)    EROPT KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&EROPT' NE 'ABE').ERO1CHK EROPT ABE = X'20'
EROPT&X  DC    XL1'20'             EROPT = ABE
         AGO   .KEYLCHK
.ERO1CHK AIF   ('&EROPT' NE 'SKP').ERO2CHK EROPT SKP = X'40'
EROPT&X  DC    XL1'40'             EROPT = SKP
         AGO   .KEYLCHK
.ERO2CHK AIF   ('&EROPT' NE 'ACC').EROERR  EROPT ACC = X'80'
EROPT&X  DC    XL1'80'             EROPT = ACC
         AGO   .KEYLCHK
.EROERR  MNOTE 8,'EROPT=&EROPT INVALID'
.KEYLCHK AIF   (T'&KEYLEN EQ 'O').LRECCHK
TS&X&A1  DC    XL2'40',AL2(1,1)    KEYLEN KEY, NUM, PARMLEN
KYLEN&X  DC    AL1(&KEYLEN)        KEYLEN FIELD
&A1      SETA  &A1+1
.LRECCHK AIF   (T'&LRECL EQ 'O').OPTCCHK
TS&X&A1  DC    XL2'42',AL2(1,2)    LRECL KEY, NUM, PARMLEN
LRECL&X  DC    AL2(&LRECL)         LRECL FIELD
&A1      SETA  &A1+1
.OPTCCHK AIF   (T'&OPTCD EQ 'O').RECFCHK
TS&X&A1  DC    XL2'45',AL2(1,1)    OPTCD KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&OPTCD' NE 'B').OPT1CHK OPTCD B = X'40'
OPTCD&X  DC    XL1'40'             OPTCD = B
         AGO   .RECFCHK
.OPT1CHK AIF   ('&OPTCD' NE 'W').OPT2CHK OPTCD W = X'80'
OPTCD&X  DC    XL1'80'             OPTCD = W
         AGO   .RECFCHK
.OPT2CHK AIF   ('&OPTCD' NE 'C').OPT3CHK OPTCD C = X'20'
OPTCD&X  DC    XL1'20'             OPTCD = C
         AGO   .RECFCHK
.OPT3CHK AIF   ('&OPTCD' NE 'Z').OPTERR  OPTCD Z = X'04'
OPTCD&X  DC    XL1'04'             OPTCD = Z
         AGO   .RECFCHK
.OPTERR  MNOTE 8,'OPTCD=&OPTCD INVALID'
.RECFCHK AIF   (T'&RECFM EQ 'O').PASWCHK
TS&X&A1  DC    XL2'49',AL2(1,1)    RECFM KEY, NUM, PARMLEN
&A1      SETA  &A1+1
         AIF   ('&RECFM' NE 'FBA').REC1CHK RECFM FBA = X'94'
RECFM&X  DC    XL1'94'             RECFM = FBA
         AGO   .PASWCHK
.REC1CHK AIF   ('&RECFM' NE 'VBA').REC2CHK RECFM VBA = X'54'
RECFM&X  DC    XL1'54'             RECFM = VBA
         AGO   .PASWCHK
.REC2CHK AIF   ('&RECFM' NE 'FB').REC3CHK RECFM FB = X'90'
RECFM&X  DC    XL1'90'             RECFM = FB
         AGO   .PASWCHK
.REC3CHK AIF   ('&RECFM' NE 'VB').REC4CHK RECFM VB = X'50'
RECFM&X  DC    XL1'50'             RECFM = VB
         AGO   .PASWCHK
.REC4CHK AIF   ('&RECFM' NE 'F').REC5CHK RECFM F = X'80'
RECFM&X  DC    XL1'80'             RECFM = F
         AGO   .PASWCHK
.REC5CHK AIF   ('&RECFM' NE 'V').REC6CHK RECFM V = X'40'
RECFM&X  DC    XL1'40'             RECFM = V
         AGO   .PASWCHK
.REC6CHK AIF   ('&RECFM' NE 'FBS').REC7CHK RECFM FBS = X'98'
RECFM&X  DC    XL1'98'             RECFM = FBS
         AGO   .PASWCHK
.REC7CHK AIF   ('&RECFM' NE 'VBS').REC8CHK RECFM VBS = X'58'
RECFM&X  DC    XL1'58'             RECFM = VBS
         AGO   .PASWCHK
.REC8CHK AIF   ('&RECFM' NE 'FA').REC9CHK RECFM FA = X'84'
RECFM&X  DC    XL1'84'             RECFM = FA
         AGO   .PASWCHK
.REC9CHK AIF   ('&RECFM' NE 'VA').RECACHK RECFM VA = X'44'
RECFM&X  DC    XL1'44'             RECFM = VA
         AGO   .PASWCHK
.RECACHK AIF   ('&RECFM' NE 'FBM').RECBCHK RECFM FBM = X'92'
RECFM&X  DC    XL1'92'             RECFM = FBM
         AGO   .PASWCHK
.RECBCHK AIF   ('&RECFM' NE 'VBM').RECCCHK RECFM VBM = X'52'
RECFM&X  DC    XL1'52'             RECFM = VBM
         AGO   .PASWCHK
.RECCCHK AIF   ('&RECFM' NE 'FBSA').RECDCHK RECFM FBSA = X'9C'
RECFM&X  DC    XL1'9C'             RECFM = FBSA
         AGO   .PASWCHK
.RECDCHK AIF   ('&RECFM' NE 'U').RECFERR RECFM U = X'C0'
RECFM&X  DC    XL1'C0'             RECFM = U
         AGO   .PASWCHK
.RECFERR MNOTE 8,'RECFM=&RECFM INVALID'
.PASWCHK AIF   (T'&PASSWRD EQ 'O').PERMCHK
         AIF   (K'&PASSWRD GT 8).PASWERR
TS&X&A1  DC    XL2'50',AL2(1,8)    PASSWORD KEY, NUM, PARMLEN
PASSW&X  DC    CL8'&PASSWRD'       PASSWORD
&A1      SETA  &A1+1
         AGO   .PERMCHK
.PASWERR MNOTE 8,'PASSWRD=&PASSWRD GREATER THAN 8 BYTES'
.PERMCHK AIF   (T'&PERM EQ 'O').RTDDCHK
TS&X&A1  DC    XL2'52',AL2(0)      PERM ALLOC KEY, NUM
&A1      SETA  &A1+1
.RTDDCHK AIF   (T'&RETDD EQ 'O').RTDSCHK
TS&X&A1  DC    XL2'55',AL2(1,8)    RETURN DDNAME, NUM, PARMLEN
RTDDN&X  DC    CL8' '              RETURNED DDNAME
&A1      SETA  &A1+1
.RTDSCHK AIF   (T'&RETDS EQ 'O').FUNCCHK
TS&X&A1  DC    XL2'56',AL2(1,44)   RETURN DSNAME, NUM, PARMLEN
RTDSN&X  DC    CL44' '             RETURNED DSNAME
&A1      SETA  &A1+1
.FUNCCHK AIF   (T'&FUNC EQ 'O').RTVLCHK
         AIF   ('&FUNC' NE 'I').FUNCERR
TS&X&A1  DC    XL2'5A',AL2(1,1)    FUNCTION KEY, NUM, PARMLEN
FUNC&X   DC    XL1'80'             INTERPRET FUNCTION FIELD
&A1      SETA  &A1+1
         AGO   .RTVLCHK
.FUNCERR MNOTE 8,'FUNC=&FUNC NOT SUPPORTED BY MACRO'
.RTVLCHK AIF   (T'&RETVOL EQ 'O').MSVGCHK
TS&X&A1  DC    XL2'5D',AL2(1,6)    RETURN VOLSER, NUM, PARMLEN
RTVOL&X  DC    CL6' '              RETURNED VOLSER
&A1      SETA  &A1+1
.MSVGCHK AIF   (T'&MSVGP EQ 'O').TUPLGEN
TS&X&A1  DC    XL2'5E',AL2(1,8)    MSVGP KEY, NUM, PARMLEN
MSVGP&X  DC    CL8'&MSVGP'         MSVGP FIELD
&A1      SETA  &A1+1
.TUPLGEN ANOP
&A2      SETA  1
&A1      SETA  &A1-1 BB
         AIF   (&A1 GE 1).GENOK BB
         MNOTE 8,'NO TEXT UNIT POINTERS WERE GENERATED' BB
         MEXIT BB
.GENOK   ANOP BB
&NM      SETC  'TXTPP&X'
.TULOOP  AIF   (&A2 EQ &A1).EOFGEN
&NM      DC    A(TS&X&A2)          TEXT UNIT POINTER
&NM      SETC  ' '
&A2      SETA  &A2+1
         AGO   .TULOOP
.EOFGEN  AIF   (&A1 NE 1).SKIPCLR
&NM      SETC  'TXTPP&X'
.SKIPCLR ANOP
&NM      DC    A(TS&X&A2+X'80000000') LAST TEXT UNIT POINTER
         MEND
