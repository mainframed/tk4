         TITLE 'SKJ$LC03 - $LISTC/$SPACE REPORT ROUTINE'
SKJ$LC03 START 0
         EJECT
         SKJ$LCPD
         EJECT
         IKJEFFMT MTDSECT=YES
         EJECT
         CVT   DSECT=YES
         EJECT
***********************************************************************
*                                                                     *
*  EQUATES                                                            *
*                                                                     *
***********************************************************************
         SPACE 1
R1       EQU   1                  PARAMETER LIST ADDRESS REGISTER
R2       EQU   2                  WORK REGISTER
R3       EQU   3                  WORK REGISTER
R4       EQU   4                  WORK REGISTER
R5       EQU   5                  WORK REGISTER
R6       EQU   6                  WORK REGISTER
R7       EQU   7                  WORK REGISTER
R8       EQU   8                  WORK REGISTER
R9       EQU   9                  WORK REGISTER
R10      EQU   10                 WORK REGISTER
R11      EQU   11                 COMMON AREA BASE REGISTER
R12      EQU   12                 CSECT BASE REGISTER
R13      EQU   13                 SAVE REGISTER
R14      EQU   14                 LINK REGISTER
R15      EQU   15                 ENTRY POINT AND RETURN CODE REGISTER
         SPACE 1
BLANK    EQU   C' '
QUOTE    EQU   C''''
CTGTALIN EQU   C'A'               NON-VSAM CATALOG ENTRY
CTGTDATA EQU   C'D'               VSAM DATA SET ENTRY
CTGTINDX EQU   C'I'               VSAM INDEX ENTRY
CTGTUCAT EQU   C'U'               VSAM USERCATALOG ENTRY
CTGTMCAT EQU   C'0'               VSAM MASTERCATALOG ENTRY
CTGCVOL  EQU   X'80'              CVOL SPECIFIED IN CAMLST LOCATE
DADEV    EQU   X'20'              UCBTYP DIRECT ACCESS DEVICE TYPE FLAG
IS       EQU   X'80'              INDEXED SEQUENTIAL ORGANIZATION FLAG
PS       EQU   X'40'              PHYSICAL SEQUENTIAL ORGANIZATION FLAG
DA       EQU   X'20'              DIRECT ORGANIZATION FLAG
PO       EQU   X'02'              PARTITIONED ORGANIZATION FLAG
VS       EQU   X'08'              VSAM ORGANIZATION FLAG
HEXF0    EQU   X'F0'              MASK FOR PRINTABLE SIGN ZONE
MTMASK   EQU   X'81'              MTPL INSERT MASK
C6       EQU   6                  LENGTH OF VOLUME SERIAL INSERT
C44      EQU   44                 LENGTH OF DATA SET NAME INSERT
         EJECT
***********************************************************************
*                                                                     *
*  HOUSEKEEPING                                                       *
*                                                                     *
***********************************************************************
         SPACE 1
SKJ$LC03 CSECT
SKJ$LC03 AMODE 31
SKJ$LC03 RMODE 24
         BC    15,14(,R15)
         DC    X'08'
         DC    CL8'SKJ$LC03'
         DS    0H
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15
         USING SKJ$LC03,R12            ESTABLISH CSECT BASE REGISTER
         ST    R13,SAVE+4
         LR    R2,R13
         LA    R13,SAVE                ESTABLISH LOCAL SAVE AREA
         ST    R13,8(,R2)
         LR    R2,R1                   SAVE PARAMETER LIST ADDRESS
         L     R11,0(,R2)              PICK UP ADDRESS OF COMMON AREA
         USING SKJ$LCPD,R11            ESTABLISH COMMON AREA BASE
         USING MTDSECTD,R1             EST BASE FOR IKJEFF02 PARM LIST
         SPACE 1
***********************************************************************
*                                                                     *
*  WRITE REPORT HEADING                                               *
*                                                                     *
***********************************************************************
         SPACE 1
         TM    $LCFLGS1,$LCSPFF        $LCSPF ENTRY?
         BZ    NOTSPF                  NO  - WRITE HEADINGS IF REQUIRED
         LA    R2,$LCTABL              ADDRESS OF ISPF TABLE NAME
         ST    R2,ISPPARM+4            STORE IN ISPLINK PARM LIST
         MVI   ISPPARM+4,X'80'         INDICATE FINAL ARGUMENT
         B     START                   BYPASS WRITING HEADINGS
NOTSPF   TM    $LCFLGS1,$LCVOL         $LISTC ONLY ENTRY?
         BZ    START                   YES - BYPASS WRITING HEADINGS
         TM    $LCFLGS1,$LCLISTC       $LISTC V ENTRY?
         BO    PREPLCV                 YES - BYPASS FIRST HEADING
         L     R10,$SPINS+16           LOAD HEADING1 INSERT ADDRESS
         BAL   R14,$WRITE              WRITE FIRST HEADING
         LM    R8,R10,$SPINS           LOAD $SPACE INSERT ADDRESSES
         TM    $LCFLGS2,$LCPRINT       $SPACE PRINT REQUEST?
         BO    PUTHEAD                 YES - COMPLETE SECOND HEADING
         L     R10,$SPINS+12           NO  - ABRIDGED SECOND HEADING
         B     PUTHEAD                 GO TO WRITE SECOND HEADING
         SPACE 1
PREPLCV  LM    R8,R10,$LCVINS          LOAD $LISTC V INSERT ADDRESSES
PUTHEAD  BAL   R14,$WRITE              WRITE SECOND HEADING
         STM   R8,R9,INSAD1            SAVE INSERT ADDRESSES
         SPACE 1
***********************************************************************
*                                                                     *
*  INITIALIZATIONS                                                    *
*                                                                     *
***********************************************************************
         SPACE 1
START    L     R10,INSAD1              SET NORMAL INSERT ADDRESS
         L     R2,$LCCTGWA             ADDRESS OF CATALOG WORK AREA
         L     R3,4(,R2)               DATA LENGTH
         LA    R3,0(R2,R3)             ADDRESS OF END OF WORK AREA
         LA    R2,8(,R2)               ADDRESS OF CATALOG ENTRY
         CLC   1(9,R2),SYSCTLG         OS CVOL CATALOG?
         BNE   NOTOS                   NO  - CONTINUE
         MVC   CATSER,10(R2)           SET OS CVOL VOLUME SERIAL
         LA    R4,CATSER               STORE CVOL VOLSER ADDRESS
         ST    R4,CAMLOC+8               IN LOCATE PARAMETER LIST
         OI    CAMLOC,CTGCVOL          INDICATE CVOL SPECIFIED
NOTOS    TM    $LCFLGS1,$LCSPFF        $LCSPF ENTRY?
         BO    LOOP                    YES - GO TO PROCESS EACH ENTRY
         LH    R4,$LCINDL              LENGTH OF INDEX NAME
         LA    R4,2(,R4)               ADD 2 FOR ENTRY TYPE AND PERIOD
         LA    R5,44                   LENGTH OF BALANCE - 1
         SR    R5,R4                     FOR EXECUTE OF MOVE INSTR
         SPACE 1
***********************************************************************
*                                                                     *
*  LOOP TO PROCESS EACH ENTRY IN CATALOG WORK AREA                    *
*                                                                     *
***********************************************************************
         SPACE
LOOP     LA    R2,45(,R2)              ADDRESS OF NEXT ENTRY
         CR    R2,R3                   ALL ENTRIES PROCESSED?
         BNL   RETURN                  YES - RETURN
         CLI   0(R2),CTGTMCAT          VSAM MASTERCATALOG ENTRY?
         BE    LOOP                    YES - GO TO PROCESS NEXT ENTRY
         TM    $LCFLGS1,$LCSPFF        $LCSPF ENTRY?
         BO    GETVOL                  YES - DETERMINE VOLUME SERIAL
         LA    R6,0(R2,R4)             ADDRESS OF BALANCE OF DSNAME
         EX    R5,MOVDSN               MOVE BALANCE TO REPORT LINE
         TM    $LCFLGS1,$LCVOL         $LISTC ONLY ENTRY?
         BO    GETVOL                  NO  - DETERMINE VOLUME SERIAL
         BAL   R14,$WRITE              WRITE REPORT LINE
         B     LOOP                    GO TO PROCESS NEXT ENTRY
         SPACE 1
***********************************************************************
*                                                                     *
*  DETERMINE VOLUME SERIAL FOR APPROPRIATE ENTRY TYPES                *
*                                                                     *
***********************************************************************
         SPACE 1
GETVOL   MVC   LINE+43(6),BLANKS       BLANK VOLSER IN REPORT LINE
         CLI   0(R2),CTGTALIN          NON-VSAM ENTRY?
         BE    LOCATE                  YES - ISSUE LOCATE
         CLI   0(R2),CTGTDATA          VSAM DATA COMPONENT?
         BE    LOCATE                  YES - ISSUE LOCATE
         CLI   0(R2),CTGTINDX          VSAM INDEX COMPONENT?
         BE    LOCATE                  YES - ISSUE LOCATE
         CLI   0(R2),CTGTUCAT          VSAM USERCATALOG?
         BE    LOCATE                  YES - ISSUE LOCATE
         TM    $LCFLGS1,$LCLISTC       $LISTC V ENTRY?
         BZ    LOOP                    NO  - PROCESS NEXT ENTRY
         BAL   R14,$WRITE              WRITE REPORT LINE
         B     LOOP                    GO TO PROCESS NEXT ENTRY
         SPACE 1
***********************************************************************
*                                                                     *
*  ISSUE LOCATE FOR VOLUME SERIAL LIST                                *
*                                                                     *
***********************************************************************
         SPACE 1
LOCATE   LA    R6,1(,R2)               ADDRESS OF DATA SET NAME
         ST    R6,CAMLOC+4             STORE IN LOCATE PARAMETER LIST
         LOCATE CAMLOC                 ISSUE LOCATE SVC
         NR    R15,R15                 LOCATE RETURN CODE 0?
         BZ    PROCVOL                 YES - PROCESS VOLUME LIST
         SPACE
         TM    $LCFLGS1,$LCSPFF        $LCSPF ENTRY?
         BO    LOOP                    YES - GO TO PROCESS NEXT ENTRY
         LA    R1,$LCMTPL              ADDRESS OF IKJEFF02 PARM LIST
         MVC   MTMSGID,MSGID           SET MESSAGE NUMBER
         STH   R15,LOCRC               SAVE LOCATE RETURN CODE
         LA    R7,LOCRC+1              ADDRESS OF RETURN CODE INSERT
         ST    R7,MTINSRTS             STORE IN PARAMETER LIST
         MVI   MTINSRTS,MTMASK         SET LENGTH OF INSERT
         MVC   INSDSN,0(R6)            SET DSNAME FOR ERROR MESSAGE
         LA    R7,INSDSN               ADDRESS OF DSNAME INSERT
         ST    R7,MTINSRTS+4           STORE IN PARAMETER LIST
         MVI   MTINSRTS+4,C44          SET LENGTH OF INSERT
         CALLTSSR EP=IKJEFF02,MF=(E,(1))    ISSUE ERROR MESSAGE
         B     LOOP                    GO TO PROCESS NEXT ENTRY
         SPACE 1
***********************************************************************
*                                                                     *
*  PROCESS VOLUME SERIAL LIST                                         *
*                                                                     *
***********************************************************************
         SPACE 1
PROCVOL  TM    $LCFLGS1,$LCSPFF        $LCSPF ENTRY?
         BO    ADDENT                  YES - GO TO ADD TABLE ENTRY
         LA    R7,20
         CH    R7,VOLCNT               MORE THAN 20 VOLUMES?
         BNL   SETCNT                  NO  - CONTINUE
         STH   R7,VOLCNT               SET VOLUME COUNT TO 20
SETCNT   XR    R7,R7                   CLEAR VOLUME COUNTER
         LA    R8,VOLLST               POINT TO FIRST VOLUME ENTRY
MOVSER   MVC   LINE+43(6),4(R8)        MOVE VOLUME SERIAL TO REP LINE
         TM    $LCFLGS1,$LCLISTC       $LISTC V ENTRY?
         BO    PUT$SP                  YES - GO TO WRITE LINE
         BAL   R14,$SPACE              BRANCH TO CALCULATE SPACE USAGE
         TM    $LCFLGS2,$LCPRINT+$LCTPUT    IS THIS LINE TO BE PRINTED?
         BNO   NEXTVOL                 NO  - PROCESS NEXT VOLUME ENTRY
PUT$SP   BAL   R14,$WRITE              WRITE REPORT LINE
NEXTVOL  NR    R7,R7                 . FIRST VOLUME?
         LA    R7,1(,R7)               INCREMENT VOLUME COUNT
         BNZ   NOTFST                . NO  - PROCESS SUBSEQUENT VOLUMES
         CH    R7,VOLCNT               ONE VOLUME ONLY?
         BE    LOOP                    YES - PROCESS NEXT CATALOG ENTRY
         L     R10,INSAD2              SUPPRESS PRINTING OF DSNAME
NOTFST   CH    R7,VOLCNT               FINAL VOLUME?
         BE    SETDSN                  YES - RESTORE PRINTING OF DSNAME
         LA    R8,12(,R8)              POINT TO NEXT VOLUME
         B     MOVSER                  GO TO PROCESS THIS VOLUME
SETDSN   L     R10,INSAD1              RESTORE PRINTING OF DSNAME
         B     LOOP                    PROCESS NEXT CATALOG ENTRY
         SPACE 1
***********************************************************************
*                                                                     *
*  $LCSPF ENTRY - ADD SPF TABLE ENTRY                                 *
*                                                                     *
***********************************************************************
         SPACE 1
ADDENT   MVC   $LCDSN+1(44),0(R6)     MOVE DATA SET NAME TO VARIABLE
         MVI   $LCDSN+45,BLANK        BLANK LAST BYTE
         LR    R7,R2                  SAVE REGISTER 2
         TRT   $LCDSN+1(45),TABLE     FIND FIRST BLANK
         MVI   0(R1),QUOTE            APPEND FINAL QUOTATION MARK
         LR    R2,R7                  RESTORE REGISTER 2
         MVC   $LCVSER,VOLLST+4       MOVE FIRST VOLSER TO VARIABLE
         SPACE 1
         LA    R1,ISPPARM             ADDRESS OF ISPLINK PARM LIST
         L     R15,VISPLINK           ADDRESS OF ISPLINK ROUTINE
         BALR  R14,R15                ADD TABLE ENTRY
         B     LOOP                   GO TO PROCESS NEXT ENTRY
         SPACE 1
***********************************************************************
*                                                                     *
*  RETURN                                                             *
*                                                                     *
***********************************************************************
         SPACE 1
RETURN   L     R13,SAVE+4              RESTORE REGISTER 13
         RETURN (14,12),RC=0           RETURN
         EJECT
***********************************************************************
*                                                                     *
*  ROUTINE TO WRITE REPORT LINE VIA IKJEFF02 OR QSAM PUT LOCATE       *
*                                                                     *
***********************************************************************
         SPACE 1
$WRITE   ST    R14,RETSAVE             SAVE RETURN REGISTER
         TM    $LCFLGS1,$LCODS         OUTPUT DATASET SPECIFIED?
         BO    PUTLINE                 YES - GO TO ISSUE QSAM PUT
         SPACE 1
         LA    R1,$LCMTPL              ADDRESS OF IKJEFF02 PARM LIST
         MVC   MTMSGID,MTPUT           SET MESSAGE NUMBER (TPUT)
         ST    R10,MTINSRTS            SET INSERT LENGTH AND ADDRESS
         CALLTSSR EP=IKJEFF02,MF=(E,(1))   WRITE REPORT LINE
         L     R14,RETSAVE             RESTORE RETURN REGISTER
         BR    R14                     RETURN
         SPACE 1
PUTLINE  STM   R4,R5,REGSAVE           SAVE WORKING  REGISTERS
         L     R1,$LCODCB              LOAD OUTPUT DATA SET DCB ADDRESS
         PUT   (1)                     LOCATE OUTPUT AREA
         SLR   R4,R4
         LR    R5,R10
         SLDL  R4,8                    LENGTH OF REPORT LINE IN REG4
         SRL   R5,8                    ADDRESS OF REPORT LINE IN REG5
         EX    R4,MOVLIN               MOVE REPORT LINE TO OUTPUT AREA
         LA    R5,78                   LENGTH OF OUTPUT AREA - 2
         SR    R5,R4                   LENGTH OF AREA TO BE BLANKED - 1
         BM    WRRET                   NEGATIVE - RETURN
         LA    R1,1(R4,R1)             START OF AREA TO BE BLANKED
         EX    R5,BLKLIN               BLANK OUT REST OF OUTPUT AREA
WRRET    LM    R4,R5,REGSAVE           RESTORE WORKING REGISTERS
         L     R14,RETSAVE             RESTORE RETURN REGISTER
         BR    R14                     RETURN
         EJECT
***********************************************************************
*                                                                     *
*  ROUTINE TO CALCULATE SPACE UTILIZATION ETC.                        *
*                                                                     *
***********************************************************************
         SPACE 1
$SPACE   NI    $LCFLGS2,255-$LCTPUT    SET PRINT INDICATOR OFF
         CLI   2(R8),DADEV             IS THIS A DIRECT ACCESS DEVICE?
         BNER  R14                     NO  - RETURN IMMEDIATELY
         CLC   4(6,R8),MIGRAT          DATA SET MIGRATED BY DFSMSHSM?
         BER   R14                     YES - RETURN IMMEDIALTELY
         CLC   4(6,R8),ARCIVE          DATA SET MIGRATED BY SAMS:DISK?
         BER   R14                     YES - RETURN IMMEDIALTELY
         STM   R4,R8,REGSAVE           SAVE WORKING  REGISTERS
         ST    R14,RETSAVE             SAVE RETURN REGISTER
         ST    R6,CAMSRCH+4            INITIALIZE
         LA    R9,4(,R8)                 OBTAIN
         ST    R9,CAMSRCH+8                PARAMETER
         ST    R9,CAMSEEK+8                  LISTS
         SPACE 1
*                  OBTAIN FORMAT-1 DSCB
         SPACE 1
OBTAIN   OBTAIN CAMSRCH                OBTAIN FORMAT-1 DSCB
         NR    R15,R15                 OBTAIN RETURN CODE ZERO?
         BZ    SRCHOK                  YES - CONTINUE
         LA    R4,MSGID1-4(R15)        SET MESSAGE NUMBER
         B     OBTERR                  GO TO WRITE ERROR MESSAGE
         SPACE 1
*                  CHECK DSORG, CREDT AND REFDT CRITERIA
         SPACE 1
SRCHOK   TM    $LCCREDT,$LCCRESW       SELECTION ON CREATION DATE?
         BZ    CHKREF                  NO - CHECK FOR REFERENCE DATE
         CLC   FMT1+9(3),$LCCREDT+1    CREDT LESS THAN THRESHOLD?
         BH    SPRET                   NO - RETURN TO MAINSTREAM CODE
CHKREF   TM    $LCREFDT,$LCREFSW       SELECTION ON REFERENCE DATE?
         BZ    GETEXT                  NO - GO TO PREPARE REPORT LINE
         CLC   FMT1+31(3),$LCREFDT+1   REFDT LESS THAN THRESHOLD?
         BH    SPRET                   NO - RETURN TO MAINSTREAM CODE
         SPACE 1
*                  DETERMINE NUMBER OF EXTENTS
         SPACE 1
GETEXT   MVC   LINE(30),PATTERN        INITIALIZE REPORT LINE
         XR    R4,R4                   CLEAR REGISTER 4
         IC    R4,FMT1+15              INSERT NUMBER OF EXTENTS
         NR    R4,R4                   ZERO EXTENTS?
         BZ    SPRET                   YES - RETURN TO MAINSTREAM CODE
         CVD   R4,DOUBLE               CONVERT TO DECIMAL
         ED    LINE(4),DOUBLE+6        EDIT EXTENTS INTO REPORT LINE
         SPACE 1
*                  OBTAIN FORMAT-2 DSCB IF NECESSARY
         SPACE 1
         TM    FMT1+38,IS              DSORG IS?
         BZ    CALCSP                  NO  - CALCULATE SPACE ALLOCATION
         CH    R4,H3                   MORE THAN 3 EXTENTS?
         BNH   CALCSP                  NO  - CALCULATE SPACE ALLOCATION
         NC    FMT1+91(5),FMT1+91      IS FORMAT-2 DSCB TTR ZERO?
         BZ    CALCSP                  YES - CALCULATE SPACE USAGE
         OBTAIN CAMSEEK                OBTAIN FORMAT-2 DSCB
         MVC   FMT1+91(5),FMTX+135     MOVE FORMAT-3 TTR TO FORMAT-1
         NR    R15,R15                 OBTAIN RETURN CODE ZERO?
         BZ    CALCSP                  YES - CALCULATE SPACE ALLOCATION
         LA    R4,MSGID2-4(R15)        SET MESSAGE NUMBER
         B     OBTERR                  GO TO WRITE ERROR MESSAGE
         SPACE 1
*                  CALCULATE SPACE ALLOCATED (TRACKS AND KB)
         SPACE 1
CALCSP   LA    R5,3                    INITIALIZE CONTROL REGISTER
         LR    R7,R4                   INITIALIZE TRACK COUNT
         XR    R9,R9                   INITIALIZE CYLINDER COUNT
         LA    R6,FMT1+61              LOAD FIRST EXTENT ADDRESS
         B     INCSP                   GO TO INCREMENT COUNTERS
GETFMT3  BCT   R5,NEXTEXT              DECREMENT CONTROL REGISTER
         OBTAIN CAMSEEK                OBTAIN FORMAT-3 DSCB
         NR    R15,R15                 OBTAIN RETURN CODE ZERO?
         BZ    BLDFMT3                 YES - REFORMAT FORMAT-3 DSCB
         LA    R4,MSGID3-4(R15)        SET MESSAGE NUMBER
         B     OBTERR                  GO TO WRITE ERROR MESSAGE
BLDFMT3  MVC   FMTX+135(5),FMTX+135    MOVE FORMAT-3 TTR TO FORMAT-1
         MVC   FMTX+44(90),FMTX+45     CONSOLIDATE EXTENT DESCRIPTORS
         LA    R5,13                   INITIALIZE CONTROL REGISTER
         LA    R6,FMTX+4               LOAD FOURTH EXTENT ADDRESS
         B     INCSP                   GO TO INCREMENT COUNTERS
NEXTEXT  LA    R6,10(,R6)              LOAD NEXT EXTENT ADDRESS
INCSP    AH    R9,6(,R6)
         SH    R9,2(,R6)               INCREMENT CYLINDER COUNT
         AH    R7,8(,R6)
         SH    R7,4(,R6)               INCREMENT TRACK COUNT
         BCT   R4,GETFMT3              GO TO PROCESS NEXT EXTENT
         IC    R4,3(,R8)               PICK UP DEVICE TYPE INDICATOR
         SLL   R4,29                   CLEAR HIGH ORDER 5 BITS
         SRL   R4,27                     AND MULTIPLY BY 4
         LH    R5,DEVCAP(R4)           PICK UP # OF TRACKS/CYLINDER
         NR    R5,R5                   TRACKS/CYLINDER ZERO?
         BNZ   MULTCYL                 NO - CONVERT CYLS TO TRACKS
         LA    R4,MSGID4               SET MESSAGE NUMBER
         B     OBTERR                  GO TO WRITE ERROR MESSAGE
MULTCYL  MR    R8,R5                   CONVERT CYLINDERS TO TRACKS
         AR    R7,R9                   ADD TO TRACK COUNT
         ST    R7,TRKAL                SAVE TRACKS ALLOCATED
         CVD   R7,DOUBLE               CONVERT TRACKS TO DECIMAL
         A     R7,$LCTRKAL             ADD TRACK ALLOCATION TOTAL
         ST    R7,$LCTRKAL             STORE NEW TOTAL IN COMMON AREA
         ED    LINE+4(6),DOUBLE+5      EDIT TRACKS ALLOC TO REPORT LINE
         L     R7,TRKAL                PICK UP TRACKS ALLOCATED
         MH    R7,DEVCAP+2(R4)         CONVERT TRACKS TO (KB X 2)
         SRL   R7,1                    DIVIDE BY 2 TO GIVE KB
         ST    R7,KBAL                 SAVE KB ALLOCATED
         CVD   R7,DOUBLE               CONVERT KB TO DECIMAL
         A     R7,$LCKBAL              ADD KB ALLOCATION TOTAL
         ST    R7,$LCKBAL              STORE NEW TOTAL IN COMMON AREA
         MVO   DOUBLE+4(4),DOUBLE+4(4) PREPARE TRACKS DECIMAL FOR EDIT
         ED    LINE+16(7),DOUBLE+4     EDIT KB ALLOC TO REPORT LINE
         SPACE 1
*                  CALCULATE SPACE USED (TRACKS AND KB)
         SPACE 1
         XR    R6,R6                   SET TRACKS USED TO ZERO
         XR    R7,R7                   SET KB USED TO ZERO
         NC    FMT1+38(2),FMT1+38      UNDEFINED DSORG?
         BZ    EDSPUS                  YES - EDIT ZEROS TO REPORT LINE
         TM    FMT1+38,PS+DA+PO        DSORG PS, DA OR PO?
         BNZ   GETTTR                  YES - CALCULATE USAGE NORMALLY
         LM    R6,R7,TRKAL             PICK UP TRACKS AND KB ALLOCATED
         B     EDSPUS                  GO TO EDIT INTO REPORT LINE
GETTTR   NC    FMT1+54(3),FMT1+54      IS LAST BLOCK TTR ZERO?
         BZ    EDSPUS                  YES - EDIT ZEROS TO REPORT LINE
         LH    R6,FMT1+54              PICK UP TT OF LAST BLOCK TTR
         LA    R6,1(,R6)               INCREMENT TRACKS USED BY 1
         LR    R7,R6                   LOAD TRACKS USED IN REG7
         MH    R7,DEVCAP+2(R4)         CONVERT TRACKS TO (KB X 2)
         SRL   R7,1                    DIVIDE BY 2 TO GIVE KB
EDSPUS   CVD   R6,DOUBLE               CONVERT TRACKS USED TO DECIMAL
         A     R6,$LCTRKUS             ADD TRACK USAGE TOTAL
         ST    R6,$LCTRKUS             STORE NEW TOTAL IN COMMON AREA
         ED    LINE+10(6),DOUBLE+5     EDIT TRACKS USED TO REPORT LINE
         CVD   R7,DOUBLE               CONVERT KB USED TO DECIMAL
         A     R7,$LCKBUS              ADD KB USAGE TOTAL
         ST    R7,$LCKBUS              STORE NEW TOTAL IN COMMON AREA
         MVO   DOUBLE+4(4),DOUBLE+4(4) PREPARE TRACKS DECIMAL FOR EDIT
         ED    LINE+23(7),DOUBLE+4     EDIT KB USED TO REPORT LINE
         SPACE 1
*                  DETERMINE CREATION DATE AND REFERENCE DATE
         SPACE 1
         LA    R4,2                    INITIALIZE CONTROL REGISTER
         XR    R7,R7                   CLEAR REGISTER 7
         LA    R5,FMT1+9               POINT TO CREDT IN FORMAT-1 DSCB
         LA    R6,LINE+31              POINT TO CREDT IN REPORT LINE
         B     DATCVD                  GO TO PERFORM DATE CONVERSION
REFINIT  LA    R5,FMT1+31              POINT TO REFDT IN FORMAT-1 DSCB
         LA    R6,LINE+37              POINT TO REFDT IN REPORT LINE
DATCVD   IC    R7,0(,R5)               PICK UP YEAR
         CVD   R7,DOUBLE               CONVERT TO DECIMAL
         UNPK  0(2,R6),DOUBLE          UNPACK INTO REPORT LINE
         OI    1(R6),HEXF0             CONVERT SIGN ZONE TO HEX 'F'
         LH    R8,1(,R5)               PICK UP DAY IN YEAR
         CVD   R8,DOUBLE               CONVERT TO DECIMAL
         UNPK  2(3,R6),DOUBLE          UNPACK INTO REPORT LINE
         OI    4(R6),HEXF0             CONVERT SIGN ZONE TO HEX 'F'
         BCT   R4,REFINIT              GO TO PROCESS REFERENCE DATE
         OI    $LCFLGS2,$LCTPUT        TURN PRINT INDICATOR ON
         SPACE 1
*                  RETURN TO MAINSTREAM CODE
         SPACE 1
SPRET    LM    R4,R8,REGSAVE           RESTORE WORKING REGISTERS
         L     R14,RETSAVE             RESTORE RETURN REGISTER
         BR    R14                     RETURN TO MAINSTREAM CODE
         SPACE 1
*                  OBTAIN ERROR - ISSUE ERROR MESSAGE
         SPACE 1
OBTERR   LA    R1,$LCMTPL              ADDRESS OF IKJEFF02 PARM LIST
         MVC   MTMSGID,0(R4)           SET MESSAGE NUMBER
         L     R4,CAMSRCH+8            ADDRESS OF VOLUME SERIAL INSERT
         ST    R4,MTINSRTS             STORE IN PARAMETER LIST
         MVI   MTINSRTS,C6             SET LENGTH OF INSERT
         L     R4,CAMSRCH+4            ADDRESS OF DSNAME
         MVC   INSDSN,0(R4)            SET DSNAME FOR ERROR MESSAGE
         LA    R4,INSDSN               ADDRESS OF DSNAME INSERT
         ST    R4,MTINSRTS+4           STORE IN PARAMETER LIST
         MVI   MTINSRTS+4,C44          SET LENGTH OF INSERT
         CALLTSSR EP=IKJEFF02,MF=(E,(1))    ISSUE ERROR MESSAGE
         B     SPRET                   RETURN TO MAINSTREAM CODE
         EJECT
***********************************************************************
*                                                                     *
*  STORAGE DECLARATIONS                                               *
*                                                                     *
***********************************************************************
         SPACE 1
DOUBLE   DS    D                  DOUBLEWORD FOR CVD INSTRUCTIONS
SAVE     DS    18F                LOCAL SAVE AREA
REGSAVE  DS    5F                 WORK REGISTER SAVE AREA
RETSAVE  DS    F                  RETURN REGISTER SAVE AREA
VISPLINK DC    V(ISPLINK)         ADDRESS OF ISPF INTERFACE ROUTINE
ISPPARM  DC    A(TBADD)           ISPLINK PARAMETER LIST
         DS    A
TRKAL    DS    F                  TRACKS ALLOCATED FOR CURRENT DS
KBAL     DS    F                  KB ALLOCATED FOR CURRENT DS
$SPINS   DC    AL1(79),AL3(LINE+1)     $SPACE REPORT LINE ) INCL. DSN
         DC    AL1(48),AL3(LINE+1)       INSERT ADDRESS   ) EXCL. DSN
         DC    AL1(55),AL3(HEAD2)      $SPACE HEADING2 INSERT ADDRESS
         DC    AL1(29),AL3(HEAD2)      $SPACE HEADING2 INSERT ADDRESS
         DC    AL1(28),AL3(HEAD1)      $SPACE HEADING1 INSERT ADDRESS
$LCVINS  DC    AL1(49),AL3(LINE+43)    $LISTC V REP. LINE ) INCL. DSN
         DC    AL1(6),AL3(LINE+43)       INSERT ADDRESS   ) EXCL. DSN
         DC    AL1(13),AL3(HEAD2+42)   $LISTC V HEADING INSERT ADDR.
INSAD1   DS    0F                 REPORT LINE INSERT ADDRESS INCL. DSN
$LCINS   DC    AL1(42),AL3(LINE+50)    $LISTC REPORT LINE INSERT ADDR.
INSAD2   DS    F                  REPORT LINE INSERT ADDRESS EXCL. DSN
LOCRC    DS    H                  LOCATE RETURN CODE
H3       DC    H'3'               HALFWORD FOR EXTENT COMPARISON
MOVDSN   MVC   LINE+50(1),0(R6)   DATA SET NAME MOVE INSTRUCTION
MOVLIN   MVC   0(0,R1),0(R5)      REPORT LINE MOVE INSTRUCTION
BLKLIN   MVC   0(0,R1),BLANKS     OUTPUT AREA BLANKING INSTRUCTION
DEVCAP   DC    H'00',H'000'       INVALID
         DC    H'19',H'025'       3330        TABLE OF
         DC    H'00',H'000'       INVALID     TRACKS/CYLINDER
         DC    H'30',H'036'       3350        AND
         DC    H'00',H'000'       INVALID     KB/TRACK X 2
         DC    H'19',H'025'       3330-1      FOR SUITABLE
         DC    H'15',H'090'       3380        DISK DEVICES
         DC    H'15',H'110'       3390
TABLE    DC    XL256'00'
         ORG   TABLE+C' '         TABLE TO LOCATE FIRST BLANK
         DC    X'01'                IN ISPF DATA SET NAME
         ORG   TABLE+256
TBADD    DC    CL8'TBADD'
SYSCTLG  DC    CL9'SYSCTLG.V'     OS CVOL CATALOG IDENTIFIER
CATSER   DS    CL6                OS CVOL VOLUME SERIAL
MIGRAT   DC    CL6'MIGRAT'
ARCIVE   DC    CL6'ARCIVE'
INSDSN   DC    CL44' '            DATA SET NAME FOR ERROR MESSAGES
BLANKS   DC    CL74' '
PATTERN  DC    XL16'40202021402020202120402020202120' EDIT
         DC    XL14'4020202020212040202020202120'     PATTERNS
HEAD1    DC    CL29' #     TRACKS     APPROX. KB '
HEAD2    DC    CL56'EXT ALLOC  USED  ALLOC   USED CREDT REFDT VOLUME DS*
               NAME '
LINE     DC    CL93' '            REPORT LINE
MSGID    DC    CL4'F04 '          MESSAGE IDENTIFIERS
MSGID1   DC    CL4'F11 ',CL4'F12 ',CL4'F13 ',CL4'F01 '
MSGID2   DC    CL4'F11 ',CL4'F24 ',CL4'F18 ',CL4'F01 ',CL4'F24 '
MSGID3   DC    CL4'F11 ',CL4'F24 ',CL4'F23 ',CL4'F01 ',CL4'F24 '
MSGID4   DC    CL4'F31 '
MTPUT    DC    CL4'TPUT'
         SPACE 1
*                  LOCATE PARAMETER LISTS AND WORK AREAS
         SPACE 1
CAMLOC   CAMLST NAME,*-*,,CAMWRK
CAMWRK   DS    0D
VOLCNT   DS    H                  VOLUME COUNT
VOLLST   DS    CL263              VOLUME LIST
         SPACE 1
*                  OBTAIN PARAMETER LISTS AND WORK AREAS
         SPACE 1
CAMSRCH  CAMLST SEARCH,*-*,*-*,FMT1
CAMSEEK  CAMLST SEEK,FMT1+91,*-*,FMTX
FMT1     DS    CL140              FORMAT-1 DSCB
FMTX     DS    CL140              FORMAT-3 DSCB
         SPACE 2
         END   SKJ$LC03
