$HBLIST  TITLE 'TSO COMMAND TO LIST HSM DATA SET BACKUPS'
*
*        WRITTEN BY LEX EREMIN NOVEMBER 1983
*                AT THE STATE ELECTRICITY COMMISSION OF VICTORIA
*
*        UPDATES BY GREG PRICE AUGUST 1992
*                AT FERNTREE COMPUTER SERVICES
*              - CHANGE OUTPUT BLKSIZE TO 0 FOR SYSTEM DETERMINED BLKSZ
*              - REPLACE DSORG DISPLAY ALGORITHM
*              - CHANGE KB SIZE FROM 1000 BYTES TO 1024 BYTES
*              - SHOW 0 KB RATHER THAN <1 KB IF EXACTLY ZERO BYTES
         EJECT
         PRINT GEN
$HBLIST  START 0
$HBLIST  CSECT
         BC    15,14(0,15)
         DC    X'08'
         DC    CL8'$HBLIST '
         DS    0H
         STM   14,12,12(13)        SAVE REGISTERS
         LR    12,15
         USING $HBLIST,12          ESTABLISH CSECT BASE REGISTER
         ST    13,SAVE+4
         LR    2,13
         LA    13,SAVE             ESTABLISH LOCAL SAVE AREA
         ST    13,8(0,2)
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9               MESSAGE BASE REGISTER
R10      EQU   10
R11      EQU   11
R12      EQU   12              BASE REGISTER
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LA    R9,MTPARMS
         USING MTDSECTD,R9
         TM    0(R1),X'80'     IS IT INVOKED AS A CMND PROCESSOR?
         BO    TPUT1           NO, FLEE
         LR    R10,R1          RESTORE PARM ADDRESS
         USING CPPL,R10        ESTABLISH ADDRESSABILITY
         MVC   PPLCBUF,CPPLCBUF
         MVC   PPLUPT,CPPLUPT  SAVE CPPL PARMS FOR LATER USE
         MVC   PPLECT,CPPLECT
         ST    R10,MTCPPLP     CPPL ADDRESS FOR MESSAGE HANDLING
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         LTR   R15,R15         WAS PARSE SUCCESSFUL?
         BNZ   INS2            NO, ERROR
*
* STAX MACROS: FIRST IN LAST OUT; THE SECOND IS TO PROTECT THE FIRST
*              FROM BEING INTERRUPTED.
*
         STAX  ATT2,MF=(E,ATTNLS2)
         STAX  ATTN,IBUF=(ATTNREP,50),OBUF=(ATTNMSG,53),REPLACE=NO,    *
               MF=(E,ATTNLST)
         L     R11,PDLPTR      ESTABLISH PARM ADDRESSABILITY
         USING IKJPARMD,R11
*
* SET FLAG IF DETAIL IS REQUESTED
*
         CLI   OPER3+1,FLAGON
         BNE   NEXTP1
         MVI   FLAG7,FLAGON
*
* IF OUTDATASET SUPPLIED, SET FLAG AND SAVE DATA SET NAME
*
NEXTP1   CLI   OPER2+1,FLAGON
         BNE   NEXTP
         MVI   FLAG1,FLAGON    SET OUTFILE FLAG
         L     R6,OPER2B       LOAD OPERAND ADDRESS
         LH    R8,OPER2B+4     LOAD OPERAND LENGTH
         LA    R15,2(,R8)      INCREMENT LENGTH FOR IKJDAIR
         STH   R15,DSNAME      STORE FOR IKJDAIR
         BCTR  R8,R0           DECREMENT FOR EXEC
         LA    R7,OUTFILE      LOAD RECEIVING ADDRESS FOR EXEC
         EX    R8,MOVEIT       EXECUTE
         OC    OUTFILE,BLNKS    FOLD TO UPPERCASE
         TM    OPER2B+14,X'80' IS THERE A MEMBER NAME AS WELL?
         BNZ   ERROR6          TSK! TSK!
*
* IF LEVEL SUPPLIED, SET FLAG AND SAVE STRING
*
NEXTP    CLI   OPER1+1,FLAGON
         BNE   GETUSID
         MVI   FLAG2,FLAGON    SET LEVEL FLAG
         L     R6,OPER1B
         LH    R8,OPER1B+4     LOAD OPERAND LENGTH
         STH   R8,DSNAME2      STORE FOR VSAM
         BCTR  R8,R0           DECREMENT FOR EX
         LA    R7,INFILE       LOAD RECEIVING ADDRESS FOR EX
         EX    R8,MOVEIT       EXECUTE
         OC    INFILE,BLNKS    FOLD TO UPPERCASE
         TM    OPER1B+14,X'80' IS THERE A MEMBER NAME AS WELL?
         BNZ   ERROR8          NOT ALLOWABLE
         B     ALLOCATE
*
* IF LEVEL NOT SUPPLIED, EXTRACT PREFIX OR USERID
*
GETUSID  L     R4,PPLUPT
         USING UPT,R4          ADDRESSABILITY
         LA    R5,UPTPREFX     PREFIX ADDRESS
         SR    R6,R6
         IC    R6,UPTPREFL     PREFIX LENGTH
         NR    R6,R6           PRESENT?
         BNZ   OK
         DROP  R4              NO
         L     R2,CPPLPSCB     ADDRESSABILITY
         USING PSCB,R2
         LA    R5,PSCBUSER     USERID ADDRESS
         IC    R6,PSCBUSRL     USERID LENGTH
OK       STH   R6,DSNAME2      STORE USERID/PREFIX LENGTH
         BCTR  R6,R0           DECREMENT FOR MOVE
         EX    R6,MOVEIT3      MOVE USERID/PREFIX TO FIELD
*
*  ALLOCATE THE OUTPUT DATA SET
*
ALLOCATE LA    R11,DAPARMS     ESTABLISH ADDRESSABILITY FOR IKJDAIR
         USING DAPL,R11
         CLI   FLAG1,FLAGON
         BNE   ALLOC2
         XC    DAPARMS(168),DAPARMS  CLEAR IKJDAIR PARM AREA
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         MVC   DAPLPSCB,CPPLPSCB
         LA    R8,ECB
         ST    R8,DAPLECB
         LA    R6,DAALLOC      ESTABLISH ADDRESSABILITY FOR ALLOCATE
         USING DAPB08,R6
         LA    R8,DAPB08
         ST    R8,DAPLDAPB
         MVI   DA08CD+1,X'08'  SET CODE TO ALLOCATE
         LA    R8,DSNAME       MOVE IN DSNAME ADDRESS
         ST    R8,DA08PDSN
         MVC   DA08DDN,BLNKS         CLEAR DDNAME
         MVC   DA08UNIT(8),BLNKS           UNIT
         MVC   DA08SER(8),BLNKS            VOLSER
         MVC   DA08MNM(8),BLNKS            MEMBER NAME
         MVC   DA08PSWD(8),BLNKS           PWORD
         OI    DA08DSP1,DA08SHR      SET DISP TO SHR,KEEP,KEEP
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEEP
         LA    R1,DAPL         POINT TO LIST
*
* FLAGS SET BEFORE THE ACTION SO THAT IF INTERRUPT OCCURS BETWEEN THE
* INSTRUCTIONS, THE PROGRAM ERRS ON THE SIDE OF EXCESSIVE CLEAN UP
*
         MVI   FLAG3,FLAGON    SET ALLOCATE FLAG
         LINK  EP=IKJDAIR,MF=(E,(1))
         LTR   R15,R15         ALLOCATE OK?
         BZ    MOVENAME        YES
*
* ALLOCATE FAILED; TRY AND ALLOCATE AS NEW
*
TRYNEW   XC    DAPARMS(168),DAPARMS  CLEAR IKJDAIR PARM AREA
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         MVC   DAPLPSCB,CPPLPSCB
         LA    R8,ECB
         ST    R8,DAPLECB
         LA    R6,DAALLOC      ESTABLISH ADDRESSABILITY FOR ALLOCATE
         USING DAPB08,R6
         LA    R8,DAPB08
         ST    R8,DAPLDAPB
         MVI   DA08CD+1,X'08'  SET CODE TO ALLOCATE
         LA    R8,DSNAME       MOVE IN DSNAME ADDRESS
         ST    R8,DA08PDSN
         MVC   DA08DDN,BLNKS         CLEAR DDNAME
         MVC   DA08UNIT(8),NEWUNIT         UNIT
         MVC   DA08DSO(1),NEWDSO           DSORG
         MVC   DA08SER(8),BLNKS            VOLSER
         MVC   DA08MNM(8),BLNKS            MEMBER NAME
         MVC   DA08PSWD(8),BLNKS           PWORD
         MVC   DA08BLK(4),NEWBLK
         MVC   DA08PQTY(4),NEWPQTY
         MVC   DA08SQTY(4),NEWSQTY
         MVC   DA08DQTY(4),NEWDQTY
         OI    DA08DSP1,DA08NEW      SET DISP TO NEW,CATLG,DEL
         OI    DA08DPS2,DA08CAT
         OI    DA08DPS3,DA08DEL
         OI    DA08CTL,DA08TRKS
         LA    R1,DAPL         POINT TO LIST
         MVI   FLAG3,FLAGON    SET ALLOCATE FLAG
         LINK  EP=IKJDAIR,MF=(E,(1))
         LTR   R15,R15         ALLOCATE OK?
         BNZ   ERROR7          NO, ERROR
*
* SAVE THE DDNAME GENERATED BY THE SYSTEM AND OPEN DATA SET
*
MOVENAME CLI   FLAG8,FLAGOFF   TEST FOR INTERRUPT
         BNE   RETURN          BAIL OUT PERHAPS
         LA    R3,FILE         ADDRESSABILITY FOR DCB DSECT
         USING IHADCB,R3
         MVC   INPDD(8),DA08DDN      SAVE DDNAME
         MVC   DCBDDNAM(8),DA08DDN    MOVE DDNAME TO FILE AREA
         MVI   FLAG4,FLAGON    SET OPEN FLAG
         OPEN (FILE,(OUTPUT))  OPEN DATASET
         TM    DCBOFLGS,DCBOFOPN OPEN OK?
         BNO   ERROR3          NO, ERROR
         CLI   FLAG8,FLAGOFF   TEST FOR INTERRUPT AGAIN
         BNE   RETURN
         DROP  R3
*
* ALLOCATE THE HSM BCDS
*
ALLOC2   LA    R11,DAPARMS     ESTABLISH ADDRESSABILITY FOR IKJDAIR
         USING DAPL,R11
         XC    DAPARMS(168),DAPARMS  CLEAR IKJDAIR PARM AREA
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         MVC   DAPLPSCB,CPPLPSCB
         LA    R8,ECB
         ST    R8,DAPLECB
         LA    R6,DAALLOC      ESTABLISH ADDRESSABILITY FOR ALLOCATE
         USING DAPB08,R6
         LA    R8,DAPB08
         ST    R8,DAPLDAPB
         MVI   DA08CD+1,X'08'  SET CODE TO ALLOCATE
         LA    R8,BCDSNAME     MOVE IN DSNAME ADDRESS
         ST    R8,DA08PDSN
         MVC   DA08DDN,BLNKS         CLEAR DDNAME
         MVC   DA08UNIT(8),BLNKS           UNIT
         MVC   DA08SER(8),BLNKS            VOLSER
         MVC   DA08MNM(8),BLNKS            MEMBER NAME
         MVC   DA08PSWD(8),BLNKS           PWORD
         OI    DA08DSP1,DA08SHR      SET DISP TO SHR,KEEP,KEEP
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEEP
         LA    R1,DAPL         POINT TO LIST
         MVI   FLAG5,FLAGON    BCDS ALLOCATED FLAG
         LINK  EP=IKJDAIR,MF=(E,(1))
         LTR   R15,R15         ALLOCATE OK?
         BNZ   INS13           NO, ERROR
         MVC   BCDSDD(8),DA08DDN     SAVE DDNAME
         CLI   FLAG8,FLAGOFF   TEST FOR INTERRUPT
         BNE   RETURN
*
* ASK VSAM TO GENERATE AN ACCESS METHOD CNTRL BLK USING THE BCDS DDNAME
*
         GENCB BLK=ACB,MF=(E,ACB),DDNAME=(*,BCDSDD)
         LTR   R15,R15
         BNZ   INS12           BAIL OUT IF IT FAILED
         ST    R1,ACBADDR      SAVE ADDRESS OF ACB
         LH    R2,DSNAME2      LOAD LENGTH OF LEVEL FOR RPL
         L     R3,ACBADDR      LOAD ADDRESS OF ACB....AND......
*
* ASK VSAM TO GENERATE A REQUEST PARAMTER LIST WITH KEYLENGTH OF LEVEL
*
         GENCB ACB=(3),BLK=RPL,MF=(E,RPL),KEYLEN=(2)
         LTR   R15,R15         BAIL OUT IF IT FAILED
         BNZ   INS11
         ST    R1,RPLADDR      SAVE RPL ADDRESS
         L     R2,ACBADDR      LOAD ACB ADDRESS
         MVI   FLAG6,FLAGON    SET BCDS OPENED FLAG
         OPEN  ((2))           OPEN BCDS
         LTR   R15,R15
         BNZ   INS14           BAIL OUT IF FAILED
         L     R2,RPLADDR      LOAD RPL ADDRESS
         CLI   FLAG8,FLAGON    BAIL OUT IF INTERRUPT FLAG SET
         BE    RETURN
         MVI   FLAG0,FLAGON    SET 'I AM ABOUT TO SEEK A RECORD' FLAG
*
* LOCATE FIRST RECORD WHICH SATISFIES SEARCH CRITERION
*
         POINT RPL=(2)         LOCATE LEVEL
         LTR   R15,R15         SUCCESS?
         BZ    CONTINUE        YES; CARRY ON
         L     R2,RPLADDR      LOAD RPL ADDRESS AND SHOW RETURN CODE
         SHOWCB RPL=(2),MF=(E,SHCB)
         LTR   R15,R15         OK?
         BNZ   INS3            BAIL OUT
         CLC   POINTF,FEEDBACK IS IT CORRECT FAIL CODE FOR POINT?
         BNE   INS4            NO, BAIL OUT
         B     RETURN          YES, NORMAL EXIT
CONTINUE MVC   MTMSGID,MTPUT   ALL MESSAGES IN THIS LOOP USE TPUT ID
*
* THE RECORD FETCHING AND PROCESSING LOOP
*
LOOP     CLI   FLAG8,FLAGOFF   TEST FOR INTERRUPT
         BNE   RETURN
         L     R2,RPLADDR      LOAD RPL ADDRESS
         GET   RPL=(2)         GET NEXT RECORD
         LTR   R15,R15         SUCCESS?
         BZ    PROCESSR        YES; PROCESS THE RECORD
         L     R2,RPLADDR      LOAD RPL ADDRESS AND SHOW GET CODE
         SHOWCB RPL=(2),MF=(E,SHCB)
         LTR   R15,R15         SHOWCB OK?
         BNZ   INS3            NO, EXIT
         CLC   GETF,FEEDBACK   NORMAL GET FAIL
         BNE   INS5            NO, EXIT
         B     RETURN          NORMAL EXIT
         USING HSMDSECT,R3     ADDRESSABILITY FOR HSM BCDS RECORD
*
* DOES RECORD QUALIFY?
*
PROCESSR L     R3,IN           ADDRESS OF GOTTEN RECORD
         LH    R2,DSNAME2      STILL COMPARES WITH LEVEL?
         BCTR  R2,R0             "
         EX    R2,COMPARE1       "
         BNE   RETURN          NO, NORMAL EXIT
         CLI   MCHTYPE,DSRECORD  IS IT A BCDS DATA SET RECORD?
         BNE   LOOP              NO, NEW RECORD
         TM    MCBFLGS,DSVALID   IS RECORD FLAGGED AS INVALID?
         BNO   LOOP              NO, NEW RECORD
         MVC   DATASET(44),MCK   MOVE RECORD KEY TO DATA SET FIELD
         MVI   FLAG0,FLAGOFF     SET 'I SOUGHT AND FOUND A RECORD' FLAG
*
* IF DETAIL IS REQUESTED, THEN FILL UP THE OUTPUT RECORD WITH FACTS
* AND FIGURES
*
         CLI   FLAG7,FLAGON      DETAIL REQUESTED?
         BNE   FINITO
         UNPK  DATE(5),MCBDBU    YES, UNPACK THE BACKUP DATE
         OI    DATE+4,X'F0'      FIX LAST ZONE FIELD
         ICM   R5,15,MCBSIZEB    LOAD SIZE OF BACKUP IN BYTES
         BZ    CONVERT           SHOW 0 IF ABSOLUTELY ZERO
         SRA   R5,10             DIVIDE IT BY A 1024 (KBYTES)
         BNZ   CONVERT           IF ZERO RESULT MOVE IN '<1' CHARACTERS
         MVC   SIZE(8),NOBYTES    "
         B     VERSION           AND SKIP OVER CONVERT
CONVERT  CVD   R5,WORKAREA       ...TO DECIMAL
         MVC   SIZE(8),PATTSIZE  MOVE EDIT PATTERN TO DESTINATION...
         ED    SIZE(8),WORKAREA+4     AND EDIT
VERSION  LH    R5,MCBTBC
         CVD   R5,WORKAREA       CONVERT # BACKUPS TO DECIMAL..
         MVC   VERS(4),PATTVERS  MOVE PATTERN...
         ED    VERS(4),WORKAREA+6     AND EDIT
         ICM   R1,12,MCBDSORG    LOAD DATA SET ORGANIZATION BYTES
         LA    R0,16             GET NUMBER OF BITS TO TEST
         LA    R15,DSORGLIT      POINT TO DSORG LABELS
DSORGLP  LTR   R1,R1             IS TOP BIT ON?
         BM    DSORGOK           YES
         SLL   R1,1              NO, PROMOTE NEXT BIT
         LA    R15,2(,R15)       POINT TO NEXT LABEL
         BCT   R0,DSORGLP        GO TEST NEXT BIT
         MVC   DSORG,DSNO        NULL DSORG
         B     FINITO
DSORGOK  MVC   DSORG,0(R15)      LOAD DSORG LABEL
         TM    MCBDSORG,X'01'    IT MIGHT ALSO BE UNMOVABLE.....
         BNO   ORG6
         MVI   MOVEATTR,C'U'
         B     FINITO
ORG6     MVI   MOVEATTR,C' '     IN CASE IT WAS PREVIOUSLY UNMOVABLE
*
* IF OUTDATASET IS NOT SPECIFIED SEND MESSAGE TO SCREEN
*
FINITO   CLI   FLAG4,FLAGON    IS OUTFILE PRESENT, ALLOCATED AND OPEN?
         BE    WRITERC         YES, WRITE AN OUTPUT RECORD
         CLI   FLAG7,FLAGON    IS DETAIL SPECIFIED?
         BNE   NODETT
         CLI   FLAG9,FLAGON    HAS A TITLE BEEN SENT YET?
         BE    DETAIL2         YES
         MVI   FLAG9,FLAGON    NO; SEND THE TITLE
         LA    R1,TITLED           LOAD ADDRESS OF TITLE
         ST    R1,MTINSRTS         STORE IT IN MTPARMS
         MVI   MTINSRTS,L'TITLED   MOVE TITLE LENGTH TO MTPARMS
         CALLTSSR EP=IKJEFF02,MF=(E,(9))      SEND
         B     DETAIL2         NOW THE RECORD
NODETT   LA    R1,DATASET      NO DETAIL, NO TITLE!
         ST    R1,MTINSRTS     STORE DATA SET ADDRESS
         MVI   MTINSRTS,L'DATASET  ...AND MOVE DATA SET LENGTH
         B     SENDIT          SEND IT!
DETAIL2  LA    R1,OUTLINE      LOAD OUTPUT RECORD ADDRESS
         ST    R1,MTINSRTS     STORE IT IN MTPARMS
         MVI   MTINSRTS,L'OUTLINE    MOVE LENGTH OF OUTPUT RECORD
SENDIT   CALLTSSR EP=IKJEFF02,MF=(E,(9))  SEND RECORD
         B     LOOP            NEXT RECORD
*
* REPEAT THE ABOVE LOGIC FOR AN OUTPUT DATA SET.....
*
WRITERC  CLI   FLAG7,FLAGON    DETAIL?
         BNE   NODET           NO
         CLI   FLAG9,FLAGON    YES; TITLE WRITTEN YET?
         BE    DETAIL3         YES; WRITE RECORD WITH DETAIL
         MVI   FLAG9,FLAGON    SET TITLE FLAG....
         PUT   FILE,TITLED     WRITE TITLE....
DETAIL3  PUT   FILE,OUTLINE    WRITE DSNAME
         B     LOOP            NEXT RECORD
NODET    PUT   FILE,DATASET    NO DETAIL, NO TITLE; JUST WRITE DSNAME
         B     LOOP            AND FETCH NEXT RECORD
*
* THE MESSAGE EXIT FOR WHEN THE COMMAND IS NOT INVOKED AS A COMMAND..
*     A TPUT FOR FOREGROUND (NO CPPL ADDRESSABILITY) AND A WRITE
*     TO PROGRAMMER IN BACKGROUND
*
TPUT1    EXTRACT MF=(E,EXTRACT) EXTRACT TSO FULLWORD
         TM    FEEDBACK,X'80' FOREGROUND?
         BO    TPUT2          YES
         MVC   MTMSGID,MTPUT  NO;PREPARE FOR WRITE TO PROGRAMMER
         LA    R1,TPUTMSG1
         MVI   MTINSRTS,L'TPUTMSG1
         MVI   ZTSW1,ZTWTPSW  MUSN'T FORGET WTP FLAG!
         B     WRITEMSG       GO TO MESSAGE WRITER
TPUT2    LA    R1,TPUTMSG1    PREPARE FOR TPUT
         SR    R0,R0
         LA    R0,L'TPUTMSG1(,R0)   LENGTH
         TPUT  (1),(0),R      SEND
         B     RETURN         NORMAL EXIT
*
* ERROR MESSAGES GROUP ONE: NO INSERTS
*
ERROR3   MVC   MTMSGID,MER3   MOVE ERROR MESSAGE 3 ID INOT MTPARMS
         B     ERRWRITE
ERROR4   MVC   MTMSGID,MER4                    " 4 "
         B     ERRWRITE
ERROR5   MVC   MTMSGID,MER5                    " 5 "
         B     ERRWRITE
ERROR6   MVC   MTMSGID,MER6                    " 6 "
         B     ERRWRITE
ERROR7   MVC   MTMSGID,MER7                    " 7 "
         B     ERRWRITE
ERROR8   MVC   MTMSGID,MER8                    " 8 "
ERRWRITE SR    R1,R1         NO INSERTS FOR ABOVE FAMILY; ZERO REGISTER
         MVI   MTINSRTS,FLAGOFF ...AND LENGTH
         B     WRITEMSG     GO TO MESSAGE WRITER
*
* ERROR MESSAGES GROUP TWO: ONE INSERT INTO 'PROGRAM' ERROR MSG
*
INS2     LA    R1,INSMSG2    LOAD INSERT ADDRESS
         MVI   MTINSRTS,L'INSMSG2 ..AND MOVE LENGTH INTO MTPARMS
         B     ERRPROG       GOTO MESSAGE WRITER
INS3     LA    R1,INSMSG3
         MVI   MTINSRTS,L'INSMSG3
         B     ERRPROG
INS4     LA    R1,INSMSG4
         MVI   MTINSRTS,L'INSMSG4
         B     ERRPROG
INS5     LA    R1,INSMSG5
         MVI   MTINSRTS,L'INSMSG5
         B     ERRPROG
INS11    LA    R1,INSMSG11
         MVI   MTINSRTS,L'INSMSG11
         B     ERRPROG
INS12    LA    R1,INSMSG12
         MVI   MTINSRTS,L'INSMSG12
         B     ERRPROG
INS13    LA    R1,INSMSG13
         MVI   MTINSRTS,L'INSMSG13
         B     ERRPROG
INS14    LA    R1,INSMSG14
         MVI   MTINSRTS,L'INSMSG14
ERRPROG  MVC   MTMSGID,MER11   MOVE MSGID FOR ABOVE FAMILY OF MESSAGES
*
* UNIVERSAL WRITER
*
WRITEMSG STCM  R1,7,MTADDR    STORE PREPARED ADDRESS AFTER LENGTH
         CALLTSSR EP=IKJEFF02,MF=(E,(9)) ..AND SEND MESSAGE
*
* NORMAL EXIT. IT BEGINS WITH TWO NEW STAX MACROS TO REPLACE THE OLD
*              ONES SO AS TO PROTECT CLEAN UP PROCESSING
*
RETURN   STAX  ATT2,REPLACE=YES,MF=(E,ATTNLS2) PREVENT INTERRUPT
         STAX  ATT2,REPLACE=NO,MF=(E,ATTNLS2)
         CLI   FLAG0,FLAGOFF  IS THE 'I TRIED BUT FAILED' FLAG SET?
         BE    EXISTED
         MVC   MTMSGID,MER10  YES; MSGID
         LA    R1,INFILE      ADDRESS OF SUPPLIED LEVEL
         ST    R1,MTINSRTS    STORE IN MTPARMS
         MVI   MTINSRTS,L'INFILE    .. AND LENGTH
         CALLTSSR EP=IKJEFF02,MF=(E,(9))   NOTIFY USER
*
* CLOSE AND/OR FREE OUTPUT DATA SET
*
EXISTED  CLI   FLAG4,FLAGON   IS OUTDATSET OPEN?
         BNE   JUMP1
         CLOSE (FILE)         YES, CLOSE IT
JUMP1    CLI   FLAG3,FLAGON   IS OUTDATASET ALLOCATED?
         BNE   JUMP2
         SR    R15,R15        YES, FREE IT
         LA    R5,DAPARMS     ESTABLISH ADDRESSABILITY
         USING DAPL,R5
         LA    R6,DAFREE             ESTABLISH ADDRESSABILITY
         USING DAPB18,R6
         ST    R6,DAPLDAPB
         XC    DAFREE(44),DAFREE     CLEAR PARM AREA
         MVI   DA18CD+1,X'18'        SET CODE TO DEALLOCATE
         MVC   DA18DDN,INPDD         MOVE IN DDNAME USED BY SYSTEM
         LA    R1,DAPL               POINT TO PARM LIST
         LINK  EP=IKJDAIR,MF=(E,(1)) DEALLOC
*
* CLOSE AND/OR FREE HSM BCDS
*
JUMP2    CLI   FLAG6,FLAGON   IS BCDS OPEN?
         BNE   JUMP3
         L     R2,ACBADDR     YES, CLOSE IT
         CLOSE ((2))
JUMP3    CLI   FLAG5,FLAGON   IS BCDS ALLOCATED?
         BNE   JUMP4
         SR    R15,R15        YES, FREE IT
         LA    R5,DAPARMS     ESTABLISH ADDRESSABILITY
         USING DAPL,R5
         LA    R6,DAFREE             ESTABLISH ADDRESSABILITY
         USING DAPB18,R6
         ST    R6,DAPLDAPB
         XC    DAFREE(44),DAFREE     CLEAR PARM AREA
         MVI   DA18CD+1,X'18'        SET CODE TO DEALLOCATE
         MVC   DA18DDN,BCDSDD        MOVE IN DDNAME USED BY SYSTEM
         LA    R1,DAPL               POINT TO PARM LIST
         LINK  EP=IKJDAIR,MF=(E,(1)) DEALLOC
*
* IF OUTDATASET WASN'T SPECIFIED, WRITE A MESSAGE TO SIGNIFY COMPLETION
*
         CLI   FLAG1,FLAGON
         BE    JUMP4
         MVC   MTMSGID,MTPUT
         LA    R1,ENDMSG
         ST    R1,MTINSRTS
         MVI   MTINSRTS,L'ENDMSG
         CALLTSSR EP=IKJEFF02,MF=(E,(9))
*
* RETURN TO CALLER
*
JUMP4    L     13,SAVE+4
         L     14,12(13)
         LM    0,12,20(13)
         BR    14
*
* FIRST LEVEL ATTENTION EXIT; IT IS HANDED A RESPONSE FROM THE USER
* COURTESY OF THE INTERRUPT HANDLER
*
ATTN     LR    R2,R15          ESTABLISH ADDRESSABILITY
         USING ATTN,R2
         LA    R3,ATTNREP
         LA    R4,47(,R3)      SCAN REPLY FOR "END" CHARACTERS
INCR     CLI   0(R3),X'40'     NONBLANK?
         BNE   COMPRIT
         LA    R3,1(,R3)
         CR    R3,R4           PAST END OF MSG?
         BL    INCR            NO, CARRY ON
         B     RETSTAX         NO VALID RESPONSE, EXIT
COMPRIT  OC    0(3,R3),BLNKS   FOLD RESPONSE
         CLC   END(3),0(R3)    ="END"????
         BNE   RETSTAX         NO, EXIT
         MVI   FLAG8,FLAGON    SET INTERRUPT REQUEST FLAG
*
* NEXT FLAG RESET IN CASE PROGRAM INTERRUPTED WHILST PROGRAM
* WAS STILL SEEKING IT'S FIRST VALID RECORD, IN WHICH CASE USER
* MIGHT GET SPURIOUS 'LEVEL NOT FOUND' MESSAGE
*
RETSTAX  MVI   FLAG0,FLAGOFF   RESET 'I SEEK A RECORD' FLAG
         BR    R14             RETURN
         DROP  R2
*
* SECOND EXIT BRIEF AND EFFECTIVE; RETURNS CONTROL TO PROGRAM IF
* INTERRUPT IS KEYED WHILE USER IS BEING PROMPTED BY SYSTEM ABOUT
* ORIGINAL INTERRUPT
*
ATT2     BR    R14
*
* MESSAGES CSECT
*
MSGS     CSECT
         IKJTSMSG (' ',),TPUT
         IKJTSMSG (' LEVEL ',,' WAS NOT PRESENT IN THE BCDS'),ER10
         IKJTSMSG (' $HBLIST HAD A PROGRAM ERROR - CODE ',,' - CONTACT *
               SYSTEMS SUPPORT'),ER11
         IKJTSMSG (' OUTDATASET COULD NOT BE OPENED'),ER3
         IKJTSMSG (' END OF FILE CONDITION ON OUTDATASET'),ER4
         IKJTSMSG (' AN OUTPUT ERROR OCCURRED ON OUTDATASET'),ER5
         IKJTSMSG (' OUTDATASET MUST NOT CONTAIN A MEMBER NAME'),ER6
         IKJTSMSG (' OUTDATASET ALLOCATION FAILED'),ER7
         IKJTSMSG (' LEVEL MUST NOT CONTAIN A MEMBER NAME'),ER8
         IKJTSMSG
$HBLIST  CSECT
*
* COMMAND PARMS, OPTIONS AND KEYWORDS ALL IN A CSECT
*
OPERS    IKJPARM
OPER1    IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=OPER1A
OPER2    IKJKEYWD
         IKJNAME 'ODS',SUBFLD=OPER2A,ALIAS=('OUTDATASET')
OPER3    IKJKEYWD
         IKJNAME 'DETAIL'
OPER1A   IKJSUBF
OPER1B   IKJPOSIT DSNAME,PROMPT='THE HIGH ORDER INDEX',                *
               HELP='A HIGH LEVEL QUALIFIER FOR THE SEARCH'
OPER2A   IKJSUBF
OPER2B   IKJPOSIT DSNAME,USID,PROMPT='OUTPUT DATA SET',                *
               HELP='A DATA SET NAME WHICH IS TO RECEIVE THE OUTPUT'
         IKJENDP
*
* CONSTANTS
*
SAVE     DS    18F             LOCAL SAVE AREA
MOVEIT   MVC   0(0,R7),0(R6)   EXEC FOR MOVING DSNAME PARM
MOVEIT3  MVC   INFILE(1),0(R5) EXEC FOR MOVING USERID/PREFIX
COMPARE1 CLC   INFILE(1),MCK   COMPARE FOR GET ROUTINE
*
* ASSORTED MESSAGES AND INSERTS FOR MESSAGES
*
TPUTMSG1 DC    CL36'$HBLIST MUST BE INVOKED AS A COMMAND'
INSMSG2  DC    CL2'01'     IKJPARS ERROR
INSMSG3  DC    CL2'06'     SHOWCB
INSMSG4  DC    CL2'07'     POINT
INSMSG5  DC    CL2'08'     GET
INSMSG11 DC    CL2'02'     REQUEST PL BUILD
INSMSG12 DC    CL2'03'     AM CTL BLK BUILD
INSMSG13 DC    CL2'04'     BCDS ALLOC
INSMSG14 DC    CL2'05'     BCDS OPEN
ENDMSG   DC    CL11'END $HBLIST'    OBVIOUS
*
* STAX MESSAGE AND REPLY AREAS
*
ATTNMSG  DC    CL53'ENTER "END" TO EXIT OR ANY OTHER RESPONSE TO CONTIN*
               UE'
ATTNREP  DC    CL50' '
*
* TITLE AND OUTPUT RECORD AREAS FOR DETAILED REPORTS
*
TITLED   DC    CL80'BKUPDT    #VERS     KBYTES   DSORG   DSNAME'
OUTLINE  DS    0CL80
         DC    CL1' '
DATE     DC    CL5' '
         DC    CL5' '
VERS     DC    CL4' '
         DC    CL3' '
SIZE     DC    CL8' '
         DC    CL4' '
DSORG    DC    CL2' '
MOVEATTR DC    CL1' '
         DC    CL2' '
*
* NEXT FIELD USED FOR BOTH DETAILED AND BASIC REPORTS
*
DATASET  DC    CL44' '
BLNKS    DC    CL56' '         TWO USES: BLANKS AND DATASET TRAILER
*
* CHARACTER CONSTANTS
*
NOBYTES  DC    CL8'      <1'
END      DC    CL4'END '
MTPUT    DC    CL4'TPUT'
MER3     DC    CL4'ER3 '
MER4     DC    CL4'ER4 '
MER5     DC    CL4'ER5 '
MER6     DC    CL4'ER6 '
MER7     DC    CL4'ER7 '
MER8     DC    CL4'ER8 '
MER10    DC    CL4'ER10'
MER11    DC    CL4'ER11'
*
* VARIOUS
*
WORKAREA DS    D               FOR UNPACKS ETC.
IN       DS    F               VSAM GET RESPONSE
ACBADDR  DS    F               ACB ADDRESS
RPLADDR  DS    F               RPL ADDRESS
FEEDBACK DS    F               SHOWCB RESPONSE
*
* DSNAMES AND DDNAMES
*
BCDSDD   DC    CL8' '          DDNAME GENERATED FOR BCDS
INPDD    DC    CL8' '          DDNAME GENERATED FOR OUTPUT DATA SET
BCDSNAME DC    AL2(8)          IKJDAIR DSNAME FOR BCDS ALLOCATION
         DC    CL8'HSM.BCDS'
DSNAME   DS    H               IKJDAIR DSNAME AREA FOR OUTPUT DATA SET
OUTFILE  DC    CL44' '         OUTPUT DSNAME
DSNAME2  DS    H
INFILE   DC    CL44' '         LEVEL DSNAME
*
* MORE CONSTANTS
*
NEWUNIT  DC    CL8'SYSALLDA'   FOR ALLOCATIONS OF "NEW" OUTDATASET...
NEWBLK   DC    XL4'00'             BLOCKSIZE ZERO - LET DFP DECIDE
NEWPQTY  DC    XL4'01'             PRIMARY 1 TRACK (THE MEDIAN)
NEWSQTY  DC    XL4'05'             SECONDARY 5 TRACKS (THE EXCEPTION)
NEWDQTY  DC    XL4'00'             DIRECTORY ZERO
NEWDSO   DC    XL1'40'             PHYSICAL SEQUENTIAL
*
* PROGRAM FLAGS
*
FLAG1    DC    XL1'00'         OUTPUT DS SPECIFIED
FLAG2    DC    XL1'00'         LEVEL SPECIFIED
FLAG3    DC    XL1'00'         OUTPUT DS ALLOCATED
FLAG4    DC    XL1'00'         OUTPUT DS OPENED
FLAG5    DC    XL1'00'         BCDS ALLOCATED
FLAG6    DC    XL1'00'         BCDS OPENED
FLAG7    DC    XL1'00'         DETAIL SPECIFIED
FLAG8    DC    XL1'00'         INTERRUPT OCCURRED
FLAG9    DC    XL1'00'         TITLE FLAG
FLAG0    DC    XL1'00'         POINT/GET WITHOUT A HIT
FLAGON   EQU   X'01'           FLAG SET VALUE
FLAGOFF  EQU   X'00'           FLAG NOT SET VALUE
*
* MORE CONSTANTS
*
PATTVERS DC    XL4'40202120'   EDIT PATTERN FOR # VERSIONS
PATTSIZE DC    XL8'4020202020202120'  ...AND FOR SIZE IN KBYTES
POINTF   DC    XL4'10'         VALID POINT FAIL CODE (NOT FOUND)
GETF     DC    XL4'04'         VALID GET FAIL CODE (NO MORE RECORDS)
DSORGLIT DC    CL32'ISPSDACXCQMQPOU GSTXTQ1?VSTR?2?1'
DSNO     DC    CL2'**'
*
* LIST FORMS OF MACROS USED IN PROGRAM
*
EXTRACT  EXTRACT FEEDBACK,'S',FIELDS=(TSO),MF=L
ATTNLST  STAX  ATTN,MF=L
ATTNLS2  STAX  ATT2,MF=L
SHCB     SHOWCB RPL=RPL,AREA=FEEDBACK,LENGTH=4,FIELDS=FDBK,MF=L
RPL      GENCB ACB=ACB,AM=VSAM,KEYLEN=44,                              @
               BLK=RPL,AREA=IN,AREALEN=4,                              @
               OPTCD=(KEY,SEQ,SYN,NUP,KEQ,GEN,LOC),                    @
               ARG=INFILE,MF=L
ACB      GENCB BLK=ACB,AM=VSAM,DDNAME=BCDSDD,                          @
               BUFND=4,BUFNI=3,                                        @
               MACRF=(KEY,SEQ,IN),MF=L
*
ECB      DS    F               EVENT CONROL BLOCK
*
* IKJDAIR PARAMETER AREA
*
DAPARMS  DS    5A              IKJDAIR LIST
DAALLOC  DS    26F                     ....
DAFREE   DS    11F                     ....
*
* IKEFF02 PARAMETER AREA
*
MTPARMS  DS    0F
ZTPLPTR  DC    A(ZTCSECTP)
ZTCPPLP  DC    A(0)
ZTECBP   DC    A(ECB)
ZTRESV1  DC    A(0)
         ORG   ZTRESV1
ZTHIGH   DC    BL1'10000000'
         ORG   ZTRESV1+4
ZTCSECTP DC    V(MSGS)
ZTSW1    DC    BL1'01000000'
ZTWTPSW  EQU   X'02'
ZTREPLYP DC    AL3(0)
ZTSW2    DC    BL1'00100000'
ZTRESV2  DC    AL3(0)
ZTOLDPTR DC    A(0)
ZTEXTRLN DC    AL1(0)
ZTEXTRBF DC    AL3(0)
ZTEXTRL2 DC    AL1(0)
ZTEXTRB2 DC    AL3(0)
ZTMSGID  DC    CL4'TPUT'
ZTINSRTS DC    4A(0)
ZTEND    EQU   *
         ORG   ZTINSRTS
ZTLEN    DS    AL1
         ORG   ZTLEN+1
ZTADDR   DS    AL3
         ORG   ZTEND
*
* CPPL FIELDS AREA
*
PPL      DS    0F              PPL AREA
PPLUPT   DS    F
PPLECT   DS    F
PPLECB   DS    A(PARMECB)
PPLPCL   DC    V(OPERS)
PPLANS   DC    A(PDLPTR)
PPLCBUF  DS    F
PPLVWA   DC    F'0'
PARMECB  DC    F'0'
PDLPTR   DS    F
*
* OUTPUT DATA SET DCB MACRO
*
FILE     DCB   MACRF=(PM),DSORG=PS,DDNAME=FILE,EODAD=ERROR4,           *
               SYNAD=ERROR5,BFTEK=E,LRECL=80,RECFM=FB,BLKSIZE=0 <--DFP
*
* HOME GROWN DSECT FOR THE HSM BCDS DATA SET RECORD
*
HSMDSECT DSECT ,
MCK      DS    CL44
MCH      DS    CL20
         ORG   MCH+2
DSRECORD EQU   X'20'
MCHTYPE  DS    CL1
MCRECORD DS    CL100
         ORG   MCK+84
MCBDBU   DS    F
MCBDSORG DS    H
         ORG   MCK+100
MCBSIZEB DS    F
         ORG   MCK+110
MCBFLGS  DS    CL2
DSVALID  EQU   X'80'
         ORG   MCK+116
MCBTBC   DS    CL2
*
* ASSORTED DSECTS
*
         DCBD  DSORG=PS,DEVD=DA
         IKJEFFMT MTDSECT=YES
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJDAPL
         IKJDAP08
         IKJDAP18
         CVT   DSECT=YES
         END   $HBLIST
