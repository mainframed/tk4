*          DATA SET TSO042     AT LEVEL 004 AS OF 10/31/78
*          DATA SET TSO042     AT LEVEL 003 AS OF 07/13/78
*          DATA SET S051B12L   AT LEVEL 002 AS OF 01/17/78
*          DATA SET S051B12L   AT LEVEL 001 AS OF 01/10/78
DDASDXA  TITLE 'DDASD COMMAND - LIST UNIT STATUS (XA/ESA) VERSION 4.2'
*
*  THIS IS THE DDASD   COMMAND                       ATTR: RE-ENTRANT
*
*   IT DISPLAYS UNIT STATUS FOR ONLINE DASD VOLUMES
*
*
*  K TRUE   13 JULY 78
*
*
*  MODIFIED FOR SHARED DASD & UCBS ABOVE THE 32K LINE BY
*  G PRICE  31 JULY 84
*
*  MODIFIED TO RUN ON MVS/XA ONLY BY
*  G PRICE  07 MAY 86
*
*  MODIFIED TO RUN ON MVS/XA RELEASE 2 AS WELL BY
*  G PRICE  13 APRIL 88
*
*  MODIFIED TO RUN ON MVS/ESA VERSION 4 AS WELL BY
*  G PRICE  05 AUGUST 92
*
         MACRO
&LABEL   CHK   &FIELD,&MASK,&LIT,&PTR=R4,&EXIT=
         LCLA  &LEN
         LCLC  &IDX,&EXADR
&IDX     SETC  '&SYSNDX'
&LEN     SETA  K'&LIT-2
&EXADR   SETC  '&EXIT'
         AIF   (K'&EXIT GT 0).GOTLBL
&EXADR   SETC  'SKP&IDX'
.GOTLBL  ANOP
         SPACE
&LABEL   TM    &FIELD,&MASK     CHECK THE FIELD FOR USE
         BNO   SKP&IDX          BIT(S) DONT MATCH..SKIP IT
         AIF   (&LEN EQ 1).SHORT
         MVC   0(&LEN,&PTR),=C&LIT     MOVE TEXT INTO STRING
         LA    &PTR,&LEN.(&PTR)    BUMP LENGTH TO AFTER STRING
         B     &EXADR           EXIT TO DESIRED LOCATION
         AGO   .MACFIN
.SHORT   ANOP
         MVI   0(&PTR),C&LIT    MOVE IN THE CHARACTER
         LA    &PTR,1(&PTR)     BUMP COUNT
         B     &EXADR              AND EXIT
.MACFIN  ANOP
SKP&IDX  DS    0H
         SPACE 2
         MEND
         EJECT
DDASDXA  CSECT
DDASDXA  AMODE 31
DDASDXA  RMODE 24
         USING DDASDXA,R15              PROGRAM ADDRESSABILITY
         B     START
         DROP  R15
         DC    AL1(13)
         DC    CL13'DDASD--XA+ESA'      XA AND ESA VERSION
START    STM   R14,R12,D12(R13)         SAVE REGISTERS
         LR    R12,R15                  PROGRAM BASE
         USING DDASDXA,R12              PROGRAM ADDRESSABILITY
         LR    R2,R1                    SAVE PARM POINTER
         GETMAIN R,LV=CORENEED          OBTAIN DYNAMIC CORE
         ST    R13,D4(R1)               CHAIN
         ST    R1,D8(R13)                SAVE
         LR    R13,R1                     AREAS
         LR    R11,R13                  CORE ADDR.
         USING CORE,R11
*        LOAD  EP=DEVNAMET        LOAD DEVICE NAME TABLE
         L     R1,CVTPTR
         L     R1,CVTJESCT-CVT(R1)
         L     R1,52(R1)          LOAD JESEDT
*        L     R1,0(R1)           POINT TO DEVICE TYPE TABLE
         ST    R1,DEVADDR         ...AND SAVE ITS ADDRESS
         MVC   EXTRACT1(EXTRACTL),EXTRACT MOVE IN EXTRACT LIST FORM
         LA    R1,ANSWER          LOAD ADDR OF ANSWER
         ST    R1,EXTRACT1          AND SAVE IT IN THE MACRO
         EXTRACT MF=(E,EXTRACT1)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
         SPACE
         MVI   SW1,X'00'                INIT PRINT HDR SWITCH
         XC    DBLW(32),DBLW            CLEAR RESIDUAL DATA
         L     R1,CVTPTR
         LA    R0,40                    CVT "PREFIX" LENGTH
         SLR   R1,R0                    POINT TO 'SP#.#.# '
         CLC   0(5,R1),=C'SP2.1'        MVS/SP V2 R1?
         BNE   SP4CHECK                 NO
         OI    SW1,SP2PNT1              YES
         B     SPNOOKAY
SP4CHECK CLC   0(3,R1),=C'SP4'          MVS/SP V4?
         BL    SPNOOKAY                 NO
         OI    SW1,SP4                  YES
SPNOOKAY LR    R1,R2                    CPPL OR PARM PTR(BATCH)
         LA    R3,PPLAREA               PPL ADDR.
         USING PPL,R3                   PPL ADDRESSABILITY
TSTSETUP TM    TSOFLAG,X'80'        IS IT TSO?
         BO    SETUPTSO             YES-> SETUP FOR PARSE
*                                   NO -> INIT PPL WITH DMY TSO CB
         EJECT
SETUPSTC XC    DMYUPT,DMYUPT        CLEAR OUT OUR UPT
         LA    R1,DMYUPT            LOAD ADDR OF OUR UPT
         ST    R1,PPLUPT            SAVE ADDRESS
         USING UPT,R1
         MVI   UPTSWS,UPTNPRM+UPTMID+UPTWTP
         DROP  R1
         XC    DMYECT,DMYECT        CLEAR OUT OUR ECT
         LA    R1,DMYECT            LOAD ADDR OF OUR ECT
         ST    R1,PPLECT            SAVE ADDRESS
         USING ECT,R1
         MVC   ECTPCMD,=CL8'DDASD '
         MVC   ECTSCMD,=CL8' '
         DROP  R1
         MVI   DMYCMD,C' '
         MVC   DMYCMD+1(L'DMYCMD-1),DMYCMD
         XC    DMYCMD(4),DMYCMD
         LA    R1,DMYCMD            LOAD ADDR OF OUT CMD BUFF
         ST    R1,PPLCBUF           AND SAVE ADDR IN PPL
         L     R2,0(,R2)            (R2) = PTR TO PARM FIELD
         LH    R1,0(,R2)            (R1) = LENGTH OF PARM FIELD
         LTR   R1,R1                ANYONE HOME?
         BZ    GENPPL                NO-> FINISH UP
         BCTR  R1,0                 COMPUTE MACHINE LENGTH
         EX    R1,MOVECMD           MOVE COMMAND IN
         AH    R1,=H'4'             SAY CMD IS LONGER BY 3
         STH   R1,DMYCMD            SAVE LENGTH OF CMD FOR PARSE
         B     GENPPL
MOVECMD  MVC   DMYCMD+4(*-*),2(R2)  EXECUTED CMD -
SETUPTSO DS    0H
         USING CPPL,R1                  CPPL ADDRESS
         MVC   PPLUPT,CPPLUPT           COPY UPT ADDR.
         MVC   PPLECT,CPPLECT           COPY ECT ADDR.
         MVC   PPLCBUF,CPPLCBUF         COPY COMMAND BUFFER ADDR.
         DROP  R1
         EJECT
GENPPL   LA    R0,ECB                   ECB ADDR.
         ST    R0,PPLECB                COPY ECB ADDR.
         MVC   PPLPCL,PCL               COPY PCL ADDR.
         LA    R0,ANS                   ANSWER AREA ADDR.
         ST    R0,PPLANS                COPY ADDR.
         XC    PPLUWA,PPLUWA            ZERO UWA POINTER
         XC    ECB(D4),ECB              CLEAR ECB
         LA    R1,PPL                   PPL ADDR.
         DROP  R3
DOPARSE  CALLTSSR  EP=IKJPARS,MF=(E,(R1))     INVOKE PARSE (FAST!)
         SPACE 2
         LTR   R15,R15                  Q/PARSE FAILURE
         BNZ   PARSFAIL                 YES
         L     R6,ANS                   DSECT ADDR.
         USING IKJPARMD,R6              DSECT ADDRESSABILITY
         LA    R14,VOLUMES              ADDR OF VOLUME LIST
         LA    R7,MSGSTAT               LOAD ADDRESS OF MESSAGE
         ST    R7,MSGADDR               SAVE IT FOR LATER COMPARE
         EJECT
VOLUME   MVI   VOL,BLANK                CLEAR VOL
         MVC   VOL+1(L'VOL-1),VOL       PROPAGATE
         L     R7,D0(R14)               VOLUME SER ADDR.
         LH    R8,D4(R14)               VOLUME SER LENGTH
         ST    R14,PDEPTR               SAVE CURRENT PDE ADDRESS
         BCTR  R8,R0                    COMPUTE MACHINE LENGTH
         LR    R5,R8
         LA    R10,VOL                  VOLUME ADDR.
         EX    R8,MOVE                  MOVE VOLUME SER
         NI    SW1,NOTFOUND             SET NOTFOUND SW FOR GRIPE MSG
         CLC   VOL,ALLVOL               SEE IF ALL OPTION DESIRED
         BNE   STARTSCN                 NO -> GO DO THE SCAN
         OI    SW1,DOALLVOL             YES-> SET SWITCH TO DO ALL
         SPACE 2
STARTSCN L     R7,CVTPTR                CVT ADDR.
         USING CVT,R7                   CVT ADDRESSABILITY
         TM    CVTDCB,X'93'             IS THIS MVS/XA OR LATER?
         BO    RIGHTSYS                 YES, CONTINUE
         LA    R1,NOTXAMSG              NO, POINT TO NOT XA MSG
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         B     RLSE                     PACK UP AND GO HOME....
RIGHTSYS L     R8,CVTUCBA               POINT TO FIRST UCB ADDR.
         DROP  R7                       KILL CVT ADDRESSABILITY
         USING UCBSECT,R8               SET ADDRESSAB TO UCB.
         EJECT
*        XC    LCT,LCT                  CLEAR COUNT
*        MVC   LMAX(2),=H'1000'         SAY ROOM FOR 500 ENTRIES
CYCLE    LTR   R8,R8                    CHECK UCB ADDR.
         BZ    NOTMNTD                  END OF TABLE
         CLI   UCBID,UCBSTND            IS UCB STANDARD?
         BNE   INDEX                    NO, ERROR
         CLI   UCBTBYT3,UCB3DACC        IS IT DIRECT ACCESS?
         BNE   INDEX                    NO
         TM    UCBSTAT,UCBONLI+UCBALOC  IS DEVICE ONLINE OR ALLOCATED?
         BZ    INDEX                    NO (SHOW ALLOCATED BOXED)
         SPACE
*        BAL   LINKREG,CKUNIQUE         GO SEE IF WE HAVE SEEN THIS UCB
*        B     INDEX                     RETURN HERE IF WEVE SEEN IT
         SPACE
         TM    SW1,DOALLVOL             Q/ALL VOLUMES TO BE DISPLAYED
         BO    DOGENMSG                 YES
         EX    R5,COMP                    CHK FOR OUR VOLUME
         BNE   INDEX                    NO
         SPACE
DOGENMSG TM    SW1,HEADING              HAVE WE WRITTEN THE HEADER?
         BZ    WRTFMT                   ->NO-GO WRITE HEADINGS
CALLIT   BAL   LINKREG,GENMSG           GO GENERATE UNIT STATUS MESSAGE
         SPACE
JUSTMSG  LA    R1,MSG                   MESSAGE ADDR.
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         OI    SW1,FOUND                SAY WE FOUND A VOL...
         SPACE
INDEX    L     R8,UCBNXUCB              NEXT UCB ADDR.
         B     CYCLE                    CONTINUE
         SPACE
NOTMNTD  TM    SW1,DOALLVOL             Q/DISPLAY OF ALL VOLUMES WANTED
         BO    RLSE                     YES, END OF LIST..EXIT
         TM    SW1,FOUND                DID WE FIND ONE?
         BO    NEXTPDE                  YEP->NO GRIPE..GET NEXT PDE
         MVC   MSG(WTOMSGL),WTOMSG      INIT MESSAGE AREA
         MVC   MSGNVOL,VMSG             MOVE MESSAGE
         MVC   MSGIVOL,VOL              INSERT VOLUME SERIAL NUMBER
         LA    R1,MSG                   MESSAGE ADDR.
         BAL   LINKREG,PUTMSG           ISSUE NOT FOUND MESSAGE
         SPACE
NEXTPDE  L     R14,PDEPTR               GET PTR TO CURRENT PDE
         CLI   D8(R14),X'FF'
         BE    RLSE
         L     R14,D8(R14)              NEXT PDE ADDR.
         LA    R14,D0(R14)              CLEAR BYTE
         LTR   R14,R14                  Q/ANY PDE
         BNZ   VOLUME                    YES-> GO TRY AGAIN ON NEXT VOL
         EJECT
*.....................................................................*
*     FINIS..FREE UP CORE AND CLEANUP                                 *
*.....................................................................*
RLSE     IKJRLSA ANS
         LR    R1,R11                   CORE ADDR.
         L     R13,D4(R13)
         SPACE 2
THEEND   FREEMAIN R,LV=CORENEED,A=(1)   FREE DYNAMIC CORE
         XC    D16(D4,R13),D16(R13)
         LM    R14,R12,D12(R13)
         XR    R15,R15                  SET RC=0
         BR    R14                      RETURN
         SPACE 2
PARSFAIL LA    R1,PARSMSG               ISSUE ERROR MESSAGE
         BAL   LINKREG,PUTMSG           ISSUE NOT FOUND MESSAGE
         B     THEEND                   GO QUIT
         EJECT
*.....................................................................*
*     WRITE HEADINGS                                                  *
*.....................................................................*
WRTFMT   LA    R1,FMTMSG1               WRITE HEADERS....
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         LA    R1,FMTMSG2
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         OI    SW1,HEADING              SAY WE WROTE THE HEADERS
         B     CALLIT
         SPACE 3
*.....................................................................*
*    LOCAL SUBROUTINE CKUNIQUE   - TO CHECK IF WEVE SEEN THIS UCB     *
*                                  BEFORE                             *
*                                                                     *
*    ENTER WITH R8 = ADDR UCB                                         *
*    EXIT: TO (LINKREG)  IF ALREADY ON LIST                           *
*          TO 4(LINKREG) IF NOT PREVIOUSLY FOUND                      *
*.....................................................................*
*KUNIQUE SR    R10,R10
*OMPLIST CH    R10,LCT                  TOP OF LIST AND STILL NOT SEEN?
*        BNL   ADDLIST                  YES-> SO GO ADD IT TO LIST
*        LA    R3,LIST(R10)             GET ADDRESS OF ENTRY
*        CLM   R8,B'0011',0(R3)         CHK UCB (CH ONLY WORKS IF <32K)
*        BE    0(LINKREG)                SEEN BEFORE--EXIT
*        LA    R10,2(R10)               BUMP LIST PTR
*        B     COMPLIST                 AND GO CHECK AGAIN
*DDLIST  LH    R10,LCT                  LOAD CURRENT TOP OF LIST
*        CH    R10,LMAX                 COMPARE TO MAX # ENTRIES IN LST
*        BNL   4(LINKREG)               NO ROOM-> SAY WE HAVENT SEEN IT
*        STH   R8,LIST(R10)              GOT ROOM->SAVE UCB ADDR
*        LA    R10,2(R10)                BUMP TOP OF LIST
*        STH   R10,LCT                   AND SAVE IT
*        B     4(LINKREG)                GOOD RETURN
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE TO DECODE UCB INFO AND STATUS               *
*                                                                     *
*  BAL  LINKREG,GENMSG                                                *
*                                                                     *
*       R8=ADDR OF UCB                                                *
*                                                                     *
*  OUTPUT ARE FIELDS IN MSG                                           *
*                                                                     *
*.....................................................................*
         SPACE
GENMSG   MVC   MSG(WTOMSGL),WTOMSG      CLEAR OUT MESSAGE
         MVC   MSGUNIT,UCBNAME          COPY UNIT ADDRESS
         MVC   MSGVOL,UCBVOLI           COPY VOLUME SERIAL NUMBER
*
         TM    UCBSTAB,UCBBPRV          IS VOL PRIVATE?
         BNO   DISP11
         MVC   MSGMTYP,VOLPRIV
         B     DSTAT2
DISP11   TM    UCBSTAB,UCBBPUB          IS VOL PUBLIC?
         BNO   DISP12
         MVC   MSGMTYP,VOLPUB
         B     DSTAT2
DISP12   TM    UCBSTAB,UCBBSTR          IS VOL STORAGE?
         BNO   DSTAT2
         MVC   MSGMTYP,VOLSTG
         SPACE
DSTAT2   TM    UCBSTAT,UCBRESV          IS VOLUME RESERVED ?
         BNO   DISP21
         MVC   MSGVSTAT,VOLRSVD
         B     DUSECNT
DISP21   TM    UCBSTAT,UCBPRES          IS VOL PERM RESIDENT?
         BNO   DISP22
         MVC   MSGVSTAT,VOLRESD
         B     DUSECNT
DISP22   MVC   MSGVSTAT,VOLREMOV        SET VOLUME AS REMOVABLE
*
DUSECNT  LH    R10,UCBUSER              GET USE COUNT
         CVD   R10,DBLW                 CONVERT TO PRINT
         MVC   MSGUCNT,EDMASK
         ED    MSGUCNT,DBLW+6           PLACE IT ON THE LINE
         SPACE
DOPNCNT  XR    R10,R10                  CLEAR A REG
         IC    R10,UCBDMCT              GET USE COUNT
         N     R10,X7F                  MASK OFF MOUNT STATUS BIT
         CVD   R10,DBLW                 CONVERT TO PRINT
         MVC   MSGOCNT,EDMASK
         ED    MSGOCNT,DBLW+6           PLACE IT ON THE LINE
         EJECT
*
* DECODE UNIT STATUS
*
         LA    R4,MSGSTAT               LOAD ADDR TO START DECODE
         MVI   MSGSTAT,C'O'             SET IT TO ONLINE
         CHK   UCBSTAT,UCBSYSR,'S',EXIT=CHKSTAT  IS IT SYSRES?
         CHK   UCBSTAT,UCBALOC,'A'               IS IT ALLOC?
         C     R4,MSGADDR               DID WE MOVE THE POINTER?
         BNE   CHKSTAT
         LA    R4,1(R4)                 NO..BUMP POINTER
CHKSTAT  CHK   UCBSTAT,UCBCHGS,',VARY'      VARY ISSUED?
         CHK   UCBSTAT,UCBUNLD,',UNLD'      UNLOAD ISSUED?
         EJECT
         CHK   UCBFLA,UCBDEFER,',DFR'       DEVICE I/O DEFERRED
         CHK   UCBFLA,UCBNRY,',NRDY'        DEVICE NOT READY
         CHK   UCBFLA,UCBBOX,',BOXED'       DEVICE FORCED OFFLINE
         CHK   UCBFLA,UCBCLEAR,',CLRIO',EXIT=IODONE   IOS CLEAR?
         CHK   UCBFLA,UCBHALT,',HIO',EXIT=IODONE      IOS HALT?
         CHK   UCBFLA,UCBSTRT,',SIO'                  IOS START?
         EJECT
IODONE   CHK   UCBFLB,UCBNOPTH,',NOPTH'     NO OPERATIONAL PATHS
         CHK   UCBFLB,UCBHDET,',HOTIO'      HOT I/O DETECTED
         CHK   UCBDMCT,UCBMOUNT,',MTPD'     MOUNT PENDING
         CHK   UCBFL4,UCBWDAV,',MTP'        DAVV MOUNT PENDING
***
***   USE SYSTEM DEVICE NAME TABLE (ELIGIBLE DEVICE TABLE IN XA)
***
***
DUTYPE   L     R1,DEVADDR         ADDRESS OF ELIGIBLE DEVICES TABLE
         TM    SW1,SP4            MVS/SP 4?
         BO    EDTSCAN            YES.. NO EDT TO SCAN
         TM    SW1,SP2PNT1        MVS/SP 2.1?
         BZ    EDTLVL2            NO... LEVEL 2 EDT
         L     R1,0(,R1)          ADDRESS OF DEVICE NAME TABLE
         L     R10,0(,R1)         NUMBER OF ENTRIES
         LA    R1,4(,R1)          ADDRESS OF FIRST ENTRY
EDTSCAN  MVI   MSGSHARD,C' '      CLEAR FLAG
         MVC   DBLW(4),UCBTYP     GET THE DEVICE TYPE
         TM    UCBTBYT2,UCBRR     IS THIS A SHARED DASD?
         BZ    DEVSHROK           NO
         MVI   MSGSHARD,C'*'      YES... FLAG IT AS SUCH
         XI    DBLW+1,UCBRR       TURN OFF FOR COMPARE
DEVSHROK TM    SW1,SP4            MVS/SP 4?
         BZ    DEVLP              NO... SCAN THE EDT MODULE
         CLC   DBLW(4),DBLW+8     SAME DEVICE TYPE AS PREVIOUSLY?
         BNE   DNEWTYPE           NO... DETERMINE ITS UNIT NAME
         LA    1,DBLW+12          YES.. POINT TO THE UNIT NAME
         B     DEVFND             GO LOAD IT INTO THE DISPLAY LINE
DNEWTYPE MVC   DBLW+8(4),DBLW     SAVE THIS DEVICE TYPE
         EDTINFO RTNUNIT,         REQUEST GENERIC UNIT NAME            +
               DEVTYPE=DBLW,      INPUT DEVICE UCB TYPE BYTES          +
               OUTUNIT=DBLW+16,   OUTPUT CHARACTER GENERIC UNIT NAME   +
               MF=(E,EDTINFOL)    KEEP CODE FULLY RE-ENTRANT
         LTR   15,15              UNIT NAME SUCCESSFULLY DETERMINED?
         BNZ   DTYPFAIL           YES.. GO PUT IT INTO THE DISPLAY LINE
         LA    1,DBLW+12          POINT TO THE RESULTANT UNIT NAME
         B     DEVFND             PROCEED WITH FURTHER PROCESSING
DEVLP    CLC   DBLW(4),12(R1)      IS THIS THE DEVICE TYPE?
         BE    DEVFND             YES... BR TO SAVE DEVICE TYPE
         LA    R1,32(R1)          NO... INCR TO NEXT TABLE ENTRY
         BCT   R10,DEVLP          LOOP UNTIL END OF TABLE
DTYPFAIL MVC   MSGUTYPE,=C'????  ' SAY WE DONT KNOW DEVICE TYPE
         BR    LINKREG
EDTLVL2  L     R1,28(,R1)         POINT TO LOOK UP VALUE SECTION
         L     R10,8(,R1)         GET NUMBER OF UNIT NAMES
         LA    R1,12(,R1)         POINT TO FIRST ENTRY MINUS FOUR
         B     EDTSCAN
*
DEVFND   MVC   MSGUTYPE,4(R1)           MOVE UNIT TYPE TO PRINT LINE
*
         BR    LINKREG
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES RXX FOR WORK
*
LINKREG  EQU   9
RXX      EQU   10
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    RXX,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,RXX)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    RXX,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
         L     R1,0(,RXX)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,RXX)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         SPACE 2
         EJECT
*.....................................................................*
*        EXECUTED INSTRUCTIONS                                        *
*.....................................................................*
         SPACE 2
MOVE     MVC   D0(D0,R10),D0(R7)        EXECUTED INSTRUCTION
COMP     CLC   VOL(0),UCBVOLI           EXECUTED INSTRUCTION
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE
EXTRACT  EXTRACT *-*,'S',FIELDS=(TSO),MF=L
EXTRACTL EQU   *-EXTRACT
         SPACE
WTOMSG   WTO   '                                                       X
                       ',ROUTCDE=(4,11),MF=L LEN=63
WTOMSGL  EQU   *-WTOMSG
PARSMSG  WTO   'DDASD - PARSE FAILED',ROUTCDE=(4,11),MF=L
FMTMSG1  WTO   'VOLUME UNIT DEVICE VOLUME    USE OPN UNIT   ',         X
               ROUTCDE=(4,11),MF=L
FMTMSG2  WTO   'SERIAL ADDR TYPE   STATE     CNT CNT STATUS ',         X
               ROUTCDE=(4,11),MF=L
NOTXAMSG WTO   'THIS VERSION OF DDASD ONLY WORKS ON MVS/XA  ',         X
               ROUTCDE=(4,11),MF=L
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE
PCL      DC    A(PARSECL)
TYP3330V DC    XL4'30582009'
X7F      DC    XL4'0000007F'
EDMASK   DC    XL4'40202120'
ALLVOL   DC    CL6'ALL'
VMSG     DC    CL31'NO VOLUME FOUND TO MATCH       '
VOLPRIV  DC    CL4'PVT/'
VOLPUB   DC    CL4'PUB/'
VOLSTG   DC    CL4'STG/'
*
VOLRSVD  DC    CL5'RSVED'
VOLRESD  DC    CL5'RSDNT'
VOLREMOV DC    CL5'REMOV'
         SPACE
         LTORG
         EJECT
*
* PROGRAM  E Q U A T E S
*
R0       EQU   0             WORK-MACROS
R1       EQU   1             WORK-MACROS
R2       EQU   2             WORK
R3       EQU   3             WORK
R4       EQU   4             WORK
R5       EQU   5             LENGTH OF CURRENT VOLSER
R6       EQU   6             IKJPARMD DSECT POINTER
R7       EQU   7             UCB LIST INDEX POINTER
R8       EQU   8             ADDRESS OF CURRENT UCB
R9       EQU   9             LINKREG FOR SUBROUTINE USAGE
R10      EQU   10            WORK REGISTER
R11      EQU   11            CORE DSECT ADDRESSABILITY
R12      EQU   12            PROGRAM BASE REGISTER
R13      EQU   13            SAVE AREA POINTER
R14      EQU   14            WORK - MACROS
R15      EQU   15            WORK - MACROS
*
D0       EQU   0
D1       EQU   1
D2       EQU   2
D4       EQU   4
D8       EQU   8
D12      EQU   12
D16      EQU   16
*
BLANK    EQU   C' '
HEADING  EQU   X'01'
FOUND    EQU   X'02'
NOTFOUND EQU   255-FOUND
DOALLVOL EQU   X'04'
SP2PNT1  EQU   X'08'
SP4      EQU   X'10'
CHARZERO EQU   C'0'
         EJECT
         PRINT NOGEN
PARSECL  IKJPARM
VOLUMES  IKJIDENT 'VOL',LIST,                                          X
               MAXLNTH=6,FIRST=ALPHANUM,OTHER=ALPHANUM,                X
               HELP=('VOL SERS FIND UCB STATUS OR ''ALL'' ',           X
               'VOL MAY BE COMPLETE OR GENERIC VOLUME SERIAL #'),      X
               DEFAULT='ALL   '
         IKJENDP
         PRINT GEN
         EJECT
         IKJCPPL
         SPACE 2
         IKJPPL
PPLL     EQU   *-PPL
         EJECT
         IKJECT
         EJECT
         IKJUPT
         EJECT
         CVT   DSECT=YES
         EJECT
UCBSECT  DSECT
         IEFUCBOB
         EJECT
*
* DYNAMIC WORK AREA FOR PROGRAM
*
CORE     DSECT
         DS    18F
MSGADDR  DS    F
DEVADDR  DS    F
ANS      DS    F
ECB      DS    F
PDEPTR   DS    F
PPLAREA  DS    (PPLL/4)F
MSG      DS    CL84           WTO MESSAGE AREA + PADDING
MSGL     EQU   *-MSG
MSGEND   EQU   *
*
         ORG   MSG+4
MSGVOL   DS    CL6                               2 MSGVOL CHAR(6)
         DS    CL1                               2 *      CHAR(1)
MSGUNIT  DS    CL3                               2 MSGUNIT CHAR(3)
         DS    CL1
MSGSHARD DS    CL1
MSGUTYPE DS    CL6
         DS    CL1
MSGMTYP  DS    CL4
MSGVSTAT DS    CL5
MSGUCNT  DS    CL4
MSGOCNT  DS    CL4
         DS    CL1
MSGSTAT  DS    CL21
*
         ORG   MSG+4                    NEW OVERLAY FOR ERROR MESSAGE
MSGNVOL  DS    CL31
         ORG   MSG+29                     FOR NO VOLUME FOUND
MSGIVOL  DS    CL6
*
         ORG   MSGEND
*
VOL      DS    CL6                      TO SAVE THE TARGET FOR COMPARES
SW1      DS    1C
TSOFLAG  DS    X                   ='80' IF TSO. '00' IF NOT TSO
ANSWER   DS    F                   ADDRESS POINTER FOR EXTRACT
DBLW     DS    4D
EXTRACT1 EQU   DBLW
         EDTINFO MF=(L,EDTINFOL)        RESERVE SPACE FOR EDTINFO PLIST
         DS    0D
DMYECT   DS    XL60                     DUMMY ECT FOR BATCH
         DS    0D
DMYUPT   DS    CL24                     DUMMY UPT FOR BATCH
         DS    0D
DMYCMD   DS    CL124                    DUMMY COMMAND FOR BATCH
         SPACE 2
*CT      DS    H                        TO REMEMBER COUNT
*MAX     DS    H                        TO REMEMBER UCB MAX ADDR
*IST     DS    500H                     TO REMEMBER EACH UCB ADDR
CORENEED EQU   *-CORE
*
         END
