*          DATA SET $FREEALL   AT LEVEL 001 AS OF 5 FEB 84
*          DATA SET CBT348     AT LEVEL 001 AS OF 07/12/83
*          DATA SET CBT348     AT LEVEL 001 AS OF 09/12/76
         SPACE 2
*
*        $FREEALL IS RE-ENTRANT, REFRESHABLE AND SERIALLY REUSABLE.
*        $FREEALL HAS AMODE=31 AND RMODE=ANY.
*        $FREEALL USES MACROS FROM SYS1.MACLIB.
*
*        ONE FEATURE THAT SEPARATES THIS PROGRAM FROM OTHER
*        FREEALL-TYPE COMMAND PROCESSORS IS THE DISTINCT LISTS
*        OF EXEMPT DDNAMES FOR TERMINAL AND NON-TERMINAL
*        ALLOCATED FILES.
*
         SPACE 2
*
*        CHANGES ON 22 MAY 1992 BY GREG PRICE:
*        - ADD SYSEXEC TO NON-TERMINAL DD TABLE.
*        - MAKE CODE FULLY RE-ENTRANT.
*        - CHANGE GETMAIN/FREEMAIN TO USE SVC 120.
*        - IF DARC NOT ZERO THEN UNCONDITIONALLY
*          DISPLAY MESSAGE WITH THE DARC INCLUDED.
*        - MAKE AMODE=31 TO HANDLE SWA DATA AREAS
*          ABOVE THE 16 MEGABYTE LINE.
*        - MAKE RMODE=ANY SINCE TPUT BUFFER IS IN
*          GETMAINED AREA WHICH IS BELOW THE LINE.
*        - ALLOW FOR DDNAME PREFIX SPECIFICATION
*          BY ONLY COMPARING BYTES BEFORE AN
*          ASTERISK IMBEDDED IN THE 8-BYTE TABLE
*          ENTRY - AND REMOVE INLINE 'ISP' TEST.
*        - ADD ISP*, ADM* AND DSQ* TO NON-TERMINAL
*          EXEMPT DDNAME TABLE.
*
*        CHANGES ON 18 AUGUST 1993 BY GREG PRICE:
*        - DO NOT ATTEMPT TO FREE A FREED DD SLOT.
*
         TITLE '$FREEALL -   FREEALL COMMAND PROCESSOR FOR MVS'
$FREEALL CSECT
$FREEALL AMODE 31
$FREEALL RMODE ANY
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING $FREEALL,R12
         LR    R8,R1             LOAD CPPL ADDR
         LA    R0,LDYNAMIC       GET LENGTH OF DYNAMIC AREA
         GETMAIN RU,LV=(0),LOC=BELOW  CAN'T HAVE ABOVE FOR TPUT BUFFER
         LR    R11,R1
         USING WORKAREA,R11
         LA    R9,SAVEAREA
         ST    R13,SAVEAREA+4
         ST    R9,8(,R13)
         LR    R7,R13            SAVE REG 13 FOR A WHILE
         LR    R13,R9
         MVC   DAPB(DAPB18L),DAPB18C         INITIALIZE DAPB
         MVC   FREEMSG(FREEMSGL),FREEMSGC    INITIALIZE MESSAGE
         MVI   LISTFLAG,C'N'                 NOLIST IS THE DEFAULT
         L     R1,4(0,R8)        UPT ADDR
         L     R2,12(0,R8)       ECT ADDR
         MVC   17(3,R7),1(R2)    MOVE PREVIOUS RETURN CODE
         MVI   16(R7),X'00'      TO SAVE AREA
         LA    R3,ECB            ECB ADDR
         L     R4,8(0,R8)        PSCB ADDR
         LA    R5,DAPB           PARAMETER BLOCK ADDR
         STM   R1,R5,DAPL        SET DYNAMIC ALLOCATION PARM LIST
         SR    R7,R7
         ST    R7,ECB            CLEAR ECB
         SPACE 2
         L     R8,0(0,R8)        POINT TO COMMAND BUFFER
         LH    R1,2(0,R8)        GET LENGTH OF PARSING DONE
         LA    R1,4(0,R1)        GET OFFSET INTO COMMAND BUFFER
         CH    R1,0(0,R8)        COMPARE WITH COMMAND BUFFER LENGTH
         BNL   FNDCHAIN          IF NO OPERAND GO FIND DSAB CHAIN
         LA    R1,0(R8,R1)       GET ADDRESS OF OPERAND
         MVC   LISTFLAG,0(R1)    MOVE FIRST CHAR TO FLAG BYTE
         OI    LISTFLAG,C' '     CONVERT TO UPPER CASE
         EJECT
FNDCHAIN L     R8,16             CVT
         L     R8,0(0,R8)        TCB WORDS
         L     R8,4(0,R8)        CURRENT TCB
         L     R8,180(0,R8)      JSCB
         L     R8,320(0,R8)      QDB FOR DSAB CHAIN
         L     R2,12(0,R8)       FIRST DSAB
         B     FRSTDSAB
NEXTDSAB ICM   R2,15,SAVEADDR    LOAD NEXT DSAB ADDRESS
         BZ    RETURN            END OF DSAB CHAIN
FRSTDSAB MVC   SAVEADDR,4(R2)    SAVE THE ADDRESS OF THE NEXT DSAB
         TM    34(R2),X'80'      DATA SET DYNAMICALLY ALLOCATED?
         BZ    NEXTDSAB          NO - DON'T FREE IT
         TM    34(R2),X'01'      DATA SET IN USE?
         BNZ   NEXTDSAB          YES - DON'T FREE IT
         CLC   =H'0',14(R2)      DATA SET OPEN?
         BNZ   NEXTDSAB          YES - DON'T FREE IT
         TM    24(R2),X'08'      DATA SET A PRIVATE CATALOG?
         BNZ   NEXTDSAB          YES - DON'T FREE IT
         L     R8,16(R2)         TIOT DD ENTRY
         IC    R9,0(0,R8)        DD ENTRY LENGTH
         LTR   R9,R9             LENGTH EQUAL ZERO?
         BZ    NEXTDSAB          YES, END OF TIOT  (SHOULDN'T HAPPEN)
         CLI   4(R8),C' '        CONCATENATED DDNAME?
         BE    NEXTDSAB          YES, DAIR WON'T FREE
         CLI   4(R8),0           FREED DD SLOT?
         BE    NEXTDSAB          YES, SOMEONE ELSE GOT HERE FIRST!
         EJECT
         BAL   R6,RESERVED       GO SEE IF THIS NAME RESERVED
         B     NEXTDSAB          RESERVED, DO NOT FREE
         MVC   DA18DDN(8),4(R8)  MOVE IN DDNAME
         MVC   FREENAME(8),4(R8) MOVE DDNAME TO MSG
         MVC   FREETEXT,GOODMSG  HOPE FOR THE BEST
         LA    R1,DAPL           LOAD PARM LIST ADDR
         LINK  EP=IKJDAIR        GO TO DYNAMIC ALLOCATION
         LTR   R15,R15           TEST RETURN CODE
         BNZ   FREEFAIL          BAD RETURN
         CLC   =H'0',DA18DARC    TEST RETURN CODE
         BNE   FREEFAIL          BAD RETURN
         CLI   LISTFLAG,C'L'     LISTING REQUESTED?
         BNE   NEXTDSAB          NO
         LA    R0,FREEMSGL       LOAD MSG LENGTH
FREEDONE LA    R1,FREEMSG        LOAD MSG ADDRESS
         TPUT  (1),(0),R         EDIT,WAIT,NOHOLD
         B     NEXTDSAB          GO GET NEXT
FREEFAIL UNPK  FREEDARC(5),DA18DARC(3)
         TR    FREEDARC(4),HEX-240
         MVI   FREEDARC+4,C' '   SHOW DARC IN HEX
         LA    R0,FAILMSGL       LOAD MSG LENGTH
         TM    DA18FLG,DA18FPE   WAS THE FUNCTION PERFORMED?
         BO    FREEDONE          YES, FORCE DISPLAY OF MESSAGE
         MVC   FREETEXT+1(12),=CL12'COULD NOT BE'
         B     FREEDONE          NO, ALTER TEXT BEFORE DISPLAY
         SPACE 3
RETURN   LR    R1,R13            DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC       SIZE OF AREA
         L     R13,4(,R13)       PREV SAVE AREA
         FREEMAIN RU,LV=(0),A=(1)
         LM    R14,R12,12(R13)   RESTORE REGS
         SLR   R15,R15           ZERO RETURN CODE
         BR    R14               RETURN
         EJECT
RESERVED LA    R3,RESTABLE       RESERVED NAME TABLE ADDR
         TM    3(R8),X'20'       IS THIS A TERMFILE?
         BZ    RESCHK            NO, START COMPARISONS
         LA    R3,TRMTABLE       RESERVED NAME TABLE ADDR FOR TERMFILES
RESCHK   LA    R1,9(,R3)         POINT PAST THIS TABLE ENTRY
         TRT   0(8,R3),STARTAB   PROCESS ENTRY TRUNCATED BY ASTERISK
         SLR   R1,R3             GET LENGTH OF ENTRY INCLUDING ASTERISK
         BCTR  R1,0              GET LENGTH OF ENTRY TO TEST
         BCTR  R1,0              GET LENGTH CODE FOR EXECUTE
         EX    R1,RESCLC         DDNAME IN TABLE?
         BER   R6                YES, DO NOT FREE
         LA    R3,8(0,R3)        NEXT TABLE ENTRY
         CLI   0(R3),X'00'       ZERO ENTRY?
         BNE   RESCHK            NO, GO CHECK NEXT
         B     4(0,R6)           YES, END OF TABLE, GO FREE DD
RESCLC   CLC   0(0,R3),4(R8)     <<< EXECUTED >>>
         SPACE 3
*                  THE DDNAME TABLES BELOW MUST END WITH A NULL ENTRY.
*                  ENTRIES MUST NOT BEGIN WITH AN ASTERISK.
RESTABLE DS    0D
         DC    CL8'SYSPROC'      CLIST
         DC    CL8'SYSHELP'      HELP
         DC    CL8'SYSEXEC'      REXX
         DC    CL8'ISP*'         ISPF
         DC    CL8'ADM*'         GDDM
         DC    CL8'DSQ*'         QMF
         DC    5D'0'
TRMTABLE DS    0D
         DC    CL8'SYSPRINT'
         DC    CL8'SYSIN'
         DC    CL8'FT05F001'
         DC    CL8'FT06F001'
         DC    CL8'SYSTERM'
         DC    3D'0'
         EJECT
         LTORG
FREEMSGC DC    C'DDNAME '
         DC    CL8' '
GOODMSG  DC    C' SUCCESSFULLY FREED'
         DC    C' - DARC='
         DC    C'XXXX '
         SPACE 3
DAPB18C  DS    0F
         DC    X'0018'           DA18CD
         DC    H'0'              DA18FLG
         DC    H'0'              DA18DARC
         DC    H'0'              DA18CTRC
         DC    A(0)              DA18PDSN
         DC    CL8' '            DA18DDN
         DC    CL8' '            DA18MNM
         DC    CL2' '            DA18SCLS
         DC    X'00'             DA18DSP2
         DC    X'10'             DA18CTL - RLSE PERM ALLOC
         DC    CL8' '            DA18JBNM (RESERVED)
DAPB18L  EQU   *-DAPB18C         LENGTH
         DS    0D
         SPACE
STARTAB  DC    XL256'00'
         ORG   STARTAB+C'*'
         DC    C'*'
         ORG
HEX      DC    CL16'0123456789ABCDEF'
         SPACE
         DS    0D                END OF CSECT
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F
         SPACE
SAVEADDR DS    F                 SAVE AREA FOR ADDRESS OF NEXT DSAB
         SPACE
DAPB     DS    0F
DA18CD   DS    XL2
DA18FLG  DS    H
DA18FPE  EQU   X'80'             FUNCTION PERFORMED BUT CHECK DARC
DA18DARC DS    H
DA18CTRC DS    H
DA18PDSN DS    A
DA18DDN  DS    CL8
DA18MNM  DS    CL8
DA18SCLS DS    CL2
DA18DSP2 DS    X
DA18CTL  DS    X
DA18JBNM DS    CL8
         DS    0D
DAPL     DS    5F
ECB      DS    F
         SPACE
FREEMSG  DS    CL7               C'DDNAME '
FREENAME DS    CL8
FREETEXT DS    CL19              C' SUCCESSFULLY FREED'
*                                C' COULD NOT BE FREED'
FREEMSGL EQU   *-FREEMSG
         DS    CL8               C' - DARC='
FREEDARC DS    CL5               C'XXXX '
FAILMSGL EQU   *-FREEMSG
         SPACE
LISTFLAG DS    C                 NOLIST IS THE DEFAULT
         SPACE
         DS    0D
LDYNAMIC EQU   *-WORKAREA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
