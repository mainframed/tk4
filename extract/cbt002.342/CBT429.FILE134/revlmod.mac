REVLMOD  TITLE ' R E V L M O D '
***********************************************************************
*                                                                     *
*         REVLMOD - RECONSTRUCT LOAD MODULES INTO PROGRAM PDS         *
*                   FROM CARD IMAGE INPUT WRITTEN BY REVIEW           *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY: GREG PRICE
*        DATE WRITTEN: JUNE 6 1999 FOR REVIEW R31.0.
*        DATE UPDATED: JUNE 6 1999.
*        ATTRIBUTES: RE-ENTRANT. (AMODE AND RMODE MUST BE 24.)
*        PURPOSE: REVIEW CAN OFFLOAD LOAD MODULES TO A SEQUENTIAL
*                 FILE WITH FIXED-LENGTH 80-BYTE RECORDS.  THIS
*                 PROGRAM CAN READ THIS SEQUENTIAL FILE TO
*                 RECONSTRUCT THE ORIGINAL LOAD MODULES.
*                 ALTHOUGH THIS PROGRAM CAN BE CONSIDERED TO BE
*                 BATCH UTILITY, IT IS ANTICIPATED THAT IT WILL
*                 NORMALLY BE INVOKED FROM THE REVIEW TSO COMMAND
*                 PROCESSOR VIA THE =PDSLOAD SUBCOMMAND OF REVIEW.
*                 IT WAS WRITTEN TO PERMIT THE TRANSFER OF LOAD
*                 MODULES BETWEEN DISCONNECTED OS-FAMILY MAINFRAME
*                 SYSTEMS WHICH MAY NOT HAVE THE TSO/E RECEIVE AND
*                 TRANSMIT COMMANDS AVAILABLE, SO THAT THE AUTHOR
*                 DOES NOT HAVE TO MAINTAIN OBJECT DECK COLLECTIONS
*                 TO SUPPORT NON-IBM MVS-LIKE SYSTEMS.
*        WARNING: ALTHOUGH THE SEQUENTIAL INPUT MAY LOOK LIKE INPUT
*                 FOR IEBUPDTE, IT IS NOT SUITABLE FOR PROCESSING
*                 BY THE IEBUPDTE OR PDSLOAD PROGRAMS.  THE DATA
*                 FORMAT IS KNOWN ONLY BY THE MEMRDWRT ROUTINE OF
*                 THE REVIEW2 CSECT AND THIS PROGRAM.  THE CONTROL
*                 STATEMENT FORMAT IS KNOWN ONLY BY THE REVOFFLD
*                 CSECT AND THIS PROGRAM.
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
REVLMOD  CSECT
REVLMOD  AMODE 24                  AMODE 31 WOULD LIMIT REVLMOD TO MVS
REVLMOD  RMODE 24
         USING REVLMOD,R15
         B     @LOADMOD
         DROP  R15                 REVLMOD
         DC    AL1(23),CL23'REVLMOD R31.0 &SYSDATC '
@SIZE    DC    0F'0',AL1(2),AL3(@DATAL)
         DC    C'<DYN'             FLAG DYNAMIC AREA SUBPOOL AND SIZE
@LOADMOD STM   R14,R12,12(R13)
         LR    R11,R15
         USING REVLMOD,R11
         LR    R2,R1               COPY PLIST ADDRESS
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R4,R1
         LA    R5,@BUFFER-@DATA    NO NEED TO CLEAR BPAM BUFFER
         SLR   R15,R15             PROBABLY A NO-OP
         MVCL  R4,R14              CLEAR WORKING-STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING @DATA,R13
         MVI   MEMSEL,C'*'         SELECT ALL MEMBERS BY DEFAULT
         MVC   MEMSEL+1(7),MEMSEL
         L     R1,0(,R2)           POINT TO PARM
         LH    R0,0(,R1)           GET LENGTH OF PARM
         LTR   R0,R0
         BZ    PARMX
         LA    R1,2(,R1)           POINT TO PARM DATA
         CH    R0,=H'3'            IS PARM LONG ENOUGH FOR NEW?
         BL    PARMM               NO, BYPASS COMPARE
         CLC   0(3,R1),=C'NEW'     IS IT NEW, AS PER IEBUPDTE?
         BNE   PARMM               NO
         LA    R1,3(,R1)           YES, TOLERATE BUT IGNORE
         SH    R0,=H'3'
         BZ    PARMX
         CLI   0(R1),C','
         BNE   PARMERR
         LA    R1,1(,R1)           POINT PAST COMMA
         SH    R0,=H'1'
         BZ    PARMX
PARMM    CH    R0,=H'3'            LONG ENOUGH FOR S(X ?
         BL    PARMERR             NO
         CLC   0(2,R1),=C'S('      IS IT S( ?
         BNE   PARMERR             NO, BRANCH
         LA    R1,2(,R1)           YES, POINT PAST PAREN
         SH    R0,=H'2'
         LA    R15,MEMSEL
         LA    R14,MEMSEL+8
PARMML   CLI   0(R1),C')'
         BE    PARMX
         CR    R15,R14             IS MEMBER NAME TOO LONG?
         BNL   PARMMIG             YES, IGNORE EXTRA CHARACTERS
         MVC   0(1,R15),0(R1)      COPY ONE BYTE OF MEMBER NAME
         LA    R15,1(,R15)
         LA    R1,1(,R1)
PARMMIG  BCT   R0,PARMML
         B     PARMX
PARMERR  WTO   'REVLMOD - INVALID PARAMETER IGNORED',ROUTCDE=(11)
PARMX    DS    0H
         EJECT
************************************************************
*                                                          *
*        INITIALIZE THE DCBS                               *
*                                                          *
************************************************************
         SPACE
         MVC   SYSIND(SYSINL),SYSINS
         MVC   SYSUT2D(SYSUT2L),SYSUT2S
         MVC   UT2DECBD(UT2DECBL),UT2DECBS
         TM    0(R2),X'80'         ANY DDNAME OVERRIDES?
         BO    PARM2X              NO, ONLY ONE PARAMETER
         L     R1,4(,R2)           POINT TO SECOND PARAMETER
         LA    R1,0(,R1)           ENSURE ADDRESS FORMAT
         LTR   R1,R1               ZERO POINTER?
         BZ    PARM2BAD            YES, NO OVERRIDES SUPPLIED
         CLI   0(R1),0             LENGTH LESS THAN 256?
         BNE   PARM2BAD            NO
         TM    1(R1),7             MULTIPLE OF EIGHT?
         BNZ   PARM2BAD            NO
         CLI   1(R1),8*5           SYSIN SLOT PRESENT?
         BL    PARM2X              NO
         CLI   34(R1),0   (8*4+2)  SYSIN OVERRIDE SPECIFIED?
         BE    PARM2I              NO
         MVC   SYSIND+40(8),34(R1) YES, COPY IT INTO DCB
PARM2I   CLI   1(R1),8*9           SYSUT2 SLOT PRESENT?
         BL    PARM2X              NO
         CLI   66(R1),0   (8*8+2)  SYSUT2 OVERRIDE SPECIFIED?
         BE    PARM2X              NO
         MVC   SYSUT2D+40(8),66(R1)  YES, COPY IT INTO DCB
         B     PARM2X              DDNAME OVERRIDE PROCESSING COMPLETE
PARM2BAD WTO   'REVLMOD - INVALID DDNAME OVERRIDE PARAMETER IGNORED',  +
               ROUTCDE=(11)
PARM2X   DS    0H
         SPACE 2
************************************************************
*                                                          *
*        OPEN THE DCBS                                     *
*                                                          *
************************************************************
         SPACE
         MVI   WORK,X'80'
         OPEN  (SYSIND,INPUT),MF=(E,WORK)
         MVI   WORK,X'80'
         OPEN  (SYSUT2D,OUTPUT),MF=(E,WORK)
         SPACE 2
************************************************************
*                                                          *
*        ACQUIRE INPUT AND WRITE MEMBER CONTENTS           *
*                                                          *
************************************************************
         SPACE
         USING PDS2,STOWENTY
         USING IHADCB,SYSUT2D
         MVC   MAXBLKSI,DCBBLKSI   REMEMBER MAXIMUM BLOCK SIZE
READLOOP EQU   *
         SLR   R3,R3               NOTHING TO PROCESS YET
         SLR   R10,R10             CLEAR ERROR NUMBER
DATALOOP EQU   *
         GET   SYSIND,INREC
         LA    R0,80               GET MAXIMUM DATA LENGTH IN RECORD
         LA    R5,INREC            POINT TO START OF POSSIBLE DATA
         LTR   R3,R3               CURRENTLY PROCESSING A BLOCK?
         BP    COPYCARD            YES
         CLC   =C'./',INREC        CONTROL RECORD?
         BE    CNTLREC             YES
         TM    FLAGS,CALIAS        PROCESSING ALIAS?
         BO    NOSTOW              YES, MISSING STOW
         LA    R10,1               SET ERROR NUMBER
         TM    FLAGS,CADD+CSTOW    CURRENTLY PROCESSING A MEMBER?
         BNM   DATAEROR            NO, DATA FORMAT ERROR SO QUIT
         LA    R4,@BUFFER          NO, RESET OUTPUT BUFFER CURSOR
         LA    R10,2               SET ERROR NUMBER
         ICM   R3,15,INREC         GET LENGTH OF NEW BLOCK
         BNP   DATAEROR            NONSENSICAL, SO QUIT
         LA    R10,3               SET ERROR NUMBER
         CH    R3,MAXBLKSI         GREATER THAN MAXIMUM?
         BH    DATAEROR            YES, SO QUIT
         STH   R3,DCBBLKSI         SET BLOCK LENGTH FOR ACCESS METHOD
         LA    R0,76               GET MAXIMUM DATA LENGTH IN RECORD
         LA    R5,INREC+4          POINT TO START OF POSSIBLE DATA
COPYCARD LR    R2,R3               NO, GET LENGTH OF THIS BLOCK
         CR    R2,R0               IS BLOCK WITHIN THIS CARD IMAGE?
         BNH   GOTDATLN            YES
         LR    R2,R0               NO, SO GET LENGTH WHICH IS
GOTDATLN SR    R3,R2               UPDATE BYTES TO GO FOR THIS BLOCK
         BCTR  R2,0                DECREMENT FOR EXECUTE
         EX    R2,PUTCHUNK         MOVE INPUT DATA TO OUTPUT BUFFER
         LA    R4,1(R2,R4)         ADJUST OUTPUT BUFFER CURSOR
         LTR   R3,R3               NEED MORE DATA FOR THIS BLOCK?
         BP    DATALOOP            YES, GO GET SOME
         TM    FLAGS,CSEL          IS THIS MEMBER SELECTED?
         BZ    READLOOP            NO, SKIP THE WRITE
         WRITE UT2DECBD,SF,SYSUT2D,@BUFFER,'S',MF=E
         CHECK UT2DECBD            WAIT FOR THE WRITE
         NOTE  SYSUT2D             GET THE WRITTEN BLOCK ADDRESS
         ST    R1,TTRZ             SAVE IT FOR LATER
         B     READLOOP            GO GET MORE INPUT
PUTCHUNK MVC   0(0,R4),0(R5)       <<< EXECUTED >>>
         SPACE 2
************************************************************
*                                                          *
*        PROCESS CONTROL STATEMENTS                        *
*                                                          *
************************************************************
         SPACE
CNTLREC  LA    R10,4               SET ERROR NUMBER
         CLI   INREC+2,C' '        DOES THE CONTROL STMT HAVE A LABEL?
         BNE   DATAEROR            YES, DATA FORMAT ERROR SO QUIT
         CLC   INREC+3(9),=C'ADD NAME='
         BE    CTLADD
         CLC   INREC+3(6),=C'ENDUP '
         BE    CTLENDUP
         LA    R10,1               SET ERROR NUMBER
         TM    FLAGS,CADD          CURRENTLY PROCESSING A MEMBER?
         BZ    DATAEROR            NO, DATA FORMAT ERROR SO QUIT
         CLC   INREC+3(10),=C'STOW DATA='
         BE    CTLSTOW
         TM    FLAGS,CALIAS        PROCESSING ALIAS?
         BO    NOSTOW              YES, MISSING STOW
         CLC   INREC+3(6),=C'NOTE1 '
         BE    CTLNOTE1
         CLC   INREC+3(6),=C'NOTE2 '
         BE    CTLNOTE2
         CLC   INREC+3(11),=C'ALIAS NAME='
         BE    CTLALIAS
         LA    R10,5               SET ERROR NUMBER
         B     DATAEROR            UNKNOWN CONTROL STATEMENT SO QUIT
         SPACE
CTLADD   MVC   PDS2NAME,INREC+12   COPY MEMBER NAME
         OI    FLAGS,CADD          ./ ADD PROCESSED
         NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH NEW MEMBER
         NI    FLAGS,255-CSEL      RESET SELECTION FLAG
         MVI   TTR1+3,X'FF'        FLAG TTR1 NOT YET SET
         MVI   TTR2+3,X'FF'        FLAG TTR2 NOT YET SET
         LA    R3,STOWENTY         POINT TO MEMBER NAME
         LA    R4,MEMSEL           POINT TO SELECTION MASK
         LA    R0,8                GET MEMBER NAME LENGTH
MASKLOOP CLI   0(R4),C'*'          GENERIC CHARACTER MATCH?
         BE    MASKNEXT            YES, THIS CHARACTER MATCHES
         CLI   0(R4),C'?'          GENERIC CHARACTER MATCH?
         BE    MASKNEXT            YES, THIS CHARACTER MATCHES
         CLI   0(R4),C'%'          GENERIC CHARACTER MATCH?
         BE    MASKNEXT            YES, THIS CHARACTER MATCHES
         CLC   0(1,R4),0(R3)       SPECIFIC CHARACTER MATCH?
         BNE   READLOOP            NO, UNSUCCESSFUL MATCH
MASKNEXT LA    R3,1(,R3)           POINT TO NEXT BYTE OF ITEM
         LA    R4,1(,R4)           POINT TO NEXT BYTE OF MASK
         BCT   R0,MASKLOOP         TEST NEXT BYTE
MASKEXIT OI    FLAGS,CSEL          SELECT THIS MEMBER
         B     READLOOP
         SPACE
CTLNOTE1 MVC   TTR1,TTRZ           COPY NOTE DATA FOR DIRECTORY ENTRY
         MVI   TTR1+3,0            FLAG TTR1 SET
         B     READLOOP
         SPACE
CTLNOTE2 MVC   TTR2,TTRZ           COPY NOTE DATA FOR DIRECTORY ENTRY
         MVI   TTR2+3,0            FLAG TTR2 SET
         B     READLOOP
         SPACE
CTLSTOW  MVC   PDS2INDC(63),INREC+13
         TM    PDS2INDC,PDS2NTTR   ANY NOTED TTRS TO SUPPLY?
         BZ    NOTESOK             NO
         LA    R10,6               SET ERROR NUMBER
         CLI   TTR1+3,0            FIRST NOTED TTR SET?
         BNE   DATAEROR            NO, MISSING STATEMENT SO QUIT
         MVC   PDS2TTRT,TTR1       COPY FIRST NOTED TTR
         CLI   TTR2+3,0            SECOND NOTED TTR SET?
         BNE   NOTESOK             NO
         MVC   PDS2TTRN,TTR2       COPY SECOND NOTED TTR
NOTESOK  NI    FLAGS,255-CALIAS
         OI    FLAGS,CSTOW         ./ STOW PROCESSED
         TM    FLAGS,CSEL          IS THIS MEMBER SELECTED?
         BZ    READLOOP            NO, SKIP THE STOW
         STOW  SYSUT2D,STOWENTY,R
         LTR   R15,R15             WAS THE MEMBER REPLACED?
         BZ    READLOOP            YES, CONTINUE
         CH    R15,=H'8'           WAS THE MEMBER ADDED?
         BE    READLOOP            YES, CONTINUE
         LA    R10,7               SET ERROR NUMBER
         B     DATAEROR
         SPACE
CTLALIAS MVC   PDS2NAME,INREC+14   COPY ALIAS MEMBER NAME
         LA    R10,8               SET ERROR NUMBER
         TM    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?
         BNO   DATAEROR            NO, CAN'T PROCESS ALIAS YET
         NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH ALIAS
         OI    FLAGS,CALIAS        ./ ALIAS PROCESSED
         B     READLOOP
         SPACE
CTLENDUP TM    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?
         BO    ALLDONE             YES, ALL DONE
NOSTOW   LA    R10,8               SET ERROR NUMBER
         SPACE 2
************************************************************
*                                                          *
*        HANDLE ERROR CONDITIONS                           *
*                                                          *
************************************************************
         SPACE
DATAEROR LR    R1,R10              COPY ERROR NUMBER
         BCTR  R1,0                CONVERT TO INDEX NUMBER
         SLL   R1,6                MULTIPLY BY 64 FOR INDEX
         LA    R1,ERRMSGS(R1)      POINT TO ERROR MESSAGE
         LA    R0,64               GET MESSAGE LENGTH
         TPUT  (1),(0),R           SHOW MESSAGE ON TERMINAL
         LA    R10,2000(,R10)      GET PROGRAM RETURN CODE
         ST    R10,RETCODE         SAVE FOR TERMINATION
         SPACE 2
************************************************************
*                                                          *
*        CLOSE THE DCBS                                    *
*                                                          *
************************************************************
         SPACE
ALLDONE  MVI   WORK,X'80'
         CLOSE (SYSIND),MF=(E,WORK)
         MVI   WORK,X'80'
         CLOSE (SYSUT2D),MF=(E,WORK)
         SPACE 2
************************************************************
*                                                          *
*        TERMINATE                                         *
*                                                          *
************************************************************
         SPACE
         L     R2,RETCODE
         DROP  R13                 @DATA
         LR    R1,R13
         L     R13,4(,R13)
         L     R0,@SIZE
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         SPACE 2
************************************************************
*                                                          *
*        DCB EXIT                                          *
*                                                          *
************************************************************
         SPACE
         USING IHADCB,R1
UT2OPNX  ICM   R3,3,DCBBLKSI       IS OUTPUT BLOCK SIZE ZERO?
         BPR   R14                 NO, RETURN IF POSITIVE
         MVC   DCBBLKSI,=H'32760'  YES, SET IT TO MAXMIMUM
         BR    R14                 RETURN
         DROP  R1                  IHADCB
         TITLE '  R E V L M O D   -   C O N S T A N T S  '
SYSUT2XL DC    0F'0',X'85',AL3(UT2OPNX)
         PRINT NOGEN
         SPACE
SYSINS   DCB   DDNAME=SYSIN,MACRF=(GM),DSORG=PS,RECFM=FB,LRECL=80,     +
               EODAD=CTLENDUP
SYSINL   EQU   *-SYSINS
         SPACE
SYSUT2S  DCB   DDNAME=SYSUT2,MACRF=(W),DSORG=PO,RECFM=U,EXLST=SYSUT2XL
SYSUT2L  EQU   *-SYSUT2S
         SPACE
         PRINT GEN
         SPACE
         WRITE UT2DECBS,SF,MF=L
UT2DECBL EQU   *-UT2DECBS
         SPACE
         LTORG
         SPACE
ERRMSGS  DS    0D
         DC    CL64'DATA FORMAT ERROR - MISSING ./ ADD CONTROL STATEMEN+
               T            '
         DC    CL64'DATA FORMAT ERROR - NON-POSITIVE LENGTH INDICATOR E+
               NCOUNTERED   '
         DC    CL64'DATA FORMAT ERROR - LENGTH INDICATOR VALUE LARGER T+
               HAN BLKSIZE  '
         DC    CL64'DATA FORMAT ERROR - CONTROL STATEMENT FOUND TO HAVE+
                A LABEL     '
         DC    CL64'DATA FORMAT ERROR - UNRECOGNISED CONTROL STATEMENT +
                            '
         DC    CL64'DATA FORMAT ERROR - MISSING ./ NOTE1 CONTROL STATEM+
               ENT          '
         DC    CL64'STOW ERROR - CHECK DIRECTORY CAPACITY              +
                            '
         DC    CL64'DATA FORMAT ERROR - MISSING ./ STOW CONTROL STATEME+
               NT           '
         SPACE
         DS    0D                  END OF CSECT
         TITLE '  R E V L M O D   -   D S E C T S  '
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
WORK     DS    D
INREC    DS    CL80
SYSIND   DS    0F,XL(SYSINL)
SYSUT2D  DS    0F,XL(SYSUT2L)
UT2DECBD DS    0F,XL(UT2DECBL)
MEMSEL   DS    CL8
STOWENTY DS    CL80
TTRZ     DS    F                   NOTE SAVE AREAS
TTR1     DS    F
TTR2     DS    F
RETCODE  DS    F
MAXBLKSI DS    H
FLAGS    DS    X
CADD     EQU   X'80'               PROCESSED ./ ADD CONTROL STMT
CSTOW    EQU   X'40'               PROCESSED ./ STOW CONTROL STMT
CALIAS   EQU   X'20'               PROCESSED ./ ALIAS CONTROL STMT
CSEL     EQU   X'10'               SELECT THIS MEMBER
*        EQU   X'08'               SPARE
*        EQU   X'04'               SPARE
*        EQU   X'02'               SPARE
*        EQU   X'01'               SPARE
@BUFFER  DS    0D                  BPAM WRITE BUFFER ADDRESS
@BUFLEN  EQU   32760               BPAM WRITE BUFFER LENGTH
@DATAL   EQU   @BUFFER-@DATA+@BUFLEN
         EJECT
         PRINT NOGEN
         IHAPDS PDSBLDL=NO,DSECT=YES
         SPACE
         DCBD  DSORG=PO
         SPACE
         END   REVLMOD
