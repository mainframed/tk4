         PRINT GEN
LISTX    START 0
LISTX    CSECT
         BC    15,14(0,15)
         DC    X'08'
         DC    CL8'LISTX   '
         DS    0H
         STM   14,12,12(13)        SAVE REGISTERS
         LR    12,15
         LA    11,2048(,12)
         LA    11,2048(,11)
         USING LISTX,12,11         ESTABLISH CSECT BASE REGISTER
         ST    13,SAVE+4
         LR    2,13
         LA    13,SAVE             ESTABLISH LOCAL SAVE AREA
         ST    13,8(0,2)
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         ST    R1,STORE        SAVE PARM LIST ADDRESS
         STFSMODE ON,INITIAL=YES
         GTSIZE ,              WHAT IS THE SCREENSIZE?
         CH    R1,=H'80'       WIDTH OF 80?
         BH    TRY132          NO, ERROR
         BL    ERROR8
         CH    R0,=H'24'       DEPTH OF AT LEAST 24?
         BL    ERROR8          NO, ERROR
         BE    GOFORIT
         MVC   FILLER,ERASE
         B     GOFORIT
TRY132   CH    R0,=H'24'       DEPTH OF AT LEAST 24?
         BL    ERROR8          NO, ERROR
         STSIZE SIZE=80,LINE=24
         B     ERROR8
GOFORIT  L     R2,STORE        RESTORE PARM ADDRESS
         CALL  ISPLINK,(CONTROL,ERRORS,RETURNS),VL  REFRESH
         LTR   R15,R15
         BZ    SPF
         MVI   TYPE,C'X'
SPF      TM    0(R2),X'80'     IS IT INVOKED AS A CMND PROCESSOR?
         BNO   PARSING         YES, PARSE
         L     R2,0(R2)        LOAD FIRST PARM ADDRESS
         LH    R8,0(R2)        LOAD FIRST PARM LENGTH
         LTR   R8,R8           IS IT ZERO?
         BZ    ERROR1          YES, ERROR
         LA    R9,2(,R2)       POINT R9 TO PARM
         LA    R15,2(,R8)      INCREMENT PARM LENGTH BY 2 FOR IKJDAIR
         STH   R15,DSNAME      STORE PARM LENGTH FOR IKJDAIR
         BCTR  R8,R0           DECREMENT R8 FOR EXEC
         LA    R7,INFILE       LOAD RECEIVING ADDRESS FOR EXEC
         EX    R8,MOVEIT       EXECUTE
         LA    R7,LINE1DSN+2
         EX    R8,MOVEIT
         OC    INFILE,BLNKS    FOLD TO UPPERCASE
         OC    LINE1DSN,BLNKS  FOLD TO UPPERCASE
         MVC   DATASET2(44),INFILE  COPY PARM TO IKJDAIR PARM AREA
         LA    R2,DATASET2+1   POINT R2 PAST FIRST QUOTE IN DSNAME
         AR    R2,R8           POINT PAST DSNAME (LENGTH OF PARM1)
         MVC   0(1,R2),LEFTB   MOVE IN A LEFT BRACKET (FOR MEMBER NAME)
         LA    R2,1(,R2)       POINT PAST THE BRACKET
         ST    R2,MEMADDR      SAVE ADDRESS FOR LATER
         B     ALLOCATE        ALLOCATE THE DSNAME
PARSING  L     R8,STORE        RESTORE PARM ADDRESS
         USING CPPL,R8         ESTABLISH ADDRESSABILITY
         MVC   PPLCBUF,CPPLCBUF
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         LTR   R15,R15         WAS PARSE SUCCESSFUL?
         BNZ   ERROR3          NO, ERROR
         L     R5,PDLPTR       ESTABLISH PARM ADDRESSABILITY
         USING IKJPARMD,R5
         L     R9,OPER1        LOAD OPERAND ADDRESS
         LH    R8,OPER1+4      LOAD OPERAND LENGTH
         LA    R15,2(,R8)      INCREMENT LENGTH FOR IKJDAIR
         STH   R15,DSNAME      STORE FOR IKJDAIR
         BCTR  R8,R0           DECREMENT FOR EXEC
         LA    R7,INFILE       LOAD RECEIVING ADDRESS FOR EXEC
         EX    R8,MOVEIT       EXECUTE
         LA    R7,LINE1DSN+2
         EX    R8,MOVEIT
         OC    LINE1DSN,BLNKS  FOLD TO UPPERCASE
         OC    INFILE,BLNKS    FOLD TO UPPERCASE
         MVC   DATASET2(44),INFILE   COPY PARM TO IKJDAIR AREA
         LA    R2,DATASET2+1   POINT PAST FIRST QUOTE
         AR    R2,R8           POINT PAST DSNAME PARM
         MVC   0(1,R2),LEFTB   MOVE IN LEFT BRACKET
         LA    R2,1(,R2)       POINT PAST BRACKET
         ST    R2,MEMADDR      SAVE ADDRESS FOR LATER
ALLOCATE LA    R5,DAPARMS      ESTABLISH ADDRESSABILITY FOR IKJDAIR
         USING DAPL,R5
         XC    DAPARMS(168),DAPARMS  CLEAR IKJDAIR PARM AREA
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         MVC   DAPLPSCB,CPPLPSCB
         LA    R9,ECB
         ST    R9,DAPLECB
         LA    R6,DAALLOC      ESTABLISH ADDRESSABILITY FOR ALLOCATE
         USING DAPB08,R6
         LA    R9,DAPB08
         ST    R9,DAPLDAPB
         MVI   DA08CD+1,X'08'  SET CODE TO ALLOCATE
         LA    R9,DSNAME       MOVE IN DSNAME ADDRESS
         ST    R9,DA08PDSN
         MVC   DA08DDN,BLNKS         CLEAR DDNAME
         MVC   DA08UNIT(8),BLNKS           UNIT
         MVC   DA08SER(8),BLNKS            VOLSER
         MVC   DA08MNM(8),BLNKS            MEMBER NAME
         MVC   DA08PSWD(8),BLNKS           PWORD
         OI    DA08DSP1,DA08SHR      SET DISP TO SHR,KEEP,KEEP
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEEP
         LA    R1,DAPL         POINT TO LIST
         LINK  EP=IKJDAIR,MF=(E,(1))
         LTR   R15,R15         ALLOCATE OK?
         BNZ   ERROR4          NO, ERROR
         MVC   INPDD(8),DA08DDN      SAVE DDNAME
         MVC   PDSDD+40(8),DA08DDN   MOVE DDNAME TO PDSDD AREA
         MVC   MBRDD+40(8),DA08DDN   MOVE DDNAME TO MBRDD AREA
         OPEN (PDSDD,(INPUT))
         TM    PDSDD+48,X'10'  OPEN OK?
         BNO   ERROR5          NO, ERROR
OPENOK   L     R0,GETLENG      LOAD LENGTH
         GETMAIN  R,LV=(0)     PERFORM GETMAIN
HLONG    ST    R1,ADDRESS      SAVE START ADDRESS
         ST    R1,SCREENA      SAVE IN CURRENT SCREEN ADDRESS
         ST    R1,SCREENB      SAVE IN CURRENT SCREEN ADDRESS
         MVC   0(92,R1),SKELETON     MOVE IN SCREEN FILLER
         LH    R6,=H'92'       LOAD WIDTH OF FILLER LINE
MLONG    L     R2,SCREENA      PERFORM MOVE LONGS UNTIL GETMAINED
         LR    R4,R2                   AREA HAS BEEN FILLED WITH THE
         AR    R4,R6                   EQUIVALENT OF A BLANK MEMBER
         LR    R3,R6                   LIST WITH ALL FIELDS PROTECTED.
         LR    R5,R6           THIS IS FOR CONSISTENCY OF OUTPUT BUFFER
         MVCL  R4,R2           SIZE REGRADLESS OF CONTENT.
         MH    R6,=H'2'        DOUBLE LENGTH OF MOVE (MINIMIZE OHEAD)
         C     R6,=F'93104'    MULTIPLE OF 5888 - ARE WE CLOSE?
         BL    MLONG           NO, REPEAT MOVE
         A     R1,=F'93104'    POINT PAST 10 SCREENS WORTH
         ST    R1,PUTBUFA      SAVE IN PUT BUFFER ADDRESS
         MVC   8(92,R1),LINE1
         CLI   TYPE,C'X'
         BNE   GOOVER
         MVC   54(46,R1),SPFMSG
GOOVER   AH    R1,=H'2221'     POINT PAST PUT BUFFER
         ST    R1,GETBUFA      SAVE IN GET BUFFER ADDRESS
         SR    R3,R3           ZERO REG3
*
*  READ DIRECTORY BLOCK
*
RDLOOP   READ  DIRECT,SF,PDSDD,DIRAREA,256  READ DIR BLOCK
         CHECK DIRECT         WAIT
         SR    R5,R5          ZERO R5
         MVC   BYTECNT,DIRAREA   SAVE BYTE CNT
         LA    R5,2(,R5)      MOVE POINTER ON
         SR    R9,R9          ZERO R9
         B     CON1
MBRLOP   IC    R9,DIRAREA+11(R5)        PICK OUT USER DATA CNT
         N     R9,=XL4'1F'              MASK OUT BITS 0-2
         SLL   R9,1                     MULTIPY HALFWORDS FOR BYTES
         LA    R5,12(R9,R5)             SET R5 TO START OF NEXT ENTRY
         CH    R5,BYTECNT               END OF THIS BLOCK
         BNL   RDLOOP                   YES - BRANCH
CON1     LA    R10,DIRAREA(R5)          SET R10 TO START OF MEMBER NAM
         CLC   FINNAM(8),0(R10)         CHECK FOR SPECIAL NAME
         BE    FINISH                   YES - BRANCH
         L     R4,SCREENB      LOAD CURRENT LINE ADDRESS
         AR    R4,R3           ADD CURRENT BYTE ADDRESS
         MVC   0(5,R4),PREF1   MOVE CONTROL CHAR PREFIX
         MVC   5(8,R4),0(R10)  MOVE MEMBER NAME
         MVI   FLAG5,X'01'
         TM    11(R10),128     IS IT AN ALIAS
         BZ    SKIP1           NO, SKIP
         MVC   13(2,R4),=C'-A' YES, MOVE ALIAS INDICATOR
         B     SKIP2
SKIP1    MVC   13(2,R4),BLNKS  IN CASE IT IS SECOND READ OF DIRECTORY
SKIP2    AH    R3,=H'15'       POINT TO NEXT SLOT
         CH    R3,=H'88'       IS IT LAST SLOT ON LINE?
         BL    MBRLOP          NO, REPEAT PROCESS
         L     R3,SCREENB      YES, LOAD CURRENT LINE ADDRESS
         AH    R3,=H'92'       ADD LENGTH OF LINE
         C     R3,PUTBUFA      REACHED END OF BUFFER AREA?
         BNL   ERROR9          YES, ERROR
         ST    R3,SCREENB      NO, SAVE NEW LINE ADDRESS
         SR    R3,R3           RESET BYTE ADRESS TO SLOT NUMBER ONE
         B     MBRLOP          REPEAT PROCESS
FINISH   CLI   FLAG3,X'01'
         BE    NOCHECK
         CLI   FLAG5,X'01'
         BE    NOCHECK
         L     R9,PUTBUFA      LOAD R9  WITH START OF PUT BUFFER AREA
         CLI   TYPE,C'X'
         BNE   FFF
         MVC   79(20,R9),EMPMSG+4
         B     NOCHECK
FFF      MVC   54(46,R9),EMPMSG
NOCHECK  L     R4,SCREENB
         LTR   R3,R3
         BZ    LASTINL
         AH    R4,=H'92'
LASTINL  ST    R4,SCREENB2
         CLI   FLAG3,X'01'
         BNE   OVERO
         MVC   SCREENA,WORKWORD
         MVI   FLAG3,X'00'
OVERO    MVC   SCREENB,ADDRESS
         L     R10,GETBUFA     LOAD R10 WITH START OF GET BUFFER AREA
         L     R9,PUTBUFA      LOAD R9  WITH START OF PUT BUFFER AREA
         MVC   0(8,R9),FIELD1  MOVE SCREEN WRITE CTL CHARS TO OUTBUF
*        LH    R0,=H'8'        CLEAR SCREEN....LOAD LENGTH
*        LA    R1,CLRSCRN                      LOAD ADDRESS
*        A     R1,PUTR1                        HIGH ORDER BYTE
*        TPUT  (1),(0),R                       WRITE ERASE
         B     PREWRITE
TGETX    L     R3,GETBUFA      LOAD R1 WITH BUFFER ADDRESS
         XC    0(255,R10),0(R10)
         LR    R1,R10          LOAD R1 WITH BUFFER ADDRESS
         A     R1,GETR1        LOAD HIGH ORDER BYTE WITH TGET BITS
         L     R0,LENGTHG      LOAD LENGTH OF BUFFER
         TGET  (1),(0),R       FETCH SCREEN
         CLI   0(R10),X'6E'
         BE    PREWRITE
         CLI   0(R10),X'6B'
         BE    PREWRITE
         CLI   0(R10),X'6D'
         BE    PREWRITE
         CLI   0(R10),X'6C'
         BE    PREWRITE
         CLI   0(R10),X'60'
         BE    PREWRITE
         NI    0(R10),X'0F'    FOLD RESPONSE CHARACTER
         CLI   0(R10),X'03'    WAS IT PFK3/PFK15?
         BNE   CONTINUE        NO, BRANCH AROUND
*        LH    R0,=H'8'        CLEAR SCREEN....LOAD LENGTH
*        LA    R1,CLRSCRN                      LOAD ADDRESS
*        A     R1,PUTR1                        HIGH ORDER BYTE
*        TPUT  (1),(0),R                       WRITE ERASE
         CLI   TYPE,C'X'
         BE    RETURN
         CALL  ISPLINK,(CONTROL,DISPLAY,REFRESH),VL
         B     RETURN          DISPLAY REFRESH AND RETURN TO CALLER
CONTINUE L     R2,SCREENA
         LA    R3,3(,R10)
         MVC   CHAR,3(R10)
         ST    R3,WORKWORD
         CLI   0(R3),X'11'
         BNE   SCROLL
         LA    R3,2(,R3)
LOOP3    LA    R3,1(,R3)
         CLI   0(R3),X'00'     NO MORE FIELDS;XC MIGHT BE PREREQUISITE
         BE    FIELD1OK
         CLI   0(R3),X'11'     NEXT FIELD FROM TGET; IGNORE IT
         BE    FIELD1OK
         CLI   0(R3),X'40'
         BE    OVERGOI
         MVI   FLAG4,X'01'
OVERGOI  B     LOOP3
FIELD1OK CLI   FLAG4,X'01'
         BE    GOOD
         CLI   0(R3),X'11'
         BE    SCOOT
         SR    R1,R1
         LA    R1,3(,R1)
         MVI   FLAG4,X'00'
         CLI   0(R10),X'08'
         BE    SCROLL
         CLI   0(R10),X'07'
         BE    SCROLL
         B     PREWRITE
SCOOT    MVC   CHAR,0(R3)
         ST    R3,WORKWORD
         LA    R3,2(,R3)
         B     LOOP3
GOOD     MVI   FLAG4,X'00'
         L     R4,WORKWORD
         MVC   3(24,R10),0(R4)
         MVC   SAVECUR(2),4(R10)
         LA    R4,3(,R4)
         SR    R3,R4
         ST    R3,OPTLEN
         LA    R4,CHAR+3
         AR    R3,R4
         ST    R3,OPTEND
         L     R3,OPTLEN
         LA    R1,6(,R3)
         LTR   R3,R3
         BP    GOON
         CLI   0(R10),X'08'
         BE    SCROLL
         CLI   0(R10),X'07'
         BE    SCROLL
         B     PREWRITE
GOON     MVC   SPOT(2),CHAR+1
         NI    SPOT+0,X'3F'    REDUCE BYTES 1,2 TO RIGHTMOST 6 BITS
         NI    SPOT+1,X'3F'
         SR    R5,R5           CLEAR REG 5 ....
         IC    R5,SPOT+0             AND LOAD IT WITH BYTE 1
         SLL   R5,6                  SHIFT IT LEFT SIX BITS
         SR    R3,R3           CLEAR REG3 .....
         IC    R3,SPOT+1             AND LOAD IT WITH BYTE 2
         AR    R5,R3                 ADD IT TO (BYTE 1(TIMES 2**6))
         CH    R5,=H'20'
         BH    SCROLL
         OC    CHAR,BLNKS
         LA    R3,CHAR+3
*LOOP4   CLI   0(R3),C'='
*        BNE   GOGOGO
*        CLI   1(R3),X'40'
*        BE    GOGOGO
*        CLI   TYPE,C'X'
*        BNE   RETURN
*        MVC   54(46,R9),SPFMSG
*        B     PREWRITE
*GOGOGO  CLI   0(R3),X'40'
LOOP4    CLI   0(R3),X'40'
         BNE   OPTOK
         LA    R3,1(,R3)
         C     R3,OPTEND
         BL    LOOP4
OPTOK    CLI   0(R3),C'M'
         BE    NEXT15
         CLI   0(R3),X'F0'
         BL    NEXT4
         CLI   0(R3),X'F9'
         BNH   NUMOPT
         B     NEXT4
NEXT15   CLI   0(R10),X'07'
         BNE   NEXT5
         SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR SCROLL DOWN IT IS MINIMUM OF 3
         MVC   SCREENA,ADDRESS
         B     WRITE
NEXT5    CLI   0(R10),X'08'
         BNE   BADOPT2
         SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR SCROLL DOWN IT IS MINIMUM OF 3
         L     R2,SCREENB2
         SH    R2,=H'2116'
         C     R2,ADDRESS
         BL    NOTOK
         ST    R2,SCREENA
         B     WRITE
NOTOK    MVC   SCREENA,ADDRESS
         B     WRITE
NEXT4    CLI   0(R10),X'0D'
         BNE   BADOPT
         CLI   0(R3),C'E'
         BE    NEXT6
         CLI   0(R3),C'B'
         BE    NEXT6
         CLI   0(R3),C'D'
         BE    NEXT16
         CLI   0(R3),C'R'
         BE    NEXT16
         CLI   0(R3),C'N'
         BE    REREADD
         CLI   0(R3),C'L'
         BNE   BADOPT
         B     NEXT16
REREADD  CLOSE (PDSDD)
         OPEN  (PDSDD,(INPUT))
         TM    PDSDD+48,X'10'  OPEN OK?
         BNO   ERROR5          NO, ERROR
         SR    R3,R3
         MVC   WORKWORD,SCREENA
         MVI   FLAG3,X'01'
         L     R1,ADDRESS
         B     HLONG
NEXT6    CLI   TYPE,C'X'
         BNE   NEXT16
         MVC   54(46,R9),SPFMSG2
         MVI   0(R9),X'44'
         B     PREWRITE
NEXT16   MVC   OPT(1),0(R3)
         LA    R3,1(,R3)
         CLI   0(R3),X'40'
         BNE   BADOPT2
LOOP5    LA    R3,1(,R3)
         C     R3,OPTEND
         BNL   XXXX
         CLI   0(R3),X'40'
         BNE   MEMOK
         B     LOOP5
XXXX     CLI   OPT,C'R'
         BE    BADREN
         B     BADOPT2
MEMOK    ST    R3,MEMSTA
LOOP6    LA    R3,1(,R3)
         CLI   0(R3),X'40'
         BE    MEMDONE
         C     R3,OPTEND
         BL    LOOP6
         CLI   OPT,C'R'
         BNE   MEMDONE
BADREN   MVC   54(46,R9),RENMSG
         MVI   0(R9),X'44'
         B     WRITE
MEMDONE  ST    R3,RENMEM
         LR    R4,R3
         S     R4,MEMSTA
         CH    R4,=H'8'
         BH    BADOPT2
         L     R9,MEMSTA
         LA    R7,MNAME
         MVC   MNAME,BLNKS
         EX    R4,MOVEIT
         L     R7,MEMADDR
         MVC   0(10,R7),BLNKS
         EX    R4,MOVEIT
         L     R9,PUTBUFA
         CLC   MNAME,MIMNAME
         BL    BADOPT2
         CLC   MNAME,MAXNAME
         BH    BADOPT2
         L     R5,MEMADDR
         L     R3,ADDRESS
LOCLOOP  CLC   5(8,R3),MNAME
         BNL   FOUNDM
         LA    R3,92(,R3)
         C     R3,SCREENB2
         BL    LOCLOOP
FOUNDM   SH    R3,=H'92'
         CLI   OPT,C'L'
         BNE   BREWSE
         SR    R1,R1
         LA    R1,3(,R1)
         L     R4,SCREENB2
         SH    R4,=H'2116'
         CR    R3,R4
         BNH   NEXT9
         LR    R3,R4
NEXT9    C     R3,ADDRESS
         BNL   STORER3
         L     R3,ADDRESS
STORER3  ST    R3,SCREENA
         B     WRITE
BREWSE   SR    R5,R5
         LA    R5,5(,R5)
         CLC   5(8,R3),MNAME
         BE    MEMGOOD
         LA    R5,15(,R5)
         CLC   20(8,R3),MNAME
         BE    MEMGOOD
         LA    R5,15(,R5)
         CLC   35(8,R3),MNAME
         BE    MEMGOOD
         LA    R5,15(,R5)
         CLC   50(8,R3),MNAME
         BE    MEMGOOD
         LA    R5,15(,R5)
         CLC   65(8,R3),MNAME
         BE    MEMGOOD
         LA    R5,15(,R5)
         CLC   80(8,R3),MNAME
         BE    MEMGOOD
         LA    R5,17(,R5)
         CLC   97(8,R3),MNAME
         BE    MEMGOOD
         CLI   OPT,C'E'
         BNE   BADOPT2
         MVI   TYPE+1,C'Z'
MEMGOOD  CLI   OPT,C'D'
         BE    DMEM
         CLI   OPT,C'R'
         BE    RMEM
         L     R5,MEMADDR
         B     LOPDELOP
RMEM     ST    R3,RENBASE
         ST    R5,RENOFFS
         L     R3,RENMEM
         MVC   STOWN(8),MNAME
LOOP55   CLI   0(R3),X'40'
         BNE   MEMOKO
         LA    R3,1(,R3)
         C     R3,OPTEND
         BL    LOOP55
         B     BADREN
MEMOKO   ST    R3,MEMSTA
LOOP66   LA    R3,1(,R3)
         CLI   0(R3),X'40'
         BE    MEMDONK
         C     R3,OPTEND
         BL    LOOP66
MEMDONK  LR    R4,R3
         S     R4,MEMSTA
         CH    R4,=H'8'
         BH    BADREN
         L     R9,MEMSTA
         LA    R7,MNAME
         MVC   MNAME,BLNKS
         EX    R4,MOVEIT
         L     R7,MEMADDR
         MVC   0(10,R7),BLNKS
         EX    R4,MOVEIT
         L     R9,PUTBUFA
         CLC   MNAME,MIMNAME
         BL    BADREN
         CLC   MNAME,MAXNAME
         BH    BADREN
         MVC   STOWN+8(8),MNAME
RMEMSS   CLI   FLAG2,X'01'
         BE    STOWOKO
         BAL   R14,MBROP
STOWOKO  STOW  MBRDD,STOWN,C
         LTR   R15,R15
         BNE   RENF
CHANGE   L     R5,RENOFFS
         L     R3,RENBASE
         CLC   STOWN(8),STOWN+8
         BL    ASCEND
         BH    DESCEND
         AR    R3,R5
         MVC   0(8,R3),STOWN+8
ASCEND   L     R4,RENBASE
         AR    R4,R5
         CH    R5,=H'80'
         BL    NEXTOY
         BE    YY
         L     R3,RENBASE
         LA    R3,92(,R3)
         ST    R3,RENBASE
         SR    R5,R5
         LA    R5,5(,R5)
NEXTOY   CLC   15(8,R4),BLNKS
         BNE   OKOKO
         MVC   0(8,R4),STOWN+8
         B     RENS
OKOKO    CLC   STOWN+8(8),15(R4)
         BNL   SKIPPY
         MVC   0(8,R4),STOWN+8
         B     RENS
SKIPPY   MVC   0(10,R4),15(R4)
         AH    R5,=H'15'       POINT TO NEXT SLOT
         CH    R5,=H'80'       IS IT LAST SLOT ON LINE?
         BL    ASCEND          NO, REPEAT PROCESS
YY       L     R4,RENBASE
         AR    R4,R5
         CLC   17(8,R4),BLNKS
         BNE   OKOKO2
         MVC   0(8,R4),STOWN+8
         B     RENS
OKOKO2   CLC   STOWN+8(8),17(R4)
         BNL   SKIPPY2
         MVC   0(8,R4),STOWN+8
         B     RENS
SKIPPY2  MVC   0(10,R4),17(R4)
         L     R3,RENBASE      YES, LOAD CURRENT LINE ADDRESS
         AH    R3,=H'92'       ADD LENGTH OF LINE
         C     R3,PUTBUFA      REACHED END OF BUFFER AREA?
         BNL   ERROR7          YES, ERROR
         ST    R3,RENBASE      NO, SAVE NEW LINE ADDRESS
         SR    R5,R5           RESET BYTE ADRESS TO SLOT NUMBER ONE
         LA    R5,5(,R5)
         B     ASCEND          REPEAT PROCESS
DESCEND  L     R4,RENBASE
         AR    R4,R5
         CH    R5,=H'80'
         BH    RESET
         CH    R5,=H'5'
         BNH   ZZ
NEXTOZ   SH    R4,=H'15'
OKOKZ    CLC   STOWN+8(8),0(R4)
         BNH   SKIPPO
         MVC   15(8,R4),STOWN+8
         B     RENS
SKIPPO   MVC   15(10,R4),0(R4)
         LA    R4,15(,R4)
         SH    R5,=H'15'       POINT TO NEXT SLOT
         B     DESCEND
RESET    L     R3,RENBASE
         LA    R3,92(,R3)
         ST    R3,RENBASE
         SR    R5,R5
         LA    R5,5(,R5)
ZZ       L     R4,RENBASE
         AR    R4,R5
         SH    R4,=H'17'
         C     R4,ADDRESS
         BNL   OKOKZ2
         MVC   17(8,R4),STOWN+8
         B     RENS
OKOKZ2   CLC   STOWN+8(8),0(R4)
         BNH   SKIPPO2
         MVC   17(8,R4),STOWN+8
         B     RENS
SKIPPO2  MVC   17(10,R4),0(R4)
         L     R3,RENBASE      YES, LOAD CURRENT LINE ADDRESS
         SH    R3,=H'92'       ADD LENGTH OF LINE
         C     R3,ADDRESS      REACHED END OF BUFFER AREA?
         BL    ERROR7
         ST    R3,RENBASE      NO, SAVE NEW LINE ADDRESS
         SR    R5,R5           RESET BYTE ADRESS TO SLOT NUMBER ONE
         LA    R5,80(,R5)
         B     DESCEND         REPEAT PROCESS
DMEM     MVC   STOWN(8),MNAME
         CLI   FLAG2,X'01'
         BE    STOWOK
         BAL   R14,MBROP
STOWOK   STOW  MBRDD,STOWN,D
         LTR   R15,R15
         BNE   MEMF
         ST    R3,WORKWORD
LOPLOP   L     R4,WORKWORD
         AR    R4,R5
         CH    R5,=H'80'
         BL    NEXTO1
         BE    XX
         L     R3,WORKWORD
         LA    R3,92(,R3)
         ST    R3,WORKWORD
         SR    R5,R5
         LA    R5,5(,R5)
NEXTO1   CLC   15(8,R4),BLNKS
         BNE   OKOK
         MVC   0(8,R4),15(R4)
         SH    R4,=H'4'
         MVI   0(R4),X'F0'
         LA    R4,3(,R4)
         MVI   0(R4),X'F0'
         CH    R5,=H'5'
         BH    MEMS
         L     R4,SCREENB2
         SH    R4,=H'92'
         ST    R4,SCREENB2
         B     MEMS
OKOK     MVC   0(10,R4),15(R4)
         AH    R5,=H'15'       POINT TO NEXT SLOT
         CH    R5,=H'80'       IS IT LAST SLOT ON LINE?
         BL    LOPLOP          NO, REPEAT PROCESS
XX       L     R4,WORKWORD
         AR    R4,R5
         CLC   17(8,R4),BLNKS
         BNE   OKOK2
         MVC   0(10,R4),17(R4)
         SH    R4,=H'4'
         MVI   0(R4),X'F0'
         LA    R4,3(,R4)
         MVI   0(R4),X'F0'
         B     MEMS
OKOK2    MVC   0(10,R4),17(R4)
         L     R3,WORKWORD     YES, LOAD CURRENT LINE ADDRESS
         AH    R3,=H'92'       ADD LENGTH OF LINE
         C     R3,PUTBUFA      REACHED END OF BUFFER AREA?
         BNL   ERROR7          YES, ERROR
         ST    R3,WORKWORD     NO, SAVE NEW LINE ADDRESS
         SR    R5,R5           RESET BYTE ADRESS TO SLOT NUMBER ONE
         LA    R5,5(,R5)
         B     LOPLOP          REPEAT PROCESS
NUMOPT   ST    R3,MEMSTA
LOOP7    CLI   0(R3),X'40'
         BE    NUMOK
         LA    R3,1(,R3)
         C     R3,OPTEND
         BL    LOOP7
NUMOK    LR    R4,R3
         S     R4,MEMSTA
         CH    R4,=H'8'
         BH    BADOPT2
         L     R9,MEMSTA
         LA    R7,MNAME+8
         SR    R7,R4
         MVC   MNAME,ZEROES
         EX    R4,MOVEIT
         L     R9,PUTBUFA
         LA    R7,MNAME
         LA    R5,MNAME+8
LOOP8    CLI   0(R7),X'F0'
         BL    BADOPT2
         CLI   0(R7),X'F9'
         BH    BADOPT2
         LA    R7,1(,R7)
         CR    R7,R5
         BL    LOOP8
         PACK  NUMVAL,MNAME
         CVB   R7,NUMVAL
         MH    R7,=H'92'
         CLI   0(R10),X'07'
         BNE   NEXT13
         SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR SCROLL DOWN IT IS MINIMUM OF 3
         L     R2,SCREENA
         SR    R2,R7
         C     R2,ADDRESS
         BNL   NEXT10
         L     R2,ADDRESS
NEXT10   ST    R2,SCREENA
         B     WRITE
NEXT13   CLI   0(R10),X'08'
         BNE   BADOPT2
         SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR SCROLL DOWN IT IS MINIMUM OF 3
         L     R2,SCREENA
         AR    R2,R7
         L     R3,SCREENB2
         SH    R3,=H'2116'
         C     R3,ADDRESS
         BNL   NEXT12
         L     R3,ADDRESS
NEXT12   CR    R2,R3
         BNH   NEXT11
         ST    R3,SCREENA
         B     WRITE
NEXT11   ST    R2,SCREENA
         B     WRITE
BADOPT   MVC   54(46,R9),BADOPTMS
         MVI   0(R9),X'44'
         B     WRITE
BADOPT2  MVC   54(46,R9),BADOPTM2
         MVI   0(R9),X'44'
         B     WRITE
SCROLL   L     R2,SCREENA      LOAD CURRENT SCREEN ADDRESS
         CLI   0(R10),X'08'    WAS RESPONSE PFK8/PFK20?
         BNE   NEXT1           NO, NEXT TEST
         SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR SCROLL DOWN IT IS MINIMUM OF 3
         L     R5,SCREENB2
         SH    R5,=H'2116'
         C     R5,ADDRESS
         BNL   NEXT18
         L     R5,ADDRESS
NEXT18   AH    R2,=H'2116'     SCROLL ONE SCREEN DOWN
         CR    R2,R5           ARE WE STILL WITHIN THE BOUNDS?
         BNH   NEXT19          NO, WRITE CURRENT SCREEN
         ST    R5,SCREENA      UPDATE CURRENT SCREEN ADDRESS
         B     WRITE              THUS MODIFIED FIELDS ARE IGNORED
NEXT19   ST    R2,SCREENA
         B     WRITE
NEXT1    CLI   0(R10),X'07'    WAS REPSONSE PFK7/PFK19?
         BNE   MEMSEL          NO, NEXT TEST
         SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR SCROLL UP IT IS MINIMUM OF 3
         SH    R2,=H'2116'
         C     R2,ADDRESS      ARE WE WITHIN THE BOUNDS?
         BNL   NEXT17
         L     R2,ADDRESS
NEXT17   ST    R2,SCREENA      UPDATE CURRENT SCREEN ADDRESS
         B     WRITE
MEMSEL   CLI   CHAR,X'11'
         BNE   PREWRITE
         L     R3,OPTLEN
         LTR   R3,R3
         BNP   BADOPT
         OI    CHAR+3,X'40'
         MVC   DUMMY+1(2),SAVECUR
         MVC   OPT(1),CHAR+3
         CLI   CHAR+3,X'C5'    IS IT EITHER 'E'?
         BE    NEXT33          YES, GO AHEAD
         CLI   CHAR+3,X'C4'    IS IT EITHER 'D'?
         BE    NEXT3           YES, GO AHEAD
         CLI   CHAR+3,X'D9'    IS IT EITHER 'R'?
         BNE   NEXT333         YES, GO AHEAD
         MVC   PLACE(2),CHAR+1
         MVC   SPOT(2),CHAR+1
         NI    SPOT+0,X'3F'    REDUCE BYTES 1,2 TO RIGHTMOST 6 BITS
         NI    SPOT+1,X'3F'
         SR    R5,R5           CLEAR REG 5 ....
         IC    R5,SPOT+0             AND LOAD IT WITH BYTE 1
         SLL   R5,6                  SHIFT IT LEFT SIX BITS
         SR    R3,R3           CLEAR REG3 .....
         IC    R3,SPOT+1             AND LOAD IT WITH BYTE 2
         AR    R5,R3                 ADD IT TO (BYTE 1(TIMES 2**6))
         ST    R5,WORKWORD
         MVI   3(R10),X'11'
         MVC   4(2,R10),CHAR+1
         MVC   6(14,R10),PREFX
         B     NEXT3
NEXT333  CLI   CHAR+3,X'C2'    IS IT EITHER 'B'?
         BE    NEXT33          NO, WRITE CURRENT SCREEN
         MVC   54(46,R9),BADOPTMS
         MVI   0(R9),X'44'
         B     WRITE
NEXT33   CLI   TYPE,C'X'
         BNE   NEXT3
         MVC   54(46,R9),SPFMSG2
         MVI   0(R9),X'44'
         B     PREWRITE
NEXT3    NI    CHAR+1,X'3F'    REDUCE BYTES 1,2 TO RIGHTMOST 6 BITS
         NI    CHAR+2,X'3F'
         SR    R5,R5           CLEAR REG 5 ....
         IC    R5,CHAR+1             AND LOAD IT WITH BYTE 1
         SLL   R5,6                  SHIFT IT LEFT SIX BITS
         SR    R3,R3           CLEAR REG3 .....
         IC    R3,CHAR+2             AND LOAD IT WITH BYTE 2
         AR    R5,R3                 ADD IT TO (BYTE 1(TIMES 2**6))
         LA    R5,1(,R5)       INCREMENT R5 FOR TRUE SCREEN POSITION
         ST    R5,STORE        SAVE IT
         LH    R3,=H'80'       LOAD R3 WITH 80
         SR    R4,R4           CLEAR R4
         DR    R4,R3           DIVIDE R5 BY 80
         L     R3,SCREENA      LOAD R3 WITH CURRENT SCREEN ADDRESS
         BCTR  R5,R0          LESS ONE LINE FOR TITLE LINE
         MH    R5,=H'92'       R5/80 TIMES 92 GIVES RELATIVE LINE NO.
         AR    R3,R5           ADD TO SCREEN ADDRESS
         BCTR  R4,R0           DECREMENT REMAINDER TWICE
         BCTR  R4,R0
         LR    R5,R4           MOVE IT TO R5
         SR    R4,R4
         D     R4,=F'13'       SET REMAINDER TO REMAINDER*(15/13)
         MH    R5,=H'15'           FOR RELATIVE BYTE NO. FOR LINE NO.
         AH    R5,=H'5'        ADD OFFSET INTO SLOT
         CLI   OPT,X'C4'       WAS RESPONSE DELETE?
         BNE   RENTRY
         CLI   FLAG2,X'01'
         BE    OVERR
         BAL   14,MBROP
OVERR    LA    R4,0(R3,R5)
         MVC   MNAME(8),0(R4)
         B     DMEM
RENTRY   CLI   OPT,X'D9'
         BNE   EDITRY
         LA    R4,0(R3,R5)
         ST    R3,RENBASE
         ST    R5,RENOFFS
         MVC   STOWN(8),0(R4)
         MVC   54(46,R9),RENMSG2
ASKAGAIN SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,20(,R1)
         L     R2,GETBUFA
         SH    R2,=H'5'
         MVC   0(4,R2),FILLER
         A     R1,LENGTHP      R1 IS EITHER 3 OR VALUE RETURNED FROM
         ST    R1,LENGTHC         LAST TGET; ADD NORMAL SCREEN LENGTH
         BCTR  R10,R0          DECREMENT R10
         MVC   0(4,R10),DUMMY  MOVE CTL CHARS TO BRIDGE OUTBUF WITH
         LA    R10,1(,R10)        GETBUF, THEN INCREMENT
         MVI   0(R9),X'44'
         LR    R1,R9           LOAD OUTBUF ADDRESS
         A     R1,PUTR1        FIX HIGH ORDER BYTE
         L     R0,LENGTHC      LOAD LENGTH OF COMPOSITE BUFFER
         TPUT  (1),(0),R       WRITE SCREEN
         MVC   DUMMY+1(2),CURSOR
         MVC   54(46,R9),LINE1DSN
         MVI   0(R9),X'40'
         L     R3,GETBUFA      LOAD R1 WITH BUFFER ADDRESS
         XC    0(20,R3),0(R3)
         LR    R1,R10          LOAD R1 WITH BUFFER ADDRESS
         A     R1,GETR1        LOAD HIGH ORDER BYTE WITH TGET BITS
         L     R0,LENGTHG      LOAD LENGTH OF BUFFER
         TGET  (1),(0),R       FETCH SCREEN
         NI    0(R10),X'0F'    FOLD RESPONSE CHARACTER
         CLI   0(R10),X'03'    WAS IT PFK3/PFK15?
         BE    PREWRITE
         CLI   3(R10),X'11'
         BNE   RENWRING
         L     R2,SCREENA
         MVC   CHAR,3(R10)
         LA    R3,CHAR+2
LOOP56   LA    R3,1(,R3)
         CLI   0(R3),X'00'     NO MORE FIELDS;XC MIGHT BE PREREQUISITE
         BE    FIELD1O
         CLI   0(R3),X'40'
         BE    FIELD1O
         CLI   0(R3),X'11'     NEXT FIELD FROM TGET; IGNORE IT
         BNE   LOOP56
FIELD1O  MVC   SPOT(2),CHAR+1
         NI    SPOT+0,X'3F'     REDUCE BYTES 1,2 TO RIGHTMOST 6 BITS
         NI    SPOT+1,X'3F'
         SR    R5,R5           CLEAR REG 5 ....
         IC    R5,SPOT+0             AND LOAD IT WITH BYTE 1
         SLL   R5,6                  SHIFT IT LEFT SIX BITS
         SR    R4,R4           CLEAR REG3 .....
         IC    R4,SPOT+1             AND LOAD IT WITH BYTE 2
         AR    R5,R4                 ADD IT TO (BYTE 1(TIMES 2**6))
         L     R4,WORKWORD
         LA    R4,2(,R4)
         CR    R5,R4
         BNE   RENWRONG
         LA    R4,CHAR+3
         ST    R3,OPTEND
         SR    R3,R4
         ST    R3,OPTLEN
         LTR   R3,R3
         BP    DONEOK
         MVC   54(46,R9),BADOPTM2
         B     RENOVER
DONEOK   BCTR  R3,R0
         MVC   STOWN+8(8),BLNKS
         EX    R3,MOVEST
         OC    STOWN+8(8),BLNKS
         B     RMEMSS
EDITRY   AR    R3,R5           ADD TO BASE ADDRESS
         L     R5,MEMADDR      LOAD R5 WITH MEMBER SLOT IN DSNAME FIELD
         MVC   0(10,R5),BLNKS  CLEAR MEMBER FIELD SLOT FROM LAST TIME
         MVC   0(8,R5),0(R3)   MOVE SELECTED MEMBER NAME TO DSNAME
         MVC   MNAME(8),0(R3)  MOVE SELECTED MEMBER NAME TO DSNAME
LOPDELOP LA    R5,1(,R5)       INCREMENT R5
         CLI   0(R5),X'40'     END OF MEMBER NAME?
         BNE   LOPDELOP        NO, INCREMENT AGAIN
         MVC   0(2,R5),RIGHTBQ YES, MOVE IN RIGHT BRACKET AND QUOTE
*        LH    R0,=H'8'        CLEAR SCREEN....LOAD LENGTH
*        LA    R1,CLRSCRN                      LOAD ADDRESS
*        A     R1,PUTR1                        HIGH ORDER BYTE
*        TPUT  (1),(0),R                       WRITE ERASE
         CLI   OPT,X'C5'       WAS RESPONSE EDIT?
         BNE   AROUND          NO, TRY BROWSE
         MVC   CMNDADDR(8),EDIT    YES, MOVE EDIT TO COMMAND FIELD
         B     ISPLINK         BRANCH TO ISPLINK
AROUND   CLI   OPT,X'C2'       WAS RESPONSE BROWSE?
         BNE   WRITE           NO, WRITE CURRENT SCREEN
         MVC   CMNDADDR(8),BROWSE  YES, MOVE BROWSE TO COMMAND FIELD
ISPLINK  CALL  ISPLINK,(CONTROL,DISPLAY,REFRESH),VL  REFRESH
         LTR   R15,R15
         BNZ   RETURN
         CALL  ISPLINK,(CMNDADDR,DATASET),VL         EDIT/BROWSE
         CH    R15,=H'20'      0=SAVED 4=NOT SAVED 20=ERROR
         BNL   FAILED          ERROR IF NOT LESS THAN 20
         CH    R15,=H'4'
         BE    NOTSAVED
         CLC   CMNDADDR,EDIT
         BNE   NOTSAVED
         MVC   SAVEMSG+12(8),MNAME
         MVC   54(46,R9),SAVEMSG
         LA    R7,66(,R9)
LOOP10   CLI   0(R7),X'40'
         BE    MOVESAVE
         CLI   0(R7),X'60'
         BE    MOVESAVE
         LA    R7,1(,R7)
         B     LOOP10
FAILED   MVC   54(46,R9),FAILEDM
         MVI   0(R9),X'44'
         B     NOTSAVED
RENWRONG MVC   54(46,R9),RENWMSG
         B     RENOVER
RENWRING MVC   54(46,R9),RENWMSG2
RENOVER  MVI   0(R9),X'44'
         MVI   3(R10),X'11'
         MVC   4(2,R10),PLACE
         MVC   6(14,R10),PREFX
         B     ASKAGAIN
MEMS     MVC   SAVEMSG+12(8),MNAME
         MVC   54(46,R9),SAVEMSG
         LA    R7,66(,R9)
LOOP999  CLI   0(R7),X'40'
         BE    DELMES
         CLI   0(R7),X'60'
         BE    DELMES
         LA    R7,1(,R7)
         B     LOOP999
DELMES   MVC   0(8,R7),DELETED
         B     NOTSAVED
RENS     MVC   SAVEMSG+12(8),STOWN
         MVC   54(46,R9),SAVEMSG
         LA    R7,66(,R9)
LOOP99B  CLI   0(R7),X'40'
         BE    RENMES
         CLI   0(R7),X'60'
         BE    RENMES
         LA    R7,1(,R7)
         B     LOOP99B
RENMES   MVC   0(8,R7),RENAMED
         B     NOTSAVED
MEMF     MVC   54(46,R9),DELFMSG
         MVI   0(R9),X'44'
         B     NOTSAVED
RENF     MVC   54(46,R9),RENFMSG
         MVI   0(R9),X'44'
         B     NOTSAVED
MOVESAVE MVC   0(8,R7),SAVED
         CLI   TYPE+1,C'Z'
         BNE   NOTSAVED
         MVI   TYPE+1,X'00'
         CLI   OPT,C'E'
         BNE   NOTSAVED
         L     R3,ADDRESS
LICLOOP  CLC   5(8,R3),MNAME
         BNL   FOUNDG
         LA    R3,92(,R3)
         C     R3,SCREENB2
         BL    LICLOOP
FOUNDG   SH    R3,=H'92'
         SR    R5,R5
         LA    R5,5(,R5)
         CLC   5(8,R3),BLNKS
         BE    OKOK5
         CLC   5(8,R3),MNAME
         BNL   MUMGOOD
         LA    R5,15(,R5)
         CLC   20(8,R3),BLNKS
         BE    OKOK5
         CLC   20(8,R3),MNAME
         BNL   MUMGOOD
         LA    R5,15(,R5)
         CLC   35(8,R3),BLNKS
         BE    OKOK5
         CLC   35(8,R3),MNAME
         BNL   MUMGOOD
         LA    R5,15(,R5)
         CLC   50(8,R3),BLNKS
         BE    OKOK5
         CLC   50(8,R3),MNAME
         BNL   MUMGOOD
         LA    R5,15(,R5)
         CLC   65(8,R3),BLNKS
         BE    OKOK5
         CLC   65(8,R3),MNAME
         BNL   MUMGOOD
         LA    R5,15(,R5)
         CLC   80(8,R3),BLNKS
         BE    OKOK5
         CLC   80(8,R3),MNAME
         BNL   MUMGOOD
         LA    R5,17(,R5)
         CLC   97(8,R3),BLNKS
         BE    OKOK5
         CLC   97(8,R3),MNAME
         BNL   MUMGOOD
OKOK5    LA    R4,0(R3,R5)
         MVC   0(8,R4),MNAME
         SH    R4,=H'5'
         MVC   0(5,R4),PREF1
         CH    R5,=H'88'
         BL    NOTSAVED
         L     R4,SCREENB2
         LA    R4,92(,R4)
         ST    R4,SCREENB2
         B     NOTSAVED
MUMGOOD  MVC   PLACE(10),BLNKS
         MVC   PLACE(8),MNAME
         ST    R3,WORKWORD
LAPLAP   L     R4,WORKWORD
         AR    R4,R5
         CH    R5,=H'88'
         BNH   OKOK3
         L     R3,WORKWORD
         LA    R3,92(,R3)
         ST    R3,WORKWORD
         SR    R5,R5
         LA    R5,5(,R5)
         L     R4,WORKWORD
         AR    R4,R5
OKOK3    MVC   STOWN(10),0(R4)
         CLC   0(8,R4),BLNKS
         BNE   OKOK4
         MVC   0(10,R4),PLACE
         SH    R4,=H'5'
         MVC   0(5,R4),PREF1
         CH    R5,=H'5'
         BH    NOTSAVED
         L     R4,SCREENB2
         LA    R4,92(,R4)
         ST    R4,SCREENB2
         B     NOTSAVED
OKOK4    MVC   0(10,R4),PLACE
         MVC   PLACE(10),STOWN
         AH    R5,=H'15'       POINT TO NEXT SLOT
         CH    R5,=H'88'       IS IT LAST SLOT ON LINE?
         BL    LAPLAP          NO, REPEAT PROCESS
         L     R3,WORKWORD     YES, LOAD CURRENT LINE ADDRESS
         AH    R3,=H'92'       ADD LENGTH OF LINE
         C     R3,PUTBUFA      REACHED END OF BUFFER AREA?
         BNL   ERROR7          YES, ERROR
         ST    R3,WORKWORD     NO, SAVE NEW LINE ADDRESS
         SR    R5,R5           RESET BYTE ADRESS TO SLOT NUMBER ONE
         LA    R5,5(,R5)
         B     LAPLAP          REPEAT PROCESS
NOTSAVED CLI   TYPE,C'X'
         BE    NOREFR
         CALL  ISPLINK,(CONTROL,DISPLAY,REFRESH),VL  REFRESH
NOREFR   CLI   TYPE+1,C'Z'
         BNE   NEXT22
         MVI   TYPE+1,X'00'
NEXT22   B     PREWRITE
*NEXT22  LH    R0,=H'8'        CLEAR SCREEN....LOAD LENGTH
*        LA    R1,CLRSCRN                      LOAD ADDRESS
*        A     R1,PUTR1                        HIGH ORDER BYTE
*        TPUT  (1),(0),R                       WRITE ERASE
PREWRITE SR    R1,R1           R1 IS THE LENGTH RETURNED BY TGET, SO
         LA    R1,3(,R1)          FOR RETURN IT IS MINIMUM OF 3
WRITE    L     R2,SCREENA
         LA    R4,100(,R9)     POINT R4 PAST WRITE CTL CHARS
         LH    R3,=H'2116'     LOAD LENGTH OF SCREEN
         LH    R5,=H'2116'
         MVCL  R4,R2           MOVE CURRENT SCREEN TO BUFFER
         SR    R5,R5
         SR    R2,2
         LA    R5,5(,R5)
         LA    R4,100(,R9)
         OC    54(44,R9),BLNKS
OROR     CH    R5,=H'88'
         BL    NEXTOX
         LA    R4,92(,R4)
         LA    R2,1(,R2)
         CH    R2,=H'23'
         BNL   ENOUGH
         SR    R5,R5
         LA    R5,5(,R5)
NEXTOX   LA    R3,0(R4,R5)
         OC    0(8,R3),BLNKS
         LA    R5,15(,R5)      POINT TO NEXT SLOT
         B     OROR            NO, REPEAT PROCESS
ENOUGH   L     R2,GETBUFA
         SH    R2,=H'5'
         MVC   0(4,R2),FILLER
         A     R1,LENGTHP      R1 IS EITHER 3 OR VALUE RETURNED FROM
         ST    R1,LENGTHC         LAST TGET; ADD NORMAL SCREEN LENGTH
         BCTR  R10,R0          DECREMENT R10
         MVC   0(4,R10),DUMMY  MOVE CTL CHARS TO BRIDGE OUTBUF WITH
         LA    R10,1(,R10)        GETBUF, THEN INCREMENT
         LR    R1,R9           LOAD OUTBUF ADDRESS
         A     R1,PUTR1        FIX HIGH ORDER BYTE
         L     R0,LENGTHC      LOAD LENGTH OF COMPOSITE BUFFER
         TPUT  (1),(0),R       WRITE SCREEN
         MVC   DUMMY+1(2),CURSOR
         MVC   54(46,R9),LINE1DSN
         MVI   0(R9),X'40'
         B     TGETX           PERFORM NEXT TGET
ERROR1   LA    R1,ERR1
         B     ERRWRITE                  GO AND WRITE IT
ERROR3   LA    R1,ERR3
         B     ERRWRITE
ERROR4   LA    R1,ERR4
         B     ERRWRITE
ERROR5   LA    R1,ERR5
         B     ERRWRITE
ERROR6   LA    R1,ERR6
         B     ERRWRITE
ERROR7   LA    R1,ERR7
         B     ERRWRITE
ERROR8   LA    R1,ERR8
         B     ERRWRITE
ERROR9   LA    R1,ERR9
ERRWRITE LH    R0,=H'50'             LOAD WRITE LENGTH
         TPUT  (1),(0),R             HIGH R1 BYTE 0 = 'EDIT'
RETURN   CLOSE (PDSDD)               CLOSE DATASET
         CLOSE (MBRDD)               CLOSE DATASET
         STFSMODE OFF
         L     R15,=F'00'            RESET R15
         LA    R5,DAPARMS            ESTABLISH ADDRESSABILITY
         USING DAPL,R5
         LA    R6,DAFREE             ESTABLISH ADDRESSABILITY
         USING DAPB18,R6
         ST    R6,DAPLDAPB
         XC    DAFREE(44),DAFREE     CLEAR PARM AREA
         MVI   DA18CD+1,X'18'        SET CODE TO DEALLOCATE
         MVC   DA18DDN,INPDD         MOVE IN DDNAME USED BY SYSTEM
         LA    R1,DAPL               POINT TO PARM LIST
         LINK  EP=IKJDAIR,MF=(E,(1)) DEALLOC
         L     R5,ADDRESS            LOAD GETMAIN ADDRESS
         LTR   R5,R5                 ZERO?
         BZ    NOFREE                SKIP IF SO
         L     R1,GETLENG            LOAD LENGTH
         FREEMAIN R,A=(5),LV=(1)     FREE IT
NOFREE   L     13,SAVE+4
         L     14,12(13)
         LM    0,12,20(13)
         BR    14
MBROP    OPEN (MBRDD,(OUTPUT))
         TM    MBRDD+48,X'10'  OPEN OK?
         BNO   MSGG
         MVI   FLAG2,X'01'
         BR    R14
MSGG     MVC   54(46,R9),OPENFMSG
         MVI   0(R9),X'44'
         B     PREWRITE
OPERS    IKJPARM
OPER1    IKJPOSIT DSNAME,USID,PROMPT='PARTITIONED DATA SET NAME'
         IKJENDP
*
* CONSTANTS
*
SAVE     DS    18F             LOCAL SAVE AREA
GETLENG  DC    X'000181D0'     MISNOMER: LNGTH OF GETSIZE FOR FREEMAIN
ADDRESS  DC    F'0'            GETMAIN START ADDRESS
MOVEIT   MVC   0(0,R7),0(R9)   EXEC FOR MOVING DSNAME PARM
MOVEST   MVC   STOWN+8(1),CHAR+3
FINNAM   DC    8XL1'FF'        LAST MEMBER NAME
BYTECNT  DC    H'0'
DIRAREA  DS    CL256           MEMBER DIRECTORY AREA
ERR1     DC    CL50'INVALID PARAMATERS'
ERR3     DC    CL50'ERROR DURING PARAMETER PARSING'
ERR4     DC    CL50'ALLOCATION OF DATA SET FAILED'
ERR5     DC    CL50'OPEN OF DATA SET FAILED'
ERR6     DC    CL50'AN EOF OR SYNAD CONDITION DETECTED ON DATA SET'
ERR7     DC    CL50'AN UNRECOVERABLE PROGRAM ERROR OCCURRED'
ERR8     DC    CL50'INVALID TERMINAL TYPE'
ERR9     DC    CL50'INSUFFICIENT STORAGE TO ACCOMMODATE THE DIRECTORY'
         DS    0D
ZEROES   DC    CL8'00000000'
NUMVAL   DC    XL8'00'
CONTROL  DC    CL8'CONTROL '   THESE THREE FOR..ASKING NEXT SPF
DISPLAY  DC    CL8'DISPLAY '         DISPLAY TO BE FULLY REWRITTEN
REFRESH  DC    CL8'REFRESH '         TO AVOID UNTIDY LOOSE ANDS
ERRORS   DC    CL8'ERRORS  '         DISPLAY TO BE FULLY REWRITTEN
RETURNS  DC    CL8'RETURN  '         TO AVOID UNTIDY LOOSE ANDS
EDIT     DC    CL8'EDIT'       EDIT COMMAND
BROWSE   DC    CL8'BROWSE'     BROWSE COMMAND
CMNDADDR DC    CL8'EDIT'       THESE ARE FOR THE EDIT/BROWSE ISPLINK
DATASET  DS    0CL56                 DSNAME FIELD
QUOTE    DC    CL1''''               LEADING QUOTE
DATASET2 DC    CL55' '               DSNAME PARM
LEFTB    DC    CL1'('          OPENING BRACKET
RIGHTBQ  DC    CL2')'''        CLOSING BRACKET AND TRAILING QUOTE
MNAME    DC    CL8' '          MEMBER NAME STORE
INPDD    DC    CL8' '          DDNAME GENERATED BY THE SYSTEM
STOWN    DC    CL16' '         MEMBER NAME STORE
BLNKS    DC    CL44' '         BLANKET BLANKS
DSNAME   DS    H               IKJDAIR DSNAME AREA..2 BYTE LENGTH
INFILE   DC    CL44' '                 PLUS DSNAME
MEMBER   DC    CL8' '          MEMBER FIELD FOR IKJPARS
SAVED    DC    CL8' SAVED--'
DELETED  DC    CL8' DELETED'
RENAMED  DC    CL8' RENAMED'
ADDED    DC    CL33' DID NOT EXIST - NEW MEMBER ADDED'
SAVEMSG  DC    CL46'*----MEMBER        ---------------------------'
DELFMSG  DC    CL46'*----DELETE FAILED-TRY COMMAND "N"------------'
RENFMSG  DC    CL46'*----RENAME FAILED-TRY COMMAND "N"------------'
FAILEDM  DC    CL46'*----EDIT/BROWSE FAILED-TRY COMMAND "N"-------'
SKELETON DS    0CL92           SEED FOR INITIALIZING SCREEN AREA
         DC    6XL15'1DF0401DF040404040404040404040'
         DC    XL2'4040'
LINE1    DS    0CL92
         DC    3XL3'114040'
         DC    XL2'1DF8'
         DC    CL11'COMMAND ==>'
         DC    XL2'1D88'
         DC    CL20' '
         DC    XL2'1DF8'
LINE1DSN DC    CL46'*---------------------------------------------'
BADOPTMS DC    CL46'*----INVALID SELECTION------------------------'
BADOPTM2 DC    CL46'*----INVALID MEMBER NAME----------------------'
SPFMSG   DC    CL46'*----NON-SPF ENVIRONMENT----------------------'
EMPMSG   DC    CL46'*----DATA SET IS EMPTY------------------------'
SPFMSG2  DC    CL46'*----EDIT AND BROWSE ARE DEACTIVATED----------'
RENMSG   DC    CL46'*----INVALID NEW MEMBER NAME------------------'
RENMSG2  DC    CL46'*----ENTER NEW NAME AT HIGHLIGHTED LOCATION---'
RENWMSG  DC    CL46'*----INVALID FIELD UPDATED--------------------'
RENWMSG2 DC    CL46'*----ENTER NEW NAME OR END TO CANCEL CHANGE---'
OPENFMSG DC    CL46'*----DATA SET COULD NOT BE OPENED FOR UPDATE--'
OPT      DC    XL2'00'
TYPE     DC    XL2'00'
FLAG     DC    XL1'00'
FLAG2    DC    XL1'00'
FLAG3    DC    XL1'00'
FLAG4    DC    XL1'00'
FLAG5    DC    XL1'00'
OPTEND   DS    F
OPTLEN   DS    F
MEMSTA   DS    F
RENBASE  DS    F
RENOFFS  DS    F
RENMEM   DS    F
CHAR     DS    CL24            TEMPORARY STORE FOR TGET CTL CHARS
STORE    DS    F               GENERAL STORE
MEMADDR  DS    F               MEMBER ADDRESS IN DATASET2 FIELD
ECB      DS    F               EVENT CONROL BLOCK
DAPARMS  DS    5A              IKJDAIR LIST
DAALLOC  DS    26F                     ....
DAFREE   DS    11F                     ....
LENGTHG  DC    X'00000243'     MAXIMUM TGET LENGTH
LENGTHP  DC    X'000008AD'     MINIMUM TPUT LENGTH
LENGTHC  DC    X'000008AD'     COMPOSITE TPUT LENGTH
PUTR1    DC    X'03000000'     HIGH ORDER TPUT BYTE
GETR1    DC    X'81000000'     HIGH ORDER TGET BYTE
STSIZER  DC    X'0A000000'     HIGH ORDER STSZ BYTE
DUMMY    DC    X'11404D13'     BRIDGE CTL CHARS FOR COMPOSITE TPUT
ERASE    DC    X'3C404000'
FILLER   DC    X'11404D13'     BRIDGE CTL CHARS FOR COMPOSITE TPUT
CURSOR   DC    X'404D'
SAVECUR  DC    X'404D'
FIELD1   DC    X'4011404D13114040' WRITE CTL CHARS FOR TPUT
PREF1    DC    X'1D88401DF0'   PREFIX TO MEMBER NAME IN SCREEN AREA
CLRSCRN  DC    X'401140403C404000' WRITE CTL CHARS FOR CLEAR SCREEN
MIMNAME  DC    X'5B40404040404040'
MAXNAME  DC    X'E9F9F9F9F9F9F9F9'
PREFX    DC    X'D91D88136D6D6D6D6D6D6D6D1DF0'
PLACE    DC    CL10' '
SPOT     DC    CL2' '
SCREENA  DS    F               START ADDRESS FOR SCREEN DATA
SCREENB  DS    F               START ADDRESS FOR SCREEN DATA
SCREENB2 DS    F               END   ADDRESS FOR SCREEN DATA
WORKWORD DS    F
GETBUFA  DS    F               OUTPUT BUFFER ADDRESS
PUTBUFA  DS    F               INPUT  BUFFER ADDRESS
PPL      DS    0F              PPL AREA
PPLUPT   DS    F
PPLECT   DS    F
PPLECB   DS    A(PARMECB)
PPLPCL   DC    V(OPERS)
PPLANS   DC    A(PDLPTR)
PPLCBUF  DS    F
PPLVWA   DC    F'0'
PARMECB  DC    F'0'
PDLPTR   DS    F
PDSDD    DCB   MACRF=(R),DSORG=PS,DDNAME=PDSDD,EODAD=ERROR6,RECFM=U,   *
               SYNAD=ERROR6
MBRDD    DCB   MACRF=(W),DSORG=PO,DDNAME=PDSDD,EODAD=ERROR6,           *
               SYNAD=ERROR6
         IKJCPPL
         IKJDAPL
         IKJDAP08
         IKJDAP18
         CVT   DSECT=YES
         END   LISTX
