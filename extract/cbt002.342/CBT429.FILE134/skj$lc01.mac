         TITLE 'SKJ$LC01 - $SPACE/$LISTC INITIALIZATION AND PARSE'
SKJ$LC01 START 0
         EJECT
         SKJ$LCPD
         EJECT
         IKJCPPL
         SPACE 5
         IKJPPL
         SPACE 5
         IKJDAPL
         EJECT
         IKJUPT
         EJECT
         IKJPSCB
         EJECT
         IKJEFFMT MTDSECT=YES
         EJECT
         IKJEFFDF DFDSECT=YES
         EJECT
         IKJDAP08
         EJECT
         CVT   DSECT=YES
         EJECT
         PRINT NOGEN
         SPACE 2
         DCBD  DSORG=PS
         SPACE 2
         PRINT GEN
         EJECT
***********************************************************************
*                                                                     *
*  EQUATES                                                            *
*                                                                     *
***********************************************************************
         SPACE 1
R0       EQU   0                  WORK REGISTER
R1       EQU   1                  PARAMETER LIST ADDRESS REGISTER
R2       EQU   2                  WORK REGISTER
R3       EQU   3                  WORK REGISTER
R4       EQU   4                  WORK REGISTER AND UPT BASE REGISTER
R5       EQU   5                  WORK REGISTER
R6       EQU   6                  WORK REGISTER
R7       EQU   7                  WORK REGISTER
R8       EQU   8                  WORK REGISTER
R9       EQU   9                  WORK REGISTER
R10      EQU   10                 PDL BASE REGISTER
R11      EQU   11                 COMMON AREA BASE REGISTER
R12      EQU   12                 CSECT BASE REGISTER
R13      EQU   13                 SAVE REGISTER
R14      EQU   14                 LINK REGISTER
R15      EQU   15                 ENTRY POINT AND RETURN CODE REGISTER
         SPACE 1
PERIOD   EQU   C'.'
PRESENT  EQU   X'80'              MASK TO INDICATE PARAMETER PRESENCE
QUAL     EQU   X'40'              MASK TO INDICATE QUOTED DATA SET NAME
MTMASK   EQU   X'81'              MTPL INSERT MASK
         SPACE 1
PRISPACE EQU   1                  PRIMARY SPACE ALLOCATION (TRACKS)
SECSPACE EQU   2                  SECONDARY SPACE ALLOCATION (TRACKS)
LRECL    EQU   80                 OUTPUT DATA SET LRECL
BLKSIZE  EQU   0                  OUTPUT DATA SET DEFAULT BLKSIZE
         EJECT
***********************************************************************
*                                                                     *
*  HOUSEKEEPING                                                       *
*                                                                     *
***********************************************************************
         SPACE 1
SKJ$LC01 CSECT
SKJ$LC01 AMODE 31
SKJ$LC01 RMODE 24
         BC    15,14(,R15)
         DC    X'08'
         DC    CL8'SKJ$LC01'
         DS    0H
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15
         USING SKJ$LC01,R12            ESTABLISH CSECT BASE REGISTER
         ST    R13,SAVE+4
         LR    R2,R13
         LA    R13,SAVE                ESTABLISH LOCAL SAVE AREA
         ST    R13,8(,R2)
         L     R11,0(,R1)              PICK UP ADDRESS OF COMMON AREA
         USING SKJ$LCPD,R11            ADDRESSABILITY TO COMMON AREA
         SPACE 1
***********************************************************************
*                                                                     *
*  $LCSPF ENTRY - PERFORM INITIALIZATIONS                             *
*                                                                     *
***********************************************************************
         SPACE 1
         TM    $LCFLGS1,$LCSPFF        $LCSPF ENTRY?
         BZ    PARSE                   NO  - PARSE COMMAND BUFFER
         L     R7,$LCPARM              ADDRESS OF PARM FIELD
         LH    R8,0(,R7)               LENGTH OF PREFIX
         LTR   R8,R8                   LENGTH ZERO?
         BP    MOVPREF                 NO  - CONTINUE
         OI    $LCFLGS1,$LCERR         SET ERROR FLAG
         B     RETURN                  RETURN
MOVPREF  STH   R8,$LCINDL              STORE INDEX LENGTH IN COMMON
         LA    R7,2(,R7)               POINT TO INDEX NAME
         BCTR  R8,0                    REDUCE BY 1 FOR MVC
         EX    R8,MOVINDX              MOVE INDEX NAME TO COMMON
         SPACE 1
***********************************************************************
*                                                                     *
*  $LCSPF ENTRY - INITIALIZE ISPF TABLE                               *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R2,$LCDSN               ADDRESS OF SPF DATA SET NAME
         ST    R2,VDEFDSN+8            STORE IN ISPLINK PARM LIST
         LA    R1,VDEFDSN              ADDRESS OF ISPLINK PARM LIST
         L     R15,VISPLINK            ADDRESS OF ISPLINK ROUTINE
         BALR  R14,R15                 VDEFINE SPF DATA SET NAME
         SPACE
         LA    R2,$LCVSER              ADDRESS OF SPF VOLUME SERIAL
         ST    R2,VDEFVOL+8            STORE IN ISPLINK PARM LIST
         LA    R1,VDEFVOL              ADDRESS OF ISPLINK PARM LIST
         L     R15,VISPLINK            ADDRESS OF ISPLINK ROUTINE
         BALR  R14,R15                 VDEFINE SPF VOLUME SERIAL
         SPACE
         LA    R2,$LCTABL              ADDRESS OF SPF TABLE NAME
         ST    R2,TBCREAT+4            STORE IN ISPLINK PARM LIST
         LA    R1,TBCREAT              ADDRESS OF ISPLINK PARM LIST
         L     R15,VISPLINK            ADDRESS OF ISPLINK ROUTINE
         BALR  R14,R15                 TBCREATE SPF TABLE
         B     RETURN                  RETURN
         SPACE 1
***********************************************************************
*                                                                     *
*  PARSE INPUT COMMAND                                                *
*                                                                     *
***********************************************************************
         SPACE 1
PARSE    LA    R1,$LCPPL               LOAD ADDRESS OF PPL
         USING PPL,R1                  ESTABLISH PPL ADDRESSABILITY
         LM    R3,R6,$LCCPPL
         ST    R3,PPLCBUF              SET UP
         ST    R4,PPLUPT                 PARSE
         ST    R6,PPLECT                   PARAMETER
         LA    R3,$LCECB                     LIST
         ST    R3,PPLECB
         CALLTSSR EP=IKJPARS,MF=(E,(1))     BRANCH TO PARSE ROUTINE
         NR    R15,R15                 PARSE RETURN CODE ZERO?
         BZ    PARSOK                  YES - CONTINUE
         DROP  R1
         SPACE 1
*                  WRITE ERROR MESSAGE
         SPACE 1
         LA    R1,$LCMTPL              ADDRESS OF IKJEFF02 PARM LIST
         USING MTDSECTD,R1             ADDRESSABILITY TO PARM LIST
         MVC   MTMSGID,MSGID1          SET MESSAGE NUMBER
         STC   R15,WORK+3              STORE PARSE RETURN CODE
         LA    R3,WORK+3               ADDRESS OF RETURN CODE INSERT
         ST    R3,MTINSRT              STORE IN PARAMETER LIST
         MVI   MTLEN,MTMASK            SET LENGTH OF INSERT
         CALLTSSR EP=IKJEFF02,MF=(E,(1))    ISSUE ERROR MESSAGE
         OI    $LCFLGS1,$LCERR         SET ERROR INDICATOR
         B     RETURN                  RETURN
         DROP  R1
         SPACE 1
***********************************************************************
*                                                                     *
*  EVALUATE PARAMETERS                                                *
*                                                                     *
***********************************************************************
         SPACE 1
PARSOK   L     R10,$LCANS              PICK UP ANSWER AREA ADDRESS
         USING $LCPDL,R10              ESTABLISH AREA ADDRESSABILITY
         SPACE 1
*                  LEVEL(INDEX-NAME)
         SPACE 1
         TM    INDEXL+6,PRESENT        WAS LEVEL PARAMETER SUPPLIED?
         BZ    GETPREF                 NO - GO TO OBTAIN USER PREFIX
         L     R7,INDEXL               PICK UP INDEX NAME ADDRESS
         LH    R8,INDEXL+4             PICK UP INDEX NAME LENGTH
         B     SETARG                  GO TO STORE IN RETURN ARGUMENT
         USING UPT,R4                  ESTABLISH UPT ADDRESSABILITY
GETPREF  LA    R7,UPTPREFX             PICK UP ADDRESS OF USER PREFIX
         XR    R8,R8                   CLEAR REGISTER 8
         IC    R8,UPTPREFL             PICK UP LENGTH OF USER PREFIX
         NR    R8,R8                   IS LENGTH ZERO (PREFIX NULL)?
         BNZ   SETARG                  NO - STORE IN RETURN ARGUMENT
         DROP  R4                      DROP UPT ADDRESSABILITY
         USING PSCB,R5                 ESTABLISH PSCB ADDRESSABILITY
         LA    R7,PSCBUSER             PICK UP ADDRESS OF USERID
         IC    R8,PSCBUSRL             PICK UP LENGTH OF USERID
         DROP  R5                      DROP PSCB ADDRESSABILITY
SETARG   STH   R8,$LCINDL              STORE INDEX LENGTH IN COMMON
         BCTR  R8,0                    REDUCE LENGTH BY 1 FOR MVC
         EX    R8,MOVINDX              MOVE INDEX NAME TO COMMON
         SPACE 1
*                  OUTDATASET/ODS(DATA-SET-NAME)
         SPACE 1
         TM    ODSN+6,PRESENT          WAS ODS PARAMETER SUPPLIED?
         BZ    EVALVOL                 NO - EVALUATE NEXT PARAMETER
         OI    $LCFLGS1,$LCODS         INDICATE ODS SPECIFIED
         LH    R3,ODSN+4               PICK UP LENGTH OF DSNAME
         STH   R3,DA08DSN              STORE IN DAIR DSNAME BUFFER
         BCTR  R3,0                    REDUCE LENGTH BY 1 FOR MVC
         L     R4,ODSN                 ADDRESS OF DATA SET NAME
         EX    R3,MOVDSN               MOVE DSNAME TO DAIR DSN BUFFER
         LA    R9,$LCDA08B             ADDRESS OF DAIR PARAMETER BLOCK
         USING DAPB08,R9               ADDRESSABILITY TO DAPB
         TM    ODSN+6,QUAL             DSNAME FULLY-QUALIFIED?
         BO    EVALVOL                 NO - EVALUATE NEXT PARAMETER
         OI    DA08CTL,DA08UID         SET PREFIX DAIR CONTROL FLAG
         DROP  R9
         SPACE 1
*                  VOLUMES
         SPACE 1
EVALVOL  OI    $LCFLGS1,$LCVOL         TURN VOLUMES INDICATOR ON
         TM    $LCFLGS1,$LCSPACE       $SPACE ENTRY?
         BO    EVALPRT                 GO TO EVALUATE NEXT PARAMETER
         NC    VOLUMES(2),VOLUMES      WAS VOLUMES KEYWORD SUPPLIED?
         BNZ   RLSE                    YES - RELEASE PARSE STORAGE
         NI    $LCFLGS1,255-$LCVOL     TURN VOLUMES INDICATOR OFF
         B     RLSE                    GO TO RELEASE PARSE STORAGE
         SPACE 1
*                  PRINT/NOPRINT
         SPACE 1
EVALPRT  LH    R2,PRINTOPT             PICK UP KEYWORD NUMBER
         BCT   R2,EVALCRE              2 --> NOPRINT : CONTINUE
         OI    $LCFLGS2,$LCPRINT       1 --> PRINT : TURN INDICATOR ON
         SPACE 1
*                  CREDT(NNNN) AND/OR REFDT(NNNN)
         SPACE 1
EVALCRE  TIME  BIN,DATEWORK,           OBTAIN DATE AND TIME            *
               DATETYPE=YYYYDDD,LINKAGE=SYSTEM
         XC    DOUBLE,DOUBLE           CLEAR DOUBLEWORD FOR CVB
         L     R0,DATE                 R0 = 0YYYYDDD
         LA    R1,12                   R1 = 0000000C
         SLL   R1,28                   R1 = C0000000
         SRDL  R0,12                   R0 = 0000YYYY, R1 = DDDC0000
         STCM  R1,B'1100',DOUBLE+6     STORE DAY-IN-YEAR (0000DDDC)
         CVB   R8,DOUBLE               CONVERT DAY-IN-YEAR TO BINARY
         SLL   R1,12                   R0 = 0000YYYY, R1 = C0000000
         SLDL  R0,4                    R0 = 000YYYYC, R1 = 00000000
         ST    R0,DOUBLE+4             STORE YEAR (000YYYYC)
         CVB   R9,DOUBLE               CONVERT YEAR TO BINARY
         LA    R5,100                  INITIALIZE REGISTER 5
         LA    R2,2                    INITIALIZE REGISTER 2
         SPACE 1
         LA    R6,CREDTD               ADDRESS OF CREDT IN PDL
         LA    R7,$LCCREDT             ADDRESS OF CREDT IN COMMON
         B     EVALDAT                 GO TO EVALUATE DATE
EVALREF  LA    R6,REFDTD               ADDRESS OF REFDT IN PDL
         LA    R7,$LCREFDT             ADDRESS OF REFDT IN COMMON
         SPACE 1
EVALDAT  TM    6(R6),PRESENT           WAS KEYWORD SUPPLIED?
         BZ    ENDDAT                  NO - BYPASS EVALUATION
         L     R6,0(,R6)               ADDRESS OF BINARY NUMBER OF DAYS
         L     R6,0(,R6)               LOAD BINARY NUMBER OF DAYS
         LTR   R6,R6                   NUMBER OF DAYS POSITIVE?
         BNP   ENDDAT                  NO - BYPASS EVALUATION
         LR    R3,R8                   PICK UP CURRENT DAY-IN-YEAR
         LR    R4,R9                   PICK UP CURRENT YEAR
         SR    R3,R6                   SUBTRACT DAYS FROM CURRENT
         B     TEST                    GO TO TEST RESULT
LOOP     BCTR  R4,0                    REDUCE YEAR NUMBER BY 1
         LR    R1,R4                   YEAR IN REGISTER 1
         SRL   R1,2                    DIVIDE YEAR BY 4 (NO REMAINDER)
         SLL   R1,2                      AND MULTIPLY BY 4
         CR    R1,R4                   YEAR DIVISIBLE BY 4?
         BNE   NOTLEAP                 NO - NOT LEAP YEAR
         XR    R0,R0                   CLEAR REGISTER 0
         DR    R0,R5                   DIVIDE YEAR BY 100
         NR    R0,R0                   YEAR DIVISIBLE BY 100?
         BNZ   LEAPYR                  NO - LEAP YEAR
         LR    R0,R1                   YEAR/100 IN REGISTER 0
         SRL   R0,2                    DIVIDE YEAR/100 BY 4 (NO REM)
         SLL   R0,2                      AND MULTIPLY BY 4
         CR    R0,R1                   YEAR DIVIBLE BY 400?
         BE    LEAPYR                  YES - LEAP YEAR
NOTLEAP  AH    R3,NDAY                 ADD # OF DAYS IN NORMAL YEAR
         B     TEST                    GO TO TEST RESULT
LEAPYR   AH    R3,NDAYL                ADD # OF DAYS IN LEAP YEAR
TEST     BNP   LOOP                    NEGATIVE RESULT - CONTINUE LOOP
         STH   R3,2(,R7)               STORE DAY IN YEAR IN COMMON
         SH    R4,BASEYEAR             ADJUST YEAR (OFFSET FROM 1900)
         STH   R4,0(,R7)               STORE YEAR IN COMMON
         OI    0(R7),PRESENT           SHOW KEYWORD PRESENT
ENDDAT   BCT   R2,EVALREF              GO TO EVALUATE REFDT
         SPACE 1
*                  RELEASE STORAGE ACQUIRED BY PARSE
         SPACE 1
RLSE     IKJRLSA $LCANS                RELEASE STORAGE USED BY PARSE
         DROP  R10
         SPACE 1
***********************************************************************
*                                                                     *
*  ALLOCATE AND OPEN OUTPUT DATA SET (IF SPECIFIED)                   *
*                                                                     *
***********************************************************************
         SPACE 1
         TM    $LCFLGS1,$LCODS         OUTDATASET/ODS SPECIFIED?
         BZ    RETURN                  NO - RETURN
         SPACE 1
*                  CONSTRUCT DAIR PARAMETER LIST
         SPACE 1
         LA    R8,$LCDAPL              LOAD ADDRESS OF DAPL
         USING DAPL,R8                 ESTABLISH DAPL ADDRESSABILITY
         LM    R3,R5,$LCCPPL+4
         ST    R3,DAPLUPT              SET UP
         ST    R4,DAPLPSCB               DAIR
         ST    R5,DAPLECT                  PARAMETER
         LA    R3,$LCECB                     LIST
         ST    R3,DAPLECB
         DROP  R8
         SPACE 1
*                  ALLOCATE OUTPUT DATA SET (OLD)
         SPACE 1
         LA    R9,$LCDA08B             ADDRESS OF DAIR PARAMETER BLOCK
         USING DAPB08,R9               ADDRESSABILITY TO DAPB
         OI    DA08DSP1,DA08OLD        SET DISP TO OLD
         CALLTSSR EP=IKJDAIR,MF=(E,$LCDAPL) INVOKE IKJDAIR
         NR    R15,R15                 DAIR RETURN CODE ZERO?
         BZ    ALLOCOK                 YES - GO TO OPEN DATA SET
         C     R15,DAIRRC              DAIR RETURN CODE 8?
         BNE   ALLOCERR                NO - GO TO ISSUE ERROR MESSAGE
         SPACE 1
*                  ALLOCATE OUTPUT DATA SET (NEW)
         SPACE 1
         XC    DA08FLG(6),DA08FLG      ZERO DAIR ERROR FLAGS
         MVI   DA08DSP1,DA08NEW        SET DISP TO NEW
         MVI   DA08DPS2,DA08CAT        SET DISP TO CATLG
         LA    R3,PRISPACE
         ST    R3,DA08PQTY             SET PRIMARY SPACE ALLOCATION
         LA    R3,SECSPACE
         ST    R3,DA08SQTY             SET SECONDARY SPACE ALLOCATION
         OI    DA08CTL,DA08TRKS        INDICATE SPACE UNIT (TRACKS)
         OI    DA08CTL,DA08RLSE        INDICATE SPACE RELEASE
         CALLTSSR EP=IKJDAIR,MF=(E,$LCDAPL) ALLOCATE DATA SET AS NEW
         NR    R15,R15                 DAIR RETURN CODE ZERO?
         BZ    ALLOCOK                 YES - GO TO OPEN DATA SET
         SPACE 1
*                  ISSUE ALLOCATION ERROR MESSAGES
         SPACE 1
ALLOCERR ST    R15,DAIRRC              SAVE DAIR RETURN CODE
         LA    R1,$LCDFDPL             ADDRESS OF IKJEFF18 PARM LIST
         LINK  EP=IKJEFF18             INVOKE DAIRFAIL ROUTINE
         OI    $LCFLGS1,$LCERR         SET ERROR INDICATOR
         B     RETURN                  RETURN
         SPACE 1
*                  OPEN OUTPUT DATA SET
         SPACE 1
ALLOCOK  OI    $LCFLGS2,$LCALLOC       INDICATE OUTDATASET ALLOCATED
         L     R3,$LCODCB              ADDRESS OF OUTPUT DCB
         USING IHADCB,R3               ADDRESSABILITY TO DCB
         LA    R4,OPENEXL              ADDRESS OF OPEN EXIT LIST
         ST    R4,DCBEXLST             STORE IN OUTPUT DCB
         MVC   DCBDDNAM,DA08DDN        MOVE DDNAME TO OUTPUT DCB
         OPEN  ((3),(OUTPUT)),MODE=31  OPEN OUTPUT DATA SET
         TM    DCBOFLGS,DCBOFOPN       OPEN SUCCESSFUL?
         BO    OPENOK                  YES - CONTINUE
         DROP  R3
         SPACE 1
*                  ISSUE OPEN ERROR MESSAGE
         SPACE 1
         LA    R1,$LCMTPL              ADDRESS OF IKJEFF02 PARM LIST
         USING MTDSECTD,R1             ADDRESSABILITY TO PARM LIST
         MVC   MTMSGID,MSGID2          SET MESSAGE NUMBER
         CALLTSSR EP=IKJEFF02,MF=(E,(1))    ISSUE ERROR MESSAGE
         OI    $LCFLGS1,$LCERR         SET ERROR FLAG
         B     RETURN                  RETURN
         DROP  R1
         SPACE 1
***********************************************************************
*                                                                     *
*  RETURN                                                             *
*                                                                     *
***********************************************************************
         SPACE 1
OPENOK   OI    $LCFLGS2,$LCOPEN        INDICATE OUTDATASET OPEN
RETURN   L     R13,SAVE+4              RESTORE REGISTER 13
         RETURN (14,12)                RETURN
         SPACE 1
***********************************************************************
*                                                                     *
*  OUTDATASET/ODS VALIDITY CHECK ROUTINE                              *
*                                                                     *
***********************************************************************
         SPACE 1
         DROP  R12                 DROP CSECT BASE REGISTER TEMPORARILY
         USING *,R15
ODSCHK   STM   R2,R3,28(R13)       SAVE WORK REGISTERS
         XR    R2,R2               SET RETURN CODE TO ZERO
         L     R3,0(,R1)           ADDRESS OF PDE
         TM    14(R3),PRESENT      PDS MEMBER NAME SUPPLIED?
         BZ    CHKRET              NO - RETURN
         LA    R2,4                SET RETURN CODE TO 4
         LA    R3,ODSMSG           ADDRESS OF SECONDARY LEVEL MESSAGE
         ST    R3,8(,R1)           STORE IN PARAMETER LIST SUPPLIED
CHKRET   LR    R15,R2              SET RETURN CODE IN REGISTER 15
         LM    R2,R3,28(R13)       RESTORE WORK REGISTERS
         BR    R14                 RETURN
         DROP  R15
         USING SKJ$LC01,R12        REESTABLISH CSECT BASE REGISTER
         SPACE 1
***********************************************************************
*                                                                     *
*  DATA CONTROL BLOCK OPEN EXIT                                       *
*                                                                     *
***********************************************************************
         SPACE 1
         USING IHADCB,R1               ADDRESSABILITY TO DCB
DCBEXIT  MVI   DCBRECFM,DCBRECF+DCBRECBR    SET RECFM=FB IN DCB
         LH    R3,DCBLRECL             PICK UP LRECL FROM DCB
         LA    R4,LRECL                REQUIRED LRECL
         CR    R3,R4                   LRECL=80?
         BE    LRECLOK                 YES - CONTINUE
         STH   R4,DCBLRECL             SET LRECL=80 IN DCB
LRECLOK  LH    R2,DCBBLKSI             PICK UP BLKSIZE FROM DCB
         NR    R2,R2                   SYSTEM-DETERMINED BLKSIZE (0)?
         BZR   R14                     YES - RETURN
         SRDA  R2,32                   PREPARE FOR DIVIDE
         D     R2,R4                   DIVIDE BLOCKSIZE BY LRECL
         NR    R2,R2                   BLKSIZE A MULTIPLE OF LRECL?
         BZR   R14                     YES - RETURN
SETBLK   LA    R4,BLKSIZE              DEFAULT BLKSIZE
         STH   R4,DCBBLKSI             SET DEFAULT BLKSIZE
         BR    R14
         DROP  R1
         SPACE 1
***********************************************************************
*                                                                     *
*  STORAGE DECLARATIONS                                               *
*                                                                     *
***********************************************************************
         SPACE 1
DATEWORK DS    0D,0CL16           RETURN AREA FOR TIME MACRO
DOUBLE   DC    D'0'               . DOUBLEWORD WORK VARIABLE
DATE     DC    F'0'               . JULIAN DATE (0YYYYDDD)
WORK     DC    F'0'               . FULLWORD WORK VARIABLE
SAVE     DS    18F                LOCAL SAVE AREA
VISPLINK DC    V(ISPLINK)         ADDRESS OF ISPF INTERFACE ROUTINE
OPENEXL  DC    X'85',AL3(DCBEXIT) OPEN EXIT LIST (DCB EXIT)
NDAY     DC    H'365'             NUMBER OF DAYS IN YEAR
NDAYL    DC    H'366'             NUMBER OF DAYS IN LEAP YEAR
BASEYEAR DC    H'1900'
MOVINDX  MVC   $LCINDN(0),0(R7)   INDEX NAME MOVE INSTRUCTION
MOVDSN   MVC   DA08DSN+2(0),0(R4) DATA SET NAME MOVE INSTRUCTION
MSGID1   DC    CL4'S02A'          PARSE ERROR MESSAGE IDENTIFIER
MSGID2   DC    CL4'F09 '          OPEN ERROR MESSAGE IDENTIFIER
ODSMSG   DC    AL2(MSGL),AL2(0)   INVALID ODS SECOND LEVEL MESSAGE
         DC    C'SKJ$LC07A PARTIONED DATA SET MEMBER MAY NOT BE SPECIFI*
               ED'
MSGL     EQU   *-ODSMSG
         SPACE 1
$LCPPL   DS    A                )
         DS    A                )
         DS    A                ) PARSE
         DC    V(SKJ$LCPC)      ) PARAMETER
         DC    A($LCANS)        ) LIST
         DS    A                )
         DC    A(0)             )
$LCANS   DS    A                  ADDRESS OF PDL
         SPACE 1
$LCDAPL  DS    A                )
         DS    A                ) DAIR
         DS    A                ) PARAMETER
         DS    A                ) LIST
         DC    A($LCDA08B)      )
         SPACE 1
$LCDA08B DC    X'0008'          )
         DC    X'0000'          )
         DC    X'0000'          )
         DC    X'0000'          )
         DC    A(DA08DSN)       )
         DC    CL8' '           ) DAIR
         DC    CL8'SYSALLDA'    )
         DC    CL8' '           )
         DC    F'0'             )
         DC    F'0'             )
         DC    F'0'             )
         DC    F'0'             ) PARAMETER
         DC    CL8' '           )
         DC    CL8' '           )
         DC    X'00'            )
         DC    X'00'            )
         DC    X'00'            )
         DC    X'00'            ) BLOCK
         DC    X'000000'        )
         DC    X'00'            )
         DC    CL8' '           )
DA08DSN  DC    AL2(0),CL44' '     DAIR DSNAME BUFFER
         SPACE 1
$LCDFDPL DC    A($LCDAPL)       )
         DC    A(DAIRRC)        )
         DC    A(EFF02P)        ) IKJEFF18
         DC    A(DFID)          ) PARAMETER
         DC    A(0)             )
         DC    A(0)             )
EFF02P   DC    A(0)               ENTRY POINT OF IKJEFF02 (UNKNOWN)
DAIRRC   DC    F'8'               DAIR RETURN CODE
DFID     DC    AL1(0),AL1(DFDAIR)      DAIR IDENTIFIER
         SPACE 1
VDEFDSN  DC    A(VDEFINE)
         DC    A(DSNAME)
         DS    A
         DC    A(CHAR)
         DC    A(F46)
         DC    X'80',AL3(NOBSCAN)
VDEFVOL  DC    A(VDEFINE)
         DC    A(VOLUME)
         DS    A
         DC    A(CHAR)
         DC    A(F6)
         DC    X'80',AL3(NOBSCAN)
TBCREAT  DC    A(TBCREATE)
         DS    A
         DC    A(DSNAME)
         DC    A(VOLUME)
         DC    X'80',AL3(NOWRITE)
DSNAME   DC    F'1'
         DC    F'8'
         DC    CL8'$LCDSN  '
VOLUME   DC    F'1'
         DC    F'8'
         DC    CL8'$LCVOL  '
NOBSCAN  DC    F'1'
         DC    F'8'
         DC    CL8'NOBSCAN '
F6       DC    F'6'
F46      DC    F'46'
VDEFINE  DC    CL8'VDEFINE '
TBCREATE DC    CL8'TBCREATE'
NOWRITE  DC    CL8'NOWRITE '
CHAR     DC    CL8'CHAR    '
         EJECT
***********************************************************************
*                                                                     *
*  PARSE CONTROL LIST AND PARAMETER DESCRIPTOR LIST                   *
*                                                                     *
***********************************************************************
         SPACE 1
SKJ$LCPC CSECT
SKJ$LCPC AMODE 31
SKJ$LCPC RMODE 24
SKJ$LCPC IKJPARM   DSECT=$LCPDL
         SPACE 2
LEVEL    IKJKEYWD
         SPACE 1
         IKJNAME   'LEVEL',SUBFLD=INDEX
         SPACE 2
OUTDS    IKJKEYWD
         SPACE 1
         IKJNAME   'OUTDATASET',SUBFLD=ODS
         SPACE 1
         IKJNAME   'ODS',SUBFLD=ODS
         SPACE 2
VOLUMES  IKJKEYWD
         SPACE 1
         IKJNAME   'VOLUMES'
         SPACE 2
PRINTOPT IKJKEYWD DEFAULT='PRINT'
         SPACE 1
         IKJNAME   'PRINT'
         SPACE 1
         IKJNAME   'NOPRINT'
         SPACE 2
CREDT    IKJKEYWD
         SPACE 1
         IKJNAME   'CREDT',SUBFLD=CREDTX
         SPACE 2
REFDT    IKJKEYWD
         SPACE 1
         IKJNAME   'REFDT',SUBFLD=REFDTX
         SPACE 2
INDEX    IKJSUBF
         SPACE 1
INDEXL   IKJPOSIT  DSNAME,                                             *
               PROMPT='INDEX NAME+',                                   *
               HELP=('THE HIGH-ORDER INDEX NAME OF DATA SETS TO BE LIST*
               ED')
         SPACE 2
ODS      IKJSUBF
         SPACE 1
ODSN     IKJPOSIT  DSNAME,                                             *
               VALIDCK=ODSCHK,                                         *
               PROMPT='OUTPUT DATA SET NAME+',                         *
               HELP=('THE NAME OF THE DATA SET TO CONTAIN THE LISTING')
         SPACE 2
CREDTX   IKJSUBF
         SPACE 1
CREDTD   IKJIDENT  'CREATION DATE THRESHOLD',                          *
               INTEG,MAXLNTH=4,                                        *
               PROMPT='CREATION DATE THRESHOLD+',                      *
               HELP=('A NUMBER OF DAYS (RANGE 0-9999)')
         SPACE 2
REFDTX   IKJSUBF
         SPACE 1
REFDTD   IKJIDENT  'LAST REFERENCE DATE THRESHOLD',                    *
               INTEG,MAXLNTH=4,                                        *
               PROMPT='LAST REFERENCE DATE THRESHOLD+',                *
               HELP=('A NUMBER OF DAYS (RANGE 0-9999)')
         SPACE 2
         IKJENDP
         SPACE 2
         END   SKJ$LC01
