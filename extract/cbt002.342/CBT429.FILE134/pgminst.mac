PROGRAM - UNLOAD THE TAPE USING IEBCOPY.
          THE TARGET DATA SET SHOULD RESIDE ON DASD.
          SPECIFY DSORG=PO AND SUPPLY SUFFICIENT DIRECTORY BLOCKS.
          LET IEBCOPY SUPPLY THE REST OF THE DCB ATTRIBUTES.
          PROGRAM IS WRITTEN IN PL/1 SO IT REQUIRES THE
          PL/1 TRANSIENT LIBRARY FOR EXECUTION.
          THE LOAD MODULE WAS COMPILED WITH THE OPTIMIZING COMPILER.

******************************** BOTTOM OF DATA ************************












































               WERE YOU FOOLED?
------------------------------------------------------------------------
ADVENTURE*ADVENTURE*ADVENTURE*ADVENTURE*ADVENTURE*ADVENTURE*ADVENTURE*AD
------------------------------------------------------------------------
HERE IS THE DEFINITIVE GUIDE FOR ADVENTURE V4.0 (PL/1).
PROGRAM - ADVENTURE LOAD MODULE FROM IBM PL/1 OPTIMIZING COMPILER
          AND RESIDENT LIBRARY RELEASE 4.0.  REQUIRES TRANSIENT
          LIBRARY 4.0 (OR HIGHER, BUT PROBABLY OK UNDER 3.1 ALTHOUGH
          YOU GET A WARNING MESSAGE AT RUN TIME) OR EQUIVALENT FACOM
          PLILIB WITH IBM ALIASES.
EXTERNAL FILES:  1.  DATA BASE (A CARD FILE THINLY DISGUISED AS AN
                     OBJECT DECK FROM THE IBM PL/1 V4.0 COMPILER)
                 2.  STORAGE  (CONTAINING AUTHORIZED USERID LIST,
                     BUSINESS HOURS, BROADCAST MESSAGES & SAVED GAMES)
          THESE FILES ARE DYNAMICALLY ALLOCATED BY THE PROGRAM SO THAT
          CLIST BROWSERS WILL ONLY SEE A CALL OR $ COMMAND, AND NO
          TELL-TALE ALLOC COMMANDS POINTING TO DATA SETS TO ATTACK.
DATA BASE: DDNAME=OBJECT,DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE TO SUIT
          DASD CHARACTERISTICS. CONTAINS LOCATION & OBJECT DESCRIPTIONS,
          TRAVEL TABLES ETC.  MUST BE ROUGHLY IN SYNC WITH THE PROGRAM
          LEVEL.  SUPPLIED IN THIS FILE.  2033 CARDS.
          OPEN FOR INPUT, AND UPDATE BY WIZARD.
STORAGE:  DDNAME=STORAGE,DSORG=PS,RECFM=F,LRECL=4800,BLKSIZE=4800
          ALLOCATED BY INSTALLATION WIZARD.  SPACE DEPENDENT ON MAX
          NUMBER OF SAVED GAMES REQUIRED.  FOR N SAVED GAMES NEED
          N+2 BLOCKS.  CAN HAVE SECONDARY EXTENTS FOR EXPANSION.
          OPENED FOR INPUT AND UPDATE, AND OUTPUT BY WIZARD.
CARD FILE: DDNAME=SOURCE,DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE TO SUIT.
          THIS FILE IS NOT USED BY ADVENTURE BUT IS SUPPLIED FOR USE
          BY WIZARDS TO ENCODE/DECODE CARD FILES TO FOIL UNWANTED
          BROWSERS.  SUGGEST STORING PROGRAM SOURCE IN THIS FORM.
          (A SECRET MESSAGE CODED ON 7TH LINE IF YOU WANT TO TRY IT.)
          ULTRA SIMPLE CODE THAT ANY ONE COULD CRACK IF THEY EXAMINED
          THE HEXADECIMAL.  SIMILAR (BUT NOT COMPLETELY THE SAME) USED
          FOR ENCODING/DECODING DATA BASE.  IT IS ITS OWN INVERSE.
          MUST BE PRE-ALLOCATED BEFORE CALLING PROGRAM.  OPENED FOR
          UPDATE BY WIZARD.
EXTERNAL SUBROUTINES:
RANDU   - (FORTRAN - FORTLIB NOT NEEDED FOR LINK) RANDOM NUMBER ROUTINE
TREAD   - (ASM)  TGET ROUTINE
TWRITE  - (ASM)  TPUT ROUTINE
ITIME   - (ASM)  RANDOM NUMBER ROUTINE
CLRSCRN - (ASM)  TPUT ROUTINE TO CLEAR SCREEN & TELL IF VDU BY ZERO RC
DECDATE - (ASM)  GET CURRENT DATE IN FIXED DEC(5,0) YYDDD
R062A10 - (ASM)  DYNAMIC ALLOCATION/DEALLOCTION ROUTINE
WARNMSG - (ASM)  TPUT ROUTINE - INTERASID TO GRAND WIZARD
WHISPER - (ASM)  TGET ROUTINE FOR PASSWORD ECHO SUPPRESSION ON VDU
INSTALLATION: (ALSO READ JULY 1984 NOTES BELOW)
    1.  PREPARE FILES.  DECIDE WHERE TO STORE THE DATA BASE.  IT CAN BE
        A SEQUENTIAL FILE OR A PDS MEMBER.  DECIDE WHERE THE STORAGE
        FILE WILL BE AND HOW BIG.  TWO (2) TRACKS OF A 3350 WILL ALLOW
        UP TO FOUR (4) GAMES TO BE SAVED CONCURRENTLY.  ALLOCATE IT
        IN ISPF 3.2.  ALLOC COMMAND OR IEFBR14 IN BATCH IS NOT GOOD
        ENOUGH SINCE THEY DON'T WRITE AN END-OF-FILE MARKER AT THE
        START OF THE DATA SET, THUS MAKING PROGRAM CRASH.
        LOAD (IE. COPY) THE DATA BASE INTO ITS FILE.
    2.  GET LOAD MODULE.  THIS CAN BE DONE IN TWO (2) MAIN WAYS.
     A. CUSTOMIZE LOAD MODULE (IE. BY ZAPPING).
        RECOMMEND FULL SCREEN ZAPPER FROM UCLA (SUPPLIED IN THIS FILE).
        ZAP IN YOUR DATE SET NAMES, MEMBER NAME (BLANK IF SEQUENTIAL)
        AND OS PASSWORDS (IF APPLICABLE).
        TSO SYNTAX:
        ZAP SHR.LOAD         <==== YOUR LOAD LIBRARY
        MPROGRAM             <==== MEMBER PROGRAM
        EPROGRAM2            <==== CSECT NAME
        L/SEC.STOR/          <==== FIND DATASET NAME *** SEE BELOW
        S/TSS.ST.D/          <==== START OF REPLACEMENT NAME
        +8                   <==== ADJUST CURRENT POSITION
        S/ATA/               <==== END OF REPLACEMENT NAME
        L/AB/                <==== FIND STORAGE OS PASSWORD
        S/XY/                <==== NEW PASSWORD IS XYXYXYXY
        L/SEC.OBJ /          <==== FIND DATA BASE DATA SET NAME *** SEE
        S/FRED.OBJ/          <==== NEW DATA BASE DATA SET NAME
        L/OBJCTDEK/          <==== FIND MEMBER NAME FOR DATABASE
        S/PL1OBJ  /          <==== BLANK THIS IF NOT A PDS MEMBER
        L/OB/                <==== FIND DATA BASE OS PASSWORD
        S/ME/                <==== NEW OS PASSWORD IS MEMEMEME
        ZAP                  <==== REPLACE THE BLOCK
        END                  <==== END THE ZAP SESSION
        NO                   <==== DELETE THE ZAP LOG
             FOR THE IBM LOAD MODULE BROWSE IT TO FIND THE APPROPRIATE
        CHARACTER STINGS TO ZAP.  "F 'STORAGE.FILENAME'" IN ISPF.
     B. EDIT AND RECOMPILE PL/1 PROGRAM.  EXTERNAL SUBROUTINES CAN BE
        LINKED IN BY USING THE SUPPLIED LOAD LIBRARY AS SYSLIB OR FROM
        THE OLD LOAD MODULE.  IF THIS METHOD IS USED UNIT AND VOLSER
        INFORMATION CAN BE HARD-CODED SO THAT THE FILES DON'T HAVE TO
        BE CATALOGUED.  (PREVENTS USERS FROM STUMBLING ACROSS THE FILES
        VIA LISTCAT.)  THIS METHOD WILL HAVE TO BE USED IF YOU WANT
        DATA SET NAMES LONGER ROOM FOR ZAPPING PERMITS, OR IF YOU WANT
        OS PASSWORDS WHICH DON'T CONFORM TO THE 12121212 PATTERN.
        THE IDEA OF THIS WAS THAT BROWSERS WOULDN'T RECOGNIZE THE
        PASSWORDS.  YOU MAY NOT WANT TO CODE SIMPLE ASSIGNMENT
        STATEMENTS (AGAIN BECAUSE OF LOAD MODULE BROWSING) BUT
        COMPLICATE IT BY REUSING LITERALS, SUBSTR IN FROM XLATEFR (WHICH
        IS JUST 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'), OR SUBSTRING IN ONE (1)
        CHARACTER AT A TIME, WHICH SHOULD BE TRANSLATED AS MVI
        INTRUCTIONS.  NUMERIC CHARACTER STRINGS COULD BE STORED AS
        FIXED BIN OR DEC NUMBERS.  IT IS UP TO YOU TO ASSESS THE
        MEASURES NECESSARY FOR YOUR INSTALLATION.  *** SEE BELOW
    3.  PERFORM AN "INSTALLATION INITIALIZATION RUN".
U==>    $ PROGRAM '/$Ö^%?'                       OR
U==>    CALL 'TSO.LOADLIB(PROGRAM)' '/$Ö^%?'     AS APPLICABLE
              WHERE ? = 0 FOR SUNDAY, 1 FOR MONDAY, 2 FOR ....  ETC.
        INITIALIZING...
        READING SECTION # 1
        READING SECTION # 2
           "       "     "
        READING SECTION #12
        READING SECTION # 0
         ....USAGE STATS
        WELCOME TO ADVENTURE!!  DO YOU WANT INSTRUCTIONS?
U==>    N
        YOU ARE STANDING.....
U==>    WIZARD
        DONE!
U==>    STG #     WHERE # IS THE NUMBER OF RECORDS YOU HAVE DECIDED ON
        WRITING # RECORDS TO MOD FILE, OK?
U==>    YES
        DONE!
U==>    ADD MYUID            FIRST ID IS GRAND WIZARD
        ADDED
U==>    ADD USER1
        ADDED
U==>    ADD USER2
        ADDED
U==>    LISTIDS
        MYUID   USER1   USER2
U==>    LISTID MYUID
        MYUID   0
U==>    EXIT
        READY
                 AFTER THIS WIZARDS AND PLEBS ALIKE JUST CALL OR INVOKE
        PROGRAM, USUALLY BY USING A SIMPLE CLIST IN FILE SYSPROC.
        TO GET INTO WIZARD MODE AT ANY TIME SIMPLY SAY "WIZARD".
        THE PASSWORD IS RC=04 IN UPPERCASE, AND HIT PF/11/23.
NOTES/HINTS:  READ ALL INSTRUCTIONS, HELP AND INFO (BOTH IN PLAY AND
        WIZARD MODES) CAREFULLY AT LEAST ONCE.  IN PARTICULAR, NOTE
        HARDCOPY AND PFKEY FACILITIES, AND RESTORE CAPABLITIES.  A
        WIZARD HAS EXTENSIVE TESTING AND MANIPLULATING FACILITIES,
        WHICH CAN BE USED TO CHEAT (ALTHOUGH I'M SURE *YOU* WOULDN'T)
        OR SET BACK ANOTHER ADVENTURER WHILE HE THINKS HIS GAME IS
        SAFELY STORED ON DISK.
STORAGE FILE MAINTENANCE:
        ADD, DEL AND LISTI PROVIDE ADEQUATE USERID LIST CAPABLITIES,
        AND HOURS ALLOWS RESTRICTING WEEK-DAY ACCESS ON A TIME BASIS.
        THE BROADCAST RECORD IF EXTENSIVELY USED, MAY BE "OUT-OF-SYNC"
        SHALL WE SAY.  TO WIPE IT CLEAN REPLY "DEL" TO THE FIRST QUERY
        AFTER A SCANSTG.  "STG" CAN BE USED TO BLANK OUT THE WHOLE FILE,
        OR, IF DISP=MOD, TO EXTEND THE FILE.
            THE ONLY PECULIARITY ABOUT THE FIRST USERID IN THE LIST IS
        THAT THIS USER RECEIVES MESSAGES (IF LOGGED ON) ABOUT ACCESSES
        TO ADVENTURE.  IF THIS IS NOT WANTED, SIMPLY START THE LIST
        (AS SHOWN BY LISTIDS) WITH A DUMMY ENTRY.
            DYNAMIC DEALLOCATION IS PERFORMED AT THE END OF THE PROGRAM.
        IF THE SIXTH CHARACTER OF ANY INPUT PARAMETER IS A '#' THEN
        DISP FOR THE DYNALLOCS IS CHANGED TO 'MOD'.  THIS DOESN'T AFFECT
        THE DATA BASE SINCE IT IS NEVER OPENED FOR OUTPUT, BUT IT ALLOWS
        A WIZARD TO EXTEND THE STORAGE FILE WITHOUT LOSING ANY DATA.
        NOTE THAT EXCLUSIVE USE IS IMPLIED.
        IF THE SIXTH CHARACTER OF ANY INPUT PARAMETER IS A '@' THEN
        NO DYNAMIC ALLOCATION IS PERFORMED.
        IF THE PROGRAM IS INTERRUPTED, DEALLOCATION IS DONE AND THE
        USER IS LOGGED OFF.
        SEE CLIST ADVINIT TO DECODE SOURCE.
                    ANY PROBS THEN GIVE ME A BUZZ
                              SIGNED-  THE GRAND WIZ.
JULY 1984 -
       THE ABOVE REMAINS TRUE EXCEPT FOR THE FOLLOWING:
1. LOAD MODULE:
 A. COMPILE & LINK DETAILS:
   PROGRAM  - IBM   PL/1 1.4.0  AT 8311   PUT LEVEL WITH OPT(2)
 B. ZAPPING:
    DSNAMES: STORAGE$.STORAGE$.STORAGE$.STORAGE$.STORAGE$
             $OBJECT$.$OBJECT$.$OBJECT$.$OBJECT$.$OBJECT$
    MEMBERS: STGMEMBR
             OBJMEMBR
  PASSWORDS: STG-PSWD
             OBJ-PSWD
   NOTE: REMEMBER TO BLANK OUT UNUSED CHARACTER POSITIONS.
2. FACILITES:
 A. LISTIDS NOW HAS AN "ALL" OPERAND AVAILABLE FOR LISTING USAGE
    COUNTS OF ALL USERS.
 B. ORAC? PROCESSING HAS BEEN INCREASED.
3. FILE HINT:
    GET A PDS WITH DCB=(RECFM=FB,LRECL=80,BLKSIZE=4800).
    HAVE DATA BASE AND STORAGE AS MEMBERS OF THIS FILE.
    CAN'T HAVE DISP=MOD TO PDS MEMBER, BUT TO EXTEND STORAGE FILE
    JUST ADD 60 BLANK LINES FOR EACH STORAGE RECORD YOU WANT IN
    ISPF EDIT.  CAN STILL CREATE BLANK STORAGE FILE IN THE USUAL
    WIZARD WAY, OR AGAIN USE EDIT.
