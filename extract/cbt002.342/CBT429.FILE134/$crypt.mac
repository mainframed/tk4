         PRINT NOGEN
$CRYPT   START 0
$CRYPT   CSECT
         ENTRY $ENCRYPT,$DECRYPT
$ENCRYPT DS    0H
         BC    15,14(0,15)
         DC    X'08'
         DC    CL8'$ENCRYPT'
         STM   14,12,12(13)        SAVE REGISTERS
         USING $ENCRYPT,15         ESTABLISH CSECT BASE REGISTER
         MVI   ENTFLG,ENFLG
         B     START
         DROP  15
$DECRYPT DS    0H
         BC    15,14(0,15)
         DC    X'08'
         DC    CL8'$DECRYPT'
         STM   14,12,12(13)        SAVE REGISTERS
         USING $DECRYPT,15
         MVI   ENTFLG,DEFLG
         DROP  15
START    BALR  12,0
         USING *,12
         ST    13,SAVE+4
         LR    2,13
         LA    13,SAVE             ESTABLISH LOCAL SAVE AREA
         ST    13,8(0,2)
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ENFLG    EQU   X'00'
DEFLG    EQU   X'01'
         TM    0(R1),X'80'     IS IT INVOKED AS A CMND PROCESSOR?
         BO    ERROR1          NO, FLEE
         LR    R8,R1           RESTORE PARM ADDRESS
         USING CPPL,R8         ESTABLISH ADDRESSABILITY
         MVC   PPLCBUF,CPPLCBUF
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         L     R2,CPPLPSCB     ADDRESSABILITY
         USING PSCB,R2
         LA    R5,PSCBUSER     USERID ADDRESS
         IC    R6,PSCBUSRL     USERID LENGTH
         STH   R6,PREFLEN      STORE USERID/PREFIX LENGTH
         BCTR  R6,R0           DECREMENT FOR MOVE
         EX    R6,MOVEIT2      MOVE USERID/PREFIX TO FIELD
         DROP  R2
         CALLTSSR EP=IKJPARS,MF=(E,PPL)
         LTR   R15,R15         WAS PARSE SUCCESSFUL?
         BNZ   ERROR2          NO, ERROR
         XC    PFORCE,MASK
         XC    PDATA,MASK
         XC    PKEY,MASK
         XC    PAUTH,PFORCE
         L     R11,PDLPTR      ESTABLISH PARM ADDRESSABILITY
         USING IKJPARMD,R11
         L     R9,OPER1        LOAD OPERAND ADDRESS
         LH    R8,OPER1+4      LOAD OPERAND LENGTH
         LA    R15,2(,R8)      INCREMENT LENGTH FOR IKJDAIR
         STH   R15,DSNAME      STORE FOR IKJDAIR
         BCTR  R8,R0           DECREMENT FOR EX
         LA    R7,INFILE       LOAD RECEIVING ADDRESS FOR EX
         EX    R8,MOVEIT       EX  UTE
         OC    INFILE,BLNKS    FOLD TO UPPERCASE
         TM    OPER1+14,X'80'
         BZ    NEXTP
         L     R9,OPER1+8
         L     R10,OPER2+4
         CR    R9,R10
         BE    NEXTP
         LH    R8,OPER1+12
         BCTR  R8,R0
         LA    R7,MEMBER
         EX    R8,MOVEIT
         OC    MEMBER,BLNKS    FOLD TO UPPERCASE
NEXTP    CLI   OPER2+1,X'01'
         BNE   NEXTP2
         L     R9,OPER2B
         LH    R8,OPER2B+4     LOAD OPERAND LENGTH
         BCTR  R8,R0           DECREMENT FOR EX
         LA    R7,KEY          LOAD RECEIVING ADDRESS FOR EX
         EX    R8,MOVEIT       EX  UTE
         OC    KEY,BLNKS       FOLD TO UPPERCASE
NEXTP2   CLI   OPER3+1,X'01'
         BNE   ALLOCATE
         CLC   PAUTH,PREFIX
         BNE   ERROR11
         L     R9,OPER3B
         LH    R8,OPER3B+4     LOAD OPERAND LENGTH
         BCTR  R8,R0           DECREMENT FOR EX
         LA    R7,PASSWORD     LOAD RECEIVING ADDRESS FOR EX
         EX    R8,MOVEIT       EXECUTE
         OC    KEY,BLNKS       FOLD TO UPPERCASE
         CLC   PASSWORD,PKEY
         BE    ALLOCATE
         CLC   PASSWORD,PDATA
         BE    ALLOCATE
         CLC   PASSWORD,PFORCE
         BE    ALLOCATE
         MVC   ERR14+20(8),PASSWORD
         B     ERROR14
ALLOCATE LA    R5,DAPARMS      ESTABLISH ADDRESSABILITY FOR IKJDAIR
         USING DAPL,R5
         XC    DAPARMS(168),DAPARMS  CLEAR IKJDAIR PARM AREA
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         MVC   DAPLPSCB,CPPLPSCB
         LA    R9,ECB
         ST    R9,DAPLECB
         LA    R6,DAALLOC      ESTABLISH ADDRESSABILITY FOR ALLOCATE
         USING DAPB08,R6
         LA    R9,DAPB08
         ST    R9,DAPLDAPB
         MVI   DA08CD+1,X'08'  SET CODE TO ALLOCATE
         LA    R9,DSNAME       MOVE IN DSNAME ADDRESS
         ST    R9,DA08PDSN
         MVC   DA08DDN,BLNKS         CLEAR DDNAME
         MVC   DA08UNIT(8),BLNKS           UNIT
         MVC   DA08SER(8),BLNKS            VOLSER
         MVC   DA08MNM(8),MEMBER           MEMBER NAME
         MVC   DA08PSWD(8),BLNKS           PWORD
         OI    DA08DSP1,DA08SHR      SET DISP TO SHR,KEEP,KEEP
         OI    DA08DPS2,DA08KEEP
         OI    DA08DPS3,DA08KEEP
         LA    R1,DAPL         POINT TO LIST
         LINK  EP=IKJDAIR,MF=(E,(1))
         LTR   R15,R15         ALLOCATE OK?
         BNZ   ERROR7          NO, ERROR
         MVC   INPDD(8),DA08DDN      SAVE DDNAME
         MVC   PDSDD+40(8),DA08DDN   MOVE DDNAME TO PDSDD AREA
         OPEN (PDSDD,(UPDAT))  OPEN DATASET
         TM    PDSDD+48,X'10'  OPEN OK?
         BNO   ERROR3          NO, ERROR
         TM    PDSDD+36,X'80'
         BNO   ERROR6
         TM    PDSDD+36,X'40'
         BO    ERROR6
         STAX  ATT2,REPLACE=YES,MF=(E,ATTNLS2)
         STAX  ATTN,REPLACE=NO,MF=(E,ATTNLST)
FIXED    GET   PDSDD
         SR    R3,R3           CLEAR R3
         L     R2,MYKEY
         SRDL  R2,1(0)         SHIFT IT RIGHT ONE POSITION
         ALR   R2,R3           MOVE THE DROPPED OFF BIT TO OTHER END
         ST    R2,SKEY
         CLI   ENTFLG,DEFLG    DECRYPT?
         BE    RESTORE         YES, BRANCH
         SR    R5,R5
         LH    R6,PDSDD+82     R6 CONTAINS RECORD LENGTH
         AR    R6,R1
         BCTR  R6,R0
         LR    R10,R1
AGAIN    CLI   0(R10),X'FF'
         BE    ERROR4
         CLC   0(1,R10),1(R10)
         BE    MATCH
         SR    R5,R5
         B     INCR
MATCH    LA    R5,1(,R5)
         CH    R5,=H'5'
         BE    GOTIT
INCR     LA    R10,1(,R10)
         CR    R10,R6
         BL    AGAIN
         CLC   PASSWORD,PFORCE
         BNE   ERROR8
         B     GOAHEAD
GOTIT    SH    R10,=H'3'
         MVI   0(R10),X'FF'
         MVC   1(4,R10),KEY
GOAHEAD  OI    LOAD+1,X'02'    NO, MODIFY 'LR R2,R0' TO 'LR R0,R2'
         SR    R3,R3           CLEAR R3
         L     R2,0(,R1)       R2 CONTAINS FIRST 4 BYTES OF RECORD 1
         SRDL  R2,1(0)         SHIFT IT RIGHT ONE POSITION
         ALR   R2,R3           MOVE THE DROPPED OFF BIT TO OTHER END
         X     R2,SEED         OR IT WITH SUPPLIED SEED
         ST    R2,0(,R1)       STORE IT IN PLACE
         B     SETUP           START ROUTINE
TESTIT   CLC   PASSWORD,PFORCE
         BE    SKIP
         SR    R5,R5
         LH    R7,PDSDD+82     R6 CONTAINS RECORD LENGTH
         AR    R7,R1
         SH    R7,=H'4'
         LR    R10,R1
AGAIN2   CLI   0(R10),X'FF'
         BE    GOTIT2
INCR2    LA    R10,1(,R10)
         CR    R10,R7
         BL    AGAIN2
         B     ERROR12
GOTIT2   CLC   PASSWORD,PDATA
         BNE   NEXTT
         CLC   1(4,R10),LIMIT
         BL    ERROR13
         B     OKOK
NEXTT    CLC   PASSWORD,PKEY
         BNE   SKIP3
         CLC   INSERT,1(R10)
         BNE   MOVE2
         MVC   INSERT(11),DEFAULT
         B     ERROR10
MOVE2    MVC   INSERT,1(R10)
         B     ERROR10
SKIP3    CLC   1(4,R10),KEY
         BNE   ERROR9
OKOK     BCTR  R10,R0
         MVC   1(5,R10),0(R10)
         MVI   FLAG,X'01'
         B     SKIP
RESTORE  SR    R2,R2           CLEAR R2
         OI    LOAD+1,X'05'    NO, MODIFY 'LR R2,R0' TO 'LR R0,R5'
         L     R3,0(,R1)       R3 CONTAINS FIRST 4 BYTES OF RECORD 1
         LR    R5,R3           ...SO DOES R5
         X     R3,SEED         OR IT WITH SEED
         SLDL  R2,1(0)         SHIFT IT LEFT ONE POSITION
         ALR   R3,R2           MOVE DROPPED OFF BIT TO OTHER END
         ST    R3,0(,R1)       STORE IT IN PLACE
         LR    R2,R5           R2 CONTAINS ORIGINAL 4 BYTES
SETUP    SR    R4,R4           CLEAR R4
         SR    R3,R3           CLEAR R3
         LA    R4,4(,R4)       INCREMENT R4
         LH    R6,PDSDD+82     R6 CONTAINS RECORD LENGTH
         SH    R6,=H'4'        DECREMENT R6
         B     ORIT
DOIT     CLI   ATTFLG,X'01'
         BNE   NOTSET
         LA    R1,ERR15
         LH    R0,=H'50'
         TPUT  (1),(0),R
         MVI   ATTFLG,X'00'
NOTSET   GET   PDSDD
         SR    R4,R4           CLEAR OFFSET
ORIT     SRDL  R2,1(0)         SHIFT R2 RIGHT ONE POSITION
         ALR   R2,R3           MOVE BIT TO OTHER END
         X     R2,0(R4,R1)     OR NEW R2 WITH CURRENT  RECORD WORD
         X     R2,SKEY
         L     R5,0(R4,R1)     LOAD R5 WITH UNMODIFIED RECORD WORD
         ST    R2,0(R4,R1)     STORE IT IN PLACE
LOAD     LR    R2,R0           ????
         LA    R4,4(,R4)       INCREMENT RECORD POINTER
         CR    R4,R6           END OF RECORD?
         BNH   ORIT            NO, NEXT WORD
         SR    R9,R9           CLEAR R9
         LH    R7,PDSDD+82     GET RECORD LENGTH
         SR    R7,R4           SUBTRACT POINTER
         LTR   R7,R7           TEST RESULT
         BZ    PUTIT           IF ZERO REMAINDER WRITE RECORD
         SLA   R7,2            ..ELSE
         B     *+0(R7)         BRANCH ON DIFFERENCE
         B     ONE
         B     TWO
         B     THREE
THREE    LA    R9,14(,R9)      THREE BYTES - R9 LOADED WITH LEFT 3 MASK
         B     OUT
TWO      LA    R9,12(,R9)      TWO BYTES - R9 LOADED WITH LEFT 2 MASK
         B     OUT
ONE      L     R9,8(,R9)       ONE BYTE - R9 LOADED WITH LEFT 1 MASK
OUT      LR    R10,R2          R2 (OLD MODIFIED) TO R10
         SRDL  R2,1(0)         SHIFT R2 RIGHT ONE POSITION
         ALR   R2,R3           MOVE LOST BIT TO OTHER END
         SR    R8,R8           CLEAR R8
         AR    R4,R1           R4 IS NOW BASE + OFFSET
         EX    R9,ICM          EXEC ICM FOR REMAINING BYTES
         XR    R2,R8           OR IT WITH PREVIOUS WORD MODIFIED
         X     R2,SKEY
         EX    R9,STCM         RETURN REMAINING BYTES
         LR    R2,R10          REUSE R2 FOR FIRST WORD OF NEXT RECORD
PUTIT    CLI   ENTFLG,DEFLG
         BNE   SKIP
         CLI   FLAG,X'01'
         BE    SKIP
         B     TESTIT
SKIP     PUTX  PDSDD
         B     DOIT
ERROR1   LA    R1,ERR1
         B     ERRWRITE                  GO AND WRITE IT
ERROR2   LA    R1,ERR2
         B     ERRWRITE
ERROR3   LA    R1,ERR3
         B     ERRWRITE
ERROR4   LA    R1,ERR4
         B     ERRWRITE
ERROR5   LA    R1,ERR5
         B     ERRWRITE
ERROR6   LA    R1,ERR6
         B     ERRWRITE
ERROR7   LA    R1,ERR7
         B     ERRWRITE
ERROR8   LA    R1,ERR8
         B     ERRWRITE
ERROR9   LA    R1,ERR9
         B     ERRWRITE
ERROR10  LA    R1,ERR10
         B     ERRWRITE
ERROR11  LA    R1,ERR11
         B     ERRWRITE
ERROR12  LA    R1,ERR12
         B     ERRWRITE
ERROR13  LA    R1,ERR13
         B     ERRWRITE
ERROR14  LA    R1,ERR14
ERRWRITE LH    R0,=H'50'
         TPUT  (1),(0),R
RETURN   CLOSE (PDSDD)               CLOSE DATASET
         SR    R15,R15               RESET R15
         LA    R5,DAPARMS            ESTABLISH ADDRESSABILITY
         USING DAPL,R5
         LA    R6,DAFREE             ESTABLISH ADDRESSABILITY
         USING DAPB18,R6
         ST    R6,DAPLDAPB
         XC    DAFREE(44),DAFREE     CLEAR PARM AREA
         MVI   DA18CD+1,X'18'        SET CODE TO DEALLOCATE
         MVC   DA18DDN,INPDD         MOVE IN DDNAME USED BY SYSTEM
         LA    R1,DAPL               POINT TO PARM LIST
         LINK  EP=IKJDAIR,MF=(E,(1)) DEALLOC
         L     13,SAVE+4
         L     14,12(13)
         LM    0,12,20(13)
         BR    R14
ATTN     LR    R2,R15
         USING ATTN,R2
         MVI   ATTFLG,X'01'
         BR    R14
         DROP  R2
ATT2     BR    R14
OPERS    IKJPARM
OPER1    IKJPOSIT DSNAME,USID,PROMPT='DATA SET NAME'
OPER2    IKJKEYWD
         IKJNAME 'KEY',SUBFLD=OPER2A
OPER3    IKJKEYWD
         IKJNAME 'PASSWORD',SUBFLD=OPER3A
OPER2A   IKJSUBF
OPER2B   IKJIDENT KEYWORD,PROMPT='A FOUR LETTER KEY+',                 *
               MAXLNTH=4,HELP='ENTER ANY FOUR CHARACTERS'
OPER3A   IKJSUBF
OPER3B   IKJIDENT PASSWORD,MAXLNTH=8
         IKJENDP
*
* CONSTANTS
*
SAVE     DS    18F             LOCAL SAVE AREA
MOVEIT   MVC   0(0,R7),0(R9)   EXEC FOR MOVING DSNAME PARM
MOVEIT2  MVC   PREFIX(1),0(R5)
ICM      ICM   R8,0,0(R4)
STCM     STCM  R2,0,0(R4)
ATTNLST  STAX  ATTN,MF=L
ATTNLS2  STAX  ATT2,MF=L
ERR1     DC    CL50' $CRYPT MUST BE INVOKED AS A COMMAND PROCESSOR    '
ERR2     DC    CL50' $CRYPT RECEIVED AN ABNORMAL IKJPARS RETURN CODE  '
ERR3     DC    CL50' $CRYPT COULD NOT OPEN THE SPECIFIED DATA SET     '
ERR4     DC    CL50' $CRYPT ENCOUNTERED A FLAG BYTE IN DATA           '
ERR5     DC    CL50' $CRYPT ENCOUNTERED A SYNAD CONDITON ON DATA SET  '
ERR6     DC    CL50' $CRYPT WILL NOT PROCESS VARIABLE LENGTH RECORDS  '
ERR7     DC    CL50' $CRYPT COULD NOT ALLOCATE THE SPECIFIED DATA SET '
ERR8     DC    CL50' ENCRYPTION FAILED - KEY IMBED FAILED             '
ERR9     DC    CL50' DECRYPTION FAILED - INCORRECT KEY                '
ERR11    DC    CL50' USER IS NOT AUTHORIZED TO USE PASSWORD OPTION    '
ERR12    DC    CL50' $CRYPT FLAG BYTE NOT FOUND IN FIRST RECORD       '
ERR13    DC    CL50' KEY IS IRREGULAR - CORRUPTED OR MISSING          '
ERR14    DC    CL50' INVALID PASSWORD -                               '
ERR15    DC    CL50' DO NOT INTERRUPT $CRYPT!                         '
ERR10    DC    CL30' THE KEY FOR THIS DATA SET IS '
INSERT   DC    CL4' '
PADDING  DC    CL16' '
         DS    0D
INPDD    DC    CL8' '          DDNAME GENERATED BY THE SYSTEM
PREFLEN  DS    H               IKJDAIR DSNAME AREA..2 BYTE LENGTH
PREFIX   DC    CL8' '
DSNAME   DS    H               IKJDAIR DSNAME AREA..2 BYTE LENGTH
INFILE   DC    CL44' '                 PLUS DSNAME
MEMBER   DC    CL8' '          MEMBER FIELD FOR IKJPARS
BLNKS    DC    CL56' '
DEFAULT  DC    CL12'THE DEFAULT'
LIMIT    DC    CL4' '
PASSWORD DC    CL8' '
         DS    0F
MASK     DC    XL8'FFFFFFFFFFFFFFFF'
PKEY     DC    XL8'2D3A17BFBFBFBFBF'
SEED     DC    XL4'12233445'
PFORCE   DC    XL8'3929263C3ABFBFBF'
MYKEY    DC    XL4'2159906B'
PAUTH    DC    XL8'25252C3133818500'
PDATA    DC    XL8'3B3E1C3EBFBFBFBF'
SKEY     DC    CL4' '
KEY      DC    CL8' '
OPT      DC    XL2'00'
TYPE     DC    XL2'00'
FLAG     DC    XL1'00'
ENTFLG   DC    XL1'00'
ATTFLG   DC    XL1'00'
OPTEND   DS    F
OPTLEN   DS    F
ECB      DS    F               EVENT CONROL BLOCK
DAPARMS  DS    5A              IKJDAIR LIST
DAALLOC  DS    26F                     ....
DAFREE   DS    11F                     ....
PPL      DS    0F              PPL AREA
PPLUPT   DS    F
PPLECT   DS    F
PPLECB   DS    A(PARMECB)
PPLPCL   DC    V(OPERS)
PPLANS   DC    A(PDLPTR)
PPLCBUF  DS    F
PPLVWA   DC    F'0'
PARMECB  DC    F'0'
PDLPTR   DS    F
PDSDD    DCB   MACRF=(GL),DSORG=PS,DDNAME=PDSDD,EODAD=RETURN,          *
               SYNAD=ERROR5,BFTEK=E
         IKJCPPL
         IKJUPT
         IKJPSCB
         IKJDAPL
         IKJDAP08
         IKJDAP18
         CVT   DSECT=YES
         END   $CRYPT
