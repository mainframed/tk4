*          DATA SET DUPTIME    AT LEVEL 004 AS OF 23/11/90
*        DATA SET DUPTIME    AT LEVEL 003 AS OF 13/07/90
*        DATA SET TSO033     AT LEVEL 002 AS OF 10/08/78
*        DATA SET TSO033     AT LEVEL 001 AS OF 09/09/77
*        DATA SET TSO033     AT LEVEL 001 AS OF 12/08/77
*
* THIS IS THE UPTIME DISPLAYER..SHOWS TRANSACTION TIME FOR
*   THE MASTER SCHEDULER FROM OUCB OF ASID=1.
*
* THIS WORKS FOR OS/VS2 REL 3.7 AND REQUIRES MACROS FROM
*   SYS1.AMODGEN
* KEN TRUE     FAIRCHILD CAMERA AND INSTRUMENT 12 AUG 77
*
* MODIFIED TO WORK AS TSO COMMAND OR OPER STC     K TRUE  12AUG77
*
* MODIFIED TO CORRECT TIME AND SHOW SMF SYSID     G PRICE 13JUL90
*
* MODIFIED TO ACCEPT JOB NAME AS TSO COMMAND OPERAND OR
* PROGRAM PARAMETER - USE '*' FOR ALL ASIDS       G PRICE 23NOV90
*
* MODIFIED TO CORRECT TIME (AGAIN)                G PRICE 27MAR98
*
*
         MACRO
&NAME    PGM   &BASE=R12,&SAVE=$$SAVE,&START=$$START,&EOJ=$$EOJ,&RC=16
&NAME    CSECT
         B     14(0,R15)           BRANCH AROUND PROGRAM ID.
         DC    AL1(8)              CSECT NAME LENGTH.
         DC    CL8'&NAME'          CSECT IDENTIFIER.
         DC    X'FF'               FILLER.
         STM   R14,R12,12(R13)     STORE THE REGISTERS.
         BALR  &BASE,0             ESTABLISH ADDRESSABILITY.
         USING *,&BASE             TELL ASSEMBLER ABOUT BASE REGISTER.
R0       EQU   0                   REGISTER 0.
R1       EQU   1                   REGISTER 1.
R2       EQU   2                   REGISTER 2.
R3       EQU   3                   REGISTER 3.
R4       EQU   4                   REGISTER 4.
R5       EQU   5                   REGISTER 5.
R6       EQU   6                   REGISTER 6.
R7       EQU   7                   REGISTER 7.
R8       EQU   8                   REGISTER 8.
R9       EQU   9                   REGISTER 9.
R10      EQU   10                  REGISTER 10.
R11      EQU   11                  REGISTER 11.
R12      EQU   12                  REGISTER 12.
R13      EQU   13                  REGISTER 13.
R14      EQU   14                  REGISTER 14.
R15      EQU   15                  REGISTER 15.
         LA    R15,&SAVE           ADDRESS OF OUR SAVE AREA.
         ST    R13,4(R15)          BACKWARD SAVE AREA CHAIN.
         ST    R15,8(R13)          FORWARD SAVE AREA CHAIN.
         LR    R13,R15             POINT R13 TO CURRENT SAVE AREA.
         B     &START              BRANCH TO ENTRY CODE.
&EOJ     CH    R15,$$RC            IS RETURN CODE HIGHER THAN &RC?
         BNH   *+6                 YES - LETS ZERO R15.
         SR    R15,R15             ZERO OUT REGISTER 15.
         L     R13,&SAVE+4         POINT R13 TO PREVIOUS SAVE AREA.
         L     R14,12(R13)         RESTORE REGISTER 14.
         LM    R0,R12,20(R13)      RESTORE THE REGISTERS.
         BR    R14                 RETURN TO OS.
&SAVE    DS    18F                 OUR SAVE AREA.
$$RC     DC    H'&RC'              RETURN CODE.
$$START  DS    0H                  DEFAULT ENTRY POINT.
         MEND
         SPACE
DUPTIME  PGM                ,PGM TO SRM TRANSACTION RESIDENT TIME
         TM    0(R1),X'80'       INVOKED AS PROGRAM OR TSO COMMAND?
         BO    PGMPARM           PROGRAM
         L     R1,0(,R1)         CP SO POINT TO THE COMMAND BUFFER
         LH    R3,2(,R1)         GET LENGTH OF PARSING DONE
         LA    R3,4(,R3)         GET OFFSET INTO COMMAND BUFFER
         LA    R2,0(R3,R1)       POINT TO FIRST NON-PARSED CHARACTER
         SH    R3,0(R1)          SUBTRACT COMMAND BUFFER LENGTH TO GET
         BZ    DONEPARM          OPERAND LENGTH - IF ZERO FORGET IT
         LPR   R3,R3             ENSURE VALUE IS POSITIVE
         B     INITPARM          GO PROCESS OPERAND
PGMPARM  L     R1,0(,R1)         POINT TO PROGRAM PARAMETER
         CLI   0(R1),0           SENSIBLE PARAMETER LENGTH?
         BNE   DONEPARM          NO, SO IGNORE PARAMETER
         CLI   1(R1),0           ZERO PROGRAM PARAMETER LENGTH?
         BE    DONEPARM          YES, SO NO PARAMETER
         LA    R2,2(,R1)         NO, POINT TO PARAMETER TEXT
         LH    R3,0(,R1)         LOAD PARAMETER LENGTH
INITPARM LA    R0,8              GET MAXIMUM PARAMETER LENGTH
         CR    R3,R0             IS IT TOO LONG?
         BNH   PARMOKAY          NO
         LR    R3,R0             YES, REDUCE TO MAXIMUM ALLOWED
PARMOKAY BCTR  R3,0              GET LENGTH CODE
         EX    R3,LOADPARM       GET SPECIFIED ADDRESS SPACE NAME
DONEPARM L     R1,16             (R1)=ADDR OF CVT
         L     R1,196(,R1)       (R1)=ADDR OF SMCA
         MVC   UPSYSID,16(R1)    COPY SMF SYSTEM ID
         MVC   RESSYSID,16(R1)   COPY SMF SYSTEM ID
         MVC   MISSYSID,16(R1)   COPY SMF SYSTEM ID
         EXTRACT MF=(E,EXTRACT)
         L     R1,ANSWER         (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)     MOVE IN THE ANSWER TO OUR FLAG
         SPACE
         CLI   ASIDNAME,C' '     ANY NAME SUPPLIED?
         BE    DODUPTIM          NO, JUST SHOW SYSTEM UP-TIME
*.....................................................................*
*        SHOW TRANSACTION RESIDIENT TIME FOR ADDRESS SPACE(S)         *
*.....................................................................*
         SPACE
         L     R4,16             (R1)=ADDR OF CVT
         L     R4,556(,R4)       (R1)=ADDR OF ASVT
         L     R5,516(,R4)       (R0)=MAX ASID
         LA    R4,524(,R4)       POINT TO BEFORE FIRST ASVTE
LOCASVTE LA    R4,4(,R4)         POINT TO NEXT ASVTE
         ICM   R2,15,0(R4)       POINT TO ASCB
         BM    NXTASVTE          ASID NOT ASSIGNED
         ICM   R3,15,172(R2)     GET JOB NAME POINTER
         BNZ   GOTJNAME          BATCH JOB
         ICM   R3,15,176(R2)     GET JOB NAME POINTER
         BNZ   GOTJNAME          TSO USER OR STARTED TASK (OR SYS A.S.)
         LA    R3,STARTING       NO NAME SO USE 'STARTING'
GOTJNAME CLI   ASIDNAME,C'*'     ALL ASID'S REQUESTED?
         BE    THISASID          YES
         CLC   ASIDNAME,0(R3)    NO, DOES ASID HAVE DESIRED NAME?
         BE    THISASID          YES
NXTASVTE BCT   R5,LOCASVTE       NO, TRY NEXT ASID
         CLI   SWITCH,0          WAS THE JOB NAME FOUND?
         BNE   $$EOJ             YES, TERMINATE
         MVC   MISJNAME,ASIDNAME NO, PUT THIS NAME INTO MESSAGE
         LA    R1,MSGWTO3        POINT TO "NOT FOUND" MESSAGE
         BAL   R14,PUTMSG        SHOVEL IT OUT
         B     $$EOJ
         SPACE
THISASID MVI   SWITCH,1          REMEMBER THAT SOMETHING WAS FOUND
         MVC   RESJNAME,0(R3)    LOAD ADDRESS SPACE NAME
         UNPK  RESASID(5),36(3,R2)
         TR    RESASID,HEX-C'0'  LOAD ASID
         MVI   RESASID+4,C' '
         LA    R0,X'26'          SET SYSEVENT CODE
         ICM   R0,B'1100',36(R2) SET ASID
         LA    R1,RTNAREA        -> RETURN AREA
         SVC   95                DO IT
         L     R7,4(,R1)         GET TOTAL TRANSACTIVE TIME
         SLR   R6,R6             CLEAR RESIDUAL DATA
         SLDL  R6,10             CONVERT TO MICROSECONDS.
         D     R6,=F'1000000'    CONVERT TO SECONDS.
         SLR   R6,R6             IGNORE REMAINDER.
         D     R6,=F'3600'       DIVIDE TO GET HOURS.
         STM   R6,R7,SAVEREGS    SAVE HRS/REM FOR LATER
         SLR   R6,R6
         D     R6,=F'24'         DIVIDE TO GET TOTAL DAYS
         CVD   R7,WRKD           CONVERT DAYS
         MVC   RESDAYS-1(4),=X'40202120' MOVE IN PATTERN
         ED    RESDAYS-1(4),WRKD+6 AND EDIT THE VALUE
         LR    R7,R6             ESTABLISH NEW HOURS....
         L     R6,SAVEREGS       GET BACK HOURS REMAINDER
         CVD   R7,WRKD           CONVERT HOURS -
         UNPK  RESHH,WRKD+6(2)     - TO PRINTABLE FORMAT.
         OI    RESHH+1,X'F0'     FIXUP SIGN BYTE.
         MVI   RESHH+2,C':'      SEPARATOR.
         SRDL  R6,32             MOVE REMAINDER OVER FOR DIVIDE.
         D     R6,=F'60'         GET MINUTES.
         CVD   R7,WRKD           CONVERT MINUTES -
         UNPK  RESMM(2),WRKD+6(2)  - TO PRINTABLE FORMAT.
         OI    RESMM+1,X'F0'     FIXUP SIGN BYTE.
         MVI   RESMM+2,C':'      SEPARATOR.
         CVD   R6,WRKD           REMAINDER IS SECONDS.
         UNPK  RESSS(2),WRKD+6(2)  CONVERT SEC TO PRINTABLE FORMAT.
         OI    RESSS+1,X'F0'     FIXUP SIGN.
         SPACE 2
*                                   AND MEMORY STATUS
         LA    R1,MSGWTO2
         BAL   R14,PUTMSG         SHOVEL IT OUT
         B     NXTASVTE          HANDLE NON-UNIQUE ASID NAME
         EJECT
*.....................................................................*
*        SHOW TIME SINCE SYSTEM WAS IPL'D                             *
*.....................................................................*
         SPACE
DODUPTIM LA    R0,X'26'          SET SYSEVENT CODE
         ICM   R0,B'1100',=H'1'  SET ASID TO 1
         LA    R1,RTNAREA        -> RETURN AREA
         SVC   95                DO IT
         L     R5,4(,R1)         GET TOTAL TRANSACTIVE TIME
         SLR   R4,R4             CLEAR RESIDUAL DATA
         SLDL  R4,10             CONVERT TO MICROSECONDS.
         D     R4,=F'1000000'    CONVERT TO SECONDS.
         SLR   R4,R4             IGNORE REMAINDER.
         D     R4,=F'3600'       DIVIDE TO GET HOURS.
         STM   R4,R5,SAVEREGS    SAVE HRS/REM FOR LATER
         SLR   R4,R4
         D     R4,=F'24'         DIVIDE TO GET TOTAL DAYS
         CVD   R5,WRKD           CONVERT DAYS
         MVC   UPDAYS-1(4),=X'40202120' MOVE IN PATTERN
         ED    UPDAYS-1(4),WRKD+6  AND EDIT THE VALUE
         LR    R5,R4             ESTABLISH NEW HOURS....
         L     R4,SAVEREGS       GET BACK HOURS REMAINDER
         CVD   R5,WRKD           CONVERT HOURS -
         UNPK  UPHH,WRKD+6(2)      - TO PRINTABLE FORMAT.
         OI    UPHH+1,X'F0'      FIXUP SIGN BYTE.
         MVI   UPHH+2,C':'       SEPARATOR.
         SRDL  R4,32             MOVE REMAINDER OVER FOR DIVIDE.
         D     R4,=F'60'         GET MINUTES.
         CVD   R5,WRKD           CONVERT MINUTES -
         UNPK  UPMM(2),WRKD+6(2)   - TO PRINTABLE FORMAT.
         OI    UPMM+1,X'F0'      FIXUP SIGN BYTE.
         MVI   UPMM+2,C':'       SEPARATOR.
         CVD   R4,WRKD           REMAINDER IS SECONDS.
         UNPK  UPSS(2),WRKD+6(2)   CONVERT SEC TO PRINTABLE FORMAT.
         OI    UPSS+1,X'F0'      FIXUP SIGN.
         SPACE 2
*                                   AND MEMORY STATUS
         LA    R1,MSGWTO
         BAL   R14,PUTMSG         SHOVEL IT OUT
         B     $$EOJ
         SPACE
LOADPARM OC    ASIDNAME(0),0(R2)   <<< EXECUTED >>>
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  R14,PUTMSG        OR
*    BAL  R14,PUTGET
*
*  USES R9 FOR WORK
*
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    R14
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    R14
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    R9,R1               NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,R9)           GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    R9,R1               SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,R9)           GET REPLY LENGTH
         L     R1,0(,R9)           GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,R9)           GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,R9)           GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    R14
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
EXTRACT  EXTRACT ANSWER,'S',FIELDS=(TSO),MF=L
         EJECT
*.....................................................................*
*        VARIABLES AND CONSTANTS                                      *
*.....................................................................*
         SPACE 2
SWITCH   DC    XL1'00'
TSOFLAG  DC    X'00'               ='80' IF TSO. '00' IF NOT TSO
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
         SPACE 2
WRKD     DC    D'0'
ASIDNAME DC    CL8' '
STARTING DC    CL8'STARTING'
HEX      DC    CL16'0123456789ABCDEF'
RMCTPTR  DS    F
SAVEREGS DS    4F
RTNAREA  DS    3F
         EJECT
*.....................................................................*
*        MESSAGE FORMATS                                              *
*.....................................................................*
         SPACE 2
MSGWTO   WTO   'SYSTEM IIII HAS BEEN UP FOR DDD DAYS HH:MM:SS ',       X
               ROUTCDE=(11),MF=L
         ORG   MSGWTO+4
BUFFER   DS    CL46
         ORG   MSGWTO+11
UPSYSID  DS    CL4                        SYSTEM IDENTIFIER
         ORG   MSGWTO+32
UPDAYS   DS    CL3                        DAYS
         ORG   MSGWTO+41
UPHH     DS    CL2                        TIME HH:MM:SS
         DS    CL1
UPMM     DS    CL2
         DS    CL1
UPSS     DS    CL2
         ORG
MSGWTO2  WTO   'SYSTEM IIII  ASID XXXX - JJJJJJJJ  RESIDENT TIME IS DDDX
                DAYS HH:MM:SS ',ROUTCDE=(11),MF=L
         ORG   MSGWTO2+4
BUFFER2  DS    CL70
         ORG   MSGWTO2+11
RESSYSID DS    CL4                        SYSTEM IDENTIFIER
         ORG   MSGWTO2+22
RESASID  DS    CL4                        ADDRESS SPACE IDENTIFIER
         ORG   MSGWTO2+29
RESJNAME DS    CL8                        ADDRESS SPACE NAME
         ORG   MSGWTO2+56
RESDAYS  DS    CL3                        DAYS
         ORG   MSGWTO2+65
RESHH    DS    CL2                        TIME HH:MM:SS
         DS    CL1
RESMM    DS    CL2
         DS    CL1
RESSS    DS    CL2
         ORG
MSGWTO3  WTO   'SYSTEM IIII  ADDRESS SPACE NAME JJJJJJJJ NOT FOUND',   X
               ROUTCDE=(11),MF=L
         ORG   MSGWTO3+4
BUFFER3  DS    CL50
         ORG   MSGWTO3+11
MISSYSID DS    CL4                        SYSTEM IDENTIFIER
         ORG   MSGWTO3+36
MISJNAME DS    CL8                        ADDRESS SPACE NAME
         ORG
         EJECT
*.....................................................................*
*        LITERALS                                                     *
*.....................................................................*
         SPACE 2
         LTORG
         DS    0D                 END OF CSECT
         END
