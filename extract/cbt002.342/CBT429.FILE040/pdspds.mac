PDSPDS   CSECT
         USING PDSPDS,15
         USING IHADCB,4
         STM       14,12,12(13)
         ST        13,SAVEAREA+4
         LR        12,13
         CNOP      0,4
         BAL       13,PDSEDIT
SAVEAREA DC        18A(0)
BASE     DC    A(SAVEAREA+3*4096)
         DC    A(SAVEAREA+2*4096)
         DC    A(SAVEAREA+1*4096)
         DROP      15
         USING SAVEAREA,13,12,11,10
PDSEDIT  EQU       *
         ST        13,8(12)
         LM    10,12,BASE
         L     1,0(1)
         MVC   PARMSIZ,0(1)            PARM LENGTH
         LA    1,2(1)
         ST    1,PARMADR               PARM START
***********************************************************************
         BAL   14,OPENTIM              GET THE TIME
         EJECT
***********************************************************************
*     OPENS                              *                            *
***********************************************************************
         LA    1,SYSINPRM
         L     15,=V(DDFIND)
         BALR  14,15
         B     *+4(15)      CHECK RETURN CODE
         B     *+8           00 - SYSIN PRESENT
         B     OPENPRNT      04 - SYSIN ABSENT -- OPNE SYSPRINT ONLY
         OPEN  (SYSIN,,SYSPRINT,(OUTPUT))
***********************************************************************
         B     CONTROL0
OPENPRNT EQU   *
         OPEN  (SYSPRINT,(OUTPUT))
         LA    4,SYSPRINT
         TM    DCBOFLGS,X'10'
         BZ    CTLEXIT
         B     CONTROL0
*
SYSINPRM DS    0F
         DC    A(SYSIN+(DCBDDNAM-IHADCB))
         DC    A(WORKTIOT)
***********************************************************************
         EJECT
***********************************************************************
         MVI   EOF,0
CONTROL  EQU   *
         MVI   PRINTASA,C'0'
         LA    1,OKMSG
         CLI   CTLERROR,0              ANY ERRORS
         BE    CNTLMSG                    NO
         LA    1,BADMSG
CNTLMSG  BAL   14,PRNTSTAT             GOOD/BAD
CONTROL0 EQU   *
         L     3,SCANBUF
         XC    0(L'CTLCTL,3),0(3)      CLEAR CTL
         XC    EDITCTL(2),EDITCTL      CLEAR NAMES
         XC    ERRCTL,ERRCTL
         XC    ONCTL,ONCTL
         MVC   FIRSTNUM,=4X'00'
         MVC   LASTNUM,=4X'FF'
         MVC   PRNTMEM,PRNTMEM-1
         CLI   EOF,X'FF'               DID WE HAVE A PRIOR EOF
         BE    CTLEXIT                    YES
         CLI   CTLSAV,X'FF'            DID WE SAVE A CONTROL CARD
         BE    CONTROL2                   YES-PROCESS IT NOW
         CLI   PARMSAV,X'FF'           IS ANY PARM FIELD WAITING
         BNE   CONTROL1                   NO
         BAL   14,PARMS                GET PARMS
         B     CONTROL2                PROCESS PARM AS CARD
CONTROL1 EQU   *
         BAL   14,GETSYSIN             READ A CONTROL CARD
         B     CTLEOF                  END OF INPUT
         B     KEYCTL0                 NOTHING
CONTROL2 EQU   *                       A '' CARD
         MVI   CTLSAV,0
         BAL   14,SETCTL
CTLSCAN  EQU   *
         MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN              FIND A WORD
         B     KEYCTL0                 -NOTHING LEFT
         B     CTLSCAN                 -ZERO = DELIMITER ONLY
***********************************************************************
         MVI   UT1TYPE,0               DEFAULT INPUT
         MVC   CHKADR,PRMSTART         WHERE THE INPUT KEYWORD IS
         MVC   CHKTBL,=A(KEYWORD1)     WHERE VALID ONES ARE
         MVC   CHKLNGTH,PRMLNGTH       LENGTH TO CHK
         BAL   14,CHKTYPE              CHECK UM
         B     CTLLIST1                -INVALID KEYWORD
         B     CTLLIST2                -END
         B     CTLLIB1                 -EDIT
         B     CTLLIST1                -C
         B     CTLLIST1                -LIST
         B     CTLLIST1                -PUNCH
         B     CTLLIST1                -SCAN
         B     CTLLIST2                -OPTION
         B     CTLLIST1                -DIR
         B     CTLLIST1                -UTIL
         B     CTLLIST1                -SEARCH
         B     CTLLIST1                -FIND
         B     CTLLIST1                -USAGE
         B     CTLLIST1                -FILL
         B     CTLLIST1                -INC
         B     CTLLIB2                 -RENAME
         B     CTLLISTA                -COPY
         B     CTLLIB2                 -ALIAS
         B     CTLLIB3                 -SCRATCH
         B     CTLLIST0                -REPLACE
         B     CTLLIST0                -ADD
         B     CTLLIST0                -UPDATE
         B     CTLLIST1                -INS
         B     CTLLIST1                -REP
         B     CTLLIST1                -DEL
CTLLIB1  EQU   *                       EDIT
         MVI   UT1TYPE,4               UPDAT
         B     CTLLIST1
CTLLIB2  EQU   *                       RENAME,ALIAS
         MVI   UT1TYPE,4               UPDAT
         B     CTLLISTB
CTLLIB3  EQU   *                       SCRATCH
         MVI   UT1TYPE,4               UPDAT
         B     CTLLISTC
CTLLIST0 EQU   *
         BAL   14,OPENUT2              WE NEED SYSUT2
         CLI   EJECTON,0               EJECT
         BE    CTLLISTC                   NO
         ZAP   LINES,MAXLINES
         B     CTLLISTC
CTLLISTA EQU   *
         BAL   14,OPENUT2              WE NEED SYSUT2
         B     CTLLISTB
CTLLISTB EQU   *                       RENAME/COPY/ALIAS
         BAL   14,GETNAME
         B     CTLERR3                 NO NAME
         B     CTLERR6                 TOO LONG
         MVC   STOWOLD,CARDNAME
CTLLISTC EQU   *                       SCRATCH/UPDATE,ADD
         BAL   14,GETNAME
         B     CTLERR3                 NO NAME
         B     CTLERR6                 TOO OONG
         MVC   STOWNEW,CARDNAME
         MVC   STOWNAME,CARDNAME
         MVC   FINDNAME,CARDNAME
         XC    WUT2BYTE,WUT2BYTE       THE OUT BUFR FOR SYSUT2
         ZAP   PSEQUENC,=P'0'          NEW OUT SEQ NUMBER
CTLLIST1 EQU   *
         BAL   14,OPENUT1              DO SYSUT1
CTLLIST2 EQU   *
         BAL   14,PRNTCTL0             LIST CARD
CTLTYPE  BAL   14,CHKTYPE              NOW FIND THE RIGHT ONE
         B     KEYCTL                  -INVALID KEYWORD
         B     CONTROL0                -END
         B     EDIT                    -EDIT
         B     POSTNERR                -C (NOT NOW)
         B     LISTMEM
         B     PUNCHMEM                -PUNCH
         B     SCANMEM                 -SCAN
         B     OPTION                  -OPTION
         B     LDIRECT                 -DIRECTORY LISTING
         B     UTILITY                 -UTILITY
         B     SEARCH                  -SEARCH
         B     FIND                    -FIND
         B     USAGE                   -USAGE
         B     POSTNERR                -FILL (NOT NOW)
         B     POSTNERR                -INC (NOT NOW)
         B     RENAME                  -RENAME
         B     KOPY                    -COPY
         B     ALIAS                   -ALIAS
         B     SCRATCH                 -SCRATCH
         B     REPLACE                 -REPLACE
         B     ADD                     -ADD
         B     UPDATE                  -UPDATE
         B     POSTNERR                -INS (NOT NOW)
         B     POSTNERR                -REP (NOT NOW)
         B     POSTNERR                -DEL (NOT NOW)
***********************************************************************
CTLERR3  EQU   *
         LA    1,CTLMSG3               NO NAME
         B     CTLERRS
CTLERR6  EQU   *
         LA    1,CTLMSG6               TOO LONG
CTLERRS  EQU   *
         ST    1,MSGADR
         BAL   14,PRNTCTL0
         L     1,MSGADR
         BAL   14,PRINTERR
         B     CTLTYPE
         EJECT
***********************************************************************
POSTNERR EQU   *
         LA    1,CTLMSG9               NOT VALID NOW
         B     CNTLERR
***********************************************************************
KEYCTL0  EQU   *
         BAL   14,PRNTCTL0
KEYCTL   EQU   *
         LA    1,CTLMSG2               INVALID KEYWORD
         B     CNTLERR
CNTLERR  EQU   *
         BAL   14,PRINTERR
         B     CONTROL
***********************************************************************
CTLEOF   EQU   *
CTLEXIT  EQU   *
         BAL   14,CLOSEUT1
         BAL   14,CLOSEUT2
         CLOSE (SYSIN,,SYSPRINT,,SYSPUNCH)
         L     13,SAVEAREA+4
         LM    14,12,12(13)
RETURNRC LA    15,0
         BR    14                      -----------RETURN
         EJECT
***********************************************************************
OPTION   EQU   *
         MVI   TRTTBL+C'=',C'='        ADD '=' DELIMITER
OPTIONLP EQU   *
         MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     OPTIONXT                -DONE
         B     OPTIONLP                -ZERO
         MVC   CHKADR,PRMSTART         WHERE KEY IS
         MVC   CHKLNGTH,PRMLNGTH       LENGTH
         MVC   CHKTBL,=A(KEYWORD2)     WHAT TO COMPARE WITH
***********************************************************************
OPTIONSC EQU   *
         MVC   PRMSTART,PRMHIT         CHK REST OUT
         BAL   14,PRMSCAN
         B     OPTIONR1                -DONE=NOTHING THERE
         B     OPTIONSC                '0' COULD BE TROUBLE
         BAL   14,CHKTYPE              NOW CHK WHAT IT WAS
         B     OPTIONR1                INVALID KEYWORD
         B     OPTION4                 SCAN
         B     OPTION4                 LIST
         B     OPTION4                 DIRECTORY
         B     OPTION4                 EJECT
         B     OPTNDD                  INDD
         B     OPTNPACK                LINES
         B     OPTNPACK                SEQ
         B     OPTNPACK                COLUMN
         B     OPTION4                 USER
         B     OPTNCTRL                -CONTROL
         B     OPTION4                 -STOWCLOSE
         B     OPTION4                 -ASIS
         B     OPTION4                 -FIND
OPTNPACK EQU   *
         L     3,PRMSTART
         BCTR  3,0
         MVC   OPTNDLM,0(3)
         BAL   14,NUMBONE
         B     OPTIONR1                NOT #
         B     OPTION5
***********************************************************************
OPTION4  EQU   *                       CHK ONES THAT NEED YES/NO
         L     3,PRMSTART
         MVI   OPTNWRK,0
         CLI   0(3),C'N'               NO
         BE    OPTION5                    YES
         CLI   0(3),C'Y'               YES
         BNE   OPTIONR1                -NEITHER
         MVI   OPTNWRK,X'FF'
OPTION5  EQU   *                       NOW GO TO THE RIGHT ONE
         BAL   14,CHKTYPE
         B     OPTIONR1                BAD KEYWORD
         B     OPTNSCAN                SCAN
         B     OPTNLIST                LIST
         B     OPTNDIR                 DIRECTORY
         B     OPTNEJCT                EJECT
         B     OPTNDD                  INDD
         B     OPTNLINE                LINES
         B     OPTNSEQ
         B     OPTNCOL                 COLUMN
         B     OPTNUSR                 USER
         B     OPTNCTRL                CONTROL
         B     OPTNSTOW                -STOWCLOSE
         B     OPTNASIS                -ASIS
         B     OPTNFIND                FIND
***********************************************************************
OPTNSCAN EQU   *
         MVC   SCANPARM,OPTNWRK
         B     OPTION8
OPTNLIST EQU   *
         MVC   GLISTON,OPTNWRK
         B     OPTION8
OPTNDIR  EQU   *
         MVC   DIRECTON,OPTNWRK
         B     OPTION8
OPTNEJCT EQU   *
         MVC   EJECTON,OPTNWRK
         B     OPTION8
OPTNDD   EQU   *
         BAL   14,CLOSEUT1             CLOSE OLD ONES 1ST
         L     3,PRMSTART
         LH    2,PRMLNGTH
         BCTR  2,0
         STC   2,OPTNDMVC+1
         MVC   UT1NAME,=CL8' '         BLANK OUT
OPTNDMVC MVC   UT1NAME,0(3)            THE NEW DDNAME
         BAL   14,OPENUT1              DO SYSUT1
         B     OPTION8
***********************************************************************
*                                                                     *
OPTNLINE EQU   *
         ZAP   MAXLINES,DOUBLE
         B     OPTION8
OPTNSEQ  EQU   *
         CVB   3,DOUBLE
         STH   3,SEQINCR
         B     OPTION8
*******************************************************
OPTNDLM  DC    C' '
         DS    0H
OPTNCOL  EQU   *
         CVB   3,DOUBLE
         BCTR  3,0
         LA    4,79                    MAX REAL OFFSET
         CR    3,4
         BL    OPTNCOL2
         LA    4,79+8                  MAX EXTERNAL
         LA    3,80
OPTNCOL2 EQU   *
         CR    3,4                     ARE WE TOO BIG
         BH    OPTIONR1                TOO MUCH OFFSET
         SR    4,3                     PREDICT LENGTH
         STH   4,SEQWLNG               LENGTH
         STH   3,SEQWOFF               OFFSET
         CLI   OPTNDLM,C'('
         BNE   OPTNCOL4
         CLI   PRMCHAR+3,C','          ANYTHING TO FOLLOW
         BNE   OPTNCOL4                   NO
         MVC   NUMADR,PRMHIT
         BAL   14,NUMBER               GT LNGTH OF SEQ
         B     OPTIONR1                NOT A NUM
         CLC   SEQWOFF,=AL2(79)        EXTERNAL
         BH    OPTNCOL4                   YES
         CVB   3,DOUBLE
         BCTR  3,0
         STH   3,SEQWLNG
OPTNCOL4 EQU   *
         CLC   SEQWLNG(2),=AL2(7)      LNG TOO BIG
         BH    OPTIONR1                   YES
         MVC   SEQOFSET,SEQWOFF
         MVC   SEQLNGTH,SEQWLNG
         B     OPTION8
***********************************************************************
OPTNUSR  EQU   *
         MVC   USERON,OPTNWRK
         B     OPTION8
*******************************************************
OPTNCTRL EQU   *
         L     3,PRMSTART
         MVC   CLICTRL+1(1),0(3)       CONTROL CHAR TO USE
         B     OPTION8
*******************************************************
OPTNSTOW EQU   *
         MVC   STOWON,OPTNWRK
         B     OPTION8
**********************************************************************
OPTNASIS EQU   *
         MVI   PRTALL,0
         MVC   ASIS,OPTNWRK
         NI    ASIS,X'0F'
         L     3,PRMSTART
         CLC   =C'Y+1',0(3)            Y+1=SKIP OVER CARRIAGE CTL
         BNE   OPTNAS2                    NO
         OI    ASIS,X'F0'
         B     OPTION8
OPTNAS2  EQU   *
         CLC   =C'Y+0',0(3)            Y+0=REALLY ASSIS
         BNE   OPTION8
         OI    PRTALL,X'FF'
         B     OPTION8
***********************************************************************
OPTNFIND EQU   *
         MVC   ANDFIND,OPTNWRK
         B     OPTION8
***********************************************************************
OPTION8  EQU   *
         CLI   PRMCHAR+3,C' '          THE END
         BNE   OPTIONLP                NOT THE END YET
OPTIONXT EQU   *
         B     CONTROL                 -------EXIT
***********************************************************************
OPTIONR1 EQU   *
         LA    1,OPTNMSG1              INVALID OPTION KEYWRD
         L     3,CHKADR                WHERE WE STARTED
         MVC   OPTNKEY(10),0(3)        BAD PLACE
         BAL   14,PRINTERR
         B     OPTION8
***********************************************************************
         EJECT
***********************************************************************
LDIRECT  EQU   *
         CLI   CTLERROR,X'FF'
         BE    CONTROL
         BAL   14,GETNAME
         B     LDIRECTA                DONE/NONE
         B     LDIRECTA                TOO LONG GET ALL
*
         MVC   DIRALL(2),PRMLNGTH
         MVC   DIRALL+2(8),CARDNAME
         MVI   DIRALL+10,X'FF'
         BAL   14,DIRLIST1
         B     CONTROL
LDIRECTA EQU   *
         BAL   14,DIRLIST              DIRECTORY LISTING
         B     CONTROL                 --------EXIT
***********************************************************************
DIRALL   DC    AL2(1),CL8'ALL',X'00',8X'FF',4X'00',4X'00'
DIRR14   DC    A(0)
*                                                                     *
DIRLIST  EQU   *
         ST    14,DIRR14
         MVC   DIRALL(2),=AL2(1)
         MVI   DIRALL+10,0
DIRLIST1 EQU   *
         ST    14,DIRR14
         MVI   DIRNAME,X'FF'           RESET DIR
         MVC   FINDADR,=A(DIRALL)      DUMMY
         ZAP   LINES,MAXLINES
DIRLOOP  EQU   *
         BAL   14,FINDMEM
         B     DIRDONE                 -DONE
         NOP   *
         MVC   INDEXNAM(8),DIRNAME     NAME
         MVC   INDEXALS(5),=CL8' '
         TM    DIRCTL,X'80'            ALIAS
         BZ    DIRLIST2                   NO
         MVC   INDEXALS(5),=CL5'ALIAS'
DIRLIST2 EQU   *
         UNPK  INDEXTTR(7),DIRTTR(4)
         TR    INDEXTTR(6),TRTBL-C'0'  MAKE PRINTABLE
         MVI   INDEXTTR+6,C' '
         MVC   PRINTIT(L'INDEXL),INDEXL MOVE TO PRINTBUF
         SR    1,1
         IC    1,DIRCTL
         N     1,=XL4'1F'              # OF 2BYTE USER
         LA    3,PRINTIT+L'INDEXL+1
         UNPK  0(3,3),DIRCTL(2)
         MVI   2(3),C' '
         TR    0(2,3),TRTBL-C'0'
         LA    3,3(3)
         LA    4,DIRUSER
DIRLIST3 EQU   *
         LTR   1,1
         BZ    DIRLIST4
         UNPK  0(5,3),0(3,4)
         MVI   4(3),C' '
         TR    0(4,3),TRTBL-C'0'
         BCTR  1,0
         LA    3,5(3)
         LA    4,2(4)                  NEXT 2
         C     3,=A(PRINTIT+131)
         BL    DIRLIST3                WE CNA DO MORE
DIRLIST4 EQU   *
         BAL   14,PRINTLIN
         XC    DIRNAME,DIRNAME         WONT USE AGAIN
         B     DIRLOOP                 GET THE NEXT
***********************************************************************
DIRDONE  EQU   *
         L     14,DIRR14
         BR    14
***********************************************************************
         EJECT
**********************************************************************
USAGE    EQU   *
         LA    4,SYSUT1
         MVC   CAMDSN,=A(PRNTDSN)
         MVC   CAMVOL,=A(PRNTVOL)
         BAL   14,USED
         B     USAGE2                  NOTHING
         ZAP   TOTMEMR,=P'0'
         ZAP   TOTMEMA,=P'0'
         MVI   TOTSCAN,X'FF'
         MVI   DIRNAME,X'FF'
         MVC   FINDADR,=A(DIRALL)
         MVC   DIRALL(2),=AL2(1)
         MVI   DIRALL+10,0
USALOOP  EQU   *
         BAL   14,FINDMEM
         B     USADONE
         B     USALIAS
         AP    TOTMEMR,=P'1'
         B     USACLEAR
USALIAS  EQU   *
         AP    TOTMEMA,=P'1'
USACLEAR XC    DIRNAME,DIRNAME
         B     USALOOP
USADONE  EQU   *
         OI    TOTUSED+3,X'0F'
         OI    TOTBLOCK+3,X'0F'
         OI    TOTMEMR+3,X'0F'
         OI    TOTMEMA+3,X'0F'
*
         MVC   USE1DDNM(8),UT1NAME
         UNPK  USE1ALOC(5),TOTBLOCK
         UNPK  USE1USED(5),TOTUSED
         LA    1,USEMSG1
         BAL   14,PRNTSTAT
*
         MVC   USE3DDNM(8),UT1NAME
         UNPK  USE3MEMR(5),TOTMEMR
         UNPK  USE3MEMA(5),TOTMEMA
         LA    1,USEMSG3
         BAL   14,PRNTSTAT
         MVC   USE2DDNM(8),UT1NAME
         MVI   PRINTASA,C'0'
         LA    1,USEMSG2
         BAL   14,PRNTSTAT             SYSUT1
USAGE2   EQU   *
         LA    4,SYSUT2
         MVC   CAMDSN,=A(PRNTDSN2)
         MVC   CAMVOL,=A(PRNTVOL2)
         BAL   14,USED
         B     CONTROL
         MVC   USE2DDNM(8),UT2NAME
         MVI   PRINTASA,C'0'
         LA    1,USEMSG2
         BAL   14,PRNTSTAT
         B     CONTROL
**********************************************************************
TOTSCAN  DC    X'00'
TOTUSED  DC    PL4'0'
TOTBLOCK DC    PL4'0'
TOTMEMR  DC    PL4'0'
TOTMEMA  DC    PL4'0'
**********************************************************************
         EJECT
**********************************************************************
DEBNMEXT EQU   16
DEBAMLNG EQU   16
DEBNMTRK EQU   14+32
DS1LSTAR EQU   98-44
DSNTOTAL DC    A(0)                    TOTAL TRKS
DSNEMPTY DC    A(0)                    EMPTY TRKS
DSNEXTNT DC    A(0)                    # EXTNTS
USEDR14  DC    A(0)
*
USED     EQU   *                       R4 POINTS TO DCB
         ST    14,USEDR14
         TM    DCBOFLGS,X'10'          OPEN
         BZR   14                         NO
         L     1,DCBDEBAD              DEBADDRESS
         SR    0,0
         SR    3,3
************************
*  CLAC TOTAL SIZE DSN *
************************
         IC    3,DEBNMEXT(1)           # OF EXTNETS
         ST    3,DSNEXTNT              SAVE EXTENTS
USEDLOOP EQU   *
         AH    0,DEBNMTRK(1)           ADD # TRK/EXTENT
         LA    1,DEBAMLNG(1)            GO TO NEXT
         BCT   3,USEDLOOP
         ST    0,DSNTOTAL              SAVE TOTAL # TRKS
**********************************************************************
         OBTAIN CAMLST
         LH    1,DSCB+DS1LSTAR
         LA    1,1(1)
         L     0,DSNTOTAL
         SR    0,1
         ST    0,DSNEMPTY              SAVE EMPTY TRKS
         L     1,DSNTOTAL              TOTAL # TRKS
         CVD   1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  USE2ALOC(5),DOUBLE
         L     1,DSNEMPTY              EMPTY TRKS
         CVD   1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  USE2EMTY(5),DOUBLE
         MVI   PRINTASA,C'0'
         L     14,USEDR14
         B     4(14)
**********************************************************************
CAMLST   CAMLST SEARCH,*,*,DSCB
         ORG   *-12
CAMDSN   DC    A(0)
CAMVOL   DC    A(0)
         ORG
**********************************************************************
         EJECT
**********************************************************************
RENAME   EQU   *
         CLI   CTLERROR,X'FF'
         BE    CONTROL
         BAL   14,STOWR                E RENAME
         B     CONTROL
**********************************************************************
SCRATCH  EQU   *
         CLI   CTLERROR,X'FF'
         BE    CONTROL
         BAL   14,STOWS                -SCRATCH
         B     CONTROL
**********************************************************************
ALIAS    EQU   *
         CLI   CTLERROR,X'FF'
         BE    CONTROL
         MVI   FINDTYPE,X'FF'          ALIAS NOT OK
         MVC   FINDNAME,STOWOLD
         BAL   14,BLDL
         B     CONTROL                 ERROR
         MVC   STOWTTR(66),FINDTTR
         BAL   14,STOWA                ALIAS
         B     CONTROL
**********************************************************************
KOPY     EQU   *
         CLI   CTLERROR,X'FF'
         BE    CONTROL
         MVI   FINDTYPE,X'80'          ALIAS OK
         MVC   FINDNAME,STOWOLD
         BAL   14,BLDL
         B     CONTROL                 NOT FOUND
         MVC   STOWTTR(66),FINDTTR
         BAL   14,SETSEQ
         LA    1,FINDTTR
         BAL   14,FINDUT1              POSITION
COPYLOOP EQU   *
         BAL   14,READMEM
         B     COPYEND                 EOF
         BAL   14,WUT2OLD              COPY
         B     COPYLOOP
COPYEND  EQU   *
         BAL   14,UT2LAST              DO LAST SHORT BLK
         BAL   14,STOWC                ADD COPIED (NO DUPS)
         B     UT2RESET
         EJECT
***********************************************************************
REPLACE  EQU   *
         MVI   REPON,X'FF'
***********************************************************************
ADD      EQU   *
         XC    FINDOLI(70),FINDOLI
         MVC   FINDADR,=A(FINDMODL)
         BAL   14,SETSEQ
ADD2     EQU   *
         CLI   CTLERROR,X'FF'          ERROR
         BE    ADDFLUSH                   YES
ADDIT    EQU   *
         BAL   14,GETSYSIN
         B     ADDEND2                 EOF
         B     ADD3                    NOT ''
         BAL   14,INCHK                ANY INCS
         B     ADDEND1                    NO
         BAL   14,INC                  DO -INC
         B     ADD2
ADD3     EQU   *
         BAL   14,WUT2NEW              WRITE NEW
         BAL   14,PRINTADD
         B     ADDIT
**********************************************************************
ADDEND1  EQU   *
         MVI   CTLSAV,X'FF'
ADDEND2  EQU   *
         BAL   14,UT2LAST              DO LAST SHORT BLK
         CLI   REPON,0                 ADD
         BE    ADDEND3                    YES
         BAL   14,STOW
         B     UT2RESET
ADDEND3  EQU   *
         BAL   14,STOWC
         B     UT2RESET
*
*********************************************************************
ADDFLUSH EQU   *                       FLUSH AFTER AN ERROR
         BAL   14,GETSYSIN
         B     UT2RESET
         B     ADDFLIST                SOME DATA
         BAL   14,INCHK                POSSIBLE INC
         B     ADDFLEXT                   NO
ADDFLIST EQU   *
         BAL   14,PRINTFLS
         B     ADDFLUSH
ADDFLEXT EQU   *
         MVI   CTLSAV,X'FF'
         B     UT2RESET
**********************************************************************
         EJECT
*********************************************************************
UPOUT    DC    X'00'
UPSTART  DC    XL4'FF'
UPEND    DC    XL4'FF'
*
         DS    0F
FINDMODL DC    AL2(8)
FINDNAME DC    CL8' '
FINDTYPE DC    X'FF'
         DC    8X'FF'                  SESS/MASK
FINDOLI  DC    XL4'00'
FINDTTR  DC    XL3'00'
FINDCTL  DC    X'00'
FINDUSER DC    XL62'00'
*
UPMSG    DC    A(0)
**********************************************************************
NESTBLK  DC    A(0)
NESTBYTE DC    A(0)
NESTTTR  DC    A(0)
**********************************************************************
UPDATE   EQU   *
         CLI   CTLERROR,X'FF'
         BE    UPCARDS
         MVI   FINDTYPE,X'FF'          ALIAS NOT OK
         BAL   14,BLDL
         B     UPCARDS                 NOT FOUND
         MVC   STOWTTR(66),FINDTTR
         BAL   14,SETSEQ
         LA    1,FINDTTR
         BAL   14,FINDUT1              POSITION
         MVI   UPDATA,0
UPCARDS  EQU   *
         BAL   14,GETSYSIN
         B     UPEOF2                  -EOF
         B     UPEOF1                  -NOT CTL
UPCARDS2 EQU   *
         BAL   14,INCHK
         B     UPDATE3                 NOT -INC
         LA    1,CTLMSG9               NOT NOW
         BAL   14,PRINTERR
         B     UPFLUSH
UPDATE3  EQU   *
         BAL   14,SETCTL
UPDATE4  MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     UPEOF1                  NOTHING
         B     UPDATE4
         MVC   CHKADR,PRMSTART
         MVC   CHKLNGTH,PRMLNGTH
         MVC   CHKTBL,=A(KEY3C-2)
         BAL   14,CHKTYPE
         B     UPEOF1                  NOT 1 OF US
         NOP   *                       -INS
         NOP   *                       -REP
         NOP   *                       -DEL
         BAL   14,PRINTCTL
         BAL   14,UPRANGE
         CLI   CTLERROR,X'FF'          ANY ERRORS
         BE    UPFLUSH                    YES
         MVI   UPDATA,X'FF'
**********************************************************************
         BAL   14,CHKTYPE
         NOP   *
         B     INS
         B     REP
         B     DEL
UPEOF1   EQU   *                       NEXT
         MVI   CTLSAV,X'FF'
UPEOF2   EQU   *
         CLI   UPDATA,X'FF'            ANY DATA
         BE    UPEOF2B                   YES
         LA    1,UPMSG8
         BAL   14,PRINTERR
UPEOF2B  EQU   *
         CLI   CTLERROR,X'FF'
         BE    UT2RESET                   YES-ERRORS
UPEOF3   EQU   *
         BAL   14,READMEM              COPY THE REST
         B     UPEOFX
         BAL   14,WUT2OLD
         B     UPEOF3
UPEOFX   EQU   *
         BAL   14,UT2LAST              DO LAST SHORT BLK
         BAL   14,STOW
         B     UT2RESET
**********************************************************************
         EJECT
**********************************************************************
INS      EQU   *
         MVI   UPOUT,0
         CLC   UPSTART,=XL4'00'        BEFORE START
         BE    INS4
INS2     BAL   14,READMEM
         B     UPERR4                  -EOF
         BAL   14,WUT2OLD              COPY OLD
         CLC   SEQWRK,UPSTART
         BH    UPERR5                  TOO FAR
         BNE   INS2
**********************************************************************
INS4     EQU   *
         BAL   14,GETSYSIN
         B     INS9                    EOF
         B     INS6                    DATA TO INSERT
         BAL   14,INCHK
         B     INS9                    NOT -INC
         MVC   NESTBLK(8),MEMBLK
         NOTE  SYSUT1
         ST    1,NESTTTR
         BAL   14,INC                  DO INC
         LA    1,NESTTTR
         BAL   14,FINDUT1
         MVC   MEMBUFR,BUFPOOL
         LA    1,MEMDECB               REFRESH
         BAL   14,RREAD
         MVC   MEMBLK(8),NESTBLK       RESTORE DEBLOCKERS
         B     INS4
**********************************************************************
INS6     EQU   *
         MVI   UPOUT,X'FF'
         BAL   14,WUT2NEW              INSERT NEW
         BAL   14,PRINTINS
         B     INS4
INS9     EQU   *                       EOF OR NEXT CTL
         CLI   UPOUT,X'FF'             ANY WRITTEN
         BE    INSX                       YES
         LA    1,UPMSG8                MSISING DATA
         BAL   14,PRINTERR
INSX     EQU   *
         CLI   EOF,X'FF'               EOF
         BE    UPEOF2                     YES
         B     UPCARDS2
**********************************************************************
         EJECT
**********************************************************************
REP      EQU   *
         MVI   UPOUT,0
REP2     EQU   *
         BAL   14,READMEM
         B     UPERR4                  EOF
         CLC   SEQWRK,UPSTART
         BH    UPERR5                  TOO FAR
         BE    REP4                    THIS IS IT
         BAL   14,WUT2OLD              COPY OLD
         B     REP2
**********************************************************************
REP4     EQU   *
         BAL   14,PRINTDEL             DELETED
         CLC   SEQWRK,UPEND            THE END
         BE    REP6                       YES
         BH    UPERR5                  TOO FAR
         BAL   14,READMEM
         B     UPERR4                  EOF
         B     REP4
REP6     EQU   *
         B     INS4                    DO NEXT AS INSERTS
**********************************************************************
         EJECT
**********************************************************************
DEL      EQU   *
DEL2     EQU   *
         BAL   14,READMEM
         B     UPERR4                  EOF
         CLC   SEQWRK,UPSTART
         BH    UPERR5                  TOO FAR
         BE    DEL4
         BAL   14,WUT2OLD              COPY OLD
         B     DEL2
**********************************************************************
DEL4     EQU   *
         BAL   14,PRINTDEL             DELETED
         CLC   SEQWRK,UPEND            END
         BE    DEL6                       YES
         BH    UPERR5                  TOO FAR
         BAL   14,READMEM
         B     UPERR4                  EOF
         B     DEL4
DEL6     EQU   *
         B     UPCARDS                 GET NEXT
**********************************************************************
         EJECT
**********************************************************************
UPERR4   EQU   *
         LA    1,UPMSG4                EOF MEMBER
         MVC   UPM4NAME(8),STOWNAME
         MVC   UPM4SEQ(8),CARDSEQ
         B     UPERRS
UPERR5   EQU   *
         LA    1,UPMSG5                MEM.GT.SEQUENCE
         MVC   UPM5SEQ(8),CARDSEQ
         B     UPERRS
UPERRS   EQU   *
         BAL   14,PRINTERR
         B     UPFLUSH
UPFLUSH  EQU   *
         BAL   14,GETSYSIN
         B     UPEOF2                  EOF
         B     UPFLIST
         BAL   14,INCHK
         B     UPCARDS2                NOT -INC
UPFLIST  EQU   *
         BAL   14,PRINTFLS             LIST AS FLUSHED
         B     UPFLUSH
**********************************************************************
UT2LST14 DC    A(0)
*
UT2LAST  EQU   *                       WRITE LAST SHOT BLK
         ST    14,UT2LST14
         CLC   WUT2BYTE,=A(0)          IS THERE A LAST BLK
         BER   14                         NO
         LA    4,SYSUT2
         MVC   DCBBLKSI,WUT2BYTE+2     FOR LAST BLK
         LA    1,WUT2DECB
         BAL   14,WWRITE
         LA    4,SYSUT2
         MVC   DCBBLKSI,WUT2BLK+2      RESTORE OLD BLK
         L     14,UT2LST14
         BR    14
**********************************************************************
UT2RESET EQU   *
         LA    4,SYSUT2
         TM    DCBOFLGS,X'10'          OPEN
         BZ    CONTROL
         CLI   STOWON,X'FF'            DO WE CLOSE
         BE    UT2RESTB                   YES
         CLI   CTLERROR,0
         BE    CONTROL
UT2RESTB EQU   *
         CLOSE (SYSUT2)
         OPEN  (SYSUT2,(OUTPUT))
         B     CONTROL
         EJECT
INCHKR14 DC    A(0)
*
INCHK    EQU   *
         ST    14,INCHKR14
         BAL   14,SETCTL
INCHK3   MVC   PRMSTART,PRMHIT
        BAL    14,PRMSCAN
         B     INCHK6                  NOTHING
         B     INCHK3
         LH    2,PRMLNGTH
         BCTR  2,0
         STC   2,INCHKCLC+1
INCHK6   EQU   *
         L     3,PRMSTART
         L     14,INCHKR14
INCHKCLC CLC   0(0,3),KEY3AA           -INCLUDE
         BNER  14                         NO
         BAL   14,PRINTCTL
         L     14,INCHKR14
         B     4(14)
**********************************************************************
         EJECT
**********************************************************************
INCDIR   DC    X'00'
INCSEQ   DC    PL6'0'
INCDDNAM DC    CL8' '
INCDDSAV DC    CL8' '
         DS    0H
INCR14   DC    A(0)
*
INC      EQU   *
         ST    14,INCR14
         MVI   INCDDNAM,0              INIT TO NO NEW DDNAM
         MVC   INCSEQ,INTSEQ           SAVE CURRENT INTERNAL SEQ
         ZAP   INTSEQ,=P'0'
         BAL   14,GETNAME
         B     INCERR3                 NO NAME
         B     INCERR6                 TOO LONG
         CLI   PRMCHAR+3,C'('          POSSIBLE DDNAME
         BNE   INC1                       NO
         MVC   INCDDNAM,CARDNAME       SAVE NEW DDNAME
         MVC   INCDDSAV,UT1NAME        SAVE CURRENT DDNAME
         BAL   14,GETNAME              GET REAL MEMBER
         B     INCERR3                 NO NAME
         B     INCERR6                 TOO LONG
         MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN              SKIP OVER )
         NOP   *
         NOP   *
         BAL   14,UPRANGE              GET NUMBERS
         CLI   CTLERROR,X'FF'
         BE    INCEXIT
         BAL   14,CLOSEUT1             CLOSE CURRENT ONE
         MVI   UT1TYPE,0               MAKE INPUT
         MVI   UT1OPTN,0               STILL INPUT
         MVC   UT1NAME,INCDDNAM        THE NEW DDNAME
         MVC   INCDIR,DIRECTON         SAVE DIR WANTED
         MVI   DIRECTON,0              NO DIRS FOR INCS
         BAL   14,OPENUT1              GET INC LIB
         B     INC2
INC1     EQU   *
         BAL   14,UPRANGE
         CLC   FINDNAME,CARDNAME       SAME AS BEFORE
         BE    INC3                       YES
INC2     EQU   *
         CLI   CTLERROR,X'FF'
         BE    INCEXIT
         MVI   FINDTYPE,X'80'          ALIAS OK
         MVC   FINDNAME,CARDNAME
         BAL   14,BLDL
         B     INCERR7                 NOT FOUND
INC3     EQU   *
         LA    1,FINDTTR
         BAL   14,FINDUT1              POSITION
INC4     EQU   *
         BAL   14,READMEM
         B     INCEXIT                 OEF
         CLC   SEQWRK,UPSTART
         BL    INC4                    NOT THERE YET
INC6     CLC   SEQWRK,UPEND
         BH    INCEXIT                 DONE
         MVI   UPOUT,X'FF'
         BAL   14,WUT2OLD              COPY ITT
         CLI   GLISTON,0               WANT TO LIST ITT
         BE    INC8                       NO
         BAL   14,PRINTCOP
INC8     EQU   *
         BAL   14,READMEM
         B     INCEXIT
         B     INC6
INCEXIT  EQU   *
         CLI   INCDDNAM,0              WERE WE INCING
         BE    INCEXRTN                   NO
         MVI   FINDNAME,X'FF'
         BAL   14,CLOSEUT1
         MVC   UT1NAME,INCDDSAV
         BAL   14,OPENUT1              GET THE OLD LIB BACK
         MVC   DIRECTON,INCDIR         AND RESTORE DIR
INCEXRTN EQU   *
         MVC   INTSEQ,INCSEQ           RESTORE OLD INTERNAL SEQ
         L     14,INCR14
         BR    14
**********************************************************************
INCERR3  EQU   *
         LA    1,CTLMSG3               NO NAME
         B     INCERRS
INCERR6  EQU   *
         LA    1,CTLMSG6               NAME TOO LONG
         B     INCERRS
INCERR7  EQU   *
         MVI   FINDNAME,X'FF'
         B     INCEXIT
INCERRS  EQU   *
         BAL   14,PRINTERR
         B     INCEXIT
**********************************************************************
         EJECT
***********************************************************************
*            FIND NAME FOR LIST/PRINT                                 *
***********************************************************************
LISTMEM  EQU   *
         MVI   LISTON,X'FF'            TURN ON LIST WANTED
         MVC   EDITARG,=A(EDITCTL)
         BAL   14,EDITNAMS             FIND NAMES TO LIST
         CLI   CTLERROR,0              ANY ERRORS
         BNE   LIST5                      YES
LIST4    EQU   *
         BAL   14,FINDITT              LIST UM
LIST5    EQU   *
         MVI   LISTON,0
         B     CONTROL                 ---EXIT TO CONTROL
***********************************************************************
         EJECT
***********************************************************************
*         FIND NAMES FOR PUNCH                                        *
***********************************************************************
PUNCHMEM EQU   *
         MVI   PUNCHON,X'FF'
         MVC   EDITARG,=A(EDITCTL)
         BAL   14,EDITNAMS             FIND NAMES TO PUNCH
         CLI   CTLERROR,0              ANY ERRORS
         BNE   PUNCH5                     YES
         BAL   14,OPENPNCH             CHECK IF PUNCH THERE
         B     PUNCH5                     NO PUNCH
         BAL   14,FINDITT
PUNCH5   EQU   *
         MVI   PUNCHON,0
         B     CONTROL                 ---DONE---EXIT
***********************************************************************
         EJECT
***********************************************************************
*      FIND NAMES FOR EDIT-SCAN                                       *
***********************************************************************
SEARCH   EQU   *
         MVI   SEARCHON,X'FF'          DO SEARCH ONLY
         BAL   14,WRKMAIN
         B     EDIT3
**********************************************************
SCANMEM  EQU   *
         MVI   SCANON,X'FF'            SCAN ONLY
         B     EDIT3
***********************************************************************
EDIT     EQU   *
         MVI   EDITON,X'FF'
         MVC   SCANON,SCANPARM         WHAT PARM SAYS
         BAL   14,OPENWRK
         B     EDIT3
***********************************************************************
FIND     EQU   *
         MVI   SEARCHON,X'FF'
         MVI   ANDON,X'FF'
         BAL   14,WRKMAIN              ALLOCATE WRKBUFR
         B     EDIT3
***********************************************************************
EDIT3    EQU   *
         MVC   EDITARG,=A(EDITCTL)     WHERE TO SAVE NAMES START
         MVC   SCANARG,SCANBUF         INIT FOR CHANGES
         BAL   14,EDITNAMS
         XC    CARGS,CARGS             CLEAR -C COUNTER
**********************************************************************
*         -C CARDS MUST FOLLOW                                       *
**********************************************************************
EDITCS   EQU   *
         BAL   14,GETSYSIN
         B     EDIT9                   -EOF
         B     EDIT7                   BLANK
         BAL   14,SETCTL
EDITCS1  MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     EDIT7                   NOTHING
         B     EDITCS1                 ZERO 'L'
         L     3,PRMSTART
         LH    2,PRMLNGTH
         BCTR  2,0
         STC   2,EDITCLC+1
         STC   2,EDITCLC2+1
         MVI   FILLON,0
EDITCLC  CLC   KEY1B,0(3)              -C
         BE    EDITCHNG
EDITCLC2 CLC   KEY1L,0(3)              -FILL
         BNE   EDIT7
         MVI   FILLON,X'FF'
EDITCHNG EQU   *
*
         BAL   14,CHANGCTL             PROCESS -C
         B     EDITCS
**********************************************************************
EDIT7    EQU   *
         MVI   CTLSAV,X'FF'
EDIT9    EQU   *
         L     3,SCANBUF
         CLC   (CTLLNG1-CTLCTL)(2,3),=AL2(0) ANY -CS
         BE    EDITERR4                   NO
         CLI   CTLERROR,0              ANY ERRORS
         BNE   CONTROL                    YES
***********************************************************************
EDIT4    EQU   *
         BAL   14,FINDITT
         MVC   SCANON,SCANPARM         RESET TO DEFAULT
EDIT5    EQU   *
         B     CONTROL                 ---EXIT TO CONTROL
***********************************************************************
         EJECT
***********************************************************************
EDITNR14 DC    A(0)
FIRSTNUM DC    XL4'00'
LASTNUM  DC    XL4'FF'
*                                                                     *
EDITNAMS EQU   *
         ST    14,EDITNR14
         MVI   MASKON,0
EDITMORE EQU   *
         BAL   14,GETNAME              GET NMME ON CARD
         B     EDITDONE                DONE/NONE
         B     EDITERR6                TOO LONG
         BAL   14,NUMBONE              IS IT MAYBE A NUMBER
         B     EDITNAM4                   NO
         CLC   FIRSTNUM,=4X'00'
         BNE   EDITNUM2
         MVC   FIRSTNUM,NUMWORK
EDITNUM2 MVC   LASTNUM,NUMWORK
         B     EDITMORE
EDITNAM4 EQU   *
         L     3,EDITARG               WHERE TO PUT NAME
         MVC   0(2,3),=H'8'            INIT TO GETTING 1 NAME
         MVC   2(8,3),CARDNAME         SAVE NAME
         MVC   10(1,3),PRMCHAR+3       TYPE
         MVC   11(8,3),2(3)            NAME AGAIN
         MVC   TRTTBL,TRTTBL-1         FF
         MVI   TRTTBL+C'-',0           '-'=00
         TR    11(8,3),TRTTBL          MAKE A MASK
         CLC   11(8,3),=8X'FF'
         BE    EDITSET
         MVI   MASKON,X'FF'
EDITSET  EQU   *
         BAL   14,SETTRT               RESTORE TBL
         CLI   PRMCHAR+3,C'.'          '.'=ALL
         BNE   EDITINC                    NO
         CLC   2(4,3),=CL4'ALL'        ALL.ALL
         BNE   EDITSOME
         MVI   10(3),0                 TURN ON ALL
EDITSOME EQU   *
         MVC   0(2,3),PRMLNGTH         USE FOR ALL CHK
         MVC   PRMSTART,PRMHIT         SKIP OVER THE '.' ALL
         BAL   14,PRMSCAN
         NOP   *
         NOP   *
EDITINC  EQU   *
         L     3,EDITARG
         LA    3,L'EDITCTL(3)          BUMP TO NEXT AVAIL
         ST    3,EDITARG               AND SAVE
         XC    0(2,3),0(3)
         CLI   PRMCHAR+3,C' '          BLANK=DONE
         BE    EDITDONE                   YES
         B     EDITMORE                LOOK FOR MORE NAMES THIS CARD
***********************************************************************
EDITDONE EQU   *
         CLC   EDITCTL(2),=AL2(0)      ANY NAMES
         BE    EDITERR3                   NO
***********************************************************************
         EJECT
***********************************************************************
*           SORT THE NAMES                                            *
***********************************************************************
EDITSRT  EQU   *
         MVI   SORT,0                  NOTHING SORTED
         LA    3,EDITCTL               WHERE THE NAMES ARE
EDITSRT1 EQU   *
         CLC   L'EDITCTL(2,3),=AL2(0)  THE END
         BE    EDITSRT3                   YES
         CLC   2(8,3),L'EDITCTL+2(3)   THIS 1 LOWER
         BNH   EDITSRT2                   YES
         XC    0(L'EDITCTL,3),L'EDITCTL(3) SWAP UM
         XC    L'EDITCTL(L'EDITCTL,3),0(3)
         XC    0(L'EDITCTL,3),L'EDITCTL(3) SWAP DONE
         MVI   SORT,X'FF'              SOMETHING SORTED
EDITSRT2 EQU   *
         LA    3,L'EDITCTL(3)          TO NEXT 1
         B     EDITSRT1
***********************************************************************
EDITSRT3 EQU   *
         CLI   SORT,X'FF'              DID WE SORT ANY
         BE    EDITSRT                    YES
         B     EDITFND
EDITFNDB EQU   *
         ST    14,EDITNR14
***********************************************************************
*        FIND THE NAMES IN DIRECTORY                                  *
***********************************************************************
EDITFND  EQU   *
         MVI   DIRNAME,X'FF'           START AT BEGIN DIRECT
         LA    3,EDITCTL               BACK TO NAMES
EDITFND2 EQU   *
         ST    3,FINDADR
         CLC   0(2,3),=AL2(0)          THE END
         BE    EDITEXIT                   YES
         CLI   MASKON,0                MASKS
         BE    EDITFLOP                   NO
         MVI   DIRNAME,X'FF'
EDITFLOP EQU   *
         BAL   14,FINDMEM              TRY TO FIND
         B     EDITERR7                NO SUCH NAME EXISTS
         B     EDITFND6                -AN ALIAS
EDITFND4 EQU   *
         L     3,FINDADR
         MVC   2(8,3),DIRNAME          1ST NAME FOUND
EDITFND3 EQU   *
         LA    3,L'EDITCTL(3)          NEXT ONE
         B     EDITFND2
***********************************************************************
EDITEXIT EQU   *
         MVI   DIRNAME,X'FF'           RESET FOR ALL
         L     14,EDITNR14
         BR    14
***********************************************************************
EDITFND6 EQU   *
         XC    DIRNAME,DIRNAME         WONT USE AGAIN
         L     3,FINDADR
         B     EDITFLOP                  NO-NOT USE ALIAS
***********************************************************************
         EJECT
***********************************************************************
EDITERR3 EQU   *
         LA    1,CTLMSG3               NO VALID NAMES EXITS
         BAL   14,PRINTERR
         B     EDITEXIT
***********************************************************************
EDITERR4 EQU   *
         LA    1,CTLMSG4               NO -C
         BAL   14,PRINTERR
         B     CONTROL
EDITERR6 EQU   *
         LA    1,CTLMSG6               NAME TOO LONG
         BAL   14,PRINTERR
         B     EDITMORE
EDITERR7 EQU   *
         BAL   14,CTLERR7              NAME NOT FOUND
         L     3,FINDADR               RESTORE WHERE AT
         B     EDITFND3                CHECK NEXT ONE
***********************************************************************
         EJECT
***********************************************************************
***********************************************************************
         DS    0F
         DC    X'00'
UTILMODL EQU   *
         DC    4X'FF'                  START
         DC    4X'FF'                  END
         DC    AL2(0)                  COLUMN START OFFSET
         DC    AL2(255)                # COLUMNS TO CHK
         DC    AL2(L'UTILKEY)
UTILKEY  DC    C'&&NAME'
UTILNGTH DC    AL2(L'UTILNAME)
UTILNAME DC    C'UTILNAME'
         DC    AL2(0)
         DC    20X'00'
***********************************************************************
UTILITY  EQU   *
         MVC   EDITARG,=A(EDITCTL)
         BAL   14,EDITNAMS
         BAL   14,CLOSEWRK             -CLOSE SYSWRK
         BAL   14,WRKMAIN              ALLOCATE WRK POOL
         MVC   WRKFROM,=A(CTLCARD)
         BAL   14,OPENPNCH
         B     UTILDONE                NO PUNCH
         MVI   PUNCHON,X'FF'
UTIL4    EQU   *
         BAL   14,GETSYSIN
         B     UTIL5                      EOF
         NOP   *                       BLANK
         BAL   14,PRINTCTL             -LIST CARD
         MVC   ORIGINAL,CTLCARD
         CLI   CTLCARD+71,C'%'         PERCENT = 1 COPY
         BNE   UTIL4B                     NO
         MVI   ORIGINAL+71,C' '        BLANK CC72
         B     UTILONCE
UTIL4B   EQU   *
         CLI   CTLCARD+71,C'$'         DOLLAR = 1 COPY
         BNE   UTIL4C                     NO
UTILONCE EQU   *
         BAL   14,PNCHMEM              PUNCH 1 COPY OF THIS CARD
         B     UTIL4
         B     UTILDONE                NO PUNCH
***********************************************************************
UTIL4C   EQU   *
         BAL   14,WRKWRITE             SAVE
         B     UTILERR1                MAIN STORAGE EXCEEDED
         B     UTIL4
***********************************************************************
UTILERR1 EQU   *
         LA    1,UTILMSG1
         BAL   14,PRINTERR
         BAL   14,WRKMAIN              RESET
         B     UTIL4                   FLUSH REST
***********************************************************************
UTIL5    EQU   *
         CLI   CTLERROR,0              ANY ERRORS
         BNE   UTILDONE                   YES
         LA    3,EDITCTL
         ST    3,FINDADR
         MVC   L'EDITCTL-4-4(4,3),=AL1(72,7,10,X'EE')
         BAL   14,SETSEQ
         LA    3,EDITCTL
UTILMORE EQU   *
         ST    3,FINDADR
         CLC   0(2,3),=AL2(0)          DONE
         BE    UTILDONE                   YES
         CLI   MASKON,0                MASKS
         BE    UTILFIND                   NO
         MVI   DIRNAME,X'FF'
UTILFIND EQU   *
         BAL   14,FINDMEM
         B     UTILNEXT                -PAST
         B     UTILALS                 ALIAS
         MVC   UTILNAME,DIRNAME
         MVC   ORIGNAM(8),DIRNAME
         LA    4,7
UTILBLNK LA    3,UTILNAME(4)
         CLI   0(3),C' '               BLANK
         BNE   UTIL6                       NO
         BCT   4,UTILBLNK
UTIL6    EQU   *
         LA    4,1(4)
         STH   4,UTILNGTH              LENGTH
         XC    1(L'CTLCTL,3),1(3)      TO STOP IT
***********************************************************************
UTILREP  EQU   *
         BAL   14,WRKREAD
         B     UTILINC                 -END OF DATA
UTILSCAN EQU   *
         MVC   SCANARG,=A(UTILMODL)
         BAL   14,SCANREP
         B     UTILDONE                -ERROR
         B     UTIL7                   -DONE
         MVC   ORIGINAL(71),COPY
         B     UTILSCAN
UTIL7    EQU   *
         BAL   14,PNCHMEM              PUNCH IT
         B     UTILREP
         B     UTILDONE                -IF NO PUNCH
***********************************************************************
UTILALS  EQU   *
         XC    DIRNAME,DIRNAME         BYPASS ALIAS
         B     UTILFIND
***********************************************************************
UTILINC  EQU   *
         L     3,FINDADR
         CLC   0(2,3),=AL2(8)          FOR 1 ONLY
         BNE   UTILINC2                    NO-MORE THAN 1
         CLC   11(8,3),=8X'FF'         MASKED
         BE    UTILNEXT                   NO
UTILINC2 EQU   *
         XC    DIRNAME,DIRNAME
         B     UTILFIND
***********************************************************************
UTILNEXT EQU   *
         L     3,FINDADR
         LA    3,L'EDITCTL(3)
         B     UTILMORE
***********************************************************************
UTILDONE EQU   *
         B     CONTROL                 ---DONE---EXIT
***********************************************************************
         EJECT
***********************************************************************
CTLER14  DC    A(0)
CTLERR7  EQU   *
         LA    1,CTLMSG7               NAME NOT FOUND
         L     3,FINDADR
         MVC   CERR7NAM(8),2(3)        THIS NAME
         MVC   CERR8NAM(8),2(3)        NAME FOR ALIAS
         TM    L'EDITCTL-4+3(3),X'80'  ALIAS
         BZ    CTLERRXT                   NO
         LA    1,CTLMSG8               NAME IS AN ALIAS
         B     CTLERRXT
CTLERRXT EQU   *
         ST    14,CTLER14
         BAL   14,PRINTERR
         L     14,CTLER14
         BR    14
***********************************************************************
         EJECT
********************************
* GET /SEARCH ARG/REP ARG/     *
********************************
CHNGR14  DC    A(0)
*
CHANGCTL EQU   *
         ST    14,CHNGR14
         LH    1,CARGS                   OF
         LA    1,1(1)                     -C
         STH   1,CARGS                       CARDS
         BAL   14,PRINTCTL             LIST CARD
         BAL   14,RANGE                CHK FOR POSSIBLE #'S
         L     4,SCANARG
         MVC   0(CTLLNG,4),STARTNUM    START/END COL/LNG
         LA    4,CTLLNG(4)
         ST    4,SCANARG
         MVC       TRTTBL,TRTTBL-1     FOXES
         MVI       TRTTBL+C' ',X'00'   DONT STOP ON BLANKS
********************************
* FIND BEGINNING DELIMITER     *
********************************
         MVC   PRMSTART,PRMHIT
         BAL       14,PRMSCAN          LOOK FOR DELIMITER TO USE
         B     ARGERR1                 NOTHING ON CARD
         NOP       *                   ZERO IS OK
*
         XC        TRTTBL,TRTTBL       00
         L         5,PRMCHAR           LOAD DELIMITER CHARACTER
         LA        6,TRTTBL(5)         AND INDEX INTO TRT
         STC       5,0(6)              STORE DELIMITER TO USE
********************************
* FIND SEARCH ARG              *
********************************
         CLI   FILLON,0                FILLON
         BE    CHANGCT2                   NO
         BAL   14,PRMSTOR2
CHANGCT2 EQU   *
         MVC       PRMSTART,PRMHIT     WHERE TO START
         BAL       14,PRMSCAN          LOOK FOR SEARCH ARG
         B     ARGERR2                 MISSING DELIMITER
         B     ARGERR3                 ZERO SEARCH ARG LENGTH
         BAL       14,PRMSTORE         SAVE SEARCH ARG
         CLI   FILLON,X'FF'            FILLON
         BE    CHANGEXT
         CLI   SEARCHON,X'FF'          SEARCH ONLY
         BNE   CHANGCT6                  NO-GET REP
         MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     CHANGCT3                MISSING
         B     CHANGCT3                DITTO 0
         L     3,PRMSTART
         CLC   0(2,3),=CL2'-N'         IS THIS NOT
         BNE   CHANGCT3                   NO
         LH    1,CARGS                 BACK
         BCTR  1,0                     IT
         STH   1,CARGS                 OUT
         B     CHANGST                 SAVE IT
CHANGCT3 EQU   *
         XC    PRMLNGTH,PRMLNGTH
         B     CHANGST
********************************
* FIND REPLACEMENT ARG         *
********************************
CHANGCT6 EQU   *
         MVC       PRMSTART,PRMHIT     SHERE TO START NEXT
         BAL       14,PRMSCAN          FIND REP ARG
         B     ARGERR4                 MISSING END DELIMITER
         NOP       *                   ZERO -OK
         CLC   PRMCOUNT,=AL2(0)        ARE WE DONE WITH CARD
         BE    CHANGST                    NO
         L     3,PRMHIT
         CLI   0(3),C' '               IS THERE A BLANK AFTERWARDS
         BNE   ARGERR5                    NO
CHANGST  EQU   *
         BAL       14,PRMSTORE         SAVE REP ARG
CHANGEXT EQU   *
         L     14,CHNGR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
***********************************************************************
ARGERR1  EQU   *
         LA    1,PRMSG1                BLANK CARD
         B     PRMERRXT
ARGERR2  EQU   *
         LA    1,PRMSG2                MISSING DELIMITER 2
         B     PRMERRXT
ARGERR3  EQU   *
         LA    1,PRMSG3                ARG ZERO LENGTH
         B     PRMERRXT
ARGERR4  EQU   *
         LA    1,PRMSG4                MISSING DELIMITER 3
         B     PRMERRXT
ARGERR5  EQU   *
         LA    1,PRMSG5                NO BLANK AFTER LAST DELIM
PRMERRXT EQU   *
         BAL   14,PRINTERR
         B     CHANGEXT
***********************************************************************
         EJECT
*******************************
* SAVE /SEARCH/REP/ ARGS      *
*******************************
PRMSTR14 DC    A(0)
*
PRMSTORE EQU   *
         ST    14,PRMSTR14
         L         4,SCANARG           WHERE TO SAVE
         L         3,PRMSTART          WHERE PARM SAVE ADDR IS
         LH        2,PRMLNGTH          LENGTH OF PARM
         STH       2,0(4)              SAVE
         LTR   2,2
         BZ    PRMSEXIT
         BCTR      2,0                 MAKE MACH L
         STC       2,PRMMVC+1
         B     PRMMVC
PRMSTOR2 EQU   *
         ST    14,PRMSTR14
         L     4,SCANARG
         MVC   0(2,4),=AL2(2)
         LA    2,2
         STH   2,2(4)
         LA    4,2(4)
         B     PRMSEXIT
PRMMVC   MVC       2(0,4),0(3)         SAVE
         AH        4,PRMLNGTH          ADD THE LENGTH
PRMSEXIT EQU   *
         LA        4,2(4)              +2 CTL
         XC    0(L'CTLCTL,4),0(4)      INDICATE END
         ST        4,SCANARG           NEXT AVAIL
         L     14,PRMSTR14
         BR        14
***********************************************************************
PRMSTERR EQU   *
         LA    1,SEQMSG3
         BAL   14,PRINTERR
         L     4,SCANARG
         B     PRMSEXIT
***********************************************************************
         EJECT
RANGER14 DC    A(0)
STARTNUM DC    XL4'FF'
ENDNUM   DC    XL4'FF'
STARTCOL DC    AL2(0)
ENDCOL   DC    AL2(0)
*                                                                     *
RANGE    EQU   *
         ST    14,RANGER14
         MVC   STARTNUM,=4X'FF'
         MVC   ENDNUM,=4X'FF'
         MVC   STARTCOL,=AL2(0)
         MVC   ENDCOL,=AL2(255)
         L     3,PRMHIT                -BEGIN NEXT
         LH    4,PRMCOUNT              # LEFT
RANGELOP CLI   0(3),C' '               BLANK
         BNE   RANGE3                     NO
         LA    3,1(3)
         BCT   4,RANGELOP
         B     RANGEXT
RANGE3   EQU   *
         CLI   0(3),C'('               COLUMNS
         BE    RANGCOL1                   YES
         ST    3,NUMADR
         BAL   14,NUMBER
         B     RANGEXT                 -NOT A NUMBER
         MVC   STARTNUM,NUMWORK
         MVC   ENDNUM,NUMWORK
         CLI   PRMCHAR+3,C','          NEXT DELIM ,
         BNE   RANGEXT
         L     3,PRMHIT
         CLI   0(3),C'('               COLUMNS
         BE    RANGCOL1                   YES
         MVC   NUMADR,PRMHIT
         BAL   14,NUMBER
         B     RANGE4                  NOT A NUMBER
         MVC   ENDNUM,NUMWORK
         CLC   STARTNUM,ENDNUM
         BH    RANGE2
         CLI   PRMCHAR+3,C','          ANYMORE
         BNE   RANGEXT                    NO
         L     3,PRMHIT
         CLI   0(3),C'('               COLUMNS
         BNE   RANGEXT                    NO
RANGCOL1 EQU   *
         LA    3,1(3)
         ST    3,NUMADR
         BAL   14,NUMBER
         B     RANGE4                  NOT #
         CVB   1,DOUBLE
         STH   1,ENDCOL
         BCTR  1,0
         STH   1,STARTCOL
         CLI   PRMCHAR+3,C','          MORE COLUMNS
         BNE   RANGCOLS                   NO
         MVC   NUMADR,PRMHIT
         BAL   14,NUMBER
         B     RANGE4                  NOT #
         CVB   1,DOUBLE
         STH   1,ENDCOL
RANGCOLS EQU   *
         LH    1,ENDCOL
         SH    1,STARTCOL              END-START
         BNP   RANGE2                  ERROR
         STH   1,ENDCOL                # OF COLUMNS
         B     RANGEXT
***********************************************************
RANGE2   EQU   *
         LA    1,SEQMSG2
         B     RANGMSG
RANGE4   EQU   *
         LA    1,SEQMSG3               NOT A NUMBER
RANGMSG  EQU   *
         BAL   14,PRINTERR
RANGEXT  EQU   *
         L     14,RANGER14
         BR    14
***********************************************************************
UPRANG14 DC    A(0)
*
UPRANGE  EQU   *
         ST    14,UPRANG14
         BAL   14,RANGE
         CLI   STARTNUM,X'FF'
         BNE   UPRANGXT
         LA    1,SEQMSG2               SOMETHINGS NOT NUM
         BAL   14,PRINTERR
UPRANGXT EQU   *
         MVC   UPSTART,STARTNUM
         MVC   UPEND,ENDNUM
         L     14,UPRANG14
         BR    14
**********************************************************************
         EJECT
**********************************************************************
NUMADR   DC    A(0)
NUMBER14 DC    A(0)
NUMWORK  DC    XL5'00'
NUMPACK  PACK  NUMWORK,0(0,3)
*                                                                     *
NUMPACK2 PACK  DOUBLE,0(0,3)
*
NUMBONE  EQU   *
         ST    14,NUMBER14
         B     NUM1
NUMBER   EQU   *
         ST    14,NUMBER14
         L     3,NUMADR
         TM    0(3),X'F0'              NUMBER
         BNO   NUMEXT0                    NO
NUMBERS  EQU   *
         MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     NUMEXT0                 -DONE
         B     NUMBERS                 -0 LENGTH
NUM1     EQU   *
         L     3,PRMSTART
         LH    1,PRMLNGTH
         BCTR  1,0
         STC   1,NUMBCHK+1
NUMBCHK  TRT   0(0,3),TRTNUM
         BNZ   NUMEXT0
         L     3,PRMSTART
         LH    1,PRMLNGTH              LENGTH OF NUM
         EX    1,NUMPACK
         BCTR  1,0
         EX    1,NUMPACK2
NUMEXT4  EQU   *
         L     14,NUMBER14
         B     4(14)
NUMEXT0  EQU   *
         L     14,NUMBER14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
*     READ MEMBER AND LIST OR SCAN                                    *
***********************************************************************
FINDIR14 DC    A(0)
*                                                                     *
FINDITT  EQU   *
         ST    14,FINDIR14
         MVI   ALLCHK,0                NOT IN -ALL- MODE YET
         MVC   FINDADR,=A(EDITCTL)     WHERE NAMES ARE
         ZAP   LINES,MAXLINES          START WITH NEW PAGE
FINDMORE EQU   *
         BAL   14,RESTORE              SEE IF ANYTHING TO RESTORE
         XC    WRKNUM,WRKNUM           CLEAR # WRITTEN TO BKUP
         MVI   WRITEON,0               NO CHANGES TO BUFR YET
         MVI   FIRSTERR,0              NO ERROR FOR WRITING BUFR
         MVI   ERROR,0                 SET TO NO ERROR
         MVI   PRINTASA,C'0'
         CLI   EJECTON,0               EJECT
         BE    FINDITT3                   NO
         ZAP   LINES,MAXLINES
FINDITT3 EQU   *
         L     3,FINDADR
         CLC   0(2,3),=AL2(0)          IS THIS END
         BE    FINDONE                    YES
         MVC   ORIGNAM(8),2(3)         THIS MEM NAME
         LA    1,L'EDITCTL-4(3)        TTR THIS MEM
         BAL   14,FINDUT1
         BAL   14,SETSEQ
FINDREAD EQU   *
         MVI   PRINTED,0               SET NO ORIG PRINTED YET
         MVI   CHANGE,0                NOTHING CHANGED YET
         BAL   14,FINDSRCH             SEE IF FIND/SEARCH
         B     FINDINC1                   YES IT WAS
         BAL   14,READMEM              READ A RECORD OF MEMBER
         B     FINDINC1                END OF MEMBER
*                                                                     *
         BAL   14,PNCHMEM              PUNCH
         B     FINDREAD                   WE ONLY PUNCH
*                                                                     *
         BAL   14,PRINTMEM             SEE IF TO PRINT
         B     FINDREAD                ONLY LISTING
FINDREP  EQU   *
         MVC   SCANARG,SCANBUF         BEGIN OF ARGS
         BAL   14,REPAGAIN             DO THE SCAN AND REPLACE
         BAL   14,WRITEMEM
         B     FINDREAD                ALL OK
FINDINC1 EQU   *
***********************************************************************
         MVI   PRINTASA,C'0'
         L     3,FINDADR
         CLC   0(2,3),=AL2(8)          LOOK FOR 1 ONLY
         BNE   FINDIALL                   NO-LOOK FOR MORE
         CLC   11(8,3),=8X'FF'         IS IT MASKED
         BE    FINDINC4                   NO-WE ARE DONE
FINDIALL EQU   *
         CLI   ALLCHK,X'FF'            ARE WE IN ALL MORE ALREADY
         BE    FINDINC3                   YES
         CLI   MASKON,0                MASKS
         BE    FINDILOP                   NO
         MVI   DIRNAME,X'FF'
FINDILOP EQU   *
         BAL   14,FINDMEM              POSITION TO 1ST ONE WE DID
         B     FINDINC4                BEYOND
         B     FINDILOP                SHOULDNT GET-ALIAS
         MVI   ALLCHK,X'FF'            NOW ERE IN ALLCHK MODE
FINDINC3 EQU   *
         XC    DIRNAME,DIRNAME
         BAL   14,FINDMEM              GET THE NEXT FOR ALL MODE
         B     FINDINC4                THIS IS THE END
         B     FINDINC3                AN ALIAS-CANT USE
         L     3,FINDADR
         MVC   2(8,3),DIRNAME          THIS IS THE NAME
         B     FINDMORE                DO IT
***********************************************************************
FINDINC4 EQU   *
         MVI   ALLCHK,0
         L     3,FINDADR
         LA    3,L'EDITCTL(3)          BUMP TO NEXT ONE
         ST    3,FINDADR
         B     FINDMORE
***********************************************************************
FINDONE  EQU   *
         L     14,FINDIR14
         BR    14                      ---EXIT
***********************************************************************
FINDUT14 DC    A(0)
FINDSAV  DC    XL4'00'
*
FINDUT1  EQU   *
         ST    14,FINDUT14
         MVC   FINDSAV(3),0(1)         TTR TO FIND
         FIND  SYSUT1,FINDSAV,C
         MVC   MEMBYTE,MEMBLK          FORCE TO READ NEW
         L     14,FINDUT14
         BR    14
**********************************************************************
         EJECT
***********************************************************************
FINDSEND DC    X'00'
FINDSR14 DC    A(0)
*                                                                     *
FINDSRCH EQU   *
         CLI   SEARCHON,0              DOING SEARCH/FIND
         BE    4(14)                      NO
         ST    14,FINDSR14
         MVI   FINDSEND,0              NOT END OF MEM YET
         MVC   WRKFROM,=A(ORIGINAL)    WHERE TO SAVE FROM
         XC    TRTTBL,TRTTBL
FINDSRH0 EQU   *
         CLI   FINDSEND,X'FF'          END OF MEMBER
         BE    FINDSRHX                   YES
         XC    ANDHITS,ANDHITS         CLEAR # OF HITS
         XC    WRKBYTES,WRKBYTES       CLEAR # BUFFERED
FINDSRH1 EQU *
         BAL   14,READMEM              GET A MEM REC
         B     FINDSRHE                   END OF MEM
         BAL   14,WRKWRITE             SAVE
         B     FINDSER1                STORAGE EXCEEDED
         CLI   ANDON,0                 ANDING
         BE    FINDSRH4                   NO
***********************************************************************
* COMBINE CONTNUED CARDS= X IN CC72 OR ,BLANK                         *
***********************************************************************
         MVI   ORIGINAL+71,C' '
         MVI   TRTTBL+C',',C','        STOP ON COMMA
         MVI   TRTTBL+C' ',0           BUT NOT A BLANK
         TRT   ORIGINAL(71),TRTTBL
         BZ FINDSRH4                   ITS NOT CONTINUED
         CLC   0(2,1),=CL2', '         CONTINUED
         BE    FINDSRH1                  YES
         MVI   TRTTBL+C',',0           DONT STOP ON ,
         MVI   TRTTBL+C' ',C' '        BUT DO ON BLANK
         TRT   0(72,1),TRTTBL
         BCTR  1,0                     BACKUP ONE
         CLC   0(2,1),=CL2', '         CONTINUED
         BE    FINDSRH1                   YES
***********************************************************************
FINDSRH4 EQU   *
         BAL   14,WRKREAD              RETRIEVE SAVED
         B     FINDSRH7                   END OF SAVED
         MVC   SCANARG,SCANBUF
FINDSRH6 EQU   *
         BAL   14,SCANCARD
         B     FINDSRH4                DONE/NONE
         LH    1,ANDHITS
         LA    1,1(1)
         STH   1,ANDHITS
         L     4,SCANARG               WHERE THIS ARG IS
         LA    4,CTLLNG(4)             +CTLLNG
         AH    4,0(4)                  + LENGHT SRCH
         LA    4,2(4)                  +2 CTL
         CLI   ANDON,0                 ANDING
         BE    FINDSR6B                   NO
         CLC   0(2,4),=AL2(0)          ZERO
         BE    FINDSR6B                   YES
         BAL   14,WRKMAIN              NO-THIS IS -NOT
         B     FINDSRH0                TRY NEXT ONE
FINDSR6B EQU   *
         AH    4,0(4)                  + LENGTH REP
         LA    4,2(4)                  +2 CTL
         ST    4,SCANARG               IS THE NEXT ONE
         B     FINDSRH6
***********************************************************************
FINDSRHE EQU   *
         MVI   FINDSEND,X'FF'          END OF MEM
FINDSRH7 EQU   *
         CLC   ANDHITS,=AL2(0)         ANY HITS
         BE    FINDSRH0                   NO
         CLI   ANDON,0                 ANDING
         BE    FINDSRH8                   NO
         CLI   ANDFIND,X'FF'           COUNT FINDS
         BE    FINDSRH8                   NO
         CLC   ANDHITS,CARGS           ENOUGH HITS
         BL    FINDSRH0                   NO
FINDSRH8 EQU   *
         BAL   14,WRKREAD              RETRIEVE SAVED
         B     FINDSRH0                   END
         BAL   14,PRINTORG             ----ORIGINAL
         B     FINDSRH8                GET NEXT
***********************************************************************
FINDSRHX EQU   *
         L     14,FINDSR14
         BR    14                      ---DONE---EXIT
***********************************************************************
FINDSER1 EQU   *
         LA    1,UTILMSG1
         BAL   14,PRINTERR
         B     FINDSRHX
***********************************************************************
         EJECT
***********************************************************************
REPAR14  DC    A(0)
*                                                                     *
REPAGAIN EQU   *
         ST    14,REPAR14
REPLOOP  EQU   *
         BAL   14,SCANREP              EXAMINE THE INPUT TO ARGS
         B     REPERROR                ERROR
         B     REPDONE                 ALL DONE/NONE THIS RECORD
         MVI   CHANGE,X'FF'            INDICATE A CHANGE
         CLI   PRINTED,X'FF'           DID WE PRINT ORIGINAL YET
         BE    REPCOPY                    YES
         BAL   14,PRINTORG             ------ORIGINAL
         MVI   PRINTED,X'FF'           ORIGINAL HAS BEEN PRINTED
REPCOPY  MVC   ORIGINAL(71),COPY       NEW RECORD
         B     REPLOOP                 AND LOOK FOR MORE TO DO
***********************************************************************
REPDONE  EQU   *
         CLI   CHANGE,X'00'            ANY CHANGES
         BE    REPOUT                     NO
         BAL   14,PRINTREP             ------REPLACEMENT
REPOUT   EQU   *
         L     14,REPAR14
         BR    14                      ---DONE---EXIT
***********************************************************************
REPERROR EQU   *
* MAYBE PRINT ARG LATER                                               *
         L     14,REPAR14
         BR    14                      ---ERROR---EXIT
***********************************************************************
         EJECT
***********************************************************************
SCANR14  DC    A(0)
*                                                                     *
SCANREP  EQU   *
         ST    14,SCANR14
         MVI   SCANEXIT+3,0            INIT TO ERROR
*******************************
* LOOK FOR MATCH              *
*******************************
         BAL       14,SCANCARD         TRY TO MATCH IT
         B         SCANDONE            DONE/NONE
         MVC   COPY,COPY-1             BLANK
*******************************
*      MOVE FRONT             *
********************************
         MVC   REPMAX,REPSIZE          MAX # TO MOVE
         MVC       REPFROM,=A(ORIGINAL)          FROM ADDR
         MVC       REPTO,=A(COPY)      TO ADDR
         L         2,SCANHIT           HIT ADDRESS
         S         2,SCANADR           MINUS START
         STH       2,REPLNGTH          IS THE LNGTH
         BAL       14,REPCARD          COPY OLD FRONT
         B     REPERR1                 TOO LARGE (ONLY IF 80)
****************************
*  MOVE REPLACEMENT        *
****************************
         L         4,SCANARG           ADRESS CTL
         LA    4,CTLLNG(4)             +CTLLNG
         AH        4,0(4)              + LENGTH SEARCH
         LA        4,2(4)              + CTL=GEGIN REP
         MVC       REPLNGTH,0(4)       REP LENGTH
         LA        4,2(4)              + CTL
         ST        4,REPFROM           IS THE FROM ADDR
         AH    4,REPLNGTH              ADD THE LENGTH
         ST    4,SCANARG               AND POINT TO THE NEXT
         BAL       14,REPCARD          COPY REPLACEMENT
         B         REPERR1             -TOO LARGE
*******************************
*   MOVE TAIL IN              *
*******************************
         L     2,SCANEND               THE END +1
         S     2,SCANTAIL              =LENGTH +1
         BNP   TAILEXIT                NO TAIL
         L     3,SCANEND
         BCTR  3,0
TAILCHK  CLI   0(3),C' '               IS IS BLANK
         BNE   TAILEND
         BCTR  3,0
         BCT   2,TAILCHK
TAILEND  STH   2,REPLNGTH              LENGTH OF TAIL
         MVC   REPFROM,SCANTAIL        WHERE TAIL STARTS
         BAL   14,REPCARD              MOVE IT IN
         B     REPERR2                 -TAIL TOO BIG
TAILEXIT EQU   *
         MVI   SCANEXIT+3,8            INDICATE CHANGE
         B     SCANRTRN
*******************************
*   END OF ONE SEARCH CHK     *
*******************************
SCANDONE EQU   *
         MVI   SCANEXIT+3,4            SET TO DONE
SCANRTRN L     14,SCANR14
SCANEXIT B     0(14)
***********************************************************************
REPERR1  EQU   *
         LA    1,REPMSG1               REPLACEMENT TOO LARGE
         B     REPERRXT
REPERR2  EQU   *
         LA    1,REPMSG2               DATA OVERFLOW ON TAIL
         B     REPERRXT
REPERRXT EQU   *
         MVI   SCANEXIT+3,0            SET TO ERROR
         BAL   14,PRINTERR
         CLI   PRINTED,X'FF'           DID WE PRINT ORIGNAL YET
         BE    REPERRXU                   YES
         BAL   14,PRINTORG             ORIGINAL AS IS
REPERRXU EQU   *
         MVC   ORIGINAL(71),COPY
         LA    1,REPMSG3               HOW FAR WE GOT
         BAL   14,PRINTDAT
         B     SCANRTRN
***********************************************************************
         EJECT
*****************************************
*     SCAN CARD FOR MATCH TO A SEARCH ARG *
*****************************************
SCANARG  DC    A(0)                    WHAT TO LOOK FOR -UPDATED
SCANADR  DC    A(ORIGINAL)             SCAN START
SCANEND  DC    A(ORIGINAL+71)          SCAN END +1
SCANHIT  DC    A(0)                    WHERE HIT WAS
SCANTAIL DC    A(0)                    WHERE TAIL STARTS
SCANMAX  DC    AL2(71)                 MAX # COLUMNS TO CHK
         DC    C' '
CARDSEQ  DC    CL8' '                  CARD SEQ
         DC    X'00'
STARTWRK DC    XL4'00'                 START #
ENDWRK   DC    XL4'00'                 END #
SEQWRK   DC    XL4'00'                 CRD SEQ WRK
         DC    X'00'
***********************************
         DS    0H
SCANCARD EQU   *
         L     3,SCANADR               START SEARCH
         L     4,SCANARG               ARG ADDRSS
         CLC   CTLLNG(2,4),=AL2(0)     THE END
         BER   14                         YES
         AH    3,(CTLCOLST-CTLCTL)(4)       + COL START
         MVC   STARTWRK,(CTLSTART-CTLCTL)(4) START #
         MVC   ENDWRK,(CTLEND-CTLCTL)(4)     END #
*
         LH    2,SCANMAX               MAX BYTES SCAN
         SH    2,(CTLLNG1-CTLCTL)(4)   MINUS SEARCH LENGTH
         LA    2,1(2)                  +1 FOR BCT
         SH    2,(CTLCOLST-CTLCTL)(4)  MINUS START COLUMN
         BNP   SCANCRD2                L.E. 0
         CH    2,(CTLCOLNG-CTLCTL)(4)  LNG COLS
         BH    SCANCRD3                G.T
         B     SCANCRD4                L.E.
SCANCRD2 EQU   *
         LA    2,1
         B     SCANCRD4
SCANCRD3 EQU   *
         LH    2,(CTLCOLNG-CTLCTL)(4)
SCANCRD4 EQU   *
         LA    4,CTLLNG(4)             +CTLLNG
         CLI   STARTWRK,X'FF'          ANY #'S
         BE    SCANCRD6                   NO
         CLC   SEQWRK,STARTWRK         G.E. START
         BL    SCANNEXT                   NO
         CLC   SEQWRK,ENDWRK           L.E. END
         BH    SCANNEXT                   NO
SCANCRD6 EQU   *
         LH    5,0(4)                  LENGTH TO CHK
         BCTR  5,0
         STC   5,SCANCLC+1
         CLI   2(4),0                  FILL
         BNE   SCANCLC                    NO
         AH    4,0(4)                  + LENGTH DUMMY
         LA    4,2(4)                  +2 CTL
         B     SCANEQL                 SIMULATE HIT
*
**********************************************************
SCANCLC  CLC   0(3,3),2(4)             IS THIS EQUAL
         BE    SCANEQL                    YES
         LA    3,1(3)
         BCT   2,SCANCLC
********************************
* NO HIT-POINT TO NEXT SEARCH ARG *
***********************************
SCANNEXT EQU   *
         AH    4,0(4)                  + LENGTH CLC
         LA    4,2(4)                  +2 FOR CTL
         AH    4,0(4)                  + LENGTH THIS REP
         LA    4,2(4)                  +2 FOR CTL
         ST    4,SCANARG               IS NEXT ADDRESS OF CTL
         B     SCANCARD                DO SOME MORE
*********************************
*         HIT                   *
*********************************
SCANEQL  EQU   *
         ST    3,SCANHIT               WHERE HIT STARTS
         AH    3,0(4)                  + LENGTH
         ST    3,SCANTAIL              WHERE TAIL STARTS
         B     4(14)                   ---HIT---EXIT
***********************************
         EJECT
************************************
*  MOVE DATA FROM A FIELD TO A FIELD *
**************************************
REPFROM  DC    A(0)                    WHERE TO COPY FROM
REPTO    DC    A(0)                    WHERE TO COPY TO -UPDATED
REPLNGTH DC    AL2(0)                  LENGTH TO COPY
REPMAX   DC    AL2(71)                 MAX # AVAILABLE TO MOVE TO
REPSIZE  DC    H'71'
*
REPCARD  EQU   *
         L     3,REPFROM               FROM
         L     4,REPTO                 TO
         LH    2,REPMAX                # AVAILABLE
         SH    2,REPLNGTH              MINUS THIS MOVE
         BM    0(14)                   ---TOO MUCH---EXIT
         STH   2,REPMAX                NEW # AVAILABLE
         LH    2,REPLNGTH              LENGTH TO MOVE
         BCTR  2,0                     MACH
         LTR   2,2
         BM    4(14)                   ---NOTHING---EXIT
         STC   2,REPMVC+1
REPMVC   MVC   0(0,4),0(3)             MOVE
         AH    4,REPLNGTH              + MOVE LENGTH
         ST    4,REPTO                 =NEXT AVAIL TO ADDR
         B     4(14)                   ---MOVED---EXIT
*********************************
         EJECT
****************************************
* SCAN FIELD FOR DELIMITER             *
****************************************
PRMSTART DC    A(CTLCARD)              WHERE TO START SCAN
PRMHIT   DC    A(0)                    DELIMITER ADDRESS+1
PRMCHAR  DC    A(0)                    THE DELIM CHARACTER
PRMLNGTH DC    AL2(0)                  LENGTH OF HIT
PRMCOUNT DC    AL2(71)                 # COLUMNS TO CHK-DECREMENTED
*
PRMSCAN  EQU   *
         XC    PRMLNGTH,PRMLNGTH       CLEAR
         L     3,PRMSTART
         LH    5,PRMCOUNT              BYTES LEFT
         LTR   5,5
         BNP   0(14)                   ---NONE LEFT---EXIT
         BCTR  5,0
         STC   5,PRMTRT+1
         LA    1,1(5,3)                PREDICT END
PRMTRT   TRT   0(0,3),TRTTBL
         MVC   PRMCHAR+3(1),0(1)       DELIMITER
         LA    3,1(1)                  +1 AFTER DELIM
         ST    3,PRMHIT                SAVE
         S     1,PRMSTART              END-BEGIN=LENGTH
         SR    5,1                     DECR # LEFT
         STH   5,PRMCOUNT
         STH   1,PRMLNGTH              LENGTH FROM START TO END
         BM    0(14)                   ---PAST END---EXIT
         LTR   1,1
         BZ    4(14)                   ---ZERO LENGTH---EXIT
         B     8(14)                   ---OK---EXIT
*****************************************
         EJECT
***********************************************************************
PARMSR14 DC    A(0)
PARMADR  DC    A(0)
PARMSIZ  DC    AL2(0)
*                                                                     *
PARMS    EQU   *
         ST    14,PARMSR14
         MVC   CTLCARD,CTLCARD-1       CLEAR
         XC    TRTTBL,TRTTBL
         MVI   TRTTBL+C':',C':'        USE ':' AS DEBLOCKER FOR PARM
         MVC   PRMHIT,PARMADR
         MVC   PRMCOUNT,PARMSIZ        WHAT LEFT TO DO
PARMSLOP EQU   *
         MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     PARMSDON                -DONE
         B     PARMSLOP                -ZERO-JUST A DELIM
PARMSREC EQU       *
         MVC   PARMSIZ,PRMCOUNT        SAVE FOR RETURN BACK TO HERE
         MVC   PARMADR,PRMHIT          DITTO
         L     3,PRMSTART              BEGIN OF HIT
         LH    2,PRMLNGTH              LENGTH OF HIT
         BCTR  2,0
         STC   2,PARMSMVC+1
PARMSMVC MVC   CTLCARD+1,0(3)
         MVI   CTLCARD,C'-'
         L     14,PARMSR14
         BR    14                      ---GOT A PARM---EXIT
***********************************************************************
PARMSDON EQU   *
         CLC   PRMLNGTH,=AL2(0)
         BNE   PARMSREC
         MVI   PARMSAV,0
         L     14,PARMSR14
         B     4(14)                   ---DONE WITH PARM---EXIT
***********************************************************************
         EJECT
*********************************************************
CHKADR   DC    A(0)                    ARG TO COMPARE
CHKTBL   DC    A(0)                    TABLE TO SEARCH AGAINST
CHKLNGTH DC    AL2(0)                  LENGTH ARG
*                                                                     *
CHKTYPE  EQU   *
         SR    5,5
         L     3,CHKADR                ARG TO COMPARE
         L     4,CHKTBL                TABLE
         LH    2,CHKLNGTH              LENGTH
         BCTR  2,0
         STC   2,CHKCLC+1              LENGTH TO CHK
CHKCLC   CLC   0(0,3),2(4)
         BE    CHKHIT                  ---HIT----EXIT
         LA    5,4(5)                  BUMP EXIT OFFSET
         IC    2,1(4)                  +LENGTH
         AR    4,2
         LA    4,2(4)                  +2 CTL
         IC    2,1(4)
         LTR   2,2                     IS THIS END
         BZ    0(14)                   ----END--NOHIT---EXIT
         B     CHKCLC
*
CHKHIT   EQU   *
         SR    1,1
         IC    1,0(4)                  MIN LENGTH
         BCTR  1,0
         IC    2,CHKCLC+1
         CR    2,1                     GT MININUM
         BLR   14                      ---NOPE---NOT LONG ENOUGH
         B     4(5,14)                 ---HIT---EXIT
***********************************************************************
SETTRT   EQU   *
         XC    TRTTBL,TRTTBL
         MVI   TRTTBL+C' ',C' '        BLANK
         MVI   TRTTBL+C',',C','        COMMA
         MVI   TRTTBL+C'.',C'.'        PERIOD
         MVI   TRTTBL+C'(',C'('        LEFT PAREN
         MVI   TRTTBL+C')',C')'        RIGHT PAREN
         BR    14
***********************************************************************
         EJECT
***********************************************************************
GETINR14 DC    A(0)
*                                                                     *
GETSYSIN EQU   *
         ST    14,GETINR14
         LA    4,SYSIN
         TM    DCBOFLGS,X'10'          OPEN OK
         BZ    SYSINEND                   NO
         GET   SYSIN,CTLCARD
         L     14,GETINR14
CLICTRL  CLI   CTLCARD,C'-'
         BNE   4(14)                   NO ''
         B     8(14)                   ''
SYSINEND EQU   *
         MVI   EOF,X'FF'
         L     14,GETINR14
         BR    14
***********************************************************************
SETCTR14 DC    A(0)
*
SETCTL   EQU   *
         ST    14,SETCTR14
         BAL   14,SETTRT
         MVC   PRMCOUNT,=AL2(70)       70+1 COLUMNS TO CHK
         MVC   PRMSTART,=A(CTLCARD+1)  START IN CC2
         MVC   PRMHIT,PRMSTART
         L     14,SETCTR14
         BR    14
**********************************************************************
         DC    C' '
CARDNAME DC    CL8' '
GETNMR14 DC    A(0)
*
GETNAME  EQU   *
         ST    14,GETNMR14
         MVC   CARDNAME,CARDNAME-1
GETNAM2  MVC   PRMSTART,PRMHIT
         BAL   14,PRMSCAN
         B     GETNAM4                 DONE
         B     GETNAM2                 ZERO L
         LH    2,PRMLNGTH
         CH    2,=H'8'
         BH    GETNAM5                 TOO LONG
         L     4,PRMSTART
         BCTR  2,0
         STC   2,GETNMVC+1
GETNMVC  MVC   CARDNAME,0(4)
         L     14,GETNMR14
         B     8(14)                   ---A NAME ---EXIT
GETNAM4  L     14,GETNMR14
         BR    14                      ---DOEN---EXIT
GETNAM5  L     14,GETNMR14
         B     4(14)                   ---TOO LONG---EXIT
**********************************************************************
         EJECT
**********************************************************************
ACRDSEQ  DC    A(0)
AORGSEQ  DC    A(0)
ANEWSEQ  DC    A(0)
ACNEWSEQ DC    A(0)
*
SEQWOFF  DC    H'0'
SEQWLNG  DC    H'0'
SEQWINC  DC    H'0'
*
SEQOFSET DC    H'72'
SEQLNGTH DC    H'7'
SEQINCR  DC    H'10'
SEQCTL   DS    X
*
SETSEQ   DS    0H
         L     3,FINDADR
         MVC   SEQWOFF(6),SEQOFSET     DEFAULTS
         LA    4,SYSUT1
         TM    DCBRECFM,X'40'          VARIABLE
         BNO   SEQSET0                    NO
         CLC   SEQOFSET(4),=AL2(72,7)  IS IT DEFAULT
         BNE   SEQSET2                    NO
         MVC   SEQWOFF(4),=AL2(0,7)    ASSUME AT BEGINNG
         B     SEQSET2
SEQSET0  EQU   *
         CLC   LRECL,=AL2(80)          80 LRECL
         BE    SEQSET2                    YES
SEQSET1  EQU   *
         CLC   SEQOFSET(4),=AL2(72,7)  IS IT DEFAULT
         BNE   SEQSET2                   NO
         MVC   SEQWOFF(4),=AL2(80,7)
SEQSET2  EQU   *
         LA    3,L'EDITCTL-4-4(3)
         CLI   3(3),X'EE'              ME
         BNE   SEQSET3                    NO
         MVC   SEQCTL,7(3)             POST DIRECTORY CTL BYTE
         NI    SEQCTL,X'7F'            CLEAR ALIAS BIT
         CLI   SEQCTL,3                USER DATA LENGTH CHECK
         BNE   SEQSET3                 WRONG LENGTH -- NOT ME
         MVC   SEQWOFF+1(1),0(3)       OFFSET
         MVC   SEQWLNG+1(1),1(3)       LENGTH
         MVC   SEQWINC+1(1),2(3)       INCR
SEQSET3  EQU   *
         LH    1,SEQWINC
         CVD   1,DOUBLE
         ZAP   SEQINC,DOUBLE
         CLI   USERON,X'FF'            DO WE USE OURS
         BNE   SEQSET5                 NO
         MVC   STOWUSER(1),SEQWOFF+1
         MVC   STOWUSER+1(1),SEQWLNG+1
         MVC   STOWUSER+2(1),SEQWINC+1
         MVI   STOWUSER+3,X'EE'        MY TYPE
         LH    4,STOWUSER+4            LEVEL
         LA    4,1(4)
         STH   4,STOWUSER+4
         MVI   STOWCTL,X'03'           3 HALFS
*
SEQSET5  EQU   *
         CLC   SEQWOFF,=AL2(80)        EXTRNAL
         BL    SEQSET5B                   NO
         MVC   SEQWOFF,=AL2(256)
SEQSET5B EQU   *
         LA    5,ORIGINAL
         AH    5,SEQWOFF
         ST    5,AORGSEQ               ADDR OF MEM SEQ #
*
         LA    5,CARDSEQ+7
         SH    5,SEQWLNG
         ST    5,ACRDSEQ
*
         LA    5,CSEQUENC+7
         SH    5,SEQWLNG
         ST    5,ACNEWSEQ
*
         LA    5,NEWSEQ+7
         SH    5,SEQWLNG
         ST    5,ANEWSEQ
*
         MVC   WRKRDMVC+1(1),SEQWLNG+1
         MVC   WUT2MVC2+1(1),SEQWLNG+1
         MVC   WUT2MVC+1(1),SEQWLNG+1
         MVC   READMMVC+1(1),SEQWLNG+1
         MVC   CARDSEQ,CARDSEQ-1
         MVC   NEWSEQ,NEWSEQ-1
         ZAP   INTSEQ,=P'0'
         MVC   SCANEND,=A(ORIGINAL+71)
         MVC   REPSIZE,=AL2(71)
         MVI   REPCOPY+1,70            MOVE 70
         MVI   SCANMAX+1,71
         CLC   SEQWOFF,=AL2(80)        EXTERNAL
         BLR   14                         NO
         MVC   SCANEND,=A(ORIGINAL+80)
         MVC   REPSIZE,=AL2(80)
         MVI   REPCOPY+1,79            MOVE 80
         MVI   SCANMAX+1,80
         BR    14
**********************************************************************
         EJECT
**********************************************************************
BLDLR14  DC    A(0)
*
BLDL     EQU   *
         ST    14,BLDLR14
         MVC   FINDADR,=A(FINDMODL)
         MVI   DIRNAME,X'FF'
BLDLFIND EQU   *
         BAL   14,FINDMEM
         B     BLDLERR7                NOT FOUND
         B     BLDLALIS                ALIAS
BLDLFND  MVC   FINDUSER,DIRUSER
         L     14,BLDLR14
         B     4(14)                   ----- HIT ---EXIT
***********************************************************************
BLDLALIS EQU   *
         CLI   FINDTYPE,X'80'          ALIAS OK
         BE    BLDLFND                    YES
BLDLERR7 BAL   14,CTLERR7              NOT FOUND/ALIAS
         L     14,BLDLR14
         BR    14                      ----ERROR---EXIT
**********************************************************************
         EJECT
***********************************************************************
FINDADR  DC    A(0)
FINDMR14 DC    A(0)
FINDWRK1 DC    CL8' '
FINDWRK2 DC    CL8' '
*                                                                     *
FINDMEM  EQU   *
         ST    14,FINDMR14
         L     3,FINDADR
         LH    2,0(3)                  LENGTH
         BCTR  2,0
         STC   2,FINDCLC1+1
         STC   2,FINDCLC2+1
         MVC   FINDWRK1,DIRNAME
         NC    FINDWRK1,11(3)          MASK DIR
         MVC   FINDWRK2,2(3)
         NC    FINDWRK2,11(3)          MASK EDIT TBL
         CLI   DIRNAME,X'FF'           DO WE RESET
         BNE   FINDCLC1                   NO
         BAL   14,OPENDIR              RESET TO BEGIN
         B     FINDEND                 OPEN BAD
         B     FINDMLOP
FINDCLC1 CLC   FINDWRK1,FINDWRK2       ARE WE SITTING ON IT
         BE    FINDALIS                   YES
FINDMLOP BAL   14,READDIR              GET 1 DIRECTORY NAME
         B     FINDEND                 END OF DIR
         L     3,FINDADR
FINDCLC0 CLI   10(3),0                 FOR ALL.ALL
         BE    FINDALIS                   YES
         MVC   FINDWRK1,DIRNAME
         NC    FINDWRK1,11(3)          MASK DIR
FINDCLC2 CLC   FINDWRK1,FINDWRK2       IS THIS IT
         BH    FINDMXT                 NOT FOUND
         BNE   FINDMLOP                KEEP LOOKING
FINDALIS EQU   *
         MVC   L'EDITCTL-4(4,3),DIRTTR
         MVC   L'EDITCTL-4-4(4,3),DIRUSER
         TM    DIRCTL,X'80'            AN ALIAS
         BO    FINDAXT                    YES
         L     14,FINDMR14
         B     8(14)                   ---HIT---EXIT
***********************************************************************
FINDAXT  EQU   *
         L     14,FINDMR14
         B     4(14)                   ---ALIAS---EXIT
***********************************************************************
FINDEND  EQU   *
         MVI   DIRNAME,X'FF'           FORCE RESET
         L     3,FINDADR
         MVI   L'EDITCTL-4+3(3),0
         L     14,FINDMR14
         BR    14                      ---EOF---EXIT
FINDMXT  EQU   *
         CLC   11(8,3),=8X'FF'         MASKED
         BNE   FINDMLOP                   YES
         MVI   L'EDITCTL-4+3(3),0
         L     14,FINDMR14
         BR    14                      ---NOT FOUND---EXIT
***********************************************************************
         EJECT
***********************************************************************
RDDECB   DC    A(DIRDECB)
RDDCB    DC    A(FINDDCB)
RDBUFR   DC    A(DIRBLK)
DIRADR   DC    A(DIRBLK+2)             UPDATED TO CURR DIR ENTRY
READDR14 DC    A(0)
*                                                                     *
READDIR  EQU   *
         ST    14,READDR14
         CLC   DIRBYTES(4),=A(0)       ANY LEFT
         BNE   READDIR3                   YES
READDIR2 EQU   *
         LA    1,RDDECB
         BAL   14,RREAD
         AP    TOTBLOCK,=P'1'
         LA    3,DIRBLK+2
         ST    3,DIRADR                WHERE DIR DATA STARTS
         L     4,DIRBYTES
         SH    4,=AL2(2)
         ST    4,DIRBYTES
READDIR3 EQU   *
         L     3,DIRADR
         MVC   DIRREC,0(3)             DEBLOCK THIS MEMBER
         CLC   DIRNAME,=8X'FF'         IS THIS THE END
         BE    READDEOF                   YES
         SR    4,4
         IC    4,DIRCTL                GET LENGHT OF USER
         N     4,=XL4'1F'              TURN OFF NONLENGTH BITS
         XC    DIRUSER,DIRUSER
         LR    5,4
         SLL   5,1
         BCTR  5,0
         LTR   5,5
         BM    READDIR4
         STC   5,READDMVC+1
READDMVC MVC   DIRUSER,12(3)
READDIR4 EQU   *
         LA    4,12(4,4)               *2 HALF +12 ALWAYS
         L     5,DIRBYTES              BYTES IN DIRBLK
         SR    5,4                     SUBTRACT WHAT WE TOOK
         ST    5,DIRBYTES              AND THIS MANY LEFT
         LA    3,0(3,4)                NEXT DEBLOCK ADDRESS
         ST    3,DIRADR
         L     14,READDR14
         B     4(14)                   ---GOT A REC---EXIT
***********************************************************************
READDEOF EQU   *
         L     14,READDR14
         CLI   TOTSCAN,0
         BER   14                      ---EOF---EXIT
         ZAP   TOTUSED,TOTBLOCK
READDALL LA    1,RDDECB
         BAL   14,RREAD
         AP    TOTBLOCK,=P'1'
         B     READDALL
***********************************************************************
FINDEOF  EQU   *
         MVI   TOTSCAN,0
         CLOSE (FINDDCB),TYPE=T
         B     READDEOF
         EJECT
******************************************************************
OPENDR14 DC    A(0)
*                                                                     *
OPENDIR  EQU   *
         ST    14,OPENDR14
         XC    DIRBYTES(4),DIRBYTES
         ZAP   TOTBLOCK,=P'0'
         LA    4,FINDDCB
         TM    DCBOFLGS,X'10'          OPEN YET
         BO    OPENDPNT                   YES
         OPEN  (FINDDCB)
         TM    DCBOFLGS,X'10'          OPEN OK
         BO    OPENDPNT                YES
         L     14,OPENDR14
         BR    14                       ----ERROR---EXIT
OPENDPNT EQU   *
         POINT FINDDCB,POINTTR         POINT TO BEGINNING
         L     14,OPENDR14
         B     4(14)                    -----EXIT
***********************************************************************
         EJECT
***********************************************************************
MEMDECB  DC    A(UT1DECB)
MEMDCB   DC    A(SYSUT1)
MEMBUFR  DC    A(0)
MEMBLK   DC    A(0)
MEMBYTE  DC    A(0)
READMR14 DC    A(0)
*                                                                     *
READMEM  EQU   *
         ST    14,READMR14
READMEM1 EQU   *
         CLC   MEMBYTE,MEMBLK          READ ALL YET
         BL    READMEM2                   NO
         MVC   MEMBUFR,BUFPOOL
         LA    1,MEMDECB
         BAL   14,RREAD
         LA    4,SYSUT1
         LH    0,DCBBLKSI              LENGTH SUPPOSED TO BE
         L     1,DCBIOBA               IOB ADDRESS
         SH    0,22(1)                 MINUS RESIDUAL
         ST    0,MEMBLK
         XC    MEMBYTE,MEMBYTE
         TM    DCBRECFM,X'40'          VARIABLE
         BZ    READMEM2                   NO
         MVI   MEMBYTE+3,4             +4 BDW
READMEM2 EQU   *
         L     3,MEMBYTE               # BYTES READ
         L     4,MEMBUFR               START OF BUFR
         LA    4,0(3,4)                WHERE WE ARE
         ST    4,RECADR                SAVE FOR UPDATE
         TM    (SYSUT1+(DCBRECFM-IHADCB)),X'40' VARIABLE
         BZ    READMEM6                   NO
         LH    5,0(4)                  RDW
         SH    5,=AL2(4)
         STH   5,LRECL
         LA    4,4(4)
         LA    3,4(3)
         ST    4,RECADR
         MVC   ORIGINAL(256),ORIGINAL-1
READMEM6 EQU   *
         LH    5,LRECL
         BCTR  5,0
         STC   5,READVMVC+1
         STC   5,WRITMEMM+1
READVMVC MVC   ORIGINAL,0(4)           DEBLOCK
         AP    INTSEQ,SEQINC
         OI    INTSEQ+5,X'0F'
         UNPK  ORIGSEQ,INTSEQ          MY SEQ #
         L     4,ACRDSEQ               S WHERE CARD # IS
         L     5,AORGSEQ
READMMVC MVC   0(0,4),0(5)             MOVE SEQUENC IN
         PACK  SEQWRK(5),CARDSEQ(9)
         AH    3,LRECL                 +LRECL
         ST    3,MEMBYTE
READMEM3 EQU   *
         CLC   SEQWRK,FIRSTNUM         CAN WE START
         BL    READMEM1                   NO
         CLC   SEQWRK,LASTNUM          DO WE ENDDITT
         L     14,READMR14
         BNH   4(14)                   ---RECORD ---EXIT
         CLI   EDITON,0
         BE    READMEOF
         MVC   MEMBYTE,MEMBLK
         BAL   14,WRITEMEM
         B     READMEOF
***********************************************************************
READMEOF EQU   *
         MVC   MEMBYTE,MEMBLK
         L     14,READMR14
         BR    14                      ---EOF---EXIT
***********************************************************************
         EJECT
***********************************************************************
WRITMR14 DC    A(0)
*                                                                     *
WRITEMEM EQU   *
         ST    14,WRITMR14
         CLI   SCANON,X'FF'            SCAN ONLY
         BER   14                         YES
         CLI   FIRSTERR,X'FF'          DID WE ALREADY DO 1ST ERROR
         BER   14                         YES
         CLI   ERROR,X'00'             WAS THERE AN ERROR
         BE    WRITMEM2                   NO
         MVI   FIRSTERR,X'FF'          1ST ERROR PROCESSED
         B     WRITMEM4                UPDATE UP TILL NOW
***********************************************************************
WRITMEM2 EQU   *
         CLI   CHANGE,0                ANY CHANGES
         BE    WRITMEM3                   NO
         BAL   14,BACKUP               SAVE COPY OF OLD
         MVI   WRITEON,X'FF'           A CHANGE HAS OCCURRED IN BUFR
         L     3,RECADR                WHERE REC IS IN BUFR
WRITMEMM MVC   0(0,3),ORIGINAL         REPLACE
WRITMEM3 EQU   *
         CLC   MEMBYTE,MEMBLK          DONE WITH BUFFER
         BNE   WRITMEMX                    NO
WRITMEM4 EQU   *
         CLI   WRITEON,X'FF'           DID ANY CHANGES OCCUR
         BNE   WRITMEMX                   NO
         MVC   MEMBUFR,BUFPOOL
         LA    1,MEMDECB
         BAL   14,WWRITE
         MVI   WRITEON,0               BACK TO NOTHING
WRITMEMX EQU   *
         L     14,WRITMR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
BKDECB   DC    A(WRKDECB2)
BKDCB    DC    A(SYSWRK)
BKBUFR   DC    A(0)
BACKR14  DC    A(0)
*                                                                     *
BACKUP   EQU   *
         CLI   WRITEON,X'FF'           CHNAGE ALREADY BACKED
         BER   14                         YES
         CLI   WRKON,X'FF'             IS THERE A BACKUP
         BNER  14                         NO
         ST    14,BACKR14
         NOTE  SYSUT1                  -NOTE TTR
         L     3,BUFPOOLA
         ST    1,0(3)                  SAVE TTR IN FRONT OF BUFR
         MVC   BKBUFR,BUFPOOLA
         LA    1,BKDECB
         BAL   14,WWRITE               WRITE TTR-ORIG DATA
         MVI   BKUPON,X'FF'            INDICATE A BKUP EXISTS
         L     1,WRKNUM
         LA    1,1(1)
         ST    1,WRKNUM                # BLKS WRITTEN
         L     14,BACKR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
RSTDECB  DC    A(WRKDECB1)
RSTDCB   DC    A(SYSWRK)
BUFWRK   DC    A(0)
WRKNUM   DC    A(0)
POINTTR  DC    X'00000100'             POINT TO BEGIN
RESTOR14 DC    A(0)
*                                                                     *
RESTORE  EQU   *
         CLI   WRKON,X'FF'             IS THERE A DD
         BNER  14                         NO
         CLI   BKUPON,X'FF'            WAS THERE A BCKP REC
         BNER  14                          NO
         ST    14,RESTOR14
         CLI   ERROR,X'FF'             WAS THERE AN ERROR
         BNE   RESTEOF                    NO
         POINT SYSWRK,POINTTR          BACK TO BEGIN
         L     4,WRKNUM
***********************************************************************
RESTLOOP EQU   *
         ST    4,WRKNUM
         LA    1,RSTDECB
         BAL   14,RREAD
         L     3,BUFWRK
         MVC   BKUPTTR,0(3)            THE TTR
***********************************************************************
         LA    1,BKUPTTR
         BAL   14,FINDUT1              POSTION TO RIGHT SPOT
         MVC   MEMBUFR,BUFPOOL
         LA    1,MEMDECB
         BAL   14,RREAD                THE CHANGED DATA
***********************************************************************
         LA    2,UT1DECB
         L     3,BUFWRK
         LA    3,4(3)                  BUMP PAST TTR
         ST    3,MEMBUFR
         LA    1,MEMDECB
         BAL   14,WWRITE               RESTORE TO OROGINAL
         L     4,WRKNUM
         BCT   4,RESTLOOP
***********************************************************************
RESTEOF  EQU   *
         XC    WRKNUM,WRKNUM
         POINT SYSWRK,POINTTR          BACK TO BEGIN AGAIN
         MVI   BKUPON,0
         L     14,RESTOR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
WRKBUF   DC    A(0)
WRKADR   DC    A(0)
WRKFROM  DC    A(0)
WRKBYTES DC    A(0)
WRKSAVE  DC    A(0)
WRKSIZE  DC    A(100*80)                GOOD FOR 100 CARDS
*                                                                     *
WRKWRITE EQU   *
         L     3,WRKBYTES
         C     3,WRKSIZE
         BER   14                      STORAGE OVERFLOW
         L     4,WRKBUF
         LA    4,0(3,4)
         L     5,WRKFROM
         MVC   0(80,4),0(5)            SAVE
         LA    3,80(3)
         ST    3,WRKBYTES
         ST    3,WRKSAVE
         B     4(14)
***********************************************************************
WRKREAD  EQU   *
         L     4,WRKBYTES
         C     4,=A(0)
         BE    WRKREOF                    DONE
         L     3,WRKADR
         MVC   ORIGINAL,0(3)
         LA    3,80(3)
         ST    3,WRKADR
         SH    4,=AL2(80)
         ST    4,WRKBYTES
         L     4,ACRDSEQ
         L     5,AORGSEQ
WRKRDMVC MVC   0(0,4),0(5)
         PACK  SEQWRK(5),CARDSEQ(9)
         B     4(14)
***********************************************************************
WRKREOF  EQU   *
         MVC   WRKADR,WRKBUF           BACK TO BEGIN
         MVC   WRKBYTES,WRKSAVE        BYTES WE HAVE
         BR    14
***********************************************************************
WRKMR14  DC    A(0)
*                                                                     *
WRKMAIN  EQU   *
         MVC   WRKADR,WRKBUF
         XC    WRKBYTES,WRKBYTES
         CLC   WRKBUF,=A(0)            BUFFER GOTTEN
         BNER  14                        YES
         ST    14,WRKMR14
         L     0,WRKSIZE
         GETMAIN R,LV=(0)
         ST    1,WRKBUF
         ST    1,WRKADR
         L     14,WRKMR14
         BR    14
***********************************************************************
PSEQUENC DC    PL6'0'
         DC    C' '
NEWSEQ   DC    CL8' '
CSEQUENC DC    CL8'00000000'
         DC    C' '
SEQINC   DC    PL6'10'
INTSEQ   DC    PL6'0'
*
WUT2DECB DC    A(UT2DECB)
WUT2DCB  DC    A(SYSUT2)
WUT2BUFR DC    A(0)                    START BUFFR
WUT2BLK  DC    A(0)                    BLKSIZE
WUT2BYTE DC    A(0)                    # BYTES STORED
WUT2R14  DC    A(0)
WUT2FROM DC    A(0)                    FROM WHERE
*
WUT2NEW  EQU   *
         LA    5,CTLCARD
         B     WUT2
WUT2OLD  EQU   *
         LA    5,ORIGINAL
WUT2     EQU   *
         ST    5,WUT2FROM
         AP    PSEQUENC,SEQINC
         UNPK  CSEQUENC,PSEQUENC
         OI    CSEQUENC+7,X'F0'
         AH    5,SEQWOFF               + OFFSET
         L     4,ACNEWSEQ
WUT2MVC  MVC   0(0,5),0(4)             NEW SEQ
         L     5,ANEWSEQ
WUT2MVC2 MVC   0(0,5),0(4)             NEW   SEQ
         ST    14,WUT2R14
         CLC   WUT2BYTE,WUT2BLK        BLK FULL
         BL    WUT2C                      NO
         LA    1,WUT2DECB
         BAL   14,WWRITE
         XC    WUT2BYTE,WUT2BYTE
WUT2C    EQU   *
         L     3,WUT2BYTE              # BYTES OUT THERE
         L     4,WUT2BUFR              START
         LA    4,0(3,4)                WHERE NEXT 1 GPES
         L     5,WUT2FROM
         MVC   0(80,4),0(5)            BLK IT UP
         LA    3,80(3)                 + 80 MORE
         ST    3,WUT2BYTE
         L     14,WUT2R14
         BR    14
**********************************************************************
         EJECT
**********************************************************************
         USING  RWDSECT,5
RREADR14 DC    A(0)
RREAD    EQU   *
         ST    14,RREADR14
         LR    5,1
         LM    2,4,RWDECB
         READ  (2),SF,(3),(4),MF=E
         CHECK (2)
         L     14,RREADR14
         BR    14
**********************************************************************
WWRITR14 DC    A(0)
*
WWRITE   EQU   *
         ST    14,WWRITR14
         LR    5,1
         LM    2,4,RWDECB
         WRITE (2),SF,(3),(4),MF=E
         CHECK (2)
         L     14,WWRITR14
         BR    14
**********************************************************************
         EJECT
STOWLIST DS    0F
STOWNAME DC    CL8' '
STOWTTR  DC    XL3'00'                 FILLED IN BY SYST
STOWCTL  DC    X'00'
STOWUSER DC    XL62'00'
*
STOWMAX  DC    H'0'
*
STOWOLD  DC    CL8' '
STOWNEW  DC    CL8' '
STOWR14  DC    A(0)
*
STOW     EQU   *
         ST    14,STOWR14
         NI    STOWCTL,X'7F'           NOT ALIAS
         MVI   STOWMAX+1,9
STOW2    EQU   *
         STOW  SYSUT2,STOWLIST,R
STOWCC   EQU   *
         CVD   15,DOUBLE
         UNPK  STOWCODE(3),DOUBLE
         UNPK  STOWCODE(2),DOUBLE
         OI    STOWCODE+1,X'F0'
         CH    15,STOWMAX
         BL    STOWOK
         LA    1,STOWMSG1
         BAL   14,PRINTERR
STOWOK   EQU   *
         L     14,STOWR14
         BR    14
*********************************************************************
STOWR    EQU   *                       RENAME
         ST    14,STOWR14
         MVI   STOWMAX+1,1
         STOW  SYSUT1,STOWOLD,C
         B     STOWCC
STOWS    EQU   *                       SCRATCH
         ST    14,STOWR14
         MVI   STOWMAX+1,1
         STOW  SYSUT1,STOWNEW,D
         B     STOWCC
*********************************************************************
STOWA    EQU   *                       ALIAS
         ST    14,STOWR14
         OI    STOWCTL,X'80'
         MVI   STOWMAX+1,1
         STOW  SYSUT1,STOWLIST,A
         B     STOWCC
STOWC    EQU   *                       DONT ALLOW DUPLICATE
         ST    14,STOWR14
         MVI   STOWMAX+1,1
         NI    STOWCTL,X'7F'           NO ALIAS
         STOW  SYSUT2,STOWLIST,A
         B     STOWCC
**********************************************************************
         EJECT
***********************************************************************
EDWRK    DC    PL5'0'
EDPATRN  DC    X'40202020202120202020'
EDSEQ    DC    CL10' '
PRINTADR DC    A(0)
MSGADR   DC    A(0)
PRINTS1 DC    A(PRINTIT)
PRINTS2  DC    A(PRINTMSG)
PRINTR14 DC    A(0)
*                                                                     *
PRNTCTL0 EQU   *
         MVI   PRINTASA,C'0'
PRINTCTL EQU   *
         LA    1,MSG1                  CONTROL
         B     PRNTCARD
PRINTINS EQU   *
         LA    1,INSMSG
         MVC   INSLNAME(8),STOWNAME
         B     PRINTUP
PRINTFLS EQU   *
         LA    1,FLUSHMSG
         B     PRINTUP2
PRINTCOP EQU   *
         LA    1,COPYMSG
         MVC   COPYNAME(8),FINDNAME
         B     PRINTDAT
PRINTDEL EQU   *
         LA    1,DELMSG
         B     PRINTDAT
PRINTUP  EQU   *
         PACK  EDWRK,NEWSEQ            NEW SEQ #
         MVC   EDSEQ,EDPATRN
         ED    EDSEQ,EDWRK
         MVC   PRINTSEQ,EDSEQ+2
PRINTUP2 EQU   *
         MVC   PRINTADR,=A(CTLCARD)
         MVC   PRINTS1,=A(PRINTIT+OFFSET)
         MVC   PRINTS2,=A(PRINTMSG+OFFSET)
         B     PRINT
PRINTADD EQU   *
         LA    1,ADDMSG1
         MVC   ADDNAME(8),STOWNAME
         B     PRINTUP
PRNTCARD EQU   *
         MVC   PRINTADR,=A(CTLCARD)
         MVC   PRINTS1,=A(PRINTIT)     WHERE TO PRINT DATA
         MVC   PRINTS2,=A(PRINTMSG)    WHERE TO PRINT MSG
         B     PRINT
PRINTORG EQU   *
         LA    1,ORIGMSG
         B     PRINTDAT
PRINTREP EQU   *
         LA    1,REPMSG
         MVC   PRINTIT(8),ORIGNAM      NAME IN FRONT OF LIST
         B     PRINTDT2
PRINTDAT EQU   *
         LR    3,1
         TRT   CARDSEQ,TRTNUM
         LR    1,3                     RESTORE THE DESTROYED
         BNZ   PRINTDT2                IT NOT NUMBER
         OI    CARDSEQ+7,X'F0'
         PACK  EDWRK,CARDSEQ           ORIG SEQ #
         MVC   EDSEQ,EDPATRN
         ED    EDSEQ,EDWRK
         MVC   PRINTSEQ,EDSEQ+2
PRINTDT2 EQU   *
         MVC   PRINTS1,=A(PRINTIT+OFFSET)
         MVC   PRINTS2,=A(PRINTMSG+OFFSET)
         MVC   PRINTADR,=A(ORIGINAL)
         B     PRINT
PRINTMEM EQU   *
         CLI   LISTON,X'FF'            DO WE WANT TO LIST
         BNE   4(14)                   NO LISTING
         L     1,FINDADR
         LA    4,PRINTMSG+OFFSET
         MVC   0(8,4),2(1)             NAME
         MVC   PRNTMEM,2(1)
         CLI   ASIS,X'0F'              ANY OVERRIDE
         BL    PRINTDAT                   NO
         L     3,=A(ORIGINAL)
         BE    PRINTAS
         LA    3,1(3)
PRINTAS  EQU   *
         CLI   PRTALL,0                FORGET HEADINGS
         BE    PRINTALL                   NO
**************************************************************
         ST    14,PRINTR14
         MVC   PRINTASA(133),ORIGINAL
         PUT   SYSPRINT,PRINTASA
         MVC   PRINTASA(132),PRINTASA-1
         L     14,PRINTR14
         BR    14
**************************************************************
PRINTLIN EQU   *
         ST    14,PRINTR14
         B     PRINTPUT
PRINTERR EQU   *
         MVI   CTLERROR,X'FF'
         MVI   RETURNRC+3,8
PRNTSTAT EQU   *
         ST    14,PRINTR14
         MVC   PRINTS2,=A(PRINTMSG-50)
***********************************************************************
         B     PRINTMES
PRINTALL EQU   *
         ST    14,PRINTR14
         MVC   PRINTIT(132),0(3)
         B     PRINTPUT
PRINT    EQU   *
         ST    14,PRINTR14
         L     3,PRINTADR
         L     4,PRINTS1               WHERE TO PRINT DATA
         MVC   0(L'PRINTIT,4),0(3)
PRINTMES EQU   *
         ST    1,MSGADR                MSG ADDR
         L     3,MSGADR
         LH    2,0(3)
         BCTR  2,0                     LENGTH OF MSG
         STC   2,PRINTMVC+1
         L     4,PRINTS2               WHERE TO PRINT MSGS
PRINTMVC MVC   0(0,4),2(3)             THE MESSAGE
PRINTPUT BAL   14,SYSOUT
         MVC   PRINTASA(132),PRINTASA-1
         L     14,PRINTR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
PAGE     DC    PL3'0'
LINES    DC    PL4'99'
MAXLINES DC    PL4'60'
FILL     EQU   C'-'
*                                                                     *
SYSOR14  DC    A(0)
*                                                                     *
SYSOUT   EQU   *
         ST    14,SYSOR14
         CP    LINES,MAXLINES          IS THE PAGE FULL
         BL    SYSOUT2                    NO
         MVI   PRINTWRK,C'1'           NEW PAGE
         MVI   PRINTWRK+1,FILL
         MVC   PRINTWRK+2(L'PRINTWRK-2),PRINTWRK+1
         PUT   SYSPRINT,PRINTWRK       BOX1
         ZAP   LINES,=P'4'
         AP    PAGE,=P'1'
         MVC   PRNTPAGE,=XL6'402020202120'
         ED    PRNTPAGE,PAGE
         PUT   SYSPRINT,PRNTHDNG       HEADING
         LA    4,SYSUT2
         TM    DCBOFLGS,X'10'          OPEN
         BZ    SYSOUT1                    NO
         PUT   SYSPRINT,PRNTHNG2       SYSUT2
         AP    LINES,=P'1'
SYSOUT1  EQU   *
         MVI   PRINTWRK,C' '
         PUT   SYSPRINT,PRINTWRK       BOX2
         MVI   PRINTASA,C'0'
SYSOUT2  EQU   *
         PUT   SYSPRINT,PRINTASA
         AP    LINES,=P'1'             +1 TO LINE COUNT
         CLI   PRINTASA,C'0'
         BNE   SYSOUTXT
         AP    LINES,=P'1'
SYSOUTXT EQU   *
         L     14,SYSOR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
EXLSTUT2 DC    0F'0',X'05',AL3(DCBEXIT)
EXLSTUT1 DC    0F'0',X'87',AL3(JFCBAREA)
EXLSTPRT DC    0F'0',X'85',AL3(DCBEXIT)
*
JFCBAREA DC    CL176' '
         ORG   JFCBAREA
         IEFJFCBN
         ORG
*                                                                     *
DCBEXIT  EQU   *
         USING *,15
         DROP  4
         USING IHADCB,1
DCBEXIT2 OC    DCBBLKSI,DCBBLKSI       IS BLKSIZE ZERO
         BNZR  14                         NO
         MVC   DCBBLKSI,DCBLRECL       MAKE BLK=LRECL
         BR    14
         DROP  1,15
         USING IHADCB,4
***********************************************************************
         EJECT
***********************************************************************
OPENR14  DC    A(0)
*                                                                     *
OPENUT1  EQU   *
         ST    14,OPENR14
         MVC   ORIGINAL(256),ORIGINAL-1
         LA    4,SYSUT1
         TM    DCBOFLGS,X'10'          OPEN YET
         BZ    OPENUT1F                  NO-DO IT
         CLC   UT1TYPE,UT1OPTN         SAME
         BER   14                         YES
         CLI   UT1OPTN,4               ALREADY UPDAT
         BER   14                         YES
         BAL  14,CLOSEUT1              CLOSE OLD FIRST
OPENUT1F EQU   *
         LA    4,SYSUT1
         MVC   DCBDDNAM,UT1NAME
         LA    4,FINDDCB
         MVC   DCBDDNAM,UT1NAME
         MVC   UT1OPTN,UT1TYPE
         RDJFCB (SYSUT1)
         MVC   PRNTDSN,JFCBDSNM        -DSN
         MVC   PRNTVOL,JFCBVOLS        -VOLSER
         MVC   PRNTDD1,UT1NAME
         OPEN  (SYSUT1,,FINDDCB)
UT1OPTN  EQU   *-10
***********************************************************************
         LA    4,SYSUT1
         TM    DCBOFLGS,X'10'          OPEN OK
         BZ    OPEN1ER                    NO
         LH    0,DCBBLKSI              BLKSIZE
         AH    0,=AL2(4)               +4 FOR TTR
         GETMAIN R,LV=(0)              GET A BUFFER
         ST    1,BUFPOOLA
         LA    1,4(1)
         ST    1,BUFPOOL
***********************************************************************
         SR    3,3
         LH    3,DCBLRECL              LRECL
         CVD   3,DOUBLE
         UNPK  PRNTLREC,DOUBLE+4(4)
         OI    PRNTLREC+2,X'F0'
         LH    3,DCBBLKSI              BLKSIZE
         CVD   3,DOUBLE
         UNPK  PRNTBLK,DOUBLE+4(4)
         OI    PRNTBLK+4,X'F0'
         MVC   LRECL,=AL2(80)          DEFAULT TO 80
         OC    DCBLRECL,DCBLRECL
         BZ    OPENUT1B
         MVC   LRECL,DCBLRECL          NOT 0 USE DCB LRECL
OPENUT1B EQU   *
         LH    0,DCBBLKSI              SYSUT1 BLKSIZE
         AH    0,=AL2(4)               +4 FOR TTR
         LA    4,SYSWRK
         STH   0,DCBBLKSI              STORE IN SYSWRK
         BAL   14,OPENTIM
         CLI   DIRECTON,0              DIRECTORY WANTED
         BE    OPENUT1X                   NO
         BAL   14,DIRLIST
OPENUT1X EQU   *
         L     14,OPENR14
         BR    14
OPEN1ER  EQU   *
         LA    1,UT1ERR1
         MVC   UT1ERDD(8),UT1NAME
         BAL   14,PRINTERR
         B     OPENUT1X
***********************************************************************
OPEN2R14 DC    A(0)
OPENUT2  EQU   *
         ST    14,OPEN2R14
         LA    4,SYSUT2
         TM    DCBOFLGS,X'10'          OPEN
         BOR   14                        YES
         ZAP   LINES,MAXLINES
         RDJFCB (SYSUT2)
         MVC   PRNTDSN2,JFCBDSNM       -DSN
         MVC   PRNTVOL2,JFCBVOLS       -VOLSER
         MVC   PRNTDD2,UT2NAME
         OPEN  (SYSUT2,(OUTPUT))
         LA    4,SYSUT2
         TM    DCBOFLGS,X'10'
         BZ    OPEN2ERA
         TM    DCBRECFM,X'40'          VARIABLE
         BO    OPEN2ERB                   YES
*********************************************************************
         LH    0,DCBBLKSI              BLKSIZE
         ST    0,WUT2BLK
         GETMAIN R,LV=(0)
         ST    1,WUT2BUFR
         SR    3,3
         LH    3,DCBLRECL              -LRECL
         CVD   3,DOUBLE
         UNPK  PRNTLRC2,DOUBLE+4(4)
         OI    PRNTLRC2+2,X'F0'
         LH    3,DCBBLKSI              -BLKSIZE
         CVD   3,DOUBLE
         UNPK  PRNTBLK2,DOUBLE+4(4)
         OI    PRNTBLK2+4,X'F0'
         ST    3,WUT2BLK
OPENUT2X EQU   *
         L     14,OPEN2R14
         BR    14
*********************************************************************
OPEN2ERA EQU   *
         LA    1,UT1ERR1
         MVC   UT1ERDD(8),UT2NAME
         BAL   14,PRINTERR
         B     OPENUT2X
OPEN2ERB EQU   *
         LA    1,UT2ERR2
         BAL   14,PRINTERR
         B     OPENUT2X
         EJECT
***********************************************************************
OPENTR14 DC    A(0)
*                                                                     *
OPENTIM  EQU   *
         ST    14,OPENTR14
         TIME  DEC
         ST    1,FULL
         UNPK  YYDDD,FULL              YYDDD
         OI    YYDDD+4,X'F0'
         MVC   PRNTYY,YEAR
         MVC   PRNTDDD,DAY
         ST    0,FULL                  HHMMSSTH
         UNPK  HHMMSS,FULL
         MVC   PRNTHH,HOURS
         MVC   PRNTMM,MINUTES
         MVC   PRNTSS,SECONDS
         L     14,OPENTR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
OPENWR14 DC    A(0)
*                                                                     *
OPENWRK  EQU   *
         ST    14,OPENWR14
OPENWNOP NOPR  14                      BR IF OPEN FAIL
         LA    1,WRKPARM
         L     15,=V(DDFIND)
         BALR  14,15
         B     *+4(15)           CHECK RETURN CODE
         B     *+8                00 - SYSWRK PRESENT
         B     OPENWSET           04 - SYSWRK ABSENT - SKIP OPEN
         OPEN  (SYSWRK,(OUTIN))
OPENWSET EQU   *
         OI    OPENWNOP+1,X'F0'
         LA    4,SYSWRK
         TM    DCBOFLGS,X'10'          OPEN SUCCESSFUL
         BZ    OPENWRKX                   NO
         MVI   WRKON,X'FF'             WE HAVE A FILE
         NI    OPENWNOP+1,X'0F'
         LH    0,DCBBLKSI
         GETMAIN R,LV=(0)              GET A BUFFER
         ST    1,BUFWRK
OPENWRKX EQU   *
         L     14,OPENWR14
         BR    14
***********************************************************************
WRKPARM  DS    0F
WRKDD    DC    A(SYSWRK+(DCBDDNAM-IHADCB))
WRKUCB   DC    A(WORKTIOT)
WRKERR   DC    A(OPENWSET)
*
WORKTIOT DC    A(0)
**********************************************************************
         EJECT
***********************************************************************
CLOSER14 DC    A(0)
*                                                                     *
CLOSEUT1 EQU   *
         ST    14,CLOSER14
         LA    4,SYSUT1
         TM    DCBOFLGS,X'10'          DID WE OPEN YET
         BZR   14                         NO
         LH    0,DCBBLKSI
         L     1,BUFPOOLA
         FREEMAIN R,LV=(0),A=(1)       FREE OLD BUFFER
CLOSUT1B EQU   *
         CLOSE (SYSUT1,,FINDDCB)
         BAL   14,CLOSEWRK
         L     14,CLOSER14
         BR    14
***********************************************************************
CLOSEUT2 EQU   *
         ST    14,CLOSER14
         LA    4,SYSUT2
         TM    DCBOFLGS,X'10'          CLOSED
         BZR   14                         YES
         LH    0,DCBBLKSI
         L     1,WUT2BUFR
         FREEMAIN                      R,LV=(0),A=(1)
         CLOSE (SYSUT2)
         L     14,CLOSER14
         BR    14
**********************************************************
         EJECT
***********************************************************************
CLOSWR14 DC    A(0)
*                                                                     *
CLOSEWRK EQU   *
         ST    14,CLOSWR14
         LA    4,SYSWRK
         TM    DCBOFLGS,X'10'          DID WE OPEN
         BZR   14                         NO
         LH    0,DCBBLKSI
         L     1,BUFWRK
         FREEMAIN R,LV=(0),A=(1)
CLOSUT1C EQU   *
         CLOSE (SYSWRK)
         L     14,CLOSWR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
OPENPR14 DC    A(0)
*                                                                     *
OPENPNCH EQU   *
OPENPNOP NOPR  14
         ST    14,OPENPR14
         LA    4,SYSPUNCH
         TM    DCBOFLGS,X'10'          OPEN YET
         BO    OPENP8                     YES
         OPEN  (SYSPUNCH,(OUTPUT))
         TM    DCBOFLGS,X'10'          OPEN OK
         BO    OPENP8                     YES
         OI    OPENPNOP+1,X'F0'        ENABLE BR 14
         L     14,OPENPR14
         BR    14
***********************************************************************
OPENP8   EQU   *
         L     14,OPENPR14
         B     4(14)                   ---OPEN OK---EXIT
***********************************************************************
         EJECT
***********************************************************************
PNCHR14  DC    A(0)
*                                                                     *
PNCHMEM  EQU   *
         CLI   PUNCHON,X'FF'           DO WE PUNCH
         BNE   4(14)                      NO
         ST    14,PNCHR14
         PUT   SYSPUNCH,ORIGINAL
         L     14,PNCHR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
PARMSAV  DC    X'FF'
CTLSAV   DC    X'00'
ERRCTL   DS    0XL3
ERROR    DC    X'00'
PRMERROR DC    X'00'
CTLERROR DC    X'00'
CHANGE   DC    X'00'
EOF      DC    X'00'
UPDATA   DC    X'00'
STOWON   DC    X'00'
PRINTED  DC    X'00'
ALLCHK   DC    X'00'
SORT     DC    X'00'
ONCTL    DS    0CL8
LISTON   DC    X'00'
SEARCHON DC    X'00'
PUNCHON  DC    X'00'
ANDON    DC    X'00'
SCANON   DC    X'00'
FILLON   DC    X'00'
EDITON   DC    X'00'
REPON    DC    X'00'
*
ANDFIND  DC    X'00'
BKUPON   DC    X'00'
WRKON    DC    X'00'
OFFSET   EQU   10
SCANPARM DC    X'00'
WRITEON  DC    X'00'
FIRSTERR DC    X'00'
OPTNSAV  DC    X'00'
OPTNWRK  DC    X'00'
EJECTON  DC    X'00'
DIRECTON DC    X'00'
GLISTON  DC    X'00'
MASKON   DC    X'00'
USERON   DC    X'00'
ASIS     DC    X'00'
PRTALL   DC    X'00'
CARRIAGE DC    X'00'
*                                                                     *
ANDHITS  DC    H'0'
CARGS    DC    H'0'
UT1NAME  DC    CL8'SYSUT1'
UT1TYPE  DC    X'00'
UT2NAME  DC    CL8'SYSUT2'
BKUPTTR  DC    A(0)
         DS    0F
***********************************************************************
KEYWORD1 EQU   *
         DC    AL1(2,L'KEY19)
KEY19    DC    C'END'
         DC    AL1(2,L'KEY1A)
KEY1A    DC    C'EDIT'
         DC    AL1(1,L'KEY1B)
KEY1B    DC    C'CHANGE'
         DC    AL1(1,L'KEY1C)
KEY1C    DC    C'LIST'
         DC    AL1(1,L'KEY1D)
KEY1D    DC    C'PUNCH'
         DC    AL1(2,L'KEY1E)
KEY1E    DC    C'SCAN'
         DC    AL1(1,L'KEY1F)
KEY1F    DC    C'OPTION'
         DC    AL1(2,L'KEY1G)
KEY1G    DC    C'DIRECTORY'
         DC    AL1(2,L'KEY1H)
KEY1H    DC    C'UTILITY'
         DC    AL1(2,L'KEY1I)
KEY1I    DC    C'SEARCH'
         DC    AL1(3,L'KEY1J)
KEY1J    DC    C'FIND'
         DC    AL1(2,L'KEY1K)
KEY1K    DC    C'USAGE'
         DC    AL1(3,L'KEY1L)
KEY1L    DC    C'FILL'
KEYWORD3 EQU   *
         DC    AL1(3,L'KEY3AA)
KEY3AA   DC    C'INCLUDE'
         DC    AL1(3,L'KEY3AB)
KEY3AB   DC    C'RENAME'
         DC    AL1(2,L'KEY3AC)
KEY3AC   DC    C'COPY'
         DC    AL1(2,L'KEY3AD)
KEY3AD   DC    C'ALIAS'
         DC    AL1(2,L'KEY3AE)
KEY3AE   DC    C'SCRATCH'
         DC    AL1(4,L'KEY3AF)
KEY3AF   DC    C'REPLACE'
         DC    AL1(2,L'KEY3A)
KEY3A    DC    C'ADD'
         DC    AL1(2,L'KEY3B)
KEY3B    DC    C'UPDATE'
         DC    AL1(3,L'KEY3C)
KEY3C    DC    C'INS'
         DC    AL1(3,L'KEY3D)
KEY3D    DC    C'REP'
         DC    AL1(3,L'KEY3E)
KEY3E    DC    C'DEL'
         DC    AL2(0)
***********************************************************************
KEYWORD2 EQU   *
         DC    AL1(2,L'KEY2A)
KEY2A    DC    C'SCAN'
         DC    AL1(1,L'KEY2B)
KEY2B    DC    C'LIST'
         DC    AL1(1,L'KEY2C)
KEY2C    DC    C'DIRECTORY'
         DC    AL1(1,L'KEY2D)
KEY2D    DC    C'EJECT'
         DC    AL1(3,L'KEY2E)
KEY2E    DC    C'INDD'
         DC    AL1(3,L'KEY2F)
KEY2F    DC    C'LINES'
         DC    AL1(3,L'KEY2G)
KEY2G    DC    C'INCR'
         DC    AL1(1,L'KEY2H)
KEY2H    DC    C'NUM'
         DC    AL1(1,L'KEY2I)
KEY2I    DC    C'USER'
         DC    AL1(2,L'KEY2J)
KEY2J    DC    C'CONTROL'
         DC    AL1(2,L'KEY2K)
KEY2K    DC    C'STOWCLOSE'
         DC    AL1(1,L'KEY2L)
KEY2L    DC    C'ASIS'
         DC    AL1(1,L'KEY2M)
KEY2M    DC    C'FIND'
         DC    AL2(0)
***********************************************************************
         EJECT
***********************************************************************
MSG1     DC    AL2(L'CMSG1)
CMSG1    DC    C'---------CONTROL'
*                                                                     *
ORIGMSG  DC    AL2(L'ORIGL)
ORIGL    DC    C'-----------ORIGINAL          '
ORIGNAM  EQU   ORIGL+21
REPMSG   DC    AL2(L'REPL)
REPL     DC    C'REPLACEMENT********'
COPYMSG  DC    AL2(L'COPYL)
COPYL    DC    C'-INC FROM 12345678'
COPYNAME EQU   *-8
INSMSG   DC    AL2(L'INSL)
INSL     DC    C'INSERTED *** 12345678'
INSLNAME EQU   *-8
DELMSG   DC    AL2(L'DELL)
DELL     DC    C'----------- DELETED'
FLUSHMSG DC    AL2(L'FLUSHL)
FLUSHL   DC    C'* ERROR HAS OCCURRED -FLUSHED *'
**********************************************************************
SEQMSG2  DC    AL2(L'SEQER2)
SEQER2   DC    C'********** ERROR-INVALID SEQUENCE'
SEQMSG3  DC    AL2(L'SEQER3)
SEQER3   DC    C'********** ERROR-NOT NUMERIC'
UPMSG4   DC    AL2(L'UERR4)
UERR4    DC    C'********** ERROR-EOF 12345678=12345678'
UPM4SEQ  EQU   *-8
UPM4NAME EQU   *-17
UPMSG5   DC    AL2(L'UERR5)
UERR5    DC    C'********** ERROR INVALID SEQ=12345678'
UPM5SEQ  EQU   *-8
UPMSG8   DC    AL2(L'UERR8)
UERR8    DC    C'********** ERROR-NO DATA INSERTED'
**********************************************************************
OPTNMSG1 DC    AL2(L'OERR1)
OERR1    DC    C'********** ERROR-          -INVALID OPTION'
OPTNKEY  EQU   OERR1+17
*                                                                     *
INDEXMSG DC    AL2(L'INDEXL)
INDEXL   DC    C'MEMBER 12345678 TTR 123456 ALIAS '
INDEXNAM EQU   INDEXL+7
INDEXTTR EQU   INDEXL+20
INDEXALS EQU   INDEXL+27
*                                                                     *
USEMSG1  DC    AL2(L'USE1L)
USE1L    DC    C'12345678 12345 DIR BLKS ALLOC 12345 BLKS USED'
USE1DDNM EQU   USE1L
USE1ALOC EQU   USE1L+9
USE1USED EQU   USE1L+30
USEMSG2  DC    AL2(L'USE2L)
USE2L    DC    C'12345678 12345 TRKS ALLOC     12345 TRKS EMPTY'
USE2DDNM EQU   USE2L
USE2ALOC EQU   USE2L+9
USE2EMTY EQU   USE2L+30
USEMSG3  DC    AL2(L'USE3L)
USE3L    DC    C'12345678 12345 MEMBERS +      12345 ALIAS'
USE3DDNM EQU   USE3L
USE3MEMR EQU   USE3L+9
USE3MEMA EQU   USE3L+30
*
OKMSG    DC    AL2(L'OKMSG1)
OKMSG1   DC    C'***** ABOVE ACTION SUCCESSFUL *****'
BADMSG   DC    AL2(L'BADMSG1)
BADMSG1  DC    C'***** ABOVE ACTION FAILED *****'
ADDMSG1  DC    AL2(L'ADDMESS1)
ADDMESS1 DC    C'ADDED ****** 12345678'
ADDNAME  EQU   *-8
STOWMSG1 DC    AL2(L'STOWMES1)
STOWMES1 DC    C'********** ERROR-STOW FAILED-RC=  '
STOWCODE EQU   *-2
UT1ERR1  DC    AL2(L'UT1ERR1L)
UT1ERR1L DC    C'********** ERROR-OPEN FAILURE-12345678'
UT1ERDD  EQU   *-8
UT2ERR2  DC    AL2(L'UT2ERR2L)
UT2ERR2L DC    C'********** ERROR-RECFM=V NOT SUPPORTED(OUTPUT)'
**********************************************************************
PRMSG1   DC    AL2(L'PERR1)
PERR1    DC    C'********** ERROR-BLANK CARD ***'
PRMSG2   DC    AL2(L'PERR2)
PERR2    DC    C'********** ERROR-MISSING DELIMITER 2'
PRMSG3   DC    AL2(L'PERR3)
PERR3    DC    C'********** ERROR-FIRST ARG ZERO LENGTH'
PRMSG4   DC    AL2(L'PERR4)
PERR4    DC    C'********** ERROR-MISSING DELIMITER 3'
PRMSG5   DC    AL2(L'PERR5)
PERR5    DC    C'********** ERROR-CHAR AFTER LAST DELIM NOT BLANK'
***********************************************************************
REPMSG1  DC    AL2(L'RERR1)
RERR1    DC    C'********** ERROR-REPLACEMENT TOO LARGE'
REPMSG2  DC    AL2(L'RERR2)
RERR2    DC    C'********** ERROR-DATA OVERFLOW **********'
REPMSG3  DC    AL2(L'RERR3)
RERR3    DC    C'********** ERROR-POINT OF REP FAILURE'
***********************************************************************
UTILMSG1 DC    AL2(L'UERR1)
UERR1    DC    C'********** ERROR-UTILITY BUFFER SPACE EXCEEDED'
***********************************************************************
CTLMSG1  DC    AL2(L'CERR1)
CERR1    DC    C'********** ERROR-BLANK CARD'
CTLMSG2  DC    AL2(L'CERR2)
CERR2    DC    C'********** ERROR-UNRECOGNIZED KEYWORD'
CTLMSG3  DC    AL2(L'CERR3)
CERR3    DC    C'********** ERROR-NO MEMBER NAME'
CTLMSG4  DC    AL2(L'CERR4)
CERR4    DC    C'********** ERROR-NO CHANGE CARDS FOR PRIOR EDIT'
CTLMSG5  DC    AL2(L'CERR5)
CERR5    DC    C'********** ERROR-MISSING EDIT CARD'
CTLMSG6  DC     AL2(L'CERR6)
CERR6    DC     C'********** ERROR-NAME GT THAN 8 POSITIONS'
CTLMSG7  DC    AL2(L'CERR7)
CERR7    DC    C'********** ERROR MEMBERXX NOT FOUND'
CERR7NAM EQU   CERR7+17
CTLMSG8  DC    AL2(L'CERR8)
CERR8    DC    C'********** ERROR MEMBERXX IS AN ALIAS'
CERR8NAM EQU   CERR8+17
CTLMSG9  DC    AL2(L'CERR9)
CERR9    DC    C'********** ERROR-NOT VALID HERE'
***********************************************
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,                         X
               RECFM=FB,LRECL=80,EODAD=SYSINEND,EXLST=EXLSTPRT
*
SYSUT1   DCB   DDNAME=SYSUT1,MACRF=(R,W),DSORG=PO,                     X
               EODAD=READMEOF,EXLST=EXLSTUT1
FINDDCB  DCB   DDNAME=SYSUT1,MACRF=(RP),DSORG=PS,RECFM=F,              X
               BLKSIZE=256,LRECL=256,EODAD=FINDEOF
*
SYSUT2   DCB   DDNAME=SYSUT2,MACRF=(W),DSORG=PO,                       X
               EXLST=EXLSTUT2
*
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,                      X
               RECFM=FBA,LRECL=133,EXLST=EXLSTPRT
*
SYSPUNCH DCB   DDNAME=SYSPUNCH,DSORG=PS,MACRF=PM,                      X
               RECFM=FB,LRECL=80,EXLST=EXLSTPRT
SYSWRK   DCB   DDNAME=SYSWRK,DSORG=PS,MACRF=(RP,WP),                   X
               LRECL=80,RECFM=FB,EODAD=RESTEOF
*
         PRINT GEN
         READ  DIRDECB,SF,FINDDCB,MF=L
*
         READ  UT1DECB,SF,SYSUT1,MF=L
***********************************************
         READ  WRKDECB1,SF,SYSWRK,MF=L
         WRITE WRKDECB2,SF,SYSWRK,MF=L
*
         WRITE UT2DECB,SF,SYSUT2,MF=L
*
         DC    C' '
CTLCARD  DC    CL80' '
CTLSEQ   DC    CL8' '
*
*
         DC    C' '
ORIGINAL DC    CL80' '
         DC    CL(256-80)' '
ORIGSEQ  DC    CL8' '
         DC     C' '
COPY     DC     CL80' '
*                                                                     *
         DC    C' '
PRINTASA DC    C' '
PRINTSEQ DS    0CL8
PRINTIT  DC    CL80' '
         DC    CL2' '
PRINTMSG DC    CL50' '
*
DOUBLE   DS    0D
FULL     DC    A(0)
         DC    A(0)
*                                                                     *
YYDDD    DS    0CL5
YEAR     DC    CL2' '
DAY      DC    CL3' '
*                                                                     *
HHMMSS   DS    0CL7
HOURS    DC    CL2' '
MINUTES  DC    CL2' '
SECONDS  DC    CL2' '
         DC    C' '
*                                                                     *
         ORG   JFCBAREA
DSCB     DS    0CL148
PRINTWRK DS    CL133
         ORG
***********************************************************************
PRNTHDNG DC    CL133' '
         ORG   PRNTHDNG+1
PRNTDD1  DC    CL8' '
*
         ORG   PRNTHDNG+10
PRNTVOL  DC    CL6' '
         ORG   PRNTHDNG+17
PRNTLREC DC    CL3' '
         DC    C'/'
PRNTBLK  DC    CL5' '
         ORG   PRNTHDNG+28
PRNTDSN  DC    CL44'             PDSPDS'
         DC    CL2' '
PRNTYY   DC    CL2' '
         DC    C'.'
PRNTDDD  DC    CL3' '
         DC    C' - '
PRNTHH   DC    CL2' '
         DC    C'.'
PRNTMM   DC    CL2' '
         DC    C'.'
PRNTSS   DC    CL2' '
         DC    CL2' '
         DC    C'MEMBER '
PRNTMEM  DC    CL8' '
         ORG   PRNTHDNG+122
         DC    C' PAGE'
PRNTPAGE DC    CL6' '
         ORG
***********************************************************************
PRNTHNG2 DC    CL133' '
         ORG   PRNTHNG2+1
PRNTDD2  DC    CL8' '
         ORG   PRNTHNG2+10
PRNTVOL2 DC    CL6' '
         ORG   PRNTHNG2+17
PRNTLRC2 DC    CL3' '
         DC    C'/'
PRNTBLK2 DC    CL5' '
         ORG   PRNTHNG2+28
PRNTDSN2 DC    CL44' '
         ORG
*
         DS    0F
         DC    X'FF'
TRTTBL   DC    XL256'00'
*
TRTBL    DC    C'0123456789ABCDEF'
*
TRTNUM   DC    256AL1(*-TRTNUM)
         ORG   TRTNUM+C' '
         DC    X'00'
         ORG   TRTNUM+C'0'
         DC    10X'00'
         ORG
********************************************
         LTORG
****************************************
         DS    0F
EDITARG  DC     A(EDITCTL)
SCANBUF  DC    A(SCANCTL)
EDITBUF  DC    A(EDITCTL)
         DS    0F
DIRBYTES DC    AL2(0)                  REALLY 2 FROM NEXT LOC
DIRBLK   DC    256X'00'
***********************************************************************
DIRREC   DS    0CL12                   DEBLOCKER FOR DIRECTORY
DIRNAME  DC    XL8'FFFFFFFFFFFFFFFF'
DIRTTR   DC    XL3'00'
DIRCTL   DC    X'00'
DIRUSER  DC    XL62'00'
***********************************************************************
LRECL    DC    H'80'
RECADR   DC    A(0)                    REC ADDR IN BUFR FOR UPDATE
BUFPOOL  DC    A(0)                    WHERE BUFFER IS
*                                                                     *
BUFPOOLA DC    A(0)
*                                                                     *
***********************************************************************
***********************************************************************
*
EDITCTL  DC    20XL27'00'
*
***********************************************************************
***********************************************************************
*
         DS    0D
SCANCTL  DC    150XL80'00'
         ORG   SCANCTL
CTLCTL   DS    0CL14
CTLSTART DC    A(0)                    START #
CTLEND   DC    A(0)                    END #
CTLCOLST DC    AL2(0)                  COL START
CTLCOLNG DC    AL2(0)                  LENGTH COL
CTLLNG   EQU   *-CTLCTL
CTLLNG1  DC    AL2(0)
CTLLNG2  DC    AL2(0)
CTLDATA1 DC    X'00'
CTLDATA2 DC    X'00'
         ORG
RWDSECT  DSECT
RWDECB   DC    A(0)
RWDCB    DC    A(0)
RWBUFR   DC    A(0)
RWLNGTH  DC    A(0)
         PRINT NOGEN
         DCBD  DSORG=(PO,PS),DEVD=DA
         END
