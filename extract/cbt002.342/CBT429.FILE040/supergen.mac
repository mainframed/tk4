SUPERGEN CSECT
         PRINT NOGEN
         USING SUPERGEN,R15
         USING SEARCH,R5
         STM   R14,R12,12(R13)             SAVE REGS
         ST    R13,SAVEAREA+4
         LR    R12,R13
         CNOP  0,4
         BAL   R13,SPGENENT                PERFORM
SAVEAREA DC    18A(0)
BASES    DC    A(SAVEAREA+2*4096,SAVEAREA+4096)
         DROP  R15
         USING SAVEAREA,R13,R12,R11
         USING IHADCB,R4
         USING INBUF,R10
SPGENENT EQU   *
         ST    R13,8(R12)
*                                                                     *
         LM    R11,R12,BASES               RESTORE REGS
         ST    R1,PARMADR                  SAVE PARM ADDR
         L     R1,PARMADR
         L     R1,0(R1)                    PARM ADDR
         LH    R2,0(R1)                    LENGTH
         L     R4,=V(HEXDCB)
         MVC   DCBDDNAM,=CL8'SYSPRINT'
         LTR   R2,R2
         BZ    CONTROL
         BCTR  R2,0
         STC   R2,PARMMVC+1
         LA    R2,2(R2)
         STH   R2,PRMCOUNT
PARMMVC  MVC   CTLCARD,2(1)
         MVC   PRMHIT(4),=A(CTLCARD)
         B     CONTROL2
*                                                                     *
***********************************************************************
*                                                                     *
CONTROL  EQU   *
         BAL   R14,GETSYSIN                PERFORM
         B     CTLEOF                      EOF
CONTROL2 EQU   *
         MVC   PRINTREC(80),CTLCARD
         BAL   R14,LISTDATA                PERFORM
*                                                                     *
OPTION   EQU   *
         BAL   R14,SETTRT                  PERFORM
         MVC   PRMSTART(4),PRMHIT
         BAL   R14,PRMSCAN                 PERFORM
         B     CONTROL                     DONE
         B     OPTION                      ZERO
         MVC   CHKADR(4),PRMSTART
         MVC   CHKLNGTH(2),PRMLNGTH
         MVC   CHKTBL(4),=A(KEYWORD1)
*                                                                     *
         BAL   R14,CHKTYPE                 PERFORM
         B     INVALID
         B     EXIT3                       END
         B     CONTROL                     * COMMENT *
         B     OPTION2                     DUMP
         B     SOR                         OR
         B     SAND                        AND
         B     OPTION2                     KEEP
         B     OPTION2                     PUNCH
         B     OPTION2                     MOVE
         B     OPTION2                     SKIP
         B     OPTION2                     COUNT
         B     OPTION2                     VTOC
         B     OPTION2                     EXCP
         B     OPTION2                     SEARCH
         B     SCLEAR                      CLEAR
         B     OPTION2                     INDD
         B     OPTION2                     OUTDD
         B     SGO                         GO
         B     OPTION2                     BLKSIZE
         B     OPTION2                     CYL
         B     OPTION2                     HEAD
         B     OPTION2                     REC
         B     OPTION2                     CCHHR
         B     OPTION2                     TTR
         B     OPTION2                     DSN
         B     OPTION2                     EOF
         B     OPTION2                     DEB
         B     SINTRACT                    INTERACT
         B     OPTION2                     EROPT
OPTION2  EQU   *
         MVC   PRMSTART(4),PRMHIT
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     OPTION2
         MVC   VALUE(80),VALUECLR
         LH    R4,PRMLNGTH
         BCTR  R4,0
         STC   R4,VALMVC+1
         L     R3,PRMSTART
VALMVC   MVC   VALUE,0(3)
*                                                                     *
         BAL   R14,CHKTYPE                 PERFORM
         B     INVALID
         B     EXIT3                       END
         B     CONTROL                     * COMMENT *
         B     SLIST                       DUMP
         B     SOR                         OR
         B     SAND                        AND
         B     SKEEP                       KEEP
         B     SPUNCH                      PUNCH
         B     SMOVE                       MOVE
         B     SSKIP                       SKIP
         B     SCOUNT                      COUNT
         B     SVTOC                       VTOC
         B     SEXCP                       EXCP
         B     SSEARCH                     SEARCH
         B     SCLEAR                      CLEAR
         B     SINDD                       INDD
         B     SOUTDD                      OUTDD
         B     SGO                         GO
         B     SBLKSIZE                    BLKSIZE
         B     SCYCL                       CYL
         B     SHEAD                       HEAD
         B     SREC                        REC
         B     SCCHHR                      CCHHR
         B     STTR                        TTR
         B     SDSN                        DSN
         B     SEOF                        EOF
         B     SDEB                        DEB
         B     SINTRACT                    INTERACT
         B     SEROPT                      EROPT
***********************************************************************
         EJECT
***********************************************************************
SINTRACT LA    R4,SYSIN
         TM    48(R4),X'10'
         BO    OPTION
         MVI   NTRACTON,X'FF'
         B     OPTION
***********************************************************************
SEROPT   MVI   EROPT,X'04'
         CLC   VALUE(4),=C'SKIP'
         BE    OPTION
         MVI   EROPT,X'08'
         CLC   VALUE(6),=C'ACCEPT'
         BE    OPTION
         MVI   EROPT,X'00'
         CLC   VALUE(4),=C'STOP'
         BE    OPTION
         B     INVALID
***********************************************************************
SLIST    EQU   *
         MVI   DUMPALL,0
         MVI   LISTON,0
         CLI   VALUE,C'N'
         BE    OPTION
         MVI   LISTON,X'FF'
         MVC   HEXCHAR,=C'    '
         CLC   VALUE(2),=C'HC'
         BNE   SLIST1
         MVC   HEXCHAR,=C'HEXC'
SLIST1   CLC   VALUE(3),=CL3'ALL'
         BNE   OPTION
         OI    DUMPALL,X'FF'
         B     OPTION
***********************************************************************
SOR      EQU   *
         MVI   ANDOR,0
         B     OPTION
***********************************************************************
SAND     EQU   *
         MVI   ANDOR,X'FF'
         B     OPTION
***********************************************************************
SKEEP    EQU   *
         MVI   KEEPON,0
         CLI   VALUE,C'N'
         BE    OPTION
         MVI   KEEPON,X'FF'
         B     OPTION
***********************************************************************
SPUNCH   MVI   DUMPON,X'FF'
         MVI   SRCHSET+1,X'0C'
         B     DOSEARCH
***********************************************************************
SMOVE    MVI   SRCHSET+1,X'10'
         MVI   MOVEON,X'FF'
         B     DOSEARCH
***********************************************************************
SSKIP    EQU   *
         BAL   R14,PACK                    PERFORM
         B     NOTNUM
         ZAP   SKIPNUM,DOUBLE(8)
         B     OPTNSET
***********************************************************************
SCOUNT   EQU   *
         BAL   R14,PACK                    PERFORM
         B     NOTNUM
         ZAP   COUNTNUM,DOUBLE(8)
         B     OPTNSET
***********************************************************************
SVTOC    EQU   *
         BAL   R14,CLOSEUT1                PERFORM
         MVI   VTOC,0
         CLI   VALUE,C'N'
         BE    SEXCP3
         MVI   VTOC,X'FF'
         LA    R4,INDCB
         MVC   DCBBLKSI,=AL2(96)
         MVI   DCBKEYLE,44
*
         B     SEXCP3
***********************************************************************
SEXCP    EQU   *
         BAL   R14,CLOSEUT1                PERFORM
         MVI   VTOC,0
SEXCP3   EQU   *
         XC    NEXTCCHH(5),NEXTCCHH
         XC    EXCPTTR(4),EXCPTTR          RESET TO SCRATCH
         LA    R4,INDCB
         IC    R2,DCBKEYLE                 THE KEY
         LH    R3,DCBBLKSI                 SAVE ANY PREVIOUS BLKSIZE
         MVC   INDCB(LMODEL),MODELDCB
         MVI   EXCP,0
         CLI   VALUE,C'N'
         BE    SEXCP6
         MVC   INDCB(LEXCPDCB),EXCPDCB
         MVI   EXCP,X'FF'
         MVI   DCBRECFM,X'C0'              PRETENT U
SEXCP6   EQU   *
         STC   R2,DCBKEYLE
         STH   R3,DCBBLKSI                 AND SAVE AGAIN
         STH   R3,DCBLRECL
         B     OPTION
***********************************************************************
SSEARCH  MVI   SRCHSET+1,X'00'
DOSEARCH BAL   R14,SRCHGETM                GET STORAGE
         L     R5,SRCHADR
         XC    SRCHOFF,SRCHOFF
         MVC   SRCHRNGE,=XL2'7FFF'
         MVI   SRCHFUNC,EQ
SRCHSET  MVI   SRCHOPTN,0
         MVI   WORKFUNC,EQ
         BAL   R14,PACK                    PERFORM
         B     SRCHOP1B
         BCTR  R1,0
         L     R5,SRCHADR
         STH   R1,SRCHOFF
         MVC   SRCHRNGE,=AL2(1)            DEFAULT 1 TIME
*                                                                     *
SRCHOP1  EQU   *
         MVC   PRMSTART(4),PRMHIT
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     SRCHOP1
         L     R3,PRMSTART
         MVC   VALUE(80),0(R3)
         BAL   R14,PACK                    PERFORM
         B     SRCHOP1B
         L     R5,SRCHADR
         SH    R1,SRCHOFF
         BNP   NOTSIZ
         STH   R1,SRCHRNGE
SRCHOP2  EQU   *
         MVC   PRMSTART(4),PRMHIT
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     SRCHOP2
SRCHOP1B EQU   *
         MVC   CHKADR(4),PRMSTART
         MVC   CHKLNGTH(2),PRMLNGTH
         MVC   CHKTBL(4),=A(KEYWORD2)
         BAL   R14,CHKTYPE                 PERFORM
         B     SNOHIT
         B     SEQ                         EQ
         B     SNE                         NE
         B     SLT                         LT
         B     SGT                         GT
         B     SLE                         LE
         B     SGE                         GE
         B     SRCHOP4A                    'X'
         B     SRCHOP4A                    'C'
         B     SSTOP                       STOP
         B     SSKIPF                      SKIP
***********************************************************************
SNOHIT   CLI   SRCHSET+1,X'10'
         BNE   INVALID
         L     R3,PRMSTART
         MVC   VALUE(80),0(R3)
         BAL   R14,PACK                    PERFORM
         B     SRCHOP4A
         BCTR  R1,0
         L     R5,SRCHADR
         STH   R1,SRCHDATA
         MVC   SRCHLNG,=X'0002'
         LA    R5,10(R5)
         B     SRCHEXIT
SEQ      EQU   *
         MVI   WORKFUNC,EQ
         B     SRCHOP3A
SNE      EQU   *
         MVI   WORKFUNC,NE
         B     SRCHOP3A
SLT      EQU   *
         MVI   WORKFUNC,LT
         B     SRCHOP3A
SGT      EQU   *
         MVI   WORKFUNC,GT
         B     SRCHOP3A
SLE      EQU   *
         MVI   WORKFUNC,LE
         B     SRCHOP3A
SGE      EQU   *
         MVI   WORKFUNC,GE
         B     SRCHOP3A
SRCHOP3A EQU   *
         L     R5,SRCHADR
         MVC   SRCHFUNC,WORKFUNC
         MVC   PRMSTART(4),PRMHIT
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     SRCHOP3A
         MVC   CHKADR(4),PRMSTART
         MVC   CHKLNGTH(2),PRMLNGTH
         MVC   CHKTBL(4),=A(KEYWORD3)
         BAL   R14,CHKTYPE                 PERFORM
         B     INVALID
         B     SRCHOP4A                    HEX
         B     SRCHOP4A                    CHAR
         B     SSTOP
         B     SSKIPF                      SKIP
SSTOP    EQU   *
         L     R5,SRCHADR
         MVI   SRCHOPTN,X'04'
         MVI   STOPON,X'FF'
         B     SRCHOP4
***********************************************************************
SSKIPF   EQU   *
         L     R5,SRCHADR
         MVI   SRCHOPTN,X'08'
         MVI   SKIPON,X'FF'
         B     SRCHOP4
***********************************************************************
SRCHOP4  EQU   *
         MVC   PRMSTART(4),PRMHIT          LOOK FOR C,X
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     SRCHOP4
*                                                                     *
SRCHOP4A EQU   *
         L     R5,SRCHADR
         CLI   SRCHOPTN,X'00'
         BNE   SRCHOP4B
         MVI   SEARCHON,X'FF'
SRCHOP4B XC    TRTTBL(256),TRTTBL
         SR    R2,R2
         IC    R2,PRMCHAR+3                THE DELIMITER
         LA    R3,TRTTBL(2)
         STC   R2,0(R3)                    THIS WILL NOW DELIMIT
*                                                                     *
         CLI   SRCHSET+1,X'10'
         BNE   SRCHOP4C
         MVI   SRCHOPTN,X'14'
SRCHOP4C L     R3,PRMSTART
         CLI   0(R3),C'C'                  CHAR
         BE    SRCHOP4D                      YES
         CLI   0(R3),C'X'                  HEX
         BNE   INVALID                        NO
         MVC   PRMSTART(4),PRMHIT          GET SEARCH ARG HEX
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     INVALID
         L     R3,PRMSTART
         LH    R4,PRMLNGTH
         LR    R5,R4
         BCTR  R5,0
         STC   R5,SRCHTR+1
SRCHTR   TR    0(0,3),HEXTBL
         SRL   R4,1
         LTR   R4,R4
         BZ    INVALID
         L     R5,SRCHADR
         STH   R4,SRCHLNG
SRCHHEX  PACK  SRCHDATA(2),0(3,R3)
         LA    R3,2(R3)
         LA    R5,1(R5)
         BCT   R4,SRCHHEX
         LA    R5,SRCHCTL(R5)
         B     SRCHEXIT
*                                                                     *
SRCHOP4D EQU   *
         MVC   PRMSTART(4),PRMHIT          GET SEARCH ARG CHAR
         BAL   R14,PRMSCAN                 PERFORM
         B     INVALID
         B     INVALID
         L     R3,PRMSTART
         LH    R4,PRMLNGTH
         L     R5,SRCHADR
         STH   R4,SRCHLNG
         BCTR  R4,0
         STC   R4,SRCHMVC+1
SRCHMVC  MVC   SRCHDATA,0(3)
         LA    R5,SRCHCTL+1(R4,R5)
SRCHEXIT EQU   *
         ST    R5,SRCHADR
         XC    SRCHOFF(SRCHCTL),SRCHOFF
         NI    SELCTNOP+1,X'0F'
         B     OPTNSET
***********************************************************************
SCLEAR   EQU   *
         BAL   R14,CLOSEUT1                PERFORM
         MVC   INDCB(LMODEL),MODELDCB
         MVI   VTOC,0
         MVI   EXCP,0
         MVI   DUMPALL,0
         MVI   SKIPCTL,0
         MVI   OPN1MVI2+1,X'20'
         XC    NEXTCCHH(5),NEXTCCHH        ONLY IF RESET WILL IT CLEAR
         XC    EXCPTTR(4),EXCPTTR
         MVI   KEEPON,0
SRESET2  EQU   *
         ZAP   OUTCOUNT,=P'0'
         ZAP   SKIPNUM,=P'0'
         CLI   KEEPON,X'FF'                DO WE KEEP THE FIRST
         BE    OPTION
         MVI   SKIPON,0
         MVI   STOPON,0
         MVI   DUMPON,0
         MVI   MOVEON,0
         MVI   SEARCHON,0
         MVI   ANDOR,0
         ZAP   COUNTNUM,=P'99999999'
         BAL   R14,SRCHFREM                PERFORM
         OI    SELCTNOP+1,X'F0'
         B     OPTION
***********************************************************************
SINDD    EQU   *
         BAL   R14,CLOSEUT1                PERFORM
         MVC   UT1NAME(8),VALUE
         LA    R1,UT1NAME
         BAL   R14,DDFIND                  PERFORM
         B     SINDDER
         B     OPTION
SINDDER  EQU   *
         LA    R1,DDERR
         BAL   R14,WTORTN                  PERFORM
         B     OPTION
***********************************************************************
SOUTDD   EQU   *
         BAL   R14,CLOSEUT2                PERFORM
         CLI   VALUE,C'N'
         BNE   SOUTDD2
         MVI   OUTON,0
         B     OPTION
SOUTDD2  EQU   *
         MVC   UT2NAME(8),VALUE
         LA    R1,UT2NAME
         BAL   R14,DDFIND                  PERFORM
         B     SOUTDDER
         MVI   OUTON,X'FF'
         B     OPTION
SOUTDDER EQU   *
         LA    R1,DDERR
         BAL   R14,WTORTN                  PERFORM
         B     OPTION
*                                                                     *
***********************************************************************
SBLKSIZE EQU   *
         BAL   R14,CLOSEUT1                PERFORM
         BAL   R14,PACK                    PERFORM
         B     INVALID
         LA    R4,INDCB
         STH   R1,DCBLRECL
         STH   R1,DCBBLKSI
         MVI   DCBRECFM,X'C0'              SET TO 'U'
         B     OPTION
***********************************************************************
SCYCL    EQU   *
         TR    VALUE(80),HEXTBL
         LH    R3,PRMLNGTH
         EX    R3,SEEKPAK
         MVC   NEXTCCHH(2),WORKCCHH+6
         B     OPTION
***********************************************************************
SHEAD    EQU   *
         TR    VALUE(80),HEXTBL
         LH    R3,PRMLNGTH
         EX    R3,SEEKPAK
         MVC   NEXTCCHH+2(2),WORKCCHH+6
         B     OPTION
***********************************************************************
SREC     EQU   *
         TR    VALUE(80),HEXTBL
         LH    R3,PRMLNGTH
         EX    R3,SEEKPAK
         MVC   NEXTCCHH+4(1),WORKCCHH+7
         B     OPTION
***********************************************************************
SCCHHR   EQU   *
         TR    VALUE(80),HEXTBL
         PACK  WORKCCHH(6),VALUE(11)
         MVC   NEXTCCHH(5),WORKCCHH
         LA    R4,INDCB
         TM    DCBOFLGS,X'10'              OPEN YET
         BZ    OPTION                         NO
         BAL   R14,EXTENTS                 CHK IT OUT
         B     OPTION                      ITS A BADDY
         B     SCCHHTTR
***********************************************************************
STTR     EQU   *
         XC    NEXTCCHH(5),NEXTCCHH        CANT DO CCHHR NOW
         TR    VALUE(80),HEXTBL
         LH    R3,PRMLNGTH
         EX    R3,SEEKPAK
         MVC   EXCPTTR(3),WORKCCHH+5
         MVI   EXCPTTR+3,0
         LA    R4,INDCB
         TM    DCBOFLGS,X'10'              OPEN YET
         BZ    OPTION                         NO
         BAL   R14,CNVTTTR                 PERFORM
         B     OPTION                      ITS A BADDY
         B     SCCHHTTR
SCCHHTTR EQU   *
         SR    R2,R2
         IC    R2,NEXTCCHH+4               THE RECORD
         LTR   R2,R2                       IS IT ZERO
         BZ    OPTION                         YES
         BCTR  R2,0                        REVISE
         STC   R2,NEXTCCHH+4
         B     OPTION
***********************************************************************
SDSN     EQU   *
         BAL   R14,CLOSEUT1                PERFORM
         XC    NEXTCCHH(5),NEXTCCHH
         XC    EXCPTTR(4),EXCPTTR
         MVC   WORKDSN,VALUE               THE DSN
         B     OPTION
***********************************************************************
SEOF     EQU   *
         MVI   OPN1MVI2+1,X'20'
         CLI   VALUE,C'N'
         BE    OPTION
         MVI   OPN1MVI2+1,X'60'
         B     OPTION
***********************************************************************
SDEB     EQU   *
         MVI   DEBON,0
         CLI   VALUE,C'N'
         BE    OPTION
         MVI   DEBON,X'FF'
         B     OPTION
OPTNSET  EQU   *
         B     OPTION
***********************************************************************
SEEKPAK  PACK  WORKCCHH(9),VALUE(0)
***********************************************************************
***********************************************************************
         EJECT
***********************************************************************
CTLEOF   EQU   *
         CLI   GO,0                        DID WE GO YET
         BNE   EXIT3                          YES WE DID
         MVI   EOF,X'FF'
         B     DOIT
***********************************************************************
SGO      EQU   *
         CLI   NTRACTON,X'00'
         BE    DOIT
         BAL   R14,FRSTPRMP                PERFORM
DOIT     MVC   SKIPCTL,SKIPON
         MVC   STOPCTL,STOPON
         MVC   DUMPCTL,DUMPON
         MVC   MOVECTL,MOVEON
         MVI   GO,X'FF'
         BAL   R14,OPENUT1                 PERFORM
         B     EXIT2
         AP    SKIPNUM,RECOUNT             CATCH UP IF NEEDED
         CLI   OUTON,0                     ANY OUTPUT
         BE    READDSN                         NO
*                                                                     *
         BAL   R14,OPENUT2                 PERFORM
         B     OUTOFF
         BAL   R14,PUNCHER                 PERFORM
         B     READDSN
         BAL   R14,DSNPUT                  PERFORM
         B     EOFDATA
         B     READDSN
OUTOFF   MVI   OUTON,0                     DISABLE OUTPUT
         MVI   MOVEON,0
***********************************************************************
*        BEGIN HERE                                                   *
***********************************************************************
READDSN  EQU   *
         CP    OUTCOUNT,COUNTNUM           ENOUGH OUTPUT
         BNL   EOFDATA                         YES
*                                                                     *
         BAL   R14,TESTPRMP                PERFORM
         B     EOFDATA
*                                                                     *
         BAL   R14,DSNGET                  PERFORM
         B     EOFDATA                     EOF OR IOERR
         CP    RECOUNT,SKIPNUM          ENOUGH SKIPPED
         BNH   READDSN                        NO
*                                                                     *
         BAL   R14,SKIPFIND                PERFORM
         B     READDSN                     NOT THERE YET
*                                                                     *
         BAL   R14,CHKSERCH                CHK CRITERIA
         B     READDSN                       NO MATCH
         BAL   R14,LISTHEX2                PERFORM
         BAL   R14,MOVER                   PERFORM
         BAL   R14,DSNPUT                  PERFORM
         B     EOFDATA
*                                                                     *
         AP    OUTCOUNT,=P'1'              +1 TO OUTPUT REC COUNT
         BAL   R14,LISTRTN                 LISTING ONLY
         B     EOFDATA
         B     READDSN
***********************************************************************
         EJECT
***********************************************************************
REALEOF  EQU   *
         MVI   INEOF,X'FF'             THIS IS THE END REALLY
***********************************************************************
*                                                                     *
*        EOF        EOF      EOF     EOF                              *
*        GOES TO HERE.                                                *
*                                                                     *
***********************************************************************
EOFDATA  DS    0H
         OI    RECOUNT+L'RECOUNT-1,X'0F'
         UNPK  CTAPEREC(10),RECOUNT
         LA    R1,CTAPECNT
         BAL   R14,WTORTN                  PERFORM
         OI    OUTCOUNT+L'OUTCOUNT-1,X'0F'
         UNPK  COUTREC(6),OUTCOUNT
         LA    R1,COUTCNT
         BAL   R14,WTORTN                  PERFORM
EXIT     EQU   *
EXIT2    EQU   *
         CLI   INEOF,0                     REAL EOF
         BE    EXIT2B                         NO
         BAL   R14,CLOSEUT1                PERFORM
EXIT2B   EQU   *
         CLI   EOF,0                       IS IT REALLY EOF
         BE    SRESET2                        NOT YET
***********************************************************************
EXIT3    EQU   *
         BAL   R14,CLOSEUT2                PERFORM
         MVC   FUNCTION,=CL4'CLOSE'
         BAL   R14,HEXDUMP                 PERFORM
         LA    R4,SYSIN
         TM    DCBOFLGS,X'10'              OPEN OK
         BZ    EXIT6                          NO
         CLOSE (SYSIN)
         FREEPOOL SYSIN
EXIT6    EQU   *
         BAL   R14,SRCHFREM            FREE THE SRCH BLK
         L     R13,SAVEAREA+4          BACK CHAIN TO CALLERS SAVE AREA
         LM    R14,R12,12(R13)         RESTORE CALLERS REGS
RETURNRC LA    R15,0                   SET RETURN CODE
         BR    R14                     RETURN TO CALLER
***********************************************************************
         EJECT
***********************************************************************
NOTSIZ   LA    R1,SIZERR
         BAL   R14,WTORTN                  PERFORM
         B     MOREBAD
*                                                                     *
NOTNUM   EQU   *
         LA    R1,NUMERR
         BAL   R14,WTORTN                  PERFORM
         B     MOREBAD
*                                                                     *
INVALID  EQU   *
         LA    R1,OPTNERR
         BAL   R14,WTORTN                  PERFORM
*                                                                     *
MOREBAD  MVI   BADKEY,C' '
         MVC   BADKEY+1(L'BADKEY-1),BADKEY
         L     R3,PRMSTART
         LH    R4,PRMLNGTH
         BCTR  R4,0
         LTR   R4,R4
         BM    INBAD
         STC   R4,INMVC+1
INMVC    MVC   BADKEY,0(3)
         LA    R1,BADKEY
         BAL   R14,WTORTN                  PERFORM
INBAD    CLI   TRACE,X'00'
         BE    OPTION
         MVC   FUNCTION,=CL4'RELO'
         MVC   DUMPSTRT(4),=A(SUPERGEN)
         MVC   DUMPEND(4),=A(PATCHERA)
         BAL   R14,HEXDUMP                 PERFORM
         B     OPTION
         B     OPTION
***********************************************************************
WTOR14   DC    A(0)
*                                                                     *
WTORTN   ST    R14,WTOR14
         SR    R2,R2
         SH    R1,=H'2'
         IC    R2,1(R1)                    LENGTH OF MSG
         STH   R2,WTOBLKL
         BCTR  R2,0
         STC   R2,WTOMVC+1
WTOMVC   MVC   PRINTREC,2(1)               THE MESSAGE
         CLI   PRINTREC+5,C'E'             IS IT ERROR
         BNE   PRINTNOP                       NO
         MVI   RETURNRC+3,8                SET RETURN CODE
PRINTNOP CLI   NTRACTON,X'00'
         BE    PRINTRTN
         LA    R1,WTOPARM
         CALL  DBAWTO
*                                                                     *
PRINTRTN BAL   R14,LISTDATA                PERFORM
         L     R14,WTOR14
         BR    R14                         EXIT
*                                                                     *
WTOPARM  DC    A(WTOBLKL)
WTOBLKL  DC    AL2(L'WTOBLK)
WTOBLK   DC    CL40' '
*                                                                     *
         ORG   WTOBLK
PRINTREC DC    CL133' '
         ORG
***********************************************************************
         EJECT
***********************************************************************
LISTXR14 DC    A(0)
LISTHEX  EQU   *
         CLI   LISTON,0                    LISTING
         BER   R14                            NO
         MVC   FUNCTION,=CL4'ASIS'
         MVC   DUMPSTRT(4),=A(EOFMSG)
         ST    R14,LISTXR14
         B     LISTHEX3
*                                                                     *
***********************************************************************
*                                                                     *
LISTHEX2 EQU   *
         CLI   LISTON,0                    LISTING
         BER   R14                            NO
         ST    R14,LISTXR14
         LA    R4,INDCB
         ST    R10,DUMPSTRT
         LR    R5,R10
         AH    R5,DCBLRECL                 +RECSIZE
         BCTR  R5,0
         ST    R5,DUMPEND                  WHERE IT STOPS
         MVC   FUNCTION,=CL4'RELO'
LISTHEX3 MVC   DTLCOUNT(10),=XL10'40202020202020202120'
         ED    DTLCOUNT(10),RECOUNT
         MVC   DTLHDR,DTLHDR-1             CLEAR HEADR
         CLI   EXCP,0                      EXCPPING
         BE    LISTHEX4                       NO
         TM    UT1DVCLS,X'20'
         BZ    LISTHEX4
         UNPK  HEXWORK2(11),NEXTCCHH(6)
         TR    HEXWORK2(19),TRTBL-C'0'
         MVC   DTLCCHH,HEXWORK2
         BAL   R14,CNVTCCHH                PERFORM
         UNPK  HEXWORK2(7),EXCPTTR(4)
         TR    HEXWORK2(19),TRTBL-C'0'
         MVC   DTLTTR,HEXWORK2
         SR    R1,R1
         IC    R1,NEXTCCHH+5               THE KEYLEN
         BAL   R14,CVD                     PERFORM
         UNPK  DTLKEY,DOUBLE(8)
         ICM   R1,B'1100',NEXTCCHH+6       THE LRECL
         SRA   R1,16
         BAL   R14,CVD                     PERFORM
         UNPK  DTLDATA,DOUBLE(8)
         MVC   DTLHDR,DTLWORK
LISTHEX4 EQU   *
         BAL   R14,HEXDUMP                 PERFORM
         L     R14,LISTXR14
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
LISTDATA EQU   *
         ST    R14,LISTXR14
         MVC   FUNCTION,=CL4'ASIS'
         MVC   DUMPSTRT(4),=A(PRINTREC)
         OI    DUMPHDNG,X'80'
         BAL   R14,HEXDUMP                 PERFORM
         NI    DUMPHDNG,X'7F'
         MVI   PRINTREC,C' '
         MVC   PRINTREC+1(L'PRINTREC-1),PRINTREC
         L     R14,LISTXR14
         BR    R14                         EXIT
***********************************************************************
HEXDMP14 DC    A(0)
HEXDUMP  EQU   *
         ST    R14,HEXDMP14
         LA    R1,DUMPPARM
         CALL  HEXDUMP
         L     R14,HEXDMP14
         BR    R14                         EXIT
***********************************************************************
SKIPR14  DC    A(0)
SKIPFIND EQU   *
         CLI   SKIPCTL,0                   ARE WE SKIPPING TO A FIND
         BE    4(R14)                          NO
         ST    R14,SKIPR14
         MVI   SELCHECK+1,X'08'
         BAL   R14,SELECT                  TRY TO FIND
         B     SKIPFEXT                    NO HIT
         MVI   SKIPCTL,0
         L     R14,SKIPR14
         B     4(R14)
SKIPFEXT L     R14,SKIPR14
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
LSTRTN14 DC    A(0)
LISTRTN  CLI   STOPCTL,X'00'
         BE    4(R14)
         ST    R14,LSTRTN14
         MVI   SELCHECK+1,X'04'
         BAL   R14,SELECT                  PERFORM
         B     LISTRTNA
         MVI   STOPCTL,X'00'
         L     R14,LSTRTN14
         BR    R14                         EXIT
LISTRTNA L     R14,LSTRTN14
         B     4(R14)
***********************************************************************
PUNCHER  CLI   DUMPCTL,X'00'
         BER   R14
         MVI   PNCHDONE,X'00'
         MVI   DUMPCTL,X'00'
         L     R5,SRCHBUF
         LA    R4,INDCB
         LH    R6,DCBLRECL
PNCHLOOP LH    R4,SRCHLNG
         LTR   R4,R4
         BZ    PNCHEXIT
         BCTR  R4,0
         CLI   SRCHOPTN,X'0C'
         BNE   PNCHNEXT
         STC   R4,PNCHMVC+1
         LH    R3,SRCHOFF
         LR    R2,R6
         SR    R2,R4
         SR    R2,R3
         BNP   PNCHNEXT
         MVI   PNCHDONE,X'FF'
         LA    R3,0(R3,R10)
         CH    R2,SRCHRNGE
         BL    PNCHMVC
         LH    R2,SRCHRNGE
PNCHMVC  MVC   0(R3),8(R5)
         LA    R3,1(R3)
         BCT   R2,PNCHMVC
PNCHNEXT LA    R5,9(R4,R5)
         B     PNCHLOOP
PNCHEXIT CLI   PNCHDONE,X'00'
         BE    14                          PSA REFERENCE
         B     4(R14)
***********************************************************************
MOVER    CLI   MOVECTL,X'00'
         BER   R14
         L     R5,SRCHBUF
         LH    R6,UT2BLKSI
MOVELOOP LH    R4,SRCHLNG
         LTR   R4,R4
         BZ    MOVEEXIT
         CLI   SRCHOPTN,X'14'
         BE    MOVER2
         CLI   SRCHOPTN,X'10'
         BNE   MOVENEXT
         LH    R4,SRCHRNGE
         BCTR  R4,0
         STC   R4,MOVE1MVC+1
         LH    R3,SRCHOFF
         LR    R2,R6
         SR    R2,R4
         LA    R4,1
         SR    R2,R3
         BNP   MOVENEXT
         L     R9,UT2BUF
         LA    R9,0(R3,R9)
         LH    R3,8(,R5)
         LA    R3,0(R3,R10)
MOVE1MVC MVC   0(0,9),0(3)
         LA    R4,1
         B     MOVENEXT
MOVER2   BCTR  R4,0
         STC   R4,MOVE2MVC+1
         LH    R3,SRCHOFF
         LR    R2,R6
         SR    R2,R4
         SR    R2,R3
         BNP   MOVENEXT
         L     R9,UT2BUF
         LA    R9,0(R3,R9)
         CH    R2,SRCHRNGE
         BL    MOVE2MVC
         LH    R2,SRCHRNGE
MOVE2MVC MVC   0(0,9),8(5)
         LA    R9,1(R9)
         BCT   R2,MOVE2MVC
MOVENEXT LA    R5,9(R4,R5)
         B     MOVELOOP
MOVEEXIT L     R10,UT2BUF
         BR    R14                         EXIT
***********************************************************************
CHKSERCH CLI   SEARCHON,X'00'
         BE    4(R14)
         MVI   SELCHECK+1,X'00'
***********************************************************************
         EJECT
***********************************************************************
SELECT   EQU   *
*                                                                     *
SELCTNOP B     4(14)                       SET TO NOP IF ENTRIES
         MVI   SLECTHIT,X'00'
         L     R5,SRCHBUF
         LA    R4,INDCB
         LH    R6,DCBLRECL                 THE REC LNGTH
SELLOOP  LH    R4,SRCHLNG
         LTR   R4,R4
         BZ    SELEXIT                     ---END ---EXIT
         BCTR  R4,0
SELCHECK CLI   SRCHOPTN,0
         BNE   SELINC2
         STC   4,SELCLC+1
         LH    R3,SRCHOFF                  OFFSET
         LR    R2,R6                       THE LRECL
         SR    R2,R4                       MINUS CLC LENGTH
         SR    R2,R3                       MINUS OFFSET
         BNP   SELINC                      TOO BAD
         LA    R3,0(R3,R10)
         MVC   SELBRAN+1(1),SRCHFUNC
         CH    R2,SRCHRNGE
         BL    SELLOOP2
         LH    R2,SRCHRNGE
SELLOOP2 EQU   *
SELCLC   CLC   0(0,3),SRCHDATA
SELBRAN  B     SELHIT                      ---HIT---EXIT
         LA    3,1(3)
         BCT   R2,SELLOOP2
*                                                                     *
SELINC   EQU   *
         CLI   ANDOR,X'FF'                 ANDING
         BER   R14                         YES
SELINC2  LA    R5,SRCHCTL+1(R4,R5)
         B     SELLOOP
***********************************************************************
SELHIT   EQU   *
         CLI   ANDOR,0                     ANDING
         BE    4(R14)                         NO
         MVI   SLECTHIT,X'FF'
         B     SELINC2
***********************************************************************
SELEXIT  EQU   *
         CLI   ANDOR,0                     ANDING
         BER   R14                            NO
         CLI   SLECTHIT,X'00'              STOPPING
         BER   R14                            NO
         B     4(R14)
***********************************************************************
         EJECT
***********************************************************************
DSNGR14  DC    A(0)
DSNGET   EQU   *
         ST    R14,DSNGR14
         L     R10,EXCPBUF
         CLI   EXCP,X'FF'
         BE    EXCPGET
DSNLOOP  MVI   SYNADERR,0
         GET   INDCB,INBUF
         CLI   SYNADERR,X'FF'
         BNE   DSNEXIT
         CLI   EROPT,X'04'
         BL    EXCPERRX
         BC    2,DSNEXIT
         RELSE INDCB
         B     DSNLOOP
DSNEXIT  AP    RECOUNT,=P'1'
         LA    R4,INDCB
         LH    R3,DCBLRECL
         LA    R3,INBUF(R3)
         ST    R3,RECEND
         L     R14,DSNGR14
         B     4(R14)
***********************************************************************
EXCPGET  EQU   *
         MVI   IOBECB,0
*                                                                     *
         LA    R4,INDCB
         NI    DCBIFLGS,X'3F'
*                                                                     *
         TM    UT1DVCLS,X'20'
         BZ    EXCPEXCP
         BAL   R14,EXTENTS                 FIND THE EXTENT
         B     EXCPERRX                    ITS NOT RIGHT
*                                                                     *
         MVC   IOBCCHHR,NEXTCCHH
EXCPEXCP EXCP  IOBIOB
         WAIT  ECB=IOBECB
*                                                                     *
         LH    R2,EXCPREAD+6               NUMBER SUPPOSED TO READ
         SH    R2,IOBBYTES
         LA    R4,INDCB
         STH   R2,DCBLRECL                 NUMBER OF BYTES READ
*                                                                     *
         CLI   IOBECB,X'7F'                ALL OK
         BE    DSNEXIT                        YES
*                                                                     *
         CLI   IOBECB,X'42'                EXTENT VIOLATION
         BNE   EXCPYNAD                       NO
         CLI   SAVEDEB,0                   ANY DEBS LEFT
         BE    EXCPERRX                      NOPE
         L     R2,SAVEDEB
         LA    R2,X'10'(R2)                THE NEXT ONE
         MVI   NEXTCCHH+4,0
         MVC   NEXTCCHH(4),6(R2)           START EXTENT
         B     EXCPGET
EXCPYNAD EQU   *
         MVC   HEXWORK1(1),IOBECB
         MVC   HEXWORK1+1(1),IOBSTAT
         MVC   HEXWORK1+2(2),IOBSENS0
         MVC   HEXWORK1+4(5),IOBCCHHR
*                                                                     *
         UNPK  HEXWORK2(15),HEXWORK1(8)
         UNPK  HEXWORK2+14(5),HEXWORK1+7(3)
         TR    HEXWORK2(19),TRTBL-C'0'
         MVC   MSGECB(2),HEXWORK2          ECB
         MVC   MSGCSW(2),HEXWORK2+2        CSW
         MVC   MSGSENS(4),HEXWORK2+4       SENSE
         MVC   MSGCHR(10),HEXWORK2+8       CHR
         CLI   IOBECB,X'41'
         BNE   EXCPIOER
         TM    IOBSTAT,X'01'               EOF
         BZ    EXCPIOER                       NOPE
         MVI   INEOF,X'FF'                 TELLUM EOF IS HERE
         AP    RECOUNT,=P'1'               COUNT THIS ONE TOO
         BAL   R14,LISTHEX                 PERFORM
         B     EXCPALL
EXCPIOER EQU   *
         LA    R1,IOERR
         TM    UT1DVCLS,X'20'
         BO    EXCPWTOR
         MVC   IOERR2(43),IOERR
         LA    R1,IOERR2
EXCPWTOR BAL   R14,WTORTN                  PERFORM
EXCPALL  EQU   *
         CLI   DUMPALL,0                   KEEP ON GOING
         BE    EXCPERRX                        NO
         TM    UT1DVCLS,X'20'
         BZ    EXCPERRX
         CLC   NEXTCCHH(5),IOBCCHHR        STUCK ON THE SAME
         BNE   EXCPGET                       NO
EXCPERRX EQU   *
         L     R14,DSNGR14
         BR    R14                         EXIT ADDR
***********************************************************************
         EJECT
***********************************************************************
         USING UTSYNAD,R15
UTSYNAD  SYNADAF ACSMETH=QSAM
         STM   R13,R15,SYNADREG            SAVE REGS
         L     R13,SAVEADDR
         USING SAVEAREA,R13
         DROP  R15
         MVC   SYNADSAV(72),SAVEAREA
         MVC   IOERR3A(78),50(R1)
         LA    R1,IOERR3
         BAL   R14,WTORTN                  PERFORM
         MVC   SAVEAREA(72),SYNADSAV
         MVI   SYNADERR,X'FF'
         OI    SYNADREG+8,X'FF'
         LM    R13,R15,SYNADREG            RESTORE REGS
         SVC   68                          SYNADRLS
         BR    R14                         EXIT
         B     *
         B     *
SYNADREG DC    3A(0)
SYNADSAV DC    18A(0)
SAVEADDR DC    A(SAVEAREA)
***********************************************************************
DSNPR14  DC    A(0)
DSNPUT   CLI   OUTON,X'00'
         BE    4(R14)
         ST    R14,DSNPR14
         LA    R4,OUTDCB
         CLI   DCBRECFM,X'C0'
         BNE   DSNPUT1
         MVC   DCBLRECL(2),INDCB+(DCBLRECL-IHADCB)
DSNPUT1  MVI   SYNADERR,X'00'
         GET   OUTDCB,INBUF
         L     R14,DSNPR14
         CLI   SYNADERR,X'00'
         BE    4(R14)
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
CNVTBR14 DC    A(0)
*                                                                     *
CNVTTTR  EQU   *
         ST    R14,CNVTBR14
*                                                                     *
         USING MAPCVT,R15
         LA    R1,DBAPARM2
         LM    R4,R6,0(R1)                 DCB,TTR,CCHHR
         L     R1,DCBDEBA-1                ADDRESS DEB
         L     R0,0(R5)                    TTR TO  CONVERT
         LR    R2,R6                       WHERE TO STORE NUMBER
         L     R15,CVT
         L     R15,CVTPCNVT                TTR->CCHHR CONVERT ROUTINE
         STM   R0,R12,20(R13)              SAVE REGS
         BALR  R14,R15                     STD LINKAGE
         DROP  R13
         USING RESTOR13,R14
RESTOR13 L     R13,ASAVE                   RELOAD BASE
         DROP  R14
         USING SAVEAREA,R13
         LM    R0,R12,20(R13)              RESTORE REGS
         B     *+4(15)
         B     CNVTRTN                     OK
         B     CNVTERR                     BAD
CNVTRTN  L     R14,CNVTBR14
         B     4(R14)
***********************************************************************
CNVTERR  EQU   *
         LA    R1,EXTENTMG
         BAL   R14,WTORTN                  PERFORM
         L     R14,CNVTBR14
         BR    R14                         EXIT
***********************************************************************
CVT      EQU   16
CNVTCCHH EQU   *
         ST    R14,CNVTBR14
         LA    R1,DBAPARM1
         LM    R4,R6,0(R1)                 DCB,TTR,CCHHR
         L     R1,DCBDEBA-1
         LR    R2,R6                       CCHHR ADDRESS
         L     R15,CVT                     CVT ADDRESS
         L     R15,CVTPRLTV
         STM   R0,R12,20(R13)              SAVE REGS
         BALR  R14,R15                     CCHHR->TTR CONVERT ROUTINE
         DROP  R13
         USING *,R14
A00106E  EQU   *
         L     R13,ASAVE
         DROP  R14
         USING SAVEAREA,R13
         LM    R1,R12,24(R13)              RESTORE REGS
         ST    R0,0(R5)                    THE TTR
         L     R14,CNVTBR14
         BR    R14                         EXIT
ASAVE    DC    A(SAVEAREA)
***********************************************************************
EXTENT14 DC    A(0)
SAVEDEB  DC    A(0)
EXTENTS  EQU   *
         ST    R14,EXTENT14
         LA    R4,INDCB
         L     R2,DCBDEBAD                 THE DEB ADDR
         SR    R3,R3
         SR    R5,R5
         IC    R3,X'10'(R2)                # OF EXTENTS
         LA    R2,X'20'(R2)                POINT TO FIRST EXTENT
EXTENTLP EQU   *
         CLC   NEXTCCHH(4),6(R2)           BEGIN OF EXTENT
         BL    EXTENTUP                       NOT THIS ONE
         CLC   NEXTCCHH(4),10(R2)          END OF EXTENT
         BH    EXTENTUP                    NOT THIS ONE
         B     EXTENTHT                    THIS IS IT
EXTENTUP LA    R5,1(R5)
         LA    R2,X'10'(R2)                TO THE NEXT ONE
         BCT   R3,EXTENTLP
*                                                                     *
         LA    R1,EXTENTMG
         BAL   R14,WTORTN                  PERFORM
         L     R14,EXTENT14
         BR    R14                         EXIT
EXTENTHT EQU   *
         STC   R5,IOBMBB
         STC   R5,NEXTMBB
         ST    R2,SAVEDEB
         BCTR  R3,0
         STC   R3,SAVEDEB
         L     R14,EXTENT14
         B     4(R14)
***********************************************************************
         EJECT
***********************************************************************
GETINR14 DC    A(0)
*                                                                     *
GETSYSIN ST    R14,GETINR14
         CLI   NTRACTON,X'FF'
         BE    GETPRMPT
         NOP   GETMORE
         OI    *-3,X'F0'
         LA    R4,SYSIN
         LA    R1,DCBDDNAM
         BAL   R14,DDFIND                  PERFORM
         B     SYSINEND
         OPEN  (SYSIN)
GETMORE  EQU   *
         LA    R4,SYSIN
         TM    DCBOFLGS,X'10'              OPEN OK
         BZ    SYSINEND                       NO
         GET   SYSIN,CTLCARD
GETJOIN  MVC   PRMCOUNT(2),=AL2(72)
         MVC   PRMSTART(4),=A(CTLCARD)
         MVC   PRMHIT(4),PRMSTART
         BAL   R14,SETTRT                  PERFORM
         L     R14,GETINR14
         B     4(R14)
SYSINEND EQU   *
         L     R14,GETINR14
         BR    R14                         EXIT
GETPRMPT CLI   PROMPTED,X'FF'
         BE    WAITPRMP
         MVI   PRMPTECB,X'00'
         WTOR  MF=(E,PROMPT)
WAITPRMP WAIT  ECB=PRMPTECB
         MVI   PROMPTED,X'00'
         MVI   PRMPTECB,X'00'
         MVC   CTLCARD,CTLIN
         MVC   CTLIN,CTLINCLR
         B     GETJOIN
***********************************************************************
FRSTPRMP ST    R14,GETINR14
         MVI   PROMPTED,X'FF'
         WTOR  MF=(E,PROMPT)
         L     R14,GETINR14
         BR    R14                         EXIT
***********************************************************************
TESTPRMP TM    PRMPTECB,X'40'
         BCR   1,R14
         B     4(R14)
***********************************************************************
SETTRT   EQU   *
         XC    TRTTBL(256),TRTTBL
         MVI   TRTTBL+C' ',C' '            BLANK
         MVI   TRTTBL+C',',C','            COMMA
         MVI   TRTTBL+C'=',C'='            EQUAL
         MVI   TRTTBL+C'(',C'('            LEFT PAREN
         MVI   TRTTBL+C')',C')'            RIGHT PAREN
         MVI   TRTTBL+C'''',C''''
         MVI   TRTTBL+C'/',C'/'            SLASH
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
* SCAN FIELD FOR DELIMITER                 *                          *
***********************************************************************
PRMSTART DC    A(CTLCARD)                  WHERE TO START SCAN
PRMHIT   DC    A(0)                        DELIMITER ADDRESS+1
PRMCHAR  DC    A(0)                        THE DELIM CHARACTER
PRMLNGTH DC    AL2(0)                      LENGTH OF HIT
PRMCOUNT DC    AL2(71)                     # COLS TO CHK-DECREMENTED
*                                                                     *
PRMSCAN  EQU   *
         XC    PRMLNGTH(2),PRMLNGTH        INIT TO 0 LNGTH
         L     R3,PRMSTART
         LH    R5,PRMCOUNT                 BYTES LEFT
         LTR   R5,R5
         BNP   0(R14)                      ---NONE LEFT---EXIT
         BCTR  R5,0
         STC   R5,PRMTRT+1
         LA    R1,1(R5,R3)                 PREDICT END
PRMTRT   TRT   0(0,3),TRTTBL
         MVC   PRMCHAR+3(1),0(R1)          DELIMITER
         LA    R3,1(R1)                    +1 AFTER DELIM
         ST    R3,PRMHIT                   SAVE
         S     R1,PRMSTART                 END-BEGIN=LENGTH
         SR    R5,R1                       DECR # LEFT
         STH   R5,PRMCOUNT
         STH   R1,PRMLNGTH                 LENGTH FROM START TO END
         BM    0(R14)                      ---PAST END---EXIT
         LTR   R1,R1
         BZ    4(R14)                      ---ZERO LENGTH---EXIT
         B     8(R14)                      ---OK---EXIT
***********************************************************************
         EJECT
***********************************************************************
CHKADR   DC    A(0)                        ARG TO COMPARE
CHKTBL   DC    A(0)                        TABLE TO SEARCH AGAINST
CHKLNGTH DC    AL2(0)                      LENGTH ARG
*                                                                     *
CHKTYPE  EQU   *
         SR    R5,R5
         L     R3,CHKADR                   ARG TO COMPARE
         L     R4,CHKTBL                   TABLE
CHK80    EQU   *
         LH    R2,CHKLNGTH                 LENGTH
         BCTR  R2,0
         STC   R2,CHKCLC+1                 LENGTH TO CHK
         TM    0(R4),X'80'                 MUST IT EQUAL ITT
         BZ    CHKCLC
         IC    R2,0(R4)
         N     R2,=A(X'0000007F')          TURN '80' OFF
         BCTR  R2,0
         STC   R2,CHKCLC+1
CHKCLC   CLC   0(0,3),2(4)
         BE    CHKHIT                      ---HIT----EXIT
         LA    R5,4(R5)                    BUMP EXIT OFFSET
         IC    R2,1(R4)                    +LENGTH
         AR    R4,R2
         LA    R4,2(R4)                    +2 CTL
         IC    R2,1(R4)
         LTR   R2,R2                       IS THIS THE END
         BZ    0(R14)                      ----END--NOHIT---EXIT
         B     CHK80
*                                                                     *
CHKHIT   EQU   *
         SR    R1,R1
         IC    R1,0(R4)                    MIN LENGTH
         N     R1,=A(X'0000007F')
         BCTR  R1,0
         SR    R2,R2
         IC    R2,CHKCLC+1
         CR    R2,R1                       GT MININUM
         BLR   R14                         ---NOPE---NOT LONG ENOUGH
         B     4(R5,R14)                   ---HIT---EXIT
***********************************************************************
         EJECT
***********************************************************************
EXLSTPRT DC    0F'0',X'85',AL3(DCBEXIT)
*                                                                     *
DCBEXIT  EQU   *
         USING *,R15
         DROP  R4
         USING IHADCB,R1
         CLI   DCBRECFM,0                  ANY RECFM
         BNE   DCBEXIT2                      YES
         MVI   DCBRECFM,X'C0'              SET TO U MAYBE CAN USE
DCBEXIT2 OC    DCBBLKSI(2),DCBBLKSI        IS BLKSIZE ZERO
         BNZR  R14                            NO
         MVC   DCBBLKSI(2),DCBLRECL        MAKE BLK=LRECL
         BR    R14                         EXIT
*                                                                     *
UT1EXLST DC    0F'0',X'87',AL3(UT1JFCB)
UT2EXLST DC    0F'0',X'05',AL3(UT2EXIT),X'87',AL3(UT2JFCB)
*                                                                     *
UT2EXIT  EQU   *
         USING *,R15
         CLI   DCBRECFM,0                  ANY RECFM
         BNE   UT2EX1                         YES
         MVC   DCBRECFM(1),INDCB+(DCBRECFM-IHADCB) USE UT1
UT2EX1   EQU   *
         OC    DCBLRECL(2),DCBLRECL        ANY LRECL
         BNZ   UT2EX2                         YES
         MVC   DCBLRECL(2),INDCB+(DCBLRECL-IHADCB) USE UT1
UT2EX2   EQU   *
         OC    DCBBLKSI(2),DCBBLKSI        ANY BLKSIZE
         BNZR  R14                            YES
         MVC   DCBBLKSI(2),INDCB+(DCBBLKSI-IHADCB) USE UT1
         BR    R14                         EXIT
         DROP  R1,R15
         USING IHADCB,R4
         DS    0D
UT1JFCB  EQU   *
UT2JFCB  EQU   *
         IEFJFCBN
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
OPEN1R14 DC    A(0)
OPENUT1  EQU   *
         ST    R14,OPEN1R14
         MVC   ERRDDNAM(8),UT1NAME
         LA    R4,INDCB
         TM    DCBOFLGS,X'10'              ALREADY OPEN
         BO    4(R14)                         YES
         ZAP   RECOUNT,=P'0'
         MVC   FUNCTION,=CL4'PAGE'
         BAL   R14,HEXDUMP                 PERFORM
         LA    R1,UT1NAME
         BAL   R14,DDFIND                  PERFORM
         B     OPN1NODD
         LA    R4,INDCB
         MVC   DCBDDNAM,UT1NAME
         RDJFCB (INDCB)
         CLI   WORKDSN,C' '                ANY DSN
         BE    OPENUT1G                       NO
         MVC   JFCBDSNM(44),WORKDSN
OPENUT1G EQU   *
         MVC   UT1DSN,JFCBDSNM
         MVC   UT1DD,UT1NAME
         MVC   UT1VOL,JFCBVOLS
         OI    JFCBTSDM,X'08'              DONT BOTHER TO WRITE BACK
         L     R1,WORKUCB
         MVC   UT1DVADR,13(R1)
         MVC   UT1DVCLS,18(R1)
         TM    JFCBTSDM,X'20'
         BO    OPENUT1H
         CLI   JFCBVOLS,C' '
         BE    OPENUT1H
         TM    18(R1),X'20'
         BZ    OPENUT1H
         CLI   VTOC,X'FF'                  DOING A VTOC
         BE    OPENUT1N                    YEP
         OBTAIN                            CAMLST
         LTR   R15,R15
         BZ    OPENUT1H
         LA    R1,DSNERR
         BAL   R14,WTORTN                  PERFORM
         B     OPENUT1X
OPENUT1N MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         MVC   UT1DSN(44),=CL44' ******** VTOC ********'
OPENUT1H EQU   *
         OPEN  (INDCB),TYPE=J
         LA    R4,INDCB
         TM    DCBOFLGS,X'10'              OPEN OK
         BZ    OPENUT1X                       NO
         LH    R3,DCBLRECL
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  UT1RECL,DOUBLE(8)
         LH    R3,DCBBLKSI
         LTR   R3,R3
         BNZ   OPENUT1O
         LH    R3,DS1BLKL
         STH   R3,DCBBLKSI
OPENUT1O EQU   *
         SR    R2,R2
         IC    R2,DCBKEYLE
         LA    R2,0(R2,R3)
         STH   R2,EXCPREAD+6
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  UT1BLOCK,DOUBLE(8)
         CLI   DCBRECFM,X'C0'
         BE    OPENUT1I                       YES ITS 'U'
         LH    R2,DCBLRECL                 GET ONLY ENOUGH FOR A LRECL
OPENUT1I EQU   *
         LR    R0,R2
         STH   R0,UT1BLKSI
         LTR   R0,R0
         BNZ   OPENUT1L
         LA    R1,BLKERR
         BAL   R14,WTORTN                  PERFORM
         B     OPENUT1X
OPENUT1L EQU   *
         GETMAIN R,LV=(0)
         LR    R10,R1                      WHERE THE BUFFER IS
         ST    R10,EXCPREAD
         ST    R10,EXCPBUF
         CLI   EXCP,X'00'                  IS IT EXCP
         BE    OPEN1EXX                       NO
         TM    UT1DVCLS,X'20'
         BO    OPN1MVI1
         MVI   EXCPREAD,X'02'
         MVI   EXCPREAD+4,X'20'
         MVI   IOBIOB,X'02'
         MVC   IOBSTRTB,=A(EXCPREAD)
         B     OPEN1EXX
OPN1MVI1 MVI   EXCPREAD,X'0E'
OPN1MVI2 MVI   EXCPREAD+4,X'20'
         MVI   IOBIOB,X'42'
         MVC   IOBSTRTB,=A(EXCPCCW)
         CLI   DEBON,0                     ANY DEB
         BE    OPENUT1P                       NO
         BAL   R14,DEBMOD                  PERFORM
OPENUT1P EQU   *
         CLC   NEXTCCHH(5),=XL5'00'        ANY CCHHR
         BNE   OPEN1EXT                       YES THERE IS
         CLC   EXCPTTR(4),=A(0)
         BNE   OPENUT1K                       THERE IS A TTR
         MVC   EXCPTTR(4),=A(X'00000100')
OPENUT1K EQU   *
         BAL   R14,CNVTTTR                 MAKE IT A CCHHR
         B     OPENUT1X                    SOMETHING IS WRONG
OPEN1EXT EQU   *
         SR    R2,R2
         IC    R2,NEXTCCHH+4               THE RECORD
         LTR   R2,R2                       IS IT ZERO
         BZ    OPEN1EXX                       YES
         BCTR  R2,0                        REVISE
         STC   R2,NEXTCCHH+4
OPEN1EXX EQU   *
         L     R14,OPEN1R14
         B     4(R14)
OPN1NODD LA    R1,DDERR
         BAL   R14,WTORTN                  PERFORM
OPENUT1X EQU   *
         LA    R1,OPNERR
         BAL   R14,WTORTN                  PERFORM
         L     R14,OPEN1R14
         BR    R14                         EXIT
***********************************************************************
DEBR14   DC    A(0)
DEBMOD   EQU   *
         ST    R14,DEBR14
*                                                                     *
         SR    R1,R1                       AUTH ON
         SVC   247
*                                                                     *
         MODESET KEY=ZERO
*                                                                     *
         LA    R4,INDCB
         L     R2,DCBDEBAD
         LA    R2,X'20'(R2)                FIRST EXTENT
         MVC   4((MYDEBE-MYDEBS),R2),MYDEBS
*                                                                     *
         MODESET KEY=NZERO
*                                                                     *
         LA    R1,1                        AUTH OFF
         SVC   247
         L     R14,DEBR14
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
OPEN2R14 DC    A(0)
OPENUT2  EQU   *
         ST    R14,OPEN2R14
         MVC   ERRDDNAM(8),UT2NAME
         LA    R4,OUTDCB
         TM    DCBOFLGS,X'10'              OPEN YET
         BO    OPENUT2A                       YES
         MVC   DCBDDNAM(8),UT2NAME
         RDJFCB OUTDCB
         MVC   UT2DSN,JFCBDSNM
         OPEN  (OUTDCB,(OUTPUT))
         LA    R4,OUTDCB
         TM    DCBOFLGS,X'10'              OPEN OK
         BZ    OPENUT2X
         MVC   UT2BLKSI(2),82(R4)
         CLI   36(R4),X'C0'
         BNE   OPENUT2A
         MVC   UT2BLKSI(2),62(R4)
OPENUT2A CLI   MOVEON,X'00'
         BE    OPENUT2B
         BAL   R14,UT2GETM                 PERFORM
OPENUT2B L     R14,OPEN2R14
         B     4(R14)
OPENUT2X EQU   *
         LA    R1,OPNERR
         BAL   R14,WTORTN                  PERFORM
         L     R14,OPEN2R14
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
CLOSE114 DC    A(0)                       A(0)
CLOSEUT1 EQU   *
         ST    R14,CLOSE114
         MVI   INEOF,0                     RESET TO NO EOF
         LA    R4,INDCB
         TM    DCBOFLGS,X'10'              WAS IT OPEN
         BZR   R14                            NO
         LH    R0,UT1BLKSI
         LTR   R0,R0
         BZ    CLOSET1F                    NOTHING THERE
         FREEMAIN R,LV=(0),A=EXCPBUF
CLOSET1F EQU   *
         CLOSE (INDCB)
         CLI   EXCP,X'FF'                  WAS IT EXCP
         BE    CLOS1EXT                       YES
         FREEPOOL INDCB
CLOS1EXT EQU   *
         L     R14,CLOSE114
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
CLOSE214 DC    A(0)
CLOSEUT2 EQU   *
         ST    R14,CLOSE214
         LA    R4,OUTDCB
         TM    DCBOFLGS,X'10'              OPEN EVER
         BZR   R14                            NO
         BAL   R14,UT2FREM                 PERFORM
         CLOSE (OUTDCB)
         FREEPOOL OUTDCB
         L     R14,CLOSE214
         BR    R14                         EXIT
***********************************************************************
         EJECT
***********************************************************************
DDFIND14 DC    A(0)
DDFIND   EQU   *
         ST    R14,DDFIND14
         ST    R1,DDPARM
         MVC   DDERRNAM(8),0(R1)
         LA    R1,DDPARM
         CALL  VDBS$DDF
         B     *+4(R15)
         B     DDFINDOK
         B     DDFINDER
DDFINDOK EQU   *
         L     R15,WORKTIOT
         SR    R14,R14
         ICM   R14,7,41-24(R15)
         ST    R14,WORKUCB
         L     R14,DDFIND14
         B     4(R14)
DDFINDER EQU   *
         SR    R14,R14
         ST    R14,WORKUCB
         L     R14,DDFIND14
         BR    R14                         EXIT
***********************************************************************
DDPARM   DC    A(*)
         DC    X'80',AL3(WORKTIOT)
WORKTIOT DC    A(0)
WORKUCB  DC    A(0)
***********************************************************************
PACKR14  DC    A(0)
PACK     EQU   *
         ST    R14,PACKR14
         LH    R4,PRMLNGTH
         BCTR  R4,0
         EX    R4,NUMCHK
         BNZ   PACKERR
         EX    R4,PACKITT
         CVB   R1,DOUBLE
         B     4(R14)
CVD      EQU   *
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         BR    R14                         EXIT
PACKERR  EQU   *
         L     R14,PACKR14
         BR    R14                         EXIT
***********************************************************************
PACKITT  PACK  DOUBLE(8),VALUE(0)
NUMCHK   TRT   VALUE(0),TRTNUM
***********************************************************************
         EJECT
***********************************************************************
SRCHGM14 DC    A(0)
SRCHGETM EQU   *
         ST    R14,SRCHGM14
         CLC   SRCHBUF(4),=A(0)
         BNER  R14
         L     R0,SRCHSIZE                AMT STORAGE WE WANT FOR SRCHS
         GETMAIN R,LV=(0)
         ST    R1,SRCHADR
         ST    R1,SRCHBUF
         LR    R5,R1
         XC    SRCHOFF(SRCHCTL),SRCHOFF
         L     R14,SRCHGM14
         BR    R14                         EXIT
***********************************************************************
SRCHFREM EQU   *
         ST    R14,SRCHGM14
         CLC   SRCHBUF(4),=A(0)
         BER   R14
         L     R1,SRCHBUF
         L     R0,SRCHSIZE
         FREEMAIN R,LV=(0),A=(1)
         XC    SRCHADR(4),SRCHADR
         XC    SRCHBUF(4),SRCHBUF
         L     R14,SRCHGM14
         BR    R14                         EXIT
***********************************************************************
UT2GM14  DC    A(0)
UT2GETM  ST    R14,UT2GM14
         CLC   UT2BUF(4),=A(0)
         BNER  R14
         LH    R0,UT2BLKSI
         GETMAIN R,LV=(0)
         ST    R1,UT2BUF
         L     R14,UT2GM14
         BR    R14                         EXIT
***********************************************************************
UT2FREM  ST    R14,UT2GM14
         CLC   UT2BUF(4),=A(0)
         BER   R14
         LH    R0,UT2BLKSI
         L     R1,UT2BUF
         FREEMAIN R,LV=(0),A=(1)
         XC    UT2BUF(4),UT2BUF
         L     R14,UT2GM14
         BR    R14                         EXIT
***********************************************************************
         EJECT
TRTTBL   DC    256X'00'
HEXTBL   EQU   *-C'A'
HEX0     DC    (1+C'9'-C'A')X'00'
         ORG   HEX0
HEX1     DC    6AL1((*-HEX1)+10)
         ORG   HEX0+(C'0'-C'A')
HEX2     DC    10AL1(*-HEX2)
         ORG
HEXWORK1 DC    XL10'0'
HEXWORK2 DC    XL19'0'
*                                                                     *
TRTBL    DC    C'0123456789ABCDEF'
*                                                                     *
TRTNUM   DC    256AL1(*-TRTNUM)
         ORG   TRTNUM+C'0'
         DC    10X'00'
         ORG
*                                                                     *
         DC    CL2' '
CTLCARD  DC    CL80' '
CTLINCLR DC    CL80' '
CTLIN    EQU   CTLINCLR+1
         DC    CL(256-2*80)' '
*                                                                     *
VALUECLR DC    CL80' '
VALUE    EQU   VALUECLR+1
         DC    CL2' '
HEADING  DC    CL132' '
         ORG   HEADING
         DC    C'SUPERGEN DSN DUMP  '
UT1VOL   DC    CL6' '
         DC    C'-'
UT1DVADR DC    CL3' '
         DC    C'-'
UT1DD    DC    CL8' '
         DC    C' '
UT1RECL  DC    CL5' '
         DC    C'/'
UT1BLOCK DC    CL5' '
         DC    C' '
UT1DSN   DC    CL44' '
         ORG
EOFMSG   DC    CL132'******** EOF RECORD *********'
*                                                                     *
DTLWORKS EQU   *
DTLWORK  DC    C' CCHHR='
DTLCCHH  DC    CL10' '
         DC    C' KEYLEN='
DTLKEY   DC    CL3' '
         DC    C' BLKSIZE='
DTLDATA  DC    CL5' '
         DC    C' TTR='
DTLTTR   DC    CL6' '
DTLWORKE EQU   *
*                                                                     *
DETAIL   DC    CL132' '
         ORG   DETAIL
         DC    C'RECORD SEQUENCE NUMBER1234567890'
DTLCOUNT EQU   *-10
         DC    C' '
DTLHDR   DC    CL(DTLWORKE-DTLWORKS)' '
         ORG
*                                                                     *
UT2DSN   DC    CL44' '
WORKDSN  DC    CL44' '
*                                                                     *
         DC    AL2(L'CTAPECNT)
CTAPECNT DC    C'SPGENMSG10- # OF RECORDS READ=1234567890'
CTAPEREC EQU   *-10
*                                                                     *
         DC    AL2(L'COUTCNT)
COUTCNT  DC    C'SPGENMSG11- # OF RECORDS SELECTED=123456'
COUTREC  EQU   *-6
*                                                                     *
         DC    AL2(L'DDERR)
DDERR    DC    C'SPGENERR03--- DDNAME MISSING ----12345678'
DDERRNAM EQU   *-8
*                                                                     *
         DC    AL2(L'DSNERR)
DSNERR   DC    C'SPGENERR06---DATASET NOT ON VOLUME ---SEE HDNG'
*                                                                     *
         DC    AL2(L'NUMERR)
NUMERR   DC    C'SPGENERR05---THATS NOT A NUMBER---'
*                                                                     *
         DC    AL2(L'SIZERR)
SIZERR   DC    C'SPGENERR04--THIS NUMBER SHOULD BE G.E. TO 1ST NUMBER'
*                                                                     *
         DC    AL2(L'OPTNERR)
OPTNERR  DC    C'SPGENERR02--INVALID COMMAND : '
*                                                                     *
         DC    AL2(L'BADKEY)
BADKEY   DC    CL80' '
*                                                                     *
         DC    AL2(L'OPNERR)
OPNERR   DC    C'SPGENERR01---OPEN HAS FAILED----12345678'
ERRDDNAM EQU   *-8
*                                                                     *
         DC    AL2(L'BLKERR)
BLKERR   DC    C'SPGENERR77----THE BLKSIZE IS ZERO---PLEASE CORRECT'
*                                                                     *
         DC    AL2(L'IOERR)
IOERR DC C'SPGENERR88-IOERROR-ECB=12,CSW=12,SENSE=1234,CHR=123456789A'
MSGECB   EQU   IOERR+23
MSGCSW   EQU   IOERR+30
MSGSENS  EQU   IOERR+39
MSGCHR   EQU   IOERR+48
*                                                                     *
         DC    AL2(L'IOERR2)
IOERR2   DC    C'SPGENERR88-IOERROR-ECB=12,CSW=12,SENSE=1234'
*                                                                     *
         DC    AL2(L'IOERR3)
IOERR3   DC    CL97' '
         ORG   IOERR3
         DC    C'SPGENERR88-IOERROR-'
IOERR3A  EQU   *
         ORG
*                                                                     *
         DC    AL2(L'EXTENTMG)
EXTENTMG DC    C'SPGENERR04---ADDRESS OUTSIDE EXTENTS---'
*                                                                     *
TAPER14  DC    A(0)
*                                                                     *
EXCPBUF  DC    A(0)
UT2BUF   DC    A(0)
RECEND   DC    A(0)
SRCHADR  DC    A(0)
SRCHBUF  DC    A(0)
SRCHSIZE DC    A(4000)                 SIZE FOR FINDS
*                                                                     *
PARMADR  DC    A(0)
BLOCKADR DC    A(0)
BLOCKEND DC    A(0)
*                                                                     *
DBAPARM1 DC    A(INDCB)
         DC    A(EXCPTTR)
         DC    A(NEXTMBB)
*                                                                     *
DBAPARM2 DC    A(INDCB)
         DC    A(EXCPTTR)              THE TTR IN
         DC    A(NEXTMBB)              THE CCHHR OUT
*                                                                     *
CAMLST   CAMLST                        SEARCH,UT1DSN,UT1VOL,DSCB
DSCB     DC    CL148' '
DS1BLKL  EQU   DSCB+86-44
*                                                                     *
DUMPPARM DS    0F
DUMPTYP  DC    A(FUNCTION)
DUMPSTRT DC    A(0)
DUMPEND  DC    A(4)
DUMPHDNG DC    A(HEADING)
DUMPDTL  DC    AL1(X'80'),AL3(DETAIL)
***********************************************************************
*                                                                     *
FUNCTION DC    CL4'RELO'
HEXCHAR  DC    C'    '
VTOC     DC    X'00'
EXCP     DC    X'00'
ANDOR    DC    X'00'
DUMPALL  DC    X'00'
SKIPCTL  DC    X'00'
SKIPON   DC    X'00'
DUMPCTL  DC    X'00'
DUMPON   DC    X'00'
PNCHDONE DC    X'00'
MOVECTL  DC    X'00'
MOVEON   DC    X'00'
WORKFUNC DC    X'00'
LISTON   DC    X'00'
SEARCHON DC    X'00'
OUTON    DC    X'FF'
STOPCTL  DC    X'00'
STOPON   DC    X'00'
DEBON    DC    X'00'
KEEPON   DC    X'00'
SLECTHIT DC    X'00'
TRACE    DC    X'00'
NTRACTON DC    X'00'
PROMPTED DC    X'00'
SYNADERR DC    X'00'
EROPT    DC    X'00'
         EJECT
*                                                                     *
KEYWORD1 DS    0F
         DC    AL1(1,L'KEY19)
KEY19    DC    C'END'
         DC    AL1(1,L'KEY20)
KEY20    DC    C'*'
         DC    AL1(1,L'KEY1A)
KEY1A    DC    C'DUMP'
         DC    AL1(X'82',L'KEY1B)
KEY1B    DC    C'OR'
         DC    AL1(X'83',L'KEY1C)
KEY1C    DC    C'AND'
         DC    AL1(1,L'KEY1D)
KEY1D    DC    C'KEEP'
         DC    AL1(1,L'KEY1E)
KEY1E    DC    C'PUNCH'
         DC    AL1(1,L'KEY1F)
KEY1F    DC    C'MOVE'
         DC    AL1(1,L'KEY1I)
KEY1I    DC    C'SKIP'
         DC    AL1(1,L'KEY1J)
KEY1J    DC    C'COUNT'
         DC    AL1(X'84',L'KEY1K)
KEY1K    DC    C'VTOC'
         DC    AL1(X'84',L'KEY1L)
KEY1L    DC    C'EXCP'
         DC    AL1(1,L'KEY1M)
KEY1M    DC    C'FIND'
         DC    AL1(1,L'KEY1N)
KEY1N    DC    C'RESET'
         DC    AL1(1,L'KEY1O)
KEY1O    DC    C'INDD'
         DC    AL1(1,L'KEY1P)
KEY1P    DC    C'OUTDD'
         DC    AL1(1,L'KEY1Q)
KEY1Q    DC    C'GO'
         DC    AL1(1,L'KEY1R)
KEY1R    DC    C'BLKSIZE'
         DC    AL1(X'83',L'KEY1S)
KEY1S    DC    C'CYL'
         DC    AL1(X'84',L'KEY1T)
KEY1T    DC    C'HEAD'
         DC    AL1(X'83',L'KEY1U)
KEY1U    DC    C'REC'
         DC    AL1(X'85',L'KEY1V)
KEY1V    DC    C'CCHHR'
         DC    AL1(X'83',L'KEY1W)
KEY1W    DC    C'TTR'
         DC    AL1(X'83',L'KEY1X)
KEY1X    DC    C'DSN'
         DC    AL1(X'83',L'KEY1Y)
KEY1Y    DC    C'EOF'
         DC    AL1(X'83',L'KEY1Z)
KEY1Z    DC    C'DEB'
         DC    AL1(3,L'KEY1G)
KEY1G    DC    C'INTERACT'
         DC    AL1(2,L'KEY1H)
KEY1H    DC    C'EROPT'
         DC    AL2(0)
*                                                                     *
         DS    0F
         EJECT
KEYWORD2 DS    0F
         DC    AL1(X'82',L'KEY2A)
KEY2A    DC    C'EQ'
         DC    AL1(X'82',L'KEY2B)
KEY2B    DC    C'NE'
         DC    AL1(X'82',L'KEY2C)
KEY2C    DC    C'LT'
         DC    AL1(X'82',L'KEY2D)
KEY2D    DC    C'GT'
         DC    AL1(X'82',L'KEY2E)
KEY2E    DC    C'LE'
         DC    AL1(X'82',L'KEY2F)
KEY2F    DC    C'GE'
KEYWORD3 EQU   *
         DC    AL1(X'81',L'KEY3A)
KEY3A    DC    C'X'
         DC    AL1(X'81',L'KEY3B)
KEY3B    DC    C'C'
         DC    AL1(X'84',L'KEY3C)
KEY3C    DC    C'STOP'
         DC    AL1(X'84',L'KEY3D)
KEY3D    DC    C'SKIP'
         DC    AL2(0)
         DC    AL2(0)
         LTORG
RECOUNT  DC    PL5'0'
SKIPNUM  DC    PL6'0'
COUNTNUM DC    PL6'9999999'
OUTCOUNT DC    PL6'0'
*                                                                     *
UT1DVCLS DC    XL1'0'
UT1BLKSI DC    H'0'
UT1NAME  DC    CL8'SYSUT1'
UT2BLKSI DC    H'0'
UT2NAME  DC    CL8'SYSUT2'
*                                                                     *
*                                                                     *
EOF      DC    X'00'
INEOF    DC    X'00'
ERROR    DC    X'00'
GO       DC    X'00'
*                                                                     *
*                                                                     *
DOUBLE   DC    D'0'
         SPACE
***********************************************************************
*                                                                     *
*        DCBS FOR THE PROGRAM                                         *
*                                                                     *
***********************************************************************
*                                                                     *
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,                         X
               RECFM=FB,LRECL=80,EODAD=SYSINEND,EXLST=EXLSTPRT
*                                                                     *
*                                                                     *
PROMPT   WTOR  'SPGENMSG00--ENTER FUNCTION--',CTLIN,80,PRMPTECB,MF=L
PRMPTECB DC    F'0'
*                                                                     *
OUTDCB   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EXLST=UT2EXLST,         X
               SYNAD=UTSYNAD,EROPT=SKP
*                                                                     *
INDCB    DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=REALEOF,          X
               EXLST=UT1EXLST,SYNAD=UTSYNAD,EROPT=ACC
*                                                                     *
MODELDCB DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=REALEOF,          X
               EXLST=UT1EXLST,SYNAD=UTSYNAD,EROPT=ACC
LMODEL   EQU   *-MODELDCB
*                                                                     *
         PRINT GEN
         DBAIOB CCW=EXCPCCW,PREFIX=IOB,DCB=INDCB
*                                                                     *
EXCPTTR  DC    A(X'00000100')
NEXTMBB  DC    XL3'00'
NEXTCCHH DC    XL5'00'
         DC    XL3'00'
WORKCCHH DC    XL8'00'
         DC    X'00'
*                                                                     *
EXCPCCW  CCW   X'31',IOBCCHHR,X'40',5
         CCW   X'08',EXCPCCW,X'00',1
EXCPLOOP CCW   X'92',NEXTCCHH,X'60',8  MT COUNT
EXCPREAD CCW   X'0E',*,X'20',0        READ KEY,DATA
         CCW   X'08',EXCPLOOP,0,1      TRY TO LOOP IT
         DS    0D
MYDEBS   DC    AL2(0)                  BIN
         DC    AL4(0)                  CCHH START
         DC    H'-1',H'-1'             CCHH END
         DC    X'7FFF'                 # TRKS
MYDEBE   EQU   *
***********************************************************************
EXCPDCB  DCB   DDNAME=EEEE,MACRF=E,DSORG=PS,EXLST=UT1EXLST
LEXCPDCB EQU   *-EXCPDCB
*                                                                     *
PATCHERA DC    400X'00'
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*        DSECTS USED BY THE PROGRAM                                   *
*                                                                     *
***********************************************************************
*                                                                     *
SEARCH   DSECT
SRCHOFF  DC    H'0'
SRCHRNGE DC    H'0'
SRCHLNG  DC    H'0'
SRCHOPTN DC    X'00'
SRCHFUNC DC    X'00'
SRCHCTL  EQU   *-SRCHOFF
SRCHDATA EQU   *
*
INBUF    DSECT
         PRINT NOGEN
IHADCB   DCBD  DSORG=PS,DEVD=DA
MAPCVT   DSECT
         CVT   SYS=AOS1
         PRINT GEN
         REGS
EQ       EQU   X'80'
NE       EQU   X'70'
LT       EQU   X'40'
GT       EQU   X'20'
LE       EQU   EQ+LT
GE       EQU   EQ+GT
         END
