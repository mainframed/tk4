VDBS$HEX CSECT
         ENTRY HEXDUMP
         ENTRY HEXDUMP2
         ENTRY HEXDCB
***********************************************************************
HEXDUMP  EQU   *
         USING HEXDUMP,15
         B     DUMP1EP
         DC    AL1(L'DUMP1LIT)
DUMP1LIT DC    C'HEXDUMP  - DUMP STORAGE IN HEX &SYSDATE &SYSTIME'
DUMP1EP  EQU   *
         MVI   BRVECTOR,4
         LA    15,HEXME
         BR    15
*                                                                     *
HEXDUMP2 EQU   *
         USING HEXDUMP2,15
         B     DUMP2EP
         DC    AL1(L'DUMP2LIT)
DUMP2LIT DC    C'HEXDUMP2 - DUMP STORAGE IN HEX &SYSDATE &SYSTIME'
DUMP2EP  EQU   *
         MVI   BRVECTOR,8
         LA    15,HEXME
         BR    15
***********************************************************************
***********************************************************************
*
*        DUMP FORMATTING ROUTINE
***********************************************************************
*        R1-> A(TYPE,START,END,HDNG,DETAIL)---HEXDUMP                 *
*  OR    R1-> A(TYPE,START,LNGTH,HDNG,DETAIL)---HEXDUMP2              *
*        A(TYPE)->=C'RELO' PRINTS DATA RELATIVE TO 0                  *
*        A(TYPE)->=C'DATA' WILL PRINT 132 BYTES AS IS FROM START      *
*        A(TYPE)->=C'PAGE' WILL PAGE EJECT ON NEXT CALL               *
*        A(TYPE)->=C'CLOS' WILL CLOSE HEXDUMP DCB                     *
*        TYPE=ANYTHING ELSE WILL PRINT ACTUAL ADDRESS                 *
*    HDNG AND DETAIL ARE OPTIONAL AND IF SUPPLIED WILL BE USED        *
*        TO PRINT A HEADING AND/OR DETAIL LINE EACH 132 BYTES         *
*    ENTRY HEXDUMP2 IS USED FOR SECOND PARM LIST WHERE LNGTH IS       *
*        ADDRESS OF A FULLWORD CONTAINING BINARY LNGTH OF BYTES TO DUM*
***********************************************************************
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
         EJECT
***********************************************************************
         USING HEXME,15
HEXME    EQU   *
         SAVE  (14,12)
         ST    13,SAVEAREA+4
         LR    12,13
         CNOP  0,4
         BAL   13,HEXXER
SAVEAREA DC    18A(0)
         DROP  15
         USING SAVEAREA,13
HEXXER   EQU   *
         ST    13,8(12)
HEXDDNOP NOP   HEXEXIT                 B IF BAD OPEN
         XC    PARMS,PARMS             CLEAR
         ICM   R3,7,1(R1)              A(TYPE)
         STCM  R3,7,PARMTYP+1          POST
         TM    0(R1),X'80'             LAST PARM
         BNZ   HEXEOPRM                YES
         ICM   R3,7,5(R1)              A(START)
         STCM  R3,7,PARMSTRT+1         POST
         TM    4(R1),X'80'             LAST PARM
         BNZ   HEXEOPRM                YES
         ICM   R3,7,9(R1)              A(END)
         STCM  R3,7,PARMEND+1          POST
         TM    8(R1),X'80'             LAST PARM
         BNZ   HEXEOPRM                YES
         ICM   R3,7,13(R1)             A(HEADING)
         STCM  R3,7,PARMHDNG+1         POST
         TM    12(R1),X'80'            LAST PARM
         BNZ   HEXEOPRM                YES
         ICM   R3,7,17(R1)             A(DETAIL)
         STCM  R3,7,PARMDTL+1          POST
HEXEOPRM EQU   *
         L     3,PARMTYP               TYPE
         CLC   0(4,3),=CL4'CLOS'       CLOSE IT
         BE    HEXCLOSE                   YES
         CLC   0(4,3),=CL4'PAGE'       PAGE EJECT
         BE    HEXPAGE                    YES
*
*        BRVECTOR = 4 FOR HEXDUMP
*        BRVECTOR = 8 FOR HEXDUMP2
*
         LA    1,0
BRVECTOR EQU   *-1
         B     *(1)
         B     HEXCHK1
         L     5,PARMEND               A(LENGTH)
         L     5,0(R5)                 LENGTH
         A     5,PARMSTRT              + START = END+1
         BCTR  5,0                     NOW END
         ST    5,PARMEND               POST
HEXCHK1  EQU   *
         L     R4,PARMSTRT
         L     R5,PARMEND
         CR    4,5
         BNH   HEXOK                   NO MISTAKE IN START/END
         LA    5,31(4)                 SET FOR 1 LINE
HEXOK    EQU   *
         CLC   0(4,3),=CL4'ASIS'       ASIS ONLY
         BE    HEXFIRST                   YES
         OI    HEXRELO+1,X'F0'
         CLC   0(4,3),=CL4'RELO'
         BNE   HEXFIRST
         NI    HEXRELO+1,X'0F'
***********************************************************************
         EJECT
***********************************************************************
HEXFIRST EQU   *
         NOP   HEXMORE
         OI    *-3,X'F0'
         LA    1,DDPARM
         L     15,=V(VDBS$DDF)
         BALR  14,15
         B     *+4(15)                 CHECK RETURN CODE
         B     *+8                     0 -- OK
         B     NODD                    4 -- NOT FOUND
         OPEN  (LISTDCB,(OUTPUT))      OPEN LISTING FILE
         TIME  DEC
         ST    1,FULL
         UNPK  YYDDD,FULL
         OI    YYDDD+4,X'F0'
         MVC   PRNTYY,YEAR
         MVC   PRNTDDD,DAY
         ST    0,FULL
         UNPK  HHMMSS,FULL
         MVC   PRNTHH,HOURS
         MVC   PRNTMM,MINUTES
         MVC   PRNTSS,SECONDS
         TM    LISTDCB+(DCBOFLGS-IHADCB),X'10'  IS IT OPEN
         BO    HEXMORE
NODD     EQU   *
         OI    HEXDDNOP+1,X'F0'
         B     HEXEXIT
HEXCLOSE EQU   *
         TM    LISTDCB+(DCBOFLGS-IHADCB),X'10'  WAS IT OPEN
         BZ    HEXEXIT                    NO
         MVC   LINE+1(L'ENDMSG),ENDMSG
         BAL   14,PRINT
         CLOSE (LISTDCB)
         NI    HEXFIRST+1,X'0F'
         B     HEXEXIT
HEXMORE  EQU   *
         MVI   LINE,C'0'
         L     2,PARMDTL
         LTR   R2,R2
         BZ    HEXDO
         MVC   LINE+1(132),0(2)        THE DETAIL LINE
         BAL   14,PRINT
HEXDO    EQU   *
         L     2,PARMTYP
         CLC   0(4,2),=CL4'ASIS'       IS IT ASIS
         BNE   HEXTYPE
         L     2,PARMSTRT
         MVC   LINE+1(132),0(2)
         BAL   14,PRINT
         B     HEXEXIT
HEXTYPE  EQU   *
         BAL   14,HEXXIT
HEXEXIT  EQU   *
         L     R13,SAVEAREA+4
         RETURN                (14,12),,RC=0
HEXPAGE  EQU   *
         ZAP   LINECTR,=P'999'
         B     HEXEXIT
********************************************************************
         EJECT
**************************************************************
HEXXIT   EQU   *
         ST    14,HEXR14
         SR    3,3
         LA    R6,3                MAX SIZE INDEX INTO LENGTHS TABLE. L
         LA    R10,15              MASK FOR SELECTING BLANK POSITION. L
HEXNEXT  EQU   *
         ST    R4,DUMPADDR         WHERE DUMP IS AT NOW
HEXRELO  B     HEXACT
         ST    3,DUMPADDR
HEXACT   EQU   *
         UNPK  LINE+1(7),DUMPADDR+1(4)   DUMP ADDRESS
         TR    LINE+1(6),CHAR-240      INTO PRINTABLE
         MVI   LINE+7,C' '
         LA    9,LINE+88
         LA    8,LINE+10
HEXLOOP  EQU   *
         LR    R7,R5              BOTTOM OF DUMP AREA LESS TOP        L
         SR    R7,R4                GIVES SIZE LEFT TO DUMP.          L
         CR    R7,R6              LESS THAN OR EQUAL TO THREE?        L
         BNH   HEXNREND           YES, DUMP ONLY THAT MANY BYTES + 1  L
         LR    R7,R6                ELSE DUMP NEXT 4 (3 + 1) BYTES.   L
HEXNREND EQU   *                  R7 * 4 INDEXES INTO PROPER LENGTHS  L
         SLA   R7,2                 FOR THE # OF BYTES WE'LL DUMP.    L
         L     R7,LENGTHS(R7)     LOAD THOSE LENGTHS.                 L
         EX    R7,GETTER1         MOVE THE BYTES INLINE.              L
         SRL   R7,8                 (NEXT LENGTH).                    L
         EX    R7,UNPKER          UNPACK THEM.                        L
         SRL   R7,8                 (NEXT LENGTH).                    L
         LR    R11,R7             UNPACK HAS CREATED A GARBAGE BYTE   L
         NR    R11,R10              JUST AFTER FIELD.  EXTRACT ITS    L
         AR    R11,R8               POSITION AND REPLACE IT WITH A    L
         MVI   1(R11),C' '          BLANK.                            L
         EX    R7,TRNSLER1        CONVERT THE BYTES TO HEXADECIMAL.   L
         SRL   R7,8                 (NEXT LENGTH).                    L
         EX    R7,GETTER2         NOW COPY THE BYTES TO THE RIGHT     L
         EX    R7,TRNSLER2          AND CONVERT THEM TO CHARACTER.    L
         LA    R4,4(4)            ASSUME 4 BYTES JUST PROCESSED;      L
         CR    4,5                  WHETHER 4 OR LESS, WE'LL END UP   L
         BNH   HEXINCR              HERE IF WE REACH THE BOTTOM OF    L
         BAL   14,PRINTHEX          THE DUMP AREA.                    L
         L     14,HEXR14          SO PRINT THE LAST LINE              L
         BR    14                   AND TRUNDLE ON BACK.              L
*                                                                     *
HEXINCR  EQU   *         MORE TO PRINT (SO WE MUST HAVE PROCESSED 4). L
         LA    3,4(3)             SO BOOST THE RELO POINTER, THE HEX
         LA    8,9(8)               POINTER AND THE CHARACTER POINTER L
         LA    9,4(9)               BY '4 BYTES PROCESSED'.
*                                                                     *
         C     8,=A(LINE+46)      MIDDLE OF THE LINE?
         BNE   HEXEND
         LA    8,3(8)             YEP -- SET UP BLANK COLUMNS.
         B     HEXLOOP                                                L
HEXEND   C     8,=A(LINE+84)      HOW ABOUT THE END OF THE LINE?
         BL    HEXLOOP            NAH -- JUST KEEP ON DUMPING.        L
*                                                                     *
         BAL   14,PRINTHEX        BUT IF SO, PRINT THE LINE
         B     HEXNEXT              AND SET UP A NEW ONE.             L
***********************************************************************
         EJECT
***********************************************************************
PRINTR14 DC    A(0)
*                                                                     *
PRINTHEX EQU   *
         MVI   LINE+87,SIDES
         MVI   LINE+120,SIDES
PRINT    EQU   *
         ST    14,PRINTR14
         CLI   LINE,C'0'
         BNE   PRINT2
         AP    LINECTR,=P'1'
PRINT2   EQU   *
         CP    LINECTR,=P'60'
         BL    PRINTIT
         MVI   LINE,C'0'
         ZAP   LINECTR,=P'2'
         AP    PAGE,=P'1'
         MVC   PRNTPAGE,=XL6'402020202120'
         ED    PRNTPAGE,PAGE
         PUT   LISTDCB,PRNTHDNG
         L     2,PARMHDNG
         LTR   2,2
         BZ    PRINTIT
         MVC   HEADING+1(132),0(2)
         PUT   LISTDCB,HEADING
         AP    LINECTR,=P'1'
         MVI   LINE,C'0'
PRINTIT  EQU   *
         PUT   LISTDCB,LINE
         AP    LINECTR,=P'1'
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         L     14,PRINTR14
         BR    14
***********************************************************************
         EJECT
***********************************************************************
LINE     DC    CL133' '
*
HEADING  DC    CL133' '
*                                                                     *
ENDMSG DC C'     ****************  END OF HEXDUMP  *****************'
*
PRNTHDNG DC    CL133'1'
         ORG   PRNTHDNG+94
         DC    C'DATE '
PRNTYY   DC    CL2' '
         DC    C'.'
PRNTDDD  DC    CL3' '
         DC    C' TIME '
PRNTHH   DC    CL2' '
         DC    C'.'
PRNTMM   DC    CL2' '
         DC    C'.'
PRNTSS   DC    CL2' '
         DC    CL3' '
         DC    C' PAGE'
PRNTPAGE DC    CL6' '
         ORG
*                                                                     *
*
CHAR     DC   C'0123456789ABCDEF'
GRAPHIC  DC    256C'.'
         ORG   GRAPHIC+C' '
         DC    C' '
         ORG   GRAPHIC+C'<'
         DC    C'<(+'
         ORG   GRAPHIC+C'$'
         DC    C'$*);'
         ORG   GRAPHIC+C'-'
         DC    C'-/'
         ORG   GRAPHIC+C','
         DC    C','
         ORG   GRAPHIC+C'>'
         DC    C'>'
         ORG   GRAPHIC+C''''
         DC    C'''="'
         ORG   GRAPHIC+C'A'
         DC    C'ABCDEFGHI'
         ORG   GRAPHIC+C'J'
         DC    C'JKLMNOPQR'
         ORG   GRAPHIC+C'S'
         DC    C'STUVWXYZ'
         ORG   GRAPHIC+C'0'
         DC    C'0123456789'
         ORG
DUMPADDR DC    F'0'
         DS    0F
PARMS    DS    0CL20
PARMTYP  DC    A(0)
PARMSTRT DC    A(0)
PARMEND  DC    A(0)
PARMHDNG DC    A(0)
PARMDTL  DC    A(0)
*************************************************************
         PRINT NOGEN
SIDES    EQU   C'*'
HEXR14   DC    A(0)
FULL     DC    A(0)
PAGE     DC    PL3'0'
*                                                                     *
YYDDD    DS    0CL5
YEAR     DC    CL2' '
DAY      DC    CL3' '
*                                                                     *
HHMMSS   DS    0CL7
HOURS    DC    CL2' '
MINUTES  DC    CL2' '
SECONDS  DC    CL2' '
         DC    C' '
LINECTR  DC    PL3'90'
*                                                                     *
         DS    0F                                                     L
LENGTHS  DC    X'00012100'        LENGTH TABLE FOR SNARFING BYTES TO  L
         DC    X'01034201'          ROCESS AND DUMP. LENGTHS CONCAT-  L
         DC    X'02056302'          END TO END AND SHIFTED FOR USE IN L
         DC    X'03078403'          EX'ED INSTRUCTIONS.               L
         DS    0H                                                     L
GETTER1  MVC   0(0,8),0(4)        MOVES BYTES INTO DUMP LINE (HEX).   L
UNPKER   UNPK  0(0,8),0(0,8)      UNPACKS THOSE BYTES INPLACE.        L
TRNSLER1 TR    0(0,8),CHAR-C'0'   TRANSLATES THEM TO HEX.             L
GETTER2  MVC   0(0,9),0(4)        MOVES BYTES INTO DUMP LINE (CHAR).  L
TRNSLER2 TR    0(0,9),GRAPHIC     TRANSLATES THEM TO CHARACTERS.      L
         DS    0D
HEXDCB   EQU   *
LISTDCB  DCB   DDNAME=HEXDUMP,DSORG=PS,MACRF=PM,                       X
               RECFM=FBA,LRECL=133,EXLST=EXLSTPRT
DDPARM   DC    A(LISTDCB+40)
         DC    A(WORKTIOT)
         DC    A(NODD)
WORKTIOT DC    A(0)
*
         LTORG
*
EXLSTPRT DC    0F'0',X'85',AL3(EXITPRT)
EXITPRT  EQU   *
         USING *,15
         USING IHADCB,1
         OC    DCBBLKSI,DCBBLKSI
         BNZR  14
         MVC   DCBBLKSI,DCBLRECL
         BR    14
         DROP  1,15
*
         PRINT NOGEN
IHADCB   DCBD  DSORG=PS,DEVD=DA
         END
*
         LTORG
*
EXLSTPRT DC    0F'0',X'85',AL3(EXITPRT)
EXITPRT  EQU   *
         USING *,15
         OC    DCBBLKSI,DCBBLKSI
         BNZR  14
         MVC   DCBBLKSI,DCBLRECL
         BR    14
         DROP  1,15
*
         PRINT NOGEN
IHADCB   DCBD  DSORG=PS,DEVD=DA
         END
