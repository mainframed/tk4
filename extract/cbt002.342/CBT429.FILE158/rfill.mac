/** RFILL boundary ****************************************** REXX **/
/*   Modified By: IAPPINI,R.                                        */
/*   When: 01/07/93                                                 */
/*   What: Added a SQUEEZE option that will "squeeze" out embedded  */
/*         blanks starting from the first non-blank character       */
/********************************************************************/
/*   Modified By: IAPPINI,R.                                        */
/*   When: 01/15/93                                                 */
/*   What: Replaced extensive code with the REXX functio JUSTIFY.   */
/*                                                                  */
/********************************************************************/
/*  FILL the text To max Right boundary with blank                  */
/*  Optional parm:Boundary , integer                                */
/*  Default boundary is the lrecl of dataset.                       */
/*  Takes block control characters "CC" or "MM"                     */
/*                                                                  */
/*  By CT Tran PD/PSI                 12/92                         */
/********************************************************************/
Address ISREDIT
"MACRO (BND parms) NOPROCESS"
Call Initialize
If ^squeeze Then Call Process_main
Else Call Squeeze_lines
Exit

Process_main:
   Do i = first To last
      "(line) = line  "i
      Call Space_out_line
      line = result
      "line "i"= (line)"
      End i
   If last > first Then Do
      shortmsg = "Filled "Trunc(first)"-"Trunc(last)
      zedlmsg = "Bound="bnd", "last-first+1 "lines processed"
      Address Ispexec "setmsg Msg(isrz001)"
      End
   Return;

Space_out_line:
   x_line = Substr(line,1,bnd)
   If lrecl > bnd Then r_line = Substr(line,bnd+1)
   Else r_line = ""
   w_line = Words(x_line)
   If w_line = 0 Then Return (x_line)
   last_word  = Word(x_line,Words(x_line))
   last_blank = Lastpos(last_word,x_line) + Length(last_word)
   x_line = Substr(x_line,1,last_blank-1) /* final string to process */
   Return (Justify(x_line,bnd) ×× r_line)

Initialize:
   bnd = Translate(bnd)
   If bnd ^= "" & datatype(bnd) ^= "NUM" Then Do
      zedsmsg = "Invalid parameter-boundary"
      zedlmsg = "Use a whole number > 0 for boundary"
      Address Ispexec "SETMSG Msg(isrz001)"
      Exit
      End
   "PROCESS RANGE M C"
   If rc >=16 Then Exit
   "(cmd) = range_cmd "
   "(first) = linenum .zfrange"
   "(last) = linenum .zlrange"
   "(lrecl) = lrecl           "
   If bnd = "" Then bnd = lrecl
   "(lb,rb) = BOUNDS"
   If bnd > rb Then Do
      zedsmsg = bnd "> rb"
      zedlmsg = "You specified a right boundary > then BNDS("rb")"
      Address "ISPEXEC" "SETMSG MSG(ISRZ001)"
      Exit
      End;
   If cmd = "" Then Do
      Say "Please verify that you want To fill whole dataset. Y or N"
      Parse External ans
      If Left(Translate(ans),1) ^= "Y" Then Do
         zedsmsg = "No process"
         zedlmsg = "You elected to NOT fill the whole dataset"
         Address Ispexec "SETMSG Msg(isrz001)"
         Exit
         End
      End
   proc_stmt = "PROC 0 SQUEEZE FORMAT"
   Call Proctso Translate(parms),proc_stmt
   Interpret result
   If squeeze ^= "" Then squeeze = 1
   Else squeeze = 0
   Return

Squeeze_lines:
   Do i = first To last
      "(line) = line  "i
      Select
         When Words(line) = 0 Then Nop
         When Words(line) = 1 Then,
            If left_blanks > 0 Then,
               line = Copies(" ",left_blanks) ××,
                   Space(Substr(line,left_blanks+1))
            Else line = Space(line)
         Otherwise Do
            left_blanks = Pos(Word(line,1),line)-1
            If left_blanks = 0 Then,
               line = Space(line)
            Else line = Copies(" ",left_blanks) ××,
                   Space(Substr(line,left_blanks+1))
            End
         End /* End of Select */
      "line "i"= (line)"
      End i
   If last > first Then Do
      zedsmsg = "Squeezed "Trunc(first)"-"Trunc(last)
      zedlmsg = "Bound="bnd", "last-first+1 "lines processed"
      Address Ispexec "setmsg Msg(isrz001)"
      End
   Return;
