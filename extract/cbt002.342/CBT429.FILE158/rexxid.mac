/*REXXID Rexx  Rexx  Rexx  Rexx  Rexx  Rexx  Rexx  Rexx  Rexx  Rexx */
"ISREDIT MACRO (PARMS)"
Trace "OFF"
Address "ISREDIT"
"(col1,col2) = DISPLAY_COLS"
If rc ^= 0 Then Do
   col1 = 1
   col2 = 72
   End
"(mbr) = Member"
"(row,col) = CURSOR"
xc = ((col2-5) - Length(mbr)) % 6
"CAPS OFF"
"NUM ON"
"(lb,rb) = BOUNDS"
"(recfm) = RECFM"
"BOUNDS = 1 72"
rexxline = "/* "mbr ×× COPIES(' Rexx ',xc) ×× "*/"
If row ^= 0 Then row = 0
Call Line_after rexxline
Call Line_after "Address ""TSO"""
Call Line_after "Trace ""OFF"""
Call Line_after "Arg p1"
Upper parms
Select
   When parms = "" Then Nop
   When Abbrev("ALL",parms) Then Call Insert_initial_code
   Otherwise Nop
   End /* End of Select ... */
Exit

Insert_initial_code:
   Call Line_after "Call Initialize"
   Call Line_after "Call Process_main"
   Call Line_after "Call Eoj"
   Call Line_after "Exit;"
   Call Line_after " "
   Call Line_after "Process_main:"
   Call Line_after "   Return;"
   Call Line_after " "
   Call Line_after "Initialize:"
   Call Line_after "   Parse Source environment function exec_name",
                   "whatdd whatdsn exec_cur,"
   Call Line_after "      env_default env_type supplied_name"
   Call Line_after "   If Sysvar(Sysispf) ^= ""ACTIVE"" Then Do"
   Call Line_after "      ""ISPF CMD(%""exec_name p1"")"""
   Call Line_after "      Exit "
   Call Line_after "      End"
   Call Line_after "   proc_stmt = ""PROC 0 parm1 ... parmn ""  "
   Call Line_after "   flags = "" FULLSCREEN QUIET""  "
   Call Line_after "   Call Proctso p1,proc_stmt flags          "
   Call Line_after "   Interpret result                         "
   Call Line_after "   say_cnt = 0                              "
   Call Line_after "   /* Set any optional processing flags */         "
   Call Line_after "   Do i_flag = 1 By 1 To Words(flags)              "
   Call Line_after "      xx = Word(flags,i_flag)                      "
   Call Line_after "      Interpret Word(flags,i_flag)""=""Set_flag(xx)"
   Call Line_after "      End i_flag;                                  "
   Call Line_after "      Interpret x ""=""Translate(flags,""+"","" "")"
   Call Line_after "      If x = 0 Then tso = 1                        "
   Call Line_after "   Return;"
   Call Line_after " "
   Call Line_after "Eoj:"
   Call Line_after "   If fullscreen Then,"
   Call Line_after "      Call Stemdisp ""BROWSE""," ×× ,
                         """SAY."",,,""Application Display Text"""
   Call Line_after "   Return;"
   Call Line_after " "
   Call Line_after "Say_msg:"
   Call Line_after "   Parse Arg msg                        "
   Call Line_after "   If ^fullscreen & ^Quiet Then Say msg "
   Call Line_after "   say_cnt = say_cnt + 1                "
   Call Line_after "   say.say_cnt = msg                    "
   Call Line_after "   Return                               "
   Call Line_after "                                        "

   Call Line_after " Set_flag:                              "
   Call Line_after "    Arg flag                            "
   Call Line_after "    Return (Value(flag) ^= """");       "
   Return;

Line_after:
   Parse Arg xx
   " LINE_AFTER "row" = (xx)"
   If rc = 0 Then,
       row = row + 1
   Return;
