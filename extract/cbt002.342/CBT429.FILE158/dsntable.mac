/** dsntable level stat save TLIB() ************************* Rexx **/
/*                                                                  */
/*  Level:    High level qualifier. Mask (*) allowed                */
/*  STAT:     Other statistic info created                          */
/*  SAVE:     Save to table DSNTABLE. TBLIB() required.             */
/*  TLIB:     Table library. Required with "SAVE" (no quote)        */
/*  OPEN:     Do not display table but leave open for               */
/*                  further processing.                             */
/*  Example:  DSNTABLE BI21ctt.C* STAT SAVE TLIB(BI21CTT.TABLES)    */
/*  By CT Tran 8/91.                                                */
/********************************************************************/
/********************************************************************/
/*   Modified By: IAPPINI,R.                                        */
/*   When: 08/28/91                                                 */
/*   What: Added DSN list capablity, ie, (dsn1 dsn2 ... dsnx)       */
/*                                                                  */
/********************************************************************/
arg otherparms
Parse Source . . cname .
If SysVar('SysISPF') ^= "ACTIVE"
  Then Do
    Address TSO "ISPF CMD(%"cname otherparms ") ",
    "NEWAPPL(Q34) PASSLIB"
    Exit (0)
    End
Address 'ISPEXEC'
"VGET (ZAPPLID)"
If zapplid ^= "Q34"  Then Do
    "SELECT CMD(%"cname otherparms ") NEWAPPL(Q34) PASSLIB"
    Exit (0)
    End /* zapplid*/
Upper  otherparms
TLIB = keywordv('TLIB(',otherparms)
If  wordpos('OPEN',otherparms) >0 Then open = 'OPEN'
Else open = ''
If  wordpos('SAVE',otherparms) >0 Then write = 'WRITE'
Else write= 'NOWRITE'
If  wordpos('STAT',otherparms) >0 Then stats = 'STATS'
Else stats = ''
Address TSO 'ACFVPUTT'
If window ^= '' Then center = center'('window')'
"VPUT CENTER SHARED"
Call remove "OPEN STAT SAVE "
If Left(otherparms,1) = '(' Then,
   Parse Upper Var otherparms '(' level ')' .
Else Parse Upper Var otherparms level .
If level      = '' Then Do
   'DISPLAY PANEL(DSNT1)'
   If rc > 0 Then Exit
   End
If write = 'WRITE' Then Do
   If tlib = '' Then  tlib = USERID()'.TABLES'
   If sysdsn("'"tlib"'") ^= 'OK' Then Exit
   "LIBDEF ISPTABL DATASET ID('"tlib"')"
   "LIBDEF ISPTLIB DATASET ID('"tlib"')"
   End
If substr(stats,1,4,' ') = 'STAT' Then Do;stats = 'YES';tabdis='DSNT3'
End
Else Do; tabdis = 'DSNT2'; stats = 'NO';End
If stats = 'YES' Then
   'TBCREATE DSNTABLE KEYS(DSNAME) NAMES(PREFIX QUAL2 QUAL3 QUAL4 ',
   'DSN TRKALLOC VOLUME TRKUSED DEVICE EXTENT DSORG CDATE ',
   'RECFM EDATE LRECL LRDATE BLKSIZE DSNTP)   REPLACE ' write
Else 'TBCREATE DSNTABLE KEYS(DSNAME)',
         ' NAMES(DSN PREFIX QUAL2 QUAL3 QUAL4 ) ',
         ' REPLACE ' WRITE
mlevel = Translate(level,' ',',') /* remove potential commas */
Do idsnl = 1 to words(mlevel)
   level = word(mlevel,idsnl)
   Call Build_level /* iterate on adding DSNs to the table */
   End
If open = '' Then Do
   ufunc1 =    " B 'BROWSE DATASET('dsn')'"
   ufunc2 =    " E 'EDIT   DATASET('dsn')'"
   ufunc3 =    " D  Address 'TSO' 'DELETE 'dsn ;",
               " If rc = 0 Then 'TBDELETE DSNTABLE'"
   ufunc4 =    " P Do; ",
               "'CONTROL DISPLAY SAVE'; ",
               "'ADDPOP ROW(3) COLUMN(10)';",
               "'DISPLAY PANEL(POPPRT)';" ,
               "'REMPOP' ;",
               "'CONTROL DISPLAY RESTORE';",
                "  Address 'TSO' ",
                "'PRT 'dsn ' DEST('DEST') ",
                    "COPIES('copies') ROOM('room') 'parms ztype;End;"
   ufunc5 =   "Address 'TSO' 'RECOVER 'dsn"
   'VPUT (UFUNC1 UFUNC2 UFUNC3 UFUNC4 UFUNC5) PROFILE '
   Call TBD 'table(DSNTABLE) nopcheck tabdis('tabdis,
   ') OPEN NOUPDATE VGET(UFUNC1 UFUNC2 UFUNC3 UFUNC4 UFUNC5) '
   End
If write = 'WRITE' & open = '' Then
'TBCLOSE DSNTABLE '
Else If WRITE = 'WRITE' & OPEN ^= '' Then 'TBSAVE  DSNTABLE '
Exit
Remove:
   arg p1
   Do i = 1  to words(p1)
      remi = word(p1,i)
      If remi  = '' Then leave
      x = wordpos(remi,otherparms)
      If x> 0 Then  otherparms = Delword(otherparms,x,1)
      End
   Return
Build_level:
   'LMDINIT LISTID(Q34) LEVEL('level')'
   If rc >0 Then Do
      say 'Invalid qualifier('level') or datasets do not exist'
      Return /* Exit may not be valid anymore */
      End
   cc = 0
   q34name = ''
   Do while cc = 0
      'LMDLIST LISTID('q34') STATS('stats') OPTION(LIST) DATASET(Q34NAME
      cc = rc
      Trace Off
      If cc = 0 Then Do
         dsn =  "'"q34name"'"
         dsname = q34name
         If stats = 'YES' Then Do
            dsntp =    zdldsntp
            TRKALLOC = zdlsize
            If zdlmigr = 'YES' Then volume = 'MIGRAT'
            Else volume = zdlvol;                   TRKUSED =  zdlused
            device = zdldev;                        extent =   zdlext
            dsorg =  zdldsorg;                      cdate  =   zdlcdate
            recfm =  zdlrecfm;                      exdate =   zdledate
            lrecl =  zdllrecl;                      lrefdate = zdllrdate
            blksize = zdlblksz
            End
         Parse Upper Var dsname prefix '.' qual2 '.' qual3 '.' qual4 '.'
         'TBADD DSNTABLE '
         End
      End
   'LMDFREE LISTID('Q34') '
   Return
