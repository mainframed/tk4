/* DSNMLIST*************************************************** Rexx */
/*   Modified By: IAPPINI,R.                                        */
/*   When: 06/08/93                                                 */
/*   What: Added MEMBERS() option; select member display            */
/*                                                                  */
/********************************************************************/
/* DSNMLIST*************************************************** Rexx */
/*   Created By: IAPPINI,R.                                         */
/*   When: 05/14/93                                                 */
/*   What: DSNMLIST, given a dataset name, complete or generic, will*/
/*         create an appropriate member statistic display (ala 3.1) */
/********************************************************************/
Trace "OFF"
Address "TSO"
Arg p1
Call Initialize
Call Process_dsns_list
Call Eoj
Exit

Process_dsns_list:
   Do i_dsnslist = 1 By 1 To Words(dsns)
      g_dsn = Word(dsns,i_dsnslist)
      Call Get_dsn_list g_dsn
      Select
         When dsn_list.0 = 0 Then Do
            Call Say_msg " No datasets found for "g_dsn"."
            End
         Otherwise Call Process_dsn_list
         End /* End of Select */
      End i_dsnslist;
   Return;

Process_dsn_list:
   #digits = Length(dsn_list.0)
   Do i_dsnlist = 1 By 1 To dsn_list.0
      /* Call Say_msg " " */
      ret_dsn = dsn_list.i_dsnlist
      xx = Listdsi("'"ret_dsn"' PREALLOC")
      /* Say ret_dsn "DSORG("sysdsorg")" */
      If sysdsorg ^= "PO" Then Do
         cc = "0"
         Call Say_msg cc ×× Right(i_dsnlist,#digits," "),
            "Dsn("ret_dsn")",
            "Dsorg("sysdsorg") has no members."
         End
      Else Do
         volume  = sysvolume
         Call Say_msg cc ×× Right(i_dsnlist,#digits," "),
            "Vol("volume") Dsn("ret_dsn")"
         If lv Then Do
            xx = Outtrap(tso.)
            Address "TSO" "LV '"ret_dsn"' A"
            xx = Outtrap("OFF")
            Do i_tso = 1 By 1 To tso.0
               Call Say_msg "   "Left(tso.i_tso,72)
               End i_tso
            End
         Call Get_member_list ret_dsn
         If #members_found = 0 Then,
            Call Say_msg " 0 members found for dataset "ret_dsn"."
         cc = "1"
         End;
      If (i_dsnlist // 10) = 0 Then, /* Do every 10 datasets */
         Call Save_display_partial
      End i_dsnlist;
   If (i_dsnlist // 10) ^= 0 Then,   /* Do remaining datasets */
      Call Save_display_partial
   Return;

Save_display_partial:
   If print × disk Then,
      Call Allocate_write_dsnmlist_disk
      Address "ISPEXEC"
   If fullscreen Then,
      Call Stemdisp "BROWSE","say.",,,dsnm_msg
   say. = ""
   say_cnt = 0
   Return;

Get_member_list:
   Arg dataset
   Address "ISPEXEC"
   "LMINIT DATAID(DAID) DATASET('"dataset"')"
   If rc ^= 0 Then Do
      Call Say_msg " 0Dataset("dataset") Error("rc")."
      Return;
      End;
   "LMOPEN DATAID("daid")"
   mbrname = " "
   "LMMLIST DATAID("daid") MEMBER(MBRNAME) STATS(YES) OPTION(LIST)"
   r_c = rc
/* *******************************************************************
-  MEMBER           TTR   VERS.MOD    CREATION      DATE AND TIME
    NAME           (HEX)    LEVEL       DATE        LAST MODIFIED
0 @DIR             003405
  ABENDAID         002E0C   01.00     93/03/09     93/03/09  06:42
 CURRENT      INITIAL     MODIFIED       USER
NO. LINES    NO. LINES    NO. LINES       ID
   20           20            0        BI21RI
   25           24            1        BI21RI
******************************************************************** */
   #members_found = 0 /* Reset for every DSN requested */
   Do i_memlist = 1 By 1 While r_c = 0
      Select
          When members ^= "" Then Call Member_select
          Otherwise Call Member_display
          End /* End of Select ... */
      "LMMLIST DATAID("daid") MEMBER(MBRNAME) STATS(YES)"
      r_c = rc
      End i_memlist
   "LMMLIST DATAID("daid") OPTION(FREE)"
   "LMCLOSE DATAID("daid")"
   Return;

Member_select:
   Do i_mem = 1 By 1 To Words(members)
      sel_mem = Word(members,i_mem)
      Select
         When Right(sel_mem,1) = "*" Then Do
            If Strip(Translate(sel_mem,"","*"),"B") =,
               Left(mbrname,Length(sel_mem)-1) Then,
               Call Member_display
            End;
         When mbrname = sel_mem Then Call Member_display
         Otherwise Nop
         End /* End of Select ... */
      End i_mem;
   Return;

Member_display:
   If #members_found = 0 Then Call Headings
   If Space(zlvers zlmod,0) = "" Then vermod = ""
   Else vermod = zlvers"."zlmod
   Call Say_msg "    "Left(mbrname,9)Center(vermod,8),
      zlcdate zlmdate zlmtime,
      Right(zlcnorc,7) Right(zlinorc,7) Right(zlmnorc,7),
      Right(zluser,7)
   #members_found = #members_found + 1;
   Return;

Headings:
   Call Say_msg "0   "Left("Member",9)Center("Ver.Mod",8),
      Center("Created",8) Center("Modified",14),
      Center("Record Counts",23) Left("Userid",7)
   Call Say_msg "    "Copies(" ",17),
      Center("Date",8) Center("Date/Time",14),
      Right("Cur",7) Right("Init",7) Right("Mod",7)
   Call Say_msg "    "Copies("-",8) Copies( "-",8) Copies("-",8),
      Copies("-",14),
      Copies("-",7) Copies("-",7) Copies("-",7),
      Copies("-",7)
   Return;

Get_dsn_list:
   Arg dataset
   Address "ISPEXEC"
   dataset = Strip(Translate(dataset,"","'"),"B")
   "LMDINIT LISTID(DSVAR) LEVEL("dataset")"
   r_c = 0
   dlist_opt = "LIST"
   ret_dsn =     ""
   dlist_stats = "YES"
   dsn_list. = ""
   "LMDLIST LISTID("dsvar") OPTION("dlist_opt") DATASET(RET_DSN)",
       "STATS("dlist_stats")"
   r_c = rc
   Do i_dsnlist  = 1 By 1 While r_c = 0
      dsn_list.i_dsnlist = ret_dsn;
      Select
         When r_c > 0 Then Leave i /* End of list */
         When zdlmigr ^= "YES" Then Do
              volume = zdlvol
              device = zdldev
              dsorg  = zdldsorg
              recfm  = zdlrecfm
              lrecl  = zdllrecl
              blksiz = zdlblksz
              size   = zdlsize
              extent = zdlext
              cdate  = zdlcdate
              edate  = zdledate
              rdate  = zdlrdate
              migr   = zdlmigr
             dsn_typ = zdldsntp
            End
         Otherwise  Do
            volume = "MIGRAT"
            End
         End /* End of Select .... */
      "LMDLIST LISTID("dsvar") OPTION("dlist_opt") DATASET(RET_DSN)",
          "STATS("dlist_stats")"
      r_c = rc
      End i_dsnlist
   dsn_list.0 = i_dsnlist - 1
   Return;

Say_msg:
   Parse Arg msg
   Select
      When queue Then Queue msg
      When (^fullscreen & ^Quiet) Then Say msg
      Otherwise Nop
      End /* End of Select ... */
   say_cnt = say_cnt + 1
   say.say_cnt = msg
   Return

Eoj:
   Address "TSO"
   If queue Then Queue "" /* Data Stack separator */
   If print Then Do
      If Sysvar(Sysenv) ^= "FORE" Then,
         "%PRT "dsnmlist "DEST("acfdest")"
      Else "%QPRT" dsnmlist
      "DELETE "dsnmlist
      End
   Return;

Allocate_write_dsnmlist_disk:
   If Sysdsn(dsnmlist) ^= "OK" Then Do;
      "ALLOC FI(DSNMLIST) DA("dsnmlist") UNIT(DISK) RECFM(F B A)",
          "SPACE(15 5) BLKSIZE(1330) LRECL(133) TRACK  REUSE"
      End;
   Else,
      "ALLOC FI(DSNMLIST) DA("dsnmlist") SH REUSE MOD"
   "EXECIO * DISKW DSNMLIST (STEM SAY. FINIS)"
   "FREE FI(DSNMLIST)"
   Return;

Initialize:
   Parse Source environment . exec_name .
   If Sysvar(Sysispf) ^= "ACTIVE" Then Do
      "ISPF CMD(%"exec_name p1")"
      Exit
      End
   "ACFVPUTT"
   proc_stmt = "PROC 1 DSNS MEMBERS()"
   more_options = "FULLSCREEN QUIET LV  DISK PRINT QUEUE"
   Call Proctso p1,proc_stmt more_options
   Interpret result
   If proctso_msg ^= "" Then Do
      Say proctso_msg
      Say "Valid options are: "Subword(proc_stmt,3)
      Exit
      End
   say_cnt = 0
   cc = "0"
   /* Set option flags */
   Do i_flag = 1 By 1 To Words(more_options)
      Interpret Word(more_options,i_flag) "=",
                Set_flag(Word(more_options,i_flag) )
      End i_flag;
   dsnm_msg = "1Dsn/Member list("Date() Time()") for" dsns
   Call Say_msg dsnm_msg
   dsns = Strip(Translate(dsns,"","(),"),"B")
   members = Space(Translate(members,"","(,)"))
   dsnmlist = "DSNMLIST."Dtqual()
   If ^quiet & disk Then,
      Say "DSNMLIST information will be saved in "dsnmlist"."
   If queue Then "DELSTACK" /* Initialize Data Stack */
   Return;

Set_flag:
   Arg flag
   Return (Value(flag) ^= "")
