/* KEYWORDV*************************************************** Rexx */
/*   Created By: IAPPINI,R.                                         */
/*   When: 02/02/93                                                 */
/*   What: KEYWORDV, a REXX exec, that will return a VALUE          */
/*         associated with a specified KEYWORD.                     */
/*                                                                  */
/*         The VALUE will be a null, the keyword name, or the       */
/*         contents to the Right of an = sign and/or data bounded   */
/*         by parenthesises.                                        */
/*                                                                  */
/*   Options:                                                       */
/*         1. the KEYWORD                                           */
/*         2. the WORD string to SEARCH                             */
/*                                                                  */
/********************************************************************/
Address "TSO"
Keywordv:
Trace  "OFF"
If Arg() = 1 Then Parse Arg match against
Else Parse Arg match, against
Upper match
If Length(against) = 0 Then Return("")
#keyw = Words(against)
If #keyw = 0 Then Return("")
Call Parsetok against,"TOK.","(=)',","B"
Do i = 1 By 1 To tok.0
   t_m = Translate(tok.i)  /* Change to UPPER case for keyword match */
   If Abbrev(match,t_m) Then Do
      Call Get_keyword_value
      Return (result)
      End
   Else Do
      Call Get_keyword_value /* Position on Next keyword */
      j = i + 1
      If tok.j ^= "," Then i = i - 1
      End
   End i
   Return ("") /* KEYWORD not found */

Get_keyword_value:
   value = ""
   i = i + 1
   Select
      When tok.i = "=" Then Call Value_equal
      When tok.i = "(" Then Call Value_paren
      When tok.i = "'" Then Call Value_quote
      Otherwise Return (match)
      End /* End of Select ... */
   Return (result) /* KEYWORD not found */

Value_equal: /* Syntax: keyword = */
   Do i = i + 1 By 1 To tok.0
   Select
      When tok.i = "'" Then Call Value_quote
      When tok.i = "(" Then Call Value_paren
      Otherwise Return (tok.i)
      End /* End of Select ... */
   Return (result)


VaLue_paren:  /* Syntax: keyword=() × keyword() */
   open = 1   /* must have found at least 1 open parenthesis */
   value = ""
   Do i = i + 1 By 1 To tok.0
      Select
         When tok.i = ")" Then Do
            open = open - 1
            If open = 0 Then Return (value)
            End
         When tok.i = "(" Then open = open + 1
         Otherwise Nop
         End /* End of Select ... */
      value = value ×× tok.i
      End i
   Return (value)

VaLue_quote:  /* Syntax: keyword=' ' × keyword' ' */
   open = 1   /* must have found at least 1 open quote       */
   value = ""
   Do i = i + 1 By 1 To tok.0
      tok_1 = tok.i
      k = i + 1     /* next token */
      tok_2 = tok.k
      Select
         When tok_1 ×× tok_2 = "''" Then Do
            value = value"''"  /* add in first quote */
            i = k             /* Set index for the second quote */
            End
         When tok_1 = "'" Then Do
            open = open - 1
            If open = 0 Then Return (value)
            Else Do
               If tok_1 = " " Then value = value" "
               Else value = value ×× tok.i
               End
            End
         Otherwise Do
            If tok_1 = " " Then value = value" "
            Else value = value ×× tok.i
            End
         End /* End of Select ... */
      End i
   Return (Strip(value,"B"))
