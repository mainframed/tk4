//XXXXXX    JOB
//ASM       EXEC ASMFCL,
//          PARM.ASM='NODECK,OBJ,XREF(FULL)',
//          PARM.LKED=(XREF,LET,LIST)
//ASM.SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//ASM.SYSPRINT DD SYSOUT=X
//ASM.SYSPUNCH DD DUMMY
//ASM.SYSIN    DD *
         TITLE 'SSXTEND - INSERT STRING INTO JOB CARD'
*
*        SSXTEND WILL COPY SELECTED MEMBERS FROM ONE PDS TO ANOTHER.
*    THE COPIED MEMBERS WILL HAVE THEIR JOB CARDS EXTENDED. OUR
*    PURPOSE IN DOING THIS WAS TO ALLOW THE INSERTION OF THE 'USER'
*    AND 'PASSWORD' PARAMETERS AS VARIOUS SYSTEMS CONVERTED TO RACF.
*    MEMBERS TO BE COPIED ARE SELECTED ON THE BASIS OF THE FIRST TWO
*    LETTERS OF THEIR MEMBER NAME. COLUMNS ONE AND TWO OF THE INPUT
*    DATASET 'PREFIX' DETERMINE MEMBER SELECTION.  UP TO TWENTY FIVE
*    TWO LETTER PREFIXES ARE ALLOWED. THE CARD IMAGES TO BE INSERTED
*    ARE READ FROM THE DATASET 'INSERT'. UP TO THREE CARDS ARE
*    ALLOWED.  A COMMA WILL BE ADDED TO THE LAST CARD IMAGE OF THE
*    ORIGINAL JOB CARD AND ANY DATA FROM 'INSERT' WILL FOLLOW. COLUMNS
*    73 - 80 ARE UPDATED TO REFLECT SEQUENCE CHANGES. ISPF/SPF USER
*    DATA WILL UPDATED BY THE SUBROUTINE 'UPDATE'. THE SINGLE BRANCH
*    TO THIS SUBROUTINE IS CLEARLY MARKED.  USER DATA IN ANY FORMAT
*    SHOULD BE SUCCESSFULLY COPIED WITHOUT THIS ROUTINE.
*
*        THIS PROGRAM IS OFFERED 'AS IS' AND ALTHOUGH WE ARE UNAWARE
*   OF ANY PROGRAM PROBLEMS WE SUGGEST THAT THIS PROGRAM BE RUN BY
*   SYSTEMS PEOPLE AND THAT APPROPRIATE BACKUPS ARE TAKEN. THE 'BEFORE'
*   AND 'AFTER' IMAGES ARE PRINTED AND SHOULD BE CHECKED FOR ERROR
*   MESSAGES AS WELL AS FOR CORRECT PROGRAM OPERATION.
*
*        ANY COMMENTS, QUESTIONS OR SUGGESTED IMPROVEMENTS ARE WELCOME.
*
*                    GEORGIA DEPT. OF LABOR
*                    SYSTEMS SUPPORT - ROOM 370
*                    254 WASHINGTON ST.
*                    ATLANTA, GA.
*                    30334
*                           ATTN.  CHRIS MCFADDEN
         EJECT
SSXTEND CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING *-6,R12
         LA    R7,SAVEAREA
         ST    R13,4(R7)
         ST    R7,8(R13)
         LR    R13,R7
         USING SAVEAREA,R13
*
         OPEN  (INLIB,,PREFIX,,INSERT,,REPORT,OUTPUT,OUTLIB,OUTPUT)
         LA    R3,OUTLIB                OUTPUT PDS DCB
         LA    R3,62(R3)                ADDRESS OF BLKSIZE
         ST    R3,BLKSZDCB              SAVE IT
         MVC   BLKSIZE+2(2),0(R3)       ALSO SAVE THE ACTUAL BLKSIZE
         LA    R3,20(R3)                ADDRESS OF LRECL
         MVC   LRECL+2(2),0(R3)         SAVE THE LRECL
         L     R3,LRECL
         BCTR  R3,R0                    USED IN EXECUTE INSTRUCTION
         ST    R3,EX$AMT
         CLC   LRECL,=F'256'            MVCL NOT USED HERE
         BL    LRECL$OK
*
         WTO   '===============================================',      X
               ROUTCDE=11
         WTO   'LRECLS IN EXCESS OF 255 BYTES ARE NOT SUPPORTED',      X
               ROUTCDE=11
         WTO   '    FOR OUTPUT LIBRARIES - JOB TERMINATING     ',      X
               ROUTCDE=11
         WTO   '===============================================',      X
               ROUTCDE=11
*
         CLOSE (INLIB,,INLIB2,,OUTLIB,,PREFIX,,REPORT,,INSERT,)
         L     R15,=F'12'
         L     R13,4(R13)
         RETURN (14,12),RC=(15) COMPLETION CODE 12
*
LRECL$OK EQU   *
         LA    R10,INLIB2
         USING IHADCB,R10
         OPEN  ((R10),(INPUT))
         GETBUF (R10),(R9)
         ST    R9,BUFADDR                SAVE BUFFER ADDRESS
         L     R3,BLKSIZE
         GETMAIN R,LV=(3)                GET OUTPUT BUFFER
         ST    R1,OUTBUFFR
*
         TIME  DEC
         ST    R0,SPFTIME                SAVE FOR ISPF STATISTICS
         ST    R1,SPFDATE                SAVE FOR ISPF STATISTICS
         ST    R1,DWORK                  INITIALIZE
         UNPK  YEAR1J(5),DWORK              HEADERS
         MVI   JULF1,C' '                      AND
         MVI   OPTION,C'2'                       PRINT
         CALL  DATEMVS,(DATECONV)     *** CONVERT TO GREGORIAN ***
         MVC   MM1,MNTHOUTG
         MVC   DD1,DAYOUTG
         MVC   YY1,YEAROUTG
         MVC   RUNDATE,PRTDATE
         BAL   R2,HEADRT
*
         LA    R5,PREFXTBL
         XR    R6,R6
BLDTABLE EQU   *
         GET   PREFIX,PREFXIN
         MVC   0(2,R5),PREFXIN    LOAD TABLE
         LA    R5,2(R5)             OF SELECTED
         LA    R6,1(R6)                  PREFIXES
         C     R6,MAXTABLE    TABLE OVERFLOW ?
         BNH   BLDTABLE
*
         PUT   REPORT,OVFLOMSG      INDICATE OVERFLOW
         AP    LINECNT,=P'3'
*
TBLDONE  EQU   *
         ST    R6,TABLEND
*
         LA    R5,CARDBUFR
         XR    R6,R6
*
LDCARDS  EQU   *
         GET   INSERT,CARDIN
         MVC   0(80,R5),CARDIN     LOAD TABLE
         LA    R5,80(R5)             OF CARD IMAGES
         LA    R6,1(R6)                TO BE INSERTED
         C     R6,MAXCARDS        TABLE OVERFLOW ?
         BNH   LDCARDS
*
         PUT   REPORT,CARDSOV       INDICATE OVERFLOW
         AP    LINECNT,=P'3'
*
LASTCARD EQU   *
         ST    R6,NUMADDED
         LA    R6,1(R6)               MODIFIED = INSERTED + COMMA
         ST    R6,NUMODIFY            SAVE FOR STOW LIST
*
GETNR    EQU   *
         GET   INLIB
         LH    R7,0(R1)                GET LENGTH USED
         LA    R7,0(R7,R1)             GET END OF USED BUFFER
         LA    R4,2(R1)                LOAD INITIAL NAME IN BLK
*
GETNM    EQU   *
         CLC   0(2,R4),=X'FFFF'        IS IT END OF DIR
         BE    ENDJ                    YES WRAP UP
*
         L     R8,TABLEND
         LA    R9,PREFXTBL
*
SCANTBL  EQU   *
         CLC   0(2,R4),0(R9)           SELECTED PREFIX ?
         BE    SELECTED
         LA    R9,2(R9)
         BCT   R8,SCANTBL
*
         B     NOTSEL
*
MVC$USER MVC   0(0,R11),12(R4)         MOVE USERDATA TO STOW LIST
*
SELECTED EQU   *
         MVC   MEMNAME,0(R4)           MOVE NAME TO WORK AREA
         MVC   LIST(12),0(R4)          LOAD STOW LIST
         CLI   CBYTE,X'00'             NO USERDATA ?
         BE    SKIPUPDT
*
         XR    R2,R2                   GET NUMBER OF
         IC    R2,CBYTE                HALFWORDS OF
         N     R2,DATALNGH                  USERDATA
         AR    R2,R2                   CONVERT TO BYTES
         BCTR  R2,R0                   REDUCE FOR EX INSTRUCTION
         LA    R11,USERDATA            MOVE USERDATA
         EX    R2,MVC$USER               TO STOW LIST
*
*********************************************************************
*********************************************************************
***  THIS ROUTINE SHOULD BE OMITTED FOR NON SPF/ISPF MEMBERS      ***
***                                                               ***
         BAL   R2,UPDATE               UPDATE ISPF STATISTICS     ***
***                                                               ***
*********************************************************************
*********************************************************************
*
SKIPUPDT EQU   *
         PUT   REPORT,MEMBERID
         AP    LINECNT,=P'1'
*
         BAL   R2,PROCESS              MOVE MEMBER TO NEW PDS
*
         MVI   SPACECC,X'19'           SPACE 3
         PUT   REPORT,SPACE
         MVI   SPACECC,X'09'           SPACE 1
         AP    LINECNT,=P'3'
         CP    LINECNT,=P'45'
         BL    NOTSEL
         BAL   R2,HEADRT              NEXT PAGE
*
NOTSEL   EQU   *
         NI    11(R4),X'1F'            MASK OFF NON LENGTH BITS
         SR    R6,R6                   CLEAR REG 6
         IC    R6,11(R4)               PUT NUM HALF WORDS IN REG
         LA    R4,12(R4,R6)            ADD 12 BYTES AND NUM
         LA    R4,0(R4,R6)                 HALF WORDS IN REG 6
         CR    R4,R7                   END OF BUFFER
         BL    GETNM                   NO, GET NEXT NAME
         B     GETNR                   GET NEXT DIR RECORD
*
ENDJ     EQU   *
         CLOSE (INLIB,,INLIB2,,OUTLIB,,PREFIX,,REPORT,,INSERT,)
         L     R13,4(R13)
         RETURN (14,12),RC=0
         EJECT
*
*
*
PROCESS  EQU   *
         ST    R2,SAVEREG2
         MVC   JOBSLOT(5),=X'FFFFFFFFFF'  OVERLAYED IF JOBCARD FOUND
         MVI   NOGO,C'N'           RESET INSERT FAILURE INDICATOR
         MVC   B4AFTER,=C'BEFORE'  INITIALIZE DETAIL LINE
         XR    R5,R5               TOTALS LRECL'S TO BUFFER
         L     R11,OUTBUFFR        ADDRESS OF GETMAINED BUFFER
         L     R9,BUFADDR          ADDRESS BUFFER
         FIND  (R10),MEMNAME,D     FIND MEMBER DESIRED
         LTR   R15,R15             MEMBER FOUND
         BZ    RECGET
*
         ABEND 0100,DUMP
*
RECGET   EQU   *
         READ  JOBDECB,SF,(R10),(R9),'S'   READ A BLOCK
         CHECK JOBDECB
         LH    R8,DCBBLKSI
         LH    R3,DCBLRECL
         L     R6,JOBDECB+16       DECIOBPT FIELD OF JOBDECB
         SH    R8,14(R6)           SUBTRACT BYTE COUNT FROM IOBCSW
*                                  R8 NOW CONTAINS TRUE BLOCK SIZE READ
         LR    R6,R9               MOVE R9 TO WORK REG
PUTLOOP  EQU   *
         SR    R8,R3               SUBTRACT LRECL TO GET REMAIN BLKSIZE
         BM    RECGET              GET NEXT BLOCK
*
PUTLREC  EQU   *
         C     R5,BLKSIZE          FULL BLOCK READY ?
         BNE   MOVE2BUF
         LA    R2,NEXTINST         WRITEOUT IS ALSO A SUBROUTINE
*
WRITEOUT EQU   *
         L     R11,OUTBUFFR        READDRESS OF GETMAINED BUFFER
         WRITE DECB1,SF,OUTLIB,(11)      LOAD OUTPUT PDS
         CHECK DECB1
         BR    R2                   GO TO EITHER NEXTINST OR WRITEBLK
*
NEXTINST EQU   *
         CLI   SHORTBLK,C'Y'       SHORT BLOCK WRITTEN - READY TO STOW
         BE    FIXBLK
         XR    R5,R5               GET READY FOR THE NEXT BLOCK
*
MOVE2BUF EQU   *
         BAL   R2,INSERTIT         SEARCH FOR JOBCARD AND INSERT
         L     R1,EX$AMT           ONE LESS THAN LRECL
         EX    R1,EX$MVC           LOAD OUTPUT BUFFER
         A     R5,LRECL            LRECL COUNTER
         A     R11,LRECL           UPDATE BUFFER POINTER
*
         LA    R6,0(R6,R3)         ADD LRECL TO CURRENT BUFFER POINTER
         B     PUTLOOP
*
EX$MVC   MVC   0(0,R11),0(R6)      LOAD OUTPUT BUFFER
*
TASKEND  EQU   *
         CLC   JOBSLOT(5),=X'FFFFFFFFFF'   JOBCARD FOUND ?
         BNE   FOUND
         PUT   REPORT,NOJOBMSG     INDICATE JOBCARD NOT FOUND
         AP    LINECNT,=P'1'
*
FOUND    EQU   *
         LTR   R5,R5               IS THERE A SHORT BLOCK TO BE WRITTEN
         BE    STOW                NO
         ST    R5,WORK5            SAVE SHORT BLOCKSIZE
         L     R5,BLKSZDCB         ADDRESS OUTPUT DCB BLKSIZE
         MVC   0(2,R5),WORK5+2     INSERT NEW BLKSIZE
         MVI   SHORTBLK,C'Y'       INFORM WRITE ROUTINE
         LA    R2,NEXTINST         WRITEOUT IS ALSO A SUBROUTINE
         B     WRITEOUT            WRITE SHORT BLOCK
*
FIXBLK   EQU   *
         MVI   SHORTBLK,C'N'       RESET FLAG
         MVC   0(2,R5),BLKSIZE+2   RESET OUTPUT BLOCKSIZE IN DCB
*
STOW     EQU   *
         L     R2,SAVEREG2          PREPARE FOR RETURN
         STOW  OUTLIB,LIST
*
         A     R15,BRANCHPT
         BR    R15                EVALUATE RETURN CODE
*
BRANCHPT DC    A(*+4)
         BR    R2                 STOW OK - RETURN
         DC    C'=>'              <= IS AN ARROW !
         B     DUPENAME           DUPLICATE NAME IN DIRECTORY
         B     NA                 RETURN CODE 8 IS NOT DOCUMENTED
         PUT   REPORT,SPACEMSG    NO SPACE IN DIRECTORY
         CLOSE (REPORT,,OUTLIB,,INLIB,,INLIB2,,PREFIX,,INSERT,)
         L     R15,=F'12'
         L     R13,4(R13)
         RETURN (14,12),RC=(15) COMPLETION CODE 12
*
DUPENAME EQU   *
         PUT   REPORT,DUPEMSG      INFORM USER OF DUPLICATE NAME
         AP    LINECNT,=P'1'
         STOW  OUTLIB,LIST,D       DELETE OLD ENTRY
         LTR   R15,R15
         BE    STOW                RE-ATTEMPT THE STOW
*
         ABEND 0200,DUMP
*
NA       EQU   *
         PUT   REPORT,NAMSG         INVALID RETURN CODE
         CLOSE (REPORT,,OUTLIB,,INLIB,,INLIB2,,PREFIX,,INSERT,)
         ABEND 0300,DUMP
*
*
*
UPDATE   EQU   *
         XR    R9,R9                 CLEAR R9
         IC    R9,1(R11)             MODIFICATION #
         LA    R9,1(R9)                IS UPDATED
         CVD   R9,MODNO              SAVE FOR COLUMNS 73 - 80
         MVC   COPY1,MASK1
         ED    COPY1,MODNO+4
         ICM   R9,B'0010',0(R11)     NOW GET VERSION
         STH   R9,0(R11)             UPDATE STOW LIST
*
         MVC   8(4,R11),SPFDATE      MODIFICATION DATE
         MVC   12(2,R11),SPFTIME     MODIFICATION TIME
*
         LH    R9,14(R11)            INITIAL SIZE
         A     R9,NUMADDED           # LINES ADDED
         STH   R9,14(R11)            UPDATE STOW LIST
*
         MVC   18(2,R11),NUMODIFY+2  # OF LINES MODIFIED
         MVC   20(7,R11),=C'SSXTEND'    WHO MODIFIED MEMBER
*
         BR    R2
*
*
*
INSERTIT EQU   *
         STM   R2,R4,HOLDREGS
         CLI   COMMA$IN,C'Y'          IS COMMA INSERTED ?
         BE    NEXTCARD                 YES, MOVE IN NEW CARDS
         CLI   JOBFND,C'Y'            MULTI-CARD JOBCARD ?
         BE    FNDEND                   YES, SEARCH FOR END
*
         CLC   0(3,R6),=C'// '        NO JOBNAME
         BE    INSRTXIT               GET OUT
         CLC   0(3,R6),=C'//*'        COMMENT
         BE    INSRTXIT               GET OUT
         CLC   0(2,R6),=C'//'         NOT JCL
         BNE   INSRTXIT               GET OUT
*
         L     R3,=F'68'              NUMBER OF POSITIONS TO SCAN
         LR    R2,R6                  ADDRESS CARD IMAGE
         LA    R2,3(R2)               SKIP //X
*
CARDSCAN EQU   *
         CLC   0(5,R2),=C' JOB '      JOBCARD ?
         BE    JOBCARD
*
         LA    R2,1(R2)               CONTINUE SCAN
         BCT   R3,CARDSCAN
*
         B     INSRTXIT               JOBCARD NOT YET FOUND
*
JOBCARD  EQU   *
         MVC   JOBSLOT,0(R6)          PRINT 'BEFORE' IMAGE
         PUT   REPORT,DETAIL
         AP    LINECNT,=P'1'
         MVC   B4AFTER,B4AFTER-1      CLEAR OUT 'BEFORE' PRINT AREA
         MVC   PRTBUFFR,IMAGACON      ADDRESS 'AFTER' BUFFER AREA
         LA    R2,5(R2)               SKIP ' JOB '
         S     R3,=F'5'               ADJUST BCT REGISTER
         MVI   QUOTES,C'N'            RESET FLAG
         CLI   0(R2),X'7D'            BEGINNING QUOTE ?
         BNE   CARDTEST               NO, ENTER PRIMARY SCAN OF JOBCARD
         MVI   QUOTES,C'Y'            INDICATE YES
         B     SCANEND                CHECK NEXT BYTE
*
CARDTEST EQU   *
         CLI   0(R2),X'7D'             QUOTE FOUND ?
         BNE   NOQUOTE                 NO
         CLI   QUOTES,C'Y'             YES, BEGINNING OR ENDING ?
         BE    ENDQUOTE
         MVI   QUOTES,C'Y'             BEGINNING QUOTE
         B     SCANEND                 CHECK NEXT BYTE
*
ENDQUOTE EQU   *
         MVI   QUOTES,C'N'             ENDING QUOTE
         B     SCANEND                 CHECK NEXT BYTE
*
NOQUOTE  EQU   *
         CLI   QUOTES,C'Y'             ARE WE WITHIN A QUOTE ?
         BE    SCANEND                 YES, CHECK NEXT BYTE
*
         CLC   0(2,R2),=C', '          IS JOBCARD ALREADY CONTINUED ?
         BE    CARDCONT                YES, FLAG JOBCARD FOUND
*
         CLC   0(2,R2),=C'  '          CAN WE INSERT COMMA ?
         BE    SPACEFND                YES
*
SCANEND  EQU   *
         LA    R2,1(R2)
         BCT   R3,CARDTEST
*
         MVI   NOGO,C'Y'               CAN'T INSERT COMMA - NO SPACE
         PUT   REPORT,NOGOMSG          INDICATE THIS
         AP    LINECNT,=P'1'
         B     INSRTXIT
*
CARDCONT EQU   *
         L     R4,PRTBUFFR             NEXT AREA IN BUFFER
         MVC   0(80,R4),0(R6)          LOAD IT
         LA    R4,80(R4)               UPDATE
         ST    R4,PRTBUFFR                 POINTER
*
         MVI   JOBFND,C'Y'             JOBCARD FOUND BUT CARD CONTINUED
         BE    INSRTXIT                COMMA WILL HAVE TO WAIT
*
SPACEFND EQU   *
         MVI   0(R2),C','              COMMA INSERTED
         MVI   COMMA$IN,C'Y'
*
         LA    R2,JOBSLOT+72           SEQUENCE NUMBERS
         L     R3,=F'8'
*
SCAN7380 EQU   *
         CLI   0(R2),X'F0'
         BL    EXIT7380
         CLI   0(R2),X'F9'            VALID SEQUENCE NUMBERS ?
         BH    EXIT7380
         BCT   R3,SCAN7380
*
         MVC   78(2,R6),COPY1+6       UPDATE MODIFICATION NUMBER
         MVI   NUMBERED,C'Y'          TESTED IN 'NEXTCARD'
*
EXIT7380 EQU   *
         L     R4,PRTBUFFR             NEXT AREA IN BUFFER
         MVC   0(80,R4),0(R6)          LOAD IT
         LA    R4,80(R4)               UPDATE
         ST    R4,PRTBUFFR                 POINTER
*
         B     INSRTXIT                WRITE THIS AND WAIT TO INSERT
*
FNDEND   EQU   *
         L     R3,=F'69'               # OF BYTES TO SCAN
         LR    R2,R6                   ADDRESS CARD IMAGE
         LA    R2,2(R2)                SKIP //
         MVC   JOBSLOT,0(R6)           PRINT 'BEFORE' IMAGE
         PUT   REPORT,DETAIL
         AP    LINECNT,=P'1'
*
FNDLOOP  EQU   *
         CLI   0(R2),C' '              HAS DATA STARTED YET ?
         BNE   CARDTEST                YES RETURN TO PRIMARY SCAN
         LA    R2,1(R2)                TEST NEXT BYTE
         BCT   R3,FNDLOOP
*
         B     INSRTXIT                BLANK CARD
*
INSRTMVC MVC   0(0,R11),0(R4)          MVC TO BUFFER VIA 'EX'
*
NEXTCARD EQU   *
         CLI   NUMBERED,C'N'               SEQUENCE NUMBERS ?
         BE    NONUM
*
         MVC   JOBNUM,JOBSLOT+72           LOAD
         MVC   JOBNUM+6(2),COPY1+6            DUMMY
         MVI   JOBNUM+5,C'1'                      SEQUENCE
         MVC   CARDBUFR+72(8),JOBNUM                  NUMBERS
         MVI   JOBNUM+5,C'2'
         MVC   CARDBUFR+152(8),JOBNUM
         MVI   JOBNUM+5,C'3'
         MVC   CARDBUFR+232(8),JOBNUM
*
NONUM    EQU   *
         LA    R4,CARDBUFR             FIRST CARD TO BE INSERTED
         L     R3,NUMADDED             NUMBER OF CARDS
*
LOOPOINT EQU   *
         L     R1,EX$AMT               LRECL -1
         EX    R1,INSRTMVC             MOVE CARD TO BUFFER
         A     R5,LRECL                UPDATE BUFFER SIZE POINTER
         A     R11,LRECL               UPDATE BUFFER POINTER
         A     R4,=F'80'               ADDRESS NEXT CARD
         C     R5,BLKSIZE              BLOCK FULL
         BE    WRITEBLK                YES
*
LOOPCONT EQU   *
         BCT   R3,LOOPOINT
*
         PUT   REPORT,SPACE
         AP    LINECNT,=P'1'
         CLI   NOGO,C'Y'               CAN WE INSERT ?
         BNE   SHOWCHNG
         B     JOBDONE
*
SHOWCHNG EQU   *
         MVC   B4AFTER,=C'AFTER '      PRINT
         MVC   JOBSLOT,OUTIMAGE          'AFTER'
         PUT   REPORT,DETAIL                 IMAGE
         AP    LINECNT,=P'1'
         MVC   B4AFTER,B4AFTER-1       CLEAR OUT 'AFTER'
*
         LA    R2,OUTIMAGE             ADDRESS 'AFTER' BUFFER
*
AFTRLOOP EQU   *
         LA    R2,80(R2)
         C     R2,PRTBUFFR
         BE    JCLPRT
         MVC   JOBSLOT,0(R2)          PRINT ORIGINAL
         PUT   REPORT,DETAIL              AND MODIFIED JCL
         AP    LINECNT,=P'1'
         B     AFTRLOOP
*
JCLPRT   EQU   *
         L     R3,NUMADDED
         LA    R2,CARDBUFR
*
PRTADDED EQU   *
         MVC   JOBSLOT,0(R2)           PRINT INSERTED CARD
         PUT   REPORT,DETAIL
         AP    LINECNT,=P'1'
         LA    R2,80(R2)               ADDRESS NEXT CARD
         BCT   R3,PRTADDED
*
JOBDONE  EQU   *
         PUT   REPORT,SPACE
         AP    LINECNT,=P'1'
         CP    LINECNT,=P'45'
         BL    MORESPC
         BAL   R2,HEADRT
*
MORESPC  EQU   *
         MVC   B4AFTER,=C'BEFORE'
         MVI   COMMA$IN,C'N'           RESET FOR
         MVI   JOBFND,C'N'                NEXT JOBCARD
         MVI   NUMBERED,C'N'
         MVC   CARDBUFR+72(8),=C'        '    CLEAR
         MVC   CARDBUFR+152(8),=C'        '   SEQUENCE
         MVC   CARDBUFR+232(8),=C'        '   NUMBERS
         B     INSRTXIT
*
WRITEBLK EQU   *
         BAL   R2,WRITEOUT             WRITE BUFFER
         XR    R5,R5                   RESET BUFFER SIZE POINTER
         B     LOOPCONT
*
INSRTXIT EQU   *
         LM    R2,R4,HOLDREGS
         BR    R2
*
*
*
HEADRT   EQU   *
         PUT   REPORT,FORMTOP
         AP    PAGECNT,=P'1'
         MVC   COPY,MASK
         ED    COPY,PAGECNT
         MVC   PAGENO,COPY+5
         PUT   REPORT,HEAD1
         PUT   REPORT,HEAD2
         ZAP   LINECNT,=P'5'
         BR    R2
*
         EJECT
*********************************************************************
*********************************************************************
*    THIS AREA IS ADDRESSED BY REGISTER 13
SAVEAREA DS    18F
*
HEAD1    DS    0CL133                   TOP OF FORM IS OBTAINED
         DC    X'09'                    BY USING AN '8B' CARRIAGE
         DC    CL9'RUN DATE '           CONTROL WITH LINE OF SPACES
RUNDATE  DC    CL8'XXXXXXXX'            PRIOR TO THE HEAD1 PUT.
         DC    35C' '
         DC    CL27'GEORGIA DEPARTMENT OF LABOR'
         DC    45C' '
         DC    CL5'PAGE '
PAGENO   DC    CL3'NNN'
*
HEAD2    DS    0CL133
         DC    X'19'
         DC    CL9'PROGRAM: '
         DC    CL8'SSXTEND'              PROGRAM ID
         DC    31C' '
         DC    CL35'    JOB CARD EXTENTION UTILITY     '
         DC    49C' '
*
MEMBERID DS    0CL133
         DC    X'09'
         DC    CL8'MEMBER: '
MEMNAME  DC    CL8'XXXXXXXX'
         DC    116C' '
*
DETAIL   DS    0CL133
         DC    X'09'
         DC    18C' '
B4AFTER  DC    CL6'XXXXXX'
         DC    3C' '
JOBSLOT  DC    CL80' '
         DC    25C' '
*
NOGOMSG  DS    0CL133
         DC    X'09'
         DC    31C' '
         DC    CL50'* * *  UNABLE TO INSERT COMMA - MEMBER COPIED BUT '
         DC    CL18'NOT MODIFIED * * *'
         DC    32C' '
*
OVFLOMSG DS    0CL133
         DC    X'19'
         DC    18C' '
         DC    CL50'* * *  PREFIX TABLE OVERFLOW - AT LEAST ONE PREFIX'
         DC    CL44' WAS NOT SEARCHED FOR - RERUN REQUIRED * * *'
         DC    19C' '
*
CARDSOV  DS    0CL133
         DC    X'19'
         DC    22C' '
         DC    CL50'* * *  MAXIMUM OF THREE CARD IMAGES EXCEEDED - AN '
         DC    CL37'ADDITIONAL RUN WILL BE REQUIRED * * *'
         DC    23C' '
*
DUPEMSG  DS    0CL133
         DC    X'09'
         DC    41C' '
         DC    CL50'* * *  MEMBER EXISTED AND HAS BEEN UPDATED * * *  '
         DC    41C' '
*
NAMSG    DS    0CL133
         DC    X'09'
         DC    36C' '
         DC    CL50'* * *  STOW RETURN CODE OF 8 - CONTACT SYSTEM SUPP'
         DC    CL9'ORT * * *'
         DC    37C' '
*
SPACEMSG DS    0CL133
         DC    X'09'
         DC    37C' '
         DC    CL50'* * *  NO SPACE IN DIRECTORY - PROCESSING TERMINAT'
         DC    CL8'ED * * *'
         DC    37C' '
*
NOJOBMSG DS    0CL133
         DC    X'09'
         DC    34C' '
         DC    CL50'* * *  JOB CARD NOT IDENTIFIED - MEMBER COPIED UNM'
         DC    CL13'ODIFIED * * *'
         DC    35C' '
*
SPACE    DS    0CL133
SPACECC  DC    X'09'
         DC    132C' '
*
FORMTOP  DS    0CL133
         DC    X'8B'
         DC    132C' '
*
DATECONV EQU   *
*************************************************************
OPTION   DS    X         OPTION                             *
MONTH1G  DS    CL2       *                                  *
DAY1G    DS    CL2       * GREG DATE 1                      *
YEAR1G   DS    CL2       *                                  *
         ORG   MONTH1G                                 I    *
YEAR1J   DS    CL2       *                             N    *
DAY1J    DS    CL3       * JULIAN DATE 1               P    *
JULF1    DS    X         *                             U    *
MONTH2G  DS    CL2        *                            T    *
DAY2G    DS    CL2        * GREG DATE 2                     *
YEAR2G   DS    CL2        *                            D    *
         ORG   MONTH2G                                 A    *
YEAR2J   DS    CL2        *                            T    *
DAY2J    DS    CL3        * JULIAN DATE 2              A    *
JULF2    DS    X          *                                 *
DAYSTOSK DS    CL3       NO. DAYS TO SKIP                   *
DAYTO    DS    CL9       DAY TO SKIP TO                     *
*************************************************************
MNTHOUTG DS    CL2       GREG MONTH                    O    *
DAYOUTG  DS    CL2       GREG DAY                      U    *
YEAROUTG DS    CL2       GREG YEAR                     T    *
YEAROUTJ DS    CL2       JULIAN YEAR                   P    *
DAYOUTJ  DS    CL3       JULIAN DAY                    U    *
QUARTER  DS    C         QUARTER (1,2,3 OR 4)          T    *
MNTHNAME DS    CL9       MONTH (JANUARY ETC.)               *
DAYNAME  DS    CL9       DAY (MONDAY ETC.)             D    *
LEAPFLAG DS    C         "Y"=LEAP, "N"=NOT             A    *
DAYDIFF  DS    CL3                                     T    *
WEEKNOY  DS    CL2                                     A    *
WEEKNOQ  DS    CL2                                          *
ERRCODE  DS    C                                            *
*************************************************************
*
PRTDATE  DS    0CL8
MM1      DC    CL2'MM'
         DC    C'/'
DD1      DC    CL2'DD'
         DC    C'/'
YY1      DC    CL2'YY'
*
MASK     DC    XL8'4020202020202021'
COPY     DC    XL8'4020202020202021'
*
MASK1    DC    XL8'4020202120202020'
COPY1    DC    XL8'4020202120202020'
*
CARDIN   DS    80C                INPUT AREA FOR INSERT READS
PREFXIN  DS    80C                INPUT AREA FOR PREFIX READS
CARDBUFR DS    240C' '            UP TO 3 CARD IMAGES
SHORTBLK DC    C'N'               SHORT BLOCK TO BE WRITTEN
QUOTES   DC    C'N'               DATA WITHIN QUOTES
NUMBERED DC    C'N'               SEQUENCE NUMBERS
COMMA$IN DC    C'N'               COMMA ADDED TO END OF JOBCARD
JOBFND   DC    C'N'               JOBCARD FOUND BUT COMMA NOT YET ADDED
NOGO     DC    C'N'               INSERT FAILED
IMAGACON DC    A(OUTIMAGE)        ADDRESS OF 'AFTER' BUFFER
MODNO    DS    D                  MODIFICATION NUMBER
PRTBUFFR DS    F
HOLDREGS DS    3F
SAVEREG2 DS    F
WORK5    DS    F
BLKSZDCB DS    F                  ADDRESS OF BLKSZ INDICATOR IN DCB
BLKSIZE  DC    F'0'               ACTUAL OUTPUT BLKSZ
LRECL    DC    F'0'               LRECL FOR OUTPUT PDS
OUTBUFFR DS    F                  ADDRESS OF OUTPUT BUFFER
DWORK    DS    F
TABLEND  DS    F                  NUMBER OF PREFIXES SELECTED
BUFADDR  DS    F                  ADDRESS INPUT BUFFER
EX$AMT   DS    F                  ONE LESS THAN LRECL FOR EX OF MVC
NUMODIFY DS    F                  NUMBER OF LINES MODIFIED
NUMADDED DC    F'0'               NUMBER OF LINES INSERTED
SPFTIME  DS    F                  TIME OF MODIFICATION
SPFDATE  DS    F                  DATE OF MODIFICATION
DATALNGH DC    XL4'0000000F'      MASK FOR 'AND' OF LISTTR/CBYTE
MAXTABLE DC    F'25'              MAXIMUM PREFIX TABLE
MAXCARDS DC    F'3'               MAXIMUM CARD TABLE
PREFXTBL DS    50C' '
PAGECNT  DC    PL4'0'
LINECNT  DC    PL2'0'
JOBNUM   DC    CL8'SSXTEND '
*
LIST     DS    0CL74
LISTNAME DC    CL8'$$$$$$$$'
LISTTR   DC    XL3'00000000'
CBYTE    DC    X'00'
USERDATA DC    XL62'00'
*
INLIB    DCB   DDNAME=INLIB,            DCB FOR READING DIRECTORY      X
               LRECL=256,                                              X
               BLKSIZE=256,                                            X
               RECFM=F,                                                X
               BUFNO=2,                                                X
               DSORG=PS,                                               X
               MACRF=GL,                                               X
               EODAD=ENDJ
*
INLIB2   DCB   DDNAME=INLIB,            DCB FOR READING MEMBERS        X
               BUFNO=1,                                                X
               DSORG=PO,                                               X
               MACRF=R,                                                X
               EODAD=TASKEND
*
OUTLIB   DCB   DDNAME=OUTLIB,           DCB FOR OUTPUT PDS             X
               RECFM=FB,                                               X
               DSORG=PO,                                               X
               MACRF=W
*
REPORT   DCB   DDNAME=REPORT,           DCB FOR LISTING                X
               LRECL=133,                                              X
               BLKSIZE=6118,                                           X
               RECFM=FBM,                                              X
               DSORG=PS,                                               X
               MACRF=PM
*
PREFIX   DCB   DDNAME=PREFIX,           DCB FOR SELECTING PREFIXES     X
               LRECL=80,                                               X
               BLKSIZE=800,                                            X
               RECFM=FB,                                               X
               DSORG=PS,                                               X
               EODAD=TBLDONE,                                          X
               MACRF=GM
*
INSERT   DCB   DDNAME=INSERT,           DCB FOR INCOMING CARDS         X
               LRECL=80,                                               X
               BLKSIZE=800,                                            X
               RECFM=FB,                                               X
               DSORG=PS,                                               X
               EODAD=LASTCARD,                                         X
               MACRF=GM
*
         LTORG
*
OUTIMAGE DS    4080C
*
         IHADCB DSORG=PO
         END
//LKED.SYSLMOD  DD DSN=XXX.LINKLIB,DISP=SHR
//LKED.SYSPRINT DD SYSOUT=X
//LKED.SYSLIB   DD DSN=XXX.LINKLIB,DISP=SHR
//LKED.SYSIN    DD *
    NAME SSXTEND(R)
//*
//RUN   EXEC PGM=SSXTEND
//INLIB  DD DSN=     *** INPUT PDS ***
//OUTLIB DD DSN=     *** OUTPUT PDS ***
//REPORT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//INSERT DD DATA,DLM=ZZ
//     USER=$$$$$$$,PASSWORD=ZZZZZZZ
//     USER=$$$$$$$,PASSWORD=XXXXXXX
ZZ
//PREFIX DD *
AP
BC
BH
BP
BR
