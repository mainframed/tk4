//SS58C JOB (150),CHAPMAN,CLASS=P,NOTIFY=SS58,COND=(0,NE)
//ASM       EXEC ASMHCL,MAC='SS.MACLIB',MAC1='SYS1.MACLIB',
//          PARM.C='NODECK,OBJ,XREF(FULL)',
//          PARM.L=(XREF,LET,LIST)
//C.SYSLIB  DD
//          DD
//          DD
//          DD  DSN=SYSDLB.AMODGEN,DISP=SHR
//C.SYSPRINT DD SYSOUT=X
//C.STEPLIB  DD  DSN=SYS1.LINKLIB,DISP=SHR,VOL=SER=SYSTM1,UNIT=DISK
//C.SYSIN    DD *
         TITLE 'SSR010PR'
SSR010PR REG SSR010PR-&SYSDATE.-&SYSTIME,BASE1,BASE2
         OPEN  (INTBLACB,,PRTBLACB,,HSTRYACB,)
         LTR   R15,R15
         BNZ   OPENERR
         OPEN  (CNTLFILE,,PRTFILE,OUTPUT,OUTFILE,OUTPUT)
         GET   RPL=HSTRYRPL            GET TABLE PARM RECORD
         LTR   R15,R15                 GET OK?
         BNZ   GETHSERR                  NO...
         L     R5,HSTRYADR             R5 ==> TABLE PARM RECORD
         XR    R6,R6                   CLEAR REGS
         XR    R7,R7                      6 & 7
         LH    R7,48(R5)               R7 = NUM INDEX RECORDS
         M     R6,=F'35'               MULTIPLY IT BY REC LENGTH
         ST    R7,STGLEN               THATS HOW MUCH STORAGE TO GET
         OI    STGLEN,X'80'            HI ORDER BIT ON
         GETMAIN LU,LA=STGLEN,A=STGADDR GET STORAGE FOR TABLE
         L     R6,STGADDR              R6 ==> TABLE ENTRY
GETINTBL EQU   *
         GET   RPL=INTBLRPL            GET INDEX TABLE RECORD
         LTR   R15,R15                 GET OK?
         BNZ   GETINERR                  NO
         L     R2,INTBLADR             R2 ==> INDEX TABLE RECORD
         XR    R8,R8
         XR    R9,R9
         LH    R9,4(R2)                R9 = NUM ENTRIES IN PHYS REC
         M     R8,=F'35'               R9 = LENGTH OF ENTRIES IN REC
         LR    R7,R9                   R7 = SAME LENGTH
         LA    R8,10(R2)               R8 ==> 1ST ENTRY IN REC
         MVCL  R6,R8                   MOVE ENTRIES TO TABLE IN STG
         LA    R6,0(R7,R6)             R6 ==> END OF TABLE
         CLC   0(2,R2),=H'00'          ARE THERE MORE INDEX TBL RECS?
         BNE   GETINTBL                  YES
         ST    R6,STGEND               STGEND = ADDR OF END OF TABLE
         GETMAIN RU,LV=600             GET STG FOR CONTROL TABLE
         ST    R1,CTBLADDR             CTBLADDR = ADDR OF CONTROL TBL
         LR    R2,R1                   R2 ==> CONTROL TABLE ENTRY
         MVC   SORTCCN,=X'0000'        INITIALIZE SORTREC CNTRL CARD #
GETCNTL  EQU   *
         MVC   0(6,R2),=X'000000000000' INITIALIZE CONTROL TABLE ENTRY
         MVI   SORTINX1,X'00'           INITIALIZE SORT RECORD
         MVC   SORTINX1+1(11),SORTINX1
         MVI   SORTDATA,X'40'
         MVC   SORTDATA+1(79),SORTDATA
         GET   CNTLFILE,CNTLREC        READ CONTROL CARD
         MVI   VARG,X'40'              BLANK OUT PARSE AREA
         MVC   VARG+1(31),VARG
         MVI   CARG,X'40'
         MVC   CARG+1(31),CARG
*****%%%%%%% MODIFY TO GET RID OF BROKEN PARSE MACRO
**
         CLC   CNTLREC(4),=CL4'VEND'
         BE    VEND1ST
         CLC   CNTLREC(4),=CL4'CAT '
         BE    CAT1ST
         B     BADCARD
VEND1ST  MVC   VARG(32),CNTLREC+5
         CLC   CNTLREC+38(4),=CL4'CAT '
         BNE   CARDOK
         MVC   CARG(32),CNTLREC+43
         B     CARDOK
CAT1ST   MVC   CARG(32),CNTLREC+5
         CLC   CNTLREC+38(4),=CL4'VEND'
         BNE   CARDOK
         MVC   VARG(32),CNTLREC+43
**
*****%%%%%%% END OF MODIFY FOR BROKEN PARSE MACRO
*        PARSE CNTLREC(80,())          PARSE CONTROL CARD
*        KEYS  (VENDOR(VARG,A,32),CATEGORY(CARG,A,32))
*        KEYS  (VEND(VARG,A,32),CAT(CARG,A,32),*)
*        C     R1,=F'0'
*        BE    CARDOK
*        MVC   PRTLINE(133),=CL133' '
*        MVC   PRTLINE+1(80),CNTLREC        PRINT CONTROL CARD
*        MVC   PRTLINE+82(12),=CL12'INVALID CARD'   AND MESSAGE
*        PUT   PRTFILE,PRTLINE                        AND QUIT
*        B     CLOSEALL
CARDOK   EQU   *
         CLI   VARG,X'40'              IS THERE A VENDOR?
         BE    NOVENDR                   NO...
         CLI   VARG,C'*'               IS IT 'ANY VENDOR' (*)?
         BE    ANYVENDR                  YES..
         L     R3,STGADDR              SEARCH INDEX TABLE
VENDSRCH CLC   VENDARG(33),0(R3)       VENDOR MATCH?
         BE    GOTVEND                   YEAH
         CLC   VENDARG(33),0(R3)       PAST ANY POSSIBLE MATCH?
         BL    BADCARD                   YEAH
         LA    R3,35(R3)               R3 ==> NEXT INDEX ENTRY
         CL    R3,STGEND               END OF TABLE?
         BE    BADCARD                   YEAH
         B     VENDSRCH                  NAH
CATSRCH  CLC   CATARG(33),0(R3)        VENDOR MATCH?
         BE    0(R9)                     YEAH
         CLC   CATARG(33),0(R3)        PAST ANY POSSIBLE MATCH?
         BL    BADCARD                   YEAH
         LA    R3,35(R3)               R3 ==> NEXT INDEX ENTRY
         CL    R3,STGEND               END OF TABLE?
         BE    BADCARD                   YEAH
         B     CATSRCH                   NAH
GOTVEND  MVC   2(2,R2),33(R3)          SET VINX IN CONTROL TABLE ENTRY
         MVC   SORTVEND(32),1(R3)      PUT VENDOR IN SORT RECORD
         CLI   CARG,X'40'              IS THERE A CATEGORY?
         BE    FORMVB                    NO
         CLI   CARG,C'*'               IS IT 'ANY CATEGORY' (*)?
         BE    FORMVC                    YES
         L     R3,STGADDR              R3 ==> 1ST INDEX TABLE ENTRY
         BAL   R9,CATSRCH              GO LOOK UP CATEGORY
         MVC   4(2,R2),33(R3)          SET CINX IN CONTROL TABLE ENTRY
         MVC   SORTCAT(32),1(R3)       PUT CATEGORY IN SORT RECORD
WHOS1ST  L     R4,=A(CNTLREC)          PARSE THAT SUCKER
WHOSNEXT CLI   0(R4),C'V'              GOT A 'V'?
         BE    FORMVC                    YUP
         CLI   0(R4),C'C'              GOT A 'C'?
         BE    FORMCV                    YEP
         LA    R4,1(R4)                BUMP TO NEXT CHARACTER
         B     WHOSNEXT
ANYVENDR EQU   *                       CNTL CARD VENDER = '*'
         CLI   CARG,X'40'              IS THERE A CATEGORY?
         BE    FORMVB                    NOPE
         CLI   CARG,C'*'               IS CATEGORY = '*'
         BE    WHOS1ST                   YEP
         L     R3,STGADDR              R3 ==> 1ST INDEX TABLE ENTRY
         BAL   R9,CATSRCH              GO LOOK UP CATEGORY
         MVC   4(2,R2),33(R3)          SET CINX IN CONTROL TABLE ENTRY
         MVC   SORTCAT(32),1(R3)       PUT CATEGORY IN SORT RECORD
FORMCV   MVC   0(2,R2),=CL2'CV'        FORM = 'CV'
         B     GOTCHA
NOVENDR  EQU   *                       NO VENDER ON CONTROL CARD
         CLI   CARG,X'40'              IS THERE A CATEGORY?
         BE    BADCARD                   NOPE
         CLI   CARG,C'*'               IS CATEGORY = '*'
         BE    FORMCB                    YEP
         L     R3,STGADDR              R3 ==> 1ST INDEX TABLE ENTRY
         BAL   R9,CATSRCH              GO LOOK UP CATEGORY
         MVC   4(2,R2),33(R3)          SET CINX IN CONTROL TABLE ENTRY
         MVC   SORTCAT(32),1(R3)       PUT CATEGORY IN SORT RECORD
FORMCB   MVC   0(2,R2),=CL2'C '        FORM = 'C '
         B     GOTCHA
FORMVB   MVC   0(2,R2),=CL2'V '        FORM = 'V '
         B     GOTCHA
FORMVC   MVC   0(2,R2),=CL2'VC'        FORM = 'VC'
GOTCHA   CLI   SORTVEND,X'40'          SPECIFIED VENDOR?
         BNE   PUTSORT1                   YES..
         CLI   SORTCAT,X'40'           SPECIFIED CATEGORY?
         BE    NEXTCNTL                   NO...
PUTSORT1 MVC   SORTFORM(2),0(R2)       FORMAT TYPE 0 SORT RECORD
         PUT   OUTFILE,SORTREC         WRITE IT
NEXTCNTL LA    R2,6(R2)                NEXT CONTROL TABLE ENTRY
         LH    R4,SORTCCN              INCREMENT CONTROL CARD NUMBER
         AH    R4,=H'1'
         STH   R4,SORTCCN
         B     GETCNTL                 GET NEXT CONTROL CARD
CNTLEOD  EQU   *                   END OF DATA FOR CONTROL CARDS
         ST    R2,CTBLEND              CTBLEND ==> END OF CONTROL TBL
         MVC   SORTPRDN(2),=X'0000'    INITIALIZE SORTREC PRODUCT SEQ#
         MODCB RPL=HSTRYRPL,OPTCD=(KGE,GEN) MODIFY HISTORY FILE RPL
GETPRTBL EQU   *
         GET   RPL=PRTBLRPL            GET PRODUCT TABLE RECORD
         LTR   R15,R15                 GET OK?
         BNZ   GETPRERR                  NO...
         L     R2,PRTBLADR             R2 ==> PROD TABLE REC
         LA    R3,10(R2)               R3 ==> 1ST ENTRY IN PHYS REC
         LH    R4,4(R2)                R4 = NUM ENTRIES IN PHYS REC
NEWPROD  EQU   *
         L     R5,CTBLADDR             R5 ==> 1ST CONTROL TABLE ENTRY
         MVI   SORTREC,X'00'           CLEAR SORT CNTRL CARD NUM
         MVC   SORTREC+1(5),SORTREC      & SORTINX1 & SORTINX2
         LH    R6,SORTPRDN             INCREMENT SORTKEY PRODUCT #
         LA    R6,1(R6)
         STH   R6,SORTPRDN
         MVI   SORTDATE,X'00'          CLEAR REMAINDER OF SORTREC
         MVC   SORTDATE+1(8),SORTDATE
         MVI   SORTDATA,X'40'
         MVC   SORTDATA+1(79),SORTDATA
         B     TESTCINX
NEXTCTBL LA    R5,6(R5)                R5 ==> NEXT CTBL ENTRY
         CL    R5,CTBLEND              END OF CTBL?
         BE    NOCTBL                    YES
         LH    R6,SORTCCN              INCREMENT SORTKEY CNTL CARD #
         LA    R6,1(R6)
         STH   R6,SORTCCN
TESTCINX MVI   SRCHSTAT,X'00'          STATUS = 00
         CLC   4(2,R5),=X'0000'        CNTRL TBL CINX = 00?
         BE    NOCINX                    YES
         CLC   4(2,R5),84(R3)          CINX MATCH?
         BE    TESTVINX                  YES
         B     NEXTCTBL                  NO - REJECT
NOCINX   OI    SRCHSTAT,X'01'            YES
TESTVINX CLC   2(2,R5),=X'0000'        CNTRL TBL VINX = 00?
         BE    NOVINX                    YES
         CLC   2(2,R5),82(R3)          VINX MATCH?
         BE    CHKCSRCH                  YES
         B     NEXTCTBL                  NO - REJECT
NOVINX   OI    SRCHSTAT,X'02'            YES
CHKCSRCH CLI   SRCHSTAT,X'00'          NEED TO SEARCH FOR CATEGORY?
         BE    CHKVSRCH                  NO
         CLI   SRCHSTAT,X'02'
         BE    CHKVSRCH                  NO
         L     R7,STGADDR
         XR    R6,R6
FINDCAT  CLC   84(2,R3),33(R7)         PRTBL CINX = IN STG INTBL IINX?
         BE    GOTCAT                    YES
         LA    R7,35(R7)               BUMP TO NEXT INTBL ENTRY
         LA    R6,1(R6)                INTBL SEQ NUMBER UP 1
         CL    R7,STGEND               END OF INTBL REACHED?
         BL    FINDCAT                   NO
         MVI   SORTCAT,X'40'             YES - SORT CATEGORY = SPACES
         MVC   SORTCAT+1(31),SORTCAT
         B     GOTCAT2
GOTCAT   MVC   SORTCAT(32),1(R7)       PUT CATEGORY IN SORT RECORD
GOTCAT2  CLC   0(2,R5),=CL2'V '        FORM = 'V '?
         BE    CHKVSRCH                  YES - DONT STOW CTGRY SEQ#
         STH   R6,SORTINX1             PUT CTGRY SEQ# IN SORTINX1
         CLI   0(R5),C'C'              FORM = C OR CV?
         BE    CHKVSRCH                  YES
         CLC   2(2,R5),=X'0000'        CTBL VINX = 0?
         BNE   CHKVSRCH                  NO
         STH   R6,SORTINX2             PUT CTGRY SEQ# IN SORTINX2
CHKVSRCH CLI   SRCHSTAT,X'00'          NEED TO SEARCH FOR VENDOR?
         BE    CKPUTSRT                  NO
         CLI   SRCHSTAT,X'01'
         BE    CKPUTSRT                  NO
         L     R7,STGADDR                YES - R7 ==> INTBL ENTRY
         XR    R6,R6
FINDVEND CLC   82(2,R3),33(R7)         PRTBL CINX = IN STG INTBL IINX?
         BE    VENDFND                   YES
         LA    R7,35(R7)               BUMP TO NEXT INTBL ENTRY
         LA    R6,1(R6)                INTBL SEQ NUMBER UP 1
         CL    R7,STGEND               END OF INTBL REACHED?
         BL    FINDVEND                  NO
         MVI   SORTVEND,X'40'            YES - SORT VEND = SPACES
         MVC   SORTVEND+1(31),SORTVEND
         B     VENDFND2
VENDFND  MVC   SORTVEND(32),1(R7)      PUT VENDOR IN SORT RECORD
VENDFND2 CLC   0(2,R5),=CL2'C '        FORM = 'C '?
         BE    CKPUTSRT                  YES
         CLI   0(R5),C'V'              FORM = V OR VC?
         BE    VSRTINX1                  YES
         CLC   4(2,R5),=X'0000'        CTBL CINX = 0?
         BNE   VSRTINX1                  NO
         STH   R6,SORTINX2             PUT VENDR SEQ# IN SORTINX2
         B     CKPUTSRT
VSRTINX1 STH   R6,SORTINX1             PUT VENDR SEQ# IN SORTINX1
CKPUTSRT CLI   SRCHSTAT,X'00'          NEED TO WRITE TYPE 00 SORT REC?
         BE    PUTSORT2                  NO
         MVC   SORTFORM,0(R5)          PUT FORM IN SORT REC
         PUT   OUTFILE,SORTREC         WRITE IT
PUTSORT2 MVC   SORTDATA(80),0(R3)      MOVE PRODUCT NAME TO SORTREC
         MVI   SORTDATE+5,X'01'        TYPE SORTREC = 01
         PUT   OUTFILE,SORTREC         WRITE IT
         XR    R8,R8
         L     R8,PRDPUT               INCREMENT COUNTER OF
         LA    R8,1(R8)                  PRODUCTS PUT TO SORT
         ST    R8,PRDPUT
         MVC   HSTRYKEY(2),80(R3)      USE PRODUCT KEY FROM PRDTBL
         POINT RPL=HSTRYRPL              ENTRY TO POINT HISTORY FILE
         LTR   R15,R15                 POINT OK?
         BNZ   POINTERR                  NO...
NXTHIST  GET   RPL=HSTRYRPL            GET NEXT HISTORY RECORD (SEQ)
         LTR   R15,R15                 GET OK?
         BNZ   GETHSERR                  NO...
         L     R8,HSTRYADR             R8 ==> HISTORY REC
         CLC   0(2,R8),80(R3)          IS THIS FOR THE CURRENT PRODUCT?
         BNE   NEXTPROD                  NO...
PUTSORT3 MVC   SORTDATE(51),2(R8)      MOVE HISTORY REC TO SORTREC
         PUT   OUTFILE,SORTREC         WRITE IT
         B     NXTHIST                 GO GET NEXT HISTORY REC
NOCTBL   XR    R8,R8
         L     R8,PRDNPUT              INCREMENT COUNTER OF
         LA    R8,1(R8)                  PRODUCTS MATCHING NO CONTROL
         ST    R8,PRDNPUT                  CARD CRITERIA
NEXTPROD EQU   *
         LA    R3,86(R3)               BUMP TO NEXT PRODUCT TABLE ENTRY
         BCT   R4,NEWPROD
         CLC   0(2,R2),=H'0'           END OF PRODUCT TABLE RECORDS?
         BE    CLOSEALL                  YES...
         MVC   PRTBLRRN+2(2),0(R2)       NO..LOAD RRN OF NEXT ONE
         B     GETPRTBL                        AND GO GET NEXT ONE
BADCARD  EQU   *                       BAD CONTROL CARD
         MVC   PRTLINE(133),=CL133' '
         MVC   PRTLINE+1(80),CNTLREC        PRINT CONTROL CARD
         MVC   PRTLINE+1(33),VENDARG               AND MESSAGE
         MVC   PRTLINE+35(33),CATARG               AND MESSAGE
         MVC   PRTLINE+82(9),=CL9'NOT FOUND'       AND MESSAGE
         PUT   PRTFILE,PRTLINE                        AND QUIT
CLOSEALL EQU   *
         XR    R6,R6
         L     R6,PRDPUT               R6 = NUM PRODUCTS PUT TO SORT
         CVD   R6,PACKWORK             CONVERT IT
         UNPK  PRDPUTD(4),PACKWORK(8)    TO DISPLAY
         OI    PRDPUTD+3,X'F0'
         L     R6,PRDNPUT              R6 = NUM PRODUCTS NOT PUT
         CVD   R6,PACKWORK             CONVERT RETURN CODE
         UNPK  PRDNPUTD(4),PACKWORK(8)    TO DISPLAY
         OI    PRDNPUTD+3,X'F0'
         MVC   PRTLINE(133),=CL133' '
         MVC   PRTLINE+1(79),EOJLINE   PRINT EOJ TOTALS LINE
         PUT   PRTFILE,PRTLINE
         CLOSE (INTBLACB,,PRTBLACB,,HSTRYACB,,PRTFILE,)
         L     R13,4(R13)                    BRUSH YOUR TEETH
         RETURN (14,12),RC=0                     AND GO TO BED
         EJECT
OPENERR  EQU   *
         MVC   ERRFUNC,=CL5'OPEN '
         LR    R9,R15                  R9 = RETURN CODE
         SHOWCB ACB=PRTBLACB,AREA=VSAMERR,LENGTH=12,                   X
               FIELDS=(DDNAME,ERROR)
         CLC   VSAMERR2(4),=CL4'0000'  PRTBL ACB SHOWS ERROR?
         BNE   PRINTERR                  YES
         SHOWCB ACB=HSTRYACB,AREA=VSAMERR,LENGTH=12,                   X
               FIELDS=(DDNAME,ERROR)
         CLC   VSAMERR2(4),=CL4'0000'  HSTRY ACB SHOWS ERROR?
         BNE   PRINTERR                  YES
         MVC   VSAMERR(8),=CL8'PRTFILE '  BAD OPEN IN PRTFILE
         B     PRINTERR
GETINERR EQU   *
         LR    R9,R15
         MVC   ERRFUNC(5),=CL5'GET   '
         MVC   VSAMERR(8),=CL8'SSRINTBL '
         SHOWCB RPL=INTBLRPL,AREA=VSAMERR2,LENGTH=4,FIELDS=(FDBK)
         B     PRINTERR
GETPRERR EQU   *
         LR    R9,R15
         MVC   ERRFUNC(5),=CL5'GET   '
         MVC   VSAMERR(8),=CL8'SSRPRTBL '
         SHOWCB RPL=PRTBLRPL,AREA=VSAMERR2,LENGTH=4,FIELDS=(FDBK)
         B     PRINTERR
POINTERR MVC   ERRFUNC(5),=CL5'POINT'
         B     HSTRYERR
GETHSERR MVC   ERRFUNC(5),=CL5'GET  '
HSTRYERR MVC   VSAMERR(8),=CL8'SSRHSTRY '
         LR    R9,R15                  R9 = RETURN CODE
         SHOWCB RPL=PRTBLRPL,AREA=VSAMERR2,LENGTH=4,FIELDS=(FDBK)
PRINTERR XR    R6,R6
         L     R6,VSAMERR2             R6 = REASON CODE
         CVD   R6,PACKWORK             CONVERT IT
         UNPK  REASONCD(4),PACKWORK(8)   TO DISPLAY
         OI    REASONCD+3,X'F0'
         CVD   R9,PACKWORK             CONVERT RETURN CODE
         UNPK  RETURNCD(4),PACKWORK(8)    TO DISPLAY
         OI    RETURNCD+3,X'F0'
         MVC   ERRDDNAM(8),VSAMERR     GET ERROR DDNAME
         MVC   PRTLINE(133),=CL133' '
         MVC   PRTLINE+1(63),FILEERR   PRINT ERROR MESSAGE
         PUT   PRTFILE,PRTLINE
         B     CLOSEALL                DIE YOUNG
PACKWORK DS    D
VSAMERR  DS    2F
VSAMERR2 DS    F
SAVE11   DS    F
SAVER1   DS    F
FILEERR  DC    CL11' FUNCTION: '
ERRFUNC  DC    CL5'     '
         DC    CL11'  DD NAME: '
ERRDDNAM DC    CL8'        '
         DC    CL10'  RETURN: '
RETURNCD DC    CL4'0000'
         DC    CL10'  REASON: '
REASONCD DC    CL4'0000'
EOJLINE  DS    0CL79
         DC    CL29'PRODUCT RECORDS PUT TO SORT: '
PRDPUTD  DC    CL4'0000'
         DC    CL42'    PRODUCTS NOT MEETING SELECT CRITERIA: '
PRDNPUTD DC    CL4'0000'
INTBLACB ACB   DDNAME=SSRINTBL,AM=VSAM,                                X
               MACRF=(KEY,DIR,IN)
PRTBLACB ACB   DDNAME=SSRPRTBL,AM=VSAM,                                X
               MACRF=(KEY,DIR,IN)
HSTRYACB ACB   DDNAME=SSRHSTRY,AM=VSAM,                                X
               MACRF=(KEY,DIR,SEQ,IN),EXLST=HSTRYEX
INTBLRPL RPL   ACB=INTBLACB,AM=VSAM,AREA=INTBLADR,AREALEN=4,           X
               ARG=INTBLRRN,OPTCD=(KEY,DIR,ARD,SYN,NUP,KEQ,LOC)
PRTBLRPL RPL   ACB=PRTBLACB,AM=VSAM,AREA=PRTBLADR,AREALEN=4,           X
               ARG=PRTBLRRN,OPTCD=(KEY,DIR,ARD,SYN,NUP,KEQ,LOC)
HSTRYRPL RPL   ACB=HSTRYACB,AM=VSAM,AREA=HSTRYADR,AREALEN=4,           X
               ARG=HSTRYKEY,KEYLEN=2,                                  X
               OPTCD=(KEY,SEQ,ARD,FWD,SYN,NSP,KEQ,FKS,LOC)
HSTRYEX  EXLST EODAD=NEXTPROD
PRDPUT   DC    F'00'
PRDNPUT  DC    F'00'
STGLEN   DS    F
STGADDR  DS    F
STGEND   DS    F
CTBLADDR DS    F
CTBLEND  DS    F
INTBLADR DS    F
INTBLRRN DC    F'1'
PRTBLADR DS    F
PRTBLRRN DC    F'1'
HSTRYADR DS    F
HSTRYKEY DS    2F'00'
SRCHSTAT DS    XL1
VENDARG  DC    CL1'V'
VARG     DS    CL32
CATARG   DC    CL1'C'
CARG     DS    CL32
CNTLFILE DCB   DDNAME=CNTLCARD,                                        X
               DSORG=PS,                                               X
               MACRF=GM,                                               X
               EODAD=CNTLEOD
OUTFILE  DCB   DDNAME=OUTFILE,                                         X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               LRECL=94,                                               X
               RECFM=FB
PRTFILE  DCB   DDNAME=PRTFILE,                                         X
               DSORG=PS,                                               X
               MACRF=PM,                                               X
               LRECL=133,                                              X
               RECFM=FBM
CNTLREC  DS    CL80
SORTREC  DS    0CL94
SORTCCN  DS    H
SORTINX1 DS    H
SORTINX2 DS    H
SORTPRDN DS    H
SORTDATE DS    CL6
SORTDATA DS    CL80
         ORG   SORTDATA
SORTFORM DS    H
SORTVEND DS    CL32
SORTCAT  DS    CL32
         ORG   SORTDATA
SORTACRN DS    CL16
SORTPROD DS    CL64
PRTLINE  DS    CL133
         LTORG
*
         END
//L.SYSLMOD  DD DSN=SSU.LINKLIB,DISP=SHR
//L.SYSPRINT DD SYSOUT=X
//L.SYSLIB DD DSN=SSU.LINKLIB,DISP=SHR
//L.SYSIN    DD *
    NAME SSR010PR(R)
//
