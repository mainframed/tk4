                Documentation for REXX FunctionPak 1

Table of Contents

 1.     About REXX FunctionPak 1
 2.     Conditions of use
 3.     System Requirements
 4.     Installation
 5.     Functions
 6.     Bug Reporting/Enhancement Requests/Product Updates
 7.     About the Author
  --------------------------------------------------------------------

About REXX FunctionPak 1

REXX FunctionPak 1 is a suite of REXX functions designed to aid in the
rapid development of REXX programs on the MVS/ESA platform.

The package includes functions to:

   * Convert and manipulate dates
   * Report on MVS System activities and status
   * Perform numeric conversions
   * Perform mathematical calculations
   * ASCII-EBCDIC conversion

REXX FunctionPak 1 is written 100% assembler, and has been designed
to be as CPU efficient as possible, whilst keeping the user interface
informative and easy to use.

Where possible REXX FunctionPak 1 uses IBM documented interfaces to
perform operations and calculations. This means that there is less to
go wrong with the REXX functions, as they use the same SVCs and PCs
that your operating system is calling. It also means that any PTFs
applied to your system will flow through to the REXX functions.

  --------------------------------------------------------------------

Conditions of use

REXX FunctionPak 1 is supplied free of charge under the following
conditions:

  1. No warranty is expressed or implied in regard to the use of this
     product.

  2. The following actions are not permitted under the free licence
     to use this software:

        o Selling the product
        o Using the package for to write programs that are to be sold

  --------------------------------------------------------------------

System Requirements

The REXX FunctionPak 1 has been assembled/link-edited on an MVS/ESA
platform.

It has also had limited testing on the OS/390 platform.

  --------------------------------------------------------------------

Installation

The REXX FunctionPak 1 is supplied as a single PKZIP-ed file, to
install:

  1. Download [Click here to download]  from the REXX FuncionPak site
     by clicking the icon

  2. Unzip file REXXFP1.ZIP using PKUNZIP

  3. Allocate two MVS datasets with the attributes LRECL=80,RECFM=FB

  4. Up-load files REXXFP1.LLB and REXXFP1.SMP to the two allocated
     MVS datasets being sure to use a BINARY type transmit.

  5. Un-load the two up-loaded datasets by issuing the TSO command:

     RECEIVE INDS('uploaded_dataset_name')

     This should create two MVS datasets REXXFP1.LOADLIB and
     REXXFP1.SAMPLIB

  6. To connect the load-library to your address space you have the
     following options:

        o Add the load-library to your link-list
        o Add a STEPLIB data definition to your LOGON PROC
        o Dynamically allocate an ISPLLIB data definition to your
          session

  --------------------------------------------------------------------

Functions

 Function Description
 B2C      Convert a string from binary to character format
 CLS      Clear a 3270 type terminal
 COMPUM   Compare two strings under a mask
 CONCAT   Concatenate up to 255 Datasets and/or DDs
 C2B      Convert a string from character format to binary
 DEFAULT  Sets default value of a variable if length is 0
 ENQLIST  Enquire on GRS enqueus
 FILTER   Compare a string to a filter
 FINDCHAR Finds the first occurence of single/multiple character(s)
 FMEMBER  Find a member in a concatenation
 GDG      Resolve a relative GDG name to an absolute GDG name
 GRG2TOD  Convert a gregorian date to a TOD date
 HEXADD   Add a hexadecimal number to another hex/decimal number
 IPLDATE  Return the date/time of the last IPL in TOD format
 LEAPYEAR Indicate if a year is a leap year
 LISTDD   List allocated data definitions
 LISTJF   List allocated dataset names for a DD Name
 LISTLINK List the dataset names of Link List datasets
 MALLOC   Dynamically allocate memory
 MEMBERS  List members for a given datasets
 MFREE    Dynamically free memory allocated with the MALLOC function
 MLWTO    Issue a multi-line Write-To-Operator message
 P2D      Convert a packed decimal number to decimal
 PERCENT  Calculate two numbers as a percentage
 RACHECK  Check a users access to a RACF/ACF2 entity
 RESOLVE  Resolve JCL type vaiables from the REXX variable pool
 REXXFP   List REXX function packages defined to system
 REXXHC   List REXX host command details
 SAYSTAK  Display the REXX data stack
 SCANLOAD Display CESD entries for a given load module
 SIZEOF   Return the size in bytes of a dataset
 SLEEP    Stop REXX for specified time
 SNAP     Produces a variable name/value dump for a REXX program
 SORTSTAK Sort a data stack
 SPRINT   Write Full Screen messages to a 3270 terminal
 TASKS    List information on active MVS address spaces
 TM       Test Under Mask (used to check bit settings)
 TOD      Return current date/time in TOD clock format
 TOD2GRG  Convert a TOD clock value to printable format
 TODDAY   Return the day name for a given TOD clock value
 TODDIF   Calculate the day/hour difference between 2 TOD clock values
 TODOFF   Add/Subtract time from a TOD clock value
 UNITS    Display UCB information for a given device class
 UNZIP    Unzip a string compressed by the ZIP function
 VERLIST  Verifies a value against a list of allowed values
 WHOAMI   Return information for the current address space
 XLATEUM  Translate a string to EPCDIC/ASCII masking out bytes
 ZIP      Compress a string
  --------------------------------------------------------------------

Bug Reporting/Enhancement Requests/Product Updates

This program has been tested to the capabilities of the author, there
may, however be some functional bugs in the supplied functions.

As a user of this product you are invited to inform the author of any
problems you may be encountering with the package.

In addition you are invited to suggest any additions or enhancements
to the product.

To report any bugs or enhancements to the author, email:

                         Gerard Nicol
                    gnicol@leichhardt.net.au

You can also subscribe to the REXX Function Pack Mailing list, by
emailing:

                   Majordomo@leichhardt.net.au
              with the text "subscribe esp-rexxfp"
  --------------------------------------------------------------------

About the Author

Gerard Nicol is an Australian based MVS systems programmer.

In his 8 years working in the MVS arena he has been required to
write many REXX programs to perform tasks as varied as cross address
space communication, year 2000 exposure inventories and ISPF
dialogs.

Over this time Gerard has developed a suite of functions that help
him provide a rapidly developed, yet robust solution to his
customers.

