DOWNDATE TITLE 'UNIV. OF WATERLOO''S UTILITY PROGRAM'
*
* UPDATED 21FEB78, GENE CZARCINSKI, NASA/GSFC.
*
*   . CHANGE NON-STD. MACROS TO GSFC-STD.
*   . CHANGE DCB DEFAULTS FOR NASA/GSFC.
*   . CHANGE LINECNT DEFAULT TO 78 LINES/PAGE.
*
* UPDATED 21JAN80, WILLIAM SMTIH, MEMOREX CORPORATION
*
*   . CHANGED LINECNT DEFAULT TO 60 LINES/PAGE.
*
*********************************************************************
*** ALTHOUGH THIS PROGRAM HAS BEEN TESTED BY ITS AUTHOR AND IS IN ***
*** USE AT THE UNIVERSITY OF WATERLOO, NO WARRANTY, EXPRESSED OR  ***
*** IMPLIED, IS MADE AS TO THE ACCURACY OR FUNCTIONING OF THE     ***
*** PROGRAM AND RELATED MATERIAL. THERE IS NO COMMITED MAINTENANCE***
*** OF THE PROGRAM. THE FACT OF DISTRIBUTION SHALL NOT CONSTITUTE ***
*** ANY WARRANTY AND NO RESPONSIBILITY IS ASSUMED BY THE AUTHOR   ***
*** NOR THE UNIVERSITY OF WATERLOO IN CONNECTION HEREWITH.        ***
*********************************************************************
*
*     SERVICE AIDS                                        DOWNDATE
*
*
*     PURPOSE:
*
*          THIS PROGRAM COMPARES TWO DATA  SETS AND PUNCHES OUT AN
*     UPDATE DECK  WHICH, WHEN PROCESSED  BY IEBUPDTE,  WILL ALTER
*     ONE DATA SET TO MARCH THE OTHER.   IT CAN BE USED TO COMPARE
*     TWO DATA SETS  TO SEE IF THEY  ARE THE SAME OR  NOT.  IT CAN
*     ALSO  BE  USED  TO  PRODUCE UPDATE  DECKS  WHEN  NEEDED  FOR
*     DISTRIBUTION PURPOSES,  WHILE PERMITTING  THE USE  OF ONLINE
*     TERMINALS FOR MAKING THE ORIGINAL CHANGES.
*     LIMITATIONS:
*
*          THE  DATA SETS  MUST  BE  BLOCKED OR  UNBLOCKED  EIGHTY
*     CHARACTER  RECORDS (PROCESSABLE  BY QSAM).   THEY MUST  HAVE
*     SEQUENCE  INFORMATION IN  COLUMNS  73  TO 80.   RECORDS  ARE
*     CONSIDERED TO MATCH  ONLY IF BOTH THE TEXT  AND THE SEQUENCE
*     NUMBER MATCH (I.E. THE DECK MUST NOT BE RESEQUENCED).
*     NOTATION:
*
*          THE ORIGINAL  DATA SET IS  CALLED THE OLD  MASTER.  THE
*     ALTERED  DATA  SET  IS  CALLED  THE  NEW  MASTER.   DOWNDATE
*     COMPARES THE  OLD MASTER TO THE  NEW MASTER AND  PRODUCES AN
*     UPDATE  DECK  FOR  IEBUPDTE.  THIS  DECK,  IF  PROCESSED  BY
*     IEBUPDTE,  WILL  UPDATE THE  OLD  MASTER  TO MATCH  THE  NEW
*     MASTER.
*     HOW TO USE:
*
*          DOWNDATE REQUIRES FOUR DD CARDS  (ALL QSAM).  THESE ARE
*     AS FOLLOWS:
*          SYSUT1    THIS DEFINES  THE OLD  MASTER DATA  SET.  THE
*                    LRECL MUST BE 80.  RECFM  AND BLKSIZE MUST BE
*                    SUPPLIED ON THE DD CARD IF NOT AVAILABLE FROM
*                    THE DATA SET LABEL.
*          SYSUT2    THIS DEFINES  THE NEW  MASTER DATA  SET.  THE
*                    LRECL IS  DEFINED AT  80.  RECFM  AND BLKSIZE
*                    MUST  BE  SUPPLIED  ON THE  DD  CARD  IF  NOT
*                    AVAILABLE FROM THE DATA SET LABEL.
*          SYSPUNCH  THIS  SPECIFIES  WHERE  THE  UPDATE  DECK  IS
*                    WRITTEN.   THE   LRECL  IS  DEFINED   AT  80.
*                    RECFM=F AND  BLKSIZE=80 ARE DEFAULTED  IF NOT
*                    SPECIFIED OTHERWISE.
*          SYSPRINT  THIS  DEFINES  WHERE  THE   DOWNDATE  LOG  IS
*                    PRINTED.  ALSO,  IF SYSPUNCH  IS ON  A DIRECT
*                    ACCESS  DEVICE,  DOWNDATE PRINTS  THE  UPDATE
*                    DECK  ON   SYSPRINT  AFTER  THE   PROGRAM  IS
*     ORIGINALLY BY ROD MILNE                                3.9.1
*
*
*     SERVICE AIDS                                        DOWNDATE
*                    FINISHED.   THE  LRECL  IS  DEFINED  AT  133.
*                    RECFM=FA AND BLKSIZE=133 ARE DEFAULTED IF NOT
*                    SPECIFIED OTHERWISE.
*          DOWNDATE DOES NOT REQUIRE A PARM FIELD.
*          DOWNDATE RETURNS  A COMPLETION  CODE OF  0 IF  THE DATA
*          SETS MATCH, OR A CODE OF 4 IF THEY DID NOT MATCH.
*     EXAMPLES:
*
*          ASSUME DOWNDATE  IS IN JOBLIB  AND THE SYSUT2  DATA SET
*     ARE CATALOGUED.
*     1. COMPARE   A   PARTITIONED   DATA  SET   MEMBER   IN   TWO
*        CORRESPONDING  DATA  SETS, WITHOUT  PUNCHING  THE  UPDATE
*        DECK.
*             //ASMG  JOB  '#'
*             //     EXEC  PGM=DOWNDATE
*             //SYSUT1   DD  DSN=ASMG.SOURCE(ASMGBUFF),UNIT=2314,
*             //             VOL=SER=333333,DISP=SHR
*             //SYSUT2   DD  DSN=ASMG.SOURCE(ASMGBUFF),DISP=SHR
*             //SYSPUNCH DD  SPACE=(TRK,(2,1)),DISP=(NEW,DELETE),
*             //             RECFM=FB,BLKSIZE=3200),UNIT=SYSDA
*             //SYSPRINT DD  SYSOUT=A
*             //
*     2. COMPARE  TWO SEQUENTIAL  DATA SETS  AND  PUNCH AN  UPDATE
*        DECK.  ASSUME THAT SYSUT1 IS ALSO CATALOGUED.
*             //HASP  JOB  '#'
*             //     EXEC  PGM=DOWNDATE
*             //SYSUT1   DD  DSNAME=HASPJB,DISP=SHR
*             //SYSUT2   DD  DSNAME=HASPRM,DISP=SHR
*             //SYSPUNCH DD  SYSOUT=B
*             //SYSPRINT DD  SYSOUT=A
*             //
*     ORIGINAL AUTHOR:
*
*          ROD MILNE.
*     ORIGINAL DOCUMENTER AND CHIEF PROPONENT:
*
*          RENNIE PETERSEN.
*
*
*
*     ORIGINALLY BY ROD MILNE                                3.9.2
*
*
  EJECT
         MACRO
&ADDR    $PRINT    &BUFFER
&ADDR    LA        R0,&BUFFER
         BAL       R14,$PRINT
         MEND
         MACRO
&ADDR    $GET      &DCB,&BUFFER
&ADDR    LA        R1,&DCB
         LA        R0,&BUFFER
         BAL       R14,$GET
         MEND
         MACRO
&ADDR    $PUNCH
&ADDR    BAL       R14,$PUNCH
         MEND
 EJECT
DOWNDATE CSECT
*        REGS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE      (14,12)
         BALR      R12,0
         USING     *,R12
         ST        R13,STR13
         LA        R13,SAVEAREA
         MVI       ENDSW,0
         MVI       CHANGESW,0
         MVI       DELETESW,0
         MVI       $PUNCH2+1,X'FF'
         MVI       LINECNT+1,1
         RDJFCB    (SYSUT1,(INPUT),SYSUT2,(INPUT))
         OPEN      (SYSUT1,(INPUT),SYSUT2,(INPUT),SYSPUNCH,(OUTPUT),SYSX
               PRINT,(OUTPUT))
         MVC       BUFFER1(144),BUFFER1-1
         MVC       CHANGCRD+19(13),BUFFER1
         MVC       BUFFER1+40(8),=C'DOWNDATE'
         $PRINT    BUFFER1
         MVC       BUFFER1(144),BUFFER1-1
         $PRINT    BUFFER1
         MVC       BUFFER1+11(21),=C'OLD MASTER     SYSUT1'
         LA        R3,JFCB
         BAL       R14,GENDSN
         $PRINT    BUFFER1
         MVC       BUFFER1(144),BUFFER1-1
         LA        R3,JFCB2
         MVC       BUFFER1+11(21),=C'NEW MASTER     SYSUT2'
         BAL       R14,GENDSN
         $PRINT    BUFFER1
         MVC       BUFFER1(144),BUFFER1-1
         $PRINT    BUFFER1
         MVC       BUFFER1(144),BUFFER1-1
         CLI       JFCB+44,C' '
         BE        ADVANCE2
         MVC       CHANGCRD+19(5),=C'NAME='
         MVC       CHANGCRD+24(8),JFCB+44
         B         ADVANCE2
GENDSN   CLI       0(R3),C' '
         BCR       8,R14
         MVC       BUFFER1+26(7),=C'DSNAME='
         MVC       BUFFER1+33(44),0(R3)
         LA        R1,BUFFER1+76
         CLI       0(R1),C' '
         BNE       *+8
         BCT       R1,*-8
         CLI       44(R3),C' '
         BE        GENVOL
         MVI       1(R1),C'('
         MVC       2(8,R1),44(R3)
         CLI       9(R1),C' '
         BNE       *+8
         BCT       R1,*-8
         MVI       10(R1),C')'
         LA        R1,10(R1)
GENVOL   MVC       1(12,R1),=C',VOLUME=SER='
         MVC       13(6,R1),118(R3)
         BR        R14
COMPARE  CLC       BUFFER1+73(8),BUFFER2+73
         BL        DELETE
         BE        ADVANCE
ADD      MVC       BUFFER2+81(52),MESS1
         $PRINT    BUFFER2
         $PUNCH
         $GET      SYSUT2,BUFFER2+1
         B         COMPARE
DELETE   CLC       BUFFER1+73(8),=CL8' '
         BE        DELETE2
         MVC       BUFFER1+81(52),MESS2
         CLI       DELETESW,0
         BNE       DELETE0
         MVI       DELETESW,1
         MVC       DELETCRD+24(8),BUFFER1+73
DELETE0  MVC       DELETCRD+38(8),BUFFER1+73
         MVC       DELETCRD+72(8),BUFFER1+73
*./      DELETE    SEQ1=00860010,SEQ2=00860010
DELETE1  $PRINT    BUFFER1
         $GET      SYSUT1,BUFFER1+1
         B         COMPARE
DELETE2  MVC       BUFFER1+81(52),MESS5
         B         DELETE1
ADVANCE  CLC       BUFFER1+1(80),BUFFER2+1
         BE        ADVANCE1
REPLACE  MVC       BUFFER1+81(52),MESS3
         $PRINT    BUFFER1
         MVC       BUFFER2+81(52),MESS4
         $PRINT    BUFFER2
         $PUNCH
ADVANCE1 CLI       DELETESW,0
         BE        ADVANCE2
         MVI       $PUNCH2+1,X'FE'
         $PUNCH
         MVI       $PUNCH2+1,X'FF'
ADVANCE2 $GET      SYSUT1,BUFFER1+1
         $GET      SYSUT2,BUFFER2+1
         B         COMPARE
***
$GET     STM       R14,R1,SAVEREGS
         L         R15,48(0,R1)
         BR        R15
$PRINT   LR        R1,R0
         MVI       0(R1),C' '
         LH        R15,LINECNT
         SH        R15,=H'1'
         BP        $PRINT1
*        LA        R15,77                                   EAC/21FEB78
         LA        R15,59                                   WJS/21JAN80
         MVI       0(R1),C'1'
$PRINT1  STH       R15,LINECNT
         LA        R1,SYSPRINT
         L         R15,48(0,R1)
         BR        R15
$PUNCH   CLI       CHANGESW,0
         BNE       $PUNCH0
         ST        R14,SAVEREGS
         PUT       SYSPUNCH,CHANGCRD
         MVI       CHANGESW,4
         L         R14,SAVEREGS
$PUNCH0  CLI       DELETESW,0
         BE        $PUNCH1
         ST        R14,SAVEREGS
         PUT       SYSPUNCH,DELETCRD
         MVI       DELETESW,0
         L         R14,SAVEREGS
$PUNCH1  LA        R1,SYSPUNCH
         LA        R0,BUFFER2+1
         L         R15,SYSPUNCH+48
$PUNCH2  BR        R15
EOF      CLI       ENDSW,1
         BE        CHKDEL
         MVI       ENDSW,1
         LM        R15,R1,SAVEREGS
         MVC       72(8,R1),=2F'-1'
         BR        R15
CHKDEL   CLI       DELETESW,0
         BE        CHKCHNG
         MVI       $PUNCH2+1,X'FE'
         $PUNCH
CHKCHNG  CLI       CHANGESW,0
         BNE       CHECKDA
         MVC       BUFFER1(144),BUFFER1-1
         MVC       BUFFER1+1(26),=C'NO CHANGES IN THIS DATASET'
         $PRINT    BUFFER1
         B         CLOSE
CHECKDA  TM        SYSPUNCH+17,X'20'
         BZ        CLOSE
         TM        SYSPUNCH+17,X'D0'
         BNZ       CLOSE
         MVI       LINECNT+1,1
         CLOSE     (SYSPUNCH)
         OPEN      (SYSPUNCH,(INPUT))
         MVC       BUFFER1(144),BUFFER1-1
         MVC       BUFFER1+45(11),=C'UPDATE DECK'
         $PRINT    BUFFER1
         MVC       BUFFER1(144),BUFFER1-1
         $PRINT    BUFFER1
PRTLOOP  $GET      SYSPUNCH,BUFFER1+1
         $PRINT    BUFFER1
         B         PRTLOOP
CLOSE    CLOSE     (SYSUT1,,SYSUT2,,SYSPRINT,,SYSPUNCH)
         FREEPOOL  SYSUT1
         FREEPOOL  SYSUT2
         FREEPOOL  SYSPRINT
         FREEPOOL  SYSPUNCH
         L         R13,STR13
         SR        R15,R15
         IC        R15,CHANGESW
         L         R14,12(,R13)
         LM        R0,R12,20(R13)
         BR        R14
  EJECT
STR13    DC        1F'0'
SAVEAREA DC        18F'0'
BLANK    DC        0F'0',C'    '       MUST PRECEED BUFFER1
BUFFER1  DC        36F'0'
BUFFER2  DC        36F'0'
SAVEREGS DC        4F'0'
LINECNT  DC        H'1'
MESS1    DC        CL52'  TO BE ADDED            CARD PUNCHED'
MESS2    DC        CL52'  TO BE DELETED          DELETE CARD PUNCHED'
MESS3    DC        CL52'  TO BE REPLACED'
MESS4    DC        CL52'  TO REPLACE             CARD PUNCHED'
MESS5    DC        CL52'  SHOULD BE DELETED      DELETE CARD NOT PUNCHEX
               D'
DELETCRD DC        CL80'./       DELETE    SEQ1=XXXXXXXX,SEQ2=XXXXXXXX'
CHANGCRD DC        CL80'./       CHANGE'
ENDSW    DC        H'0'
CHANGESW DC        H'0'
DELETESW DC        H'0'
         DC    0D'0'
         LTORG
         DC    0D'0'
         PRINT NOGEN
SYSPRINT DCB       DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,LRECL=133,      X
               EXLST=EXLSTPRT,RECFM=FBA
SYSPUNCH DCB       DSORG=PS,MACRF=(GM,PM),DDNAME=SYSPUNCH,EODAD=CLOSE, X
               LRECL=80,EXLST=EXLSTPUN,RECFM=FB
SYSUT1   DCB       DSORG=PS,MACRF=(GM),DDNAME=SYSUT1,EODAD=EOF,        X
               LRECL=80,EXLST=JFCBPT
SYSUT2   DCB       DSORG=PS,MACRF=(GM),DDNAME=SYSUT2,EODAD=EOF,        X
               LRECL=80,EXLST=JFCBPT2
EXLSTPUN DC        0F'0',X'85',AL3(DCBEXIT)
EXLSTPRT DC        0F'0',X'85',AL3(DCBEXIT)
JFCBPT   DC        X'87',AL3(JFCB)
JFCB     DC        44F'0'
JFCBPT2  DC        X'87',AL3(JFCB2)
JFCB2    DC        44F'0'
*
*
         USING IHADCB,R1
         USING DCBEXIT,R15
DCBEXIT  LH    R4,DCBLRECL
         LH    R3,DCBBLKSI
         LTR   R3,R3
         BNZ   *+6
         LR    R3,R4
         XR    R2,R2
         DR    R2,R4
         MH    R3,DCBLRECL
         STH   R3,DCBBLKSI
         BR    R14
         DROP  R1,R15
*****
         DCBD  DSORG=(QS),DEVD=(DA)
         END       DOWNDATE
