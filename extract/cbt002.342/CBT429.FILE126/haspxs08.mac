         TITLE 'JESEXIT8 - MAIN TASK CONTROL BLOCK READ/WRITE EXIT'
***********************************************************************
**                                                                    *
* MODULE NAME: HASPXS08                                               *
*                                                                     *
* DESCRIPTIVE NAME:  READ  PCT (LLB PASSWORD CONTROL TABLE)           *
*                                                                     *
* FUNCTION:  READ CONTROL BLOCKS IN USER ADDRESS SPACE                *
*                                                                     *
* ENTRY POINTS:                                                       *
*         THIS EXIT IS TAKEN FROM THE USER ADDRESS SPACE (HASCSRDS)   *
*         JUST AFTER THE CONTROL BLOCK IS READ FROM OR JUST BEFORE    *
*         THE CONTROL BLOCK IS WRITTEN TO SPOOL.                      *
*                                                                     *
* INPUT:                                                              *
*         R0  = A POINTER TO A PARAMETER LIST WITH THE FOLLOWING      *
*               STRUCTURE, MAPPED BY $XPL:                            *
*               FIELD NAME OFFSET DESCRIPTION                         *
*               XPLID      (+0)   EYE CATCHER ('XPL')                 *
*               XPLLEVEL   (+4)   MAINTENANCE LEVEL                   *
*               XPLXITID   (+5)   EXIT NUMBER                         *
*               XPLEXLEV   (+6)   VERSION NUMBER                      *
*               XPLIND     (+7)   INDICATOR BYTE                      *
*               XPLCOND    (+8)   CONDITION BYTE. JES2 SETS THE       *
*                                 CONDITION BYTE WITH ONE OF THE      *
*                                 FOLLOWING BIT SETTINGS              *
*                                 X008CBWR    CB IS TO BE WRITTEN     *
*                                 X008CBUN    CB READ IS UNKNOWN      *
*                                 X008IOER    CB READ IS NOT VALID    *
*               XPLRESP     (+9)  RESPONSE BYTE                       *
*               XPLSIZE     (+10) LENGTH OF PARAMETER LIST            *
*               X008CBID          THE 4 CHARACTER EBCDIC CB ID        *
*         R1  = ADDRESS OF THE CONTROL BLOCK                          *
*         R11 = ADDRESS OF THE HCT                                    *
*         R13 = ADDRESS OF AN OS-STYLE SAVE AREA                      *
*         R14 = RETURN ADDRESS                                        *
*         R15 = ENTRY ADDRESS                                         *
* OUTPUT:                                                             *
*         R0  = A POINTER TO A PARAMETER LIST, MAPPED BY $XPL         *
*               FIELD NAME DESCRIPTION                                *
*               XPLCOND    CONDITION BYTE.                            *
*               XPLRESP    RESPONSE BYTE. TURN THE X008IOER BIT       *
*                          SETTING ON IN THE RESPONSE BYTE IF AN I/O  *
*                          ERROR OCCURRED.                            *
*         R15 = RETURN CODE                                           *
*                                                                     *
*         RETURN CODES HAVE THE FOLLOWING MEANINGS:                   *
*         0 - TELLS JES2 THAT IF ANY ADDITIONAL EXIT ROUTINES ARE     *
*             ASSOCIATED WITH THIS EXIT, CALL THE NEXT CONSECUTIVE    *
*             EXIT ROUTINE. IF THERE IS NO OTHER EXIT ROUTINES        *
*             ASSOCIATED WITH THIS EXIT, CONTINUE WITH NORMAL         *
*             PROCESSING, WHICH IS DETERMINED BY THE PARTICULAR EXIT  *
*             POINT FROM WHICH THE EXIT WAS CALLED.                   *
*         4 - TELLS JES2 THAT EVEN IF ADDITIONAL EXIT ROUTINES ARE    *
*             ASSOCIATED WITH THIS EXIT, IGNORE THEM; CONTINUE WITH   *
*             NORMAL PROCESSING, WHICH IS DETERMINED BY THE           *
*             PARTICULAR EXIT POINT FROM WHICH THIS EXIT WAS CALLED.  *
*         8 - TELLS JES2 THAT AN I/O ERROR WAS ENCOUNTERED. MESSAGE   *
*             $HASP370 IS ISSUED. IF THERE IS ANY OTHER EXIT ROUTINES *
*             ASSOCIATED WITH THIS EXIT, IGNORE THEM; CONTINUE WITH   *
*             NORMAL PROCESSING, WHICH IS DETERMINED BY THE           *
*             PARTICULAR EXIT POINT FROM WHICH THIS EXIT WAS CALLED.  *
*                                                                     *
***********************************************************************
         EJECT ,
         COPY  $HASPGBL            COPY HASP GLOBALS
HASPXS08 $MODULE NOTICE=NONE,ENVIRON=USER,                             C
               TITLE='JESEXIT8 - USER TASK CONTROL BLOCK I/O EXIT',    C
               ASCB,               GENERATE MVS ASCB DSECT             C
               CVT,                GENERATE MVS CVT DSECT              C
               DEB,                GENERATE MVS DEB DSECT              C
               PSA,                GENERATE MVS PSA DSECT              C
               RPL,                GENERATE MVS RGP DSECT              C
               SDWA,               GENERATE MVS SDWA DSECT             C
               $BUFFER,            GENERATE HASP BUFFER DSECT          C
               $CAT,               GENERATE HASP CAT DSECT             C
               $HASPEQU,           GENERATE HASP EQUATES               C
               $HCT,               GENERATE HASP HCT DSECT             C
               $HCCT,              GENERATE HASP SSVT DSECT            C
               $IOT,               GENERATE HASP IOT DSECT             C
               $JCT,               GENERATE HASP JCT DSECT             C
               $JQE,               GENERATE HASP JQE DSECT             C
               $MIT,               GENERATE HASP MIT DSECT             C
               $MITETBL,           GENERATE HASP MITETBL DSECT         C
               $PCE,               GENERATE HASP PCE DSECT             C
               $PDDB,              GENERATE HASP PDDB DSECT            C
               $SCAT,              GENERATE HASP SCAT DSECT            C
               $SJB,               GENERATE HASP SJB DSECT             C
               $TAB,               GENERATE HASP TAB DSECT             C
               $TQE,               GENERATE HASP TQE DSECT             C
               $USERCBS,           GENERATE USER CONTROL BLOCKS        C
               $XPL
         PRINT ON,GEN,NODATA
         SPACE 2
***********************************************************************
*                                                                     *
*        ENTRY FOR JCT READ/WRITE                                     *
*                                                                     *
***********************************************************************
UEXIT8  $ENTRY CSECT=YES,BASE=R12  EXIT ROUTINE ENTRY POINT
        $SAVE  NAME=UEXIT8         SAVE CALLERS REGS
         USING HCCT,R11            ADDRESS SSVT
         LR    R12,R15             LOAD BASE REGISTER
         SPACE
         LR    R3,R0               SAVE ENTRY CODE
         USING XPL,R3              SET UP ADDRESSABILITY FOR XPL
         LR    R9,R1               SAVE JCT POINTER
         USING JCT,R9              ADDRESS JCT
         USING PSA,0
         L     R1,FLCCVT               LOAD ADDRESS OF CVT
         L     R1,CVTTCBP-CVT(,R1)     GET POINTER TO ...
         L     R1,12(,R1)              ... ASCB
         L     R7,ASCBJBNS-ASCB(,R1)   LOAD POINTER TO STC JOBNAME
         CLC   0(8,R7),=CL8'INIT'      IS THIS AN INIT JOB
         BNE   RET0                NO, EXIT
         CLC   X008CBID,=CL4'JCT'  IS IT A JCT ?
         BNE   RET0                NO, EXIT
         TM    XPLCOND,X008CBWR    IS THIS A WRITE OPERATION ?
         BO    RET0                IF SO RETURN CODE ZERO
         SPACE ,
         TM    JCTUSER0,JCTPW      PASSWORDS SUPPLIED IN JCL ?
         BNO   RET0                NO, RETURN
         CLC   JCTUSER1,=A(0)      IS THERE A PCT  ON SPOOL ?
         BE    RET0                NO, RETURN
         SPACE
         LA    R0,STORGLEN         GET DATA AREA LENGTH
         GETMAIN  RC,LV=(0),SP=230 GET STORAGE FOR WORKAREA
         LTR   R15,R15             TEST RETURN FROM GETMAIN
         BNZ   RET0                QUIT HERE IF NO STORAGE
         ST    R1,8(,R13)          POINT CALLERS SAVEAREA TO OURS
         ST    R13,4(,R1)          SAVE ADDRESS OF CALLERS SAVE AREA
         LR    R13,R1              POINT R13 TO OUR SAVE AREA
         USING STORAGE,R13         ADDRESS CALLER SAVE AREA
         EJECT ,
***********************************************************************
*                                                                     *
*        FIND SJB                                                     *
*                                                                     *
***********************************************************************
         USING PSA,R0
         $SJBFIND TYPE=LAST
         LTR   R15,R15
         BNZ   RET0C
         ST    R1,X8SJB
         EJECT ,
***********************************************************************
*                                                                     *
*        READ IN PASSWORD CONTROL TABLE                               *
*                                                                     *
***********************************************************************
         $SJBLOCK ADDR=X8SJB,NONDISP=RETURN,TYPE=GET
         C     R15,=F'4'           RETURN CODE GREATER THAN 4
         BH    RET0C               YES, EXIT
         ST    R15,X8SJBRC         SAVE RETURN CODE
         XC    JCTUSER2,JCTUSER2 CLEAR BUFFER ADDRESS
         L     R10,X8SJB
         $CBIO TYPE=READ,MTTR=JCTUSER1,VERIFY=PCT,EXIT=NO
         B     X8BRTBL(R15)      BR INTO BR TABLE
X8BRTBL  DS    0H
         B     CBRET0
         B     CBRET4
         B     CBRET8
         B     CBRET12
         B     CBRET16
         B     CBRET20
         B     CBRET24
CBRET0   DS    0H
         ST    R1,JCTUSER2       SAVE POINTER TO PASSWORD CONTROL TABLE
         B     UNLKSJB           BRANCH TO UNLOCK SJB
CBRET4   DS    0H
         $MID  997
         WTO   '&MID.HASPXS08 - RETURN CODE 4 FROM $CBIO',ROUTCDE=10,  X
               DESC=6
         B     UNLKSJB           BRANCH TO UNLOCK SJB
CBRET8   DS    0H
         $MID  997
         WTO   '&MID.HASPXS08 - RETURN CODE 8 FROM $CBIO',ROUTCDE=10,  X
               DESC=6
         B     UNLKSJB           BRANCH TO UNLOCK SJB
CBRET12  DS    0H
         $MID  997
         WTO   '&MID.HASPXS08 - RETURN CODE 12 FROM $CBIO',ROUTCDE=10, X
               DESC=6
         B     UNLKSJB           BRANCH TO UNLOCK SJB
CBRET16  DS    0H
         $MID  997
         WTO   '&MID.HASPXS08 - RETURN CODE 16 FROM $CBIO',ROUTCDE=10, X
               DESC=6
         B     UNLKSJB           BRANCH TO UNLOCK SJB
CBRET20  DS    0H
         $MID  997
         WTO   '&MID.HASPXS08 - RETURN CODE 20 FROM $CBIO',ROUTCDE=10, X
               DESC=6
         B     UNLKSJB           BRANCH TO UNLOCK SJB
CBRET24  DS    0H
         ST    R1,JCTUSER2       SAVE POINTER TO PASSWORD CONTROL TABLE
         B     UNLKSJB           BRANCH TO UNLOCK SJB
UNLKSJB  DS    0H
         CLC   X8SJBRC,=F'4'       DID SOMEONE ALREADY HAVE THE LOCK
         BE    RET0C               YES, THEN LET THEM FREE IT
         $SJBLOCK ADDR=X8SJB,TYPE=FREE
         B     RET0C
         EJECT ,
***********************************************************************
*                                                                     *
*        RETURN                                                       *
*                                                                     *
***********************************************************************
         SPACE ,
RET0C    DS    0H
         LA    R1,STORAGE          POINT TO AREA
         L     R13,SAVEAREA+4      RESTORE CALLER'S SAVEAREA
         DROP  R13                 DROP OUR SAVE AREA
         LA    R0,STORGLEN         GET LENGTH OF DATA AREA
         ICM   R0,B'1000',=AL1(230) SET SUBPOOL
         FREEMAIN R,LV=(0),A=(1)
         SPACE ,
RET0     DS    0H
         LA    R15,0           LOAD RETURN CODE 0
        $RETURN RC=(R15)       RETURN TO CALLER
         EJECT ,
***********************************************************************
*                                                                     *
*        CONSTANTS, EQUATES AND LITERALS                              *
*                                                                     *
***********************************************************************
         LTORG ,
        $MODEND
         EJECT ,
***********************************************************************
*                                                                     *
*        USER SAVE AREA DSECT                                         *
*                                                                     *
***********************************************************************
STORAGE  DSECT
SAVEAREA DS    18F
X8SJB    DS    F
X8SJBRC  DS    F
STORGLEN EQU   *-STORAGE           LENGTH OF EXTENDED AREA
         SPACE 3
         END
