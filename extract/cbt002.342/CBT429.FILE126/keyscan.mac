***********************************************************************
****                                                                ***
****                                                                ***
****  GENERAL FUNCTION: TO VALIDATE A CHARACTER STRING CONTAINING   ***
****                    KEYWORDS AND VALUES AND PERFORM REQUESTED   ***
****                    OPERATIONS AS SPECIFIED IN THE KEYWORD      ***
****                    VALIDATION TABLE DEFINED WITH ONE OR MORE   ***
****                    KEYT MACROS.  THIS MACRO EXPANDS TO AN      ***
****                    INDEPENDENT CSECT UPON INITIAL INVOCATION   ***
****                    AND IS ACCESSED VIA V-TYPE ADDRESSING       ***
****                    FOR SUBSEQUENT INVOCATIONS.  THERE ARE 2    ***
****                    BASIC PARTS TO THIS MACRO.  THE FIRST PART  ***
****                    SETS UP THE APPROPRIATE PARMS BASED UPON    ***
****                    THE USER PARAMETERS SUPPLIED.  THE SECOND   ***
****                    PART DOES THE STRING MANIPULATION, PERFORMS ***
****                    THE REQUESTED FUNCTIONS AND SETS RETURN     ***
****                    CODES.                                      ***
****                                                                ***
****                                                                ***
****                                                                ***
****  ENTRY REGS:   R0   AL4  ADDR OF CHAR STRING                   ***
****                R1   AL4  ADDRESS OF 1ST KEYT ENTRY             ***
****                R2                                              ***
****                R3                                              ***
****                R4                                              ***
****                R5                                              ***
****                R6                                              ***
****                R7                                              ***
****                R8                                              ***
****                R9                                              ***
****                R10                                             ***
****                R11                                             ***
****                R12                                             ***
****                R13  SAVE AREA                                  ***
****                R14  RETURN ADDRESS                             ***
****                R15                                             ***
****                                                                ***
****  REGISTER USAGE:  R0   WORK                                    ***
****                   R1   WORK                                    ***
****                   R2   WORK                                    ***
****                   R3   CHAR STRING LENGTH                      ***
****                   R4   CHAR STRING ADDRESS                     ***
****                   R5   WORK                                    ***
****                   R6   WORK                                    ***
****                   R7   WORK                                    ***
****                   R8   WORK                                    ***
****                   R9   SAVED RETURN CODE                       ***
****                   R10  WORKAREA BASE                           ***
****                   R11  PROGRAM BASE                            ***
****                   R12  PROGRAM BASE                            ***
****                   R13  OLD SAVEAREA                            ***
****                   R14  KEYWORD TABLE BASE                      ***
****                   R15  RETURN CODE                             ***
****                                                                ***
****                                                                ***
****                                                                ***
****                                                                ***
****  AUTHOR: E STEWART                DATE: 05/29/80               ***
****                                                                ***
****                                                                ***
****  ATTRIBUTES: RENT,REUS,REFR                                    ***
****                                                                ***
****                                                                ***
****  CALLED BY: UTILITY FUNCTION                                   ***
****                                                                ***
****                                                                ***
****  MACROS USED: GETMAIN,FREEMAIN                                 ***
****                                                                ***
****                                                                ***
****  ROUTINES CALLED: NONE                                         ***
****                                                                ***
****                                                                ***
****  NORMAL EXIT: BR R14                                           ***
****                                                                ***
****  EXIT REGS:     R0   AL4  ADDR OF KEYWORD IN CHAR STRING WHERE ***
****                           VALIDATION ERROR OCCURED             ***
****                 R1   AL4  ADDR OF VALUE IN CHAR STRING WHERE   ***
****                           VALIDATION ERROR OCCURED             ***
****                 R15       00  KEYWORD(S)VALUE(S) FOUND AND     ***
****                               OP(S) PERFORMED                  ***
****                           04  KEYWORD(S) FOUND, SOME VALUE NOT ***
****                               FOUND IN KEYT                    ***
****                           08  A KEYWORD WAS NOT FOUND IN KEYT  ***
****                           12  'VALCNT' DID NOT PASS VALIDATION ***
****                           16  MORE INPUT EXPECTED, I.E. ONLY   ***
****                               BLANKS, COMMENTS, OR ),BLANK WAS ***
****                               FOUND. OTHERWISE RC=00 WOULD HAVE***
****                               BEEN RETURNED.                   ***
****                           20  'TYPE' DID NOT PASS VALIDATION.  ***
****                           24  'LEN' DID NOT PASS VALIDATION.   ***
****                                                                ***
****                                                                ***
****  ABEND CODES: NONE (I HOPE)                                    ***
****                                                                ***
****                                                                ***
****  MESSAGES ISSUED: NONE                                         ***
****                                                                ***
****                                                                ***
****                                                                ***
****                                                                ***
****  DSECTS/MACROS USED: NONE FROM AN EXTERNAL SOURCE              ***
****                                                                ***
****                                                                ***
****  SPECIAL NOTES:                                                ***
****                                                                ***
****                                                                ***
****                                                                ***
***********************************************************************
KEYSCAN  CSECT ,
         SAVE  (14,12),,'KEYSCAN,&SYSDATE,&SYSTIME'
         LR    R12,R15                 SAVE ENTRY ADRESS
         USING KEYSCAN,R12,R11         REAL BASE ADDRESS=R12
         LA    R11,2048(,R12)          SET UP ...
         LA    R11,2048(,R11)          ...    SECOND BASE REG
         SPACE ,
         USING KVDSVR,R14          TABLE ADDRESS BASE
         GETMAIN R,LV=KVWALNTH     GET WORKAREA
         LR    R10,R1              PUT INTO BASE REG
         USING KVWAVR,R10          WORKAREA BASE
         L     R4,20(,R13)         GET STRING ADDRESS INTO REG 4
         SR    R3,R3               CLEAR WORK REG
         ICM   R3,B'0011',0(R4)    GET STRING LENGTH
         LA    R4,2(,R4)           BUMP OVER STRING LENGTH
         MVI   KVWAFL1,0           CLEAR FLAG BYTE
         MVI   KVWAKWVA,0          CLEAR COUNT BYTE
         MVC   KVWASAV1(4*13),20(R13) SAVE REGS 0-12
         MVC   KVWASAV1+(4*14)(4*2),12(R13) SAVE REGS 14-15
         ST    R13,KVWASAV1+(4*13)  SAVE REG 13 FROM CALLER
KVR004   DS    0H
         L     R14,24(,R13)        TABLE ADDRESS
         LA    R6,KVWAVR
         LA    R7,KVWACLR
         LA    R8,KVWAVR+KVWACLR
         SLR   R9,R9
         MVCL  R6,R8
         LTR   R3,R3               Q. ANY DATA TO SCAN
         BP    KVR005              A. YES, CONTINUE AS NORMAL
         LA    R9,16               SET BAD RC
         B     KVR900              AND RETURN
KVR005   DS    0H
         SR    R2,R2               CLEAR FOR LATER
         ST    R4,KVWALOC          SAVE STRING LOC
         ST    R4,KVWAKEY          SAVE STRING LOC
KVR005A  DS    0H
         LR    R5,R3               LOAD LENGTH INTO R5
         C     R5,KVA256           IS IT GREATER THAN 256 ?
         BNH   KVR005B             NO, NO PROBLEM
         L     R5,KVA256           YES, THEN SET TO 256
KVR005B  DS    0H
         BCTR  R5,R0               REDUCE BY ONE
         EX    R5,KVTR1VR          SEARCH FOR NON BLANK
         LA    R5,1(,R3)           GET ORIG LENGTH
         CLM   R2,B'0001',KVAX00   Q. ANYTHING FOUND
         BNE   KVR006              A. YES, SEE WHAT IT IS
         SR    R3,R5               SUB OFF FROM TOTAL LENGTH
         BNP   KVR005C             NOTHING LEFT
         LA    R4,256(,R4)         BUMP UP LOCATION
         B     KVR005A
KVR005C  DS    0H
         LA    R9,16               SET BLANKS RETURN CODE
         B     KVR900              RETURN TO CALLER
KVR006   DS    0H
         LR    R5,R1               SAVE REG 1
         SR    R1,R4               GET NEW
         SR    R3,R1               DATA LENGTH
         LR    R4,R5               GET NEW LOCATION
         CLM   R2,B'0001',KVASLASH Q. COULD THIS BE COMMENT
         BNE   KVR020              A. NO, CONTINUE
         CLI   1(R4),C'*'          Q .WAS THIS A COMMENT
         BE    KVR008              A. YES, CONTINUE
         LA    R9,8                SAY INVALID KEYWORD
         B     KVR900              AND RETURN
KVR008   DS    0H                  VALIDATE COMMENT
         LA    R4,2(,R4)           BUMP OVER /*
         BCTR  R3,0                REDUCE COUNT
         BCTR  R3,0                REDUCE COUNT
KVR010   DS    0H
         CLI   0(R4),C'*'          Q. IS IT REALLY A COMMENT
         BE    KVR014              A. YES, CONTINUE
KVR012   DS    0H
         LA    R4,1(,R4)           BUMP ADDRESS
         BCT   R3,KVR010           LOOP THROUGH
         LA    R9,8                SET RETURN CODE
         B     KVR900              AND RETURN
KVR014   DS    0H
         CLI   1(R4),C'/'          Q. IS 2ND CHAR A SLASH
         BNE   KVR012              A. NO, CONTINUE SCAN FOR END
         LA    R4,2(,R4)           BUMP OVER */
         BCTR  R3,0                REDUCE COUNT
         BCTR  R3,0                REDUCE COUNT
         B     KVR005              AND CONTINUE SCAN
KVR020   DS    0H                  VALIDATE CHARACTERS FOUND
         ST    R4,KVWALOC          SAVE STRING ADDR
         ST    R4,KVWAKEY          SAVE STRING ADDR
         SR    R5,R5               CLEAR FOR KEYWORD COMPARE
         SR    R6,R6               CLEAR FOR KEYWORD COMPARE
         SR    R7,R7               CLEAR FOR KEYWORD COMPARE
KVR022   DS    0H
         IC    R5,KVLL0001         GET KEYWORD LEN
         EX    R5,KVCVR            Q. KEYWORD FOUND
         BE    KVR080              A. YES,CONTINUE
KVR023   DS    0H
         IC    R6,KVVN0001         GET COUNT OF VALUE ENTRIES
         LA    R14,0(R14,R5)       BUMP OVER VARIABLE KEYWORD
         LTR   R6,R6               Q. ANY MORE VALUES TO DO
         BZ    KVR028              A. NO, CONTINUE AS IS
KVR024   DS    0H
         IC    R7,KVVL0001         LENGTH OF VALUE KEYWORD
         LA    R14,KVVG0001(R7,R14) BUMP OVER VALUE ENTRY
         BCT   R6,KVR024           CONTINUE THRU ALL VALUES
KVR028   DS    0H
         LA    R14,KVKL0001+1(R14) BUMP OVER KEYWORD ENTRY
         CLC   KVAFFFF,KVDSVR      Q. LAST ENTRY
         BNE   KVR022              A. NO, CONTINUE SCAN
         LA    R9,8                SET RETURN CODE
         B     KVR900              AND RETURN
KVR080   DS    0H                  KEYWORD FOUND
         LA    R6,1(R5,R4)         GO TO NEXT BYTE BEYOND KEYWORD
         CLI   0(R6),C'('          Q. IS THIS DELIMITER
         BE    KVR082              A. YES, CONTINUE
         CLI   0(R6),C' '          Q. IS THIS DELIMITER
         BE    KVR082              A. YES, CONTINUE
         CLI   0(R6),C','          Q. IS THIS DELIMITER
         BE    KVR082              A. YES, CONTINUE
         LR    R9,R3               CURRENT LENGTH
         SR    R9,R5               MINUS KEYWORD EX LENGTH
         BCTR  R9,0                MINUS ONE
         LTR   R9,R9               Q. ANY DATA LEFT IN STRING
         BZ    KVR082              A. NO, JUST CONTINUE NORMALLY
         SR    R6,R6               CLEAR FOR LATER
         B     KVR023              ELSE LOOK FOR ANOTHER KEYWORD
KVR082   DS    0H
         SR    R6,R6               CLEAR WORK REG
         ICM   R6,B'0011',KVRA0001 GET EXIT ROUTINE ADDR
         BZ    KVR084              BRANCH IF NOT SPECIFIED
         SRDL  R6,12               GET REG INTO R6
         SLL   R6,2                X 4
         LA    R1,KVWASAV1         ADDR OF SAVE AREA
         L     R6,0(R6,R1)         GET CONTENTS OF RTN BASE REG
         SRL   R7,20               SHIFT TO LOWER END
         LA    R7,0(R7,R6)         GET ROUTINE ADDRESS
         ST    R7,KVWARTN          SAVE RTN ADDRESS
KVR084   DS    0H
         SR    R6,R6               CLEAR WORK REG
         ICM   R6,B'0011',KVRP0001 GET EXIT ROUTINE PARM
         BZ    KVR088              BRANCH IF NOT SPECIFIED
         SRDL  R6,12               GET REG INTO R6
         SLL   R6,2                X 4
         LA    R1,KVWASAV1         ADDR OF SAVE AREA
         L     R6,0(R6,R1)         GET CONTENTS OF PARM BASE REG
         SRL   R7,20               SHIFT TO LOWER END
         LA    R7,0(R7,R6)         GET PARM ADDRESS
         ST    R7,KVWAPRM          SAVE PARM ADDRESS
KVR088   DS    0H
         LA    R4,1(R5,R4)         GO TO NEXT BYTE BEYOND KEYWORD
         SR    R3,R5               REDUCE STRING COUNT
         BCTR  R3,0                REDUCE STRING COUNT
         CLI   0(R4),C'('          Q. VALUE(S) SPECIFIED
         BE    KVR110              A. YES, CONTINUE
         CLI   KVHV0001,0          Q. ANY VALUES REQUIRED
         BNE   KVR090              A. NO, JUST RETURN
         SR    R9,R9               SET ZERO RETURN CODE
         B     KVR900              AND RETURN
KVR090   DS    0H
         MVI   KVWAKWVA,0          CLEAR COUNT
         B     KVR172              GO PROCESS THIS KEYWORD
KVR110   DS    0H                  MOVE ALL VALUES TO LOCAL STORAGE
         SR    R1,R1               CLEAR FOR LATER
         MVI   KVWAKWVA,0          CLEAR COUNT
         BCTR  R3,0                REDUCE COUNT
         LA    R4,1(,R4)           BUMP TO NEXT BYTE
         CLI   0(R4),C')'          Q. NULL KEYWORDS
         BNE   KVR120              A. NO, CONTINUE NORMALLY
         B     KVR140              GO PROCESS NULL ENTRY
KVR120   DS    0H
         SR    R1,R1               CLEAR FOR LATER
         CLI   0(R4),C''''         Q. QUOTED STRING FOR THIS VALUE
         BNE   KVR124              A. NO, DONT SET FLAG
         OI    KVWAQUO,KVWAQQ      SAY IN QUOTE MODE
         LA    R4,1(,R4)           BUMP OVER QUOTE
         BCTR  R3,0                REDUCE STRING COUNT
KVR124   DS    0H
         LA    R2,KVWATMP          ADDR OF TEMP WORK AREA
         LR    R5,R4               SAVE OLD VALUES LOCATION
         ST    R5,KVWALOC          SAVE STRING ADDR
KVR130   DS    0H
         CLI   0(R4),C'('          Q. OPEN  PAREN
         BNE   KVR130A             A. NO, CONTINUE
         TM    KVWAQUO,KVWAQQ      Q. IN QOUTE QUOTE MODE ?
         BO    KVR130A             A. YES, CONTINUE
         OI    KVWAQUO,KVWAQP      SET PARENED QUOTE MODE
         L     R0,KVWAPRN          LOAD PAREN COUNT
         A     R0,=F'1'            ADD ONE TO PAREN COUNT
         ST    R0,KVWAPRN          STORE PAREN COUNT
         B     KVR134
KVR130A  DS    0H
         CLI   0(R4),C')'          Q. TERMINATING DELIMITER
         BNE   KVR130B             A. NO, CONTINUE
         TM    KVWAQUO,KVWAQQ      Q. IN QOUTE QUOTE MODE ?
         BO    KVR140              A. YES, CONTINUE
         TM    KVWAQUO,KVWAQP      Q. IN PAREN QUOTE MODE
         BNO   KVR140              A. NO, SAVE THIS KEYWORD
         L     R0,KVWAPRN          LOAD PAREN COUNT
         ST    R0,KVWAPRN          STORE PAREN COUNT
         S     R0,=F'1'            SUB ONE
         BP    KVR134              IF POSITIVE CONTINUE
         NI    KVWAQUO,255-KVWAQP  TURN OFF PAREN QUOTE MODE
         B     KVR134              AND CONTINUE
KVR130B  DS    0H
         CLI   0(R4),C','          Q. COMMA DELIMITER
         BE    KVR140              A. YES, SAVE THIS KEYWORD
         CLI   0(R4),C''''         Q. END OF QUOTED STRING
         BNE   KVR134              A. NO, CONTINUE
         LA    R4,1(,R4)           BUMP ADDRESS
         BCTR  R3,0                REDUCE COUNT
         LA    R1,1(,R1)           ADD 1 FOR LATER STRING MOVE
         CLI   0(R4),C''''         Q. REALLY END OF STRING
         BE    KVR134              A. NO, NOT YET JUST DOUBLE QUOTES
         NI    KVWAQUO,255-KVWAQQ  RESET QUOTE MODE FLAG
         B     KVR130              AND CONTINUE
KVR134   DS    0H
         MVC   0(1,R2),0(R4)       SAVE THIS BYTE
         LA    R2,1(,R2)           BUMP WORK BYTE
         LA    R4,1(,R4)           GO TO NEXT BYTE
         BCT   R3,KVR130           CONTINUE SCAN
         LA    R9,4                SET RETURN CODE
         B     KVR900              AND RETURN
KVR140   DS    0H                  PROCESS FOUND VALUE
         CLI   KVWAQUO,0           Q. ARE WE IN QUOTE MODE
         BNE   KVR134              A. YES, IGNORE OTHER DELIMITERS
         LR    R6,R4               SAVE NEW ADDR
         SR    R6,R5               GET VALUE LENGTH
         SR    R6,R1               SUBTRACT ANY QUOTED STRING BYTES
         SR    R5,R5               CLEAR WORK REG
         ICM   R5,B'0001',KVWAKWVA GET WORK AREA COUNT
         BNZ   KVR146              BRANCH IF ALREADY SOME IN THERE
         LA    R8,KVWAKWVA+1       GET NEXT LOC ADDRESS
         B     KVR148              AND CONTINUE
KVR146   DS    0H                  LOOK FOR VALUES END LOCATION
         LA    R8,KVWAKWVA+1       GET START ADDRESS
         SR    R7,R7               CLEAR WORK REG
         ICM   R7,B'0001',KVWAKWVA+1   GET LENGTH OF LAST ONE
KVR147   DS    0H
         LA    R8,1(R7,R8)         GO TO NEXT SLOT
         ICM   R7,B'0001',0(R8)    GET NEXT LENGTH
         BCT   R5,KVR147            LOOP THRU
KVR148   DS    0H                  MOVE NEW VALUE IN NOW
         LTR   R6,R6               Q. NULL VALUE SPECIFIED
         BNZ   KVR150              A. NO, CONTINUE MVC
         STC   R6,0(,R8)           SAVE NULL VALUE LENGTH
         B     KVR160              AND UPDATE VALUES COUNT
KVR150   DS    0H                  MOVE NEW VALUES INTO WORKAREA
         L     R5,KVWALOC          RESTORE STRING ADDR
         STC   R6,0(,R8)           SAVE STRING LENGTH
         BCTR  R6,0                REDUCE COUNT
         EX    R6,KVM1VR           PERFORM THE MOVE
         TM    KVVT0001,X'FF'      Q. ANY VALIDATION REQUIRED
         BZ    KVR160              A. NO, JUST CONTINUE
         SR    R2,R2               CLEAR WORK REG
         ICM   R2,B'0001',KVVT0001 GET VALIDATION CODE
         SLL   R2,2                X 4
         B     *+0(R2)             GO TO VALIDATE IT
         B     KVR154              ALPHA
         B     KVR156              NUMERIC
         B     KVR158              ALPH/NUMERIC
KVR154   DS    0H                  ALPHA VALIDATION
         EX    R6,KVTR2VR          A. ALPHA FIELD
         BZ    KVR160              A. YES, CONTINUE
KVR155   DS    0H                  ERROR RETURN
         LA    R9,20               SET RC
         B     KVR900              AND RETURN
KVR156   DS    0H                  NUMERIC
         EX    R6,KVTR3VR          Q. NUMERIC FIELD
         BZ    KVR160              A. YES, CONTINUE
         B     KVR155              ELSE SET BAD RC
KVR158   DS    0H                  ALPHA/NUMERIC
         EX    R6,KVTR4VR          Q. ALPHA/NUMERIC
         BZ    KVR160              A. YES, CONTINUE
         B     KVR155              ELSE ERROR RETURN
KVR160   DS    0H
         CLI   KVVLL001,0          Q. WAS VALUE LEN VALIDATION REQUSTED
         BE    KVR169              A. NO, BYPASS LENGTH VALIDATION
         LA    R6,1(,R6)           RESTORE FULL LENGTH
         CLM   R6,B'0001',KVVLL001 Q. WAS LOW VALUE PRECEEDED
         BL    KVR168              A. YES, ERROR CONDITION
         CLM   R6,B'0001',KVVLH001 Q. WAS HIGH VALUE EXCEEDED
         BH    KVR168              A. YES, ERROR CONDITION
         B     KVR169              VALUE LENGTH PASSED VALIDATION
KVR168   DS    0H
         LA    R9,24               SET VALUE ERROR
         B     KVR900              AND RETURN
KVR169   DS    0H
         IC    R7,KVWAKWVA         GET CURRENT COUNT
         LA    R7,1(,R7)           ADD ONE
         STC   R7,KVWAKWVA         AND SAVE THE COUNT
         CLI   0(R4),C')'          Q. WAS IT ENDING DELIMETER
         BE    KVR170              A. YES, TERMINATE SCAN
         LA    R4,1(,R4)           BUMP OVER COMMA
         BCTR  R3,0                REDUCE STRING LENGTH
         B     KVR120              CONTINUE FOR MORE KEYWORDS
KVR170   DS    0H                  PROCESS ENDING DELIMITER
         LA    R4,1(,R4)           BUMP OVER )
         BCTR  R3,0                REDUCE COUNT
KVR172   DS    0H                  PROCESS ENDING DELIMITER
         SR    R5,R5               CLEAR WORK REG
         SR    R6,R6               CLEAR WORK REG
         ICM   R5,B'0001',KVHV0001 GET VALUE(S) COUNT HIGH NUMBER
         BNZ   KVR180              GO HERE IF NOT ZERO COUNT
         CLM   R5,B'0001',KVWAKWVA Q. WAS COUNT FOUND ALSO ZERO
         BE    KVR180              A. YES, CONTINUE WITHOUT ERROR YET
KVR174   DS    0H
         LA    R9,12               SAY COUNT EXCEEDED
         B     KVR900              AND RETURN
KVR180   DS    0H
         CLM   R5,B'0001',KVWAKWVA Q. HIGH COUNT EXCEEDED
         BL    KVR174              A. YES, ERROR AND GET OUT
         ICM   R5,B'0001',KVLV0001 GET LOW VALUE(S) COUNT
         BZ    KVR182              GET OUT IF ZERO COUNT
         CLM   R5,B'0001',KVWAKWVA Q. COUNT LESS THAN LOW VALUE
         BH    KVR174              A. YES, GET OUT WITH ERROR
KVR182   DS    0H
         ICM   R5,B'0011',KVAA0001 Q. IS THERE AN AREA PROVIDED
         BZ    KVR200              A. NO, JUST CONTINUE
         SR    R6,R6               CLEAR WORK REG
         SR    R7,R7               CLEAR WORK REG
         ICM   R6,B'0011',KVAA0001 GET WORKAREA ADDRESS
         SRDL  R6,12               GET REG NO. INTO R2
         SLL   R6,2                X 4
         LA    R1,KVWASAV1         ADDR OF SAVE AREA
         L     R6,0(R6,R1)         GET CONTENTS OF AREA BASE REG
         SRL   R7,20               SHIFT TO LOWER END
         LA    R6,0(R7,R6)         GET WORKAREA ADDRESS
         LA    R5,KVWAKWVA         GET MY AREA ADDRESS
         SR    R2,R2               CLEAR WORK REG
         IC    R2,KVWAKWVA         GET COUNT
         MVC   0(1,R6),KVWAKWVA    MOVE COUNT BYTE
         LA    R6,1(,R6)           BUMP OVER COUNT BYTE
         LA    R5,1(,R5)           BUMP OVER COUNT BYTE
KVR184   DS    0H
         MVC   0(1,R6),0(R5)       MOVE FIRST LENGTH BYTE
         LTR   R2,R2               WAS ANYTHING IN THE AREA
         BNZ   KVR186              YES, CONTINUE WITH MOVE
         MVI   KVWAKWVA,1          SAY SOMETHING WAS THERE
         B     KVR200              AND CONTINUE
KVR186   DS    0H
         SR    R7,R7               CLEAR FOR NEXT INSTR
         ICM   R7,B'0001',0(R5)    GET BYTE COUNT
         BNZ   KVR188              BRANCH FOR NON ZERO MOVE
         LA    R6,1(,R6)           BUMP OVER NULL BYTE
         LA    R5,1(,R5)           BUMP OVER NULL BYTE
         B     KVR194              AND CONTINUE
KVR188   DS    0H
         BCTR  R7,0                REDUCE BY ONE
         EX    R7,KVM2VR           MOVE DATA OVER
KVR190   DS    0H
         LA    R6,2(R7,R6)         BUMP OVER OUTPUT
         LA    R5,2(R7,R5)         BUMP OVER INPUT
KVR194   DS    0H
         BCT   R2,KVR184           COUNTINUE MOVE
KVR200   DS    0H                  SEE IF VALUES TO BE COMPARED
         SPACE
*        AT THIS POINT THE VALUES HAVE BEEN MOVED TO MY WORKAREA
*        AND TO THE USER WORK AREA IF AREA HAS BEEN SPECIFIED
*        IN THE KEYT MACRO
         SPACE
         SR    R2,R2               CLEAR WORK REG
         ICM   R2,B'0001',KVVN0001 Q. WERE ANY VALUES TO BE VERIFIED
*                                     OR WAS THERE WORK TO BE DONE
         BNZ   KVR220              A. YES, CONTINUE AS USUAL
         SR    R9,R9               CLEAR RC
         B     KVR900              AND RETURN TO CALLER
KVR220   DS    0H
         ST    R2,KVVNCNT          SAVE COUNT
         ST    R14,KVWAR14         SAVE KEYT ADDR
         LA    R5,KVWAKWVA+1       ADDR OF FOUND VALUES
         ST    R5,KVWASV           SAVE VALUES ADDR
         MVC   KVWASVC,KVWAKWVA    SAVE VALUES COUNT
         SR    R2,R2               CLEAR REG
         ICM   R2,B'0001',KVWASVC  Q. ANY VALUES FOUND
         BNZ   KVR230              A. YES, CONTINUE WITH COUNT
         MVI   KVWASVC,1           ELSE SAY AT LEAST ONE FOUND
KVR230   DS    0H
         L     R2,KVVNCNT          GET COUNT
         L     R14,KVWAR14         GET TABLE ADDR
         L     R5,KVWASV           GET ADDR OF CURRENT VALUE TO FIND
         SR    R1,R1               CLEAR WORK REG
         ICM   R1,B'0001',KVWASVC  GET COUNT
         BZ    KVR500              STOP SCAN IF NONE LEFT
         BCTR  R1,0                REDUCE COUNT
         STC   R1,KVWASVC          SAVE NEW COUNT
         ICM   R1,B'0001',0(R5)    GET LENGTH OF CURRENT VALUE
         LA    R1,1(R1,R5)         BUMP TO WHERE NEW VALUE WILL BE
         ST    R1,KVWASV           AND SAVE ADDRESS
         SR    R7,R7               CLEAR FOR LATER
         IC    R7,KVLL0001         GET KEYWORD LENGTH
         LA    R14,0(R14,R7)       BUMP OVER VARIABLE LENGTH KEYWORD
KVR240   DS    0H                  SCAN TABLE FOR THIS VALUE
         ST    R2,KVWAR2           SAVE CURRENT COUNT
         ICM   R7,B'0001',KVVL0001 LENGTH OF VALUE
         BZ    KVR300              IF NO KEYWORD VALUE HAS BEEN PUT
*                                  IN KEYT DONT LOOK FOR A MATCH, JUST
*                                  DO THE WORK IF ANY
         BCTR  R7,0                REDUCE FOR EX INSTR
         EX    R7,KVC2VR           Q. ARE VALUES EQUAL
         BE    KVR300              A. YES, GO SEE IF ANY WORK TO DO
KVR250   DS    0H
         L     R2,KVWAR2           RELOAD LOOP COUNTER
         SR    R1,R1               CLEAR WORK REG
         IC    R1,KVVL0001         GET LENGTH OF VALUE
         LA    R14,KVVG0001(R1,R14) GO TO NEXT ENTRY
         BCT   R2,KVR240           AND CONTINUE SCAN
         CLI   KVWAVF,X'FF'        Q. WERE VALUE(S) MATCHED IN KEYT
         BE    KVR260              A. YES, CONTINUE WITH NO ERRORS
         LA    R9,4                VALUE NOT FOUND RC
         B     KVR900              AND RETURN
KVR260   DS    0H
         MVI   KVWAVF,0            RESET VALUES FOUND FLAG
         B     KVR230              AND CONTINUE WITH OTHER VALUES
KVR300   DS    0H                  VALUE FOUND SEE IF ANY WORK TO DO
         MVI   KVWAVF,X'FF'        SAY VALUES FOUND
         TM    KVOP0001,X'FF'      Q. ANY OP CODES SPECIFIED
         BNZ   KVR320              A. YES, SEE IF SOME WORK TO DO
         B     KVR250              ELSE CONTINUE VALUES SCAN
KVR320   DS    0H                  DECODE OP CODES AND DO THEM
         LA    R6,KVVV0001         GET ADDR OF VALUES ENTRY
         LA    R1,KVWAFLN          ADDR OF SAVE TABLE
         ICM   R7,B'1111',KVWACN1  GET CURRENT COUNT OF VALUES ALREADY
*                                  PROCESSED
         BZ    KVR326              ADD THIS ONE IF NONE YET
KVR322   DS    0H
         C     R6,0(,R1)           Q. ALREADY PROCESSED THIS ENTRY
         BE    KVR250              A. YES BYPASS FURTHER PROCESSING
         LA    R1,4(,R1)           BUMP TABLE ADDRESS
         BCT   R7,KVR322           CONTINUE SCAN
KVR326   DS    0H
         ST    R6,0(,R1)           SAVE ADDRESS OF THIS ENTRY FOR LATER
*                                  COMPARE OF OTHER VALUES
         L     R7,KVWACN1          GET OLD COUNT
         LA    R7,1(,R7)           ADD 1 TO IT
         ST    R7,KVWACN1          AND SAVE IT
         SR    R6,R6               CLEAR WORK REG
         SR    R7,R7               CLEAR WORK REG
         ICM   R6,B'0011',KVTO0001 GET TO ADDRESS
         SRDL  R6,12               GET REG NO. INTO R2
         SLL   R6,2                X 4
         LA    R1,KVWASAV1         ADDR OF SAVE AREA
         L     R6,0(R6,R1)         GET CONTENTS OF TO BASE REG
         SRL   R7,20               SHIFT TO LOWER END
         LA    R2,0(R7,R6)         GET TO ADDREESS
         SR    R6,R6               CLEAR WORK REG
         SR    R7,R7               CLEAR WORK REG
         ICM   R6,B'0011',KVFR0001 GET FROM ADDRESS
         SRDL  R6,12               GET REG NO. INTO R6
         SLL   R6,2                X 4
         LTR   R6,R6               Q. WAS THIS SELF DEFINING TERM
         BZ    KVR330              A. YES, DONT LOAD NONEXISTENT BASE
         LA    R1,KVWASAV1         ADDR OF SAVE AREA
         L     R6,0(R6,R1)         GET CONTENTS OF FROM BASE REG
KVR330   DS    0H
         SRL   R7,20               SHIFT TO LOWER END
         LA    R8,0(R7,R6)         GET FROM ADDRESS
         SR    R1,R1               CLEAR WORK REG
         ICM   R1,B'0011',KVOL0001 GET LENGTH OF FIELD
         BCTR  R1,0                GET EX LENGTH
         SR    R7,R7               CLEAR WORK REG
         IC    R7,KVOP0001         GET OP CODE
         SLL   R7,2                MULTIPLY BY 4
         B     *+0(R7)             BRANCH TO OP CODE ROUTINE
         B     KVR360              N OP CODE SPECIFIED
         B     KVR380              O OP CODE SPECIFIED
         B     KVR400              M OP CODE SPECIFIED
         B     KVR420              X OP CODE SPECIFIED
KVR360   DS    0H                  N OP CODE
         LTR   R6,R6               Q. WAS FROM FIELD SELF DEFINING
         BNZ   KVR366              A. NO, CONTINUE STOR-STOR OPERATION
         EX    R8,KVOPNI           ISSUE THE AND OP CODE STOR-IMED
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR366   DS    0H                  N OP CODE
         EX    R1,KVOPN            ISSUE THE AND OP CODE STOR-STOR
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR380   DS    0H                  O OP CODE
         LTR   R6,R6               Q. WAS FROM FIELD SELF DEFINING
         BNZ   KVR386              A. NO, CONTINUE STOR-STOR OPERATION
         EX    R8,KVOPOI           ISSUE THE OR OP CODE STOR-IMED
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR386   DS    0H                  N OP CODE
         EX    R1,KVOPO            ISSUE THE OR OP CODE STOR-STOR
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR400   DS    0H                  M OP CODE
         LTR   R6,R6               Q. WAS FROM FIELD SELF DEFINING
         BNZ   KVR406              A. NO, CONTINUE STOR-STOR OPERATION
         EX    R8,KVOPMI           ISSUE THE MVC OP CODE STOR-IMED
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR406   DS    0H                  N OP CODE
         EX    R1,KVOPM            ISSUE THE MVC OP CODE STOR-STOR
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR420   DS    0H                  N OP CODE
         LTR   R6,R6               Q. WAS FROM FIELD SELF DEFINING
         BNZ   KVR426              A. NO, CONTINUE STOR-STOR OPERATION
         EX    R8,KVOPXI           ISSUE THE XI OP CODE STOR-IMED
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR426   DS    0H                  N OP CODE
         EX    R1,KVOPX            ISSUE THE XC OP CODE STOR-STOR
         B     KVR250              AND CONTINUE WITH OTHER VALUES
KVR500   DS    0H                  ALL VALUES SCANNED
         SR    R9,R9               CLEAR RC
         B     KVR900              AND RETURN
KVR900   DS    0H                  RETURN POINT
         LTR   R9,R9               Q . RC=00
         BNZ   KVR930              A. NO, CONTINUE RETURN TO CALLER
         ICM   R1,B'1111',KVWARTN  Q. RTN TO CALL
         BZ    KVR910              A. NO, CONTINUE NO CALL
         MVC   KVWASKIP(KVRRLEN),KVRSKIP SET UP REG RELOAD ROUTINE
         LR    R15,R1              GET RTN ADDR
         LA    R0,KVWAKWVA         GET STRING ADDR
         ST    R13,KVWASAV+4       SAVE CALLERS SAVE AREA ADDR
         LA    R13,KVWASAV         MY SAVE AREA
         L     R1,KVWAPRM          GET PARM DATA ADDR
         STM   R0,R15,KVWASAV9     SAVE REGS
         LA    R14,KVWASKIP        LOAD RETURN ADDRESS
         LM    R2,R12,KVWASAV1+(4*2) LOAD CALLING REGS
         BR    R15                 CALL USERS ROUTINE
KVR900A  DS    0H
         L     R13,KVWASAV+4       SAVE CALLERS SAVE AREA ADDR
         LTR   R9,R15              WAS RETURN CODE ZERO?
         BNZ   KVR930              NO, RETURN TO CALLER
KVR910   DS    0H
         MVI   KVWAFL1,1           SAY AT LEAST 1 GOOD FIND
         B     KVR004              GO DO MORE NOW
KVR930   DS    0H
         L     R4,KVWALOC          SAVE STRING LOCATION
         L     R5,KVWAKEY          SAVE KEYWORD LOCATION
         CLI   KVWAFL1,0           Q. ANY GOOD FINDS
         BE    KVR950              A. NO, LEAVE RC AS IS
         C     R9,KVASIX           Q. WAS RC=16
         BNE   KVR950              A. NO, LEAVE RC AS IS
         SR    R9,R9               SET ZERO RC
KVR950   DS    0H
         LR    R1,R10              GET WORKAREA ADDRESS
         LA    R0,KVWALNTH         GET WORKAREA LENGTH
         FREEMAIN R,LV=(0),A=(1)   FREE WORKAREA
         LR    R15,R9              SETUP RETURN CODE
         LM    R6,R12,11*4(R13)    RESTORE REGS
         LR    R0,R5               PUT IN KEYWORD LOCATION
         LR    R1,R4               PUT IN STRING LOCATION
         LM    R2,R5,7*4(R13)      RESTORE OTHER REGS
         L     R14,3*4(R13)        RESTORE RETURN REG
         BR    R14                 RETURN TO CALLER
         EJECT ,
KVRSKIP  DS    0F
         B     KVRRELD-*(,R14)
KVRSAV9  DC    16F'0'
KVRRELD  LM    R0,R14,4(R14)
KVRRET   B     KVR900A
KVRRLEN  EQU   *-KVRSKIP
         EJECT ,
KVOPN    NC    0(*-*,R2),0(R8)
KVOPNI   NI    0(R2),*-*
KVOPO    OC    0(*-*,R2),0(R8)
KVOPOI   OI    0(R2),*-*
KVOPM    MVC   0(*-*,R2),0(R8)
KVOPMI   MVI   0(R2),*-*
KVOPX    XC    0(*-*,R2),0(R8)
KVOPXI   XI    0(R2),*-*
KVCVR    CLC   KVKV0001(*-*),0(R4)
KVTR1VR  TRT   0(*-*,R4),KTVRT1    NON-BLANK TEST
KVTR2VR  TRT   1(*-*,R8),KTVRT2    ALPHA TEST
KVTR3VR  TRT   1(*-*,R8),KTVRT3    NUMERIC TEST
KVTR4VR  TRT   1(*-*,R8),KTVRT4    ALPHA/NUMERIC NATIONAL TEST
KVC2VR   CLC   KVVV0001(*-*),1(R5)
KVM1VR   MVC   1(*-*,R8),KVWATMP
KVM2VR   MVC   1(*-*,R6),1(R5)
         EJECT ,
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
KTVRT1   DC    X'00000000000000000000000000000000' - 00
         DC    X'00000000000000000000000000000000' - 10
         DC    X'00000000000000000000000000000000' - 20
         DC    X'00000000000000000000000000000000' - 30
         DC    X'000000000000000000004A4B4C4D4E4F' - 40
         DC    X'500000000000000000005A5B5C5D5E5F' - 50
         DC    X'6061000000000000000000006C6D6E6F' - 60
         DC    X'0000000000000000007D7A7B7C407E7F' - 70
         DC    X'00C1C2C3C4C5C6C7C8C9000000000000' - 80
         DC    X'00D1D2D3D4D5D6D7D8D9000000000000' - 90
         DC    X'0000E2E3E4E5E6E7E8E9000000000000' - A0
         DC    X'00000000000000000000000000000000' - B0
         DC    X'00C1C2C3C4C5C6C7C8C9000000000000' - C0
         DC    X'00D1D2D3D4D5D6D7D8D9000000000000' - D0
         DC    X'0000E2E3E4E5E6E7E8E9000000000000' - E0
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000' - F0
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         EJECT ,
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
KTVRT2   DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 0
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 1
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 2
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 3
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 4
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 5
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 6
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 7
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 8
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 9
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - A
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - B
         DC    X'FF000000000000000000FFFFFFFFFFFF' - C
         DC    X'FF000000000000000000FFFFFFFFFFFF' - D
         DC    X'FFFF0000000000000000FFFFFFFFFFFF' - E
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - F
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         EJECT ,
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
KTVRT3   DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 00
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 10
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 20
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 30
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 40
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 50
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 60
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 70
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 80
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 90
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - A0
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - B0
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - C0
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - D0
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - E0
         DC    X'00000000000000000000FFFFFFFFFFFF' - F0
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         EJECT ,
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
KTVRT4   DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 00
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 10
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 20
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 30
         DC    X'FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF' - 40
         DC    X'FFFFFFFFFFFFFFFFFFFFFF0000FFFFFF' - 50
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 60
         DC    X'FFFFFFFFFFFFFFFFFFFFFF0000FFFFFF' - 70
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 80
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - 90
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - A0
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' - B0
         DC    X'FF000000000000000000FFFFFFFFFFFF' - C0
         DC    X'FF000000000000000000FFFFFFFFFFFF' - D0
         DC    X'FFFF0000000000000000FFFFFFFFFFFF' - E0
         DC    X'00000000000000000000FFFFFFFFFFFF' - F0
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         EJECT ,
*---------------------------------------------------------------------*
*        CONSTANTS USED BY KEYWORD PARSE ROUTINE                      *
*---------------------------------------------------------------------*
KVAFFFF  DC    X'FFFF'
KVASIX   DC    F'16'
KVA256   DC    F'256'
KVAX00   DC    X'00'
KVASLASH DC    C'/'
         EJECT ,
*---------------------------------------------------------------------*
*        LITERAL POOL                                                 *
*---------------------------------------------------------------------*
         SPACE ,
         LTORG ,
         EJECT ,
*---------------------------------------------------------------------*
*                CONSTANTS AND EQUATES                                *
*---------------------------------------------------------------------*
         SPACE ,
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT ,
*---------------------------------------------------------------------*
*        PATCH AREA                                                   *
*---------------------------------------------------------------------*
         SPACE ,
         DC    32X'0'
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         SPACE ,
KVWAVR   DSECT ,                   START OF PARSE WORK AREA
KVWASAV  DS    18F                 SAVE AREA TO CALL RTN
KVWAVF   DS    X                   VALUES FOUND FLAG
KVWAQUO  DS    X                   QUOTED STRING MODE FLAG
KVWAQQ   EQU   B'10000000'         QUOTED QUOTED STRING
KVWAQP   EQU   B'01000000'         PARENED QUOTED STRING
KVWAPRN  DS    F                   COUNT OF PAREN NESTING
KVWASV   DS    F                   ADDR OF VALUES FOUND
KVWARTN  DS    F                   ADDRESS OF RTN TO CALL
KVWAPRM  DS    F                   ADDRESS OF RTN PARM
KVWALOC  DS    F                   LOCATION OF INPUT STRING
KVWAR14  DS    F                   SAVE AREA FOR REG 14
KVWAR2   DS    F                   SAVE AREA FOR REG 2
KVVNCNT  DS    F                   VALUE COUNT SAVEAREA
KVWAKEY  DS    F                   ADDRESS OF CURRENT KEYWORD IN STRING
KVWACN1  DS    F                   COUNT OF VALUE ADDRS IN KVWAFLN
KVWASVC  DS    X                   COUNT OF VALUES FOUND
KVWAKWVA DS    512X                WORKAREA FOR VALUE MOVE
KVWATMP  DS    256X                WORKAREA FOR TEMP VALUE MOVE
KVWACLR  EQU   *-KVWAVR            LENGTH OF WORKAREA TO CLEAR
KVWAFL1  DS    X                   FLAG TO SHOW SOME GOOD WORDS FOUND
KVWASAV1 DS    16F                 SAVE AREA FOR CALLERS REGS
KVWASKIP DS    F                   REGISTER RELOAD ROUTINE
KVWASAV9 DS    16F                 REGISTER RELOAD SAVE AREA
KVWARELD DS    F                   REGISTER RELOAD
KVWARET  DS    F                   REGISTER RELOAD RETURN
KVWAFLN  DS    15XL4               SAVEAREA FOR MAX COUNT OF FIELDN'S
KVWALNTH EQU   *-KVWAVR
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         SPACE ,
KVDSVR   DSECT
KVLL0001 DS    AL1                 LENGTH OF KEY-1
KVRA0001 DS    SL2                 RTN ADDRESS
KVRP0001 DS    SL2                 RTN PARM
KVAA0001 DS    SL2                 AREA ADDRESS
KVVLL001 DS    AL1                 VALUE LENGTH LOW
KVVLH001 DS    AL1                 VALUE LENGTH HIGH
KVLV0001 DS    AL1                 VALUE COUNT LOW
KVHV0001 DS    AL1                 VALUE COUNT HIGH
KVVT0001 DS    XL1                 VALUE TYPE
KVTA0001 EQU   X'01'               ALPHA TYPE
KVTN0001 EQU   X'02'               NUMERIC TYPE
KVTB0001 EQU   X'03'               ALPHA OR NUMERIC TYPE
KVVN0001 DS    AL1                 COUNT OF VALUE ENTRIES
KVKL0001 EQU   *-KVLL0001          LENGTH OF TABLE ENTRY MINUS KEYWORD
KVKV0001 DS    C                   KEYWORD
KVVL0001 DS    AL1                 VALUE LENGTH
KVOP0001 DS    XL1                 OP CODE
KVVA0001 EQU   X'01'               N  OP CODE
KVVO0001 EQU   X'02'               O  OP CODE
KVVM0001 EQU   X'03'               M  OP CODE
KVVX0001 EQU   X'04'               X  OP CODE
KVTO0001 DS    SL2                 TO ADDRESS
KVFR0001 DS    SL2                 FROM ADDRESS
KVOL0001 DS    AL2                 LENGTH OF TO FIELD
KVVG0001 EQU   *-KVVL0001          ENTRY LENGTH MINUS VALUE CONSTANT
KVVV0001 DS    C                   VALUE CONSTANT
KVLA0001 EQU   *,2                 LAST ENTRY =X'FFFF'
         END
