++USERMOD(LLB0007) .
++VER(Z038) FMID(HAE2402)
   /*
     *************************************************************
     *** ====> NOTE: SAMPLIB MUST BE ADDED TO THE SYSLIB DDDEF ***
     ***             BEFORE THIS MOD IS APPLYED.               ***
     *************************************************************
    DESCRIPTION:
                 CREATES A VERSION OF DF/DSS THAT DOES NOT REQUIRE
                 PASSWORDS FOR BACKING UP FILES OR VOLUMES
       */ .
++JCLIN .
//SMP0007  JOB  (TS),'TECH SUPPORT',REGION=2048K
//ASM      EXEC PGM=IEV90,PARM='DECK,REFR,RENT,XREF(SHORT)'
//SYSLIB   DD   DSN=SYS1.SMPMTS,DISP=SHR,DCB=BLKSIZE=19040
//         DD   DSN=SYS1.MACLIB,DISP=SHR
//         DD   DSN=SYS1.HASPSRC,DISP=SHR
//         DD   DSN=SYS1.AMODGEN,DISP=SHR
//         DD   DSN=SYS1.ASAMPLIB,DISP=SHR
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT2   DD   UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT3   DD   UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSPRINT DD   SYSOUT=A
//SYSIN    DD   DSN=SYS2.LLBSRC(ADRUPSWD),DISP=SHR
//SYSPUNCH DD   DSN=SYS1.ADRLIB(ADRUPSWD),DISP=SHR
//*
//LKED     EXEC  PGM=IEWL,PARM='RENT,REFR,AC=1,AMODE=31'
//SYSUT1   DD    UNIT=SYSDA,SPACE=(CYL,(5,1))
//SYSPRINT DD    SYSOUT=*
//LLBOBJ   DD   DSN=SYS2.LLBOBJ,DISP=SHR
//SYSLMOD  DD   DSN=SYS1.LINKLIB,DISP=SHR
//SYSLIN   DD   *
  INCLUDE  LLBOBJ(ADRUPSWD)
  ENTRY    ADRDSSU
  ALIAS    DUMPVOL
  SETCODE  AC(1)
  NAME     ADRDSSU(R)
//*
++SRC(ADRUPSWD) DISTLIB(LLBSRC) .
ADRUPSWD TITLE 'DSS USER PASSWORD EXIT ROUTINE                '
***********************************************************************
*                                                                     *
*             MODULE NAME = ADRUPSWD                                  *
*                                                                     *
*             DESCRIPTIVE NAME =  DSS USER PASSWORD ROUTINE           *
*                                                                     *
*             FUNCTION =                                              *
*                   1) IF OPERATION IS DEFRAG SET RETURN CODE TO 0    *
*                   2) IF PGM NAME IS DUMPVOL DYNAMICALLY ALLOCATE    *
*                      AND OPEN "SECURITY" DATASET                    *
*                      (IF THIS DATASET IS PASSWORD PROTECTED THIS    *
*                       WILL CAUSE THE SYSTEM TO ASK FOR A PASSWORD)  *
*                   2A) IF NO ABEND (I.E. 913) OCCURS SET RETURN CODE *
*                       TO ZERO.                                      *
*                       ELSE SET RETURN CODE TO 12                    *
*                                                                     *
*                OPERATION =                                          *
*                   INVOKED BY DSS (ADRDSSU)                          *
*                                                                     *
*              INPUT =                                                *
*                   R1  - POINTER TO FOUR WORD PARAMETER AREA         *
*                   R13 - ADDRESS OF 72 BYTE STANDARD REGISTER SAVE   *
*                         AREA                                        *
*                   R14 - RETURN ADDRESS                              *
*                   R15 - ADDRESS OF ADRUPSWD                         *
*                   PARAMETER LIST                                    *
*                      FIRST  WORD - POINTER TO THE FORMAT-1 DSCB FOR *
*                                    A PASSWORD-PROTECTED             *
*                                    NON-VSAM DATASET OR              *
*                                    POINTER TO THE CLUSTER NAME FOR  *
*                                    A VSAM DATASET OR                *
*                                    ZERO FOR A VOLUME LEVEL ENTRY    *
*                      SECOND WORD - POINTER TO THE CATALOG NAME OR   *
*                                    ZERO FOR A VOLUME LEVEL ENTRY    *
*                      THIRD  WORD - POINTER TO THE VOLUME SERIAL     *
*                                    NUMBER                           *
*                      FOURTH WORD - CONTAINS FLAGS WHICH ARE SET AS  *
*                                    FOLLOWS:                         *
*                           BYTE 1                                    *
*                           BIT   MEANING                             *
*                           0     END OF PARM LIST. MUST BE ONE       *
*                           1     IF ON, READ ACCESS IS DESIRED ON    *
*                                 THE VOLUME. IF OFF WRITE ACCESS IS  *
*                                 REQUIRED.                           *
*                           2     SET TO ONE FOR DUMP    OPERATION    *
*                           3     SET TO ONE FOR RESTORE OPERATION    *
*                           4     SET TO ONE FOR COPY    OPERATION    *
*                           5     SET TO ONE FOR PRINT   OPERATION    *
*                           6     SET TO ONE FOR DEFRAG  OPERATION    *
*                           7     RESERVED                            *
*                           BYTE 2                                    *
*                           BIT   MEANING                             *
*                           0     SET TO ONE FOR DEFRAG, PRINT, DUMP  *
*                                 OR RESTORE FOR A DATASET OPERATION. *
*                           1     SET TO ONE FOR A FULL VOLUME DUMP,  *
*                                 RESTORE OR COPY OPERATION           *
*                           2     SET TO ONE FOR A PARTIAL VOLUME     *
*                                 (BY TRACKS) DUMP, RESTORE OR COPY   *
*                                 OPERATION                           *
*                           3 TO 7 RESERVED                           *
*                           BYTE 3                                    *
*                           BIT   MEANING                             *
*                           0     SET ON FOR VOLUME LEVEL ENTRY       *
*                                 SET OFF FOR DATASET LEVEL ENTRY     *
*                           1     SET ON FOR VSAM DATASETS CATALOGED  *
*                                 IN AN ICF CATALOG.                  *
*                                 CLUSTER AND CATALOG NAMES ARE PASSED*
*                           2 TO 7 RESERVED                           *
*                           BYTE 4 RESERVED                           *
*              OUTPUT = R15 CONTAINS RETURN CODE                      *
*                       (SEE MANUAL SC26-3949)                        *
*              NOTES =                                                *
*                                                                     *
*                                                                     *
*             ENTRY POINTS = ADRUPSWD (ONLY ENTRY POINT)              *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT ,
ADRUPSWD CSECT ,
ADRUPSWD AMODE 31
ADRUPSWD RMODE ANY
***********************************************************************
*
*        REGISTER EQUATES
*
***********************************************************************
R0       EQU   0                   REG 0  - WORK REG
R1       EQU   1                   REG 1  - WORK/PARMETER REG
R2       EQU   2                   REG 2  - WORK REG
R3       EQU   3                   REG 3  - WORK REG
R4       EQU   4                   REG 4  - UNUSED
R5       EQU   5                   REG 5  - UNUSED
R6       EQU   6                   REG 6  - BASE FOR OUTPUT LINE
R7       EQU   7                   REG 7  - BASE FOR COMMON PARM AREA
R8       EQU   8                   REG 8  - BASE FOR BLDL LIST
R9       EQU   9                   REG 9  - BASE FOR SMF RECORD
R10      EQU   10                  REG 10 - UNUSED
R11      EQU   11                  REG 11 - UNUSED
R12      EQU   12                  REG 12 - CSECT BASE REG
R13      EQU   13                  REG 13 - DATA DSECT BASE REG
R14      EQU   14                  REG 14 - LINKAGE REGISTER
R15      EQU   15                  REG 15 - WORK REG
         EJECT ,
***********************************************************************
*                                                                     *
*        SAVE REGISTERS, LOAD PARM DSECT AND GET WORK AREA            *
*                                                                     *
***********************************************************************
         SAVE  (14,12),,'ADRUPSWD,&SYSDATE,&SYSTIME'
         LR    R12,R15             LOAD BASE REGISTER
         USING ADRUPSWD,R12        SET UP CSECT ADDRESSABILITY
         LA    R7,0(,R1)           PARAMETER AREA ADDRESS
         USING ADRUPB,R7           SET UP ADDRESSABILITY TO PARMS
         L     R0,DATALEN          LOAD GETMAIN PARMS
         GETMAIN R,LV=(0)          GET STORAGE FOR DATA DSECT
         ST    R13,SAVEBK-SAVE(,R1) SAVE CALLER'S SAVE AREA ADDR
         ST    R1,SAVEFW-SAVE(,R13) SAVE MY SAVE AREA ADDRESS
         LR    R13,R1              LOAD REGISTER 13 WITH GETMAINED ADDR
         USING DATA,R13            SET UP DATA DSECT ADDR.
         B     TESTDFRG
         EJECT ,
***********************************************************************
*                                                                     *
*        TEST FOR DEFRAG OPERATION IF SO BRANCH TO RET CODE 0         *
*                                                                     *
***********************************************************************
TESTDFRG DS    0H
         TM    UPFLG1,UPDEFRAG     DOING DEFRAG ?
         BO    RET0                YES, EXIT CODE 0
         TM    UPFLG1,UPPRINT      DOING PRINT  ?
         BNO   GETPGNM             NO, CHECK PROGRAM NAME
         TM    UPFLG3,UPIND        VOLUME CHECKING
         BO    RET8                YES, RETURN CODE 8
         L     R1,UPDSCBAD         LOAD POINTER TO DSCB/DSN
         LTR   R1,R1               IS IT ZERO ?
         BZ    RET8                YES, RETURN CODE 8
         CLC   0(44,R1),=CL44'PASSWORD' PASSWORD DATASET ?
         BE    RET8                YES, MAKE SURE THEY KNOW THE PSWD
         B     GETPGNM             NO, BRANCH TO CHECK PROGRAM NAME
         DROP  R7
         EJECT ,
***********************************************************************
*                                                                     *
*        CHECK FOR PROGRAM NAME OF DUMPVOL                            *
*        IF NOT BRANCH TO RETURN CODE 12                              *
*                                                                     *
***********************************************************************
         SPACE ,
GETPGNM  DS    0H
         L     R1,PSATOLD-PSA(,0)  LOAD ADDRESS OF CURRENT TCB
         L     R1,TCBOTC-TCB(,R1)  LOAD ORIGINATING TCB
         L     R1,TCBRBP-TCB(,R1)  LOAD ADDRESS OF CURRENT RB
         L     R1,RBCDE-RBBASIC(,R1)  LOAD ADDRESS OF CURRENT CDE
         CLC   CDNAME-CDENTRY(8,R1),=CL8'DUMPVOL'
         BNE   RET12               RETURN CODE 12
         B     RET0                RETURN CODE 0
*        B     ALCSCRTY            BRANCH TO ALLOC SECURITY DATASET
         EJECT ,
***********************************************************************
*                                                                     *
*        HERE WE DYNAMICALLY ALLOCATE THE SECURITY DATASET AND        *
*        OPEN IT FOR OUTPUT THIS WILL CAUSE THE SYSTEM                *
*        TO ASK FOR A PASSWORD IF THE SECURITY DATASET IS PASSWORD    *
*        PROTECTED                                                    *
*                                                                     *
***********************************************************************
ALCSCRTY DS    0H
         LA    R8,DYNPARMS         SET UP BASE REG FOR DYNALLOC PARMS
         USING S99RBP,R8           ESTABLISH ADDRESSABILITY
         LA    R4,S99RBPTR+L'S99RBPTR POINT PAST RBPTR
         USING S99RB,R4            ESTABLISH ADDRESSABILITY
         ST    R4,S99RBPTR         POINT RBPTR TO RB
         OI    S99RBPTR,S99RBPND   TURN ON HIGH ORDER BIT OF RBPTR
         XC    S99RB(RBLEN),S99RB  CLEAR RB
         MVI   S99RBLN,RBLEN       SET LENGTH OF RB
         MVI   S99VERB,S99VRBAL    SET VERB CODE TO ALLOCATE FUNCTION
         LA    R5,S99RB+RBLEN      POINT PAST RB
         USING S99TUPL,R5          ESTABLISH ADDRESSABILTY
         ST    R5,S99TXTPP         SET RB TEXT POINTERS
         SPACE ,
         LA    R6,S99TUPL+4*L'S99TUPTR POINT PAST 4 TEXT UNIT POINTERS
         USING S99TUNIT,R6         ESTABLISH ADDRESSABILITY
         ST    R6,S99TUPTR         PNT 1ST TXT UNIT PTR TO 1ST TXT UNIT
         LA    R7,DALDSNAM         GET KEY FOR DSNAME
         STH   R7,S99TUKEY         AND SET IT IN TEXT UNIT FIELD
         LA    R7,1                SET NUMBER OF DSN PARMS ...
         STH   R7,S99TUNUM         ... TO ONE
         LA    R7,L'SECURITY       SET LENGTH OF DSN FIELD ...
         STH   R7,S99TULNG         ... IN TEXT UNIT
         MVC   S99TUPAR(L'SECURITY),SECURITY
         SPACE ,
         LA    R6,S99TUNIT+S99TUPAR-S99TUNIT+L'SECURITY POINT PAST TU
         LA    R5,S99TUPL+L'S99TUPTR POINT TO NEXT UNIT POINTER
         ST    R6,S99TUPTR         SET TEXT UNIT POINTER
         LA    R7,DALSTATS         GET KEY FOR STATUS ...
         STH   R7,S99TUKEY         ... AND STORE IT IN TEXT UNIT
         LA    R7,1                SET NUMBER OF STATUS PARMS ...
         STH   R7,S99TUNUM         ... TO ONE
         STH   R7,S99TULNG         SET PARM LEN TO ONE
         MVI   S99TUPAR,SHARE      SET SHARE
         SPACE ,
         LA    R6,S99TUNIT+S99TUPAR-S99TUNIT+1          POINT PAST TU
         LA    R5,S99TUPL+L'S99TUPTR POINT TO NEXT UNIT POINTER
         ST    R6,S99TUPTR         SET TEXT UNIT POINTER
         LA    R7,DALCLOSE         GET KEY FOR 'UNALLOC AT CLOSE' ...
         STH   R7,S99TUKEY         ... AND STORE IT IN TEXT UNIT
         LA    R7,0                SET NUMBER OF PARMS ...
         STH   R7,S99TUNUM         ... TO ZERO
         SPACE ,
         LA    R6,S99TUNIT+S99TUPAR-S99TUNIT            POINT PAST TU
         LA    R5,S99TUPL+L'S99TUPTR POINT TO NEXT UNIT POINTER
         ST    R6,S99TUPTR         SET TEXT UNIT POINTER
         OI    S99TUPTR,S99TUPLN   TURN ON HIGH ORDER BIT FOR LAST PRM
         LA    R7,DALRTDDN         GET KEY FOR 'RETURN DDNAME' ...
         STH   R7,S99TUKEY         ... AND STORE IT IN TEXT UNIT
         LA    R7,1                SET NUMBER OF 'RETURN DDN' PARMS ...
         STH   R7,S99TUNUM         ... TO ONE
         LA    R7,8                GET PARM LENGTH FOR DDNAME
         STH   R7,S99TULNG         SET PARM LEN FOR DDNAME
         LR    R1,R8               SET PARM REG FOR DYNALLOC
         SPACE ,
         DYNALLOC                  CALL DYNALLOC
         L     R0,S99ERROR
         LTR   R15,R15             IF NOT SUCESSFULL
         BNZ   RET12               RETURN CODE 12
         B     SETESTAE            BRANCH TO SET ESTAE (RECOVERY) ENV.
         EJECT ,
***********************************************************************
*                                                                     *
*        SET UP RECOVERY ENVIRONMENT                                  *
*                                                                     *
***********************************************************************
SETESTAE DS    0H
         MVC   ESTAEW(LESTAEL),ESTAEL  MOVE IN ESTAE PARAMETER LIST
         LA    R0,RTRYRTN1             RETRY ROUTINE - NO SDWA
         ST    R0,ESTAPARM             STORE IN PARAMETER LIST
         LA    R0,RTRYRTN2             RETRY ROUTINE - WITH SDWA
         ST    R0,ESTAPARM+4           STORE IN PARAMETER LIST
         STM   R12,R13,ESTAPARM+8      STORE BASE & DATA REG IN PARM
         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW) SETUP RCVRY
         B     SETCLSTS
         EJECT ,
***********************************************************************
*                                                                     *
*        SET UP SECURDCB, OPEN CLIST AND CLOSE CLIST                  *
*                                                                     *
***********************************************************************
SETCLSTS DS    0H
         MVC   SECURDCB(DCBLISTL),DCBLIST
         MVC   SECURDCB+40(8),DYNDDNAM
         MVC   OPENDATA(OPENLEN),OPENLIST
         MVC   CLOSDATA(CLOSLEN),CLOSLIST
         EJECT ,
***********************************************************************
*                                                                     *
*        OPEN, CLOSE, CANCEL ESTAE AND RETURN                         *
*                                                                     *
***********************************************************************
         LA    R2,SECURDCB
         OPEN  ((2)),MF=(E,OPENDATA)
         LA    R2,SECURDCB
         CLOSE ((2)),MF=(E,CLOSDATA)
         ESTAE 0                   CANCEL ESTAE EXIT
         B     RET0
         EJECT ,
***********************************************************************
*                                                                     *
*        ESTAE EXIT ROUTINE                                           *
*                                                                     *
*        THIS CODE WILL ONLY BE EXECUTED IN THE CASE WHERE AN ABEND   *
*        OCCURS AFTER THE ESTAE MACRO HAS BEEN EXECUTED.              *
*        THE PURPOSE OF THIS CODE IS TO INTERCEPT 913 (INVALID PSWD)  *
*        ABENDS WHEN THE WRONG PASSWORD IS GIVEN FOR THE SECURITY     *
*        DATASET. IT THEN "RECOVERS" TO A ROUTINE THAT SETS THE       *
*        RETURN CODE TO 12.                                           *
*                                                                     *
***********************************************************************
RECOVERY DS    0H
         DROP  R12
         USING *,R15               SET UP ADDRESSABILITY
         LA    R4,4                PUT 4 IN REGISTER FOR COMPARE
         CR    R0,R4               IS SDWA PRESENT?
         BNE   HAVESDWA            YES, BR TO PROCESS WITH SDWA
         L     R0,0(R2)            LOAD RETRY ADDRESS FROM PARAM LIST
         LA    R15,4               SET RETCODE TO RETRY ADDR IN R0
         BR    R14                 RETURN TO PROCESSOR WITH RETRY ADDR
HAVESDWA DS    0H                  ENTER HERE IF SDWA PRESENT
         ST    R14,12(R13)         SAVE RETURN ADDRESS
         L     R2,0(R1)            LOAD PARAM LIST ADDR FROM SDWA
         L     R2,4(R2)            LOAD RETRY ADDRESS
         SETRP RC=4,,RETADDR=(2),RETREGS=YES,FRESDWA=YES,REGS=(14)
         DROP  R15
         SPACE 3
***********************************************************************
*                                                                     *
*        ESTAE RETRY ROUTINE WHEN NO SDWA WAS PRESENT                 *
*                                                                     *
***********************************************************************
         USING ADRUPSWD,R12        SET UP CSECT ADDRESSABILITY
RTRYRTN1 DS    0H                  RETRY ROUTINE WITH NO SDWA PRESENT
         LM    R12,R13,8(R1)       LOAD REGS FOR ESTAE PARM LIST
         B     RTRYRTN2
***********************************************************************
*                                                                     *
*        ESTAE RETRY ROUTINE WHEN SDWA WAS PRESENT                    *
*                                                                     *
***********************************************************************
RTRYRTN2 DS    0H                  ESTAE RETRY ROUTINE WITH SDWA
         LA    R2,SECURDCB
         CLOSE ((2)),MF=(E,CLOSDATA)
         LA    R15,12              LOAD RETURN CODE OF 12
         B     RETURN              AND GET OUT
         EJECT ,
***********************************************************************
*                                                                     *
*        SET RETURN CODE, FREE STORAGE AND RETURN                     *
*                                                                     *
***********************************************************************
RET0     DS    0H
         LA    R15,0
         B     RETURN
RET8     DS    0H
         LA    R15,8
         B     RETURN
RET12    DS    0H
         LA    R15,12
         B     RETURN
RETURN   DS    0H                  ESTAE RETRY ROUTINE WITH SDWA
*                                  JUST FREE STORAGE AND EXIT
         LR    R2,R15              SAVE RET CODE
         LR    R1,R13              GET FREEMAIN ADDRESS
         L     R13,SAVEBK          LOAD OLD REG 13
         L     R0,DATALEN          LOAD FREEMAIN PARM
         FREEMAIN R,LV=(0),A=(1)   FREE DATA DSECT STORAGE
         LR    R15,R2              SET RETURN CODE
         L     R14,12(,R13)        LOAD RETURN ADDRESS
         RETURN (0,12),RC=(15)     RETURN TO CALLER
         EJECT ,
***********************************************************************
*                                                                     *
*        CONSTANTS, LITERALS AND CLIST TEMPLATES                      *
*                                                                     *
***********************************************************************
SECURITY DC    CL44'SYS2.APFLIB'
         LTORG ,
         PRINT ON,NOGEN
*
* DEFINE ESTAE LIST FORM
*
ESTAEL   ESTAE MF=L               CREATE MODEL ESTAE PARM LIST
LESTAEL  EQU   *-ESTAEL           NAME ITS LENGTH
*
* DEFINE DCB
*
DCBLIST  DCB   DDNAME=XXXXXXXX,MACRF=(W),DSORG=PO
DCBLISTL EQU   *-DCBLIST
*
* DEFINE OPEN
*
OPENLIST OPEN  (,(OUTPUT)),MF=L
OPENLEN  EQU   *-OPENLIST
CLOSLIST CLOSE (,),MF=L
CLOSLEN  EQU   *-CLOSLIST
         EJECT ,
***********************************************************************
*                                                                     *
*        SYSTEM DSECT                                                 *
*                                                                     *
***********************************************************************
         IHARB
         IEFZB4D0
         IEFZB4D2
RBLEN    EQU   S99RBEND-S99RB
         IHASDWA DSECT=YES         SDWA FOR ESTAE/SETRP MACRO
         IHAPSA                    PSA
         IKJTCB                    TCB
         IHACDE                    CDE
         ADRUPB
         EJECT ,
***********************************************************************
*                                                                     *
*        DSECT FOR GETMAIN'ED STORAGE                                 *
*                                                                     *
***********************************************************************
DATA     DSECT
SAVE     DS    18F              SAVE AREA FOR REGISTERS ON ENTRY
         ORG   SAVE
SAVEXX   DS    F
SAVEBK   DS    F
SAVEFW   DS    F
SAVER14  DS    F
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
         DS    11F
*
*        STORAGE FOR ESTAE PARM LIST
*
ESTAEW   DS    XL(LESTAEL)      ESTAE PARM LIST AREA
ESTAPARM DS    4F               PARAMETER LIST PASSED TO RETRY ROUTINE
*
*        STORAGE FOR DYN ALLOC PARM LIST
*
SHARE    EQU   X'08'
DYNPARMS DS    0F               PARMS PASSED IN REG 1 TO ROUTINE
         DS    XL(L'S99RBPTR)
         DS    XL(RBLEN)
         DS    4XL(L'S99TUPTR)
         DS    XL(S99TUPAR-S99TUNIT+L'SECURITY)
         DS    XL(S99TUPAR-S99TUNIT+1)
         DS    XL(S99TUPAR-S99TUNIT)
         DS    XL(S99TUPAR-S99TUNIT)
DYNDDNAM DS    CL8
*
*        STORAGE FOR DCB
*
SECURDCB DCB   DDNAME=XXXXXXXX,MACRF=(W),DSORG=PO
*
*        STORAGE FOR OPEN CLIST
*
OPENDATA OPEN  (,(OUTPUT)),MF=L
*
*        STORAGE FOR CLOSE CLIST
*
CLOSDATA CLOSE (,),MF=L
*
*        EXTRA STORAGE IF NEEDED FOR ZAP PATCHES
*
         DS    6D
LDATA    EQU   *-DATA
         EJECT ,
ADRUPSWD CSECT
         DS    0D
DATALEN  DC    0F'0',AL1(230),AL3(LDATA)
MODLEN   EQU   *-ADRUPSWD
LPATCH   EQU   (MODLEN+9)/10/8+1   ADD 10% FOR PATCH AREA
LPATCHL  DC    AL2(LPATCH*8)
SPATCH   DC    S(PATCH)
PATCH    DC    (LPATCH)D'00'
         END   ADRUPSWD
