//WTOR     JOB  TS,GIBSON,MSGCLASS=X,COND=(4,LT),REGION=4096K,
//         CLASS=Y
//ASMBL    EXEC ASMFCL,PARM.ASM='OBJ,NODECK',
//         PARM.LKED='XREF,NCAL,LIST'
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT2   DD SPACE=(CYL,(50,10))
//SYSUT3   DD SPACE=(CYL,(50,10))
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
***********************************************************************
*   THIS PROGRAM WAS WRITTEN TO TEST IEAVMXIT. IT WILL TAKE WHATEVER  *
*   MESSAGE IS SPECIFIED AS A PARM AND PUT IT OUT AS A WTO IF         *
*   PARM='WTO=MSG' IS SPECIFIED OR AS A WTOR IF                       *
*   PARM='WTOR=MSG' IS SPECIFIED.                                     *
*                                                                     *
*  FOLLOWING IS JCL USED TO INVOKE:                                   *
*  //SYSTEST  JOB  TS,GIBSON,MSGCLASS=X,CLASS=Y                       *
*  //TEST1    EXEC PGM=WTOR,PARM='WTOR=SYSTEM TESTING'                *
*  //STEPLIB  DD   DSN=GIBSON.LOADLIB,DISP=SHR                        *
***********************************************************************
         TITLE 'WTOR'
WTOR     CSECT                     BEGINING OF PROGRAM
         USING *,R12               SET UP BASE REG
         SAVE  (14,12),,WTOR..&SYSDATE       SAVE REGESTERS
         LR    R12,R15             SET UP ADDRESSABILITY
         LR    R2,R13              SAVE ADDR OF PREVIOUS SAVEAREA
         LA    R13,SAVEAREA        POINT TO CURRENT SAVEAREA
         ST    R13,8(R2)           LINK PREVIOUS SAVEAREA TO SAVEAREA
         ST    R2,4(R13)           LINK SAVEAREA TO PREVIOUS SAVEAREA
         L     R1,0(,R1)           LOAD ADDR OF PARM INTO R1
         CLC   0(2,R1),=H'0'       PARM LENGTH = 0?
         BE    INVPARM             YES, ISSUE INVALID PARM WTO
DOPARM   DS    0H
         CLC   0(2,R1),=H'5'       COMPARE LENGTH OF TO MAX LENGTH
         BL    INVPARM             INVALID PARM LENGTH
         CLC   =C'WTO=',2(R1)      WTO PARAM
         BE    DOWTO               YES, BRANCH TO PROCESS
         CLC   =C'WTOR=',2(R1)     WTOR PARAM
         BE    DOWTOR              YES, BRANCH TO PROCESS
         BNE   INVPARM             NO, INVALID PARAMTER
*
DOWTO    DS    0H
         LH    R2,0(,R1)
         SH    R2,=H'4'
         BNP   INVPARM
         CH    R2,=H'120'
         BH    INVPARM
         BCTR  R2,0
         LA    R3,6(,R1)
         EX    R2,MVCWTO
*MVCWTO  MVC   WTOL+4(*-*),0(R3)
         WTO   MF=(E,WTOL)
         B     RETURN
MVCWTOR  MVC   WTORL+12(*-*),0(R3)
MVCWTO   MVC   WTOL+4(*-*),0(R3)
****
DOWTOR   DS    0H
         LH    R2,0(,R1)
         SH    R2,=H'5'
         BNP   INVPARM
         CH    R2,=H'120'
         BH    INVPARM
         BCTR  R2,0
         LA    R3,7(,R1)
         EX    R2,MVCWTOR
*MVCWTOR MVC   WTORL+12(*-*),0(R3)
*MVCENT  MVC   ENTID(*-*),0(R3)
         MVI   WTORECB,0           CLEAR OUT ECB FOR REPLY
         WTOR  MF=(E,WTORL)
         WAIT  1,ECB=WTORECB       WAIT FOR OPERATOR TO REPLY
         B     RETURN
****
*
INVPARM  DS    0H
         WTO   'PARAMETER MISSING OR INVALLID, EXECUTION ENDS',        X
               ROUTCDE=(14),DESC=(7)
         B     RETURN
RETURN   DS    0H
         L     R13,SAVEAREA+4      RESTORE R13
         SLR   R15,R15
         RETURN (14,12),T,RC=(15)  RETURN TO MVS
         EJECT ,
*---------------------------------------------------------------------*
*        WORK AREA AND CONSTANTS                                      *
*---------------------------------------------------------------------*
         SPACE ,
SAVEAREA DS    18F                 SAVEAREA
WTORECB  DC    F'0'                ECB FOR WTOR
WTORRPLY DS    CL80                REPLY FOR WTOR
WTORL    WTOR  '                                                       X
                                                                       X
                   ',WTORRPLY,80,WTORECB,ROUTCDE=(14),DESC=(7),MF=L
WTOL     WTO   '                                                       X
                                                                       X
                   ',ROUTCDE=(14),DESC=(7),MF=L
         EJECT ,
*---------------------------------------------------------------------*
* REGISTER EQUATES                                                    *
*---------------------------------------------------------------------*
         SPACE ,
R0       EQU   0                       WORK REGISTER
R1       EQU   1                       ADDRESS OF SUPPLIED PARAMETERS
R2       EQU   2                       ADDRESS OF EXIT PARAMETERS
R3       EQU   3                       WORK REGISTER
R4       EQU   4                       WORK REGISTER
R5       EQU   5                       WORK REGISTER
R6       EQU   6                       WORK REGISTER
R7       EQU   7                       WORK REGISTER
R8       EQU   8                       WORK REGISTER
R9       EQU   9                       POINTER TO TABLE ENTRY
R10      EQU   10                      BASE REGISTER FOR WORK AREA
R11      EQU   11                      2ND BASE REGISTER
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN ADDRESS
R15      EQU   15                      ENTRY ADDRESS
         EJECT ,
*---------------------------------------------------------------------*
* LIERTAL POOL                                                        *
*---------------------------------------------------------------------*
         SPACE ,
         LTORG ,
         END                     , END OF PROGRAM
//LKED.SYSLMOD DD DSN=GIBSON.LOADLIB,DISP=SHR
//LKED.SYSPRINT DD SYSOUT=*
//SYSIN    DD *
 ENTRY WTOR
 NAME  WTOR(R)
/*
