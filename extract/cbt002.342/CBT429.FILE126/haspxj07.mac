         TITLE 'JES EXIT 7 -- MAIN TASK CONTROL BLOCK I/O EXIT'
***********************************************************************
**                                                                    *
* MODULE NAME:  HASPXJ07                                              *
*                                                                     *
* DESCRIPTIVE NAME:  WRITE PCT (LLB PASSWORD CONTROL TABLE)           *
*                                                                     *
* FUNCTION:  UPDATE CONTROL BLOCKS IN JES2 MAIN TASK                  *
*                                                                     *
* ENTRY POINTS:                                                       *
*         THIS EXIT IS TAKEN FROM THE JES2 MAIN TASK IN HASPNUC       *
*         JUST AFTER THE CONTROL BLOCK IS READ FROM OR JUST BEFORE    *
*         THE CONTROL BLOCK IS WRITTEN TO SPOOL.                      *
*                                                                     *
* INPUT:                                                              *
*         R0  = A POINTER TO A PARAMETER LIST WITH THE FOLLOWING      *
*               STRUCTURE, MAPPED BY $XPL:                            *
*               FIELD NAME OFFSET DESCRIPTION                         *
*               XPLID      (+0)   EYE CATCHER ('XPL')                 *
*               XPLLEVEL   (+4)   MAINTENANCE LEVEL                   *
*               XPLXITID   (+5)   EXIT NUMBER                         *
*               XPLEXLEV   (+6)   VERSION NUMBER                      *
*               XPLIND     (+7)   INDICATOR BYTE                      *
*               XPLCOND    (+8)   CONDITION BYTE. JES2 SETS THE       *
*                                 CONDITION BYTE WITH ONE OF THE      *
*                                 FOLLOWING BIT SETTINGS              *
*                                 X007CBWR    CB IS TO BE WRITTEN     *
*                                 X007CBUN    CB READ IS UNKNOWN      *
*                                 X007IOER    CB READ IS NOT VALID    *
*               XPLRESP     (+9)  RESPONSE BYTE                       *
*               XPLSIZE     (+10) LENGTH OF PARAMETER LIST            *
*               X007CBID          THE 4 CHARACTER EBCDIC CB ID        *
*         R1  = ADDRESS OF THE BUFFFER THAT CONTAINS THE JCT          *
*         R11 = ADDRESS OF THE HCT                                    *
*         R13 = ADDRESS OF THE PCE                                    *
*         R14 = RETURN ADDRESS                                        *
*         R15 = ENTRY ADDRESS                                         *
* OUTPUT:                                                             *
*         R0  = A POINTER TO A PARAMETER LIST, MAPPED BY $XPL         *
*               FIELD NAME DESCRIPTION                                *
*               XPLCOND    CONDITION BYTE.                            *
*               XPLRESP    RESPONSE BYTE. TURN THE X007IOER BIT       *
*                          SETTING ON IN THE RESPONSE BYTE IF AN I/O  *
*                          ERROR OCCURRED.                            *
*         R15 = RETURN CODE                                           *
*                                                                     *
*         RETURN CODES HAVE THE FOLLOWING MEANINGS:                   *
*         0 - TELLS JES2 THAT IF ANY ADDITIONAL EXIT ROUTINES ARE     *
*             ASSOCIATED WITH THIS EXIT, CALL THE NEXT CONSECUTIVE    *
*             EXIT ROUTINE. IF THERE IS NO OTHER EXIT ROUTINES        *
*             ASSOCIATED WITH THIS EXIT, CONTINUE WITH NORMAL         *
*             PROCESSING, WHICH IS DETERMINED BY THE PARTICULAR EXIT  *
*             POINT FROM WHICH THE EXIT WAS CALLED.                   *
*         4 - TELLS JES2 THAT EVEN IF ADDITIONAL EXIT ROUTINES ARE    *
*             ASSOCIATED WITH THIS EXIT, IGNORE THEM; CONTINUE WITH   *
*             NORMAL PROCESSING, WHICH IS DETERMINED BY THE           *
*             PARTICULAR EXIT POINT FROM WHICH THIS EXIT WAS CALLED.  *
*         8 - TELLS JES2 THAT AN I/O ERROR WAS ENCOUNTERED. MESSAGE   *
*             $HASP370 IS ISSUED. IF THERE IS ANY OTHER EXIT ROUTINES *
*             ASSOCIATED WITH THIS EXIT, IGNORE THEM; CONTINUE WITH   *
*             NORMAL PROCESSING, WHICH IS DETERMINED BY THE           *
*             PARTICULAR EXIT POINT FROM WHICH THIS EXIT WAS CALLED.  *
*                                                                     *
***********************************************************************
         COPY  $HASPGBL
         EJECT ,
HASPXJ07 $MODULE NOTICE=NONE,                                          C
               TITLE='JESEXIT7 - MAIN TASK CONTROL BLOCK I/O EXIT',    C
               RPL,                GENERATE MVS  RPL    DSECT          C
               $BUFFER,            GENERATE HASP BUFFER DSECT          C
               $CAT,                                                   C
               $ERA,                                                   C
               $HASPEQU,           GENERATE HASP EQUATES               C
               $HCT,                                                   C
               $IOT,                                                   C
               $JCT,                                                   C
               $JQE,                                                   C
               $MIT,                                                   C
               $MITETBL,                                               C
               $MODMAP,                                                C
               $PCE,                                                   C
               $PRE,                                                   C
               $RDRWORK,                                               C
               $TAB,                                                   C
               $USERCBS,                                               C
               $XECB,              GENERATE HASP XECB DSECT            C
               $XIT,               GENERATE HASP XIT DSECT             C
               $XPL
***********************************************************************
*                                                                     *
*        ENTRY AND INITIAL CHECKING                                   *
*                                                                     *
***********************************************************************
UEXIT7  $ENTRY CSECT=YES,BASE=R12
        $SAVE  TRACE=YES,NAME=HASPXJ07 SAVE CALLERS REGISTERS
         USING PCE,R13             ESTABLISH ADDRESSABILITY
         LR    R12,R15             LOAD BASE REGISTER
         LR    R10,R1              LOAD JCT ADDRESS
         USING JCT,R10             ESTABLISH JCT ADDRESSABILITY
         LR    R2,R0               LOAD XPL ADDRESS
         USING XPL,R2              ESTABLISH XPL ADDRESSABILITY
***********************************************************************
*                                                                     *
*        ESTABLISH ESTAE ENVIRONMENT                                  *
*                                                                     *
***********************************************************************
         L     R14,=A(X7RECOVR)    R14 => UEXIT7 RECOVERY EP
        $ESTAE RECADDR=R14         CREATE ESTAE ENVIRONMENT
         LR    R1,R14              SET REGISTER 1
***********************************************************************
*                                                                     *
*        MOVE PORTION OF THE COMMAND CURRENTLY BEING PROCESSED        *
*        INTO THE PRE (PRETRACK) FOR THE PROCESSOR RECOVERY           *
*        ROUTINE (X7RECOVR).                                          *
*                                                                     *
***********************************************************************
         L     R14,PCEPRE          GET ADDRESS OF PRE
         USING PRE,R14             ESTABLISH ADDRESSABILITY
         MVC   PRETRACK(L'X7MSG),X7MSG  MOVE MESSAGE INTO PRE
         MVI   PRELOGLN,L'X7MSG    SET LENGTH OF DATA IN PRETRACK
         DROP  R14                 KILL ADDRESSABILITY
***********************************************************************
*                                                                     *
*        IF WE HAVE THE JCT, CHECK IF THIS IS A WRITE OPERATION.      *
*                                                                     *
***********************************************************************
         SLR   R7,R7               INITIALIZE GOOD RETURN CODE
         CLC   X007CBID,=CL4'JCT ' IS THIS A JCT?
         BE    CHKTYPE             YES, CHECK OPERATION
         B     EXITRET             NO, RETURN
CHKTYPE  DS    0H
         TM    XPLCOND,X007CBWR    IS THIS A WRITE OPERATION ?
         BZ    EXITRET             NO, RETURN
***********************************************************************
*                                                                     *
*        CHECK TO SEE IF THE PCT WAS WRITTEN ALREADY.                 *
*                                                                     *
***********************************************************************
         TM    JCTUSER0,JCTPW      PASSWORD SUPPLIED IN JCL ?
         BNO   EXITRET             NO, RETURN
         CLC   JCTUSER1,$ZEROS     ALREADY GOT TRACK SPACE ?
         BNE   EXITRET             YES, RETURN
         CLC   JCTUSER2,$ZEROS     IS THERE A PCT ?
         BE    EXITRET             NO, RETURN
         MVC   PCEUSER0,JCTUSER2   SAVE PCT ADDRESS
***********************************************************************
*        SEE IF WE HAVE AN IOT (FOR $TRACK)                           *
***********************************************************************
         ICM   R8,B'1111',RDWIOT   GET IOT ADDRESSABILITY
         BZ    NOTANIOT            NO ADDRESS IN R8 SO RETURN
         USING IOT,R8              ESTABLISH IOT ADDRESSABILITY
         CLC   IOTID,=CL4'IOT'     IS THIS AN IOT ?
         BNE   NOTANIOT            NO, RETURN
         DROP  R8
***********************************************************************
*        OBTAIN TRACK GROUP TO WRITE OUT THE PCT                      *
***********************************************************************
        $TRACK IOTMSTAB-IOT(,R8),JQE=PCEJQE,WRPRIM=NO,ERRET=FAIL$TRK
DO$CBIO  DS    0H
         ST    R1,JCTUSER1         SAVE MTTR IN JCT USER FIELD
         L     R6,PCEUSER0         GET JCT BUFFER ADDRESS
        $CBIO TYPE=WRITE,BUFAD=(R6),MTTR=JCTUSER1,VERIFY=NONE,         C
               EXIT=NO,ERRET=WRITFAIL
         SLR   R7,R7               SET RETURN CODE
         B     FREEBUF             FREE BUFFER AND RETURN
         EJECT
***********************************************************************
*    ERROR MESSAGES FOR $TRACK, AND ALSO WHY WE HAD TO SKIP $TRACK    *
***********************************************************************
NOTANIOT DS    0H
        $MID   902
        $WTO   X7MSG01,L'X7MSG01,ROUTE=$ALL,CLASS=$TRIVIA
         LA    R7,4                BAD RETURN CODE
         B     FREEBUF             FREE BUFFER AND RETURN
FAIL$TRK DS    0H
         C     R15,=F'8'           RETURN CODE OF 8 FROM $TRACK
         BL    DO$CBIO             NO, GO DO IO
        $MID   903
        $WTO   X7MSG02,L'X7MSG02,ROUTE=$ALL,CLASS=$TRIVIA
         LA    R7,4                BAD RETURN CODE
         B     FREEBUF             FREE BUFFER AND RETURN
WRITFAIL DS    0H
        $MID   904
        $WTO   X7MSG03,L'X7MSG03,ROUTE=$ALL,CLASS=$TRIVIA
         LA    R7,4                BAD RETURN CODE
         B     FREEBUF             FREE BUFFER AND RETURN
RCZERO   DS    0H
         SLR   R7,R7
FREEBUF  DS    0H
         L     R6,PCEUSER0
         XC    PCEUSER0,PCEUSER0   CLEAR USER FIELD
         USING PCT,R6              ESTABLISH PCT ADDRESSABILITY
         CLC   PCTID,=CL4'PCT'     IS THIS A PCT ?
         BNE   EXITRET               NO, DO NOT FREE THE BUFFER
         DROP  R6
        $FREEBUF (R6)              FREE PCT BUFFER
         XC    JCTUSER2,JCTUSER2   CLEAR USER FIELD
         B     EXITRET             BRANCH TO RETURN
         TITLE 'PCTIO RECOVERY ROUTINE - X7RECOVR'
***********************************************************************
*                                                                     *
*        HASX07A - EXIT 7 RECOVERY ROUTINE                            *
*                                                                     *
*        REGISTERS UPON ENTRY -                                       *
*                                                                     *
*            R0 - SAME AS ABEND                                       *
*            R1 - POINTER TO ERA                                      *
*      R2 - R10 - SAME AS ABEND                                       *
*           R11 - POINTER TO HCT                                      *
*           R13 - POINTER TO PCE                                      *
*           R14 - RETURN ADDRESS                                      *
*           R15 - ENTRY ADDRESS                                       *
*                                                                     *
***********************************************************************
         SPACE 1
         USING ERA,R5              ESTABLISH ERA ADDRESSABILTY
         SPACE 1
X7RECOVR LR    R5,R1               GET ADDRESS OF ERA IN R5
         SPACE 1
         MVC   ERAREG12,=A(HASPXJ07) GET VALID BASE REGISTER
         ICM   R1,B'1111',PCEUSER0 GET STORAGE ADDRESS
         XC    PCEUSER0,PCEUSER0   CLEAR PCEUSER0
         USING PCT,R1              ESTABLISH PCT ADDRESSABILITY
         CLC   PCTID,=CL4'PCT'     IS THIS A PCT ?
         BNE   X7RECRET              NO, DO NOT FREE THE BUFFER
         DROP  R1
         SPACE 1
        $FREEBUF (R1)                YES, FREE THE BUFFER
         XC    JCTUSER2,JCTUSER2   CLEAR USER FIELD
         EJECT
***********************************************************************
*                                                                     *
*        $SETRP - SET UP OPTION AND RETURN TO CALLER                  *
*                                                                     *
***********************************************************************
         SPACE 1
X7RECRET DS    0H
        $SETRP PERCOLATE           SET PERCOLATE OPTION
         SPACE 1
        $RETURN TRACE=YES          RETURN TO CALLER
         TITLE 'PCTIO SUBTASK ROUTINE -- RETURN TO THE CALLER'
***********************************************************************
*                                                                     *
*        RETURN TO THE CALLER                                         *
*                                                                     *
***********************************************************************
         SPACE  1
EXITRET  DS     0H
        $ESTAE CANCEL              CANCEL ESTAE ENVIRONMENT
         SPACE  1
        $RETURN RC=(R7),TRACE=YES  RETURN TO CALLER
         SPACE  3
         TITLE 'JES2 USER EXIT 7 (DATA DEFINITIONS)'
***********************************************************************
*                                                                     *
*        EXIT 7 MESSAGES                                              *
*                                                                     *
***********************************************************************
         SPACE 1
X7MSG    DC    C'ESTAE SET UP FOR EXIT 7'
X7MSG01 $MSG   902,'NOT AN IOT'
X7MSG02 $MSG   903,'ERROR FROM $TRACK'
X7MSG03 $MSG   904,'$CBIO WRITE FAILED'
         TITLE 'JES2 USER EXIT 7'
         LTORG
         SPACE
         TITLE 'END OF LOAD MODULE ($MODEND)'
        $MODEND
         END
