PROC 0 DEBUG() CMDDSN() CMDDATA(MESSAGE) OPTMEMS() BADNICK(NO) +
       ERRCHK(NO)
/* REF: ABL.CMDPROC(XMT)
/* DOC: AUTOMATE THE USE OF TSO/E'S IDTF FUNCTION VIA ISPF/PDF DIALOG
/*    : REFER TO PRODUCTION PANEL MEMBERS PREFIXED "XMT" FOR ADDT'L INFO
CONTROL MAIN MSG NOLIST PROMPT
IF &DEBUG = DEBUG THEN +
   CONTROL MAIN MSG LIST SYMLIST CONLIST PROMPT
ISPEXEC VGET (XMTNICK XMTNODE XMTUSER XMTDSN +
        XMTOPT XMTLOG XMTRECV) PROFILE
REDISPLA: +
ISPEXEC DISPLAY PANEL(XMT)
IF &LASTCC = 8 THEN +
 DO
   /* USER ENTERED END COMMAND  FROM PANEL */
   ISPEXEC CONTROL DISPLAY REFRESH
   ISPEXEC VPUT (XMTNICK XMTNODE XMTUSER XMTDSN +
           XMTOPT XMTLOG XMTRECV) PROFILE
   SE '#ABLUTIL: IDTF UTILITY INVOKED ON &SYSDATE BY ',CN(01)
   EXIT CODE(0)
 END
/*
/*      PROCESS LOG FILE IF REQUESTED ON PANEL
/*
PROCESS: +
IF &XMTLOG ^=  THEN +
 DO
  /* FIRST CHECK IF LOG FILE EXISTS
  IF &SYSDSN('&SYSUID..LOG.MISC') NE OK THEN +
     DO
      /* LOG FILE DOES NOT EXIST. RE-DISPLAY PANEL AND WARN USER
      /* EVEN THOUGH THEY MAY HAVE SELECTED ADDITIONAL OPTIONS WHICH
      /* COULD BE PROCESSED INDEPENENT OF LOG PROCESSING ("NAMES" E.G.)
      ISPEXEC SETMSG MSG(XMTV019B)
      SET &XMTLOG =
      ISPEXEC VPUT (XMTLOG) PROFILE
      GOTO REDISPLA
     END
  IF &XMTLOG = B THEN +
    DO
     /* RESET LOG PROCESSING OPTION TO NULL & BROWSE LOG FILE  */
     SET &XMTLOG =
     ISPEXEC VPUT (XMTLOG) PROFILE
     ISPEXEC BROWSE DATASET('&SYSUID..LOG.MISC')
     IF &LASTCC = 12 THEN +
       DO
         /* LOG FILE IS EMPTY. AGGRESSIVE EDITTING PERHAPS!  */
         ISPEXEC SETMSG MSG(XMTV019B)
         GOTO REDISPLA
       END
     /*
     /* WE'RE FINISHED BROWSING THE LOG FILE.
     /* REDISPLAY PANEL IF NICKNAME AND/OR NODENAME WERE BLANK
     /* AND RECEIVE PROCESSING WASN'T REQUESTED EITHER.
     /*
     IF &STR(&XMTNICK) = THEN +
      DO
       IF &XMTNODE = THEN +
        DO
           IF &XMTRECV = THEN GOTO REDISPLA
        END
      END
    END
  IF &XMTLOG = E THEN +
    DO
     /* RESET LOG PROCESSING OPTION TO NULL & EDIT LOG FILE  */
     SET &XMTLOG =
     ISPEXEC VPUT (XMTLOG) PROFILE
     ISPEXEC EDIT DATASET('&SYSUID..LOG.MISC')
     /* CONSIDER HANDLING EDIT ERRORS HERE
      /*
      /* REDISPLAY PANEL IF NICKNAME AND/OR NODENAME WERE BLANK
      /* AND RECEIVE PROCESSING WASN'T REQUESTED EITHER.
      /*
      IF &STR(&XMTNICK) = THEN +
       DO
        IF &XMTNODE = THEN +
         DO
           IF &XMTRECV = THEN GOTO REDISPLA
         END
       END
    END
 END
/*
/*  ISSUE RECEIVE COMMAND FOR USER, IF REQUESTED
/*
IF &XMTRECV ^=  THEN +
  DO
    RECEIVE
    IF &LASTCC GT 4 THEN ISPEXEC SETMSG MSG(XMTV018B)
    SET &XMTRECV =
    ISPEXEC VPUT (XMTRECV) PROFILE
    IF &STR(&XMTNICK) = THEN GOTO REDISPLA
  END
/*
/* IF A NICKNAME WAS SPECIFIED, DO NOT CHECK FOR A VALID USERID PREFIX
/*
IF &STR(&XMTNICK) ^= THEN +
  DO
   /* CHECK IF USER WANTS TO EDIT THEIR NICKNAMES FILE (NAMES.TEXT)
   /*
   IF &STR(&XMTNICK) = NAMES THEN +
     DO
        /*
        /* CHECK TO SEE IF NICKNAMES FILE EXISTS. ALLOC & PRIME IF NOT.
        /*
        IF &SYSDSN('&SYSUID..NAMES.TEXT') NE OK THEN +
          DO
           ALLOC DA('&SYSUID..NAMES.TEXT') NEW CATALOG SP(1 0) TRACKS +
                RECFM(F B) LRECL(150) BLKSIZE(30000)
           IF &LASTCC NE 0 THEN +
             DO
               ISPEXEC SETMSG MSG(XMTV019A)
               GOTO REDISPLA
             END
           COPY 'ABL.IDTF.NAMES.TEXT.MODEL' '&SYSUID..NAMES.TEXT'
           IF &LASTCC NE 0 THEN +
             DO
               ISPEXEC SETMSG MSG(XMTV015C)
               GOTO REDISPLA
             END
          END
        ISPEXEC EDIT DATASET('&SYSUID..NAMES.TEXT')
        /* CONSIDER HANDLING EDIT ERRORS HERE
        GOTO REDISPLA
      END
   /*
   /* NICKNAME FILE EDITING NOT SPECIFIED.  PROCESS AS REAL NICKNAME.
   /*
   GOTO NOPREFIX  /* DON'T DO USERID PREFIX VALIDATING  */
  END
/*
/* A NICKNAME WAS NOT REQUESTED. MAKE SURE A NODE WAS SPECIFIED.
/*
  IF &XMTNODE =  THEN +
    DO
      IF &XMTLOG ^= THEN GOTO EXIT /* USER ONLY ASKED FOR LOG PROCESSING
      /* GO BACK AND GET NODE INFO
      ISPEXEC SETMSG MSG(XMTV019D)
      GOTO REDISPLA
    END
  /* A NODE WAS SPECIFIED.  MAKE SURE USERID WAS ALSO SPECIFIED.
  IF &XMTUSER = THEN +
     DO
       /* GO BACK AND GET USERID INFO
       ISPEXEC SETMSG MSG(XMTV019E)
       GOTO REDISPLA
     END
  /* NOW WE KNOW NODE AND USERID.   CONTINUE.
  IF &XMTNODE ^= ABL THEN +
     DO
       /* USERIDS ON NON-ABL NODES MUST BEGIN WITH "T"
       IF &SUBSTR(1,&XMTUSER) ^= T THEN +
          DO
            ISPEXEC SETMSG MSG(XMTV017)
            GOTO REDISPLA
          END
     END
   ELSE +
     DO
       /* USERIDS ON ABL NODES MUST BEGIN WITH "D"
       IF &SUBSTR(1,&XMTUSER) ^= D THEN +
          DO
            ISPEXEC SETMSG MSG(XMTV017A)
            GOTO REDISPLA
          END
     END
/*
/* A REAL NICKNAME WAS SPECIFIED, DON'T CHECK FOR A VALID USERID PREFIX
/*
NOPREFIX: +
IF &XMTDSN ^= THEN +
 DO
  SET CMDDATA = &STR(&XMTDSN)     /*SHOW ACTUAL DSN IN MSG XMTV014  */
  SET CMDDSN  = &STR(DA(&XMTDSN)) /*SET XMIT "DATASET" OPERAND      */
  IF &SYSDSN(&XMTDSN) ^= OK THEN +
   DO
    ISPEXEC SETMSG MSG(XMTV013)
    GOTO REDISPLA
   END
  IF &XMTOPT ^= THEN +
   DO
    IF &SYSINDEX(MEM,&XMTOPT) ^= 0 THEN +
     DO
      /*MAKE MSG XMTV014 USER FRIENDLY*/
      SET OPTMEMS = &STR(MEMBER(S) IN)
     END
   END
 END
/*
/* TRANSMIT TO "NICKNAME" IF NAMES.TEXT FILE EDITING NOT REQUESTED
/* (USER DIDN'T ENTER "NAMES" IN THE NICKNAME FIELD).
/*
IF &STR(&XMTNICK) ^= THEN +
 DO
  IF &STR(&XMTNICK) ^= NAMES THEN +
   DO
     ISPEXEC CONTROL DISPLAY LINE REFRESH
     /*
     /* THE TRAP IS SO THAT A TSO "SEND" COMMAND CAN BE GENERATED TO
     /* NOTIFY THE USER (IF ABL) THAT SOMETHING WAS XMITTED TO HIM/HER.
     /*
     IF &ERRCHK = YES THEN +
      DO
       /* SET TRAP OF XMIT MESSAGE(S) UNLESS IDTF ERROR IS SUSPECTED
       /*(IF AN ERROR OCCURS WITHIN XMIT REQUIRING A USER RESPONSE,
       /* IT IS NOT SEEN BECAUSE IT IS "CAUGHT IN THE TRAP". THE USER
       /* BECOMES "LOCKED UP". IF THIS CONDITION IS SUSPECTED, INVOKING
       /* THE IDTF DIALOG VIA: TSO %XMT 'DEBUG(DEBUG) ERRCHK(YES)' WILL
       /* BYPASS THE NORMAL TRAPPING MECHANISM USED.  THIS METHOD WAS
       /* SELECTED TO ASSIST WITH DEBUGGING THE MYRIAD POSSIBLE IDTF
       /* FAILURE POSSIBILITIES WITHOUT CODING ELABORATE ERROR CHECKING
       /* ROUTINES WITHIN.
       /*
       XMIT (&XMTNICK) &CMDDSN &XMTOPT
       GOTO REDISPLA
      END
     SET SYSOUTTRAP = 50        /*  SET MAX TRAPPABLE MESSAGES LIMIT
     XMIT (&XMTNICK) &CMDDSN &XMTOPT
     SET &XMITCC = &LASTCC
     SET &UPPER = &SYSOUTLINE  /* SAVE # LINES FOR MSG PARSE LOOP
     SET &SYSOUTTRAP = 0       /* TURN OFF TRAPPING MECHANISM
     SET &CTR = 1
     /*
     /* DEBUG MODE ADDS AN EXTRA LINE TO TRAPPED OUTPUT */
     IF &DEBUG = DEBUG THEN SET CTR = 2
     /*
/*   SET &EVALLINE = &&SYSOUTLINE&CTR
     SET &ABLUSER = &STR(ABL.D06)      /* SET SEARCH ARGUMENT
     /*
     DO WHILE &CTR LE &UPPER
       SET &IDTFMSG = &&SYSOUTLINE&CTR
       /*
       /* IF CURRENT MESSAGE LINE CONTAINS INMX020I THEN A NICKNAME
       /* SPECIFIED WAS NOT FOUND IN THE NAMES.TEXT DATASET.
       /*
       IF &SYSINDEX(INMX020I,&STR(&IDTFMSG)) ^= 0 THEN +
          DO
            SET &BADNICK = YES
            GOTO NOTABLID
          END
       /*
       /* IF CURRENT MESSAGE LINE DOESN'T CONTAIN "ABL.D06" THEN THIS
       /* NODE/USER IS NOT AN ABL TSO USERID ("NOTABLID").
       /*
       IF &SYSINDEX(&ABLUSER,&STR(&IDTFMSG)) = 0 THEN GOTO NOTABLID
        /*
        /* FIND WHERE TSO USERID BEGINS (STRIP OFF "ABL.")
        SET &IDBEGIN = 4 + (&SYSINDEX(&ABLUSER,&STR(&IDTFMSG)))
        /*
        /* ADD 10 TO DETERMINE COLUMN WHERE USERID ENDS IN MESSAGE
        SET &IDEND   = 10 + (&SYSINDEX(&ABLUSER,&STR(&IDTFMSG)))
        /*
        /*SAVE TSO USERID FOR SUBSEQUENT TSO SEND CMD USE*/
        SET &ABLID = &SUBSTR(&IDBEGIN:&IDEND,&IDTFMSG)
        /*
        /* NOW THAT WE'VE EXTRACTED THE USERID FROM THE TRANSMIT MSG,
        /* ISSUE TSO SEND COMMAND TO NOTIFY THE USER OF INCOMING DATA
        /* (DO NOT REMOVE ",LOGON" FROM THESE SEND COMMANDS ELSE IF THE
        /* USER ISN'T LOGGED ON, THE SENDING USER WILL GET A MESSAGE
        /* INDICATING "MESSAGE CANCELLED". THIS MESSAGE MEANS THE TSO
        /* SEND COMMAND'S MESSAGE WAS CANCELLED BUT THE SENDING USER
        /* WILL BE MISLEAD TO THINK THAT THEIR TRANSMITTED MESSAGE WAS
        /* CANCELLED.
        /*
        WRITE
        SE 'DATA HAS BEEN TRANSMITTED TO YOU FROM',USER(&ABLID),LOGON
         SE 'ENTER THE TSO RECEIVE COMMAND. THANKS!',USER(&ABLID),LOGON
       NOTABLID: +
        SET &CTR = &CTR + 1
     END
/*
     IF &XMITCC = 0 THEN +
        DO
          /* XMIT COMMAND RETURNS CC=0 EVEN IF AT LEAST ONE NICKNAME  */
          /* IS VALID BUT OTHERS ARE NOT FOUND. ORDINARILY, (IN A NON-*/
          /* DIALOG XMIT ENVIRONMENT), THE XMIT COMMAND WOULD NOTIFY  */
          /* THE USER OF THE "NICKNAME NOT FOUND" CONDITION BUT IN    */
          /* THE "SYSOUTTRAP" MODE, THESE WARNING MESSAGES ARE NOT    */
          /* SEEN BY THE USER SO WE WILL USE THE SPF MESSAGE TECHNIQUE/*
          /* TO WARN THE USER THAT A NICKNAME WAS NOT FOUND (XMTV016A)*/
          IF &BADNICK = YES THEN +
             DO
               ISPEXEC SETMSG MSG(XMTV016A)
               SET &BADNICK = NO   /* RESET. GIVE USER A CHANCE TO FIX*/
             END
            ELSE +
               ISPEXEC SETMSG MSG(XMTV018) /*TELL USER ALL WENT WELL */
        END
       ELSE +
        DO
          /* NOTIFY USER OF XMIT FAILURE IF DUE TO NICKNAME NOT FOUND*/
          IF &BADNICK = YES THEN +
             DO
               ISPEXEC SETMSG MSG(XMTV016A)
               SET &BADNICK = NO   /* RESET. GIVE USER A CHANCE TO FIX*/
             END
          ELSE +
            ISPEXEC SETMSG MSG(XMTV016) /* NOTIFY USER OF XMIT FAILURE*/
                                        /*  DUE TO GENERIC REASONS    */
        END
     /*                                                             */
     /* RESET XMIT DATASETNAME VARIABLE TO NULLS                    */
     SET CMDDSN  =
     /* RESET MESSAGE XMTV014 (CLIST LOCAL VARIABLE) BACK TO DEFAULT*/
     SET CMDDATA = MESSAGE
     GOTO REDISPLA

   END
 END
ISPEXEC CONTROL DISPLAY LINE REFRESH
/*
/* XMIT TO NODE.USERID (INSTEAD OF A NICKNAME)
/*
XMIT &XMTNODE..&XMTUSER &CMDDSN &XMTOPT
IF &LASTCC = 0 THEN +
 DO
  ISPEXEC SETMSG MSG(XMTV014)
  IF &XMTNODE = ABL THEN +
   DO
    WRITE
   SE 'DATA HAS BEEN TRANSMITTED TO YOU FROM',USER(&XMTUSER),LOGON
    SE 'ENTER THE TSO RECEIVE COMMAND. THANKS!',USER(&XMTUSER),LOGON
   END
 END
ELSE ISPEXEC SETMSG MSG(XMTV016)
/* RESET XMIT DATASETNAME VARIABLE TO NULLS          */
SET CMDDSN  =
/* RESET MESSAGE XMTV014 VARIABLE BACK TO "MESSAGE"  */
SET CMDDATA = MESSAGE
GOTO REDISPLA
