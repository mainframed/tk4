PROC 0 DEBUG
/* ----------------------------------------------------------------- */
/*                                                                   */
/* WILLIAM SMITH, CIS TECHNICAL SERVICES                             */
/*   . UPDATED 01NOV84 - GDDM/ISPF DIALOG                            */
/*     - GRAPHICS FILE ALLOCATION CLIST                              */
/*         INSTALLED 2ISG, 26 JUL 85,  JDM                           */
/*     UPDATED FOR FULL GDDM REL 4 SUPPORT.  14 MAR 86  J. R. WARD   */
/* ----------------------------------------------------------------- */
/*                                                                   */
/* THIS DIALOG PERMITS A TSO USER TO INITIALLY ALLOCATE THE GDDM     */
/* LIBRARIES PRIOR TO AN INITIAL INVOCATION OF THE INTERACTIVE CHART */
/* FACILITY, IMAGE SYMBOL EDITOR, VECTOR SYMBOL EDITOR OR INTERACT-  */
/* IVE MAP DEFINITION.                                               */
/* ----------------------------------------------------------------- */
CONTROL NOFLUSH NOMSG
IF &DEBUG ^=  &STR() THEN +
   CONTROL LIST MSG NOFLUSH PROMPT CONLIST SYMLIST
SET &ANS = &STR()
SET &VOL = &STR()
ISPEXEC DISPLAY PANEL(ADM#P1)
SET RCODE = &LASTCC
IF &RCODE ^= 0 THEN EXIT
KOMM CLEAR
WRITE *---------------------------------------------------------------*
WRITE *                     W A R N I N G   !!!!!!!!!                 *
WRITE *                                                               *
WRITE *   IF YOU ARE A PRESENT USER OF GDDM, USE OF THIS COMMAND WILL *
WRITE *   SCRATCH ALL OF YOUR GDDM FILES AND REALLOCATE THEM.         *
WRITE *---------------------------------------------------------------*
ASKIT: +
WRITE
WRITE   IF YOU ARE A FIRST TIME USER OR YOU WOULD LIKE TO HAVE ALL OF
WRITE   YOUR GDDM FILES SCRATCHED AND REALLOCATED, PLEASE REPLY 'Y' FOR
WRITE   YES OR 'N' TO EXIT.
READ   &ANS
IF  &ANS = &STR(Y) THEN GOTO PRESSON
IF  &ANS = &STR(N) THEN  +
    DO
    WRITE  THIS COMMAND IS BYPASSED.
    EXIT
    END
ELSE  +
    DO
    WRITE  YOUR REPLY IS INVALID.
    GOTO ASKIT
    END
END
/* ----------------------------------------------------------------- */
/*   GET RID OF OLD FILES FOR THE REBORN USER.                       */
/* ----------------------------------------------------------------- */
PRESSON: +
FREE FI(ADMCDATA,ADMDECK,ADMCFORM,ADMSYMBL,ADMGDF,ADMGGMAP,ADMGNADS)
FREE FI(ADMIFMT)
FREE ATTR(ADMDCB,ADMDCB2)
DELETE  ADMCDATA
DELETE  ADMCFORM
DELETE  ADMDECK
DELETE  ADMGDF
DELETE  ADMGGMAP
DELETE  ADMGNADS
DELETE  ADMIFMT
DELETE  ADMSYMBL
CONTROL MSG
SET &LASTCC = 0
SET &MAXCC  = 0
ATTRIB ADMDCB  RECFM(F)   LRECL(400) BLKSIZE(400)
IF  &LASTCC = 0 THEN  +
    DO
    GOTO ADMDCB2
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
ADMDCB2: +
ATTRIB ADMDCB2 RECFM(F B) LRECL(80)  BLKSIZE(400)
IF  &LASTCC = 0 THEN  +
    DO
    GOTO ADMCDATA
    END
ELSE +
    DO
    SET &MAXCC = &LASTCC
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMCDATA" DATA SET                          */
/* ----------------------------------------------------------------- */
ADMCDATA: +
ALLOC FI(ADMCDATA) DA(ADMCDATA) NEW VOL(&VOL.) +
      SP(&SPDATA.,&SPDATA.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMCDATA  FILE HAS BEEN ALLOCATED.
    GOTO ADMDECK
    END
ELSE +
    DO
    SET &MAXCC = &LASTCC
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMDECK" DATA SET                           */
/* ----------------------------------------------------------------- */
ADMDECK:  +
ALLOC FI(ADMDECK) DA(ADMDECK) NEW VOL(&VOL.) +
      SP(&SPDECK.,&SPDECK.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB2) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMDECK   FILE HAS BEEN ALLOCATED.
    GOTO ADMCFORM
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMCFORM" DATA SET                          */
/* ----------------------------------------------------------------- */
ADMCFORM: +
ALLOC FI(ADMCFORM) DA(ADMCFORM) NEW VOL(&VOL.) +
      SP(&SPFORM.,&SPFORM.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMCFORM  FILE HAS BEEN ALLOCATED.
    GOTO ADMSYMBL
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMSYMBL" DATA SET                          */
/* ----------------------------------------------------------------- */
ADMSYMBL: +
ALLOC FI(ADMSYMBL) DA(ADMSYMBL) NEW VOL(&VOL.) +
      SP(&SPSYMB.,&SPSYMB.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB2) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMSYMBL  FILE HAS BEEN ALLOCATED.
    GOTO ADMGDF
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMGDF" DATA SET                            */
/* ----------------------------------------------------------------- */
ADMGDF: +
ALLOC FI(ADMGDF) DA(ADMGDF) NEW VOL(&VOL.) +
      SP(&SPGDF.,&SPGDF.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMGDF    FILE HAS BEEN ALLOCATED.
    GOTO ADMGGMAP
    END
ELSE +
    DO
    SET &MAXCC = &LASTCC
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMGGMAP" DATA SET                          */
/* ----------------------------------------------------------------- */
ADMGGMAP: +
ALLOC FI(ADMGGMAP) DA(ADMGGMAP) NEW VOL(&VOL.) +
      SP(&SPGMAP.,&SPGMAP.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB2) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMGGMAP  FILE HAS BEEN ALLOCATED.
    GOTO ADMGNADS
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMGNADS" DATA SET                          */
/* ----------------------------------------------------------------- */
ADMGNADS: +
ALLOC FI(ADMGNADS) DA(ADMGNADS) NEW VOL(&VOL.) +
      SP(&SPNADS.,&SPNADS.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMGNADS  FILE HAS BEEN ALLOCATED.
    GOTO ADMIFMT
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*   ALLOCATION OF GDDM "ADMIFMT" DATA SET                           */
/* ----------------------------------------------------------------- */
ADMIFMT: +
ALLOC FI(ADMIFMT) DA(ADMIFMT) NEW VOL(&VOL.) +
      SP(&SPIFMT.,&SPIFMT.) +
      TRACKS DIR(&DIRBLKS.) USING(ADMDCB) CATALOG
IF  &LASTCC = 0 THEN  +
    DO
    WRITE  ADMIFMT   FILE HAS BEEN ALLOCATED.
    GOTO WRAPUP
    END
ELSE +
    DO
    GOTO EWRAPUP
    END
END
/* ----------------------------------------------------------------- */
/*     WE NEED TO GIVE USER A "WARM AND FUZZY" FEELING SO THEY       */
/*     MAY START OFF FEELING GOOD. ALSO NEED TO TELL THEM OF         */
/*     ANY ERRORS, SO THEY MAY CORRECT.                              */
/* ----------------------------------------------------------------- */
WRAPUP:  WRITE
         WRITE YOU ARE NOW READY TO BEGIN USING GDDM.  HAVE FUN !!
         GOTO EOJ
EWRAPUP: WRITE YOU ENCOUNTERED SOME ERROR IN ALLOCATING THE NECESSARY
         WRITE FILES TO USE GDDM-PGF. PLEASE CORRECT THE ERROR IF
         WRITE YOU CAN OR CALL FOR ASSISTANCE.
EOJ:  FREE FI(ADMCDATA,ADMDECK,ADMCFORM,ADMSYMBL,ADMGDF,ADMGGMAP)
      FREE FI(ADMGNADS,ADMIFMT)
      FREE ATTR(ADMDCB,ADMDCB2)
