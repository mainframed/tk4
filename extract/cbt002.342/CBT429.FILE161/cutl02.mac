         TITLE '   P A S T E   '
***********************************************************************
*                                                                     *
*        'PASTE' - ISPF EDIT MACRO                                    *
*                                                                     *
***********************************************************************
         SPACE
* WRITTEN BY BILL GODFREY, PRC INC.
*  (PRC INC. OF MCLEAN, VIRGINIA, WAS FORMERLY PLANNING RESEARCH CORP.)
* CURRENT INSTALLATION:
*  NOAA (NATIONAL OCEANIC AND ATMOSPHERIC ADMINISTRATION),
*  5200 AUTH ROAD, CAMP SPRINGS, MARYLAND 20746
* DATE-WRITTEN: AUGUST 7 1990.
* DATE-UPDATED: APRIL 25 1991.
* ATTRIBUTES. RE-ENTRANT.
* DISCLAIMER: NO GUARANTEE; NO WARRANTY; INSTALL/USE AT YOUR OWN RISK.
* DESCRIPTION.
*  THIS ISPF EDIT MACRO COPIES ONE OR MORE LINES FROM TEMPORARY FILES
*  CREATED BY THE 'CUT' MACRO TO THE DATA SET BEING EDITED.
*
*  UP TO 9 DIFFERENT 'CUT' BUFFERS CAN CO-EXIST. THE DEFAULT BUFFER
*  (1) IS USED IF NO PARAMETER IS SPECIFIED.  THE USER CAN SPECIFY ANY
*  OF THE 9 BUFFER LEVELS AS THE PARAMETER.
*
*  EACH BUFFER IS ACTUALLY A TEMPORARY DATA SET NAMED '&CUTX'
*  WHERE X HAS A VALUE RANGING FROM 1 TO 9.
*
*  NOTE THAT CUTP1 THRU CUTP4 ARE 80 BYTES LONG SO WE CAN HANDLE
*  ALMOST ANYTHING THAT THE USER ENTERS.  CUTP4 WILL CONTAIN
*  ANY REMAINING PARAMETERS AFTER THE FIRST THREE, AND IS ONLY USED
*  TO CHECK THAT NO 4TH OPERAND IS ENTERED.
*
*  THERE SHOULD BE A CLIST IN SYSPROC NAMED 'PASTE' THAT CONTAINS:
*      ISREDIT MACRO (P1 P2 P3) NOPROCESS
*      ISREDIT !PASTE &P1 &P2 &P3
*  SEE THE COMMENTS IN THE SOURCE CODE FOR 'CUT' ABOUT THIS CLIST.
*
* LOG OF CHANGES.
*  18OCT90 - ADD VERSION TO @PROLOG. FIX MSG12L.
*  25APR91 - NO CODE CHANGES. MINOR COMMENT CHANGES.
*
         SPACE
PASTE    CSECT
         USING *,R8
@ORIGIN  B     @PROLOG-*(,R15)
         DC    AL1(5),CL11'PASTE 1.0  '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(0),AL3(@DATAL)
@PROLOG  STM   14,8,12(13)         SAVE REGS
         LR    R8,15               BASE REGISTER
         LR    R2,R1               PARM POINTER
         LA    R3,68(,R13)         POINT TO 18TH WORD OF SAVE AREA
         LA    R1,56(,R13)         POINT TO 15TH WORD OF SAVE AREA
         MVC   0(10,R1),GMLIST
         L     R0,@SIZE
         GETMAIN EC,LV=(0),A=(R3),MF=(E,(1))
         LTR   R15,R15             IF GETMAIN WAS NOT SUCCESSFUL
         BZ    GOTMAIN                THEN
         LM    14,8,12(13)            RESTORE REGS
         LA    R15,12                 SET RC = 12
         BR    R14                    RETURN
GOTMAIN  L     R3,68(,R13)         GET ADDRESS RETURNED BY GETMAIN
         STM   9,12,56(R13)        SAVE REMAINING REGISTERS
         DROP  R8
         LR    R10,R8
         USING @ORIGIN,R10
         SPACE
         LR    R0,R3               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R15,R15             ZERO PAD AND 'FROM' LENGTH
         MVCL  R0,R14              CLEAR GETMAINED AREA
         SPACE
         ST    R3,8(,R13)          PUT NEW ADDRESS IN OLD SAVE AREA
         ST    R13,4(,R3)          PUT OLD ADDRESS IN NEW SAVE AREA
         LR    R13,R3              SWITCH TO NEW SAVEAREA
         USING @DATA,R13
         SPACE
         LOAD  EP=ISPLINK,ERRET=EXIT12
         ST    R0,ISPLINKA
         SPACE
***********************************************************************
*                                                                     *
*         DEFINE VARIABLES                                            *
*                                                                     *
***********************************************************************
         SPACE
         MVC   VDEFNAME,=CL10'(CUTP1)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTP1
         LA    R0,L'CUTP1
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTP2)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTP2
         LA    R0,L'CUTP2
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTP3)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTP3
         LA    R0,L'CUTP3
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTP4)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTP4
         LA    R0,L'CUTP4
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTBO)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTBO
         LA    R0,L'CUTBO
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTIP)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTIP
         LA    R0,L'CUTIP
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTDW)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTDW
         LA    R0,L'CUTDW
         BAL   R8,VDEFINE
         SPACE
         MVC   VDEFNAME,=CL10'(CUTLN)'
         MVC   VDEFFMT,=CL8'CHAR'
         LA    R1,CUTLN
         LA    R0,256
         BAL   R8,VDEFINE
         SPACE
***********************************************************************
*                                                                     *
*         IDENTIFY THIS AS AN EDIT MACRO, GET PARAMETER               *
*                                                                     *
***********************************************************************
         SPACE
         LA    R1,CMD1             ISREDIT MACRO (CUTP1) NOPROCESS
         LA    R0,L'CMD1
         BAL   R8,ISREDIT
         SPACE
         TR    CUTP1,CAPS
         CLC   CUTP1(4),=C'AFT '
         BE    ABSP1
         CLC   CUTP1(4),=C'BEF '
         BE    ABSP1
         CLC   CUTP1(5),=C'AFTER '
         BE    ABSP1
         CLC   CUTP1(6),=C'BEFORE '
         BNE   P1ID                   THEN
ABSP1    MVC   CUTP4,CUTP3            SHIFT 3RD TO 4TH
         MVC   CUTP3,CUTP2            SHIFT 2ND TO 3RD
         MVC   CUTP2,CUTP1            SHIFT 1ST TO 2ND
         MVI   CUTP1,C' '             BLANK 1ST
         MVC   CUTP1+1(79),CUTP1      BLANK 1ST
P1ID     CLI   CUTP1+1,C' '        IF 1ST OPERAND LONGER THAN 1 CHAR
         BNE   ERR01                  ERROR
         CLI   CUTP1,C' '          IF NO OPERAND
         BNE   P1NB                   THEN
         MVI   CUTP1,C'1'             DEFAULT IS 1
P1NB     CLI   CUTP1,C'?'          HELP
         BE    HELP
         CLI   CUTP1,C':'          COLON
         BE    ERR14
         OI    CUTP1,X'40'         CAPS
         CLI   CUTP1,C'1'
         BL    ERR01
         CLI   CUTP1,C'9'
         BH    ERR01
         SPACE
***********************************************************************
*                                                                     *
*         IF 'BEFORE' OR 'AFTER' SPECIFIED, INTERPRET LABEL           *
*                                                                     *
***********************************************************************
         SPACE
         BAL   R8,CER
         MVC   CUTPW,CUTP2         SAVE FOR ERR02
         TR    CUTP2,CAPS
         CLI   CUTP2,C' '
         BE    NOLABS
         CLC   CUTP2(4),=C'AFT '
         BE    OKP2
         CLC   CUTP2(4),=C'BEF '
         BE    OKP2
         CLC   CUTP2(5),=C'AFTER '
         BE    OKP2
         CLC   CUTP2(6),=C'BEFORE '
         BNE   ERR02
OKP2     CLI   CUTP3,C' '          IF NOTHING FOLLOWS 'BEF' OR 'AFT'
         BE    ERR12                  ERROR
         TR    CUTP3,CAPS
         LA    R1,CUTP3
         LA    R15,LABEL1
         MVC   0(10,R15),=CL10' '
         LA    R0,9
MOVLAB2  CLI   0(R1),C' '
         BE    GOTLAB2
         CLI   0(R1),0
         BE    GOTLAB2
         MVC   0(1,R15),0(R1)
         LA    R1,1(,R1)
         LA    R15,1(,R15)
         BCT   R0,MOVLAB2
         MVC   0(1,R15),0(R1)      COPY TRAILING BLANK
         CLI   0(R1),C' '
         BNE   ERR11               LABEL TOO LONG
GOTLAB2  EQU   *
         CLI   LABEL1,C'.'
         BNE   ERR11
         LA    R1,CMDB             ISREDIT (CUTIP) = LINENUM .LABELXXX
         LA    R0,L'CMDB
         MVC   LINE(L'CMDB),0(R1)
         MVC   LINE+18(9),LABEL1
         LA    R1,LINE
         BAL   R8,ISREDIT
         LTR   R15,R15
         BNZ   ERR11
         SPACE
         LA    R1,CMDC             ISREDIT PROCESS
         LA    R0,L'CMDC            (NEITHER DEST NOR RANGE)
         BAL   R8,ISREDIT           (JUST TO ENSURE NO LINE CMDS)
         SPACE
         LTR   R15,R15             IF RC = 0
         BZ    OKLABS                 THERE WERE NO LINE CMDS
         C     R15,=F'16'          IF COMMAND CONFLICT
         BE    ERR10                SHOW ZERRMSG
         B     EXIT0               OTHERWISE DONT DO ANYTHING FOR NOW
OKLABS   BAL   R8,CEC
         CLI   CUTP2,C'B'          IF BEFORE
         BNE   HAVIP                  THEN
         PACK  DOUBLE,CUTIP           REDUCE INSERTION POINT
         CVB   R1,DOUBLE
         LTR   R1,R1                  UNLESS
         BZ    ALR0                    IT IS ZERO
         BCTR  R1,0
ALR0     CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  CUTIP(6),DOUBLE+4(4)
         B     HAVIP
         SPACE
***********************************************************************
*                                                                     *
*         PROCESS THE LINE COMMAND(S)                                 *
*                                                                     *
***********************************************************************
         SPACE
NOLABS   LA    R1,CMD6             ISREDIT (CUTBO) = LINENUM .ZLAST
         LA    R0,L'CMD6
         BAL   R8,ISREDIT
         SPACE
         BAL   R8,CER
         SPACE
         LA    R1,CMD2             ISREDIT PROCESS DEST
         LA    R0,L'CMD2
         BAL   R8,ISREDIT
         SPACE
         LTR   R15,R15
         BZ    OKLINEC
         SPACE
         C     R15,=F'20'          IF RC EQ 20
         BE    CHKEMPTY               MAY BE EMPTY
         C     R15,=F'16'          IF RC EQ 16
         BE    ERR10                  COMMAND CONFLICT
         C     R15,=F'8'           IF RC NE 8
         BNE   EXIT0                  ISPF WILL ISSUE ITS OWN MESSAGE
         B     ERR03               NO LINE COMMAND SPECIFIED
CHKEMPTY CLC   CUTBO,=C'000000'    IF NOT EMPTY
         BNE   EXIT0                  ISPF WILL ISSUE ITS OWN MESSAGE
         MVC   CUTIP,CUTBO         EMPTY DATA SET
         B     HAVIP                  SO USE 000000 AS INSERTION POINT
         SPACE
***********************************************************************
*                                                                     *
*         GET THE INSERTION POINT                                     *
*                                                                     *
***********************************************************************
         SPACE
OKLINEC  EQU   *
         LA    R1,CMD3             ISREDIT (CUTIP) = LINENUM .ZDEST
         LA    R0,L'CMD3
         BAL   R8,ISREDIT
         SPACE
HAVIP    BAL   R8,CEC
         SPACE
         LA    R1,CMD4             ISREDIT (CUTDW) = DATA_WIDTH
         LA    R0,L'CMD4
         BAL   R8,ISREDIT
         SPACE
***********************************************************************
*                                                                     *
*         ALLOCATE THE CUT BUFFER AS AN OLD TEMPORARY DATA SET        *
*                                                                     *
***********************************************************************
         SPACE
         LA    R1,W99RBPTR
         LA    R15,W99RB
         ST    R15,0(,R1)
         OI    0(R1),X'80'
         MVC   W99RB(20),P99RB
         LA    R14,W99TUPL
         ST    R14,8(,R15)
         LA    R1,W99RTDDN
         ST    R1,0(,R14)
         MVC   0(14,R1),P99RTDDN
         LA    R1,W99DSNAM
         ST    R1,4(,R14)
         MVC   0(11,R1),P99DSNAM
         MVC   10(1,R1),CUTP1      APPEND PARM TO DSN
         LA    R1,P99STATS
         ST    R1,8(,R14)
         LA    R1,P99NDISP
         ST    R1,12(,R14)
         LA    R1,P99PERMA
         ST    R1,16(,R14)
         LA    R1,P99CNVRT
         ST    R1,20(,R14)
         OI    20(R14),X'80'
         LA    R1,W99RBPTR
         SVC   99
         LTR   R15,R15
         BZ    OKALLOC
         C     R15,=F'4'
         BNE   ERR05
         CLC   W99RB+4(2),=X'1708'
         BNE   ERR05
         B     ERR06
OKALLOC  EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         OPEN THE TEMPORARY DATA SET                                 *
*                                                                     *
***********************************************************************
         SPACE
         MVI   OPEN,X'80'
         MVI   CLOSE,X'80'
         SPACE
         LA    R3,VIODCBW
         MVC   0(VIODCBL,R3),VIODCB
         MVC   DDNAM(8,R3),W99RTDDN+6
         LA    R1,EOF              SET EODAD=EOF    IN DCB
         STCM  R1,7,EODAD+1(R3)
         LA    R1,VIOEXL           SET EXLST=VIOEXL IN DCB
*        STCM  R1,7,EXLST+1(R3)
*        LA    R0,VIOEXO
*        ST    R0,VIOEXL
*        MVI   VIOEXL,X'85'
         OPEN  ((R3),INPUT),MF=(E,OPEN)
         TM    48(R3),X'10'
         BNO   ERR07
         SPACE
***********************************************************************
*                                                                     *
*         COPY THE TEMPORARY FILE TO THE EDIT DATA SET                *
*                                                                     *
***********************************************************************
         SPACE
         SR    R5,R5
         PACK  DOUBLE,CUTIP
         CVB   R4,DOUBLE
         MVI   CUTLN,C' '          PAD WITH BLANKS
         MVC   CUTLN+1(255),CUTLN  FOR DATA CUT AS 72 AND PASTED AS 80
         SPACE
LOOP     GET   (R3),CUTLN
         CVD   R4,DOUBLE
         UNPK  NUMBER(6),DOUBLE+4(4)
         OI    NUMBER+5,X'F0'
         LA    R1,CMD5             LINE_AFTER XXXXXX = DATALINE (CUTLN)
         LA    R0,L'CMD5
         MVC   LINE(L'CMD5),0(R1)
         MVC   LINE+11(6),NUMBER
         LA    R1,LINE
         BAL   R8,ISREDIT
         SPACE
         A     R4,=F'1'
         A     R5,=F'1'
         B     LOOP
         SPACE
***********************************************************************
*                                                                     *
*         CLOSE AND ISSUE COMPLETION MESSAGE                          *
*                                                                     *
***********************************************************************
         SPACE
EOF      LA    R3,VIODCBW
         CLOSE ((R3)),MF=(E,CLOSE)
         BAL   R8,UNALLO           REMOVE IN-USE FLAG
         LTR   R15,R15
         BNZ   ERR08
         CVD   R5,DOUBLE
         MVC   HOWMANY,=X'4020202020202120'
         ED    HOWMANY,DOUBLE+4
         LA    R1,LINE
         MVC   0(MSG00L,R1),MSG00
         MVC   8(6,R1),HOWMANY+2
         CLC   HOWMANY+6(2),=C' 1' IF ONE LINE
         BNE   *+10                   THEN
         MVC   15(12,R1),=C'LINE PASTED ' CHANGE PLURAL TO SINGULAR
         A     R1,MSG00            POINT TO 2ND MESSAGE
         LA    R1,8(,R1)           POINT TO 2ND MESSAGE
         MVC   6(6,R1),CUTIP
         MVC   13(3,R1),CUTDW
         MVC   17(8,R1),W99RTDDN+6
*               ELIMINATE LEADING BLANKS FROM FINAL MESSAGE
         L     R1,LINE             GET LENGTH OF 1ST MESSAGE
         A     R1,LINE+4           GET LENGTH OF BOTH MSGS
         LR    R14,R1
         BCTR  R14,0               GET LENGTH MINUS 1
         BCTR  R14,0               GET LENGTH MINUS 2
         LA    R15,LINE+8          POINT TO 1ST MESSAGE
SHIFTL   CLI   0(R15),C' '
         BNE   SHIFTED
         EX    R14,SHIFTM          SHIFT MESSAGES LEFT
         BCTR  R1,0                REDUCE LENGTH
         B     SHIFTL
SHIFTM   MVC   LINE+8(0),LINE+9    (EXECUTED)
SHIFTED  S     R1,LINE+4           COMPUTE NEW LENGTH OF 1ST MSG
         ST    R1,LINE             STORE NEW LENGTH
*               LEADING BLANKS HAVE BEEN ELIMINATED
         LA    R1,LINE
         BAL   R8,ZEDSMSG          SET ZEDSMSG = &STR(IT WORKED)
         SPACE
         BAL   R8,SETMSG0          ISPEXEC SETMSG MSG(ISRZ000)
EXIT0    SR    R15,R15
EXIT     LR    R2,R15
         L     R15,ISPLINKA
         LTR   R15,R15
         BZ    EXITNOD
         DELETE EP=ISPLINK
EXITNOD  EQU   *
         LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
EXIT12   LA    R15,12
         B     EXIT
         SPACE
***********************************************************************
*                                                                     *
*         SUBROUTINES                                                 *
*                                                                     *
***********************************************************************
         SPACE
*               REMOVE THE IN-USE FLAG SO THAT SUBSEQUENT ALLOCATIONS
*               (BY CUT AND PASTE) DO NOT GENERATE ADDITIONAL DDNAMES
*               AND EVENTUALLY FILL UP THE TIOT.
         SPACE
UNALLO   LA    R15,W99RB
         MVC   W99RB(20),U99RB
         LA    R14,W99TUPL
         ST    R14,8(,R15)
         LA    R1,W99DDNAM
         ST    R1,0(,R14)
         MVC   0(6,R1),U99DDNAM
         MVC   6(8,R1),W99RTDDN+6
         LA    R1,U99REMOV
         ST    R1,4(,R14)
         OI    04(R14),X'80'
         LA    R1,W99RBPTR
         SVC   99
         BR    R8
         SPACE
ERR01    LA    R1,LINE
         MVC   0(MSG01L,R1),MSG01
         MVC   26(8,R1),CUTP1      COPY 1ST 8 BYTES OF 1ST PARM
ERR01J   BAL   R8,ZEDSMSG          SET ZEDSMSG = &STR(WHATEVER)
         BAL   R8,SETMSG1          ISPEXEC SETMSG MSG(ISRZ001)
         B     EXIT0
         SPACE
ERR02    LA    R1,LINE
         MVC   0(MSG02L,R1),MSG02
         MVC   26(8,R1),CUTPW      COPY 1ST 8 BYTES OF PARM
         B     ERR01J              SET ZEDSMSG = &STR(INVALID PARM)
         SPACE
ERR03    LA    R1,LINE
         MVC   0(MSG03L,R1),MSG03
         B     ERR01J              SET ZEDSMSG = &STR(NO LINE CMD)
         SPACE
ERR04    LA    R1,LINE
         MVC   0(MSG04L,R1),MSG04
         A     R1,MSG04
         LA    R1,8(,R1)
         MVC   0(6,R1),HOWMANY+2
         LA    R1,LINE
         BAL   R8,ZEDSMSG          SET ZEDSMSG = &STR(TOO MANY LINES)
         SPACE
         BAL   R8,SETMSG1          ISPEXEC SETMSG MSG(ISRZ001)
         B     EXIT0
         SPACE
ERR05    LA    R1,LINE
         MVC   0(MSG05L,R1),MSG05
ERR05J   A     R1,LINE
         LA    R1,8(,R1)
         CVD   R15,DOUBLE          RETURN CODE FROM SVC 99
         OI    DOUBLE+7,X'0F'
         UNPK  3(2,R1),DOUBLE+6(2)
         UNPK  DOUBLE(5),W99RB+4(3) ERROR CODE FROM SVC 99
         TR    DOUBLE(4),HEXTAB-240
         MVC   12(4,R1),DOUBLE
         UNPK  DOUBLE(5),W99RB+6(3) INFO  CODE FROM SVC 99
         TR    DOUBLE(4),HEXTAB-240
         MVC   22(4,R1),DOUBLE
         LA    R1,LINE
         B     ERR01J              SET ZEDSMSG = &STR(ALLOC ERROR)
         SPACE
ERR06    LA    R1,LINE
         MVC   0(MSG06L,R1),MSG06
         B     ERR01J              SET ZEDSMSG = &STR(NOT FOUND)
         SPACE
ERR07    LA    R1,LINE
         MVC   0(MSG07L,R1),MSG07
         B     ERR01J              SET ZEDSMSG = &STR(OPEN ERROR)
         SPACE
ERR08    LA    R1,LINE
         MVC   0(MSG08L,R1),MSG08
         B     ERR05J              SET ZEDSMSG = &STR(UNALLOC ERROR)
         SPACE
ERR09    LA    R1,LINE
         MVC   0(MSG09L,R1),MSG09
         A     R1,LINE
         LA    R1,8(,R1)
         CVD   R15,DOUBLE          RETURN CODE FROM PROCESS
         OI    DOUBLE+7,X'0F'
         UNPK  3(2,R1),DOUBLE+6(2)
         MVC   6(6,R1),CUTBO
         LA    R1,LINE
         B     ERR01J              SET ZEDSMSG = &STR(EMPTY FILE)
         SPACE
ERR10    BAL   R8,GETZERR
         BAL   R8,SETMSGZ          ISPEXEC SETMSG MSG(&ZERRMSG)
         B     EXIT12
         SPACE
ERR11    LA    R1,LINE
         MVC   0(MSG11L,R1),MSG11
         A     R1,MSG11
         LA    R1,8(,R1)
         MVC   0(10,R1),LABEL1
         LA    R1,LINE
         B     ERR01J              SET ZEDSMSG = &STR(LABEL ERROR)
         SPACE
ERR12    LA    R1,LINE
         MVC   0(MSG12L,R1),MSG12
         B     ERR01J              SET ZEDSMSG = &STR(OPEN ERROR)
         SPACE
ERR14    LA    R1,LINE
         MVC   0(MSG14L,R1),MSG14
         OC    8+L'MSG14A(L'MSG14B,R1),MSG14C
         B     ERR01J              SET ZEDSMSG = &STR(VERSION 1.0)
         SPACE
VDEFINE  LR    R15,R1              SAVE ADDRESS
         ST    R0,VDEFLEN          STORE LENGTH
         LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'VDEFINE '
         ST    R0,0(,R1)
         LA    R0,VDEFNAME
         ST    R0,4(,R1)
         ST    R15,8(,R1)          STORE ADDRESS
         LA    R0,VDEFFMT
         ST    R0,12(,R1)
         LA    R0,VDEFLEN
         ST    R0,16(,R1)
         OI    16(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
GETZERR  LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'VCOPY '
         ST    R0,0(,R1)
         LA    R0,=CL10'(ZERRMSG)'
         ST    R0,4(,R1)
         LA    R0,ZERRMSL
         MVC   ZERRMSL,=F'8'
         ST    R0,8(,R1)
         LA    R0,ZERRMSG
         ST    R0,12(,R1)
         LA    R0,=CL7'MOVE'
         ST    R0,16(,R1)
         OI    16(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
ZEDSMSG  LR    R15,R1              SAVE ADDRESS
         ST    R0,VDEFLEN          STORE LENGTH
         LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'VREPLACE'
         ST    R0,0(,R1)
         LA    R0,=CL17'(ZEDSMSG ZEDLMSG)'
         ST    R0,4(,R1)
         ST    R15,8(,R1)          LENGTHS
         LA    R15,8(,R15)
         ST    R15,12(,R1)         VALUES
         OI    12(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
SETMSGZ  LA    R1,ZERRMSG
         B     SETMSG
SETMSG0  LA    R1,=CL8'ISRZ000 '   ALARM=N0
         B     SETMSG
SETMSG1  LA    R1,=CL8'ISRZ001 '   ALARM=YES
SETMSG   LR    R15,R1              SAVE ADDRESS OF 'ISRZ001'
         LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'SETMSG'
         ST    R0,0(,R1)
         ST    R15,4(,R1)
         OI    4(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
CER      LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'CONTROL'
         ST    R0,0(,R1)
         LA    R0,=CL8'ERRORS'
         ST    R0,4(,R1)
         LA    R0,=CL8'RETURN'
         ST    R0,8(,R1)
         OI    8(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
CEC      LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'CONTROL'
         ST    R0,0(,R1)
         LA    R0,=CL8'ERRORS'
         ST    R0,4(,R1)
         LA    R0,=CL8'CANCEL '
         ST    R0,8(,R1)
         OI    8(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
HELP     BAL   R8,CER
         LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'DISPLAY'
         ST    R0,0(,R1)
         LA    R0,=CL8'CUTH02'
         ST    R0,4(,R1)
         OI    4(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         B     EXIT0
         SPACE
ISREDIT  LR    R15,R1
         ST    R0,LENGTH
         LA    R1,PARAMS
         LA    R0,SERVICE
         MVC   SERVICE,=CL8'ISREDIT '
         ST    R0,0(,R1)
         LA    R0,LENGTH
         ST    R0,4(,R1)
         ST    R15,8(,R1)
         OI    8(R1),X'80'
         L     R15,ISPLINKA
         BALR  R14,R15
         BR    R8
         SPACE
VIOEXO   CLC   LRECL(2,R1),=H'0'
         BNE   *+10
         MVC   LRECL(2,R1),WIDTH
         CLC   BLKSI(2,R1),=H'0'
         BNER  R14
         LH    R0,LRECL(,R1)
         SLL   R0,4   LRECL TIMES 16
         STH   R0,BLKSI(,R1)
         BR    R14
         SPACE
***********************************************************************
*                                                                     *
*         CONSTANTS                                                   *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
GMLIST   GETMAIN EC,MF=L
CMD1     DC    C'MACRO (CUTP1,CUTP2,CUTP3,CUTP4) NOPROCESS'
CMD2     DC    C'PROCESS DEST'
CMD3     DC    C'(CUTIP) = LINENUM .ZDEST'
CMD4     DC    C'(CUTDW) = DATA_WIDTH'
CMD5     DC    C'LINE_AFTER XXXXXX = DATALINE (CUTLN)'
CMD6     DC    C'(CUTBO) = LINENUM .ZLAST'
CMDB     DC    C'(CUTIP) = LINENUM .LABELXXX'
CMDC     DC    C'PROCESS'
*
MSG00    DC    A(L'MSG00A,L'MSG00B)
MSG00A   DC    C'NNNNNN LINES PASTED'
MSG00B   DC    C'AFTER XXXXXX WID DDNAMEXX'
MSG00L   EQU   *-MSG00
*
MSG01    DC    A(L'MSG01A,L'MSG01B)
MSG01A   DC    C'INVALID PARAMETER XXXXXXXX'
MSG01B   DC    C'EXPECTING LEVEL OR "AFTER" OR "BEFORE"'
MSG01L   EQU   *-MSG01
*
MSG02    DC    A(L'MSG02A,L'MSG02B)
MSG02A   DC    C'INVALID PARAMETER XXXXXXXX'
MSG02B   DC    C'EXPECTING "AFTER" OR "BEFORE"'
MSG02L   EQU   *-MSG02
*
MSG03    DC    A(L'MSG03A,L'MSG03B)
MSG03A   DC    C'LINE COMMAND MISSING'
MSG03B   DC    C'AN "A" OR "B" LINE COMMAND HAS NOT BEEN SPECIFIED'
MSG03L   EQU   *-MSG03
*
MSG04    DC    A(L'MSG04A,L'MSG04B)
MSG04A   DC    C'TOO MANY LINES'
MSG04B   DC    C'XXXXXX IS MORE THAN THE MAXIMUM OF 1000 LINES'
MSG04L   EQU   *-MSG04
*
MSG05    DC    A(L'MSG05A,L'MSG05B)
MSG05A   DC    C'ALLOCATION ERROR'
MSG05B   DC    C'RC=XX ERROR=XXXX INFO=XXXX'
MSG05L   EQU   *-MSG05
*
MSG06    DC    A(L'MSG06A,L'MSG06B)
MSG06A   DC    C'NOTHING WAS CUT'
MSG06B   DC    C'CANNOT FIND CUT BUFFER'
MSG06L   EQU   *-MSG06
*
MSG07    DC    A(L'MSG07A,L'MSG07B)
MSG07A   DC    C'OPEN ERROR'
MSG07B   DC    C'UNABLE TO OPEN TEMPORARY FILE'
MSG07L   EQU   *-MSG07
*
MSG08    DC    A(L'MSG08A,L'MSG08B)
MSG08A   DC    C'UNALLOCATE ERROR'
MSG08B   DC    C'RC=XX ERROR=XXXX INFO=XXXX'
MSG08L   EQU   *-MSG08
*
MSG09    DC    A(L'MSG09A,L'MSG09B)
MSG09A   DC    C'UNEXPECTED ERROR'
MSG09B   DC    C'RC=XX XXXXXX'
MSG09L   EQU   *-MSG09
*
MSG11    DC    A(L'MSG11A,L'MSG11B)
MSG11A   DC    C'LABEL ERROR'
MSG11B   DC    C'.LABELXXX  IS NOT A LABEL'
MSG11L   EQU   *-MSG11
*
MSG12    DC    A(L'MSG12A,L'MSG12B)
MSG12A   DC    C'MISSING LABEL'
MSG12B   DC    C'LABEL EXPECTED FOLLOWING "BEFORE" OR "AFTER"'
MSG12L   EQU   *-MSG12
*
MSG14    DC    A(L'MSG14A,L'MSG14B)
MSG14A   DC    C'VERSION 1.0'
MSG14B   DC    X'C0E040C0C0D0D040C0D0C0C0D0C0E0'
MSG14L   EQU   *-MSG14
MSG14C   DC    X'020800020903030007060406090508'
*
P99RB    DC    0F'0',AL1(20,1),X'A000',A(0,0,0,0)
P99RTDDN DC    0H'0',X'0055',H'1,8',CL8' '
P99DSNAM DC    0H'0',X'0002',H'1,5',CL5'&&CUT '
P99STATS DC    0H'0',X'0004',H'1,1',X'01',X'00' OLD=1 NEW=4 LAST=PAD
P99NDISP DC    0H'0',X'0005',H'1,1',X'04',X'00' DELETE=4
P99PERMA DC    0H'0',X'0052',H'0'
P99CNVRT DC    0H'0',X'0053',H'0'
U99RB    DC    0F'0',AL1(20,2),X'0000',A(0,0,0,0)
U99DDNAM DC    0H'0',X'0001',H'1,8',CL8' '
U99REMOV DC    0H'0',X'0008',H'0'
HEXTAB   DC    C'0123456789ABCDEF'
         DC    0D'0'
CAPS     DC    129AL1(*-CAPS)      00-80
         DC    9AL1(*-CAPS+X'40')  81-89 BECOME C1-C9
         DC    7AL1(*-CAPS)        8A-90
         DC    9AL1(*-CAPS+X'40')  91-99 BECOME D1-D9
         DC    8AL1(*-CAPS)        9A-A1
         DC    8AL1(*-CAPS+X'40')  A2-A9 BECOME E2-E9
         DC    86AL1(*-CAPS)       AA-FF
         PRINT NOGEN
         SPACE
VIODCB   DCB   DDNAME=CUTPASTE,DSORG=PS,MACRF=(GM),RECFM=FB,BUFNO=2
VIODCBL  EQU   *-VIODCB
         SPACE
         PRINT GEN
         DC    0D'0'
***********************************************************************
*                                                                     *
*         WORKSPACE                                                   *
*                                                                     *
***********************************************************************
         SPACE
@DATA    DSECT
SAVE     DS    18F
DOUBLE   DS    D
OPEN     DS    F
CLOSE    DS    F
VIODCBW  DS    0F,(VIODCBL)X
VIOEXL   DS    F
ISPLINKA DS    F
PARAMS   DS    5F
SERVICE  DS    CL8
LENGTH   DS    F
VCOPYLEN DS    F
VDEFFMT  DS    CL8
VDEFLEN  DS    F
VDEFNAME DS    CL10
CUTPW    DS    CL8
CUTP1    DS    CL80
CUTP2    DS    CL80
CUTP3    DS    CL80
CUTP4    DS    CL80
CUTBO    DS    CL6
CUTIP    DS    CL6
CUTDW    DS    CL3
NUMBER   DS    CL6
HOWMANY  DS    CL8
WIDTH    DS    H
ZERRMSL  DS    F
ZERRMSG  DS    CL8
LABEL1   DS    CL9,C
         DS    0F                 ALIGN LINE
         DS    CL3
LINEM1   DS    C                  LINE-1
LINE     DS    CL133
CUTLN    DS    CL256
W99RBPTR DS    F
W99RB    DS    5F
W99TUPL  DS    6F
W99RTDDN DS    3H,CL8
W99DDNAM DS    3H,CL8
W99DSNAM DS    3H,CL5
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
EODAD    EQU   32  OFFSET INTO DCB
EXLST    EQU   32  OFFSET INTO DCB
DDNAM    EQU   40  OFFSET INTO DCB
OFLGS    EQU   48  OFFSET INTO DCB
MACR     EQU   50  OFFSET INTO DCB
BLKSI    EQU   62  OFFSET INTO DCB
LRECL    EQU   82  OFFSET INTO DCB
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
