         TITLE '   L A S T I P L  -  TSO/ISPF VERSION'
* ------------------------------------------------------------------ *
*        'LASTIPL' TSO COMMAND            Y2K COMPLIANT
*
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        DATE WRITTEN. JANUARY 18 1982.
*        DATE UPDATED. APRIL 1 1991.     JIM MARSHALL
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND DISPLAYS THE DATE AND TIME OF THE LAST IPL
*         ON THE TERMINAL.
*         DEPENDENCY - WORKS ONLY ON MVS/SE2 OR MVS/SP (IN OTHER WORDS,
*         MVS SYSTEMS IN WHICH SMF IS RECORDED ON VSAM DATA SETS).
*
*         IF YOU PASS A PARAMETER TO LASTIPL OF "ISPF", IT WILL  JDM3
*         YOU WANT THE ANSWER PASSED IN AN ISPF VARIABLE BACK    JDM3
*         TO THE CALLER.                                         JDM3
*                            JIM MARSHALL                        JDM3
*
*         CHANGE LOG:
*         01APR92 - ADDED DSECT'S TO REPLACE HARD CODED OFFSETS: JDM1
*         25JUN98 - CLEANED CODE AND IS NOW Y2K.                 JDM2
*         31JUL99 - UPDATED TO ADD ISPF VARIABLE FOR THE ANSWER. JDM3
*
* ------------------------------------------------------------------ *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
LASTIPL  AMODE 24
LASTIPL  RMODE 24
LASTIPL  CSECT
         SAVE (14,12),,LASTIPL_&SYSDATE._&SYSTIME
         LR    R12,R15
         USING LASTIPL,R12
         LR    R2,R1               SAVE ADDRESS OF CPPL
         USING CPPL,R2             ESTABLISH ADDRESSABILITY
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         ST    R13,4(,R9)
         ST    R9,8(,R13)
         LR    R13,R9
         SPACE
*-------------------------------------------------------------------*
*        PROCESS THE CMD BUFFER TO GET THE REST OF THE PARMS TO
*        PASS TO THE HIGH LEVEL ASSEMBLER.
*
*        CMD BUFFER
*          2   2
*        *---*---*---------------------------------------*
*        *BUF*CMD*LASTIPL ISPF                           *
*        *LEN*LEN*                                       *
*        *---*---*---------------------------------------*
*
*-------------------------------------------------------------------*
         SPACE
         L     R10,CPPLCBUF        LOAD R10 W/ADDR OF INPUT CMD BUF
         LH    R8,0(,R10)          GET LENGTH OF CMD BUFFER      JDM3
         LTR   R8,R8               IS IT ZERO??                  JDM3
         BZ    ABEND0              SOMETHING IS AMISS??          JDM3
         LH    R8,2(,R10)          GET LENGTH OF CMD ITSELF      JDM3
         CH    R8,=H'7'            JUST COMMAND ITSELF?          JDM3
         BE    CONTTSO             SOMETHING IS AMISS??          JDM3
         B     CONTISP             SKIP TSO SETTING              JDM3
         SPACE 1                                                 JDM3
CONTTSO  EQU   *                                                 JDM3
         MVI   ISPSW,X'00'         SET SW FOR LATER              JDM3
         B     CONT                                              JDM3
CONTISP  EQU   *                                                 JDM3
         MVI   ISPSW,X'FF'         WANT ISPF VERSION             JDM3
CONT     EQU   *                                                 JDM3
         MVC   PUTPTPB(12),MODEL
         LA    R15,PUTIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R1,ECB
         ST    R1,IOPLECB
         SR    R0,R0
         ST    R0,ECB
         DROP  R15                 IOPL
         SPACE
         L     R15,CVTPTR          GET POINTER TO CVT            JDM1
         USING CVTMAP,R15          GET ADDRESSABILITY TO IT      JDM1
         L     R10,CVTSMCA         FIND SMCA                     JDM1
         DROP  R15                                               JDM1
         USING SMCABASE,R10        GET ADDRESSABILITY            JDM1
         LA    R3,SMCAIDTE         POINT TO IPL DATE             JDM1
         LA    R4,SMCAITME         POINT TO IPL TIME             JDM1
         DROP  R10                                               JDM1
         MVC   WORK(4),0(R3)       GET THE DATE 0CYYDDD          JDM2
         AP    WORK,=PL4'1900000'  ADJUST FOR 2000               JDM2
         MVC   JULDATE(9),JULPATT  MOVE IN PATTERN               JDM2
         ED    JULDATE,WORK        MAKE IT READABLE              JDM2
         BAL   R8,DATECONV
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(MESSLEN-1),MESSAGE
         MVC   MESSAGE(15),=C'LAST IPL WAS ON'
         LA    R15,MESSAGE+16
         MVC   MESSAGE+16(9),PARM3+20  DAY OF WEEK
         LA    R15,MESSAGE+25
BACK1    EQU   *
         CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,BACK1
         LA    R15,2(,R15)
         MVC   0(20,R15),PARM3     MONTH DAY YEAR
         LA    R15,20(,R15)
BACK2    EQU   *
         CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,BACK2
         LA    R15,2(,R15)
         MVI   0(R15),C'('
         MVC   1(8,R15),JULDATE+1  JULIAN DATE
         MVI   09(R15),C')'
         LA    R15,11(,R15)
         MVC   0(2,R15),=C'AT'
         LA    R15,3(,R15)         POINT TO WHERE HH.MM WILL GO
         L     R1,0(,R4)
         SLR   R0,R0
         D     R0,=F'360000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R15),DOUBLE+6(2)
         LR    R1,R0
         SLR   R0,R0
         D     R0,=F'6000'
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  3(2,R15),DOUBLE+6(2)
         MVI   2(R15),C'.'
         LA    R15,5(,R15)
         SPACE
         SPACE 1                                                 JDM3
         CLI   ISPSW,X'FF'         ISPF SWITCH SET ??            JDM3
         BE    ISPF1                                             JDM3
         SPACE 1                                                 JDM3
         LA    R1,MESSAGE
         LA    R0,4(,R15)
         SR    R0,R1               COMPUTE LENGTH PLUS 4
         SPACE
         SLL   R0,16
         ST    R0,PUTSEG
         SPACE
         PUTLINE PARM=PUTPTPB,OUTPUT=(PUTSEG,DATA),MF=(E,PUTIOPL)
         SPACE
EXIT     EQU   *
         SLR   R15,R15
         LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
ABEND0   ABEND 0                                                 JDM3
ABEND1   ABEND 1,DUMP                                            JDM3
ABEND2   ABEND 2,DUMP                                            JDM3
ABEND3   ABEND 3,DUMP                                            JDM3
*---------------------------------------------------------------------*
*         DATE CONVERSION
*---------------------------------------------------------------------*
         SPACE
DATECONV EQU   *
         LA    R1,3
         ST    R1,PARM2
         MVC   PARM1(4),WORK                                     JDM2
         LA    R1,16+128
         ST    R1,PARM4
         LA    R1,PARMPTRS
         LA    R14,PARM1
         ST    R14,0(,R1)
         LA    R14,PARM2
         ST    R14,4(,R1)
         LA    R14,PARM3
         ST    R14,8(,R1)
         LA    R14,PARM4
         ST    R14,12(,R1)
         LA    R14,PARM5
         ST    R14,16(,R1)
         L     R15,=V(JULSUB)
         BALR  R14,R15
         BR    R8
         SPACE
*----------------------------------------------------------------JDM3*
*        ISPF VARIABLE CODE STARTING WITH ISSUING THE            JDM3
*        VDEFINE FOR THE VARIABLE.                               JDM3
*----------------------------------------------------------------JDM3*
ISPF1    EQU   *                                                 JDM3
         LA    R7,VDEF             GET ADDR OF VDEF              JDM3
         ST    R7,CALL1            STASH THE ADDRESS             JDM3
         LA    R7,XIPL             GET ADDR OF VARIABLE          JDM3
         ST    R7,CALL1+4          STASH THE ADDRESS             JDM3
         LA    R7,MSGIPL           GET ADDR OF ANSWER            JDM3
         ST    R7,CALL1+8          STASH THE ADDRESS             JDM3
         LA    R7,CHAR             GET ADDR OF CHAR              JDM3
         ST    R7,CALL1+12         STASH THE ADDRESS             JDM3
         LA    R7,47               GET LENGTH                    JDM3
         ST    R7,ISPFLEN          SAVE THE LENGTH               JDM3
         LA    R7,ISPFLEN          GET ADDR OF LENGTH FIELD      JDM3
         ST    R7,CALL1+16         STASH THE ADDRESS             JDM3
         OI    CALL1+16,X'80'      FLIP ON HIGH ORDER BIT        JDM3
         SPACE 1                                                 JDM3
         LA    R1,CALL1            GET PARAM LIST ADDR           JDM3
         LINK  EP=ISPLINK          GO OFF TO ISPLINK             JDM3
         LTR   R15,R15                                           JDM3
         BZ    ISPF2                                             JDM3
         LR    R3,R15              SAVE RETURN CODE              JDM3
         B     ABEND1              TRAP                          JDM3
         SPACE 1                                                 JDM3
*----------------------------------------------------------------JDM3*
*        WRITE THE VALUE INTO THE SHARED VARIABLE POOL           JDM3
*----------------------------------------------------------------JDM3*
         SPACE 1                                                 JDM3
ISPF2    EQU   *                                                 JDM3
         LA    R7,VPUT             GET ADDR OF VPUT              JDM3
         ST    R7,CALL2            STASH THE ADDRESS             JDM3
         LA    R7,XIPL             GET ADDR OF VARIABLE NAME     JDM3
         ST    R7,CALL2+4          STASH THE ADDRESS             JDM3
         LA    R7,SHR              GET ADDR OF SHR               JDM3
         ST    R7,CALL2+8          STASH THE ADDRESS             JDM3
         OI    CALL2+8,X'80'       FLIP ON HIGH ORDER BIT        JDM3
         LA    R1,CALL2            GET PARAM LIST ADDR           JDM3
         LINK  EP=ISPLINK          GO OFF TO ISPLINK             JDM3
         LTR   R15,R15                                           JDM3
         BZ    ISPF3                                             JDM3
         LR    R3,R15              SAVE RETURN CODE              JDM3
         B     ABEND2              TRAP                          JDM3
         SPACE 1                                                 JDM3
*----------------------------------------------------------------JDM3*
*        DELETE THE VARIABLE FROM THIS POOL                      JDM3
*----------------------------------------------------------------JDM3*
         SPACE 1                                                 JDM3
ISPF3    EQU   *                                                 JDM3
         LA    R7,VDEL             GET ADDR OF VDEL              JDM3
         ST    R7,CALL3            STASH THE ADDRESS             JDM3
         LA    R7,XIPL             GET ADDR OF RESULT            JDM3
         ST    R7,CALL3+4          STASH THE ADDRESS             JDM3
         OI    CALL3+4,X'80'       FLIP ON HIGH ORDER BIT        JDM3
         SPACE 1                                                 JDM3
         LA    R1,CALL3            GET PARAM LIST ADDR           JDM3
         LINK  EP=ISPLINK          GO OFF TO ISPLINK             JDM3
         LTR   R15,R15                                           JDM3
         BZ    ISPFEND                                           JDM3
         LR    R3,R15              SAVE RETURN CODE              JDM3
         B     ABEND3              TRAP                          JDM3
         SPACE 1                                                 JDM3
ISPFEND  EQU   *                                                 JDM3
         B     EXIT                                              JDM3
         SPACE 1                                                 JDM3
*---------------------------------------------------------------------*
*        CONSTANTS
*---------------------------------------------------------------------*
         SPACE
         LTORG
*----------------------------------------------------------------JDM3*
*        DEFINE THE CONSTANTS, ISPF NEEDS THEM 8 BYTES LONG      JDM3
*----------------------------------------------------------------JDM3*
         SPACE 1                                                 JDM3
VDEF     DC    CL8'VDEFINE'                                      JDM3
VPUT     DC    CL8'VPUT'                                         JDM3
VDEL     DC    CL8'VDELETE'                                      JDM3
SHR      DC    CL8'SHARED'                                       JDM3
XIPL     DC    CL8'(XIPL)  '       ENSURE ONE BLANK AT END !!!   JDM3
CHAR     DC    CL8'CHAR'           ACCT IS CHARACTER DEFINED     JDM3
         SPACE
MODEL    PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
MODELL   EQU   *-MODEL
         SPACE
JULPATT  DC    X'40202020204B202020'                             JDM2
@SIZE    DC    0F'0',AL1(0),AL3(@DATAL)                          JDM2
         DC    0D'0'
         SPACE
*---------------------------------------------------------------------*
*        DSECT
*---------------------------------------------------------------------*
         SPACE
@DATA    DSECT
         DS    18F
DOUBLE   DS    D
PUTIOPL  DS    4F
PUTPTPB  DS    3F
WORK     DS    F                                                 JDM2
ECB      DS    F
PUTSEG   DS    F
MESSAGE  DS   0CL63
         DS    CL16'LAST IPL WAS ON '
MSGIPL   DS    CL10'WEDNESDAY '
         DS    CL18'SEPTEMBER 10 1981 '
         DS    CL11'(YYYY.DDD) '                                 JDM2
         DS    CL03'AT '
         DS    CL05'HH.MM'
MESSLEN  EQU   *-MESSAGE
         DS    0D
PARMPTRS DS    5F
PARM1    DS    F
PARM2    DS    F
PARM4    DS    F
PARM3    DS    CL32
PARM5    DS    32D
JULDATE  DS    CL09                                              JDM2
ISPSW    DS    CL01                                              JDM3
ISPFLEN  DS    F                                                 JDM3
CALL1    DS    0CL20                                             JDM3
         DS    F                   A(VDEF)                       JDM3
         DS    F                   A(VARIABLE NAME)              JDM3
         DS    F                   A(VARIABLE VALUE)             JDM3
         DS    F                   A(CHAR)                       JDM3
         DS    F                   A(L4+X'80000000')             JDM3
         SPACE 1                                                 JDM3
*----------------------------------------------------------------JDM3*
*        DATA AREA TO WRITE VARIABLE INTO SHARED POOL            JDM3
*----------------------------------------------------------------JDM3*
         SPACE 1                                                 JDM3
         DS    0F                                                JDM3
CALL2    DS    0CL12                                             JDM3
         DS    F                   A(VPUT)                       JDM3
         DS    F                   A(VARIABLE NAME)              JDM3
         DS    F                   A(SHR+X'80000000')            JDM3
         SPACE 1                                                 JDM3
*----------------------------------------------------------------JDM3*
*        DATA AREA TO WRITE VARIABLE INTO SHARED POOL            JDM3
*----------------------------------------------------------------JDM3*
         SPACE 1                                                 JDM3
         DS    0F                                                JDM3
CALL3    DS    0CL8                                              JDM3
         DS    F                   A(VDEL)                       JDM3
         DS    F                   A(VARIABLE NAME+X'80000000)   JDM3
         SPACE 1                                                 JDM3
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IEESMCA                                                 JDM1
         SPACE 1                                                 JDM1
         CVT   DSECT=YES,LIST=NO                                 JDM1
         END
         TITLE '   J U L S U B   '
*--------------------------------------------------------------------*
*
*        'JULSUB'
*
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. JUNE 4 1976.
*        DATE UPDATED. APRIL 23 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        REMARKS.
*            THIS SUBPROGRAM CONVERTS A DATE FROM ONE FORMAT
*            TO ANOTHER. THE DIFFERENT FORMATS ARE:
*
*            INPUT
*               1   JULIAN       BINARY    F'YYYYDDD'
*               2   STANDARD     BINARY    F'YYYYMMDD'
*               3   JULIAN       PACKED    PL4'YYYYDDDF'
*
*            OUTPUT
*               1   JULIAN       BINARY    F'YYYYDDD'
*               2   STANDARD     BINARY    F'YYYYMMDD'
*               4   STANDARD     8-CHAR    CL8'MM/DD/YY'
*               8   ALPHA        8-CHAR    CL8'03JUN76 '
*              16   PROSE        20-CHAR   CL20'JUNE 3 1976'
*              32   FRSTLAST     BINARY    F'0' 1 - FIRST OF MONTH
*                                               2 - LAST OF MONTH
*              64   WEEKDAYCODE  BINARY    F'0' (SATURDAY)
*             128   WEEKDAY      8-CHAR    CL8'SATURDAY'
*             256   TIME         BINARY    F'100THS SEC SINCE MIDNITE'
*             512   TIME         8-CHAR    CL8'HH:MM:SS'
*
*            INPUT MUST BE EITHER JULIAN OR STANDARD.
*
*            PASS THE FOLLOWING PARAMETERS VIA A LIST OF ADDRESSES
*            POINTED TO BY REGISTER 1
*               1   THE INPUT DATE
*               2   A FULLWORD CONTAINING THE NUMERIC CODE
*                   WHICH DEFINES THE INPUT FORMAT
*               3   THE RECEIVING FIELD FOR OUTPUT
*               4   A FULLWORD CONTAINING THE NUMERIC CODE
*                   WHICH DEFINES THE OUTPUT FORMAT
*               5   A 256 BYTE WORKAREA (ON DOUBLEWORD BOUNDARY)
*            NOTES.
*--------------------------------------------------------------------*
         SPACE 1
INP001   EQU   1
INP002   EQU   2
INP003   EQU   3
OUT001   EQU   1
OUT002   EQU   2
OUT004   EQU   4
OUT008   EQU   8
OUT016   EQU   16
OUT032   EQU   32
OUT064   EQU   64
OUT128   EQU   128
OUT256   EQU   1
OUT512   EQU   2
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
JULSUB   AMODE 24
JULSUB   RMODE 24
JULSUB   CSECT
         SAVE  (14,12),,JULSUB_&SYSDATE._&SYSTIME
         LR    R12,15
         USING JULSUB,R12
         LR    R2,R1
*        GETMAIN R,LV=@DATAL       GET SAVEAREA ADDRESS
         L     R1,16(,R1)          GET 5TH WORD ADDR OF 256 BYTE WORK
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         LR    R1,R2
         USING @DATA,R13
         SPACE 1
*--------------------------------------------------------------------*
*        R2 - ADDRESS OF INPUT DATE
*        R3 - ADDRESS OF FULL WORD WITH OPTION CHOICE 1/2/3
*        R4 - ADDRESS OF RECEIVING FIELD
*        R5 - FULL WORD OF CODE DEFINING OUTPUT FORMAT.
*--------------------------------------------------------------------*
         SPACE 1
         LM    R2,R3,0(R1)         GET INPUT AND DESCRIPTOR
         LM    R4,R5,8(R1)         GET OUTPUT AND DESCRIPTOR
         MVC   INPUT(4),0(R2)      COPY INPUT
         XC    DOUBLE,DOUBLE
         SLR   R14,R14             ZERO R14
         ST    R14,FRSTLAST        INIT VALUE TO ZERO
         ST    R14,TIMEB           INIT VALUE TO ZERO
         CLI   3(R3),INP003        TEST FOR OPT 3, PACKED?
         BNE   INP01               NO - BRANCH
         SPACE 1
*--------------------------------------------------------------------*
*        PROCESS JULIAN PACKED INPUT
*--------------------------------------------------------------------*
         SPACE 1
         ST    R14,DOUBLE          INIT VALUE TO ZERO            Y2K
         MVC   DOUBLE+4(4),INPUT   GET FULL INPUT FIELD
         CVB   R1,DOUBLE
         ST    R1,JB
JULCOMM  EQU   *
         L     R14,DOUBLE+4        SAVE YYYYDDDF                 Y2K
         LH    R1,DOUBLE+4         GET YYYY                      Y2K
         SLL   R1,16               GET YYYY0000                  Y2K
         SRL   R1,12               GET 000YYYY0                  Y2K
         ST    R1,DOUBLE+4         STORE BACK 000YYYY0           Y2K
         OI    DOUBLE+7,X'0F'      SET SIGN                      Y2K
         CVB   R1,DOUBLE
         ST    R1,YYYYB
*        CH    R1,=H'99'                                         Y2K
*        BH    *+8                                               Y2K
*        AH    R1,=H'1900'                                       Y2K
         ST    R1,CENTB
         UNPK  YYYYC,DOUBLE+5(3)   SAVE YYYY CHAR
         MVC   YYC,YYYYC+2
         SPACE 1
         ST    R14,DOUBLE+4        RESTORE 00YYDDDF
         XC    DOUBLE(6),DOUBLE    00YYDDDF TO 0000DDDF
         OI    DOUBLE+7,X'0F'      SET SIGN
         UNPK  DDDC,DOUBLE+4(4)    SAVE DDD CHAR
         CVB   R1,DOUBLE           CONVERT DDD TO BINARY
         ST    R1,DDDB             SAVE DDD BINARY
         SPACE 1
         BAL   R9,TODD
         BAL   R9,TOSB
         BAL   R9,TOMON
         BAL   R9,TOPROSE
         BAL   R9,TOWEEK
         BAL   R9,TOTIME
         BAL   R9,OUTPUT
         B     EXIT0
         SPACE 1
INP01    EQU   *
         CLI   3(R3),INP001        INPUT JULIAN BINARY?
         BNE   INP02               NO - BRANCH
         L     R1,INPUT            GET BINARY YYYYDDD
         LTR   R1,R1               ZERO?
         BNZ   INP01A              NO - BRANCH
         TIME  BIN
         ST    R0,TIMEB            SAVE TIME
         SLR   R0,R0
         STM   R0,R1,DOUBLE
         AP    DOUBLE+4(4),=PL4'1900000'                         Y2K
         CVB   R1,DOUBLE
         B     INP01B
         SPACE 1
INP01A   CVD   R1,DOUBLE           TO DECIMAL
INP01B   ST    R1,JB
         B     JULCOMM             PROCEED AS IF INP003
         SPACE 1
*--------------------------------------------------------------------*
*        CONVERT JULIAN DATE TO MONTH-DAY-YEAR
*
*            INPUT  - YYYYB AND DDDB   (ALSO YYC)
*
*            OUTPUT - MMB AND DDB, MMC AND DDC, FRSTLAST
*--------------------------------------------------------------------*
         SPACE 1
TODD     EQU   *
         MVC   DPM(26),DAYSPMON
         TM    YYYYB+3,B'00000011' IS YEAR A MULTIPLE OF 4?
         BNZ   DPM365              NO - BRANCH
         CLC   YYC,=C'00'          DIVISIBLE BY 100?
         BNE   DPM366              NO - BRANCH
         L     R15,CENTB
         SLR   R14,R14
         D     R14,=F'400'
         LTR   R14,R14             EVENLY DIVISIBLE BY 400?
         BNZ   DPM365              NO - NOT A LEAP YEAR
DPM366   EQU   *
         MVI   DPM+3,29            CHANGE FEB TO 29 DAYS
DPM365   EQU   *
         LA    R14,2               INDEX FOR DPM
         LR    R0,R14              INDEX INCREMENT
         L     R1,DDDB             DAY OF YEAR
DPMLOOP  EQU   *
         CH    R1,DPM-2(R14)       DAY LESS THAN OR EQ ENTRY?
         BE    DPMEND              EQUAL - BRANCH
         BL    DPMWIN              LESS - BRANCH
         SH    R1,DPM-2(R14)       NO, SUBTRACT ENTRY FROM DAY
         ALR   R14,R0              ADD 2 TO INDEX
         B     DPMLOOP             LOOP
         SPACE 1
DPMEND   EQU   *
         MVI   FRSTLAST+3,2        LAST DAY OF MONTH
         B     DPMCOMM
         SPACE 1
DPMWIN   EQU   *
         CH    R1,=H'1'            FIRST OF MONTH?
         BNE   DPMCOMM             NO - BRANCH
         MVI   FRSTLAST+3,1        FIRST DAY OF MONTH
DPMCOMM  EQU   *
         SRL   R14,1               HALVE INDEX TO GET MM
         ST    R1,DDB              SAVE DD BINARY
         CVD   R1,DOUBLE           CONVERT TO PACKED
         OI    DOUBLE+7,X'0F'      SET SIGN
         UNPK  DDC,DOUBLE+6(2)     SAVE DD CHAR
         ST    R14,MMB             SAVE MM BINARY
         CVD   R14,DOUBLE          CONVERT TO PACKED
         OI    DOUBLE+7,X'0F'      SET SIGN
         UNPK  MMC,DOUBLE+6(2)     SAVE MM CHAR
         MVI   SLASH1,C'/'
         MVI   SLASH2,C'/'
         BR    R9
         SPACE 1
*--------------------------------------------------------------------*
*        CONVERT MONTH NUMBER TO MONTH NAME
*
*           INPUT  - MMB     (ALSO DDC AND YYC FOR MOVE)
*
*           OUTPUT - MONTH AND ALPHA
*--------------------------------------------------------------------*
         SPACE 1
TOMON    EQU   *
         L     R15,MMB
         MH    R15,=H'9'           MULT BY 9
         LA    R15,ALPHAMON-9(R15) ADDRESS OF ENTRY
         MVC   MONTH,0(R15)        SAVE PROSE MONTH
         MVC   ALPHA+2(3),0(R15)   SAVE ALPHA MONTH
         MVC   ALPHA(2),DDC
         MVC   ALPHA+5(2),YYC
         MVI   ALPHA+7,C' '
         BR    R9
         SPACE 1
*--------------------------------------------------------------------*
*        BUILD PROSE DATE
*
*           INPUT  - MONTH, DDC, YYYYC
*--------------------------------------------------------------------*
         SPACE 1
TOPROSE  EQU   *
         TM    3(R5),OUT016
         BZR   R9
         MVI   PROSE,C' '
         MVC   PROSE+1(L'PROSE-1),PROSE
         MVC   PROSE(9),MONTH
         LA    R1,PROSE+9
PROSE01  EQU   *
         CLI   0(R1),C' '          BLANK?
         BNE   PROSE02             NO - FOUND LAST LETTER
         BCT   R1,PROSE01          BACK UP AND BRANCH
PROSE02  EQU   *
         MVC   2(2,R1),DDC
         CLI   2(R1),C'0'          LEADING ZERO?
         BNE   PROSE03             NO - BRANCH
         MVC   2(1,R1),3(R1)       YES - SHIFT
         MVI   3(R1),C' '
         BCTR  R1,0
PROSE03  EQU   *
         MVI   4(R1),C','          COMMA AFTER DAY
         LA    R1,1(,R1)           ADD 1 FOR COMMA
         MVC   5(4,R1),YYYYC
*        CLC   5(2,R1),=C'00'                                    Y2K
*        BNE   *+10                                              Y2K
*        MVC   5(2,R1),=C'19'                                    Y2K
         BR    R9
         SPACE 1
*--------------------------------------------------------------------*
*        INPUT IS YYYY/MM/DD BINARY
*--------------------------------------------------------------------*
         SPACE 1
INP02    EQU   *
         L     R1,INPUT
         CVD   R1,DOUBLE           GET 0000000Y YYYMMDDF
         LM    R14,R15,DOUBLE
         NC    DOUBLE,=X'0000000000000FFF' ISOLATE 00000DDF
         CVB   R1,DOUBLE
         ST    R1,DDB
         OI    DOUBLE+7,X'0F'
         UNPK  DDC,DOUBLE+6(2)
*
         STM   R14,R15,DOUBLE
         NC    DOUBLE,=X'00000000000FF00F' ISOLATE 000MM00F
         L     R1,DOUBLE+4
         SRL   R1,8
         ST    R1,DOUBLE+4
         OI    DOUBLE+7,X'0F'
         CVB   R1,DOUBLE
         CH    R1,=H'12'
         BNH   *+8
         LA    R1,13               SET ALL BAD MONTHS TO 13
         ST    R1,MMB
         UNPK  MMC,DOUBLE+6(2)
*
         SRDL  R14,4               GET YYYYMMDD
         SLR   R14,R14             GET 00000000 IN R14
         SRL   R15,12              GET 000YYYYM IN R15
         STM   R14,R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         CVB   R1,DOUBLE
         ST    R1,YYYYB
*        CH    R1,=H'99'                                         Y2K
*        BH    *+8                                               Y2K
*        AH    R1,=H'1900'                                       Y2K
         ST    R1,CENTB
         UNPK  YYYYC,DOUBLE+5(3)
         MVC   YYC,YYYYC+2
         MVI   SLASH1,C'/'
         MVI   SLASH2,C'/'
*
         BAL   R9,TOSB
         BAL   R9,TOJUL
         BAL   R9,TOMON
         BAL   R9,TOPROSE
         BAL   R9,TOWEEK
         BAL   R9,TOTIME
         BAL   R9,OUTPUT
         B     EXIT0
         SPACE 1
*--------------------------------------------------------------------*
*        CONVERT M/D/Y TO JULIAN
*
*           INPUT  - MMB, DDB, YYYYB
*
*           OUTPUT - DDDB, DDDC, JB
*--------------------------------------------------------------------*
         SPACE 1
TOJUL    EQU   *
         MVC   DPM(26),DAYSPMON
         TM    YYYYB+3,B'00000011' IS YEAR A MULTIPLE OF 4?
         BNZ   JUL365              NO - BRANCH
         CLC   YYC,=C'00'          DIVISIBLE BY 100?
         BNE   JUL366              NO - BRANCH
         L     R15,CENTB
         SLR   R14,R14
         D     R14,=F'400'
         LTR   R14,R14             EVENLY DIVISIBLE BY 400?
         BNZ   JUL365              NO - NOT A LEAP YEAR
JUL366   EQU   *
         MVI   DPM+3,29             CHANGE FEB TO 29 DAYS
JUL365   EQU   *
         L     R15,DDB              GET DAYS IN CURRENT MONTH
         LR    R0,R15               SAVE IT TO COMPARE FOR LAST DAY
         L     R14,MMB              GET CURRENT MONTH
         BCTR  R14,0                GET NO. OF COMPLETED MONTHS
         LA    R1,DPM
         LTR   R14,R14              JANUARY?
         BNP   JULEND               YES - BRANCH
         B     *+8
JULOOP   EQU   *
         LA    R1,2(,R1)            POINT TO NEXT MONTH
         AH    R15,0(,R1)           ADD DAYS IN MONTH TO TOTAL
         BCT   R14,JULOOP
JULEND   EQU   *
         CH    R0,0(,R1)            LAST DAY OF MONTH?
         BNE   *+8                  NO
         MVI   FRSTLAST+3,2         YES
         CH    R0,=H'1'             FIRST DAY OF MONTH?
         BNE   *+8                  NO
         MVI   FRSTLAST+3,1         YES
         ST    R15,DDDB             SAVE DDD
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'       SET SIGN
         UNPK  DDDC,DOUBLE+4(4)     SAVE DDD CHAR
         MVC   JC(4),YYYYC                                       Y2K
         PACK  DOUBLE,JC                                         Y2K
         CVB   R1,DOUBLE
         ST    R1,JB
         BR    R9
         SPACE 1
*
*
*
         SPACE 1
TOSB     EQU   *
         MVC   WORK(4),YYYYC
         MVC   WORK+4(2),MMC
         MVC   WORK+6(2),DDC
         PACK  DOUBLE,WORK(8)
         CVB   R1,DOUBLE
         ST    R1,SB
         BR    R9
         SPACE 1
*--------------------------------------------------------------------*
*        GET DAY OF WEEK
*
*            INPUT  - MMB, DDB, YYYYB
*
*            OUTPUT - WEEKB, WEEKC
*
*            N = D + 2M + 3(M+1)/5 + Y + Y/4 - Y/100 + Y/400 + 2
*
*               WHERE M = 3-14 (JAN,FEB ARE 13,14 OF Y-1)
*
*               N/7 LEAVES REMAINDER 0-6, 0 INDICATING SATURDAY
*--------------------------------------------------------------------*
         SPACE 1
TOWEEK   EQU   *
         TM    3(R5),OUT064+OUT128
         BZR   R9
         L     R1,DDB              SET N = D
         L     R15,CENTB
         L     R14,MMB
         CH    R14,=H'2'           JAN OR FEB?
         BH    WEEKMMOK
         BE    WEEKFEB
         LA    R14,13              SET M=13
         B     WEEKYMIN
         SPACE 1
WEEKFEB  EQU   *
         LA    R14,14              SET M=14
WEEKYMIN EQU   *
         BCTR  R15,0               SET Y = Y-1
WEEKMMOK EQU   *
         LR    R0,R14              COPY M
         ALR   R0,R0               GET 2M
         ALR   R1,R0               SET N = N + 2M
         LR    R0,R15              SAVE REDEFINED Y
         SPACE 1
         LA    R14,1(,R14)         GET M+1
         MH    R14,=H'3'           GET 3(M+1)
         SRDL  R14,32              SHIFT INTO R15, ZERO R14
         D     R14,=F'5'           GET 3(M+1)/5 IN R15
         ALR   R1,R15              SET N = N + 3(M+1)/5
         SPACE 1
         LR    R15,R0              GET Y
         ALR   R1,R15              SET N = N + Y
         SLR   R14,R14             ZERO R14
         D     R14,=F'4'           GET Y/4
         ALR   R1,R15              SET N = N + Y/4
         SPACE 1
         LR    R15,R0              GET Y
         SLR   R14,R14             ZERO R14
         D     R14,=F'100'         GET Y/100
         SLR   R1,R15              SET N = N - Y/100
         SPACE 1
         LR    R15,R0              GET Y
         SLR   R14,R14             ZERO R14
         D     R14,=F'400'         GET Y/400
         ALR   R1,R15              SET N = N + Y/400
         LA    R15,2               GET 2
         ALR   R1,R15              SET N = N + 2
         SLR   R0,R0               ZERO R0
         D     R0,=F'7'            SET N = N/7
         ST    R0,WEEKB            SAVE REMAINDER
         LR    R1,R0
         MH    R1,=H'9'
         LA    R14,WEEKDAYS(R1)    POINT TO NAME
         MVC   WEEKC(9),0(R14)     MOVE NAME
         MVC   WEEKC+9(3),WEEKBLNK PLUS 3 BLANKS
         BR    R9
         SPACE 1
*--------------------------------------------------------------------*
*        CONVERT TIMEB TO TIMEC
*
*           DIVIDE BY 10,10,10,6,10,6,10,6
*--------------------------------------------------------------------*
         SPACE 1
TOTIME   EQU   *
         TM    2(R5),OUT512
         BNOR  R9
         L     R15,TIMEB
         LA    R6,10               INITIAL DIVISOR
         LA    R7,12               SET DIVISOR MASK
         LA    R8,32               SHIFT COUNT
DECLOOP  EQU   *
         SR    R14,R14
         DR    R14,R6
         LR    R0,R14              SAVE REMAINDER
         SRDL  R0,4                SHIFT INTO R1
         SH    R8,=H'4'            DECREMENT SHIFT COUNT
         LTR   R15,R15             QUOTIENT ZERO?
         BZ    TOTIMX              YES - BRANCH
         CL    R8,=F'24'           IF COUNT LT 24
         BNL   DECLOOP             NO - BRANCH
         XR    R6,R7               10 TO 6 TO 10 ETC
         B     DECLOOP
         SPACE 1
TOTIMX   EQU   *
         SRL   R1,0(R8)            SHIFT REMAINING BITS
         SRL   R1,4                GET 0HHMMSST
         ST    R1,DOUBLE
         OI    DOUBLE+3,X'0F'
         MVC   DOUBLE+6(10),=X'402120204B20204B2020'
         ED    DOUBLE+6(10),DOUBLE
         MVC   TIMEC,DOUBLE+8
         BR    R9
         SPACE 1
*---------------------------------------------------------------------*
*        FORMAT THE OUTPUT AREA BASED UPON 4TH WORD IN PARM LIST.
*---------------------------------------------------------------------*
         SPACE 1
OUTPUT   EQU   *
         LR    R1,R4               GET THE NUMBER
         TM    3(R5),OUT001        IS IT 1 - JULIAN BINARY F"YYYYDDD"
         BZ    *+14
         MVC   0(4,R1),JB          4 CHARACTERS LONG
         LA    R1,4(,R1)
         TM    3(R5),OUT002        IS IT 2 - STD BINARY F"YYYYMMDDD"
         BZ    *+14
         MVC   0(4,R1),SB          4 CHARACTERS LONG
         LA    R1,4(,R1)
         TM    3(R5),OUT004        IS IT 4 - STD CHAR "MM/DD/YY"
         BZ    *+14
         MVC   0(8,R1),SC          8 CHARACTERS LONG
         LA    R1,8(,R1)
         TM    3(R5),OUT008        IS IT 8 - ALPHA "03JUN76 "
         BZ    *+14
         MVC   0(8,R1),ALPHA       8 CHARACTERS LONG
         LA    R1,8(,R1)
         TM    3(R5),OUT016        IS IT 16 - 20CHAR "JUNE 3 1976  "
         BZ    *+14
         MVC   0(L'PROSE,R1),PROSE
         LA    R1,L'PROSE(,R1)
         TM    3(R5),OUT032        IS IT 32 - FIRST/LAST  ( 0 / 1 )
         BZ    *+14
         MVC   0(4,R1),FRSTLAST    4 BYTES
         LA    R1,4(,R1)
         TM    3(R5),OUT064        IS IT 64 - WEEKDAY CODE 0-SAT/6-FRI
         BZ    *+14
         MVC   0(4,R1),WEEKB       4 BYTES
         LA    R1,4(,R1)
         TM    3(R5),OUT128        IS IT 128 - WEEKDAY NAME
         BZ    *+14
         MVC   0(12,R1),WEEKC      12 BYTES
         LA    R1,12(,R1)
         TM    2(R5),OUT256        IS IT 256 - TIME BINARY
         BZ    *+14
         MVC   0(4,R1),TIMEB       4 BYTES
         LA    R1,4(,R1)
         TM    2(R5),OUT512        IS IT 512 - TIME 8 CHAR HH:MM:SS
         BZ    *+14
         MVC   0(8,R1),TIMEC       8 BYTES
         LA    R1,8(,R1)
         BR    R9
         SPACE 1
EXIT0    SR    R15,R15
EXIT     LR    R1,R13
         L     R13,4(,R13)
         ST    R15,16(,R13)
*        FREEMAIN R,A=(1),LV=@DATAL  (COMMENT)
         LM    R14,R12,12(R13)
         BR    R14
         SPACE 1
*--------------------------------------------------------------------*
*        CONSTANTS
*--------------------------------------------------------------------*
         SPACE 1
DAYSPMON DC    H'31,28,31,30,31,30,31,31,30,31,30,31,999'
ALPHAMON DC    CL36'JANUARY  FEBRUARY MARCH    APRIL    '
         DC    CL36'MAY      JUNE     JULY     AUGUST   '
         DC    CL36'SEPTEMBEROCTOBER  NOVEMBER DECEMBER '
         DC    CL09'UNKNOWN  '
WEEKDAYS DC    CL36'SATURDAY SUNDAY   MONDAY   TUESDAY  '
         DC    CL27'WEDNESDAYTHURSDAY FRIDAY   '
WEEKBLNK EQU   WEEKDAYS+15         3 BLANKS
         LTORG
         SPACE 1
*--------------------------------------------------------------------*
*        DSECTS
*--------------------------------------------------------------------*
         SPACE 1
@DATA    DSECT
         DS    18F
INPUT    DS    CL8
DOUBLE   DS    D
WORK     DS    8C
SC       DS    0CL8
MMC      DS    CL2
SLASH1   DS    C
DDC      DS    CL2
SLASH2   DS    C
YYC      DS    CL2
YYYYC    DS    CL4
DDB      DS    F
MMB      DS    F
YYYYB    DS    F
CENTB    DS    F
DDDB     DS    F
JB       DS    F
SB       DS    F
WEEKB    DS    F
FRSTLAST DS    F
TIMEB    DS    F
TIMEC    DS    CL8
JC       DS    0CL7                                              Y2K
         DS    CL4                                               Y2K
DDDC     DS    CL3
MONTH    DS    CL9
ALPHA    DS    0CL8
         DS    CL2
MON      DS    CL3
         DS    CL2
         DS    CL1                 BLANK FILLER LAST BYTE OF ALPHA
WEEKC    DS    CL12
PROSE    DS    CL20
DPM      DS    13H
@DATAL   EQU   *-@DATA
         SPACE 1
         END
