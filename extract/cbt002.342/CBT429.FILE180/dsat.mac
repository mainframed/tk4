DSAT     TITLE 'DISPLAY DATA SET ATTRIBUTES'
***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1988 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.                                     *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*                                                                     *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1, with DFP 3.1),  *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc-oberon!LDW (last resort)                           *
*                                                                     *
*          (213) 743-5391 (direct -- 11 am to 7 pm Pacific time)      *
*          (213) 743-2957 (msgs)                                      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, or 714.  Sorry.                                       *
*                                                                     *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*                              D S A T                                *
*                                                                     *
*             TSO COMMAND TO DISPLAY DATASET ATTRIBUTES               *
*                                                                     *
*      THIS COMMAND LISTS THE FOLLOWING ATTRIBUTES OF ANY DATA SET:   *
*                                                                     *
*        TYP          -  TYPE OF SPACE ALLOCATION (CYL/TRK/REC)       *
*        ALLOC        -  # OF CYL.TRK ALLOCATED TO DATA SET           *
*        USED         -  # OF CYL.TRK USED                            *
*        XT           -  # OF EXTENTS USED                            *
*        SEC          -  SECONDARY ALLOCATION SIZE                    *
*        RF           -  RECORD FORMAT (RECFM)                        *
*        BLOCK        -  BLOCKSIZE                                    *
*        LRECL        -  LOGICAL RECORD LENGTH                        *
*        ORG          -  DATASET ORGANIZATION (DSORG)                 *
*        C/DATE       -  CREATION DATA OF DATA SET                    *
*        L/USED       -  LAST OPEN DATE OF DATA SET                   *
*        VOLUME       -  VOLUME CONTAINING DATA SET                   *
*        DEVICE       -  DEVICE TYPE                                  *
*        P            -  PROTECTION FLAG (W = WRITE PROTECTED,        *
*                                         R = READ  PROTECTED,        *
*                                         A = RACF  PROTECTED)        *
*                                                                     *
*       DSAT    'DSNAME' VOLSER(DISK VOLUME SERIAL)  EXTENTS          *
*               LIST/NOLIST  SAVE/NOSAVE  HEADER/NOHEADER             *
*                                                                     *
*       DSAT ALWAYS SETS THE COMPLETION CODE (&LASTCC IN A CLIST) AS  *
*       FOLLOWS:                                                      *
*                                                                     *
*       LASTCC     REASON                                             *
*                                                                     *
*          0       DATASET FOUND                                      *
*          1       DATASET FOUND BUT COULD NOT 'SAVE'; NOT IN CLIST   *
*          2       DATASET FOUND BUT COULD NOT 'SAVE'; NAME NOT FOUND *
*          4       CVOL NOT MOUNTED                                   *
*          8       DSNAME NOT FOUND                                   *
*         12       INDEX NAME SPECIFIED                               *
*         16       DATA SET FOUND AT LOWER LEVEL                      *
*         20       DSNAME HAS SYNTAX ERROR                            *
*         24       PERMANENT I/O ERROR                                *
*         28       TTR OUTSIDE OF SYSCTLG                             *
*         32       INVALID LOCATE WORK AREA POINTER                   *
*         36       VOLUME NOT MOUNTED                                 *
*         40       DSNAME NOT ON VOLUME SPECIFIED                     *
*         44       INVALID OBTAIN WORK AREA POINTER                   *
*         48       CCHH NOT IN VTOC                                   *
*         52       VOLUME SPECIFIED WAS NOT ONLINE                    *
*         56       PARSE ERROR                                        *
*         60       DATA SET NOT ON DIRECT ACCESS DEVICE               *
*                  (MESSAGE WILL BE 'SAVED' IF REQUESTED)             *
*                                                                     *
*           (RETURN CODES 04-32 ARE FROM LOCATE, 36-52 ARE OBTAIN'S   *
*            RC + 32)                                                 *
*                                                                     *
*                                                                     *
*       REQUIRED    -  'DSNAME'                                       *
*                                                                     *
*       ALIAS       -  AT                                             *
*                                                                     *
*  OPERANDS  -                                                        *
*                                                                     *
*       'DSNAME'  NAME OF THE DATA SET FOR WHICH THE LIST OF          *
*                 ATTRIBUTES IS DESIRED.                              *
*                                                                     *
*       VOLSER    DISK VOLUME SERIAL NUMBER WHERE THE DATASET RESIDES.*
*                 THIS PARAMETER IS OPTIONAL; IF NOT SPECIFIED THE    *
*                 SYSTEM CATALOG IS SEARCHED.                         *
*                                                                     *
*       FULL      A SECOND DATA LINE WILL BE PRINTED CONTAINING THE   *
*       (ALL)     FOLLOWING INFORMATION:                              *
*                                                                     *
*                 DSNAME     -  FULL DATASET NAME                     *
*                 E/DATE     -  EXPIRATION DATE                       *
*                 KEY        -  KEYLENGTH                             *
*                 RKP        -  RELATIVE KEY POSITION                 *
*                 M          -  MODIFICATION INDICATOR                *
*                 P          -  PASSWORD FLAG IF RACF PROTECTED       *
*                                                                     *
*       EXTENTS   ADDITIONAL DATA LINES WILL BE PRINTED GIVING THE    *
*                 FOLLOWING INFORMATION FOR EACH EXTENT OF THE DS:    *
*                                                                     *
*                 EXTENT     -  EXTENT SEQUENCE NUMBER (FROM 0)       *
*                 START/CCHH -  STARTING CCHH OF EXTENT (HEX)         *
*                 S/TRK      -  STARTING TRACK OF EXTENT (DECIMAL)    *
*                 END/CCHH   -  ENDING CCHH OF EXTENT (HEX)           *
*                 E/TRK      -  ENDING TRACK OF EXTENT (DECIMAL)      *
*                 LENGTH     -  LENGTH OF OF EXTENT (DECIMAL)         *
*                                                                     *
*       LIST      THESE KEYWORDS ENABLE AND DISABLE THE LISTING OF    *
*       NOLIST    ALL MESSAGES. ('LIST' IS THE DEFAULT) IF 'NOLIST'   *
*                 IS SPECIFIED YOU WILL SEE NO OUTPUT ON YOUR CRT,    *
*                 HOWEVER THE VARIABLE '&LASTCC' WILL BE SET.         *
*                 ('NOLIST' ALSO DISABLES THE PRINTING OF ALL ERROR   *
*                 MESSAGES!)                                          *
*                                                                     *
*       SAVE      THESE KEYWORDS CONTROL THE 'CLIST INTERFACE'. IF    *
*       NOSAVE    'SAVE' IS SPECIFIED WHEN DSAT IS RUN INSIDE A CLIST *
*                 ALL THE DATA THAT DSAT GATHERS WILL BE SAVED INTO   *
*                 THE CLIST VARIABLE &SYSDVAL. THIS COULD THEN BE     *
*                 PARSED INTO SEPARATE VARIABLE NAMES USING THE       *
*                 'READDVAL' FUNCTION.   ALSO, EACH DATA ITEM IS      *
*                 PLACED IN A UNIQUELY NAMED CLIST VARIABLE, IF IT    *
*                 EXISTS.                                             *
*                                                                     *
*       JULIAN    ALL DATES ARE TO BE DISPLAYED IN "JULIAN" FORMAT    *
*                 INSTEAD OF STANDARD MM/DD/YY.                       *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*  Updates:                                                           *
*    19Jul91 U025 LDW  Display some TMS fields for tape datasets      *
*                      Change SET macro to use new SET subroutine     *
*                      Change some DC's to literals (not flagged)     *
*    09Dec90 U024 LDW  Support ASM2 3.1.0 (last mod time was moved    *
*                         to not conflict with new SMS fields)        *
*    20Sep89 U023 LDW  Add extent type indicator to each extent       *
*    11Sep89 U022 LDW  Add TRKS keyword                               *
*    16Jan88 U021 LDW  Add TRBAL & OPTCD fields to FULL display       *
*    25Nov87 U020 SDM  Do UCB scan with MVS/SP service 'IOSVSUCB'     *
*    06Jun87 U019 LDW  Fix minor bug (garbage byte at end of line2)   *
*    25May87 U018 LDW  Add &DSATLMDATE, &DSATLMTIME                   *
*    09Feb87 U017 LDW  SHOW ASM2 FIELDS ON "FULL" DISPLAY             *
*                      ELIMINATE USE OF "LC" MACRO                    *
*                      MOVE DSNAME TO SEPARATE LINE (FIRST LINE) IF   *
*                         "FULL" DISPLAY BEING DONE                   *
*    22May85 U016 LDW  SET &DSATVOLUME, EVEN IF 'VOLUME NOT           *
*                         MOUNTED' (THIS APPLIES TO 'MIGRAT')         *
*                      FIX BUG IN WARNING MESSAGES                    *
*    18Oct84 U015 LDW  HANDLE DATASETS WITH MORE THAN 16 EXTENTS      *
*                         (DF/EF ALLOWS 125 EXTENTS, VIA MULTIPLE     *
*                         FMT3 DSCB'S)                                *
*                      USE OSENTER                                    *
*                      SOME OTHER MISC CLEANUP                        *
*    15May84 U014 LDW  DISPLAY DSORG OF 'EF' IF DF/EF DATASET,        *
*                         AND 'BCS' IF AN ICF CATALOG                 *
*    08Aug83 U013 LDW  ALWAYS RETURN TRUE DSNAME TO CLIST (IF GIVEN   *
*                         DSN IS AN ALIAS OR GDG NAME, AND THE DSN    *
*                         DOES NOT ACTUALLY EXIST ON THE VOLUME,      *
*                         IT'S STILL USEFUL TO GET THE TRUE DSNAME)   *
*                      ADD DEVICETYPES 3375, 3380                     *
*    28Dec81 U012 LDW  ADD CLIST INTERFACE (LIFTED FROM SCE'S VERS)   *
*                      UPDATE MESSAGES, AND CHANGE TO LOWER CASE      *
*                      HANDLE GDG DSNAMES (KLUDGE AROUND PARSE)       *
*                      MISC CLEANUP                                   *
*                      FIX OBSCURE BUG AFTER "PARSE COULDN'T" MSG     *
*                      ADD "JDATE" KEYWORD TO DISPLAY JULIAN DATES    *
*    20Mar81 U011 LDW  DISPLAY EXTENTS IN DECIMAL RELATIVE TRACK      *
*                      FIX FOR EXPDT > 99.365                         *
*    14Mar81 U010 LDW  ADD "EXTENTS" KEYWORD                          *
*                      FIX FOR NON DIRECT ACCESS DEV TYPE DISPLAY     *
*    25Jan81 U009 LDW  SHOW DSORG=VS; FIX DSORG=..U CHECK             *
*    26Sep80 U008 LDW  FLIP RACF & PSWD FIELDS IF RACF PROTECTED      *
*    15Aug80 U007 SDM  CHANGE SEC OVERFLOW FROM '+++' TO 'BIG'        *
*    10Jun80 U006 LDW  USE DS1SCALO AS 3 BYTE FIELD, NOT 2 BYTES      *
*                      SHOW OVERFLOW IN SECONDARY FIELD               *
*                      FIX BASE REGISTER PROBLEM DUE TO PGM GROWTH    *
*    20May80 U005 LDW  ADD KEYWORD "FULL" TO DISPLY SOME MORE ATTRS   *
*    07Feb80 U004 LDW  ADD KEYWORD "VOLUME"                           *
*         80 U003 LDW  DISPLAY SECONDARY SPACE ALLOCATION             *
*         80 U002 LDW  SHOW LAST REF'D DATE (CHNG TO USE IECSDSL1)    *
*         77 U001 LDW  ADD KEYWORD "NOHEAD" AND DSN-LIST CAPABILITY   *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*     REGISTER USAGE                                                  *
*   R0  LINKAGE REGISTER         R8   INTERNAL LINKAGE REGISTER       *
*   R1                           R9   SECOND PROGRAM BASE REGISTER    *
*   R2                           R10  BASE REGISTER IOPL              *
*   R3                           R11  BASE REGISTER FOR PPL           *
*   R4                           R12  PROGRAM BASE REGISTER           *
*   R5                           R13  WORK AREA BASE REGISTER         *
*   R6                           R14  LINKAGE REGISTER                *
*   R7                           R15  LINKAGE REGISTER AND RC         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         MACRO                                                     U012
.* &NFS  SET   &VARNAME,&VALUE,&VALLEN,&NOCLIST=                   U012
&NFS     SET   &VARNAME,&VALUE,&VALLEN                             U025
         LCLA  &A
.*U025   LCLC  &NOPE
.*&NOPE  SETC  'IHB&SYSNDX'
.*U025   AIF   ('&NOCLIST' EQ '').OK
.*&NOPE  SETC  '&NOCLIST'
.* .OK   ANOP
.* &NFS  TM    FLAG1,F1SAVE             IN "SAVE" MODE?
.*U025   BNO   &NOPE                    NO - SKIP
&A       SETA  K'&VARNAME               GET LENGTH OF VARIABLE NAME
&NFS     MVC   NAME(2),=H'&A'           SET LENGTH OF VARIABLE NAME
         MVC   NAME+2(&A),=C'&VARNAME'  SET NAME OF VARIABLE
         MVC   VALUE(2),=Y(&VALLEN)     SET LENGTH OF VALUE        U017
         MVC   VALUE+2(&VALLEN),&VALUE  SET VALUE
.*U025   LA    1,SETPARM                -> PARM LIST
.******* LINK  EP=CLISTSET
.*U025   L     15,CLISTSET              -> CLIST INTERFACE SUBROUTINE
.*U025   BALR  14,15                    CALL IT
         BAL   14,SET                   invoke CLISTSET helper     U025
.*U025   AIF   ('&NOCLIST' NE '').MEXIT
.*&NOPE  EQU   *
.MEXIT   SPACE 2
         MEND
         SPACE 2
         COPY  @GLOBALS                 Installation definitions   U020
         EJECT
DSAT     OSENTER  BASE2=R9,GETMAIN=(WORKLEN,WORKD),PARMREG=R2,     U015$
               EXIT=LEAVE,RCLOC=RC                                 U015
LINK     EQU   R8                                                  U015
         MVI   BLANKS,C' '              INIT...                    U006
         MVC   BLANKS+1(L'BLANKS-1),BLANKS  ...                    U006
         XC    RC,RC                                               U012
*---------------------------------------------------------------------*
*                                                                     *
*                      CONTROL BLOCK SETUP                            *
*                                                                     *
*---------------------------------------------------------------------*
*--------SET UP BASE REGISTERS FOR CONTROL BLOCKS
         USING CPPL,R2
         LA    R11,PPLAREA
         USING PPL,R11
         LA    R10,IOPLAREA
         USING IOPL,R10
*--------INITIALIZE PPL AND IOPL
         L     R1,CPPLUPT               USER PROFILE TABLE ADDRESS
         ST    R1,IOPLUPT
         ST    R1,PPLUPT
         L     R1,CPPLECT               ENVIRONMENT CONTROL TABLE ADDR
         ST    R1,IOPLECT
         ST    R1,ECTADDR                                          U012
         ST    R1,PPLECT
         L     R1,ECB                   EVENT CONTROL BLOCK ADDRESS
         ST    R1,IOPLECB
         ST    R1,PPLECB
         LA    R1,PUTLNMFL              PUTLINE PARAMETER BLOCK ADDRESS
         ST    R1,IOPLIOPB
         L     R1,=V(PCL)               PARAMETER CONTROL LIST ADDRESS
         ST    R1,PPLPCL
         LA    R1,PARS#ANS              ANSWER LIST (PDL) ADDRESS
         ST    R1,PPLANS
         L     R1,CPPLCBUF              COMMAND BUFFER ADDRESS
         ST    R1,PPLCBUF
         LA    R0,VALUE                                            U012
         ST    R0,VALADDR                                          U012
         LA    R0,NAME                                             U012
         ST    R0,NAMADDR                                          U012
         DROP  R2                       DONE WITH CPPL             U006
         LA    R1,DS1FMTID              -> FMT1 DSCB WORK AREA     U015
         ST    R1,CAM#SRCH+12           STORE ADDR IN CAMLST       U015
*---------------------------------------------------------------------*
*                                                                     *
*                      PROCESS COMMAND OPERANDS                       *
*                                                                     *
*---------------------------------------------------------------------*
*--------PARSE THE COMMAND
         LA    R1,PPLAREA
         LINK  EP=IKJPARS
         LTR   R15,R15
         BNZ   ERRPARS
         L     R11,PARS#ANS
         USING PDL,R11
         LA    R1,DSN                   INIT                       U001
         ST    R1,DSNPTR                PTR TO FIRST PDL           U001
         CLI   24(R1),X'FF'             IS THIS THE LAST ONE?      U005
         BE    *+8                      YES - SKIP                 U005
         OI    FLAG1,F1DSLIST           NO - SET LIST FLAG         U005
*--------CHECK FOR "NOHEADER" OPTION                               U001
         CLI   P#NOHEAD+1,1             NOHEADER GIVEN?            U001
         BNE   *+8                      NO - SKIP                  U001
         OI    FLAG1,F1NOHEAD           SET FLAG                   U001
*--------CHECK FOR "FULL" OPTION                                   U005
         CLI   P#FULL+1,1               FULL (OR ALL) GIVEN?       U005
         BNE   *+8                      NO - SKIP                  U005
         OI    FLAG2,F2FULL             SET FLAG                   U005
*--------CHECK FOR "EXTENTS" OPTION                                U010
         CLI   P#EXTENT+1,1             EXTENTS GIVEN?             U010
         BNE   *+8                      NO - SKIP                  U010
         OI    FLAG2,F2EXTNTS           SET FLAG                   U010
*--------CHECK FOR "NOLIST" OPTION                                 U012
         CLI   P#NOLIST+1,1             NOLIST GIVEN?              U012
         BNE   *+8                      NO - SKIP                  U012
         OI    FLAG1,F1NOLIST           SET FLAG                   U012
*--------CHECK FOR "SAVE" OPTION                                   U012
         CLI   P#SAVE+1,1               SAVE GIVEN?                U012
         BNE   NO$SAVE                  NO - SKIP                  U012
         OI    FLAG1,F1SAVE             SET FLAG                   U012
         LOAD  EPLOC==CL8'CLISTSET'     LOAD CLIST INTERFACE       U012
         ST    R0,CLISTSET              SAVE ADDRESS               U012
*--------CHECK FOR "JDATE" OPTION                                  U012
NO$SAVE  CLI   P#JDATE+1,0              JDATE GIVEN?               U012
         BE    *+8                      NO - SKIP                  U012
         OI    FLAG1,F1JULDAT           SET FLAG                   U012
*--------CHECK FOR "TRKS" OPTION                                   U022
         CLI   P#TRKS+1,1               TRKS GIVEN?                U022
         BNE   *+8                      NO - SKIP                  U022
         OI    FLAG1,F1TRKS             SET FLAG                   U022
*--------PROCESS "VOLUME" KEYWORD                                  U004
         CLI   P#VOLUME+1,1             GIVEN?                     U004
         BNE   NO$VOL                   NO - SKIP                  U012
         MVC   VOLUME,BLANKS            PREPARE THE FIELD          U012
         L     R14,I#VOLUME             -> PDL                     U004
         LH    R15,I#VOLUME+4           LENGTH                     U004
         BCTR  R15,0                    -1 FOR EX                  U004
         MVC   VOLUME(*-*),0(R14)       << EXECUTED >>             U004
         EX    R15,*-6                  SAVE THE VOLSER            U004
         OI    FLAG1,F1USEVOL           REMEMBER THAT HE TOLD US   U004
         SPACE 2                                                   U012
*--------SET CLIST VARIABLES WITH COLUMN HEADERS IF NECESSARY      U012
NO$VOL   SET   DSATHEADER1,HEADER1+4,80                            U012
         TM    FLAG2,F2FULL             WANT SECOND DATA LINE?     U012
         BNO   NEXT$DSN                 NO - DON'T SEND HDR FOR IT U012
         SET   DSATHEADER2,HEADER2+4,80                            U012
         SET   DSATHEADER3,HEADER3+4,OL@LEN3                       U017
*--------PROCESS NEXT DSNAME
NEXT$DSN MVC   DSNAME(44),BLANKS        BLANK THE DSNAME BUFFER    U001
         LA    R2,DSNAME                LOAD DESTINATION ADDRESS
         L     R3,DSN                   LOAD ADDRESS OF INPUT
         L     R14,DSNPTR               -> PDL FOR DSN             U012
         MVC   DSNPTR,24(R14)           SAVE PTR TO NEXT PDL       U012
         LH    R1,4(,R14)               LOAD LENGTH                U012
         L     R3,0(,R14)               -> DSN                     U012
         BCTR  R1,0                     REDUCE LENGTH BY 1
         EX    R1,MOVENAME              MVC 0(*-*,R2),0(R3)
         LA    R2,1(R1,R2)              -> END OF DATASET NAME     U012
         LH    R1,12(,R14)              GET LENGTH OF MEMBER NAME  U012
         TM    14(R14),X'80'            MEMBER NAME PRESENT?       U012
         BNO   NO$MBR                   NO - SKIP                  U012
         L     R3,8(,R14)               -> MEMBER NAME             U012
         CLI   0(R3),C'#'               WANT A GENERATION?         U012
         BNE   NO$MBR                   NO - IGNORE MEMBER NAME    U012
         MVI   0(R2),C'('               PUT IN STARTING DELIM      U012
         LA    R2,1(,R2)                -> DESTINATION FOR MVC     U012
         EX    R1,MOVENAME              COPY GENERATION NUMBER     U012
         MVI   0(R2),C'-'               CHANGE '#' TO '-'          U012
         LA    R2,1(R1,R2)              -> PAST MEMBER NAME        U012
         MVI   0(R2),C')'               PUT IN TRAILING DELIM      U012
NO$MBR   SET   DSATDSNAME,DSNAME,44     TENTATIVE DSN TO CLIST     U013
*---------------------------------------------------------------------*
*                                                                     *
*                  GET CATALOG AND DSCB INFORMATION                   *
*                                                                     *
*---------------------------------------------------------------------*
*--------DETERMINE VOLUME TYPE IF NOT USING THE CATALOG FOR VOLSER U004
         TM    FLAG1,F1USEVOL           DID HE TELL US WHAT VOL?   U004
         BNO   LOCATE                   NO - GO LOOK IT UP IN CAT  U004
         MVC   SERIAL(6),VOLUME         YES - MOVE HIS TO CATBLOCK U004
         SET   DSATVOLUME,VOLUME,6      AND PASS VOLSER TO CLIST   U016
          AIF   (&@@SPLVL GE 130).IOS010                           U020
         L     R1,16                    -> CVT                     U004
         L     R1,CVTILK2-CVT(,R1)      -> UCB lookup table        U020
         SLR   R15,R15                  Clear for ICM              U020
         B     UCBLOOP                  Ttu next UCB               U020
NEXT$VOL LA    R1,2(,R1)                -> next UCB address        U020
UCBLOOP  CLC   =X'FFFF',0(R1)           END OF TABLE?              U004
         BE    NOTMOUNT                 YES - VOLUME NOT MOUNTED   U004
         ICM   R15,B'0011',0(R1)        -> UCB                     U020
         BZ    NEXT$VOL                 SKIP IT IF DUMMY           U004
         USING UCBCMSEG,R15             UCB common segment         U020
         CLI   UCBTBYT3,UCB3DACC        Direct access?             U020
         BNE   NEXT$VOL                 NO - IGNORE IT             U004
          AGO   .IOS020                                            U020
.IOS010   ANOP                                                     U020
         LA    R1,IOSWORK               -> IOSVSUCB work area      U020
         ST    R1,IOSPARM               -> IOSVSUCB work area      U020
         LA    R1,IOSDVCLS              -> IOSVSUCB device class   U020
         ST    R1,IOSPARM+4             -> IOSVSUCB device class   U020
         LA    R1,IOSAUCB               -> IOSVSUCB return -> UCB  U020
         ST    R1,IOSPARM+8             -> IOSVSUCB return -> UCB  U020
         OI    IOSPARM+8,X'80'          Flag end of parms          U020
         XC    IOSWORK,IOSWORK          Clear IOSVSUCB work area   U020
         MVI   IOSDVCLS,UCB3DACC        Limit scan to DASD         U020
         LA    R1,IOSPARM               -> IOSVSUCB parameters     U020
NEXT$VOL L     R15,CVTPTR               -> CVT                     U020
         L     R15,CVTUCBSC-CVT(,R15)   -> IOSVSUCB routine        U020
         BALR  R14,R15                  Locate next UCB            U020
         LTR   R15,R15                  Any UCB found?             U020
         BNZ   NOTMOUNT                 No, end of scan            U020
         L     R15,IOSAUCB              -> UCB                     U020
         USING UCBCMSEG,R15             UCB common segment         U020
.IOS020   ANOP                                                     U020
         TM    UCBSTAT,UCBONLI          Online?                    U020
         BNO   NEXT$VOL                 NO - IGNORE IT             U004
         CLC   VOLUME,UCBVOLI           Is this our volume?        U020
         BNE   NEXT$VOL                 NO - TRY NEXT              U004
         MVC   DEVCODE(2),UCBTBYT3      Save unit type             U020
         B     GOTVOL                   CONTINUE                   U004
*--------FIND DATA SET NAME IN CATALOG
LOCATE   LOCATE LOCLIST
         LR    R2,R15                   SAVE RETURN CODE           U013
         SET   DSATDSNAME,DSNAME,44     PASS TRUE DSN TO CLIST     U013
         LTR   R15,R2                   TEST RETURN CODE           U013
         BNZ   LOCERROR
         SET   DSATVOLUME,SERIAL,6      AND PASS VOLSER TO CLIST   U016
*--------FIND DEVICE
GOTVOL   SR    R1,R1                    CLEAR FOR IC               U002
         IC    R1,DEVCODE+1             GET DEVICE CODE BYTE       U012
         MH    R1,=H'8'                 GET OFFSET                 U002
         LA    R1,DEVTABLE(R1)          GET ADDR OF ENTRY          U002
         CLI   DEVCODE,X'20'            DASD?                      U012
         BNE   NOTDASD                  NO                         U012
GOTVOLDA MVC   OL@DEVIC(6),2(R1)        COPY DEVICE NAME TO OUTPUT U002
         MVC   TRKPRCYL(2),0(R1)        COPY TRACKS PER CYLINDER   U002
         SPACE 1
         SET   DSATDEVTYPE,OL@DEVIC,6   PASS TO CLIST              U012
*--------OBTAIN FORMAT 1 DSCB
OBTAIN   OBTAIN CAM#SRCH                READ FORMAT 1 DSCB
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   DSNERR
*--------SEE IF FORMAT 3 DSCB IS NEEDED
         CLC   DS1PTRDS,=X'0000000000'                             U002
         BE    ALLOCTYP
         MVC   SEEKADDR,DS1PTRDS        SET CCHHR TO READ          U015
         LA    R1,IECSDSL3              -> FIRST FMT3 WORK AREA    U015
         SPACE 2
FMT3LOOP ST    R1,CAM#SEEK+12           STORE ADDR IN CAMLST       U015
         XC    0(140,R1),0(R1)          CLEAR THE AREA             U015
         OBTAIN CAM#SEEK                READ FORMAT 3 DSCB
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   DSNERR
*--------IF MULTIPLE FORMAT 3 DSCBS, GET THEM ALL                  U015
         L     R1,CAM#SEEK+12           GET ADDR OF CURRENT FMT3   U015
         MVC   SEEKADDR,DS3PTRDS-IECSDSL3(R1)  SET CCHHR TO READ   U015
         LA    R1,140(,R1)              -> AREA FOR NEXT FMT3      U015
         CLC   SEEKADDR,=X'0000000000'  ANY MORE FMT3 DSCBS?       U015
         BNE   FMT3LOOP                 YES, GO GET NEXT           U015
*
****************
*
*        DECODE ALLOCATION TYPE
*
****************
*
ALLOCTYP MVC   OL@TYPEO(5),BLANKS                                  U012
         TM    DS1SCALO,DS1CYLA
         BO    ALLOCCYL
         TM    DS1SCALO,DS1TRKA
         BO    ALLOCTRK
         TM    DS1SCALO,DS1RECA
         BO    ALLOCREC
         MVC   OL@TYPEO(3),=C'ABS'
         B     NOSS
ALLOCCYL MVC   OL@TYPEO(3),=C'CYL'
         B     NOSS
ALLOCTRK MVC   OL@TYPEO(3),=C'TRK'
         B     NOSS
ALLOCREC MVC   OL@TYPEO(3),=C'REC'
         SPACE 1
NOSS     SET   DSATALLOCTYPE,OL@TYPEO,3 PASS TO CLIST              U012
*---------------------------------------------------------------------*
*                                                                     *
*                           GET ALLOCATION                            *
*                                                                     *
*---------------------------------------------------------------------*
*--------GET TRACK ALLOCATION
         SR    R2,R2              CLEAR REGISTER 2
         LR    R3,R2              CLEAR REGISTER 3
         LR    R4,R2              CLEAR REGISTER 4
         MVC   OL@VOLSR(6),SERIAL       COPY VOLUME SERIAL
         SPACE 1
         IC    R2,DS1NOEPV              LOAD NUMBER OF EXTENTS     U002
         LTR   R2,R2                    TEST NUMBER OF EXTENTS
         BZ    GETRECFM
GETSIZE  LH    R5,XTNTLIST(R3)          GET OFFSET OF EXTENT DESC  U015
         LA    R5,DSCBAREA(R5)          GET ADDR OF EXTENT DESC    U015
         CLI   0(R5),X'00'
         BE    GETUNUSD
         LA    R5,2(,R5)                LOAD ADDR OF STARTING TRK
         SR    R0,R0                    CLEAR REGISTER 0
         LR    R1,R0                    CLEAR REGISTER 1
         LH    R0,4(,R5)                LOAD ENDING CYL NUMBER
         LH    R1,0(,R5)                LOAD STARTING CYL NUMBER
         SR    R0,R1                    SUBTRACT START FROM END
         MH    R0,TRKPRCYL              MULTIPLY BY TRKS PER CYL
         LH    R1,6(,R5)                LOAD ENDING TRACK
         AR    R0,R1                    ADD TO TRACK COUNT
         LH    R1,2(,R5)                LOAD STARTING TRACK
         SR    R0,R1                    SUBTRACT FROM TRACK COUNT
         AR    R4,R0                    ACCUMULATE TOTAL
         LA    R4,R1(,R4)               ADD 1 TRACK
         LA    R3,2(,R3)                                           U015
         BCT   R2,GETSIZE               DECREMENT EXTENT COUNT
GETUNUSD ST    R4,TRACKS                STORE TRACKS ALLOCATED
         TM    FLAG1,F1TRKS             want it in tracks?         U022
         BNZ   TRKALLOC                 yes                        U022
         LA    R1,OL@ALLOC              POINT TO MES AREA
         BAL   R15,CONVTRK              GO GET CYL.TRK
         MVC   OL@ALLOC+4(2),DECNUM+10                             U015
         OI    OL@ALLOC+4,X'F0'
         B     SETALLOC                                            U022
         SPACE 1
TRKALLOC LR    R0,R4                    get tracks allocated       U022
         BAL   R14,CONVDEC0             convert to decimal         U022
         MVC   OL@ALLOC,DECNUM+L'DECNUM-6  copy to output area     U022
         SPACE 1
SETALLOC SET   DSATALLOC,OL@ALLOC,6     PASS TO CLIST              U012
*--------GET TRACKS USED
         CLC   DS1LSTAR(3),=XL3'00'                                U012
         BE    SECONDRY
         LH    R1,DS1LSTAR                                         U002
         LA    R1,1(,R1)
         ST    R1,TRACKS
         TM    FLAG1,F1TRKS             want it in tracks?         U022
         BNZ   TRKUSED                  yes                        U022
         LA    R1,OL@USED               POINT TO MSG AREA
         BAL   R15,CONVTRK              GO GET CYL.TRK
         MVC   OL@USED+4(2),DECNUM+10                              U015
         OI    OL@USED+4,X'F0'
         B     SETUSED                                             U022
         SPACE 1
TRKUSED  LR    R0,R1                    get tracks allocated       U022
         BAL   R14,CONVDEC0             convert to decimal         U022
         MVC   OL@USED,DECNUM+L'DECNUM-6  copy to output area      U022
         SPACE 1
SETUSED  SET   DSATUSED,OL@USED,6       PASS TO CLIST              U012
*--------GET SECONDARY SIZE                                        U003
SECONDRY LA    R2,DS1SCALO+1            POINT TO FIELD             U006
         LA    R3,3                     GET LENGTH                 U006
         BAL   R14,CONVDEC              CONVERT IT                 U003
         MVC   OL@SECND(3),DECNUM+9     AND COPY TO PRINT TO LINE  U015
         OC    DS1SCALO+1(3),DS1SCALO+1 IS THERE ONE?              U006
         BNZ   *+10                     YES - SKIP                 U003
         MVC   OL@SECND(3),=C'---'      NO - FLAG IT               U003
         CLC   DS1SCALO+1(3),=FL3'999'  TOO BIG?                   U006
         BNH   *+10                     NO - SKIP                  U006
         MVC   OL@SECND(3),=C'BIG'      NO - FLAG IT               U007
         SPACE 1
         SET   DSATSECONDARY,OL@SECND,3 PASS TO CLIST              U012
*--------GET NUMBER OF EXTENTS
         LA    R2,DS1NOEPV              GET NUMBER OF EXTENTS      U002
         LA    R3,1
         BAL   R14,CONVDEC
         MVC   OL@XTNTS,DECNUM+9                                   U015
         SPACE 1
         SET   DSATEXTENTS,OL@XTNTS,3   PASS TO CLIST              U015
         B     GETRECFM
         SPACE 4
CONVTRK  EQU   *
         STM   R4,R7,CONVSAV            SAVE WORK REGS
         LR    R7,R1                    SAVE MSG POINTER
         L     R5,TRACKS                GET TRACK COUNT
         LH    R6,TRKPRCYL              GET TRACKS PER CYLINDER
         CR    R5,R6                    COUNT LESS THAN CYL
         BL    ALDONE                   YES ALL DONE
         SR    R4,R4                    ZERO FOR DIVIDE
         DR    R4,R6                    DIVIDE COUNT BY TRKS PER CYL
         LA    R3,4                     SET CONVERT COUNT TO 4
         ST    R5,CYLIND                SAVE CYL COUNT
         LA    R2,CYLIND                POINT TO CYL COUNT
         BAL   R14,CONVDEC              CONVERT TO PRINTABLE
         MVC   0(3,R7),DECNUM+9         PUT IN MSG                 U015
         ST    R4,TRACKS                SAVE TRK COUNT
ALDONE   EQU   *
         MVI   3(R7),C'.'               PUT IN THE POINT
         LM    R4,R7,CONVSAV            RESTORE WORK REGS
         LA    R3,4                     SET CONVERT COUNT TO 4
         LA    R2,TRACKS                POINT TO TRK COUNT
         LR    R14,R15                  SET RETURN REG14
         B     CONVDEC                  GO CONVERT TRK COUNT
*---------------------------------------------------------------------*
*                                                                     *
*                          GET DCB ATTRIBUTES                         *
*                                                                     *
*---------------------------------------------------------------------*
*--------GET RECORD FORMAT
GETRECFM LA    R2,OL@RECFM              -> OUTPUT AREA
         LA    R1,DS1RECFM              -> input                   U025
         BAL   LINK,RECFM               convert                    U025
*--------GET BLOCKSIZE
         LA    R3,2
         LA    R2,DS1BLKL                                          U002
         BAL   R14,CONVDEC
         MVC   OL@BLKSI(5),DECNUM+7                                U015
         SPACE 1
         SET   DSATBLKSIZE,OL@BLKSI,5   PASS TO CLIST              U012
*--------GET LRECL
         LA    R3,2
         LA    R2,DS1LRECL                                         U002
         BAL   R14,CONVDEC
         MVC   OL@LRECL(5),DECNUM+7                                U015
         SPACE 1
         SET   DSATLRECL,OL@LRECL,5     PASS TO CLIST              U012
*--------GET DSORG
         TM    DS1DSORG,X'01'           UNMOVABLE?                 U009
         BZ    *+8                                                 U009
         MVI   OL@DSORG+2,C'U'                                     U009
         TM    DS1DSORG,X'80'           IS?                        U002
         BZ    NXORG1
         MVC   OL@DSORG(2),=C'IS'
         B     ENDORG
NXORG1   TM    DS1DSORG,X'20'           DA?                        U002
         BZ    NXORG2
         MVC   OL@DSORG(2),=C'DA'
         B     ENDORG
NXORG2   TM    DS1DSORG,X'40'           PS?                        U002
         BZ    NXORG3
         MVC   OL@DSORG(2),=C'PS'
         B     ENDORG
NXORG3   TM    DS1DSORG,X'02'           PO?                        U002
         BZ    NXORG4
         MVC   OL@DSORG(2),=C'PO'
         B     ENDORG
NXORG4   TM    DS1DSORG+1,X'08'         VSAM?                      U009
         BZ    ENDORG                                              U009
         MVC   OL@DSORG(2),=C'VS'                                  U009
         TM    DS1OPTCD,DS1OPTIC  X'80' DATASET IN ICF CATLG?      U014
         BNO   ENDORG                   NO - SKIP                  U014
         MVC   OL@DSORG(2),=C'EF'       YES - INDICATE DF/EF DS    U014
         TM    DS1OPTCD,DS1OPTBC  X'40' ICF CATALOG?               U014
         BNO   ENDORG                   NO - SKIP                  U014
         MVC   OL@DSORG(3),=C'BCS'      YES - IND. BASIC CAT DS    U014
         SPACE 1
ENDORG   SET   DSATDSORG,OL@DSORG,3     PASS TO CLIST              U012
*---------------------------------------------------------------------*
*                                                                     *
*                         FIND CREATION DATE                          *
*                                                                     *
*---------------------------------------------------------------------*
*--------GET CREATION DATE
         MVC   DATEWORK+1(3),DS1CREDT   YDD                        U002
         BAL   R14,CONVDATE             CONVERT IT                 U002
         MVC   OL@CDATE(8),DATEWORK     MOVE DATE TO PRINT LINE    U002
         SPACE 1
         SET   DSATCREDT,OL@CDATE,8     PASS TO CLIST              U012
*---------------------------------------------------------------------*
*                                                                     *
*                         FIND LAST REFERENCED DATE                   *
*                                                                     *
*---------------------------------------------------------------------*
*--------GET LAST REFERENCED DATE                                  U002
         CLC   =XL3'00',DS1REFD         LAST REF'D DATE ANY GOOD?  U002
         BE    NO$REFD                  NO - SKIP IT               U002
         MVC   DATEWORK+1(3),DS1REFD    GET LAST REFERENCED DATE   U002
         BAL   R14,CONVDATE             CONVERT IT                 U002
         MVC   OL@LDATE(8),DATEWORK     MOVE DATE TO PRINT LINE    U002
         SPACE 1
NO$REFD  SET   DSATLUSED,OL@LDATE,8     PASS TO CLIST              U012
*--------SHOW PASSWORD PROTECTION FLAGS
         MVI   OL@PROT1,C'-'            ASSUME NONE                U002
         TM    DS1DSIND,DS1IND40        IS IT RACF PROTECTED?      U008
         BNO   NOT$RACF                 NO - SEE IF PASSWORD       U008
         MVI   OL@PROT1,C'A'            SHOW IT'S RACF             U008
         B     OK$PSWD                  END OF THIS SECTION        U008
NOT$RACF TM    DS1DSIND,X'14'           ANY PASSWORD PROTECTION?
         BZ    OK$PSWD                  NO                         U005
         MVI   OL@PROT1,C'R'            ASSUME READ PROTECTED      U002
         TM    DS1DSIND,X'04'           READ W/O PASSWORD?         U001
         BZ    OK$PSWD                  NO - GOT IT                U005
         MVI   OL@PROT1,C'W'            YES - ONLY WRITE PROTECTED U002
         SPACE 1
OK$PSWD  SET   DSATPROTIND1,OL@PROT1,1  PASS TO CLIST              U012
*---------------------------------------------------------------------*
*                                                                     *
*        FORMAT SECOND PRINT LINE IF REQUESTED                        *
*                                                                     *
*---------------------------------------------------------------------*
*--------GET TRACK BALANCE                                         U021
         LA    R3,2                     Field length               U021
         LA    R2,DS1TRBAL              Field address              U021
         BAL   R14,CONVDEC                                         U021
         MVC   OL@TRBAL(5),DECNUM+7                                U021
         SPACE 1
         SET   DSATTRBAL,OL@TRBAL,5     PASS TO CLIST              U021
         SPACE 1
*---------------------------------------------------------------------*
*                                                                     *
*                         FIND EXPIRATION DATE                        *
*                                                                     *
*---------------------------------------------------------------------*
*--------GET EXPIRATION DATE                                       U005
         MVC   OL@EDATE(8),=C' 00.000 ' ASSUME NONE AND JULIAN     U012
         TM    FLAG1,F1JULDAT           IS IT JULIAN?              U012
         BO    *+10                     YES                        U012
         MVC   OL@EDATE(8),=C'00/00/00' ASSUME NONE AND NON JULIAN U005
         CLC   =XL3'00',DS1EXPDT        ANY EXPIRATION DATE?       U005
         BE    NO$EXPDT                 NO - SKIP IT               U005
         MVC   DATEWORK+1(3),DS1EXPDT   GET EXPIRATION DATE        U005
         BAL   R14,CONVDATE             CONVERT IT                 U005
         MVC   OL@EDATE(8),DATEWORK     MOVE DATE TO PRINT LINE    U005
         SPACE 1
NO$EXPDT SET   DSATEXPDT,OL@EDATE,8     PASS TO CLIST              U012
*--------GET KEYLEN                                                U005
         LA    R3,1                     GET FIELD LENGTH           U005
         LA    R2,DS1KEYL               -> KEY LENGTH              U005
         BAL   R14,CONVDEC              CONVERT TO DECIMAL         U005
         MVC   OL@KEYL(3),DECNUM+9      MOVE TO PRINT LINE         U015
         SPACE 1
         SET   DSATKEYLEN,OL@KEYL,3     PASS TO CLIST              U012
*--------GET RKP                                                   U005
         LA    R3,2                     GET FIELD LENGTH           U005
         LA    R2,DS1RKP                -> KEY LENGTH              U005
         BAL   R14,CONVDEC              CONVERT TO DECIMAL         U005
         MVC   OL@RKP(5),DECNUM+7       MOVE TO PRINT LINE         U015
         SPACE 1
         SET   DSATRKP,OL@RKP,5         PASS TO CLIST              U012
*--------GET OPTCD                                                 U021
         LA    R1,=C'WUCHBZTJ'          assume PS/PO               U021
         TM    DS1DSORG,DS1DSGPS+DS1DSGPO  is it?                  U021
         BNZ   OPTCD$GO                 yes - go decode            U021
         LA    R1,=C'WtEFAdxR'          assume DA                  U021
         TM    DS1DSORG,DS1DSGDA        is it?                     U021
         BNZ   OPTCD$GO                 yes - go decode            U021
         LA    R1,=C'WUMIY6LR'          assume IS                  U021
         TM    DS1DSORG,DS1DSGIS        is it?                     U021
         BNZ   OPTCD$GO                 yes - go decode            U021
         LA    R1,=C'ib345678'          assume AM                  U021
         TM    DS1DSORG+1,DS1ORGAM      is it?                     U021
         BZ    NO$OPTCD                 no - do it only in hex     U021
         SPACE 1
OPTCD$GO LA    R14,OL@OPTCD             -> output field            U021
         ICM   R0,B'1000',DS1OPTCD      get OPTCD bits             U021
         LA    R15,8                    number of bits             U021
OPTCD$LP LTR   R0,R0                    top bit set?               U021
         BNM   OPTCD$NO                 no - try next bit          U021
         MVC   0(1,R14),0(R1)           yes - move in OPTCD letter U021
         LA    R14,1(,R14)              bump output ptr            U021
OPTCD$NO SLL   R0,1                     move to next bit           U021
         LA    R1,1(,R1)                -> next OPTCD letter       U021
         BCT   R15,OPTCD$LP             do all 8 bits              U021
         SPACE 1
NO$OPTCD SET   DSATOPTCD,OL@OPTCD,2     PASS TO CLIST              U021
*--------HEX OPTCD                                                 U021
         UNPK  OL@OPTCX(2+1),DS1OPTCD(1+1)                         U021
         TR    OL@OPTCX(2),HEXTAB                                  U021
         MVI   OL@OPTCX+2,C'='                                     U021
         SPACE 1
         SET   DSATOPTCDHEX,OL@OPTCX,2  PASS TO CLIST              U021
*--------GET MODIFIED-SINCE-LAST-BACKUP INDICATOR                  U005
         MVI   OL@MOD,C'-'              ASSUME NOT                 U005
         TM    DS1DSIND,DS1IND02        IS IT?                     U005
         BNO   *+8                      NO - SKIP                  U012
         MVI   OL@MOD,C'Y'              SHOW IT IS                 U005
         SPACE 1
         SET   DSATMODIND,OL@MOD,1      PASS TO CLIST              U012
*--------GET RACF PROTECTION INDICATOR                             U005
         MVI   OL@PROT2,C'-'            ASSUME NOT                 U005
         TM    DS1DSIND,DS1IND40        IS IT?                     U005
         BNO   NO$PROT2                 NO - SKIP                  U012
*  IT'S RACF PROTECTED.  THIS INDICATOR WAS ALREADY DISPLAYED ON   U008
*  THE FIRST DATA LINE, SO DISPLAY THE PASSWORD INDICATOR HERE.    U008
         TM    DS1DSIND,X'14'           ANY PASSWORD PROTECTION?   U008
         BZ    NO$PROT2                 NO                         U012
         MVI   OL@PROT2,C'R'            ASSUME READ PROTECTED      U008
         TM    DS1DSIND,X'04'           READ W/O PASSWORD?         U008
         BZ    NO$PROT2                 NO - GOT IT                U012
         MVI   OL@PROT2,C'W'            YES - ONLY WRITE PROTECTED U008
         SPACE 1
NO$PROT2 SET   DSATPROTIND2,OL@PROT2,1  PASS TO CLIST              U012
*---------------------------------------------------------------------*
*                                                                     *
*        FORMAT ASM2 FIELDS IF THEY'RE VALID AND "FULL" SPECIFIED     *
*                                                                     *
*---------------------------------------------------------------------*
*--------SEE IF ASM2 DATA IN FMT1                                  U017
         CLC   =C'IBMOSVS2',DS1SYSCD    IBM VANILLA?               U017
         BE    NO$ASM2                  YES - SKIP - NO ASM2 DATA  U017
         MVC   OL@LMID,DS1LMID          SHOW ASM2 LAST MOD BY ID   U017
         SET   DSATLMID,OL@LMID,8       PASS TO CLIST              U017
*--------GET LAST MODIFIED DATE                                    U017
         MVC   DATEWORK+1(3),DS1LMDAT   YDD                        U017
         BAL   R14,CONVDATE             CONVERT IT                 U017
         MVC   OL@LMDAT(8),DATEWORK     MOVE DATE TO PRINT LINE    U017
         SET   DSATLMDATE,OL@LMDAT,8    PASS TO CLIST              U018
*--------SHOW LAST MOD TIME                                        U017
         UNPK  OL@LMTIM+1(4+1),DS1LMTIM(2+1)  GET HHMMX            U017
         MVI   OL@LMTIM+1+4,C' '        FIX FLIP BYTE              U017
         MVC   OL@LMTIM(2),OL@LMTIM+1   HHHMM                      U017
         MVI   OL@LMTIM+2,C':'          HH:MM                      U017
         SET   DSATLMTIME,OL@LMTIM,5    PASS TO CLIST              U018
         SPACE 1
         B     SAVEDATA                                            U012
         SPACE 2
NO$ASM2  MVI   HEADER2+4,C'-'           CLEAR THE ASM2 FIELD ...   U017
         MVC   HEADER2+5(22),HEADER2+4  ... HEADERS                U017
         B     SAVEDATA                                            U017
*---------------------------------------------------------------------*
*                                                                     *
*        SUBROUTINE TO FORMAT A DATE FROM PACKED DECIMAL (JULIAN)     *
*                                                                     *
*---------------------------------------------------------------------*
CONVJDAT TM    FLAG1,F1JULDAT           WANT JULIAN DATES?         U025
         BZ    CONVJD$1                 no - convert it            U025
         MVC   DATEWORK(8),BLANKS                                  U025
         IC    R0,0(,R15)               get packed YY              U025
         STC   R0,DATEWORK+1            set .Y                     U025
         OI    DATEWORK+1,X'F0'         make it printable          U025
         SRL   R0,4                     shift right one nibble     U025
         STC   R0,DATEWORK              set Y.                     U025
         OI    DATEWORK,X'F0'           make it printable          U025
         MVI   DATEWORK+2,C'.'          put in separator           U025
         UNPK  DATEWORK+3(3),1(2,R15)   get DDD                    U025
         BR    R14                      done                       U025
CONVJD$1 ZAP   DATEPDEC,1(2,R15)        get DDD                    U025
         CVB   R0,DATEPDEC              in binary                  U025
         STH   R0,DATEWORK+2            save for CONVDATE          U025
         SR    R1,R1                    clear for ic               U025
         IC    R1,0(,R15)               get packed YY              U025
         SLL   R1,4                     make it 0YY0               U025
         LA    R1,X'F'(,R1)             make it 0YYF               U025
         STH   R1,DATEPDEC+6            store for convert          U025
         CVB   R0,DATEPDEC              get it in binary           U025
         STC   R0,DATEWORK+1            save for CONVDATE          U025
*---------------------------------------------------------------------*
*                                                                     *
*        SUBROUTINE TO COMPUTE DATE                                   *
*                                                                     *
*---------------------------------------------------------------------*
CONVDATE LH    R1,DATEWORK+2            LOAD DAY OF YEAR
         SR    R3,R3                    CLEAR FOR IC               U012
         IC    R3,DATEWORK+1            GET YEAR IN BINARY         U012
         TM    FLAG1,F1JULDAT           WANT JULIAN DATES?         U012
         BO    JULDATE                  YES - DO IT THAT WAY       U012
         SR    R2,R2                    ASSUME IT'LL BE ZERO       U005
         LTR   R1,R1                    ANY DAY OF YEAR?           U005
         BZ    DATECVT3                 NO: M=0, D=0               U005
         TM    DATEWORK+1,X'03'         TEST FOR YEAR MULTIPLE OF 4
         BZ    DATEMODA
*--------NOT A LEAP YEAR
         C     R1,=F'60'
         BL    DATEMODA
         LA    R1,1(,R1)
*--------CONVERT DAY OF YEAR TO MONTH AND DAY OF MONTH
DATEMODA SR    R2,R2                    INITIALIZE MONTH COUNTER
DATECVT1 SH    R1,DATEMNTH(R2)          SUBTRACT NO. OF DAYS IN MONTH
         LTR   R1,R1
         BNP   DATECVT2
         LA    R2,2(,R2)                INCREMENT TO NEXT MONTH
         B     DATECVT1
*--------ADD BACK NUMBER OF DAYS AND DIVIDE REG 2 BY 2
DATECVT2 AH    R1,DATEMNTH(R2)
         SRA   R2,1
         LA    R2,1(,R2)
*--------REG 1 = DAY OF MONTH
*--------REG 2 = MONTH
*--------REG 3 = YEAR
DATECVT3 CVD   R2,DATEPDEC
         UNPK  DATEUDEC(8),DATEPDEC+4(4)
         OI    DATEUDEC+7,X'F0'
         MVC   DATEWORK(2),DATEUDEC+6
         MVI   DATEWORK+2,C'/'
         CVD   R1,DATEPDEC
         UNPK  DATEUDEC(8),DATEPDEC+4(4)
         OI    DATEUDEC+7,X'F0'
         MVC   DATEWORK+3(2),DATEUDEC+6
         MVI   DATEWORK+5,C'/'
         CVD   R3,DATEPDEC
         UNPK  DATEUDEC(8),DATEPDEC+4(4)
         OI    DATEUDEC+7,X'F0'
         MVC   DATEWORK+6(2),DATEUDEC+6
         BR    R14                      RETURN TO C-DATE/L-USED    U002
*--------REG 1 = DAY OF YEAR
*--------REG 3 = YEAR
JULDATE  MVC   DATEWORK(8),BLANKS                                  U012
         CVD   R3,DATEPDEC              CONVERT YEAR TO PACKED     U012
         OI    DATEPDEC+7,X'0F'         REMOVE SIGN                U012
         UNPK  DATEWORK+1(2),DATEPDEC+6(2)  UNPACK YEAR            U012
         MVI   DATEWORK+3,C'.'          PUT IN THE DOT             U012
         CVD   R1,DATEPDEC              CONVERT DAY TO PACKED      U012
         OI    DATEPDEC+7,X'0F'         REMOVE SIGN                U012
         UNPK  DATEWORK+4(3),DATEPDEC+6(2)  UNPACK YEAR            U012
         BR    R14                      RETURN TO MAINLINE         U012
*---------------------------------------------------------------------*
*                                                                     *
*                  BINARY TO EBCDIC CONVERSION ROUTINE                *
*                                                                     *
*---------------------------------------------------------------------*
*--------CONVERT TO EBCDIC
CONVDEC  SR    R0,R0
CONVDECL SLL   R0,8
         IC    R0,0(,R2)
         LA    R2,1(,R2)
         BCT   R3,CONVDECL
         LPR   R0,R0
CONVDEC0 CVD   R0,DECWORK
         MVC   DECNUM(12),DECMASK                                  U015
         ED    DECNUM(12),DECWORK+2                                U015
         BR    R14
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                               ERRORS                                *
*                                                                     *
*---------------------------------------------------------------------*
*--------ERROR IN PARSE ROUTINE
ERRPARS  MVC   BUFFER1+13(14),=C'Parse Couldn''t'                  U012
         MVI   RC+3,56                  SET RETURN CODE            U012
         MVI   DSNPTR,X'FF'             BE SURE NOT TO LOOP BACK   U012
         B     ERRMSG                                              U005
*--------ERROR IN LOCATE MACRO
LOCERROR ST    R15,RC                   SAVE RETURN CODE           U012
         SLA   R15,3
         LA    R15,LOCMSGS-32(R15)
         MVC   BUFFER1+13(32),0(R15)                               U012
         B     ERRMSG                                              U005
*--------VOLUME NOT MOUNTED                                        U004
NOTMOUNT MVC   BUFFER1+13(18),=C'Volume not mounted'               U012
         MVI   RC+3,52                  SET RETURN CODE            U012
         B     ERRMSG                                              U004
*--------ERROR IN OBTAIN MACRO
DSNERR   MVC   BUFFER1+13(6),SERIAL                                U012
         LA    R14,32(,R15)             COMPUTE MY RETURN CODE     U012
         ST    R14,RC                   SAVE FOR RETURN            U012
         SLA   R15,3
         LA    R15,DSNERRS-32(R15)
         MVI   BUFFER1+20,C'-'                                     U012
         MVC   BUFFER1+22(32),0(R15)                               U012
         B     ERRMSG
*--------NOT A DIRECT ACCESS DEVICE
*
*  THIS IS A SPECIAL CASE; FORCE A CALL TO 'CLISTSET' IF 'SAVE'
*  WAS SPECIFIED SO USER CAN PICK UP VOLSER AND FILE SEQ NUM.
*
NOTDASD  MVI   RC+3,60                  SET RETURN CODE            U012
         TM    FLAG2,F2FULL             WANT SECOND DATA LINE?     U025
         BNO   NO$LINE1                 NO - SKIP                  U025
         MVC   OL@DSN,DSNAME            FILL IN DSNAME             U025
         LA    R0,BUFF0RDW              -> RDW                     U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
         MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U025
         SPACE 2
NO$LINE1 CLI   DEVCODE,X'80'            tape?                      U025
         BE    TAPE$VOL                 yes - do warning msg       U025
         MVC   BUFFER1(11),=C'** ERROR **'                         U025
         MVC   BUFFER1+13(6),SERIAL                                U012
*U025    MVC   BUFFER1+20(48),=C'- Device is not direct-access  -  File$
                number = '                                         U012
         MVC   BUFFER1+20(30),=C'-- Device is not direct-access'   U025
         LA    R0,BUFF1RDW              -> RDW                     U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
         SPACE 1
         SET   SYSDVAL,BUFFER1,80       MSG TO CLIST               U025
         MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U025
         B     NO$TMS                   all done                   U025
         SPACE 2
TAPE$VOL MVI   RC+3,2                   rc 60 is tacky             U025
         LA    R2,FSN                   POINT TO FIELD             U012
         LA    R3,2                     GET LENGTH OF FIELD        U012
         BAL   R14,CONVDEC              CONVERT IT                 U012
         MVC   BUFFER1(11),=C'< Warning >'                         U025
         MVC   BUFFER1+13(6),SERIAL                                U025
         MVC  BUFFER1+20(33),=C'is a tape volume -- File number =' U025
         MVC   BUFFER1+54(5),DECNUM+7   FILE SEQ NUMBER TO MSG     U025
         MVC   OL4@FSEQ,DECNUM+8        also to TMS data line      U025
*U025    LA    R0,BUFF1RDW              -> RDW                     U012
*U025    BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         SPACE 1
         SET   SYSDVAL,BUFFER1,80       MSG TO CLIST               U012
         MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U012
         SPACE 2
          AIF   (&@@U01 EQ 0).NO$TMS1                              U025
*
         OPENTMC  NOTACT=NO$TMS,MF=E                               U025
*
         GETTMC  SERIAL,TMRECORD,TMS$ERR,ENQ=NO                    U025
*
         LH    R2,FSN                   get file sequence number   U025
         BCT   R2,*+8                   decrement                  U025
         B     GOT$TMS                  continue if first file     U025
*                                       (in TMC record)            U025
*                                       otherwise must find DSNB   U025
         L     R14,TMADSNB              get first DSNB number      U025
*
TMS$LOOP GETDSNB  TMDSNB,(R14),(R3),ENQ=NO                         U025
*
         USING TMDSNB,R3                                           U025
         L     R14,DSNBNEXT             -> get next DSNB number    U025
         BCT   R2,TMS$LOOP              keep reading               U025
*---  Now fudge our copy of the TMC record to simplify code below  U025
         MVC   TMDSN,DSNBDSN            dsname                     U025
         MVC   TMCRTDT,DSNBCRDT         creation date              U025
         MVC   TMEXPDT,DSNBEXDT         expiration date            U025
         MVC   TMRECFM,DSNBRFM          recfm                      U025
         MVC   TMBLKSI,DSNBBLKS         block size                 U025
         MVC   TMLRECL,DSNBLREC         lrecl                      U025
         MVC   TMBLKCNT,DSNBBLKC        block count                U025
         MVC   TMJOBNM,DSNBCJN          creating job name          U025
         DROP  R3                       TMDSNB                     U025
*                                                                  U025
GOT$TMS  DELETE  EPLOC==CL8'TMSSVC'                                U025
*                                                                  U025
         CLC   DSNAME,TMDSN             does it match up?          U025
         BNE   NO$TMS                   no - skip everything       U025
         MVI   RC+3,1                   set rc for TMS tape        U025
         LA    R0,HEADER4               -> tape header line        U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
*--------Block Count                                               U025
         LA    R2,TMBLKCNT              POINT TO FIELD             U025
         LA    R3,4                     GET LENGTH OF FIELD        U025
         BAL   R14,CONVDEC              CONVERT IT                 U025
         MVC   OL4@BCNT,DECNUM+4        move to print line         U025
*--------Out of Area code                                          U025
         MVC   OL4@OUTA,TMOUTAR                                    U025
*--------Recfm                                                     U025
         LA    R2,OL4@RFM               -> OUTPUT AREA             U025
         LA    R1,TMRECFM               -> input                   U025
         BAL   LINK,RECFM               convert                    U025
*--------Blocksize                                                 U025
         LA    R3,2                                                U025
         LA    R2,TMBLKSI                                          U025
         BAL   R14,CONVDEC                                         U025
         MVC   OL4@BKSZ(5),DECNUM+7                                U025
         SPACE 1
         SET   DSATBLKSIZE,OL4@BKSZ,5   PASS TO CLIST              U025
*--------Lrecl                                                     U025
         LA    R3,2                                                U025
         LA    R2,TMLRECL                                          U025
         BAL   R14,CONVDEC                                         U025
         MVC   OL4@LRCL(5),DECNUM+7                                U025
         SPACE 1
         SET   DSATLRECL,OL4@LRCL,5     PASS TO CLIST              U025
*------- Creation date                                             U025
         LA    R15,TMCRTDT              YDD                        U025
         BAL   R14,CONVJDAT             CONVERT IT                 U025
         MVC   OL4@CDAT,DATEWORK        move date to print line    U025
*------- Last used date                                            U025
         LA    R15,TMLASUSD             YDD                        U025
         BAL   R14,CONVJDAT             CONVERT IT                 U025
         MVC   OL4@LDAT,DATEWORK        move date to print line    U025
*------- Scratch/Delete                                            U025
         TM    TMFLAG1,TMSCRTCH                                    U025
         BZ    *+8                                                 U025
         MVI   OL4@SCR,C'S'                                        U025
         TM    TMFLAG1,TMDELET                                     U025
         BZ    *+8                                                 U025
         MVI   OL4@DEL,C'D'                                        U025
*------- Volser                                                    U025
         MVC   OL4@VOL,SERIAL                                      U025
*------- Device type                                               U025
         MVC   OL4@DEV,=C'*TAPE*'       someday do this right...   U025
*
         LA    R0,BUFF4RDW              -> RDW                     U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
         MVC   BUFFER1,BLANKS           clean main print line buff U025
*
*
         TM    FLAG2,F2FULL             WANT SECOND DATA LINE?     U025
         BZ    DONE4                    no - skip                  U025
         LA    R0,HEADER5               -> tape header line        U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
*------- Creating jobname                                          U025
         MVC   OL5@CJOB,TMJOBNM                                    U025
*------- Last used by jobname                                      U025
         MVC   OL5@LJOB,TMLASUSJ                                   U025
*--------VolSeq                                                    U025
         LA    R3,2                                                U025
         LA    R2,TMVOLSEQ                                         U025
         BAL   R14,CONVDEC                                         U025
         MVC   OL5@VSEQ(4),DECNUM+8                                U025
*--------First/Previous/Next volsers                               U025
         MVC   OL5@1VOL,TMFRSVOL                                   U025
         MVC   OL5@PRVL,TMPRVVOL                                   U025
         MVC   OL5@NXVL,TMNXTVOL                                   U025
*------- Expiration date                                           U025
         LA    R15,TMEXPDT              YDD                        U025
         BAL   R14,CONVJDAT             CONVERT IT                 U025
         MVC   OL5@EDAT,DATEWORK        move date to print line    U025
*------- Out of Area date                                          U025
         LA    R15,TMOUTDAT             YDD                        U025
         BAL   R14,CONVJDAT             CONVERT IT                 U025
         MVC   OL5@ODAT,DATEWORK        move date to print line    U025
*
         LA    R0,BUFF5RDW              -> RDW                     U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
         B     DONE4                                               U025
         SPACE 2
NO$TMS   EQU   *                                                   U025
TMS$ERR  EQU   *                                                   U025
.NO$TMS1  ANOP                                                     U025
         LA    R0,BUFF1RDW              -> RDW                     U025
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U025
         MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U012
*U025    TM    FLAG2,F2FULL             WANT SECOND DATA LINE?     U012
*U025    BNO   DONE4                    NO - SKIP                  U012
*U025    MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U012
*U025    MVC   BUFFER1(8),=C'Dsname ='                             U012
*U025    MVC   BUFFER1+8+1(44),DSNAME   FILL IN DSNAME             U012
*U025    LA    R0,BUFF1RDW              -> RDW                     U012
*U025    BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
*U025    MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U012
         B     DONE4                                               U012
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*       SAVE OUTPUT LINE IN '&SYSDVAL' IF 'SAVE' WAS SPECIFIED        *
*                                                                     *
*---------------------------------------------------------------------*
*AVEDATA SET   SYSDVAL,BUFFER1,80,NOCLIST=DONE   MSG TO CLIST      U012
SAVEDATA TM    FLAG1,F1SAVE             IN "SAVE" MODE?            U025
         BZ    DONE                     NO - SKIP                  U025
         SET   SYSDVAL,BUFFER1,80       MSG TO CLIST               U025
         B     *+4(R15)                 CHECK CLISTSET RETURN CODE U012
         B     DONE                     RC=0; CONTINUE             U012
         B     READY                    RC=4; NOT IN CLIST         U012
         MVI   RC+3,2                   RC=8; SET RC=2             U012
         MVC   WARNMSG(32),=CL32'"SYSDVAL" not defined           ' U012
         B     PRTWARN                                             U012
READY    MVI   RC+3,1                   RC=4; SET RC=1             U012
         MVC   WARNMSG(32),=CL32'Not in CLIST - "SAVE" ignored   ' U012
         SPACE 1
PRTWARN  LA    R0,WARN                  -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                            DISPLAY OUTPUT                           *
*                                                                     *
*---------------------------------------------------------------------*
DONE     TM    FLAG1,F1DSLIST           LIST OF DSNAMES?           U017
         BO    DONE0                    YES - DON'T DO DSNAME YET  U017
         TM    FLAG2,F2FULL             "FULL" LIST REQUESTED?     U017
         BZ    DONE0                    NO - DON'T DO DSNAME       U017
         MVC   OL@DSN,DSNAME            DSNAME TO MESSAGE          U017
         LA    R0,BUFF0RDW              -> RDW                     U017
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U017
DONE0    BAL   LINK,PUTHEAD             PUT OUT FIRST HEADER LINE  U010
         TM    FLAG2,F2FULL+F2EXTNTS    ANY MORE DATA LINES?       U010
         BZ    DONE1                    NO - SKIP                  U010
         TM    FLAG1,F1DSLIST           LIST OF DSNAMES?           U005
         BNO   DONE2                    NO - SKIP                  U005
         TM    FLAG2,F2FULL             SECOND DATA LINE?          U010
         BNO   *+8                      NO - SKIP                  U010
         BAL   LINK,PUTHEAD2            YES - PUT SECOND HDR NOW   U005
         TM    FLAG2,F2EXTNTS           EXTENT LIST?               U010
         BNO   *+8                      NO - SKIP                  U010
         BAL   LINK,PUTHEAD3            YES - PUT THIRD HDR NOW    U010
         BAL   LINK,PUTBLANK            AND PUT OUT A BLANK LINE   U005
DONE1    OI    FLAG1,F1NOHEAD           AND SUPPRESS FOREVERMORE   U005
DONE2    TM    FLAG2,F2FULL             FULL DISPLAY?              U017
         BZ    NO$DSN                   NO - SKIP                  U017
         TM    FLAG1,F1DSLIST           LIST OF DSNAMES?           U017
         BZ    NO$DSN                   NO - SKIP, ALREADY DONE    U017
         MVC   OL@DSN,DSNAME            DSNAME TO MESSAGE          U017
         LA    R0,BUFF0RDW              -> RDW                     U017
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U017
NO$DSN   LA    R0,BUFF1RDW              -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U001
         TM    FLAG2,F2FULL+F2EXTNTS    ANY OPTIONAL OUTPUT?       U010
         BZ    DONE5                    NO - SKIP                  U010
         TM    FLAG2,F2FULL             ANY SECOND LINE?           U005
         BZ    DONE3                    NO - SKIP                  U010
         BAL   LINK,PUTHEAD2            PUT OUT 2ND HDR LINE NOW   U005
         TM    FLAG2,F2EXTNTS           FORTH LINE REQUESTED?      U010
         BO    *+8                      YES - DON'T RESET FLAG YET U010
         OI    FLAG1,F1NOHEAD           NO MORE HEADER LINES       U005
         LA    R0,BUFF2RDW              -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         MVC   BUFFER2,BLANKS           CLEAN THE PRINT LINE BUFF  U001
DONE3    TM    FLAG2,F2EXTNTS           WANT EXTENT LIST?          U010
         BZ    DONE4                    NO - SKIP                  U010
         SR    R2,R2                    CLEAR FOR IC               U010
         ICM   R2,B'0001',DS1NOEPV      GET NUMBER OF EXTENTS      U010
         BZ    DONE4                    NO EXTENTS TO LIST         U010
         LA    R3,XTNTLIST              -> FIRST EXTENT POINTER    U010
         BAL   LINK,PUTHEAD3            PUT OUT THIRD HDR LINE NOW U010
         OI    FLAG1,F1NOHEAD           NO MORE HEADER LINES       U005
         MVC   BUFFER3(OL@LEN3),BLANKS  CLEAR EXTENT LINE BUFFER   U015
XTNTLOOP LH    R1,0(,R3)                GET AN EXTENT OFFSET       U015
         LA    R1,DSCBAREA(R1)          GET AN EXTENT ADDRESS      U015
         LA    R14,OL@XTYPE-2           -> start of output field   U023
*                                                                  U023
         TM    DS1EXT1,X'81'            extent on cylinder bound?  U023
         BNO   NOT$CYL                  no - skip                  U023
         MVC   0(5,R14),=C', Cyl'       yes - show it              U023
         LA    R14,5(,R14)              bump scan ptr              U023
         B     YES$CYL                  skip around                U023
*                                                                  U023
NOT$CYL  TM    DS1EXT1,X'80'            extent sharing cylinder?   U023
         BZ    *+4+6+4                  no - skip                  U023
         MVC   0(9,R14),=C', Shr Cyl'   yes - show it              U023
         LA    R14,9(,R14)              bump scan ptr              U023
*                                                                  U023
YES$CYL  TM    DS1EXT1,X'40'            first extent describe UL?  U023
         BZ    *+4+6+4                  no - skip                  U023
         MVC   0(9,R14),=C', Usr Lbl'   yes - show it              U023
         LA    R14,9(,R14)              bump scan ptr              U023
*                                                                  U023
         TM    DS1EXT1,X'04'            isam index?                U023
         BZ    *+4+6+4                  no - skip                  U023
         MVC   0(9,R14),=C', IS Indx'   yes - show it              U023
         LA    R14,9(,R14)              bump scan ptr              U023
*                                                                  U023
         TM    DS1EXT1,X'02'            isam overflow?             U023
         BZ    *+4+6+4                  no - skip                  U023
         MVC   0(9,R14),=C', IS Ovfl'   yes - show it              U023
         LA    R14,9(,R14)              bump scan ptr              U023
*                                                                  U023
         TM    DS1EXT1,X'01'            user data / isam prime?    U023
         BZ    *+4+6+4                  no - skip                  U023
         MVC   0(6,R14),=C', Data'      yes - show it              U023
         LA    R14,6(,R14)              bump scan ptr              U023
*                                                                  U023
         MVC   OL@XTYPE-2(2),=C'  '     blank out leading ', '     U023
         SR    R0,R0                    CLEAR FOR IC               U010
         IC    R0,1(,R1)                GET EXTENT SEQUENCE NUMBER U010
         BAL   R14,CONVDEC0             CONVERT TO DECIMAL         U015
         MVC   OL@XTNT,DECNUM+12-3      MOVE ANSWER TO OUTPUT LINE U015
*--- EXTENT STARTING ADDRESS (HEX)                                 U011
         UNPK  OL@START+1(8+1),2(4+1,R1)  CCHH EXTENT START        U010
         TR    OL@START+1(8),HEXTAB     CONVERT TO PRINTABLE HEX   U010
         MVI   OL@START+9,C' '          FIX FLIP BYTE              U010
         MVC   OL@START(4),OL@START+1   SHIFT OVER CC              U010
         MVI   OL@START+4,C','          PUT IN SEPARATOR           U010
*--- EXTENT STARTING ADDRESS (DEC)                                 U011
         LH    R0,2(,R1)                GET START CC               U011
         MH    R0,TRKPRCYL              GET START CC IN TRKS       U011
         AH    R0,4(,R1)                ADD START HH               U011
         BAL   R14,CONVDEC0             CONVERT TO DECIMAL         U011
         MVC   OL@STRK,DECNUM+12-5      GET 5 DIGIT NUMBER         U015
*--- EXTENT ENDING ADDRESS (HEX)                                   U011
         UNPK  OL@END+1(8+1),6(4+1,R1)  CCHH EXTENT END            U010
         TR    OL@END+1(8),HEXTAB       CONVERT TO PRINTABLE HEX   U010
         MVI   OL@END+9,C' '            FIX FLIP BYTE              U010
         MVC   OL@END(4),OL@END+1       SHIFT OVER CC              U010
         MVI   OL@END+4,C','            PUT IN SEPARATOR           U010
*--- EXTENT ENDING ADDRESS (DEC)                                   U011
         LH    R0,6(,R1)                GET END CC                 U011
         MH    R0,TRKPRCYL              GET END CC IN TRKS         U011
         AH    R0,8(,R1)                ADD END HH                 U011
         BAL   R14,CONVDEC0             CONVERT TO DECIMAL         U011
         MVC   OL@ETRK,DECNUM+12-5      GET 5 DIGIT NUMBER         U015
*--- LENGTH IN TRACKS OF EXTENT (DEC)                              U011
         LH    R15,6(,R1)               GET END CC                 U010
         SH    R15,2(,R1)               SUB START CC               U010
         MH    R15,TRKPRCYL             GET NUMBER OF TRACKS       U010
         AH    R15,8(,R1)               ADD END HH                 U010
         SH    R15,4(,R1)               SUB START HH               U010
         LA    R0,1(,R15)               FUDGE FACTOR               U011
         BAL   R14,CONVDEC0             CONVERT TO DECIMAL         U011
         MVC   OL@LNTH,DECNUM+12-5      GET 5 DIGIT NUMBER OF TRKS U015
         LA    R0,BUFF3RDW              -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         LA    R3,2(,R3)                -> NEXT EXTENT ADDRESS     U015
         BCT   R2,XTNTLOOP              DO NEXT EXTENT             U010
         MVC   BUFFER3(OL@LEN3),BLANKS  CLEAR PRINT LINE BUFFER    U012
DONE4    CLI   DSNPTR,X'FF'             ANY MORE DSNAMES?          U005
         BE    *+8                      NO - SKIP                  U005
         BAL   LINK,PUTBLANK            PUT OUT A BLANK LINE       U005
DONE5    CLI   DSNPTR,X'FF'             END OF LIST?               U001
         BNE   NEXT$DSN                 NO - DO NEXT               U001
         IKJRLSA PARS#ANS
         TM    FLAG1,F1SAVE             'SAVE' REQUESTED?          U012
         BNO   LEAVE                    NO - SKIP                  U015
         DELETE  EPLOC==CL8'CLISTSET'   YES - DONE WITH INTERFACE  U012
         B     LEAVE                    FREEMAIN AND EXIT          U015
ERRMSG   MVC   BUFFER1(13),=CL13'** ERROR **  '                    U012
         LA    R0,BUFF1RDW              -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         SPACE 1
         SET   SYSDVAL,BUFFER1,80       PASS MSG TO CLIST          U012
         MVC   BUFFER1,BLANKS           CLEAN THE PRINT LINE BUFF  U001
         B     DONE4                                               U005
*---------------------------------------------------------------------*
*                                                                     *
*  Convert recfm to displayable                                    U025
*                                                                     *
*---------------------------------------------------------------------*
RECFM    TM    0(R1),X'C0'              RECFM=U?                   U002
         BO    RECFM$U                  YES                        U012
         BZ    RECFM$T                  NO RECFM AT ALL - SKIP
         TM    0(R1),X'80'              TEST FOR RECFM=F           U002
         BZ    RECFM$V                  NOPE - MUST BE RECFM=V     U012
         MVI   0(R2),C'F'
         LA    R2,1(,R2)
         B     RECFM$T
RECFM$U  MVI   0(R2),C'U'                                          U012
         LA    R2,1(,R2)                                           U012
         B     RECFM$T                                             U012
RECFM$V  MVI   0(R2),C'V'
         LA    R2,1(,R2)
RECFM$T  TM    0(R1),X'20'                                         U002
         BZ    RECFM$B
         MVI   0(R2),C'T'
         LA    R2,1(,R2)
RECFM$B  TM    0(R1),X'10'                                         U002
         BZ    RECFM$S
         MVI   0(R2),C'B'
         LA    R2,1(,R2)
RECFM$S  TM    0(R1),X'08'                                         U002
         BZ    RECFM$A
         MVI   0(R2),C'S'
         LA    R2,1(,R2)
RECFM$A  TM    0(R1),X'04'                                         U002
         BZ    RECFM$M
         MVI   0(R2),C'A'
         LA    R2,1(,R2)
RECFM$M  TM    0(R1),X'02'                                         U002
         BZ    RECFM$OK
         MVI   0(R2),C'M'
         SPACE 1
RECFM$OK SET   DSATRECFM,0(R2),3        PASS TO CLIST              U025
         BR    LINK                                                U025
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                            PUT OUT HEADER LINE(S)
*                                                                     *
*---------------------------------------------------------------------*
PUTHEAD  TM    FLAG1,F1NOHEAD           SUPPRESS HEADER LINES?     U012
         BOR   LINK                     YES - JUST RETURN          U012
         LA    R0,HEADER1               -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         BR    LINK                     RETURN TO CALLER           U005
         SPACE 2
PUTHEAD2 TM    FLAG1,F1NOHEAD           SUPPRESS HEADER LINES?     U012
         BOR   LINK                     YES - JUST RETURN          U012
         LA    R0,HEADER2               -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         BR    LINK                     RETURN TO CALLER           U005
         SPACE 2
PUTHEAD3 TM    FLAG1,F1NOHEAD           SUPPRESS HEADER LINES?     U012
         BOR   LINK                     YES - JUST RETURN          U012
         LA    R0,HEADER3               -> RDW                     U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         BR    LINK                     RETURN TO CALLER           U010
         SPACE 2
PUTBLANK LA    R0,=X'0005000040'        -> RDW FOR ONE BLANK       U012
         BAL   R14,PUTLINE              CONDITIONALLY PUT IT OUT   U012
         BR    LINK                     RETURN TO CALLER           U005
         SPACE 2
PUTLINE  TM    FLAG1,F1NOLIST           SUPPRESS OUTPUT?           U012
         BOR   R14                      YES - JUST RETURN          U012
         ST    R14,PUTLIN14             SAVE RETURN ADDRESS        U012
         SPACE 1
         PUTLINE  OUTPUT=((0),,,DATA),MF=(E,IOPLAREA)              U012
         SPACE 1                                                   U012
         L     R14,PUTLIN14             RESTORE RETURN ADDRESS     U012
         BR    R14                      RETURN TO CALLER           U012
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*  Subroutine to invoke CLISTSET                                      *
*                                                                     *
*---------------------------------------------------------------------*
SET      TM    FLAG1,F1SAVE             IN "SAVE" MODE?            U025
         BNOR  R14                      NO - just return to caller U025
         LA    R1,SETPARM               -> PARM LIST               U025
******** LINK  EP=CLISTSET                                         U025
         L     R15,CLISTSET             -> CLIST INTERFACE SUBR    U025
         BR    R15                      CALL IT (he'll ret via R14)U025
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                               DATA                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 4
         LTORG
         SPACE 4
CYLIND   DC    F'0'
CONVSAV  DC    4F'0'
TRKPRCYL DC    F'0'                    TRACKS PER CYLINDER
DSNPTR   DC    A(0)                     -> PDL FOR DSN             U001
PUTLIN14 DC    A(0)                     LINKAGE SAVE AREA          U001
MOVENAME MVC   0(*-*,R2),0(R3)          << EXECUTED >>
DSNAME   DC    CL44' '
VOLUME   DC    CL6' '                                              U004
FLAG1    DC    X'00'                                               U004
F1NOHEAD  EQU   X'80'                   SUPPRESS HEADER LINES      U004
F1USEVOL  EQU   X'40'                   USE SUPPLIED VOLUME        U004
F1DSLIST  EQU   X'20'                   DSN LIST WAS ENTERED       U005
F1NOLIST  EQU   X'10'                   SUPPRESS ALL DISPLAY DATA  U012
F1SAVE    EQU   X'08'                   SAVE INFO IN CLIST VARS    U012
F1JULDAT  EQU   X'04'                   DATES TO BE GIVEN JULIAN   U012
F1TRKS    EQU   X'02'                   show ALLOC/USED in tracks  U022
FLAG2    DC    X'00'                                               U004
F2FULL    EQU   X'80'                   SHOW ALL ATTRIBUTES        U005
F2EXTNTS  EQU   X'40'                   SHOW DATASET EXTENTS       U010
         SPACE 4
*--------DATE CONVERSION
DATEWORK DC    2F'0'
DATEMNTH DC    H'31'                    JAN
         DC    H'29'                    FEB
         DC    H'31'                    MAR
         DC    H'30'                    APR
         DC    H'31'                    MAY
         DC    H'30'                    JUN
         DC    H'31'                    JUL
         DC    H'31'                    AUG
         DC    H'30'                    SEP
         DC    H'31'                    OCT
         DC    H'30'                    NOV
         DC    H'31'                    DEC
         DC    X'7FFF'                  ALL THE REST (99.366)      U011
DATEPDEC DC    D'0'
DATEUDEC DC    D'0'
*--------DECIMAL CONVERSION
DECWORK  DC    D'0'                     DOUBLE WORD FOR PACKED DECIMAL
DECMASK  DC    X'402020202020202020202120'  EDIT PATTERN           U015
DECNUM   DC    CL12' '                  RESULT AREA                U015
HEXTAB   EQU   *-C'0'                                              U010
         DC    C'0123456789ABCDEF'                                 U010
         EJECT
*--------DSCB'S
XTNTLIST DC    Y(DS1EXT1-DSCBAREA)      FORMAT 1                   U015
         DC    Y(DS1EXT2-DSCBAREA)                                 U015
         DC    Y(DS1EXT3-DSCBAREA)                                 U015
         DC    Y(DS3EXTNT+00-DSCBAREA)  FORMAT 3 # 1               U015
         DC    Y(DS3EXTNT+10-DSCBAREA)                             U015
         DC    Y(DS3EXTNT+20-DSCBAREA)                             U015
         DC    Y(DS3EXTNT+30-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+00-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+10-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+20-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+30-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+40-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+50-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+60-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+70-DSCBAREA)                             U015
         DC    Y(DS3ADEXT+80-DSCBAREA)                             U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*1)  FORMAT 3 # 2         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*1)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*1)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*1)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*1)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*2)  FORMAT 3 # 3         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*2)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*2)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*2)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*2)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*3)  FORMAT 3 # 4         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*3)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*3)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*3)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*3)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*4)  FORMAT 3 # 5         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*4)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*4)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*4)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*4)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*5)  FORMAT 3 # 6         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*5)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*5)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*5)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*5)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*6)  FORMAT 3 # 7         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*6)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*6)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*6)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*6)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*7)  FORMAT 3 # 8         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*7)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*7)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*7)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*7)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*8)  FORMAT 3 # 9         U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*8)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*8)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*8)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*8)                       U015
         DC    Y(DS3EXTNT+00-DSCBAREA+140*9)  FORMAT 3 # 10        U015
         DC    Y(DS3EXTNT+10-DSCBAREA+140*9)                       U015
         DC    Y(DS3EXTNT+20-DSCBAREA+140*9)                       U015
         DC    Y(DS3EXTNT+30-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+00-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+10-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+20-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+30-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+40-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+50-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+60-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+70-DSCBAREA+140*9)                       U015
         DC    Y(DS3ADEXT+80-DSCBAREA+140*9)                       U015
         SPACE 2
CAM#SRCH CAMLST  SEARCH,DSNAME,SERIAL,DS1FMTID-DS1FMTID            U015
         SPACE 2
CAM#SEEK CAMLST  SEEK,SEEKADDR,SERIAL,IECSDSL3-IECSDSL3            U015
         SPACE 4
*--------CATALOG SEARCH MACRO
LOCLIST  CAMLST NAME,DSNAME,,CATBLOCK
         SPACE 4
*--------MESSAGES
BUFF0RDW DC    Y(4+OL@LEN0,0)                                      U017
BUFFER0  DC    C'Dsname:  '                                        U017
OL@DSN   DC    CL44' '                                             U017
OL@LEN0  EQU   *-BUFFER0                                           U017
         SPACE 3
HEADER1  DC    H'84,0'
         DC    CL80'Typ--Alloc---Used-Xt-Sec-Rf--Blksi-Lrecl-Org--C/Dat$
               e---L/Used--Volser-Device-P '                       U017
BUFF1RDW DC    H'84,0'
BUFFER1  DC    CL80' '
         ORG   *-80                                                U002
OL@TYPEO DS    CL3,C                    CYL/TRK/REC/ABS            U002
OL@ALLOC DS    CL6,C                                               U002
OL@USED  DS    CL6                      XTNTS WILL BUMP AGAINST    U015
OL@XTNTS DS    CL3,C                        USED, IF XTNTS > 99    U015
OL@SECND DS    CL3,C                                               U003
OL@RECFM DS    CL3,C                                               U002
OL@BLKSI DS    CL5,C                                               U002
OL@LRECL DS    CL5,C                                               U002
OL@DSORG DS    CL3,C                                               U002
OL@CDATE DS    CL8,C                                               U002
OL@LDATE DS    CL8,C                                               U002
OL@VOLSR DS    CL6,C                                               U002
OL@DEVIC DS    CL6,C                                               U002
OL@PROT1 DS    C                                                   U002
         ORG   ,                                                   U002
         SPACE 3
HEADER2  DC    H'84,0'                                             U005
         DC    CL80'LM-Date-LM-Time--LM-id---------------M-TrBal--E/Dat$
               e--Key---Rkp--Optcd-------P '                       U021
BUFF2RDW DC    H'84,0'                                             U005
BUFFER2  DC    CL80' '                                             U005
         ORG   *-80                                                U005
OL@LMDAT DS    CL8,C                                               U017
OL@LMTIM DS    CL5,CL2                                             U017
OL@LMID  DS    CL8,CL13                                            U021
*L@USCNT DS    CL8                      %%%                        U017
OL@MOD   DS    C,C                                                 U021
OL@TRBAL DS    CL5,C                                               U021
OL@EDATE DS    CL8,C                                               U005
OL@KEYL  DS    CL3,C                                               U005
OL@RKP   DS    CL5,CL2                                             U021
OL@OPTCX DS    CL2,C                                               U021
OL@OPTCD DS    CL8,C                                               U021
OL@PROT2 DS    C                                                   U005
         ORG   ,                                                   U019
         SPACE 3
HEADER3  DC    Y(4+OL@LEN3,0)                                      U010
         DC    C'Ext#-Start/CCHH--S/Trk----End/CCHH--E/Trk--Length--Typ$
               e-------------------------'                         U023
BUFF3RDW DC    Y(4+OL@LEN3,0)                                      U010
BUFFER3  DC    CL80' '                                             U023
         ORG   BUFFER3                                             U023
OL@XTNT  DS    CL3,CL3                                             U023
OL@START DS    CL9,CL2                                             U011
OL@STRK  DS    CL5,CL3                                             U011
OL@END   DS    CL9,CL2                                             U011
OL@ETRK  DS    CL5,CL3                                             U011
OL@LNTH  DS    CL5,CL2                                             U010
OL@XTYPE DS    CL29                                                U023
OL@LEN3  EQU   *-BUFFER3                LENGTH OF FORTH LINE       U010
         SPACE 3
HEADER4  DC    Y(4+OL4@LEN,0)                                      U025
         DC    CL80'------OutA-Blkcount-Fseq-Rf--Blksi-Lrecl-S-D--C/Dat$
               e---L/Used--Volser-Device   '                       U025
BUFF4RDW DC    Y(4+OL4@LEN,0)                                      U025
BUFFER4  EQU   *                                                   U025
         DC    CL6' '                                              U025
OL4@OUTA DC    CL4' ',C' '                                         U025
OL4@BCNT DC    CL8' ',C' '                                         U025
OL4@FSEQ DC    CL4' ',C' '                                         U025
OL4@RFM  DC    CL3' ',C' '                                         U002
OL4@BKSZ DC    CL5' ',C' '                                         U002
OL4@LRCL DC    CL5' ',C' '                                         U002
OL4@SCR  DC    C' ',C' '                                           U025
OL4@DEL  DC    C' ',C' '                                           U025
OL4@CDAT DC    CL8' ',C' '                                         U025
OL4@LDAT DC    CL8' ',C' '                                         U025
OL4@VOL  DC    CL6' ',C' '                                         U025
OL4@DEV  DC    CL6' '             ,C' '                            U025
OL4@LEN  EQU   *-BUFFER4                LENGTH OF first tape line  U025
         SPACE 3
HEADER5  DC    Y(4+OL5@LEN,0)                                      U025
         DC    CL80'Cre/Job--Last/Job-Vseq-1stVol-PrvVol-NxtVol---E/Dat$
               e--Out/Date'                                        U025
BUFF5RDW DC    Y(4+OL5@LEN,0)                                      U025
BUFFER5  EQU   *                                                   U025
OL5@CJOB DC    CL8' ',C' '                                         U025
OL5@LJOB DC    CL8' ',C' '                                         U025
OL5@VSEQ DC    CL4' ',C' '                                         U025
OL5@1VOL DC    CL6' ',C' '                                         U025
OL5@PRVL DC    CL6' ',C' '                                         U025
OL5@NXVL DC    CL6' ',CL2' '                                       U025
OL5@EDAT DC    CL8' ',C' '                                         U025
OL5@ODAT DC    CL8' ',C' '                                         U025
OL5@LEN  EQU   *-BUFFER5                LENGTH OF second tape line U025
         SPACE 3
DS1CYLA  EQU      B'11000000'           CYLINDER ALLOCATION
DS1RECA  EQU      B'01000000'           BLOCK ALLOCATION
DS1TRKA  EQU      B'10000000'           TRACK ALLOCATION
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                           ERROR MESSAGES                            *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
WARN     DC    H'49,0'                                             U012
         DC    C'< Warning >  '                                    U012
WARNMSG  DC    CL32' '                                             U012
         SPACE 1
LOCMSGS  DC    CL32'CVOL not mounted                ' RC=04 -> 04  U012
         DC    CL32'Dataset not cataloged           ' RC=08 -> 08  U012
         DC    CL32'Index name specified            ' RC=12 -> 12  U012
         DC    CL32'Dataset found at lower level    ' RC=16 -> 16  U012
         DC    CL32'Syntax error in dataset  name   ' RC=20 -> 20  U012
         DC    CL32'Permanent I/O error             ' RC=24 -> 24  U012
         DC    CL32'TTR outside of SYSCTLG          ' RC=28 -> 28  U012
         DC    CL32'Invalid LOCATE work area pointer' RC=32 -> 32  U012
         SPACE 1
DSNERRS  DC    CL32'Volume not mounted              ' RC=04 -> 36  U012
         DC    CL32'Dataset not on volume indicated ' RC=08 -> 40  U012
         DC    CL32'Invalid OBTAIN work area pointer' RC=12 -> 44  U012
         DC    CL32'CCHH not within VTOC            ' RC=16 -> 48  U012
TRACKS   DC    F'0'
CATBLOCK DS    34D
DEVCODE  EQU   CATBLOCK+4                                          U012
SERIAL   EQU   CATBLOCK+6
FSN      EQU   CATBLOCK+12                                         U012
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                            DEVICE TABLE                             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 4
*  DEVICE ATTRIBUTES TABLE.  FORMAT IS H'TRKS/CYL',CL6'NAME'
DEVTABLE DC    H'0000',C'??????'        00   INVALID ENTRY         U002
         DC    H'0010',C'2311  '        01                         U002
         DC    H'0200',C'2301  '        02                         U002
         DC    H'0100',C'2303  '        03                         U002
         DC    H'0046',C'2302  '        04                         U002
         DC    H'1300',C'2321  '        05                         U002
         DC    H'0008',C'2305-1'        06                         U002
         DC    H'0008',C'2305-2'        07                         U002
         DC    H'0020',C'2314  '        08                         U002
         DC    H'0019',C'3330  '        09                         U002
         DC    H'0012',C'3340  '        0A                         U002
         DC    H'0030',C'3350  '        0B                         U002
         DC    H'0012',C'3375  '        0C                         U013
         DC    H'0019',C'3330-1'        0D                         U002
         DC    H'0015',C'3380  '        0E                         U013
         DC    H'0000',C'??????'        0F   PATCH SPACE IN TABLE  U002
DEVTMAX  EQU   (*-DEVTABLE)/8           HIGHEST                    U002
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                        TSO CONTROL BLOCKS                           *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 4
ECB      DC    F'0'                    EVENT CONTROL BLOCK
PPLAREA  DC    7A(0)                   PARSE PARAMETER LIST
IOPLAREA DC    4A(0)                   I/O PARAMETER LIST
PARS#ANS DC    A(0)                    ANSWER LIST (PDL) ADDRESS
SEEKADDR DC    XL5'00'                  CCHHR OF NEXT FMT3         U015
PUTLNMFL PUTLINE   MF=L                PUTLINE PARAMETER LIST
         PRINT NOGEN                                               U005
PCL      IKJPARM   DSECT=PDL
DSN      IKJPOSIT  DSNAME,USID,LIST,PROMPT='DATA SET NAME'         U001
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U001
P#NOHEAD IKJKEYWD
         IKJNAME  'NOHEADER'                                       U001
         IKJNAME  'HEADER'                                         U001
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U005
P#FULL   IKJKEYWD
         IKJNAME  'FULL',ALIAS='ALL'                               U005
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U010
P#EXTENT IKJKEYWD
         IKJNAME  'EXTENTS'                                        U010
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U012
P#NOLIST IKJKEYWD
         IKJNAME  'NOLIST'                                         U012
         IKJNAME  'LIST'                                           U012
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U012
P#SAVE   IKJKEYWD
         IKJNAME  'SAVE'                                           U012
         IKJNAME  'NOSAVE'                                         U012
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U022
P#TRKS   IKJKEYWD
         IKJNAME  'TRKS',ALIAS=('TRACKS')                          U022
* STUPID IKJKEYWD MACRO DOES NOT ALLOW COMMENTS: UPDATE NOTE HERE: U012
P#JDATE  IKJKEYWD
         IKJNAME  'J',ALIAS=('JDATE','JULIAN')                     U012
P#VOLUME IKJKEYWD
         IKJNAME  'VOLUME',SUBFLD=S#VOLUME                         U004
S#VOLUME IKJSUBF
I#VOLUME IKJIDENT  'VOLUME',MAXLNTH=6,                             U004$
               FIRST=ALPHANUM,OTHER=ALPHANUM,                      U004$
               PROMPT='VOLUME SERIAL WHERE DATASET RESIDES'        U004
         IKJENDP
         PRINT GEN                                                 U005
         SPACE 3
WORKD    DSECT                          RESUME                     U006
RC       DS    F                        RETURN CODE                U012
CLISTSET DS    A                        ADDR OF 'CLISTSET' MODULE  U012
BLANKS   DS    CL80                                                U006
         SPACE 2
SETPARM  DS    0F                       PARM FOR "CLISTSET"        U012
ECTADDR  DS    A                        -> ECT                     U012
VALADDR  DC    A(VALUE)                 -> VALUE TO BE SET         U012
NAMADDR  DC    A(NAME)                  -> SYMBOLIC VARIABLE NAME  U012
         SPACE 1
NAME     DS    H,CL20                   LENGTH OF NAME, NAME       U012
VALUE    DS    H,CL255                  LENGTH OF VALUE, VALUE     U012
         SPACE 2
          AIF   (&@@U01 EQ 0).NO$TMS2                              U025
         OPENTMC  MF=L                                             U025
*
TMRECORD TMRECORD  ,                                               U025
*
         TMSDSNB  ,                                                U025
*
.NO$TMS2  ANOP                                                     U025
         SPACE 2
DSCBAREA DS    0D                                                  U015
         IECSDSL1 1                                                U015
         ORG   DS1DSSN                  FMT1+45                    U017
DS1USCNT DS    FL3                      ASM2 - USE COUNT           U017
DS1LMDAT DS    XL3    YDD               ASM2 - LAST MODIFY DATE    U017
         ORG   DS1SYSCD                 FMT1+62                    U017
DS1LMID  DS    CL8                      ASM2 - LAST MODIFY ID      U017
          AIF   (&@@ASM2 LT 310).ASM2X1                            U024
         DS    CL1                      ASM2 - wasted for stupidityU024
DS1LMTIM DS    XL2    HHMM              ASM2 - LAST MODIFY TIME    U024
          AGO   .ASM2X2                                            U024
.ASM2X1   ANOP                                                     U024
         ORG   DSCBAREA+80              +2 INTO 4 BYTES RESERVED   U017
DS1LMTIM DS    XL2    HHMM              ASM2 - LAST MODIFY TIME    U017
.ASM2X2   ANOP                                                     U024
         ORG   ,                                                   U017
         SPACE 2
         DS    0D                                                  U015
         IECSDSL1 3                                                U015
         SPACE 2
IOSPARM  DC    A(IOSWORK,IOSDVCLS,IOSAUCB+X'80000000')             U020
IOSAUCB  DC    A(0)                     IOSVSUCB returned UCB addr U020
IOSDVCLS DC    AL1(UCB3DACC)            IOSVSUCB DASD device class U020
IOSWORK  DC    XL100'00'                IOSVSUCB service work area U020
         SPACE 2
         DS    9XL140                   SPACE FOR UP TO 127 XTNTS  U015
         SPACE 2
WORKLEN  EQU   *-WORKD                                             U006
         SPACE 3
         PRINT NOGEN                                               U020
         IKJCPPL
         IKJPPL
         IKJIOPL
         CVT  DSECT=YES                                            U020
         IEFUCBOB ,                                                U020
         END
