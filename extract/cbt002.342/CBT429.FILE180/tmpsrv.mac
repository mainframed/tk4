***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1988 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.  (Please see reason mentioned       *
*        below.)                                                      *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.  (Please see reason        *
*        mentioned below.)                                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1.3, w/DFP 3.2),   *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc!ldw                                                *
*                                                                     *
*          (213) 740-2875 (direct -- 11 am to 7 pm Pacific time)      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, 714, or 310.  Sorry.                                  *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
         TITLE 'T M P S R V   -- TSO COMMAND ATTACHER SERVICE'
*---------------------------------------------------------------------*
*                                                                     *
*  Updates:                                                           *
*  10Apr88  U009 LDW  Fix for MVS/XA                                  *
*  05SEP86  U008 LDW  FIX ERROR IN BXLE IN STAE ROUTINE               *
*                     CHANGE ALL STAE TO ESTAE                        *
*  06/27/84 U007 LDW  SPECIFY ATTACH SVC # VIA SYSPARM, TO ALLOW USE  *
*                        OF EXXON ATTACH SVC WITOUT SOURCE CHANGES    *
*  04/23/84 U006 SDM  ADD ALPAQ SCAN TO LPA SCAN LOGIC                *
*                     DELETE EXIT MACRO                               *
*  08/04/83 U005 LDW  PUT RETURN CODE IN 'ERROR READING STACK' MSG    *
*  05/24/83 U004 LDW  GET COMMAND'S RETURN CODE FROM TCBCMP, NOT ECB  *
*                     SAVE EACH RETURN CODE IN ECT, IN CASE WE ARE    *
*                       EXECUTING COMMANDS IN A CLIST                 *
*  10/22/82 U003 LDW  ADD LPA SCAN                                    *
*                     CONVERT 'TIME' TO 'IKJEFT25'                    *
*                     DELETE ALL &UCLA CODE (FOR CCN/MVT)             *
*                     REMOVE TSFIND MACRO                             *
*                     SHARE SP0 EVEN IF UNDER 'TEST'                  *
*                     MISCELLANEOUS MINOR CLEANUP                     *
*  08/11/80 U002 LDW  SUPPORT RSAPF=YES ON ATTACH                     *
*  ??/??/78 U001 LDW  CORRECTLY DETERMINE IF COMMAND ABENDED          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*        TMPSRV:  THIS SERVICE WHEN INVOKED BY A TSO USER (VIA THE    *
*                 TMPMAC  MACRO OR VIA LINK) WILL CAUSE A TSO COMMAND *
*                 OR COMMAND PROCEEDURE TO BE EXECUTED AND OPTIONALLY.*
*                 MONITOR ITS EXECUTION.                              *
*                                                                     *
*        INPUT:   R1  -  ADDRESS OF PARAMETER LIST                    *
*                 R13 -  SAVEAREA                                     *
*        OUTPUT:  R15 -  RETURN CODES: 0 - TMPSRV NORMAL RETURN       *
*                                      4 - COMMAND NOT FOUND          *
*                                      8 - ATTENTION SIGNALED         *
*                                     12 - NOT ENOUGH CORE            *
*                                     16 - COMMAD ABENDED             *
*                                     20 - ERROR WHILE PROCESSING     *
*                                          STACK                      *
*                                                                     *
*        PARAMETER LIST:                                              *
*            0    AL1(FLAGS),AL3(JOBLIB_DCB)                          *
*            4    AL1(LENGTH),AL3(COMMAND_LINE)/AL4(PGM_NAME)         *
*            8    AL1(FLAGS1),AL3(TASKLIB DCB)                        *
*           12    AL4(RETURN/COMPLETION CODE)/PARM_ADDR FOR PGM=      *
*           16    AL4(HERALD/REPLY)                                   *
*        FLAGS:                                                       *
*                 X'80' - CBUF RATHER THAN CMD                        *
*                 X'40' - RESERVED                                    *
*                 X'20' - CMDLIB=NO, THE CATENATED LINKLIB WILL NOT   *
*                         BE SEACHED.                                 *
*                 X'10' - EXEC=NO, THE COMMAND IS NOT A PROCEEDURE    *
*                 X'08' - SCMD=YES, THE COMMAND IS A SUBCOMMAD        *
*                 X'04' - STAX=NO, ATTENTIONS NOT HANDELED BY         *
*                         TMPSRV.                                     *
*                 X'02' - STACK=NO, TMPSRV WILL NOT EXECUTE FROM THE  *
*                         TSO COMMAND STACK.                          *
*                 X'01' - CMDFAIL=NOMSG, NO ERROR MSGS GENERATED.     *
*                                                                     *
*        FLAGS1:  X'80' - PGM=, MOD TO BE CALLED BATCH MODE           *
*                                                                     *
*        ATTRIBUTES: RENT, REUS, REFR, PROB KEY, PROB STATE, ENABLED  *
*                                                                     *
*        PROGRAMMER: PETE NIELSON (PCN)                               *
*                                                                     *
*---------------------------------------------------------------------*
         TITLE 'T M P S R V   -- @GLOBALS'                         U009
         COPY  @GLOBALS                                            U009
         TITLE 'T M P S R V   -- DUMMY SECTIONS'
TMPSRV   CSECT                          ELIMINATE PRIVATE CODE     U002
         REGEQU
TSDSECT  DSECT
TSSAVE   DS    9D                       SAVE AREA
PSCBPTR  EQU   TSSAVE+12
EXTLIST  EQU   TSSAVE+16
ATTLIST  EQU   TSSAVE+16
BLDLLIST DS    F
NAME     DS    CL58
BLDLEN   EQU   *-BLDLLIST
         TSCPPL                         COMMAD PROCESSOR PARM LIST
TSECB    DS    F                        TSO SERVICES ECB
         TSDAPL                         DAIR PARM LIST
DAPB2C   DS    F                        NOT IN USE PARM BLK
DA2CTCB  DS    F                        ADDR OF SUBTASK DCB
DA2CDDN  DS    CL8                      DDNAME
DA2CL    EQU   *-DAPB2C
         TSIOPL                         GETLINE PARM LIST
GETBLK   DS    2F
         TSCSPL
STAXB    STAX  STAXIT,REPLACE=NO,MF=L
STAXBL   EQU   *-STAXB
TMPBLK   TMPMAC CMD=(0,0),MF=L,DCB=0,EXEC=NO
STAEB    ESTAE STAEXIT,PARAM=0,MF=L                                U008
STAEBL   EQU   *-STAEB
ATTSF    ATTACH  SF=L                                              U003
DWD      DS    D                                                   U005
MSG      DS    0CL80                                               U005
BUF      DS    0H                       PSEUDO CMD BUFFER
BUFLEN   DS    H                        LENGTH OF BUFFER
BUFOFF   DS    H                        OFFSET TO OPERANDS
BUFTEXT  DS    CL256                    TEXT
WORK     EQU   *-8
STACKBLK DS    F                        PTR TO INITIAL STACK BLK
STACKREC DS    F                        PTR TO INITIAL STACK RECORD
PARMPTR  DS    F                        PTR TO PARM PTR
BASEPTR  DS    F                        PTR TO MAIN PGM BASE
ATTECB   DS    F                        ATTACH ECB
OLDNAME  DS    CL8                      ORIG ECT CMDNAME
OLDNAME1 DS    CL8                      ORIG ECT SCMDNAME
FLG      DS    X                        FLAGS
ATTNF    EQU   X'80'
DETF     EQU   X'40'                    DETACH NEEDED
ECTPARMF EQU   X'20'                    NOPARM BIT IN INIT ECT
*        EQU   X'10'                    UNUSED                     U003
*        EQU   X'08'                    UNUSED                     U003
*        EQU   X'04'                    UNUSED                     U003
EXECF    EQU   X'02'                    CMD IS BEING 'EXEC' ED
RECURSF  EQU   X'01'                    PREVENT BLDL RECURSION
FLG1     DS    X
STKF     EQU   X'80'                    STACK PROCESSED
TSTF     EQU   X'40'                    EXECUTING UNDER TEST
STAIFLAG DS    X                        255=STAI ROUTINE EXEC'D    U001
TSDSECTL EQU   *-TSDSECT
         SPACE 3
PARMS    DSECT PARMS PASSED BY CALLER
PARMFLG  DS    0X                       FLAGS
CBUF     EQU   X'80'                    CBUF RATHER THAN CMD
*        EQU   X'40'                    RESERVED
NOCMDLIB EQU   X'20'                    CMDLIB=NO
NOEXEC   EQU   X'10'                    EXEC=NO
YESSCMD  EQU   X'08'                    SCMD=YES
NOSTAX   EQU   X'04'                    STAX=NO
NOSTACK  EQU   X'02'                    STACK=NO
NOMSG    EQU   X'01'                    CMDFAIL=NOMSG
PARMDCB  DS    A                        ADD OF JOBLIB DCB
PARMPGM  DS    0A                       ADDR OF PGM NAME
PARMLEN  DS    0X                       LNTH OF CMD
PARMCMD  DS    A                        ADD OF CMD STRING
PARMFLG1 DS    0X                       MORE FLAGS
PGM      EQU   X'80'                    MOD TO BE CALLED BATCH MODE
PARMTDCB DS    A                        ADD OF TASKLIB DCB
PARMPARM DS    0A                       ADD OF PARM FOR PGM= MODE
PARMRC   DS    F                        COMPLETION RETURN CODE
PARMHRLD DS    F                        HERALD PTR
PARMRPLY EQU   PARMHRLD
         SPACE 3
RLGB     DSECT RELOGON BUFFER
RLGBRLD  DS    256X                     CMD BUF
RLGBECT  DS    A                        ECT ADDR
         DS    A                        RESERVED
         SPACE 3
LSD      DSECT LIST SOURCE DESCRIPTOR
LSDATA   DS    A                        ADDR OF IN STORAGE LIST
LSDRLEN  DS    H                        RECORD LNTH
LSDTLEN  DS    H                        TOT LIST LNTH
LSDNXT   DS    A                        ADDR OF NXT REC
LSDRSVD  DS    A                        RESERVED
         PRINT NOGEN                                               U004
         IEZATTCH  ,                                               U003
         CVT   DSECT=YES                                           U003
         IKJTCB
         IKJECT
         IKJPSCB
         IEZJSCB  ,                                                U002
         IHAPSA  ,                                                 U002
         IHACDE                                                    U006
         DCBD  DSORG=PO,DEVD=DA
         PRINT GEN                                                 U004
         TITLE 'T M P S R V - ENTRY, INITIALIZATION'
         SPACE 2
TMPSRV   CSECT
         SAVE  (14,12),,TMPSRV_&SYSDATE._&SYSTIME  Save registers  U009
         LR    R12,R15                  SAVE BASE
         USNGX TMPSRV,R12
         LR    R11,R1                   SAVE PTR TO PARM LIST
         USNGX PARMS,R11
         GETMAIN R,LV=TSDSECTL,SP=1     BUY CORE FOR WORK AREA
         XC    0(256,R1),0(R1)          ZERO IT
         XC    256(256,R1),256(R1)
         XC    512(TSDSECTL-512,R1),512(R1)
         ST    R13,4(,R1)               HSA
         ST    R1,8(,R13)               LSA
         LR    R13,R1                   ESTABLISH NEW SAVE AREA
         USNGX TSDSECT,R13
         ST    R11,PARMPTR              STORE PTR TO PARMSFOR EXITS
         ST    R12,BASEPTR              AND BASE ADDRESS
         MVI   STAIFLAG,0               INIT FLAG                  U001
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                          BUILD CPPL                                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         EXTRACT PSCBPTR,'S',FIELDS=PSB,MF=(E,EXTLIST)
         L     R4,PSCBPTR               PTR TO PSCB
         L     R3,PSCBUPT-PSCB(,R4)     PTR TO UPT
         L     R5,PSCBRLGB-PSCB(,R4)    PTR TO RELOGON BUFFER
         L     R5,RLGBECT-RLGB(,R5)     PTR TO ECT
         LR    R10,R5                   SAVE PTR
         USNGX ECT,R10
         STM   R3,R5,CPPLUPT
         LA    R2,BUF                   GET ADD OF PSEUDO BUFFER
         ST    R2,CPPLCBUF              STORE IN PARM LIST
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                      BUILD TSO SERVICES PARM LISTS                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         LR    R4,R3                    MOVE REGS FOR CONVIENIENCE
         XC    TSECB(4),TSECB           CLEAR TSO SERVICES ECB
         LA    R6,TSECB                 GET TSO SERVICES ECB ADDR
         SPACE 1
*        SET UP CSPL
         SPACE 1
         STM   R4,R6,CSPLUPT
         LA    R1,CSFLG
         ST    R1,CSPLFLG
         LA    R1,CSOA
         ST    R1,CSPLOA
         ST    R2,CSPLCBUF
         SPACE 1
*        SET UP DAPL
         SPACE 1
         STM   R4,R6,DAPLUPT
         MVC   DAPLPSCB(4),PSCBPTR
         LA    R1,DAPB2C
         ST    R1,DAPLDAPB
         XC    DAPB2C(DA2CL),DAPB2C     CLEAR BLK
         MVI   DAPB2C+1,X'2C'           MOVE IN FCTN CODE
         MVC   DA2CDDN(8),=CL9' '       AND NULL DDN
         SPACE 1
*        SET UP IOPL
         SPACE 1
         STM   R4,R6,IOPLUPT
         LA    R1,GETBLK
         ST    R1,IOPLIOPB
         XC    GETBLK(8),GETBLK
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*            FIND CURRENT PLACE IN STACK                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         L     R1,ECTIOWA               GET ADD OF IOSRL
         L     R2,0(,R1)                GET ADD OF TOP ELE OF STACK
         ST    R2,STACKBLK              STORE FOR FUTURE REF
         CLC   1(3,R2),=XL3'0'          SEE IF A TERM ELE
         BNE   L1
         MVC   STACKREC(4),0(R2)        IF SO COPY THE ELEMENT
         B     L2
L1       L     R2,0(,R2)                GET ADD OF LSD
         MVC   STACKREC(4),LSDNXT-LSD(R2) SAVE CURRENT RECORD PTR
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                 SET UP INITIAL INPUT BUFFER                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
L2       TM    PARMFLG1,PGM             SEE IF BATCH MODE(PGM =)
         BO    L2C                      IF SO NO CBUF
         TM    PARMFLG,CBUF             SEE IF USING CBUF FORM
         BNO   L2A
         L     R2,PARMCMD               GET ADD OF CBUF
         LH    R1,0(,R2)                GET LNTH OF BUFFER         U003
         SH    R1,2(,R2)                ADJUST FOR OFFSET          U003
         SH    R1,=H'5'                 ADJUST FOR HDR AND EXEC    U003
         AH    R2,2(,R2)                ADJUST FOR OFFSET
         LA    R2,4(,R2)                ADJUST FOR HEADER
         B     L2B
L2A      XR    R1,R1                    CLEAR REG                  U003
         IC    R1,PARMLEN               GET CMD LNTH               U003
         BCTR  R1,0                     DECREMENT FOR EXECUTE      U003
         L     R2,PARMCMD               GET ADD OF CMD STRING
L2B      EX    R1,*+4                   MOVE IN TEXT               U003
         MVC   BUFTEXT(*-*),0(R2)       << EXECUTED >>
         LA    R1,5(,R1)                ADJUST LNTH FOR HEADER     U003
         STH   R1,BUFLEN                STORE LNTH                 U003
         XC    BUFOFF(2),BUFOFF         ZERO OFFSET
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                   STORE INITIAL CONDITION OF THE ECT                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
L2C      MVI   FLG,0                    INIT FLG TO ZERO
         TM    ECTSWS,ECTNOPD           SEE IF NO PARMS FLG ON
         BNO   *+8
         OI    FLG,ECTPARMF             STORE THE BIT
         MVC   OLDNAME(8),ECTPCMD
         MVC   OLDNAME1(8),ECTSCMD
         MVC   ECTRCDF(4),=XL4'0'       ZERO RETURN CODE FIELD
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*        FIND OUT IF WE ARE UNDER TEST                                *
*                                                                     *
*---------------------------------------------------------------------*
        SPACE 2
         MVI   FLG1,0                   ZERO THE FLAG
*U003    TSFIND TCB,R1                  POINT TO TCB
         L     R1,16                    -> CVT                     U003
         L     R1,0(,R1)                -> DISPATCH                U003
         L     R1,4(,R1)                -> MY TCB                  U003
         SPACE 1
L2D      TM    TCBTRN-TCB(R1),TCBTCP    UNDER TEST?
         BO    L2E                      IF SO SET FLG AND EXIT
         L     R1,TCBOTC-TCB(,R1)       POINT TO MOTHER
         LA    R1,0(,R1)                CLEAR HIGH BYTE
         LTR   R1,R1                    SEE IF MOTHERLESS
         BNZ   L2D                      IF NOT TEST BIT
         B     L2F                      IF SO EXIT LOOP
L2E      OI    FLG1,TSTF                SET UNDER TEST BIT
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                 SET UP STAE EXIT                                    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
L2F      XC    STAEB(STAEBL),STAEB
         L     R15,=A(STAEXIT)
         ESTAE (15),MF=(E,STAEB),PARAM=(13)                        U008
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                      SET UP ATTENTION EXIT IF CALLER WANTS ONE.     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         TM    PARMFLG,NOSTAX           SEE IF NONE NECCESSARY
         BO    SCAN                     IF NOT SKIP IT
         XC    STAXB(STAXBL),STAXB      CLEAR BLOCK
         L     R14,=A(STAXIT)
         OC    PARMHRLD(4),PARMHRLD     SEE IF A TALKATIVE EXIT
         BZ    L3
         L     R3,PARMHRLD              GET ADD OF HERALD STRING
         LH    R4,0(,R3)                GET LNTH OF HERALD STRING
         LA    R3,2(,R3)                PT TO HERALD TEXT
         STAX  (R14),REPLACE=NO,USADDR=(13),OBUF=((3),(4)),            X
               IBUF=(BUFTEXT,256),MF=(E,STAXB)
         B     SCAN
L3       STAX  (R14),REPLACE=NO,USADDR=(13),MF=(E,STAXB)
         TITLE 'T M P S R V - FIND COMMAND AND GET IT DONE'
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*        SYNTAX CHECK COMMAND                                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SCAN     TM    FLG,ATTNF                SEE IF ATTN SIGNALED
         BO    RC8
         NI    FLG,ECTPARMF             CLEAR FLAGS
         XC    CSFLG(4),CSFLG           SPECIFY SYNTAX CHECKING
         TM    PARMFLG1,PGM             SEE IF BATCH MODE
         BNO   SCAN01                   IF NOT TO SCAN
         L     R1,PARMPGM               IF SO FAKE SCAN
         ST    R1,CSOACNM               STORE PTR TO NAME
         MVC   CSOALNM(2),=H'8'         MOVE IN LNTH
         B     SCAN02                   AND DO REST OF PROCESSING
SCAN01   LA    R1,CSPL                  GET PARM LIST FOR CMD SCAN
         LINK  EP=IKJSCAN               SCAN THE CMD
         BXH   15,15,RC4X
         TM    CSOAFLG,CSOAVWP+CSOAVNP  SEE IF VALID CMD
         BZ    RC4X
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*       SEE IF THIS IS A % COMMAND;  CHECK FOR DISALLOWED COMMANDS    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SCAN02   MVC   NAME(9),=CL9' '          BLANK CMD NAME
         L     R7,CSOACNM               GET PTR TO CMD NAME
         LH    R2,CSOALNM               GET LNTH
         BCTR  R2,0                     DECREMENT FOR EXECUTE
         EX    R2,*+4                   MOVE IN CMD NAME
         MVC   NAME(*-*),0(R7)          << EXECUTED >>
         CLC   NAME(8),=CL8'LOGOFF'     DO NOT PERMIT LOGOFF
         BE    RC4
         CLC   NAME(8),=CL8'LOGON'      OR LOGON TO BE EXECUTED
         BE    RC4
         CLC   NAME(8),=CL8'TEST'       DO NOT PERMIT TEST EITHER
         BE    RC4
         CLC   NAME(8),=CL8'TIME'       TIME COMMAND DOES NOT      U003
         BNE   SCAN04                   REALLY EXIST               U003
         TM    CSOAFLG,CSOAEXEC         '%TIME' ?                  U003
         BO    SCAN04                   YES - SKIP                 U003
         MVC   NAME(8),=C'IKJEFT25'     PUT IN REAL NAME OF 'TIME' U003
SCAN04   XR    R8,R8                    ZERO DCB REG JUST IN CASE
         TM    CSOAFLG,CSOAEXEC         CHECK FOR '%CMD'           U003
         BNO   SCAN05                   SKIP IF NOT CLIST          U003
         OI    FLG,EXECF                MARK IT                    U003
         XC    BUFOFF(2),BUFOFF         TELL EXEC IT IS IMPLICIT
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        UPDATE THE ECT AS APPROPRIATE                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SCAN05   LA    R1,NAME                  POINT TO NAME
         MVC   ECTSCMD(8),0(R1)
         TM    PARMFLG,YESSCMD
         BO    SCAN06
         MVC   ECTPCMD(8),0(R1)
*U003    MVC   ECTSCMD(8),=CL8'HELP'
         MVC   ECTSCMD(8),=CL8'*TMPSRV*'                           U003
         NI    ECTSWS,X'FF'-ECTNOPD
         TM    CSOAFLG,CSOAVNP
         BNO   *+8
         OI    ECTSWS,ECTNOPD
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*      DETERMINE CORRECT DCB TO SEARCH FOR CMD                        *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SCAN06   MVC   ATTSF(ATTSFL),ATTSFDC    SET UP ATTACH PARMLIST     U003
         LA    R9,ATTSF                 -> PARMLIST                U003
         USING ATTCHLST,R9              SET UP DSECT               U003
         LA    R0,NAME                  -> EPLOC=/DE=              U003
         ST    R0,ATPGNADA              SET INTO ATTACH PARMLIST   U003
         L     R8,PARMDCB               GET USER DCB
         LA    R8,0(,R8)                CLEAR FLGS
         LTR   R8,R8                    SEE IF THERE
         BNZ   SCAN09
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*      DETERMINE IF THE MODULE IS IN LPA                          U003*
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
          AIF   (&@@SPLVL GE 200).XA1                              U009
SCAN07   NI    ATDEFLAG,255-ATDENTRY    TURN OFF "DE=" FLAG        U003
          AGO   .XA2                                               U009
.XA1      ANOP                                                     U009
SCAN07   NI    ATFLAGS2,255-ATNDENT     TURN OFF "DE=" FLAG        U009
.XA2      ANOP                                                     U009
         L     R3,CVTPTR                GET CVT ADDRESS            U003
         L     R1,CVTQLPAQ-CVTMAP(,R3)  -> -> LPAQ                 U006
         L     R1,0(,R1)                -> RECENT ACTIVE LPA CDE   U006
         USING CDENTRY,R1                                          U006
SCAN07L  CLC   CDNAME,NAME              IS THIS OUR MODULE?        U006
         BE    SCAN10                   YES, THEN IT EXISTS        U006
         ICM   R1,B'1111',CDCHAIN       -> NEXT CDE                U006
         BNZ   SCAN07L                  ANOTHER ONE AVAILABLE      U006
         DROP  R1                       CDENTRY                    U006
         LM    R0,R1,NAME               GET MODNAME FOR ROUTINE    U003
         L     R15,CVTLPDSR-CVTMAP(,R3) GET ADDRESS OF ROUTINE     U003
         STM   R14,R12,12(R13)          SAVE ALL REGISTERS         U003
* R0, R1, R3, AND R14 MUST BE SET.
         BALR  R14,R15                  CALL ROUTINE               U003
* R0 RETURNS LPDE ADDRESS IF FOUND. R6, R8 AND R9 ARE ALTERED.
* RETURN TO R14+0 IF FOUND, R14+4 IF NOT.
         B     SCAN10L                  +0 RETURN = FOUND IN LPA   U003
*                                       +4 RETURN = NOT   IN LPA   U003
         LM    R14,R12,12(R13)          RESTORE ALL REGISTERS      U003
          AIF   (&@@SPLVL GE 200).XA3                              U009
         OI    ATDEFLAG,ATDENTRY        INDICATE "DE="             U003
          AGO   .XA4                                               U009
.XA3      ANOP                                                     U009
         OI    ATFLAGS2,ATNDENT         INDICATE "DE="             U009
.XA4      ANOP                                                     U009
         XR    R8,R8                    ZERO DCB REC FOR DRILL
         OI    FLG,RECURSF              PREVENT BLDL RECURSION
         TM    PARMFLG,NOCMDLIB         SEE IF CMDLIB TO BE USED
         BNO   SCAN09                   IF SO USE IT
         SPACE 2
SCAN08   TM    PARMFLG,NOEXEC           SEE IF EXEC=NO
         BO    RC4
         TM    PARMFLG1,PGM             SEE IF BATCH MODE
         BO    RC4                      IF SO NO EXEC
         MVC   NAME(8),=CL8'EXEC'
         XC    BUFOFF(2),BUFOFF
         OI    FLG,EXECF                TURN ON EXEC FLAG
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*      DCB FOUND,  DO BLDL ON IT                                      *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SCAN09   MVC   BLDLLIST(4),=AL2(1,58)   SET UP BLDL LIST
         XC    NAME+8(58-8),NAME+8
         BLDL  (R8),BLDLLIST            DO THE BLDL
         BXLE  15,15,SCAN10             IF OK DO ATTACH
         TM    FLG,RECURSF+EXECF        SEE IF WE                  U003
         BZ    SCAN07                   CAN TRY ANOTHER DCB
         TM    FLG,EXECF                SINCE EXEC IS THE LAST THING WE
         BO    RC4                      DO IF THIS IS ON WE EXIT
         TM    FLG,RECURSF              CHECK FOR SECOND DCB SEARCH
         BO    SCAN08                   IF SO MABY WE CAN EXEC IT
         B     RC4
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*    SUCCESSFUL BLDL,DO BOOKKEEPING AND ATTACH THE CMD                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
SCAN10L  LM    R14,R12,12(R13)          RESTORE ALL REGISTERS      U003
*SCAN10  LA    R1,NAME                  PT TO CMD NAME
*U003    O     R1,=XL4'80000000'        TELL TSIP IT'S PRE-ATTACH
*U001    TSEVENT  PPMODE
*U003    TM    FLG1,TSTF                UNDER TEST?
*U003    BO    SCAN10A                  IF SO SHARE SP 0
*U003    MVC   ATTSF(ATTSFL),ATTSFDC    IF NOT DONT SHARE SP0
*U003    B     SCAN10B
*SCAN10A MVC   ATTSF(ATTSF1L),ATTSF1DC  SHARE SP0
         SPACE 1
*SCAN10B XC    ATTECB(4),ATTECB         CLEAR THE ECB
SCAN10   XC    ATTECB(4),ATTECB         CLEAR THE ECB              U003
         L     R7,PARMTDCB              PT TO TASKLIB DCB
         L     R2,=A(STAIEXIT)          GET STAI EXIT ADDRESS
         SPACE 2
         LA    R5,CPPL                  GET PARM ADDR              U003
         TM    PARMFLG1,PGM             SEE IF IN PGM MODE
         BNO   SCAN11
         L     R5,PARMPARM              GET PARM ADDR              U003
         NI    PARMFLG1,X'FF'-PGM       TURN OFF PGM MODE
         SPACE 2
SCAN11   TESTAUTH  FCTN=1               ARE WE APF AUTHORIZED?     U002
         SPACE 1
         SR    R4,R4                    ASSUME NOT, SET FLAG       U002
         LTR   R15,R15                  WELL?                      U002
         BNZ   SCAN11A                  NO - GO DO THE ATTACH      U002
*U003    LTR   R8,R8                    USING A DCB?               U002
*U003    BNZ   SCAN11A                  YES - DON'T BE PRIVILEGED, U002
*                                       SO RSAPF=YES WILL BE IGNORED
         USING PSA,R0                                              U002
         L     R1,PSATNEW               -> TCB                     U002
         DROP  R0                                                  U002
         USING TCB,R1                                              U002
**TEST%% L     R1,TCBJSTCB              -> JSTCB                   U002
         LTR   R1,R1                    %%TEST%%                   U002
         BNZ   *+8                      %%TEST%%                   U002
         EX    0,*                      %%TEST%%                   U002
         L     R4,TCBJSCB               -> JSCB                    U002
         LTR   R4,R4                    %%TEST%%                   U002
         BNZ   *+8                      %%TEST%%                   U002
         EX    0,*                      %%TEST%%                   U002
         DROP  R1                                                  U002
         USING IEZJSCB,R4                                          U002
**TEST%% L     R4,JSCBACT               -> ACTIVE JSCB             U002
         LTR   R4,R4                    %%TEST%%                   U002
         BNZ   *+8                      %%TEST%%                   U002
         EX    0,*                      %%TEST%%                   U002
         SPACE 1
         MODESET  KEY=ZERO              GET KEY 0                  U002
         SPACE 1
         NI    JSCBOPTS,255-JSCBAUTH    TURN OFF APF AUTHORIZATION U002
         SPACE 1
         MODESET  KEY=NZERO,MODE=SUP    NORMAL KEY, SUPR MODE      U002
*                                       SUPERVISOR MODE IS USED HERE
*                                       SO WE WILL BE ABLE TO DO THE
*                                       MODESET LATER ON, SINCE THE
*                                       JSCBAUTH FLAG IS NOW OFF.
         SPACE 2
*U003    ATTACH SF=(E,ATTSF),MF=(E,(R5)),DCB=(R8),TASKLIB=(R7),    U003$
               RSAPF=YES,                                          U002$
               DE=NAME,ECB=ATTECB,STAI=((R2),(R13))
         SPACE 1
         OI    ATFLAGS1,ATRSAPF         SET RSAPF=YES              U003
*U003    B     SCAN12                   CONTINUE                   U002
         SPACE 2
*SCAN11A ATTACH SF=(E,ATTSF),MF=(E,(R5)),DCB=(R8),TASKLIB=(R7),        $
               DE=NAME,ECB=ATTECB,STAI=((R2),(R13))
SCAN11A  ATTACH SF=(E,ATTSF),MF=(E,(R5)),DCB=(R8),TASKLIB=(R7),        $
               ECB=ATTECB,STAI=((R2),(R13))                        U003
          AIF   ('&SYSPARM' EQ '').SVCOK1                          U007
         ORG   *-2                      BACK OVER THE SVC          U007
         SVC   &SYSPARM                                            U007
.SVCOK1   ANOP                                                     U007
         SPACE 2
SCAN12   ST    R1,DA2CTCB               STORE TCB ADDR
         OI    FLG,DETF                 DETACH NECCESSARY
         WAIT  ECB=ATTECB               WAIT FOR SUBTASK TO COMPLETE
         LTR   R4,R4                    WERE WE APF AUTHORIZED?    U002
         BZ    SCAN12A                  NO - SKIP                  U002
         SPACE 1
         MODESET  KEY=ZERO,MODE=PROB    KEY ZERO, PROB STATE       U002
         SPACE 1
         OI    JSCBOPTS,JSCBAUTH        TURN APF AUTH BACK ON      U002
         DROP  R4                                                  U002
         SPACE 1
         MODESET  KEY=NZERO             RETURN TO MY NORMAL KEY    U002
         SPACE 2
SCAN12A  MVC   PARMRC(4),ATTECB         COPY POST CODE
         LA    R1,OLDNAME               DO POST ATTACH ACCOUNTING
*U001    TSEVENT  PPMODE
         TM    FLG,DETF                 SEE IF DETACH NEEDED
         BNO   RC8                      IF NOT MUST HAVE HAD ATTN
         LA    R1,DAPL                  MARK FILES NOT IN USE
         LINK  EP=IKJDAIR
         L     R1,DA2CTCB               GET TCB ADDR
         L     R2,TCBCMP-TCB(,R1)       GET THE COMPLETION CD
         ST    R2,PARMRC                SAVE RETURN/ABEND CODE     U004
         OI    ECTRCDF,X'80'            ASSUME ABEND               U004
         STCM  R2,B'0111',ECTRTCD       SAVE FOR USE VIA &LASTCC   U004
         CLI   STAIFLAG,0               ABEND FLAG SET?            U001
         BNE   RC16                     YES - ...                  U001
         NI    ECTRCDF,255-X'80'        NO - TURN OFF FLAG         U004
         DETACH DA2CTCB,STAE=NO
         NI    FLG,X'FF'-DETF           TURN OFF DETACH NEEDED FLG
         TM    PARMFLG,NOSTACK          SEE IF NOT EXECUTING STACK
         BO    EXIT                     IF NOT FINISHED
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                SEE IF BACK TO ENTERING POSITION IS STACK            *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
READCHK  L     R1,ECTIOWA               GET ADD PF IOSRL
         L     R2,0(,R1)                GET ADD OF TOP ELE OF STACK
         CLC   1(3,R2),=XL3'0'          SEE IF A TERM ELE
         BE    READCHK2                 IF SO ASSUME FINISHED
         C     R2,STACKBLK              IF NOT SEE IF MATCH
         BE    READCHK1
         BH    READLINE
         B     READCHK2
READCHK1 L     R2,0(,R2)                POINT TO LSD
         CLC   STACKREC(4),LSDNXT-LSD(R2) SEE IF RECORDS MATCH
         BH    READLINE                 IF NOT CONTINUE
READCHK2 OI    FLG1,STKF                MARK STACK AS PROCESSED
         B     EXIT                     AND EXIT
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                          READ A LINE FROM THE STACK                 *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
READLINE XC    GETBLK(8),GETBLK         CLEAR GETLINE PARM BLK
         GETLINE PARM=GETBLK,INPUT=(ISTACK,LOGICAL),                   X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'16'               SEE IF AN EOD ON LIST
         BE    READCHK                  IF SO GOTO NXT LST ELE
         CH    R15,=H'4'                MAKE SURE LINE CAME FROM STACK
         BNE   RC20A                                               U005
         L     R1,GETBLK+4              GET ADD OF RTN
         LH    R2,0(,R1)                GET LNTH
         BCTR  R2,0                     DECREMENT FOR EXECUTE
         EX    R2,*+4
         MVC   BUF(1),0(R1)             MOVE TO MY BUFFER
         LA    R2,1(,R2)                GET REAL LNTH
         FREEMAIN R,A=(R1),LV=(R2),SP=1 FREE THE CORE
         B     SCAN                     AND PROCESS THIS LINE
         TITLE 'T M P S R V - RETURNS'
*---------------------------------------------------------------------*
*                                                                     *
*           NORMAL EXIT                                               *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
EXIT     BAL   R7,CLEANUP               CLEAN UP THE MESS
         SR    R15,R15                  RC=0
RETURN   LR    R1,R13                   ADDRESS FOR FREEMAIN       U006
         L     R13,4(,R13)              BACK DOWN SAVE AREA CHAIN  U006
         ST    R15,16(,R13)             STORE RETCODE FOR CALLER   U006
         FREEMAIN  R,LV=TSDSECTL,SP=1,A=(1)  FREE DYNAMIC STORAGE  U006
         RETURN  (14,12)                RETURN TO CALLER           U006
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                  COMMAND NOT FOUND                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
RC4      TM    PARMFLG,NOMSG            SEE IF WE ARE GIVING MSGS
         BO    RC4A                     IGF NOT SKIP MSG GENEREATION
         MVC   BUF(CMNFMSGL),CMNFMSG    MOVE IN PLATTEN
         MVC   CMNFV-CMNFMSG+BUF(8),NAME MOVE IN THE COMMAND NAME
         LA    R1,BUF                   GET MSG ADD
         LA    R0,CMNFMSGL              GET LNTH
         TPUT  (1),(0),R                OUTPUT THE MSG
RC4A     BAL   R7,CLEANUP               CLEAN UP THE MESS
         LA    R15,4                    RC=4
         B     RETURN
RC4X     TM    PARMFLG,NOMSG            SEE IF GIVING MSGS
         BO    RC4A                     IF NOT RETURN TO CALLER
         LA    R1,SYNMSG                GET ADD OF MSG
         LA    R0,L'SYNMSG              GET LNTH OF MSG
         TPUT  (1),(0),R                OUTPUT THE MSG
         B     RC4A                     RETURN
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                 ATTENTION SIGNALED                                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
RC8      OC    PARMHRLD(4),PARMHRLD     SEE IF A TALKATIVE EXIT
         BZ    RC8A                     IF NOT DON'T WORRY ABOUT RPLY
         LH    R2,BUFOFF                GET LNTH OF REPLY
         LA    R2,2(R2)                 ADJUST LNTH FOR HEADER
         GETMAIN R,LV=(R2),SP=1         GET CORE FOR REPLY
         ST    R1,PARMRPLY              STORE ADD FOR CALLER
         BCTR  R2,0                     DECREMENT FOR EXECUTE
         EX    R2,*+4
         MVC   0(1,R1),BUFOFF           MOVE IN RPLY
RC8A     BAL   R7,CLEANUP               CLEANUP THE MESS
         LA    R15,8                    RC=8
         B     RETURN                   RETURN TO CALLER
         SPACE 2
*---------------------------------------------------------------------*
*
*                   NOT ENOUGH CORE TO LOAD MODULE                    *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
RC12     TM    PARMFLG,NOMSG            SEE IF IN MSG MODE
         BO    RC12A                    IF NOT GIVE NO MSG
         MVC   BUF(NCMSGL),NCMSG        MOVE IN PLATTEN
         MVC   NCMSGV-NCMSG+BUF(8),NAME MOVE IN CMD NAME
         LA    R1,BUF                   GET MSG ADD
         LA    R0,NCMSGL                GET MSG LNTH
         TPUT  (1),(0),R                OUTPUT IT
RC12A    BAL   R7,CLEANUP1              CLEAN UP THIS MESS
         LA    R15,12                   RC=12
         B     RETURN                   RETURN TO CALLER
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                   COMMAND ABENDED                                   *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
RC16     OI    ECTRCDF,X'80'            INDICATE CMD ABENDED
         MVC   PARMRC+1(3),TCBCMPC-TCB(R1) COPY COMPLETION CODE
         TM    PARMFLG,NOMSG            SEE IF IN MSG MODE
         BO    RC16A                    IF NOT GIVE NO MSG
         MVC   BUF(CAMSGL),CAMSG        MOVE IN PLATTEN
         MVC   BUF+CAMSGV(8),NAME       MOVE IN CMD NAME
         UNPK  WORK(7),TCBCMPC-TCB(4,R1)
         TR    WORK(6),TRTBL
         MVC   BUF+CAMSGV1(3),WORK      MOVE IN ABEND CODE
         MVC   BUF+CAMSGV2(3),WORK+3    MOVE IN USER CODE
         LA    R1,BUF                   GET MAG ADD
         LA    R0,CAMSGL                GET LNTH
         TPUT  (1),(0),R                OUTPUT IT
RC16A    DETACH DA2CTCB,STAE=NO         DETACH SUBTASK
         BAL   R7,CLEANUP               CLEAN UP THIS MESS
         LA    R15,16                   RC=16
         B     RETURN                   RETURN TO CALLER
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                   ERROR WHILE PROCCESSING STACK                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
RC20A    LA    R1,C'1'                  INDICATE HOW WE GOT HERE   U005
         B     *+8                      AROUND OTHER 'LA'          U005
         SPACE 1
RC20B    LA    R1,C'2'                  INDICATE HOW WE GOT HERE   U005
         SPACE 1                                                   U005
*RC20    LA    R1,STMSG                 GET MSG ADD
*        LA    R0,L'STMSG               GET MSG LNTH
         MVC   MSG(L'STMSG),STMSG       COPY ERROR MESSAGE PATTERN U005
         STC   R1,MSG+16                SET ERROR POINTER          U005
         CVD   R15,DWD                  GET RETURN CODE            U005
         OI    DWD+7,X'0F'              REMOVE SIGN NIBBLE         U005
         UNPK  MSG+42(2),DWD            UNPACK RETURN CODE TO MSG  U005
         LA    R1,MSG                   -> ERROR MSG               U005
         LA    R0,L'STMSG               GET MSG LNTH               U005
         TPUT  (1),(0),R                OUTPUT IT
         ESTAE 0                                                   U008
         BAL   R7,CLEANUP5              CLEANUP THIS MESS
         LA    R15,20                   RC=20
         B     RETURN                   RETURN TO CALLER
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                   GENERAL CLEANUP ROUTINE                           *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
CLEANUP  ESTAE 0                        CANCEL STAE EXIT           U008
CLEANUP1 TM    PARMFLG,NOSTACK          SEE IF STACK TO BE PROCESSED
         BO    CLEANUP5                 IF NOT SKIP THIS MESS
         TM    FLG1,STKF                SEE IF ALREADY PROCESSED
         BO    CLEANUP5                 IF SO SKIP THIS MESS
         SPACE 2
*---------------------------------------------------------------------*
*                                                                     *
*        FLUSH THE APROPRIATE PART OF THE STACK                       *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
CLEANUP2 L     R1,ECTIOWA               GET ADD OF IOSRL
         L     R2,0(,R1)                GET ADD OF TOP ELE OF STK
         CLC   1(3,R2),=XL3'0'          SEE IF TERM ELE
         BE    CLEANUP5                 IF SO ASSUME FINISHED
         C     R2,STACKBLK              SEE IF MATCH
         BE    CLEANUP3                 IF SO CHECK REC
         BH    CLEANUP4                 IF HIGH MORE TO FLUSH
         B     CLEANUP5                 IF LOW FINISHED
CLEANUP3 L     R2,0(,R2)                POINT TO LSD
         CLC   STACKREC(4),LSDNXT-LSD(R2) CHK RECS
         BNH   CLEANUP5                 IF NOT HIGH THEN FINISHED
CLEANUP4 XC    GETBLK(8),GETBLK         CLEAR GETLINE PARM BLK
         GETLINE PARM=GETBLK,INPUT=(ISTACK,LOGICAL),                   X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'16'               SEE IF EOD ON LST
         BE    CLEANUP2
         CH    R15,=H'4'                MAKE SURE IT CAME FROM STK
         BNE   RC20B                                               U005
         L     R1,GETBLK+4              POINT TO BUFFER
         LH    R2,0(,R1)                GET LNTH
         FREEMAIN R,A=(R1),LV=(R2),SP=1 FREE THE CORE
         B     CLEANUP2
CLEANUP5 NI    ECTSWS,X'FF'-ECTNOPD     TURN OFF NO OPERANDS FLG
         TM    FLG,ECTPARMF             SEE IF IT WAS ORIGINALLY ON
         BNO   *+8                      IF NOT LEAVE IT OFF
         OI    ECTSWS,ECTNOPD           RESTORE ORIG CONDITION OF BIT
         MVC   ECTPCMD(8),OLDNAME       RETORE COMMAND NAME
         MVC   ECTSCMD(8),OLDNAME1      RESTORE SUBCOMMAND NAME
         MVI   PARMRC,0                 CLEAR HIGH BYTE OF RC
         MVC   ECTRTCD(3),PARMRC+1      SAVE RETURN CODE
         TM    PARMFLG,NOSTAX           SEE IF A STAX DONE
         BOR   R7                       IF NOT RETURN
         STAX  ,                        CANCEL STAX EXIT
         BR    R7                       RETURN
         TITLE 'T M P S R V - CONSTANTS'
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*                   CONSTANTS                                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
CMNFMSG  DC    C'COMMAND XXXXXXXX NOT FOUND'
CMNFMSGL EQU   L'CMNFMSG
CMNFV    EQU   CMNFMSG+8
NCMSG    DC    C'NOT ENOUGH CORE TO LOAD COMMAND XXXXXXXX'
NCMSGV   EQU   *-8
NCMSGL   EQU   *-NCMSG
CAMSG    DC    C'COMMAND XXXXXXXX'
CAMSGV   EQU   *-(8+CAMSG)
         DC    C'  SYSTEM XXX'
CAMSGV1  EQU   *-(3+CAMSG)
         DC    C'  USER XXX'
CAMSGV2  EQU   *-(3+CAMSG)
CAMSGL   EQU   *-CAMSG
*STMSG   DC    C'TMPSRV ERROR WHILE READING STACK'
STMSG    DC    C'TMPSRV - ERROR #N WHILE READING STACK (RC=NN)'    U005
SYNMSG   DC    C'INVALID COMMAND SYNTAX'
TRTBL    EQU   *-X'F0'
         DC    C'0123456789ABCDEF'      TMPCMP TRAMSLATE TBL
*TTSFDC  ATTACH DE=0,ECB=0,SHSPV=78,SZERO=NO,SF=L
ATTSFDC  ATTACH EPLOC=0,ECB=0,SHSPV=78,SZERO=NO,SF=L               U003
ATTSFL   EQU   *-ATTSFDC
*TTSF1DC ATTACH DE=0,ECB=0,SHSPV=78,SZERO=YES,SF=L
*TTSF1L  EQU   *-ATTSF1DC
         LTORG
         TITLE 'T M P S R V - STAX EXIT'
*---------------------------------------------------------------------*
*                                                                     *
*              STAX EXIT                                              *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         DROPX R12
STAXIT   LR    R12,R15                  GET BASE
         USNGX STAXIT,R12
         LR    R11,R14                  SAVE RETURN ADDR
         L     R13,8(,R1)               RESTORE PTR TO TSDSECT
         LR    R10,R1                   SAVE PTR TO ATTN INFO
         L     R2,0(,R1)                GET ADD OF TAIE
         L     R1,4(,R10)               SEE IF AN IBUF GIVEN
         LTR   R1,R1
         BZ    STAXIT0                  IF NOT SKIP IMPOSIBLE CHECK
         XR    R15,R15
         CLI   2(R2),0                  SEE IF INTERUPT INTERUPTED
         BNER  R11                      IF SO HAVE SEEN HIGHER POWER
STAXIT0  POST  TSECB                    POST ATTN ECB
         XR    R15,R15                  CLEAR RETURN CD
         L     R1,4(,R10)               SEE IF IBUF SPECIFIED
         LTR   R1,R1
         BZ    STAXIT1                  IF NOT SKIP REPLY HANDELING
         LH    R3,0(,R2)                GET RPLY LNTH
         STH   R3,BUFOFF                STORE FOR CALLER
         LTR   R3,R3                    SEE IF ZERO
         BZ    STAXIT1                  IF SO SKIP RPLY HANDELING
         MVC   BUFOFF(2),0(R2)          COPY RPLY LNTH
STAXIT1  OI    FLG,ATTNF                TURN ON ATTN FLG
         TM    FLG,DETF                 SEE IF DETACH NEEDED
         BNOR  R11                      IF NOT RETURN
         LA    R1,DAPL                  MARK FILES AS UNUSED
         LINK  EP=IKJDAIR
         DETACH DA2CTCB,STAE=YES        DETACH SUBTASK
         NI    FLG,X'FF'-DETF           TURN OFF DETACH NEEDED FLG
         SR    R15,R15
         BR    R11                      RETURN TO CALLER
         DROPX R12
         TITLE 'T M P S R V - STAE AND STAE-RETRY EXITS'
*---------------------------------------------------------------------*
*                                                                     *
*               STAE    EXIT                                          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
         USNGX STAEXIT,R15
STAEXIT  CH    R0,=H'12'                CHECK FOR NO CORE ENTRY
         BE    STAEXITA
         L     R12,0(,R1)               GET PTR TO TSDSECT
         DROPX R13
         USNGX TSDSECT,R12
         LA    R2,STAELST               CHECK ABEND CODE FOR
         LA    R4,2                     NO CORE ABENDS             U008
         LA    R5,STAELSTE                                         U008
STAEXIT1 CLC   5(2,R1),0(R2)
         BE    STAEXIT2
         BXLE  R2,R4,STAEXIT1
STAEXITE MVC   BUF(ABMSGL),ABMSG        MOVE IN PLATTEN
         UNPK  WORK(7),5(4,R1)
         L     R3,=A(TRTBL)
         TR    WORK(6),0(R3)
         MVC   BUF+ABMSGV(3),WORK       MOVE IN ABEND CODE
         MVC   BUF+ABMSGV1(3),WORK+3    MOVE IN USER CODE
         LA    R1,BUF
         LA    R0,ABMSGL
         LR    R11,R14                  SAVE RETURN ADD
         TPUT  (1),(0),R
         XR    R15,R15                  NO RETRY
         BR    R11
STAEXIT2 LA    R0,STAERTRY-STAEXIT(,R15)  GET ADD OR RTRY RTN
         LA    R15,4                    ASK FOR RTRY
         BR    R14
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*         THEN IS STAE ENTRY WHEN IT CAH GET NO CORE                  *
*         CANT DO ANYTHING ABOUT IT SO GO AHEAD AND ABEND             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
STAEXITA LR    R12,R2
         LR    R1,R2
         SH    R1,=H'4'
         B     STAEXITE
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*             STAE EXIT CONSTANTS                                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
STAELST  DC    X'01040E0405060606010A080A'
STAELSTE EQU   *-2
ABMSG    DC    C'TMPSRV ABENDED SYSTEM XXX'
ABMSGV   EQU   *-(3+ABMSG)
         DC    C'  USER XXX'
ABMSGV1  EQU   *-(3+ABMSG)
ABMSGL   EQU   *-ABMSG
         LTORG
         SPACE 3
*---------------------------------------------------------------------*
*                                                                     *
*      STAE RETRY ROUTINE (ENTERED ONLY FOR NO CORE ABENDS)           *
*       RE-ESTABLISH ADDRESSABILITY REGS AND GOTO RC12                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
STAERTRY L     R13,0(,R1)
         USNGX TSDSECT,R13
         L     R12,BASEPTR
         L     R10,CPPLECT
         L     R11,PARMPTR
         FREEMAIN R,LV=104,A=(R1)
         B     RC12-TMPSRV(,R12)
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        STAI EXIT ROUTINE                                            *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
STAIEXIT XR    R0,R0
         L     R15,0(,R1)               -> PRMLST (ASSUME GOT SDWA U001
         MVI   STAIFLAG-TSDSECT(R15),255    SET FLAG               U001
         LA    R15,16                   ASK FOR RETRY
         BR    R14
         END
