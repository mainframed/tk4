***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1987 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.  (Please see reason mentioned       *
*        below.)                                                      *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.  (Please see reason        *
*        mentioned below.)                                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1.3, w/DFP 3.2),   *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc!ldw                                                *
*                                                                     *
*          (213) 740-2875 (direct -- 11 am to 7 pm Pacific time)      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, 714, or 310.  Sorry.                                  *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
OPERCMD  TITLE 'C O M M A N D  --  Issue System Operator Commands V2.1'
***********************************************************************
*                                                                     *
*                           C O M M A N D                             *
*                                                                     *
*                   Issue System Operator Commands                    *
*                                                                     *
*                                                                     *
*     This program accepts system or JES operator commands as         *
*     input and executes them using SVC 34. It must be APF            *
*     authorized.                                                     *
*                                                                     *
*     OPERCMD can operate in one of three modes:                      *
*                                                                     *
*     1) Batch or CALLed program                                      *
*        In this mode OPERCMD accepts input as either 80-byte         *
*        card images from SYSIN or a single command from the PARM     *
*        field. The response to the operator command will             *
*        appear on all operator consoles. For example:                *
*                                                                     *
*           //STEP1    EXEC PGM=OPERCMD,PARM='VARY 017,ONLINE'        *
*                                                                     *
*           - or -                                                    *
*                                                                     *
*           //STEP1    EXEC PGM=OPERCMD                               *
*           //SYSIN    DD *                                           *
*           VARY 017,ONLINE                                           *
*           /*                                                        *
*                                                                     *
*     2) TSO Command Processor                                        *
*        In this mode OPERCMD expects to find the operator command    *
*        directly following on the TSO input line. The response to    *
*        OS commands will then be displayed on the TSO terminal.      *
*        Response to JES commands will appear on all consoles.        *
*        For example:                                                 *
*                                                                     *
*           OPERCMD D T         <--- (Response will appear on CRT)    *
*                                                                     *
*     3) Callable subroutine                                          *
*        In this mode OPERCMD accepts input according to standard     *
*        OS linkage conventions. In addition to the command itself,   *
*        a second parameter may be passed which contains the          *
*        console number where you wish the response to appear.        *
*        (The SVC 34 will also assume the authority of that           *
*        console.) For example:                                       *
*                                                                     *
*           LA       R1,CMDADDR                                       *
*           LA       R15,=V(OPERCMD)                                  *
*           BALR     R14,R15                                          *
*                                                                     *
*           CMDADDR  DC    A(OPERCMD)                                 *
*           CNSADDR  DC    XL1'80',AL3(CONSOLE)                       *
*           OPERCMD  DC    H(3),CL3'D T'                              *
*           CONSOLE  DC    F'5'                                       *
*                                                                     *
*        This would make it appear as if 'D T' were issued from       *
*        console 5. (This method is used by program 'SPY')            *
*                                                                     *
*     Just prior to issuing a command via SVC 34, OPERCMD will        *
*     issue a WTO of the form                                         *
*                                                                     *
*        *** jobname ==> VARY 017,ONLINE                              *
*                                                                     *
*     This will appear on the operator's console and in SYSLOG.       *
*                                                                     *
*     OPERCMD may be used to issue replies to WTORs. Since the        *
*     reply may be sensitive (for example, a password) OPERCMD        *
*     will suppress it whenever a REPLY is issued.                    *
*                                                                     *
*     Author:                                                         *
*       The original version of OPERCMD was written by Mark Sorkin.   *
*       The current version has been heavily modified at SCE.         *
*       Questions and comments may be sent to                         *
*                                                                     *
*          Steve Langley                                              *
*          Southern California Edison                                 *
*          P.O. Box 800                                               *
*          Rosemead, Calif. 91770                                     *
*          1-213-572-3435                                             *
*                                                                     *
*  Updates:                                                           *
*    29Jul87  LDW  Put conditional assembly around ACF2 stuff         *
*                  Fix for XA                                         *
*    12/13/84 LDW  Add '==DELAY==' input statement for 5 second dalay *
*                  If TSO, check that user has "OPER" privilege       *
*                  If STC, allow use                                  *
*                  If JOB, check that user has "OPER" by looking at   *
*                     the ACF2 LIDREC (if ACF2 not up, allow use)     *
*                  Change all USING/DROP to USNGX/DROPX               *
*    07/11/84 LDW  Rename from COMMAND to OPERCMD because we already  *
*                     a TSO command called "COMMAND" (Also have a     *
*                     program called OPERCMD, but this one's          *
*                     upward compatible)                              *
*                  Change format of WTOs                              *
*                  Accept any LRECL input dataset (RECFM=FB)          *
*                  Strip off sequence numbers only if last 8 chars    *
*                     are all numeric                                 *
*                  Do WTO after command, not before, in case there's  *
*                     a system problem with the consoles (WTO may     *
*                     hang)                                           *
*                  Remove check for JES2 commands                     *
*                  Misc other cleanup                                 *
*                                                                     *
***********************************************************************
         EJECT
         COPY  @GLOBALS
         EJECT ,
OPERCMD  CSECT
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2                        work
R3       EQU   3                        work
R4       EQU   4                        work
R5       EQU   5                        input LRECL
R10      EQU   10                       parameter list address
R11      EQU   11                       subroutine linkage
R12      EQU   12                       base
R13      EQU   13                       save area address
R14      EQU   14
R15      EQU   15
         EJECT
         SAVE  (14,12),,OPERCMD_&SYSDATE_&SYSTIME  save caller's regs
         LR    R12,R15                  establish
         USNGX OPERCMD,R12              addressability
         LA    R3,SAVEAREA              get our savearea address
         ST    R13,SAVEAREA+4           establish back
         ST    R3,8(,R13)               and forward savearea pointers
         LR    R13,R3                   establish our savearea address
         LR    R10,R1                   save parameter register
         SPACE 2
         L     R3,PSATNEW-PSA           -> our TCB
         USNGX TCB,R3
         L     R1,TCBTIO                -> TIOT
         MVC   JOBNAME(8),TIOCNJOB-TIOT1(R1)  save our jobname
         L     R4,PSAANEW-PSA           -> our ASCB
         USNGX ASCB,R4
         MVC   ASID,ASCBASID            save our ASID
         L     R1,ASCBOUCB              -> OUCB
         USNGX OUCB,R1
         $AMODE  31
         MVC   SAVEOUCB,OUCBYFL         save flag byte in 24 bit stor
         $AMODE  24
         TM    SAVEOUCB,OUCBSTT         STC?
         BO    INITDONE                 Yes - allow use
         TM    SAVEOUCB,OUCBLOG         TSO?
         BNO   NOT$TSO                  No - see if "OPER"
         SPACE 1
CHK$PSCB ICM   R3,B'0111',TCBJSCB+1     -> JSCB
         DROPX R3                       TCB
         BZ    BOUNCE                   No JSCB???
         ICM   R3,B'0111',JSCBPSCB+1-IEZJSCB(R3)  -> PSCB
         BZ    BOUNCE                   No PSCB???
         TM    PSCBATR1-PSCB(R3),PSCBCTRL  Operator?
         BO    INITDONE                 Yes - allow use
         B     BOUNCE                   No - fail it
         SPACE 2
NOT$TSO  CLC   ASCBJBNI,=F'0'           Any initiated jobname ptr?
         BE    INITDONE                 no - must be STC, allow use
         DROPX R4,R1                    ASCB, OUCB
          AIF   (&@@ACF2 EQ 0).ACF201
*  Batch - see if we can find an ACF2 LIDREC to check for OPERATOR auth
         SPACE 1
         ACFINCVT  R3,NONE=INITDONE
         SPACE 1
         USNGX ACCVT,R3
         SPACE 1
         ACFGUCB  R4,NONE=INITDONE,INLINE=YES,SYS=AOS2
         SPACE 1
         DROPX R3                       ACCVT
         ICM   R3,B'1111',ACULRECP-ACUCB(R4)  -> LIDREC
         BZ    INITDONE
         TM    LIDTFLG3-LIDREC(R3),LIDT3OPR  Operator privilege?
         BO    INITDONE                 Yes - allow use
          AGO   .ACF202
.ACF201   ANOP
*  Batch - see if we can find a PSCB to check for OPERATOR auth
         B     CHK$PSCB
.ACF202   ANOP
         SPACE 2
BOUNCE   WTO   'OPERCMD - User not authorized',ROUTCDE=(2,11)
         ABEND 2
         SPACE 3
INITDONE DS    0H                       check out input parm
         TM    0(R10),X'80'             is first the only parm?
         BO    ONEPARM                  yes; only parm
         TM    4(R10),X'80'             is second the last parm?
         BO    TWOPARMS                 yes; 2 parms (called with CNxx)
***********************************************************************
*                                                                     *
*     A X'80' was not found in the high order byte of the first       *
*     two parms, so we can assume command is being called as a CP.    *
*     If the command being issued is not a JES command then           *
*     place our ASID into the R0 mask and continue. If it is a        *
*     JES command, simply issue the command (Mode 1).                 *
*                                                                     *
***********************************************************************
         LH    R2,ASID                  ASID of caller
         O     R2,=XL4'00008000'        tell SVC34 its an ASID
         ST    R2,R0MASK                and override the R0 mask
         L     R3,0(,R10)               -> input line
         LA    R4,4(,R3)                -> first char of input
         AH    R4,2(,R3)                -> first char past command
         LH    R2,0(,R3)                total length of string
         SH    R2,2(,R3)                length of oper cmd portion
         SH    R2,=H'5'                 -1 for EX, -4 for buffer desc
         BNP   USESYSIN                 operand missing - assume sysin
         EX    R2,MOVE1                 move cmd into card
*LDW*    CLI   CARD,C'$'                is this a JES2 cmd?
*LDW*    BNE   DOSVC34                  no;  go do it
*LDW*    XC    R0MASK(4),R0MASK         yes; don't try to get back rply
         B     DOSVC34
***********************************************************************
*                                                                     *
*     X'80' was found in the high order byte of the second parm,      *
*     so we have been called as a subroutine (Mode 3). The second     *
*     parm contains the console ID where the command is to 'come      *
*     from', so use that for the UCMID.                               *
*                                                                     *
***********************************************************************
TWOPARMS L     R3,4(,R10)               -> UCMID for SVC34
         MVC   R0MASK(4),0(R3)          save R0 mask for SVC34
***********************************************************************
*                                                                     *
*     Only one parm was passed, so we are being called in mode 1.     *
*     Just issue the command from the parm string.                    *
*                                                                     *
***********************************************************************
ONEPARM  L     R10,0(,R10)              get parameter address
         LH    R3,0(,R10)               get parameter text length
         LTR   R3,R3                    is parameter text present?
         BZ    USESYSIN                 no - go get commands from SYSIN
         BCTR  R3,R0                    decrement R3 for use in execute
         EX    R3,MOVE                  execute MVC
DOSVC34  LA    R11,EOJ                  get addr for return from SVC34
         B     SVC34                    go issue command
         SPACE 3
***********************************************************************
*                                                                     *
*     No parm field found, so look at SYSIN for input                 *
*                                                                     *
***********************************************************************
USESYSIN OPEN  (SYSIN,INPUT)            open SYSIN
         LH    R5,SYSIN+82              get LRECL
         LTR   R5,R5                    positive?
         BNP   BADLRECL                 no - die
         CH    R5,=H'121'               too long?
         BH    BADLRECL                 yes - die
GETSYSIN GET   SYSIN,CARD               get a SYSIN rec into SVC34 list
*LDW*    MVC   CARD+72(8),CARD+80       blank out seq field in 73-80
         LA    R1,CARD                  -> start of input stmt
         AR    R1,R5                    -> past end of stmt
         SH    R1,=H'8'                 back up to possible seq number
         MVC   WORK(8),0(R1)            copy last 8 chars of stmt
         NC    WORK(8),=C'00000000'     strip off digit nibbles
         CLC   WORK(8),=C'00000000'     was it all numeric?
         BNE   *+10                     no - leave it asis
         MVC   0(8,R1),=CL8' '          yes - remove sequence number
         CLI   CARD,C'*'                is this a comment?
         BE    GETSYSIN                 yes; go get another card
         CLC   =C'==DELAY==',CARD       want to wait 5 seconds?
         BE    DELAY                    yes - go do it
*LDW*    CLC   CARD(2),=C'/*'           is this a '/* $xx' card?
*LDW*    BNE   NOSLASHS                 no;  no slashes
*LDW*    MVC   CARD(78),CARD+2          yes; shift over '/*'
NOSLASHS LA    R11,GETSYSIN             get addr for return from SVC34
         B     SVC34                    go issue command
         SPACE 3
DELAY    LA    R0,500                   set default delay = 5 seconds
         CLC   CARD+9(5),=CL8' '        any operand?
         BE    STIMER                   no - use default
         PACK  DWD,CARD+9(5)            pack the 5 digit operand
         CVB   R0,DWD                   get operand in binary
         SPACE 1
STIMER   ST    R0,DWD                   set down for STIMER
         STIMER  WAIT,BINTVL=DWD        wait a bit
         B     GETSYSIN                 read next card
         SPACE 3
EODSYSIN CLOSE (SYSIN)                  close SYSIN
         SPACE 3
EOJ      L     R13,SAVEAREA+4           -> caller's savearea
         RETURN (14,12),RC=0            return to caller
         SPACE 3
BADLRECL WTO   'OPERCMD - Invalid input LRECL',ROUTCDE=(2,11)
         SPACE 1
         ABEND 1,DUMP
         EJECT
***********************************************************************
*                                                                     *
*     This routine actually issues the SVC 34. It either returns      *
*     to the SYSIN-read loop or EOJ depending on the value of R11     *
*                                                                     *
***********************************************************************
SVC34    MVC   WTOTEXT(121),CARD        move command text into WTO list
         CLC   =C'r ',WTOTEXT           is this a lower case reply?
         BE    REPLY                    no; go on
         CLC   =C'reply ',WTOTEXT       is this a lower case reply?
         BE    REPLY                    no; go on
         CLC   =C'R ',WTOTEXT           is this an upper case reply?
         BE    REPLY                    no; go on
         CLC   =C'REPLY ',WTOTEXT       is this an upper case reply?
         BE    REPLY                    no; go on
         CLI   WTOTEXT,X'F0'            start with a number?
         BL    NOTREPLY                 no; can't be a reply
REPLY    MVC   WTOTEXT(121),=CL121'Reply Suppressed by ''OPERCMD'''
NOTREPLY LA    R3,WTOTEXT+L'WTOTEXT-1   point to end of text
         LA    R4,WTOTEXT               point to beginning of text
         SPACE
FINDTEXT DS    0H                       find last text character
         CR    R3,R4                    all blank?
         BL    SVC34END                 yes - ignore it
         CLI   0(R3),C' '               blank character?
         BNE   GOTTEXT                  no - found end of text
         BCT   R3,FINDTEXT              keep on looking
         SPACE
GOTTEXT  DS    0H                       build parameter list lengths
         MVC   WTOUSER(8),JOBNAME       put job name in message
         SR    R3,R4                    compute length of
         LA    R3,4+1(,R3)              text and list prefix
         STH   R3,CMDLIST               set SVC 34 list length
         LA    R3,L'WTOID+L'WTOUSER(,R3)  add WTO id length
         STH   R3,WTOLEN                set WTO list length
         MODESET KEY=ZERO               indicate key=zero
         L     R0,R0MASK                UCMID for SVC34 (probably 0)
         LA    R1,CMDLIST               -> SVC 34 list
         SVC   34                       issue SVC 34 to process command
         WTO   MF=(E,WTOLIST)           echo cmd to operator via WTO
         MODESET KEY=NZERO              go back to user key
         SPACE
SVC34END DS    0H                       end of command routine
         BR    R11                      return to mainline
         EJECT
SAVEAREA DC    18F'0'                   our savearea
R0MASK   DC    A(0)                     R0 mask for SVC34
JOBNAME  DC    CL8' '                   our jobname
WORK     DC    CL8' '                   work area
DWD      DC    D'0'                     for CVB
ASID     DC    H'00'                    our ASID
SAVEOUCB DC    X'00'                    save for OUCBYFL
         SPACE
WTOLIST  DC    0F'0'                    WTO list
WTOLEN   DC    AL2(*-*,0)               text length & MCS flags
WTOID    DC    C'*** '                  TEXT IDENTIFIER
WTOUSER  DC    C'XXXXXXXX ==> '         caller's jobname
WTOTEXT  DC    CL121' '                 text passed to cmd processor
         SPACE
         CNOP  4,8                      align to middle of double word
CMDLIST  DC    Y(*-*,0)                 SVC 34 list
CARD     DC    CL121' '                 command text
         SPACE 3
MOVE     MVC   CARD(*-*),2(R10)         move parm text into SVC 34 list
MOVE1    MVC   CARD(*-*),0(R4)          move parm text into SVC 34 list
         SPACE 3
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),RECFM=FB,EODAD=EODSYSIN
         SPACE 3
         LTORG ,                        begin literal pool
         EJECT
***********************************************************************
*                                                                     *
*                System Control Block Mapping DSECTs                  *
*                                                                     *
*      All these macros can be found in the 'SYS1.AMODGEN' maclib     *
*                                                                     *
***********************************************************************
         PRINT NOGEN
         IHAPSA
         SPACE 2
         CVT   DSECT=YES
         SPACE 2
         DSECT
         IEFTIOT1                       TASK I/O Table
         SPACE 2
         IHAASCB                        ADDRESS Space Control Block
         SPACE 2
         IRAOUCB                        SRM User Control Block
         SPACE 2
         IKJTCB                         TASK Control Block
         SPACE 2
         IEZJSCB                        JOB Step Control Block
         SPACE 2
         IKJPSCB                        PROTECTED Step Control Block
         SPACE 2
          AIF   (&@@ACF2 EQ 0).ACF299
         ACCVT                          ACF2 CVT
         SPACE 2
         ACFASVT                        ACF2 ASVT
         SPACE 2
         ACUCB                          ACF2 User Control Block
         SPACE 2
         LIDREC                         ACF2 Logonid Record
.ACF299   ANOP
         SPACE 2
         END
