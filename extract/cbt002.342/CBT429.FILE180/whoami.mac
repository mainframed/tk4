***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1991 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.  (Please see reason mentioned       *
*        below.)                                                      *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.  (Please see reason        *
*        mentioned below.)                                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1.3, w/DFP 3.2),   *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc!ldw                                                *
*                                                                     *
*          (213) 740-2875 (direct -- 11 am to 7 pm Pacific time)      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, 714, or 310.  Sorry.                                  *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
WHOAMI  TITLE '---  DISPLAY TSO USER ID AND OPERATING ENVIRONMENT  ---'
*---------------------------------------------------------------------*
*                                                                     *
*   PROGRAM NAME:  WHOAMI                                             *
*                                                                     *
*   PURPOSE:       DISPLAY TSO USERID, PREFIX, PROC, CPU, ETC.        *
*                                                                     *
*   AUTHOR:        STEVE MCGINTY???                                   *
*                                                                     *
*   ATTRIBUTES:    APF AUTHORIZED (TO ACCESS TERMINAL NAME)           *
*                                                                     *
*   UPDATES:                                                          *
*                                                                     *
*      06Apr91  U005 LDW - Show PIE MultiTSO session number           *
*                                                                     *
*      22SEP86  U004 LDW - USE PUTLINE INSTEAD OF TPUT                *
*                        - USE OSENTER                                *
*                        - INTERCHANGE CPU MODEL AND SMFID FIELDS     *
*                        - USE LOWER CASE IN MESSAGES                 *
*                                                                     *
*      04/02/86 U003 LDW - CHANGE 'UNDER VM/370' TO 'UNDER VM'        *
*                        - ONLY DISPLAY ABOVE MESSAGE IF USER HAS     *
*                             OPERATOR AUTHORITY                      *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
         MACRO
&LABEL   MCON  &MSG
         LCLA  &L
&L       SETA  K'&MSG-2
&LABEL   DC    AL1(&L),C&MSG
         MEND
         SPACE 3
WHOAMI   OSENTER  PARMREG=LISTPTR,ENV=(CP,SIM),PL=(IO),            U004$
               EXIT=LEAVE,RC=0,GETMAIN=(WORKLEN,WORKD)             U004
         BAL   LINK,CLRMSG              INITIALIZE MESSAGE AREA
         MVC   BUFFOLD(4),=F'1'         NUMBER OF OUTPUT SEGMENTS  U004
         LA    R1,BUFFLEN               -> PUTLINE BUFFER          U004
         ST    R1,BUFFOLD+4                                        U004
         XC    BUFFOFF(2),BUFFOFF       OFFSET                     U004
         MVI   BUFFER,C' '              INIT MSGID                 U004
         SPACE 2
*  USER ID
         LA    POINTER,MSG01            'YOU ARE '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         L     POINTER,CPPLPSCB         POINT TO PSCB
         USING PSCB,POINTER
         MVC   USERLEN,PSCBUSRL         GET LENGTH OF USER ID
         MVC   USERDATA,PSCBUSER        GET USER ID DATA
         TM    PSCBATR1,PSCBCTRL        OPERATOR AUTHORITY?        U003
         BZ    *+8                      NO - SKIP                  U003
         OI    FLAGS,FOPER              YES - REMEMBER             U003
         DROP  POINTER
         LA    POINTER,USERID
         BAL   LINK,MCON                MOVE USERID TO MESSAGE
         SPACE 2
*  DSNAME PREFIX
         L     POINTER,CPPLUPT          POINT TO UPT
         USING UPT,POINTER
         MVC   PRFXLEN,UPTPREFL         GET PREFIX LENGTH
         MVC   PRFXDATA,UPTPREFX        GET PREFIX DATA
         DROP  POINTER
         IC    COUNT,USERLEN            GET LENGTH FOR COMPARE
         EX    COUNT,CPCLC              COMPARE LENGTH AND DATA
         BE    IDOK                     USERID = PREFIX
         LA    POINTER,MSG02A           ' ('
         BAL   LINK,MCON                MOVE PAREN INTO MESSAGE
         CLI   PRFXLEN,0                NULL PREFIX?
         BE    CP01                     YES, SPECIAL CASE.
         LA    POINTER,MSG03A           'MASQUERADING AS '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         LA    POINTER,PREFIX
         BAL   LINK,MCON                MOVE PREFIX TO MESSAGE
         B     CP02                     CONTINUE MESSAGE
CPCLC    CLC   USERID(0),PREFIX         << EXECUTED >>
CP01     LA    POINTER,MSG03B           'INCOGNITO'
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
CP02     LA    POINTER,MSG04            ')'
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         SPACE 2
*  TERMINAL NAME (IF WE CAN GET TO IT)
IDOK     L     AUXPTR,X'220'            -> ASCB
         L     AUXPTR,60(,AUXPTR)       -> TSB (FETCH PROTECTED)
         LTR   AUXPTR,AUXPTR            ANY?
         BZ    SKIPTERM                 NO - NO TERMINAL NAME TO DISP
         SPACE 1
         TESTAUTH  FCTN=1               CAN WE DO THIS?
         SPACE 1
         LTR   R15,R15                  WELL?
         BNZ   SKIPTERM                 NO - SO DON'T
         SPACE 1
         MODESET  KEY=ZERO              SET PROTECT KEY = 0
         SPACE 1
         UNPK  LINE-1(5),82(3,AUXPTR)   GET THE LINE ADDRESS
         MVC   TERMID,104(AUXPTR)       AND THE TERMINAL NAME
         SPACE 1
         MODESET  KEY=NZERO             RESTORE PROBLEM KEY
         SPACE 1
         LA    POINTER,MSG08            ' ON TERMINAL '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         LA    POINTER,TERMID           POINT TO TERMINAL ID
         LA    AUXPTR,TERMID+7          POINT TO END OF TERMID
TID01    CLI   0(AUXPTR),C' '           END OF TERMID?
         BNE   TID02                    YES
         BCT   AUXPTR,TID01             DECREMENT AND LOOP
TID02    LA    COUNT,1(,AUXPTR)
         SR    COUNT,POINTER            SET ACTUAL LENGTH
         BAL   LINK,MVAR                MOVE TERMID TO MESSAGE
         SPACE 2
*  LINE ADDRESS (IF WE CAN GET TO IT)
         TR    LINE,HEXTAB              MAKE IT REAL HEX
         CLC   =C'000',LINE             ANYTHING HERE?
         BE    SKIPTERM                 NO - SO SKIP IT
         LA    POINTER,MSG09            ' ON LINE '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         LA    POINTER,LINE             POINT TO LINE
         LA    COUNT,3                  LENGTH
         BAL   LINK,MVAR                MOVE LINE TO MESSAGE
         SPACE 2
*  SMF CPUID                                                       U004
SKIPTERM LA    POINTER,MSG05            ' LOGGED ONTO '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         L     POINTER,16               -> CVT                     U004
         L     POINTER,196(,POINTER)    -> SMCA                    U004
         LA    POINTER,16(,POINTER)     -> SMF ID                  U004
         LR    R15,POINTER              SAVE PTR FOR LATER TEST    U004
         LA    COUNT,4                  LEN OF SMF ID FIELD        U004
         BAL   LINK,MVAR                MOVE SMF ID TO MESSAGE     U004
         SPACE 2
*  CPU MODEL NUMBER (IF DIFFERENT FROM SMFID)                      U004
         L     POINTER,520              LOCATE THE PCCA
         LA    POINTER,12(,POINTER)     POINT TO CPU TYPE
         CLC   0(4,POINTER),0(R15)      IS CPU MODEL = SMFID?      U004
         BE    CHECKVM                  YES, SKIP MESSAGE          U004
         LR    R15,POINTER              PRESERVE MODEL POINTER     U004
         LA    POINTER,MSG02B           ' (THE'                    U004
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE   U004
         LR    POINTER,R15              RESTORE MODEL POINTER      U004
         LA    COUNT,4                  ASSUME FOUR BYTES
         CLI   0(POINTER),C'0'          LEADING ZERO?
         BNE   CPUOK                    NO, OK AS IS.
         LA    POINTER,1(,POINTER)      YES, POINT NO NEXT CHAR
         BCTR  COUNT,0                  REDUCE LENGTH
CPUOK    BAL   LINK,MVAR                MOVE CPU TYPE TO MESSAGE
         LA    POINTER,MSG04            ')'                        U001
         BAL   LINK,MCON                CLOSE LIST                 U001
         SPACE 2
*  VM/370
CHECKVM  TM    FLAGS,FOPER              OPERATOR AUTHORITY?        U001
         BZ    NOTVM                    NO - SKIP THIS CHECK       U001
         L     POINTER,520              -> PCCA (AGAIN)
         CLC   =C'FF',4(POINTER)        IS THIS VM?
         BNE   NOTVM                    NO - SKIP
         LA    POINTER,MSG06            ' (UNDER VM)'
         BAL   LINK,MCON                MOVE VM INDICATION TO MESSAGE
         SPACE 2
*  LOGON PROC (ACTUALLY STEPNAME)
NOTVM    LA    POINTER,MSG07            ' WITH PROC '
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         L     POINTER,16               POINT TO CVT
         L     POINTER,0(,POINTER)      POINT TO PSAAOLD
         L     POINTER,8(,POINTER)      POINT TO CURRENT ASCB
         L     POINTER,56(,POINTER)     POINT TO CSCB
         LA    POINTER,16(,POINTER)     POINT TO CHCLS (PROC NAME)
         LA    AUXPTR,7(,POINTER)       POINT TO END OF PROC NAME
PN01     CLI   0(AUXPTR),C' '           END OF PROC NAME?
         BNE   PN02                     YES
         BCT   AUXPTR,PN01              DECREMENT AND LOOP
PN02     LA    COUNT,1(,AUXPTR)
         SR    COUNT,POINTER            SET ACTUAL LENGTH
         BAL   LINK,MVAR                MOVE PROC NAME TO MESSAGE
         SPACE 2
*  END THE SENTENCE
         LA    POINTER,MSG10            '.'
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE
         SPACE 2
*  See if running under Pie/MultiTSO
         MVC   BLDLLIST(4),=H'1,64'     number and length          U005
         MVC   BLDLLIST+4(8),=CL8'PIECHECK'  module name           U005
         BLDL  0,BLDLLIST               try to find PIECHECK       U005
         LTR   R15,R15                  do we have it?             U005
         BNZ   NO$PIE                   no - skip                  U005
         XC    LINKSFL(LINKSFLL),LINKSFL  clear parm list          U005
         SR    R1,R1                    I dunno why i need this    U005
         LINK  DE=BLDLLIST+4,SF=(E,LINKSFL)  call PIECHECK         U005
         LTR   R15,R15                  running under PIE?         U005
         BZ    NO$PIE                   no - skip                  U005
         STC   R15,PIEID                yes - save session id      U005
         LA    POINTER,MSG11            'Active PIE session is '   U005
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE   U005
         LA    COUNT,1                  length                     U005
         LA    POINTER,PIEID            address of value           U005
         BAL   LINK,MVAR                move pid sess id to msg    U005
         LA    POINTER,MSG10            '.'                        U005
         BAL   LINK,MCON                MOVE CONSTANT TO MESSAGE   U005
         SPACE 2
NO$PIE   BAL   LINK,WMSG                WRITE THIS MESSAGE
         B     LEAVE                    ALL DONE                   U004
         SPACE 3
* MOVE CONSTANT TEXT INTO MESSAGE
MCON     SR    COUNT,COUNT              PREPARE FOR IC
         IC    COUNT,0(,POINTER)        GET LENGTH
         LA    POINTER,1(,POINTER)      POINT TO REAL TEXT
         SPACE 1
* MOVE VARIABLE TEXT INTO MESSAGE
MVAR     LR    AUXPTR,COUNT             GET REQUESTED LENGTH
         A     AUXPTR,MSGAPTR           COMPUTE NEW END
         C     AUXPTR,MSGALIM           IS IT GONNA FIT?
         BNH   *+8                      YES, LIVE ON.
         EX    0,*                      DIDN'T FIT;  DIE (0C3).
         L     AUXPTR,MSGAPTR           FIND NEXT CHARACTER
         BCTR  COUNT,0                  PREPARE FOR EX
         EX    COUNT,MVMVC              MOVE THE DATA
         LA    AUXPTR,1(COUNT,AUXPTR)   POINT PAST NEW STRING
         ST    AUXPTR,MSGAPTR           SAVE IT FOR POSTERITY
         BR    LINK                     RETURN TO THE POOR TURKEY
         SPACE 1
MVMVC    MVC   0(0,AUXPTR),0(POINTER)   << EXECUTED >>
         SPACE 3
WMSG     L     COUNT,MSGAPTR            FIND END OF MESSAGE
         LA    POINTER,MSGAREA          POINT TO START OF MESSAGE
         SR    COUNT,POINTER            COMPUTE LENGTH OF MESSAGE
         CH    COUNT,=H'78'             IS IT TOO LONG?
         BNH   WM03                     NO, WRITE IT AS IS
         LA    AUXPTR,MSGAREA+78
WM01     CLI   0(AUXPTR),C' '           LOOK FOR A SPACE
         BE    WM02
         BCT   AUXPTR,WM01
WM02     LR    COUNT,AUXPTR
         SR    COUNT,POINTER            LENGTH OF FIRST LINE
         LA    R0,4+1(,COUNT)           GET BUFFER LENGTH          U004
         STH   R0,BUFFLEN               SET LENGTH FOR PUTLINE     U004
         MVC   BUFFER+1(79),0(POINTER)  MOVE TOO MUCH, WHO CARES?  U004
         PUTLINE  OUTPUT=BUFFOLD,PARM=PUTLINEC,MF=(E,IOPL)         U004
         SPACE 1
         L     COUNT,MSGAPTR            FIND END OF MESSAGE
         LA    POINTER,1(,AUXPTR)       FIND START OF SECOND LINE
         SR    COUNT,POINTER            FIGURE LENGTH OF SECOND LINE
WM03     LA    R0,4+1(,COUNT)           GET BUFFER LENGTH          U004
         STH   R0,BUFFLEN               SET LENGTH FOR PUTLINE     U004
         MVC   BUFFER+1(79),0(POINTER)  MOVE TOO MUCH, WHO CARES?  U004
         PUTLINE  OUTPUT=BUFFOLD,PARM=PUTLINEC,MF=(E,IOPL)         U004
         SPACE 1
CLRMSG   LA    POINTER,MSGAREA          INITIALIZE DATA POINTER
         ST    POINTER,MSGAPTR          SAVE IT FOR LATER
         MVC   MSGAREA,SPACES           CLEAR IT TO BLANKS
         BR    LINK                     RETURN TO CALLER
         SPACE 2
PUTLINEC PUTLINE  MF=L                                             U004
         SPACE 3
         LTORG
         SPACE 3
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
FLAGS    DC    X'00'                                               U001
FOPER     EQU   X'80'                   USER HAS 'OPER'            U001
USERID   DS    0D
USERLEN  DC    AL1(0)
USERDATA DC    CL7' '
PREFIX   DS    0D
PRFXLEN  DC    AL1(0)
PRFXDATA DC    CL7' '
         DC    C' '                     REQUIRED PADDING FOR 'LINE'
LINE     DC    CL3' '                   BYTE AFTER 'LINE' ALSO PADDING
TERMID   DC    CL8' '
MSGAPTR  DC    A(0)
MSGALIM  DC    A(MSGAREA+L'MSGAREA)
MSGAREA  DC    C'YOU ARE 1234567 (MASQUERADING AS 1234567) LOGGED ONTO $
               THE 1234 (1234) (UNDER VM/370) WITH PROC 12345678 ON TER$
               MINAL 12345678 ON LINE 123.  Active PIE session is x' U5
SPACES   DC    CL(L'MSGAREA)' '
         EJECT
* MESSAGE CONSTANT SEGMENTS
MSG01    MCON  'You are '
MSG02A   MCON  ' ('
MSG02B   MCON  ' (the '                                            U004
MSG03A   MCON  'masquerading as '
MSG03B   MCON  'incognito'
MSG04    MCON  ')'
MSG05    MCON  ' logged onto '                                     U004
MSG06    MCON  ' (under VM)'                                       U003
MSG07    MCON  ' with proc '
MSG08    MCON  ' on terminal '
MSG09    MCON  ' on line '
MSG10    MCON  '.'
MSG11    MCON  '  Active PIE session is '                          U005
         SPACE 3
WORKD    DSECT                          RESUME                     U004
BUFFOLD  DS    2F                       OUTPUT LINE DESCRIPTOR     U004
BUFFLEN  DS    H                        PRINTLINE LENGTH           U004
BUFFOFF  DS    H                        OFFSET                     U004
BUFFER   DS    CL80                     OUTPUT BUFFER              U004
PIEID    DS    C                        save area for Pie sess id  U005
BLDLLIST DS    2H,XL64                                             U005
LINKSFL  LINK  SF=L                                                U005
LINKSFLL EQU   *-LINKSFL                                           U005
WORKLEN  EQU   *-WORKD                  LENGTH TO GETMAIN          U004
         EJECT
         PRINT NOGEN
         SPACE 3
         IKJPSCB
         SPACE 3
         IKJUPT
         SPACE 1
         PRINT GEN
         SPACE 2
COUNT    EQU   R2
POINTER  EQU   R3
AUXPTR   EQU   R4
LISTPTR  EQU   R10
LINK     EQU   R11
         SPACE 3
         END
