DUSERS TITLE '-----  Display Logged on TSO Users and Term Names  -----'
***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1988 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.                                     *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*                                                                     *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1, with DFP 3.1),  *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc-oberon!LDW (last resort)                           *
*                                                                     *
*          (213) 743-5391 (direct -- 11 am to 7 pm Pacific time)      *
*          (213) 743-2957 (msgs)                                      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, or 714.  Sorry.                                       *
*                                                                     *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
*---------------------------------------------------------------------*
*                                                                     *
*   Program Name:  DUSERS                                             *
*                                                                     *
*   Purpose:       Display (sorted by userid) the userid and terminal *
*                  names of all logged on TSO users, and flag those   *
*                  which are disconnected.                            *
*                                                                     *
*   Author:        Leonard D. Woren                                   *
*                                                                     *
*   Date:          April 2, 1987                                      *
*                                                                     *
*   Note:          This program is a copy of TSLINE, changed to sort  *
*                  by userid instead of terminal name.                *
*                                                                     *
*   Updates:                                                          *
*      30Sep90  U005 LDW - Use PUTLINE instead of TPUT                *
*      21Dec89  U004 LDW - Fix check for end of ASVT so that some     *
*                             users are randomly overlooked           *
*                        - Use DSECT names instead of offsets         *
*                             (not marked with update flag)           *
*      13Feb89  U003 LDW - Display count of disconnected users        *
*      07May87  U002 LDW - Display user counts                        *
*      05Apr87  U001 LDW - Fix sort bug so works if only one id       *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
DUSERS   OSENTER  EXIT=RETURN,RC=0,GETMAIN=(WORKLEN,WORKD,ZERO),   U003$
               PARMREG=R2,ENV=(CP,SIM),PL=(IO)                     U005
LINK     EQU   R11
TABSIZE  EQU   200                      # of internal table entries
         MVI   FLAGS,0                  init all flags
         MVC   BUFFOLD(4),=F'1'         number of output segments  U005
         LA    R1,BUFFLEN               -> PUTLINE buffer          U005
         ST    R1,BUFFOLD+4                                        U005
         XC    BUFFOFF(2),BUFFOFF       offset                     U005
         MVI   BUFFMID,C' '             init msgid                 U005
         MVC   PUTLINEW(PUTLINEL),PUTLINEC  init MF=L area         U005
         XC    COUNTON(L'COUNTON+L'COUNTALL+L'COUNTDSC),COUNTON    U003
         SPACE 2
*U005    TPUTX HEADER1,LINELEN*ENTRIES
         MVC   BUFFER(LINELEN*ENTRIES),HEADER1                     U005
         MVC   BUFFLEN,=Y(4+1+LINELEN*ENTRIES)                     U005
         BAL   R14,PUTLINE                                         U005
         SPACE 1
*U005    TPUTX HEADER2,LINELEN*ENTRIES
         MVC   BUFFER(LINELEN*ENTRIES),HEADER2                     U005
         MVC   BUFFLEN,=Y(4+1+LINELEN*ENTRIES)                     U005
         BAL   R14,PUTLINE                                         U005
         SPACE 1
         LA    R7,TABSIZE               get internal table size
         LA    R6,TABLE                 -> table
         USING TABLED,R6
         SPACE 1
         L     R3,CVTPTR                -> cvt
         L     R3,CVTASVT-CVT(,R3)      -> asvt
         L     R8,ASVTMAXU-ASVT(,R3)    max nbr of address spaces  U004
         LA    R3,ASVTFRST-ASVT(,R3)    -> top entry of asvt
***      LA    R0,1                     set entry code "set apf"
***      SVC   243                      do it
         SPACE 3
LOOP     LA    R3,4(,R3)                -> next asvt entry
*U004    CLC   0(4,R3),=X'80000000'     if last asvt entry,
*U004    BE    LASTASID                 ... then thru loop.
         SH    R8,=H'1'                 decr remaining a.s. count  U004
         BM    LASTASID                 exit loop when all done    U004
         TM    0(R3),X'80'              if top bit on,
         BO    LOOP                     ...then entry not in use.
         SPACE 1
         L     R1,0(,R3)                ascb address
         USNGX ASCB,R1                                             U004
         L     R5,ASCBTSB               -> tsb (in protected core)
         LTR   R5,R5                    if zero,
         BZ    LOOP                     ... then batch job, so skip.
         USING TSB,R5
         SPACE 1
         MVC   0(TABLELEN,R6),BLANKS    blank this entry
         MVC   TUSERID,=C'Starting'     assume special case
         LA    R0,1                     get increment              U002
         AH    R0,COUNTALL              count a tso user           U002
         STH   R0,COUNTALL              store updated counter      U002
         L     R1,ASCBJBNS              -> userid
         LTR   R1,R1                    any pointer?
         BZ    NO$JOBNM                 no - skip                  U002
         MVC   TUSERID,0(R1)            move jobname
         LA    R0,1                     get increment              U002
         AH    R0,COUNTON               count a logged on user     U002
         STH   R0,COUNTON               store updated counter      U002
         DROPX R1                       ASCB                       U004
         SPACE 1
NO$JOBNM MODESET KEY=ZERO               set protect key = 0
         SPACE 1
***      UNPK  TLINEADR-1(5),TSBLINE(3) line address
         MVC   TTERMID,TSBTRMID         terminal symbolic name
*        TM    TSBFLG5,TSBVTAM          is it vtam?
*        BNO   TCAM                     no - tcam
*        L     R1,TSBEXTNT              -> tsb extension
*        USING TSBX,R1
*        TM    TSBXFLG1,TSBXWREC        awaiting reconnect?
*        BNO   *+10                     no - skip
*        MVC   TTERMID,=C'DISCON''D'    yes - say so
*        DROP  R1,R5
         MVI   TSTAR,C' '
         TM    TSBFLG4,TSBHUNG          has terminal hung up?
         BNO   TCAM                     no - ok                    U003
         MVI   TSTAR,C'*'               yes - remember
         OI    FLAGS,FSTAR
         LA    R0,1                     get increment              U003
         AH    R0,COUNTDSC              count a disconnect user    U003
         STH   R0,COUNTDSC              store updated counter      U003
         DROP  R5
         SPACE 1
TCAM     MODESET KEY=NZERO              reset protect key to normal
         SPACE 1
***      TR    TLINEADR(3),HEXTAB
***      CLC   =C'000',TLINEADR         anything here?
***      BNE   *+10                     yes - skip
***      MVC   TLINEADR,BLANKS          no - blank it out
         LA    R6,TABLELEN(,R6)         bump to next id area
         BCT   R7,LOOP                  array full?
*U005    TPUTX 'internal table overflow'  ...yes
         MVC   BUFFER(23),=C'internal table overflow'  yes         U005
         MVC   BUFFLEN,=Y(4+1+23)                                  U005
         BAL   R14,PUTLINE                                         U005
         SPACE 3
LASTASID MVI   0(R6),X'FF'              set end of list indicator
***      SR    R0,R0                    set entry code "unset apf"
***      SVC   243                      do it
         SPACE 2
SORTLP1  SH    R6,=Y(TABLELEN)          back up to last table entry
         DROP  R6
         LA    R1,TABLE                 -> first table entry
         CR    R6,R1                    end at start?
*U001    BL    GOPRINT                  yes - done sorting
         BNH   GOPRINT                  yes - done sorting         U001
         USING TABLED,R1
SORTLP2  CLC   TUSERID,TUSERID+TABLELEN do we need to swap entries?
         BL    NOSWAP                   no - skip
         MVC   SWAPAREA,0(R1)           yes - so use ...
         MVC   0(TABLELEN,R1),TABLELEN(R1)  ... the standard ...
         MVC   TABLELEN(TABLELEN,R1),SWAPAREA  ... cheap swap method
         SPACE 1
NOSWAP   LA    R1,TABLELEN(,R1)         -> next table entry
         CR    R1,R6                    end of table?
         BL    SORTLP2                  no - continue this sort pass
         B     SORTLP1                  yes - do next pass
         SPACE 3
GOPRINT  LA    R6,TABLE                 reset pointer
         USING TABLED,R6
         BAL   LINK,INIT                set counter & line pointer
         USING LINE,R2
         SPACE 2
PRLOOP   CLI   0(R6),X'FF'              end of table?
         BE    TABDONE                  yes - leave
         MVC   LTERMID,TTERMID          get termid from table
         MVC   LUSERID,TUSERID
         MVC   LSTAR,TSTAR
***      MVC   LLINEADR,TLINEADR
         LA    R6,TABLELEN(,R6)         -> next table entry
         LA    R2,LINELEN(,R2)          -> next entry on line
         BCT   R4,PRLOOP                fill this line
         BAL   LINK,PRINT               print this line
         B     PRLOOP                   fill next line
         SPACE 2
TABDONE  CLC   MSGAREA,BLANKS           if line is all blank
         BE    *+8                      ...then nothing to print
         BAL   LINK,PRINT               and print line.
         SPACE 2
*---  Print counts of logged on and logging on users               U002
         MVC   MSGAREA(COUNTMSL),COUNTMSG  copy summary text       U002
         LH    R0,COUNTON               get logged on count        U002
         CVD   R0,DWD                   prepare to edit            U002
         ED    MSGON-COUNTMSG+MSGAREA(4),DWD+6  make displayable   U002
         LH    R0,COUNTDSC              get disconnect count       U003
         CVD   R0,DWD                   prepare to edit            U003
         ED    MSGDSC-COUNTMSG+MSGAREA(4),DWD+6  make displayable  U003
         MVI   MSGDSC-COUNTMSG+MSGAREA+1,C'('                      U003
         LH    R0,COUNTALL              get total count            U002
         SH    R0,COUNTON               get starting count         U002
         CVD   R0,DWD                   prepare to edit            U002
         ED    MSGST-COUNTMSG+MSGAREA(4),DWD+6  make displayable   U002
*U005    TPUTX ' '                      print a blank line         U002
         MVI   BUFFER,C' '              print a blank line         U005
         MVC   BUFFLEN,=Y(4+1+1)                                   U005
         BAL   R14,PUTLINE                                         U005
*U005    TPUTX MSGAREA,COUNTMSL         print the counts           U002
         MVC   BUFFER(COUNTMSL),MSGAREA                            U005
         MVC   BUFFLEN,=Y(4+1+COUNTMSL)                            U005
         BAL   R14,PUTLINE              print the counts           U005
         TM    FLAGS,FSTAR              footnote needed?
         BNO   RETURN                   no - return now
*U005    TPUTX ' '                      print a blank line         U002
         MVI   BUFFER,C' '              print a blank line         U005
         MVC   BUFFLEN,=Y(4+1+1)                                   U005
         BAL   R14,PUTLINE                                         U005
*U005    TPUTX '=== Note:  "*" preceeding userid indicates session is d$
               isconnected ==='
         MVC   BUFFER(71),=C'=== Note:  "*" preceeding userid indicates$
                session is disconnected ==='                       U005
         MVC   BUFFLEN,=Y(4+1+71)                                  U005
         BAL   R14,PUTLINE                                         U005
         B     RETURN                   leave
         SPACE 3
*PRINT   TPUTX MSGAREA,L'MSGAREA        print the line
PRINT    MVC   BUFFER(L'MSGAREA),MSGAREA                           U005
         MVC   BUFFLEN,=Y(4+1+L'MSGAREA)                           U005
         BAL   R14,PUTLINE              print the counts           U005
         SPACE 1
INIT     LA    R4,ENTRIES               set counter
         LA    R2,MSGAREA               reset output pointer
         MVC   MSGAREA,BLANKS           clear the print line
         BR    LINK                     return to caller
         SPACE 3
PUTLINE  ST    R14,PL@R14               save return address        U005
*
         PUTLINE  OUTPUT=BUFFOLD,PARM=PUTLINEW,MF=(E,IOPL)         U005
*
         SPACE 1
         L     R14,PL@R14               restore return address     U005
         BR    R14                                                 U005
         SPACE 3
         LTORG
         SPACE 2
BLANKS   DC    CL80' '
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
PUTLINEC PUTLINE  MF=L                                             U005
*                                                                  U005
PUTLINEL EQU   *-PUTLINEC                                          U005
         SPACE 2
LINE     DSECT
LSTAR    DS    CL1
         DS    CL1
LUSERID  DS    CL8
         DS    CL1
LTERMID  DS    CL8
         DS    CL1
*LLINEADR DS    CL3
***      DS    CL3
LINELEN  EQU   *-LINE
         SPACE 1
*NTRIES  EQU   (L'MSGAREA-1)/LINELEN
*NTRIES  EQU   (80-1)/LINELEN           @#(*&%$&^ assembler
ENTRIES  EQU   80/LINELEN               @#(*&%$&^ assembler
         SPACE 2
DUSERS   CSECT                          RESUME
*EADER1  DC    3CL(LINELEN)'  Userid   Terminal line'
*EADER2  DC    3CL(LINELEN)'  ------   -------- ----'
HEADER1  DC    4CL(LINELEN)'  Userid   Terminal '
HEADER2  DC    4CL(LINELEN)'  ------   -------- '
COUNTMSG EQU   *                                                   U002
MSGON    DC    X'40202120',C' users logged on'                     U003
MSGDSC   DC    X'40202120',C' disconnected),'                      U003
MSGST    DC    X'40202120',C' users logging on.'                   U002
COUNTMSL EQU   *-COUNTMSG                                          U002
         SPACE 2
TABLED   DSECT
TSTAR    DS    C,C
TUSERID  DS    CL8
TTERMID  DS    CL8,C
*TLINEADR DS    CL3,C
TABLELEN EQU   *-TABLED
         SPACE 2
WORKD    DSECT                          RESUME
DWD      DS    D                                                   U002
COUNTON  DS    H                        number of users logged on
COUNTALL DS    H                        total number of users
COUNTDSC DS    H                        number of disc'd users     U003
FLAGS    DS    X
FSTAR    EQU   X'80'                    footnote msg is required
PL@R14   DS    F                                                   U005
*                                                                  U005
BUFFOLD  DS    2F                       OUTPUT LINE DESCRIPTOR
BUFFLEN  DS    H                        PRINTLINE LENGTH
BUFFOFF  DS    H                        OFFSET
BUFFMID  DS    C                        delim after msgid
BUFFER   DS    CL131                    OUTPUT BUFFER
*
PUTLINEW PUTLINE  MF=L                                             U005
*
         DS    0F                       alignment
SWAPAREA DS    CL(TABLELEN)
MSGAREA  DS    CL80
TABLE    DS    (TABSIZE)XL(TABLELEN)
TABLEND  DS    X
WORKLEN  EQU   *-WORKD
         EJECT
*        IKJTSB  LIST=YES,EXT=YES
         IKJTSB  LIST=YES
         PRINT NOGEN                                               U004
         CVT   DSECT=YES                                           U004
         IHAASVT  ,                                                U004
         IHAASCB  ,                                                U004
         SPACE 2
         END
