***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1984 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.  (Please see reason mentioned       *
*        below.)                                                      *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.  (Please see reason        *
*        mentioned below.)                                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1.3, w/DFP 3.2),   *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc!ldw                                                *
*                                                                     *
*          (213) 740-2875 (direct -- 11 am to 7 pm Pacific time)      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, 714, or 310.  Sorry.                                  *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
$CAL     TITLE '$ - TSO CALL FUNCTION FOR LINKLIB MODULES'
*---------------------------------------------------------------------*
*                                                                     *
*   PROGRAM NAME:  $                                                  *
*                                                                     *
*   PURPOSE:       CALL LINKLIST MODULES WITHOUT USING A DCB          *
*                                                                     *
*   AUTHOR:        BRUCE M. DANE                                      *
*                                                                     *
*   DATE:          LONG, LONG AGO                                     *
*                                                                     *
*   UPDATES:                                                          *
*      09/05/84 LDW2  SPECIFY ATTACH SVC # VIA SYSPARM, TO ALLOW USE  *
*                        OF EXXON SPFMAGIC SVC WITHOUT SOURCE CHANGES *
*      08/31/82 LDW1  CHANGE TO MY STANDARD MACROS SO THAT THE ONES   *
*                        COPIED INLINE BY SDM COULD BE DELETED        *
*                     FIX BUG IN BMD'S ABEND406 SIMULATOR             *
*      01/08/81 BMD2  SEARCH SVS/MVS LPA DIRECTORY BEFORE ISSUING     *
*                        BLDL FOR A MODULE                            *
*                     FIX BLDL LEN FOR SVS/MVS                        *
*                     OTHER MISCELLANIA                               *
*                     (NOTE:  THIS FIX ACTUALLY COPIED INTO THIS      *
*                        VERSION BY LDW AFTER 03/06/82 UPDATES DONE)  *
*                     (NOTE:  THIS WAS BRUCE'S +BMD+ UPDATE)          *
*      05/09/73 BMD1  FIX PARM OF ''                                  *
*                     SHARE SUBPOOL 78 FOR IKJPUTGT                   *
*                     (NOTE:  THIS WAS BRUCE'S *BMD* UPDATE)          *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
*LDW1 $  TSOENTER REGS=YES,PL=(CPPL,PARSE),WORK=260
$        OSENTER  ENV=CP,PARMREG=R2,PL=(PARSE),                    LDW1$
               GETMAIN=(WORKLEN,TSODSECT),EXIT=LEAVE,RC=(R2)       LDW1
         EJECT
TSODSECT DSECT ,                        RE-ESTABLIST DSECT
*LDW1    ORG   TSOWORK                  GET ADDR
DOUBLE   DC    D'0'                     FOR CONVERSIONS
ATTLIST  ATTACH DE=0,SF=L               PHONEY ATTACH LIST
ATTLISTL EQU   *-ATTLIST                LENGTH
ATTTCB   DC    A(0)                     TCB ADDRESS
ATTECB   DC    F'0'                     ECB ADDRESS
STAECMP  DC    F'0'                     CMP FOR STAI
BLDL     DC    2H'0',CL64' '            BLDL LIST                  BMD2
         CNOP  2,4                      FOR STANDARDS              BMD2
PARM     DC    H'0',CL100' '            PARM FIELD
PARMPTR  DC    A(0)                     POINTER TO PARM
         DC    3A(0)                    FAKE REST OF CPPL
         ORG
WORKLEN  EQU   *-TSODSECT               LENGTH TO GETMAIN          LDW1
$        CSECT
         TITLE '$ - INITIALIZATION CODE'
         MVC   BLDL(4),=AL2(1,64)       NUMBER/LEN                 BMD2
         XC    TSPARANS(4),TSPARANS     CLEAR ANSWER FIELD         LDW1
         XC    TSECB(4),TSECB           AND ECB                    LDW1
         MVC   STAECMP(4),TSECB         CLEAR IT THIS WAY          LDW1
         L     R15,CPPLCBUF             LOAD CMD BUFFER
         TSPARSE  CBUF=(15),PCL=(=V(PCL),I)  CALL PARSE ROUTINE    LDW1
         LTR   R15,R15                  TEST RETURN CODE
         BZ    ANALYZE                  OK, CONTINUE
BADPARSE LA    R0,L'MSG01               LOAD MESSAGE SIZE
         LA    R1,MSG01                 AND MESSAGE ADDR
         B     PRELEAVX                 DONE, FORGET IT
         TITLE '$ - ANALYZE INPUT'
         USNGX PDL,R11                  TELL ASSEMBLER             LDW1
ANALYZE  L     R11,TSPARANS             LOAD ANSWER AREA           LDW1
         L     R1,MODNAME               GET MODULE NAME ENTRY
         TM    MODNAME+6,X'80'          IS IT THERE
         BNO   BADPARSE                 NO, STOP HERE
         MVC   BLDL+4(8),=8C' '         CLEAR MODULE NAME
         LH    R15,MODNAME+4            GET LEN
         BCTR  R15,0                    -1 FOR EXECUTE
         EX    R15,MVCMOD               DO IT
         LH    R2,PDLPARM+4             GET LENGTH
         L     R3,PDLPARM               GET ADDRESS
         CH    R2,=H'100'               CHECK IT
         BNH   LENOK                    OK, SO FAR
         LA    R1,MSG02                 GET MESSAGE
         LA    R0,L'MSG02               AND LENGTH
         TPUT  (1),(0),R                DO IT
         LA    R2,100                   SET AT MAXIMUM
LENOK    LTR   R2,R2                    TEST FOR NON-ZERO LEN      BMD1
         STH   R2,PARM                  SAVE IN LENGTH
         BCTR  R2,0                     SUBTRACT ONE
         BNP   *+12                     NOT THERE, NO MOVE         BMD1
         EX    R2,MVCPARM               DO THAT
         B     *+10                     AROUND XC
         XC    PARM+2(40),PARM+2        CLEAR IT FOR ACCIDENTAL PARSE
         LA    R1,PARM                  LOAD PARM FIELD
         ST    R1,PARMPTR               SAVE IT THERE
         MVI   PARMPTR,X'80'            FLAG AS LAST
         MVC   PARMPTR+4(12),CPPLUPT    JUST IN CASE CALL CP
         SPACE 3
         L     R3,CVTPTR                GET CVT ADDRESS            BMD2
         LM    R0,R1,BLDL+4             GET PARMS FOR ROUTINE      BMD2
         L     R15,CVTLPDSR-CVTMAP(,R3) ADDRESS OF ROUTINE         BMD2
         BALR  R14,R15                  CALL ROUTINE               BMD2
         B     DOATTACH                 ATTACH LPA MODULE          BMD2
         EJECT ,
         XR    R1,R1                    CLEAR DCB ADDRESS
         BLDL  (1),BLDL                 DO IT
         CH    R15,=H'8'                CHECK JUST IN CASE
         BNH   *+8                      OK
         LA    R15,12                   LOAD ERROR CODE
         B     *+4(R15)                 DO BRANCH
         B     DOATTACH                 RETURN CODE=0
         B     NONESUCH                 NO SUCH MODULE
         B     IOERR                    I/O ERROR IN SEARCH
         LA    R1,MSG03                 BAD RETURN CODE FROM BLDL
         LA    R0,L'MSG03               AND LEN
         B     PRELEAVX                 DIE RIGHT NOW
         TITLE '$ - ERROR AND RETURN CODE'
NONESUCH MVC   PARM(L'NOMOD),NOMOD      MOVE IN MESSAGE
         MVC   PARM+MODOFF(8),BLDL+4    MOVE IN MODULE NAME
         LA    R1,PARM                  LOAD PLACE
         LA    R0,L'NOMOD               LEN
         B     PRELEAVX                 DO IT
         SPACE 2
IOERR    LA    R1,IOERRMSG              LOAD MESSAGE
         LA    R0,L'IOERRMSG            LENGTH
         SPACE 2
PRELEAVX MVI   STAECMP+3,20             ERROR CODE
PRELEAVE TPUT  (1),(0),R                DO IT
RELEASEA IKJRLSA TSPARANS                                          LDW1
         L     R2,STAECMP               TEST CMP CODE
         LTR   R2,R2                    TEST IT
         BP    *+6                      AROUND CLEAR
         XR    R2,R2                    CLEAR IT
         B     LEAVE                    LEAVE NOW                  LDW1
         TITLE '$ - SOME CONSTANTS'
MSG01    DC    C'MISSING PROGRAM NAME OR PARSE ERROR, PLEASE RE-ENTER C$
               OMMAND'
MSG02    DC    C'PARM FIELD TOO LONG, TRUNCATED AT 100 CHARACTERS'
MSG03    DC    C'** ERROR IN BLDL ** CONTACT SYSTEMS PERSONNEL'
MSG10    DC    C'** ATTACH ERROR ** CONTACT SYSTEMS PERSONNEL'
IOERRMSG DC    C'** I/O ERROR DURING BLDL ** CONTACT SYSTEMS PERSONNEL'
NOMOD    DC    C'PROGRAM 12345678 NOT FOUND, PLEASE RE-ENTER COMMAND'
ABCODE   DC    C'PROGRAM 12345678 ABENDED, SYS=000, USER=0000'
NONZERO  DC    C'PROGRAM 12345678 ENDED, COND. CODE=00000000 '
MODOFF   EQU   8
ABSYS    EQU   30
ABUSER   EQU   40
NONCODE  EQU   35
TRT      EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         TITLE '$ - PARSE PCL'
PCL      IKJPARM DSECT=PDL
MODNAME  IKJIDENT 'PROGRAM',MAXLNTH=8,FIRST=ALPHANUM,                  $
               OTHER=ALPHANUM,PROMPT='PROGRAM NAME',                   $
               HELP='NAME OF PROGRAM TO BE CALLED'
         SPACE 2
PDLPARM  IKJPOSIT QSTRING,HELP='PARM FIELD FOR PROGRAM'
         IKJENDP
         TITLE '$ - SET UP AND ATTACH PROGRAM'
DOATTACH TM    CPPLCBUF,X'80'           CALL ON ME?
         BO    NOECTCHG                 RIGHT, DON'T CHANGE ECT
         L     R1,CPPLECT               LOAD ECT ADDR
         MVC   12(8,R1),BLDL+4          MOVE IN MODULE NAME
NOECTCHG LA    R1,PARMPTR               LOAD PARM POINTER
         SPACE 3
         XC    ATTLIST(ATTLISTL),ATTLIST  CLEAR ATTACH LIST
         XC    ATTECB(4),ATTECB         CLEAR IT
         LTR   R15,R15                  IF I CAME FROM BLDL        BMD2
         BZ    ATTACH                   IT WILL BE ZERO, ELSE      BMD2
         SPACE 1
         LR    R15,R0                   GET CDE ADDRESS            BMD2
         TM    28(R15),X'01'            IS IT LOAD-ONLY?           LDW1
         BO    LPATTACH                 NOPE, TRY IT               BMD2
         MVC   STAECMP+1(3),=X'406004'  MY CODE                    LDW1
         XC    ATTTCB(4),ATTTCB         SET NO TCB ADDRESS         BMD2
         B     LPABEND                  AND ISSUE ABEND MESSAGE    BMD2
         SPACE 1
LPATTACH ATTACH EPLOC=BLDL+4,DCB=0,ECB=ATTECB,SZERO=NO,            BMD2$
               STAI=(STAI,(R13)),PURGE=NONE,ASYNCH=YES,            BMD2$
               MF=(E,(1)),SF=(E,ATTLIST),SHSPV=78                  BMD2
         SPACE 1
          AIF   ('&SYSPARM' EQ '').SVCOK1                          LDW2
         ORG   *-2                      BACK OVER THE SVC          LDW2
         SVC   &SYSPARM                                            LDW2
.SVCOK1   ANOP                                                     LDW2
         SPACE 1
         B     ATTCOMM                  AND CONTINUE AS NORMAL     BMD2
         EJECT ,
ATTACH   ATTACH DE=BLDL+4,DCB=0,ECB=ATTECB,SZERO=NO,                   $
               STAI=(STAI,(R13)),PURGE=NONE,ASYNCH=YES,                $
               MF=(E,(1)),SF=(E,ATTLIST),SHSPV=78                  BMD1
         SPACE 1
          AIF   ('&SYSPARM' EQ '').SVCOK2                          LDW2
         ORG   *-2                      BACK OVER THE SVC          LDW2
         SVC   &SYSPARM                                            LDW2
.SVCOK2   ANOP                                                     LDW2
         SPACE 1
ATTCOMM  LTR   R15,R15                  TEST RETURN CODE           BMD2
         BZ    ATTWAIT                  OK, SAVE TCB AND WAIT
         LA    R1,MSG10                 MESSAGE ADDRESS
         LA    R0,L'MSG10               AND LEN
         B     PRELEAVX                 DONE FOR
         SPACE 3
ATTWAIT  ST    R1,ATTTCB                SAVE TCB ADDRESS
         WAIT  1,ECB=ATTECB             WAIT FOR SUBTASK
         OC    STAECMP(4),STAECMP       GET CMP FROM TASK
         BZ    GETRC                    OK, GET RETURN CODE
LPABEND  MVI   STAECMP,X'00'            CLEAR HIGH BYTE            BMD2
         L     R1,STAECMP               GET IT
         SLL   R1,4                     NOW HAVE 0SSSUUU0
         ST    R1,ATTECB                SAVE IT
         MVC   PARM(L'ABCODE),ABCODE
         MVC   PARM+MODOFF(8),BLDL+4    MOVE IN MOD NAME
         UNPK  DOUBLE(4),ATTECB(3)      GET FOR HEX
         MVC   PARM+ABSYS(3),DOUBLE     DO THAT
         TR    PARM+ABSYS(3),TRT        GET IN PRINTABLE
         MVC   ATTECB(2),STAECMP+2      GET LOW 2 BYTES
         NI    ATTECB,X'0F'             OFF LOW SYSTEM BYTE
         LH    R15,ATTECB               LOAD CMP CODE
         CVD   R15,DOUBLE               CONVERT IT
         UNPK  PARM+ABUSER(4),DOUBLE+5(3)
         OI    PARM+ABUSER+3,C'0'       PRINTABLE
         B     DETACH                   DO DETACH
         SPACE 3
GETRC    L     R15,ATTECB               GET ECB
         LA    R15,0(,R15)              OFF POST FLAGS
         LTR   R15,R15                  TEST RETURN CODE
         ST    R15,STAECMP              SAVE IT IN RIGHT FIELD
         MVI   STAECMP,X'FF'            SET NO-FLAG
         BZ    DETACH                   NO FORMAT TO DO
         MVI   STAECMP,X'00'            OFF FLAG
         CVD   R15,DOUBLE               CONVERT IT
         MVC   PARM(L'NONZERO),NONZERO  MOVE IN CODE
         MVC   PARM+MODOFF(8),BLDL+4    MOVE IN NAME
         UNPK  PARM+NONCODE(8),DOUBLE+3(5)
         OI    PARM+NONCODE+7,C'0'      PRINTABLE
         EJECT
DETACH   OC    ATTTCB(4),ATTTCB         IS THERE A TCB?            BMD2
         BZ    DETACH2                  NOPE, MUST BE FAKED EXIT   BMD2
         DETACH ATTTCB,STAE=NO          NO CHANCE                  BMD2
DETACH2  LA    R1,PARM                  LOAD ADDRESS OF ROUTINE    BMD2
         LA    R0,L'NONZERO             BOTH SAME LEN
         CLI   STAECMP,X'FF'            CMP ZERO?
         BE    RELEASEA                 YES, NO MESSAGE
         B     PRELEAVE                 DIE NOW
         TITLE '$ - STAI EXIT ROUTINE'
         DROPX ,                                                   LDW1
         USNGX STAI,R15                 TELL ASSEMBLER             LDW1
STAI     CH    R0,=H'12'                CODE FOR NO CORE?
         BE    STAINCOR                 NO CORE, OK
         L     R2,0(,R1)                GET ADDR OF PARM
         USNGX TSODSECT,R2              TELL ASSEMBLER             LDW1
         OC    STAECMP(4),STAECMP       SET CONDITION CODE
         BNZ   STAIDIE                  RECURSION-DIE
         MVC   STAECMP(4),4(R1)         COPY STAE ABCODE
         B     STAIDO                   GO TO RETRY ROUTINE
         SPACE 3
STAINCOR OC    STAECMP(4),STAECMP       SET CONDITION CODE
         BNZ   STAIDIE                  STAI-RECURSION DIE
         ST    R1,STAECMP               SAVE CMP AS PUT THERE
STAIDO   LA    R0,STAITRY               LOAD STAE RETRY ROUTINE
         LA    R15,4                    LOAD RETRY CODE
         SVC   3                        RETURN TO ASIR
         SPACE 1
STAIDIE  LR    R3,R1                    SAVE POINTER
         POST  ATTECB,0                 POST MY MOTHER
         XC    DOUBLE(4),DOUBLE         CLEAR IT
         WAIT  1,ECB=DOUBLE             STOP HERE
         DROPX ,                                                   LDW1
STAITRY  STAE  0,CT                     CLEAR ANY STAE CB'S
         SVC   3                        RETURN UP ANOTHER LEVEL
         EJECT
         USNGX TSODSECT,R13             RE-ESTABLIST FOR EX'D ISNS LDW1
MVCMOD   MVC   BLDL+4(0),0(R1)          <<EXECUTED>>
MVCPARM  MVC   PARM+2(0),0(R3)          <<EXECUTED>>
         SPACE 2
HERMAN   LTORG
         CVT   DSECT=YES                                           BMD2
*LDW1    END   $,(B.M.DANE,0300,80008)                             BMD2
         END   ,                                                   LDW1
