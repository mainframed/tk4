***********************************************************************
*                                                                     *
*                *===================================*                *
*                *  COPYRIGHT NOTICE AND DISCLAIMER  *                *
*                *===================================*                *
*                                                                     *
*   Copyright (c) 1990 by Leonard D. Woren.                           *
*   All rights reserved, except as explicitly noted herein.  This     *
*   program may be used, modified, and distributed, provided that     *
*   all of the following conditions are met:                          *
*                                                                     *
*   (1)  This notice and all references to the original author(s)     *
*        are retained forever in all copies and versions of the       *
*        source.                                                      *
*                                                                     *
*   (2)  This program may be distributed via "public domain" mods     *
*        tapes, such as the SHARE mods tape, the CBT (Connecticut     *
*        Bank and Trust) tape, the LA MVSUG (Los Angeles MVS User's   *
*        Group) tape, etc, etc.  Only versions of this program        *
*        authorized by Leonard D. Woren may be placed on these        *
*        tapes.  Distribution of modified versions of this program,   *
*        via the above named tapes or via any method, is              *
*        specifically prohibited.  (Please see reason mentioned       *
*        below.)                                                      *
*                                                                     *
*   (3)  Permission is specifically NOT given to distribute MODIFIED  *
*        versions of this program.  Modified versions may be used     *
*        only at the site making the mods.  (Please see reason        *
*        mentioned below.)                                            *
*                                                                     *
*   (4)  The only charge which may be made for distribution is to     *
*        recover real costs, such as postage, or creating a tape.     *
*                                                                     *
*   (5)  The only charge for running the program which may be made    *
*        is your normal charge for computer time.                     *
*                                                                     *
*                                                                     *
*   The reason for the restrictions on distribution of modified       *
*   versions is to try to prevent circulation of many different       *
*   versions of the program, each with a few features that aren't     *
*   in any other version.                                             *
*                                                                     *
*   Since everyone will benefit from this, please send all updates    *
*   to me.  (Address below.)  I will try merge them in, if they       *
*   have been made to a reasonably current version of the source,     *
*   and if they are in keeping with the general design of the rest    *
*   of the program.  Mods may be altered by me for this purpose.      *
*   Any such mods which are incorporated into the program will then   *
*   become governed by the restrictions specified here for the whole  *
*   program, with appropriate credit to the contributor.              *
*                                                                     *
*   Although this program has been extensively tested, and is in use  *
*   in a production environment (MVS/ESA release 3.1.3, w/DFP 3.2),   *
*   no guarantee is made of (or responsibility assumed for) correct   *
*   or reliable operation.  I may try to help with problems.  I do    *
*   not assume any responsibility to distribute updates.              *
*                                                                     *
*   CONTACT:                                                          *
*          Leonard D. Woren                                           *
*        snail-mail:                                                  *
*          University of Southern California                          *
*          University Park  Mail Code 0251                            *
*          Los Angeles, CA   90089-0251                               *
*                                                                     *
*        e-mail:                                                      *
*          LDW@USCMVSA.BITNET                                         *
*          LDW@MVSA.USC.EDU                                           *
*          ...!usc!ldw                                                *
*                                                                     *
*          (213) 740-2875 (direct -- 11 am to 7 pm Pacific time)      *
*                                                                     *
*          I prefer electronic mail.  If you call me long distance    *
*          and leave a msg because you didn't get me, there's a good  *
*          chance that I won't call back.  Moral:  don't leave a      *
*          message for me to call you back unless you're in 213,      *
*          818, 714, or 310.  Sorry.                                  *
*                                                                     *
*          SHARE installation code:  USC                              *
*          GUIDE installation code:  OUY                              *
*                                                                     *
***********************************************************************
         EJECT ,
CHIMP TITLE 'C H I M P - MAIN STORAGE MONITOR (REAL TIME) DCMS VERSION'
***********************************************************************
*.
* IN CASE YOU ARE INTERESTED, THE SOURCE OF THE NAME (OR RATHER THE
* JUSTIFICATION FOR THE NAME) OF THIS SILLY PROGRAM IS/WAS:
*  COMPUTERIZED HEURISTIC INFORMATION MONITORING PROGRAM  (WHEW!)
* THIS COMMAND HAS SEVERAL DIFFERENT MODES OF DISPLAY:
*
*     I   - THIS MODE WILL DISPLAY ONLY THOSE MEMORIES WHICH ARE EITHER
*           SWAPPED IN AND RUNNING OR SWAPPED OUT BUT READY TO RUN.
*     O   - THIS MODE WILL DISPLAY ALL ACTIVE MEMORIES IN THE SYSTEM,
*           REGARDLESS OF LOCATION.
*
*   TO SWITCH BETWEEN MODES, TYPE EITHER I OR O.
*
*      YOU MAY ALSO ENTER OPTIONS TO RESTRICT THE OUTPUT TO ONLY
*      TSO MEMORIES (IN EITHER IN/OUT OR WAITING STATUS ACCORDING
*      TO YOUR USE OF THE I AND O OPTIONS ABOVE) OR ONLY STARTED
*      TASK/BATCH JOB MEMORIES:
*
*     T  - RESTRICTS THE OUTPUT TO ONLY TSO MEMORIES
*
*     J  - RESTRICTS THE OUTPUT TO ONLY BATCH MEMORIES
*
*     S  - RESTRICTS THE OUTPUT TO ONLY STARTED TASK MEMORIES
*
*     B  - RESTRICTS THE OUTPUT TO STARTED TASK/BATCH MEMORIES
*
*     A  - SELECTS ALL - TSO, STARTED TASK, AND BATCH MEMORIES
*
*   TO EXIT FROM THIS COMMAND, SIMPLY TYPE E (FOR END),
*         OR HIT PA1 (ATTN) OR PF3 OR PF12 (DCMS STANDARD EXIT)
*
*  GLOSSARY OF TERMS FOR OUTPUT DISPLAY:
*
*    JOB       JOB NAME OF MEMORY
*    STEP      FOR BATCH JOBS WILL ALWAYS BE INIT.
*              FIXED TO SHOW ACTUAL BATCH STEP NAME                U001
*              FOR TSO JOBS AND STARTED TASKS WILL BE ACTUAL STEP NAME.
*    RL        REASON CODE FOR SWAP OUT FROM OUCBPFL.
*              THE FOLLOWING ARE THE REASON CODES DISPLAYED:
*                R  RESET VALUE.
*                W  MEMORY IS IN LONG WAIT OR INPUT TERMINAL WAIT.
*                T  MEMORY IS IN OUTPUT TERMINAL WAIT.
*                E  AN ENQHOLD HAS BEEN RECEIVED FOR THIS MEMORY.
*                V  MEMORY WAS SWAPPED OUT BY MS6 LONG WAIT DETECTION.
*                O  MEMORY WAS SWAPPED OUT TO MAKE ROOM FOR TSO TRIV.
*                P  INVOLUNTARY SWAPOUT USUALLY DUE TO PARTIAL ANAL.
*                S  SWAPOUT CAUSED BY REAL STORAGE SHORTAGE.
*                ?  UNABLE TO DETERMINE SWAPOUT REASON.
*    FRAMES    CURRENT AMOUNT OF MEMORY ALLOCATED TO THIS MEMORY.
*    WSS       SRM'S VIEW OF THE WORKING SET SIZE FOR THIS MEMORY.
*    T         TYPE OF MEMORY (S=STC OR MOUNT, T=TSO, J=BATCH)     U001
*    CL        CURRENT LOCATION OF THIS MEMORY:
*                IN  SWAPPED IN AND ELIGIBLE TO RUN.
*                OUT SWAPPED OUT BUT READY TO RUN.
*                WT  SWAPPED OUT AND NOT READY TO RUN.
*                N/S SWAPPED IN AND V=R OR NON-SWAPPABLE STATUS.
*                <-> TRANSITIONING BETWEEN STATES.
*    DP        DISPATCHING PRIORITY OF MEMORY (IN HEX).
*    PG        PERFORMANCE GROUP.
*    SC        NUMBER OF TIMES THE MEMORY HAS BEEN SWAPPED IN THE
*              CURRENT TRANSACTION.
*    WMR       CURRENT SRM WORKLOAD MANAGER RECOMMENDATION VALUE.
*              (ACTUALLY THE WORKLOAD LEVEL AT WHICH THIS MEMORY IS
*               OPERATING).
*    SRV       SERVICE ACCUMULATED IN THE LAST SWAPPED IN PERIOD.
*    CPU       CPU TIME IN SECONDS USED BY THE MEMORY (SRB PLUS TASK).
*
*  MODIFIED TO RUN REAL TIME UNDER DCMS NOV  25, 1976 (HAPPY       U001
*  THANKSGIVING )                                                  U001
*  - WHEN RUNNING UNDER DCMS THE FOLLOWING DIFFERENCES OCCUR       U001
*    . THE SCREEN IS UPDATED ON  AN INTERVAL SPECIFIED BY THE      U001
*      USER ( DEFAULT SET TO ONE SECOND )                          U001
*                                                                  U001
*       3270                                                       U001
*        KEY     FUNCTION                                          U001
*      ________  ________________________________________________  U001
*                                                                  U001
*    .  -----                                                      U001
*      × PF1 ×   DISPLAY HELP SCREEN                               U005
*      ×     ×                                                     U001
*       -----                                                      U001
*                                                                  U001
*    .  -----                                                      U001
*      × PF2 ×   START AUTO UPDATING.                              U005
*      ×     ×                                                     U001
*       -----                                                      U001
*                                                                  U001
*    .  -----                                                      U001
*      × PF3 ×   EXIT CHIMP                                        U005
*      ×PF12 ×                                                     U001
*       -----                                                      U001
*                                                                  U001
*    .  -----                                                      U001
*      × PA1 ×   WILL GET THE USER OUT OF  CHIMP WHEN ALL          U001
*      ×     ×   ELSE FAILS                                        U001
*       -----                                                      U001
*                                                                  U001
*                                                                  U001
*    ANY PROBLEMS, COMMENTS (NON-CAUSTIC), SUGGESTIONS ARE         U001
*    WELCOME:                                                      U001
*       FRED LUDDY                                                 U001
*       AMDAHL CORP.                                               U001
*       1250 E. ARQUES                                             U001
*       SUNNYVALE CA. 95051                                        U001
*    PHONE:                                                        U001
*       (408) - 735 - 4011                                         U001
*
*    PROGRAM CHANGED TO DCMS STANDARDS, CODE ADDED FOR STARTED     U003
*    TASK SELECTION, AND AUTO UPDATE UNDER TSO, FEB. 79, BY:       U003
*       DWIGHT HARM                                                U003
*       SYSTEM DEV. CORP.                                          U003
*       2500 COLORADO AVE.                                         U003
*       SANTA MONICA, CA. 90405                                    U003
*    PHONE:                                                        U003
*       (213) - 829-7511 X2423 OR X3701                            U003
*
*  Updates:
*    16Dec90  U026 LDW  Correct frame count & WSS for MVS/SP 3.1
*    21Sep89  U025 LDW  Fix bug in CPU display for > 9999.99 seconds
*    08Apr89  U024 LDW  Indicate disconnected TSO users via '*' in last
*                          character of userid field
*    20Aug88  U023 LDW  Display frames in M if > 9999K
*    29Aug87  U022 LDW  Fix for MVS/XA
*                       Fix for missing info for TSO "STARTING"
*                       Change various char constants to lower case
*    20Jun87  U021 LDW  For TSO address spaces, display VTAM terminal
*                          id in PROCSTEP field if CHIMP is APF auth
*                       Rearrange stuff to fix addressability problem
*                       Don't use LC macro anymore
*                       Add third help screen to split out pfk defs
*                       Copy help text to workarea so that help screens
*                          don't upper case after first time
*    04Apr87  U020 LDW  Add "D" command for detail display
*    26DEC86  U019 LDW  DISPLAY IDLE TIME ON HEX SCREEN
*                       USE &@@SPLVL IN @GLOBALS INSTEAD OF &LEVEL
*    02/24/86 U018 LDW  ALLOW MVS OPERATOR COMMANDS TO BE ISSUED VIA
*                          "/XXX"
*    07/31/84 U017 LDW  DISPLAY 6 DIGITS OF IOREQ INSTEAD OF 5
*                       RE-WRITE SERVICE UNITS DISPLAY CODE
*    ??/??/?? U016 LDW  FORGOT AN UPDATE NOTE IN HERE SOMEWHERE...
*    08/01/83 U015 LDW  DISPLAY PERF GROUP PERIOD ON PF5 TYPE DISPLAY
*                       CHANGE SOME HEADERS TO LOWER CASE
*                       DELETE SOME OLD COMMENTED OUT CODE
*                       FIX FOR SERVICE UNITS > 99.9M
*                       DON'T CHECK LOGICAL SWAP IF NOT SP
*                       FIX SELECTION CODE FOR STARTED TASKS SO THAT
*                          'J' COMMAND DOES NOT ALSO SELECT STC'S
*                       CLEAN UP TYPE SELECTION
*                       CHANGE HELP SCREENS TO LOWER CASE
*    07/08/82 U014 LDW  ADD MORE STUPID EQUATES FOR SP1 "IRARMCT" MACRO
*    05/25/82 U013 LDW  DISPLAY 4 DIGITS OF SWAP COUNT (NOTE: IT WILL
*                          RUN INTO PRECEDING FIELD IF > 999)
*    04/13/82 U012 LDW  FIX SERVICE UNITS WHEN DISPLAYED AS "M"
*    03/29/82 U011 LDW  ADD "LOGICAL SWAP" LOCATION TYPE
*    03/23/82 U010 LDW  REDESIGN FIELD DISPLAY LOGIC SO CAN HAVE
*                          DIFFERENT COMBINATIONS OF FIELDS DISPLAYED
*                       ADD 'X' COMMAND TO DISPLAY HEX STUFF, 'D'
*                          TO RESET TO NORMAL DISPLAY ('X' WILL
*                          FLIPFLOP, AND IS RESTRICTED) (MAKE PF5='X')
*                       SPLIT FLAGS INTO 2 FLAG BYTES, CHANGE NAMES
*                          (MOST OF THIS UPDATE NOT MARKED)
*                       USING -> USNGX, DROP -> DROPX
*                       ADD "Z" COMMAND TO EXIT
*                       ADD "U" COMMAND TO PRETEND TO SET DISPLAY LIKE
*                          DUMB USER (PF6='U')
*                       ATTEMPT TO FIX BLANK SCREEN OVERFLOW PROBLEM
*    03/22/82 U009 LDW  PUT IN CONDITIONAL ASSEMBLY FOR SP1.1
*    02/11/82 U008 LDW  FIX FOR TOO LARGE CPU AND SERVICE UNIT VALUES
*    12/07/81 U007 LDW  FIX DISPLAY OF LOCATION AND SWAP REASON CODE
*                          (RE-ARRANGE COLUMNS TO DO THIS RIGHT)
*                       FIX MISSING TITLE ON SECOND SCREEN BUG
*                       ADD DISPLAY OF VARIOUS SRM DATA
*                       ONLY DISPLAY PGN/DMN IF OPERATOR
*                       GENERAL RE-ARRANGEMENT OF DISPLAY DATA
*                       FIX UP HELP SCREENS
*                       USE ALL APPROPRIATE DSECTS INSTEAD OF OFFSETS
*    09/23/81 U006 LDW  FIX DISPLAY OF I/O > 99999
*    07/25/80 U005 LDW  ADD HELP SCREEN
*                       STANDARDIZE PF KEYS
*    03/21/80 U004 LDW  SHOW I/O COUNT
*                       FIX FOR OVERFLOW IN SERVICE UNITS DISPLAY
*                       USE DSECTS CORRECTLY
*                       GENERAL CLEANUP
*    02/  /79 U003 DLH  DWIGHT HARM CHANGES @ SDC
*    11/27/76 U002 SU7  REPAIR DAMAGE TO OUCB LEFT BY SUPER 1 & 2 SU'S
*    11/25/76 U001      FRED LUDDY CHANGES @ AMDAHL
*.
***********************************************************************
         SPACE 3
         MACRO                                                     U005
&NFS     FLD   &INTEN,&TEXT,&OPTION=,&CURSOR=NO,&ROW=,&COLUMN=,    U021$
               &FUDGE=0                                            U???
         LCLA  &L,&I                                               U005
&L       SETA  K'&TEXT-2-&FUDGE                                    U005
         MNOTE '         DCMSFLD  &L,&OPTION,INTEN=&INTEN,CURSOR=&CURSO$
               R,ROW=&ROW,COLUMN=&COLUMN'                          U005
&NFS     DCMSFLD  &L,&OPTION,INTEN=&INTEN,CURSOR=&CURSOR,ROW=&ROW, U005$
               COLUMN=&COLUMN                                      U005
HELPIMG  CSECT ,                        RESUME
         DC    C&TEXT
CHIMP    CSECT
*---------------------------------------------------------------------*
         SPACE 2
         MEND                                                      U005
         SPACE 2
*U019    GBLA  &LEVEL                                              U009
*&LEVEL  SETA  13                       MVS/SP1.3                  U015
         COPY  @GLOBALS                                            U019
         EJECT
CHIMP    DCMSTART RENT,STAE=NO,LV=4096
         MVI   FLAG1,F1JOBS+F1INONLY+F1TSO  DEFAULT=IN JOBS & TSO
         MVI   FLAG2,F2USER             ASSUME DUMB USER           U010
         L     R1,PSATOLD-PSA           -> MY TCB                  U007
         L     R1,TCBJSCB-TCB(,R1)      -> JSCB                    U007
         L     R1,JSCBPSCB-IEZJSCB(,R1) -> PSCB                    U007
         TM    PSCBATR1-PSCB(R1),PSCBCTRL  OPERATOR?               U007
         BNO   *+8                      NO - SKIP                  U007
         XI    FLAG2,F2OPER+F2USER      YES - SET OPER, RESET USER U010
*
         TESTAUTH  FCTN=1                                          U021
         SPACE 1
         LTR   R15,R15                  are we APF authorized?     U021
         BNZ   *+8                      no - skip                  U021
         OI    FLAG2,F2APF              yes - remember             U021
         SPACE 1
          AIF   (&@@SPLVL LT 130).NOTXA1                           U022
         L     R1,CVTPTR                LOAD PTR TO CVT.           U022
         TM    CVTDCB-CVT(R1),CVTMVSE   running under MVS/XA?      U022
         BZ    NOT$XA1                  no - skip                  U022
         OI    FLAG2,F2MVSE             yes - remember             U022
          AIF   (&@@SPLVL LT 200).NOTXA1                           U022
         $AMODE  31                                                U022
NOT$XA1  EQU   *                                                   U022
.NOTXA1   ANOP                                                     U022
*
         BAL   R14,CLEARIT              CLEAR SCREEN
*
RESTART  EQU   *
         L     R1,CVTPTR                LOAD PTR TO CVT.           U007
         L     R1,CVTASVT-CVT(,R1)      TO ASVT                    U007
         L     R8,ASVTMAXU-ASVT(,R1)    MAXIMUM NUMBER OF ENTRIES  U007
         LA    R9,ASVTENTY-4-ASVT(,R1)  FIRST ENTRY MINUS 4.       U007
         LA    R1,SCR1+7                ADDR OF FIRST ATTR BYTE-2
         ST    R1,ATTRLOC               SAVE FOR LATER
         ST    R1,FIRSTATR              SAVE FOR LATER
*
         LA    R4,LINE1                 -> PLACE FOR HEADER LINE   U021
         L     R15,=A(HEADERS)          -> COLUMN HEADERS          U010
         BAL   R14,MOVEDATA             BUILD THE CORRECT HEADING  U010
         LA    R4,LINE2                 LOAD ADDR OF OUTPUT BUFFER U010
         MVC   CURLINES,TOTLINES        CURRENT LINES AVAILABLE    U003
ASCBLOOP LA    R9,4(,R9)                -> NEXT ASCB POINTER       U007
         ICM   R5,B'1111',0(R9)         LOAD THE PTR.              U007
         BM    NEXTASCB                 BRANCH IF ASID NOT IN USE
         MVC   FIELDS(L'BLANKS),BLANKS  CLEAR ALL DISPLAY FIELDS   U010
         MVC   FIELDS+L'BLANKS(FIELDLEN-L'BLANKS),BLANKS  THE REST U010
         USNGX ASCB,R5                                             U001
         UNPK  EDITWORK(6+1),1(3+1,R9)  FORMAT THE ASCB ADDRESS    U010
         TR    EDITWORK(6),TRTBL        MAKE IT PRINTABLE          U010
         MVC   F@ASCB,EDITWORK          SAVE                       U010
         UNPK  EDITWORK(4+1),ASCBASID(2+1)  FORMAT THE ASID        U010
         TR    EDITWORK(4),TRTBL        MAKE IT PRINTABLE          U010
         MVC   F@ASID,EDITWORK          SAVE                       U010
         TM    ASCBRCTF,ASCBOUT         TEST FOR SWAPPED OUT.
         BZ    SWAPDIN                  IN...ALWAYS DISPLAY        U003
         TM    FLAG1,F1INONLY           DID USER REQ ONLY IN?      U003
         BO    NEXTASCB                 ...YES, SKIP THIS ONE.     U003
*
SWAPDIN  EQU   *
         L     R15,ASCBOUCB             LOAD OUCB POINTER
         USNGX OUCB,R15                                            U004
         MVI   STATFLAG,X'00'           CLEAR BYTE FOR TESTING
         TM    OUCBYFL,OUCBLOG          IT IS TSO?
         BZ    NOTTSO
         OI    STATFLAG,F1TSO           YES, SET FLAG
         B     CKFLAGS                  AND COMPARE TO REQUESTED
         DROPX R15                                                 U015
*
*NOTTSO  TM    ASCBFLG1,ASCBTOFF        TIMING OFF = STARTED TASK
*U015    BZ    NOTSTC                   YES - MUST BE BATCH JOB    U015
NOTTSO   CLC   ASCBJBNI,=F'0'           ANY INITIATED JOBNAME PTR? U015
         BNE   NOTSTC                   YES - MUST BE BATCH JOB    U015
         OI    STATFLAG,F1STC           SET FLAG
         B     CKFLAGS                  AND COMPARE TO REQUESTED
*
NOTSTC   OI    STATFLAG,F1JOBS          MUST BE BATCH
*
CKFLAGS  NC    STATFLAG,FLAG1           CHECK FOR MATCH
         BZ    NEXTASCB                 NO MATCH...SKIP IT.
*
         L     R7,ATTRLOC               LAST ATTRIBUTE BYTE        U007
         LA    R7,8(,R7)                THIS ATTRIBUTE BYTE        U007
         ST    R7,ATTRLOC                                          U007
*
         MVC   0(79,R4),BLANKS          CLEAR THIS LINE            U021
         MVC   F@JOB,=CL8'starting'     TO BYPASS GARBAGE          U022
         L     R15,ASCBJBNI             AN INITIATED JOB ?         U001
         LTR   R15,R15                  ...                        U001
         BZ    NOTINIT                  NO                         U001
         MVC   F@JOB,0(R15)             MOVE JOBNAME               U001
*                                                                  U001
* INITIATED JOBS DO NOT HAVE A CSCB PTR, BUT ASCBJBNI POINTS TO    U001
* CHKEY WHICH IS 8 INTO THE CSCB.                                  U001
*                                                                  U001
         USNGX CHKEY,R15                                           U004
         MVC   F@STEP,CHSTEP            MOVE THE STEPNAME          U001
         MVC   F@PROC,CHPROCSN          MOVE THE PROCSTEPNAME      U010
         MVI   F@TYPE,C'j'              ADD BATCH TYPE             U004
         B     STEPOK                   AN DAS AWL                 U001
         DROPX R15                                                 U001
         SPACE 2                                                   U001
NOTINIT  EQU   *                                                   U001
         L     R15,ASCBJBNS             GET HIS NAME               U001
         LTR   R15,R15                                             U001
*U022    BZ    STEPOK                   UNDECIDED ...              U001
         BZ    *+10                     UNDECIDED ...              U022
         MVC   F@JOB,0(R15)             MOVE JOBNAME               U001
*                                                                  U001
*                                                                  U001
* S / M / L SHOULD ALWAYS HAVE A CSCB PTR.                         U001
*                                                                  U001
         L     R15,ASCBCSCB                                        U001
         LTR   R15,R15                                             U001
         BZ    STEPOK                   I GIVE UP                  U001
         USNGX CSCB,R15                                            U001
         MVC   F@STEP,CHCLS             MOVE THE STEPNAME          U001
         MVC   F@PROC,CHPROCSN          MOVE THE PROCNAME          U010
         MVI   F@TYPE,C't'              DEFAULT TSO                U001
         CLI   CHTRKID,CHTSID           IS IT ?                    U001
         BE    STEPTSO                  YES.                       U001
         MVI   F@TYPE,C's'              INDICATE STARTED TASK      U001
         MVC   F@PROC,CHPROCSN          MOVE THE PROCNAME          U021
         DROPX R15                                                 U004
         B     STEPOK                   continue                   U021
         SPACE 1
STEPTSO  TM    FLAG2,F2APF              are we APF authorized?     U021
         BZ    STEPOK                   no skip                    U021
         L     R2,ASCBTSB               -> TSB                     U021
         MODESET  KEY=ZERO                                         U021
         MVC   F@PROC,TSBTRMID-TSB(R2)  put termid in procstep     U021
         TM    TSBFLG4-TSB(R2),TSBHUNG  has terminal hung up?      U024
         BZ    *+8                      no - ok                    U024
         MVI   F@JOB+7,C'*'             yes - indicate disc        U024
         MODESET  KEY=NZERO                                        U021
STEPOK   DS    0H
          AIF   (&@@SPLVL GE 300).FMCTESA                          U026
         LH    R0,ASCBFMCT              LOAD ALLOC FRAME COUNT.
          AGO   .FMCTOK                                            U026
.FMCTESA  ANOP                                                     U026
         L     R14,ASCBRSME             -> RAX                     U026
         L     R0,RAXFMCT-RAX(,R14)     get current frame count    U026
.FMCTOK   ANOP                                                     U026
         SLL   R0,2                     4K PER FRAME.
         BAL   R14,STORAGE              CONVERT TO DECIMAL FORMAT. U004
         MVC   F@FRAMES,EDITWORK+4      MOVE IN 4 DIGITS + 'K'     U023
         CH    R0,=H'9999'              too big for field?         U023
         BNH   FRAMESOK                 no - ok                    U023
         MVI   F@FRAMES+4,C'M'          yes - change units type    U023
         MVC   F@FRAMES(2),EDITWORK+3   move in mm                 U023
         MVI   F@FRAMES+2,C'.'          decimal point              U023
         MVC   F@FRAMES+3(1),EDITWORK+3 move in hundred thousands  U023
         C     R0,=F'99999'             did it fit as mm.m?        U023
         BNH   FRAMESOK                 yes - ok                   U023
         MVC   F@FRAMES,EDITWORK+1      no - move in 4 digits      U023
         SPACE 1
FRAMESOK EQU   *                                                   U023
         L     R6,ASCBOUCB              PTR TO OUCB.
         USNGX OUCB,R6                                             U004
          AIF   (&@@SPLVL GE 300).WSSESA  maybe earlier than 3.1?  U026
         LH    R0,OUCBWSS               SRM'S IDEA OF WORKING SET  U002
          AGO   .WSSOK                                             U026
.WSSESA   ANOP                                                     U026
         L     R0,OUCBWSS               working set size           U026
.WSSOK    ANOP                                                     U026
         SLL   R0,2                     TIMES FOUR FOR K.
         BAL   R14,STORAGE              CONVERT TO DECIMAL.
         MVC   F@WSS,EDITWORK+4         MOVE IN 4 DIGITS + 'K'     U023
         CH    R0,=H'999'               too big for field?         U023
         BNH   *+14          >=======+  no - ok                    U023
         MVC   F@WSS,EDITWORK+1      ×  move in 4 digits           U023
         MVI   F@WSS+4,C'M'          V  and show units type        U023
         SPACE 1
         MVC   F@WHERE,=C'in'           DEFAULT MEMORY POS IS IN   U007
         MVI   0(R7),X'F8'              SET DCMS HI-INTEN ATR BYTE U003
         TM    OUCBSFL,OUCBNSW          TEST FOR NON-SWAP          U007
         BZ    TRYPRIV                  BRANCH IF NOT NON-SWAP.    U007
         MVC   F@WHERE,=C'ns'           INDICATE NON-SWAPPABLE     U007
         B     WHEREOK                  SKIP REST OF POSITION PROC'ING
TRYPRIV  DS    0H                                                  U007
         TM    OUCBSFL,OUCBPVL          PRIVILEGED PGM RUNNING?    U007
         BZ    TRYMSO                   NO - SKIP                  U007
         MVC   F@WHERE,=C'pr'           YES - INDICATE             U007
         MVI   0(R7),X'F4'              SET LOW INTENSITY          U007
TRYMSO   DS    0H                                                  U007
         TM    OUCBQFL,OUCBOFF          REQ: ENTER WAIT STATE?     U007
         BZ    NOTOFF                   NO - SKIP THIS SECTION     U007
         TM    OUCBEFL,OUCBMWT          MSO DETECTED WAIT STATUS?  U007
         BZ    TRYTERM                  NO - SKIP                  U007
         MVC   F@WHERE,=C'wm'           YES - INDICATE             U007
         MVI   0(R7),X'F4'              SET LOW INTENSITY          U007
         B     WHEREOK                  DONE HERE                  U007
TRYTERM  DS    0H                                                  U007
         TM    OUCBEFL,OUCBTRM          TERMINAL WAIT STATUS?      U007
         BZ    TRYLONG                  NO - SKIP                  U007
         MVC   F@WHERE,=C'wt'           YES - INDICATE             U007
*U019     AIF   (&LEVEL LT 11).LSW01    SKIP IF NOT SP             U015
          AIF   (&@@SPLVL LT 110).LSW01 SKIP IF NOT SP             U019
         TM    OUCBQFL,OUCBLSW          LOGICALLY SWAPPED?         U011
         BNO   *+10                     NO - SKIP                  U011
         MVC   F@WHERE,=C'lo'           YES - INDICATE             U011
.LSW01    ANOP                                                     U015
         MVI   0(R7),X'F4'              SET LOW INTENSITY          U007
         B     WHEREOK                  DONE HERE                  U007
TRYLONG  DS    0H                                                  U007
         TM    OUCBEFL,OUCBLWT          LONG WAIT STATUS?          U007
         BZ    OTHRWAIT                 NO - SKIP                  U007
         MVC   F@WHERE,=C'wl'           YES - INDICATE             U007
         MVI   0(R7),X'F4'              SET LOW INTENSITY          U007
         B     WHEREOK                  DONE HERE                  U007
OTHRWAIT DS    0H                                                  U007
         MVC   F@WHERE,=C'wo'           INDICATE OTHER WAIT        U007
         MVI   0(R7),X'F4'              SET LOW INTENSITY          U007
NOTOFF   DS    0H                                                  U007
         TM    OUCBQFL,OUCBGOB          TRANS'ING BETWEEN STATES?  U007
         BZ    TRYTRANO                 NO - SKIP                  U007
         MVC   F@WHERE,=C'<>'           YES - INDICATE             U007
         MVI   0(R7),X'F8'              SET HIGH INTENSITY         U007
         B     WHEREOK                  DONE HERE                  U007
TRYTRANO DS    0H                                                  U007
         TM    OUCBQFL,OUCBGOO          TRANSITIONING OUT?         U007
         BZ    TRYTRANI                 NO - SKIP                  U007
         MVC   F@WHERE,=C'>>'           YES - INDICATE             U007
         MVI   0(R7),X'F8'              SET HIGH INTENSITY         U007
         B     WHEREOK                  DONE HERE                  U007
TRYTRANI DS    0H                                                  U007
         TM    OUCBQFL,OUCBGOI          TRANSITIONING IN?          U007
         BZ    WHEREOK                  NO - SKIP                  U007
         MVC   F@WHERE,=C'<<'           YES - INDICATE             U007
         MVI   0(R7),X'F8'              SET HIGH INTENSITY         U007
         B     WHEREOK                  DONE HERE                  U007
WHEREOK  DS    0H
         UNPK  EDITWORK(2+1),ASCBDP(1+1) GET THE DISPATCHING PRTY  U010
         TR    EDITWORK(2),TRTBL        MAKE IT PRINTABLE          U010
         MVC   F@DP,EDITWORK            SAVE FORMATTED DPRTY       U010
*U019     AIF  (&LEVEL LT 11).PGN01     OLD WAY IF NOT MVS/SP1.1   U009
          AIF   (&@@SPLVL LT 110).PGN01 OLD WAY IF NOT MVS/SP1.1   U019
         LH    R0,OUCBNPG               NEW PGN                    U009
          AGO  .PGN02                                              U009
.PGN01    ANOP ,                                                   U009
         SR    R0,R0                    PREPARE FOR THE IC.
         IC    R0,OUCBNPG               NEW PGN
.PGN02    ANOP ,                                                   U009
         CVD   R0,WORK                  CONVERT IT TO DECIMAL.
         MVC   EDITWORK(4),=X'40202120' MOVE IN THE EDIT MASK.     U010
         ED    EDITWORK(4),WORK+6       EDIT THE OUTPUT FIELD.     U010
         MVC   F@PGN(3),EDITWORK+1      SAVE 3 DIGIT PERF GROUP    U010
*---  THE FOLLOWING CODE RIPPED OFF FROM ELSEWHERE...              ---*
*---  (I.E., I DON'T UNDERSTAND)                                   ---*
         SR    R15,R15                  CLEAR FOR IC               U015
         IC    R15,OUCBPGP              GET PGP OFFSET             U015
         SH    R15,=Y(WPGDLEN-WPGPLEN)  SUBTRACT HEADER LENGTH     U015
         SR    R14,R14                  CLEAR FOR DIVIDE           U015
         D     R14,=A(WPGPLEN)          DIVIDE BY ENTRY LENGTH     U015
         LA    R15,1+C'0'(,R15)         GET DISPLAYABLE NUMBER     U015
         MVI   F@PP,C' '                BLANK THE FIRST CHAR       U015
         STC   R15,F@PP+1               SAVE PERF GROUP PERIOD     U015
*  NOTE: THIS CODE FAILS IF PP > 9.                                U015
         LH    R15,OUCBSWC              GET SRM'S SWAP COUNT       U013
         CVD   R15,WORK                 CONVERT IT TO DECIMAL.     U013
         MVC   EDITWORK(6),=X'402020202120' MOVE IN THE EDIT MASK. U013
         ED    EDITWORK(6),WORK+5       EDIT THE OUTPUT FIELD.     U013
         MVC   F@SWC(4),EDITWORK+2      SAVE 4 DIGIT SWAP COUNT    U013
         CH    R15,=H'9999'             DID IT FIT?                U013
         BNH   SWAPOK                   YES                        U013
         SR    R14,R14                  CLEAR FOR DIVIDE           U013
         D     R14,=F'1000'             SCALE                      U013
         CVD   R15,WORK                 CONVERT IT TO DECIMAL.     U013
         MVC   EDITWORK(4),=X'40202120' MOVE IN THE EDIT MASK.     U013
         ED    EDITWORK(4),WORK+6       EDIT THE OUTPUT FIELD      U013
         MVC   F@SWC(3),EDITWORK+1      SAVE 3 DIGITS OF K SWAPS   U013
         MVI   F@SWC+3,C'k'             MAKE IT SAY 'K'            U013
SWAPOK   L     R0,OUCBWMR               WKLD MGR RECCOMENDATION    U002
         LTR   R0,R0                    SEE IF HI-ORDER BIT IS ON
         BNM   WMROK                    INDICATING WMR INVALID.
         MVC   F@WMR(5),=C'*n/a*'       IF SO, MOVE IN NOT AVAIL INDIC.
         MVI   F@SERV+4,C'-'            BLANK THE SERVICE COUNTER.
         B     WMSOK                    BY-PASS SERVICE PROCESSING.
WMROK    DS    0H
*U004    SRL   R0,8                     DIVIDE BY 256
         CVD   R0,WORK                  CONVERT IT TO DECIMAL.
         MVC   EDITWORK(6),=X'402020202120'  MOVE IN EDIT MASK.    U010
         ED    EDITWORK(6),WORK+5       EDIT THE RESULT            U010
         MVC   F@WMR,EDITWORK+2         SAVE THE RESULT            U010
WMROKA   DS    0H
         L     R0,ASCBIOSC              Get I/O count              U022
          AIF   (&@@SPLVL GE 200).GOTIO                            U022
         TM    FLAG2,F2MVSE             running MVS/XA?            U022
         BO    *+8                      yes - skip                 U022
*U022    L     R0,OUCBIOSM              GET TOTAL SMF I/O REQUESTS U004
         A     R0,OUCBIOSM              GET TOTAL SMF I/O REQUESTS U022
.GOTIO    ANOP                                                     U022
         CVD   R0,WORK                  CONVERT TO DECIMAL.        U004
         MVC   EDITWORK(10),=X'40202020202020202120'  GET MASK     U017
         ED    EDITWORK(10),WORK+3      MAKE IT PRINTABLE          U017
         MVC   F@IOREQ,EDITWORK+4       ASSUME IT FITS IN 6 CHARS  U017
         C     R0,=F'1E6'               TOO BIG FOR FIELD?         U017
         BL    IOROK                    NO - DONE                  U017
         MVC   F@IOREQ(5),EDITWORK+2    YES - GET THOUSANDS        U017
         MVI   F@IOREQ+5,C'k'           INDICATE K                 U017
         C     R0,=F'1E8'               TOO BIG FOR FIELD?         U017
         BL    IOROK                    NO - DONE                  U017
         MVI   F@IOREQ,C' '             YES...                     U017
         MVC   F@IOREQ+1(4),EDITWORK    ...   GET MILLIONS         U017
         MVI   F@IOREQ+5,C'm'           INDICATE M                 U017
         SPACE 1                                                   U004
IOROK    EQU   *                                                   U017
         EJECT ,                                                   U001
* SWAP REASON  CODE...
         LA    R15,=C'**'               ASSUME OUT OF RANGE        U007
         CLI   OUCBSRC,10               IS IT OVER OUR LIMIT ?     U001
         BH    WMR0                     GO AWAY IF HE'S IN-CORE    U001
*                                       OR OUT OF BOUNDS...        U001
         CLC   F@WHERE,=C'in'           SWAPPED IN?                U007
         BE    PFLDONE                  YES - SKIP REASON CODE     U007
         CLC   F@WHERE,=C'pr'           PRIVILEGED PROGRAM?        U007
         BE    PFLDONE                  YES - SKIP REASON CODE     U007
         CLC   F@WHERE,=C'ns'           NON-SWAPPABLE?             U007
         BE    PFLDONE                  YES - SKIP REASON CODE     U007
         XR    R15,R15                  CLEAR FOR IC               U007
         IC    R15,OUCBSRC              GET THE SWAP REASON CODE   U001
         AR    R15,R15                  ENTRIES ARE TWO BYTES      U007
         LA    R15,SWAPCODE(R15)        -> DISPLAYABLE REASON CODE U007
WMR0     EQU   *                                                   U001
         MVC   F@WHY,0(R15)             AND PLACE IN SCREEN BUFF   U007
PFLDONE  DS    0H
         L     R15,OUCBWMS              LOAD SERVICE UNITS THIS    U002
         CVD   R15,WORK                 CONVERT TO DECIMAL.
         MVC   EDITWORK(10),=X'40202020202020202120'  GET MASK     U017
         ED    EDITWORK(10),WORK+3      MAKE IT PRINTABLE          U017
         MVC   F@SERV,EDITWORK+5        ASSUME IT FITS IN 5 CHARS  U017
         C     R15,=F'1E5'              TOO BIG FOR FIELD?         U017
         BL    WMSOK                    NO - DONE                  U017
         MVC   F@SERV(4),EDITWORK+3     YES - GET THOUSANDS        U017
         MVI   F@SERV+4,C'k'            INDICATE K  (####K)        U017
         C     R15,=F'1E7'              TOO BIG FOR FIELD?         U017
         BL    WMSOK                    NO - DONE                  U017
         MVC   F@SERV(2),EDITWORK+2     YES - GET MILLIONS         U017
         MVI   F@SERV+2,C'.'            PUT IN THE DOT             U017
         MVC   F@SERV+3(1),EDITWORK+4   GET HUNDRED THOUSANDS      U017
         MVI   F@SERV+4,C'm'            INDICATE M  (##.#M)        U017
         C     R15,=F'1E8'              TOO BIG FOR FIELD?         U017
         BL    WMSOK                    NO - DONE                  U017
         MVC   F@SERV(4),EDITWORK       YES - GET MILLIONS         U017
         SPACE 1
WMSOK    EQU   *                                                   U017
         SPACE 1
         LM    R2,R3,ASCBEJST           GET TASK TYPE CPU TIME     U007
         SRDL  R2,12                    TO GET MICROSEC            U007
         LM    R14,R15,ASCBSRBT         LOAD UP SRB TIME.
         SRDL  R14,12                   TO GET MICROSEC
         D     R2,=F'10000'             MAKE IT .01 SEC            U008
         D     R14,=F'10000'            MAKE IT .01 SEC            U016
         AR    R3,R15                   ADD TOGETHER.              U016
         CVD   R3,WORK                  CONVERT IT TO DECIMAL.     U007
         MVC   EDITWORK(9),=X'4020202021204B2020'   EDIT MASK      U010
         ED    EDITWORK(9),WORK+4       EDIT THE RESULT.           U010
         C     R3,=F'9999999'           DID IT FIT?                U008
         BNH   CPU$OK                   YES - CONTINUE             U008
         MVC   EDITWORK(9),=X'40202020206B202120'  DIFFERENT MASK  U025
         ED    EDITWORK(9),WORK+3       AND DON'T SHOW HUNDREDTHS  U025
CPU$OK   MVC   F@CPU,EDITWORK+1         SAVE 8 BYTE CPU VALUE      U010
         SPACE 2
         LM    R2,R3,ASCBEWST           GET TOD WHEN I-STREAM      U019
*                                       SWITCHED FROM A.S.         U019
         STCK  WORK                     GET CURRENT TOD            U019
         LM    R14,R15,WORK             ...                        U019
         SLR   R14,R2                   COMPUTE 64 BIT DIFF        U019
         SLR   R15,R3                   COMPUTE 64 BIT DIFF        U019
         BC    B'0111',*+6              SKIP IF NO BORROW          U019
         BCTR  R14,0                    DO THE BORROW              U019
         SRDL  R14,12                   CONVERT TO MICROSEC        U019
         D     R14,=F'1000000'          MAKE IT SECONDS            U019
         SPACE 1
         SR    R14,R14                  CLEAR FOR DIVIDE           U019
         D     R14,=F'60'               R14=SEC, R15=MIN           U019
         CVD   R14,WORK                                            U019
         OI    WORK+7,X'0F'             REMOVE SIGN                U019
         UNPK  EDITWORK+09(2),WORK      SS                         U019
         SR    R14,R14                  CLEAR FOR DIVIDE           U019
         D     R14,=F'60'               R14=MIN, R15=HR            U019
         CVD   R14,WORK                                            U019
         OI    WORK+7,X'0F'             REMOVE SIGN                U019
         UNPK  EDITWORK+06(2),WORK      MM                         U019
         MVI   EDITWORK+08,C':'                                    U019
         SR    R14,R14                  CLEAR FOR DIVIDE           U019
         D     R14,=F'24'               R14=HR, R15=DAY            U019
         CVD   R14,WORK                 HOURS                      U019
         OI    WORK+7,X'0F'             REMOVE SIGN                U019
         UNPK  EDITWORK+03(2),WORK      HH                         U019
         MVI   EDITWORK+05,C'h'                                    U019
         CVD   R15,WORK                 DAYS                       U019
         OI    WORK+7,X'0F'             REMOVE SIGN                U019
         UNPK  EDITWORK+00(2),WORK      DD                         U019
         MVI   EDITWORK+02,C'd'                                    U019
         LA    R15,EDITWORK             ASSUME DAYS                U019
         CLC   =C'00',0(R15)            ANYTHING HERE?             U019
         BNE   OK$IDLE                  YES - DISPLAY NNDNN        U019
         LA    R15,EDITWORK+3           ASSUME HOURS               U019
         CLC   =C'00',0(R15)            ANYTHING HERE?             U019
         BNE   OK$IDLE                  YES - DISPLAY NNHNN        U019
         LA    R15,EDITWORK+6           ELSE DISPLAY MM:SS         U019
OK$IDLE  MVC   F@IDLE,0(R15)            SET VALUE FOR DISPLAY      U019
         SPACE 2
         MVC   EDITWORK(4),=X'40202120'                            U010
         XR    R0,R0                    GET SET
         IC    R0,OUCBDMN               GET THE DOMAIN NUMBER      U001
         CVD   R0,WORK                  ...                        U001
         ED    EDITWORK(4),WORK+6       ...                        U010
         MVC   F@DMN,EDITWORK+1         SAVE FORMATTED DOMAIN      U010
*  MOVE DATA TO SCREEN LINE POINTED TO BY R4                       U021
         LA    R15,FIELDS               -> DATA TO MOVE            U010
         BAL   R14,MOVEDATA             BUILD CORRECT DATA LINE    U010
         SPACE 1
         LA    R4,79(,R4)               BUMP OUTPUT POINTER        U021
         LH    R0,CURLINES              # LINE AVAILABLE
         BCT   R0,*+8                   CONT IF MORE LINES AVAIL   U003
         B     PUTIT                    OUTPUT IF SCREEN FULL      U003
         STH   R0,CURLINES              SAVE CUR # LINES FREE      U003
         SPACE 2
NEXTASCB BCT   R8,ASCBLOOP              LOOP BACK FOR NEXT A.S.    U007
         B     PUTIT                    GO WRITE THE SCREEN        U010
         EJECT
*  SUBROUTINE TO MOVE DESIRED FIELDS TO A DISPLAY LINE             U010
*                                                                  U010
*  INPUT TO THIS ROUTINE:                                          U010
*                                                                  U010
*    R4  -> OUTPUT LINE                                            U021
*    R15 -> DATA TO BE MOVED (NOT INTACT ON RETURN)                U010
*    R14 -> RETURN ADDR                                            U010
*                                                                  U010
*    WHICH FIELDS TO MOVE IS DECIDED BY EXAMINING FLAG1 & FLAG2    U010
*                                                                  U010
*    WHETHER ANY FIELD IS DISPLAYED DEPENDS ON WHICH OF THE 3      U010
*    DISPLAY TYPES CURRENTLY IN EFFECT, AS GIVEN IN THIS TABLE:    U010
*                                                                  U010
*    FIELD   LENGTH   HEX  OPER  USER                              U010
*    -----   ------   ---  ----  ----                              U010
*    ASID      5       *                                           U010
*    ASCB      7       *                                           U010
*    JOB       9       *    *     *                                U010
*    STEP      9            *     *                                U010
*    PROC      9            *     *                                U010
*    TYPE      2       *    *     *                                U015
*    FRAMES    6            *     *                                U015
*    WSS       5            *     *                                U015
*    WHERE     3       *    *     *                                U010
*    WHY       3       *    *     *                                U010
*    DP        3       *    *     *                                U010
*    SWAPS     4       *    *     *                                U010
*    PGN       4       *    *                                      U010
*    PP        2       *                                           U015
*    DMN       4       *                                           U010
*    WMR       6       *                                           U010
*    SERV      6       *    *     *                                U010
*    CPU       9       *    *     *                                U010
*    IOR       7       *    *     *                                U010
*    IDLE      5       *                                           U010
*                                                                  U010
MOVEDATA LR    R1,R4                    copy line pointer          U014
         USNGX FIELDS,R15                                          U010
         TM    FLAG1,F1HEX              WANT HEX FIELDS?           U010
         BNO   MD$01                    NO - SKIP                  U010
         MVC   0(4,R1),F@ASID                                      U010
         MVC   5(6,R1),F@ASCB                                      U010
         LA    R1,12(,R1)               -> NEXT OUTPUT LOCATION    U010
MD$01    MVC   0(8,R1),F@JOB            JOBNAME                    U010
         LA    R1,9(,R1)                -> NEXT OUTPUT LOCATION    U010
         TM    FLAG1,F1HEX              HEX STUFF?                 U010
         BO    MD$02                    YES - DON'T HAVE ROOM      U010
         MVC   0(8,R1),F@STEP           STEPNAME                   U010
         MVC   9(8,R1),F@PROC           PROCSTEPNAME               U010
         LA    R1,18(,R1)               -> NEXT OUTPUT LOCATION    U015
MD$02    MVC   0(1,R1),F@TYPE           J/S/T                      U015
         LA    R1,2(,R1)                -> NEXT OUTPUT LOCATION    U015
         TM    FLAG1,F1HEX              HEX STUFF?                 U015
         BO    MD$03                    YES - DON'T HAVE ROOM      U015
         MVC   0(10,R1),F@FRAMES        FRAMES + WSS               U010
         LA    R1,11(,R1)               -> NEXT OUTPUT LOCATION    U015
MD$03    MVC   0(2,R1),F@WHERE                                     U015
         MVC   3(2,R1),F@WHY                                       U015
         MVC   6(2,R1),F@DP                                        U015
         MVC   8(4,R1),F@SWC            SWAP COUNT                 U015
         LA    R1,13(,R1)               -> NEXT OUTPUT LOCATION    U015
         TM    FLAG2,F2USER             DUMB USER?                 U010
         BO    MD$04                    YES - SKIP PGN             U010
         MVC   0(3,R1),F@PGN                                       U010
         LA    R1,4(,R1)                -> NEXT OUTPUT LOCATION    U010
MD$04    TM    FLAG1,F1HEX              WANT HEX FIELDS?           U010
         BNO   MD$05                    NO - SKIP FIELDS           U010
         MVC   0(2,R1),F@PP             GET PERF GROUP PERIOD      U015
         MVC   3(3,R1),F@DMN                                       U015
         MVC   7(4,R1),F@WMR                                       U015
         LA    R1,12(,R1)               -> NEXT OUTPUT LOCATION    U015
MD$05    MVC   0(5,R1),F@SERV                                      U010
         MVC   6(8,R1),F@CPU                                       U010
         MVC   15(6,R1),F@IOREQ                                    U010
         LA    R1,22(,R1)               -> NEXT OUTPUT LOCATION    U010
         TM    FLAG1,F1HEX              WANT HEX FIELDS?           U010
         BNO   MD$06                    NO - SKIP FIELDS           U010
         MVC   0(5,R1),F@IDLE                                      U010
MD$06    BR    R14                      RETURN TO CALLER           U021
         DROPX R15                                                 U010
         EJECT
PUTIT    EQU   *                                                   U001
         MVC SRMLINE,=C'CPU=xxx   UIC=xxx   AFC=xxxx   ASMQ=xxx  ' U007
         L     R15,CVTPTR               -> CVT                     U007
         USNGX CVT,R15                                             U007
          AIF   (&@@SPLVL GE 200).NOAFC                            U022
         L     R14,CVTPVTP              -> PVT                     U007
         LH    R0,PVTAFC-PVT(,R14)      AVAILABLE FRAME COUNT      U007
         CVD   R0,WORK                                             U007
         MVC   EDITWORK(10),=X'40202020212040404040'               U007
         LA    R1,EDITWORK+5            INIT SIGNIFICANCE POINTER  U007
         EDMK  EDITWORK(6),WORK+5                                  U007
         MVC   SRMLINE+24(5),0(R1)      MOVE AFC TO DISPLAY        U007
.NOAFC    ANOP                                                     U022
         SPACE 1
         L     R14,CVTOPCTP             -> SRM CONTROL TABLE       U007
         DROPX R15                      CVT                        U007
         USNGX RMCT,R14                                            U007
          AIF   (&@@SPLVL GE 200).NOUIC                            U022
         L     R15,RMCTMCT              -> SRM STORAGE MGT CTL TBL U007
         LH    R0,MCVSTCRI-MCT(,R15)    SYSTEM HIGHEST UIC         U007
         CVD   R0,WORK                                             U007
         MVC   EDITWORK(10),=X'40202020212040404040'               U007
         LA    R1,EDITWORK+5            INIT SIGNIFICANCE POINTER  U007
         EDMK  EDITWORK(6),WORK+5                                  U007
         MVC   SRMLINE+14(5),0(R1)      MOVE UIC TO DISPLAY        U007
.NOUIC    ANOP                                                     U022
         SPACE 1
         L     R1,RMCTCCT               -> SRM CPU MGT CONTROL TBL U007
         DROPX R14                                                 U007
         LH    R0,CCVUTILP-CCT(,R1)     SYSTEM CPU UTILIZATION     U007
         CVD   R0,WORK                                             U007
         MVC   EDITWORK(10),=X'40202020212040404040'               U007
         LA    R1,EDITWORK+5            INIT SIGNIFICANCE POINTER  U007
         EDMK  EDITWORK(6),WORK+5                                  U007
         MVC   SRMLINE+04(5),0(R1)      MOVE CPU TO DISPLAY        U007
         SPACE 1
         LA    R1,MCTLEN(,R15)          -> SRM RESOURCE MGT CTL TB U010
         LH    R0,RCVASMQA-RCT(,R1)     ASMQ LENGTH AVERAGE        U007
         CVD   R0,WORK                                             U007
         MVC   EDITWORK(10),=X'40202020212040404040'               U007
         LA    R1,EDITWORK+5            INIT SIGNIFICANCE POINTER  U007
         EDMK  EDITWORK(6),WORK+5                                  U007
         MVC   SRMLINE+36(5),0(R1)      MOVE ASMQ TO DISPLAY       U007
         EJECT
         MVC   CURLINES,TOTLINES                                   U003
         MVC   ENTERLN,BLANKS           CLEAR ANY OLD INPUT        U003
          AIF   (&@@SPLVL LT 200).NOTXA2                           U022
         $AMODE  24                                                U022
.NOTXA2   ANOP                                                     U022
         TM    FLAG2,F2AUTO             AUTO UPDATE?               U003
         BO    PUTIT2                   ...YES                     U003
*
         SPACE 2
         MVI   IOCBFLGD,X'00'
         OI    IOCBFLGC,IOCBCATR                                   U004
         SPACE 1
         TRMIO IOCB,FORMAT=SCR1,IMAGE=LINE1                        U001
         SPACE 1
          AIF   (&@@SPLVL LT 200).NOTXA3                           U022
         $AMODE  31                                                U022
.NOTXA3   ANOP                                                     U022
         SPACE 3
*---  LOOK FOR CHARACTER INPUT FIRST
GO$CHECK LA    R1,ENTERLN-1             INIT INPUT CHAR POINTER    U007
         NI    FLAG2,255-F2VALID        CLEAR FLAG (NO CMD FOUND)  U007
         CLI   ENTERLN,C'/'             MVS OPERATOR COMMAND?      U018
         BE    MVS$CMD                  YES - GO EXECUTE IT        U018
NXTINPUT LA    R1,1(,R1)                -> NEXT INPUT CHAR         U007
         CLI   0(R1),C' '               END OF INPUT?              U007
         BE    CI3                      YES - SEE WHERE TO GO      U007
         LA    R14,CMDTABLE             RESPONSES THEMSELVES       U007
CI1      CLC   0(1,R14),0(R1)           COMPARE INPUT CHARACTER    U007
         BNE   CI2                      NOT THIS GUY               U007
*U022    L     R15,0(,R14)              GET ROUTINE ADDRESS        U007
         SR    R15,R15                  CLEAR FOR ICM (MVS/XA!)    U022
         ICM   R15,B'0111',1(R14)       GET ROUTINE ADDRESS        U022
         OI    FLAG2,F2VALID            SET "VALID CMD FOUND" FLAG U007
         BR    R15                      AND GO TO IT               U007
CI2      LA    R14,4(,R14)              GET NEXT RESPONSE          U007
         CLI   0(R14),X'FF'             END OF LIST?               U007
         BNE   CI1                      NO - KEEP SCANNING         U007
         B     NXTINPUT                 INVALID, TRY NEXT CHAR     U007
CI3      TM    FLAG2,F2VALID            ANY VALID FOUND?           U007
         BO    GOODGRIF                 YES - GO PROCESS           U007
*---  NONE VALID - CHECK PFKEY
         SPACE 1
         PFKEY DEF=GOODGRIF,K1=HELPPFK,K2=UPDATE,K3=EODAD,         U007$
               K5=HEXFLIP,K6=USERFLIP,                             U010$
               K9=DCMSOVER,K12=EODAD,ATTN=EODAD                    U010
         SPACE 1
PUTIT2   EQU   *                                                   U003
         OI    IOCBFLGD,IOCBDYON+IOCBDFRC                          U003
         OI    IOCBFLGC,IOCBCATR+IOCBCRAO                          U004
         SPACE 1
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=LINE1                  U001
         SPACE 1
          AIF   (&@@SPLVL LT 200).NOTXA4                           U022
         $AMODE  31                                                U022
.NOTXA4   ANOP                                                     U022
         PFKEY DEF=GOODGRIF,ATTN=UPDATE                            U003
         SPACE 1
TSO      EQU   *
         OI    FLAG1,F1TSO+F1MODESW     RESET THE FLAGS TO GET     U015
         NI    FLAG1,255-F1JOBS-F1STC       ONLY TSO MEMORIES.     U003
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
BATCH    EQU   *
         OI    FLAG1,F1JOBS+F1STC+F1MODESW SET THE BRANCHES TO GET U015
         NI    FLAG1,255-F1TSO             BATCH AND STC MEMORIES. U003
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
JOBS     EQU   *
         OI    FLAG1,F1JOBS+F1MODESW    RESET THE FLAGS TO GET     U015
         NI    FLAG1,255-F1STC-F1TSO         ONLY BATCH MEMORIES   U003
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
STC      EQU   *
         OI    FLAG1,F1STC+F1MODESW     RESET THE FLAGS TO GET     U003
         NI    FLAG1,255-F1TSO-F1JOBS   ONLY STC MEMORIES.         U003
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
ALL      EQU   *
         OI    FLAG1,F1TSO+F1STC+F1JOBS+F1MODESW  SET ALL FLAGS    U015
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
UPDATE   EQU   *                                                   U003
         XI    FLAG2,F2AUTO             FLIP AUTO UPD<->WAIT MODES U003
         B     GOODGRIF                                            U003
         SPACE 1
HEXFLIP  TM    FLAG2,F2OPER             PRIVILEGED USER?           U010
         BNO   GOODGRIF                 NO - IGNORE SUBCOMMAND     U015
         XI    FLAG1,F1HEX              FLIP HEX FLAG              U010
         NI    FLAG2,255-F2USER         TURN OFF DUMB USER FLAG    U010
         B     GOODGRIF                 REBUILD THE DISPLAY        U010
         SPACE 1
*HEXOFF  NI    FLAG1,255-F1MODESW-F1HEX DOESN'T COUNT AS MODE CHNG U010
HEXOFF   NI    FLAG1,255-F1HEX          TURN OFF HEX MODE          U015
         B     GOODGRIF                 REBUILD THE DISPLAY        U010
         SPACE 1
USERFLIP TM    FLAG2,F2OPER             PRIVILEGED USER?           U010
         BNO   GOODGRIF                 NO - IGNORE SUBCOMMAND     U015
         XI    FLAG2,F2USER             FLIP USER FLAG             U010
         NI    FLAG1,255-F1HEX          AND TURN OFF HEX DISPLAY   U010
*USERFLOP NI    FLAG1,255-F1MODESW      DOESN'T COUNT AS MODE CHNG U003
         B     GOODGRIF                 REBUILD THE DISPLAY        U010
         SPACE 1
OUTQUE   EQU   *
         NI    FLAG1,255-F1INONLY       RESET SWAPPED-IN ONLY FLAG U003
         OI    FLAG1,F1MODESW           INDICATE CHANGE OF MODES.  U003
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
INQUE    EQU   *
         OI    FLAG1,F1INONLY+F1MODESW  SET SWAPPED IN ONLY        U003
         B     NXTINPUT                 CHECK NEXT INPUT CHAR      U007
         SPACE 1
GOODGRIF DS    0H
         BAL   R14,CLEARIT              CLEAR ALL OUTPUT AREAS     U007
         LA    R4,LINE1                 -> PLACE FOR HEADER LINE   U010
         L     R15,=A(HEADERS)          -> COLUMN HEADERS          U010
         BAL   R14,MOVEDATA             BUILD THE CORRECT HEADING  U010
         LA    R4,LINE2                 RESET OUTPUT POINTER       U021
         MVC   ATTRLOC,FIRSTATR         ...AND ATTR BYTE POINTER
         TM    FLAG1,F1MODESW           CHECK FOR CHANGE OF MODES. U003
         BZ    MODEOK                   BRANCH IF SAME MODE.       U003
         NI    FLAG1,255-F1MODESW       RESET MODE CHANGE.         U003
         B     RESTART                  START OVER FROM BEGINNING.
MODEOK   DS    0H
         CH    R8,=H'1'                 MORE MEMORIES TO PROCESS?  U010
         BH    NEXTASCB                 YES.                       U010
         B     RESTART                  NO, START OVER FROM THE TOP.
         SPACE 4
HELPPFK  LA    R1,ENTERLN-1             FAKE INPUT POINTER         U007
HELP     MVI   IOCBFLGD,X'00'                                      U005
*U021    L     R15,=A(HELPIMG)                                     U005
         LM    R2,R3,=A(HELPFMT1,HELPIMG1)  ASSUME HELP#1          U021
         LA    R4,HELPENT1              ...                        U021
         CLI   1(R1),C'2'               WANT SECOND HELP SCREEN?   U007
         BNE   *+12                     NO - SKIP                  U021
         LM    R2,R3,=A(HELPFMT2,HELPIMG2)  ASSUME HELP#2          U021
         LA    R4,HELPENT2              ...                        U021
         CLI   1(R1),C'3'               WANT THIRD HELP SCREEN?    U021
         BNE   *+12                     NO - SKIP                  U021
         LM    R2,R3,=A(HELPFMT3,HELPIMG3)  ASSUME HELP#3          U021
         LA    R4,HELPENT3              ...                        U021
         SPACE 2
         LR    R0,R3                    -> source                  U021
         LH    R1,0(,R2)                length                     U021
         LA    R14,SCRBUFF              -> target                  U021
         LR    R15,R1                   length                     U021
         MVCL  R14,R0                   copy the help text         U021
         SPACE 1
          AIF   (&@@SPLVL LT 200).NOTXA5                           U022
         $AMODE  24                                                U022
.NOTXA5   ANOP                                                     U022
         SPACE 2
*U021    TRMIO IOCB,FORMAT=(R2),IMAGE=(R3)                         U007
         TRMIO IOCB,FORMAT=(R2),IMAGE=SCRBUFF                      U007
         SPACE 1
          AIF   (&@@SPLVL LT 200).NOTXA6                           U022
         $AMODE  31                                                U022
.NOTXA6   ANOP                                                     U022
         SPACE 2
         MVC   ENTERLN,0(R4)            MOVE INPUT FOR CMD SCAN    U007
         MVC   0(L'ENTERLN,R4),BLANKS   AND CLEAR FOR NEXT TIME    U007
         B     GO$CHECK                 CHECK IT OUT               U005
         SPACE 3
CLEARIT  LA    R1,LINE1                 CLEAR IMAGE USING...       U005
         LA    R0,SCR1                  ... DCMS SUBROUTINE        U005
         B     @CLEAR                                              U005
         SPACE 3
DECIMAL  CVD   R0,WORK                  CONVERT TO PACKED          U004
         MVC   EDITWORK(8),=X'4020202020202120'  MOVE IN THE MASK  U004
         ED    EDITWORK(8),WORK+4       MAKE IT EBCDIC             U004
         BR    R14                      RETURN TO CALLER           U004
         SPACE 2
STORAGE  CVD   R0,WORK                  CONVERT TO PACKED          U004
         MVC   EDITWORK(9),=X'402020202020212092' MOVE IN THE MASK U023
         ED    EDITWORK(8),WORK+4       MAKE IT EBCDIC             U004
         BR    R14                      RETURN TO CALLER           U004
         SPACE 3
MVS$CMD  TM    FLAG2,F2OPER             PRIVILEGED USER?           U018
         BZ    CI3                      NO - IGNORE IT, TRY PFK    U018
         CLC   ENTERLN+1(L'ENTERLN-1),BLANKS  ANY COMMAND HERE?    U018
         BE    CI3                      NO - IGNORE IT, TRY PFK    U018
         LA    R0,CMDPARM               -> COMMAND                 U018
         ST    R0,CMDADDR               SET IN PARMLIST            U018
         OI    CMDADDR,X'80'            MARK END OF LIST           U018
         LA    R15,L'ENTERLN-1          GET LENGTH OF COMMAND      U018
         STH   R15,CMDPARM              STORE IN PARM              U018
         MVC   CMDPARM+2(L'ENTERLN-1),ENTERLN+1  AND COMMAND TEXT  U018
         LA    R1,CMDADDR               -> PARMLIST                U018
         LINK  EP=OPERCMD               ISSUE THE COMMAND & WTO    U018
         B     GOODGRIF                 ALL DONE                   U018
         SPACE 3
TOTLINES DC    H'21'                                               U003
         SPACE 2
CMDTABLE DC    C'S',AL3(STC)            SYSTEM TASKS               U003
         DC    C'E',AL3(EODAD)          END                        U003
         DC    C'Z',AL3(EODAD) no help  RMFMON TYPE "END"          U010
         DC    C'J',AL3(JOBS)           BATCH JOBS ONLY (NO STC)   U003
         DC    C'T',AL3(TSO)            TSO ADDRESS SPACES         U001
         DC    C'B',AL3(BATCH)          BATCH AND STC              U003
         DC    C'P',AL3(DCMSOVER)       BATCH AND TSO              U003
         DC    C'A',AL3(ALL)            ALL ADDRESS SPACES         U001
         DC    C'I',AL3(INQUE)          SWAPPED IN  SPACES         U001
         DC    C'O',AL3(OUTQUE)         ADDRESS SPACES             U001
         DC    C'X',AL3(HEXFLIP)        HEX INFO ON & OFF          U010
         DC    C'D',AL3(HEXOFF)         HEX INFO OFF               U010
         DC    C'U',AL3(USERFLIP)       USER TYPE STUFF ON & OFF   U010
         DC    C'H',AL3(HELP)           HELP                       U005
         DC    C'?',AL3(HELP)           HELP                       U005
         DC    X'FF000000'              END OF LIST INDICATOR      U007
         SPACE 2
SWAPCODE DS    0CL2                     SWAPOUT REASON CODES       U007
         DC    C'  '                    00:  NONE                  U007
         DC    C'to'                    01:  TERMINAL OUTPUT       U007
         DC    C'ti'                    02:  TERMINAL INPUT        U007
         DC    C'lw'                    03:  LONG WAIT             U007
         DC    C'xs'                    04:  AUX STORAGE SHORTAGE  U007
         DC    C'rs'                    05:  REAL STORAGE SHORTAGE U007
         DC    C'dw'                    06:  DETECTED WAIT         U007
         DC    C'rq'                    07:  REQUESTED SWAP        U007
         DC    C'nq'                    08:  ENQUEUE EXCHANGE      U007
         DC    C'ex'                    09:  EXCHANGE SWAP         U007
         DC    C'us'                    10:  UNILATERAL SWAP       U007
         SPACE 2
*  NOTE: CHANGES TO FIELDS HERE MUST CORRESPOND WITH CHANGES TO THE
*        VARIABLES IN "FIELDS"                                     U010
HEADERS  EQU   *                                                   U010
         DC    CL6' Ascb '                                         U010
         DC    CL4'Asid'                                           U010
         DC    CL8'Jobname'                                        U010
         DC    CL8'Stepname'                                       U010
         DC    CL8'Procstep'                                       U010
         DC    C'T'                                                U010
         DC    CL(5+5)'Frames Wss'                                 U010
         DC    CL2'CL'                                             U010
         DC    CL2'RL'                                             U010
         DC    CL2'DP'                                             U010
         DC    CL4'  SC'                                           U013
         DC    CL3'PGN'                                            U010
         DC    CL2'PP'                                             U015
         DC    CL3'Dmn'                                            U010
         DC    CL4' Wmr'                                           U010
         DC    CL5'  Srv'                                          U010
         DC    CL8'    Cpu '                                       U010
         DC    CL6'   Ior'                                         U010
         DC    CL5' Idle'                                          U018
         EJECT ,
EODAD    DC    0H'0'                                               U022
          AIF   (&@@SPLVL LT 200).NOTXA7                           U022
         $AMODE  24                                                U022
.NOTXA7   ANOP                                                     U022
         SPACE 1
         DCMSTOP                                                   U003
         EJECT
CHIMP    CSECT                          RESUME                     U021
SCR1     DCMSFMT                                                   U001
LINE1    DCMSFLD 79                                                U001
         PRINT NOGEN                                               U007
LINE2    DCMSFLD 79                                                U001
         DCMSFLD 79                     LINE 3                     U001
         DCMSFLD 79                     LINE 4                     U001
         DCMSFLD 79                     LINE 5                     U001
         DCMSFLD 79                     LINE 6                     U001
         DCMSFLD 79                     LINE 7                     U001
         DCMSFLD 79                     LINE 8                     U001
         DCMSFLD 79                     LINE 9                     U001
         DCMSFLD 79                     LINE 10                    U001
         DCMSFLD 79                     LINE 11                    U001
         DCMSFLD 79                     LINE 12                    U001
         DCMSFLD 79                     LINE 13                    U001
         DCMSFLD 79                     LINE 14                    U001
         DCMSFLD 79                     LINE 15                    U001
         DCMSFLD 79                     LINE 16                    U001
         DCMSFLD 79                     LINE 17                    U001
         DCMSFLD 79                     LINE 18                    U001
         DCMSFLD 79                     LINE 19                    U001
         DCMSFLD 79                     LINE 20                    U001
         DCMSFLD 79                     LINE 21                    U001
         DCMSFLD 79                     LINE 22                    U001
         PRINT GEN                                                 U007
ENTERLN  DCMSFLD 37,ALPHA,INTEN=LO,CURSOR=AFTER                    U007
SRMLINE  DCMSFLD 41                                                U007
         DCMSFEND
         SPACE 3
DCMSWORK DSECT                          RESUME                     U005
SCRBUFF  EQU   *                                                   U???
         DSGEN SCR1                     GEN DSECT FOR OUTPUT SCRN  U003
         ORG   SCRBUFF                                             U???
CHIMP    CSECT                          RESUME                     U015
         EJECT ,
*---------------------------------------------------------------------*
HELPFMT1 DCMSFMT                                                   U007
*---------------------------------------------------------------------*
HELPIMG  CSECT                                                     U021
HELPIMG1 EQU   *                                                   U021
CHIMP    CSECT                                                     U021
         FLD   ,'********************  CHIMP - Display Field Explanatio$
               ns  ******************** '                          U015
         PRINT NOGEN                                               U007
         FLD   ,'T:     '               ROW 2                      U015
         FLD   LO,'Type of Address Space     '                     U015
         FLD   ,'J'                                                U015
         FLD   LO,'Batch Job   '                                   U015
         FLD   ,'T'                                                U015
         FLD   LO,'TSO User    '                                   U015
         FLD   ,'S'                                                U015
         FLD   LO,'Started Task'                                   U015
         FLD   ,'Frames:'               ROW 3                      U015
         FLD   LO,'Amount of real storage currently in use by this addr$
               ess space          '                                U015
         FLD   ,'WSS:   '               ROW 4                      U015
         FLD   LO,'SRM''s view of Working Set Size  ',FUDGE=1      U015
         FLD   ,'DP:   '                                           U015
         FLD   LO,'Dispatching Priority in hex    '                U015
         FLD   ,'CL:    '               row 5                      U015
         FLD   LO,'Current Location of this addrspc:'              U015
         FLD   ,'    IN',ROW=6,COLUMN=2                            U015
         FLD   LO,'Swapped in and eligible to run  '               U015
         FLD   ,'    NS'                                           U015
         FLD   LO,'In and V=R or Non-Swappable     '               U015
         FLD   ,'    PR'                row 7                      U015
         FLD   LO,'Privileged program in control   '               U015
         FLD   ,'    WM'                                           U015
         FLD   LO,'Wait (MSO detected)             '               U015
         FLD   ,'    WT'                row 8                      U015
         FLD   LO,'Wait (Terminal)                 '               U015
         FLD   ,'    WL'                                           U015
         FLD   LO,'Wait (Long) '                                   U015
         FLD   ,'    WO'                                           U015
         FLD   LO,'Wait (Other)'                                   U015
         FLD   ,'    LO'                row 9                      U015
         FLD   LO,'Logically Swapped Out           '               U015
         FLD   ,'    >>'                                           U015
         FLD   LO,'Transitioning Out               '               U015
         FLD   ,'    <<'                row 10                     U015
         FLD   LO,'Transitioning In                '               U015
         FLD   ,'    <>'                                           U015
         FLD   LO,'Transitioning Between States    '               U015
         FLD   ,'RL:    '               row 11                     U015
         FLD   LO,'Reason for Last Swap out  '                     U015
         FLD   ,'    TO',ROW=12,COLUMN=2                           U015
         FLD   LO,'Term Output wait   '                            U015
         FLD   ,'    TI'                                           U015
         FLD   LO,'Term Input Wait    '                            U015
         FLD   ,'    LW'                                           U015
         FLD   LO,'Long Wait         '                             U015
         FLD   ,'    XS'                                           U015
         FLD   LO,'Aux Stor shortage  ' row 13                     U015
         FLD   ,'    RS'                                           U015
         FLD   LO,'Real Stor shortage '                            U015
         FLD   ,'    DW'                                           U015
         FLD   LO,'Detected Wait     '                             U015
         FLD   ,'    RQ'                                           U015
         FLD   LO,'Requested Swap     '  row 14                    U015
         FLD   ,'    NQ'                                           U015
         FLD   LO,'ENQ exchange       '                            U015
         FLD   ,'    EX'                                           U015
         FLD   LO,'Exchange swap     '                             U015
         FLD   ,'    US'                                           U015
         FLD   LO,'Unilateral Swap    '    row 15                  U015
         FLD   ,'    ??'                                           U015
         FLD   LO,'Unknown code       '                            U015
         FLD   ,'SC:    ',ROW=16,COLUMN=2                          U015
         FLD   LO,'# of times the addrspc has been swapped in the curre$
               nt transaction     '                                U015
         FLD   ,'PGN:   '               row 17                     U015
         FLD   LO,'Performance Group     '                         U015
         FLD   ,'PP:   '                                           U015
         FLD   LO,'P.G. period        '                            U015
         FLD   ,'DMN:   '                                          U015
         FLD   LO,'Domain       '                                  U015
         FLD   ,'WMR:   '               row 18                     U015
         FLD   LO,'SRM Workload Mgr Recom. value (actually workld lvl t$
               his A.S. operating)'                                U015
         FLD   ,'SRV:   '               row 19                     U015
         FLD   LO,'Service accumulated in the last swapped in period   $
                                  '                                U015
         FLD   ,'CPU:   '               row 20                     U015
         FLD   LO,'CPU time in seconds used by the address space (task $
               plus SRB)          '
         FLD   ,'IOR:   '               row 21                     U015
         FLD   LO,'I/O requests counted by SMF                         $
                                  '                                U015
         FLD   ,'**********  Enter "?2" for CHIMP subcommands and PF Ke$
               y definitions  **********',ROW=22,COLUMN=2          U015
         PRINT GEN                                                 U015
HELPENT1 FLD   LO,                                                 U015$
               '                                             ',    U015$
               OPTION=ALPHA,CURSOR=YES,ROW=23,COLUMN=2             U015
         DCMSFEND  ,                                               U015
         EJECT
HELPFMT2 DCMSFMT                                                   U015
HELPIMG  CSECT                                                     U021
HELPIMG2 EQU   *                                                   U021
CHIMP    CSECT                                                     U021
         FLD   ,'****************************  CHIMP - Subcommands  ***$
               *************************'                          U015
         PRINT NOGEN                                               U015
         FLD   ,'I  ',ROW=3,COLUMN=2                               U015
         FLD   LO,'Select only swapped in jobs'                    U015
         FLD   ,'O  ',ROW=4,COLUMN=2                               U015
         FLD   LO,'Include swapped out jobs'                       U015
         FLD   ,'B  ',ROW=5,COLUMN=2                               U015
         FLD   LO,'Select batch (jobs and started tasks)'          U015
         FLD   ,'J  ',ROW=6,COLUMN=2                               U015
         FLD   LO,'Select initiated jobs'                          U015
         FLD   ,'P  ',ROW=7,COLUMN=2                               U015
         FLD   LO,'Select jobs and TSO users'                      U015
         FLD   ,'A  ',ROW=8,COLUMN=2                               U015
         FLD   LO,'Select jobs, started tasks, and TSO users'      U015
         FLD   ,'S  ',ROW=9,COLUMN=2                               U015
         FLD   LO,'Select system tasks'                            U015
         FLD   ,'T  ',ROW=10,COLUMN=2                              U015
         FLD   LO,'Select TSO users'                               U015
         FLD   ,'E  ',ROW=11,COLUMN=2                              U015
         FLD   LO,'Terminate CHIMP'                                U015
         FLD   ,'?1 ',ROW=12,COLUMN=2                              U015
         FLD   LO,'Display Field Definitions'                      U015
         FLD   ,'?2 ',ROW=13,COLUMN=2                              U015
         FLD   LO,'Display CHIMP Subcommands (this screen)'        U015
         FLD   ,'?3 ',ROW=14,COLUMN=2                              U015
         FLD   LO,'Display CHIMP PF Key definitions'               U015
         FLD   ,'Privileged subcommands:',ROW=17,COLUMN=2          U015
         FLD   ,'X  ',ROW=18,COLUMN=2                              U015
         FLD   LO,'Toggle hex fields display'                      U015
         FLD   ,'D  ',ROW=19,COLUMN=2                              U015
         FLD   LO,'Normal Display'                                 U015
         FLD   ,'U  ',ROW=20,COLUMN=2                              U015
         FLD   LO,'Set display as normal user'                     U015
*U021    FLD   ,'*******************  Enter "?1" for explanation of fie$
               LDS ********************',ROW=22,COLUMN=2           U015
         PRINT GEN                                                 U015
HELPENT2 FLD   LO,                                                 U015$
               '                                             ',    U015$
               OPTION=ALPHA,CURSOR=YES,ROW=23,COLUMN=2             U015
         DCMSFEND  ,                                               U007
         EJECT
HELPFMT3 DCMSFMT                                                   U015
HELPIMG  CSECT                                                     U021
HELPIMG3 EQU   *                                                   U021
CHIMP    CSECT                                                     U021
         FLD   ,'***********************  CHIMP - Program Function Keys$
                 ***********************'                          U015
         PRINT NOGEN                                               U015
         FLD   ,'PF1 /PF13  ',ROW=3,COLUMN=2                       U015
         FLD   LO,'Display Field Definitions (?1)'                 U015
         FLD   ,'PF2 /PF14  ',ROW=4,COLUMN=2                       U015
         FLD   LO,'Start auto update'                              U015
         FLD   ,'PF3 /PF15  ',ROW=5,COLUMN=2                       U015
         FLD   LO,'Exit from CHIMP'                                U015
         FLD   ,'PF5 /PF17  ',ROW=6,COLUMN=2                       U015
         FLD   LO,'Toggle hex display mode    (privileged)'        U015
         FLD   ,'PF6 /PF18  ',ROW=7,COLUMN=2                       U015
         FLD   LO,'Set display as normal user (privileged)'        U015
         FLD   ,'PF9 /PF21  ',ROW=8,COLUMN=2                       U015
         FLD   LO,'Restart CHIMP'                                  U015
         FLD   ,'PF12/PF24  ',ROW=9,COLUMN=2                       U015
         FLD   LO,'Exit from CHIMP'                                U015
         FLD   ,'PA1 /ATTN  ',ROW=10,COLUMN=2                      U015
         FLD   LO,'Halt updating or exit if not in update mode'    U015
*U021    FLD   ,'*******************  Enter "?1" for explanation of fie$
               LDS ********************',ROW=22,COLUMN=2           U015
         PRINT GEN                                                 U015
HELPENT3 FLD   LO,                                                 U015$
               '                                             ',    U015$
               OPTION=ALPHA,CURSOR=YES,ROW=23,COLUMN=2             U015
         DCMSFEND  ,                                               U007
         EJECT ,
DCMSWORK DSECT                          RESUME FOR OVERLAY         U021
         SPACE 2
         ORG   SCRBUFF                  use the same screen buffer U021
         DSGEN HELPFMT1                 GEN DSECT FOR HELP SCR # 1 U007
         SPACE 2
         ORG   SCRBUFF                  use the same screen buffer U021
         DSGEN HELPFMT2                 GEN DSECT FOR HELP SCR # 2 U007
         SPACE 2
         ORG   SCRBUFF                  use the same screen buffer U021
         DSGEN HELPFMT3                 GEN DSECT FOR HELP SCR # 3 U021
         SPACE 2
         ORG   ,                        back to the max end        U021
         ORG   ,                                                   U005
         SPACE 3
DCMSWORK DSECT                          RESUME                     U005
         SPACE 4
*  WORK AREAS                                                      U003
*                                                                  U003
WORK     DS    D                                                   U003
*                                       SAVE LOC OF ATTR BYTES:
ATTRLOC  DS    F                           CURR ATTR BYTE IN FMT   U003
FIRSTATR DS    F                           FIRST ATTR BYTE ALSO    U003
CURLINES DS    H                                                   U003
         SPACE 1
FLAG1    DS    X                                                   U003
F1INONLY EQU   X'80'                    IN CORE ONLY               U003
F1JOBS   EQU   X'40'                    BATCH                      U003
F1STC    EQU   X'20'                    STARTED TASKS              U003
F1TSO    EQU   X'10'                    TSO                        U003
F1MODESW EQU   X'02'                    USER DID MODE SWITCH       U003
F1HEX    EQU   X'01'                    DISPLAY CB ADDRESSES       U010
         SPACE 1
FLAG2    DS    X                                                   U003
F2AUTO   EQU   X'80'                    AUTO UPDATE                U003
F2VALID  EQU   X'40'                    VALID MODE CMD IN INPUT    U007
F2APF    EQU   X'08'                    CHIMP is APF authorized    U021
F2MVSE   EQU   X'04'                    Running under MVS/XA       U022
F2OPER   EQU   X'02'                    USER IS AN OPERATOR        U007
F2USER   EQU   X'01'                    USER TYPE DISPLAY          U010
         SPACE 1
STATFLAG DS    X                                                   U005
         SPACE 2
EDITWORK DS    CL11                                                U019
         SPACE 2
CMDADDR  DS    A                        -> PARMLIST FOR "OPERCMD"  U018
CMDPARM  DS    H,CL(L'ENTERLN-1)                                   U018
         TITLE 'C H I M P  - OUTPUT FIELDS'                        U010
*  NOTE: CHANGES TO FIELDS HERE MUST CORRESPOND WITH CHANGES TO THE
*        CONSTANTS IN "HEADERS"                                    U010
FIELDS   EQU   *                                                   U010
F@ASCB   DS    CL6                      ASCB ADDRESS               U010
F@ASID   DS    CL4                      ASID IN HEX                U010
F@JOB    DS    CL8                      JOBNAME
F@STEP   DS    CL8                      STEPNAME
F@PROC   DS    CL8                      PROCNAME                   U010
F@TYPE   DS    C                        J/T/S                      U007
F@FRAMES DS    CL5                      REAL STORAGE IN USE (NNNNK)
*  NOTE: IF WSS IS > 999K, IT WILL RUN INTO THE FIELD TO ITS LEFT
F@WSS    DS    CL5                      WORKING SET SIZE (NNNNK)
F@WHERE  DS    CL2                      CURRENT LOCATION
F@WHY    DS    CL2                      REASON FOR LAST SWAP       U007
F@DP     DS    CL2
F@SWC    DS    CL4                                                 U013
F@PGN    DS    CL3
F@PP     DS    CL2                      PERFORMANCE GROUP PERIOD   U015
F@DMN    DS    CL3                      DOMAIN NUMBER              U007
F@WMR    DS    CL4                                                 U010
F@SERV   DS    CL5
F@CPU    DS    CL8
F@IOREQ  DS    CL6                      I/O REQUESTS               U010
F@IDLE   DS    CL5                      ASCBEWST                   U019
FIELDLEN EQU   *-FIELDS                                            U010
         TITLE 'C H I M P  - MISCELLENEOUS MVS DSECT DEFINITIONS'  U007
         PRINT NOGEN                                               U007
         SPACE 2
         IHAPSA  ,                                                 U007
         SPACE 2
         IKJTCB  ,                                                 U007
         SPACE 2
         IEZJSCB  ,                                                U007
         SPACE 2
         IKJPSCB  ,                                                U007
         SPACE 2
         IHAASVT  ,                                                U007
         SPACE 2
         CVT   DSECT=YES                                           U007
         SPACE 2
         PRINT GEN                                                 U007
         TITLE 'C H I M P  - MVS ASCB DSECT DEFINITION'
         IHAASCB
         TITLE 'C H I M P  - MVS TSB DSECT DEFINITION'             U021
         IKJTSB ,                                                  U021
         TITLE 'C H I M P  - MVS OUCB DSECT DEFINITION'
         IRAOUCB
          AIF   (&@@SPLVL LT 300).NORAX                            U026
         TITLE 'C H I M P  - MVS RAX DSECT DEFINITION'             U026
         IARRAX  ,                                                 U026
.NORAX    ANOP                                                     U026
         TITLE 'C H I M P  - MVS CSCB DSECT DEFINITION'
CSCB     DSECT
         SPACE 1
         IEECHAIN
         TITLE 'C H I M P  - MVS PVT DSECT DEFINITION'             U007
         IHAPVT  ,                                                 U007
         TITLE 'C H I M P  - MVS RMCT DSECT DEFINITION'            U007
*  THE RMCT DSECT IS ON PVTMACS, IF YOU DON'T HAVE IT, COMMENT     U007
*  OUT THE IRARMCT AND UNCOMMENT OUT THE FOLLOWING.                U007
         SPACE 1
*RMCT    DSECT                                                     U007
*        DS    C'RMCT'                                             U007
*RMCTCCT DS    A(CCT)                                              U007
*        DS    A(ICT)                                              U007
*RMCTMCT DS    A(MCT)                                              U007
         SPACE 1
         IRARMCT  ,                                                U007
*  EQU'S TO PREVENT ASSEMBLY ERRORS                                U007
ICT      EQU   *                                                   U007
RMPT     EQU   *                                                   U007
RMCA     EQU   *                                                   U007
RMEX     EQU   *                                                   U007
RMSB     EQU   *                                                   U007
IRAEPPA  EQU   *                                                   U007
EPDTSCN  EQU   *                                                   U007
EPATSCN  EQU   *                                                   U007
EPAT     EQU   *                                                   U007
IRAFLTM  EQU   *                                                   U007
IRAEPPR  EQU   *                                                   U007
IRACTMQE EQU   *                                                   U007
IRAOUCB  EQU   *                                                   U007
IRAWTQE  EQU   *                                                   U007
IRAOTQE  EQU   *                                                   U007
IRAINQE  EQU   *                                                   U007
RQSV     EQU   *                                                   U007
IRAOUXB  EQU   *                                                   U007
IRASRBT  EQU   *                                                   U007
         SPACE 1
*  MORE EQUATES FOR SP1                                            U014
LSCT     EQU   *                                                   U014
*RCT     EQU   *                                                   U014
ICSP     EQU   *                                                   U014
RSPL     EQU   *                                                   U014
ENFPM    EQU   *                                                   U014
         TITLE 'C H I M P  - MVS CCT DSECT DEFINITION'             U007
*  THE CCT DSECT IS ON PVTMACS, IF YOU DON'T HAVE IT, COMMENT      U007
*  OUT THE IRACCT AND UNCOMMENT OUT THE FOLLOWING.                 U007
         SPACE 1
*CCT     DSECT                                                     U007
*        ORG   CCT+X'6E'                                           U007
*CCVUTILP DS   H                                                   U007
         SPACE 1
         IRACCT  ,                                                 U007
         TITLE 'C H I M P  - MVS MCT DSECT DEFINITION'             U007
*  THE MCT DSECT IS ON PVTMACS, IF YOU DON'T HAVE IT, COMMENT      U007
*  OUT THE IRAMCT AND UNCOMMENT OUT THE FOLLOWING.                 U007
         SPACE 1
*MCT     DSECT                                                     U007
*        ORG   MCT+X'38'                                           U007
*MCVSTCRI DS   H                                                   U007
*MCTLEN  EQU   X'96'                                               U007
         SPACE 1
         IRAMCT  ,                                                 U007
         TITLE 'C H I M P  - MVS RCT DSECT DEFINITION'             U007
*  THE RCT DSECT IS ON PVTMACS, IF YOU DON'T HAVE IT, COMMENT      U007
*  OUT THE IRARCT AND UNCOMMENT OUT THE FOLLOWING.                 U007
         SPACE 1
*RCT     DSECT                                                     U007
*        ORG   RCT+X'2C'                                           U007
*RCVASMQA DS   H                                                   U007
         SPACE 1
         IRARCT  ,                                                 U007
         TITLE 'C H I M P  - MVS PERF GROUP TABLE DESCRIPTION DEF' U015
*  THE WPGDT DSECT IS ON PVTMACS, IF YOU DON'T HAVE IT, COMMENT    U015
*  OUT THE IRAWPGDT AND UNCOMMENT OUT THE FOLLOWING.               U015
         SPACE 1
*WPGD    DSECT                                                     U015
*        ORG   WPGD+X'1C'                                          U015
*WPGDLEN EQU   *-WPGD                                              U015
         SPACE 1
*WPGP    DSECT                                                     U015
*        ORG   WPGP+X'10'                                          U015
*WPGPLEN EQU   *-WPGP                                              U015
         SPACE 1
         IRAWPGDT ,                                                U015
         SPACE 3
         END
