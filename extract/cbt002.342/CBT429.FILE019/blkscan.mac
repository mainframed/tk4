         TITLE 'SEARCH PARTITIONED DATA SET FOR BLOCK SIZES'
***********************************************************************
*                                                                     *
*                            B L K S C A N                            *
*                                                                     *
*        THIS PROGRAM WILL SEARCH EACH INDIVIDUAL MEMBER OF A         *
*        PARTITIONED DATA SET FOR SPECIFIED BLOCK SIZES.  IF ONE      *
*        IS FOUND, THE JOBNAME, STEPNAME, PROGRAM NAME, DD NAME       *
*        AND BLOCKSIZE WILL BE LISTED.  IT DOES NOT HANDLE            *
*        CATALOGED PROCEDURES OR INCLUDE STATEMENTS.  THE REPORT      *
*        CAN BE USED TO DETECT IMPROPERLY SPECIFIED BLOCK SIZES.      *
*                                                                     *
*        WRITTEN BY:                                                  *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*      THE AUTHORS INCLUDING FOOD LION, ITS OFFICERS,                 *
*      DIRECTORS, AND EMPLOYEES MAKE NO REPRESENTATION OR             *
*      WARRANTY OF ANY KIND WHATSOEVER, INCLUDING, BUT NOT            *
*      LIMITED TO, REPRESENTATIONS OR WARRANTIES, EXPRESS OR          *
*      IMPLIED, OR MERCHANTABILITY, FITNESS FOR USE OR PURPOSE,       *
*      ACCURACY OR COMPLETENESS OF PROCESSES, PROCEDURES,             *
*      DESIGNS, DEFINITIONS, INSTRUCTIONS, INFORMATION, OR            *
*      FUNCTIONING OF ANY PROGRAMS, DOCUMENTS, OR RELATED             *
*      MATERIALS; THE AUTHORS FURTHER EXPRESSLY DISCLAIM ANY          *
*      KNOWLEDGE OF PURPOSE FOR WHICH THESE PROGRAMS,                 *
*      DOCUMENTS, OR RELATED MATERIAL MAY BE UTILIZED OR THEIR        *
*      APPLICABILITY FOR SUCH USE, NOR SHALL THE FACT OF MAKING       *
*      THEM AVAILABLE CONSTITUTE ANY SUCH REPRESENTATION,             *
*      WARRANTY, OR KNOWLEDGE; NOR DO THE AUTHORS ASSUME ANY          *
*      LIABILITY, RESPONSIBILITY, OR OBLIGATION ARISING FROM          *
*      THE USE OR MALFUNCTIONING OF OF THESE COMPUTER PROGRAMS,       *
*      DOCUMENTATION, OR RELATED MATERIALS.                           *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                          SAMPLE JCL                                 *
*                                                                     *
*       //JOBNAME  JOB ....                                           *
*       //BLKSCAN  EXEC PGM=BLKSCAN,REGION=4M                         *
*       //SYSLIB   DD  DSN=PDS.JCL.LIBRARY,DISP=SHR                   *
*       //SYSPRINT DD  SYSOUT=*                                       *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                  R E G I S T E R   E Q U A T E S                    *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*                         START OF PROGRAM                            *
*                                                                     *
***********************************************************************
BLKSCAN  CSECT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R11,R15             SET FIRST BASE REG
         LA    R12,2048(R11)       SET SECOND
         LA    R12,2048(R12)           BASE REG
         USING BLKSCAN,R11,12      SET PROGRAM ADDRESSABILITY
         LA    R8,SAVEAREA         LOAD ADDRESS OF NEW SAVE
         ST    R8,8(R13)           STORE NEW SAVE ADDR IN OLD
         ST    R13,4(R8)           STORE OLD SAVE ADDR IN NEW
         LR    R13,R8              SET NEW SAVE ADDRESS
GETMAIN  ICM   R0,15,TBLSIZE       LOAD VALUE FOR GETMAIN
         GETMAIN R,LV=(0)          GET CORE FOR TABLE
         LR    R10,R1              SAVE ADDRESS FROM GETMAIN
         ST    R10,TBLADDR         SAVE TABLE ADDRESS FOR FREEMAIN
         ICM   R0,15,BUFSIZE       LOAD VALUE FOR GETMAIN
         GETMAIN R,LV=(0)          GET CORE FOR TABLE
         ST    R1,BUFADDR          SAVE TABLE ADDRESS FOR FREEMAIN
***********************************************************************
*                                                                     *
*        DETERMINE THE MAXIMUM NUMBER OF ENTRIES THAT CAN BE          *
*        BUILT IN THE GETMAINED AREA TO CONTAIN ALL OF THE            *
*        MEMBER NAMES IN THE PDS.                                     *
*                                                                     *
*        THIS IS THE NUMBER OF COMPLETE 8 BYTE ENTRIES THAT WILL      *
*        FIT INTO THE SIZE OF THE AREA.                               *
*                                                                     *
***********************************************************************
         SR    R14,R14             ZERO REGISTER FOR ICM
         ICM   R14,7,TBLSIZE+1     LOAD GETMAIN SIZE
         SRDA  R14,32              SHIFT INTO LOW REG OF EVEN ODD PAIR
         LA    R4,12               LOAD LENGTH OF EACH ENTRY
         DR    R14,R4              DIVIDE SIZE BY LENGTH
         ST    R15,TBLENTS         SAVE MAX NUMBER OF TABLE ENTRIES
         EJECT
***********************************************************************
*                                                                     *
*        OPEN SYSPRINT FILE FOR RESULTS LISTING                       *
*                                                                     *
***********************************************************************
OPENOUT  OPEN  (SYSPRINT,(OUTPUT))
         TM    SYSPRINT+48,DCBOFOPN SEE IF OPEN SUCCESSFUL
         BO    OPENOUT1            YES, CONTINUE
         WTO   'BSCN001E OPEN FOR SYSPRINT DATA SET FAILED',           X
               ROUTCDE=11
         ABEND 1,DUMP              ABEND THE JOB
OPENOUT1 DS    0H                  CONTINUE
         EJECT
***********************************************************************
*                                                                     *
*        DO A RDJFCB TO THE THE DSNAME AND VOLSER FOR THE REPORT      *
*        WHICH WILL BE PRODUCED FOR THE JOBS CONTAINING BLOCK         *
*        SIZES.                                                       *
*                                                                     *
***********************************************************************
RDJFCB   RDJFCB (CHECKDCB)         READ THE JFCB
         MVC   DSNAME(44),JFCBDSNM MOVE THE DSNAME TO SAVE AREA
         MVC   VOLSER(6),JFCBVOLS  MOVE VOLSER TO SAVE AREA
         EJECT
***********************************************************************
*                                                                     *
*        READ THE DIRECTORY OF THE SYSLIB FILE TO GET THE             *
*        MEMBER NAMES.                                                *
*                                                                     *
***********************************************************************
OPEN     OPEN  SYSLIB              OPEN SYSLIB DATA SET
         TM    SYSLIB+48,DCBOFOPN SEE IF OPEN SUCCESSFUL
         BO    OPENSL1             YES, CONTINUE
         WTO   'BSCN002E OPEN FOR SYSLIB DATA SET FAILED',             X
               ROUTCDE=11
         ABEND 2,DUMP              ABEND THE JOB
OPENSL1  DS    0H                  CONTINUE
         XC    COUNT,COUNT         CLEAR MEMBER COUNT
         L     R10,TBLADDR         LOAD MEMBER TABLE ADDRESS
         EJECT
READIR   GET   SYSLIB              READ DIRECTORY
         LR    R8,R1               SAVE BLOCK ADDRESS
         SR    R2,R2               ZERO REG FOR ICM
         ICM   R2,3,0(R8)          LOAD LENGTH OF THIS BLOCK
         LA    R4,0(R2,R8)         LOAD ADDRESS OF END OF BLOCK
         LA    R8,2(R8)            INCREMENT PAST LENGTH FIELD
LOOPDIR  CR    R4,R8               CHECK CURRENT ADDR TO END ADDR
         BNH   READIR              EOB, GO GET ANOTHER DIRECTORY BLOCK
         L     R15,COUNT           LOAD MEMBER COUNT
         LA    R15,1(R15)          ADD 1 TO MEMBER COUNT
         ST    R15,COUNT           SAVE MEMBER COUNT
         C     R15,TBLENTS         SEE IF MAX ENTRIES EXCEEDED
         BNH   BUILDIT             NO, GO BUILD ENTRY
         WTO   'BSCN003E TOO MANY MEMBERS IN SYSLIB FILE',             X
               ROUTCDE=11
         ABEND 3,DUMP              ABEND, MAX ENTRIES EXCEEDED
BUILDIT  MVC   0(8,R10),0(R8)      MOVE MEMBER NAME
         MVI   8(R10),X'00'        TURN OFF FOUND INDICATOR
         CLC   0(8,R8),=8X'FF'     SEE IF ENDING ENTRY
         BE    EOFDIR              YES, LOGICAL END OF DIRECTORY
         LA    R10,12(R10)         INCRMENT TABLE TO NEXT ENTRY
         OI    11(R8),X'E0'        TURN OFF FIRST
         NI    11(R8),X'1F'            THREE BITS IN COUNT FIELD
         SLR   R15,R15             ZERO REG FOR IC
         IC    R15,11(R8)          INSERT NUM OF HALFWORDS USER DATA
         SLL   R15,1               MULTIPLY BY 2 FOR LENGTH
         LA    R8,12(R15,R8)       INCRMENT TO NEXT MEMBER ENTRY
         B     LOOPDIR             LOOP
EOFDIR   CLOSE SYSLIB              CLOSE SYSLIB DATA SET
         L     R15,COUNT           LOAD ENTRY COUNT
         LTR   R15,R15             TEST ENTRY COUNT
         BNZ   OPENCK              NOT ZERO, GO START READING
         WTO   'BSCN004E NO MEMBERS IN THE SYSLIB FILE',               X
               ROUTCDE=11
         ABEND 4,DUMP              ABEND, NO MEMBERS IN DATA SET
         EJECT
***********************************************************************
*                                                                     *
*        OPEN THE FILE FOR INPUT, AND GET READY TO PROCESS            *
*        EACH MEMBER                                                  *
*                                                                     *
***********************************************************************
OPENCK   OPEN  CHECKDCB            OPEN THE FILE
         L     R10,TBLADDR         LOAD ADDRESS OF TABLE
FIND     FIND  CHECKDCB,0(R10),D   POSITION TO MEMBER
         MVC   MEMBER,0(R10)       SAVE MEMBER NAME
READBLK  L     R6,BUFADDR          LOAD ADDRESS OF INPUT BUFFER
         READ  DECB1,SF,CHECKDCB,(R6),'S' READ BLOCK FROM MEMBER
         CHECK DECB1               WAIT FOR I/O TO COMPLETE
         LA    R9,CHECKDCB         LOAD ADDRESS OF DCB
         USING IHADCB,R9           SET ADDRESSABILITY TO DCB
         LH    R14,DCBBLKSI        LOAD BLOCKSIZE
         L     R15,DECB1+16        LOAD IOB ADDRESS
         SH    R14,14(,R15)        SUBTRACT RESIDUAL BYTE COUNT
         SRDA  R14,32              SHIFT TO ODD REG FOR DIVIDE
         D     R14,=F'80'          DIVIDE BY LRECL FOR RECORD COUNT
         LTR   R14,R14             TEST REMAINDER
         BZ    FIND1               ZERO, OK
         WTO   'BSCN005E ACTUAL BLOCKSIZE NOT A MULTIPLE OF LRECL',    X
               ROUTCDE=11
         ABEND 5,DUMP              ABEND THE JOB
FIND1    LTR   R15,R15             TEST QUOTIENT
         BNZ   FIND2               NOT ZERO, OK
         WTO   'BSCN006E LENGTH OF BLOCK READ WAS ZERO',               X
               ROUTCDE=11
         ABEND 6,DUMP              ABEND THE JOB
         DROP  R9                  DROP ADDRESSABILITY TO DCB
FIND2    LR    R7,R15              SAVE RECORD COUNT
READREC  LTR   R7,R7               TEST REMAINDING RECD COUNT
         BZ    READBLK             ZERO, GO READ ANOTHER BLOCK
         MVC   RECORD,0(R6)        MOVE RECORD OUT OF BUFFER
         LA    R6,80(,R6)          INCREMENT TO NEXT RECORD IN BUFFER
         BCTR  R7,0                SUBTRACT 1 FROM RECORD COUNT
         BAL   R14,SCAN            GO SCAN RECORD
         B     READREC             GO GET ANOTHER RECORD
EOFMEMB  CLC   BLKSIZE,=CL6' '     SEE IF BLKSIZE DETERMINED
         BE    EOFMEMB1            NO, BRANCH
         BAL   R14,DETAIL          WRITE DETAIL FOR PREV DD STATEMENT
EOFMEMB1 MVC   JOBNAME,=CL8' '     BLANK JOB NAME
         MVC   STEPNAME,=CL8' '    BLANK STEP NAME
         MVC   PGM,=CL8' '         BLANK PGM NAME
         MVC   DDNAME,=CL8' '      BLANK DDNAME
         MVC   DSN,=CL44' '        BLANK DSN
         MVC   BLKSIZE,=CL6' '     BLANK BLKSIZE
EOFMEMB2 LA    R10,12(,R10)        LOAD ADDR OF NEXT MEMBER ENTRY
         CLC   0(8,R10),=8X'FF'    SEE IF END OF MEMBER TABLE
         BNE   FIND                NO, GO START PROCESSING
         CLOSE CHECKDCB            CLOSE FILE
         EJECT
STOPRUN  CLOSE (SYSPRINT)          CLOSE FILES
RETURN   ICM   R0,15,TBLSIZE       LOAD FREEMAIN SIZE
         L     R1,TBLADDR          LOAD FREEMAIN ADDRESS
         FREEMAIN R,LV=(0),A=(1)   FREE TABLE AREA
         ICM   R0,15,BUFSIZE       LOAD FREEMAIN SIZE
         L     R1,BUFADDR          LOAD FREEMAIN ADDRESS
         FREEMAIN R,LV=(0),A=(1)   FREE TABLE AREA
         L     R13,4(R13)          RESTORE ORIG SAVE AREA ADDRESS
         RETURN (14,12),RC=0       RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PRINT HEADING LINES IN THE SYSPRINT        *
*        DATA SET FOR EACH PAGE EJECT ON THE DETAIL PRINT.            *
*                                                                     *
***********************************************************************
HEADINGS ST    R14,HEADRET         SAVE RETURN ADDRESS
         AP    PAGECNT,=P'1'       ADD 1 TO PAGECOUNT
         UNPK  OUTCNT,PAGECNT      MOVE NEW PAGECOUNT TO HEADING
         OI    OUTCNT+4,X'F0'      MAKE IT PRINTABLE
         PUT   SYSPRINT,HEAD1      WRITE HEADING LINE1
         PUT   SYSPRINT,HEAD2      WRITE HEADING LINE2
         PUT   SYSPRINT,HEAD3      WRITE HEADING LINE3
         MVI   DETAILN,C'0'        FORCE NEXT DETAIL TO DOUBLE SPACE
         ZAP   LINECNT,=P'6'       SET LINECOUNT TO 6
         L     R14,HEADRET         RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PRINT THE DETAIL LINE MAINTAINING THE      *
*        LINE COUNT AND CLLING THE HEADING ROUTINE WHEN THE PAGE      *
*        IS FULL.                                                     *
*                                                                     *
***********************************************************************
DETAIL   ST    R14,DETRET          SAVE RETURN ADDRESS
         CP    LINECNT,=P'60'      SEE IF PAGE IS FULL
         BNH   DETAIL1             NO, BRANCH
         BAL   R14,HEADINGS        GO PRINT HEADINGS
DETAIL1  PUT   SYSPRINT,DETAILN    PRINT DETAIL LINE
         CLI   DETAILN,C'0'        SEE IF DOUBLE SPACE
         BE    DETAIL3             YES, BRANCH
         CLI   DETAILN,C'-'        SEE IF TRIBLE SPACE
         BE    DETAIL4             YES, BRANCH
DETAIL2  AP    LINECNT,=P'1'       SINGLE SPACE
         B     DETAIL99            GET OUT
DETAIL3  AP    LINECNT,=P'2'       DOUBLE SPACE
         B     DETAIL99            GET OUT
DETAIL4  AP    LINECNT,=P'3'       TRIPLE SPACE
DETAIL99 MVI   DETAILN,C' '        SET NEXT DETAIL TO SINGLE SPACE
         L     R14,DETRET          RESTRE RETURN ADDRESS
         BR    R14                 RETURN
         EJECT
***********************************************************************
*                                                                     *
*                               SCAN                                  *
*                                                                     *
*        SCAN THE INPUT RECORD.                                       *
*                                                                     *
*        1)  IF NOT A JCL STATEMENT, CLEAR DDNAME, PGM, AND           *
*            BLKSIZE AND IGNORE THE INPUT RECORD.                     *
*                                                                     *
*        2)  IF A COMMENT JCL STATEMENT, IGNORE IT                    *
*                                                                     *
*        3)  IF A CONTINUED STATEMENT AND PROCESSING DDNAME,          *
*            SEARCH FOR DSN AND BLKSIZE.                              *
*                                                                     *
*        4)  IF A JOB STATEMENT, PROCESS THE PREVIOUS DD              *
*            STATEMENT (IF ANY), SAVE JOBNAME AND CLEAR STEPNAME,     *
*            PGM, DDNAME, DSN, AND BLKSIZE.                           *
*                                                                     *
*        5)  IF AN EXEC STATEMENT, PROCESS THE PREVIOUS DD            *
*            STATEMENT (IF ANY), SAVE STEPNAME AND CLEAR PGM,         *
*            DDNAME, DSN, AND BLKSIZE.  SEARCH FOR THE PGM NAME       *
*            ONLY ON THE FIRST EXEC STATEMENT.                        *
*                                                                     *
*        6)  IF A DD STATEMENT, PROCESS THE PREVIOUS DD STATEMENT     *
*            (IF ANY).  SEARCH FOR DSN AND BLKSIZE.                   *
*                                                                     *
***********************************************************************
SCAN     STM   R0,R15,SCANSAVE     SAVE INPUT REGISTERS
         SPACE 3
***********************************************************************
*                                                                     *
*                              STEP1                                  *
*                                                                     *
*                                                                     *
*        IF NOT A JCL STATEMENT, CLEAR DDNAME, DSN, AND BLKSIZE       *
*        AND IGNORE THE INPUT RECORD                                  *
*                                                                     *
***********************************************************************
STEP1    CLC   RECORD(2),=C'//'    SEE IF A JCL STATEMENT
         BE    STEP2               YES, BRANCH
         MVC   DDNAME,=CL8' '      NO, BLANK DDNAME
         MVC   DSN,=CL44' '        NO, BLANK DSN
         MVC   BLKSIZE,=CL8' '     NO, BLANK BLKSIZE
         B     SCAN999             GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*                              STEP2                                  *
*                                                                     *
*                                                                     *
*        IF A COMMENT JCL STATEMENT, IGNORE IT                        *
*                                                                     *
***********************************************************************
STEP2    CLC   RECORD(3),=C'//*'   SEE IF A COMMENT STATEMENT
         BE    SCAN999             YES, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*                              STEP3                                  *
*                                                                     *
*                                                                     *
*        IF A CONTINUED STATEMENT AND PROCESSING DDNAME, SEARCH       *
*        FOR PGM AND BLKSIZE.                                         *
*                                                                     *
***********************************************************************
STEP3    CLI   RECORD+2,C' '       SEE IF CONTINUED STATEMENT
         BNE   STEP4               NO, BRANCH
         CLC   DDNAME,=CL8' '      SEE IF PROCESSING A DDNAME
         BE    SCAN999             NO, GET OUT
***********************************************************************
*        SEARCH FOR BLKSIZE                                           *
***********************************************************************
STEP3A   LA    R14,RECORD+3        POINT TO POSSIBLE START OF TEXT
         LA    R15,60              SET SCAN LIMIT
STEP3B   CLC   0(8,R14),=CL8'BLKSIZE=' SCAN FOR KEYWORD
         BE    STEP3C              YES,BRANCH
         LA    R14,1(,14)          INCREMENT TO NEXT CHAR OF TEXT
         BCT   R15,STEP3B          LOOP
         B     STEP3K              NOT FOUND, GET SEARCH FOR DSN
STEP3C   LA    R1,8(,R14)          POINT TO START OF BLKSIZE VALUE
         LA    R15,8               SET MAXIMUM LENGTH
         LR    R14,R1              SAVE START ADDRESS OF BLKSIZE
STEP3D   CLI   0(R14),C'0'         END OF BLKSIZE
         BL    STEP3E              YES, BRANCH
         CLI   0(R14),C'9'         END OF BLKSIZE
         BH    STEP3E              YES, BRANCH
         LA    R14,1(,R14)         INCREMENT TO CHAR OF BLKSIZE
         BCT   R15,STEP3D          LOOP
         MVC   BLKSIZE,=CL6' 99999' SET ERROR INDICATOR
         B     STEP3K              GO SEARCH FOR DSN
STEP3E   SR    R14,R1              GET LENGTH OF BLKSIZE
         BZ    STEP3K              NULL BLKSIZE, IGNORE IT
         BCTR  R14,0               MAKE MACHINE LENGTH
         EX    R14,PACKBLK         PACK BLKSIZE
         CP    DOUBLE,=P'0'        SEE IF ZERO BLKSIZE
         BE    STEP3K              YES, IGNORE IT
         MVC   BLKSIZE,=X'402020202120' SET EDIT MASK
         ED    BLKSIZE,DOUBLE+5    EDIT BLKSIZE TO DETAIL
         B     STEP3K              GO SEARCH FOR DSN
PACKBLK  PACK  DOUBLE,0(0,R1)      **** EXECUTE ONLY ****
***********************************************************************
*        SEARCH FOR DSN                                               *
***********************************************************************
STEP3K   LA    R14,RECORD+3        POINT TO POSSIBLE START OF TEXT
         LA    R15,60              SET SCAN LIMIT
STEP3L   CLC   0(4,R14),=CL4'DSN=' SCAN FOR KEYWORD
         BE    STEP3M              YES,BRANCH
         CLC   0(7,R14),=CL7'DSNAME=' SCAN FOR KEYWORD
         BE    STEP3N              YES,BRANCH
         LA    R14,1(,14)          INCREMENT TO NEXT CHAR OF TEXT
         BCT   R15,STEP3L          LOOP
         B     SCAN999             NOT FOUND, GET OUT
STEP3M   LA    R1,4(,R14)          POINT TO START OF DSN
         B     STEP3O              BRANCH
STEP3N   LA    R1,7(,R14)          POINT TO START OF DSN
STEP3O   LA    R15,44              SET MAXIMUM LENGTH
         LR    R14,R1              SAVE START ADDRESS OF DSN
STEP3P   CLI   0(R14),C','         END OF DSN
         BE    STEP3Q              YES, BRANCH
         CLI   0(R14),C' '         END OF DSN
         BE    STEP3Q              YES, BRANCH
         LA    R14,1(,R14)         INCREMENT TO CHAR OF DSN
         BCT   R15,STEP3P          LOOP
STEP3Q   SR    R14,R1              GET LENGTH OF BLKSIZE
         BZ    SCAN999             NULL DSN, IGNORE IT
         MVC   DSN,=CL44' '        BLANK DSNAME
         BCTR  R14,0               MAKE MACHINE LENGTH
         EX    R14,SAVEDSN         SAVE DSN
         B     SCAN999             GET OUT
SAVEDSN  MVC   DSN(0),0(R1)        **** EXECUTE ONLY ****
         SPACE 3
***********************************************************************
*                                                                     *
*                              STEP4                                  *
*                                                                     *
*                                                                     *
*        IF A JOB STATEMENT, PROCESS THE PREVIOUS DD STATEMENT        *
*        (IF ANY), SAVE JOBNAME AND CLEAR STEPNAME, PGM, DDNAME,      *
*        DSN, AND BLKSIZE.                                            *
*                                                                     *
***********************************************************************
STEP4    LA    R1,RECORD+2         LOAD START OF JOB/STEP/DD NAME
         LR    R14,R1              SAVE START ADDRESS
         LA    R15,17              SET SCAN LIMIT
STEP4A   CLI   0(R14),C' '         END OF JOB/STEP/DD NAME
         BE    STEP4B              YES, BRANCH
         LA    R14,1(,R14)         INCREMENT TO NEXT CHAR OF NAME
         BCT   R15,STEP4A          LOOP
STEP4B   SR    R14,R1              GET LENGTH OF JOB/STEP/DD NAME
         CH    R14,=H'8'           SEE IF MORE THAN 8 CHARACTERS
         BH    STEP4D2             YES, MUST BE PROC OVERRIDE
         MVC   NAME,=CL8' '        BLANK THE NAME SAVE AREA
         BCTR  R14,0               MAKE MACHINE LENGTH
         EX    R14,SAVENAME        SAVE JOB/STEP/DD NAME
         LA    R14,1(R1,R14)       POINT PAST NAME AGAIN
         LA    R15,20              SET SCAN LIMIT
STEP4C   CLI   0(R14),C' '         START OF STATEMENT TYPE
         BNE   STEP4D              YES, BRANCH
         LA    R14,1(,R14)         INCREMENT TO NEXT POSITION
         BCT   R15,STEP4C          LOOP
         B     SCAN999             INVALID FORMAT, GET OUT
STEP4D   CLC   0(4,R14),=CL4'JOB ' SEE IF JOB STATEMENT
         BE    STEP4E              YES, BRANCH
         CLC   0(5,R14),=CL5'EXEC ' SEE IF EXECUTE STATEMENT
         BE    STEP5               YES, BRANCH
         CLC   0(3,R14),=CL3'DD '  SEE IF DD STATEMENT
         BE    STEP6               YES, BRANCH
         CLC   0(5,R14),=CL5'PROC ' SEE IF PROC STATEMENT
         BE    STEP4D2             YES, BRANCH
         CLC   0(5,R14),=CL5'PEND ' SEE IF PEND STATEMENT
         BE    STEP4D2             YES, BRANCH
         CLC   0(7,R14),=CL7'OUTPUT ' SEE IF OUTPUT STATEMENT
         BE    STEP4D2             YES, BRANCH
STEP4D1  WTO   'BSCN007W UNKNOWN STATEMENT TYPE - BYPASSED',           X
               ROUTCDE=11
STEP4D2  CLC   BLKSIZE,=CL6' '     SEE IF BLKSIZE DETERMINED
         BE    STEP4D3             NO, BRANCH
         BAL   R14,DETAIL          WRITE DETAIL FOR PREV DD STATEMENT
STEP4D3  MVC   DDNAME,=CL8' '      BLANK DDNAME
         MVC   DSN,=CL44' '        BLANK DSN
         MVC   BLKSIZE,=CL6' '     BLANK BLKSIZE
         B     SCAN999             GET OUT
STEP4E   CLC   BLKSIZE,=CL6' '     SEE IF BLKSIZE DETERMINED
         BE    STEP4F              NO, BRANCH
         BAL   R14,DETAIL          WRITE DETAIL FOR PREV DD STATEMENT
STEP4F   MVC   JOBNAME,NAME        SAVE JOB NAME
         MVC   STEPNAME,=CL8' '    BLANK STEPNAME
         MVC   DDNAME,=CL8' '      BLANK DDNAME
         MVC   DSN,=CL44' '        BLANK DSN
         MVC   BLKSIZE,=CL6' '     BLANK BLKSIZE
         B     SCAN999             GET OUT
SAVENAME MVC   NAME(0),0(R1)       **** EXECUTE ONLY ****
         SPACE 3
***********************************************************************
*                                                                     *
*                              STEP5                                  *
*                                                                     *
*                                                                     *
*        IF AN EXEC STATEMENT, PROCESS THE PREVIOUS DD STATEMENT      *
*        (IF ANY), SAVE STEPNAME AND CLEAR PGM, DDNAME, DSN, AND      *
*        BLKSIZE.  SEARCH FOR THE PGM NAME ONLY ON THE FIRST EXEC     *
*        STATEMENT.                                                   *
*                                                                     *
***********************************************************************
STEP5    CLC   BLKSIZE,=CL6' '     SEE IF BLKSIZE DETERMINED
         BE    STEP5A              NO, BRANCH
         BAL   R14,DETAIL          WRITE DETAIL FOR PREV DD STATEMENT
STEP5A   MVC   STEPNAME,NAME       SAVE STEP NAME
         MVC   PGM,=CL8' '         BLANK PGM NAME
         MVC   DDNAME,=CL8' '      BLANK DDNAME
         MVC   DSN,=CL44' '        BLANK DSN
         MVC   BLKSIZE,=CL6' '     BLANK BLKSIZE
         LA    R14,RECORD+3        POINT TO START OF TEXT
         LA    R15,67              SET MAXIMUM SCAN LIMIT
STEP5B   CLC   0(4,R14),=CL4'PGM=' SEE IF START OF PGM NAME
         BE    STEP5C              YES, BRANCH
         LA    R14,1(,R14)         INCREMENT TO CHAR OF TEXT
         BCT   R15,STEP5B          LOOP
         B     SCAN999             GET OUT
STEP5C   LA    R1,4(,R14)          POINT TO START OF PGM NAME
         LR    R14,R1              SAVE START ADDRESS
         LA    R15,8               SET SCAN LIMIT
STEP5D   CLI   0(R14),C' '         END OF PGM NAME
         BE    STEP5E              YES, BRANCH
         CLI   0(R14),C','         END OF PGM NAME
         BE    STEP5E              YES, BRANCH
         LA    R14,1(,R14)         INCREMENT TO NEXT CHAR OF NAME
         BCT   R15,STEP5D          LOOP
STEP5E   SR    R14,R1              GET LENGTH OF PGM NAME
         BZ    SCAN999             NULL PGM NAME, GET OUT
         MVC   PGM,=CL8' '         BLANK THE PGM NAME
         BCTR  R14,0               MAKE MACHINE LENGTH
         EX    R14,SAVEPGM         SAVE PGM NAME
         B     SCAN999             GET OUT
SAVEPGM  MVC   PGM(0),0(R1)        **** EXECUTE ONLY ****
         SPACE 3
***********************************************************************
*                                                                     *
*                              STEP6                                  *
*                                                                     *
*                                                                     *
*            IF A DD STATEMENT, PROCESS THE PREVIOUS DD STATEMENT     *
*            (IF ANY) AND SEARCH FOR DSN AND BLKSIZE.                 *
*                                                                     *
***********************************************************************
STEP6    CLC   BLKSIZE,=CL6' '     SEE IF BLKSIZE DETERMINED
         BE    STEP6A              NO, BRANCH
         BAL   R14,DETAIL          WRITE DETAIL FOR PREV DD STATEMENT
STEP6A   MVC   DDNAME,NAME         SAVE DD NAME
         MVC   DSN,=CL44' '        BLANK DSN
         MVC   BLKSIZE,=CL6' '     BLANK BLKSIZE
         B     STEP3A              GO SEARCH FOR DSN AND BLKSIZE
         SPACE 3
***********************************************************************
*                                                                     *
*                             SCAN999                                 *
*                                                                     *
*                                                                     *
*        RETURN TO CALLER                                             *
*                                                                     *
***********************************************************************
SCAN999  LM    R0,R15,SCANSAVE     RESTORE INPUT REGISTERS
         BR    R14                 RETURN TO CALLER
         EJECT
         LTORG
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
SAVEAREA DS    18F                 SAVE AREA
SCANSAVE DS    16F                 SAVE AREA FOR SCAN ROUTINE
TBLSIZE  DS    0F                  SUBPOOL AND SIZE FOR TABLE
         DC    AL1(0)              SUBPOOL ZERO
         DC    AL3(98264)          96K GETMAIN SIZE
BUFSIZE  DS    0F                  SUBPOOL AND SIZE FOR TABLE
         DC    AL1(0)              SUBPOOL ZERO
         DC    AL3(32760)          32K GETMAIN SIZE
DETRET   DS    F                   RETURN ADDRESS FROM DETAIL ROUTINE
HEADRET  DS    F                   RETURN ADDRESS FROM HEADINGS ROUTINE
TBLADDR  DS    F                   SAVE AREA FOR GETMAIN ADDRESS
BUFADDR  DS    F                   SAVE AREA FOR GETMAIN ADDRESS
TBLENTS  DS    F                   MAX 8 BYTE ENTRIES IN GETMAIN AREA
TIOTPTR  DS    F                   SAVE AREA FOR LAST TIOT ENTRY ADDR
COUNT    DC    F'0'                ENTRY COUNT
PAGECNT  DC    PL3'0'              PAGE COUNT
LINECNT  DC    PL2'99'             LINE COUNT
RECORD   DC    CL80' '             INPUT RECORD AREA
MEMBER   DC    CL8' '              MEMBER BEING PROCESSED
NAME     DC    CL8' '              JOB/STEP/DD NAME SAVE AREA
DETAILN  DS    0CL133              DETAIL LINE
         DC    C' '                CARRIAGE CONTROL CHAR
         DC    CL8' '
JOBNAME  DC    CL8' '
         DC    CL3' '
STEPNAME DC    CL8' '
         DC    CL3' '
PGM      DC    CL8' '
         DC    CL3' '
DDNAME   DC    CL8' '
         DC    CL3' '
DSN      DC    CL44' '
         DC    CL3' '
BLKSIZE  DC    CL6' '
         DC    CL28' '
HEAD1    DS    0CL133              FIRST HEADING LINE
         DC    C'1'
         DC    CL36' '
         DC    CL75'PRODUCTION JCL BLOCKSIZE REPORT UTILITY'
         DC    CL5'PAGE '
OUTCNT   DS    CL5
         DC    CL11' '
HEAD2    DS    0CL133              SECOND HEADING LINE
         DC    C'0'
         DC    CL8' '
         DC    CL6'  DSN='
DSNAME   DS    CL44                DSNAME OF SYSLIB FILE
         DC    CL6'  VOL='
VOLSER   DS    CL6                 VOLSER OF SYSLIB FILE
         DC    CL62' '
HEAD3    DS    0CL133              THIRD HEADING LINE
         DC    C'0'
         DC    CL8' '                 '
         DC    CL8'JOBNAME'
         DC    CL3' '                 '
         DC    CL8'STEPNAME'
         DC    CL3' '                 '
         DC    CL8'PGM     '
         DC    CL3' '                 '
         DC    CL8'DDNAME  '
         DC    CL3' '                 '
         DC    CL44'DSN'
         DC    CL3' '                 '
         DC    CL8'BLKSIZE '
         DC    CL25' '                '
         EJECT
EXITLIST DS    0F                  DCB EXITLIST
         DC    X'87',AL3(JFCB)     JFCB AREA SUPPLIED
JFCB     DS    0F                  JFCB
         IEFJFCBN LIST=YES
         ORG   JFCB+176
         EJECT
SYSLIB   DCB   DDNAME=SYSLIB,MACRF=GL,DSORG=PS,BLKSIZE=256,RECFM=U,    X
               EODAD=EOFDIR,EXLST=EXITLIST
         EJECT
CHECKDCB DCB   DDNAME=SYSLIB,MACRF=R,DSORG=PO,EXLST=EXITLIST,          X
               LRECL=80,RECFM=FB,EODAD=EOFMEMB
         EJECT
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,BLKSIZE=133,          X
               RECFM=FA
         EJECT
         DCBD  DSORG=PO,DEVD=DA
         END   BLKSCAN
