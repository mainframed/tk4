SMAP     TITLE 'PRINT THE VIRTUAL STORAGE MAP OF THE SYSTEM'
***********************************************************************
*                                                                     *
*                              S M A P                                *
*                                                                     *
*        THIS PROGRAM IS DESIGNED TO PRINT THE STARTING ADDRESS,      *
*        ENDING ADDRESS, AND SIZE OF EACH OF THE MAIN STORAGE         *
*        AREAS IN THE MVS SYSTEM.  THIS INFORMATION CAN BE            *
*        DISPLAYED USING MOST OF THE POPULAR MONITORS CURRENTLY       *
*        AVAILABLE, BUT NOT EVERYONE HAS ONE PLUS THIS PROGRAM        *
*        CAN RUN AS A BATCH JOB PRODUCING A HARDCOPY REPORT.          *
*                                                                     *
*        NOTE:                                                        *
*                                                                     *
*        THIS PROGRAM MUST RUN IN AMODE 31 TO ALLOW ACCESS TO         *
*        SOME OF THE AREAS OF THE SYSTEM ABOVE THE 16 MEG LINE.       *
*        IT RUNS ON ESA RELEASE 3 AND 4 SYSTEMS.  IT MAY RUN ON       *
*        XA SYSTEMS BUT I HAVE NO WAY TO BE SURE.                     *
*                                                                     *
*                                                                     *
*        MODIFIED BY:                                                 *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*      THE AUTHORS INCLUDING FOOD LION, ITS OFFICERS,                 *
*      DIRECTORS, AND EMPLOYEES MAKE NO REPRESENTATION OR             *
*      WARRANTY OF ANY KIND WHATSOEVER, INCLUDING, BUT NOT            *
*      LIMITED TO, REPRESENTATIONS OR WARRANTIES, EXPRESS OR          *
*      IMPLIED, OR MERCHANTABILITY, FITNESS FOR USE OR PURPOSE,       *
*      ACCURACY OR COMPLETENESS OF PROCESSES, PROCEDURES,             *
*      DESIGNS, DEFINITIONS, INSTRUCTIONS, INFORMATION, OR            *
*      FUNCTIONING OF ANY PROGRAMS, DOCUMENTS, OR RELATED             *
*      MATERIALS; THE AUTHORS FURTHER EXPRESSLY DISCLAIM ANY          *
*      KNOWLEDGE OF PURPOSE FOR WHICH THESE PROGRAMS,                 *
*      DOCUMENTS, OR RELATED MATERIAL MAY BE UTILIZED OR THEIR        *
*      APPLICABILITY FOR SUCH USE, NOR SHALL THE FACT OF MAKING       *
*      THEM AVAILABLE CONSTITUTE ANY SUCH REPRESENTATION,             *
*      WARRANTY, OR KNOWLEDGE; NOR DO THE AUTHORS ASSUME ANY          *
*      LIABILITY, RESPONSIBILITY, OR OBLIGATION ARISING FROM          *
*      THE USE OR MALFUNCTIONING OF OF THESE COMPUTER PROGRAMS,       *
*      DOCUMENTATION, OR RELATED MATERIALS.                           *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                         SAMPLE JCL                                  *
*                                                                     *
*        //JOBNAME  JOB  ....                                         *
*        //SMAP     EXEC PGM=SMAP                                     *
*        //SYSPRINT DD  SYSOUT=*                                      *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
SMAP     AMODE 31
SMAP     RMODE 24
SMAP     CSECT
         USING SMAP,R12
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             INITIALIZE BASE REG
         LR    R15,R13             SAVE CALLING'S SAVE AREA ADDR
         LA    R13,NEWSAVE         LOAD ADDR OF NEW SAVE AREA
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
PROCESS  L     R8,16               LOAD ADDRESS OF CVT
         USING CVT,R8              SET ADDRESSABILITY TO CVT
         L     R7,CVTGDA           LOAD ADDRESS OF GDA
         USING GDA,R7              SET ADDRESSABILITY TO GDA
         L     R6,CVTSMEXT         LOAD ADDRESS OF STORAGE MAP EXTENSN
         USING CVTVSTGX,R6         SET ADDRESSABILITY TO SMAP EXTENSION
         MVC   MPSA(4),=A(0)       SET START ADDRESS OF PSA
         MVC   MPSA+4(4),=A(4*1024) SET LENGTH OF PSA
         MVC   MSYSA(4),=A(4096)   SET START ADDRESS OF SYSTEM AREA
         MVC   MSYSA+4(4),=A(16*1024) SET LENGTH OF SYSTEM AREA
         MVC   MPRIV,=A(20*1024)   SET START ADDRESS OF PRIVATE
         L     R15,GDAPVTSZ        LOAD SIZE OF PRIVATE
         S     R15,MPRIV           SUBTRACT STUFF AT BEGINNING
         ST    R15,MPRIV+4         SAVE REAL LENGTH OF PRIVATE
         MVC   MCSA(4),GDACSA      SET START ADDRESS OF CSA
         MVC   MCSA+4(4),GDACSASZ  SET LENGTH OF CSA
         MVC   MMLPA(4),CVTMLPAS   SET START ADDRESS OF MLPA
         L     R15,CVTMLPAE        LOAD END OF MLPA
         LA    R15,1(R15)          ADD 1
         S     R15,MMLPA           SUBTRACT START OF MLPA
         ST    R15,MMLPA+4         SAVE LENGTH OF MLPA
         MVC   MFLPA(4),CVTFLPAS   SET START ADDRESS OF FLPA
         L     R15,CVTFLPAE        LOAD END OF FLPA
         LA    R15,1(R15)          ADD 1
         S     R15,MFLPA           SUBTRACT START OF FLPA
         ST    R15,MFLPA+4         SAVE LENGTH OF FLPA
         MVC   MPLPA(4),CVTPLPAS   SET START ADDRESS OF PLPA
         L     R15,CVTPLPAE        LOAD END OF PLPA
         LA    R15,1(R15)          ADD 1
         S     R15,MPLPA           SUBTRACT START OF PLPA
         ST    R15,MPLPA+4         SAVE LENGTH OF PLPA
         MVC   MSQA(4),GDASQA      SET START ADDRESS OF SQA
         MVC   MSQA+4(4),GDASQASZ  SET LENGTH OF SQA
         MVC   MRWNUC(4),CVTRWNS   SET START ADDRESS OF R/W NUC
         L     R15,CVTRWNE         LOAD END OF R/W NUC
         LA    R15,1(R15)          ADD 1
         S     R15,MRWNUC          SUBTRACT START OF R/W NUC
         ST    R15,MRWNUC+4        SAVE LENGTH OF R/W NUC
         MVC   MRONUC(4),CVTRONS   SET START ADDRESS OF RO NUC
         L     R15,CVTRONE         LOAD END OF RO NUC
         LA    R15,1(R15)          ADD 1
         S     R15,MRONUC          SUBTRACT START OF RO NUC
         ST    R15,MRONUC+4        SAVE LENGTH OF RO NUC
         MVC   MRWENUC(4),CVTERWNS SET START ADDRESS OF R/W ENUC
         L     R15,CVTERWNE        LOAD END OF R/W ENUC
         LA    R15,1(R15)          ADD 1
         S     R15,MRWENUC         SUBTRACT START OF R/W ENUC
         ST    R15,MRWENUC+4       SAVE LENGTH OF R/W ENUC
         MVC   MESQA(4),GDAESQA    SET START ADDRESS OF ESQA
         MVC   MESQA+4(4),GDAESQAS SET LENGTH OF ESQA
         MVC   MEPLPA(4),CVTEPLPS  SET START ADDRESS OF EPLPA
         L     R15,CVTEPLPE        LOAD END OF EPLPA
         LA    R15,1(R15)          ADD 1
         S     R15,MEPLPA          SUBTRACT START OF EPLPA
         ST    R15,MEPLPA+4        SAVE LENGTH OF EPLPA
         MVC   MEFLPA(4),CVTEFLPS  SET START ADDRESS OF EFLPA
         L     R15,CVTEFLPE        LOAD END OF EFLPA
         LA    R15,1(R15)          ADD 1
         S     R15,MEFLPA          SUBTRACT START OF EFLPA
         ST    R15,MEFLPA+4        SAVE LENGTH OF EFLPA
         MVC   MEMLPA(4),CVTEMLPS  SET START ADDRESS OF EMLPA
         L     R15,CVTEMLPE        LOAD END OF EMLPA
         LA    R15,1(R15)          ADD 1
         S     R15,MEMLPA          SUBTRACT START OF EMLPA
         ST    R15,MEMLPA+4        SAVE LENGTH OF EMLPA
         MVC   MECSA(4),GDAECSA    SET START ADDRESS OF ECSA
         MVC   MECSA+4(4),GDAECSAS SET LENGTH OF ECSA
         MVC   MEPVT(4),GDAEPVT    SET START ADDRESS OF EPVT
         MVC   MEPVT+4(4),GDAEPVTS SET LENGTH OF EPVT
         MVC   MUCSA(4),GDACSARE   SAVE AMT OF UNUSED CSA+SQA
         DROP  R8                  DROP ADDRESSABILITY TO CVT
         DROP  R7                  DROP ADDRESSABILITY TO GDA
         DROP  R6                  DROP ADDRESSABILITY TO SMAP EXTENSN
         LA    R15,PRINT           LOAD ADDRESS OF NEXT ROUTINE
         BASSM R14,R15             GO TO AMODE 24
PRINT    OPEN  (SYSPRINT,(OUTPUT)) OPEN REPORT FILE
         LA    R2,17               SET LOOP COUNTER
         LA    R3,MAPTBL           POINT TO MAP TABLE
         PUT   SYSPRINT,HEAD1      WRITE HEADING LINE 1
         PUT   SYSPRINT,BLANKS     WRITE BLANK LINE
PRINT1   MVC   DETNAME,8(R3)       SET MAP AREA NAME
         UNPK  WORK1(9),0(5,R3)    UNPACK START ADDRESS
         TR    WORK1(8),TRTBL      MAKE PRINTABLE
         MVC   DETSTART,WORK1      SET PRINTABLE HEX STRING
         L     R15,0(R3)           LOAD START ADDRESS
         A     R15,4(R3)           ADD LENGTH
         BCTR  R15,0               REDUCE BY 1 FOR END ADDRESS
         ST    R15,WORK2           SAVE END ADDRESS
         UNPK  WORK1(9),WORK2(5)   UNPACK END ADDRESS
         TR    WORK1(8),TRTBL      MAKE PRINTABLE
         MVC   DETEND,WORK1        SET PRINTABLE HEX STRING
         UNPK  WORK1(9),4(5,R3)    UNPACK LENGTH
         TR    WORK1(8),TRTBL      MAKE PRINTABLE
         MVC   DETLEN1,WORK1       SET PRINTABLE HEX STRING
         L     R15,4(R3)           LOAD LENGTH
         AH    R15,=H'1023'        ADD ALMOST 1 K
         SRL   R15,10              DIVIDE BY 1024 FOR "K"
         CVD   R15,DBL             CONVERT TO PACKED
         MVC   DETLEN2,=X'402020206B2020206B202120'
         ED    DETLEN2,DBL+3       SET LENGTH IN "K"
         PUT   SYSPRINT,DETAIL1    WRITE DETAIL LINE
         LA    R3,16(R3)           INCREMENT TO NEXT SMAP ENTRY
         BCT   R2,PRINT1           LOOP
UNUSED   PUT   SYSPRINT,BLANKS     WRITE BLANK LINE
         UNPK  WORK1(9),MUCSA(5)   UNPACK LENGTH
         TR    WORK1(8),TRTBL      MAKE PRINTABLE
         MVC   DETULEN1,WORK1      SET PRINTABLE HEX STRING
         L     R15,MUCSA           LOAD LENGTH
         AH    R15,=H'1023'        ADD ALMOST 1 K
         SRL   R15,10              DIVIDE BY 1024 FOR "K"
         CVD   R15,DBL             CONVERT TO PACKED
         MVC   DETULEN2,=X'402020206B2020206B202120'
         ED    DETULEN2,DBL+3      SET LENGTH IN "K"
         PUT   SYSPRINT,DETAIL2    WRITE DETAIL LINE
RETURN   CLOSE SYSPRINT            CLOSE PRINT FILE
         L     R13,4(R13)          RESTORE ORIG SAVE
         RETURN (14,12),RC=0       RETURN
         SPACE 3
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
         EJECT
         LTORG
NEWSAVE  DS    18F
DBL      DS    D
WORK1    DS    XL9
WORK2    DS    F
HEAD1    DC    CL80' '
         ORG   HEAD1+5
         DC    C'  NAME'
         ORG   HEAD1+15
         DC    C'  START'
         ORG   HEAD1+25
         DC    C'  END'
         ORG   HEAD1+35
         DC    C' LENGTH'
         ORG
BLANKS   DC    CL80' '
DETAIL1  DC    CL80' '
         ORG   DETAIL1+5
DETNAME  DS    CL8                 DETAIL MAP AREA NAME
         ORG   DETAIL1+15
DETSTART DS    CL8                 DETAIL AREA START ADDRESS
         ORG   DETAIL1+25
DETEND   DS    CL8                 DETAIL AREA END ADDRESS
         ORG   DETAIL1+35
DETLEN1  DS    CL8                 DETAIL AREA LENGTH IN HEX
         ORG   DETAIL1+45
DETLEN2  DS    CL12                DETAIL AREA LENGTH IN K
         DC    CL2' K'
         ORG
DETAIL2  DC    CL80' '
         ORG   DETAIL2+5
         DC    CL16'UNUSED CSA+SQA'
         ORG   DETAIL2+25
DETULEN1 DS    CL8                 UNUSED LENGTH IN HEX
         ORG   DETAIL2+35
DETULEN2 DS    CL12                UNUSED LENGTH IN K
         DC    CL2' K'
         ORG
MUCSA    DS    F                   UNUSED CSA+SQA AMOUNT
MAPTBL   DS    0F
MEPVT    DC    2F'0',CL8'EPRIVATE'
MECSA    DC    2F'0',CL8'ECSA'
MEMLPA   DC    2F'0',CL8'EMLPA'
MEFLPA   DC    2F'0',CL8'EFLPA'
MEPLPA   DC    2F'0',CL8'EPLPA'
MESQA    DC    2F'0',CL8'ESQA'
MRWENUC  DC    2F'0',CL8'R/W ENUC'
MRONUC   DC    2F'0',CL8'RO NUC'
MRWNUC   DC    2F'0',CL8'R/W NUC'
MSQA     DC    2F'0',CL8'SQA'
MPLPA    DC    2F'0',CL8'PLPA'
MFLPA    DC    2F'0',CL8'FLPA'
MMLPA    DC    2F'0',CL8'MLPA'
MCSA     DC    2F'0',CL8'CSA'
MPRIV    DC    2F'0',CL8'PRIVATE'
MSYSA    DC    2F'0',CL8'SYS AREA'
MPSA     DC    2F'0',CL8'PSA'
         SPACE 3
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      X
               LRECL=80,BLKSIZE=80,RECFM=FB
         EJECT
         CVT   DSECT=YES
         EJECT
         IHAGDA
         END
