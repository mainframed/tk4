         TITLE 'MODLOKUP - MAINLINE'
***********************************************************************
*                                                                     *
*                            M O D L O O K                            *
*                                                                     *
*        THIS PROGRAM IS DESIGNED TO RUN AS A TSO COMMAND,            *
*        STARTED TASK OR A BATCH JOB TO LOOK UP THE SELECTED          *
*        MODULE(S) IN THE SYSTEM LINK LIST OR LINK PACK AREA.         *
*        IF THE MODULE IS IN THE LINK LIST, THE LINK LIST             *
*        LIBRARY NAME WILL BE DISPLAYED.  IF THE MODULE IS            *
*        IN THE LINK PACK AREA, ITS ADDRESS WILL BE DISPLAYED         *
*        ALONG WITH NAME OF THE RESIDENT AREA IN WHICH IT IS          *
*        LOCATED SUCH AS PLPA, FLPA, ECSA, ETC.  THE FIRST            *
*        PART OF EACH MODULE IS DISPLAYED ALSO SINCE IT MAY           *
*        CONTAIN DATE, TIME, OR COPYRIGHT INFORMATION WHICH           *
*        MAY BE OF INTEREST.  IT IS OFTEN HARD TO DETERMINE           *
*        WHICH LINK LIST LIBRARY CONTAINS A SPECIFIC MODULE.          *
*                                                                     *
*                                                                     *
*        WHEN THE PROGRAM IS RUN FROM TSO, THE USER WILL BE           *
*        PROMPTED FOR A MODULE NAME AND THE RESPONSE WILL BE          *
*        DISPLAYED ON THE TSO USER TERMINAL.  WHEN IT IS RUN AS       *
*        A STARTED TASK, A WTOR REQUEST WILL BE MADE FOR THE          *
*        MODULE NAME AND THE RESPONSE WILL BE SENT TO THE             *
*        CONSOLE.  IF IT IS RUN AS A BATCH JOB, THE MODULE NAME       *
*        WILL BE ENTERED AS THE FIRST 8 CHARACTERS OF A RECORD        *
*        READ FROM THE SYSIN FILE AND THE RESPONSE WILL BE            *
*        WRITTEN TO THE SYSPRINT FILE.                                *
*                                                                     *
*        THE PROGRAM WILL CONTINUE TO ASK FOR OTHER MODULE            *
*        NAMES UNTIL END-OF-FILE IS REACHED ON THE SYSIN FILE         *
*        FOR A BATCH JOB OR A 'STOP', 'END', OR '/ *' IS              *
*        RECEIVED FROM A TSO USER OR THE OPERATOR CONSOLE.            *
*                                                                     *
*        THIS UTILITY PROGRAM WAS ORIGINALLY WRITTEN BY ANOTHER       *
*        PERSON IN ANOTHER INSTALLATION SO I CANNOT TAKE CREDIT       *
*        FOR IT.  I HAVE CLEANED IT UP A LOT AND PROVIDED             *
*        COMMENTS, BUT BECAUSE OF LACK OF PERMISSION, I CANNOT        *
*        GIVE THE NAME OF THE ORIGINAL AUTHOR.                        *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*      THE AUTHORS INCLUDING FOOD LION, ITS OFFICERS,                 *
*      DIRECTORS, AND EMPLOYEES MAKE NO REPRESENTATION OR             *
*      WARRANTY OF ANY KIND WHATSOEVER, INCLUDING, BUT NOT            *
*      LIMITED TO, REPRESENTATIONS OR WARRANTIES, EXPRESS OR          *
*      IMPLIED, OR MERCHANTABILITY, FITNESS FOR USE OR PURPOSE,       *
*      ACCURACY OR COMPLETENESS OF PROCESSES, PROCEDURES,             *
*      DESIGNS, DEFINITIONS, INSTRUCTIONS, INFORMATION, OR            *
*      FUNCTIONING OF ANY PROGRAMS, DOCUMENTS, OR RELATED             *
*      MATERIALS; THE AUTHORS FURTHER EXPRESSLY DISCLAIM ANY          *
*      KNOWLEDGE OF PURPOSE FOR WHICH THESE PROGRAMS,                 *
*      DOCUMENTS, OR RELATED MATERIAL MAY BE UTILIZED OR THEIR        *
*      APPLICABILITY FOR SUCH USE, NOR SHALL THE FACT OF MAKING       *
*      THEM AVAILABLE CONSTITUTE ANY SUCH REPRESENTATION,             *
*      WARRANTY, OR KNOWLEDGE; NOR DO THE AUTHORS ASSUME ANY          *
*      LIABILITY, RESPONSIBILITY, OR OBLIGATION ARISING FROM          *
*      THE USE OR MALFUNCTIONING OF OF THESE COMPUTER PROGRAMS,       *
*      DOCUMENTATION, OR RELATED MATERIALS.                           *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                          SAMPLE JCL                                 *
*                                                                     *
*       BATCH JOB                                                     *
*                                                                     *
*       //JOBNAME  JOB ....                                           *
*       //MODLOOK  EXEC PGM=MODLOOK                                   *
*       //SYSPRINT DD  SYSOUT=*                                       *
*       //SYSIN    DD  *                                              *
*       IDCAMS                                                        *
*       IEFW21SD                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
*       STARTED TASK                                                  *
*                                                                     *
*       //MODLOOK  PROC                                               *
*       //MODLOOK  EXEC PGM=MODLOOK                                   *
*                                                                     *
*       THE OPERATOR WILL BE PROMPTED FOR MODULE NAME AND             *
*       THE RESULTS WILL BE WRITTEN TO THE CONSOLE.                   *
*                                                                     *
*                                                                     *
*                                                                     *
*      TSO                                                            *
*                                                                     *
*      JUST ENTER 'MODLOOK' AT THE READY PROMPT OR UNDER              *
*      OPTION 6 OF ISPF.                                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
R0       EQU  0
R1       EQU  1
R2       EQU  2
R3       EQU  3
R4       EQU  4
R5       EQU  5
R6       EQU  6
R7       EQU  7
R8       EQU  8
R9       EQU  9
R10      EQU  10
R11      EQU  11
R12      EQU  12
R13      EQU  13
R14      EQU  14
R15      EQU  15
         EJECT
***********************************************************************
*                                                                     *
*        START OF PROGRAM                                             *
*                                                                     *
***********************************************************************
MODLOKUP AMODE 24
         RMODE 24
MODLOKUP CSECT
         SAVE (14,12),,MODLOKUP.&SYSDATE..&SYSTIME
         LR   R12,R15              SET BASE REGISTER
         USING MODLOKUP,R12        SET PROGRAM ADDRESSABILITY
         LA   R1,SAVEAREA          LOAD ADDRESS OF SAVE AREA
         ST   R13,4(,R1)           SAVE OLD SAVE ADDRESS IN NEW
         ST   R1,8(,R13)           SAVE NEW SAVE ADDRESS IN OLD
         LR   R13,R1               SET NEW SAVE ADDRESS
         BAL   R14,INITLZE         GO INITIALIZE PROGRAM AREAS
         EJECT
***********************************************************************
*                                                                     *
*        GET THE ADDRESS OF THE TCB                                   *
*                                                                     *
***********************************************************************
         EXTRACT ANSWER,'S',FIELDS=(FRS)
         L     R7,ANSWER           A(TCB PREFIX AREA)
         LA    R7,32(R7)            +32 BYTES=A(TCB)
         USING TCB,R7              SET ADDRESSABILITY TO TCB
***********************************************************************
*                                                                     *
*        REGISTER 7 NOW POINTS TO THE TCB.  IF THE LOAD IS            *
*        SUCCESSFUL, TCBLLS SHOULD POINT TO THE LLE FOR THE           *
*        MODULE.  LLECDPT POINTS TO THE CDE FOR THE MODULE.           *
*                                                                     *
*        THE CDE FIELDS ARE THEN FORMATED AND PRINTED.                *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        GET THE MODULE NAME FROM EITHER THE SYSIN FILE, A WTOR       *
*        REQUEST FOR A STARTED TASK, OR A TPUT AND TGET REQUEST       *
*        FOR A TSO USER.                                              *
*                                                                     *
***********************************************************************
GETNAME  MVC   GETAREA,BLANKS      BLANK THE INPUT BUFFER
         TM    MISCSW,BATCH        SEE IF BATCH JOB
         BNO   GETNAME2            NO, BRANCH
GETNAME1 GET   SYSIN,GETAREA       READ AN INPUT CARD
         B     GETNAME4            BRANCH
GETEODAD MVC   GETAREA(8),=CL8'END' SET FOR END
         B     GETNAME4            BRANCH
GETNAME2 TM    MISCSW,TSO          SEE IF TSO USER
         BNO   GETNAME3            NO, BRANCH
         LA    R1,=CL30'ENTER MODLOOKUP MODULE NAME:' POINT TO MESSAGE
         LA    R0,30               SET LENGTH OF MESSAGE
         TPUT  (R1),(R0),R         WRITE THE MESSAGE
         TGET  GETAREA,80          GET A MODULE NAME FROM THE USER
         LTR   R15,R15             TEST THE RETURN CODE
         BZ    GETNAME4            ZERO, OK
         MVC   GETAREA(8),=CL8'END' SET FOR END
         B     GETNAME4            GET OUT
GETNAME3 XC    MYECB,MYECB         CLEAR MY ECB
         WTOR  'ENTER MODLOOKUP MODULE NAME:',                         X
               GETAREA,8,MYECB,ROUTCDE=2
         WAIT  ECB=MYECB           WAIT FOR OPERATOR REPLY
         EJECT
***********************************************************************
*                                                                     *
*        CHECK THE RESPONSE FOR A TERMINATION REQUEST                 *
*                                                                     *
***********************************************************************
GETNAME4 OC    GETAREA,BLANKS      MAKE UPPER CASE
         CLC   GETAREA(8),=CL8' '  SEE IF BLANK NAME ENTERED
         BE    GETNAME             YES, BRANCH
         CLC   GETAREA(8),=CL8'END' SEE IF END REQUESTED
         BE    STOPRUN             YES, BRANCH
         CLC   GETAREA(8),=CL8'STOP' SEE IF END REQUESTED
         BE    STOPRUN             YES, BRANCH
         CLC   GETAREA(8),=CL8'/*' SEE IF END REQUESTED
         BE    STOPRUN             YES, BRANCH
***********************************************************************
*                                                                     *
*        SEE IF THE MODULE IS IN THE LINK LIST                        *
*                                                                     *
***********************************************************************
LOADPGM  MVC   LSTNM,MODULNAM      SET UP FOR BLDL
         BLDL  0,LSTADDR           SEARCH LINK LIST FOR MODULE NAME
         LTR   R15,R15             TEST BLDL RETURN CODE
         BZ    CALHD1              ZERO, BRANCH
         MVI   PUTAREA,SPACE1      SET FOR SINGLE SPACE
         MVC   PUTAREA+1(20),=CL20'BLDL FAILED FOR ' SET MSG TEXT
         MVC   PUTAREA+17(8),MODULNAM SET MODULE NAME IN MESSAGE
         BAL   R14,PUTLINE         GO WRITE THE MESSAGE
         B     LOAD                GO TRY TO LOAD THE MODULE
CALHD1   BAL   R14,PRTHD1          GO WRITE THE HEADER MESSAGE
         B     LOAD                GO TRY TO LOAD THE MODULE
         SPACE
***********************************************************************
*                                                                     *
*        ATTEMPT TO LOAD THE MODULE.                                  *
*                                                                     *
***********************************************************************
         CNOP  0,4
LOAD     LOAD  EPLOC=MODULNAM,ERRET=LOADERR
         ST    0,EPA               SAVE THE ENTRY POINT ADDRESS
         ST    1,LEN               SAVE APF AC CODE AND MODULE LEN
         NC    EPA,=X'7FFFFFFF'    TURN OFF HIGH ORDER BIT
         L     R2,EPA              RELOAD ENTRY POINT ADDRESS
         SR    R3,R3               CLEAR REGISTER
         BAL   R14,PRTHEAD         GO DISPLAY MODULE LOCATION
         BAL   R14,FMTCDE          GO DISPLAY CDE INFORMATION
         BAL   R14,FMTEYE          GO FORMAT EYE CATCHER
         BAL   R14,DELTMOD         GO DELETE MODULE
         B     GETNAME
         SPACE 2
***********************************************************************
*                                                                     *
*        IF THE PROGRAM COULD NOT LOAD THE MODULE, CONTROL            *
*        COMES HERE.  AN ERROR MESSAGE IS WRITTEN GIVING THE          *
*        ABEND AND REASON CODE.                                       *
*                                                                     *
*        R1  = BYTES 2-3 CONTAIN THE ABEND CODE                       *
*        R15 = BYTES 2-3 CONTAIN THE REASON CODE                      *
*                                                                     *
***********************************************************************
         SPACE
LOADERR  MVI   PUTAREA,SPACE2      SET FOR DOUBLE SPACE
         MVC   ERR1MNAM,MODULNAM   MOVE MODULE NAME
         ST    R1,EPA              SAVE REGISTER 1
         ST    R15,WORK5           SAVE REGISTER 15
         UNPK  TWORK,EPA(5)        UNPACK HEX FIELD + 1
         TR    TWORK,TRTBL1        TRANSLATE TO PRINTABLE
         MVC   ERR1ABND,TWORK+5    MOVE ABEND CODE TO MESSAGE
         UNPK  TWORK,WORK5(5)      UNPACK HEX FIELD + 1
         TR    TWORK,TRTBL1        TRANSLATE TO PRINTABLE
         MVC   ERR1RSN,TWORK+4     MOVE REASON CODE TO MESSAGE
         MVC   PUTAREA+1(LERRLN1),ERRLN1 MOVE MSG TO IOAREA
         BAL   R14,PUTLINE         WRITE MESSAGE
         B     GETNAME             GO GET NEXT REQUEST
         EJECT
***********************************************************************
*                                                                     *
*        END OF PROCESSING                                            *
*                                                                     *
***********************************************************************
STOPRUN  TM    MISCSW,BATCH        SEE IF BATCH JOB
         BNO   STOPRUN1            NO, BRANCH
         CLOSE (SYSIN,,SYSPRINT)   CLOSE FILES
STOPRUN1 L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE AREA
         RETURN (14,12),RC=0       RETURN TO CALLER
         TITLE 'MODLOKUP - LEVEL 1 SUBROUTINES'
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT THE CDE                                               *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SY#0001                       *
*                                                                     *
***********************************************************************
FMTCDE   ST    R14,SV#0001         SAVE RETURN ADDRESS
*        AMODE31
         LA  R15,*+10              SET BRANCH ADDRESS
         O   R15,=X'80000000'      SET AMODE 31 BIT ON
         BASSM R14,R15             GO TO AMODE 31
         MVC   PCDATTR,BLANKS      CLEAR CDE ATTRIBUTES LINE.
         MVI   PUTAREA,SPACE1      SET FOR SINGLE SPACE
         L     R8,TCBLLS           LOAD LLE ADDRESS FROM TCB
         USING LLE,R8              SET ADDRESSABILITY TO LLE
         L     R8,LLECDPT          LOAD CDE ADDRESS FROM LLE
         DROP  R8                  DROP ADDRESSABILITY TO LLE
         USING CDENTRY,R8          SET ADDRESSABILITY TO CDE
*        AMODE24
         LA  R15,*+6               SET BRANCH ADDRESS
         BASSM R14,R15             GO TO AMODE 24
CKCDNAME CLC   CDNAME,MODULNAM     SAME MODULE AS REQUESTED?
         BE    CKATTR1             YES, CHECK ATTRIBUTES.
         L     R8,CDCHAIN          NO, LOAD ADDRESS OF NEXT CDE
         LTR   R8,R8               TEST ADDRESS
         BNZ   CKCDNAME            NOT ZERO, CHECK CDNAME ENTRY.
         SPACE
***********************************************************************
*                                                                     *
*        CORRECT CDE COULD NOT BE FOUND                               *
*                                                                     *
***********************************************************************
         SPACE
         MVC   PUTAREA+1(L'CDERR1),CDERR1
         MVC   PUTAREA+1+L'CDERR1(L'MODULNAM),MODULNAM
         BAL   R14,PUTLINE         GO WRITE ERROR MESSAGE
         L     R14,SV#0001         LOAD RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
CDERR1   DC    C'--- ERROR --- UNABLE TO LOCATE CDE FOR '
         DS    0F
         EJECT
***********************************************************************
*                                                                     *
*        DETERMINE THE MODULE ATTRIBUTES                              *
*                                                                     *
***********************************************************************
         SPACE
CKATTR1  LA    R9,PCDATTR          LOAD ADDRESS OF PRINT WORK AREA
         TM    CDATTR,CDNIP        SEE IF NIP LOADED OR LPA?
         BNO   TCDREN              NO, BRANCH
         MVC   0(7,R9),=C',IN LPA' SET IN LPA
         LA    R9,7(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDREN   TM    CDATTR,CDREN        SEE IF RE-ENTRANT MODULE?
         BNO   TCDSER              NO, BRANCH
         MVC   0(5,R9),=C',RENT'   SET RENT
         LA    R9,5(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDSER   TM    CDATTR,CDSER        SEE IF SERIALLY RE-USEABLE MODULE?
         BNO   TCDNFN              NO, BRANCH
         MVC   0(5,R9),=C',REUS'   SET REUS
         LA    R9,5(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDNFN   TM    CDATTR,CDNFN        SEE IF NOT FUNCTIONAL MODULE?
         BNO   TCDMIN              NO, BRANCH
         MVC   0(10,R9),=C',NON-FUNCT' SET NON-FUNCT
         LA    R9,10(R9)           INCREMENT TO NEXT MESSAGE AREA
TCDMIN   TM    CDATTR,CDMIN        SEE IF ALIAS? (MINOR CDE)
         BNO   TCDJPA              NO, BRANCH
         MVC   0(11,R9),=C',ALIAS FOR ' SET ALIAS
         LA    R9,11(R9)           INCREMENT TO NEXT MESSAGE AREA
         L     R10,CDXLMJP         LOAD CDE OF MAJOR NAME
         DROP  R8                  DROP ADDRESSABILITY TO MINOR CDE
         USING CDENTRY,R10         SET ADDRESSABILITY TO MAJOR CDE
         MVC   0(L'CDNAME,R9),CDNAME SAVE MAJOR CDE NAME
         LA    R9,L'CDNAME(R9)     INCREMENT TO NEXT MESSAGE AREA
         DROP  R10                 DROP ADDRESSABILITY TO MAJOR CDE
         USING CDENTRY,R8          SET ADDRESSABILITY TO MINOR CDE
TCDJPA   TM    CDATTR,CDJPA        IS MODULE IN JOB PACK AREA?
         BNO   TCDNLR              NO, BRANCH
         MVC   0(7,R9),=C',IN JPA' SET IN JPA
         LA    R9,7(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDNLR   TM    CDATTR,CDNLR        SEE OF NOT LOAD-ONLY?
         BNO   CHKATTR2            NO, BRANCH
         MVC   0(14,R9),=C',NOT LOAD-ONLY' SET NOT LOAD-ONLY
         LA    R9,14(R9)           INCREMENT TO NEXT MESSAGE AREA
         SPACE
CHKATTR2 TM    CDATTR2,CDSPZ       SEE IF SUBPOOL 0?
         BNO   TCDRLC              NO, BRANCH
         MVC   0(5,R9),=C',SPL0'   SET SUBPOOL 0
         LA    R9,5(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDRLC   TM    CDATTR2,CDRLC       SEE IF EPA RELOCATED?
         BNO   TCDOLY              NO, BRANCH
         MVC   0(8,R9),=C',MIN-RLC' SET RELOCATED
         LA    R9,8(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDOLY   TM    CDATTR2,CDOLY       SEE IF OVERLAY FORMAT?
         BNO   TCDSYSLB            NO, BRANCH
         MVC   0(5,R9),=C',OVLY'   SET OVLY
         LA    R9,5(R9)            INCREMENT TO NEXT MESSAGE AREA
TCDSYSLB TM    CDATTR2,CDSYSLIB    SEE IF FROM AUTH. LIBRARY?
         BNO   USECNT              NO, BRANCH
         MVC   0(10,R9),=C',AUTH. LIB' SET AUTHORIZED LIBRARY
         LA    R9,10(R9)           INCREMENT TO NEXT MESSAGE AREA
USECNT   LH    R10,CDUSE           LOAD USE COUNT
         CVD   R10,PCDUSE          CONVERT TO DECIMAL
         MVC   0(11,R9),=C',USE COUNT=' SET TITLE
         LA    R9,11(R9)           INCREMENT TO NEXT MESSAGE AREA
         OI    PCDUSE+7,X'0F'      MAKE COUNT PRINTABLE
         UNPK  0(3,R9),PCDUSE+6(2) UNPACK USE COUNT TO MESSAGE
FMTCDEND MVI   PCDATTR,C'='        SET END OF TITLE
         MVC   PUTAREA+1(L'PCDE),PCDE SET MESSAGE LINE
         BAL   R14,PUTLINE         GO WRITE MESSAGE LINE
         L     R14,SV#0001         SET RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
PCDE     DS    0CL133
PCDELIT  DC    C'MODULE ATTRIBUTES'
PCDATTR  DS    CL(L'PCDE-L'PCDELIT)
         DS    0F
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT THE EYE CATCHER IN THE FIRST 79 CHARACTERS OF         *
*        THE MODULE.                                                  *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SV#0001                       *
*                                                                     *
***********************************************************************
         SPACE 2
FMTEYE   ST    R14,SV#0001         SAVE RETURN ADDRESS
         L     R2,CDXLMJP          LOAD POSSIBLE EXTENT LIST ADDRESS
         TM    CDATTR,CDMIN        SEE IF ALIAS? (MINOR CDE)
         BNO   FMTEYE1             NO, BRANCH
         L     R10,CDXLMJP         LOAD CDE OF MAJOR NAME
         DROP  R8                  DROP ADDRESSABILITY TO MINOR CDE
         USING CDENTRY,R10         SET ADDRESSABILITY TO MAJOR CDE
         L     R2,CDXLMJP          LOAD POSSIBLE EXTENT LIST ADDRESS
         DROP  R10                 DROP ADDRESSABILITY TO MAJOR CDE
         USING CDENTRY,R8          SET ADDRESSABILITY TO MINOR CDE
FMTEYE1  TM    CDATTRB,CDELPDE     SEE IF LPDE
         BO    EYERET              YES, GET OUT
         LTR   R2,R2               SEE IF PRESENT
         BZ    EYERET              NO, GET OUT
*        AMODE31
         LA  R15,*+10              SET BRANCH ADDRESS
         O   R15,=X'80000000'      SET AMODE 31 BIT ON
         BASSM R14,R15             GO TO AMODE 31
         ICM   R2,B'1111',12(R2)   GET LOAD STORAGE BLOCK ADDRESS
         CLC   0(2,R2),=X'47F0'    SEE IF BRANCH AROUND EYECATCHER
         BNE   SETMAX              NO, BRANCH
         SLR   R3,R3               CLEAR REG FOR ICM
         ICM   R3,B'0001',4(R2)    LOAD LENGTH OF EYECATCHER
         LA    R2,5(R2)            POINT PAST PREFIX
         CH    R3,=H'79'           SEE IF EXCEEDS MAX
         BH    SETMAX              YES, BRANCH
         B     MOVE                GO MOVE EYECATCHER
SETMAX   LA    R3,79               SET MAX LENGTH TO 79
MOVE     MVI   PUTAREA,SPACE1      SET FOR SINGLE SPACE
         ICM   R3,B'1000',=C' '    SET FILL CHARACTER
         LA    R4,PUTAREA+1        SET 'TO' ADDRESS
         L     R5,LEN              LOAD AC CODE AND LENGTH LENGTH
         N     R5,=X'00FFFFFF'     CLEAR THE AUTH CODE PORTION
         MH    R5,=H'8'            MULTIPLY BY 8 FOR LENGTH IN BYTES
         C     R5,=F'79'           SEE IF EXCEEDS 79 CHARACTERS
         BL    MOVEIT              NO, BRANCH
         LA    R5,79               SET 'TO' LENGTH TO 79
MOVEIT   MVCL  R4,R2               MOVE EYECATCHER
*        AMODE24
         LA  R15,*+6               SET BRANCH ADDRESS
         BASSM R14,R15             GO TO AMODE 24
         TR    PUTAREA+1(132),TRTBL2 TRANSLATE UNPRINTABLE TO BLANKS
         BAL   R14,PUTLINE         GO WRITE MESSAGE
EYERET   L     R14,SV#0001         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT GENERAL INFORATION ABOUT THE MODULE                   *
*                                                                     *
*        R1 -  BYTE 0 CONTAINS AUTHORIZATION CODE                     *
*              BYTES 1-3 CONTAINS MODULE LENGTH IN DOUBLE WORDS       *
*        EPA - BYTES 0-3 CONTAIN MODULE ENTRY POINT ADDRESS           *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SV#0001                       *
*                                                                     *
***********************************************************************
         SPACE
PRTHEAD  ST    R14,SV#0001         SAVE RETURN ADDRESS
         L     R1,LEN              LOAD AC CODE AND MODULE LENGTH
         ST    R1,WORK5            SAVE THE AUTH CODE AND LENGTH
         N     R1,=X'00FFFFFF'     CLEAR THE AUTH CODE PORTION
         MH    R1,=H'8'            MULTIPLY BY 8 FOR LENGTH IN BYTES
         STCM  R1,B'0111',WORK5+1  SAVE LENGTH IN BYTES
         SPACE
         MVI   PUTAREA,SPACE2      SET FOR DOUBLE SPACE
         MVC   HD1MNAM,MODULNAM    SET MODULE NAME
         UNPK  TWORK,EPA(5)        UNPACK HEX FIELD + 1
         TR    TWORK,TRTBL1        TRANSLATE TO PRINTABLE
         MVC   HD1EPA,TWORK        MOVE EPA TO MESSAGE
         UNPK  TWORK,WORK5(5)      UNPACK HEX FIELD + 1
         TR    TWORK,TRTBL1        TRANSLATE TO PRINTABLE
         MVC   HD1LNGTH,TWORK+2    MOVE LENGTH TO MESSAGE
         MVC   HD1AUTH,TWORK       MOVE AUTH CODE TO MESSAGE
         BAL   R14,LOCATE          GO SET STORAGE AREA NAME
         MVC   HD1AREA,WORK5       SAVE STORAGE NAME
         MVC   PUTAREA+1(LHEAD1),HEAD1 MOVE HEADING TO IOAREA
         BAL   R14,PUTLINE         PUT LINE
         L     R14,SV#0001         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE
PRTHD1   ST    R14,SV#0001         SAVE RETURN ADDRESS
         MVI   PUTAREA,SPACE1      SET FOR SINGLE SPACE
         MVC   HD2MNAM,MODULNAM    SET MODULE NAME
         SLR   R15,R15             CLEAR REG FOR IC
         IC    R15,LSTCONCT        LOAD CONCATINATION NUMBER
         CVD   R15,DOUBLE          CONVERT TO PACKED
         OI    DOUBLE+7,X'0F'      MAKE PRINTABLE
         UNPK  HD2CONCT,DOUBLE+6(2) UNPACK TO MESSAGE
         MVC   HD2WHERE,=CL20'A PRIVATE LIBRARY'
         CLI   LSTWHERE,0          SEE IF IN PRIVATE AREA
         BE    PRTHD2              YES, GET OUT
         MVC   HD2WHERE,=CL20'THE LINK LIST'
         CLI   LSTWHERE,1          SEE IF IN LINK LIST
         BE    PRTHD3              YES, GO GET DSNAME
         MVC   HD2WHERE,=CL20'A JOB/STEP LIB'
         CLI   LSTWHERE,2          SEE IF JOB/STEPLIB
         BE    PRTHD2              YES, GET OUT
         MVC   HD2WHERE,=CL20'PARENT TASK LIB'
PRTHD2   MVC   PUTAREA+1(LHEAD2),HEAD2 MOVE HEADING TO IOAREA
         BAL   R14,PUTLINE         WRITE MESSAGE
         L     R14,SV#0001         RESTORE RETURN ADDRESS
         BR    R14                 AND RETURN TO CALLER
PRTHD3   MVC   PUTAREA+1(LHEAD2),HEAD2 MOVE HEADING TO IOAREA
         BAL   R14,PUTLINE         WRITE MESSAGE
         L     R3,16 LOAD ADDRESS OF CVT
         USING CVT,R3              SET ADDRESSABILITY TO CVT
         L     R3,CVTLLTA          LOAD ADDRESS OF LINKLIST DSNS
         DROP  R3                  DROP ADDRESSABILITY TO CVT
         LA    R4,9(,R3)           POINT TO FIRST DSN IN LIST
         XR    R2,R2               CLEAR REG
         XR    R3,R3               CLEAR REG
         IC    R3,LSTCONCT         LOAD CONCATINATION NUMBER
         M     R2,=F'45'           MULT BY 44 TO DISPLACE FOR DSN
         AR    R4,R3               DISPLACE INTO THE TABLE
         MVC   HD2DSNAM(44),0(R4)  MOVE DSNAME TO MESSAGE
         MVC   PUTAREA+1(LHD2DSN1),HD2DSN1 MOVE HEADING TO IOAREA
         BAL   R14,PUTLINE         WRITE MESSAGE
         L     R14,SV#0001         RESTORE RETURN ADDRESS
         BR    R14                 AND RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS                                     *
*                                                                     *
***********************************************************************
         SPACE
HEAD1    EQU   *
HD1MNAM  DS   0CL8
         DC    C'MODULNAM   EPA='
HD1EPA   DS   0CL8
         DC    C'????????,LENGTH='
HD1LNGTH DS   0CL6
         DC    C'??????,AUTH='
HD1AUTH  DS   0CL2
         DC    C'??,AREA CONTAINING MODULE='
HD1AREA  DS   0CL5
         DC    C'UNKN '
LHEAD1   EQU   *-HEAD1
         SPACE
HEAD2    EQU   *
HD2MNAM  DS    CL8
         DC    C' WAS FOUND IN CONCATENATION '
HD2CONCT DS    CL2
         DC    C' OF '
HD2WHERE DC    CL20' '
LHEAD2   EQU   *-HEAD2
HD2DSN1  DC    C'DATASET NAME = '
HD2DSNAM DS    CL44
LHD2DSN1 EQU   *-HD2DSN1
         DS   0F
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE DELETES THE LOAD MODULE AFTER ALL               *
*        PROCESSING HAS COMPLETED.                                    *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SV#0002                       *
*                                                                     *
***********************************************************************
         SPACE
DELTMOD  ST    R14,SV#0002         SAVE RETURN ADDRESS
         DELETE EPLOC=MODULNAM     DELETE LOADED MODULE
         LTR   R15,R15             TEST RETURN CODE
         BZ    DELRET              ZERO, GET OUT
         MVI   PUTAREA,SPACE1      SET FOR SINGLE SPACE
         MVC   PUTAREA+1(L'DELMSG1),DELMSG1  MOVE IN ERROR MSG
         MVC   PUTAREA+1+L'DELMSG1(L'MODULNAM),MODULNAM MOVE IN MNAME
         BAL   R14,PUTLINE         WRITE OUT DELETE ERROR MESSAGE
DELRET   L     R14,SV#0002         LOAD RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
DELMSG1  DC    C' ERROR IN DELETING MODULE '
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE DETERMINES WHERE IN MEMORY THE MODULE IS        *
*        LOCATED.  THE ENTRY POINT ADDRESS IS COMPARED TO THE         *
*        VIRTUAL STORAGE ADDRESSES OF THE STORAGE SUBPOOLS FOR        *
*        THE LOCAL AND COMMON STORAGE AREAS AS DEFINED IN THE         *
*        CVT AND THE GDA.                                             *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SV#0002                       *
*                                                                     *
***********************************************************************
         SPACE
LOCATE   ST    R14,SV#0002         SAVE ENTRY POINT ADDRESS
*        AMODE31
         LA  R15,*+10              SET BRANCH ADDRESS
         O   R15,=X'80000000'      SET AMODE 31 BIT ON
         BASSM R14,R15             GO TO AMODE 31
         L     R2,16               LOAD ADDRESS OF CVT
         USING CVT,R2              SET ADDRESSABILITY TO CVT
         L     R3,CVTGDA           LOAD ADDRESS OF GDA
         USING GDA,R3              SET ADDRESSABILITY TO GDA
         L     R4,CVTSMEXT         LOAD ADDRESS OF STORAGE MAP EXTENS
         USING CVTVSTGX,R4         SET ADDRESSABILITY TO MAP EXTENS
         NI    EPA,X'7F'           TURN OFF HIGH ORDER BIT OF EPA
         MVC   WORK5,=C'USER '     ASSUME USER 'PRIVATE'
         CLC   EPA,CVTSHRVM        COMPARE TO START OF CSA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'CSA  '     ASSUME CSA
         CLC   EPA,CVTMLPAS        COMPARE TO START OF MLPA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'MLPA '     ASSUME MLPA
         CLC   EPA,CVTFLPAS        COMPARE TO START OF FLPA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'FLPA '     ASSUME FLPA
         CLC   EPA,CVTPLPAS        COMPARE TO START OF PLPA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'PLPA '     ASSUME PLPA
         CLC   EPA,GDASQA          COMPARE TO START OF SQA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'EPLPA'     ASSUME E-PLPA
         CLC   EPA,CVTEFLPS        COMPARE TO START OF EFLPA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'EFLPA'     ASSUME E-MLPA
         CLC   EPA,CVTEMLPS        COMPARE TO START OF EFLPA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'EMLPA'     ASSUME E-MLPA
         CLC   EPA,GDAECSA         COMPARE TO START OF E-CSA
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'ECSA '     ASSUME E-CSA
         CLC   EPA,GDAEPVT         COMPARE TO START OF E-PRIVATE
         BL    LOCATED             IF LESS THAN IT MUST BE GOOD
*
         MVC   WORK5,=C'EPVT '     ASSUME E-PRIVATE
*
*        AMODE24
LOCATED  LA  R15,*+6               SET BRANCH ADDRESS
         BASSM R14,R15             GO BACK TO AMODE 24
         L     R14,SV#0002         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         DROP  R2                  DROP ADDRESSABILITY TO CVT
         DROP  R3                  DROP ADDRESSABILITY TO GDA
         DROP  R4                  DROP ADDRESSABILITY TO MAP EXTENS
         EJECT
***********************************************************************
*                                                                     *
*        DETERMINE IF WE ARE RUNNING AS A BATCH JOB, STARTED TASK,    *
*        OR A TSO USER.  IF WE ARE A BATCH JOB, OPEN THE SYSIN AND    *
*        SYSPRINT DATA SETS.                                          *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SV#0002                       *
*                                                                     *
***********************************************************************
         SPACE
INITLZE  ST    R14,SV#0002
INITLZE1 XC    ANSWER,ANSWER       CLEAR THE ANSWER AREA
         EXTRACT ANSWER,'S',FIELDS=(PSB) GET PSCB ADDRESS
         ICM   R15,B'1111',ANSWER  LOAD PSCB ADDRESS
         BZ    INITLZE2            ZERO, NOT TSO
         OI    MISCSW,TSO          TURN ON TSO INDICATOR
         B     INITLZE4            GET OUT
INITLZE2 XC    ANSWER,ANSWER       CLEAR THE ANSWER AREA
         EXTRACT ANSWER,'S',FIELDS=(COMM) GET CSCB ADDRESS
         ICM   R15,B'1111',ANSWER  LOAD CSCB ADDRESS
         BZ    INITLZE3            ZERO, NOT STC
         ICM   R15,B'1111',4(R15)  LOAD CIB ADDRESS
         BZ    INITLZE3            ZERO, NOT STC
         OI    MISCSW,STC          TURN ON STC INDICATOR
         B     INITLZE4            GET OUT
INITLZE3 OI    MISCSW,BATCH        TURN ON BATCH INDICATOR
         OPEN  (SYSIN,,SYSPRINT,(OUTPUT))
         MVI   PUTAREA,EJECT       SET FOR TOP-OF-PAGE
         BAL   R14,PUTLINE         GO WRITE PRINT LINE
INITLZE4 L     R14,SV#0002         LOAD RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         TITLE 'MODLOKUP - LEVEL 3 SUBROUTINES'
         SPACE
***********************************************************************
*                                                                     *
*        THIS ROUTINE HANDLES ALL OUTPUT FOR THE PROGRAM.  IF         *
*        WE ARE RUNNING AS A STARTED TASK, A WTOR IS ISSUED.  IF      *
*        WE ARE A BATCH JOB, PUT IS USED.  IF WE ARE RUNNING          *
*        UNDER TSO, TPUT IS ISSUED.                                   *
*                                                                     *
*        R14 SAVE AREA FOR THIS CODE IS SV#0003                       *
*                                                                     *
***********************************************************************
         SPACE
PUTLINE  ST    R14,SV#0003         SAVE RETURN CODE
         TM    MISCSW,BATCH        SEE IF BATCH JOB
         BNO   PUTLINE2            NO, BRANCH
PUTLINE1 PUT   SYSPRINT,PUTAREA    WRITE MESSAGE LINE
         B     PUTLINE4            GET OUT
PUTLINE2 TM    MISCSW,TSO          SEE IF TSO USER
         BNO   PUTLINE3            NO, BRANCH
         TPUT  PUTAREA+1,L'PUTAREA-1 WRITE MESSAGE LINE
         B     PUTLINE4            GET OUT
PUTLINE3 MVC   WTOL+4(125),PUTAREA+1 SET WTO LIST FORM
         WTO   MF=(E,WTOL)         WRITE MESSAGE
PUTLINE4 MVI   PUTAREA,C' '
         MVC   PUTAREA+1(L'PUTAREA-1),PUTAREA
         L     R14,SV#0003
         BR    R14
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS THE DCB OPEN EXIT FOR THE OUTPUT FILE.       *
*        IT WILL SET THE OUTPUT BLKSIZE TO 9044 IF IT HAS NOT         *
*        BEEN SPECIFIED.                                              *
*                                                                     *
***********************************************************************
OUTEXIT  LA    R2,0(R1)            LOAD DCB ADDRESS
         USING IHADCB,R2           SET ADDRESSABILITY TO DCB
         CLC   DCBBLKSI,=X'0000'   SEE IF OUTPUT BLKSIZE SPECIFIED
         BNER  R14                 YES, RETURN TO OPEN
         MVC   DCBBLKSI,=H'9040'   NO,  SET TO 9040
         BR    R14                 RETURN TO OPEN
         DROP  R2                  DROP ADDRESSABILITY TO DCB
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS                                     *
*                                                                     *
***********************************************************************
         EJECT
         DS    0F
         SPACE
LSTADDR  DC    AL2(1)            # ENTRIES IN LIST
         DC    AL2(LSTEND-LSTNM)   L' OF EACH ENTRY
LSTNM    DC    CL8' '              MEMBER NAME
         DS    XL3                   (TTR)
LSTCONCT DS    B                   CONCATENATION NUMBER 00-FF
LSTWHERE DS    B                   WHERE ENTRY WAS FOUND
*                                    0 - PRIVATE LIB
*                                    1 - LINK LIBRARY
*                                    2 - JOB, TASK OR STEPLIB
*                                    3-FF PARENT TASK LIB
LSTTYPE  DS    B                   TYPE OF MEMBER
*                                    X'80' OFF - MEMBER NAME
*                                          ON  - ALIAS NAME
LSTEND   EQU   *
         SPACE
ERRLN1   EQU   *
ERR1MNAM DS    0CL8
         DC    C'????????   ERROR DURING LOAD. ABEND S'
ERR1ABND DS    0CL3
         DC    C'???, REASON CODE='
ERR1RSN  DS    0CL4
         DC    C'????.'
LERRLN1  EQU   *-ERRLN1
         LTORG
TRTBL1   EQU   *-240               HEX CONVERSION TRANSLATE TABLE
         DC    C'0123456789ABCDEF'
TRTBL2   DC    C'                ' 00 - 0F
         DC    C'                ' 10 - 1F
         DC    C'                ' 20 - 2F
         DC    C'                ' 30 - 3F
         DC    C'           .    ' 40 - 4F
         DC    C'             )  ' 50 - 5F
         DC    C'-            (  ' 60 - 6F
         DC    C'          :     ' 70 - 7F
         DC    C'                ' 80 - 8F
         DC    C'                ' 90 - 9F
         DC    C'                ' A0 - AF
         DC    C'                ' B0 - BF
         DC    C' ABCDEFGHI      ' C0 - CF
         DC    C' JKLMNOPQR      ' D0 - DF
         DC    C'  STUVWXYZ      ' E0 - EF
         DC    C'0123456789      ' F0 - FF
SAVEAREA DS    18F                 REGISTER SAVE AREA
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
MYECB    DC    F'0'                WTOR ECB
BLANKS   DC    133C' '             STRING OF BLANKS
MISCSW   DC    X'00'               MISCELLANEOUS SWITCHES
BATCH    EQU   X'80'               THIS IS A BATCH JOB
TSO      EQU   X'40'               THIS IS A TSO USER
STC      EQU   X'20'               THIS IS A STARTED TASK
TWORK    DS    CL9                 TEMPORARY WORK AREA
WTOL     WTO   '123456789 123456789 123456789 123456789 123456789 12345X
               6789 123456789 123456789 123456789 123456789 123456789 1X
               23456789 12345',ROUTCDE=2,MF=L
EJECT    EQU   X'F1'
SPACE1   EQU   X'40'
SPACE2   EQU   X'F0'
SV#0001  DS    F
SV#0002  DS    F
SV#0003  DS    F
SVRG89   DS   2F
EPA      DS    F
LEN      DS    F
SQAEND   DS    F
LPADIR   DS    F
USEREND  DS    F
NUCEND   DS    F
ANSWER   DS    F
PCDUSE   DS    D
WORK5    DS    CL5
WORK8    DS    CL8
         DC    C' '
PUTAREA  DC    CL133' '
         DC    C' '
GETAREA  DS    0CL80
MODULNAM DS    CL8
FILLER   DS    CL72
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),LRECL=80,              X
               EODAD=GETEODAD,RECFM=FB
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),LRECL=133,          X
               RECFM=FBA,EXLST=EXLIST1
         CNOP  0,4
EXLIST1  DC    X'85',AL3(OUTEXIT)  EXIT LIST FOR OPEN
         EJECT
CDEDSECT IHACDE
         EJECT
CVTDSECT CVT   DSECT=YES
         EJECT
TCBDSECT IKJTCB
         EJECT
LLEDSECT IHALLE
         EJECT
         IHAGDA
         EJECT
         DCBD  DSORG=PS,DEVD=DA
         END   MODLOKUP
