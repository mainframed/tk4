         TITLE 'LIST DATASETS BY VOLUME FROM THE CATALOG'
***********************************************************************
*                                                                     *
*                           F L V O L L S T                           *
*                                                                     *
*        THIS PROGRAM WAS WRITTEN TO FORMAT A REPORT OF DASD          *
*        DATASETS FROM AN IDCAMS LISTCAT VOL LISTING.  THE            *
*        REPORT WILL LIST THE DATASETS IN VOLSER SEQUENCE             *
*                                                                     *
*        THIS REPORT WAS WRITTEN PRIMARILY TO LIST ALL OF THE         *
*        DATASETS CATALOGED TO A VOLUME IN CASE OF A DISK             *
*        DRIVE FAILURE WHEN THE VTOC CAN NO LONGER BE USED            *
*        TO LIST FHE NAMES OF THE DATASETS ON THE VOLUME.             *
*        WE CREATE VOLUME POOLS USING SMS WHICH PREVENTS US           *
*        FROM ALWAYS KNOWING WHERE A DATASET IS FROM DAY-TO-          *
*        DAY.                                                         *
*                                                                     *
*        AN OPTIONAL PARM CAN GIVE A VOLSER OR VOLSER PREFIX          *
*        TO BE LISTED.  IF NO PARM IS ENTERED, ALL DASD VOLUMES       *
*        SHOWN IN THE IDCAMS REPORT WILL BE LISTED.  A LISTCAT        *
*        REPORT FROM ALL USER CATALOGS MUST BE PROVIDED TO            *
*        INSURE A COMPLETE LIST OF ALL DATASETS ON THE VOLUME(S).     *
*                                                                     *
*        IF A DD STATEMENT IS SUPPLIED FOR SYSUT2, A DATA RECORD      *
*        WILL BE WRITTEN FOR EACH DATASET TO THAT FILE WHICH WILL     *
*        ALLOW THE LIST OF NAMES TO BE USED BY OTHER RECOVERY IF      *
*        NEEDED.  THIS EACH RECORD IS 80 CHARACTERS LONG AND IS       *
*        FORMATTED AS FOLLOWS:                                        *
*                                                                     *
*        01-06 - VOLSER                                               *
*        07-50 - DSNAME                                               *
*        51-51 - MULTI-VOLUME INDICATOR (BLANK OR 'M')                *
*        52-61 - DATASET TYPE (NONVSAM, CLUSTER, AIX, USERCAT)        *
*        62-80 - RESERVED                                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*      THE AUTHORS INCLUDING FOOD LION, ITS OFFICERS,                 *
*      DIRECTORS, AND EMPLOYEES MAKE NO REPRESENTATION OR             *
*      WARRANTY OF ANY KIND WHATSOEVER, INCLUDING, BUT NOT            *
*      LIMITED TO, REPRESENTATIONS OR WARRANTIES, EXPRESS OR          *
*      IMPLIED, OR MERCHANTABILITY, FITNESS FOR USE OR PURPOSE,       *
*      ACCURACY OR COMPLETENESS OF PROCESSES, PROCEDURES,             *
*      DESIGNS, DEFINITIONS, INSTRUCTIONS, INFORMATION, OR            *
*      FUNCTIONING OF ANY PROGRAMS, DOCUMENTS, OR RELATED             *
*      MATERIALS; THE AUTHORS FURTHER EXPRESSLY DISCLAIM ANY          *
*      KNOWLEDGE OF PURPOSE FOR WHICH THESE PROGRAMS,                 *
*      DOCUMENTS, OR RELATED MATERIAL MAY BE UTILIZED OR THEIR        *
*      APPLICABILITY FOR SUCH USE, NOR SHALL THE FACT OF MAKING       *
*      THEM AVAILABLE CONSTITUTE ANY SUCH REPRESENTATION,             *
*      WARRANTY, OR KNOWLEDGE; NOR DO THE AUTHORS ASSUME ANY          *
*      LIABILITY, RESPONSIBILITY, OR OBLIGATION ARISING FROM          *
*      THE USE OR MALFUNCTIONING OF OF THESE COMPUTER PROGRAMS,       *
*      DOCUMENTATION, OR RELATED MATERIALS.                           *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                           SAMPLE JCL                                *
*                                                                     *
*       //JOBNAME  JOB ....                                           *
*       //LISTCAT  EXEC PGM=IDCAMS                                    *
*       //SYSPRINT DD  DSN=&&LISTC,DISP=(,PASS),                      *
*       //             UNIT=SYSDA,SPACE=(CYL,(1,1)),                  *
*       //             DCB=BLKSIZE=23476                              *
*       //SYSIN    DD  *                                              *
*        LISTCAT VOL CAT(USER.CATALOG1)                               *
*        LISTCAT VOL CAT(USER.CATALOG2)                               *
*       //VOLLIST  EXEC PGM=VOLLIST,PARM=VVVVVV                       *
*       //SYSOUT   DD  SYSOUT=*                                       *
*       //SYSPRINT DD  SYSOUT=*                                       *
*       //LISTCAT  DD  DSN=&LISTC,DISP=(OLD,DELETE)                   *
*                                                                     *
*       THE ABOVE JCL WILL PRODUCE A REPORT OF ALL DATASETS           *
*       ON VOLUME VVVVVV CATALOGED IN USER.CATALOG1 AND               *
*       USER.CATALOG2.                                                *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                        REGISTER EQUATES                             *
*                                                                     *
***********************************************************************
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*        START OF UTILITY PROGRAM                                     *
*                                                                     *
***********************************************************************
FLVOLLST CSECT
         SAVE  (14,12)
         USING FLVOLLST,R11,R12    SET UP CSECT ADDRESSABILITY
         LR    R11,R15             LOAD BASE REGISTER
         LA    R12,4095(R11)       LOAD SECOND
         LA    R12,1(R12)               BASE REGISTER
         LA    R2,SAVEAREA         LOAD ADDRESS OF NEW SAVE
         ST    R13,4(R2)           SAVE CALLER'S SAVE AREA ADDR
         ST    R2,8(R13)           SAVE MY SAVE AREA ADDRESS
         LR    R13,R2              LOAD REGISTER 13 WITH SAVE AREA
         LR    R2,R1               SAVE PARM ADDRESS
         GETMAIN R,LV=4096         GET A WORK AREA
         ST    R1,VOLTBL           SAVE ADDRESS OF WORK AREA
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PROCESS THE INPUT PARM.  THE PARM          *
*        MUST BE A ONE TO SIX CHARACTER VOLSER GIVING THE             *
*        VOLSER OR VOLSER INDEX TO BE INCLUDED IN THE REPORT.         *
*        IF OMITTED, ALL VOLSERS WILL BE LISTED.                      *
*                                                                     *
***********************************************************************
CKPARM   MVC   SEARCH,BLANKS       BLANK THE SEARCH VOLSER
         MVI   SEARCHL,X'FF'       SET THE VOLSER LENGTH TO X'FF'
         LTR   R2,R2               TEST PARM POINTER ADDRESS
         BZ    NOPARM              ZERO, NO PARM, GO OPEN FILE
         ICM   R1,B'1111',0(R2)    LOAD PARM ADDRESS
         BZ    NOPARM              ZERO, NO PARM, GO OPEN FILE
         LH    R15,0(R1)           LOAD PARM LENGTH
         LTR   R15,R15             TEST PARM LENGTH
         BNP   NOPARM              ZERO, NO PARM, GO OPEN FILE
         CH    R15,=H'6'           SEE IF PARM LENGTH EXCEEDS MAX
         BNH   CKPARM1             NO, BRANCH
         WTO   'VOLL003 - THE PARM MUST SPECIFY A 1 TO 6 CHARACTER VOLSX
               ER - JOB ABORTED',ROUTCDE=11
         ABEND 0003                ABEND THE JOB
CKPARM1  BCTR  R15,0               MAKE MACHINE LENGTH
         MVC   SEARCH,BLANKS       BLANK THE SEARCH VOLSER
         EX    R15,MVCVOL          SAVE VOLSER
         STC   R15,SEARCHL         SAVE THE VOLSER LENGTH
NOPARM   B     CHECKPR             GO OPEN FILES
MVCVOL   MVC   SEARCH(0),2(R1)     **** EXEC ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        OPEN THE OUTPUT SYSPRINT FILE.                               *
*                                                                     *
***********************************************************************
CHECKPR  MVC   DDNAME,=CL8'SYSPRINT' SET DDNAME TO 'SYSPRINT'
         LA    R15,FINDDN          LOAD ADDRESS OF TIOT SEARCH ROUTINE
         BALR  R14,R15             GO SEARCH TIOT FOR DDNAME
         LTR   R15,R15             CHECK RETURN CODE
         BZ    OPENPR              ZERO, GO OPEN SYSPRINT
         WTO   'VOLL001 - SYSPRINT DD STATEMENT MISSING - JOB ABORTED',X
               ROUTCDE=11
         ABEND 0001                ABEND THE JOB
OPENPR   OPEN  (SYSPRINT,(OUTPUT)) OPEN PRINT FILE
         SPACE 3
***********************************************************************
*                                                                     *
*        OPEN THE OPTIONAL OUTPUT DATA FILE.                          *
*                                                                     *
***********************************************************************
CHECKDF  MVC   DDNAME,=CL8'SYSUT2' SET DDNAME TO 'SYSUT2'
         LA    R15,FINDDN          LOAD ADDRESS OF TIOT SEARCH ROUTINE
         BALR  R14,R15             GO SEARCH TIOT FOR DDNAME
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   CHECKIN             NOT ZERO, NOT FOUND
         OPEN  (SYSUT2,(OUTPUT))   OPEN OUTPUT DATA FILE
         OI    PROCSW,DATAFILE     TURN ON USE DATA FILE INDICATOR
         EJECT
***********************************************************************
*                                                                     *
*        OPEN THE INPUT LISTCAT FILE.                                 *
*                                                                     *
***********************************************************************
CHECKIN  MVC   DDNAME,=CL8'LISTCAT' SET DDNAME TO 'LISTCAT '
         LA    R15,FINDDN          LOAD ADDRESS OF TIOT SEARCH ROUTINE
         BALR  R14,R15             GO SEARCH TIOT FOR DDNAME
         LTR   R15,R15             CHECK RETURN CODE
         BZ    OPENIN              ZERO, GO OPEN INPUT
         WTO   'VOLL002 - LISTCAT DD STATEMENT MISSING - JOB ABORTED', X
               ROUTCDE=11
         ABEND 0002                ABEND THE JOB
OPENIN   OPEN  (LISTCAT,(INPUT))   OPEN INPUT FILE
***********************************************************************
*                                                                     *
*        CALL SORT                                                    *
*                                                                     *
***********************************************************************
CALLSORT LA    R1,SORTPARM         LOAD ADDRESS OF SORT PARMS
         LINK  EP=SORT             GO TO SORT
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATE PROCESSING                                         *
*                                                                     *
***********************************************************************
ENDJOB   CLOSE (SYSPRINT,,LISTCAT) CLOSE PRINT FILE AND INPUT FILE
         TM    PROCSW,DATAFILE     SEE IF USING OUTPUT DATA FILE
         BNO   ENDJOB1             NO, BRANCH
         CLOSE (SYSUT2)            CLOSE OUTPUT DATA FILE
ENDJOB1  L     R1,VOLTBL           LOAD ADDRESS OF WORK AREA
         FREEMAIN R,LV=4096,A=(1)  FREE THE WORK AREA
         L     R13,4(R13)          RESTORE ORIG REGISTER 13
         RETURN (14,12),RC=0       RETURN TO O/S
         EJECT
         CNOP  0,4
         PUSH  USING
***********************************************************************
*                                                                     *
*        E15 - INPUT EXIT FOR SORT                                    *
*                                                                     *
*        THIS EXIT WILL READ THE IDCAMS LISTCAT REPORT AND            *
*        GENERATE A RECORD FOR EACH VOLUME OF EACH CATALOG            *
*        ENTRY AND PASS THAT RECORD TO SORT.                          *
*                                                                     *
***********************************************************************
E15      STM   R14,R12,12(R13)     SAVE REGISTERS
         USING E15,R11,R12         SET ADDRESSABILITY TO EXIT
         LR    R11,R15             SET FIRST BASE REGISTER
         LA    R12,4095(R11)       SET SECOND
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,E15SAVE         LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         L     R5,NEXTVOL          LOAD POSSIBLE PTR TO VOLUME ENT
         TM    PROCSW,MIDDLE       SEE IF IN MIDDLE OF VOLUMES
         BO    E15RET1             YES, BRANCH
***********************************************************************
*                                                                     *
*        CLEAR THE VOLSER TABLE                                       *
*                                                                     *
***********************************************************************
         L     R0,VOLTBL           LOAD VOLSER TABLE
         LA    R1,3072             LOAD LENGTH OF TABLE
         SLR   R14,R14             ZERO 'FROM' ADDRESS
         SLR   R15,R15             ZERO 'FROM' LENGTH AND PAD
         MVCL  R0,R14              CLEAR VOLSER TABLE
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL READ THE INPUT IDCAMS LISTCAT REPORT       *
*        UNTIL A DSNAME AND VOLSER LIST HAS BEEN DETERMINED.          *
*                                                                     *
***********************************************************************
E15RD    TM    PROCSW,EOFREACH     SEE IF EOF HAS BEEN REACHED
         BO    E15EOF1             YES, GET OUT
         MVC   CTYPE,NTYPE         SAVE TYPE OF PREVIOUS ENTRY
         MVC   CDSN,NDSN           SAVE DSN OF  PREVIOUS ENTRY
         MVC   BUFFER,BLANKS       BLANK THE INPUT BUFFER
         GET   LISTCAT,BUFFER      READ INPUT FILE
         LA    R5,BUFFER+4         POINT PAST RDW
         USING RECORD,R5           SET ADDRESSABILITY TO LISTCAT RCD
***********************************************************************
*                                                                     *
*        SEE IF THIS LINE OF THE IDCAMS REPORT IS ONE THAT WE         *
*        ARE INTERESTED IN                                            *
*                                                                     *
***********************************************************************
E15RD1   CLC   ETYPE(3),=C'IDC'    SEE IF IDCAMS TITLE OR MESSAGE
         BE    E15RD               YES, IGNORE THIS RECORD
         CLC   ETYPE(7),=CL7'CLUSTER' SEE IF CLUSTER ENTRY
         BE    E15RD12             YES, BRANCH
         CLC   ETYPE(7),=CL7'NONVSAM' SEE IF NONVSAM ENTRY
         BE    E15RD13             YES, BRANCH
         CLC   ETYPE(10),=CL10'   NONVSAM' SEE IF GDG NVSAM SUBENTRY
         BE    E15RD13             YES, BRANCH
         CLC   ETYPE(3),=CL3'AIX'  SEE IF ALTERNATE INDEX ENTRY
         BE    E15RD14             YES, BRANCH
         CLC   ETYPE(7),=CL7'USERCAT' SEE IF USERCATALOG ENTRY
         BE    E15RD15             YES, BRANCH
         CLC   VENTRY,=CL6'VOLSER' SEE IF VOLSER ENTRY
         BE    E15RD2              YES, BRANCH
         B     E15RD               NO, IGNORE THIS RECORD
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE VOLSER ENTRY                                     *
*                                                                     *
*        1)  GET THE VOLSER CHANGING ANY LEADING DASHES TO BLANKS     *
*                                                                     *
*        2)  DETERMINE THE DEVICE NAME FROM THE DEVICE TYPE           *
*                                                                     *
*        3)  ADD THE ENTRY TO THE VOLUME TABLE                        *
*                                                                     *
***********************************************************************
E15RD2   MVC   NVOLSER,EVOLSER     SAVE VOLSER FROM ENTRY
         MVC   NDEVT,EDEVT         SAVE DEVICE TYPE FROM ENTRY
***********************************************************************
*        ELIMINATE ANY LEADING DASHES IN VOLSER                       *
***********************************************************************
         LA    R15,6               LOAD LENGTH OF VOLSER
         LA    R14,NVOLSER         LOAD ADDRESS OF VOLSER
E15RD3   CLI   0(R14),C'-'         SEE IF LEADING '-'
         BNE   E15RD4              NO, BRANCH
         MVI   0(R14),C' '         YES, CHANGE TO BLANK
E15RD4   LA    R14,1(,R14)         INCREMENT TO NEXT CHAR OF VOLSER
         BCT   R15,E15RD3          LOOP
***********************************************************************
*        DETERMINE DEVICE NAME                                        *
***********************************************************************
         LA    R14,DEVNAMET        LOAD ADDRESS OF DEVICE NAME TABLE
E15RD5   CLC   NDEVT,0(R14)        SEE IF MATCH ON DEVICE TYPE
         BNE   E15RD6              NO, BRANCH
         MVC   NDEVT,8(R14)        REPLACE THE DEVICE TYPE WITH NAME
         CLI   16(R14),C'Y'        SEE IF WANT THIS DEVICE TYPE
         BE    E15RD8              YES, GET OUT
         MVC   NDEVT,=CL8'********' SET DEVICE NAME TO ASTERISKS
         B     E15RD8              GET OUT
E15RD6   CLI   0(R14),X'FF'        END OF TABLE
         BNE   E15RD7              NO, BRANCH
         MVC   NDEVT,=CL8'UNKN'    SET DEVICE NAME TO UNKNOWN
         B     E15RD8              GET OUT
E15RD7   LA    R14,17(,R14)        INCREMENT TO NEXT DEVICE NAME ENTRY
         B     E15RD5              LOOP
***********************************************************************
*        ADD ENTRY TO VOLUME TABLE                                    *
***********************************************************************
E15RD8   L     R15,VOLTBL          LOAD ADDRESS OF VOLSER TABLE
E15RD9   CLI   0(R15),0            SEE IF LAST ENTRY IN TABLE
         BE    E15RD10             YES, BRANCH
         CLC   0(6,R15),NVOLSER    SEE IF MATCHES EXISTING ENTRY
         BE    E15RD11             YES, GET OUT
         LA    R15,12(,R15)        INCREMENT TO NEXT VOLSER TBL ENTRY
         B     E15RD9              LOOP
E15RD10  MVC   0(6,R15),NVOLSER    SAVE VOLSER IN TABLE ENTRY
         MVC   6(6,R15),NDEVT      SAVE DEVICE NAME IN TABLE ENTRY
E15RD11  B     E15RD               GO READ ANOTHER RECORD
         EJECT
***********************************************************************
*        PROCESS THE START OF A MAJOR ENTRY                           *
***********************************************************************
E15RD12  MVI   NTYPE,CLUSTER       TURN ON CLUSTER INDICATOR
         B     E15RD16             CONTINUE
E15RD13  MVI   NTYPE,NONVSAM       TURN ON NONVSAM INDICATOR
         B     E15RD16             CONTINUE
E15RD14  MVI   NTYPE,AIX           TURN ON AIX INDICATOR
         B     E15RD16             CONTINUE
E15RD15  MVI   NTYPE,UCAT          TURN ON UCAT INDICATOR
E15RD16  MVC   NDSN,ENAME          SAVE ENTRY NAME
         CLI   CTYPE,0             SEE IF FIRST ENTRY
         BE    E15RD               YES, GO READ ANOTHER RECORD
         B     E15RET              NO, RETURN PREV ENTRY TO CALLER
E15RD18  OI    PROCSW,EOFREACH     TURN ON EOF REACHED INDICATOR
         DROP  R5                  DROP ADDRESSABILITY TO LISTCAT RCD
***********************************************************************
*                                                                     *
*        RETURN AN ENTRY TO SORT                                      *
*                                                                     *
*        THE CATALOG ENTRY WHICH HAS JUST BEEN PROCESSES MAY          *
*        HAVE MULTIPLE VOLUMES.  AN ENTRY MUST BE GENERATED FOR       *
*        EACH VOLUME IN THE VOLUME TABLE.  A FLAG MUST BE SET         *
*        FOR SORT TO RETURN TO THIS ROUTINE TO GENERATE ANOTHER       *
*        ENTRY IF ANOTHER VOLUME IS IN THE LIST.                      *
*                                                                     *
***********************************************************************
E15RET   MVC   SORTDSN,CDSN        SET DSNAME IN SORT RECORD
         MVC   SORTETYP,CTYPE      SET ENTRY TYPE IN SORT RECORD
         MVC   SORTVOL,BLANKS      BLANK THE VOLSER IN SORT RECORD
         MVC   SORTDEVT,BLANKS     BLANK THE DEVICE TYPE IN SORT RECORD
         L     R5,VOLTBL           LOAD VOLUME TABLE
E15RET1  CLI   0(R5),C' '          SEE IF VOLSER FOUND
         BNH   E15RET3             NO, BRANCH
         MVC   SORTVOL,0(R5)       YES, SET THE VOLSER
         MVC   SORTDEVT,6(R5)      YES, SET THE DEVICE NAME
         L     R15,VOLTBL          LOAD VOLUME TABLE
         MVI   SORTMULT,C' '       TURN OFF MULTIVOLUME IND
         CLI   12(R15),C' '        SEE IF MORE THAN ONE VOLUME
         BNH   E15RET2             NO, BRANCH
         MVI   SORTMULT,C'M'       YES, TURN ON MULTIVOLUME IND
E15RET2  NI    PROCSW,255-MIDDLE   TURN OFF MIDDLE OF VOLUMES IND
***********************************************************************
*        SEE IF ANOTHER VOLUME IN THE LIST                            *
***********************************************************************
         LA    R5,12(,R5)          INCREMENT TO NEXT VOLSER TABLE ENT
         CLI   0(R5),C' '          SEE IF ANOTHER VOLUME
         BNH   E15RET3             NO, BRANCH
         ST    R5,NEXTVOL          YES, SAVE ADDRESS OF NEXT ENTRY
         OI    PROCSW,MIDDLE       TURN ON MIDDLE OF VOLUMES IND
         EJECT
***********************************************************************
*        RETURN A RECORD TO SORT                                      *
***********************************************************************
E15RET3  L     R13,4(,R13)         LOAD ADDRESS OF ORIGINAL SAVE
         LA    R15,SORTRCD         LOAD ADDRESS OF RECORD AREA
         ST    R15,24(R13)         STORE ADDRESS OF RECORD IN SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,12              SET RETURN CODE TO 12
         BR    R14                 RETURN RECORD TO SORT
***********************************************************************
*        TERMINATE THE INPUT E15 EXIT                                 *
***********************************************************************
E15EOF1  L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,8               SET RETURN CODE TO 8
         BR    R14                 RETURN TO SORT FOR LAST TIME
         DROP  R11,R12
         POP   USING
         CNOP  0,4
         PUSH  USING
***********************************************************************
*                                                                     *
*        E35 - OUTPUT EXIT FOR SORT                                   *
*                                                                     *
*        THIS EXIT WILL RECEIVE A RECORD FOR EACH VOLUME OF           *
*        EACH CATALOG ENTRY IN VOLSER AND DSNAME SEQUENCE.            *
*        THIS EXIT WILL FORMAT A REPORT FROM THE RECORDS.             *
*                                                                     *
***********************************************************************
E35      STM   R14,R12,12(R13)     SAVE REGISTERS
         USING E35,R11,R12         SET ADDRESSABILITY TO EXIT
         LR    R11,R15             SET FIRST BASE REGISTER
         LA    R12,4095(R11)       SET SECOND
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,E35SAVE         LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         L     R5,0(R1)            SAVE INPUT RECORD ADDRESS
         LTR   R5,R5               TEST INPUT RECORD ADDRESS
         BZ    E35EOF              ZERO, END OF FILE
         MVC   SORTRCD,0(R5)       MOVE INPUT RECORD TO RECORD AREA
         CLC   SORTVOL,=C'MIGRAT'  SEE IF DFHSM VOLUME
         BE    E35VOL1             YES, DON'T CARE ABOUT DEVICE TYPE
         CLC   SORTDEVT,=CL8'********' SEE IF WANT THIS DEVICE TYPE
         BE    E35RET              NO, DROP THIS RECORD
E35VOL1  CLC   SORTDSN(16),=16C'0' SEE IF SPECIAL CATALOG DSN
         BE    E35RET              YES, DROP THIS RECORD
         SLR   R15,R15             CLEAR REG FOR IC
         ICM   R15,B'0001',SEARCHL LOAD LENGTH OF VOLSER
         BM    E35VOL2             HIGH BIT '1', BYPASS VOLSER CHECK
         EX    R15,CLCVOL          SEE IF THIS VOLSER IS A MATCH
         BNE   E35RET              NO, DROP THIS RECORD
E35VOL2  CLC   PREVVOL,SORTVOL     SEE IF CHANGE OF VOLUME
         BNE   E35HD1              YES, FORCE PAGE EJECT
         CP    LINECT,=P'59'       SEE IF PAGE IS FULL
         BNH   E35DET              NO, BRANCH
E35HD1   AP    PAGECT,=P'1'        ADD 1 TO PAGE COUNT
         MVC   OPAGCT,=X'402020202120' SET EDIT MASK IN HEAD 1
         ED    OPAGCT,PAGECT       EDIT PAGE COUNT TO HEAD 1
         MVC   PREVVOL,SORTVOL     SAVE CURRENT VOLSER
         MVC   OVOLSER,PREVVOL     SET VOLSER IN HEADING
         PUT   SYSPRINT,HEAD1      PRINT HEADING LINE 1
E35HD2   PUT   SYSPRINT,HEAD2      PRINT HEADING LINE 2
         ZAP   LINECT,=P'4'        SET LINE COUNT TO 4
         MVI   DETAIL,C'0'         SET NEXT DETAIL TO DOUBLE SPACE
E35DET   MVC   OMVI,SORTMULT       SET MULTIVOLUME INDICATOR
         MVC   ODSN,SORTDSN        SET DSNAME
         MVC   OTYPE,=CL10'CLUSTER'  ASSUME CLUSTER
         CLI   SORTETYP,CLUSTER    SEE IF CLUSTER
         BE    E35DET1             YES, BRANCH
         MVC   OTYPE,=CL10'NONVSAM'  ASSUME NONVSAM
         CLI   SORTETYP,NONVSAM    SEE IF NONVSAM
         BE    E35DET1             YES, BRANCH
         MVC   OTYPE,=CL10'AIX'    ASSUME AIX
         CLI   SORTETYP,AIX        SEE IF AIX
         BE    E35DET1             YES, BRANCH
         MVC   OTYPE,=CL10'USERCAT'  ASSUME USERCATALOG
         CLI   SORTETYP,UCAT       SEE IF USERCATALOG
         BE    E35DET1             YES, BRANCH
         MVC   OTYPE,=CL10'UNKNOWN' UNKNOWN TYPE
E35DET1  PUT   SYSPRINT,DETAIL     PRINT DETAIL LINE
         AP    LINECT,=P'1'        ADD 1 TO LINE COUNT
         MVI   DETAIL,C' '         SET NEXT DETAIL TO SINGLE SPACE
         OI    PROCSW,SELECTED     TURN ON SELECTED INDICATOR
E35DR    TM    PROCSW,DATAFILE     SEE IF USING OUTPUT DATA FILE
         BNO   E35RET              NO, BRANCH
         MVC   DRVOL,OVOLSER       SAVE VOLSER
         MVC   DRMVI,OMVI          SAVE MULTI-VOLUME INDICATOR
         MVC   DRDSN,ODSN          SAVE DSNAME
         MVC   DRTYPE,OTYPE        SAVE TYPE
         PUT   SYSUT2,DATAREC      WRITE OUTPUT DATA RECORD
E35RET   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,4               SET RETURN CODE TO 4
         BR    R14                 RETURN TO SORT FOR ANOTHER RECORD
E35EOF   TM    PROCSW,SELECTED     SEE IF ANY SELECTED OUTPUT
         BO    E35EOF1             YES, BRANCH
         MVC   WVOLSER,SEARCH      SET SEARCH VOLSER IN MESSAGE
         PUT   SYSPRINT,WARN1      WRITE WARNING MESSAGE
E35EOF1  L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,8               SET RETURN CODE TO 8
         BR    R14                 RETURN TO SORT FOR LAST TIME
CLCVOL   CLC   SEARCH(0),SORTVOL   **** EXEC ONLY ****
         DROP  R11,R12
         POP   USING
         EJECT
         PUSH  USING
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL SEARCH THE TIOT FOR THE DDNAME SUPPLIED    *
*        IN THE EIGHT (8) BYTE FIELD NAMED DDNAME.                    *
*                                                                     *
*        1)  REGISTER 15 ON ENTRY IS THE ROUTINE ENTRY POINT          *
*        2)  REGISTER 14 ON ENTRY IS THE RETURN ADDRESS               *
*                                                                     *
*        THE SUCCESS OF THE DDNAME SEARCH WILL BE INDICATED BY THE    *
*        RETURN CODE SET IN REGISTER 15.                              *
*                                                                     *
*        REG 15 = 0   - DDNAME FOUND                                  *
*        REG 15 = 4   - DDNAME NOT FOUND                              *
*                                                                     *
*        RETURN FROM THIS ROUTINE WILL BE MADE TO REGISTER 14         *
*                                                                     *
***********************************************************************
FINDDN   STM   R14,R12,12(R13)     SAVE REGISTERS
         USING FINDDN,R11,R12      SET ADDRESSABILITY TO ROUTINE
         LR    R11,R15             SET FIRST BASE REGISTER
         LA    R12,4095(R11)       SET SECOND
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,SAVESUB         LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         SLR   R15,R15             SET RETURN CODE TO ZERO
         L     R1,16               GET CVT ADDR
         L     R1,0(,R1)           GET TCB PTRS
         L     R1,4(,R1)           GET CURRENT TCB
         L     R1,12(,R1)          GET TIOT ADDR
         LA    R1,24(,R1)          POINT TO DD ENTRIES
         SLR   R0,R0               ZERO REG FOR ICM
FINDDN1  ICM   R0,1,0(R1)          LOAD LENGTH OF DD ENTRY
         BZ    NODDN               ZERO, END OF TIOT ENTRIES
         CLC   DDNAME,4(R1)        SEE IF DDNAME MATCH
         BE    YESDDN              YES, BRANCH
FINDDN2  BXH   R1,R0,FINDDN1       LOOP FOR NEXT ENTRY
NODDN    LA    R15,4               SET RETURN CODE TO 4
YESDDN   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         L     R14,12(R13)         RESTORE
         LM    R0,R12,20(R13)          ORIGINAL REGS
         BR    R14                 RETURN TO SORT FOR LAST TIME
         DROP  R11,R12
         POP   USING
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS THE DCB OPEN EXIT FOR THE OUTPUT             *
*        PRINT FILES.  IT WILL SET THE OUTPUT BLKSIZE TO              *
*        BLKSIZE TO 9044 IF IT HAS NOT BEEN SPECIFIED.                *
*                                                                     *
***********************************************************************
OUTEXIT1 LA    R2,0(R1)            LOAD DCB ADDRESS
         USING IHADCB,R2           SET ADDRESSABILITY TO DCB
         CLC   DCBBLKSI,=X'0000'   SEE IF OUTPUT BLKSIZE SPECIFIED
         BNER  R14                 YES, RETURN TO OPEN
         MVC   DCBBLKSI,=H'9044'   NO,  SET TO 9044
         BR    R14                 RETURN TO OPEN
         DROP  R2                  DROP ADDRESSABILITY TO DCB
         SPACE 3
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS THE DCB OPEN EXIT FOR THE OUTPUT             *
*        SYSUT2 FILE.  IT WILL SET THE OUTPUT BLKSIZE TO              *
*        BLKSIZE TO 9040 IF IT HAS NOT BEEN SPECIFIED.                *
*                                                                     *
***********************************************************************
OUTEXIT2 LA    R2,0(R1)            LOAD DCB ADDRESS
         USING IHADCB,R2           SET ADDRESSABILITY TO DCB
         CLC   DCBBLKSI,=X'0000'   SEE IF OUTPUT BLKSIZE SPECIFIED
         BNER  R14                 YES, RETURN TO OPEN
         MVC   DCBBLKSI,=H'9040'   NO,  SET TO 9044
         BR    R14                 RETURN TO OPEN
         DROP  R2                  DROP ADDRESSABILITY TO DCB
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE DEVICE TYPE TO DEVICE NAME CONVERSION TABLE      *
*                                                                     *
*        THE FORMAT OF THE TABLE IS AS FOLLOWS:                       *
*                                                                     *
*        1)  8 BYTE DEVICE TYPE                                       *
*        2)  8 BYTE DEVICE NAME                                       *
*        3)  1 BYTE Y/N INDICATING WHETHER TO PROCESS THESE           *
*            ENTRY TYPES                                              *
*                                                                     *
***********************************************************************
DEVNAMET DC    CL8'00000000',CL8'0000    ',C'Y'
         DC    CL8'30502006',CL8'2305-1  ',C'Y'
         DC    CL8'30502007',CL8'2305-2  ',C'Y'
         DC    CL8'30C02008',CL8'2314    ',C'Y'
         DC    CL8'30008001',CL8'2400    ',C'N'
         DC    CL8'34008001',CL8'2400-3  ',C'N'
         DC    CL8'34208001',CL8'2400-4  ',C'N'
         DC    CL8'30502009',CL8'3330    ',C'Y'
         DC    CL8'3050200D',CL8'3330-1  ',C'Y'
         DC    CL8'3040200A',CL8'3340    ',C'Y'
         DC    CL8'3050200B',CL8'3350    ',C'Y'
         DC    CL8'3010200E',CL8'3380    ',C'Y'
         DC    CL8'3030200E',CL8'3380    ',C'Y'
         DC    CL8'3010200F',CL8'3390    ',C'Y'
         DC    CL8'3030200F',CL8'3390    ',C'Y'
         DC    CL8'34008003',CL8'3400-3  ',C'N'
         DC    CL8'34208003',CL8'3400-4  ',C'N'
         DC    CL8'32008003',CL8'3400-5  ',C'N'
         DC    CL8'32108003',CL8'3400-6  ',C'N'
         DC    CL8'78008080',CL8'3480    ',C'N'
         DC    CL8'78048080',CL8'3480    ',C'N'
         DC    CL8'78008081',CL8'3490    ',C'N'
         DC    CL8'78048081',CL8'3490    ',C'N'
         DC    17X'FF'
         EJECT
         LTORG
         SPACE 3
SAVEAREA DS    18F                 PROGRAM SAVE AREA
E15SAVE  DS    18F                 SORT EXIT E15 SAVE AREA
E35SAVE  DS    18F                 SORT EXIT E35 SAVE AREA
SAVESUB  DS    18F                 SUBROUTINE SAVE AREA
VOLTBL   DS    F                   ADDRESS OF 256 ENTRY VOLUME TABLE
PREVVOL  DC    CL6'$$$$$$'         PREVIOUS VOLSER PROCESSED
NEXTVOL  DC    F'0'                POINTER TO NEXT VOLUME TABLE ENTRY
DDNAME   DS    CL8                 DDNAME FIELD FOR TIOT SEARCH ROUTINE
PROCSW   DC    X'00'               PROCESS SWITCHES
EOFREACH EQU   X'80'               EOF IN INPUT HAS BEEN REACHED
MIDDLE   EQU   X'40'               IN THE MIDDLE OF MULTIPLE VOLUMES
SELECTED EQU   X'20'               A DATASET WAS SELECTED FOR PRINT
DATAFILE EQU   X'10'               USE THE OPTIONAL OUTPUT DATA FILE
CTYPE    DC    X'00'               CATALOG ENTRY TYPE
NTYPE    DC    X'00'               NEW ENTRY TYPE BEING PROCESSED
CLUSTER  EQU   X'80'                 CLUSTER
NONVSAM  EQU   X'40'                 NONVSAM
AIX      EQU   X'20'                 ALTERNATE INDEX
UCAT     EQU   X'20'                 USER CATALOG
CDSN     DC    CL44' '             CATALOG ENTRY DSNAME
NDSN     DC    CL44' '             NEW CATALOG ENTRY DSNAME
SEARCHL  DC    X'FF'               LENGTH OF SEARCH VOLSER
SEARCH   DC    CL6' '              SEARCH VOLSER
NVOLSER  DC    CL6' '              NEW CATALOG ENTRY VOLSER
NDEVT    DC    CL8' '              NEW CATALOG DEVICE TYPE
LINECT   DC    PL2'99'             LINE COUNTER
PAGECT   DC    PL3'0'              PAGE COUNTER
BLANKS   DC    CL256' '            CHARACTER CONSTANT '        '
DATAREC  DS    0CL80               OUTPUT RECORD FOR OUTPUT DATA FILE
DRVOL    DC    CL6' '              DATA RECORD VOLSER
DRDSN    DC    CL44' '             DATA RECORD DSNAME
DRMVI    DC    CL1' '              DATA RECORD MULTI-VOL INDICATOR
DRTYPE   DC    CL10' '             DATA RECORD DATASET TYPE
DRFILLER DC    CL19' '             DATA RECORD FILLER
SORTRCD  DS    0CL58               RECORD FOR SORT
SORTVOL  DC    CL6' '              VOLSER
SORTDSN  DC    CL44' '             DSNAME
SORTDEVT DC    CL6' '              DEVICE NAME
SORTETYP DC   XL1'0'              ENTRY TYPE
SORTMULT DC    CL1' '              MULTIVOLUME INDICATOR
         CNOP  0,4
SORTPARM DC    X'80',AL3(SORTA)
         DC    H'0'
SORTA    DC    H'28'               LENGTH OF PARAMETER LIST
         DC    A(SORTM)            ADDRESS OF START OF SORT STMT
         DC    A(SORTENDM)         ADDRESS OF END OF SORT STMT
         DC    A(RECM)             ADDRESS OF START OF RECORD STMT
         DC    A(RECENDM)          ADDRESS OF END OF RECORD STMT
         DC    A(E15)              ADDRESS OF E15 EXIT
         DC    A(E35)              ADDRESS OF E35 EXIT
         DC    F'500000'           MAIN STORAGE FOR SORT
SORTM    DC    C' SORT FIELDS=(1,50,CH,A)'
SORTENDM DC    C' '                END OF SORT FIELDS STMT
RECM     DC    C' RECORD TYPE=F,LENGTH=58'
RECENDM  DC    C' '                END OF RECORD STMT
         SPACE 3
WARN1    DS    0CL133              WARNING LINE1
         DC    C'1'                ANS CONTROL CHARACTER
         DC    CL5' '
         DC    CL31'NO SELECTED ENTRIES FOR VOLUME '
WVOLSER  DC    CL6' '
         DC    90C' '
         SPACE 3
HEAD1    DS    0CL133              HEADING LINE1
         DC    C'1'                ANS CONTROL CHARACTER
         DC    40C' '
         DC    CL29'CATALOGED ENTRIES FOR VOLUME '
OVOLSER  DC    CL6' '
         DC    35C' '
         DC    CL4'PAGE'
OPAGCT   DC    CL6' '              PAGE COUNT
         DC    12C' '
         SPACE 3
HEAD2    DS    0CL133              HEADING LINE2
         DC    C'0'                ANS CONTROL CHARACTER
         DC    CL47'        DSN'
         DC    CL5'TYPE'
         DC    CL80' '
         SPACE 3
DETAIL   DS    0CL133              DETAIL PRINT RECORD
         DC    C' '                ANS CONTROL CHARACTER
OMVI     DC    CL1' '              MULTI-VOLUME INDICATOR
         DC    C' '                ANS CONTROL CHARACTER
ODSN     DC    CL44' '             DSNAME
         DC    C' '
OTYPE    DS    CL10                ENTRY TYPE
         DC    CL75' '
         EJECT
         PRINT NOGEN
LISTCAT  DCB   DDNAME=LISTCAT,MACRF=GM,DSORG=PS,EODAD=E15RD18
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,                      X
               LRECL=133,RECFM=FBA,EXLST=EXLIST1
SYSUT2   DCB   DDNAME=SYSUT2,MACRF=PM,DSORG=PS,                        X
               LRECL=80,RECFM=FB,EXLST=EXLIST2
         PRINT GEN
         CNOP  0,4
EXLIST1  DC    X'85',AL3(OUTEXIT1) EXIT LIST FOR OPEN
         CNOP  0,4
EXLIST2  DC    X'85',AL3(OUTEXIT2) EXIT LIST FOR OPEN
         SPACE 3
BUFFER   DS    CL256               INPUT RECORD BUFFER
         EJECT
RECORD   DSECT
         ORG   RECORD+1
ETYPE    DS    CL8
         ORG   RECORD+17
ENAME    DS    CL44
         ORG   RECORD+8
VENTRY   DS    CL6
         ORG   RECORD+26
EVOLSER  DS    CL6
         ORG   RECORD+52
EDEVT    DS    CL8
         EJECT
         DCBD  DSORG=PS,DEVD=DA
         END   FLVOLLST
