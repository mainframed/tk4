         TITLE 'REPORT SYNCSORT ACTIVITY SMF RECORDS - &SYSDATE'
***********************************************************************
*                                                                     *
*        THIS PROGRAM WAS WRITTEN TO FORMAT A REPORT OF SMF           *
*        TYPE 208 RECORDS.  THE FOLLOWING INFORMATION IS WRITTEN      *
*        IN THE REPORT:                                               *
*                                                                     *
*        1)  JOB NAME                                                 *
*        2)  JOB TYPE                                                 *
*        3)  STEP NAME                                                *
*        4)  SMF SYSTEM-ID                                            *
*        5)  DATE                                                     *
*        6)  TIME                                                     *
*        7)  DURATION                                                 *
*        8)  CPU TIME USED                                            *
*        9)  INCORE INDICATOR                                         *
*        10) SORTWORK TRACKS USED                                     *
*        11) RECORDS SORTED                                           *
*        12) BYTES SORTED                                             *
*        13) ALLOCATION FACTOR                                        *
*                                                                     *
*        RECORD SELECTION AND CONTROL IS BY SYSIN CONTROL             *
*        STATEMENTS (IF ANY).  ANY NUMBER OF STATEMENTS CAN           *
*        BE ENTERED WITH THE KEYWORD STARTING IN COLUMN 1             *
*        OF EACH STATEMENT.                                           *
*                                                                     *
*                                                                     *
*        ALLOWABLE INPUT RECORD KEYWORDS ARE AS FOLLOWS:              *
*                                                                     *
*        1)  JOBNM=JJJJJJJJ(NN)                                       *
*            WHERE JJJJJJJJ IS A 1 TO 8 CHARACTER JOBNAME             *
*                  N IS THE STARTING POSITION WITHIN THE FULL JOBNAME *
*                                                                     *
*        2)  DATE=YY.DDD:YY.DDD                                       *
*            WHERE YY.DDD IS THE JULIAN START DATE                    *
*                  YY.DDD:YY.DDD IS THE JULIAN START:END DATE         *
*                                                                     *
*        3)  TIME=HH.MM:HH.MM                                         *
*            WHERE HH.MM IS THE START TIME                            *
*                  HH.MM:HH.MM IS THE START:END TIME                  *
*                                                                     *
*        4)  SYSID/SYSTEM=CCCC                                        *
*            WHERE CCCC IS THE 4 CHARACTER SMF SYSTEM ID              *
*                                                                     *
*        5)  STOPAFTER/STOPCOUNT/STOPCNT=NNNNN                        *
*            WHERE NNNNNN IS TH 1 TO 9 DIGIT OUTPUT LINE              *
*            LIMIT TO LIMIT THE SIZE OF THE REPORT                    *
*                                                                     *
*        6)  TYPE/JOBTYPE/JTYPE=P/T                                   *
*            WHERE TYPE=P FOR PRODUCTION JOBS OR TYPE=T FOR           *
*            TEST JOBS.  TSO SESSIONS ARE CONSIDERED TEST.            *
*            STARTED TASKS ARE CONSIDERED PRODUCTION.                 *
*                                                                     *
*        7)  NOPROD                                                   *
*            INDICATES THAT NO PRODUCTION JOBS OR STARTED TASKS       *
*            WILL BE SELECTED.  THIS IS IDENTICAL TO TYPE=T.          *
*                                                                     *
*        8)  NOTEST                                                   *
*            INDICATES THAT NO TEST JOBS OR TSO SESSIONS WILL         *
*            BE SELECTED.  THIS IS IDENTICAL TO TYPE=P.               *
*                                                                     *
*        9)  SORT=OPT1,OPT2,OPT3,OPT4,OPT5                            *
*            WHERE SORTING OF THE INPUT DATA IS REQUESTED IN THE      *
*            ORDER IN WHICH THE FOLLOWING OPTIONS ARE LISTED:         *
*                                                                     *
*            A)  JOBNM                                                *
*            B)  DATE                                                 *
*            C)  TIME                                                 *
*            D)  SYSID/SYSTEM                                         *
*            E)  SIZE                                                 *
*            F)  TRACKS                                               *
*            G)  RECORDS                                              *
*            H)  TYPE                                                 *
*                                                                     *
*            NOTE THAT EACH KEYWORD CAN BE SUFFIXED BY "(A)" OR       *
*            "(D)" FOR ASCENDING OR DESCENDING SORT SEQUENCE.         *
*            THE DEFAULT IS "(A)" FOR ASCENDING                       *
*                                                                     *
*            IF AN OPTION IS NOT SPECIFIED, NO SORTING ON THAT        *
*            FIELD WILL BE MADE.                                      *
*                                                                     *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*                   (704) 633-8250  X2530                             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                           REGISTER EQUATES                          *
*                                                                     *
***********************************************************************
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03                  POINTER TO SMFIN  DCB
R4       EQU   04
R5       EQU   05                  SMF TYPE 208 RECORD
R6       EQU   06                  SMF TYPE 208 STATISTICS SECTION
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11                  BASE REGISTER 1
R12      EQU   12                  BASE REGISTER 2
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*        START OF PROGRAM                                             *
*                                                                     *
***********************************************************************
FLSMFSRT CSECT
         SAVE  (14,12)
         USING FLSMFSRT,R10,R11,R12 SET UP CSECT ADDRESSABILITY
         LR    R10,R15             LOAD BASE REGISTER
         LA    R11,4095(R10)       LOAD SECOND
         LA    R11,1(R11)               BASE REGISTER
         LA    R12,4095(R11)       LOAD THIRD
         LA    R12,1(R12)               BASE REGISTER
         LA    R2,SAVEAREA         LOAD ADDRESS OF NEW SAVE
         ST    R13,4(R2)           SAVE CALLER'S SAVE AREA ADDR
         ST    R2,8(R13)           SAVE MY SAVE AREA ADDRESS
         LR    R13,R2              LOAD REGISTER 13 WITH SAVE AREA
         LA    R8,NEWREC           POINT TO NEW RECORD AREA
         USING NEWDSECT,R8         SET ADDRESSABILITY TO NEW RECORD
         EJECT
***********************************************************************
*                                                                     *
*        VALIDATE THE EXISTENCE OF THE OUTPUT PRINT FILE              *
*        AND OPEN IT                                                  *
*                                                                     *
***********************************************************************
CHECKPR  MVC   DDNAME,=CL8'SYSPRINT' SET DDNAME TO 'SYSPRINT'
         LA    R15,FINDDN          LOAD ADDRESS OF TIOT SEARCH ROUTINE
         BALR  R14,R15             GO SEARCH TIOT FOR DDNAME
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   ERROR28             NOT ZERO, ERROR
         OPEN  (SYSPRINT,(OUTPUT)) OPEN PRINT FILE
         EJECT
***********************************************************************
*                                                                     *
*        VALIDATE THE EXISTENCE OF THE INPUT CONTROL FILE             *
*        AND OPEN IT                                                  *
*                                                                     *
***********************************************************************
PROCSYS  MVC   DDNAME,=CL8'SYSIN'  SET DDNAME TO 'SYSIN'
         LA    R15,FINDDN          LOAD ADDRESS OF TIOT SEARCH ROUTINE
         BALR  R14,R15             GO SEARCH TIOT FOR DDNAME
         LTR   R15,R15             CHECK RETURN CODE
         BZ    OPENSYS             ZERO, GO OPEN INPUT
         WTO   'SMF3000 - OPTIONAL SYSIN DD STATEMENT NOT SPECIFIED, NOX
                OPTIONS SPECIFIED',                                    X
               ROUTCDE=11
         B     NOPARM              ZERO, NO PARM, BRANCH
OPENSYS  OPEN  (SYSIN)             OPEN INPUT SYSIN DATA SET
         PUT   SYSPRINT,HEAD       WRITE THE OPTION HEADINGS
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PROCESS THE INPUT SYSIN CONTROL            *
*        STATEMENTS (IF ANY).                                         *
*                                                                     *
***********************************************************************
READSYS  GET   SYSIN,CARDAREA      READ INPUT OPTIONS
         MVC   CARDAREA+72(8),BLANKS BLANK POSSIBLE CARD SEQ NUMBER
         PUT   SYSPRINT,CARDREC    WRITE THE OPTION CARD
         MVI   CARDREC,C' '        SET NEXT LINE TO SINGLE SPACE
         LA    R7,CARDAREA         LOAD INPUT RECORD ADDRESS
***********************************************************************
*                                                                     *
*        SEARCH THE OPTION TABLE FOR THE SPECIFIED OPTION             *
*                                                                     *
***********************************************************************
KEYPARM  LA    R15,OPTNTBL         LOAD ADDRESS OF OPTION TABLE
KEYPARM1 CLI   0(R15),X'FF'        END OF TABLE
         BE    ERROR01             YES, INVALID KEYWORD
         LH    R1,10(R15)          LOAD OPTION NAME LENGTH
         EX    R1,COMPOPT          SEE IF OPTION NAME MATCHES
         BE    KEYPARM2            NO, BRANCH
         LA    R15,16(,R15)        INCREMENT TO NEXT TABLE ENTRY
         B     KEYPARM1            LOOP
***********************************************************************
*                                                                     *
*        GO TO THE PROCESSING ROUTINE ADDRESS SPECIFIED IN THE        *
*        OPTION TABLE ENTRY                                           *
*                                                                     *
***********************************************************************
KEYPARM2 L     R14,12(,R15)        LOAD PROCESSING ROUTINE ADDRESS
         BR    R14                 GO TO APPROPRIATE ROUTINE
COMPOPT  CLC   0(0,R15),0(R7)      **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        JOBNAME OPTION                                               *
*                                                                     *
***********************************************************************
PARMJOBN OI    SWITCH,SELJOBNM     TURN ON SELECT JOBNAME INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         LR    R1,R7               SAVE JOBNAME ADDRESS
         SLR   R15,R15             CLEAR COUNTER REGISTER
***********************************************************************
*        FIND LENGTH OF JOBNAME AND WHETHER OR NOT AN OFFSET          *
*        HAS BEEN SPECIFIED.                                          *
***********************************************************************
JOBLOOP  CLI   0(R1),C' '          END OF JOBNM?
         BE    JOBCOMP             YES, BRANCH
         CLI   0(R1),C'('          START OF OFFSET FIELD?
         BE    JOBOFF              YES, BRANCH
         LA    R15,1(,R15)         ADD 1 TO LENGTH COUNTER
         LA    R1,1(,R1)           ADD 1 TO JOBNAME POINTER
         B     JOBLOOP             LOOP
***********************************************************************
*        VALIDATE LENGTH OF JOB NAME WHEN OFFSET IS                   *
*        SPECIFIED AND SAVE SPECIFIED JOBNAME.                        *
***********************************************************************
JOBOFF   LTR   R15,R15             TEST LENGTH OF JOBNAME
         BZ    ERROR02             ZERO, ERROR
         CH    R15,=H'8'           SEE IF LENGTH EXCEEDS 8
         BH    ERROR03             YES, ERROR
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVJOBNM         MOVE JOBNAME TO SAVE AREA
         STC   R15,VALJOBNM        SAVE JOBNAME LENGTH
***********************************************************************
*        DETERMINE LENGTH OF OFFSET SPECIFICATION.                    *
***********************************************************************
         LA    R1,1(R1)            POINT TO INDEX VALUE
         SLR   R15,R15             CLEAR COUNTER REG
         CLI   0(R1),C')'          END OF INDEX
         BE    JOBINDX             YES, BRANCH
         LA    R15,1(,R15)         ADD 1 TO LENGTH COUNTER
         CLI   1(R1),C')'          END OF INDEX
         BE    JOBINDX             YES, BRANCH
         LA    R15,1(,R15)         ADD 1 TO LENGTH COUNTER
         CLI   2(R1),C')'          END OF INDEX
         BE    JOBINDX             YES, BRANCH
         B     ERROR04             INDEX LENGTH EXCEEDS 2 CHARACTERS
***********************************************************************
*        VALIDATE OFFSET VALUE.                                       *
***********************************************************************
JOBINDX  LTR   R15,R15             SEE IF ZERO LENGTH
         BZ    JOBEND              YES, NO INDEX
         LR    R14,R15             SAVE INDEX LENGTH
         LR    R2,R1               SAVE INDEX POINTER
JOBINDX1 CLI   0(R2),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR05             YES, ERROR
         CLI   0(R2),C'9'          TEST FOR GT NINE
         BH    ERROR05             YES, ERROR
         LA    R2,1(,R2)           INDEX TO NEXT CHAR
         BCT   R14,JOBINDX1        LOOP
***********************************************************************
*        SAVE THE OFFSET VALUE.                                       *
***********************************************************************
         BCTR  R15,0               MAKE INDEX LENGTH RELATIVE TO ZERO
         EX    R15,PACKINDX        PACK THE INDEX VALUE
         CVB   R15,DOUBLE          CONVERT INDEX VALUE TO BINARY
         BCTR  R15,0               MAKE INDEX VALUE RELATIVE TO ZERO
         STC   R15,VALJOBNM+1      SAVE INDEX VALUE
         B     JOBEND              BRANCH
***********************************************************************
*        VALIDATE LENGTH OF JOB NAME WHEN OFFSET IS NOT               *
*        SPECIFIED AND SAVE JOBNAME WITH ZERO OFFSET.                 *
***********************************************************************
JOBCOMP  LTR   R15,R15             TEST LENGTH OF JOBNAME
         BZ    ERROR02             ZERO, ERROR
         CH    R15,=H'8'           SEE IF LENGTH EXCEEDS 8
         BH    ERROR02             YES, ERROR
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVJOBNM         MOVE JOBNAME TO SAVE AREA
         STC   R15,VALJOBNM        SAVE JOBNAME LENGTH
         MVI   VALJOBNM+1,X'00'    SET INDEX TO ZERO
JOBEND   B     READSYS             GO GET NEXT OPTION CARD
MVJOBNM  MVC   VALJOBNM+2(0),0(R7) *****  EXEC ONLY *****
         EJECT
***********************************************************************
*                                                                     *
*        DATE OPTION                                                  *
*                                                                     *
***********************************************************************
PARMDATE OI    SWITCH,SELDATE      TURN ON SELECT DATE INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
***********************************************************************
*        VALIDATE THE SYNTAX OF THE BEGINNING DATE                    *
***********************************************************************
         CLI   2(R7),C'.'          CHECK FOR YEAR AND DAY SEPARATOR
         BNE   ERROR06             NOT THERE, ERROR
         LA    R14,2               SET LENGTH TO 2
         LR    R1,R7               SAVE POINTER TO BEGIN YEAR
DATE1    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR07             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR07             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,DATE1           LOOP
         LA    R14,3               SET LENGTH TO 3
         LA    R1,3(R7)            SAVE POINTER TO BEGIN DAY
DATE2    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR08             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR08             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,DATE2           LOOP
         MVC   VALDATE(6),0(R7)    SAVE BEGIN DATE
***********************************************************************
*        SEE IF ENDING DATE SPECIFIED                                 *
***********************************************************************
         CLI   6(R7),C' '          ANY ENDING DATE?
         BE    DATEEND             NO, END OF DATE
         CLI   6(R7),C':'          PROPER SEPARATOR FOR DATES
         BNE   ERROR09             NO, ERROR
ENDATE   LA    R7,7(,R7)           INCREMENT PAST BEGIN DATE
***********************************************************************
*        VALIDATE THE SYNTAX OF THE ENDING DATE                       *
***********************************************************************
         CLI   2(R7),C'.'          CHECK FOR YEAR AND DAY SEPARATOR
         BNE   ERROR10             NOT THERE, ERROR
         LA    R14,2               SET LENGTH TO 2
         LR    R1,R7               SAVE POINTER TO END YEAR
DATE3    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR11             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR11             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,DATE3           LOOP
         LA    R14,3               SET LENGTH TO 3
         LA    R1,3(R7)            SAVE POINTER TO END DAY
DATE4    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR12             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR12             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,DATE4           LOOP
         MVC   VALDATE+6(6),0(R7)  SAVE END DATE
***********************************************************************
*        CONVERT SPECIFIED DATES TO PACKED FORMAT                     *
***********************************************************************
DATEEND  MVC   WORK(2),VALDATE     MOVE YEAR TO WORK
         MVC   WORK+2(3),VALDATE+3 MOVE DAY TO WORK
         PACK  DATES,WORK(5)       PACK JULIAN DATE
         MVC   WORK(2),VALDATE+6   MOVE YEAR TO WORK
         MVC   WORK+2(3),VALDATE+9 MOVE DAY TO WORK
         PACK  DATEE,WORK(5)       PACK JULIAN DATE
         B     READSYS             GO GET NEXT OPTION CARD
         EJECT
***********************************************************************
*                                                                     *
*        TIME OPTION                                                  *
*                                                                     *
***********************************************************************
PARMTIME OI    SWITCH,SELTIME      TURN ON SELECT TIME INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
***********************************************************************
*        VALIDATE THE SYNTAX OF THE BEGINNING TIME                    *
***********************************************************************
         CLI   2(R7),C'.'          CHECK FOR HOUR AND MIN SEPARATOR
         BNE   ERROR13             NOT THERE, ERROR
         LA    R14,2               SET LENGTH TO 2
         LR    R1,R7               SAVE POINTER TO BEGIN HOUR
TIME1    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR14             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR14             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,TIME1           LOOP
         LA    R14,2               SET LENGTH TO 2
         LA    R1,3(R7)            SAVE POINTER TO BEGIN MIN
TIME2    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR15             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR15             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,TIME2           LOOP
         MVC   VALTIME(5),0(R7)    SAVE BEGIN TIME
***********************************************************************
*        SEE IF ENDING TIME SPECIFIED                                 *
***********************************************************************
         CLI   5(R7),C' '          ANY ENDING TIME?
         BE    TIMEEND             NO, END OF TIME
         CLI   5(R7),C':'          PROPER SEPARATOR FOR TIME
         BNE   ERROR16             NO, ERROR
ENDTIME  LA    R7,6(,R7)           INCREMENT PAST BEGIN TIME
***********************************************************************
*        VALIDATE THE SYNTAX OF THE BEGINNING TIME                    *
***********************************************************************
         CLI   2(R7),C'.'          CHECK FOR HOUR AND MIN SEPARATOR
         BNE   ERROR17             NOT THERE, ERROR
         LA    R14,2               SET LENGTH TO 2
         LR    R1,R7               SAVE POINTER TO END HOUR
TIME3    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR18             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR18             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,TIME3           LOOP
         LA    R14,2               SET LENGTH TO 2
         LA    R1,3(R7)            SAVE POINTER TO END MIN
TIME4    CLI   0(R1),C'0'          TEST FOR LESS THAN ZERO
         BL    ERROR19             YES, ERROR
         CLI   0(R1),C'9'          TEST FOR GT NINE
         BH    ERROR19             YES, ERROR
         LA    R1,1(,R1)           INDEX TO NEXT CHAR
         BCT   R14,TIME4           LOOP
         MVC   VALTIME+5(5),0(R7)  SAVE END TIME
***********************************************************************
*        CONVERT SPECIFIED TIMES TO CORRECT PACKED FORMAT             *
***********************************************************************
TIMEEND  MVC   WORK(2),VALTIME     MOVE BEGIN HOUR TO WORK
         MVC   WORK+2(2),VALTIME+3 MOVE BEGIN MINUTE TO WORK
         PACK  DOUBLE,WORK(4)      CONVERT TO PACKED
         ICM   R1,B'1111',DOUBLE+4 LOAD PACKED TIME  000HHMM+
         SRL   R1,4                SHIFT OFF SIGN    0000HHMM
         SLL   R1,8                SHIFT TO FORM     HHMM0000
         ST    R1,TIMES            SAVE START TIME
         MVC   WORK(2),VALTIME+5   MOVE END HOUR TO WORK
         MVC   WORK+2(2),VALTIME+8 MOVE END MINUTE TO WORK
         PACK  DOUBLE,WORK(4)      CONVERT TO PACKED
         ICM   R1,B'1111',DOUBLE+4 LOAD PACKED TIME  000HHMM+
         SRL   R1,4                SHIFT OFF SIGN    0000HHMM
         SLL   R1,8                SHIFT TO FORM     HHMM0000
         ST    R1,TIMEE            SAVE END TIME
         B     READSYS             GO GET NEXT OPTION CARD
         EJECT
***********************************************************************
*                                                                     *
*        SYSID OPTION                                                 *
*                                                                     *
***********************************************************************
PARMSID  OI    SWITCH,SELSYSID     TURN ON SELECT SYSID INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         CLI   0(R7),C' '          MAKE SURE SYSID NOT BLANK
         BE    ERROR20             NOT THERE, ERROR
         MVC   VALSYSID(4),0(R7)   SAVE SYSID
CPUEND   B     READSYS             GO GET NEXT OPTION CARD
         EJECT
***********************************************************************
*                                                                     *
*        STOPAFTER OPTION                                             *
*                                                                     *
***********************************************************************
PARMSTOP OI    SWITCH,SELSTOP      TURN ON STOPAFTER INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         LA    R14,9               SET MAX LENGTH TO 9
         LR    R15,R7              SAVE POINTER TO STOP COUNT
         SLR   R1,R1               SET LENGTH TO ZERO
***********************************************************************
*        MAKE SURE STOPAFTER VALUE IS NUMERIC                         *
***********************************************************************
STOP1    CLI   0(R15),C' '         END OF STOP COUNT
         BE    STOP2               YES, BRANCH
         CLI   0(R15),C'0'         TEST FOR LESS THAN ZERO
         BL    ERROR26             YES, ERROR
         CLI   0(R15),C'9'         TEST FOR GT NINE
         BH    ERROR26             YES, ERROR
         LA    R15,1(,R15)         INDEX TO NEXT CHAR
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         BCT   R14,STOP1           LOOP
         B     ERROR26             TOO LONG, ERROR
***********************************************************************
*        SAVE STOPAFTER VALUE                                         *
***********************************************************************
STOP2    LTR   R1,R1               TEST LENGTH
         BZ    READSYS             ZERO, NULL, IGNORE IT
         BCTR  R1,0                MAKE MACHINE LENGTH
         EX    R1,PACKCNT          PACK STOP COUNT
         CVB   R15,DOUBLE          CONVERT TO BINARY
         ST    R15,STOPCNT         SAVE STOP COUNT
         B     READSYS             GO GET NEXT OPTION CARD
PACKCNT  PACK  DOUBLE,0(0,R7)      **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        TYPE OPTION                                                  *
*                                                                     *
***********************************************************************
PARMTYPE OI    SWITCH,SELTYPE      TURN ON SELECT BY TYPE INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         MVC   JTYPE,0(R7)         SAVE JOB TYPE
         CLI   JTYPE,C'P'          SEE IF TYPE=P
         BE    READSYS             YES, GET OUT
         CLI   JTYPE,C'T'          SEE IF TYPE=T
         BE    READSYS             YES, GET OUT
         B     ERROR27             NO, ERROR
         EJECT
***********************************************************************
*                                                                     *
*        NOTEST OPTION                                                *
*                                                                     *
***********************************************************************
PARMNT   OI    SWITCH,SELTYPE      TURN ON SELECT BY TYPE INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         MVI   JTYPE,C'P'          SET JOB TYPE TO P
         B     READSYS             GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        NOPROD OPTION                                                *
*                                                                     *
***********************************************************************
PARMNP   OI    SWITCH,SELTYPE      TURN ON SELECT BY TYPE INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         MVI   JTYPE,C'T'          SET JOB TYPE TO T
         B     READSYS             GET OUT
         EJECT
***********************************************************************
*                                                                     *
*        SORT OPTION                                                  *
*                                                                     *
***********************************************************************
PARMSORT OI    SWITCH,SELSORT      TURN ON SELECT SORT INDICATOR
         LA    R7,1(R1,R7)         INCREMENT PAST KEYWORD
         CLI   0(R7),C' '          MAKE SURE SORT SUBPARAMETERS PRESENT
         BE    ERROR21             NONE, ERROR
         LA    R14,SRTFLDS         LOAD ADDRESS OF SORT FIELDS CARD
         SLR   R15,R15             CLEAR COUNTER REG
***********************************************************************
*        FIND LENGTH OF SUBPARAM                                      *
***********************************************************************
SORT1    CH    R15,=H'5'           HAVE WE ALREADY PROCESSED 5 PARMS
         BNL   ERROR22             YES, ERROR
         LR    R9,R7               GET START ADDRESS OF PARM
         SLR   R1,R1               SET LENGTH TO ZERO
SORT2    CLI   0(R9),C','          END OF PARM
         BE    SORT3               YES, BRANCH
         CLI   0(R9),C' '          END OF PARM
         BE    SORT3               YES, BRANCH
         CLC   0(3,R9),=C'(D)'     END OF PARM
         BE    SORT3               YES, BRANCH
         CLC   0(3,R9),=C'(A)'     END OF PARM
         BE    SORT3               YES, BRANCH
         LA    R9,1(,R9)           INCREMENT TO NEXT CHAR OF PARM
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         B     SORT2               LOOP
SORT3    LTR   R1,R1               CHECK FOR NULL PARM
         BZ    ERROR25             YES, ERROR
         CH    R1,=H'8'            CHECK MAX LENGTH
         BH    ERROR23             TOO LONG, ERROR
***********************************************************************
*        SCAN SORTTBL FOR MATCHING SUBPARAMETER                       *
***********************************************************************
         LA    R9,SORTTBL          LOAD ADDRESS OF SORT PARM TABLE
         BCTR  R1,0                MAKE MACHINE LENGTH
SORT4    CLI   0(R9),X'FF'         END OF TABLE
         BE    ERROR23             YES, INVALID PARM
         CH    R1,8(R9)            SEE IF CORRECT LENGTH
         BNE   SORT5               NO, BRANCH
         EX    R1,COMSPARM         SEE IF CORRECT SORT PARM
         BE    SORT6               YES, BRANCH
SORT5    LA    R9,16(R9)           INCREMENT TO NEXT TABLE ENTRY
         B     SORT4               LOOP
COMSPARM CLC   0(0,R9),0(R7)       **** EXECUTE ONLY ****
***********************************************************************
*        SAVE SORT FIELDS STATEMENT FOR THIS SUBPARAMETER             *
***********************************************************************
SORT6    L     R4,12(R9)           LOAD ADDRESS OF SORT PARM
         MVC   0(11,R14),0(R4)     SET SORT PARM
***********************************************************************
*        SET ASCENDING/DESCENDING INDICATOR IN SORT FIELDS            *
***********************************************************************
SORTFND  LA    R7,1(R1,R7)         INCREMENT TO NEXT SUBPARAMETER
         CLC   0(3,R7),=CL3'(D)'   SEE IF FOLLOWED BY "(D)"
         BNE   *+12                NO, BRANCH
         MVI   9(R14),C'D'         SET TO DESCENDING
         LA    R7,3(,R7)           INCREMENT PAST "(D)"
         CLC   0(3,R7),=CL3'(A)'   SEE IF FOLLOWED BY "(A)"
         BNE   *+8                 NO, BRANCH
         LA    R7,3(,R7)           INCREMENT PAST "(A)"
***********************************************************************
*        LOOP BACK FOR NEXT SORT SUBPARAMETER                         *
***********************************************************************
         LA    R14,11(,R14)        INCREMENT TO NEXT SORT FIELDS SLOT
         LA    R15,1(,R15)         ADD 1 TO FIELDS COUNTER
         CLI   0(R7),C' '          END OF SUBPARAMETERS?
         BE    SORTEND             YES, BRANCH
         CLI   0(R7),C','          PROPER SUBPARAMETER SEPARATOR?
         BNE   ERROR24             NO, ERROR
         LA    R7,1(,R7)           INCREMENT PAST ','
         B     SORT1               GO GET NEXT SORT SUBPARAMETER
SORTEND  BCTR  R14,0               BACK UP POINTER TO SORT FIELDS CARD
         MVI   0(R14),C')'         PUT CLOSING PARENS ARND SORT FIELDS
         B     READSYS             GO GET NEXT OPTION CARD
PACKINDX PACK  DOUBLE,0(0,R1)         *****  EXEC ONLY *****
ENDPARM  CLOSE (SYSIN)             CLOSE SYSIN FILE
         EJECT
***********************************************************************
*                                                                     *
*        VALIDATE THE EXISTENCE OF THE INPUT SMF DATA FILE            *
*        AND OPEN IT                                                  *
*                                                                     *
***********************************************************************
NOPARM   DS    0H
CHECKIN  MVC   DDNAME,=CL8'SMFIN'  SET DDNAME TO 'SMFIN'
         LA    R15,FINDDN          LOAD ADDRESS OF TIOT SEARCH ROUTINE
         BALR  R14,R15             GO SEARCH TIOT FOR DDNAME
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   ERROR29             NOT ZERO, ERROR
         OPEN  (SMFIN)             OPEN INPUT SMF FILE
         EJECT
***********************************************************************
*                                                                     *
*        CALL SORT IF SORT OPTION ENTERED                             *
*                                                                     *
***********************************************************************
CKOPTION TM    SWITCH,SELSORT      WAS SORTING SELECTED?
         BNO   READIN              NO, BYPASS SORT
         LA    R1,SORTPARM         LOAD ADDRESS OF SORT PARMS
         LINK  EP=SORT             GO TO SORT
         B     ENDJOB              GO END THE JOB
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS DATA IF NOT SORT                                     *
*                                                                     *
***********************************************************************
***********************************************************************
*        READ AN INPUT SMF RECORD                                     *
***********************************************************************
READIN   LA    R15,READRTN         LOAD ADDRESS OF READ SMF ROUTINE
         BALR  R14,R15             GO READ SMF ROUTINE
         TM    SWITCH,ENDFILE      END OF FILE?
         BO    ENDJOB              YES, BRANCH
***********************************************************************
*        MAKE SURE STOPCNT HAS NOT BEEN EXCEEDED                      *
***********************************************************************
         TM    SWITCH,SELSTOP      SEE IF STOPCOUNT SPECIFIED
         BNO   GOFMT1              NO, BRANCH
         L     R15,OUTCNT          LOAD OUTPUT RECORD COUNT
         C     R15,STOPCNT         SEE IF EXCEEDS STOP COUNT
         BNL   READIN              YES, DO NOT PRINT THIS RECORD
***********************************************************************
*        CALL THE FORMAT ROUTINE                                      *
***********************************************************************
GOFMT1   LA    R15,FORMAT          LOAD ADDRESS OF FORMAT ROUTINE
         BALR  R14,R15             GO FORMAT PRINT RECORD
***********************************************************************
*        WRITE THE DETAIL RECORD                                      *
***********************************************************************
         CP    LINECT,=P'59'       SEE IF PAGE IS FULL
         BNH   PUTDET              NO, BRANCH
         AP    PAGECT,=P'1'        ADD 1 TO PAGE COUNT
         MVC   OPAGCT,MASK2        MOVE EDIT MASK TO HEAD 1
         ED    OPAGCT,PAGECT       EDIT PAGE COUNT TO HEAD 1
PUTHD1   PUT   SYSPRINT,HEAD1      PRINT HEADING LINE 1
PUTHD2   PUT   SYSPRINT,HEAD2      PRINT HEADING LINE 2
         ZAP   LINECT,=P'4'        SET LINE COUNT TO 4
         MVI   DETAIL,C'0'         SET NEXT DETAIL TO DOUBLE SPACE
PUTDET   PUT   SYSPRINT,DETAIL     PRINT DETAIL LINE
         L     R15,OUTCNT          LOAD OUTPUT RECORD COUNT
         LA    R15,1(,R15)         ADD 1 TO OUTPUT RECORD COUNT
         ST    R15,OUTCNT          SAVE OUTPUT RECORD COUNT
         AP    LINECT,=P'1'        ADD 1 TO LINE COUNT
         MVI   DETAIL,C' '         SET NEXT DETAIL TO SINGLE SPACE
         B     READIN              GO GET ANOTHER INPUT RECORD
         EJECT
***********************************************************************
*        END OF FILE - CLOSE ALL FILES END RETURN TO CALLER           *
***********************************************************************
ENDJOB   CLOSE (SYSPRINT,,SMFIN)   CLOSE SMF INPUT FILE AND PRINT FILE
         L     R13,4(R13)          RESTORE ORIG REGISTER 13
         RETURN (14,12),RC=0       RETURN TO O/S
         DROP  R8
         EJECT
***********************************************************************
*                                                                     *
*        SORT INPUT PROCEDURE                                         *
*                                                                     *
***********************************************************************
         CNOP  0,4
         PUSH  USING
E15      STM   R14,R12,12(R13)     SAVE REGISTERS
         USING E15,R10,R11,R12     SET ADDRESSABILITY TO EXIT
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,4095(R10)       SET SECOND
         LA    R11,1(R11)              BASE REGISTER
         LA    R12,4095(R11)       SET THIRD
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,E15SAVE         LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
***********************************************************************
*        READ AN INPUT SMF RECORD                                     *
***********************************************************************
         LA    R8,NEWREC           POINT TO NEW RECORD AREA
         USING NEWDSECT,R8         SET ADDRESSABILITY TO NEW RECORD
         LA    R3,SMFIN            LOAD ADDRESS OF INPUT DCB
E15READ  LA    R15,READRTN         LOAD ADDRESS OF READ SMF ROUTINE
         BALR  R14,R15             GO READ SMF ROUTINE
         TM    SWITCH,ENDFILE      END OF FILE?
         BO    E15EOF              YES, BRANCH
***********************************************************************
*        PASS THE RECORD TO SORT                                      *
***********************************************************************
E15RET   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         ST    R8,24(R13)          STORE ADDRESS OF RECORD IN SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,12              SET RETURN CODE TO 12
         BR    R14                 RETURN RECORD TO SORT
***********************************************************************
*        TERMINATE THE INPUT PROCEDURE                                *
***********************************************************************
E15EOF   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,8               SET RETURN CODE TO 8
         BR    R14                 RETURN TO SORT FOR LAST TIME
         DROP  R8
         DROP  R10,R11,R12
         POP   USING
         CNOP  0,4
         PUSH  USING
         EJECT
***********************************************************************
*                                                                     *
*        SORT OUTPUT PROCEDURE                                        *
*                                                                     *
***********************************************************************
E35      STM   R14,R12,12(R13)     SAVE REGISTERS
         USING E35,R10,R11,R12     SET ADDRESSABILITY TO EXIT
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,4095(R10)       SET SECOND
         LA    R11,1(R11)              BASE REGISTER
         LA    R12,4095(R11)       SET THIRD
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,E35SAVE         LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
***********************************************************************
*        GET THE SMF RECORD FROM SORT                                 *
***********************************************************************
         L     R8,0(R1)            SAVE INPUT RECORD ADDRESS
         LTR   R8,R8               TEST INPUT RECORD ADDRESS
         USING NEWDSECT,R8         SET ADDRESSABILITY TO RECORD
         BZ    E35EOF              ZERO, END OF FILE
***********************************************************************
*        MAKE SURE STOPCNT HAS NOT BEEN EXCEEDED                      *
***********************************************************************
         TM    SWITCH,SELSTOP      SEE IF STOPCOUNT SPECIFIED
         BNO   GOFMT2              NO, BRANCH
         L     R15,OUTCNT          LOAD OUTPUT RECORD COUNT
         C     R15,STOPCNT         SEE IF EXCEEDS STOP COUNT
         BNL   E35RET              YES, DO NOT PRINT THIS RECORD
***********************************************************************
*        CALL THE FORMAT ROUTINE                                      *
***********************************************************************
GOFMT2   LA    R15,FORMAT          LOAD ADDRESS OF FORMAT ROUTINE
         BALR  R14,R15             GO FORMAT PRINT RECORD
***********************************************************************
*        WRITE THE DETAIL RECORD                                      *
***********************************************************************
         CP    LINECT,=P'59'       SEE IF PAGE IS FULL
         BNH   E35DET              NO, BRANCH
         AP    PAGECT,=P'1'        ADD 1 TO PAGE COUNT
         MVC   OPAGCT,MASK2        MOVE EDIT MASK TO HEAD 1
         ED    OPAGCT,PAGECT       EDIT PAGE COUNT TO HEAD 1
E35HD1   PUT   SYSPRINT,HEAD1      PRINT HEADING LINE 1
E35HD2   PUT   SYSPRINT,HEAD2      PRINT HEADING LINE 2
         ZAP   LINECT,=P'4'        SET LINE COUNT TO 4
         MVI   DETAIL,C'0'         SET NEXT DETAIL TO DOUBLE SPACE
E35DET   PUT   SYSPRINT,DETAIL     PRINT DETAIL LINE
         L     R15,OUTCNT          LOAD OUTPUT RECORD COUNT
         LA    R15,1(,R15)         ADD 1 TO OUTPUT RECORD COUNT
         ST    R15,OUTCNT          SAVE OUTPUT RECORD COUNT
         AP    LINECT,=P'1'        ADD 1 TO LINE COUNT
         MVI   DETAIL,C' '         SET NEXT DETAIL TO SINGLE SPACE
***********************************************************************
*        RETURN TO SORT FOR ANOTHER RECORD                            *
***********************************************************************
E35RET   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,4               SET RETURN CODE TO 4
         BR    R14                 RETURN TO SORT FOR ANOTHER RECORD
***********************************************************************
*        TERMINATE THE OUTPUT PROCEDURE                               *
***********************************************************************
E35EOF   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         LA    R15,8               SET RETURN CODE TO 8
         BR    R14                 RETURN TO SORT FOR LAST TIME
         DROP  R8
         DROP  R10,R11,R12
         POP   USING
         EJECT
         PUSH  USING
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL READ THE SMF INPUT FILE UNTIL A PROPER     *
*        SMF RECORD IS FOUND.                                         *
*                                                                     *
*        ON ENTRY THE REGISTERS WILL BE AS FOLLOWS:                   *
*                                                                     *
*        1)  REGISTER 14 ON ENTRY WILL CONTAIN THE ENTRY POINT        *
*        2)  REGISTER 15 ON ENTRY WILL CONTAIN THE RETURN ADDRESS     *
*                                                                     *
*        SELECTION WILL BE MADE ON THE FOLLOWING CRITERIA:            *
*                                                                     *
*        1)  JOBNM MATCH         (IF JOBNM PARM ENTERED)              *
*        2)  DATE  MATCH         (IF DATE  PARM ENTERED)              *
*        3)  TIME  MATCH         (IF TIME  PARM ENTERED)              *
*        4)  SYSTEM ID MATCH     (IF SYSID PARM ENTERED)              *
*        5)  JOB TYPE MATCH      (IF JTYPE PARM ENTERED)              *
*                                                                     *
*        ON EOF, THE ENDFILE INDICATOR WILL BE TURNED ON              *
*                                                                     *
*        RETURN FROM THIS ROUTINE WILL BE MADE TO REGISTER 14         *
*                                                                     *
***********************************************************************
READRTN  STM   R14,R12,12(R13)     SAVE REGISTERS
         USING READRTN,R10,R11,R12 SET ADDRESSABILITY TO ROUTINE
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,4095(R10)       SET SECOND
         LA    R11,1(R11)              BASE REGISTER
         LA    R12,4095(R11)       SET THIRD
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,SAVE1           LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         LA    R8,NEWREC           POINT TO NEW RECORD AREA
         USING NEWDSECT,R8         SET ADDRESSABILITY TO NEW RECORD
***********************************************************************
*        READ THE NEXT INPUT RECORD                                   *
***********************************************************************
READLOOP GET   SMFIN               READ SMF INPUT
         LR    R5,R1               SAVE INPUT RECORD ADDRESS
         USING SMFDSECT,R5         SET ADDRESSABILITY TO SMF BUFFER
***********************************************************************
*        DROP ALL RECORDS EXCEPT THE SMF TYPE 208 RECORD              *
***********************************************************************
         CLI   SMFRTY,208          SEE IF TYPE 208 SMF RECORD
         BNE   READLOOP            NO, BYPASS RECORD
***********************************************************************
*        FORMAT A NEW RECORD FROM THE SMF RECORD                      *
***********************************************************************
         LA    R6,SMFWKLEN         SET ADDRESS OF
         AH    R6,SMFWKLEN             STATISTICS SECTION
         USING SMFCHBG,R6          SET ADDRESSABILITY TO STAT SECTION
         CLI   SMFCHSM,C'S'        SEE IF SORT INSTEAD OF MERGE
         BNE   READLOOP            NO, DROP THIS RECORD
         MVC   NEWSID,SMFSID       COPY SMF SYSTEM ID
         MVC   NEWJBN,SMFJBN       COPY JOB NAME
         MVC   NEWSTMN,SMFSTMN     COPY STEP NAME
         MVC   NEWSTID,SMFSTID     COPY SORT INITIATION DATE
         MVC   NEWSTIT,SMFSTIT     COPY SORT INITIATION TIME
         MVC   NEWSTTT,SMFSTTT     COPY SORT TERMINATION TIME
         MVC   NEWCHSIZ,SMFCHSIZ   COPY NUMBER OF CHARACTERS SORTED
         MVC   NEWCHRIN,SMFCHRIN   COPY NUMBER OF RECORDS INTO SORT
         MVC   NEWCHROT,SMFCHROT   COPY NUMBER OF RECORDS OUT OF SORT
         MVC   NEWCHINS,SMFCHINS   COPY NUMBER OF RECORDS INSERTED
         MVC   NEWCHDEL,SMFCHDEL   COPY NUMBER OF RECORDS DELETED
         MVC   NEWCHCRU,SMFCHCRU   COPY CORE USED BY THIS SORT
         MVC   NEWCHCTM,SMFCHCTM   COPY CPU TIME
         MVC   NEWCHOU,SMFCHOU     COPY OVER/UNDER ALLOCATION INDICATOR
         MVC   NEWCHALF,SMFCHALF   COPY ALLOCATION FACTOR
         MVC   NEWCHINC,SMFCHINC   COPY INCORE SORT FLAG
         L     R15,NEWCHRIN        LOAD RECORDS INTO SORT
         A     R15,NEWCHINS        ADD  RECORDS INSERTED BY EXIT
         ST    R15,NEWCHTOT        LOAD RECORDS INTO SORT
TTRKS    SLR   R14,R14             SET TRACKS USED TO ZERO
         LH    R15,SMFWKNOA        LOAD NUMBER OF SORTWK DATA SETS
         LTR   R15,R15             TEST NUMBER OF DATA SETS
         BZ    TTRKS02             ZERO, GET OUT
         LA    R1,SMFWKDDN         POINT TO START OF SORTWK ENTRIES
         USING SMFWKDDN,R1         SET ADDRESSABILITY TO ENTRY
TTRKS01  AH    R14,SMFWKPTR        ADD PRIMARY TRACKS TO TOTAL
         AH    R14,SMFWKTSC        ADD SECONDARY TRACKS TO TOTAL
         LA    R1,SMFWKENT(R1)     INCREMENT TO NEXT SORTWK ENTRY
         BCT   R15,TTRKS01         LOOP THROUGH SORTWK ENTRIES
TTRKS02  ST    R14,NEWWKTRK        SAVE TOTAL TRKS ALLOCATED
TTYPE    MVI   NEWTYPE,C'T'        ASSUME TEST JOB
         CLI   NEWJBN+1,C'0'       SEE IF NUMERIC IN POS 2
         BE    TTYPE01             YES, TEST JOB
         CLI   NEWJBN+2,C'0'       SEE IF NUMERIC IN POS 3
         BE    TTYPE01             YES, TEST JOB
         MVI   NEWTYPE,C'P'        NO, THIS IS A PRODUCTION JOB
TTYPE01  DS    0H
         DROP  R1                  DROP ADDRESSABILITY TO DD ENTRY
***********************************************************************
*        DROP ANY RECORDS WHICH DO NOT PASS FILTERING                 *
***********************************************************************
PDATE    TM    SWITCH,SELDATE      DATE SELECTION?
         BO    CKDATE              YES, GO SEE IF MATCH
PTIME    TM    SWITCH,SELTIME      TIME SELECTION?
         BO    CKTIME              YES, GO SEE IF MATCH
PJOBNM   TM    SWITCH,SELJOBNM     JOBNAME SELECTION?
         BO    CKJOBNM             YES, GO SEE IF MATCH
PSYSID   TM    SWITCH,SELSYSID     SYSID SELECTION
         BO    CKSYSID             YES, BRANCH
PJTYPE   TM    SWITCH,SELTYPE      JOB TYPE SELECTION
         BO    CKJTYPE             YES, BRANCH
PRETN    B     READRET             RETURN TO CALLER
EOF      OI    SWITCH,ENDFILE      TURN ON END-OF-FILE INDICATOR
***********************************************************************
*        GET OUT OF READ ROUTINE                                      *
***********************************************************************
READRET  L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         ST    R5,40(R13)          SAVE REGISTER 5 INTO SAVE AREA
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*        DATE FILTER ROUTINE                                          *
***********************************************************************
CKDATE   CP    NEWSTID,DATES       SEE IF DATE LESS THAN BEGIN DATE
         BL    READLOOP            YES, BYPASS RECORD
         CP    NEWSTID,DATEE       SEE IF DATE GREATER THAN END DATE
         BH    READLOOP            YES, BYPASS RECORD
         B     PTIME               GO SEE IF TIME SELECTION TOO
         SPACE 3
***********************************************************************
*        TIME FILTER ROUTINE                                          *
***********************************************************************
CKTIME   L     R1,TIMES            LOAD START TIME
         SLR   R14,R14             CLEAR REG FOR ICM
         ICM   R14,B'0011',NEWSTIT LOAD SMF BEGIN TIME HHMM
         SLL   R14,8               SHIFT TO FORM HHMM0000
         CR    R14,R1              SEE IF BEGIN TIME LT START TIME
         BL    READLOOP            YES, BYPASS RECORD
         L     R1,TIMEE            LOAD END TIME
         SLR   R14,R14             CLEAR REG FOR ICM
         ICM   R14,B'0011',NEWSTTT LOAD SMF STOP TIME HHMM
         SLL   R14,8               SHIFT TO FORM HHMM0000
         CR    R14,R1              SEE IF STOP TIME GT THAN END TIME
         BH    READLOOP            YES, BYPASS RECORD
         B     PJOBNM              GO SEE IF JOBNAME SELECTION TOO
         SPACE 3
***********************************************************************
*        JOBNAME FILTER ROUTINE                                       *
***********************************************************************
CKJOBNM  LA    R14,NEWJBN          LOAD ADDRESS OF JOB NAME
         SLR   R15,R15             CLEAR REG FOR IC
         IC    R15,VALJOBNM+1      LOAD OFFSET VALUE
         AR    R14,R15             ADD OFFSET TO ADDRESS
         IC    R15,VALJOBNM        LOAD LENGTH VALUE
         EX    R15,COMPJOB         COMPARE FOR MATCH
         BNE   READLOOP            NO MATCH, BYPASS RECORD
         B     PSYSID              GO SEE IF SYSID SELECTION TOO
COMPJOB  CLC   0(0,R14),VALJOBNM+2 *****  EXEC ONLY *****
         SPACE 3
***********************************************************************
*        SYSID FILTER ROUTINE                                         *
***********************************************************************
CKSYSID  CLC   VALSYSID(4),NEWSID  SEE IF SMF SYSTEM ID MATCHES
         BNE   READLOOP            NO, BYPASS RECORD
         B     PJTYPE              GO SEE IF JOB TYPE SELECTION TOO
         SPACE 3
***********************************************************************
*        JOB TYPE FILTER ROUTINE                                      *
***********************************************************************
CKJTYPE  CLC   NEWTYPE,JTYPE       SEE IF JOB TYPE MATCHES CRITERIA
         BNE   READLOOP            NO, BYPASS RECORD
         B     PRETN               GO RETURN SELECTED RECORD TO CALLER
         EJECT
         DROP  R8
         DROP  R10,R11,R12
         POP   USING
         PUSH  USING
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL FORMAT THE OUTPUT PRINT RECORD FROM THE    *
*        SMF TYPE 208 RECORD POINTED TO BY REGISTER 5                 *
*                                                                     *
*        1)  REGISTER 15 ON ENTRY IS THE ROUTINE ENTRY POINT          *
*        2)  REGISTER 14 ON ENTRY IS THE RETURN ADDRESS               *
*        3)  REGISTER 5  ON ENTRY POINTS TO THE SMF TYPE 208 RECORD   *
*                                                                     *
*        RETURN FROM THIS ROUTINE WILL BE MADE TO REGISTER 14         *
*                                                                     *
***********************************************************************
FORMAT   STM   R14,R12,12(R13)     SAVE REGISTERS
         USING FORMAT,R10,R11,R12  SET ADDRESSABILITY TO ROUTINE
         USING NEWDSECT,R8         SET ADDRESSABILITY TO RECORD
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,4095(R10)       SET SECOND
         LA    R11,1(R11)              BASE REGISTER
         LA    R12,4095(R11)       SET THIRD
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,SAVE2           LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
********************************************************************
*        MOVE JOBNAME TO DETAIL RECORD                             *
********************************************************************
FMT01    MVC   OJOBNAME,NEWJBN     MOVE JOB NAME TO DETAIL
         SPACE 3
********************************************************************
*        MOVE JOB TYPE TO DETAIL RECORD                            *
********************************************************************
FMT02    MVC   OTYPE,NEWTYPE       MOVE JOB TYPE TO DETAIL
         SPACE 3
********************************************************************
*        MOVE STEPNAME TO DETAIL RECORD                            *
********************************************************************
FMT03    MVC   OSTPNAME,NEWSTMN    MOVE STEP NAME TO DETAIL
         SPACE 3
********************************************************************
*        MOVE SYSID TO DETAIL RECORD                               *
********************************************************************
FMT04    MVC   OSMFID,NEWSID       MOVE SMF SYSTEM ID TO DETAIL
         SPACE 3
********************************************************************
*        MOVE DATE TO DETAIL RECORD                                *
********************************************************************
FMT05    MVC   ODATE,MASK1         MOVE EDIT MASK TO DETAIL RECORD
         ED    ODATE,NEWSTID+1     EDIT THE DATE TO DETAIL RECORD
         SPACE 3
********************************************************************
*        MOVE START TIME TO DETAIL RECORD                          *
********************************************************************
FMT06    MVC   OTIME,=X'4021207A2020' SET EDIT MASK
         ED    OTIME,NEWSTIT       MOVE TIME (HH.MM) TO DETAIL LINE
         SPACE 3
********************************************************************
*        MOVE ELAPSED TIME TO DETAIL RECORD                        *
********************************************************************
FMT07    ZAP   STHR,=P'0'          ZERO START HOUR
         ZAP   STMIN,=P'0'         ZERO START MINUTE
         ZAP   STSEC,=P'0'         ZERO START SECONDS
         ZAP   ENDHR,=P'0'         ZERO END HOUR
         ZAP   ENDMIN,=P'0'        ZERO END MINUTE
         ZAP   ENDSEC,=P'0'        ZERO END SECONDS
         MVO   STHR,NEWSTIT(1)     SET START HOUR
         MVO   STMIN,NEWSTIT+1(1)  SET START MINUTE
         MVO   STSEC,NEWSTIT+2(1)  SET START SECONDS
         MVO   ENDHR,NEWSTTT(1)    SET END HOUR
         MVO   ENDMIN,NEWSTTT+1(1) SET END MINUTE
         MVO   ENDSEC,NEWSTTT+2(1) SET END SECONDS
         CP    ENDSEC,STSEC        SEE IF END SECONDS LT START SECONDS
         BNL   FMT07A              NO, BRANCH
         AP    ENDSEC,=P'60'       ADD 60 SECONDS TO END SECONDS
         SP    ENDMIN,=P'1'        SUBTRACT 1 HOUR FROM END MINUTES
FMT07A   CP    ENDMIN,STMIN        SEE IF END MINUTE LT START MIN
         BNL   FMT07B              NO, BRANCH
         AP    ENDMIN,=P'60'       ADD 60 MINUTES TO END MINUTES
         SP    ENDHR,=P'1'         SUBTRACT 1 HOUR FROM END HOUR
FMT07B   CP    ENDHR,STHR          SEE IF END HOUR GT START HOUR
         BNL   FMT07C              NO, DID NOT CROSS MIDNIGHT
         AP    ENDHR,=P'24'        ADD 24 HOURS TO END HOUR
FMT07C   SP    ENDHR,STHR          CALCULATE ELAPSED HOURS
         SP    ENDMIN,STMIN        CALCULATE ELAPSED MINUTES
         SP    ENDSEC,STSEC        CALCULATE ELAPSED SECONDS
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,B'0011',ENDHR   LOAD ELPASED HOURS
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE          SAVE HOUR
         ICM   R15,B'0011',ENDMIN  LOAD ELPASED MINUTES
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE+1        SAVE MINUTES
         ICM   R15,B'0011',ENDSEC  LOAD ELPASED SECONDS
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE+2        SAVE SECONDS
         MVC   OELAP,=X'4020207A21207A2020' SET EDIT MASK
         ED    OELAP,DOUBLE        MOVE ELAPSED TIME (HH.MM.SS) TO LINE
         SPACE 3
********************************************************************
*        MOVE CPU TIME TO DETAIL RECORD                            *
*                                                                  *
*        NOT THAT THIS TIME WILL BE SET TO BLANKS FOR SOME         *
*        JOBNAMES SUCH AS ROSCOE WHICH ISSUE STIMER MACROS         *
*        DURING PROCESSING WHICH INVALIDATES THE VALUE IN          *
*        THE SMF RECORD.                                           *
*                                                                  *
********************************************************************
FMT08    MVC   OCPUTM,BLANKS       SET CPU TIME TO BLANKS
         CLC   OJOBNAME,=CL8'ROSCOE' SEE IF ROSCOE
         BE    FMT09               YES, GET OUT
         ICM   R14,B'1111',NEWCHCTM LOAD BINARY TIME TO WORK REG
         SRDA  R14,32              SHIFT TO ODD REG OF PAIR
         D     R14,=F'360000'      DIVIDE TO FIND HOURS
         CVD   R15,DBL             CONVERT HOURS TO DECIMAL
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,B'0011',DBL+6   LOAD HOURS (HHH+)
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE          SAVE HOURS
         SRDA  R14,32              SHIFT REMAINDER TO ODD REG
         D     R14,=F'6000'        DIVIDE TO FIND MINUTES
         CVD   R15,DBL             CONVERT MINUTES TO DECIMAL
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,B'0011',DBL+6   LOAD MINUTES (0MM+)
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE+1        SAVE MINUTES
         SRDA  R14,32              SHIFT REMAINDER TO ODD REG
         D     R14,=F'100'         DIVIDE TO FIND FULL SECONDS
         CVD   R15,DBL             CONVERT SECONDS TO DECIMAL
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,B'0011',DBL+6   LOAD SECONDS (0SS+)
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE+2        SAVE SECONDS
         CVD   R14,DBL             CONVERT HUNDRETHS TO DECIMAL
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,B'0011',DBL+6   LOAD TENTHS OF SECONDS (0TT+)
         SRL   R15,4               SHIFT OFF SIGN
         STC   R15,DOUBLE+3        SAVE TENTHS OF SECONDS
         MVC   OCPUTM,=X'4020207A20217A2020'
         ED    OCPUTM,DOUBLE       MOVE CPU TIME (HH.MM.SS.TT) TO LINE
         SPACE 3
********************************************************************
*        SET INCORE SORT INDICATOR                                 *
********************************************************************
FMT09    MVI   OINCOR,C'N'         ASSUME NOT INCORE SORT
         TM    NEWCHINC,X'01'      TEST INCORE INDICATOR
         BNO   FMT10               NO, BRANCH
         MVI   OINCOR,C'Y'         SET FOR INCORE SORT
         SPACE 3
********************************************************************
*        SET TRACK COUNT                                           *
********************************************************************
FMT10    L     R15,NEWWKTRK        LOAD TOTAL SORTWK TRACKS
         CVD   R15,DOUBLE          CONVERT TO PACKED
         MVC   OTRKCNT,=X'40202020206B202120' SET EDIT MASK
         ED    OTRKCNT,DOUBLE+4    MOVE TRACK COUNT TO DETAIL LINE
         SPACE 3
********************************************************************
*        SET RECORD COUNT                                          *
********************************************************************
FMT11    L     R15,NEWCHTOT        LOAD TOTAL RECORDS SORTED
         CVD   R15,DOUBLE          CONVERT TO PACKED
         MVC   ORECNT,=X'4020202020206B2020206B202120' SET EDIT MASK
         ED    ORECNT,DOUBLE+2     MOVE RECORD COUNT TO DETAIL LINE
         SPACE 3
********************************************************************
*        SET BYTE COUNT                                            *
********************************************************************
FMT12    L     R15,NEWCHSIZ        LOAD BYTE COUNT
         CVD   R15,DOUBLE          CONVERT TO PACKED
         MVC   OBYTECNT,=X'40202020206B2020206B2020206B202120'
         ED    OBYTECNT,DOUBLE+1   MOVE BYTE COUNT TO DETAIL LINE
         SPACE 3
********************************************************************
*        SET OVER/UNDER ALLOCATION FACTOR                          *
********************************************************************
FMT13    MVC   OOUIND,NEWCHOU      SET OVER/UNDER INDICATOR
         MVC   OFACTOR,NEWCHALF    SET ALLOCATION FACTOR
         SPACE 3
MVEND    L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         LM    R14,R12,12(R13)     RESTORE ORIGINAL REGS
         BR    R14                 RETURN TO SORT FOR LAST TIME
         DROP  R8
         DROP  R10,R11,R12
         POP   USING
         EJECT
         PUSH  USING
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL SEARCH THE TIOT FOR THE DDNAME SUPPLIED    *
*        IN THE EIGHT (8) BYTE FIELD NAMED DDNAME.                    *
*                                                                     *
*        1)  REGISTER 15 ON ENTRY IS THE ROUTINE ENTRY POINT          *
*        2)  REGISTER 14 ON ENTRY IS THE RETURN ADDRESS               *
*                                                                     *
*        THE SUCCESS OF THE DDNAME SEARCH WILL BE INDICATED BY THE    *
*        RETURN CODE SET IN REGISTER 15.                              *
*                                                                     *
*        REG 15 = 0   - DDNAME FOUND                                  *
*        REG 15 = 4   - DDNAME NOT FOUND                              *
*                                                                     *
*        RETURN FROM THIS ROUTINE WILL BE MADE TO REGISTER 14         *
*                                                                     *
***********************************************************************
FINDDN   STM   R14,R12,12(R13)     SAVE REGISTERS
         USING FINDDN,R10,R11,R12  SET ADDRESSABILITY TO ROUTINE
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,4095(R10)       SET SECOND
         LA    R11,1(R11)              BASE REGISTER
         LA    R12,4095(R11)       SET THIRD
         LA    R12,1(R12)              BASE REGISTER
         LR    R15,R13             SAVE ADDR OF ORIGINAL SAVE
         LA    R13,SAVE3           LOAD ADDR OF NEW SAVE
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         SLR   R15,R15             SET RETURN CODE TO ZERO
         L     R1,16               GET CVT ADDR
         L     R1,0(,R1)           GET TCB PTRS
         L     R1,4(,R1)           GET CURRENT TCB
         L     R1,12(,R1)          GET TIOT ADDR
         LA    R1,24(,R1)          POINT TO DD ENTRIES
         SLR   R0,R0               ZERO REG FOR ICM
FINDDN1  ICM   R0,1,0(R1)          LOAD LENGTH OF DD ENTRY
         BZ    NODDN               ZERO, END OF TIOT ENTRIES
         CLC   DDNAME,4(R1)        SEE IF DDNAME MATCH
         BE    YESDDN              YES, BRANCH
FINDDN2  BXH   R1,R0,FINDDN1       LOOP FOR NEXT ENTRY
NODDN    LA    R15,4               SET RETURN CODE TO 4
YESDDN   L     R13,4(R13)          LOAD ADDRESS OF ORIGINAL SAVE
         L     R14,12(R13)         RESTORE
         LM    R0,R12,20(R13)          ORIGINAL REGS
         BR    R14                 RETURN TO SORT FOR LAST TIME
         DROP  R10,R11,R12
         POP   USING
         EJECT
***********************************************************************
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
***********************************************************************
ERROR01  WTO   'SMF3001 - INVALID KEYWORD ON INPUT SYSIN CARD',        X
               ROUTCDE=11
         ABEND 0001                ABEND THE JOB
ERROR02  WTO   'SMF3002 - INVALID JOBNAME VALUE ON SYSIN CARD - INDEX FX
               IELD WAS NOT PRECEDED BY THE JOBNAME',                  X
               ROUTCDE=11
         ABEND 0002                ABEND THE JOB
ERROR03  WTO   'SMF3003 - INVALID JOBNAME VALUE ON SYSIN CARD - JOBNAMEX
                EXCEEDS 8 CHARACTERS',                                 X
               ROUTCDE=11
         ABEND 0003                ABEND THE JOB
ERROR04  WTO   'SMF3004 - INVALID JOBNAME VALUE ON SYSIN CARD - INDEX LX
               ENGTH EXCEEDS 2 CHARACTERS',                            X
               ROUTCDE=11
         ABEND 0004                ABEND THE JOB
ERROR05  WTO   'SMF3005 - INVALID JOBNAME VALUE ON SYSIN CARD - INDEX VX
               ALUE IS NOT NUMERIC',                                   X
               ROUTCDE=11
         ABEND 0005                ABEND THE JOB
ERROR06  WTO   'SMF3006 - INVALID DATE VALUE ON SYSIN CARD - BEGIN DATEX
                NOT IN THE FORM YY.DDD',                               X
               ROUTCDE=11
         ABEND 0006                ABEND THE JOB
ERROR07  WTO   'SMF3007 - INVALID DATE VALUE ON SYSIN CARD - BEGIN YEARX
                NOT NUMERIC',                                          X
               ROUTCDE=11
         ABEND 0007                ABEND THE JOB
ERROR08  WTO   'SMF3008 - INVALID DATE VALUE ON SYSIN CARD - BEGIN DAY X
               NOT NUMERIC',                                           X
               ROUTCDE=11
         ABEND 0008                ABEND THE JOB
ERROR09  WTO   'SMF3009 - INVALID DATE VALUE ON SYSIN CARD - BEGIN DATEX
               NOT SEPARATED FROM END DATE BY :',                      X
               ROUTCDE=11
         ABEND 0009                ABEND THE JOB
ERROR10  WTO   'SMF3010 - INVALID DATE VALUE ON SYSIN CARD - END DATE NX
               OT IN THE FORM YY.DDD',                                 X
               ROUTCDE=11
         ABEND 0010                ABEND THE JOB
ERROR11  WTO   'SMF3011 - INVALID DATE VALUE ON SYSIN CARD - END YEAR NX
               OT NUMERIC',                                            X
               ROUTCDE=11
         ABEND 0011                ABEND THE JOB
ERROR12  WTO   'SMF3012 - INVALID DATE VALUE ON SYSIN CARD - END DAY NOX
               T NUMERIC',                                             X
               ROUTCDE=11
         ABEND 0012                ABEND THE JOB
ERROR13  WTO   'SMF3013 - INVALID TIME VALUE ON SYSIN CARD - BEGIN TIMEX
                NOT IN THE FORM HH.MM',                                X
               ROUTCDE=11
         ABEND 0013                ABEND THE JOB
ERROR14  WTO   'SMF3014 - INVALID TIME VALUE ON SYSIN CARD - BEGIN HOURX
                NOT NUMERIC',                                          X
               ROUTCDE=11
         ABEND 0014                ABEND THE JOB
ERROR15  WTO   'SMF3015 - INVALID TIME VALUE ON SYSIN CARD - BEGIN MINUX
               TE NOT NUMERIC',                                        X
               ROUTCDE=11
         ABEND 0015                ABEND THE JOB
ERROR16  WTO   'SMF3016 - INVALID TIME VALUE ON SYSIN CARD - BEGIN TIMEX
               NOT SEPARATED FROM END TIME BY :',                      X
               ROUTCDE=11
         ABEND 0016                ABEND THE JOB
ERROR17  WTO   'SMF3017 - INVALID TIME VALUE ON SYSIN CARD - END TIME NX
               OT IN THE FORM HH.MM',                                  X
               ROUTCDE=11
         ABEND 0017                ABEND THE JOB
ERROR18  WTO   'SMF3018 - INVALID TIME VALUE ON SYSIN CARD - END HOUR NX
               OT NUMERIC',                                            X
               ROUTCDE=11
         ABEND 0018                ABEND THE JOB
ERROR19  WTO   'SMF3019 - INVALID TIME VALUE ON SYSIN CARD - END MINUTEX
                NOT NUMERIC',                                          X
               ROUTCDE=11
         ABEND 0019                ABEND THE JOB
ERROR20  WTO   'SMF3020 - INVALID SYSTEM VALUE ON SYSIN CARD - MUST BE X
               1 TO 4 ALPHANUMERIC CHARACTERS',                        X
               ROUTCDE=11
         ABEND 0020                ABEND THE JOB
ERROR21  WTO   'SMF3021 - INVALID SORT SUBPARAMETER ON SYSIN CARD - NO X
               SUBPARAMETERS ENTERED',                                 X
               ROUTCDE=11
         ABEND 0021                ABEND THE JOB
ERROR22  WTO   'SMF3022 - INVALID SORT SUBPARAMETER ON SYSIN CARD - MORX
               THAN 5 SUBPARAMETERS ENTERED',                          X
               ROUTCDE=11
         ABEND 0022                ABEND THE JOB
ERROR23  WTO   'SMF3023 - INVALID SORT SUBPARAMETER ON SYSIN CARD - UNKX
               NOWN SUBPARAMETER ENTERED',                             X
               ROUTCDE=11
         ABEND 0023                ABEND THE JOB
ERROR24  WTO   'SMF3024 - INVALID SORT SUBPARAMETER ON SYSIN CARD - SUBX
               PARAMETERS NOT SEPARATED BY '',''',                     X
               ROUTCDE=11
         ABEND 0024                ABEND THE JOB
ERROR25  WTO   'SMF3025 - NULL SORT SUBPARAMETER ON SYSIN CARD',       X
               ROUTCDE=11
         ABEND 0025                ABEND THE JOB
ERROR26  WTO   'SMF3026 - INVALID STOP COUNT VALUE ON SYSIN CARD - MUSTX
                BE 1 TO 9 NUMERIC CHARACTERS',ROUTCDE=11
         ABEND 0026                ABEND THE JOB
ERROR27  WTO   'SMF3027 - INVALID JOB TYPE VALUE ON SYSIN CARD - MUST BX
               E "T" OR "P" TO INDICATE TEST OR PRODUCTION',           X
               ROUTCDE=11
         ABEND 0027                ABEND THE JOB
ERROR28  WTO   'SMF3028 - SYSPRINT DD STATEMENT MISSING - JOB ABORTED',X
               ROUTCDE=11
         ABEND 0028                ABEND THE JOB
ERROR29  WTO   'SMF3029 - SMFIN DD STATEMENT MISSING, JOB ABORTED',    X
               ROUTCDE=11
         ABEND 0029                ABEND THE JOB
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS                                     *
*                                                                     *
***********************************************************************
         LTORG
         SPACE 3
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
DBL      DS    D                   DOUBLE WORD WORK AREA
SAVEAREA DS    18F                 PROGRAM SAVE AREA
E15SAVE  DS    18F                 SORT EXIT E15 SAVE AREA
E35SAVE  DS    18F                 SORT EXIT E35 SAVE AREA
SAVE1    DS    18F                 EXIT SAVE AREA
SAVE2    DS    18F                 EXIT SAVE AREA
SAVE3    DS    18F                 EXIT SAVE AREA
SAVE4    DS    18F                 EXIT SAVE AREA
NEWREC   DC    CL100' '            NEW REFORMATTED STATISTIC RECORD
RETURN   DS    F                   SAVE AREA FOR ROUTINE RETURN ADDRESS
WORK     DS    8C                  MISCELLANEOUS WORK AREA
VALDATE  DC    C'00.000',C'99.999' DEFAULT DATE RANGES
VALTIME  DC    C'00.00',C'99.99'   DEFAULT TIME RANGES
VALJOBNM DC    X'00',X'00',CL8' '  DEFAULT JOBNAME VALUE
VALSYSID DC    C'    '             DEFAULT SYSID VALUE
STHR     DC    PL2'0'              START HOUR FROM RECORD
STMIN    DC    PL2'0'              START MINUTE FROM RECORD
STSEC    DC    PL2'0'              START SECOND FROM RECORD
ENDHR    DC    PL2'0'              END HOUR FROM RECORD
ENDMIN   DC    PL2'0'              END MINUTE FROM RECORD
ENDSEC   DC    PL2'0'              END SECOND FROM RECORD
DATES    DC    PL4'0'              START DATE
DATEE    DC    PL4'99999'          END DATE
TIMES    DC    F'0'                START TIME
TIMEE    DS    X'99999999'         END TIME
SRTDATE  DC    C'21,04,PD,A,'      DEFAULT SORT FIELDS FOR DATE
SRTTIME  DC    C'25,04,BI,A,'      DEFAULT SORT FIELDS FOR TIME
SRTJOBNM DC    C'05,08,CH,A,'      DEFAULT SORT FIELDS FOR JOBNM
SRTSYSID DC    C'01,04,CH,A,'      DEFAULT SORT FIELDS FOR SYSID
SRTSIZE  DC    C'33,04,BI,A,'      DEFAULT SORT FIELDS FOR SIZE
SRTTRKS  DC    C'61,04,BI,A,'      DEFAULT SORT FIELDS FOR TRACKS
SRTRECS  DC    C'65,04,BI,A,'      DEFAULT SORT FIELDS FOR RECORDS
SRTTYPE  DC    C'74,01,CH,A,'      DEFAULT SORT FIELDS FOR TYPE
DDNAME   DS    CL8                 DDNAME FIELD FOR TIOT SEARCH ROUTINE
SWITCH   DC    X'0000'             MULTIPURPOSE BIT SWITCHES
SELSTOP  EQU   X'80'               STOPCOUNT OPTION TAKEN
ENDFILE  EQU   X'40'               END OF FILE REACHED ON SMFIN
SELSORT  EQU   X'20'               SORT REQUESTED
SELTYPE  EQU   X'10'               TYPE SELECTION REQUESTED
SELDATE  EQU   X'08'               DATE SELECTION REQUESTED
SELTIME  EQU   X'04'               TIME SELECTION REQUESTED
SELJOBNM EQU   X'02'               JOBNAME SELECTION REQUESTED
SELSYSID EQU   X'01'               SYSID SELECTION REQUESTED
LINECT   DC    PL2'99'             LINE COUNTER
PAGECT   DC    PL3'0'              PAGE COUNTER
MASK1    DC    X'4021204B202020'   EDIT MASK1
MASK2    DC    X'402020202120'     EDIT MASK2
MASK3    DC    X'4020202020202120' EDIT MASK3
MASK4    DC    X'402020202020212060' EDIT MASK4
MASK5    DC    X'40202120'         EDIT MASK4
MAX      DC    F'9999999'          MAX VALUE FOR DISPLAY FIELD
BLANKS   DC    CL20' '             CHARACTER CONSTANT '        '
STOPCNT  DC    F'0'                STOP COUNT FROM STOPCNT OPTION
OUTCNT   DC    F'0'                ACTUAL OUTPUT RECORD COUNT
JTYPE    DC    C' '                SPECIFIED JOB TYPE FOR SELECTION
         CNOP  0,4
SORTPARM DC    X'80',AL3(SORTA)
         DC    H'0'
SORTA    DC    H'24'               LENGTH OF PARAMETER LIST
         DC    A(SORTM)            ADDRESS OF START OF SORT STMT
         DC    A(SORTENDM)         ADDRESS OF END OF SORT STMT
         DC    A(RECM)             ADDRESS OF START OF RECORD STMT
         DC    A(RECENDM)          ADDRESS OF END OF RECORD STMT
         DC    A(E15)              ADDRESS OF E15 EXIT
         DC    A(E35)              ADDRESS OF E35 EXIT
***********************************************************************
*        SORT FIELDS STATEMENT                                        *
***********************************************************************
SORTM    DC    C' SORT FIELDS=('   START OF SORT FIELDS STMT
SRTFLDS  DC    C'           '      ROOM FOR FIRST SORT FIELD + ','
         DC    C'           '      ROOM FOR SECOND SORT FIELD + ','
         DC    C'           '      ROOM FOR THIRD SORT FIELD + ','
         DC    C'           '      ROOM FOR FOURTH SORT FIELD + ','
         DC    C'           '      ROOM FOR FIFTH SORT FIELD + ')'
SORTENDM DC    C' '                END OF SORT FIELDS STMT
***********************************************************************
*        RECORD TYPE STATEMENT                                        *
***********************************************************************
RECM     DC    C' RECORD TYPE=F,LENGTH=80'
RECENDM  DC    C' '                END OF RECORD STMT
         SPACE 3
***********************************************************************
*                                                                     *
*        PARM LIST HEADING                                            *
*                                                                     *
***********************************************************************
HEAD     DS    0CL133              PARM HEADINGS
         DC    C'1'                ANS CONTROL CHARACTER
         DC    40C' '
         DC    CL30'INPUT PARMS SELECTED'
         DC    62C' '
         SPACE 3
CARDREC  DS    0CL133              PARM CARDS
         DC    C'0'                ANS CONTROL CHARACTER
         DC    30C' '
CARDAREA DC    80C' '              SAVE AREA FOR INPUT CARD
         DC    22C' '
         SPACE 3
***********************************************************************
*                                                                     *
*        HEADING LINE 1                                               *
*                                                                     *
***********************************************************************
HEAD1    DS    0CL133              HEADING LINE1
         DC    C'1'                ANS CONTROL CHARACTER
         DC    40C' '
         DC    CL45'FOOD LION SYNCSORT STATISTICS REPORT'
         DC    36C' '
         DC    CL4'PAGE'
OPAGCT   DC    CL6' '              PAGE COUNT
         DC    CL1' '
         SPACE 3
***********************************************************************
*                                                                     *
*        HEADING LINE 2                                               *
*                                                                     *
***********************************************************************
HEAD2    DS    CL133' '            HEADING LINE2
         ORG   HEAD2
         DC    C'0'                ANS CONTROL CHARACTER
         DC    CL8'JOBNAME'
         DC    CL5'TYPE'
         DC    CL10'STEPNAME'
         DC    CL7' SYS'
         DC    CL9' DATE'
         DC    CL8'TIME'
         DC    CL11'DURATION'
         DC    CL10' CPU TIME'
         DC    CL8' INCORE'
         DC    CL9' TRK CNT'
         DC    CL15'    RECORD CNT'
         DC    CL18'        BYTE COUNT'
         DC    CL8'  FACTOR'
         ORG
         SPACE 3
***********************************************************************
*                                                                     *
*        DETAIL PRINT RECORD                                          *
*                                                                     *
***********************************************************************
DETAIL   DC    CL133' '            DETAIL PRINT RECORD
         ORG   DETAIL
         DC    C' '                ANS CONTROL CHARACTER
OJOBNAME DC    CL8' '              JOBNAME
         DC    CL2' '
OTYPE    DC    CL1' '              JOB TYPE
         DC    CL2' '
OSTPNAME DC    CL8' '              STEPNAME
         DC    CL2' '
OSMFID   DC    CL4' '              SMF SYSTEM ID
         DC    CL2' '
ODATE    DS    CL7                 DATE SORT STARTED
         DC    CL2' '
OTIME    DS    CL6                 TIME SORT STARTED
         DC    CL2' '
OELAP    DS    CL9                 DURATION
         DC    CL2' '
OCPUTM   DS    CL9                 CPU TIME
         DC    CL6' '
OINCOR   DS    CL1                 INCORE INDICATOR
         DC    CL1' '
OTRKCNT  DS    CL9                 TRACK COUNT
         DC    CL1' '
ORECNT   DS    CL14                RECORD COUNT
         DC    CL2' '
OBYTECNT DS    CL17                BYTE COUNT
         DC    CL3' '
OOUIND   DS    CL1                 OVER/UNDER ALLOCATION INDICATOR
         DC    CL1' '
OFACTOR  DS    CL3                 OVER/UNDER ALLOCATION FACTOR
         ORG
         EJECT
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,MACRF=GM,DSORG=PS,EODAD=ENDPARM,LRECL=80
SMFIN    DCB   DDNAME=SMFIN,MACRF=GL,DSORG=PS,EODAD=EOF,BFTEK=A
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=133,RECFM=FBA
         PRINT GEN
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*                      SORT SUBPARAMETER TABLE                        *
*                                                                     *
*        THIS TABLE DESCRIBES THE SORT SUBPARAMETER OPTIONS           *
*        AND ALL ELIGIBLE SHORT NAMES ALONG WITH THE POINTER          *
*        TO THE APPROPRIATE SORT FIELDS STATEMENT VALUE FOR           *
*        THAT KEYWORD.  EACH 16 BYTE ENTRY IS AS FOLLOWS:             *
*                                                                     *
*                                                                     *
*        1)  POSITIONS 1-8 CONTAIN THE ACTUAL SUBPARAMETER VALUE      *
*                                                                     *
*        2)  POSITIONS 9-10 CONTAIN THE MACHINE LENGTH OF THE         *
*            SUBPARAMETER NAME                                        *
*                                                                     *
*        3)  POSITIONS 11-12 ARE RESERVED                             *
*                                                                     *
*        4)  POSITIONS 13-16 CONTAIN THE ADDRESS OF THE               *
*            SORT FIELDS VALUE FOR THE PARM                           *
*                                                                     *
*                                                                     *
***********************************************************************
SORTTBL  DS    0F
         DC    CL8'TIME    ',AL2(3),AL2(0),A(SRTTIME)
         DC    CL8'TIM     ',AL2(2),AL2(0),A(SRTTIME)
         DC    CL8'TI      ',AL2(1),AL2(0),A(SRTTIME)
         DC    CL8'DATE    ',AL2(3),AL2(0),A(SRTDATE)
         DC    CL8'DAT     ',AL2(2),AL2(0),A(SRTDATE)
         DC    CL8'DA      ',AL2(1),AL2(0),A(SRTDATE)
         DC    CL8'D       ',AL2(0),AL2(0),A(SRTDATE)
         DC    CL8'JOBNAME ',AL2(6),AL2(0),A(SRTJOBNM)
         DC    CL8'JOBNAM  ',AL2(5),AL2(0),A(SRTJOBNM)
         DC    CL8'JOBNA   ',AL2(4),AL2(0),A(SRTJOBNM)
         DC    CL8'JOBN    ',AL2(3),AL2(0),A(SRTJOBNM)
         DC    CL8'JOB     ',AL2(2),AL2(0),A(SRTJOBNM)
         DC    CL8'JO      ',AL2(1),AL2(0),A(SRTJOBNM)
         DC    CL8'J       ',AL2(0),AL2(0),A(SRTJOBNM)
         DC    CL8'JOBNM   ',AL2(4),AL2(0),A(SRTJOBNM)
         DC    CL8'SYSID   ',AL2(4),AL2(0),A(SRTSYSID)
         DC    CL8'SYSI    ',AL2(3),AL2(0),A(SRTSYSID)
         DC    CL8'SYS     ',AL2(2),AL2(0),A(SRTSYSID)
         DC    CL8'SY      ',AL2(1),AL2(0),A(SRTSYSID)
         DC    CL8'SIZE    ',AL2(3),AL2(0),A(SRTSIZE)
         DC    CL8'SIZ     ',AL2(2),AL2(0),A(SRTSIZE)
         DC    CL8'SI      ',AL2(1),AL2(0),A(SRTSIZE)
         DC    CL8'TRACKS  ',AL2(5),AL2(0),A(SRTSIZE)
         DC    CL8'TRACK   ',AL2(4),AL2(0),A(SRTSIZE)
         DC    CL8'TRAC    ',AL2(3),AL2(0),A(SRTSIZE)
         DC    CL8'TRA     ',AL2(2),AL2(0),A(SRTSIZE)
         DC    CL8'TR      ',AL2(1),AL2(0),A(SRTSIZE)
         DC    CL8'RECORDS ',AL2(6),AL2(0),A(SRTRECS)
         DC    CL8'RECORD  ',AL2(5),AL2(0),A(SRTRECS)
         DC    CL8'RECOR   ',AL2(4),AL2(0),A(SRTRECS)
         DC    CL8'RECO    ',AL2(3),AL2(0),A(SRTRECS)
         DC    CL8'REC     ',AL2(2),AL2(0),A(SRTRECS)
         DC    CL8'RE      ',AL2(1),AL2(0),A(SRTRECS)
         DC    CL8'R       ',AL2(0),AL2(0),A(SRTRECS)
         DC    CL8'TYPE    ',AL2(3),AL2(0),A(SRTTYPE)
         DC    CL8'TYP     ',AL2(2),AL2(0),A(SRTTYPE)
         DC    CL8'TY      ',AL2(1),AL2(0),A(SRTTYPE)
         DC    8X'FF'
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*                        MAIN OPTION TABLE                            *
*                                                                     *
*        THIS TABLE DESCRIBES THE MAIN PROCESSING OPTIONS             *
*        ALONG WITH THE POINTER TO THE PROCESSING ROUTINE FOR         *
*        THAT OPTION.  EACH 16 BYTE ENTRY IS AS FOLLOWS:              *
*                                                                     *
*                                                                     *
*        1)  POSITIONS 1-10 CONTAIN THE OPTION VALUE                  *
*                                                                     *
*        2)  POSITIONS 11-12 CONTAIN THE MACHINE LENGTH OF THE        *
*            OPTION NAME                                              *
*                                                                     *
*        4)  POSITIONS 13-16 CONTAIN THE ADDRESS OF THE               *
*            PROCESSING ROUTINE FOR THAT OPTION.                      *
*                                                                     *
*                                                                     *
***********************************************************************
OPTNTBL  DS    0F
         DC    CL10'DATE=     ',AL2(4),A(PARMDATE)
         DC    CL10'DAT=      ',AL2(3),A(PARMDATE)
         DC    CL10'DA=       ',AL2(2),A(PARMDATE)
         DC    CL10'D=        ',AL2(1),A(PARMDATE)
         DC    CL10'TIME=     ',AL2(4),A(PARMTIME)
         DC    CL10'TIM=      ',AL2(3),A(PARMTIME)
         DC    CL10'TI=       ',AL2(2),A(PARMTIME)
         DC    CL10'JOBNAME=  ',AL2(7),A(PARMJOBN)
         DC    CL10'JOBNAM=   ',AL2(6),A(PARMJOBN)
         DC    CL10'JOBNA=    ',AL2(5),A(PARMJOBN)
         DC    CL10'JOBN=     ',AL2(4),A(PARMJOBN)
         DC    CL10'JOBNM=    ',AL2(5),A(PARMJOBN)
         DC    CL10'SYSTEM=   ',AL2(6),A(PARMSID)
         DC    CL10'SYSTE=    ',AL2(5),A(PARMSID)
         DC    CL10'SYST=     ',AL2(4),A(PARMSID)
         DC    CL10'SYSID=    ',AL2(5),A(PARMSID)
         DC    CL10'SYSI=     ',AL2(4),A(PARMSID)
         DC    CL10'SYS=      ',AL2(3),A(PARMSID)
         DC    CL10'SY=       ',AL2(2),A(PARMSID)
         DC    CL10'SORT=     ',AL2(4),A(PARMSORT)
         DC    CL10'SOR=      ',AL2(3),A(PARMSORT)
         DC    CL10'SO=       ',AL2(2),A(PARMSORT)
         DC    CL10'STOPAFTER=',AL2(9),A(PARMSTOP)
         DC    CL10'STOPAFTE= ',AL2(8),A(PARMSTOP)
         DC    CL10'STOPAFT=  ',AL2(7),A(PARMSTOP)
         DC    CL10'STOPAF=   ',AL2(6),A(PARMSTOP)
         DC    CL10'STOPA=    ',AL2(5),A(PARMSTOP)
         DC    CL10'STOP=     ',AL2(4),A(PARMSTOP)
         DC    CL10'STO=      ',AL2(3),A(PARMSTOP)
         DC    CL10'ST=       ',AL2(2),A(PARMSTOP)
         DC    CL10'STOPCOUNT=',AL2(9),A(PARMSTOP)
         DC    CL10'STOPCOUN= ',AL2(8),A(PARMSTOP)
         DC    CL10'STOPCOU=  ',AL2(7),A(PARMSTOP)
         DC    CL10'STOPCO=   ',AL2(6),A(PARMSTOP)
         DC    CL10'STOPC=    ',AL2(5),A(PARMSTOP)
         DC    CL10'STOPCNT=  ',AL2(7),A(PARMSTOP)
         DC    CL10'STOPCN=   ',AL2(6),A(PARMSTOP)
         DC    CL10'TYPE=     ',AL2(4),A(PARMTYPE)
         DC    CL10'TYP=      ',AL2(3),A(PARMTYPE)
         DC    CL10'TY=       ',AL2(2),A(PARMTYPE)
         DC    CL10'JTYPE=    ',AL2(5),A(PARMTYPE)
         DC    CL10'JTYP=     ',AL2(4),A(PARMTYPE)
         DC    CL10'JTY=      ',AL2(3),A(PARMTYPE)
         DC    CL10'JT=       ',AL2(2),A(PARMTYPE)
         DC    CL10'JOBTYPE=  ',AL2(7),A(PARMTYPE)
         DC    CL10'JOBTYP=   ',AL2(6),A(PARMTYPE)
         DC    CL10'JOBTY=    ',AL2(5),A(PARMTYPE)
         DC    CL10'JOBT=     ',AL2(4),A(PARMTYPE)
         DC    CL10'NOPROD    ',AL2(6),A(PARMNP)
         DC    CL10'NOPRO     ',AL2(5),A(PARMNP)
         DC    CL10'NOPR      ',AL2(4),A(PARMNP)
         DC    CL10'NOP       ',AL2(3),A(PARMNP)
         DC    CL10'NOTEST    ',AL2(6),A(PARMNT)
         DC    CL10'NOTES     ',AL2(5),A(PARMNT)
         DC    CL10'NOTE      ',AL2(4),A(PARMNT)
         DC    CL10'NOT       ',AL2(3),A(PARMNT)
         DC    10X'FF'
         EJECT
         COPY SMFDSECT
         EJECT
***********************************************************************
*                                                                     *
*        TEMPORARY RECORD BUILT FROM SMF RECORD                       *
*                                                                     *
***********************************************************************
NEWDSECT DSECT
NEWSID   DS    CL4     001-004     SMF SYSTEM ID
NEWJBN   DS    CL8     005-012     JOB NAME
NEWSTMN  DS    CL8     013-020     STEP NAME
NEWSTID  DS    PL4     021-024     SORT INITIATION DATE
NEWSTIT  DS    PL4     025-028     SORT INITIATION TIME
NEWSTTT  DS    PL4     029-032     SORT TERMINATION TIME
NEWCHSIZ DS    BL4     033-036     NUMBER OF CHARACTERS SORTED
NEWCHRIN DS    BL4     037-040     NUMBER OF RECORDS INTO SORT
NEWCHROT DS    BL4     041-044     NUMBER OF RECORDS OUT OF SORT
NEWCHINS DS    BL4     045-048     NUMBER OF RECORDS INSERTED
NEWCHDEL DS    BL4     049-052     NUMBER OF RECORDS DELETED
NEWCHCRU DS    BL4     053-056     CORE USED BY THIS SORT
NEWCHCTM DS    BL4     057-060     CPU TIME
NEWWKTRK DS    BL4     061-064     NUMBER OF SORTWK TRACKS
NEWCHTOT DS    BL4     065-068     TOTAL RECORDS SORTED
NEWCHOU  DS    CL1     069-069     OVER/UNDER ALLOCATION INDICATOR
NEWCHALF DS    CL3     070-072     ALLOCATION FACTOR
NEWCHINC DS    XL1     073-073     INCORE SORT FLAG
NEWTYPE  DS    CL1     074-074     JOB TYPE (T/P)
         END
