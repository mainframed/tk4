FLCACHE  TITLE 'CONSOLE INTERFACE PROGRAM TO 3990 CACHE SUBSYSTEM'
***********************************************************************
*                                                                     *
*                            F L C A C H E                            *
*                                                                     *
*        THIS PROGRAM WILL GENERATE IDCAMS LISTDATA AND SETCACHE      *
*        COMMANDS BASED ON MODIFY COMMANDS TO THE TASK OR AS A        *
*        RESPONSE TO A WTOR MESSAGE.  THESE COMMANDS WILL BE          *
*        PASSED TO IDCAMS TO PERFORM THE REQUESTED CACHE 3990-3       *
*        FUNCTIONS.  THE IDCAMS RESPONSES WILL BE SENT TO THE         *
*        OPERATOR CONSOLE AS WTO MESSAGES.  THUS AN OPERATOR,         *
*        THROUGH RESPONSES TO THE OUTSTANDING WTOR FROM THIS          *
*        PROGRAM OR THROUGH MODIFY COMMANDS, CAN MONITOR AND/OR       *
*        ALTER THE CACHE SUBSYSTEM.                                   *
*                                                                     *
*                                                                     *
*        COMMANDS WHICH MAY BE ENTERED ARE AS FOLLOWS:                *
*                                                                     *
*        LIST PINNED                                                  *
*        LIST PINNED VOL(VVVVVV)                                      *
*        LIST PINNED UNIT(UUU)                                        *
*        LIST VOL(VVVVVV)                                             *
*        LIST UNIT(UUU)                                               *
*        LIST SUBSYS                                                  *
*        LIST SUBSYS UNIT(UUU)                                        *
*        LIST SUBSYS VOL(VVVVVV)                                      *
*        LIST DEVICES                                                 *
*        LIST DEVICES UNIT(UUU)                                       *
*        LIST DEVICES VOL(VVVVVV)                                     *
*        CACHE ON SUBSYS                                              *
*        CACHE ON SUBSYS VOL(VVVVVV)                                  *
*        CACHE ON SUBSYS UNIT(UUU)                                    *
*        CACHE OFF SUBSYS                                             *
*        CACHE OFF SUBSYS UNIT(UUU)                                   *
*        CACHE OFF SUBSYS VOL(VVVVVV)                                 *
*        CACHE ON UNIT(UUU)                                           *
*        CACHE OFF UNIT(UUU)                                          *
*        CACHE ON VOL(VVVVVV)                                         *
*        CACHE OFF VOL(VVVVVV)                                        *
*        NVS ON                                                       *
*        NVS OFF                                                      *
*        NVS ON UNIT(UUU)                                             *
*        NVS OFF UNIT(UUU)                                            *
*        NVS ON VOL(VVVVVV)                                           *
*        NVS OFF VOE(VVVVVV)                                          *
*        DFW ON UNIT(UUU)                                             *
*        DFW OFF UNIT(UUU)                                            *
*        DFW ON VOL(VVVVVV)                                           *
*        DFW OFF VOL(VVVVVV)                                          *
*        CFW ON                                                       *
*        CFW OFF                                                      *
*        CFW ON UNIT(UUU)                                             *
*        CFW OFF UNIT(UUU)                                            *
*        CFW ON VOL(VVVVVV)                                           *
*        CFW OFF VOL(VVVVVV)                                          *
*        END                                                          *
*        STOP                                                         *
*        CLOSE                                                        *
*                                                                     *
*                                                                     *
*                      *****  N O T E *****                           *
*                                                                     *
*                                                                     *
*        EACH COMMAND ISSUED TO THE 3990-3 SUBSYSTEM REQUIRES         *
*        EITHER A VOLUME OR A DEVICE ADDRESS.  THIS IS EVEN           *
*        TRUE FOR COMMANDS WHICH AFFECT THE ENTIRE SUBSYSTEM          *
*        SINCE THERE MAY BE MORE THAN ONE 3990-3 SUBSYSTEM            *
*        IN THE INSTALLATION AND THE ADDRESS OR VOLSER IS             *
*        NEEDED TO SPECIFY WHICH SUBSYSTEM IS BEING MODIFIED          *
*        OR INTERROGATED.                                             *
*                                                                     *
*        SEVERAL OF THE COMMANDS WILL UTILIZE A DEFAULT               *
*        VOLSER IF A VOL OR UNIT PARAMETER IS NOT ENTERED.            *
*        THE DEFAULT IS DEFINED AT LABEL DFLTVOL AND SHOULD           *
*        BE SET TO THE APPROPRIATE VALUE FOR YOUR INSTALLATION.       *
*        THIS VALUE CAN ALSO BE OVERRIDEN BY THE INPUT PARM ON        *
*        THE EXECUTE STATEMENT.  THE PARM, IF PRESENT, MUST BE        *
*        A 1 TO 6 CHARACTER ALPHANUMERIC VALUE.                       *
*                                                                     *
*        IDCAMS IS NOT VERY CONSISTENT IN THE USE OF VOLSER           *
*        AND DEVICE ADDRESS IN THE COMMANDS.  SOME COMMANDS           *
*        SIMPLY DO NOT ALLOW THE UNIT ADDRESS TO BE USED              *
*        WHILE ALL ALLOW THE VOLSER TO BE SPECIFIED.  WHERE           *
*        POSSIBLE, EITHER THE UNIT ADDRESS AND VOLSER MAY BE          *
*        USED IN THE COMMAND.  IF A UNIT ADDRESS IS SPECIFIED         *
*        WHERE ONLY VOLSER MAY BE USED, THE PROGRAM WILL              *
*        ATTEMPT TO DETERMINE THE VOLSER FROM THE SYSTEM              *
*        CONTROL BLOCKS AND USE THAT FOR THE CONTROL CARD.            *
*                                                                     *
*        THIS PROGRAM COULD HAVE BEEN DESIGNED TO DO MORE             *
*        THINGS, ESPECIALLY WITH PINNED DATA, BUT WE DID NOT          *
*        WANT THE OPERATORS TO HAVE THAT MUCH POWER TO REALLY         *
*        SCREW THINGS UP.  WE FELT THAT SYSTEMS PROGRAMMER            *
*        SHOULD DO THAT ALL BY HIM/HERSELF.                           *
*                                                                     *
*                                                                     *
*                                                                     *
*        BECAUSE THIS PROGRAM USES THE MODESET MACRO AND ALSO         *
*        INTERFACES WITH IDCAMS WHICH IS APF AUTHORIZED, THIS         *
*        PROGRAM MUST ALSO BE APF AUTHORIZED.                         *
*                                                                     *
*                                                                     *
*        THE STARTED TASK OR JOB WHICH WILL RUN THIS UTILITY          *
*        PROGRAM MAY REQUIRE AUTHORIZATION FROM YOUR SECURITY         *
*        SYSTEM TO ISSUE THE APPROPRIATE SETCACHE COMMANDS.  SEE      *
*        THE IBM PUBLICATION GA32-0100 - IBM 3990 STORAGE CONTROL     *
*        PLANNING, INSTALLATION AND STORAGE ADMINISTRATION GUIDE      *
*        IN THE SECTION DESCRIBING THE SYSTEM AUTHORIZATION           *
*        FACILITY.                                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*      THE AUTHORS INCLUDING FOOD LION, ITS OFFICERS,                 *
*      DIRECTORS, AND EMPLOYEES MAKE NO REPRESENTATION OR             *
*      WARRANTY OF ANY KIND WHATSOEVER, INCLUDING, BUT NOT            *
*      LIMITED TO, REPRESENTATIONS OR WARRANTIES, EXPRESS OR          *
*      IMPLIED, OR MERCHANTABILITY, FITNESS FOR USE OR PURPOSE,       *
*      ACCURACY OR COMPLETENESS OF PROCESSES, PROCEDURES,             *
*      DESIGNS, DEFINITIONS, INSTRUCTIONS, INFORMATION, OR            *
*      FUNCTIONING OF ANY PROGRAMS, DOCUMENTS, OR RELATED             *
*      MATERIALS; THE AUTHORS FURTHER EXPRESSLY DISCLAIM ANY          *
*      KNOWLEDGE OF PURPOSE FOR WHICH THESE PROGRAMS,                 *
*      DOCUMENTS, OR RELATED MATERIAL MAY BE UTILIZED OR THEIR        *
*      APPLICABILITY FOR SUCH USE, NOR SHALL THE FACT OF MAKING       *
*      THEM AVAILABLE CONSTITUTE ANY SUCH REPRESENTATION,             *
*      WARRANTY, OR KNOWLEDGE; NOR DO THE AUTHORS ASSUME ANY          *
*      LIABILITY, RESPONSIBILITY, OR OBLIGATION ARISING FROM          *
*      THE USE OR MALFUNCTIONING OF OF THESE COMPUTER PROGRAMS,       *
*      DOCUMENTATION, OR RELATED MATERIALS.                           *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   F L C A C H E              *
*                                                                     *
*        01)  ABEND        SYS1.MACLIB                                *
*        02)  CLOSE        SYS1.MACLIB                                *
*        03)  CVT          SYS1.MODGEN                                *
*        04)  DCB          SYS1.MACLIB                                *
*        05)  DCBD         SYS1.MACLIB                                *
*        06)  EXTRACT      SYS1.MACLIB                                *
*        07)  GET          SYS1.MACLIB                                *
*        08)  IEFUCBOB     SYS1.MACLIB                                *
*        09)  IEZCIB       SYS1.MACLIB                                *
*        10)  IHAECB       SYS1.MACLIB                                *
*        11)  LINK         SYS1.MACLIB                                *
*        12)  MODESET      SYS1.MACLIB                                *
*        13)  OPEN         SYS1.MACLIB                                *
*        14)  PUT          SYS1.MACLIB                                *
*        15)  QEDIT        SYS1.MACLIB                                *
*        16)  RETURN       SYS1.MACLIB                                *
*        17)  SAVE         SYS1.MACLIB                                *
*        18)  WAIT         SYS1.MACLIB                                *
*        19)  WTO          SYS1.MACLIB                                *
*        20)  WTOR         SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*               L I N K A G E    E D I T O R    I N F O               *
*                                                                     *
*        SIZE:       7K                                               *
*                                                                     *
*        LINKAGE EDITOR ATTRIBUTES:  NON-REENTRANT                    *
*                                    NON-REUSEABLE                    *
*                                    NON-REFRESHABLE                  *
*                                    AUTHORIZED                       *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                          SAMPLE JCL                                 *
*                                                                     *
*     //STEP1    EXEC PGM=FLCACHE ,PARM='DFLT VOLSER'                 *
*     //SYSPRINT DD  UNIT=SYSDA,SPACE=(TRK,(1,1))                     *
*     //SYSIN    DD  UNIT=SYSDA,SPACE=(TRK,(1,1))                     *
*                                                                     *
*     THE PARM, IF USED, WILL SPECIFY THE DEFAULT VOLSER TO BE        *
*     USED BY SOME OF THE COMMANDS.  THIS ALLOWS ONE PROGRAM TO       *
*     HANDLE MULTIPLE 3990-3 SUBSYSTEMS.                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
***********************************************************************
*                                                                     *
*        START OF PROGRAM                                             *
*                                                                     *
***********************************************************************
FLCACHE  CSECT
         SAVE  (14,12)             SAVE REGISTERS
         LR    R11,R15             SET FIRST BASE REGISTER
         LA    R12,2048(R11)       SET SECOND
         LA    R12,2048(R12)           BASE REGISTER
         USING FLCACHE,R11,R12     SET PROGRAM ADDRESSABILITY
         LA    R15,SAVEAREA        LOAD ADDRESS OF NEW SAVE
         ST    R15,8(R13)          STORE NEW SAVE ADDR IN OLD
         ST    R13,4(R15)          STORE OLD SAVE ADDR IN NEW
         LR    R13,R15             SET NEW SAVE ADDRESS
         EJECT
***********************************************************************
*                                                                     *
*        GET THE OPTIONAL DEFAULT VOLSER FROM THE INPUT PARM          *
*                                                                     *
***********************************************************************
PARM     LTR   R1,R1          TEST PARM POINTER
         BZ    NOPARM         ZERO, NO PARM
         ICM   R1,B'1111',0(R1) LOAD ADDR OF PARM
         BZ    NOPARM         ZERO, NO PARM
         LH    R2,0(R1)       LOAD LENGTH OF PARM
         LTR   R2,R2          TEST LENGTH OF PARM
         BZ    NOPARM         ZERO, NO PARM
         CH    R2,=H'6'       SEE IF EXCEEDS 6 CHARACTERS
         BH    ERROR20        YES, ERROR
         LA    R14,2(R1)      LOAD START ADDRESS OF PARM
         LR    R15,R2         SET LOOP COUNTER
PARM01   CLI   0(R14),C'A'    PERFORM SIMPLE ALPHANUMERIC CHECK
         BL    ERROR20        NO, ERROR
         LA    R14,1(R14)     INCREMENT TO NEXT CHAR OF VOLSER
         BCT   R15,PARM01     LOOP
PARM02   MVC   DFLTVOL,BLANKS BLANK THE DEFAULT VOLSER
         BCTR  R2,0           MAKE MACHINE LENGTH
         EX    R2,MOVEVOL     SET NEW DEFAULT VOLSER
         B     NOPARM         GET OUT
MOVEVOL  MVC   DFLTVOL(0),2(R1) **** EXECUTE ONLY ****
NOPARM   MVC   DFLTDEVT,BLANKS     SET DEFAULT DEVICE TO BLANKS
         MVC   SVOL,DFLTVOL        SET DEFAULT VOLSER FOR SEARCH
         BAL   R14,VOLSEAR         GET FIND VOLSER IN SYSTEM
         LTR   R15,R15             TEST RETURN CODE
         BNZ   OPERINT             NOT ZERO, CONTINUE
         MVC   DFLTDEVT,SDEVT      SAVE DEVICE TYPE FOR VOLSER
         EJECT
***********************************************************************
*                                                                     *
*        SET UP THE STOP/MODIFY INTERFACE                             *
*                                                                     *
***********************************************************************
OPERINT  OI    SWITCH,NEEDWTOR     TURN ON NEED TO ISSUE WTOR IND
         EXTRACT EXTANS,FIELDS=COMM GET ADDR CMD SCHED COMM LIST
         L     R8,EXTANS           LOAD ADDRESS CMD SCHED COMM LIST
         USING COMMAREA,R8         SET ADDRESSABILITY TO COMM LIST
         L     R4,COMMCIB          GET POINTER TO CIB
         USING CIB,R4              SET ADDRESSABILITY TO CIB
         LTR   R4,R4               TEST CIB ADDRESS
         BZ    NOTSTC              ZERO, NOT A STARTED TASK
         QEDIT ORIGIN=COMMCIB,BLOCK=(4) FREE START CIB
NOTSTC   QEDIT ORIGIN=COMMCIB,CIBCTR=1 SET CIB LIMIT
         DROP  R4                  DROP ADDRESSABILITY TO CIB
         DROP  R8                  DROP ADDRESSABILITY TO COMM LIST
         EJECT
***********************************************************************
*                                                                     *
*        ISSUE A WTOR MESSAGE (IF NEEDED) TO GET ANOTHER COMMAND      *
*                                                                     *
***********************************************************************
PROMPT   L     R8,EXTANS           LOAD ADDRESS CMD SCHED COMM LIST
         USING COMMAREA,R8         SET ADDRESSABILITY TO COMM LIST
         L     R4,COMMCIB          GET POINTER TO CIB
         USING CIB,R4              SET ADDRESSABILITY TO CIB
         XC    VERB,VERB           ZERO THE VERB INDICATORS
         XC    OPTIONS,OPTIONS     ZERO THE OPTIONS
         XC    OPERANDS(LOPNDS),OPERANDS ZERO THE OPERAND POINTERS
         TM    SWITCH,NEEDWTOR     SEE IF NEED TO ISSUE WTOR
         BNO   WAIT1               NO, BRANCH
         MVC   WTORMSG1,BLANKS     BLANK MESSAGE AREA
         MVC   WTORMSG1(40),=CL40'FLIDC000I ENTER FLCACHE COMMAND'
         MVC   WTOANS1,BLANKS      BLANK THE WTOR ANSWER AREA
         XC    WTORECB1,WTORECB1   CLEAR THE WTOR ECB
         WTOR  ,WTOANS1,50,WTORECB1,MF=(E,WTORL1)
         NI    SWITCH,255-NEEDWTOR TURN OFF NEED TO ISSUE WTOR IND
         EJECT
***********************************************************************
*                                                                     *
*        WAIT FOR A STOP/MODIFY COMMAND OR A REPLY TO THE WTOR.       *
*                                                                     *
***********************************************************************
WAIT1    L     R1,COMMECB          LOAD ADDR OF STOP/MODIFY ECB
         ST    R1,ECB1             SAVE IN ECB LIST
         LA    R1,WTORECB1         LOAD ADDR OF WTOR ECB
         ST    R1,ECB2             SAVE IN ECB LIST
         OC    ECB2,=X'80000000'   FLAG END OF LIST
         WAIT  1,ECBLIST=ECB1      WAIT FOR STOP/MODIFY OR WTOR
***********************************************************************
*                                                                     *
*        SEE IF POSTED FOR A STOP/MODIFY COMMAND OR A REPLY TO        *
*        THE WTOR.                                                    *
*                                                                     *
***********************************************************************
         L     R1,ECB1             LOAD ADDR STOP/MODIFY ECB
         USING ECB,R1              SET ADDRESSABILITY TO ECB
         TM    ECBCC,ECBPOST       SEE IF POSTED
         BO    TYPEMOD             YES, GO PROCESS STOP/MODIFY
         B     TYPEWTOR            NO, MUST BE WTOR RESPONSE
         DROP  R1                  DROP ADDRESSABILITY TO ECB
         EJECT
***********************************************************************
*                                                                     *
*        A STOP/MODIFY COMMAND WAS ISSUED                             *
*                                                                     *
*        SAVE THE MODIFY DATA AND REESTABLISH THE STOP/MODIFY         *
*        INTERFACE FOR ANOTHER COMMAND.                               *
*                                                                     *
***********************************************************************
TYPEMOD  MVC   CMD,BLANKS          BLANK THE COMMAND AREA
         L     R4,COMMCIB          LOAD ADDR OF CIB
         CLI   CIBVERB,CIBSTOP     WAS STOP COMMAND ISSUED?
         BE    RETURN              YES, BRANCH
         CLI   CIBVERB,CIBMODFY    WAS MODIFY COMMAND ISSUED?
         BNE   ERROR23             NO, GO ISSUE WARNING MESSAGE
MODIFY   LH    R15,CIBDATLN        LOAD MODIFY DATA LENGTH
         LTR   R15,R15             CHECK LENGTH
         BZ    NEXTMOD             ZERO, IGNORE
         CH    R15,=H'50'          SEE IF EXCEEDS 50 BYTES
         BNH   MODIFY1             NO, BRANCH
         LA    R15,50              SET TO MAX LENGTH
MODIFY1  BCTR  R15,0               MAKE MACHINE LENGTH FOR EX
         EX    R15,MOVEMDFY        MOVE MODIFY INFO TO SAVE AREA
         B     CHKINPUT            BYPASS EXECUTED INSTRUCTION
MOVEMDFY MVC   CMD(0),CIBDATA      **** EXECUTE ONLY ****
CHKINPUT OC    CMD,BLANKS          MAKE UPPER CASE
NEXTMOD  QEDIT ORIGIN=COMMCIB,BLOCK=(4) FREE LAST CIB
         MODESET KEY=ZERO          GET INTO KEY ZERO
         L     R1,COMMECB          LOAD ADDR OF STOP/MODIFY ECB
         XC    0(4,R1),0(R1)       CLEAR ECB IN LSQA FOR NEXT MODIFY
         MODESET KEY=NZERO         GET OUT OF KEY ZERO
         B     DOIT                GO PROCESS THIS COMMAND
         DROP  R4                  DROP ADDRESSABILITY TO CIB
         DROP  R8                  DROP ADDRESSABILITY TO COMM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*        A REPLY TO THE WTOR WAS MADE                                 *
*                                                                     *
***********************************************************************
TYPEWTOR MVC   CMD,BLANKS          BLANK THE COMMAND AREA
         MVC   CMD,WTOANS1         SAVE WTOR RESPONSE
         OC    CMD,BLANKS          MAKE UPPER CASE
         OI    SWITCH,NEEDWTOR     TURN ON NEED TO ISSUE WTOR IND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE COMMAND                                          *
*                                                                     *
***********************************************************************
DOIT     OC    CMD,BLANKS          MAKE THE RESPONSE UPPER CASE
         CLC   CMD(8),=CL8'QUIT'   SEE IF WANT TO STOP
         BE    RETURN              YES, GET OUT
         CLC   CMD(8),=CL8'STOP'   SEE IF WANT TO STOP
         BE    RETURN              YES, GET OUT
         CLC   CMD(8),=CL8'CLOSE'  SEE IF WANT TO STOP
         BE    RETURN              YES, GET OUT
         CLC   CMD(8),=CL8'END'    SEE IF WANT TO STOP
         BE    RETURN              YES, GET OUT
         CLC   CMD(9),=CL9'SHUTDOWN' SEE IF WANT TO STOP
         BE    RETURN              YES, GET OUT
         CLC   CMD,=CL8'ABEND'     SEE IF RESPONSE IS ABEND
         BE    ABEND               NO, GO ASK AGAIN
CPRM     MVC   RESPONSE(50),CMD    SAVE THE COMMAND
         LA    R9,RESPONSE         POINT TO COPY OF RESPONSE
         LA    R8,51               GET LENGTH OF RESPONSE
***********************************************************************
*                                                                     *
*        PARSE THE COMMAND INTO A MAXIMUM OF 4 FIELDS.  IF MORE       *
*        THAN 4 ARE ENTERED, SKIP THE COMMAND.                        *
*                                                                     *
***********************************************************************
CPRM01   LR    R2,R9               SAVE START ADDRESS OF COMMAND
         LA    R4,OPERANDS         LOAD ADDRESS OF COMMAND OPERANDS TBL
         SLR   R15,R15             SET NUMBER OF OPERANDS TO ZERO
CPRM02   CLI   0(R2),C','          SEE IF AN OPTIONAL COMMA
         BNE   CPRM03              NO, BRANCH
         MVI   0(R2),C' '          TREAT A COMMA LIKE A BLANK
CPRM03   CLI   0(R2),C' '          SEE IF START OF AN OPERAND
         BNE   CPRM04              YES, BRANCH
         LA    R2,1(R2)            INCREMENT TO NEXT CHAR OF COMMAND
         BCT   R8,CPRM02           LOOP FOR NEXT CHAR OF COMMAND
         B     CPRM07              END OF COMMAND, GO CHECK OPERANDS
CPRM04   CH    R15,=H'4'           SEE IF ALREADY HAVE 4 OPERANDS
         BNL   ERROR02             YES, ERROR
         ST    R2,0(R4)            SAVE ADDRESS OF FIRST OPERAND
         LA    R4,4(,R4)           INCREMENT TO NEXT OPERAND ADDRESS
         LA    R15,1(,R15)         ADD 1 TO OPERAND COUNTER
CPRM05   CLI   0(R2),C','          SEE IF AN OPTIONAL COMMA
         BNE   CPRM06              YES, BRANCH
         MVI   0(R2),C' '          TREAT A COMMA LIKE A BLANK
CPRM06   CLI   0(R2),C' '          SEE IF END OF OPERAND
         BE    CPRM02              YES, GO LOOK FOR START OF NEXT
         LA    R2,1(R2)            INCREMENT TO NEXT CHAR OF COMMAND
         BCT   R8,CPRM05           LOOP FOR NEXT CHAR OF COMMAND
CPRM07   LTR   R15,R15             TEST OPERAND COUNTER
         BZ    ERROR01             ZERO, NULL COMMAND, ERROR
         LA    R10,OPERANDS        LOAD ADDRESS OF OPERAND ADDRESS TBL
         L     R2,0(R10)           LOAD ADDRESS OF FIRST OPERAND
CPRM08   CLC   0(5,R2),=C'LIST '   SEE IF LIST VERB
         BNE   CPRM08A             NO, BRANCH
         MVI   VERB,LIST           TURN ON LIST INDICATOR
         B     CPRM09              GO CHECK OPERANDS
CPRM08A  CLC   0(6,R2),=C'CACHE ' SEE IF CACHE VERB
         BNE   CPRM08B             NO, BRANCH
         MVI   VERB,CACHE          TURN ON CACHE INDICATOR
         B     CPRM09              GO CHECK OPERANDS
CPRM08B  CLC   0(4,R2),=C'NVS '    SEE IF NVS VERB
         BNE   CPRM08C             NO, BRANCH
         MVI   VERB,NVS            TURN ON NVS INDICATOR
         B     CPRM09              GO CHECK OPERANDS
CPRM08C  CLC   0(4,R2),=C'DFW '    SEE IF DFW VERB
         BNE   CPRM08D             NO, BRANCH
         MVI   VERB,DFW            TURN ON DFW INDICATOR
         B     CPRM09              GO CHECK OPERANDS
CPRM08D  CLC   0(4,R2),=C'CFW '    SEE IF CFW VERB
         BNE   ERROR03             NO, INVALID VERB, ERROR
         MVI   VERB,CFW            TURN ON CFW INDICATOR
         B     CPRM09              GO CHECK OPERANDS
CPRM09   LA    R10,4(,R10)         POINT TO NEXT OPERAND ADDRESS
         ICM   R2,B'1111',0(R10)   LOAD ADDRESS OF OPERAND
         BZ    BCRD00              ZERO, DONE
         CLC   0(7,R2),=C'PINNED ' SEE IF 'PINNED' OPTION
         BNE   CPRM09A             NO, BRANCH
         OI    OPTIONS,PINNED      TURN ON 'PINNED' OPTION
         B     CPRM09              GO PROCESS NEXT OPERAND
CPRM09A  CLC   0(7,R2),=C'SUBSYS ' SEE IF 'SUBSYS' OPTION
         BNE   CPRM09B             NO, BRANCH
         OI    OPTIONS,SUBSYS      TURN ON 'SUBSYS' OPTION
         B     CPRM09              GO PROCESS NEXT OPERAND
CPRM09B  CLC   0(8,R2),=C'DEVICES ' SEE IF 'DEVICE' OPTION
         BE    CPRM09B1            YES, BRANCH
         CLC   0(7,R2),=C'DEVICE ' SEE IF 'DEVICE' OPTION
         BE    CPRM09B1            YES, BRANCH
         CLC   0(4,R2),=C'DEV '    SEE IF 'DEVICE' OPTION
         BNE   CPRM09C             NO, BRANCH
CPRM09B1 OI    OPTIONS,DEVICE      TURN ON 'DEVICE' OPTION
         B     CPRM09              GO PROCESS NEXT OPERAND
CPRM09C  CLC   0(3,R2),=C'ON '     SEE IF 'ON' OPTION
         BNE   CPRM09D             NO, BRANCH
         OI    OPTIONS,ON          TURN ON 'ON' OPTION
         B     CPRM09              GO PROCESS NEXT OPERAND
CPRM09D  CLC   0(4,R2),=C'OFF '    SEE IF 'OFF' OPTION
         BNE   CPRM09E             NO, BRANCH
         OI    OPTIONS,OFF         TURN ON 'OFF' OPTION
         B     CPRM09              GO PROCESS NEXT OPERAND
CPRM09E  CLC   0(5,R2),=C'UNIT('   SEE IF 'UNIT' OPTION
         BNE   CPRM09F             NO, BRANCH
         OI    OPTIONS,UNIT        TURN ON 'UNIT' OPTION
         SLR   R15,R15             SET UNITNAME LENGTH
         LA    R1,5(R2)            POINT TO START OF UNIT ADDRESS
CPRM09E1 CLC   0(2,R1),=C') '      SEE IF END OF UNIT ADDRESS
         BE    CPRM09E2            YES, BRANCH
         CLI   0(R1),C' '          SEE IF IMPROPER END OF UNIT ADDRESS
         BE    ERROR04             YES, ERROR
         LA    R15,1(,R15)         ADD 1 TO LENGTH COUNTER
         CH    R15,=H'3'           SEE IF EXCEEDS MAXIMUM LENGTH
         BH    ERROR04             YES, ERROR
         LA    R1,1(,R1)           POINT TO NEXT POSITION OF UNIT ADDR
         B     CPRM09E1            LOOP
CPRM09E2 CH    R15,=H'3'           SEE IF CORRECT LENGTH OF UNIT ADDR
         BNE   ERROR04             NO, ERROR
         MVC   UNITADD,5(R2)       SAVE UNIT ADDRESS
***********************************************************************
*                                                                     *
*        CALL UCBSEARCH ROUTINE TO SEE IF THE SPECIFIED UNIT          *
*        ADDRESS IS ON THE SYSTEM.  IF IT IS, EXTRACT THE VOLSER      *
*        AND UNIT TYPE.  IF NOT, IT IS AN ERROR.                      *
*                                                                     *
***********************************************************************
CPRM09E3 MVC   UVOL,BLANKS         BLANK THE VOLSER FOR THE UNIT
         MVC   UDEVT,BLANKS        BLANK THE DEVICE TYPE FOR THE UNIT
         BAL   R14,UCBSEAR         GET FIND UCB IN SYSTEM
         CH    R15,=H'4'           TEST RETURN CODE
         BH    ERROR21             GREATER THAN 4, ERROR
         MVC   UVOL,SVOL           SAVE VOLSER
         MVC   UDEVT,SDEVT         SAVE DEVICE TYPE
         B     CPRM09              CONTINUE
CPRM09F  CLC   0(4,R2),=C'VOL('    SEE IF 'VOL' OPTION
         BNE   CPRM09G             NO, BRANCH
         OI    OPTIONS,VOL         TURN ON 'VOL' OPTION
         SLR   R15,R15             SET UNITNAME LENGTH
         LA    R1,4(R2)            POINT TO START OF UNIT ADDRESS
CPRM09F1 CLC   0(2,R1),=C') '      SEE IF END OF VOLSER
         BE    CPRM09F2            YES, BRANCH
         CLI   0(R1),C' '          SEE IF IMPROPER END OF VOLSER
         BE    ERROR05             YES, ERROR
         LA    R15,1(,R15)         ADD 1 TO LENGTH COUNTER
         CH    R15,=H'6'           SEE IF EXCEEDS MAXIMUM LENGTH
         BH    ERROR05             YES, ERROR
         LA    R1,1(,R1)           POINT TO NEXT POSITION OF VOLSER
         B     CPRM09F1            LOOP
CPRM09F2 LTR   R15,R15             TEST LENGTH OF VOLSER
         BZ    ERROR05             NO, ERROR
         CH    R15,=H'6'           SEE IF CORRECT LENGTH OF VOLSER
         BH    ERROR05             NO, ERROR
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVOLSER         SAVE VOLSER
***********************************************************************
*                                                                     *
*        CALL VOLSEARCH ROUTINE TO SEE IF THE SPECIFIED VOLSER        *
*        IS ON THE SYSTEM.  IF IT IS, EXTRACT THE DEVICE TYPE.        *
*        IF NOT, IT IS AN ERROR.                                      *
*                                                                     *
***********************************************************************
CPRM09F3 MVC   SVOL,VOLSER         SET VOLSER FOR SEARCH
         BAL   R14,VOLSEAR         GET FIND VOLSER IN SYSTEM
         LTR   R15,R15             TEST RETURN CODE
         BNZ   CPRM09F4            NOT ZERO, ERROR
         MVC   DEVTYPE,SDEVT       SAVE DEVICE TYPE FOR VOLSER
         B     CPRM09              CONTINUE
CPRM09F4 CH    R15,=H'4'           SEE IF VOLUME NOT FOUND CONDITION
         BE    ERROR15             YES, ERROR
         B     ERROR16             NO, MUST BE WRONG DEVICE TYPE
MVOLSER  MVC   VOLSER(0),4(R2)     **** EXECUTE ONLY ****
         SPACE 3
CPRM09G  B     ERROR06             UNKNOWN OPERAND, ERROR
         EJECT
***********************************************************************
*                                                                     *
*        BUILD THE IDCAMS CONTROL CARD FOR THE SPECIFIED COMMAND      *
*        OPTION                                                       *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        ASK FOR ALTER PERMISSION FOR SOME COMMANDS                   *
*                                                                     *
***********************************************************************
BCRD00   BAL   R14,WTOR            GO TO WTOR ROUTINE
         SPACE 3
***********************************************************************
*                                                                     *
*        PROCESS THE LIST COMMANDS                                    *
*                                                                     *
***********************************************************************
BCRD01   TM    VERB,LIST           SEE IF LIST OPTION
         BNO   BCRD02              NO, BRANCH
BCRD01A  TM    OPTIONS,PINNED      SEE IF PINNED OPTION
         BNO   BCRD01B             NO, BRANCH
         MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' LISTDATA' SET IDCAMS VERB
         MVC   COMMAND+11(6),=C'PINNED' SET PINNED OPERATION
         TM    OPTIONS,UNIT        SEE IF UNIT ADDRESS SPECIFIED
         BNO   BCRD01A1            NO, BRANCH
         CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),UVOL  SET DEFAULT FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01A1 TM    OPTIONS,VOL         SEE IF VOL SPECIFIED
         BNO   BCRD01A2            NO, BRANCH
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DEVTYPE SET SPECIFIED DEVTYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01A2 CLI   DFLTDEVT,C' '       SEE IF DEFAULT DEVICE TYPE FOUND
         BE    ERROR18             NO, BAD DEFAULT VOLSER
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DFLTDEVT SET DEFAULT DEVTYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),DFLTVOL SET DEFAULT VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01B  TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION
         BNO   BCRD01C             NO, BRANCH
         TM    OPTIONS,DEVICE      SEE IF ALSO DEVICE OPTION
         BO    BCRD01C             YES, IGNORE SUBSYS OPTION
         MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' LISTDATA' SET IDCAMS VERB
         MVC   COMMAND+11(6),=C'STATUS' SET STATUS OPERATION
BCRD01B1 TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   BCRD01B2            NO, BRANCH
         MVC   COMMAND+19(9),=C'UNUM(   )' SET DEFAULT UNIT ADDR
         MVC   COMMAND+24(3),UNITADD SET SPECIFIED UNIT ADDRESS
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01B2 TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   BCRD01B3            NO, BRANCH
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DEVTYPE SET SPECIFIED DEVTYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01B3 CLI   DFLTDEVT,C' '       SEE IF DEFAULT DEVICE TYPE FOUND
         BE    ERROR18             NO, BAD DEFAULT VOLSER
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DFLTDEVT SET DEFAULT DEVTYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),DFLTVOL SET DEFAULT VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01C  TM    OPTIONS,DEVICE      SEE IF DEVICE OPTION
         BNO   BCRD01D             NO, BRANCH
         MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' LISTDATA' SET IDCAMS VERB
         MVC   COMMAND+11(7),=C'DSTATUS' SET DSTATUS OPERATION
BCRD01C1 TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   BCRD01C2            NO, BRANCH
         CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),UVOL  SET DEFAULT FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01C2 TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   BCRD01C3            NO, BRANCH
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DEVTYPE SET SPECIFIED DEVTYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01C3 CLI   DFLTDEVT,C' '       SEE IF DEFAULT DEVICE TYPE FOUND
         BE    ERROR18             NO, BAD DEFAULT VOLSER
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DFLTDEVT SET DEFAULT DEVTYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),DFLTVOL SET DEFAULT VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01D  TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   BCRD01E             NO, BRANCH
         MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' LISTDATA' SET IDCAMS VERB
         MVC   COMMAND+11(13),=C'DEVICE COUNTS' SET FOR DEVICE COUNTS
         MVC   COMMAND+25(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+30(4),DEVTYPE SET SPECIFIED DEVTYPE
         MVC   COMMAND+36(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+40(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD01E  TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   ERROR07             NO, ERROR
         CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' LISTDATA' SET IDCAMS VERB
         MVC   COMMAND+11(13),=C'DEVICE COUNTS' SET FOR DEVICE COUNTS
         MVC   COMMAND+25(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+30(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+36(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+40(6),UVOL  SET VOLSER FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE CACHE COMMANDS                                   *
*                                                                     *
***********************************************************************
BCRD02   TM    VERB,CACHE          SEE IF CACHE OPTION
         BNO   BCRD03              NO, BRANCH
         TM    OPTIONS,DEVICE      SEE IF DEVICE OPTION
         BO    ERROR22             YES, NOT ALLOWED WITH CACHE COMMAND
BCRD02A  MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' SETCACHE' SET IDCAMS VERB
         TM    OPTIONS,ON+OFF      MAKE SURE ON OR OFF SPECIFIED
         BZ    ERROR08             NEITHER ON, ERROR
BCRD02A1 TM    OPTIONS,ON          SEE IF 'ON' OPTION SPECIFIED
         BNO   BCRD02A2            NO, BRANCH
         MVC   COMMAND+11(2),=C'ON' SET TO TURN ON OPTION
         B     BCRD02B             CONTINUE
BCRD02A2 MVC   COMMAND+11(3),=C'OFF' SET TO TURN OFF OPTION
BCRD02B  TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION
         BNO   BCRD02C             NO, BRANCH
         MVC   COMMAND+16(6),=C'SUBSYS' SET SUBSYS OPERATION
BCRD02C  TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   BCRD02D             NO, BRANCH
         TM    OPTIONS,ON+SUBSYS   SEE IF 'ON SUBSYS' OPTION
         BO    BCRD02C1            YES, BRANCH
         MVC   COMMAND+23(9),=C'UNUM(   )' SET DEFAULT UNIT ADDR
         MVC   COMMAND+28(3),UNITADD SET SPECIFIED UNIT ADDRESS
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD02C1 CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND+23(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+28(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+34(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+38(6),UVOL  SET VOLSER FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD02D  TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   BCRD02F             NO, BRANCH
BCRD02E  MVC   COMMAND+23(10),=C'UNIT(    )' SET DEFAULT DEVICE TYPE
         MVC   COMMAND+28(4),DEVTYPE SET DEVICE TYPE FOR VOLSER
         MVC   COMMAND+34(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+38(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD02F  TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION
         BNO   ERROR09             NO, ERROR
         CLI   DFLTDEVT,C' '       SEE IF DEFAULT DEVICE TYPE FOUND
         BE    ERROR18             NO, BAD DEFAULT VOLSER
         MVC   COMMAND+23(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+28(4),DFLTDEVT SET DEFAULT DEVICE TYPE
         MVC   COMMAND+34(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+38(6),DFLTVOL SET DEFAULT VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE NON-VOLATILE STORAGE (NVS) COMMAND               *
*                                                                     *
***********************************************************************
BCRD03   TM    VERB,NVS            SEE IF NVS OPTION
         BNO   BCRD04              NO, BRANCH
         TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION SPECIFIED
         BO    ERROR17             YES, ERROR
         TM    OPTIONS,DEVICE      SEE IF DEVICE OPTION
         BO    ERROR22             YES, NOT ALLOWED WITH NVS COMMAND
BCRD03A  MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' SETCACHE' SET IDCAMS VERB
         MVC   COMMAND+11(3),=C'NVS' SET NVS OPTION
         TM    OPTIONS,ON+OFF      MAKE SURE ON OR OFF SPECIFIED
         BZ    ERROR10             NEITHER ON, ERROR
BCRD03A1 TM    OPTIONS,ON          SEE IF 'ON' OPTION SPECIFIED
         BNO   BCRD03A2            NO, BRANCH
         MVC   COMMAND+15(2),=C'ON' SET TO TURN ON OPTION
         B     BCRD03B             CONTINUE
BCRD03A2 MVC   COMMAND+15(3),=C'OFF' SET TO TURN OFF OPTION
BCRD03B  TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   BCRD03C             NO, BRANCH
         TM    OPTIONS,ON          SEE IF 'ON' OPTION
         BO    BCRD03B1            YES, BRANCH
         MVC   COMMAND+19(9),=C'UNUM(   )' SET DEFAULT UNIT ADDR
         MVC   COMMAND+24(3),UNITADD SET SPECIFIED UNIT ADDRESS
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD03B1 CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),UVOL  SET VOLSER FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD03C  TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   BCRD03E             NO, USE DEFAULT VOL
BCRD03D  MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DEVTYPE SET DEVICE TYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD03E  CLI   DFLTDEVT,C' '       SEE IF DEFAULT DEVICE TYPE FOUND
         BE    ERROR18             NO, BAD DEFAULT VOLSER
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DFLTDEVT SET DEFAULT DEVICE TYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),DFLTVOL SET DEFAULT VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE DASD FAST WRITE (DFW) COMMAND                    *
*                                                                     *
***********************************************************************
BCRD04   TM    VERB,DFW            SEE IF DFW OPTION
         BNO   BCRD05              NO, BRANCH
         TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION SPECIFIED
         BO    ERROR17             YES, ERROR
         TM    OPTIONS,DEVICE      SEE IF DEVICE OPTION
         BO    ERROR22             YES, NOT ALLOWED WITH DFW COMMAND
BCRD04A  MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' SETCACHE' SET IDCAMS VERB
         MVC   COMMAND+11(3),=C'DFW' SET DFW OPTION
         TM    OPTIONS,ON+OFF      MAKE SURE ON OR OFF SPECIFIED
         BZ    ERROR10             NEITHER ON, ERROR
BCRD04A1 TM    OPTIONS,ON          SEE IF 'ON' OPTION SPECIFIED
         BNO   BCRD04A2            NO, BRANCH
         MVC   COMMAND+15(2),=C'ON' SET TO TURN ON OPTION
         B     BCRD04B             CONTINUE
BCRD04A2 MVC   COMMAND+15(3),=C'OFF' SET TO TURN OFF OPTION
BCRD04B  TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   BCRD04C             NO, BRANCH
         TM    OPTIONS,ON          SEE IF 'ON' OPTION
         BO    BCRD04B1            YES, BRANCH
         MVC   COMMAND+19(9),=C'UNUM(   )' SET DEFAULT UNIT ADDR
         MVC   COMMAND+24(3),UNITADD SET SPECIFIED UNIT ADDRESS
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD04B1 CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),UVOL  SET VOLSER FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD04C  TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   ERROR11             NO, ERROR
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DEVTYPE SET DEVICE TYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE CACHE FAST WRITE (CFW) COMMAND                   *
*                                                                     *
***********************************************************************
BCRD05   TM    VERB,CFW            SEE IF CFW OPTION
         BNO   ERROR14             NO, BRANCH
         TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION SPECIFIED
         BO    ERROR17             YES, ERROR
         TM    OPTIONS,DEVICE      SEE IF DEVICE OPTION
         BO    ERROR22             YES, NOT ALLOWED WITH CFW COMMAND
BCRD05A  MVC   COMMAND,BLANKS      BLANK THE COMMAND AREA
         MVC   COMMAND(9),=C' SETCACHE' SET IDCAMS VERB
         MVC   COMMAND+11(3),=C'CFW' SET CFW OPTION
         TM    OPTIONS,ON+OFF      MAKE SURE ON OR OFF SPECIFIED
         BZ    ERROR12             NEITHER ON, ERROR
BCRD05A1 TM    OPTIONS,ON          SEE IF 'ON' OPTION SPECIFIED
         BNO   BCRD05A2            NO, BRANCH
         MVC   COMMAND+15(2),=C'ON' SET TO TURN ON OPTION
         B     BCRD05B             GO WRITE IDCAMS COMMAND
BCRD05A2 MVC   COMMAND+15(3),=C'OFF' SET TO TURN OFF OPTION
BCRD05B  TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   BCRD05C             NO, BRANCH
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DEVTYPE SET DEVICE TYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET DEFAULT VOLSER
         MVC   COMMAND+34(6),VOLSER SET SPECIFIED VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD05C  TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   BCRD05C1            NO, BRANCH
         CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    ERROR19             NO, ERROR
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),UDEVT SET DEVICE TYPE FOR UNIT
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),UVOL SET VOLSER FOR UNIT
         B     WRITE               GO WRITE IDCAMS COMMAND
BCRD05C1 CLI   DFLTDEVT,C' '       SEE IF DEFAULT DEVICE TYPE FOUND
         BE    ERROR18             NO, BAD DEFAULT VOLSER
         MVC   COMMAND+19(10),=C'UNIT(    )' SET DEVICE TYPE
         MVC   COMMAND+24(4),DFLTDEVT SET DEFAULT DEVICE TYPE
         MVC   COMMAND+30(11),=C'VOL(      )' SET VOLSER
         MVC   COMMAND+34(6),DFLTVOL SET DEFAULT VOLSER
         B     WRITE               GO WRITE IDCAMS COMMAND
         EJECT
***********************************************************************
*                                                                     *
*        OPEN THE SYSIN FILE AS OUTPUT, WRITE THE IDCAMS COMMAND,     *
*        AND CLOSE THE FILE.                                          *
*                                                                     *
***********************************************************************
WRITE    OPEN  (SYSIN,(OUTPUT))    OPEN THE SYSIN FILE AS OUTPUT
         PUT   SYSIN,COMMAND       WRITE THE IDCAMS COMMAND TO SYSIN
         CLOSE SYSIN               CLOSE COMMAND FILE
         EJECT
***********************************************************************
*                                                                     *
*        CALL IDCAMS TO ISSUE THE REQUESTED COMMAND(S)                *
*                                                                     *
***********************************************************************
CALL     LINK  EP=IDCAMS,PARAM=(IDCAMPRM),VL=1  CALL IDCAMS
         ST    R15,RETCODE         SAVE IDCAMS RETURN CODE
***********************************************************************
*                                                                     *
*        READ THE SYSPRINT FILE FROM IDCAMS AND WRITE THEM TO         *
*        THE CONSOLE EXCEPT FOR THE HEADING LINE, AND BLANK           *
*        LINES.                                                       *
*                                                                     *
***********************************************************************
         OPEN  SYSPRINT            OPEN THE SYSPRINT FILE FOR INPUT
         LA    R2,SYSPRINT         LOAD DCB ADDRESS
         USING IHADCB,R2           SET ADDRESSABILITY TO DCB
READ     GET   SYSPRINT            READ THE SYSPRINT FILE
         LR    R3,R1               SAVE INPUT RECORD ADDRESS
         LH    R4,DCBLRECL         LOAD LRECL
         TM    DCBRECFM,DCBRECV    SEE IF VARIABLE LENGTH RECORD
         BNO   PROCESS             NO, BRANCH
         LH    R4,0(R3)            LOAD LRECL FROM RDW
         SH    R4,=H'4'            SUBTRACT LENGTH OF RDW
         LA    R3,4(,R3)           INCREMENT PAST RDW
PROCESS  LA    R3,1(,R3)           INCREMENT PAST CCTL
         BCTR  R4,0                SUBTRACT 1 FOR CCTL
         LTR   R4,R4               TEST LENGTH OF PRINT LINE
         BNP   READ                TOO SHORT, DROP THIS ONE
         CH    R4,=H'120'          SEE IF EXCEEDS MAXIMUM
         BNH   PROCESS1            NO, BRANCH
         LA    R4,120              SET TO MAXIMUM
PROCESS1 MVC   WTOL+4(120),BLANKS  BLANK THE OUTPUT MESSAGE AREA
         BCTR  R4,0                MAKE MACHINE LENGTH
         EX    R4,MOVEREC          MOVE RECORD TO OUTPUT MSG AREA
         CLC   WTOL+4(120),BLANKS  SEE IF BLANK LINE
         BE    READ                YES, DROP THIS RECORD
         CLC   WTOL+4(6),=C'IDCAMS' SEE IF HEADING RECORD
         BE    READ                YES, DROP THIS RECORD
         WTO   MF=(E,WTOL)         WRITE MESSAGE TO CONSOLE
         B     READ                GO READ ANOTHER IDCAMS MESSAGE
MOVEREC  MVC   WTOL+4(0),0(R3)     **** EXECUTE ONLY ****
         DROP  R2                  DROP ADDRESSABILITY TO DCB
         EJECT
***********************************************************************
*                                                                     *
*        END OF THE PROGRAM                                           *
*                                                                     *
***********************************************************************
EOF      CLOSE (SYSPRINT)          CLOSE SYSPRINT FILE
         B     PROMPT              GO ASK FOR ANOTHER COMMAND
RETURN   L     R13,4(,R13)         LOAD ADDRESS OF OLD SAVE AREA
         RETURN (14,12),RC=0       RETURN TO O/S
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS THE DCB OPEN EXIT FOR THE OUTPUT FILE.       *
*        IT WILL SET THE OUTPUT BLKSIZE TO 9040 IF IT HAS NOT         *
*        BEEN SPECIFIED.                                              *
*                                                                     *
***********************************************************************
OUTEXIT  LA    R2,0(R1)            LOAD DCB ADDRESS
         USING IHADCB,R2           SET ADDRESSABILITY TO DCB
         CLI   DCBRECFM,0          SEE IF OUTPUT RECFM HAS BEEN SPECD
         BNER  R14                 YES, RETURN TO OPEN
         MVC   DCBRECFM,=H'9040'   NO,  SET TO 9040
         BR    R14                 RETURN TO OPEN
         DROP  R2                  DROP ADDRESSABILITY TO DCB
         EJECT
***********************************************************************
*                                                                     *
*        ERROR ROUTINES                                               *
*                                                                     *
***********************************************************************
ERROR01  WTO   MF=(E,MSG01)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG01    WTO   'FLIDC001E NULL FLCACHE COMMAND ENTERED',               X
               ROUTCDE=(2,11),MF=L
*
ERROR02  WTO   MF=(E,MSG02)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG02    WTO   'FLIDC002E THE FLCACHE COMMAND IS INVALID - MORE THAN FOX
               UR OPERANDS WERE ENTERED',                              X
               ROUTCDE=(2,11),MF=L
*
ERROR03  WTO   MF=(E,MSG03)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG03    WTO   'FLIDC003E INVALID FLCACHE COMMAND - IT MUST BE ''LIST''X
               , ''CACHE'', ''DFW'', OR ''CFW''',                      X
               ROUTCDE=(2,11),MF=L
*
ERROR04  LA    R15,15              SET MAX LENGTH OF OPERAND
         LA    R1,MSG04+4+47       POINT TO MESSAGE AREA
         LR    R14,R2              LOAD START ADDRESS OF OPERAND
ERROR04A CLI   0(R14),C' '         END OF OPERAND
         BE    ERROR04B            YES, END OF MESSAGE
         MVC   0(1,R1),0(R14)      MOVE 1 CHARACTER OF OPERAND
         LA    R1,1(,R1)           INCREMENT TO NEXT OUTPUT POSITION
         LA    R14,1(,R14)         INCREMENT TO NEXT CHAR OF OPERAND
         BCT   R15,ERROR04A        LOOP
ERROR04B WTO   MF=(E,MSG04)        WRITE ERROR MESSAGE
         B     PROMPT              GO GET ANOTHER COMMAND
MSG04    WTO   'FLIDC004E INVALID UNIT ADDRESS SPECIFICATION -         X
                           ',                                          X
               ROUTCDE=(2,11),MF=L
*
ERROR05  LA    R15,15              SET MAX LENGTH OF OPERAND
         LA    R1,MSG05+4+41       POINT TO MESSAGE AREA
         LR    R14,R2              LOAD START ADDRESS OF OPERAND
ERROR05A CLI   0(R14),C' '         END OF OPERAND
         BE    ERROR05B            YES, END OF MESSAGE
         MVC   0(1,R1),0(R14)      MOVE 1 CHARACTER OF OPERAND
         LA    R1,1(,R1)           INCREMENT TO NEXT OUTPUT POSITION
         LA    R14,1(,R14)         INCREMENT TO NEXT CHAR OF OPERAND
         BCT   R15,ERROR05A        LOOP
ERROR05B WTO   MF=(E,MSG05)        WRITE ERROR MESSAGE
         B     PROMPT              GO GET ANOTHER COMMAND
MSG05    WTO   'FLIDC005E INVALID VOLSER SPECIFICATION -               X
                     ',                                                X
               ROUTCDE=(2,11),MF=L
*
ERROR06  LA    R15,15              SET MAX LENGTH OF OPERAND
         LA    R1,MSG06+4+36       POINT TO MESSAGE AREA
         LR    R14,R2              LOAD START ADDRESS OF OPERAND
ERROR06A CLI   0(R14),C' '         END OF OPERAND
         BE    ERROR06B            YES, END OF MESSAGE
         MVC   0(1,R1),0(R14)      MOVE 1 CHARACTER OF OPERAND
         LA    R1,1(,R1)           INCREMENT TO NEXT OUTPUT POSITION
         LA    R14,1(,R14)         INCREMENT TO NEXT CHAR OF OPERAND
         BCT   R15,ERROR06A        LOOP
ERROR06B WTO   MF=(E,MSG06)        WRITE ERROR MESSAGE
         B     PROMPT              GO GET ANOTHER COMMAND
MSG06    WTO   'FLIDC006E INVALID COMMAND OPERAND -                    X
                ',                                                     X
               ROUTCDE=(2,11),MF=L
*
ERROR07  WTO   MF=(E,MSG07)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG07    WTO   'FLIDC007E THE FLCACHE LIST COMMAND WAS INCOMPLETE - PINX
               NED, SUBSYS, VOL, OR UNIT MUST BE SPECIFIED',           X
               ROUTCDE=(2,11),MF=L
*
ERROR08  WTO   MF=(E,MSG08)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG08    WTO   'FLIDC008E THE FLCACHE CACHE COMMAND MUST SPECIFY EITHERX
                ''ON'' OR ''OFF''',                                    X
               ROUTCDE=(2,11),MF=L
*
ERROR09  WTO   MF=(E,MSG09)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG09    WTO   'FLIDC009E THE FLCACHE CACHE COMMAND WAS INCOMPLETE - SUX
               BSYS, VOL, OR UNIT MUST BE SPECIFIED',                  X
               ROUTCDE=(2,11),MF=L
*
ERROR10  WTO   MF=(E,MSG10)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG10    WTO   'FLIDC010E THE FLCACHE DFW COMMAND MUST SPECIFY EITHER 'X
               'ON'' OR ''OFF''',                                      X
               ROUTCDE=(2,11),MF=L
*
ERROR11  WTO   MF=(E,MSG11)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG11    WTO   'FLIDC011E THE FLCACHE DFW COMMAND WAS INCOMPLETE - VOL X
               OR UNIT MUST BE SPECIFIED',                             X
               ROUTCDE=(2,11),MF=L
*
ERROR12  WTO   MF=(E,MSG12)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG12    WTO   'FLIDC012E THE FLCACHE CFW COMMAND MUST SPECIFY EITHER 'X
               'ON'' OR ''OFF''',                                      X
               ROUTCDE=(2,11),MF=L
*
ERROR14  WTO   MF=(E,MSG14)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG14    WTO   'FLIDC014E INTERNAL ERROR - UNABLE TO DETERMINE THE COMMX
               AND VERB',                                              X
               ROUTCDE=(2,11),MF=L
*
ERROR15  MVC   MSG15+4+27(6),VOLSER MOVE VOLSER TO MESSAGE
         WTO   MF=(E,MSG15)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG15    WTO   'FLIDC015E SPECIFIED VOLUME        NOT FOUND ON SYSTEM',X
               ROUTCDE=(2,11),MF=L
*
ERROR16  MVC   MSG16+4+27(6),VOLSER MOVE VOLSER TO MESSAGE
         WTO   MF=(E,MSG16)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG16    WTO   'FLIDC016E SPECIFIED VOLUME        IS NOT A 3380 OR A 33X
               90 DASD DEVICE',                                        X
               ROUTCDE=(2,11),MF=L
*
ERROR17  WTO   MF=(E,MSG17)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG17    WTO   'FLIDC017E THE SUBSYS OPERAND IS ALLOWED ONLY WITH THE LX
               IST OR CACHE COMMAND',                                  X
               ROUTCDE=(2,11),MF=L
*
ERROR18  MVC   MSG18+4+29(6),DFLTVOL SET DEFAULT VOLSER IN MSG
         WTO   MF=(E,MSG18)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG18    WTO   'FLIDC018E THE DEFAULT VOLSER VVVVVV CANNOT BE LOCATED OX
               N THE SYSTEM - SPECIFY A VALID VOL OR UNIT PARAMETER'   X
               ROUTCDE=(2,11),MF=L
*
ERROR19  WTO   MF=(E,MSG19)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG19    WTO   'FLIDC019E SPECIFICATION OF AN OFFLINE UNIT NOT ALLOWED X
               FOR THIS COMMAND',                                      X
               ROUTCDE=(2,11),MF=L
*
ERROR20  WTO   MF=(E,MSG20)
         ABEND 0020,DUMP           ABEND THE PROGRAM
MSG20    WTO   'FLIDC020E INVALID DEFAULT VOLSER SPECIFIED IN THE INPUTX
                PARM - JOB ABORTED',ROUTCDE=(2,11),MF=L
*
ERROR21  MVC   MSG21+4+23(3),UNITADD SET UNIT ADDRESS IN MESSAGE
         WTO   MF=(E,MSG21)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG21    WTO   'FLIDC021E UNIT ADDRESS XXX NOT DEFINED TO THE SYSTEM ORX
                IS NOT A 3380 OR 3390 DEVICE',ROUTCDE=(2,11),MF=L
*
ERROR22  WTO   MF=(E,MSG22)
         B     PROMPT              GO GET ANOTHER COMMAND
MSG22    WTO   'FLIDC022E THE DEVICES OPERAND IS ALLOWED ONLY WITH THE X
               LIST COMMAND',                                          X
               ROUTCDE=(2,11),MF=L
*
ERROR23  WTO   MF=(E,MSG23)
         B     NEXTMOD             GO SET UP FOR ANOTHER MODIFY CMD
MSG23    WTO   'FLIDC023I INTERNAL ERROR - UNKNOWN SYSTEM COMMUNICATIONX
                VERB ENCOUNTERED',                                     X
               ROUTCDE=(2,11),MF=L
*
         EJECT
***********************************************************************
*                                                                     *
*        WTOR ROUTINE                                                 *
*                                                                     *
***********************************************************************
WTOR     ST    R14,RETWTOR         SAVE RETURN ADDRESS
         TM    VERB,CACHE+NVS+DFW+CFW  SEE IF ONE OF THE ALTERING CMDS
         BZ    WTOR99              NO, GET OUT
         TM    OPTIONS,ON+OFF      SEE IF ON OR OFF SPECIFIED
         BZ    WTOR99              NO, GET OUT
         MVC   WTORMSG2,BLANKS     BLANK MESSAGE AREA
         LA    R1,WTORMSG2         LOAD START OF WTOR MESSAGE AREA
         MVC   0(09,R1),=C'FLIDC000I' SET MESSAGE ID
         LA    R1,10(,R1)          INCREMENT
WTOR01   TM    OPTIONS,OFF         SEE IF TURNING OFF THE FUNCTION
         BNO   WTOR02              NO, BRANCH
         MVC   0(16,R1),=C'*** STOPPING ***'
         LA    R1,17(,R1)          INCREMENT
         B     WTOR03              BRANCH
WTOR02   MVC   0(08,R1),=C'STARTING'
         LA    R1,09(,R1)          INCREMENT
WTOR03   TM    VERB,CACHE          SEE IF CACHE COMMAND
         BNO   WTOR04              NO, BRANCH
         MVC   0(07,R1),=C'CACHING'
         LA    R1,08(,R1)          INCREMENT
         B     WTOR07              CONTINUE
WTOR04   TM    VERB,NVS            SEE IF NVS COMMAND
         BNO   WTOR05              NO, BRANCH
         MVC   0(20,R1),=C'NON-VOLATILE STORAGE'
         LA    R1,21(,R1)          INCREMENT
         B     WTOR07              CONTINUE
WTOR05   TM    VERB,DFW            SEE IF DFW COMMAND
         BNO   WTOR06              NO, BRANCH
         MVC   0(15,R1),=C'DASD FAST WRITE'
         LA    R1,16(,R1)          INCREMENT
         B     WTOR07              CONTINUE
WTOR06   MVC   0(16,R1),=C'CACHE FAST WRITE'
         LA    R1,17(,R1)          INCREMENT
         B     WTOR07              CONTINUE
WTOR07   TM    VERB,NVS            SEE IF NVS COMMAND
         BO    WTOR08              YES, BRANCH
         TM    VERB,CFW            SEE IF CFW COMMAND
         BO    WTOR08              YES, BRANCH
         TM    VERB,DFW            SEE IF DFW COMMAND
         BO    WTOR09              YES, BRANCH
         TM    VERB,CACHE          SEE IF CACHE OMMAND
         BNO   WTOR99              NO, NOT REALLY CHANGING ANYTHING
         TM    OPTIONS,SUBSYS      SEE IF SUBSYS OPTION
         BNO   WTOR09              NO, BRANCH
WTOR08   MVC   0(17,R1),=C'FOR THE SUBSYSTEM'
         LA    R1,18(,R1)          INCREMENT
         B     WTOR13              BRANCH
WTOR09   TM    OPTIONS,UNIT        SEE IF UNIT OPTION
         BNO   WTOR11              NO, BRANCH
         CLI   UVOL,C' '           SEE IF VOLSER FOR UNIT FOUND
         BE    WTOR10              NO, BRANCH
         MVC   0(09,R1),=C'ON VOLUME'
         MVC   10(06,R1),UVOL      SET VOLSER FOR UNIT ADDRESS
         LA    R1,17(,R1)          INCREMENT
         B     WTOR13              BRANCH
WTOR10   MVC   0(07,R1),=C'ON UNIT'
         MVC   8(03,R1),UNITADD    SET UNIT ADDRESS
         LA    R1,12(,R1)          INCREMENT
         B     WTOR13              BRANCH
WTOR11   TM    OPTIONS,VOL         SEE IF VOL OPTION
         BNO   WTOR12              NO, BRANCH
         MVC   0(09,R1),=C'ON VOLUME'
         MVC   10(06,R1),VOLSER    SET VOLSER
         LA    R1,17(,R1)          INCREMENT
         B     WTOR13              BRANCH
WTOR12   MVC   0(09,R1),=C'ON VOLUME'
         MVC   10(06,R1),DFLTVOL   SET DEFAULT VOLSER
         LA    R1,17(,R1)          INCREMENT
WTOR13   MVC   0(17,R1),=C'- REPLY YES OR NO'
WTOR14   XC    WTORECB2,WTORECB2   CLEAR THE WTOR ECB
         MVC   WTOANS2,BLANKS      BLANK THE ANSWER AREA
         WTOR  ,WTOANS2,8,WTORECB2,MF=(E,WTORL2)
         OC    WTOANS2,BLANKS      MAKE THE RESPONSE UPPER CASE
         WAIT  ECB=WTORECB2        WAIT FOR A RESPONSE
         CLC   WTOANS2(8),=CL8'YES' SEE IF RESPONSE IS YES
         BE    WTOR99              YES, CONTINUE
         CLC   WTOANS2(8),=CL8'NO' SEE IF RESPONSE IS NO
         BE    PROMPT              YES, END THE COMMAND
         CLC   WTOANS2(8),=CL8'ABEND' SEE IF RESPONSE IS ABEND
         BNE   WTOR14              NO, GO ASK AGAIN
ABEND    ABEND 1313,DUMP           ABEND THE JOB
WTOR99   L     R14,RETWTOR         RETURN RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        SEARCH THE SYSTEM FOR THE SPECIFIED VOLSER AT LABEL          *
*        VOLSER.  IF IT IS FOUND, EXTRACT THE DEVICE TYPE AMD         *
*        MOVE TO LABEL DEVTYPE.                                       *
*                                                                     *
*        ENTRY:  R14 - RETURN ADDRESS                                 *
*                                                                     *
*        RETURN: R15 - RETURN CODE                                    *
*                                                                     *
*                0 - VOLSER FOUND                                     *
*                4 - VOLSER NOT FOUND                                 *
*                8 - VOLSER FOUND, BUT NOT A 3380 OR 3390             *
*                                                                     *
***********************************************************************
VOLSEAR  ST    R14,SAVER14         SAVE RETURN ADDRESS
         MVC   SDEVT,BLANKS        BLANK THE ANSWER AREA
         L     R1,CVTPTR           GET CVT ADDRESS
         L     R15,CVTUCBSC-CVT(R1) POINT TO UCB SCAN SERVICE RTN
         ST    R15,IOSVSUCB        SAVE ADDR OF UCB SCAN ROUTINE
         MVI   DEVCLASS,UCB3DACC   SET FOR DASD UCBS ONLY
         LA    R1,SCANWORK         LOAD ADDRESS OF SCAN WORK AREA
         ST    R1,SCANP1           SAVE IN PARM LIST
         LA    R1,DEVCLASS         LOAD ADDRESS OF DEVICE CLASS
         ST    R1,SCANP2           SAVE IN PARM LIST
         LA    R1,UCBADDR          LOAD ADDRESS OF UCB RETURN
         ST    R1,SCANP3           SAVE IN PARM LIST
         OI    SCANP3,X'80'        TURN ON HIGH ORDER BIT
         XC    SCANWORK,SCANWORK   CLEAR SCAN SERVICE WORK AREA
VOLSEAR1 L     R15,IOSVSUCB        LOAD ADDR OF UCB SCAN ROUTINE
         LA    R1,SCANPARM         LOAD ADDRESS OF UCB SCAN PARM
         BALR  R14,R15             GO TO UCB SCAN SERVICE ROUTINE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   VOLSEAR2            NOT ZERO, END OF UCBS, ERROR
         L     R7,UCBADDR          LOAD UCB ADDRESS
         USING UCB,R7              SET ADDRESSABILITY TO UCB
         TM    UCBTBYT3,UCB3DACC   DIRECT ACCESS?
         BZ    VOLSEAR1            NO
         TM    UCBSTAT,UCBONLI     ONLINE?
         BNO   VOLSEAR1            NO, IGNORE DEVICE
         CLC   UCBVOLI,SVOL        SEE IF OUR VOLSER
         BNE   VOLSEAR1            NO, LOOP
***********************************************************************
*        GET DEVICE TYPE.  IT MUST BE 3380 OR 3390.                   *
***********************************************************************
         MVC   SDEVT,=CL4'3380'    SET DEVICE TYPE TO 3380
         CLI   UCBTBYT4,X'0E'      IS THIS A 3380?
         BE    VOLSEAR4            YES, GET OUT
         MVC   SDEVT,=CL4'3390'    SET DEVICE TYPE TO 3390
         CLI   UCBTBYT4,X'0F'      IS THIS A 3390?
         BE    VOLSEAR4            YES, GET OUT
         B     VOLSEAR3            NO, ERROR
VOLSEAR2 LA    R15,4               SET RETURN CODE TO 4
         B     VOLSEAR4            GET OUT
VOLSEAR3 LA    R15,8               SET RETURN CODE TO 8
VOLSEAR4 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14
         DROP  R7                  DROP ADDRESSABILITY TO UCB
         EJECT
***********************************************************************
*                                                                     *
*        SEARCH THE SYSTEM FOR THE SPECIFIED UNIT ADDRESS AT          *
*        LAVEL UNITADD.  IF IT IS FOUND, EXTRACT THE VOLSER           *
*        AND DEVICE TYPE AND MOVE THEM TO LABELS SVOL AND             *
*        SDEVT.                                                       *
*                                                                     *
*        ENTRY:  R14 - RETURN ADDRESS                                 *
*                                                                     *
*        RETURN: R15 - RETURN CODE                                    *
*                                                                     *
*                0 - UNIT ADDRESS FOUND                               *
*                4 - UNIT ADDRESS OFFLINE                             *
*                8 - UNIT ADDRESS NOT ON SYSTEM                       *
*               12 - UNIT ADDRESS NOT A 3380 OR 3390                  *
*                                                                     *
***********************************************************************
UCBSEAR  ST    R14,SAVER14         SAVE RETURN ADDRESS
         MVC   SVOL,BLANKS         BLANK THE ANSWER AREA
         MVC   SDEVT,BLANKS        BLANK THE ANSWER AREA
         L     R1,CVTPTR           GET CVT ADDRESS
         L     R15,CVTUCBSC-CVT(R1) POINT TO UCB SCAN SERVICE RTN
         ST    R15,IOSVSUCB        SAVE ADDR OF UCB SCAN ROUTINE
         MVI   DEVCLASS,UCB3DACC   SET FOR DASD UCBS ONLY
         LA    R1,SCANWORK         LOAD ADDRESS OF SCAN WORK AREA
         ST    R1,SCANP1           SAVE IN PARM LIST
         LA    R1,DEVCLASS         LOAD ADDRESS OF DEVICE CLASS
         ST    R1,SCANP2           SAVE IN PARM LIST
         LA    R1,UCBADDR          LOAD ADDRESS OF UCB RETURN
         ST    R1,SCANP3           SAVE IN PARM LIST
         OI    SCANP3,X'80'        TURN ON HIGH ORDER BIT
         XC    SCANWORK,SCANWORK   CLEAR SCAN SERVICE WORK AREA
UCBSEAR1 L     R15,IOSVSUCB        LOAD ADDR OF UCB SCAN ROUTINE
         LA    R1,SCANPARM         LOAD ADDRESS OF UCB SCAN PARM
         BALR  R14,R15             GO TO UCB SCAN SERVICE ROUTINE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   UCBSEAR3            NOT ZERO, END OF UCBS, ERROR
         L     R7,UCBADDR          LOAD UCB ADDRESS
         USING UCB,R7              SET ADDRESSABILITY TO UCB
         TM    UCBTBYT3,UCB3DACC   DIRECT ACCESS?
         BZ    UCBSEAR1            NO
         CLC   UCBNAME,UNITADD     SEE IF OUR DEVICE ADDRESS
         BNE   UCBSEAR1            NO, LOOP
         TM    UCBSTAT,UCBONLI     ONLINE?
         BNO   UCBSEAR2            NO, WARN THE CALLER
         MVC   SVOL,UCBVOLI        SAVE THE VOLSER
***********************************************************************
*        GET DEVICE TYPE.  IT MUST BE 3380 OR 3390.                   *
***********************************************************************
         MVC   SDEVT,=CL4'3380'    SET DEVICE TYPE TO 3380
         CLI   UCBTBYT4,X'0E'      IS THIS A 3380?
         BE    UCBSEAR5            YES, GET OUT
         MVC   SDEVT,=CL4'3390'    SET DEVICE TYPE TO 3390
         CLI   UCBTBYT4,X'0F'      IS THIS A 3390?
         BE    UCBSEAR5            YES, GET OUT
         B     UCBSEAR4            NO, ERROR
UCBSEAR2 LA    R15,4               SET RETURN CODE TO 4
         B     UCBSEAR5            GET OUT
UCBSEAR3 LA    R15,8               SET RETURN CODE TO 8
         B     UCBSEAR5            GET OUT
UCBSEAR4 LA    R15,12              SET RETURN CODE TO 12
         B     UCBSEAR5            GET OUT
UCBSEAR5 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14
         DROP  R7                  DROP ADDRESSABILITY TO UCB
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS.                                    *
*                                                                     *
***********************************************************************
         SPACE 3
         LTORG
         SPACE 3
SAVEAREA DS    18F                 REGISTER SAVE AREA
SAVER14  DS    F                   ROUTINE ROUTINE ADDRESS
RETCODE  DS    F                   IDCAMS RETURN CODE
RETWTOR  DS    F                   RETURN ADDRESS FROM WTOR ROUTINE
ECB1     DS    F                   ADDRESS OF STOP/MODIFY ECB
ECB2     DS    F                   ADDRESS OF WTOR ECB
EXTANS   DC    F'0'                EXTRACT ANSWER AREA
SWITCH   DC    X'00'               MULTIPLE PURPOSE SWITCHES
NEEDWTOR EQU   X'80'               NEED TO REISSUE WTOR
BLANKS   DC    120C' '             STRING OF 120 BLANKS
COMMAND  DC    CL80' '             IDCAMS COMMAND RECORD AREA
WTORECB1 DC    F'0'                WTOR ECB
WTORECB2 DC    F'0'                WTOR ECB
WTOANS1  DC    CL50' '             WTOR ANSWER AREA
WTOANS2  DC    CL50' '             WTOR ANSWER AREA
CMD      DC    CL50' '             MODIFY OR WTOR DATA
RESPONSE DC    CL51' '             COPY OF INPUT WTOR RESPONSE
IDCAMPRM DC    H'0',CL8' '         NULL IDCAMS PARM LIST
OPERANDS DC    7F'0'               OPERAND ADDRESS POINTER LIST
LOPNDS   EQU   *-OPERANDS          LENGTH OF THE OPERAND POINTER LIST
VERB     DC    X'00'               COMMAND VERB INDICATOR
LIST     EQU   X'80'               LIST COMMAND
CACHE    EQU   X'40'               CACHE COMMAND
NVS      EQU   X'20'               NVS COMMAND
DFW      EQU   X'10'               DFW COMMAND
CFW      EQU   X'08'               CFW COMMAND
OPTIONS  DC    X'00'               COMMAND OPTIONS
SUBSYS   EQU   X'80'               SUBSYS OPTION SPECIFIED
PINNED   EQU   X'40'               PINNED OPTION SPECIFIED
UNIT     EQU   X'20'               UNIT ADDRESS SPECIFIED
VOL      EQU   X'10'               VOLSER SPECIFIED
ON       EQU   X'08'               'ON' SPECIFIED
OFF      EQU   X'04'               'OFF' SPECIFIED
DEVICE   EQU   X'02'               DEVICE STATUS DESIRED
SVOL     DC    CL6'      '         VOLSER FOR SCANUCB ROUTINE
SDEVT    DC    CL4'    '           DEVICE TYPE FOR PREVIOUS VOLSER
VOLSER   DC    CL6'      '         SPECIFIED VOLSER
DEVTYPE  DC    CL4'    '           DEVICE TYPE FOR SPECIFIED VOLSER
DFLTVOL  DC    CL6'ESARSP'         DEFAULT VOLSER
DFLTDEVT DC    CL4'    '           DEFAULT DEVICE TYPE
UNITADD  DC    CL3'   '            SPECIFIED UNIT ADDRESS
UVOL     DC    CL6'      '         VOLSER FOR SPECIFIED UNIT ADDRESS
UDEVT    DC    CL4'    '           DEVICE TYPE FOR SPECIFIED UNIT ADDR
*
DEVCLASS DS    X                   IOSVSUCB DEVICE TYPE
SCANWORK DS    CL100               IOSVSUCB SCAN WORK AREA
UCBADDR  DS    F                   ADDRESS OF UCB
IOSVSUCB DS    F                   ADDRESS OF IOSVSUCB ROUTINE
SCANPARM DS    0F                  IOSVSUCB PARM LIST
SCANP1   DS    F                   ADDRESS OF WORK AREA
SCANP2   DS    F                   ADDRESS OF DEVICE TYPE FIELD
SCANP3   DS    F                   ADDRESS OF UCB RETURN AREA
*
WTOL     WTO   '123456789 123456789 123456789 123456789 123456789 12345X
               6789 123456789 123456789 123456789 123456789 123456789 1X
               23456789 ',ROUTCDE=(2,11),MF=L
WTORL1   WTOR  '                                                       X
                                                            ',         X
               WTOANS1,8,WTORECB1,ROUTCDE=(2,11),MF=L
WTORMSG1 EQU   WTORL1+12,100
*
WTORL2   WTOR  '                                                       X
                                                            ',         X
               WTOANS2,8,WTORECB2,ROUTCDE=(2,11),MF=L
WTORMSG2 EQU   WTORL2+12,100
*
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                         X
               LRECL=80,RECFM=FB,EXLST=EXLIST1
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=GL,EODAD=EOF
         PRINT GEN
         CNOP  0,4
EXLIST1  DC    X'85',AL3(OUTEXIT)  EXIT LIST FOR OPEN
         EJECT
COMMAREA DSECT                     EXTRACT COMM AREA DSECT
COMMECB  DS    F                   STOP/MODIFY ECB ADDRESS
COMMCIB  DS    F                   CIB ADDRESS
         EJECT
         DCBD  DSORG=PS,DEVD=DA    MAP THE DCB
         EJECT
UCB      DSECT
         IEFUCBOB LIST=YES         MAP THE UCB
         EJECT
         CVT   LIST=YES,DSECT=YES  MAP THE CVT
         EJECT
CIB      DSECT                     COMMAND INPUT BUFFER
         IEZCIB ,                  MAP THE CIB
         EJECT
         IHAECB ,                  MAP THE ECB
         END
