    TITLE '**ITMS000A** TAPE MANAGEMENT SYSTEM  ** MAINLINE **'
         PRINT ON,NOGEN
ITMS000A CSECT
         STM   14,12,12(13)        SAVE REGS OF CALLING  IN ITS AREA
         LR    R10,R15             LOAD R10 WITH BASE ADDR
         USING ITMS000A,R10,R11,R12    TELL ASSEMBLER WHATS WHAT
         LH    R11,=H'4096'        LOAD R11 WITH BUMP FACTOR
         AR    R11,R10             SET R11 FOR SECOND BASE REG.
         LH    R12,=H'4096'        LOAD R12 WITH BUMP FACTOR
         AR    R12,R11             SET R12 FOR THIRD BASE REG.
         ST    R13,SAVEAREA+4      SAVE REG 13 IN MY SAVE AREA
         LA    R13,SAVEAREA        PUT ADDR OF MY SAVE AREA INTO R13
         ST    R1,SAVORINP         SAVE ADDR. OF PARM INPUT
         B     STARTPGM
         SPACE
         LTORG
         SPACE
         DC    C'**ITMS000A** TAPE MANAGER PGM'
         DC    C'  ASSEMBLED &SYSTIME &SYSDATE'
         DS    H
STARTPGM EQU   *
* FIRST! LET'S OPEN OUR SYSOUT FILE FOR STATUS MESSAGE RECORDING
         OPEN  (ITMPRINT,OUTPUT)     OPEN SYSOUT FILE DCB
         OPEN  (ITMREPT,OUTPUT)      OPEN SYSOUT FILE DCB
* FIRST LET'S SHOHH WE'RE CRANKING
         LA    R9,ITMI00           PICK MSG ADDR.
         BAL   R2,TELLWRLD         GO TELL THE WORLD
* NOW  LET'S GET OUR INPUT AND SEE WHAT THE USER WANTS
         SPACE
         XC    SAV15RTC(4),SAV15RTC INIT R15 SAVE AREA
         MVI   PAGNEW,C'Y'         INIT NEW PAGE SWITCH
         MVI   ITMCLSW,C'Y'        INIT DB CLOS SWITCH
         MVI   SYSRUN,C'N'         INIT SYSIN-UTIL RUN SWITCH
         MVI   RNODF,C'Y'          INIT NO DATA FND SWITCH
         XR    R15,R15             INIT REG R15
         L     R1,SAVORINP         REST ADDR. OF PARM INPUT
         L     R1,0(R1)            PICK INPUT ADDR.
         LH    R3,0(R1)            PICK UP PARMIN LENGTH
         LTR   R3,R3               ANYTHING??
         BZ    ITMER001            NOPE ! GO SHOW ERROR
         MVI   PRSAREA,X'40'       ELSE! LETS GET GOING
         MVC   PRSAREA+1(PPLEN-1),PRSAREA   LETS CLEAR IT OUT FIRST
         STH   R3,PPARLEN          OK! NOW PUT INTO PARSER WORKAREA
         LA    R4,2(,R1)           POINT TO ACTUAL INPUT
         BCTR  R3,0                SET TO MACH. LEN
         EX    R3,MOVPARM          ... AND MOVE TO PARSER WORKAREA
         LA    R1,PRSAREA          POINT TO PARSER WORKAREA
         L     R15,=V(ITMPAR01)    GET PARSER'S ADDR.
         BALR  R14,R15             ...AND GO DO IT!
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BNZ   ITMER002            NG GO TO ERROR RTN
         SPACE 2
* SO FAR SO GOOD SO LETS GO OPEN THE ITMS DATABASE AND LOG FILES
         BAL   R2,OPNITMDB         GO OPEN ITMS DATABASE
         SPACE
         LA    R9,ITMI01           PICK MSG ADDR.
         BAL   R2,TELLWRLD         GO TELL THE WORLD
         SPACE
* OK NOW LET'S SEE WHAT THE PARSER RETURNED TO US
         CLI   PPRUNTYP,C'C'       WE DOING A CREATE RUN
         BNE   CHKEXPR             NOPE! MAYB EXPIRATION ??
         MVC   LOGREQ,=C'INIT'     YUP! SHOW INITIAL LOG ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         MVC   LOGREQ,=C'INIB'     YUP! SHOW INITIAL PRS ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         BAL   R2,DOITMCRT         GO DO IT
         B     ITMS0END            ...AND GO HOME!!
CHKEXPR  CLI   PPRUNTYP,C'X'       WE DOING A EXPIRATION RUN
         BNE   CHKREPT             NOPE! MAYB REPORT ??
         MVC   LOGREQ,=C'INIT'     YUP! SHOW INITIAL LOG ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         MVC   LOGREQ,=C'INIB'     SHOW INITIAL PRS ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         BAL   R2,DOITMEXP         GO DO IT
         B     ITMS0END            ...AND GO HOME!!
CHKREPT  CLI   PPRUNTYP,C'R'       WE DOING A REPORT RUN
         BNE   CHKUTIL             NOPE! MAYB UTIL??
         MVI   NOLOGSW,C'N'        YUP! TURN OFF LOGGING
         MVC   LOGREQ,=C'INIT'     SHOW INITIAL LOG ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT (IE TO SYSOUT ONLY)
         MVC   LOGREQ,=C'INIB'     SHOW INITIAL PRS ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT (IE TO SYSOUT ONLY)
         BAL   R2,DOITMREP         YUP! GO DO IT
         B     ITMS0END            ...AND GO HOME!!
CHKUTIL  CLI   PPRUNTYP,C'U'       WE DOING A UTILITY RUN
         BNE   ITMER000            NOPE! MAYB ERROR???????????
         MVC   LOGREQ,=C'INIT'     YUP! SHOW INITIAL LOG ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         MVC   LOGREQ,=C'INIB'     SHOW INITIAL PRS ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         BAL   R2,DOITMUTL         GO DO IT
         B     ITMS0END            ...AND GO HOME!!
         SPACE
ITMS0END EQU   * WE'RE DONE SO LETS CALL IT MILLER TIME
         BAL   R2,CLSITMDB         GO CLOSE DOWN
         SPACE
         LA    R9,ITMI03           PICK MSG ADDR.
         BAL   R2,TELLWRLD         GO TELL THE WORLD
         SPACE
         CLOSE ITMPRINT            CLOSE ITM SYSOUT FILE
         CLOSE ITMREPT             CLOSE ITM SYSOUT FILE
         SPACE
         L     R13,SAVEAREA+4      RESTORE REG 13
         L     R14,12(,R13)        RESTORE REG 14
         L     R15,SAV15RTC        PICK RET CODE IN R15
         LM    R0,R12,20(R13)      RESTORE REST EXCEPT R15
         BR    R14                 RETURN TO CALLER (IE OS)
         SPACE 2
MOVPARM  MVC   PPPAREA(0),0(R4)    MOVE INPUT TO PARSER WORKAREA
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** DATABASE OPEN RTNS.**'
OPNITMDB EQU   *
         ST    R2,OPN10SAV         SAVE RET. REG
         CLI   PPRUNTYP,C'R'       IS THIS REPORT RUN
         BNE   OPNITOUT            NOPE! MUST OPEN THE DB FOR OUTPT
         SPACE
         OPEN  ITMCNTL             OPEN CNTLFILE INPUT ACB
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    OCLSW1              GOOD! GO SHOW OPEN
         LA    R9,ITMCNTL          ELSE! SHOW ERROR
         LA    R8,=CL5'OPEN '      SHOW ERROR REQ
         MVI   SHOFLAG,C'A'        SHOW ACB ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
OCLSW1   MVI   ITMCLSW,C'N'        OK ! SHOW DB = OPEN
         B     OPNEXIT             GOOD JOB! RETURN TO CALLER
         SPACE
OPNITOUT EQU   * FOR UPDATE RUNS WE OPEN DB FOR UPDT & ALSO THE LOGS
         MODCB ACB=ITMCNTL,MACRF=(OUT)
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    OCLSW2              GOOD! GO SHOW OPEN
         LA    R9,ITMCNTL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'A'        SHOW ACB ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
OCLSW2   OPEN  ITMCNTL             OPEN CNTLFILE IN/OUT ACB
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    OCLSW3              GOOD! GO SHOW OPEN
         LA    R9,ITMCNTL          ELSE! SHOW ERROR
         LA    R8,=CL5'OPEN '      SHOW ERROR REQ
         MVI   SHOFLAG,C'A'        SHOW ACB ERROR
         B     ITMER003            ...AND GO TO ERRORS
OCLSW3   MVI   ITMCLSW,C'N'        OK ! SHOW DB = OPEN
         SPACE
         GET   RPL=CRECRPL         READ CNTLREC FOR CURR. LOG EXTENT
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    OPNLAB1             GOOD!
         LA    R9,CRECRPL          ELSE! PICK RPL ADDR.
         LA    R8,=CL5'GET C'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     OPNEXIT             ....AND GO HOME
         SPACE
OPNLAB1  MODCB ACB=ITMLOGX,DDNAME=(*,CCUREX),MACRF=OUT
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    OPNLAB2             GOOD!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'MODCB'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     OPNEXIT             ....AND GO HOME
         SPACE
OPNLAB2  OPEN  ITMLOGX             OPEN CUURENT LOG EXTENT ACB
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    OPNEXIT             GOOD! WE'RE DONE!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'OPEN '      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     OPNEXIT             ....AND GO HOME
         SPACE
OPNEXIT  EQU   * GOOD JOB! RETURN TO CALLER
         L     R2,OPN10SAV         RESTORE BAL REG
         BR    R2                  SAYONAAAAAAAAAAAAARA
         SPACE
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** DATABASE CLOSE RTN.**'
CLSITMDB EQU   *
         ST    R2,CLS10SAV         SAVE RET. REG
         SPACE
         CLI   ITMCLSW,C'Y'        IS ITMS DB ALREADY CLOSED
         BE    CLSEXIT             YUP! SKIP ITM CLOSE
         CLOSE ITMCNTL             ELSE! CLOSE IT!
         SPACE
         CLI   PPRUNTYP,C'R'       IS THIS REPORT RUN
         BE    CLSEXIT             YUP! SKIP LOG CLOSE
         CLI   NOLOGSW,C'N'        WAS LOGGING TURNED OFF
         BE    CLSEXIT             YUP! SKIP LOG CLOSE
         CLOSE ITMLOGX             ELSE! CLOSE IT!
         SPACE
         LA    R9,ITMI02           PICK MSG ADDR.
         BAL   R2,TELLWRLD         GO TELL THE WORLD
         SPACE
CLSEXIT  EQU   * GOOD JOB! RETURN TO CALLER
         L     R2,CLS10SAV         RESTORE BAL REG
         BR    R2                  SAYONAAAAAAAAAAAAARA
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** CREATE TAPE PROCSNG**'
DOITMCRT EQU   *
         ST    R2,CRT10SAV           SAVE RET ADDR.
         SPACE
         MVC   SRCHKY(6),PVOLSR    SET UP SEARCH ON REQ. VOLSER
         MODCB RPL=CNTLRPL,OPTCD=(DIR,UPD),ARG=SRCHKY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    GETCRT1             GOOD! GET THE RECORD
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
GETCRT1  GET   RPL=CNTLRPL         READ CNTLFIL FOR REQ. VOLSER
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    CRTCHK              FOUND! LETS CHK THE REC'S STATUS
         SPACE
         SHOWCB AREA=VERFDBK,LENGTH=4,FIELDS=FDBK,                     X
               RPL=CNTLRPL
         SPACE
         CLI   VERFDBK+3,X'10'     RECORD NOT FOUND??
         BE    CRTDOCRA            GOOD! GO ADD THIS TAPE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET D'      SHOW 'GET DIR' ERROR
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
CRTCHK   EQU   * IF REC FOUND ON CREATE RUN WE LOG OLD REC IMAGE
         CLI   CCFLG1,C'E'         IS A SCRATCH REC.
         BE    CRTDOCRB            OK GO FILL IN REST OF REC.
         MVC   LOGREQ(4),=C'OLDR'  ELSE! SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         SPACE
         MVI   CVOLSR,X'40'        OK! NOW CLR IT OUT
         MVC   CVOLSR+1(79),CVOLSR    DITTO
         CLI   PPRUNTYP,C'U'       WE DOIN' UTIL RUN
         BE    CRTDOCR2            YUP! BYPASS OV FLAG
         MVI   CCFLG2,C'O'         SHOW THIS AS AN 'OVERLAY'
         B     CRTDOCR2            OK GO FILL IN REST OF REC.
         SPACE
CRTDOCRA MODCB RPL=CNTLRPL,OPTCD=(DIR,NUP),ARG=SRCHKY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    CRTDOCR             GOOD! GET THE RECORD
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
CRTDOCR  EQU   * HERE WE SET UP TO ADD A NEW 'CREATE' TAPE RECORD
         MVI   NEWRCS,C'N'         SHOW THIS IS NEW REC
CRTDOCRB MVI   CVOLSR,X'40'        FIRST CLEAR IT OUT
         MVC   CVOLSR+1(79),CVOLSR    DITTO
CRTDOCR2 MVC   CVOLSR(6),SRCHKY    MOVE VOLSER TO RECORD
         MVC   CEDATE(7),PEDATE    MOVE EXP. DATE TO REC.
         CLC   CEDATE(7),=7X'F0'   IE UNKNOWN EXP DATE
         BNE   CRTDOCR4            NOPE!
         CLI   CCFLG2,C'O'         IS THIS AN OVERLAY
         BNE   CRTDOCR3            NOPE!
         MVI   CCFLG2,C'B'         ELSE! SHOW BOTH OVL & UNKNWN
         B     CRTDOCR4            & CONTINUE
CRTDOCR3 MVI   CCFLG2,C'U'         SHOW THIS REC AS UNKNWN
CRTDOCR4 MVC   CCTDSN(44),PCTDSN   MOVE DSN TO RECORD
         MVC   CCDATE(7),PCDATE    MOVE CREATDATE TO REC.
         MVI   CCFLG1,C'C'         SHOW THIS IS A 'CREATE'
         SPACE
         PUT   RPL=CNTLRPL         WRITE IT TO ITMS DB
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    CRTLAB              GOOD! GO ADD TO CTR
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'PUT D'      SHOW 'PUT DIR' ERROR
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
CRTLAB   CLI   NEWRCS,C'N'         IS THIS A NEW REC
         BE    CRTLAB1             YUP! GO UPDATE NEWREC CTR
         AP    UPDCTR(3),=P'1'     ELSE! BUMP UPDATED REC CTR
         MVC   LOGREQ(4),=C'UPDR'  SET UP FOR LOGGER
         B     CRTLAB2             .... AND GO DO IT
CRTLAB1  MVC   LOGREQ(4),=C'NEWR'  SHOW THIS IS NEW REC
         AP    NEWCTR(3),=P'1'     BUMP NEW RECORD  CTR
CRTLAB2  BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         CLI   SYSRUN,C'S'         WE IN MIDDLE OF 'SYSIN' UTIL RUN
         BE    CRTEXIT             YUP! GO BACK FOR MORE
CRTLAB3  BAL   R2,PUTNCTR          GO PUT OUT COUNTER
         B     CRTEXIT             ....AND GO HOME
         SPACE
CRTEXIT  EQU   *
         L     R2,CRT10SAV         REST. RET ADDR.
         BR    R2                  RETURN TO CALLER
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** EXPIRATION PROCSNG**'
DOITMEXP EQU   *
         ST    R2,EXP10SAV           SAVE RET ADDR.
         CLC   PREDATE(7),UNPKDATE+1 REQ. EXPIR. DATE >= TODAY
         BL    ITMER00F            NOPE! QUIT NOW
         SPACE
         MODCB RPL=CNTLRPL,OPTCD=(KEY,SEQ,UPD),ARG=CRECARG
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    GETEXP1             GOOD! GET THE RECORD
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
GETEXP1  POINT RPL=CNTLRPL         IE, POSITION TO EOF
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    GETEXP2             OK! START READING
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'POINT'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
GETEXP2  GET   RPL=CNTLRPL         READ CNTLFIL SEQ'LY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    PUTEXP1             OK! GO PUT IT BACK (TO FREE RPL)
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GETSC'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
PUTEXP1  PUT   RPL=CNTLRPL         OK! WRITE IT BACK
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    CNTLCHK             OK! THE 1ST ONE MUST BE THE CNTLREC
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'PUTSC'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
CNTLCHK  EQU   * LETS MAKE SURE THIS IS THE CNTL REC
         CLC   CVOLSR(6),CRECARG   IS THIS THE CNTL REC??
         BNE   ITMFERR1            THIS IS FATAL!!
DONEXP   EQU   * OK NOW LETS GET THE REST OF THE RECS AND PROCESS THEM
         GET   RPL=CNTLRPL         READ CNTLFIL SEQ'LY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    DOEXLAB1            OK! LETS CHECK IT OUT
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET S'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
DOEXLAB1 MVI   EXPLF,C'N'          PRIME LOGR FLAG
         CLI   CCFLG1,C'E'         IS A SCRATCH REC.
         BE    DOEXLAB4            YUP! SKIP THIS ONE
         CLC   CEDATE(7),=7X'F0'   IE UNKNOWN EXP DATE
         BE    DOEXLAB3            YUP! WE EXPIRE IT
         CLC   CEDATE(7),PREDATE   WE EXPIRED YET
         BNH   DOEXLAB3            LOOKS SO!
         B     DOEXLAB4            NOPE!
DOEXLAB3 MVI   CCFLG1,C'E'         EXPIRE THIS GUY
         MVI   EXPLF,C'Y'          SET TO BE LOGGED FLAG
DOEXLAB4 PUT   RPL=CNTLRPL         OK! WRITE IT BACK
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    EXPRLOG             GOOD! LETS LOG & KEEP GOING
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'PUT S'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
EXPRLOG  CLI   EXPLF,C'N'          THIS REC TO BE LOGGED
         BE    DONEXP              YUP! SKIP LOGGING ON THIS ONE
         MVC   LOGREQ(4),=C'EXPR'  SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         AP    NEWCTR(3),=P'1'     ADD ONE NOTCH TO GRIP
         B     DONEXP              GOOD! LETS LOG & KEEP GOING
         SPACE
CNTLEOF  EQU   * AT EOF ITS TIME TO WRITE OUT STATUS AND GO HOME
         MVI   PUTFLG,C'E'         SHOW EXP RUN
         BAL   R2,PUTNCTR          GO SHOW COUNTS.
EXPEXIT  EQU   *
         L     R2,EXP10SAV         REST. RET ADDR.
         BR    R2                  RETURN TO CALLER
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** DB REPORT PROCSNG **'
DOITMREP EQU   * FIRST WE'LL DETERMINE WHICH REPT TYPE IS REQUESTED
         ST    R2,REP10SAV         SAVE RET ADDR.
         SPACE
         CLI   PPSUBRUN,C'L'       IS LOG RPINT REQ.
         BE    DOITMRLG            YUP! GO TO LOG PR RTN
         SPACE
         MODCB EXLST=CNTLXLST,EODAD=CNTLEREP
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    GETREP1             GOOD! GET THE RECORD
         B     ITMER004            ELSE! GO TO ERRORS
         SPACE
GETREP1  GET   RPL=CNTLRPL         READ CNTLFIL SEQ'LY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    CNTLCHKR            OK! THE 1ST ONE MUST BE THE CNTLREC
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET S'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
CNTLCHKR EQU   * LETS MAKE SURE THIS IS THE CNTL REC
         CLC   CVOLSR(6),CRECARG   IS THIS THE CNTL REC??
         BNE   ITMFERR1            THIS IS FATAL!!
         MVI   REPFSW,C'X'         INIT THIS SWITCH
DOLREP   EQU   * OK NOW LETS GET THE REST OF THE RECS AND PROCESS THEM
         GET   RPL=CNTLRPL         READ CNTLFIL SEQ'LY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    DORPLAB1            OK! LETS CHECK IT OUT
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET S'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
DORPLAB1 CLI   PPSUBRUN,C'A'       'ALL' REP REQ.
         BE    DORPLOG             ITS A HIT GO LOG IT
         CLI   PPSUBRUN,C'V'       'AVAIL' REP REQ.
         BNE   DORPLAB2            NOPE!
         CLI   CCFLG1,C'E'         IS REC EXPIRED
         BE    DORPLOG             ITS A HIT GO LOG IT
         B     DOLREP              NOH! SKIP THIS ONE
         SPACE
DORPLAB2 CLI   PPSUBRUN,C'C'       'CREAT' REP REQ.
         BNE   DORPLAB3            NOPE!
         CLI   CCFLG1,C'C'         IS REC IN CREATED STATUS
         BE    DORPLOG             ITS A HIT GO LOG IT
         B     DOLREP              NOH! SKIP THIS ONE
         SPACE
DORPLAB3 CLI   PPSUBRUN,C'X'       'EXCEP' REP REQ.
         BNE   DORPLAB4            NOPE!
         CLI   CCFLG2,X'40'        ANYTHING??
         BE    DOLREP              NOH! SKIP THIS ONE
         CLI   PRXFLAG,C'A'        'ALL' EXPT'S WANTED
         BE    DORPLOG             ITS A HIT GO LOG IT
         CLI   CCFLG2,C'B'         'BOTH' EXEP ON?
         BE    DORPLOG             YUP! GO LOG IT
         CLC   PRXFLAG(1),CCFLG2   THIS THE ONE REQUESTED
         BE    DORPLOG             ITS A HIT GO LOG IT
         B     DOLREP              NOH! SKIP THIS ONE
         SPACE
DORPLAB4 CLI   PPSUBRUN,C'F'       'FORECAST' REP REQUESTED
         BNE   DORPLAB5            NOPE!
         CLC   PRFDATE(7),UNPKDATE+1 REQ. FOREC >= TODAY
         BL    ITMER00F            NOPE! QUIT NOW
         CLI   CCFLG1,C'E'         THIS REC EXP. ALREADY
         BE    DOLREP              YUP! SKIP THIS ONE
         CLC   CEDATE(7),=7X'F0'   IE UNKNOWN EXP DATE
         BE    DORPLOG             ITS A HIT GO LOG IT
         CLC   CEDATE(7),PRFDATE   WE BE EXPIRED BY FOREC. DATE???
         BNH   DORPLOG             LOOKS LIKE A HIT!
         B     DOLREP              NOH! SKIP THIS ONE
         SPACE
DORPLAB5 CLI   PPSUBRUN,C'S'       'FIND' REP REQUESTED
         BNE   REPEXIT             IF NOT ONE OF THE ABOVE, I GIVE UP
         CLI   PPSUBRNA,C'D'       FIND BY DSN
         BNE   DORPLAB6            NOPE!
         LH    R3,PPERROFF         PICK UP DSN LEN
         EX    R3,COMPDSN          ....FOR COMPARE
         BNE   DOLREP              NOP! SKIP THIS ONE
         MVI   REPFSW,C'F'         SHOW WE GOT SOME
         B     DORPLOG             ITS A HIT GO LOG IT
         SPACE
COMPDSN  CLC   CCTDSN(0),PRTDSN    WE THE SAME??
         SPACE
DORPLAB6 CLC   CVOLSR(6),PRVOLLO   ONE WE LOOKING FOR ?
         BNE   DORPLAB8            NOPE!
         CLC   PRVOLHI(6),=6X'40'  WAS RANGE SPECIFIED?
         BNE   DORPLAB7            YES! SO WE MUST LOOK FOR REST
         MVI   REPFSW,C'D'         ELSE! SHOW WERE DONE
         B     DORPLOG             ....AND GO TO LOGGER
DORPLAB7 MVI   REPFSW,C'F'         SHOW WE GOT SOME
         B     DORPLOG             ....AND GO TO LOGGER
DORPLAB8 BL    DOLREP              WE CANT MAKE IT , GET NEX REC
         CLC   PRVOLHI(6),=6X'40'  WAS RANGE SPECIFIED?
         BE    CNTLEREP            NOPE LOOKS LIKE WERE OVER THE TOP
         CLC   CVOLSR(6),PRVOLHI   ONE WE LOOKING FOR ?
         BH    CNTLEREP            NOPE LOOKS LIKE WERE OVER THE TOP
         MVI   REPFSW,C'F'         ELSE! SHOW WE GOT ONE
         B     DORPLOG             ....AND GO TO LOGGER
         SPACE
DORPLOG  CLI   EXPLF,C'N'          THIS REC TO BE LOGGED
         BE    DONEXP              YUP! SKIP LOGGING ON THIS ONE
         MVC   LOGREQ(4),=C'REPT'  SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         AP    NEWCTR(3),=P'1'     ADD ONE NOTCH TO GRIP
         CLI   PPSUBRUN,C'S'       WAS 'FIND' REP REQUESTED
         BNE   DLOGCN1             NOPE! SKIP THIS STUFF
         CLI   REPFSW,C'D'         WE DONE??
         BE    CNTLEREP            YUP! WE'RE DONE!!!!
DLOGCN1  B     DOLREP              OK! LETS KEEP GOING
         SPACE 2
CNTLEREP EQU   * AT EOF ITS TIME TO WRITE OUT STATUS AND GO HOME
         CP    NEWCTR(3),=P'00'    WAS ANYTHING FOUND
         BNE   CNTLER2             OK! SKIP NEXT
         MVI   RNODF,C'N'          ELSE! SHOW NO DATA FND
         BAL   R2,REPTPRT          ...AND GO TO RPT WRITER
CNTLER2  CLI   PPSUBRUN,C'S'       WAS 'FIND' REP REQUESTED
         BNE   EREPCN1             NOPE! SKIP THIS STUFF
         CLI   REPFSW,C'X'         WAS ANYTHING FOUND?
         BE    ITMER00G            NOPE! SHOW ERROR
EREPCN1  MVI   PUTFLG,C'R'         SHOW REP RUN
         BAL   R2,PUTNCTR          GO SHOW COUNTS.
REPEXIT  EQU   *
         L     R2,REP10SAV         REST. RET ADDR.
         BR    R2                  RETURN TO CALLER
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** LOG PRINT FORMATTER **'
DOITMRLG EQU   * FOR LOG PRINT REPORTS WE'LL PRINT THE LOGS BWDS (IE,
**               IN CHRONOLOGICAL ORDER ) **
         MVI   LEXSW,C'F'          SHOW WE'RE ON FIRST EXTENT
         GET   RPL=CRECRPL         READ CNTLFIL FOR CURR. LOG EXTENT
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    RPLLAB2             GOOD! KEEP GOING!
         LA    R9,CRECRPL          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'GET C'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         B     ITMER003            .AND! GO SHOH ERROR
         SPACE
RPLLAB2  EQU   *
OPENCUR  MODCB ACB=ITMLOGX,DDNAME=(*,CCUREX)
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    RPLLAB3             GOOD! KEEP GOING!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'MODCB'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         B     ITMER003            .AND! GO SHOH ERROR
         SPACE
RPLLAB3  OPEN  ITMLOGX             OPEN NEW EXTENT
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    RPLLAB4             GOOD! KEEP GOING!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'OPEN '      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         B     ITMER003            .AND! GO SHOH ERROR
         SPACE
RPLLAB4  EQU   * OK! NOW SET RPL TO READ BACKWARDS
         BAL   R2,SHOWLGX          GO SHOW CURRENT LOG XTNT
         MODCB RPL=LOGXRPL,OPTCD=(ADR,SEQ,LRD,BWD)
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    RPLLAB5             GOOD! NOW LETS POSITION IT
         LA    R9,LOGXRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
RPLLAB5  POINT RPL=LOGXRPL         IE, POSITION TO EOF
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    RPLLAB6             OK! START READING
         SPACE
         LA    R9,LOGXRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'POINT'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
RPLLAB6  GET   RPL=LOGXRPL         READ LOG SEQ'LY BWD'S
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    RPLLAB7             SO FAR SO GOOD
         SPACE
         LA    R9,LOGXRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET B'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
RPLLAB7  MVC   LOGREQ(4),=C'RLOG'  SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         AP    NEWCTR(3),=P'1'     ADD ONE NOTCH TO GRIP
         B     RPLLAB6             ..AND GO REST OF THEM
         SPACE
LOGXEOF  EQU   *
         CLOSE ITMLOGX             CLOSE ITM LOG FILE
         SPACE
         LTR   R15,R15             HOW ! WE DOIN'
         BZ    LOGXEOF2            GOOD!
         LA    R9,ITMLOGX          ELSE! SHOW ERROR
         LA    R8,=CL5'CLOSE'      SHOW ERROR REQ
         MVI   SHOFLAG,C'A'        SHOW ACB ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
LOGXEOF2 CLI   LEXSW,C'S'          WE ON SECOND EXTENT
         BE    EREPCN1             GREAT! WE'RE DONE
         CLI   CCSEXL,C'S'         WAS SECOND LOG XNTN EVER CRTED
         BE    SWITLX              YUP! TIME TO SWITCH EXNTENTS
         B     EREPCN1             ELSE! WE'RE DONE
         SPACE
SWITLX   CLI   CCUREX+6,C'A'       WE DOIN' 'A' EXTENT
         BNE   LOGXL1              NOPE! GO SET A AS CURRENT
         MVI   CCUREX+6,C'B'       ELSE! SET B AS CURR.
         B     LOGXL2              GO DO IT
LOGXL1   MVI   CCUREX+6,C'A'       SET A AS CURR.
LOGXL2   MVI   LEXSW,C'S'          WE ON SECOND EXTENT
         B     RPLLAB2             GO OPEN NEXT EXTENT
         SPACE 2
SHOWLGX  EQU   * HERE WE SHOW LOG EXTENT WE'RE CURRENTLY PRINTING
         ST    R2,LGE10SAV         SAVE RET REG
         MVC   WLGX(1),CCUREX+6    SHOW LOG XTNT
         WTO   MF=(E,WTOLGX)
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LWLGX-3),WTOLGX+3   MOVE MSG TO PRTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         L     R2,LGE10SAV           REST RET REG
         BR    R2                    GO HOME
         SPACE 3
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** LOG HANDLER **'
LOGHNDLR EQU   *
         ST    R2,LOG10SAV         SAVE RET. REG
         CLC   LOGREQ,=C'INIT'     INITIAL LOG ENTRY ??
         BNE   DOINIB              NOPE! CHECK NEXT REQTYPE
         BAL   R2,TIMERTN          OK! LETS GET THE DATE & TIME
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGODAT(7),UNPKDATE+1 MOVE DATESTAMP TO LOG REC
         MVC   LOGOTIM(6),UNPKTIME+1 MOVE TIMESTAMP TO LOG REC
         MVC   LOGOMSG(25),LOGIMSG MOVE DESCR. TO LOG REC
         CLI   PPRUNTYP,C'U'       THIS UTIL RUN
         BNE   INITOVR             NOPE! SKIP NEXT
         CLI   PPPAREA,C'U'        THIS 1ST PASS OF UTIL RUN
         BE    INITOVR             YES! SKIP NEXT
         MVC   LOGOMSG(25),LOGTMSG ELSE! MOVE 'U' DESCR. TO LOG REC
INITOVR  MVC   LOGOVAR,PPPAREA     MOVE ORIG. INPUT IMAGE TO LOG REC
         B     PUTLOG              WRITE IT OUT TO LOG
         SPACE
DOINIB   CLC   LOGREQ,=C'INIB'     ELSE! PARSER OUTPUT LOG ENTRY?
         BNE   NLOGREQA            NOPE! CHECK NEXT REQTYPE
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGODAT(7),UNPKDATE+1 MOVE DATESTAMP TO LOG REC
         MVC   LOGOTIM(6),UNPKTIME+1 MOVE TIMESTAMP TO LOG REC
         MVC   LOGOMSG(25),LOGBMSG MOVE DESCR. TO LOG REC
         MVC   LOGOVAR(80),PPRUNTYP MOV PARSER OUTPUT TO LOG REC
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQA EQU   *
         CLC   LOGREQ,=C'NEWR'     ELSE! NEW REC TO BE LOGD ??
         BNE   NLOGREQB            NOPE! CHECK NEXT REQTYPE
         BAL   R2,TIMERTN          OK! LETS GET THE DATE & TIME
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGODAT(7),UNPKDATE+1 MOVE DATESTAMP TO LOG REC
         MVC   LOGOTIM(6),UNPKTIME+1 MOVE TIMESTAMP TO LOG REC
         MVC   LOGOMSG(25),LOGNMSG MOVE DESCR. TO LOG REC
         MVC   LOGOVAR(80),VITMSREC MOV NEW REC TO LOG REC
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQB EQU   *
         CLC   LOGREQ,=C'OLDR'     ELSE! OLD REC TO BE LOGD ??
         BNE   NLOGREQC            NOPE! CHECK NEXT REQTYPE
         BAL   R2,TIMERTN          OK! LETS GET THE DATE & TIME
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGODAT(7),UNPKDATE+1 MOVE DATESTAMP TO LOG REC
         MVC   LOGOTIM(6),UNPKTIME+1 MOVE TIMESTAMP TO LOG REC
         MVC   LOGOMSG(25),LOGPMSG MOVE DESCR. TO LOG REC
         MVC   LOGOVAR(80),VITMSREC MOV NEW REC TO LOG REC
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQC EQU   *
         CLC   LOGREQ,=C'UPDR'     ELSE! UPD REC TO BE LOGD ??
         BNE   NLOGREQD            NOPE! CHECK NEXT REQTYPE
         BAL   R2,TIMERTN          OK! LETS GET THE DATE & TIME
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGODAT(7),UNPKDATE+1 MOVE DATESTAMP TO LOG REC
         MVC   LOGOTIM(6),UNPKTIME+1 MOVE TIMESTAMP TO LOG REC
         MVC   LOGOMSG(25),LOGUMSG MOVE DESCR. TO LOG REC
         MVC   LOGOVAR(80),VITMSREC MOV UPD REC TO LOG REC
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQD EQU   *
         CLC   LOGREQ,=C'EXPR'     ELSE! XPD REC TO BE LOGD ??
         BNE   NLOGREQE            NOPE! CHECK NEXT REQTYPE
         BAL   R2,TIMERTN          OK! LETS GET THE DATE & TIME
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGODAT(7),UNPKDATE+1 MOVE DATESTAMP TO LOG REC
         MVC   LOGOTIM(6),UNPKTIME+1 MOVE TIMESTAMP TO LOG REC
         MVC   LOGOMSG(25),LOGEMSG MOVE DESCR. TO LOG REC
         MVC   LOGOVAR(80),VITMSREC MOV UPD REC TO LOG REC
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQE EQU   *
         CLC   LOGREQ,=C'REPT'     ELSE! THIS REPORT OUTPUT ??
         BNE   NLOGREQF            NOPE! CHECK NEXT REQTYPE
         MVI   NOLOGSW,C'N'        MAKE SURE NO LOGGING
         MVI   LOGOFIL,X'40'       CLEAR WORKAREA
         MVC   LOGOFIL+1(LOGOLEN),LOGOFIL  DITTO
         MVC   LOGOMSG(25),LOGRMSG MOVE DESCR. TO LOG REC
         MVC   LOGOVAR(80),VITMSREC MOV REP REC TO LOG REC
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQF EQU   *
         CLC   LOGREQ,=C'RLOG'     ELSE! THIS LOG PRINT OUTPUT ??
         BNE   NLOGREQG            NOPE! CHECK NEXT REQTYPE
         MVI   NOLOGSW,C'N'        MAKE SURE NO LOGGING
         B     PUTLOG              OK! GO DO WRITE
         SPACE
NLOGREQG EQU   *
         B     SKIPLOG
         SPACE
PUTLOG   EQU   * IF LOGGING ON WE LOG ELSE WE WRITE ONLY TO ITMPRINT
         CLI   NOLOGSW,C'N'        IS LOGGING DISABLED
         BE    SKIPLOG             SHUCKKKS
         PUT   RPL=LOGXRPL         WRITE IT OUT TO LOG
         SPACE
         LTR   R15,R15             WRITE OK??
         BZ    SKIPLOG             GREAT! NOW LETS TO SYSOUT FILE
         B     LOGSMNGR            UHOH! CHK IF LOG SWITCH REQUIRED
         SPACE
SKIPLOG  PUT ITMPRINT,VLOGXREC     WRITE LOG RECORD TO SYSOUT
         B     LOGHEXIT            ...AND GO HOME
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** LOG SWITCH MNGR **'
LOGSMNGR EQU   * IF ERR = EOF WE DO A SWITCH ELSE WE TURN OFF LOGGING
         SHOWCB AREA=VERFDBK,LENGTH=4,FIELDS=FDBK,                     X
               RPL=LOGXRPL
         SPACE
         CLI   VERFDBK+3,X'1C'     HAVE WE REACHED END OF FILE
         BE    LOGSWIT             OK! GO CLOSE IT & OPEN NEXT ONE
LOG9ERR  LA    R9,LOGXRPL          ELSE! PICK RPL ADDR.
         LA    R8,=CL5'PUT L'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
LOGSWIT  EQU   *
         CLOSE ITMLOGX             CLOSE CURRENT EXTENT
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    LOGLAB1             GOOD! KEEP GOING!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'CLOSE'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
         SPACE
LOGLAB1  MODCB RPL=CRECRPL,OPTCD=UPD
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    LOGSWI2             GOOD! KEEP GOING!
         LA    R9,CRECRPL          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'MODCB'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
         SPACE
LOGSWI2  GET   RPL=CRECRPL         READ CNTLFIL FOR REQ. VOLSER
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    LOGLAB2             GOOD! KEEP GOING!
         LA    R9,CRECRPL          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'GET  '      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
         SPACE
LOGLAB2  MVC   LEX1(1),CCUREX+6    SET UP FOR WTO LATER
         CLI   CCUREX+6,C'A'       WE DOIN' 'A' EXTENT
         BNE   SETACUR             NOPE! GO SET A AS CURRENT
         MVI   CCUREX+6,C'B'       ELSE! SET B AS CURR.
         MVI   LEX2,C'B'           SET UP FOR WTO LATER
         B     SETNEX              GO DO IT
SETACUR  MVI   CCUREX+6,C'A'       SET A AS CURR.
         MVI   LEX2,C'A'           SET UP FOR WTO LATER
* FOLL. WILL POINT ACB TO NEW EXTENT AND CLEAR THE NEW EXT. AT OPEN
SETNEX   MODCB ACB=ITMLOGX,MACRF=(RST,OUT),DDNAME=(*,CCUREX)
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    LOGLAB3             GOOD! KEEP GOING!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'MODCB'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
         SPACE
LOGLAB3  OPEN  ITMLOGX             OPEN NEW EXTENT
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    LOGLAB4             GOOD! KEEP GOING!
         LA    R9,ITMLOGX          ELSE! PICK ACB ADDR.
         LA    R8,=CL5'OPEN '      SHOW VSAM REQ.
         MVI   SHOFLAG,C'A'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
         SPACE
LOGLAB4  BAL   R2,TIMERTN          GO UPDATE TIMER
         MVC   COEDAT(13),CCEDAT   MOVE TIMSTMP OF CURR. TO OLD
         MVC   CCEDAT(7),UNPKDATE+1 MOV CURR. EXT CREATE TO CNTLREC
         MVC   CCETIM(6),UNPKTIME+1 MOV CURR. EXT CREATE TO CNTLREC
         MVI   CCSEXL,C'S'         SHOW SECOND LOG XNTN CREATED
         SPACE
         PUT   RPL=CRECRPL         WRITE OUT LOG CNTL REC
         SPACE
         LTR   R15,R15             WRITE OK??
         BZ    LOGLAB5             GOOD! KEEP GOING!
         LA    R9,CRECRPL          ELSE! PICK RPL ADDR.
         LA    R8,=CL5'PUT C'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
LOGLAB5  CLOSE ITMCNTL,TYPE=T      FORCE WRITE OF LOG CNTL REC.
         SPACE
         LTR   R15,R15             WRITE OK??
         BZ    LOGLAB6             GOOD! KEEP GOING!
         LA    R9,ITMCNTL          ELSE! SHOW ERROR
         LA    R8,=CL5'CLOST'      SHOW ERROR REQ
         MVI   SHOFLAG,C'A'        SHOW ACB ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
LOGLAB6  WTO   MF=(E,WTOLOGS)      TELL THE WORLD
         SPACE
         PUT   RPL=LOGXRPL         OK! LETS TRY LOG WRITE AGAIN
         SPACE
         LTR   R15,R15             WRITE OK??
         BZ    LOGITMPT            GOOD! HOME TIME!
         LA    R9,LOGXRPL          ELSE! PICK RPL ADDR.
         LA    R8,=CL5'PUT L'      SHOW VSAM REQ.
         MVI   SHOFLAG,C'R'        SHOW VSAM REQ.
         BAL   R2,ITMERLOG         .AND! GO SHOH ERROR
         B     LOGITMPT            ....AND GO HOME
LOGITMPT EQU   *
         PUT ITMPRINT,VLOGXREC     WRITE LOG RECORD TO SYSOUT
         SPACE
LOGHEXIT EQU   *
         CLC   LOGREQ,=C'EXPR'     XPD REC TO BE LOGD ??
         BNE   LOGCHR              NOPE! SEE IF REPORT REC
         BAL   R2,REPTPRT          ELSE! GO TO 'REPT' WRITER
         B     LOGOHOM             .... AND GO HOME
LOGCHR   CLC   LOGREQ,=C'REPT'     THIS REPORT OUTPUT ??
         BNE   LOGOHOM             NOPE! JUST GO HOME
         BAL   R2,REPTPRT          ELSE! GO TO 'REPT' WRITER
LOGOHOM  L     R2,LOG10SAV         RESTORE RET. ADDR.
         BR    R2                  ....AND GO THERE
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** REPORT FORMATTER **'
REPTPRT  EQU   * HERE WE FORMAT & PRINT OUTPUT TO 'ITMREPT' SYSOUT
         ST    R2,RPT10SAV           SAVE RET ADDR.
         SPACE
         CLI   PAGNEW,C'Y'         THIS A NEW PAGE?
         BNE   REPLAB2             NOPE! KEEP GOING
REPLAB1  MVC   HDR1TIM(6),UNPKTIME+1 MOV CURR. TIME TO PAGE HDR
         MVC   HDR1TIM+7(7),UNPKDATE+1 MOV CURR. DATE TO PAGE HDR
         PUT  ITMREPT,PAGEHDR1     WRITE HDR RECORD TO SYSOUT
         SPACE
         CLI   PPRUNTYP,C'X'       THIS EXPIRATION RUN
         BNE   REPLABA             NOPE! KEEP GOING
         MVC   PAGEHDR2+36(22),EXPRHDR  MOVE DESC. HDR TO PRTLIN
         B     REPLAB$             ..AND KEEP GOING
REPLABA  CLI   PPRUNTYP,C'R'       THIS ?REPORT? RUN
         BNE   REPLAB$             NOPE! KEEP GOING
         CLI   PPSUBRUN,C'A'       THIS 'ALL VOL' RUN
         BNE   REPLABB             NOPE! KEEP GOING
         MVC   PAGEHDR2+37(21),ALLVHDR  MOVE DESC. HDR TO PRTLIN
         B     REPLAB$             ..AND KEEP GOING
REPLABB  CLI   PPSUBRUN,C'V'       THIS 'AVAIL VOL' REPT
         BNE   REPLABC             NOPE! KEEP GOING
         MVC   PAGEHDR2+31(32),AVAVHDR  MOVE DESC. HDR TO PRTLIN
         B     REPLAB$             ..AND KEEP GOING
REPLABC  CLI   PPSUBRUN,C'C'       THIS 'CREAT VOL' REPT
         BNE   REPLABD             NOPE! KEEP GOING
         MVC   PAGEHDR2+34(26),SCRTHDR  MOVE DESC. HDR TO PRTLIN
         B     REPLAB$             ..AND KEEP GOING
REPLABD  CLI   PPSUBRUN,C'F'       THIS 'FORECAST' REPT
         BNE   REPLABE             NOPE! KEEP GOING
         MVC   PAGEHDR2+32(31),SCRFHDR  MOVE DESC. HDR TO PRTLIN
         B     REPLAB$             ..AND KEEP GOING
REPLABE  CLI   PPSUBRUN,C'X'       THIS 'EXCEPTION' REPT
         BNE   REPLABF             NOPE! KEEP GOING
         MVC   PAGEHDR2+30(34),EXCPHDR  MOVE DESC. HDR TO PRTLIN
         B     REPLAB$             ..AND KEEP GOING
REPLABF  CLI   PPSUBRUN,C'S'       THIS 'FIND' REPT
         BNE   REPLAB$             NOPE! KEEP GOING
         MVC   PAGEHDR2+37(21),SVDSHDR  MOVE DESC. HDR TO PRTLIN
         SPACE
REPLAB$  UNPK  UNPKWK(5),PAGCTR(3) UNPACK PAGE CTR
         OI    UNPKWK+4,X'F0'      FLIP LAST SIGN
         MVC   HDR2PGN(3),UNPKWK+2 MOV PGE # TO PAGE HDR
         PUT  ITMREPT,PAGEHDR2     WRITE HDR RECORD TO SYSOUT
         SPACE
         PUT  ITMREPT,PAGEHDR3     WRITE HDR RECORD TO SYSOUT
         SPACE
         AP    PAGCTR,=PL3'1'      BUMP PAGE CTR
         ZAP   LINCTR,=PL3'10'     RESET LINE CTR
REPLAB2  AP    LINCTR,=PL3'1'      BUMP LINE CTR
         CP    LINCTR,=PL3'60'     WE AT E O P
         BNH   REPLAB3             NOPE! GO FORMAT PRTLINE
         MVI   PAGNEW,C'Y'         ELSE! SHOW TOP OF PAGE
         B     REPLAB1             .AND GO FORMAT NEW PAGE
REPLAB3  MVI   PAGELIN,X'40'       CLR OUT PRTLINE
         MVC   PAGELIN+1(PGLINL-1),PAGELIN
         CLI   PAGNEW,C'Y'         THIS TOP OF PAGE
         BNE   REPLAB4             NOPE! KEEP GOING
         MVI   PAGNEW,C'M'         SHOW NOT TOP OF PAGE
         MVI   PAGCC,C'0'          MOVE CARR. CNTRL TO PRTLINE
         CLI   RNODF,C'N'          WE GOT ANYTHING TO SHOW
         BNE   REPLAB4             YUP! GO SHOW IT
         MVC   PAGVS+6(35),NODAHDR  ELSE! SHOW WE GOT NADA!
         B     REPLABX             ...AND WERE DONE
REPLAB4  MVC   PAGVS(6),CVOLSR     MOVE TAPE VOLSER TO PRTLIN
         MVC   PAGED(7),CEDATE     MOVE TAPE EXPIR. DATE YYYYDDD
         MVC   PAGCD(7),CCDATE     MOVE TAPE CREATION DATE
         MVC   PAGDS(44),CCTDSN    MOVE TAPE DSN (44 MAX.)
         CLI   CCFLG1,C'C'         THIS VOL NOT-EXPIRED
         BNE   REPLABG             NOPE! KEEP GOING
         MVC   PAGS1(7),CREATC     SHOW VOL IN USE
         B     REPLABH             KEEP GOING
REPLABG  MVC   PAGS1(7),SCRATC     SHOW VOL = SCRATCH
REPLABH  CLI   CCFLG2,X'40'        IE, NO XCPTIONS
         BE    REPLABX             YUP! WERE DONE
         CLI   CCFLG2,C'B'         IE, 'BOTH' XCPTIONS
         BNE   REPLABI             NOPE! KEEP GOING
         MVC   PAGS2(4),BOTHCC     ELSE! SHOW BOTH XCPTNS
         B     REPLABX             ...AND WERE DONE
REPLABI  CLI   CCFLG2,C'U'         IE, 'UNKN' XCPTIONS
         BNE   REPLABJ             NOPE! KEEP GOING
         MVC   PAGS2(4),UNKNCC     ELSE! SHOW UNKN XCPTN
         B     REPLABX             ...AND WERE DONE
REPLABJ  CLI   CCFLG2,C'O'         IE, 'OVLY' XCPTIONS
         BNE   REPLABX             NOPE! ????????
         MVC   PAGS2(4),OVLYCC     ELSE! SHOW OVLY XCPTN
         SPACE
REPLABX  PUT  ITMREPT,PAGELIN      WRITE LINE REC TO SYSOUT
         SPACE
REPTXIT  L     R2,RPT10SAV         RESTORE RET. ADDR.
         BR    R2                  ....AND GO THERE
         SPACE
   TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** UTILITY PROCSNG **'
DOITMUTL EQU   *
         ST    R2,UTL10SAV           SAVE RET ADDR.
         SPACE
         CLI   PPSUBRUN,C'S'         IS THIS A SCRATCH RUN
         BNE   ITMUTNFA              NOPE! CHK NEXT FUNCTION
         MVC   SRCHKY(6),PRVOLLO     SET UP SEARCH ON REQ. VOLSER
         B     DOADDES               ...AND GO DO IT
         SPACE
DOADDES  MODCB RPL=CNTLRPL,OPTCD=DIR,ARG=SRCHKY
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    GETULOP1            GOOD! GET THE RECORD
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
GETULOP1 GET   RPL=CNTLRPL         READ CNTLFIL FOR REQ. VOLSER
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    UTLADDEE            SHOW ERROR (CANT ADD WHATS THERE)
         SPACE
         SHOWCB AREA=VERFDBK,LENGTH=4,FIELDS=FDBK,                     X
               RPL=CNTLRPL
         SPACE
         CLI   VERFDBK+3,X'10'     RECORD NOT FOUND??
         BE    UTADDSC             GOOD! GO ADD THIS TAPE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET D'      SHOW 'GET DIR' ERROR
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
UTADDSC  EQU   * HERE WE SET UP TO ADD A NEW SCRATCH TAPE
         MVI   CVOLSR,X'40'        FIRST CLEAR IT OUT
         MVC   CVOLSR+1(79),CVOLSR    DITTO
         MVC   CVOLSR(6),SRCHKY    MOVE VOLSER TO RECORD
         MVI   CCFLG1,C'E'         SHOW THIS IS A SCRATCH
         PUT   RPL=CNTLRPL         WRITE IT TO ITMS DB
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    UTALAB              GOOD! GO ADD TO CTR
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'PUT D'      SHOW 'PUT DIR' ERROR
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
UTALAB   AP    NEWCTR(3),=P'1'     ADD ONE NOTCH TO GRIP
         MVC   LOGREQ(4),=C'NEWR'  SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         SPACE
UTADDS2  CLI   PPSUBRNA,C'S'       IS THIS A SINGLE ADD
         BE    ADDSCEX             OK! WE'RE DONE
         XC    PACKWK(8),PACKWK    ELSE! CLR AREA
         PACK  PACKWK+4(4),SRCHKY  SET KEY FOR ADDING
         NI    PACKWK+7,X'F0'      TO BE SURE SIGN IS OK
         OI    PACKWK+7,X'0C'      TO BE SURE SIGN IS OK
         CVB   R3,PACKWK           SO WE CAN ADD TO IT
         LA    R3,1(,R3)           BUMP BY ONE
         CVD   R3,PACKWK           OK! BACK TO THE REAL WORLD
         UNPK  UNPKWK(7),PACKWK+4(4)  "   "    "    "     "
         OI    UNPKWK+6,X'F0'      TO BE SURE SIGN IS OK
         CLC   UNPKWK+1(6),PRVOLHI COMPARE TO HI VOLSER OF RANGE
         BH    ADDSCEX             OK! WE'RE DONE
         MVC   SRCHKY(6),UNPKWK+1  ELSE! NEW SEARCH KEY
         B     GETULOP1            ...AND! GO GET NEXT ONE
         SPACE
ADDSCEX  BAL   R2,PUTNCTR          GO PUT OUT COUNTER
         B     UTLEXIT             ....AND GO HOME
         SPACE
UTLADDEE EQU   * SHOW ADDE ERROR BECAUSE REC ALREADY EXISTS
         BAL   R2,ITMER005         GO SHOW ERRO
         B     UTADDS2             && GO CHECK NEXT ONE
         SPACE
ITMUTNFA EQU   *
         CLI   PPSUBRUN,C'I'       IS THIS A 'SYSIN' RUN
         BNE   ITMUTNFB            NOPE! CHK NEXT FUNCTION
         SPACE
         OPEN  ITMSCIN             OPEN INPUT FILE
         SPACE
         MVI   SYSRUN,C'S'         SHOW WE DOIN' SYSIN RUN
UTSINLAB MVI   PPPAREA,X'40'       OK NOW CLR OUT PARMAREA
         MVC   PPPAREA+1(79),PPPAREA
         MVI   PPCTYP,X'40'        KEEP CLRNG OUT PARMAREA
         MVC   PPCTYP+1(PPALEN-1),PPCTYP
         GET   ITMSCIN,PPPAREA     READ A RECORD
         SPACE
         AP    GETCTR,=PL3'1'      BUMP GETCTR
         MVC   LOGREQ,=C'INIT'     GO LOG IT
         BAL   R2,LOGHNDLR         GO LOG IT
         LA    R1,PRSAREA          POINT TO PARSER WORKAREA
         L     R15,=V(ITMPAR01)    GET PARSER'S ADDR.
         BALR  R14,R15             ...AND GO DO IT!
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    UTSIN01             GOOD! GO PROCS INPUT
         SPACE 2
         BAL   R2,ITMER00S         GO SHOW ERROR
         B     UTSINLAB            ..AND RETURN FOR MORE
UTSIN01  MVC   LOGREQ,=C'INIB'     SHOW INITIAL PRS ENTRY
         BAL   R2,LOGHNDLR         GO LOG IT
         BAL   R2,DOITMCRT         GO DO IT
         B     UTSINLAB            ..AND RETURN FOR MORE
         SPACE
INOMORE  EQU   *
         CLOSE ITMSCIN             CLOSE SYSIN FILE
         BAL   R2,PUTNCTR          WRITE COUNTERS TO JOBLOG
         B     UTLEXIT             ..AND RETURN FOR GOOD
         SPACE 3
ITMUTNFB EQU   *
         CLI   PPSUBRUN,C'X'       IS THIS A 'XPDAT' RUN
         BE    ITMUTXF             OK GO DO IT
         CLI   PPSUBRUN,C'F'       IS THIS A 'FLAG' RUN
         BE    ITMUTXF             OK GO DO IT
         CLI   PPSUBRUN,C'D'       IS THIS A 'DELETE' RUN
         BNE   ITMUTNFC            NOPE! CHK NEXT FUNCTION
ITMUTXF  EQU   * HERE WE DO 'XPDAT' 'DELETE' AND 'FLAG' UTIL RUNS
         MODCB RPL=CNTLRPL,OPTCD=(KEY,DIR,UPD),ARG=PRVOLLO
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    ITMUTXF1            GOOD! GET THE RECORD
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'MODCB'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
ITMUTXF1 GET   RPL=CNTLRPL         GET REQ. RECORD FOR UPDATE
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    ITMUTXF2            OK! GO PROCESS
         SPACE
         SHOWCB AREA=VERFDBK,LENGTH=4,FIELDS=FDBK,                     X
               RPL=CNTLRPL
         SPACE
         CLI   VERFDBK+3,X'10'     RECORD NOT FOUND??
         BE    ITMER00X            HEY! CAINT UPDT WHAT I AINT GOT
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'GET D'      SHOW 'GET DIR' ERROR
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
ITMUTXF2 MVC   LOGREQ(4),=C'OLDR'  SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         CLI   PPSUBRUN,C'D'       IS THIS A 'DELET' RUN
         BE    ITMUTDL1            YUP! GO DO IT
         CLI   PPSUBRUN,C'X'       IS THIS A 'XPDAT' RUN
         BNE   ITMUTXF3            NO GO DO FLAG BIT
         MVC   CEDATE(7),PREDATE   ELSE! MOVE UPDATED DATE TO REC
         B     ITMUTXFA            AND GO WRITE REC BACK TO FILE
         SPACE
ITMUTXF3 CLI   PRUFLAG,C'S'        IE SC/EXP FLAG CHNG
         BNE   ITMUXF3A            NO! DO NEXT FLAG
         MVC   CCFLG1(1),PRUFVAL   OK MOVE NEW VAL TO REC
         B     ITMUTXFA            AND GO WRITE REC BACK TO FILE
ITMUXF3A MVC   CCFLG2(1),PRUFVAL   ELSE! CHNG EXECP STAT FLAG
         SPACE
ITMUTXFA PUT   RPL=CNTLRPL         OK! WRITE IT BACK
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         BZ    ITMUTXFB            GOOD! LETS LOG & KEEP GOING
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'PUT D'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE 2
ITMUTXFB MVC   LOGREQ(4),=C'UPDR'  SET UP FOR LOGGER
         BAL   R2,LOGHNDLR         ...AND GO LOG IT!!
         B     UTLEXIT             GOOD! LETS KEEP GOING
         SPACE
ITMUTDL1 ERASE RPL=CNTLRPL         OK! DELETE THIS REC
         SPACE
         LTR   R15,R15             CHECK FOR ANY RETURN CODE
         B     UTLEXIT             GOOD! LETS KEEP GOING
         SPACE
         LA    R9,CNTLRPL          ELSE! SHOW ERROR
         LA    R8,=CL5'ERASE'      SHOW ERROR REQ
         MVI   SHOFLAG,C'R'        SHOW RPL ERROR
         B     ITMER003            ...AND GO TO ERRORS
         SPACE
ITMUTNFC EQU   *
UTLEXIT  EQU   *
         L     R2,UTL10SAV         REST. RET ADDR.
         BR    R2                  RETURN TO CALLER
  TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** MISC. ROUTINES **'
TIMERTN  EQU   * THIS RTN WILL GET THE CURRENT DATE & TIME
         ST    R2,TIM10SAV        SAVE RET ADDR.
         SPACE
         TIME DEC,TIMERET,LINKAGE=SYSTEM
         LTR   R15,R15            HOW WE DOIN' ???
         BZ    TIMLAB1             GOOD! KEEP GOING!
         XC    TIMWFLD(8),TIMWFLD  ELSE! ZERO OUT RET FLD TO SHOW ERROR
         SPACE
TIMLAB1  MVC   TIMWFLD(4),TIMERET MOVE TIME TO RET FIELD
         MVI   TIMWFLD+3,X'0C'    SET 'SIGN' BIT FOR TIME PORTION
         L     R2,TIMERET+8       GET DATE PORTION
         SLL   R2,4               SHIFT OUT UPPER ZERO
         ST    R2,DATWFLD         SET DATE PORTION
         OI    DATWFLD+3,X'0C'    SET 'SIGN' BIT FOR DATE PORTION
         SPACE
         UNPK  UNPKDATE(8),DATWFLD(4)  UNPACK JULIAN DATE
         OI    UNPKDATE+7,X'F0'         FLIP LAST SIGN
         UNPK  UNPKTIME(8),TIMWFLD(4)  UNPACK CURR. TIME
         OI    UNPKTIME+7,X'F0'         FLIP LAST SIGN
         SPACE
TIMREXIT EQU  * HERE WE GO HOME
         L     R2,TIM10SAV        RELOAD RETURN ADDR.
         BR    R2                 ........SAYONARA
         EJECT
PUTNCTR  EQU   *
         ST    R2,CTR10SAV             SAVE RET REG
         UNPK  UNPKWK(5),NEWCTR(3)     UNPACK COUNT OF NEW RECS
         OI    UNPKWK+4,X'F0'          FLIP LAST SIGN
         CLI   PUTFLG,C'E'             THIS AN EXPIRATION RUN
         BE    EXPCTR                  YUP! DO EXP WTO
         CLI   PUTFLG,C'R'             THIS AN REPORT RUN
         BE    REPCTR                  YUP! DO REP WTO
         SPACE
         CLI   PPRUNTYP,C'U'           WE DOIN UTIL RUN
         BNE   CRTCTR                  NOT! SKIP NEXT
         UNPK  UNPKWK(5),GETCTR(3)     UNPACK COUNT OF SYSIN RECS
         OI    UNPKWK+4,X'F0'          FLIP LAST SIGN
         MVC   GCNTR(4),UNPKWK+1       MOVE TO WTO AREA
         WTO   MF=(E,WTOCNTRG)
         UNPK  UNPKWK(5),NEWCTR(3)     UNPACK COUNT OF NEW RECS
         OI    UNPKWK+4,X'F0'          FLIP LAST SIGN
CRTCTR   MVC   ACNTR(4),UNPKWK+1       MOVE TO WTO AREA
         WTO   MF=(E,WTOCNTRA)
         UNPK  UNPKWK(5),UPDCTR(3)     UNPACK COUNT OF NEW RECS
         OI    UNPKWK+4,X'F0'          FLIP LAST SIGN
         MVC   UCNTR(4),UNPKWK+1       MOVE TO WTO AREA
         WTO   MF=(E,WTOCNTRU)
         B     PUTEXIT                 MILLER TIME!
         SPACE
EXPCTR   MVC   ECNTR(4),UNPKWK+1       MOVE TO WTO AREA
         WTO   MF=(E,WTOCNTRE)
         B     PUTEXIT                 MILLER TIME!
         SPACE
REPCTR   MVC   RCNTR(4),UNPKWK+1       MOVE TO WTO AREA
         WTO   MF=(E,WTOCNTRR)
         B     PUTEXIT                 MILLER TIME!
         SPACE
PUTEXIT  L     R2,CTR10SAV            REST RET REG
         BR    R2                     GO HOME
         EJECT
TELLWRLD EQU   *
         ST    R2,TWD10SAV           SAVE RET REG
         WTO   MF=(E,(R9))           SHOW ON LOG
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         LH    R2,0(R9)              PICK MSG LEN.
         EX    R2,MVCOUT             MOVE MSG TO PRINTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         L     R2,TWD10SAV           REST RET REG
         BR    R2                    GO HOME
         SPACE
MVCOUT   MVC   POUTVAR(0),2(R9)      MOVE MSG TO PRINTLINE
         SPACE
SHOWFDBK EQU   *
         ST    R2,SHO10SAV           SAVE RET REG
         CLI   SHOFLAG,C'A'          WE LOOKING AT AN ACB
         BNE   SHOWRPL               NOPE! MUST BE AN RPL
         SHOWCB AREA=VERFDBK,LENGTH=4,FIELDS=ERROR,                    X
               ACB=(R9)
         SPACE
         B     SHOTRAN               OK! GO TRANSLATE ERR CODE
SHOWRPL  SHOWCB AREA=VERFDBK,LENGTH=4,FIELDS=FDBK,                     X
               RPL=(R9)
         SPACE
SHOTRAN  MVI   VERFDBK+4,X'0C'     SET SIGN FOR UNPACK
         UNPK  UNPKWK(9),VERFDBK(5) UNPACK IT
         NC    UNPKWK(8),ANDZEROS  TURN OFF ALL ZONES
         TR    UNPKWK(8),DISPLTAB    TRANSLATE INTO DISPLA'BL CHAR.
         SPACE
         L     R2,SHO10SAV           REST RET REG
         BR    R2                    GO HOME
         SPACE
      TITLE '**ITMS000A** TAPE MANGMNT SYSTEM  ** ERROR RTNS  **'
ITMERLOG EQU   * FOR ANY VSAM ERR ON THE LOGS WE COME HERE
         ST    R2,LER10SAV           SAVE RET REG
         BAL   R2,SHOWFDBK           GO PICK VSAM ERR CODE
         SPACE
         MVC   ELEX(1),CCUREX+6      PICK UP CURR. LOG EXTENT
         MVC   EVREQ(5),0(R8)        PICK UP VSAM REQ TYPE
         CLI   SHOFLAG,C'A'          ?? ACB
         BNE   ITMERPL               MUST BE RPL
         MVC   EACBRP(3),=C'ACB'     == ACB
         B     DOITMEW               GO ISSUE WTO
ITMERPL  MVC   EACBRP(3),=C'RPL'     == RPL
DOITMEW  MVC   LOGEVE(8),UNPKWK      MOVE VSAM ERR CODE
         WTO   MF=(E,WTOLOGE)
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGEL-3),WTOLOGE+3   MOVE MSG TO PRTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         MVI   NOLOGSW,C'N'          SHOW LOGGING DISABLED
         LA    R15,8                 SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         L     R2,LER10SAV           REST RET REG
         BR    R2                    GO HOME
         SPACE 3
ITMER000 EQU   * INVALID PARMLIST DETECTED BY ITMS00A
         LA    R9,ITME00             PICK MSG TEXT
         BAL   R2,TELLWRLD           GO DO IT
         LA    R15,16                SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE
ITMER001 EQU   * ZERO LENGTH PARMLIST RECEIVED BY ITMS00A
         LA    R9,ITME00             PICK MSG TEXT
         BAL   R2,TELLWRLD           GO DO IT
         LA    R15,16                SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE
ITMER002 EQU   * NONZERO RETCODE FROM ITMPAR01
         B     *+0(R15)              BRANCH ON RET CODE
         B     ITME221               IE, RET CODE 4
         B     ITME222               IE, RET CODE 8
         B     ITME223               IE, RET CODE 12
         B     ITME224               IE, RET CODE 16
ITME221  LA    R9,ITME021            PICK MSG TEXT
         BAL   R2,TELLWRLD           GO DO IT
         B     ITME2XT               GO HOME
ITME222  LA    R9,ITME022            PICK MSG TEXT
         L     R4,PPERROFF           PICK UP PARML ERR OFFSET
         CVD   R4,PACKWK             PICK UP PARML ERR OFFSET
         UNPK  UNPKWK(7),PACKWK+4(4)  "   "    "    "     "
         OI    UNPKWK+6,X'F0'        TO BE SURE SIGN IS OK
         MVC   ER2OFF(2),UNPKWK+5    PUT INTO MSG AREA
         BAL   R2,TELLWRLD           GO DO IT
         B     ITME2XT               GO HOME
ITME223  LA    R9,ITME023            PICK MSG TEXT
         BAL   R2,TELLWRLD           GO DO IT
         B     ITME2XT               GO HOME
ITME224  LA    R9,ITME024            PICK MSG TEXT
         BAL   R2,TELLWRLD           GO DO IT
ITME2XT  LA    R15,16                SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE
ITMER003 EQU   * WE COME HERE FOR ALL VSAM ERRORS ON ITMCNTL FILE
         BAL   R2,SHOWFDBK           GO PICK VSAM ERR CODE
         SPACE
         MVC   ER3REQ(5),0(R8)       PICK UP VSAM REQ TYPE
         CLI   SHOFLAG,C'A'          ?? ACB
         BNE   ITMERPL2              MUST BE RPL
         MVC   ER3AR(3),=C'ACB'      == ACB
         B     DOITMEWT              GO ISSUE WTO
ITMERPL2 MVC   ER3AR(3),=C'RPL'      == RPL
DOITMEWT MVC   ER3VE(8),UNPKWK       MOVE VSAM ERR CODE
         WTO   MF=(E,WTOERR3)
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGE3-3),WTOERR3+3   MOVE MSG TO PRTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         LA    R15,12                SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE 2
ITMER004 EQU   * MODCB ON THE CNTL EXLST FAILED
          WTO   'ITMER004: MODCB ON CNTLFILE ''EXLST'' FAILED , ITMS000X
               A TERMINATING',ROUTCDE=15
         LA    R15,12                SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              ....&&& GO HOME
ITMFERR1 EQU   * FIRST REC ON FILE NOT CNTL REC = FATAL ERROR
         WTO   'ITMFERR1: FATAL ERROR DETECTED , ITMS000A ABENDING',   X
               ROUTCDE=15
**
         ABEND 299,DUMP,STEP
**
         SPACE 2
ITMER005 EQU   * SCRATCH VOL TO BE ADDED ALREADY EXISTS
         ST    R2,ER510SAV           SAVE RET REG
         MVC   ER5VOL(6),SRCHKY      MOVE REQUESTED VOLSER TO MSG
         WTO   MF=(E,WTOERR5)
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGE5-3),WTOERR5+3   MOVE MSG TO PRTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         LA    R15,4                 SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         L     R2,ER510SAV           REST RET REG
         BR    R2                    GO HOME
         SPACE 2
ITMER00X EQU   * REQ VOLSER FOR UITL UPDT NOT FOUND
         MVC   ERXVOL(6),PRVOLLO     MOVE REQUESTED VOLSER TO MSG
         WTO   MF=(E,WTOERRX)
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGEX-3),WTOERRX+3   MOVE MSG TO PRTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         LA    R15,8                 SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE 2
ITMER00F EQU   * ERROR ON FORECAST DATE SPECIFICATION
         CLI   PPRUNTYP,C'X'         WAS THIS AN EXPRTN REPORT
         BE    MER0FE                YUP! DO EXPRTN ERROR MSG
         WTO   MF=(E,WTOERF)         ISSUE WTO
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGEF-3),WTOERF+3   MOVE MSG TO PRTLINE
         B     PUTERFE               GO PRINT IT
         SPACE
MER0FE   WTO   MF=(E,WTOERFE)        ISSUE WTO
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGEFE-3),WTOERFE+3   MOVE MSG TO PRTLINE
         SPACE
PUTERFE  PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         LA    R15,8                 SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE 2
ITMER00G EQU   * REQUESTED VOL/DSN ON 'FIND' REPT NOT FOUND
         CLI   PPSUBRNA,C'D'         WAS THIS A DSN 'FIND'
         BNE   ERGPVOL               NOPE! SO MOVE 'VOL' TO MSG
         MVC   ERGREQ(3),=CL3'DSN'   SET UP MSG
         B     DOERGWTO              ....AND GO DO IT
ERGPVOL  MVC   ERGREQ(3),=CL3'VOL'   SET UP MSG
DOERGWTO WTO   MF=(E,WTOERG)
         SPACE
         MVI   POUTFIL,X'40'         CLR OUT PRINTLINE
         MVC   POUTVAR(POUTLEN-1),POUTFIL   DITTO
         MVC   POUTVAR(LOGEG-3),WTOERG+3   MOVE MSG TO PRTLINE
         SPACE
         PUT   ITMPRINT,ITMPOUT      WRITE IT TO SYSOUT
         SPACE
         LA    R15,8                 SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         B     ITMS0END              GO HOME
         SPACE 2
ITMER00S EQU   * NONZERO RETCODE FROM ITMPAR01 ON SYSIN INPUT
         ST    R2,UTE10SAV           SAVE RET REG
         B     *+0(R15)              BRANCH ON RET CODE
         B     ITMES01               IE, RET CODE 4
         B     ITMES02               IE, RET CODE 8
ITMES01  LA    R9,ITMESE1            PICK MSG TEXT
         BAL   R2,TELLWRLD           GO DO IT
         B     ITMESXT               GO HOME
ITMES02  LA    R9,ITMESE2            PICK MSG TEXT
         L     R4,PPERROFF           PICK UP PARML ERR OFFSET
         CVD   R4,PACKWK             PICK UP PARML ERR OFFSET
         UNPK  UNPKWK(7),PACKWK+4(4)  "   "    "    "     "
         OI    UNPKWK+6,X'F0'        TO BE SURE SIGN IS OK
         MVC   UTEOFF(2),UNPKWK+5    PUT INTO MSG AREA
         BAL   R2,TELLWRLD           GO DO IT
ITMESXT  XR    R15,R15               CLR RET. CODE
         LA    R15,4                 SET RET. CODE
         ST    R15,SAV15RTC          SAV RET. CODE
         L     R2,UTE10SAV           REST RET REG
         BR    R2                    GO HOME
         SPACE
    TITLE '**ITMS000A** TAPE MANAGEMENT SYSTEM  ** VSAM CNTLBLKS **'
* NOTE! THE FOL'NG CNTL BLKS ARE MODIFD AT RUNTIME VIA THE MODCB MACRO
*
* CONTROL BLOCKS FOR THE ITMS CNTL FILE DATABASE
ITMCNTL  ACB   AM=VSAM,                                                X
               DDNAME=ITMCNTL,                                         X
               MACRF=(SEQ,DIR,IN,KEY),                                 X
               EXLST=CNTLXLST
         SPACE 2
CNTLRPL  RPL   ACB=ITMCNTL,          ITMS CNTL FILE GEN. PURP. RPL     X
               AM=VSAM,                                                X
               AREA=VITMSREC,                                          X
               AREALEN=80,                                             X
               RECLEN=80,                                              X
               OPTCD=(KEY,SEQ,SYN,NUP,MVE,ARD,FWD,KEQ,FKS)
         SPACE 2
CRECRPL  RPL   ACB=ITMCNTL,          ITMS CNTL FILE CNTL REC.  RPL     X
               AM=VSAM,                                                X
               ARG=CRECARG,                                            X
               AREA=VCNTLREC,                                          X
               AREALEN=80,                                             X
               RECLEN=80,                                              X
               OPTCD=(KEY,DIR)
         SPACE 2
CNTLXLST EXLST EODAD=CNTLEOF
         SPACE 2
* CONTROL BLOCKS FOR THE ITMS LOG FILE(S)
ITMLOGX  ACB   AM=VSAM,                                                X
               DDNAME=ITMLOGX,                                         X
               EXLST=LOGXXLST                                          X
               MACRF=(ADR,SEQ,IN,OUT)
         SPACE 2
LOGXRPL  RPL   ACB=ITMLOGX,                                            X
               AM=VSAM,                                                X
               AREA=VLOGXREC,                                          X
               AREALEN=121,                                            X
               RECLEN=121,                                             X
               OPTCD=(ADR)   (IE, DEFAULT IS GOOD ON REST)
         SPACE 2
LOGXXLST EXLST EODAD=LOGXEOF
         SPACE 2
    TITLE '**ITMS000A** TAPE MANAGEMENT SYSTEM  ** QSAM CNTLBLKS **'
*        QSAM CONTROL BLOCKS:
ITMPRINT DCB   DSORG=PS,DDNAME=ITMPRINT,MACRF=PM
*
         SPACE 2
ITMREPT  DCB   DSORG=PS,DDNAME=ITMREPT,MACRF=PM
*
         SPACE 2
ITMSCIN  DCB   DSORG=PS,DDNAME=ITMSCIN,MACRF=GM,RECFM=F,LRECL=80,      X
               EODAD=INOMORE
         SPACE 2
    TITLE '**ITMS000A** TAPE MANAGEMENT SYSTEM  *** WORKAREAS  ***'
SAVEAREA DS    18F                 REG SAVE AREA
SAV15RTC DS    F
SAVORINP DS    F                   ORIGINAL PARMLIST ADDR. SAVEAREA
OPN10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
CLS10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
TIM10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
LOG10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
CRT10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
UTL10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
CTR10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
TWD10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
SHO10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
LER10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
ER510SAV DS    F                   BALREG SAV FOR XXX ROUTINE
EXP10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
REP10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
LGE10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
RPT10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
UTE10SAV DS    F                   BALREG SAV FOR XXX ROUTINE
         SPACE 2
TIMERET  DS    4F                  WORKAREA FOR TIME MACRO
TIMWFLD  DS    XL4                 RETURNED TIME WORK FIELD
DATWFLD  DS    XL4                 RETURNED DATE WORK FIELD
         DS    0D                  OK NOW FOR SOME ALIGNMENT
UNPKDATE DS    XL8                 DATE UNPACK WORK AREA
UNPKTIME DS    XL8                 TIME UNPACK WORK AREA
PACKWK   DS    XL8                 GENERAL PAKN'G WORK AREA
PACKFIL  DS    XL8                 GENERAL PAKN'G WORK AREA
UNPKWK   DS    XL8                 GENERAL UNPK'G WORK AREA
UNPKFIL  DS    XL8                 GENERAL UNPK'G WORK AREA
         SPACE 2
         DC    C'VSAM ERROR FDBK WORD'
VERFDBK  DC    F'00'
VERFIL   DC    F'00'
         DC    C'UPD  COUNTER:'
UPDCTR   DC    PL3'0'
         DC    C'NEW  COUNTER:'
NEWCTR   DC    PL3'0'
         DC    C'PAGE COUNTER:'
PAGCTR   DC    PL3'1'
         DC    C'LINE COUNTER:'
LINCTR   DC    PL3'0'
         DC    C'READ COUNTER:'
GETCTR   DC    PL3'0'
         SPACE 2
SRCHKY   DS    CL6                 INPUT VOLSER
**  AREA=VITMSREC,AREALEN=80 = MAP OF ITMS DB TAPE RECORD
VITMSREC DS    0CL80
CVOLSR   DS    CL6                 INPUT VOLSER
CEDATE   DS    CL7                 INPUT EXPIR. DATE YYYYDDD
CCTDSN   DS    CL44                INPUT TAPE DSN (44 MAX.)
CCDATE   DS    CL7                 TAPE CREATION DATE
CCFLG1   DS    C                   TAPE STATUS FLAG1
CCFLG2   DS    C                   TAPE STATUS FLAG2
CCFLG3   DS    C                   TAPE STATUS FLAG3
CCFLG4   DS    C                   TAPE STATUS FLAG4
CCFILL   DS    CL12                 'FILLER' FOR FUTURE USE
         SPACE 2
CRECARG  DC    XL6'CCCCCCCCCCCC'   FIXED KEY OF CONTROL REC
**  AREA=VCNTLREC,AREALEN=80 = MAP OF ITMS CONTROL RECORD
VCNTLREC DS    0CL80
CRECKY   DS    CL6                 REC. KEY AS ABOVE
CCUREX   DS    CL8                 CURRENT LOG EXTENT (ITMLOGA/B)
CCEDAT   DS    CL7                 DATE OF CURR LOG EXTENT CREATE
CCETIM   DS    CL6                 TIME OF CURR LOG EXTENT CREATE
COEDAT   DS    CL7                 DATE OF PREV LOG EXTENT CREATE
COETIM   DS    CL6                 TIME OF PREV LOG EXTENT CREATE
CCSEXL   DS    C                   SECOND LOG XNTNT CRTED INDIC.
CRECFIL  DS    CL40                'RESERVED'
         SPACE 2
PAGNEW   DS    C                   NEW PAGE SWITCH
ITMCLSW  DS    C                   ITM DB CLOSED SWITCH
NOLOGSW  DS    C                   LOGGING ON/OFF SWITCH
SYSRUN   DS    C                   UTILITY 'SYSIN' RUN SWITCH
RNODF    DS    C                   NO DATA FOUND SWITCH
SHOFLAG  DS    C                   ACB/RPL SWITCH
PUTFLG   DS    C                   PUTCNTR RTN FLAG
EXPLF    DS    C                   EXP. LOG FLAG
REPFSW   DS    C                   DONE SW FOR 'FIND' REPORT
LEXSW    DS    C                   LOG EXTENT SWITCH
NEWRCS   DC    X'40'               NEW REC SWITCH
LOGREQ   DS    CL4                 REQ. INDIC. FOR LOGGER
**  AREA=VLOGXREC,AREALEN=121 = MAP OF LOG RECORD
VLOGXREC DS    0CL121
LOGOFIL  DS    C
LOGODAT  DS    CL8
LOGOTIM  DS    CL7
LOGOMSG  DS    CL25
LOGOVAR  DS    CL80
LOGOLEN  EQU   *-VLOGXREC
         SPACE 2
**  AREA=ITMPOUT,AREALEN=121 = ITMPRINT SYSOUT FILE OUTAREA
ITMPOUT  DS    0CL121
POUTFIL  DS    C
POUTVAR  DS    CL120
POUTLEN  EQU   *-ITMPOUT
         SPACE 2
**
** FOLLOWING IS A MAP OF THE INTERNAL PARMLIST TO/FROM ITMPAR01
**
PRSAREA  DS    0F        PARMLIST AREA FROM/TO ITMS000A/ITMPAR01
PPARLEN  DS    H                   LEN' OF INPUT PARMS
PPPAREA  DS    CL80                INPUT PARMS SAVEAREA
PPRUNTYP DS    C                   RUNTYPE FLAG
PPSUBRUN DS    C                   SECOND RUNTYPE FLAG
PPSUBRNA DS    C                   THIRD RUNTYPE FLAG
* FOLL. LAYOUT FOR CREATE TYPE RUN IS EQUAL TO ITMCFILE REC. LAYOUT
PPCTYP   DS    0C          }  FOLL. = CREATE TYPE INPUT
PVOLSR   DS    CL6                 INPUT VOLSER
PEDATE   DS    CL7                 INPUT EXPIR. DATE YYYYDDD
PCTDSN   DS    CL44                INPUT TAPE DSN (44 MAX.)
PCDATE   DS    CL7                 TAPE CREATION DATE
PCFLG1   DS    C                   TAPE STATUS FLAG1
PCFLG2   DS    C                   TAPE STATUS FLAG2
PCFLG3   DS    C                   TAPE STATUS FLAG3
PCFLG4   DS    C                   TAPE STATUS FLAG4
PCFILL   DS    CL12                 'FILLER' FOR FUTURE USE
         ORG   PPCTYP              REDEFINE
* REDEFINE LAYOUT FOR NON-'CREATE' TYPE RUN
PXRUPRM  DS    0C                  NON-CREATE TYPE PARM INPUT
PPTYPE   DS    CL5                 INPUT TYPE= PARM
PRVOLLO  DS    CL6                 INPUT VOL=  (LO FOR RANGE)
PRVOLHI  DS    CL6                 (VOLLO-VOLHI) HI FOR RANGE
PREDATE  DS    CL7                 RUN EXPIR. DATE
PRFDATE  DS    CL7                 RUN FORECAST DATE
PRTDSN   DS    CL44                INPUT TAPE DSN  (FOR 'FIND' OPTION)
PRXFLAG  DS    C                   INPUT EXCEPTION REP. FLAG
PRUFLAG  DS    CL2                 UTIL. ALTER FLAG NUMBER
PRUFVAL  DS    C                   UTIL. ALTER FLAG VALUE
PRFILLL  DS    C                   RESERVED
PPERROFF DS    F                   OFFSET INTO PLIST W/ERROR
PPALEN   EQU   *-PPCTYP            PARSED PLIST LENGTH
PPLEN    EQU   *-PRSAREA           FULL PLIST LENGTH
** END OF THE INTERNAL PARMLIST TO/FROM ITMPAR01
         SPACE 2
ANDZEROS DC    XL8'0F0F0F0F0F0F0F0F'  FOR SIGN OFF'S
DISPLTAB DC    CL16'0123456789ABCDEF'
         SPACE 2
LOGIMSG  DC    CL25'INIT NTRY, INPUT IMAGE = '
LOGTMSG  DC    CL25'UTIL NTRY, INPUT IMAGE = '
LOGBMSG  DC    CL25'INIT NTRY, PARSD PLIST = '
LOGNMSG  DC    CL25'NEW RECORD CREATED REC = '
LOGUMSG  DC    CL25'UPDATED RECORD IMAGE   = '
LOGPMSG  DC    CL25'PREV. RECORD IMAGE WAS = '
LOGEMSG  DC    CL25'FOLL. REC IS NOW EXPRD = '
LOGRMSG  DC    CL25'REQUESTED RECORD  =      '
********************     W T O WORK AREAS       ***********************
ITMI00   WTO   'ITMI000: ITMS000A HAS STARTED',ROUTCDE=15,MF=L
ITMI01   WTO   'ITMI001: ITMS DATABASE HAS BEEN OPENED',ROUTCDE=15,MF=L
ITMI02   WTO   'ITMI002: ITMS DATABASE CLOSED DOWN',ROUTCDE=15,MF=L
ITMI03   WTO   'ITMI003: ITMS000A HAS ENDED ',ROUTCDE=15,MF=L
ITME00   WTO   'ITMER000: INVALID PARMLIST DETECTED BY ITMS00A',       X
               ROUTCDE=15,MF=L
*
ITME01   WTO   'ITMER001: PARMLIST NOT FOUND , TERMINATING ',          X
               ROUTCDE=15,MF=L
*
ITME021  WTO   'ITMER102: INVALID RUN-TYPE SPECIFIED , TERMINATING',   X
               ROUTCDE=15,MF=L
*
ITME022  WTO   'ITMER202: PARMLIST INVALID , OFFSET = +XX ',           X
               ROUTCDE=15,MF=L
         ORG ITME022+43
ER2OFF   DS    CL2
         ORG
*
ITME023  WTO   'ITMER302: RANGE PARM INVALID , NOT ASCENDING ORDER',   X
               ROUTCDE=15,MF=L
*
ITME024  WTO   'ITMER402: RANGE PARM INVALID , VOLSERS NOT NUMERIC',   X
               ROUTCDE=15,MF=L
*
ITMESE1  WTO   'ITMER0US: INVALID RUN-TYPE SPECIFIED , RECORD DISREGARDX
               ED',ROUTCDE=15,MF=L
*
ITMESE2  WTO   'ITMER2US: PARMLIST INVALID , OFFSET = +XX , RECORD DISRX
               EGARDED',ROUTCDE=15,MF=L
         ORG ITMESE2+43
UTEOFF   DS    CL2
         ORG
*
*
WTOCNTRA WTO   'ITMI009: NUMBER OF RECS ADDED TO ITMCNTL  = XXXX ',    X
               ROUTCDE=15,MF=L
         ORG WTOCNTRA+48
ACNTR    DS    CL4
         ORG
*
WTOCNTRU WTO   'ITMI010: NUMBER OF RECS UPDATED IN ITMCNTL  = XXXX ',  X
               ROUTCDE=15,MF=L
         ORG WTOCNTRU+50
UCNTR    DS    CL4
         ORG
*
WTOCNTRE WTO   'ITMI00A: NUMBER OF RECS EXPIRED = XXXX',               X
               ROUTCDE=15,MF=L
         ORG WTOCNTRE+38
ECNTR    DS    CL4
         ORG
*
WTOCNTRR WTO   'ITMI00B: NUMBER OF RECS REPORTED = XXXX',              X
               ROUTCDE=15,MF=L
         ORG WTOCNTRR+39
RCNTR    DS    CL4
         ORG
*
WTOCNTRG WTO   'ITMI00S: NUMBER OF RECS READ FROM SYSIN = XXXX',       X
               ROUTCDE=15,MF=L
         ORG WTOCNTRG+46
GCNTR    DS    CL4
         ORG
********************     W T O WORK AREAS       ***********************
WTOLOGS  WTO   'ITMI004: ITMS LOG NOW SWITCHED FROM ''X'' TO ''Y'' ',  X
               ROUTCDE=15,MF=L
         ORG WTOLOGS+41
LEX1     DS    C
         ORG WTOLOGS+48
LEX2     DS    C
         ORG
**
WTOLOGE  WTO  'ITME099: ITMSLOG? VSAM ERROR ON ????? ??? , LOGGING NOW X
               DISABLED VSAM ERR CODE = XXXXXXXX',ROUTCDE=15,MF=L
         ORG WTOLOGE+20
ELEX     DS    C
         ORG WTOLOGE+35
EVREQ    DS    5C
         ORG WTOLOGE+46
EACBRP   DS    3C
         ORG WTOLOGE+85
LOGEVE   DS    8C
         ORG
LOGEL    EQU   *-WTOLOGE
**
WTOERR3  WTO  'ITME003: ITMCNTL VSAM XXXXX ERROR ??? ERR CODE = XXXXXXXX
               X , ITMS00A TERMINATING',ROUTCDE=15,MF=L
         ORG WTOERR3+26
ER3REQ   DS    5C
         ORG WTOERR3+38
ER3AR    DS    3C
         ORG WTOERR3+53
ER3VE    DS    8C
         ORG
LOGE3    EQU   *-WTOERR3
**
WTOERR5  WTO  'ITME005: SCRATCH VOLUME XXXXXX ALREADY EXITS , REQUEST BX
               YPASSED',ROUTCDE=15,MF=L
         ORG WTOERR5+28
ER5VOL   DS    6C
         ORG
LOGE5    EQU   *-WTOERR5
**
WTOERRX  WTO  'ITME00X: VOLUME XXXXXX NOT FOUND , REQUEST IGNORED',    X
               ROUTCDE=15,MF=L
         ORG WTOERRX+20
ERXVOL   DS    6C
         ORG
LOGEX    EQU   *-WTOERRX
**
WTOERFE  WTO   'ITMER0FE: EXPIRATION DATE INVALID , MUST NOT BE LESS THX
               AN CURRENT DATE',ROUTCDE=15,MF=L
LOGEFE   EQU   *-WTOERFE
**
WTOERF   WTO   'ITMER00F: FORECAST DATE INVALID! , MUST BE GREATER THANX
               CURRENT DATE',ROUTCDE=15,MF=L
LOGEF    EQU   *-WTOERF
**
WTOERG   WTO   'ITMER00G: REQUESTED XXX NOT FOUND !',ROUTCDE=15,MF=L
         ORG WTOERG+24
ERGREQ   DS    3C
         ORG
LOGEG    EQU   *-WTOERG
**
WTOLGX   WTO   'NOW PRINTING ITMLOG ''X'' EXTENT',ROUTCDE=15,MF=L
         ORG WTOLGX+25
WLGX     DS    C
         ORG
LWLGX    EQU   *-WTOLGX
*****************     END   W T O WORK AREAS       *******************
****************** REPORT FORMATNG WORK AREAS *********************
EXPRHDR  DC    CL22'EXPIRED VOLUMES REPORT'
AVAVHDR  DC    CL32'AVAILABLE SCRATCH VOLUMES REPORT'
SCRTHDR  DC    CL26'NON-SCRATCH VOLUMES REPORT'
ALLVHDR  DC    CL21'ITMS DATABASE LISTING'
SCRFHDR  DC    CL31'SCRATCH VOLUMES FORECAST REPORT'
EXCPHDR  DC    CL34'VOLUMES IN EXCEPTION STATUS REPORT'
SVDSHDR  DC    CL21'VOL/DSN SEARCH REPORT'
NODAHDR  DC    CL35'NO DATA FOUND FOR REQUESTED REPORT '
CREATC   DC    CL7'IN-USE '
SCRATC   DC    CL7'SCRATCH'
BOTHCC   DC    CL4'BOTH'
UNKNCC   DC    CL4'UNKN'
OVLYCC   DC    CL4'OVLY'
PAGEHDR1 DS    0CL121
         DC    C'1'
         DC    43C' '
         DC    C'ITMS000A'
         DC    43C' '
HDR1TIM  DC    14X'40'
         DC    12C' '
PAGEHDR2 DS    0CL121
         DC    C'-'
         DC    94C' '
         DC    C'PAGE '
HDR2PGN  DC    C'XXX'
         DC    18C' '
PAGEHDR3 DS    0CL121
         DC    C'-'
         DC    C'VOLSER   CREATION DATE   EXPIRATN DATE   VOL STATUS'
         DC    C'   XPT STATUS   DATASET NAME                       '
         DC    20C' '
PAGELIN  DS    0CL121
PAGCC    DC    C'0'                    CARR. CONTROL
PAGVS    DC    CL6'VSVSVS'             VOL SER #
         DC    3C' '                   BLANKS
PAGCD    DC    CL7'YYYYDDD'            CREATION DATE
         DC    9C' '                   BLANKS
PAGED    DC    CL7'YYYYDDD'            EXPIRTN DATE
         DC    9C' '                  BLANKS
PAGS1    DC    CL7'SCNSCSC'            VOL, STATUS
         DC    6C' '                  BLANKS
PAGS2    DC    CL4'UNKN'               VOL, EXCEP STATUS
         DC    9C' '
PAGDS    DC    44C' '                  VOL, DSN
         DC    9C' '
PGLINL   EQU   *-PAGELIN
  TITLE '**ITMS000A** TAPE MANAGEMENT SYSTEM  ** REG EQUATES **'
R0       EQU   0
R1       EQU   1
R2       EQU   2                   BAL REGISTER
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                  BASE REG 1
R11      EQU   11                  BASE REG 2
R12      EQU   12                  BASE REG 3
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   ITMS000A
