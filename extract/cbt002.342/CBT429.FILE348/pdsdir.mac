/*% NOCOMMENT REXX */
TRACE
/*  For batch, use the following JCL and comment out the TSO
    ALLOCATE sequence:

    //REXX     EXEC  PGM=IRXJCL,PARM='name.of.rexx.exec'
    //SYSEXEC  DD  DSN=your.rexx.library,DISP=SHR
    //SYSTSPRT DD  SYSOUT=*
    //SYSTSIN  DD  DUMMY
    //PDS      DD  DSN=your.pds.name,DISP=SHR,
    //             DCB=(RECFM=F,DSORG=PS,LRECL=256,BLKSIZE=256)

*/

/*  For TSO, use the following ALLOCATE sequence:   */

ARG dsn
ADDRESS TSO
"ALLOC F(PDS) DA("dsn") SHR REUSE",    /* pds directory */
"  RECFM(F) DSORG(PS) LRECL(256) BLKSIZE(256)"

/*-------------------------------------------------------------------*/

mainline:
SAY ' Name                VV MM  Created     Changed     Size',
    ' Init   Mod   ID'
"EXECIO * DISKR PDS (STEM DIR. FINIS"  /* read pds directory */
DO blk = 1 to dir.0
  usedbytes = C2D(SUBSTR(dir.blk,1,2))
  index = 3                            /* skip past used bytes */
  DO WHILE index < usedbytes
    IF SUBSTR(dir.blk,index,8) = 'FFFFFFFFFFFFFFFF'x THEN
      LEAVE blk
    pds2name = SUBSTR(dir.blk,index,8) /* member name */
    index = index + 11                 /* skip past name and ttr */
    pds2indc = SUBSTR(dir.blk,index,1)
    len = BITAND(pds2indc,'1F'x)       /* isolate user data length */
    userdata = C2D(len) * 2            /* halfwords to bytes */
    IF userdata = 30 &,                /* ISPF statistics? */
       BITAND(pds2indc,'80'x) /= '80'x THEN  /* no alias */
      DO
        vv = c2d(SUBSTR(dir.blk,index+1,1))
        mm = c2d(SUBSTR(dir.blk,index+2,1))
        crdate = DATE('O',p2d(SUBSTR(dir.blk,index+6,3)),'J')
        lmdate = DATE('O',p2d(SUBSTR(dir.blk,index+10,3)),'J')
        time = p2d(SUBSTR(dir.blk,index+13,3))
        time = SUBSTR(time,1,2)××':'××SUBSTR(time,3,2)
        size = c2d(SUBSTR(dir.blk,index+15,2))
        init = c2d(SUBSTR(dir.blk,index+17,2))
        mod = c2d(SUBSTR(dir.blk,index+19,2))
        id = SUBSTR(dir.blk,index+21,8)
        SAY pds2name,
            '           ',
            RIGHT(vv,2,0)××'.'××RIGHT(mm,2,0),
            crdate,
            lmdate,
            time,
            FORMAT(size,5),
            FORMAT(init,5),
            FORMAT(mod,5),
            id
      END
    ELSE
      DO
        IF BITAND(pds2indc,'80'x) = '80'x THEN
          SAY pds2name,
              '           ',
              'ALIAS'
        ELSE
          SAY pds2name
      END
    index = index + userdata + 1       /* skip past user data */
  END
END
EXIT

p2d: procedure
/* rexx      convert packed decimal to number */
/* Michael Pollak, c/o RWG, Raepplenstr. 17, D-70191 Stuttgart */
/* Tel: +49-711-2012-387                                       */
/* Fax: +49-711-2012-502        e-mail: daapm@rwg.de           */
parse arg number_p
erg = c2x(number_p)
sign = right(erg,1)
number = left(erg,length(erg)-1)
if sign = 'D' then
   return '-'××number
else
   return number

d2p: procedure
/* rexx   convert number to packed decimal  */
/* Michael Pollak, c/o RWG, Raepplenstr. 17, D-70191 Stuttgart */
/* Tel: +49-711-2012-387                                       */
/* Fax: +49-711-2012-502        e-mail: daapm@rwg.de           */
arg number
if datatype(number) ^= 'NUM' then
   return ''
if number < 0 then
   interpret "number_p = '"abs(number)"D'x"
else
   interpret "number_p = '"number"C'x"
return number_p

/* J. KALINICH, X4521 */
/* EXEC TO DEBLOCK PDS DIRECTORY                                      */
