                    FREE SOFTWARE CORNER - Installment 2

                              by Sam Golob, Newsweek, Inc.

       This column is designed to benefit the readership of "Technical
Support" by discussion of individual valuable tools from the CBT Tape
and other Public Domain tapes. Large packages such as PDS merit full
feature articles, but many smaller and useful "single utilities" might
go unnoticed and unused by a public which needs them.  This is the
purpose of the column.  If you have any suggestions for a good utility
that is worth mentioning in this column, kindly drop a note to me
through the editor, Bob Becker.

       Our concentration this month will be on Jim Marshall's Air
Force collection of TSO commands and batch utilities.  These are Files
300 and 316 of the CBT tape.  We'll discuss some of the offerings
which I feel are especially useful, but remember, since it's all free,
you're welcome always to pick and choose and take.  One observation is
in order, that sometimes a more advanced or improved version of the
same program can be found elsewhere on the CBT tape if you look hard.
However, this collection is a useful and fruitful starting point.

       Let's start out with good old CDSCB, or "change the DSCB" on
File 300.  (This TSO command bailed me out just last night.)  It
allows you to change any FORMAT1 DSCB fields.  In other words, you
can alter any attribute of a dataset by changing a field in its VTOC
entry.  Of course, you could use fullscreen ZAP from this file to zap
the VTOC directly, but CDSCB is far less tedious and it eliminates the
possibility of zapping at the wrong displacement.  Many of the fields
in the VTOC entry can be changed by name, such as RECFM, LRECL,
BLKSIZE, secondary allocation (called "SPACE"), and many others.  Just
to cover the rest of the ground, a subcommand to zap at any
displacement, using a "VER" and "REP" scheme, has been made available
in CDSCB.  Very powerful stuff.  The command was written by  Bill
Godfrey.

       Another lovely one is MODREP from File 316.  (A second version
of MODREP is on File 235.)  This program allows replacement of any LPA
module or SVC on the fly, for testing purposes, and this replacement
can be either temporary or be made permanent, to last until the next
IPL.  Some of the expensive monitoring packages for MVS have a feature
which can do this, but MODREP is free.  You put the replacement module
in an authorized library and start the MODREP procedure that points to
that library.  With MODREP running, you merely enter the console
command:  F MODREP,modname and the module or SVC gets loaded.  If you
enter the real name of a module first, and then do the aliases one at
a time, the alias names will also be properly loaded.  The new copy is
page-fixed so it will not disappear by being paged out.  Help members
have been provided with both MODREP and CDSCB.

      Here's a goody, originally from IBM, and in ancient days, only
available in object code.  Source was created by Bill Godfrey, and we
are now in possession of the program DELINK, to "UN-linkedit" csects.
Yes, Virginia, you start with a LOAD MODULE and end up with an OBJECT
DECK.  If the load module has more than one csect, you must DELINK one
csect at a time.  The source in File 316 is called DELINK0.  I used
DELINK (to suggest a useful application ) to ISOLATE ALL MY USER SVCs
from an old, running MVS NUCLEUS, so as to make them installable on
any other nucleus via an IBM-style sysmod.  I had to chop down the
size  of the nucleus first, by using many "REPLACE" linkedit cards and
relinkediting to eliminate most of the other csects in the nucleus.
When only the SVCs and a bit more remained, DELINK was able to isolate
the object code for each of the SVCs.  My user SVCs are now all neatly
tucked away as SMP usermods.

       While we're on the subject of Bill Godfrey's disassembly of old
IBM utilities, here's an inspiring story.  The program INCORZAP is a
batch utility that zaps (and page-fixes) the IN-CORE version of a
nucleus module or LPA module.  You run it with the same JCL that you
use for AMASPZAP, which changes the DISK version of the program, only
you EXEC PGM=INCORZAP instead of PGM=AMASPZAP. INCORZAP operates by
examining the DISK copy of the load module first.  It figures out the
csect pattern of the load module and the displacements using the disk
copy, and then proceeds to its load point in virtual storage.
Utilizing the csect displacement information it obtained from the disk
copy of the program, it locates the virtual addresses to be zapped IN
CORE, and it does the VER and REP things to the copy in CORE.  Then it
fixes that page of memory so it won't go away.  In order for this to
work, you obviously have to have the same version on disk as you have
in core.

       Now listen to this story.  Bill Godfrey went to the effort of
disassembling the object code of INCORZAP and creating documented
source, as well as he could.  This source is found on File 316 of the
CBT tape.  The original author of INCORZAP is Rob Budge, who wrote
INCORZAP while working for IBM.  Originally, INCORZAP was written in
PL/S, which is IBM's private higher-level language for system
development.  PL/S is not available outside the confines of IBM.
Apparently, when Rob Budge saw Bill Godfrey's disassembly of his
program into the PUBLIC IBM/370 assembler language, he was no longer
working for IBM.  With HIS knowledge of the workings of the program,
Budge was able to improve the code to work on XA as well as MVS/370,
and to circumvent the segment protection and page protection of main
storage which is present on the newer 308x and 309x hardware.  His
product, the beautiful XACORZAP, can now be found on File 421 of the
CBT tape.  XACORZAP is a complete replacement for INCORZAP, and it
runs on any MVS release from 3.8 to XA.  Nice.

       Let's conclude with a discussion of TAPE COPY programs.  If you
want to do a full tape-to-tape copy, including standard labels if
present, the program of choice is the Air Force tape copy program
COPYMODS, which is on File 229 of the CBT tape.  COPYMODS will copy
the entire tape from beginning to end-of-data, including all labels.
It will wipe out whatever was originally on the target tape(s).  From
one input tape, you can make as many as ten copies in one run, if you
have enough tape drives.  Arnie Casinghino uses this program to make
YOUR copy of the CBT tape.  It is very handy.

       Now please note that the COPYMODS program can be fooled in one
situation. This is if you have a standard-labeled tape with a NULL
FILE, that is, one of the files on an SL tape has nothing in it, just
the header label and the trailer label.  COPYMODS thinks that this
combination is a double tape mark, and considers it as end-of-data.
The situation occurs if you did an IEBCOPY unload of a PDS that has NO
MEMBERS.  (The condition can be revealed by doing  a TAPEMAP of the
input tape, using the tape mapping program on File 299.)  Any files
BEYOND the null file on the input tape are not copied by COPYMODS,
because the program considers them beyond the end-of-data.

       We can get around the problem using another program, which
deals with STANDARD LABEL tapes SPECIFICALLY.  This is the COPYFILE
program from File 316 of the CBT tape. COPYFILE works between two
standard-label tapes having different names.  You can use it to copy
SOME, or ALL files, from one tape to the other.  The amazing thing
with this program is that it allows you to cut-and-paste.  You can
copy files 5, 7, 23, and 55 of the input tape to files 8, 9, 10 and 11
of the output tape.  You can string together files from several input
tapes into one big output tape.  You can also customize an output tape
to send to someone, and create it from various files on a number of
different input tapes in your tape library, all in one job step.  The
tape manipulation capability opened up by this tool is mind-boggling,
especially when you use TAPEMAP (from File 299) to monitor what you've
been doing.  COPYFILE will get around the problem of the null
standard-label file, and will faithfully copy all standard-label files
from an input tape to the output tape.

       So we've come to the end of the discussion for this month.  As
a quick postscript, I'd like to encourage you to also look at the
LASTIPL TSO command on File 300, and the VTOC program, also on File
300.  LASTIPL accurately formats and displays on the tube, the date
and time of the running CPU's last IPL.  You'll never have to ask the
operators again.  I have LASTIPL in my LOGON clist, and the last IPL
time is displayed as soon as I logon to TSO.

       VTOC displays the contents of a disk pack with speed and with
dazzling versatility and flexibility.  Study the HELP that comes with
the VTOC program for some really eye-opening possibilities.

       You can get a CBT tape by sending thirty (30) dollars and a
2400 foot reel, or a 3480 cartridge (preferred) to:

            Arnold Casinghino
            CONNECTICUT BANK AND TRUST COMPANY
            Technical Support Section F04L
            99 Founders Plaza
            East Hartford, CT.
            06108-3292

Arnie has kept several old levels of the tape that were the last
levels before he made big deletions.  These levels are:  Version 249,
Version 260, and Version 272.  You may order these old levels from
him, under the same terms as the current level, BUT YOU MUST
SPECIFICALLY AND CLEARLY indicate to him the VERSION NUMBER (of these
three) that you want.
