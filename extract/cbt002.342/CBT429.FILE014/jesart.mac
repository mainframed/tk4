        SOME NOTES ON JES2 1.3.6 (AND ITS EQUIVALENT, 2.1.5)

      I enjoyed the article in the September issue concerning the
installation of the JES2 1.3.6 8701 level set.  This 8701 level set of
JES2 is non-trivial, even to seasoned systems programmers, because of
the changes in format of JES2 internal control blocks which were made
at that time.  It would not be entirely inaccurate to call that level
set a mini-release change.  As you stated, one running JES2 can now
support 9999 printers, whereas only 99 were supported before.

      I have a couple of addenda to the topics talked about.
First but not least, you must reassemble and relinkedit all of your
user exits at this level.  You must also pray that this will be enough
to do, to make them run.  When I first installed 8701 for JES2 1.3.6,
the system crashed as soon as the first exit was invoked.  It took
several dozen IPLs of my test MVS system to get a handle on what was
flying, plus several calls to Level 2.  Now they tell me I should have
read the fine print in the documentation!  The truth finally came to
light when I disabled all the exits before attempting to bring up
JES2, and it came up.

      Second, (also not least), I should like to emphasize the
advantage of JES2 1.3.6 (or the XA equivalent 2.1.5) over the previous
1.3.4 release level.

      Number one, it saves you a considerable number of cold starts.
Many of the parameters which previously required cold starts now can
be changed with warm starts or operator commands.  Number two, console
displays of JES2 status and parameter settings have been considerably
improved.  Also, more parm settings can be changed with operator
commands, so that much more operator flexibility is possible than
heretofore.  Number three, that old bugaboo SPOOL OFFLOAD has been
rewritten practically from scratch.  Believe it or not, it is now
convenient to use, and you no longer have to dream wistfully of your
old spool-unloader friend HJSTP from Release 4.1.  This new spool
offload is GOOD.

      My experience is that if you can swing it, it pays to convert
to 1.3.6 (2.1.5).  It is very considerably better than 1.3.4.

      Now for the flip side... the WORK.

      You'd better have a Washington Systems Center book on hand,
especially if you have exits.  Its name is "JES2 1.3.6 Migration
Considerations".  It has all the useful hints, and it documents the
changes to the field names, label names, and DSECT names in JES2
main line code and macros.  I think that's the only place where
you'll find these necessary things documented.  It is extremely
important to have a "JES2 Initialization and Tuning" book for 1.3.6.
If you have the 8701 level set, there is an upgraded edition which
covers the changes made at that level.  A "JES2 Commands" book for
1.3.6 can't hurt.  And if you have exits, you need "JES2 User
Modifications and Macros" for 1.3.6.

      The SMP work is trivial.  It is no harder than installing any
other small new function.  The tough part is the new JES2 Init Parm
deck.  Almost all of the parameter formats have changed.  It took me
a solid week to recode my deck, with many adjustments made later.
The consolation is that once this has been done, it is probable that
IBM will not further change the format for many years to come.  My
deck grew in size from 238 lines to over 1600 lines.  IBM recommends
that you take it out of SYS1.PARMLIB, which is unblocked, and put it
in a blocked library, such as SYS1.PROCLIB.

      The sample JES2PARM deck, which IBM provides in the install
process, proved to be a useful starting point.  It codes most of the
typical items in a normal deck, and gives the 1.3.4 old-style format
inside of comments at the right side of each parameter.  I made a copy
of it and changed it, item by item, to correspond to my existing deck.
This took a solid week, working all day.  It had to be checked over
and over.  I kept two JES2 "I and T" books handy at the time to check
for default values--one was the 1.3.4 book, the other was the 1.3.6.

      When you're doing this monstrous job (it's not really so bad),
you have to keep abreast of default settings, both for 1.3.6 and for
1.3.4.  In some cases they have changed. Your goal is to keep the
new 1.3.6 system as transparent to the user as possible, and if you
get a default wrong in a JES2PARM deck parameter, it will be noticed
by the users sooner or later (usually sooner).  It IS possible to get
the new system to work just about the same as the old one did.

      All exits have to be converted.  The "JES2 1.3.6 Migration
Considerations" is a must for this, even more than the "JES2 Usermods
and Macros", though both are needed.  My technique for conversion
was to assemble my old source with the new macro library for 1.3.6,
and to correct the assembly errors by substituting the new label
names I found in the "Migration" book for the names reported in error
by the assembler.  This may not be sufficient for your exits.  You
must check these books for all their notes on each particular exit.
The acid test for exits, of course, is to see if they work on the
new JES2 system.  Exits are sensitive in JES2, as anyone with
experience knows, and you must test them in action.

      The final point is to make sure that any products which depend
on JES2 are available for the new release.  We use the QUEUE program
from the CBT tape to read spool datasets.  I had a version installed
for 1.3.4 (file 393 on the CBT tape).  I called Jack Schudel, who
administers the JES2 User Mods tape, to make sure that a 1.3.6 version
was available.  He sent me an equivalent version which had been changed
for 1.3.6 (2.1.5) which I tried, and which we had to debug.  A good
version is now available on the CBT tape file 394.  My point is that
if you have a JES2-dependent product, such as SDSF, IOF, or QUEUE,
you must be sure that a 1.3.6 version is available, before you install
1.3.6 or 2.1.5.

      Well, good luck, and don't forget that you'll need a cold
start!  This conversion may require work, but it will have to be made
eventually, as IBM drops support for the old release level.  It also
results in considerable convenience and reliability benefits, and I
think you'll be glad you did it in the end.

