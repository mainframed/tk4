*----------------------------------------------------------------------
*
*        THIS ROUTINE PROVIDES FOR JOB SUBMISSION AND AUTOMATIC
*        COMMANDS IN AN MVS/JES2 ENVIRONMENT.  IT'S FUNCTIONS
*        ARE THREE-FOLD AND ARE EXPLAINED BELOW.
*
*
*        1=RDR  ALLOW AN EASY WAY OF PRESENTING JOBS TO JES2 VIA AN
*               OPERATOR MODIFY COMMAND.
*
*        2=CMD  ALLOW AN EASY WAY OF PRESENTING MULTIPLE COMMANDS TO
*               MVS/JES2 VIA AN OPERATOR MODIFY COMMAND.
*
*        3=AUTO ALLOW FOR TIME-OF-DAY/DAY-OF-WEEK AUTOMATIC COMMANDS
*
*
*        THE USER MUST PROVIDE A STARTED TASK PROCEDURE IN SYS1.PROCLIB
*        WHICH IS STARTED AT IPL TIME.  ONCE ACTIVE, IT WILL PROCESS
*        USER DEFINED COMMANDS BY DAY OF WEEK (USER DEFINED).
*        ALSO, IT WILL SUPPORT OPERATOR MODIFY COMMANDS (DEMAND)
*        EITHER SUBMIT JOBS (MEMBERS) TO THE INTERNAL READER OR
*        EXECUTE COMMANDS (MEMBER LISTS).
*
*        FOR THE JOB SUBMISSION FEATURE, ONE OR MORE PARTITIONED
*        DATASET(S) ARE USED.  FOR THE COMMAND/AUTO-COMMAND
*        FUNCTIONS, ANOTHER PARTITIONED DATASET IS USED.  EACH
*        ARE DESCRIBED BELOW (BY DDNAME).
*
***********************************************************************
         EJECT
***********************************************************************
*
*
*
*        DDNAME     USE AND FUNCTION
*        --------   -------------------------------------------------
*
*
*        INTRDR     REQUIRED IF THE JOB-SUBMISSION FUNCTION IS TO
*                   BE USED.  IT SHOULD SPECIFY THE JES2 INTERNAL
*                   READER.
*
*        JOB00      REQUIRED IF THE JOB-SUBMISSION FUNCTION IS TO
*                   BE USED.  IT SHOULD SPECIFY THE NAME OF A
*                   PARTITIONED DATASET WHICH CONTAINS MEMBERS
*                   TO BE SUBMITTED TO JES2.
*
*        JOB??      OPTIONAL WHEN THE JOB-SUBMISSION FUNCTION IS USED.
*                   ANY NUMBER OF ADDITIONAL 'JOB??' DDCARDS MAY BE
*                   USED TO ALLOW FOR SPECIALIZED FUNCTION (WITH
*                   DUPLICATE MEMBER NAMES).  THIS OPTION IS SIMILAR
*                   TO THE MULTIPLE 'PROC??' DDCARDS WITHIN THE JES2
*                   STARTUP PROC.  USE OF THESE OPTIONAL LIBRARIES
*                   IS CONTROLED BY THE OPERATOR (VIA THE 'D=??'
*                   KEYWORD, AS DETAILED BELOW).
*
*        COMMANDS   THIS DD STATEMENT IS REQUIRED FOR EITHER THE
*                   OPERATOR COMMAND-LIST OR THE AUTO-COMMAND
*                   FUNCTION.  IT SHOULD CONTAIN MEMBERS (LISTS
*                   OF COMMANDS) IN THE FORMAT DESCRIBED UNDER THE
*                   HEADING 'COMMAND RECORD SYNTAX' BELOW.
*
*
*        THE FOLLOWING IS AN EXAMPLE OF THE TYPE OF PROC TO
*        BE ADDED TO YOUR SYS1.PROCLIB.  NOTE THAT THE 'JOB00'
*        DDNAME IS REQUIRED TO USE THE JOB SUBMISSION FUNCTION
*        WHILE 'JOB01' AND 'JOB02' ARE OPTIONAL (USED IN THIS
*        CASE AS REMOTE JOB CONTROL LIBRARIES).
*
*        //AUTO     EXEC PGM=AUTO,TIME=1440,DPRTY=(7,9)
*        //STEPLIB  DD DISP=SHR,DSN=USER.LIBRARY    <---- AUTHORIZED
*        //INTRDR   DD SYSOUT=(A,INTRDR)
*        //COMMANDS DD DISP=SHR,DSN=SYS1.COMMANDS
*        //JOB00    DD DISP=SHR,DSN=RMT0.JCL.LIB
*        //JOB01    DD DISP=SHR,DSN=RMT1.JCL.LIB
*        //JOB02    DD DISP=SHR,DSN=RMT2.JCL.LIB
*
*        USE OF THE OPTIONAL 'JOB??' DDNAMES IS SPECIFIED BY THE
*        OPERATOR USING THE 'D=' OPERAND (DETAILED BELOW).
*
***********************************************************************
         EJECT
***********************************************************************
*
*        THE FOLLOWING ARE EXAMPLES OF NORMAL OPERATOR COMMANDS
*        JOB SUBMISSION USE:
*
*        FUNCTION  COMMAND      OPERATION
*        --------  ------------ --------------------------------------
*
*        START     S AUTO.A     NORMAL OPERATOR START-UP.  THE FIRST
*                               AUTOMATIC COMMAND TO BE PROCESSED
*                               WILL BE THE MEMBER WITH A NAME THAT
*                               SPECIFIED A TIME GREATER THAN CURRENT.
*                               HOWEVER, DEMAND COMMAND EXECUTION
*                               AS WELL AS JOB SUBMISSION IS AVAILABLE
*                               IMMEDIATELY.
*
*        IPL       S AUTO.A,PARM=IPLMEM
*                               SAME AS ABOVE, EXCEPT THAT THE COMMAND
*                               MEMBER NAMED IN THE PARM FIELD WILL BE
*                               EXECUTED BEFORE ANY OTHER REQUESTS
*                               (AUTOMATIC OR OPERATOR REQUESTED
*                               COMMAND).  THIS PROVIDES AN ALTERNATIVE
*                               TO THE 'SYS1.PARMLIB(COMMND??)' OPTION
*                               PROVIDED BY MVS.  IT ALSO PROVIDES FOR
*                               ANY TYPE OF COMMAND (JES2 COMMANDS AS
*                               WELL AS MVS COMMANDS).
*
*        SUBMIT    F A,MEMBER1  SUBMIT 'MEMBER1' TO THE JES2 INTERNAL
*                               READER.  SINCE THE 'D=??' OPTION WAS
*                               NOT USED, THE MEMBER WILL BE READ FROM
*                               THE 'JOB00' DD (WHICH WILL REMAIN OPEN
*                               OPEN UNTIL SOMETHING OTHER UNTIL 'D=??'
*                               IS SPECIFIED AND IS NOT THE SAME AS THE
*                               ONE USED PREVIOUSLY).
*
*        SUBMIT    F A,MEMBER1,MEMBER2,....,MEMBERN
*                               SUBMIT MULTIPLE MEMBERS TO THE JES2
*                               INTERNAL READER.  SINCE 'D=??' WAS NOT
*                               SPECIFIED, THE 'JOB00' IS AGAIN USED.
*
*        SUBMIT    F A,MEMBER1,D=01
*                               SUBMIT A MEMBER (JOB) TO THE JES2
*                               INTERNAL READER.  SINCE 'D=01' WAS
*                               SPECIFIED, THE 'JOB00' FILE IS CLOSED
*                               AND THE 'JOB01' FILE IS OPENED TO
*                               READ THE MEMBER.  THIS FILE WILL
*                               REMAIN OPEN UNTIL THE 'D=??' IS
*                               CHANGED (FROM 'D=01') OR IS NOT
*                               SPECIFIED ('D=00' IS THE DEFAULT).
*
*        SUBMIT    F A,MEMBER1,MEMBER02,.....,MEMBERN,D=01
*                               SAME AS THE ABOVE, HOWEVER, MULTIPLE
*                               MEMBERS WILL BE READ FROM THE 'JOB01'
*                               FILE AND SUBMITTED.  NOTE THAT THE
*                               'D=??' KEYWORD MUST BE SPECIFIED AS
*                               THE LAST OPTION.
*
***********************************************************************
         EJECT
***********************************************************************
*
*        THE FOLLOWING ARE EXAMPLES OF OPERATOR COMMANDS TO SCHEDULE
*        COMMAND LISTS.
*
*        FUNCTION  COMMAND      OPERATION
*        --------  ------------ --------------------------------------
*
*        COMMAND   F A,-MEMBER1 CAUSE A LIST OF COMMANDS TO BE EXECUTED
*                               BY MVS (OR JES2).  NOTE THAT THE DASH
*                               (HYPHEN) AS A PREFIX TO THE MEMBER
*                               NAME IDENTIFIES THE REQUEST AS A
*                               COMMAND REQUEST (DEMAND).  THE NAMED
*                               MEMBER WILL BE READ FROM THE FILE
*                               IDENTIFIED BY THE DD 'COMMANDS'.  EACH
*                               COMMAND READ WILL BE EXECUTED IF RE-
*                               QUESTED FOR THE CURRENT DAY (THE SYNTAX
*                               SYNTAX OF THE 'COMMANDS' RECORDS ARE
*                               DEFINED BELOW UNDER 'COMMAND RECORD
*                               SYNTAX').
*
*        COMMAND   F A,-MEMBER1,MEMBER2,.....,MEMBERN
*                               CAUSE A LIST OF MEMBERS TO BE PROCESSED
*                               BY MVS (OR JES2).  EACH MEMBER MAY
*                               CONTAIN MULTIPLE COMMANDS. AGAIN NOTE
*                               THAT THE DASH IDENTIFIES THE REQUEST
*                               AS A DEMAND COMMAND REQUEST.
*
*        SHUTDOWN  P A          TO TERMINATE THIS ROUTINE, SIMPLY
*                               ENTER AN OPERATOR STOP COMMAND.
*
*        SHUTDOWN  F A,-SHUTDOWN
*                               TO ALLOW A LIST OF 'SHUTDOWN' COMMANDS
*                               TO BE EXECUTED PRIOR TO STOPPING THIS
*                               ROUTINE (SUCH AS $PI, I SMF, P RMF ETC)
*                               THE 'P A' COMMAND MAY BE ADDED TO THE
*                               END OF THE SHUTDOWN MEMBER.
*
***********************************************************************
         EJECT
***********************************************************************
*
*        THE AUTOMATIC COMMAND FUNCTION IS NOT CONTROLLED BY THE
*        OPERATOR.  INSTEAD, IT OPERATES ON A 1440 MINUTE CYCLE
*        (60 MINUTES/HOUR AND 24 HOURS/DAY) WITHIN DAY-OF-WEEK
*        AND MONTH-OF-YEAR CYCLES.  THIS MEANS THAT COMMANDS MAY
*        BE SCHEDULED AT A SPECIFIED TIME OF DAY ON ANY (OR ALL)
*        DAY(S) OF THE WEEK OR ANY DAY OF THE MONTH.
*
*        COMMANDS TO BE EXECUTED ARE CONATAINED IN MEMBERS THAT
*        RESIDE IN THE 'COMMANDS' LIBRARY.  EACH MEMBER TO BE
*        AUTOMATICALLY PROCESSED IS NAMED AS FOLLOWS.
*
*            @0100   THIS LIST OF COMMANDS IS TO BE PROCESSED AT
*                    1:00 IN THE MORNING.
*            @1423   THIS MEMBER WILL BE PROCESSED AT 2:23 PM.
*
*            @0000   THIS MEMBER WILL BE PROCESSED AT MIDNIGHT.
*
*        NOTE THAT THE MEMBER NAMES TO BE PROCESSED AUTOMATICALLY
*        MUST BE PREFIXED WITH THE 'AT SIGN' (@), HOWEVER, THESE
*        MEMBERS ARE NOT RESTRICTED FROM 'DEMAND' USE.
*
*
*        COMMAND RECORD SYNTAX
*
*        EACH MEMBER CONTAINED IN THE 'COMMANDS' LIBRARY MUST FOLLOW
*        THE SYNTAX DEFINED BELOW.  THIS IS TRUE FOR BOTH DEMAND
*        COMMAND LISTS AS WELL AS AUTOMATIC COMMAND LISTS.
*
*        AN ASTERISK (*) IN COLUMN 1 DENOTES A COMMENT RECORD AND IS
*        IGNORED BY THE PROCESSOR.  COMMANDS (RECORDS) ARE PROCESSED
*        ONLY ON SPECIFIED DAYS OF THE WEEK AS INDICATED IN THE DAYS
*        FIELD.  DAYS OF THE WEEK MUST BE IN THE ORDER SHOWN.
*
*        A NON-BLANK IN THE 'DAY-OF-THE-WEEK' FIELD REQUESTS PROCESSING
*        ON THAT DAY.
*
*        FORMAT:
*
*        1    ===>BLANK            (AN ASTERISK SIGNIFIES A COMMENT)
*        2-6  ===>MM/DD            (MONTH/DAY SPEC - SLASH REQ'D!)
*        15   ===>(BLANK)
*        8-14 ===>MTWTFSS          (DAY-OF-WEEK SPECIFICATION)
*        15   ===>(BLANK)
*        16   ===>COMMAND DATA     (THROUGH COLUMN 71)
*        72   ===>CONTINUATION     (ONLY ONE CONTINUATION ALLOWED)
*
*        AN ASTERISK IN EITHER THE MM FIELD OR THE DD FIELD ALLOWS
*        EXECUTION FOR ALL MONTHS OR ALL DAYS.  ASTERISKS IN BOTH
*        FIELDS EFFECTIVELY NULLIFIES DAY-WITHIN-MONTH CRITERIA
*        (IF '**/**' IS SPECIFIED, THE COMMAND IS SUBJECT ONLY TO
*        DAY OF WEEK CRITERIA WHICH IS THE SAME AS ALL BLANKS IN
*        THE MM/DD FIELD).  IF THE MM/DD FIELD IS NON-BLANK,
*        THE REQUEST WILL BE PROCESSED ON THE MONTH/DAY SPECIFIED
*        BUT IS ALSO SUBJECT TO DAY OF WEEK SPECIFICATIONS.
*        IF A REQUEST IS TO BE PROCESSED ON THE SAME DAY OF EVERY
*        MONTH, SPECIFY THE MONTH AS ASTERISKS ('**/05').  IF A
*        REQUEST IS TO BE PROCESSED EVERY DAY OF A GIVEN MONTH,
*        SPECIFY THE DAY AS ASTERISKS ('09/**').
*
*        CONTINUATION IS SUPPORTED ONLY IF THE SUBSEQUENT RECORD
*        HAS 'ALL' BLANKS IN COLUMNS 1 THROUGH 15 AND CONTINUED
*        DATA BEGINS IN COLUMN 16.
*
***********************************************************************
         EJECT
***********************************************************************
*
*        EXAMPLES OF AUTOMATIC COMMANDS:
*
*   COLUMNS:  1      8       16                                   71
*             ..     .       .                                    .
*   COL-1---->*MM/DD MTWTFSS COMMAND------------------------------>72
*
* MEMBER=@0300
*   COL-1---->       XXXXXX  F A,BACKUP1,BACKUP2,BACKUP3
*   COL-1---->             X F A,BACKUPWK
*   COL-1----> **/01 ******* F A,MONTH01
*   COL-1----> **/01      S  F A,FIRSTSAT  SCHEDULE JOB ONLY ON THE
*   COL-1----> **/02      S  F A,FIRSTSAT  1ST SATURDAY OF THE MONTH
*   COL-1----> **/03      S  F A,FIRSTSAT            "
*   COL-1----> **/04      S  F A,FIRSTSAT            "
*   COL-1----> **/05      S  F A,FIRSTSAT            "
*   COL-1----> **/06      S  F A,FIRSTSAT            "
*   COL-1----> **/07      S  F A,FIRSTSAT            "
* MEMBER=@0755
*   COL-1---->       MTWTF   START TCAM
* MEMBER=@0800
*   COL-1---->       MTWTF   F TCAM,TS=START
*   COL-1---->       MTWTF   $HQ,P
*   COL-1---->       MTWTF   $AQ,T
* MEMBER=@0900
*   COL-1---->       -       SEND 'TODAY IS BLUE MONDAY...KEEP SMILING*
*   COL-1---->               '
*   COL-1---->        -      SEND 'TODAY IS TUESDAY...FOUR MORE TO GO'
*   COL-1---->         -     SEND 'TODAY IS WEDNESDAY...YOUR HALF WAY'
*   COL-1---->          -    SEND 'TODAY IS THURSDAY...HANG IN THERE'
*   COL-1---->           -   SEND 'THANK GOD IT''S FRIDAY'
*   COL-1---->            -  SEND 'IT''S SATURDAY... DIDN''T YOU FINIS*
*   COL-1---->               H?'
*   COL-1---->             - SEND 'WOW... EVEN SUNDAY YOU WORK!!!!!!'
* MEMBER=@1645
*   COL-1---->       MTWTF   SE 'TSO WILL BE GOING DOWN AT FIVE SHARP'
* MEMBER=@1655
*   COL-1---->       MTWTF   SE 'TSO WILL BE GOING DOWN IN FIVE MINUTE*
*   COL-1---->               S'
* MEMBER=@1659
*   COL-1---->       MTWTF   SE '**** TSO IS GOING DOWN IN ONE MINUTE X
*   COL-1---->               ****'
*   COL-1---->       MTWTF   SE '****   YOU WILL RECEIVE NO WARNING   X
*   COL-1---->               ****'
* MEMBER=@1700
*   COL-1---->       MTWTF   F TCAM,TS=STOP
*   COL-1---->       MTWTF   $HQ,T
*   COL-1---->       MTWTF   $AQ,P
*   COL-1----> 05/17 ******* F A,TESTJOB  SCHEDULE ONLY ON MAY 17
*   COL-1----> 05/16 *****   F A,TESTWKDY SCHEDULE ONLY ON MAY 16 WD
*   COL-1----> 05/16      ** F A,TESTWKND SCHEDULE ONLY ON MAY 16 WE
* MEMBER=@1702
*   COL-1---->       MTWTF   Z TP
*
***********************************************************************
         EJECT
***********************************************************************
*
*        EXAMPLES OF OPERATOR 'DEMAND' COMMANDS:
*
*   COL-1---->*      MTWTFSS COMMAND--------------------------->72
*
* MEMBER=IPL                            (  S AUTO.A,PARM=IPL  )
*   COL-1---->       XXXXXXX S RMF.RMF
*   COL-1---->       XXXXXXX S OPSWTR.OPSWTR
*   COL-1---->       XXXXXXX F A,-VARYCONS,VARYALL,SETJES
* MEMBER=SETJES                         (  F A,-SETJES )
*   COL-1---->       XXXXXXX $TPRT1,Q=A
*   COL-1---->       XXXXXXX $TI9,Z
*   COL-1---->       XXXXXXX $SI9
*   COL-1---->       XXXXXXX $SPRT1
* MEMBER=SHUTDOWN                       (  F A,-SHUTDOWN  )
*   COL-1---->       XXXXXXX $P
*   COL-1---->       XXXXXXX $IPRT1
*   COL-1---->       XXXXXXX $PLNE1
*   COL-1---->       XXXXXXX $ELNE1
*   COL-1---->       XXXXXXX P OPSWTR
*   COL-1---->       XXXXXXX P RMF
*   COL-1---->       XXXXXXX P A
* MEMBER=UNLOAD                         (  F A,-UNLOAD  )
*   COL-1---->       XXXXXXX U 180
*   COL-1---->       XXXXXXX U 181
*   COL-1---->       XXXXXXX U 182
* MEMBER=VARYALL                        (  F A,-VARYALL  )
*   COL-1---->       XXXXXXX V 180-188,ONLINE
*   COL-1---->       XXXXXXX V 150-158,OFFLINE
*   COL-1---->       XXXXXXX V 160-16F,ONLINE
* MEMBER=VARYCONS                       (  F A,-VARYCONS  )
*   COL-1---->       XXXXXXX V 120,CONSOLE,ROUT=(1,2,8,9,10,12,13,14,1*
*   COL-1---->               5)
*   COL-1---->       XXXXXXX V 121,CONSOLE,ROUT=(3,4,5,6)
*   COL-1---->       XXXXXXX V 122,CONSOLE,ROUT=(7)
*   COL-1---->       XXXXXXX V O-123,CONSOLE,ROUT=ALL
* MEMBER=VARYOFF                        (  F A,-VARYOFF  )
*   COL-1----> 09/**      XX V 150-158,OFFLINE  ONLY FOR SEPT WKEND
*   COL-1---->       XXXXXXX V 160-168,OFFLINE
*   COL-1---->       XXXXXXX V 170-178,OFFLINE
*
*  NOTE THAT THE COMMAND-LIST MEMBER MAY INCLUDE COMMANDS FOR THIS
*  ROUTINE AS WELL.  THIS MAY OR MAY NOT BE DESIRABLE SINCE IF NOT
*  CAUTIOUS, A LOOP COULD RESULT.
*
***********************************************************************
         EJECT
***********************************************************************
*
*        THIS ROUTINE IS 'NOT' RE-ENTRANT AND MUST BE LINKED AS
*        'AUTHORIZED'.
*
*        BOB BECKER MAY ,1979  ALLEN-BRADLEY COMPANY .. MILWAUKEE
*
*        MODIFIED:
*
*        GERALD URBANEK JANUARY, 1988 WESTERN ATLAS INTERNATIONAL ..
*        HOUSTON, TEXAS
*
*        CORRECTED TIMING PROBLEMS AT MIDNIGHT ON LIGHTLY LOADED
*        HIGH SPEED PROCESSORS.
*
*
*
*
*
*        REGISTER USAGE
*
*        R0   - WORK
*        R1   - WORK
*        R2   - WORK
*        R3   - WORK
*        R4   - WORK
*        R5   - WORK
*        R6   - WORK
*        R7   - WORK
*        R8   - UNUSED
*        R9   - QEDIT ORIGIN BASE
*        R10  - DCBS
*        R11  - BASE # 1
*        R12  - BASE # 2
*        R13  - SAVE AREA
*        R14  - BAL
*        R15  - WORK
*
*----------------------------------------------------------------------
         EJECT
*----------------------------------------------------------------------
*
*        INITIALIZATION
*
*----------------------------------------------------------------------
AUTO     $PROLOG R11,R12          ENTRY LINKAGE
         USING IHADCB,R10         DCB DSECT
ENTRY010 DS    0H
         L     R1,0(R1)           PARM POINTER
         XR    R2,R2              CLEAR R2
         ICM   R2,3,0(R1)         ANY PARM ?
         BZ    BBB010             NO - NOT STARTED AT IPL
         CH    R2,=H'8'           MAX PARM LENGTH ?
         BNH   AAA010             NO - OK
         WTO   '** AUTO ** - INVALID PARM LENGTH, IGNORED'
         B     BBB010
AAA010   EQU   *
         BCTR  R2,R0              DECR FOR EXECUTE
         EX    R2,MVC010          MOVE PARM TO MEMBER
BBB010   EQU   *
         OPEN  (COMMANDS,,DIR,,INTRDR,(OUTPUT))
         TM    COMMANDS+DCBOFLGS-IHADCB,DCBOFOPN  IS IT OPEN ?
         BZ    ERROR1             NO - ERROR
         BAL   R14,ENTRY999       SET UP THE DATE/TIME/DAY FIELDS
         L     R0,BUFSIZE         MAX BLKSIZE
         GETMAIN R,LV=(0)
         ST    R1,BUFFER          STORE FOR USE AS READ BUFFER
EXIT010  EQU   *
         B     ENTRY020
         LTORG
MVC010   MVC   MEMBER(0),2(R1)
         EJECT
*----------------------------------------------------------------------
*
*        INITIALIZE CONSOLE COMMUNICATION INTERFACE
*
*----------------------------------------------------------------------
ENTRY020 DS    0H
         EXTRACT COMM,'S',FIELDS=(COMM)
         L     R1,COMM            GET ADDRESS OF COMMUNICATIONS FIELDS
         L     R0,0(R1)           GET COMMUNICATIONS ECB ADDRESS
         ST    R0,COMMECB         SAVE ECB ADDRESS IN WAIT LIST
         LA    R9,4(R1)           GET ORIGIN ADDRESS FOR QEDIT
         ICM   R1,15,0(R9)        IS THERE A START COMMAND CIB WAITING
         BZ    AAA020             NO, MUST BE BATCH EXECUTION
         QEDIT ORIGIN=(R9),BLOCK=(R1)  YES, FREE START COMMAND CIB
AAA020   EQU   *
         QEDIT ORIGIN=(R9),CIBCTR=255  ALLOW STACKED COMMANDS (255)
EXIT020  EQU   *
         B     ENTRY030
COMM     DC    F'0'
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        IPL COMMAND EXECUTION
*
*----------------------------------------------------------------------
ENTRY030 DS    0H
         CLC   MEMBER,BLANKS      ANY PARM ?
         BE    EXIT030            NO - THIS IS NOT IPL START
         BAL   R14,ENTRY900       PROCESS IPL MEMBER
EXIT030  EQU   *
         B     ENTRY040
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        SET UP TIMER
*
*----------------------------------------------------------------------
ENTRY040 DS    0H
         POINT DIR,=X'00000100'   POINT TO FIRST RECORD IN DIRECTORY
         USING DIRDSECT,R3
         TIME  DEC
         STCM  R0,12,HHMM         STORE TIME HHMM
         UNPK  @TIME(5),HHMM      MOVE TO STIMER TIME FIELD
         MVC   @TIME+4(2),=2C'0'
AAA040   EQU   *
         L     R3,BUFFER          ADDR OF BUFFER
         READ  DIRDECB,SF,DIR,(R3),'S'  READ DIRECTORY
         CHECK DIRDECB            AND OF COURSE WAIT
         XR    R1,R1              CLEAR A WORK REG
         ICM   R1,3,0(R3)         LNGTH OF DATA IN DIR BLK
         LA    R5,0(R1,R3)        END OF DATA IN DIR BLK
         LA    R3,2(R3)           INCR TO FIRST MEMBER NAME
LOOP040A EQU   *
         CLC   DIRNAME,=8X'FF'    END OF MEMBERS ?
         BE    DDD040             YES - CHECK FOR LO MEMBER
         CLI   DIRNAME,C'@'       TOD MEMBER ?
         BNE   CCC040             NO -SKIP IT
         LA    R1,DIRNAME+1       SECOND BYTE OF DIRNAME
         LA    R15,4              LOOP CONTROL - HHMM
LOOP040B EQU   *
         TM    0(R1),X'F0'        NUMERIC ?
         BNO   CCC040             NO - SKIP THIS MEMBER
         LA    R1,1(R1)           BUMP TO NEXT BYTE
         BCT   R15,LOOP040B
         CLC   DIRNAME+6(2),BLANKS  MUST BE BLANKS
         BE    BBB040             YES - OK
         MVC   WTO040+28(8),DIRNAME  NO - INFORM OPER
WTO040   WTO   '** AUTO ** - MEMBER //////// INVALID FOR TOD PROCESSINGX
               , IGNORED'
         B     CCC040
BBB040   EQU   *
         CLC   DIRNAME+1(4),@TIME  MUST BE HIGHER
         BH    GGG040             PROCESS THIS MEMBER
CCC040   EQU   *
         NI    DIRC,X'1F'         TURN OFF UNNEEDED BITS
         XR    R1,R1              CLEAR R1
         IC    R1,DIRC            NUMBER OF USER HALFWORDS
         SLL   R1,1               NUMBER OF USER BYTES
         LA    R3,12(R1,R3)       INCR TO NEXT DIR ENTRY
         CR    R3,R5              PAST END OF DIR BLOCK ?
         BL    LOOP040A           NO - CHECK THIS DIR ENTRY
         B     AAA040             YES - GET NEXT DIR BLOCK
DDD040   EQU   *                  ALSO EODAD FOR DIR READS
         AP    HHMM,=P'1000'      ADD 1 HOUR
         MVI   HHMM+1,X'00'       CLEAR MM
         CP    HHMM,=P'24000'     MIDNITE ?
         BL    EEE040             NO - OK
*    FOLLOWING TWO INSTRUCTIONS ADDED TO CORRECT TIMING PROBLEMS AT
*    MIDNIGHT ON LIGHTLY LOADED HIGH SPEED PROCESSORS
*
         CLC   @TIME(4),=C'2359'  IS IT MIDNIGHT  ????      GRU 01/88
         BE    ENTRY040           YES GET PAST MIDNIGHT     GRU 01/88
*
*
         MVC   @TIME,=C'23595999' SET MIDNIGHT AS TIMER VALUE
         B     III040             GO TO IT
EEE040   EQU   *
         UNPK  @TIME(5),HHMM      SET DEFAULT TO CHECK AGAIN NEXT HOUR
         B     HHH040
GGG040   EQU   *
         MVC   @TIME(4),DIRNAME+1  YES - NEW TIMER VALUE
HHH040   EQU   *
         MVC   @TIME+4(4),=4C'0'
III040   EQU   *
         XC    TIMEECB,TIMEECB
         STIMER  REAL,ENTRY950,TOD=@TIME
EXIT040  EQU   *
         B     ENTRY050
         DROP  R3
         LTORG
HHMM     DC    PL3'0'
@TIME    DC    D'0'
         EJECT
*----------------------------------------------------------------------
*
*        WAIT FOR MODIFY OR TIMER POP
*
*----------------------------------------------------------------------
ENTRY050 DS    0H
         WAIT  1,ECBLIST=ECBLIST,LONG=YES  WAIT UNTIL AN ECB IS POSTED
         L     R1,COMMECB         ADDR OF COMMUNICATIONS ECB
         CLI   0(R1),X'00'        CHECK FOR OPERATOR REQUEST
         BNE   ENTRY060           YES--GO TO PROCESS OPER REQ
         CLI   TIMEECB,X'00'      DID THE TIMER POP ?
         BNE   ENTRY300           YES--GO PROCESS TIME REQUEST
         B     ENTRY050           HMMM.. DON'T KNOW, RETRY
         LTORG
ECBLIST  DS    0F
COMMECB  DC    A(0)
         DC    X'80',AL3(TIMEECB)
         EJECT
*----------------------------------------------------------------------
*
*        CHECK FOR OPERATOR REQUEST
*
*----------------------------------------------------------------------
ENTRY060 DS    0H
         L     R3,0(R9)           GET ADDRESS OF THE CIB
         USING CIBSECT,R3         ALLOW ADDRESSABILITY
         CLI   CIBVERB,X'40'      IS IT THE STOP COMMAND ?
         BE    RETURN             YES - TO CLEAN UP ROUTINE
         MVC   COMMDATA,BLANKS    CLEAR THE DATA BUFFER
         IC    R15,CIBDSIZE+1     GET SIZE OF MODIFY DATA
         BCTR  R15,R0             DECREMENT FOR EXECUTE
         EX    R15,MOVE060        MOVE TO COMMDATA
         QEDIT ORIGIN=(R9),BLOCK=(R3)  FREE THE CIB
         OC    COMMDATA,BLANKS    UPPER CASE
         CLI   COMMDATA,C'-'      IS IT A COMMAND REQUEST ?
         BE    ENTRY200           YES - PROCESS IT
         B     ENTRY100           NO - ASSUME JOB
         LTORG
MOVE060  MVC   COMMDATA(0),CIBDATA  MOVE DATA TO WORK AREA
         DROP  R3                 FREE THE USING REGISTER
         EJECT
*----------------------------------------------------------------------
*
*        DETERMINE WHICH DDNAME TO USE FOR SUBMIT
*
*----------------------------------------------------------------------
ENTRY100 DS    0H
         LA    R10,JOBDCB         ADDR OF JOB DCB
         LA    R3,COMMDATA        ADDR OF INPUT DATA
LOOP100A EQU   *
         CLI   0(R3),C' '         END OF DATA ?
         BE    AAA100             YES - DEFAULT DDNAME
         CLC   0(3,R3),=C',D='    IS THIS DDNAME OVERRIDE?
         BE    BBB100             NO, CONTINUE UNTIL ONE IS FOUND
         LA    R3,1(R3)           BUMP TO NEXT CHARACTER
         B     LOOP100A           BRANCH BACK
AAA100   EQU   *
         MVC   0(5,R3),=C',D=00'  ASSUME DEFAULT
BBB100   EQU   *
         TM    DCBOFLGS,DCBOFOPN  JOB CNTL DCB OPEN ?
         BZ    CCC100             NO - OPEN IT
         CLC   OPENDCB,3(R3)      SAME AS LAST ONE ?
         BE    EXIT100            YES - OK
         CLOSE ((R10))            NO - CLOSE IT
         XC    OPENDCB,OPENDCB    CLEAR LAST OPENED
CCC100   EQU   *
         MVC   DADNJCL+3(2),3(R3)   MODIFY DYNAMIC ALLOCATION PARMS
         LA    R4,DSNTABLE          TABLE OF DSNS TO DDNAMES
CCC100L  DS    0H
         CLC   0(2,R4),3(R3)        RIGHT DDNAME SUFFIX ?
         BE    CCC100A              GO DO ALLOCATION
         CLC   0(2,R4),=X'FFFF'     END OF TABLE ?
         BNE   CCC100B              NO BUMP TO NEXT ENTRY
         MVC   CCC100M+33(2),3(R3)  MOVE DD SUFFIX TO WTO
*               89012345678901234567890123456789012345678901234567890
CCC100M  WTO   '** AUTO ** DDNAME SUFFIX // NOT DEFINED IN TABLE USING X
               00 AS A DEFAULT'
         MVC   3(2,R3),=C'00'       SET UP DEFAULT
         B     CCC100
CCC100B  DS    0H
         LA    R4,46(R4)            NEXT ENTRY IN TABLE PLEASE.
         B     CCC100L              TRY THAT ENTRY ON FOR SIZE
CCC100A  DS    0H
         MVC   DADSJCL(44),2(R4)    SAVE THE DATASET TO ALLOCATE.
         LA    R1,JCLALOC
         DYNALLOC
         LTR   R15,R15              ALLOCATION GOOD ?
         BZ    CCC100D
         MVC   DATASET(44),DADSJCL MOVE DSNAME TO TITLE
         WTO   MF=(E,TITLE)
         LH    R6,TITLE            GET LENGTH OF WTO.
         LH    R7,TITLE+2          GET MCS FLAGS FROM WTO
         SH    R6,HALF4            GET LENGTH OF MESSAGE TEXT
         STC   R6,TITLE+3          SAVE LENGTH FOR SDUMP
         SDUMP HDRAD=TITLE+3
         STH   R7,TITLE+2          RESTORE MCS FLAGS FROM WTO.
         B     ENTRY050            GO WAIT FOR MORE WORK
CCC100D  DS    0H
         MVC   DCBDDNAM+3(2),3(R3)  MODIFY DDNAME
         OPEN  ((R10))
         TM    DCBOFLGS,DCBOFOPN  DID IT OPEN THIS TIME ?
         BZ    ERROR2             NO - ERROR
         MVC   OPENDCB,3(R3)      SAVE LAST OPENED
EXIT100  EQU   *
         MVC   0(5,R3),=CL5' '    CLEAR THE 'D=XX' PARM
         B     ENTRY110
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        SUBMIT EACH MEMBER SPECIFIED IN THE PARMLIST
*
*----------------------------------------------------------------------
ENTRY110 DS    0H
         TM    INTRDR+DCBOFLGS-IHADCB,DCBOFOPN  IS THE INTRDR OPEN ?
         BZ    ENTRY050           NO, IGNORE REQUEST
         LA    R3,COMMDATA        ADDRESS OF FIRST (OR ONLY) OPERAND
AAA110   EQU   *
         LR    R4,R3              COPY TO WORK REG
         SR    R15,R15            CLEAR WORK REGISTER
         LA    R14,9              SET LOOP CONTROL
LOOP110  EQU   *
         CLI   0(R3),C' '         END OF MEMBER NAME?
         BE    BBB110             YES, PROCESS ONLY (LAST) MEMBER
         CLI   0(R3),C','         DELIMITER ?
         BE    BBB110             YES, PROCESS THIS ENTRY
         LA    R3,1(R3)           BUMP TO NEXT CHARACTER
         LA    R15,1(R15)         BUMP CHAR COUNT REG
         BCT   R14,LOOP110        BACK TO CHECK NEXT CHAR
         B     ERROR3             MEMBER NAME LONGER THAN 8 CHARS
BBB110   EQU   *
         BCTR  R15,R0             DECREMENT FOR MOVE
         MVC   MEMBER(8),BLANKS   CLEAR MEMBER NAME AREA
         EX    R15,MOVE110        MOVE MEMBER NAME
         FIND  ((R10)),MEMBER,D
         LTR   R15,R15            MEMBER FOUND ?
         BZ    CCC110             YES - OK
         MVC   WTO110+25(8),MEMBER
*               890123456789012345
WTO110   WTO   '** AUTO ** - JOB //////// NOT FOUND'
         B     EEE110             GO TO EODAD ROUTINE
CCC110   EQU   *
         L     R5,BUFFER          ADDR OF BUFFER
         READ  READDECB,SF,(R10),(R5),'S'
         CHECK READDECB
         LH    R6,DCBLRECL        LRECL
         LH    R7,DCBBLKSI        BLOCK SIZE
         LA    R7,0(R7,R5)        END OF FULL BLOCK
         L     R1,READDECB+16     ADDR OF IOB
         LH    R1,14(R1)          RESIDUAL COUNT FOR SHORT BLOCK
         SR    R7,R1              ADJUSTED BLOCK LENGTH
         SR    R7,R6              DECR TO BEGINNING OF LAST RECORD    *
DDD110   EQU   *
         PUT   INTRDR,(R5)        SUBMIT JCL
         BXLE  R5,R6,DDD110       BUMP TO NEXT REC IN BLOCK AND PUT
         B     CCC110             READ ANOTHER BLOCK
EEE110   EQU   *
         CLI   0(R3),C','         IS THERE ANOTHER MEMBER TO PROCESS ?
         BNE   FFF110             NO, FLUSH THE INTERNAL READER
         LA    R3,1(R3)           BUMP TO START OF NEXT MEMBER
         CLI   0(R3),C' '         NULL MEMBER NAME ?
         BNE   AAA110             NO, PROCESS IT
FFF110   EQU   *
         PUT   INTRDR,EOF         /*EOF
EXIT110  EQU   *                  END OF ALL SUBMITS
         CLOSE ((R10))            CLOSE AND DE-ALLOCATE JOBDCB.
         B     ENTRY050           CHECK FOR ANY MORE COMMANDS
MOVE110  MVC   MEMBER(0),0(R4)    EXECUTED MOVE OF MEMBER NAME
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        PROCESS COMMAND EXECUTION REQUEST BY OPERATOR
*
*----------------------------------------------------------------------
ENTRY200 DS    0H
         LA    R3,COMMDATA+1      ADDRESS OF FIRST (OR ONLY) OPERAND
AAA200   EQU   *
         LR    R4,R3              COPY TO WORK REG
         SR    R15,R15            CLEAR WORK REGISTER
         LA    R14,9              SET LOOP CONTROL
LOOP200  EQU   *
         CLI   0(R3),C' '         END OF MEMBER NAME?
         BE    BBB200             YES, PROCESS ONLY (LAST) MEMBER
         CLI   0(R3),C','         DELIMITER ?
         BE    BBB200             YES, PROCESS THIS ENTRY
         LA    R3,1(R3)           BUMP TO NEXT CHARACTER
         LA    R15,1(R15)         BUMP CHAR COUNT REG
         BCT   R14,LOOP200        BACK TO CHECK NEXT CHAR
         B     ERROR4             MEMBER NAME LONGER THAN 8 CHARS
BBB200   EQU   *
         BCTR  R15,R0             DECREMENT FOR MOVE
         MVC   MEMBER(8),BLANKS   CLEAR MEMBER NAME AREA
         EX    R15,MOVE200        MOVE MEMBER NAME
         BAL   R14,ENTRY900       PROCESS COMMAND
         CLI   0(R3),C','         IS THERE ANOTHER MEMBER TO PROCESS ?
         BNE   EXIT200            NO, DONE
         LA    R3,1(R3)           BUMP TO START OF NEXT MEMBER
         CLI   0(R3),C' '         NULL MEMBER NAME ?
         BNE   AAA200             NO, PROCESS IT
EXIT200  EQU   *
         B     ENTRY050
         LTORG
MOVE200  MVC   MEMBER(0),0(R4)    EXECUTED MOVE OF MEMBER NAME
         EJECT
*----------------------------------------------------------------------
*
*        PROCESS TIME INTERVAL REQUESTS (THE TIMER HAS POPPED)
*
*----------------------------------------------------------------------
ENTRY300 DS    0H
         MVC   MEMBER,BLANKS      CLEAR
         MVI   MEMBER,C'@'        PREFIX
         MVC   MEMBER+1(4),@TIME  BUILD NAME
         FIND  COMMANDS,MEMBER,D
         LTR   R15,R15            MEMBER FOUND ?
         BNZ   EXIT300            NO, MUST BE NULL TIMER
         BAL   R14,ENTRY900
EXIT300  EQU   *
         B     ENTRY040
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        PROCESS COMMANDS
*
*----------------------------------------------------------------------
ENTRY900 DS    0H
         ST    R14,ST900          SAVE RETURN ADDR
         LA    R10,COMMANDS       DCB ADDR
         TM    DCBOFLGS,DCBOFOPN  IS THE COMMANDS OPEN ?
         BZ    EXIT900            NO, IGNORE REQUEST
         BAL   R14,ENTRY999       RE-ESTABLISH DATE, TIME, AND DAY
         FIND  COMMANDS,MEMBER,D
         LTR   R15,R15            MEMBER FOUND ?
         BZ    AAA900             YES - PROCESS IT
         MVC   WTO900+25(8),MEMBER
WTO900   WTO   '** AUTO ** - CMD //////// NOT FOUND'
         B     EXIT900            GO TO EODAD ROUTINE
AAA900   EQU   *
         L     R5,BUFFER          ADDR OF BUFFER
         READ  CMDDECB,SF,(R10),(R5),'S'
         CHECK CMDDECB
         LH    R6,DCBLRECL        LRECL
         LH    R7,DCBBLKSI        BLOCK SIZE
         LA    R7,0(R7,R5)        END OF FULL BLOCK
         L     R1,CMDDECB+16      ADDR OF IOB
         LH    R1,14(R1)          RESIDUAL COUNT FOR SHORT BLOCK
         SR    R7,R1              ADJUSTED BLOCK LENGTH
         SR    R7,R6              DECR TO BEGINNING OF LAST RECORD    *
BBB900   EQU   *
         CLI   CONTFLAG,X'FF'     IS THE CONTINUATION FLAG ON ?
         BNE   EEE900             NO, NORMAL PROCESSING
         CLC   0(15,R5),BLANKS    IS IT A VALID CONT RECORD ?
         BE    DDD900             YES, OK
CCC900   EQU   *
         MVC   WTO900A+25(8),MEMBER MOVE MEMBER NAME
WTO900A  WTO   '** AUTO ** - CMD //////// INVALID CONTINUATION, SKIP'
         MVI   CONTFLAG,X'00'     RESET CONT FLAG
         B     JJJ900             SKIP THE RECORD
DDD900   EQU   *
         MVC   CMDBUF+56(56),15(R5)  MOVE COMMAND DATA TO BUFR
         CLI   71(R5),C' '        IS THIS RECORD CONTINUED ?
         BNE   CCC900             YES - ERROR ONLY ONE CONT ALLOWED
         MVI   CONTFLAG,X'00'     RESET THE CONTINUATION FLAG
         B     III900             PROCESS COMPLETE COMMAND
EEE900   EQU   *
         CLI   0(R5),C'*'         COMMENT ?
         BE    KKK900             YES - SKIP IT
         CLC   1(5,R5),BLANKS     ANY MONTH/DAY PROCESSING?
         BE    HHH900             NO, PROCESS DAY OF WEEK ONLY
         CLI   3(R5),C'/'         VALID MONTH/DAY SPECIFICATION?
         BE    FFF900             YES - OK
         MVC   WTO900B+25(8),MEMBER MOVE MEMBER NAME
WTO900B  WTO   '** AUTO ** - CMD //////// INVALID MONTH/DAY, SKIPPED'
         B     KKK900             SKIP THE RECORD
FFF900   EQU   *
         CLC   1(5,R5),=C'**/**'  ANY MONTH/DAY PROCESSING?
         BE    HHH900             YES, PROCESS DAY OF WEEK ONLY
         CLC   1(5,R5),DATE       IS THIS A HIT?
         BE    HHH900             YES, CHECK FOR CORRECT DAY OF WEEK
         CLC   4(2,R5),=C'**'     WAS ANY DAY SPECIFIED ?
         BNE   GGG900             NO, CHECK FOR ANY MONTH
         CLC   1(2,R5),DATE       YES, IS THIS THE CORRECT MONTH
         BE    HHH900             YES, PROCESS DAY OF WEEK NEXT
         B     KKK900             NO - SKIP IT
GGG900   EQU   *
         CLC   1(2,R5),=C'**'     WAS ANY MONTH SPECIFIED ?
         BNE   KKK900             NO - SKIP IT
         CLC   4(2,R5),DATE+3     YES, IS THIS THE CORRECT DAY
         BNE   KKK900             NO - SKIP IT
HHH900   EQU   *
         SR    R1,R1              CLEAR FOR DAY INDEX
         IC    R1,DAY             GET DAY INDEX
         LA    R1,7(R5,R1)        POINT TO TODAYS PROCESS FLAG
         CLI   0(R1),C' '         PROCESS FLAG ON FOR TODAY ?
         BE    KKK900             NO -SKIP IT
         MVC   CMDBUF(56),15(R5)  MOVE COMMAND DATA TO BUFR
         CLI   71(R5),C' '        IS THIS RECORD CONTINUED ?
         BE    III900             NO - PROCESS COMMAND
         MVI   CONTFLAG,X'FF'     SET THE CONTINUATION FLAG
         B     KKK900             GET NEXT RECORD
III900   MODESET KEY=ZERO         GET KEY ZERO AND AUTH
         LM    R0,R1,SVCREGS      GET SVC 34 REGS
         SVC   34                 SCHEDULE COMMAND
         MODESET KEY=NZERO        RELEASE AUTHORIZATION
JJJ900   EQU   *
         MVC   CMDBUF(115),BLANKS CLEAR THE COMMAND BUFFER
KKK900   EQU   *
         BXLE  R5,R6,BBB900       BUMP TO NEXT REC IN BLOCK
         B     AAA900             READ ANOTHER BLOCK
EXIT900  EQU   *                  EODAD
         L     R14,ST900          RETURN ADDR
         BR    R14
         LTORG
ST900    DC    F'-1'
CONTFLAG DC    X'00'
SVCREGS  DC    F'0'               REG 0 FOR SVC 34
         DC    A(SVCCIB)          REG 1 FOR SVC 34
SVCCIB   DC    AL2(118)           MAXIMUM LENGHT OF COMMAND
         DC    H'0'               SVC 34 PADDING
CMDBUF   DC    CL120' '           COMMAND BUFFER
         EJECT
*----------------------------------------------------------------------
*
*        TIMER EXIT
*
*----------------------------------------------------------------------
ENTRY950 DS    0H
         USING *,R15
         STM   R14,R12,4(R13)     SAVE REGS
         L     R12,=A(AUTO)
         DROP  R15
         POST  TIMEECB
         LM    R14,R12,4(R13)     RESTORE REGS
EXIT950  EQU   *
         BR    R14
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        DAY/DATE ROUTINE (FROM THE MACHINE CLOCK)
*
*----------------------------------------------------------------------
ENTRY999 DS    0H
         ST    R14,SAVE999        SAVE BAL REG
         $STCK NOGEN              GENERATE THE DATE, TIME AND DAY
EXIT999  EQU   *
         L     R14,SAVE999        RELOAD BAL REG
         BR    R14
         LTORG
SAVE999  DC    F'-1'
DAY      DC    X'99'              RELATIVE DAY OF WEEK (0=MONDAY)
DATE     DC    D'0'               DATE MM/DD/YY
TIME     DC    D'0'               TIME HH:MM:SS
         EJECT
*----------------------------------------------------------------------
*
*        END OF JOB
*
*----------------------------------------------------------------------
RETURN   DS    0H
         TM    DCBOFLGS,DCBOFOPN  IS THE JCL DCB OPEN?
         BZ    AAARET             NO, SKIP THE CLOSE
         CLOSE ((10))             CLOSE THE DCB
AAARET   EQU   *
         TM    COMMANDS+DCBOFLGS-IHADCB,DCBOFOPN  COMMANDS OPEN ?
         BZ    BBBRET             NO, SKIP THE CLOSE
         CLOSE (COMMANDS,,DIR)    CLOSE BOTH DCBS
BBBRET   EQU   *
         TM    INTRDR+DCBOFLGS-IHADCB,DCBOFOPN  HOW ABOUT THE INTRDR ?
         BZ    CCCRET             NO, SKIP THAT CLOSE
         CLOSE (INTRDR)           CLOSE THE INTERNAL READER
CCCRET   EQU   *
         L     R1,BUFFER
         L     R0,BUFSIZE
         FREEMAIN  R,LV=(0),A=(1)
         SR    R15,R15            CLEAR RETCODE
         $EPILOG
         LTORG
         EJECT
*----------------------------------------------------------------------
*
*        ERROR ROUTINES
*
*----------------------------------------------------------------------
ERROR1   DS    0H
         WTO   '** AUTO ** - COMMANDS DD CARD MISSING, TERMINATING'
         B     RETURN
*----------------------------------------------------------------------
ERROR2   DS    0H
         MVC   WTO2+23(2),3(R3)
WTO2     WTO   '** AUTO ** - D=// OPEN ERROR, JOB NOT SUBMITTED'
         B     ENTRY050           PROCESS NEXT COMMAND
*----------------------------------------------------------------------
ERROR3   DS    0H
         MVC   WTO3+25(8),0(R4)
WTO3     WTO   '** AUTO ** - JOB //////// AND ALL FOLLOWING NOT PROCESSX
               ED, LENGTH EXCEEDED'
         B     ENTRY050           PROCESS NEXT COMMAND
*----------------------------------------------------------------------
ERROR4   DS    0H
         MVC   WTO4+25(8),0(R4)
WTO4     WTO   '** AUTO ** - CMD //////// AND ALL FOLLOWING NOT PROCESSX
               ED, LENGTH EXCEEDED'
         B     ENTRY050           PROCESS NEXT COMMAND
         EJECT
*----------------------------------------------------------------------
*
*        STORAGE AREAS
*
*----------------------------------------------------------------------
BUFSIZE  DC    F'32760'
TIMEECB  DC    F'0'
BUFFER   DC    F'0'
MEMBER   DC    CL8' '
OPENDCB  DC    CL2' '
HOLDCIB  DC    CL256' '
COMMDATA DC    CL256' '
BLANKS   DC    CL256' '
*                        1         2         3         4         5
*               123456789012345678901234567890123456789012345678901234
TITLE    WTO   '                                             CAN NOT BEX
                ALLOCATED AT THIS TIME TRY LATER',                     X
               ROUTCDE=(1,2,11),MF=L
DATASET  EQU   TITLE+4
HALF4    DC    H'4'
EOF      DC    CL80'/*EOF'
DSNTABLE DS    0F
         DC    C'00',CL44'SYST.JOB.CNTL'
         DC    C'01',CL44'CIW.JCLLIB'
         DC    C'02',CL44'GP5GTM.JOB.CNTL'
         DC    C'03',CL44'GP5CLT.JOB.CNTL'
         DC    C'04',CL44'IPO1.OPERLIB'
         DC    C'05',CL44'SYS1.PUTPDS'
         DC    C'06',CL44'NCP.GENLIB'
         DC    C'07',CL44'NCP.JCLLIB'
         DC    C'08',CL44' '
         DC    C'09',CL44' '
         DC    C'10',CL44' '
         DC    X'FFFF'
JCLALOC  DA    DDN=JOB00,                                              X
               DSN=CIW.JCLLIB,                                         X
               STATUS=SHR,                                             X
               UNQSUF=JCL,                                             X
               FREE=CLOSE
         EJECT
         PRINT NOGEN
COMMANDS DCB   DDNAME=COMMANDS,DSORG=PO,MACRF=R,EODAD=EXIT900
DIR      DCB   DDNAME=COMMANDS,DSORG=PS,MACRF=RP,EODAD=DDD040,         X
               LRECL=256,BLKSIZE=256,RECFM=FB
JOBDCB   DCB   DDNAME=JOB00,DSORG=PO,MACRF=R,EODAD=EEE110
INTRDR   DCB   DDNAME=INTRDR,DSORG=PS,MACRF=PM,                        X
               LRECL=80,BLKSIZE=80,RECFM=F
         EJECT
CIBSECT  DSECT ,                  COMMAND INPUT BUFFER MAPPING
CIBCIB   DS    F                  ADDRESS OF NEXT CIB IN CHAIN
CIBVERB  DS    C                  CIB VERB CODE
CIBSIZE  DS    C                  SIZE OF THE COMMAND INPUT BUFFER
CIBRSVD1 DS    H                  RESERVED
CIBRSVD2 DS    C                  RESERVED
CIBTSOID DS    CL3                TSO TERMINAL ID
CIBCONID DS    C                  CONSOLE ID OF STARTED TASK
CIBRSVD3 DS    C                  RESERVED
CIBDSIZE DS    H                  SIZE OF USER DATA WITHIN CIB
CIBDATA  DS    C                  COMMAND DATA AS ENTERED BY OPERATOR
DIRDSECT DSECT
DIRNAME  DS    CL8
DIRTTR   DS    CL3
DIRC     DS    CL1
         DCBD  DSORG=PO
         END
