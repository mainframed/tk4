¯
°                         MVS Dynamic PROCLIB                  #INSTALL
°                            Version 3.2.4
°                            December, 1990
°                             Installation
¸
°This  library  contains a complete Dynamic PROCLIB modification.  This
°modification is compatible with all versions of MVS/SP 1.3.3 to MVS/SP
°3.1.3.  This release of Dynamic PROCLIB includes  substantial  changes
°to  the previous release(s) and REQUIRES de-installation of any previ-
°ous level installed.

°**********************************************************************

°                   Special Installation Procedures
°                            Version 3.2.4

°The Superzap modification to Module IEFVFA (#YSPxx2/#ZSPxx2) has  been
°updated  to  reflect  the change in internal text key for the SYSPROC=
°Parameter.  This modification must be reinstalled at the same time  as
°the  IEFVPP module (#YSPxx4/#ZSPxx4) in order for the SYSPROC= Parame-
°ter to continue to work.

°The only changes in Release 3.2.3 over Release 3.2.0 are in the IEFVPP
°module.   If 3.2.0, 3.2.1, or 3.2.2  have  been  installed,  only  the
°IEFVPP module modification needs to be re-installed.

°If  any  3.2.x  Release is installed on a System containing a 3.1.x or
°earlier level of Dynamic PROCLIB, the 3.1.x  Release  must  be  de-in-
°stalled  first.    In addition, 3.2.x must be installed on all Systems
°sharing a Multi-Access SPOOL, as the method of "deleting"  JOBPROC  DD
°Statements  changed  between these Releases and JCL Errors will result
°for Jobs converted on a 3.2.x Dynamic PROCLIB and executed on a  3.1.x
°Dynamic PROCLIB or vice-versa.

°**********************************************************************

°                   General Installation Procedures

°Becuase  of  the  changes in External References in the Converter Load
°Module, INITIAL installation of this Dynamic PROCLIB Modification,  is
°NOT  simply  a  matter  of SMP RECEIVE and APPLY.  SMP must be tricked
°into performing a re-link edit of the Converter Load Module  with  the
°"updated"  JCLIN.   Since this Dynamic PROCLIB Modification comes with
°the necessary SYSGEN Macro update, installation via SYSGEN is  simple.
°Also,  once  ACCEPTed,  any  future SYSGEN (or GENERATE) will not lose
°this Modification.

°The Dynamic PROCLIB Modification is packaged as four (4) separate  SMP
°USERMODs.  For installation totally via SMP, an additional "temporary"
°modification  will be required.  The construction of this modification
°must be performed by the installation.  The names assigned to the  SMP
°User Modifications (#ZSPxxx/#YSPxxx) are simply for identification and
°convenience.   Installations are encouraged to convert these modifica-
°tions to whatever local modification naming convention is used.
¯
°                         MVS Dynamic PROCLIB                  #INSTALL
°                            Version 3.2.4
°                            December, 1990
°                             Installation
¸
°Modification #YSPxx1/#ZSPxx1  updates  Interpreter  module  IEFVDA  to
°bypass  a JOBPROC DD Statement.  It should be applied first, as it has
°no impact on any processing  by  the  Converter  or  Interpreter  that
°doesn't  involve  JOBPROC  DD  Statements.   It is REQUIRED before the
°Dynamic PROCLIB Modification will work.

°Modification #YSPxx2/#ZSPxx2 updates Converter module IEFVFA to create
°an Internal Text definition  for  the  SYSPROC=YES×NO  JCL  parameter.
°This  modification  is OPTIONAL.   The default for SYSPROC is YES.  If
°this modification is not installed, the User will simply  always  have
°the  System PROCLIBs concatenated after any specified JOBPROCs and the
°SYSPROC=YES×NO cannot be specified on the JOBPROC DD Statement.   This
°modification also has no impact on a Converter before the installation
°of  the  remaining portion of the Dynamic PROCLIB modification and can
°be installed second.

°Modification #YSPxx3/#ZSPxx3 provides the update  to  the  appropriate
°MVS  SYSGEN  Macro (SGIEF441 or SGIEF409) and contains the JCLIN which
°provides the necessary linkage editor CHANGE  and  INCLUDE  Statements
°for  CSECTs  IEFVH1 and IEFVHF in Load Module IEFVH1.  Installation of
°this modification does NOT cause the Converter Load Module (IEFVH1) to
°be re-link edited.  It merely tells SMP about the new structure.

°After the installation of #YSPxx3/#ZSPxx3  is  where  the  "temporary"
°USERMOD  comes  into play.   The External Reference to IEFVHA in CSECT
°IEFVH1 must be change to point to IEFVPP0 and the IBM  supplied  CSECT
°IEFVHF  must be changed to IEFVHFX.  This can be done one of two ways.
°One is to manually re-link edit the Converter Load Module  outside  of
°SMP.    Since  the  JCLIN  was performed by #YSPxx3/#ZSPxx3, SMP knows
°about the changes and this does not get the Load Module  out  of  sync
°with  SMP.    The  following JCL/Link Edit Control Statements could be
°used:

°     //RELINKER JOB ....
°     //IEFVH1 EXEC  PGM=IEWL PARM=(LET,LIST,MAP,NCAL,RENT)
°     //SYSPRINT DD  ....
°     //SYSUT1 DD    ....
°     //AOSB3  DD    DSN=SYS1.AOSB3,DISP=SHR
°     //SYSLMOD DD   DSN=SYS1.LINKLIB,DISP=SHR,UNIT=...,VOL=SER=...
°     //SYSLIN DD    *
°              CHANGE IEFVHF(IEFVHFX)
°              INCLUDE AOSB3(IEFVHF)
°              CHANGE IEFVHA(IEFVPP0)
°              INCLUDE AOSB3(IEFVH1)
°              INCLUDE SYSLMOD(IEFVH1)
°              ENTRY IEFVH1
°              NAME  IEFVH1(R)
°     /*

°At this point the Convert Load Module (IEFVH1) will have an unresolved
¯
°                         MVS Dynamic PROCLIB                  #INSTALL
°                            Version 3.2.4
°                            December, 1990
°                             Installation
¸
°External Reference to IEFVPP0 and two copies of the IEFVHF CSECT  (one
°named IEFVHF and one name IEFVHFX).  This is OK.

°The SMP way of getting the Converter re-link edited is through the use
°of  a  "temporary" USERMOD.  An SMP USERMOD is constructed to Superzap
°both IEFVH1 and IEFVHF, RECEIVEd, APPLYed, and RESTOREd.    Since  the
°RESTORE process will cause SMP to re-link edit the IEFVH1 Load Module,
°including IEFVH1 and IEFVHF from the DLIB, the Load Module will end up
°in  the same state as the manual re-link edit above.  A possible USER-
°MOD might look like this:

°     ++ USERMOD (.......) .
°     ++ VER   (Z038)  FMID (.......) ....
°     ++ ZAP   (IEFVH1)  DISTLIB (AOSB3) .
°              NAME  IEFVH1
°              VER   0000 90EC,D00C
°              REP   0000 90EC,D00C
°     ++ ZAP   (IEFVHF)  DISTLIB (AOSB3) .
°              NAME  IEFVHF
°              VER   0000 05B0
°              REP   0000 05B0

°When  Modification  #YSPxx4/#ZSPxx4  is  installed,  it  supplies  two
°CSECTs.    One,  IEFVPP,  contains and entry point of IEFVPP0 and will
°resolve the unresolved External Reference.   The second  CSECT  is  an
°IEFVHF  CSECT  which  ends  up  removing  the "duplicate" IBM supplied
°IEFVHF and all External References to IEFVHF will  now  point  to  the
°CSECT supplied as part of IEFVPP.

°Future  IBM  maintenance which hits IEFVHF will NOT replace the IEFVPP
°supplied IEFVHF, as SMP will prefix the INCLUDE of  the  IBM  supplied
°module  with  the CHANGE Statement, causing the CSECT to be renamed as
°it is INCLUDEd.   Special Note:   Any Superzaps to  the  IBM  supplied
°IEFVHF will have to specify IEFVHFX as the CSECT name.

°Installations  may wish to re-assemble the IEFVPP source module before
°installing #YSPxx4/#ZSPxx4, changing the Set  Symbols  to  meet  their
°requirements.    If  so,  the  resulting  Object Deck would be used to
°replace the one supplied as part of #YSPxx4/#ZSPxx4.   Note,  however,
°as  distributed, IEFVPP must be assembled with Assembler H, Version 2.
°In addition, the MVS/XA Macro Libraries  (MACLIB  and  AMODGEN/MODGEN)
°from  MVS/SP  2.2.0  (or  later) with PTF UY16002 are also required to
°properly assemble IEFVPP.  Setting &SWA220 to 0 (zero) in  the  IEFVPP
°source eliminates this requirement.

°The Object Decks provided in each of the #YSPxx4/#ZSPxx4 Modifications
°are  identical  and were created by assembling the source of IEFVPP as
°it is distributed.  The only reason a TXLIB wasn't used to  distribute
°a  single  copy of the Object Deck is that it would not be possible to
°have two members called IEFVPP (one source and one object) in the same
°Data Set.
