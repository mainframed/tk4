++ USERMOD(SMJES11) REWORK(9403300) .
++ VER(Z038) FMID(HJE4430) .
++ SRC(J005LOAD) DISTLIB(HASPSRC) DISTMOD(AOSH3) .
         TITLE 'JES2 $LOAD COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 4.3.0     ADAPTED FOR NEW LMT   SBG CSC03
*                                                                     *
***********************************************************************
*                                                                     *
*        (THIS EXIT HAS ONLY BEEN TESTED TO BE ABLE TO RELOAD         *
*         OTHER EXITS THAT GO INTO THE JES2 ADDRESS SPACE.  EXITS     *
*         CAN ALSO BE LOADED INTO LPA OR CSA.  THIS EXIT HAS NOT      *
*         BEEN PROGRAMMED TO HANDLE LPA OR CSA RELOADING. YOU JES2    *
*         EXPERTS OUT THERE ARE WELCOME TO WORK ON THAT.  THANKS.)    *
*                                                            S.GOLOB  *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $LOAD COMMAND *
*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *
*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $LOAD      *
*        COMMAND WHEN ENCOUNTERED.                                    *
*                                                                     *
*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *
*                                                                     *
*        THE $LOAD COMMAND HAS THE FOLLOWING SYNTAX:                  *
*                                                                     *
*        $LOAD -MODNAME                                               *
*                                                                     *
*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *
*                                                                     *
*        THIS EXIT IS NORMALLY MADE KNOWN TO JES2 THROUGH THE         *
*        FOLLOWING JES2 PARMS:                                        *
*                                                                     *
*                                                                     *
*                                                                     *
* EXIT(5)  ROUTINES=(E005LOAD),                                       *
*          STATUS=ENABLED,                                            *
*          TRACE=NO                                                   *
*                                                                     *
*          LOADMOD(J005LOAD)             /*  ENTRY PT IS E005LOAD  */ *
*                                                                     *
*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *
*                                                                     *
*        THIS EXIT CAN BE "PIGGY-BACKED" TO OTHER JES2 EXIT 5         *
*        ROUTINES IN JES2 PARMS.  AN EXAMPLE OF HOW THIS IS DONE:     *
*                                                                     *
*                                                                     *
*                                                                     *
* EXIT(5)  ROUTINES=(EXIT5,E005LOAD),                                 *
*          STATUS=ENABLED,                                            *
*          TRACE=NO                                                   *
*                                                                     *
*          LOADMOD(JES2T05)              /*  ENTRY PT IS EXIT5     */ *
*          LOADMOD(J005LOAD)             /*  ENTRY PT IS E005LOAD  */ *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *
*                                                                     *
*        1)  THE HASP000 MESSAGES ARE MADE UPON COMPLETION OF         *
*            COMMAND                                                  *
*                                                                     *
*        $HASP000 MODULE RELOADED                                     *
*                                                                     *
*        $HASP000 MODULE IS NOT IN THE LMT                            *
*                                                                     *
*        $HASP000 MODULE LOAD ERROR                                   *
*                                                                     *
*        $HASP000 MODULE INVALID                                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J E S $ L O A D          *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $COMWORK     SYS1.HASPSRC                               *
*        04)  $CWA         SYS1.HASPSRC                               *
*        05)  $DCT         SYS1.HASPSRC                               *
*        06)  $ENTRY       SYS1.HASPSRC                               *
*        07)  $HASPEQU     SYS1.HASPSRC                               *
*        08)  $HASPGBL     SYS1.HASPSRC                               *
*        09)  $HCT         SYS1.HASPSRC                               *
*        10)  $JCT         SYS1.HASPSRC                               *
*        11)  $JOE         SYS1.HASPSRC                               *
*        12)  $JQE         SYS1.HASPSRC                               *
*        13)  $LMT         SYS1.HASPSRC                               *
*        14)  $MIT         SYS1.HASPSRC                               *
*        15)  $MITETBL     SYS1.HASPSRC                               *
*        16)  $MODEND      SYS1.HASPSRC                               *
*        17)  $MODULE      SYS1.HASPSRC                               *
*        18)  $PADDR       SYS1.HASPSRC                               *
*        19)  $PCE         SYS1.HASPSRC                               *
*        20)  $PDDB        SYS1.HASPSRC                               *
*        21)  $PPPWORK     SYS1.HASPSRC                               *
*        22)  $QLOC        SYS1.HASPSRC                               *
*        23)  $QSE         SYS1.HASPSRC                               *
*        24)  $RETURN      SYS1.HASPSRC                               *
*        25)  $SAVE        SYS1.HASPSRC                               *
*        26)  $SJB         SYS1.HASPSRC                               *
*        27)  $TQE         SYS1.HASPSRC                               *
*        28)  $XIT         SYS1.HASPSRC                               *
*        29)  $XRT         SYS1.HASPSRC                               *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       2K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J005LOAD $MODULE ENVIRON=JES2,RMODE=ANY,RSECT=YES,                     +
               DEB,                                                    X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               RPL,                GENERATE HASP RPL DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $CAT,               GENERATE HASP CAT DSECT             X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $DCT,               GENERATE HASP DCT DSECT             X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP HCT DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $LMT,               GENERATE HASP LMT DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $MITETBL,           GENERATE HASP MITETBL DSECT         X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $PDDB,              GENERATE HASP PDDB DSECT            X
               $PIT,               GENERATE HASP PIT DSECT             X
               $PPPWORK,           GENERATE HASP PPPWORK DSECT         X
               $SJB,               GENERATE HASP SJB DSECT             X
               $TQE,               GENERATE HASP TQE DSECT             X
               $XIT,               GENERATE HASP XIT DSECT             X
               $XRT                GENERATE HASP XRT DSECT
         EJECT
J005LOAD RSECT ,                   RESTORE THE CSECT ENVIRONMENT
         TITLE 'JES2 $LOAD COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
E005LOAD $ENTRY BASE=(R12)
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        SEE IF THIS IS A $LOAD COMMAND                               *
*                                                                     *
***********************************************************************
         SPACE 1
         CLC   COMVERB(4),=C'LOAD'   SEE IF THIS IS THE $LOAD COMMAND
         BNE   EXIT0                 NO. LET JES HANDLE IT
         SPACE 1
         USING HCT,R11               ADDRESS HCT
         USING PCE,R13               ADDRESS PCE
         LA    R2,COMVERB
         LA    R0,MSGL               LOAD MESSAGE LENGTH
         $STORE (R0)                 STORE IT IN MESSAGE AREA
         SPACE 1
         MVC   PCEUSER0(8),5(R2)     MOVE MODULE NAME
         MVC   COMMAND(MSGL),MSGOK   MOVE 'OK' MESSAGE
         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME
         CLC   PCEUSER0(8),EDLOAD    THIS PGM?
         BE    EXITERR3              YES - ERROR
         SPACE 1
         USING LMT,R2                ADDRESS LMT
         LA    R2,$LMT1-(LMTCHAIN-LMT)   PREPARE FOR PVT LMT LOOP
EXITLOD1 ICM   R2,B'1111',LMTCHAIN  GET THE NEXT LMT ENTRY ADDRESS
         BZ    EXITERR1             NO MORE, EXIT THIS LOOP   SBG CSC03
         CLC   LMTMODNM,PCEUSER0     NAMES EQUAL?
         BE    EXITLOD2              YES - CONTINUE
         B     EXITLOD1              TRY NEXT ONE
EXITLOD2 EQU   *
         SPACE 1
         DELETE EPLOC=PCEUSER0,RELATED=('NEXT LOAD')
         SPACE 1
         LOAD  EPLOC=PCEUSER0,ERRET=EXITERR2,                          X
               RELATED=('PREVIOUS DELETE')
         SPACE 1
         LTR   R0,R0                 DID WE GET IT?
         BZ    EXITERR2              NO - ERROR
         ST    R0,LMTMITAD           YES - STORE IT
         B     EXITTBL               GO FILE THE XIT TABLE
         DROP  R2
********************************************************************
*                     EXITTBL                                      *
********************************************************************
EXITTBL  EQU   *
         L     R1,$XITADDR           GET XIT ADDRESS
         USING XIT,R1                XIT ENTRY ADDRESSABILITY
         USING MTE,R3                MITETBL ADDRESSABILITY
         USING XRT,R2                XRT ENTRY ADDRESSABILITY
         LA    R4,256                GET NO. OF XIT ENTRIES
         LR    R6,R0                 SAVE MIT ADDRESS
EXITTBL1 ICM   R2,15,XITXRTAD        GET NEXT XRT POINTER
         BZ    EXITTBL6              IF NO XRT, SKIP
         SPACE 1
         SLR   R5,R5                 CLEAR FOR INSERT
         IC    R5,XIT#RTNS           GET NO. OF RTNS IN XRT
EXITTBL2 L     R3,MITENTAD-MIT(,R6)  GET MITETBL ADDRESS
EXITTBL3 CLI   MTENAME,X'FF'         IS THIS THE END OF THE TABLE
         BE    EXITTBL5              YES - GO GET NEXT XRTE
         CLC   XRTRNAME,MTENAME      IS ROUTINE NAME IN MIT?
         BE    EXITTBL4              YES - UPDATE XRT
         LA    R3,MTELEN(,R3)        POINT TO NEXT MITETBL ENTRY
         B     EXITTBL3              NO - LOOP TO NEXT ENTRY
EXITTBL4 MVC   XRTRADDR,MTEADDR      SET ROUTINE ADDR IN XRT
         SPACE 1
EXITTBL5 LA    R2,XRTLNGTH(,R2)      BUMP TO NEXT XRT ENTRY
         BCT   R5,EXITTBL2            UNTIL ENTIRE XRT DONE
EXITTBL6 LA    R1,XITLNGTH(,R1)      BUMP TO NEXT XIT ENTRY
         BCT   R4,EXITTBL1            UNTIL ENTIRE XIT DONE
         B     EXIT16
********************************************************************
*                     EXITERR                                      *
********************************************************************
EXITERR1 EQU   *
         MVC   COMMAND(MSGL),MSGERR1 MOVE 'NOT LOADED' MSG
         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME
         B     EXIT16
EXITERR2 EQU   *
         MVC   COMMAND(MSGL),MSGERR2 MOVE 'NOT FOUND' MSG
         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME
         B     EXIT16
EXITERR3 EQU   *
         MVC   COMMAND(MSGL),MSGERR3 MOVE 'INVALID' MSG
         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME
         B     EXIT16
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
         SPACE 1
EXIT0    LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT16   LA    R15,16              LOAD RETURN CODE
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
********************************************************************
*                  DATA AREAS                                      *
********************************************************************
EDLOAD   DC    CL8'J005LOAD'
MSGOK    DC    C'XXXXXXXX RELOADED             '
MSGERR1  DC    C'XXXXXXXX IS NOT IN THE LMT    '
MSGERR2  DC    C'XXXXXXXX LOAD ERROR           '
MSGERR3  DC    C'XXXXXXXX INVALID              '
MSGL     EQU   *-MSGERR3
         LTORG
         EJECT
         $MODEND
         END
++ JCLIN .
//LKED     EXEC PGM=HEWL,PARM='RMODE=ANY,AMODE=31,XREF,LET,LIST,NCAL'
//SYSPRINT DD  SYSOUT=*
//AOSH3    DD  DISP=SHR,DSN=SYS1.AOSH3
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.LINKLIB(J005LOAD)
//SYSLIN   DD  *
  INCLUDE  AOSH3(J005LOAD)
/*
