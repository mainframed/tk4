//S213RC30 JOB
//*
//*  S213RC30 -
//*    ELIMINATES THOSE PESKY LITTLE S213-30 ABENDS THAT IBM SO
//*    GENEROUSLY PROVIDED IN DFP V2.  IT IS A DYNAMIC FRONT-END
//*    TO SVC 56 (ENQ) AND MODIFIES NO IBM CODE.
//*
//*    WHEN TWO USERS OPEN THE SAME PDS FOR OUTPUT, DFP V2 ABENDS
//*    THE SECOND USER S213-30.  THIS PROGRAM CHANGES ALL THAT.
//*    NOW INSTEAD OF S213-30 ABENDS, YOU GET AN OPERATOR WTOR:
//*      S213RC30: REPLY "CANCEL" TO CANCEL WAIT FOR (DATASET)
//*    AND THE SYSTEM WAITS FOR THE PDS TO BECOME AVAILABLE.
//*    IF YOU GET TIRED OF WAITING, YOU CAN ALWAYS REPLY "CANCEL",
//*    AND NORMAL PROCESSING (I.E. ABEND S213-30) TAKES OVER.
//*
//*    THIS PROGRAM SHOULD BE RUN SOON AFTER IPL.  YOU CAN EITHER
//*    EXECUTE IT FROM AN AUTHORIZED LIBRARY:
//*      //INSTALL EXEC PGM=S213RC30
//*      //STEPLIB  DD  DSN=YOUR.APF.LIBRARY,DISP=SHR
//*    OR YOU CAN NAME IT AS A SUBSYSTEM INITIALIZATION ROUTINE
//*    IN AN IEFSSNXX MEMBER OF YOUR CHOICE (IN SYS1.PARMLIB):
//*      XXXX,S213RC30    <=== "XXXX" IS ANY FOUR CHARACTERS
//*    IN WHICH CASE YOU SHOULD HAVE INSTALLED IT IN A LINKLIST
//*    DATASET, AND MADE APPROPRIATE CHANGES TO THE "SSN="
//*    PARAMETER IN YOUR IEASYS00 MEMBER.
//*
//*  INSTALLATION -
//*    MODIFY THE JOB CARD ABOVE AND THE PROCEDURE DEFAULTS
//*    BELOW TO SUIT YOUR TASTE.  HEAT AND EAT.
//*
//INSTALL PROC SOUT=$,               <=== SYSOUT CLASS
//             LIB='SYS1.LINKLIB',   <=== TARGET LOAD LIBRARY
//             M=S213RC30,           <=== TARGET LOAD MODULE NAME
//             ASMBLR=IEV90,         <=== NAME OF YOUR ASSEMBLER
//             ALIB='SYS1.LINKLIB',  <=== LOCATION OF YOUR ASSEMBLER
//             SYSTS=SYSDA,          <=== UNITNAME FOR WORK DATASETS
//             MODGEN='SYS1.MODGEN', <=== MODGEN DATASET NAME
//             SMPMTS='SYS1.SMPMTS', <=== SMPMTS DATASET NAME
//             MACLIB='SYS1.MACLIB', <=== MACLIB DATASET NAME
//             AMODGEN='SYS1.AMODGEN' <=== AMODGEN DATASET NAME
//*
//ASM     EXEC PGM=&ASMBLR,REGION=2048K,PARM='NORENT,OBJECT,NODECK'
//STEPLIB  DD  DSN=&ALIB,DISP=SHR
//SYSTERM  DD  SYSOUT=&SOUT
//SYSPRINT DD  SYSOUT=&SOUT
//SYSLIB   DD  DSN=&MODGEN,DISP=SHR
//         DD  DSN=&SMPMTS,DISP=SHR
//         DD  DSN=&MACLIB,DISP=SHR
//         DD  DSN=&AMODGEN,DISP=SHR
//SYSUT1   DD  UNIT=&SYSTS,SPACE=(TRK,(15,1))
//SYSLIN   DD  DSN=&&SYSLIN,UNIT=&SYSTS,DISP=(,PASS,DELETE),
//             SPACE=(TRK,(5,1,1),RLSE)
//*
//LKED    EXEC PGM=IEWL,COND=(0,NE),
//          PARM=('RENT',
//          'SIZE=(512K,200K),NCAL,LIST,LET,XREF,AC=1')
//SYSPRINT DD  SYSOUT=&SOUT
//SYSLMOD  DD  DSN=&LIB(&M),DISP=SHR
//SYSLIN   DD  DSN=&&SYSLIN,DISP=(OLD,DELETE)
//SYSUT1   DD  SPACE=(TRK,5),UNIT=&SYSTS
//        PEND
//*
//        EXEC INSTALL
//ASM.SYSIN DD *
S213RC30 TITLE '- INSTALL FRONT END TO SVC 56 (ENQ)'
         PRINT ON,GEN,DATA
S213RC30 CSECT
S213RC30 AMODE 31
S213RC30 RMODE ANY
*
*  WHEN TWO USERS CONCURRENTLY OPEN A PDS FOR OUTPUT, DFP OPEN
*  ABENDS THE SECOND USER S213-30.  WE CAN'T HAVE THIS.
*
*  IFG0194D ISSUES AN ENQUEUE (THROUGH IFG019RA AND IFG019RD)
*  JUST BEFORE IT READS THE F1 DSCB FROM THE DIRECT ACCESS VOLUME.
*  THE ENQUEUE IS UNCONDITIONAL (NO WAIT) AND HAS
*    QNAME = "SYSZDSCB"
*    RNAME = VOLSER ×× "A" ×× DSNAME
*
*  THIS PROGRAM INSTALLS A FRONT-END TO THE ENQUEUE SVC (SVC 56).
*  THE FRONT-END EXAMINES EACH ENQ PARAMETER LIST LOOKING FOR ONE
*  THAT APPEARS TO BE THE DSCB ENQUEUE.  WHEN IT FINDS ONE, IT
*  CHANGES THE BEHAVIOR OF THE ENQUEUE SO THAT THE SYSTEM WAITS
*  FOR THE RESOURCE TO BECOME AVAILABLE RATHER THAN ABENDING.
*
*  INSTALLATION -
*
*    YOU MAY INSTALL THE INTERCEPT BY RUNNING THIS PROGRAM FROM
*    AN AUTHORIZED LIBRARY.  FOR EXAMPLE:
*      //INSTALL EXEC PGM=S213RC30
*      //STEPLIB  DD  DSN=YOUR.APF.LIBRARY,DISP=SHR
*
*    IF THIS PROGRAM RESIDES IN A LINK LIST LIBRARY, YOU CAN
*    EXECUTE IT AT IPL TIME BY PROVIDING AN "IEFSSNXX" MEMBER
*    IN SYS1.PARMLIB:
*      XXXX,S213RC30   (WHERE "XXXX" IS FOUR CHARACTERS OF YOUR CHOICE)
*    REMEMBER TO CHANGE THE "SSN" PARAMETER IN IEASYS00 APPROPRIATELY.
*
*  MESSAGES -
*
*    S213RC30: SVCUPDTE RETURN CODE X'..', INTERCEPT WAS NOT INSTALLED
*      THE INTERCEPT COULD NOT BE INSTALLED DUE TO A BAD RETURN
*      CODE FROM THE SVCUPDTE MACRO.  NO HARM DONE.  YOUR SYSTEM
*      SHOULD BEHAVE NORMALLY.
*    S213RC30: REPLY "CANCEL" TO CANCEL WAIT FOR DDDDDDDD
*      A POTENTIAL ABEND S213-30 WAS DETECTED BY THE INTERCEPT,
*      AND THE INTERCEPT IS WAITING FOR THE DATASET TO BECOME
*      AVAILABLE.  IF THE OPERATOR REPLIES "CANCEL", THEN THE
*      INTERCEPT CANCELS ITS OWN SUSPENDED ENQUEUE AND RETURNS
*      TO OPEN WITH RETURN CODE 4, WHICH WILL RESULT IN A
*      SUBSEQUENT ABEND S213-30.
*
*  AUTHOR -
*    DAVID ANDREWS
*    A. DUDA AND SONS, INC.
*    1975 W. BROADWAY / P.O. BOX 257
*    OVIEDO, FL  32765
*    (407) 365-2153
*
         EJECT ,
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,S213RC30-&SYSDATE-&SYSTIME
         LR    R12,R15             R12 IS PROGRAM BASE
         USING S213RC30,R12             "
         GETMAIN RU,LV=AREALEN,LOC=BELOW  GETMAIN LOCAL WORKAREA
         ST    R1,8(,R13)          CHAIN SAVE AREAS
         ST    R13,4(,R1)               "
         LR    R13,R1                   "
         USING GETAREA,R13         R13 IS BASE FOR SA/WA
         SPACE ,
*
*  GET INTO NAUGHTY-NASTY MODE.  THIS CODE MUST BE AUTHORIZED.
*
         MODESET MODE=SUP,KEY=ZERO
         SPACE ,
*
*  GETMAIN A STORAGE AREA IN FIXED ECSA AND RELOCATE THE INTERCEPT.
*  (IT IS IN FIXED STORAGE BECAUSE ENQ IS A TYPE2 SVC, SUPPOSED TO
*  BE IN THE NUCLEUS.  I CAN'T IMAGINE HOW BEING PAGEABLE WOULD
*  HURT A TYPE2 SVC, BUT I DON'T PARTICULARLY CARE TO FIND OUT.
*
         GETMAIN RU,LV=INTRLEN,SP=227,LOC=(ANY,ANY)
         LA    R2,0(,R1)           RELOCATE INTERCEPT
         USING INTRCEPT,R2              "
         LA    R3,INTRLEN               "
         L     R4,=V(INTRCEPT)          "
         LR    R5,R3                    "
         MVCL  R2,R4                    "
         LA    R2,0(,R1)           RESTORE INTERCEPT ADDRESS
         O     R2,=A(X'80000000')  REMEMBER TO SET AMODE BIT
         SPACE ,
*
*  BUILD AN SVCUPDTE REMOTE PARAMETER LIST.
*
         MVC   SVCRPL(SVCRPLEN),SVCRPLMD  MOVE IN MODEL
         SPACE ,
*
*  PREPARE TO UPDATE THE SVC TABLE ENTRY FOR SVC 56 (ENQ).
*  ENQUEUE ON SYSZSVC(TABLE).
*
         ENQ   (SYSZSVC,TABLE,E,5,SYSTEM)
         SPACE ,
*
*  OBTAIN CURRENT ADDRESS OF SVC 56 CODE.
*
         L     R15,CVTPTR                   R15 -> CVT
         L     R15,CVTABEND-CVT(,R15)           -> SCVT
         L     R15,SCVTSVCT-SCVTSECT(,R15)      -> SVC TABLE
         LA    R15,56*SVCENTRL(,R15)            -> ENTRY FOR SVC 56
         MVC   INTRIBM-INTRCEPT(4,R2),SVCEP-SVCENTRY(R15) TELL INTRCEPT
         SPACE ,
*
*  INSERT THE INTERCEPT.
*
         SVCUPDTE EP=(2),MF=(E,SVCRPL)
         LR    R3,R15              SAVE SVCUPDTE RETURN CODE
         DEQ   (SYSZSVC,TABLE,5,SYSTEM)
         LTR   R15,R3              UPDATE GO OK?
         BZ    RETURN              YES, INTERCEPT INSTALLED, RETURN
         SPACE ,
*
*  SVCUPDTE FAILED, ISSUE A NASTYGRAM.
*
         MVC   WTOPARMS(S213ER1L),S213ER1    CONSTRUCT NASTYGRAM
         STC   R15,WTOPARMS+37               INSERT RETURN CODE
         UNPK  WTOPARMS+37(1),WTOPARMS+38(1) EXTERNALIZE IT
         NC    WTOPARMS+37(2),=X'0F0F'            "
         TR    WTOPARMS+37(2),=C'0123456789ABCDEF'
         SLR   R0,R0               CLEAR FOR QREG0
         WTO   MF=(E,WTOPARMS)     ISSUE WTO SVC
         SPACE ,
*
*  FREEMAIN INTERCEPT STORAGE.
*
         LR    R1,R2               FREE INTERCEPT STORAGE
         FREEMAIN RU,LV=INTRLEN,A=(1),SP=227
         SPACE ,
*
*  RETURN TO MASTER.
*
RETURN   MODESET KEY=NZERO
         LR    R1,R13              REMEMBER SA ADDR
         L     R13,4(,R13)         RESTORE R13
         FREEMAIN RU,LV=AREALEN,A=(1)  FREE WORKAREA
         RETURN (14,12),RC=0       BACK TO THE USSER
         SPACE ,
*
*  ERROR WTO TEXT
*
S213ER1  WTO   'S213RC30: SVCUPDTE RETURN CODE X''..'', INTERCEPT WAS N*
               OT INSTALLED',DESC=(1,3),MCSFLAG=(QREG0),MF=L
S213ER1L EQU   *-S213ER1
         SPACE ,
*
*  QNAME AND RNAME FOR SVC TABLE ENQUEUE.
*
SYSZSVC  DC    0D'0',CL8'SYSZSVC'
TABLE    DC    CL5'TABLE'
         SPACE ,
*
*  MODEL PARAMETER LIST FOR SVCUPDTE.
*
SVCRPLMD SVCUPDTE 56,REPLACE,TYPE=2,MF=L
SVCRPLEN EQU   *-SVCRPLMD
         SPACE ,
*
*  LITERALS.
*
         LTORG ,
         DROP  ,
         TITLE '- SVC 56 INTERCEPT'
*
*  THIS CODE IS RELOCATED INTO FIXED ECSA AND IS GIVEN CONTROL
*  WHENEVER SVC 56 - ENQ - IS ISSUED.  IT CONTAINS THE ADDRESS
*  OF THE REAL (I.E. DISPLACED) SVC CODE.
*
*  USUALLY THIS CODE SIMPLY BRANCH-ENTERS THE ORIGINAL SVC 56.
*  HOWEVER WHEN WE FIND AN ENQ PARAMETER LIST THAT REPRESENTS AN
*  OUTPUT PDS OPEN, WE DO SOME OTHER THINGS DOCUMENTED BELOW.
*
*  REGISTERS AT ENTRY ARE:
*
*      R0  =  CALLER'S DATA, DO NOT DISTURB
*      R1  -> ENQUEUE PARAMETER LIST, DO NOT DISTURB
*      R3  -> CVT
*      R4  -> TCB
*      R5  -> SVRB
*      R6  -> ENTRY POINT
*      R7  -> ASCB
*      R14 =  RETURN ADDRESS
*      R15 =  CALLER'S DATA, USED FOR R/C AT EXIT
*
*  ALL OTHER REGISTERS CONTAIN UNPREDICTABLE INFORMATION.
*  REGISTERS R2 THROUGH R14 ARE AUTOMAGICALLY RESTORED BY
*  THE SUPERVISOR UPON RETURN.
*
INTRCEPT CSECT
INTRCEPT RMODE ANY
         USING INTRCEPT,R6
         USING RBBASIC,R5
         B     INTRID              BRANCH AROUND ID
         DC    AL1(INTRIBM-*)      LENGTH OF ID
         DC    C'S213RC30 SVC 56 INTERCEPT &SYSDATE &SYSTIME'
INTRIBM  DC    A(0)                -> DISPLACED SVC 56 CODE
         SPACE ,
*
*  SAVE REGISTERS R2-R13 IN THE SVRB EXTENDED SAVE AREA.
*
INTRID   STM   R2,R13,RBEXSAVE
         SPACE ,
*
*  THE ENQ SVC CALLER MAY BE IN EITHER 24-BIT OR 31-BIT MODE.
*  IF IN 24-BIT MODE, THEN R1 CONTAINS A 24-BIT ADDRESS, AND
*  THE ENQUEUE PARAMETER LIST ALSO CONTAINS 24-BIT ADDRESSES.
*  DETERMINE THE MODE OF THE CALLER BY INSPECTING THE PREVIOUS
*  RB AND GENERATE A VALUE (IN R12) TO USE FOR MASKING THE HIGH-
*  ORDER BYTE OF 24-BIT ADDRESSES.
*
         SLR   R8,R8               POINT R8 TO PREVIOUS RB
         ICM   R8,B'0111',RBLINKB       "
         DROP  R5                       "
         USING RBBASIC,R8               "
         SLR   R12,R12             ASSUME 31-BIT MODE
         BCTR  R12,0               (SET R12=X'FFFFFFFF')  31 BITS
         TM    RBOPSW+4,X'80'      IS USER IN 31-BIT MODE?
         BO    INTRSCRN            YES, BRANCH
         DROP  R8                  DROP ADDRESSABILITY TO RB
         SRL   R12,8               (SET R12=X'00FFFFFF')  24 BITS
         SPACE ,
*
*  SCREEN ENQUEUE PARAMETER LIST FOR SOMETHING INTERESTING.
*
INTRSCRN LR    R9,R1               USE R9 AS PARMLIST POINTER
         NR    R9,R12              CORRECT FOR CALLER'S AMODE
         CLI   0(R9),X'C0'         END OF LIST / OLD OPTIONS
         BNE   INTRLOAD            FIRST FLAGS BYTE UNEXPECTED, EXIT
         TM    2(R9),X'80'         SHARED REQUEST?          1.......
         BO    INTRLOAD            YES, DISCARD
         TM    2(R9),X'40'         SCOPE=SYSTEM OR SYSTEMS? .1......
         BNO   INTRLOAD            NO, DISCARD
         TM    2(R9),X'03'         RET=USE?                 .....011
         BNO   INTRLOAD            NO, DISCARD
         TM    2(R9),X'04'         RET=USE?
         BO    INTRLOAD            NO, DISCARD
         L     R8,4(,R9)           POINT TO QNAME
         NR    R8,R12              CORRECT FOR CALLER'S AMODE
         CLC   =CL8'SYSZDSCB',0(R8) IS IT SYSZDSCB?
         BNE   INTRLOAD            NO, EXIT
         L     R11,8(,R9)          POINT TO RNAME
         NR    R11,R12             CORRECT FOR CALLER'S AMODE
         LA    R10,1(,R9)          POINT TO RNAME LENGTH
         CLI   0(R10),0            RNAME LENGTH REMOTED?
         BNE   INTRNAME            NO, GO CHECK RNAME
         LR    R10,R11             POINT TO REMOTED RNAME LENGTH
         LA    R11,1(,R11)         ADVANCE RNAME POINTER PAST LENGTH
INTRNAME CLI   0(R10),8            RNAME LESS THAN 8 BYTES?
         BL    INTRLOAD            YES, DISCARD
         CLI   6(R11),C'A'         IS IT OUTPUT OPEN FOR PDS?
         BE    INTRDOIT            YES, PROCESS
         SPACE ,
*
*  SCREENING FAILED FOR THIS ENQUEUE, JUST BRANCH-ENTER THE
*  ORIGINAL IBM CODE.
*
INTRLOAD L     R6,INTRIBM          POINT TO ORIGINAL CODE
         BSM   0,R6                EXIT TO IT
         TITLE '- ENQUEUE INTERCEPT CODE'
*
*  WE HAVE IDENTIFIED AN ENQUEUE TO PROCESS.  OPEN ISSUES A SPECIAL
*  ENQUEUE WHEN YOU OPEN A NON-VIO PDS FOR OUTPUT.  WHEN THE ENQUEUE
*  FAILS, OPEN ABENDS YOU WITH AN S213-30.
*
*  RATHER THAN ABENDING THE USER, LET'S JUST ISSUE A MESSAGE TO THE
*  CONSOLE OPERATOR, AND WAIT FOR THE RESOURCE TO BECOME AVAILABLE.
*
*    1)  MODIFY THE ENQUEUE SO THAT IT SPECIFIES ECB= (IT CURRENTLY
*        SPECIFIES "RET=USE", MEANING NO WAIT OCCURS).  REISSUE THE
*        SVC.
*    2)  IF CONTROL WAS GRANTED IN STEP #1, SKIP TO STEP #7.
*    3)  ISSUE A WTOR TO THE MVS CONSOLE OPERATOR.
*    4)  WAIT ON CONTROL OF THE DSCB RESOURCE, OR THE WTOR ECB.
*    5)  IF THE ENQUEUE ECB WAS POSTED, DOM THE WTOR AND
*        SKIP TO STEP #7.
*    6)  CHECK THE OPERATOR RESPONSE:
*        IF "CANCEL", THEN
*          CANCEL THE SUSPENDED ENQUEUE
*          RETURN TO CALLER WITH RC=4, INDICATING FAILURE.
*            OPEN IN TURN WILL ABEND THE USER WITH S213-30.
*        ELSE RETURN TO STEP #3.
*    7)  SET A NORMAL RETURN CODE IN THE ORIGINAL ENQ PARAMETER
*        LIST AND RETURN TO OPEN.
*
*  REGISTER CONTENTS NOW ARE -
*    R0-R7   SAME AS AT ENTRY
*    R8      POINTS TO QNAME
*    R9      POINTS TO PARAMETER LIST
*    R10     POINTS TO RNAME LENGTH
*    R11     POINTS TO RNAME
*    R12     MASK FOR AMODE CONVERSION
*    R13-R15 SAME AS AT ENTRY
*
         SPACE ,
*
*  GETMAIN A WORKAREA.
*
INTRDOIT LR    R4,R8               R4 IS PERMANENT BASE FOR QNAME
         LR    R13,R5              TEMPORARILY SAVE SVRB POINTER
         LR    R5,R11              R5 IS PERMANENT BASE FOR RNAME
         SLR   R8,R8               R8 IS RNAME LENGTH
         IC    R8,0(,R10)               "
         LR    R10,R0              REMEMBER REGS 0, 1, 14
         LR    R11,R1                   "
         LR    R12,R14                  "  (DON'T NEED MASK ANYMORE)
         GETMAIN RU,LV=IWRKLEN,LOC=ANY  ACQUIRE A WORKAREA
         USING IWRKAREA,R1              "
         ST    R13,IWR5            SAVE INITIAL R5 CONTENT
         LR    R13,R1              R13 IS W/A BASE
         DROP  R1                       "
         USING IWRKAREA,R13             "
         STM   R10,R12,IWR0R1RE    SAVE ORIGINAL R0, R1, R14 CONTENTS
         SPACE ,
*
*  INITIALIZE NEW ENQ/DEQ REMOTE PARAMETER LISTS.
*
         MVC   IWENQLSB(IWENQLSL),INTRETYL  INITIALIZE ENQ/DEQ LISTS
         MVC   IWDEQLSB(IWDEQLSL),INTRDTYL       "
         LA    R10,IWENQECB        GET ENQ ECB ADDRESS
         SPACE ,
*
*  ENQUEUE ON THE DSCB RESOURCE.
*
INTRA1   XC    IWENQECB,IWENQECB
         ENQ   ((R4),(R5),E,(R8),SYSTEM),ECB=(R10),MF=(E,IWENQLST)
         SPACE ,
INTRA2   LTR   R15,R15             DID WE RECEIVE CONTROL?
         BZ    INTRA7              YES, CONTINUE
         CLI   IWENQLST+3,4        WAITING FOR CONTROL?
         BE    INTRA3              YES, GO ISSUE MESSAGE TO OPERATOR
         CLI   IWENQLST+3,8        ALREADY HAVE CONTROL (???!!!)
         BNE   INTRA2B             NO, SOMETHING IS WRONG HERE
         MVI   3(R9),8             YES, INDICATE ALREADY HAVE IT
         LA    R11,3(,R9)          POINT TO R/C IN PARAMETER LIST
         B     INTRMRG             RETURN TO CALLER
         SPACE ,
*
*  BAD RETURN CODE FROM ENQUEUE.  TAKE AN SVC DUMP AND BRANCH-ENTER
*  THE ORIGINAL IBM CODE.
*
INTRA2B  MVC   IWSDUMP(SVCDLSTL),SVCDLST  MOVE IN SDUMP PARMS
         STM   R0,R15,IWREGS+X'14' STORE REGS FOR SVCDUMP
         LA    R0,X'54'            LENGTH OF PSWREGS AREA
         STH   R0,IWREGS               "
         MVI   IWREGS+2,X'20'      REGISTERS ONLY
         XC    IWREGS+3(17),IWREGS+3   "
         SDUMP HDR='S213RC30: UNANTICIPATED RETURN CODE FROM ENQ MACRO'*
               ,PSWREGS=IWREGS,MF=(E,IWSDUMP)
         LM    R8,R10,IWR0R1RE     DIG OUT CALLER'S R0, R1, R14
         L     R5,IWR5             RESTORE CALLER'S R5
         USING RBBASIC,R5          ADDRESS SVRB
         LR    R1,R13              FREE WORKAREA
         FREEMAIN RU,LV=IWRKLEN,A=(1)   "
         LR    R0,R8               RESTORE R0
         LR    R1,R9               RESTORE R1
         LR    R14,R10             RESTORE R14
         LM    R2,R13,RBEXSAVE     RESTORE CALLER'S R2-R13
         DROP  R5
         L     R6,INTRIBM          POINT TO ORIGINAL CODE
         BSM   0,R6                EXIT TO IT
         SPACE ,
SVCDLST  SDUMP PLISTVER=2,MF=L
SVCDLSTL EQU   *-SVCDLST
         SPACE ,
*
*  ISSUE A WTOR TO THE MVS CONSOLE OPERATOR
*    S213RC30: REPLY "CANCEL" TO CANCEL WAIT FOR DDDDDDDD
*
INTRA3   MVC   IWTOPARM(INTRERRL),INTRERR  MESSAGE TO OPERATOR
         SH    R8,=H'8'            PLUG IN THE DATASET NAME
         MVI   IWTOPARM+56,C' '         "
         MVC   IWTOPARM+57(43),IWTOPARM+56
         EX    R8,INTRMVC               "
*INTRMVC MVC   IWTOPARM+56(*-*),7(R5)   "
         LA    R8,8(,R8)           ADJUST RNAME LENGTH BACK
         MVC   IWTORPLY,=CL8' '    INITIALIZE TO SPACES
         XC    IWTORECB,IWTORECB   CLEAR ECB
         WTOR  ,IWTORPLY,L'IWTORPLY,IWTORECB,MF=(E,IWTOPARM)
         SPACE ,
*
*  WAIT FOR EITHER THE WTOR OR THE RESOURCE TO BE POSTED.
*
INTRA4   ST    R1,IWDOMID          SAVE WTO-ID FOR DOM
         LA    R1,IWENQECB         BUILD ECB LIST
         ST    R1,IWAITLST              "
         LA    R1,IWTORECB              "
         ST    R1,IWAITLST+4            "
         OI    IWAITLST+4,X'80'    END OF LIST
         WAIT  ECBLIST=IWAITLST    WAIT TO RECEIVE CONTROL
         SPACE ,
*
*  DELETE THE WTOR AND DETERMINE WHICH ECB WAS POSTED.
*
INTRA5   OI    IWDOMID,X'80'       FLAG END OF WTO-ID LIST
         DOM   MSGLIST=IWDOMID,REPLY=YES
         TM    IWENQECB,X'40'      WAS ENQ ECB POSTED?
         BO    INTRA7              YES, WE FINALLY GOT CONTROL
         SPACE ,
*
*  CHECK FOR "CANCEL"
*
INTRA6   OC    IWTORPLY,=CL8' '    UPPERCASE REPLY
         CLC   =CL8'CANCEL',IWTORPLY DID OPERATOR CANCEL
         BNE   INTRA3              NO, REISSUE MESSAGE
         SPACE ,
*
*  CANCEL REQUESTED, DEQUEUE THE SUSPENDED ENQUEUE.
*
         DEQ   ((R4),(R5),(R8),SYSTEM),MF=(E,IWDEQLST),RET=HAVE
         SPACE ,
*
*  INDICATE ERROR AND RETURN TO CALLER.
*
         MVI   3(R9),4             INDICATE FAILURE IN ENQ PARMLIST
         LA    R11,3(,R9)          POINT TO FAILURE BYTE IN SAME
         B     INTRMRG             RETURN TO CALLER
         SPACE ,
*
*  EXIT TO CALLER, ENQUEUE WAS SUCCESSFUL.
*
INTRA7   MVI   3(R9),0             SUCCESSFUL ENQ RETURN CODE
         SLR   R11,R11             ZERO R15 MEANS SUCCESS ALSO
INTRMRG  LM    R8,R10,IWR0R1RE     DIG OUT CALLER'S R0, R1, R14
         LR    R1,R13              FREEMAIN WORKAREA
         FREEMAIN RU,LV=IWRKLEN,A=(1)   "
         LR    R0,R8               RESTORE R0
         LR    R1,R9               RESTORE R1
         LR    R14,R10             RESTORE R14
         LR    R15,R11             SET ENQ RETURN CODE
         BR    R14                 RETURN
         SPACE ,
INTRMVC  MVC   IWTOPARM+56(*-*),7(R5)   OBJECT OF EX
         SPACE ,
INTRERR  WTOR  'S213RC30: REPLY "CANCEL" TO CANCEL WAIT FOR .........1.*
               ........2.........3.........4....',,,MF=L
INTRERRL EQU   *-INTRERR
         EJECT ,
*
*  MODEL ENQ/DEQ PARAMETER LISTS
*
INTRETYL DS    0F
XXX      ENQ   (0,0,E,44,SYSTEM),ECB=0,MF=L
         DS    0F
IWENQLSL EQU   *-INTRETYL
         SPACE ,
INTRDTYL DS    0F
YYY      DEQ   (0,0,44,SYSTEM),MF=L
IWDEQLSL EQU   *-INTRDTYL
         SPACE ,
*
*  LITERALS
*
         LTORG ,
         SPACE 3
INTRLEN  EQU   *-INTRCEPT
         DROP  ,
         TITLE '- DSECTS'
GETAREA  DSECT
         DS    18F
WTOPARMS DS    0D,CL192            ROOM FOR WTO PARAMETER LIST
SVCRPL   SVCUPDTE 56,REPLACE,TYPE=2,MF=L
AREALEN  EQU   *-GETAREA
         SPACE 3
IWRKAREA DSECT ,                   INTERCEPT WORK AREA
         DS    18F                 SAVE AREA
IWR0R1RE DS    3F                  SAVE CALLER'S R0, R1, R14 HERE
IWR5     DS    F                   SAVE CALLER'S R5 HERE
IWENQLSB DS    XL(IWENQLSL)
IWENQLST EQU   IWENQLSB+XXX-INTRETYL
         DS    0F
IWDEQLSB DS    XL(IWDEQLSL)
         DS    0F
IWDEQLST EQU   IWDEQLSB+YYY-INTRDTYL
IWENQECB DS    F
IWTORECB DS    F
IWAITLST DS    2F
IWDOMID  DS    F
         SPACE ,
IWTOPARM DS    0D,CL192            ROOM FOR WTO PARAMETER LIST
IWTORPLY DS    D                   ROOM FOR REPLY
IWSDUMP  SDUMP PLISTVER=2,MF=L
IWREGS   DS    0D,CL84
IWRKLEN  EQU   *-IWRKAREA
         SPACE 3
SVCENTRY DSECT ,
SVCEP    DS    A                   SVC ENTRY POINT ADDRESS
SVCATTR1 DS    H                   ATTRIBUTES
SVCLOCKS DS    H                   LOCK ATTRIBUTES
SVCENTRL EQU   *-SVCENTRY          LENGTH OF SVC ENTRY
         SPACE ,
         CVT   DSECT=YES           SYSTEM CVT
         IHASCVT ,                 SECONDARY CVT, USED TO FIND SVCTABLE
         IHARB ,                   RB USED TO DETERMINE AMODE OF CALLER
         END   S213RC30
/*
