//ZAPDSCB JOB
//*
//*  ZAPDSCB -
//*    IS A BATCH UTILITY USED TO MODIFY A VARIETY OF DATASET
//*    ATTRIBUTES.  SEE THE COMMENTS IN THE CODE BELOW FOR
//*    DOCUMENTATION.
//*
//*  INSTALLATION -
//*    MODIFY THE JOB CARD ABOVE AND THE PROCEDURE DEFAULTS
//*    BELOW TO SUIT YOUR TASTE.  NOTE THAT THE TARGET LIBRARY
//*    MUST BE AUTHORIZED.
//*
//INSTALL PROC SOUT=$,               <=== SYSOUT CLASS
//             LIB='SYS1.LINKLIB',   <=== TARGET LOAD LIBRARY
//             MBR=ZAPDSCB,          <=== LOAD MODULE NAME
//             ASMBLR=IEV90,         <=== NAME OF YOUR ASSEMBLER
//             ALIB='SYS1.LINKLIB',  <=== LOCATION OF YOUR ASSEMBLER
//             SYSTS=SYSDA,          <=== UNITNAME FOR WORK DATASETS
//             SMPMTS='SYS1.SMPMTS', <=== SMPMTS MACRO LIBRARY
//             MACLIB='SYS1.MACLIB', <=== MACLIB MACRO LIBRARY
//             AMODGEN='SYS1.AMODGEN', <=== AMODGEN MACRO LIBRARY
//             MODGEN='SYS1.MODGEN'  <=== MODGEN MACRO LIBRARY
//*                                  USE 'SYS1.MODGEN' FOR MVS-XA
//*                                  USE 'SYS1.SMPMTS' FOR MVS-370
//*
//ASM     EXEC PGM=&ASMBLR,REGION=2048K,PARM='NOOBJECT,DECK'
//STEPLIB  DD  DSN=&ALIB,DISP=SHR
//SYSTERM  DD  SYSOUT=&SOUT
//SYSPRINT DD  SYSOUT=&SOUT
//SYSLIB   DD  DSN=&MODGEN,DISP=SHR
//         DD  DSN=&SMPMTS,DISP=SHR
//         DD  DSN=&MACLIB,DISP=SHR
//         DD  DSN=&AMODGEN,DISP=SHR
//SYSUT1   DD  UNIT=&SYSTS,SPACE=(TRK,(15,1))
//SYSUT2   DD  UNIT=&SYSTS,SPACE=(TRK,(15,1))
//SYSUT3   DD  UNIT=&SYSTS,SPACE=(TRK,(15,1))
//SYSPUNCH DD  DSN=&&SYSLIN,UNIT=&SYSTS,DISP=(,PASS,DELETE),
//             SPACE=(TRK,(5,1),RLSE)
//*
//LKED    EXEC PGM=HEWL,COND=(0,NE),PARM='LIST,MAP,XREF,AC=1'
//SYSPRINT DD  SYSOUT=&SOUT
//SYSUT1   DD  UNIT=&SYSTS,SPACE=(TRK,5)
//SYSLMOD  DD  DSN=&LIB(&MBR),DISP=SHR
//SYSLIN   DD  DSN=&&SYSLIN,DISP=(OLD,DELETE)
//        PEND
//*
//        EXEC INSTALL
//ASM.SYSIN DD *
         TITLE 'DOCUMENTATION'
         SPACE
*  FUNCTION -
*             THIS PROGRAM UPDATES DSCB'S WITH SPECIFIED VALUES ON
*             THE DD CARD FOR THE DATASET(S). THE DSCB IS UPDATED
*             WITHOUT REGARD TO THE ACTUAL DATASET FORMAT, THUS
*             CARE MUST BE TAKEN USING THIS PROGRAM - IT IS ABOUT
*             AS DANGEROUS AS SUPERZAP.
*
*  USE -
*             THIS PROGRAM REQUIRES APF AUTHORIZATION.
*             THE PROGRAM UPDATES THE DSCB'S FOR ANY DATASETS ALLOCATED
*             WITH A DDNAME BEGINNING WITH "ZAP". THE PARAMETERS THAT
*             CAN BE CHANGED ARE:
*                 EXPIRATION DATE (CAN BE SET TO ZERO VIA "RETPD=0"),
*                 ASM2 USE COUNT  (CAN BE SET TO ZERO VIA "FCB=ZUSE"),
*                 SEC SPACE AMT   (SET VIA "SPACE=(TRK,(0,##))"),
*                 DSORG,RECFM,BLKSIZE,LRECL,KEYLEN,RKP,OPTCD AND
*                 PASSWORD PROTECTION. (CAN BE REMOVED VIA "FCB=NOPW"
*                                       OR SET VIA LABEL=(,,PASSWORD)
*                                       AND LABEL=(,,NOPWREAD)      )
*             THIS PROGRAM USES NO FILES FOR CONTROL OR MESSAGES, ALL
*             DIAGNOSTICS PRODUCED ARE ROUTED TO THE SYSTEM CONSOLE.
*
*             SAMPLE JCL FOR USING PROGRAM -
*                 //ZAPDSCB EXEC PGM=ZAPDSCB
*                 //SNAP     DD  SYSOUT=A     SNAP  DUMP WHEN I/O ERROR
*                 //SYSUDUMP DD  SYSOUT=A     ABEND DUMP OTHER ERRORS
*                 //ZAP1     DD  DSN=SYS1.LINKLIB,LABEL=EXPDT=99350
*                 //ZAP2     DD  DSN=SYS1.CDS,LABEL=RETPD=0
*                    ... ETC
*
*  AUTHOR -
*             DAVE PHILLIPS
*               A. DUDA AND SONS, INC.
*               P.O. BOX 257
*               OVIEDO, FL  32765
*
         TITLE 'EQUATES'
         PRINT OFF
         MACRO
&NAME   SYNADAF &ACSMETH=,&PARM1=,&PARM2=
         LCLC  &CB1
         AIF   (T'&ACSMETH EQ 'O').AMERR
         AIF   ('&ACSMETH' EQ '(0)').AMERR
&CB1     SETC  '&ACSMETH'(1,1)
         AIF   ('&CB1' EQ '(').AMERR
.*  &CB1     SETC  '(0)'                     FIX A STUPID MACRO
         AIF   ('&ACSMETH' EQ 'EXCP').AMEXCP
&CB1     SETC  '(1)'
         AIF   ('&ACSMETH' EQ 'BPAM').AMCOM
&CB1     SETC  '(2)'
         AIF   ('&ACSMETH' EQ 'BSAM').AMCOM
&CB1     SETC  '(3)'
         AIF   ('&ACSMETH' EQ 'QSAM').AMCOM
&CB1     SETC  '(4)'
         AIF   ('&ACSMETH' EQ 'BDAM').AMCOM
&CB1     SETC  '(5)'
         AIF   ('&ACSMETH' EQ 'BISAM').AMCOM
&CB1     SETC  '(6)'
         AIF   ('&ACSMETH' EQ 'QISAM').AMCOM
&CB1     SETC  '(7)'
         AIF   ('&ACSMETH' EQ 'BTAM').AMCOM
&CB1     SETC  '(8)'
         AIF   ('&ACSMETH' EQ 'QTAM').AMCOM
&CB1     SETC  '(9)'
         AIF   ('&ACSMETH' EQ 'GAM').AMCOM
.AMERR   MNOTE 8,' ERROR ** ACCESS METHOD NOT SPEC. OR ILLEGAL '  15138
         MEXIT                                                    15138
.AMEXCP  ANOP
&NAME    LA    15,0(0,15)     SET ACCESS METHOD IN REG. 15
         AGO     .PARMA
.AMCOM   ANOP                                                     15138
&NAME    LA    15,0(0,15)              ZERO HIGH ORDER BYTE       15138
         CNOP  0,4                                                15138
         O     15,*+8         SET ACCESS METHOD IN REG. 15
         BC    15,*+8         BRANCH AROUND LIST
         DC    AL1&CB1        ACCESS METHOD CODE
         DC    AL3(0)
.PARMA   AIF   (T'&PARM1 EQ 'O').PARMB
         AIF   ('&PARM1' EQ '(1)').PARMB
&CB1     SETC  '&PARM1'(1,1)
         AIF   (NOT ('&CB1' EQ '(')).SYMA
         LR    1,&PARM1(1)    GET ADDRESS IN REG. 1
         AGO   .PARMB
.SYMA    LA    1,&PARM1       GET ADDRESS IN REG. 1
.PARMB   AIF   (T'&PARM2 EQ 'O').COM
         AIF   ('&PARM2' EQ '(0)').COM
&CB1     SETC  '&PARM2'(1,1)
         AIF   (NOT ('&CB1' EQ '(')).SYMB
         LR    0,&PARM2(1)    SET PARAMETER IN REG. 0
         AGO   .COM
.SYMB    LA    0,&PARM2(1)    GET PARAMETER IN REG. 0
.COM     SVC   68             ISSUE SVC
         MEND
         MACRO
&LABEL   SNAPSHOT &SWITCH,&DCB=SNAPDCB,&TCB=,&ID=,&SDATA=(CB),         C
               &PDATA=(PSW,REGS,SA),&STORAGE=,&LIST=,                  C
               &SNAPDCB=NO,&DDNAME=SNAPSHOT
.*
         GBLB  &TRACE             GLOBAL TRACE CONTROL
         LCLC  &TAG
.*
&TAG     SETC  '&LABEL.        '(1,8)     SET UP FOR MNOTES
.*
         AIF   ('&SWITCH' EQ '').ENTRY
         AIF   ('&SWITCH' EQ 'ON').SETON
         AIF   ('&SWITCH' NE 'OFF').CHKOC
&TRACE   SETB  0                  TURN TRACE OFF
         MEXIT
.SETON   ANOP
&TRACE   SETB  1                  TURN TRACE ON
         MEXIT
.*
.CHKOC   AIF   (NOT &TRACE).LABEL
         AIF   ('&SWITCH' EQ 'DCB').DODCB
         AIF   ('&SWITCH' NE 'OPEN').CHKCLS
.*
         MNOTE '&TAG OPEN  (&DCB,(OUTPUT))'
&LABEL   OPEN  (&DCB,(OUTPUT))
         AIF   ('&SNAPDCB' EQ 'YES').DCBDONE
         B     SNAP&SYSNDX
         SPACE
.DODCB   ANOP
         MNOTE '&DCB  DCB DSORG=PS,RECFM=VBA,MACRF=(W),BLKSIZE=882,'
         MNOTE '             LRECL=125,DDNAME=&DDNAME'
         PUSH  PRINT
         PRINT NOGEN
&DCB     DCB   DSORG=PS,RECFM=VBA,MACRF=(W),BLKSIZE=882,LRECL=125,     C
               DDNAME=&DDNAME
         POP   PRINT
         AIF   ('&SWITCH' EQ 'DCB').DCBDONE
SNAP&SYSNDX DS  0H
.DCBDONE ANOP
         SPACE
         MEXIT
.*
.CHKCLS  AIF ('&SWITCH' NE 'CLOSE').BADSW
.*
         MNOTE '&TAG CLOSE (&DCB)'
&LABEL   CLOSE (&DCB)
         SPACE
         MEXIT
.*
.*
.ENTRY   AIF   (&TRACE).TRACE
.LABEL   AIF   ('&LABEL' EQ '').STOP
.*  TRACE NOT ON SO JUST SET A TAG
&LABEL   EQU   *
         MEXIT
.*
.TRACE   ANOP
.*
         MNOTE '&TAG SNAP  DCB=&DCB,TCB=&TCB,ID=&ID,STORAGE=&STORAGE,'
         MNOTE '               PDATA=&PDATA,SDATA=&SDATA,LIST=&LIST'
&LABEL   SNAP  DCB=&DCB,TCB=&TCB,ID=&ID,STORAGE=&STORAGE,              *
               SDATA=&SDATA,PDATA=&PDATA,LIST=&LIST
         SPACE
         MEXIT
.*
.BADSW   MNOTE 4,'INVALID OPTION, ''&SWITCH'''
.STOP    MEND
         SPACE 2
         PRINT ON
         SPACE 3
*        REGISTER EQUATES
         SPACE
R0       EQU   0                  WORK REGISTER
R1       EQU   1                  WORK REGISTER
R2       EQU   2                  WORK REGISTER
R3       EQU   3                  WORK REGISTER
R4       EQU   4                  WORK REGISTER
R5       EQU   5                  WORK REGISTER
R6       EQU   6                  WORK REGISTER
R7       EQU   7                  WORK REGISTER
R8       EQU   8                  WORK REGISTER
R9       EQU   9                  WORK REGISTER
TIOTLEN  EQU   10                 CONTAINS LENGTH OF TIOT ENTRY
@TIOT    EQU   11                 BASE REGISTER FOR TIOT ENTRIES
BASEREG  EQU   12                 BASE REGISTER FOR ZAPDSCB CSECT
R13      EQU   13                 SAVE AREA POINTER
R14      EQU   14                 LINK REGISTER
R15      EQU   15                 RETURN CODE REGISTER
         TITLE 'HOUSEKEEPING AND POINTER SETUP'
ZAPDSCB  CSECT
         SAVE  (14,12),,&SYSDATE-&SYSTIME-ZAPDSCB
         BALR  BASEREG,0
         USING *,BASEREG
         SPACE
         LA    R1,SAVEAREA
         ST    R13,4(,R1)         NEW TO OLD
         ST    R1,8(,R13)         OLD TO NEW
         LR    R13,R1             -> NEW SAVE AREA
         SPACE 2
         L     R1,16              -> CVT
         L     R1,0(,R1)          -> TCB WORDS
         L     R1,4(,R1)          -> TCB
         L     R1,12(,R1)         -> TIOT
         SPACE
         USING TIOT,R1
         LA    @TIOT,TIOENTRY     -> FIRST DD ENTRY
         DROP  R1
         USING TIOENTRY,@TIOT
         SPACE
         SR    TIOTLEN,TIOTLEN    CLEAR TIOT LENGTH REGISTER
         TITLE 'LOOP THRU TIOT LOOKING FOR "ZAP" DD CARDS'
DDLOOP   AR    @TIOT,TIOTLEN      -> NEXT DD ENTRY
         ICM   TIOTLEN,1,TIOELNGH    LENGTH OF DD ENTRY
         BZ    ENDTIOT            YES - END OF TIOT
         SPACE
         CLC   =C'ZAP',TIOEDDNM   DDNAME START WITH ZAP ???
         BNE   DDLOOP             NO
         TM    TIOELINK,X'FF'     SYSIN/SYSOUT/SUBSYSTEM DS ???
         BNZ   DDLOOP             YES, IGNORE
         TM    TIOESTTA,TIOSJBLB  A JOBLIB ???
         BO    DDLOOP             YES - REJECT
         SPACE
         L     R1,TIOESTTB        -> UCB
         USING UCB,R1
         SPACE
         TM    UCBTBYT3,UCB3DACC  A DIRECT ACCESS DEVICE ???
         BNO   DDLOOP             NO - REJECT
         DROP  R1
         SPACE 2
* TIOT ENTRY HAS BEEN SELECTED FOR A POSSIBLE "ZAP" DD
         SPACE
         MVC   DCB+40(8),TIOEDDNM GET DDNAME OF DATASET
         SPACE
         RDJFCB (DCB)             GET JOB FILE CONTROL BLOCK
         LTR   R15,R15            GET JFCB OK ?
         BNZ   BADJFCB            NOPE
         SPACE
         TM    JFCBTSDM,JFCSDS    A SYSIN/SYSOUT DATA SET ?
         BO    INVALIDD           YES - REJECT
         SPACE
         TM    JFCBLTYP,JFCSL     STANDARD LABEL ??
         BNO   INVALIDD           NO - REJECT
         SPACE
         TM    JFCBIND1,JFCRLSE+JFCADDED+JFCGDG+JFCPDS    CHECK FOR    *
                           RLSE SPECIFIED,OR A GDG,OR A MEMBER OF A PDS
         BNZ   INVALIDD           NOT ALLOWED
         SPACE
         TM    JFCBIND2,JFCNEW    DATA-SET NEW ??
         BO    INVALIDD           YES - REJECT
         TM    JFCBIND2,JFCMOD    DATA-SET ALLOCATED MOD ?
         BO    INVALIDD           YES - REJECT
         SPACE
         TM    JFCBIND2,JFCTEMP   TEMPORARY DATA SET ???
         BO    INVALIDD           YES - REJECT
         SPACE
         TM    JFCDSRG2,JFCORGAM  A VSAM DS ??
         BO    INVALIDD           YES - REJECT
         TITLE 'UPDATE THE DSCB'
         SPACE 2
* "ZAP" DD CARD HAS PASSED TESTS, SO SAVE INFO USER WANTS CHANGED
         SPACE
         MVC   DSNAME,JFCBDSNM    DSNAME
         MVC   VOLSER,JFCBVOLS    VOLSER
         MVC   CREDT,JFCBCRDT     CREATION DATE  (ALWAYS CURRENT DATE)
         MVC   EXPDT,JFCBXPDT     EXPIRATION DATE
         MVC   KEYLEN,JFCKEYLE    KEY LENGTH
         MVC   DSORG,JFCDSRG1     DSORG
         MVC   RECFM,JFCRECFM     RECFM
         MVC   BLKSIZE,JFCBLKSI   BLKSIZE
         MVC   LRECL,JFCLRECL     LRECL
         MVC   RKP,JFCRKP         RKP
         MVC   OPTCD,JFCOPTCD     OPTCD
         MVC   SPECOPER,JFCFCBID  SPECIAL OPER WORD   (REALLY FCB=)
         MVC   PSWDBITS,JFCBIND2  FLAGS FOR PSWD PROT AND THINGS
         NI    PSWDBITS,JFCBRWPW  LEAVE ONLY PSWD BITS
         MVC   SECQTY,JFCBSQTY    GET SECONDARY SPACE QUANITY
         MVC   SECBITS,JFCBCTRI   FLAGS FOR SPACE ALLOC
         NI    SECBITS,JFCBSPAC   LEAVE ONLY SPACE BITS
         SPACE
         OC    DSCBINFO,DSCBINFO  ANY CHANGES SPECIFIED ???
         BZ    NOCHANGE           NO - GET NEXT DD CARD
         SPACE
* GET THE DSCB FROM THE VTOC
         SPACE
         OBTAIN ADSCB             GET THE DSCB FROM VTOC
         LTR    R15,R15           OK ?
         BNZ    BADOBTAN
         SPACE
* INITIALIZE A JFCB FOR READING THE VTOC
         SPACE
         XC    JFCB(JFCBLGTH),JFCB                 CLEAN SLATE
         MVI   JFCBDSNM,X'04'                      DSNAME
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM   OF VTOC
         MVI   JFCBTSDM,JFCNWRIT                   DON'T WRT JFCB BACK
         MVI   JFCKEYLE,44                         KEYLEN = 44
         MVC   JFCBLKSI,=AL2(96)                   BLKSIZE = 96
         MVC   JFCLRECL,=AL2(96)                   LRECL = 96
         MVI   JFCBNVOL,1                          NVOL = 1
         MVC   JFCBVOLS(6),VOLSER                  VOLSER
         MVI   JFCBVLCT,1                          NVOL = 1
         SPACE
* OPEN THE VTOC FOR UPDATE SO WE CAN WRITE THE DSCB BACK
         SPACE
         OPEN  (DCB,(UPDAT)),TYPE=J
         LTR   R15,R15            OPEN SUCCESSFULL ?
         BNZ   BADOPEN            NO
         EJECT
* UPDATE THE DSCB FROM INFO SAVED FROM JFCB
         SPACE
         MVC   DS1DSNAM,DSNAME    FILL IN DSNAME
         SPACE
         OC    EXPDT,EXPDT        ANY EXPIRATION DATE ??
         BZ    NOEXPDT            NO
         MVC   DS1EXPDT,EXPDT     YES
         CLC   CREDT,EXPDT        DID USER SPECIFY RETPD=0 ???
         BNE   NOEXPDT            NO - LEAVE EXPDT ASIS
         XC    DS1EXPDT,DS1EXPDT  YES - ZERO OUT EXPIRATION DATE
         SPACE
NOEXPDT  OC    KEYLEN,KEYLEN      ANY KEYLEN ??
         BZ    NOKEYLEN           NO
         MVC   DS1KEYL,KEYLEN     YES
         SPACE
NOKEYLEN OC    DSORG,DSORG        ANY DSORG ??
         BZ    NODSORG            NO
         MVC   DS1DSORG,DSORG     YES
         SPACE
NODSORG  OC    RECFM,RECFM        ANY RECFM
         BZ    NORECFM            NO
         MVC   DS1RECFM,RECFM     YES
         SPACE
NORECFM  OC    BLKSIZE,BLKSIZE    ANY BLKSIZE ??
         BZ    NOBLKSIZ           NO
         MVC   DS1BLKL,BLKSIZE    YES
         SPACE
NOBLKSIZ OC    LRECL,LRECL        ANY LRECL ??
         BZ    NOLRECL            NO
         MVC   DS1LRECL,LRECL     YES
         SPACE
NOLRECL  OC    RKP,RKP            ANY RKP ??
         BZ    NORKP              NO
         MVC   DS1RKP,RKP         YES
         SPACE
NORKP    OC    OPTCD,OPTCD        ANY OPTCD ??
         BZ    NOOPTCD            NO
         MVC   DS1OPTCD,OPTCD     YES
         SPACE
NOOPTCD  CLI   PSWDBITS,JFCBRWPW  SET NOPWREAD AND PWWRITE ??
         BNE   NOWRITPW           NO
         OI    DS1DSIND,X'14'     YES
         SPACE
NOWRITPW CLI   PSWDBITS,JFCSECUR  SET PWREAD AND PWWRITE ??
         BNE   NOREADPW           NO
         OI    DS1DSIND,X'10'     YES
         NI    DS1DSIND,X'FF'-X'04'
         SPACE
NOREADPW CLC   SPECOPER,=C'ZUSE'  ZERO USE COUNT ??   (FCB=ZUSE)
         BNE   NOZUSE             NO
         XC    ASM2UCNT,ASM2UCNT  YES
         B     NONOPW
         SPACE
NOZUSE   CLC   SPECOPER,=C'NOPW'  REMOVE PASSWORD PROT ??  (FCB=NOPW)
         BNE   NONOPW             NO
         NI    DS1DSIND,X'FF'-X'14'  YES
         SPACE
NONOPW   TM    SECBITS,JFCBSPAC   SPACE SPECIFIED ?
         BZ    NOSECQTY           NOPE
         MVC   DS1SCALO+1(3),SECQTY   YES - SET SECONDARY SPACE AMT
         SPACE
NOSECQTY DS    0H
         SPACE
* WRITE THE DSCB BACK TO THE VTOC
         SPACE
         ENQ   (SYSVTOC,VOLSER,E,,SYSTEMS)            DON'T BUMP HEADS *
                                                      WITH DASDM
         SPACE
         XC    IOBSEEK(3),IOBSEEK     ZERO MBB OF MBBCCHHR
         MVC   IOBSEEK+3(5),DSCBCCHH  FILL IN CCHHR OF MBBCCHHR
         XC    ECB,ECB                INITIALIZE ECB
         SPACE
         EXCP  IOB                WRITE THE DSCB BACK
         SPACE
         WAIT  ECB=ECB            WAIT FOR I/O TO COMPLETE
         SPACE
         DEQ   (SYSVTOC,VOLSER,,SYSTEMS),RET=HAVE    LEGGO OF VTOC
         SPACE
         TM    ECB,X'7F'          CHANNEL PROGRAM EXECUTE OKAY ???
         BNO   IOERROR            NOPE
         SPACE
         CLOSE (DCB)              CLOSE VTOC
         SPACE
         MVC   WTOUPDAT+35(44),DSNAME      MOVE IN DSNAME
         MVC   WTOUPDAT+24(6),VOLSER       MOVE IN VOLSER
WTOUPDAT WTO   'DSCB UPDATED ON VOLSER FOR 1...5...10....5...20....5...*
               30....5...40...4',ROUTCDE=11
         SPACE 2
         B     DDLOOP             DO IT ALL AGAIN
         TITLE 'CLEANUP AND RETURN'
ENDTIOT  DS    0H                 END OF DD CARDS
         SPACE
         TM    DCB+48,X'10'       IS THE VTOC DCB OPEN ???
         BZ    RTN                NO - JUST RETURN
         SPACE
         CLOSE (DCB)              CLOSE VTOC DCB
         SPACE
         DEQ   (SYSVTOC,VOLSER,,SYSTEMS),RET=HAVE  MAKE SURE VTOC FREED
         SPACE
RTN      L     R13,4(,R13)        -> OLD SAVE AREA
         SR    R15,R15            RC = 0
         RETURN (14,12),,RC=(15)
         TITLE 'ERROR EXITS'
BADJFCB  BAL   R14,GETRC          GET RC IN CHARACTERS
         MVC   WTOJFCB+33(5),RC   MOVE TO MSG
WTOJFCB  WTO   'RETURN CODE FROM RDJFCB =99999',ROUTCDE=11
         SPACE
         ABEND 100,DUMP
         SPACE 2
INVALIDD MVC   WTODD+8(8),TIOEDDNM
WTODD    WTO   '-DDNAME- DD CARD INVALID, NO UPDATE PERFORMED',        *
               ROUTCDE=11
         B     DDLOOP
         SPACE 2
NOCHANGE MVC   WTONOCHG+33(8),TIOEDDNM
WTONOCHG WTO   'NO CHANGES SPECIFIED FOR -DDNAME- DD CARD, IGNORED',   *
               ROUTCDE=11
         B     DDLOOP
         SPACE 2
BADOBTAN BAL   R14,GETRC          GET RC IN CHARACTERS
         MVC   WTOBTAIN+53(5),RC   MOVE TO MSG
         MVC   WTOBTAIN+43(8),TIOEDDNM
WTOBTAIN WTO   'RETURN CODE FROM OBTAIN FOR DDNAME -DDNAME- =99999',   *
               ROUTCDE=11
         B     DDLOOP
         SPACE 2
BADOPEN  BAL   R14,GETRC          GET RC IN CHARACTERS
         MVC   WTOOPEN+46(5),RC   MOVE TO MSG
         MVC   WTOOPEN+33(6),VOLSER
WTOOPEN  WTO   'RETURN CODE FROM OPEN ON VOLSER VTOC =99999',          *
               ROUTCDE=11
         SPACE
         ABEND 200,DUMP
         SPACE 2
GETRC    EQU   *                  SUBROUTINE TO MAKE RC PRINTABLE
         CVD   R15,DBLWRD         DECIMAL
         OI    DBLWRD+7,X'0F'     INSURE RIGHT CHAR A EBDIC NUMERIC
         UNPK  RC(5),DBLWRD+5(3)  CHARACTER
         BR    14                 RETURN
         TITLE 'I/O ERROR HANDLING ROUTINE'
         SPACE
IOERROR  EQU   *                  I/O ERROR ANALYSIS ROUTINE
         SPACE
         SYNADAF ACSMETH=EXCP,PARM1=IOB       GET SYNAD INFO
         SPACE
         STM   14,12,12(R13)      SAVE REGISTERS IN NEW SAVE AREA
         SPACE
         CLI   8(R1),C' '         ANY BINARY ADDRESSES ???
         BE    NOBIN              NOPE
         SPACE
         UNPK  22(7,R1),8(4,R1)   UNPACK BUFFER ADDRESS
         MVC   29(1,R1),11(R1)    GET RIGHT DIGIT
         NC    22(8,R1),=8X'0F'   PUT WITHIN RANGE OF XLATE TABLE
         TR    22(8,R1),=C'0123456789ABCDEF'   CONVERT TO HEX
         SPACE
         UNPK  39(3,R1),12(2,R1)  UNPACK NO BYTES READ
         MVC   42(1,R1),13(R1)    GET RIGHT DIGIT
         NC    39(4,R1),=8X'0F'   PUT WITHIN RANGE OF XLATE TABLE
         TR    39(4,R1),=C'0123456789ABCDEF'   CONVERT TO HEX
         SPACE
NOBIN    MVC   8(14,R1),=C'I/O ERROR,BFR='     FILL
         MVC   30(9,R1),=C',NOBYTES='          IN
         MVC   43(4,R1),=C',CC='               LABELS
         SPACE
         UNPK  47(1,R1),ECB(1)    UNPACK COND CODE
         MVC   48(1,R1),ECB       GET RIGHT DIGIT
         NC    47(2,R1),=8X'0F'   PUT WITHIN RANGE OF XLATE TABLE
         TR    47(2,R1),=C'0123456789ABCDEF'   CONVERT TO HEX
         SPACE
* CONSTRUCT A PARAMETER LIST FOR WTO SVC
         SPACE
         LR    R5,R1              SAVE REGISTER ONE
         L     R3,4(,R1)          AND PREFIX
         L     R4,128(,R1)        AND SUFFIX
         SPACE
         MVC   6(2,R5),=X'8000'   MCS FLAGS FOR WTO
         MVC   128(4,R5),=X'00000020'  SET ROUTING AND DESCRIPTOR CODES
         SPACE
         WTO   MF=(E,4(5))        WRITE TO PROGRAMMER  (ROUTCDE=11)
         SPACE
         LR    R1,R5              RESTORE REGISTER ONE
         ST    R3,4(,R1)          AND PREFIX
         ST    R4,128(,R1)        AND SUFFIX
         LM    14,12,12(R13)      AND REST OF REGISTERS
         SPACE
         SYNADRLS
         SPACE
         SNAPSHOT ON
         SNAPSHOT OPEN,SNAPDCB=YES
         SNAPSHOT PDATA=(PSW,REGS,SA,JPA,SPLS)
         SNAPSHOT CLOSE
         SPACE
         B     ENDTIOT            ENDTIOT WILL DO CLEANUP
         SPACE 2
         SNAPSHOT DCB,DDNAME=SNAP
         SNAPSHOT OFF
         TITLE 'CONSTANTS'
SYSVTOC  DC    CL8'SYSVTOC'       QNAME TO ENQ ON VTOC
         SPACE
ADSCB    CAMLST SEARCH,DSNAME,VOLSER,DSCB+44
         SPACE 2
DCB      DCB   DSORG=DA,DEVD=DA,MACRF=E,KEYLEN=44,RECFM=FS,            C
               EXLST=JFCBLIST,DDNAME=ZAP
         SPACE 2
ECB      DS    F                  ECB FOR I/O TO WRITE DSCB BACK
         SPACE 3
JFCBLIST DC    X'87',AL3(JFCB)
         SPACE 4
IOB      DS    0F                 IOB START
IOBFLAG1 DC    X'42'              CMD CHAINING,UNRELATED CHAN PGM
IOBFLAG2 DC    X'00'
IOBSENS0 DC    X'00'              SENSE
IOBSENS1 DC    X'00'              BYTES
IOBECBCC DC    X'00'              COMPLETION CODE OF I/O EVENT
IOBECBPT DC    AL3(ECB)           -> ECB POSTED WHEN I/O EVENT FINISHES
IOBFLAG3 DC    X'00'
IOBCSW   DC    XL7'00'            LOW 7 BYTES OF CHANNEL STATUS WORD
IOBSIOCC DC    X'00'              COND CODE FOR SIO INSTRUCTION
IOBSTART DC    AL3(CHANPGM)       -> CHANNEL PROGRAM TO EXECUTE
         DC    X'00'
IOBDCBPT DC    AL3(DCB)           -> DCB FOR DATASET
IOBRESTR DC    F'0'
IOBINCAM DC    X'0000'            AMOUNT TO INCREMENT DCBBLKCT FIELD
IOBERRCT DC    X'0000'            NUMBER OF RETRIES DURING ERROR OPER
IOBSEEK  DC    XL8'00'            SEEK ADDRESS FOR CHANNEL PROGRAM
         SPACE 2
CHANPGM  DS    0D                 CHANNEL PROGRAM START
SEARCH   CCW   X'31',IOBSEEK+3,X'40',5       SEARCH ID EQ FOR CCHHR
TIC      CCW   X'08',SEARCH,0,0              TIC TO SEARCH IF NOT FOUND
WRITE    CCW   X'0D',DSCB,0,140              WRITE DSCB
         TITLE 'FORMAT ONE DATA-SET CONTROL BLOCK'
DSCB     DS    0F
         IECSDSL1 (1)
DSCBCCHH DS    CL5                 CCHHR OF DSCB RETURNED BY OBTAIN
         DS    CL47                REST OF OBTAIN'S 148 BYTE WKAREA
         SPACE
ASM2UCNT EQU   IECSDSL1+45,3       ASM2 VER 2.4 USE COUNT
         SPACE 3
         LTORG
         SPACE 3
         TITLE 'JOB FILE CONTROL BLOCK'
JFCB     DS    0F
         IEFJFCBN LIST=NO
         TITLE 'TASK INPUT/OUTPUT TABLE DSECT'
TIOT     DSECT
         IEFTIOT1
         TITLE 'UNIT CONTROL BLOCK DSECT'
UCB      DSECT
         IEFUCBOB LIST=NO
         TITLE 'WORKAREAS'
ZAPDSCB  CSECT
         SPACE
DBLWRD   DS    D                  WORKAREA FOR CVD INSTRUCTIONS
SAVEAREA DS    18F
         SPACE
DSNAME   DS    CL44               DSNAME
VOLSER   DS    CL6                VOLSER
CREDT    DS    CL3                CREATION DATE  (CURRENT DATE)
EXPDT    DS    CL3                EXPIRATION DATE
KEYLEN   DS    CL1                KEY LENGTH
DSORG    DS    CL2                DSORG
RECFM    DS    CL1                RECFM
BLKSIZE  DS    CL2                BLKSIZE
LRECL    DS    CL2                LRECL
RKP      DS    CL2                RKP
OPTCD    DS    XL1                OPTCD
SPECOPER DS    CL4                SPECIAL OPERATIONS WORD
PSWDBITS DS    XL1                PASSWORD PROTECTION INDICATORS
SECQTY   DS    AL3                SECONDARY SPACE QUANITY
SECBITS  DS    XL1                SPACE ALLOC INDICATORS
DSCBINFO EQU   EXPDT,*-EXPDT
RC       DS    CL5                AREA FOR CONVERTING RC'S TO CHAR
         SPACE 2
         END
/*
