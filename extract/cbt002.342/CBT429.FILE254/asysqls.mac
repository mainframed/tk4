//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M
/*JOBPARM S=SYSB
//DSNHASMH PROC WSPC=500,MEM=TEMPNAME
//PC      EXEC PGM=DSNHPC,PARM='HOST(ASM)'
//DBRMLIB DD DSN=TECH110.USER.DBRMLIB(&MEM),
//         DISP=SHR
//STEPLIB  DD  DISP=SHR,DSN=SYS1.DB2.V2R3M0.DSNEXIT
//         DD  DISP=SHR,DSN=SYS1.DB2.V2R3M0.DSNLOAD
//SYSCIN   DD  DSN=&&DSNHOUT,DISP=(MOD,PASS),UNIT=VIO,
//             SPACE=(800,(&WSPC,&WSPC))
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  SPACE=(800,(&WSPC,&WSPC),,,ROUND),UNIT=VIO
//ASM     EXEC PGM=ASMA90,PARM='OBJECT,NODECK',COND=(4,LT,PC)
//STEPLIB  DD  DSN=SYS1.HLASM.V1R1M0.SASMMOD1,DISP=SHR
//SYSIN    DD  DSN=&&DSNHOUT,DISP=(OLD,DELETE)
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYSS.DB2.V2R3M0.DSNMACS,DISP=SHR
//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=VIO,
//             SPACE=(800,(&WSPC,&WSPC)),DCB=(BLKSIZE=800)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  SPACE=(800,(&WSPC,&WSPC),,,ROUND),UNIT=VIO
//LKED    EXEC PGM=IEWL,PARM='XREF',
//             COND=((4,LT,ASM),(4,LT,PC))
//SYSLIB   DD  DISP=SHR,
//             DSN=SYS1.DB2.V2R3M0.DSNLOAD
//         DD  DISP=SHR,DSN=SYS1.CICS.V2R1M2.LOADLIB
//         DD  DISP=SHR,DSN=SYS1.ISPF.V3R3M0.ISPLOAD
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLMOD DD DSN=TECH110.USER.LOADLIB(&MEM),
//        DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  SPACE=(1024,(50,50)),UNIT=VIO
//DSNHASMH PEND
//S EXEC DSNHASMH,MEM=ASYSQL
//PC.SYSIN DD *
ASYSQL   TITLE 'ASYNCHRONOUS SQL SELECT SERVER'
ASYSQL   CSECT ,
         SYSSTATE ASCENV=P PRIMARY ASC MODE
         ENTRY DSNHLI
ASYSQL   AMODE ANY
ASYSQL   RMODE ANY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14
         LA    RA,0(,RF) SETUP ADDRESSING REGS
         USING ASYSQL,RA
         L     R0,=A(WORKLEN+SQLDLEN)
         LR    R1,R0 MAXREQ SIZE
         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(ANY,ANY) SAVE WORKAREA
         LA    RD,0(,R1) PTR TO MY SAVEAREA
         USING WORKAREA,RD
         ST    R1,WORKA1P SAVE AREA PTR
         ST    R0,WORKA1L SAVE LEN ACQ
         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK
         USING SQLDSECT,RC
         USING SQLDA,RB
         LA    RC,SQLPARM ADDRESS
         LA    RB,SQLVDA ADDRESS
         LOAD  EP=DSNALI DYNAMIC LOAD OF EXPLICIT CONNECT SERVICE
         ST    R0,EPDSNALI SAVE ADDRESS
         LOAD  EP=DSNHLI2 DYNAMIC LOAD OF CAF SQL CALL SERVICE
         ST    R0,EPDSNHL2 SAVE ADDRESS
         MVC   CAFCALL(CAFCALLL),CAFCALLM LIST BUILD
         MVC   DSPSRVD(XSPSRVLL),DSPSRVL FOR DSPSERV
         MVC   HSPSRVD(YSPSRVLL),HSPSRVL FOR HSPSERV
         MVC   ALESRVD(ALESRVLL),ALESRVL FOR ALESERV
         DSPSERV CREATE,STOKEN=HSTOKEN,TYPE=HIPERSPACE,NAME=HSTRNAME,  X
               GENNAME=YES,OUTNAME=HGENNAME,BLOCKS=(16384,2048),       X
               ORIGIN=HORIGIN,HSTYPE=SCROLL,SHARE=NO,                  X
               MF=(E,DSPSRVD,COMPLETE)
         LTR   R2,RF CREATED?
         BNZ   ABEND
         MVC   HRPTR,HORIGIN START ADDR FOR HIPERSPACE READS
         MVC   HWPTR,HORIGIN START ADDR FOR HIPERSPACE WRITES
         LA    R0,HRANGE1 PTR HSPSERV PARAM LIST
         ST    R0,HRANGE ...
         MVC   HRANGE2,HORIGIN START ADDR FOR HIPERSPACE WRITES
         MVC   HRANGE3,=F'8'   HIPERBLOCK COUNT
         L     R0,=A(4096*8) 32K VIRT STOR BUFFER FOR HIPERSPACE
         LR    R1,R0 MAX SIZE REQ
         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(ANY,ANY),BNDRY=PAGE
         ST    R1,WORKA3P SAVE AREA PTR
         ST    R1,HRANGE1 PTR TO VIRTSTOR FOR HSPSERV
         ST    R0,WORKA3L SAVE LEN ACQ
         ALESERV ADD,STOKEN=HSTOKEN,ALET=HALET,AL=WORKUNIT,            X
               MF=(E,ALESRVD)
         LTR   R2,RF CREATED?
         BNZ   ABEND
         MVC   DB2SSID(4),=CL4'DSNB'
         XC    DB2INIT,DB2INIT INIT ECB
         XC    DB2TERM,DB2TERM TERM ECB
         L     RF,EPDSNALI CONNECT SERVICE
         CALL  (15),(CONNECT,DB2SSID,DB2TERM,DB2INIT,RIBPTR),VL,       X
               MF=(E,CAFCALL)
         LTR   R2,RF
         BNZ   ABEND
         MVC   DB2PLAN,=CL8'ASYSQL' PLAN NAME FOR DB2
         L     RF,EPDSNALI CONNECT SERVICE
         CALL  (15),(OPEN,DB2SSID,DB2PLAN),VL,MF=(E,CAFCALL)
         LTR   R2,RF
         BNZ   ABEND
         LA    R3,TESTQRYP PARM LIST PTR
         L     R4,0(,R3) QUERY PTR
         LA    R4,0(,R4) STRIP LAST PARM BIT
         LH    R5,0(,R4) QUERY LEN
         LA    R4,2(,R4) QUERY PTR
         LA    R2,SQLSTRNG+2 BUILD QUERY TARGET PTR
SQGENL3  MVC   0(1,R2),0(R4) MOVE 1 BYTE
         CLI   0(R2),C'?' REPLACEABLE PARAMETER
         BNE   SQGENL9 GO LOOP
         TM    0(R3),X'80' WAS PREV PARM SUPPOSED TO BE LAST?
         BO    ABEND YES
         LA    R3,4(,R3) NEXT PASSED VALUE
         L     R6,0(,R3) PTR VALUE
         LA    R6,0(,R6) STRIP POSSIBLE LAST PARM BIT
         LH    R7,0(,R6) LEN OF NEW VALUE
         LA    R6,2(,R6) PTR TO SOURCE VALUE
         CLC   =C'?CHAR?',0(R4) DATATYPE
         BNE   SQGENL6 NO
         MVI   0(R2),C'''' START QUOTE
         LA    R2,1(,R2) NEXT SINK
         BCTR  R7,0 FOR EX MOVE SOURCE TO SINK
         EX    R7,MOVECHAR
         LA    R2,1(R7,R2) NEXT SINK POSITION - 1 (WILL+1 LATER)
         MVI   0(R2),C'''' START QUOTE
         LA    R4,5(,R4) NEXT SRC  POSITION - 1 (WILL+1 LATER)
         SH    R5,=H'5' DECREMENT CHAR COUNTER
         B     SQGENL9 CONTINUE
MOVECHAR MVC   0(*-*,R2),0(R6) MOVE SQL PARM SOURCE TO SINK
MOVEMSG1 MVC   SQLSWTO+8(*-*),SQLSTRNG+2
SQGENL6  EQU   * *
SQGENL9  LA    R2,1(,R2) NEXT SINK
         LA    R4,1(,R4) NEXT SOURCE
         BCT   R5,SQGENL3 ALL QUERY CHARS
         LA    R1,SQLSTRNG+2 CALC LEN OF FINISHED QUERY
         SLR   R2,R1 LEN
         STH   R2,SQLSTRNG TELL DB2
         BCTR  R2,0 FOR WTO MOVE
         EX    R2,MOVEMSG1 TEMP TO TELL WORLD SQL STATEMENT
SQLSWTO  WTO   '                                                       X
                                                                      '
         XC    SQLCAID(136),SQLCAID CLEAR
         MVC   SQLCAID,=CL8'SQLCA' EYECATCHER
         MVC   SQLCABC,=F'136' BYTE CTR
         MVC   SQLDAID,=CL8'SQLDA' EYECATCHER
         MVC   SQLDABC,=F'33016' MAX BYTE CTR
         MVC   SQLN,=H'750' SUPPORTED COL COUNT
         MVC   SQLD,=H'0' RESULT COL CTR
         EXEC SQL DECLARE C1 CURSOR FOR STMT
         ICM   R2,15,SQLCODE
         BNZ   ABEND
         EXEC SQL PREPARE STMT INTO :SQLVDA FROM :SQLSTRNG
         ICM   R2,15,SQLCODE
         BNZ   ABEND
         LH    R4,SQLD DECRIBED COL COUNT
         LA    R5,SQLVAR COL DESCRIPTION
         SLR   R6,R6 SIZE REQ FOR FETCH
         USING SQLVARN,R5
DSCLOOP1 AH    R6,SQLLEN ADD ON SIZE
         LA    R6,2(,R6) +2 FOR IND VARIABLES FOR NULL VALUES
         LA    R5,44(,R5) NEXT COL DESCRIPT
         BCT   R4,DSCLOOP1 ...
         DROP  R5
         LR    R0,R6 REQUESTED SIZE
         ST    R6,ROWSIZE SAVE SINGLE ROW SIZE
         LR    R1,R6 MAX SIZE REQ
         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(ANY,ANY) FETCH WORKAREA
         LR    R9,R1 SAVE AREA PTR
         ST    R1,WORKA2P SAVE AREA PTR
         ST    R0,WORKA2L SAVE LEN ACQ
         LH    R4,SQLD DECRIBED COL COUNT
         LA    R5,SQLVAR COL DESCRIPTION
         USING SQLVARN,R5
DSCLOOP2 ST    R9,SQLDATA VAR COL DATA
         AH    R9,SQLLEN ADVANCE TO IND VAR
         ST    R9,SQLIND
         LA    R9,2(,R9) +2 FOR IND VARIABLES FOR NULL VALUES
         LA    R5,44(,R5) NEXT COL DESCRIPT
         BCT   R4,DSCLOOP2 ...
         DROP  R5
         SLR   R7,R7 ROW CTR
         EXEC SQL OPEN C1
         ICM   R2,15,SQLCODE
         BNZ   ABEND
FETCHC1  EXEC SQL FETCH C1 USING DESCRIPTOR :SQLVDA
         CLC   =F'100',SQLCODE EOF
         BE    CLOSCRSR
         ICM   R2,15,SQLCODE
         BNZ   ABEND
         LA    R7,1(,R7)
         B     FETCHC1
CLOSCRSR EXEC SQL CLOSE C1
         ICM   R2,15,SQLCODE
         BNZ   ABEND
         CVD   R7,DWORK1
         UNPK  DWORK2(7),DWORK1+4(4)
         OI    DWORK2+6,C'0' PRINTABLE
         MVC   WTOROW+8(7),DWORK2
WTOROW   WTO   'XXXXXXX ROWS PROCESSED'
         EAR   R0,13 EXTRACT AR13 TO GPR0
         ST    R0,SAVEAR13 SAVE AR13 PRIOR TO HSPSERV CALL
         SLR   R0,R0 SET GPR0 TO 0 SO CAN MOVE TO AR13
         SAR   13,R0 SET AR13 TO 0 AS PER HSPSERV
         LR    R9,RD TEMP STORE OF R13
         LA    R2,HSPSRVD MF=L PTR
         LA    R3,HSTOKEN HIPERSPACE STOKEN PTR
         LA    R4,HALET   HIPERSPACE ALET PTR
         LA    R5,HRANGE  HIPERSPACE PARM LST PTR
         LA    RD,WHSPSERV HSPSERV 144 BYTE SAVEAREA
         HSPSERV SWRITE,STOKEN=(R3),HSPALET=(R4),                      X
               NUMRANGE=1,RANGLIST=(R5),MF=(E,(R2),COMPLETE)
         LR    RD,R9 RESTORE OF R13
         L     R0,SAVEAR13 RESTORE AR13
         SAR   13,R0 ...
         LTR   R2,RF CHECK HSPSERV RESULT
         BNZ   ABEND
         ALESERV DELETE,ALET=HALET,MF=(E,ALESRVD)
         DSPSERV DELETE,STOKEN=HSTOKEN,                                X
               MF=(E,DSPSRVD,COMPLETE)
         L     R1,WORKA3P RESTORE ACQ VALUES
         L     R0,WORKA3L RESTORE ACQ VALUES
         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE WORKAREA
         L     R1,WORKA2P RESTORE ACQ VALUES
         L     R0,WORKA2L RESTORE ACQ VALUES
         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE WORKAREA
         L     R1,WORKA1P RESTORE ACQ VALUES
         L     R0,WORKA1L RESTORE ACQ VALUES
         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE SAVEAREA
         SLR   RF,RF RC=0
         PR    , RESTORE CALLERS STATUS
ABEND    LR    R3,R0 SAVE POSSIBLE REASON CODE
         ABEND 1024,DUMP SEVERE ERROR
DSNHLI   L     RF,EPDSNHL2 LINKAGE BYPASSING DUMMY DSNHLI
         BR    RF ...
CAFCALLM CALL  ,(,,,,),VL,MF=L
         DSPSERV PLISTVER=1,MF=(L,DSPSRVL)
ALESRVL  ALESERV MF=L
         HSPSERV PLISTVER=1,MF=(L,HSPSRVL)
SQLSTRNG DC    1HL2'0',1CL254' '
TESTQRYP DC    A(TESTQ1)
         DC    A(TESTQ2+X'80000000')
TESTQ1   DC    AL2(L'TESTQ1Q)
TESTQ1Q  DC    C'SELECT * FROM BUILD.TABRVOLS WHERE VOLSER=?CHAR?'
TESTQ2   DC    AL2(L'TESTQ2D) P1 DATA VALUE
TESTQ2D  DC    C'TSO001'
CONNECT  DC    CL12'CONNECT' CAF SERVICE LITERAL
OPEN     DC    CL12'OPEN'    CAF SERVICE LITERAL
HSTRNAME DC    CL8'@' GENERATE HIPERSPACE NAME WITH PREFIX
         LTORG
         DSNDRIB DB2 RELEASE INFORMATION BLOCK
         EXEC SQL INCLUDE SQLDA
WORKAREA DSECT
SAVEAREA DS    9D LINKAGE
WHSPSERV DS    18D 144 BYTE SAVEAREA FOR HSPSERV
DWORK1   DS    D
DWORK2   DS    D
HSTOKEN  DS    D HIPER STOKEN
HGENNAME DS    D GENERATED HIPERSPACE NAME
HORIGIN  DS    A RETURNED HIPERSPACE VIRT ADDR ORIGIN
HALET    DS    F HIPERSPACE ACCESS LIST ENTRY
HRANGE   DS    A(HRANGE1) PTR TO HSPSERV RANGE PARAM LIST
HRANGE1  DS    A ADDRESS SPACE SOURCE
HRANGE2  DS    A HIPERSPACE TARGET ADDRESS
HRANGE3  DS    F'8' HIPERSPACE BLOCK COUNT
SAVEAR13 DS    A SAVE AR13  FOR HSPSERV
WORKA1P  DS    F GETMAINED AREA PTRS AND LEN
WORKA1L  DS    F FOR SAVEAREA AND WORKAREA
WORKA2P  DS    F FOR FETCH WORKAREA
WORKA2L  DS    F
WORKA3P  DS    F FOR HIPERSPACE BUFFERS
WORKA3L  DS    F
ROWSIZE  DS    F RETURNED SUM OF COL SIZES
HRPTR    DS    A HIPERSPACE READ  PTR
HWPTR    DS    A HIPERSPACE WRITE PTR
DB2INIT  DS    F DB2 INIT ECB
DB2TERM  DS    F DB2 TERM ECB
EPDSNALI DS    A DSNALI ENTRY PTR
EPDSNHL2 DS    A DSNHLI2 ENTRY PTR
DB2SSID  DS    CL4 DB2 SSID
DB2PLAN  DS    CL8 DB2 PLAN NAME
RIBPTR   DS    A DB2 RELEASE INFO BLOCK PTR
         DSPSERV PLISTVER=1,MF=(L,DSPSRVD)
XSPSRVLL EQU   *-DSPSRVD
         HSPSERV PLISTVER=1,MF=(L,HSPSRVD)
YSPSRVLL EQU   *-HSPSRVD
ALESRVD  ALESERV MF=L
ALESRVLL EQU   *-ALESRVD
CAFCALL  CALL  ,(,,,,),VL,MF=L
CAFCALLL EQU   *-CAFCALL
SQLPARM  DS    (SQLDLEN)C
         EXEC SQL INCLUDE SQLCA
SQLVDA   DS    33016C MAX LEN SQLDA FOR 750 COLUMN DESCRIP
WORKLEN  EQU   *-WORKAREA
         END
/*
//BIND     EXEC PGM=IKJEFT01,DYNAMNBR=32,COND=(4,LT)
//DBRMLIB  DD DSN=TECH110.USER.DBRMLIB,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//SYSTSIN DD *
 DSN SYSTEM(DSNB)
 BIND PLAN(ASYSQL) -
      MEMBER(ASYSQL) -
      ACTION(REP) -
      ISOLATION(CS) -
      VALIDATE(BIND) -
      EXPLAIN(NO) -
      ENABLE(BATCH,DB2CALL)
 END
/*
//
