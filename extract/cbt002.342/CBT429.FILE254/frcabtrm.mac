//TECH110M JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M
//S EXEC ASMHCL
//C.SYSLIB DD
// DD DSN=SYS1.MODGEN,DISP=SHR
//C.SYSIN DD *
ABENDWTO TITLE 'PRODUCTION JOB ABEND PROCESSOR'
ABENDWTO CSECT ,
         SYSSTATE ASCENV=P PRIMARY ASC MODE
ABENDWTO AMODE 31
ABENDWTO RMODE 24
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14
         LA    RA,0(,RF) SETUP ADDRESSING REGS
         USING ABENDWTO,RA
         L     R0,=A(WORKLEN)
         LR    R1,R0 MAXREQ SIZE
         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(BELOW,ANY)  WORKAREA
         LA    RD,0(,R1) PTR TO MY SAVEAREA
         USING WORKAREA,RD
         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK
         USING PSA,R0
         L     R3,PSATOLD TCB
         DROP  R0
         USING TCB,R3
         L     R2,TCBTIO TIOT
         USING TIOT1,R2
         MVC   JOBNAME(8),TIOCNJOB SAVE JOBNAME
         SLR   R4,R4
         ICM   R4,7,TCBJSCBB JSCB
         DROP  R3
         USING IEZJSCB,R4
         SLR   R5,R5
         ICM   R5,7,JSCSCTP TTR OF CURRENT SCT
         LR    RF,R5 SAVE FOR SCT SCAN LATER
         L     R7,JSCBJCT JCT PER JOB
         USING INSMSCT,R5
         USING INJMJCT,R7
         LA    R5,16(,R5) BYPASS QMGR PREFIX
         LA    R7,16(,R7) BYPASS QMGR PREFIX
         SLR   R6,R6
         ICM   R6,7,SCTXBTTR SCTX
         DROP  R5 , R5 IS CURRENT SCT PTR; RF IS PRIOR TO ADJUSTMENT
         USING SCTXIN,R6
         LA    R6,16(,R6) BYPASS QMGR PREFIX
         CLI   SCTXPARM,X'00' ANY PARM ON EXEC STMT
         BE    TERMEXIC NO, OLD STYLE CALL; FORCE ABEND
         CLC   =C'FAILRC',SCTXPARM VALIDITY CHECK
         BNE   PARMERR NG
         CLI   SCTXPARM+6,C'0' SIMPLE VALID CHECK
         BL    PARMERR NG
         CLI   SCTXPARM+7,C'0' SIMPLE VALID CHECK
         BL    PARMERR NG
         CLI   SCTXPARM+8,X'00' MUST BE
         BNE   PARMERR NG
         PACK  DWORK1(8),SCTXPARM+6(2) CONVERT TO BINARY
         CVB   R0,DWORK1 AND THEN SAVE
         ST    R0,PARMRC SAVE HERE
         DROP  R6
         SLR   R8,R8 ACQUIRE JOBS FIRST SCT
         ICM   R8,7,JCTSDKAD SVA OF FIRST SCT; FORWARD CHAIN
SCTSCAN  LA    R8,16(,R8) SKIP QMGR PREFIX
         USING INSMSCT,R8
         CLM   RF,7,SCTANSCT IS THIS PREVIOUS STEP TO US
         BE    CHECKRC YES; GO CHECK RETURN CODES
         ICM   R8,7,SCTANSCT NEXT SCT IN CHAIN
         BNZ   SCTSCAN CONTINUE
         WTO   TEXT=ABMSG5,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         ABEND 24,DUMP,STEP,USER , SHOULD NOT OCCUR
CHECKRC  SLR   R6,R6
         ICM   R6,7,SCTXBTTR SCTX
         USING SCTXIN,R6
         LA    R6,16(,R6) BYPASS QMGR PREFIX
         ICM   R0,15,SCTXABCC DID THIS STEP ABEND
         BNZ   RESTART YES
         DROP  R6
         CLC   SCTSEXEC(2),PARMRC+2 COMPARE RETURN CODES
         BL    EXIT SUCCESSFUL EXECUTION
         OI    FLAGS,X'80' INDICATE CC FAILURE
RESTART  LA    R9,TIOELNGH PTR TO DD ENTRIES
         MVC   ABENDSTP(8),SCTSNAME SAVE STEP NAME
         CLI   ABENDSTP,C' ' ANY NAME
         BNE   FILLPST YES
         MVC   ABENDSTP(8),=CL8'????????'
FILLPST  MVC   ABENDPST(8),SCTSCLPC SAVE NAME OF STEP CALLED PROC
         CLI   ABENDPST,C' ' ANY NAME
         BNE   FILLPGM YES
         MVC   ABENDPST(8),=CL8'????????'
FILLPGM  MVC   ABENDPGM(8),SCTPGMNM SAVE PROGRAM NAME
TIOTLOOP SLR   RB,RB WORK
         ICM   RB,1,0(R9) ENTRY LEN
         BZ    TERMEXIT END OF TIOT DD ENTRIES
         CLC   TIOEDDNM-TIOELNGH(4,R9),=C'SAVE' SAVE REQUIRED
         BE    SAVEDDNM YES
TIOTNEXT LA    R9,0(RB,R9) NEXT ENTRY
         B     TIOTLOOP CONTINUE
SAVEDDNM MVC   DDNAME(8),TIOEDDNM-TIOELNGH(R9) SAVE THIS DDNAME
         NI    FLAGS,X'FF'-X'60' RESET EOV SCAN FLAGS
         L     RC,=A(MODELDCB) PTR
         MVC   INPUTDCB(DCBLEN),0(RC)    POSITION BELOW LINE DCB
         LA    RC,INPUTDCB MAP
         USING IHADCB,RC
         MVC   DCBDDNAM(8),DDNAME
         MVC   EXLSTL(8),EXLSTM POSITION EXLST
         LA    R0,JFCB PER EXLST REQ
         STCM  R0,7,EXLSTL+1 ...
         MVC   EODADL(4),EODADM POSITION EODAD EXIT
         LA    R0,EODADL 24 BIT PTR
         STCM  R0,7,DCBEODA ...
         LA    R0,EXLSTL UPDATE DCB WITH EXLST PTR
         STCM  R0,7,DCBEXLSA ...
         MVC   RDJFCBL(RDJFCBML),RDJFCBM POSITION RDJFCB PARAM LIST
         RDJFCB ((RC)),MF=(E,RDJFCBL)
         LTR   RF,RF CHECK
         BNZ   FRDJFCB ...
         LA    RF,JFCB CHECK DSNAME
         USING INFMJFCB,RF
         TM    JFCBIND2,JFCTEMP TEMP DATASET
         BNO   TIOTNEXT NO, SKIP THIS FILE
         DROP  RF
         OPEN  ((RC),INPUT),MODE=31 , FILL DEB
         LTR   RF,RF CHECK
         LR    RF,RC DCB PTR
         BNZ   FOPEN   ...
         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL
         BZ    FOPEN NO
         XC    TRACKSUM,TRACKSUM TOTAL TRACK COUNT
EOVLOOP  TM    FLAGS,X'20' EODAD ACTIVE
         BO    EOVCLOSE YES, TERM SCAN
         SLR   RB,RB WORK
         ICM   RB,7,DCBDEBA DEB PTR
         USING DEBBASIC,RB
         TM    DEBDEBID,X'0F' VERIFY THIS IS A DEB
         BNO   FDEB LOGIC ERROR
         SLR   RF,RF EXTENT COUNT
         IC    RF,DEBNMEXT EXTENTS COUNT
         LTR   RF,RF VALIDATE
         BZ    FDEB ERROR
         LA    RB,32(,RB) PTR TO DASD SECTION
         DROP  RB
         USING DEBDASD,RB
         SLR   RE,RE SUM UP 3390 TRACKS REQUIRED
         OI    FLAGS,X'40' WERE SCANNING DEB NOW
DEBLOOP  AH    RE,DEBNMTRK TRACK COUNT PER EXTENT
         LA    RB,16(,RB) LOOP
         BCT   RF,DEBLOOP ...
         DROP  RB
         USING DEBACSMD,RB
         L     RF,TRACKSUM ACCUM ACROSS ALL VOLS OF MULTIVOL FILE
         AR    RF,RE ...
         ST    RF,TRACKSUM SAVE TOTAL TRACK COUNT
         CLC   DEBVOLSQ+1(1),DEBVOLNM+1 AT END OF VOLUMES
         BNL   EOVCLOSE YES
         FEOV  ((RC)) EOV WILL UPDATE NEXT VOLS EXTENTS
         B     EOVLOOP LOOP THROUGH ALL VOLUMES
         DROP  RB
EOVCLOSE MVC   OUTRECFM+6(1),DCBRECFM COPY RECFM FROM INPUT TO SVC99
         MVC   OUTLRECL+6(2),DCBLRECL COPY LRECL FROM INPUT TO SVC99
         NI    FLAGS,X'FF'-X'60' RESET EOV SCAN FLAGS
         CLOSE ((RC)),MODE=31 , CLOSE AFTER EOV PROCESSING
         L     RF,=A(PFREEP1) SWITCH TO 24 BIT MODE
         L     RF,0(,RF)     SWITCH TO 24 BIT MODE
         BASSM R3,RF ...
         B     TRKSUM CONTINUE
FREEP1   FREEPOOL ((RC)) , RELEASE SYSTEM ACQUIRED BUFFER POOL
         BSM   R0,R3 RESTORE ...
TRKSUM   L     R1,TRACKSUM ROUND TRACK SUM UP TO MULTI OF 8
         LA    R1,7(,R1) ...
         SRL   R1,3
         SLL   R1,3
         CH    R1,=H'3200' TRK CTR GT THAN THIS
         BNL   VLCNT8 VOLCNT OF 8
         CH    R1,=H'1600' TRK CTR GT THAN THIS
         BNL   VLCNT4 VOLCNT OF 4
         CH    R1,=H'800' TRK CTR GT THAN THIS
         BNL   VLCNT2 VOLCNT OF 1
         LA    R0,1 VOLC
         STC   R0,OUTVOLC+6 ...
         B     STORSPAC CONTINUE
VLCNT2   LA    R0,2 VOLC
         STC   R0,OUTVOLC+6 ...
         SRL   R1,1 DIVIDE TRACK COUNT BY 2
         B     STORSPAC CONTINUE
VLCNT4   LA    R0,4 VOLC
         STC   R0,OUTVOLC+6 ...
         SRL   R1,2 DIVIDE TRACK COUNT BY 4
         B     STORSPAC CONTINUE
VLCNT8   LA    R0,8 VOLC
         STC   R0,OUTVOLC+6 ...
         SRL   R1,3 DIVIDE TRACK COUNT BY 8
STORSPAC STCM  R1,7,OUTPRIM+6 STORE IN DYNALLOC SPACE OUTPUT PARM
         LA    RF,JFCB CHECK DSNAME
         USING INFMJFCB,RF
         MVC   OUTDSN+6(44),=CL44'RESTART.' MOVE RESTART HLQ TO DSN
         MVC   OUTDSN+14(8),JOBNAME POSITION JOBNAME
         LA    R1,OUTDSN+15 LOOK FOR NEXT POSITION
STAMP1   CLI   0(R1),C' ' SCAN
         BE    POSTIME GO POSITION TIMESTAMP
         LA    R1,1(,R1) NEXT
         B     STAMP1 ...
POSTIME  MVC   0(2,R1),=C'.D' START DATE AND TIME
         MVC   2(14,R1),JFCBDSNM+3 TIMESTAMP
         LA    RE,JFCBDSNM+43 SCAN BACKWARDS LOOKING FOR LASTQUAL
QUALSCAN CLI   0(RE),C'.' SCAN BACKWARDS
         BE    QUALPER YES
         BCT   RE,QUALSCAN LOOP
QUALPER  MVC   16(8,R1),1(RE) MOVE TO NEW DSNAME
         MVC   LOGDSN1(8),1(RE) FOR MESSAG TO OPER
         MVC   LOGDSN2(44),OUTDSN+6 ...
         LA    RE,OUTDSN+49 SCAN BACKWARDS TO DETRMINE TRUE DSNLEN
LOOPDLEN CLI   0(RE),C' ' END
         BNE   CALCDLEN GO CALC LEN
         BCT   RE,LOOPDLEN LOOP
CALCDLEN LA    R1,OUTDSN+5 ADJUSTED DSN START
         SLR   RE,R1 HAVE TRUE LEN NOW
         STCM  RE,3,OUTDSN+4 SAVE IN SVC99 PARMLIST
         DROP  RF
         XC    OUTRB+2(2),OUTRB+2   CLEAR
         XC    OUTRB+4(4),OUTRB+4   CLEAR
         XC    OUTRB+12(8),OUTRB+12   CLEAR
         MVC   ABMSG4P(44),OUTDSN+6 SAVE DSN FOR MSG
         LA    R1,OUTRBPTR POINT TO SVC 99 PARM
         DYNALLOC , REQUEST SVC 99 SERVICES
         LTR   RF,RF FAILURE
         BNZ   FSVC99 YES
         OPEN  ((RC),INPUT),MODE=31 , FILL DEB
         LTR   RF,RF CHECK
         LR    RF,RC DCB PTR
         BNZ   FOPEN   ...
         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL
         BZ    FOPEN NO
         MVC   OUTDCBL(OUTDCBML),OUTDCBM MOVE OUTPUT DCB MODEL
         LA    RC,OUTDCBL OPEN
         OPEN  ((RC),OUTPUT),MODE=31 , OUTPUT DCB
         LTR   RF,RF CHECK
         LR    RF,RC DCB PTR
         BNZ   FOPEN   ...
         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL
         BZ    FOPEN NO
         LR    RB,RC OUTPUT DCB
         LA    RC,INPUTDCB RESTORE
         L     RF,=A(PGETPUT) SWITCH TO 24 BIT MODE
         L     RF,0(,RF)     SWITCH TO 24 BIT MODE
         BASSM R3,RF ...
         B     CLOSGP CONTINUE
GETPUT   LA    R0,BUFFER PER GET
         GET   ((RC)),((0)) COPY DATASET
         LH    R0,DCBLRECL COPY LRECL TO OUTPUT DCB FOR RECFM=U
         DROP  RC
         USING IHADCB,RB
         STH   R0,DCBLRECL ...
         DROP  RB
         USING IHADCB,RC
         LA    R0,BUFFER PER PUT
         PUT   ((RB)),((0))  ...
         B     GETPUT LOOP
EODAD    OI    FLAGS,X'20' EODAD ACTIVE FLAG
         TM    FLAGS,X'40' ARE WE IN EOV SCAN CODE
         BO    EOVLOOP YES
         BSM   R0,R3 RESTORE ...
CLOSGP   CLOSE ((RB),FREE,(RC),FREE),MODE=31 , RELEASE
         WTO   TEXT=LOGMSG,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         L     RF,=A(PFREEP2) SWITCH TO 24 BIT MODE
         L     RF,0(,RF)     SWITCH TO 24 BIT MODE
         BASSM R3,RF ...
         B     NTIOT  CONTINUE
FREEP2   FREEPOOL ((RB)) , RELEASE SYSTEM ACQUIRED BUFFER POOL
         FREEPOOL ((RC)) , RELEASE SYSTEM ACQUIRED BUFFER POOL
         BSM   R0,R3 RESTORE ...
NTIOT    SLR   RB,RB WORK
         ICM   RB,1,0(R9) ENTRY LEN FOR TIOT
         B     TIOTNEXT PROCESS NEXT TIOT DD ENTRY
*ERMEXIC MVC   ABENDJOC(8),JOBNAME INTO OLD MSG
*        SLR   R0,R0 CLEAR AS PER WTO
*        WTO   TEXT=ABENDMSC,ROUTCDE=(2),DESC=(11)
TERMEXIC ABEND 0,DUMP,STEP,USER
TERMEXIT MVC   ABENDJOB(8),JOBNAME INTO MSG
         SLR   R0,R0 CLEAR AS PER WTO
         WTO   TEXT=ABENDMSG,ROUTCDE=(2),DESC=(11)
         TM    FLAGS,X'80' PRIOR ABEND IN PROGRESS
         BNO   EXIT YES
         ABEND 0,,STEP,USER
EXIT     L     R0,=A(WORKLEN) LEN
         LR    R1,RD
         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE SAVEAREA
         SLR   RF,RF RC=0
         PR    , RESTORE CALLERS STATUS
         DROP  RC
PARMERR  WTO   TEXT=ABMSG1,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         ABEND 28,DUMP,STEP,USER
FRDJFCB  WTO   TEXT=ABMSG2,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         ABEND 32,DUMP,STEP,USER
         USING IHADCB,RF
FOPEN    MVC   ABMSG3P(8),DCBDDNAM SAVE FOR MSG
         DROP  RF
         WTO   TEXT=ABMSG3,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         ABEND 36,DUMP,STEP,USER
FDEB     WTO   TEXT=ABMSG2,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         ABEND 40,DUMP,STEP,USER
FSVC99   WTO   TEXT=ABMSG4,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         ABEND 44,DUMP,STEP,USER
DCBABEND OI    FLAGS,X'10' INDICATE DCB ABEND TAKEN
         STM   RE,R1,TEMPSAVE SAVE SOME REGS
         WTO   TEXT=ABMSG6,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         LM    RE,R1,TEMPSAVE SAVE SOME REGS
         SLR   RF,RF CONTINUE
         BR    RE RETURN
SYNADX   OI    FLAGS,X'10' INDICATE DCB ABEND TAKEN
         STM   RE,R1,TEMPSAVE SAVE SOME REGS
         WTO   TEXT=ABMSG7,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)
         LM    RE,R1,TEMPSAVE SAVE SOME REGS
         SLR   RF,RF CONTINUE
         BR    RE RETURN
OUTDCBM  DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),BUFNO=32
OUTDCBML EQU   *-OUTDCBM LEN
RDJFCBM  RDJFCB 0,MF=L
RDJFCBML EQU   *-RDJFCBM
EXLSTM   DC    X'07',AL3(0) JFCB PTR
         DC    X'91',AL3(DCBABEND) DCB ABEND EXIT
TRACKSUM DC    F'0' ACCUM TRACK COUNT
PGETPUT  DC    A(GETPUT) ADDRESS OF AMODE 24 ROUTINE
PFREEP1  DC    A(FREEP1) ADDRESS OF AMODE 24 ROUTINE
PFREEP2  DC    A(FREEP2) ADDRESS OF AMODE 24 ROUTINE
EODADM   B     EODAD EOF FOR SEQ INPUT
OUTRBPTR DC    A(OUTRB+X'80000000') SVC 99 PARAM LIST
OUTRB    DC    X'14',AL1(S99VRBAL),X'0000',A(0,OUTTUPL,OUTRBX,0)
OUTRBX   DC    C'S99RBX',AL1(S99RBXVR),AL1(S99EIMSG+S99EWTP)
         DC    AL1(0),AL1(0),AL1(S99XWARN),AL1(0)
         DC    AL4(0),AL4(0),AL4(0),AL4(0),AL4(0),AL4(0)
OUTTUPL  DC    A(OUTDDN)
         DC    A(OUTDSN)
         DC    A(OUTSTAT)
         DC    A(OUTNDISP)
         DC    A(OUTADISP)
         DC    A(OUTTRK)
         DC    A(OUTPRIM)
         DC    A(OUTRLSE)
         DC    A(OUTLRECL)
         DC    A(OUTVOLC)
         DC    A(OUTSC)
         DC    A(OUTDC)
         DC    A(OUTMC)
         DC    A(OUTRECFM+X'80000000')
OUTDDN   DC    0H'0',AL2(DALDDNAM,1,6),C'OUTPUT' DDNAME
OUTDSN   DC    0H'0',AL2(DALDSNAM,1,*-*),CL44' ' DSN
OUTSTAT  DC    0H'0',AL2(DALSTATS,1,1),X'04'   DISP=NEW
OUTNDISP DC    0H'0',AL2(DALNDISP,1,1),X'02'   DISP=CATLG
OUTADISP DC    0H'0',AL2(DALCDISP,1,1),X'02'   DISP=CATLG
OUTTRK   DC    0H'0',AL2(DALTRK,0)  TRACK REQUEST
OUTPRIM  DC    0H'0',AL2(DALPRIME,1,3),AL3(*-*)  PRIMARY SPACEREQ
OUTRLSE  DC    0H'0',AL2(DALRLSE,0)  RLSE  REQUEST
OUTLRECL DC    0H'0',AL2(DALLRECL,1,2),AL2(*-*)  LRECL
OUTVOLC  DC    0H'0',AL2(DALVLCNT,1,1),AL1(*-*)  VOLUME COUNT
OUTSC    DC    0H'0',AL2(DALSTCL,1,8),C'PREALLOC' STORCLAS
OUTDC    DC    0H'0',AL2(DALDACL,1,7),C'SMSUSER' DATACLAS
OUTMC    DC    0H'0',AL2(DALMGCL,1,4),C'TEMP'     MGMTCLAS
OUTRECFM DC    0H'0',AL2(DALRECFM,1,1),AL1(*-*)  RECFM
ABENDMSC DC    AL2(ABENDMCE-ABENDMSC-2),C'JOB '
ABENDJOC DC    C'XXXXXXXX HAS ABENDED OR HAS TERMINATED WITH A FAILING X
               RETURN CODE.'
ABENDMCE EQU   *
ABENDMSG DC    AL2(ABENDMSE-ABENDMSG-2),C'JOB '
ABENDJOB DC    C'XXXXXXXX PROCSTEP '
ABENDPST DC    C'XXXXXXXX STEPNAME '
ABENDSTP DC    C'XXXXXXXX PROGRAM '
ABENDPGM DC    C'XXXXXXXX HAS ABENDED OR HAS TERMINATED WITH A FAILING X
               RETURN CODE.'
ABENDMSE EQU   *
LOGMSG   DC    AL2(LOGMSGE-LOGMSG-2),C'DATASET &&&&'
LOGDSN1  DC    C'XXXXXXXX SAVED AS '
LOGDSN2  DC    CL44' ',C'.'
LOGMSGE  EQU   *
ABMSG1   DC    AL2(ABMSG1E-ABMSG1-2)
         DC    C'EXEC JCL STATEMENT PARM IS INVALID.'
ABMSG1E  EQU   *
ABMSG2   DC    AL2(ABMSG2E-ABMSG2-2)
         DC    C'INTERNAL LOGIC ERROR. NOTIFY TECH SUPPORT.'
ABMSG2E  EQU   *
ABMSG3   DC    AL2(ABMSG3E-ABMSG3-2)
         DC    C'OPEN FAILURE FOR DDNAME: '
ABMSG3P  DC    CL8' '
ABMSG3E  EQU   *
ABMSG4   DC    AL2(ABMSG4E-ABMSG4-2)
         DC    C'DYNAMIC ALLOCATION FAILURE FOR DSNAME: '
ABMSG4P  DC    CL44' '
ABMSG4E  EQU   *
ABMSG5   DC    AL2(ABMSG5E-ABMSG5-2)
         DC    C'ABENDWTO CANNOT BE INVOKED AS THE FIRST STEP OF A JOB'
ABMSG5E  EQU   *
ABMSG6   DC    AL2(ABMSG6E-ABMSG6-2)
         DC    C'EMPTY DATASET OR DCB RECFM/LRECL/BLKSZ INVALID'
ABMSG6E  EQU   *
ABMSG7   DC    AL2(ABMSG7E-ABMSG7-2)
         DC    C'EMPTY DATASET OR I/O ERROR READING INPUT DATASET'
ABMSG7E  EQU   *
FLAGS    DC    X'00' X80 IF CONDCODE FAILURE ELSE ABEND
*                    X40 EOV DEB SCAN IN PROGRESS
*                    X20 EOV EODAD PRESENT
*                    X10 DCB ABEND COND INDICATED
         LTORG
MODELDCB DCB   DDNAME=SAVE????,DSORG=PS,MACRF=(GM),EXLST=EXLSTM,       X
               BUFNO=32,SYNAD=SYNADX
DCBLEN   EQU   *-MODELDCB
WORKAREA DSECT
SAVEAREA DS    9D LINKAGE
DWORK1   DS    D
DWORK2   DS    D
JOBNAME  DS    CL8
DDNAME   DS    CL8
TEMPSAVE DS    4F SOME REG SAVE
JFCB     DS    CL176
PARMRC   DS    F
INPUTDCB DCB   DDNAME=SAVE????,DSORG=PS,MACRF=(GM),EXLST=EXLSTM,       X
               BUFNO=32,SYNAD=SYNADX
OUTDCBL  DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),BUFNO=32
EXLSTL   DC    X'07',AL3(0) JFCB PTR
         DC    X'91',AL3(DCBABEND) DCB ABEND EXIT
RDJFCBL  RDJFCB 0,MF=L
EODADL   B     *-* FILL IN WITH PROPER ADDRESS
BUFFER   DS    32760C MAX BUFFER
WORKLEN  EQU   *-WORKAREA
         IHAPSA
         IKJTCB
IEFTIOT1 DSECT
         IEFTIOT1
         IEFASCTB
         IEFAJCTB
         DSECT
         IEFJFCBN
         IEZJSCB
         IEFSCTX
         DCBD  DSORG=PS
         IEZDEB
         IEFZB4D0
         IEFZB4D2
         END
/*
//*L.SYSLMOD DD DSN=SYS1.TEST.BATCH.LOADLIB(FRCABTRM),UNIT=,DISP=SHR
//
