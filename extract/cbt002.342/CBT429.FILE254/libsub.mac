//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M
//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS'
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//C.SYSIN  DD *
LIB      TITLE 'SUBMIT FROM LIBRARIAN MASTER'
LIBSUB   CSECT , /* LIBSUB */
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
K0       EQU   0
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K13      EQU   13
K14      EQU   14
K15      EQU   15
K16      EQU   16
K17      EQU   17
K18      EQU   18
K19      EQU   19
K20      EQU   20
K24      EQU   24
K28      EQU   28
K32      EQU   32
K36      EQU   36
K40      EQU   40
K44      EQU   44
K48      EQU   48
K52      EQU   52
K56      EQU   56
K60      EQU   60
K64      EQU   64
K68      EQU   68
K72      EQU   72
K76      EQU   76
K80      EQU   80
K84      EQU   84
K88      EQU   88
K92      EQU   92
K96      EQU   96
K255     EQU   255
K256     EQU   256
K264     EQU   264
K424     EQU   424
K512     EQU   512
K4095    EQU   4095
K32760   EQU   32760
X80      EQU   X'80'
X40      EQU   X'40'
X20      EQU   X'20'
X10      EQU   X'10'
X08      EQU   X'08'
X04      EQU   X'04'
X02      EQU   X'02'
X01      EQU   X'01'
X7F      EQU   X'7F'
XFF      EQU   X'FF'
LIBSUB   AMODE 31
LIBSUB   RMODE 24
         SAVE  (14,12),,LIBSUB*&SYSDATE*&SYSTIME
         LR    R3,R1 /* CPPL */
         USING CPPL,R3
         LR    RA,RF /*ADDRESSABILITY*/
         USING LIBSUB,RA,RB,RC
         LA    RB,K4095(,RA)
         LA    RB,K1(,RB)
         LA    RC,K4095(,RB)
         LA    RC,K1(,RC)
         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/
         SPLEVEL SET=2 , /* MVS/XA EXPANSION */
         SLR   R9,R9 RC
         L     R0,=A(DWORDS)
         GETMAIN R,LV=(0),LOC=BELOW
         LR    RD,R1
         ST    RD,K8(,R2)
         ST    R2,K4(,RD)
         USING LIBWMAP,RD
         ST    RD,DIALDATA SAVE USING REGS FOR LM ROUTINES
         ST    RA,K0(,RD) SAVE FOR ADDRESSING
         MVC   DCBMASTR(DCBL),CPYMASTR BUILD DCB
         MVC   OPENL(OPENLL),CPYOPENL OPEN LIST
         MVC   CLOSL(CLOSLL),CPYCLOSL CLOS LIST
         MVI   LIBSBM,C' ' EDIT DSNAME
         MVC   LIBSBM+K1(L'LIBSBM-K1),LIBSBM INIT
         LA    R1,P99RB BUILD DAIRFAIL PARAMS
         ST    R1,DAIRFAIL
         LA    R1,DAIRRC
         ST    R1,DAIRFAIL+K4
         LA    R1,ZEROPTR
         ST    R1,DAIRFAIL+K8
         LA    R1,DAIRSW
         ST    R1,DAIRFAIL+K12
         ST    R3,DAIRFAIL+K16 CPPL PTR
         XC    DAIRFAIL+K20(K4),DAIRFAIL+K20
         USING PSA,R0
         L     R1,PSATOLD CHECK AUTHORIZATION OF CALLER BY PROCNAME
         DROP  R0
         USING TCB,R1
         L     R1,TCBTIO
         DROP  R1
         USING TIOT1,R1
         CLC   =CL8'@IKJSOPR',TIOCSTEP+K8
         BE    AUTHOK
         CLC   =CL8'@IKJSSUP',TIOCSTEP+K8
         DROP  R1
         BE    AUTHOK
         B     SUBEXIT
AUTHOK   XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */
         XC    CMDPANS,CMDPANS
         XC    CMDPECB,CMDPECB
         LA    R8,PARSEPPL MAP
         USING PPL,R8
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         MVC   PPLCBUF,CPPLCBUF
         LA    R0,CMDPECB
         ST    R0,PPLECB
         LA    R0,CMDPANS
         ST    R0,PPLANS
         L     R0,=A(IKJPARM)
         ST    R0,PPLPCL
         DROP  R8
         CALLTSSR EP=IKJPARS,MF=(E,(R8))
         LTR   R9,RF
         BNZ   SUBEXIT
         L     R4,CMDPANS /* RESPONSE */
         USING IKJPARMD,R4
         L     R5,LIBMEM MEMBER NAME PTR
         LH    R6,LIBMEM+K4 MEMBER NAME LEN
         LA    RF,PMEMBER
         USING S99TUNIT,RF
         STCM  R6,K3,S99TULNG SAVE LEN IN DYNALLOC LIST
         BCTR  R6,K0
         MVC   S99TUPAR(K8),=CL8' ' INIT
         EX    R6,MOVEMEM MOVE IN MEMBER NAME
         ICM   R0,K15,S99TUPAR SAVE IN REG
         ICM   R1,K15,S99TUPAR+K4 ...
         B     GETDSN AROUND
MOVEMEM  MVC   S99TUPAR(*-*),K0(R5)
         DROP  RF
GETDSN   LA    R5,DEFDSN DEFAULT DSNAME
         LA    R6,L'DEFDSN ASSUMED LEN
         TM    LIBDSN+K6,X80 DSN PRESENT
         BZ    NODSN NO, ELSE
         L     R5,LIBDSN DSN PTR
         LH    R6,LIBDSN+K4 DSN LEN - NEVER INCL QUOTES
NODSN    LA    RF,PDSNAME
         USING S99TUNIT,RF
         STCM  R6,K3,S99TULNG SAVE LEN IN DYNALLOC LIST
         BCTR  R6,K0
         EX    R6,MOVEDSN MOVE IN DSNAME
         EX    R6,MOVEDSN2 MOVE IN DSNAME
         LA    R6,LIBSBM+K1(R6) BUILD EDIT DSN
         MVI   K0(R6),C'('
         STCM  R0,K15,K1(R6) BUILD DSN
         STCM  R1,K15,K5(R6) ...
LOOKPARN CLI   K2(R6),C' ' BUILD )
         BE    SPOTPARN YES
         LA    R6,K1(,R6) NEXT POSSIBLE SPOT
         B     LOOKPARN
SPOTPARN MVI   K2(R6),C')' POSITION MEMBER END CHAR
         B     VREL   AROUND
MOVEDSN  MVC   S99TUPAR(*-*),K0(R5)
MOVEDSN2 MVC   LIBSBM(*-*),K0(R5)
         DROP  RF
VREL     LA    R1,CMDPANS
         IKJRLSA (R1)
         DROP  R4
         LA    RF,P99RBPTR BUILD DYNALLOC LIST
         USING S99RBP,RF
         LA    R0,P99RB
         ST    R0,S99RBPTR
         OI    S99RBPTR,S99RBPND
         DROP  RF
         LA    RF,P99RB
         USING S99RB,RF
         MVI   S99RBLN,X'14'
         MVI   S99VERB,S99VRBAL
         XC    S99FLAG1,S99FLAG1
         XC    S99ERROR,S99ERROR
         XC    S99INFO,S99INFO
         LA    R0,P99TUPTR
         ST    R0,S99TXTPP
         XC    S99RSV01,S99RSV01
         XC    S99FLAG2,S99FLAG2
         DROP  RF
         LA    RF,P99TUPTR
         USING S99TUPL,RF
         LA    R0,PDDNAME
         ST    R0,S99TUPTR
         LA    RF,K4(,RF) NEXT TEXT PTR
         LA    R0,PDSNAME
         ST    R0,S99TUPTR
         LA    RF,K4(,RF) NEXT TEXT PTR
         LA    R0,PMEMBER
         ST    R0,S99TUPTR
         LA    RF,K4(,RF) NEXT TEXT PTR
         LA    R0,PDISP
         ST    R0,S99TUPTR
         LA    RF,K4(,RF) NEXT TEXT PTR
         LA    R0,PSUBSYS
         ST    R0,S99TUPTR
         OI    S99TUPTR,S99TUPLN
         DROP  RF
         LA    RF,PDDNAME
         USING S99TUNIT,RF
         MVC   S99TUKEY,=AL2(DALDDNAM)
         MVC   S99TUNUM,=AL2(K1)
         MVC   S99TULNG,=AL2(K8)
         MVC   S99TUPAR(L'LIBMASTR),LIBMASTR DDNAME
         DROP  RF
         LA    RF,PDSNAME
         USING S99TUNIT,RF
         MVC   S99TUKEY,=AL2(DALDSNAM)
         MVC   S99TUNUM,=AL2(K1)
         DROP  RF
         LA    RF,PMEMBER
         USING S99TUNIT,RF
         MVC   S99TUKEY,=AL2(DALMEMBR)
         MVC   S99TUNUM,=AL2(K1)
         DROP  RF
         LA    RF,PDISP
         USING S99TUNIT,RF
         MVC   S99TUKEY,=AL2(DALSTATS)
         MVC   S99TUNUM,=AL2(K1)
         MVC   S99TULNG,=AL2(K1)
         MVI   S99TUPAR,K8 DISP=SHR
         DROP  RF
         LA    RF,PSUBSYS
         USING S99TUNIT,RF
         MVC   S99TUKEY,=AL2(DALSSNM)
         MVC   S99TUNUM,=AL2(K1)
         MVC   S99TULNG,=AL2(K3)
         MVC   S99TUPAR(K3),=CL3'LAM' SUBSYS=LAM
         DROP  RF
         LA    R1,P99RBPTR
         SVC   99
         LTR   R9,RF
         BNZ   FSVC99
         LA    R2,DCBMASTR DCBPTR
         LA    R1,OPENL LIST FORM
         OPEN  ((R2)),MODE=31,MF=(E,(1))
         TM    K48(R2),X'10' OPEN OK
         BZ    SUBEXIT
         XC    CALLLIST(K64),CALLLIST CLEAR
         LA    R1,CALLLIST MF=L
         CALL  ISPLINK,(CONTROL,DISPLAY,REFRESH),VL,MF=(E,(1))
         XC    CALLLIST(K64),CALLLIST CLEAR
         LA    R1,CALLLIST MF=L
         LA    R2,DIALDATA PASSED REGS
         LA    R9,LIBSBM
         CALL  ISPLINK,(EDIF,(R9),PROF,RECFM,LRECL,ALMREA,ALMWRIT,,(R2)X
               ,LRECL),VL,MF=(E,(1))
         LR    R9,RF
         LA    R2,DCBMASTR DCBPTR
         LA    R1,CLOSL LIST FORM
         CLOSE ((R2)),MODE=31,MF=(E,(1))
         FREEPOOL (R2)
SUBEXIT  L     R2,K4(,RD)
         LR    R1,RD
         L     R0,=A(DWORDS)
         FREEMAIN R,A=(1),LV=(0)
         LR    RD,R2
         LR    RF,R9
         RETURN (14,12),RC=(15)
FSVC99   ST    R9,DAIRRC FOR DAIRFAIL
         LA    R1,DAIRFAIL
         LINK  EP=IKJEFF18 SHOW DYNALLOC ERROR
         B     SUBEXIT
LMREAD   STM   RE,RC,K12(RD) SAVE REGS CHAINING
         LM    R4,R7,K0(R1) DIALOG PASSED PARMS
         LR    R3,RD CALLERS SAVEAREA
         L     RD,K0(,R7) WORKAREA PTR
         L     RA,K0(,RD) FIRST USING
         LA    RB,K4095(,RA)
         LA    RB,K1(,RB)
         LA    RC,K4095(,RB)
         LA    RC,K1(,RC)
         LR    R2,RD SAVE ORIG WORKAREA PTR
         LA    R8,K80 TELL EDIF LEN LRECL
         ST    R8,K0(,R5) ...
         LA    R8,READLINE DATA AREA
         ST    R8,K0(,R4) TELL EDIF WHERE DATA IS
         LA    R9,DCBMASTR
         LA    RD,SAVEARE2 OUR SAVERAEA
         ST    R3,K4(,RD) CHAIN
         ST    RD,K8(,R3) ...
         LA    R6,GLUERET LINKAGE ASSIST
         BSM   R6,0 SAVE CURRENT AMODE
         LA    R7,EOFRET LINKAGE ASSIST
         BSM   R7,0 SAVE CURRENT AMODE
         LA    RF,GLUE PREP FOR ASSIST
         BASSM RE,RF FLIP AMODE
GLUE     GET   (R9),(R8)
         BSM   0,R6 RESTORE AMODE AND RETURN FROM LINKAGE
GLUERET  L     RD,K4(,RD) RESTORE SAVEAREA PTR
         LM    RE,RC,K12(RD) RESTORE
         SLR   RF,RF
         BR    RE RETURN
EODAD    BSM   0,R7 RESTORE AMODE AND RETURN FROM LINKAGE
EOFRET   L     RD,K4(,RD) RESTORE SAVEAREA PTR
         LM    RE,RC,K12(RD) RESTORE
         LA    RF,K8 EODAD
         BR    RE RETURN
LMWRITE  SLR   RF,RF IGNORE ALL SAVES AND ENDS
         BR    RE RETURN
         LTORG
ZEROPTR  DC    A(*-*)
ALMREA   DC    A(LMREAD)
ALMWRIT  DC    A(LMWRITE)
EDIF     DC    CL8'EDIF'
LMOPEN   DC    CL8'LMOPEN'
INPUT    DC    CL8'INPUT'
LRECL    DC    A(K80)
         PRINT NOGEN
CPYMASTR DCB   DDNAME=LIBMASTR,DSORG=PS,RECFM=F,LRECL=80,MACRF=(GM),   X
               EODAD=EODAD,BLKSIZE=80
DCBL     EQU   *-CPYMASTR
CPYOPENL OPEN  (,(INPUT)),MODE=31,MF=L
OPENLL   EQU   *-CPYOPENL
CPYCLOSL CLOSE (*-*),MODE=31,MF=L
CLOSLL   EQU   *-CPYCLOSL
RECFM    DC    C'F '
DAIRSW   DC    X'0032' DAIRFAIL SWITCHES
CONTROL  DC    CL8'CONTROL'
DISPLAY  DC    CL8'DISPLAY'
REFRESH  DC    CL8'REFRESH'
LIBMASTR DC    CL8'LIBMASTR' DDNAME USED FOR ACCESS
LMINIT   DC    CL8'LMINIT' SERVICE
PROF     DC    CL8'EDIFPROF'
LMGET    DC    CL8'LMGET'
MOVE     DC    CL8'MOVE'
DEFDSN   DC    C'BUILDING.PRODJCL.MASTER' DEFAULT LIBRARIAN MASTER
BLANK    DC    C' '
IKJPARM  IKJPARM
LIBMEM   IKJIDENT 'LIBRARIAN MEMBER',UPPERCASE,                        X
               FIRST=ALPHA,OTHER=ALPHANUM,                             X
               PROMPT='ENTER REQUIRED LIBRARIAN DATASET MEMBER NAME'
LIBDSN   IKJPOSIT DSNAME,UPPERCASE
         IKJENDP
LIBWMAP  DSECT
SAVEAREA DC    18F'0' MUST BE FIRST 2 AREAS IN THIS ORDER
SAVEARE2 DC    18F'0' DO NOT MOVE
DIALDATA DC    A(K0,K0,K0,K0) PASS USING REGS
CMDPECB  DC    A(K0)
CMDPANS  DC    A(K0)
ACTUALEN DC    CL8' '
PARSEPPL DC    (K28)AL1(K0) PARSE PPL
DAIRFAIL DC    (K6)A(*-*)
DAIRRC   DC    A(*-*)
DATAID   DC    CL8' ' PDF LM SERV
READLINE DC    CL80' ' DATA AREA
DCBMASTR DCB   DDNAME=LIBMASTR,DSORG=PS,RECFM=F,LRECL=80,MACRF=(GM),   X
               EODAD=EODAD,BLKSIZE=80
OPENL    OPEN  (,(INPUT)),MODE=31,MF=L
CLOSL    CLOSE (*-*),MODE=31,MF=L
CALLLIST CALL  ,(,,,,,,,,,,,,,,,),MF=L
P99RBPTR DC    (L'S99RBPTR)AL1(K0)
P99RB    DC    (S99RBEND-S99RB)AL1(K0)
P99TUPTR DC    (K5*L'S99TUPTR)AL1(K0)
PDDNAME  DC    (K6+K8)AL1(K0)
PDSNAME  DC    (K6+K44)AL1(K0)
PMEMBER  DC    (K6+K8)AL1(K0)
PDISP    DC    (K6+K1)AL1(K0)
PSUBSYS  DC    (K6+K3)AL1(K0)
LIBSBM   DC    CL54' '
DWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)
         IKJPPL
         IKJCPPL
         CVT   DSECT=YES
         IKJTCB
         IHAPSA
         DSECT
         IEFTIOT1
         IEFZB4D0
         IEFZB4D2
         END
/*
//L.SYSLMOD DD DSN=IPO1.LINKLIB(LIBSUB),DISP=SHR,
//  UNIT=,SPACE=
//L.SYSLIB DD DSN=ISP.V2R3M0.ISPLOAD,DISP=SHR
