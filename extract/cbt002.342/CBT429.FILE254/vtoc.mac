/* REXX VTOC Analysis */
address "TSO";
"VMFCLEAR";
say "Processing all DASD volumes...";
dummy = MSG("OFF");
"FREE F(SYSPRINT SYSOUT ABRSUM SYSIN ABRMAP ABRDCB)";
dummy = MSG("ON");
"ALLOC F(SYSPRINT) DUMMY";
"ALLOC F(SYSOUT) DUMMY";
"ALLOC F(ABRSUM) DUMMY";
"ALLOC F(SYSIN) DA('JEFFK.USER.CNTLLIB(VTOCSYIN)') SHR";
"ATTR ABRDCB RECFM(F B A) LRECL(133) BLKSIZE(1330)";
"ALLOC F(ABRMAP) USING(ABRDCB) UNIT(PAGEIO) SPACE(1 1)" ,
    "CYLINDERS NEW DELETE";
"CALL 'TECH.FDR.V5115.LOADLIB(FDRABRP)'";
"EXECIO * DISKR ABRMAP (FINIS STEM VTOCDATA.";
devtypes = "";
do i = 1 to vtocdata.0;
     select;
        when wordpos("DEVICE TYPE",vtocdata.i) ^= 0 then do;
                parse var vtocdata.i ,
                   . "DEVICE TYPE" unit "--" unitcount . ;
                devtypes = devtypes unit;
                volcount.unit = unitcount;
                end;
        when wordpos("TOTAL TRACKS",vtocdata.i) ^= 0 then do;
                parse var vtocdata.i ,
                   . "TOTAL TRACKS" trackcount . ;
                trackcount = reverse(strip(trackcount));
                parse var trackcount trackcount "-" . ;
                trackcount = reverse(trackcount);
                trackcount.unit = trackcount;
                end;
        when wordpos("ALLOCATED TRACKS",vtocdata.i) ^= 0 then do;
                parse var vtocdata.i ,
                   . "ALLOCATED TRACKS" trackcount . ;
                trackcount = reverse(strip(trackcount));
                parse var trackcount trackcount "-" . ;
                trackcount = reverse(trackcount);
                trackalloc.unit = trackcount;
                end;
        when wordpos("FREE TRACKS",vtocdata.i) ^= 0 then do;
                parse var vtocdata.i ,
                   . "FREE TRACKS" trackcount . ;
                trackcount = reverse(strip(trackcount));
                parse var trackcount trackcount "-" . ;
                trackcount = reverse(trackcount);
                trackfree.unit = trackcount;
                end;
        otherwise nop;
     end;
end;
typevols = words(devtypes); /* counter of different unit types */
total_dasd_space = 0;
alloc_dasd_space = 0;
free_dasd_space = 0;
do i = 1 to typevols;
    unit = word(devtypes,i);
    select;
        when substr(unit,1,4) = "3380" then do;
            tspace = (trackcount.unit*47476)/(1024*1024*1024);
            total_dasd_space = total_dasd_space + tspace;
            aspace = (trackalloc.unit*47476)/(1024*1024*1024);
            alloc_dasd_space = alloc_dasd_space + aspace;
            fspace = (trackfree.unit*47476)/(1024*1024*1024);
            free_dasd_space = free_dasd_space + fspace;
            end;
        when substr(unit,1,4) = "3390" then do;
            tspace = (trackcount.unit*56664)/(1024*1024*1024);
            total_dasd_space = total_dasd_space + tspace;
            aspace = (trackalloc.unit*56664)/(1024*1024*1024);
            alloc_dasd_space = alloc_dasd_space + aspace;
            fspace = (trackfree.unit*56664)/(1024*1024*1024);
            free_dasd_space = free_dasd_space + fspace;
            end;
        otherwise nop;
    end;
end;
"VMFCLEAR";
say "--------------------DASD Farm Space Summary--------------------";
say "Total DASD space:" total_dasd_space "GB.";
say "";
say "Allocated DASD space:" alloc_dasd_space "GB.";
say "";
say "Free DASD space:" free_dasd_space "GB.";
exit 0;
