//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M
//S EXEC ASMHCLG,PARM.L='XREF,LIST'
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//         DD DSN=SYSM.AMACLIB,DISP=SHR
//C.SYSIN  DD *
XCAT     TITLE 'Xcat'
XCAT     CSECT , /* Dataset Services */
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
K0       EQU   0
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K13      EQU   13
K14      EQU   14
K15      EQU   15
K16      EQU   16
K17      EQU   17
K18      EQU   18
K19      EQU   19
K20      EQU   20
K24      EQU   24
K26      EQU   26
K28      EQU   28
K32      EQU   32
K36      EQU   36
K40      EQU   40
K44      EQU   44
K45      EQU   45
K48      EQU   48
K52      EQU   52
K56      EQU   56
K59      EQU   59
K60      EQU   60
K64      EQU   64
K68      EQU   68
K72      EQU   72
K76      EQU   76
K80      EQU   80
K84      EQU   84
K88      EQU   88
K92      EQU   92
K96      EQU   96
K100     EQU   100
K128     EQU   128
K255     EQU   255
K256     EQU   256
K512     EQU   512
K4095    EQU   4095
K32760   EQU   32760
X80      EQU   X'80'
X40      EQU   X'40'
X20      EQU   X'20'
X10      EQU   X'10'
X08      EQU   X'08'
X04      EQU   X'04'
X02      EQU   X'02'
X01      EQU   X'01'
X7F      EQU   X'7F'
XFF      EQU   X'FF'
XCAT     AMODE 31
XCAT     RMODE 24
         SAVE  (14,12),,XCAT*&SYSDATE*&SYSTIME
         LR    RA,RF /* Addressability */
         USING XCAT,RA,RB,RC
         LA    RB,K4095(,RA)
         LA    RB,K1(,RB)
         LA    RC,K4095(,RB)
         LA    RC,K1(,RC)
         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/
         SPLEVEL SET=2 , /* MVS/XA EXPANSION */
         LA    R0,DWORDS
         GETMAIN R,LV=(0),LOC=BELOW
         LR    RD,R1
         ST    RD,K8(,R2)
         ST    R2,K4(,RD)
         USING XCATWMAP,RD
         USING PSA,R0 /* Map PSA */
         L     R4,FLCCVT /* CVT pointer */
         DROP  R0
         USING CVT,R4 /* Map CVT */
         L     R4,CVTCBSP /* AMCBS pointer */
         DROP  R4
         USING AMCBS,R4 /* Map SP 245 key 0 */
         L     R4,CBSCAXCN /* Pointer to CAXWA chain */
         DROP  R4
         USING IGGCAXWA,R4 /* Map Catalog Work Area */
LOOKUCAT CLC   CAXCNAM(K44),=CL44'SYS1.UCATFDR.CLUSTER'
         BE    LOCUCAT /* Yes */
         ICM   R4,K15,CAXCHN /* Scan active catalog chain */
         BNZ   LOOKUCAT /* Loop */
LOCUCAT  MVC   UCATACB,CAXACB /* Save user catalog ACB ptr */
         DROP  R4
         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */
         LA    R9,SVC26PRM /* Map parm */
         USING CTGPL,R9
         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */
         OI    CTGOPTN2,CTGGTNXT+CTGBOTH
         OI    CTGOPTN3,CTGCMS+CTGAM0
         OI    CTGOPTNS,CTGLTCAT
         LA    R0,CTGENTP /* Req dsn area */
         ST    R0,CTGENT ...
         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */
         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...
         LA    R0,UCATACB /* Req cat area */
         ST    R0,CTGCAT ...
         XC    CATRESP,CATRESP /* Clear cat response area */
         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */
         LA    R0,K512      /* Tell sys len */
         STCM  R0,K3,CATRESP ...
         LA    R0,CATRESP /* Tell sys address */
         ST    R0,CTGWKA ...
         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/
         LA    RF,K4 /* Max # CTGFL entries */
         STC   RF,CTGNOFLD /* Tell sys */
         LA    RE,CTGFIELD /* CTGFL pointers */
         LA    R1,CTGFLS /* Actual CTGFLs */
         USING CTGFL,R1 /* Map */
CTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */
         SLR   R0,R0 /* Calc size of this CTGFL */
         IC    R0,CTGFLDNO /* # of variable len fields */
         SLL   R0,K3 /* Each var field is 8 bytes */
         ALR   R1,R0 /* Ptr to next CTGFL in stor */
         LA    R1,CTGFLL(,R1) /* Factor in fixed len */
         LA    RE,K4(,RE) /* Next CTGFL ptr loc */
         BCT   RF,CTGSETL /* Loop for all fields */
         DROP  R1
         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */
         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...
         MVC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKDUMP.V' /*scan    */
         MVI   CTGTYPE,C'A'    /* Nvsam code */
CATSCANA LA    R1,SVC26PRM /* Cat serv param */
         SVC   26 , /* Service */
         CLM   RF,K1,=AL1(K40) /* RC 40 return */
         BE    XRC40 /* Ignore it */
         LTR   RF,RF /* Scan until end */
         BNZ   CAEND ...
         USING CTGFL,R4
XRC40    LA    R4,RESPENTN /* Map entry name response */
         LM    R6,R7,CTGFLDAT /* Acquire len and address */
         MVC   CTGENTP(K44),K0(R7)  /* Als for cat scan;up key*/
         CLC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKDUMP.V' /*scan    */
         BNE   CAEND end loop
         MVC   VOLSER(K6),CTGENTP+K26 save volser
         SLR   RF,RF /* Add binary 1 to cat scan key */
         IC    RF,CTGENTP+K44-K1
         LA    RF,K1(,RF) ...
         STC   RF,CTGENTP+K44-K1
         LA    R4,RESPOWNR /* Map ownerid response */
         LM    R6,R7,CTGFLDAT /* Acquire len and address */
         MVC   VOLSTAT(K1),K0(R7) save status
         DROP  R4
         B     CATSCANA loop
CAEND    EQU   * *
         SLR   R9,R9 rc
MAINEXIT L     R2,K4(,RD)
         LR    R1,RD
         LA    R0,DWORDS
         FREEMAIN R,A=(1),LV=(0)
         LR    RD,R2
         LR    RF,R9
         RETURN (14,12),RC=(15)
         DROP  R9
CTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)
         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)
CTGFLSPL EQU   *-CTGFLSP /* Len */
MULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */
ENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */
ENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */
OWNERID  DC    CL8'OWNERID'    /* CTGFL field name */
NAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */
CATACB   DC    CL8'CATACB'     /* CTGFL field name */
         LTORG
XCATWMAP DSECT
SAVEAREA DC    (K18)A(K0)
VOLSER   DC    CL6' '
VOLSTAT  DC    CL1' '
UCATACB  DC    A(*-*) /* Master catalog ACB ptr */
CTGFLS   EQU   *
RESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)
RESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)
RESPOWNR DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)
RESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)
SVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */
CTGENTP  DC    CL44' ' /* Requested dsname for cat searches */
CATRESP  DC    CL256' ' /* Cat serv response area */
         DC    CL256' ' /* Cat serv response area */
DWORDS   EQU   ((((*-SAVEAREA)+K7)/K8)*K8)
         PRINT NOGEN
         IHAPSA
         CVT   DSECT=YES
AMCBS    DSECT , /* Access Method Control Block Structure */
         ORG   AMCBS+K20
CBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */
IGGCAXWA DSECT , /* Catalog Auxiliary Work Area */
         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */
CAXCHN   DC    A(*-*) ...
CAXFLGS  DC    AL1(*-*) /* Flags */
CAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */
         ORG   IGGCAXWA+K24
CAXACB   DC    A(*-*)   /* Catalog acb */
         ORG   IGGCAXWA+K28
CAXUCB   DC    A(*-*) /* UCB pointer */
         ORG   IGGCAXWA+K52
CAXCNAM  DC    CL44' ' /* Catalog name */
CTGPL    DSECT ,      /* Catalog parameter list */
CTGOPTN1 DS    X      /* First option byte */
CTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)
CTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */
CTGOPTN2 DS    X      /* Second option byte */
CTGGTNXT EQU   X'10'  /* LISTCAT get next option */
CTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */
CTGOPTN3 DS    X      /* Third option byte */
CTGCMS   EQU   X'80'  /* Catalog mgmt services req */
CTGAM0   EQU   X'01'  /* ICF/VSAM request */
CTGOPTN4 DS    X      /* Fourth option byte */
CTGENT   DS    A      /* Address of the catalog record id */
CTGCAT   DS    A      /* Address cat dsname or address cat acb */
CTGWKA   DS    A      /* Address callers workarea */
CTGDSORG DS    XL2    /* Superlocate DSORG */
         ORG   CTGDSORG
CTGOPTNS DS    XL2    /* Cat management services options */
CTGLTCAT EQU   X'20'  /* LISTCAT */
CTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */
CTGTYPE  DS    C      /* Cat record type */
CTGTUCAT EQU   C'U'   /* Usercat code */
CTGTANM  EQU   C'X'   /* Alias name */
CTGTALL  EQU   X'00'  /* Search all */
CTGNOFLD DS    X      /* CTGFIELD entry count */
CTGNEWNM DS    A      /* Alter new dsname ptr */
         ORG   CTGNEWNM
CTGFDBK  DS    XL2    /* Feedback area */
CTGFBFLG DS    XL2    /* Superlocate flags */
CTGJSCB  DS    A      /* JSCB  ptr */
CTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */
CTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */
CTGFL    DSECT , /* Filed entry map */
CTGFLDNO DS    X /* # entries in CTGFLDAT */
CTGFLDCD DS    X /* Fl test condition */
CTGFLDGC DS    X /* Type group code */
CTGFLDRE DS    X /* Test results */
CTGFLDWA DS    A /* Workarea; cat rcd field name info */
CTGFLDNM DS    A /* Address of the field name */
CTGFLCHN DS    A /* Address of CTGFL test or 0 */
CTGFLDAT EQU   * /* Start of len/address pairs */
CTGFLL   EQU   *-CTGFL
         END
/*
//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(XDSL),DISP=SHR,
//* UNIT=,SPACE=
//G.SYSUDUMP DD SYSOUT=*
