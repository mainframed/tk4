//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',
// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M
//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'
//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//C.SYSIN  DD *
IEF      TITLE 'IEFDB401 DYNAMIC ALLOC SCAN'
IEFDB401 CSECT , /* IEFDB401 */
* ADD SUBSYS=LAM FOR LIBRARIAN MASTER FILE ACCESSES
* CHECK FOR DDNAME LAMXCEPT ALLOCATED - CODE ON
* DO NOT INSERT SUBSYS=LAM IF CALLER IS FROM SVC
* CHECK FOR DSN BUILDING...MASTER
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
K0       EQU   0
K1       EQU   1
K2       EQU   2
K3       EQU   3
K4       EQU   4
K5       EQU   5
K6       EQU   6
K7       EQU   7
K8       EQU   8
K9       EQU   9
K10      EQU   10
K11      EQU   11
K12      EQU   12
K13      EQU   13
K14      EQU   14
K15      EQU   15
K16      EQU   16
K17      EQU   17
K18      EQU   18
K19      EQU   19
K20      EQU   20
K24      EQU   24
K28      EQU   28
K32      EQU   32
K36      EQU   36
K40      EQU   40
K44      EQU   44
K48      EQU   48
K52      EQU   52
K56      EQU   56
K60      EQU   60
K64      EQU   64
K68      EQU   68
K72      EQU   72
K76      EQU   76
K80      EQU   80
K84      EQU   84
K88      EQU   88
K92      EQU   92
K96      EQU   96
K255     EQU   255
K256     EQU   256
K512     EQU   512
K4095    EQU   4095
K32760   EQU   32760
X80      EQU   X'80'
X40      EQU   X'40'
X20      EQU   X'20'
X10      EQU   X'10'
X08      EQU   X'08'
X04      EQU   X'04'
X02      EQU   X'02'
X01      EQU   X'01'
X7F      EQU   X'7F'
XFF      EQU   X'FF'
IEFDB401 AMODE 31
IEFDB401 RMODE ANY
         SAVE  (14,12),,IEFDB401*&SYSDATE*&SYSTIME
         LR    RC,RF /*ADDRESSABILITY*/
         USING IEFDB401,RC
         SPLEVEL SET=2 , /* MVS/XA EXPANSION */
         LM    R2,RA,K0(R1) /* INPUT PARAM LIST */
* R2=SVC99 PARAM LIST, R3=WORK AREA CONTIG TO TEXT UNITS
* R4=WORKAREA LEN, R5=JOBNAME, R6=PRGMRNAME, R7=JOBACCT
* R8=STEPNAME, R9=EXEC PGMNAME, RA=EXECACCT
         L     R3,K0(,R3) PICKUP ADDR OF WORKAREA
         L     R4,K0(,R4) PICKUP WORKAREA LEN
         C     R4,=A(K32) OUR MIN LEN FOR TEXTUNIT PTR/TEXT UNITS
         BL    EXIT NO GOOD
         USING S99RB,R2
         CLI   S99VERB,S99VRBAL DSNAME ALLOCATION
         BNE   EXIT NO
         USING PSA,R0 /* SCAN THRU TIOT LOOKING FOR DDNAME */
         L     RF,PSATOLD
         DROP  R0
         USING TCB,RF
         L     RF,TCBTIO
         DROP  RF
         USING TIOT1,RF
         LA    RB,TIOENTRY
         DROP  RF
         USING TIOENTRY,RB
         SLR   RF,RF WORK
LOOPTIOT IC    RF,TIOELNGH
         LTR   RF,RF TIOT END
         BZ    EXIT NOT FOUND
         CLC   TIOEDDNM(8),=CL8'LAMXCEPT'  DDNAME ACTIVATION
         BE    ENDTIOT  YES
SCANTIOT LA    RB,0(RF,RB) NEXT TIOT ENTRY
         B     LOOPTIOT
ENDTIOT  EQU   * * FEATURE IS ACTIVATED
         USING S99TUPL,R3
         XC    S99TUPTR,S99TUPTR CLEAR OUR ADDTNL SUBSYS TEXT UNIT
         DROP  R3
         L     R2,S99TXTPP TEXT POINTERS PTR
         DROP  R2
         USING S99TUPL,R2
LOOKTUNT L     RF,S99TUPTR TEXT UNIT
         LR    R0,RF SEE IF TEXT UNIT PLACEHOLDER
         N     R0,=A(X'7FFFFFFF') STRIP LAST TEXT UNIT BIT
         BZ    NEXTTUNT YES; IS DUMMY PLACEHOLDER
         USING S99TUNIT,RF
         CLC   S99TUKEY,=AL2(DALDSNAM) DSNAME TEXT UNIT
         BE    CHECKDSN YES
         CLC   S99TUKEY,=AL2(DALSTATS) DISP TEXT UNIT
         BE    CHECKDSP YES
         CLC   S99TUKEY,=AL2(DALSSNM) SUBSYSTEM TEXT UNIT
         BE    EXIT USER HAS REQUESTED SUBSYS= ALREADY
NEXTTUNT LTR   RF,RF LAST TEXT UNIT
         BM    LASTTUNT YES
         LA    R2,L'S99TUPTR(,R2) NEXT TEXT UNIT PTR
         B     LOOKTUNT CONTINUE TEXT UNIT SCAN
CHECKDSP CLI   S99TUPAR,X04 DISP=NEW
         BE    EXIT LEAVE
         CLI   S99TUPAR,X02 DISP=MOD
         BE    EXIT LEAVE
         B     NEXTTUNT CONTINUE
CHECKDSN CLC   S99TULNG,=AL2(K8) MIN LEN OF X.MASTER
         BL    EXIT LEAVE, TOOO SHORT
         CLC   =C'BUILDING',S99TUPAR DSN HLQ REQUIRED
         BNE   EXIT NO, LEAVE
         LH    RB,S99TULNG DSN LEN
         LA    RB,S99TUPAR(RB) PTR TO DSN END
LOOKBACK BCTR  RB,K0 LAST CHAR IN DSN PTR
         CLI   K0(RB),C' ' BACKUP LOOKING FOR NONBLANKS
         BE    LOOKBACK YES
         S     RB,=A(K6) BACKUP TO LITERAL .MASTER
         CLC   =C'.MASTER',K0(RB) IS THIS A LIBRARIAN MASTER FILE
         BNE   EXIT NO, LEAVE
         DROP  R2
         USING S99TUPL,R3
         OI    S99TUPTR,S99TUPLN SET LIBRARIAN MASTER FOUND BIT
         B     NEXTTUNT CONTINUE
LASTTUNT TM    S99TUPTR,S99TUPLN FOUND A MASTER
         BZ    EXIT NO
         DROP  R3
         USING PSA,R0
         L     RB,PSATOLD /* OUR TCB */
         DROP  R0
         USING TCB,RB
         L     R6,TCBRBP /* RB CHAIN END */
         DROP  RB
         USING RBBASIC,R6
NEXTRB   TM    RBSTAB1,RBFTSVRB IS THIS AN SVRB
         BO    SVRB YES
         ICM   R6,K7,RBLINKB NEXT ONE BACKWARDS
NEXTRB1  CLM   RB,K7,RBLINKB AT CHAIN END
         BE    EXIT NO SVRB FOUND ??
         B     NEXTRB
SVRB     ICM   R6,K7,RBLINKB NEXT ONE BACKWARDS
         TM    RBSTAB1,RBFTP CALLING PRB
         BZ    YESPRB FOUND A PRB
         TM    RBSTAB1,RBFTSVRB IS THIS AN SVRB
         BNO   NEXTRB1 NO
YESPRB   BCTR  R6,K0 /* BACK ONE TO ARCHITECTED INTERRUPT CODE*/
         CLI   K0(R6),X'63' SVC 99 INTERRUPT CODE
         LA    R6,K1(,R6) FIX RB PTR FIRST
         BNE   NEXTRB1 NO CONTINUE SEARCH
         TM    RBSTAB1,RBFTSVRB IS THIS AN SVRB CALLER TO SVC 99
         BO    EXIT YES
         L     R0,RBOPSWA  CALLERS PSW ADDRESS
         X     R0,=A(X'7FFFFFFF') AMODE BIT OFF
         L     RB,CVTPTR /* LOCATE LOW LPA = WHERE LAMMVS IS */
         USING CVT,RB
         CL    R0,CVTSHRVM BELOW LOW CSA IS OK
         BL    PRBOK ...
         L     RB,CVTSMEXT VSTOR MAP
         DROP  RB
         USING CVTVSTGX,RB
         CL    R0,CVTPLPAE PLPA END ADDRESS
         BL    EXIT NO GOOD
         DROP  R6
         USING S99TUPL,R2
PRBOK    NI    S99TUPTR,X7F TURN OFF EXISTING LAST TEXT UNIT BIT
         DROP  R2
         USING S99TUPL,R3
         LA    RF,L'S99TUPTR+L'S99TUPTR(,R3) WORKAREA SPOT FOR TEXTU
         ST    RF,S99TUPTR SET TEXT UNIT PTR
         MVC   S99TUKEY,=AL2(DALSSNM) SUBSYS NAME REQ
         MVC   S99TUNUM,=AL2(K1) 1 PARAM NUMBER
         MVC   S99TULNG,=AL2(L'LAM)
         MVC   S99TUPAR(L'LAM),LAM
*        LA    R3,L'S99TUPTR(,R3) LAST TEXT UNIT
*        LA    RF,L'S99TUKEY+L'S99TUNUM+L'S99TULNG+L'LAM(,RF)
*        ST    RF,S99TUPTR SET TEXT UNIT PTR
         OI    S99TUPTR,S99TUPLN SET TEXT UNIT END BIT
*        MVC   S99TUKEY,=AL2(DALSSPRM) SUBSYS PARM REQ
*        MVC   S99TUNUM,=AL2(K1) 1 PARAM NUMBER
*        MVC   S99TULNG,=AL2(L'JFCBU)
*        MVC   S99TUPAR(L'JFCBU),JFCBU
         DROP  R3,RF
*        LM    R2,RA,K0(R1) /* INPUT PARAM LIST */
* R2=SVC99 PARAM LIST, R3=WORK AREA CONTIG TO TEXT UNITS
* R4=WORKAREA LEN, R5=JOBNAME, R6=PRGMRNAME, R7=JOBACCT
* R8=STEPNAME, R9=EXEC PGMNAME, RA=EXECACCT
*        L     R3,K0(,R3) PICKUP ADDR OF WORKAREA
*        LA    R3,K64(,R3) SKIP USED FRONT PORTION */
*        MVC   K0(WTOLL,R3),WTOL
*        MVC   4(8,R3),0(R5)
*        MVC   13(8,R3),0(R8)
*        MVC   22(8,R3),0(R9)
*        USING S99RB,R2
*        L     R2,S99TXTPP TEXT POINTERS PTR
*        DROP  R2
*        USING S99TUPL,R2
*LOOPTUNT L     R4,S99TUPTR TEXT UNIT
*        N     R4,=A(X'7FFFFFFF')
*        BZ    NXT
*        UNPK  31(13,R3),0(7,R4)
*        MVI   43(R3),C' '
*        TR    31(12,R3),TABL-C'0'
*        MVC   45(6,R3),=CL6' '
*        CLI   K5(R4),X'06'
*        BL    WTODO
*        MVC   45(6,R3),6(R4)
*WTODO   WTO ,MF=(E,(R3))
*NXT     TM    S99TUPTR,X80 LAST TEXT UNIT
*        BO    EXIT1    YES
*        LA    R2,L'S99TUPTR(,R2) NEXT TEXT UNIT PTR
*        B     LOOPTUNT CONTINUE TEXT UNIT SCAN
*EXIT1   WTO   'IEFDB401 END'
EXIT     RETURN (14,12),RC=0
LAM      DC    C'LAM ' SUBSYS=LAM
*JFCBU    DC    C'JFCB=U'
*WTOL WTO 'XXXXXXXX/XXXXXXXX/XXXXXXXX/XXXXXXXXXXXXX/??????',MF=L
*WTOLL EQU *-WTOL
*TABL DC C'0123456789ABCDEF'
         LTORG
         PRINT NOGEN
         IEFTIOT1
         IEFZB4D0
         IEFZB4D2
         IHAPSA
         CVT  DSECT=YES
         IKJTCB
         IHARB LIST=YES
         IEFJESCT TYPE=DSECT
         IEFJSCVT
         IEFJSSVT
         END
/*
//L.SYSLMOD DD DSN=IPO1.LINKLIB(IEFDB401),DISP=SHR,
//  UNIT=3390,SPACE=,VOL=SER=MCSRES
