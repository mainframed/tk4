./ ADD NAME=BCKSYSS1 0140-91143-92181-1231-00434-00049-00000-JOEF
//&JNM JOB (A006,SYTM,999,9999),'ROOM &RN GLBL/DLIB BK',
//         CLASS=V,MSGCLASS=V,REGION=8M,
//         NOTIFY=&ZUSER
//*
//*        LIB: XSYS.MVSESA.SKELS(BCKSYSS1)
//*        GDE: K. TOMIAK
//*        DOC: BACKUP GLOBAL AND DLIB VOLUMES
//*
//*        UPT: MEMBER UPDATED WITH JNM / RN VARIABLES, VOLSERS REMOVED
//*             FOR SMPLOG/SMPLOGA DD STATEMENTS IN DLIB AND CDLIB
//*             ZONES.  (SWS-06/92)
//*
//*        HST: JOB JCL GENERATED ON SYSTEM &SYSID BY USER &ZUSER
//*             ON: &ZDATE (&ZJDATE) AT &ZTIME
//*
//**********************************************************************
//*        UNCATALOG THE OLD FULL VOLUME BACKUP TAPES
//**********************************************************************
//*
//SCRAPIT  EXEC  PGM=IDCAMS,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE   SMPE.BACKUP.LVL&OLDLV..SMPGL1.*                            -
           NOSCRATCH
  DELETE   SMPE.BACKUP.LVL&OLDLV..SMPDL1                              -
           NOSCRATCH

  SET      MAXCC = 0
/*
//*
//**********************************************************************
//*        GLOBAL FULL VOLUME BACKUP
//**********************************************************************
//*
//GLOBAL   EXEC  PGM=FDR,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=Z
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPGL1
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SMPGL1.GLV&GLV.,
//             DISP=(NEW,CATLG),
//             UNIT=(CART,2),LABEL=(01,SL,EXPDT=99000),
//             VOL=(,,,06)
//*
//**********************************************************************
//*        MAP    GLOBAL VOLUME
//**********************************************************************
//*
//GLBLMAP  EXEC  PGM=FDRCPK,
//         PARM='MAP HI=NO'
//SYSPRINT DD  SYSOUT=*
//SYSMAP   DD  SYSOUT=*
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPGL1
//SYSIN    DD  DUMMY
//*
//**********************************************************************
//*        REPORT GLOBAL VOLUME
//**********************************************************************
//*
//GLBLRPT  EXEC  PGM=FDREPORT
//SYSPRINT DD  SYSOUT=*
//SYSMAP   DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPGL1
//SYSIN    DD  DSN=XSYS.MVSESA.DATA(FDRPTGV),DISP=SHR
//*
//**********************************************************************
//*        DOCUMENT GLOBAL BACKUP
//**********************************************************************
//*
//DOCBKPGG EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM=('%BATCH DOCBKP PARMA(GLOBAL)',
//         'PARMB(SMPGL1) PARMC(DLIB) PARMD(&LV) PARME(&GLV)'),
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//ISPLIST  DD  SYSOUT=*,
//             DCB=(RECFM=FBA,LRECL=121)
//ISPLOG   DD  SYSOUT=*,
//             DCB=(RECFM=VA,LRECL=125)
//ISPPROF  DD  DSN=&&PROFILE,DISP=(NEW,DELETE,DELETE),
//             UNIT=SYSDA,
//             SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,LRECL=80)
//ISPLLIB  DD  DSN=ISR.ISRLOAD,DISP=SHR
//         DD  DSN=ISP.ISPLOAD,DISP=SHR
//ISPPLIB  DD  DSN=ISR.ISRPENU,DISP=SHR
//         DD  DSN=ISP.ISPPENU,DISP=SHR
//ISPMLIB  DD  DSN=ISR.ISRMENU,DISP=SHR
//         DD  DSN=ISP.ISPMENU,DISP=SHR
//ISPSLIB  DD  DSN=ISR.ISRSENU,DISP=SHR
//         DD  DSN=ISP.ISPSLIB,DISP=SHR
//ISPTLIB  DD  DSN=ISR.ISRTLIB,DISP=SHR
//         DD  DSN=ISP.ISPTENU,DISP=SHR
//*
//**********************************************************************
//*        LIST GLOBAL SMPLOG
//**********************************************************************
//*
//LOGLST   EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.GLOBAL.SMPLOG,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(SMPGL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM GLOBAL SMPLOG
//**********************************************************************
//*
//LOGHST   EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOG',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.SMPGL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR GLOBAL SMPLOG
//**********************************************************************
//*
//LOGCLR   EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DSN=SMPE.GLOBAL.SMPLOG,DISP=OLD
//*
//**********************************************************************
//*        LIST GLOBAL SMPLOGA
//**********************************************************************
//*
//LOGALST  EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.GLOBAL.SMPLOGA,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(SMPGL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM GLOBAL SMPLOGA
//**********************************************************************
//*
//LOGAHST  EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOGA',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.SMPGL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR GLOBAL SMPLOGA
//**********************************************************************
//*
//LOGACLR  EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DSN=SMPE.GLOBAL.SMPLOGA,DISP=OLD
//*
//**********************************************************************
//*        DLIB   FULL VOLUME BACKUP
//**********************************************************************
//*
//DLIBS    EXEC  PGM=FDR,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=Z
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPDL1
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SMPDL1,DISP=(NEW,CATLG),
//             UNIT=(CART,2),LABEL=(01,SL,EXPDT=99000),
//             VOL=(,,,06)
//*
//**********************************************************************
//*        MAP    DLIB   VOLUME
//**********************************************************************
//*
//DLIBMAP  EXEC  PGM=FDRCPK,
//         PARM='MAP HI=NO'
//SYSPRINT DD  SYSOUT=*
//SYSMAP   DD  SYSOUT=*
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPDL1
//SYSIN    DD  DUMMY
//*
//**********************************************************************
//*        REPORT DLIB   VOLUME
//**********************************************************************
//*
//DLIBRPT  EXEC  PGM=FDREPORT
//SYSPRINT DD  SYSOUT=*
//SYSMAP   DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPDL1
//SYSIN    DD  DSN=XSYS.MVSESA.DATA(FDRPTDV),DISP=SHR
//*
//**********************************************************************
//*        DOCUMENT DLIB   BACKUP
//**********************************************************************
//*
//DOCBKPGD EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM=('%BATCH DOCBKP PARMA(SMPDL1)',
//         'PARMB(SMPDL1) PARMC(DLIB) PARMD(&LV) PARME(00)'),
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//ISPLIST  DD  SYSOUT=*,
//             DCB=(RECFM=FBA,LRECL=121)
//ISPLOG   DD  SYSOUT=*,
//             DCB=(RECFM=VA,LRECL=125)
//ISPPROF  DD  DSN=&&PROFILE,DISP=(NEW,DELETE,DELETE),
//             UNIT=SYSDA,
//             SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,LRECL=80)
//ISPLLIB  DD  DSN=ISR.ISRLOAD,DISP=SHR
//         DD  DSN=ISP.ISPLOAD,DISP=SHR
//ISPPLIB  DD  DSN=ISR.ISRPENU,DISP=SHR
//         DD  DSN=ISP.ISPPENU,DISP=SHR
//ISPMLIB  DD  DSN=ISR.ISRMENU,DISP=SHR
//         DD  DSN=ISP.ISPMENU,DISP=SHR
//ISPSLIB  DD  DSN=ISR.ISRSENU,DISP=SHR
//         DD  DSN=ISP.ISPSLIB,DISP=SHR
//ISPTLIB  DD  DSN=ISR.ISRTLIB,DISP=SHR
//         DD  DSN=ISP.ISPTENU,DISP=SHR
//*
//*        -------------------------------------------------------------
//*        MVS MAIN FEATURES (BCP ZONE)
//*        -------------------------------------------------------------
//*
//**********************************************************************
//*        LIST DLIB   SMPLOG
//**********************************************************************
//*
//LOGLSTD  EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.SMPDL1.SMPLOG,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(SMPDL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM DLIB   SMPLOG
//**********************************************************************
//*
//LOGHSTD  EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOG',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.SMPDL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR DLIB   SMPLOG
//**********************************************************************
//*
//LOGCLRD  EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.SMPDL1.SMPLOG
//SYSUT2   DD  DSN=SMPE.SMPDL1.SMPLOG,DISP=OLD
//*
//**********************************************************************
//*        LIST DLIB   SMPLOGA
//**********************************************************************
//*
//LOGALSTD EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.SMPDL1.SMPLOGA,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(SMPDL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM DLIB   SMPLOGA
//**********************************************************************
//*
//LOGAHSTD EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOGA',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.SMPDL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR DLIB   SMPLOGA
//**********************************************************************
//*
//LOGACLRD EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.SMPDL1.SMPLOGA
//SYSUT2   DD  DSN=SMPE.SMPDL1.SMPLOGA,DISP=OLD
//*
//*        -------------------------------------------------------------
//*        MVS SECONDARY FEATURES (COMPILER ZONE)
//*        -------------------------------------------------------------
//*
//**********************************************************************
//*        LIST DLIB   SMPLOG  - COMPILER
//**********************************************************************
//*
//LOGLSTC  EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.CSMPDL1.SMPLOG,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(CSMPDL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM DLIB   SMPLOG  - COMPILER
//**********************************************************************
//*
//LOGHSTC  EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOG',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.CSMPDL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR DLIB   SMPLOG  - COMPILER
//**********************************************************************
//*
//LOGCLRC  EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.CSMPDL1.SMPLOG
//SYSUT2   DD  DSN=SMPE.CSMPDL1.SMPLOG,DISP=OLD
//*
//**********************************************************************
//*        LIST  DLIB   SMPLOGA - COMPILER
//**********************************************************************
//*
//LOGALSTC EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.CSMPDL1.SMPLOGA,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(CSMPDL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM DLIB   SMPLOGA - COMPILER
//**********************************************************************
//*
//LOGAHSTC EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOGA',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.CSMPDL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR DLIB   SMPLOGA - COMPILER
//**********************************************************************
//*
//LOGACLRC EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.CSMPDL1.SMPLOGA
//SYSUT2   DD  DSN=SMPE.CSMPDL1.SMPLOGA,DISP=OLD
//*
//**********************************************************************
//*        EOJ
//**********************************************************************
//
./ ADD NAME=BCKSYSS2 0112-91144-92171-0923-00186-00051-00000-SXSCSC
//&JNM JOB (A006,SYTM,999,9999),'ROOM &RN GLOBAL BKUP ',
//         CLASS=V,MSGCLASS=V,REGION=8M,
//         NOTIFY=&ZUSER
//*
//*        LIB: XSYS.MVSESA.SKELS(BCKSYSS2)
//*        GDE: K. TOMIAK
//*        DOC: BACKUP GLOBAL VOLUME
//*
//*        UPT: MEMBER UPDATED WITH JNM / RN VARIABLES, VOLSERS REMOVED
//*             FOR SMPLOG/SMPLOGA DD STATEMENTS IN DLIB AND CDLIB
//*             ZONES.  (SWS-06/92)
//*
//*        HST: JOB JCL GENERATED ON SYSTEM &SYSID BY USER &ZUSER
//*             ON: &ZDATE (&ZJDATE) AT &ZTIME
//*
//**********************************************************************
//*        UNCATALOG THE OLD FULL VOLUME BACKUP TAPES
//**********************************************************************
//*
//SCRAPIT  EXEC  PGM=IDCAMS,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE   SMPE.BACKUP.LVL&OLDLV..SMPGL1.*                            -
           NOSCRATCH

  SET      MAXCC = 0
/*
//*
//**********************************************************************
//*        GLOBAL FULL VOLUME BACKUP
//**********************************************************************
//*
//GLOBAL   EXEC  PGM=FDR,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=Z
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPGL1
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SMPGL1,DISP=(NEW,CATLG),
//             UNIT=(CART,2),LABEL=(01,SL,EXPDT=99000),
//             VOL=(,,,06)
//*
//**********************************************************************
//*        MAP    GLOBAL VOLUME
//**********************************************************************
//*
//GLBLMAP  EXEC  PGM=FDRCPK,
//         PARM='MAP HI=NO'
//SYSPRINT DD  SYSOUT=*
//SYSMAP   DD  SYSOUT=*
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPGL1
//SYSIN    DD  DUMMY
//*
//**********************************************************************
//*        REPORT GLOBAL VOLUME
//**********************************************************************
//*
//GLBLRPT  EXEC  PGM=FDREPORT
//SYSPRINT DD  SYSOUT=*
//SYSMAP   DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//DISK1    DD  DISP=OLD,
//             UNIT=SYSDA,VOL=SER=SMPGL1
//SYSIN    DD  DSN=XSYS.MVSESA.DATA(FDRPTGV),DISP=SHR
//*
//**********************************************************************
//*        DOCUMENT GLOBAL BACKUP
//**********************************************************************
//*
//DOCBKPGG EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM=('%BATCH DOCBKP PARMA(SMPGL1)',
//         'PARMB(SMPGL1) PARMC(GLOBAL) PARMD(&LV) PARME(00)'),
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//ISPLIST  DD  SYSOUT=*,
//             DCB=(RECFM=FBA,LRECL=121)
//ISPLOG   DD  SYSOUT=*,
//             DCB=(RECFM=VA,LRECL=125)
//ISPPROF  DD  DSN=&&PROFILE,DISP=(NEW,DELETE,DELETE),
//             UNIT=SYSDA,
//             SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,LRECL=80)
//ISPLLIB  DD  DSN=ISR.ISRLOAD,DISP=SHR
//         DD  DSN=ISP.ISPLOAD,DISP=SHR
//ISPPLIB  DD  DSN=ISR.ISRPENU,DISP=SHR
//         DD  DSN=ISP.ISPPENU,DISP=SHR
//ISPMLIB  DD  DSN=ISR.ISRMENU,DISP=SHR
//         DD  DSN=ISP.ISPMENU,DISP=SHR
//ISPSLIB  DD  DSN=ISR.ISRSENU,DISP=SHR
//         DD  DSN=ISP.ISPSLIB,DISP=SHR
//ISPTLIB  DD  DSN=ISR.ISRTLIB,DISP=SHR
//         DD  DSN=ISP.ISPTENU,DISP=SHR
//*
//**********************************************************************
//*        LIST GLOBAL SMPLOG
//**********************************************************************
//*
//LOGLST   EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.GLOBAL.SMPLOG,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(SMPGL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM GLOBAL SMPLOG
//**********************************************************************
//*
//LOGHST   EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOG',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.SMPGL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR GLOBAL SMPLOG
//**********************************************************************
//*
//LOGCLR   EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DSN=SMPE.GLOBAL.SMPLOG,DISP=OLD
//*
//**********************************************************************
//*        LIST GLOBAL SMPLOGA
//**********************************************************************
//*
//LOGALST  EXEC  PGM=GIMSMP,
//         PARM='CSI=SMPE.GLOBAL.CSI'
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,LRECL=200)
//SMPLOG   DD  DSN=SMPE.GLOBAL.SMPLOGA,DISP=MOD
//SMPCNTL  DD  DSN=XSYS.MVSESA.DATA(SMPGL1),DISP=SHR
//         DD  DSN=XSYS.MVSESA.DATA(LISTLOG),DISP=SHR
//*
//**********************************************************************
//*        CAPTURE SMPCNTL STATEMENTS FROM GLOBAL SMPLOGA
//**********************************************************************
//*
//LOGAHST  EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM='%SMPELOGR &LV SMPLOGA',
//         COND=(00,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//SMPLIST  DD  DSN=&&&&LISTLOG,DISP=(OLD,DELETE)
//HIGHLITE DD  DSN=SMPE.SMPGL1.HISTORY,DISP=MOD
//*
//**********************************************************************
//*        CLEAR GLOBAL SMPLOGA
//**********************************************************************
//*
//LOGACLR  EXEC  PGM=IEBGENER,
//         COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//             DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DSN=SMPE.GLOBAL.SMPLOGA,DISP=OLD
//*
//**********************************************************************
//*        EOJ
//**********************************************************************
//
./ ADD NAME=BCKSYSS3 0101-91149-91149-1352-00158-00154-00008-DMV0016
//&ZUSER.M JOB (A006,SYTM),'ROOM28: BACKUP',
//             NOTIFY=&ZUSER,
//             CLASS=J,MSGCLASS=X
//*
/*ROUTE XEQ DOFNY
/*JOBPARM LINES=9999
//*
//MYPROCS JCLLIB ORDER=(XSYS.MVSESA.PROCLIB)
//*
//* LIB: XSYS.MVSESA.SKELS(BCKSYSS3)
//* GDE: K. TOMIAK
//* DOC: BACKUP TARGET LOGS.
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
//***********************************************************
//*   MVS MAIN FEATURES                                     *
//***********************************************************
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGLST  EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TGTVOL)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGHST  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOG'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SYSRES.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGCLR  EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DISP=OLD,DSN=SMPE.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGALST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TGTVOL)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGAHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOGA'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SYSRES.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGACLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DISP=OLD,DSN=SMPE.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//***********************************************************
//*   MVS SECONDARY FEATURES (COMPILERS)                    *
//***********************************************************
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGBLST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SYS1.COMPILER.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TGTVOL)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGBHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOG'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.CSYSRES.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGBCLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DISP=OLD,DSN=SYS1.COMPILER.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGDLST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SYS1.COMPILER.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TGTVOL)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGDHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOGA'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.CSYSRES.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGDCLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DISP=OLD,DSN=SYS1.COMPILER.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=&TGTVOL
//
./ ADD NAME=BCKSYS1O 0100-92170-92170-1006-00299-00299-00000-SXSCSC
//&ZUSER.M JOB (A006,SYTM,999,999),'ROOM28: BACKUP',REGION=8M,
//             CLASS=V,MSGCLASS=V,NOTIFY=&ZUSER
//*
//* LIB: XSYS.MVSESA.SKELS(BCKSYSS1)
//* GDE: K. TOMIAK
//* DOC: BACKUP GLOBAL AND DLIBS.
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
//***********************************************************
//*      UNCATALOG THE OLD BACKUP                           *
//***********************************************************
//SCRAPIT EXEC PGM=IDCAMS,COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE SMPE.BACKUP.LVL&OLDLV..SMPGL1.* NOSCRATCH
  DELETE SMPE.BACKUP.LVL&OLDLV..SMPDL1 NOSCRATCH
  SET MAXCC = 0
/*
//***********************************************************
//*      TAKE A BACKUP OF THE GLOBAL VOLUME                 *
//***********************************************************
//GLOBAL  EXEC PGM=FDR,COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=SMPGL1
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SMPGL1.GLV&GLV.,UNIT=CART,
//             LABEL=(1,SL,EXPDT=99000),DISP=(,CATLG),
//             VOL=(,,,20)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT GLOBAL BACKUP                             *
//***********************************************************
//DOCBKPG EXEC PGM=IKJEFT01,DYNAMNBR=35,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(GLOBAL)',
//             'PARMB(SMPGL1) PARMC(DLIB) PARMD((&LV) PARME(&GLV)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//***********************************************************
//*      LIST SMPLOG                                        *
//***********************************************************
//LOGLST  EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.GLOBAL.SMPLOG
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(SMPGL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGHST  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOG'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SMPGL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGCLR  EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DISP=OLD,DSN=SMPE.GLOBAL.SMPLOG
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGALST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.GLOBAL.SMPLOGA
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(SMPGL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGAHST EXEC PGM=IKJEFT01,DYNAMNBR=35,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOGA'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SMPGL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGACLR EXEC PGM=IEBGENER,COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DISP=OLD,DSN=SMPE.GLOBAL.SMPLOGA
//***********************************************************
//*      TAKE A BACKUP OF THE DLIB VOLUME                   *
//***********************************************************
//DLIBS   EXEC PGM=FDR,COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=SMPDL1
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SMPDL1,UNIT=CART,
//             LABEL=(1,SL,EXPDT=99000),DISP=(,CATLG),
//             VOL=(,,,20)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT DLIB   BACKUP                             *
//***********************************************************
//DOCBKPG EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(SMPDL1)',
//             'PARMB(SMPDL1) PARMC(DLIB) PARMD(&LV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//***********************************************************
//*   MVS MAIN FEATURES                                     *
//***********************************************************
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGBLST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(SMPDL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGBHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOG'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SMPDL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGBCLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DISP=OLD,DSN=SMPE.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGCLST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(SMPDL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGCHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOGA'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SMPDL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGCCLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DISP=OLD,DSN=SMPE.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//***********************************************************
//*   MVS SECONDARY FEATURES (COMPILERS)                    *
//***********************************************************
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGDLST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.CSMPDL1.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(CSMPDL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGDHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOG'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.CSMPDL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGDCLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DISP=OLD,DSN=SMPE.CSMPDL1.SMPLOG,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGELST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.CSMPDL1.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(CSMPDL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGEHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOGA'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.CSMPDL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGECLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DISP=OLD,DSN=SMPE.CSMPDL1.SMPLOGA,
//             UNIT=SYSALLDA,VOL=SER=SMPDL1
//
./ ADD NAME=BCKSYS2O 0100-92170-92170-1653-00125-00125-00000-SXSCSC
//&ZUSER.M JOB (A006,SYTM,999,999),'ROOM28: BACKUP',
//             NOTIFY=&ZUSER,
//             CLASS=V,MSGCLASS=V
//*
//MYPROCS JCLLIB ORDER=(XSYS.MVSESA.PROCLIB)
//*
//* LIB: XSYS.MVSESA.SKELS(BCKSYSS2)
//* GDE: K. TOMIAK
//* DOC: BACKUP GLOBAL.
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
//***********************************************************
//*      UNCATALOG THE OLD BACKUP                           *
//***********************************************************
//SCRAPIT EXEC PGM=IDCAMS,REGION=1024K,COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE SMPE.BACKUP.LVL&OLDLV..SMPGL1 NOSCRATCH
  SET MAXCC = 0
/*
//***********************************************************
//*      TAKE A BACKUP OF THE GLOBAL VOLUME                 *
//***********************************************************
//GLOBAL  EXEC PGM=FDR,REGION=2000K,COND=(0,LT)
//STEPLIB  DD  DISP=SHR,DSN=FDRCPK.V5105P.LOADLIB
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=SMPGL1
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SMPGL1,UNIT=CART,
//             LABEL=(1,SL,EXPDT=99000),DISP=(,CATLG),
//             VOL=(,,,20)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT GLOBAL BACKUP                             *
//***********************************************************
//DOCBKPG EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(SMPGL1)',
//             'PARMB(SMPGL1) PARMC(GLOBAL) PARMD(&GLV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//***********************************************************
//*      LIST SMPLOG                                        *
//***********************************************************
//LOGLST  EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.GLOBAL.SMPLOG
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(SMPGL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGHST  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOG'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SMPGL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGCLR  EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOG
//SYSUT2   DD  DISP=OLD,DSN=SMPE.GLOBAL.SMPLOG
//***********************************************************
//*      LIST SMPLOGA                                       *
//***********************************************************
//LOGALST EXEC PROC=SMPPROC
//SMPLIST  DD  DISP=(NEW,PASS),DSN=&&&&LISTLOG,
//             UNIT=SYSALLDA,
//             SPACE=(CYL,(25,25),RLSE),
//             DCB=(DSORG=PS,RECFM=VBA,BLKSIZE=6144,LRECL=133)
//SMPLOG   DD  DISP=MOD,DSN=SMPE.GLOBAL.SMPLOGA
//SMPCNTL  DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(SMPGL1)
//         DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(LISTLOG)
//***********************************************************
//*      CAPTURE SMPCNTL STATEMENTS                         *
//***********************************************************
//LOGAHST EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=4096K,TIME=1200,
//             COND=(0,LT),
//             PARM='%SMPELOGR &LV SMPLOGA'
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//SMPLIST  DD  DISP=(OLD,DELETE),DSN=&&&&LISTLOG
//HIGHLITE DD  DISP=MOD,DSN=SMPE.SMPGL1.HISTORY
//***********************************************************
//*      CLEAR LOG                                          *
//***********************************************************
//LOGACLR EXEC PGM=IEBGENER,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,DCB=SMPE.GLOBAL.SMPLOGA
//SYSUT2   DD  DISP=OLD,DSN=SMPE.GLOBAL.SMPLOGA
//
./ ADD NAME=DOF      0100-91149-91149-1247-00003-00003-00000-DMV0016
)SEL &CPU EQ DOF
//STEPLIB  DD  DISP=SHR,DSN=FDRCPK.V5105P.LOADLIB
)ENDSEL
./ ADD NAME=LOADCOPY 0105-88347-91242-1148-00015-00012-00015-DMV0016
//*
//* DOC: THIS STEP COPIES A PDS TO TAPE.
//*
//STEP&CTR  EXEC PGM=IEBCOPY,REGION=512K,TIME=60
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  COPY INDD=SYSUT1,OUTDD=SYSUT2
/*
//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(TRK,(15,5))
//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(TRK,(15,5))
//SYSUT1   DD  DISP=SHR,DSN=&DATASETA
//SYSUT2   DD  DISP=(NEW,PASS),DSN=&DATASETB,
//             UNIT=TAPE,VOL=(,RETAIN,REF=*.&PREV..SYSUT2),
//             DCB=(TRTCH=NOCOMP),
//             LABEL=(&CTR,SL,EXPDT=98000)
./ ADD NAME=LOADGENR 0101-88347-89004-0919-00011-00009-00002-SYS004
//*
//* DOC: THIS STEP LOADS A PS TO TAPE.
//*
//STEP&CTR  EXEC PGM=IEBGENER,REGION=512K,TIME=60
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&DATASETA
//SYSUT2   DD  DISP=(NEW,PASS),DSN=&DATASETB,
//             UNIT=TAPE,VOL=(,RETAIN,REF=*.&PREV.SYSUT2),
//             LABEL=(&CTR,SL,EXPDT=98000),
//             DCB=&DATASETA
./ ADD NAME=LOADSTP1 0103-88347-89004-1343-00011-00009-00004-SYS004
//*
//* DOC: THIS STEP LOADS JCL TO UNLOAD THE TAPE.
//*
//STEP1   EXEC PGM=IEBGENER,REGION=512K,TIME=60
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&DATASETC
//SYSUT2   DD  DISP=(NEW,PASS),DSN=&DATASETB,
//             UNIT=TAPE,VOL=(,RETAIN),
//             LABEL=(1,SL,EXPDT=98000),
//             DCB=&DATASETD
./ ADD NAME=MIGSYSSO 0171-93274-93274-1054-00367-00367-00000-JOEF
//CLNRES   JOB (A006,SYTM,999,999),'ROOM28: MIGRATION',REGION=8M,
//             NOTIFY=&ZUSER,
)SEL &TGTSYS NE &SYSID
//             USER=&ZUSER,PASSWORD=________,
)ENDSEL
)CM   ----------------------------------------
)CM   FORCE JOB TO RUN ON CPU OF TARGET SYSRES
)CM   ----------------------------------------
)SEL &TGTSYS EQ DOFD
//             CLASS=J,MSGCLASS=X
//*
/*ROUTE   XEQ DOFNY
/*JOBPARM LINES=9999,SYSAFF=DOFD
)ENDSEL
)SEL &TGTSYS EQ DOFP
//             CLASS=J,MSGCLASS=X
//*
/*ROUTE   XEQ DOFNY
/*JOBPARM LINES=9999,SYSAFF=DOFP
)ENDSEL
)SEL &TGTSYS EQ MVSP
//             CLASS=Q,MSGCLASS=V
//*
/*ROUTE   XEQ CSCBATCH
/*JOBPARM LINES=9999,SYSAFF=MVSP
)ENDSEL
//*
//* LIB: XSYS.MVSESA.SKELS(MIGSYSS1)
//* GDE: J. PERLMAN AND K. TOMIAK
//* DOC: CLONE SYSRES VOLUMES &SRCVOL LEVEL(&LV) TO &TRGTVOL
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
)CM   -------------------------
)CM   BACKUP ON REQUEST ONLY!!!
)CM   -------------------------
)SEL &BACKUP EQ Y
//***********************************************************
//*      UNCATALOG THE OLD BACKUP                           *
//***********************************************************
//SCRAPIT EXEC PGM=IDCAMS,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE SMPE.BACKUP.LVL&OLDLV..SYSRES NOSCRATCH
  SET MAXCC = 0
//***********************************************************
//*      TAKE A BACKUP                                      *
//***********************************************************
//BACKUP  EXEC PGM=FDR,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&SRCVOL
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SYSRES,UNIT=(3480,2),
//             LABEL=(1,SL,EXPDT=99000),DISP=(NEW,CATLG),
//             VOL=(,,,20),DCB=(TRTCH=NOCOMP)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT TARGET BACKUP                             *
//***********************************************************
//DOCBKP  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(&SRCVOL)',
//             'PARMB(&SRCVOL) PARMC(SYSRES) PARMD(&LV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION OVER THE OLD SYSRES
)CM   -------------------------------------------------------
)SEL &OLDRES EQ Y
//***********************************************************
//*  DELETE ENTRY FROM GZONE ZONEINDEX                      *
//***********************************************************
//DELZONE EXEC PGM=GIMSMP,COND=(0,LT),TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      DEL GLOBALZONE ZONEINDEX((T&TRGTVOL)) .
      DEL GLOBALZONE ZONEINDEX((D&TRGTVOL)) .
    ENDUCL.
/*
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//DELOLD  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPE.T&TRGTVOL..CSI CLUSTER
  DELETE SMPE.D&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION ADD AN ENTRY TO THE ZONEINDEX
)CM   -------------------------------------------------------
)SEL &NEWRES EQ Y
//***********************************************************
//*  ADD AN ENTRY TO THE GZONE ZONEINDEX                    *
//***********************************************************
//ZONEIND EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      ADD GLOBALZONE ZONEINDEX((&TRGTVOL,SMPE.&TRGTVOL..CSI,TARGET)).
      ADD GLOBALZONE ZONEINDEX((C&TRGTVOL,SMPE.C&TRGTVOL..CSI,TARGET)).
    ENDUCL.
/*
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCC   EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TRGTVOL)
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCCC  EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(C&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TRGTVOL)
)ENDSEL
)CM   --------------------------------------------------------
)CM   NEVER TRY TO DELETE OLD TZONE FOR FIRST TIME MIGRATION!!
)CM   --------------------------------------------------------
)SEL &NEWRES EQ N
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//***********************************************************
//DELETE  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPE.&TRGTVOL..CSI CLUSTER
  DELETE SMPE.C&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
//***********************************************************
//*      COPY THE SYSRES                                    *
//***********************************************************
//COPYDSK EXEC PGM=ADRDSSU,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&SRCVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&SRCVOL
//&TRGTVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
 COPY  INDDNAME(&SRCVOL) -
       OUTDDNAME(&TRGTVOL) -
       PURGE                /* OVERLAY UNEXPIRED DATASETS */   +
       FULL                 /* DEFAULT - DUMP FULL VOLUME */
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//***********************************************************
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//REMOVOL EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
//***********************************************************
//*      DEFINE THE NEW TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//DEFCSI  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE CLUSTER( -
                 NAME(SMPE.&TRGTVOL..CSI) -
                 MODEL(SMPE.&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPE.&TRGTVOL..CSI.DATA) -
                 CYLINDERS(75 10) -
                ) -
         INDEX( -
                 NAME(SMPE.&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                )
  DEFINE CLUSTER( -
                 NAME(SMPE.C&TRGTVOL..CSI) -
                 MODEL(SMPE.C&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPE.C&TRGTVOL..CSI.DATA) -
                 CYLINDERS(25 10) -
                ) -
         INDEX( -
                 NAME(SMPE.C&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                )
/*
//***********************************************************
//*      INITIALIZE THE TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//ZPOOL   EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//&TRGTVOL   DD  DSN=SMPE.&TRGTVOL..CSI,DISP=SHR
//C&TRGTVOL  DD  DSN=SMPE.C&TRGTVOL..CSI,DISP=SHR
//ZPOOL    DD  DSN=SYS1.MACLIB(GIMZPOOL),DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  REPRO OUTFILE(&TRGTVOL) INFILE(ZPOOL)
  REPRO OUTFILE(C&TRGTVOL) INFILE(ZPOOL)
//***********************************************************
//*  ZONECOPY TO THE NEW SYSRES TARGET ZONE, AND            *
//*  ZONEEDIT THE DDDEF'S TO THE SYSRES VOLID               *
//***********************************************************
//ZONECPY EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1439
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPLOG   DD  DSN=SMPE.SMPLOG,DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SMPCNTL  DD  *
  SET BDY(&TRGTVOL) .
    ZONECOPY (&SRCVOL) INTO(&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(&TRGTVOL)
        RELATED(SMPDL1) .
    ENDUCL  .
  SET BDY(C&TRGTVOL) .
    ZONECOPY (C&SRCVOL) INTO(C&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(C&TRGTVOL)
        RELATED(CSMPDL1) .
    ENDUCL  .
  SET BDY(SMPDL1) .
    UCLIN .
      REP DZONE(SMPDL1)
        RELATED(&TRGTVOL) .
    ENDUCL  .
  SET BDY(CSMPDL1) .
    UCLIN .
      REP DZONE(CSMPDL1)
        RELATED(C&TRGTVOL) .
    ENDUCL  .
/*
//***********************************************************
//*      DOCUMENT CLONE                                     *
//***********************************************************
//DOCCLN  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             COND=(0,LT),
//             PARM=('%BATCH DOCTGT PARMA(&SRCVOL)',
//             'PARMB(&TRGTVOL) PARMC(&LV)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//STEP1    EXEC PGM=ASMLVL,PARM='&LV&TRGTVOL'
//STEPLIB  DD DSN=JOEF.USER.LOAD,DISP=SHR
//SYSLST   DD DSN=SYS1.LEVEL,UNIT=3390,DISP=SHR,VOL=SER=&TRGTVOL
//SYSUDUMP DD SYSOUT=*
./ ADD NAME=MIGSYSSZ 0136-93305-93326-1330-00421-00371-00000-JOEF
//CLNRES   JOB (A006,SYTM,999,999),'ROOM09: MIGRATION',REGION=8M,
//             NOTIFY=&ZUSER,
)SEL &TGTSYS NE &SYSID
//             USER=&ZUSER,PASSWORD=________,
)ENDSEL
)CM   ----------------------------------------
)CM   FORCE JOB TO RUN ON CPU OF TARGET SYSRES
)CM   ----------------------------------------
)SEL &TGTSYS EQ MVSZ
//             CLASS=J,MSGCLASS=V
//*
)ENDSEL
)SEL &TGTSYS EQ MVSW
//             CLASS=J,MSGCLASS=V
//*
)ENDSEL
)SEL &TGTSYS EQ MVSP
//             CLASS=Q,MSGCLASS=V
//*
/*ROUTE   XEQ CSCBATCH
/*JOBPARM LINES=9999,SYSAFF=MVSP
)ENDSEL
//*
//* LIB: XSYS.MVSESA.SKELS(MIGSYSSZ)
//* GDE: J. PERLMAN AND K. TOMIAK
//* DOC: CLONE SYSRES VOLUMES &SRCVOL LEVEL(&LV) TO &TRGTVOL
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
)CM   -------------------------
)CM   BACKUP ON REQUEST ONLY!!!
)CM   -------------------------
)SEL &BACKUP EQ Y
//***********************************************************
//*      UNCATALOG THE OLD BACKUP                           *
//***********************************************************
//SCRAPIT EXEC PGM=IDCAMS,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE SMPEZ.BACKUP.LVL&OLDLV..SYSRES NOSCRATCH
  SET MAXCC = 0
//***********************************************************
//*      TAKE A BACKUP                                      *
//***********************************************************
//BACKUP  EXEC PGM=FDR,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&SRCVOL
//TAPE1    DD  DSN=SMPEZ.BACKUP.LVL&LV..SYSRES,UNIT=(3480,2),
//             LABEL=(1,SL,EXPDT=99000),DISP=(NEW,CATLG),
//             VOL=(,,,20)                 ,DCB=(TRTCH=NOCOMP)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT TARGET BACKUP                             *
//***********************************************************
//DOCBKP  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(&SRCVOL)',
//             'PARMB(&SRCVOL) PARMC(SYSRES) PARMD(&LV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION OVER THE OLD SYSRES
)CM   -------------------------------------------------------
)SEL &OLDRES EQ Y
//***********************************************************
//*  DELETE ENTRY FROM GZONE ZONEINDEX                      *
//***********************************************************
//DELZONE EXEC PGM=GIMSMP,COND=(0,LT),TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPEZ.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      DEL GLOBALZONE ZONEINDEX((T&TRGTVOL)) .
      DEL GLOBALZONE ZONEINDEX((D&TRGTVOL)) .
    ENDUCL.
/*
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//DELOLD  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPEZ.T&TRGTVOL..CSI CLUSTER
  DELETE SMPEZ.D&TRGTVOL..CSI CLUSTER
  SET LASTCC = 0
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ MVSZ
 ALTER MASTER.MVSZMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSW
 ALTER MASTER.MVSP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION ADD AN ENTRY TO THE ZONEINDEX
)CM   -------------------------------------------------------
)SEL &NEWRES EQ Y
//***********************************************************
//*  ADD AN ENTRY TO THE GZONE ZONEINDEX                    *
//***********************************************************
//ZONEIND EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPEZ.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
     ADD GLOBALZONE ZONEINDEX((&TRGTVOL,SMPEZ.&TRGTVOL..CSI,TARGET)).
     ADD GLOBALZONE ZONEINDEX((C&TRGTVOL,SMPEZ.C&TRGTVOL..CSI,TARGET)).
    ENDUCL.
/*
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCC   EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TRGTVOL)
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCCC  EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(C&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TRGTVOL)
)ENDSEL
)CM   --------------------------------------------------------
)CM   NEVER TRY TO DELETE OLD TZONE FOR FIRST TIME MIGRATION!!
)CM   --------------------------------------------------------
)SEL &NEWRES EQ N
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//***********************************************************
//DELETE  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPEZ.&TRGTVOL..CSI CLUSTER
  DELETE SMPEZ.C&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ MVSZ
 ALTER MASTER.MVSZMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSW
 ALTER MASTER.MVSP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
//COPYDSK1 EXEC PGM=ADRDSSU,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&SRCVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&SRCVOL
//&TRGTVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
 COPY  INDDNAME(&SRCVOL) -
       OUTDDNAME(&TRGTVOL) -
       PURGE -
       FULL
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//DELETE   EXEC PGM=ADRDSSU
//SYSPRINT DD SYSOUT=*
//TAPE1    DD DUMMY
//DISK1    DD VOL=SER=&TRGTVOL,UNIT=SYSDA,DISP=SHR
//SYSIN    DD *
 DUMP DATASET(INCLUDE(SMPEZ.C&SRCVOL..**,SMPEZ.&SRCVOL..** -
              SMPEZ.C&TRGTVOL..**,SMPEZ.&TRGTVOL..**)  -
              BY(DSORG,NE,VSAM)) -
 LOGINDD(DISK1) OUTDD(TAPE1) DELETE PURGE
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//***********************************************************
//*      COPY THE SYSRES                                    *
//***********************************************************
//COPYDSK EXEC PGM=ADRDSSU,COND=(4,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&SRCVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&SRCVOL
//&TRGTVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
  COPY  INDD(&SRCVOL) OUTDD(&TRGTVOL) -
     DS(INC(SMPEZ.&SRCVOL..SMPLOG, -
            SMPEZ.&SRCVOL..SMPLOGA, -
            SMPEZ.&SRCVOL..SMPMTS, -
            SMPEZ.&SRCVOL..SMPSCDS, -
            SMPEZ.&SRCVOL..SMPSTS, -
            SMPEZ.C&SRCVOL..SMPLOG, -
            SMPEZ.C&SRCVOL..SMPLOGA, -
            SMPEZ.C&SRCVOL..SMPMTS, -
            SMPEZ.C&SRCVOL..SMPSCDS, -
            SMPEZ.C&SRCVOL..SMPSTS)) -
     RENUNC((SMPEZ.&SRCVOL..SMPLOG, -
            SMPEZ.&TRGTVOL..SMPLOG)  -
            (SMPEZ.C&SRCVOL..SMPLOG, -
            SMPEZ.C&TRGTVOL..SMPLOG)  -
            (SMPEZ.&SRCVOL..SMPLOGA, -
            SMPEZ.&TRGTVOL..SMPLOGA)  -
            (SMPEZ.C&SRCVOL..SMPLOGA, -
            SMPEZ.C&TRGTVOL..SMPLOGA)  -
            (SMPEZ.&SRCVOL..SMPMTS, -
            SMPEZ.&TRGTVOL..SMPMTS)  -
            (SMPEZ.C&SRCVOL..SMPMTS, -
            SMPEZ.C&TRGTVOL..SMPMTS)  -
            (SMPEZ.&SRCVOL..SMPSCDS, -
            SMPEZ.&TRGTVOL..SMPSCDS)  -
            (SMPEZ.C&SRCVOL..SMPSCDS, -
            SMPEZ.C&TRGTVOL..SMPSCDS)  -
            (SMPEZ.&SRCVOL..SMPSTS, -
            SMPEZ.&TRGTVOL..SMPSTS)  -
            (SMPEZ.C&SRCVOL..SMPSTS, -
            SMPEZ.C&TRGTVOL..SMPSTS)) -
          REPL SHR CAT
 IF LASTCC = 8 THEN SET MAXCC = 0
//***********************************************************
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//REMOVOL EXEC PGM=IDCAMS,COND=(4,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ MVSZ
 ALTER MASTER.MVSZMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSW
 ALTER MASTER.MVSP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
//***********************************************************
//*      DEFINE THE NEW TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//DEFCSI  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE CLUSTER( -
                 NAME(SMPEZ.&TRGTVOL..CSI) -
                 MODEL(SMPEZ.&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPEZ.&TRGTVOL..CSI.DATA) -
                 CYLINDERS(75 10) -
                 VOLUMES(&TRGTVOL) -
                ) -
         INDEX( -
                 NAME(SMPEZ.&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                 VOLUMES(&TRGTVOL) -
                )
  DEFINE CLUSTER( -
                 NAME(SMPEZ.C&TRGTVOL..CSI) -
                 MODEL(SMPEZ.C&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPEZ.C&TRGTVOL..CSI.DATA) -
                 CYLINDERS(25 10) -
                 VOLUMES(&TRGTVOL) -
                ) -
         INDEX( -
                 NAME(SMPEZ.C&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                 VOLUMES(&TRGTVOL) -
                )
/*
//***********************************************************
//*      INITIALIZE THE TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//ZPOOL   EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//&TRGTVOL   DD  DSN=SMPEZ.&TRGTVOL..CSI,DISP=SHR
//C&TRGTVOL  DD  DSN=SMPEZ.C&TRGTVOL..CSI,DISP=SHR
//ZPOOL    DD  DSN=SYS1.MACLIB(GIMZPOOL),DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  REPRO OUTFILE(&TRGTVOL) INFILE(ZPOOL)
  REPRO OUTFILE(C&TRGTVOL) INFILE(ZPOOL)
//***********************************************************
//*  ZONECOPY TO THE NEW SYSRES TARGET ZONE, AND            *
//*  ZONEEDIT THE DDDEF'S TO THE SYSRES VOLID               *
//***********************************************************
//ZONECPY EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1439
//SMPCSI   DD  DSN=SMPEZ.GLOBAL.CSI,DISP=SHR
//SMPLOG   DD  DSN=SMPEZ.&TRGTVOL..SMPLOG,DISP=SHR,
//         UNIT=SYSDA,VOL=SER=&TRGTVOL
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SMPCNTL  DD  *
  SET BDY(&TRGTVOL) .
    ZONECOPY (&SRCVOL) INTO(&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL)
             DA(SMPEZ.&SRCVOL..*,SMPEZ.&TRGTVOL..*).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(&TRGTVOL)
        RELATED(ZDLB01) .
    ENDUCL  .
  SET BDY(C&TRGTVOL) .
    ZONECOPY (C&SRCVOL) INTO(C&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL)
           DA(SMPEZ.C&SRCVOL..*,SMPEZ.C&TRGTVOL..*).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(C&TRGTVOL)
        RELATED(CZDLB01) .
    ENDUCL  .
  SET BDY(ZDLB01) .
    UCLIN .
      REP DZONE(ZDLB01)
        RELATED(&TRGTVOL) .
    ENDUCL  .
  SET BDY(CZDLB01) .
    UCLIN .
      REP DZONE(CZDLB01)
        RELATED(C&TRGTVOL) .
    ENDUCL  .
/*
//***********************************************************
//*      DOCUMENT CLONE                                     *
//***********************************************************
//DOCCLN  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             COND=(0,LT),
//             PARM=('%BATCH DOCTGT PARMA(&SRCVOL)',
//             'PARMB(&TRGTVOL) PARMC(&LV)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//STEP1    EXEC PGM=ASMLVL,PARM='&LV&TRGTVOL'
//STEPLIB  DD DSN=JOEF.USER.LOAD,DISP=SHR
//SYSLST   DD DSN=SYS1.LEVEL,UNIT=3390,DISP=SHR,VOL=SER=&TRGTVOL
//SYSUDUMP DD SYSOUT=*
./ ADD NAME=MIGSYSS1 0173-88011-93286-1338-00371-00087-00371-JOEF
//CLNRES   JOB (A006,SYTM,999,999),'ROOM09: MIGRATION',REGION=8M,
//             NOTIFY=&ZUSER,
)SEL &TGTSYS NE &SYSID
//             USER=&ZUSER,PASSWORD=________,
)ENDSEL
)CM   ----------------------------------------
)CM   FORCE JOB TO RUN ON CPU OF TARGET SYSRES
)CM   ----------------------------------------
)SEL &TGTSYS EQ DOFD
//             CLASS=J,MSGCLASS=X
//*
/*ROUTE   XEQ DOFNY
/*JOBPARM LINES=9999,SYSAFF=DOFD
)ENDSEL
)SEL &TGTSYS EQ DOFP
//             CLASS=J,MSGCLASS=X
//*
/*ROUTE   XEQ DOFNY
/*JOBPARM LINES=9999,SYSAFF=DOFP
)ENDSEL
)SEL &TGTSYS EQ MVSP
//             CLASS=Q,MSGCLASS=V
//*
/*ROUTE   XEQ CSCBATCH
/*JOBPARM LINES=9999,SYSAFF=MVSP
)ENDSEL
//*
//* LIB: XSYS.MVSESA.SKELS(MIGSYSS1)
//* GDE: J. PERLMAN AND K. TOMIAK
//* DOC: CLONE SYSRES VOLUMES &SRCVOL LEVEL(&LV) TO &TRGTVOL
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
)CM   -------------------------
)CM   BACKUP ON REQUEST ONLY!!!
)CM   -------------------------
)SEL &BACKUP EQ Y
//***********************************************************
//*      UNCATALOG THE OLD BACKUP                           *
//***********************************************************
//SCRAPIT EXEC PGM=IDCAMS,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE SMPE.BACKUP.LVL&OLDLV..SYSRES NOSCRATCH
  SET MAXCC = 0
//***********************************************************
//*      TAKE A BACKUP                                      *
//***********************************************************
//BACKUP  EXEC PGM=FDR,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&SRCVOL
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SYSRES,UNIT=(3480,2),
//             LABEL=(1,SL,EXPDT=99000),DISP=(NEW,CATLG),
//             VOL=(,,,20),DCB=(TRTCH=NOCOMP)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT TARGET BACKUP                             *
//***********************************************************
//DOCBKP  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(&SRCVOL)',
//             'PARMB(&SRCVOL) PARMC(SYSRES) PARMD(&LV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION OVER THE OLD SYSRES
)CM   -------------------------------------------------------
)SEL &OLDRES EQ Y
//***********************************************************
//*  DELETE ENTRY FROM GZONE ZONEINDEX                      *
//***********************************************************
//DELZONE EXEC PGM=GIMSMP,COND=(0,LT),TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      DEL GLOBALZONE ZONEINDEX((T&TRGTVOL)) .
      DEL GLOBALZONE ZONEINDEX((D&TRGTVOL)) .
    ENDUCL.
/*
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//DELOLD  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPE.T&TRGTVOL..CSI CLUSTER
  DELETE SMPE.D&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION ADD AN ENTRY TO THE ZONEINDEX
)CM   -------------------------------------------------------
)SEL &NEWRES EQ Y
//***********************************************************
//*  ADD AN ENTRY TO THE GZONE ZONEINDEX                    *
//***********************************************************
//ZONEIND EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      ADD GLOBALZONE ZONEINDEX((&TRGTVOL,SMPE.&TRGTVOL..CSI,TARGET)).
      ADD GLOBALZONE ZONEINDEX((C&TRGTVOL,SMPE.C&TRGTVOL..CSI,TARGET)).
    ENDUCL.
/*
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCC   EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TRGTVOL)
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCCC  EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(C&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TRGTVOL)
)ENDSEL
)CM   --------------------------------------------------------
)CM   NEVER TRY TO DELETE OLD TZONE FOR FIRST TIME MIGRATION!!
)CM   --------------------------------------------------------
)SEL &NEWRES EQ N
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//***********************************************************
//DELETE  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPE.&TRGTVOL..CSI CLUSTER
  DELETE SMPE.C&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
//***********************************************************
//*      COPY THE SYSRES                                    *
//***********************************************************
//COPYDSK EXEC PGM=ADRDSSU,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&SRCVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&SRCVOL
//&TRGTVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
 COPY  INDDNAME(&SRCVOL) -
       OUTDDNAME(&TRGTVOL) -
       PURGE                /* OVERLAY UNEXPIRED DATASETS */   +
       FULL                 /* DEFAULT - DUMP FULL VOLUME */
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//***********************************************************
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//REMOVOL EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
//***********************************************************
//*      DEFINE THE NEW TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//DEFCSI  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE CLUSTER( -
                 NAME(SMPE.&TRGTVOL..CSI) -
                 MODEL(SMPE.&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPE.&TRGTVOL..CSI.DATA) -
                 CYLINDERS(75 10) -
                 VOLUMES(&TRGTVOL) -
                ) -
         INDEX( -
                 NAME(SMPE.&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                 VOLUMES(&TRGTVOL) -
                )
  DEFINE CLUSTER( -
                 NAME(SMPE.C&TRGTVOL..CSI) -
                 MODEL(SMPE.C&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPE.C&TRGTVOL..CSI.DATA) -
                 CYLINDERS(25 10) -
                 VOLUMES(&TRGTVOL) -
                ) -
         INDEX( -
                 NAME(SMPE.C&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                 VOLUMES(&TRGTVOL) -
                )
/*
//***********************************************************
//*      INITIALIZE THE TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//ZPOOL   EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//&TRGTVOL   DD  DSN=SMPE.&TRGTVOL..CSI,DISP=SHR
//C&TRGTVOL  DD  DSN=SMPE.C&TRGTVOL..CSI,DISP=SHR
//ZPOOL    DD  DSN=SYS1.MACLIB(GIMZPOOL),DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  REPRO OUTFILE(&TRGTVOL) INFILE(ZPOOL)
  REPRO OUTFILE(C&TRGTVOL) INFILE(ZPOOL)
//***********************************************************
//*  ZONECOPY TO THE NEW SYSRES TARGET ZONE, AND            *
//*  ZONEEDIT THE DDDEF'S TO THE SYSRES VOLID               *
//***********************************************************
//ZONECPY EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1439
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPLOG   DD  DSN=SMPE.SMPLOG,DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SMPCNTL  DD  *
  SET BDY(&TRGTVOL) .
    ZONECOPY (&SRCVOL) INTO(&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(&TRGTVOL)
        RELATED(SMPDL1) .
    ENDUCL  .
  SET BDY(C&TRGTVOL) .
    ZONECOPY (C&SRCVOL) INTO(C&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(C&TRGTVOL)
        RELATED(CSMPDL1) .
    ENDUCL  .
  SET BDY(SMPDL1) .
    UCLIN .
      REP DZONE(SMPDL1)
        RELATED(&TRGTVOL) .
    ENDUCL  .
  SET BDY(CSMPDL1) .
    UCLIN .
      REP DZONE(CSMPDL1)
        RELATED(C&TRGTVOL) .
    ENDUCL  .
/*
//***********************************************************
//*      DOCUMENT CLONE                                     *
//***********************************************************
//DOCCLN  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             COND=(0,LT),
//             PARM=('%BATCH DOCTGT PARMA(&SRCVOL)',
//             'PARMB(&TRGTVOL) PARMC(&LV)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//STEP1    EXEC PGM=ASMLVL,PARM='&LV&TRGTVOL'
//STEPLIB  DD DSN=JOEF.USER.LOAD,DISP=SHR
//SYSLST   DD DSN=SYS1.LEVEL,UNIT=3390,DISP=SHR,VOL=SER=&TRGTVOL
//SYSUDUMP DD SYSOUT=*
./ ADD NAME=MIGSYSS2 0101-92164-92164-1640-00382-00363-00000-SXSCSC
//CLNRES   JOB (A006,SYTM,999,9999),'&ROOMN: &TRGTVOL MIG',
//         NOTIFY=&ZUSER,REGION=8M,
)SEL &TGTSYS NE &SYSID
//         USER=&ZUSER,PASSWORD=________,
)ENDSEL
)CM        -------------------------------------------------------------
)CM        FORCE JOB TO RUN ON CPU OF TARGET SYSRES
)CM        -------------------------------------------------------------
)SEL &TGTSYS EQ DOFD
//         CLASS=J,MSGCLASS=X
//*
/*ROUTE    XEQ DOFNY
/*JOBPARM  S=DOFD,LINES=9999
)ENDSEL
)CM        -------------------------------------------------------------
)SEL &TGTSYS EQ DOFP
//         CLASS=J,MSGCLASS=X
//*
/*ROUTE    XEQ DOFNY
/*JOBPARM  S=DOFP,LINES=9999
)ENDSEL
)CM        -------------------------------------------------------------
)SEL &TGTSYS EQ MVSP
//         CLASS=V,MSGCLASS=V
//*
/*ROUTE    XEQ CSCBATCH
/*JOBPARM  S=MVSP
)ENDSEL
)CM        -------------------------------------------------------------
//*
//*        LIB: XSYS.MVSESA.SKELS(MIGSYSS1)
//*        GDE: N/A
//*        DOC: CLONE SYSRES VOLUMES &SRCVOL LEVEL(&LV) TO &TRGTVOL
//*
//*        HST: JOB JCL GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME,
//*             BY &SYSUID.
//*
)CM        -------------------------------------------------------------
)CM        BACKUP DONE ON REQUEST FROM MENU ONLY!
)CM        -------------------------------------------------------------
)SEL &BACKUP EQ Y
//**********************************************************************
//*        UNCATALOG THE OLD BACKUP
//**********************************************************************
//*
//SCRAPIT  EXEC  PGM=IDCAMS,
//          COND=(00,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE   SMPE.BACKUP.LVL&OLDLV..SYSRES                              -
           NOSCRATCH
  SET      MAXCC = 0
/*
//**********************************************************************
//*        TAKE FULL VOLUME BACKUP USING FDR
//**********************************************************************
//*
//BACKUP   EXEC  PGM=FDR,
//         COND=(00,LT)
//SYSMAP   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSPRIN1 DD  SYSOUT=*
//SYSMA1   DD  SYSOUT=*
//DISK1    DD  DISP=SHR,
//             UNIT=SYSDA,VOL=SER=&SRCVOL
//TAPE1    DD  DSN=SMPE.BACKUP.LVL&LV..SYSRES,
//             DISP=(NEW,CATLG),
//             UNIT=(CART,2),VOL=(,,,06),
//             LABEL=EXPDT=99000
//SYSIN    DD  *
  DUMP     TYPE=FDR
/*
//**********************************************************************
//*        DOCUMENT TARGET BACKUP
//**********************************************************************
//*
//DOCBKP   EXEC  PGM=IKJEFT01,
//         DYNAMNBR=35,
//         PARM=('%BATCH DOCBKP PARMA(&SRCVOL)',
//             'PARMB(&SRCVOL) PARMC(SYSRES) PARMD(&LV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DSN=XSYS.MVSESA.CLIST,DISP=SHR
//ISPLIST  DD  SYSOUT=*,
//             DCB=(RECFM=FBA,LRECL=121,BLKSIZE=1210)
//ISPLOG   DD  SYSOUT=*,
//             DCB=(RECFM=VA,LRECL=125,BLKSIZE=129)
//ISPPROF  DD  DSN=&&PROFILE,DISP=(NEW,DELETE,DELETE),
//             UNIT=SYSALLDA,
//             SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,LRECL=80)
//ISPLLIB  DD  DSN=ISR.ISRLOAD,DISP=SHR
//         DD  DSN=ISP.ISPLOAD,DISP=SHR
//ISPPLIB  DD  DSN=ISR.ISRPENU,DISP=SHR
//         DD  DSN=ISP.ISPPENU,DISP=SHR
//ISPMLIB  DD  DSN=ISR.ISRMENU,DISP=SHR
//         DD  DSN=ISP.ISPMENU,DISP=SHR
//ISPSLIB  DD  DSN=ISR.ISRSENU,DISP=SHR
//         DD  DSN=ISP.ISPSLIB,DISP=SHR
//ISPTLIB  DD  DSN=ISR.ISRTLIB,DISP=SHR
//         DD  DSN=ISP.ISPTENU,DISP=SHR
)ENDSEL
)CM        -------------------------------------------------------------
)CM        ON A FIRST TIME MIGRATION OVER THE OLD SYSRES
)CM        -------------------------------------------------------------
)SEL &OLDRES EQ Y
//***********************************************************
//*  DELETE ENTRY FROM GZONE ZONEINDEX                      *
//***********************************************************
//DELZONE EXEC PGM=GIMSMP,COND=(0,LT),TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      DEL GLOBALZONE ZONEINDEX((T&TRGTVOL)) .
      DEL GLOBALZONE ZONEINDEX((D&TRGTVOL)) .
    ENDUCL.
/*
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//DELOLD  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPE.T&TRGTVOL..CSI CLUSTER
  DELETE SMPE.D&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION ADD AN ENTRY TO THE ZONEINDEX
)CM   -------------------------------------------------------
)SEL &NEWRES EQ Y
//***********************************************************
//*  ADD AN ENTRY TO THE GZONE ZONEINDEX                    *
//***********************************************************
//ZONEIND EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      ADD GLOBALZONE ZONEINDEX((&TRGTVOL,SMPE.&TRGTVOL..CSI,TARGET)).
      ADD GLOBALZONE ZONEINDEX((C&TRGTVOL,SMPE.C&TRGTVOL..CSI,TARGET)).
    ENDUCL.
/*
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCC   EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TRGTVOL)
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCCC  EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(C&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TRGTVOL)
)ENDSEL
)CM   --------------------------------------------------------
)CM   NEVER TRY TO DELETE OLD TZONE FOR FIRST TIME MIGRATION!!
)CM   --------------------------------------------------------
)SEL &NEWRES EQ N
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//***********************************************************
//DELETE  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPE.&TRGTVOL..CSI CLUSTER
  DELETE SMPE.C&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
//***********************************************************
//*      COPY THE SYSRES                                    *
//***********************************************************
//COPYDSK EXEC PGM=ADRDSSU,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&SRCVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&SRCVOL
//&TRGTVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
 COPY  INDDNAME(&SRCVOL) -
       OUTDDNAME(&TRGTVOL) -
       PURGE                /* OVERLAY UNEXPIRED DATASETS */   +
       FULL                 /* DEFAULT - DUMP FULL VOLUME */
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//***********************************************************
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//REMOVOL EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ DOFD
 ALTER CATALOG.DEVL.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
//***********************************************************
//*      DEFINE THE NEW TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//DEFCSI  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE CLUSTER( -
                 NAME(SMPE.&TRGTVOL..CSI) -
                 MODEL(SMPE.&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPE.&TRGTVOL..CSI.DATA) -
                 CYLINDERS(75 10) -
                ) -
         INDEX( -
                 NAME(SMPE.&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                )
  DEFINE CLUSTER( -
                 NAME(SMPE.C&TRGTVOL..CSI) -
                 MODEL(SMPE.C&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPE.C&TRGTVOL..CSI.DATA) -
                 CYLINDERS(25 10) -
                ) -
         INDEX( -
                 NAME(SMPE.C&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                )
/*
//***********************************************************
//*      INITIALIZE THE TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//ZPOOL   EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//&TRGTVOL   DD  DSN=SMPE.&TRGTVOL..CSI,DISP=SHR
//C&TRGTVOL  DD  DSN=SMPE.C&TRGTVOL..CSI,DISP=SHR
//ZPOOL    DD  DSN=SYS1.MACLIB(GIMZPOOL),DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  REPRO OUTFILE(&TRGTVOL) INFILE(ZPOOL)
  REPRO OUTFILE(C&TRGTVOL) INFILE(ZPOOL)
//***********************************************************
//*  ZONECOPY TO THE NEW SYSRES TARGET ZONE, AND            *
//*  ZONEEDIT THE DDDEF'S TO THE SYSRES VOLID               *
//***********************************************************
//ZONECPY EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1439
//SMPCSI   DD  DSN=SMPE.GLOBAL.CSI,DISP=SHR
//SMPLOG   DD  DSN=SMPE.SMPLOG,DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SMPCNTL  DD  *
  SET BDY(&TRGTVOL) .
    ZONECOPY (&SRCVOL) INTO(&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(&TRGTVOL)
        RELATED(SMPDL1) .
    ENDUCL  .
  SET BDY(C&TRGTVOL) .
    ZONECOPY (C&SRCVOL) INTO(C&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(C&TRGTVOL)
        RELATED(CSMPDL1) .
    ENDUCL  .
  SET BDY(SMPDL1) .
    UCLIN .
      REP DZONE(SMPDL1)
        RELATED(&TRGTVOL) .
    ENDUCL  .
  SET BDY(CSMPDL1) .
    UCLIN .
      REP DZONE(CSMPDL1)
        RELATED(C&TRGTVOL) .
    ENDUCL  .
/*
//***********************************************************
//*      DOCUMENT CLONE                                     *
//***********************************************************
//DOCCLN  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             COND=(0,LT),
//             PARM=('%BATCH DOCTGT PARMA(&SRCVOL)',
//             'PARMB(&TRGTVOL) PARMC(&LV)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
./ ADD NAME=MIGSYSZO 0100-93322-93322-0831-00369-00369-00000-JOEF
//CLNRES   JOB (A006,SYTM,999,999),'ROOM09: MIGRATION',REGION=8M,
//             NOTIFY=&ZUSER,
)SEL &TGTSYS NE &SYSID
//             USER=&ZUSER,PASSWORD=________,
)ENDSEL
)CM   ----------------------------------------
)CM   FORCE JOB TO RUN ON CPU OF TARGET SYSRES
)CM   ----------------------------------------
)SEL &TGTSYS EQ MVSZ
//             CLASS=J,MSGCLASS=X
//*
)ENDSEL
)SEL &TGTSYS EQ DOFP
//             CLASS=J,MSGCLASS=X
//*
/*ROUTE   XEQ DOFNY
/*JOBPARM LINES=9999,SYSAFF=DOFP
)ENDSEL
)SEL &TGTSYS EQ MVSP
//             CLASS=Q,MSGCLASS=V
//*
/*ROUTE   XEQ CSCBATCH
/*JOBPARM LINES=9999,SYSAFF=MVSP
)ENDSEL
//*
//* LIB: XSYS.MVSESA.SKELS(MIGSYSSZ)
//* GDE: J. PERLMAN AND K. TOMIAK
//* DOC: CLONE SYSRES VOLUMES &SRCVOL LEVEL(&LV) TO &TRGTVOL
//*
//* HST: GENERATED ON &SYSID ON &ZJDATE &ZDATE AT &ZTIME..
//*
)CM   -------------------------
)CM   BACKUP ON REQUEST ONLY!!!
)CM   -------------------------
)SEL &BACKUP EQ Y
//***********************************************************
//*      UNCATALOG THE OLD BACKUP                           *
//***********************************************************
//SCRAPIT EXEC PGM=IDCAMS,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DELETE SMPEZ.BACKUP.LVL&OLDLV..SYSRES NOSCRATCH
  SET MAXCC = 0
//***********************************************************
//*      TAKE A BACKUP                                      *
//***********************************************************
//BACKUP  EXEC PGM=FDR,COND=(0,LT),TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//DISK1    DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&SRCVOL
//TAPE1    DD  DSN=SMPEZ.BACKUP.LVL&LV..SYSRES,UNIT=(3480,2),
//             LABEL=(1,SL,EXPDT=99000),DISP=(NEW,CATLG),
//             VOL=(,,,20)                 ,DCB=(TRTCH=NOCOMP)
//SYSIN    DD  *
  DUMP TYPE=FDR,BUFNO=MAX
/*
//***********************************************************
//*      DOCUMENT TARGET BACKUP                             *
//***********************************************************
//DOCBKP  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             PARM=('%BATCH DOCBKP PARMA(&SRCVOL)',
//             'PARMB(&SRCVOL) PARMC(SYSRES) PARMD(&LV) PARME(00)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION OVER THE OLD SYSRES
)CM   -------------------------------------------------------
)SEL &OLDRES EQ Y
//***********************************************************
//*  DELETE ENTRY FROM GZONE ZONEINDEX                      *
//***********************************************************
//DELZONE EXEC PGM=GIMSMP,COND=(0,LT),TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPEZ.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
      DEL GLOBALZONE ZONEINDEX((T&TRGTVOL)) .
      DEL GLOBALZONE ZONEINDEX((D&TRGTVOL)) .
    ENDUCL.
/*
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//DELOLD  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPEZ.T&TRGTVOL..CSI CLUSTER
  DELETE SMPEZ.D&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ MVSZ
 ALTER MASTER.MVSZMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
)CM   -------------------------------------------------------
)CM   ON A FIRST TIME MIGRATION ADD AN ENTRY TO THE ZONEINDEX
)CM   -------------------------------------------------------
)SEL &NEWRES EQ Y
//***********************************************************
//*  ADD AN ENTRY TO THE GZONE ZONEINDEX                    *
//***********************************************************
//ZONEIND EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SMPRPT   DD  SYSOUT=*
//SMPOUT   DD  SYSOUT=*
//SMPCSI   DD  DSN=SMPEZ.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BDY(GLOBAL) .
    UCLIN.
     ADD GLOBALZONE ZONEINDEX((&TRGTVOL,SMPEZ.&TRGTVOL..CSI,TARGET)).
     ADD GLOBALZONE ZONEINDEX((C&TRGTVOL,SMPEZ.C&TRGTVOL..CSI,TARGET)).
    ENDUCL.
/*
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCC   EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(&TRGTVOL)
//***********************************************************
//*  ADD CONTROL CARD FOR SET BOUNDARY                      *
//***********************************************************
//ADDCCC  EXEC PGM=IEBGENER,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  *
  SET BOUNDARY(C&TRGTVOL) .
/*
//SYSUT2   DD  DISP=SHR,DSN=XSYS.MVSESA.DATA(C&TRGTVOL)
)ENDSEL
)CM   --------------------------------------------------------
)CM   NEVER TRY TO DELETE OLD TZONE FOR FIRST TIME MIGRATION!!
)CM   --------------------------------------------------------
)SEL &NEWRES EQ N
//***********************************************************
//*      DELETE OLD VERSION OF TARGET ZONE                  *
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//***********************************************************
//DELETE  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  UNIT=SYSDA,VOL=SER=&TRGTVOL,DISP=SHR
//SYSIN    DD  *
  DELETE SMPEZ.&TRGTVOL..CSI CLUSTER
  DELETE SMPEZ.C&TRGTVOL..CSI CLUSTER
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ MVSZ
 ALTER MASTER.MVSZMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)ENDSEL
//***********************************************************
//*      COPY THE SYSRES                                    *
//***********************************************************
//COPYDSK EXEC PGM=ADRDSSU,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&SRCVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&SRCVOL
//&TRGTVOL   DD  DISP=OLD,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
 COPY  INDDNAME(&SRCVOL) -
       OUTDDNAME(&TRGTVOL) -
       PURGE                /* OVERLAY UNEXPIRED DATASETS */   +
       FULL                 /* DEFAULT - DUMP FULL VOLUME */
 IF LASTCC = 4 THEN SET MAXCC = 0
/*
//***********************************************************
//*      REMOVE ALL VSAM FROM THE NEW SYSRES                *
//***********************************************************
//REMOVOL EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//&TRGTVOL   DD  DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SYSIN    DD  *
)CM   -------------------------------------------------
)CM   USE MASTERCATALOG OF CPU THIS JOB WILL EXECUTE ON
)CM   -------------------------------------------------
)SEL &TGTSYS EQ MVSZ
 ALTER MASTER.MVSZMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ DOFP
 ALTER CATALOG.PROD.MASTER/JES2SHOP +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
)SEL &TGTSYS EQ MVSP
 ALTER MASTER.MVSPMCAT +
    REMOVEVOLUMES(&TRGTVOL) FILE(&TRGTVOL)
/*
)ENDSEL
//***********************************************************
//*      DEFINE THE NEW TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//DEFCSI  EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE CLUSTER( -
                 NAME(SMPEZ.&TRGTVOL..CSI) -
                 MODEL(SMPEZ.&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPEZ.&TRGTVOL..CSI.DATA) -
                 CYLINDERS(75 10) -
                 VOLUMES(&TRGTVOL) -
                ) -
         INDEX( -
                 NAME(SMPEZ.&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                 VOLUMES(&TRGTVOL) -
                )
  DEFINE CLUSTER( -
                 NAME(SMPEZ.C&TRGTVOL..CSI) -
                 MODEL(SMPEZ.C&SRCVOL..CSI) -
                 VOLUMES(&TRGTVOL) -
                ) -
         DATA( -
                 NAME(SMPEZ.C&TRGTVOL..CSI.DATA) -
                 CYLINDERS(25 10) -
                 VOLUMES(&TRGTVOL) -
                ) -
         INDEX( -
                 NAME(SMPEZ.C&TRGTVOL..CSI.INDEX) -
                 TRACKS(10 1) -
                 VOLUMES(&TRGTVOL) -
                )
/*
//***********************************************************
//*      INITIALIZE THE TARGET ZONE ON THE NEW SYSRES       *
//***********************************************************
//ZPOOL   EXEC PGM=IDCAMS,COND=(0,LT),
//             REGION=8192K,TIME=1200
//&TRGTVOL   DD  DSN=SMPEZ.&TRGTVOL..CSI,DISP=SHR
//C&TRGTVOL  DD  DSN=SMPEZ.C&TRGTVOL..CSI,DISP=SHR
//ZPOOL    DD  DSN=SYS1.MACLIB(GIMZPOOL),DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  REPRO OUTFILE(&TRGTVOL) INFILE(ZPOOL)
  REPRO OUTFILE(C&TRGTVOL) INFILE(ZPOOL)
//***********************************************************
//*  ZONECOPY TO THE NEW SYSRES TARGET ZONE, AND            *
//*  ZONEEDIT THE DDDEF'S TO THE SYSRES VOLID               *
//***********************************************************
//ZONECPY EXEC PGM=GIMSMP,COND=(0,LT),
//             REGION=8192K,TIME=1439
//SMPCSI   DD  DSN=SMPEZ.GLOBAL.CSI,DISP=SHR
//SMPLOG   DD  DSN=SMPEZ.SMPLOG,DISP=SHR,UNIT=SYSDA,VOL=SER=&TRGTVOL
//SMPOUT   DD  SYSOUT=*
//SMPRPT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SMPCNTL  DD  *
  SET BDY(&TRGTVOL) .
    ZONECOPY (&SRCVOL) INTO(&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(&TRGTVOL)
        RELATED(ZDLB01) .
    ENDUCL  .
  SET BDY(C&TRGTVOL) .
    ZONECOPY (C&SRCVOL) INTO(C&TRGTVOL) .
    ZONEEDIT DDDEF.
      CHANGE VOLUME(&SRCVOL,&TRGTVOL).
    ENDZONEEDIT.
    UCLIN .
      REP TZONE(C&TRGTVOL)
        RELATED(CZDLB01) .
    ENDUCL  .
  SET BDY(ZDLB01) .
    UCLIN .
      REP DZONE(ZDLB01)
        RELATED(&TRGTVOL) .
    ENDUCL  .
  SET BDY(CZDLB01) .
    UCLIN .
      REP DZONE(CZDLB01)
        RELATED(C&TRGTVOL) .
    ENDUCL  .
/*
//***********************************************************
//*      DOCUMENT CLONE                                     *
//***********************************************************
//DOCCLN  EXEC PGM=IKJEFT01,DYNAMNBR=35,
//             REGION=8192K,TIME=1200,
//             COND=(0,LT),
//             PARM=('%BATCH DOCTGT PARMA(&SRCVOL)',
//             'PARMB(&TRGTVOL) PARMC(&LV)')
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//SYSPROC  DD  DISP=SHR,DSN=XSYS.MVSESA.CLIST
//ISPLIST  DD  SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=1210,LRECL=121)
//ISPLOG   DD  SYSOUT=*,DCB=(RECFM=VA,BLKSIZE=129,LRECL=125)
//ISPPROF  DD  DISP=(NEW,DELETE,DELETE),DSN=&&PROFILE,
//             UNIT=SYSALLDA,SPACE=(TRK,(1,1,5)),
//             DCB=(RECFM=FB,BLKSIZE=3120,LRECL=80)
//ISPLLIB  DD  DISP=SHR,DSN=ISR.ISRLOAD
//         DD  DISP=SHR,DSN=ISP.ISPLOAD
//ISPPLIB  DD  DISP=SHR,DSN=ISR.ISRPENU
//         DD  DISP=SHR,DSN=ISP.ISPPENU
//ISPMLIB  DD  DISP=SHR,DSN=ISR.ISRMENU
//         DD  DISP=SHR,DSN=ISP.ISPMENU
//ISPSLIB  DD  DISP=SHR,DSN=ISR.ISRSENU
//         DD  DISP=SHR,DSN=ISP.ISPSLIB
//ISPTLIB  DD  DISP=SHR,DSN=ISR.ISRTLIB
//         DD  DISP=SHR,DSN=ISP.ISPTENU
//STEP1    EXEC PGM=ASMLVL,PARM='&LV&TRGTVOL'
//STEPLIB  DD DSN=JOEF.USER.LOAD,DISP=SHR
//SYSLST   DD DSN=SYS1.LEVEL,UNIT=3390,DISP=SHR,VOL=SER=&TRGTVOL
//SYSUDUMP DD SYSOUT=*
./ ADD NAME=PSMXPRT  0100-91194-91194-2101-00027-00027-00000-DMV0016
)CM
)CM **************************************************************** */
)CM                                                                  */
)CM LIB: SKEL(PSMXPRT)                                               */
)CM GDE: SC34-4139-0 ISPF and ISPF/PDF PRIMER                        */
)CM DOC: A Personal Schedule Manager using ISPF services.            */
)CM                                                                  */
)CM **************************************************************** */
)CM
)TB 5 16 46
)BLANK 4
)CM
               Activity Report for &PGMR
)BLANK 1
                        &MO/&DA/&YE
)BLANK 1
)CM
)CM Set headings with tabs (!) is the tab character
!TIME !ACTIVITY !NOTES
!_____ !___________________________ !_________________________
)BLANK 1
)DOT PSMTABLE
)CM SELECTED ONLY ENTRIES FOR THE REQUESTED DATE
)SEL &MT = &MO && &DY = &DA && &YR = &YE
!&HR:&MN !&DESC !&NOTES
)ENDSEL
)ENDDOT
./ ADD NAME=PTFAPCK  0101-91240-91240-1438-00023-00023-00000-DMV0016
//&ZUSER.A JOB (A006,SYTM),'ROOM28: &SYSMOD',
//            MSGCLASS=X,CLASS=J,
//            NOTIFY=&ZUSER
//*
//MYPROCS JCLLIB ORDER=(XSYS.MVSESA.PROCLIB)
//*
//* LIB: XSYS.MVSESA.CNTL(PTFAPCK)
//* GDE: SMP/E REFERENCE
//* DOC: THIS JOB DOES AN APPLY CHECK.
//*
//S01#01  EXEC PROC=SMPPROC
//SMPCNTL  DD  *
 SET BDY(&ZONE) .
   APPLY
     CHECK
     S(
       &SYSMOD
      )
     GROUPEXTEND
     BYPASS(HOLDSYSTEM(ACTION,DEP,DOC))
   .
/*
//
./ ADD NAME=PTFF1    0108-91074-91230-0730-00083-00098-00000-DMV0016
&WA
//             USER=&CSCSUSER,PASSWORD=&CSCSPSWD,
&WB
&WC
&WD
&WE
//*
//* LIB: SKELS(PTFF1)
//* GDE: KENNETH E. TOMIAK
//* DOC: INVOKE SERVICE TO RECEIVE PTF FROM IESERV.
//*
//*------------------------------------------------------------------
//*                    RETRIEVE DATA FROM IE MAILBOX
//*------------------------------------------------------------------
//*
//S01#04  EXEC PGM=TPMAIN,
//*            PARM='NOSPIE,NOSTAE/,IBM0DIMR,,,,3600'
//             PARM='NOSPIE,NOSTAE/,IBM0ATR1,,,,3600'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//OUTFILE  DD  SYSOUT=*
)SEL &TYPE = P
//PDSOUT   DD  DISP=SHR,DSN=&DSN(MLST&USRCLS)
)ENDSEL
)SEL &TYPE = S
//SEQOUT   DD  DISP=SHR,DSN=&DSN
)ENDSEL
//INFILE   DD  *
CSS&RECA
CRF&RECB
)SEL &TYPE = P
CRFC DPDSOUT
)ENDSEL
)SEL &TYPE = S
CRFC DSEQOUT
)ENDSEL
CSE
/*
//ISCTRACE DD  DUMMY
//ISCMSGS  DD  DUMMY
//PLIDUMP  DD  DUMMY
//*
//*-------------------------------------------------------------------*
//*                    RETRIEVE PTF  FROM IE MAILBOX                  *
//*-------------------------------------------------------------------*
//*
//S02#04  EXEC PGM=TPMAIN,
//*            PARM='NOSPIE,NOSTAE/,IBM0DIMR,,,,3600'
//             PARM='NOSPIE,NOSTAE/,IBM0ATR1,,,,3600'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//OUTFILE  DD  SYSOUT=*
//TERSED   DD  DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=FB,BLKSIZE=7168,LRECL=1024),
//             UNIT=SYSALLDA,SPACE=(TRK,(10,20),RLSE),
//             DSN=&DSN..TERSED.MPTF&USRCLS
//INFILE   DD  *
CSS&RECA
CRF&RECC
CRFC DTERSED
CSE
/*
//ISCTRACE DD  DUMMY
//ISCMSGS  DD  DUMMY
//PLIDUMP  DD  DUMMY
//*
//S03#04  EXEC PGM=TRSUNPCK,COND=(0,NE),
//             PARM='UNPACK'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//INFILE   DD  DISP=OLD,DSN=&DSN..TERSED.MPTF&USRCLS
//OUTFILE  DD  DISP=SHR,DSN=&DSN(MPTF&USRCLS)
//*
//S04#04  EXEC PGM=IEFBR14
//INFILE   DD  DISP=(OLD,DELETE,KEEP),
//             DSN=&DSN..TERSED.MPTF&USRCLS
//
./ ADD NAME=PTFF2    0104-91098-91230-0729-00044-00050-00000-DMV0016
&WA
//             USER=&CSCSUSER,PASSWORD=&CSCSPSWD,
&WB
&WC
&WD
&WE
//*
//* LIB: SKELS(PTFF2)
//* GDE: KENNETH E. TOMIAK
//* DOC: INVOKE SERVICE TO RECEIVE PTF FROM IESERV.
//*
//*------------------------------------------------------------------
//*                    RETRIEVE DATA FROM IE MAILBOX
//*------------------------------------------------------------------
//*
//S01#01  EXEC PGM=TPMAIN,
//             PARM='NOSPIE,NOSTAE/,IBM0DIMR,,,,3600'
//*            PARM='NOSPIE,NOSTAE/,IBM0ATR1,,,,3600'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//OUTFILE  DD  SYSOUT=*
)SEL &TYPE = P
//PDSOUT   DD  DISP=SHR,DSN=&DSN(&USRCLS)
)ENDSEL
)SEL &TYPE = S
//SEQOUT   DD  DISP=SHR,DSN=&DSN
)ENDSEL
//INFILE   DD  *
CSS&RECA
CRF&RECB
)SEL &TYPE = P
CRFC DPDSOUT
)ENDSEL
)SEL &TYPE = S
CRFC DSEQOUT
)ENDSEL
CSE
/*
//ISCTRACE DD  DUMMY
//ISCMSGS  DD  DUMMY
//PLIDUMP  DD  DUMMY
//
./ ADD NAME=PTFF3    0102-91178-91230-0730-00083-00104-00000-DMV0016
&WA
//             USER=&CSCSUSER,PASSWORD=&CSCSPSWD,
&WB
&WC
&WD
&WE
//*
//* LIB: SKELS(PTFF1)
//* GDE: KENNETH E. TOMIAK
//* DOC: INVOKE SERVICE TO RECEIVE PTF FROM IESERV.
//*
//*------------------------------------------------------------------
//*                    RETRIEVE DATA FROM IE MAILBOX
//*------------------------------------------------------------------
//*
//S01#04  EXEC PGM=TPMAIN,
//*            PARM='NOSPIE,NOSTAE/,IBM0DIMR,,,,3600'
//             PARM='NOSPIE,NOSTAE/,IBM0ATR1,,,,3600'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//OUTFILE  DD  SYSOUT=*
)SEL &TYPE = P
//PDSOUT   DD  DISP=SHR,DSN=&DSN(ELST&USRCLS)
)ENDSEL
)SEL &TYPE = S
//SEQOUT   DD  DISP=SHR,DSN=&DSN
)ENDSEL
//INFILE   DD  *
CSS&RECA
CRF&RECB
)SEL &TYPE = P
CRFC DPDSOUT
)ENDSEL
)SEL &TYPE = S
CRFC DSEQOUT
)ENDSEL
CSE
/*
//ISCTRACE DD  DUMMY
//ISCMSGS  DD  DUMMY
//PLIDUMP  DD  DUMMY
//*
//*-------------------------------------------------------------------*
//*                    RETRIEVE PTF  FROM IE MAILBOX                  *
//*-------------------------------------------------------------------*
//*
//S02#04  EXEC PGM=TPMAIN,
//*            PARM='NOSPIE,NOSTAE/,IBM0DIMR,,,,3600'
//             PARM='NOSPIE,NOSTAE/,IBM0ATR1,,,,3600'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//OUTFILE  DD  SYSOUT=*
//TERSED   DD  DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=FB,BLKSIZE=7168,LRECL=1024),
//             UNIT=SYSALLDA,SPACE=(TRK,(10,20),RLSE),
//             DSN=&DSN..TERSED.EPTF&USRCLS
//INFILE   DD  *
CSS&RECA
CRF&RECC
CRFC DTERSED
CSE
/*
//ISCTRACE DD  DUMMY
//ISCMSGS  DD  DUMMY
//PLIDUMP  DD  DUMMY
//*
//S03#04  EXEC PGM=TRSUNPCK,COND=(0,NE),
//             PARM='UNPACK'
//STEPLIB  DD  DISP=SHR,DSN=EXPEDITE.MVS.R30.LOADLIB
//         DD  DSN=PLI.V2R2M0.PLILINK,DISP=SHR
//         DD  DSN=PLI.V2R2M0.SIBMLINK,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//INFILE   DD  DISP=OLD,DSN=&DSN..TERSED.EPTF&USRCLS
//OUTFILE  DD  DISP=SHR,DSN=&DSN(EPTF&USRCLS)
//*
//S04#04  EXEC PGM=IEFBR14,COND=(0,NE,S03#04)
//INFILE   DD  DISP=(OLD,DELETE,KEEP),
//             DSN=&DSN..TERSED.EPTF&USRCLS
//
./ ADD NAME=PTFR1    0101-91074-91165-1555-00021-00047-00000-DMV0016
&PA
&PB
&PC
&PD
&PE
//*
//* LIB: SKELS(PTFR1)
//* GDE: KENNETH E. TOMIAK
//* DOC: THIS JOB RECEIVES MAINTENANCE FROM THE IESERV DATA SET.
//*
//S01#01  EXEC PROC=SMPPROC
//SMPPTFIN DD  DISP=SHR,DSN=&DOFDSN(MPTF&USRCLS)
//SMPHOLD  DD  DUMMY
//SMPCNTL  DD  *
  SET      BOUNDARY (GLOBAL) .
    RECEIVE
      SOURCEID(IESERV)
      LIST
    .
/*
//
./ ADD NAME=PTFR2    0101-91115-91165-1555-00021-00047-00000-DMV0016
&PA
&PB
&PC
&PD
&PE
//*
//* LIB: SKELS(PTFR2)
//* GDE: KENNETH E. TOMIAK
//* DOC: THIS JOB RECEIVES MAINTENANCE FROM THE IESERV DATA SET.
//*
//S01#01  EXEC PROC=SMPPROC
//SMPPTFIN DD  DISP=SHR,DSN=&DOFDSN(&USRCLS)
//SMPHOLD  DD  DUMMY
//SMPCNTL  DD  *
  SET      BOUNDARY (GLOBAL) .
    RECEIVE
      SOURCEID(IESERV)
      LIST
    .
/*
//
./ ADD NAME=TAPEJOBC 0100-91242-91242-1159-00008-00008-00000-DMV0016
//&ZUSER. JOB (A006,SYTM),'ROOM28: TAPELOAD',
//            MSGCLASS=V,CLASS=V,
//            NOTIFY=&ZUSER
//*
//* LIB: XSYS.MVSESA.SKELS(TAPEJOBC)
//* GDE: ROOM28: K. TOMIAK
//* DOC: THIS JOB LOADS/UNLOADS A TAPE OF DATASETS.
//*
./ ADD NAME=UNLDCOPY 0100-91242-91242-1149-00017-00017-00000-DMV0016
//*
//* DOC: THIS STEP COPIES A PDS FROM TAPE.
//*
//STEP&CTR  EXEC PGM=IEBCOPY,REGION=512K,TIME=60
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  COPY INDD=SYSUT1,OUTDD=SYSUT2
/*
//SYSUT3   DD  UNIT=SYSALLDA,SPACE=(TRK,(15,5))
//SYSUT4   DD  UNIT=SYSALLDA,SPACE=(TRK,(15,5))
//SYSUT1   DD  DISP=(OLD,PASS),DSN=&DATASETB,
//             UNIT=TAPE,VOL=(,RETAIN,REF=*.&PREV..SYSUT1),
//             LABEL=(&CTR,SL,EXPDT=98000)
//SYSUT2   DD  DISP=(NEW,CATLG),DSN=&DATASETA,
//             UNIT=SYSALLDA,FREE=CLOSE,
//             SPACE=(&SPTYP,(&SPPRI,&SPSEC,&SPDIR),RLSE),
//             DCB=(DSORG=PO,RECFM=&RC,BLKSIZE=&BL,LRECL=&LR)
./ ADD NAME=UNLDGENR 0100-91242-91242-1149-00013-00013-00000-DMV0016
//*
//* DOC: THIS STEP LOADS A PS FROM TAPE.
//*
//STEP&CTR  EXEC PGM=IEBGENER,REGION=512K,TIME=60
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DISP=(OLD,PASS),DSN=&DATASETB,
//             UNIT=TAPE,VOL=(,RETAIN,REF=*.&PREV..SYSUT1),
//             LABEL=(&CTR,SL,EXPDT=98000)
//SYSUT2   DD  DISP=(NEW,CATLG),DSN=&DATASETA,
//             UNIT=SYSALLDA,FREE=CLOSE,
//             SPACE=(&SPTYP,(&SPPRI,&SPSEC),RLSE),
//             DCB=(DSORG=PS,RECFM=&RC,BLKSIZE=&BL,LRECL=&LR)
