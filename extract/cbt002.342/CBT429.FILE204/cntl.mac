./ ADD NAME=IEFESO   0100-91150-91150-1224-00594-00594-00000-IBM1
         TITLE 'Cataloged Esoteric Scan Routine'
*/**** START OF SPECIFICATIONS ***************************************/
*/*                                                                  */
*/*01* MODULE NAME = IEFESO                                          */
*/*                                                                  */
*/*02*   CSECT NAME =  IEFESO                                        */
*/*                                                                  */
*/*01* DESCRIPTIVE NAME = Cataloged Esoteric Scan Routine            */
*/*                                                                  */
*/*01* STATUS = HBB4410                                              */
*/*                                                                  */
*/*01* FUNCTION = Scan a LISTCAT report and find data sets cataloged */
*/*               using an esoteric.                                 */
*/*                                                                  */
*/*02*   OPERATION =                                                 */
*/*                                                                  */
*/*      . Open input and output data sets.                          */
*/*      . Find a line containing one of the catalog entry types.    */
*/*      . Save the data set name on this entry.                     */
*/*      . Find the device type associated with this data set.       */
*/*      . If the device type is nonzero:                            */
*/*        - Convert the device type to a unit name and obtain       */
*/*          unit name information, via the Unit Verification        */
*/*          Service.                                                */
*/*        - If the device type is an esoteric, write a line         */
*/*          to the report data set, containing the data set name    */
*/*          and the esoteric name.                                  */
*/*        - If the device type is not known, write a line to        */
*/*          the report data set, containing the data set name and   */
*/*          '????????'.                                             */
*/*        - Otherwise, continue                                     */
*/*                                                                  */
*/*      . On end of input:                                          */
*/*        - If no data sets were found cataloged using an           */
*/*          esoteric, write a message to the report data set.       */
*/*        - Close data sets.                                        */
*/*        - Return to the caller                                    */
*/*                                                                  */
*/*02*   RECOVERY OPERATION = None                                   */
*/*                                                                  */
*/*01* NOTES =                                                       */
*/*                                                                  */
*/*02*   DEPENDENCIES = None                                         */
*/*                                                                  */
*/*02*   CHARACTER CODE DEPENDENCIES = EBCDIC                        */
*/*                                                                  */
*/*02*   RESTRICTIONS = Dependent on IDCAMS 'LISTCAT' format         */
*/*                     Must run on MVS SP2.2.0 or above             */
*/*                                                                  */
*/*02*   REGISTER CONVENTIONS =                                      */
*/*                                                                  */
*/*03*     REGISTERS SAVED = 0-15                                    */
*/*                                                                  */
*/*03*     REGISTER USAGE = 0-12: Work areas                         */
*/*                           13: Save area address                  */
*/*                           14: Return address                     */
*/*                           15: Entry point address                */
*/*                                                                  */
*/*03*     REGISTERS RESTORED = 0-14                                 */
*/*                                                                  */
*/*02*   PATCH LABEL = None                                          */
*/*                                                                  */
*/*01* MODULE TYPE =  Procedure                                      */
*/*                                                                  */
*/*02*   PROCESSOR =   Assembler H                                   */
*/*                                                                  */
*/*02*   MODULE SIZE = 1 K (bytes)                                   */
*/*                                                                  */
*/*02*   ATTRIBUTES =                                                */
*/*                                                                  */
*/*        Location = Private                                        */
*/*        State = Problem Program                                   */
*/*        Amode = 24                                                */
*/*        Rmode = 24                                                */
*/*        Key = 8                                                   */
*/*        Mode = Task                                               */
*/*        Serialization = None                                      */
*/*        Type = Non-reusable                                       */
*/*                                                                  */
*/*01* ENTRY POINT = IEFESO                                          */
*/*                                                                  */
*/*02*   PURPOSE = See FUNCTION                                      */
*/*                                                                  */
*/*02*   LINKAGE = BALR                                              */
*/*                                                                  */
*/*03*     CALLERS = User                                            */
*/*                                                                  */
*/*02*   INPUT = IDCAMS LISTCAT report for a catalog                 */
*/*                                                                  */
*/*02*   ENTRY REGISTERS = 0-12: Irrelevant                          */
*/*                          13: Save area address                   */
*/*                          14: Return address                      */
*/*                          15: Entry point address                 */
*/*                                                                  */
*/*02*   OUTPUT = Report of data sets cataloged using an esoteric    */
*/*                                                                  */
*/*02*   EXIT NORMAL =                                               */
*/*                                                                  */
*/*03*     CONDITIONS = Functions completed                          */
*/*                                                                  */
*/*02*   EXIT REGISTERS = 0-14: Restored                             */
*/*                         15: Return code                          */
*/*                                                                  */
*/*03*     RETURN CODES = 0                                          */
*/*                                                                  */
*/*02*   EXIT ERROR = None                                           */
*/*                                                                  */
*/*01* EXTERNAL REFERENCES =                                         */
*/*                                                                  */
*/*02*   ROUTINES = IEFAB4UV - Unit Verification Service             */
*/*                                                                  */
*/*02*   DATA AREAS = None                                           */
*/*                                                                  */
*/*02*   CONTROL BLOCKS = None                                       */
*/*                                                                  */
*/*01* TABLES = None                                                 */
*/*                                                                  */
*/*01* MAPPING MACROS =                                              */
*/*                                                                  */
*/*      (Legend: C=Create, D=Delete, M=Modify, R=Reference)         */
*/*                                                                  */
*/*      Name       Description                       Access         */
*/*      --------   --------------------------------- ------         */
*/*      IEFZB4UV   Unit Verification Parameter List  C,R,D          */
*/*                                                                  */
*/*01* EXECUTABLE MACROS =                                           */
*/*                                                                  */
*/*      CLOSE    - Close a data set                                 */
*/*      GET      - Read from a data set                             */
*/*      LINK     - Load and call a module                           */
*/*      OPEN     - Open a data set                                  */
*/*      PUT      - Write to a data set                              */
*/*                                                                  */
*/*01* SERIALIZATION =                                               */
*/*                                                                  */
*/*02*   ENQUEUE RESOURCES = None                                    */
*/*                                                                  */
*/*02*   MP LOCKS USED = None                                        */
*/*                                                                  */
*/*01* MESSAGES = None                                               */
*/*                                                                  */
*/*01* ABEND CODES = None                                            */
*/*                                                                  */
*/*01* WAIT STATE CODES = None                                       */
*/*                                                                  */
*/*01* SYSGEN =                                                      */
*/*      LOAD MODULE = IEFESO                                        */
*/*      DISTRIBUTION LIBRARY = ASAMPLIB                             */
*/*      SYSGEN MACRO = None                                         */
*/*      ALIAS NAME = None                                           */
*/*      ENTRY POINT = IEFESO                                        */
*/*      TARGET LIBRARY = SYS1.SAMPLIB                               */
*/*                                                                  */
*/*01* CHANGE ACTIVITY = L0                                          */
*/*                                                                  */
*/* $L0= DEO0356 HBB4410 900529 PDEV: Cataloged esoteric scan        */
*/*                                                                  */
*/**** END OF SPECIFICATIONS *****************************************/
         EJECT
IEFESO   CSECT
IEFESO   AMODE 24
IEFESO   RMODE 24
***********************************************************************
* Standard entry linkage                                              *
***********************************************************************
         STM   14,12,12(13)
         BALR  12,0
         USING *,12
         ST    13,SAVEAREA+4
         LA    14,SAVEAREA
         ST    14,8(,13)
         LR    13,14
***********************************************************************
* Register equates                                                    *
***********************************************************************
RET_CODE EQU   15                  IEFAB4UV Return code
FLAGPTR  EQU   4                   Address of IEFAB4UV flags
UNITPTR  EQU   5                   Address of unitname area
ATTRPTR  EQU   6                   Address of attribute area
ESO_COUNT EQU  7                   Number of esoteric data sets
DEV_INDEX EQU  8                   Index of device type
DSN_INDEX EQU  8                   Index of data set name
         EJECT
***********************************************************************
* Mainline                                                            *
***********************************************************************
         LA    ESO_COUNT,0         No esoteric data sets yet
***********************************************************************
* Open the input and output data sets                                 *
***********************************************************************
         OPEN  (INDD,(INPUT),OUTDD,(OUTPUT))
         BAL   14,GETREC           Get a record
         EJECT
***********************************************************************
* Scan the records until the end of input is reached                  *
***********************************************************************
GRPLOOP  EQU   *
         BAL   14,GETGRP           Get the catalog entry name
***********************************************************************
* See if this is the start of a data set group                        *
***********************************************************************
         CLC   GROUPNAME(11),AIX
         BE    GETDSN
         CLC   GROUPNAME(11),ALIAS
         BE    GETDSN
         CLC   GROUPNAME(11),CLUSTER
         BE    GETDSN
         CLC   GROUPNAME(11),DATA
         BE    GETDSN
         CLC   GROUPNAME(11),GDG
         BE    GETDSN
         CLC   GROUPNAME(11),INDEX
         BE    GETDSN
         CLC   GROUPNAME(11),NONVSAM
         BE    GETDSN
         CLC   GROUPNAME(11),PAGESPACE
         BE    GETDSN
         CLC   GROUPNAME(11),PATH
         BE    GETDSN
         CLC   GROUPNAME(11),SPACE
         BE    GETDSN
         CLC   GROUPNAME(11),USERCAT
         BE    GETDSN
         B     NEXTGRP             This is not a group, continue
         EJECT
GETDSN   EQU   *
***********************************************************************
* Clear the output buffer                                             *
***********************************************************************
         MVC   OUTLINE,BLANK
         MVC   OUTLINE+1(124),OUTLINE
***********************************************************************
* Find the start of the data set name                                 *
***********************************************************************
         LA    DSN_INDEX,120       Search entire line
         LA    1,LINE              Starting address
         LR    6,1                 Save starting address
         LA    0,0(DSN_INDEX,1)    Ending address
LOOPDSN  EX    DSN_INDEX,FINDDSN   Search for data set name field
         BZ    NODSN               Not found...
         CLC   0(2,1),DSN_INDICATOR Is this the field?
         LA    1,1(,1)             Get address of stop byte
         BE    FNDDSN              Yes, calculate index
         LR    DSN_INDEX,0         No, get new starting position
         SR    DSN_INDEX,1         Calculate search length
         BNM   LOOPDSN             Keep searching
NODSN    LR    1,6                 Get starting address
FNDDSN   SLR   1,6                 Subtract starting address
         LR    DSN_INDEX,1         Save as the index value
         LA    6,2                 Length of search value
         ALR   DSN_INDEX,6         Point to the data set name
***********************************************************************
* Find the end of the data set name                                   *
***********************************************************************
         LA    1,LINE              Starting address
         ALR   1,DSN_INDEX         Start with the data set name
         SLR   2,2                 No blank found yet
         TRT   0(120,1),BLANKTBL   Search for a blank
         ALR   1,2                 Blank address
         LA    2,LINE              Starting address
         SLR   1,2                 Blank index
***********************************************************************
* Move the data set name into the output buffer                       *
***********************************************************************
         LA    3,LINE              Starting address
         ALR   3,DSN_INDEX         Starting address of data set name
         LA    4,1                 Need to subtract 1 to get a length
         SLR   3,4                 Subtract
         SLR   1,DSN_INDEX         Get data set name length
         EX    1,MOVEDSN           Move the data
         BAL   14,GETREC           Get a record
         EJECT
***********************************************************************
* Scan the records until a new catalog entry group is started         *
***********************************************************************
DSNLOOP  EQU   *
         BAL   14,GETGRP           Get the catalog group name
         CLC   GROUPNAME(11),AIX
         BE    GETDSN
         CLC   GROUPNAME(11),ALIAS
         BE    GETDSN
         CLC   GROUPNAME(11),CLUSTER
         BE    GETDSN
         CLC   GROUPNAME(11),DATA
         BE    GETDSN
         CLC   GROUPNAME(11),GDG
         BE    GETDSN
         CLC   GROUPNAME(11),INDEX
         BE    GETDSN
         CLC   GROUPNAME(11),NONVSAM
         BE    GETDSN
         CLC   GROUPNAME(11),PAGESPACE
         BE    GETDSN
         CLC   GROUPNAME(11),PATH
         BE    GETDSN
         CLC   GROUPNAME(11),SPACE
         BE    GETDSN
         CLC   GROUPNAME(11),USERCAT
         BE    GETDSN
         EJECT
***********************************************************************
* Search for the device type field                                    *
***********************************************************************
GETDEV   EQU   *
         LA    DEV_INDEX,120       Search entire line
         LA    1,LINE              Starting address
         LR    6,1                 Save starting address
         LA    0,0(DEV_INDEX,1)    Ending address
LOOPDEV  EX    DEV_INDEX,FINDDEV   Search for device type field
         BZ    NODEV               No match...
         CLC   0(15,1),DEV_INDICATOR Is this the field?
         LA    1,1(,1)             Save the found byte address
         BE    FNDDEV              Yes, get the index
         LR    DEV_INDEX,0
         SR    DEV_INDEX,1         Update search length
         BNM   LOOPDEV             Continue searching
NODEV    LR    1,6                 Restore starting address
FNDDEV   SLR   1,6                 Calculate byte index
         LR    DEV_INDEX,1         Save index
***********************************************************************
* If a device type exists, copy it out of the buffer                  *
***********************************************************************
         C     DEV_INDEX,NULL      Have a device type?
         BE    NEXTDSN             No, continue
         LA    6,15                Yes, get the value
         ALR   DEV_INDEX,6         Starting index of value
         LA    6,LINE-1(DEV_INDEX) Address of the value
         MVC   DEV_TYPE(8),0(6)    Save the value
***********************************************************************
* Convert the device type to hexadecimal                              *
***********************************************************************
         TR    DEV_TYPE(8),HEXTABLE Convert 'A'-'F' to FA-FF
         PACK  CONVERT(9),CONVERT(9) Convert to hexadecimal
         EJECT
***********************************************************************
* If the device type is nonzero,  convert it to a unit name           *
***********************************************************************
         CLC   DEVTYPE,NULL        Have a device type?
         BZ    NEXTDSN             No, continue
         LA    FLAGPTR,FLAGAREA    Base flag area
         LA    UNITPTR,UNITAREA    Base unitname area
         LA    ATTRPTR,ATTRAREA    Base attribute area
         USING FUNCFLGS,FLAGPTR    Set addressability
         USING UNITTAB,UNITPTR     Set addressability
         USING ATRIBUTS,ATTRPTR    Set addressability
         ST    ATTRPTR,UNATRIBP    Anchor attribute area
         XC    FUNCFLGS,FUNCFLGS   Clear flag area
         XC    UNITTAB,UNITTAB     Clear unitname area
         XC    ATRIBUTS,ATRIBUTS   Clear attribute area
         OI    FUNCFLG1,RETNUNIT   Return unitname
         OI    FUNCFLG2,RETNATRB   Return attributes
         MVC   UNLUVDEV,DEVTYPE    Input device type
         MVI   ATRLEN,ATRLENC      Attribute area length
         LINK  EP=IEFEB4UV,PARAM=(UNITAREA,FLAGAREA)
         EJECT
***********************************************************************
* If the conversion worked, check for an esoteric                     *
***********************************************************************
         LTR   RET_CODE,RET_CODE   Any errors?
         BNZ   UNKNOWN             Yes, return unknown esoteric
         TM    ATRFLG1,ESOTERIC    Is unitname an esoteric?
         BZ    NEXTDSN             No, continue
         MVC   UNIT_NAME(8),UNITNM Yes, place unitname in output buffer
         B     PUTLINE             Write the output line
***********************************************************************
* If the conversion failed, the device type is unknown                *
***********************************************************************
UNKNOWN  EQU   *                   Handle unknown device type
         MVC   UNIT_NAME(8),UNKNOWN_DEV Move in ? for esoteric name
***********************************************************************
* Write the output buffer to the report data set                      *
***********************************************************************
PUTLINE  EQU   *
         LA    9,1                 Need to update the esoteric count
         AR    ESO_COUNT,9         Increment the count
         MVC   WORD1,WORD1DC       Move in first phrase
         MVC   WORD2,WORD2DC       Move in second phrase
         PUT   OUTDD,OUTLINE       Write the buffer
         EJECT
***********************************************************************
* Get the next record                                                 *
***********************************************************************
NEXTDSN  EQU   *
         BAL   14,GETREC           Get a record
         B     DSNLOOP             Go look for a data set name
***********************************************************************
* Not at the start of a group, continue                               *
***********************************************************************
NEXTGRP  EQU   *
         BAL   14,GETREC           Get a record
         B     GRPLOOP             Go look for a catalog group name
         EJECT
***********************************************************************
* End of input handler                                                *
***********************************************************************
EOF      EQU   *
***********************************************************************
* If no data sets cataloged using an esoteric, say so                 *
***********************************************************************
         LTR   ESO_COUNT,ESO_COUNT Did we find any data sets?
         BNZ   FINI                Yes, cleanup
         MVC   OUTLINE(125),NO_ESOS No, issue a message
         PUT   OUTDD,OUTLINE       Write to the data set
***********************************************************************
* Close all data sets                                                 *
***********************************************************************
FINI     EQU   *
         CLOSE (INDD,,OUTDD)
***********************************************************************
* Standard exit linkage                                               *
***********************************************************************
         SLR   15,15               Set a return code of 0
         L     13,4(,13)
         L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         EJECT
***********************************************************************
*                                                                     *
* ROUTINE NAME = GETREC                                               *
*                                                                     *
* FUNCTION = Read in a record from the input data set.                *
*                                                                     *
* OPERATION =                                                         *
*                                                                     *
* . Clear the input buffer.                                           *
* . Obtain a record from the input data set.                          *
*                                                                     *
***********************************************************************
GETREC   EQU   *
***********************************************************************
* Clear the input buffer                                              *
***********************************************************************
         MVC   INDD_LINE,BLANK
         MVC   INDD_LINE+1(124),INDD_LINE
***********************************************************************
* Get the next record                                                 *
***********************************************************************
         LR    9,14                Save the return address
         GET   INDD,INDD_LINE      Get the record
         BR    9                   Return to the caller
         EJECT
***********************************************************************
*                                                                     *
* ROUTINE NAME = GETGRP                                               *
*                                                                     *
* FUNCTION = Obtain the candidate catalog entry name                  *
*                                                                     *
* OPERATION =                                                         *
*                                                                     *
* . Find the first word in the input buffer.                          *
* . Save the word as the catalog entry name.                          *
*                                                                     *
***********************************************************************
GETGRP   EQU   *
***********************************************************************
* Find the start of the first word in the buffer                      *
***********************************************************************
         LA    1,LINE              Starting address
         SLR   2,2                 Blank not found yet
         TRT   LINE(120),BLANKTBL  Search for first blank
         ALR   1,2                 Increment to blank address
         LA    2,LINE              Starting address
         SLR   1,2                 Get blank index
***********************************************************************
* Clear the catalog entry group name                                  *
***********************************************************************
         MVC   GROUPNAME,BLANK
         MVC   GROUPNAME+1(10),GROUPNAME
***********************************************************************
* Save the first word as the catalog entry group                      *
***********************************************************************
         LA    2,1                 Need to subtract 1 to get a length
         SLR   1,2                 Subtract
         EX    1,MOVEGRP           Move the group name
         BR    14                  Return to the caller
         EJECT
***********************************************************************
* Instructions for EX                                                 *
***********************************************************************
MOVEDSN  MVC   DSN(0),0(3)         Move data set name
MOVEGRP  MVC   GROUPNAME(0),LINE   Move catalog entry name
FINDDSN  TRT   0(0,1),DSNTBL       Search for data set name indicator
FINDDEV  TRT   0(0,1),DEVTBL       Search for device type indicator
***********************************************************************
* Variables                                                           *
***********************************************************************
SAVEAREA DS    18F                 Register save area
GROUPNAME DS   CL11                Catalog entry group
***********************************************************************
* Input record buffer                                                 *
***********************************************************************
INDD_LINE DS   0CL125
         DS    CL5                 ASA characters (ignored)
LINE     DS    CL120               Data
***********************************************************************
* Output record buffer                                                *
***********************************************************************
OUTLINE  DS    0CL125
WORD1    DS    CL9                 Static text
DSN      DS    CL44                Data set name
WORD2    DS    CL42                Static text
UNIT_NAME DS   CL8                 Esoteric name
         DS    CL22
***********************************************************************
* IEFAB4UV input/output areas                                         *
***********************************************************************
FLAGAREA DS    CL2                 Input flags
UNITAREA DS    CL20                Output unit name
ATTRAREA DS    CL10                Output unit name attributes
***********************************************************************
* EBCDIC to hexadecimal conversion area                               *
***********************************************************************
CONVERT  DS    0D
DEV_TYPE DS    0CL8                 EBCDIC value
         DS    CL4
DEVTYPE  DS    F                   Hexadecimal value
         DS    CL1
         EJECT
***********************************************************************
* EBCDIC to hexadecimal conversion table                              *
***********************************************************************
HEXTABLE DC    193X'00'            x'00' - x'C0'
         DC    X'FAFBFCFDFEFF'     x'C1' - x'C6'
         DC    41X'00'             x'C7' - x'EF'
         DC    X'F0F1F2F3F4'       x'F0' - x'F4'
         DC    X'F5F6F7F8F9'       x'F5' - x'F9'
         DC    6X'00'              x'FA' - x'FF'
***********************************************************************
* Blank search table                                                  *
***********************************************************************
BLANKTBL DC    64X'00'             x'00' - x'3F'
         DC    X'01'               x'40'
         DC    190X'00'            x'41' - x'FF'
***********************************************************************
* Device type field search table                                      *
***********************************************************************
DEVTBL   DC    196X'00'            x'00' - x'C3'
         DC    X'01'               x'C4'
         DC    58X'00'             x'C5' - x'FF'
***********************************************************************
* Data set name field search table                                    *
***********************************************************************
DSNTBL   DC    96X'00'             x'00' - x'5F'
         DC    X'01'               x'60'
         DC    158X'00'            x'61' - x'FF'
         EJECT
***********************************************************************
* General constants                                                   *
***********************************************************************
NULL     DC    F'0'                Null address
***********************************************************************
* Search values                                                       *
***********************************************************************
BLANK    DC    CL1' '              Blank
DSN_INDICATOR DC CL2'- '           Data set name field
DEV_INDICATOR DC CL15'DEVTYPE------X''' Device type field
***********************************************************************
* Output buffer constants                                             *
***********************************************************************
UNKNOWN_DEV DC CL8'????????'       Unknown device type
NO_ESOS  DC    CL125'No data sets were found to be cataloged using esotx
               erics.'
WORD1DC  DC    CL9'Data set'
WORD2DC  DC    CL42' was found to be cataloged using esoteric'
***********************************************************************
* Catalog entry names                                                 *
***********************************************************************
AIX      DC    CL11'AIX'
ALIAS    DC    CL11'ALIAS'
CLUSTER  DC    CL11'CLUSTER'
DATA     DC    CL11'DATA'
GDG      DC    CL11'GDG'
INDEX    DC    CL11'INDEX'
NONVSAM  DC    CL11'NONVSAM'
PAGESPACE DC   CL11'PAGESPACE'
PATH     DC    CL11'PATH'
SPACE    DC    CL11'SPACE'
USERCAT  DC    CL11'USERCATALOG'
         EJECT
***********************************************************************
* Input DCB                                                           *
***********************************************************************
INDD     DCB   DDNAME=INDD,DSORG=PS,EODAD=EOF,MACRF=GM
***********************************************************************
* Output DCB                                                          *
***********************************************************************
OUTDD    DCB   DDNAME=OUTDD,DSORG=PS,MACRF=PM
         EJECT
***********************************************************************
* Unit Verification Service Parameter List                            *
***********************************************************************
         IEFZB4UV
         END   IEFESO
./ ADD NAME=IEFESOJ1 0102-91150-91162-0951-00074-00076-00000-JOEF
//IEFESOJ1 JOB (A006,SYTM,999,9999),'ROOM 28 - SCHUNK IBM',
//         CLASS=V,MSGCLASS=X,REGION=6M,
//         NOTIFY=JOEF
//*
//*        LIB: XSYS.MVSESA.CNTL(IEFESOJ1)
//*        DOC: THIS JOB ASSEMBLES AND LINKS THE IEFESO PROGRAM
//*
//*
//***START OF SPECIFICATIONS*******************************************
//*
//* MODULE NAME = IEFESOJL
//*
//* DESCRIPTIVE NAME = CATALOGED ESOTERIC SCAN ROUTINE JCL
//*
//* STATUS = HBB4410
//*
//* FUNCTION = PROVIDE INPUT FOR AND EXECUTE IEFESO.
//*
//* OPERATION =
//*
//* - ASSEMBLE THE IEFESO SOURCE IN SYS1.SAMPLIB.  (ORIGINAL)
//*
//* - LINK EDIT THE OBJECT CODE FROM THE PREVIOUS STEP.
//*
//* - GENERATE THE LISTCAT LISTING TO BE SCANNED.
//*
//*   THE EXTRA LISTCAT STATEMENT PROVIDES A COPY OF THE LISTCAT IN
//*   THE JOB LOG, FOR DIAGNOSTIC PURPOSES.
//*
//* - INVOKE IEFESO TO SCAN THE LISTING FROM THE PREVIOUS STEP.
//*
//* INVOCATION REQUIREMENTS =
//*
//* - UPDATE THE JOB CARD TO CONFORM TO INSTALLATION POLICIES.
//*
//* - UPDATE THE LISTCAT COMMANDS IN THE LISTCAT STEP TO POINT TO
//*   THE DESIRED ENTRIES AND/OR CATALOG.
//*
//* - UPDATE THE OUTDD DD STATEMENT IN THE EXECUTE STEP TO PROVIDE
//*   THE DESIRED DATA SET NAME FOR THE OUTPUT REPORT.
//*
//***END OF SPECIFICATIONS*********************************************
//*
//*********************************************************************
//*        ASSEMBLE THE SCAN ROUTINE
//*********************************************************************
//*
//ASM      EXEC  PGM=IEV90,
//         PARM='OBJECT,NODECK'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//*            UNIT=SYSDA,VOL=SER=XRS001
//SYSIN    DD  DSN=XSYS.MVSESA.CNTL(IEFESO),DISP=SHR
//SYSLIN   DD  DSN=&&OBJ,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(TRK,(10,2)),
//             DCB=BLKSIZE=3120
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&SYSUT1,
//             UNIT=VIO,
//             SPACE=(CYL,(01,01))
//*
//*********************************************************************
//*        LINKEDIT THE SCAN ROUTINE
//*********************************************************************
//*
//LKED     EXEC  PGM=HEWL,COND=(8,LT,ASM),
//         PARM='XREF,LIST,LET'
//SYSLIN   DD  DSN=&&OBJ,DISP=(OLD,DELETE)
//SYSLMOD  DD  DSN=XSYS.MVSESA.LOADLIB(IEFESO),DISP=SHR
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&SYSUT1,
//             UNIT=VIO,
//             SPACE=(CYL,(01,01))
//*
./ ADD NAME=IEFESOJ2 0118-91150-91169-1027-00084-00084-00000-IBM1
//IEFESOXF JOB (A006,SYTM,99,99),'ROOM 28 - SCHUNK IBM',
//         CLASS=S,MSGCLASS=V,REGION=6M,
//         NOTIFY=IBM1
//*
//*        LIB: XSYS.MVSESA.CNTL(IEFESOJ2)
//*        DOC: THIS JOB EXECUTES PROGRAM IEFESO TO IDENTIFY CATALOG
//*             ENTRIES USING ESOTERIC DEVICES.
//*
//*             CHANGE THE ENTRYNAME IN THE //LISTCAT STEP TO THE NAME
//*             OF THE CATALOG YOU WISH TO REPORT.
//*
//***START OF SPECIFICATIONS*******************************************
//*
//* MODULE NAME = IEFESOJL
//*
//* DESCRIPTIVE NAME = CATALOGED ESOTERIC SCAN ROUTINE JCL
//*
//* STATUS = HBB4410
//*
//* FUNCTION = PROVIDE INPUT FOR AND EXECUTE IEFESO.
//*
//* OPERATION =
//*
//* - ASSEMBLE THE IEFESO SOURCE IN SYS1.SAMPLIB.
//*
//* - LINK EDIT THE OBJECT CODE FROM THE PREVIOUS STEP.
//*
//* - GENERATE THE LISTCAT LISTING TO BE SCANNED.
//*
//*   THE EXTRA LISTCAT STATEMENT PROVIDES A COPY OF THE LISTCAT IN
//*   THE JOB LOG, FOR DIAGNOSTIC PURPOSES.
//*
//* - INVOKE IEFESO TO SCAN THE LISTING FROM THE PREVIOUS STEP.
//*
//* INVOCATION REQUIREMENTS =
//*
//* - UPDATE THE JOB CARD TO CONFORM TO INSTALLATION POLICIES.
//*
//* - UPDATE THE LISTCAT COMMANDS IN THE LISTCAT STEP TO POINT TO
//*   THE DESIRED ENTRIES AND/OR CATALOG.
//*
//* - UPDATE THE OUTDD DD STATEMENT IN THE EXECUTE STEP TO PROVIDE
//*   THE DESIRED DATA SET NAME FOR THE OUTPUT REPORT.
//*
//***END OF SPECIFICATIONS*********************************************
//*
//*********************************************************************
//*        GENERATE A LISTCAT FOR A PARTICULAR CATALOG
//*********************************************************************
//*
//LISTCAT  EXEC  PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//OUTDD    DD  DSN=&&LISTCAT,DISP=(NEW,PASS),
//             UNIT=SYSDA,
//             SPACE=(CYL,(15,05),RLSE),
//             DCB=(LRECL=125,RECFM=VBA,DSORG=PS)
//SYSIN     DD  *
  LISTCAT   ALL                                                       -
  /*                                                                  -
            REMOVE THESE COMMENT CARD TO LIMIT SEARCHES TO A LEVEL    -
            LVL(IBM1)                                                 -
                                                                    */-
            CAT(VSAMGEN.TCICS.CATALOG)                                -
            OUTFILE(OUTDD)

/*
//*
//*********************************************************************
//*        SCAN THE LISTCAT OUTPUT
//*********************************************************************
//*
//EXECUTE  EXEC  PGM=IEFESO,
//         COND=(08,LT,LISTCAT)
//STEPLIB  DD  DSN=XSYS.MVSESA.LOADLIB,DISP=SHR
//SYSUDUMP DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//INDD     DD  DSN=&&LISTCAT,DISP=(OLD,DELETE)
//OUTDD    DD  SYSOUT=*,
//             DCB=(LRECL=125,RECFM=FB,DSORG=PS)
//*UTDD    DD  DSN=XSYS.LISTC.VSAMGEN.TCICS.CATALOG,DISP=(NEW,CATLG),
//*            UNIT=SYSDA,
//*            SPACE=(TRK,(5,1),RLSE),
//*            DCB=(LRECL=125,RECFM=FB,DSORG=PS)
//*
./ ADD NAME=IEFESOZZ 0100-91168-91168-1021-00131-00131-00000-IBM1
 For Catalog: CSI.CATLG
 Data Set Name                                             Esoteric Name
 -------------------------------------------               -------------
 ADABAS.V411.DGS.ASSO                                      SYSDA
 ADABAS.V411.DGS.ASSO                                      SYSDA
 ADABAS.V411.DGS.DATA                                      SYSDA
 ADABAS.V411.DGS.DATA                                      SYSDA
 ADABAS.V411.DGS.DATA                                      SYSDA
 ADABAS.V411.DGS.DATA                                      SYSDA
 ADABAS.V411.MPM2.DATA                                     SYSDA
 ADABAS.V411.MPM2.DATA                                     SYSDA
 ADABAS.V411.MPM2X.DATA                                    SYSDA
 ADABAS.V411.MPM2X.DATA                                    SYSDA
 ADABAS.V411.MPM3.DATA                                     SYSDA
 ADABAS.V411.MPM3.DATA                                     SYSDA
 ADABAS.V411.MPM5.DATA                                     SYSDA
 ADABAS.V411.MPM5.DATA                                     SYSDA
 ADABAS.V411.PRFLOAD                                       SYSSQ
 ADABAS.V411.PRFSRCE                                       SYSSQ
 ADABAS.V411.PROD1.ASSO                                    SYSDA
 ADABAS.V411.PROD1.ASSO                                    SYSDA
 ADABAS.V411.PROD1.DATA                                    SYSDA
 ADABAS.V411.PROD1.DATA                                    SYSDA
 ADABAS.V411.PROD1.DATA                                    SYSDA
 ADABAS.V411.PROD1.DATA                                    SYSDA
 ADABAS.V411.PROD1.DATA                                    SYSDA
 ADABAS.V411.PROD2.ASSO                                    SYSDA
 ADABAS.V411.PROD2.ASSO                                    SYSDA
 ADABAS.V411.PROD2.DATA                                    SYSDA
 ADABAS.V411.PROD2.DATA                                    SYSDA
 ADABAS.V411.PROD2.DATA                                    SYSDA
 ADABAS.V411.PROD2.DATA                                    SYSDA
 ADABAS.V411.PROD3.DATA                                    SYSDA
 ADABAS.V411.PROD3.DATA                                    SYSDA
 ADABAS.V411.PROD4.DATA                                    SYSDA
 ADABAS.V411.PROD4.DATA                                    SYSDA
 ADABAS.V411.PROD5.ASSO                                    SYSDA
 ADABAS.V411.PROD5.ASSO                                    SYSDA
 ADABAS.V411.PROD5.DATA                                    SYSDA
 ADABAS.V411.PROD5.DATA                                    SYSDA
 ADABAS.V411.PROD5.DATA                                    SYSDA
 ADABAS.V411.PROD6.ASSO                                    SYSDA
 ADABAS.V411.PROD6.ASSO                                    SYSDA
 ADABAS.V411.PROD6.DATA                                    SYSDA
 ADABAS.V411.PROD6.DATA                                    SYSDA
 ADABAS.V411.PROD6.DATA                                    SYSDA
 ADABAS.V411.PROD7.DATA                                    SYSDA
 ADABAS.V411.PROD7.DATA                                    SYSDA
 ADABAS.V411.SM10.DECK                                     SYSSQ
 ADABAS.V411.SM10.DECKB93                                  SYSSQ
 ADABAS.V411.STARTUP.DECKS                                 SYSSQ
 ADABAS.V411.TEST.DATA                                     SYSDA
 ADABAS.V411.TEST.DATA                                     SYSDA
 ADABAS.V411.TESTA3                                        SYSSQ
 ADABAS.V411.TESTF1                                        SYSSQ
 ADABAS.V411.TESTF2                                        SYSSQ
 ADABAS.V411.TESTF3                                        SYSSQ
 ADABAS.V5COM.APASBAT.WEEKLY                               SYSDA
 ADABAS.V5COM.APASHIST.WEEKLY                              SYSDA
 ADABAS.V5COM.APASONL.WEEKLY                               SYSDA
 ADABAS.V5COM.CAPIO.WEEKLY                                 SYSDA
 ADABAS.ZAPS                                               SYSSQ
 A006.ACS.CNTL                                             ????????

 For Catalog: ICFUSER.CATLG2
 Data Set Name                                             Esoteric Name
 -------------------------------------------               -------------
 A826.ECB.NAMEPA.CRRT                                      TAPE3480
 A826.ECB.NAMEPA.PRES                                      TAPE3480
 A826.ECB.NAMEPA.RESI                                      TAPE3480
 A826.ECB.SHLT.XTR1290.FROMVEND                            TAPE3480
 A901.PROMIS.APR90                                         TAPE3480
 A901.PROMIS.JAN90                                         TAPE3480

 For Catalog: ICFUSER.CATLG3
 Data Set Name                                             Esoteric Name
 -------------------------------------------               -------------
 A094.OPC.FF                                               ????????
 A816.BR91.ESEAB                                           SYSDA
 A856.PPS.REGTEST3                                         DISK
 A856.UPTEL82                                              DISK

 For Catalog: ICFUSER.CATLG4
 Data Set Name                                             Esoteric Name
 -------------------------------------------               -------------
 A002.OMLR.CARCOV.SORT.NOV20                               ????????
 A002.OMLR.TEMP1                                           ????????
 A025.PROMIS.SRC3                                          ????????
 A836.CHECK500.PART87                                      TAPE3480
 A836.CHECK900.PROP87                                      TAPE3480
 A836.FAIRTAX.BUG91                                        TAPE6250
 A836.FAIRTAX.CONED91                                      TAPE6250
 A836.FAIRTAX.LILCO91                                      TAPE6250
 A836.FAIRTAX.PYMT.TEST1                                   TAPE3480
 A836.FAIRTAX.WATER91                                      TAPE6250
 A836.FIXFILE.UBTFIN88                                     TAPE3480
 A836.MERGT003.CORP87                                      TAPE3480
 A836.MERGT006.PART87                                      TAPE3480
 A836.MERGT203.CORP87                                      TAPE3480
 A836.MERGT401.CORP87                                      TAPE3480
 A836.MERG204.PROP87                                       TAPE3480
 A836.MERG303.PROP87                                       TAPE3480
 A836.MERG304.PART87                                       TAPE3480
 A836.NAFILE.NOV90                                         TAPE3480
 A836.ORG.CTLLIB                                           ????????
 A836.PART.T04                                             TAPE3480
 A836.SAMPPROP.YR87.BASELINE                               TAPE3480
 A836.SAMPPROP.YR87.GOFILE                                 TAPE3480
 A836.SASFILE.GCT81.SEP87                                  TAPE3480
 A836.SASFILE.GCT88.APR91                                  TAPE3480
 A836.SASFILE.GCT90.APR91                                  TAPE3480
 A836.SASFILE.UBT.OCT90                                    TAPE3480
 A836.SASFILE.UBT85.APR91                                  TAPE3480
 A836.SASFILE.UBT86.APR91                                  TAPE3480
 A836.SASFILE.UBT88.MAR91                                  TAPE3480
 A836.SASFILE.UBT89.MAR91                                  TAPE3480
 A836.SASFILE.UBT90.MAR91                                  TAPE3480
 A836.SICNAME.UBT.APR91                                    TAPE3480
 A836.SICNAME.UBT.DEC90                                    TAPE3480
 A836.S85OPT.NOEXP3                                        TAPE3480

 mor Catalog: STAFF.CATLG
 Data Set Name                                             Esoteric Name
 -------------------------------------------               -------------
 FRED2.CICS.SYS.COLLECT.D110790.T0700                      ????????
 FRED2.COPY                                                ????????
 FRED2.FASTDASD.CNTL                                       ????????
 JEFF.SPFTEMP2.CNTL                                        ????????
 JUNI.SPFTEMP1.CNTL                                        ????????
 JUNI.SPFTEMP1.LIST                                        ????????
 TJDCSC.SPFLOG8.LIST                                       ????????
