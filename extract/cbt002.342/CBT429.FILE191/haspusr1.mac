*---------------------------------------------------------------------*
*  THIS PROGRAM IS USED TO LOAD $USER1 WITH NEW TABLE OF STC JOB CARDS*
*   - ROUTINE DOES (1) A GETMAIN FOR SAVE/WORK AREA               156 *
*                                                                     *
*                  (2) A GETMAIN ABOVE THE LINE FOR THE TABLE(64K)    *
*                                                                     *
*                  (3) DYNAMICALLY ALLOCATES SYS2.JES2.PARMS(STCTBL)  *
*                      (CHANGE THIS TO THE PDS YOU USE)               *
*                                                                     *
*                  (4) READS THE FILE IN AND MOVES IT TO THE TABLE    *
*                                                                     *
*                  (5) FREEMAINS ANY EXTRA MEMORY IF END OF FILE IS   *
*                      REACHED BEFORE THE TABLE IS FULL               *
*                                                                     *
*                  (6) IF THE TABLE FILLS UP BEFORE END OF FILE A WTO *
*                      IS ISSUED TO TELL THE OPERATORS                *
*                                                                     *
*                  (7) SWAPS TABLE POINTERS IF ALL IS WELL            *
*                                                                     *
*                  (8) DELETES THE OLD TABLE IF THERE IS ONE          *
*                                                                     *
*      EXIT024  ATTACHES ROUTINE AT END OF INITIALIZATION OF JES2     *
*                                                                     *
*      HASPCOMM ATTACHES ROUTINE EACH TIME A VALID DYNAMIC RESET IS   *
*      REQUESTED.  $JT,1                                              *
*                                                                     *
*     $USER1            IS  HCT POINTER  TO CURRENT  STCTABLE      .  *
*                                                                     *
*  NOTE!!!!                                                           *
*      THERE IS A COPY STATEMENT FOR STCTBL IN THE SOURCE OF THIS     *
*      MODULE.  IT IS EXPECTED THAT YOUR INITIALIZATION PDS WILL      *
*      WILL ALREADY HAVE THE MEMBER IN IT.  IF YOUR INIT DECK IS      *
*      NOT A PDS, YOU WILL NEED TO CHANGE THE DYNAMIC ALLOCATION      *
*      TO USE SOME OTHER PDS.                                         *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
         COPY  $HASPGBL
HASPUSR  $MODULE  NOTICE=SP220,                                        X
               SDWA,                                                   X
               RPL,                                                    X
               WPL,                                                    X
               $BUFFER,                                                X
               $HASPEQU,                                               X
               $JCT,                                                   X
               $MIT,                                                   X
               $JQE,                                                   X
               $MITETBL,                                               X
               $PADDR,                                                 X
               $PCE,                                                   X
               $CAT,                                                   X
               $HCT
         SPACE 1
**-------------------------------------------------------------------**
***                                                                 ***
**-------------------------------------------------------------------**
HASPUSR  AMODE  31
HASPUSR1 $ENTRY BASE=R12
         STM   14,12,12(13)       SAVE CALLERS REGS
         BALR  R12,0              ESTABLISH BASE REG
         USING *,R12              CSECT ADRESSABILITY
         USING HCT,R11            HCT   ADRESSABILITY
         USING JNP,R13            SAVE AREA ADRESSABILITY
ONTOP    EQU   *
         LR    R11,R1             RELOAD HCT
         GETMAIN R,LV=LSAVA       GETMAIN SAVE/WORK AREAS
         ST    R13,4(,R1)         STORE BACKWARD POINTER
         LR    R4,R13             CALLERS SAVE ADDRESS
         LR    R13,R1
         ST    R13,8(,R4)         STORE FORWARD POINTER
         SPACE 1
**-------------------------------------------------------------------**
***    ESTABLISH ESTAE EXIT FOR ABNORMAL TERMINATIONS               ***
**-------------------------------------------------------------------**
         LA    R1,12(,R13)        ESTAE PARAM LIST ADDRESS
         MVC   0(LDRABNDL,R1),LDRABND
*        ESTAE PARAM=(13),MF=(E,(1))
         SPACE 1
**-------------------------------------------------------------------**
***    OBTAIN STORAGE FOR TABLE                                     ***
**-------------------------------------------------------------------**
         SPACE 1
         SLR   R5,R5
         ST    R11,SAVBASE1       SAVE R11 FOR ESTAE
         LR    R4,R1              SAVE ADDRESS
         L     R0,=F'65536'       GET LENGTH
         ICM   R0,8,SPNUM
GETCORE  GETMAIN RC,LV=(0),LOC=ANY
         LTR   R15,R15
         BNZ   ERROR1
         LR    R3,R1              GET STARTING ADDRESS
         LR    R5,R1              GET STARTING ADDRESS DSECT
         L     R6,=F'65456'       GET END DISPLACEMENT
         AR    R6,R5              GET END ADDRESS
         USING CONSTANT,R5
         MVC   CONSTANT,=C'OLDTABLE' MARK TABLE FOR FUTURE DELETION
         ST    R5,AREAADDR        SAVE ADDRESS
         MVC   AREALENG,=F'65536' SAVE LENGTH
*   THE FOLLOWING ALLOC LOGIC FROM QUE ALLOCATE MODULE
ALLOC    EQU   *
         XC     CTLGBLK,CTLGBLK CLEAR WORK AREA
         LOCATE READCTLG
         LTR   R15,R15        TEST RETURN CODE
         BNZ   LNOGOOD        BRANCH IF NOT ZERO
         MVC   DA08SER(6),CTLGBLK+6
         LA    R1,DAIRDSN     LOAD ADDRESS OF DATA SET NAME
         ST    R1,DA08PDSN    STORE IN ALLOC PARM LIST
         ST    R1,DA18PDSN    STORE IN FREE PARM LIST
         LA    R1,DA18CD      LOAD ADDRESS OF FREE PARM LIST
         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST
         BAL   R9,CALLDAIR    CALL DAIR - FREE THE DDNAME
         LTR   R15,R15        IS RETURN CODE ZERO?
         BZ    DDFREE         YES. CONTINUE
         CH    R15,=H'28'     IS DATASET ALREADY FREE?
         BNE   DAIRFAI2       NO - GO TELL ABOUT IT
DDFREE   EQU   *
         LA    R1,DA08CD      LOAD ADDR OF ALLOC PARM LIST
         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST
         BAL   R9,CALLDAIR    CALL DAIR - ALLOCATE THE DATASET
         LTR   R15,R15        IS RETURN CODE ZERO?
         BZ    OPENFILE       YES. CONTINUE
DAIRSW   NOP   DAIRFAIL       SWITCH FOR PARM LIBRARY
         OI    DAIRSW+1,X'F0'
         MVC   ENQDSN(L'ALTNAME),ALTNAME
         WTO   'DAIR 1 FAILED'
         B     ALLOC
OPENFILE EQU   *
         OPEN  JOBCARDS
GETRST   L     R9,=A(XAMODE)
         SLR   R14,R14
         BSM   R14,R9
XAMODE   EQU   *
         ST    R14,AMODER
         GET   JOBCARDS                EOD TO EODONRST
         LA    R15,ENDIT          CLEAR REGISTER 15
         L     R14,AMODER         GET ADDRESSING MODE
         OR    R15,R14            SET TO OLD MODE
         BSM   R0,R15             BRANCH TO SET MODE
ENDIT    EQU   *
         MVC   RSTREC,0(1)             MOVE REC TO TABLE
         LA    R5,80(,R5)              POINT TO NEXT SLOT
         CR    R6,R5                   IS THERE ROOM FOR ANOTHER?
         BH    GETRST                  YES - GET ANOTHER
         WTO   'STC JOB CARD TABLE FULL - INFORM SYSTEM SUPPORT',DESC=2
         MVI   0(R6),X'00'             CLEAR LAST 80
         MVC   1(79,R6),0(R6)          BYTES
         B     FNDTAG
EODONRST EQU   *                       END OF JOBCARDS FILE
         LA    R15,ENDIT2         CLEAR REGISTER 15
         L     R14,AMODER         GET ADDRESSING MODE
         OR    R15,R14            SET TO OLD MODE
         BSM   R0,R15             BRANCH TO SET MODE
ENDIT2   EQU   *
         MVI   RSTREC,X'00'            BLANK OUT REST
         MVC   RSTREC+1(79),RSTREC     OF RECORD
         LA    R5,80(,R5)              POINT TO NEXT POSITION
         LA    R0,80(,R6)              POINT TO END OF AREA
         SR    R0,R5                   GET LENGTH OF EXCESS
         ICM   R0,8,SPNUM              GET SUB POOL NUMBER
         LR    R1,R5                   GET POINTER
         FREEMAIN RC,LV=(0),A=(1)      FREE EXCESS
         SR    R5,R3                   GET LENGTH OF TABLE
         ST    R5,12(R3)               SAVE FOR NEXT FREE
FNDTAG   EQU   *
         CLOSE (JOBCARDS)
         LA    R1,DAIRDSN     LOAD ADDRESS OF DATA SET NAME
         ST    R1,DA08PDSN    STORE IN ALLOC PARM LIST
         ST    R1,DA18PDSN    STORE IN FREE PARM LIST
         LA    R1,DA18CD      LOAD ADDRESS OF FREE PARM LIST
         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST
         BAL   R9,CALLDAIR    CALL DAIR - FREE THE DDNAME
         LTR   R15,R15        IS RETURN CODE ZERO?
         BZ    DDFREE2        YES. CONTINUE
         CH    R15,=H'28'     IS DATASET ALREADY FREE?
         BNE   DAIRFAI2       NO - GO TELL ABOUT IT
DDFREE2  EQU   *
         L     R2,$USER1          GET OLD POINTER
         LA    R1,16(,R3)         GET BEGINNING OF TABLE
         ST    R1,$USER1          SAVE NEW TABLE ADDRESS
         NI    $USER1,X'7F'       TURN OFF 'LOADING' BIT
         LA    R2,0(R2)           TURN OFF BIT IF ON
         SH    R2,=H'16'
         BNP   GETOUT
         CLC   0(8,R2),=C'OLDTABLE' WAS THE OLD ADDRESS A LOADED TABLE?
         BNE   GETOUT             NO - GET OUT
         L     R1,8(R2)           GET POINTER TO OLD ADDRESS
         L     R0,12(R2)          GET LENGTH TO FREE
         ICM   R0,8,SPNUM
FREECORE FREEMAIN RC,LV=(0),A=(1)
GETOUT   EQU   *
         LR    R1,R13
         L     R13,4(R13)
         FREEMAIN R,LV=LSAVA,A=(1)
         RETURN (14,12),RC=0
CALLDAIR XC    DAIRECB,DAIRECB  CLEAR ECB
         LA    R1,DAPLUPT     LOAD ADDR OF DAIR CALL LIST
         LINK  EP=IKJEFD00    CALL DAIR
         BR    R9             RETURN.
***********************************************************************
*  DAIR HAS FAILED. TAKE A PICTURE AND GO HOME                        *
***********************************************************************
DAIRFAI2 EQU   *
         LR    R7,R15
BADFLMES WTO   'UNABLE TO FREE DD NAME     FOR STC JOB CARDS',DESC=2
         B     DAIRFAI3
DAIRFAIL EQU   *
         LR    R7,R15
DAIRFAI3 EQU   *
         ICM   R10,15,DAIRSW
BADALMES WTO   'UNABLE TO ALLOCATE DATASET FOR STC JOB CARDS',DESC=2
         WTO   'NOTIFY SYSTEM SUPPORT',DESC=2
LNOGOOD  EQU   *
         LR    R8,R0
         LR    R9,R1
         ABEND 99,DUMP        ABEND THE JOB. USER CODE 0099
ERROR1   EQU   *
         WTO   'UNABLE TO OBTAIN STORAGE FOR STC JOB CARDS.',DESC=2
         WTO   'NOTIFY SYSTEM SUPPORT',DESC=2
         B     GETOUT
         SPACE 1
**-------------------------------------------------------------------**
***    ESTAE EXIT ROUTINE                                           ***
**-------------------------------------------------------------------**
         SPACE 1
         USING LDRESTAE,R15       PROVIDE LOCAL ADDRESSABILITY
         USING SDWA,R1            PROVIDE SDWA ADDRESSABILITY
LDRESTAE LR    R3,R1              ASSUME NO SDWA - GET CC
         LA    R4,12              TEST FOR
         CLR   R0,R4                  SDWA PRESENT
         BE    SKIP               NO SDWA , BRANCH - INFO IN REGS
         L     R3,SDWAABCC        GET CC
         L     R2,SDWAPARM        OBTAIN SAVE AREA ADDRESS
SKIP     ST    R3,ABNCC-JNPDSECT(,R2)  SAVE CC
         CLR   R0,R4              WAS A SDWA PROVIDED
         BE    ESTAE1             NO, BRANCH
         SETRP RC=4,RETADDR=LDRMSG,FRESDWA=YES,DUMP=YES
         BR    R14
ESTAE1   LA    R15,4              INDICATE RETRY
         BALR  R0,R14             R0 = RETRY ADDRESS
         SPACE 1
**-------------------------------------------------------------------**
***    RETRY ESTAE ROUTINE     -    INFORM OPERATOR                  **
**------------------------------------------------------------------***
         SPACE 1
         USING LDRMSG,R15         PROVIDE LOCAL ADDRESSABILITY
LDRMSG   LR    R13,R1             RESTORE JNLOADER SAVE AREA
         L     R11,SAVBASE1       RESTORE R11
         L     R12,=A(ONTOP)      RESTORE R12
         DROP  R15                PICK-UP R12 ADDRESSABILITY
         B     GETOUT              EXIT
         SPACE 1
**-------------------------------------------------------------------**
***    CONSTANTS   STORAGE   DSECTS                                 ***
**-------------------------------------------------------------------**
         SPACE 1
LDRABND  ESTAE LDRESTAE,RECORD=YES,MF=L
LDRABNDL EQU   *-LDRABND           LENGTH OF ESTAE
         LTORG
READCTLG CAMLST NAME,ENQDSN,,CTLGBLK
***********************************************************************
*  DATASET ALLOCATION FIELDS                                          *
*     (ADAPTED FROM SYS1.MACLIB (IKJDAPL,IKJDAP08,0C,18))             *
***********************************************************************
QDAIR    DS    0D              START OF DAIR WORK AREAS
DAIRECB  DC    F'0'            ECB USED BE ALLOCATE SUBROUTINE
DAIRFLAG DC    X'08'           FLAG USED BY ALLOCATE SUBROUTINE
         DC    XL3'0'          DEAD SPACE FOR ALIGNMENT
***********************************************************************
*  THE DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR) PARAMETER LIST     *
*  (DAPL) IS A LIST OF ADDRESSES PASSED FROM THE INVOKER TO DAIR      *
*  VIA REGISTER 1                                                     *
***********************************************************************
DAPLUPT  DC    A(0)      PTR TO UPT  (USER PROFILE TABLE)
DAPLECT  DC    A(0)      PTR TO ECT  (ENVIRONMENT CONTROL TABLE)
DAPLECB  DC    A(DAIRECB) PTR TO CP'S ECB  (EVENT CONTROL BLOCK)
DAPLPSCB DC    A(0)      PTR TO PSCB  (PROTECTED STEP CONTROL BLOCK)
DAPLDAPB DC    A(0)      PTR TO DAIR PARAMETER BLOCK
***********************************************************************
*  ALLOCATE DDNAME(W) DSNAME(X) SHR UNIT(Y) VOLUME(Z)                 *
***********************************************************************
DA08CD   DC    X'0008'   DAIR ENTRY CODE
DA08FLG  DC    X'00'     FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0
         DC    X'00'
DA08DARC DC    H'0'      DYN ALLOC RETURN CODE
DA08CTRC DC    H'0'      CATALOG RETURN CODE
DA08PDSN DC    A(DAIRDSN) POINTER TO DSNAME TO BE SEARCHED IN DSE
DA08DDN  DC    CL8'JOBCARDS' DDNAME TO BE SEARCHED IN DSE
DA08UNIT DC    CL8'3380'    UNITNAME
DA08SER  DC    CL8'XXXXXX'  VOLUME SERIAL NUMBER
DA08BLK  DC    F'0'         DATA SET AVERAGE RECORD LENGTH
DA08PQTY DC    F'0'         PRIMARY SPACE QUANTITY
DA08SQTY DC    F'0'         SECONDARY SPACE QUANTITY
DA08DQTY DC    F'0'         DIRECTORY BLOCK QUANTITY
DA08MNM  DC    CL8'STCTBL'  MEMBER NAME
DA08PSWD DC    CL8' '       PASSWORD
DA08DSP1 DC    X'08'        DATA SET STATUS FLGS - SHR
DA08DPS2 DC    X'08'        DATA SET DISPOSITION - KEEP
DA08DPS3 DC    X'08'        DATA SET CONDITIONAL DISPOSITION - KEEP
DA08CTL  DC    X'00'        FLAGS TO CONTROL ACTIONS TAKEN BY DAIR
         DC    XL3'0'       RESERVED
DA08DSO  DC    X'00'        DSORG
DA08ALN  DC    CL8' '       ATTR-LIST-NAME
***********************************************************************
*  FREE DDNAME(XXXXXXXX)                                              *
***********************************************************************
DA18CD   DC    X'0018'      DAIR ENTRY CODE
DA18FLG  DC    X'00'   FUNTIONS TO BE PERFORMED WHEN RET CODE IS  0
         DC    X'00'
DA18DARC DC    H'0'         DYNAMIC ALLOCATION RETURN CODE
DA18CTRC DC    H'0'         CATALOG RETURN CODE AREA
DA18PDSN DC    A(DAIRDSN)   POINTER TO DSNAME TO BE SEARCHED IN DSE
DA18DDN  DC    CL8'JOBCARDS' DDNAME TO BE SEARCHED IN DSE
DA18MNM  DC    CL8' '       MEMBER NAME
DA18SCLS DC    CL2' '       SYSOUT CLASS DESIRED WHEN UNALLOCATING A
*                           SYSOUT DATA SET
DA18DPS2 DC    X'08'        DATA SET DISPOSITION - KEEP
DA18CTL  DC    X'10'        FLAGS FOR SPECIAL DAIR PROCESSING
DA18JBNM DC    CL8' '       IGNORED AS OF OS VS/2 RELEASE 2
DAIRDSN  DC    H'19'        LENGTH OF DSN
ENQDSN   DC    CL44'SYS2.JES2.PARMS'
JOBCARDS DCB   DDNAME=JOBCARDS,MACRF=(GL),DSORG=PS,EODAD=EODONRST
XZERO    DC    X'00'
HSPNUM   DC    H'000'
         ORG   HSPNUM+1
SPNUM    DS    XL1
         DS    0H
CTLGBLK  DS    0D
         DS    CL265
ALTNAME  DC    C'SYS2.PARMS.JES2'   THIS IS MY JES2 INIT PDS
TABLED   DSECT
CONSTANT DS    CL8
AREAADDR DS    F
AREALENG DS    F
RSTREC   DS    0CL80
JNPDSECT DSECT
JNP      DS    18F
ABNCC    DS    F
SAVBASE1 DS    F
AMODER   DS    F
WAREA    DS    16F
LSAVA    EQU   *-JNPDSECT
HASPUSR  CSECT ,
         $MODEND
         END
/*
