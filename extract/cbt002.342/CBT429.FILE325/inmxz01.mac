***********************************************************************
*                                                                     *
*   MODULE NAME:  INMXZ01                                             *
*                                                                     *
*   DESCRIPTION:  WELLS FARGO BANK TSO/E TRANSMIT INITIALIZATION EXIT *
*                                                                     *
*        STATUS:  TSO/E XA RELEASE 2.1                                *
*                                                                     *
*      FUNCTION:  PREVENT TRANSMISSION TO NON-EXISTENT TSO USERIDS    *
*                 ON SAME NODE AS SENDER (JES2 EXIT 13 HANDLES NJE)   *
*                 AND THEREBY KEEP UNRECEIVABLE DATA OFF JES2 SPOOL.  *
*                                                                     *
*     OPERATION:  -  SEARCH ADDRESS LIST FOR LOCAL NODE.              *
*                 -  IF FOUND, CALL ACF2 TO VERIFY EXISTENCE OF USER. *
*                 -  IF NOT VALID, REMOVE USERID FROM ADDRESS LIST    *
*                      AND ISSUE ERROR MESSAGE TO TRANSMITTING USER.  *
*                 -  ALWAYS RETURN CONDITION ZERO (CONTINUE TRANSMIT).*
*                                                                     *
*  DEPENDENCIES:  MUST BE LINK-EDITED WITH INCLUDE FOR ACF$GCVT,      *
*                 OR BE ALLOWED TO RESOLVE EXTERNAL REFERENCE TO      *
*                 $ACFGCVT LOCATED IN SYS3.ACF2.V###.ACFMOD(ACF$GCVT).*
*                                                                     *
*                 REQUIRES PTF UZ39974 (OR EQUIVALENT) BE INSTALLED   *
*                 FOR CORRECT FUNTIONING OF "UNCHAINING".             *
*                                                                     *
*     REGISTERS:  R0  -  PARM/WORK REGISTER                           *
*                 R1  -  PARM/WORK REGISTER                           *
*                 R2  -  WORK REGISTER (ALSO USED TO PASS RC TO R15)  *
*                 R3  -  POINTER TO FROM-NODE NAME                    *
*                 R4  -  MACHINE LENGTH OF FROM-NODE NAME             *
*                 R5  -  POINTER TO CURRENT TO-USER DATA              *
*                 R6  -  POINTER TO PREVIOUS TO-USER DATA             *
*                 R10 -  TEMPORARY BASE FOR TSO CPPL                  *
*                 R11 -  POINTER TO INPUT PARAMETER LIST              *
*                 R12 -  BASE REGISTER                                *
*                 R13 -  BASE REGISTER FOR WORKAREA                   *
*                 R14 -  RETURN REGISTER                              *
*                 R15 -  RETURN CODE REGISTER                         *
*                                                                     *
*    ATTRIBUTES:  KEY 8, PROBLEM STATE, APF ON, REENTRANT             *
*                                                                     *
*         INPUT:  R1, POINTER TO PARAMETER LIST, SEE PL@LIST          *
*                                                                     *
*        OUTPUT:  ADDRESS LIST RECHAINED TO REMOVE INVALID USERIDS    *
*                                                                     *
*          EXIT:  ALWAYS CONDITION CODE ZERO - CONTINUE TRANSMIT      *
*                                                                     *
* EX REFERENCES:  ACF$GCVT (AKA $ACFGCVT)                             *
*                                                                     *
*  CONTROL BLKS:  ACF CONTROL BLOCKS:  ACCVT AND ACALT                *
*                                                                     *
* MACROS & SVCS:  ACFREGS, ACFSVC, FREEMAIN, GETMAIN, IKJCPPL,        *
*                 PUTLINE, RETURN, SAVE                               *
*                                                                     *
*   ABEND CODES:  NONE                                                *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*    CHANGE LOG:  SAM LEPORE     JANUARY 1985                         *
*                   ORIGINAL VERSION                                  *
*                                                                     *
*                 SAM LEPORE     AUGUST 1985                          *
*                   TEXT EDITED FOR XA COMPATIBILITY                  *
*                                                                     *
***********************************************************************
         EJECT
*
***********************************************************************
*        INITIALIZATION                                               *
***********************************************************************
*
INMXZ01  CSECT
         SAVE  (14,12),,INMXZ01_V1.0_&SYSDATE_&SYSTIME
         LR    R12,R15                 SAVE ENTRY POINT
         USING INMXZ01,R12             SET UP BASE REGISTER
         LR    R11,R1                  COPY PARM LIST ADDRESS
         USING PL@LIST,R11             ESTABLISH ADDRESSABILITY
         GETMAIN RU,LV=WORKLEN         OBTAIN STORAGE
         ST    R13,4(,R1)              CHAIN SAVE AREAS
         ST    R1,8(,R13)
         LR    R13,R1                  NEW SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
*
***********************************************************************
*        SET UP ACF VERIFICATION CALL PARAMETER LIST (ACALT)          *
***********************************************************************
*
         XC    ACALT(ACALTLEN),ACALT   CLEAR PARAMETER LIST
         MVI   ACAFCN,2                SET REQUEST TYPE = ACALT
         MVI   ACASFCN,ACASIRT         SET FUNCTION = INFO RETURN
         MVC   ACAUCB,=X'FFFFFFFF'     INDICATE ACF2 "SUPERCALL"
         LA    R1,MSGAREA              POINT T ERROR MSG AREA
         ST    R1,ACAMSG               STORE IN ACF PARMS
         LA    R1,RETBUFF              ADDRESS INFO RETURN BUFFER
         ST    R1,ACARETB              STORE IN ACF PARMS
         LA    R1,L'RETBUFF            GET LENGTH OF RETURN BUFFER
         ST    R1,ACARETL              STORE IN ACF PARMS
         EJECT
*
***********************************************************************
*        ONE OF THE ENRTY PARAMETERS POINTS TO A TWO TEXT UNIT LIST   *
*        THAT DESCRIBES THE TRANSMITTING USER:                        *
*        PARM  ==> +0 POINTER ==> USERID TEXT UNIT                    *
*                  +4 POINTER ==> NODE TEXT UNIT                      *
*                                                                     *
*        NOTE: EVERY TEXT UNIT (T/U) IS OF THE FOLLOWING FORMAT       *
*      +0  KEY   DS  XL2    TYPE OF T/U               (EG. X'1011'  ) *
*      +2  NUM   DS  XL2    NUMBER OF LEN+PARM PAIRS  (    X'0001'  ) *
*      +4  LEN   DS  XL2    LENGTH OF PARM VALUE      (    X'0006'  ) *
*      +6  PARM  DS  ....   ACTUAL PARAMETER          (    C'SFTEST') *
*                                                                     *
***********************************************************************
*
         L     R2,PLFUTXTU             ADDRESS "FROM" T/U POINTER LIST
         L     R3,4(,R2)               ADDRESS SECOND T/U
         LH    R4,4(,R3)               GET LENGTH OF FROM-NODE
         BCTR  R4,0                    DECREMENT FOR EXECUTE
         LA    R3,6(,R3)               POINT TO FROM-NODE NAME
*
***********************************************************************
*        SEARCH ADDRESS LIST FOR LOCAL NODE                           *
***********************************************************************
*
         LA    R5,PLTULIST             POINT TO ADDRESS OF DATA CHAIN
         USING AL@LIST,R5
NEXTUSER EQU   *
         LR    R6,R5                   SAVE CURRENT AS PREV FOR RECHAIN
NEWCHAIN EQU   *
         ICM   R5,B'1111',ALNEXT       ADDRESS NEXT TO-USER DATA
         BZ    RETURN0                 END OF CHAIN
         EX    R4,CLCNODE              COMPARE FROM/TO NODE NAMES
         BNE   NEXTUSER                NOT EQUAL, RECV JES2 WILL VERIFY
*
***********************************************************************
*        ISSUE ACF2 USERID VERIFICATION CALL                          *
***********************************************************************
*
         XC    MSGAREA,MSGAREA         CLEAR ERROR MSG AREA
         XC    RETBUFF,RETBUFF         CLEAR INFO RETURN BUFFER
         MVC   ACALID,ALUSER           MOVE RECEIVER ID FOR VERIFY
*
*        NOTE: ACFSVC MODIFIES REGISTERS R0, R1, R2, R14, R15
*
         ACFSVC ACALT,NONE=RETURN0     CALL ACF TO VERIFY USERID EXISTS
         LTR   R15,R15                 IS IT GOOD ?
         BZ    NEXTUSER                YES, CHECK NEXT USERID
*
***********************************************************************
*        ISSUE "USERID NOT FOUND", UNCHAIN USERID FROM ADDRESS LIST   *
***********************************************************************
*
         MVC   MSGAREA(UIDNFLEN),UIDNFMSG  PREPARE ERROR MESSAGE
         MVC   MSGAREA+(UIDNFUID-UIDNFMSG)(L'ALUSER),ALUSER MOVE IN UID
         LH    R1,ALUSERL              GET LENGTH OF USERID
         LA    R1,MSGAREA+(UIDNFUID-UIDNFMSG)(R1)  POINT TO NEXT BYTE
         MVI   0(R1),C'.'              ADD PERIOD FOR PUNCTUATION
         XC    PUTLECB,PUTLECB         CLEAR THE ECB
         L     R10,PLTSCPPL            ADDRESS TSO CMD PROCSR PARM LIST
         USING CPPL,R10
         PUTLINE PARM=PUTLPARM,UPT=CPPLUPT,ECT=CPPLECT,ECB=PUTLECB,    X
               OUTPUT=(MSGAREA,DATA),MF=(E,PUTLIOPL)
         DROP  R10
         MVC   ALNEXT-AL@LIST(L'ALNEXT,R6),ALNEXT  POINT PREV TO NEXT
         B     NEWCHAIN                GO NEXT, DON'T MOVE PREV POINTER
*
***********************************************************************
*        SET ZERO RETURN CODE                                         *
***********************************************************************
*
RETURN0  EQU   *
         SR    R2,R2                   ZERO RETURN CODE
*
***********************************************************************
*        RETURN ROUTINE                                               *
***********************************************************************
*
RETURN   EQU   *
         LR    R1,R13                  SAVE POINTER OF STORAGE
         L     R13,4(,R13)             GET OLD SAVEAREA ADDRESS
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE
         LR    R15,R2                  PASS RETURN CODE TO R15
         RETURN (14,12),RC=(15)        AND RETURN
         SPACE 3
*
***********************************************************************
*        LITERALS AND CONSTANTS                                       *
***********************************************************************
*
CLCNODE  CLC   0(0,R3),ALNODE          (EXECUTED) COMPARE FROM/TO NODE
UIDNFMSG DC    Y(UIDNFLEN)             "USERID NOT FOUND" MESSAGE
         DC    H'0'
         DC    C'TRANSMIT will not be done to '
UIDNFUID DC    CL8' '
         DC    C'  The userid does not exist at this node.'
UIDNFLEN EQU   *-UIDNFMSG              LENGTH OF MSG+HEADER FOR PUTLINE
         LTORG
*
***********************************************************************
*        DSECTS AND MAPPING MACROES                                   *
***********************************************************************
*
WORKAREA DSECT
SAVEAREA DS    9D                      STANDARD REGISTER SAVEAREA
ACALT    ACALT DSECT=NO                ACF2 LOGONID DATABASE CALL PARMS
ACALTLEN EQU   *-ACALT
MSGAREA  DS    CL128                   ACF2 ERROR MESSAGE AREA
RETBUFF  DS    CL52                    LOGONID INFO RETURN BUFFER
PUTLPARM PUTLINE MF=L                  PUTLINE PARAMETER LIST
PUTLIOPL DS    4F                      PUTLINE I/O PARAMETER LIST
PUTLECB  DS    F                       PUTLINE ECB
WORKLEN  EQU   *-WORKAREA
         ACFREGS
*
***********************************************************************
*        LOCAL MAPPING FOR INMZX01 ENTRY PARAMETER LIST               *
***********************************************************************
*
PL@LIST  DSECT                         ENTRY PARAMETER LIST
PLUSERWD DS    A                       ADDR OF A USER WORD
PLXMKWDP DS    A                       ADDR OF KEYWORD PARM('STRING')
PLACTFLG DS    A                       ADDR OF 1 BYTE ACTION FLAGS
PLTSCPPL DS    A                       ADDR OF TSO CMD PROCSR PARM LIST
PLXMEMSG DS    A                       ADDR OF ERR MSG XMIT TO ISSUE
PLSTAFLG DS    A                       ADDR OF 1 BYTE STATUS FLAGS
PLFUTXTU DS    A                       ADDR OF FROM-USER TEXT UNITS
PLFDTXTU DS    A                       ADDR OF FROM-DATASET TEXT UNITS
PLTULIST DS    A                       ADDR OF TO-USER DATA CHAIN
PLXMDDNM DS    A                       ADDR OF DDNAME TO REPLACE DSN
PLRXPSTG DS    A                       ADDR OF STRING FOR RECV EXITS
PLRXNSTG DS    A                       ADDR OF NOTIFY MSG FOR RECV EXIT
*
***********************************************************************
*        LOCAL MAPPING FOR ADDRESS LIST DATA CHAIN OF TO-USERS        *
***********************************************************************
*
AL@LIST  DSECT                         ADDRESS LIST CHAIN OF TO-USERS
ALNEXT   DS    A                       ADDR OF NEXT ENTRY, OR ZERO
ALNODEL  DS    H                       LENGTH OF TARGET NODE NAME
ALNODE   DS    CL8                     TARGET NODE NAME
ALUSERL  DS    H                       LENGTH OF TARGET USERID
ALUSER   DS    CL8                     TARGET USERID
ALNICKL  DS    H                       LENGTH OF NICKNAME, OR ZERO
ALNICK   DS    CL8                     NICKNAME OF USERID
ALNAMEL  DS    H                       LENGTH OF NAME TAG, OR ZERO
ALNAME   DS    CL30                    NAME TAG OF USERID
ALFLAG   DS    X                       FLAG BYTE
ALNOTIFY EQU   X'80'                     REQUEST NOTIFY FOR THIS USERID
ALXMITOK EQU   X'20'                     XMIT SUCCESFULLY COMPLETED
         DS    X                       (RESERVED)
ALPARML  DS    H                       LENGTH OF PARM TAG, OR ZERO
ALPARM   DS    CL30                    PARM TAG OF USERID
*
         IKJCPPL
         PRINT NOGEN
         ACCVT
         END
