//*
//*  TO ASSEMBLE FOR SAN FRANCISCO, 'AGO .ELMONTE' MUST BE COMMENTED
//*  TO ASSEMBLE FOR ELMONTE, REMOVE THE COMMENT ASTERISK FROM COL 1
//*  TO CHANGE PASSWORD MODIFY VIPWORD FIELD
//*
//ASM.SYSIN    DD *
         TITLE 'S P Y --  MVS CONSOLE SPY PROGRAM  --  VERSION 3.3'
OPCON    CSECT
***********************************************************************
*                                                                     *
*                                 S P Y                               *
*                                                                     *
*                               02/26/82                              *
*                                                                     *
*                       OPERATOR CONSOLE MONITOR                      *
*                                                                     *
*                                      FIX FOR MOD-2 CNS09/87 V3.3.2CN*
*                                                                     *
*                                      MODIFIED FOR WFB 07/87 V3.3.1CN*
*                                                                     *
*                                      MODIFIED FOR WFB 05/86 V3.3.1VC*
*                                                                     *
*                                      MODIFIED FOR WFB 04/86 V3.3  VC*
*                                                                     *
*                                      MODIFIED FOR WFB 12/83       SL*
*                                      TAKEN FROM CBT FILE338       SL*
*                                      (NAME CHANGED TO "OPCON" IN  SL*
*                                      THE CODE, BUT COMMENTS STILL SL*
*                                      REFER TO "SPY")              SL*
*                                                                   SL*
*                                                                   SL*
*     C A U T I O N   * * *   BE CAREFUL IN EDITING ... THERE IS    SL*
*                             lower case TEXT IN THE LITERALS USED  SL*
*                             FOR THE BUILT IN HELP SCREEN, AND IN  SL*
*                             THE HELP ENTRY AT END OF THE SOURCE.  SL*
*                                                                   SL*
*   V3.3.2 - FIX SUPPORT FOR 3278-3 USER TERMINAL                   VC*
*                                                                   SL*
*   V3.3.1 - CHANGE CONSOLE ASID TO 7 DUE TO CATALOG ASID W/ DFP V2.VC*
*                                                                   SL*
*     V3.3 - ADD SUPPORT FOR CONSOLES THAT HAVE EXTENDED FIELD      VC*
*            ATTRIBUTES (E.G. 3179, 3180, 3279-3B, ETC.).  THIS IS  VC*
*            NECESSARY BECAUSE THE EXTENDED FIELD ATTRIBUTES ADD    VC*
*            SIX CHARACTERS TO THE LENGTH OF EACH CONSOLE DISPLAY   VC*
*            LINE AND OPCON COULD NOT SUPPORT THEM.  THIS VERSION   VC*
*            CAPTURES THE ORIGINAL EXTENDED MODE SCREEN IMAGE AND   VC*
*            THEN REFORMATS IT INTO A NON-EXTENDED FORMAT SO THAT   VC*
*            IT CAN BE DISPLAYED ON ANY TYPE OF TERMINAL DEVICE.    VC*
*(NOT DONE)- ADD SUPPORT TO PROCESS A PARM SPECIFIED ON ENTRY THAT  VC*
*(NOT DONE)  INDICATES WHICH CONSOLE SHOULD BE INITIALLY DISPLAYED  VC*
*(NOT DONE)  (DEFAULT IS MASTER CONSOLE).                           VC*
*          - MAKE OPCON NON-SWAPPABLE                               VC*
*          - UPDATE CONSOLE ID TABLE                                VC*
*          - SET CONASID TO 6 FOR XA (S/370 CONASID IS 5)           VC*
*                                                                   VC*
*     V3.2 - ELIMINATE SPECIAL CHARACTER REQUIRED TO PRECEDE OS CMD SL*
*          - ELIMINATE SECRET AUTH SVC, RESTORE MODESET AND SVC34   SL*
*          - CORRECT BUFFER ADDRESS PROBLEM WITH LINE 1 OF DISPLAY  SL*
*          - CORRECT LOOP COUNT FOR UCM BUILD                       SL*
*          - ADD SUBCOMMAND A.. (AUTO W.. AFTER COMMAND ENTRY)      SL*
*          - ADD CHECK AT INITIALIZATION FOR TSO OPER AUTHORITY     SL*
*          - MAKE COMMAND ENTRY AREA NON-DISPLAY UNTIL PASSWD GIVEN SL*
*          - MAKE "OPER REDISPLAY" AREA MODIFIABLE FOR REENTRY      SL*
*          - FILL BOTH ENTRY AREAS WITH NULLS TO ALLOW CHAR INSERT  SL*
*          - REDISPLAY LAST CMD ENTERED BY USER (INSTEAD OF OPER)   SL*
*          - MOVE CONSOLE STATUS TABLE TO SEPARATE CSECT            SL*
*          - RESTRUCTURE THE HELP SCREEN AND USE UPPER/LOWER CASE   SL*
*          - PROVIDE TSO HELP ENTRY AS COMMENTS AT END OF SOURCE    SL*
*                                                                   SL*
*     THIS PROGRAM DISPLAYS THE CONTENTS OF ALL ACTIVE GRAPHIC        *
*     OPERATOR'S CONSOLES ON A TSO CRT. THE OPERATOR'S SCREEN CAN BE  *
*     EITHER A 327X OR A 370-168 INTEGRATED CONSOLE WITH 35 LINES.    *
*     THE TSO USER CAN USE ANY 327X TERMINAL.                         *
*                                                                     *
*     SPY MUST, ALAS, BE APF AUTHORIZED. THE OPERATOR CONSOLE BUFFERS *
*     AND CONTROL BLOCKS ARE NOW IN FETCH PROTECTED STORAGE. BE       *
*     SURE TO PLACE THE 'SPY' COMMAND IN IKJEFTE2 AND/OR IKJEFTE8     *
*     SO THAT IT WILL RETAIN APF AUTHORIZATION FROM TSO.              *
*                                                                     *
*     SPY GIVES A TSO USER THE CAPABILITY TO ENTER ANY                *
*     CONSOLE OPERATOR COMMAND. THIS FACILITY IN PROTECTED BY A       *
*     SIMPLE 3 CHARACTER PASSWORD (IN VIPWORD) TO PREVENT YOU         *
*     FROM ENTERING AN OPERATOR COMMAND BY ACCIDENT.                  *
*                                                                     *
*     THE INPUT AREA IS SET TO NON-DISPLAY UNTIL THE PASSWORD IS    SL*
*     ENTERED. TYPING THE 3-LETTER PASSWORD 'TOGGLES' THE VIP FLAG  SL*
*     ON/OFF AND THE INPUT AREA DISPLAY/NON-DISPLAY. WHEN THE VIP   SL*
*     FLAG IS ON (INDICATED BY AN * BETWEEN THE "MODE" AND "PAGE"   SL*
*     FIELDS ON THE INFO LINE) ANYTHING YOU ENTER IN THE INPUT AREA SL*
*     IS PASSED TO THE SYSTEM AS A COMMAND IF:                      SL*
*         FIRST CHARACTER IS $         ASSUMED TO BE JES COMMAND    SL*
*         FIRST CHARACTER IS NUMERIC   ASSUMED TO BE OS REPLY       SL*
*         INPUT IS MORE THAN 3 CHARS   ALL SPY CMDS ARE 3 OR LESS   SL*
*                                                                     *
*     THE OPERATOR INPUT LINE (USED BY MCS TO RESPOND TO PA1) IS    SL*
*     DISPLAYED ABOVE YOUR INPUT AREA BECAUSE PA1 AT YOUR TERMINAL  SL*
*     IS PROCESSED BY TSO AS ATTENTION INTERRUPT. BOTH INPUT LINES  SL*
*     CAN BE USED FOR ENTRY, BUT ONLY 79 CHARACTERS ARE READ - THE  SL*
*     REST (IF ANY) IS JUST IGNORED.                                SL*
*                                                                     *
*         =====================>   NOTE THAT THE RESPONSE TO THE      *
*     COMMAND APPEARS ONLY ON THE SCREEN YOU ARE WATCHING AT THE      *
*     TIME. ALSO, YOUR COMMANDS HAVE THE SAME CONSOLE AUTHORITY       *
*     AS THE SCREEN YOU ARE WATCHING, INCLUDING THE MASTER CONSOLE!   *
*     THE MORAL BEING DON'T WATCH THE MASTER CONSOLE AND ACCIDENTALLY *
*     ENTER '/Q' OR SOMETHING LIKE THAT...                            *
*                                                                     *
*     THIS PROGRAM WILL PROBABLY REQUIRE BOTH THE SYS1.AMODGEN AND    *
*     SYS1.APVTMACS MACRO LIBRARIES TO ASSEMBLE PROPERLY.             *
*     SPY WAS DEVELOPED ON A 370/168 MVS RELEASE 3.7; THIS VERSION    *
*     WILL ONLY RUN ON MVS/SP1.3                                      *
*                                                                     *
*                        STEVE LANGLEY           ===> AS OF 2/84    SL*
*                        SOUTHERN CALIF. EDISON       HE NO LONGER  SL*
*                        ROSEMEAD, CALIF   91770      WORKS THERE.  SL*
*                        213-572-3435                 WHERE ???     SL*
*                                                                     *
*                                                                     *
*     PROGRAMMERS NOTE: ALTHOUGH THERE IS NO SUPPORT FOR EXTERNALLY SL*
*     SETTING "TESTFLAG" TO NON-ZERO, DOING THIS (VIA ZAP ?) WILL   SL*
*     CAUSE SKIP AROUND CROSS MEMORY, KEY ZERO, AND SUPERVISOR CODE SL*
*                                                                   SL*
*                                                                   SL*
***********************************************************************
      EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*  COMMAND     DESCRIPTION                                            *
*                                                                     *
*     B        (BYE) END SPY                                          *
*     C        SWITCH MONITOR TO CONSOLE 1                            *
*     CXX      SWITCH MONITOR TO CONSOLE XX                           *
*     DXX      SET DELAY TO XX TENTHS SECONDS (SCREEN REFRESH RATE)   *
*     E        END SPY                                                *
*     F        FREEZE DISPLAY ON CURRENT PAGE (VALID FOR 3066 ONLY) SL*
*     L        LINK TO SWAP PROGRAM (IF AVAILABLE)                    *
*                      ---- -------    NOT AVAILABLE, "L" WILL BE   SL*
*                                      INTERPRETED AS "LEAVE"       SL*
*     R        RELEASE DISPLAY                (VALID FOR 3066 ONLY) SL*
*     S        STATUS OF ALL CONSOLES                                 *
*     W        START TIMER MODE FOR 30 TIMES OF DXX, THEN PAUSE       *
*     WXX      START TIMER MODE FOR XX TIMES OF DXX, THEN PAUSE       *
*     W0       START TIMER MODE UNTIL INTERRUPT                       *
*     ?        DISPLAY THIS PAGE                                      *
*     1        DISPLAY MODE 1                                         *
*     2        DISPLAY MODE 2                                         *
*                                                                     *
*  HITTING INTERRUPT WILL STOP THE WAIT TIMER                         *
*                                                                     *
*     DISPLAY MODES 1 AND 2 ARE ONLY USEFUL WHEN WATCHING A LARGE     *
*     35-LINE 3066 370-168 INTEGRATED CONSOLE FROM A 24-LINE 327X-2   *
*     TSO TERMINAL. THESE MODES ARE:                                  *
*                                                                     *
*     DISPLAY MODE 1 - PAGE 1 = TOP 22 LINES                          *
*                      PAGE 2 = BOTTOM 12 LINES                       *
*     DISPLAY MODE 2 - PAGE 1 = TOP 22 LINES                          *
*                      PAGE 2 = BOTTOM 22 LINES                       *
*                                                                     *
***********************************************************************
         SPACE 4
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         B     116(R15)           BRANCH AROUND SAVE AREAS          VC
         DC    CL9'OPCON'         IDENTIFIER
         DC    CL9'&SYSDATE'
         DC    CL7'&SYSTIME'
         DC    CL13'VERSION 3.3.2'     FROM CBT VERSION 3.1         VC
SAVE     DC    18F'0'             SAVE AREA
         STM   R14,R12,12(R13)    SAVE REGISTERS
         LR    R12,R15            R12 = ADDR OF ENTRY POINT
         USING OPCON,R12,R11      ADDRESABILITY TO CSECT
         LA    R11,SAVE           R11 = ADDR OF OUR SAVE AREA
         ST    R13,SAVE+4         SAVE POINTER TO CALLERS SAVE AREA
         ST    R11,8(R13)         SAVE PTR TO OUR SAVE AREA IN CALLER'S
         LR    R13,R11            R13 = ADDR OF OUR SAVE AREA
         LA    R11,4095(R12)      R11 WILL BE
         LA    R11,1(R11)         SECOND BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*                       PROGRAM INITIALIZATION                        *
*                                                                     *
***********************************************************************
         BAL   R14,INITSCAN       INITIALIZE IKJSCAN PARMLIST
         GTSIZE ,                 GET SCREEN SIZE
         LTR   R0,R0              R0 = NUMBER OF LINES PER SCREEN
         BZ    HARDCOPY           IF NONZERO ASSUME A CRT IS IN USE
***********************************************************************
*                                                                     *
*                       THIS TERMINAL IS A CRT                        *
*                                                                     *
***********************************************************************
CRT      STH   R0,LPSCREEN        R0 = LINES PER SCREEN
         STH   R1,CPLINE          R1 = CHARACTERS PER LINE
         CH    R0,=H'24'          IS USER ON A 3277?
         BE    FLSCREEN           YES, JUST CONTINUE
         CH    R0,=H'32'          IS USER ON A 3278-3?               VC
         BNE   MOD4USER           NO, ASSUME MOD4                    VC
         MVI   MOD3FLG,X'FF'      SET 3278-3 FLAG ON                 VC
         MVC   CMDCTRL(3),R30C1   ROW 30, COL 1                      VC
         MVC   PHEADING(3),R31C1  ROW 31, COL 1                      VC
         MVC   R24C1(3),R32C1     ROW 32, COL 1                      VC
         B     FLSCREEN           CONTINUE                           VC
MOD4USER MVI   MOD4FLG,X'FF'      SET 3278-4 FLAG ON
         MVC   CMDCTRL(3),R41C1   ROW 41, COL 1
         MVC   PHEADING(3),R42C1  ROW 42, COL 1
         MVC   R24C1(3),R43C1     ROW 43, COL 1
FLSCREEN CLI   TESTFLAG,X'00'
         BNE   SKPTST1
         STFSMODE ON,INITIAL=YES  TURN ON VTAM FULL SCREEN MODE
         LA    R3,STAXLIST        R3 = ADDRESS OF STAX LIST MACRO
         STAX  ATTNEXIT,MF=(E,(3)) ATTN EXIT TRAP
SKPTST1  EQU   *
         B     BLDUCMS
***********************************************************************
*                                                                     *
*                    THIS TERMINAL IS A HARDCOPY                      *
*                                                                     *
***********************************************************************
HARDCOPY STSIZE SIZE=80           OTHERWISE, HARDCOPY; SET LSIZE=80
         MVI   CRTFLAG,X'00'      WE ARE USING A HARDCOPY
         MVC   CMDCTRL(6),BLANKS  ZAP OUT 327X CNTRL CHARS
         MVC   PHEADING(6),BLANKS ZAP OUT 327X CNTRL CHARS
         MVC   HELP(14),BLANKS    ZAP OUT 327X CNTRL CHARS
         SPACE 3
***********************************************************************
*                                                                     *
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *
*                                                                     *
***********************************************************************
BLDUCMS  L     R4,CVTPTR          R4 = ADDR OF CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4
         USING UCM,R4
         LR    R2,R4              R2 = R4
         S     R2,=F'4'           R2 = ADDR OF ADDR OF UCM PREFIX
         L     R2,0(R2)           R2 = ADDR OF UCM PREFIX
         USING UCMPRFX,R2
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         L     R8,@UCMTAB         R8 = ADDR OF UCMTAB (TABLE CSECT) SL
         LA    R8,16(,R8)         R8 = ADDR OF FIRST CONSOLE ENTRY  SL
         L     R9,UCMTABE         R9 = ADDR OF END OF UCMTAB
         XR    R10,R10            R10 = 0 (NUMBER OF VALID UCMS)
         MVC   CONSOLE(4),=F'1'   MAKE DEFAULT CONSOLE = 1          SL
UCMLOOP  ST    R5,0(R8)           SAVE UCM ADDRESS IN UCMTAB
         LA    R10,1(R10)         R10 = R10 + 1  (ONE MORE UCM)
         C     R5,UCMMCENT        IS THIS UCM THE MASTER CONSOLE UCM?
         BNE   UCMNEXT            NO;  GO LOOK AT NEXT UCM ENTRY
         ST    R10,CONSOLE        YES; LOOK AT THIS ONE FIRST
UCMNEXT  LA    R8,16(R8)          R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMFULL            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BNH   UCMLOOP            NO; KEEP GOING    (FIXED: WAS BL) SL
         B     UCMDONE            YES; TABLE COMPLETE
UCMFULL  MVC   ERROR(26),ERRMSG5  UCM TABLE TOO SMALL
UCMDONE  STH   R10,NUMUCMS        SAVE NUMBER OF UCMS FOUND
         DROP  R2,R4
         SPACE 3
***********************************************************************
*                                                                     *
*         HERE WE GO... USE MODESET TO PUT US IN KEY 0                *
*                                                                     *
***********************************************************************
SETAUTH  DS    0H                                                  SP3
         CLI   TESTFLAG,X'00'
         BNE   SKPTST2
*                                                              AEI SP3
*        UHBAPF AUTH=ON             MAKE SPY AUTHORIZED        AEI SP3
*                                                              AEI SP3
*                                      UHBAPF NOT AVAILABLE,        SL
*                                      OPCON WILL BE LINKED AC=1    SL
         MODESET MODE=SUP                                          SP3
         ESAR  R5                   GET SEC ASID                   SP3
         ST    R5,SASID             KEEP IT                        SP3
         AXSET AX=ONE               SET AX TO ALLOW SSAR           SP3
         SPACE 2                                                    VC
         SYSEVENT TRANSWAP          SET OPCON NON-SWAPPABLE         VC
         SPACE 2                                                    VC
         GETMAIN R,LV=820           GETMAIN AREA FOR TDCM          SP3
         ST    R1,LOCDCM            SAVE THE ADDRESS               SP3
         SPACE 2                                                    VC
         GETMAIN R,LV=3870          GETMAIN AREA FOR TEMP BUFFER    VC
         ST    R1,LOCTBUF           SAVE THE ADDRESS                VC
SKPTST2  EQU   *
         EJECT
***********************************************************************
*                                                                     *
*                            TOP OF LOOP                              *
*              LOCATE SCREEN BUFFER AND PREPARE TO TPUT               *
*                                                                     *
***********************************************************************
NEXTPAGE CLI   ATTNFLG,X'00'      WAS ATTN HIT?
         BE    NOATTN             NO
*                                 ATTENTION KEY HIT; PROCESS IT
         MVI   ATTNFLG,X'00'      YES, RESET FLAG
         MVC   TIME(3),BLANKS     BLANK OUT TIMER FIELD
         MVI   WAITFLG,X'00'      TURN OFF WAIT FLAG
         XC    TIMER,TIMER        SET TIMER TO 0
NOATTN   EQU   *
         L     R5,@UCMTAB         R5 = ADDR OF UCMTAB (TABLE CSECT) SL
         L     R4,CONSOLE         R4 = CONSOLE TO BE DISPLAYED
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   GETUCM             NO, CONTINUE
RESETCN  MVC   ERROR(26),ERRMSG1  CONSOLE UNDEFINED
RESETCN1 L     R4,OLDCONS         RESET TO OLD CONSOLE
         ST    R4,CONSOLE         AND SAVE IT
GETUCM   SLL   R4,4               MULTIPLY BY 16
         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM
         LR    R1,R5              R1 = ADDR OF UCMTAB ENTRY
         L     R5,0(R5)           R5 = ADDR OF UCM
         USING UCMLIST,R5
         ST    R5,@UCM            SAVE UCM ADDRESS                  VC
         L     R6,UCMXB           R6 = ADDR OF RDCM
         USING DCMTSRT,R6
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS           YES
***********************************************************************
*                                                                     *
*       THIS IS NOT AN OPERATOR GRAPHIC CONSOLE - GIVE ERRMSG4        *
*                                                                     *
***********************************************************************
         L     R5,@UCMTAB         R5 = ADDR OF UCMTAB (TABLE CSECT) SL
         MVC   ERROR(26),ERRMSG4  NON-GRAPHIC CONSOLE
         B     RESETCN1           RESET THE CONSOLE NUMBER
GRAPHICS EQU   *
********************************************************************VC*
*                                                                   VC*
*       IF THIS OPERATOR CONSOLE IS INACTIVE - GIVE ERRMSG10        VC*
*                                                                   VC*
********************************************************************VC*
         TM    UCMATR,UCMUF       IS THIS CONSOLE ACTIVE?           VC
         BO    GRAPHIC2           YES, CONTINUE                     VC
         MVC   ERROR(26),ERRMSG10 CONSOLE INACTIVE MESSAGE          VC
         L     R5,@UCMTAB         R5 = ADDR OF UCMTAB (TABLE CSECT) VC
         B     RESETCN1           RESET THE CONSOLE NUMBER          VC
         SPACE 1                                                    VC
***********************************************************************
*                                                                     *
*   THIS IS A GRAPHIC CONSOLE - BUILD TRAILER LINE WITH CONSDATA      *
*                                                                     *
***********************************************************************
GRAPHIC2 BAL   R14,CONSDATA       CALL CONSDATA RTN                 VC
         SPACE
         CLI   TESTFLAG,X'00'                                       SL
         BNE   SKPTST3                                              SL
*       SETUP TO COPY PAGEABLE DCM TO OUR ADDRESS SPACE            SP3
         L     R5,DCMADTRN        ADDR OF TDCM - 'FROM' FOR MVCP   SP3
         LA    R7,CONASID         GET 'CONSOLE' ASID               SP3
         SSAR  R7                 SET CONSOLE AS SECONDARY         SP3
         L     R7,LOCDCM          'TO' ADDR FOR MVCP               SP3
         LA    R3,820             LENGTH TO MOVE                   SP3
         SR    R15,R15            'FROM' KEY                       SP3
MOVEDCM  MVCP  0(R3,R7),0(R5),R15  MOVE IT                         SP3
         BZ    DCMMOVED                                            SP3
         LA    R5,256(R5)         BUMP 'FROM' ADDR                 SP3
         LA    R7,256(R7)         BUMP 'TO' ADDR                   SP3
         SH    R3,=H'256'         DECREMENT TRUE LENGTH            SP3
         B     MOVEDCM            GO GET THE REST                  SP3
         SPACE
DCMMOVED L     R5,SASID           RESTORE PREVIOUS SECONDARY -     SP3
         SSAR  R5                 SHOULD BE SAME AS PRIMARY        SP3
         L     R7,LOCDCM          ADDR OF OUR COPY                 SP3
         USING DCMSTRT,R7
         SPACE
SKPTST3  EQU   *                                                    SL
***********************************************************************
*                                                                     *
*    FILLIN OPERATORS COMMAND INPUT BUFFER AND SET VIP FLAG INDICATOR *
*                                                                     *
***********************************************************************
         MVC   LASTLINE(79),DCMINPUT MOVE IN INPUT BUFFER LINE
         LH    R1,DCMINLGN             GET LENGTH OF TEXT           SL
         CLI   LASTLFLG,X'FF'          RESHOW LAST COMMAND WE DID ? SL
         BNE   FILLNULL                NO, LEAVE ASIS               SL
         MVC   LASTLINE(79),OPERCMD    YES, DISPLAY TO ALLOW REDO   SL
         LH    R1,OPERCMDL             GET LENGTH OF TEXT           SL
FILLNULL EQU   *                                                    SL
         S     R1,=F'4'                DROP THE WTO HEADER          SL
         BNP   FILLDONE                SHOULD BE ERROR, BUT IGNORE  SL
         LA    R2,78                   MAXIMUM NULLS TO MOVE        SL
         SR    R2,R1                   ACTUAL NULLS TO MOVE         SL
         BNP   FILLDONE                ZERO OR NEGATIVE, LEAVE ASIS SL
         LA    R1,LASTLINE(R1)         POINT TO LAST CHARACTER      SL
FILLMOVE MVC   0(0,R1),NULLS           ** EXECUTED **               SL
         EX    R2,FILLMOVE                                          SL
FILLDONE EQU   *                                                    SL
         MVI   MODE+1,C' '        BLANK OUT VIP INDICATOR
         CLI   VIPFLG,X'FF'       IS THE VIP FLAG ON?
         BNE   CHKINTEG           NOPE
         MVI   MODE+1,C'*'        TURN ON VIP INDICATOR
***********************************************************************
*                                                                     *
*                         CHECK CONSOLE TYPE                          *
*                                                                     *
***********************************************************************
CHKINTEG MVI   INTEGFLG,X'FF'     TURN ON LARGE CONSOLE FLAG        VC
         CLC   DCMMSGAL(2),=H'28' IS CONSOLE LARGER THAN A MOD2?    VC
         BNL   CHKMODEL           YES-CHK IF IT WILL FIT OUR TERM   VC
         MVI   INTEGFLG,X'00'     NO; TURN OFF 3066 CONSOLE FLAG
***      CLC   DCMMSGAL(2),=H'20' IS THIS 327X-2 TYPE CONSOLE?     AEI
***      BNE   NOTSUPRT           NO;  NOT SUPPORTED, SO ABEND     AEI
         MVI   FREEZE,C'F'        YES; FREEZE DISPLAY
         MVI   PAGE,C'1'               ON PAGE 1 OF USER'S CRT
         MVC   TPUTLEN(4),MOD2TPUT SET TPUT LENGTH FOR SHORT SCREEN
         B     MOD2               AND TREAT USER AS MOD2 FOR NOW
***********************************************************************
*                                                                     *
*        THIS OPERATOR'S CONSOLE IS NEITHER A 24-LINE 327X-2 NOR      *
*        A LARGER MOD3 OR MOD4 INTEGRATED CONSOLE, SO ABEND.        VC*
*                                                                     *
***********************************************************************
NOTSUPRT LA    R1,ERRMSG6         R1 = ADDR OF STRING TO TPUT
         LA    R0,26              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         ABEND 999
***********************************************************************
*                                                                     *
*     THIS IS A MOD3 OR MOD4 OPERATORS CONSOLE. IF THE USER HAS A   VC*
*     43-LINE 3278-4 THERE IS NO PROBLEM, THE WHOLE THING CAN BE      *
*     DISPLAYED AT ONCE. HOWEVER, IF THE USER HAS A 24-LINE 327X-2    *
*     WE WILL HAVE TO BREAK THE DISPLAY INTO 2 PAGES SO IT WILL FIT.  *
*                                                                     *
***********************************************************************
CHKMODEL EQU   *                                                     CN
***********************************************************************
*                                                                     *
*                  USER HAS A 43-LINE 3278-4 CRT                      *
*                                                                     *
*        WE CAN JUST FREEZE HIS DISPLAY ON 'PAGE 1' AND CONTINUE      *
*                                                                     *
***********************************************************************
         MVI   FREEZE,C'F'        FREEZE DISPLAY
         MVI   PAGE,C'1'          ON PAGE 1 INITIALLY
         MVC   TPUTLEN(4),MOD4TPUT SET LENGTH FOR FULL 3278-4 SCREEN
         L     R8,DCMASCRN        R8 = ADDR OF SCREEN BUFFER + 6
         L     R4,LOCTBUF         R4 = ADDR OF OUTPUT BUFFER         VC
         LA    R5,M4BUFLEN        R5 = 3278-4 BUFFER LEN (35 LINES)
         LA    R9,M4BUFLEN        R9 = 3278-4 BUFFER LEN (35 LINES)
         MVC   TLEN,H35           STORE TERM LENGTH FOR MOD 4        CN
*********************************************************************VC
*                                                                    VC
*        IF THIS TERMINAL IS A MOD 2 OR 3, ADJUST THE TPUT LENGTH    CN
*        AND MOVE THE TRAILER UP.  GET AS MANY LINE ON THE SCREEN    CN
*        AS WILL FIT AND TRUNCATE THE REST.                          CN
*                                                                    VC
*********************************************************************VC
         CLI   MOD4FLG,X'FF'      IS TERMINAL A MOD 4?               CN
         BNE   MOD3CHK            NO, GO CHECK FOR MOD3              CN
         CLC   DCMMSGAL(2),H28    MOD 3 CONSOLE                      CN
         BNE   MOVEBUFF           NO, GO MOVE BUFFER                 CN
         B     MOD3SET            YES, GO SET UP FOR MOD 3           CN
MOD3CHK  CLI   MOD3FLG,X'FF'      IS TERMINAL A MOD 3?               CN
         BNE   MOD2SET            NO, GO DO SETUP FOR MOD 2          CN
         LA    R5,M3BUFLEN        R5 = 3278-3 BUFFER LEN (35 LINES)  CN
         LA    R9,M3BUFLEN        R9 = 3278-3 BUFFER LEN (35 LINES)  CN
         MVC   TLEN,H28           STORE TERM LENGTH FOR MOD 3        CN
MOD3SET  MVC   TPUTLEN(4),MOD3TPUT SET LENGTH FOR FULL MOD3 SCREEN   VC
         MVC   ENDMOD3(TRAILEN),CMDCTRL MOVE IN TRAILER              VC
         B     MOVEBUFF
MOD2SET  MVC   TPUTLEN(4),MOD2TPUT SET LENGTH FOR FULL MOD2 SCREEN   CN
         MVC   ENDMOD2(TRAILEN),CMDCTRL MOVE IN TRAILER              CN
         LA    R5,M2BUFLEN        R5 = LENGTH OF OUTPUT BUF(21 LINES)CN
         LA    R9,M2BUFLEN        R9 = CONSOLE BUFFER LEN  (21 LINES)CN
         MVC   TLEN,H20           STORE TERM LENGTH FOR MOD 2        CN
         B     MOVEBUFF                                              CN
***********************************************************************
*                                                                     *
*                  USER HAS A 24-LINE 327X-2 CRT                      *
*                                                                     *
*        THIS OPER CONSOLE WILL HAVE TO BE DISPLAYED IN TWO SEGMENTS  *
*        OR 'PAGES' SINCE 35 LINES WON'T FIT IN THIS 24 LINE TUBE.    *
*                                                                     *
*  NOTE: SUPPORT FOR TWO SEGMENTS DOESN'T WORK PROPERLY.  A LARGE   VC*
*        CONSOLE CONSOLE (MOD3 OR MOD4) CANNOT BE DISPLAYED ON A    VC*
*        SMALLER (MOD3 OR MOD2, REPECTIVELY) USER TERMINAL.  I DO   VC*
*        NOT HAVE THE INCENTIVE TO FIX IT RIGHT NOW.  SO JUST       VC*
*        DISPLAY AN ERROR AND RESET TO DISPLAY THE CONSOLE THAT WAS VC*
*        SELECTED PREVIOUSLY.                                       VC*
*                                                                     *
***********************************************************************
WONTFIT  MVC   ERROR(26),ERRMSG12 MOD3 WON'T FIT ON A MOD2 MESSAGE  VC
         L     R5,@UCMTAB         R5 = ADDR OF UCMTAB (TABLE CSECT) VC
         B     RESETCN1           RESET CONSOLE ID AND CONTINUE     VC
MOD2     CLI   PAGE,C'1'          ARE WE ON PAGE 1?
         BNE   ONTWO              NO, SO WE MUST BE ON 2
         CLI   FREEZE,C'F'        ARE WE FROZEN ON PAGE 1?
         BNE   PAGE2              NO, SO DISPLAY PAGE 2
         B     PAGE1              YES, SO DISPLAY PAGE 1
ONTWO    CLI   FREEZE,C'F'        ARE WE FROZEN ON PAGE 2?
         BE    PAGE2              YES, SO DISPLAY PAGE 2
PAGE1    MVI   PAGE,C'1'          PAGE = 1
         L     R8,DCMASCRN        R8 = ADDR OF SCREEN IMAGE BUFFER + 6
         L     R4,LOCTBUF         R4 = ADDR OF OUTPUT BUFFER         VC
         LA    R5,M2BUFLEN        R5 = LENGTH OF OUTPUT BUF (21 LINES)
         LA    R9,M2BUFLEN        R9 = CONSOLE BUFFER LEN   (21 LINES)
         MVC   TLEN,H20           STORE TERM LENGTH FOR MOD 2        CN
         B     MVETRAIL           GO MOVE THE BUFFER
PAGE2    MVI   PAGE,C'2'          PAGE = 2
         L     R8,DCMASCRN        R8 = ADDR OF SCREEN IMAGE BUFFER + 6
         CLI   MODE,C'2'          ARE WE IN DISPLAY MODE 2?
         BE    DMODE2             YES, BRANCH TO DMODE2
DMODE1   LA    R8,LEN22(R8)       MOVE POINTER DOWN 23 LINES
         LA    R9,LEN13           R9 = LENGTH OF LAST 12 LINES
         B     CONTINUE           JUMP AROUND MODE 2 DISPLAY
DMODE2   LA    R8,LEN9(R8)        MOVE POINTER DOWN 9 LINES
         LA    R9,LEN21           R9 = LENGTH OF SOURCE BUFFER
CONTINUE L     R4,LOCTBUF         R4 = ADDR OF OUTPUT BUFFER         VC
         LA    R5,M2BUFLEN        R5 = LENGTH OF OUTPUT BUFFER
MVETRAIL MVC   ENDMOD2(TRAILEN),CMDCTRL MOVE IN TRAILER
         SPACE
***********************************************************************
*                                                                     *
*               MOVE THE SCREEN IMAGE BUFFER INTO BUF                 *
*                                                                     *
***********************************************************************
MOVEBUFF STM   R4,R9,MOVEBSAV     KEEP REGS                        SP3
*        SETUP TO COPY CONSOLE BUFFER TO OUR ADDRESS SPACE.        SP3
*        FIRST FILL AREA WITH SPACES                               SP3
         L     R9,=X'40000000'    MAKE BLANK THE PAD, LENGTH =0    SP3
         LA    R8,*               NOT THAT IT REALLY MATTERS       SP3
         MVCL  R4,R8              PAD WITH SPACES                  SP3
         SPACE
         CLI   TESTFLAG,X'00'                                       SL
         BNE   SKPTST4                                              SL
         LA    R4,CONASID         GET 'CONSOLE' ASID               SP3
         SSAR  R4                 SET 'CONSOLE' AS SECONDARY       SP3
         LM    R4,R9,MOVEBSAV     GET BACK ADDRESSES, LENGTHS      SP3
         SR    R15,R15            'FROM' KEY                       SP3
********************************************************************SL*
*                                                                   SL*
*        FOR ARCANE AND HISTORICAL REASONS, DMASCRN (IN R8)         SL*
*        ACTUALLY POINTS TO SCREEN BUFFER + 6 OR 12 (BEGINNING OF   VC*
*        MESSAGE TEXT). WITH THE ADVENT OF 3279 COLOR SUPPORT       SL*
*        THE SBA-ATTR COMBO PRECEEDING THE FIRST TEXT BECOMES       SL*
*        IMPORTANT. WE WILL THEREFORE "BACK UP" 12 BYTES TO INSURE  VC*
*        THAT WE PICK UP ALL SBA-ATTR BYTES THAT COULD BE PRESENT.  VC*
*                                                                     *
********************************************************************SL*
         SH    R8,=H'12'          POINT AT OR BEFORE 1ST SBA-ATTR   VC
MOVEBFR  MVCP  0(R9,R4),0(R8),R15 MOVE IT                          SP3
         BZ    BFRMOVED           GET OUT WHEN ALL MOVED           SP3
         LA    R8,256(R8)         BUMP FROM ADDR                   SP3
         LA    R4,256(R4)         BUMP TO ADDR                     SP3
         SH    R9,=H'256'         DECREMENT TRUE LENGTH            SP3
         B     MOVEBFR            GET THE REST                     SP3
         SPACE
BFRMOVED L     R4,SASID           RESTORE PREVIOUS SECONDARY -     SP3
         SSAR  R4                 SHOULD BE SAME AS PRIMARY.       SP3
         EJECT
SKPTST4  EQU   *                                                    SL
********************************************************************VC*
*                                                                   VC*
*        CONSOLE BUFFER CAN COME IN TWO FORMATS: STANDARD FORMAT    VC*
*        (SBA+ATTR+DATA: TOTAL LENGTH 84 BYTES) OR EXTENDED DATA    VC*
*        STREAM FORMAT (SBA+ATTR PAIRS+DATA: TOTAL LENGTH 90 BYTES).VC*
*        IN ORDER TO DEAL WITH THE RESTRICTIONS IN THIS PROGRAM     VC*
*        WITH REGARDS TO BUFFER SIZES, WE MUST DETERMINE WHICH      VC*
*        FORMAT IS PRESENT AND IF NCESSARY REFORMAT THE EXTENDED    VC*
*        FORMAT INTO A STANDARD FORMAT.  SOMEDAY, THIS CODE WILL    VC*
*        BE ENHANCED TO ACCEPT THE EXTENDED FORMAT EASILY.          VC*
*                                                                   VC*
********************************************************************VC*
         L     R5,@UCM            R5 = ADDR OF CONSOLE UCM          VC
         USING UCMLIST,R5                                           VC
         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER        VC
         L     R8,LOCTBUF         R8 = ADDR OF TEMPORARY BUFFER     VC
         LH    R6,TLEN            NUMBER OF LINES ON TERMINAL       CN
         CLC   TLEN(2),DCMMSGAL   TERMINAL SMALLER THAN CONSOLE?    CN
         BL    KEEPTERM           YES, KEEP TERMINAL SIZE           CN
         LH    R6,DCMMSGAL        NUMBER OF LINES FOR THE CONSOLE   VC
KEEPTERM LA    R6,1(R6)           ADD 1 LINE FOR THE IEE152I MESSAGEVC
         CLI   UCMEDEVX,X'10'     DEVICE TYPE = 3279-2A?            VC
         BL    MVBFRNON           NO;  GO MOVE NON-EXTENDED FORMAT  VC
         BE    MVBFREXT           YES; GO MOVE EXTENDED DS FORMAT   VC
         CLI   UCMEDEVX,X'12'     DEVICE TYPE = 3279-3B OR EQUIV?   VC
         BE    MVBFREXT           YES; GO MOVE EXTENDED DS FORMAT   VC
         CLI   UCMEDEVX,X'16'     DOES DEVICE SUPPORT EXTENDED DS?  VC
         BNL   MVBFREXT           YES; GO MOVE EXTENDED DS FORMAT   VC
MVBFRNON LA    R8,6(R8)           POINT TO 1ST SBA-ATTR             VC
         CLI   0(R8),X'11'        VERIFY THIS IS AN SBA ORDER       VC
         BNE   UNKNOWN            ERROR IF NOT                      VC
LOOPNON  MVC   0(84,R4),0(R8)     MOVE CONSOLE LINE (SBA+ATTR+DATA) VC
         LA    R4,84(R4)          BUMP TO NEXT LINE IN TEMP BUFFER  VC
         LA    R8,84(R8)          BUMP TO NEXT LINE IN OUTPUT BUFFERVC
         BCT   R6,LOOPNON         DO IT A LINE AT A TIME            VC
         B     TESTCRT            CONTINUE WHEN DONE                VC
MVBFREXT CLI   0(R8),X'11'        VERIFY THIS IS AN SBA ORDER       VC
         BNE   UNKNOWN            ERROR IF NOT                      VC
LOOPEXT  MVC   0(1,R4),0(R8)      MOVE SBA ORDER                    VC
         BAL   R14,CONVSBA        CONVERT 14-BIT SBA CODE TO 12-BIT VC
         MVI   3(R4),X'1D'        MOVE ATTRIBUTE BYTE ORDER         VC
         MVC   4(1,R4),6(R8)      MOVE ATTRIBUTE BYTE VALUE         VC
         MVC   5(79,R4),11(R8)    MOVE CONSOLE DATA                 VC
         LA    R4,84(R4)          BUMP TO NEXT LINE IN TEMP BUFFER  VC
         LA    R8,90(R8)          BUMP TO NEXT LINE IN OUTPUT BUFFERVC
         BCT   R6,LOOPEXT         DO IT A LINE AT A TIME            VC
         B     TESTCRT            CONTINUE WHEN DONE                VC
UNKNOWN  LA    R1,ERRMSG9         R1 = ADDR OF STRING TO TPUT       VC
         LA    R0,26              R0 = LENGTH OF TPUT               VC
         BAL   R14,TERMPUT        DO A TPUT                         VC
         ABEND 999                                                  VC
         SPACE 2                                                    VC
CONVSBA  LA    R3,SBATABLE        GET SBA CONVERSION TABLE          VC
LOOPSBA  CLC   1(2,R8),0(R3)      IS 14-BIT SBA IN THE TABLE?       VC
         BE    MOVESBA            YES; GO MOVE 12-BIT SBA INTO BUF  VC
         LA    R3,4(R3)           BUMP TO NEXT TABLE ENTRY          VC
         CLI   0(R3),X'FF'        END OF SBA TABLE?                 VC
         BE    ERRORSBA           YES; SBA NOT FOUND - ERROR        VC
         B     LOOPSBA            TRY NEXT ENTRY                    VC
MOVESBA  MVC   1(2,R4),2(R3)      MOVE 12-BIT SBA INTO OUTPUT BUFFERVC
         BR    R14                RETURN                            VC
ERRORSBA LA    R1,ERRMSG11        R1 = ADDR OF STRING TO TPUT       VC
         LA    R0,26              R0 = LENGTH OF TPUT               VC
         BAL   R14,TERMPUT        DO A TPUT                         VC
         ABEND 999                                                  VC
         DROP  R5,R6,R7
         SPACE 2
TESTCRT  CLI   CRTFLAG,X'FF'      IS THIS A CRT?
         BE    TPUTCRT            YES
         EJECT
***********************************************************************
*                                                                     *
*             USER HAS A LINE-AT-A-TIME HARDCOPY TERMINAL             *
*                                                                     *
***********************************************************************
         XR    R8,R8              R8 = COUNTER = 0
         LA    R1,BUF             SET POINTER TO FIRST LINE OF BUFFER
         ICM   R1,8,EDITFLG       EDIT MODE
         L     R0,=F'78'          R0 LENGTH OF OUTPUT LINE
NEXTL    LR    R3,R1              SAVE R1 SINCE TPUT ZAPS IT
         BAL   R14,TERMPUT        PRINT ONE LINE ON HARDCOPY
         LA    R8,1(R8)           ADD 1 TO COUNTER
         C     R8,=F'21'          HAVE WE PRINTED LAST LINE?
         BE    DOLAST2            YES, CONTINUE
         LA    R1,80(R3)          NOPE, POINT TO NEXT LINE
         CLI   INTEGFLG,X'FF'     IS THIS AN INTEGRATED CONSOLE?
         BE    NOT3270            YES
         MVC   0(5,R1),BLANKS     BLANK OUT 3270 CTRL CHARS
         LA    R1,4(R1)           ADD 4 EXTRA BYTES TO SKIP CTRL CHARS
NOT3270  L     R0,=F'78'          LOAD LENGTH OF LINE
         ICM   R1,8,EDITFLG       EDIT MODE
         B     NEXTL              PRINT NEXT LINE
DOLAST2  LA    R1,LASTLINE        R1 = ADDR OF STRING TO TPUT
         LA    R0,79              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         LA    R1,HEADING         R1 = ADDR OF STRING TO TPUT
         LA    R0,79              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         LA    R1,USERLINE        R1 = ADDR OF STRING TO TPUT
         LA    R0,79              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         B     CHKWAIT            GO CHECK THE WAIT TIMER
         EJECT
***********************************************************************
*                                                                     *
*               DISPLAY THE OPERATOR'S SCREEN ON A 327X               *
*                                                                     *
***********************************************************************
TPUTCRT  LA    R1,CLEAR           R1 = ADDR OF OUTPUT STREAM
         L     R0,TPUTLEN         R0 = LENGTH OF TPUT
         ICM   R1,8,FULLSCR       SET ASIS TYPE FOR TPUT
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY ENTIRE SCREEN
         SPACE 3
***********************************************************************
*                                                                     *
*      IF WE ARE IN WAIT MODE DO A STIMER FOR THE NECESSARY LENGTH    *
*      OF TIME, THEN CALCULATE AND DISPLAY THE NEW TIMER COUNT.       *
*      IF COUNT HAS HIT ZERO, TURN OFF WAIT FLAG.                     *
*                                                                     *
***********************************************************************
CHKWAIT  MVC   ERROR(66),NULLS    BLANK OUT ERROR FIELD    (NULLS)  SL
         CLI   WAITFLG,X'FF'      IS THE WAIT FLAG ON?
         BNE   READCHAR           NO, SO GO GET A COMMAND
         STIMER WAIT,BINTVL=DELAY WAIT FOR DELAY * .01 SECONDS
         L     R2,TIMER           R2 = CURRENT VALUE OF TIMER
         BCTR  R2,0               TIMER = TIMER - 1
         ST    R2,TIMER           STORE NEW VALUE OF TIMER
         CVD   R2,WORK            CONVERT TO DECIMAL.
         MVC   SCRATCH(4),PATTERN MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6  EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1  MOVE TIME LEFT INTO PLACE
         LTR   R2,R2              HAS TIMER HIT ZERO?
         BNZ   NEXTPAGE           NO, CONTINUE TO COUNT
         MVC   TIME(3),BLANKS     CLEAR COUNTER FIELD
         XI    WAITFLG,X'FF'      TOGGLE WAIT FLAG OFF
         B     NEXTPAGE           AND GO ON AS IF NOTHING HAPPENED..
         EJECT
***********************************************************************
*                                                                     *
*                       READ COMMAND FROM USER                        *
*                                                                     *
***********************************************************************
READCHAR MVC   REPLY(80),BLANKS   BLANK OUT REPLY FIELD
         TGET  REPLY,79           GET 79 CHARACTERS FROM TERMINAL
         CLI   REPLY,X'6E'        RESHOW CODE?
         BE    READCHAR           YES; IGNORE IT
         LTR   R1,R1                   ZERO LENGTH RETURNED ?       SL
         BZ    NEXTPAGE                YES, GO REFRESH              SL
         CH    R1,=H'80'               LENGTH OVER 80 ?             SL
         BNH   LENOKAY                 NO, OKAY                     SL
         MVC   ERROR(26),ERRMSG8       YES, SAY IT IS TOO LONG      SL
         MVI   LASTLFLG,X'FF'          SET TO REDISPLAY BAD INPUT   SL
         B     NEXTPAGE                GO REFRESH                   SL
LENOKAY  STH   R1,OPERCMDL             SAVE THE INPUT LENGTH        SL
***********************************************************************
*                                                                     *
*               CHECK FOR SYSTEM OPERATOR COMMANDS                    *
*                                                                     *
***********************************************************************
         CLI   VIPFLG,X'FF'       ARE WE IN VIP MODE?
         BNE   PARSECMD           NO, SO CONTINUE
         CLI   REPLY,C'$'              IS THIS A JES COMMAND ?      SL
         BE    CMDOKAY                 YES, DO IT                   SL
         CH    R1,=H'3'                SUBCMDS ARE 3 CHAR OR LESS   SL
         BH    CMDOKAY                 GREATER, PROCESS AS COMMAND  SL
         BL    CWAIT                   LESS, ASSUME IS OUR SUBCMD   SL
         CLI   REPLY+1,C' '            (=3) IS SECOND CHAR BLANK ?  SL
         BNE   CWAIT                   NO, ASSUME IS OUR SUBCMD     SL
CMDOKAY  MVC   OPERCMD(80),REPLY  MOVE CMD IN FROM REPLY FIELD
         LH    R3,OPERCMDL             GET SAVED LENGTH OF COMMAND  SL
         LA    R3,4(,R3)               ADD SVC34 PREFIX             SL
         STH   R3,OPERCMDL        SAVE CMD LENGTH
         L     R3,SAVEUPT         R3 = ADDR OF UPT
         USING UPT,R3
         NI    UPTSWS,X'FF'-UPTWTP TURN OFF 'WTP'
         MODESET KEY=ZERO                                           SL
         L     R0,CONSOLE              CONSOLE ID FOR SVC34         SL
         LA    R1,OPERPRM              POINT TO SVC34 PARMLIST      SL
         SVC   34                                                   SL
         MODESET KEY=NZERO                                          SL
         OI    UPTSWS,UPTWTP      TURN ON  'WTP'
         MVI   LASTLFLG,X'FF'          SET TO REDISPLAY THE COMMAND SL
         CLI   AFTERFLG,X'FF'          AUTOMATIC WXX AFTER CMD ?    SL
         BNE   NEXTPAGE                NO, CONTINUE                 SL
         MVC   REPLY(3),AWAITCMD       YES, RESTORE SAVED VALUE     SL
         B     AWAIT                   GO DO THE WAIT               SL
***********************************************************************
*                                                                     *
*          CONVERT COMMAND TO UPPER CASE AND CALL IKJSCAN             *
*                                                                     *
*    THIS CALL TO IKJSCAN IS COMPLETELY UNNECESSARY TO THE OPERATION  *
*    OF SPY. IT IS INCLUDED SOLELY TO ALLOW THE 'X' FEATURE OF        *
*    PCF2 TO OPERATE. IF YOU DO NOT HAVE PCF2, THIS COULD BE REMOVED. *
*                                                                     *
***********************************************************************
PARSECMD OC    REPLY(79),BLANKS   CONVERT CHARS TO UPPER CASE
         XC    CBUF+2(2),CBUF+2   CLEAR OFFSET
         MVC   CSPLBLOK(24),CSPLSAVE  COPY IN CSPL BLOK
         XC    CSOABLOK(8),CSOABLOK
***      L     R2,SAVEJSCB        R2 = ADDR OF OUR JSCB        AEI SP3
***      USING IEZJSCB,R2                                      AEI SP3
***      NI    JSCBOPTS,X'FF'-JSCBAUTH TAPF OFF FOR PCFSCAN    AEI SP3
         LA    R1,CSPLBLOK        R1 = ADDR OF CMD SCAN PARM LIST
         L     R15,ADDRSCAN       R15 = ADDR OF IKJSCAN
         BALR  R14,R15            INVOKE IKJSCAN
***      OI    JSCBOPTS,JSCBAUTH  TURN ON APF BIT AGAIN        AEI SP3
***      DROP  R2                                              AEI SP3
         LA    R1,CSOABLOK        R1 = ADDR OF CMD SCAN OUTPUT AREA
         USING CSOA,R1
         TM    CSOAFLG,CSOANOC    IS THE BUFFER EMPTY?
         BO    NEXTPAGE           YES; JUST GO REFRESH
         DROP  R1
***********************************************************************
*                                                                     *
*                       W  --  ENTER WAIT MODE                        *
*                                                                     *
***********************************************************************
CWAIT    OC    REPLY(3),BLANKS         MAKE SURE OUR CMD IS UPCASE  SL
         MVI   LASTLFLG,X'00'          DO NOT REDISPLAY THE COMMAND SL
         CLI   REPLY,C'W'         DO WE SHIFT TO WAIT MODE?
         BNE   CDELAY             NO, SO CONTINUE
AWAIT    EQU   *                       (ENTER HERE FOR AXX CMD)     SL
         XI    WAITFLG,X'FF'      TURN ON WAIT FLAG
         LA    R2,30              SET DEFAULT VALUE = 30
         LA    R15,CONVBIN        BRANCH TO CONVERSION RTN
         BALR  R14,R15            EBCDIC TO BINARY
         MVC   SCRATCH(4),PATTERN MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6  EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1  MOVE TIME LEFT INTO PLACE
         ST    R2,TIMER           STORE STARTING TIMER VALUE
         B     NEXTPAGE           ALL SET - GO DISPLAY NEXT PAGE
***********************************************************************
*                                                                     *
*            D  --  SET TIMER DELAY IN TENTHS OF A SECOND             *
*                                                                     *
***********************************************************************
CDELAY   CLI   REPLY,C'D'         ARE WE CHANGING THE TIME DELAY?
         BNE   CCONSOLE           NO, SO CONTINUE
         LA    R2,10              SET DEFAULT VALUE = 10 TENTHS SECOND
         LA    R15,CONVBIN        BRANCH TO CONVERSION RTN
         BALR  R14,R15            EBCDIC TO BINARY
         MVC   SCRATCH(5),DPATTRN MOVE IN EDIT PATTERN
         ED    SCRATCH(5),WORK+6  EDIT IN DELAY TIME
         MVC   PAUSE(3),SCRATCH+2 MOVE TIME LEFT INTO PLACE
         MH    R2,=H'10'          CONVERT TO 100THS OF A SECOND
         ST    R2,DELAY           STORE WAIT DELAY VALUE
         B     NEXTPAGE           ALL SET - GO DISPLAY NEXT PAGE
***********************************************************************
*                                                                     *
*                    C  --  SET CONSOLE NUMBER                        *
*                                                                     *
***********************************************************************
CCONSOLE CLI   REPLY,C'C'         DO WE CHANGE CONSOLES?
         BNE   CAFTER             NO, SO CONTINUE                   SL
         L     R2,CONSOLE         SET DEFAULT CONSOLE
         ST    R2,OLDCONS         SAVE OLD CONSOLE #
         LA    R15,CONVBIN        BRANCH TO
         BALR  R14,R15            EBCDIC->BINARY CONVERTOR
         ST    R2,CONSOLE         STORE R2 AWAY AS CONSOLE NUMBER
         BAL   R14,CLRBUF         CLEAR BUFFER                      VC
         B     NEXTPAGE           CONTINUE
********************************************************************SL*
*                                                                   SL*
*                    A  --  SET WAIT AFTER COMMAND                  SL*
*                                                                   SL*
********************************************************************SL*
CAFTER   CLI   REPLY,C'A'              SET 'WAIT AFTER COMMAND' ?   SL
         BNE   BYE                     NO, CONTINUE                 SL
         MVI   AFTERFLG,X'00'          ASSUME TURN OFF AFTERFLAG    SL
         CLI   REPLY+1,C' '            VALUE BLANK ?                SL
         BE    NEXTPAGE                YES, LEAVE FLAG OFF, DONE    SL
         CLI   REPLY+1,C'0'            FIRST DIGIT VALID ?          SL
         BL    CAERROR                 NO, ERROR                    SL
         CLI   REPLY+2,C' '            SECOND DIGIT BLANK ?         SL
         BE    CASAVE                  YES, SAVE THE VALUE          SL
         CLI   REPLY+2,C'0'            SECOND DIGIT VALID ?         SL
         BL    CAERROR                 NO, ERROR                    SL
CASAVE   MVC   AWAITCMD(3),REPLY       YES, SAVE THE VALUE          SL
         MVI   AFTERFLG,X'FF'          TURN ON AFTERFLAG            SL
         B     NEXTPAGE                                             SL
CAERROR  MVC   ERROR(26),ERRMSG2       TELL VALUE NOT NUMERIC       SL
         B     NEXTPAGE                                             SL
***********************************************************************
*                                                                     *
*                        B  --  TERMINATE SPY                         *
*                                                                     *
***********************************************************************
BYE      CLI   REPLY,C'B'         IS IT A 'B'?
         BE    DONE               YES, SO QUIT
***********************************************************************
*                                                                     *
*                        E  --  TERMINATE SPY                         *
*                                                                     *
***********************************************************************
END      CLI   REPLY,C'E'         IS IT AN 'E'?
         BE    DONE               YES, SO QUIT
***********************************************************************
*                                                                     *
*               F  --  FREEZE DISPLAY ON CURRENT PAGE                 *
*                                                                     *
***********************************************************************
F        CLI   REPLY,C'F'         IS IT AN 'F'?
         BNE   R                  NO, SO CONTINUE ON
         MVI   FREEZE,C'F'        TURN ON FREEZE INDICATOR
         B     NEXTPAGE           CONTINUE
***********************************************************************
*                                                                     *
*           R  --  RELEASE FREEZE ON CURRENT PAGE DISPLAY             *
*                                                                     *
***********************************************************************
R        CLI   REPLY,C'R'         IS IT AN 'R'?
         BNE   MODE1              NO, SO CONTINUE ON
         MVI   FREEZE,C'R'        TURN OFF FREEZE INDICATOR
         B     NEXTPAGE           CONTINUE
***********************************************************************
*                                                                     *
*                1  --  SHIFT TO MODE 1 TYPE DISPLAY                  *
*                                                                     *
***********************************************************************
MODE1    CLI   REPLY,C'1'         DO WE SHIFT TO MODE 1 DISPLAY?
         BNE   MODE2              NO, SO CONTINUE
         CLI   REPLY+1,C' '            BE SURE IS NOT REPLY, EG: 1U SL
         BNE   BADCMD                  NOT BLANK - NOT OURS         SL
         MVI   MODE,C'1'          SET MODE INDICATOR
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                2  --  SHIFT TO MODE 2 TYPE DISPLAY                  *
*                                                                     *
***********************************************************************
MODE2    CLI   REPLY,C'2'         DO WE SHIFT TO MODE 2 DISPLAY?
         BNE   GETHELP            NO, SO CONTINUE
         CLI   REPLY+1,C' '            BE SURE IS NOT REPLY, EG: 2U SL
         BNE   BADCMD                  NOT BLANK - NOT OURS         SL
         MVI   MODE,C'2'          SET MODE INDICATOR
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*           ?  --  LIST HELP FOR SPY COMMANDS ON TERMINAL             *
*                                                                     *
***********************************************************************
GETHELP  CLI   REPLY,C'?'         IS HE ASKING FOR HELP?
         BNE   GETSTAT            NO,SO CONTINUE
         LA    R1,HELP            R1 = ADDR OF HELP PAGE
         LA    R0,HLENGTH         R0 = LENGTH OF HELP PAGE
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY HELP
         B     READCHAR
***********************************************************************
*                                                                     *
*           S  --  LIST STATUS PAGE FOR ALL DEFINED CONSOLES          *
*                                                                     *
***********************************************************************
GETSTAT  CLI   REPLY,C'S'         IS HE ASKING FOR STATUS REPORT?
         BNE   SWAPLINK           NO; CONTINUE
         BAL   R14,CLRBUF         CLEAR BUFFER
         LH    R10,NUMUCMS        R10 = NUMBER OF CONSOLES
         L     R2,@UCMTAB         R2 = ADDR OF UCMTAB (TABLE CSECT) SL
         LA    R2,16(,R2)         R2 = ADDR OF FIRST CONSOLE ENTRY  SL
         XR    R4,R4              CLEAR R4
         LA    R4,BUF             R4 = ADDR OF TPUT BUFFER
         LA    R3,23              R3 = NUMBER OF LINES ON SCREEN
STLOOP   LR    R1,R2              R1 = ADDR OF UCMTAB ENTRY
         BAL   R14,CONSDATA       CALL CONSOLE DATA ROUTINE
         MVC   0(45,R4),CONNUM    SAVE RESULTS IN BUFFER
         LA    R4,80(R4)          R4 = ADDR OF NEXT LINE IN BUFFER
         LA    R2,16(R2)          R2 = ADDR OF NEXT UCMTAB ENTRY
         BCT   R3,NOTFULL         BRANCH IF THE SCREEN NOT FULL
FULL     LA    R1,HEADER          R1 = ADDR OF TPUT BUF
         LA    R0,STATLEN         R0 = LENGTH OF TPUT BUF
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY STATUS PAGE
         BAL   R14,CLRBUF         CLEAR BUFFER
         LA    R4,BUF             R4 = ADDR OF TPUT BUFFER
         LA    R3,23              R3 = NUMBER OF LINES ON SCREEN
         BCT   R10,MORE           MORE ENTRIES?
         B     NEXTPAGE           NO; CONTINUE
MORE     TGET  REPLY,1            PAUSE FOR ENTER
         B     STLOOP             AND LOOP
NOTFULL  BCT   R10,STLOOP         LOOP IF MORE
         LA    R1,HEADER          R1 = ADDR OF TPUT BUF
         LA    R0,STATLEN         R0 = LENGTH OF TPUT BUF
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY STATUS PAGE
         TGET  REPLY,1            PAUSE FOR ENTER
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                    L  --  LINK TO SWAP PROGRAM                      *
*                                                                     *
***********************************************************************
SWAPLINK CLI   REPLY,C'L'         SHOULD WE XCTL TO SWAP?
         BNE   VIP                NO, SO CONTINUE
         BE    DONE                                                 SL
*                                      SWAP PROGRAM NOT AVAILABLE,  SL
*                                      "L" INTERPRETED AS "LEAVE"   SL
*        CLI   TESTFLAG,X'00'                                       SL
*        BNE   SKPTST5                                              SL
*        MODESET MODE=PROB        DON'T NEED SUP STATE ANYMORE      SL
*SKPTST5 EQU   *                                                    SL
*        L     R13,SAVE+4         CALLERS SAVE AREA POINTER.        SL
*        XCTL  (2,12),EP=SWAP     XCTL TO SWAP                      SL
***********************************************************************
*                                                                     *
*                       CHECK FOR VIP PASSWORD                        *
*                                                                     *
***********************************************************************
VIP      CLC   REPLY(3),VIPWORD   WAS VIP PASSWORD ENTERED?
         BNE   BADCMD             NO, CONTINUE
         XI    VIPFLG,X'FF'       TOGGLE VIP FLAG
         XI    INPUTATR+1,X'0C'        TOGGLE INPUT DISPLAY/NON-DSP SL
         B     NEXTPAGE
***********************************************************************
*                                                                     *
*                      COMMAND WAS INVALID                            *
*                                                                     *
***********************************************************************
BADCMD   CLI   VIPFLG,X'FF'            (NOT OURS) COMMANDS ALLOWED? SL
         BE    CMDOKAY                 YES, PROCESS AS A COMMAND    SL
         MVC   ERROR(26),ERRMSG3  COMMAND WAS INVALID
         MVC   ERROR+26(40),REPLY PUT BAD CMD IN DISPLAY LINE
         B     NEXTPAGE
         EJECT
***********************************************************************
*                                                                     *
*                     ALL DONE - PREPARE TO END                       *
*                                                                     *
***********************************************************************
DONE     DS    0H
         CLI   CRTFLAG,X'00'      IS THIS A HARDCOPY?
         BE    ALLDONE            YES
         TPUT  CLR,CLRLEN,FULLSCR NO, LETS CLEAR THE SCREEN FIRST
         CLI   TESTFLAG,X'00'
         BNE   SKPTST6
         STFSMODE OFF             AND TURN OFF FULLSCREEN MODE
SKPTST6  EQU   *
ALLDONE  EQU   *
         CLI   TESTFLAG,X'00'
         BNE   SKPTST7
         L     R1,LOCDCM          PREPARE TO FREEMAIN TDCM AREA    SP3
         FREEMAIN R,LV=820,A=(1)  DO IT                            SP3
         L     R1,LOCTBUF         PREPARE TO FREEMAIN TEMP BUFFER   VC
         FREEMAIN R,LV=3870,A=(1) DO IT                             VC
         AXSET AX=ZERO            AUTH INDEX BACK TO 0             SP3
         MODESET MODE=PROB        GO BACK TO PROBLEM STATE         SP3
*                                                              AEI SP3
*        UHBAPF AUTH=OFF          MAKE SPY UN-AUTHORIZED       AEI SP3
*                                                              AEI SP3
*                                      UHBAPF NOT AVAILABLE,        SL
*                                      OPCON WILL BE LINKED AC=1    SL
         SPACE 2                                                    VC
         SYSEVENT OKSWAP          SET OPCON SWAPPABLE               VC
         SPACE 2                                                    VC
SKPTST7  EQU   *
         L     R13,SAVE+4         RESTORE POINTER TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)    RESTORE REGISTERS
         LA    R15,0              SET RC = 0
         BR    R14                RETURN TO SYSTEM
         EJECT
***********************************************************************
*                                                                     *
*            CONVERT EBCDIC NUMBERS FROM USER INTO BINARY             *
*                                                                     *
***********************************************************************
CONVBIN  CVD   R2,WORK            CONVERT TO DECIMAL.
         CLI   REPLY+1,C' '       DID HE ENTER A NUMBER?
         BE    RTRN               NO, USE THE DEFAULT
         CLI   REPLY+1,C'0'       IS THE HEX CODE < 'F0' ?
         BL    BADCHAR            YES, ERROR
         CLI   REPLY+1,C'9'       IS THE HEX CODE > 'F9' ?
         BH    BADCHAR            YES, ERROR
         PACK  WORK(8),REPLY+1(1) PACK EBCDIC (ASSUME 1 DIGIT)
         CLI   REPLY+2,C' '       DID HE ENTER 2 DIGITS?
         BE    CVB                NO, DONT DO THE 2 DIGIT PACK
         CLI   REPLY+2,C'0'       IS THE HEX CODE < 'F0' ?
         BL    BADCHAR            YES, ERROR
         CLI   REPLY+2,C'9'       IS THE HEX CODE > 'F9' ?
         BH    BADCHAR            YES, ERROR
         PACK  WORK(8),REPLY+1(2) PACK AGAIN, WITH 2 DIGITS THIS TIME
CVB      CVB   R2,WORK            GET BINARY
RTRN     BR    R14                RETURN TO MAINLINE
BADCHAR  MVC   ERROR(26),ERRMSG2  CONSOLE NUMBER ERROR
         B     RTRN
         SPACE
***********************************************************************
*                                                                     *
*                            C L R B U F                              *
*                                                                     *
*               CLEAR THE ENTIRE BUF AREA TO HEX ZEROS                *
*                                                                     *
***********************************************************************
CLRBUF   STM   R2,R5,SAVE25       SAVE REGS 2 - 5
         LA    R2,BUF             R2 = ADDR OF BUFFER
         LA    R3,M4BUFLEN        R3 = LENGTH OF BUFFER (35 LINES)
         LA    R4,BLANKS          R4 = ADDR OF BLANKS
         LA    R5,1               R5 = LENGTH OF BLANK
         ICM   R5,8,BLANKS        SETUP PAD CHAR = X'40'
         MVCL  R2,R4
         LM    R2,R5,SAVE25       RESTORE REGS
         BR    R14                RETURN TO CALLER
SAVE25   DS    4F
         SPACE
***********************************************************************
*                                                                     *
*                         T E R M P U T                               *
*                                                                     *
*          DO A TPUT TO THE TERMINAL; R0 AND R1 HOLD PARMS            *
*                                                                     *
***********************************************************************
TERMPUT  TPUT  (1),(0),R          PRINT ONE LINE ON HARDCOPY
         BR    R14                RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*          SETUP AND INITIALIZE PARAMETER LIST FOR IKJSCAN            *
*                                                                     *
***********************************************************************
INITSCAN STM   R15,R4,SAVE154     SAVE REGS
         L     R3,CVTPTR          R3 = ADDR OF CVT
         L     R3,0(R3)           R3 = ADDR OF ADDR OF TCB
         L     R3,4(R3)           R3 = ADDR OF TCB
         USING TCB,R3
         ICM   R3,7,TCBJSCBB      R3 = ADDR OF JSCB
         ST    R3,SAVEJSCB        SAVE ADDR OF JSCB
         DROP  R3
         USING IEZJSCB,R3
         L     R4,JSCBPSCB        R4 = ADDR OF PSCB
         DROP  R3
         USING PSCB,R4
         TM    PSCBATR1,PSCBCTRL       DOES USER HAVE OPER PRIV ?   SL
         BNO   NOTSUPRT                NO, ISSUE MESSAGE AND ABEND  SL
         L     R3,PSCBUPT         R3 = ADDR OF UPT
         ST    R3,SAVEUPT         SAVE ADDR OF UPT
         LA    R2,CSPLSAVE        R2 = ADDR OF CMD SCAN PARM LIST
         USING CSPL,R2
         ST    R3,CSPLUPT         SAVE UPT ADDR
         L     R3,PSCBRLGB        R3 = ADDR OF RELOGON BUFFER
         L     R3,256(R3)         R3 = ADDR OF ECT
         ST    R3,CSPLECT         SAVE ECT ADDR
         LA    R3,CPECB           R3 = ADDR OF FAKE ECB FOR THIS CP
         ST    R3,CSPLECB         SAVE ECB ADDR
         LA    R3,FLAGWORD        R3 = ADDR OF CSPL FLAG WORD
         ST    R3,CSPLFLG         SAVE FLAG ADDR
         LA    R3,CSOABLOK        R3 = ADDR OF CMD SCAN OUTPUT AREA
         ST    R3,CSPLOA          SAVE OUTPUT AREA ADDR
         LA    R3,CBUF            R3 = ADDR OF 'CMD BUFFER'
         ST    R3,CSPLCBUF        SAVE CBUF ADDR
         DROP  R2,R4
         LOAD  EP=IKJSCAN
         ST    R0,ADDRSCAN
         LM    R15,R4,SAVE154     RESTORE REGS 15 - 4
         BR    R14
         SPACE 2
         DS    0F
SAVE154  DS    6F
         SPACE 1
SAVEUPT  DS    F                   SAVE ADDR OF UPT
SAVEJSCB DS    F                   SAVE ADDR OF JSCB
CSPLBLOK DS    6F                  CMD SCAN PARAMETER LIST
CSPLSAVE DS    6F
CPECB    DC    F'0'                FAKE ECB FOR THIS CP
FLAGWORD DC    F'0'
CSOABLOK DS    2F                  CMD SCAN OUTPUT AREA
CBUF     DC    AL2(84),AL2(0)
REPLY    DC    CL80' '             USER'S COMMAND INPUT BUFFER
ADDRSCAN DS    A
         EJECT
***********************************************************************
*                                                                     *
*                          C O N S D A T A                            *
*                                                                     *
*         FILLIN THE DATA LINE FOR A GIVEN CONSOLE                    *
*                                                                     *
***********************************************************************
CONSDATA STM   R0,R15,SAVECDAT    SAVE REGS
         L     R5,0(R1)           R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         USING DCMTSRT,R6
         MVC   CONNUM(48),BLANKS   BLANK OUT CONSOLE TYPE FIELD
         XR    R3,R3              CLEAR R3
         ICM   R3,1,UCMID         LOAD THE CONSOLE NUMBER
         CVD   R3,WORK            CONVERT TO DECIMAL IN WORK
         MVC   SCRATCH(4),PATTERN    MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6     EDIT IN CONSOLE NUMBER
         MVC   CONNUM(2),SCRATCH+2   MOVE CONSOLE NUMBER INTO PLACE
         MVC   LOCATION(12),4(R1) MOVE IN CONSOLE LOCATION DESCRIPTION
         MVI   SLASH,C'/'
         MVC   STATUS(6),=CL6'INACTV' SET DEFAULT = 'INACTV'
         TM    UCMATR,UCMUF       IS THIS DEVICE ACTIVE?
         BNO   NOTACT             NO
         MVC   STATUS(6),=CL6'ACTIVE' SET STATUS = 'ACTIVE'
NOTACT   EQU   *
         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?
         BNO   AUTH               NO
         MVC   STATUS(6),=CL6'MASTER' YES
AUTH     TM    UCMAUTHA,UCMAUTH1  IS THIS CONSOLE SYSTEM AUTHORIZED?
         BNO   AUTH1              NO
         MVC   SYS(3),=CL3'SYS '  YES
AUTH1    TM    UCMAUTHA,UCMAUTH2  IS IT I/O AUTHOZRIZED?
         BNO   AUTH2              NO
         MVC   IO(3),=CL3'I/O'    YES
AUTH2    TM    UCMAUTHA,UCMAUTH3  IS IT CONS AUTHORIZED?
         BNO   AUTHDONE           NO
         MVC   CONS(3),=CL3'CON'  YES
AUTHDONE EQU   *
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    NOTHARD            YES
         MVC   STATUS(6),=CL6'HRDCPY'
NOTHARD  EQU   *
         L     R7,UCMUCB          R7 = ADDR OF UCB
         MVC   UNIT(3),13(R7)     MOVE UNIT ADDR INTO LINE
         L     R5,UCMALTEN        R5 = ADDR OF ALTERNATE UCM
         L     R7,UCMUCB          R7 = ADDR OF UCB
         MVC   ALTUNIT(3),13(R7)  MOVE UNIT ADDR INTO LINE
         LM    R0,R15,SAVECDAT    RESTORE REGS
         BR    R14
         DROP  R5,R6
SAVECDAT DS    16F
         SPACE 2
         DROP  12
         EJECT
***********************************************************************
*                                                                     *
*                          A T T N E X I T                            *
*                                                                     *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET          *
*                                                                     *
***********************************************************************
ATTNEXIT LR    R7,R15             ESTABLISH
         USING ATTNEXIT,R7        ADDRESSABILITY.
         MVI   ATTNFLG,X'FF'      SET ATTN FLAG
         BR    R14                RETURN TO CALLER
         DROP  R7
         EJECT
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
************   NO EXECUTABLE CODE BEYOND THIS POINT   **************SL*
********************************************************************SL*
         DS    0D
WORK     DS    D                   WORK AREA FOR PACKS
SCRATCH  DS    D                   SCRATCH AREA FOR CHAR. MANIP
OLDCONS  DC    F'1'                PREVIOUS CONSOLE NUMBER
CONSOLE  DC    F'1'                CONSOLE TO BE LOOKED AT
TPUTLEN  DC    A(MOD2LEN)          LENGTH OF MOD 2 TPUT
MOD4TPUT DC    A(MOD4LEN)          LENGTH OF MOD4 TPUT
MOD3TPUT DC    A(MOD3LEN)          LENGTH OF MOD3 TPUT               VC
MOD2TPUT DC    A(MOD2LEN)          LENGTH OF MOD2 TPUT
LPSCREEN DC    H'0'                LINES PER SCREEN
CPLINE   DC    H'0'                CHARACTERS PER LINE
TIMER    DC    F'30'               SECONDS LEFT ON TIMER
DELAY    DC    F'100'              DELAY FOR 100 HUNDREDTHS OF A SECOND
*
MOD3FLG  DC    X'00'               X'FF' INDICATES 3278-3 IN USE     VC
MOD4FLG  DC    X'00'               X'FF' INDICATES 3278-4 IN USE
ATTNFLG  DC    X'00'               X'FF' INDICATES ATTN WAS TRAPPED
TESTFLAG DC    X'00'               X'FF' INDICATES TEST MODE
CRTFLAG  DC    X'FF'               X'FF' INDICATES CRT IN USE
WAITFLG  DC    X'00'               X'00' INDICATES NOT IN WAIT MODE
VIPFLG   DC    X'00'               X'FF' INDICATES VIP MODE
INTEGFLG DC    X'00'               X'FF' INDICATES 35-LINE 3066 CONSOLE
LASTLFLG DC    X'00'               X'FF' CAUSES REDISPLAY OF INPUT  SL
AFTERFLG DC    X'00'               X'FF' CAUSES WXX AFTER EACH CMD  SL
*
FULLSCR  DC    X'03'               TPUT FULSCREEN FLAG
EDITFLG  DC    X'00'               TPUT EDIT FLAG
VIPWORD  DC    C'---'              VIP PASSWORD
AWAITCMD DC    C'   '              VALUE FOR WXX AFTER EACH COMMAND SL
NULLS    DC    80X'00'             JUST NULLS
R30C1    DC    X'11E450'           3278-3  --  ROW 30, COL 1        VC
R31C1    DC    X'11E560'           3278-3  --  ROW 31, COL 1        VC
R32C1    DC    X'11E6F0'           3278-3  --  ROW 32, COL 1        VC
R41C1    DC    X'11F240'           3278-4  --  ROW 41, COL 1
R42C1    DC    X'11F350'           3278-4  --  ROW 42, COL 1
R43C1    DC    X'11F460'           3278-4  --  ROW 43, COL 1
PATTERN  DC    X'40202020'         EDIT PATTERN FIELD
DPATTRN  DC    X'4021204B20'       EDIT PATTERN FIELD
PAD      DC    C' '                PAD CHARACTER FOR MOVEBUFF MVC
STAXLIST STAX  ATTNEXIT,MF=L       PARM LIST FOR ATTENTION TRAP
BLANKS   DC    CL80' '
@UCMTAB  DC    A(UCMTAB)               ADDRESS OF UCMTAB CSECT      SL
@UCM     DS    F                       ADDRESS OF CONSOLE UCM       VC
UCMTABE  DC    A(TABEND)               (MOVED WHEN CSECT ADDED)     SL
NUMUCMS  DC    H'0'                    (MOVED WHEN CESCT ADDED)     SL
         SPACE 1
OPERPRM  DS    0F                      SVC34 PARAMETER LIST         SL
OPERCMDL DC    H'0'                    WILL BE PROVIDED EACH TIME   SL
         DC    H'0'                    WORD FILLER (FOR SVC34)      SL
OPERCMD  DC    CL80' '                 ACTUAL COMMAND PROVIDED HERE SL
         EJECT                                                      SL
***********************************************************************
*                                                                     *
*               327X SCREEN CLEAR CONTROL CHARACTERS                  *
*                                                                     *
***********************************************************************
CLR      DC    X'C1'              WCC - CLEAR SCREEN
         DC    X'115D7E'          SBA TO ROW 24, COL 79 (FSE 5.0)
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'3C404000'        FILL SCREEN WITH NULLS
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'13'              INSERT CURSOR
CLRLEN   EQU   *-CLR
         SPACE 5
***********************************************************************
*                                                                     *
*                  DISPLAY SCREEN - HEADER SECTION                    *
*                                                                     *
***********************************************************************
HEADER   EQU   *
CLEAR    DC    X'C1'              WCC
         DC    X'115D7F'          SBA TO ROW 24, COL 80 (FSE 5.0)
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'3C404000'        FILL SCREEN WITH NULLS
         DC    X'114040'          SBA TO ROW 1, COL 1 JUST IN CASE
         DC    X'1D60'            ATTR BYTE - PROTECTED FIELD
***********************************************************************
*                                                                     *
*                 DISPLAY SCREEN IMAGE BUFFER SECTION                 *
*                                                                     *
***********************************************************************
BUF      DC    21CL84' '          OPERATORS SCREEN BUFFER
         DC    22CL84' '          PLUS EXTRA FOR 3278-4
***********************************************************************
*                                                                     *
*               DISPLAY SCREEN - TRAILER SECTION                      *
*                                                                     *
***********************************************************************
TRAILER  EQU   *
CMDCTRL  DC    X'115A50'          SBA TO ROW 22, COL 1
         DC    X'1DC8'      ATTR BYTE - UNPROTECTED, HIGH INTENSITY SL
* WAS==> DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
LASTLINE DC    CL79' '            OPERATORS COMMAND INPUT LINE
PHEADING DC    X'115B60'          SBA TO ROW 23, COL 1
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
HEADING  DC    CL8'CONSOLE '
CONNUM   DC    CL2' 1'            CONSOLE NUMBER
         DC    CL1' '
LOCATION DC    CL12' '
         DC    CL2' '
UNIT     DC    CL3' '
SLASH    DC    CL1'/'
ALTUNIT  DC    CL3' '
         DC    CL2' '
STATUS   DC    CL6' '             MASTER CONSOLE
         DC    CL2' '
SYS      DC    CL4' '             SYS  AUTHORIZATION
IO       DC    CL4' '             I/O  AUTHORIZATION
CONS     DC    CL3' '             CONS AUTHORIZATION
         DC    CL3' '
TIME     DC    CL3' '             SECONDS REMAINING ON TIMER
         DC    CL1'/'
PAUSE    DC    CL3'1.0'           DELAY IN SECONDS
         DC    CL2' '
HEADING2 DC    CL5'MODE:'
FREEZE   DC    C'F'               FREEZE/RELEASE MODE (FOR 3066 ONLY)
MODE     DC    CL1'2'             DISPLAY MODE 2/1
         DC    CL1' '
         DC    CL5'PAGE '
PAGE     DC    CL1'2'             PAGE NUMBER
R24C1    DC    X'115CF0'          SBA TO ROW 24, COL 1
INPUTATR DC    X'1D4C'      ATTR BYTE -- UNPROTECTED, NON DISPLAY   SL
*                1D40 <==== CHANGED TO - UNPROTECTED, LOW INTENSITY SL
*                                        AFTER PASSWORD IS ENTERED  SL
* WAS==> DC    X'1D40'            ATTR BYTE - UNPROTECTED, LOW INTENS.
         DC    X'13'              INSERT CURSOR
USERLINE DC    13X'00'            USERS COMMAND INPUT LINE  (NULLS) SL
ERROR    DC    66X'00'            ERROR MSG FIELD           (NULLS) SL
ENDTRAIL EQU   *
         SPACE 5
SASID    DS    F                  STORE FOR PREVIOUS SEC ASID      SP3
LOCDCM   DS    F                  ADDR OF GETMAINED AREA FOR TDCM  SP3
LOCTBUF  DS    F                  ADDR OF GETMAINED TEMPORARY BUF   VC
ONE      DC    H'1'               TO SET AX 1                      SP3
ZERO     DC    H'0'               TO SET AX 0                      SP3
CONASID  EQU   7                  'CONSOLE' ASID - SP 2.1.3/DFP V2  VC
MOVEBSAV DS    6F                 REG SAVE AREA - R4:R9            SP3
TLEN     DS    H                  TERMINAL SIZE                     CN
H20      DC    H'20'                                                CN
H28      DC    H'28'                                                CN
H35      DC    H'35'                                                CN
         EJECT
SBATABLE DS    0H                                                   VC
******************************************************************* VC
*                                                                 * VC
*                  SBA CONVERSION TABLE                           * VC
*                                                                 * VC
*        THE SBA CONVERIONS TABLE IS USED TO CONVERT 14-BIT SBA   * VC
*        (SET BUFFER ADDRESS) ORDERS USED ONLY WITH EXTENDED DATA * VC
*        STREAM DEVICES TO A 12-BIT SBA ORDER THAT CAN BE USED    * VC
*        WITH ANY DEVICE.                                         * VC
*                                                                 * VC
******************************************************************* VC
         DC    X'0000',X'4040'    ROW  1, COLUMN 1                  VC
         DC    X'0050',X'C150'    ROW  2, COLUMN 1                  VC
         DC    X'00A0',X'C260'    ROW  3, COLUMN 1                  VC
         DC    X'00F0',X'C3F0'    ROW  4, COLUMN 1                  VC
         DC    X'0140',X'C540'    ROW  5, COLUMN 1                  VC
         DC    X'0190',X'C650'    ROW  6, COLUMN 1                  VC
         DC    X'01E0',X'C760'    ROW  7, COLUMN 1                  VC
         DC    X'0230',X'C8F0'    ROW  8, COLUMN 1                  VC
         DC    X'0280',X'4A40'    ROW  9, COLUMN 1                  VC
         DC    X'02D0',X'4B50'    ROW  0, COLUMN 1                  VC
         DC    X'0320',X'4C60'    ROW 11, COLUMN 1                  VC
         DC    X'0370',X'4DF0'    ROW 12, COLUMN 1                  VC
         DC    X'03C0',X'4F40'    ROW 13, COLUMN 1                  VC
         DC    X'0410',X'5050'    ROW 14, COLUMN 1                  VC
         DC    X'0460',X'D160'    ROW 15, COLUMN 1                  VC
         DC    X'04B0',X'D2F0'    ROW 16, COLUMN 1                  VC
         DC    X'0500',X'D440'    ROW 17, COLUMN 1                  VC
         DC    X'0550',X'D550'    ROW 18, COLUMN 1                  VC
         DC    X'05A0',X'D660'    ROW 19, COLUMN 1                  VC
         DC    X'05F0',X'D7F0'    ROW 20, COLUMN 1                  VC
         DC    X'0640',X'D940'    ROW 21, COLUMN 1                  VC
         DC    X'0690',X'5A50'    ROW 22, COLUMN 1                  VC
         DC    X'06E0',X'5B60'    ROW 23, COLUMN 1                  VC
         DC    X'0730',X'5CF0'    ROW 24, COLUMN 1                  VC
         DC    X'0780',X'5E40'    ROW 25, COLUMN 1                  VC
         DC    X'07D0',X'5F50'    ROW 26, COLUMN 1                  VC
         DC    X'0820',X'6060'    ROW 27, COLUMN 1                  VC
         DC    X'0870',X'61F0'    ROW 28, COLUMN 1                  VC
         DC    X'08C0',X'E340'    ROW 29, COLUMN 1                  VC
         DC    X'0910',X'E450'    ROW 30, COLUMN 1                  VC
         DC    X'0960',X'F560'    ROW 31, COLUMN 1                  VC
         DC    X'09B0',X'E6F0'    ROW 32, COLUMN 1                  VC
         DC    X'0A00',X'E840'    ROW 33, COLUMN 1                  VC
         DC    X'0A50',X'E950'    ROW 34, COLUMN 1                  VC
         DC    X'0AA0',X'6A60'    ROW 35, COLUMN 1                  VC
         DC    X'0AF0',X'6BF0'    ROW 36, COLUMN 1                  VC
         DC    X'0B40',X'6D40'    ROW 37, COLUMN 1                  VC
         DC    X'0B90',X'6E50'    ROW 38, COLUMN 1                  VC
         DC    X'0BE0',X'6F60'    ROW 39, COLUMN 1                  VC
         DC    X'0C30',X'F0F0'    ROW 40, COLUMN 1                  VC
         DC    X'0C80',X'F240'    ROW 41, COLUMN 1                  VC
         DC    X'0CD0',X'F350'    ROW 42, COLUMN 1                  VC
         DC    X'0D20',X'F460'    ROW 43, COLUMN 1                  VC
         DC    X'FF'              END OF SBA TABLE                  VC
         LTORG
         SPACE 2
***********************************************************************
*                                                                     *
*                     ERROR AND WARNING MESSAGES                      *
*                                                                     *
***********************************************************************
ERRMSG1  DC    CL26'ERROR - CONSOLE UNDEFINED '
ERRMSG2  DC    CL26'ERROR - NON-NUMERIC VALUE '
ERRMSG3  DC    CL26'ERROR - INVALID COMMAND   '
ERRMSG4  DC    CL26'ERROR - NON-CRT CONSOLE   '
ERRMSG5  DC    CL26'WARNING - UCM TABLE FULL  '
ERRMSG6  DC    CL26'ERROR - TERMINAL INVALID  '
ERRMSG7  DC    CL26'ERROR - COMMAND RESTRICTED'
ERRMSG8  DC    CL26'ERROR - COMMAND TOO LONG  '
ERRMSG9  DC    CL26'ERROR - UNKNOWN FORMAT    '                     VC
ERRMSG10 DC    CL26'ERROR - CONSOLE INACTIVE  '                     VC
ERRMSG11 DC    CL26'ERROR - SBA NOT IN TABLE  '                     VC
ERRMSG12 DC    CL26'ERROR - CONSOLE IS A MOD-3'                     VC
         EJECT
***********************************************************************
*                                                                     *
*                           USER HELP PAGE                            *
*                                                                     *
***********************************************************************
HELP     DC    X'C1'               WCC
         DC    X'115D7F'           SBA TO ROW 24, COL 80 (FSE 5.0)
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C404000'         FILL SCREEN WITH NULLS
         DC    X'114040',X'1DE8',C'S P Y   (OPCON) ---   VERSION 3.3'
         DC    X'11C260',C'COMMAND  Description                '    SL
         DC              C'COMMAND  Description'                    SL
         DC    X'11C3F0'                                            SL
         DC    X'11C540',C'  A    stop Auto Wxx after cmds     '    SL
         DC              C'  End  End OPCON'                        SL
         DC    X'11C650',C'  Axx  Automatic Wxx after cmds     '    SL
         DC              C'  S    Status of all consoles'           SL
         DC    X'11C760',C'  Bye  end OPCON                    '    SL
         DC              C'  W    start Watch for 30 times Dxx'     SL
         DC    X'11C8F0',C'  C    switch to master Console     '    SL
         DC              C'  Wxx  start Watch for xx times Dxx'     SL
         DC    X'114A40',C'  Cxx  switch to Console xx         '    SL
         DC              C'  W0   start Watch until interrupt'      SL
         DC    X'114B50',C'  Dxx  set Delay to xx tenths sec   '    SL
         DC              C'  ?    display subcommands help'         SL
         DC    X'114C60'                                            SL
         DC    X'114DF0'                                            SL
         DC    X'114F40',C'         PRESS: PA1 or ATTN (interru'    SL
         DC              C'pt) to STOP THE WATCH TIMER.'            SL
         DC    X'115050'                                            SL
         DC    X'11D160',C'              Following are valid ON'    SL
         DC              C'LY if the TSO terminal'                  SL
         DC    X'11D2F0',C'              in use is smaller than'    SL
         DC              C' console being watched'                  SL
         DC    X'11D440'                                            SL
         DC    X'11D550',C'  F    Freeze display on page x     '    SL
         DC              C'  1    display page 1 (top portion)'     SL
         DC    X'11D660',C'  R    Release frozen display       '    SL
         DC              C'  2    display page 2 (bottom portion)'  SL
         DC    X'11D7F0'                                            SL
         DC    X'11D940'                                            SL
         DC    X'115A50'                                            SL
         DC    X'115B60'                                            SL
         DC    X'115CF0'        ROW 24, COL 1
         DC    C'Hit ENTER to continue'
         DC    X'115DC6'        ROW 24, COL 23
         DC    X'1D40'
         DC    X'1340'
         DC    X'1DE8'
MARKER1  EQU   *
HLENGTH  EQU   MARKER1-HELP     LENGTH OF HELP TPUT
         EJECT
***********************************************************************
*                                                                     *
*                           E Q U A T E S                             *
*                                                                     *
*     NOTE THAT A 'LINE' IS DEFINED AS 84 BYTES; THIS IS BECAUSE      *
*     DIDOCS BUILDS THE OPERATOR SCREEN BUFFER LINES AS 79 BYTES OF   *
*     TEXT + 5 CONTROL BYTES. THIS CONSISTS OF AN SBA (X'11XXYY')     *
*     AND AN ATTRIBUTE BYTE (X'1DXX').                                *
*                                                                     *
***********************************************************************
LEN9     EQU   9*84               NUMBER OF BYTES IN  9 LINES
LEN13    EQU   13*84              NUMBER OF BYTES IN 13 LINES
LEN14    EQU   14*84              NUMBER OF BYTES IN 14 LINES        VC
LEN21    EQU   21*84              NUMBER OF BYTES IN 21 LINES
LEN22    EQU   22*84              NUMBER OF BYTES IN 22 LINES
LEN29    EQU   29*84              NUMBER OF BYTES IN 29 LINES        VC
M2BUFLEN EQU   21*90              LENGTH OF LARGEST 3278-2 BUFFER    VC
M3BUFLEN EQU   29*90              LENGTH OF LARGEST 3278-3 BUFFER    CN
M4BUFLEN EQU   35*90              LENGTH OF LARGEST 3278-4 BUFFER    VC
STATLEN  EQU   BUF-CLEAR+80*23    LENGTH OF 'STATUS' PAGE BUFFER
HEADLEN  EQU   BUF-HEADER         LENGTH OF HEADER
TRAILEN  EQU   ENDTRAIL-TRAILER   LENGTH OF TRAILER
MOD4LEN  EQU   ENDTRAIL-HEADER    LENGTH OF TPUT FOR MOD4
MOD2LEN  EQU   MOD4LEN-LEN22      LENGTH OF TPUT FOR MOD2
MOD3LEN  EQU   MOD4LEN-LEN14      LENGTH OF TPUT FOR MOD3            VC
ENDMOD2  EQU   BUF+LEN21          ADDR OF TRAILER FOR 3278-2
ENDMOD3  EQU   BUF+LEN29          ADDR OF TRAILER FOR MOD3           VC
         EJECT
*        AGO   .ELMONTE           ,    "UN-COMMENT" FOR EM CONSOLES SL
UCMTAB   CSECT                    ,    BEGIN SAN FRANCISCO CONSOLES SL
***********************************************************************
*                                                                     *
*                            U C M T A B                              *
*                                                                     *
*        THE UCMTAB TABLE IS BUILT AT SPY INITIALIZATION TIME.        *
*        ONE ENTRY IS FILLED IN FOR EACH CONSOLE THAT HAS BEEN        *
*        IOGENED INTO THE SYSTEM. THE 12 BYTE DESCRIPTION FIELD       *
*        ALLOWS YOU TO TAG EACH CONSOLE WITH SOME MNEMONIC THAT       *
*        IS EASIER TO REMEMBER THAN CONSOLE NUMBERS. IF UCMTAB IS     *
*        NOT DEFINED LARGE ENOUGH TO HOLD ALL THE CONSOLES, A         *
*        WARNING IS ISSUED BUT SPY CONTINUES ANYWAY.                  *
*                                                                     *
***********************************************************************
         DC    A(0),CL12' '            (THIS ENTRY IGNORED IN LOOP) SL
         DC    A(0),CL12'OPS 2ND FLR '    CONSOLE 1    A60          VC
         DC    A(0),CL12'OPS 2ND FLR '    CONSOLE 2    560          VC
         DC    A(0),CL12'TAPE LIBRARY'    CONSOLE 3    561          VC
         DC    A(0),CL12'PRINT AREA 5'    CONSOLE 4    562          VC
         DC    A(0),CL12'PRINT AREA 3'    CONSOLE 5    563          VC
         DC    A(0),CL12'WILL CALL   '    CONSOLE 6    564          VC
         DC    A(0),CL12'KOM SHOP    '    CONSOLE 7    565          VC
         DC    A(0),CL12'POD 3RD FLR '    CONSOLE 8    566          VC
         DC    A(0),CL12'** FUTURE **'    CONSOLE 9    567          VC
         DC    A(0),CL12'** FUTURE **'    CONSOLE 10   568          VC
         DC    A(0),CL12'TAPE POOL   '    CONSOLE 11   A61          VC
         DC    A(0),CL12'PRINT AREA 1'    CONSOLE 12   A62          VC
         DC    A(0),CL12'PRINT AREA 2'    CONSOLE 13   A63          VC
         DC    A(0),CL12'PRINT AREA 5'    CONSOLE 14   A64          VC
         DC    A(0),CL12'KOM SHOP    '    CONSOLE 15   A65          VC
         DC    A(0),CL12'POD 3RD FLR '    CONSOLE 16   A66          VC
         DC    A(0),CL12'** FUTURE **'    CONSOLE 17   A67          VC
         DC    A(0),CL12'** FUTURE **'    CONSOLE 18   A68          VC
         DC    A(0),CL12'HARDCOPY LOG'    CONSOLE 19   A6A          VC
         DC    A(0),CL12'TELEGENIX   '    CONSOLE 20   A6D          VC
         DC    A(0),CL12'OPER-AIDER  '    CONSOLE 21   JES   OPRA   VC
         DC    A(0),CL12'OPER-AIDER  '    CONSOLE 22   JES   OPRA   VC
         DC    A(0),CL12'OPER-AIDER  '    CONSOLE 23   JES   OPRA   VC
         DC    A(0),CL12'OPER-AIDER  '    CONSOLE 24   JES   OPRA   SL
         DC    A(0),CL12'----OPEN----'                              SL
TABEND   EQU   *
         AGO   .ENDELMO           ,    END SF CONSOLES, SKIP ELMONT SL
.ELMONTE ANOP                     ,    COME HERE IF ASSEMBLE ELMONT SL
UCMTAB   CSECT                    ,    BEGIN EL MONTE CONSOLES      SL
***********************************************************************
*                                                                     *
*                            U C M T A B                              *
*                                                                     *
*        THE UCMTAB TABLE IS BUILT AT SPY INITIALIZATION TIME.        *
*        ONE ENTRY IS FILLED IN FOR EACH CONSOLE THAT HAS BEEN        *
*        IOGENED INTO THE SYSTEM. THE 12 BYTE DESCRIPTION FIELD       *
*        ALLOWS YOU TO TAG EACH CONSOLE WITH SOME MNEMONIC THAT       *
*        IS EASIER TO REMEMBER THAN CONSOLE NUMBERS. IF UCMTAB IS     *
*        NOT DEFINED LARGE ENOUGH TO HOLD ALL THE CONSOLES, A         *
*        WARNING IS ISSUED BUT SPY CONTINUES ANYWAY.                  *
*                                                                     *
***********************************************************************
         DC    A(0),CL12' '            (THIS ENTRY IGNORED IN LOOP) SL
         DC    A(0),CL12'3033 CPU PRI'    CONSOLE 1    012   3036   SL
         DC    A(0),CL12'3033 CPU ALT'    CONSOLE 2    010   3036   SL
         DC    A(0),CL12'MASTER (OPS)'    CONSOLE 3    490   3279   SL
         DC    A(0),CL12'OPS ALT  4TH'    CONSOLE 4    491   3279   SL
         DC    A(0),CL12'OPS TAPE 4TH'    CONSOLE 5    492   3279   SL
         DC    A(0),CL12'3800 PRT 1ST'    CONSOLE 6    493   3279   SL
         DC    A(0),CL12'KOMSTAR  1ST'    CONSOLE 7    494   3279   SL
         DC    A(0),CL12'--OPEN-- 1ST'    CONSOLE 8    495          SL
         DC    A(0),CL12'NCC      4TH'    CONSOLE 9    496   3279   SL
         DC    A(0),CL12'POD CATP 3RD'    CONSOLE 10   497   3279   SL
         DC    A(0),CL12'HARDCOPY 4TH'    CONSOLE 11 O-498   3287   SL
TABEND   EQU   *
.ENDELMO ANOP                     ,    END EL MONTE CONSOLES        SL
         PRINT NOGEN
         EJECT
***********************************************************************
*                                                                     *
*                SYSTEM CONTROL BLOCK MAPPING DSECTS                  *
*                                                                     *
*     ALL MACROS EXCEPT FOR IEERDCM AND IEETDCM CAN BE FOUND IN       *
*     EITHER 'SYS1.MACLIB' OR 'SYS1.AMODGEN'. THE TWO EXCEPTIONS      *
*     ARE IN 'SYS1.APVTMACS'; THEY ARE ALSO DISTRIBUTED WITH THE      *
*     SOURCE TO 'SPY'.                 ---- ----------- OH YEAH ?   SL*
*                                                                     *
***********************************************************************
         CVT   DSECT=YES          COMMUNICATIONS VECTOR TABLE
         SPACE 2
         IEECUCM FORMAT=NEW,DSECT=YES,LIST=YES
         SPACE 2
         IEERDCM ,                RESIDENT DISPLAY CONTROL MODULE
         SPACE 2
         IEETDCM ,                PAGEABLE DISPLAY CONTROL MODULE
         SPACE 2
         SPACE 2
         IEZJSCB ,                JOB STEP CONTROL BLOCK
         SPACE 2
         IKJCSOA ,                COMMAND SCAN OUTPUT AREA
         SPACE 2
         IKJCSPL ,                COMMAND SCAN PARAMETER LIST
         SPACE 2
         IKJPSCB ,                PROTECTED STEP CONTROL BLOCK
         SPACE 2
         IKJTCB  ,                TASK CONTROL BLOCK
         SPACE 2
         IKJUPT  ,                USER PROFILE TABLE
         SPACE 2
         AGO   .ENDHELP                SKIP AROUND HELP ENTRY       SL
********************************************************************SL*
*                                                                   SL*
*        TSO HELP ENTRY FOR OPCON FOLLOWS.                          SL*
*                                                                   SL*
********************************************************************SL*
)F FUNCTION -
  OPCON displays the contents of any active graphics operator's console
  on a TSO terminal. The console can be either a 327X or 370/168. The
  TSO terminal can be any 327X.
    OPCON also gives a TSO user the capability to enter any console
  operator command. This facility is protected by a password to prevent
  accidental entry of a command.
)X SYNTAX -
         OPCON

  REQUIRED - None   (OPER authority is required.)
  DEFAULTS - None
  NOTE     - All options of OPCON are subcommands.
             One help screen is available within OPCON, enter: ?
)S SUBCOMMANDS -
  A    stop Auto Wxx after cmds    E    End OPCON
  Axx  Automatic Wxx after cmds    S    Status of all consoles
  Bye  end OPCON                   W    start Watch for 30 times Dxx
  C    switch to master Console    Wxx  start Watch for xx times Dxx
  Cxx  switch to Console xx        W0   start Watch until interrupt
  Dxx  set Delay to xx tenths sec  ?    display subcommands help

         Press: PA1 or ATTN (interrupt) to stop the Watch timer.

              Following are valid only if the TSO terminal
              in use is smaller than console being watched
  F    Freeze display on page x    1    display page 1 (top portion)
  R    Release frozen display      2    display page 2 (bottom portion)
)O
  A password is required to engage the operator command facility.
  Typing the password 'toggles' the command flag on/off. When the flag
  is off, the input area is set non-display to protect entry of the
  password. When the flag is on (indicated by an * between the MODE
  and PAGE fields on the info line) the input area is set to display.
  Anything you enter in the input area is passed to the system if:
       FIRST CHARACTER IS $           assumed to be JES command
       INPUT IS MORE THAN 3 CHARS     all OPCON subcmds are 3 or less
       INPUT IS NOT A VALID SUBCMD    eg: 3U (reply) or D A (imbed blk)

  Note - The operator input line (used by MCS to respond to PA1) is
         displayed above your input line (because PA1 at your terminal
         is processed by TSO as attention interrupt). Both input lines
         can be used for entry, but only 79 characters are read - the
         rest (if any) is just ignored.

  Note - The response to any command you enter appears only on the
         screen you are watching. Also, your commands have the same
         console authority as the screen you are watching, including
         the master console ! Be careful, there are no second chances.
.ENDHELP ANOP                          ,                            SL
         END                           , TERMINATE ASSEMBLY         SL
