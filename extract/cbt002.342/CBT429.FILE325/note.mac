PROC 0 PROLOG(YES) EPILOG(YES) COPYLIST(YES) PROFNODE(EMINFO) DEBUG
/*--------------------------------------------------------------------*/
/*  WRITTEN BY: Sam Lepore, Wells Fargo Bank, San Francisco CA  1/86  */
/*--------------------------------------------------------------------*/
IF &DEBUG = DEBUG THEN +
  CONTROL SYMLIST CONLIST LIST      /* Turn on debugging
CONTROL NOCAPS                      /* Allow lower case messages
SET &MAXNICK = 15                   /* Panel defines 15 nicknames
SET &COUNT = 0
DO WHILE &COUNT < &MAXNICK          /* Loop through all entries
  SET &COUNT = &COUNT + 1
  SET &NICK&COUNT = &STR()          /* Initialize to null
  END
SET &SUBJECT = NO SUBJECT           /* Default to NO SUBJECT
SET &OPTION = E                     /* First option is to edit message
ISPEXEC DISPLAY PANEL(WFBNOTE)
SET &CC = &LASTCC                   /* Save CC for error messages
IF &CC > 8 THEN DO                  /* 0 = enter, 4 = end/return pressed
  WRITE =====> ERROR: Reurun code from ISPEXEC DISPLAY PANEL is &CC
  EXIT
  END
IF &OPTION = C THEN +
  EXIT                              /* Cancel requested
/*--------------------------------------------------------------------*/
/*  Allocate and open VIO dataset for message.                        */
/*--------------------------------------------------------------------*/
ALLOC DD(PDFTEMP&SCREEN) REUSE UNIT(VIO) TRACK SPACE(1) +
                  DSORG(PS) RECFM(F B) LRECL(80) BLKSIZE(9040)
CONTROL NOFLUSH                     /* Protect ERROR routine from flush
OPENFILE PDFTEMP&SCREEN OUTPUT      /* Open the message file
SET &NAMETEXT = NOTALLOC            /* NAMES.TEXT not (yet) allocated
/*--------------------------------------------------------------------*/
/*  Process PROLOG from NAMES.TEXT dataset.                           */
/*--------------------------------------------------------------------*/
IF &SUBSTR(1,&PROLOG ) = Y THEN DO  /* PROLOG processing requested
  SET &PROLOG = NONE                /* Default in case none found
  ALLOC DD(NAMETEXT) REUSE DSN(NAMES.TEXT) SHR
  IF &LASTCC ^= 0 THEN DO
    WRITE Dataset NAMES.TEXT could not be allocated +
          to process PROLOG/EPILOG.
    WRITE ===> WARNING: Nicknames are also resolved using NAMES.TEXT.
    WRITE               To avoid errors, specify only node.userid +
                        on "to" panel.
    SET &EPILOG = NONE              /* Prevent EPILOG processing
    GOTO PUTSUB                     /* Go put subject into message
    END
  SET &SYSOUTTRAP = 10              /* Trap enough to catch LISTD info
  LISTD NAMES.TEXT
  SET &SYSOUTTRAP = 0               /* Turn off trapping
  SET &RECFM = &SUBSTR(3,&SYSOUTLINE3   )  /* Save record format
  IF &RECFM = R THEN +
    SET &RECFM = &SUBSTR(3,&SYSOUTLINE4   )  /* Use line 4 if LIST is on
  ERROR DO
    CLOSFILE NAMETEXT               /* Error 400 is normal end of file
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    GOTO PUTSUB                     /* Go put subject into message
    END
  OPENFILE NAMETEXT
  GETFILE NAMETEXT
  SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length for loop
  SET &FIRSTCOL = 1                 /* Default to column 1
  IF &RECFM = V AND &DATATYPE(&SUBSTR(1:8,&NRSTR(&NAMETEXT)        )) +
   = NUM THEN +
    SET &FIRSTCOL = 9               /* V, NUM - First data column is 9
  SET &ADJUST = 0                   /* Default to no adjustment
  IF &RECFM = F +
   AND &DATATYPE(&SUBSTR(&TEXTLEN-7:&TEXTLEN,&NRSTR(&NAMETEXT))) +
   = NUM THEN +
      SET &ADJUST = 8               /* F, NUM - Last data col is max-8
  GOTO PROLOOP                      /* Enter PROLOG loop
  GETPRO: GETFILE NAMETEXT
  SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length for loop
  PROLOOP: SET &LASTCOL = &TEXTLEN - &ADJUST  /* Refigure in case REC V
  IF &STR(&SYSCAPS(&SUBSTR(&FIRSTCOL:&FIRSTCOL+5,+
   &NRSTR(&NAMETEXT)              ))) = :NICK. THEN DO
    CLOSFILE NAMETEXT               /* 1st nickname ends control section
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    GOTO PUTSUB                     /* Go put subject into message
    END
  IF &LASTCOL - &FIRSTCOL < 7 THEN +
    GOTO GETPRO                     /* Ignore short records
  IF &STR(&SYSCAPS(&SUBSTR(&FIRSTCOL:&FIRSTCOL+7,+
   &NRSTR(&NAMETEXT)                ))) = :PROLOG. THEN DO
    SET &PROLOG = DONE              /* Show DONE on panel option
    IF &LASTCOL = &FIRSTCOL + 7 THEN +
      SET &PDFTEMP&SCREEN = &STR( ) /* Put blank line in message
    ELSE +
      SET &PDFTEMP&SCREEN = &SUBSTR(&FIRSTCOL+8:&LASTCOL,+
                                    &NRSTR(&NAMETEXT))
    PUTFILE PDFTEMP&SCREEN
    GOTO GETPRO                     /* See if more :PROFILE. lines
    END
  GOTO GETPRO                       /* See if more :PROFILE. lines
  END
/*--------------------------------------------------------------------*/
/*  Add SUBJECT to edit dataset.                                      */
/*--------------------------------------------------------------------*/
PUTSUB: ERROR OFF
SET &PDFTEMP&SCREEN = SUBJECT: &NRSTR(&SUBJECT)
PUTFILE PDFTEMP&SCREEN
SET &PDFTEMP&SCREEN = &STR( )       /* Put blank line following subject
PUTFILE PDFTEMP&SCREEN
/*--------------------------------------------------------------------*/
/*  Process EPILOG from NAMES.TEXT dataset.                           */
/*--------------------------------------------------------------------*/
IF &SUBSTR(1,&EPILOG ) = Y THEN DO  /* EPILOG processing requested
  SET &EPILOG = NONE                /* Default in case none found
  IF &NAMETEXT = NOTALLOC THEN DO
    ALLOC DD(NAMETEXT) REUSE DSN(NAMES.TEXT) SHR
    IF &LASTCC ^= 0 THEN DO
      WRITE Dataset NAMES.TEXT could not be allocated to process EPILOG.
      WRITE ===> WARNING: Nicknames are also resolved using NAMES.TEXT.
      WRITE               To avoid errors, specify only node.userid +
                          on "to" panel.
      GOTO EDITNOTE                 /* Go edit the message
      END
    END
  IF &FIRSTCOL > 0 THEN +
    GOTO EPIOPEN                    /* Use previously calculated value
  SET &SYSOUTTRAP = 10              /* Trap enough to catch LISTD info
  LISTD NAMES.TEXT
  SET &SYSOUTTRAP = 0               /* Turn off trapping
  SET &RECFM = &SUBSTR(3,&SYSOUTLINE3   )  /* Save record format
  IF &RECFM = R THEN +
    SET &RECFM = &SUBSTR(3,&SYSOUTLINE4   )  /* Use line 4 if LIST is on
  ERROR DO
    CLOSFILE NAMETEXT               /* Error 400 is normal end of file
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    GOTO EDITNOTE                   /* Go edit the message
    END
  OPENFILE NAMETEXT
  GETFILE NAMETEXT
  SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length for loop
  SET &FIRSTCOL = 1                 /* Default to column 1
  IF &RECFM = V AND &DATATYPE(&SUBSTR(1:8,&NRSTR(&NAMETEXT)        )) +
   = NUM THEN +
    SET &FIRSTCOL = 9               /* V, NUM - First data column is 9
  SET &ADJUST = 0                   /* Default to no adjustment
  IF &RECFM = F AND &DATATYPE(&SUBSTR(&TEXTLEN-7:&TEXTLEN,+
   &NRSTR(&NAMETEXT))) = NUM THEN +
      SET &ADJUST = 8               /* F, NUM - Last data col is max-8
  GOTO EPILOOP                      /* Enter EPILOG loop
  EPIOPEN: ERROR DO
    CLOSFILE NAMETEXT               /* Error 400 is normal end of file
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    GOTO EDITNOTE                   /* Go edit the message
    END
  OPENFILE NAMETEXT
  GETEPI: GETFILE NAMETEXT
  SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length for loop
  EPILOOP: SET &LASTCOL = &TEXTLEN - &ADJUST  /* Refigure in case REC V
  IF &STR(&SYSCAPS(&SUBSTR(&FIRSTCOL:&FIRSTCOL+5,+
   &NRSTR(&NAMETEXT)              ))) = :NICK. THEN DO
    CLOSFILE NAMETEXT               /* 1st nickname ends control section
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    GOTO EDITNOTE                   /* Go edit the message
    END
  IF &LASTCOL - &FIRSTCOL < 7 THEN +
    GOTO GETEPI                     /* Ignore short records
  IF &STR(&SYSCAPS(&SUBSTR(&FIRSTCOL:&FIRSTCOL+7,
   &NRSTR(&NAMETEXT)                ))) = :EPILOG. THEN DO
    SET &EPILOG = DONE              /* Show DONE on panel option
    IF &LASTCOL = &FIRSTCOL + 7 THEN +
      SET &PDFTEMP&SCREEN = &STR( ) /* Put blank line in message
    ELSE +
      SET &PDFTEMP&SCREEN = &SUBSTR(&FIRSTCOL+8:&LASTCOL,+
                                    &NRSTR(&NAMETEXT))
    PUTFILE PDFTEMP&SCREEN
    GOTO GETEPI                     /* See if more :PROFILE. lines
    END
  GOTO GETEPI                       /* See if more :PROFILE. lines
  END
/*--------------------------------------------------------------------*/
/*  Initialize for PDF EDIT, call with edit macro to insert lines.    */
/*--------------------------------------------------------------------*/
EDITNOTE: ERROR OFF                 /* Turn off NAMETEXT error routine
CLOSFILE PDFTEMP&SCREEN             /* Close message file before edit
ISPEXEC LMINIT DATAID(DATAID) DDNAME(PDFTEMP&SCREEN)  /* Initialize ISPF
IF &LASTCC ^= 0 THEN DO
  WRITE =====> ERROR: Unable to establish PDF interface.
  EXIT
  END
SET &TYPECALL = INITIALIZE          /* Set for edit macro initialization
VPUTTYPE: ISPEXEC VPUT TYPECALL     /* Save variable in ISPF shared pool
ISPEXEC EDIT DATAID(&DATAID) MACRO(NOTEIMAC) PROFILE(NOTE)
/*--------------------------------------------------------------------*/
/*  Redisplay options panel to allow for add/change of userids.       */
/*--------------------------------------------------------------------*/
SET &SUBMSG = Note: Any change to the subject will cause EDIT +
              to be reinvoked.
SET &OLDSUB = &NRSTR(&SUBJECT)      /* Save subject for later compare
SET &OPTION = M                     /* Set option to mail the message
SET &MAILMSG = &STR( M to mail,)    /* Explain M option on panel
ISPEXEC DISPLAY PANEL(WFBNOTE)
SET &CC = &LASTCC                   /* Save CC for error messages
IF &CC > 8 THEN DO                  /* 0 = enter, 4 = end/return pressed
  WRITE =====> ERROR: Reurun code from ISPEXEC DISPLAY PANEL is &CC
  GOTO LMFREE                       /* Go free ISPF resources
  END
IF &OPTION = E THEN DO
  SET &TYPECALL = REEDIT            /* Set for re-edit of message
  GOTO VPUTTYPE                     /* Save variable in ISPF shared pool
  END
IF &NRSTR(&OLDSUB) ^= &NRSTR(&SUBJECT) THEN DO
  ISPEXEC VPUT SUBJECT              /* Save variable in ISPF shared pool
  SET &TYPECALL = SUBCHANGE         /* Set for change subject and reedit
  GOTO VPUTTYPE                     /* Go reinvoke edit
  END
IF &OPTION = C THEN +
  GOTO LMFREE                       /* Go free ISPF resources
/*--------------------------------------------------------------------*/
/*  Resolve nicknames into node.userid. Identify nickname, open file. */
/*--------------------------------------------------------------------*/
SET &NICK = &STR(&&NICK)  /* Required for double symbolic substitution.
SET &COUNT = 0
SET &LIST = &MAXNICK + 1            /* Start saving lists at max + 1
DO WHILE &COUNT < &MAXNICK          /* Loop through all entries
  SET &COUNT = &COUNT + 1
  SET &NICKLEN = &LENGTH(&NICK&COUNT)  /* Length of entry is 1-17 chars
  IF &NICK&COUNT = &STR() OR &NICKLEN > 8 THEN +
    GOTO NEXTNICK                   /* Max for true nickname is 1-8
  SET &COL = 1                      /* Start col 2, min node.user is a.b
  DO WHILE &COL < &NICKLEN          /* Look for period in node.user
    SET &COL = &COL + 1
    IF &SUBSTR(&COL,&NICK&COUNT) = &STR(.) THEN +
      GOTO NEXTNICK                 /* Found, so entry is not nickname
    END
  IF &NAMETEXT ^= CLOSED THEN DO    /* No period, so entry is nickname
    IF &NAMETEXT = NOTEXIST THEN DO
      SET &NICK&COUNT = &STR()      /* Null nickname to prevent error
      GOTO NEXTNICK                 /* Go process next nickname
      END
    ALLOC DD(NAMETEXT) REUSE DSN(NAMES.TEXT) SHR
    IF &LASTCC ^= 0 THEN DO
      WRITE Dataset NAMES.TEXT could not be allocated +
            to process nickname &NICK&COUNT
      WRITE Node.userid entries will be processed, +
            but other nicknames will be ignored.
      SET &NAMETEXT = NOTEXIST      /* Prevent future allocation attempt
      SET &NICK&COUNT = &STR()      /* Null nickname to prevent error
      GOTO NEXTNICK                 /* Go process next nickname
      END
    END
  IF &FIRSTCOL > 0 THEN +
    GOTO NICKOPEN                   /* Use previously calculated value
  SET &SYSOUTTRAP = 10              /* Trap enough to catch LISTD info
  LISTD NAMES.TEXT
  SET &SYSOUTTRAP = 0               /* Turn off trapping
  SET &RECFM = &SUBSTR(3,&SYSOUTLINE3   )  /* Save record format
  IF &RECFM = R THEN +
    SET &RECFM = &SUBSTR(3,&SYSOUTLINE4   )  /* Use line 4 if LIST is on
  ERROR DO
    CLOSFILE NAMETEXT               /* Error 400 is normal end of file
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    WRITE ===> WARNING: Nickname &NICK&COUNT not found in NAMES.TEXT .
    WRITENR ???? Enter another nickname, or just press enter to ignore:
    READ
    DO WHILE &NRSTR(&SYSDVAL) ^= &STR() AND &LENGTH(&NRSTR(&SYSDVAL)) +
     > 8
      WRITENR ???? Maximum length for nickname is 8 characters, reenter:
      READ
      END
    IF &NRSTR(&SYSDVAL) = &STR() THEN DO
      SET &NICK&COUNT = &STR()      /* Null nickname to prevent error
      GOTO NEXTNICK                 /* Go process next nickname
      END
    SET &NICK&COUNT = &STR(&SYSCAPS(&NRSTR(&SYSDVAL)))  /* New nickname
    GOTO NICKOPEN                   /* Try new nickname
    END
  OPENFILE NAMETEXT
  GETFILE NAMETEXT
  SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length for loop
  SET &FIRSTCOL = 1                 /* Default to column 1
  IF &RECFM = V AND &DATATYPE(&SUBSTR(1:8,&NRSTR(&NAMETEXT)        )) +
   = NUM THEN +
    SET &FIRSTCOL = 9               /* V, NUM - First data column is 9
  SET &ADJUST = 0                   /* Default to no adjustment
  IF &RECFM = F +
   AND &DATATYPE(&SUBSTR(&TEXTLEN-7:&TEXTLEN,&NRSTR(&NAMETEXT))) +
   = NUM THEN +
      SET &ADJUST = 8               /* F, NUM - Last data col is max-8
  GOTO NICKLOOP                     /* Enter nickname loop
  NICKOPEN: ERROR DO
    CLOSFILE NAMETEXT               /* Error 400 is normal end of file
    SET &NAMETEXT = CLOSED          /* Show NAMES.TEXT is allocated
    WRITE ===> WARNING: Nickname &NICK&COUNT not found in NAMES.TEXT .
    WRITENR ???? Enter another nickname, or just press enter to ignore:
    READ
    DO WHILE &NRSTR(&SYSDVAL) ^= &STR() AND &LENGTH(&NRSTR(&SYSDVAL)) +
     > 8
      WRITENR ???? Maximum length for nickname is 8 characters, reenter:
      READ
      END
    IF &NRSTR(&SYSDVAL) = &STR() THEN DO
      SET &NICK&COUNT = &STR()      /* Null nickname to prevent error
      GOTO NEXTNICK                 /* Go process next nickname
      END
    SET &NICK&COUNT = &STR(&SYSCAPS(&NRSTR(&SYSDVAL)))  /* New nickname
    GOTO NICKOPEN                   /* Try new nickname
    END
  OPENFILE NAMETEXT
/*--------------------------------------------------------------------*/
/*  Resolve nicknames into node.userid. Read :NICK, find :NODE :USER. */
/*--------------------------------------------------------------------*/
  GETNICK: GETFILE NAMETEXT
  SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length for loop
  NICKLOOP: SET &LASTCOL = &TEXTLEN - &ADJUST  /* Refigure in case REC V
  SET &COL = &FIRSTCOL + 5 + &NICKLEN  /* Start at col after :NICK.xxx
  IF &STR(&SYSCAPS(&SUBSTR(&FIRSTCOL:&COL+1,+
   &NRSTR(&NAMETEXT)                       ))) +
   ^= &STR(:NICK.&NICK&COUNT ) THEN +
    GOTO GETNICK
  SET &COL = &COL + 1               /* Skip blank after nickname
  SET &NODE = NOTFOUND              /* Start with no node
  SET &USERID = NOTFOUND            /* Start with no userid
  DO WHILE LOOP = LOOP              /* (endless) Loop looking for tags
    DO WHILE &SUBSTR(&COL,&NRSTR(&NAMETEXT) ) ^= &STR(:)
      IF &COL < &LASTCOL THEN +
        SET &COL = &COL + 1         /* Look for colon that begins tag
      ELSE DO
        GETFILE NAMETEXT            /* Continue scan with next record
        SET &TEXTLEN = &LENGTH(&NRSTR(&NAMETEXT))  /* Maximum length
        SET &LASTCOL = &TEXTLEN - &ADJUST  /* Refigure in case REC V
        SET &COL = &FIRSTCOL        /* Start at first col
        END
      END
    IF &STR(&SYSCAPS(&SUBSTR(&COL:&COL+5,&NRSTR(&NAMETEXT)     ))) +
     = :NICK. THEN +
      GOTO ENDNICK                  /* Start of new is end of this nick
    IF &STR(&SYSCAPS(&SUBSTR(&COL:&COL+5,&NRSTR(&NAMETEXT)     ))) +
     = :NODE. THEN DO
      SET &BEGINCOL = &COL + 6      /* Point past period in tag
      DO WHILE &SUBSTR(&BEGINCOL,&NRSTR(&NAMETEXT):) = &STR( )
        SET &BEGINCOL = &BEGINCOL + 1  /* Look for non-blank
        END
      SET &ENDCOL = &BEGINCOL + 1   /* Point to next character
      DO WHILE &ENDCOL < &LASTCOL AND &SUBSTR(&ENDCOL,+
       &NRSTR(&NAMETEXT) ) ^= &STR( )
        SET &ENDCOL = &ENDCOL + 1   /* Look for end of tag
        END
      SET &NODE = &SYSCAPS(&SUBSTR(&BEGINCOL:&ENDCOL,+
                  &NRSTR(&NAMETEXT) ))
      SET &COL = &ENDCOL            /* Reset loop to skip tag
      GOTO NEXTTAG                  /* Go look for another tag
      END
    IF &STR(&SYSCAPS(&SUBSTR(&COL:&COL+7,&NRSTR(&NAMETEXT)       ))) +
     = :USERID. THEN DO
      SET &BEGINCOL = &COL + 8      /* Point past period in tag
      DO WHILE &SUBSTR(&BEGINCOL,&NRSTR(&NAMETEXT):) = &STR( )
        SET &BEGINCOL = &BEGINCOL + 1  /* Look for non-blank
        END
      SET &ENDCOL = &BEGINCOL + 1   /* Point to next character
      DO WHILE &ENDCOL < &LASTCOL AND &SUBSTR(&ENDCOL,+
       &NRSTR(&NAMETEXT) ) ^= &STR( )
        SET &ENDCOL = &ENDCOL + 1   /* Look for end of tag
        END
      SET &USERID = &SYSCAPS(&SUBSTR(&BEGINCOL:&ENDCOL,+
                    &NRSTR(&NAMETEXT) ))
      SET &COL = &ENDCOL            /* Reset loop to skip tag
      GOTO NEXTTAG                  /* Go look for another tag
      END
/*--------------------------------------------------------------------*/
/*  Resolve nicknames into node.userid. Save :NAME, decode :LIST/:CC. */
/*--------------------------------------------------------------------*/
    IF &STR(&SYSCAPS(&SUBSTR(&COL:&COL+5,&NRSTR(&NAMETEXT)     ))) +
     = :NAME. THEN DO
      SET &BEGINCOL = &COL + 6      /* Point past period in tag
      DO WHILE &SUBSTR(&BEGINCOL,&NRSTR(&NAMETEXT):) = &STR( )
        SET &BEGINCOL = &BEGINCOL + 1  /* Look for non-blank
        END
      SET &ENDCOL = &BEGINCOL + 1   /* Point to next character
      DO WHILE &ENDCOL < &LASTCOL AND &SUBSTR(&ENDCOL,+
       &NRSTR(&NAMETEXT):) ^= &STR(:)
        SET &ENDCOL = &ENDCOL + 1   /* Look for end of tag
        END
      SET &NAME = &SUBSTR(&BEGINCOL:&ENDCOL-1,&NRSTR(&NAMETEXT) )
      SET &COL = &ENDCOL            /* Reset loop to skip tag
      GOTO NEXTTAG                  /* Go look for another tag
      END
    IF &STR(&SYSCAPS(&SUBSTR(&COL:&COL+5,&NRSTR(&NAMETEXT)     ))) +
     = :LIST. +
     OR &STR(&SYSCAPS(&SUBSTR(&COL:&COL+3,&NRSTR(&NAMETEXT)   ))) +
     = :CC. THEN DO
      IF &STR(&SYSCAPS(&SUBSTR(&COL:&COL+5,&NRSTR(&NAMETEXT)     ))) +
       = :LIST. THEN +
        SET &BEGINCOL = &COL + 6    /* Point past period in tag
      ELSE +
        SET &BEGINCOL = &COL + 4    /* Point past period in tag
      DO WHILE &SUBSTR(&BEGINCOL,&NRSTR(&NAMETEXT):) ^= &STR(:)
        DO WHILE &SUBSTR(&BEGINCOL,&NRSTR(&NAMETEXT):) = &STR( )
          SET &BEGINCOL = &BEGINCOL + 1  /* Look for non-blank
          END
        SET &ENDCOL = &BEGINCOL + 1 /* Point to next character
        NEWENT: DO WHILE &ENDCOL < &LASTCOL AND &SUBSTR(&ENDCOL,+
         &NRSTR(&NAMETEXT) ) ^= &STR( )
          SET &ENDCOL = &ENDCOL + 1 /* Look for end of list entry
          END
        SET &NICK&LIST = &STR(&SYSCAPS(&SUBSTR(&BEGINCOL:&ENDCOL,+
                              &NRSTR(&NAMETEXT) )))
        SET &LIST = &LIST + 1       /* Point to next LIST nickname slot
        SET &MAXNICK = &MAXNICK + 1 /* Increase maximum loop limit
        SET &BEGINCOL = &ENDCOL + 1 /* Point past current entry
        END
      SET &NICK&COUNT = &STR()      /* Eliminate name of list
      GOTO CLOSNICK
      END
    DO WHILE &SUBSTR(&COL+1,&NRSTR(&NAMETEXT):) ^= &STR(:)
      SET &COL = &COL + 1           /* Look for colon beginning next tag
      END
    NEXTTAG: END
  ENDNICK: IF &NODE = NOTFOUND OR &USERID = NOTFOUND THEN DO
    WRITE ===> WARNING: Nickname &NICK&COUNT not resolved +
               in NAMES.TEXT, ignored.
    SET &NICK&COUNT = &STR()        /* Null nickname to prevent error
    GOTO CLOSNICK  /* This is an error, but other nicknames may be ok.
    END
  SET &NICK&COUNT = &NODE..&USERID  /* Change nickname to node.userid
  SET &NICK&COUNT = &SUBSTR(1:17,&NICK&COUNT                 )   +
                    &SUBSTR(1:15,&NRSTR(&NAME)               )     +
                    &USERID        X
  CLOSNICK: CLOSFILE NAMETEXT
  SET &NAMETEXT = CLOSED            /* Show NAMES.TEXT is allocated
  NEXTNICK: END
ERROR OFF                           /* Turn off NAMETEXT error routine
/*--------------------------------------------------------------------*/
/*  Add "To: node.userid   name" lines.                               */
/*--------------------------------------------------------------------*/
IF &SUBSTR(1,&COPYLIST ) = Y THEN DO  /* COPYLIST processing requested
  SET &COUNT = 0
  DO WHILE &COUNT < &MAXNICK        /* Loop through all nicknames
    SET &COUNT = &COUNT + 1
    IF &STR(&NICK&COUNT) ^= &STR() THEN +
      SET &TOLINES = &TOLINES.&SUBSTR(1:8,NICK&COUNT    )  /* Build VPUT
    END
  SET &TYPECALL = ADDTOLINES        /* Set to add "To: xxx" lines
  ISPEXEC VPUT (TYPECALL TOLINES &TOLINES)  /* Save in ISPF shared pool
  ISPEXEC EDIT DATAID(&DATAID) MACRO(NOTEIMAC) PROFILE(NOTE)
  END
/*--------------------------------------------------------------------*/
/*  Mail the note. First send to non-PROFS destinations.              */
/*--------------------------------------------------------------------*/
SET &COUNT = 0
DO WHILE &COUNT < &MAXNICK          /* Loop through all nicknames
  SET &COUNT = &COUNT + 1
  IF &STR(&NICK&COUNT) ^= &STR() THEN +
    IF &SUBSTR(1:&LENGTH(&PROFNODE),&NICK&COUNT        ) +
     = &PROFNODE THEN +
      SET &PROFMAIL = YES           /* Must add PROFS head/trail later
    ELSE DO
      PRINTOFF * DD(PDFTEMP&SCREEN) DEST(&SUBSTR(1:17,+
          &NICK&COUNT                 )) CLASS(B) NOHEADING NOMSG
      END
  END
/*--------------------------------------------------------------------*/
/*  Add PROFS header/trailer, then mail to PROFS destinations.        */
/*--------------------------------------------------------------------*/
IF &PROFMAIL ^= YES THEN +
  GOTO LMFREE                       /* Go free ISPF resources
SET &TYPECALL = PROFSFORMAT         /* Set to add PROFS header/trailer
ISPEXEC VPUT (TYPECALL PROFNODE SUBJECT)  /* Save in ISPF shared pool
ISPEXEC EDIT DATAID(&DATAID) MACRO(NOTEIMAC) PROFILE(NOTE)
SET &COUNT = 0
DO WHILE &COUNT < &MAXNICK          /* Loop through all nicknames
  SET &COUNT = &COUNT + 1
  IF &SUBSTR(1:&LENGTH(&PROFNODE),&NICK&COUNT        ) +
   = &PROFNODE THEN +
    PRINTOFF * DD(PDFTEMP&SCREEN) DEST(&SUBSTR(1:17,+
        &NICK&COUNT                 )) CLASS(B) NOHEADING NOMSG
  END
/*--------------------------------------------------------------------*/
/*  Terminate ISPF environment and free temporary edit dataset.       */
/*--------------------------------------------------------------------*/
LMFREE: ISPEXEC LMFREE DATAID(&DATAID)
CONTROL NOMSG                       /* Prevent NOT FREED - NOT ALLOC msg
FREE DD(PDFTEMP&SCREEN NAMETEXT)
EXIT
