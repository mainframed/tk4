/* REXX */
/**************************************************/
/* VSAM LISTCAT FORMATTED IN ISPF                 */
/**************************************************/
IF SYSVAR(SYSISPF) = 'NOT ACTIVE' THEN DO
   SAY 'ISPF MUST BE ACTIVE TO USE THIS FUNCTION'
   EXIT
END
ARG DSNAME
IF DSNAME = ' ' THEN DO
   SAY "PLEASE ENTER VSAM DATASET NAME"
   PULL DSNAME
END
TDSN = STRIP(DSNAME,,'''')
STATUS=SYSDSN(''''TDSN'''')
IF STATUS ^= 'OK' THEN DO
    SAY TDSN "NOT FOUND"
    ZDLMSG  = 'NOT CATALOGED'
    VARLIST = 'ZDLMSG'
   "ISPEXEC VPUT (&VARLIST) SHARED"
    EXIT
END
X=OUTTRAP('CLS.')
"LISTC EN('"TDSN"') ALL"
X=OUTTRAP('OFF')
IF POS('NONVSAM',CLS.1) ^= 0 THEN DO
    SAY TDSN "IS NOT A VSAM DATASET"
    ZDLMSG  = 'ERROR- NONVSAM'
    VARLIST = 'ZDLMSG'
   "ISPEXEC VPUT (&VARLIST) SHARED"
    EXIT
END
IF POS('INDEX',CLS.1) ^= 0 THEN INDEX = 'Y'
CDATE = SUBSTR(CLS.4,53,8)
EDATE = SUBSTR(CLS.5,53,8)
DO I=8 TO CLS.0
IF POS('ATTRIBUTE',CLS.I) = 6 THEN DO
   I = I + 1
   IF POS('NOUPGRADE',CLS.I) = 8 × POS('UPGRADE',CLS.I) =8 THEN DO
       PARSE VAR CLS.I OPTF
       ITERATE
   END
   KLEN = STRIP(SUBSTR(CLS.I,25,8),,'-')
   ALEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CISZ = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
   RKP  = STRIP(SUBSTR(CLS.I,25,8),,'-')
   MLEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CICA = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
IF POS('RECORDS/CI',CLS.I) ^=0 THEN I = I + 1
IF POS('AXRKP',CLS.I) ^=0 THEN I = I + 1
TYPE = 'INDEXED   '
IF POS('NONINDEX',CLS.I) ^=0 THEN
   TYPE = 'NONINDEX  '
IF POS('NUMBERED',CLS.I) ^=0 THEN
   TYPE = 'NUMBERED  '
IF POS(' IMBED',CLS.I) ^=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPT1 OPT2 OPT3 OPT4 OPT5 OPT6 OPT7 OPT8
   I = I + 1
IF POS('NONINDEX',CLS.I) ^=0 THEN
   TYPE = 'NONINDEX  '
IF POS('NUMBERED',CLS.I) ^=0 THEN
   TYPE = 'NUMBERED  '
IF POS(' IMBED',CLS.I) ^=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPTA OPTB OPTC OPTD OPTE
   IF OPTF ^= 'OPTF' THEN OPTE = OPTF
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('STATISTIC',CLS.I) = 6 THEN DO
   I = I + 1
   RTOT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CISP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   I = I + 1
   RDEL = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CASP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,87,3),,'-')
   I = I + 1
   RINT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CIFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RUPD = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CAFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RRET = STRIP(SUBSTR(CLS.I,21,11),,'-')
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('ALLOCATION',CLS.I) = 6 THEN DO
   I = I + 1
   ATYP = 'cylinders:'
   IF SUBSTR(CLS.I,29,3) = 'ACK' THEN
   ATYP = 'tracks:'
   IF SUBSTR(CLS.I,29,3) = 'ORD' THEN
   ATYP = 'records:'
   BTYP = ATYP
   ARBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SPRI = STRIP(SUBSTR(CLS.I,24,8),,'-')
   URBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SSEC = STRIP(SUBSTR(CLS.I,24,8),,'-')
   LEAVE
END
END
A = 1
DO I=I TO CLS.0
IF POS('INDEX',CLS.I) = 4 THEN LEAVE
IF POS('VOLSER',CLS.I) = 8 THEN DO
   VSER.A = STRIP(SUBSTR(CLS.I,26,6),,'-')
   IF SEQ = 'Y' & A=1 THEN DO
   ARBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,116,3),,'-')
   END
   A = A +1
IF A = 2 THEN DO
   I = I + 1
   IF SEQ = 'Y' THEN DO
   URBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
   LEAVE
   END
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
END
END
END
VOL1 = VSER.1
IF VSER.2 ^= 'VSER.2' THEN VOL2 = VSER.2
IF VSER.3 ^= 'VSER.3' THEN VOL3 = VSER.3
ATRK = ARBA/CISZ/CICA*TRKS
UTRK = URBA/CISZ/CICA*TRKS
UPER = UTRK/ATRK*100
ATRK = FORMAT(ATRK,,0)
UTRK = FORMAT(UTRK,,0)
UPER = FORMAT(UPER,,0)
ZDLMSG  = 'INFO - VI     '
VARLIST = 'ZDLMSG'
"ISPEXEC VPUT (&VARLIST) SHARED"
"ISPEXEC DISPLAY PANEL(VI#1) COMMAND(STACKP)"
