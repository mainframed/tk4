//WSER07J  JOB ...
//*-----------------------------------------------------------------*
//*
//*  ASM1 -- ASSEMBLES DVOL (IFOX00 CAN BE USED INSTEAD OF IEV90)
//*  ASM2 -- ASSEMBLES IXTOFMT5 (IFOX00 CAN BE USED INSTEAD OF IEV90)
//*  LINK -- LINKS DVOL INTO 'SYS1.CMDLIB(DVOL)'
//*  COPY -- COPIES DVOL HELP TO 'SYS2.HELP(DVOL)'
//*          USING IEBGENER AND SHARED ALLOCATION
//*
//*   THIS SOURCE CODE IS OPERATING SYSTEM DEPENDENT (MVT THROUGH ESA).
//*   SPECIFY THE DESIRED OPERATING SYSTEM AS THE VALUE FOR &OPSYSTM.
//*
//*   ALSO, THE CODE GENERATED DEPENDS ON WHETHER 3390M9 (FAT DASD)
//*   DEVICES ARE SUPPORTED.  SEE THE VALUE OF &MODEL9 SELECTED BELOW.
//*
//ASM1  EXEC  PGM=IEV90,REGION=2048K,
//             PARM=(DECK,NOOBJECT,NORLD,TERM,NOSTMT,
//             'XREF(SHORT),BUFSIZE(MAX)')
//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR,DCB=BLKSIZE=23440
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(,PASS),DSN=&&X,
//         DCB=BLKSIZE=3120
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  *
*ORIGINAL SOURCE -- CBT TAPE FILE 058, VERSION 227
*ORIGINAL SOURCE -- CBT TAPE FILE 058, VERSION 227
*ORIGINAL SOURCE -- CBT TAPE FILE 058, VERSION 227
*                                         MVT
*                                         SVS (OS/VS2 RELEASE 1)
*                                         MVS (OS/VS2 RELEASE 3)
         TITLE 'DISCLAIMER - INSTALLATION INSTRUCTIONS'
***********************************************************************
*                                                                     *
*     THIS PROGRAM, DEVELOPED AT FPL OR SUPPLIED BY OTHER USERS       *
*     ON A NON-RESTRICTIVE BASIS, IS OF GENERAL INTEREST              *
*     SUBMITTED FOR UNRESTRICTED DISTRIBUTION.  THIS PROGRAM          *
*     HAS MET A BASIC SET OF PROGRAMMING AND DOCUMENTATION            *
*     STANDARDS, BUT MAY NOT HAVE BEEN PROGRAM TESTED IN ANY          *
*     FORMAL FASHION BY FPL.  THE USER IS EXPECTED TO MAKE THE        *
*     FINAL EVALUATION AS TO THE USEFULLNESS IN HIS OWN               *
*     ENVIRONMENT.                                                    *
*                                                                     *
*     FPL MAKES NO WARRANTY, EXPRESSED OR IMPLIED, INCLUDING, BUT     *
*     NOT LIMITED TO, THE IMPLIED WARRANTIES OR MERCHANTABILITY AND   *
*     FITNESS FOR A PARTICULAR PUTPOSE AS TO THE DOCUMENTATION,       *
*     FUNCTION, OR PERFORMANCE OF THESE PROGRAMS.                     *
*                                                                     *
*     ACCEPTANCE AND USE OF THIS PROGRAM CONSTITUTES A RELEASE        *
*     FROM LIABILITY OF FPL FOR ANY PROBLEMS USE OF THE PROGRAM       *
*     MAY CAUSE AT THE USER'S INSTALLATION.                           *
*                                                                     *
*     USERS ARE INVITED TO SUBMIT SUGGESTIONS OR ERROR DOCUMENTATION  *
*     TO FPL, HOWEVER, NO PROMISE CAN BE MADE THAT SUCH SUGGESTIONS   *
*     WILL BE IMPLEMENTED OR ERRORS CORRECTED.  SUBMIT COMMENTS TO:   *
*              COORDINATOR OF TECHNICAL SYSTEMS                       *
*              SYSTEMS & PROGRAMMING DEPARTMENT                       *
*              FLORIDA POWER & LIGHT COMPANY - GENERAL OFFICE         *
*              P. O. BOX  529100                                      *
*              MIAMI, FLORIDA  33152                                  *
*                                                                     *
*     THIS PROGRAM IS MADE AVAILABLE BY FPL WITHOUT CHARGE OR         *
*     CONSIDERATION.  RECIPIENTS ARE FREE TO MAKE THIS PROGRAM        *
*     AVAILABLE TO OTHERS IN LIKE MANNER.  IT MAY NOT BE SOLD.        *
*                                                                     *
* INSTALLATION INSTRUCTIONS                                           *
*                                                                     *
*     THIS MODULE MAY BE ASSEMBLED AND LINKED INTO A LIBRARY IN THE   *
*     LINK LIST OR SPECIFIED AS A STEPLIB IN THE TSO LOGON PROCEDURE. *
*     THE COMMAND MAY BE INVOKED FROM TSO BY ENTERING THE NAME OR AN  *
*     ALIAS OF THE MODULE.                                            *
*                                                                     *
*     BEFORE ASSEMBLING THE MODULE, INSURE THAT ALL THE REQUIRED      *
*     MACROS ARE AVAILABLE.  SOME MACROS FROM SYS1.AMODGEN MAY BE     *
*     REQUIRED.  THE $ENTER MACRO USES SYSTEM VARIABLE SYMBOLS        *
*     &SYSDATE AND &SYSTIME.  THESE SYMBOLS ARE NOT SUPPORTED BY ALL  *
*     ASSEMBLERS.  IF THE ASSEMBLER TO BE USED DOES NOT SUPPORT THESE *
*     SYMBOLS, THE $ENTER MACRO MUST BE MODIFIED.                     *
*                                                                     *
*     THE SOURCE PROVIDED IS OPERATING SYSTEM DEPENDENT.  SPECIFY THE *
*     DESIRED OPERATING SYSTEM AS THE VALUE FOR &OPSYSTM.             *
*                                                                     *
*     ALSO, THE CODE GENERATED DEPENDS ON WHETHER 3390M9 (FAT DASD)   *
*     DEVICES ARE SUPPORTED.  SEE THE VALUE OF &MODEL9 SELECTED BELOW.*
*                                                                     *
*     THE MODULE IS NOT REENTRANT ANYMORE                             *
*                                                                     *
***********************************************************************
DVOL     TITLE 'DISPLAY VTOC CHARACTERISTICS'
***********************************************************************
*                                                                     *
* DVOL                                                                *
*                                                                     *
* FUNCTION         THE DVOL COMMAND IS USED TO DISPLAY THE AMOUNT OF  *
*                  OF FREE SPACE ON A DIRECT ACCESS DEVICE.           *
*                                                                     *
* DESCRIPTION      DVOL WILL READ THE FORMAT 4 AND FORMAT 5 DSCB'S    *
*                  FROM THE VTOC OF A DIRECT ACCESS VOLUME AND        *
*                  DISPLAY:                                           *
*                   1.  VOLUME SERIAL                                 *
*                   2.  UNIT ADDRESS                                  *
*                   3.  MOUNT STATUS                                  *
*                   4.  USE STATUS                                    *
*                   5.  NUMBER OF BLANK DSCB'S IN THE VTOC            *
*                   6.  CONDITION OF THE VTOC INDICATORS BYTE         *
*                   7.  VSAM DATA FIELDS                              *
*                   8.  TOTAL FREE SPACE IN TRACKS                    *
*                   9.  NUMBER OF FREE EXTENTS                        *
*                  10.  NUMBER OF FREE CYLINDERS                      *
*                  11.  SIZE OF LARGEST EXTENTS (UP TO 5) IN          *
*                       CYLINDERS + TRACKS                            *
*                  12.  SIZE OF LARGEST EXTENTS (UP TO 5) IN TRACKS   *
*                                                                     *
*                  THE RETURN CODE IS SET TO THE TOTAL NUMBER OF      *
*                  TRACKS IN THE LARGEST EXTENTS (UP TO 5) UP TO A    *
*                  MAXIMUM OF 4095.  IF THE NUMBER OF FREE TRACKS     *
*                  EXCEEDS 4095, THE RETURN CODE WILL BE SET TO 4095. *
*                  IF MORE THAN ONE VOLUME IS DISPLAYED, THE RETURN   *
*                  CODE WILL BE REFER TO THE SPACE ON THE LAST        *
*                  VOLUME.  IF AN ERROR CONDITION EXISTS ON THE       *
*                  VOLUME, THE RETURN CODE WILL BE SET TO 0.          *
*                                                                     *
*                  NOTE - IF AN ERROR CONDITION EXISTS ON THE VOLUME, *
*                         THE RETURN CODE WILL BE SET TO 0.           *
*                                                                     *
* ATTRIBUTES       DVOL IS RE-ENTRANT.                                *
*                                                                     *
* SYNTAX           DVOL  (VOLUME-LIST)/*                              *
*                        SHORT/LONG                                   *
*                        HEADER/NOHEADER                              *
*                        PRINT/NOPRINT                                *
*                        SERONLY                                      *
*                                                                     *
*                  REQUIRED - NONE                                    *
*                  DEFAULTS - *  SHORT  HEADER  PRINT                 *
*                                                                     *
*                                                                     *
* SAMPLE OUTPUT FOR: DVOL SYSBK                                       *
*SERIAL  --UNIT--   ATTRIBUTES VSAM AVAIL -----TOTALS---- LARGEST-EXTEN
*       ADDR TYPE   MOUNT/USE      DSCBS TRACKS  EXT  CYL  CYL+TR TRACK
*SYSBK1 0341 3380E  RESDNT/PRIV      154  13200   39  864  861+11 12926
*SYSBK2 155E 3390M3 RESDNT/PRIV     3746  49980    1 3332 3332+ 0 49980
*                                                                     *
*                                                                     *
* SAMPLE OUTPUT FOR: DVOL STR849 LONG                                 *
*VOLUME SERIAL = STR849     UNIT = 1538    TYPE = 3390M3              *
*STATUS: RESIDENT   STORAGE  ALLOCATED    ONLINE                      *
*VTOC CONTAINS 2343 BLANK DSCB'S                                      *
*INDEXED VTOC CONTAINS   19 FREE VIR'S                                *
*FREE SPACE IS 11541 TRACKS IN  299 EXTENTS INCLUDING  658 FULL CYLINDE
*LARGEST EXTENTS ARE: /CYL+TR/   43+ 0/   39+ 0/   32+ 0/  19+ 5/ 16+ 0
*                     /TRACKS/     645/     585/     480/    290/   240
*                                                                     *
*                                                                     *
* OPERANDS         VOLUME-LIST                                        *
*                       IS A LIST OF ONE OR MOVE VOLUME SERIALS OF    *
*                       MOUNTED DIRECT ACCESS VOLUMES.                *
*                                                                     *
*                       IF NO VOLUME IS ENTERED, OR IF AN * IS        *
*                       SPECIFIED, THE INFORMATION IS DISPLAYED       *
*                       FOR EACH DIRECT ACCESS VOLUME ON THE          *
*                       SYSTEM.                                       *
*                                                                     *
*                  SHORT/LONG                                         *
*                       SPECIFIES THE OUTPUT FORMAT.                  *
*                                                                     *
*                       SHORT - (DEFAULT) SPECIFIES THAT A SINGLE     *
*                               LINE OF OUTPUT IS TO BE DISPLAYED     *
*                               FOR EACH VOLUME.                      *
*                                                                     *
*                               DATA WHICH IS NOT PRODUCED IF SHORT   *
*                               IS USED -                             *
*                                    ONLINE/OFFLINE STATUS            *
*                                    UNLOAD PENDING                   *
*                                    VTOC INDICATORS                  *
*                                    VSAM TIMESTAMPS                  *
*                                    SIZE OF SECOND TO FIFTH EXTENTS  *
*                               THIS DATA IS PRODUCED ONLY WITH THE   *
*                               LONG OUTPUT FORMAT.                   *
*                                                                     *
*                       LONG  - SPECIFIES THAT MULTIPLE LINES OF      *
*                               DATA ARE PRODUCED FOR EACH VOLUME.    *
*                                                                     *
*                  HEADER/NOHEADER                                    *
*                       SPECIFIES WHETHER OR NOT THE HEADER LINES     *
*                       ARE TO BE DISPLAYED.  SINCE HEADERS ARE       *
*                       PRODUCED FOR THE SHORT FORM OF OUTPUT ONLY,   *
*                       THIS OPTION IS MEANINGLESS WHEN LONG IS       *
*                       SPECIFIED.                                    *
*                                                                     *
*                  PRINT/NOPRINT                                      *
*                       NOPRINT MAY BE USED TO SUPPRESS ALL OUTPUT    *
*                       (INCLUDING ERROR MESSAGES).  THIS OPTION      *
*                       MAY BE USED WHEN ONLY THE RETURN CODE IS      *
*                       DESIRED.                                      *
*                                                                     *
*                  SERONLY                                            *
*                       SPECIFIES THAT ONLY A LIST OF MOUNTED         *
*                       VOLUME SERIALS WILL BE DISPLAYED.             *
*                       SERONLY IS IGNORED IF A VOLUME SERIAL IS      *
*                       SPECIFIED.                                    *
*                                                                     *
* SUBCOMMANDS      DVOL HAS NO SUBCOMMANDS.                           *
*                                                                     *
* EXAMPLE          DISPLAY FREE SPACE ON VOLUME WORK01.               *
*                                                                     *
*                  DVOL WORK01                                        *
*                                                                     *
* FPL MACROS USED BY THIS MODULE                                      *
*                                                                     *
*         $ENTER              ENTRY CODING                            *
*         $RTRN               EXIT CODING                             *
*         #TSOBLKS            CONSTRUCT TSO CONTROL BLOCKS            *
*         #TSOMSG             CONSTRUCT MESSAGES IN PUTLINE FORMAT    *
*         #VTCFMT4            MAP FORMAT 4 DSCB                       *
*         #VTCFMT5            MAP FORMAT 5 DSCB                       *
*                                                                     *
* IBM MACROS USED BY THIS MODULE                                      *
*                                                                     *
*         LINK                INVOKE A SERVICE ROUTINE                *
*         OBTAIN              READ A DSCB FROM THE VTOC               *
*         CAMLST              CONSTRUCT OBTAIN PARAMETER LIST         *
*         IKJIOPL             MAP INPUT/OUTPUT PARAMETER LIST         *
*         PUTLINE             OUTPUT A LINE TO THE TERMINAL           *
*         IKJCPPL             MAP COMMAND PROCESSOR PARAMETER LIST    *
*         IKJPPL              MAP PARSE PARAMETER LIST                *
*         IKJRLSA             RELEASE STORAGE OBTAINED BY PARSE       *
*         IKJPARM             BEGIN PARSE PARAMETER CONTROL LIST      *
*         IKJIDENT            DESCRIBE A POSITIONAL PARAMETER         *
*         IKJENDP             END PARSE PARAMETER LIST                *
*         IEFUCBOB     *      MAP UNIT CONTROL BLOCK                  *
*                                                                     *
*         MACROS DESIGNATED BY * MUST BE OBTAINED FROM THE            *
*         SYS1.AMODGEN DISTRIBUTION LIBRARY.                          *
*                                                                     *
* REGISTER ASSIGNMENTS                                                *
*                                                                     *
*          0 - STANDARD LINKAGE                                       *
*          1 - STANDARD LINKAGE                                       *
*          2 - WORK                                                   *
*          3 - WORK                                                   *
*          4 - WORK                                                   *
*          5 - WORK                                                   *
*          6 - WORK                                                   *
*          7 - WORK                                                   *
*          8 - PDE POINTER                                            *
*          9 - PPL/PDL BASE REGISTER                                  *
*         10 - IOPL BASE REGISTER                                     *
*         11 - CPPL BASE REGISTER                                     *
*         12 - PROGRAM BASE REGISTER                                  *
*         13 - SAVE AREA ADDRESS AND WORK AREA DSECT BASE REGISTER    *
*         14 - STANDARD LINKAGE                                       *
*         15 - STANDARD LINKAGE                                       *
*                                                                     *
* MODULE ATTRIBUTES                                                   *
*                                                                     *
*         ENABLED, NON-PRIVELEGED                                     *
*                                                                     *
*                                                 9/76 GORDON P. WEST *
***********************************************************************
         TITLE 'UPDATE LOG'
***********************************************************************
*                                                                     *
* 01/20/77  ADD SHORT FORM OF OUTPUT AND MAKE SHORT FORM DEFAULT      *
*           ADD SHORT/LONG, HEADER/NOHEADER, AND PRINT/NOPRINT KEYWDS *
*           ADD * SUPPORT FOR VOLUME LIST AND MAKE IT DEFAULT         *
*           ADD TEST FOR MOUNT PENDING                                *
*                                                                     *
* 07/15/77  ADD TESTS FOR NOT READY, OFFLINE PENDING                  *
*           ADD SERONLY OPERAND                                       *
*                                                                     *
* 01/17/83  ADD PARTIAL VOLUME SERIAL NAME CHECKING               ABL *
*           ADD U... CHECK FOR POSSIBLE PARTIAL UCB ADDRESS       ABL *
*           ADD HEADERS BETWEEN EACH VOLUME PARAMETER'S OUTPUT    ABL *
*           ADD FPL MACROS INLINE                                 ABL *
*           ADD SUPPORT FOR INDEXED VTOC'S                        ABL *
*           NOTE: THE INDEXED VTOC SUPPORT IS VIA UCLA'S          ABL *
*                 IXTOFMT5 ROUTINE PROGRAMMED BY CHRIS THOMAS     ABL *
*                 AND MARKED CST IN COLUMNS 67-69                 ABL *
*                                                                     *
*                                                                     *
* 01/04/85  USE UCB SCAN SERVICES FROM MVS 1.1.3 OR MVS/XA        ABL *
*           ADD DEVICE TYPE IN THE OUTPUT LINE                    ABL *
*                                                                     *
* 02/11/87  ADD HARDCOPY SUPPORT AS PROGRAMMED BY MICHAEL LAY     ABL *
*           WITH THE K-MART INSURANCE GROUP IN DALLAS             ABL *
*                                                                     *
* 02/11/87  ADD AN PDS INTERNAL INTERFACE USING PDSCALL           ABL *
*                                                                     *
* 02/13/87  ADD AN DCB EXIT SO DCB INFORMATION IS NOT OVERRIDDEN  ABL *
*           BY THE HARDCOPY DCB.                                  ABL *
*                                                                     *
* 03/21/90  ADDED SUPPORT FOR 3380-K AND 3390 DEVICES BY ALLOWING ABL *
*           FOUR CHARACTERS FOR ANY CYLINDER OUTPUT FIELD.        ABL *
*                                                                     *
* 05/25/94  ADDED SUPPORT FOR 3390M3 AND ABOVE DEVICES BY         ABL *
*           EXPANDING TOTAL FIELDS BY ONE ADDITIONAL CHARACTER.   ABL *
*           NOTE THAT THIS DIGIT NORMALLY PRINTS AS BLANKS.       ABL *
*                                                                     *
* 05/25/94  ADDED SUPPORT FOR 3390M9 DISK DEVICES BY MODIFYING    ABL *
*           THE IXTOFMT5 ROUTINE TO RETURN FORMAT 7 DSCB RECORDS  ABL *
*           (INSTEAD OF FORMAT 5) IF &MODEL9 IS 'YES'.            ABL *
*                                                                     *
* 05/25/94  ADDED CHANGES TO INDICATE THE MODEL NUMBER FOR        ABL *
*           SEVERAL 3380 AND 3390 DEVICES.                        ABL *
*                                                                     *
* 05/25/94  CHANGED THE LONG OUTPUT FORMAT TO SKIP THE VSAM       ABL *
*           OUTPUT LINE IF VSAM OWNERSHIP IS OFF FOR A VOLUME.    ABL *
*                                                                     *
* 09/28/95  MODIFIED BY A. BRUCE LELAND AT SERENA INTERNATIONAL ABL-410
*           TO USE THE UCBSCAN MACRO TO LOCATE UCB'S ON SYSTEMS ABL-410
*           AFTER MVS/ESA 4.1.0.                                ABL-410
*                                                                     *
* 07/31/97  Modified by A. Bruce Leland at SERENA International   ABL97
*           to add four character UCB support.  Note that the     ABL97
*           short form output format was changed slightly due     ABL97
*           to this change.  ADR for UCB became ADDR and VSAM     ABL97
*           OFF/ON  was shortened by one column to OF/ON          ABL97
*                                                                     *
* 09/02/97  Modified by A. Bruce Leland at SERENA International   ABL97
*           to correct problems on systems with only 3 digit      ABL97
*           UCB addresses as well as 4 digit UCB addresses.       ABL97
*                                                                     *
***********************************************************************
***********************************************************************
***
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
*                                                                     *
* PLEASE REPORT ANY PROBLEMS, ENHANCEMENTS, SUGGESTIONS OR COMMENTS   *
* CONCERNING THIS PROGRAM TO:                                         *
*                                                                     *
*     A. Bruce Leland           or         A. Bruce Leland            *
*     SERENA International                 1247 Wavecrest             *
*     500 Airport Blvd. 2nd Floor          Bandon, Oregon  97411      *
*     Burlingame, CA  94010                                           *
*     (415) 696-1800                       HOME: (541) 347-8102       *
*     Internet: Bruce_Leland@serena.com                               *
*                                                                     *
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
         TITLE 'FPL MACROS'
         MACRO
&NAME    $ENTER &BASE=R3,&CSECT=YES,&SAVE=,&RENT=,&SP=1,&SPM=YES,      +
               &CHAIN=YES
         MNOTE *,'       $ENTER    VERSION 003 05/07/75  04/29/76  GPW'
.**********************************************************************
.*                                                                    *
.* $ENTER                                                             *
.*                                                                    *
.* FUNCTION       PROVIDE ENTRY CODING TO ESTABLISH BASE REGISTERS,   *
.*                ALLOCATE AND CHAIN SAVE AREAS, SET PROGRAM MASK,    *
.*                AND OBTAIN WORK AREA FOR RE-ENTRANT PROGRAMS.       *
.*                                                                    *
.* DESCRIPTION    THE MACRO WILL GENERATE CODE TO ESTABLISH ONE OR    *
.*                MORE BASE REGISTERS.  IT IS ASSUMED THAT STANDARD   *
.*                IBM LINKAGE CONVENTIONS HAVE BEEN FOLLOWED AND THAT *
.*                REGISTER 15 CONTAINS THE ADDRESS OF THE ENTRY       *
.*                POINT.  USER SPECIFIED OR DEFAULT BASE REGISTERS    *
.*                ARE INITIALIZED.  THE FIRST BASE REGISTER CONTAINS  *
.*                THE ADDRESS OF THE ENTRY POINT, AND SUCCESSIVE BASE *
.*                REGISTER ADDRESSES ARE INCREMENTED BY 4096.  THE    *
.*                DEFAULT BASE REGISTER IS REGISTER 3.  IF REGISTER 2 *
.*                IS SPECIFIED AS A BASE REGISTER, IT WILL BE         *
.*                ALLOWED, BUT A WARNING MESSAGE WILL BE DISPLAYED.   *
.*                REGISTERS 0, 1, 13, 14, AND 15 MAY NOT BE           *
.*                SPECIFIED AS BASE REGISTERS.  ALL REGISTER          *
.*                SPECIFICATIONS MUST BE MADE AS MNEMONICS (EG,       *
.*                REGISTER 3 IS R3).                                  *
.*                                                                    *
.*                IDENTIFICATION CONSTANTS SPECIFYING THE DATE AND    *
.*                TIME OF ASSEMBLY ARE CONSTRUCTED IN THE ENTRY       *
.*                CODING.  THESE VALUES ARE DISPLAYED IN DUMPS AND    *
.*                MAY BE USED TO VERIFY THAT THE PROPER VERSION OF    *
.*                THE ROUTINE HAS BEEN USED.                          *
.*                                                                    *
.*                ALL BITS OF THE PROGRAM MASK ARE SET.  IBM          *
.*                TRANSFERS CONTROL TO THE USER PROGRAM WITH ALL      *
.*                PROGRAM MASK BITS OFF.  IF SPM=NO IS SPECIFIED,     *
.*                THE PROGRAM MASK WILL BE UNALTERED.                 *
.*                                                                    *
.*                THE USER MAY SPECIFY THE NAME OF A WORK AREA OF 18  *
.*                FULLWORDS TO BE USED AS A SAVE AREA.  IF A USER     *
.*                AREA IS NOT SUPPLIED, AN 18 FULLWORD AREA IS        *
.*                ALLOCATED AND INITIALIZED TO ZERO.  THE ADDRESS OF  *
.*                THE SAVE AREA IS LOADED INTO REGISTER 13 AND IT IS  *
.*                CHAINED TO THE SAVE AREA OF THE CALLING PROGRAM.    *
.*                                                                    *
.*                THE USER MAY SPECIFY THAT THE MACRO IS NOT TO       *
.*                OBTAIN A SAVE AREA OR CHAIN SAVE AREAS BY           *
.*                SPECIFYING CHAIN=NO.  THE USER IS THEN              *
.*                RESPONSIBLE FOR SAVE AREA CHAINING.                 *
.*                                                                    *
.*                REGISTER EQUIVALENCES (R0  EQU  0, ETC.) ARE        *
.*                GENERATED FOR THE FIRST USAGE OF THE MACRO.         *
.*                                                                    *
.*                A CSECT DEFINITION WILL BE GENERATED UNLESS         *
.*                CSECT=NO IS SPECIFIED.  IF CSECT=NO IS SPECIFIED,   *
.*                AN ENTRY STATEMENT WILL BE GENERATED.               *
.*                                                                    *
.*                RE-ENTRANT CODING IS SUPPORTED.  FOR RE-ENTRANT     *
.*                CODING, THE USER MUST SPECIFY THE LENGTH OF A       *
.*                WORK AREA.  THE WORK AREA IS OBTAINED FROM SUBPOOL  *
.*                1 UNLESS OTHERWISE SPECIFIED.  THE FIRST 18 WORDS   *
.*                OF THE WORK AREA ARE USED FOR THE SAVE AREA.        *
.*                                                                    *
.* SYNTAX         NAME     $ENTER    BASE=(REG1,...,REGN)             *
.*                                   CSECT=NO                         *
.*                                   SAVE=SYM                         *
.*                                   RENT=LEN                         *
.*                                   SP=NUMBER                        *
.*                                   SPM=NO                           *
.*                                   CHAIN=NO                         *
.*                                                                    *
.*                NAME   - A SYMBOLIC TAG ASSIGNED TO THE FIRST       *
.*                         INSTRUCTION GENERATED.                     *
.*                                                                    *
.*                BASE   - THE REGISTERS TO BE USED AS BASE           *
.*                         REGISTERS.  THE DEFAULT IS R3.  THE FIRST  *
.*                         REGISTER SPECIFIED WILL CONTAIN THE        *
.*                         ADDRESS OF THE ENTRY POINT, AND SUCCEEDING *
.*                         BASE VALUES WILL BE INCREMENTED BY 4096.   *
.*                         REGISTERS 0, 1, 13, 14, AND 15 MAY NOT BE  *
.*                         SPECIFIED AS BASE REGISTERS.  REGISTERS    *
.*                         MUST BE SPECIFIED IN MNEMONIC FORM (EG,    *
.*                         R3 FOR REGISTER 3).                        *
.*                                                                    *
.*                CSECT  - CSECT=NO SPECIFIES THAT CODING FOR AN      *
.*                         ENTRY POINT RATHER THAN A CSECT IS TO BE   *
.*                         GENERATED.                                 *
.*                                                                    *
.*                SAVE   - SPECIFIES THE NAME OF A USER DEFINED 18    *
.*                         WORD SAVE AREA TO BE USED INSTEAD OF       *
.*                         GENERATING AN IN-LINE SAVE AREA.  IF RENT  *
.*                         IS SPECIFIED, SAVE MUST SPECIFY THE NAME   *
.*                         ASSIGNED TO THE FIRST 18 WORDS IN THE      *
.*                         WORK AREA.                                 *
.*                                                                    *
.*                RENT   - SPECIFIES THAT RE-ENTRANT CODE IS TO BE    *
.*                         GENERATED.  LEN IS THE LENGTH OF A WORK    *
.*                         AREA TO BE OBTAINED BY A GETMAIN.          *
.*                                                                    *
.*                SP     - SPECIFIES THE SUBPOOL FROM WHICH THE WORK  *
.*                         AREA FOR RE-ENTRANT CODING IS TO BE        *
.*                         OBTAINED.  DEFAULT IS SUBPOOL 1.           *
.*                                                                    *
.*                SPM    - SPM=NO SPECIFIES THAT THE PROGRAM MASK IS  *
.*                         NO TO BE ALTERED.                          *
.*                                                                    *
.*                CHAIN  - CHAIN=NO SPECIFIES THAT SAVE AREA ARE NOT  *
.*                         TO BE CHAINED.  THIS OPTION IS INTENDED    *
.*                         FOR USE ONLY BY HIGH ACTIVITY RE-ENTRANT   *
.*                         MODULES WHERE THE OVERHEAD OF              *
.*                         GETMAIN/FREEMAIN IS TO BE AVOIDED.         *
.*                                                                    *
.* ERRORS         THE NAME FIELD MUST BE SPECIFIED.  IF IT IS NOT, A  *
.*                GENERATED NAME, $ENTNNNN WILL BE GENERATED AND A    *
.*                SEVERITY 8 MNOTE IS GENERATED.  IF NO CODE WERE     *
.*                GENERATED AND NO BASE REGISTER DEFINED, THE ERROR   *
.*                LISTING WOULD BE LARGE.  TO REDUCE THE SIZE OF THE  *
.*                ERROR LISTING AND ALLOW OTHER ERRORS TO BE FOUND,   *
.*                THE MACRO WILL EXPAND.                              *
.*                                                                    *
.*                                                                    *
.* EXAMPLE        EX1      $ENTER                                     *
.*                                                                    *
.*                EX2      $ENTER CSECT=NO                            *
.*                                                                    *
.*                EX3      $ENTER BASE=(R3,R4,R5)                     *
.*                                                                    *
.*                EX4      $ENTER BASE=R12,RENT=DSECTLEN,SAVE=SAVEAREA*
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                NAME     TYPE  USE                                  *
.*                                                                    *
.*                &ENCOUNT   A   SET TO 1 AFTER REGISTER EQUIVALENCES *
.*                               GENERATED TO PREVENT EQUIVALENCES    *
.*                               FROM BEING GENERATED FOR LATER USES. *
.*                                                                    *
.* MACROS USED                                                        *
.*                                                                    *
.*                GETMAIN                                             *
.*                                                                    *
.* UPDATE SUMMARY                                                     *
.*                                                                    *
.*      VERSION   DATE     CHANGE                                     *
.*                                                                    *
.*        003   04/29/76   CHAIN KEYWORD ADDED                        *
.*                                                                    *
.*                                                                    *
.**********************************************************************
.*
         GBLA  &ENCOUNT
.*
         LCLA  &PARMNO,&REGNO
         LCLC  &REG,&CHAR,&LAST,&USING,&TEMP,&ID,&FIRST
.*
&ID      SETC  '&NAME'
         AIF   ('&NAME' NE '').CKCSECT
&ID      SETC  '$ENT&SYSNDX'
         MNOTE 8,'NAME OPERAND REQUIRED, NOT SPECIFIED. &ID WILL BE USE+
               D.'
.CKCSECT AIF   ('&CSECT' NE 'NO').CSECT
         AIF   ('&SYSECT' NE '').CKEQU
         MNOTE 8,'ENTRY POINT SPECIFIED, BUT NO CSECT DEFINED'
.CSECT   ANOP
         SPACE
&ID      CSECT
.CKEQU   AIF   (&ENCOUNT EQ 1).SKIPEQU
         SPACE
***********************************************************************
*                                                                     *
*                      REGISTER EQUIVALENCES                          *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.*
&ENCOUNT SETA  1
         SPACE
.SKIPEQU AIF   ('&CSECT' NE 'NO').CSECT2
         AIF   ('&SYSECT' EQ '').CSECT2
.*-------ENTRY POINT
         ENTRY &ID
         USING &ID,R15                  DEFINE BASE REGISTER
&ID      B     14(R15)                  BRANCH AROUND ID
         DC    AL1(8)                   IDENTIFIER LENGTH
         DC    CL8'&ID'                 ENTRY POINT NAME
         DC    CL1' '                   SPACER
         AGO   .STREGS
.*-------CSECT
.CSECT2  USING &ID,R15                  DEFINE BASE REGISTER
         B     28(0,R15)                BRANCH AROUND ID
         DC    AL1(23)                  IDENTIFIER LENGTH
         DC    CL8'&ID'                 CSECT NAME
         DC    CL1' '                   SPACER
         DC    CL8'&SYSDATE'            DATE OF ASSEMBLY
         DC    CL1' '                   SPACER
         DC    CL5'&SYSTIME'            TIME OF ASSEMBLY
.STREGS  STM   R14,R12,12(R13)          SAVE REGISTERS
&PARMNO  SETA  1                        INITIALIZE COUNTER
.CKBASE  ANOP
&REG     SETC  '&BASE(&PARMNO)'(1,3)
         AIF   ('&REG'(1,1) NE 'R').SKIPBAS
&TEMP    SETC  '&REG'(2,2)
&REGNO   SETA  &TEMP
         AIF   (&REGNO LT 2).BADBASE
         AIF   (&REGNO GT 12).BADBASE
         AIF   (&REGNO NE 2).SETBASE
         MNOTE 0,'*** WARNING - R2 IS A BASE REGISTER. TRANSLATE AND TE+
               ST INSTRUCTION WILL DESTROY CONTENTS.'
.SETBASE ANOP
         AIF   ('&FIRST' NE '').SETBAS2
         LR    &REG,R15                 LOAD BASE ADDRESS
&FIRST   SETC  '&REG'                   SAVE REGISTER
         AGO   .SETLAST
.SETBAS2 LA    &REG,4095(&LAST)         ADD 4095 TO LAST BASE
         LA    &REG,1(&REG)             ADD 1 MORE
.SETLAST ANOP
&LAST    SETC  '&REG'
&USING   SETC  '&USING.,&REG'
         AGO   .NEXTBAS
.SKIPBAS MNOTE 8,'*&REG* IS AN INVALID REGISTER FORM, IGNORED'
         AGO   .NEXTBAS
.BADBASE MNOTE 8,'*&REG* IS AN INVALID BASE REGISTER, IGNORED'
.NEXTBAS ANOP
&PARMNO  SETA  &PARMNO+1
         AIF   (&PARMNO LE N'&BASE).CKBASE
         DROP  R15                      DISCONTINUE R15 BASE
         USING &ID.&USING               DEFINE BASE REGISTERS
.*-------SEE IF PROGRAM MASK IS TO BE SET
         AIF   ('&SPM' EQ 'NO').NOSPM
         LA    R15,15                   LOAD PGM MASK SETTING
         SLA   R15,24                   SHIFT TO BITS 4-7
         SPM   R15                      SET PGM MASK AND COND
.NOSPM   AIF   ('&CHAIN' EQ 'NO').DONE
         AIF   ('&RENT' NE '').GETMAIN
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR
         AIF   ('&SAVE' NE '').LOADSAV
         CNOP  0,4                      FULL WORD ALIGNMENT
         BAL   R13,*+76                 LOAD SAVEAREA ADDR
         DC    18F'0'                   SAVE AREA
         AGO   .CHAIN
.LOADSAV LA    R13,&SAVE                LOAD NEW SAVEAREA ADDR
         AGO   .CHAIN
.GETMAIN MNOTE *,' GETMAIN R,LV=&RENT,SP=&SP'
         GETMAIN R,LV=&RENT,SP=&SP      GET STORAGE
* END OF GETMAIN - $ENTER
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR
         LR    R13,R1                   LOAD STORAGE ADDRESS
         USING &SAVE,R13                DEFINE BASE REGISTER
         L     R1,24(R15)               RESTORE REG 1 CONTENTS
.CHAIN   ST    R15,4(R13)               CHAIN SAVE AREAS
         ST    R13,8(R15)
.DONE    ANOP
         MEND
         SPACE 3
         MACRO
&NAME    $RTRN &RC=0,&RENT=,&SP=1,&SPM=YES,&REST01=YES
         MNOTE *,'       $RTRN     VERSION 002 05/07/75  04/29/76  GPW'
.**********************************************************************
.*                                                                    *
.* $RTRN                                                              *
.*                                                                    *
.* FUNCTION       GENERATE CODE REQUIRED TO RETURN CONTROL TO THE     *
.*                CALLING PROGRAM.                                    *
.*                                                                    *
.* DESCRIPTION    STANDARD IBM LINKAGE CODE IS GENERATED BY THE MACRO *
.*                TO RETURN CONTROL TO THE CALLING PROGRAM.  THE USER *
.*                MAY SPECIFY THE RETURN CODE TO BE RETURNED.         *
.*                RE-ENTRANT CODE IS SUPPORTED.                       *
.*                                                                    *
.*                REGISTERS 0 THROUGH 14 (OR OPTIONALLY, REGISTERS    *
.*                2 THROUGH 14) WILL BE RESTORED TO THEIR STATUS      *
.*                UPON ENTRY TO THE ROUTINE.  REGISTER 15 WILL BE     *
.*                USED FOR A DEFAULT OR USER SPECIFIED RETURN CODE.   *
.*                AN X'FF' WILL BE PLACED IN THE HIGH ORDER BYTE OF   *
.*                WORD 4 OF THE OLD SAVE AREA TO INDICATE THAT        *
.*                CONTROL HAS BEEN RETURNED TO THE CALLING PROGRAM    *
.*                                                                    *
.*                CODE IS ALSO GENERATED TO RESTORE THE PROGRAM MASK  *
.*                TO ITS STATUS UPON ENTRY TO THE ROUTINE.  THE       *
.*                VALUE OF THE MASK IS OBTAINED FROM THE HIGH ORDER   *
.*                BYTE OF REGISTER 14.  THE ASSUMPTION IS MADE THAT   *
.*                STANDARD LINKAGE WAS USED TO INVOKE THE ROUTINE,    *
.*                THAT IS, THAT ENTRY WAS MADE BY A  BALR  R14,R15.   *
.*                IF THIS IS NOT TRUE, THE PROGRAM MASK WILL BE       *
.*                RESTORED INCORRECTLY.  IF SPM=NO IS SPECIFIED, THE  *
.*                PROGRAM MASK WILL NOT BE ALTERED.                   *
.*                                                                    *
.*                IF RE-ENTRANT CODE IS BEING GENERATED, A DROP R2    *
.*                STATEMENT IS GENERATED, SO THE USER SHOULD NOT USE  *
.*                REGISTER 2 AS A BASE REGISTER.                      *
.*                                                                    *
.* SYNTAX         NAME     $RTRN     RC=NUM1                          *
.*                                      (R15)                         *
.*                                   RENT=LEN                         *
.*                                   SP=NUM2                          *
.*                                   SPM=NO                           *
.*                                   REST01=NO                        *
.*                                                                    *
.*                NAME   - A SYMBOLIC TAG ASSIGNED TO THE FIRST       *
.*                         INSTRUCTION GENERATED.                     *
.*                                                                    *
.*                RC     - SPECIFIES THE RETURN CODE TO BE PLACED IN  *
.*                         REGISTER 15.  A NUMBER MAY BE SPECIFIED,   *
.*                         OR (R15) INDICATES THAT THE RETURN CODE    *
.*                         HAS ALREADY BEEN PLACED IN REGISTER 15 BY  *
.*                         THE USER.  THE DEFAULT RETURN CODE IS 0.   *
.*                                                                    *
.*                RENT   - INDICATES THAT THE WORK AREA OBTAINED BY   *
.*                         $ENTER IS TO BE FREED.  LEN SPECIFIES THE  *
.*                         LENGTH OF THE AREA.  THE ADDRESS IS        *
.*                         OBTAINED FROM REGISTER 13.                 *
.*                                                                    *
.*                SP     - SPECIFIES THE SUBPOOL OF THE WORK AREA.    *
.*                         IT MUST AGREE WITH THE SUBPOOL SPECIFIED   *
.*                         IN $ENTER.  THE DEFAULT IS 1.              *
.*                                                                    *
.*                SPM    - SPM=NO SPECIFIES THAT THE PROGRAM MASK     *
.*                         IS NOT TO BE ALTERED.                      *
.*                                                                    *
.*                REST01 - REST01=NO SPECIFIES THAT THE CONTENTS      *
.*                         OF REGISTERS 0 AND 1 ARE NOT TO BE         *
.*                         RESTORED.  THIS OPTION SHOULD BE           *
.*                         SPECIFIED WHEN DATA IS TO BE PASSED        *
.*                         BACK TO THE CALLING PROGRAM IN             *
.*                         REGISTERS 0 AND 1.                         *
.*                                                                    *
.* ERRORS         NO ERROR MESSAGES ARE GENERATED                     *
.*                                                                    *
.* EXAMPLE        EX1      $RTRN                                      *
.*                                                                    *
.*                EX2      $RTRN  RC=4                                *
.*                                                                    *
.*                EX3      $RTRN  RC=(R15),RENT=DSECTLEN              *
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                NONE                                                *
.*                                                                    *
.* MACROS CALLED                                                      *
.*                                                                    *
.*                FREEMAIN                                            *
.*                                                                    *
.* UPDATE SUMMARY                                                     *
.*                                                                    *
.*      VERSION   DATE     CHANGE                                     *
.*                                                                    *
.*        002   04/29/76   REST01 KEYWORD ADDED                       *
.*                                                                    *
.**********************************************************************
.*
         AIF   ('&RENT' EQ '').REGULAR
&NAME    LR    R1,R13                   LOAD STORAGE ADDRESS
         BALR  R2,0                     ESTABLISH BASE REG
         USING *,R2                     DEFINE BASE REGISTER
         L     R3,4(R13)                SAVE OLD SAVEAREA ADDR
         LR    R4,R15                   SAVE RETURN CODE
.FREE    MNOTE *,' FREEMAIN R,LV=&RENT,A=(1),SP=&SP'
         FREEMAIN R,LV=&RENT,A=(1),SP=&SP FREE STORAGE
* END FREEMAIN - $RTRN
         AIF   ('&RC' NE '(R15)').RESSAV
         LR    R15,R4                   RESTORE RETURN CODE
.RESSAV  LR    R13,R3                   RESTORE OLD SAVEAREA
         DROP  R2
         AGO   .COMMON
.REGULAR ANOP
&NAME    L     R13,4(R13)               RESTORE OLD SAVEAREA
.COMMON  AIF   ('&RC' EQ '(R15)').RES14
         LA    R15,&RC                  SET RETURN CODE
.RES14   L     R14,12(R13)              RESTORE RETURN ADDRESS
         AIF   ('&REST01' EQ 'NO').REST2
         LM    R0,R12,20(R13)           RESTORE REGS 0 - 12
         AGO   .SETFLAG
.REST2   LM    R2,R12,28(R13)           RESTORE REGS 2 - 12
.SETFLAG MVI   12(R13),X'FF'            SET RETURNED FLAG
.*-------TEST FOR SPM RESET
         AIF   ('&SPM' EQ 'NO').NOSPM
         SPM   R14                      RESTORE PROGRAM MASK
.NOSPM   BR    R14                      RETURN
         MEND
         SPACE 3
         MACRO
&NAME    #TSOBLKS &DSECTS,&CPPL=,&IOPL=,&PPL=,&DAPL=,&ECB=
         MNOTE *,'       #TSOBLKS  VERSION 002 06/06/75  09/22/75  GPW'
.**********************************************************************
.*                                                                    *
.* #TSOBLKS                                                           *
.*                                                                    *
.* FUNCTION       CONSTRUCT TSO CONTROL BLOCKS REQUIRED BY TSO        *
.*                COMMAND PROCESSORS.                                 *
.*                                                                    *
.* DESCRIPTION    CODE TO INITIALIZE TSO CONTROL BLOCKS IS GENERATED  *
.*                BY THE MACRO.  DSECTS DESCRIBING THE CONTROL BLOCKS *
.*                ARE GENERATED IF REQUESTED.  THE CONTROL BLOCKS ARE *
.*                GENERATED USING USER SUPPLIED INFORMATION AND DATA  *
.*                FROM THE COMMAND PROCESSOR PARAMETER LIST (CPPL).   *
.*                                                                    *
.*                THE CONTROL BLOCKS WHICH MAY BE GENREATED ARE:      *
.*                                                                    *
.*                ECB  - EVENT CONTROL BLOCK.  THE USER MUST SPECIFY  *
.*                       THE SYMBOLIC NAME OF THE ECB.  IT WILL BE    *
.*                       INITIALIZED TO ZERO.                         *
.*                                                                    *
.*                IOPL - INPUT/OUTPUT PARAMETER LIST.  THE USER MUST  *
.*                       SPECIFY THE REGISTER TO BE USED AS THE IOPL  *
.*                       BASE REGISTER AND THE SYMBOLIC LABEL OF THE  *
.*                       IOPL.  HE MAY SPECIFY THE LABEL OF AN IOPB   *
.*                       IF IT IS TO BE INCLUDED IN THE IOPL.         *
.*                                                                    *
.*                PPL  - PARSE PARAMETER LIST.  THE USER MUST SPECIFY *
.*                       THE REGISTER TO BE USED AS THE PPL BASE      *
.*                       REGISTER, THE SYMBOLIC NAME OF THE PPL,      *
.*                       THE SYMBOLIC NAME OF THE PCL CSECT, AND THE  *
.*                       SYMBOLIC NAME OF THE ANSWER LIST LOCATION.   *
.*                       THE SYMBOLIC NAME OF A USER WORK AREA MAY    *
.*                       ALSO BE SPECIFIED.                           *
.*                                                                    *
.*                DAPL - DYNAMIC ALLOCATION PARAMETER LIST.  THE USER *
.*                       MUST SPECIFY THE REGISTER TO BE USED AS THE  *
.*                       DAPL BASE REGISTER AND THE SYMBOLIC NAME     *
.*                       OF THE DAPL.  A DAPB NAME MAY BE SPECIFIED.  *
.*                                                                    *
.*                THE LENGTHS OF THE CONTROL BLOCKS GENERATED WILL BE *
.*                GIVEN BY THE LABELS IOPLLEN, PPLLEN, DAPLLEN.       *
.*                THE USER MAY USE THESE VALUES TO ALLOCATE AREAS FOR *
.*                THE CONTROL BLOCKS.  USE OF THESE LABELS INSURE     *
.*                THAT THE PROPER AMOUNT OF SPACE WILL BE ALLOCATED.  *
.*                IF THE SIZE OF THESE BLOCKS ARE CHANGED BY IBM,     *
.*                ONLY A RE-ASSEMBLY AND LINK WILL BE NECESSARY.      *
.*                                                                    *
.* SYNTAX         NAME     #TSOBLKS  DSECT                            *
.*                                   CPPL=(REG1,REG2)                 *
.*                                   IOPL=(REG3,SYM1,SYM2,SYM3)       *
.*                                   PPL=(REG4,SYM4,SYM5,SYM6,SYM7)   *
.*                                   DAPL=(REG5,SYM8,SYM9,SYM10)      *
.*                                   ECB=SYM11                        *
.*                                                                    *
.*                NAME   - A SYMBOLIC TAG ASSIGNED TO THE FIRST       *
.*                         INSTRUCTION GENERATED.                     *
.*                                                                    *
.*                DSECT  - INDICATES THAT DSECTS ARE TO BE GENERATED  *
.*                         FOR THE CONTROL BLOCKS SPECIFIED.          *
.*                                                                    *
.*                CPPL   - COMMAND PROCESSOR PARAMETER LIST, TWO      *
.*                         REQUIRED SUBPARAMETERS.                    *
.*                         1. - REGISTER TO BE USED AS THE CPPL BASE  *
.*                              REGISTER.                             *
.*                         2. - REGISTER CONTAINING THE CPPL ADDRESS. *
.*                                                                    *
.*                IOPL   - INPUT/OUTPUT PARAMETER LIST, TWO REQUIRED  *
.*                         SUBPARAMETERS AND ONE OPTIONAL             *
.*                         SUBPARAMETER.                              *
.*                         1.  - REGISTER TO BE USED AS IOPL BASE     *
.*                               REGISTER.                            *
.*                         2.  - SYMBOLIC LABEL OF USER ALLOCATED     *
.*                               AREA TO BE USED FOR IOPL.            *
.*                         3.  - SYMBOLIC LABEL OF AN IOPB (PARAMETER *
.*                               BLOCK FOR GETLINE, PUTLINE, PUTGET,  *
.*                               OR STACK).  THE IOPB ADDRESS MAY BE  *
.*                               SPECIFIED IN THE GETLINE, PUTLINE,   *
.*                               PUTGET OR STACK MACRO.               *
.*                                                                    *
.*                PPL    - PARSE PARAMETER LIST, FOUR REQUIRED        *
.*                         SUBPARAMETERS AND ONE OPTIONAL             *
.*                         SUBPARAMETER.                              *
.*                         1.  - REGISTER TO BE USED AS PPL BASE      *
.*                               REGISTER.                            *
.*                         2.  - SYMBOLIC LABEL OF USER ALLOCATED     *
.*                               AREA TO BE USED FOR PPL.             *
.*                         3.  - SYMBOLIC LABEL OF PCL CSECT (NAME    *
.*                               FIELD OF IKJPARM MACRO.              *
.*                         4.  - SYMBOLIC LABEL OF USER ALLOCATED     *
.*                               FULLWORD WHERE ANSWER LIST (PDL)     *
.*                               ADDRESS WILL BE PLACED.              *
.*                         5.  - SYMBOLIC LABEL OF USER WORK AREA.    *
.*                                                                    *
.*                DAPL   - DYNAMIC ALLOCATION PARAMETER LIST, TWO     *
.*                         REQUIRED SUBPARAMETERS AND ONE OPTIONAL    *
.*                         SUBPARAMETER.                              *
.*                         1.  - REGISTER TO BE USED AS DAPL BASE     *
.*                               REGISTER.                            *
.*                         2.  - SYMBOLIC LABEL OF USER ASSIGNED AREA *
.*                               TO BE USED FOR DAPL.                 *
.*                         3.  - SYMBOLIC LABEL OF A DAPB.  THE DAPB  *
.*                               ADDRESS MAY BE SUPPLIED BY THE USER  *
.*                               BEFORE INVOKING IKJDAIR.             *
.*                                                                    *
.*                ECB    - EVENT CONTROL BLOCK, REQUIRED.  SYMBOLIC   *
.*                         LABEL OF A USER ASSIGNED FULLWORD TO BE    *
.*                         USED AS AN ECB.                            *
.*                                                                    *
.*                                                                    *
.* ERRORS         THE NUMBER OF SUBPARAMETERS FOR EACH PARAMETER IS   *
.*                CHECKED.  IF ANY PARAMETER IS SPECIFIED INCORRECTLY,*
.*                A MESSAGE WILL BE DISPLAYED AND NO CODE OR DSECTS   *
.*                WILL BE GENERATED.  EACH PARAMETER WILL BE CHECKED, *
.*                EVEN IF A PRECEEDING PARAMETER WAS FOUND TO BE      *
.*                INCORRECT.  ALL ERRORS ARE SEVERITY CODE 8.         *
.*                                                                    *
.* EXAMPLE        BUILD    #TSOBLKS DSECT,ECB=DSATECB,              X *
.*                               CPPL=(R11,R1),                     X *
.*                               IOPL=(R10,DSATIOPL,DSATPTPB),      X *
.*                               PPL=(R9,DSATPPL,DSATPCL,DSATANS)     *
.*                              .                                     *
.*                              .                                     *
.*                              .                                     *
.*                DSATIOPL DS    0F       ALIGNMENT                   *
.*                         ORG   *+IOPLLEN                            *
.*                DSATPPL  DS    0F                                   *
.*                         ORG   *+PPLLEN                             *
.*                DSATECB  DS    F                                    *
.*                DSATANS  DS    A                                    *
.*                DSATPTPB PUTLINE MF=L                               *
.*                              .                                     *
.*                              .                                     *
.*                              .                                     *
.*                DSATPCL  IKJPARM DSECT=DSATPDL                      *
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                NONE                                                *
.*                                                                    *
.* MACROS CALLED                                                      *
.*                                                                    *
.*                IKJCPPL   IKJIOPL   IKJPPL    IKJDAPL               *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &IER                     ERROR INDICTOR
.*
&IER     SETA  0                        INITIALIZE ERROR INDICATOR
         AIF   (N'&CPPL EQ 2).CKIOPL
         MNOTE 8,'*** CPPL SUBPARAMETERS INCORRECT'
&IER     SETA  1                        SET ERROR INDICATOR
.CKIOPL  AIF   (N'&IOPL EQ 0 OR N'&IOPL EQ 2 OR N'&IOPL EQ 3).CKPPL
         MNOTE 8,'*** IOPL SUBPARAMETERS INCORRECT'
&IER     SETA  1                        SET ERROR INDICATOR
.CKPPL   AIF   (N'&PPL EQ 0 OR N'&PPL EQ 4 OR N'&PPL EQ 5).CKDAPL
         MNOTE 8,'*** CPPL SUBPARAMETERS INCORRECT'
&IER     SETA  1                        SET ERROR INDICATOR
.CKDAPL  AIF   (N'&DAPL EQ 0 OR N'&DAPL EQ 2 OR N'&DAPL EQ 3).CKECB
         MNOTE 8,'*** DAPL SUBPARAMETERS INCORRECT'
&IER     SETA  1                        SET ERROR INDICATOR
.CKECB   AIF   ('&ECB' NE '').CKERR
         MNOTE 8,'*** ECB PARAMETER MISSING'
&IER     SETA  1                        SET ERROR INDICATOR
.CKERR   AIF   (&IER EQ 0).PARMSOK
         MEXIT
.PARMSOK AIF   ('&DSECTS' NE 'DSECT').USING
         MNOTE *,' IKJCPPL'
         IKJCPPL
* END IKJCPPL - #TSOBLKS
         SPACE 4
         AIF   ('&IOPL' EQ '').IKJPPL
         MNOTE *,' IKJIOPL'
         IKJIOPL
* END IKJIOPL - #TSOBLKS
IOPLLEN  EQU   *-IOPL
         SPACE 4
.IKJPPL  AIF   ('&PPL' EQ '').IKJDAPL
         MNOTE *,' IKJPPL'
         IKJPPL
* END IKJPPL  - #TSOBLKS
PPLLEN   EQU   *-PPL
         SPACE 4
.IKJDAPL AIF   ('&DAPL' EQ '').EJECT
         MNOTE *,' IKJDAPL'
         IKJDAPL
* END IKJDAPL - #TSOBLKS
DAPLLEN  EQU   *-DAPL
.EJECT   EJECT
&SYSECT  CSECT                          CONTINUE USER CSECT
.USING   ANOP
***********************************************************************
*                                                                     *
*                     SET UP TSO CONTROL BLOCKS                       *
*                                                                     *
***********************************************************************
&NAME    XC    &ECB.(4),&ECB            ZERO ECB
         LR    &CPPL(1),&CPPL(2)        LOAD CPPL ADDRESS
         USING CPPL,&CPPL(1)            DEFINE CPPL BASE REGISTER
         AIF   ('&IOPL' EQ '').UPPL     SEE IF IOPL REQUESTED
         LA    &IOPL(1),&IOPL(2)
         USING IOPL,&IOPL(1)
.UPPL    AIF   ('&PPL' EQ '').UDAPL
         LA    &PPL(1),&PPL(2)
         USING PPL,&PPL(1)
.UDAPL   AIF   ('&DAPL' EQ '').SETUP
         LA    &DAPL(1),&DAPL(2)
         USING DAPL,&DAPL(1)
.SETUP   ANOP
         AIF   ('&IOPL' EQ '').BLDPPL
*--------BUILD IOPL
         MVC   IOPLUPT(4),CPPLUPT       COPY UPT ADDRESS
         MVC   IOPLECT(4),CPPLECT       COPY ECT ADDRESS
         LA    R1,&ECB                  GET ECB ADDRESS
         ST    R1,IOPLECB
         AIF   ('&IOPL(3)' EQ '').BLDPPL
         LA    R1,&IOPL(3)              GET IOPB ADDRESS
         ST    R1,IOPLIOPB
.BLDPPL  AIF   ('&PPL' EQ '').BLDDAPL
*--------BUILD PPL
         MVC   PPLUPT(4),CPPLUPT        COPY UPT ADDRESS
         MVC   PPLECT(4),CPPLECT        COPY ECT ADDRESS
         LA    R1,&ECB                  GET ECB ADDRESS
         ST    R1,PPLECB
         L     R1,=V(&PPL(3))           GET PCL ADDRESS
         ST    R1,PPLPCL
         LA    R1,&PPL(4)               GET ANSWER AREA WORD ADDRESS
         ST    R1,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF      COPY COMMAND BUFFER ADDRESS
         AIF   ('&PPL(5)' EQ '').BLDDAPL
         LA    R1,&PPL(5)               GET USER WORK AREA ADDRESS
         ST    R1,PPLUWA
.BLDDAPL AIF   ('&DAPL' EQ '').DONE
*--------BUILD DAPL
         MVC   DAPLUPT(4),CPPLUPT       COPY UPT ADDRESS
         MVC   DAPLECT(4),CPPLECT       COPY ECT ADDRESS
         LA    R1,&ECB                  GET ECB ADDRESS
         ST    R1,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB     COPY PSCB ADDRESS
         AIF   ('&DAPL(3)' EQ '').DONE
         LA    R1,&DAPL(3)              GET DAPB ADDRESS
         ST    R1,DAPLDAPB
.DONE    MEND
         SPACE 3
         MACRO
&NAME    #TSOMSG &MSG,&OFFSET=0,&LENGTH=
         MNOTE *,'       #TSOMSG   VERSION 001 09/22/75  09/22/75  GPW'
.**********************************************************************
.*                                                                    *
.* #TSOMSG                                                            *
.*                                                                    *
.* FUNCTION        GENERATE A MESSAGE LINE IN PUTLINE FORMAT WITH     *
.*                 LENGTH AND OFFSET HEADERS.                         *
.*                                                                    *
.* DESCRIPTION     THE USER SPECIFIES A MESSAGE TEST ENCLOSED IN      *
.*                 SINGLE QUOTES.  AN OFFSET MAY ALSO BE SPECIFIED.   *
.*                 A MESSAGE IN PUTLINE FORMAT (WITH HALFWORD HEADERS *
.*                 CONTAINING THE TOTAL LENGTH OF HEADERS AND         *
.*                 MESSAGE AND OFFSET) IS CREATED.  THE LENGTH OF     *
.*                 THE MESSAGE IS ROUNDED UP TO THE NEXT FULLWORD     *
.*                 MULTIPLE.  THE USER MAY OPTIONALLY SPECIFY THE     *
.*                 LENGTH OF THE MESSAGE TEXT.                        *
.*                                                                    *
.* SYNTAX          NAME     #TSOMSG 'MESSAGE-TEXT'                    *
.*                                  OFFSET=N                          *
.*                                  LENGTH=N                          *
.*                                                                    *
.*                 MESSAGE-TEXT IS THE MESSAGE TO BE GENERATED.       *
.*                                                                    *
.*                 OFFSET       SPECIFIES THE VALUE OF THE OFFSET     *
.*                              HEADER HALFWORD.  DEFAULT IS 0.       *
.*                                                                    *
.*                 LENGTH       SPECIFIES THE LENGTH IN BYTES OF      *
.*                              THE MESSAGE TEXT.  THIS LENGTH DOES   *
.*                              NOT INCLUDE THE HEADER LENGTHS.  IF   *
.*                              LENGTH IS NOT SPECIFIED, THE LENGTH   *
.*                              WILL BE THE LENGTH OF THE MESSAGE     *
.*                              TEXT ROUNDED TO THE NEXT FULLWORD.    *
.*                                                                    *
.* ERRORS          NO ERROR MESSAGES ARE DISPLAYED.                   *
.*                                                                    *
.* EXAMPLE         GENERATE A TSO MESSAGE.  LENGTH IS NOT SPECIFIED,  *
.*                 AND OFFSET IS 0.                                   *
.*                                                                    *
.*                 ERROR1   #TSOMSG 'NAME NOT FOUND'                  *
.*                                                                    *
.*                 GENERATE A DUMMY MESSAGE.  THE MESSAGE TEXT WILL   *
.*                 BE FILLED IN BY THE PROGRAM.  THE LENGTH OF THE    *
.*                 MESSAGE MAY BE UP TO 120 CHARACTERS.               *
.*                                                                    *
.*                 OUTLINE  #TSOMSG ' ',LENGTH=120                    *
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                 NONE                                               *
.*                                                                    *
.* MACROS CALLED                                                      *
.*                                                                    *
.*                 NONE                                               *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &LEN,&LEN2
.*
         AIF   ('&LENGTH' EQ '').CALCLEN
&LEN     SETA  &LENGTH
         AGO   .GETLEN2
.CALCLEN ANOP
&LEN     SETA  K'&MSG-2
&LEN     SETA  ((&LEN-1)/4+1)*4
.GETLEN2 ANOP
&LEN2    SETA  &LEN+4
&NAME    DC    H'&LEN2,&OFFSET',CL&LEN.&MSG
         MEND
         SPACE 3
         MACRO
         #VTCFMT4
         MNOTE *,'       #VTCFMT4  VERSION 002 09/22/75  06/08/76  GPW'
.**********************************************************************
.*                                                                    *
.* #VTCFMT4                                                           *
.*                                                                    *
.* FUNCTION         CONSTRUCT A DSECT FOR A FORMAT 4 DSCB.            *
.*                                                                    *
.* DESCRIPTION      ASSIGN SYMBOLIC NAMES TO THE FIELDS IN A FORMAT 4 *
.*                  DATA SET CONTROL BLOCK (DSCB).  THE FIELD NAMES   *
.*                  CORRESPOND TO THE NAMES IN THE DATA AREAS MANUAL. *
.*                  A FORMAT 4 DSCB DESCRIBES THE VOLUME TABLE OF     *
.*                  CONTENTS.                                         *
.*                                                                    *
.* SYNTAX                    #VTCFMT4                                 *
.*                                                                    *
.* ERRORS           NO ERRORS ARE INDICATED.                          *
.*                                                                    *
.* EXAMPLE                   ORG   FMT4DSCB    ORG TO DATA AREA       *
.*                           #VTCFMT4                                 *
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                  NONE                                              *
.*                                                                    *
.* MACROS CALLED                                                      *
.*                                                                    *
.*                  NONE                                              *
.*                                                                    *
.* UPDATE SUMMARY                                                     *
.*                                                                    *
.*      VERSION   DATE     CHANGE                                     *
.*        002   06/08/76   VSAM DATA AREAS ADDED                      *
.*                                                                    *
.**********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        FORMAT 4 DSCB DESCRIPTION                                    *
*                                                                     *
*        VTOC DESCRIPTION                                             *
*                                                                     *
***********************************************************************
         SPACE 2
DS4KEY   DS    XL44                     KEY - VTOC NAME - 44X'04'
DS4IDFMT DS    X                        FORMAT 4 ID X'F4'
DS4HPCHR DS    XL5                      HIGHEST ADDR OF A FORMAT 1 DSCB
DS4DSREC DS    XL2                      NUMBER OF AVAILABLE DSCB'S
DS4HCCHH DS    XL4                      CCHH OF NEXT AVAILABLE ALT. TRK
DS4NOATK DS    XL2                      NUMBER OF REMAINING ALT. TRACKS
DS4VTOCI DS    X                        VTOC INDICATORS
DS4DOSBT EQU   X'80'  1... ....    DOS CONTAMINATION BIT.          @L6C
*                                   ON IMPLIES F5 DSCB CHAIN IS INVALID
DS4DVTOC EQU   X'40'  .1.. ....    IF ON, THE INDEX WAS DISABLED   @P2A
DS4EFVLD EQU   X'20'  ..1. ....    EXTENDED FREE-SPACE MANAGEMENT  @L6A
*                                  VALIDITY FLAG.  ON IMPLIES      @L6A
*                                  EXTENDED FREE-SPACE MANAGEMENT  @L6A
*                                  IS ACTIVE AND FREE-SPACE IS     @L6A
*                                  VALID.  SEE DS4EFLVL.           @L6A
DS4DSTKP EQU   X'10'  ...1 ....    DOS STACKED PACK                @P1C
DS4DOCVT EQU   X'08'  .... 1...    DOS CONVERTED VTOC              @P1C
DS4DIRF  EQU   X'04'  .... .1..    DIRF BIT                        @P1C
DS4DICVT EQU   X'02'  .... ..1.    DIRF RECLAIMED                  @P1C
DS4IVTOC EQU   X'01'  .... ...1    IF ON, AN INDEX HAS BEEN CREATED@P1C
*                                     FOR THE VTOC.                @P1A
*                                  IF DS4DOSBT IS ON, THE INDEX IS @P1A
*                                     VALID.                       @P1A
*                                  IF EITHER OF THESE BITS IS OFF, @P1A
*                                    THE INDEX HAS BEEN INVALIDATED@P1A
DS4NOEXT DS    XL1                 NUMBER OF EXTENTS IN THE VTOC
DS4SMSFG DS    XL1                 SYSTEM MANAGED STORAGE INDICATORS   X
                                                                   @L4A
DS4SMSTS EQU   X'C0'  11.. ....    SYSTEM MANAGED VOLUME TEST      @L4A
DS4SMS   EQU   X'C0'  11.. ....    SYSTEM MANAGED VOLUME           @L4A
*              X'80'  10.. ....    RESERVED                        @L4A
DS4SMSCV EQU   X'40'  01.. ....    SYSTEM MANAGED VOLUME IN INITIAL    X
                                   STATUS                          @L4A
DS4NTSMS EQU   X'00'  00.. ....    NON SYSTEM MANAGED VOLUME       @L4A
*              X'3F'  ..11 1111    RESERVED                        @L4A
         DS    XL1                 RESERVED                        @L4C
DS4DEVCT DS    0XL14               DEVICE CONSTANTS
DS4DEVSZ DS    XL4                      DEVICE SIZE
DS4DEVTK DS    XL2                      DEVICE TRACK LENGTH
DS4DEVZ  DS    0XL2                     KEYED RECORD OVERHEAD
DS4DEVI  DS    X                        NON-LAST KEYED RECORD OVERHEAD
DS4DEVL  DS    X                        LAST KEYED RECORD OVERHEAD
DS4DEVK  DS    X                        NON-KEYED RECORD OVERHEAD DIFF.
DS4DEVFG DS    X                        FLAG BYTE
DS4DEVTL DS    XL2                      DEVICE TOLERANCE
DS4DEVDT DS    X                        NUMBER OF DSCB'S PER TRACK
DS4DEVDB DS    X                        NUMBER OF DIRECTORY BLOCKS/TRK
*
DS4AMTIM DS    XL8                      VSAM TIME STAMP
DS4AMCAT DS    0XL3                     VSAM CATALOG INDICATORS
DS4VSIND DS    X                        VSAM INDICATORS
*              X'80'                      VOLUME OWNED BY VSAM CATALOG
DS4VSCRA DS    XL2                      RELATIVE TRACK ADDRESS OF CRA
DS4R2TIM DS    XL8                      VSAM VOLUME/CATALOG MATCH TIME
         DS    XL5                      RESERVED
DS4F6PTR DS    XL5                      POINTER TO FIRST FORMAT 6 DSCB
DS4VTOCE DS    XL10                     VTOC EXTENT DESCRIPTION
         DS    XL10                RESERVED                        @L6C
DS4EFLVL DS    CL1                 EXTENDED FREE-SPACE MANAGEMENT  @L6A
*                                  LEVEL.                          @L6A
*                                  X'00' MEANS EXTENDED FREE-      @L6A
*                                  SPACE MANAGEMENT WILL NOT BE    @L6A
*                                  USED FOR THIS VOLUME.           @L6A
*                                  X'07' MEANS WHEN IN OSVTOC      @L6A
*                                  FORMAT, FREE-SPACE MANAGED IN   @L6A
*                                  F7 DSCB'S.                      @L6A
DS4EFL00 EQU   00                  EXTENDED FREE-SPACE             @L6A
*                                  LEVEL 0.                        @L6A
DS4EFL07 EQU   07                  EXTENDED FREE-SPACE             @L6A
*                                  LEVEL 7.                        @L6A
DS4EFPTR DS    CL5                 POINTER TO EXTENDED FREE-SPACE  @L6A
*                                  INFORMATION:                    @L6A
*                                  FOR DS4LVL=X'00' THIS IS ZERO.  @L6A
*                                  FOR DS4EFLVL=X'07' THIS IS THE  @L6A
*                                  CCHHR OF THE FIRST F7 DSCB.     @L6A
         DS    XL9                 RESERVED                        @L6A
DS4END   EQU   *                   EQUATE AT END OF DSCB4          @P1C
         MEND
         SPACE 3
         MACRO
         #VTCFMT5
         MNOTE *,'       #VTCFMT5  VERSION 001 09/22/75  09/22/75  GPW'
.**********************************************************************
.*                                                                    *
.* #VTCFMT5                                                           *
.*                                                                    *
.* FUNCTION         CONSTRUCT A DSECT FOR A FORMAT 5 DSCB.            *
.*                                                                    *
.* DESCRIPTION      ASSIGN SYMBOLIC NAMES TO THE FIELDS IN A FORMAT 5 *
.*                  DATA SET CONTROL BLOCK (DSCB).  THE FIELD NAMES   *
.*                  CORRESPOND TO THE NAMES IN THE DATA AREAS MANUAL. *
.*                  A FORMAT 5 DSCB DESCRIBES FREE SPACE AREAS.       *
.*                                                                    *
.* SYNTAX                    #VTCFMT5                                 *
.*                                                                    *
.* ERRORS           NO ERRORS ARE INDICATED.                          *
.*                                                                    *
.* EXAMPLE                   ORG   FMT5DSCB    ORG TO DATA AREA       *
.*                           #VTCFMT5                                 *
.*                                                                    *
.* GLOBAL SYMBOLS                                                     *
.*                                                                    *
.*                  NONE                                              *
.*                                                                    *
.* MACROS CALLED                                                      *
.*                                                                    *
.*                  NONE                                              *
.*                                                                    *
.**********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        FORMAT 5 DSCB DESCRIPTION                                    *
*                                                                     *
*        FREE SPACE DESCRIPTIONS                                      *
*                                                                     *
*        FIRST FORMAT 5 DSCB FOLLOWS FORMAT 4 DSCB                    *
*                                                                     *
***********************************************************************
         SPACE 2
DS5KEYID DS    XL4                      KEY IDENTIFIER
DS5EXT01 DS    XL5                      AVAILABLE ENTENT
DS5EXT02 DS    XL5                           .
DS5EXT03 DS    XL5                           .
DS5EXT04 DS    XL5                           .
DS5EXT05 DS    XL5                           .
DS5EXT06 DS    XL5                           .
DS5EXT07 DS    XL5                           .
DS5EXT08 DS    XL5                           .
DS5FMTID DS    X                        FORMAT IDENTIFIER
DS5EXT09 DS    XL5                      AVAILABLE EXTENT
DS5EXT10 DS    XL5                           .
DS5EXT11 DS    XL5                           .
DS5EXT12 DS    XL5                           .
DS5EXT13 DS    XL5                           .
DS5EXT14 DS    XL5                           .
DS5EXT15 DS    XL5                           .
DS5EXT16 DS    XL5                           .
DS5EXT17 DS    XL5                           .
DS5EXT18 DS    XL5                           .
DS5EXT19 DS    XL5                           .
DS5EXT20 DS    XL5                           .
DS5EXT21 DS    XL5                           .
DS5EXT22 DS    XL5                           .
DS5EXT23 DS    XL5                           .
DS5EXT24 DS    XL5                           .
DS5EXT25 DS    XL5                           .
DS5EXT26 DS    XL5                           .
DS5PTRDS DS    XL5                      POINTER TO NEXT FORMAT 5 DSCB
DS5END   EQU   *                        END OF DSCB5
         MEND
         MACRO
         #VTCFMT7
         MNOTE *,'       #VTCFMT7                                  ABL'
.**********************************************************************
.*                                                                    *
.* #VTCFMT7                                                           *
.*                                                                    *
.* FUNCTION         CONSTRUCT A DSECT FOR A FORMAT 7 DSCB.            *
.*                                                                    *
.* DESCRIPTION      ASSIGN SYMBOLIC NAMES TO THE FIELDS IN A FORMAT 7 *
.*                  DATA SET CONTROL BLOCK (DSCB).  THE FIELD NAMES   *
.*                  CORRESPOND TO THE NAMES IN THE DATA AREAS MANUAL. *
.*                  A FORMAT 7 DSCB DESCRIBES VOLUME FREE SPACE.      *
.*                                                                    *
.* SYNTAX                    #VTCFMT7                                 *
.*                                                                    *
.* ERRORS           NO ERRORS ARE INDICATED.                          *
.*                                                                    *
.* EXAMPLE                   ORG   FMT7DSCB    ORG TO DATA AREA       *
.*                           #VTCFMT7                                 *
.*                                                                    *
.**********************************************************************
         SPACE 2
DS7KEYID DS    XL4                     KEY X'07070707'
DS7EXTNT DS    5XL8                    SPACE FOR 5 EXTENT DESCRIPTIONS
DS7FMTID DS    X                       FORMAT IDENTIFIER
DS7ADEXT DS    11XL8                   SPACE FOR 11 EXTENT DESCRIPTIONS
         DS    XL2                     RESERVED
DS7PTRDS DS    XL5                     POINTER TO NEXT FORMAT 7 DSCB
DS7END   EQU   *                       END OF DSCB7
         MEND
         SPACE 3
         LCLC  &OPSYSTM                 OPERATING SYSTEM
* VALUES ARE MVT, SVS, MVS112, MVS113, MVS4
***          MVT    - DO YOU STILL HAVE MVT?
***          SVS    - HOW ABOUT SVS?
***          MVS112 - MVS UP TO MVS 1.1.2
***          MVS113 - MVS SP 1.1.3 AND ABOVE (XA AND ESA)
***          MVS4   - MVS/ESA WITH DYNAMIC UCB (MVS ESA 4.1.0-UCBSCAN)
&OPSYSTM SETC  'MVS4'                   DEFINE OPERATING SYSTEM
         TITLE 'ENTRY CODING'
DVOL     $ENTER BASE=R12,                                              +
               RENT=DSECTLEN,                                          +
               SAVE=SAVEAREA
         TITLE 'SET UP TSO CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*              SET UP TSO CONTROL BLOCKS                              *
*                                                                     *
***********************************************************************
         SPACE 2
         #TSOBLKS DSECT,ECB=DVOLECB,                                   +
               CPPL=(R11,R1),                                          +
               IOPL=(R10,DVOLIOPL,DVOLPTPB),                           +
               PPL=(R9,DVOLPPL,DVOLPCL,DVOLANS)
         DROP  R10
         LA    R10,2048
         LA    R10,2048(R10,R12)
         USING DVOL+4096,R10
         TITLE 'SET UP DATA AREAS'
***********************************************************************
*                                                                     *
*              SET UP DATA AREAS                                      *
*                                                                     *
***********************************************************************
         SPACE 2
         MVC   DVOLHEDR(4),MODLINE       INIT OUTPUT AREA
         MVC   OUTLINE,BLANKS            INIT OUTPUT LINE
         MVC   DVOLPTPB(MODLEN1),MODELS1 INITIALIZE WORK AREAS
         LA    R1,DSNAME                SET UP OBTAIN, SEARCH LIST
         LA    R2,DVOLSER
         LA    R3,VTOCFMT4
         STM   R1,R3,DVOLDCB4+4
         LA    R1,DVOLCCHH              SET UP OBTAIN, SEEK LIST
         LA    R2,DVOLSER
         LA    R3,VTOCFMT5
         STM   R1,R3,DVOLDCB5+4
         XC    TOTAL,TOTAL              ZERO SIZE OF 5 LARGEST EXTENTS
         XC    UCBADDR,UCBADDR          ZERO UCB ADDRESS
         XC    UCBWORK(100),UCBWORK     ZERO UCB WORKAREA
         LA    R1,UCBWORK               WORK AREA
         LA    R2,=AL1(UCB3DACC)        DIRECT ACCESS DEVICES
         LA    R3,UCBANSR               UCB ADDRESS
         STM   R1,R3,UCBPARMS           SAVE THE PARAMETER LIST
         OI    UCBPARMS+8,X'80'         MARK THE END OF THE LIST
         LA    R1,SHORTSER              INITIALIZE SERIAL POINTER
         ST    R1,SERPTR
         TITLE 'PARSE COMMAND OPERANDS'
***********************************************************************
*                                                                     *
*              PARSE COMMAND OPERANDS                                 *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R1,PPL                   LOAD PPL ADDRESS
         LINK  EP=IKJPARS               PARSE THE OPERANDS
         LTR   R15,R15                  TEST PARSE RETURN CODE
         BNZ   ERRPARS
         L     R9,DVOLANS               LOAD ANSWER AREA ADDRESS
         USING DVOLPDL,R9               DEFINE BASE REGISTER
         SPACE 2
************************************************************
*                                                          *
*        PROCESS 'PDSCALL' KEYWORD                         *
*                                                          *
************************************************************
         SPACE 1
         L     R1,CPPLCBUF           GET ADDRESS OF CBUF
         LH    R14,0(,R1)            GET THE LENGTH
         LA    R1,0(R14,R1)          POINT TO PDSCALL, MAYBE
         CLC   2(7,R1),=C'PDSCALL'   DID PDS CALL US?
         BNE   NOPDSCAL              NO, BRANCH
         MVC   PDSMSGA,10(R1)        MOVE THE ADDRESS
         CLI   NOPRINT+1,0           ANY PRINT KEYWORD?
         BNE   NOPDSCAL              NO, BRANCH
         MVI   NOPRINT+1,2           YES, SET DEFAULT TO NOPRINT
NOPDSCAL EQU   *
***********************************************************************
*                                                                     *
*              CHECK FOR HARDCOPY OPTION AND OPEN DCB IF NEEDED       *
*                                                                     *
***********************************************************************
         NC    HARDCOPY,HARDCOPY       SEE IF HARDCOPY SPECIFIED
         BZ    NEXT                    GO ON TO NEXT OPTION
         OI    FLAGS2,$HARDCPY         TURN ON HARDCOPY INDICATOR
         MVC   HARDCPY(HARDLEN),HARDDCB     DCB AND OPEN CONTROL BLOCKS
         LA    R2,HARDCPY+40           LOAD DCBDDNAME ADDRESS
         L     R4,DDNAME               LOAD DDNAME OPERAND ADDRESS
         LH    R1,DDNAME+4             LOAD DDNAME OPERAND LENGTH
         BCTR  R1,0                    REDUCE LENGTH BY 1
         EX    R1,MOVENAME             MOVE DDNAME IN TO DCB
         LA    R1,HARDOPEN             LOAD OPEN LIST FORM ADDRESS
         LA    R2,HARDCPY              LOAD DCB ADDRESS
         OPEN  ((R2),OUTPUT),MF=(E,(R1))    OPEN THE DATA SET
         CLI   NOPRINT+1,0             ANY PRINT KEYWORD?
         BNE   *+8                     NO, BRANCH
         MVI   NOPRINT+1,2             YES, SET DEFAULT TO NOPRINT
         TM    HARDCPY+48,X'10'        TEST FOR SUCCESSFUL OPEN
         BO    NEXT                    CONTINUE
         NI    FLAGS2,X'FF'-$HARDCPY   TURN OFF HARDCOPY      ABL FEB87
         MVI   NOPRINT+1,1             CHANGE TO PRINT        ABL FEB87
         LA    R15,BADOPEN             LOAD ADDR OF MSG
         BAL   R2,PUTL                 GO WRITE MSG
***********************************************************************
*                                                                     *
*              GET VOLUME SERIAL AND UCB ADDRESS                      *
*                                                                     *
***********************************************************************
         SPACE 2
NEXT     LA    R8,VOL                   SET POINTER TO FIRST VOLUME
         MVI   FOUNDONE,X'FF'           NO OUTPUT AT ALL
         SPACE 1
NEXTPARM XC    UCBADDR,UCBADDR          START THE UCB SCAN OVER
         XC    UCBWORK(100),UCBWORK     START THE UCB SCAN OVER
         XC    SRVUCBIC,SRVUCBIC     ZERO THE TOKEN AREA        ABL-410
         L     R15,16                   LOAD CVT ADDRESS
         L     R15,40(R15)              LOAD UCB TABLE ADDRESS
         ST    R15,UCBTABLE             SAVE UCB TABLE ADDRESS
         CLC   OUTFORM,=H'1'            TEST OUTPUT FORMAT
         BNE   NEXTHDR
         CLC   NOHEADER,=H'2'           SEE IF HEADER SUPPRESSED
         BE    NEXTHDR
         LA    R15,BLANKLIN             LOAD OUTPUT LINE ADDRESS
         CLI   FOUNDONE,X'FF'           FIRST LINE OUTPUT?
         BE    *+8                      YES, NO BLANK LINE
         BAL   R2,PUTL
         LA    R15,SHORT1               LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         LA    R15,SHORT2               LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
NEXTHDR  MVI   FOUNDONE,0               NO OUTPUT YET
         SPACE 2
NEXTVOL  MVC   LINE1(MODLEN2),MODELS2   COPY OUTPUT LINES
         MVC   FREEMSG1(MODLEN3),MODELS3
         MVC   BLDSCBS(MODLEN4),MODELS4
         MVC   SHORTLIN(SHORTLEN),SHORTMDL
         MVC   DVOLSER,=CL6' '          BLANK OUT VOL SERIAL
         L     R3,0(R8)                 LOAD VOLUME SERIAL ADDRESS
         CLI   0(R3),C'*'               TEST FOR * (ALL VOLUMES)
         BE    GETUCB
         LH    R1,4(R8)                 LOAD VOLUME SERIAL LENGTH
         BCTR  R1,0                     REDUCE LENGTH BY 1
         EX    R1,MOVESER               MOVE SERIAL
         MVC   SHORTSER,DVOLSER         COPY VOLUME SERIAL
         TITLE 'FIND UCB ENTRY FOR VOLUME'
         AIF   ('&OPSYSTM' NE 'MVS4').MVS4NOT
***********************************************************************
*                                                                     *
*              FIND UCB ENTRY FOR VOLUME                              *
*                                                                     *
*        USE THE UCBSCAN MACRO FROM MVS 4.1.0 OR ABOVE                *
***********************************************************************
         SPACE 2
GETUCB   L     R3,0(,R8)                LOAD SERIAL ADDRESS
UCBCHECK EQU   *
*
**  FIND THE A(UCB)
*
VOLSET   LA    R5,UCBWORK         WORK AREA ADDRESS             ABL-UCB
         LA    R6,=AL1(UCB3DACC)  DASD UCB'S DESIRED            ABL-UCB
         LA    R7,UCBANSR         RESULTANT UCB ADDRESS         ABL-UCB
         STM   R5,R7,UCBPARMS     SAVE PARAMETER LIST           ABL-UCB
         OI    UCBPARMS+8,X'80'   MARK END OF LIST              ABL-UCB
         L     R1,16               CVT                          ABL-410
         L     R1,CVTUCBSC-CVT(R1) IOSSVSUCB  UCB SCAN          ABL-410
         ST    R1,UCBPARMS+12      SAVE ADDRESS                 ABL-410
         SPACE 1                                                ABL-UCB
**                                                              ABL-410
INCR1    L     R15,16                       CVT                 ABL-410
         TM    CVTDCB-CVT(R15),CVTOSEXT     X'074' EXTENSION?   ABL-410
         BNO   ISPDEVTA                     NO, BRANCH          ABL-410
         TM    CVTOSLV0-CVT(R15),X'08'      X'4F0' HBB4410 UCB? ABL-410
         BO    ISPDEVTB                     YES, BRANCH         ABL-410
*                                                               ABL-410
* SYSTEM DOES NOT HAVE UCB SCAN SERVICES (BEFORE MVS ESA 4.1.0) ABL-410
ISPDEVTA DS    0H                                               ABL-410
ISPDEVTL DS    0H                       *                       ABL-410
         LA    R1,UCBPARMS                                      ABL-410
         L     R15,UCBPARMS+12     ROUTINE ADDRESS              ABL-410
         BALR  R14,R15                                          ABL-410
         LTR   R15,R15                                          ABL-410
         BNZ   ISPDEVTE            DONE                         ABL-410
         L     R1,UCBANSR                                       ABL-410
         USING UCBOB,R1                                         ABL-410
         CLI   UCBTBYT3,X'20'      REALLY A DASD DEVICE         ABL-410
         BNE   ISPDEVTL            NO, SKIP IT                  ABL-410
ISPDEVT4 DS    0H                       *                       ABL-410
         SR    R15,R15                  RC0                     ABL-410
         B     SPACVO99                 EXIT                    ABL-410
ISPDEVTE LA    R15,4                    VOLUME NOT FOUND        ABL-410
         B     SPACVO99                 EXIT                    ABL-410
         DROP  R1                                               ABL-410
*                                                               ABL-410
* SYSTEM IS AT LEAST MVS ESA 4.1.0 OR HIGHER -- HAS UCB SCAN    ABL-410
ISPDEVTB DS    0H                       *                       ABL-410
ISPDEVTF DS    0H                       *                       ABL-410
         L     R15,16                       CVT                 ABL-410
         TM    CVTOSLV1-CVT(R15),X'20'  X'4F1' JBB5510 4 DIGIT? ABL-410
         BO    ISPDEVTK                                         ABL-410
         UCBSCAN COPY,WORKAREA=UCBWORK,UCBAREA=SRVUCBUC,        ABL-410X
               DCEAREA=SRVUCBDC,IOCTOKEN=SRVUCBIC,              ABL-410X
               DEVCLASS=DASD,DYNAMIC=YES,DCELEN=ISPDEVTH,       ABL-410X
               MF=(E,UCBWORK+100,COMPLETE)                      ABL-410
         LTR   R15,R15                  RC=0?                   ABL-410
         BZ    ISPDEVTG                 YES, FOUND THE UCB      ABL-410
         LA    R15,4                    NO, SET AN ERROR RETURN ABL-410
         B     SPACVO99                 EXIT                    ABL-410
ISPDEVTK DS    0H                       *                       ABL-410
         UCBSCAN COPY,WORKAREA=UCBWORK,UCBAREA=SRVUCBUC,        ABL-410X
               DCEAREA=SRVUCBDC,IOCTOKEN=SRVUCBIC,RANGE=ALL,    ABL-410X
               DEVCLASS=DASD,DYNAMIC=YES,DCELEN=ISPDEVTH,       ABL-410X
               MF=(E,UCBWORK+100,COMPLETE)                      ABL-410
         LTR   R15,R15                  RC=0?                   ABL-410
         BZ    ISPDEVTG                 YES, FOUND THE UCB      ABL-410
         LA    R15,4                    NO, SET AN ERROR RETURN ABL-410
         B     SPACVO99                 EXIT                    ABL-410
ISPDEVTG DS    0H                       *                       ABL-410
         LA    R1,SRVUCBUC              UCB ADDRESS             ABL-410
         ST    R1,UCBANSR               SET                     ABL-410
         SR    R15,R15                  SET RETURN CODE         ABL-410
         USING UCBOB,R1                                         ABL-410
         CLI   UCBTBYT3,X'20'      REALLY A DASD DEVICE         ABL-410
         BNE   ISPDEVTF   W?       NO, SKIP IT                  ABL-410
         DROP  R1                                               ABL-410
ISPDEVTN DS    0H                       *                       ABL-410
*                                                               ABL-410
SPACVO99 L     R6,UCBANSR               R6 HAS THE UCB ADDRESS  ABL-410
         LTR   R15,R15                  FOUND THE UCB?          ABL-410
         BNZ   NOUCB                    NO, BRANCH              ABL-410
         L     R3,0(,R8)                LOAD SERIAL ADDRESS     ABL-410
         LA    R15,SRVUCBDC             ADDRESS OF DCE          ABL-410
         STCM  R15,B'1111',ADDRDCE SAVE DCE ADDRESS             ABL-410
*                                                               ABL-410
         L     R5,UCBANSR               LOAD UCB ADDRESS
         USING UCB,R5
         CLI   UCBVOLI,X'00'            TEST FOR NO SERIAL
         BE    UCBCHECK
*                                                                 ABL97
         ST    R5,DVOLDEC               SAVE UCB ADDRESS          ABL97
         UCBDEVN UCBPTR=DVOLDEC,DEVN=UCBTEXT                      ABL97
*                                                                 ABL97
***      CLI   UCBTEXT,C' '             LEADING BLANK?            ABL97
***      BNE   UCBFOUR                  NO, BRANCH                ABL97
***      ICM   R1,B'1110',UCBTEXT+1     UCB CHARACTERS            ABL97
***      ICM   R1,B'0001',UCBTEXT       LEADING BLANK AT END      ABL97
***      STCM  R1,B'1111',UCBTEXT       SHIFT THE UCB CHARACTERS  ABL97
UCBFOUR  DS    0h                                                 ABL97
*                                                                 ABL97
         CLI   0(R3),C'*'               ALL VOLUMES?
         BE    UCBHIGH                  YES, BRANCH
         LH    R1,4(R8)                 LOAD VOLUME SERIAL LENGTH
         BCTR  R1,0                     REDUCE LENGTH BY 1
         CLC   0(*-*,R3),UCBVOLI        <<EXECUTED>>
         EX    R1,*-6                   THIS VOLUME?
         BE    UCBHIGH                  YES, BRANCH
         LTR   R1,R1                    POSSIBLE U... FOR UNIT?
         BNP   UCBCHECK                 NO, BRANCH
         CLI   0(R3),C'U'               FIRST CHARACTER OF U?
         BNE   UCBCHECK                 NO, BRANCH
         BCTR  R1,0                     REDUCE LENGTH BY ANOTHER 1
*        CLC   1(*-*,R3),UCBNAME        <<EXECUTED>>              ABL97
         CLC   1(*-*,R3),UCBTEXT        <<EXECUTED>>              ABL97
         EX    R1,*-6                   THIS VOLUME?
***      BNE   UCBCHECK                 NO, BRANCH                ABL97
         BE    UCBHIGH                  YES, BRANCH               ABL97
         CLI   UCBTEXT,C' '             BLANK FIRST CHARACTER?    ABL97
         BNE   UCBCHECK                 NO, BRANCH                ABL97
         CLC   1(*-*,R3),UCBTEXT+1      <<EXECUTED>>              ABL97
         EX    R1,*-6                   THIS VOLUME?              ABL97
         BNE   UCBCHECK                 NO, BRANCH                ABL97
         SPACE 2
UCBHIGH  DS    0H
         MVC   DVOLSER,UCBVOLI          COPY VOLUME SERIAL
         ST    R5,UCBADDR               STORE THIS UCB ADDRESS
         SPACE 2
         CLI   0(R3),C'*'               TEST FOR * (ALL VOLUMES)
         BNE   CONTINUE
         NC    SERONLY,SERONLY          TEST FOR SERONLY
         BZ    CONTINUE
         L     R2,SERPTR                LOAD SERIAL POINTER
         LA    R1,SHORTSER+71           TEST FOR FULL LINE
         CR    R2,R1
         BL    COPYSER2
         LA    R15,SHORTLIN             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL                  DISPLAY LINE
         MVC   SHORTLIN(SHORTLEN),SHORTMDL  CLEAR LINE
         LA    R2,SHORTSER              RESET POINTER
COPYSER2 MVC   0(6,R2),DVOLSER          COPY SERIAL INTO LINE
         LA    R2,10(R2)                INCREMENT POINTER
         ST    R2,SERPTR                SAVE POINTER
         B     GETUCB
ISPDEVTH DC    H'128'                                           ABL-410
         DROP  R5
         AGO   .MVS4DON
.MVS4NOT ANOP
         AIF   ('&OPSYSTM' NE 'MVS113').MVSNOXA
***********************************************************************
*                                                                     *
*              FIND UCB ENTRY FOR VOLUME                              *
*                                                                     *
*        USE THE UCB SCAN SERVICES FROM MVS SP 1.1.3 OR MVS/XA        *
***********************************************************************
*                                                                     *
*        R2  - VOLUME SERIAL ADDRESS                                  *
*        R3  - VOLUME SERIAL (FROM COMMAND LINE) ADDRESS              *
*        R4  - UCB SCAN ENTRY ADDRESS                                 *
*        R5  - UCB ADDRESS                                            *
*                                                                     *
***********************************************************************
         SPACE 2
GETUCB   L     R3,0(,R8)                LOAD SERIAL ADDRESS
         L     R4,16                    CVT ADDRESS START
         L     R4,CVTUCBSE(,R4)         START OF UCB SCAN ROUTINE
         SR    R5,R5                    CLEAR REGISTER 5
UCBCHECK EQU   *
         LA    R1,UCBPARMS              START OF PARAMETER LIST
         LR    R15,R4
         BALR  R14,R15                  INVOKE THE SCAN ROUTINE
         SPACE 1
         LTR   R15,R15                  ANY MORE?
         BNZ   NOUCB                    NO, DONE
         L     R5,UCBANSR               LOAD UCB ADDRESS
         USING UCB,R5
         CLI   UCBVOLI,X'00'            TEST FOR NO SERIAL
         BE    UCBCHECK
         MVI   UCBNAME,C' '             SAVE UCB ADDRESS          ABL97
         MVC   UCBNAME+1(3),UCBNAME     SAVE UCB ADDRESS          ABL97
         CLI   0(R3),C'*'               ALL VOLUMES?
         BE    UCBHIGH                  YES, BRANCH
         LH    R1,4(R8)                 LOAD VOLUME SERIAL LENGTH
         BCTR  R1,0                     REDUCE LENGTH BY 1
         CLC   0(*-*,R3),UCBVOLI        <<EXECUTED>>
         EX    R1,*-6                   THIS VOLUME?
         BE    UCBHIGH                  YES, BRANCH
         LTR   R1,R1                    POSSIBLE U... FOR UNIT?
         BNP   UCBCHECK                 NO, BRANCH
         CLI   0(R3),C'U'               FIRST CHARACTER OF U?
         BNE   UCBCHECK                 NO, BRANCH
         BCTR  R1,0                     REDUCE LENGTH BY ANOTHER 1
*        CLC   1(*-*,R3),UCBNAME        <<EXECUTED>>              ABL97
         CLC   1(*-*,R3),UCBTEXT        <<EXECUTED>>              ABL97
         EX    R1,*-6                   THIS VOLUME?
         BNE   UCBCHECK                 NO, BRANCH
         SPACE 2
UCBHIGH  DS    0H
         MVC   DVOLSER,UCBVOLI          COPY VOLUME SERIAL
         ST    R5,UCBADDR               STORE THIS UCB ADDRESS
         SPACE 2
         CLI   0(R3),C'*'               TEST FOR * (ALL VOLUMES)
         BNE   CONTINUE
         NC    SERONLY,SERONLY          TEST FOR SERONLY
         BZ    CONTINUE
         L     R2,SERPTR                LOAD SERIAL POINTER
         LA    R1,SHORTSER+71           TEST FOR FULL LINE
         CR    R2,R1
         BL    COPYSER2
         LA    R15,SHORTLIN             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL                  DISPLAY LINE
         MVC   SHORTLIN(SHORTLEN),SHORTMDL  CLEAR LINE
         LA    R2,SHORTSER              RESET POINTER
COPYSER2 MVC   0(6,R2),DVOLSER          COPY SERIAL INTO LINE
         LA    R2,10(R2)                INCREMENT POINTER
         ST    R2,SERPTR                SAVE POINTER
         B     GETUCB
         DROP  R5
         AGO   .MVSXA
.MVSNOXA ANOP
***********************************************************************
*                                                                     *
*              FIND UCB ENTRY FOR VOLUME                              *
*                                                                     *
*        IF DEVICES HAVE MULTIPLE PATHS, THERE WILL BE MULTIPLE       *
*        ENTRIES IN THE UCB LOOKUP TABLE, BUT ONLY ONE UCB FOR        *
*        EACH DEVICE.  DVOL WILL SKIP ALTERNATE PATHS.  THE           *
*        LOGIC TO SKIP ALTERNATE PATHS DEPENDS ON THE RESTRICTIONS    *
*        THAT  1.  THE ALTERNATE ADDRESS MUST BE HIGHER THAN THE      *
*                  PRIMARY ADDRESS, AND                               *
*              2.  THAT UCB'S ARE LOCATED IN STORAGE IN ASCENDING     *
*                  ORDER BY PRIMARY UNIT ADDRESS                      *
*                                                                     *
***********************************************************************
*                                                                     *
*        R2  - VOLUME SERIAL ADDRESS                                  *
*        R3  - VOLUME SERIAL (FROM COMMAND LINE) ADDRESS              *
*        R4  - UCB TABLE ADDRESS                                      *
*        R5  - UCB ADDRESS                                            *
*                                                                     *
***********************************************************************
         SPACE 2
GETUCB   L     R3,0(,R8)                LOAD SERIAL ADDRESS
         L     R4,UCBTABLE              LOAD ADDRESS TO START SEARCH
         SR    R5,R5                    CLEAR REGISTER 5
UCBCHECK EQU   *
         AIF   ('&OPSYSTM' EQ 'MVS112').MVSUCB
         LH    R5,0(R4)                 LOAD UCB ADDRESS
         AGO   .USING
.MVSUCB  ICM   R5,3,0(R4)               LOAD UCB ADDRESS
.USING   USING UCB,R5
         LTR   R5,R5                    TEST FOR BLANK ENTRY
         BZ    UCBHOLE
         CLC   0(2,R4),=X'FFFF'         TEST FOR END OF TABLE
         BE    NOUCB
         CLI   UCBTBYT3,UCB3DACC        TEST FOR DIRECT ACCESS
         BNE   UCBHOLE
         CLI   UCBVOLI,X'00'            TEST FOR NO SERIAL
         BE    UCBHOLE
         MVI   UCBNAME,C' '             SAVE UCB ADDRESS          ABL97
         MVC   UCBNAME+1(3),UCBNAME     SAVE UCB ADDRESS          ABL97
         CLI   0(R3),C'*'               ALL VOLUMES?
         BE    UCBHIGH                  YES, BRANCH
         LH    R1,4(R8)                 LOAD VOLUME SERIAL LENGTH
         BCTR  R1,0                     REDUCE LENGTH BY 1
         CLC   0(*-*,R3),UCBVOLI        <<EXECUTED>>
         EX    R1,*-6                   THIS VOLUME?
         BE    UCBHIGH                  YES, BRANCH
         LTR   R1,R1                    POSSIBLE U... FOR UNIT?
         BNP   UCBHOLE                  NO, BRANCH
         CLI   0(R3),C'U'               FIRST CHARACTER OF U?
         BNE   UCBHOLE                  NO, BRANCH
         BCTR  R1,0                     REDUCE LENGTH BY ANOTHER 1
*        CLC   1(*-*,R3),UCBNAME        <<EXECUTED>>              ABL97
         CLC   1(*-*,R3),UCBTEXT        <<EXECUTED>>              ABL97
         EX    R1,*-6                   THIS VOLUME?
         BNE   UCBHOLE                  NO, BRANCH
         SPACE 2
UCBHIGH  C     R5,UCBADDR               CHECK AGAINST LAST UCB ADDRESS
         BH    UCBCONT
UCBHOLE  LA    R4,2(R4)                 INCREMENT TO NEXT UCB
         B     UCBCHECK
UCBCONT  MVC   DVOLSER,UCBVOLI          COPY VOLUME SERIAL
         LA    R4,2(R4)                 LOAD ADDR OF NEXT UCB ENTRY
         ST    R4,UCBNEXT               SAVE ADDRESS
         ST    R5,UCBADDR               STORE THIS UCB ADDRESS
         SPACE 2
         MVC   UCBTABLE,UCBNEXT         SET UCBTABLE ADDR TO NEXT UCB
         CLI   0(R3),C'*'               TEST FOR * (ALL VOLUMES)
         BNE   CONTINUE
         NC    SERONLY,SERONLY          TEST FOR SERONLY
         BZ    CONTINUE
         L     R2,SERPTR                LOAD SERIAL POINTER
         LA    R1,SHORTSER+71           TEST FOR FULL LINE
         CR    R2,R1
         BL    COPYSER2
         LA    R15,SHORTLIN             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL                  DISPLAY LINE
         MVC   SHORTLIN(SHORTLEN),SHORTMDL  CLEAR LINE
         LA    R2,SHORTSER              RESET POINTER
COPYSER2 MVC   0(6,R2),DVOLSER          COPY SERIAL INTO LINE
         LA    R2,10(R2)                INCREMENT POINTER
         ST    R2,SERPTR                SAVE POINTER
         B     GETUCB
         DROP  R5
.MVSXA   ANOP
         L     R7,UCBADDR               LOAD UCB ADDRESS        ABL-410
         USING UCB,R7                   DEFINE BASE REGISTER    ABL-410
         SR    R15,R15             ZERO FOR INSERT              ABL-410
         ICM   R15,B'0111',UCBEXTP-UCBOB(R7) DCE ADDRESS        ABL-410
         BZ    *+8                 NO, BRANCH                   ABL-410
         ICM   R15,B'1111',24(R15) GET DCE                      ABL-410
         STCM  R15,B'1111',ADDRDCE SAVE DCE ADDRESS             ABL-410
.MVS4DON ANOP
         TITLE 'PROCESS UCB INFORMATION'
***********************************************************************
*                                                                     *
*              PROCESS UCB INFORMATION                                *
*                                                                     *
***********************************************************************
*                                                                     *
*        R7  - UCB ADDRESS                                            *
*                                                                     *
***********************************************************************
         SPACE 2
CONTINUE MVC   SHORTSER,DVOLSER         COPY VOLUME SERIAL
         MVI   FOUNDONE,1               OUTPUT NOW
         L     R7,UCBADDR               LOAD UCB ADDRESS
         USING UCB,R7                   DEFINE BASE REGISTER
*        MVC   UNITADDR,UCBNAME         COPY UNIT ADDRESS         ABL97
         MVC   UNITADDR,UCBTEXT         COPY UNIT ADDRESS         ABL97
*        MVC   SHORTUNT,UCBNAME                                   ABL97
         MVC   SHORTUNT,UCBTEXT                                   ABL97
         IC    R15,19(R7)               UNIT TYPE IN HEX
         N     R15,=X'0000000F'         MASK OFF OTHER BITS
         MH    R15,=H'6'                UNIT TYPE * 6
         LA    R15,UNITTBL(R15)         UNIT TYPE NAME
         MVC   UNITTYPE(6),0(R15)       SAVE NAME IN MESSAGE
         MVC   SHORTTYP(6),0(R15)       SAVE NAME IN MESSAGE
*
         ICM   R15,B'1111',ADDRDCE GOOD DCE ADDRESS?            ABL-410
         BZ    TYPEEXIT            NO, BRANCH                   ABL-410
         LA    R14,MODELTBL-4      TABLE OF DEVICE MODIFIERS
*
TYPELOOP LA    R14,4(,R14)             NEXT TABLE ENTRY
         CLI   0(R14),X'FF'            END OF TABLE?
         BE    TYPEEXIT                YES, BRANCH
         CLC   UCBTBYT4-UCBOB(1,R7),0(R14)  MATCH DEVICE TYPE?
         BNE   TYPELOOP                     NO, BRANCH
         CLC   22(1,R15),1(R14)        MATCH DCEMDRDT?
         BNE   TYPELOOP                NO, BRANCH
         MVC   UNITTYPE+4(2),2(R14)    ADD THE DESIGNATOR
         MVC   SHORTTYP+4(2),2(R14)    ADD THE DESIGNATOR
TYPEEXIT DS    0H                                             ABL MAY90
*
*--------MOUNT STATUS
         TM    UCBSTAT,UCBRESV          TEST FOR RESERVED
         BZ    TRYRES
         MVC   MNTSTAT,=CL9'RESERVED'   SET MOUNT STATUS
         MVC   SHORTMNT(6),=CL6'RESRVD' SET MOUNT STATUS
         B     USESTAT
TRYRES   TM    UCBSTAT,UCBPRES          TEST FOR RESIDENT
         BZ    USESTAT
         MVC   MNTSTAT,=CL9'RESIDENT'   SET MOUNT STATUS
         MVC   SHORTMNT(6),=CL6'RESDNT' SET MOUNT STATUS
USESTAT  MVI   SHORTSLA,C'/'
*--------USE STATUS
         TM    UCBSTAB,UCBBPRV          TEST FOR PRIVATE
         BZ    TRYPUB
         MVC   USESTATS,=CL7'PRIVATE'   SET USE STATUS
         B     TESTALOC
TRYPUB   TM    UCBSTAB,UCBBPUB          TEST FOR PUBLIC
         BZ    TRYSTOR
         MVC   USESTATS,=CL7'PUBLIC'    SET USE STATUS
         B     TESTALOC
TRYSTOR  TM    UCBSTAB,UCBBSTR          TEST FOR STORAGE
         BZ    TESTALOC
         MVC   USESTATS,=CL7'STORAGE'   SET USE STATUS
TESTALOC MVC   SHORTUSE(4),USESTATS    COPY USE STATUS
*--------ALLOCATED/UNALLOCATED
         TM    UCBSTAT,UCBALOC          TEST FOR ALLOCATED
         BZ    TESTOFF
         MVC   ALLOCATD,=CL11'ALLOCATED  '
*--------ONLINE/OFFLINE
TESTOFF  TM    UCBSTAT,UCBONLI          TEST FOR ONLINE
         BZ    TESTUNLD
         MVC   ONOFF,=CL17'ONLINE'
         TM    UCBSTAT,UCBCHGS          TEST FOR OFFLINE PENDING
         BZ    TESTUNLD
         MVC   ONOFF,=CL17'OFFLINE PENDING'
         MVC   SHORTMNT(17),ONOFF
*--------PENDING MOUNT/UNLOAD
TESTUNLD TM    UCBSTAT,UCBUNLD          TEST FOR UNLOAD PENDING
         BZ    GETFMT4
         MVC   UNLOAD,=CL17'UNLOAD PENDING'
         MVC   SHORTMNT(17),UNLOAD
***      TM    DVOLFLGB,UCBTICBT        TEST FOR MOUNT PENDING
***      BZ    GETFMT4
***      MVC   UNLOAD,=CL17'MOUNT PENDING'
***      MVC   SHORTMNT(17),UNLOAD
         TITLE 'OBTAIN AND PROCESS FORMAT 4 DSCB (VTOC DSCB)'
***********************************************************************
*                                                                     *
*              OBTAIN FORMAT 4 DSCB (VTOC DSCB)                       *
*                                                                     *
***********************************************************************
         SPACE 2
GETFMT4  CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BNE   GETFMT4A
         LA    R15,LINE1                DISPLAY VOLUME SERIAL AND UNIT
         BAL   R2,PUTL
GETFMT4A XC    TOTAL,TOTAL              ZERO 5 LARGEST EXTENT TOTAL
         MVI   DS4IDFMT,X'00'           ZERO OUT FORMAT 4 ID LOCATION
         MVI   VTOCINDS,X'00'           ZERO OUT VTOC INDICATORS
         TM    DVOLFLGA,DVOLNRDY        TEST FOR NOT READY
         BO    NOTREADY
         DROP  R7
         OBTAIN DVOLDCB4                OBTAIN FORMAT 4 DSCB
         CLI   DS4IDFMT,X'F4'           TEST FIELD IDENTIFIER
         BNE   ERRFMT4
         MVC   DVOLCCHH,DS4VTOCE+2      COPY CCHH OF VTOC
         MVI   DVOLCCHH+4,X'02'         SET RECORD TO 2 FOR FIRST FMT 5
         MVC   TRKPRCYL,DS4DEVSZ+2      COPY TRACKS PER CYLINDER
         MVC   MTDSCBS,DS4DSREC         COPY TRACKS PER CYLINDER
         MVC   VTOCINDS,DS4VTOCI        SAVE VTOC INDICATORS
         BAL   R2,IXINIT                GET INDEXED VTOC IF AVAILABLE
         EJECT
***********************************************************************
*                                                                     *
*              PROCESS VSAM INFORMATION                               *
*                                                                     *
***********************************************************************
         SPACE 2
GETVSAM  TM    DS4VSIND,X'80'           TEST OWNERSHIP BIT
         BZ    ZERO5                    IGNORE VSAM LINE IF NOT OWNED
*ABL     BZ    TIMESTMP
         MVC   OWNERSHP,=C'ON '         INDICATE VOLUME IS OWNED
TIMESTMP UNPK  WORKAREA(9),DS4AMTIM(5)  UNPACK TIMESTAMP 1
         UNPK  WORKAREA+8(9),DS4AMTIM+4(5)
         MVZ   WORKAREA,=XL16'00'       MOVE ZEROS TO ZONES
         TR    WORKAREA,=C'0123456789ABCDEF'  CONVERT TO EBCDIC
         MVC   TIMEST1,WORKAREA         COPY TIMESTAMP 1 TO MESSAGE
         UNPK  WORKAREA(9),DS4R2TIM(5)  UNPACK TIMESTAMP 2
         UNPK  WORKAREA+8(9),DS4R2TIM+4(5)
         MVZ   WORKAREA,=XL16'00'       MOVE ZEROS TO ZONES
         TR    WORKAREA,=C'0123456789ABCDEF'  CONVERT TO EBCDIC
         MVC   TIMEST2,WORKAREA         COPY TIMESTAMP2 TO MESSAGE
         SPACE 2
         CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BE    ZERO5
         MVC   SHORTVSM,OWNERSHP        COPY OWNERSHIP INFORMATION
         TITLE 'OBTAIN FORMAT 5 DSCB (FREE AREA DSCB)'
***********************************************************************
*                                                                     *
*              OBTAIN FORMAT 5 DSCB (FREE AREA DSCB)                  *
*                                                                     *
***********************************************************************
*                                                                     *
*        R0  - TRACKS IN THIS EXTENT                                  *
*        R2  - EXTENTS LEFT TO PROCESS IN THIS DSCB                   *
*        R3  - POINTER TO LOAD ADDRESS TABLE ENTRY                    *
*        R4  - CUMULATIVE CYLINDER COUNT                              *
*        R5  - CUMULATIVE EXCESS TRACK COUNT                          *
*        R6  - ADDRESS OF EXTENT DESCRIPTION (LOADED BY EXECUTE)      *
*        R7  - CUMULATIVE EXTENT COUNT                                *
*                                                                     *
***********************************************************************
         SPACE 2
ZERO5    XC    LARGE5(50),LARGE5        ZERO LARGEST 5 EXTENTS TABLE
         SR    R7,R7                    ZERO EXTENTS
         SR    R4,R4                    ZERO CYLINDERS
         SR    R5,R5                    ZERO TRACKS
OBTFMT5  L     R15,UCBADDR              LOAD UCB ADDRESS
         USING UCB,R15                  ADDRESSABILITY
         TM    DVOLFLGA,DVOLNRDY        TEST NOT READY
         BO    NOTREADY
         DROP  R15
         BAL   R2,IXFMT5                GET THE NEXT FORMAT 5 DSCB
         B     PFGOTIX                  GOT INDEXED VTOC, BRANCH
         SPACE 1
         OBTAIN DVOLDCB5                READ FORMAT 5 DSCB
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   ERRFMT5
PFGOTIX  CLI   DS5FMTID,X'F5'           TEST FORMAT 5 ID
         BNZ   PFGOTIX7                 NO, TRY FOR 7
         LA    R2,26                    LOAD EXTENTS PER DSCB
         SR    R3,R3                    ZERO POINTER
DVOLLOAD EX    R0,FMT5ADDR(R3)          LOAD ADDRESS OF EXTENT DESCR
         NC    0(5,R6),0(R6)            TEST FOR LAST EXTENT
         BE    ENDFMT5
         SR    R0,R0                    CLEAR REGISTER
         MVC   HALF,2(R6)               COPY NUMBER OF CYLINDERS
         LH    R1,HALF                  LOAD NUMBER OF CYLINDERS
         IC    R0,4(R6)                 LOAD NUMBER OF TRACKS
         AR    R4,R1                    ACCUMULATE CYLINDERS
         AR    R5,R0                    ACCUMULATE TRACKS
         LA    R7,1(R7)                 INCREMENT EXTENT COUNT
         MH    R1,TRKPRCYL              MULT CYLS BY TRKS PER CYL
         AR    R0,R1                    TOTAL TRACKS THIS EXTENT
         TITLE 'SEE IF EXTENT IS ONE OF 5 LARGEST'
***********************************************************************
*                                                                     *
*              SEE IF CURRENT EXTENT IS ONE OF 5 LARGEST              *
*                                                                     *
***********************************************************************
*                                                                     *
*        R0  - TRACKS IN THIS EXTENT                                  *
*        R1  - EXTENT TABLE COUNTER                                   *
*        R6  - ADDRESS OF EXTENT DESCRIPTION                          *
*        R14 - CHARACTERS TO BE MOVED, ADDR OF EXTENT ENTRY           *
*              R2, R3, R4, R5, AND R7 MUST BE PRESERVED               *
*                                                                     *
***********************************************************************
         SPACE 2
         SR    R14,R14                  ZERO CHARACTERS
         LA    R1,5                     LOAD COUNT
COMPARE  C     R0,LARGE5(R14)           COMPARE TOTAL TRACKS
         BNH   NOTLARGE
         LA    R14,10(R14)              INCREMENT COUNT BY 10
         BCT   R1,COMPARE
NOTLARGE SH    R14,=H'10'
         LTR   R14,R14                  TEST COUNT
         BM    NEXTFREE
         BZ    ADDEXTNT
         BCTR  R14,0                    REDUCE COUNT BY 1
         EX    R14,MOVEXTNT             COPY EXTENT DESCRIPTIONS
         LA    R14,1(R14)               ADD 1 TO COUNT
ADDEXTNT LA    R14,LARGE5(R14)          LOAD ADDRESS FOR THIS EXTENT
         ST    R0,0(R14)                STORE NUMBER OF TRACKS
         MVC   6(3,R14),2(R6)           COPY CYLINDERS AND TRACKS
NEXTFREE LA    R3,4(R3)                 INCREMENT POINTER
         BCT   R2,DVOLLOAD              DECREMENT EXTENT COUNTER
         SPACE 2
***********************************************************************
*                                                                     *
*              FINISHED WITH FORMAT 5 DSCB                            *
*                                                                     *
***********************************************************************
         SPACE 2
         NC    DS5PTRDS,DS5PTRDS        TEST FOR ANOTHER FMT5
         BE    ENDFMT5
         MVC   DVOLCCHH,DS5PTRDS        COPY ADDRESS OF NEXT FMT5 DSCB
         B     OBTFMT5
PFGOTIX7 CLI   DS5FMTID,X'F7'           TEST FORMAT 7 ID
         BNZ   ERRFMT5
         LA    R2,16                    LOAD EXTENTS PER DSCB
         SR    R3,R3                    ZERO POINTER
DVOLLOD7 EX    R0,FMT7ADDR(R3)          LOAD ADDRESS OF EXTENT DESCR
         NC    0(8,R6),0(R6)            TEST FOR LAST EXTENT
         BE    ENDFMT5
         XC    STARTC(16),STARTC        CLEAR ACCUMULATORS
         SR    R0,R0
         L     R1,0(,R6)                BEGINNING OF THIS EXTENT
         LH    R15,TRKPRCYL             TRKS PER CYL
         DR    R0,R15                   DIVIDE
         LTR   R0,R0                    ANY ODD TRACKS INTO EXTENT?
         BZ    DVOLEXT1                 NO, BRANCH
         AH    R1,=H'1'                 YES, ONE LESS WHOLE CYLINDER
         SR    R15,R0                   TRACKS LEFT IN CYLINDER
         LR    R0,R15                   TRACKS LEFT IN CYLINDER
DVOLEXT1 ST    R1,STARTC                SAVE STARTING CYLINDER
         ST    R0,STARTT                SAVE STARTING TRACK
         SR    R0,R0
         L     R1,4(,R6)                END OF THIS EXTENT
         LH    R15,TRKPRCYL             TRKS PER CYL
         DR    R0,R15                   DIVIDE
         C     R1,STARTC                END:START CYLINDER
         BE    DVOLEXT2                   EQUAL, BRANCH
         BL    DVOLEXT3                   LESS, BRANCH
*  END GREATER THAN START CYLINDER
         S     R1,STARTC                NUMBER OF WHOLE CYLINDERS
         A     R0,STARTT                TRACKS LEFT IN EXTENT
         B     DVOLEXT7
*  END SAME AS START CYLINDER
DVOLEXT2 SR    R1,R1                    NO CYLINDERS SPANNED
         A     R0,STARTT                TRACKS LEFT IN EXTENT
         B     DVOLEXT7
*  END LESS THAN START CYLINDER (STARTED ON SAME CYLINDER ACTUALLY)
DVOLEXT3 SR    R1,R1                    NO CYLINDERS SPANNED
         SR    R15,R0                   TRACKS LEFT IN SECOND CYLINDER
         L     R0,STARTT                TRACKS LEFT IN FIRST CYLINDER
         SR    R0,R15                   TRACKS IN THIS EXTENT
DVOLEXT7 ST    R1,TOTALC                SAVE STARTING CYLINDER
         ST    R0,TOTALT                SAVE TOTAL TRACKS
         AR    R4,R1                    ACCUMULATE CYLINDERS
         AR    R5,R0                    ACCUMULATE TRACKS
         LA    R7,1(R7)                 INCREMENT EXTENT COUNT
         L     R0,4(,R6)                END OF THIS EXTENT
         S     R0,0(,R6)                LESS BEGINNING OF THIS EXTENT
         TITLE 'SEE IF EXTENT IS ONE OF 5 LARGEST'
***********************************************************************
*                                                                     *
*              SEE IF CURRENT EXTENT IS ONE OF 5 LARGEST              *
*                                                                     *
***********************************************************************
*                                                                     *
*        R0  - TRACKS IN THIS EXTENT                                  *
*        R1  - EXTENT TABLE COUNTER                                   *
*        R6  - ADDRESS OF EXTENT DESCRIPTION                          *
*        R14 - CHARACTERS TO BE MOVED, ADDR OF EXTENT ENTRY           *
*              R2, R3, R4, R5, AND R7 MUST BE PRESERVED               *
*                                                                     *
***********************************************************************
         SPACE 2
         SR    R14,R14                  ZERO CHARACTERS
         LA    R1,5                     LOAD COUNT
COMPARE7 C     R0,LARGE5(R14)           COMPARE TOTAL TRACKS
         BNH   NOTLARG7
         LA    R14,10(R14)              INCREMENT COUNT BY 10
         BCT   R1,COMPARE7
NOTLARG7 SH    R14,=H'10'
         LTR   R14,R14                  TEST COUNT
         BM    NEXTFRE7
         BZ    ADDEXTN7
         BCTR  R14,0                    REDUCE COUNT BY 1
         EX    R14,MOVEXTNT             COPY EXTENT DESCRIPTIONS
         LA    R14,1(R14)               ADD 1 TO COUNT
ADDEXTN7 LA    R14,LARGE5(R14)          LOAD ADDRESS FOR THIS EXTENT
         ST    R0,0(R14)                STORE NUMBER OF TRACKS
         MVC   4(4,R14),TOTALC          COPY CYLINDERS
         MVC   8(1,R14),TOTALT+3        COPY TRACKS
NEXTFRE7 LA    R3,4(R3)                 INCREMENT POINTER
         BCT   R2,DVOLLOD7              DECREMENT EXTENT COUNTER
         SPACE 2
***********************************************************************
*                                                                     *
*              FINISHED WITH FORMAT 5 DSCB                            *
*                                                                     *
***********************************************************************
         SPACE 2
         NC    DS5PTRDS,DS5PTRDS        TEST FOR ANOTHER FMT5
         BE    ENDFMT5
         MVC   DVOLCCHH,DS5PTRDS        COPY ADDRESS OF NEXT FMT5 DSCB
         B     OBTFMT5
MODELTBL DC    X'0E1C',C'D '           3380D
         DC    X'0E1B',C'E '           3380E
         DC    X'0E21',C'J '           3380J
         DC    X'0E23',C'K '           3380K
         DC    X'0F26',C'M1'           3390M1
         DC    X'0F27',C'M2'           3390M2
         DC    X'0F24',C'M3'           3390M3
         DC    X'0F31',C'OP'           3390 OPTICAL (LIKE M3)
         DC    X'0F32',C'M9'           3390M9
         DC    X'FF'                   END OF TABLE
         DS    0H
         TITLE 'DEVICE NOT READY'
***********************************************************************
*                                                                     *
*              DEVICE NOT READY                                       *
*                                                                     *
***********************************************************************
NOTREADY MVC   UNLOAD,=CL17'NOT READY'  INDICATE NOT READY
         MVC   SHORTMNT(17),UNLOAD
         CLC   OUTFORM,=H'1'            TEST OUTPUT FORMAT
         BE    INCRVOL
         LA    R15,LINE2                DISPLAY HELD LINE
         BAL   R2,PUTL
         B     INCRVOL
         TITLE 'FORMAT AND DISPLAY LINE'
***********************************************************************
*                                                                     *
*              FORMAT AND DISPLAY LINE                                *
*                                                                     *
***********************************************************************
*                                                                     *
*        R4  - CYLINDER COUNT                                         *
*        R5  - EXCESS TRACK COUNT                                     *
*        R7  - EXTENT COUNT                                           *
*                                                                     *
***********************************************************************
         SPACE 2
ENDFMT5  BAL   R2,IXTERM                FIX FREE DSCB'S AND QUIT
         LH    R1,MTDSCBS
         CVD   R1,DVOLDEC
         MVC   EDITFLD,=X'4020202020202120'
         ED    EDITFLD,DVOLDEC+4
         MVC   DSCBS,EDITFLD+4-1
         SPACE 1
         CLC   OUTFORM,=H'1'            TEST OUTPUT FORMAT
         BNE   ENDFMT5A
         MVC   SHORTDCB,DSCBS           COPY NUMBER OF DSCB'S
         SPACE 2
ENDFMT5A CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BNE   ENDFMT5B
         LA    R15,LINE2                DISPLAY HELD LINES
         BAL   R2,PUTL
         CLI   OWNERSHP+1,C'F'          VSAM OWNERSHIP OFF?
         BE    TESTDOS                  YES, IGNORE IF NOT OWNED
         LA    R15,LINE3
         BAL   R2,PUTL
*--------PROCESS VTOC INDICATORS
TESTDOS  TM    VTOCINDS,X'08'
         BZ    TESTDIRF
         SPACE 2
         LA    R15,DOS                  LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
TESTDIRF TM    VTOCINDS,X'04'
         BZ    BLKDSCBS
         LA    R15,DAMAGED              LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
BLKDSCBS LA    R15,BLDSCBS              DISPLAY HELD LINE
         BAL   R2,PUTL
         SPACE 2
         TM    VTOCINDS,DS4IVTOC        THIS VTOC INDEXED?
         BZ    ENDFMT5B                 IF NO, DONE
         L     R1,IXCT2                 FREE VIR'S
         CVD   R1,DVOLDEC
         MVC   EDITFLD,=X'4020202020202120'
         ED    EDITFLD,DVOLDEC+4
         MVC   DSCBVIR,EDITFLD+4-1
         LA    R15,BLDSVIR              DISPLAY HELD LINE
         BAL   R2,PUTL
         SPACE 2
ENDFMT5B CLC   LARGE5+50-10(4),=F'0'    TEST FOR NO SPACE ON PACK
         BE    NOSPACE
         CVD   R7,DVOLDEC
         MVC   EDITFLD,=X'4020202020202120'
         ED    EDITFLD,DVOLDEC+4
         MVC   EXTENTS,EDITFLD+4-1
         CVD   R4,DVOLDEC
         MVC   EDITFLD,=X'4020202020202120'
         ED    EDITFLD,DVOLDEC+4
         MVC   CYLS,EDITFLD+4-1
         MH    R4,TRKPRCYL              CONVERT TOTAL TRACKS
         AR    R4,R5
         CVD   R4,DVOLDEC
         MVC   EDITFLD,=X'4020202020202120'
         ED    EDITFLD,DVOLDEC+4
         MVC   TRACKS,EDITFLD+3-1
         SPACE 2
         CLC   OUTFORM,=H'1'
         BNE   DISPLAY4
         MVC   SHORTTOT,TRACKS
         MVC   SHORTEXT,EXTENTS
         MVC   SHORTCYL,CYLS
         B     GETCYLTR
         SPACE 2
DISPLAY4 LA    R15,FREEMSG1             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         TITLE 'DISPLAY LARGEST EXTENTS AS CYL+TR'
***********************************************************************
*                                                                     *
*              DISPLAY LARGEST EXTENTS AS CYL+TR                      *
*                                                                     *
***********************************************************************
*                                                                     *
*        R4  - DESCRIPTION COUNTER                                    *
*        R5  - TABLE ENTRY POINTER                                    *
*        R6  - OUTPUT LINE POINTER                                    *
*                                                                     *
***********************************************************************
         SPACE 2
GETCYLTR LA    R4,5                     SET COUNTER
         LA    R5,LARGE5+50-10          SET POINTER
         LA    R6,LRGXTNT1-1            SET POINTER
LOOP1    CLC   0(4,R5),=F'0'            TEST FOR END OF LIST
         BE    ENDLOOP1
         L     R3,4(R5)                 LOAD CYLINDERS
         CVD   R3,DVOLDEC               CONVERT TO DECIMAL
         MVC   EDITFLD,=X'4020202020202120'
         ED    EDITFLD,DVOLDEC+4
         MVC   0(4+1,R6),EDITFLD+4-1    MOVE CYLINDERS TO MESSAGE
         MVI   4+1(R6),C'+'             MOVE + SIGN
         SR    R3,R3                    CLEAR REGISTER
         IC    R3,8(R5)                 LOAD TRACKS
         CVD   R3,DVOLDEC               CONVERT TO DECIMAL
         MVC   EDITFLD,=X'4020202020202120'  SET UP EDIT MASK
         ED    EDITFLD,DVOLDEC+4        EDIT TRACKS
         MVC   5+1(2,R6),EDITFLD+6      MOVE TRACKS INTO MESSAGE
         MVI   7+1(R6),C'/'             MOVE /
         SH    R5,=H'10'                POINT TO NEXT DESCRIPTION
         LA    R6,8+1(R6)               POINT TO NEXT OUTPUT DESCR
         BCT   R4,LOOP1                 DECREMENT COUNT AND LOOP
         SPACE 2
ENDLOOP1 CLC   OUTFORM,=H'1'            TEST OUTPUT FORMAT
         BNE   DISPLAY5
         MVC   SHORT1CL,LRGXTNT1-1      COPY CYLINDERS IN LARGEST EXTNT
         MVC   SHORT1TR,LRGXTNT1+5      COPY TRACKS IN LARGETS EXTENT
         MVI   SHORT1CL+4+1,C'+'        ADD A +
         B     GETTRKS
         SPACE 2
DISPLAY5 LA    R15,FREEMSG2             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         TITLE 'DISPLAY LARGEST EXTENTS AS TRACKS'
***********************************************************************
*                                                                     *
*              DISPLAY LARGEST EXTENTS AS TRACKS                      *
*                                                                     *
***********************************************************************
*                                                                     *
*        R4  - DESCRIPTION COUNTER                                    *
*        R5  - TABLE ENTRY POINTER                                    *
*        R6  - OUTPUT LINE POINTER                                    *
*        R7  - CUMULATIVE TRACK COUNTER                               *
*                                                                     *
***********************************************************************
         SPACE 2
GETTRKS  LA    R4,5                     SET COUNT
         LA    R5,LARGE5+50-10          SET POINTER
         LA    R6,LRGXTNT2-1            SET POINTER
         SR    R7,R7                    ZERO 5 LARGEST EXTENTS TOTAL
LOOP2    CLC   0(4,R5),=F'0'            TEST FOR END OF TABLE
         BE    ENDLOOP2
         L     R3,0(R5)                 LOAD TOTAL TRACKS IN EXTENT
         AR    R7,R3                    ACCUMULATE TOTAL
         CVD   R3,DVOLDEC               CONVERT TO DECIMAL
         MVC   EDITFLD,=X'4020202020202120'  SET EDIT MASK
         ED    EDITFLD,DVOLDEC+4        EDIT TRACKS
         MVC   0+1(7,R6),EDITFLD+1      MOVE INTO MESSAGE
         MVI   7+1(R6),C'/'             MOVE / INTO MESSAGE
         SH    R5,=H'10'                POINT TO NEXT EXTENT ENTRY
         LA    R6,8+1(R6)               POINT TO NEXT OUTPUT DESCR
         BCT   R4,LOOP2                 DECREMENT COUNT AND LOOP
         SPACE 2
ENDLOOP2 CLC   OUTFORM,=H'1'            TEST OUTPUT FORMAT
         BNE   DISPLAY6
         MVC   SHORTLRG,LRGXTNT2+2-1    COPY TRACKS IN LARGEST EXTENT
         CVD   R7,DVOLDEC               CONVERT TOTAL OF 5 LARGEST
         MVC   EDITFLD,=X'4020202020202120'  MOVE IN EDIT MASK
         ED    EDITFLD,DVOLDEC+4        EDIT VALUE
         MVC   SHORT5XT,EDITFLD+3-1     COPY TO OUTPUT LINE
         B     CALCRC
         SPACE 2
DISPLAY6 LA    R15,FREEMSG3             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         SPACE 2
CALCRC   MVC   TOTAL,=H'4095'           SET TOTAL = 4095 (LARGEST)
         C     R7,=F'4095'              COMPARE TOTAL TO 4095
         BH    INCRVOL
         STH   R7,TOTAL                 STORE TOTAL
         B     INCRVOL
         TITLE 'NO SPACE ON VOLUME'
***********************************************************************
*                                                                     *
*              NO SPACE ON VOLUME                                     *
*                                                                     *
***********************************************************************
         SPACE 2
NOSPACE  CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BE    NOSPACE2
         MVC   SHORTTOT(29),VOLFULL+4   MOVE NO SPACE MESSAGE
         B     INCRVOL
NOSPACE2 LA    R15,VOLFULL              LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     INCRVOL
         TITLE 'END OF UCB TABLE REACHED'
***********************************************************************
*                                                                     *
*              END OF UCB TABLE REACHED                               *
*                                                                     *
***********************************************************************
*                                                                     *
*        R8  - PDE POINTER                                            *
*                                                                     *
***********************************************************************
         SPACE 2
NOUCB    L     R3,0(R8)
         CLI   0(R3),C'*'
         BE    TSERONLY
         CLI   FOUNDONE,1               ANY FOUND?
         BE    NEXTONE                  YES, BRANCH
         MVC   VOLSER,DVOLSER           SERIAL NOT FOUND - SET UP MSG
         SPACE 2
         CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BE    PRTNOSER
         MVC   SHORTDCB(23),NOSER+13
         LA    R15,SHORTLIN             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     NEXTONE
PRTNOSER LA    R15,NOSER                LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     NEXTONE
TSERONLY NC    SERONLY,SERONLY          TEST FOR SERONLY
         BZ    RETURN
         LA    R15,SHORTLIN             LOAD LINE ADDRESS
         BAL   R2,PUTL                  DISPLAY LINE
         B     RETURN
         TITLE 'ERRORS'
***********************************************************************
*                                                                     *
*              ERROR READING FORMAT 4 DSCB                            *
*                                                                     *
***********************************************************************
         SPACE 2
ERRFMT4  CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BE    PRNTFMT4
         MVC   SHORTDCB(27),FMT4BAD+4
         B     INCRVOL
PRNTFMT4 LA    R15,FMT4BAD              LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     INCRVOL
         SPACE 2
***********************************************************************
*                                                                     *
*              ERROR READING FORMAT 5 DSCB                            *
*                                                                     *
***********************************************************************
         SPACE 2
ERRFMT5  CLC   OUTFORM,=H'2'            TEST OUTPUT FORMAT
         BE    PRNTFMT5
         MVC   SHORTDCB(27),FMT5BAD+4
         B     INCRVOL
PRNTFMT5 LA    R15,FMT5BAD              LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     INCRVOL
         EJECT
***********************************************************************
*                                                                     *
*              UNABLE TO PARSE COMMAND OPERANDS                       *
*                                                                     *
***********************************************************************
         SPACE 2
ERRPARS  LA    R15,PARSERR              LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         LA    R15,0                    SET RETURN CODE
         B     RETURN2
         TITLE 'FINISHED PROCESSING VOLUME'
***********************************************************************
*                                                                     *
*              FINISHED THIS VOLUME - GO TO NEXT VOLUME               *
*                                                                     *
***********************************************************************
*                                                                     *
*        R8  - PDE POINTER                                            *
*                                                                     *
***********************************************************************
         SPACE 2
INCRVOL  CLC   OUTFORM,=H'1'            TEST OUTPUT FORMAT
         BNE   DISPLAY9
         LA    R15,SHORTLIN             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     NEXTVOL                  REPEAT FOR ALL MATCHES
         SPACE 2
DISPLAY9 LA    R15,BLANKLIN             LOAD OUTPUT LINE ADDRESS
         BAL   R2,PUTL
         B     NEXTVOL                  REPEAT FOR ALL MATCHES
         SPACE 2
NEXTONE  L     R8,8(R8)                 LOAD NEXT PDE ADDRESS
         C     R8,=X'FF000000'          TEST FOR END OF LIST
         BNE   NEXTPARM
         B     RETURN
         TITLE 'INDEXED VTOC INTERFACE'
********************************************************************CST
*                                                                   CST
*  ROUTINES ADDED TO INTERFACE WITH INDEXED VTOCS.  THE FOLLOWING   CST
*  STEPS ARE NEEDED                                                 CST
*     1.  FIND UCB ADDRESS IN ORDER TO PASS UNIT ADDRESS TO         CST
*         DYNAMIC ALLOCATE.                                         CST
*     2.  DYNAMICALLY ALLOCATE VTOC                                 CST
*     3.  OPEN VTOC                                                 CST
*     4.  CALL IXTOFMT5 TO RETURN PSUEDO FORMAT-5S                  CST
*     5.  CLOSE VTOC                                                CST
*     6.  DEALLOCATE VTOC                                           CST
* ZZZZ                                                              CST
********************************************************************CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X I N I T                                                      CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  INITIALIZE FOR READING IX VTOC                                   CST
*                                                                   CST
IXINIT   XC    IXWORD,IXWORD           ZERO WORK WORD FOR 1ST CALL  CST
         TM    VTOCINDS,DS4IVTOC       THIS VTOC INDEXED?           CST
         BZR   R2                      IF NO, QUIT                  CST
*                                                                   CST
*  DYNALLOC VTOC                                                    CST
*                                                                   CST
         L     R1,UCBADDR              UCB ADDRESS                  ABL
         USING UCB,R1                                               ABL
*        MVC   IXKUNT+6(3),UCBNAME     SET UP DYNALOC UNIT.       ABL97
*                         /1234                                   ABL97
*                         ----1----+----2                         ABL97
         MVC   IXKUNT+7(4),UCBTEXT     SET UP DYNALOC UNIT.       ABL97
         CLI   IXKUNT+7,C' '  BLANK FIRST DIGIT?                  ABL97
         BNE   USE4           NO, BRANCH                          ABL97
         MVI   IXKUNT+5,3     RESET THE UCB LENGTH                ABL97
         MVC   IXKUNT+6(3),IXKUNT+8  MOVE DOWN A 3 DIGIT UCB ADDR ABL97
USE4     DS    0H                                                 ABL97
         MVC   IXKVOL+6(6),UCBVOLI     SET UP DYNALOC VOL.          ABL
         DROP  R1                      DROP UCB ADDRESSING          ABL
         LA    R1,AIX99RBA             POINT TO PARM LIST           CST
         DYNALLOC                      CALL SVC99                   CST
         LTR   R15,R15                 DID IT WORK?                 CST
         BZ    *+8                     BIF YES                      CST
         EX    0,*                     ELSE DIE                     CST
*                                                                   CST
* OPEN VTOC                                                         CST
*                                                                   CST
         MVC     IXDCB+DCBDDNAM(8),IXKDDN+6  MOVE DDNAME TO DCB     CST
         RDJFCB  IXDCB                 READ IN JFCB                 CST
         MVC   IXJFCB(44),=44XL1'04'   DSNAME FOR VTOC              CST
         OPEN  (IXDCB,(INPUT)),TYPE=J  OPEN VTOC                    CST
         TM    IXDCB+48,X'10'          DID IT WORK?                 CST
         BOR   R2                      YES. ALL READY.              CST
         EX    0,*                     NO. FAIL.                    CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X F M T 5                                                      CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  GET A PSUEDO FORMAT-5 FROM AN IX VTOC                            CST
*                                                                   CST
IXFMT5   TM    VTOCINDS,DS4IVTOC       VTOC IS INDEXED?             CST
         BZ    4(,R2)                  IF NOT, SKIP                 CST
         LA    R1,VTOCFMT5             POINT TO OUTPUT AREA         ABL
         ST    R1,IXPARM+16            PASS TO IXTOFMT5 ROUTINE     ABL
         LA    R1,IXPARM               POINT TO PARMLIST            CST
         L     R15,=V(IXTOFMT5)        POINT TO ROUTINE             CST
         BALR  R14,R15                 CALL INTERFACE ROUTINE       CST
         LTR   R15,R15                 DID IT WORK?                 CST
         BZR   R2                      IF SO, CONTINUE              CST
         EX    0,*                     ELSE DIE.                    CST
         SPACE 4                                                    CST
********************************************************************CST
*                                                                   CST
*  I X T E R M                                                      CST
*                                                                   CST
********************************************************************CST
*                                                                   CST
*  CLOSE VTOC DCB AND FREE ALLOCATION                               CST
*                                                                   CST
IXTERM   TM    VTOCINDS,DS4IVTOC       VTOC IS INDEXED?             CST
         BZR   R2                      IF NOT, SKIP                 CST
*                                                                   CST
*  CORRECT DSCB COUNT AND GET VIRS FOR STAFF                        CST
*                                                                   CST
         L     R1,IXCT1                USE DSCB 0 COUNT FROM IX     CST
         STH   R1,MTDSCBS              UPDATE THE EMPTY COUNT       ABL
         CLOSE IXDCB                   CLOSE THE VTOC               CST
         MVC   IXKDDN2+6(8),IXKDDN+6   MOVE DDNAME TO DEALLOC LIST  CST
         LA    R1,AIX99RBF             POINT TO PARMLIST            CST
         DYNALLOC                      FREE VTOC                    CST
         LTR   R15,R15                                              CST
         BZR   R2                      RETURN                       CST
         EX    0,*                     RETURN                       CST
         EJECT ,                                                    CST
*                                                                   CST
*  PARMLIST FOR INTERFACE ROUTINE                                   CST
*                                                                   CST
IXPARM   DC    A(IXWORD)               @ WORK WORD                  CST
         DC    A(IXDCB)                @ VTOC DCB                   CST
         DC    A(IXCT1)                @ CNT - FREE FMT 0S          CST
         DC    A(IXCT2)                @ CNT - FREE VIRS            CST
         DC    A(VTOCFMT5-VTOCFMT5)    @ BFR FOR FMT5               CST
IXWORD   DC    F'0'                    WORK WORD                    CST
IXCT1    DC    F'0'                    COUNT FREE FMT0              CST
IXCT2    DC    F'0'                    COUNT FREE VIRS              CST
         SPACE 2                                                    CST
*                                                                   CST
*  PARMLIST FOR VTOC ALLOCATE                                       CST
*                                                                   CST
         PRINT GEN,DATA                                             CST
AIX99RBA DC    0F'0',X'80',AL3(IX99RBAL)                            CST
IX99RBAL DC    AL1(20,1)               LENGTH, VERB                 CST
         DC    X'4000'                 FLAG1 (DON'T USE EXISTING)   CST
         DC    AL2(0,0)                ERROR CODE, INFO CODE        CST
         DC    A(IX99TXT1)             @ TEXT UNITS                 CST
         DC    2F'0'                   RSVD, FLAG2                  CST
IX99TXT1 DC    A(IXKDDN,IXKVOL,IXKUNT,IXKOLD)                       CST
         DC    X'80',AL3(IXKKEP)                                    CST
IXKDDN   DC    AL2(85,1,8),C'SYS99999' DDNAME ASSIGNED              CST
IXKVOL   DC    AL2(16,1,6),C'XXXXXX'   VOL=SER=                     CST
IXKUNT   DC    AL2(21,1,5),C'/ UCB'    UNIT=                      ABL97
IXKOLD   DC    AL2(4,1,1),X'01'        DISP=OLD                     CST
IXKKEP   DC    AL2(5,1,1),X'08'        DISP=KEEP                    CST
         SPACE 4                                                    CST
*                                                                   CST
*  PARMLIST FOR VTOC DEALLOCATE                                     CST
*                                                                   CST
AIX99RBF DC    0F'0',X'80',AL3(IX99RBFR)                            CST
IX99RBFR DC    AL1(20,2)               LENGTH, VERB                 CST
         DC    X'0000'                 FLAG1                        CST
         DC    AL2(0,0)                ERROR CODE, INFO CODE        CST
         DC    A(IX99TXT2)             @ TEXT UNITS                 CST
         DC    2F'0'                   RSVD, FLAG2                  CST
         SPACE 2                                                    CST
IX99TXT2 DC    A(IXKDDN2),X'80',AL3(IXKKEP)                         CST
IXKDDN2  DC    AL2(1,1,8),C'SYS99999'  DDNAME ASSIGNED              CST
         PRINT GEN,NODATA                                           CST
         SPACE 4                                                    CST
*                                                                   CST
*  MISC CONSTANTS AND EQUATES                                       CST
*                                                                   CST
CVTILK2  EQU   40                      OFFSET TO LOOKUP TABLE       CST
CVTUCBSE EQU   1076                    ADDRESS OF UCB SCAN SERVICE  ABL
DCBDDNAM EQU   40                      OFFSET TO DDNAME             CST
         SPACE 2                                                    CST
*                                                                   CST
*  DCB AND JFCB FOR VTOC                                            CST
*                                                                   CST
IXLST    DC    0F'0',X'87',AL3(IXJFCB)                              CST
IXJFCB   DC    XL176'00'                                            CST
         PRINT NOGEN                                                CST
IXDCB    DCB   DSORG=PS,MACRF=(E),EXLST=IXLST,DDNAME=NONE           CST
         PRINT GEN                                                  CST
         SPACE 4                                                    CST
         TITLE 'EXIT CODING'
***********************************************************************
*                                                                     *
*              FREE STORAGE, SET RETURN CODE, AND RETURN              *
*                                                                     *
***********************************************************************
         SPACE 2
RETURN   IKJRLSA DVOLANS                RELEASE PARSE STORAGE
         TM    FLAGS2,$HARDCPY         TEST FOR HARDCOPY OPTION
         BZ    $$EXIT2                 SKIP CLOSE HARDCOPY NOT OPEN
         LA    R1,HARDOPEN             LOAD OPEN LIST FORM ADDRESS
         LA    R2,HARDCPY              LOAD DCB ADDRESS
         CLOSE ((R2)),MF=(E,(R1))      CLOSE HARDCPY DCB
$$EXIT2  DS    0H
         LH    R15,TOTAL                SAVE 5 LARGEST EXTENTS TOTAL
RETURN2  $RTRN RC=(R15),RENT=DSECTLEN   RETURN
         TITLE 'DISPLAY OUTPUT SUBROUTINE'
***********************************************************************
*                                                                     *
*              DISPLAY OUTPUT                                         *
*                                                                     *
***********************************************************************
         SPACE 2
PUTL     LH    R3,0(R15)                LOAD DATA LENGTH
         BCTR  R3,0                     BRANCH ON COUNT
         EX    R3,MOVELINE              MOVE DATA TO OUTPUT LINE
         CLC   NOPRINT,=H'2'            SEE IF OUTPUT SUPPRESSED
         BE    PUTLHPDS
         PUTLINE OUTPUT=(DVOLHEDR,,,DATA),MF=(E,DVOLIOPL)
PUTLHPDS ICM   R15,15,PDSMSGA          LOAD ADDRESS OF PDS
         BZ    NOTPDS                  NO
         LA    R1,OUTLINE-1            OUTPUT LINE
         BALR  R14,R15                 INVOKE THE PDS OUTPUT ROUTINE
         LTR   R15,R15                 SUCCESSFUL OUTPUT?
         BNZ   RETURN                  NO, **ATTENTION** EXIT
NOTPDS   DS    0H
PUTLHCPY TM    FLAGS2,$HARDCPY          SEE IF HARCOPY WANTED
         BZ    PUTLBACK                 NO, SO GO ON BACK
         PUT   HARDCPY,OUTLINE          WRITE OUTPUT LINE
         MVC   OUTLINE,BLANKS           CLEAR OUTPUT LINE
PUTLBACK BR    R2
         TITLE 'DCB EXIT ROUTINE'
***********************************************************************
*                                                                     *
*              DCB EXIT ROUTINE (INITIALIZE LRECL AND BLKSIZE)        *
*                                                                     *
***********************************************************************
EXITDCB  DC    0F'0',X'85',AL3(DCBEXIT)
DCBEXIT  LA    R15,80                     DEFAULT LRECL
         LH    R0,82(,R1)                 LRECL
         LTR   R0,R0                      ANY LRECL
         BNZ   *+8                        YES, BRANCH
         STH   R15,82(,R1)                NO, USE THE DEFAULT
         LA    R15,3120                   DEFAULT BLKSIZE
         LH    R0,62(,R1)                 BLKSIZE
         LTR   R0,R0                      ANY BLKSIZE
         BNZ   *+8                        YES, BRANCH
         STH   R15,62(,R1)                NO, USE THE DEFAULT
         BR    R14                        EXIT
         TITLE 'CONSTANT DATA AREAS'
***********************************************************************
*                                                                     *
*              LITERAL POOL                                           *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*              CONSTANT STORAGE                                       *
*                                                                     *
***********************************************************************
         SPACE 2
FMT4BAD  #TSOMSG 'ERROR READING FORMAT 4 DSCB',LENGTH=80
         SPACE
FMT5BAD  #TSOMSG 'ERROR READING FORMAT 5 DSCB',LENGTH=80
         SPACE
VOLFULL  #TSOMSG 'VOLUME CONTAINS NO FREE SPACE',LENGTH=80
         SPACE
PARSERR  #TSOMSG 'UNABLE TO INTERPRET COMMAND',LENGTH=80
         SPACE
DOS      #TSOMSG '*** WARNING - VOLUME MAY CONTAIN DOS DATA SETS',     +
               LENGTH=80
         SPACE
UNITTBL  DC      C'??????????????????????  9345????????'
         DC      C'2305-12305-22314  3330  3340  3350  '
         DC      C'3375  3330-13380  3390  '
         SPACE
DAMAGED  #TSOMSG '*** WARNING - VTOC DAMAGE BIT IS SET.  PLEASE NOTIFY +
               YOUR SYSTEMS PROGRAMMER',LENGTH=80
         SPACE
SHORT1   #TSOMSG 'SERIAL  --UNIT--   ATTRIBUTES VSAM AVAIL -----TOTALS-+
               ---- LARGEST-EXTENT 5 EXTS',LENGTH=80
SHORT2   #TSOMSG '       ADDR TYPE   MOUNT/USE      DSCBS TRACKS  EXT  +
               CYL  CYL+TR  TRACKS TRACKS',LENGTH=80
         SPACE
BLANKLIN #TSOMSG ' ',LENGTH=80
BADOPEN  #TSOMSG   'UNABLE TO OPEN HARDCOPY DCB - HARDCOPY CANCELLED', +
               LENGTH=80
         SPACE
FLAGS2   DS    X                         HARDCOPY OPTION SWITCH
$HARDCPY EQU   X'10'  ...1 ....          HARDCOPY OPTION REQUESTED
*                     XXX. XXXX          NOT USED
         SPACE
DSNAME   DC    44X'04'
         EJECT
***********************************************************************
*                                                                     *
*              PUTLINE, CAMLST, AND MESSAGE MODELS                    *
*                                                                     *
***********************************************************************
         SPACE 2
SHORTMDL #TSOMSG ' ',LENGTH=80
SHORTLEN EQU   *-SHORTMDL
         SPACE 2
MODELS1  PUTLINE MF=L
         CAMLST SEARCH,*-*,*-*,*-*
         CAMLST SEEK,*-*,*-*,*-*
MODLEN1  EQU   *-MODELS1
         SPACE 2
MODELS2  #TSOMSG 'VOLUME SERIAL = XXXXXX     UNIT = XXX     TYPE = XXXX+
               XX',LENGTH=80
         #TSOMSG 'STATUS: REMOVABLE           UNALLOCATED  OFFLINE',   +
               LENGTH=80
         SPACE
         #TSOMSG 'VSAM: OWNERSHIP - OFF   TIMESTAMPS - ................+
               /................',LENGTH=80
         SPACE
MODLEN2  EQU   *-MODELS2
         SPACE 2
MODELS3  #TSOMSG 'FREE SPACE IS XXXXX TRACKS IN XXXX EXTENTS INCLUDING +
               XXXX FULL CYLINDERS',LENGTH=80
         SPACE
         #TSOMSG 'LARGEST EXTENTS ARE: /CYL+TR/',LENGTH=80
         SPACE
         #TSOMSG '                     /TRACKS/',LENGTH=80
         SPACE
MODLEN3  EQU   *-MODELS3
         SPACE 2
MODELS4  #TSOMSG 'VTOC CONTAINS XXXX BLANK DSCB''S',LENGTH=80
         SPACE
         #TSOMSG 'XXXXXX - VOLUME OR UCB NOT FOUND',LENGTH=80
         SPACE 1
         #TSOMSG 'INDEXED VTOC CONTAINS XXXX FREE VIR''S',LENGTH=80
         SPACE
MODLEN4  EQU   *-MODELS4
         EJECT
***********************************************************************
HARDDCB  DCB   DDNAME=X,               WILL BE REPLACED AT EXEC TIME   +
               MACRF=PM,                                               +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               EXLST=EXITDCB                                  ABL FEB87
         OPEN  (,),MF=L
HARDLEN  EQU   *-HARDDCB
***********************************************************************
HARDCPY  DCB   DDNAME=X,               WILL BE REPLACED AT EXEC TIME   +
               MACRF=PM,                                               +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               EXLST=EXITDCB                                  ABL FEB87
HARDOPEN OPEN  (,),MF=L
         EJECT
***********************************************************************
*                                                                     *
*              INSTRUCTIONS TO BE EXECUTED BY EXECUTE INSTRUCTIONS    *
*                                                                     *
***********************************************************************
         SPACE 2
MOVENAME MVC   0(0,R2),0(R4)            MOVE HARDCOPY DDNAME
MOVELINE MVC   DVOLHEDR(0),0(R15)       MOVE PRINT TO OUTPUT LINE
MOVESER  MVC   DVOLSER(0),0(R3)         COPY VOLUME SERIAL
MOVEXTNT MVC   LARGE5(0),LARGE5+10      COPY EXTENT ENTRIES
FMT5ADDR LA    R6,DS5EXT01              LOAD EXTENT DESCRIPTION ADDRESS
         LA    R6,DS5EXT02
         LA    R6,DS5EXT03
         LA    R6,DS5EXT04
         LA    R6,DS5EXT05
         LA    R6,DS5EXT06
         LA    R6,DS5EXT07
         LA    R6,DS5EXT08
         LA    R6,DS5EXT09
         LA    R6,DS5EXT10
         LA    R6,DS5EXT11
         LA    R6,DS5EXT12
         LA    R6,DS5EXT13
         LA    R6,DS5EXT14
         LA    R6,DS5EXT15
         LA    R6,DS5EXT16
         LA    R6,DS5EXT17
         LA    R6,DS5EXT18
         LA    R6,DS5EXT19
         LA    R6,DS5EXT20
         LA    R6,DS5EXT21
         LA    R6,DS5EXT22
         LA    R6,DS5EXT23
         LA    R6,DS5EXT24
         LA    R6,DS5EXT25
         LA    R6,DS5EXT26
*
FMT7ADDR LA    R6,DS7EXTNT              LOAD EXTENT DESCRIPTION ADDRESS
         LA    R6,DS7EXTNT+8
         LA    R6,DS7EXTNT+16
         LA    R6,DS7EXTNT+24
         LA    R6,DS7EXTNT+32
         LA    R6,DS7ADEXT
         LA    R6,DS7ADEXT+8
         LA    R6,DS7ADEXT+16
         LA    R6,DS7ADEXT+24
         LA    R6,DS7ADEXT+32
         LA    R6,DS7ADEXT+40
         LA    R6,DS7ADEXT+48
         LA    R6,DS7ADEXT+56
         LA    R6,DS7ADEXT+64
         LA    R6,DS7ADEXT+72
         LA    R6,DS7ADEXT+80
         TITLE 'PARSE CONTROL BLOCKS'
***********************************************************************
*                                                                     *
*              PARSE CONTROL BLOCKS                                   *
*                                                                     *
***********************************************************************
         SPACE 2
DVOLPCL  IKJPARM DSECT=DVOLPDL
VOL      IKJIDENT 'VOLUME SERIAL',                                     +
               ASTERISK,                                               +
               LIST,                                                   +
               MAXLNTH=6,                                              +
               FIRST=ALPHANUM,                                         +
               OTHER=ALPHANUM,                                         +
               DEFAULT='*'
OUTFORM  IKJKEYWD DEFAULT='SHORT'
         IKJNAME  'SHORT'
         IKJNAME  'LONG'
NOHEADER IKJKEYWD DEFAULT='HEADER'
         IKJNAME  'HEADER'
         IKJNAME  'NOHEADER'
NOPRINT  IKJKEYWD
         IKJNAME  'PRINT'
         IKJNAME  'NOPRINT'
SERONLY  IKJKEYWD
         IKJNAME  'SERONLY',INSERT='NOHEADER'
HARDCOPY IKJKEYWD
         IKJNAME  'HARDCOPY',SUBFLD=DDNSUB
DDNSUB   IKJSUBF
DDNAME   IKJIDENT 'DDNAME',                                            +
               MAXLNTH=8,                                              +
               FIRST=ALPHANUM,                                         +
               OTHER=ALPHANUM,                                         +
               PROMPT='DDNAME FOR HARDCOPY OUTPUT'
         IKJENDP
         TITLE 'UCB MAP'
***********************************************************************
*                                                                     *
*              UCB MAP                                                *
*                                                                     *
***********************************************************************
         SPACE 2
         PRINT NOGEN
UCB      DSECT
         IEFUCBOB
         PRINT GEN
         SPACE 3
         AIF  ('&OPSYSTM' EQ 'MVS112').MVSEQU
         AIF  ('&OPSYSTM' EQ 'MVS113').MVSEQU
DVOLFLGA EQU  UCBFL1
DVOLFLGB EQU  UCBFL5
DVOLNRDY EQU  UCBNOTRD
         AGO  .WORK
.MVSEQU  ANOP
DVOLFLGA EQU  UCBFLA
DVOLFLGB EQU  UCBFLC
DVOLNRDY EQU  UCBNRY
.WORK    ANOP
         TITLE 'WORK AREA'
***********************************************************************
*                                                                     *
*                       WORK AREA DSECT                               *
*                                                                     *
***********************************************************************
DVOLDS   DSECT
SAVEAREA DC    18F'0'
WORKAREA DS    XL16
DVOLDEC  DS    D
EDITFLD  DC    X'4020202020202120'
SERPTR   DS    A                        ADDRESS OF SERIAL FIELD
MODLINE  DC    H'84,0'
BLANKS   DC    CL80' '
VTOCFMT4 DS    0D,148C
VTOCFMT5 EQU   VTOCFMT4
VTOCFMT7 EQU   VTOCFMT4
DVOLCCHH DS    XL5
DVOLHEDR DS    H,H
OUTLINE  DS    CL80
VTOCINDS DS    X
FOUNDONE DS    X
MTDSCBS  DS    H
STARTC   DS    F                  STARTING TRACK
STARTT   DS    F                  STARTING CYLINDER
TOTALC   DS    F                  TOTAL CYLINDERS
TOTALT   DS    F                  TOTAL TRACKS
LARGE5   DS    XL50
HALF     DS    H
TRKPRCYL DS    H
TOTAL    DS    H
UCBADDR  DS    A
UCBTABLE DS    A
UCBNEXT  DS    A
UCBPARMS DS    4A             PARMS FOR UCB SCAN SERVICES       ABL-410
UCBANSR  DS    A
UCBTEXT  DS    A              UCB FOUR CHARACTER NAME             ABL97
         DS    0D
UCBWORK  DS    CL216          UCB SCAN WORK AREA                ABL-410
         DS    0D
PDSMSGA  DC    F'0'
DVOLECB  DC    F'0'
         SPACE
DVOLPPL  DS    0F
         ORG   *+PPLLEN
         SPACE
DVOLIOPL DS    0F
         ORG   *+IOPLLEN
         SPACE
DVOLANS  DS    A
         SPACE
DVOLPTPB PUTLINE MF=L
         SPACE
DVOLDCB4 CAMLST SEARCH,0,0,0
         SPACE
DVOLDCB5 CAMLST SEEK,0,0,0
         SPACE
LINE1    #TSOMSG ' ',LENGTH=80
         SPACE
LINE2    #TSOMSG ' ',LENGTH=80
         SPACE
LINE3    #TSOMSG ' ',LENGTH=80
         SPACE
FREEMSG1 #TSOMSG ' ',LENGTH=80
         SPACE
FREEMSG2 #TSOMSG ' ',LENGTH=80
         SPACE
FREEMSG3 #TSOMSG ' ',LENGTH=80
         SPACE
BLDSCBS  #TSOMSG ' ',LENGTH=80
         SPACE
NOSER    #TSOMSG ' ',LENGTH=80
         SPACE
BLDSVIR  #TSOMSG ' ',LENGTH=80
         SPACE 2
SHORTLIN #TSOMSG ' ',LENGTH=80
         SPACE
ADDRDCE  DS    A              UCB DCE POINTER                   ABL-410
SRVUCBDC DS    CL128          UCB SAVE AREA FOR UCB DCE AREA    ABL-410
SRVUCBUC DS    CL48           UCB SAVE AREA FOR UCB COPY AREA   ABL-410
SRVUCBIC DS    CL48           UCB SAVE AREA FOR UCB TOKEN       ABL-410
DSECTLEN EQU   *-DVOLDS
         SPACE 2
***********************************************************************
*                                                                     *
*              OUTPUT LINE EQUIVALENCES                               *
*                                                                     *
***********************************************************************
         SPACE 2
         ORG    LINE1
         DC    H'84,0',C'VOLUME SERIAL = '
DVOLSER  DC    CL6'XXXXXX'
         DC    C'     UNIT = '
UNITADDR DC    CL4'XXXX'                                          ABL97
         DC    C'    TYPE = '                                     ABL97
UNITTYPE DC    CL6'XXXXXX'
         SPACE
         ORG   LINE2
         DC    H'84,0',C'STATUS: '
MNTSTAT  DC    CL9'REMOVABLE'
         DC    CL2' '
USESTATS DC    CL7'XXXXXXX'
         DC    CL2' '
ALLOCATD DC    CL11'XXXXXXXXXXX'
         DC    CL2' '
ONOFF    DC    CL17'OFFLINE'
         DC    CL2' '
UNLOAD   DC    CL17'XXXXXXXXXXXXXX'
         SPACE
         ORG   LINE3
         DC    H'84,0',C'VSAM: OWNERSHIP - '
OWNERSHP DC    CL3'OFF'
         DC    C'   TIMESTAMPS - '
TIMEST1  DC    CL16' '
         DC    C'/'
TIMEST2  DC    CL16' '
         ORG   FREEMSG1
         DC    H'84,0',C'FREE SPACE IS'
TRACKS   DC    CL6' XXXXX'
         DC    C' TRACKS IN'
EXTENTS  DC    CL5' XXXX'
         DC    C' EXTENTS INCLUDING'
CYLS     DC    CL5' XXXX'
         DC    C' FULL CYLINDERS'
         SPACE
         ORG   FREEMSG2
         DC    H'84,0',C'LARGEST EXTENTS ARE: / CYL+TR/'
LRGXTNT1 EQU   *
         SPACE
         ORG   FREEMSG3
         DC    H'84,0',C'                     / TRACKS/'
LRGXTNT2 EQU   *
         SPACE
         ORG   BLDSCBS
         DC    H'84,0',C'VTOC CONTAINS'
DSCBS    DC    CL5' XXXX'
         DC    C'BLANK DSCB''S'
         DC    CL48' '
         SPACE
         ORG   NOSER
         DC    H'84,0'
VOLSER   DC    CL6'XXXXXX'
         DC    C' - VOLUME OR UCB NOT FOUND'
         DC    CL48' '
         SPACE
         ORG   BLDSVIR
         DC    H'84,0',C'INDEXED VTOC CONTAINS'
DSCBVIR  DC    CL5' XXXX'
         DC    C'FREE VIR''S'
         DC    CL42' '
         SPACE 2
         ORG   SHORTLIN
         DS    H,H
SHORTSER DS    CL6
         DS    CL1
SHORTUNT DS    CL4                                                ABL97
         DS    CL1
SHORTTYP DS    CL6
         DS    CL1
SHORTMNT DS    CL6
SHORTSLA DS    CL1
SHORTUSE DS    CL4
         DS    CL1
SHORTVSM DS    CL2                                                ABL97
         DS    CL1
SHORTDCB DS    CL5
         DS    CL1
SHORTTOT DS    CL6
SHORTEXT DS    CL5
SHORTCYL DS    CL5
SHORT1CL DS    CL5
         DC    C'+'
SHORT1TR DS    CL2
         DS    CL1
SHORTLRG DS    CL6
         DS    CL1
SHORT5XT DS    CL6
         TITLE 'FORMAT 4 DSCB MAP'
***********************************************************************
*                                                                     *
*              DESCRIPTION OF FORMAT 4 DSCB                           *
*                                                                     *
***********************************************************************
         SPACE 2
         ORG   VTOCFMT4-44
         #VTCFMT4
         TITLE 'FORMAT 5 DSCB MAP'
***********************************************************************
*                                                                     *
*              DESCRIPTION OF FORMAT 5 DSCB                           *
*                                                                     *
***********************************************************************
         SPACE 2
         ORG   VTOCFMT5
         #VTCFMT5
***********************************************************************
*                                                                     *
*              DESCRIPTION OF FORMAT 7 DSCB                           *
*                                                                     *
***********************************************************************
         SPACE 2
         ORG   VTOCFMT7
         #VTCFMT7
         CVT   DSECT=YES
         END
//*
//ASM2  EXEC  PGM=IEV90,REGION=2048K,
//             PARM=(DECK,NOOBJECT,NORLD,TERM,NOSTMT,
//             'XREF(SHORT),BUFSIZE(MAX)')
//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR,DCB=BLKSIZE=23440
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(,PASS),DSN=&&Y,
//         DCB=BLKSIZE=3120
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  *
         TITLE 'IXTOFMT5 -- INDEXED VTOC FORMAT-5 INTERFACE'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* 05/25/94  ADDED SUPPORT FOR 3390M9 DISK DEVICES BY MODIFYING    ABL *
*           THE IXTOFMT5 ROUTINE TO RETURN FORMAT 7 DSCB RECORDS  ABL *
*           (INSTEAD OF FORMAT 5) IF &MODEL9 IS 'YES'.            ABL *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         MACRO
         #VTCFMT7
         MNOTE *,'       #VTCFMT7                                  ABL'
.**********************************************************************
.*                                                                    *
.* #VTCFMT7                                                           *
.*                                                                    *
.* FUNCTION         CONSTRUCT A DSECT FOR A FORMAT 7 DSCB.            *
.*                                                                    *
.* DESCRIPTION      ASSIGN SYMBOLIC NAMES TO THE FIELDS IN A FORMAT 7 *
.*                  DATA SET CONTROL BLOCK (DSCB).  THE FIELD NAMES   *
.*                  CORRESPOND TO THE NAMES IN THE DATA AREAS MANUAL. *
.*                  A FORMAT 7 DSCB DESCRIBES VOLUME FREE SPACE.      *
.*                                                                    *
.* SYNTAX                    #VTCFMT7                                 *
.*                                                                    *
.* ERRORS           NO ERRORS ARE INDICATED.                          *
.*                                                                    *
.* EXAMPLE                   ORG   FMT7DSCB    ORG TO DATA AREA       *
.*                           #VTCFMT7                                 *
.*                                                                    *
.**********************************************************************
         SPACE 2
DS7KEYID DS    XL4                     KEY X'07070707'
DS7EXTNT DS    5XL8                    SPACE FOR 5 EXTENT DESCRIPTIONS
DS7FMTID DS    X                       FORMAT IDENTIFIER
DS7ADEXT DS    11XL8                   SPACE FOR 11 EXTENT DESCRIPTIONS
         DS    XL2                     RESERVED
DS7PTRDS DS    XL5                     POINTER TO NEXT FORMAT 7 DSCB
DS7END   EQU   *                       END OF DSCB7
         MEND
         SPACE 3
         LCLC  &MODEL9
&MODEL9  SETC  'YES'                   3390M9 IS SUPPORTED
*&MODEL9  SETC  'NO'                    3390M9 IS NOT SUPPORTED
*SOURCE -- CBT TAPE FILE 149, VERSION 227
*SOURCE -- CBT TAPE FILE 149, VERSION 227
*SOURCE -- CBT TAPE FILE 149, VERSION 227
***********************************************************************
*
IXTOFMT5 CSECT
*
*  THIS ROUTINE USES THE CVAF SERVICE ROUTINES TO CONVERT THE
*  FREE SPACE BIT MAP OF AN INDEXED VTOC INTO PSUEDO FORMAT-5
*  DSCBS.  THIS PROVIDES A COMPATIBILITY INTERFACE FUNCTION FOR
*  PRE-DFDS ROUTINES WHICH EXAMINE FORMAT-5 DSCBS.
*
*  THIS ROUTINE IS CALLED ONCE FOR EACH FORMAT-5 WHICH MUST BE
*  BUILT.  THE INDEX RECORD BUFFER RETURNED BY CVAF IS SAVED SO
*  THAT NO ADDITIONAL I/O NEED BE DONE FOR SUCCEEDING CALLS.  THE
*  BUFFERS ARE FREED WHEN THE LAST FORMAT-5 DSCB IS RETURNED.
*  HENCE, THIS ROUTINE SHOULD BE CALLED UNTIL A FORMAT-5 DSCB WITH
*  DS5PTRDS EQUAL TO ZERO IS RETURNED.  THE NON-ZERO VALUE IN
*  DS5PTRDS WILL ALWAYS BE C'00001'.  NO ENQUEUE ON THE VTOC IS
*  PERFORMED.
*
*  INPUT:    R1 -->  (PARMLIST)
*                    A(WORD) -- ADDR OF A FULLWORD USED BY THIS
*                               ROUTINE.  MUST BE ZEROED FOR FIRST
*                               CALL AND RETURNED UNALTERED THEREAFTER.
*                    A(DCB)  -- ADDR OF A DCB OPENED TO THE DESIRED
*                               VTOC.  NO I/O MAY BE OUTSTANDING TO
*                               THIS DCB.  AN APF-AUTHORIZED CALLER
*                               MAY PASS A COMPLIMENTED UCB ADDRESS
*                               INSTEAD.
*                    A(COUNT1)- ADDR OF FULLWORD WHERE COUNT OF THE
*                               FREE (FMT 0) DSCBS WILL BE RETURNED.
*                    A(COUNT2)- ADDR OF FULLWORD WHERE COUNT OF THE
*                               FREE VIRS WILL BE RETURNED.
*                    A(FMT5) -- ADDR OF 140-BYTE AREA FOR FORMAT-5
*                               DSCB BUILT BY THIS ROUTINE.
*
*  RETURN CODES:
*            R15  = 0   ALL OK.
*            R15  = 4   VTOC IS NOT IN INDEXED FORMAT.
*            R15  = 8   CVAFTST CALL FAILED (OTHER THAN NOT INDEXED
*                       FORMAT VTOC).  CVAFTST RC IN REG 0.
*            R15  = 12  CVAFDSM CALL FAILED (OTHER THAN NON INDEXED
*                       FORMAT VTOC).  CVAFDSM RC IN HIGH ORDER BYTE
*                       OF R0. CVSTAT IN LOW ORDER BYTE OF R0.
*            R15  = 16  (UNUSED)
*            R15  = 20  LOGIC ERROR IN THIS ROUTINE.  R0 = OFFSET.
*
*
*  ATTRIBUTES -  REENTRANT, PROBLEM STATE, PROBLEM KEY.
*                THIS ROUTINE WILL WORK CORRECTLY ON A NON DFDS
*                SYSTEM.  HOWEVER, DFDS MACROS ARE REQUIRED FOR
*                ASSEMBLY.
*
*  WRITTEN BY: CHRIS THOMAS, UCLA/OAC SYSTEMS GROUP, 5/30/81
*
***********************************************************************
         TITLE 'IXTOFMT5 -- MAINLINE ROUTINE'
*
*  INITIALIZATION
*
         SAVE  (14,12),,IXTOFMT5-VERSION_1.0   SAVE REGS
         LR    R12,R15            ESTABLISH BASE
         USING IXTOFMT5,R12
         LR    R9,R13             SAVE CALLER'S R13
         LR    R11,R1             SAVE CALLER'S PARM POINTER
         USING PARMLIST,R11
         L     R1,PARMWORD        POINT TO ANCHOR WORD
         ICM   R13,B'1111',0(R1)  GET MY WORKAREA ANCHOR
         BNZ   SKIPGET            IF NON-ZERO, CALL FOR NEXT FMT5
*
*  GET WORKAREA AT FIRST CALL
*
         GETMAIN  RU,LV=WORKLEN,SP=0
         LR    R13,R1             ESTABLISH WORKAREA
         USING WORKAREA,R13
         L     R1,PARMWORD        ADDR OF ANCHOR
         ST    R13,0(,R1)         SAVE FOR SUBSEQUENT CALLS
         LR    R0,R13             ADDR FOR MVCL
         LA    R1,WORKLEN         LENGTH FOR MVCL
         SR    R3,R3              ZERO FILL BYTE
         MVCL  R0,R2              ZERO WORKAREA
*
*  CHAIN SAVEAREAS
*
SKIPGET  ST    R9,SAVEAREA+4      SAVE CALLER'S R13
         ST    R13,8(,R9)         FORWARD CHAIN
         NC    SAVEEXT,SAVEEXT    CALL FOR FIRST FMT5?
         BNZ   GETNEXT5           NO. RETURN NEXT FMT5
*
*  DETERMINE IF THIS IS A DCB FOR DASD WITH INDEXED VTOC
*
TST      L     R2,PARMDCB         POINT TO PASSED DCB
         LCR   R3,R2              MAYBE UCB INSTEAD
         BNM   UCBPASS            TREAT MINUS AS UCB
         L     R2,DCBDEBAD-IHADCB(,R2)   GET DEB FROM DCB PASSED
         ST    R2,DEBADDR         SAVE FOR LATER (ZERO IF UCB)
         ICM   R3,B'0111',(DEBUCBA-DEBDASD)+(DEBBASND-DEBBASIC)(R2)    *
                                  GET UCB ADDR FROM DEB
         B     TESTIT             LEAVE UCB ZERO IF DEB PASSED
UCBPASS  ST    R3,UCBADDR
TESTIT   CVAFTST  UCB=(R3)
         B     *+4(R15)
         B     UNINDXD            RC = 0   DFDS NOT ON SYSTEM
         B     UNINDXD            RC = 4   VOL IS NOT INDEXED
         B     GOODIX             RC = 8   INDEXED. ALL OK.
         B     TSTERROR           RC = 12  NO VOL MOUNTED, ETC.
         B     TSTERROR           RC = 16  BAD UCB (NOT DASD, ETC)
*
*  CALL CVAFDSM FOR NUMBER OF FREE DSCBS
*
GOODIX   L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDSM  MF=(E,CVPL),    GET COUNT1                           *
               ACCESS=MAPDATA,                                         *
               MAP=VTOC,                                               *
               COUNT=YES,                                              *
               MAPRCDS=YES,                                            *
               DEB=(2),                                                *
               CTAREA=COUNT1
         B     *+4(R15)
         B     GOODCT1            RC = 0   SUCCESSFUL
         B     CHECKEND           RC = 4   END OF DATA, OR ERROR  DRK
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
***********************************************************************
*                                                                     *
* 06/28/88  HANDLE NO FREE DSCBS CONDITION WHEN CVAFDSM PASSES    DRK *
*           RETURN CODE = 4 AND STAT032 (END OF DATA)             DRK *
*                                                                     *
*                                                                 DRK
*  IF RC=4, SEE IF ERROR OR NO FREE DSCB'S                        DRK
*                                                                 DRK
***********************************************************************
CHECKEND CLI   CVSTAT,STAT032     END OF DATA?                    DRK
         BNE   DSMERROR           NO, OTHER ERROR                 DRK
*
*  RETURN COUNT OF FREE DSCBS
*
GOODCT1  L     R1,PARMCT1         @ COUNT1
         MVC   0(4,R1),COUNT1     RETURN COUNT1
*
*  SAVE INDEX BUFFERS FOR SUCCEEDING FUNCTIONS
*
         L     R1,CVMRCDS               GET ADDR OF BUFFERS
         ST    R1,BUFLIST               SAVE FOR LATER
*
*  CALL CVAFDSM FOR NUMBER OF FREE INDEX BLOCKS (VIRS)
*
         L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDSM  MF=(E,CVPL),    GET COUNT1                           *
               ACCESS=MAPDATA,                                         *
               MAP=INDEX,                                              *
               COUNT=YES,                                              *
               MAPRCDS=(YES,(3)),                                      *
               DEB=(2),                                                *
               CTAREA=COUNT2
         B     *+4(R15)
         B     RETCT2             RC = 0   SUCCESSFUL
         B     DSMERROR           RC = 4   END OF DATA, OR ERROR
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
*
*  RETURN COUNT OF FREE VIRS
*
RETCT2   L     R1,PARMCT2         @ COUNT2
         MVC   0(4,R1),COUNT2     RETURN COUNT2
         XC    SAVEEXT,SAVEEXT    BEGIN FMT5S AT THE BEGINNING
         AIF   ('&MODEL9' EQ 'YES').YESM9
*
*  GET 26 FREE EXTENTS.  (ASK FOR 27 TO SIMPLIFY EOD LOGIC).
*
GETNEXT5 MVC   EXTS(L'DS5AVEXT),SAVEEXT  SET UP STARTING POINT
         MVI   NUMEXTS,27
         L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDSM  MF=(E,CVPL),    GET EXTENTS                          *
               ACCESS=MAPDATA,                                         *
               MAP=VOLUME,                                             *
               MAPRCDS=(YES,(3)),                                      *
               DEB=(2),                                                *
               EXTENTS=EXTABL
         B     *+4(R15)
         B     NOERROR            RC = 0   SUCCESSFUL
         B     CHECKEOD           RC = 4   END OF DATA, OR ERROR
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
*
*  IF RC=4, SEE IF ERROR OR END OF EXTENTS
*
CHECKEOD CLI   CVSTAT,STAT032     END OF DATA?
         BNE   DSMERROR           NO, OTHER ERROR
*
*  USE 26 (OR FEWER) EXTENTS RETURNED TO BUILD PSUEDO FORMT-5
*
NOERROR  L     R10,PARMFMT5       ADDR FOR GENERATED FMT5
         USING IECSDSF5,R10
         MVC   DS5KEYID,F5ID      SET KEY
         MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS  MOVE IN EXTS
         MVI   DS5FMTID,C'5'      SET DSCB ID
         MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV MOVE REMAINING
         XC    DS5PTRDS,DS5PTRDS  ZERO CHAIN PTR
         NC    EXT27,EXT27        IS 27TH EXT ZERO? (1ST IN NEXT FMT5)
         BZ    CLEANUP            GO CLEANUP. ALL DONE.
         MVC   DS5PTRDS,NZPTR     MAKE PUSEDO CHAIN POINTER
         MVC   SAVEEXT(5),DS5MAVET+L'DS5MAVET-L'DS5AVEXT  SAVE THE     *
                                  LAST EXTENT FOR NEXT FORMAT 5
         B     RETURN
         DROP  R10
         AGO   .NOM9A
.YESM9   ANOP
*
*  GET 16 FREE EXTENTS.  (ASK FOR 17 TO SIMPLIFY EOD LOGIC).
*
GETNEXT5 MVC   DT2ENTRY(16),SAVEEXT      SET UP STARTING POINT
         L     R2,DEBADDR
         MVC   CVUCB,UCBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         MVC   DT2X7EYE,=C'ICVEDT02'     IDENTIFIER FOR CONTROL BLOCK
         MVC   DT2ENTNM,=F'17'           NUMBER OF EXTENTS TO RETRIEVE
***   IF YOU GET ASSEMBLY ERRORS ON THE FOLLOWING MACRO, YOUR SYSTEM
***   PROBABLY DOES NOT HAVE SUPPORT FOR 3390M9 (FAT DASD) DEVICES.
***   YOU SHOULD CHANGE THE VALUE OF &MODEL9 AS EXPLAINED ABOVE.
         CVAFDSM  MF=(E,CVPL),    GET EXTENTS                          *
               ACCESS=MAPDATA,                                         *
               MAP=VOLUME,                                             *
               MAPRCDS=(YES,(3)),                                      *
               DEB=(2),                                                *
               RTA4BYTE=YES,                                           *
               EXTENTS=RTATBL
         B     *+4(R15)
         B     NOERROR            RC = 0   SUCCESSFUL
         B     CHECKEOD           RC = 4   END OF DATA, OR ERROR
         B     DSMERROR           RC = 8   INVALID VTOC INDEX
         B     DSMERROR           RC = 12  CVAF PARM LIST ERROR
         B     DSMERROR           RC = 16  DASD I/O ERROR
*
*  IF RC=4, SEE IF ERROR OR END OF EXTENTS
*
CHECKEOD CLI   CVSTAT,STAT032     END OF DATA?
         BNE   DSMERROR           NO, OTHER ERROR
*
*  USE 16 (OR FEWER) EXTENTS RETURNED TO BUILD PSUEDO FORMT-7
*
NOERROR  L     R10,PARMFMT5       ADDR FOR GENERATED FMT5 (FMT7 NOW)
         USING IECSDSF7,R10
         MVC   DS7KEYID,F7ID      SET KEY
         MVC   DS7EXTNT(5*8),DT2ENTRY  MOVE FIRST 5 EXTENTS
         MVI   DS7FMTID,C'7'      SET DSCB ID
         MVC   DS7ADEXT(11*8),DT2ENTRY+40  MOVE NEXT 11 EXTENTS
         XC    DS7PTRDS,DS7PTRDS  ZERO CHAIN PTR
         MVC   SAVEEXT(16),DT2ENTRY+16*8-8     LAST FREE EXTENT USED
         NC    DT2ENTRY+16*8(4),DT2ENTRY+16*8  NEXT FREE EXTENT ZERO?
         BZ    CLEANUP                         YES, ALL DONE
         CLI   CVSTAT,STAT032     END OF DATA?
         BE    CLEANUP            YES, TERMINATE CVAF
         MVC   DS7PTRDS,NZPTR     MAKE PSUEDO CHAIN POINTER
         B     RETURN
         DROP  R10
.NOM9A   ANOP
*
*  RELEASE BUFFERS FOR INDEX RECORDS AFTER LAST USE
*
CLEANUP  L     R2,DEBADDR
         L     R3,BUFLIST
         MVC   CVPL(LENCVPL),CVPLMFL
         CVAFDIR  MF=(E,CVPL),    FREEMAIN CVAF BUFFERS                *
               ACCESS=RLSE,                                            *
               DEB=(2),                                                *
               MAPRCDS=(NO,(3))
         LTR   R15,R15            ERROR?
         BZ    FREEWORK           GOOD. SHOULD ALWAYS WORK.
         BAL   R14,LOGICERR       BAD. DIE.
*
*  FREE GOTTEN  WORKAREA          OR DFDS NOT INSTALLED ON SYSTEM.
*
FREEWORK LR    R1,R13             ADDR OF WORKAREA TO BE FREED
         L     R13,SAVEAREA+4     RELOAD CALLER'S SAVE PTR
         FREEMAIN  RU,LV=WORKLEN,A=(1),SP=0
         L     R1,PARMWORD        POINT TO WORKAREA ANCHOR
         SR    R15,R15            ZERO RETCODE
         SR    R0,R0              ZERO SUPLIMENTARY RETCODE
         ST    R15,0(,R1)         ZERO ANCHOR WORD
         B     EXIT2              GO LEAVE
         TITLE 'IXTOFMT5 -- TERMINATION ROUTINES'
*
*  VTOC IS NOT IN INDEXED FORMAT, OR DFDS NOT INSTALLED ON SYSTEM.
*
UNINDXD  SR    R0,R0              ZERO SUPLEMENTRY RETURN CODE
         LA    R15,4              INDICATE NOT INDEXED
         B     EXIT               COMMON EXIT
*
*  CVAFTST COMPLETED WITH AN ERROR
*
TSTERROR LR    R0,R15             SAVE CVAFTST RETURN CODE
         LA    R15,8              INDICATE FAILURE
         B     EXIT               COMMON EXIT
*
*  CVAFDSM COMPLETED WITH AN ERROR
*
DSMERROR LR    R0,R15             PUT CVAFDSM RETURN CODE INTO
         SLL   R0,24              ... HIGH ORDER BYTE OF R0
         IC    R0,CVSTAT-CVPL(R1)  ADD CVSTAT VALUE
         LA    R15,12             INDICATE FAILURE
         B     EXIT               COMMON EXIT
*
*  INTERNAL LOGIC ERROR OR INCORRECT CALL
*
LOGICERR LA    R1,IXTOFMT5        ADDR OF ENTRY POINT
         SLR   R14,R1             CONVERT TO OFFSET
         LA    R0,0(,R14)         RETURN OFFSET IN R0
         LA    R15,20             INDICATE FAILURE
         B     EXIT               COMMON EXIT
*
*  NORMAL CONDITIONS
*
RETURN   SR    R0,R0              ZERO SUPLEMENTARY RETURN CODE
         SR    R15,R15            ZERO PRIMARY RETURN CODE
         B     EXIT               COMMON EXIT
         SPACE 4
*
*  COMMON EXIT ROUTINE
*
EXIT     L     R13,SAVEAREA+4     RESTORE CALLER'S SAVE PRT
EXIT2    L     R14,12(,R13)       RESTORE R14
         LM    R1,R12,24(R13)     RESTORE R1 THRU R12 (R15,R0 SET)
         BR    R14                RETURN
         TITLE 'IXTOFMT5 -- CONSTANTS'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 4
*
*  CONSTANTS
*
F5ID     DC    XL4'05050505'      FMT5 KEY
F7ID     DC    XL4'07070707'      FMT7 KEY
NZPTR    DC    C'00001'           CHAR INSURES INVALID DASD ADDR
CVPLMFL  CVAFDSM  MF=L
LENCVPL  EQU   *-CVPLMFL
         TITLE 'IXTOFMT5 -- WORKAREA DESCT'
WORKAREA DSECT
SAVEAREA DC    18F'0'             YE OLDE SAVEAREA
COUNT1   DC    F'0'               FORMAT 0 DSCBS
COUNT2   DC    F'0'               FREE INDEX RECORDS
BUFLIST  DC    A(0)               ADDR VIX BFRS OBTAINED BY CVAF
DEBADDR  DC    A(0)               ADDR OF DEB PASSED IN CALLER'S DCB
UCBADDR  DC    A(0)               ADDR OF UCB PASSED (PRIV CALLER)
SAVEEXT  DC    XL16'00'           SAVED FORMAT 5 OR FORMAT 7 EXTENTS
EXTABL   DS    0CL(1+(27*5))      FANCY LENGTH
NUMEXTS  DC    AL1(27)            NR OF EXTENTS REQUESTED
EXTS     DC    CL(27*5)' '        27 5-BYTE FREE SPACE EXTENTS
         ORG   *-5
EXT27    DC    CL5' '             GIVE LAST ONE A NAME
RTATBL   DS    0F
         AIF   ('&MODEL9' EQ 'NO').NOM9B
         ICVEDT02 DSECT=NO        MAP THE DSECT FOR THE RTA TABLE
WORKAREA DSECT
.NOM9B   ANOP
         ORG
         SPACE 4
CVPL     ICVAFPL  DSECT=NO
         SPACE 4
WORKLEN  EQU   *-WORKAREA
         EJECT
         DSECT
         IECSDSL1  (5)
IECSDSF7 DSECT
         #VTCFMT7                                 *
         SPACE 4
PARMLIST DSECT
PARMWORD DS    A                  ANCHOR FOR GETMAINED AREA
PARMDCB  DS    A                  ADDR OF DCB FOR VTOC
PARMCT1  DS    A                  ADDR OF #FMT 0S
PARMCT2  DS    A                  ADDR OF #FREE VIRS
PARMFMT5 DS    A                  ADDR OF FMT5 WORKAREA
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         IEZDEB LIST=NO
         PRINT GEN
         END
//*
//LINK   EXEC  PGM=IEWL,PARM='MAP',COND=(5,LT)
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&&X,DISP=(OLD,DELETE)
//         DD  DSN=&&Y,DISP=(OLD,DELETE)
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.CMDLIB(DVOL)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))
//*
//COPY   EXEC  PGM=IEBGENER,COND=(5,LT)
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DSN=SYS2.HELP(DVOL),DISP=SHR
//SYSIN    DD  *
//SYSUT1   DD  *
)F FUNCTION -    The DVOL command is used to display the amount of
                 of free space on a direct access device.

                 DVOL will read the format 4 and format 5 DSCB's from
                 the VTOC of a direct access volume and display:
                  1.  Volume name
                  2.  Unit address
                  3.  Mount status and device type
                  4.  Use status
                  5.  Number of blank DSCB's in the vtoc
                  6.  Condition of the VTOC indicators byte
                  7.  VSAM data fields
                  8.  Total free space in tracks
                  9.  Number of free extents
                 10.  Number of free cylinders
                 11.  Size of largest extents (up to 5) in
                      cylinders + tracks
                 12.  Size of largest extents (up to 5) in tracks

   Return Code: The return code is set to the total number of tracks
                in the 5 largest extents (to a maximum of 4095) for
                the last volume displayed.

                If an error condition exists on the volume, the
                return code will be set to 0.

)X SYNTAX -     DVOL  (volume-list)/*
                      SHORT/LONG
                      HEADER/NOHEADER
                      PRINT/NOPRINT
                      SERONLY
                      HARDCOPY(DDNAME)

                Required - none
                Defaults - *  SHORT  HEADER  PRINT
                Note: if HARDCOPY is specified, NOPRINT is the default
)O OPERANDS -
  volume-list   is a list of one or more volume serials of mounted
                direct access volumes or partial volume names.

                If no volume is entered, or if an * is specified, the
                information is displayed for each direct access volume
                on the system.

                If a volume name is entered with a U followed by one
                to four digits, the data is also used as a UCB name.

))SHORT         Short output form requested
))LONG          Long output form requested
))HEADER        Header is to be displayed for SHORT form
))NOHEADER      No header is to be displayed for SHORT form
))PRINT         Output is to be displayed
))NOPRINT       No output is to be displayed
))SERONLY       Only a list of mounted volume serials will be displayed
))HARDCOPY      Specifies the DDNAME a pre-allocated data set to
                receive a copy of DVOL output.
