//***FILE 296 IS A SERIES OF UTILITIES FROM MR BRUCE LELAND.        *
//*           THIS FILE IS IN IEBUPDTE SYSIN FORMAT AND CONTAINS:   *
//*                                                                 *
//*     Contents of this file:                                      *
//*                                                                 *
//*        NAME      VER.MOD   LAST MODIFIED    SIZE   ID           *
//*        $$$$$NOT   01.00  1998/10/27 10:04      9  SBGOLOB       *
//*        $$$$SAM    01.01  1994/08/19  8:25     34  SBGCSC        *
//*        $$$$SAM1   01.01  1998/04/22 22:55      3  SBGOLOB       *
//*        $INDEX     01.18  1999/01/25 12:40     20  SBGOLOB       *
//*        @FILE296   01.01  2000/02/15 17:05    183  SBGOLOB       *
//*        BLKDISK    01.21  1993/02/02 12:56   1758  WSER07        *
//*        COMPARE    01.44  2000/01/11 15:17   3690  SBGOLOB       *
//*        COMPAREB   01.00  2000/01/11 15:20   1851  SBGOLOB       *
//*        DSAT       01.41  1999/01/25 12:34   4947  WSER07        *
//*        DSATOLD    01.32  1994/08/05 13:15   4258  WSER07        *
//*        DVOL       01.28  1998/04/21 17:29   3548  WSER07        *
//*        HEL        01.01  1993/09/03  6:41      1  SBGCSC        *
//*        RELEASE    01.03  1988/08/25 12:58   1282  WSER07        *
//*        RESET      01.00  1990/01/01 12:00    217  FILE296       *
//*        REVIEW     01.00  1992/12/18  7:37      1  SBGCSC        *
//*        REVSMF     01.01  1992/12/18  7:38      1  SBGCSC        *
//*        XEQ        01.01  1982/06/04 12:58   1326  WSER07        *
//*                                                                 *
//*     Description of Utilities:                                   *
//*                                                                 *
//*         01. DSAT- THE DSAT COMMAND IS USED TO DISPLAY           *
//*                    ALLOCATION INFORMATION FOR DATA SETS         *
//*                    ON A DIRECT ACCESS DEVICE.                   *
//*                                                                 *
//*                    DSAT WILL SEARCH THE OS CATALOG AND          *
//*                    CVOLS FOR THE ENTRIES FOR THE DATA           *
//*                    SETS SPECIFIED.  ALLOCATION                  *
//*                    INFORMATION WILL BE OBTAINED FROM THE        *
//*                    VOLUME TABLE OF CONTENTS, FORMATTED          *
//*                    AND DISPLAYED.  IF A NAME IS AN INDEX        *
//*                    NAME, ALL DATA SETS BELOW THE INDEX          *
//*                    WILL BE DISPLAYED.                           *
//*                                                                 *
//*                    THE USER MAY BYPASS THE CATALOG              *
//*                    SEARCH BY SUPPLYING THE VOLUME SERIAL        *
//*                    ON WHICH THE DATA SET RESIDES.  THIS         *
//*                    OPTION PERMITS DISPLAYING INFORMATION        *
//*                    FOR UNCATALOGED DATA SETS.                   *
//*                                                                 *
//*                    THE ATTRIBUTES TO BE DISPLAYED MAY BE        *
//*                    SELECTED BY THE USER WHEN HE ENTERS          *
//*                    THE DSAT COMMAND BY SPECIFYING               *
//*                    KEYWORD OPERANDS.                            *
//*                                                                 *
//*                    THE DSAT COMMAND MAY BE USED IN              *
//*                    COMMAND PROCEDURES TO FIND THE               *
//*                    ALLOCATION OF A DATA SET OR A GROUP          *
//*                    OF DATA SETS AND SET THE RETURN CODE         *
//*                    TO THE SPECIFIED VALUE.  THE RETURN          *
//*                    CODE MAY THEN BE TESTED WITH THE WHEN        *
//*                    COMMAND.  OUTPUT MAY BE SUPPRESSED BY        *
//*                    SPECIFYING NOPRINT.                          *
//*                                                                 *
//*                    THE USER MAY CHOOSE WHAT INFORMATION         *
//*                    WILL BE DISPLAYED BY ENTERING                *
//*                    KEYWORDS.                                    *
//*                                                                 *
//*         THE INFORMATION THAT MAY BE DISPLAYED IS:               *
//*                                                                 *
//*           1. VOLUME SERIAL ON WHICH THE DATA SET IS LOCATED.    *
//*           2. FILE SEQUENCE NUMBER.                              *
//*           3. DEVICE TYPE CODE FROM CATALOG ENTRY.               *
//*           4. ALLOCATION  (ALLOCATED, USED, AND EXTENTS).        *
//*           5. SECONDARY ALLOCATION (AMOUNT AND UNITS).           *
//*           6. DATA SET ORGANIZATION.                             *
//*           7. DCB (RECFM, BLKSIZE, AND LRECL).                   *
//*           8. CREATION DATE.                                     *
//*           9. EXPIRATION DATE.                                   *
//*          10. FULLY QUALIFIED DATA SET NAME.                     *
//*          11. CCHHR OF THE FORMAT 1 DSCB.                        *
//*          12. GENERATION DATA GROUP DATA.                        *
//*          13. PDS DIRECTORY INFORMATION.                         *
//*                                                                 *
//*          02. DVOL- THE DVOL COMMAND IS USED TO DISPLAY          *
//*                    THE AMOUNT OF FREE SPACE ON A DIRECT         *
//*                    ACCESS DEVICE.                               *
//*                                                                 *
//*                    DVOL WILL READ THE FORMAT 4 AND              *
//*                    FORMAT 5 DSCB'S FROM THE VTOC OF A           *
//*                    DIRECT ACCESS VOLUME AND DISPLAY:            *
//*                                                                 *
//*                    DVOL UPDATED 09/97 TO RECOGNIZE DYNAMIC      *
//*                    UCB'S.                                       *
//*                                                                 *
//*               1.  VOLUME SERIAL                                 *
//*               2.  UNIT ADDRESS                                  *
//*               3.  MOUNT STATUS                                  *
//*               4.  USE STATUS                                    *
//*               5.  NUMBER OF BLANK DSCB'S IN THE VTOC            *
//*               6.  CONDITION OF THE VTOC INDICATORS BYTE         *
//*               7.  VSAM DATA FIELDS                              *
//*               8.  TOTAL FREE SPACE IN TRACKS                    *
//*               9.  NUMBER OF FREE EXTENTS                        *
//*              10.  NUMBER OF FREE CYLINDERS                      *
//*              11.  SIZE OF LARGEST EXTENTS (UP TO 5) IN          *
//*                   CYLINDERS + TRACKS                            *
//*              12.  SIZE OF LARGEST EXTENTS (UP TO 5) IN TRACKS   *
//*                                                                 *
//*                    THE RETURN CODE IS SET TO THE TOTAL          *
//*                    NUMBER OF TRACKS IN THE LARGEST              *
//*                    EXTENTS (UP TO 5) UP TO A MAXIMUM OF         *
//*                    4095.  IF THE NUMBER OF FREE TRACKS          *
//*                    EXCEEDS 4095, THE RETURN CODE WILL           *
//*                    BE SET TO 4095.  IF MORE THAN ONE            *
//*                    VOLUME IS DISPLAYED, THE RETURN CODE         *
//*                    WILL BE REFER TO THE SPACE ON THE            *
//*                    LAST VOLUME.  IF AN ERROR CONDITION          *
//*                    EXISTS ON THE VOLUME, THE RETURN             *
//*                    CODE WILL BE SET TO 0.                       *
//*                                                                 *
//*                    NOTE - IF AN ERROR CONDITION EXISTS          *
//*                           ON THE VOLUME, THE RETURN             *
//*                           CODE WILL BE SET TO 0.                *
//*                                                                 *
//*          03. RESET    -  PERFORMS THE EQUIVALENT OF A DATASET   *
//*                          SCRATCH FOLLOWED BY A REALLOCATION     *
//*                          IN THE SAME SPACE FOR A PDS. THE       *
//*                          NUMBER OF DIRECTORY BLOCKS CAN BE      *
//*                          CHANGED VIA THE PROGRAM PARM.          *
//*                                                                 *
//*          04. BLKDISK   - SEE BELOW FOR A COMPLETE DESCRIPTION:  *
//*                                                                 *
//*       DESCRIPTION:  THIS PROGRAM COMPUTES AN "OPTIMAL"          *
//*           BLOCKSIZE FOR A DISK OR DRUM DATA SET GIVEN THE       *
//*           LOGICAL RECORD LENGTH.  INPUTS INCLUDE THE LRECL      *
//*           AND OPTIONALLY ANY OF THE FOLLOWING:                  *
//*                                                                 *
//*           A.  A KEY LENGTH (ZERO, FOR NO KEY, IS THE            *
//*               DEFAULT)                                          *
//*           B.  THE NUMBER OF RECORDS IN THE DATA SET (USED       *
//*               FOR AN ALLOCATION COMPUTATION -- 100,000 IS       *
//*               THE DEFAULT)                                      *
//*           C.  THE BLOCKSIZE TO USE FOR THE ALLOCATION           *
//*               COMPUTATION (THE RECOMMENDED BLOCKSIZE VALUE      *
//*               IS THE DEFAULT)                                   *
//*           D.  WHETHER OR NOT TO PROVIDE A TRACK CAPACITY        *
//*               REPORT                                            *
//*           E.  WHETHER OR NOT TO VERIFY RESULTS AGAINST          *
//*               "TRKCALC"                                         *
//*                                                                 *
//*       SUPPORTED DEVICES:  THE NAME BY WHICH THIS COMMAND        *
//*           PROCESSOR IS INVOKED DETERMINES THE DEVICE TYPE       *
//*           TO BE USED.                                           *
//*                                                                 *
//*           THE FIRST THREE CHARACTERS OF THE COMMAND NAME        *
//*           (USUALLY "BLK") ARE IGNORED; THE REMAINING FOUR       *
//*           OR FIVE CHARACTERS ARE COMPARED AGAINST A TABLE       *
//*           OF SUPPORTED DEVICES IN THE PROGRAM.  THE VALID       *
//*           ALIAS NAMES FOR THE PROGRAM INCLUDE THE               *
//*           FOLLOWING:                                            *
//*                                                                 *
//*           A.  BLK23051  (FOR 2305-1 DRUMS)                      *
//*           B.  BLK23052  (FOR 2305-2 DRUMS)                      *
//*           C.  BLK2314   (FOR 2314 DISKS)                        *
//*           D.  BLK3330   (FOR 3330 DISKS)                        *
//*           E.  BLK33301  (FOR 3330 MODEL 11 DISKS)               *
//*           F.  BLK3340   (FOR 3340 DISKS)                        *
//*           G.  BLK3350   (FOR 3350 DISKS)                        *
//*           H.  BLK3375   (FOR 3375 DISKS)                        *
//*           I.  BLK3380   (FOR 3380 DISKS)                        *
//*           J.  BLK3390   (FOR 3390 DISKS)                        *
//*           K.  BLK9345   (FOR 9345 DISKS)                        *
//*                                                                 *
//*          05.  REVIEW - SEE FILE 134 FOR THE LATEST VERSION OF   *
//*               THIS PROGRAM.                                     *
//*                                                                 *
//*          06.  HEL - SEE FILE 134 FOR THE LATEST VERSION OF      *
//*               THIS PROGRAM.  ON FILE 134, HEL IS NOW AN         *
//*               ALIAS OF REVIEW.                                  *
//*                                                                 *
//*          07.  XEQ - A COMMAND PROCESSOR THAT IS DESIGNED TO     *
//*               LOAD AND EXECUTE (ATTACH) A PROGRAM IN ONE OF THE *
//*               SYSTEM LINK LIBRARIES OR A USER LIBRARY (TASKLIB) *
//*                                                                 *
//*          08   COMPARE - A SOMEWHAT MODIFIED VERSION OF THE      *
//*               YALE COMPARE PROGRAM                              *
//*                                                                 *
