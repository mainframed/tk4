//*
//*  STEP  ×  COMMENTS
//*  ------×----------
//*  ASM   ×  ASSEMBLES RELEASE (IEV90 OR IFOX00 MAY BE USED)
//*  LKED  ×  LINKS RELEASE INTO 'SYS1.CMDLIB(RELEASE)'
//*  COPY  ×  COPIES THE RELEASE HELP MEMBER INTO 'SYS2.HELP(RELEASE)'
//*
//INSTALL PROC MEMBER=RELEASE2
//ASM     EXEC PGM=IEV90,REGION=2048K,
//             PARM=(DECK,NOOBJECT,NORLD,RENT,TERM,'XREF(SHORT)')
//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR,DCB=BLKSIZE=23440
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(,PASS),DSN=&&X,
//         DCB=BLKSIZE=3120
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//LKED    EXEC PGM=IEWL,PARM='MAP,RENT,REUS,REFR',COND=(5,LT)
//SYSPRINT DD  SYSOUT=*
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.CMDLIB(&MEMBER)         <=== MODIFY
//SYSLIN   DD  DSN=&&X,DISP=(OLD,DELETE)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))
//COPY    EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DISP=SHR,DSN=SYS2.HELP(&MEMBER)      <=== MODIFY ?
//SYSIN    DD  DUMMY
//        PEND
//A       EXEC INSTALL
//ASM.SYSIN DD *
         TITLE '   R E L E A S E '
***********************************************************************
*                                                                     *
*        'RELEASE' TSO COMMAND                                        *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA.
*        DATE WRITTEN. NOVEMBER 22 1978.
*        DATE UPDATED. AUGUST 3 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*            THIS TSO COMMAND RELEASES UNUSED SPACE FROM SEQUENTIAL
*            OR PARTITIONED DATA SETS.
*
*            THE 'LEAVE(NN)' KEYWORD ALLOWS THE USER TO SPECIFY
*            HOW MANY UNUSED TRACKS NOT TO RELEASE.
*
*            THE 'EXTENT' KEYWORD ALLOWS THE USER TO RELEASE ONLY
*            UNUSED EXTENTS, LEAVING THE PRIMARY EXTENT INTACT.
*
*            24MAY79 - OBTAIN ADDED FOR CHECKING CYLINDER ALLOC.
*            24MAY79 - STACK DELETE ADDED.
*            09JUN80 - FIX LINK TO STACK.
*            31JUL81 - FOLLOWING PROBLEM REPORTED.
*                      FIRST BYTE OF EXTENT DESCRIPTION IN F1-DSCB
*                      FOR CYLINDER ALLOCATED DATA SET IS BEING CHANGED
*                      FROM X'81' TO X'01'.
*            03AUG81 - ABOVE PROBLEM FIXED. CAUSE WAS DETERMINED TO BE
*                      CYLINDER BITS IN JFCB NOT BEING RECOGNIZED BY
*                      MODULE IGG020P1, SINCE JFCB REWRITE WAS BEING
*                      INHIBITED.  REMOVED JFCB REWRITE INHIBIT,
*                      REMOVED JFCB DISP=MOD ALTERATION, CHANGED ALL
*                      OPEN-OUTPUT TO OPEN-EXTEND.  THUS, THE ONLY
*                      JFCB ALTERATIONS ARE FOR CYLINDER ALLOCATION
*                      AND RLSE, (AND RLSE IS SET OFF AGAIN IF THERE
*                      WAS ANY UNUSED SPACE LEFT UNRELEASED).
*            03AUG81 - CHANGE LOGIC SO THAT ONLY ONE DCB IS EVER OPEN
*                      AT ANY TIME.
*            15APR85 - ADDED SUPPORT FOR VOLUME KEYWORD        SS APR85
*            05JUN86 - ADDED SUPPORT FOR PDSCALL KEYWORD      JWM-GTEDS
*            12FEB87 - ADDED CHECK FOR DATASET OPEN ELSEWHERE ABL FEB87
*            31JUL88 - PROVIDE FOR MVS220 SWA ABOVE THE LINE   SS JUL88
***
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
*                                                                     *
* PLEASE REPORT ANY PROBLEMS, ENHANCEMENTS, SUGGESTIONS OR COMMENTS   *
* CONCERNING THIS PROGRAM TO:                                         *
*                                                                     *
*     A. BRUCE LELAND           OR         A. BRUCE LELAND            *
*     SERENA INTERNATIONAL                 1103 KENDAL COURT          *
*     500 AIRPORT BLVD. 2ND FLOOR          SAN JOSE, CALIF 95120      *
*     BURLINGAME, CA  94010                                           *
*     (415) 696-1800                       HOME (408) 997-2366        *
*     INTERNET: BRUCE_LELAND@SERENA.COM                               *
*                                                                     *
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
         SPACE
*              INTERCEPT 'LINK' MACROS IMBEDDED IN PUTLINE & STACK
*              TO MAKE SF=(E,LINKAREA) THE DEFAULT
         GBLC  &MVSLEV
***                                                                 ***
*** SET THE LEVEL OF YOUR OPERATING SYSTEM WITH ANY OF TWO VALUES:
***
&MVSLEV  SETC  'MVSXXX'    ***  FOR MVS SP 1.3 OR LATER (MVS/XA TOO)
*&MVSLEV  SETC  'MVS220'   ***  FOR MVS/XA 2.2.0 WITH SWA ABOVE THE
*                               16M LINE
         SPACE
         MACRO
&NAME    LINK  &EP=,&SF=(E,LINKAREA)
&NAME    LA    15,&SF(2)
         LA    0,*+8
         B     *+12
         DC    CL8'&EP'
         ST    0,0(0,15)
         SVC   6             ISSUE LINK SVC
         MEND
         SPACE
RELEASE  START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'RELEASE'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R12,15
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         SPACE
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R14,R14             ZERO SENDING ADDRESS
         SLR   R15,R15             ZERO PAD AND LENGTH
         MVCL  R0,R14              CLEAR IT ALL
         SPACE
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD AREA
         LR    R13,R9              SET SAVEAREA POINTER
         SPACE
         ST    R2,SAVE2
         EJECT
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15
         SPACE
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLODED            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLODED ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
*        L     R0,=A(RELEAPCL)
         LA    R0,PCLADDR
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS(4),MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        PROCESS 'PDSCALL' KEYWORD                         *
*                                                          *
************************************************************
         SPACE 1                                              JWM-GTEDS
         L     R1,CPPLCBUF           GET ADDRESS OF CBUF      JWM-GTEDS
         LH    R14,0(,R1)            GET THE LENGTH           JWM-GTEDS
         LA    R1,0(R14,R1)          POINT TO PDSCALL, MAYBE  JWM-GTEDS
         CLC   2(7,R1),=C'PDSCALL'   DID PDS CALL US?         JWM-GTEDS
         BNE   NOPDSCAL              NO                       JWM-GTEDS
         MVC   PDSMSGA,10(R1)        MOVE THE ADDRESS         JWM-GTEDS
NOPDSCAL EQU   *                                              JWM-GTEDS
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     EXIT
PARSEOK  EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*        PROCESS 'LEAVE' KEYWORD                           *
*                                                          *
************************************************************
         SPACE
         LA    R4,LEAVE
         TM    6(R4),X'80'
         BZ    NOLEAVE
         LH    R1,4(,R4)
         L     R14,0(,R4)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE(8),0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LEAVV
NOLEAVE  EQU   *
         SPACE
************************************************************
*                                                          *
*        PROCESS 'VOLUME' KEYWORD                          *
*                                                          *
************************************************************
         SPACE 1                                               SS APR85
         MVC   VOLSER(6),=CL8' '                               SS APR85
         CLI   VOLUMKW+1,0                                     SS APR85
         BE    NOVOLUM                                         SS APR85
         LA    R4,VOLUM                                        SS APR85
         TM    6(R4),X'80'                                     SS APR85
         BZ    NOVOLUM                                         SS APR85
         LH    R1,4(,R4)                                       SS APR85
         L     R14,0(,R4)                                      SS APR85
         BCTR  R1,0                                            SS APR85
         B     *+10                                            SS APR85
         MVC   VOLSER(0),0(R14)                                SS APR85
         EX    R1,*-6                                          SS APR85
         OI    STATUS,STATVOL        FLAG USING VOL KEYWORD    SS APR85
NOVOLUM  EQU   *                                               SS APR85
         SPACE 1                                               SS APR85
************************************************************
*                                                          *
*        QUALIFY THE DSNAME IF NECESSARY                   *
*                                                          *
************************************************************
         SPACE
         LA    R4,DSN
STARTDSN NI    STATUS,255-STATCYL  SET OFF CYLINDER ALLOC SW
         SLR   R7,R7
         BCTR  R7,0
         TM    6(R4),X'80'         IS DATASET NAME SPECIFIED?
         BO    OKDSN               YES - BRANCH
         LA    R1,MSG05            NO - JUST MEMBER NAME
         LA    R0,L'MSG05
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
OKDSN    EQU   *
         MVI   DSNAME,C' '
         MVC   DSNAME+1(45),DSNAME
         LH    R1,4(,R4)           GET LENGTH
         STH   R1,DSNAME
         L     R14,0(,R4)          GET ADDRESS OF NAME
         BCTR  R1,0
         B     *+10
         MVC   DSNAME+2(0),0(R14)
         EX    R1,*-6
         MVC   DSNSAVE(46),DSNAME  SAVE DSN AS ENTERED
         TM    6(R4),X'40'         IS IT QUOTED?
         BO    DEFX                YES - SKIP DEFAULT SERVICE
         SPACE
         TM    STATUS,STATVOL      WE USING VOL                SS APR85
         BZ    DODFP               NO, USE PREFIX SERVICES     SS APR85
* DO PREFIXING HERE                                            SS APR85
         SR    R1,R1                                           SS APR85
         L     R15,CPPLUPT                                     SS APR85
         USING UPT,R15                                         SS APR85
         IC    R1,UPTPREFL                                     SS APR85
         B     *+10                                            SS APR85
         MVC   DSNAME+2(0),UPTPREFX                            SS APR85
         EX    R1,*-6                                          SS APR85
         DROP  R15                                             SS APR85
         LA    R15,DSNAME+2(R1)                                SS APR85
         MVI   0(R15),C'.'                                     SS APR85
         LA    R15,1(,R15)                                     SS APR85
         LH    R14,DSNSAVE                                     SS APR85
         BCTR  R14,0                                           SS APR85
         B     *+10                                            SS APR85
         MVC   0(0,R15),DSNSAVE+2                              SS APR85
         EX    R14,*-6                                         SS APR85
         LA    R1,2(R1,R14)                                    SS APR85
         STH   R1,DSNAME                                       SS APR85
         B     DEFX                                            SS APR85
DODFP    DS    0H                                              SS APR85
         LA    R15,MYIOPL
         USING IOPL,R15
         LA    R14,MYDFPB
         ST    R14,IOPLIOPB
         USING DFPB,R14
         XC    0(20,R14),0(R14)
         LA    R0,DSNAME
         ST    R0,DFPBDSN
         OI    DFPBCODE,X'04'      SEARCH CAT AND PROMPT IF MULTI
         MVC   DFPBPSCB,CPPLPSCB
         MVI   DFPBCNTL,X'20'      PREFIX THE DSNAME
         DROP  R14
         SPACE
         LA    R1,MYIOPL
         SPACE
         LR    R1,R15              POINT TO IOPL
         L     R15,16              CVTPTR
         TM    736(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   EHDEFLNK               THEN DO LINK, NOT CALL
         L     R15,736(,R15)       CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     EHDEFEXT            SKIP AROUND LINK
EHDEFLNK EQU   *
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
EHDEFEXT EQU   *
         SPACE
         B     DEFCODE(R15)
DEFCODE  B     DEF00               SUCCESS
         B     NEXTDSN              MSG ALREADY ISSUED
         B     DEF08               INVALID NAME GT 44
         B     NEXTDSN              MSG ALREADY ISUED
         B     DEF16               NOT IN CATALOG
         B     DEF20               NOT IN CATALOG
         B     DEF24               IMPOSSIBLE
         B     DEF28               COMMAND SYSTEM ERROR
         B     DEF32               IMPOSSIBLE
         B     DEF36               ?
DEF08    EQU   *
DEF16    EQU   *
         B     DEF24
DEF20    EQU   *
LOCERR   EQU   *
         MVC   MSGWK(L'MSG02),MSG02
         LA    R15,MSGWK+L'MSG02
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG02(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(L'MSG02A,R15),MSG02A
         LA    R0,L'MSG02+L'MSG02A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTDSN
DEF24    EQU   *
DEF28    EQU   *
DEF32    EQU   *
DEF36    EQU   *
         LA    R1,MSG03
         LA    R0,L'MSG03
         BAL   R14,PUTMSG
         B     NEXTDSN
         SPACE
DEF00    EQU   *
DEFX     EQU   *
         SPACE 3                                              ABL FEB87
************************************************************  ABL FEB87
*                                                          *  ABL FEB87
*        VERIFY THAT THE DATASET IS NOT ALREADY OPEN       *  ABL FEB87
*                                                          *  ABL FEB87
************************************************************  ABL FEB87
         SPACE 1                                              ABL FEB87
         L     R1,16                       CVT                ABL FEB87
         L     R1,0(,R1)                   ACTIVE TCB POINTER ABL FEB87
         L     R1,4(,R1)                   ACTIVE TCB         ABL FEB87
         L     R1,TCBJSCB-TCBRBP(,R1)      JSCB               ABL FEB87
         L     R1,JSCDSABQ-IEZJSCB(,R1)    DSAB QUEUE         ABL FEB87
         L     R14,12(,R1)                 FIRST DSAB         ABL FEB87
DSABNEXT LTR   R1,R14                      ANY MORE DSABS?    ABL FEB87
         BZ    DSABDONE                    NO, NOT OPEN       ABL FEB87
         L     R14,DSABFCHN-DSAB(,R1)      NEXT DSAB          ABL FEB87
         CLI   DSABOPCT-DSAB+1(R1),0       OPEN DATA SET?     ABL FEB87
         BE    DSABNEXT                    NO, BRANCH         ABL FEB87
         AIF   ('&MVSLEV' GE 'MVS220').MVS22C                  SS JUL88
         L     R15,DSABTIOT-DSAB(,R1)      TIOT ENTRY         ABL FEB87
         ICM   R15,7,TIOEJFCB-TIOENTRY(R15)   JFCB ENTRY      ABL FEB87
         CLC   16(44,R15),DSNAME+2         THIS DSNAME?       ABL FEB87
         BNE   DSABNEXT                    YES, ERROR         ABL FEB87
         AGO   .MVS22CX                                        SS JUL88
.MVS22C  ANOP                                                  SS JUL88
         SR    R0,R0                    SET FLAG OFF           SS JUL88
         LR    R15,R1                   SAVE DSAB POINTER      SS JUL88
         L     R1,CVTPTR                *                      SS JUL88
         TM    CVTDCB-CVT(R1),CVTMVSE   REALY  XA              SS JUL88
         BZ    *+4+4+4+2                NO, SKIP  BSM          SS JUL88
         LA    R1,*+4+4+2               POINT AFTER BSM        SS JUL88
         O     R1,=X'80000000'          31 BIT MODE            SS JUL88
         BSM   0,R1                     SET MODE               SS JUL88
         L     R1,DSABSIOT-DSAB(,R15)   POINT TO SIOT          SS JUL88
         L     R1,SJFCBPTR-SIOT(R1)     JFCB ADDR              SS JUL88
         CLC   00(44,R1),DSNAME+2       THIS DSNAME?           SS JUL88
         BNE   *+8                      *                      SS JUL88
         LA    R0,1                     HAVE MATCH.. FLAG ON   SS JUL88
         L     R1,CVTPTR                *                      SS JUL88
         TM    CVTDCB-CVT(R1),CVTMVSE   REALY  XA              SS JUL88
         BZ    *+4+4+2                  NO, SKIP  BSM          SS JUL88
         LA    R1,*+4+2                 POINT AFTER BSM        SS JUL88
         BSM   0,R1                     SET MODE 24            SS JUL88
         LTR   R0,R0                    FLAG OFF               SS JUL88
         BZ    DSABNEXT                 NO, CONTINUE           SS JUL88
.MVS22CX ANOP                                                  SS JUL88
         LA    R1,MSG07                    DATA SET IS OPEN   ABL FEB87
         LA    R0,L'MSG07                                     ABL FEB87
         BAL   R14,PUTMSG                                     ABL FEB87
         B     NEXTDSN                                        ABL FEB87
DSABDONE DS    0H                                             ABL FEB87
         SPACE 3                                              ABL FEB87
************************************************************
*                                                          *
*        ALLOCATE THE DATASET                              *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),=CL8' '
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         TM    STATUS,STATVOL                                  SS APR85
         BZ    NOVOLAL                                         SS APR85
         MVC   DA08SER(6),VOLSER                               SS APR85
         MVC   DA08UNIT,=CL8'SYSALLDA'                         SS APR85
NOVOLAL  DS    0H                                              SS APR85
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08OLD
*        MVI   DA08DSP1,DA08MOD                               .02AUG81.
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         TM    14(R4),X'80'        MEMBER SPECIFIED?
         BZ    MEMBX               NO - BRANCH
         LA    R1,MSG05
         LA    R0,L'MSG05
         BAL   R14,PUTMSG
         B     NEXTDSN
MEMBX    EQU   *
         TM    22(R4),X'80'        PASSWORD SPECIFIED?
         BZ    PASSX               NO - BRANCH
         LH    R1,20(,R4)          GET LENGTH OF PSWD
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,16(,R4)         GET ADDRESS OF PSWD
         B     *+10
         MVC   DA08PSWD(0),0(R14)  MOVE PSWD
         EX    R1,*-6
PASSX    EQU   *
         LA    R1,MYDAPL
         SPACE
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BZ    OKDAIR
         BAL   R14,DAIRFAIL
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
OKDAIR   EQU   *
         OI    CLEANUP,CLEANDAR    TELL CLEANUP TO FREE IT
         LA    R15,MYDAPB
         MVC   DDSAVE,DA08DDN
         TM    DA08DSO,X'42'       IS DSORG PS OR PO
         BNZ   OKDSORG             YES - BRANCH
ERRDSORG LA    R1,MSG06            MUST BE PS OR PO
         LA    R0,L'MSG06
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
OKDSORG  EQU   *
         DROP  R15
         SPACE
         DEVTYPE DDSAVE,DEVAREA,DEVTAB
         SPACE
         CLI   DEVAREA+2,X'20'     DIRECT ACCESS DEVICE
         BE    OKDA                YES, BRANCH
         LA    R1,MSG09
         LA    R0,L'MSG09
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
OKDA     EQU   *
         SPACE
************************************************************
*                                                          *
*        CHECK FORMAT-1 DSCB FOR CYLINDER ALLOCATION       *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         LA    R1,24(,R1)          TOIENTRY
DDLOOP   CLI   0(R1),0             END OF TIOT
         BE    ERROBT              YES, BRANCH (NEVER HAPPENS)
         CLC   4(8,R1),DDSAVE      DOES DDNAME MATCH
         BE    DDFOUND
         SLR   R15,R15
         IC    R15,0(,R1)
         LA    R1,0(R15,R1)
         B     DDLOOP
DDFOUND  L     R15,16(,R1)         TIOEFSRT-1
         TM    18(R15),X'20'       DIRECT ACCESS DEVICE?
         BZ    ERROBT              NO, BYPASS OBTAIN
         MVC   VOLSER,28(R15)      UCBVOLI
OBTDSCB  LA    R1,OBTAINW
         MVC   0(OBTAINL,R1),OBTAIN
         LA    R0,DSNAME+2         DSN FOR OBTAIN
         ST    R0,4(,R1)
         LA    R0,VOLSER           VOLUME FOR OBTAIN
         ST    R0,8(,R1)
         LA    R0,MYDSCB           ANSWER AREA FOR OBTAIN
         ST    R0,12(,R1)
         OBTAIN (1)
         LTR   R15,R15             WAS OBTAIN SUCCESSFUL
         BZ    OKDSCB              YES, BRANCH
         SPACE
*               OBTAIN HAS FAILED. HOW CAN THAT HAPPEN WHEN
*               DYNAMIC ALLOCATION WAS SUCCESSFUL? ONE WAY IT
*               CAN HAPPEN IS IF THE DSNAME IS AN ALIAS ENTRY
*               IN A VSAM CATALOG.  IF IT IS, A 'LOCATE' WILL
*               PUT THE TRUE NAME IN THE DSNAME FIELD, SO NOW
*               WE ISSUE A LOCATE, AND TRY THE OBTAIN AGAIN.
         SPACE
         TM    STATUS,STATLOC      HAS LOCATE BEEN TRIED ALREADY?
         BZ    ALIAS               NO, GO TRY IT
ERROBT   LA    R1,MSG10            UNABLE TO OBTAIN DSCB
         LA    R0,L'MSG10
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
ALIAS    OI    STATUS,STATLOC      TRIP THE SWITCH
         LA    R1,LOCATEW
         MVC   0(LOCATEL,R1),LOCATE
         LA    R0,DSNAME+2         DSNAME FOR LOCATE
         ST    R0,4(,R1)
         LA    R0,LOCBUF           ANSWER AREA FOR LOCATE
         ST    R0,12(,R1)
         LOCATE (1)
         LTR   15,15               WAS LOCATE SUCCESSFUL?
         BZ    OBTDSCB             YES, GO OBTAIN AGAIN
         B     ERROBT              NO, ISSUE MESSAGE
         SPACE
OKDSCB   NI    STATUS,255-STATLOC  TURN OFF LOCATE SWITCH
         LA    R1,MYDSCB-44
         TM    X'5E'(R1),X'C0'     CYLINDER ALLOCATION?
         BO    CYLSTAT             YES, BRANCH
         TM    X'5E'(R1),X'41'     AVG AND ROUND ALLOCATION
         BO    CYLSTAT             YES, BRANCH
         B     *+8
CYLSTAT  OI    STATUS,STATCYL      YES, SET CYLINDER SWITCH
         TM    X'52'(R1),X'42'     DSORG=PS OR PO
         BZ    ERRDSORG            NEITHER, BRANCH
         CLI   X'54'(R1),0         IS THERE A RECFM
         BNE   OKRECFM             YES, BRANCH
         LA    R1,MSG11
         LA    R0,L'MSG11
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
OKRECFM  EQU   *
         SPACE
************************************************************
*                                                          *
*        SET UP THE DCB                                    *
*                                                          *
************************************************************
         SPACE
         LA    R5,MODDCB
         MVC   0(CONDCBL,R5),CONDCB
         USING IHADCB,R5
         MVC   DCBDDNAM(8),DDSAVE
         SPACE
         LA    R15,DYNEXLST
         IC    R0,DCBEXLSA-1
         ST    R15,DCBEXLSA-1
         STC   R0,DCBEXLSA-1
         LA    R1,JFCB
         ST    R1,0(,R15)
         MVI   0(R15),X'87'
         LA    R6,RLSDCB
         MVC   0(CONDCBL,R6),0(R5)
         SPACE
         MVI   OPEN,X'80'
         SPACE
         RDJFCB ((R5)),MF=(E,OPEN)
         SPACE
*        OI    JFCB+X'34',X'08'    DO NOT REWRITE JFCB          DELETED
*        NI    JFCB+X'57',X'3F'    ZERO 1ST 2 BITS (OLD=X'40')  DELETED
*        OI    JFCB+X'57',X'80'    DISP=MOD            =X'80'   DELETED
         TM    STATUS,STATCYL      CYLINDER ALLOCATION?
         BZ    *+8                 NO, SKIP NEXT INSTRUCTION
         OI    JFCB+X'9B',X'C0'    YES, MARK JFCBCTRI CYL
         SPACE
         MVI   OPEN,X'80'
         SPACE
         OPEN  ((R5),EXTEND),TYPE=J,MF=(E,OPEN)
         SPACE
         TM    DCBOFLGS,X'10'
         BO    OKOPEN
         LA    R1,MSG04
         LA    R0,L'MSG04
         BAL   R14,PUTMSG
         OI    STATUS,STATERR      ERROR
         B     NEXTDSN
         SPACE
OKOPEN   EQU   *
         MVC   HOLDEOF,DCBFDAD     SAVE MBBCCHHR OF EOF
         OI    CLEANUP,CLEANOP5    TELL CLEANUP TO CLOSE IT
         SPACE
         L     R1,DCBDEBAD         POINT TO DEB
         SLR   R14,R14
         SLR   R15,R15
         SLR   R0,R0
         IC    R0,16(,R1)          GET NUMBER OF EXTENTS
         LTR   R0,R0               ZERO EXTENTS?
         BZ    RLSNONE             YES, BRANCH
         IC    R15,04(,R1)         GET LENGTH OF EXTENT FIELD
LOOPDEB  AH    R14,46(,R1)         ADD TRACKS TO COUNTER
         AR    R1,R15              POINT TO NEXT EXTENT
         BCT   R0,LOOPDEB
         BCTR  R14,0               TRKS-1 = HIGH TRACK NUMBER
         LR    R8,R14              SAVE HIGH TRACK ALLOCATED
         SPACE
         L     R1,DCBDEBAD
         LA    R2,DCBFDAD
         ST    R3,12(,R13)
         STM   R9,R13,16(R13)
         LR    R3,R13
         L     R15,16              CVTPTR
         L     R15,32(,R15)        CVTPRLTV
         BALR  R14,R15
         LR    R13,R3              RESTORE R13
         LM    R9,R13,16(R13)
         L     R3,12(,R13)
         SPACE
         SRL   R0,16               TTRZ TO TT (HIGH TRACK USED)
         LR    R1,R8               GET HIGH TRACK ALLOCATED
         SR    R1,R0               MINUS HIGH TRACK USED
         BNP   RLSNONE             BRANCH IF NOTHING TO RELEASE
         SPACE
         LR    R7,R1               SAVE UNUSED TRACKS
         SPACE
*              IF DATA SET WAS ORIGINALLY ALLOCATED IN CYLINDERS,
*              THE FOLLOWING ROUTINE INSURES THAT THE NUMBER OF
*              TRACKS REMAINING WILL BE AN EVEN MULTIPLE OF THE
*              NUMBER OF TRACKS PER CYLINDER FOR THE DEVICE.
*              R7 WILL BE CHANGED TO INCLUDE ONLY THOSE UNUSED
*              TRACKS THAT ARE WITHIN UNUSED CYLINDERS.
         SPACE
         TM    STATUS,STATCYL      ALLOCATED BY CYLINDER?
         BZ    NOTCYL              NO, BRANCH
         CLI   LEAVEKW+1,3         'EXTENTS' SPECIFIED
         BE    NOTCYL              YES, EXISTING EXTENTS ASSUMED OK
*        LR    R1,R8               GET HIGH TRACK ALLOCATED
*        SLR   R0,R0
         SRDL  R0,32
         LH    R15,TRKCYL          GET TRACKS PER CYLINDER
         DR    R0,R15              GET TRACK WITHIN LAST CYL
         BCTR  R15,0               GET NO OF LAST TRK
         CLR   R15,R0              IS LAST TRK = HIGH TRACK
         BNE   ADJUST              NO, ADJUSTMENT NECESSARY
         L     R0,LEAVV
         LTR   R0,R0               IS LEAVE SPECIFIED
         BZ    RLSALL              NO, TAKE FAST PATH
         B     ADJLEAV             YES, ADJUST IT
ADJUST   MH    R1,TRKCYL           CHANGE CYL TO TRK
         AR    R15,R1              SET TO LAST TRACK
         LR    R1,R8               GET HIGH TRACK ALLOCATED
         SR    R1,R15              MINUS LAST TRACK OF LAST CYL USED
         BNP   RLSNONE             BRANCH IF NOTHING TO RELEASE
         LR    R0,R7               SAVE OLD UNUSED TRACKS
         LR    R7,R1               NO OF TRACKS TO RELEASE
         SR    R0,R1               GET DIFF BETWEEN OLD & NEW
         LR    R1,R0               DIFF IN R1
*
*              NOW WE HAVE AN IMPLICIT LEAVE(N) WHERE N IS IN R1
*              AND IS THE NUMBER OF TRACKS FROM THE LAST TRACK USED
*              TO THE END OF THE CYLINDER.  IF LEAVE WAS EXPLICITLY
*              SPECIFIED, WE CAN REDUCE THE SPECIFIED NUMBER BY THE
*              IMPLICIT NUMBER BECAUSE IF THE USER SPECIFIED LEAVE(8)
*              AND THE IMPLICIT NUMBER WAS 7, THAT MEANS THAT NORMAL
*              CYLINDER RELEASE WILL LEAVE THE USER 7 UNUSED TRACKS
*              AND OUR INTERNAL PROCESSING ONLY HAS TO WORK ON GETTING
*              THE ONE OTHER TRACK THE USER WANTS. THE USER WILL END
*              UP WITH MORE THAN 8 BECAUSE THE ONE OTHER TRACK MEANS
*              THE WHOLE CYLINDER CONTAINING THAT TRACK WILL BE LEFT.
*              AFTER THE SPECIFIED NUMBER IS REDUCED BY THE IMPLICIT
*              NUMBER, IF THE RESULT IS POSITIVE WE ROUND IT UP TO THE
*              NEXT HIGHER MULTIPLE OF TRACKS PER CYLINDER.
*              IF THE USER SPECIFIED LEAVE(7) AND THE IMPLICIT NUMBER
*              WAS 7 (OR MORE), OUR JOB IS SIMPLE BECAUSE A NORMAL
*              CYLINDER RELEASE WILL LEAVE ENOUGH UNUSED TRACKS.
*
         L     R0,LEAVV
         SR    R0,R1               REDUCE SPECIFIED NUMBER BY R1
         ST    R0,LEAVV
         BNP   RLSPART             IF RESULT LT 1, RELEASE R7 TRACKS.
ADJLEAV  SRDL  R0,32
         BCTR  R1,0
         LH    R15,TRKCYL
         DR    R0,R15
         MH    R1,TRKCYL
         AR    R1,R15              PLUS 1 CYL
         SR    R7,R1               REDUCE NUMBER OF RELEASABLE TRACKS
         BP    RLSPART             GO RELEASE THEM
         B     RLSNONE             UNLESS THAT LEAVES NOTHING
         SPACE
*
*              PROCESSING FOR NON-CYLINDER ALLOCATIONS,
*              (OR CYLINDER ALLOCATIONS IF 'EXTENTS' SPECIFIED).
*
*              R7 CONTAINS # OF TRACKS RELEASABLE.
*              IT CAN BE REDUCED BY THE NUMBER OF TRACKS SPECIFIED
*              IN THE  LEAVE(NN)  KEYWORD.
*
NOTCYL   EQU   *
         L     R15,LEAVV
         LTR   R15,R15             TO LEAVE SOME UNUSED TRACKS?
         BZ    LEAVEX              NO, BRANCH
         SR    R7,R15              REDUCE RELEASABLE SPACE
         BP    RLSPART             BRANCH IF RELEASABLE SPACE
         B     RLSNONE             NO RELEASABLE SPACE
         SPACE
LEAVEX   EQU   *
         CLI   LEAVEKW+1,3         'EXTENTS' SPECIFIED?
         BNE   RLSALL              NO, GO RELEASE ALL UNUSED SPACE
         LR    R2,R0               SAVE HIGH TRACK USED
         SPACE
         L     R1,DCBDEBAD         POINT TO DEB
         SLR   R14,R14
         SLR   R15,R15
         SLR   R0,R0
         IC    R0,16(,R1)          GET NUMBER OF EXTENTS
         IC    R15,04(,R1)         GET LENGTH OF EXTENT FIELD
EXTLOOP  AH    R14,46(,R1)         ADD TRACKS TO COUNTER
         CR    R14,R2              TRACKS .GT. HIGH TRACK USED?
         BH    EXTSTOP             YES, KEEP THRU THIS EXTENT
         AR    R1,R15              POINT TO NEXT EXTENT
         BCT   R0,EXTLOOP          BRANCH FOR EACH EXTENT
         B     RLSNONE             KEEP ALL EXTENTS
EXTSTOP  BCTR  R0,0                SUBTRACT 1 FROM EXTENT
         LTR   R0,R0               WAS IT LAST EXTENT?
         BNP   RLSNONE             YES, KEEP ALL EXTENTS
         BCTR  R14,0               HIGH TRACK IN THIS EXTENT
         LR    R7,R8               HIGH TRACK ALLOC
         SR    R7,R14              GET NO TRACKS IN REMAIN EXTENTS
         BNP   RLSNONE
         B     RLSPART
         SPACE
*
*              RELEASE THE NUMBER OF TRACKS SPECIFIED IN R7
*
         SPACE
OPEN6    MVI   CLOSE,X'80'
         CLOSE ((R5)),MF=(E,CLOSE)
         NI    CLEANUP,255-CLEANOP5
         SPACE
         OI    JFCB+X'56',X'C0'    RLSE
         MVI   OPEN,X'80'
         OPEN  ((R6),EXTEND),TYPE=J,MF=(E,OPEN)
         BR    R2
         SPACE
RLSPART  BAL   R2,OPEN6
         LR    R0,R8               GET HIGH TRACK ALLOCATED
         SR    R0,R7               MINUS RELEASED TRACKS
         SLL   R0,16               TT00 OF LAST TRACK TO BE KEPT
         LA    R1,X'100'           RECORD 1
         OR    R0,R1               CHANGE TT00 TO TTR0  (R=1)
         SPACE
*              PUT FAKE CCHHR ADDRESS IN R6 DCB.
*              CONVERT TTR IN R0 TO CCHHR IN DCBFDAD
         L     R1,DCBDEBAD-IHADCB(,R6)
         LA    R2,DCBFDAD-IHADCB(,R6)
         ST    R3,12(,R13)
         STM   R9,R13,16(R13)
         LR    R3,R13
         L     R15,16
         L     R15,28(,R15)        CVTPCNVT  TTR TO CCHHR
         BALR  R14,R15
         LR    R13,R3
         LM    R9,R13,16(R13)
         L     R3,12(,R13)
         SPACE
         MVI   CLOSE,X'80'
         CLOSE ((R6)),MF=(E,CLOSE)
*
*              NOW RESTORE THE REAL END OF FILE
*
         SPACE
RESTREOF EQU   *
         NI    JFCB+X'56',255-X'C0'   NO RLSE
         SPACE
         MVI   OPEN,X'80'
         OPEN  ((R6),EXTEND),TYPE=J,MF=(E,OPEN)
         SPACE
         MVC   DCBFDAD-IHADCB(8,R6),HOLDEOF
         SPACE
         MVI   CLOSE,X'80'
         CLOSE ((R6)),MF=(E,CLOSE)
         B     NEXTDSN
         SPACE
*
*              RELEASE ALL UNUSED SPACE
*
         SPACE
RLSALL   BAL   R2,OPEN6
         MVI   CLOSE,X'80'
         CLOSE ((R6)),MF=(E,CLOSE)
         B     NEXTDSN
         SPACE
*
*              RELEASE NOTHING
*
         SPACE
RLSNONE  EQU   *
         SLR   R7,R7
         SPACE
*
*              CLEANUP AND TERMINATE
*
         SPACE
NEXTDSN  EQU   *
         L     R2,SAVE2
         TM    CLEANUP,CLEANOP5
         BZ    NOCLOSE
         MVI   CLOSE,X'80'
         CLOSE ((R5)),MF=(E,CLOSE)
         NI    CLEANUP,255-CLEANOP5
NOCLOSE  TM    CLEANUP,CLEANDAR    IS DATA SET ALLOCATED
         BZ    NOFREE              NO, BYPASS UNALLOCATE
         LA    R1,MYDAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,DDSAVE
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         BAL   R14,CALLDAIR        UNALLOCATE
         NI    CLEANUP,255-CLEANDAR FREED
         SPACE
NOFREE   EQU   *
         SPACE
         LTR   R7,R7               WAS RELEASE LOGIC ENTERED
         BM    NODIS               NO, BYPASS DISPLAY
         LA    R1,MSGWK
         MVI   0(R1),C' '
         MVC   1(L'MSGWK-1,R1),0(R1)
         MVC   0(6,R1),=X'402020202120'
         CVD   R7,DOUBLE
         ED    0(6,R1),DOUBLE+5
         MVC   7(6,R1),=C'TRACKS'
         LA    R15,13(R1)
         CL    R7,=F'1'            ONE TRACK
         BNE   *+6                 NO, SKIP NEXT INSTR
         BCTR  R15,0               CHANGE TRACKS TO TRACK
         MVC   0(24,R15),=C' RELEASED FROM DATA SET '
         MVC   24(44,R15),DSNSAVE+2
         LA    R0,24+44(,R15)
         SR    R0,R1
         BAL   R14,PUTMSG
NODIS    EQU   *
         SPACE
         L     R4,24(,R4)          POINT TO NEXT DSN PDE
         LA    R4,0(,R4)           CLEAR HIGH ORDER BYTE
         LTR   R4,R4               IS THERE ANOTHER
         BZ    NODSNS              END OF LIST                 SS APR85
         TM    STATUS,STATVOL      WAS VOL KEYWORD USED        SS APR85
         BZ    STARTDSN            NO,  GO PROCESS NEW DSNAME  SS APR85
         LA    R1,MSG12                                        SS APR85
         LA    R0,L'MSG12                                      SS APR85
         BAL   R14,PUTMSG                                      SS APR85
NODSNS   DS    0H                                              SS APR85
         IKJRLSA MYANS
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CALL IKJDAIR SERVICE ROUTINE                     *
*                                                          *
************************************************************
         SPACE
CALLDAIR ST    R14,DAIRREGS
         L     R15,16
         TM    732(R15),X'80'     CVTDAIR
         BNO   DAIRLINK
         L     R15,732(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI L     R14,DAIRREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         SLR   R15,R15
         ST    R15,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         ICM   R15,15,PDSMSGA          LOAD ADDRESS OF PDS JWM-GTEDS
         BZ    NOTPDS                  NO                  JWM-GTEDS
         MVI   MYSEG1,C' '             CLEAR OUT THE       JWM-GTEDS
         MVC   MYSEG1+1(79),MYSEG1         MESSAGE AREA    JWM-GTEDS
         LR    R14,R0                   GET THE LENGTH     JWM-GTEDS
         BCTR  R14,0                        MINUS ONE      JWM-GTEDS
         B     *+10                                        JWM-GTEDS
         MVC   MYSEG1(0),0(R1)         MOVE MESSAGE IN     JWM-GTEDS
         EX    R14,*-6                   WITH THE EX       JWM-GTEDS
         LA    R1,MYSEG1-1             ADDRESS OF DATA        ABL FEB87
         BALR  R14,R15                 RETURN TO PDS       JWM-GTEDS
         LM    R14,R1,PUTLINS                              JWM-GTEDS
         BR    R14                                         JWM-GTEDS
NOTPDS   DS    0H                                          JWM-GTEDS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
EXIT     SLR   R15,R15
         TM    STATUS,STATERR
         BZ    EXITX
         MVC   MYSTPB(STACKDL),STACKD
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         TCLEARQ
         LA    R15,12
EXITX    LR    R1,R13
         L     0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         PRINT NOGEN
         SPACE
CONDCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(W)
CONDCBL  EQU   *-CONDCB
         SPACE
         PRINT GEN
         SPACE
OBTAIN   CAMLST SEARCH,2,3,4
OBTAINL  EQU   *-OBTAIN
         SPACE
LOCATE   CAMLST NAME,2,,4
LOCATEL  EQU   *-LOCATE
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MSG01    DC    C'ERROR IN PARSE SERVICE ROUTINE'
MSG02    DC    C'IKJ58503I DATA SET '
MSG02A   DC    C' NOT IN CATALOG'
MSG03    DC    C'ERROR IN DEFAULT SERVICE ROUTINE'
MSG04    DC    C'UNABLE TO OPEN DATASET'
MSG05    DC    C'IKJ58509I MEMBER NAME MUST NOT BE SPECIFIED'
MSG06    DC    C'ORGANIZATION OF DATA SET MUST BE PARTITIONED OR SEQUEN+
               TIAL'
MSG07    DC    C'YOU ALREADY HAVE THIS DATA SET OPEN; RELEASE FAILED'
MSG09    DC    C'DATA SET IS NOT ON A DIRECT ACCESS DEVICE'
MSG10    DC    C'UNABLE TO OBTAIN DSCB FOR DATA SET'
MSG11    DC    C'DATA SET HAS NEVER BEEN OPENED'
MSG12    DC    C'ONLY ONE DATA SET ALLOWED WITH VOLUME KEYWORD'
         LTORG
PCLADDR  DC    0D'0'  END OF CSECT, START OF PARSE PCL CSECT
         SPACE
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
RELEAPCL IKJPARM
DSN      IKJPOSIT DSNAME,LIST,PROMPT='DATA SET NAME'
LEAVEKW  IKJKEYWD
         IKJNAME 'LEAVE',SUBFLD=LEAVESF
         IKJNAME 'SPACE',SUBFLD=LEAVESF
         IKJNAME 'EXTENTS'
VOLUMKW  IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VOLUMSF
LEAVESF  IKJSUBF
LEAVE    IKJIDENT 'NUMBER OF TRACKS',                                  +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='NUMBER OF UNUSED TRACKS TO LEAVE UN-RELEASED'
VOLUMSF  IKJSUBF
VOLUM    IKJIDENT 'VOLUME SERIAL',                                     +
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,                +
               PROMPT='VOLUME SERIAL OF DATASET IF NOT CATALOGED'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL100           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
MYSTPB   DS    0F
MYDAPL   DS    5F
MYDAPB   DS    21F
MYDFPB   DS    5F
DSNAME   DS    H,CL44
DSNSAVE  DS    H,CL44
CLEANUP  DS    X
CLEANDAR EQU   X'80'
CLEANOP5 EQU   X'40'
STATUS   DS    H
STATLOC  EQU   X'08'
STATCYL  EQU   X'04'
STATVOL  EQU   X'08'                                           SS APR85
STATERR  EQU   X'01'
RC       DS    H
VOLSER   DS    CL6
LOCATEW  DS    0F
OBTAINW  DS    4F
LOCBUF   DS    0D,0CL265
MYDSCB   DS    CL140
MSGWK    DS    CL128
DEVAREA  DS    0F                  5 FULLWORDS FOR DEVTYPE
TRKCYL   EQU   DEVAREA+10,2
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
LEAVV    DS    F
HOLDEOF  DS    CL8
DDSAVE   DS    CL8
DAIRREGS DS    F
OPEN     DS    0F
CLOSE    DS    F
DYNEXLST DS    F
SAVE2    DS    F
PDSMSGA  DS    F                                              JWM-GTEDS
MODDCB   DS    0D,XL(CONDCBL)
RLSDCB   DS    0D,XL(CONDCBL)
         DS    0D
JFCB     DS    XL176
@DATAL   EQU   *-@DATA
         SPACE
IHADCB   DSECT
         DS    XL5
DCBFDAD  DS    CL8                 FULL DISK ADDRESS, MBBCCHHR
         DS    19XL1
DCBBFTEK DS    XL1
DCBEODAD DS    AL3
DCBRECFM DS    X
DCBEXLSA DS    AL3
DCBDDNAM DS    CL8
         ORG   *-4
DCBDEBAD DS    A
DCBOFLGS DS    X
         DS    7XL1
         DS    X
DCBSYNAD DS    AL3
         SPACE
         IKJCPPL
         SPACE 3
         IKJPPL
         SPACE
         IKJDFPB
         SPACE 2
         IKJUPT
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJDAPL
         SPACE 2
         IKJDAP08
         SPACE 2
         IKJDAP18
         SPACE 2
         IKJEFFDF DFDSECT=YES
         SPACE 2
         IKJTCB
         SPACE 2
         IEZJSCB
         SPACE 2
         IHADSAB
         SPACE 2
         IEFTIOT1
         SPACE 2
SIOT     DSECT                          *                      SS JUL88
         IEFASIOT
         SPACE 2
         CVT   DSECT=YES
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
//COPY.SYSUT1 DD *
)F FUNCTION -
  THE RELEASE COMMAND IS USED TO FREE UP UNUSED SPACE FROM AN
  EXISTING DATASET.
)X SYNTAX -
         RELEASE 'DATASET-NAME' LEAVE('TRACKS') EXTENTS
                 VOLUME('VOL-SER')
  REQUIRED - 'DATASET-NAME'
  DEFAULTS - ALL UNUSED TRACKS ARE RELEASED IF NEITHER
             'LEAVE' NOR 'EXTENTS' IS SPECIFIED.
  ALIAS    - NONE
)O OPERAND -
  'DATASET-NAME'
         - SPECIFIES THE NAME OF THE DATASET WHICH IS TO HAVE
           ITS UNUSED SPACE RELEASED.
))LEAVE('TRACKS') - 'TRACKS' IS THE NUMBER OF UNUSED TRACKS
           NOT TO BE FREED.
))EXTENTS - THIS KEYWORD INDICATES THAT ONLY UNUSED SECONDARY
           EXTENTS ARE TO BE FREED.  THE PRIMARY EXTENT AND
           ANY PARTIALLY USED SECONDARY EXTENTS ARE NOT FREED,
           EVEN IF THEY CONTAIN UNUSED SPACE.
           THIS KEYWORD AND 'LEAVE' ARE MUTUALLY EXCLUSIVE.
))VOLUME('VOL-SER') - 'VOL-SER' IS THE VOLUME SERIAL NUMBER
           OF THE DATASET IF IT IS NOT CATALOGED
