****************************************************************
* FROM DMSC3001 SOURCE:  (WHY THE PARM LIST IS 'DIFFERENT')
*        THIS CSECT IS THE APPLICATION INTERFACE FOR THE
*        SEQUENTIAL FILE HANDLER. IT IS ENTERED VIA A CALL
*        WITH A PARAMETER LIST. PL/I, COBOL, AND ASSEMBLER
*        APPLICATIONS CAN BE SUPPORTED. FOR PL/I APPLICATIONS
*        A SINGLE PARAMETER IS RECEIVED WHICH IS A POINTER
*        VARIABLE INITIALIZED WITH THE ADDRESS OF AN ARRAY
*        OF POINTER VARIABLES. THE ARRAY IS THE TRUE
*        PARAMETER LIST WITH THE POINTER VARIABLE FOLLOWING
*        THE LAST PARAMETER SET TO A NULL ADDRESS
*        (X'FF000000'). FOR ALC OR COBOL, A STANDARD
*        PARAMETER LIST IS RECEIVED WITH THE HIGH-ORDER
*        BIT OF THE LAST WORD SET TO ONE.
* THIS TRACE IS CALLED FROM THE PL/1 'BRIDGE' : DMSC3003
* SO IT FOLLOWS THE PL/1 PARMLIST FORMAT. INTERNAL DIAGNOSTIC
* SNAPS CAN BE UN-COMMENTED FOR HELPFUL INFORMATION.
****************************************************************
CSTRACE  CSECT                             D.LEES 4/98    V.1
         STM   R14,R12,12(R13)             SAVE REGS
         LR    R12,R15
         USING CSTRACE,R12
         ST    R13,SAVEAREA+4
         LA    R14,SAVEAREA
         ST    R14,8(,R13)
         LR    R13,R14
         LR    R11,R1              SAVE PARM PTR - VECTOR
         L     R11,0(R11)          CALL CSTRACE (PARM PTR)
* R1 -> PARM_PTR -> PARMLIST       (SEE DMSC3003)
SNAPINIT NOP    SNAPTERM
         OPEN   (SNAPDD,OUTPUT)
         MVI    SNAPINIT+1,X'F0'
         B      SNAPTERM
SNAPDD   DCB   DDNAME=SNAPPY,MACRF=(W),DSORG=PS,RECFM=VBA,             X
               LRECL=125,BLKSIZE=882
SNAPTERM EQU    *
*
         LA    R4,SNAPLST          START OF SNAPSHOT LIST {A:B}
         LA    R6,HEADERS          START OF HEADER  LIST
         MVC   HEADERS(64),HEDRLST CLEAN SLATE
*
FUNC     EQU   *
         L     R2,4(R11)           SKIP 1ST PARM (PL1 COUNT)
         MVC   CALLFUNC(4),0(R2)   COPY FUNCTION TO STORAGE
         LA    R2,CALLFUNC         SNAP THIS AREA (ALIGNED)
         LA    R3,4(R2)
         STM   R2,R3,0(R4)
         LA    R4,8(R4)            NEXT SNAP PAIR
         LA    R6,4(R6)            NEXT HEADER
**       SNAP  DCB=SNAPDD,STORAGE=((2),(3)),ID=001
         CLC   0(4,R2),=C'OPN '
         BE    ALLSET              JUST NOTE OPEN CALL
         CLC   0(4,R2),=C'CLS '
         BE    ALLSET              JUST NOTE CLOSE CALL
         CLC   0(4,R2),=C'SNAP'
         BE    ALLSET              JUST NOTE SNAP CALL
PCB      EQU   *
         TM    8(R11),X'80'        UNEXPECTED EOL?
         BO    ALLSET
         L     R2,8(R11)
         LA    R3,76(R2)
         STM   R2,R3,0(R4)
         LA    R4,8(R4)            NEXT SNAP PAIR
         LA    R6,4(R6)            NEXT HEADER
**       SNAP  DCB=SNAPDD,STORAGE=((2),(3)),ID=002
IOA      EQU   *
         TM    12(R11),X'80'       UNEXPECTED EOL?
         BO    ALLSET
         L     R2,12(R11)
         LH    R3,74(R2)           PCB+74 = LENGTH OF IOA
         LA    R3,0(R2,R3)
         STM   R2,R3,0(R4)
         LA    R4,8(R4)            NEXT SNAP PAIR
         LA    R6,4(R6)            NEXT HEADER
**       SNAP  DCB=SNAPDD,STORAGE=((2),(3)),ID=003
KFBA     EQU   *
         TM    16(R11),X'80'       UNEXPECTED EOL?
         BO    ALLSET
         L     R2,16(R11)
         LH    R1,0(R2)            HWD LEN OF KFB AREA
         LA    R2,2(R2)            SKIP
         LA    R3,0(R1,R2)         MAX PATH (KEYS+SEGNAMES)
         STM   R2,R3,0(R4)
         LA    R4,8(R4)            NEXT SNAP PAIR
         LA    R6,4(R6)            NEXT HEADER
**       SNAP  DCB=SNAPDD,STORAGE=((2),(3)),ID=004
         LA    R5,20               STEP THRU SSA ADDRS IX
         LA    R7,11               STEP THRU SSA ADDRS IX
SSAX     EQU   *
         LA    R1,0(R5,R11)
         TM    0(R1),X'80'         VARIABLE # OF SSA'S
         BO    ALLSET
         L     R2,0(R5,R11)
         LA    R3,8(R2)            DUMP 1ST 8 BYTES OF SSAX (DEFAULT)
         LA    R1,KEYTBL
         USING KEYTABLE,R1
         LA    R8,KTBLINCR
         LA    R9,KTBLEND
LOOKFKEY EQU   *
         CLC   SEGNAME,0(R2)       MATCH?
         BE    HAVKEY
         BXLE  R1,R8,LOOKFKEY
         B     NOKEY               NOPE.
HAVKEY   EQU   *
         AH    R3,KEYLEN           ADD ACTUAL KEY LENGTH
NOKEY    EQU   *
         STM   R2,R3,0(R4)
         LA    R4,8(R4)            NEXT SNAP PAIR
         LA    R6,4(R6)            NEXT HEADER
**       SNAP  DCB=SNAPDD,STORAGE=((2),(3)),ID=005
         LA    R5,4(R5)            PURSUE NEXT SSA . . .
         BCT   R7,SSAX             > 11 EXPAND SNAP LISTS!!
ALLSET   EQU   *
         S     R4,=F'8'            BACK ONE WORD
         OI    4(R4),X'80'         ,VL (ON LAST WORD)
         S     R6,=F'4'            BACK ONE SLOT
         OI    0(R6),X'80'         ,VL
*
*        LR    R2,R11              SNAP PARMLIST
*        LA    R3,24(R2)
*        SNAP  DCB=SNAPDD,STORAGE=((2),(3)),ID=666,PDATA=(REGS)
*
         SNAP  DCB=SNAPDD,LIST=SNAPLST,STRHDR=HEADERS
*
RETURN   EQU   *
         L     R13,SAVEAREA+4
         LM    R14,R12,12(R13)     RESTORE REGS
         XR    R15,R15             I'M OK - YOU'RE OK !
         BR    R14
************************************************************
**  S T O R A G E  *****************************************
************************************************************
SAVEAREA DC    9D'0'
CALLFUNC DS    CL4
SNAPLST  DC    15D'0'
         DC    X'8000000080000000'           EMERGENCY STOP!
HEADERS  DS    16F
HEDRLST  DS    16F
         ORG   HEDRLST
         DC    A(HDR1L),A(HDR2L),A(HDR3L),A(HDR4L),A(HDR5L)
         DC    A(HDR5L),A(HDR5L),A(HDR5L),A(HDR5L),A(HDR5L)
         DC    A(HDR5L),A(HDR5L),A(HDR5L),A(HDR5L),A(HDR5L)
         DC    X'80000000'                    EMERGENCY STOP!
HDR1L    DC    AL1(L'HDR1)
HDR1     DC    CL20'FUNCTION'
HDR2L    DC    AL1(L'HDR2)
HDR2     DC    CL20'PCB     '
HDR3L    DC    AL1(L'HDR3)
HDR3     DC    CL20'I/O AREA'
HDR4L    DC    AL1(L'HDR4)
HDR4     DC    CL20'KFB AREA'
HDR5L    DC    AL1(L'HDR5)
HDR5     DC    CL20'SSA_____'
*
         DS    0D                         ALIGN!
KEYTBL   EQU   *
         DC    CL8'ROOT    ',H'9'
         DC    CL8'UNMTRRT ',H'5'
         DC    CL8'SUNRCR  ',H'7'
         DC    CL8'SVCCONT ',H'7'
         DC    CL8'SUNONE  ',H'7'
         DC    CL8'MTRRATE ',H'5'
         DC    CL8'MTRDATA ',H'9'
         ORG   *-KTBLINCR
KTBLEND  EQU   *
         LTORG
KEYTABLE DSECT
SEGNAME  DS    CL8
KEYLEN   DS    H
KTBLINCR EQU   *-KEYTABLE
         REGS
         END
