//XXXXXXXL JOB (TYYYYY,XXXX),'D.LEES.X411',CLASS=R,
//**    RESTART=MLIST,
//      MSGCLASS=T,MSGLEVEL=1,NOTIFY=XXXXXXX,TIME=(30)
//*====================================================*//
//* USE SAS TO GET DSNAMES OUT OF SYS1.PARMLIB(PROG00) *//
//*====================================================*//
//PROG00   EXEC SAS609,OPTIONS='SETINIT,MACRO,DQUOTE'
//FT11F001 DD   SYSOUT=* ,OUTLIM=10000   LOG
//FT12F001 DD   SYSOUT=* ,OUTLIM=10000   DATA
//FT13F001 DD   SYSOUT=* ,OUTLIM=10000   PUNCH
//PARMLIB  DD   DSN=SYS1.PARMLIB(PROG00),DISP=SHR
//PUNCH    DD   DSN=&&PROG00,DISP=(,PASS),SPACE=(TRK,5),UNIT=BOSS
//SYSIN    DD   *
DATA _NULL_;
FORMAT DSNAME $44.;
RETAIN LNKLST 0;
FILE PUNCH;
INFILE PARMLIB;
INPUT @1 CARD $72.;
IF INDEX(CARD,'LNKLST') THEN LNKLST = 1;
IF LNKLST THEN;
ELSE DELETE;
I = INDEX(CARD,'DSNAME');
IF I THEN J = INDEX(CARD,')');
IF I AND J THEN DO;
    DSNAME = SUBSTR(CARD,I+7,J-(I+7));
    PUT DSNAME;
    END;
//*=================================================================*//
//* PARSE OUT DSNAMES FROM THE LPA LIST                             *//
//*=================================================================*//
//PARSE     EXEC PGM=PARSIFAL
//STEPLIB   DD DSN=TST.DZL.XMIT.LOAD,DISP=SHR
//*
//*NOTE*    /* MLPA NOT INCLUDED BECAUSE IT'S MODULE SPECIFIC */
//INFILE    DD DSN=SYS1.PARMLIB(LPALST00),DISP=SHR
//**OLD     DD DSN=SYS1.PARMLIB(LNKLST00),DISP=SHR  NOW (PROG00)
//          DD *  (IMPLICIT LINKLIB)
SYS1.LINKLIB
//          DD DSN=&&PROG00,DISP=(OLD,PASS)
//*
//*INFILE          DD *       /* REMOVE LINE #'S // NAME IN CC1 */
//OUTFILE   DD DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),
//          DSN=&&DSNS,UNIT=SYSDA,SPACE=(TRK,(1,1)),DISP=(,PASS)
//*=================================================================*//
//* EXPAND DSNAMES TO LIST OF MEMBERS                               *//
//*=================================================================*//
//MLIST     EXEC  PGM=MEMLIST,   PARM='SHORT',
//*>>>>>>   NOTE: SHORT IS FOR NON-LOAD PDS, IF MIXED TYPES USE SHORT.
//          REGION=6000K
//STEPLIB   DD    DSN=TST.DZL.XMIT.LOAD,DISP=SHR
//SYSIN     DD    DSN=&&DSNS,DISP=(OLD,PASS)
//SYSOUT    DD    DCB=(RECFM=FB,LRECL=80,BLKSIZE=800),
//          DSN=&&MEMLIST,UNIT=SYSDA,SPACE=(CYL,(10,10)),DISP=(,PASS)
//SNAPDD    DD    SYSOUT=*
//SYSUDUMP  DD    SYSOUT=*
//*=================================================================*//
//* USE SAS TO FORMAT THE XREF LISTING                              *//
//*=================================================================*//
//REPORT   EXEC SAS609
//WORK     DD   SPACE=(CYL,(30,15))
//FT11F001 DD   SYSOUT=*,OUTLIM=10000   LOG
//*T12F001 DD   SYSOUT=*,OUTLIM=25000   PRINT
//FT12F001 DD   SYSOUT=* (E,,XXX),COPIES=1     G=VERT. E=HORIZ.
//FT13F001 DD   SYSOUT=*,OUTLIM=10000   PUNCH
//INDD     DD   DSN=&&MEMLIST,DISP=(OLD,PASS)
//SYSIN    DD   *
 OPTIONS DQUOTE;
DATA  MEMLIST;
 INFILE INDD ;
 INPUT      MEMBER     $8.
            SEQ         3.
            DSNAME    $44.
            ATTR       $4.
            RMODE      $3.
            AMODE      $3.
            APF      PIB1.
            SETSSI   PIB4.
            STORAGE  PIB4.
            ALIAS      $8.
            FILLER     $8.       /* DIAGNOSTIC FIELD */
            ;
FORMAT SETSSI STORAGE HEX8. ;
LABEL ALIAS = 'ALIAS OF'
      RMODE = 'RMODE*'
      AMODE = 'AMODE*';
PROC SORT DATA=MEMLIST;
 BY MEMBER SEQ;
PROC PRINT LABEL;
 ID MEMBER;
 VAR SEQ DSNAME ATTR RMODE AMODE APF SETSSI STORAGE ALIAS;
 TITLE1 'LINKLIST CONCATENATION REPORT II';
 TITLE2 ' ALL MEMBERS AND ALIASES SHOW';
 TITLE3 ' IN SEARCH SEQUENCE BY LIBRARY';
 TITLE4 '=================================';
 FOOTNOTE1 '* FOR RMODE AND AMODE CHECK AGAINST AMBLIST';
//*=================================================================*//
