         PRINT NOGEN
MEMLIST  CSECT                            D. LEES 12-82
         REGS
INIT     SAVE  (14,12)
         BALR  R12,R0
         USING *,R12
         ST    R13,SAVE+4
         LA    R0,SAVE
         ST    R0,8(R13)
         LR    R13,R0
         L     R1,0(R1)
         LA    R1,2(R1)
         MVC   SHORT,0(R1)
         OPEN  (SYSIN,,SYSOUT,OUTPUT)
         CALL  DYNAM,(DYWORK,DYINIT),VL
*****************************************
* READ IN THE DATASET NAME              *
*****************************************
READIN   EQU   *
         GET   SYSIN,CARDIN
         UNPK  SEQNO,SEQ
         OI    SEQNO+2,X'F0'             GENERATE SEQUENCE#
         AP    SEQ,=P'1'
********************************************
* ALLOCATE THE DATASET DYNAMICALLY         *
* RE-WRITTEN TO USE DYNAM FROM CBT FILE089 *
********************************************
DYNALC   EQU   *                          FIRST ARG IS MEMBER
         MVC   DYDSN+4(44),CARDIN
DY1      EQU   *
         CALL  DYNAM,(DYWORK,DYALLOCR,DYRETRN,DYDSN,DYDISP),VL
         LTR   R15,R15
         BZ    SVC99OK
         ABEND 99,DUMP,STEP              DSN NOT AVAILABLE
*        SVC 99 RETURN CODES
*          00 SUCCESSFUL ALLOCATION
*          04 ENVIRONMENT, RESOURCE, OR SYSTEM ROUTINE FAILURE
*          08 REQUEST DENIED BY INSTALLATION VALIDATION ROUTINE
*          12 INVALID SVC 99 PARAMETER LIST
*        DYNAM RETURN CODES
*          16 INVALID VERB (PARAMETER 2)
*          20 INVALID KEYWORD (PARAMETER 3)
*          24 WORK AREA OVERFLOW
*          28 INVALID VALUE KEYWORD
SVC99OK  EQU   *
         MVC   DYDD+3(8),DYDDNAM
*****************************************
* PROCESS THE PDS DIRECTORY             *
*****************************************
         LA    R2,PDS
         USING IHADCB,R2
         MVC   DCBDDNAM,DYDDNAM
OPENS    OPEN  (PDS,(INPUT))
DIRLOOP  EQU   *
         GET   PDS,DIRBLOCK
         LA    R7,DIRBLOCK
         AH    R7,DIRBLOCK                COUNT OF BYTES ON BLOCK
         LA    R4,DIRBLOCK+2
DIRSCAN  EQU   *
         CR    R4,R7
         BNL   DIRLOOP                    NEXT BLOCK PLEASE
         CLC   0(8,R4),FFFFFFFF
         BE    EOFPROC
         MVC   MEMBER,0(R4)
         CLC   SHORT,=C'SHORT'
         BE    KISS
         BAL   R11,ATTRIB
KISS     EQU   *
         PUT   SYSOUT,TABLE
NEXTMEM  XR    R5,R5
         NI    11(R4),X'1F'           3 HIGH ORDER BITS TO 000
         IC    R5,11(R4)
         SLL   R5,1                   H'S X 2
         LA    R5,12(R5)              R5 = ((H'S*2)+12)
         AR    R4,R5
         B     DIRSCAN
EOFPROC  EQU   *
         CLOSE (PDS)
         CALL  DYNAM,(DYWORK,DYUNALLC,DYDD),VL
         B     READIN
GOBACK   EQU   *
         CLOSE (SYSIN,,SYSOUT)
         CALL  DYNAM,(DYWORK,DYEND),VL
         L     R13,SAVE+4
         RETURN (14,12),RC=0
***************************************
*  PROCESS THE MODULE ATTRIBUTES
***************************************
ATTRIB   EQU *
CLEAR    MVC    ATTR,BLANKS
         MVC    TRUENM,BLANKS
         XC     SSI,SSI
         XC     STOR,STOR
         MVI    APFLG,X'00'
         USING  PDS2,R4
         MVC    WORK1,PDS2FTB2
*        CALL   BITMAP,(WORK1,ONE,FILLER)
REUS     TM     PDS2ATR1,PDS2REUS
         BNO    RENT
         MVC    ATTR,=C'REUS'
RENT     TM     PDS2ATR1,PDS2RENT
         BZ     STORAGE
         MVC    ATTR,=C'RENT'
STORAGE  XR     R0,R0
         ICM    R0,14,PDS2STOR
         SRL    R0,8
         ST     R0,WORK4
         MVC    STOR,WORK4
RMOD     MVC    RMODE,=C' 24'
         TM     PDS2FTB2,PDSLRMOD
         BZ     AMODS
         MVC    RMODE,=C' 31'
AMODS    MVC    AMODE,=C' 24'
         TM     PDS2INDC,PDS2ALIS
         BO     ALIAS
MAIN     TM     PDS2FTB2,PDSMAMOD
         BZ     ATTREXT
         MVC    AMODE,=C' 31'
         TM     PDS2FTB2,BIT7
         BZ     ATTREXT
         MVC    AMODE,=C'ANY'
         B      ATTREXT
ALIAS    TM     PDS2FTB2,PDSAAMOD
         BZ     ATTREXT
         MVC    AMODE,=C' 31'
         TM     PDS2FTB2,BIT5
         BZ     ATTREXT
         MVC    AMODE,=C'ANY'
ATTREXT  LR     R5,R4
         LA     R5,33(R5)
SCATR    TM     PDS2ATR,PDS2SCTR
         BZ     ALIASNM
         LA     R5,PDSS01LN(R5)
ALIASNM  TM     PDS2INDC,PDS2ALIS
         BZ     SETSSI
         MVC    TRUENM,PDS2MNM-PDSS02(R5)
         LA     R5,PDSS02LN(R5)
SETSSI   TM     PDS2FTB1,PDS2SSI
         BZ     APF
         ST     R5,WORK4
         TM     WORK4+3,1
         BZ     ALIGNED
         LA     R5,1(R5)
ALIGNED  MVC    SSI,PDSSSIWD-PDSS03(R5)
         LA     R5,PDSS03LN(R5)
APF      TM     PDS2FTB1,PDSAPFLG
         BZ     ENDATTR
         MVC    APFLG,PDSAPFAC-PDSS04(R5)
ENDATTR  EQU    *
         BR     R11
         DROP   R4
***************************************
         EJECT
***************************************
SAVE     DC  9D'0'
FFFFFFFF DC  8X'FF'
WORK4    DS  F
DIRBLOCK DS  CL256                       KEEP ON 0H
CARDIN   DS  CL80
SEQ      DC  PL2'1'
TRTAB1   DC  256B'00'
         ORG TRTAB1+X'40'
         DC  C' '
         ORG
BLANKS   DC  CL16' '
ZERO     DC  F'0'
ONE      DC  F'1'
WORK1    DS  C
SHORT    DC  CL5' '
*
TABLE    DS  0CL90
MEMBER   DS  CL8
SEQNO    DS  ZL3
DSNAME   DS  CL44
ATTR     DC  CL4' '
RMODE    DC  CL3' '
AMODE    DC  CL3' '
APFLG    DC  XL1'00'
SSI      DC  XL4'00'
STOR     DC  XL4'00'
TRUENM   DC  CL8' '
FILLER   DC  CL8' '
*
DYRETRN  DS  0CL74
DYDDNAM  DS  CL8
DYDSNAME DS  CL44
DYDSORG  DS  CL16
DYVOLSER DS  CL6
*
DYWORK   DC  F'0'
DYINIT   DC  C'INIT '
DYEND    DC  C'END '
DYALLOCR DC  C'ALLOCR '
DYUNALLC DC  C'UNALLOC '
DYDISP   DC  C'SHR;'
DYDSN    DC  CL4'DSN=',CL44' ',C';'
DYVOL    DC  CL4'VOL=',CL6' ',C';'
DYDD     DC  CL3'DD=',CL8' ',C';'
*
         EJECT
PDS      DCB DDNAME=PDS,BLKSIZE=256,MACRF=(GM),DSORG=PS,               C
               EODAD=EOFPROC,RECFM=U
SYSOUT   DCB DDNAME=SYSOUT,BLKSIZE=9000,MACRF=(PM),DSORG=PS,           C
               LRECL=90
SYSIN    DCB DDNAME=SYSIN,MACRF=(GM),DSORG=PS,                         C
               EODAD=GOBACK
        DCBD  DSORG=PS
        EJECT
        PRINT NOGEN
        IHAPDS PDSBLDL=NO
        END
