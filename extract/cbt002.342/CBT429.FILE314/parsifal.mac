1 PARSER: PROC OPTIONS(MAIN);
     /* ORIGINAL VERSION BY DICK SHELTZ */
     /* IMPROVED VERSION BY DAVE LEES   */
     DECLARE INFILE FILE  INPUT RECORD;
     DECLARE OUTFILE FILE OUTPUT RECORD;
     DECLARE  1 INREC,
                5 CARD CHAR(72),
                5 FILL CHAR(08);
     DECLARE  1 OUTREC,
                5 KEYWORD CHAR (72),
                5 SEQ     PICTURE '99999999';
     DECLARE  I FIXED DEC(3) INIT(0),
              J FIXED DEC(3) INIT(0),
              L FIXED DEC(3) INIT(0),
              N FIXED DEC(3) INIT(0),
              SEQ FIXED DEC(3) INIT(0),
              END_DESC CHAR(1) INIT('N'),
              END_OF_FILE CHAR(1) INIT('N'),
              DESC_1      CHAR(75) VARYING,
              HIT         CHAR(1) INIT('N');
     ON ENDFILE (INFILE)  END_OF_FILE='Y';
     READ FILE (INFILE) INTO (INREC);
     DO UNTIL (END_OF_FILE='Y');
       I=1;
       DESC_1=TRANSLATE(INREC.CARD,' ',',');
       L=LENGTH(DESC_1);
       K=L;
       END_DESC='N';
       DO UNTIL (END_DESC = 'Y');
         IF SUBSTR(DESC_1,I,L) = ' ' THEN LEAVE; /* DZL */
         J=INDEX(SUBSTR(DESC_1,I,L),' ');
         IF J = 0 THEN LEAVE;
         IF J <= 2 THEN HIT = 'Y';               /* DZL */
         OUTREC.KEYWORD=SUBSTR(DESC_1,I,J);
         OUTREC.SEQ = SEQ;
         SEQ=SEQ+1;
         WRITE FILE (OUTFILE) FROM (OUTREC);
         L = L - J; /*DECREMENT TO COMPENSATE FOR CHANGE IN LENGTH*/
         I = I + J; /*INCREMENT TO REPOSITION IN DESC LINE FOR    */
                    /*NEXT KEYWORD                                */
         IF I >= K THEN  END_DESC = 'Y';
         END;
     READ FILE (INFILE) INTO (INREC);
     END;
 END PARSER;
