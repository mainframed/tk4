************************************************************
* STRING SEARCH ALGORITHM BASED ON THE PUBLISHED WORKS OF  *
* BOYER/MOORE 1977.       (DAVE LEES 1996)                 *
* WELL, IT WAS, BUT NOW IT IS MORE OF AN ASSEMBLER         *
* PROGRAMMER'S APPROACH USING THE TRT MICROCODE TO DO      *
* MOST OF THE WORK. R15 CONTAINS THE COUNT OF HITS FOR THE *
* SCANNED TEXT. FOR THOSE WHO CANNOT TEST R15 OR 'RETURN   *
* CODE' AN OPTIONAL 5TH PARAMETER IS PROVIDED.             *
************************************************************
BMSS     CSECT    D.LEES 1996
BMSS     AMODE    24
BMSS     RMODE    24
         SAVE     (14,12)
         LR       R12,R15
         USING    BMSS,R12
         LA       R11,SAVEAREA
         ST       R11,8(R13)
         ST       R13,SAVEAREA+4
         LR       R13,R11
************************************************************
*  CAPTURE INPUT PARAMETERS: P1 => AL2(LEN) STRING         *
*                            P2 => SEARCH STRING A(80)     *
*                            P3 => AL2(LEN) TEXT           *
*                            P4 => TEXT STRING A(132)      *
*                            P5 => F COUNT OF HITS {OPT.}  *
************************************************************
         LM       R1,R5,0(R1)
         LH       R0,0(R1)          GET AND TEST STRING LENGTH
         CH       R0,=H'80'
         BH       ERROR
         STH      R0,LENGTH
         LH       R0,0(R3)          GET AND TEST TEXT LENGTH
         CH       R0,=H'132'
         BH       ERROR
         STH      R0,LINESIZE
         LR       R0,R2
         ST       R0,@STRING
         LR       R0,R4
         ST       R0,@TEXT
         N        R5,=X'7FFFFFFF'   REMOVE VL OR AMODE BIT
         LTR      R5,R5
         BZ       NOP5              P5 IS OPTIONAL
         L        R0,0(R5)
         LTR      R0,R0             IF PRESENT, MUST BE 0
         BNZ      NOP5
         ST       R5,P5
NOP5     EQU      *
************************************************************
*  DIAGNOSTIC TRACE                                        *
************************************************************
SNAPINIT NOP    SNAPTERM
         OPEN   (SNAPDD,OUTPUT)
         MVI    SNAPINIT+1,X'F0'
         B      SNAPTERM
SNAPDD   DCB   DDNAME=SNAP01,MACRF=(W),DSORG=PS,RECFM=VBA,             X
               LRECL=125,BLKSIZE=882
SNAPTERM EQU    *
* SAMPLE:  SNAP DCB=SNAPDD,PDATA=REGS,STORAGE=(SNAPA,SNAPB),ID=1
* SAMPLE:  LA   R2,START
*          LA   R3,999(R2)      LENGTH
*          SNAP DCB=SNAPDD,PDATA=REGS,STORAGE=((2),(3)),ID=1
************************************************************
*  INITIALIZE TRANSLATE TABLE WITH FIRST CHARACTER         *
************************************************************
         XC       TRTABLE,TRTABLE  ZERO OUT
         LA       R1,0
         L        R3,@STRING
         LA       R2,TRTABLE
BLDTRT   EQU      *
         IC       R1,0(R3)         TREAT CHAR AS BIN DATA
         LA       R2,0(R1,R2)      CALCULATE TRTABLE LOCATION
         STC      R1,0(R2)         STORE 'CHAR' IN CELL
************************************************************
*  EVALUATE TEXT STRING                                    *
************************************************************
         L        R3,@STRING       POINT TO SEARCH STRING
         LH       R4,LENGTH
         L        R5,@TEXT         POINT TO TEXT FIELD
         LH       R6,LINESIZE
         LA       R11,0(R5,R6)     SET END OF TEXT = R11
         SR       R11,R4           LESS SEARCH LENGTH
         BCTR     R11,0            LAST BYTE !
         XR       R8,R8            HIT COUNTER
SEEK     EQU      *
         LA       R9,8(R5)         PART OF TRACE
TRACE    SNAP DCB=SNAPDD,PDATA=REGS,                                   X
               STORAGE=(SNAPA,SNAPB,(5),(9)),ID=7
         CR       R5,R11           CHECK FOR END OF TEXT (SOC4)
         BH       RETURN           ALL DONE
         LR       R1,R6
         BCTR     R1,0
         EX       R1,FINDIT        COMPARE STRING:TEXT (LENGTH)
*        TRT      0(0,R5),TRTABLE  TBL: OFFSETS OF CHARACTERS
         BZ       RETURN           ALL DONE
COMPARE  EQU      *                TRY FULL STRING COMPARE
         LA       R7,0(R1)         SAVE HIT LOCATION IN R7
         LR       R1,R4
         BCTR     R1,0
         EX       R1,CMPLEN
*        CLC      0(0,R7),0(R3)    R3=SEARCH R7=TEXT HIT
         BNE      INCR
SUCCESS  EQU      *
         AH       R8,=H'1'         R8 IS THE HIT COUNTER
         LR       R1,R7
         SR       R1,R5            CALCULATE OFFSET
         SR       R6,R1            SUBTRACT OFFSET FROM TEXT LENGTH
         SR       R6,R4            ALSO SUBTRACT SEARCH LENGTH
         LA       R5,0(R7,R4)      ADVANCE TEXT POINTER TO HIT+LEN
         B        SEEK
INCR     EQU      *
         LR       R1,R7            NO LUCK, MOVE ON . . . .
         SR       R1,R5            CALCULATE OFFSET
         SR       R6,R1            SUBTRACT OFFSET FROM TEXT LENGTH
         LA       R5,1(R7)         ADVANCE TEXT POINTER TO HIT+1
         B        SEEK
************************************************************
*  RETURN TO CALLER                                        *
************************************************************
RETURN   EQU      *
         L        R1,P5
         LTR      R1,R1
         BZ       GOBACK
         ST       R8,0(R1)
GOBACK   EQU      *
         L        R13,SAVEAREA+4
         LR       R15,R8
         RETURN   (14,12),RC=(15)  R15 (RC) R8=HIT COUNT
ERROR    EQU      *
         L        R13,SAVEAREA+4
         RETURN   (14,12),RC=16    R15 (RC) 16 = ERROR
************************************************************
*  STORAGE                                                 *
************************************************************
SNAPA    EQU      *
SAVEAREA DS       9D
FINDIT   TRT      0(0,R5),TRTABLE
CMPLEN   CLC      0(0,R7),0(R3)        R3=SEARCH R1=TEXT
LENGTH   DS       H
@STRING  DS       A                    MAX SEARCH STRING = 80
LINESIZE DS       H
@TEXT    DS       A                    MAX TEXT LENGTH = 132
TRTABLE  DS       XL256
P5       DC       A(0)
SNAPB    EQU      *
         REGS
         LTORG
         END
