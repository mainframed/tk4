//DUMPCSA JOB  (2205,07600),'FRANK O''QUINN',CLASS=9,
//  NOTIFY=BUTCH,MSGCLASS=S
/*JOBPARM L=250
//*********************************************************************
//*                                                                   *
//*   TO BROWSE CSA/ECSA, JUST SNAP IT THEN BROWSE THE PRINTOUT.      *
//*   USEFUL WHEN CSA SIZE IS CREEPING UP.                            *
//*   RUDE AND CRUDE, BUT IT WORKS.                                   *
//*                                                                   *
//*   SYSLMOD MUST BE APF-AUTHORIZED.                                 *
//*   GENERATES ABOUT 175K LINES PER APPROX 7MB OF CSA/ECSA ALLOCATED.*
//*                                                                   *
//*   IT SHOULD BE FAIRLY EASY FOR ONE TO CHANGE THE 'SNAP' MACRO     *
//*   TO A ROUTINE WHICH WOULD COMPARE FOR A STRING, IF THAT WERE     *
//*   THE REQUIREMENT.                                                *
//*                                                                   *
//*********************************************************************
//AAA   EXEC  ASMHCLG,MAC1='SYS1.AMODGEN',
//  PARM.LKED='MAP,LIST,LET,AC(1)'
//SYSIN  DD  *
DUMPCSA  CSECT
DUMPCSA  AMODE 31
DUMPCSA  RMODE 24
         USING DUMPCSA,R15
         B     BEGIN                BRANCH AROUND EYECATCHER
BEGINS   DC    AL1(BEGIN-BEGINS)
         DC    C' DUMPCSA ROUTINE'
         DC    C' &SYSDATE &SYSTIME'
         DC    C' FRANK O''QUINN'
         DC    C' LOUISIANA STATE UNIVERSITY'
         DC    C' SYSTEM NETWORK COMPUTER CENTER'
*-------------------------------------------------*
BEGIN    DS    0H
         STM   R14,R12,12(R13)      SAVE THE REGISTERS
         LR    R12,R15              SET UP BASE REG
         DROP  R15
         USING DUMPCSA,R12
         LA    R2,SAVE              ADDRESS OF MY SAVE AREA
         ST    R2,8(R13)            CHAIN SAVE AREAS BACK...
         ST    R13,SAVE+4           ...AND FORWARD
         LR    R13,R2               SET UP SAVE REG
*-------------------------------------------------*
         OPEN  (SNAPDCB,OUTPUT)
         SPACE 1
         L     R2,16                GET ADDRESS OF CVT
         USING CVT,R2               ADDRESSABILITY
         L     R3,CVTGDA            GET ADDRESS OF GDA
         USING GDA,R3               ADDRESSABILITY
         L     R4,GDASPT            GET ADDRESS OF SUB POOL TABLE
         SPACE 1
         MODESET KEY=ZERO,MODE=SUP  NEEDED TO READ PROT STORAGE
         SPACE 1
         USING SPT,R4               ADDRESSABILITY
         LA    R5,SPTNTRY           GET ADDRESS OF SPT ENTRIES
         LA    R3,1540(R4)          END OF SPT+1
*
NEXTPOOL DS    0H
*
*   ---------- FOR EACH KEY OF THIS SUBPOOL
*
*---------------------------------- CSA BACKED BELOW THE LINE
         LA    R6,SPTFBDQE(,R5)     GET ADDRESS OF POINTER
         L     R7,0(,R6)            GET POINTER
         CR    R6,R7                Q. SAME VALUE?
         BE    SKIPBDQE             A. YES, SKIP IT
         L     R8,SPTLBDQE(,R5)     GET ADDRESS OF LAST DQE
         BAL   R11,SHOWDQE          DISPLAY IT
SKIPBDQE DS    0H
*
*---------------------------------- CSA BACKED ANYWHERE
         LA    R6,SPTFADQE(,R5)     GET ADDRESS OF POINTER
         L     R7,0(,R6)            GET POINTER
         CR    R6,R7                Q. SAME VALUE?
         BE    SKIPADQE             A. YES, SKIP IT
         L     R8,SPTLADQE(,R5)     GET ADDRESS OF LAST DQE
         BAL   R11,SHOWDQE          DISPLAY IT
SKIPADQE DS    0H
*
*---------------------------------- ECSA
         LA    R6,SPTFEDQE(,R5)     GET ADDRESS OF POINTER
         L     R7,0(,R6)            GET POINTER
         CR    R6,R7                Q. SAME VALUE?
         BE    SKIPEDQE             A. YES, SKIP IT
         L     R8,SPTLEDQE(,R5)     GET ADDRESS OF LAST DQE
         BAL   R11,SHOWDQE          ELSE DISPLAY IT
SKIPEDQE DS    0H
*-------------------------------------------------*
         LA    R5,24(R5)            POINT TO NEXT KEY/SUBPOOL
         CR    R5,R3                Q. REACHED THE END YET
         BL    NEXTPOOL             A. NO, THEN LOOP
*-------------------------------------------------*
         CLOSE SNAPDCB
         SPACE 1
         L     R13,SAVE+4           ADDRESS OF LAST SAVE AREA
         LM    R14,R12,12(R13)      RESTORE THE REGISTERS
         XR    R15,R15              SET RETURN CODE
         BR    R14                  RETURN TO CALLER
         TITLE 'DUMP DQE STORAGE'
***********************************************************************
*                                                                     *
*        SNAP THE ALLOCATED STORAGE OF A DQE                          *
*                                                                     *
*        R7  - DQE                                                    *
*        R8  - LAST DQE IN CHAIN                                      *
*        R11 - RETURN ADDRESS                                         *
*        MUST PRESERVE  R5                                            *
*                                                                     *
***********************************************************************
SHOWDQE  DS    0H
         USING DQE,R7               ADDRESSABILITY
         LA    R14,START0           BEGINNING OF LIST
         ST    R14,START0
         LA    R1,MAXPAIR           PLACE FOR LAST PAIR
NEXTDQE  DS    0H
         CR    R1,R14               Q. TOO MANY PAIRS
         BL    DOSNAP               A. YES, QUIT NOW
         LA    R14,8(R14)           POINT TO NEXT PAIR OF ADDRESSES
         ST    R7,0(R14)
         LA    R15,23(,R7)          END OF DQE
         ST    R15,4(R14)
         CR    R1,R14               Q. TOO MANY PAIRS
         BL    DOSNAP               A. YES, QUIT NOW
         LA    R14,8(R14)           POINT TO NEXT PAIR OF ADDRESSES
         L     R15,DQEFFQE          GET ADDRESS OF FQE
         USING FQE,R15
DUMPFQE  DS    0H
         ST    R15,0(R14)
         LA    R0,15(R15)           GET END OF FQE
         ST    R0,4(R14)
         CR    R1,R14               Q. TOO MANY PAIRS
         BL    DOSNAP               A. YES, QUIT NOW
         LA    R14,8(R14)           POINT TO NEXT PAIR OF ADDRESSES
         C     R15,DQELFQE          Q. WAS THAT LAST FQE
         BE    DUMPDQE              A. YES, BRANCH
         L     R15,FQENEXT
         B     DUMPFQE              AND LOOP
DUMPDQE  DS    0H
         L     R15,DQEAREA          GET START OF REGION
         ST    R15,0(R14)
         A     R15,DQESIZE          GET END OF REGION+1
         BCTR  R15,R0
         ST    R15,4(R14)
         CR    R7,R8                Q. WAS THAT THE LAST IN THE CHAIN
         BE    DOSNAP               A. YES, GO SNAP IT.
         L     R7,DQENEXT           ELSE GET NEXT DQE
         B     NEXTDQE              AND LOOP
DOSNAP   DS    0H
         OI    4(R14),X'80'         SET LAST PARM INDICATOR
         LA    R14,7(,R14)          ADDRESS OF LAST BYTE OF LIST
         ST    R14,END0             SAVE IT
         SPACE 1
         SNAP  DCB=SNAPDCB,ID=(9),LIST=SNAPLIST
         SPACE 1
         BR    R11                  AND RETURN
         TITLE 'STORAGE'
***********************************************************************
*                                                                     *
*        STORAGE                                                      *
*                                                                     *
***********************************************************************
         PRINT NOGEN
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,LRECL=125,BLKSIZE=1632,MACRF=(W), XXXX
               DDNAME=SNAPOUT
SAVE     DS    20F
SNAPLIST DS    0F
START0   DS    F
END0     DS    F
         DS    200F                100 PAIRS OF ADDRESSES
         DS    200F                100 PAIRS OF ADDRESSES
         DS    200F                100 PAIRS OF ADDRESSES
         DS    200F                100 PAIRS OF ADDRESSES
MAXPAIR  DS    4F
*
         REGISTER                  , REGISTER EQUATES
         IHASPT
         CVT   DSECT=YES,LIST=NO
         IHADQE
         IHAFQE
         IHAGDA
         END
//LKED.SYSLMOD DD  DSN=SNCC.LOADLIB(DUMPCSA),SPACE=,DISP=SHR,UNIT=3380
//GO.SYSUDUMP DD  SYSOUT=*
//GO.SNAPOUT  DD  SYSOUT=*
//
