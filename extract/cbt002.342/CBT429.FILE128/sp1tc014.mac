*          DATA SET SP1TC014   AT LEVEL 002 AS OF 04/28/89
***********************************************************************
*                                                                     *
*    PROGRAM NAME:                SP1TC014                            *
*                                                                     *
*    AUTHOR:                      FRANCIS                             *
*                                                                     *
*    PURPOSE:                     VTAM SECONDARY OPERATOR UNDER SPF   *
*                                                                     *
*    DATE WRITTEN:                04/22/83                            *
*                                                                     *
*    SOURCE LIBRARY:              SYS.SYSPAN                          *
*                                                                     *
*    LOAD LIBRARY:                SYS.SP1.ISPLDEV  (TEST)             *
*                                 SYS.SP1.ISPLLIB  (PROD)             *
*                                                                     *
*    ATTRIBUTES:                  STD.                                *
*                                                                     *
*    UPDATES:                     12/14/83 - T FOR TRACE, N FOR       *
*                                   NOTRACE, ? TO SHOW VTAM COMMAND   *
*                                 04/27/89 - * ON SHORT CUT WILL USE  *
*                                   PREVIOUSLY ENTERED NAME (EX: A *) *
*                                                                     *
*    INPUT (ISPF VARIABLES                                            *
*           ON PANEL SP1VO00)   - WAIT TIME (TO ALLOW COMMAND         *
*                                      COMPLETION)                    *
*                                 ROLL (YES OR NO - OUTPUT CONTROL)   *
*                                 COMMAND (VTAM COMMAND - SOME        *
*                                      COMMANDS HAVE A SHORT FORM     *
*                                      FOR THIS PROGRAM ONLY)         *
*                                                                     *
*    OUTPUT: (ISPF VARIABLES                                          *
*             ON PANEL SP1VO00) - UP TO 19 LINES OF RESPONSE TO THE   *
*                                 LAST COMMAND ENTERED.  IF ROLL=NO   *
*                                 THE DISPLAY WILL NOT CHANGE         *
*                                                                     *
*                                                                     *
*                                                                     *
*    MESSAGES: (ISPF)  SP100A  - USER NOT AUTHORIZED TO USE SP1TC014  *
*                      SP100B  - ISPF SERVICE FAILED, RC = NNNN       *
*                      SP100C  - MORE DATA AVAILABLE                  *
*                      SP100D  - MORE DATA AVAILABLE                  *
*                      SP100E  - ENTER VTAM COMMAND                   *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*    METHOD:                                                          *
*                                                                     *
*        1.  DISPLAY SPF PANEL.  IF A COMMAND IS ENTERED THEN ISSUE   *
*            IT TO VTAM.                                              *
*                                                                     *
*        2.  IF OUTPUT IS DESIRED (SPR=YES) THEN FORMAT THE MESSAGES  *
*            ON THE LOWER HALF OF THE SPF PANEL.                      *
*                                                                     *
*        3.  IF THE END KEY WAS PRESSED THEN TERMINATE.               *
*                                                                     *
*                                                                     *
*    REGISTER USAGE:                                                  *
*                                                                     *
*        R0  - LINKAGE                                                *
*        R1  - LINKAGE, WORK                                          *
*        R2  - WORK, BASE FOR RPL                                     *
*        R3  - WORK                                                   *
*        R4  - WORK                                                   *
*        R5  - WORK                                                   *
*        R6  - NOT USED                                               *
*        R7  - NOT USED                                               *
*        R8  - NOT USED                                               *
*        R9  - NOT USED                                               *
*        R10 - NOT USED                                               *
*        R11 - NOT USED                                               *
*        R12 - PROGRAM BASE # 2                                       *
*        R13 - LINKAGE, PROGRAM SAVE AREA, PROGRAM BASE # 1           *
*        R14 - LINKAGE                                                *
*        R15 - LINKAGE                                                *
*                                                                     *
***********************************************************************
SP1TC014 TITLE 'VTAM SECONDARY OPERATOR PROGRAM FOR ISPF'
         MACRO
         ISPEXEC &PARAM
         L       R15,ISPLNKEP
         CALL    (15),&PARAM,VL
         MEND
         EJECT
SP1TC014 SYSENTER R13,R12,SYMREG=YES
         PRINT NOGEN
         EJECT
***********************************************************************
*     LOAD ISPF INTERFACE ROUTINE ADDRESS AND SAVE LOCATION
***********************************************************************
         LOAD  EP=ISPLINK         GET ISPF INTERFACE
         ST    R0,ISPLNKEP        SETUP FOR ISPEXEC MACRO
***********************************************************************
*     DEFINE ISPF VARIABLES
***********************************************************************
#VTO0010 DS    0H
         MVC   SERVICE,=CL8'VDEFINE'   SET ISPF VDEFINE SERVICE
**** DEFINE SPSERV - SPF SERVICE BEING EXECUTED - USED IN MESSAGES ****
         ISPEXEC (SERVICE,SPSERVN,SERVICE,CHAR,L8)
         LTR   R15,R15            Q. VDEFINE SUCCESSFULL ???
         BNZ   #VTO0020           ...NO: GIVE ERROR
**** DEFINE RCODE - RETURN CODE FROM SPF SERVICES - USED IN MESSAGES **
         ISPEXEC (SERVICE,RCODEN,RCODE,CHAR,L4)
         LTR   R15,R15            Q. VDEFINE SUCCESSFULL ???
         BNZ   #VTO0020           ...NO: GIVE ERROR
**** DEFINE OUTNAMES (LIST) - OUTPUT VARIABLES ************************
         ISPEXEC (SERVICE,OUTNAMES,SP1VO1,CHAR,L79)
         LTR   R15,R15            Q. VDEFINE SUCCESSFULL ???
         BNZ   #VTO0020           ...NO: GIVE ERROR
**** DEFINE SPR - SCREEN ROLL (YES OR NO) - INPUT *********************
         ISPEXEC (SERVICE,SPRN,SPR,CHAR,L3)
         LTR   R15,R15            Q. VDEFINE SUCCESSFULL ???
         BNZ   #VTO0020           ...NO: GIVE ERROR
**** DEFINE SP1VOCMD - INPUT VTAM COMMAND *****************************
         ISPEXEC (SERVICE,SP1VCMDN,SP1VOCMD,CHAR,L80)
         LTR   R15,R15            Q. VDEFINE SUCCESSFULL ???
         BNZ   #VTO0020           ...NO: GIVE ERROR
**** DEFINE SP1VOWT - WAIT TIME BEFORE GIVING OUTPUT (IN SECONDS) *****
         ISPEXEC (SERVICE,SP1VOWTN,SP1VOWT,CHAR,L2)
         LTR   R15,R15            Q. VDEFINE SUCCESSFULL ???
         BNZ   #VTO0020           ...NO: GIVE ERROR
         B     #VTO0040           ..YES: CONTINUE ON
***********************************************************************
*    FAILURE IN ISPF SERVICE - GIVE ERROR MESSAGE AND CLEAN UP
***********************************************************************
#VTO0020 DS    0H
         CVD   R15,DBLWD                CONVERT RETURN CODE
         UNPK  RCODE,DBLWD
         OI    RCODE+L'RCODE-1,X'F0'    MAKE IT PRINTABLE
#VTO0030 DS    0H
         ISPEXEC (SETMSG,SP100B)        SET THE ERROR MESSAGE
         MVC   SERVICE,=CL8'VDELETE'    SET ISPF VDELETE SERVICE
         ISPEXEC (SERVICE,SPSERVN)
         ISPEXEC (SERVICE,RCODEN)
         ISPEXEC (SERVICE,OUTNAMES)
         ISPEXEC (SERVICE,INNAMES)
         SYSRETRN RC=8
         EJECT
***********************************************************************
*    VARIABLES ALL DEFINED - NOW START PROCESSING
***********************************************************************
#VTO0040 DS    0H
         OPEN  (NTOACB)           OPEN SPO ACB
         LTR   R15,R15            Q. OPEN OK ???
         BZ    #VTO0060           ..YES: CONTINUE
         LA    R2,NTOACB          POINT TO ACB
         USING IFGACB,R2
***********************************************************************
*    THE FOLLOWING CODE ALLOWS MULTIPLE ACB'S TO BE SIGNED ON TO AT
*    ONE TIME.  THE DEFAULT IS THREE.  TO ALLOW MORE CHANGE THE
*    INDICATED INSTRUCTION.
***********************************************************************
         CH    R15,=H'8'          Q. RETURN CODE = 8 ???
         BNE   #VTO0050           ...NO: CAN'T RECOVER
         CLI   ACBERFLG,X'58'     Q. THIS ACB IN USE ???
         BNE   #VTO0050           ...NO: SOME OTHER ERROR
         PACK  DBLWD,NTOACBAN+5(2) GET ACB NUMBER
         AP    DBLWD,=P'+1'       GET NEXT ACB NUMBER
         CP    DBLWD,=P'+3' <-- CHANGE THIS TO ALLOW MORE USERS
*                                 Q. ARE WE OUT OF ACB'S ???
         BH    #VTO0050           ..YES: THEN WE CAN'T OPEN
         UNPK  NTOACBAN+5(2),DBLWD ..NO: SET NEXT ACB NAME
         OI    NTOACBAN+6,X'F0'   MAKE IT PRINTABLE
         B     #VTO0040           GO TRY OPENING THIS ONE
#VTO0050 DS    0H
         MVC   SERVICE,=CL8'OPEN ACB'   SHOW FAILURE
         ST    R15,DBLWD                STORE RETURN CODE
         UNPK  RCODE(3),DBLWD+3(2)      SET RETURN CODE
         TR    RCODE(2),HXTAB-240       GET HEX REPRESENTATION
         UNPK  RCODE+2(3),ACBERFLG(2)   SET FEEDBACK CODE
         TR    RCODE+2(2),HXTAB-240     GET HEX REPRESENTATION
         B     #VTO0030                 GO GIVE ERROR MESSAGE
         DROP  R2
***********************************************************************
*    ALL INITIALIZED - GO DISPLAY PANEL
***********************************************************************
#VTO0060 DS    0H
         MVC   MESSAGE,=CL8'SP100E' SET MESSAGE
#VTO0070 DS    0H
         MVC   SP1VOCMD,SP1VOCMD-1 CLEAN OUT COMMAND LINE
#VTO0080 DS    0H
         MVC   SERVICE,=CL8'DISPLAY'   SET ISPF VDELETE SERVICE
         ISPEXEC (SERVICE,SP1VO00,MESSAGE)
         LTR   R15,R15            Q. DISPLAY SUCCESSFULL ???
         BZ    #VTO0100           ..YES: GO PROCESS IT
         C     R15,L8             RC = 8 ???
         BE    #VTO0340           ..YES: GO SHUT DOWN
         B     #VTO0020           ...NO: GIVE ERROR
#VTO0090 DS    0H
         MVC   SP1VOCMD,NTOIN     SET VTAM COMMAND
         B     #VTO0080
         EJECT
***********************************************************************
*    NEW INPUT READ IN - PROCESS IT
***********************************************************************
#VTO0100 DS    0H
         MVI   CMDFLAG,C' '       RESET COMMAND FLAG
         CLI   SP1VOCMD,X'00'     Q. ANY COMMAND ENTERED ???
         BE    #VTO0250           ...NO: GO CHECK FOR OUTPUT
         CLI   SP1VOCMD,C' '      Q. ANY COMMAND ENTERED ???
         BE    #VTO0250           ...NO: GO CHECK FOR OUTPUT
         CLI   SP1VOCMD,C'?'      Q. DOES HE WANT VTAM COMMAND ???
         BE    #VTO0090           ..YES: GO GIVE IT TO HIM
         MVI   NTOIN,C' '
         MVC   NTOIN+1(L'NTOIN-1),NTOIN   BLANK OUT COMMAND AREA
         XC    TRTAB,TRTAB                CLEAN OUT XLATE TABLE
         MVI   TRTAB,X'01'                     STOP ON X'00'
         MVI   TRTAB+C' ',C' '                 STOP ON BLANK
         TRT   SP1VOCMD+2(L'SP1VOCMD-2),TRTAB  GET END OF COMMAND
         BNZ   *+8                      Q. DID WE FIND END ???
         LA    R1,SP1VOCMD+L'SP1VOCMD   ...NO: FORCE TO END OF FIELD
         S     R1,=A(SP1VOCMD)          R1<--LENGTH(INPUT COMMAND)
         CLC   SP1VOCMD+2(3),=CL3'NET'  Q. NATIVE COMMAND ???
         BNE   #VTO0120                 ...NO: GO PROCESS SHORT FORM
#VTO0110 DS    0H
         LR    R2,R1              R2<--LENGTH(COMMAND)
         BCTR  R2,R0
         EX    R2,$VTOCMMV        MOVE THE COMMAND
         B     #VTO0240           GO PROCESS IT
         SPACE
$VTOCMMV MVC   NTOIN(0),SP1VOCMD  >>>EXECUTED<<<
         EJECT
***********************************************************************
*    PROCESS SHORT FORM OF COMMAND
***********************************************************************
#VTO0120 DS    0H
         LA    R2,SP1VOCMD(R1)    R2<--END OF COMMAND
         SH    R2,=H'2'           BACK UP TWO BYTES
         CLI   0(R2),C','         Q. TRACE TYPE GIVEN ???
         BNE   #VTO0130           ...NO
         MVC   TYPE,1(R2)         ..YES:SET TRACE TYPE
         SH    R1,=H'2'           RESET COMMAND LENGTH
#VTO0130 DS    0H
         CLI   SP1VOCMD+2,C'*'    Q. USE PREVIOUS NETWORK ID ???
         BE    #VTO0140           ..YES: SKIP SETTING NEW NAME
         CH    R1,=H'10'          Q. IS IT TOO LONG ???
         BH    #VTO0110           ..YES: GO PROCESS AS NATIVE COMMAND
         MVC   NETNAME,=CL8' '    INIT NAME
         LR    R2,R1              R2<--LENGTH(COMMAND)
         SH    R2,=H'3'           GET EX LENGTH
         BM    #VTO0110           ..NOT POSITIVE: BAD COMMAND
         EX    R2,$VTOMVLC        MOVE THE NAME
         B     #VTO0140           GO BUILD THE COMMAND
         SPACE
$VTOMVLC MVC   NETNAME(0),SP1VOCMD+2     >>>EXECUTED<<<
         SPACE
         EJECT
***********************************************************************
*    BUILD THE COMMAND TO BE PASSED TO VTAM
***********************************************************************
#VTO0140 DS    0H
         CLC   SP1VOCMD(2),=CL2'D '   Q. DISPLAY REQUEST ???
         BE    #VTO0150               ..YES: GO HANDLE IT
         CLC   SP1VOCMD(2),=CL2'A '   Q. ACTIVATE REQUEST ???
         BE    #VTO0160               ..YES: GO HANDLE IT
         CLC   SP1VOCMD(2),=CL2'I '   Q. INACTIVATE REQUEST ???
         BE    #VTO0170               ..YES: GO HANDLE IT
         CLC   SP1VOCMD(2),=CL2'R '   Q. INACTIVATE REQUEST ???
         BE    #VTO0170               ..YES: GO HANDLE IT
         CLC   SP1VOCMD(2),=CL2'F '   Q. INACTIVATE REQUEST ???
         BE    #VTO0170               ..YES: GO HANDLE IT
         CLC   SP1VOCMD(2),=CL2'T '   Q. TRACE REQUEST ???
         BE    #VTO0180               ..YES: GO HANDLE IT
         CLC   SP1VOCMD(2),=CL2'N '   Q. NOTRACE REQUEST ???
         BE    #VTO0190               ..YES: GO HANDLE IT
         B     #VTO0110               ...NO: I DON'T KNOW WHAT IT IS
#VTO0150 DS    0H
         MVC   DISNAME,NETNAME             SET CONTROLLER NAME
         MVC   NTOIN(L'DISSKEL),DISSKEL    SET THE COMMAND
         LA    R1,L'DISSKEL                SET CORRECT LENGTH
         B     #VTO0240                    GO PROCESS THE COMMAND
#VTO0160 DS    0H
         MVC   ACTNAME,NETNAME             SET CONTROLLER NAME
         MVC   NTOIN(L'ACTSKEL),ACTSKEL    SET THE COMMAND
         LA    R1,L'ACTSKEL                SET CORRECT LENGTH
         B     #VTO0240                    GO PROCESS THE COMMAND
#VTO0170 DS    0H
         MVC   DACTNAME,NETNAME            SET CONTROLLER NAME
         MVC   DACTTYPE,SP1VOCMD           SET INACT TYPE
         MVC   NTOIN(L'DACTSKEL),DACTSKEL  SET THE COMMAND
         LA    R1,L'DACTSKEL               SET CORRECT LENGTH
         B     #VTO0240                    GO PROCESS THE COMMAND
#VTO0180 DS    0H
         MVC   TRCNAME,NETNAME             SET CONTROLLER NAME
         MVC   NTOIN(L'TRCSKEL),TRCSKEL    SET THE COMMAND
         LA    R1,L'TRCSKEL                SET CORRECT LENGTH
         LA    R2,NTOIN+L'TRCSKEL-1        POINT TO LAST BYTE
         B     #VTO0200                    GO SET THE TRACE TYPE
#VTO0190 DS    0H
         MVC   NTRNAME,NETNAME             SET CONTROLLER NAME
         MVC   NTOIN(L'NTRSKEL),NTRSKEL    SET THE COMMAND
         LA    R1,L'NTRSKEL                SET CORRECT LENGTH
         LA    R2,NTOIN+L'NTRSKEL-1        POINT TO LAST BYTE
         EJECT
****SET THE TRACE TYPE*************************************************
#VTO0200 DS    0H
         CLI   0(R2),C' '         Q. END OF COMMAND ???
         BNE   #VTO0210           ..YES
         BCT   R2,#VTO0200        ...NO: BACK UP ONE BYTE
#VTO0210 DS    0H
         MVC   1(8,R2),=C',TYPE=IO' SET DEFAULT TYPE
         CLI   TYPE,C'B'          Q. BUF TRACE ???
         BE    #VTO0220           ..YES
         CLI   TYPE,C'L'          Q. LINE TRACE ???
         BE    #VTO0230           ..YES
         B     #VTO0240           ...NO: USE DEFAULT
#VTO0220 DS    0H
         MVC   7(3,R2),=C'BUF'    SET BUFFER TRACE
         B     #VTO0240           GO PROCESS COMMAND
#VTO0230 DS    0H
         MVC   7(4,R2),=C'LINE'   SET LINE TRACE
         MVI   TYPE,C' '          RESET TYPE FIELD
         B     #VTO0240           GO PROCESS COMMAND
         EJECT
***********************************************************************
*    PASS THE COMMAND TO VTAM THROUGH SENDCMD
***********************************************************************
#VTO0240 DS    0H
         LA    R2,NTORPLSC        POINT TO SENDCMD RPL
         USING IFGRPL,R2
         AH    R1,=H'4'           ADD HEADER LENGTH TO COMMAND LENGTH
         ST    R1,RPLRLEN         STORE LENGTH IN RPL
         MVI   CMDFLAG,X'FF'      SHOW COMMAND WAS ISSUED
         SENDCMD RPL=NTORPLSC           PASS THE COMMAND TO VTAM
         LTR   R15,R15                  Q. SUCCESSFUL ???
         BZ    #VTO0250                 ...YES, GO GET RESPONSE
         MVC   SERVICE,=CL8'SENDCMD'    SET COMMAND FOR ERROR MSG
         UNPK  RCODE(3),RPLRTNCD(2)     SET RETURN CODE
         TR    RCODE(2),HXTAB-240       GET HEX REPRESENTATION
         UNPK  RCODE+2(3),RPLFDB2(2)    SET FEEDBACK CODE
         TR    RCODE+2(2),HXTAB-240     GET HEX REPRESENTATION
         ISPEXEC (SETMSG,SP100B)        GIVE ERROR MESSAGE
         B     #VTO0070                 GO REWRITE SCREEN
         DROP  R2
***********************************************************************
*    IF OUTPUT IS DESIRED - OBTAIN IT THROUGH RCVCMD
***********************************************************************
#VTO0250 DS    0H
         CLC   SPR,=CL3'NO'       Q. IS OUTPUT DESIRED ???
         BE    #VTO0070           ...NO: GO REDISPLAY
         LA    R0,SP1VO1
         L     R1,=A(19*L'SP1VO1)
         SR    R2,R2
         SR    R3,R3
         ICM   R3,8,=X'40'
         MVCL  R0,R2              CLEAN OUT OUTPUT AREA
         LA    R2,NTORPLRC         GET RPL ADDRESS
         USING IFGRPL,R2
         CLI   CMDFLAG,X'FF'       Q. WAS A COMMAND ISSUED
         BE    #VTO0260            ..YES: GO GET RESPONSE
         LA    R3,SP1VO1           ...NO: SETUP FOR LOOP AND
         LA    R4,19                      GO TRY FOR LEFTOVER MESSAGES
         MVC   MESSAGE,=CL8'SP100E'
         B     #VTO0310
***********************************************************************
*    OUTPUT IS DESIRED - WAIT SPECIFIED TIME BEFORE INQUIRING
***********************************************************************
#VTO0260 DS    0H
         PACK  DBLWD,SP1VOWT
         CVB   R1,DBLWD           R1<--NUMBER OF SECONDS TO WAIT
         MH    R1,=H'100'         CONVERT TO HUNDREDTHS
         ST    R1,SECS            SET IN CONSTANT
         STIMER WAIT,BINTVL=SECS   WAIT FOR RESPONSE
         EJECT
***********************************************************************
*    GET NEXT MESSAGE - WAIT FOR RESPONSE IF COMMAND WAS ISSUED
***********************************************************************
         RCVCMD RPL=NTORPLRC       ISSUE RCVCMD
         LTR   R15,R15                 Q. ACCEPTED
         BNZ   #VTO0320                ...NO: ERROR
***********************************************************************
*    LOOP FOR ALL MESSAGES BUILDING OUTPUT LINES
***********************************************************************
#VTO0270 DS    0H
         LA    R3,SP1VO1               R3<--A(FIRST LINE OF OUTPUT)
         LA    R4,19                   R4<--COUNT OF OUTPUT LINES
         MVC   MESSAGE,=CL8'SP100E'    SET DEFAULT MESSAGE
#VTO0280 DS    0H
         CLI   RPLFDB2,X'06'      Q. END OF MESSAGES ???
         BNE   #VTO0290           ...NO: GO PROCEES NEXT MESSAGE
         CH    R4,=H'19'          Q. WERE ANY MESSAGES DISPLAYED ???
         BNE   #VTO0070           ...NO: GO DISPLAY PANEL
         CLI   NTOIN,C'D'         WAS THE LAST COMMAND A DISPLAY ???
         BNE   #VTO0070           ...NO: GO DISPLAY PANEL
         MVC   SP1VOCMD,NTOIN     SETUP COMMAND LINE
         B     #VTO0100           GO DO PSEUDO-REENTRY OF DISPLAY CMD
#VTO0290 DS    0H
         L     R5,RPLRLEN         ...NO: THEN GET MESSAGE LENGTH
         SH    R5,=H'4'                  LESS HEADER LENGTH
         CH    R5,=Y(L'SP1VO1)    Q. TOO LONG FOR PANEL ???
         BL    #VTO0300           ...NO
         LA    R5,L'SP1VO1        ..YES: FORCE TRUNCATION
#VTO0300 DS    0H
         BCTR  R5,R0              GET EX LENGTH
         EX    R5,$NMVRPLY        MOVE THE MESSAGE
         SH    R4,=H'1'           ANY OUTPUT LINES LEFT ???
         BZ    #VTO0330           ...NO: GO SHOW MORE OUTPUT AVAILABLE
         LA    R3,L'SP1VO1(,R3)   BUMP TO NEXT LINE
         EJECT
***********************************************************************
*    GET EACH MESSAGE THROUGH RCVCMD - NO WAIT - FDB2 = 6 IF DONE
***********************************************************************
#VTO0310 DS    0H
         RCVCMD RPL=NTORPLRC,OPTCD=NQ   ISSUE ANOTHER RCVCMD
         LTR   R15,R15                  Q. ACCEPTED
         BZ    #VTO0280                 ...YES: GO PROCESS MESSAGE
#VTO0320 DS    0H
         MVC   SERVICE,=CL8'RCVCMD'    SET FUNCTION FOR ERROR MSG
         UNPK  RCODE(3),RPLRTNCD(2)     SET RETURN CODE
         TR    RCODE(2),HXTAB-240       GET HEX REPRESENTATION
         UNPK  RCODE+2(3),RPLFDB2(2)    SET FEEDBACK CODE
         TR    RCODE+2(2),HXTAB-240     GET HEX REPRESENTATION
         ISPEXEC (SETMSG,SP100B)        GIVE ERROR MESSAGE
         B     #VTO0070                GO GIVE ERROR MESSAGE
#VTO0330 DS    0H
         MVC   MESSAGE,=CL8'SP100C'    SHOW THERE IS MORE
         B     #VTO0070                GO DISPLAY
         SPACE
$NMVRPLY MVC   0(0,R3),NTOOUT     >>>EXECUTED<<<
         SPACE
         DROP  R2
         EJECT
#VTO0340 DS    0H
         RCVCMD RPL=NTORPLRC,OPTCD=NQ   ISSUE ANOTHER RCVCMD
         LTR   R15,R15                  Q. ACCEPTED
         BNZ   #VTO0320                 ...YES, RETURN
         LA    R2,NTORPLRC         GET RPL ADDRESS
         USING IFGRPL,R2
         CLI   RPLFDB2,X'06'      Q. END OF MESSAGES ???
         BE    #VTO0350           ..YES: GO QUIT
         LA    R0,SP1VO1
         L     R1,=A(19*L'SP1VO1)
         SR    R2,R2
         SR    R3,R3
         ICM   R3,8,=X'40'
         MVCL  R0,R2              CLEAN OUT OUTPUT AREA
         LA    R2,NTORPLRC         GET RPL ADDRESS
         LA    R3,SP1VO1               R3<--A(FIRST LINE OF OUTPUT)
         LA    R4,19                   R4<--COUNT OF OUTPUT LINES
         MVC   MESSAGE,=CL8'SP100D'    SET DEFAULT MESSAGE
         B     #VTO0280                GO PROCESS REST OF OUTPUT
#VTO0350 DS    0H
         CLOSE (NTOACB)            CLOSE THE ACB
         LTR   R15,R15            Q. OPEN OK ???
         BZ    #VTO0360           ..YES: CONTINUE
         LA    R2,NTOACB          POINT TO ACB
         USING IFGACB,R2
         MVC   SERVICE,=CL8'CLOS ACB'   ...NO: SHOW FAILURE
         ST    R15,DBLWD                STORE RETURN CODE
         UNPK  RCODE(3),DBLWD+3(2)      SET RETURN CODE
         TR    RCODE(2),HXTAB-240       GET HEX REPRESENTATION
         UNPK  RCODE+2(3),ACBERFLG(2)   SET FEEDBACK CODE
         TR    RCODE+2(2),HXTAB-240     GET HEX REPRESENTATION
         B     #VTO0030                 GO GIVE ERROR MESSAGE
#VTO0360 DS    0H
         MVC   SERVICE,=CL8'VDELETE'   SET ISPF VDELETE SERVICE
         ISPEXEC (SERVICE,SPSERVN)
         ISPEXEC (SERVICE,RCODEN)     DELETE ISPF VARIABLES
         ISPEXEC (SERVICE,OUTNAMES)
         ISPEXEC (SERVICE,INNAMES)
         PRINT GEN
         SYSRETRN                  RESTORE REGISTERS AND RETURN
         PRINT NOGEN
         SPACE 2
#VTO0370 DS    0H
         DC    H'0'               DUMMY EXIT ROUTINE
         TITLE 'VARIABLES AND CONSTANTS'
***********************************************************************
LWAPSCB  EQU   24                  A(PSCB)
***********************************************************************
NTOACB   ACB   AM=VTAM,                                                *
               APPLID=NTOACBAI,                                        *
               MACRF=NLOGON
***********************************************************************
NTOACBAI DC    X'08'
NTOACBAN DC    CL8'NETOP01'
***********************************************************************
NTORPLSC RPL   AM=VTAM,                                                *
               ACB=NTOACB,                                             *
               AREA=NTOCMDO,                                           *
               RECLEN=NTOCMDOL,                                        *
               OPTCD=(SYN)
***********************************************************************
NTORPLRC RPL   AM=VTAM,                                                *
               ACB=NTOACB,                                             *
               AREA=NTOCMDI,                                           *
               AREALEN=NTOCMDIL,                                       *
               EXIT=#VTO0370,                                          *
               OPTCD=(Q,TRUNC)
***********************************************************************
DBLWD    DS    D                   DOUBLE WORD WORK AREA
ISPLNKEP DC    F'0'               ISPF INTERFACE E/P
SECS     DC    A(0)               WAIT TIME FOR STIMER
TRTAB    DC    XL256'00'          TRANSLATION TABLE
HXTAB    DC    C'0123456789ABCDEF'
NETNAME  DC    CL8' '             NETWORK NAME (COMMAND SHORT FORM)
CMDFLAG  DC    C' '               C' ' IF NO CMD, X'FF' IF CMD
TYPE     DC    C'I'               TRACE TYPE - DEFAULT IS 'I'
***********************************************************************
NTOCMDI  EQU   *                   COMMAND INPUT BUFFER (FROM VTAM)
         DS    CL4                 COMMAND HEADER
NTOOUT   DC    CL80' '             TPUT BUFFER
NTOCMDIL EQU   *-NTOCMDI
***********************************************************************
NTOCMDO  EQU   *                   COMMAND OUTPUT BUFFER (TO VTAM)
         DC    X'00'               COMMAND HEADER
         DC    X'03'
         DC    X'0000'
NTOIN    DS    CL80                TGET BUFFER
NTOCMDOL EQU   *-NTOCMDO
***********************************************************************
         EJECT
***********************************************************************
OUTNAMES DS    0D                 NAME LIST FOR OUTPUT VARIABLES
         DC    F'19'              COUNT OF VARIABLES
         DC    F'0'               MUST BE 0 OR 8
         DC    CL8'SP1VO1'        VARIABLE NAME
         DC    CL8'SP1VO2'        VARIABLE NAME
         DC    CL8'SP1VO3'        VARIABLE NAME
         DC    CL8'SP1VO4'        VARIABLE NAME
         DC    CL8'SP1VO5'        VARIABLE NAME
         DC    CL8'SP1VO6'        VARIABLE NAME
         DC    CL8'SP1VO7'        VARIABLE NAME
         DC    CL8'SP1VO8'        VARIABLE NAME
         DC    CL8'SP1VO9'        VARIABLE NAME
         DC    CL8'SP1VO10'       VARIABLE NAME
         DC    CL8'SP1VO11'       VARIABLE NAME
         DC    CL8'SP1VO12'       VARIABLE NAME
         DC    CL8'SP1VO13'       VARIABLE NAME
         DC    CL8'SP1VO14'       VARIABLE NAME
         DC    CL8'SP1VO15'       VARIABLE NAME
         DC    CL8'SP1VO16'       VARIABLE NAME
         DC    CL8'SP1VO17'       VARIABLE NAME
         DC    CL8'SP1VO18'       VARIABLE NAME
         DC    CL8'SP1VO19'       VARIABLE NAME
***********************************************************************
SP1VO1   DC    CL79' '            OUTPUT LINE # 1
SP1VO2   DC    CL79' '            OUTPUT LINE # 2
SP1VO3   DC    CL79' '            OUTPUT LINE # 3
SP1VO4   DC    CL79' '            OUTPUT LINE # 4
SP1VO5   DC    CL79' '            OUTPUT LINE # 5
SP1VO6   DC    CL79' '            OUTPUT LINE # 6
SP1VO7   DC    CL79' '            OUTPUT LINE # 7
SP1VO8   DC    CL79' '            OUTPUT LINE # 8
SP1VO9   DC    CL79' '            OUTPUT LINE # 9
SP1VO10  DC    CL79' '            OUTPUT LINE # 10
SP1VO11  DC    CL79' '            OUTPUT LINE # 11
SP1VO12  DC    CL79' '            OUTPUT LINE # 12
SP1VO13  DC    CL79' '            OUTPUT LINE # 13
SP1VO14  DC    CL79' '            OUTPUT LINE # 14
SP1VO15  DC    CL79' '            OUTPUT LINE # 15
SP1VO16  DC    CL79' '            OUTPUT LINE # 16
SP1VO17  DC    CL79' '            OUTPUT LINE # 17
SP1VO18  DC    CL79' '            OUTPUT LINE # 18
SP1VO19  DC    CL79' '            OUTPUT LINE # 19
***********************************************************************
         EJECT
***********************************************************************
INNAMES  DS    0D                 NAME LIST FOR INPUT VARIABLES
         DC    F'3'               COUNT OF VARIABLES
         DC    F'0'               MUST BE 0 OR 8
         DC    CL8'SPR'           VARIABLE NAME
         DC    CL8'SP1VOCMD'      VARIABLE NAME
         DC    CL8'SP1VOWT'       VARIABLE NAME
***********************************************************************
SERVICE  DC    CL8' '             SPF SERVICE BEING EXECUTED
MESSAGE  DC    CL8' '             SPF MESSAGE TO BE GIVEN
SETMSG   DC    CL8'SETMSG'        SPF SETMSG SERVICE
SP1VO00 DC     CL8'SP1VO00'
SPSERVN  DC    CL8'SPSERV'
RCODEN   DC    CL8'RCODE'
SPRN     DC    CL8'SPR'
CHAR     DC    CL8'CHAR'
SP1VCMDN DC    CL8'SP1VOCMD'
SP1VOWTN DC    CL8'SP1VOWT'
SP100A DC      CL8'SP100A'
SP100B DC      CL8'SP100B'
***********************************************************************
SPR      DC    CL3'YES'           ROLL SCREEN (YES OR NO)
         DC    C' '               USED TO CLEAR SP1VOCMD
SP1VOCMD DC    CL80' '            CURRENT VTAM COMMAND
SP1VOWT  DC    CL2'02'            WAIT TIME IN SECONDS
RCODE    DC    CL4'0000'          RETURN CODE FROM SPF SERVICES
         DC    C' '               SLACK FOR HEX CONVERSION
***********************************************************************
L2       DC    F'2'               LENGTH FIELD = 2
L3       DC    F'3'               LENGTH FIELD = 3
L4       DC    F'4'               LENGTH FIELD = 4
L8       DC    F'8'               LENGTH FIELD = 8
L79      DC    F'79'              LENGTH FIELD = 79
L80      DC    F'80'              LENGTH FIELD = 80
***********************************************************************
         EJECT
***********************************************************************
ACTSKEL  DC    CL21'V NET,ACT,ID=XXXXXXXX'
ACTNAME  EQU   ACTSKEL+13,8
***********************************************************************
DISSKEL  DC    CL19'D NET,E,ID=XXXXXXXX'
DISNAME  EQU   DISSKEL+11,8
***********************************************************************
DACTSKEL DC    CL25'V NET,INACT,I,ID=XXXXXXXX'
DACTTYPE EQU   DACTSKEL+12,1
DACTNAME EQU   DACTSKEL+17,8
***********************************************************************
TRCSKEL DC     CL33'F NET,TRACE,ID=XXXXXXXX'
TRCNAME EQU    TRCSKEL+15,8
***********************************************************************
NTRSKEL DC     CL35'F NET,NOTRACE,ID=XXXXXXXX'
NTRNAME EQU    NTRSKEL+17,8
***********************************************************************
         LTORG
         TITLE 'DSECTS'
         ISTDPOHD
         IFGACB AM=VTAM
         IFGRPL AM=VTAM
         IHAPSA
         IHAASCB
         IHAASXB
         IKJPSCB
        END
