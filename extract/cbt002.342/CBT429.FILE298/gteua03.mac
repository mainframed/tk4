         PRINT GEN
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUA03'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
***********************************************************************
***                                                                 ***
***      THIS IS A QUICK AND DIRTY TO CHECK ALL THE GTEUANN         ***
***      SUBROUTINES FOR AN ADD OF AN ALIAS.                        ***
***                                                                 ***
***********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH1,B'00000000'      INITIALIZE SWITCH AREA
*
MAPARM   BAL   RBAL,PARM                CHECK PARM
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA30A   MVC   GU01NAM(8),PARMNAME      GET NAME FROM PARM
         BAL   RBAL,A30PROC             GET STATS AND COPY OF MEMBER
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA70    BAL   RBAL,A70PROC             DELETE THE PDS MEMBER
         CLC   RETCDE,=F'4'
         BNL   END12
*
         B     END00                    GO TO ENDING
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END12    LA    R15,12                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***  CHECK PARM FOR PROPER LENGTH, THEN 'OR' ONTO X'40' FIELD      ***
***  TO MOVE CAPITAL VALUES INTO STORAGE.                          ***
***                                                                ***
**********************************************************************
PARM     ST    RBAL,PARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         BAL   RBAL,PRSE                PARSE THE PARM
*
         CLC   RETCDE,F0                IF BAD PARSE
         BNE   PARET04                    GO TO BAD ENDING
*
         LA    R1,8                     R1 HAS MAX LENGTH OF NAME
         CH    R1,NAME1LN               IF MEMBER NAME LONGER
         BL    PARET04                    GO TO ERROR ENDING
         CH    R1,NAME2LN               IF ALIAS NAME LONGER
         BL    PARET04                    GO TO ERROR ENDING
*
         MVC   PARMNAME(8),BLANKS       CLEAR THE PARM NAME
         LH    R3,NAME1LN               R3 HAS MEMBER NAME LENGTH
         BCTR  R3,0                     R3 IS LENGTH -1 FOR EXEC
         B     *+10                     BRANCH AROUND OR
         OC    PARMNAME(*-*),NAME1        CAPITALIZE INTO STORAGE
         EX    R3,*-6                   EXECUTE THE OR
*
         MVC   PARMALIS(8),BLANKS       CLEAR THE ALIAS NAME
         LH    R3,NAME2LN               R3 HAS ALIAS NAME LENGTH
         BCTR  R3,0                     R3 IS LENGTH -1 FOR EXEC
         B     *+10                     BRANCH AROUND OR
         OC    PARMALIS(*-*),NAME2        CAPITALIZE INTO STORAGE
         EX    R3,*-6                   EXECUTE THE OR
*
         B     PAEND
*
PARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     PAEND                    BRANCH TO ENDING
*
PAEND    L     RBAL,PARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  PARSE THE INPUT PARAMETER STRING, IN THE FORM:                ***
***         'NAME,ALIAS'                                           ***
***                                                                ***
**********************************************************************
PRSE     ST    RBAL,PRRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         L     R1,R1SAVE                RESTORE R1
         L     R1,0(0,R1)               R1 POINTS TO PARM LENGTH
         LH    R2,0(0,R1)               R2 HAS TOTAL LENGTH
         C     R2,=F'3'                 IF PARM LENGTH LT 3 ('X,X')
         BL    PRRET04                    GO TO BAD ENDING
         C     R2,=F'17'                IF PARM LENGTH GT 17
         BH    PRRET04                    GO TO BAD ENDING
*
         XC    NAME1LN,NAME1LN          ZERO TGT LENGTH FIELD
         MVC   NAME1(8),BLANKS          CLEAR TGT NAME FIELD
         LA    R3,NAME1-1               R3 POINTS JUST BEFORE TGT NAME
         LA    R1,1(0,R1)               R1 POINTS JUST BEFORE PARM NAM
         LA    R4,8                     R4 IS MAX LENGTH OF NAME
PRLOOP1  LA    R1,1(0,R1)               R1 POINTS TO NEXT PARM CHAR
         LA    R3,1(0,R3)               R3 POINTS TO NEXT TGT CHAR
         CLI   0(R1),C','               IF NEXT CHAR IS DELIMITER
         BE    PRLOOP1X                   GO TO LOOP EXIT
         MVC   0(1,R3),0(R1)            MOVE PARM CHAR TO TGT CHAR
         BCTR  R2,0                     R2 IS REMAINING PARM CHARS
         LTR   R2,R2                    IF NONE REMAIN
         BNP   PRRET04                    ERROR, NO SECOND PARM, END
         BCT   R4,PRLOOP1               LOOP BACK UP
PRLOOP1F LA    R1,1(0,R1)               FALLTHRU: POINT TO DELIMITER
         CLI   0(R1),C','                         IF NOT DELIMITER
         BNE   PRRET04                              BAD PARM, END
         LA    R3,1(0,R3)                         POINT AFTER TGT
PRLOOP1X LA    R0,NAME1                 LOOPEXIT: R0 POINTS TO TGT NAM
         SR    R3,R0                              R3 IS LEN OF TGT NAM
         BNP   PRRET04                            IF ZERO, ERROR, END
         STH   R3,NAME1LN                         SAVE THE LENGTH
*
PRDELIM  LA    R1,1(0,R1)               R1 POINTS BEYOND DELIMITER
         BCTR  R2,0                     R2 IS CHARS REMAINING
         LTR   R2,R2                    IF NONE REMAIN
         BNP   PRRET04                    ERROR, NO SECOND PARM, END
         C     R2,=F'8'                 IF MORE THAN 8 CHARS LEFT
         BH    PRRET04                    ERROR, PARM TOO LONG, END
*
PRPARM2  XC    NAME2LN,NAME2LN          ZERO THE TARGET LENGTH
         MVC   NAME2(8),BLANKS          CLEAR THE TARGET NAME FIELD
         STH   R2,NAME2LN               SAVE THE LENGTH
         BCTR  R2,0                     R2 IS LENGTH-1 FOR EXEC
         B     *+10                     BRANCH AROUND MOVE
         MVC   NAME2(0),0(R1)             MOVE PARM TO TARGET
         EX    R2,*-6                   EXECUTE THE MOVE
*
         B     PREND
*
PRRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     PREND                    BRANCH TO ENDING
*
PREND    L     RBAL,PRRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  GET THE ISPF STATS, OR DUMMY STATS, FOR THE INPUT NAME        ***
***                                                                ***
**********************************************************************
A30PROC  ST    RBAL,A30BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A30INIT  MVC   PDSDCB(PDSDCBLN),PDSDCBD             INITIALIZE THE DCB
         MVC   PDSDCB+(DCBDDNAM-IHADCB)(8),PDSDDN   SET THE DDNAME
         MVC   PDSOPN(PDSOPNLN),PDSOPND INITIALIZE  OPEN PARM LIST
         OPEN  (PDSDCB,(INPUT)),MF=(E,PDSOPN)       OPEN THE DATASET
*
         XC    GU01TTR(DIRENTLN-(GU01TTR-DIRENT)),GU01TTR  CLEAR STATS
*
A30CALL  LA    R15,PDSDCB               PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,DIRENT               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         OI    PARMLIST+04,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA30)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,=F'8'             IF R/C GT 8,
         BH    A30RET04                   ERROR ENDING
         CLC   RETCDE,=F'8'             IF R/C LT 8
         BNL   *+8                        THEN
         OI    SWITCH1,X'40'                TURN ON PDSFOUND SWITCH
         XC    RETCDE,RETCDE            SET R/C EQ 0
*
         B     A30END
*
A30RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A30END                   BRANCH TO ENDING
*
A30END   MVC   PDSCLS(PDSCLSLN),PDSCLSD INITIALIZE  CLOSE PARM LIST
         CLOSE (PDSDCB),MF=(E,PDSCLS)               CLOSE THE DATASET
         L     RBAL,A30BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  UPDATE PDS, STOW THE STATS                                    ***
***                                                                ***
**********************************************************************
A70PROC  ST    RBAL,A70BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A70INIT  MVC   PDSDCB(PDSDCBLN),PDSDCBD             INITIALIZE THE DCB
         MVC   PDSDCB+(DCBDDNAM-IHADCB)(8),PDSDDN   SET THE DDNAME
         MVC   PDSOPN(PDSOPNLN),PDSOPND  INITIALIZE OPEN PARM LIST
         OPEN  (PDSDCB,(OUTPUT)),MF=(E,PDSOPN)      OPEN THE DATASET
*
A70CALL  LA    R15,ALIAS                PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PDSDCB               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,DIRENT               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         LA    R15,PARMALIS             PARM ADDRESS
         ST    R15,PARMLIST+12            INTO PARM LIST
         OI    PARMLIST+12,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA70)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,=F'0'             IF R/C NE 0,
         BNE   A70RET04                   ERROR ENDING
         XC    RETCDE,RETCDE            SET R/C EQ 0
*
         B     A70END
*
A70RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A70END                   BRANCH TO ENDING
*
A70END   MVC   PDSCLS(PDSCLSLN),PDSCLSD INITIALIZE  CLOSE PARM LIST
         CLOSE (PDSDCB),MF=(E,PDSCLS)               CLOSE THE DATASET
         L     RBAL,A70BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
BLANKS   DC    CL80' '                  LITERAL
X00S     DC    XL40'00'                 LITERAL
*
PANDDN   DC    CL8'PANDD1'              PANVALET DDNAME
PDSDDN   DC    CL8'PDS'                 PDS DDNAME
ALIAS    DC    CL12'ALIAS'              FUNCTION NAME
*
PDSDCBD  DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W)
PDSOPND  OPEN  (,),MF=L
PDSCLSD  CLOSE (,),MF=L
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
A30BALSV DS    F                        RETURN ADDRESS SAVE AREA
A70BALSV DS    F                        RETURN ADDRESS SAVE AREA
PARBALSV DS    F                        RETURN ADDRESS SAVE AREA
PRRBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
PARMNAME DS    CL8                      INPUT PARM NAME
PARMALIS DS    CL8                      INPUT PARM NAME
*
PARMLIST DS    5A                       PARM LIST FOR SUBROUTINES
*
         EJECT
DIRENT   GTEUM01 DSECT=NO               PDS DIRECTORY ENTRY
DIRENTLN EQU   *-DIRENT
         EJECT
PANDIR   GTEUM04 DSECT=NO               PANVALET DIRECTORY ENTRY
PANDIRLN EQU   *-PANDIR
         EJECT
PANCOM   GTEUM03 DSECT=NO               PANVALET COMMENT ENTRY
PANCOMLN EQU   *-PANCOM
         EJECT
PANNEXT  DS    CL10                     PANVALET NEXT NAME
PANLAST  DS    CL10                     PANVALET LAST NAME
*
SWITCH1  DS    B'00000000'              SWITCH AREA
*                1.......               X'80' - PAN MEMBER FOUND
*                .1......               X'40' - PDS MEMBER FOUND
*                ..111111               (NOT USED)
*
PDSOPN   OPEN  (,),MF=L
PDSOPNLN EQU   *-PDSOPN
PDSCLS   CLOSE (,),MF=L
PDSCLSLN EQU   *-PDSCLS
PDSDCB   DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W)
PDSDCBLN EQU   *-PDSDCB
*
NAME1LN  DS    H                        PARSE PARM BLOCK FOR NAME
NAME1    DS    CL8
NAME2LN  DS    H                        PARSE PARM BLOCK FOR ALIAS
NAME2    DS    CL8
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
         IHADCB DSORG=PS,DEVD=DA
*
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
