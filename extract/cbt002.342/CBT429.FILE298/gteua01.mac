         PRINT GEN
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUA01'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
***********************************************************************
***                                                                 ***
***      THIS IS A QUICK AND DIRTY TO CHECK ALL THE GTEUANN         ***
***      SUBROUTINES FOR A RESTORE.                                 ***
***                                                                 ***
***********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH1,B'00000000'      INITIALIZE SWITCH AREA
*
         MVC   FUNCTION(12),RESTORE     SET RESTORE FUNCTION
*
MAPARM   BAL   RBAL,PARM                CHECK PARM
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA10    BAL   RBAL,A10PROC             GET PANDIR, PANCOM, NEXTNAME
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA60    BAL   RBAL,A60PROC             ++WRITE THE MEMBER TO PDS
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA80    BAL   RBAL,A80PROC             STOW ISPF STATS INTO PDS
         CLC   RETCDE,=F'4'             IF RETURN GT 4
         BH    END12                      GO TO HIGH ENDING
         BE    END04                    ELSE IF 4, GO TO 4 END
         B     END00                    ELSE GO TO 0 END
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END04    LA    R15,04                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END12    LA    R15,12                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***  CHECK PARM FOR PROPER LENGTH, THEN 'OR' ONTO X'40' FIELD      ***
***  TO MOVE CAPITAL VALUES INTO STORAGE.                          ***
***                                                                ***
**********************************************************************
PARM     ST    RBAL,PARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   PARMNAME,BLANKS          CLEAR PARM AREA
         L     R2,0(0,R1)               R2 POINTS TO PARM LENGTH
         LH    R3,0(0,R2)               R3 HAS PARM LENGTH
         C     R3,=F'10'                IF PARM CHARS GT 10
         BH    PARET04                    SHUT DOWN
         C     R3,=F'3'                 IF PARM CHARS LT 3
         BL    PARET04                    SHUT DOWN
         BCTR  R3,0                     R3 IS LENGTH -1 FOR EXEC
         B     *+10                     BRANCH AROUND OR
         OC    PARMNAME(*-*),2(R2)        CAPITALIZE INTO STORAGE
         EX    R3,*-6                   EXECUTE THE OR
*
         B     PAEND
*
PARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     PAEND                    BRANCH TO ENDING
*
PAEND    L     RBAL,PARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  GIVEN PARMNAME, GET THE PANVALET DIRECTORY ENTRY, PANVALET    ***
***  COMMENT, AND COMPUTE THE NEXT PANVALET NAME.                  ***
***                                                                ***
**********************************************************************
A10PROC  ST    RBAL,A10BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A10CLEAR MVC   PANDIR(PANDIRLN),BLANKS  CLEAR THE PANVALET DIRECTORY
         MVC   GU04NAML(10),PARMNAME     PUT THE NAME IN
         MVC   PANCOM(PANCOMLN),BLANKS  CLEAR THE COMMENT AREA
         MVC   PANNEXT(10),BLANKS       CLEAR THE NEXTNAME FIELD
         NI    SWITCH1,X'FF'-X'80'      TURN OFF PANFOUND SWITCH
*
A10CALL  LA    R15,FUNCTION             PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PANDIR               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,PANCOM               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         LA    R15,PANNEXT              PARM ADDRESS
         ST    R15,PARMLIST+12            INTO PARM LIST
         LA    R15,PANDDN               PARM ADDRESS
         ST    R15,PARMLIST+16            INTO PARM LIST
         OI    PARMLIST+16,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA10)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,=F'0'             IF R/C GT 0,
         BH    A10RET04                   GO TO ERROR ENDING
         OI    SWITCH1,X'80'            ELSE TURN ON PANFOUND SWITCH
*
         B     A10END
*
A10RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A10END                   BRANCH TO ENDING
*
A10END   L     RBAL,A10BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  INVOKE PAN#1 TO '++WRITE' THE MEMBER TO THE PDS               ***
***                                                                ***
**********************************************************************
A60PROC  ST    RBAL,A60BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A60CALL  LA    R15,FUNCTION             PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PANDIR               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,PANCOM               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         LA    R15,PANNEXT              PARM ADDRESS
         ST    R15,PARMLIST+12            INTO PARM LIST
         OI    PARMLIST+12,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA60)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,F0                IF RETURN NOT ZERO
         BNE   A60RET04                   GO TO ERROR RETURN
*
         B     A60END
*
A60RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A60END                   BRANCH TO ENDING
*
A60END   L     RBAL,A60BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CONVERT PAN COMMENT TO ISPF STATISTICS THEN STOW THEM.        ***
***                                                                ***
**********************************************************************
A80PROC  ST    RBAL,A80BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A80CALL  LA    R15,DIRENTRY             PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PANDIR               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,PANCOM               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         OI    PARMLIST+08,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA80)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         B     A80END
*
A80RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A80END                   BRANCH TO ENDING
*
A80END   L     RBAL,A80BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
BLANKS   DC    CL80' '                  LITERAL
X00S     DC    XL40'00'                 LITERAL
*
PANDDN   DC    CL8'PANDD1'              PANVALET FILE NAME
RESTORE  DC    CL12'RESTORE'            FUNCTION NAME
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
A10BALSV DS    F                        RETURN ADDRESS SAVE AREA
A60BALSV DS    F                        RETURN ADDRESS SAVE AREA
A80BALSV DS    F                        RETURN ADDRESS SAVE AREA
PARBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
FUNCTION DS    CL12                     'UPDATE' 'RESTORE' ETC.
PARMNAME DS    CL10                     INPUT PARM NAME
PANNEXT  DS    CL10                     UNUSED PARM FOR RESTORE
*
PARMLIST DS    5A                       PARM LIST FOR SUBROUTINES
*
         EJECT
DIRENTRY GTEUM01 DSECT=NO               PDS DIRECTORY ENTRY
DIRENTLN EQU   *-DIRENTRY
         EJECT
PANDIR   GTEUM04 DSECT=NO               PANVALET DIRECTORY ENTRY
PANDIRLN EQU   *-PANDIR
         EJECT
PANCOM   GTEUM03 DSECT=NO               PANVALET COMMENT ENTRY
PANCOMLN EQU   *-PANCOM
         EJECT
*
SWITCH1  DS    B'00000000'              SWITCH AREA
*                1.......               X'80' - PAN MEMBER FOUND
*                ..111111               (NOT USED)
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
*
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
