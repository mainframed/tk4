         PRINT GEN
         MACRO
&LABEL   TEXTBILD &AREA=,&TEXT=
.*+-----------------------------------------------------------------+
.*×  MACRO TO BUILD TEXT LINES FROM INDIVIDUAL WORDS AND PHRASES.   ×
.*×   E.G.                                                          ×
.*×           TEXTBILD  AREA=OUTAREA,TEXT=(AVALUE,BVALUE,CVALUE)    ×
.*×                                                                 ×
.*×  AVALUE   DC  H'5',C'ALPHA'                                     ×
.*×  BVALUE   DC  H'7',C'-BRAVO-'                                   ×
.*×  CVALUE   DC  H'7',C'CHARLIE'                                   ×
.*×                                                                 ×
.*×  OUTAREA  DS  CL80                                              ×
.*×                                                                 ×
.*×  CLEARS THE OUTAREA DATA ITEM WITH BLANKS, THEN                 ×
.*×  PRODUCES THE FOLLOWING IN OUTAREA: 'ALPHA-BRAVO-CHARLIE'       ×
.*×                                                                 ×
.*×  UPON COMPLETION:  R1  POINTS TO OUTAREA                        ×
.*×                    R15 HAS TOTAL LENGTH OF TEXT (19)            ×
.*×                                                                 ×
.*×  NOTES 1.  THE LENGTH OF THE CLEAR OPERATION IS TAKEN FROM      ×
.*×            THE DEFINED LENGTH OF THE 'AREA' DATA ITEM.          ×
.*×        2.  THE CODE PRODUCED BY THIS MACRO IS REENTERABLE.      ×
.*+-----------------------------------------------------------------+
         LCLA  &N1,&N2
&N1      SETA  N'&TEXT                  NUMBER OF TEXT OPERANDS
&N2      SETA  1                        INDEX OF INITIAL TEXT OPERAND
.*
&LABEL   MVI   &AREA,X'40'              CLEAR THE TEXT LINE
         MVC   &AREA+1(L'&AREA-1),&AREA   WITH BLANKS
.*
         LA    15,&AREA                 R15 POINTS TO TEXT BEGIN
.LOOP1   ANOP
         LH    1,&TEXT(&N2)             R1 HAS LENGTH OF TEXT
         BCTR  1,0                        MINUS 1 FOR EXEC
         B     *+10                     BRANCH AROUND MOVE
         MVC   0(*-*,15),&TEXT(&N2)+2     MOVE THE DATA
         EX    1,*-6                    EXECUTE THE MOVE
         LA    15,1(1,15)               R15 POINTS JUST BEYOND CHARS
&N2      SETA  &N2+1                    POINT TO NEXT TEXT OPERAND
         AIF   (&N2 LE &N1).LOOP1       LOOP BACK UP
.*
         LA    1,&AREA                  R1 HAS ADDR OF AREA
         SR    15,1                     R15 HAS TOTAL LENGTH OF TEXT
.*
         MEND
*
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUAA0'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
**********************************************************************
*   THIS ROUTINE USES A LIST OF MEMBERS (SUCH AS PRODUCED BY PROGRAM
*   GTEUAB0, OR THE LISTDS TSO COMMAND) TO PRODUCE PANVALET (PAN#1)
*   CONTROL CARD IMAGES.
*
*   THE OUTPUT PRODUCED BY THIS PROGRAM BEGINS WITH:
*           ++OPTION INPUT,PDS
*           --CONTROL 0
*
*   THE INPUT TO THIS PROGRAM IS 80-BYTE CARD IMAGES IN THE FOLLOWING
*   FORMAT:
*    ....+....1....+....2....+....3....+....4
*
*      MEMBNAME (ALIAS)  PAN-COMMENT
*      MEMBNAME (ALIAS)  PAN-COMMENT
*      MEMBNAME (ALIAS)  PAN-COMMENT
*
*
*     CC 03-10,  'MEMBNAME'    - NAME OF A MEMBER OF A PDS.
*        12-18,  '(ALIAS)'     - BLANKS, OR A NON-ALPHANUMERIC LITERAL
*                                WHICH WILL CAUSE INPUT TO BE BYPASSED.
*        21-72,  'PAN-COMMENT' - BLANKS, OR A 52-BYTE PANVALET COMMENT,
*                                EXPECTED TO BE STATS.
*
*   THIS PROGRAM PRODUCES THE FOLLOWING CARDS FOR EACH INPUT NAME:
*
*           --ADD NAME,DATA,NOFORMAT
*           --COMMENT NAME,PAN-STATS  (OR 'INITIAL VERSION')
*           --RENAME NAME,NAME01
*
*   BECAUSE OF PANVALET'S REQUIREMENT THAT ALL CHARACTERS IN A NAME BE
*   ALPHANUMERIC, AND PANVALET'S INABILITY TO ASSIGN AN ALIAS, THIS
*   PROGRAM WILL NOT USE THE FOLLOWING INPUT NAMES TO PRODUCE PANVALET
*   CONTROL CARDS, AND WILL NOTE THE FACT IN THE ERROR REPORT:
*
*          MEMBNAME                ERROR
*          ========                ===================================
*          $SM                     NATIONAL CHARACTER
*          LID@011                 NATIONAL CHARACTER
*          PAN#1                   NATIONAL CHARACTER
*          FILESTAT (ALIAS)        PARENTHESES (HANDLE ALIAS MANUALLY)
*
*          ABC DE                  WILL PRODUCE ABC01, SCAN STOPS
*                                    ON FIRST BLANK
*
*   TO EXECUTE:
*        //STEP1  EXEC  PGM=GTEUAA0
*        //ERRORS  DD  SYSOUT=*
*        //SYSUT1  DD  &&PANCARDS,UNIT=SYSDA,SPACE=(TRK,(1,1)),
*        //            DISP=(,PASS)
*        //SYSIN   DD  *
*          ALPHA            001.05 07/15/86 09/03/86-16:39 00254 CAH0
*          BRAVO
*          CHARLIE  (ALIAS)
*          DELTA            001.17 01/19/86 08/10/86-09:31 00000 JCP0
*            .               .        .        .      .      .    .
*            .               .        .        .      .      .    .
*          ZULU             001.06 01/31/86 09/30/86-12:29 00068 ACH0
*        /*
*
*   COMPLETION CODES:
*        00 - OKAY
*        04 - AT LEAST ONE ERROR MESSAGE
*
**********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH0,B'00000000'      INITIALIZE SWITCH AREA
*
MAOPEN   BAL   RBAL,OPEN                OPEN FILES, WRITE INITIAL LINES
*
MAXXRW   BAL   RBAL,XXRW                PERFORM READ/WRITE LOOP
         MVC   COMPCODE(4),RETCDE       SET COMP CODE TO RETURN CODE
*
MACLOSE  BAL   RBAL,CLOSE               CLOSE FILES
*
         B     END00                    GO TO ENDING
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***   OPEN THE FILES AND WRITE INITIAL LINES OF OUTPUT             ***
***                                                                ***
**********************************************************************
OPEN     ST    RBAL,OPRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
OPDCB    MVC   DCBERR(DCBERRLN),DCBERRD    INITIALIZE DCB
         MVC   DCBIN(DCBINLN),DCBIND       INITIALIZE DCB
         MVC   DCBOUT(DCBOUTLN),DCBOUTD    INITIALIZE DCB
*
OPPARM   MVC   OPENL(OPENLLN),OPENLD    INITIALIZE OPEN PARM LIST
    OPEN  (DCBIN,(INPUT),DCBOUT,(OUTPUT),DCBERR,(OUTPUT)),MF=(E,OPENL)
*
         PUT   DCBERR,ERRMSG01          WRITE INITIAL ERROR MESSAGE #1
         PUT   DCBERR,ERRMSG02          WRITE INITIAL ERROR MESSAGE #2
*
         PUT   DCBOUT,OPTCARD           WRITE ++OPTION CARD OUT
         PUT   DCBOUT,CTLCARD           WRITE ++CONTROL CARD OUT
*
         B     OPEND
*
OPRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     OPEND                    BRANCH TO ENDING
*
OPEND    L     RBAL,OPRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***   CLOSE THE FILES                                              ***
***                                                                ***
**********************************************************************
CLOSE    ST    RBAL,CLRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
CLPARM   MVC   CLOSL(CLOSLLN),CLOSD     INITIALIZE CLOS PARM LIST
         CLOSE (DCBIN,,DCBOUT,,DCBERR),MF=(E,CLOSL)  CLOSE THE FILES
*
         B     CLEND
*
CLRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     CLEND                    BRANCH TO ENDING
*
CLEND    L     RBAL,CLRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***   READ AN INPUT, WRITE OUTPUT OR ERROR MESSAGE                 ***
***                                                                ***
**********************************************************************
XXRW     ST    RBAL,XXRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
XXGET    GET   DCBIN,INAREA             READ A CARD IMAGE
         TRT   INNAME(16),ALPHANUM      IF NOT ALPHANUMERIC IN 3-18
         BZ    XXCLEAR                    THEN
         MVC   ERRAREA(133),BLANKS          CLEAR THE ERROR LINE
         MVC   ERRAREA+1(80),INAREA         MOVE CARD IMAGE TO ERROR
         PUT   DCBERR,ERRAREA               WRITE THE CARD IMAGE
         MVC   RETCDE,=F'4'                 SET CC=4
         B     XXGET                        GO GET ANOTHER CARD
*
XXCLEAR  MVC   MEMNAME(8),BLANKS        INITIALIZE MEMBER NAME
         LA    R2,8                     R2 IS COUNTER
         LA    R3,INNAME-1              R3 POINTS BEFORE INPUT NAME
         LA    R4,MEMNAME-1             R4 POINTS BEFORE MEMBER NAME
*
XXLOOP1  LA    R3,1(0,R3)               R3 POINTS TO NEXT INPUT CHAR
         LA    R4,1(0,R4)               R4 POINTS TO NEXT MEMNAME CHAR
         CLI   0(R3),X'40'              IF BLANK
         BE    XXLEN                      GET OUT OF LOOP
         MVC   0(1,R4),0(R3)            MOVE INPUT CHAR TO MEMNAME
         BCT   R2,XXLOOP1               DECR COUNT, LOOP BACK UP
*
XXLEN    LA    R3,8                     R3 IS INITIAL COUNTER
         SR    R3,R2                    R3 IS NOW NUMBER OF CHARS
         STH   R3,MEMLEN                SAVE FOR TEXTBILD
*
XXTB1    TEXTBILD  AREA=OUTAREA,TEXT=(ADD,MEMBER,ADD2)
XXPU1    PUT   DCBOUT,OUTAREA
*
         MVC   COM2(53),COM2INIT        INITIALIZE COM2 AREA
         MVC   COM2+3(50),INPANSTA+1    MOVE PAN STATS TO OUTPUT
         CLC   COM2+3(50),BLANKS        IF BLANKS
         BNE   *+10                       THEN
         MVC   COM2+3(13),INITVALU          MOVE 'INITIAL VALUE'
XXTB2    TEXTBILD  AREA=OUTAREA,TEXT=(COM,MEMBER,COM2)
XXPU2    PUT   DCBOUT,OUTAREA
*
XXTB3    TEXTBILD  AREA=OUTAREA,TEXT=(REN,MEMBER,COMMA,MEMBER,REN2)
XXPU3    PUT   DCBOUT,OUTAREA
*
         B     XXGET                    GO GET ANOTHER INPUT CARD
*
XXEOF    B     XXEND                    IF END OF FILE, GO TO END
*
XXEND    L     RBAL,XXRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
BLANKS   DC    CL133' '
X00S     DC    XL40'00'                 LITERAL
*
OPENLD   OPEN  (,,,,,),MF=L             OPEN PARM LIST
CLOSD    CLOSE (,,,,),MF=L              CLOSE PARM LIST
*
DCBERRD  DCB   DDNAME=ERRORS,DSORG=PS,LRECL=133,BLKSIZE=1330,          X
               RECFM=FBA,MACRF=PM
*
DCBIND   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=XXEOF
*
DCBOUTD  DCB   DDNAME=SYSUT1,DSORG=PS,LRECL=80,BLKSIZE=6160,           X
               RECFM=FB,MACRF=PM
*
*
ERRMSG01 DC    CL133'1'
ERRMSG02 DC    CL133'-ANY ERROR INPUTS WILL BE LISTED BELOW'
*
INITVALU DC    CL13'INITIAL VALUE'
*
OPTCARD  DC    CL80'++OPTION INPUT,PDS'
CTLCARD  DC    CL80'--CONTROL 0'
ADD      DC    H'06',C'++ADD '
ADD2     DC    H'14',C',NOFORMAT,DATA'
COM      DC    H'10',C'--COMMENT '
REN      DC    H'09',C'--RENAME '
REN2     DC    H'02',C'01'
COMMA    DC    H'01',C','
*
COM2INIT DC    H'51',CL51', '
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      TRT TABLE FOR ALPHANUMERICS AND BLANK (X'40')              ***
***                                                                 ***
***********************************************************************
ALPHANUM DS    0D   0 1 2 3  4 5 6 7  8 9 A B  C D E F
         DC    XL4'11111111,11111111,11111111,11111111'  00-0F
         DC    XL4'11111111,11111111,11111111,11111111'  10-1F
         DC    XL4'11111111,11111111,11111111,11111111'  20-2F
         DC    XL4'11111111,11111111,11111111,11111111'  30-3F
         DC    XL4'00111111,11111111,11111111,11111111'  40-4F
         DC    XL4'11111111,11111111,11111111,11111111'  50-5F
         DC    XL4'11111111,11111111,11111111,11111111'  60-6F
         DC    XL4'11111111,11111111,11111111,11111111'  70-7F
         DC    XL4'11111111,11111111,11111111,11111111'  80-8F
         DC    XL4'11111111,11111111,11111111,11111111'  90-9F
         DC    XL4'11111111,11111111,11111111,11111111'  A0-AF
         DC    XL4'11111111,11111111,11111111,11111111'  B0-BF
         DC    XL4'11000000,00000000,00001111,11111111'  C0-CF
         DC    XL4'11000000,00000000,00001111,11111111'  D0-DF
         DC    XL4'11110000,00000000,00001111,11111111'  E0-EF
         DC    XL4'00000000,00000000,00001111,11111111'  F0-FF
*
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
SWITCH0  DS    B'00000000'              SWITCH AREA
*                1.......               X'80' - (NOT USED)
*                .1111111               (NOT USED)
*
OPRBALSV DS    F                        RETURN ADDRESS SAVE AREA
XXRBALSV DS    F                        RETURN ADDRESS SAVE AREA
CLRBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
COM2     DS    H,CL51
*
ERRAREA  DS    CL133
*
INAREA   DS    0CL80
         DS    CL2
INNAME   DS    CL8
INALIAS  DS    CL8
         DS    CL2
INPANSTA DS    CL52
         DS    CL8
*
MEMBER   DS    0D
MEMLEN   DS    H
MEMNAME  DS    CL8
*
OUTAREA  DS    CL80
*
OPENL    OPEN  (,,,,,),MF=L             OPEN PARM LIST
OPENLLN  EQU   *-OPENL
CLOSL    CLOSE (,,,,),MF=L              CLOSE PARM LIST
CLOSLLN  EQU   *-CLOSL
*
DCBERR   DCB   DDNAME=ERRORS,DSORG=PS,LRECL=133,BLKSIZE=1330,          X
               RECFM=FBA,MACRF=PM
DCBERRLN EQU   *-DCBERR
*
DCBIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=XXEOF
DCBINLN  EQU   *-DCBIN
*
DCBOUT   DCB   DDNAME=SYSUT1,DSORG=PS,LRECL=80,BLKSIZE=6160,           X
               RECFM=FB,MACRF=PM
DCBOUTLN EQU   *-DCBOUT
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
*
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
