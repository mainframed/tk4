         PRINT GEN
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUA00'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
***********************************************************************
***                                                                 ***
***      THIS IS A QUICK AND DIRTY TO CHECK ALL THE GTEUANN         ***
***      SUBROUTINES FOR AN UPDATE.                                 ***
***                                                                 ***
***********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH1,B'00000000'      INITIALIZE SWITCH AREA
*
MAPARM   BAL   RBAL,PARM                CHECK PARM
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA10    BAL   RBAL,A10PROC             GET PANDIR, PANCOM, NEXTNAME
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA30A   MVC   GU01NAM(8),PARMNAME      GET NAME FROM PARM
         BAL   RBAL,A30PROC             GET STATS AND COPY OF MEMBER
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA70    BAL   RBAL,A70PROC             UPDATE STATS, STOW PDS MEMBER
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA30B   BAL   RBAL,A30PROC             GET STATS AND COPY OF NEW MEMBR
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA40    BAL   RBAL,A40PROC             COMPARE NEW PDS WITH OLD PAN
         CLC   RETCDE,=F'16'
         BNL   END12
*
MAA50    BAL   RBAL,A50PROC             CREATE PAN COMMENT FROM STATS
         CLC   RETCDE,=F'4'
         BNL   END12
*
MAA60    BAL   RBAL,A60PROC             ++ADD THE MEMBER TO PANVALET
         CLC   RETCDE,=F'4'
         BNL   END12
*
         B     END00                    GO TO ENDING
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END12    LA    R15,12                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***  CHECK PARM FOR PROPER LENGTH, THEN 'OR' ONTO X'40' FIELD      ***
***  TO MOVE CAPITAL VALUES INTO STORAGE.                          ***
***                                                                ***
**********************************************************************
PARM     ST    RBAL,PARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   PARMNAME(8),BLANKS       CLEAR PARM AREA
         L     R2,0(0,R1)               R2 POINTS TO PARM LENGTH
         LH    R3,0(0,R2)               R3 HAS PARM LENGTH
         C     R3,=F'8'                 IF PARM CHARS GT 8
         BH    PARET04                    SHUT DOWN
         C     R3,=F'1'                 IF PARM CHARS LT 1
         BL    PARET04                    SHUT DOWN
         BCTR  R3,0                     R3 IS LENGTH -1 FOR EXEC
         B     *+10                     BRANCH AROUND OR
         OC    PARMNAME(*-*),2(R2)        CAPITALIZE INTO STORAGE
         EX    R3,*-6                   EXECUTE THE OR
*
         B     PAEND
*
PARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     PAEND                    BRANCH TO ENDING
*
PAEND    L     RBAL,PARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  GIVEN PARMNAME, GET THE PANVALET DIRECTORY ENTRY, PANVALET    ***
***  COMMENT, AND COMPUTE THE NEXT PANVALET NAME.                  ***
***                                                                ***
**********************************************************************
A10PROC  ST    RBAL,A10BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A10CLEAR MVC   PANDIR(PANDIRLN),BLANKS  CLEAR THE PANVALET DIRECTORY
         MVC   GU04NAML(8),PARMNAME     PUT THE NAME IN
         MVC   PANCOM(PANCOMLN),BLANKS  CLEAR THE COMMENT AREA
         MVC   PANNEXT(10),BLANKS       CLEAR THE NEXTNAME FIELD
         NI    SWITCH1,X'FF'-X'80'      TURN OFF PANFOUND SWITCH
*
A10CALL  LA    R15,UPDATE               PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PANDIR               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,PANCOM               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         LA    R15,PANNEXT              PARM ADDRESS
         ST    R15,PARMLIST+12            INTO PARM LIST
         LA    R15,PANDDN               PARM ADDRESS
         ST    R15,PARMLIST+16            INTO PARM LIST
         OI    PARMLIST+16,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA10)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,=F'4'             IF R/C GT 4,
         BH    A10RET04                   ERROR ENDING
         CLC   RETCDE,=F'0'             IF R/C EQ 0
         BNE   *+8                        THEN
         OI    SWITCH1,X'80'                TURN ON PANFOUND SWITCH
         XC    RETCDE,RETCDE            SET R/C EQ 0
*
         B     A10END
*
A10RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A10END                   BRANCH TO ENDING
*
A10END   L     RBAL,A10BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  GET THE ISPF STATS, OR DUMMY STATS, FOR THE INPUT NAME        ***
***                                                                ***
**********************************************************************
A30PROC  ST    RBAL,A30BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A30INIT  MVC   PDSDCB(PDSDCBLN),PDSDCBD             INITIALIZE THE DCB
         MVC   PDSDCB+(DCBDDNAM-IHADCB)(8),PDSDDN   SET THE DDNAME
         MVC   PDSOPN(PDSOPNLN),PDSOPND INITIALIZE  OPEN PARM LIST
         OPEN  (PDSDCB,(INPUT)),MF=(E,PDSOPN)       OPEN THE DATASET
*
         XC    GU01TTR(DIRENTLN-(GU01TTR-DIRENT)),GU01TTR  CLEAR STATS
*
A30CALL  LA    R15,PDSDCB               PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,DIRENT               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         OI    PARMLIST+04,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA30)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,=F'8'             IF R/C GT 8,
         BH    A30RET04                   ERROR ENDING
         CLC   RETCDE,=F'8'             IF R/C LT 8
         BNL   *+8                        THEN
         OI    SWITCH1,X'40'                TURN ON PDSFOUND SWITCH
         XC    RETCDE,RETCDE            SET R/C EQ 0
*
         B     A30END
*
A30RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A30END                   BRANCH TO ENDING
*
A30END   MVC   PDSCLS(PDSCLSLN),PDSCLSD INITIALIZE  CLOSE PARM LIST
         CLOSE (PDSDCB),MF=(E,PDSCLS)               CLOSE THE DATASET
         L     RBAL,A30BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  COMPARE COPY OF PDS MEMBER IN WORK FILE WITH CURRENT PAN MEMB ***
***  FIELD GU04NAML HAS CURRENT NAME AFTER PROCEDURE A10PROC.      ***
***                                                                ***
**********************************************************************
A40PROC  ST    RBAL,A40BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A40SKIP  TM    SWITCH1,B'11000000'      IF EITHER WAS NOT FOUND
         BNO   A40END                     SKIP THIS QUIETLY
*
A40INIT  MVC   PANLAST(10),GU04NAML     COPY CURRENT PANVALET NAME
*
A40CALL  LA    R15,PANLAST              PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         OI    PARMLIST+00,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA40)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         B     A40END
*
A40RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A40END                   BRANCH TO ENDING
*
A40END   L     RBAL,A40BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CREATE PAN COMMENT FROM ISPF STATS                            ***
***  STATS ARE IN DIRENT AREA ALREADY FROM GTEUA30.                ***
***  COMMENT WILL GO INTO PANCOM AREA.                             ***
***                                                                ***
**********************************************************************
A50PROC  ST    RBAL,A50BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A50CALL  LA    R15,PANCOM               PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,DIRENT               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         OI    PARMLIST+04,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA50)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,F0                IF RETURN NOT ZERO
         BNE   A50RET04                   GO TO ERROR RETURN
*
         B     A50END
*
A50RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A50END                   BRANCH TO ENDING
*
A50END   L     RBAL,A50BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  INVOKE PAN#1 TO '++ADD' THE MEMBER TO PANVALET                ***
***                                                                ***
**********************************************************************
A60PROC  ST    RBAL,A60BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A60CALL  LA    R15,UPDATE               PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PANNEXT              PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,PANCOM               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         OI    PARMLIST+08,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA60)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,F0                IF RETURN NOT ZERO
         BNE   A60RET04                   GO TO ERROR RETURN
*
         B     A60END
*
A60RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A60END                   BRANCH TO ENDING
*
A60END   L     RBAL,A60BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  UPDATE PDS, UPDATE STATS, STOW THE STATS.                     ***
***                                                                ***
**********************************************************************
A70PROC  ST    RBAL,A70BALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
A70INIT  MVC   PDSDCB(PDSDCBLN),PDSDCBD             INITIALIZE THE DCB
         MVC   PDSDCB+(DCBDDNAM-IHADCB)(8),PDSDDN   SET THE DDNAME
         MVC   PDSOPN(PDSOPNLN),PDSOPND  INITIALIZE OPEN PARM LIST
         OPEN  (PDSDCB,(OUTPUT)),MF=(E,PDSOPN)      OPEN THE DATASET
*
A70STATS XR    R2,R2                    CLEAR R2 FOR INSERT
         IC    R2,GU01MOD               R2 IS CURRENT MOD NUMBER
         LA    R2,1(0,R2)               R2 IS NEXT MOD NUMBER
         C     R2,=F'99'                IF MOD NUMBER NOW GT 99
         BNH   *+8                        THEN
         LA    R2,1(0,0)                    RESET IT TO 1
         STC   R2,GU01MOD               STORE THE NEW MOD NUMBER
*
A70CALL  LA    R15,UPDATE               PARM ADDRESS
         ST    R15,PARMLIST+00            INTO PARM LIST
         LA    R15,PDSDCB               PARM ADDRESS
         ST    R15,PARMLIST+04            INTO PARM LIST
         LA    R15,DIRENT               PARM ADDRESS
         ST    R15,PARMLIST+08            INTO PARM LIST
         OI    PARMLIST+08,X'80'        MARK END OF LIST
         LA    R1,PARMLIST              R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA70)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         CLC   RETCDE,=F'0'             IF R/C NE 0,
         BNE   A70RET04                   ERROR ENDING
         XC    RETCDE,RETCDE            SET R/C EQ 0
*
         B     A70END
*
A70RET04 LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     A70END                   BRANCH TO ENDING
*
A70END   MVC   PDSCLS(PDSCLSLN),PDSCLSD INITIALIZE  CLOSE PARM LIST
         CLOSE (PDSDCB),MF=(E,PDSCLS)               CLOSE THE DATASET
         L     RBAL,A70BALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
BLANKS   DC    CL80' '                  LITERAL
X00S     DC    XL40'00'                 LITERAL
*
PANDDN   DC    CL8'PANDD1'              PANVALET DDNAME
PDSDDN   DC    CL8'PDS'                 PDS DDNAME
UPDATE   DC    CL12'UPDATE'             FUNCTION NAME
*
PDSDCBD  DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W)
PDSOPND  OPEN  (,),MF=L
PDSCLSD  CLOSE (,),MF=L
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
A10BALSV DS    F                        RETURN ADDRESS SAVE AREA
A30BALSV DS    F                        RETURN ADDRESS SAVE AREA
A40BALSV DS    F                        RETURN ADDRESS SAVE AREA
A50BALSV DS    F                        RETURN ADDRESS SAVE AREA
A60BALSV DS    F                        RETURN ADDRESS SAVE AREA
A70BALSV DS    F                        RETURN ADDRESS SAVE AREA
PARBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
PARMNAME DS    CL8                      INPUT PARM NAME
*
PARMLIST DS    5A                       PARM LIST FOR SUBROUTINES
*
         EJECT
DIRENT   GTEUM01 DSECT=NO               PDS DIRECTORY ENTRY
DIRENTLN EQU   *-DIRENT
         EJECT
PANDIR   GTEUM04 DSECT=NO               PANVALET DIRECTORY ENTRY
PANDIRLN EQU   *-PANDIR
         EJECT
PANCOM   GTEUM03 DSECT=NO               PANVALET COMMENT ENTRY
PANCOMLN EQU   *-PANCOM
         EJECT
PANNEXT  DS    CL10                     PANVALET NEXT NAME
PANLAST  DS    CL10                     PANVALET LAST NAME
*
SWITCH1  DS    B'00000000'              SWITCH AREA
*                1.......               X'80' - PAN MEMBER FOUND
*                .1......               X'40' - PDS MEMBER FOUND
*                ..111111               (NOT USED)
*
PDSOPN   OPEN  (,),MF=L
PDSOPNLN EQU   *-PDSOPN
PDSCLS   CLOSE (,),MF=L
PDSCLSLN EQU   *-PDSCLS
PDSDCB   DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W)
PDSDCBLN EQU   *-PDSDCB
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
         IHADCB DSORG=PS,DEVD=DA
*
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
