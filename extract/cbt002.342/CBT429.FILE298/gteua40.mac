         PRINT GEN
         MACRO
&LABEL   TEXTBILD &AREA=,&TEXT=
.*+-----------------------------------------------------------------+
.*×  MACRO TO BUILD TEXT LINES FROM INDIVIDUAL WORDS AND PHRASES.   ×
.*×   E.G.                                                          ×
.*×           TEXTBILD  AREA=OUTAREA,TEXT=(AVALUE,BVALUE,CVALUE)    ×
.*×                                                                 ×
.*×  AVALUE   DC  H'5',C'ALPHA'                                     ×
.*×  BVALUE   DC  H'7',C'-BRAVO-'                                   ×
.*×  CVALUE   DC  H'7',C'CHARLIE'                                   ×
.*×                                                                 ×
.*×  OUTAREA  DS  CL80                                              ×
.*×                                                                 ×
.*×  CLEARS THE OUTAREA DATA ITEM WITH BLANKS, THEN                 ×
.*×  PRODUCES THE FOLLOWING IN OUTAREA: 'ALPHA-BRAVO-CHARLIE'       ×
.*×                                                                 ×
.*×  UPON COMPLETION:  R1  POINTS TO OUTAREA                        ×
.*×                    R15 HAS TOTAL LENGTH OF TEXT (19)            ×
.*×                                                                 ×
.*×  NOTES 1.  THE LENGTH OF THE CLEAR OPERATION IS TAKEN FROM      ×
.*×            THE DEFINED LENGTH OF THE 'AREA' DATA ITEM.          ×
.*×        2.  THE CODE PRODUCED BY THIS MACRO IS REENTERABLE.      ×
.*+-----------------------------------------------------------------+
         LCLA  &N1,&N2
&N1      SETA  N'&TEXT                  NUMBER OF TEXT OPERANDS
&N2      SETA  1                        INDEX OF INITIAL TEXT OPERAND
.*
&LABEL   MVI   &AREA,X'40'              CLEAR THE TEXT LINE
         MVC   &AREA+1(L'&AREA-1),&AREA   WITH BLANKS
.*
         LA    15,&AREA                 R15 POINTS TO TEXT BEGIN
.LOOP1   ANOP
         LH    1,&TEXT(&N2)             R1 HAS LENGTH OF TEXT
         BCTR  1,0                        MINUS 1 FOR EXEC
         B     *+10                     BRANCH AROUND MOVE
         MVC   0(*-*,15),&TEXT(&N2)+2     MOVE THE DATA
         EX    1,*-6                    EXECUTE THE MOVE
         LA    15,1(1,15)               R15 POINTS JUST BEYOND CHARS
&N2      SETA  &N2+1                    POINT TO NEXT TEXT OPERAND
         AIF   (&N2 LE &N1).LOOP1       LOOP BACK UP
.*
         LA    1,&AREA                  R1 HAS ADDR OF AREA
         SR    15,1                     R15 HAS TOTAL LENGTH OF TEXT
.*
         MEND
*
         EJECT
*
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUA40'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
**********************************************************************
***                                                                ***
***                   GTEUA40                                      ***
***  DESCRIPTION:                                                  ***
***    The function of this program is to compare a sequential     ***
***    copy of a member of a PDS with a member of a Panvalet       ***
***    library.  This program receives a 3-10 character Panvalet   ***
***    member name as an input parm.                               ***
***                                                                ***
***                                                                ***
***                                                                ***
***  The following code will invoke this program:                  ***
***                                                                ***
*** *------------------------------------------------------------- ***
*** MACALL   LA    R15,LASTNAME             ADDRESS OF PARM        ***
***          ST    R15,PARM40+00              INTO PARM LIST       ***
***          OI    PARM40+00,X'80'          MARK END OF LIST       ***
***          LA    R1,PARM40                R1 POINTS TO LIST      ***
***          L     R15,=V(GTEUA40)          ADDRESS OF SUBROUTINE  ***
***          BALR  R14,R15                  CALL THE SUBROUTINE    ***
*** *------------------------------------------------------------- ***
*** PARM40   DS    A                        PARMLIST FOR SUBROUTNE ***
*** LASTNAME DS    CL10                     PAN NAME TO BE ADDED   ***
*** *------------------------------------------------------------- ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  FUNCTION:                                                     ***
***                                                                ***
***  1.  Create input text names for the PAN member from the       ***
***      input parm.                                               ***
***  2.  Initialize the DCB and PCOMPARE parm list, and open the   ***
***      output file which will be used as SYSIN input by PCOMPARE.***
***      The DDNAME is in the macro at label CNTLDCBD.             ***
***      The PDS DDNAME is in the data at label PANPARMD.          ***
***  3.  Create and write the COMPARE, OLD, and NEW command        ***
***      card images.                                              ***
***  4.  Close the file.                                           ***
***  5.  LINK to the PCOMPARE program.                             ***
***                                                                ***
***                                                                ***
***  NOTES:                                                        ***
***                                                                ***
***  1. Do not hard link the PCOMPARE program.                     ***
***                                                                ***
***  2. Additionally, when PAN#1 is invoked, it will require the   ***
***     following files:                                           ***
***        PANDD1   - The Panvalet library.                        ***
***        SYSPRINT - Output listing.                              ***
***        PCWORK1  - Work file to contain old (PAN) card images.  ***
***        PCWORK2  - Work file to contain new (PDS) card images.  ***
***        WRK001   - Input sequential copy of PDS member.         ***
***                                                                ***
***                                                                ***
***  RETURN CODES:                                                 ***
***     00 - OKAY                                                  ***
***     12 - Error, or PDS data did not match PAN data.            ***
***     16 - Input name was shorter than 3 characters.             ***
***                                                                ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  REGISTER USAGE:                                               ***
***                                                                ***
***     R0-R3   - Linkage conventions, work, macros.               ***
***     R4      - (unused)                                         ***
***     R5      - (unused)                                         ***
***     R6      - (unused)                                         ***
***     R7      - (unused)                                         ***
***     R8      - (unused)                                         ***
***     R9      - Base of LASTNAME parm.                           ***
***     R10     - (unused)                                         ***
***     R11     - Linkage register used with BAL.                  ***
***     R12     - Base register of program code.                   ***
***     R13     - Linkage conventions, base of WORKD area.         ***
***     R14-R15 - Linkage conventions, work, macros.               ***
***                                                                ***
***                                                                ***
***  NON-IBM MACROS USED:                                          ***
***                                                                ***
***     (none)                                                     ***
***                                                                ***
***  ASSEMBLER OPTIONS:       RENT                                 ***
***  LINKAGE EDITOR OPTIONS:  RENT, REUS, REFR                     ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  CULPRIT:                                                      ***
***                                                                ***
***     Chuck Hoffman, IBM Systems Programming                     ***
***     GTE Laboratories, Technical Computation Center             ***
***     40 Sylvan Road                                             ***
***     Waltham, Massachusetts  02254                              ***
***                                                                ***
***                     617/466-2131    V/N 679-2131               ***
***                                                                ***
**********************************************************************
         SPACE 3
**********************************************************************
***                                                                ***
***  MAINTENANCE HISTORY:                                          ***
***                                                                ***
***  1.  A.  Initial version.                                      ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
**********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH0,B'00000000'      INITIALIZE SWITCH AREA
*
         L     R9,0(R1)                 LOAD PARM ADDRESSES
         USING LASTNAME,R9                ADDRESSABILITY
*
MANAMES  BAL   RBAL,NAMES               PROCESS THE NAME PARM
         CLC   RETCDE,F0                IF BAD RETURN
         BNE   END16                      GO TO ERROR ENDING
*
MAOPEN   BAL   RBAL,OPEN                OPEN THE OUTPUT FILE
MAPUT    BAL   RBAL,PUT                 WRITE THE OUTPUT RECORDS
MACLOSE  BAL   RBAL,CLOSE               CLOSE THE OUTPUT FILE
*
MAPCOMP  BAL   RBAL,PACOMP              EXECUTE THE PANVALET PROGRAM
         CLC   RETCDE,F0                IF BAD RETURN
         BNE   END12                      GO TO ERROR ENDING
*
         B     ENDING                   GO TO ENDING
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END16    LA    R15,16                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END12    LA    R15,12                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***  INITIALIZE THE DCB AND OPEN THE OUTPUT FILE.                  ***
***  INITIALIZE THE PCOMPARE PARM LIST.                            ***
***                                                                ***
**********************************************************************
OPEN     ST    RBAL,OPRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   CNTLDCB(CNTLDCBL),CNTLDCBD  INITIALIZE THE DCB
         MVC   OPENL(OPENLLN),OPENLD    INITIALIZE THE OPEN PARM LIST
*
         MVC   PANPARM(102),PANPARMD    INITIALIZE PARM
         LA    R1,PANPARM               R1 HAS ADDR OF PARM
         ST    R1,PANPARML                INTO PARM LIST
         OI    PANPARML+00,X'80'        MARK END OF PARM LIST
*
         LA    R3,OPENL                 R3 POINTS TO THE PARM LIST
         LA    R2,CNTLDCB               R2 POINTS TO THE DCB
         OPEN  ((R2),(OUTPUT)),MF=(E,(R3))  OPEN THE FILE
*
         B     OPEND
*
OPRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     OPEND                    BRANCH TO ENDING
*
OPEND    L     RBAL,OPRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CLOSE THE OUTPUT FILE.                                        ***
***                                                                ***
**********************************************************************
CLOSE    ST    RBAL,CLRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   CLOSL(CLOSLLN),CLOSD     INITIALIZE THE CLOSE PARM LIST
*
         LA    R3,CLOSL                 R3 POINTS TO THE PARM LIST
         LA    R2,CNTLDCB               R2 POINTS TO THE DCB
         CLOSE ((R2)),MF=(E,(R3))       CLOSE THE FILE
*
         B     CLEND
*
CLRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     CLEND                    BRANCH TO ENDING
*
CLEND    L     RBAL,CLRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CREATE THE PDS AND PAN NAME TEXT UNITS FROM THE INPUT NAME    ***
***                                                                ***
**********************************************************************
NAMES    ST    RBAL,NARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
NASUFF   LA    R2,LASTNAME              R2 POINTS TO NAME
         BCTR  R2,0                     R2 POINTS JUST BEFORE NAME
         LA    R3,10                    R3 IS COUNTER
*
NALOOP1  LA    R2,1(0,R2)               R2 POINTS TO NEXT CHARACTER
         CLI   0(R2),X'40'              IF BLANK
         BE    NALENGTH                   BRANCH OUT
         BCT   R3,NALOOP1               LOOP BACK UP
*
         LA    R2,1(0,R2)               FALL THRU: POINT TO NEXT CHAR
*
*                                       R2 NOW POINTS JUST BEYOND NAME
NALENGTH LA    R3,LASTNAME              R3 POINTS TO NAME
         SR    R2,R3                    R2 IS LENGTH OF PAN NAME
         C     R2,=F'3'                 IF LENGTH LT 3
         BL    NARET04                    GO TO ERROR
         STH   R2,NAPAN                 SAVE THE LENGTH OF PAN NAME
*
NANAMES  LH    R2,NAPAN                 R2 IS LENGTH OF PAN NAME
         BCTR  R2,0                       MINUS 1 FOR EXEC
         B     *+10                     BRANCH AROUND MOVE
         MVC   NAPAN+2(0),LASTNAME        MOVE NAME TO STORAGE
         EX    R2,*-6                   EXECUTE THE MOVE
*
         B     NAEND
*
NARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     NAEND                    BRANCH TO ENDING
*
NAEND    L     RBAL,NARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CREATE AND WRITE PCOMPARE CONTROL CARDS TO OUTPUT FILE        ***
***                                                                ***
**********************************************************************
PUT      ST    RBAL,PURBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         TEXTBILD  AREA=PULINE1,TEXT=COMPARE
         TEXTBILD  AREA=PULINE2,TEXT=(OLD,NAPAN,RPAREN)
         TEXTBILD  AREA=PULINE3,TEXT=NEW
*
         LA    R2,PULINE1-80            R2 POINTS TO -1 LINE
         LA    R3,PULINES               R3 IS COUNTER
PULOOP1  LA    R2,80(0,R2)              R2 POINTS TO NEXT LINE
         PUT   CNTLDCB,(R2)             WRITE THE LINE
         BCT   R3,PULOOP1               LOOP BACK UP
*
         B     PUEND
*
PURET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     PUEND                    BRANCH TO ENDING
*
PUEND    L     RBAL,PURBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  EXECUTE THE PANVALET PROGRAM.                                 ***
***                                                                ***
**********************************************************************
PACOMP   ST    RBAL,PARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         LA    R1,PANPARML              POINT TO THE PARM LIST
         LINK  EP=PCOMPARE              EXECUTE PANVALET
         LTR   R15,R15                  IF NOT RC=00
         BNE   PARET04                    GO TO HIGH RETURN
*
         B     PAEND
*
PARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     PAEND                    BRANCH TO ENDING
*
PAEND    L     RBAL,PARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
BLANKS   DC    CL80' '                  LITERAL
X00S     DC    XL40'00'                 LITERAL
*
PANPARMD DC    H'21',CL100'WRK002,,PANDD1,WRK001'
*
CNTLDCBD DCB   DDNAME=WRK002,DSORG=PS,LRECL=80,BLKSIZE=80,RECFM=F,     X
               MACRF=PM
OPENLD   OPEN  (,),MF=L
CLOSD    CLOSE (),MF=L
*
COMPARE  DC    H'33',C'COMPARE OUTPUT(NO) REPORT(DETAIL)'
OLD      DC    H'42',C'OLD COLUMN(1 72) FILEORG(PANVALET) MEMBER('
RPAREN   DC    H'01',C')'
NEW      DC    H'23',C'NEW FILEORG(SEQUENTIAL)'
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
SWITCH0  DS    B'00000000'              SWITCH AREA
*                1.......               X'80' - (NOT USED)
*                .1111111               (NOT USED)
*
OPRBALSV DS    F                        RETURN ADDRESS SAVE AREA
CLRBALSV DS    F                        RETURN ADDRESS SAVE AREA
NARBALSV DS    F                        RETURN ADDRESS SAVE AREA
PURBALSV DS    F                        RETURN ADDRESS SAVE AREA
PARBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
NAPAN    DS    H,CL10                   TEXT OF PAN MEMBER NAME
LINEOUT  DS    CL80                     OUTPUT TEXT LINE
*
PUCOM    DS    H,CL50                   TEXT MADE FROM PAN COMMENT
*
PULINE1  DS    CL80                     OUTPUT TEXT TO BE BUILT
PULINE2  DS    CL80                     OUTPUT TEXT TO BE BUILT
PULINE3  DS    CL80                     OUTPUT TEXT TO BE BUILT
PULINES  EQU   (*-PULINE1)/80           NUMBER OF OUTPUT LINES
*
PANPARML DS    A
PANPARM  DS    H,CL100
*
CNTLDCB  DCB   DDNAME=WRK002,DSORG=PS,LRECL=80,BLKSIZE=80,RECFM=F,     X
               MACRF=PM
CNTLDCBL EQU   *-CNTLDCB
*
OPENL    OPEN  (,),MF=L
OPENLLN  EQU   *-OPENL
*
CLOSL    CLOSE (),MF=L
CLOSLLN  EQU   *-CLOSL
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
PANCOM   GTEUM03  DSECT=YES             PANVALET COMMENT AREA
*
LASTNAME DSECT
         DS       CL10                  PANVALET NAME TO BE ADDED
*
         IHADCB  DSORG=PS,DEVD=DA
*
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
