         PRINT GEN
         MACRO
&LABEL   CNVTNUM  &INPUT=,&OUTPUT=,&WORK=WORK8,&DUBL=WORKDUBL
.*+-------------------------------------------------------------------+
.*× MACRO TO CONVERT FROM ZONED DISPLAY TO BINARY                     ×
.*×                                                                   ×
.*×  E.G.                                                             ×
.*×             CNVTNUM  INPUT=ZDNUM,OUTPUT=BINNUM                    ×
.*×                                                                   ×
.*×    ZDNUM    DS    CL5                                             ×
.*×    BINNUM   DS    H                                               ×
.*×    *                                                              ×
.*×    WORK8    DS    CL8                                             ×
.*×    WORKDUBL DS    D                                               ×
.*×                                                                   ×
.*× NOTE - AT COMPLETION, THE OUTPUT FIELD AND R1 BOTH CONTAIN        ×
.*×        THE INPUT NUMBER CONVERTED TO BINARY.                      ×
.*+-------------------------------------------------------------------+
&LABEL   MVI    &WORK,X'F0'                         INITIALIZE WITH
         MVC    &WORK+1(L'&WORK-1),&WORK              ALL DISPLAY '0'
         MVC    &WORK+(L'&WORK-L'&INPUT)(L'&INPUT),&INPUT  INSERT INPUT
.*
         PACK   &DUBL,&WORK                         CHANGE TO PACKED
         CVB    R1,&DUBL                            CHANGE TO BINARY
         ST     R1,&DUBL                            PUT BACK IN STORAGE
.*
         MVC    &OUTPUT,&DUBL+(4-L'&OUTPUT)         MOVE TO OUTPUT
.*
         MEND
         EJECT
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUA80'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
**********************************************************************
***                                                                ***
***                   progname                                     ***
***                                                                ***
***  DESCRIPTION:                                                  ***
***    The function of this program is to create ISPF statistics   ***
***    from an input Panvalet comment field, and STOW the stats    ***
***    into the directory of a PDS.                                ***
***                                                                ***
***  This program can be invoked with the following code:          ***
*** *------------------------------------------------------------- ***
*** MACALL   LA    R15,DIRENTRY             PARM ADDRESS           ***
***          ST    R15,PARMLIST+00            INTO PARM LIST       ***
***          LA    R15,PANDIR               PARM ADDRESS           ***
***          ST    R15,PARMLIST+04            INTO PARM LIST       ***
***          LA    R15,PANCOM               PARM ADDRESS           ***
***          ST    R15,PARMLIST+08            INTO PARM LIST       ***
***          OI    PARMLIST+08,X'80'        MARK END OF LIST       ***
***          LA    R1,PARMLIST              R1 POINTS TO PARM LIST ***
***          L     R15,=V(GTEUA80)          R15 POINTS TO PROGRAM  ***
***          BALR  R14,R15                  CALL THE SUBROUTINE    ***
***          ST    R15,COMPCODE             SAVE THE RETURN CODE   ***
*** *------------------------------------------------------------- ***
*** WORKD    DSECT                                                 ***
*** *                                                              ***
*** COMPCODE DS    F                        PROGRAM COMPLETN CODE  ***
*** PARMLIST DS    3A                       PARM LIST FOR SUBRTINE ***
*** DIRENTRY GTEUM01 DSECT=NO               PDS ENTRY, STOW FORMAT ***
*** PANDIR   GTEUM04 DSECT=NO               PANVALET DIR ENTRY     ***
*** PANCOM   GTEUM03 DSECT=NO               PANVALET COMMENT       ***
*** *------------------------------------------------------------- ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  FUNCTION:                                                     ***
***                                                                ***
***  1.  Check the Panvalet comment for ISPF statistics format.    ***
***  2.  Convert the Panvalet comment, and the name and initial    ***
***      size fields from the Panvalet directory entry, into a     ***
***      PDS directory entry in STOW format.                       ***
***  3.  OPEN the PDS, FIND the entry, STOW the new entry, and     ***
***      CLOSE the PDS.                                            ***
***                                                                ***
***                                                                ***
***  NOTES:                                                        ***
***                                                                ***
***  1. When the program completes, the PDS directory entry is in  ***
***     the DIRENTRY parm field.                                   ***
***                                                                ***
***                                                                ***
***  RETURN CODES:                                                 ***
***     00 - OKAY                                                  ***
***     04 - Director entry was STOWed, but without stats.         ***
***          Probably the Panvalet comment was not in stats        ***
***          format.                                               ***
***     12 - The update was not made because the member did not    ***
***          already exist in the PDS.                             ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  REGISTER USAGE:                                               ***
***                                                                ***
***     R0-R3   - Linkage conventions, work, macros.               ***
***     R4      - (unused)                                         ***
***     R5      - (unused)                                         ***
***     R6      - (unused)                                         ***
***     R7      - (unused)                                         ***
***     R8      - Base of DIRENTRY, the PDS directory entry.       ***
***     R9      - Base of PANDIR, the Panvalet directory entry.    ***
***     R10     - Base of PANCOM, the Panvalet comment field.      ***
***     R11     - Linkage register used with BAL.                  ***
***     R12     - Base register of program code.                   ***
***     R13     - Linkage conventions, base of WORKD area.         ***
***     R14-R15 - Linkage conventions, work, macros.               ***
***                                                                ***
***                                                                ***
***  NON-IBM MACROS USED:                                          ***
***                                                                ***
***     GTEUM01  - PDS directory entry, in STOW format.            ***
***     GTEUM03  - Panvalet comment area, formatted for stats.     ***
***     GTEUM04  - Panvalet directory entry.                       ***
***                                                                ***
***  ASSEMBLER OPTIONS:       RENT                                 ***
***  LINKAGE EDITOR OPTIONS:  RENT, REUS, REFR                     ***
***                                                                ***
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  CULPRIT:                                                      ***
***                                                                ***
***     Chuck Hoffman, IBM Systems Programming                     ***
***     GTE Laboratories, Technical Computation Center             ***
***     40 Sylvan Road                                             ***
***     Waltham, Massachusetts  02254                              ***
***                                                                ***
***                     617/466-2131    V/N 679-2131               ***
***                                                                ***
**********************************************************************
         SPACE 3
**********************************************************************
***                                                                ***
***  MAINTENANCE HISTORY:                                          ***
***                                                                ***
***  1.  A.  Initial installation.                                 ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
***                                                                ***
**********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH0,B'00000000'      INITIALIZE SWITCH AREA
*
         LM    R8,R10,0(R1)             LOAD PARM ADDRESSES
         USING DIRENTRY,R8              R8 POINTS TO PDS ENTRY
         USING PANDIR,R9                R9 POINTS TO PAN DIR ENTRY
         USING PANCOM,R10               R10 POINTS TO PAN COMMENT
*
         BAL   RBAL,VALIDATE            CHECK FOR PANVALET/ISPF STATS
*
         BAL   RBAL,CONVERT             CONVERT FROM PAN TO PDS
*
         BAL   RBAL,STOW                STOW THE STATS IN THE PDS
         CLC   RETCDE,F0                IF RETURN CODE NOT 00
         BNE   END12                      GO TO BAD ENDING
*
         B     ENDING                   GO TO ENDING
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
END12    LA    R15,12                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***  FIND OUT WHETHER THE PANVALET COMMENT IS IN STATS FORMAT      ***
***                                                                ***
**********************************************************************
VALIDATE ST    RBAL,VARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         NI    SWITCH0,X'FF'-X'01'      TURN OFF STATS SWITCH
         MVC   VALDWORK(39),PANCOM      COPY CHARS 1-39 TO COMMENT
         NC    VALDWORK(39),VALDMASK    'AND' THE MASK ONTO COMMENT
         CLC   VALDWORK(39),VALDMASK    IF THE RESULT MATCHES MASK
         BNE   VARET04                    THEN
         OI    SWITCH0,X'01'              TURN ON THE STATS SWITCH
*
         B     VAEND
*
VARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     VAEND                    BRANCH TO ENDING
*
VAEND    L     RBAL,VARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CONVERT FROM PANVALET FORMAT TO PDS ISPF STATS FORMAT         ***
***                                                                ***
**********************************************************************
CONVERT  ST    RBAL,CORBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         LA    R1,GU04NAML              R1 POINTS TO PAN NAME
         LA    R2,8(0,0)                R2 IS LOOP COUNTER
COLOOP1  LA    R3,1(R1,R2)              R3 POINTS TO TRAILING CHAR
         CLI   0(R3),X'40'              IF NON-BLANK
         BNE   CONAME                     LEAVE LOOP, R2=PANLEN-2
         BCT   R2,COLOOP1               ELSE DECR COUNTER AND LOOP UP
*
COERROR  B     CORET04                  FALL-THRU AFTER 8 IS ERROR
*
CONAME   BCTR  R2,0                     R2 IS PANLEN-3, IS PDSLEN-1
         MVC   GU01NAM(8),BLANKS        INITIALIZE AS BLANKS
         B     *+10                     BRANCH AROUND MOVE
         MVC   GU01NAM(0),GU04NAML        MOVE ALL BUT LAST 2 CHARS
         EX    R2,*-6                   EXECUTE THE MOVE
*
COTTR    XC    GU01TTR,GU01TTR          SET TTR TO X'000000'
*
COSTATS  TM    SWITCH0,X'01'            IF PANCOM IS NOT STATS
         BNO   CORET04                    BRANCH TO SHORT ENDING
*
COC      MVI   GU01C,X'0F'              SET C TO X'0F' 15 H/W, NO ALIAS
*
COVER    CNVTNUM  INPUT=GU03VER,OUTPUT=GU01VER     CONVERT VERSION
COMOD    CNVTNUM  INPUT=GU03MOD,OUTPUT=GU01MOD     CONVERT MOD NUMBER
*
         XC    GU01MOD+1(2),GU01MOD+1   CLEAR 2 BYTES AFTER MOD
*
CODATC   MVC   JDGREGDT(8),GU03DATC     MOVE DATE TO WORK
         BAL   RBAL,JDATE               CONVERT TO JULIAN
         CLC   RETCDE,F0                IF BAD CONVERSION
         BNE   CORET04                    BRANCH TO SHORT ENDING
         MVC   GU01DATC,JDJULDT         ELSE MOVE THE DATE
*
CODATM   MVC   JDGREGDT(8),GU03DATM     MOVE DATE TO WORK
         BAL   RBAL,JDATE               CONVERT TO JULIAN
         CLC   RETCDE,F0                IF BAD CONVERSION
         BNE   CORET04                    BRANCH TO SHORT ENDING
         MVC   GU01DATM,JDJULDT         ELSE MOVE THE DATE
*
COTIMM   MVC   WORK8(5),GU03TIMM        WORK8 IS HH:MM...
         MVC   WORK8+2(2),WORK8+3       WORK8 IS HHMM....
         PACK  WORKDUBL,WORK8(4)        WORKDUBL IS 00000000 000HHMMC
         L     R1,WORKDUBL+4            R1 IS 000HHMMC
         SRL   R1,4                     R1 IS 0000HHMM
         STCM  R1,3,GU01TIMM            MOVE THE TIME
*
COSIZE   CNVTNUM  INPUT=GU04STMT,OUTPUT=GU01SIZE   STATEMENTS=SIZE
COINIT   CNVTNUM  INPUT=GU03INIT,OUTPUT=GU01INIT   INITIAL SIZE
*
COMODL   XC    GU01MODL,GU01MODL        INITIALIZE MOD LINE CNT TO 0
*
COID     MVC   GU01ID,GU03ID            JOBNAME/USERID
*
         MVC   GU01ID+7(6),BLANKS       BLANK OUT THE REST
*
         B     COEND
*
CORET04  MVI   GU01C,X'00'              SET 'C' FOR NONALIAS, NOSTATS
         LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         ST    R15,COMPCODE             SAVE IT PERMANENTLY, TOO
         B     COEND                    BRANCH TO ENDING
*
COEND    L     RBAL,CORBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***   CONVERT DISPLAY MM/DD/YY INTO PACKED 00YYDDDF                ***
***                                                                ***
**********************************************************************
JDATE    ST    RBAL,JDRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
JDFORMAT MVC   JDWORK(8),JDGREGDT       MOVE TO WORK AREA
         NC    JDWORK(8),JDPATT         CHECK NUMERIC 1-2,4-5,7-8
         CLC   JDWORK(8),JDPATT         IF PATTERN DOESN'T MATCH
         BNE   JDRET04                    GO TO ERROR END
*
JDYEAR   NI    SWITCH0,X'FF'-X'08'      TURN OFF LEAPYEAR SWITCH
         PACK  WORKDUBL(8),JDYY         WORKDUBL IS 00000000 00000YYC
         MVC   JDPACKYY(4),WORKDUBL+4   JDPACKYY IS 00000YYC
         CVB   R1,WORKDUBL              R1 IS BINARY YEAR
         XR    R0,R0                    R0 CLEAR FOR DIVIDE
         D     R0,=F'4'                 DIVIDE FOR LEAPYEAR CHECK
         LTR   R0,R0                    IF LEAPYEAR
         BNZ   *+8                        THEN
         OI    SWITCH0,X'08'                TURN ON LEAPYEAR SWITCH
*
JDMON    PACK  WORKDUBL(8),JDMM         WORKDUBL IS 00000000 00000MMC
         CVB   R1,WORKDUBL              R1 IS BINARY MONTH
         C     R1,=F'1'                 IF LESS THAN JANUARY
         BL    JDRET04                    GO TO ERROR
         C     R1,=F'12'                IF GREATER THAN DECEMBER
         BH    JDRET04                    GO TO ERROR
         BCTR  R1,0                     R1 CONVERT TO TABLE OFFSET
         SLA   R1,1                     R1 IS OFFSET INTO TABLE
         LH    R1,JDDAY0(R1)            R1 BIN DAY FOR DAY 0 OF MONTH
*
JDDAY    PACK  WORKDUBL(8),JDDD         WORKDUBL IS 00000000 00000DDC
         CVB   R0,WORKDUBL              R0 IS BINARY DAY
         AR    R1,R0                    R1 IS BINARY DDD
         C     R1,=F'1'                 IF DDD IS 0 OR LESS
         BL    JDRET04                    GO TO ERROR END
         C     R1,=F'365'               IF DDD IS GT 365 (WITHOUT LEAP)
         BH    JDRET04                    GO TO ERROR END
         TM    SWITCH0,X'08'            IF NOT LEAPYEAR
         BNO   JDCVD                      AND
         CLC   JDMM,=C'03'                IF MARCH OR LATER
         BL    JDCVD                        THEN
         LA    R1,1(0,R1)                     ADD 1 TO DDD
JDCVD    CVD   R1,WORKDUBL              WORKDUBL IS 00000000 0000DDDC
*
JDCOMB   L     R1,JDPACKYY              R1 IS 00000YYC
         SRA   R1,4                     R1 IS 000000YY
         SLA   R1,16                    R1 IS 00YY0000
         O     R1,WORKDUBL+4            R1 IS 00YYDDDC
         O     R1,=F'15'                R1 IS 00YYDDDF, NO SIGN
         ST    R1,JDJULDT               SAVE IT
*
         B     JDEND
*
JDRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     JDEND                    BRANCH TO ENDING
*
JDEND    L     RBAL,JDRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  STOW THE DIRECTORY ENTRY INTO THE PDS DIRECTORY               ***
***                                                                ***
**********************************************************************
STOW     ST    RBAL,STRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   PDSDCB(PDSDCBLN),PDSDCBD INITIALIZE DCB
         MVC   OPENL(OPENLLN),OPEND     INITIALIZE OPEN LIST
         MVC   CLOSL(CLOSLLN),CLOSD     INITIALIZE CLOSE LIST
*
STOPEN   OPEN  (PDSDCB,(OUTPUT)),MF=(E,OPENL)     OPEN THE PDS
*
STFIND   FIND  PDSDCB,DIRENTRY,D        FIND THE MEMBER NAME
         LTR   R15,R15                  IF IT DOESN'T ALREADY EXIST
         BNZ   STRET04                    CLOSE UP AND GO HOME
*
STSTOW   XC    GU01TTR,GU01TTR          ENSURE TTR IS ZEROED OUT
         STOW  PDSDCB,DIRENTRY,R        STOW THE ENTRY
         LTR   R15,R15                  IF NOT CLEAN
         BNZ   STRET04                    CLOSE UP AND GO HOME
*
         B     STCLOSE
*
STRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
*
STCLOSE  CLOSE (PDSDCB),MF=(E,CLOSL)    CLOSE THE FILE
*
STEND    L     RBAL,STRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
BLANKS   DC    CL80' '                  LITERAL
X00S     DC    XL40'00'                 LITERAL
*
JDDAY0   DC    H'000,031,059,090,120,151'   DDD OF DAY 0 OF EACH MONTH
         DC    H'181,212,243,273,304,334'
JDPATT   DC    X'F0F000F0F000F0F0'      PATTERN TO CHECK FOR NN.NN.NN
*
VALDMASK DC    CL39'* 000.00 00/00/00 00/00/00-00:00 00000 '
*
OPEND    OPEN  (,),MF=L                 PARM LIST FOR OPEN
CLOSD    CLOSE (),MF=L                  PARM LIST FOR CLOSE
PDSDCBD  DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W)
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
CORBALSV DS    F                        RETURN ADDRESS SAVE AREA
JDRBALSV DS    F                        RETURN ADDRESS SAVE AREA
VARBALSV DS    F                        RETURN ADDRESS SAVE AREA
STRBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
SWITCH0  DS    B'00000000'              SWITCH AREA
*                .......1               X'01' - PAN COMMENT IS STATS
*                1111111.               (NOT USED)
*
JDGREGDT DS    0CL8                     GTEGORIAN DATE
JDMM     DS    CL2                        MONTH
         DS    CL1                        /
JDDD     DS    CL2                        DAY
         DS    CL1                        /
JDYY     DS    CL2                        YEAR
*
JDWORK   DS    CL8                      WORK AREA TO CHECK NUMERICS
*
JDJULDT  DS    F                        JULIAN 00YYDDDF
JDPACKYY DS    F                        JULIAN YEAR 00000YYC
*
WORKDUBL DS    D                        DOUBLEWORD FOR CVB/CVD
*
WORK8    DS    CL8                      WORK AREA FOR CNVTNUM
*
VALDWORK DS    CL39                     WORK AREA FOR VALDIATION
*
OPENL    OPEN  (,),MF=L                 PARM LIST FOR OPEN
OPENLLN  EQU   *-OPENL
CLOSL    CLOSE (),MF=L                  PARM LIST FOR CLOSE
CLOSLLN  EQU   *-CLOSL
*
PDSDCB   DCB   DDNAME=PDS,DSORG=PO,MACRF=(R,W)
PDSDCBLN EQU   *-PDSDCB
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
DIRENTRY GTEUM01
         EJECT
PANCOM   GTEUM03
         EJECT
PANDIR   GTEUM04
*
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
