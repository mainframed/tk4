         PRINT GEN
         LCLC  &MYNAME                  LOCAL CONSTANT
*
&MYNAME  SETC  'GTEUAB0'                CSECT NAME
RBASE    EQU   12                       BASE REGISTER FOR CSECT
RBAL     EQU   11                       BAL REGISTER
*
         TITLE '&MYNAME'                LISTING TITLE
***********************************************************************
***                                                                 ***
***  PROGRAM TO PRODUCE A DIRECTORY LISTING, WITH ISPF STATS        ***
***  CONVERTED TO PANVALET COMMENT STATS.                           ***
***                                                                 ***
***********************************************************************
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS ENTERING PROGRAM                       ***
***                                                                 ***
***********************************************************************
&MYNAME  CSECT ,
         STM   R14,R12,12(R13)          SAVE REGS TO CALLER S.A.
         B     (BEGIN-&MYNAME)(R15)     BRANCH AROUND EYECATCHER
         DC    A(L'NAME)                LENGTH OF CSECT NAME
NAME     DC    C'&MYNAME'               CSECT NAME
         DC    C' &SYSDATE &SYSTIME '   ASSEMBLY DATE/TIME STAMP
BEGIN    LR    RBASE,R15                LOAD BASE REGISTER
         USING &MYNAME,RBASE              ADDRESSABILITY
         PRINT NOGEN
         GETMAIN R,LV=WORKDLEN          GET SAVE/WORK AREA
         ST    R1,8(0,R13)              MY S.A. ADDR INTO CALLER S.A.
         ST    R13,4(0,R1)              CALLER S.A. ADDR INTO MY S.A.
         LR    R13,R1                   R13 POINTS TO MY S.A.
         USING WORKD,R13                ADDRESSABILITY OF SAVE AREA
         L     R1,4(0,R13)              R1 POINTS TO CALLER S.A.
         LM    R15,R1,16(R1)            R15 R0 AND R1 ARE RESTORED
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAINLINE ROUTINE                                           ***
***                                                                 ***
***********************************************************************
MAIN     EQU   *                        BEGIN MAINLINE ROUTINE
         ST    R1,R1SAVE                SAVE INITIAL R1
         XC    COMPCODE,COMPCODE        CLEAR COMPLETION CODE
         MVI   SWITCH0,B'00000000'      INITIALIZE SWITCH AREA
*
         BAL   RBAL,OPEN                OPEN THE FILES
         BAL   RBAL,NAMES               GET THE NAMES FROM THE DIRECTRY
         BAL   RBAL,CLOSE               CLOSE THE FILES
*
         B     ENDING                   GO TO ENDING
*
         EJECT
***********************************************************************
***                                                                 ***
***      LINKAGE CONVENTIONS EXITING PROGRAM                        ***
***                                                                 ***
***********************************************************************
*
END00    LA    R15,00                   IF PROPOSED COMPLETION CODE
         C     R15,COMPCODE               IS GREATER THAN STORED CODE
         BNH   *+8                          THEN
         ST    R15,COMPCODE                   STORE THE PROPOSED CODE
         B     ENDING                   GO TO ENDING
*
ENDING   L     R14,COMPCODE             R14 SAVES COMP CODE
         LR    R1,R13                   R1 SAVES ADDR OF MY S.A.
         L     R13,4(0,R1)              R13 RESTORED, PTR CALLER S.A.
         FREEMAIN R,LV=WORKDLEN,A=(R1)  FREE MY SAVE/WORK AREA
         LR    R15,R14                  R15 SET TO COMP CODE
         LM    R0,R12,20(R13)           R0-R12 RESTORED
         L     R14,12(0,R13)            R14 RESTORED
         MVI   12(R13),X'FF'            SET COMPLETION SIGNAL
         BR    R14                      RETURN TO CALLER
*
         EJECT
**********************************************************************
***                                                                ***
***  INITIALIZE CONTROL BLOCKS, AND OPEN THE FILES                 ***
***                                                                ***
**********************************************************************
OPEN     ST    RBAL,OPRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
OPINIT   MVC   OPENL(OPENLLN),OPENLD    INITIALIZE OPEN PARM LIST
         MVC   DIRDCB(DIRDCBLN),DIRDCBD INITIALIZE INPUT DCB
         MVC   WRKDCB(WRKDCBLN),WRKDCBD INITIALIZE OUTPUT DCB
         MVC   DIRDECB(DIRDECBL),DIRDECBD INITIALIZE INPUT DECB
*
OPENFILS OPEN  (DIRDCB,(INPUT),WRKDCB,(OUTPUT)),MF=(E,OPENL)  OPEN
*
*
         B     OPEND
*
OPRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     OPEND                    BRANCH TO ENDING
*
OPEND    L     RBAL,OPRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CLOSE THE FILES                                               ***
***                                                                ***
**********************************************************************
CLOSE    ST    RBAL,CLRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
CLINIT   MVC   CLOSL(CLOSLLN),CLOSD     INITIALIZE CLOSE PARM LIST
*
CLOSFILS CLOSE (DIRDCB,,WRKDCB),MF=(E,CLOSL)   CLOSE
*
         B     CLEND
*
CLRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     CLEND                    BRANCH TO ENDING
*
CLEND    L     RBAL,CLRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  GET THE NAMES FROM THE DIRECTORY                              ***
***                                                                ***
**********************************************************************
NAMES    ST    RBAL,NARBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
NASTOR   LH    R2,DIRDCB+(DCBBLKSI-IHADCB)     R2 HAS MAX BLOCKSIZE
         STH   R2,NABLOCK                      SAVE IT
         GETMAIN  R,LV=(R2)                    GET STORAGE
         LR    R9,R1                    R9 POINTS TO STORAGE
         USING DIRAREA,R9                 ADDRESSABILITY
*
NAREAD1  READ  DIRDECB,SF,DIRDCB,DIRAREA,'S',MF=E  READ A BLOCK
         CHECK DIRDECB                  WAIT FOR READ TO COMPLETE
         LH    R2,DIRLEN                R2 IS LEN OF DATA IN BLOCK
         LA    R3,DIRENT                R3 POINTS TO DIR ENTRY AREA
         USING DIRENTRY,R3                ADDRESSABILITY
*
         S     R2,F2                    R2 IS REMAINING LEN OF DATA
NALOOP2  LTR   R2,R2                    IF NOT POSITIVE REMAINING
         BNP   NAREAD1                    GO GET ANOTHER BLOCK
         CLC   DIRNAME(8),XFFS          IF NAME IS ALL X'FF'
         BE    NAEND                      GO TO ALL DONE WITH DIR
         MVC   OUTAREA(80),BLANKS       INITIALIZE OUTPUT AREA
         MVC   OUTAREA+2(8),DIRNAME     MOVE NAME TO OUTPUT AREA
         TM    DIRC,X'80'               IF THIS IS AN ALIAS ENTRY
         BNO   *+10                       THEN
         MVC   OUTAREA+10(8),ALIAS          ADD ' (ALIAS)' TO OUTPUT
         BAL   RBAL,STATS               CONVERT STATS TO PANVALET COM
NAPUT    PUT   WRKDCB,OUTAREA           WRITE THE CARD IMAGE
         NI    DIRC,B'00011111'         TURN OFF NON-LENGTH BITS
         XR    R4,R4                    R4 CLEAR FOR INSERT
         IC    R4,DIRC                  R4 HAS NUMBER OF USER H/W'S
         SLA   R4,1                     R4 IS LENGTH OF USER DATA
         LA    R4,12(0,R4)              R4 IS LENGTH OF THIS ENTRY
         LA    R3,0(R4,R3)              R3 POINTS TO NEXT ENTRY
         SR    R2,R4                    R2 IS BYTES REMAINING THIS BLK
         B     NALOOP2                  BRANCH BACK UP
*
         B     NAEND
*
NARET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     NAEND                    BRANCH TO ENDING
*
NAEND    LH    R2,NABLOCK               R2 HAS GETMAIN SIZE
         FREEMAIN  R,LV=(R2),A=(R9)
         L     RBAL,NARBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
**********************************************************************
***                                                                ***
***  CONVERT STATS TO ISPF STATISTICS                              ***
***                                                                ***
**********************************************************************
STATS    ST    RBAL,STRBALSV            SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
STCHECK  CLI   DIRC,X'0F'               IF ALIAS OR NOT ISPF LENGTH
         BNE   STRET04
*
ST50CALL LA    R15,OUTAREA+19           PARM ADDRESS
         ST    R15,A50PARM+00             INTO PARM LIST
         LA    R15,DIRENTRY             PARM ADDRESS
         ST    R15,A50PARM+04             INTO PARM LIST
         OI    A50PARM+04,X'80'         MARK END OF LIST
         LA    R1,A50PARM               R1 POINTS TO PARM LIST
         L     R15,=V(GTEUA50)          R15 POINTS TO PROGRAM
         BALR  R14,R15                  CALL THE SUBROUTINE
         ST    R15,RETCDE               SAVE THE RETURN CODE
*
         B     STEND
*
STRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     STEND                    BRANCH TO ENDING
*
STEND    L     RBAL,STRBALSV            RESTORE RETURN ADDRESS
         BR    RBAL                     RETURN
*
         EJECT
***********************************************************************
***                                                                 ***
***      FIXED DATA AREA                                            ***
***                                                                 ***
***********************************************************************
F0       DC    F'0'                     CONSTANT
F2       DC    F'2'                     CONSTANT
BLANKS   DC    CL80' '                  LITERAL
X00S     DC    XL40'00'                 LITERAL
XFFS     DC    XL8'FFFFFFFFFFFFFFFF'    VALUE OF LAST DIR ENTRY
ALIAS    DC    CL8' (ALIAS)'            LITERAL
*
OPENLD   OPEN  (,,,),MF=L               PARM LIST FOR OPEN
CLOSD    CLOSE (,,),MF=L                PARM LIST FOR CLOSE
         READ  DIRDECBD,SF,MF=L
*
DIRDCBD  DCB   DSORG=PS,DDNAME=PDS,RECFM=U,MACRF=(R),EODAD=NAEND
WRKDCBD  DCB   DSORG=PS,DDNAME=WRK001,RECFM=F,LRECL=80,BLKSIZE=80,     X
               MACRF=PM
*
         LTORG
*
         EJECT
***********************************************************************
***                                                                 ***
***      DSECT FOR MY SAVE AREA AND VARIABLES.                      ***
***                                                                 ***
***********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY REGISTER SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
RETCDE   DS    F                        INTERNAL RETURN CODE
R1SAVE   DS    F                        INITIAL VALUE IN R1
*
OPRBALSV DS    F                        RETURN ADDRESS SAVE AREA
CLRBALSV DS    F                        RETURN ADDRESS SAVE AREA
NARBALSV DS    F                        RETURN ADDRESS SAVE AREA
STRBALSV DS    F                        RETURN ADDRESS SAVE AREA
*
A50PARM  DS    2A                       PARM LIST FOR GTEUA50
*
SWITCH0  DS    B'00000000'              SWITCH AREA
*                1.......               X'80' - (NOT USED)
*                .1111111               (NOT USED)
*
         PRINT GEN
OPENL    OPEN  (,,,),MF=L               PARM LIST FOR OPEN
OPENLLN  EQU   *-OPENL
CLOSL    CLOSE (,,),MF=L                PARM LIST FOR CLOSE
CLOSLLN  EQU   *-CLOSL
         READ  DIRDECB,SF,MF=L
DIRDECBL EQU   *-DIRDECB
         PRINT NOGEN
*
DIRDCB   DCB   DSORG=PS,DDNAME=PDS,RECFM=U,MACRF=(R),EODAD=NAEND
DIRDCBLN EQU   *-DIRDCB
WRKDCB   DCB   DSORG=PS,DDNAME=WRK001,RECFM=F,LRECL=80,BLKSIZE=80,     X
               MACRF=PM
WRKDCBLN EQU   *-WRKDCB
*
NABLOCK  DS    H                        MAX INPUT BLOCK SIZE
OUTAREA  DS    CL80                     OUTPUT CARD IMAGE
*
         DS    0D
WORKDLEN EQU   *-WORKD
*
         EJECT
***********************************************************************
***                                                                 ***
***      MAPPING DSECTS                                             ***
***                                                                 ***
***********************************************************************
*
DIRAREA  DSECT                          DIRECTORY BLOCK MAP
DIRLEN   DS    H                        LENGTH OF DATA IN BLOCK
DIRENT   DS    XL74                     DIRECTORY ENTRY
*
DIRENTRY DSECT                          DIRECTORY ENTRY MAP
DIRNAME  DS    CL8                      PROGRAM NAME
DIRTTR   DS    XL3                      TRACK AND RELATIVE BLOCK
DIRC     DS    BL1                      VALUE 'C'   ........
*                                         ALIAS:    1.......
*                                         UNUSED:   .11.....
*                                         USR HW'S: ...11111
DIRUDTA  DS    XL62                     VARIABLE/OPTIONAL USER DATA
*
         IHADCB DEVD=DA,DSORG=PS        MAP THE DCB
         EJECT
***********************************************************************
***                                                                 ***
***      REGISTER EQUATES                                           ***
***                                                                 ***
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         END
