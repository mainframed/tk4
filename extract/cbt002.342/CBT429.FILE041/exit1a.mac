         TITLE 'EXIT1A: JES2 USER EXIT1 FOR XEROX FORMS CONTROL'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×                         E X I T 1 A                             × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *
*                      MVS/SP 1.3.5 (NON-XA)                          *
*                                                                     *
***********************************************************************
         SPACE
EXIT1A   $ENTRY  CSECT=YES   * CREATE ALSO 'USING EXIT1A,R8'
         SPACE
         USING DCT,R1        * MAKE DCT ADDRESSABLE VIA R1
         USING JCT,R10       * MAKE JCT ADDRESSABLE VIA R10
         USING BFPDSECT,PBUF * MAKE BUFFER FORMAT ADDRESSABLE VIA R3
         USING JOE,PL        * MAKE JOE FORMAT ADDRESSABLE VIA R7
         SPACE 3
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×                 M O D U L E   S Y N O P S I S                   × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*   NAME:             EXIT1A                                          *
*                                                                     *
*   CURRENT AUTHOR:   MIKE SHEEDY, SENIOR SYSTEMS SPECIALIST          *
*                     BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSN.   *
*                     PORTLAND, OREGON                                *
*                                                                     *
*   PHONE:            503-275-1229                                    *
*                                                                     *
*   SHARE INSTALLATION CODE:  BFS                                     *
*                                                                     *
*   MAILING ADDRESS:  BENJ. FRANKLIN FINANCIAL CENTER                 *
*                     P.O. BOX 6400                                   *
*                     PORTLAND, OREGON  97228-6400                    *
*                                                                     *
*   SHIPPING ADDRESS: BENJ. FRANKLIN FINANCIAL CENTER                 *
*                     501 S.E. HAWTHORNE BLVD.                        *
*                     PORTLAND, OREGON  97214                         *
*                                                                     *
*   ORIGINAL AUTHOR:  NARM TCHUN, LEAD SYSTEMS PROGRAMMER             *
*                     GATX NETWORK SERVICES, GATX CORPORATION         *
*                     120 SOUTH RIVERSIDE PLAZA                       *
*                     CHICAGO, ILLINOIS  60606                        *
*              NOTE:  NARM TCHUN NO LONGER WORKS THERE.               *
*                                                                     *
*   NOTE BF DISCLAIMERS AT END OF THESE COMMENTS.                     *
*                                                                     *
*   DATE:             NOVEMBER 9, 1988                                *
*                                                                     *
*   SOURCE:           TSMAS.JES2.EXITSRC(EXIT1A)                      *
*                                                                     *
*   DESTINATION:      ASSEMBLY WITH TSMAS.JES2.EXITSRC(EXIT1MIT)      *
*                                                                     *
*   DESCRIPTIVE NAME: XEROX 8700/9700 SUPPORT JES2 USER EXIT          *
*                                                                     *
*   RELATIONAL NAME:  USER EXIT1 UNDER MVS/SP JES2 1.3.6              *
*                                                                     *
*   FUNCTION:         THIS EXIT PERFORMS THE FOLLOWING FUNCTIONS:     *
*                                                                     *
*       .  TELLS XEROX PRINTER AS REGARDS WHAT FORM AND WHAT          *
*          PDE'S ARE REQUIRED FOR THIS OUTPUT VIA DJDE FORMS          *
*          IMAGE TABLE ENTRY (DFITE).                                 *
*                                                                     *
*       .  SETS THE MODE OF PRINTER OPERATION (DUPLEX OR SIMPLEX)     *
*          AND TELLS OPERATOR WHEN TO SWITCH PAPER AROUND (PSMTE).    *
*                                                                     *
*       .  PAPER TRAY MESSAGE TABLE ENTRY (PTMTE) USED TO TELL        *
*          OPERATOR WHAT TYPE OF STOCK PAPER TO LOAD INTO XEROX       *
*          PRINTER.                                                   *
*                                                                     *
*       .  DISPLAYS JOBNAME ASSOCIATED WITH THIS OUTPUT AT THE        *
*          XEROX PRINTER CONTROL CONSOLE VIA PAGE SETUP MESSAGE       *
*          TABLE ENTRY (PSMTE).                                       *
*                                                                     *
*       .  SPECIFIES ADDITIONAL CONTROL VIA DJDE VFU IMAGE            *
*          TABLE ENTRY (DVITE).                                       *
*                                                                     *
*       .  PASSES PRINTER AND FORMS SETUP INFORMATION ON TO OTHER     *
*          JES2 USER EXITS, AND TO ITSELF FOR ITS NEXT INVOCATION     *
*          (PRNTRTAB).                                                *
*                                                                     *
*   ENVIRONMENTS:                                                     *
*                                                                     *
*       EXTENSION OF JES2 MAIN TASK SERVING HASPPRPU.                 *
*                                                                     *
*                                                                     *
*   NOTES:                                                            *
*                                                                     *
*       .  DEPENDENCIES:                                              *
*                                                                     *
*          THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.        *
*                                                                     *
*          REQUIRES EXIT1MIT, EXIT1REG, EXIT1A, AND EXIT1TAB BE       *
*          ASSEMBLED TOGETHER.  EXIT1B, EXIT5, EXIT15, AND            *
*          EXIT250 ARE RECOMMENDED BE ASSEMBLED WITH IT ALSO.         *
*                                                                     *
*          IF THIS EXIT IS DISABLED, JES2 CONTINUES WITH THE          *
*          STANDARD HASPPRPU.                                         *
*                                                                     *
*       .  RESTRICTIONS:                                              *
*                                                                     *
*          -  THIS EXIT SHOULD CONFORM TO JES2 RE-ENTRANCY            *
*             REQUIREMENTS (I.E., NOT THE OS/VS RE-ENTRANCY           *
*             REQUIREMENTS).                                          *
*                                                                     *
*          -  NO OS/VS IO/EXCP ALLOWED IN THIS EXIT.  THE I/O         *
*             ACTIVITIES SHOULD BE LIMITED ONLY TO HAM/RTAM, AND      *
*             NO OTHER ACCESS METHOD.                                 *
*                                                                     *
*          -  NO OS/VS MACRO ALLOWED IN THIS EXIT. THE MACROS         *
*             SHOULD BE LIMITTED ONLY TO THOSE STARTING WITH $        *
*             SIGN, E.G., STANDARD JES2 MACROS.                       *
*                                                                     *
*                                                                     *
*   LATENT USING STATEMENTS:                                          *
*                                                                     *
*       USING EXIT1A,R8      * EXIT BASE REGISTER                     *
*       USING HCT,BASE1      * BASE1 EQU R11                          *
*       USING PCE,SAVE       * SAVE  EQU R13                          *
*                                                                     *
*   AT ENTRY, THE CONTENTS OF VARIOUS REGISTERS ARE AS FOLLOWS:       *
*                                                                     *
*       R15,  ENTRY ADDRESS  (EPLOC(EXIT1A))                          *
*       R14,  RETURN ADDRESS (EXIT EFFECTOR)                          *
*       R13,  ADDRESS        ( PRINTER-PCE )                          *
*       R12,  NOT APPLICABLE                                          *
*       R11,  ADDRESS (HCT), SYMBOLIC REGISTER 'BASE1'                *
*       R10,  ADDRESS (JCT), SYMBOLIC REGISTER 'JCT'                  *
*     (R2-R9),NOT APPLICABLE                                          *
*       R1,   ADDRESS (DCT), FOR PRINTER OR PUNCH                     *
*       R0,   CONTAINS ONE OF THE FOLLOWING VALUES:                   *
*                                                                     *
*             = 00,  FOR START-OF-JOB        SEPARATOR                *
*             = 04,  FOR CONTINUATION-OF-JOB SEPARATOR                *
*             = 08,  FOR END-OF-JOB          SEPARATOR                *
*                                                                     *
*   AT EXIT, ALL REGISTERS EXCEPT FOR R15 SHOULD BE RESTORED.         *
*             R15 SHOULD CONTAIN ONE OF THE FOLLOWING VALUES:         *
*                                                                     *
*       = 00, TELL JES2 TO PRODUCE THE STANDARD SEPARATOR ONLY        *
*       = 04, TELL JES2 TO SUPPRESS OTHER EXITS FOR THIS JOB          *
*       = 08, TELL JES2 TO PRODUCE THE USER SEPARATOR ONLY            *
*       = 12, TELL JES2 TO PRODUCE THE USER SEPARATOR FOLLOWED BY     *
*             THE STANDARD SEPARATOR                                  *
*                                                                     *
*   MODULE INFORMATION:                                               *
*                                                                     *
*       .  CALLED BY:   JES2 MAIN TASK EXIT EFFECTOR                  *
*       .  CALLS;       SENDDJDE ROUTINE                              *
*       .  ATTRIBUTES:  JES2 RE-ENTRANT                               *
*                                                                     *
*                                                                     *
*   ENTRY POINTS:                                                     *
*                                                                     *
*                                                                     *
*       .  EXIT1MIT:                                                  *
*                                                                     *
*          -  PURPOSE:  EXIT1 MODULE INFORMATION TABLE                *
*          -  LINKAGE:  HASPINIT AT JES2 START TIME                   *
*                                                                     *
*                                                                     *
*       .  EXIT1A: (INCLUDES EXIT1ADR ROUTINE)                        *
*                                                                     *
*          -  PURPOSE:  MAIN ENTRY                                    *
*          -  CALLED BY:HASPPRPU VIA JES2 MAIN TASK EXIT EFFECTOR     *
*          -  CALLS:    SENDDJDE ROUTINE VIA BRANCH AND LINK R6       *
*          -  INPUT:    ADDRESS(XFRMTABX/FFRMTABF) DEP'G ON JOECURCL  *
*          -  OUTPUT:   RETURN CODE VIA R15 (NORMAL EXIT)             *
*          -  REGISTERS SAVED: ALL                                    *
*          -  REGISTER USAGE:                                         *
*             .  R3,    BUFFER BASE REGISTER                          *
*             .  R5,    PRINTER TABLE BASE REGISTER (PC2=WD=R5)       *
*             .  R6,    LINKS BETWEEN EXIT1A <---> SENDDJDE ROUTINE   *
*             .         LINKS BETWEEN EXIT1A <---> SENDTRLR ROUTINE   *
*             .  R7,    WORK JOE BASE REGISTER                        *
*             .  R8,    BASE REGISTER                                 *
*             .  R9,    CLASS TABLE ENTRY REGISTER                    *
*                       PRINTER TABLE ENTRY REGISTER                  *
*             .  (R14,R15), ALTERRED BY FOLLOWING MACROS:  $SAVE,     *
*                       $RETURN, $GETBUF, $FREEBUF, AND $SEPPDIR      *
*          -  REGISTERS RESTORED: ALL EXCEPT FOR R15 WHICH CONTAINS   *
*             .  0000,  JES2 WILL PRODUCE THE STANDARD SEPARATOR      *
*                       (UNDER NORMAL EXIT)                           *
*          -  ABNORMAL EXIT:  ESTAE (TO BE ADDED)                     *
*                                                                     *
*                                                                     *
*       .  SENDDJDE:                                                  *
*                                                                     *
*          -  PURPOSE:  SEND DJDE'S TO XEROX 8700/9700 IN FRONT OF    *
*                       STARTING OR CONTINUING SEPARATOR PAGE.        *
*          -  CALLED BY:EXIT1ADR VIA BRANCH AND LINK R6               *
*          -  CALLS:    E1$PRPUT ROUTINE VIA BRANCH AND LINK R12      *
*          -  INPUT:    ADDRESS(FCRTE) VIA R9                         *
*          -  OUTPUT:   80 BYTE CARD IMAGE DJDE'S TO XEROX 8700/9700  *
*                       FROM DFITE, PSMTE, PTMTE, AND DVITE TABLES.   *
*          -  REGISTERS SAVED: R9 ---> PCEUSER1                       *
*          -  REGISTER USAGE:                                         *
*             .  R1,    ADDRESS(PCHJOE)                               *
*             .  R3,    BUFFER BASE REGISTER                          *
*             .  R4,    ADDRESS(DFITE/PTMTE/DVITE) DEPENDING ON DJDE  *
*                       TYPE (R4=PC1).                                *
*             .  R5,    ADDRESS(PRNTRTAB), DVITE COUNTER (R5=PC2)     *
*             .  R6,    LINKS BETWEEN EXIT1ADR <---> SENDDJDE RTN     *
*             .  R9,    ADDRESS(FCRTE)                                *
*             .  R12,   LINKS BETWEEN SENDDJDE <---> E1$PRPUT RTN     *
*             .  (R14,R15), ALTERRED BY E1$PRPUT ROUTINE              *
*          -  REGISTERS RESTORED: NONE                                *
*                                                                     *
*                                                                     *
*       .  SENDTRLR:                                                  *
*                                                                     *
*          -  PURPOSE:  SEND DJDE'S TO XEROX 8700/9700 IN FRONT OF    *
*                       ENDING SEPARATOR PAGE (FORMS RESET FUNCTION). *
*          -  CALLED BY:EXIT1ADR VIA BRANCH AND LINK R6               *
*          -  CALLS:    E1$PRPUT ROUTINE VIA BRANCH AND LINK R12      *
*          -  INPUT:    ADDRESS(FCRTE) VIA R9 (WILL BE DEFAULT)       *
*          -  OUTPUT:   80 BYTE CARD IMAGE DJDE'S TO XEROX 8700/9700  *
*                       FROM DFITE, PSMTE, AND DVITE TABLES.          *
*          -  REGISTERS SAVED: R9 ---> PCEUSER1                       *
*          -  REGISTER USAGE:                                         *
*             .  R3,    BUFFER BASE REGISTER                          *
*             .  R4,    ADDRESS(DFITE/DVITE) DEPENDING ON DJDE TYPE   *
*                       (R4=PC1) (DEFAULTS).                          *
*             .  R5,    ADDRESS(PRNTRTAB), DVITE COUNTER (R5=PC2)     *
*             .  R6,    LINKS BETWEEN EXIT1ADR <---> SENDTRLR RTN     *
*             .  R9,    ADDRESS(FCRTE) (DEFAULT ENTRY)                *
*             .  R12,   LINKS BETWEEN SENDTRLR <---> E1$PRPUT RTN     *
*             .  (R14,R15), ALTERRED BY E1$PRPUT ROUTINE              *
*          -  REGISTERS RESTORED: NONE                                *
*                                                                     *
*                                                                     *
*       .  E1$PRPUT:                                                  *
*                                                                     *
*          -  PURPOSE:  SEND AN 80 BYTE DJDE CARD IMAGE TO XEROX      *
*          -  CALLED BY:SENDDJDE/SENDTRLR VIA BRANCH AND LINK R12     *
*          -  CALLS:    PRPUT ROUTINE(IN HASPPPI1) VIA $PRPUT MACRO   *
*          -  INPUT:    ADDRESS(BUFFER) FILLED WITH DFITE/DVITE       *
*          -  OUTPUT:   80 BYTE CARD IMAGE DFITE/DVITE TO 8700/9700   *
*          -  REGISTERS SAVED: NONE                                   *
*          -  REGISTER USAGE:                                         *
*             .  R0,    LENGTH OF DJDE CARD IMAGE TO BE SENT          *
*             .  R1,    ADDRESS(BUFFER) PASSED TO PRPUT ROUTINE       *
*             .  R3,    BUFFER BASE REGISTER                          *
*             .  R12,   LINKS BETWEEN SENDDJDE <---> E1$PRPUT RTN     *
*                       LINKS BETWEEN SENDTRLR <---> E1$PRPUT RTN     *
*             .  (R14,R15), ALTERRED BY $PRPUT MACRO                  *
*          -  REGISTERS RESTORED: NONE                                *
*                                                                     *
*                                                                     *
*   EXTERNAL REFERENCES:                                              *
*                                                                     *
*       .  ROUTINES:  VARIOUS JES2 MAIN TASK SECTIONS USING THE       *
*                     ADDRESSES RETRIEVED FROM THE FOLLOWING FIELDS:  *
*                     $GETSAVA, $RETURNB, $GETBUF, $FREEBUF,          *
*                     $PRPUSRV                                        *
*       .  DATA AREAS:  PCE, BUFFER, JCT, CAT, JQE, JOE, HCT,         *
*                       PDDB, KIT, TAB, IOT, XIT, XRT, MIT,           *
*                       SVT, QSE, PPPWORK, LRC, DCT                   *
*                                                                     *
*                                                                     *
*   TABLES:  EXIT1TAB, A SET OF XEROX FORMS TABLES WHICH HAVE         *
*            BEEN ADOPTED FROM THE GREAT AMERICAN INSURANCE           *
*            MODIFICATION.                                            *
*                                                                     *
*   JES2 MACROS USED:                                                 *
*            $PCE, $BUFFER, $JCT, $CAT, $JQE, $JOE, $HCT, $PDDB,      *
*            $KIT, $TAB, $IOT, $XIT, $XRT, $MIT, $SVT, $QSE,          *
*            $PPPWORK, $LRC, $DCT, $MODULE, $ENTRY, $SAVE, $GETBUF,   *
*            $SEPPDIR, $FREEBUF,$RETURN, $PRPUT, $DLENGTH, $MODEND    *
*                                                                     *
*                                                                     *
*   SERIALIZATION  -    ONLY WITHIN JES2 SENSE                        *
*                                                                     *
*                                                                     *
*   CONSTRAINTS    -    FOLLOWING POINTS SHOULD BE CONSIDERED:        *
*                                                                     *
*       .  SEPARATOR TRUNCATION:  THE SEPARATOR (BANNER PAGE)         *
*                 GETS TRUNCATED ON PORTRAIT FORM. TO AVOID           *
*                 THIS PROBLEM, THE USERS SHOULD PROVIDE THEIR        *
*                 OWN LOGIC (ANOTHER 500 - 600 LINES OF CODE).        *
*                 OUR SOLUTION TO THIS IS IN BF EXIT1B.               *
*                                                                     *
*       .  MULTIPLE COPY SEPARATOR:  THIS MODULE DOES NOT             *
*                 PROVIDE SEPARATOR FOR MULTIPLE COPY SYSOUT.         *
*                 OUR SOLUTION IS IN BF EXIT15.                       *
*                                                                     *
*       .  DUPLEXING:  THIS MODULE SUPPORTS DUPLEXING WHEN USED       *
*                 WITH BF EXIT15.                                     *
*                                                                     *
*       .  MODULE SIZE:  THIS MODULE USES ONLY ONE REGISTER           *
*                 TO BASE ADDRESS THE PROGRAM.  THOSE WHO USE         *
*                 A LARGE NUMBER OF FORMS MAY HAVE TO HAVE            *
*                 ANOTHER REGISTER FOR BASE ADDRESSING.               *
*                                                                     *
*       .  RECOVERY TERMINATION:  THIS MODULE DOES NOT HAVE           *
*                 ESTAE LOGIC, BUT RUNS ERROR FREE.  NEVERTHELESS     *
*                 THE RECOVERY/TERMINATION LOGIC SHOULD BE            *
*                 PROVIDED (USE $ESTAE).                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *
*  TO THE PUBLIC DOMAIN ON AN "AS IS" BASIS.  WE MAKE NO WARRANTY     *
*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *
*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *
*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *
*                                                                     *
*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *
*  YOURSELF.                                                          *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN "AS IS"        *
*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *
*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *
*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *
*                                                                     *
*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *
*  YOURSELF.                                                          *
*                                                                     *
***********************************************************************
         EJECT
         TITLE 'EXIT1ADR: JES2 EXIT1A DRIVER ROUTINE'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×             E X I T 1 A D R   A L G O R I T H M                 × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*   EXIT1ADR (DRIVER) ALGORITHM:                                      *
*                                                                     *
*   <1>.  IF A PUNCH DEVICE ?                                         *
*           TELL JES2 TO FOLLOW STANDARD PROCEDURE,                   *
*                                                                     *
*   <2>.    IF NOT A PRINTER ?                                        *
*             TELL JES2 TO FOLLOW STANDARD PROCEDURE,                 *
*                                                                     *
*   <3>.      IF PRINTER TABLE NOT ADDRESSABLE ?                      *
*               TELL JES2 TO FOLLOW STANDARD PROCEDURE,               *
*                                                                     *
*   <4>.        FIND PRINTER TABLE ENTRY.                             *
*                                                                     *
*   <5>.        IF NOT A XEROX PRINTER (SEPDS=N) ?                    *
*                 CORRECT THE PRINTER TABLE ENRTY AND                 *
*                 TELL JES2 TO FOLLOW STANDARD PROCEDURE.             *
*                                                                     *
*   <6>.          IS A XEROX PRINTER (SEPDS=Y), SO                    *
*                 CORRECT THE PRINTER TABLE ENTRY,                    *
*                 SAVE SEPARATOR CONTROL INFORMATION,                 *
*                 OBTAIN WORKING STORAGE FOR DATA BUFFERRING,         *
*                 AND RELOCATE THE BUFFER ADDRESS TO IT.              *
*                                                                     *
*   <7>.          INSURE A PERIPHERAL DATA INFORMATION RECORD         *
*                 FOR SNA.  OBTAIN THE WORK-JOE ADDRESS.              *
*                                                                     *
*   <8>.          IF END-OF-JOB PRINT SEPARATOR ?                     *
*                   SETUP TO USE DEFAULT FORMS CROSS REFERENCE        *
*                   TABLE AND BRANCH TO <10> FOR TRAILER PROCESSING.  *
*                                                                     *
*                 ENDIF                                               *
*               ENDIF                                                 *
*             ENDIF                                                   *
*           ENDIF                                                     *
*         ENDIF.                                                      *
*                                                                     *
*   <9>.  LOCATE FORMS CROSS REFERENCE TABLE BASED ON SYSOUT CLASS,   *
*           USE DEFAULT IF NONE FOUND.                                *
*         PERFORM 'SENDDJDE', AND FREE THE BUFFER OBTAINED EARLIER.   *
*                                                                     *
*  <10>.  USE DEFAULT FORMS CROSS REFERENCE TABLE.                    *
*         PERFORM 'SENDTRLR', AND FREE THE BUFFER OBTAINED EARLIER.   *
*                                                                     *
*  <11>.  FREE THE BUFFER ACQUIRED IN STEP <6>. (NOTE: THIS SECTION   *
*         IS PERFORMED BY STEP <9> AND STEP <10>.)                    *
*                                                                     *
*  <12>.  TELL JES2 TO PRODUCE STANDARD SEPARATOR.                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×          E X I T 1 A D R   D R I V E R   R O U T I N E          × *
* +-----------------------------------------------------------------+ *
***********************************************************************
EXIT1ADR DS    0H            *
         SPACE
         $SAVE               * SAVE CALLER'S REGISTERS
         SPACE
         LR    R8,R15        * MAKE R8 AS THE BASE
* <1>
         TM   PCEID,PCEPUSID * IF A PUNCH DEVICE ?
         BO    EXIT1A00      * TELL JES2 TO PRODUCE STANDARD SEPARATOR
* <2>
         CLC   DCTDEVN(3),=CL3'PRT'      ARE WE GOING TO A PRINTER ?
         BE    CHK1PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY
         CLC   DCTDEVN(7),=CL7'PRINTER'  ARE WE GOING TO A PRINTER ?
         BE    CHK1PRTE      * YES - GO LOOK FOR PRINTER TABLE ENTRY
         B     EXIT1A00      * NO  - TELL JES2 TO PRODUCE STANDARD SEP
* <3>
         USING PTBDSECT,PC2  * MAKE PRINTER TABLE ENTRY ADDRESSABLE
CHK1PRTE L     PC2,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE
         C     PC2,=F'0'     * PRINTER TABLE ADDRESSABLE?
         BE    EXIT1A00      * NO - MIGHT AS WELL RETURN TO JES2
* <4>
CHKPNEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST
         BE    CHKPTYPE      *   PRINTER TABLE ENTRY
         CLC   PTBENTRY,DCTDEVN+3 IF CORRECT PRINTER ENTRY
         BE    CHKPTYPE      *   THEN GO CHECK PRINTER TYPE
         CLC   PTBENTRY,DCTDEVN+7 IF CORRECT PRINTER ENTRY
         BE    CHKPTYPE      *   THEN GO CHECK PRINTER TYPE
         LA    PC2,12(0,PC2) * ELSE GET SET TO CHECK NEXT ENTRY
         B     CHKPNEXT      *
* <5>
CHKPTYPE TM    DCTPPSW2,DCTSDSSW IF SEPDS=Y (I.E.: TAKE EXIT 15)
         BO    MAKEXERO      * THEN THIS SHOULD BE A XEROX PRINTER
         MVC   PREVFORM,=CL4'????' RESET FORMS SETUP - JUST TO BE SURE
         CLI   PTBTYPE,C'X'  * IF TABLE INDICATES NOT A XEROX TABLE
         BNE   EXIT1A00      * THEN TELL JES2 TO PRODUCE STANDARD SEP
         MVI   PTBTYPE,C' '  * MAKE THIS NOT BE A XEROX PRINTER
         B     EXIT1A00      * TELL JES2 TO PRODUCE STANDARD SEPARATOR
* <6>
MAKEXERO MVI   PTBTYPE,C'X'  * MAKE THIS A XEROX PRINTER
         ST    R0,PCEUSER0   * SAVE SEP CNTRL INFORMATION (S/C/E)
         SPACE
         $GETBUF TYPE=HASP,  * LOCAL BUFF INTO WHICH AN IOB IS BUILT   X
               FIX=YES,      * THE BUFFER IS TO BE PAGE-FIXED          X
               WAIT=YES      * THE REQUESTOR WILL WAIT UNTIL HONORRED .
         SPACE
         LR    PBUF,R1       * MAKE R3 AS THE BUFFER BASE REGISTER
* <7>
         $SEPPDIR (R3)       * SEND A PDIR IF AN SNA
         SPACE
         L     R7,PPPWKJOE   *  R7 <--- ADDRESS (WJOE)
* <8>
         C     R0,=F'8'      * IF END-OF-JOB PRINT SEPARATOR ?
         BE    EXIT1TLR      * THEN SEND TRAILER DJDE'S
* <9>
         L     R9,=A(SCTE)   * R9 <--- ADDR (SCTE)
CLASTEST EQU                 *
         CLI   0(R9),X'FF'   * IF CLASS TABLE NOT OUT?
         BNE   CLASCHCK      * GET NEXT 'FCRTE' FROM THE TABLE
CLASFOND L     R9,4(,R9)     * ELSE PASS THE DEFAULT FORM TABLE
         BAL   R6,SENDDJDE   * SEND DJDE'S TO XEROX PRINTER
         B     EXIT1FRE      * FREE THE BUFFER AND EXIT
         SPACE
*
CLASCHCK EQU                 *
         CLC   0(1,R9),JOECURCL MATCHING 'SCTE' (CLASS) FOUND?
         BNE   CLASNEXT      * NO - GET NEXT 'SCTE'
         CLC   4(4,R9),=F'0' * FORM TABLE PRESENT?
         BNE   CLASFOND      * YES - GO LOAD ITS ADDRESS
CLASNEXT LA    R9,8(,R9)     * GET NEXT 'SCTE' AND
         B     CLASTEST      * SEE IF THE CLASS MATCHES
* <10>
EXIT1TLR EQU   *
         L     R9,=A(DEFTCLAS) R9 <--- ADDR OF DEFAULT CLASS 'SCTE'
         L     R9,4(,R9)     * R9 <--- DEFAULT FCRTE FORM TABLE
         BAL   R6,SENDTRLR   * SEND DJDE'S TO XEROX PRINTER
* <11>
EXIT1FRE EQU                 *
         $FREEBUF (R3)       * RELINQUISH THE WORKING STORAGE
* <12>
         B     EXIT1A00      * TELL JES2 TO PRODUCE STANDARD SEPARATOR
         EJECT
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×      E X I T 1 A 0 0   C O M P L E T I O N   S E C T I O N      × *
* +-----------------------------------------------------------------+ *
***********************************************************************
         SPACE
EXIT1A00 EQU                 *
         SR    R15,R15       * TELL JES2 TO PRODUCE STANDARD SEPARATOR
         B     EXIT1ARE      *
EXIT1A04 EQU                 *
         LA    R15,4         * TELL JES2 THAT NO OTHER EXITS TO GO
         B     EXIT1ARE      *
EXIT1A08 EQU                 *
         LA    R15,8         * TELL JES2 TO SUPPRESS THE SEPARATOR
         B     EXIT1ARE      *
EXIT1A12 EQU                 *
         LA    R15,12        * TELL JES2 TO UNCONDITIONALLY PRT SEP
EXIT1ARE DS    0H            *
         SPACE
         $RETURN RC=(R15)    * GET ADDR (RETURN POINT) AND EXIT
         EJECT
         TITLE 'SENDDJDE: DJDE TRANSMISSION ROUTINE'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×               S E N D D J D E    R O U T I N E                  × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*  UPON ENTRY,  CONTENTS OF GENERAL REGISTERS ARE AS FOLLOWS:         *
*                                                                     *
*    REG          ENTRY-VALUE       EXIT-VALUE                        *
*    ---        ----------------    ----------                        *
*                                                                     *
*    R9         NFRMTABN ADDRESS    UNPREDICTABLE                     *
*    R6         RETURN   ADDRESS    UNCHANGED                         *
*    R13        PCE      ADDRESS    UNCHANGED                         *
*                                                                     *
*                                                                     *
*  AT EXIT, R12 MAY BE CHANGED SINCE IT IS USED AS A LINK REGISTER    *
*  BETWEEN THE 'SENDDJDE' AND 'E1$PRPUT' ROUTINES.                    *
*                                                                     *
*                                                                     *
*  SENDDJDE (START/CONTINUE BANNER) ALGORITHM:                        *
*                                                                     *
*   <1>.  SAVE THE FORMS CROSS REFERENCE TABLE (FCRT) ADDRESS.        *
*         RESET STOCK AND MODE SWITCHES IF THE PREVIOUS FORM USED ON  *
*         THIS PRINTER IS UNKNOWN (FORCES OPERATOR SETUP).            *
*                                                                     *
*   <2>.  RETRIEVE THE ADDRESS OF THE 'CJOE'.                         *
*                                                                     *
*   <3>.  DOWHILE FORMS CROSS REFERENCE TABLE ENTRY(FCRTE) NOT END ?  *
*           IF NO MORE 'FCRTE' ?                                      *
*             RETRIEVE 'FCRT' ADDRESS, PASS THE DEFAULT 'STD.'        *
*           ELSE                                                      *
*                                                                     *
*   <4>.      IF CURRENT 'FCRTE' NOT MATCH WITH SYSTEM DATASET FORM?  *
*               GET NEXT 'FCRTE'                                      *
*             ENDIF                                                   *
*           ENDIF                                                     *
*         ENDDO.                                                      *
*                                                                     *
*   <5>.  MOVE DJDE FORMS IMAGE TABLE ENTRY (DFITE) TO JES2 BUFFER.   *
*         SEND THAT 'DFITE' TO XEROX CONSOLE VIA 'E1$PRPUT' ROUTINE.  *
*                                                                     *
*   <6>.  BUILD JOBMSG WITH JOBNAME AND ITS SYSOUT FORM TO BUFFER.    *
*         SEND THAT MESSAGE TO XEROX CONSOLE VIA 'E1$PRPUT' ROUTINE.  *
*                                                                     *
*   <7>.  INITIALIZE HOLD SWITCH.                                     *
*         IF FORM IS DUPLEX,                                          *
*           PERFORM <8> SENDDPLX,                                     *
*         ELSE                                                        *
*           PERFORM <9> SENDSPLX.                                     *
*                                                                     *
*   <8>.  SENDDPLX: SEND DJDE TO SWITCH TO DUPLEX MODE VIA 'E1$PRPUT' *
*         SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.          *
*         IF PREVIOUS OUTPUT TO THIS PRINTER WAS DUPLEX, GO TO <10>.  *
*         IF SUPPRESSING FORMS CONTROL, GO TO <12>.                   *
*         IF THE NEW STOCK IS BLANK NOHOLE, ORIENTATION DOESN'T       *
*           MATTER, SO GO TO <10>.                                    *
*         INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.                *
*         IF THE NEW STOCK IS DIFFERENT FROM THE OLD STOCK GO TO <10> *
*           AS MODE WILL BE INDICATED ON STOCK LOAD MESSAGE.          *
*         SEND DJDE MESSAGE TO OPERATOR TO SWITCH PAPER FOR DUPLEX.   *
*         GO TO <10>.                                                 *
*                                                                     *
*   <9>.  SENDSPLX: SEND DJDE TO SWITCH TO SIMPLEX MODE VIA 'E1$PRPUT *
*         SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.          *
*         IF PREVIOUS OUTPUT TO THIS PRINTER WAS SIMPLEX, GO TO <10>. *
*         IF SUPPRESSING FORMS CONTROL, GO TO <12>.                   *
*         IF THE NEW STOCK IS BLANK NOHOLE, ORIENTATION DOESN'T       *
*           MATTER, SO GO TO <10>.                                    *
*         INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.                *
*         IF THE NEW STOCK IS DIFFERENT FROM THE OLD STOCK GO TO <10> *
*           AS MODE WILL BE INDICATED ON STOCK LOAD MESSAGE.          *
*         SEND DJDE MESSAGE TO OPERATOR TO SWITCH PAPER FOR SIMPLEX.  *
*         GO TO <10>.                                                 *
*                                                                     *
*  <10>.  IF THE NEW STOCK IS SAME AS THE OLD STOCK, GO TO <11>.      *
*         IF SUPPRESSING FORMS CONTROL, GO TO <12>.                   *
*         INDICATE SETUP MESSAGE TO OPERATOR REQUIRED.                *
*         MOVE DJDE PAPER TRAY MESSAGE TABLE ENTRY (PTMTE) TO JES2    *
*           BUFFER.  MODIFY WITH MODE (DUPLEX OR SIMPLEX).            *
*         SEND THAT 'PTMTE' TO XEROX PRINTER VIA 'E1$PRPUT' ROUTINE.  *
*         GO TO <11>.                                                 *
*                                                                     *
*  <11>.  IF OPERATOR SETUP MESSAGES HAVE BEEN SENT, SEND DJDE TO     *
*           HOLD THE PRINTER UNTIL OPERATOR PERFORMS ACTION AND       *
*           RESPONDS 'CONTINUE 0'.                                    *
*         RESET PREVIOUS STOCK, MODE, SYSOUT CLASS, AND FORM ID FIELD *
*           FOR THIS PRINTER WITH CURRENT VALUES (FOR NEXT REPORT).   *
*         GO TO <13>.                                                 *
*                                                                     *
*  <12>.  RESET PREVIOUS STOCK, MODE, AND SYSOUT CLASS ID FIELDS FOR  *
*           THIS PRINTER WITH CURRENT VALUES.  RESET PREVIOUS FORM ID *
*           FOR THIS PRINTER TO UNKNOWN TO FORCE OPERATOR SETUP ON    *
*           NEXT REPORT.                                              *
*         GO TO <13>.                                                 *
*                                                                     *
*  <13>.  POINT R4 TO HEAD OF DJDE VFU IMAGE TABLE (DVIT).            *
*         LOAD  R5 WITH ITS ENTRY COUNT.                              *
*                                                                     *
*  <14>.  DOWHILE DJDE VFU IMAGE TABLE ENTRY (DVITE) NOT END ?        *
*           SEND NEXT 'DVITE' TO XEROX PRINTER                        *
*         ENDDO.                                                      *
*         GO TO <15>.                                                 *
*                                                                     *
*  <15>.  RETURN TO THE CALLER                                        *
*                                                                     *
***********************************************************************
         SPACE
* <1>
SENDDJDE DS    0D            *
         ST    R9,PCEUSER1   * SAVE THE 'FCRT' TEMPORARILY
         SPACE
PREVTEST EQU                 *
         CLC   PREVFORM,=CL4'????' IF PREVIOUS FORM IS KNOWN
         BNE   SENDDJD2      * THEN GO ANALYZE NEW FORM
         MVI   PREVSTOC,X'FF'  RESET PREVSTOC TO FORCE STOCK MESSAGE
         MVI   PREVMODE,X'00'  RESET PREVMODE TO UNKNOWN
         SPACE
* <2>
SENDDJD2 EQU                 *
         MVC   PREVFORM,=CL4'????' SET PREVFORM TO UNKNOWN TEMPORARILY
         L     R9,PCEUSER1   * RESTORE THE 'FCRT'
         L     R1,PPPCHJOE   * GET THE ADDRESS OF CJOE
         SPACE
* <3>
SENDTEST EQU                 *
         CLC   =4X'FF',0(R9) * IF FORMS CROSS REFERENCE TABLE NOT OUT?
         BNE   SENDCHCK      * GET NEXT 'FCRTE' FROM THE TABLE
         L     R9,PCEUSER1   * ELSE PASS THE FORM 'STD.' BY DEFAULT
         B     SENDDFIT      * VERIFY THE BACKSIDE
         SPACE
* <4>
SENDCHCK EQU                 *
         CLC   0(4,R9),JOEFORM-JOE(R1) IF MATCHING 'FCRTE' FOUND?
         BE    SENDDFIT      * SEND 'DJDE' TO XEROX PRINTER
         LA    R9,16(,R9)    * ELSE, GET NEXT 'FCRTE'
         B     SENDTEST      * SEE IF THE FORM MATCH
         SPACE 2
* <5>
SENDDFIT EQU                 *
         L     PC1,4(,R9)    * R4 <--- A(DFITE)
         LA    PC1,0(,PC1)   * ERASE THE CONTROL BYTE
         MVC   BUFSTART(80),0(PC1) MOVE THE 'DFITE' TO THE BUFFER
         BAL   R12,E1$PRPUT  * SEND DJDE FORMS IMAGE TABLE ENTRY(DFITE)
         SPACE
* <6>
         MVC   BUFSTART(80),JOBMSG MOVE MASTER JOBMSG TEXT TO JES2 BUFF
         MVC   BUFSTART+19(1),JCTJOBID   MOVE IN JOB TYPE
         MVC   BUFSTART+20(4),JCTJOBID+4 MOVE IN JOB NUMBER
         MVC   BUFSTART+25(8),JCTJNAME   MOVE IN JOB NAME
         MVC   BUFSTART+34(1),JOECURCL   MOVE IN OUTPUT CLASS
         MVC   BUFSTART+36(4),0(R9)      MOVE IN FORM ID
         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?
         BZ    DUPSIMTS      * NO - DETERMINE DUPLEX/SIMPLEX
         MVC   BUFSTART+42(2),=CL2'?-' YES - DON'T KNOW TYPE
DUPSIMTS MVC   BUFSTART+42(2),=CL2'DU' ASSUME DUPLEX
         TM    8(R9),MFDUPLEX  IS THIS A DUPLEX FORM?
         BO    ISJOBLOG      * YES - GO ISSUE JOBLOG MESSAGE
         MVC   BUFSTART+41(3),=CL3'SIM' MOVE IN SIMPLEX
ISJOBLOG BAL   R12,E1$PRPUT  * ISSUE JOBLOG MESSAGE TO XEROX CONSOLE
         SPACE
* <7>
         MVI   HOLDSW,C'N'   * INITIALIZE HOLD MESSAGE SWITCH TO NO
         TM    8(R9),MFDUPLEX  IS THIS A DUPLEX FORM?
         BZ    SENDSPLX      * NO - SETUP FOR SIMPLEX
         SPACE
* <8>
SENDDPLX MVC   BUFSTART(80),DPLXDJDE MOVE DUPLEX DJDE TO JES2 BUFF
         BAL   R12,E1$PRPUT  * SEND DJDE TO SWITCH TO DUPLEX MODE
         MVC   BUFSTART(80),NUFRDJDE MOVE NUFRONT DJDE TO JES2 BUFF
         BAL   R12,E1$PRPUT  * SEND DJDE TO SKIP TO NEW CUT SHEET
         SPACE
         TM    PREVMODE,MFDUPLEX WAS THE PREVIOUS OUTPUT IN DUPLEX?
         BO    STOCKCHK      * YES - GO CHECK FOR STOCK CHANGE
         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?
         BO    RESETSUP      * YES - GO FORCE SETUP MESSAGE ON NEXT JOB
         SPACE
         CLI   12(R9),X'02'  * IS THE NEW STOCK BLANK NO-HOLE?
         BE    STOCKCHK      * YES - MODE CHANGE DOESN'T MATTER
         MVI   HOLDSW,C'Y'   * INDICATE HOLD MESSAGE REQUIRED
         CLC   PREVSTOC,12(R9) IS THE NEW STOCK SAME AS THE OLD STOCK?
         BNE   STOCKCHK      * NO - MODE WILL BE INDICATED ON LOAD MSG
         SPACE
         MVC   BUFSTART(80),MODECHG MOVE MODECHG TEXT TO JES2 BUFF
         MVC   BUFSTART+38(3),=CL3' DU' INDICATE DUPLEX MODE
         BAL   R12,E1$PRPUT  * ISSUE MODECHG MESSAGE TO XEROX CONSOLE
         B     STOCKCHK      * GO CHECK FOR STOCK CHANGE
         SPACE
* <9>
SENDSPLX MVC   BUFSTART(80),SPLXDJDE MOVE SIMPLEX SWITCH DJDE TO BUFF
         BAL   R12,E1$PRPUT  * SEND DJDE TO SWITCH TO SIMPLEX MODE
         MVC   BUFSTART(80),NUFRDJDE MOVE NUFRONT DJDE TO JES2 BUFF
         BAL   R12,E1$PRPUT  * SEND DJDE TO SKIP TO NEW CUT SHEET
         SPACE
         TM    PREVMODE,MFDUPLEX WAS THE PREVIOUS OUTPUT IN SIMPLEX?
         BZ    STOCKCHK      * YES - GO CHECK FOR STOCK CHANGE
         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?
         BO    RESETSUP      * YES - GO FORCE SETUP MESSAGE ON NEXT JOB
         SPACE
         CLI   12(R9),X'02'  * IS THE NEW STOCK BLANK NO-HOLE?
         BE    STOCKCHK      * YES - MODE CHANGE DOESN'T MATTER
         MVI   HOLDSW,C'Y'   * INDICATE HOLD MESSAGE REQUIRED
         CLC   PREVSTOC,12(R9) IS THE NEW STOCK SAME AS THE OLD STOCK?
         BNE   STOCKCHK      * NO - MODE WILL BE INDICATED ON LOAD MSG
         SPACE
         MVC   BUFSTART(80),MODECHG MOVE MODECHG TEXT TO JES2 BUFF
         MVC   BUFSTART+38(3),=CL3'SIM' INDICATE SIMPLEX MODE
         BAL   R12,E1$PRPUT  * ISSUE MODECHG MESSAGE TO XEROX CONSOLE
         B     STOCKCHK      * GO CHECK FOR STOCK CHANGE
         SPACE
* <10>
STOCKCHK CLC   PREVSTOC,12(R9) IS THE NEW STOCK SAME AS THE OLD STOCK?
         BE    HOLDCHK       * YES - GO CHECK FOR HOLDS
         TM    8(R9),MFSUPFCT  ARE WE SUPPRESSING FORMS CONTROL?
         BO    RESETSUP      * YES - GO FORCE SETUP MESSAGE ON NEXT JOB
         SPACE
         MVI   HOLDSW,C'Y'   * INDICATE HOLD MESSAGE REQUIRED
         SPACE
         SLR   PC1,PC1       * ZERO R4
         IC    PC1,12(,R9)   * R4 <--- STOCK INDEX
         MH    PC1,=H'80'    * R4 <--- R4 * 80
         LA    PC1,STKINDX(PC1) R4 <-- ADDRESS OF STOCK MESSAGE
         MVC   BUFSTART(80),0(PC1) MOVE THE STOCK MESSAGE TO THE BUFFER
         TM    8(R9),MFDUPLEX  IS THIS A DUPLEX FORM?
         BZ    SPLSTOCK      * NO - STOCK WILL BE SIMPLEX
         MVC   BUFSTART+41(3),=CL3' DU' INDICATE DUPLEX MODE
         B     CHKUNKNW      * YES - GO CHECK IF STOCK IS KNOWN
SPLSTOCK MVC   BUFSTART+41(3),=CL3'SIM' INDICATE SIMPLEX MODE
CHKUNKNW CLI   12(R9),X'00'  * IS THE STOCK TYPE KNOWN?
         BNE   SENDSTOC      * YES - GO SEND THE STOCK MESSAGE
         MVC   BUFSTART+23(4),0(R9) NO - USE THE FORMS ID
SENDSTOC BAL   R12,E1$PRPUT  * ISSUE STOCK MESSAGE TO XEROX CONSOLE
         SPACE
* <11>
HOLDCHK  CLI   HOLDSW,C'N'   * IS A HOLD MESSAGE REQUIRED?
         BE    RESETPRV      * NO - GO RESET THE PREVFORM FIELDS
         SPACE
SENDHOLD MVC   BUFSTART(80),HOLDMSG MOVE HOLDMSG TEXT TO JES2 BUFF
         BAL   R12,E1$PRPUT  * ISSUE CHANGE MESSAGE TO XEROX CONSOLE
         SPACE
RESETPRV MVC   PREVSTOC,12(R9) RESET PREVSTOC TO CURRENT STOCK
         MVC   PREVMODE,8(R9)  RESET PREVMODE TO CURRENT MODE
         MVC   PREVCLAS,JOECURCL RESET PREVCLAS TO CURRENT SYSOUT CLASS
         MVC   PREVFORM,0(R9)  RESET PREVFORM TO CURRENT FORM
         B     SENDDVIT      *  GO SEND THE DVITE
         SPACE
* <12>
RESETSUP MVC   PREVFORM,=CL4'????' RESET PREVFORM TO FORCE FORMS MSG
         MVC   PREVCLAS,JOECURCL RESET PREVCLAS TO CURRENT SYSOUT CLASS
         MVC   PREVMODE,8(R9)  RESET PREVMODE TO CURRENT MODE
         MVC   PREVSTOC,12(R9) RESET PREVSTOC TO CURRENT STOCK
         B     SENDDVIT      *  GO SEND THE DVITE
         SPACE
* <13>
SENDDVIT EQU                 *
         L     PC1,12(,R9)   *  R4 <--- ADDRESS (DVITE  )
         LA    PC1,0(,PC1)   *  ERASE THE CONTROL BYTE
         LH    PC2,0(,PC1)   *  R5 <--- COUNT   (DVITE'S)
         LA    PC1,2(,PC1)   * POSITION R4 TO HEAD OF 'DVITE' GROUP
         SPACE
* <14>
SENDFINI EQU                 *
         MVC   BUFSTART(80),0(PC1) MOVE THE 'DVITE' TO THE BUFFER
         BAL   R12,E1$PRPUT  * SEND DJDE VFU IMAGE TABLE ENTRY(DVITE)
         LA    PC1,80(,PC1)  * GET NEXT      'DVITE'
         BCT   PC2,SENDFINI  * CHAIN IN  NEXT 'DVITE'
         SPACE
* <15>
SENDDJDX EQU                 * SENDDJDE EXIT
         DROP  PC2           *
         BR    R6            * RETURN TO THE CALLER
         EJECT
         TITLE 'SENDTRLR: DJDE TRANSMISSION ROUTINE'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×               S E N D T R L R    R O U T I N E                  × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*  UPON ENTRY,  CONTENTS OF GENERAL REGISTERS ARE AS FOLLOWS:         *
*                                                                     *
*    REG          ENTRY-VALUE       EXIT-VALUE                        *
*    ---        ----------------    ----------                        *
*                                                                     *
*    R9         XFRMTABX ADDRESS    DEFAULT FCRTE                     *
*    R6         RETURN   ADDRESS    UNCHANGED                         *
*    R13        PCE      ADDRESS    UNCHANGED                         *
*                                                                     *
*                                                                     *
*  AT EXIT, R12 MAY BE CHANGED SINCE IT IS USED AS A LINK REGISTER    *
*  BETWEEN THE 'SENDTRLR' AND 'E1$PRPUT' ROUTINES.                    *
*                                                                     *
*                                                                     *
*  SENDTRLR (END BANNER) ALGORITHM:                                   *
*                                                                     *
*   <1>.  SAVE THE FORMS CROSS REFERENCE TABLE (FCRT) ADDRESS.        *
*         MOVE DJDE FORMS IMAGE TABLE ENTRY (DFITE) TO JES2 BUFFER    *
*           (NOTE THAT THIS IS FROM THE DEFAULT ENTRY).               *
*         SEND THAT 'DFITE' TO XEROX PRINTER VIA 'E1$PRPUT' ROUTINE.  *
*                                                                     *
*   <2>.  IF FORM IS DUPLEX,                                          *
*           SEND DJDE TO SWITCH TO DUPLEX MODE VIA 'E1$PRPUT',        *
*         ELSE                                                        *
*           SEND DJDE TO SWITCH TO SIMPLEX MODE VIA 'E1$PRPUT'.       *
*         SEND DJDE TO SKIP TO NEW CUT SHEET VIA 'E1$PRPUT'.          *
*                                                                     *
*   <3>.  POINT R4 TO HEAD OF DJDE VFU IMAGE TABLE (DVIT)             *
*           (NOTE THAT THIS IS FROM THE DEFAULT ENTRY).               *
*         LOAD  R5 WITH ITS ENTRY COUNT.                              *
*                                                                     *
*   <4>.  DOWHILE DJDE VFU IMAGE TABLE ENTRY (DVITE) NOT END ?        *
*           SEND NEXT 'DVITE' TO XEROX PRINTER                        *
*         ENDDO.                                                      *
*                                                                     *
*   <5>.  MOVE PAGE EJECT COMMAND TO JES2 BUFFER.                     *
*         SEND PAGE EJECT TO XEROX PRINTER.                           *
*         GO TO <6>.                                                  *
*                                                                     *
*   <6>.  RETURN TO THE CALLER                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
*  <1>
SENDTRLR EQU                 *
         USING PTBDSECT,PC2  * MAKE PRINTER TABLE ENTRY ADDRESSABLE
         ST    R9,PCEUSER1   * SAVE THE 'FCRT'
         SPACE
         L     PC1,4(,R9)    * R4 <--- A(DFITE)
         LA    PC1,0(,PC1)   * ERASE THE CONTROL BYTE
         MVC   BUFSTART(80),0(PC1) MOVE THE 'DFITE' TO THE BUFFER
         BAL   R12,E1$PRPUT  * SEND DJDE FORMS IMAGE TABLE ENTRY(DFITE)
         SPACE
*  <2>
         TM    PREVMODE,MFDUPLEX WAS THIS A DUPLEX FORM?
         BZ    SPLXTRLR      * NO - SETUP FOR SIMPLEX
         MVC   BUFSTART(80),DPLXDJDE YES- MOVE DUPLEX DJDE TO JES2 BUFF
         B     DPLXTRLR      * GO SEND DJDE
SPLXTRLR MVC   BUFSTART(80),SPLXDJDE MOVE SIMPLEX SWITCH DJDE TO BUFF
DPLXTRLR BAL   R12,E1$PRPUT  * SEND DJDE
         MVC   BUFSTART(80),NUFRDJDE MOVE NUFRONT DJDE TO JES2 BUFF
         BAL   R12,E1$PRPUT  * SEND DJDE TO SKIP TO NEW CUT SHEET
         SPACE
*  <3>
         L     PC1,12(,R9)   *  R4 <--- ADDRESS (DVITE  )
         LA    PC1,0(,PC1)   *  ERASE THE CONTROL BYTE
         LH    PC2,0(,PC1)   *  R5 <--- COUNT   (DVITE'S)
         LA    PC1,2(,PC1)   * POSITION R4 TO HEAD OF 'DVITE' GROUP
         SPACE
*  <4>
SENDFINT EQU                 *
         DROP  PC2           *
         MVC   BUFSTART(80),0(PC1) MOVE THE 'DVITE' TO THE BUFFER
         BAL   R12,E1$PRPUT  * SEND DJDE VFU IMAGE TABLE ENTRY(DVITE)
         LA    PC1,80(,PC1)  * GET NEXT      'DVITE'
         BCT   PC2,SENDFINT  * CHAIN IN  NEXT 'DVITE'
*  <5>
         MVC   BUFSTART(2),PAGEEJCT MOVE EJECT COMMAND TO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         SPACE
*  <6>
SENDTRLX EQU                 * SENDTRLR EXIT
         BR    R6            * RETURN TO THE CALLER
         EJECT
         TITLE 'E1$PRPUT: SENDDJDE/SENDTRLR SUPPORT SUBROUTINE'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×      S I N G L E    L I N E    I N S E R T    R O U T I N E     × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*   UPON ENTRY,  CONTENTS OF GENERAL REGISTERS ARE AS FOLLOWS:        *
*                                                                     *
*     REG          ENTRY-VALUE       EXIT-VALUE                       *
*     ---        ----------------    ----------                       *
*                                                                     *
*     R0         DATA     LENGTH     UNCHANGED                        *
*     R1         DATA     ADDRESS    UNCHANGED                        *
*     R3         BUFFER   ADDRESS    UNCHANGED                        *
*     R11        HCT      ADDRESS    UNCHANGED                        *
*     R12        RETURN   ADDRESS    UNCHANGED                        *
*                                                                     *
***********************************************************************
         SPACE
E1$PRPUT DS    0D            *
         LA    R1,BUFSTART   *  R1 <--- ADDRESS (PRINTLINE)
         LA    R0,80         *  R0 <--- LENGTH  (PRINTLINE)
         SPACE
         $PRPUT DATA=(R1),   * POINT R1 TO THE DATA TO BE PRINTED      X
               LEN=(R0),     * R0 CONTAINS THE LENGTH OF DATA TO PRINT X
               COUNT=01,     * THE DATA MAY BE PRODUCED ONLY ONCE      X
               WAIT=YES      * WAIT FOR I/O COMPLETION                .
         SPACE 1
         BR    R12           * RETURN TO THE CALLER
         SPACE 1             *                                        .
PAGEEJCT DC    X'8B40'       * PRINTER SKIP TO CHANNEL 1 COMMAND
         EJECT
         TITLE 'EXIT1A: LITERAL POOL'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×             E X I T 1 A   L I T E R A L   P O O L               × *
* +-----------------------------------------------------------------+ *
***********************************************************************
         SPACE 1
LTORG    DS    0D            * >>>> LITERAL POOL BEGINS FROM HERE <<<<<
         LTORG
         SPACE 1
         DROP  R1,R10,PBUF,PL
         SPACE 1
************************ END OF MODULE EXIT1A *************************
