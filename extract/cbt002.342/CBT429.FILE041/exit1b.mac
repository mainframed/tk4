         TITLE 'EXIT1B: JES2 EXIT 1 PRINT/PUNCH SEPARATOR EXIT'
***********************************************************************
* +-----------------------------------------------------------------+ *
* ×                         E X I T 1 B                             × *
* +-----------------------------------------------------------------+ *
***********************************************************************
*                                                                     *
*        ENVIRONMENT   JES2/SP 1.3.6  FMID HJE1367  PUT 8806  PDO8840 *
*                      MVS/SP 1.3.5 (NON-XA)                          *
*                                                                     *
*        THIS WAS BENJ. FRANKLIN'S ORIGINAL JES2 EXIT 1 REPORT        *
*        SEPARATOR BANNER PAGE GENERATOR ROUTINE.  IT HAS BEEN        *
*        MODIFIED TO INTEGRATE WITH THE NEW EXITS FOR XEROX FORMS     *
*        CONTROL.  IT GETS CONTROL AFTER EXIT1A, AND PROVIDES         *
*        MODIFIED SEPARATOR PAGES FOR SHORTLINE FORMATTED FORMS       *
*        (LIKE 1-UP PORTRAIT).                                        *
*                                                                     *
*        THIS EXIT IS COPIED INTO EXIT1MIT AT ASSEMBLY TIME.          *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED TO REPLACE THE IBM        *
*        STANDARD PRINT AND PUNCH SEPARATOR ROUTINES.  THE PUNCH      *
*        SEPARATOR LACE CARD AND BLANK CARD IS PRODUCED EXACTLY       *
*        AS IBM PRODUCED THEM.  THE PRINT SEPARATOR PAGE IS THE       *
*        SAME AS THAT PRODUCED BY IBM EXCEPT THAT INSTEAD OF TWO      *
*        LINES OF BLOCK LETTERS, THREE ARE PRODUCED.  THE SECOND      *
*        LINE OF THE BLOCK LETTERS IS THE FIRST EIGHT (8) BYTES       *
*        OF THE PROGRAMMER NAME FIELD.  NOTE THAT ONLY AS MANY        *
*        LINES OF BLOCK LETTERS ARE PRODUCED AS THERE IS ROOM         *
*        FOR AS DEFINED BY THE NUMBER OF LINES ON THE LOCAL OR        *
*        REMOTE SPECIFICATIONS FOR &PRIDCT OR &TPIDCT.                *
*                                                                     *
*        STARTED TASKS DO NOT PROVIDE A PROGRAMMER NAME FIELD TO      *
*        BE USED BY THE SEPARATOR ROUTINE.  TSO LOGONS ALSO DO        *
*        NOT NORMALLY PROVIDE THIS INFORMATION, HOWEVER ACF2          *
*        BUILDS A NORMAL JOB CARD WITH A PROGRAMMER NAME.  THE        *
*        CONSTANT 'TECH SUP' IS USED FOR ALL STARTED TASKS.           *
*                                                                     *
***********************************************************************
          EJECT
***********************************************************************
*                                                                     *
*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*  THE XEROX FORMS CONTROL JES2 EXITS WE'VE DEVELOPED ARE AVAILABLE   *
*  TO THE PUBLIC DOMAIN ON AN "AS IS" BASIS.  WE MAKE NO WARRANTY     *
*  OR GUARANTEE THAT THE EXITS WILL FUNCTION CORRECTLY IN YOUR        *
*  ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY ERRORS OR LOSSES    *
*  RESULTING FROM THEIR IMPLEMENTATION AND/OR USAGE.                  *
*                                                                     *
*  YOU USE THESE EXITS AT YOUR OWN RISK AND MUST SUPPORT THEM BY      *
*  YOURSELF.                                                          *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*         BENJ. FRANKLIN FEDERAL SAVINGS AND LOAN ASSOCIATION         *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*  THIS MODULE IS AVAILABLE IN THE PUBLIC DOMAIN ON AN "AS IS"        *
*  BASIS.  WE MAKE NO WARRANTY OR GUARANTEE THAT IT WILL FUNCTION     *
*  CORRECTLY IN YOUR ENVIRONMENT, NOR CAN WE BE HELD LIABLE FOR ANY   *
*  ERRORS OR LOSSES RESULTING FROM ITS IMPLEMENTATION AND/OR USAGE.   *
*                                                                     *
*  YOU USE THIS MODULE AT YOUR OWN RISK AND MUST SUPPORT IT BY        *
*  YOURSELF.                                                          *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*               A S S E M B L Y     O P T I O N S                     *
*                                                                     *
*        SEVERAL ASSEMBLY OPTIONS ARE PROVIDED FOR EASE IN            *
*        PROVIDING THE DESIRED NUMBER OF SEPARATORS ON THE            *
*        START/CONT OR END SEPARATOR FOR BOTH LOCAL AND REMOTE        *
*        DEVICES.                                                     *
*                                                                     *
*        THE DEFAULTS SET ARE AS FOLLOWS:                             *
*                                                                     *
*        NPRSEPSL (2) - NUMBER OF START/CONT PAGES FOR LOCAL PRTRS    *
*        NPRSEPEL (1) - NUMBER OF END        PAGES FOR LOCAL PRTRS    *
*        NPRSEPSR (2) - NUMBER OF START/CONT PAGES FOR REMOTE PRTRS   *
*        NPRSEPER (1) - NUMBER OF END        PAGES FOR REMOTE PRTRS   *
*        IPLINES  (4) - VALUE TO ADD TO $PRIDCT FOR IMPACT PRINTERS   *
*                       TO ALLOW PRINTING ON THE PERFORATION.         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        ASSEMBLY VARIABLES                                           *
*                                                                     *
***********************************************************************
NPRSEPSL EQU 2                     NBR OF LOCAL PRTR START SEPARATORS
NPRSEPEL EQU 1                     NBR OF LOCAL PRTR END   SEPARATORS
NPRSEPSR EQU 2                     NBR OF RMT   PRTR START SEPARATORS
NPRSEPER EQU 1                     NBR OF RMT   PRTR END   SEPARATORS
IPLINES  EQU 1                     EXTRA SEP LINES ON LOCAL IMPACT PTR
         EJECT
*
*                             SYMBOLIC REGISTER DEFINITIONS
*
         SPACE 3
*WA       EQU   R2                  WORK REGISTER A
*WB       EQU   R3                  WORK REGISTER B
*WC       EQU   R4                  WORK REGISTER C
*WD       EQU   R5                  WORK REGISTER D
*WE       EQU   R6                  WORK REGISTER E
*WF       EQU   R7                  WORK REGISTER F
WG       EQU   R8                  WORK REGISTER G
BASE3    EQU   R8                  SEGMENT BASE REGISTER
*JCT      EQU   R10                 JCT ADDRESSABILITY REGISTER
BASE1    EQU   R11                 HCT ADDRESSABILITY REGISTER
BASE2    EQU   R12                 PROCESSOR ADDRESSABILITY REGISTER
SAVE     EQU   R13                 PCE ADDRESSABILITY REGISTER
LINK     EQU   R14                 LINK REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
EXIT1B   $ENTRY BASE=R12,CSECT=YES
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    WA,R0               SAVE INPUT PARAMETER
         LR    WB,R1               SAVE INPUT DCT ADDRESS
         USING DCT,WB              SET ADDRESSABILITY TO DCT
         USING JCT,R10             SET ADDRESSABILITY TO JCT
         $GETBUF TYPE=HASP,FIX=YES,WAIT=YES GET A WORK BUFFER
         LR    WC,R1               SAVE ADDRESS OF BUFFER
         USING BFPDSECT,WC         SET ADDRESSABILITY TO BUFFER
         TM    DCTPPSW,DCTPPSWS    SEE IF SEPARATORS REQUESTED
         BO    EXIT                NO, GET OUT
         CLC   JCTJNAME(6),=CL6'SARSTC'   SEE IF SAR STARTED TASK
         BE    EXIT                YES, GET OUT (SAR PROVIDES SEPS)
         CLC   JCTJNAME(6),=CL6'SMR999'   SEE IF SAR REPRINT JOB
         BE    EXIT                YES, GET OUT (SAR PROVIDES SEPS)
         CLC   JCTJNAME(6),=CL6'SMR998'   SEE IF SAR REPRINT JOB
         BE    EXIT                YES, GET OUT (SAR PROVIDES SEPS)
         TM    PCEID,PCEPUSID      IS THIS A PUNCH
         BO    PUNCH               YES, BRANCH
         EJECT
***********************************************************************
*                                                                     *
*                      P R I N T E R                                  *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PRODUCE THE SETUP HEADER FOR A SNA REMOTE IF REQUIRED.       *
*                                                                     *
***********************************************************************
PRINTER  EQU   *
         TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED
         BNO   SETSEPCT            NO, BYPASS $SEPPDIR ROUTINE
         $SEPPDIR (WC)             SEND PDIR TO SNA RMT
***********************************************************************
*                                                                     *
*        DETERMINE THE NUMBER OF LINES TO BE PRODUCTED ON THE         *
*        SEPARATOR PAGE.  THIS MAY VARY DEPENDING ON WHETER OR        *
*        NOT THE DEVICE IS A LOCAL PRINTER OR A REMOTE PRINTER.       *
*                                                                     *
***********************************************************************
SETSEPCT TM    DCTDEVID,DCTRMTID   IS THIS A REMOTE DEVICE?
         BZ    SETLOCAL            NO, BRANCH
SETRMT   LA    R1,NPRSEPSR         LOAD NBR OF START SEP PGS FOR REMOTE
         CH    WA,H#8              TEST ENTRY REASON CODE
         BNE   SETCOUNT            NOT EIGHT, NOT END, BRANCH
         LA    R1,NPRSEPER         LOAD NBR OF END SEP PGS FOR REMOTE
         B     SETCOUNT            GO SET SEPARATOR PAGE COUNT
SETLOCAL LA    R1,NPRSEPSL         LOAD NBR OF START SEP PGS FOR LOCAL
         CH    WA,H#8              TEST ENTRY REASON CODE
         BNE   SETCOUNT            NOT EIGHT, NOT END, BRANCH
         LA    R1,NPRSEPEL         LOAD NBR OF END SEP PGS FOR LOCAL
SETCOUNT BCTR  R1,0                REDUCE COUNT BY 1
         ST    R1,PCEUSER0         AND SAVE COUNT
         B     PRINTRTN            GO PRINT FIRST SEPARATOR
CALLPRNT ICM   R1,15,PCEUSER0      LOAD NUMBER OF SEP PAGES LEFT TO DO
         BZ    ENDPRNT             ZERO, DONE, EXIT
         BM    ENDPRNT             NEGATIVE, ERROR, BUT EXIT ANYWAY
         BCTR  R1,0                REDUCE COUNT BY 1
         ST    R1,PCEUSER0         AND SAVE NEW COUNT
         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     PRINTRTN            GO PRINT A SEPARATOR
***********************************************************************
*                                                                     *
*        IF WE HAVE JUST FINISHED PROCESSING END SEPARATOR            *
*        PAGE(S), AN EJECT COMMAND MUST BE ISSUED TO PROPERLY         *
*        POSITION FOR EDGE MARKING.                                   *
*                                                                     *
***********************************************************************
ENDPRNT  CH    WA,H#8              TEST ENTRY REASON CODE
         BNE   EXIT                NOT EIGHT, NOT END, BRANCH
         MVC   BUFSTART(2),PAGEJECT MOVE EJECT COMMAND TO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF EJECT COMMAND
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
         B     EXIT                GET OUT
         EJECT
***********************************************************************
*                                                                     *
*        PRINT SEPARATOR ROUTINE - MAY BE CALLED MULTIPLE TIMES       *
*                                                                     *
***********************************************************************
PRINTRTN SLR   WD,WD               CLEAR REG FOR IC
         IC    WD,$TPIDCT          LOAD REMOTE SEPARATOR LINE COUNT
         TM    DCTDEVID,DCTRMTID   SEE IF THIS IS A REMOTE DEVICE
         BO    STARTPRT            YES, BRANCH
         IC    WD,$PRIDCT          LOAD LOCAL SEPARATOR LINE COUNT
         TM    DCTPPSW2,DCTNIPRT   SEE IF THIS IS A NON-IMPACT PRINTER
         BO    STARTPRT            YES, BRANCH
         LA    WD,IPLINES(WD)      ADD EXTRA LINES FOR INPACT PRINTER
***********************************************************************
*                                                                     *
*        PRODUCE FROM 1 TO THREE BLOCK LETTER LINES.  IF ONLY         *
*        ENOUGH ROOM FOR 1 BLOCK LETTER LINE, THE JOBNAME LINE        *
*        WILL BE GENERATED.  IF THERE IS ROOM FOR ALL THREE LINES,    *
*        THE SECOND BLOCK LETTER LINE WILL BE THE FIRST EIGHT         *
*        CHARACTERS OF THE PROGRAMMER NAME.  IF THERE IS ONLY ROOM    *
*        FOR TWO LINES, THE PROGRAMMER NAME LINE WILL NOT BE          *
*        GENERATED, BUT RATHER THE LAST BLOCK LETTER LINE OF THE      *
*        JOB NUMBER AND SYSOUT CLASS WILL BE PRODUCED.                *
*                                                                     *
***********************************************************************
STARTPRT EQU   *
*
         USING PTBDSECT,WG   * MAKE PRINTER TABLE ENTRY ADDRESSABLE
         L     WG,=A(PRNTRTAB) FIND PRINTER ENTRY IN PRINTER TABLE
         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?
         BE    STARTPR2      * NO - MAKE DUE WITHOUT IT
         CH    WA,H#8        * END SEPARATOR?
         BNE   EXT1NEXT      * NO - GO EXAMINE PRINTER ENTRIES
         SLR   WG,WG         * YES - ZERO OUT PRINTER TABLE ADDRESS
         B     STARTPR2      *   SINCE WE WANT TO BYPASS XEROX LOGIC
EXT1NEXT CLI   PTBENTRY,C'0' * DEFAULT TO PRINTER 0 IF BEYOND LAST
         BE    STARTPR2      *   PRINTER TABLE ENTRY
         CLC   PTBENTRY,DCTDEVN+3 IF CORRECT PRINTER ENTRY
         BE    STARTPR2      *   THEN CONTINUE WITH BLOCK LETTERS
         CLC   PTBENTRY,DCTDEVN+7 IF CORRECT PRINTER ENTRY
         BE    STARTPR2      *   THEN CONTINUE WITH BLOCK LETTERS
         LA    WG,12(0,WG)   * ELSE GET SET TO CHECK NEXT ENTRY
         B     EXT1NEXT      *
*
STARTPR2 CH    WD,H#15             SEE IF ROOM FOR 1 LINE OF HEADING
         BL    SEPLINE             NO, JUST GO PRINT SINGLE LINES
         MVC   PPPCCWRK,=CL8' '    CLEAR WORK AREA
         CLC   JCTJNAME(2),=CL2'SP' IS THIS A PGMR ID?
         BE    SEPPGMR             Y. PROCESS
         CLC   JCTJNAME(2),=CL2'OP' IS THIS A PGMR ID?
         BE    SEPPGMR             Y. PROCESS
         CLC   JCTJNAME(2),=CL2'TS' IS THIS A PGMR ID?
         BE    SEPPGMR             Y. PROCESS
         CLC   JCTJNAME(2),=CL2'AD' IS THIS A PGMR ID?
         BE    SEPPGMR             Y. PROCESS
         CLC   JCTJNAME(2),=CL2'IC' IS THIS A PGMR ID?
         BE    SEPPGMR             Y. PROCESS
         CLI   JCTROOMN,X'00'      DID PROGRAMMER SPECIFY ROOM?
         BE    NORMP               Y. MOVE IT INTO HDR
         CLC   JCTROOMN,=CL4' '    DID PROGRAMMER SPECIFY ROOM?
         BNE   MVROOM              Y. MOVE IT INTO HDR
NORMP    MVC   PPPCCWRK,=CL8'PROD  ' N. MOVE CONSTANT
         B     BLOCK0              AND BRANCH AROUND
SEPPGMR  EQU   *
         CLI   JCTROOMN,X'00'      DID PROGRAMMER SPECIFY ROOM?
         BE    NOROOM              Y. MOVE IT INTO HDR
         CLC   JCTROOMN,=CL4' '    DID PROGRAMMER SPECIFY ROOM?
         BNE   MVROOM              Y. MOVE IT INTO HDR
NOROOM   MVC   PPPCCWRK,=CL7'NO ROOM' N. MOVE CONSTANT
         B     BLOCK0              AND BRANCH AROUND
MVROOM   MVC   PPPCCWRK(4),JCTROOMN GET ROOM NUMBER
BLOCK0   LA    R0,PPPCCWRK        LOAD ROOM NUMBER
*
         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?
         BE    BLOCK0A       * NO - SKIP XEROX CHECK
         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER
         BNE   BLOCK0A       *   THEN DO STANDARD CENTERING
         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)
         BZ    BLOCK0A       *   THEN DO STANDARD CENTERING
*
         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO
         B     BLOCK0B       *
*
BLOCK0A  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO
*
BLOCK0B  MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   WF,PRINT            GO WRITE BLANK LINES
         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
BLOCK1   LA    R0,JCTJNAME         LOAD JOB NAME ADDRESS
*
         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?
         BE    BLOCK1A       * NO - SKIP XEROX CHECK
         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER
         BNE   BLOCK1A       *   THEN DO STANDARD CENTERING
         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)
         BZ    BLOCK1A       *   THEN DO STANDARD CENTERING
*
         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO
         B     BLOCK1B       *
*
BLOCK1A  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO
*
BLOCK1B  MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   WF,PRINT            GO WRITE BLANK LINES
         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
BLOCK2   CH    WD,H#31             SEE IF ROOM FOR TWO BLOCK LETTERS
         BL    BLOCK3              NO, GO SEE IF ROOM FOR LAST BLOCK
         LA    R1,1                SET REPEAT COUNT
         BAL   WF,PRINT            GO PRINT ONE MORE BLANK LINE
         SH    WD,H#1              SUBTRACT ONE LINE FOR BLANK LINE
         CLI   JCTJOBID,C'J'       IS THIS A BATCH JOB?
         BE    BLOCK2A             YES, BRANCH
         CLI   JCTJOBID,C'T'       IS THIS A TSO USER?
         BE    BLOCK2A             YES, BRANCH
         MVC   JCTPNAME,C#STC      SET PROGRAMMER NAME TO 'TECH SUP'
BLOCK2A  LA    R0,JCTPNAME         LOAD ADDRESS OF PROGRAMMER NAME
*
         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?
         BE    BLOCK2B       * NO - SKIP XEROX CHECK
         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER
         BNE   BLOCK2B       *   THEN DO STANDARD CENTERING
         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)
         BZ    BLOCK2B       *   THEN DO STANDARD CENTERING
*
         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO
         B     BLOCK2C       *
*
BLOCK2B  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO
*
BLOCK2C  MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   WF,PRINT            GO WRITE BLANK LINES
         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
BLOCK3   CH    WD,H#16             SEE IF ROOM FOR MORE BLOCK LETTERS
         BL    SEPLINE             NO, JUST GO PRINT SINGLE LINES
         LA    R1,1                SET REPEAT COUNT
         BAL   WF,PRINT            GO PRINT ONE MORE BLANK LINE
         SH    WD,H#1              SUBTRACT ONE LINE FOR BLANK LINE
         XC    PPPCCWRK,PPPCCWRK   CLEAR WORK AREA
         MVC   PPPCCWRK(1),JCTJOBID GET JOB TYPE
         MVC   PPPCCWRK+1(4),JCTJOBID+4 AND JOB NUMBER
BLOCK3A  CLI   PPPCCWRK+1,C' '      LEFT
         BNE   BLOCK3B               JUSTIFY
         MVC   PPPCCWRK+1(4),PPPCCWRK+2  JOB
         B     BLOCK3A                   NUMBER
BLOCK3B  L     WE,PPPWKJOE         LOAD ADDRESS WORK-JOE
         USING JOE,WE              SET ADDRESSABILITY TO JOE
         MVC   PPPCCWRK+6(1),JOECURCL  GET SYSOUT CLASS
         DROP  WE                  DROP ADDRESSABILITY TO JOE
         MVI   PPPCCWRK+7,C' '     SET TRAILING BLANK
         LA    R0,PPPCCWRK         LOAD ADDRESS OF JOB NUMBER AND CLASS
*
         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?
         BE    BLOCK3C       * NO - SKIP XEROX CHECK
         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER
         BNE   BLOCK3C       *   THEN DO STANDARD CENTERING
         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)
         BZ    BLOCK3C       *   THEN DO STANDARD CENTERING
*
         $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO,CENTER=NO
         B     BLOCK3D       *
*
BLOCK3C  $PBLOCK BUFFER=(WC),DATA=(R0),SLANT=NO
*
BLOCK3D  MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    R1,1                SET LENGTH TO 1
         STC   R1,BUFSTART         AND SAVE IT IN BUFFER
         LA    R1,2                SET REPEAT COUNT
         BAL   WF,PRINT            GO WRITE BLANK LINES
         SH    WD,H#14             SUBTRACT LINES FOR BLOCK AND BLANKS
         EJECT
***********************************************************************
*                                                                     *
*        CONVERT JOEROUT TO EBCIDIC FOR PRINT SEPERATOR PAGES         *
*        THE ROUTE IS FIRST CHECKED TO SEE IF THERE IS A              *
*        DESTID THAT MATCHES THE ROUTE.  IF A DESTID IS FOUND THEN    *
*        THAT NAME IS MOVED TO THE HEADER LINE. IF MORE THAN ONE      *
*        DESTID IS FOUND FOR A ROUTE THEN THE ROUTE IS CONVERTED      *
*        ACCORDING TO THE FOLLOWING FORMAT                            *
*                                                                     *
*             RNNNN  (REMOTE)                                         *
*             UNNNN  (SPECIAL LOCAL)                                  *
*             'LOCAL' (LOCAL DEVICE)                                  *
*             CCCCCCCC (DESTID)                                       *
*                                                                     *
***********************************************************************
         SPACE 2
SEPLINE  L     WE,PPPWKJOE         LOAD ADDRESS OF WORK JOE
         USING JOE,WE              SET ADDRESSABILITY TO JOE
         L     WF,$SVT             GET ADDRESS OF SVT
         LM    R14,R15,SVTRDT-SVT(WF)  LOAD ADDRESS OF FIRST RDT
         USING RDT,R14             SET ADDRESSABILITY TO RDT
         NI    PRDWORK1,X'00'      TURN OFF DESTID FOUND
SEPLINE1 CR    R14,R15             END OF TABLE?
         BH    SEPLINE4            YES, GET OUT
         ICM   WF,15,RDTROUTE      LOAD ROUTE CODE FROM RDT
         TM    RDTFLAG,RDTFLAGR    IS THIS A REMOTE DESTINATION ENTRY
         BZ    SEPLINE2            NO, BRANCH
         TM    RDTFLAG,RDTFLAGN    IS NODE SPECIFIED IN THE ENTRY
         BO    SEPLINE2            YES, BRANCH
         ICM   WF,B'1100',$OWNNODE MOVE DEFAULT NODE TO ROUTE CODE
SEPLINE2 CL    WF,JOEROUT          SEE IF DESTIT MATCHES THIS JOE
         BNE   SEPLINE3            NO, GO CHECK NEXT RDT ENTRY
         TM    PRDWORK1,X'FF'      HAS A DESTID ALREADY BEEN FOUND?
         BO    SEPLINE5            YES, BRANCH
         OI    PRDWORK1,X'FF'      SET FIRST DESTID FOUND FLAG
         MVC   PROUTWRK,RDTNAME    SAVE DESTID
SEPLINE3 LA    R14,RDTSIZ(R14)     INCREMENT TO NEXT RDT
         B     SEPLINE1            GO CHECK NEXT RDT ENTRY
SEPLINE4 TM    PRDWORK1,X'FF'      IS THERE A DESTID FOR THIS JOE..
         BO    SEPLINE8            YES, GO BUILD SEPARATOR LINE
SEPLINE5 CLC   JOEREMOT,$ZEROS     IS THIS A LOCAL DESTID
         BE    SEPLINE7            YES, GO SET TO LOCAL
         SLR   R15,R15             CLEAR REG FOR ICM
         ICM   R15,3,JOEREMOT      MOVE REMOTE NUMBER TO A REG
         CVD   R15,PROUTWRK        CONVERT REMOTE NUMBER TO PACKED
         MVC   PROUTWRK-1(6),MASK1 SET EDIT PATTERN
         ED    PROUTWRK-1(6),PROUTWRK+5  MAKE REMOTE NUMBER PRINTABLE
         CLC   JOERNODE,$ZEROS     SEE IF UNIT SPECIFICATION
         BE    SEPLINE6            YES, GO SET  'U' LABEL
         MVI   PROUTWRK,C'R'       NO,  REMOTE, 'R' LABEL
         MVC   PROUTWRK+5(3),BLANKS BLANK REST OF FIELD
         B     SEPLINE8            GO BUILD SEPARATOR LINE
         SPACE 1
SEPLINE6 MVI   PROUTWRK,C'U'       SET 'U' LABEL
         MVC   PROUTWRK+5(3),BLANKS BLANK REST OF FIELD
         B     SEPLINE8            GO BUILD SEPARATOR LINE
         SPACE 1
SEPLINE7 MVC   PROUTWRK,C#LOCAL    SET 'LOCAL' LABEL
         DROP  R14                 DROP ADDRESSABILITY TO RDT
         EJECT
***********************************************************************
*                                                                     *
*        BUILD THE OUTPUT SINGLE LINE WHICH WILL BE REPEATED ENOUGH   *
*        TIMES TO FILL THE REST OF THE PAGE AS DEFINED BY THE JES2    *
*        INITIALIZATION PARAMTERS FOR &PRIDCT FOR LOCAL PRINTERS OR   *
*        &TPIDCT FOR REMOTE PRINTERS.                                 *
*                                                                     *
***********************************************************************
SEPLINE8 LA    WF,BUFSTART+1       LOAD ADDRESS OF HEADER LINE
         USING HDRDSECT,WF         SET ADDRESSABILITY TO HEADER LINE
         MVI   BUFSTART,C' '       CLEAR ENTIRE
         MVC   BUFSTART+1(132),BUFSTART  BUFFER
         LA    WE,132              LOAD LENGTH OF PRINT LINE
         STC   WE,BUFSTART         AND SAVE IT
***********************************************************************
*        FRAME CHARACTERS                                             *
***********************************************************************
         MVC   HDRFRAME(2),C#ASTER  SET FRAME CHARACTER
         MVC   HDRFRAMX(1),HDRFRAME SET END FRAME CHARACTER
***********************************************************************
*        SYSOUT CLASS                                                 *
***********************************************************************
         L     WE,PPPWKJOE         LOAD ADDRESS OF WORK JOE
         USING JOE,WE              SET ADDRESSABILITY TO JOE
         MVC   HDRCLASS,JOECURCL   SET SYSOUT CLASS
         MVC   HDRCLASX,JOECURCL       TWICE
***********************************************************************
*        SYSOUT CLASS AGAIN                                           *
***********************************************************************
         MVC   HDRJNAME(1),JOECURCL SET SYSOUT CLASS AGAIN
         MVI   HDRJNAME+1,C'-'     INSERT A DASH
***********************************************************************
*        SYSOUT FORM ID                                               *
***********************************************************************
         L     R1,PPPCHJOE         GET THE ADDRESS OF CJOE
         MVC   HDRJNAME+2(4),JOEFORM-JOE(R1) SET OUTPUT FORM ID
***********************************************************************
*        SYSOUT JOE NAME                                              *
***********************************************************************
*        MVC   HDRJNAME,JOENAME    SET JOE OUTPUT NAME
***********************************************************************
*        SYSOUT JOE ID                                                *
***********************************************************************
*        MVC   HDRJID(2),JOEID1    SET JOE OUTPUT ID
***********************************************************************
*        SYSOUT JOE ROUTE AS DETERMINED BY PREVIOUS ROUTINE           *
***********************************************************************
         MVC   HDRJROUT,PROUTWRK   SET JOE ROUTE OR DESTID
         DROP  WE                  DROP ADDRESSABILITY TO JOE
***********************************************************************
*        SEPARATOR FORM TYPE (START/CONT/END)                         *
***********************************************************************
         MVC   HDRFORM,C#START     ASSUME "START" ENTRY
         LTR   WA,WA               TEST ENTRY REASON CODE
         BZ    FORMSET             ZERO, START, BRANCH
         MVC   HDRFORM,C#CONT      ASSUME "CONT " ENTRY
         CH    WA,H#4              TEST ENTRY REASON CODE
         BE    FORMSET             FOUR, CONT, BRANCH
         MVC   HDRFORM,C#END       MUST BE "END  " ENTRY
FORMSET  MVC   HDRFORMX,HDRFORM    SET FORM TYPE TWICE
***********************************************************************
*        SYSOUT JOB NUMBER                                            *
***********************************************************************
         MVC   HDRNUM,JCTJOBID     SET JOB NUMBER
***********************************************************************
*        SYSOUT JOB NAME                                              *
***********************************************************************
         MVC   HDRNAME,JCTJNAME    SET JOB NAME
***********************************************************************
*        SYSOUT SYSTEM ID                                             *
***********************************************************************
         MVC   HDRSKEY,C#SYS       SET THE SYS LABEL
         MVC   HDRSYS,$SID         SET SYSTEM ID
***********************************************************************
*        SYSOUT PROGRAMMER NAME                                       *
***********************************************************************
         MVC   HDRPNAME,JCTPNAME   SET PROGRAMMER NAME
***********************************************************************
*        SYSOUT ROOM NUMBER                                           *
***********************************************************************
         MVC   HDRRKEY,C#ROOM      SET THE ROOM LABEL
         MVC   HDRROOM,JCTROOMN    SET ROOM NUMBER
***********************************************************************
*        SYSOUT TIME (HH.MM.SS XM)                                    *
***********************************************************************
         TIME  DEC                 GET TIME AND DATE
         ST    R0,PROUTWRK         SAVE TIME (HHMMSSTT)
         MVO   PRDWORK1(5),PROUTWRK(4) SHIFT TO ADD SIGN
         OI    PRDWORK1+4,X'0F'    SET SIGN
         MVC   HDRAM,C#AM          SET TO 'AM'
         CP    PRDWORK1(5),P#12MIL TEST TIME
         BL    SEPLINE9            BRANCH IF AM
         MVI   HDRAM,C'P'          CHANGE FROM AM TO PM
         CP    PRDWORK1(5),P#13MIL SEE IF AFTER 1 PM
         BL    SEPLINE9            YES, DO NOT ADJUST FOR PM
         SP    PRDWORK1(5),P#12MIL SUBTRACT 12 HOURS
SEPLINE9 MVC   HDRPTTN,MASK2       SET EDIT MASK
         ED    HDRPTTN,PRDWORK1    EDIT TIME INTO HEADER LINE
***********************************************************************
*        SYSOUT DATE (DD MMM YY)                                      *
***********************************************************************
         ST    R1,PROUTWRK+4       SAVE DATE
         MVC   SAVETBL,YEARTBL     SAVE A COPY OF DAE TABLE FOR UPDATE
         TM    PROUTWRK+5,X'01'    IT THIS AN ODD YEAR
         BO    SEPLINEA            YES, CANNOT BE LEAP YEAR
         TM    PROUTWRK+5,X'12'    MAGIC LEAP YEAR MASK
         BM    SEPLINEA            MIXED, CANNOT BE LEAP YEAR
         MVI   FEB,29              CHANGE FEB TO 29 DAYS
SEPLINEA MVC   HDRDATE+6(3),MASK3  MOVE EDIT PATTERN
         ED    HDRDATE+7(3),PROUTWRK+5    EDIT THE YEAR (YY) TO HDR
         MVC   PROUTWRK(6),$ZEROS  CLEAR ALL DATE EXCEPT JULIAN DAY
         CVB   R1,PROUTWRK         CONVERT TO BINARY DAY
         LA    WE,SAVETBL-4        LOAD ADDRESS OF DATEION TABLE
         SLR   R0,R0               CLEAR FOR IC
SEPLINEB SLR   R1,R0               SUBTRACT DAY/MONTH FROM TOTAL
         LA    WE,4(,WE)           INCREMENT TO NEXT DATE ENTRY
         IC    R0,0(,WE)           LOAD NUMBER OF DAYS IN THAT MONTH
         CLR   R0,R1               SEE IF ONLY PARTIAL MONTH REMAINDING
         BL    SEPLINEB            NO, LOOP
         CVD   R1,PROUTWRK         CONVERT TO DECIMAL DAY
         MVI   HDRDATE-1,C' '      CLEAR 1ST BYTE OF AREA
         UNPK  HDRDATE(2),PROUTWRK+6(2) PLACE DAY (DD)
         OI    HDRDATE+1,X'F0'             INTO PMESSAGE
         MVI   HDRDATE+2,C' '      INSERT DELIMITER
         MVC   HDRDATE+3(3),1(WE)  MOVE EBCDIC MONTH (MMM)
***********************************************************************
*        SYSOUT DEVICE NAME                                           *
***********************************************************************
         MVC   HDRDNAME,DCTDEVN    DEVICE NAME
         DROP  WF                  DROP ADDRESSABILITY TO HEADER LINE
         EJECT
***********************************************************************
*                                                                     *
*        PRODUCE THE SINGLE LINE WHICH WAS JUST CREATED AS MANY       *
*        TIMES AS REQUIRED TO FILL THE REST OF THE PAGE AS DEFINED    *
*        BY JES2 INITIALIZATION PARAMETERS.  THE NUMBER OF LINES      *
*        LEFT TO PRINT IS IN REGISTER WD.                             *
*                                                                     *
***********************************************************************
*
         C     WG,=F'0'      * PRINTER TABLE ADDRESSABLE?
         BE    SEPLINEC      * NO - SKIP XEROX CHECK
         CLI   PTBTYPE,C'X'  * IF NOT A XEROX PRINTER
         BNE   SEPLINEC      *   THEN PRINT ALL LONG SEPARATOR LINES
         TM    PREVMODE,MFSHORTL IF NOT IN SHORT LINE MODE (1-UP PORT)
         BZ    SEPLINEC      *   THEN PRINT ALL LONG SEPARATOR LINES
*
         C     WD,=F'13'         GOT MORE THAN 13 LINES LEFT TO PRINT?
         BNH   SEPLINEC          NO - PRINT ALL LONG SEPARATOR LINES
         L     R1,=F'13'         YES - PRINT 13 LONG SEPARATOR LINES
         BAL   WF,PRINT
         S     WD,=F'13'
         SLR   WF,WF               CLEAR REG 0 FOR IC
         IC    WF,BUFSTART         LOAD LINE LENGTH
         C     WF,=F'68' LINE GREATER THAN 68 CHARACTERS?
         BNH   SEPLINEC            NO - PRINT REST OF LONG SEPARATOR
         S     WF,=F'69'           SETUP FOR SHORT SEPARATOR:
         EX    WF,SEPMOVE1            MOVE SECOND HALF OVER FIRST
         LA    R1,BUFSTART+1(WF)
         MVI   0(R1),C' '             BLANK OUT SECOND HALF
         C     WF,=F'0'
         BE    SEPLINEC
         S     WF,=F'1'
         EX    WF,SEPMOVE2
         C     WD,=F'3'          GOT MORE THAN 3 LINES LEFT TO PRINT?
         BNH   SEPLINEC          NO - GO PRINT SHORT SEPARATOR LINES
         CLC   PCEUSER0(4),=F'0' SECOND SEPARATOR PAGE?
         BNE   SEPLINEC          NO - GO PRINT SHORT SEPARATOR LINES
         L     WD,=F'3'          YES - REDUCE DOWN TO 3 AND
         B     SEPLINEC            GO PRINT SHORT SEPARATOR LINES
*
SEPMOVE1 MVC   BUFSTART+1(0),BUFSTART+69  MOVE SECOND HALF OVER FIRST
SEPMOVE2 MVC   1(0,R1),0(R1)              BLANK OUT SECOND HALF
*
SEPLINEC LR    R1,WD               SET REMAIN LINE COUNT IN REG 1
         BAL   WF,PRINT            GO WRITE HEADER LINES
         B     CALLPRNT            DONE WITH PAGE, RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                        P U N C H                                    *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        PRODUCE THE SETUP HEADER FOR A SNA REMOTE IF REQUIRED.       *
*                                                                     *
***********************************************************************
PUNCH    TM    MDCTFEAT,DCTPSHDR   SEE IF SETUP HDR REQUIRED
         BNO   PUNCH1              NO, BYPASS $SEPPDIR ROUTINE
         $SEPPDIR (WC)             SEND PDIR TO SNA RMT
PUNCH1   MVC   PROUTWRK(4),JCTROOMN SET ROOM NUMBER
         MVC   PROUTWRK+4(4),JCTJOBID+4 AND JOB NUMBER
         EJECT
***********************************************************************
*                                                                     *
*        CONVERT EACH OF THE EIGHT CHARACTERS IN PPROUTWRK TO         *
*        A STRING OF 8 CHARACTERS WHICH WILL PRINT AS A 12-11-X       *
*        PUNCH.  EACH CHARACTER WILL BE PRECEDED BY A NULL            *
*        12-11 PUNCH TO DIVIDE THE CHARACTERS.                        *
*                                                                     *
*        NOTE THAT THAT THE ZONE PORTION OF ALPHA CHARACTERS WILL     *
*        BE LOST LEAVING ONLY THE NUMERIC PORTION ALONG WITH THE      *
*        12-11 ZONE PUNCH.  ALSO NOTE THAT ALL CHARACTERS LESS        *
*        AN "A" WILL PRINT AS A NULL 12-11 PUNCH.                     *
*                                                                     *
***********************************************************************
         LA    WE,80               SET LENGTH TO 80
         STC   WE,BUFSTART         AND SAVE IT IN THE BUFFER
         LA    WE,BUFSTART+1       LOAD START OF PUNCH LINE IN BUFFER
         SLR   WD,WD               ZERO INDEX POINTER
PUNCH2   MVI   0(WE),X'6A'         START THE FIELD WITH 12-11 PNCH
         IC    R0,PROUTWRK(WD)     LOAD NEXT CHARACTER
         STC   R0,1(,WE)           MOVE CHARACTER TO BUFFER
         OI    1(WE),X'30'         MASK LETTERS TO NUMERIC
         CLI   1(WE),X'F0'         SEE IF NOW ZERO
         BE    PUNCH3              YES, GO SET TO X'E0'
         BH    PUNCH4              GT ZERO, GO MASK TO 12-11-X
         MVI   1(WE),X'EA'         LT, SET TO X'EA'
PUNCH3   XI    1(WE),X'E0'         MASK OFF X'E0'
PUNCH4   XI    1(WE),X'60'         MASK RESULTING CHARACTER TO 12-11-X
         MVC   2(7,WE),1(WE)       PROPAGATE CHARACTER 7 MORE TIMES
         MVI   9(WE),X'6A'         END FIELD WITH 12-11 PUNCH
         LA    WE,10(,WE)          INCREMENT TO NEXT OUTPUT AREA
         LA    WD,1(,WD)           INCREMENT TO NEXT INPUT CHARACTER
         CH    WD,H#8              SEE IF END OF INPUT
         BL    PUNCH2              NO, LOOP
***********************************************************************
*                                                                     *
*        PRODUCE PUNCH LACE CARD                                      *
*                                                                     *
***********************************************************************
         LA    R1,1                SET REPEAT COUNT
         BAL   WF,PRINT            GO WRITE PUNCH CARD
***********************************************************************
*                                                                     *
*        PRODUCE BLANK SEPARATOR CARD IF NOT A 3525                   *
*                                                                     *
***********************************************************************
         CLI   PPPDEVTP+3,X'0C'    IS THIS A 3525
         BE    PUNCH6              YES, DO NOT PUNCH A BLANK CARD
         MVC   BUFSTART(2),PUNBLANK MOVE BLANK CARD INTO BUFFER
         LA    R0,2                LOAD LINE LENGTH
         LA    R1,BUFSTART         LOAD ADDRESS OF BLANK CARD
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES,CC=M
PUNCH6   B     EXIT                DONE, GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                           E X I T                                   *
*                                                                     *
*             RETURN CODE OF 8 TELLS JES2 TO PRODUCE ANY USER         *
*             SEPARATOR THAT HAS BEEN CREATED AND TO SUPPRESS         *
*             THE STANDARD SEPARATOR.                                 *
*                                                                     *
***********************************************************************
EXIT     $FREEBUF (WC)             FREE THE WORK BUFFER
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                           P R I N T                                 *
*                                                                     *
*        WRITE THE OUTPUT LINE DEFINED AT BUFSTART.  REPEAT THE       *
*        LINE BY THE NUMBER OF TIMES INDICATED BY THE VALUE IN        *
*        REGISTER 1 ON ENTRY.  THE LENGTH OF THE PRINT LINE IS        *
*        INDICATED BY THE FIRST BYTE OF BUFSTART.  THE ACTUAL         *
*        DATA STARTS AT BUFSTART+1.                                   *
*                                                                     *
***********************************************************************
PRINT    LTR   WE,R1               SAVE LINE COUNT
         BNPR  WF                  ZERO OR NEGATIVE, GET OUT
PRINTLP  SLR   R0,R0               CLEAR REG 0 FOR IC
         IC    R0,BUFSTART         LOAD LINE LENGTH
         LA    R1,BUFSTART+1       LOAD ADDRESS OF TRUE LINE
         $PRPUT DATA=(R1),LEN=(R0),COUNT=1,WAIT=YES
         BCT   WE,PRINTLP          LOOP UNTIL DONE
         BR    WF                  RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
YEARTBL  DC    AL1(31),C'JAN',AL1(28),C'FEB'   JULIAN DATE
         DC    AL1(31),C'MAR',AL1(30),C'APR'       TO
         DC    AL1(31),C'MAY',AL1(30),C'JUN'  DAY AND MONTH
         DC    AL1(31),C'JUL',AL1(31),C'AUG'    CONVERSION
         DC    AL1(30),C'SEP',AL1(31),C'OCT'      TABLE
         DC    AL1(30),C'NOV',AL1(99),C'DEC'
SAVETBL  EQU   $REGSAVE,12*4       AREA FOR COPY OF ABOVE TABLE
FEB      EQU   SAVETBL+4           ENTRY FOR FEBRUARY
         SPACE 3
H#1      DC    H'1'                HALFWORD CONSTANT '1'
H#4      DC    H'4'                HALFWORD CONSTANT '4'
H#8      DC    H'8'                HALFWORD CONSTANT '8'
H#14     DC    H'14'               HALFWORD CONSTANT '14
H#15     DC    H'15'               HALFWORD CONSTANT '15
H#16     DC    H'16'               HALFWORD CONSTANT '16
H#31     DC    H'31'               HALFWORD CONSTANT '31'
C#LOCAL  DC    CL8'LOCAL'          CHARACTER CONSTANT 'LOCAL   '
C#ASTER  DC    CL2'* '             CHARACTER CONSTANT '* '
C#SYS    DC    CL3'SYS'            CHARACTER CONSTANT 'SYS'
C#ROOM   DC    CL4'ROOM'           CHARACTER CONSTANT 'ROOM'
C#AM     DC    CL2'AM'             CHARACTER CONSTANT 'AM'
C#START  DC    CL5'START'          CHARACTER CONSTANT 'START'
C#CONT   DC    CL5'CONT '          CHARACTER CONSTANT 'CONT '
C#END    DC    CL5'END  '          CHARACTER CONSTANT 'END  '
C#STC    DC    CL20'TECH SUP'      CHARACTER CONSTANT 'TECH SUP'
P#12MIL  DC    PL5'12000000'       PACKED CONSTANT FOR TIME 12.00.00.00
P#13MIL  DC    PL5'13000000'       PACKED CONSTANT FOR TIME 13.00.00.00
PRINTER6 DC    CL8'PRINTER6'       CHARACTER CONSTANT 'PRINTER6'
PRINTER7 DC    CL8'PRINTER7'       CHARACTER CONSTANT 'PRINTER7'
RMT1PR1  DC    CL8'R1.PR1  '       CHARACTER CONSTANT 'R1.PR1  '
BLANKS   DC    CL20' '             STRING OF 20 BLANKS
PAGEJECT DC    X'8B40'             PRINTER SKIP TO CHANNEL 1 COMMAND
PUNBLANK DC    X'0140'             PUNCH BLANK CARD INTO POCKET 1
MASK1    DC    X'202120202020'     EDIT MASK
MASK2    DC    X'402021204B20204B2020' EDIT MASK
MASK3    DC    X'402120'           EDIT MASK
MASK4    DC    X'21204B20204B2020' EDIT MASK
JNAME    EQU   BUFSTART+14,8
PNAME1   EQU   BUFSTART+34,10
PNAME2   EQU   BUFSTART+54,10
JOBID    EQU   BUFSTART+74,8
ROOMNBR  EQU   BUFSTART+94,4
DATE     EQU   BUFSTART+114,9
TIME     EQU   BUFSTART+14,8
PRDWORK1 DS    D
PROUTWRK DS    D
         EJECT
         LTORG
         DROP  WB,WC,WG,R10
         EJECT
HDRDSECT DSECT                     HASP HEADER DSECT
HDR      DS    0CL132
HDRFRAME DS    XL1                 PP1 FRAME CHARACTERS
HDRCLASS DS    XL1                 PP2 SYSOUT CLASS
         DS    X                   PP3 BLANK
HDRFORM  DS    XL5                 PP4-8  FORM TYPE START/CONT/END
         DS    X                   PP9  BLANK
HDRNUM   DS    XL8                 PP10-17 JOB NUMBER
         DS    X                   PP18 BLANK
HDRNAME  DS    XL8                 PP19-26 JOB NAME
         DS    X                   PP27 BLANK
HDRJNAME DS    XL4,X               PP28-31 JOE NAME
         DS    X                   PP32 BLANK
HDRJID   DS    XL4                 PP33-36 JOE ID
         DS    X                   PP37 BLANK
HDRJROUT DS    XL8                 PP38-45 JOE ROUTE
         DS    X                   PP46 BLANK
HDRPNAME DS    XL20                PP47-66 PROGRAMMER NAME
         DS    X                   PP67 BLANK
HDRRKEY  DS    XL4                 PP68-71 'ROOM'
         DS    X                   PP72 BLANK
HDRROOM  DS    XL4                 PP73-76 ROOM NUMBER
HDRPTTN  DS    0XL10
         DS    X                   PP77 BLANK USED AS FILL CHARACTER
         DS    X                   PP78 BLANKED BY TIME EDIT PROCESS
         DS    XL8                 PP79-86 HH.MM.SS
         DS    X                   PP87 BLANK
HDRAM    DS    XL2                 PP88-89 AM/PM
         DS    X                   PP90 BLANK
HDRDATE  DS    XL9                 PP91-99 DD MMM YY
         DS    2X                  PP100-101 BLANK
HDRDNAME DS    XL8                 PP102-109 DEVICE NAME
         DS    2X                  PP110-111 BLANK
HDRSKEY  DS    XL3                 PP112-114 'SYS'
         DS    X                   PP115 BLANK
HDRSYS   DS    XL4                 PP116-119 SYSTEM NAME
         DS    X                   PP120 BLANK
HDRFORMX DS    XL5                 PP121-125 FORM
         DS    2X                  PP126-127 BLANK
HDRCLASX DS    X                   PP128  JOE CLASS
HDRFRAMX DS    XL4                 PP129-132 FRAME CHARACTERS
HDRLEN   EQU   *-HDR               LEN FOR CLEARING HEADER
         ORG   HDR
R6670HDR DS    0H                  DETAIL HEADER LINE FOR 6670
         DS    CL4
H66JOBNM DS    CL8                 JOBNAME
         DS    CL2
H66JOBID DS    CL8                 JOBID
         DS    CL2
H66ROOM  DS    CL4                 ROOM NUMBER
         DS    CL1
H66PGMR  DS    CL20                PROGRAMMER NAME
         SPACE
EXIT1B   CSECT
*
********************** END OF MODULE EXIT1B ***************************
