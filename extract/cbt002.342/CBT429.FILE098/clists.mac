./       ADD   NAME=$$$$DOC1
PROC 0
  ISPEXEC SELECT PGM(ISPTUTOR) PARM($$$$DOC1)
EXIT CODE(0)
./       ADD   NAME=XMITRECV
PROC 0
CONTROL MAIN NOMSG NOFLUSH
ISPEXEC CONTROL SPLIT ENABLE
ISPEXEC CONTROL ERRORS RETURN
SET &PRFX = SYSPSPRD
SET &NDID1 = N1
SET &NDID2 = N2
ISPEXEC VPUT (NDID1 NDID2) SHARED
SET &DSNAME = &SYSUID..NAMES.TEXT
SET &Z =
ALLOC FI(TSTALC) SHR DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
   DO
      FREE ATTRLIST(NMESCRT)
      CONTROL MSG
      ATTRIB NMESCRT DSORG(PS) RECFM(V B) LRECL(255) BLKSIZE(3120)
      ALLOC DA('&DSNAME.') SP(1,0) TRACKS USING(NMESCRT) +
         FI(TSTALC) VOLUME(LIB002) UNIT(3380) NEW CATALOG
      IF &LASTCC = 0 THEN +
         DO
            OPENFILE TSTALC OUTPUT
            SET &TSTALC = &STR(:ALTCTL.&PRFX..NAMES.TEXT)
            PUTFILE TSTALC
            CLOSFILE TSTALC
         END
      ELSE +
         DO
            WRITE *** UNABLE TO ALLOCATE NICK-NAME DATA SET
            WRITE *** NOTIFY TECHNICAL SERVICES
            FREE FI(TSTALC) DELETE
            EXIT RC(12)
         END
   END
FREE FI(TSTALC) KEEP
CONTROL NOMSG
   ALLOC F(NAMES) DATASET('&PRFX..NAMES.TEXT') SHR
   FREE ATTRLIST(PRTF)
   ATTRIB PRTF DSORG(PS) RECFM(F B A) LRECL(81) BLKSIZE(2106)
   ALLOC DA(XMITN.LIST) SP(5,1) TRACKS USING(PRTF) +
      F(XMTLST) UNIT(WORK) NEW CATALOG
   GOEOD1: ERROR GOTO EFILE1
   OPENFILE NAMES INPUT
   OPENFILE XMTLST OUTPUT
   ISPEXEC TBCREATE XREF +
      KEYS(Z00) +
      NAMES(Z01 Z02 Z03 Z04 Z05 Z06 Z07 Z08 Z09 Z10 Z11 Z12 Z13 Z14 +
      Z15 Z16 Z17 Z18 Z19 Z20 Z21 Z22 Z23 Z24 ZTY) +
      NOWRITE SHARE
   SET &PRTCCHA = 1
   SET &PRTCCHB = 0
   SET &PRTHED1 = &STR(      DAYCO PRODUCTS TSO/E TRANSMIT/RECEIVE)
   SET &PRTHED2 = &STR( NICK NAMES LIST )
   SET &PRTHED3 = &STR(    USER ENTRY - NICK NAME . .  )
   SET &PRTHED4 = &STR(    USER NAME  . . . . . . . .  )
   SET &PRTHED5 = &STR(    LOCATION . . . . . . . . .  )
   SET &PRTHEDB = &STR(                                )
   SET &PRTHED6 = &STR(    TSO ID . . . . . . . . . .  )
   SET &PRTHED7 = &STR(    PHONE NUMBER . . . . . . .  )
   SET &PRTHED8 = &STR(    LIST ENTRY - NICK NAME . .  )
   SET &PRTHED9 = &STR(    REFERS TO NAME(S)  . . . .  )
   SET &TYPTST =
   SET &PASSON = 0
   LOOP01: +
      GETFILE NAMES
      IF &PASSON = 1 THEN GOTO NPGHDR1
      IF &PASSON = 2 THEN GOTO NPGHDR2
      SET &XMTLST = &STR(&PRTCCHA.&PRTHED1.&PRTHED2)
      PUTFILE XMTLST
      SET &PASSON = 1
      GOTO YPGHDR
      NPGHDR1: +
      SET &PASSON = 2
      GOTO YPGHDR
      NPGHDR2: +
      SET &PASSON = 0
      YPGHDR: +
      SET &TYPTST = &SUBSTR(26:29,&NAMES)
      IF &TYPTST = LIST THEN GOTO LOOP01A
         SET &ZTY = N
         SET &Z00 = &SUBSTR(7:14,&NAMES)
         SET &Z01 = &SUBSTR(22:23,&NAMES)
         SET &Z02 = &SUBSTR(33:39,&NAMES)
         ISPEXEC TBADD XREF +
            SAVE(Z00 Z01 Z02 &ZTY)
         SET &XMTLST = &STR(&PRTCCHB)
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED3.&SUBSTR(7:14,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED4.&SUBSTR(47:66,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED5.&SUBSTR(89:105,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(108:128,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED6.&SUBSTR(33:39,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED7.&SUBSTR(137:160,&NAMES))
         PUTFILE XMTLST
      GOTO LOOP01
      LOOP01A: +
         SET &ZTY = L
         SET &Z00 = &SUBSTR(7:14,&NAMES)
         SET &Z01 = &SUBSTR(33:40,&NAMES)
         SET &Z02 = &SUBSTR(42:49,&NAMES)
         SET &Z03 = &SUBSTR(51:58,&NAMES)
         SET &Z04 = &SUBSTR(60:67,&NAMES)
         SET &Z05 = &SUBSTR(69:76,&NAMES)
         SET &Z06 = &SUBSTR(78:85,&NAMES)
         SET &Z07 = &SUBSTR(87:94,&NAMES)
         SET &Z08 = &SUBSTR(96:103,&NAMES)
         SET &Z09 = &SUBSTR(105:112,&NAMES)
         SET &Z10 = &SUBSTR(114:121,&NAMES)
         SET &Z11 = &SUBSTR(123:130,&NAMES)
         SET &Z12 = &SUBSTR(132:139,&NAMES)
         SET &Z13 = &SUBSTR(141:148,&NAMES)
         SET &Z14 = &SUBSTR(150:157,&NAMES)
         SET &Z15 = &SUBSTR(159:166,&NAMES)
         SET &Z16 = &SUBSTR(168:175,&NAMES)
         SET &Z17 = &SUBSTR(177:184,&NAMES)
         SET &Z18 = &SUBSTR(186:193,&NAMES)
         SET &Z19 = &SUBSTR(195:202,&NAMES)
         SET &Z20 = &SUBSTR(204:211,&NAMES)
         SET &Z21 = &SUBSTR(213:220,&NAMES)
         SET &Z22 = &SUBSTR(222:229,&NAMES)
         SET &Z23 = &SUBSTR(231:238,&NAMES)
         SET &Z24 = &SUBSTR(240:249,&NAMES)
         ISPEXEC TBADD XREF +
            SAVE(Z00 Z01 Z02 Z03 Z04 Z05 Z06 Z07 Z08 Z09 Z10 Z11 Z12 +
            Z12 Z13 Z14 Z15 Z16 Z17 Z18 Z19 Z20 Z21 Z22 Z23 Z24 ZTY)
         SET &XMTLST = &STR(&PRTCCHB)
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED8.&SUBSTR(7:14,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHED9.&SUBSTR(33:68,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(69:104,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(105:140,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(141:176,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(177:212,&NAMES))
         PUTFILE XMTLST
         SET &XMTLST = &STR(&PRTCCHB.&PRTHEDB.&SUBSTR(213:248,&NAMES))
         PUTFILE XMTLST
      GOTO LOOP01
EFILE1: +
ERROR OFF
CLOSFILE NAMES
FREE FI(NAMES)
CLOSFILE XMTLST
FREE FI(XMTLST)
LOOP02: +
   ISPEXEC TBTOP XREF
   SET &DSL1 =
   SET &DSL2 =
   SET &DSL3 =
   SET &DSL4 =
   ISPEXEC VPUT (DSL1 DSL2 DSL3 DSL4) SHARED
   ISPEXEC DISPLAY PANEL(XMTSELCT)
   IF &LASTCC = 8 THEN GOTO ECLST
   ISPEXEC VGET (DSL1 DSL2 DSL3 DSL4) SHARED
   IF &STR(&DSL1.&DSL2.&DSL3.&DSL4) ^= S THEN GOTO ERSEL
   IF &DSL1 = S THEN GOTO XMTDAS
   IF &DSL2 = S THEN GOTO RCVDSN
   IF &DSL3 = S THEN GOTO DSPLST
   IF &DSL4 = S THEN GOTO PRT1LST
ERSEL: +
   ISPEXEC DISPLAY PANEL(XMTERR00)
   GOTO LOOP02
XMTDAS: +
   SET &X = N
   SET &MEMSEL = &Z
   SET &MSGST = &Z
   ISPEXEC VPUT (MEMSEL X) SHARED
   ISPEXEC DISPLAY PANEL(XMTDATAP)
      IF &LASTCC = 8 THEN GOTO LOOP02
   ISPEXEC VGET (XMTDSN NICKNM) PROFILE
   ISPEXEC VGET (MEMSEL X) SHARED
   SET &ACM = &X
   SET &ADDRL = &NICKNM
   SET &DDNAM =
   SET &DSORG =
   IF &ACM = O THEN GOTO ONLMSG
   ISPEXEC LMINIT DATAID(DDNAM) DATASET(&XMTDSN) +
      ENQ(SHR) ORG(DSORG)
   IF &LASTCC ^= 0 THEN +
      DO
         ISPEXEC DISPLAY PANEL(XMTERR01)
         GOTO XMTDAS
      END
   IF &MEMSEL = ALL THEN +
      DO
         IF &DSORG = PO THEN GOTO NOMEML
         ISPEXEC DISPLAY PANEL(XMTERR02)
         ISPEXEC LMFREE DATAID(&DDNAM)
         GOTO XMTDAS
      END
   IF &MEMSEL = SOME THEN +
      DO
         IF &DSORG = PO THEN GOTO MEMDSP
         ISPEXEC DISPLAY PANEL(XMTERR03)
         ISPEXEC LMFREE DATAID(&DDNAM)
         GOTO XMTDAS
      END
   IF &MEMSEL = &Z THEN +
      DO
         IF &DSORG = PO THEN GOTO MEMDST
         IF &DSORG = PS THEN GOTO NOMEML
      END
   MEMDST: +
      ISPEXEC DISPLAY PANEL(XMTERR04)
      IF &LASTCC ^= 0 THEN +
         DO
            ISPEXEC LMFREE DATAID(&DDNAM)
            GOTO XMTDAS
         END
      IF &ZCMD ^= LIST THEN GOTO NOMEML
   MEMDSP: +
      ISPEXEC LMOPEN DATAID(&DDNAM) OPTION(INPUT)
      ISPEXEC TBCREATE XMTML KEYS(QMNE) +
         NAMES(QVRM S LST ZLCDATE ZLMDATE ZLMTIME ZLCNORC ZLINORC +
            ZLMNORC ZLUSER) +
            NOWRITE SHARE
      MINLOP: +
      SET &S = &Z
      SET &LST = &Z
         ISPEXEC LMMLIST DATAID(&DDNAM) OPTION(LIST) +
            MEMBER(QMNE) STATS(YES)
         SET &RCODE = &LASTCC
         IF &RCODE ^= 0 THEN    /* RETURN CODES                  */  +
            DO                  /* 4  - EMPTY MEMBER LIST        */
               IF &RCODE = 4 THEN +
                  DO
                     ISPEXEC DISPLAY PANEL(XMTERR05)
                     ISPEXEC LMCLOSE DATAID(&DDNAM)
                     ISPEXEC TBCLOSE XMTML
                     ISPEXEC LMFREE DATAID(&DDNAM)
                     GOTO XMTDAS
                  END
                ELSE +
                  GOTO EMINLOP
            END                 /* 8  - "LIST" OPTION END LIST   */
      SET &QVRM = &STR(&ZLVERS..&ZLMOD)
      ISPEXEC TBADD XMTML +
         SAVE(QMNE QVRM S LST ZLCDATE ZLMDATE ZLMTIME ZLCNORC +
            ZLINORC ZLMNORC ZLUSER)
      GOTO MINLOP
      EMINLOP: +
      ISPEXEC LMMLIST DATAID(&DDNAM) OPTION(FREE)
      ISPEXEC LMCLOSE DATAID(&DDNAM)
      ISPEXEC LMFREE DATAID(&DDNAM)
      ISPEXEC TBTOP XMTML
      SET &MEMLST = &Z
      SET &TMPLST = &Z
      MINLOP2: +
         SET &SCR = &Z
         ISPEXEC VGET (SCR) PROFILE
         IF &SCR = &Z THEN +
            DO
               SET &SCR = PAGE
               ISPEXEC VPUT (SCR) PROFILE
            END
         ISPEXEC TBDISPL XMTML PANEL(XMTTABLE) +
            CURSOR(ZCMD) +
            AUTOSEL(YES)
         SET &RCODE = &LASTCC
         IF &RCODE > 4 THEN GOTO EMNLOP2
         IF &ZCMD = CAN THEN +
            DO
               SET &MEMLST = &Z
               SET &TMPLST = &Z
               GOTO CANLOP2
            END
         IF &S ^= S THEN GOTO MINLOP2
         SET &MEMLST = &STR(&TMPLST &QMNE)
         SET &TMPLST = &STR(&MEMLST)
         SET &S = &Z
         SET &LST = SELECTED
         ISPEXEC TBMOD XMTML +
            SAVE(QMNE QVRM S LST ZLCDATE ZLMDATE ZLMTIME ZLCNORC +
            ZLINORC ZLMNORC ZLUSER)
         GOTO MINLOP2
      EMNLOP2: +
         ISPEXEC TBCLOSE XMTML
         IF &MEMLST ^= &Z THEN GOTO YSMEML
         ISPEXEC DISPLAY PANEL(XMTERR06)
         GOTO XMTDAS
      CANLOP2: +
         ISPEXEC TBCLOSE XMTML
         GOTO XMTDAS
   NOMEML: +
      IF &ACM = Y THEN +
         DO
            SET &MSGST = &STR(MESSAGE)
         END
      SET &ZCMD = &Z
      ISPEXEC LMFREE DATAID(&DDNAM)
      SET &TSADDR = &SUBSTR(1:2,&ADDRL)
      IF &TSADDR = &NDID1 THEN GOTO XTDSO1
      IF &TSADDR = &NDID2 THEN GOTO XTDSO1
      ISPEXEC TBTOP XREF
      SET &Z00 = &ADDRL
      ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)
      ISPEXEC TBSCAN XREF ARGLIST(Z00)
      IF &LASTCC ^= 0 THEN GOTO LSTERR
      XTDSO1: +
         ISPEXEC CONTROL DISPLAY REFRESH
         CLRSCRN
         XMIT (&ADDRL) DATASET(&XMTDSN) NOTIFY(ALL) &MSGST
         GOTO EXMIT
   ONLMSG: +
      SET &TSADDR = &SUBSTR(1:2,&ADDRL)
      IF &TSADDR = &NDID1 THEN GOTO XTDSO3
      IF &TSADDR = &NDID2 THEN GOTO XTDSO3
      ISPEXEC TBTOP XREF
      SET &Z00 = &ADDRL
      ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)
      ISPEXEC TBSCAN XREF ARGLIST(Z00)
      IF &LASTCC ^= 0 THEN GOTO LSTERR
      XTDSO3: +
         ISPEXEC CONTROL DISPLAY REFRESH
         CLRSCRN
         XMIT (&ADDRL)
         GOTO EXMIT
   YSMEML: +
      IF &ACM = Y THEN +
         DO
            SET &MSGST = &STR(MESSAGE)
         END
      SET &TSADDR = &SUBSTR(1:2,&ADDRL)
      IF &TSADDR = &NDID1 THEN GOTO XTDSO2
      IF &TSADDR = &NDID2 THEN GOTO XTDSO2
      ISPEXEC TBTOP XREF
      SET &Z00 = &ADDRL
      ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)
      ISPEXEC TBSCAN XREF ARGLIST(Z00)
      IF &LASTCC ^= 0 THEN GOTO LSTERR
      XTDSO2: +
         ISPEXEC CONTROL DISPLAY REFRESH
         CONTROL MSG
         CLRSCRN
     XMIT (&ADDRL) DATASET(&XMTDSN) MEMBERS(&MEMLST) NOTIFY(ALL) &MSGST
         CONTROL NOMSG
EXMIT: +
   SET &DADDR = &Z
   SET &DNAME1 = &Z
   SET &DNAME2 = &Z
   SET &SNAME = &SYSUID
   SET &JCLAS = A
   SET &MCLAS = Z
   SET &RCFID = XMTUSER
   SET &RCFPW = XMT1234
   IF &TSADDR = &NDID1 THEN GOTO EX1MIT
   IF &TSADDR = &NDID2 THEN GOTO EX1MIT
   ISPEXEC TBCREATE DSTBL1 NAMES(DNAME1) NOWRITE SHARE
   ISPEXEC TBCREATE DSTBL2 NAMES(DNAME2) NOWRITE SHARE
   SET &TSUSER = &ADDRL
   SET &TBL1 = 0
   SET &TBL2 = 0
   ISPEXEC VPUT (TBL1 TBL2) SHARED
   ISPEXEC TBTOP XREF
   SET &Z00 = &ADDRL
   ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)
   ISPEXEC TBSCAN XREF ARGLIST(Z00)
   IF &ZTY = L THEN GOTO LVEL01
   SET &TSADDR = &Z01
   SET &TSUSER = &Z02
   ISPEXEC TBCLOSE DSTBL1
   ISPEXEC TBCLOSE DSTBL2
   GOTO EX1MITA
   LVEL01: +
      SET &T1Z01 = &Z01
      SET &T1Z02 = &Z02
      SET &T1Z03 = &Z03
      SET &T1Z04 = &Z04
      SET &T1Z05 = &Z05
      SET &T1Z06 = &Z06
      SET &T1Z07 = &Z07
      SET &T1Z08 = &Z08
      SET &T1Z09 = &Z09
      SET &T1Z10 = &Z10
      SET &T1Z11 = &Z11
      SET &T1Z12 = &Z12
      SET &T1Z13 = &Z13
      SET &T1Z14 = &Z14
      SET &T1Z15 = &Z15
      SET &T1Z16 = &Z16
      SET &T1Z17 = &Z17
      SET &T1Z18 = &Z18
      SET &T1Z19 = &Z19
      SET &T1Z20 = &Z20
      SET &T1Z21 = &Z21
      SET &T1Z22 = &Z22
      SET &T1Z23 = &Z23
      SET &T1Z24 = &Z24
      LN1T01: +
         WRITE ** STILL WORKING.  HANG IN THERE.
         SET &LVL1NME = &T1Z01
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T02: +
         IF &T1Z02 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z02
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T03: +
         IF &T1Z03 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z03
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T04: +
         IF &T1Z04 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z04
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T05: +
         WRITE ** STILL WORKING.  HANG IN THERE.
         IF &T1Z05 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z05
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T06: +
         IF &T1Z06 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z06
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T07: +
         IF &T1Z07 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z07
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T08: +
         IF &T1Z08 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z08
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T09: +
         IF &T1Z09 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z09
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T10: +
         WRITE ** STILL WORKING.  HANG IN THERE.
         IF &T1Z10 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z10
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T11: +
         IF &T1Z11 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z11
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T12: +
         IF &T1Z12 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z12
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T13: +
         IF &T1Z13 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z13
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T14: +
         IF &T1Z14 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z14
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T15: +
         WRITE ** STILL WORKING.  HANG IN THERE.
         IF &T1Z15 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z15
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T16: +
         IF &T1Z16 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z16
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T17: +
         IF &T1Z17 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z17
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T18: +
         IF &T1Z18 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z18
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T19: +
         IF &T1Z19 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z19
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T20: +
         IF &T1Z20 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z20
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T21: +
         WRITE ** STILL WORKING.  HANG IN THERE.
         IF &T1Z21 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z21
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T22: +
         IF &T1Z22 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z22
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T23: +
         IF &T1Z23 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z23
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      LN1T24: +
         IF &T1Z24 = &Z THEN GOTO ELN1
         SET &LVL1NME = &T1Z24
         ISPEXEC VPUT (LVL1NME) SHARED
         %XMTRCVL1
         IF &LASTCC ^= 0 THEN GOTO XMTDAS
      ELN1: +
         ISPEXEC VGET (TBL1 TBL2) SHARED
         ALLOC FI(ISPFILE) DA(XMIT.JOBSUB) NEW CATALOG RECFM(F B) +
            LRECL(80) BLKSIZE(3120) DSORG(PO) TRACKS UNIT(WORK) +
            SP(15,0) DIR(2)
         IF &TBL1 = 0 THEN GOTO ELN2
         ISPEXEC FTOPEN
         WRITE ** STILL WORKING.  HANG IN THERE.
         ISPEXEC FTINCL XMTJCL1
         ISPEXEC FTCLOSE NAME(XMTJCL1)
         SUB (XMIT.JOBSUB(XMTJCL1)) NOHOLD NOJOBCHAR NOUSER NONOTIFY
      ELN2: +
         IF &TBL2 = 0 THEN GOTO ELN3
         ISPEXEC FTOPEN
         WRITE ** STILL WORKING.  HANG IN THERE.
         ISPEXEC FTINCL XMTJCL2
         ISPEXEC FTCLOSE NAME(XMTJCL2)
         SUB (XMIT.JOBSUB(XMTJCL2)) NOHOLD NOJOBCHAR NOUSER NONOTIFY
      ELN3: +
         FREE FI(ISPFILE) DELETE
         GOTO XMTDAS
   EX1MIT: +
      SET &TSUSER = &STR(&ADDRL.       )
      SET &TSUSER = &SUBSTR(3:9,&TSUSER)
   EX1MITA: +
      SET &TMPZ = &STR(/*XEQ)
      ALLOC FI(NDJCL) DA(SUBJCL.ASM) RECFM(F B) DSORG(PS) LRECL(80) +
         BLKSIZE(3120) NEW TRACKS UNIT(WORK) NEW CATALOG +
         SP(15,0)
      OPENFILE NDJCL OUTPUT
      SET &NDJCL = &STR(//&SYSUID.A JOB (99999,T),'&SYSUID',)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//        CLASS=&JCLAS,MSGCLASS=&MCLAS,)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//        NOTIFY=&SYSUID,)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//        USER=&RCFID,PASSWORD=&RCFPW)
      PUTFILE NDJCL
      SET &NDJCL = &STR(&TMPZ &TSADDR )
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SNDMSG  EXEC PGM=IKJEFT01)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSLBC   DD DISP=SHR,DSN=SYS1.BRODCAST)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSUADS  DD DISP=SHR,DSN=SYS1.UADS)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSHELP  DD DISP=SHR,DSN=SYS1.HELP)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSPRINT DD SYSOUT=*)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSTSPRT DD SYSOUT=*)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSTERM  DD SYSOUT=*)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSUDUMP DD SYSOUT=*)
      PUTFILE NDJCL
      SET &NDJCL = &STR(//SYSTSIN  DD *)
      PUTFILE NDJCL
      SET &NDJCL = &STR(SE 'A FILE FROM &SNAME HAS BEEN SENT TO YOU' +
 USER(&TSUSER) LOGON)
      PUTFILE NDJCL
      SET &NDJCL = &STR(/*)
      PUTFILE NDJCL
      CLOSFILE NDJCL
      SUB (SUBJCL.ASM) NOHOLD NOJOBCHAR NOUSER NONOTIFY
      FREE FI(NDJCL) DELETE
      GOTO XMTDAS
LSTERR: +
   ISPEXEC DISPLAY PANEL(XMTERR07)
   GOTO XMTDAS
RCVDSN: +
   ISPEXEC CONTROL DISPLAY REFRESH
   CONTROL MSG PROMPT
   CLRSCRN
   RECEIVE
   CONTROL NOMSG
   GOTO LOOP02
PRT1LST: +
   ISPEXEC VGET (Q C DST FORM) PROFILE
   IF &Q = &Z THEN +
      DO
         SET &Q = A
      END
   IF &C = &Z THEN +
      DO
         SET &C = 1
      END
   IF &DST = &Z THEN +
      DO
         SET &DST = LOCAL
      END
   IF &FORM = &Z THEN +
      DO
         SET &FORM = STD
      END
   ISPEXEC VPUT (S C DST FORM) PROFILE
   ISPEXEC DISPLAY PANEL(XMTPRINT)
   IF &LASTCC = 8 THEN GOTO LOOP02
   ISPEXEC VGET (S C DST FORM) PROFILE
   DSPRINT XMITN.LIST &DST CLASS(&Q.) FORMS(&FORM.) COPIES(&C) NOHDR +
      NOEJMESS
   GOTO LOOP02
DSPLST: +
   ISPEXEC BROWSE DATASET(XMITN.LIST)
   GOTO LOOP02
ECLST: +
   ISPEXEC TBCLOSE XREF
   DELETE (XMITN.LIST)
EXIT
./       ADD   NAME=XMTRCVL1
PROC 0
CONTROL NOFLUSH
ISPEXEC CONTROL ERRORS RETURN
SET &Z =
ISPEXEC VGET (LVL1NME NDID1 NDID2) SHARED
ISPEXEC TBTOP XREF
SET &Z00 = &LVL1NME
ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)
ISPEXEC TBSCAN XREF ARGLIST(Z00)
IF &ZTY = L THEN GOTO LVL2CLL
IF &Z01 ^= &NDID1 THEN GOTO NDO02
   SET &TBL1 = 1
   ISPEXEC VPUT (TBL1) SHARED
   SET &DNAME1 = &Z02
   ISPEXEC TBADD DSTBL1 SAVE(DNAME1)
   GOTO GBACK
NDO02: +
   SET &TBL2 = 1
   ISPEXEC VPUT (TBL2) SHARED
   SET &DNAME2 = &Z02
   ISPEXEC TBADD DSTBL2 SAVE(DNAME2)
   GOTO GBACK
LVL2CLL: +
   SET &LVL2Z01 = &Z01
   SET &LVL2Z02 = &Z02
   SET &LVL2Z03 = &Z03
   SET &LVL2Z04 = &Z04
   SET &LVL2Z05 = &Z05
   SET &LVL2Z06 = &Z06
   SET &LVL2Z07 = &Z07
   SET &LVL2Z08 = &Z08
   SET &LVL2Z09 = &Z09
   SET &LVL2Z10 = &Z10
   SET &LVL2Z11 = &Z11
   SET &LVL2Z12 = &Z12
   SET &LVL2Z13 = &Z13
   SET &LVL2Z14 = &Z14
   SET &LVL2Z15 = &Z15
   SET &LVL2Z16 = &Z16
   SET &LVL2Z17 = &Z17
   SET &LVL2Z18 = &Z18
   SET &LVL2Z19 = &Z19
   SET &LVL2Z20 = &Z20
   SET &LVL2Z20 = &Z20
   SET &LVL2Z21 = &Z21
   SET &LVL2Z22 = &Z22
   SET &LVL2Z23 = &Z23
   SET &LVL2Z24 = &Z24
   LN1N01: +
      SET &LVL2NME = &LVL2Z01
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N02: +
      IF &LVL2Z02 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z02
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N03: +
      IF &LVL2Z03 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z03
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N04: +
      IF &LVL2Z04 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z04
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N05: +
      IF &LVL2Z05 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z05
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N06: +
      IF &LVL2Z06 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z06
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N07: +
      IF &LVL2Z07 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z07
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N08: +
      IF &LVL2Z08 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z08
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N09: +
      IF &LVL2Z09 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z09
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N10: +
      IF &LVL2Z10 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z10
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N11: +
      IF &LVL2Z11 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z11
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N12: +
      IF &LVL2Z12 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z12
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N13: +
      IF &LVL2Z13 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z13
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N14: +
      IF &LVL2Z14 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z14
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N15: +
      IF &LVL2Z15 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z15
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N16: +
      IF &LVL2Z16 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z16
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N17: +
      IF &LVL2Z17 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z17
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N18: +
      IF &LVL2Z18 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z18
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N19: +
      IF &LVL2Z19 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z19
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N20: +
      IF &LVL2Z20 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z20
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N21: +
      IF &LVL2Z21 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z21
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N22: +
      IF &LVL2Z22 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z22
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N23: +
      IF &LVL2Z23 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z23
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
   LN1N24: +
      IF &LVL2Z24 = &Z THEN GOTO GBACK
      SET &LVL2NME = &LVL2Z24
      ISPEXEC VPUT (LVL2NME) SHARED
      %XMTRCVL2
      IF &LASTCC ^= 0 THEN GOTO EGBACK
GBACK: +
EXIT CODE(0)
EGBACK: +
EXIT CODE(4)
./       ADD   NAME=XMTRCVL2
PROC 0
CONTROL NOFLUSH
ISPEXEC CONTROL ERRORS RETURN
SET &Z =
ISPEXEC VGET (LVL2NME NDID1 NDID2) SHARED
ISPEXEC TBTOP XREF
SET &Z00 = &LVL2NME
ISPEXEC TBSARG XREF NAMECOND(Z00 EQ)
ISPEXEC TBSCAN XREF ARGLIST(Z00)
IF &ZTY = L THEN GOTO LVL2ERR
IF &Z01 ^= &NDID1 THEN GOTO NDO02
   SET &TBL1 = 1
   ISPEXEC VPUT (TBL1) SHARED
   SET &DNAME1 = &Z02
   ISPEXEC TBADD DSTBL1 SAVE(DNAME1)
   GOTO GBACK
NDO02: +
   SET &TBL2 = 1
   ISPEXEC VPUT (TBL2) SHARED
   SET &DNAME2 = &Z02
   ISPEXEC TBADD DSTBL2 SAVE(DNAME2)
   GOTO GBACK
LVL2ERR: +
   ISPEXEC DISPLAY PANEL(XMTERRL2)
   GOTO EGBACK
GBACK: +
EXIT CODE(0)
EGBACK: +
EXIT CODE(4)
