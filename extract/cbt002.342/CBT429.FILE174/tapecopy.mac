TAPECOPY TITLE '           TAPECOPY - PROGRAM TO COPY TAPE-TO-TAPE'
************                                          *****************
* TAPECOPY *                                          * VERSION 09/91 *
************                                          *****************
*
*
*
*        THIS IS A GENERALIZED TAPE-TO-TAPE COPY PROGRAM.  IT USES
*        QSAM, FORCING LABEL=BLP, AND PERFORMS ITS OWN LABEL
*        PROCESSING INTERNALLY.
*
*
*
*
*        FEATURES AND FACILITIES *NOT* SUPPORTED:
*
*           ASCII STANDARD LABELS
*           NON-STANDARD LABELS
*           MULTI-VOLUME DATASETS
*           3480/3490 COMPACTION (FUTURE SUPPORT)
*           BLOCK COUNT GREATER THAN 999999 (FUTURE SUPPORT)
*
*
*
*        ATTRIBUTES:
*
*           PROBLEM PROGRAM
*           AUTHORIZED (AC=1) *
*           NON-REENTRANT
*           NONRESIDENT, IN LINKLIB
*
*           * PROGRAM AUTHORIZATION IS REQUIRED IN ORDER TO SET
*              LABEL=BLP VIA OPEN TYPE=J.
*
*
*
*        SYSTEM LEVEL: THIS PROGRAM IS BELIEVED TO WORK WITH ALL
*           OPERATING SYSTEM LEVELS FROM OS/MVT THROUGH MVS/ESA.
*           THE PRIMARY OPERATING SYSTEM DEPENDENCY IS IN DETERMINING
*           THE TAPE UNIT SERIAL NUMBER FOR 34XX TAPE DRIVES, AND
*           THAT CODE IS DUAL-PATHED AS NEEDED.
*
*
*
*        SYSTEM DSECTS REQUIRED (FROM SYS1.MODGEN):
*
*           IEFTIOT1 - TIOT (TASK INPUT/OUTPUT TABLE)
*           IEFUCBOB - UCB (UNIT CONTROL BLOCK)
*
*           NOTE: AT MVS/370 OR SOME LEVELS OF MVS/XA, SYS1.MODGEN
*              DOESN'T EXIST AND THESE MACROS ARE IN SYS1.AMODGEN.
*              IEZDEB (DEB) AND IEFJFCBN (JFCB) ARE ALSO NEEDED
*              FROM SYS1.AMODGEN IF THEY AREN'T IN SYS1.MACLIB.
*
*
*
*        AUTHOR:
*
*           ARON EISENPRESS
*           MANAGER, MVS SYSTEMS
*           CITY UNIVERSITY OF NEW YORK--UNIVERSITY COMPUTER CENTER
*           555 WEST 57TH STREET, 16TH FLOOR
*           NEW YORK, NEW YORK  10019
*
*           PHONE: 212/903-3618
*
*           BITNET: AFECU@CUNYVM
*           INTERNET: AFECU@CUNYVM.CUNY.EDU
*
*
*
*        COPYRIGHT STATEMENT:
*
*           TAPECOPY (C) COPYRIGHT 1976, 1979, 1981, 1982, 1985,
*                1991, THE CITY UNIVERSITY OF NEW YORK.  PERMISSION
*                IS GRANTED TO DISTRIBUTE THIS CODE ON THE CBT MVS
*                UTILTIES TAPE.
*
*
*        DISCLAIMER:
*
*          +-------------------------------------------------------+
*          ×                                                       ×
*          × THIS PROGRAM HAS BEEN USED SUCCESSFULLY, AND TO THE   ×
*          × BEST OF OUR KNOWLEDGE IT IS OPERATIONAL.  HOWEVER, NO ×
*          × WARRANTY IS MADE TO THE ACCURACY OF THIS PROGRAM OR   ×
*          × RELATED MATERIAL, AND NO RESPONSIBILITY IS ASSUMED    ×
*          × FOR ANY MODIFICATION DIRECTLY OR INDIRECTLY CAUSED    ×
*          × BY THE USE OF THIS PROGRAM.  WHILE WE WOULD LIKE TO   ×
*          × KNOW OF ANY ERRORS IN THIS PROGRAM, THERE IS NO       ×
*          × COMMITMENT TO FIX THEM.  THIS PROGRAM IS DISTRIBUTED  ×
*          × WITHOUT ANY WARRANTIES EITHER EXPRESS OR IMPLIED.     ×
*          ×                                                       ×
*          +-------------------------------------------------------+
*
*
*
*        CHANGE HISTORY:
*
** CORRECTIONS: OCTOBER, 1976:
**              TPC003I SUBMESSAGE REGARDING DCB INFORMATION FOR THE
**               OUTPUT TAPE WAS NOT ISSUED IF THE OUTPUT TAPE WAS
**               NOT SL BUT WAS BEING LABELLED.
         SPACE
**              DECEMBER, 1976:
**              TPC006I MESSAGE HAD AN EXTRANEOUS SEQUENCE NUMBER
**               WHEN INPUT STARTED AT OTHER THAN THE FIRST FILE
**               AND OUTPUT WAS NOT A TAPE.
         SPACE
**              SEPTEMBER, 1979:
**              TPC033A MESSAGE HAD INCORRECT BLOCK COUNT IF ANY
**               PRIOR BLOCKS WERE SKIPPED ON INPUT TAPE.
**              CODE AT 'COPYTERM' IS NOW USED AFTER MESSAGE
**               TPC033A IS ISSUED TO AVOID S214 WHEN INPUT FILE
**               HAS NO EOF.
**              CODE WAS ADDED TO CHECK THE BLOCK COUNT IN THE
**               EOF1/EOV1 LABEL AND ISSUE MESSAGE TPC036A IF
**               IT IS NOT AS EXPECTED.
**              MISPLACED LABELS COULD HAVE SET INCORRECT RETURN
**               CODES.
         SPACE
**              APRIL, 1981:
**              TPC032A MESSAGE WAS ISSUED WHEN AN EOV LABEL WAS
**               FOUND WHEN AN EOF LABEL WAS EXPECTED.  USE OF A
**               BRANCH TABLE WAS INCORRECT.
**              MESSAGES TPC018A AND TPC019A HAVE BEEN ADDED
**               FOR SITUATIONS WHEN SCRATCH TAPES ARE REQUESTED
**               FOR INPUT OR OUTPUT, RESPECTIVELY.  FOR INPUT,
**               THIS AVOIDS A 413-18 ABEND; FOR OUTPUT, EITHER
**               A 413-18 OR AN 837-08 ABEND WOULD OCCUR DEPENDING
**               ON THE LABEL TYPE SPECIFIED.  SCRATCH TAPES CAN
**               PROBABLY BE SUPPORTED FOR OUTPUT, BUT SOME METHOD
**               FOR LABEL VERIFICATION WITHOUT A 413-18 ABEND WOULD
**               HAVE TO BE FOUND.
**              CODE HAS BEEN CORRECTED TO NOT INCREASE BLKSIZE TO
**               LARGER THAN 32,760, TO AVOID AN 013-68 ABEND.
**               NOTE THAT THERE'S NO WAY OF DETECTING LOSS OF DATA
**               FROM BLOCKS LARGER THAN 32,760 BYTES, BUT OS WILL
**               NOT CREATE SUCH BLOCKS (EXCEPT VIA EXCP).
         SPACE
**              APRIL, 1982:
**              THE DATE AND TIME ARE PRINTED IN THE HEADING MESSAGE.
**              MESSAGE TPC025A IS ISSUED AND THE TAPECOPY TERMINATED
**               IF THE EXPIRATION DATE ON THE OUTPUT TAPE HAS NOT
**               PASSED.
**              MESSAGE TPC037A IS ISSUED AS A STRONG WARNING THAT
**               DATA COULD BE LOST IF THE LARGEST BLOCK SIZE COPIED
**               WAS 32,760.
**              TPC003I MESSAGE NOW INCLUDES THE INPUT VOLUME SERIAL
**               EVEN WHEN THE "PID" OPTION IS USED.
         SPACE
**              DECEMBER, 1985:
**              ADD CODE TO SUPPORT THE 3480 TAPE DRIVE -- TO COPY
**               THE TU SERIAL NUMBER TO THE HDR2 OUTPUT LABEL.
**               NOTE THAT OPEN FIXES FOR OZ88788 AND OZ92838 ARE
**               REQUIRED FOR THIS TO WORK IN 3480 COMPATIBILITY MODE.
**              UPDATE BASE REGISTERS FOR MORE ADDRESSABILITY.
         SPACE
**              JANUARY, 1993:
**              SUPPORT MVS XA/ESA & DFP XA/ESA.  THE LOCATION OF THE
**               3480 TU SERIAL (UCBCXTUS) HAS CHANGED.
**              SUPPORT DATES BEYOND 1999, BOTH IN THE TAPE LABELS
**               AND IN THE EXECUTION ENVIRONMENT (IN THE DAY-OF-WEEK
**               AND MONTH-OF-YEAR ALGORITHMS, WHICH HAD PREVIOUSLY
**               ASSUMED THE YEAR TO BE IN THE 1900'S.  SUPPORT THE
**               DEFINED "NEVER-EXPIRE" DATES (99/365 ET. AL.).
**              UPDATE BASE REGISTERS FOR MORE ADDRESSABILITY.
**              ADD DEFINITIONS FOR 3480/3490 COMPACTION FIELDS,
**               AND FOR GREATER-THAN-999999 BLOCKCOUNT SUPPORT.
**               HOWEVER, THE SUPPORTING CODE HAS NOT BEEN WRITTEN.
         TITLE '           TAPECOPY - "SCAN" MACRO TO SCAN PARAMETERS'
         MACRO
&LABEL   SCAN  &FIELD=,&END=,&NEXT=,&NAME=,&MAXLEN=8,&INIT=,           *
               &DEFAULT=DEFAULT
.*    THIS MACRO SCANS A PARAMETER LIST UP TO A COMMA.
.*    REGISTERS 1 - 9 ARE USED.
.*    IF A NON-NULL VALUE FOR &INIT IS USED, INITIALIZATION OF
.*             REGISTERS IS DONE.
.*
.*    VARIABLES:
.*       &FIELD:   RECEIVING FIELD FOR PARAMETER.
.*       &END:     EXIT FOR END OF LIST.
.*       &NEXT:    EXIT AFTER FINDING COMMA.
.*       &NAME:    NAME FOR GENERATED LABELS (<= 6 CHAR.)
.*             NOTE:  EXIT FOR IMMEDIATE COMMA IS NO&NAME.
.*       &MAXLEN:  MAXIMUM LENGTH FOR & FIELD (DEFAULT = 8).
.*       &INIT:    INITIALIZATION (SEE ABOVE).
.*       &DEFAULT: EXIT (WHEN INIT USED) FOR NO LIST.
.*
         LCLA  &LENM1
         LCLC  &LBL
&LENM1   SETA  &MAXLEN-1
         AIF   ('&INIT' EQ '').NOINIT
         SPACE
*
*      REGISTER USAGE:
*       R1: LIST ADDRESS
*        2: CONSTANT 1
*        3: LIST LEN. - 1
*        4: INDEX FOR LIST.
*        5: SINGLE CHARACTER BEING TESTED.
*        6: COMMA
*        7: NEW LIST LENGTH
*        8: CONSTANT 1
*        9: MAX. LEN. OF NEW LIST - 1
*
         SPACE
* INITIALIZE REGISTERS --
         SPACE
&LABEL   L     R1,0(,R1)           R1 = PARAMETER ADDRESS
         LA    R2,1                R2 = 1
         SR    R3,R3               R3 = 0
         AH    R3,0(,R1)           R3 = LIST LENGTH
         BNP   &DEFAULT            IF NO PARAMETERS
         SR    R3,R2               R3 = LIST LENGTH - 1
         LA    R1,2(,R1)           R1 = LIST ADDRESS
         SR    R4,R4               R4 = 0
         SR    R5,R5               R5 = 0
         LA    R6,C','             R6 = COMMA
         AGO   .INIT
.NOINIT  ANOP
&LBL     SETC  '&LABEL'
.INIT    SPACE
* LOOP TO SCAN PARAMETER LIST
         SPACE
&LBL     IC    R5,0(R4,R1)         FIRST CHAR. IN R5
         CR    R5,R6               A COMMA?
         BE    NO&NAME             YES; EXIT
         SR    R7,R7               NO; INITIALIZE: R7 = 0
         LR    R8,R2               R8 = 1
         LA    R9,&LENM1           R9 = MAX. LENGTH - 1
         MVC   &FIELD,=CL&MAXLEN' '  BLANK OUT FIELD
         B     #&NAME              ENTER LOOP
@&NAME   IC    R5,0(R4,R1)         NEXT CHAR. IN R5
         CR    R5,R6               A COMMA?
         BE    $&NAME              YES; EXIT
#&NAME   STC   R5,&FIELD.(R7)      NO; STORE
         BXH   R7,R8,$&NAME        INCR. & TEST FIELD LENGTH
         BXLE  R4,R2,@&NAME        INCR. & TEST INDEX REG.
$&NAME   BXH   R4,R2,&END          EXIT IF END OF LIST
         BE    &NEXT               SKIP IF COMMA LAST CHAR.
         IC    R5,0(R4,R1)         LOOK FOR COMMA - NEXT CHAR. IN R5
         BXH   R4,R2,&END          INCR. & TEST INDEX
         CR    R5,R6               A COMMA?
         BNE   *-10                LOOP BACK IF NOT
         B     &NEXT               EXIT IF COMMA
         SPACE
*    END OF SCAN
         SPACE
         MEND
         TITLE '           TAPECOPY - PROGRAM TO COPY TAPE-TO-TAPE'
*******************************************************************
*                                                                 *
*              INITIALIZE PROCESSING                              *
*                                                                 *
*******************************************************************
         SPACE 2
TAPECOPY CSECT
         SPACE
* DEFINE REGISTERS SYMBOLICALLY
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
*---------------------------------------------------------------------*
COPYRITE DC    C'TAPECOPY (C) COPYRIGHT 1976, 1979, 1981, 1982, ' SEP91
         DC    C'1985, 1991 -- CITY UNIVERSITY OF NEW YORK'       SEP91
         DC    C'VERSION 09/91, ASSEMBLED &SYSDATE &SYSTIME'      SEP91
*---------------------------------------------------------------------*
         SPACE
         PRINT DATA
BEGINING SAVE  (14,12)             SAVE REGISTERS                 DEC85
         BALR  R10,0               GET A BASE REGISTER            DEC85
REGBASE  DS    0H                  AND A LABEL                    DEC85
         USING REGBASE,R10         TELL THE ASSEMBLER             DEC85
         LA    R11,4095(,R10)      AND A SECOND BASE              DEC85
         USING REGBASE+4095,R11    TELL IT AGAIN                  DEC85
         LA    R12,4095(,R11)      WE NEED A THIRD BASE TOO       DEC85
         USING REGBASE+4095+4095,R12  (NO HOME PLATE THO)         DEC85
         LA    R2,SAVE             CHAIN
         ST    R13,SAVE+4          THE
         ST    R2,8(,R13)          SAVE
         LR    R13,R2              AREAS
*===============================================================  SEP91
* N.B. CODE FOLLOWING HERE UNTIL LABEL "AROUND" *CANNOT* CALL  *  SEP91
*      ANY SUBROUTINES, BECAUSE THE BASE REGISTERS ARE GOING   *  SEP91
*      TO BE RELOADED THEN, TO EXTEND ADDRESSABILITY.          *  SEP91
*===============================================================  SEP91
         EJECT
*******************************************************************
*                                                                 *
*              PROCESS PARM FIELD:                                *
*                                                                 *
*        PARM='LABEL1,LABEL2,OWNER',....                          *
*                                                                 *
*        LABEL1 IS TO REPLACE THE VOL=SER=______ ON THE DD CARD   *
*              FOR TAPE1.  IT IS VALID ONLY FOR LABEL=(,BLP).     *
*        LABEL2 WILL BE THE NEW LABEL ON TAPE2.  UNLESS           *
*              LABEL=(,BLP), THE CURRENT LABEL WILL BE VERIFIED.  *
*        OWNER WILL REPLACE THE CURRENT OWNER INFORMATION IN THE  *
*              VOLUME LABEL ON TAPE2 IF LABEL2 IS SPECIFIED.      *
*                                                                 *
*******************************************************************
         SPACE 2
* R14 IS USED AS A TEMPORARY BASE REGISTER HERE TO PROVIDE        SEP91
*  ADDITIONAL ADDRESSABILITY, IF NEEDED, TO "INVOL" AND           SEP91
*  CAVEAT PROGRAMMATUR!                                           SEP91
         SPACE ,                                                  SEP91
         L     R14,=A(T)           SET TEMPORARY BASE             SEP91
         USING T,R14               TELL THE ASSEMBLER             SEP91
         SPACE 2                                                  SEP91
* SCAN FOR THE REAL INPUT VOLUME PARAMETER
         SPACE
         SCAN FIELD=INVOL,END=DONESCAN,NEXT=SCAN2,NAME=SCAN1,MAXLEN=6, *
               INIT=YES,DEFAULT=DONESCAN
NOSCAN1  BXH   R4,R2,DONESCAN      SKIP OVER THE COMMA
         SPACE
* SCAN FOR THE NEW OUTPUT VOLUME PARAMETER
         SPACE
SCAN2    SCAN  FIELD=OUTVOL,END=DONESCAN,NEXT=SCAN3,NAME=SCAN2,MAXLEN=6
         SPACE
MVCOWNER MVC   OWNER(*-*),0(R1)    ** EX'ED **
         SPACE ,                                                  SEP91
         LTORG ,                   NEEDN'T ADDRESS MAIN LTORG NOW SEP91
         SPACE
* COMPUTE THE PARM LENGTH LEFT.  IF THERE IS ANYTHING LEFT,
*  IT IS THE OWNER INFORMATION.
         SPACE
SCAN3    SR    R3,R4               COMPUTE LENGTH LEFT - 1
         BM    DONESCAN            SKIP IF NO MORE PARMS
         OI    FLAG,FLOWNER        SHOW OWNER WAS SPECIFIED
         LA    R5,L'OWNER-1        10 CHARACTERS IS THE MAX LENGTH
         CR    R3,R5               COMPARE
         BNH   EXMVCOWN            GO MOVE IT IF LENGTH OK
         LR    R3,R5               ELSE SET LENGTH TO MAX
EXMVCOWN AR    R1,R4               COMPUTE ADDRESS TO MOVE FROM
         EX    R3,MVCOWNER         DO THE MOVE
NOSCAN2  DS    0H                  NO 2ND PARM
DONESCAN DS    0H                  END OF PARMS
         DROP  R14                 END OF TEMPORARY BASE          SEP91
         EJECT
*******************************************************************
*                                                                 *
*        OPEN SYSPRINT.  ISSUE A WTP AND TERMINATE                *
*         IF IT DOESN'T OPEN.                                     *
*                                                                 *
*******************************************************************
         SPACE 2
         OPEN  (SYSPRINT,OUTPUT)   SESAME
* THE FOLLOWING TEMPORARY CONVOLUTION IS FOR ADDRESSABILITY TO    SEP91
*  THE SYSPRINT DCBOFLGS.  ADDRESSABILITY IS REGAINED IN A BIT.   SEP91
         L     R15,=A(SYSPRINT)    -> SYSPRINT DCB                SEP91
         TM    DCBOFLGS-IHADCB(R15),DCBOFOPN  DID IT OPEN?        SEP91
         BO    SYSOPEND            YES, GOODY
         WTO   'TPC009A  SYSPRINT DD CARD IS MISSING.  SYSPRINT COULD N*
               OT BE OPENED.  PROCESSING IS TERMINATED.',ROUTCDE=11
         LA    R15,20              SET RETURN CODE TO 20          SEP91
         L     R13,SAVE+4          RESTORE R13                    SEP91
         RETURN (14,12),T,RC=(15)  AND GO BYE-BYE                 SEP91
* (BRANCH TO "EXIT" REPLACED BY ABOVE DUE TO BASE REGISTERS)      SEP91
         EJECT ,                                                  APR82
******************************************************************APR82
*                                                                 APR82
*        COMPLETE HEADING MESSAGE WITH DATE AND DAY OF WEEK.      APR82
*                                                                 APR82
******************************************************************APR82
         SPACE 2                                                  APR82
* GET THE DATE AND TIME                                           APR82
         SPACE ,                                                  APR82
SYSOPEND TIME  DEC                 DO IT DO IT                    APR82
* R1 = 0CYYDDDF  (C=0 FOR 1900'S, 1 FOR 2000'S, ETC.)             SEP91
* R0 = HHMMSSTT                                                   APR82
         SPACE ,                                                  APR82
* PUT THE TIME IN THE MESSAGE                                     APR82
         SPACE ,                                                  APR82
         ST    R0,TEMP2            SAVE IT SOMEWHERE              APR82
         UNPK  TEMP(5),TEMP2(3)    EXTRA DIGIT IS REQUIRED        APR82
         MVC   M1HH,TEMP           PUT HH IN MESSAGE              APR82
         MVC   M1MM,TEMP+2         PUT MM IN MESSAGE              APR82
         SPACE ,                                                  APR82
* CONVERT THE DATE TO BINARY (FOR USE HERE) AND CHARACTER (FOR    APR82
*  THE EXPIRATION-DATE-CHECK LATER)                               APR82
         SPACE ,                                                  APR82
         ST    R1,TEMP+4           SAVE THE DATE                  APR82
         UNPK  DATE+1(L'DATE-1),TEMP+5(3)  CHARACTERIZE YYDDD     SEP91
         SR    R9,R9               CLEAR R9                       SEP91
         IC    R9,TEMP+4           R9 = CENTURY (1 DIGIT)         SEP91
         IC    R9,XLATECYY(R9)     R9 = HDR1 CENTURY CODE         SEP91
         STC   R9,DATE             SAVE THE CENTURY CODE          SEP91
         XC    TEMP(6),TEMP        LEAVE JUST DDDF                APR82
         CVB   R6,TEMP             R6 = DDD (IN BINARY)           APR82
         SRL   R1,3*4              R1 = 0000CYYD                  SEP91
         ST    R1,TEMP+4           SAVE THE DATE AGAIN            APR82
         OI    TEMP+7,X'0F'        SET SIGN NIBBLE                APR82
         CVB   R5,TEMP             R5 = CYY (IN BINARY)           SEP91
         LA    R5,1900(,R5)        ADD BASE YEAR OF 1900          SEP91
         ST    R5,TEMP2            SAVE YYYY (BINARY) IN TEMP2    SEP91
         SPACE 2                                                  APR82
* THIS CODE WILL COMPUTE THE CURRENT MONTH, DAY OF MONTH, AND     APR82
*  DAY OF WEEK.                                                   APR82
         SPACE ,                                                  APR82
* ALGORITHMS FOR DATE CONVERSION ARE FROM COMMUNICATIONS OF THE   APR82
*  ACM, 10/70, PAGE 621, AND 10/72, PAGE 918.                     APR82
         SPACE ,                                                  APR82
         SR    R9,R9               SET UP FOR NON-LEAP YEAR       APR82
         TM    TEMP2+3,X'03'       IS THIS A LEAP YEAR?           APR82
         BNZ   NOLEAP              NO, SKIP                       APR82
* CHECK FOR YEARS MULTIPLE OF 100 AND 400 TO ASSURE LEAPNESS.     SEP91
         LR    R15,R5              R15 = YEAR                     SEP91
         SR    R14,R14             CLEAR R14 FOR DIVIDE           SEP91
         D     R14,=F'100'         SEE IF YEAR IS MULTIPLE OF 100 SEP91
         LTR   R14,R14             REMAINDER ZERO?                SEP91
         BNZ   LEAP                NO, YEAR MULTIPLE OF 4 BUT     SEP91
*                                   NOT OF 100 *IS* A LEAP YEAR   SEP91
* YEAR MULTIPLE OF 100 IS *NOT* A LEAP YEAR *UNLESS* IT IS ALSO   SEP91
*  A MULTIPLE OF 400.                                             SEP91
         LR    R15,R5              COPY YEAR TO R15 AGAIN         SEP91
         SR    R14,R14             CLEAR R14 AGAIN FOR DIVIDE     SEP91
         D     R14,=F'400'         NOW SEE IF YEAR IS MULT OF 400 SEP91
         LTR   R14,R14             REMAINDER ZERO?                SEP91
         BNZ   NOLEAP              NO, YEAR NOT MULTIPLE OF 400   SEP91
*                                   IS *NOT* A LEAP YEAR          SEP91
LEAP     LA    R9,1                YES, SET UP FOR LEAP YEAR      SEP91
NOLEAP   LA    R1,59(,R9)          CONVERT FROM YYYY.DDD          SEP91
         CR    R6,R1               TO MM/DD/YYYY                  SEP91
         BNH   NOLEAP2             BIF NOT PAST FEBRUARY          APR82
         LA    R6,2(,R6)           ELSE MAKE POSSIBLE             APR82
         SR    R6,R9               .. LEAP YEAR ADJUSTMENT        APR82
NOLEAP2  LA    R6,91(,R6)                                         APR82
         LR    R5,R6                                              APR82
         M     R4,=F'100'                                         APR82
         D     R4,=F'3055'                                        APR82
         LR    R9,R5                                              APR82
         M     R4,=F'3055'                                        APR82
         D     R4,=F'100'                                         APR82
         SR    R6,R5                                              APR82
         S     R9,=F'2'                                           APR82
         LR    R7,R9               SAVE MONTH                     APR82
* NOW R7 = MONTH AND R6 = DAY OF MONTH                            APR82
         SPACE ,                                                  APR82
* CALCULATE THE DAY OF THE WEEK                                   APR82
         LA    R9,10(,R9)                                         APR82
         LR    R5,R9                                              APR82
         SR    R4,R4                                              APR82
         D     R4,=F'13'                                          APR82
         M     R4,=F'12'                                          APR82
         SR    R9,R5                                              APR82
         M     R8,=F'13'                                          APR82
         S     R9,=F'1'                                           APR82
         D     R8,=F'5'                                           APR82
         AR    R9,R6               ADD DAY OF MONTH               APR82
         LR    R5,R7               GET MONTH AGAIN                APR82
         L     R4,=F'-1'           R4 = -1 FOR DIVIDE             APR82
         S     R5,=F'14'                                          APR82
         D     R4,=F'12'                                          APR82
         A     R5,TEMP2            ADD YEAR                       APR82
         LR    R8,R5               SAVE INTERMEDIATE RESULT IN R8 SEP91
         SR    R4,R4               CLEAR FOR DIVIDE               SEP91
         D     R4,=F'100'          GET REMAINDER OVER 100         SEP91
         LR    R5,R4               COPY THE REMAINDER, FOR MULT.  SEP91
         M     R4,=F'5'                                           APR82
         D     R4,=F'4'                                           APR82
         AR    R9,R5                                              APR82
         SR    R4,R4                                              SEP91
         LR    R5,R8                                              SEP91
         D     R4,=F'100'                                         SEP91
         AR    R5,R5               (DOUBLE THIS)                  SEP91
         SR    R9,R5                                              SEP91
         SR    R4,R4                                              SEP91
         LR    R5,R8                                              SEP91
         D     R4,=F'400'                                         SEP91
         SR    R8,R8                                              SEP91
         AR    R9,R5                                              SEP91
         BNM   DIVDAYS                                            SEP91
         L     R8,=F'-1'           IF R9 IS NEGATIVE, SET R8 TOO  SEP91
DIVDAYS  D     R8,=F'7'            REMAINDER IN R8 = DAY OF WEEK  SEP91
         LTR   R8,R8               CHECK AGAIN FOR NEGATIVITY     SEP91
         BNM   DIVDAYS2            BRANCH IF PLUS                 SEP91
         A     R8,=F'7'            ELSE ADD 7 (REMAINDER CAN'T    SEP91
DIVDAYS2 DS    0H                    BE MORE NEGATIVE THAN THAT)  SEP91
* NOW R8 = DAY OF WEEK                                            APR82
         SPACE 2                                                  APR82
* FILL IN THE REST OF THE HEADING LINE                            APR82
         SPACE ,                                                  APR82
         MVI   M1DATE,C' '         BLANK ..                       APR82
         MVC   M1DATE+1(M1E-M1DATE-1),M1DATE  THE MESSAGE         APR82
         SR    R5,R5               CLEAR FOR IC                   APR82
         SLL   R8,2                DAY OF WEEK TIMES 4            APR82
         IC    R5,DAYS(R8)         LENGTH OF NAME                 APR82
         L     R9,DAYS(R8)         OFFSET TO IT                   APR82
         LA    R9,DAY0(R9)         RELOCATE                       APR82
         EX    R5,MOVEDAY          MOVE IT IN                     APR82
         LA    R8,M1DATE+1(R5)     POINT INTO MESSAGE..           APR82
         MVI   0(R8),C','          PUT IN A COMMA..               APR82
         SLL   R7,2                MONTH TIMES 4                  APR82
         IC    R5,MONTHS-4(R7)     LENGTH OF MONTH NAME           APR82
         L     R9,MONTHS-4(R7)     OFFSET TO MONTH NAME           APR82
         LA    R9,MONTH1(R9)       RELOCATE                       APR82
         CVD   R6,TEMP             DECIMALIZE DAY OF THE MONTH..  APR82
         LA    R1,2(R8,R5)         POINT PAST THE MONTH PLACE     APR82
         MVC   0(L'EDITDATE+7,R1),EDITDATE  PUT IN THE MASK       APR82
         ED    0(L'EDITDATE,R1),TEMP+6  EDIT IT IN                APR82
         EX    R5,MOVEMNTH         MOVE THE MONTH IN              APR82
         L     R9,TEMP2            GET THE YEAR                   SEP91
         CVD   R9,TEMP             CONVERT TO DECIMALZ            SEP91
         UNPK  6(4,R1),TEMP        CONVERT TO CHARACTERS          SEP91
         OI    9(R1),C'0'          AND FIX THE SIGN NIBBLE        SEP91
         B     AROUND              FOR CONVENIENCE                APR82
         SPACE 2                                                  APR82
* LOCAL INCONSTANTS AND EXECUTEDS                                 APR82
         SPACE ,                                                  APR82
MOVEDAY  MVC   M1DATE(*-*),0(R9)   ** EX'ED **                    APR82
MOVEMNTH MVC   2(*-*,R8),0(R9)     ** EX'ED **                    APR82
         SPACE ,                                                  APR82
EDITDATE DC    X'40202120',C', YYYY.'  BDSD MASK + CONSTANTS      SEP91
         SPACE 2                                                  SEP91
*===============================================================  SEP91
* N.B. CODE PRECEDING HERE *CANNOT* CALL ANY SUBROUTINES,      *  SEP91
*      BECAUSE THE BASE REGISTERS ARE BEING RELOADED NOW,      *  SEP91
*      TO EXTEND ADDRESSABILITY.                               *  SEP91
*===============================================================  SEP91
AROUND   BALR  R10,0               GET A BASE REGISTER            SEP91
REGBASE2 DS    0H                  AND A LABEL                    SEP91
         USING REGBASE2,R10        JOKES ARE REPEATED, TELL ASM   SEP91
         LA    R11,4095(,R10)      AND A SECOND BASE              SEP91
         USING REGBASE2+4095,R11   TELL IT AGAIN                  SEP91
         LA    R12,4095(,R11)      WE NEED A THIRD BASE TOO       SEP91
         USING REGBASE2+4095+4095,R12  (NO HOME PLATE THO)        SEP91
         SPACE 2                                                  APR82
* PUT OUT THE HEADING LINE                                        APR82
         SPACE ,                                                  APR82
         MVI   MSGHEADR,C'1'       SET CC TO PAGE EJECT           APR82
         LA    R3,M1               INITIAL MESSAGE
         BAL   R2,MESSAGE          PUT IT OUT
         NOP   0                   IGNORE THIS
         MVI   MSGHEADR,C'-'       SKIP 3 BEFORE NEXT MESSAGE
         EJECT
*******************************************************************
*                                                                 *
*              SPECIFICATION PROCESSING                           *
*                                                                 *
*        DETERMINE PROCESSING REQUIRED, ACCORDING TO              *
*         SPECIFICATIONS IN THE PARM FIELD AND THE JFCB.          *
*        ISSUE ERROR MESSAGES FOR INCOMPATIBLE OR                 *
*         UNSUPPORTED REQUESTS.                                   *
*                                                                 *
*        REGISTER USAGE:                                          *
*              R1: WORK REGISTER                                  *
*              R2: SUBROUTINE LINKAGE                             *
*              R3: MESSAGE POINTER FOR ERROR MESSAGES             *
*              R4: POINTER TO TAPE CONTROL BLOCKS                 *
*              R8: CONSTANT ONE FROM HERE ON, FOR CONVENIENCE     *
*              R9: LOOP CONTROL                                   *
*                                                                 *
*******************************************************************
         SPACE 2
* IN CASE THERE ARE NO APPROPRIATE DD CARDS, PRESET THE
*  RETURN CODE TO 20.
         SPACE
         MVI   RC,20               PRESET RETURN CODE TO 20
         SPACE
* PUT A ONE IN R8 AND KEEP IT THERE FOR THE REST OF THE PROGRAM
         SPACE
         LA    R8,1                R8 = ONE
         SPACE
* READ THE JFCB'S FOR TAPE1/TAPE2.  IF THE DD CARDS ARE NOT THERE,
*  ATTEMPT TO READ THE JFCB'S FOR SYSUT1/SYSUT2.  IF THIS SUCCEEDS,
*  USE SYSUT1/SYSUT2 AS THE DDNAMES;  OTHERWISE TERMINATE.
         SPACE
         RDJFCB (TAPE1,,TAPE2)
         LTR   R15,R15             SUCCESSFUL?
         BZ    DDTHERE             YES, ON TO OTHER THINGS
         SPACE
* TAPE1/TAPE2 DD CARDS NOT THERE. TRY SYSUT1/SYSUT2.
         SPACE
         MVC   DCBDDNAM-IHADCB+TAPE1,=CL8'SYSUT1'
         MVC   DCBDDNAM-IHADCB+TAPE2,=CL8'SYSUT2'
         RDJFCB (TAPE1,,TAPE2)
         LA    R3,M11              PRESET ERROR MESSAGE
         LTR   R15,R15             OK?
         LA    R2,TERM-4           SET RETURN POINT FOR MSG
         BNZ   ERROR               NO, BYE BYE
         OI    FLAG,FLALTNAM       YES, SHOW WE ARE USING SYSUT1/2
         SPACE
* SAVE THE LIMIT (TAPE1 DCB=LIMCT) IF SPECIFIED
         SPACE
DDTHERE  MVC   LIMIT+1(3),JFCLIMCT-JFCB+JFCB1  COPY IT
         SPACE
* ANY ERROR DETECTED AFTER THIS POINT WILL GIVE A RETURN CODE OF 4.
         SPACE
         MVI   RC,4                PRESET RETURN CODE
         SPACE
* SET UP FOR TAPE1 PROCESSING
         SPACE
         LA    R4,T1               -> TAPE1 CONTROL BLOCKS
         BALR  R9,0                GO THROUGH CODE AGAIN FROM HERE
         SPACE
* THE FOLLOWING CODE IS EXECUTED TWICE
         SPACE
         LA    R3,M12              PRESET MULTI-VOLUMES MESSAGE
         CLI   JFCBVOLS+6-JFCB+JFCB1-T(R4),C' '  2ND VOL SER GIVEN?
         BALR  R2,0                RETURN FROM ERROR
         BNE   ERROR               YES, ISSUE ERROR MESSAGE
         SPACE
         LA    R3,M13              PRESET LABEL=AL/NSL MESSAGE
         TM    JFCBLTYP-JFCB+JFCB1-T(R4),JFCBAL+JFCNSL
         BALR  R2,0                RETURN POINT
         BNZ   ERROR               ISSUE ERROR MESSAGE
         SPACE
         LA    R3,M14              PRESET OPTCD=C/Q MESSAGE
         TM    JFCOPTCD-JFCB+JFCB1-T(R4),JFCPCIBT+JFCOPTQ
         BALR  R2,0
         BNZ   ERROR
         SPACE ,                                                  APR81
* SCRATCH TAPES ARE NOT SUPPORTED.  SEE COMMENTS RE APR81 MODS.   APR81
         SPACE ,                                                  APR81
         CLI   JFCBVOLS-JFCB+JFCB1-T(R4),X'FF'  NON-SPECIFIC?     APR81
         BNE   NOTSCRTC            NOPE, NOT A SCRATCH TAPE       APR81
         LA    R3,M18              PRESET INPUT/SCRATCH MESSAGE   APR81
         LA    R2,NOTSCRTC-4       PRESET RETURN POINT            APR81
         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?        APR81
         BO    ERROR               YES, GO ISSUE MESSAGE          APR81
         LA    R3,M19              ELSE GET OUTPUT/SCRATCH MSG    APR81
         B     ERROR               AND ISSUE IT                   APR81
NOTSCRTC DS    0H                                                 APR81
         SPACE
         MVC   INLABEL-T(,R4),JFCBLTYP-JFCB+JFCB1-T(R4)  COPY LABEL
         SPACE
         LH    R1,JFCBFLSQ-JFCB+JFCB1-T(R4)  GET FILE SEQUENCE
         LTR   R1,R1               IF NOT SPECIFIED, IS ALREADY PRESET
         BZ    DDVOLPRM            (TO ONE)
         STH   R1,INFILE-T(R4)     ELSE SAVE IN TAPE CONTROL AREA
         SPACE
DDVOLPRM CLI   INVOL-T(R4),0       WAS PARM INFO GIVEN?
         BE    NOVOLPRM            NO, SKIP SPECIAL CODE
         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?
         BZ    OUTPROC             NO, GO TO OUTPUT (RELABEL) CODE
         SPACE
* PROCESS PARM FOR INPUT VOL SER
         SPACE
         CLC   INVOL,=CL6'PID'     PID OPTION REQUESTED?
         BNE   NORMIN              NO, PARM IS FOR REAL VOL SER
         LA    R3,M17              PRESET PID/^NL MESSAGE
         TM    INLABEL-T(R4),JFCNL  IS IT LABEL=NL?
         BALR  R2,0
         BZ    ERROR               NO, ISSUE MESSAGE
         OI    INFLAG-T(R4),FLPID  SET PID FLAG
         B     NOVOLPRM            CONTINUE
         SPACE
NORMIN   LA    R3,M15              SET REAL LABEL/^BLP MESSAGE
         TM    INLABEL-T(R4),JFCBLP  BLP SPECIFIED?
         BALR  R2,0
         BZ    ERROR
         OI    INFLAG-T(R4),FLINTEXT  SET FLAG, INTERNAL ^= EXTERNAL
         MVI   INLABEL-T(R4),JFCSL  WE REALLY MEAN SL
         B     DONEINOT            DONE
         SPACE
* PROCESS PARM FOR OUTPUT VOL SER
         SPACE
OUTPROC  LA    R3,M16              PRESET RELABEL/FILESEQ>1 MESSAGE
         CH    R8,INFILE-T(R4)     IS FILE SEQUENCE ONE?
         BALR  R2,0
         BNE   ERROR               NO, ISSUE MESSAGE
         SPACE
         OI    INFLAG-T(R4),FLRELBL  RELABEL REQUEST
         B     DONEINOT            SKIP VOLSER MOVE
         SPACE
NOVOLPRM MVC   INVOL-T(,R4),JFCBVOLS-JFCB+JFCB1-T(R4)  1ST VOL
         SPACE
* TEST IF WE REALLY HAVE A TAPE.  TEST FOR 7-TRACK TAPE.
         SPACE
DONEINOT TM    JFCBTSDM-JFCB+JFCB1-T(R4),JFCSDS  SYSIN/SYSOUT?
         BO    DDNOTTAP            YES, GO SET FLAG
         SPACE
         DEVTYPE DCBDDNAM-IHADCB+TAPE1-T(R4),TEMP  GET DEVTYPE
         CLI   UCBTBYT3-UCBTYP+TEMP,0  IS IT DD DUMMY?
         BE    DDNOTTAP            YES, SET NOT-A-TAPE FLAG
         TM    UCBTBYT3-UCBTYP+TEMP,UCB3TAPE  IS IT A TAPE?
         BZ    DDNOTTAP            NO, SET FLAG
         TM    UCBTBYT2-UCBTYP+TEMP,UCB2OPT0  IS IT 7-TRACK?
         BZ    DDDONE              NO, IT'S OK
         OI    INFLAG-T(R4),FLSEVEN  SHOW IT'S 7-TRACK
         MVC   INTRTCH-T(,R4),JFCTRTCH-JFCB+JFCB1-T(R4)  COPY TRTCH
         MVC   INTRTCH2-T(,R4),JFCTRTCH-JFCB+JFCB1-T(R4)  HERE TOO
         MVI   INTRTCHL-T(R4),JFCTREV  SET LABELS TRTCH (ALWAYS ET)
         MVI   JFCTRTCH-JFCB+JFCB1-T(R4),0  CLEAR IT
         B     DDDONE              DONE HERE
         SPACE
* THIS DD DOES NOT POINT TO A REAL TAPE.  SET A FLAG AND
*  FORCE LABEL TYPE TO BLP.
         SPACE
DDNOTTAP OI    INFLAG-T(R4),FLNOTTP  SHOW IT'S NOT A TAPE
         MVI   INLABEL-T(R4),JFCBLP  SET LABEL TYPE TO BLP
         NI    INFLAG-T(R4),255-FLRELBL  MAKE SURE RELABEL IS OFF
         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT?
         BZ    DDDONE              NO, DONE
         ST    R8,LIMIT            YES, SET LIMIT TO 1 FILE
         SPACE
* SET UP FOR TAPE2 PROCESSING AND LOOP THROUGH AGAIN.
         SPACE
DDDONE   LA    R4,T2               -> TAPE2 CONTROL BLOCKS
         BALR  R9,R9               LOOP THROUGH AGAIN
         SPACE
* IF ANY ERROR WAS DETECTED, TERMINATE.
         SPACE
         TM    FLAG,FLERROR        ANY ERROR MESSAGE ISSUED?
         BO    TERM                YES, GO TERMINATE.
         SPACE
* COPY BUFNO/BLKSIZE IF SPECIFIED FROM TAPE1 DD CARD
         SPACE
         SR    R1,R1               CLEAR A REGISTER
         IC    R1,JFCBUFNO-JFCB+JFCB1  GET THE BUFNO
         LTR   R1,R1               WAS IT THERE?
         BZ    NOBUFNO             NOPE
         STH   R1,BUFNO            ELSE SAVE OVER THE DEFAULT (2)
NOBUFNO  LH    R1,JFCBLKSI-JFCB+JFCB1  GET THE BLKSIZE
         LTR   R1,R1               WAS IT SPECIFIED?
         BNP   NOBLKSI             NOPE
         LA    R0,80               MINIMUM IS 80 (FOR LABELS)
         CR    R1,R0               IS USER BLKSIZE SMALLER?
         BNL   GOTBLKSI            NO, IT'S OK
         LR    R1,R0               ELSE FORCE IT TO 80
GOTBLKSI ST    R1,BLKSIZE          ELSE SAVE OVER THE DEFAULT (10231)
NOBLKSI  DS    0H
         EJECT
*******************************************************************
*                                                                 *
*              DESCRIPTION PROCESSING                             *
*                                                                 *
*        THIS ROUTINE WRITES NICE MESSAGES TELLING THE USER       *
*         WHAT WE ARE DOING WITH HIS TAPES.                       *
*                                                                 *
*        REGISTER USAGE:                                          *
*              R0: SPECIAL MESSAGE OFFSET POINTER                 *
*              R1: MESSAGE OFFSET POINTER                         *
*              R2: SUBROUTINE CALLS                               *
*              R3: POINTER TO MESSAGE PARTS                       *
*              R4: POINTER TO TAPE CONTROL BLOCKS                 *
*              R5: ADDRESS OF MESSAGE CONSTRUCTION ROUTINE        *
*              R6: ADDRESS OF MESSAGE WRITE ROUTINE               *
*              R7: STARTING LINE POSITION FOR OUTPUT              *
*              R8: CONSTANT ONE (FOR THE REST OF THE PROGRAM)     *
*              R9: LOOP CONTROL                                   *
*              R14: WORK REGISTER                                 *
*                                                                 *
*******************************************************************
         SPACE 2
         LA    R5,DESCMOVE         PRESET SOME REGISTERS
         LA    R6,DESCPUT          SINCE WE HAVE SOME EXTRAS
         LA    R7,ERRTEXT+L'ERRUGH  SET OUTPUT LINE POSITION
         SPACE
* SET UP FOR TAPE1 PROCESSING
         SPACE
         LA    R4,T1               -> TAPE1 CONTROL BLOCKS
         BALR  R9,0                GO THROUGH CODE AGAIN FROM HERE
         SPACE
* THE FOLLOWING CODE IS EXECUTED TWICE
         SPACE
* THE FIRST LINE OF MESSAGE TPC003I IS ISSUED VIA THE
*  NORMAL MESSAGE ROUTINE.  SUBSEQUENT LINES ARE
*  CONSTRUCTED BY THE CODE AT 'DESCMOVE'.
         SPACE
         TM    INFLAG-T(R4),FLNOTTP  IS IT A TAPE?
         BO    DESCNOTP            IF NOT WE PUT OUT JUST ONE LINE
         SPACE
         LA    R2,DESCLABL-4       ELSE RETURN FOR LABEL LINE
         LA    R3,M3C              PRESET PID MESSAGE
         MVC   M3CVOL,INVOL-T(R4)  WITH VOLSER                    APR82
         TM    INFLAG-T(R4),FLPID  IS IT PID OPTION?
         BO    MESSAGE             YES, ISSUE THE MESSAGE
         SPACE
         TM    INFLAG-T(R4),FLINTEXT  INTERNAL/EXTERNAL DIFFERENT?
         BO    DESCDIF             YES, GO FOR RIGHT MESSAGE
         MVC   M3AVOL,INVOL-T(R4)  ELSE PUT VOLSER IN MESSAGE
         LA    R3,M3A              -> MESSAGE
         TM    INFLAG-T(R4),FLRELBL  IS IT BEING RELABELLED?
         BZ    MESSAGE             NO, MESSAGE IS SET
         MVC   M3AVOL,JFCBVOLS-JFCB+JFCB1-T(R4)  GET RIGHT VOLSER
         B     MESSAGE             GO ISSUE IT
         SPACE
DESCDIF  MVC   M3BVOLEX,JFCBVOLS-JFCB+JFCB1-T(R4)  EXTERNAL
         MVC   M3BVOLIN,INVOL-T(R4)  INTERNAL (FROM PARM FIELD)
         LA    R3,M3B              -> MESSAGE
         B     MESSAGE             GO ISSUE IT
         SPACE
DESCNOTP LA    R3,M3D              NOT A TAPE.  SET INPUT MESSAGE.
         LA    R2,DESCDONE-4       RETURN POINT IS FOR NEXT TAPE
         TM    INFLAG-T(R4),FLIN   IS IT INPUT?
         BO    MESSAGE             YES, ISSUE MESSAGE
         LA    R3,M3E              ELSE SET OUTPUT MESSAGE
         B     MESSAGE             AND GO ISSUE IT.
         SPACE
DESCLABL BAL   R2,DESCPUT2         INITIALIZE REGISTERS
         TM    INLABEL-T(R4),JFCBLP  IS IT BLP?
         BO    DESCBLP             YES, GO OFF
         LA    R3,D1A              'THIS TAPE HAS '
         BALR  R2,R5               INSERT IT
         TM    INLABEL-T(R4),JFCSL  IS IT SL?
         BO    DESCSL              YES, GO OFF
         LA    R3,D1B              'NO LABELS'
         BALR  R2,R5
         TM    INLABEL-T(R4),JFCBLTM  IS IT LTM?
         BZ    DESCLABC            NO, ADD .
         LA    R3,D1C              ' AND MAY START WITH A TAPE MARK'
         BALR  R2,R5
         B     DESCLABC            ADD .
DESCSL   LA    R3,D1D              'STANDARD LABELS.'
         BALR  R2,R5
         B     DESCLABE            LINE COMPLETE
DESCBLP  LA    R3,D1E              'LABELS (IF ANY) ON THIS TAPE...
         BALR  R2,R5
         TM    INFLAG-T(R4),FLIN   IS IT INPUT?
         BZ    DESCLABC            NO, ADD .
         LA    R3,D1F              ' AND WILL BE TREATED AS DATA FILES'
         BALR  R2,R5
DESCLABC LA    R3,D0               '.'
         BALR  R2,R5
DESCLABE BALR  R2,R6               PUT OUT THE LABEL LINE
         SPACE
         TM    INFLAG-T(R4),FLRELBL  IS THIS BEING RELABELLED?
         BZ    DESCFLSQ            NO, SKIP THIS LINE
         LA    R3,D2A              'THIS TAPE WILL BE '
         BALR  R2,R5
         TM    INLABEL-T(R4),JFCSL  WAS IT SL?
         BZ    DESCRLBL            NO, IT'S JUST BEING LABELLED
         LA    R3,D2B              'RE'
         BALR  R2,R5
DESCRLBL MVC   D2NEWVOL,INVOL-T(R4)  NEW VOLUME SERIAL
         LA    R3,D2C              'LABELLED AS XXXXXX'
         BALR  R2,R5
         TM    FLAG,FLOWNER        WAS OWNER PARM GIVEN?
         BZ    DESCRLBE            NO, ADD .
         MVC   D2OWNER,OWNER       YES, PUT IT IN MESSAGE
         LA    R3,D2D              'WITH OWNER=XXXXXXXXXX'
         BALR  R2,R5
DESCRLBE LA    R3,D0               '.'
         BALR  R2,R5
         BALR  R2,R6               WRITE OUT THE LINE
         SPACE
* THESE TWO ITEMS (FILE # AND FILE COUNT) GO ON THE SAME LINE
         SPACE
DESCFLSQ LH    R14,INFILE-T(R4)    GET LABEL #
         CR    R14,R8              IS IT ONE?
         BE    DESCLIMT            YES, NO LINE HERE
         BAL   R2,EDIT             ELSE EDIT THE NUMBER
         MVC   D3FLSQ,DECIMAL+L'DECIMAL-L'D3FLSQ  INTO MSG
         LA    R3,D3               'THE TAPE COPY WILL START AT...
         BALR  R2,R5
         SPACE
DESCLIMT TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?
         BZ    DESCLIM2            NO, SKIP THIS PART OF THE MESSAGE
         L     R14,LIMIT           GET DCB=LIMCT=
         LTR   R14,R14             SPECIFIED?
         BZ    DESCLIM2            NO, SKIP THIS ITEM
         BAL   R2,EDIT             ELSE CONVERT
         MVC   D4LIMIT,DECIMAL+L'DECIMAL-L'D4LIMIT  INSERT
         LA    R3,D4               'NOT MORE THAN NNN FILES...
         BALR  R2,R5
DESCLIM2 CR    R1,R7               ANYTHING IN THIS LINE?
         BE    DESCERRS            NO, SKIP IT
         BALR  R2,R6
         SPACE
DESCERRS TM    INFLAG-T(R4),FLIN   IS THIS INPUT?
         BZ    DESCDSN             NO, SKIP THIS FOR OUTPUT
         LA    R3,D5A              'AFTER AN INPUT ERROR, '
         BALR  R2,R5
         TM    JFCEROPT-JFCB+JFCB1-T(R4),JFCSKP  EROPT=SKP?
         BO    DESCSKP             YES, BRANCH
         TM    JFCEROPT-JFCB+JFCB1-T(R4),JFCABN  EROPT=ABE?
         BO    DESCABN             YES, BRANCH
         LA    R3,D5D              'IF ANY DATA WAS READ...
         BALR  R2,R5
         TM    JFCEROPT-JFCB+JFCB1-T(R4),JFCACC  EROPT=ACC?
         BO    DESCACC             YES, HE SAID SOMETHING
         LA    R3,D5E              ' (THIS IS THE DEFAULT.)'
         BALR  R2,R5
DESCACC  BALR  R2,R6               PUT OUT LINE
         B     DESCDONE            GET NEXT TAPE
DESCSKP  LA    R3,D5B              'THE BAD BLOCK WILL BE SKIPPED.'
         BALR  R2,R5
         BALR  R2,R6
         B     DESCDONE
DESCABN  LA    R3,D5C              'PROCESSING WILL TERMINATE.'
         BALR  R2,R5
         BALR  R2,R6
         B     DESCDONE
         SPACE
DESCDSN  TM    INLABEL,JFCSL       IS THE INPUT SL?
         BO    DESCDCBS            YES, WE AREN'T MAKING UP NAMES
         TM    OUTFLAG,FLRELBL     WILL THE OUTPUT BE SL?
         BO    DESCDSN2            YES, WE ARE MAKING UP NAMES
         TM    OUTLABEL,JFCSL      IS THE OUTPUT SL?
         BZ    DESCDCBS            NO, WE AREN'T MAKING UP NAMES
DESCDSN2 LA    R3,D6               'SINCE THE INPUT TAPE IS NOT...
         BALR  R2,R5
         BALR  R2,R6
         SPACE
DESCDCBS TM    OUTFLAG,FLRELBL     WILL THE OUTPUT BE SL?         OCT76
         BO    DESCDCB2            YES, PUT OUT DCB MESSAGES      OCT76
         TM    OUTLABEL,JFCSL      IS THE OUTPUT SL?              OCT76
         BZ    DESCDONE            NO, SKIP DCB MESSAGES          OCT76
DESCDCB2 LR    R0,R1               SAVE STARTING POINT            OCT76
         CLI   JFCRECFM-JFCB+JFCB1-T(R4),0  RECFM GIVEN?
         BE    DESCBLK             NO, TRY BLKSIZE
         LA    R3,D8A              'RECFM'
         BALR  R2,R5
DESCBLK  CLC   JFCBLKSI-JFCB+JFCB1-T(,R4),=H'0'  BLKSIZE?
         BE    DESCLRCL            NO, TRY LRECL
         LA    R3,D8B              'BLKSIZE'
         BAL   R2,DESCSPCL         SPECIAL ROUTINE FOR , INSERTION
DESCLRCL CLC   JFCLRECL-JFCB+JFCB1-T(,R4),=H'0'  LRECL?
         BE    DESCFINL            NO, DONE
         LA    R3,D8C              'LRECL'
         BAL   R2,DESCSPCL         SPECIAL ROUTINE FOR , INSERTION
DESCFINL CR    R0,R1               ANY TEXT?
         BE    DESCNONE            NO, SPECIAL TEXT
         CR    R0,R7               ONLY ONE ITEM?
         BE    DESCONE             YES, NO 'AND'
         LR    R1,R0               ELSE BACK UP TO LAST ,
         LR    R0,R3               SAVE LAST TEXT ITEM
         LA    R3,D8D              ' AND '
         BALR  R2,R5
         LR    R3,R0               RE-INSERT LAST TEXT ITEM
         BALR  R2,R5
DESCONE  LA    R3,D8E              ' WILL BE PLACED IN THE OUTPUT...
         BALR  R2,R5
         LA    R3,D8F              'AS SPECIFIED.'
         TM    INLABEL,JFCSL       IS INPUT LABELLED?
         BZ    DESCLAST            NO, MESSAGE IS SET
         LA    R3,D8G              'IF THE INPUT HAS NO HDR2 LABELS.'
DESCLAST BALR  R2,R5
         BALR  R2,R6
         B     DESCDONE
DESCNONE TM    INLABEL,JFCSL       IS INPUT LABELLED?
         BO    DESCDONE            YES, NO LINE HERE
         LA    R3,D7               'NO DCB INFORMATION WAS...
         BALR  R2,R5
         BALR  R2,R6
         SPACE
* SET UP FOR TAPE2 PROCESSING AND LOOP THROUGH AGAIN.
         SPACE
DESCDONE LA    R4,T2               -> TAPE2 CONTROL BLOCKS
         BALR  R9,R9               LOOP THROUGH AGAIN
         SPACE
* ISSUE ONE OF THE TWO TPC004I MESSAGES
         SPACE
         LH    R14,BUFNO           GET BUFNO
         BAL   R2,EDIT             MAKE IT PRETTY
         MVC   M4BUFNO,DECIMAL+L'DECIMAL-L'M4BUFNO  INTO MSG
         MVC   M4ABUFNO,DECIMAL+L'DECIMAL-L'M4ABUFNO  HERE TOO
         L     R14,BLKSIZE         GET BUFFER SIZE
         CH    R14,=H'32760'       IS BLKSIZE=32760 ?             APR81
         BE    DESCBMS2            YES, DON'T INCREASE IT         APR81
         AR    R14,R8              UP BY ONE
DESCBMS2 DS    0H                                                 APR81
         BAL   R2,EDIT             PRETTY IT UP TOO
         MVC   M4BLKSI,DECIMAL+L'DECIMAL-L'M4BLKSI  INTO MSG
         MVC   M4ABLKSI,DECIMAL+L'DECIMAL-L'M4ABLKSI  HERE TOO
         LA    R2,FILINHDR-4       NEXT ROUTINE IS RETURN
         LA    R3,M4               THIS MESSAGE IF INPUT UNLABELLED
         TM    INLABEL,JFCSL       IS IT?
         BZ    MESSAGE             YES, WE GUESSED IT
         LA    R3,M4A              NOPE, GET THE RIGHT ONE
         B     MESSAGE             GO SPEW IT OUT
         SPACE 3
* SUBROUTINES USED IN THIS SECTION FOR MESSAGE CONSTRUCTION
         SPACE
* ENTER HERE TO ADD A TEXT ITEM WITH SPECIAL , INSERTION
         SPACE
DESCSPCL CR    R0,R1               WAS THERE A PREVIOUS ITEM?
         LR    R0,R1               SAVE FOR COMMA INSERTION
         BE    DESCMOVE            NO, NORMAL CODE
         MVI   0(R1),C','          YES, INSERT A COMMA
         LA    R1,2(,R1)           SKIP A BLANK TOO
         SPACE
* ENTER HERE TO ADD A TEXT ITEM
         SPACE
DESCMOVE SR    R14,R14             CLEAR A REGISTER
         IC    R14,0(,R3)          GET ITEM LENGTH - 1
         EX    R14,DESCMVC         MOVE IT
         LA    R1,1(R1,R14)        UP LINE POINTER
         BR    R2                  RETURN TO CALLER
         SPACE
* EXECUTED INSTRUCTION
         SPACE
DESCMVC  MVC   0(*-*,R1),1(R3)     COPY IN TEXT ITEM
         SPACE 2
* ENTER HERE TO WRITE A LINE
         SPACE
DESCPUT  LA    R0,LINE             -> START OF LINE
         SR    R1,R0               R1 HAD NEXT FREE SPACE POINTER
         STH   R1,DCBLRECL-IHADCB+SYSPRINT  PUT LENGTH IN DCB
         LH    R1,LINECNT          GET CURRENT LINES-LEFT
         SR    R1,R8               DEDUCT ONE
         STH   R1,LINECNT          AND SAVE IT BACK
         PUT   SYSPRINT,(0)       WRITE IT
         SPACE
* ENTER HERE FOR INITIALIZATION ONLY
         SPACE
DESCPUT2 MVI   LINE,C' '           BLANKET
         MVC   LINE+1(L'LINE-1),LINE
         LR    R1,R7               NEXT ITEM GOES HERE
         BR    R2                  RETURN TO CALLER
         EJECT
*******************************************************************
*                                                                 *
*              CONSTRUCT PROTOTYPE HEADER LABELS                  *
*              IF OUTPUT TAPE IS (OR WILL BE) LABELLED            *
*                                                                 *
*              REGISTERS USED: R0, R1, R2, R3.                    *
*                                                                 *
*******************************************************************
         SPACE 2
* TEST IF OUTPUT TAPE IS OR WILL BE LABELLED
         SPACE
FILINHDR TM    OUTFLAG,FLRELBL     WILL IT BE?
         BO    FILOUT              YES, FILL IN LABELS
         TM    OUTLABEL,JFCSL      OR IS IT ALREADY?
         BZ    READLABL            NO, NEXT STEP IS LABEL-READING
         SPACE
* FL1FILSR IS OUTPUT VOLUME SERIAL
         SPACE
FILOUT   MVC   FL1FILSR,OUTVOL
         SPACE
* FL1FILSQ FILLED IN LATER, FOR EACH FILE
         SPACE
* FL1CREDT FROM JFCB
         SPACE
         SR    R1,R1               CLEAR FOR IC
         IC    R1,JFCBCRDT-JFCB+JFCB2  GET CYY OF CREATION DATE   SEP91
         CVD   R1,TEMP             CONVERT YY (IGNORE C HERE)     SEP91
         UNPK  FL1CREDT+1(2),TEMP  READABLIZE IT
         OI    FL1CREDT+2,C'0'     ...
         SR    R0,R0               CLEAR R0                       SEP91
         D     R0,=F'100'          COMPUTE THE CENTURY            SEP91
         IC    R1,XLATECYY(R1)     CONVERT TO BLANK/C'0'/C'1'     SEP91
         STC   R1,FL1CREDT         AND SAVE THE CENTURY CODE      SEP91
         SR    R0,R0               CLEAR R0 FOR ICM               SEP91
         ICM   R0,B'0011',JFCBCRDT+1-JFCB+JFCB2  AND LOAD DDD     SEP91
         CVD   R0,TEMP             CONVERT DDD
         UNPK  FL1CREDT+3(3),TEMP  READABLIZE IT TOO
         OI    FL1CREDT+L'FL1CREDT-1,C'0'  ...
         SPACE
* FL1EXPDT FROM JFCB
         SPACE
* NOTE: FL1EXPDT IS SET TO ALL C'0'S IF THE EXPDT IS ZERO,        SEP91
*  FOR CONSISTENCY WITH MVS DFP/XA AND DFP/ESA.                   SEP91
         SPACE ,                                                  SEP91
         ICM   R1,B'0111',JFCBXPDT-JFCB+JFCB2  GET EXPIRE DATE    SEP91
         BNZ   HASEXPDT            BRANCH IF DATE NON-ZERO        SEP91
         MVC   FL1EXPDT,=C'000000'  ZERO, SET TO *ALL* ZEROS      SEP91
         B     DUNEXPDT            AND CONTINUE                   SEP91
HASEXPDT SRL   R1,16               SHIFT & ISOLATE CYY OF DATE    SEP91
         CVD   R1,TEMP             CONVERT YY (IGNORE C HERE)     SEP91
         UNPK  FL1EXPDT+1(2),TEMP  READABLIZE IT
         OI    FL1EXPDT+2,C'0'     ...
         SR    R0,R0               CLEAR R0                       SEP91
         D     R0,=F'100'          COMPUTE THE CENTURY            SEP91
         IC    R1,XLATECYY(R1)     CONVERT TO BLANK/C'0'/C'1'     SEP91
         STC   R1,FL1EXPDT         AND SAVE THE CENTURY CODE      SEP91
         LH    R0,JFCBXPDT+1-JFCB+JFCB2  LOAD DDD                 SEP91
         CVD   R0,TEMP             CONVERT DDD
         UNPK  FL1EXPDT+3(3),TEMP  READABLIZE IT TOO
         OI    FL1EXPDT+L'FL1EXPDT-1,C'0'  ...
DUNEXPDT DS    0H                                                 SEP91
         SPACE
* FL1BLKCT FILLED IN LATER, FOR EACH FILE
         SPACE
* FL2RECFM FROM JFCRECFM
         SPACE
         TM    JFCRECFM-JFCB+JFCB2,JFCUND  IS IT RECFM=U?
         BM    FILRECFM            BIF F OR V
         MVI   FL2RECFM,C'U'       SET TO U IF U OR UNSPEC.
         B     FILBLKSI            AND GO GET BLKSIZE
FILRECFM MVI   FL2RECFM,C'F'       TRY RECFM=F
         TM    JFCRECFM-JFCB+JFCB2,JFCFIX  IS IT RIGHT?
         BO    FILBLKSI            YES, GET BLKSIZE
         MVI   FL2RECFM,C'V'       NO, IT MUST BE RECFM=V
         SPACE
* FL2BLKL FROM JFCBLKSI
         SPACE
FILBLKSI LH    R1,JFCBLKSI-JFCB+JFCB2  GET BLKSIZE
         CVD   R1,TEMP             TO DECIMAL
         UNPK  FL2BLKL,TEMP        ...
         OI    FL2BLKL+L'FL2BLKL-1,C'0'  ...
         SPACE
* FL2LRECL FROM JFCLRECL
         SPACE
         LH    R1,JFCLRECL-JFCB+JFCB2  GET LRECL
         LTR   R1,R1               TEST FOR LRECL=X
         BNM   FILLRECL            BIF NOT
         L     R1,=F'99999'        LRECL=X GOES INTO LABEL AS '99999'
FILLRECL CVD   R1,TEMP             TO READABLE
         UNPK  FL2LRECL,TEMP       ...
         OI    FL2LRECL+L'FL2LRECL-1,C'0'  ...
         SPACE
* FL2DEN FILLED IN AFTER TAPE OPENED FOR OUTPUT
         SPACE
* FL2JOBD FROM TIOT
         SPACE
         EXTRACT TEMP,'S',FIELDS=TIOT  FIND THE TIOT
         L     R1,TEMP
         USING TIOT,R1
         MVC   FL2JOBD,TIOCNJOB    GET IT THERE
         SPACE
* FL2STEPD FROM TIOT
         SPACE
         MVC   FL2STEPD,TIOCSTEP   MOVE IT TOO
         DROP  R1
         SPACE
* FL2TRTCH FROM JFCTRTCH (WAS MOVED TO OUTTRTCH)
*  (IF NOT SPECIFIED, WILL BE FILLED IN FROM INPUT IF IT IS 7-TK)
         SPACE
         LM    R1,R3,TRTCHADR      SET UP FOR BXLE
FILTRTCH CLC   0(1,R1),OUTTRTCH    IS THIS IT?
         BE    FILTRGOT            YES, MOVE CHAR EQUIVALENT
         BXLE  R1,R2,FILTRTCH      NO, TRY NEXT
         B     FILCNTRL            NOT FOUND, LEAVE BLANK
FILTRGOT MVC   FL2TRTCH,1(R1)      FOUND, COPY IT
         SPACE
* FL2CNTRL FROM JFCRECFM
         SPACE
FILCNTRL TM    JFCRECFM-JFCB+JFCB2,JFCASA  TEST FOR RECFM=..A
         BZ    FILCKMCH            NO, SKIP
         MVI   FL2CNTRL,C'A'       YES, SET LABEL
         B     FILBLOCK            GO FOR BLOCK ATTRIBUTE
FILCKMCH TM    JFCRECFM-JFCB+JFCB2,JFCMAC  TEST FOR RECFM=..M
         BZ    FILBLOCK            NO, SKIP
         MVI   FL2CNTRL,C'M'       YES, SET LABEL
         SPACE
* FL2BLKA FROM JFCRECFM
         SPACE
FILBLOCK TM    JFCRECFM-JFCB+JFCB2,JFCRFB+JFCRFS  IS IT RECFM=..B/S?
         BZ    READLABL            NEITHER, GO READ LABELS
         MVI   FL2BLKA,C'R'        SET FOR RECFM=..BS
         BO    READLABL            BOTH, GO READ LABELS
         MVI   FL2BLKA,C'B'        SET FOR RECFM=..B
         TM    JFCRECFM-JFCB+JFCB2,JFCRFB  IS IT?
         BO    READLABL            BIF IF RIGHT
         MVI   FL2BLKA,C'S'        NO, IT MUST BE RECFM=..S
         EJECT
*******************************************************************
*                                                                 *
*              LABEL VERIFICATION                                 *
*                                                                 *
*        UPDATE JFCBS AND READ LABELS                             *
*                                                                 *
*        VERIFY THAT LABELS ARE CORRECT                           *
*                                                                 *
*        REGISTER USAGE:                                          *
*              R1: WORK REGISTER                                  *
*              R2: SUBROUTINE CALLS                               *
*              R3: MESSAGE POINTER                                *
*              R4: POINTER TO TAPE CONTROL BLOCKS                 *
*              R6, R9: LOOP CONTROL                               *
*              R8: CONSTANT ONE                                   *
*                                                                 *
*******************************************************************
         SPACE 2
* ANY ERROR DETECTED AFTER THIS POINT WILL GIVE A RETURN CODE OF 8.
         SPACE
READLABL MVI   RC,8                PRESET RETURN CODE TO 8        SEP79
         SPACE
* ENSURE TWO BLANK LINES BEFORE THE NEXT MESSAGE
         SPACE
         MVI   MSGHEADR,C'-'       PRESET CARRIAGE CONTROL        SEP79
         SPACE
* SHOW THE SYNAD EXIT WE ARE VERIFYING LABELS
         SPACE
         OI    FLAG,FLVERLBL       LIKE SO
         SPACE 2
* SET UP FOR TAPE1 PROCESSING
         SPACE
         LA    R4,T1               -> TAPE1 CONTROL BLOCKS
         BALR  R9,0                GO THROUGH CODE AGAIN FROM HERE
         SPACE
* THE FOLLOWING CODE IS EXECUTED TWICE
         SPACE 2
* SET JCFB LABEL TYPE TO BLP
         SPACE
         MVI   JFCBLTYP-JFCB+JFCB1-T(R4),JFCBLP  LIKE SO
         SPACE
* SET DO-NOT-MERGE-FROM-DCB FLAG IN JFCB
         SPACE
         OI    JFCBTSDM-JFCB+JFCB1-T(R4),JFCNDCB  LIKE SO
         SPACE
* CLEAR TRTCH IN THE JFCB.  IT WILL BE SET IN THE DCB IF REQUIRED.
         SPACE
         MVI   JFCTRTCH-JFCB+JFCB1-T(R4),0  CLEAR IT
         SPACE
* CLEAR BUFL IN THE JFCB.  IT WILL BE SET IN THE DCB LATER.
         SPACE
         MVC   JFCBUFL-JFCB+JFCB1-T(,R4),=H'0'  CLEAR IT
         SPACE
* SET FILE SEQUENCE TO ONE TO READ THE LABELS
         SPACE
         STH   R8,JFCBFLSQ-JFCB+JFCB1-T(R4)  LIKE SO
         SPACE
* SET THE DCB BLKSIZE TO 81 (1 LARGER THAN LABEL SIZE)
         SPACE
         MVC   DCBBLKSI-IHADCB+TAPE1-T(,R4),=H'81'  MAGIC NUMBER
         SPACE
* SET THE DCB BUFNO TO THE VALUE WE GOT OR DEFAULTED
         SPACE
         LH    R1,BUFNO            GET IT
         STC   R1,DCBBUFNO-IHADCB+TAPE1-T(R4)  SAVE IT
         SPACE
* IF THIS IS A 7-TRACK TAPE, SET TRTCH=ET (ALL LABELS ARE LIKE THAT)
         SPACE
         MVC   DCBTRTCH-IHADCB+TAPE1-T(,R4),INTRTCHL-T(R4)  PRESET
         SPACE 2
* IF THIS TAPE SPECIFIES BLP, GO TO THE NEXT TAPE
         SPACE
         TM    INLABEL-T(R4),JFCBLP  IS IT BLP?
         BO    LBLNEXT2            YES, PROCESS NEXT TAPE
         SPACE
* GET THE OLD VOLUME SERIAL IN VOLSERNO
         SPACE
         MVC   VOLSERNO,INVOL-T(R4)  MOVE FROM HERE FIRST
         TM    INFLAG-T(R4),FLRELBL  IF NOT RELABELLING, WE HAVE IT
         BZ    LBLOPEN             ELSE
         MVC   VOLSERNO,JFCBVOLS-JFCB+JFCB1-T(R4)  GET FROM JFCB
         SPACE
* SET EODAD
         SPACE
LBLOPEN  MVC   DCBEODA-IHADCB+TAPE1-T(,R4),=AL3(LBLEOF)
         BALR  R6,0                SET RETURN POINT
         SPACE 2
* THE FOLLOWING CODE MAY BE EXECUTED TWICE... IF VERIFICATION
*  OF A STANDARD LABEL FAILS, IT IS RETRIED ONCE, SINCE THE
*  TAPE MAY BE POSITIONED AFTER THE VOLUME LABEL BY AVR
*  (OR SOME OTHER FRIENDLY COMPONENT OF OS).
         SPACE
         NI    FLAG,255-FLINPERR   RESET A FLAG
         NI    INFLAG-T(R4),255-FLGOTLTM  AND ANOTHER
         LA    R2,TAPE1-T(R4)      -> DCB
         OPEN  ((R2),INPUT),TYPE=J  SESAME
         SPACE
* READ THE LABEL?
         SPACE
         GET   TAPE1-T(R4)         GET IT
         SPACE
* PRESET THE ERROR MESSAGE RETURN POINT
         SPACE
         LA    R2,LBLNEXT-4        ONLY 1 MSG PER TAPE NEEDED
         SPACE
* IF EOF WAS REACHED, CONTROL GOES TO LBLEOF.
* IF AN INPUT ERROR OCCURRED, THE SYNAD EXIT HAS SET FLINPERR.
*  AN UNREADABLE TAPE IS UNLABELLED ACCORDING TO OS STANDARDS.
         SPACE
         TM    FLAG,FLINPERR       INPUT ERROR?
         BO    LBLNOT              YES, IT'S NOT LABELLED
         SPACE
* A LABEL MUST BE 80 BYTES LONG EXACTLY.
         SPACE
         CLC   DCBLRECL-IHADCB+TAPE1-T(,R4),=H'80'  IS IT?
         BNE   LBLNOT              NO, IT'S NOT LABELLED
         SPACE
* CHECK FOR 'VOL1' AS THE FIRST 4 CHARACTERS
         SPACE
         CLC   VOLLABI(4),0(R1)    IS IT?
         BNE   LBLNOT              NO, IT'S NOT LABELLED
         SPACE 2
* TAPE HAS STANDARD VOLUME LABEL.  CHECK IF IT SHOULD.
         SPACE
         LA    R3,M21              PRESET SL BUT NL SPEC MSG
         MVC   M21VOL,VOLSERNO-VOLLABI(R1)  PRESET VOLSER MOUNTED
         TM    INLABEL-T(R4),JFCSL  SHOULD TAPE BE SL?
         BZ    ERROR               NO, ISSUE ERROR MESSAGE
         SPACE
* CHECK THAT CORRECT SL TAPE IS MOUNTED.
         SPACE
         LA    R3,M22              PRESET SL BUT WRONG VOLUME MSG
         MVC   M22VOL,VOLSERNO-VOLLABI(R1)  PRESET VOLSER MOUNTED
         CLC   VOLSERNO,VOLSERNO-VOLLABI(R1)  IS IT CORRECT?
         BNE   ERROR               NO, ISSUE ERROR MESSAGE
         SPACE
* CORRECT SL TAPE IS MOUNTED.  MERGE INFO INTO POSSIBLE
*  NEW OUTPUT LABEL TO BE WRITTEN.
         SPACE
         TM    INFLAG-T(R4),FLIN   IS THIS THE INPUT TAPE?
         BO    LBLSLIN             YES, BRANCH
         MVC   VOLLABI(80),0(R1)   COPY ENTIRE LABEL FROM OUTPUT TAPE
         CH    R8,OUTFILE          ARE WE WRITING FROM THE START? APR82
         BNE   LBLNEXT             NO, DONE HERE                  APR82
         SPACE ,                                                  APR82
* CHECK THE EXPIRATION DATE ON FILE 1 (BEFORE WE REWRITE THE      APR82
*  VOLUME LABEL IN A COUPLE OF PAGES).  IF OUTPUT STARTS AFTER    APR82
*  FILE 1, THE EXPIRATION DATE IS CHECKED IN RDWRPREP, FOR THE    APR82
*  FILE TO BE WRITTEN.                                            APR82
* NOTE THAT THE CHECK ROUTINE RESETS SOME FLAGS THAT WILL BE      APR82
*  RESET ANYWAY AS SOON AS WE EXIT HERE; WERE THIS NOT THE LAST   APR82
*  TAPE BEING CHECKED IT WOULD BE NECESSARY TO SET THEM AGAIN.    APR82
         SPACE ,                                                  APR82
         BAL   R2,CKEXPDT          GO CHECK EXPIRATION DATE       APR82
*                            ERROR RETURN IS DIRECTLY TO "TERM"   APR82
         SPACE ,                                                  APR82
         B     LBLNEXT             GET NEXT TAPE (REALLY EXIT)
LBLSLIN  MVC   VOLOWNER,VOLOWNER-VOLLABI(R1)  COPY OWNER INFO
         CH    R8,INFILE           ARE WE COPYING FROM BEGINNING?
         BE    LBLNEXT2            YES, LEAVE TAPE OPEN AFTER VOL LBL
         B     LBLNEXT             IN CASE O/P WAS NL AND NO PARM
         SPACE 2
* TAPE MARK FOUND AT BEGINNING OF TAPE.  TAPE IS NOT LABELLED.
* IF LABEL=(,LTM) WAS SPECIFIED, SET A FLAG.  THE FIRST FILE
*  (THE TAPE MARK) WILL BE SKIPPED LATER.
         SPACE
LBLEOF   TM    INLABEL-T(R4),JFCBLTM  DID JCL SPECIFY LABEL=(,LTM)?
         BZ    LBLNOT              NO, CONTINUE
         OI    INFLAG-T(R4),FLGOTLTM  YES, SET FLAG FOR LATER
         SPACE
* TAPE IS NOT LABELLED.  CHECK IF IT SHOULD BE.
         SPACE
LBLNOT   TM    INLABEL-T(R4),JFCSL  SHOULD IT BE SL?
         BZ    LBLNEXT             NO, TAPE IS VERIFIED.
         SPACE 2
* TAPE IS NOT LABELLED BUT SHOULD BE SL.  RETRY ONCE (SEE ABOVE).
         SPACE
         LA    R2,TAPE1-T(R4)      -> DCB
         CLOSE ((R2),REWIND)       UN-SESAME
         BALR  R6,R6               FALL THROUGH AFTER SECOND TIME
         SPACE
* TAPE IS STILL NOT LABELLED AFTER RETRY. ISSUE AN ERROR MESSAGE.
         SPACE
         LA    R2,LBLNEXT2-4       BYPASS CLOSE SINCE WE DID IT
         LA    R3,M23              PRESET TAPE CANNOT BE READ MSG
         TM    FLAG,FLINPERR       WAS THERE AN ERROR?
         BO    ERROR               YES, RIGHT MESSAGE
         LA    R3,M24              ELSE SET TAPE IS NOT LABELLED MSG
         B     ERROR               GO WRITE IT
         SPACE 2
* CLOSE THE TAPE
         SPACE
LBLNEXT  LA    R2,TAPE1-T(R4)      -> DCB
         CLOSE ((R2),REWIND)       CLOSE IT
         SPACE 2
* PROCESS THE NEXT TAPE
         SPACE
LBLNEXT2 LA    R4,T2               -> CONTROL BLOCKS FOR TAPE2
         BALR  R9,R9               RE-ENTER CODE AGAIN
         SPACE 2
* CHECK IF ANY ERROR WAS DETECTED. TERMINATE IF SO.
         SPACE
         TM    FLAG,FLERROR        ANY ERROR MESSAGE WRITTEN?
         BO    TERM                YES, SAY BYE-BYE
         SPACE
         NI    FLAG,255-FLVERLBL   WE ARE DONE WITH LABEL VERIFICATION
         OI    FLAG2,FLLBLRW       PRESET FOR LABEL READ/WRITE
         EJECT
*******************************************************************
*                                                                 *
*              SL OUTPUT VOLUME LABEL PROCESSING                  *
*                                                                 *
*        CONSTRUCT THE NEW VOLUME LABEL IF THE OUTPUT TAPE        *
*              WILL BE (RE)LABELLED.                              *
*                                                                 *
*        IF THE OUTPUT TAPE IS (OR WILL BE) LABELLED AND IS BEING *
*              WRITTEN FROM FILE 1, WRITE A NEW VOLUME LABEL.     *
*                                                                 *
*******************************************************************
         SPACE 2
* IF THE OUTPUT TAPE IS TO BE (RE)LABELLED, SET ITS LABEL TYPE
*  FLAG.  WE DON'T NEED THE OLD TYPE BECAUSE IT WAS CHECKED ALREADY.
         SPACE
         TM    OUTFLAG,FLRELBL     RELABEL PARM GIVEN?
         BZ    RELBLOUT            NO, GO TO VOL LABEL MERGE
         MVI   OUTLABEL,JFCSL      YES, SET LABEL TYPE TO SL
         SPACE
* PROTOTYPE OUTPUT LABEL IS ALREADY THERE.  IF OUTPUT TAPE WILL
*  BE SL, COMPLETE IT AND REWRITE THE LABEL.
         SPACE
* OUTPUT LABEL SOURCES:
*  OWNER: PARM3 IF GIVEN, ELSE OLD OUTPUT TAPE LABEL,
*         ELSE INPUT TAPE LABEL, ELSE BLANK
*  VOLSER: PARM2 IF GIVEN, ELSE JCL
*  REST OF LABEL: OLD OUTPUT TAPE LABEL IF LABELLED,
*         ELSE STANDARD FORMAT
         SPACE
RELBLOUT TM    OUTLABEL,JFCSL      WILL OUTPUT BE SL?
         BZ    RDWRPREP            NO, GO SET UP FOR REAL WORK
         CH    R8,OUTFILE          ARE WE WRITING OUTPUT FROM START?
         BNE   RDWRPREP            NO, DON'T REWRITE VOL LABEL
         MVC   VOLSERNO,OUTVOL     COPY NEW VOLSER
         TM    FLAG,FLOWNER        WAS OWNER PARM GIVEN?
         BZ    WRVOLLBL            NO, WRITE NEW VOLUME LABEL
         MVC   VOLOWNER,OWNER      ELSE COPY IT
         SPACE 2
* WRITE NEW VOLUME LABEL.  LEAVE OUTPUT TAPE OPEN.
         SPACE
WRVOLLBL OPEN  (TAPE2,OUTPUT),TYPE=J  SESAME
         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  LENGTH FOR LABEL WRITE
         PUT   TAPE2,VOLLABI       WRITE IT
         EJECT
*******************************************************************
*                                                                 *
*              PREPARE FOR READ-WRITE PROCESSING                  *
*                                                                 *
*        COMPUTE ACTUAL FILE NUMBERS AND UPDATE THE JFCBS.        *
*                                                                 *
*        UPDATE MESSAGE TPC006I DEPENDING ON THE TAPECOPY         *
*              OPTIONS IN USE.                                    *
*                                                                 *
*******************************************************************
         SPACE 2
* ANY ERROR DETECTED AFTER THIS POINT WILL GIVE A RETURN CODE OF 12.
         SPACE
RDWRPREP MVI   RC,12               PRESET RETURN CODE             SEP79
         SPACE
* COMPUTE ACTUAL FILE NUMBERS FOR BOTH TAPES
         SPACE
         LA    R4,T1               -> TAPE1 CONTROL BLOCKS        SEP79
         BALR  R9,0                REPEAT FROM HERE
         SPACE
* THE FOLLOWING CODE IS EXECUTED TWICE
         SPACE
         LH    R5,INFILE-T(R4)     GET THE LOGICAL FILE NUMBER
         TM    INLABEL-T(R4),JFCSL  IS IT STANDARD LABELLED?
         BZ    RDPRENL             NO, GO TO NL CODE
         MH    R5,=H'3'            COMPUTE THE PHYSICAL (BLP)
         SH    R5,=H'2'            FILE SEQUENCE NUMBER
         B     RDPRENXT            TO NEXT TAPE
         SPACE
* IF A LEADING TAPE MARK WAS FOUND AND LABEL=(,LTM) WAS
*  SPECIFIED, SKIP THE LEADING TAPE MARK AND ISSUE AN
*  INFORMATIVE MESSAGE.
         SPACE
RDPRENL  TM    INFLAG-T(R4),FLGOTLTM  WAS AN LTM FOUND?
         BZ    RDPRENXT            NO, FILE IS SET
         AR    R5,R8               UP FILE SEQUENCE NUMBER
         LA    R3,M5               -> MESSAGE
         BAL   R2,MESSAGE          ISSUE IT
         NOP   0                   IGNORE THIS
         SPACE
* SAVE THE COMPUTED FILE NUMBER IN THE JFCB
         SPACE
RDPRENXT STH   R5,JFCBFLSQ-JFCB+JFCB1-T(R4)  LIKE SO
         SPACE
* PROCESS THE OTHER TAPE
         SPACE
         LA    R4,T2               -> TAPE2 CONTROL BLOCKS
         BALR  R9,R9               GO BACK
         SPACE
* PRESET THE EOD EXIT FOR LABEL PROCESSING
         SPACE
         MVC   DCBEODA-IHADCB+TAPE1,=AL3(EODSL)
         SPACE 2
* UPDATE MESSAGE TPC006I DEPENDING ON THE OPTIONS
         SPACE
* CHECK IF ANYTHING IS BEING WRITTEN
         SPACE
         TM    OUTFLAG,FLNOTTP     IS THE OUTPUT A TAPE?
         BZ    RDPRECKF            YES, CHECK FILE NUMBERS
         MVC   M6PART1,=C'READ.  '  SET PART1
         MVC   M6PART3,=C'READ   '  SET PART2
* SET OUTPUT FILE SEQUENCE NUMBER EQUAL TO INPUT SO ONLY          DEC76
*  ONE FILE NUMBER WILL BE PRINTED IN MESSAGE TPC006I.            DEC76
         MVC   OUTFILE,INFILE      FORCE (DUMMY) OUTFILE NUMBER   DEC76
         B     RDPRECKL            GO CHECK LABELS
         SPACE
* CHECK IF INPUT AND OUTPUT FILE NUMBERS ARE THE SAME
         SPACE
RDPRECKF CLC   INFILE,OUTFILE      ARE FILE NUMBERS THE SAME?
         BE    RDPRECKL            YES, GO CHECK LABELS
         MVC   M6PART2A,=C' TO FILE'  NO, SET PART2
         MVI   M6PART2B,C'.'       ...
         SPACE
* CHECK IF OUTPUT OR INPUT ARE SL
         SPACE
RDPRECKL TM    OUTLABEL,JFCSL      IS THE OUTPUT SL?
         BO    RDCKEXPD            YES, GO CHECK EXPIRATION DATE  APR82
         TM    INLABEL,JFCSL       IS THE INPUT SL?
         BO    RDPREISL            YES, GO SET FOR THAT
         MVI   M6+1,M6END1-M6-3    NO, ADJUST LENGTH; DELETE DSN=
         B     RDPREDON            ALL SET
RDPREISL MVC   M6PART4,=C' INPUT'  ONLY INPUT IS LABELLED
         B     RDPREDON            ALL SET                        APR82
         SPACE 2                                                  APR82
* IF THE OUTPUT TAPE IS SL AND THE FILE NUMBER IS GREATER THAN    APR82
*  ONE (AND IT IS NOT BEING RELABELLED), CHECK THE EXPIRATION     APR82
*  DATE.  (IF FILE 1 IS BEING WRITTEN, IT WAS ALREADY CHECKED).   APR82
* OUTPUT IS SL IF WE GET HERE. (CHECKED AT RDPRECKL)              APR82
         SPACE ,                                                  APR82
RDCKEXPD TM    OUTFLAG,FLRELBL     RELABEL PARM GIVEN?            APR82
         BO    RDPREDON            YES, SKIP EXPDT CHECK HERE     APR82
         CH    R8,OUTFILE          ARE WE WRITING OUTPUT FROM 1?  APR82
         BE    RDPREDON            YES, EXPDT CHECK DONE ALREADY  APR82
         BAL   R2,CKEXPDT          ERROR RETURN IS TO "TERM"      APR82
         EJECT
*******************************************************************
*                                                                 *
*              ENTER PROPER READ/WRITE ROUTINE                    *
*                                                                 *
*        AT THIS POINT:                                           *
*              FOR BOTH TAPES, DCBBLKSI IS SET TO 81              *
*                              DCBTRTCH IS SET TO ET IF 7-TRACK   *
*              IN/OUTTRTCH/2 ARE SET TO THE DD CARD VALUES        *
*               IF 7-TRACK.  IN/OUTTRTCH2 MAY BE CHANGED IF       *
*               THE INPUT TAPE IS LABELLED.                       *
*                                                                 *
*        IF EITHER TAPE (OR BOTH) IS STANDARD LABELLED AND IS     *
*         BEING PROCESSED FROM THE BEGINNING, IT IS OPEN AND      *
*         POSITIONED AFTER THE VOLUME LABEL; OTHERWISE CLOSED.    *
*                                                                 *
*        REGISTER USAGE IN THESE ROUTINES:                        *
*              R0, R1: WORK REGISTER                              *
*              R2: WORK, SERVICE SUBROUTINE LINKAGE               *
*              R3: WORK, MESSAGE POINTER                          *
*              R4: WORK, CONTROL BLOCK POINTER                    *
*              R5: INPUT LABEL READ BRANCH TABLE                  *
*              R6: BLOCK COUNT                                    *
*              R7: LARGEST BLOCK SIZE                             *
*              R8: CONSTANT ONE                                   *
*              R9: TAPE READ/WRITE SERVICE SUBROUTINE LINKAGE     *
*              R14: WORK REGISTER                                 *
*                                                                 *
*******************************************************************
         SPACE 2
* BRANCH TO THE PROPER READ/WRITE ROUTINE
         SPACE
RDPREDON TM    INLABEL,JFCSL       IS THE INPUT LABELLED?
         BZ    RDPRENLX            NO, TO NL INPUT ROUTINES
         TM    OUTLABEL,JFCSL      IS THE OUTPUT LABELLED?
         BO    COPYSLSL            YES, TO SL/SL
         B     COPYSLNL            NO, TO SL/NL
RDPRENLX TM    OUTLABEL,JFCSL      IS THE OUTPUT LABELLED?
         BO    COPYNLSL            YES, TO NL/SL
         B     COPYNLNL            NO, TO NL/NL
         EJECT
*******************************************************************
*                                                                 *
*              SL/SL READ/WRITE ROUTINE                           *
*                                                                 *
*******************************************************************
         SPACE 2
* INITIALIZE TO PROCESS HEADER LABELS
         SPACE
* THE INPUT OR OUTPUT TAPE WILL ALREADY BE OPEN (AND POSITIONED
*  AFTER THE VOLUME LABEL) IF WE ARE AT THE FIRST FILE.  WE CAN
*  ISSUE AN OPEN ANYWAY (IT IS IGNORED).
         SPACE
COPYSLSL NI    FLAG2,255-FLLBLEOF-FLTLRLBL  RESET LABEL FLAGS
         OPEN  (TAPE1,INPUT),TYPE=J  OPEN INPUT
         SPACE
* OUTPUT IS OPENED AFTER HDR1/2 LABELS ARE READ SO THAT IF
*  SOMETHING IS WRONG WITH THE INPUT TAPE, THE OUTPUT TAPE
*  IS NOT CHANGED (EXCEPT IF FILE 1 IS BEING WRITTEN).
         SPACE
* READ THE HDR1 LABEL
*  IF WE FIND AN EOF, THE TAPE COPY IS COMPLETE.
         SPACE
         LA    R5,4                SET BRANCH POINTER FOR HDR1
         BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     DONE                EOF RETURN
         MVC   FL1SAVE,0(R1)       COPY THE WHOLE LABEL
         SPACE
* SAVE DSNAME FOR MESSAGES
         SPACE
         MVC   M6DSN,FL1ID-FL1LABI+FL1SAVE  COPY DSNAME
         SPACE
* MERGE FIELDS INTO THE HDR1 LABEL FROM THE PROTOTYPE OR ELSEWHERE
         SPACE
         MVC   FL1FILSR-FL1LABI+FL1SAVE,OUTVOL  SET VOL ID
         LH    R1,OUTFILE          GET LOGICAL FILE NUMBER
         CVD   R1,TEMP             DECIMALIZE
         UNPK  FL1FILSQ-FL1LABI+FL1SAVE,TEMP  UNPACK
         OI    FL1FILSQ+L'FL1FILSQ-1-FL1LABI+FL1SAVE,C'0'  FIX UP
         MVC   FL1CREDT-FL1LABI+FL1SAVE,FL1CREDT  COPY TODAY'S DATE
         CLC   =C' 00000',FL1EXPDT  WAS EXPDT GIVEN?
         BE    COPYNEXP            NO, RETAIN THE OLD ONE
         CLC   =C'000000',FL1EXPDT  WAS EXPDT GIVEN?              SEP91
         BE    COPYNEXP            NO, RETAIN THE OLD ONE         SEP91
         MVC   FL1EXPDT-FL1LABI+FL1SAVE,FL1EXPDT  YES, COPY IT
         SPACE 2
* READ THE HDR2 LABEL
*  IF WE FIND AN EOF, THE PROTOTYPE WILL BE USED.
         SPACE
COPYNEXP LA    R5,8                SET FOR HDR2
         BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     SLSLNOH2            EOF RETURN - CONSTRUCT HDR2
         MVC   FL2SAVE,0(R1)       COPY THE WHOLE LABEL
         SPACE
* MERGE FIELDS INTO THE HDR2 LABEL FROM THE PROTOTYPE
         SPACE
         MVC   FL2DEN-FL2LABI+FL2SAVE,FL2DEN  (SET BY SLCKDEN)
         MVC   FL2JOBD-FL2LABI+FL2SAVE,FL2JOBD  THIS JOBNAME
         MVC   FL2STEPD-FL2LABI+FL2SAVE,FL2STEPD  THIS STEPNAME
         MVC   FL2ID-FL2LABI+FL2SAVE,FL2ID  34XX SERIAL (OR BLANK)
         SPACE
* DETERMINE INPUT AND OUTPUT TRTCH FOR 7-TRACK TAPES.
*  SET THE OUTPUT LABEL FL2TRTCH IF NECESSARY.
         SPACE
         TM    INFLAG,FLSEVEN      IS THE INPUT 7-TRACK?
         BZ    SLSL7MER            NO, SKIP
         SPACE
* DECODE THE TRTCH IN THE INPUT LABEL
         SPACE
         LM    R1,R3,TRTCHADR      GET BXLE REGISTERS
SLSL7TRK CLC   FL2TRTCH-FL2LABI+FL2SAVE,1(R1)  IS THIS IT?
         BE    SLSL7TRC            YES, GO COPY IT
         BXLE  R1,R2,SLSL7TRK      NO, TRY NEXT ONE
SLSL7TRC MVC   INTRTCH2,0(R1)      SAVE INPUT TRTCH
         SPACE
* DETERMINE THE TRTCH FOR THE OUTPUT
         SPACE
SLSLCK7O TM    OUTFLAG,FLSEVEN     IS THE OUTPUT 7-TRACK?
         BZ    SLSLWRLB            NO, DONE HERE
         CLI   OUTTRTCH,0          WAS AN OUTPUT TRTCH GIVEN?
         BNE   SLSL7MER            YES, MERGE INTO LABEL
         MVC   OUTTRCH2,INTRTCH2   NO, USE SAME AS INPUT
         B     SLSLWRLB            DONE HERE; FL2TRTCH SET ALREADY
SLSL7MER MVC   FL2TRTCH-FL2LABI+FL2SAVE,FL2TRTCH  YES, MERGE LABEL
         SPACE 2
* LABELS ARE ALL SET.  OPEN THE OUTPUT TAPE AND WRITE THEM.
         SPACE
SLSLWRLB OPEN  (TAPE2,OUTPUT),TYPE=J  ONION?
         SPACE
* PROCESS OUTPUT DENSITY IF NOT DONE YET
         SPACE
         BAL   R9,SLCKDEN          DO IT
         SPACE
* WRITE OUT THE HDR1/2 LABELS.
         SPACE
         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  SET LABEL LENGTH
         PUT   TAPE2,FL1SAVE       WRITE HDR1
         PUT   TAPE2,FL2SAVE       WRITE HDR2
         SPACE
* IF ANY OTHER LABELS FOLLOW, THEY WILL BE COPIED.
         SPACE
         SR    R5,R5               SET BRANCH OFFSET FOR UHL
SLSLLBLS BAL   R9,RDLABEL          READ A LABEL
         B     SLSLGO              ERROR, IGNORE (STOP AFTER FILE)
         B     SLSLGO              EOF
         LR    R0,R1               AND
         PUT   TAPE2,(0)           WRITE IT OUT
         B     SLSLLBLS            THIS ENDS AT EOF
         SPACE 2
* IF NO HDR2 LABEL WAS READ, USE THE PROTOTYPE CONSTRUCTED EARLIER.
*  SAVE THE SPECIFIED (DD CARD) TRTCH INTO IT; THEN CONTINUE
*  NORMAL 7-TRACK TRTCH PROCESSING.
         SPACE
SLSLNOH2 MVC   FL2SAVE,FL2LABI     COPY THE PROTOTYPE
         TM    INFLAG,FLSEVEN      IS THE INPUT 7-TRACK?
         BZ    SLSLWRLB            NO, SKIP THIS GARBAGE
         LM    R1,R3,TRTCHADR      YES, GET TRTCH REGISTERS
SLSLTSH2 CLC   INTRTCH2,0(R1)      IS THIS THE DD CARD SPEC?
         BE    SLSLTRH2            YES, MOVE INTO THE LABEL
         BXLE  R1,R3,SLSLTSH2      NO, TRY THE NEXT ONE
SLSLTRH2 MVC   FL2TRTCH-FL2LABI+FL2SAVE,1(R1)  COPY IT
         B     SLSLCK7O            CONTINUE 7-TRACK OUTPUT PROCESSING
         SPACE 2
* HEADER LABEL PROCESSING IS COMPLETE
         SPACE
SLSLGO   CLOSE (TAPE1,LEAVE,TAPE2,LEAVE)  UN-SESAME
         SPACE
* UP THE JFCB FILE SEQUENCE NUMBERS.
         SPACE
         LA    R4,JFCB1            -> INPUT JFCB
         BALR  R3,0                REPEAT AFTER ME
         LH    R1,JFCBFLSQ-JFCB(R4)  GET SEQUENCE
         AR    R1,R8               UP BY 1
         STH   R1,JFCBFLSQ-JFCB(R4)  SAVE IT BACK
         LA    R4,JFCB2            -> OUTPUT JFCB
         BALR  R3,R3               REPEAT BEFORE ME
         SPACE
* COPY THE LABEL BLKSIZE FOR THE COPY ROUTINE
         SPACE
         MVC   INPBLKSI,FL2BLKL-FL2LABI+FL2SAVE  COPY FROM OUTPUT LABEL
         SPACE 2
* DO THE COPY
         SPACE
         BAL   R9,CPSLDATA         CALL THE COPY ROUTINE
         SPACE 2
* PROCESS TRAILER LABELS
* THEY ARE VALIDITY CHECKED, AND A FLAG IS SET IF AN EOV (RATHER
*  THAN EOF) LABEL IS FOUND, BUT THE LABELS WRITTEN OUT ARE THE
*  ONES SAVED FROM HEADER LABEL PROCESSING.
         SPACE
* CHANGE THE SAVED LABELS TO BE EOF LABELS.  THE BLOCKCOUNT WAS
*  ALREADY SAVED (BY THE COPY SUBROUTINE).
         SPACE
         MVC   FL1SAVE(3),=C'EOF'  MAKE IT EOF
         MVC   FL2SAVE(3),=C'EOF'  MAKE IT EOF
         SPACE
* OPEN THE TAPES.  IF A TERMINATING DATA ERROR WAS FOUND ON THE
*  INPUT TAPE IT IS NOT READ ANY FURTHER.
         SPACE
         OPEN  (TAPE2,OUTPUT),TYPE=J  OPEN THE OUTPUT
         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  SET LABEL LENGTH
         OI    FLAG2,FLLBLEOF      MAKE SURE SET IN CASE WE BRANCH
         TM    FLAG2,FLDTAERR      WAS THERE AN INPUT ERROR?
         BO    SLSLEOFW            YES, GO WRITE LABELS WE HAVE
         SPACE
         NI    FLAG2,255-FLLBLEOF  RESET LABEL-EOF FLAG
         OPEN  (TAPE1,INPUT),TYPE=J  OPEN INPUT LABELS
         SPACE
* READ THE EOF1/EOV1 LABEL
         SPACE
         LA    R5,16               OFFSET FOR EOF1/EOV1
         BAL   R9,RDLABEL          READ IT
         B     SLSLEOFR            ERROR, GO WRITE
         B     SLNOEOF1            EOF1 MISSING, ISSUE MESSAGE
         SPACE
* READ THE EOF2/EOV2 LABEL
         SPACE
         LA    R5,20               OFFSET FOR EOF2/EOV2
         BAL   R9,RDLABEL          READ IT
         NOP   0                   ERROR RETURN
         NOP   0                   EOF RETURN
         SPACE
* IF EOV LABELS WERE FOUND, CHANGE OUR LABELS TO EOV LABELS.
         SPACE
SLSLEOFR TM    FLAG2,FLEOV         WERE EOV LABELS FOUND?
         BZ    SLSLEOFW            NO, WRITE OUT EOF LABELS
         MVC   FL1SAVE(3),=C'EOV'  MAKE THESE
         MVC   FL2SAVE(3),=C'EOV'   EOV LABELS
         SPACE
* WRITE OUT THE EOF/EOV LABELS
         SPACE
SLSLEOFW PUT   TAPE2,FL1SAVE       EOF1/EOV1
         PUT   TAPE2,FL2SAVE       EOF2/EOV2
         SPACE
* COPY ANY UTL LABELS FOUND.
         SPACE
         LA    R5,12               PRESET FOR UTL LABELS
SLSLEOFL BAL   R9,RDLABEL          READ THEM
         B     SLSLEOF             ERROR RETURN
         B     SLSLEOF             EOF RETURN
         LR    R0,R1               -> UTL LABEL
         PUT   TAPE2,(0)           WRITE IT OUT
         B     SLSLEOFL            GET THE NEXT ONE
         SPACE
* THIS SL FILE FINISHED.  CLOSE THE TAPES AND UP THE JFCB FLSQ'S.
         SPACE
SLSLEOF  CLOSE (TAPE1,LEAVE,TAPE2,LEAVE)  ONION OFF RYE?
         LA    R4,JFCB1            -> INPUT JFCB
         BALR  R3,0                REPEAT AFTER ME
         LH    R1,JFCBFLSQ-JFCB(R4)  GET SEQUENCE
         AR    R1,R8               UP BY 1
         STH   R1,JFCBFLSQ-JFCB(R4)  SAVE IT BACK
         LA    R4,JFCB2            -> OUTPUT JFCB
         BALR  R3,R3               REPEAT BEFORE ME
         SPACE 2
* DECIDE IF THE TAPECOPY IS COMPLETED.
         SPACE
         TM    FLAG2,FLLBLERR+FLDTAERR  LABEL/DATA ERROR FOUND?
         BNZ   TERM                YES, STOP HERE
         L     R1,LIMIT            GET THE COPY LIMIT
         SR    R1,R8               DECREMENT COUNT
         BZ    DONE                EXIT IF COMPLETED
         ST    R1,LIMIT            ELSE SAVE IT BACK
         TM    FLAG2,FLEOV         DID WE READ EOV LABELS?
         BO    DONE                YES, STOP HERE
         B     COPYSLSL            ELSE GO COPY ANOTHER FILE
         SPACE 2
* ISSUE AN ERROR MESSAGE IF EOF1/EOV1 LABEL WAS MISSING.
         SPACE
SLNOEOF1 LA    R2,LABLTABL(R5)     SET LABEL-TABLE POINTER
         LA    R3,=CL17'MISSING.'  ERROR TYPE
         B     RDLERROR            GO TO COMMON LABEL-ERROR CODE
*              NOTE THAT RETURN WILL EVENTUALLY BE TO 0(R9).
         EJECT
*******************************************************************
*                                                                 *
*              SL/NL READ/WRITE ROUTINE                           *
*                                                                 *
*******************************************************************
         SPACE 2
* READ HEADER LABELS.  ALL WE ARE INTERESTED IN IS DSNAME,
*  BLKSIZE, AND TRTCH.
         SPACE
COPYSLNL NI    FLAG2,255-FLLBLEOF-FLTLRLBL  RESET LABEL FLAGS
         OPEN  (TAPE1,INPUT),TYPE=J  OPEN IT
         SPACE
* READ HDR1 LABEL
         SPACE
         LA    R5,4                SET HDR1 OFFSET
         BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     DONE                EOF RETURN
         MVC   M6DSN,FL1ID-FL1LABI(R1)  COPY DSNAME TO TPC006I MESSAGE
         SPACE
* READ HDR2 LABEL
         SPACE
         LA    R5,8                SET HDR2 OFFSET
         BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     SLNLGO              EOF RETURN
         MVC   INPBLKSI,FL2BLKL-FL2LABI(R1)  COPY INPUT BLKSI FOR COPY
         SPACE
* SET INPUT TRTCH IF 7-TRACK
         SPACE
         TM    INFLAG,FLSEVEN      IS INPUT 7-TRACK?
         BZ    SLNLNOT7            NO, SKIP THIS
         LR    R4,R1               SAVE R1; IT POINTS TO THE LABEL READ
         LM    R1,R3,TRTCHADR      GET TRTCH REGISTERS
SLNL7TRK CLC   FL2TRTCH-FL2LABI(,R4),1(R1)  IS THIS IT?
         BE    SLNL7TRC            YES, WE GOT IT
         BXLE  R1,R2,SLNL7TRK      NO, TRY THE NEXT ONE
SLNL7TRC MVC   INTRTCH2,0(R1)      YES, SAVE THE RIGHT VALUE
         SPACE
* READ AND IGNORE UHL LABELS
         SPACE
SLNLNOT7 SR    R5,R5               SET UHL OFFSET
SLNLSKPL BAL   R9,RDLABEL          READ IT
         B     SLNLGO              ERROR RETURN
         B     SLNLGO              EOF RETURN
         B     SLNLSKPL            NORMAL RETURN
         SPACE
* CLOSE THE LABEL FILE
         SPACE
SLNLGO   CLOSE (TAPE1,LEAVE)       CLOSE THE LABEL FILE
         LH    R1,JFCBFLSQ-JFCB+JFCB1  UP THE
         AR    R1,R8               BLP FILE SEQUENCE
         STH   R1,JFCBFLSQ-JFCB+JFCB1  AND SAVE IT BACK
         SPACE 2
* COPY THE DATA FILE
         SPACE
         BAL   R9,CPSLDATA         DO THE COPY
         SPACE
* IF AN TERMINATING ERROR OCCURRED, STOP.
         SPACE
         TM    FLAG2,FLDTAERR      TERMINATING ERROR?
         BO    TERM                YES, BYE BYE
         SPACE
* READ TRAILER LABELS. RDLABEL CHECKS FOR EOV LABELS FOUND.
         SPACE
         NI    FLAG2,255-FLLBLEOF  RESET LABEL-EOF FLAG
         OPEN  (TAPE1,INPUT),TYPE=J  OPEN TRAILER LABEL FILE
         SPACE
         LA    R5,16               OFFSET FOR EOF1
         BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     SLNOEOF1            EOF RETURN - ERROR MSG, THEN TERM
         SPACE
         LA    R5,20               OFFSET FOR EOF2
         BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     SLNLNEXT            EOF RETURN
         SPACE
         LA    R5,12               OFFSET FOR UTL
SLNLUTL  BAL   R9,RDLABEL          READ IT
         B     TERM                ERROR RETURN
         B     SLNLNEXT            EOF RETURN
         B     SLNLUTL             NORMAL RETURN
         SPACE
* CLOSE THE TRAILER LABEL FILE AND UP THE SEQUENCE NUMBER.
         SPACE
SLNLNEXT CLOSE (TAPE1,LEAVE)       CLOSE IT
         LH    R1,JFCBFLSQ-JFCB+JFCB1  GET FLSQ
         AR    R1,R8               UP IT
         STH   R1,JFCBFLSQ-JFCB+JFCB1  SAVE IT BACK
         SPACE
* DECIDE IF THE TAPECOPY IS COMPLETE
         SPACE
         TM    FLAG2,FLLBLERR+FLDTAERR  IF LABEL OR DATA ERROR,
         BNZ   TERM                TERMINATE
         L     R1,LIMIT            GET READ LIMIT
         SR    R1,R8               DECREMENT COUNT
         BZ    DONE                EXIT IF COMPLETED
         ST    R1,LIMIT            ELSE SAVE IT BACK
         TM    FLAG2,FLEOV         WAS AN EOV LABEL FOUND?
         BO    DONE                YES, WE ARE DONE
         B     COPYSLNL            ELSE DO THE NEXT FILE
         EJECT
*******************************************************************
*                                                                 *
*              NL/SL READ/WRITE ROUTINE                           *
*                                                                 *
*******************************************************************
         SPACE 2
* FILL IN PROTOTYPE HEADER LABELS AND WRITE THEM
         SPACE
COPYNLSL NI    FLAG2,255-FLTLRLBL  RESET TRAILER-LABEL FLAG
         OPEN  (TAPE2,OUTPUT),TYPE=J  OPEN THE HEADER FILE
         SPACE
         BAL   R9,SLCKDEN          FILL IN DEN/TU SER IF NOT DONE
         LH    R1,OUTFILE          GET THE LOGICAL FILE NUMBER
         CVD   R1,TEMP             TO READABLE
         UNPK  FL1FILSQ,TEMP       PUT IN HDR1 LABEL
         OI    FL1FILSQ+L'FL1FILSQ-1,C'0'  ...
         MVC   FL1BLKCT,=C'000000'  ZERO THE BLOCK COUNT
         MVC   FL1ID(4),=C'FILE'   CONSTRUCT DSNAME OF FILENNNN
         MVC   FL1ID+4(4),FL1FILSQ  ...
         MVC   M6DSN,FL1ID         COPY DSNAME TO MSG TPC006I
         SPACE
         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  LABELS ARE 80 BYTES
         PUT   TAPE2,FL1LABI       WRITE HDR1
         PUT   TAPE2,FL2LABI       WRITE HDR2
         CLOSE (TAPE2,LEAVE)       CLOSE IT
         LH    R1,JFCBFLSQ-JFCB+JFCB2  UP THE JFCB
         AR    R1,R8               SEQUENCE NUMBER
         STH   R1,JFCBFLSQ-JFCB+JFCB2  AND SAVE IT BACK
         SPACE 2
* COPY THE DATA FILE
         SPACE
         BAL   R9,CPSLDATA         COPY IT
         SPACE
* WRITE THE TRAILER LABELS
         SPACE
         OPEN  (TAPE2,OUTPUT),TYPE=J  OPEN TRAILER LABEL FILE
         MVC   DCBLRECL-IHADCB+TAPE2,=H'80'  LABELS ARE 80 BYTES
         SPACE
         LA    R4,FL1LABI          -> HDR1
         BALR  R3,0                REPEAT AFTER ME
         MVC   0(3,R4),=C'EOF'     CHANGE LABEL TO AN EOF LABEL
         PUT   TAPE2,(R4)          WRITE IT OUT
         MVC   0(3,R4),=C'HDR'     CHANGE LABEL BACK TO A HDR
         LA    R4,FL2LABI          -> HDR2
         BALR  R3,R3               REPEAT BEFORE ME
         SPACE
         CLOSE (TAPE2,LEAVE)       CLOSE IT
         LH    R1,JFCBFLSQ-JFCB+JFCB2  UP THE JFCB
         AR    R1,R8               SEQUENCE NUMBER
         STH   R1,JFCBFLSQ-JFCB+JFCB2  AND SAVE IT BACK
         SPACE
* CALL NL-INPUT DECISION ROUTINE. IT RETURNS IF WE SHOULD
*  CONTINUE COPYING.
         SPACE
         BAL   R9,NLCKEOF          CALL IT
         B     COPYNLSL            CONTINUE WITH THE NEXT FILE
         EJECT
*******************************************************************
*                                                                 *
*              NL/NL READ/WRITE ROUTINE                           *
*                                                                 *
*******************************************************************
         SPACE 2
COPYNLNL BAL   R9,COPYDATA         COPY THE DATA FILE
         BAL   R9,NLCKEOF          CALL EOF DECISION ROUTINE
         B     COPYNLNL            COPY ANOTHER FILE
         SPACE 5
*******************************************************************
*                                                                 *
*              NL INPUT EOF DECISION ROUTINE                      *
*                                                                 *
*        EXIT IS TO "TERM" OR "DONE" IF APPROPRIATE; ELSE         *
*              RETURN TO CALLER.                                  *
*                                                                 *
*******************************************************************
         SPACE 2
NLCKEOF  TM    FLAG2,FLDTAERR      WAS THERE A DATA FILE ERROR?
         BO    TERM                YES, TERMINATE
         SPACE
         L     R1,LIMIT            GET CURRENT COPY LIMIT
         SR    R1,R8               DECREMENT COUNT
         BZ    DONE                EXIT IF COMPLETED
         ST    R1,LIMIT            ELSE SAVE UPDATED COUNT
         SPACE
         TM    INFLAG,FLPID        IS THE INPUT A PID TAPE?
         BZ    NLCKEOF2            NO, SKIP THIS
         CR    R6,R8               WAS THERE ONE BLOCK?
         BNE   NLCKEOF2            NO, SKIP THIS
         CH    R7,=H'80'           OF 80 BYTES?
         BE    DONE                YES, COPY IS COMPLETE
         SPACE
NLCKEOF2 LTR   R6,R6               DID WE REACH EOF?
         BZ    DONE                YES, COPY COMPLETED
         BR    R9                  NO, RETURN TO CONTINUE
         EJECT
*******************************************************************
*                                                                 *
*              ROUTINE TO READ INPUT LABELS                       *
*                                                                 *
*        THIS ROUTINE READS AND VALIDITY-CHECKS INPUT             *
*         LABELS ON TAPE1.                                        *
*                                                                 *
*        AT ENTRY:                                                *
*              TAPE1 MUST BE OPEN                                 *
*              EODAD MUST BE SET APPROPRIATELY                    *
*              DCBBLKSI MUST BE SET TO 81 (OR MORE)               *
*              R5 MUST BE SET FOR BRANCH TABLE:                   *
*                0 FOR UHL LABELS (NOT CHECKED)                   *
*                4 FOR HDR1 LABEL                                 *
*                8 FOR HDR2 LABEL                                 *
*               12 FOR UTL LABELS (NOT CHECKED)                   *
*               16 FOR EOF1/EOV1 LABEL                            *
*               20 FOR EOF2/EOV2 LABEL                            *
*              FOR EOF1/EOV1 LABEL PROCESSING:                    SEP79
*               R6 CONTAINS OUTPUT TAPE BLOCK COUNT               SEP79
*               "INPBLSKP" CONTAINS COUNT OF INPUT BLOCKS SKIPPED SEP79
*                                                                 *
*        REGISTER USAGE:                                          *
*              R1: RETURNS LABEL ADDRESS ON NORMAL RETURN         *
*              R2, R3, R4: WORK REGISTERS                         SEP79
*              R5: BRANCH TABLE INDEX FOR LABEL VALIDATION        *
*                  (MAY BE DESTROYED ON RETURN)                   SEP79
*              R9: RETURN REGISTER                                *
*                  RETURNS:                                       *
*                   +0 = I/O ERROR OR FORMAT ERROR                *
*                        (MESSAGE ISSUED; FLLBLERR SET)           *
*                   +4 = EOF                                      *
*                   +8 = NORMAL                                   *
*                                                                 *
*******************************************************************
         SPACE 2
* READ A LABEL RECORD
         SPACE
RDLABEL  TM    FLAG2,FLLBLEOF      DID WE ALREADY GET AN EOF?
         BO    4(R9)               YES, TAKE EOF RETURN
         NI    FLAG,255-FLINPERR   RESET INPUT-ERROR FLAG
         GET   TAPE1               READ A LABEL
         SPACE
* TEST FOR I/O ERROR OR WRONG LENGTH (NOT 80).
         SPACE
         LA    R2,LABLTABL(R5)     PRESET LABEL-TABLE POINTER
         LA    R3,=CL17'UNREADABLE.'  PRESET ERROR CAUSE
         TM    FLAG,FLINPERR       WAS THERE AN INPUT ERROR?
         BO    RDLERROR            YES, ISSUE A MESSAGE
         LA    R3,=CL17'WRONG LENGTH.'  PRESET ERROR CAUSE
         CLC   DCBLRECL-IHADCB+TAPE1,=H'80'  IS IT 80 BYTES?
         BNE   RDLERROR            NO, ISSUE A MESSAGE
         SPACE
* CHECK FOR THE PROPER LABEL ID.
         SPACE
         LA    R3,=CL17'WRONG FORMAT.'  PRESET ERROR CAUSE
         CLC   0(4,R1),0(R2)       IS IT CORRECT?
         BNE   RDLBRNCH(R5)        NO, USE BRANCH TABLE           APR81
         CLC   =C'EOF1',0(R1)      IS THIS AN EOF1 LABEL?
         BE    RDLEOF1             YES, GO PROCESS BLOCK COUNT
         B     8(R9)               NO, RETURN TO CALLER
         SPACE
* BRANCH TABLE FOR DISAGREEABLE LABELS READ                       SEP79
         SPACE ,                                                  SEP79
RDLBRNCH DS    0H                                                 SEP79
         B     8(R9)               NO CHECKING FOR UHL
         B     RDLERROR            MESSAGE FOR HDR1
         B     RDLERROR            MESSAGE FOR HDR2
         B     8(R9)               NO CHECKING FOR UTL
         B     RDLEOV1             EOF1 MIGHT BE EOV1
         B     RDLEOV2             EOF2 MIGHT BE EOV2
         SPACE
* CHECK IF EOV LABELS READ INSTEAD OF EOF LABELS
         SPACE
RDLEOV1  CLC   =C'EOV1',0(R1)      IS THIS AN EOV1?
         BNE   RDLERROR            NO, ISSUE MESSAGE
         OI    FLAG2,FLEOV         YES, SET A FLAG
         B     RDLEOF1             GO PROCESS BLOCK COUNT         SEP79
RDLEOV2  TM    FLAG2,FLEOV         DID WE GET AN EOV1?
         BZ    RDLERROR            NO, WE CAN'T HAVE AN EOV2
         CLC   =C'EOV2',0(R1)      IS THIS AN EOV2?
         BE    8(R9)               YES, TAKE NORMAL RETURN
         SPACE
* LABEL ERROR DETECTED.  SET A FLAG AND ISSUE MSG TPC032A.
         SPACE
RDLERROR OI    FLAG2,FLLBLERR      SET LABEL-ERROR FLAG
         MVC   M32EXPCT,0(R2)      THIS IS WHAT WE WANTED
         MVC   M32RESON,0(R3)      THIS IS WHY
         LH    R14,INFILE          GET THE FILE NUMBER
         TM    FLAG2,FLTLRLBL      WAS IS ON INPUT LABELS?
         BZ    RDLGOTFI            YES, FILE NUMBER OK
         SR    R14,R8              NO, WAS INCREMENTED BY COPY RTN
RDLGOTFI BAL   R2,EDIT             MAKE IT PRETTY
         MVC   M32FSEQ,DECIMAL+L'DECIMAL-L'M32FSEQ  PUT IN MESSAGE
         LA    R4,T1               -> INPUT TAPE, FOR MSG         APR82
         LA    R3,M32              ISSUE IT
         BAL   R2,ERROR            ...
         NOP   0                   IGNORE THIS
         BR    R9                  TAKE ERROR RETURN TO CALLER
         SPACE 2                                                  SEP79
* PROCESS BLOCK COUNT ON EOF1/EOV1 INPUT LABELS                   SEP79
         SPACE ,                                                  SEP79
RDLEOF1  A     R6,INPBLSKP         COMPUTE EXPECTED INPUT BLK CNT SEP79
         SPACE ,                                                  SEP79
* CONVERT THE BLOCK COUNT IN THE LABEL TO BINARY.  IF THE FIELD   SEP79
*  DOES NOT CONTAIN VALID NUMERIC CHARACTERS A MESSAGE IS ISSUED. SEP79
         SPACE ,                                                  SEP79
         MVC   M36BLLBL,=C'INVALID'  PRESET MESSAGE FIELD         SEP79
         LA    R2,L'FL1BLKCT       LENGTH OF FIELD                SEP79
         LA    R3,FL1BLKCT-FL1LABI(,R1)  LOCATION OF FIELD        SEP79
RDLCK1   CLI   0(R3),C'0'          MAKE SURE WE HAVE              SEP79
         BL    RDLBLBAD            VALID NUMERICS                 SEP79
         CLI   0(R3),C'9'          ELSE GO ISSUE                  SEP79
         BH    RDLBLBAD            AN ERROR MESSAGE               SEP79
         AR    R3,R8               GET NEXT DIGIT                 SEP79
         BCT   R2,RDLCK1           AND CHECK IT                   SEP79
         SPACE ,                                                  SEP79
         PACK  TEMP,FL1BLKCT-FL1LABI(,R1)  PACK IT                SEP79
         CVB   R2,TEMP             BINARIZE IT                    SEP79
         SPACE ,                                                  SEP79
* COMPARE THE INPUT AND EXPECTED BLOCK COUNTS.                    SEP79
         SPACE ,                                                  SEP79
         CR    R2,R6               ARE THEY EQUAL?                SEP79
         BE    8(R9)               YES, TAKE NORMAL RETURN        SEP79
         SPACE ,                                                  SEP79
* INPUT BLOCK COUNT DIFFERS FROM EXPECTED.                        SEP79
         SPACE ,                                                  SEP79
         LR    R14,R2              GET BLOCK COUNT FROM LABEL     SEP79
         BAL   R2,EDIT             MAKE IT LOOK PRETTY            SEP79
         MVC   M36BLLBL,DECIMAL+L'DECIMAL-L'M36BLLBL  INTO MSG    SEP79
RDLBLBAD LR    R14,R6              GET ACTUAL BLOCKS READ         SEP79
         BAL   R2,EDIT             MAKE IT LOOK PRETTY TOO        SEP79
         MVC   M36BLEXP,DECIMAL+L'DECIMAL-L'M36BLEXP  INTO MSG    SEP79
         MVC   M36LABEL,0(R1)      COPY LABEL TYPE                SEP79
         LH    R14,INFILE          GET THE FILE NUMBER            SEP79
         SR    R14,R8              DECREMENT: THIS IS O/P LABEL   SEP79
         BAL   R2,EDIT             PRETTIFY IT TOOO               SEP79
         MVC   M36FILE,DECIMAL+L'DECIMAL-L'M36FILE  PUT IN MSG    SEP79
         LR    R5,R1               SAVE LABEL ADDRESS             SEP79
         LA    R3,M36              ISSUE THE MESSAGE              SEP79
         BAL   R2,ERROR            ...                            SEP79
         NOP   0                   IGNORE THIS                    SEP79
         LR    R1,R5               RESTORE LABEL ADDRESS          SEP79
         B     8(R9)               AND TAKE NORMAL RETURN         SEP79
         SPACE 3
* EOF EXIT FOR SL INPUT LABELS
         SPACE
EODSL    OI    FLAG2,FLLBLEOF      SET A FLAG FOR FUTURE USE
         B     4(R9)               TAKE EOF RETURN
         EJECT
*******************************************************************
*                                                                 *
*              SL OUTPUT DENSITY FIX-UP ROUTINE                   *
*                                                                 *
*        THIS ROUTINE COPIES THE OUTPUT DENSITY REALLY BEING      *
*         USED FROM THE DCB TO THE JFCB FOR TAPE2.  THIS AVOIDS   *
*         DUAL DENSITY CHECKS AND SPINNING TAPES ON SUBSEQUENT    *
*         OPENS FOR OUTPUT.                                       *
*                                                                 *
*        THIS ROUTINE ALSO FILLS IN THE DENSITY IN THE OUTPUT     *
*         HDR2 LABELS, AND THE 34XX TAPE DRIVE SERIAL IF THE      *
*         OUTPUT IS TO A 34XX.                                    *
*                                                                 *
*        REGISTER USAGE:                                          *
*              R1: WORK REGISTER                                  *
*              R2: WORK REGISTER                                  *
*              R9: RETURN ADDRESS                                 *
*                                                                 *
*        THE OUTPUT DCB MUST BE OPEN WHEN THIS ROUTINE IS CALLED. *
*                                                                 *
*******************************************************************
         SPACE 2
* CHECK IF THIS ROUTINE WAS ALREADY EXECUTED
         SPACE
SLCKDEN  TM    FLAG,FLDENFIX       ALREADY ENTERED?
         BCR   1,R9                YES, RETURN
         OI    FLAG,FLDENFIX       SHOW WE WERE ENTERED
         SPACE
* GET THE OUTPUT DENSITY.  SAVE IT IN THE OUTPUT JFCB.
         SPACE
         SR    R1,R1               CLEAR R1 FOR IC
         IC    R1,DCBDEN-IHADCB+TAPE2  GET THE REAL OUTPUT DENSITY
         STC   R1,JFCDEN-JFCB+JFCB2  SAVE IT
         SPACE
* COMPUTE THE DENSITY FOR THE OUTPUT LABELS.  THIS CODE
*  WORKS FOR DENSITIES 0 THROUGH 4.
         SPACE
         LA    R1,X'30'(,R1)       NOTE THAT DEN=4 STARTS AS X'D3'
         SRL   R1,6                DENSITY IS NOW X'00' TO X'04'
         LA    R1,C'0'(,R1)        MAKE IT EBCDIC NUMERIC
         STC   R1,FL2DEN           PUT IT IN THE LABELS
         STC   R1,FL2DEN-FL2LABI+FL2SAVE  PUT IT HERE TOO
         SPACE
* IF THIS A 3420, GET THE TAPE DRIVE SERIAL FROM THE
*  UCB TAPE EXTENSION.  OPEN HAS SAVED IT THERE.
* NOTE THAT THE HIGH-ORDER DIGIT (THE MODEL NUMBER) IS NOT
*  PRESENT IN THE UCB, AND CAN BE OBTAINED ONLY VIA A SENSE
*  COMMAND.  THIS CODE LEAVES IT AS ZERO.
         SPACE
* IF THIS IS A 3480, GET THE TAPE DRIVE SERIAL FROM THE           DEC85
*  UCB 3480 TAPE CLASS EXTENSION.  OPEN HAS SAVED IT THERE.       DEC85
         SPACE ,                                                  DEC85
         L     R1,DCBDEBAD-IHADCB+TAPE2  -> DEB
         L     R1,DEBSUCBA-DEBBASIC(R1)  -> UCB
         USING UCB,R1
         CLI   UCBTBYT4,X'80'      IS THIS A 3480 (NATIVE MODE)?  DEC85
         BE    MVS3480             YES, GO HANDLE IT              DEC85
         CLI   UCBTBYT1,X'33'      IS THIS A 3480 (COMPAT MODE)?  DEC85
         BE    MVS3480             YES, GO HANDLE IT              DEC85
         CLI   UCBTBYT4,X'81'      IS THIS A 3490E?               SEP91
         BE    MVS3480             YES, HANDLE IT AS A 3480       SEP91
         CLI   UCBTBYT4,X'03'      IS THIS A 3400?
         BCR   7,R9                NO, RETURN
         SPACE
* TEST FOR OS OR VS.. THE UCB FORMATS DIFFER
* ABSOLUTE OFFSETS ARE USED SO THAT THIS CODE WILL ASSEMBLE
*  WITH EITHER OS OR MVS.
         SPACE
         L     R2,16               -> CVT
*        TM    CVTDCB,CVTMVS2      IS THIS MVS?
         TM    116(R2),X'01'       IS THIS MVS?
         BO    MVSUCB              YES, TO MVS CODE
         SPACE
* THE FOLLOWING CODE IS FOR OS, VS1, AND SVS
         SPACE
         CLI   UCB+24,24           (UCB+24=UCBSENSN)  24 BYTES SENSE?
         BCR   7,R9                NO, RETURN
         L     R1,UCB+48           (UCB+48=UCBXTN)  -> UCB TAPE XTN
         LH    R1,8(,R1)           (UCBMT+8=UCBCTD)  GET T.U. SERIAL
         B     COMONUCB            CONTINUE
         SPACE
* THE FOLLOWING CODE IS FOR MVS
         SPACE
MVSUCB   L     R2,UCB+20           (UCB+20=UCBEXTPT)  COMMON UCB XTN
         CLI   4(R2),24            (UCBCMEXT+4=UCBSNSCT)  24 BYTES SNS?
         BCR   7,R9                NO, RETURN
         L     R1,UCB+44           (UCB+44=UCBXTN)  -> UCB TAPE XTN
         LH    R1,0(R1)            (UCBMT+0=UCBCTD)  GET T.U. SEIAL
         B     COMONUCB            GO COMPLETE LABEL              DEC85
         SPACE ,                                                  DEC85
* THE 3480 IS SUPPORTED ONLY ON MVS, SO MVS IS ASSUMED HERE.      DEC85
* THE OFFSET FOR UCBCXTUS DIFFERS IN MVS/XA AND MVS/ESA, SO AN    SEP91
*  ADDITIONAL TEST IS MADE WITHIN THIS CODE.                      SEP91
         SPACE ,                                                  DEC85
MVS3480  L     R1,UCB+20           (UCB+20=UCBEXTPT)  -> COM XTN  DEC85
         L     R1,24(R1)           (UCBCMEXT+24=UCBCLEXT)         DEC85*
                                     -> TAPE (3480) CLASS XTN     DEC85
         L     R2,16               -> CVT                         SEP91
*        TM    CVTDCB,CVTMVSE      IS THIS MVS/XA (OR HIGHER)?    SEP91
         TM    116(R2),X'80'       IS THIS MVS/XA (OR HIGHER)?    SEP91
         BO    MVSXA80             YES, TO MVS/XA CODE            SEP91
         L     R1,40(R1)           (UCBCX+40=UCBCXTUS)  = SERIAL  DEC85
         B     MVSCM80             BRANCH TO COMMON 3480 CODE     SEP91
MVSXA80  L     R1,48(R1)           (UCBCX+48=UCBCXTUS IN DFP/XA)  SEP91
MVSCM80  DS    0H                     = SERIAL                    SEP91
         SLA   R1,4                SHIFT LEFT A NIBBLE FOR SIGN   DEC85
         BCR   8,R9                ZERO?  RETURN IF SO!           DEC85
         ST    R1,TEMP+4           SAVE IT FOR THE UNPACK         DEC85
         B     COMONUC2            CONTINUE                       DEC85
         DROP  R1
         SPACE
* COMMON CODE
         SPACE
COMONUCB CVD   R1,TEMP             CONVERT IT
COMONUC2 UNPK  FL2ID,TEMP          UNPACK IT TO THE LABEL         DEC85
         OI    FL2ID+L'FL2ID-1,C'0'  FIX IT UP
         TR    FL2ID,HEXSTUFF-C'0'  MAKE X'FA'-X'FF' INTO A-F     DEC85
         MVC   FL2ID-FL2LABI+FL2SAVE,FL2ID  COPY IT HERE TOO
         BR    R9                  ALL DONE, RETURN
         EJECT ,                                                  APR82
******************************************************************APR82
*                                                                 APR82
*              SL OUTPUT EXPIRATION-DATE-CHECK ROUTINE            APR82
*                                                                 APR82
*        THIS ROUTINE READS THE HDR1 LABEL (IF ANY) FOR           APR82
*         THE OUTPUT FILE BEING WRITTEN AND CHECKS IF THE         APR82
*         EXPIRATION DATE HAS PASSED.                             APR82
*                                                                 APR82
*        AT ENTRY:                                                APR82
*              TAPE2 MAY BE OPEN AND POSITIONED AFTER THE         APR82
*                VOL1 LABEL (FOR THE FIRST FILE); IF IT ISN'T,    APR82
*                IT WILL BE OPENED.                               APR82
*              JFCB FILE SEQUENCE NUMBER MUST BE SET.             APR82
*              DCBBLKSI MUST BE SET TO 81 (OR MORE)               APR82
*                                                                 APR82
*        ON EXIT:                                                 APR82
*              IF THE TAPE SHOULD NOT BE WRITTEN ON, MESSAGE      APR82
*                TPC025A IS ISSUED, AND EXIT IS TO "TERM";        APR82
*              OTHERWISE, EXIT IS TO (R2).                        APR82
*              THE TAPE WILL BE CLOSED ON NORMAL EXIT.            APR82
*              DCBEODA IS MODIFIED, FLVERLBL IS RESET,            APR82
*                AND FLLBLRW IS SET, TO ALLOW PROPER MESSAGES.    APR82
*                                                                 APR82
*        REGISTER USAGE:                                          APR82
*              R2: RETURN REGISTER                                APR82
*              R3: WORK REGISTER                                  APR82
*              OTHER REGISTERS MAY BE USED WHEN THE ERROR         APR82
*                    EXIT WILL BE TAKEN.                          APR82
*                                                                 APR82
******************************************************************APR82
         SPACE 2                                                  APR82
* SET UP DCBEODA, AND SET SOME FLAGS                              APR82
         SPACE ,                                                  APR82
CKEXPDT  MVC   DCBEODA-IHADCB+TAPE2,=AL3(EODEXPDT)  SET EODAD     APR82
         NI    FLAG,255-FLVERLBL   RESET LABEL-VERIFICATION FLAG  APR82
*                                  (TO GET TPC034A MESSAGES)      APR82
         OI    FLAG2,FLLBLRW       LIKEWISE, SET LABEL-READ FLAG  APR82
         NI    FLAG,255-FLINPERR   RESET INPUT-ERROR FLAG         APR82
         SPACE ,                                                  APR82
* OPEN THE OUTPUT TAPE FOR INPUT.  IT WILL BE OPEN ALREADY (AND   APR82
*  POSITIONED AFTER THE VOL1 LABEL) IF WE ARE GOING TO WRITE THE  APR82
*  FIRST FILE ON THE TAPE.                                        APR82
         SPACE ,                                                  APR82
         OPEN  (TAPE2,INPUT),TYPE=J  OPEN UP IN THE NAME OF ME!   APR82
         SPACE 2                                                  APR82
* READ A LABEL RECORD (SHOULD BE HDR1)                            APR82
         SPACE ,                                                  APR82
         GET   TAPE2               READ A LABEL                   APR82
         SPACE ,                                                  APR82
* TEST FOR I/O ERROR OR WRONG LENGTH (NOT 80).                    APR82
         SPACE ,                                                  APR82
         LA    R3,=CL17'UNREADABLE.'  PRESET ERROR CAUSE          APR82
         TM    FLAG,FLINPERR       WAS THERE AN INPUT ERROR?      APR82
         BO    CKEERROR            YES, ISSUE A MESSAGE           APR82
         LA    R3,=CL17'WRONG LENGTH.'  PRESET ERROR CAUSE        APR82
         CLC   DCBLRECL-IHADCB+TAPE2,=H'80'  IS IT 80 BYTES?      APR82
         BNE   CKEERROR            NO, ISSUE A MESSAGE            APR82
         SPACE ,                                                  APR82
* CHECK FOR A HDR1 LABEL                                          APR82
         SPACE ,                                                  APR82
         LA    R3,=CL17'WRONG FORMAT.'  PRESET ERROR CAUSE        APR82
         CLC   =C'HDR1',0(R1)      WE EXPECT A HDR1               APR82
         BNE   CKEERROR            NOT FOUND, ISSUE A MESSAGE     APR82
         SPACE ,                                                  SEP91
* CHECK IF THERE IS AN EXPIRATION DATE.  IF THERE WAS NONE        SEP91
*  SPECIFIED, FL1EXPDT MAY HAVE BEEN RECORDED AS "000000",        SEP91
*  WHICH MAY COMPARE HIGHER THAN THE CURRENT DATE.                SEP91
         SPACE ,                                                  SEP91
         CLC   =C'000000',FL1EXPDT-FL1LABI(R1)  COMPARE           SEP91
         BE    EODEXPDT            IF EQUAL, THEN NO EXPDT        SEP91
         SPACE ,                                                  APR82
* CHECK THE EXPIRATION DATE AGAINST TODAY'S DATE.                 APR82
         SPACE ,                                                  APR82
         CLC   DATE,FL1EXPDT-FL1LABI(R1)  COMPARE DATES           SEP91
         BL    CKDERROR            BIF NOT YET EXPIRED            APR82
         SPACE ,                                                  SEP91
* CHECK THE EXPIRATION DATE AGAINST DEFINED "NEVER-EXPIRE" DATES. SEP91
         SPACE ,                                                  SEP91
         CLC   =C' 99365',FL1EXPDT-FL1LABI(R1)  1999/365?         SEP91
         BE    CKDERROR            BIF MATCHED                    SEP91
         CLC   =C' 99366',FL1EXPDT-FL1LABI(R1)  1999/366?         SEP91
         BE    CKDERROR            BIF MATCHED                    SEP91
         CLC   =C' 99999',FL1EXPDT-FL1LABI(R1)  1999/999?         SEP91
         BE    CKDERROR            BIF MATCHED                    SEP91
         SPACE ,                                                  APR82
* THE OUTPUT TAPE PASSES.  CLOSE IT AND RETURN.                   APR82
         SPACE ,                                                  APR82
EODEXPDT CLOSE (TAPE2,LEAVE)       CLOSET (EOD GOES HERE, TOO)    APR82
         SPACE ,                                                  APR82
         BR    R2                  RETURN                         APR82
         SPACE 2                                                  APR82
* EXPIRATION DATE HASN'T PASSED.  ISSUE MESSAGE TPC025A.          APR82
         SPACE ,                                                  APR82
CKDERROR MVC   M25EXPDY+1(L'M25EXPDY-1),FL1EXPDT-FL1LABI(R1)      SEP91
*                                  COPY CYY OF LABEL'S EXPDT      SEP91
         MVI   M25EXPDY,C'2'       PRESET AS 2XYY CENTURY         SEP91
         CLI   M25EXPDY+1,C' '     C=BLANK MEANS YEAR IS 19XX     SEP91
         BNE   CKDERR1             BRANCH IF NOT, ALL SET         SEP91
         MVC   M25EXPDY(2),=C'19'  ELSE CORRECT FOR 1900'S        SEP91
CKDERR1  MVC   M25EXPDD,FL1EXPDT+3-FL1LABI(R1)  COPY DDD OF EXPDT SEP91
         LA    R3,M25              -> MESSAGE                     APR82
         B     CKEGVMSG            GO ISSUE THE MESSAGE           APR82
         SPACE 2                                                  APR82
* ERROR READING HDR1 LABEL, ISSUE MESSAGE TPC032A.                APR82
         SPACE ,                                                  APR82
CKEERROR MVC   M32EXPCT,=C'HDR1'   WE EXPECTED A HDR1 LABEL       APR82
         MVC   M32RESON,0(R3)      BUT THIS HAPPENED              APR82
         LH    R14,OUTFILE         GET THE FILE NUMBER            APR82
         BAL   R2,EDIT             MAKE IT PRETTY                 APR82
         MVC   M32FSEQ,DECIMAL+L'DECIMAL-L'M32FSEQ  PUT IN MESSAGEAPR82
         LA    R3,M32              -> MESSAGE                     APR82
CKEGVMSG LA    R4,T2               -> TAPE2                       APR82
         BAL   R2,ERROR            ISSUE IT...                    APR82
         NOP   0                   IGNORE THIS RETURN             APR82
         CLOSE (TAPE2,REWIND)      CLOSE THE TAPE, AND            APR82
         B     TERM                EXIT, THIS ERROR IS TERMINAL   APR82
         EJECT
*******************************************************************
*                                                                 *
*              COMMON DATA-FILE COPY ROUTINE                      *
*                                                                 *
*        AT ENTRY:                                                *
*              BOTH TAPE DCBS ARE CLOSED                          *
*              JFCBFLSQ IS SET FOR BOTH TAPES                     *
*              M6DSN HAS BEEN FILLED IN IF APPROPRIATE            *
*              INTRTCH2/OUTTRCH2 ARE THE ACTUAL TRTCH'S TO        *
*               BE USED (OR ZERO IF NOT 7-TRACK).                 *
*              IF ENTERED AT CPSLDATA, "INBLKSI" CONTAINS THE     *
*               EBCDIC BLKSIZE FIELD FROM THE TAPE LABELS.        *
*               IT WILL BE USED IF IT IS LARGER THAN "BLKSIZE".   *
*              OTHERWISE, OR IF ENTERED AT COPYDATA, THE VALUE IN *
*               "BLKSIZE" WILL BE USED.                           *
*              R9: RETURN ADDRESS                                 *
*                                                                 *
*        AT EXIT:                                                 *
*              BOTH TAPE DCBS ARE CLOSED                          *
*              JFCBFLSQ HAS BEEN INCREMENTED                      *
*              INFILE/OUTFILE HAVE BEEN INCREMENTED               *
*              MESSAGE TPC006I HAS BEEN ISSUED                    *
*              FL1BLKCT HAS BEEN FILLED IN                        *
*              DCB/JFCB FIELDS AND LOCAL FLAGS ARE RESET TO       *
*               ALLOW TRAILER LABEL PROCESSING.                   *
*              FLDTAERR IS SET IF:                                *
*               BUFFERS COULD NOT BE OBTAINED, OR                 *
*               A BLOCK EXCEEDED THE BLKSIZE BEING USED, OR       *
*               AN INPUT ERROR OCCURRED AND THE USER SPECIFIED    *
*                DCB=EROPT=ABE, OR                                *
*               AN INPUT ERROR WHICH WAS NOT RECOVERABLE OCCURRED.*
*                                                                 *
*        REGISTER USAGE:                                          *
*              R1: WORK REGISTER                                  *
*              R2: WORK, SUBROUTINE LINKAGE                       *
*              R3: LOOP CONTROL, MESSAGE POINTER                  *
*              R4: CONTROL BLOCK POINTER                          *
*              R6: OUTPUT BLOCK COUNT                             *
*              R7: LARGEST BLOCK SIZE                             *
*              R8: CONSTANT ONE                                   *
*              R9: RETURN ADDRESS                                 *
*              R14: WORK REGISTER                                 *
*                                                                 *
*******************************************************************
         SPACE 2
* THIS ENTRY POINT CONVERTS THE EBCDIC BLKSIZE IN
*  "INPBLKSI" TO BINARY AND USES IT IF LARGER THAN
*  THE VALUE IN "BLKSIZE".
         SPACE
CPSLDATA LA    R1,L'INPBLKSI       SET FIELD LENGTH
         LA    R2,INPBLKSI         POINT TO IT
CPSLCK1  CLI   0(R2),C'0'          MAKE SURE WE HAVE
         BL    COPYDATA            VALID NUMERICS
         CLI   0(R2),C'9'          ELSE IGNORE THIS FIELD
         BH    COPYDATA            ...
         AR    R2,R8               GET NEXT DIGIT
         BCT   R1,CPSLCK1          AND CHECK IT
         SPACE
         PACK  TEMP,INPBLKSI       PACK IT
         CVB   R2,TEMP             BINARIZE IT
         MVI   INPBLKSI,C' '       MAKE IT UN-REUSABLE
         C     R2,BLKSIZE          IS IT LARGER?
         BNL   CPSLGOTB            YES, USE IT
         SPACE 2
* UPDATE DCBBLKSI.  SET DCBTRTCH.
         SPACE
COPYDATA L     R2,BLKSIZE          GET BLKSIZE TO BE USED
CPSLGOTB CH    R2,=H'32760'        IS BLKSIZE=32760 ?             APR81
         BE    COPYBIGG            YES, ** DON'T ADD ONE **       APR81
         AR    R2,R8               ADD 1 TO TELL IF BLOCK TOO BIG APR81
COPYBIGG DS    0H                                                 APR81
         STH   R2,DCBBLKSI-IHADCB+TAPE1  SAVE IN
         STH   R2,DCBBLKSI-IHADCB+TAPE2   BOTH DCBS
         MVC   DCBTRTCH-IHADCB+TAPE1,INTRTCH2  SET INPUT TRTCH
         MVC   DCBTRTCH-IHADCB+TAPE2,OUTTRCH2  SET OUTPUT TRTCH
         SPACE
* INITIALIZE REGISTERS
         SPACE
         SR    R6,R6               R6 IS BLOCK COUNT
         SR    R7,R7               R7 IS LARGEST BLOCK LENGTH
         ST    R6,INPBLSKP         ZERO BLOCKS-SKIPPED COUNTER    SEP79
         SPACE
* CHECK IF BUFFER WE HAVE ALREADY IS LARGE ENOUGH
         SPACE
         CH    R2,DCBBUFL-IHADCB+TAPE1  IS BUFFER LARGE ENOUGH?
         BNH   COPYOPEN            YES, GO SESAME
         SPACE
* FREE ANY BUFFERS ALLOCATED
         SPACE
         LA    R4,TAPE1            -> TAPE1 DCB
         BALR  R3,0                LOOP THROUGH THIS CODE TWICE
         STH   R2,DCBBUFL-IHADCB(R4)  SAVE IN BUFL
         TM    DCBBUFCB+3-IHADCB(R4),1  IS THERE A BUFFER?
         BO    COPYGETB            NO, CONTINUE
         FREEPOOL ((R4))           ELSE FREE IT
COPYGETB LA    R4,TAPE2            -> TAPE2 DCB
         BALR  R3,R3               REPEAT
         SPACE
* COMPUTE THE AMOUNT OF STORAGE NEEDED FOR BUFFERS
         SPACE
         LA    R1,7                FOR ROUNDING
         AR    R2,R1               ROUND
         OR    R2,R1                UP
         XR    R2,R1                 TO 8-BYTE BOUNDARY
         MH    R2,BUFNO            TIMES NUMBER OF BUFFERS
         LA    R2,8(,R2)           ADD 8-BYTE BUFFER HEADER
         LA    R1,2047             FOR ROUNDING
         AR    R2,R1               ROUND
         OR    R2,R1                UP
         XR    R2,R1                 TO 2K BOUNDARY
         TM    OUTFLAG,FLNOTTP     IS OUTPUT DUMMY?
         BO    COPYNOUT            YES, IT DOESN'T GET OPENED
         AR    R2,R2               ELSE DOUBLE FOR OUTPUT TOO
COPYNOUT LA    R2,2048(,R2)        ADD 2K FOR OVERHEAD
         SPACE
* R2 NOW CONTAINS AMOUNT OF STORAGE REQUIRED FOR BUFFERS
*  PLUS A 2K OVERHEAD ALLOWANCE.
* TRY TO OBTAIN THIS MUCH STORAGE.
* IF SUCCESSFUL, FREE IT AND DO THE OPEN.
* IF UNSUCCESSFUL, ISSUE A MESSAGE AND TERMINATE.
         SPACE
         GETMAIN EC,LV=(R2),A=TEMP  TRY TO GET IT
         LTR   R15,R15             WAS IT SUCCESSFUL?
         BZ    COPYGOTS            YES, GO FREE IT AND DO OPEN
         SPACE
* GETMAIN UNSUCCESSFUL. ISSUE MESSAGE TPC031A AND CLEAN UP.
         SPACE
         LR    R14,R2              STORAGE REQUESTED
         SRL   R14,10              CONVERT TO K
         SH    R14,=H'2'           -2K OVERHEAD REQUESTED
         BAL   R2,EDIT             MAKE PRETTY
         MVC   M31STOR,DECIMAL+L'DECIMAL-L'M31STOR  TO MESSAGE
         LA    R3,M31              -> MESSAGE
         BAL   R2,ERROR            PUT IT OUT
         NOP   0                   IGNORE THIS
         OI    FLAG2,FLDTAERR      SET FLAG TO TERMINATE
         SR    R1,R1               ZERO BUFL
         STH   R1,DCBBUFL-IHADCB+TAPE1  TO KEEP US FROM ATTEMPTING
         STH   R1,DCBBUFL-IHADCB+TAPE2   TO GET THIS BUFSIZE AGAIN
         B     COPYEOF1            RETURN SO TRAILER LABELS WRITTEN
         SPACE
* GETMAIN SUCCESSFUL. FREE THE STORAGE.
         SPACE
COPYGOTS FREEMAIN R,LV=(R2),A=TEMP  FREE IT
         SPACE 2
* OPEN THE DCBS
         SPACE
COPYOPEN OPEN  (TAPE1,INPUT),TYPE=J  OPEN THE INPUT
         SPACE
         TM    OUTFLAG,FLNOTTP     IS OUTPUT NOT A TAPE?
         BO    COPYSTRT            YES, DON'T OPEN IT
         OPEN  (TAPE2,OUTPUT),TYPE=J  NO, OPEN IT
         SPACE
* COPY DENSITY FROM DCB TO JFCB TO AVOID DENSITY CONFLICTS
*  ON SUBSEQUENT OPENS.
         SPACE
         TM    FLAG,FLDENFIX       HAS DENSITY BEEN COPIED?
         BO    COPYSTRT            YES, SKIP IT
         MVC   JFCDEN-JFCB+JFCB2,DCBDEN-IHADCB+TAPE2  NO, COPY IT
         OI    FLAG,FLDENFIX       AND SET THE FLAG
         SPACE
* SET THE EODAD EXIT
         SPACE
COPYSTRT MVC   DCBEODA-IHADCB+TAPE1,=AL3(COPYEOF)  SET OURS
         NI    FLAG2,255-FLLBLRW   RESET LABEL READ/WRITE FLAG
         SPACE 2
* REALLY DO IT NOW
         SPACE
COPYLOOP NI    FLAG,255-FLINPERR   RESET INPUT-ERROR FLAG
         GET   TAPE1               READ A BLOCK
         LH    R2,DCBLRECL-IHADCB+TAPE1  GET LENGTH READ
         SPACE
* IF AN INPUT ERROR OCCURRED, SKIP THIS BLOCK OR TERMINATE,
*  AS APPROPRIATE.  THE INPUT ERROR MESSAGE WAS ISSUED ALREADY
*  BY THE SYNAD EXIT.
         SPACE
         TM    FLAG,FLINPERR       WAS THERE A READ ERROR?
         BZ    COPYNOER            NO, CONTINUE
         TM    FLAG2,FLDTAERR      WAS ERROR TERMINATING?
         BO    COPYTERM            YES, STOP AND GO CLEAN UP
         TM    FLAG2,FLNODATA      WAS ANY DATA READ?
         BO    COPYSKIP            NO, SKIP THIS BLOCK            SEP79
         TM    JFCEROPT-JFCB+JFCB1,JFCSKP  DID USER SPECIFY EROPT=SKP?
         BO    COPYSKIP            YES, SKIP THIS BLOCK           SEP79
         SPACE
* CHECK THAT THE BLOCK IS NOT LARGER THAN THE BLKSIZE BEING
*  USED.  IF IT IS, PART OF IT WAS LOST.  ISSUE A MESSAGE
*  AND TERMINATE PROCESSING.
         SPACE
COPYNOER CH    R2,DCBBLKSI-IHADCB+TAPE1  IS LRECL=BLKSIZE?
         BL    COPYOK              NO, BLOCK IS GOOD
         CH    R2,=H'32760'        IS LRECL=BLKSIZE=32760 ?       APR81
         BE    COPYOK              YES, MUST CONSIDER BLOCK OK.   APR81
         LA    R14,1(,R6)          YES, GET BLOCK NUMBER
         A     R14,INPBLSKP        CORRECT FOR BLOCKS SKIPPED     SEP79
         BAL   R2,EDIT             INTO MESSAGE
         MVC   M33BLOCK,DECIMAL+L'DECIMAL-L'M33BLOCK  LIKE SO
         LH    R14,INFILE          AND FILE NUMBER
         BAL   R2,EDIT             ...
         MVC   M33FILE,DECIMAL+L'DECIMAL-L'M33FILE  LIKE SO
         LH    R14,DCBBLKSI-IHADCB+TAPE1  GET BLKSIZE IN USE
         SR    R14,R8              - 1 SINCE WE ADD ONE
         BAL   R2,EDIT             IT TOO TO MSG
         MVC   M33BLKSI,DECIMAL+L'DECIMAL-L'M33BLKSI  LIKE SO
         LA    R3,M33              -> MESSAGE
         BAL   R2,ERROR            ISSUE IT
         NOP   0                   IGNORE THIS
         OI    FLAG2,FLDTAERR      SET TERMINAL FLAG
         B     COPYTERM            AND GO CLEAN UP, DON'T FSF     SEP79
         SPACE
COPYOK   AR    R6,R8               UP BLOCK COUNT
         CR    R2,R7               IS THIS A NEW LARGEST BLOCK?
         BNH   COPYPUT             NO, GO WRITE IT
         LR    R7,R2               YES, SAVE ITS SIZE
COPYPUT  TM    OUTFLAG,FLNOTTP     IS OUTPUT BEING WRITTEN?
         BO    COPYLOOP            NO, READ ANOTHER BLOCK
         SPACE
         STH   R2,DCBLRECL-IHADCB+TAPE2  YES, SET SIZE OF BLOCK
         LR    R0,R1               COPY ITS LOCATION
         PUT   TAPE2,(0)           WRITE IT OUT
         B     COPYLOOP            READ ANOTHER BLOCK
         SPACE ,                                                  SEP79
* THIS BLOCK IS BEING SKIPPED DUE TO A READ ERROR.  UPDATE THE    SEP79
*  COUNT OF INPUT BLOCKS SKIPPED.                                 SEP79
         SPACE ,                                                  SEP79
COPYSKIP L     R14,INPBLSKP        GET COUNT OF BLOCKS SKIPPED    SEP79
         AR    R14,R8              ADD ONE                        SEP79
         ST    R14,INPBLSKP        SAVE IT BACK                   SEP79
         B     COPYLOOP            AND CONTINUE COPY              SEP79
         SPACE 2
* TERMINAL READ ERROR OCCURRED. CLOSE TAPE1 WITH REWIND TO
*  AVOID FORWARD-SPACE-FILE OVER GARBAGE.
         SPACE
COPYTERM CLOSE (TAPE1,REWIND,TAPE2,LEAVE)  CLOSE IT
         B     COPYEOF0            CONTINUE
         SPACE 2
* END OF FILE REACHED.  PUT OUT A NICE MESSAGE AND DO END-OF-FILE
*  UPDATING.
         SPACE
COPYEOF  CLOSE (TAPE1,LEAVE,TAPE2,LEAVE)  TAPE2 MIGHT NOT BE OPEN
COPYEOF0 MVC   DCBEODA-IHADCB+TAPE1,=AL3(EODSL)  RESET EODAD
         SPACE
* UPDATE LOGICAL FILE NUMBERS AND PUT THEM IN MSG TPC006I.
* NOTE: THIS IS DONE BEFORE TRAILER LABEL PROCESSING FOR
*  SL OUTPUT.  ERROR ROUTINES THERE MUST REMEMBER TO SUBTRACT
*  ONE FROM INFILE/OUTFILE.
         SPACE
COPYEOF1 LH    R14,INFILE          GET LOGICAL INPUT FILE NUMBER
         BAL   R2,EDIT             MAKE READABLE
         MVC   M6FSEQ,DECIMAL+L'DECIMAL-L'M6FSEQ  PUT IN MESSAGE
         CH    R14,OUTFILE         ARE LOGICAL FILE NUMBERS THE SAME?
         LA    R14,1(,R14)         .. INCREMENT IT, SAVE COND CODE
         STH   R14,INFILE          .. SAVE IT BACK
         BE    COPYEOF2            YES, NO SEPARATE OUTFILE PROCESSING
         LH    R14,OUTFILE         NO, GET OUTFILE NUMBER
         BAL   R2,EDIT             AS ABOVE
         MVC   M6FSEQ2,DECIMAL+L'DECIMAL-L'M6FSEQ2  COPY TO MSG
         AR    R14,R8              INCREMENT IT
COPYEOF2 STH   R14,OUTFILE         SAVE NEW OUTFILE VALUE
         SPACE
* UP THE PHYSICAL (BLP) FILE NUMBERS IN THE JFCBS, RESET
*  DCBBLKSI TO 81, AND RESET DCBTRTCH FOR LABEL PROCESSING.
         SPACE
         LA    R4,T1               -> INPUT TAPE CONTROL BLOCKS
         BALR  R3,0                THIS CODE IS EXECUTED TWICE
         LH    R1,JFCBFLSQ-JFCB+JFCB1-T(R4)  GET FILE SEQUENCE NUMBER
         AR    R1,R8               INCREMENT IT
         STH   R1,JFCBFLSQ-JFCB+JFCB1-T(R4)  REPLACE IT
         MVC   DCBTRTCH-IHADCB+TAPE1-T(,R4),INTRTCHL-T(R4)  SL TRTCH
         MVC   INTRTCH2-T(,R4),INTRTCH-T(R4)  RESET THIS ONE TOO
         MVC   DCBBLKSI-IHADCB+TAPE1-T(,R4),=H'81'  BLKSIZE FOR LBLS
         LA    R4,T2               -> OUTPUT TAPE CONTROL BLOCKS
         BALR  R3,R3               REPEAT THE ABOVE
         OI    FLAG2,FLLBLRW+FLTLRLBL  PRESET FLAGS FOR TRAILER LABELS
         SPACE
* FILL IN MESSAGE TPC006I
* FILL IN THE BLOCK COUNT IN THE EOF1 LABEL
         SPACE
         LR    R14,R6              GET BLOCK COUNT
         BAL   R2,EDIT             INTO
         MVC   M6BLKCNT,DECIMAL+L'DECIMAL-L'M6BLKCNT  MESSAGE
         UNPK  FL1BLKCT,TEMP       AND LABEL TOO
         OI    FL1BLKCT+L'FL1BLKCT-1,C'0'  ...
         MVC   FL1BLKCT-FL1LABI+FL1SAVE,FL1BLKCT  HERE TOO
         LR    R14,R7              GET LARGEST BLOCK SIZE
         BAL   R2,EDIT             INTO
         MVC   M6BLKSI,DECIMAL+L'DECIMAL-L'M6BLKSI  MESSAGE
         SPACE
* ISSUE THE MESSAGE
         SPACE
         LA    R3,M6               -> MESSAGE
         BAL   R2,MESSAGE          ISSUE IT
         NOP   0                   IGNORE THIS
         SPACE ,                                                  APR82
* ISSUE A STRONG WARNING IF THE LARGEST BLOCK SIZE IS 32,760      APR82
         SPACE ,                                                  APR82
         C     R7,=F'32760'        IF SO, LOST DATA CAN'T         APR82
         BL    COPYEOF3              BE DETECTED....              APR82
         LA    R3,M37              -> WARNING MESSAGE 1           APR82
         BAL   R2,ERROR            ISSUE IT, SET RETURN CODE      APR82
         NOP   0                   IGNORE THIS                    APR82
         MVI   MSGHEADR,C' '       SINGLE-SPACE NEXT MESSAGE      APR82
         LA    R3,M37B             -> NEXT MESSAGE LINE           APR82
         BAL   R2,ERROR            ISSUE IT TOO                   APR82
         NOP   0                   IGNORE THIS TOO                APR82
         SPACE
* RETURN TO CALLER
         SPACE
COPYEOF3 BR    R9                  BYE BYE, COME AGAIN SOON       APR82
         EJECT
*******************************************************************
*                                                                 *
*              END OF PROCESSING                                  *
*                                                                 *
*******************************************************************
         SPACE 2
EXIT     CLOSE SYSPRINT            FIRST IN CASE TAPE CLOSE BOMBS
         SPACE
         CLOSE (TAPE1,REWIND,TAPE2,REWIND)  IN CASE THEY ARE LEFT OPEN
         SPACE
         SR    R15,R15             GET THE RETURN CODE
         IC    R15,RC              PREVIOUSLY SET
         L     R13,SAVE+4          RESTORE R13
         RETURN (14,12),T,RC=(15)  GO BACK
         EJECT
*******************************************************************
*                                                                 *
*              SYSPRINT SYNAD EXIT                                *
*                                                                 *
*******************************************************************
         SPACE 2
SYNADPR  SYNADAF ACSMETH=QSAM      GET SYNADAF INFO
         MVC   M8+64(60),68(R1)    COPY INTO MESSAGE
         SYNADRLS
         WTO   MF=(E,M8)           ISSUE MESSAGE
         MVI   RC,16               SET RETURN CODE TO 16
         B     EXIT                AND HOPE
         SPACE 2
M8       WTO   'TPC008A  SYSPRINT OUTPUT ERROR.  TERMINATING.  ERROR IN*
               FO = AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEF*
               FFFFFFFFF',ROUTCDE=11,MF=L
         EJECT
*******************************************************************
*                                                                 *
*              SYNAD EXIT FOR TAPES                               *
*                                                                 *
*        REGISTERS MODIFIED: R0-R4, R14-R15                       *
*        NOTE: R4 POINTS TO THE TAPE CONTROL BLOCKS SO THE        *
*              ERROR MESSAGE CAN HAVE THE DDNAME IN IT.           *
*                                                                 *
*******************************************************************
         SPACE 2
* SET THE INPUT-ERROR FLAG.
* IF VOLUME LABEL VERIFICATION IS IN PROGRESS, RETURN; AN
*  UNREADABLE VOLUME LABEL IS CONSIDERED AS AN UNLABELLED TAPE.
         SPACE
SYNAD    OI    FLAG,FLINPERR       SET THE FLAG
         TM    FLAG,FLVERLBL       ARE WE VERIFYING LABELS?
         BCR   1,R14               YES, RETURN
         SPACE
* SAVE SOME REGISTERS
         SPACE
         STM   R0,R1,SYNADR01      R0, R1
         ST    R14,SYNADR14        RETURN REGISTER
         NI    FLAG2,255-FLNODATA  RESET NO-DATA-READ FLAG
         SPACE
* FILL IN THE BEGINNING OF MSG TPC034A.
         SPACE
         LR    R4,R1               R4 -> ERROR DCB
         S     R4,=A(TAPE1-T)      R4 -> TAPE CONTROL BLOCKS
         LH    R14,INFILE-T(R4)    GET FILE NUMBER
         TM    FLAG2,FLLBLRW+FLTLRLBL  IS THIS TRAILER LABELS?
         BNO   SYNAFLED            NO, SKIP
         SR    R14,R8              ELSE ADJUST TO RIGHT FILE
SYNAFLED BAL   R2,EDIT             DECIMALIZE FILE NUMBER
         MVC   M34FILE,DECIMAL+L'DECIMAL-L'M34FILE  INTO MSG
         MVI   M34WHERE,C' '       BLANK THIS
         MVC   M34WHERE+1(L'M34WHERE-1),M34WHERE  OUT
         TM    FLAG2,FLLBLRW       WERE WE ON LABELS?
         BZ    SYNANLBL            NO, SKIP
         MVC   M34WHERE+9(7),=C'LABELS.'  ELSE SET THIS
         LA    R2,=CL7'TRAILER'    ASSUME TRAILER
         TM    FLAG2,FLTLRLBL      TEST FOR IT
         BO    SYNAGLBL            YES, MOVE IT IN
         LA    R2,=CL7' HEADER'    NO, SET HEADER
SYNAGLBL MVC   M34WHERE+1(7),0(R2)  PUT IN MESSAGE
         B     SYNAYLBL            SKIP
SYNANLBL MVI   M34WHERE,C'.'       NOT LABELS.
         SPACE
* TEST FOR INPUT OR OUTPUT ERROR.  OUTPUT ERRORS CANNOT
*  BE RECOVERED FROM, AND CAUSE IMMEDIATE PROGRAM TERMINATION.
         SPACE
SYNAYLBL TM    SYNADR1,X'40'       WAS THIS AN OUTPUT ERROR?
         BO    SYNAOUTP            YES, BRANCH
         MVC   M34TYPE,=C' IN'     INPUT, SET MESSAGE
         SPACE
* DETERMINE IF THE INPUT ERROR IS UNRECOVERABLE
         SPACE
         L     R1,SYNADR0          -> IOB
         LA    R2,=CL47'CHANNEL/CONTROL ERROR. PROCESSING TERMINATING.'
         TM    13(R1),X'3F'        TEST CSWSTAT2 FOR CHANNEL ERRORS
         BNZ   SYNAFTRM            YES, TERMINATE
         SPACE
* CERTAIN ERRORS GIVE A SPECIAL MESSAGE AND CAUSE TERMINATION
*  AFTER TRAILER LABEL PROCESSING.
         SPACE
* TEST FOR BUS-OUT CHECK/COMMAND REJECT
         SPACE
         TM    2(R1),X'A0'         TEST FOR BUS-OUT CHECK/CMD REJECT
         BO    SYNAFTRM            YES, SET TERMINATION FLAG
         SPACE
* TEST FOR EQUIPMENT CHECK
         SPACE
         LA    R2,=CL47'EQUIPMENT CHECK. TAPE MAY BE MIS-POSITIONED.'
         TM    2(R1),X'10'         TEST FOR EQUIPMENT CHECK
         BO    SYNAFTRM            YES, SET TERMINATION FLAG
         SPACE
* TEST FOR NOT-CAPABLE
         SPACE
         LA    R2,=CL47'TAPE DENSITY CANNOT BE READ BY THIS TAPE DRIVE.*
               '
         TM    3(R1),X'01'         TEST FOR NOT-CAPABLE
         BO    SYNAFTRM            YES, SET TERMINATION FLAG
         SPACE
* IF THE USER SPECIFIED EROPT=ABE, SET THE TERMINATION FLAG
         SPACE
         TM    JFCEROPT-JFCB+JFCB1,JFCABN  DID HE?
         BO    SYNAMTRM            YES, GET MSG AND SET FLAG
         SPACE
* IF NO DATA WAS TRANSFERRED, SKIP THIS BLOCK
         SPACE
         TM    SYNADR1,X'10'       WAS ANY?
         BO    SYNAGOTD            YES, BRANCH
         OI    FLAG2,FLNODATA      NO, SET FLAG
         LA    R2,=CL47'NO DATA READ; THIS BLOCK SKIPPED.'  SET MSG
         B     SYNACOMM            TO COMMON CODE
         SPACE
* TEST IF THE USER SPECIFIED EROPT=SKP
         SPACE
SYNAGOTD LA    R2,=CL47'THIS BLOCK SKIPPED.'  SET MSG
         TM    JFCEROPT-JFCB+JFCB1,JFCSKP  DID HE?
         BO    SYNACOMM            YES, TO COMMON CODE
         SPACE
* USER WANTS THE DATA
         SPACE
         LA    R2,=CL47'DATA READ WILL BE COPIED.'  SET MSG
         B     SYNACOMM            TO COMMON CODE
         SPACE
* OUTPUT ERROR PROCESSING
         SPACE
SYNAOUTP MVC   M34TYPE,=C'OUT'     SET 'OUTPUT'
         SPACE
* COMMON AND MORE COMMON CODE FOLLOWS
         SPACE
SYNAMTRM LA    R2,=CL47'PROCESSING TERMINATING.'  SET MSG
         SPACE
SYNAFTRM OI    FLAG2,FLDTAERR      SET FLAG
         SPACE
SYNACOMM MVC   M34WHAT,0(R2)       PUT IT IN THE MESSAGE
         SPACE
* WRITE OUT MSG TPC034A
         SPACE
         LA    R3,M34              -> MESSAGE
         LA    R13,SYNADSAV        -> SPECIAL SAVE AREA
         BAL   R2,ERROR            ISSUE THE MESSAGE
         NOP   0                   IGNORE THIS
         SPACE
* FOLLOW IT WITH A LINE OF SYNAD INFORMATION
         SPACE
         MVI   LINE,C' '           BLANKET
         MVC   LINE+1(L'LINE-1),LINE  OUT
         MVC   ERRTEXT(20),=C'ERROR INFORMATION = '  HEADER
         LM    R0,R1,SYNADR01      RESTORE PARM REGISTERS
         SYNADAF ACSMETH=QSAM      GET THE SYNAD INFO
         MVC   ERRTEXT+20(60),68(R1)  COPY IT
         SYNADRLS
* THE FOLLOWING CONVOLUTION IS TO REGAIN ADDRESSABILITY TO THE    DEC85
*  SYSPRINT DCBLRECL FIELD (NOW BEYOND ALL BASE REGISTERS).       DEC85
         LA    R15,SYSPRINT        -> SYSPRINT DCB                DEC85
         MVI   DCBLRECL+1-IHADCB(R15),ERRTEXT-LINE+80  SET LENGTH DEC85
         LA    R13,SYNADSAV        MAKE SURE WE HAVE OUR SAVE AREA
         LH    R1,LINECNT          DECREMENT
         SR    R1,R8               LINES
         STH   R1,LINECNT          REMAINING ON PAGE
         PUT   SYSPRINT,LINE       WRITE IT
         SPACE
* IF WE HAVE AN OUTPUT ERROR OR A CHANNEL ERROR, TERMINATE NOW
         SPACE
         TM    SYNADR1,X'40'       IS THIS AN OUTPUT ERROR?
         BO    SYNATERM            YES, TERMINATE
         L     R1,SYNADR0          -> IOB
         TM    13(R1),X'3F'        TEST CSWSTAT2 AGAIN
         BNZ   SYNATERM            BIF CHANNEL ERROR
         SPACE
* IF THE USER DEFAULTED EROPT=ACC, DECREMENT THE ERROR COUNT.
*  IF IT REACHES ZERO, ISSUE A MESSAGE AND SET THE TERMINATION
*  FLAG.
         SPACE
         CLI   JFCEROPT-JFCB+JFCB1,0  WAS EROPT= SPECIFIED?
         BNE   SYNARETN            YES, NO LIMIT
         LH    R1,SYNAERLM         NO, GET ERRORS LEFT
         SR    R1,R8               REDUCE BY 1
         STH   R1,SYNAERLM         AND SAVE IT BACK
         BP    SYNARETN            OK, CONTINUE
         OI    FLAG2,FLDTAERR      NO, SET TERMINATION FLAG
         LA    R3,M35              AND ISSUE MSG TPC035A
         BAL   R2,ERROR            ...
         NOP   0                   IGNORE THIS
         SPACE
* RESTORE REGISTERS AND RETURN TO SYNAD ROUTINES
         SPACE
SYNARETN LM    R0,R1,SYNADR01      R0, R1
         LA    R13,SAVE            RESTORE THE SAVE AREA PTR
         L     R14,SYNADR14        RETURN REGISTER
         BR    R14                 RETURN
         SPACE
* TERMINATE IMMEDIATELY.  SET RETURN CODE TO 16.
         SPACE
SYNATERM MVI   RC,16               SET RETURN CODE
         LA    R13,SAVE            RESTORE THE SAVE AREA PTR
         B     TERM                GO BYE-BYE
         SPACE 3
* SYNAD ROUTINE DATA AREAS
         SPACE
SYNADR01 DS    2F                  REGISTER SAVE FOR R0, R1
SYNADR0  EQU   SYNADR01
SYNADR1  EQU   SYNADR01+4
SYNADR14 DS    F                   REGISTER SAVE FOR R14
         SPACE
SYNAERLM DC    H'50'               LIMIT IF USER DEFAULTS EROPT=ACC
         EJECT
*******************************************************************
*                                                                 *
*              MESSAGE ROUTINE                                    *
*                                                                 *
*        REGISTERS ON ENTRY TO THIS ROUTINE:                      *
*              R2: RETURN ADDRESS - 4                             *
*              R3: -> MESSAGE (SEE MESSAGE FORMAT BELOW)          *
*              R4: -> TAPE PARMS IF REQUIRED FOR MESSAGE          *
*                                                                 *
*        NOTE: RETURN TO R2+4 FACILITATES ISSUING MULTIPLE        *
*              ERROR MESSAGES WITHOUT OUT-OF-LINE BRANCHING.      *
*                                                                 *
*        REGISTERS ALTERED: R0, R1, R14, R15                      *
*                                                                 *
*******************************************************************
         SPACE 2
* ENTER HERE FOR ERROR MESSAGES
         SPACE
ERROR    OI    FLAG,FLERROR        SHOW WE GOT AN ERROR
         SPACE 2
* ENTER HERE FOR NON-ERROR MESSAGES
         SPACE
MESSAGE  MVC   LINE(L'MSGHEADR),MSGHEADR  PUT IN HEADER + BLANK
         MVC   LINE+L'MSGHEADR(L'LINE-L'MSGHEADR),LINE+L'MSGHEADR-1
         MVI   MSGHEADR,C'0'       DOUBLE-SPACE ON NEXT MESSAGE
         SPACE
* CONSTRUCT MESSAGE NUMBER
         SPACE
         SR    R14,R14             GET ERROR NUMBER
         IC    R14,0(,R3)          FROM MESSAGE
         N     R14,=F'127'         TURN OFF HIGH-ORDER BIT
         CVD   R14,TEMP            AND PUT INTO THE
         UNPK  ERRNUM(3),TEMP      TEXT LINE
         OI    ERRNUM+2,C'0'       MAKE IT READABLE
         TM    0(R3),X'80'         IS THIS JUST INFORMATIONAL?
         BZ    ERR0                YES, BRANCH
         MVI   ERRNUM+3,C'A'       NO, CHANGE LEVEL
ERR0     SR    R1,R1               CLEAR LENGTH ACCUMULATOR
         IC    R14,1(,R3)          GET TEXT LENGTH
         N     R14,=F'127'         TURN OFF DDNAME FLAG BIT
         TM    1(R3),X'80'         IS DDNAME FLAG ON?
         BZ    ERR2                NO, GO ON
         SPACE
* INSERT DDNAME AT BEGINNING OF MESSAGE
         SPACE
         LA    R1,L'ERRUGH         UP LENGTH
         MVC   ERRTEXT(L'ERRUGH),ERRUGH  PUT IN HEADER
         TM    0(R4),FLIN          IS THIS INPUT?
         BO    ERR1                YES, MSG SAYS INPUT
         MVC   ERRTEXT(3),=C'OUT'  NO, MAKE IT SAY OUTPUT
         MVI   ERRTEXT+17,C'2'     AND "TAPE2"
ERR1     TM    FLAG,FLALTNAM       ARE WE USING SYSUT1/2?
         BZ    ERR2                NO, DONE HERE
         IC    R15,ERRTEXT+17      YES, SAVE DD NUMBER
         MVC   ERRTEXT+13(7),=C'SYSUT )'  CHANGE 'TAPE' TO 'SYSUT'
         STC   R15,ERRTEXT+18      SAVE IT BACK
         SPACE
* MOVE IN THE ERROR TEXT
         SPACE
ERR2     LA    R15,ERRTEXT(R1)     COMPUTE WHERE TO PUT IT
         EX    R14,ERRMOVE         R14 HAS LENGTH-1 FROM BEFORE
         LA    R1,ERRTEXT-LINE+1(R1,R14)  COMPUTE TOTAL LENGTH
* THE FOLLOWING CONVOLUTION IS TO REGAIN ADDRESSABILITY TO THE    DEC85
*  SYSPRINT DCBLRECL FIELD (NOW BEYOND ALL BASE REGISTERS).       DEC85
         LA    R15,SYSPRINT        -> SYSPRINT DCB                DEC85
         STH   R1,DCBLRECL-IHADCB(,R15)  PUT LENGTH IN DCB        DEC85
         SPACE
* DECREMENT LINE COUNT.  SKIP TO A NEW PAGE IF NEEDED.
         SPACE
         CLI   LINE,C'1'           IS THIS A PAGE SKIP?
         BE    ERR4                YES, RESET THE LINES-LEFT FIELD
         LH    R1,LINECNT          ELSE LOAD IT
         SR    R1,R8               DECREMENT IT
         CLI   LINE,C' '           IS THIS A SINGLE-SPACE?
         BE    ERR3                YES, ALL SET
         SR    R1,R8               ELSE DECREMENT IT AGAIN
         CLI   LINE,C'0'           IS THIS A DOUBLE-SPACE?
         BE    ERR3                YES, ALL SET
         SR    R1,R8               ASSUME TRIPLE-SPACE
ERR3     LTR   R1,R1               ARE ANY LINES LEFT?
         BP    ERR5                YES, CONTINUE
         MVI   LINE,C'1'           ELSE FORCE A PAGE EJECT
ERR4     LA    R1,58               AND RESET COUNTER
ERR5     STH   R1,LINECNT          SAVE IT BACK
         SPACE
* WRITE OUT THE LINE
         SPACE
         PUT   SYSPRINT,LINE       PUT OUT THE LINE
         B     4(,R2)              RETURN TO WHEREVER
         SPACE
* EXECUTED MVC
         SPACE
ERRMOVE  MVC   0(*-*,R15),2(R3)
         SPACE 2
* ENTER HERE TO GIVE MSG TPC002I AND TERMINATE NORMALLY.
         SPACE
DONE     TM    FLAG,FLERROR        ANY ERROR MESSAGE WRITTEN?
         BO    DONEDONE            YES, DON'T ALTER RETURN CODE
         MVI   RC,0                SET RETURN CODE TO 0
DONEDONE LA    R2,EXIT-4           SET RETURN POINT
         LA    R3,M2               ISSUE MESSAGE 2
         MVI   MSGHEADR,C'-'       2 BLANK LINES FIRST
         B     MESSAGE             ISSUE IT
         SPACE 2
* ENTER HERE TO ISSUE MSG TPC010A AND TERMINATE.
         SPACE
TERM     LA    R2,EXIT-4           POINT TO EXIT ROUTINE
         LA    R3,M10              -> MESSAGE
         MVI   MSGHEADR,C'-'       2 BLANK LINES FIRST
         B     ERROR               GO BYE BYE
         SPACE 2
* THIS ROUTINE DECIMALIZES THE NUMBER IN R14.
         SPACE
EDIT     CVD   R14,TEMP            BINARY -> PACKED DECIMAL
         MVC   EDECIMAL,MASK       COPY A MASK
         ED    EDECIMAL,TEMP+4     UNPACK/EDIT THE NUMBER
         BR    R2                  RETURN
         SPACE 2
* CONSTANTS AND OUTPUT AREA
         SPACE
ERRUGH   DC    C' INPUT TAPE (TAPE1)  - '  INSERTED IF DD FLAG
         SPACE
MSGHEADR DC    C'0TPCNNNI '
         SPACE
LINE     DS    CL133               OUTPUT AREA
ERRNUM   EQU   LINE+4
ERRTEXT  EQU   LINE+10
         SPACE
EDECIMAL DS    0CL9                EDIT WORK AREA
         DS    CL2                 TWO MAKE THE NUMBER OF NIBBLES RIGHT
DECIMAL  DS    CL7                 ANSWER COMES OUT HERE
         SPACE
MASK     DC    X'40202020206B202120'  BDDDD,DSD
         SPACE
LINECNT  DC    H'58'               LINES-LEFT COUNTER
         EJECT
*******************************************************************
*                                                                 *
*              MESSAGES                                           *
*                                                                 *
*        FORMAT: 1 BYTE ERROR NUMBER (BINARY)                     *
*                  WITH HIGH-ORDER BIT ON IF ACTION-LEVEL         *
*                1 BYTE TEXT LENGTH - 1                           *
*                  WITH HIGH-ORDER BIT ON TO INSERT DDNAME        *
*                FOLLOWED BY ERROR MESSAGE TEXT                   *
*                                                                 *
*******************************************************************
         SPACE 2
         PRINT NODATA
         SPACE 2
*******************************************************************
*                                                                 *
*              STATUS MESSAGES                                    *
*                                                                 *
*******************************************************************
         SPACE 2
M1       DC    AL1(1,M1E-*-2),C'TAPE-TO-TAPE PROGRAM, ARON F. EISENPRES*
               S  (REV 09/91)            '                        SEP91
         DC    C'RUN AT '                                         APR82
M1HH     DC    C'HH',C':'                                         APR82
M1MM     DC    C'MM',C' ON '                                      APR82
M1DATE   DC    C'WEDNESDAY, SEPTEMBER XX, YYYY' (MAX LENGTH TEXT) SEP91
M1E      EQU   *
         SPACE 2
M2       DC    AL1(2,M2E-*-2),C'END OF TAPE COPY.'
M2E      EQU   *
         SPACE 2
* ONLY ONE OF THE FOLLOWING TPC003I MESSAGES IS ISSUED FOR EACH TAPE
         SPACE
M3A      DC    AL1(3,M3AE-*-2+128),C'VOLUME SERIAL IS '
M3AVOL   DC    C'VOLSER',C'.'
M3AE     EQU   *
         SPACE
M3B      DC    AL1(3,M3BE-*-2+128),C'EXTERNAL LABEL IS '
M3BVOLEX DC    C'VOLSER',C', BUT VOLUME SERIAL REALLY IS '
M3BVOLIN DC    C'VOLSER',C'.'
M3BE     EQU   *
         SPACE
M3C      DC    AL1(3,M3CE-*-2+128),C'THIS IS AN IBM PID TAPE.'
         DC    C'  THE VOLUME SERIAL IS '                         APR82
M3CVOL   DC    C'VOLSER',C'.'                                     APR82
M3CE     EQU   *
         SPACE
M3D      DC    AL1(3,M3DE-*-2+128),C'THIS IS NOT A TAPE.  IT WILL BE TR*
               EATED AS A 1-FILE TAPE WITH NO LABEL PROCESSING.'
M3DE     EQU   *
         SPACE
M3E      DC    AL1(3,M3EE-*-2+128),C'THIS IS NOT A TAPE.  THE INPUT TAP*
               E WILL BE READ BUT NOTHING WILL BE WRITTEN.'
M3EE     EQU   *
         SPACE 2
* ONLY ONE OF THE FOLLOWING TPC004I MESSAGES IS ISSUED
         SPACE
M4       DC    AL1(4,M4E-*-2)
M4BUFNO  DC    C'NNN',C' BUFFERS OF '
M4BLKSI  DC    C'NN,NNN',C' BYTES WILL BE USED FOR EACH TAPE.'
M4E      EQU   *
         SPACE
M4A      DC    AL1(4,M4AE-*-2)
M4ABUFNO DC    C'NNN',C' BUFFERS OF '
M4ABLKSI DC    C'NN,NNN',C' BYTES (OR BLKSIZE+1 FOR EACH FILE, IF LARGE*
               R, TO 32,760) WILL BE USED FOR EACH TAPE.'         APR81
M4AE     EQU   *
         SPACE 2
M5       DC    AL1(5,M5E-*-2+128),C'LEADING TAPE MARK WAS FOUND AND HAS*
                BEEN SKIPPED OVER.'
M5E      EQU   *
         SPACE 2
M6       DC    AL1(6,M6E-*-2),C'FILE '
M6FSEQ   DC    C'NNN',C' '
M6PART1  DC    C'COPIED.'          OR 'READ' IF O/P NOT A TAPE
M6PART2  DC    C'            '     OR SEE BELOW
         ORG   M6PART2-1           FOLLOWING IF FSEQ ^= FSEQ2
M6PART2A DS    C' TO FILE',C' '    NOTE
M6FSEQ2  DS    C'NNN'              THE
M6PART2B DS    C'.'                DS'S
         ORG   ,                   SHOULD BE HERE ALREADY
         DC    C'  BLOCKS '
M6PART3  DC    C'WRITTEN',C' = '   OR 'READ'
M6BLKCNT DC    C'NNN,NNN',C';  LONGEST BLOCK = '
M6BLKSI  DC    C'NN,NNN',C' BYTES.'
M6END1   EQU   *                   END HERE IF NL/NL COPY
         DC    C'  '
M6PART4  DC    C'OUTPUT'           OR 'INPUT'
         DC    C' DSN = '
M6DSN    DC    CL17'DSNAME',C'.'
M6E      EQU   *
         SPACE 2
M10      DC    AL1(10+128,M10E-*-2),C'TAPE COPY REQUEST IS TERMINATED.'
M10E     EQU   *
         SPACE 2
*******************************************************************
*                                                                 *
*              PARAMETER ERROR MESSAGES                           *
*                                                                 *
*******************************************************************
         SPACE 2
M11      DC    AL1(11+128,M11E-*-2),C'DD CARDS FOR TAPE1/TAPE2 OR SYSUT*
               1/SYSUT2 ARE NOT PRESENT.  TOO BAD.'
M11E     EQU   *
         SPACE 2
M12      DC    AL1(12+128,M12E-*-2+128),C'MULTIPLE VOLUMES WERE SPECIFI*
               ED BUT CANNOT BE HANDLED BY TAPECOPY.  USE IEBGENER OR A*
               NOTHER UTILITY.'
M12E     EQU   *
         SPACE 2
M13      DC    AL1(13+128,M13E-*-2+128),C'LABEL=(,AL) OR (,NSL) WAS SPE*
               CIFIED BUT CANNOT BE HANDLED BY TAPECOPY.  TOO BAD.'
M13E     EQU   *
         SPACE 2
M14      DC    AL1(14+128,M14E-*-2+128),C'DCB=OPTCD=C OR Q WAS SPECIFIE*
               D BUT CANNOT BE HANDLED BY TAPECOPY.  TOO BAD.'
M14E     EQU   *
         SPACE 2
M15      DC    AL1(15+128,M15E-*-2+128),C'IF YOU SPECIFY THE ACTUAL LAB*
               EL IN THE PARM FIELD, YOU MUST SPECIFY LABEL=(,BLP).'
M15E     EQU   *
         SPACE 2
M16      DC    AL1(16+128,M16E-*-2+128),C'IT IS NOT POSSIBLE TO RELABEL*
                A TAPE IF YOU DO NOT START WRITING AT THE BEGINNING.  T*
               OO BAD.'
M16E     EQU   *
         SPACE 2
M17      DC    AL1(17+128,M17E-*-2+128),C'PARM=PID IS VALID ONLY WITH L*
               ABEL=(,NL).  TOO BAD.'
M17E     EQU   *
         SPACE 2                                                  APR81
M18      DC    AL1(18+128,M18E-*-2+128),C'A VOLUME SERIAL MUST '  APR81
         DC    C'BE SPECIFIED TO IDENTIFY THE INPUT TAPE.'        APR81
M18E     EQU   *                                                  APR81
         SPACE 2                                                  APR81
M19      DC    AL1(19+128,M19E-*-2+128),C'NO VOLUME SERIAL '      APR81
         DC    C'WAS SPECIFIED.  TAPECOPY CANNOT HANDLE SCRATCH ' APR81
         DC    C'TAPES.  TOO BAD.'                                APR81
M19E     EQU   *                                                  APR81
         SPACE 2
*******************************************************************
*                                                                 *
*              LABEL VERIFICATION ERROR MESSAGES                  *
*                                                                 *
*******************************************************************
         SPACE 2
M21      DC    AL1(21+128,M21E-*-2+128),C'TAPE HAS STANDARD LABELS (VOL*
               UME SERIAL IS '
M21VOL   DC    C'VOLSER',C') BUT JCL DOES NOT SPECIFY LABEL=(,SL).'
M21E     EQU   *
         SPACE 2
M22      DC    AL1(22+128,M22E-*-2+128),C'TAPE HAS STANDARD LABELS (VOL*
               UME SERIAL IS '
M22VOL   DC    C'VOLSER',C') BUT VOLUME SERIAL DOES NOT MATCH THAT SPEC*
               IFIED.'
M22E     EQU   *
         SPACE 2
M23      DC    AL1(23+128,M23E-*-2+128),C'TAPE WAS SPECIFIED AS HAVING *
               STANDARD LABELS, BUT IT CANNOT BE READ.  TOO BAD.'
M23E     EQU   *
         SPACE 2
M24      DC    AL1(24+128,M24E-*-2+128),C'TAPE WAS SPECIFIED AS HAVING *
               STANDARD LABELS, BUT IT DOESN''T.  TOO BAD.'
M24E     EQU   *
         SPACE 2
M25      DC    AL1(25+128,M25E-*-2+128),C'EXPIRATION DATE ('      APR82
M25EXPDY DC    C'CCYY',C'/'                                       SEP91
M25EXPDD DC    C'DDD',C') HAS NOT BEEN REACHED.  TAPE CANNOT '    SEP91
         DC    C'BE OVERWRITTEN.'                                 APR82
M25E     EQU   *                                                  APR82
         SPACE 2
*******************************************************************
*                                                                 *
*              EXECUTION ERROR MESSAGES                           *
*                                                                 *
*******************************************************************
         SPACE 2
M31      DC    AL1(31+128,M31E-*-2)
M31STOR  DC    C'N,NNN',C' K IS REQUIRED FOR BUFFERS BUT NOT AVAILABLE *
               IN THE REGION.  RERUN TAPECOPY IN A LARGER REGION.'
M31E     EQU   *
         SPACE 2
M32      DC    AL1(32+128,M32E-*-2+128),C'LABEL ERROR.  '         APR82
M32EXPCT DC    C'HDRX',C' LABEL FOR FILE '
M32FSEQ  DC    C'NNN',C' IS '
M32RESON DC    CL17'MESSED UP'     UNREADABLE/BAD LENGTH/FORMAT/MISSING
         DC    C'  RUN TPLABELS WITH PARM=FULL.'
M32E     EQU   *
         SPACE 2
M33      DC    AL1(33+128,M33E-*-2),C'BLOCK '
M33BLOCK DC    C'NNN,NNN',C' IN FILE '
M33FILE  DC    C'NNN',C' OF THE INPUT TAPE EXCEEDS THE BLKSIZE USED ('
M33BLKSI DC    C'NN,NNN',C' BYTES).  SPECIFY DCB=BLKSIZE= FOR TAPE1.'
M33E     EQU   *
         SPACE 2
M34      DC    AL1(34+128,M34E-*-2+128)
M34TYPE  DC    C' IN',C'PUT ERROR IN FILE '
M34FILE  DC    C'NNN'
M34WHERE DC    CL16' TRAILER LABELS.',C'  '
M34WHAT  DC    CL47'TAPE DENSITY CANNOT BE READ BY THIS TAPE DRIVE.'
M34E     EQU   *
         SPACE 2
M35      DC    AL1(35+128,M35E-*-2),C'TOO MANY ERRORS.  SPECIFY DCB=ERO*
               PT=ACC EXPLICITLY TO ALLOW AN UNLIMITED NUMBER OF INPUT *
               ERRORS.'
M35E     EQU   *
         SPACE 2                                                  SEP79
M36      DC    AL1(36+128,M36E-*-2),C'** WARNING ** INPUT '       SEP79
         DC    C'BLOCK COUNT ('                                   SEP79
M36BLLBL DC    C'NNN,NNN',C') IN '                                SEP79
M36LABEL DC    C'XXX1',C' LABEL FOR FILE '                        SEP79
M36FILE  DC    C'NNN',C' DOES NOT MATCH NUMBER OF BLOCKS READ ('  SEP79
M36BLEXP DC    C'NNN,NNN',C').'                                   SEP79
M36E     EQU   *                                                  SEP79
         SPACE 2                                                  APR82
M37      DC    AL1(37+128,M37E-*-2),C'** WARNING ** LARGEST '     APR82
         DC    C'BLOCK LENGTH IS 32,760 -- POSSIBLE LOSS OF '     APR82
         DC    C'DATA IF ACTUAL BLOCK LENGTH IS LARGER.'          APR82
M37E     EQU   *                                                  APR82
         SPACE 2                                                  APR82
M37B     DC    AL1(37+128,M37BE-*-2),C'** WARNING **   (DO NOT '  APR82
         DC    C'USE TAPECOPY FOR FDR/DSF BACKUP TAPES, AS '      APR82
         DC    C'DATA WILL BE LOST.)'                             APR82
M37BE    EQU   *                                                  APR82
         SPACE 3
*******************************************************************
*                                                                 *
*              DESCRIPTIVE TEXT                                   *
*                                                                 *
*******************************************************************
         SPACE 2
* THE FOLLOWING PIECES ARE USED TO CONSTRUCT THE LINES
*  FOLLOWING MESSAGE TPC003I FOR EACH TAPE.
         SPACE 2
D0       DC    AL1(D0E-*-2),C'.'
D0E      EQU   *
         SPACE 2
D1A      DC    AL1(D1AE-*-2),C'THIS TAPE HAS '
D1AE     EQU   *
         SPACE
D1B      DC    AL1(D1BE-*-2),C'NO LABELS'
D1BE     EQU   *
         SPACE
D1C      DC    AL1(D1CE-*-2),C' AND MAY START WITH A TAPE MARK'
D1CE     EQU   *
         SPACE
D1D      DC    AL1(D1DE-*-2),C'STANDARD LABELS.'
D1DE     EQU   *
         SPACE
D1E      DC    AL1(D1EE-*-2),C'LABELS (IF ANY) ON THIS TAPE WILL NOT BE*
                CHECKED'
D1EE     EQU   *
         SPACE
D1F      DC    AL1(D1FE-*-2),C' AND WILL BE TREATED AS DATA FILES'
D1FE     EQU   *
         SPACE 2
D2A      DC    AL1(D2AE-*-2),C'THIS TAPE WILL BE '
D2AE     EQU   *
         SPACE
D2B      DC    AL1(D2BE-*-2),C'RE'
D2BE     EQU   *
         SPACE
D2C      DC    AL1(D2CE-*-2),C'LABELLED AS '
D2NEWVOL DC    C'VOLSER'
D2CE     EQU   *
         SPACE
D2D      DC    AL1(D2DE-*-2),C' WITH OWNER='
D2OWNER  DC    CL10'OWNER'
D2DE     EQU   *
         SPACE 2
D3       DC    AL1(D3E-*-2),C'THE TAPE COPY WILL START AT FILE '
D3FLSQ   DC    C'NNN',C'.  '
D3E      EQU   *
         SPACE 2
D4       DC    AL1(D4E-*-2),C'NOT MORE THAN '
D4LIMIT  DC    C'NNN',C' FILES WILL BE READ.'
D4E      EQU   *
         SPACE 2
D5A      DC    AL1(D5AE-*-2),C'AFTER AN INPUT ERROR, '
D5AE     EQU   *
         SPACE
D5B      DC    AL1(D5BE-*-2),C'THE BAD BLOCK WILL BE SKIPPED.'
D5BE     EQU   *
         SPACE
D5C      DC    AL1(D5CE-*-2),C'PROCESSING WILL TERMINATE.'
D5CE     EQU   *
         SPACE
D5D      DC    AL1(D5DE-*-2),C'IF ANY DATA WAS READ IT WILL BE COPIED.'
D5DE     EQU   *
         SPACE
D5E      DC    AL1(D5EE-*-2),C' (THIS IS THE DEFAULT.)'
D5EE     EQU   *
         SPACE 2
D6       DC    AL1(D6E-*-2),C'SINCE THE INPUT TAPE IS NOT LABELLED, DSN*
               AMES OF FILE0001, FILE0002, ... WILL BE CREATED.'
D6E      EQU   *
         SPACE 2
D7       DC    AL1(D7E-*-2),C'NO DCB INFORMATION WAS SPECIFIED TO BE PL*
               ACED IN THE OUTPUT TAPE LABELS.'
D7E      EQU   *
         SPACE 2
D8A      DC    AL1(D8AE-*-2),C'RECFM'
D8AE     EQU   *
         SPACE
D8B      DC    AL1(D8BE-*-2),C'BLKSIZE'
D8BE     EQU   *
         SPACE
D8C      DC    AL1(D8CE-*-2),C'LRECL'
D8CE     EQU   *
         SPACE
D8D      DC    AL1(D8DE-*-2),C' AND '
D8DE     EQU   *
         SPACE
D8E      DC    AL1(D8EE-*-2),C' WILL BE PLACED IN THE OUTPUT TAPE LABEL*
               S '
D8EE     EQU   *
         SPACE
D8F      DC    AL1(D8FE-*-2),C'AS SPECIFIED.'
D8FE     EQU   *
         SPACE
D8G      DC    AL1(D8GE-*-2),C'IF THE INPUT HAS NO HDR2 LABELS.'
D8GE     EQU   *
         EJECT
*******************************************************************
*                                                                 *
*              TAPE LABEL FORMATS                                 *
*                                                                 *
*        FIELDS MARKED * WILL ALWAYS BE REPLACED IN OUTPUT        *
*              LABELS.                                            *
*        FIELDS MARKED + WILL BE REPLACED IN OUTPUT LABELS ONLY   *
*              IF THE INPUT TAPE WAS NOT LABELLED OR DID NOT      *
*              HAVE HDR2 LABELS.                                  *
*        FIELDS MARKED - ARE PROCESSED SPECIALLY:                 *
*              VOLOWNER WILL BE REPLACED IF THE LABEL ON THE      *
*               OUTPUT TAPE IS BEING REWRITTEN AND THE 3RD        *
*               EXEC CARD PARAMETER WAS SPECIFIED.                *
*              FL1EXPDT WILL BE REPLACED IF IT WAS SPECIFIED      *
*               IN THE JCL.                                       *
*                                                                 *
*******************************************************************
         SPACE 2
         PRINT DATA
         SPACE 2
* FORMAT OF VOLUME LABEL
         SPACE
VOLLABI  DC    C'VOL'
VOLNO    DC    C'1'
VOLSERNO DC    CL6' '            * VOLUME SERIAL
         DC    C' '                (UNUSED, WAS VOLUME SECURITY)  SEP91
         DC    CL24' '                                            SEP91
VOLTRTCH DC    CL2' '              TAPE RECORDING TECHNIQUE?      SEP91
*                                       (P=COMPACTION)            SEP91
         DC    CL4' '                                             SEP91
VOLOWNER DC    CL10' '           - OWNER
         DC    CL29' '
         SPACE 2
* FORMAT OF DATASET LABEL 1
         SPACE
FL1LABI  DC    C'HDR'              OR 'EOV' OR 'EOF'
FL1NO    DC    C'1'
FL1ID    DC    CL17' '           + LOW-ORDER 17 BYTES OF DSNAME
FL1FILSR DC    CL6' '            * VOLUME SERIAL
FL1VOLSQ DC    C'0001'
FL1FILSQ DC    C'0001'           * FILE SEQUENCE
FL1GNO   DC    CL4' '              GENERATION NUMBER
FL1VNG   DC    CL2' '              VERSION NUMBER
FL1CREDT DC    C'CYYDDD'         * CREATION DATE
FL1EXPDT DC    C'CYYDDD'         - EXPIRATION DATE
FL1FSEC  DC    C'0'                NO SECURITY
FL1BLKCT DC    C'000000'         * BLOCK COUNT
FL1SYSCD DC    CL13'IBM MVS/DFP' + SYSTEM CODE                    SEP91
* NOTE: PRIOR TO DFP V3, THE SYSTEM CODE WAS C'IBM OS/VS 370'     SEP91
         DC    CL3' '                                             SEP91
FL1BLKHI DC    CL4' '              BLOCK COUNT HIGH-ORDER FIELDS  SEP91
         SPACE 2
* FORMAT OF DATASET LABEL 2
         SPACE
FL2LABI  DC    C'HDR'              OR 'EOV' OR 'EOF'
FL2NO    DC    C'2'
FL2RECFM DC    CL1' '            + RECFM (U/F/V)
FL2BLKL  DC    CL5' '            + BLKSIZE
FL2LRECL DC    CL5' '            + LRECL, OR '99999' FOR LRECL=X
FL2DEN   DC    CL1' '            * DENSITY
FL2FILP  DC    C'0'
FL2JOBD  DC    CL8' '            * JOBNAME
FL2JSSP  DC    C'/'
FL2STEPD DC    CL8' '            * STEPNAME
FL2TRTCH DC    CL2' '            * TRTCH FOR 7-TRACK TAPE
*                                    OR FOR 3480/3490 COMPACTION  SEP91
FL2CNTRL DC    CL1' '            + PRINTER CONTROL (A/M)
         DC    C' '
FL2BLKA  DC    CL1' '            + BLOCK ATTRIBUTE (B/S/R)
         DC    CL3' '
FL2ID    DC    CL5' '            * 34XX ONLY: CREATING TAPE SERIAL
FL2DSIND DC    CL1' '              DATASET INDICATOR (C=CHKPT DS) SEP91
         DC    CL32' '                                            SEP91
         SPACE 3
* SAVE AREAS FOR FL1/2 LABELS READ FROM INPUT TAPE
         SPACE
FL1SAVE  DS    CL80
         SPACE
FL2SAVE  DS    CL80
         EJECT
*******************************************************************
*                                                                 *
*              ASSORTED CONSTANTS AND INCONSTANTS                 *
*                                                                 *
*******************************************************************
         SPACE ,
         LTORG
         EJECT
*******************************************************************
*                                                                 *
*              FLAGS                                              *
*                                                                 *
*******************************************************************
         SPACE 2
* A USEFUL FLAG
         SPACE
FLAG     DC    AL1(0)
* DEFINITION OF FLAG BITS:
FLALTNAM EQU   X'80'               ON= USING SYSUT1/2, NOT TAPE1/2
FLERROR  EQU   X'40'               ON= TERMINATING CONDITION DETECTED
FLOWNER  EQU   X'20'               ON= NEW OWNER INFO SPECIFIED
FLVERLBL EQU   X'10'               ON= LABEL BEING READ (FOR SYNAD)
FLINPERR EQU   X'08'               ON= READ ERROR (SET BY SYNAD)
FLDENFIX EQU   X'04'               ON= DENSITY ETC FILLED IN AFTER OPEN
         SPACE
* ANOTHER FLAG
         SPACE
FLAG2    DC    AL1(0)
* DEFINITION OF FLAG2 BITS:
FLEOV    EQU   X'80'               ON= EOV LABEL FOUND
FLLBLEOF EQU   X'40'               ON= EOF ON LABEL FILE
FLLBLERR EQU   X'20'               ON= ERROR ON LABEL FILE
FLDTAERR EQU   X'10'               ON= TERMINATING ERROR ON DATA FILE
FLNODATA EQU   X'08'               ON= SYNAD FOUND NO DATA WAS READ
FLLBLRW  EQU   X'04'               ON= READING/WRITING LABELS
FLTLRLBL EQU   X'02'               ON= PROCESSING TRAILER LABELS
         SPACE 2
*******************************************************************
*                                                                 *
*              SPECIFICATION PARAMETERS                           *
*                                                                 *
*******************************************************************
         SPACE 2
OWNER    DC    CL10' '             OWNER ID (PARM3) IF GIVEN
         SPACE
BUFNO    DC    H'2'                BUFNO FOR TAPE1/2
BLKSIZE  DC    F'10231'            BLKSIZE FOR TAPE1/2
LIMIT    DC    F'0'                LIMIT ON NUMBER OF FILES TO COPY
         SPACE 2
*******************************************************************
*                                                                 *
*              TABLES                                             *
*                                                                 *
*******************************************************************
         SPACE 2
* TABLE FOR TRTCH CONVERSION BETWEEN EBCDIC AND JFCTRTCH VALUES.
         SPACE
TRTCHADR DC    A(TRTCHTBL,TRTCHTB2-TRTCHTBL,TRTCHTBE)
         SPACE
TRTCHTBL DC    AL1(JFCEVEN),C'E '
TRTCHTB2 DC    AL1(JFCTRAN),C'T '
         DC    AL1(JFCCONV),C'C '
*        DC    AL1(JFCCOMP),C'P '  3480/3490 COMPRESSION?         SEP91
TRTCHTBE DC    AL1(JFCTREV),C'ET'
         DC    AL1(0),C'  '        OVERFLOW ENTRY
         SPACE 2
* TABLE OF LABEL IDS FOR INPUT LABEL VERIFICATION.
         SPACE
LABLTABL DC    C'UHL '             INDEXED BY R5 DURING LABEL READ
         DC    C'HDR1'
         DC    C'HDR2'
         DC    C'UTL '
         DC    C'EOF1'
         DC    C'EOF2'
         SPACE 2                                                  APR82
* TABLE OF DAY NAMES, FOR HEADER LINE                             APR82
         SPACE ,                                                  APR82
DAYS     DS    0F                                                 APR82
         DC    AL1(L'DAY0-1),AL3(DAY0-DAY0)                       APR82
         DC    AL1(L'DAY1-1),AL3(DAY1-DAY0)                       APR82
         DC    AL1(L'DAY2-1),AL3(DAY2-DAY0)                       APR82
         DC    AL1(L'DAY3-1),AL3(DAY3-DAY0)                       APR82
         DC    AL1(L'DAY4-1),AL3(DAY4-DAY0)                       APR82
         DC    AL1(L'DAY5-1),AL3(DAY5-DAY0)                       APR82
         DC    AL1(L'DAY6-1),AL3(DAY6-DAY0)                       APR82
DAY0     DC    C'SUNDAY'                                          APR82
DAY1     DC    C'MONDAY'                                          APR82
DAY2     DC    C'TUESDAY'                                         APR82
DAY3     DC    C'WEDNESDAY'                                       APR82
DAY4     DC    C'THURSDAY'                                        APR82
DAY5     DC    C'FRIDAY'                                          APR82
DAY6     DC    C'SATURDAY'                                        APR82
         SPACE 2                                                  APR82
* TABLE OF MONTH NAMES, LIKEWISE                                  APR82
         SPACE ,                                                  APR82
MONTHS   DS    0F                                                 APR82
         DC    AL1(L'MONTH1-1),AL3(MONTH1-MONTH1)                 APR82
         DC    AL1(L'MONTH2-1),AL3(MONTH2-MONTH1)                 APR82
         DC    AL1(L'MONTH3-1),AL3(MONTH3-MONTH1)                 APR82
         DC    AL1(L'MONTH4-1),AL3(MONTH4-MONTH1)                 APR82
         DC    AL1(L'MONTH5-1),AL3(MONTH5-MONTH1)                 APR82
         DC    AL1(L'MONTH6-1),AL3(MONTH6-MONTH1)                 APR82
         DC    AL1(L'MONTH7-1),AL3(MONTH7-MONTH1)                 APR82
         DC    AL1(L'MONTH8-1),AL3(MONTH8-MONTH1)                 APR82
         DC    AL1(L'MONTH9-1),AL3(MONTH9-MONTH1)                 APR82
         DC    AL1(L'MONTH10-1),AL3(MONTH10-MONTH1)               APR82
         DC    AL1(L'MONTH11-1),AL3(MONTH11-MONTH1)               APR82
         DC    AL1(L'MONTH12-1),AL3(MONTH12-MONTH1)               APR82
         DC    AL1(L'MONTH13-1),AL3(MONTH13-MONTH1)               APR82
MONTH1   DC    C'JANUARY'                                         APR82
MONTH2   DC    C'FEBRUARY'                                        APR82
MONTH3   DC    C'MARCH'                                           APR82
MONTH4   DC    C'APRIL'                                           APR82
MONTH5   DC    C'MAY'                                             APR82
MONTH6   DC    C'JUNE'                                            APR82
MONTH7   DC    C'JULY'                                            APR82
MONTH8   DC    C'AUGUST'                                          APR82
MONTH9   DC    C'SEPTEMBER'                                       APR82
MONTH10  DC    C'OCTOBER'                                         APR82
MONTH11  DC    C'NOVEMBER'                                        APR82
MONTH12  DC    C'DECEMBER'                                        APR82
MONTH13  DC    C'INVALID'          IN CASE DAY=366 NON-LEAP YR    APR82
         SPACE 2
*******************************************************************
*                                                                 *
*              MISCELLANEOUS                                      *
*                                                                 *
*******************************************************************
         SPACE 2
* DCB EXIT LISTS
         SPACE
         DC    0F'0'
LIST1    DC    X'87',AL3(JFCB1)
LIST2    DC    X'87',AL3(JFCB2)
         SPACE
* SAVE AREAS
         SPACE
SAVE     DS    18F
SYNADSAV DS    18F                 ALTERNATE SAVE DURING SYNAD
         SPACE
* DOUBLEWORD-ALIGNED WORK AREA
         SPACE
TEMP     DS    D
         SPACE ,                                                  APR82
* ANOTHER WORK AREA (FULLWORD ONLY)                               APR82
         SPACE ,                                                  APR82
TEMP2    DS    F                                                  APR82
         SPACE
* NUMBER OF BLOCKS SKIPPED ON INPUT TAPE                          SEP79
         SPACE ,                                                  SEP79
INPBLSKP DC    F'0'                BLOCKS SKIPPED THIS INPUT FILE SEP79
         SPACE
* RETURN-CODE SAVE BYTE
         SPACE
RC       DC    AL1(0)              RETURN CODE
         SPACE
* BLOCK SIZE FROM LABEL, USED IF LARGER THAN BLKSIZE FOR
*  DATA-FILE BUFFER ALLOCATION.
         SPACE
INPBLKSI DC    CL5' '              LABEL BLOCK SIZE
         SPACE ,                                                  APR82
* TODAY'S DATE, IN CHARACTER (FOR EXPDT CHECK)                    APR82
         SPACE ,                                                  APR82
DATE     DC    C'CYYDDD'                                          SEP91
         SPACE ,                                                  DEC85
* TRANSLATE TABLE (VIRTUAL ORIGIN IS *-C'0', OR *-240)            DEC85
*  TO CONVERT UNPACKED HEX VALUES OF A-F (X'FA'-X'FF')            DEC85
*  INTO READABLE CHARACTER VALUES (C'A' THROUGH C'F').            DEC85
         SPACE ,                                                  DEC85
HEXSTUFF DC    C'0123456789ABCDEF'                                DEC85
         SPACE ,                                                  SEP91
* CENTURY TRANSLATION TABLE, TO CONVERT CENTURY TO TAPE LABEL     SEP91
*  CHARACTER (19XX=BLANK, 20XX=0, 21XX=1)                         SEP91
         SPACE ,                                                  SEP91
XLATECYY DC    C' 01'                                             SEP91
         EJECT
*******************************************************************
*                                                                 *
*              TAPE CONTROL BLOCKS                                *
*                                                                 *
*        THE FOLLOWING MUST APPEAR IN THE SAME ORDER FOR          *
*         THE INPUT AND OUTPUT TAPES:                             *
*              FLAG BYTE                                          *
*              LABEL TYPE                                         *
*              TRTCH SAVE BYTES                                   *
*              VOLUME SERIAL                                      *
*              LOGICAL FILE SEQUENCE NUMBER                       *
*              JFCB                                               *
*              DCB                                                *
*                                                                 *
*******************************************************************
         SPACE 2
T        DS    0F                  FOR COMMON CODE REFERENCES
         SPACE 2
*******************************************************************
*                                                                 *
*              CONTROL BLOCKS FOR TAPE1                           *
*                                                                 *
*******************************************************************
         SPACE 2
T1       DS    0F
INFLAG   DC    AL1(FLIN)           THIS IS THE INPUT TAPE
* FLAG BITS IN IN/OUTFLAG:
FLIN     EQU   X'80'               ON= THIS IS THE INPUT TAPE
FLRELBL  EQU   X'40'               ON= OUTPUT TAPE, TO BE RELABELLED
FLSEVEN  EQU   X'20'               ON= THIS IS A 7-TRACK TAPE
FLNOTTP  EQU   X'10'               ON= THIS IS NOT A REAL TAPE
FLPID    EQU   X'08'               ON= PID OPTION FOR INPUT TAPE
FLINTEXT EQU   X'04'               ON= INTERNAL LABEL ^= EXTERNAL LABEL
FLGOTLTM EQU   X'02'               ON= LTM FOUND DURING LABEL VER
         SPACE
INLABEL  DC    AL1(0)              SET DURING SPECIFICATION PROCESSING
INTRTCH  DC    AL1(0)               "    "           "           "
INTRTCH2 DC    AL1(0)              SET FROM HDR LABEL OR INTRTCH
INTRTCHL DC    AL1(0)              SET TO ET IF LABELLED
INVOL    DC    XL6'00'             SET FROM PARM FIELD OR JFCB
INFILE   DC    H'1'                SET FROM LABEL= IN JCL
JFCB1    DS    44F                 JFCB FOR INPUT TAPE
         SPACE
TAPE1    DCB   BFALN=D,BFTEK=S,DDNAME=TAPE1,DEVD=TA,DSORG=PS,EROPT=ACC,*
               EXLST=LIST1,MACRF=GL,RECFM=U,SYNAD=SYNAD
         EJECT
*******************************************************************
*                                                                 *
*              CONTROL BLOCKS FOR TAPE2                           *
*                                                                 *
*******************************************************************
         SPACE 2
T2       DS    0F
OUTFLAG  DC    AL1(0)              THIS IS THE OUTPUT TAPE
OUTLABEL DC    AL1(0)              SET DURING SPECIFICATION PROCESSING
OUTTRTCH DC    AL1(0)               "    "           "           "
OUTTRCH2 DC    AL1(0)              SET FROM OUTTRTCH OR INPUT
OUTTRCHL DC    AL1(0)              SET TO ET IF LABELLED
OUTVOL   DC    XL6'00'             SET FROM PARM FIELD OR JFCB
OUTFILE  DC    H'1'                SET FROM LABEL= IN JCL
JFCB2    DS    44F                 JFCB FOR OUTPUT TAPE
         SPACE
TAPE2    DCB   BFALN=D,BFTEK=S,DDNAME=TAPE2,DEVD=TA,DSORG=PS,EROPT=ACC,*
               EXLST=LIST2,MACRF=(GL,PM),RECFM=U,SYNAD=SYNAD
         EJECT
*******************************************************************
*                                                                 *
*              SYSPRINT DCB                                       *
*                                                                 *
*******************************************************************
         SPACE 2
SYSPRINT DCB   BLKSIZE=133,DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),        *
               RECFM=UA,SYNAD=SYNADPR
         TITLE '           TAPECOPY - SYSTEM DSECTS'
         DCBD  DSORG=PS,DEVD=TA
         EJECT
         IEZDEB
         EJECT
JFCB     DSECT
         IEFJFCBN
         EJECT
TIOT     DSECT
         IEFTIOT1
         EJECT
UCB      DSECT
         IEFUCBOB
         SPACE 5
         END   BEGINING                                           APR82
