//TECHBHW  JOB  (450,FMAIN),'BRIAN WESTERMAN',MSGCLASS=H,CLASS=A,
//   NOTIFY=TECHBHW,REGION=0M,TIME=1440
//*
//ASSEMBLE EXEC ASMHCL,REGION.C=1024K,REGION.L=1024K,
//             PARM.L='LET,LIST,XREF,NCAL,RENT,REFR,REUS'
//C.SYSLIB DD
//         DD  DISP=SHR,DSN=OEMTC.HSC.V2R0M1.SLSMAC
//         DD  DISP=SHR,DSN=SYSX.CAI.R10.CAIMAC
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//C.SYSIN DD *
         MACRO
         EQUATES
.* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
.* ** STANDARD EQUATE MACRO ** * ** * ** * ** * ** * ** * ** * ** *
.* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FPR0     EQU   0
FPR2     EQU   2
FPR4     EQU   4
FPR6     EQU   6
         MEND
         MACRO
&NAME    PRIMEH &OP1,&OP2,&OP3,&OP4,&OP5,&OP6,&LOC=(RES,ANY),&SP=0
.*
.*    THIS MACRO HAS BEEN REWORKED TO PROVIDE COMPLETE XA 31 BIT
.*  ADDRESSING SUPPORT.  IT CAN ONLY BE USED WITH ASSEMBLER H.
.*  THE PURPOSE OF THIS MACRO IS TO PROVIDE STANDARD OS LINKAGE.
.*  IT WILL SAVE REGISTERS, CREATE THE 18 WORD SAVE AREA, AND
.*  ESTABLISH UP TO FOUR BASE REGISTERS.  ALL OPERANDS ARE OPTIONAL
.*  WITH ONE BASE REGISTER, REGISTER 12, AND AN UNNAMED SAVE AREA
.*  BEING THE DEFAULTS.  IF A DYNAMIC SAVE AREA IS DESIRED, BY CODING
.*  THE KEYWORD 'DYNAMIC' AS THE SAVE AREA NAME A 'GETMAIN' INSTEAD
.*  OF AN 18 WORD NAMED SAVE AREA WILL BE GENERATED.  THE DEFAULT FOR
.*  THE GETMAIN WILL BE IN THE SAME STORAGE AS THE CALLER IE; ABOVE
.*  OR BELOW THE LINE.  THIS MAY BE OVERRIDEN BY CODING A 'LOC=VAL'
.*  AS THE LAST PARAMATER OF THE PRIME MACRO.  YOU MUST USE THE
.*  VALID VALUE(S) FOR THE 'LOC=' PARAMATER OF THE GETMAIN MACRO
.*  AS DOCUMENTED IN THE 'MVS/ESA APPLICATION DEVELOPMENT MACRO
.*  REFERENCE' MANUAL (GC28-1822-1).  IF TWO VALUES ARE CODED
.*  THEY MUST INCLUDE THE PARENS.  THE SUBPOOL PARAMETER IS ALSO
.*  SUPPORTED AND MAY BE CODED ON THE MACRO AS 'SP=N' WHERE N IS
.*  THE REQUESTED STORAGE SUBPOOL.  IF THE SUBPOOL PARAMETER IS
.*  OMMITTED 'SP=0' IS THE DEFAULT.  THE 'TERMEH' MACRO MUST BE USED
.*  IN CONJUNCTION WITH THIS MACRO FOR PROGRAM EXIT AS THE FREEMAIN
.*  INDICATOR MOVED TO SUPPORT XA/31 BIT ADDRESSING AND THE 'SP='
.*  PARAMETER IS PASSED TO THE 'TERMEH' TO IDENTIFY THE PROPER
.*  STORAGE SUBPOOL TO BE FREEMAINED.
.*
.*    DATE - JULY 1997 - PRIMEH CREATED FOR XA COMPATIBILITY.
.*                       TERMEH MACRO MUST BE USED FOR SAVE
.*                       AREA FREEMAIN COMPATIBILITY FOR PROGRAM
.*                       TERMINATION.
.*                       ASSEMBLER H MUST BE USED.
.*                       SUPPORTS AMODE/RMODE = ANY.
.*
.****************************************************************
.*
.*    ROUTINE TO DETERMINE THE NUMBER OF OPERANDS THAT ARE CODED
.*
          LCLC  &E
          LCLC  &EE
          LCLC  &EEE
          LCLC  &EEEE
          GBLC  &SPN#
          AIF   (T'&SP EQ 'N').AA1
          MNOTE 12,'** ERROR ** ILLEGAL SP VALUE, MUST BE NUMERIC'
          MEXIT
.AA1      ANOP
          AIF   ('&SP' LT '255').AA2
          MNOTE 12,'** ERROR ** SP= VALUE OUT OF RANGE'
          MEXIT
.AA2      ANOP
&SPN#     SETC  '&SP'
          AIF   ('&OP6' EQ '').AA  CHECK FOR AN EXTRA OPERAND
          MNOTE 'WARNING-EXTRA OPERAND SPECIFIED-CHECK COMPILER OUTPUT'
.AA       ANOP
          AIF   ('&OP5' EQ '').AB  OPERAND FIVE BLANK
          AGO   .BA                 NO
.AB       ANOP
          AIF   ('&OP4' EQ '').AC  OPERAND FOUR BLANK
          AGO   .CA                 NO
.AC       ANOP
          AIF   ('&OP3' EQ '').AD  OPERAND THREE BLANK
          AGO   .DA                 NO
.AD       ANOP
          AIF   ('&OP2' EQ '').AE  OPERAND TWO BLANK
          AGO   .EA                 NO
.AE       ANOP
          AIF   ('&OP1' EQ '').GA  OPERAND ONE BLANK
          AGO   .FA                 NO
.*
.*    ROUTINE FOR FIVE OPERANDS
.*
.BA       ANOP                     ENTRY POINT
&E        SETC  '&OP1'             SET BASE REGISTER ONE
&EE       SETC  '&OP2'             SET BASE REGISTER TWO
&EEE      SETC  '&OP3'             SET BASE REGISTER THREE
&EEEE     SETC  '&OP4'             SET BASE REGISTER FOUR
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').BB
          AIF   ('&E' EQ '14' OR '&E' EQ '15').BB
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').BB
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').BB
          AGO   .BC
.BB       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.BC       AIF   ('&EE' EQ '0' OR '&EE' EQ '1' OR '&EE' EQ '13').BD
          AIF   ('&EE' EQ '14' OR '&EE' EQ '15').BD
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').BD
          AIF   ('&EE' EQ 'R13' OR '&EE' EQ 'R14').BD
          AIF   ('&EE' EQ 'R15').BD
          AGO   .BE
.BD       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP2 SPECIFIED'
.BE       AIF   ('&EEE' EQ '0' OR '&EEE' EQ '1' OR '&EEE' EQ '13').BF
          AIF   ('&EEE' EQ '14' OR '&EEE' EQ '15').BF
          AIF   ('&EEE' EQ 'R0' OR '&EEE' EQ 'R1').BF
          AIF   ('&EEE' EQ 'R13' OR '&EEE' EQ 'R14').BF
          AIF   ('&EEE' EQ 'R15').BF
          AGO   .BG
.BF       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP3 SPECIFIED'
.BG       AIF   ('&EEEE' EQ '0' OR '&EEEE' EQ '1').BH
          AIF   ('&EEEE' EQ '13' OR '&EEEE' EQ '14').BH
          AIF   ('&EEEE' EQ '15').BH
          AIF   ('&EEEE' EQ 'R0' OR '&EEEE' EQ 'R1').BH
          AIF   ('&EEEE' EQ 'R13' OR '&EEEE' EQ 'R14').BH
          AIF   ('&EEEE' EQ 'R15').BH
          AGO   .BI
.BH       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP4 SPECIFIED'
.BI       AIF   ('&E' EQ '' OR '&EE' EQ '' OR '&EEE' EQ '').BJ
          AIF   ('&EEEE' EQ '').BJ
          AGO   .BK
.BJ       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.BK       ANOP                     ENTRY POINT
          AIF   ('&OP5' EQ 'DYNAMIC').BM TEST FOR A DYNAMIC S.A.
          DS    0H
          USING *,&E,&EE,&EEE,&EEEE ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EEEE,1(0,0)       SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EEEE) LOAD BASE REGISTER TWO
          LA    &EEE,4095(&EE,&EEEE) LOAD BASE REGISTER THREE
          LA    &EEEE,4095(&EEE,&EEEE) LOAD BASE REGISTER FOUR
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,BA&SYSNDX        OBTAIN SAVE AREA ADDRESS
&OP5      DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
BA&SYSNDX ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
.BL       ANOP                     ENTRY POINT
          ST    13,4(0,1)          STORE HIGHER SAVE AREA POINTER
          LM    0,1,20(13)         RESTORE REGISTERS 0 AND 1
          L     13,8(0,13)         LOAD SAVE AREA ADDRESS
          MEXIT
.BM       ANOP
          DS    0H
          USING *,&E,&EE,&EEE,&EEEE ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EEEE,1(0,0)       SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EEEE) LOAD BASE REGISTER TWO
          LA    &EEE,4095(&EE,&EEEE) LOAD BASE REGISTER THREE
          LA    &EEEE,4095(&EEE,&EEEE) LOAD BASE REGISTER FOUR
.*
.*    ACQUIRE A SAVE AREA IN SAME VIRTUAL STORAGE THIS PROGRAM
.*    IS EXECUTING IN (ABOVE OR BELOW THE 16 MEG. LINE)
.*
          MNOTE  '         GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#'
          GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#  ACQUIRE A SAVE AREA
          XC    0(74,1),0(1)       CLEAR ACQUIRED SAVE AREA
          ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          MVI   72(1),X'FF'        SET INDICATOR FOR TERME MACRO
          AGO   .BL                TO FINISH ROUTINE
.*
.*    ROUTINE FOR FOUR OPERANDS
.*
.CA       ANOP                     ENTRY POINT
&E        SETC  '&OP1'             SET BASE REGISTER ONE
&EE       SETC  '&OP2'             SET BASE REGISTER TWO
&EEE      SETC  '&OP3'             SET BASE REGISTER THREE
&EEEE     SETC  '&OP4'             SET BASE REGISTER FOUR
          AIF   (T'&OP4 EQ 'N').CB TEST OPERAND FOUR FOR NUMERIC
          AGO   .CO                 NO - CONTINUE
.CB       ANOP                     ENTRY POINT
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').CC
          AIF   ('&E' EQ '14' OR '&E' EQ '15').CC
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').CC
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').CC
          AGO   .CD
.CC       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.CD       AIF   ('&EE' EQ '0' OR '&EE' EQ '1' OR '&EE' EQ '13').CE
          AIF   ('&EE' EQ '14' OR '&EE' EQ '15').CE
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').CE
          AIF   ('&EE' EQ 'R13' OR '&EE' EQ 'R14').CE
          AIF   ('&EE' EQ 'R15').CE
          AGO   .CF
.CE       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP2 SPECIFIED'
.CF       AIF   ('&EEE' EQ '0' OR '&EEE' EQ '1' OR '&EEE' EQ '13').CG
          AIF   ('&EEE' EQ '14' OR '&EEE' EQ '15').CG
          AIF   ('&EEE' EQ 'R0' OR '&EEE' EQ 'R1').CG
          AIF   ('&EEE' EQ 'R13' OR '&EEE' EQ 'R14').CG
          AIF   ('&EEE' EQ 'R15').CG
          AGO   .CH
.CG       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP3 SPECIFIED'
.CH       AIF   ('&EEEE' EQ '0' OR '&EEEE' EQ '1').CI
          AIF   ('&EEEE' EQ '13' OR '&EEEE' EQ '14').CI
          AIF   ('&EEEE' EQ '15').CI
          AIF   ('&EEEE' EQ 'R0' OR '&EEEE' EQ 'R1').CI
          AIF   ('&EEEE' EQ 'R13' OR '&EEEE' EQ 'R14').CI
          AIF   ('&EEEE' EQ 'R15').CI
          AGO   .CJ
.CI       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP4 SPECIFIED'
.CJ       AIF   ('&E' EQ '' OR '&EE' EQ '' OR '&EEE' EQ '').CK
          AIF   ('&EEEE' EQ '').CK
          AGO   .CL
.CK       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.CL       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E,&EE,&EEE,&EEEE ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EEEE,1(0,0)       SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EEEE)  LOAD BASE REGISTER TWO
          LA    &EEE,4095(&EE,&EEEE) LOAD BASE REGISTER THREE
          LA    &EEEE,4095(&EEE,&EEEE) LOAD BASE REGISTER FOUR
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,CA&SYSNDX        OBTAIN SAVE AREA ADDRESS
          DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
.CM       ANOP                     ENTRY POINT
CA&SYSNDX ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
.CN       ANOP                     ENTRY POINT
          ST    13,4(0,1)          STORE HIGHER SAVE AREA POINTER
          LM    0,1,20(13)         RESTORE REGISTERS 0 AND 1
          L     13,8(0,13)         LOAD SAVE AREA ADDRESS
          MEXIT
.CO       ANOP                     ENTRY POINT
          AIF   ('&EEEE' EQ 'R0' OR '&EEEE' EQ 'R1').CB
          AIF   ('&EEEE' EQ 'R2' OR '&EEEE' EQ 'R3').CB
          AIF   ('&EEEE' EQ 'R4' OR '&EEEE' EQ 'R5').CB
          AIF   ('&EEEE' EQ 'R6' OR '&EEEE' EQ 'R7').CB
          AIF   ('&EEEE' EQ 'R8' OR '&EEEE' EQ 'R9').CB
          AIF   ('&EEEE' EQ 'R10' OR '&EEEE' EQ 'R11').CB
          AIF   ('&EEEE' EQ 'R12' OR '&EEEE' EQ 'R13').CB
          AIF   ('&EEEE' EQ 'R14' OR '&EEEE' EQ 'R15').CB
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').CP
          AIF   ('&E' EQ '14' OR '&E' EQ '15').CP
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').CP
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').CP
          AGO   .CQ
.CP       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.CQ       AIF   ('&EE' EQ '0' OR '&EE' EQ '1' OR '&EE' EQ '13').CR
          AIF   ('&EE' EQ '14' OR '&EE' EQ '15').CR
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').CR
          AIF   ('&EE' EQ 'R13' OR '&EE' EQ 'R14').CR
          AIF   ('&EE' EQ 'R15').CR
          AGO   .CS
.CR       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP2 SPECIFIED'
.CS       AIF   ('&EEE' EQ '0' OR '&EEE' EQ '1' OR '&EEE' EQ '13').CT
          AIF   ('&EEE' EQ '14' OR '&EEE' EQ '15').CT
          AIF   ('&EEE' EQ 'R0' OR '&EEE' EQ 'R1').CT
          AIF   ('&EEE' EQ 'R13' OR '&EEE' EQ 'R14').CT
          AIF   ('&EEE' EQ 'R15').CT
          AGO   .CU
.CT       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP3 SPECIFIED'
.CU       AIF   ('&E' EQ '' OR '&EE' EQ '' OR '&EEE' EQ '').CV
          AIF   ('&EEEE' EQ '').CV
          AGO   .CW
.CV       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.CW       ANOP                     ENTRY POINT
          AIF   ('&OP4' EQ 'DYNAMIC').CX TEST FOR A DYNAMIC S.A.
          DS    0H
          USING *,&E,&EE,&EEE      ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EEE,1(0,0)        SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EEE)  LOAD BASE REGISTER TWO
          LA    &EEE,4095(&EE,&EEE) LOAD BASE REGISTER THREE
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,CA&SYSNDX        OBTAIN SAVE AREA ADDRESS
&OP4      DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
          AGO   .CM                TO FINISH ROUTINE
.CX       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E,&EE,&EEE      ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EEE,1(0,0)        SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EEE)  LOAD BASE REGISTER TWO
          LA    &EEE,4095(&EE,&EEE) LOAD BASE REGISTER THREE
          MNOTE  '         GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#'
          GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#  ACQUIRE A SAVE AREA
          XC    0(74,1),0(1)       CLEAR ACQUIRED SAVE AREA
          ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          MVI   72(1),X'FF'        SET INDICATOR FOR TERME MACRO
          AGO   .CN                TO FINISH ROUTINE
.*
.*    ROUTINE FOR THREE OPERANDS
.*
.DA       ANOP                     ENTRY POINT
&E        SETC  '&OP1'             SET BASE REGISTER ONE
&EE       SETC  '&OP2'             SET BASE REGISTER TWO
&EEE      SETC  '&OP3'             SET BASE REGISTER THREE
          AIF   (T'&OP3 EQ 'N').DB TEST OPERAND THREE FOR NUMERIC
          AGO   .DM                 NO - CONTINUE
.DB       ANOP                     ENTRY POINT
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').DC
          AIF   ('&E' EQ '14' OR '&E' EQ '15').DC
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').DC
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').DC
          AGO   .DD
.DC       MNOTE ' WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.DD       AIF   ('&EE' EQ '0' OR '&EE' EQ '1' OR '&EE' EQ '13').DE
          AIF   ('&EE' EQ '14' OR '&EE' EQ '15').DE
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').DE
          AIF   ('&EE' EQ 'R13' OR '&EE' EQ 'R14').DE
          AIF   ('&EE' EQ 'R15').DE
          AGO   .DF
.DE       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP2 SPECIFIED'
.DF       AIF   ('&EEE' EQ '0' OR '&EEE' EQ '1' OR '&EEE' EQ '13').DG
          AIF   ('&EEE' EQ '14' OR '&EEE' EQ '15').DG
          AIF   ('&EEE' EQ 'R0' OR '&EEE' EQ 'R1').DG
          AIF   ('&EEE' EQ 'R13' OR '&EEE' EQ 'R14').DG
          AIF   ('&EEE' EQ 'R15').DG
          AGO   .DH
.DG       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP3 SPECIFIED'
.DH       AIF   ('&E' EQ '' OR '&EE' EQ '' OR '&EEE' EQ '').DI
          AGO   .DJ
.DI       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.DJ       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E,&EE,&EEE      ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EEE,1(0,0)        SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EEE)  LOAD BASE REGISTER TWO
          LA    &EEE,4095(&EE,&EEE) LOAD BASE REGISTER THREE
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,DA&SYSNDX        OBTAIN SAVE AREA ADDRESS
          DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
.DK       ANOP                     ENTRY POINT
DA&SYSNDX ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
.DL       ANOP                     ENTRY POINT
          ST    13,4(0,1)          STORE HIGHER SAVE AREA POINTER
          LM    0,1,20(13)         RESTORE REGISTERS 0 AND 1
          L     13,8(0,13)         LOAD SAVE AREA ADDRESS
          MEXIT
.DM       ANOP                     ENTRY POINT
          AIF   ('&EEE' EQ 'R0' OR '&EEE' EQ 'R1').DB
          AIF   ('&EEE' EQ 'R2' OR '&EEE' EQ 'R3').DB
          AIF   ('&EEE' EQ 'R4' OR '&EEE' EQ 'R5').DB
          AIF   ('&EEE' EQ 'R6' OR '&EEE' EQ 'R7').DB
          AIF   ('&EEE' EQ 'R8' OR '&EEE' EQ 'R9').DB
          AIF   ('&EEE' EQ 'R10' OR '&EEE' EQ 'R11').DB
          AIF   ('&EEE' EQ 'R12' OR '&EEE' EQ 'R13').DB
          AIF   ('&EEE' EQ 'R14' OR '&EEE' EQ 'R15').DB
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').DN
          AIF   ('&E' EQ '14' OR '&E' EQ '15').DN
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').DN
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').DN
          AGO   .DO
.DN       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.DO       AIF   ('&EE' EQ '0' OR '&EE' EQ '1' OR '&EE' EQ '13').DP
          AIF   ('&EE' EQ '14' OR '&EE' EQ '15').DP
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').DP
          AIF   ('&EE' EQ 'R13' OR '&EE' EQ 'R14').DP
          AIF   ('&EE' EQ 'R15').DP
          AGO   .DQ
.DP       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP2 SPECIFIED'
.DQ       AIF   ('&E' EQ '' OR '&EE' EQ '').DR
          AGO   .DS
.DR       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.DS       ANOP                     ENTRY POINT
          AIF   ('&OP3' EQ 'DYNAMIC').DT TEST FOR A DYNAMIC S.A.
          DS    0H
          USING *,&E,&EE           ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
DB&SYSNDX BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          L     &EE,DC&SYSNDX      LOAD BASE REGISTER TWO
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,DA&SYSNDX        OBTAIN SAVE AREA ADDRESS
&OP3      DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
DC&SYSNDX DC    A(DB&SYSNDX+4094)  SECOND BASE REGISTER ADDRESS
          AGO   .DK                TO FINISH ROUTINE
.DT       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E,&EE           ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          LA    &EE,1(0,0)         SET REGISTER TO A BINARY ONE
          LA    &EE,4095(&E,&EE)   LOAD BASE REGISTER TWO
          MNOTE  '         GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#'
          GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#  ACQUIRE A SAVE AREA
          XC    0(74,1),0(1)       CLEAR ACQUIRED SAVE AREA
          ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          MVI   72(1),X'FF'        SET INDICATOR FOR TERME MACRO
          AGO   .DL                TO FINISH ROUTINE
.*
.*     ROUTINE FOR TWO OPERANDS
.*
.EA       ANOP
&E        SETC  '&OP1'             SET BASE REGISTER ONE
&EE       SETC  '&OP2'             SET BASE REGISTER TWO
          AIF   (T'&OP2 EQ 'N').EB TEST OPERAND TWO FOR NUMERIC
          AGO   .EK                 NO - CONTINUE
.EB       ANOP                     ENTRY POINT
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').EC
          AIF   ('&E' EQ '14' OR '&E' EQ '15').EC
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').EC
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').EC
          AGO   .ED
.EC       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.ED       AIF   ('&EE' EQ '0' OR '&EE' EQ '1' OR '&EE' EQ '13').EE
          AIF   ('&EE' EQ '14' OR '&EE' EQ '15').EE
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').EE
          AIF   ('&EE' EQ 'R13' OR '&EE' EQ 'R14').EE
          AIF   ('&EE' EQ 'R15').EE
          AGO   .EF
.EE       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP2 SPECIFIED'
.EF       AIF   ('&E' EQ '' OR '&EE' EQ '').EG
          AGO   .EH
.EG       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.EH       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E,&EE           ESTABLISH BASE REGISTERS
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
EA&SYSNDX BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER ONE
          L     &EE,EB&SYSNDX      LOAD BASE REGISTER TWO
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,EC&SYSNDX        OBTAIN SAVE AREA ADDRESS
          DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
EB&SYSNDX DC    A(EA&SYSNDX+4094)  SECOND BASE REGISTER ADDRESS
.EI       ANOP
EC&SYSNDX ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
.EJ       ANOP                     ENTRY POINT
          ST    13,4(0,1)          STORE HIGHER SAVE AREA POINTER
          LM    0,1,20(13)         RESTORE REGISTERS 0 AND 1
          L     13,8(0,13)         LOAD SAVE AREA ADDRESS
          MEXIT
.EK       ANOP                     ENTRY POINT
          AIF   ('&EE' EQ 'R0' OR '&EE' EQ 'R1').EB
          AIF   ('&EE' EQ 'R2' OR '&EE' EQ 'R3').EB
          AIF   ('&EE' EQ 'R4' OR '&EE' EQ 'R5').EB
          AIF   ('&EE' EQ 'R6' OR '&EE' EQ 'R7').EB
          AIF   ('&EE' EQ 'R8' OR '&EE' EQ 'R9').EB
          AIF   ('&EE' EQ 'R10' OR '&EE' EQ 'R11').EB
          AIF   ('&EE' EQ 'R12' OR '&EE' EQ 'R13').EB
          AIF   ('&EE' EQ 'R14' OR '&EE' EQ 'R15').EB
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').EL
          AIF   ('&E' EQ '14' OR '&E' EQ '15').EL
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').EL
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').EL
          AGO   .EM
.EL       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.EM       AIF   ('&E' EQ '').EN
          AGO   .EO
.EN       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.EO       ANOP                     ENTRY POINT
          AIF   ('&OP2' EQ 'DYNAMIC').EP TEST FOR A DYNAMIC S.A.
          DS    0H
          USING *,&E               ESTABLISH BASE REGISTER
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABLILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,EC&SYSNDX        OBTAIN SAVE AREA ADDRESS
&OP2      DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
          AGO   .EI                TO FINISH ROUTINE
.EP       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E               ESTABLISH BASE REGISTER
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER
          MNOTE  '         GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#'
          GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#  ACQUIRE A SAVE AREA
          XC    0(74,1),0(1)       CLEAR ACQUIRED SAVE AREA
          ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          MVI   72(1),X'FF'        SET INDICATOR FOR TERME MACRO
          AGO   .EJ                TO FINISH ROUTINE
.*
.*     ROUTINE FOR ONE OPERAND
.*
.FA       ANOP                     ENTRY POINT
&E        SETC  '&OP1'             SET BASE REGISTER
          AIF   (T'&OP1 EQ 'N').GB TEST OPERAND ONE FOR NUMERIC
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1').GB
          AIF   ('&E' EQ 'R2' OR '&E' EQ 'R3').GB
          AIF   ('&E' EQ 'R4' OR '&E' EQ 'R5').GB
          AIF   ('&E' EQ 'R6' OR '&E' EQ 'R7').GB
          AIF   ('&E' EQ 'R8' OR '&E' EQ 'R9').GB
          AIF   ('&E' EQ 'R10' OR '&E' EQ 'R11').GB
          AIF   ('&E' EQ 'R12' OR '&E' EQ 'R13').GB
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').GB
&E        SETC  '12'               SET BASE REGISTER 12
          AIF   ('&OP1' EQ 'DYNAMIC').FD TEST FOR A DYNAMIC S.A.
          DS    0H
          USING *,&E               ESTABLISH BASE REGISTER
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,FA&SYSNDX        OBTAIN SAVE AREA ADDRESS
&OP1      DC    18F'0',H'0'        18 WORD SAVE AREA AND FLAG
FA&SYSNDX ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          AGO   .FE                TO FINISH ROUTINE
.FD       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E               ESTABLISH BASE REGISTER
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER
          MNOTE  '         GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#'
          GETMAIN RU,LV=74,LOC=&LOC,SP=&SPN#  ACQUIRE A SAVE AREA
          XC    0(74,1),0(1)       CLEAR ACQUIRED SAVE AREA
          ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          MVI   72(1),X'FF'        SET INDICATOR FOR TERME MACRO
.FE       ANOP                     ENTRY POINT
          ST    13,4(0,1)          STORE HIGHER SAVE AREA POINTER
          LM    0,1,20(13)         RESTORE REGISTERS 0 AND 1
          L     13,8(0,13)         LOAD SAVE AREA ADDRESS
          MEXIT
.*
.*     ROUTINE FOR AN UNNAMED SAVE AREA AND ONE BASE REGISTER -
.*     DEFAULT BASE REGISTER 12
.*
.GA       ANOP                     ENTRY POINT
&E        SETC  '12'               SET BASE REGISTER 12
.GB       ANOP                     ENTRY POINT
          AIF   ('&E' EQ '0' OR '&E' EQ '1' OR '&E' EQ '13').GC
          AIF   ('&E' EQ '14' OR '&E' EQ '15').GC
          AIF   ('&E' EQ 'R0' OR '&E' EQ 'R1' OR '&E' EQ 'R13').GC
          AIF   ('&E' EQ 'R14' OR '&E' EQ 'R15').GC
          AGO   .GD
.GC       MNOTE 'WARNING - ILLEGAL BASE REGISTER &OP1 SPECIFIED'
.GD       AIF   ('&E' EQ '').GE
          AGO   .GF
.GE       MNOTE 'ERROR - BLANK BASE REGISTER SPECIFIED'
          MEXIT
.GF       ANOP                     ENTRY POINT
          DS    0H
          USING *,&E               ESTABLISH BASE REGISTER
&NAME     BASR  15,0               INSURE PGM BASE AND MODE
          BCTR  15,0                ADDRESSABILITY IN ENTRY
          BCTR  15,0                 POINT REGISTER
          STM   14,12,12(13)       SAVE REGISTERS 14 THROUGH 12
          LR    &E,15              LOAD BASE REGISTER
          CNOP  0,4                WORD ALIGNMENT
          BAS   1,GA&SYSNDX        OBTAIN SAVE AREA ADDRESS
          DC    18F'0',H'0'        18 WORD SAVE AREA AND TERMEH FLAG
GA&SYSNDX ST    1,8(0,13)          STORE LOWER SAVE AREA POINTER
          AGO   .FE                TO FINISH ROUTINE
          MEND
          MACRO
&NAME     TERMEH &OP1
.*
.*    THE PURPOSE OF THIS MACRO IS TO PROVIDE STANDARD OS LINKAGE.
.*  IT WILL RESTORE REGISTERS 2 THROUGH 14, FREE A DYNAMIC SAVE
.*  AREA WITH A 'FREEMAIN' IF IT WAS ACQUIRED, ESTABLISH LINKAGE FOR
.*  A 'XCTL' IF DESIRED, OR RETURN TO A CALLING CSECT OR PROGRAM.
.*  IT SUPPORTS FULL XA/31 BIT ADDRESSING AND MUST BE USED IN
.*  CONJUNCTION WITH THE 'PRIMEH' MACRO USED FOR PROGRAM ENTRY AND
.*  INITIALIZATION.
.*
.*    DATE - JULY 1997 - REWORKED TO PROVIDE XA ADDRESSING SUPPORT.
.*                       MUST BE USED IN CONJUNCTION WITH 'PRIMEH'.
.*                       ASSEMBLER VERSION H REQUIRED.
.*                       SUPPORTS AMODE/RMODE ANY.
.*
.*
          GBLC  &SPN#              VALUE FOR SUBPOOL SET IN 'PRIMEH'
.*
&NAME     L     13,4(0,13)         LOAD HIGHER SAVE AREA ADDRESS
          STM   0,1,20(13)         SAVE REGISTERS 0 AND 1
          L     1,8(0,13)          LOAD SAVE AREA ADDRESS
          CLI   72(1),X'FF'        IS SAVE AREA DYNAMIC?
          BC    7,ZZ&SYSNDX        NO
          LR    2,15               SAVE R15 BEFORE VS2 FREEMAIN
          MNOTE '         FREEMAIN RU,LV=74,A=(1),SP=&SPN#'
          FREEMAIN RU,LV=74,A=(1),SP=&SPN#  FREE THE SAVE AREA
          LR    15,2               RESTORE R15 AFTER VS2 FREEMAIN
ZZ&SYSNDX L     14,12(0,13)        RESTORE REGISTER 14
          LM    0,12,20(13)        RESTORE REGISTERS 0 THROUGH 12
          AIF   ('&OP1' EQ 'XCTL').A TEST FOR A XCTL
          BSM   0,14               RETURN TO CALLING PROGRAM
          MEXIT
.A        ANOP                     ENTRY POINT
          BASR  15,0               LOAD BASE REGISTER 15
          USING *,15               ESTABLISH BASE REGISTER
          MEXIT
          MEND
SLSUX06  TITLE 'IDENTIFY SCRATCH ON INSERT PROCESSING'
**PROLOGUE**********************************************************
*                                                                  *
*  CA-1 AND TMS ARE REGISTERED TRADEMARKS OF COMPUTER ASSOCIATES.  *
*                                                                  *
*  SLSUX06  - HSC INSERT/DELETE USER EXIT                          *
*                                                                  *
*  FUNCTION:  FLAG VOLUMES AS IN OR OUT OF SILO.                   *
*             FLAG SCRATCH VOLUMES DURING ENTER PROCESSING.        *
*             INFORMATION PASSED TO THE EXIT INCLUDES:             *
*           VOLSER                                                 *
*           FUNCTION (ENTER/DELETE)                                *
*           LOCATION (LSM, PANEL, ROW, COLUMN)                     *
*           DATE/TIME VOLUME INSERTED IN DATABASE                  *
*           DATE/TIME VOLUME LAST SELECTED                         *
*           NUMBER OF TIMES VOLUME SELECTED                        *
*                                                                  *
*  ATTRIBUTES: RE-ENTRANT, REFRESHABLE, AMODE=RMODE=24             *
*  >>--->  NOTE: THIS PROGRAM MUST BE IN 24 BIT ADDRESSING  <---<< *
*  >>--->         MODE IN ORDER TO INVOKE TMS CODE.         <---<< *
*                                                                  *
*  SERIALIZATION REQUIREMENTS:                                     *
*      THE PARAMETER LIST PASSED TO THIS MODULE WILL BE A COPY OF  *
*      EACH DATABASE INSERT OR DELETE TRANSACTION,  PASSED ONE AT  *
*      A TIME, IN THE SEQUENCE THEY WERE CREATED (FIFO).           *
*                                                                  *
*  LINKAGE AND INPUTS  --                                          *
*      STANDARD OS CALLING CONVENTIONS ARE USED.                   *
*      THIS MODULE IS ENTERED IN PROBLEM STATE, USER KEY,          *
*      24-BIT ADDRESSING MODE, NON-APF AUTHORIZED.                 *
*                                                                  *
*      R0      UNDEFINED                                           *
*      R1      POINTS TO THE USER EXIT PARAMETER LIST              *
*              MAPPED BY THE SLSUX06P MACRO.                       *
*      R2-R12  UNDEFINED                                           *
*      R13     REGISTER SAVE AREA.                                 *
*      R14     RETURN ADDRESS.                                     *
*      R15     ENTRY POINT ADDRESS.                                *
*                                                                  *
*  ENTRY POINTS (EXECUTABLE):                                      *
*      SLSUX06  - HSC INSERT/DELETE USER EXIT                      *
*                                                                  *
*           CALLING SEQUENCE:                                      *
*                                                                  *
*                LA   R1,SLSUX06P          USER EXIT PLIST         *
*                L    R15,=V(SLSUX06)      ADDRESS OF USER EXIT.   *
*                SYNCH (R15),              BRANCH TO USER EXIT.    *
*                      RESTORE=YES,        RESTORE REGS ON RETURN  *
*                      KEYADDR=KEY8,       USER KEY 8              *
*                      STATE=PROB,         PROBLEM STATE           *
*                      AMODE=24            AMODE/RMODE=24          *
*                                                                  *
*           PARAMETER DESCRIPTION: SLSUX06P MACRO                  *
*                                                                  *
*  REGISTER CONVENTIONS:                                           *
*      R13 = SAVE AREA POINTER                                     *
*      R12 = PROGRAM BASE ADDRESS                                  *
*      R11 = RESERVED FOR POSSIBLE SECOND BASE ADDRESS             *
*      R10 = MAPS PLIST (SLSUX06P)                                 *
*      R09 = ADDRESS OF MODULE WORKAREA                            *
*      R08 = PRESERVE RETURN CODE ACROSS FREEMAIN                  *
*      R02 = BAL TO COMMON ROUTINES                                *
*                                                                  *
*  EXIT (NORMAL):                                                  *
*      RETURN CODE:                                                *
*           R15 = ZERO                                             *
*                                                                  *
*      REGISTER CONDITION: ALL OTHER REGISTERS AS AT ENTRY.        *
*      R01     POINTS TO THE USER EXIT PARAMETER LIST              *
*      R15     RETURN CODE FROM EXIT PROCESSING
*                                                                  *
*      SPECIAL CONDITIONS:                                         *
*           THIS CODE MUST RUN IN 24 BIT ADDRESSING MODE TO        *
*           INTERFACE WITH TMS FUNCTIONS.                          *
*                                                                  *
*  EXITS (ABNORMAL):                                               *
*      RETURN CODE:                                                *
*           R15 =  UX06INV          INVALID ENTRY TYPE WAS PASSED  *
*           R15 =  UX06NOPR         TERMINATE ALL EXIT CALLS       *
*         ALL OTHER RETURN CODES ARE IGNORED BY CALLER.            *
*                                                                  *
*  EXTERNAL REFERENCES:                                            *
*      GETMAIN  - MVS GETMAIN SERVICES                             *
*      FREEMAIN - MVS FREEMAIN SERVICES                            *
*      TMMOPTMC - CA-1 INITIALIZE THE TMS SVC LIST                 *
*      TMMGETVL - CA-1 GET A RECORD FROM THE TMC                   *
*      PRIMEH   - SYZYGY ENTRY LINKAGE CONVENTIONS                 *
*      TERMEH   - SYZYGY EXIT LINKAGE CONVENTIONS                  *
*      EQUATES  - SYZYGY STANDARD REGISTER EQUATES                 *
*      (THERE IS NO CLOSE FOR THE TMC, IT IS AUTOMATIC)            *
*                                                                  *
*  MESSAGES GENERATED:                                             *
*      WTO      - TMS NOT ACTIVE ERROR MESSAGE                     *
*                                                                  *
*  DATA AREAS:                                                     *
*      SLSUX06P - HSC INSERT/DELETE EXIT PARAMETER LIST            *
*      WORKUX06 - GETMAINED WORK AREA FOR EXIT PROCESSING          *
*                                                                  *
*                                                                  *
*      TO ACTIVATE THE EXIT,  THE HSC MUST BE RE-CYCLED.  THE      *
*      SERVER TASK USED TO INVOKE THIS CODE CONTAINS AN ESTAE      *
*      TO PROTECT THE HSC FROM USER EXIT ABENDS.  IF AN ABEND      *
*      IS DETECTED IN THE EXIT, IT WILL BE DISABLED.               *
*                                                                  *
*      THE CODE WILL RUN ASYNCRONOUSLY AND  NO  HSC RESOURCES      *
*      ARE HELD THAT DEPEND ON THIS CODE. THEREFORE, THERE IS      *
*      NO RESTRICTION PLACED ON THE CODE IN THIS MODULE.  ANY      *
*      MVS SERVICE MAY BE USED, I.E. DYNAMIC ALLOCATION, I/O,      *
*      SVCS, WTO/WTOR, ETC., WITHOUT AFFECTING HSC OPERATION.      *
*      ANY VOLUME INSERTS OR DELETES THAT OCCUR WHILE WAITING      *
*      FOR MVS SERVICES OR WTOR RESPONSES WILL BE QUEUED  AND      *
*      PROCESSED IN THE SEQUENCE RECEIVED.                         *
*                                                                  *
*  ATTRIBUTES  --                                                  *
*      1.  PROBLEM STATE, USER KEY                                 *
*      2.  AMODE-RMODE=24                                          *
*      3.  NON-APF AUTHORIZED                                      *
*                                                                  *
*  CHANGE HISTORY:                                                 *
*      03/04/99-SYZYGY BRIAN WESTERMAN MAJOR REWRITE OF SAMPLE EXIT*
*              -EXIT NOW SUPPORTS CA-1 V5.X                        *
*                                                                  *
**ENDPROLOGUE*******************************************************
         EJECT
         ENTRY SLSUX06
SLSUX06  CSECT
*
*------------------------------------------------------------------*
*  >>---> NOTE: THIS PROGRAM MUST RUN IN 24 BIT ADDRESSING         *
*               MODE IN ORDER TO INVOKE TMS CODE.                  *
*------------------------------------------------------------------*
*
SLSUX06  AMODE 24                 *** THE USER SHOULD NOT CHANGE ***
SLSUX06  RMODE 24                 *** THE AMODE/RMODE VALUES.    ***
*
*  ESTABLISH CSECT ADDRESSABILITY.
*  IF NEEDED, R11 HAS BEEN RESERVED FOR A SECOND BASE REGISTER.
*
         EQUATES
         PRIMEH R12,DYNAMIC        ESTABLISH BASE & MAKE REENTRANT
         B     UX06005
*
*  MODULE IDENTIFICATION.
*    NAME, ASSEMBLY DATE AND TIME, OTHER INFO.
*
         DC    CL7'SYZYGY-'       EYECATCHER START.
         DC    CL8'SLSUX06'       CSECT NAME.
         DC    CL8'&SYSDATE'      ASSEMBLY DATE.
         DC    CL8'        '      APAR LEVEL.
         DC    CL5'&SYSTIME'      ASSEMBLY TIME.
         DC    0H'0'
*
         EJECT
*
UX06005  DS    0H
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** DETERMINE THE EVENT FOR WHICH WE ARE BEING INVOKED          *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         USING SLSUX06P,R1        TEMPORARY ADDRESSABILITY
         SR    R15,R15            CLEAR RETURN CODE IF WE LEAVE HERE
         CLI   UX06FUNC,UX06PURG  Purge request?
         BE    $EXIT2             BYE - WE DON'T WANT TO MESS WITH IT
*
         DROP  R1                 DROP AND CHANGE TO R10
         LR    R10,R1             SAVE POINTER TO PARAMETER LIST.
         USING SLSUX06P,R10       MAP PLIST
*
*  Acquire a work area to maintain re-entrant status.  This area
*  should be below the line to conform with tms operations.
*  save the area address in the UX06USER field in the paramter list.
*
         LA    R0,WKLEN           GET WORK AREA LENGTH
*
         GETMAIN RU,LV=(0),LOC=(BELOW,ANY)   WORK AREA BELOW 16 MEG.
*
         LA    R9,0(,R1)          COPY PTR TO WORK AREA
         USING WORKUX06,R9
*
*  INITIALIZE THE WORK AREA
*
         LR    R2,R9              SET MVCL 'TO' ADDRESS
         LA    R3,WKLEN           SET MVCL 'TO' LENGTH
         LA    R4,KWRKCNS         SET MVCL 'FROM' ADDRESS
         LA    R5,KWKLEN          SET MVCL 'FROM' PAD & LENGTH
         MVCL  R2,R4              SET UP THE WORK AREA
*
         XC    WKRETCDE,WKRETCDE  CLEAR RETURN CODE SAVE AREA
*
*
*
         CLI   UX06FUNC,UX06DEL   EJECT  REQUEST?
         BE    $DELETE            YES,  GO PROCESS IT.
*
*
*
         EJECT
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** WE HAVE DETERMINED THAT A VOLUME IS BEING INSERTED INTO SILO*
* ** UNCOMMENT NEXT 2 LINES TO PUT INFO MESSAGE OUT TO CONSOLE   *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*        MVC   WKWTOTXT(L'KSADD),KSADD         MOVE IN MESSAGE TEXT
*        BAL   R2,UX06MSG                      Write out OUR Message
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** OPEN THE CA-1 TMC CATALOG                                   *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TMMOPTMC NOTACT=ABEND001,MF=E      OPEN TMC
*
         LA    R7,WKTMCREC        POINT TO TMC RECORD
         USING TMREC,R7           MAP TMC RECORD
         MVC   TMVOLSER,UX06VOL   SAVE VOLSER
         MVC   VOLHOLD,UX06VOL    SAVE VOLSER (POSSIBLE SCRATCH TAPE)
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** GET THE VOLSER RECORD BY VOLSER                             *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TMMGETVL TMVOLSER,TMREC,ABEND002,ENQ=YES
*
         MVC   TMVENDOR(8),=CL8'IN SILO '       SAY CART IN SILO.
         MVI   TMROBTY,X'02'  01=IBM, 02=STK   FLAG CART IN STK SILO.
         MVI   TMROBID,X'01'                   FLAG IN FIRST SILO.
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** PUT THE VOLUME RECORD BACK INTO THE TMC                     *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TMMPUTVL TMREC,ABEND002,DEQ=YES         Update TMC
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** END OF TMC UPDATE PROCESS, NOW TELL HSC IT'S OKAY TO USE    *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TM    TMFLAG1,TMDELET    IS TAPE IN DELETE STATUS ?
         BO    $EXIT              BYE - DON'T FLAG TO HSC
         TM    TMFLAG1,TMSCRTCH   IS IT A SCRATCH TAPE?
         BNO   $EXIT              BYE - DON'T FLAG TO HSC
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** IF THIS IS A SCRATCH TAPE, THEN MARK IT USABLE AS SUCH NOW  *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         LR    R10,R1
         USING SLX,R1             ESTABLISH ADDRESSABILITY
*
         LOAD  EP=SLSXCAL
         ST    R0,WSCALADR        SAVE ROUTINE ADDRESS
         LA    R5,5               GIVE IT 5 TRIES TO GET THE VOLUME
*
CHKVOL   DS    0H
*
* The STIMER is here because the tape may still be selected because
* the report has the tape in its arm.  Try to update the record five
* times.
*
         STIMER WAIT,BINTVL=WAIT  WAIT FOR AWHILE
*
         SLSXREQ SCRATCH,VOLSER=VOLHOLD,OPTION=SYNCH,                  X
               XCALADR=WSCALADR,MF=(E,WSLSXREQ)
*
         ST    R15,RCODE                      Save Return Code
*
         LTR   R15,R15            IS HSC TERMINATING? (no zero R15)
         BNZ   HSCTERM            BYE  - GET OUT OF HERE
*
         CLI   SLXCMDRC,SLXROK    DID WE GET THE VOLUME?
         BE    HSCDOWN            YEP, Marked as scratch, get out.
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** FOLLOWING CODE IS FOR DEBUGGING PURPOSES, NOT PRODUCTION    *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
*        MVC   WKWTOTXT(L'KSWAIT),KSWAIT       MOVE IN MESSAGE TEXT
*        MVC   WKWTOTXT+11(6),VOLHOLD          VOLSER TO MESSAGE
*
*        BAL   R2,UX06MSG                      Issue Retying Message
*
*        BAL   R2,UX06ERR                      Format Return Codes
*        BAL   R2,UX06MSG                      Send return codes
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** END OF DEBUGGING CODE                                       *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         BCT   R5,CHKVOL          GO TRY AGAIN
*
HSCTERM  DS    0H
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** WE TRIED 5 TIMES AND DIDN'T GET THE VOLUME                  *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         MVC   WKWTOTXT(L'KSLSNS),KSLSNS      MOVE IN MESSAGE TEXT
         MVC   WKWTOTXT+7(6),VOLHOLD          VOLSER TO MESSAGE
         BAL   R2,UX06MSG                     GO ISSUE MESSAGE
*
         BAL   R2,UX06ERR                      Format Error Message
         BAL   R2,UX06MSG                      Issue Error Message
*
         B     HSCDOWN            LET 'EM KNOW IT DID'NT UPDATE
*
HSCDOWN  DS    0H
*
         DELETE EP=SLSXCAL
         B     $EXIT
*
         EJECT
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** VOLUME BEING EJECTED FROM THE SILO                          *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
$DELETE  DS    0H
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** UNCOMMENT THE FOLLOWING TWO LINES TO SEND MSG TO CONSOLE    *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*        MVC   WKWTOTXT(L'KSDEL),KSDEL         MOVE IN MESSAGE TEXT
*        BAL   R2,UX06MSG                      Write out OUR Message
*
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** OPEN THE TMC                                                *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TMMOPTMC NOTACT=ABEND001,MF=E      OPEN TMC
*
         LA    R7,WKTMCREC        POINT TO TMC RECORD
         USING TMREC,R7           MAP TMC RECORD
         MVC   TMVOLSER,UX06VOL   SAVE VOLSER
         MVC   VOLHOLD,UX06VOL    Save it in our DSECT
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** GET THE VOLUME RECORD FROM THE TMC                          *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TMMGETVL TMVOLSER,TMREC,ABEND002,ENQ=YES
*
         MVC   TMVENDOR(8),=CL8'OUT SILO'      SET OUR FLAG
         MVI   TMROBTY,X'00'                   FLAG CART OUT OF SILO.
         MVI   TMROBID,X'00'                   FLAG OUT OF SILO.
*
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
* ** UPDATE THE TMC VOLUME RECORD                                *
* ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** * ** *
*
         TMMPUTVL TMREC,ABEND002,DEQ=YES         Update TMC
*
         B     $EXIT                             DONE
*
         EJECT
* - - - -
         TITLE 'SLSUX06 - TERMINATION PROCESSING'
*
*  TERMINATION EVENT INVOCATION:
*     - RESTORE ORIGINAL REGISTER SAVE AREA PTR.
*     - RETURN WILL BE MADE TO THE ADDRESS IN R14 UPON ENTRY.
*     - R15 WILL CONTAIN AN ALLOWABLE RETURN CODE.
*
*
*  STANDARD EXIT LINKAGE.  PICK UP RETURN CODE FROM WORK AREA.
*
$EXIT    DS    0H
         LA    R2,WKLEN           LENGTH OF WORKAREA FOR FREEMAIN
         LR    R0,R2              SETUP FOR FREEMAIN
         LR    R1,R9              POINT TO WORK AREA
         L     R8,WKRETCDE        SAVE RETURN CODE FOR AFTER FREEMAIN
*
         FREEMAIN R,LV=(0),A=(1)  FREE THE WORK AREA
*
         LR    R15,R8             PICK UP RETURN CODE
         LR    R1,R10             RETURN PLIST ADDRESS TO CALLER
$EXIT2   DS    0H
         TERMEH
*
         EJECT
*
*     ***********  OUT OF LINE ROUTINES AND EXCEPTION PROCESSING ******
*
*    THIS IS TO ISSUE MSG TO INDICATE SCRATCH UTILITY MUST BE RUN
*    TO UPDATE HSC TO PROPERLY INDICATE SCRATCH VOLUMES WHICH COULD
*    HAVE BEEN ENTERED INTO ACS WHILE TMS WAS DOWN.
*
ABEND001 DS    0H
         MVC   WKWTOTXT(L'KTMSNA),KTMSNA      MOVE IN MESSAGE TEXT
         BAL   R2,UX06MSG                     GO ISSUE MESSAGE
         B     $EXIT              FREE UP RESOURCES AND TERMINATE
*
*    Have a Tape not in the TMC
*
ABEND002 DS    0H
         MVC   WKWTOTXT(L'KTMSNA),KTMNON      MOVE IN MESSAGE TEXT
         MVC   WKWTOTXT(6),VOLHOLD            Move in VOL/SER
         BAL   R2,UX06MSG                     GO ISSUE MESSAGE
         B     $EXIT              FREE UP RESOURCES AND TERMINATE
*
*     COMMON ROUTINES FOR SLSUX06
*
UX06MSG  DS    0H
         ST    R1,R1SAVE
         WTO   MF=(E,WKWTO)
         L     R1,R1SAVE
         BR    R2
*
*     COMMON ROUTINES FOR SLSUX06
UX06ERR  DS    0H
         MVC   WKWTOTXT(L'KSRETURN),KSRETURN   MOVE IN MESSAGE TEXT
*
         MVC   LOOKHERE,=C'PACK#1'
         MVC   PACKIN(5),=X'000000000F'        Init it.
         MVC   PACKIN(4),RCODE                 R15
         UNPK  PACKOUT,PACKIN                 Unpack it
         TR    PACKOUT,TRTAB                  Make it displayable?>
         MVC   WKWTOTXT+4(8),PACKOUT          Move Return code
*
         MVC   LOOKHERE,=C'PACK#2'
         MVC   PACKIN(5),=X'000000000F'        Init it.
         MVC   PACKIN+3(1),SLXCMDRC            Move Return Code
         UNPK  PACKOUT,PACKIN                  Unpack it
         TR    PACKOUT(8),TRTAB                Make it displayable?
         MVC   WKWTOTXT+18(2),PACKOUT+6        Move Return code
*
         MVC   LOOKHERE,=C'PACK#3'
         MVC   PACKIN(5),=X'000000000F'        Init it.
         MVC   PACKIN(4),SLXSRC                Move Return Field
         UNPK  PACKOUT,PACKIN                  Unpack it
         TR    PACKOUT,TRTAB                   Make it displayable?
         MVC   WKWTOTXT+27(8),PACKOUT          Move Return Field
*
         BR    R2
*
         DROP  ,                  DROP ALL MAPPING
*
         EJECT
*
         TITLE 'SLSUX06 - MISCELLANEOUS CONSTANTS AND EQUATES'
         LTORG
*
*                             1         2         3         4
*                   01234567890123456789012345678901234567890
KSADD    DC    CL41'VOLUME BEING INSERTED INTO SILO          '
KSDEL    DC    CL41'VOLUME BEING EJECTED FROM SILO           '
KTMSNA   DC    CL41'CA-1 Not Active, need to run batch update'
KTMNON   DC    CL41'XXXXXX not a CA-1 Controlled Tape        '
KSLSNS   DC    CL41'VOLUME XXXXXX Scratch Failed!            '
KSWAIT   DC    CL41'Didn''t Get xxxxxx from HSC - retrying    '
KSRETURN DC    CL41'R15=xxxxxxxx  ERR=XX  CODE=xxxxxxxx      '
WAIT     DS    0D                  ALIGN VALUE
         DC    X'000001F4'         WAIT 5 SECONDS
*
OUTTRTB1 EQU   *-C'0'
         DC    C'0123456789ABCDEF'
TRTAB    DC    240X'00',C'0123456789ABCDEF'
*
**********************************************************************
*                                                                    *
*   IF YOU MODIFY ANYTHING BETWEEN THE LABELS 'KWRKCNS' AND 'KWKLEN' *
*   YOU MUST INSURE THAT IT WILL PROPERLY MAP INTO 'WORKUX06' DSECT. *
*   THIS CODE WILL SELF DESTRUCT IF MAPPED INCORECTLY!               *
*                                                                    *
**********************************************************************
*
         DS    0D        ALIGN WORKING STORAGE CONSTANTS
KWRKCNS  EQU   *
KWKID    DC    CL8'WORKUX06'      WORK AREA BLOCK ID
*
KWTO     WTO   'SLSUX06 - .........................................',  X
               ROUTCDE=(2,5),DESC=4,MF=L
*
KTMCEYE  DC    CL8'TMRECORD'
KWKLEN   EQU   *-KWRKCNS
*
         EJECT
*
         TITLE 'SLSUX06 - LOCAL WORK AREA'
*
WORKUX06 DSECT
WKID     DS    CL8                BLOCK ID EYEBALL
*
*
WKWTO    WTO   'SLSUX06 - .........................................',  X
               ROUTCDE=(2,5),DESC=4,MF=L
WKWTOTXT EQU   WKWTO+14           WHERE TO MOVE MESSAGE TEXT
*
WKTMCEYE DS    CL8                TMRECORD EYEBALL
WKTMCREC DS    CL340              TMC RECORD     5.0
*
*
         TMMOPTMC MF=L
*
WSCALADR DC    F'0'               SLSXREQ ROUTINE ADDRESS
WKRETCDE DC    F'0'               RETURN CODE SAVE AREA
*
LOOKHERE DS    CL8
R1SAVE   DS    F
RCODE    DS    F
PACKIN   DS    CL5
PACKOUT  DS    CL9
VOLHOLD  DS    CL6                Hold the TMS Volume Here
*
WSLSXREQ SLSXREQ MF=L             LIST FORM OF MACRO
         DC    0D'0'              DOUBLE WORD ALLIGN
WKLEN    EQU   *-WORKUX06         LENGTH OF WORK AREA
*
         EJECT
*
         TITLE 'SLSUX06 - USER EXIT PARAMETER LIST'
         SLSUX06P ,
*
         EJECT
*
         TITLE 'SLSUX06 - TMS RECORD LAYOUT'
TMREC    DSECT ,
         TMMTMREC DSECT=ALL
*
         EJECT
*
         TITLE 'SLSUX06 - SLSXREQ HSC SLSX RESPONSE MAPPING MACRO'
         SLSXREQM ,
*
         END   SLSUX06
//L.SYSLMOD DD DISP=SHR,DSN=OEMPM.HSC.V2R0M1.SLSLINK
//L.SYSIN DD *
 ENTRY SLSUX06
 MODE AMODE(24),RMODE(24)
 NAME SLSUX06(R)
//
