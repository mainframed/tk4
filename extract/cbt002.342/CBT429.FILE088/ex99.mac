*===================================================================CCI
*                                                                   CCI
*     THIS MODULE IS THE INSTALLATION EXIT FOR DYNAMIC              CCI
*     ALLOCATION FOR DATASET ACCESS LEVEL VALIDITY CHECKING.        CCI
*                                                                   CCI
*     THE VOLUME ASSIGNMENT FEATURE OF PCF HAS BEEN REPLACED        CCI
*     WITH PRC CODE TO OBTAIN THE DEFAULT DYNAMIC ALLOCATION        CCI
*     VOLUME FROM THE USER PROFILE TABLE OR COMPUTE A VOLSER        CCI
*     OF TSO'N' WHERE 'N' COMES FROM THE LOW ORDER 4 BITS OF        CCI
*     PSCBATR2+1.  THIS FEATURE PROVIDES THE ABILITY TO MOUNT       CCI
*     TSO PACKS ON ANY DRIVES WITH A MOUNT ATTRIBUTE OF PRIVATE.    CCI
*                                                                   CCI
*     IT HAS BEEN MODIFIED BY PRC-CCI TO RUN EVEN IF THE TSO        CCI
*     USER IS RUNNING A NON-PCF TMP.  OTHER MODIFICATIONS           CCI
*     ARE DESCRIBED IN THE CODE AT LABEL 'AUTHOK'.                  CCI
*                                                                   CCI
*===================================================================CCI
         SPACE 1
IEFDB401 PCFSAVE WORK=NO,TITLE=DYNAMIC_ALLOCATION_INSTALLATION_EXIT
         LR    R2,R1          SAVE PARM REG
         L     R1,4(R2)       GET ADDR OF WORKAREA ADDR
         L     R1,0(R1)       GET ADDR OF WORKAREA
         LR    R8,R1          LOAD WORKAREA BASE REGISTER           CCI
         USING WORKAREA,R8    USE IT                                CCI
         LA    R1,20(R1)      REGISTER SAVEAREA STARTS AT           CCI
*                             WORKAREA+20                           CCI
         ST    R13,4(R1)      SET SAVE LINKAGE
         ST    R1,8(R13)
         LR    R13,R1
*
*     LOCATE TCB AND CHECK FOR TSO WITH PCF
*
         L     R1,16          GET CVT PTR
         L     R1,0(R1)       TCB DOUBLEWORD ADDR
         L     R1,4(R1)       CURRENT TCB
         L     R5,X'B4'(R1)   GET JSCB PTR             TCBJSCB
         ICM   R10,15,X'108'(R5)  GET PSCB PTR FOR TSO JSCBPSCB
         USING PSCB,R10
         BZ    EXITL          IF ZERO, NOT TSO USER
         MODESET EXTKEY=ZERO   NEED KEY ZERO FOR FETCH PROTECT      CCI
         MVI   PCFIND,X'00'   INIT LOGIC SW TO PCF=YES              CCI
         L     R1,124(R1)     GET JSTCB PTR
         LA    R15,36(R1)     POINT TO LLS PTR
MODLP    ICM   R15,15,0(R15)  POINT TO LOAD LIST ELE
         BNP   NOPCF          EXIT IF END OF LIST                   CCI
         L     R14,4(R15)     GET CDE PTR
         CLC   8(8,R14),=C'PCFTBLS ' IS PCF IN SYSTEM
         BNE   MODLP          LOOP UNTIL FOUND
         L     R1,112(R1)     GET FSA PTR
         L     R11,24(R1)     GET TMPWA PTR FROM REG 1
         USING TMPWRKA1,R11
         L     R4,CPPLPTR     GET CPPL FROM TMPWA
         USING CPPL,R4
         PCFTEST CPPLECT,R4,,PCFTSO  CHECK FOR PCF
*
NOPCF    MVI   PCFIND,X'FF'   SET LOGIC SW FOR PCF=NO               CCI
         B     PCFTSO         ....AND CONTINUE                      CCI
*
EXITL    SR    R15,R15        GOOD REQUEST
EXIT     MODESET EXTKEY=SCHED   RETURN TO SCHED KEY
         L     R13,4(R13)     GET PREV REG 13
         L     R14,12(R13)    GET REG 14
         LM    R0,R12,20(R13) RESTORE REGS
         BR    R14            RETURN
*
*     CHECK PARAMETER LIST FOR ALLOCATION BY DSNAME AND LOCATE
*     NECESSARY TEXT UNITS
*
PCFTSO   L     R3,0(R2)       POINT TO PARM BLOCK
         USING S99RB,R3
         CLI   S99VERB,S99VRBAL  CHECK FOR ALLOCATION REQUEST
         BNE   EXITL          NO,EXIT
         L     R6,S99TXTPP    GET ADDR OF TXT UNIT PTRS
         USING S99TUPL,R6
         XC    DSNA(ENDWORK-DSNA),DSNA  CLEAR UNIT SAVE AREA
LSTLOOP  ICM   R7,7,S99TUPL+1  GET A TEXT UNIT ADDRESS
         BZ    ETXTCK         SKIP NULL ENTRIES
         USING S99TUNIT,R7
         CLI   S99TUKEY+1,DALSSREQ  IS THIS SUBSYSTEM REQ
         BE    EXITL          YES, ASSUME OK
         CLI   S99TUKEY+1,DALDSNAM  IS THIS DSNAME KEY
         BNE   NODSN          NO
         ST    R7,DSNA        SAVE UNIT ADDR
NODSN    CLI   S99TUKEY+1,DALSTATS  IS THIS STATUS KEY
         BNE   NOSTAT           NO
         MVC   STAT,S99TUPAR  SAVE STATUS PARM
NOSTAT   CLI   S99TUKEY+1,DALNDISP  IS THIS NORMAL DISP
         BNE   NONDSP         NO
         MVC   NRMT,S99TUPAR  SAVE NORMAL DISP PARM
NONDSP   CLI   S99TUKEY+1,DALCDISP  IS THIS CONDITIONAL DISP
         BNE   NOCDSP         NO
         MVC   CNDT,S99TUPAR  SAVE CONDITIONAL DISP PARM
NOCDSP   CLI   S99TUKEY+1,DALVLSER  IS THIS A VOL KEY
         BNE   CKU1           NO                                    CCI
         ST    R7,VOLT        SAVE ADDR OF KEY ADDRESS
CKU1     CLI   S99TUKEY+1,DALUNIT   IS THIS UNIT KEY ?              CCI
         BNE   ETXTCK         NO                                    CCI
         ST    R7,TOUNIT      SAVE 'UNIT' TXT UNIT ADDR             CCI
ETXTCK   TM    S99TUPL,X'80'  LAST TEXT UNIT
         BO    ENDTXT         IF NEGATIVE, YES
         LA    R6,4(R6)       GET NEXT TEXT PTR
         B     LSTLOOP        LOOP
*
*     BEGIN DSNAME VALIDATION
*
ENDTXT   ST    R6,TUEND       SAVE ADDR OF LAST TEXT UNIT
         CLI   PCFIND,X'FF'   DOES SW SAY PCF=NO ??                 CCI
         BO    AUTHOK         YES - NO PCF PROCESSING               CCI
         ICM   R7,15,DSNA     GET DSNAME UNIT ADDR
         BZ    AUTHOK         NONE, ASSUME TEMP                     CCI
         CLI   S99TULNG+1,0   PRESENT, CK LENGTH ZERO DSNAME
         BE    AUTHOK         ASSUME TEMP                           CCI
         CLI   S99TUPAR,C'&&' IS DSNAME TEMPORARY
         BE    AUTHOK         YES, NO AUTH CHECK OR VOLUME CHECK    CCI
         CLI   S99TUPAR,C' '  DSNAME BLANK
         BE    AUTHOK         YES, ASSUME TEMP                      CCI
         CLC   S99TULNG(10),NULLF  IS DSNAME NULLFILE
         BE    EXITL          YES, EXIT
         IC    R1,PSCBATR2    GET FIRST USERDATA BYTE
         SLL   R1,28          CLEAR COMMAND AUTH BITS
         SRA   R1,28          REPOSITION AND CK ZERO
         BZ    AUTHOK         IF ZERO, CHK NO FURTHER
         STC   R1,CODE        SAVE CODE IN WORKAREA
         CLC   PSCBUSER+7(1),S99TULNG+1  IS DSN < USERID
         BH    NOUSPFX        YES
         ICM   R1,1,PSCBUSER+7  GET USERID LENGTH
         BZ    NOUSPFX        IF BACKGROUND, MOVE ON
         BCTR  R1,0           REDUCE FOR EXECUTE
         EX    R1,USRIDC      COMPARE DSNAME TO USERID
         BNE   NOUSPFX        NO MATCH
         LA    R1,S99TUPAR(R1)  INCREMENT PAST USERID
         CLI   1(R1),C'.'     CHECK FOR PERIOD
         BE    USRID          ASSUME USERID PREFIXED
*
*     VALIDATE AGAINST SYSTEM AND RESTRICTED NAME TABLES
*
NOUSPFX  L     R15,PCFSYSP    POINT TO SYSTEM PREFIX TABLE
         BAL   R14,CKPFX      CHECK DSNAME AGAINST ENTRIES
         B     NOSYS          IMMEDIATE RETURN MEANS NO MATCH
         TM    STAT,X'08'      MATCH FOUND, IS IT SHR ACCESS
         BZ    CKPERM         NO, OLD REQUIRES LEVEL 0
         CLI   CODE,1           IS ACCESS CODE 1
         BH    CKPERM         IF NOT ONE, NOT HIGH ENOUGH
         B     AUTHOK         IF ONE, OK
NOSYS    L     R15,PCFDSNS    POINT TO TABLE OF RESTRICTED NAMES
         BAL   R14,CKPFX      GO CHECK DSNAME
         B     NOSTRCT        NO MATCLIFOUND
         CLI   CODE,2           MATCH, IS USER LEVEL 2
         BNH   AUTHOK         YES, OK
         TM    STAT,X'08'  IS SHR ACCESS REQUESTED
         BZ    CKPERM         NO, USER NOT HIGH ENOUGH
         CLI   CODE,3           IS USER LEVEL 3
         BH    CKPERM         YES, HIGH ENOUGH FOR SHR RESTR
NOSTRCT  CLI   CODE,4           NO, MUST BE LEVEL 4 OR LESS
         BNH   AUTHOK         USER OK FOR GENERAL OS REFERENCE
         TM    STAT,X'08'  IS REFERENCE SHR
         BZ    CKPERM         NO, NOT HIGH ENOUGH LEVEL
         CLI   CODE,5           LEVEL 5 WILL HANDLE SHR REQUESTS
         BH    CKPERM         IF NOT THAT HIGH, ERROR
USRID    CLI   CODE,6           IS USER LEVEL 6 OR LESS
         BNH   AUTHOK         YES, OK FOR USERID PREFIX
*
*     IF DSNAME IS ALREADY ALLOCATED (BY LOGON)
*     ALLOW ACCESS AT THE SAME OR LOWER LEVEL
*
CKPERM   L     R5,X'15C'(R5)  GET ACTIVE JSCB PTR      JSCBACT
         L     R5,X'140'(R5)  GET QDB FOR DSAB CHAIN   JSCDSABQ
         ICM   R5,15,X'0C'(R5)  GET FIRST DSAB PTR     DSQFRSTP
DSELP    BZ    AUTHMESS       ERROR IF END OF DSABS
         USING DSAB,R5
         TM    DSABFLG1,DSABPALC    MUST BE PERMANENTLY ALLOC
         BNO   DSEINC         NO, SKIP TO NEXT
         L     R14,DSABSIOT  GET ADDRESS OF SIOT
         L     R15,X'9C'(R14)  GET ADDRESS OF JFCB     SJFCBPTR
         LH    R1,S99TULNG    GET DSNAME LENGTH
         BCTR  R1,0           REDUCE FOR EXECUTE
         EX    R1,DSECMP      COMPARE TO DSNAME IN JFCB
         BE    DSCHKD         YES, DOUBLE CHECK
         TM    X'2E'(R14),X'80'  CHECK FOR ALIAS
         BNO   DSEINC         NO, SKIP
         L     R15,X'A0'(R14) GET JFCB EXTENSION
         EX    R1,DSACMP      CHECK ALIAS
         BNE   DSEINC         NO MATCH
DSCHKD   LA    R1,1(R15,R1)   DOUBLE CHECK MATCH
         TM    0(R1),255-C' ' FOR FULL DSN(FLWD BY C' ' OR X'00')
         BNZ   DSEINC         NO, MOVE ON
         TM    NRMT,7         CHECK DISP FOR KEEP
         BNZ   AUTHMESS       NO, ERROR
         TM    CNDT,7         CHK COND DISP FOR KEEP
         BNZ   AUTHMESS       NO, ERROR
         CLI   STAT,4         IS REQUEST FOR NEW
         BE    AUTHMESS       YES, ERROR
         BH    EXITL          IF SHR, OK
         TM    87(R15),8      IS CURRENT ALLOC STATUS SHARED
         BZ    EXITL          NO, ALLOW EXCLUSIVE      JFCFIND2
DSEINC   ICM   R5,15,4(R5)    GET NEXT DSAB PTR
         B     DSELP          LOOP
         DROP  R5
  EJECT
*===================================================================CCI
*                                                                   CCI
*     PRC COMPUTER CENTER - LOCAL MODIFICATIONS                     CCI
*                                                                   CCI
*         1.  IF ALLOCATION IS NOT 'NEW' DATASET, EXIT              CCI
*         2.  IF (NEW,DELETE), THEN NULLIFY ANY VOLSER AND          CCI
*             SET UNIT=SYSDA.                                       CCI
*         3.  IF NORMAL DISP NOT DELETE, SET VOLSER TO              CCI
*             VOLSER (IF IT EXISTS) FOUND IN THE UPT (SET WITH      CCI
*             THE SETVOL COMMAND), OTHERWISE GENERATE THE DEFAULT   CCI
*             VOLUME OF TSO'N' WHERE 'N' IS THE LOW ORDER 4 BITS    CCI
*             OF FIELD PSCBATR2+1.                                  CCI
*                                                                   CCI
*===================================================================CCI
         SPACE 1
AUTHOK   TM    STAT,X'04'     IS REQUEST NEW                        CCI
         BZ    EXITL          NO, GET OUT                           CCI
         TM    NRMT,X'04'    NORMAL DISP = DELETE ?                 CCI
         BZ    NODELE        NO                                     CCI
*                                                                   CCI
*     DATASET IS (NEW,DELETE) - SEND IT TO SYSDA                    CCI
*                                                                   CCI
         ICM   R7,15,VOLT    GET VOLSER TEXT UNIT                   CCI
         BZ    NOVOL         DOESN'T EXIST - FINE                   CCI
         MVI   S99TUKEY+1,X'00'    NULLIFY VOLSER TEXT UNIT         CCI
NOVOL    ICM   R7,15,TOUNIT  GET 'UNIT' TEXT UNIT                   CCI
         BZ    NEEDU         NOT THERE - FINE                       CCI
         MVI   S99TUKEY+1,X'00'    NULLIFY 'UNIT' TEXT UNIT         CCI
NEEDU    MVC   UTEXT(14),USYSDA    MOVE UNIT=SYSDA TXT UNIT         CCI
         LA    R7,UTEXT      POINT TO 'UNIT' TEXT UNIT              CCI
         BAL   R15,EXTUN     HANG ON END OF TU PTR LIST             CCI
         B     EXITL         FINI - RETURN                          CCI
*                                                                   CCI
*    DATASET NEW BUT NOT DELETE - CONTROL WHERE IT GOES             CCI
*                                                                   CCI
NODELE   EQU   *                                                    CCI
         ICM   R7,15,VOLT    GET ADDR OF 'VOLSER' TEXT UNIT         CCI
         BNZ   EXITL         ITS THERE - DON'T SET DEFAULT          CCI
         MVC   VOLU(12),UVOLSER   SKELETON 'VOLSER' TXT UNIT        CCI
         L     R7,PSCBUPT    POINT TO UPT FOR DEFAULT     VOL ?     CCI
         CLI   0(R7),X'00'  USER DEFAULT ??                         CCI
         BNE   PRIVATU       YES, GO USE IT FOR THIS REQUEST        CCI
         TM    PSCBATR2+1,X'0F'      IS THERE AN DEFAULT ??         CCI
         BZ    NODEF                 NO, INFORM AND QUIT            CCI
         SR    R7,R7         CLEAR WORKREG                          CCI
         IC    R7,PSCBATR2+1 GET DEFAULT TSO PACK NO.               CCI
         CVD   R7,CVTD       MAKE IT                                CCI
         UNPK  CVTD(1),CVTD+7(1)  SOMEWHAT
         OI    CVTD,X'F0'    .....USEABLE                           CCI
         MVC   VOLU+6(6),=CL6'TSO'    SET TSO PACK DEFAULT          CCI
         MVC   VOLU+9(1),CVTD         ADD UNIQUE ID                 CCI
         B     SETU          STRING IT ON                           CCI
PRIVATU  MVC   VOLU+6(6),0(R7)        SET USERS DEFAULT ALLOC VOL   CCI
         SPACE 1                                                    CCI
SETU     EQU   *                                                    CCI
         LA    R7,VOLU       POINT TO DEFAULT VOLUME TXT UNIT       CCI
         ST    R7,VOLT       RECORD THE FACT WE NOW HAVE ONE        CCI
         BAL   R15,EXTUN     ADD TXT UNIT POINTER TO END            CCI
         B     EXITL         ALL DONE - EXIT                        CCI
*
*     THE FOLLOWING CODE IS USED TO ADD A TEXT UNIT POINTER
*     TO THE END OF THE TEXT UNIT POINTER LIST AND RESET THE
*     NEW 'END OF LIST'.
*
EXTUN    L     R6,TUEND      GET END OF TEXT UNIT LIST PTR
         MVI   S99TUPL,0     CLEAR LIST END INDIC
         LA    R6,4(R6)      ADD NEW UNIT
         MVI   S99TUPL,X'80' SET NEW LIST END
         ST    R6,TUEND      SAVE NEW END OF TXT U PTRS             CCI
         STCM  R7,7,S99TUPL+1   CHAIN IN NEW TEXT UNIT              CCI
         BR    R15           RETURN                                 CCI
*                                                                   CCI
*     USER DOES NOT HAVE A DEFAULT TSO ALLOCATION VOLUME.           CCI
*     INFORM HIM OF THIS AND QUIT.                                  CCI
*                                                                   CCI
NODEF    EQU   *                                                    CCI
     TPUT CCIVMSG,L'CCIVMSG                                         CCI
         LA    R15,4                                                CCI
         B     EXIT          STOP ALLOCATION                        CCI
         EJECT
*
*     THIS CLOSED ROUTINE CHECKS A PCF TABLE LIST
*     OF SYSTEM OR RESTRICTED DATASET PREFIXES AGAINST DSNAME
*          MATCH FOUND - RETURN ON REG 14+4
*          NO MATCH - RETURN REG 14
*
         USING S99TUNIT,R7
CKPFX    ICM   R1,3,0(R15)        GET NUMBER OF ENTRIES
         BZ    CKSYSOK            IF NONE, EXIT
         LA    R1,41*2            GET LENGTH OF INDEX TABLE
         CLI   S99TUPAR,C'A'      CHECK DSNAME FIRST CHAR
         BL    CKBEGN             IF NATIONAL CHAR, START BEGIN
         CLI   S99TUPAR,C'Z'      IS DSNAME VALID
         BH    CKSYSOK            NO, EXIT
         IC    R1,S99TUPAR        GET FIRST CHARACTER
         SH    R1,=H'193'         BACK UP TO MATCH TABLE
         SLL   R1,1               DOUBLE FOR HALFWORD ENTRIES
         AR    R1,R15             MOVE TO INDEX ENTRY
         LH    R1,2(R1)           GET INDEX VALUE
         LTR   R1,R1              ANY ENTRIES FOR THIS CHAR
         BZ    CKSYSOK            NONE, EXIT
CKBEGN   AR    R15,R1             MOVE TO FIRST ENTRY WITH CHAR
         SR    R1,R1              CLEAR REG
CKLSP    IC    R1,2(R15)          GET LENGTH OF ENTRY
         CH    R1,S99TULNG        COMPARE WITH DSNAME LENGTH
         BCTR  R1,0               REDUCE FOR EXECUTE
         BH    CKINC1             IF PREFIX GREATER, SKIP
         EX    R1,DSNCMP          CHECK FOR MATCH
         BE    CKSYSER            FOUND ONE
         BL    CKSYSOK            PAST END OF TABLE
CKINC    LA    R15,2(R1,R15)      INCREMENT PAST ENTRY
         CLI   3(R15),C'/'        IS NEXT ENTRY EXCEPTION
         BNE   CKLSP              NO, LOOP TO NEXT ENTRY
         IC    R1,2(R15)          GET LENGTH OF EXCEPTION
         BCTR  R1,0           ADJUST LENGTH                      PCF032
         B     CKINC              GO SKIP ENTRY
CKINC1   CLC   S99TUPAR(1),3(R15) PAST POSSIBLE ENTRY
         BNL   CKINC              NO, MOVE ON
CKSYSOK  BR    R14                RETURN NO MATCH
CKSYSER  BCTR  R15,0              DECR TO FORCE EQ EXCPT CMP
         CLC   PSCBUSER+7(1),3(R15)  PREFIX LONGER THAN USERID
         BL    CKEXCPT            YES, CHECK EXCEPTIONS
         EX    R1,USDCMP          COMPARE PREFIX TO USERID
         BNE   CKEXCPT            NO, MOVE TO EXCEPTIONS
CKNLSP   EX    R1,DSNCMPN         CHECK EXCEPTIONS
         BE    CKSYSOK            MATCH, NOT RESTR
         BL    CKSYSNO            PAS POSSIBLE ENTRY
CKEXCPT  LA    R15,3(R1,R15)      INCREMENT TO NEXT ENTRY
         CLI   3(R15),C'/'        IS IT EXCEPTION
CKSYSNO  BNE   4(R14)             NO, MATCH FOUND
         IC    R1,2(R15)          YES, GET LENGTH
         SH    R1,=H'2'           REDUCE FOR SLASH AND EXEC
         B     CKNLSP             LOOP
*
*     IF ACCESS REQUEST IS UNAUTHORIZED, ISSUE MESSAGE AND EXIT
*
AUTHMESS MVC   MSGA,AUTHMSG          MOVE MSG TO WORKAREA
         LA    R9,MSGA               SET ADDRESSIBILITY
         USING AUTHMSG,R9
         LA    R1,AUTHMSG1           RELOCATE OUTPUT LINE DESC
         ST    R1,AUTHMSG
         LA    R1,AUTHMSGA
         ST    R1,AUTHMSG+8
         LA    R1,AUTHMSGB
         ST    R1,AUTHMSG1+8
         MVN   AUTHMSB2(1),CODE   GET AUTH DIGIT FOR MSG
         MVC   AUTHMSB3(44),S99TUPAR GET UNAUTH DSNAME
         LH    R1,AUTHMSGB      GET LENGTH WITHOUT DSNAME
         AH    R1,S99TULNG         ADD DSNAME LENGTH
         STH   R1,AUTHMSGB      RESORE UPDATED LENGTH
         LA    R1,AUTHMSGB(R1)    POINT TO END OF MSG
         LA    R0,X'80'       SET ROUTCDE=9
         STCM  R0,15,0(R1)    SET ROUTINE AND DESC CODES
         L     R1,IOPLPTR       GET IOPL ADDR
         PUTLINE PARM=PUTL,TERMPUT=EDIT,MF=(E,(1)), *************   ****
               OUTPUT=(AUTHMSG,TERM,MULTLVL,INFOR)
         PCFERR ERREXIT,IKJPUTL,4  IF RET CODE GT 4, ERROR
         OI    AUTHMSGB+2,X'80'  SET MCS FLAGS
         MVC   AUTHMSB1(7),PSCBUSER  GET USERID
         WTO   MF=(E,AUTHMSGB)  LOG ATTEMPT TO SECURITY CONSOLE
         DROP  R9
         XC    PUTL(8),PUTL   CLR STACK LIST                     PCF032
         L     R1,IOPLPTR     GET IOPL                           PCF032
         STACK  PARM=PUTL,DELETE=ALL,MF=(E,(1))                  PCF032
         PCFERR ERREXIT,IKJSTCK  CHECK FOR ERROR                 PCF032
         LA    R15,4           SET INSTALLATION EXIT REJECT
         B     EXIT               EXIT
*
ERREXIT MVC    MSGA(CMDERR2+2-CMDERR),CMDERR  MOVE ERRMSG TO WORK
        LA     R9,MSGA            SET ADDRESSIBILITY
        USING  CMDERR,R9
        MVC    CMDERR1(8),0(R1)   MOVE IN ROUTINE NAME
        UNPK   CMDERR2(3),RCODE+3(2)  ADD ZONES TO HEX RET CODE
        TR     CMDERR2(2),TRANS-240  CORRECT ZONES FOR A-F
        TPUT   (R9),CMDERR2+2-CMDERR  PUT ERR MSG
        DROP   R9
        LA     R15,4              SET BAD PARM RET CODE
        B      EXIT               EXIT
        LTORG  ,
*
*     CONSTANTS, MESSAGES, AND EXECUTED INSTRUCTIONS
*
AUTHMSG  DC    A(AUTHMSG1,1,AUTHMSGA)
AUTHMSG1 DC    A(0,1,AUTHMSGB)
AUTHMSGA DC    Y(L'AUTHMSA1+4,0)
AUTHMSA1 DC    C'PCF002 UNAUTHORIZED FILE ACCESS ATTEMPTED+'
AUTHMSGB DC    Y(AUTHMSB3-AUTHMSGB,0)
AUTHMSB1 DC    C' USERID DATASET ACCESS CODE '
AUTHMSB2 DC    C'0 DISALLOWS REQUESTED ACCESS TO '
AUTHMSB3 EQU   *    PLUSS 44 BYTES FOR DSNAME
CMDERR   DC    C'PCF010 COMMAND SYSTEM ERROR - PCFALOC '
CMDERR1  DC    C'XXXXXXXX ERROR CODE '
CMDERR2  DC    C'XX '
TRANS    DC    C'0123456789ABCDEF'
NULLF    DC    AL2(8),C'NULLFILE'  DUMMY TEXT UNIT
CCIVMSG DC C'NO DEFAULT ALLOCATION VOLUME.  ISSUE ''SETVOL''.'
*                                                                   CCI
USYSDA   DC    X'0015',X'0001',X'0008',CL8'SYSDA   '                CCI
UVOLSER  DC    X'0010',X'0001',X'0006',CL6'      '                  CCI
*                                                                   CCI
USRIDC   CLC   PSCBUSER(*-*),S99TUPAR  COMPARE DSNAME TO USERID
DSECMP   CLC   S99TUPAR(*-*),0(R15)    COMPARE DSNAMES
DSACMP   CLC   S99TUPAR(*-*),60(R15)   COMPARE WITH ALIAS
DSNCMP   CLC   S99TUPAR(*-*),3(R15)    CHK DSN AGAINST LIST ENT
USDCMP   CLC   PSCBUSER(*-*),4(R15)    USERID TO PREFIX
DSNCMPN  CLC   S99TUPAR(*-*),4(R15)    EXCEPTIONS TO DSNAME
         EJECT
*================================================================
*
*     DSECTS FOR WORKAREAS AND PARAMETER LISTS
*
*================================================================
         SPACE 1
WORKAREA DSECT
         DS    5F                 TXT UNIT PTR EXPANSION            CCI
         DS    18F                REGISTER SAVE AREA
TOUNIT   DS    F                  ADDRESS OF 'UNIT' TXT UNIT        CCI
UTEXT    DS    CL14               'UNIT' TXT UNIT                   CCI
TUEND    DS    F                  ADDR OF LAST TEXT UNIT
DSNA     DS    F                  ADDR OF DSNAME TEXT UNIT
VOLT     DS    F                  ADDR OF VOL TEXT UNIT ADDR
STAT     DS    X                  ALLOC STATUS REQUEST
NRMT     DS    X                  REQUESTED DISPOSITION
CNDT     DS    X                  REQUESTED CONDITIONAL DISPOS
CODE     DS    X                  USER DATASET AUTHOR CODE
VOLU     DS    3F                 PCF AUTH VOL TEXT UNIT
CVTD     DS    D                  CONVERT TO DECIMAL WORKAREA
PUTL     DS    3F                 PARAMETER LIST FOR PUTLINE
PCFIND   DS    X                  X'00'=YESPCF / X'FF'=NOPCF        CCI
MSGA     DS    CL(AUTHMSB3+44-AUTHMSG)  MSG WORK AREA
ENDWORK  EQU   *
         PCFCVT
         IKJCPPL
         IKJECT
         IKJTMPWA                                                   */
*        PCFTMPWA
         IKJPSCB
         IEFZB4D0
         IEFZB4D2
         IHADSAB
         END
