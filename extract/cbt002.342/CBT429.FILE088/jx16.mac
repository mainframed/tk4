JX016    TITLE 'BII - EXIT 016 - MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
* MODULE NAME: JX016                                                  *
*                                                                     *
* DESCRIPTIVE NAME: JES2 EXIT 016 - MAX COND CODE/ABEND CODE SUPPORT  *
*                                                                     *
* AUTHOR: BRIAN WESTERMAN                                             *
*         BRIPER INDUSTRIES SYSTEMS CONSULTING                        *
*                                                                     *
*                                                                     *
* DATE WRITTEN: AUGUST 1989                                           *
*                                                                     *
* FMID: HJE2330 (MVS/SP-JES2 2.2.0)                                   *
*                                                                     *
* PURPOSE: THIS EXIT MODIFIES THE $HASP165 MESSAGE BY ADDING EITHER   *
*          THE MAXIMUM CONDITON CODE OF ALL THE STEPS IN A JOB OR     *
*          THE ABEND CODE OF THE JOB.                                 *
*                                                                     *
* ENTRY POINT: EX016                                                  *
*                                                                     *
* REGISTERS ON INPUT:                                                 *
*     R0: 0                                                           *
*     R1: ADDRESS OF 3-WORD PARMETER LIST WITH THE FOLLOWING LAYOUT:  *
*         WORD 1 (+0) ADDRESS OF THE MESSAGE TO BE SEND               *
*         WORD 2 (+4) ADDRESS OF THE $WTO PARAMETER LIST              *
*         WORD 3 (+8) ADDRESS OF THE JCT                              *
*     R2-R10: N/A                                                     *
*     R11: ADDRESS OF THE HCT                                         *
*     R12: N/A                                                        *
*     R13: ADDRESS OF THE OUTPUT PROCESSOR PCE                        *
*     R14: RETURN ADDRESS                                             *
*     R15: ENTRY ADDRESS                                              *
*                                                                     *
* REGISTERS ON RETURN:                                                *
*     R0: N/A                                                         *
*     R1: ADDRESS OF THE 3-WORD PARAMETER LIST                        *
*     R15: A RETURN CODE:                                             *
*          =0, CONTINUE NORMAL EXIT OR JES2 PROCESSING                *
*          =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH NORMAL        *
*              PROCESSING                                             *
*          =8, TELLS JES2 NOT TO ISSUE THE NOTIFY $WTO                *
*                                                                     *
* JES2 MACROS USED:                                                   *
*     $ENTRY, $SAVE, $RETURN, $MODEND                                 *
*                                                                     *
***********************************************************************
         EJECT
         COPY $HASPGBL                 COPY HASP GLOBALS
         EJECT
JX016    $MODULE                                                       C
               $BUFFER,                REQ'D BY JCT                    C
               $CAT,                   REQ'D BY HCT                    C
               $CMB,                   REQ'D TO MAP $WTO PARM LIST     C
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       C
               $HCT,                   REQ'D BY $SAVE, $RETURN, ETC.   C
               $JCT,                   REQ'D TO GET JOBNAME, ETC.      C
               $JQE,                   REQ'D BY HCT                    C
               $MIT,                   REQ'D BY $MODEND, HCT           C
               RPL,                    REQ'D BY $BUFFER                C
               $PADDR,                 REQ'D BY $HCT                   C
               $PCE,                   REQ'D TO GET PROCESSOR INFO     C
               SSOB                    REQ'D FOR IEFSSJT
         TITLE 'BII - EXIT 016 - MAX COND CODE/ABEND CODE SUPPORT'
***********************************************************************
*                                                                     *
*  INITIALIZATION                                                     *
*                                                                     *
***********************************************************************
         SPACE  1
EX016    $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE  2
         $SAVE                          SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         L     R10,8(R1)                LOAD JCT ADDRESS WAS 8(R1) 220
         USING JCT,R10                 NEW USING BHW 220
         SLR   R15,R15                 SET DEFAULT RETURN CODE
         SPACE 3
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THIS IS FIRST MESSAGE INDICATING END OF JOB        *
***********************************************************************
         SPACE 1
         LTR   R0,R0
         BNZ   RETURN
         SPACE 3
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF JOB'S ABEND CODE OR MAXIMUM CONDITION CODE HAS     *
*  BEEN SAVED.  IF NOT, RETURN.                                       *
*                                                                     *
***********************************************************************
         SPACE 1
         CLI   JCTUSER1,X'80'          IS JOB'S ABEND/MAX CC SAVED?
         BNE   RETURN                  NO, RETURN
         CLI   JCTJTFLG,SSJTJFAL    80=FAIL,IS MESSAGE TO BE ALTERED?
         BE    RETURN                  NO, SKIP
         EJECT
***********************************************************************
*                                                                     *
*  PREPARE TO ALTER THE NOTIFY MESSAGE.                               *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R4,4(R1)                GET ADDRESS OF $WTO PARM LIST
         USING CMBWTOPL,R4             ESTABLISH $CMD ADDRESSABILITY
         SLR   R5,R5                   ZERO WORK REGISTER
         IC    R5,CMBML                GET MESSAGE LENGTH
         CH    R5,=H'68'               MSG TOO LONG TO UPDATE IN PLACE?
         BH    RETURN                  YES, RETURN (SHOULDN'T HAPPEN)
         L     R6,0(R1)                GET ADDRESS IF MESSAGE TEXT
         SPACE 3
***********************************************************************
*                                                                     *
*  CHECK TO SEE IF THE JOB ABENDED.  IF IT DID, GET THE ABEND CODE.   *
*                                                                     *
***********************************************************************
         SPACE 1
         TM    JCTJTFLG,SSJTABND       20=ABEND,  DID JOB ABEND?
         BZ    MAXCONDC                NO, GO GET MAXIMUM COND CODE
         SPACE 1
         BCTR  R5,0
         BCTR  R5,0
         AR    R6,R5
         CLI   0(R6),C' '
         BE    NOINCR
         LA    R6,2(R6)
         LA    R5,2(R5)
NOINCR   EQU   *
         L     R2,JCTUSER1             GET ABEND CODE
         LA    R2,0(R2)                CLEAR HIGH ORDER BYTE
         SRL   R2,12                   OBTAIN SYSTEM CODE
         LTR   R2,R2                   WAS IT A SYSTEM CODE ABEND?
         BZ    USRABEND                NO, GO PROCESS USER CODE ABEND
         EJECT
***********************************************************************
*                                                                     *
*  IF THE JOB ABENDED WITH A SYSTEM ABEND CODE, COME HERE TO ALTER    *
*  THE NOTIFY MESSAGE TO INCLUDE THE SYSTEM ABEND CODE.               *
*                                                                     *
***********************************************************************
         SPACE 1
SYSABEND DS    0H
         LA    R5,10(R5)               INCR. MSG LENGTH
         MVC   0(10,R6),=C'SYSTEM XXX' ADD SYSTEM ABEND CODE TO MSG
         SRDL  R2,12                   CONVERT IT TO HEX
         SR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,7(R6)                       "
         SR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,8(R6)                       "
         SR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,9(R6)                       "
         B     STORELEN                GO CHECK NEW MESSAGE LENGTH
         SPACE 3
***********************************************************************
*                                                                     *
*  IF THE JOB ABENDED WITH A USER ABEND CODE, COME HERE TO ALTER THE  *
*  NOTIFY MESSAGE TO INCLUDE THE USER ABEND CODE.                     *
*                                                                     *
***********************************************************************
         SPACE 1
USRABEND DS    0H
         LA    R5,9(R5)                INCR. MSG LENGTH
         MVC   0(9,R6),=C'USER XXXX'   ADD USER ABEND CODE TO MSG
         LH    R2,JCTUSER1+2           GET USER ABEND CODE
         CVD   R2,5(R6)                CONVERT TO DECIMAL
         UNPK  5(4,R6),5(8,R6)         UNPK FOUR LOW DIGITS
         OI    8(R6),X'F0'             SET ZONE
         MVC   9(2,R6),=C'  '          CLEAR TWO  BYTES
         B     STORELEN                GO CONVERT TO DEC/PRINTABLE
         EJECT
***********************************************************************
*                                                                     *
*  IF THE JOB ENDED NORMALLY, COME HERE TO ALTER THE NOTIFY MESSAGE   *
*  TO INCLUDE THE MAXIMUM CONDITION CODE FOR ANY STEP IN THE JOB.     *
*                                                                     *
***********************************************************************
         SPACE 1
MAXCONDC DS    0H
         AR    R6,R5
         MVC   0(20,R6),=C'- MAX COND CODE XXXX'  ADD MAXCC TO MSG
         LA    R5,20(R5)               INCR. MESSAGE LENGTH
         LH    R2,JCTUSER1+2           GET MAX CONDITION CODE
         CVD   R2,16(R6)               CONVERT TO DECIMAL
         UNPK  16(4,R6),16(8,R6)       UNPK FOUR LOW DIGITS
         OI    19(R6),X'F0'            SET ZONE
         MVC   20(2,R6),=C'  '         CLEAR TWO  BYTES
         SPACE 3
***********************************************************************
*                                                                     *
*  STORE NEW MESSAGE LENGTH IN CMB PARM LIST.                         *
*                                                                     *
***********************************************************************
         SPACE 1
STORELEN DS    0H
         STC   R5,CMBML                STORE MSG LEN IN CMB PARM LIST
         SPACE 3
***********************************************************************
*                                                                     *
*  GO BYE-BYE.                                                        *
*                                                                     *
***********************************************************************
         SPACE 1
RETURN   DS    0H
        $RETURN RC=(R15)               RETURN TO CALLER
         EJECT
CONVTABL DC    CL16'0123456789ABCDEF'  CONVERSION TABLE
         LTORG
        $MODEND
         END
