EXIT05UD TITLE 'PRC UNDUMP COMMAND'
***********************************************************************
*                                                                     *
*        ENVIRONMENT:  MVS SP 1.3.4  LEVEL 8310                       *
*                      JES2 FOR SP 1.3.4                              *
*                                                                     *
*        THIS JES2 EXIT PROGRAM PERFORMS ONLY ONE FUNCTION.  IT       *
*        PROCESSES THE PRC ADDED "UNDUMP" COMMAND TO TAKE ALL         *
*        JOBS AND SYSOUT OFF THE DUMP QUEUE AND RESTORE THEM TO       *
*        THE QUEUES FROM WHICH THEY CAME.  THIS SYSTEM OPERATOR       *
*        COMMAND WAS ADDED BECAUSE THERE IS NO OTHER WAY TO RE-       *
*        STORE FROM THE DUMP QUEUE WITHOUT ACTUALLY GOING AHEAD       *
*        WITH THE OFFLOAD/RELOAD PROCEDURE.                           *
*                                                                     *
*        INSTALLATION:                                                *
*            PLANNING RESEARCH CORPORATION                            *
*                                                                     *
*        AUTHOR:                                                      *
*            BRIAN WESTERMAN                                          *
*                                                                     *
*        CODING-STARTED:                                              *
*            MARCH 27, 1987                                           *
*                                                                     *
*        REGISTER-ENTRY-CONVENTIONS:                                  *
*            R0 - R4  = N/A                                           *
*            R5       = A(A(CURRENT OPERAND))                         *
*            R6       = INCRAMENT VALUE OF 4                          *
*            R7       = A(A(LAST OPERAND))                            *
*            R8 - R10 = N/A                                           *
*            R11      = A(HCT)                                        *
*            R12      = N/A                                           *
*            R13      = A(HASPCOMM PCE)                               *
*            R14      = RETURN ADDRESS                                *
*            R15      = ENTRY ADDRESS                                 *
*                                                                     *
*        REGISTER-EXIT-CONVENTIONS:                                   *
*            R0       = MESSAGE LENGTH IF R15 = 16                    *
*            R1 - R14 = RESTORED TO ENTRY VALUE                       *
*            R15      = EXIT RETURN CODE.                             *
*                                                                     *
*        MAINTENANCE HISTORY:                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
         EJECT
EX005UD  $MODULE   SYSP=(NOGEN,GEN,NODATA,NOGEN,NOGEN),                X
               ENVIRON=JES2,                                           X
               TITLE='PRC UNDUMP COMMAND',                             X
               RESPA,                                                  X
               $BUFFER,                HASP BUFFER                     X
               $CAT,                   CLASS ATTRIBUTE TABLE           X
               $COMWORK,               PCE COMMAND WORK AREA           X
               $CMB,                   CONSOLE MESSAGE BUFFER          X
               $DCT,                   DEVICE CONTROL TABLE            X
               $DOE,                   DUMP OUTPUT ELEMENT             X
               $HASPEQU,               HASP EQUATES                    X
               $HCT,                   HASP CONTROL TABLE              X
               $JCT,                   JOB CONTROL TABLE               X
               $JOE,                   JOB OUTPUT ELEMENT              X
               $JOT,                   JOB OUTPUT TABLE                X
               $JQE,                   JOB QUEUE ENTRY                 X
               $MIT,                   MODULE IDENTIFICATION TABLE     X
               $PCE,                   PROCESSOR CONTROL ELEMENT       X
               $SCAT,                  SYSOUT CLASS ATTRIBUTE TABLE    X
               $TRP                    TRACE PARAMETER LIST
         SPACE 1
         TITLE '&TITLEID -- ENTRY CONVENTIONS'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
*                                                                     *
*        REGISTER USAGE IN THIS EXIT ROUTINE:                         *
*                                                                     *
*        R0 - R1  = RESERVED FOR MACROS                               *
*        R2 - R4  = ROUTINE WORK REGISTERS                            *
*        R8       = ADDRESS OF THE JQE                                *
*        R10      = ADDRESS OF THE JOE                                *
*        R11      = ADDRESS OF THE HCT                                *
*        R12      = ROUTINE'S BASE REGISTER                           *
*        R13      = ADDRESS OF THE HASPCOMM PCE                       *
*        R14      = RESERVED FOR MACROS (BAL)                         *
*        R15      = TEMPORARY WORK REGISTER                           *
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       = ADDR OF ADDR OF CURRENT OPERAND                   *
*        R6       = INCREMENT VALUE OF 4                              *
*        R7       = ADDR OF ADDR OF LAST OPERAND                      *
*        R11      = ADDRESS OF THE HCT                                *
*        R13      = ADDRESS OF THE HASPCOMM PCE                       *
*        R14      = RETURN ADDRESS                                    *
*        R15      = ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 1
         DROP ,
         USING HCTDSECT,R11
         USING PCEDSECT,R13
EX05UD  $ENTRY BASE=R12
         SPACE 1
        $SAVE TRACE=YES         SAVE CALLER'S REGISTERS
         LR    R12,R15          LOAD BASE REGISTER
         LA    R8,COMMAND       POINTER TO COMMAND
         SPACE 1
         TITLE '&TITLEID -- VALIDITY CHECKS'
***      CHECK FOR $UNDUMP COMMAND
*
         CLC   =C'UNDUMP ',COMVERB
         BNE   RETURN0          EXIT IF NOT OUR COMMAND
         TM    COMFLAG,CMBFLAGW COMMAND FROM REMOTE SOURCE?
         BZ    TAG010            NO, BRANCH, CONTINUE ON.
         LA    R2,ERMSG01       R2 = POINTER TO ERROR MESSAGE
         LA    R3,L'ERMSG01     R3 = LENGTH OF ERROR MESSAGE
         B     RETURN16         EXIT WITH ERROR MESSAGE
         SPACE 1
ERMSG01  DC    C'BII999---INVALID REMOTE COMMAND'
         SPACE 3
***      CHECK FOR OUTSTANDING DUMP OUTPUT ELEMENTS (DOE'S)
***       AND CANCEL REQUESTS FOR DUMPING IF NECESSARY.
*
TAG010   DS    0H
         SLR   R2,R2            R2 = ZEROS
         ICM   R3,15,$DOEPTR    R3 = A(FIRST DOE IN CHAIN)
         BZ    TAG050           BRANCH IF NO DOE'S
TAG020   DS    0H
         CS    R3,R2,$DOEPTR    REMOVE ALL DOE'S FROM CHAIN
         BNE   TAG020           TRY AGAIN IF NECESSARY
TAG030   DS    0H
         LTR   R3,R3            ANY MORE DOE'S IN CHAIN?
         BZ    TAG050            NO, BRANCH, ALL DONE.
         USING DOEDSECT,R3
         L     R4,DOECHAIN      R4 = A(NEXT DOE OR ZERO)
         DROP  R3
        $FREMAIN R,LV=DOELENTH,A=(R3)
        $CWTO MSG='PENDING DOE FREED, $DUMP WAS CANCELED',MSGID=901
         LR    R3,R4
         B     TAG030
         EJECT
***      CHECK TO SEE IF $DUMP PROCESSOR IS STILL RUNNING
*
TAG050   DS    0H
         L     R15,$DMPQPCE     POINT TO DUMP QUEUE PCE BLOCK
         USING PCEDSECT,R15
         TM    PCEEWF,$EWFWORK  IS $DUMP PROCESSOR ACTIVE?
         BO    TAG060            NO, BRANCH.
         DROP  R15
         LA    R2,ERMSG02       R2 = POINTER TO ERROR MESSAGE
         LA    R3,L'ERMSG02     R3 = LENGTH OF ERROR MESSAGE
         B     RETURN16         TRY AGAIN AT A LATER TIME
         SPACE 1
ERMSG02  DC    C'BII999---NOT FINISHED DUMPING YET, TRY AGAIN LATER'
         SPACE 3
***      MAKE SURE NO OFFLOAD OR RELOAD DEVICES ARE RUNNING
*
TAG060   DS    0H
         ICM   R3,15,$DMPDCT    R3 = A(DUMPER DEVICE CONTROL TABLE)
         BZ    TAG080            BRANCH IF NO DUMPERS ARE DEFINED
         USING DCTDSECT,R3
         L     R2,DCTPCE        R2 = A(DUMPER/LOADER DEVICE PCE)
         SLR   R4,R4            R4 = TERMINATION CONTROL
TAG070   DS    0H
         TM    DCTSTAT,DCTINUSE SPOOL OFF/RE-LOAD IN PROGRESS?
         BO    TAG090            YES, DON'T ALLOW COMMAND!
         ICM   R3,15,DCTCHAIN   END OF DCT CHAIN REACHED?
         BZ    TAG080            YES, NO SPOOL ACTIVITY.
         CL    R2,DCTPCE        END OF DUMPER/LOADER CHAIN?
         BNE   TAG080            YES, NO SPOOL ACTIVITY.
         B     TAG070            NO, CHECK THIS ONE TOO.
TAG080   DS    0H
         LTR   R4,R4            ALREADY DONE DUMPERS AND LOADERS?
         BNZ   TAG110            YES, BRANCH, NOTHING RUNNING.
         LA    R4,1
         ICM   R3,15,$LODDCT    R3 = A(LOADER DEVICE CONTROL TABLE)
         BZ    TAG110            BRANCH IF NO LOADERS ARE DEFINED,
         B     TAG070            ELSE REPEAT CHECK FOR LOADERS.
         DROP  R3
TAG090   DS    0H
         LA    R2,ERMSG03       R2 = POINTER TO ERROR MESSAGE
         LA    R3,L'ERMSG03     R3 = LENGTH OF ERROR MESSAGE
         B     RETURN16         MAKE OPERATOR POST DUMPER
         SPACE 1
ERMSG03  DC    C'BII999---SPOOL OFFLOAD/RELOAD IN PROGRESS, POST FIRST'
         SPACE 1
         TITLE '&TITLEID -- RELEASE JOBS'
***      GET EXCLUSIVE CONTROL OF SHARED QUEUES
*
TAG110   DS    0H
        $QSUSE ,
         SPACE 3
***      CHECK ALL JOBS FOR BEING IN THE DUMP QUEUE
*
         LH    R3,$JOBMIN       R3 = FIRST VALID JOB NUMBER
         LH    R4,$JOBMAX       R4 = LAST VALID JOB NUMBER
TAG120   DS    0H
        $QLOC  (R3)             DOES THIS JOB EXIST IN QUEUE?
         BZ    TAG170            NO, BRANCH, NUM NOT IN USE.
         USING JQEDSECT,R8
         LR    R8,R1            R8 = POINTER TO JOB'S JQE
*
***      GET EXCLUSIVE CONTROL OF JOB QUEUE ELEMENT (JQE)
*
        $GETLOK TYPE=JOB,JQE=(R8)
         CLI   JQETYPE,$DUMPQ   IS JOB ON DUMP QUEUE?
         BNE   TAG130            NO, CHECK SYSOUT.
*
***      PLACE JQE BACK ON THE EXECUTION QUEUE
*
        $QPUT  (R8),$XEQ
         SPACE 3
***      CHECK ALL SYSOUT FOR BEING ON THE DUMP QUEUE
*
TAG130   DS    0H
         L     R10,JQEJOE       R10 = OFFSET OF FIRST JOE
TAG140   DS    0H
         N     R10,$ZEROFFF     END OF JOE CHAIN REACHED?
         BZ    TAG160            YES, BRANCH.
         AL    R10,$JOTABLE     R10 = A(WORK JOE)
         USING JOEDSECT,R10
         TM    JOEFLAG2,$JOEDUMP  JOE FLAGGED FOR DUMP?
         BZ    TAG150              NO, BRANCH.
*
***      PLACE JOE BACK ON THE SYSOUT QUEUE
*
         NI    JOEFLAG2,X'FF'-$JOEDUMP
         LR    R2,R10           R2 = A(JOE TO BE MOVED)
         L     R10,JOEJQNXT     R10 = OFFSET OF NEXT JOE
        $#MOD  JOE=(R2)         QUEUE JOE BACK TO SYSOUT
         B     TAG140           CHECK NEXT JOE IN CHAIN
         SPACE 1
TAG150   DS    0H
         L     R10,JOEJQNXT     R10 = OFFSET OF NEXT JOE
         B     TAG140           CHECK NEXT JOE IN CHAIN
         DROP  R10
         SPACE 3
***      RELEASE EXCLUSIVE CONTROL OF JQE
*
TAG160   DS    0H
        $FRELOK TYPE=JOB,JQE=(R8)
         DROP  R8
TAG170   DS    0H
         AH    R3,=H'1'         INCRAMENT TO NEXT JOB NUMBER
         CLR   R3,R4            END OF JOB NUMBERS REACHED?
         BNH   TAG120            NO, BRANCH, CHECK IT OUT.
         SPACE 3
***      LET USER KNOW WE ARE ALL DONE
*
        $CWTO MSG='UNDUMP COMMAND COMPLETED',MSGID=902
         B     RETURN12         RETURN, W/ HASP "OK".
         SPACE 1
         TITLE '&TITLEID -- EXIT'
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
         SPACE     1
RETURN0  DS    0H
        $RETURN  RC=0,TRACE=YES    RETURN TO JES2
RETURN4  DS    0H
        $RETURN  RC=4,TRACE=YES    RETURN TO JES2
RETURN8  DS    0H
        $RETURN  RC=8,TRACE=YES    RETURN TO JES2
RETURN12 DS    0H
        $RETURN  RC=12,TRACE=YES   RETURN TO JES2
RETURN16 DS    0H
         MVI   COMMAND,X'40'    BLANK OUT MESSAGE AREA
         MVC   COMMAND+1(255),COMMAND
         LR    R0,R3
        $STORE R0               R0 = LENGTH OF MESSAGE
         BCTR  R3,0             R3 = EXECUTABLE LENGTH
         EX    R3,RETURNEX
RETURNEX MVC   COMMAND(0),0(R2) + EXECUTED +
        $RETURN  RC=16,TRACE=YES   RETURN TO JES2
         SPACE 1
         TITLE '&TITLEID -- LITERALS'
***********************************************************************
*                                                                     *
*        LITERALS AND CONSTANTS                                       *
*                                                                     *
***********************************************************************
         LTORG
         SPACE 1
         TITLE '&TITLEID -- WORK AREAS'
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREAS                                           *
*                                                                     *
***********************************************************************
         SPACE 1
UDMPWORK DS    0XL128
         DS    XL128            AVAILABLE
         SPACE 1
         TITLE '&TITLEID'
         $MODEND ,
         SPACE     3
         END
