//XSPRBWW3 JOB  (SP,9030,0000000),'WESTERMAN   - BOX 3',
//         CLASS=H,MSGCLASS=S,TIME=5,
//         NOTIFY=XSPRBWW,REGION=4096K TYPRUN=HOLD
//*
//ASM      EXEC  PGM=IEV90,PARM=OBJECT,REGION=200K
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DSN=SYS4.ACF510.ACFMAC,DISP=SHR
//         DD  DSN=XSPRBWW.POSSIBLE.MODS,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5)),DSN=&&SYSUT1
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5)),
//             DSN=&&SYSUT2
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5)),DSN=&&SYSUT3
//SYSPUNCH DD  DUMMY,DCB=(LRECL=80,BLKSIZE=80,RECFM=FB)
//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1089
//SYSLIN   DD  DISP=(MOD,PASS),UNIT=SYSSQ,SPACE=(CYL,(5,5,0)),
//             DSN=&&OBJSET,DCB=BLKSIZE=400
//SYSIN    DD  *
DADSM    TITLE 'IGGPRE00 - ROUINE FOR ALL DADSM EXIT FUNCTIONS'
***********************************************************************
* I G G P R E 0 0  - DADSM EXIT ROUTINE FOR IGGPRE00/IGGPOST0         *
*                                                                     *
* FUNCTION - THIS ROUTINE PERFORMS ALL FUNCTIONS FOR THE IGGPRE00     *
*                                                                     *
* ATTRIBUTES:  RENT, REUS, REFR, KEY 0, SUPERVISOR STATE, AMODE=ANY,  *
*              RMODE=24.                                              *
*                                                                     *
* ENTRY ENVIRONMENT:                                                  *
*     R0=0 IF A PREPROCESSING EXIT IS BEING TAKEN,                    *
*     R0=4 IF A POSTPROCESSING EXIT IS BEING TAKEN.                   *
*     AMODE=31 ON ENTRY.                                              *
*     R1=ADDRESS OF PREPL, THE DADSM EXIT PARAMETER LIST.             *
*     R13=SAVE AREA ADDRESS                                           *
*     R14=RETURN ADDRESS                                              *
*     R15=ENTRY POINT ADDRESS                                         *
*                                                                     *
* EXIT ENVIRONMENT:                                                   *
*     R0-R14=SAME AS WHEN ENTERED.                                    *
*     R15=0 TO ALLOW FUNCTION ON CURRENT VOLUME,                      *
*     R15=4 TO DISALLOW FUNCTION ON CURRENT VOLUME BUT ALLOW DADSM    *
*           PROCESSING TO CONTINUE WITH OTHER VOLUMES, OR             *
*     R15=8 TO DISALLOW FUNCTION ON CURRENT VOLUME AND ABORT DADSM    *
*           PROCESSING.                                               *
*                                                                     *
* REASON CODES GIVEN:                                                 *
*     REASON=0004 - TEMPORARY DATA SET ALLOCATION ATTEMPTED, BUT      *
*           THE CURRENT VOLUME HAS BEEN DEFINED TO EXCLUDE TEMPORARY  *
*           DATA SET ALLOCATIONS (ONLY GIVEN ON "ALLOCATE" CALLS).    *
*                                                                     *
*     REASON=0008 - DATA SET NAME IS INVALID; THE HIGH LEVEL          *
*           QUALIFIER IS IN THE "EXCLUDE" LIST OR IS NOT IN THE       *
*           "INCLUDE" LIST, EITHER FOR THE CURRENT VOLUME OR THE      *
*           GLOBAL LIST.                                              *
*                                                                     *
*     REASON=000C - THE VOLUME IS DEFINED AS BEING ACF2-PROTECTED,    *
*           AND THE USER IS NOT AUTHORIZED TO PERFORM THE SPECIFIED   *
*           FUNCTION.                                                 *
*                                                                     *
*  ONLY ALLOCATE AND RENAME CALLS ARE EXAMINED.                       *
*                                                                     *
*  WRITTEN ON 09/10/88 BY BRIAN WESTERMAN -  BRIPER INDUSTRIES        *
*                                            SYSTEMS CONSULTING       *
*  UPDATE HISTORY:                                                    *
*    02/25/89  BHW - ADDED CODE FOR ACF2 CHECKS                       *
*    12/09/89  BHW - ADDED SPECIAL CODE FOR ALCATEL                   *
*                                                                     *
***********************************************************************
         EJECT
IGGPRE00 CSECT
         CONNECT  WORKSIZE,WORK,BASE=R12,PARM=R2,R0=R3,CLEAR=YES,      X
               AMODE=ANY,RMODE=24,LOC=BELOW,COPYRT=1988
         USING PREPL,R2            ADDRX. OF PARM LIST
         MVI   CURRDSN,C' '
         MVC   CURRDSN+1(L'CURRDSN-1),CURRDSN
         CLI   IEXFUNC,IEXALL      TEST FUNCTION:  ALLOCATE?
         BE    ALLOC8
         CLI   IEXFUNC,IEXREN      TEST FUNCTION:  RENAME?
         BE    RENAME
         B     RETN00              ELSE ALLOW NORMAL PROCESSING.
         EJECT
ALLOC8   DS    0H                  ALLOCATE A NEW DATASET.
         TM    IEXFLAG,IEXVIO
         BO    RETN00              IF NO UCB, IT IS A VIO, SO O.K.
*
         L     R10,IEXPTR1            LOAD ADDRESS OF JFCB
         USING INFMJFCB,R10           ESTABLISH ADDRESSABILITY
         TM    JFCBIND2,JFCTEMP       IS THIS A TEMP DATASET
         BO    RETN00                 YES THEN EXIT RC = 0
*
         L     R3,IEXDSN              GET ADDRESS OF DSNAME
*
CONCHECK EQU   *                      CONTINUE PROCESSING
*
         L     R11,IEXUCB             LOAD ADDRESS OF UCB
         USING UCBOB,R11              ESTABLISH ADDRESSABILITY
         MVC   WKVOLID(6),UCBVOLI     SAVE VOLUME SERIAL
         CLI   UCBVOLI+3,C'6'         IS THIS A SCRATCH PACK R--6--
         BE    RETN00                 YES THEN EXIT RC = 0
         CLC   UCBVOLI(2),=C'R1'      VOL SER USING CURRENT STANDARD
         BNE   RETN00                 NO THEN EXIT
*
ACF2STUF EQU   *
         ACFGACVT R9,NONE=RETURN01 GET ACFCVT
         USING ACCVT,R9
         ACFGUCB R8,NONE=RETURN02  GET ACFUCB
         USING ACUCB,R8
         XR    R15,R15             CLEAR R15
         CLC   ACULID(7),=C'XSPRDBG'   SPECIAL ID ?
         BE    RETN00              YES -- ALWAYS ALLOW CALL.
         CLC   ACULID(6),=C'PEPPER'   SPECIAL ID ?
         BE    RETN00              YES -- ALWAYS ALLOW CALL.
         MVC   WKUID(7),ACULID     SAVE USERID FOR LATER
         MVC   CURRDSN,0(R3)       SAVE CURRENT DATA SET NAME
         B     ALOC002A            COMMENT OUT IF TESTING
         WTO   MF=(E,WTODBG1)
         MVC   WTOPARM(WTODSNL),WTODSN
         MVC   WTOPARM+WTODSNI(L'WTODSNI),WTODBG1+WTODSNI
         MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
         WTO   MF=(E,WTOPARM)
ALOC002A DS    0H
         SR    R5,R5               CLEAR REG 5
         DROP  R9
         DROP  R8
         LR    R4,R3                  REG 4 :=A(DSNAME)
LOOP1    CLI   0(R4),C' '             END OF DSNAME
         BE    ENDLOOP1               YES THEN END LOOP
         CLI   0(R4),C'.'             END OF FIRST NODE
         BE    ENDLOOP1               YES THEN END LOOP
         LA    R4,1(R4)               POINT TO NEXT CHARACTER
         B     LOOP1                  GO AROUND AGAIN
*
ENDLOOP1 EQU   *
         LA    R4,1(R4)               START OF SECOND NODE (IF ANY)
*
ENDLOOP2 EQU   *
*
*                                     REG 3  = A(DSNAME)
*                                     REG 4  = A(START OF SECOND NODE)
*
         CLI   0(R3),C'X'             FIRST CHAR OF DSNAME = X
         BNE   NONTSO                 NO THEN NOT TSO DATASET
*                                     ELSE PERFORM TSO CHECKING
         EJECT
**********************************************************************
**                                                                  **
**                                                                  **
**       CHECK THE TABLE OF TSO IDS AGAINST THE HIGH LEVEL NODE     **
**       OF THE DATASET. THE TABLE IS IN THE FORMAT                 **
**                                                                  **
**                                                                  **
**               XXXXXXXXN                                          **
**                                                                  **
**        WHERE   XXXXXXXX IS THE HIGH LEVEL NODE                   **
**                N        IS THE APPLICATION CODE (AND IS ALSO     **
**                         THE 4TH CHARACTER OF THE VOLUME NAME     **
**                                                                  **
**        THE HIGH LEVEL NODES IN THE TABLE CONTAINS * IN           **
**        THE ANY CHARACTER TO INDICATE A WILDCARD CHARACTER        **
**        ANY CHARACTER IS VALID IN A COMPARISON TO A WILDCARD      **
**        AND IT CAN APPEAR ANY WHERE IN THE NODE. IF A WILDCARD    **
**        CHARACTER IS USED THEN NO SPECIFIC CHARACTER CAN BE USED  **
**        IN THE SAME POSITION. THE FIRST WORD OF THE TABLE         **
**        CONTAINS THE ADDRESS OF THE LAST ENTRY OF THE TABLE.      **
**        THE LAST TABLE ENTRY IS ALL '*' AND HAS AN APPLICATION    **
**        CODE OF 7 WHICH IS WHERE ALL MISC AND UNDEFINED FILES     **
**        ARE TO BE ALLOCATED.                                      **
**                                                                  **
**                                                                  **
**********************************************************************
         SPACE 3
         LOAD  EP=TSOTABL,ERRET=ERREXIT
*                                     LOAD TABLE OF TSO DATASETS
*                                     REG 0 CONTAINS THE ADDRESS
*                                     REG 1 CONTAINS THE LENGTH
         B     SRCHTAB
NONTSO   EQU   *
         LOAD  EP=NODTABL,ERRET=ERREXIT
*                                     LOAD TABLE OF NON TSO DATASETS
*                                     REG 0 CONTAINS THE ADDRESS
*                                     REG 1 CONTAINS THE LENGTH
SRCHTAB  EQU   *
         LR    R6,R0                  SAVE THE ADDRESS OF THE TABLE
         L     R9,0(R6)               GET ADDRESS OF END OF TABLE
         LA    R6,4(R6)               GET ADDRESS OF FIRST ENTRY
LOOP3    EQU   *                      REPEAT UNTIL END OF TABLE OR
*                                     UNTIL THE LAST ENTRY IS REACHED
         LR    R7,R6                  SAVE ADDRESS OF ENTRY
         CLC   0(4,R7),=C'****'       IS IT LAST ENTRY
         BE    ENDLOOP3               YES THEN END LOOP
*
         LR    R8,R3                  GET ADDRESS OF DSNAME
LOOP4    EQU   *
         CLI   0(R8),C'.'             END OF FIRST NODE
         BE    ENDLOOP3               YES EXIT LOOPS  MATCH FOUND
         CLI   0(R8),C' '             END OF NODE
         BE    ENDLOOP3               YES EXIT LOOP   MATCH FOUND
*
         CLI   0(R7),C'*'             IS IT A WILDCARD CHARACTER
         BE    MATCHCH                YES THEN CHARACTER MATCHES
         CLC   0(1,R7),0(R8)          COMPARE CHARACTERS
         BE    MATCHCH                CHARACTERS MATCH
         BH    NOMATCH                TABLE GT DSNAME CHAR
         B     ENDLOOP4               TABLE LT DSNAME CHAR
*
MATCHCH  LA    R7,1(R7)               GET NEXT TABLE CHAR
         LA    R8,1(R8)               GET NEXT TABLE CHAR
         B     LOOP4                  CHECK THESE CHARACTERS
*
ENDLOOP4 EQU   *
         LA    R6,9(R6)               GET NEXT TABLE ENTRY
         B     LOOP3
*
NOMATCH  LR    R6,R9                  POINT TO LAST TABLE ENTRY
*
ENDLOOP3 EQU   *                      R6 POINTS TO THE THE ENTRY
*                                     THAT MATCHES OR THE LAST ENTRY
         CLI   8(R6),C'2'             IS IT A RALEIGH/JC FILE
         BNE   COMPARE                NO THEN CONTINUE PROCESSING
         CLC   0(2,R4),=C'X.'         IS IT A USER FILE           DBG7
         BE    TESTPACK                                           DBG7
         CLC   0(2,R4),=C'T.'         IS IT A TEST FILE
         BE    TESTPACK                                           FJD5
         CLC   0(5,R4),=C'SCDB.'      IS IT A SC DB FILE          FJD5
         BE    TESTPACK                                           FJD5
         B     COMPARE                NO THEN CONTINUE PROCESSING FJD5
TESTPACK CLI   WKVOLID+3,C'3'         YES THEN APPL CODE IS 3 NOT 2
         BE    DELTABLE
         L     R5,=F'4'               NO THEN SET RETURN CODE OF 4
         B     DELTABLE
*
*
COMPARE  EQU   *
         CLC   8(1,R6),WKVOLID+3      DO APPLICATION CODES MATCH
         BE    DELTABLE
         CLI   8(R6),C'*'             IS IT A WILD CARD CHARACTER
         BE    DELTABLE
         L     R5,=F'4'               SET RETURN CODE OF 4
         B     DELTABLE
*
*
*
*
*---------------------------------------------------------------------
*               ERRORS AND RETURN (ERROR HANDLING)
*---------------------------------------------------------------------
RETURN01 EQU   *
         WTO   'IGGPRE00: ACF2 CVT NOT FOUND',ROUTCDE=11
         B     RETN00                  TESTING PURPOSES
*****    B     CONTIN
RETURN02 EQU   *
         WTO   'IGGPRE00: ACF2 UCB NOT FOUND',ROUTCDE=11
         B     RETN00                  TESTING PURPOSES
******   B     CONTIN
*
         EJECT
DELTABLE EQU   *                       DELETE THE TABLE
*
         CLI   0(R3),C'X'             FIRST CHAR OF DSNAME = X
         BNE   DELNTSO                NO THEN NOT TSO DATASET
*
         DELETE EP=TSOTABL            DELETE TSOTABLE
         B     EXIT
*
DELNTSO  DELETE EP=NODTABL            DELETE NON TSO TABLE
         B     EXIT
*
*
         EJECT
RENAME   DS    0H
         L     R6,IEXPTR1          GET USER RENAME PARM LIST
         USING RENDSECT,R6
         L     R3,NEWNAME
         B     ALLOC8
         EJECT
EXIT     C     R5,=F'4'
         BNE   RETN00
*        WTO   MF=(E,WTODBG2)
*        MVC   WTOPARM(WTODSNL),WTODSN
*        MVC   WTOPARM+WTODSNI(L'WTODSNI),WTODBG1+WTODSNI
*        MVC   WTOPARM+WTODSNA(L'CURRDSN),CURRDSN
*        WTO   MF=(E,WTOPARM)
         LR    R15,R5
         SR    R5,R5               CLEAR REG 5
         B     RETURN
ERREXIT  EQU   *
         WTO   'ERROR LOADING TABLE MODULE(S)',ROUTCDE=(2,11)
RETN00   DS    0H
         SR    R15,R15
RETURN   DS    0H
         RELEASE  WORKSIZE,RC=(R15)
         EJECT
WTODSN   WTO   'MMMMMMM  DSN=----+----1----+----2----+----3----+----4--X
               --  ',ROUTCDE=(11),DESC=(7),MF=L
WTODSNL  EQU   *-WTODSN
WTODSNI  EQU   4,7,C'C'
WTODSNA  EQU   17,44,C'C'
WTODBG1  WTO   'BII699I  DADSM DEBUG - FUNCTION CALLED IS: ALLOCATE  ',X
               ROUTCDE=(11),DESC=(7),MF=L
WTODBG2  WTO   'BII699I  DADSM VIOLATION - DATASET WILL NOT BE ALLOCATEX
               D',ROUTCDE=(11),DESC=(7),MF=L
         LTORG
WORK     DSECT
REGSAVE  DS    18F
SUBSAVE  DS    18F
PFXPARM  DS    2A
GBLADDR  DS    A
VOLENTRY DS    A
WKVOLID  DS    CL6
WKUID    DS    CL8
WTOPARM  WTO   '----+----1----+----2----+----3----+----4----+----5----+X
               ----6----+----7----+----8',                             X
               ROUTCDE=(11),DESC=(7),MF=L
*
CURRDSN  DS    CL44
         DS    0D
WORKSIZE EQU   *-WORK
         EJECT
RENDSECT DSECT                        RENAME DSECT
         DS    0H
         DS    F
OLDNAME  DS    F                      ADDRESS OF OLD NAME
NEWNAME  DS    F                      ADDRESS OF NEW NAME
         EQUREGS
         PRINT NOGEN
JFCB     DSECT                        JFCB DSECT GENERATES A NAME
         IEFJFCBN                     OF INFMJFCB
*
*        UCB DSECT                    UCB DSET GENERATES A NAME OF
*                                     UCBOB
         IEFUCBOB LIST=YES,PREFIX=YES
*
         PRINT GEN
         IECIEXPL
         PRINT NOGEN
         ACCVT
         ACUCB
         ACFASVT
         END   IGGPRE00
/*
/*
//L EXEC PGM=IEWL,
//       PARM='MAP,LET,LIST,RENT,REUS,REFR,AMODE=ANY,RMODE=24',
//           COND=(4,LT,ASM),REGION=96K
//SYSLIN  DD  DSN=&&OBJSET,DISP=(OLD,DELETE)
//        DD  DDNAME=SYSIN
//SYSLMOD DD DSN=ALCATEL.LINKLIB(IGGPRE00),DISP=SHR
//SYSUT1  DD  SPACE=(CYL,(3,2)),DSN=&&SYSUT1,
//        UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD))
//SYSPRINT DD SYSOUT=*
//SYSIN   DD  *
 INCLUDE ACFLIB($ACFGCVT)
 INCLUDE ACFLIB(ACF00GCB)
//ACFLIB  DD DSN=SYS4.ACF510.ACFMOD,DISP=SHR
//
